source_filename = "test"
target datalayout = "E-p:32:32:32-f80:32:32"

%0 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }

@r1 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r9 = internal unnamed_addr global i32 0
@r11 = internal unnamed_addr global i32 0
@r17 = internal unnamed_addr global i32 0
@r21 = internal unnamed_addr global i32 0
@r22 = internal unnamed_addr global i32 0
@r23 = internal unnamed_addr global i32 0
@r24 = internal unnamed_addr global i32 0
@r25 = internal unnamed_addr global i32 0
@r26 = internal unnamed_addr global i32 0
@r27 = internal unnamed_addr global i32 0
@r28 = internal unnamed_addr global i32 0
@r29 = internal unnamed_addr global i32 0
@r30 = internal unnamed_addr global i32 0
@r31 = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@global_var_100000a4.1 = constant i32 1208003229
@global_var_1001b2cc.3 = global i32 0
@global_var_1001b2dc.4 = local_unnamed_addr global i32* @global_var_1001b2cc.3
@global_var_1001b4b8.6 = global i32 0
@global_var_10000584.7 = constant [3 x i8] c";{\00"
@global_var_100005a4.8 = constant i32 939524096
@global_var_1001b444.10 = local_unnamed_addr global i32 0
@global_var_1001b448.12 = local_unnamed_addr global i32 0
@global_var_10000fcc.13 = constant i32 939524096
@global_var_10001584.14 = constant i32 939524096
@global_var_10001888.15 = constant [3 x i8] c"8`\00"
@global_var_10001908.16 = constant [3 x i8] c"8`\00"
@global_var_10001c58.17 = constant i32 939524096
@global_var_1000203c.18 = constant i32 939524096
@global_var_10002260.19 = constant i32 939524096
@global_var_1000260c.20 = constant i32 939524104
@global_var_10002630.21 = constant [3 x i8] c"9 \00"
@global_var_1000294c.22 = constant i32 939524096
@global_var_1000296c.23 = constant i32 939524096
@global_var_1000304c.24 = constant i32 939524096
@global_var_1000378c.25 = constant [3 x i8] c"8`\00"
@global_var_10003c34.26 = constant [3 x i8] c"9!\00"
@global_var_1001b44c.27 = local_unnamed_addr global i32 0
@global_var_10003ea4.28 = constant [3 x i8] c"8`\00"
@global_var_10003eac.29 = constant [3 x i8] c"8`\00"
@global_var_10003eb4.30 = constant [3 x i8] c"8`\00"
@global_var_10003fb4.31 = constant i32 956301312
@global_var_1000abcc.32 = constant i32 788529152
@global_var_10004300.33 = constant [3 x i8] c"8`\00"
@global_var_10004308.34 = constant [3 x i8] c"8`\00"
@global_var_10004310.35 = constant [3 x i8] c"8`\00"
@global_var_10004318.36 = constant [3 x i8] c"8`\00"
@global_var_10004320.37 = constant [3 x i8] c"8`\00"
@global_var_1000438c.38 = constant [3 x i8] c"8`\00"
@global_var_10004394.39 = constant [3 x i8] c"8`\00"
@global_var_1000439c.40 = constant [3 x i8] c"8`\00"
@global_var_100044c0.41 = constant i32 939524096
@global_var_1001b450.42 = local_unnamed_addr global i32 0
@global_var_1001b454.43 = local_unnamed_addr global i32 0
@global_var_10004500.44 = constant i32 1207976913
@global_var_100045a0.45 = constant [3 x i8] c"8`\00"
@global_var_100045ec.46 = constant [3 x i8] c"8`\00"
@global_var_100045f4.47 = constant [3 x i8] c"8`\00"
@global_var_10004654.48 = constant i32 1207973433
@global_var_100046c4.49 = constant [3 x i8] c"8`\00"
@global_var_1001b428.50 = local_unnamed_addr global i32 268468112
@global_var_1000478c.51 = constant i32 1006680485
@global_var_1001b520.52 = global i32 0
@global_var_1001b524.53 = local_unnamed_addr global i32 0
@global_var_1001b522.54 = local_unnamed_addr global i32 0
@global_var_1001b420.55 = local_unnamed_addr global i32 -1
@global_var_1000495c.57 = constant [3 x i8] c"8`\00"
@global_var_1000496c.58 = constant [3 x i8] c"8`\00"
@global_var_1001b458.59 = local_unnamed_addr global i32 0
@global_var_10004a08.60 = constant [3 x i8] c"8`\00"
@global_var_10004a64.61 = constant [3 x i8] c"8`\00"
@global_var_10004a9c.62 = constant [3 x i8] c"8`\00"
@global_var_10004aa4.63 = constant [3 x i8] c"8`\00"
@global_var_10004b60.64 = constant i32 1207972913
@global_var_10004b9c.65 = constant i32 1207961357
@global_var_10004bb8.66 = constant [3 x i8] c";a\00"
@global_var_10004c1c.67 = constant i32 1207961149
@global_var_10004c70.68 = constant [3 x i8] c"8`\00"
@global_var_1000abd0.69 = constant i32 167772160
@global_var_10004ca8.70 = constant [3 x i8] c"8`\00"
@global_var_10004cbc.71 = constant i32 1207973721
@global_var_10004d5c.72 = constant [3 x i8] c":`\00"
@global_var_10004d6c.73 = constant [3 x i8] c"8`\00"
@global_var_10004d74.74 = constant [3 x i8] c"8`\00"
@global_var_1001b424.75 = local_unnamed_addr global i32 -1
@global_var_10004f34.77 = constant i32 939589631
@global_var_10004fec.78 = constant i32 939589631
@global_var_100050c0.79 = constant i32 939589631
@global_var_100050cc.80 = constant i32 1006685388
@global_var_10005104.81 = constant i32 1207961757
@global_var_1000510c.82 = constant [3 x i8] c"|q\00"
@global_var_1000abd4.83 = constant i32 1
@global_var_100051b4.84 = constant i32 939589631
@global_var_1001b4dc.85 = local_unnamed_addr global i32 0
@global_var_1001b4d0.86 = local_unnamed_addr global i32 0
@global_var_1001b4d8.87 = local_unnamed_addr global i32 0
@global_var_1001b4d4.88 = local_unnamed_addr global i32 0
@global_var_1000abdc.89 = constant [23 x i8] c"g1abc4dmo35hnp2lie0kjf\00"
@global_var_100054f0.96 = constant [3 x i8] c"9A\00"
@global_var_10005574.97 = constant i32 939524096
@global_var_100055a8.98 = constant i32 1006665728
@global_var_100055d4.99 = constant i32 939524098
@global_var_1000561c.100 = constant [3 x i8] c"8`\00"
@global_var_10005690.101 = constant i32 939524128
@global_var_1000573c.102 = constant [3 x i8] c"8c\00"
@global_var_1001b478.103 = local_unnamed_addr global i32 0
@global_var_1001b46c.104 = local_unnamed_addr global i32 0
@global_var_1001b460.105 = local_unnamed_addr global i32 0
@global_var_1001b464.106 = local_unnamed_addr global i32 0
@global_var_10005d4c.108 = constant [3 x i8] c"8`\00"
@global_var_10005d68.109 = constant i32 939524096
@global_var_1001b470.110 = local_unnamed_addr global i32 0
@global_var_1001b474.111 = local_unnamed_addr global i32 0
@global_var_1001b4e0.112 = global i32 0
@global_var_1001b4f4.113 = global i32 0
@global_var_1000ad74.114 = constant i32 0
@global_var_1001b4e2.115 = local_unnamed_addr global i32 0
@global_var_1001b500.116 = local_unnamed_addr global i32 0
@global_var_1001b4e8.117 = local_unnamed_addr global i32 0
@global_var_1001b4e9.118 = local_unnamed_addr global i32 0
@global_var_1001b4e4.119 = local_unnamed_addr global i32 0
@global_var_1000adf0.120 = constant [5 x i8] c"PMMV\00"
@global_var_1000abf4.122 = constant i32 391598592
@global_var_1001b502.123 = local_unnamed_addr global i32 0
@global_var_1000ac00.124 = constant i32 320017171
@global_var_1000ac0c.125 = constant i32 319820054
@global_var_1000ac14.126 = constant i32 319820054
@global_var_1000ac1c.127 = constant i32 319820054
@global_var_1000abf8.128 = constant i32 55594317
@global_var_1000ac38.129 = constant i32 319820054
@global_var_1000ac70.130 = constant i32 318767104
@global_var_1000ac08.131 = constant i32 319815680
@global_var_1000ac64.132 = constant [8 x i8] c"FGDCWNV\00"
@global_var_1000ac24.133 = constant [7 x i8] c"CLVQNS\00"
@global_var_1000ac2c.134 = constant i32 319820054
@global_var_1000aca4.135 = constant [6 x i8] c"CFOKL\00"
@global_var_1000ac44.136 = constant i32 303174162
@global_var_1000ac4c.137 = constant i32 303174162
@global_var_1000acac.138 = constant [5 x i8] c"RCQQ\00"
@global_var_1000ac58.139 = constant i32 319820054
@global_var_1000ac6c.140 = constant i32 387322128
@global_var_1000accc.141 = constant [9 x i8] c"RCQQUMPF\00"
@global_var_1000ac74.142 = constant [7 x i8] c"XNZZ\0C\22\00"
@global_var_1000ac7c.143 = constant [6 x i8] c"HT@XF\00"
@global_var_1000acf0.144 = constant i32 358041711
@global_var_1000ac84.145 = constant [5 x i8] c"CLIM\00"
@global_var_1000ac8c.146 = constant [8 x i8] c"ZOJFKRA\00"
@global_var_1000ac94.147 = constant i32 1514213655
@global_var_1000ac9c.148 = constant [6 x i8] c"TKXZT\00"
@global_var_1000acb4.149 = constant [8 x i8] c"CLVQNS\22\00"
@global_var_1000acbc.150 = constant i32 1701779987
@global_var_1000acc4.151 = constant i32 437918234
@global_var_1000acd8.152 = constant i32 319951379
@global_var_1000ace4.153 = constant i32 1247235158
@global_var_1000ad00.154 = constant [11 x i8] c"QWRGPTKQMP\00"
@global_var_1000ad0c.155 = constant i32 1482376006
@global_var_1000ad18.156 = constant i32 320017171
@global_var_1000ad20.157 = constant i32 269488144
@global_var_1000ad9c.158 = constant [8 x i8] c"QWRRMPV\00"
@global_var_1000ad28.159 = constant [14 x i8] c"cFOKLKQVPCVMP\00"
@global_var_1000ad38.160 = constant [14 x i8] c"CFOKLKQVPCVMP\00"
@global_var_1000ad48.161 = constant [6 x i8] c"cFOKL\00"
@global_var_1000ad50.162 = constant [4 x i8] c"CFO\00"
@global_var_1000ad54.163 = constant [9 x i8] c"QOACFOKL\00"
@global_var_1000ad60.164 = constant i32 1128681291
@global_var_1000ad6c.165 = constant i32 1128681291
@global_var_1000ad78.166 = constant i32 1128284435
@global_var_1000ad80.167 = constant i32 1094931987
@global_var_1000ad8c.168 = constant i32 1329926423
@global_var_1000ad94.169 = constant [7 x i8] c"OGPNKL\00"
@global_var_1000ada4.170 = constant [5 x i8] c"WQGP\00"
@global_var_1000adac.171 = constant [6 x i8] c"EWGQV\00"
@global_var_1000adb4.172 = constant [7 x i8] c"FCGOML\00"
@global_var_1000adbc.173 = constant [4 x i8] c"@KL\00"
@global_var_1000adc0.174 = constant [7 x i8] c"VGNLGV\00"
@global_var_1000adc8.175 = constant [9 x i8] c"MRGPCVMP\00"
@global_var_1001b4ec.176 = local_unnamed_addr global i32 0
@global_var_1000adf8.177 = constant i32 -17492
@global_var_1001b4f0.178 = local_unnamed_addr global i32 0
@global_var_1001b4ea.179 = local_unnamed_addr global i32 0
@global_var_1001b504.180 = local_unnamed_addr global i32 0
@global_var_1001b4f8.181 = local_unnamed_addr global i32 0
@global_var_10006770.182 = constant i32 939524096
@global_var_10006910.183 = constant [3 x i8] c"8`\00"
@global_var_10006aec.187 = constant [3 x i8] c"8`\00"
@global_var_1001b530.209 = global i32 0
@global_var_1001b42c.210 = local_unnamed_addr global i32 -555810886
@global_var_1000ae34.211 = constant [3 x i8] c"E:\00"
@global_var_100078e8.212 = constant [3 x i8] c"8`\00"
@global_var_1001b540.213 = local_unnamed_addr global i32 0
@global_var_1001b544.214 = local_unnamed_addr global i32 0
@global_var_1000ae38.215 = constant [18 x i8] c"<?<7$,+k!!+6k+ 1E\00"
@global_var_1000790c.216 = constant [3 x i8] c"8`\00"
@global_var_1001b5e8.217 = local_unnamed_addr global i32 0
@global_var_1001b5ec.218 = local_unnamed_addr global i32 0
@global_var_1000ae4c.219 = constant i32 -23068672
@global_var_10007930.220 = constant [3 x i8] c"8`\00"
@global_var_1001b5f0.221 = local_unnamed_addr global i32 0
@global_var_1001b5f4.222 = local_unnamed_addr global i32 0
@global_var_1000ae50.223 = constant [59 x i8] c"\22*6-e1-$1e&-,+ 6 e#$(,)<e$1e1- e*1- 7e1$') e607 e$1 e$)*1E\00"
@global_var_10007954.224 = constant i32 939524154
@global_var_1001b53c.225 = local_unnamed_addr global i32 0
@global_var_1001b538.226 = local_unnamed_addr global i32 0
@global_var_1000ae8c.227 = constant [7 x i8] c"6- ))E\00"
@global_var_1000797c.228 = constant [3 x i8] c"8`\00"
@global_var_1001b5b0.229 = local_unnamed_addr global i32 0
@global_var_1001b5b4.230 = local_unnamed_addr global i32 0
@global_var_1000ae94.231 = constant [8 x i8] c" +$') E\00"
@global_var_100079a4.232 = constant [3 x i8] c"8`\00"
@global_var_1001b5b8.233 = local_unnamed_addr global i32 0
@global_var_1001b5bc.234 = local_unnamed_addr global i32 0
@global_var_1000ae9c.235 = constant [8 x i8] c"6<61 (E\00"
@global_var_100079c8.236 = constant [3 x i8] c"8`\00"
@global_var_1001b5c0.237 = local_unnamed_addr global i32 0
@global_var_1001b5c4.238 = local_unnamed_addr global i32 0
@global_var_1000aea4.239 = constant [4 x i8] c"6-E\00"
@global_var_100079ec.240 = constant i32 939524099
@global_var_1001b5d4.241 = local_unnamed_addr global i32 0
@global_var_1001b5d0.242 = local_unnamed_addr global i32 0
@global_var_1000aea8.243 = constant i32 1780952107
@global_var_10007a14.244 = constant i32 939524116
@global_var_1001b5cc.245 = local_unnamed_addr global i32 0
@global_var_1001b5c8.246 = local_unnamed_addr global i32 0
@global_var_1000aec0.247 = constant i32 134485520
@global_var_10007a3c.248 = constant i32 939524121
@global_var_1001b5dc.249 = local_unnamed_addr global i32 0
@global_var_1001b5d8.250 = local_unnamed_addr global i32 0
@global_var_1000aedc.251 = constant [10 x i8] c"+&*77 &1E\00"
@global_var_10007a64.252 = constant i32 939524105
@global_var_1001b5e4.253 = local_unnamed_addr global i32 0
@global_var_1001b5e0.254 = local_unnamed_addr global i32 0
@global_var_1000aee8.255 = constant [17 x i8] c"j',+j'06<'*=e56E\00"
@global_var_10007a8c.256 = constant i32 939524112
@global_var_1001b5fc.257 = local_unnamed_addr global i32 0
@global_var_1001b5f8.258 = local_unnamed_addr global i32 0
@global_var_1000aefc.259 = constant [23 x i8] c"j',+j'06<'*=e.,))eh|jE\00"
@global_var_10007ab4.260 = constant i32 939524118
@global_var_1001b604.261 = local_unnamed_addr global i32 0
@global_var_1001b600.262 = local_unnamed_addr global i32 0
@global_var_1000af14.263 = constant [8 x i8] c"j57*&jE\00"
@global_var_10007adc.264 = constant [3 x i8] c"8`\00"
@global_var_1001b548.265 = local_unnamed_addr global i32 0
@global_var_1001b54c.266 = local_unnamed_addr global i32 0
@global_var_1000af1c.267 = constant [6 x i8] c"j = E\00"
@global_var_10007b00.268 = constant i32 939524101
@global_var_1001b554.269 = local_unnamed_addr global i32 0
@global_var_1001b550.270 = local_unnamed_addr global i32 0
@global_var_1000af24.271 = constant [5 x i8] c"j#!E\00"
@global_var_10007b28.272 = constant i32 939524100
@global_var_1001b564.273 = local_unnamed_addr global i32 0
@global_var_1001b560.274 = local_unnamed_addr global i32 0
@global_var_1000af2c.275 = constant [7 x i8] c"j($56E\00"
@global_var_10007b50.276 = constant [3 x i8] c"8`\00"
@global_var_1001b568.277 = local_unnamed_addr global i32 0
@global_var_1001b56c.278 = local_unnamed_addr global i32 0
@global_var_1000af34.279 = constant [15 x i8] c"j57*&j+ 1j1&5E\00"
@global_var_10007b78.280 = constant [3 x i8] c"8`\00"
@global_var_1001b570.281 = local_unnamed_addr global i32 0
@global_var_1001b574.282 = local_unnamed_addr global i32 0
@global_var_1000af44.283 = constant [11 x i8] c"!37\0D )5 7E\00"
@global_var_10007b9c.284 = constant i32 939524106
@global_var_1001b57c.285 = local_unnamed_addr global i32 0
@global_var_1001b578.286 = local_unnamed_addr global i32 0
@global_var_1000af98.287 = constant i32 286665264
@global_var_10007bc4.288 = constant i32 939524117
@global_var_1001b584.289 = local_unnamed_addr global i32 0
@global_var_1001b580.290 = local_unnamed_addr global i32 0
@global_var_1000af50.291 = constant [18 x i8] c"j 1&j7 6*)3k&*+#E\00"
@global_var_10007bec.292 = constant [3 x i8] c"8`\00"
@global_var_1001b588.293 = local_unnamed_addr global i32 0
@global_var_1001b58c.294 = local_unnamed_addr global i32 0
@global_var_1000af64.295 = constant [13 x i8] c"+$( 6 73 7eE\00"
@global_var_10007c10.296 = constant i32 939524108
@global_var_1001b594.297 = local_unnamed_addr global i32 0
@global_var_1001b590.298 = local_unnamed_addr global i32 0
@global_var_1000af74.299 = constant [15 x i8] c"j! 3j2$1&-!*\22E\00"
@global_var_10007c38.300 = constant [3 x i8] c"8`\00"
@global_var_1001b598.301 = local_unnamed_addr global i32 0
@global_var_1001b59c.302 = local_unnamed_addr global i32 0
@global_var_1000af84.303 = constant [20 x i8] c"j! 3j(,6&j2$1&-!*\22E\00"
@global_var_10007c5c.304 = constant i32 939524115
@global_var_1001b5a4.305 = local_unnamed_addr global i32 0
@global_var_1001b5a0.306 = local_unnamed_addr global i32 0
@global_var_10007fb4.307 = constant i32 939524096
@global_var_1000827c.308 = constant i32 1207959564
@global_var_10008758.309 = constant i32 939524118
@global_var_10009c4c.310 = constant [3 x i8] c"8`\00"
@global_var_10008868.311 = constant i32 939524105
@global_var_10008884.312 = constant i32 939589631
@global_var_100089ac.313 = constant i32 1207959797
@global_var_100089b0.314 = constant i32 939524108
@global_var_1001b49c.315 = global i32 0
@global_var_10009108.316 = constant i32 939524118
@global_var_10009190.317 = constant i32 939524118
@global_var_1001b5a8.318 = global i32 0
@global_var_1001b508.319 = global i32 0
@global_var_1001b430 = external global i32
@global_var_1000b0bc.321 = constant i32 33554944
@global_var_1001b48c.322 = local_unnamed_addr global i32 0
@global_var_1001b628.323 = global i32 0
@global_var_100093ec.324 = constant i32 939524108
@global_var_10009440.325 = constant i32 939524108
@global_var_100094f4.326 = constant [3 x i8] c"8`\00"
@global_var_100095a0.327 = constant [3 x i8] c"8`\00"
@global_var_100098c8.328 = constant i32 1207959640
@global_var_10009904.329 = constant i32 1207959580
@global_var_1001b3f0.330 = global i32 0
@global_var_1001b480.331 = local_unnamed_addr global i32 0
@global_var_100099c4.332 = constant i32 1207960053
@global_var_100099c8.333 = constant [3 x i8] c"= \00"
@global_var_1001b2c0.334 = global i32 -1
@global_var_1001b490.335 = local_unnamed_addr global i32 0
@global_var_1001b494.336 = local_unnamed_addr global i32 0
@global_var_1000afb0.337 = constant [10 x i8] c"/dev/null\00"
@global_var_1001b498.338 = local_unnamed_addr global i32 0
@global_var_1001b484.340 = local_unnamed_addr global i32 0
@global_var_1001b488.341 = local_unnamed_addr global i32 0
@global_var_10009f64.342 = constant i32 939524096
@global_var_1000a1f0.344 = constant i32 939524118
@global_var_1000a3ec.345 = constant i32 939589631
@global_var_1001b4b0.346 = local_unnamed_addr global i32 0
@global_var_1001b43c.347 = local_unnamed_addr global i32* @global_var_1000b0bc.321
@global_var_1001b408.348 = global i32 0
@global_var_1000a910.349 = constant i32 939524129
@global_var_1001b4a4.350 = local_unnamed_addr global i32 0
@global_var_1000a984.351 = constant [3 x i8] c"8`\00"
@global_var_1000a9bc.352 = constant i32 939524129
@global_var_1001b4a8.353 = local_unnamed_addr global i32 0
@global_var_1001b4ac.354 = local_unnamed_addr global i32 0
@global_var_1001b2c4.355 = global i32 0
@global_var_1001b4b4.2 = local_unnamed_addr global i8 0
@global_var_1001b440.9 = local_unnamed_addr global i8 0
@global_var_1001b441.11 = global i8 0
@global_var_1001b2e0.56 = local_unnamed_addr global i8 1
@global_var_1001b45c.76 = local_unnamed_addr global i16 0
@global_var_1001b468.107 = global i16 0
@global_var_1001b4f6.121 = local_unnamed_addr global i16 0
@global_var_1000ac20.184 = constant i8 23
@global_var_1000ac21.185 = constant i8 20

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_10000094() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_100000a4.1 to i32), i32* @lr, align 4
  %v0_100000a0 = call i32 @function_10000168()
  store i32 %v0_100000a0, i32* @r3, align 4
  store i32 268435624, i32* @lr, align 4
  %v1_100000a4 = call i32 @function_1000ab40(i32 %v0_100000a0)
  ret i32 %v1_100000a4
}

define i32 @function_100000b8() local_unnamed_addr {
entry:
  %v3_100000cc = load i8, i8* @global_var_1001b4b4.2, align 1
  %v3_100000d4 = icmp eq i8 %v3_100000cc, 0
  br i1 %v3_100000d4, label %dec_label_pc_100000dc, label %dec_label_pc_10000134

dec_label_pc_100000dc:                            ; preds = %entry
  %v3_100000e0 = load i32, i32* bitcast (i32** @global_var_1001b2dc.4 to i32*), align 4
  %v3_100000e8 = icmp eq i32 %v3_100000e0, 0
  br i1 %v3_100000e8, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_100000f0:                            ; preds = %dec_label_pc_100000dc, %dec_label_pc_100000f0
  %v0_100000f4 = phi i32 [ %v3_10000100, %dec_label_pc_100000f0 ], [ %v3_100000e0, %dec_label_pc_100000dc ]
  %v1_100000f0 = add i32 %v0_100000f4, 4
  store i32 %v1_100000f0, i32* bitcast (i32** @global_var_1001b2dc.4 to i32*), align 4
  call void @__pseudo_call(i32 %v0_100000f4)
  %v3_10000100 = load i32, i32* bitcast (i32** @global_var_1001b2dc.4 to i32*), align 4
  %v3_10000108 = icmp eq i32 %v3_10000100, 0
  br i1 %v3_10000108, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_10000110:                            ; preds = %dec_label_pc_100000f0, %dec_label_pc_100000dc
  store i8 1, i8* @global_var_1001b4b4.2, align 1
  br label %dec_label_pc_10000134

dec_label_pc_10000134:                            ; preds = %entry, %dec_label_pc_10000110
  ret i32 undef

; uselistorder directives
  uselistorder i32 %v3_10000100, { 1, 0 }
  uselistorder i8* @global_var_1001b4b4.2, { 1, 0 }
  uselistorder label %dec_label_pc_10000134, { 1, 0 }
  uselistorder label %dec_label_pc_100000f0, { 1, 0 }
}

define i32 @function_1000014c() local_unnamed_addr {
dec_label_pc_1000014c:
  %v0_10000164 = load i32, i32* @r3, align 4
  ret i32 %v0_10000164
}

define i32 @function_10000168() local_unnamed_addr {
dec_label_pc_10000168:
  %v3_100001a0 = load i32, i32* inttoptr (i32 268546768 to i32*), align 16
  %v3_100001ac = icmp eq i32 %v3_100001a0, 0
  br i1 %v3_100001ac, label %dec_label_pc_100001c4, label %dec_label_pc_100001b4

dec_label_pc_100001b4:                            ; preds = %dec_label_pc_10000168
  br label %dec_label_pc_100001c4

dec_label_pc_100001c4:                            ; preds = %dec_label_pc_100001b4, %dec_label_pc_10000168
  ret i32 268546768
}

define i32 @function_100001d4() local_unnamed_addr {
dec_label_pc_100001d4:
  %v0_100001ec = load i32, i32* @r3, align 4
  ret i32 %v0_100001ec
}

define i32 @entry_point(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_0, align 4
  %v0_100001f4 = load i32, i32* @r1, align 4
  %v1_100001f4 = call i32 @__asm_rlwinm(i32 %v0_100001f4, i32 0, i32 0, i32 27)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10000204 = add i32 %v1_100001f4, -16
  %v3_10000204 = inttoptr i32 %v2_10000204 to i32*
  store i32 %v1_100001f4, i32* %v3_10000204, align 4
  %v0_10000208 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000208, i32* %v3_10000204, align 4
  %v2_10000210 = load i32, i32* %stack_var_0, align 4
  %v7_10000234 = call i32 @function_10009d38(i32 268454572, i32 %v2_10000210, i32* nonnull %stack_var_4, i32 268435604, i32 268479404, i32 %arg1)
  ret i32 %v7_10000234

; uselistorder directives
  uselistorder i32 %v1_100001f4, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
}

define i32 @function_10000238(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10000238:
  %ctr.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %ctr.global-to-local, align 4
  %v0_10000244 = load i32, i32* @lr, align 4
  %tmp4 = icmp slt i32 %arg1, 1
  call void @__pseudo_cond_branch(i1 %tmp4, i32 %v0_10000244)
  %v1_10000248 = add i32 %tmp, 4
  %v2_10000248 = inttoptr i32 %v1_10000248 to i8*
  %v3_10000248 = load i8, i8* %v2_10000248, align 1
  %v4_10000248 = zext i8 %v3_10000248 to i32
  %v4_10000250 = icmp eq i32 %v4_10000248, %arg3
  br i1 %v4_10000250, label %dec_label_pc_10000278, label %dec_label_pc_1000026c.preheader

dec_label_pc_1000026c.preheader:                  ; preds = %dec_label_pc_10000238
  %v0_10000270.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000026c

dec_label_pc_1000025c:                            ; preds = %dec_label_pc_1000026c
  %v1_1000025c = add i32 %v0_1000025c.in, 12
  %v2_1000025c = inttoptr i32 %v1_1000025c to i8*
  %v3_1000025c = load i8, i8* %v2_1000025c, align 1
  %v4_1000025c = zext i8 %v3_1000025c to i32
  %v4_10000264 = icmp eq i32 %v4_1000025c, %arg3
  br i1 %v4_10000264, label %dec_label_pc_10000278, label %dec_label_pc_1000026c

dec_label_pc_1000026c:                            ; preds = %dec_label_pc_1000026c.preheader, %dec_label_pc_1000025c
  %v0_10000270 = phi i32 [ %v0_10000270.pre, %dec_label_pc_1000026c.preheader ], [ %v1_10000270, %dec_label_pc_1000025c ]
  %v0_1000025c.in = phi i32 [ %tmp, %dec_label_pc_1000026c.preheader ], [ %v0_1000025c, %dec_label_pc_1000025c ]
  %v0_1000025c = add i32 %v0_1000025c.in, 8
  %v1_10000270 = add i32 %v0_10000270, -1
  store i32 %v1_10000270, i32* %ctr.global-to-local, align 4
  %v2_10000270 = icmp eq i32 %v1_10000270, 0
  br i1 %v2_10000270, label %dec_label_pc_10000274, label %dec_label_pc_1000025c

dec_label_pc_10000274:                            ; preds = %dec_label_pc_1000026c
  ret i32 %arg4

dec_label_pc_10000278:                            ; preds = %dec_label_pc_1000025c, %dec_label_pc_10000238
  %v0_10000278 = phi i32 [ %tmp, %dec_label_pc_10000238 ], [ %v0_1000025c, %dec_label_pc_1000025c ]
  %v1_10000278 = inttoptr i32 %v0_10000278 to i32*
  %v2_10000278 = load i32, i32* %v1_10000278, align 4
  ret i32 %v2_10000278

; uselistorder directives
  uselistorder i32 %v1_10000270, { 2, 1, 0 }
  uselistorder i32 %v0_1000025c.in, { 1, 0 }
  uselistorder i32 %tmp, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000026c, { 1, 0 }
}

define i32 @function_10000280(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10000280:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %tmp7 = icmp slt i32 %arg1, 1
  br i1 %tmp7, label %dec_label_pc_100002c4, label %dec_label_pc_10000298

dec_label_pc_10000298:                            ; preds = %dec_label_pc_10000280
  %v0_10000298 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000298 = add i32 %v0_10000298, 4
  %v2_10000298 = inttoptr i32 %v1_10000298 to i8*
  %v3_10000298 = load i8, i8* %v2_10000298, align 1
  %v4_10000298 = zext i8 %v3_10000298 to i32
  %v4_100002a0 = icmp eq i32 %v4_10000298, %arg3
  br i1 %v4_100002a0, label %dec_label_pc_100002d8, label %dec_label_pc_100002bc

dec_label_pc_100002ac:                            ; preds = %dec_label_pc_100002bc
  %v1_100002ac = add i32 %v0_100002ac.in, 12
  %v2_100002ac = inttoptr i32 %v1_100002ac to i8*
  %v3_100002ac = load i8, i8* %v2_100002ac, align 1
  %v4_100002ac = zext i8 %v3_100002ac to i32
  %v4_100002b4 = icmp eq i32 %v4_100002ac, %arg3
  br i1 %v4_100002b4, label %dec_label_pc_100002d8, label %dec_label_pc_100002bc

dec_label_pc_100002bc:                            ; preds = %dec_label_pc_10000298, %dec_label_pc_100002ac
  %v0_100002c0 = phi i32 [ %v1_100002c0, %dec_label_pc_100002ac ], [ %arg1, %dec_label_pc_10000298 ]
  %v0_100002ac.in = phi i32 [ %v0_100002ac, %dec_label_pc_100002ac ], [ %v0_10000298, %dec_label_pc_10000298 ]
  %v0_100002ac = add i32 %v0_100002ac.in, 8
  store i32 %v0_100002ac, i32* %r4.global-to-local, align 4
  %v1_100002c0 = add i32 %v0_100002c0, -1
  %v2_100002c0 = icmp eq i32 %v1_100002c0, 0
  br i1 %v2_100002c0, label %dec_label_pc_100002c4, label %dec_label_pc_100002ac

dec_label_pc_100002c4:                            ; preds = %dec_label_pc_100002bc, %dec_label_pc_100002d8, %dec_label_pc_10000280
  ret i32 %arg4

dec_label_pc_100002d8:                            ; preds = %dec_label_pc_100002ac, %dec_label_pc_10000298
  %v0_100002d8 = phi i32 [ %v0_10000298, %dec_label_pc_10000298 ], [ %v0_100002ac, %dec_label_pc_100002ac ]
  %v1_100002d8 = inttoptr i32 %v0_100002d8 to i32*
  %v2_100002d8 = load i32, i32* %v1_100002d8, align 4
  %v3_100002dc = icmp eq i32 %v2_100002d8, 0
  br i1 %v3_100002dc, label %dec_label_pc_100002c4, label %dec_label_pc_100002e4

dec_label_pc_100002e4:                            ; preds = %dec_label_pc_100002d8
  store i32 268436200, i32* @lr, align 4
  %v1_100002e4 = call i32 @function_10008e18(i32 %v2_100002d8)
  ret i32 %v1_100002e4

; uselistorder directives
  uselistorder i32 %v1_100002c0, { 1, 0 }
  uselistorder i32 %v0_100002ac, { 1, 0, 2 }
  uselistorder i32 %v0_100002ac.in, { 1, 0 }
  uselistorder i32 %v0_10000298, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100002c4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100002bc, { 1, 0 }
}

define i32 @function_10000300(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10000300:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %tmp7 = icmp slt i32 %arg1, 1
  br i1 %tmp7, label %dec_label_pc_10000344, label %dec_label_pc_10000318

dec_label_pc_10000318:                            ; preds = %dec_label_pc_10000300
  %v0_10000318 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000318 = add i32 %v0_10000318, 4
  %v2_10000318 = inttoptr i32 %v1_10000318 to i8*
  %v3_10000318 = load i8, i8* %v2_10000318, align 1
  %v4_10000318 = zext i8 %v3_10000318 to i32
  %v4_10000320 = icmp eq i32 %v4_10000318, %arg3
  br i1 %v4_10000320, label %dec_label_pc_10000358, label %dec_label_pc_1000033c

dec_label_pc_1000032c:                            ; preds = %dec_label_pc_1000033c
  %v1_1000032c = add i32 %v0_1000032c.in, 12
  %v2_1000032c = inttoptr i32 %v1_1000032c to i8*
  %v3_1000032c = load i8, i8* %v2_1000032c, align 1
  %v4_1000032c = zext i8 %v3_1000032c to i32
  %v4_10000334 = icmp eq i32 %v4_1000032c, %arg3
  br i1 %v4_10000334, label %dec_label_pc_10000358, label %dec_label_pc_1000033c

dec_label_pc_1000033c:                            ; preds = %dec_label_pc_10000318, %dec_label_pc_1000032c
  %v0_10000340 = phi i32 [ %v1_10000340, %dec_label_pc_1000032c ], [ %arg1, %dec_label_pc_10000318 ]
  %v0_1000032c.in = phi i32 [ %v0_1000032c, %dec_label_pc_1000032c ], [ %v0_10000318, %dec_label_pc_10000318 ]
  %v0_1000032c = add i32 %v0_1000032c.in, 8
  store i32 %v0_1000032c, i32* %r4.global-to-local, align 4
  %v1_10000340 = add i32 %v0_10000340, -1
  %v2_10000340 = icmp eq i32 %v1_10000340, 0
  br i1 %v2_10000340, label %dec_label_pc_10000344, label %dec_label_pc_1000032c

dec_label_pc_10000344:                            ; preds = %dec_label_pc_1000033c, %dec_label_pc_10000358, %dec_label_pc_10000300
  ret i32 %arg4

dec_label_pc_10000358:                            ; preds = %dec_label_pc_1000032c, %dec_label_pc_10000318
  %v0_10000358 = phi i32 [ %v0_10000318, %dec_label_pc_10000318 ], [ %v0_1000032c, %dec_label_pc_1000032c ]
  %v1_10000358 = inttoptr i32 %v0_10000358 to i32*
  %v2_10000358 = load i32, i32* %v1_10000358, align 4
  store i32 %v2_10000358, i32* @r3, align 4
  %v3_1000035c = icmp eq i32 %v2_10000358, 0
  br i1 %v3_1000035c, label %dec_label_pc_10000344, label %dec_label_pc_10000364

dec_label_pc_10000364:                            ; preds = %dec_label_pc_10000358
  store i32 10, i32* %r4.global-to-local, align 4
  store i32 268436332, i32* @lr, align 4
  %v2_10000368 = call i32 @function_10007db4(i32 %v2_10000358, i32 10)
  ret i32 %v2_10000368

; uselistorder directives
  uselistorder i32 %v1_10000340, { 1, 0 }
  uselistorder i32 %v0_1000032c, { 1, 0, 2 }
  uselistorder i32 %v0_1000032c.in, { 1, 0 }
  uselistorder i32 %v0_10000318, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_10000344, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000033c, { 1, 0 }
}

define i32 @function_10000384(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10000384:
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_10000384 = call i32 @__asm_mfcr()
  store i32 %v0_10000384, i32* %r3.global-to-local, align 4
  %v0_10000394 = load i32, i32* @r30, align 4
  %v0_100003c4 = load i32, i32* @r28, align 4
  %v0_100003c8 = load i32, i32* @r29, align 4
  %tmp30 = icmp ult i32 %arg2, 4
  br i1 %tmp30, label %dec_label_pc_100003e4, label %dec_label_pc_100003d8

dec_label_pc_100003d8:                            ; preds = %dec_label_pc_10000384
  %v3_100003d8 = icmp eq i32 %arg2, 4
  %v1_100003dc = inttoptr i32 %v0_10000384 to i32*
  %v2_100003dc = load i32, i32* %v1_100003dc, align 4
  store i32 %v2_100003dc, i32* %r25.global-to-local, align 4
  br i1 %v3_100003d8, label %dec_label_pc_100003e4, label %dec_label_pc_1000042c

dec_label_pc_100003e4:                            ; preds = %dec_label_pc_100003d8, %dec_label_pc_100005c8, %dec_label_pc_10000444, %dec_label_pc_10000438, %dec_label_pc_1000042c, %dec_label_pc_10000384, %dec_label_pc_100005fc
  %v1_100003f8 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10000384)
  store i32 %v0_100003c4, i32* @r28, align 4
  store i32 %v0_100003c8, i32* @r29, align 4
  store i32 %v0_10000394, i32* @r30, align 4
  %v0_10000428 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10000428

dec_label_pc_1000042c:                            ; preds = %dec_label_pc_100003d8
  %v3_1000042c = icmp eq i32 %arg2, 5
  %v1_10000430 = add i32 %v0_10000384, 4
  %v2_10000430 = inttoptr i32 %v1_10000430 to i8*
  %v3_10000430 = load i8, i8* %v2_10000430, align 1
  %v4_10000430 = zext i8 %v3_10000430 to i32
  store i32 %v4_10000430, i32* %r22.global-to-local, align 4
  br i1 %v3_1000042c, label %dec_label_pc_100003e4, label %dec_label_pc_10000438

dec_label_pc_10000438:                            ; preds = %dec_label_pc_1000042c
  %v1_10000438 = add i32 %v0_10000384, 5
  %v2_10000438 = inttoptr i32 %v1_10000438 to i8*
  %v3_10000438 = load i8, i8* %v2_10000438, align 1
  %v4_10000438 = zext i8 %v3_10000438 to i32
  store i32 %v4_10000438, i32* %r26.global-to-local, align 4
  %v3_1000043c = icmp eq i8 %v3_10000438, 0
  store i1 false, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_1000043c, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_1000043c, label %dec_label_pc_100003e4, label %dec_label_pc_10000444

dec_label_pc_10000444:                            ; preds = %dec_label_pc_10000438
  %v1_10000444 = mul nuw nsw i32 %v4_10000438, 5
  store i32 %v1_10000444, i32* %r27.global-to-local, align 4
  %v1_10000448 = add i32 %arg2, -6
  store i32 %v1_10000448, i32* @r28, align 4
  %v2_1000044c = icmp ult i32 %v1_10000448, %v1_10000444
  br i1 %v2_1000044c, label %dec_label_pc_100003e4, label %dec_label_pc_10000454

dec_label_pc_10000454:                            ; preds = %dec_label_pc_10000444
  store i32 %v4_10000438, i32* %r3.global-to-local, align 4
  store i32 24, i32* %r4.global-to-local, align 4
  store i32 268436576, i32* @lr, align 4
  %v2_1000045c = call i32 @function_10009410(i32 %v4_10000438, i32 24)
  store i32 %v2_1000045c, i32* %r3.global-to-local, align 4
  %v0_10000460 = load i32, i32* @r31, align 4
  %v1_10000460 = add i32 %v0_10000460, 6
  store i32 %v1_10000460, i32* @r29, align 4
  store i32 %v2_1000045c, i32* %r20.global-to-local, align 4
  %v0_10000468 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10000468 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10000468 = or i1 %v0_10000468, %v1_10000468
  br i1 %v2_10000468, label %dec_label_pc_100004c4thread-pre-split, label %dec_label_pc_1000046c

dec_label_pc_1000046c:                            ; preds = %dec_label_pc_10000454
  %v1_1000046c = load i32, i32* %r27.global-to-local, align 4
  store i32 %v2_1000045c, i32* %r11.global-to-local, align 4
  %tmp35 = mul i32 %v1_1000046c, -858993459
  store i32 2, i32* %r10.global-to-local, align 4
  store i32 %tmp35, i32* %r9.global-to-local, align 4
  store i32 %tmp35, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10000494

dec_label_pc_10000494:                            ; preds = %dec_label_pc_10000494.dec_label_pc_10000494_crit_edge, %dec_label_pc_1000046c
  %v2_100004a0 = phi i32 [ %v1_100004b0, %dec_label_pc_10000494.dec_label_pc_10000494_crit_edge ], [ %v2_1000045c, %dec_label_pc_1000046c ]
  %v0_1000049c = phi i32 [ %v0_10000494.pre, %dec_label_pc_10000494.dec_label_pc_10000494_crit_edge ], [ %v1_10000460, %dec_label_pc_1000046c ]
  %v1_10000494 = add i32 %v0_1000049c, 4
  %v2_10000494 = inttoptr i32 %v1_10000494 to i8*
  %v3_10000494 = load i8, i8* %v2_10000494, align 1
  %v1_10000498 = inttoptr i32 %v0_1000049c to i32*
  %v2_10000498 = load i32, i32* %v1_10000498, align 4
  store i32 %v2_10000498, i32* %r9.global-to-local, align 4
  %v1_1000049c = add i32 %v0_1000049c, 5
  store i32 %v1_1000049c, i32* @r29, align 4
  %v3_100004a0 = add i32 %v2_100004a0, 20
  %v4_100004a0 = inttoptr i32 %v3_100004a0 to i8*
  store i8 %v3_10000494, i8* %v4_100004a0, align 1
  %v0_100004a4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100004a4 = load i32, i32* %r11.global-to-local, align 4
  %v2_100004a4 = add i32 %v1_100004a4, 4
  %v3_100004a4 = inttoptr i32 %v2_100004a4 to i32*
  store i32 %v0_100004a4, i32* %v3_100004a4, align 4
  %v0_100004a8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100004a8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100004a8 = add i32 %v1_100004a8, 16
  %v3_100004a8 = inttoptr i32 %v2_100004a8 to i32*
  store i32 %v0_100004a8, i32* %v3_100004a8, align 4
  %v0_100004ac = load i32, i32* %r10.global-to-local, align 4
  %v1_100004ac = trunc i32 %v0_100004ac to i16
  %v2_100004ac = load i32, i32* %r11.global-to-local, align 4
  %v3_100004ac = inttoptr i32 %v2_100004ac to i16*
  store i16 %v1_100004ac, i16* %v3_100004ac, align 2
  %v0_100004b0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100004b0 = add i32 %v0_100004b0, 24
  store i32 %v1_100004b0, i32* %r11.global-to-local, align 4
  %v0_100004b4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100004b4 = add i32 %v0_100004b4, -1
  store i32 %v1_100004b4, i32* %ctr.global-to-local, align 4
  %v2_100004b4 = icmp eq i32 %v1_100004b4, 0
  br i1 %v2_100004b4, label %dec_label_pc_100004b8, label %dec_label_pc_10000494.dec_label_pc_10000494_crit_edge

dec_label_pc_10000494.dec_label_pc_10000494_crit_edge: ; preds = %dec_label_pc_10000494
  %v0_10000494.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10000494

dec_label_pc_100004b8:                            ; preds = %dec_label_pc_10000494
  %v0_100004b8 = load i32, i32* %r26.global-to-local, align 4
  %v1_100004b8 = mul i32 %v0_100004b8, -5
  %v0_100004bc = load i32, i32* @r30, align 4
  %v2_100004bc = add i32 %v0_100004bc, %v1_100004b8
  store i32 %v2_100004bc, i32* %r9.global-to-local, align 4
  %v1_100004c0 = add i32 %v2_100004bc, -6
  store i32 %v1_100004c0, i32* @r28, align 4
  br label %dec_label_pc_100004c4

dec_label_pc_100004c4thread-pre-split:            ; preds = %dec_label_pc_10000454
  %v0_100004c4.pr = load i32, i32* @r28, align 4
  br label %dec_label_pc_100004c4

dec_label_pc_100004c4:                            ; preds = %dec_label_pc_100004c4thread-pre-split, %dec_label_pc_100004b8
  %v0_100004c4 = phi i32 [ %v0_100004c4.pr, %dec_label_pc_100004c4thread-pre-split ], [ %v1_100004c0, %dec_label_pc_100004b8 ]
  %v3_100004c4 = icmp eq i32 %v0_100004c4, 0
  store i32 0, i32* %r21.global-to-local, align 4
  br i1 %v3_100004c4, label %dec_label_pc_100005b8, label %dec_label_pc_100004d0

dec_label_pc_100004d0:                            ; preds = %dec_label_pc_100004c4
  %v0_100004d0 = load i32, i32* @r29, align 4
  %v1_100004d0 = inttoptr i32 %v0_100004d0 to i8*
  %v2_100004d0 = load i8, i8* %v1_100004d0, align 1
  %v3_100004d0 = zext i8 %v2_100004d0 to i32
  store i32 %v3_100004d0, i32* @r23, align 4
  %v3_100004d4 = icmp eq i8 %v2_100004d0, 0
  store i1 false, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_100004d4, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_100004d4, label %dec_label_pc_100005a0, label %dec_label_pc_100004dc

dec_label_pc_100004dc:                            ; preds = %dec_label_pc_100004d0
  store i32 %v3_100004d0, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 268436712, i32* @lr, align 4
  %v2_100004e4 = call i32 @function_10009410(i32 %v3_100004d0, i32 8)
  store i32 %v2_100004e4, i32* %r3.global-to-local, align 4
  store i32 %v2_100004e4, i32* %r21.global-to-local, align 4
  %v0_100004ec = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100004ec = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100004ec = or i1 %v0_100004ec, %v1_100004ec
  br i1 %v2_100004ec, label %dec_label_pc_100005a0, label %dec_label_pc_100004f0

dec_label_pc_100004f0:                            ; preds = %dec_label_pc_100004dc
  %v0_100004f0 = load i32, i32* @r28, align 4
  %v1_100004f0 = add i32 %v0_100004f0, -1
  %v4_100004f0 = icmp eq i32 %v1_100004f0, 0
  store i32 %v1_100004f0, i32* %ctr.global-to-local, align 4
  br i1 %v4_100004f0, label %dec_label_pc_100005b8, label %dec_label_pc_100004fc

dec_label_pc_100004fc:                            ; preds = %dec_label_pc_100004f0
  %v0_100004fc = load i32, i32* @r29, align 4
  %v1_100004fc = add i32 %v0_100004fc, 1
  %v2_100004fc = inttoptr i32 %v1_100004fc to i8*
  %v3_100004fc = load i8, i8* %v2_100004fc, align 1
  store i32 %v1_100004fc, i32* %r9.global-to-local, align 4
  %v3_10000504 = add i32 %v2_100004e4, 4
  %v4_10000504 = inttoptr i32 %v3_10000504 to i8*
  store i8 %v3_100004fc, i8* %v4_10000504, align 1
  %v0_10000508 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10000508 = add i32 %v0_10000508, -1
  store i32 %v1_10000508, i32* %ctr.global-to-local, align 4
  %v2_10000508 = icmp eq i32 %v1_10000508, 0
  br i1 %v2_10000508, label %dec_label_pc_100005b8, label %dec_label_pc_1000050c

dec_label_pc_1000050c:                            ; preds = %dec_label_pc_100004fc
  store i32 %v1_10000508, i32* %r11.global-to-local, align 4
  %v0_10000510 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000510 = add i32 %v0_10000510, 1
  %v2_10000510 = inttoptr i32 %v1_10000510 to i8*
  %v3_10000510 = load i8, i8* %v2_10000510, align 1
  %v4_10000510 = zext i8 %v3_10000510 to i32
  store i32 %v1_10000510, i32* %r4.global-to-local, align 4
  %v1_10000518 = add i32 %v0_10000508, -2
  store i32 %v1_10000518, i32* @r28, align 4
  %v2_1000051c = icmp slt i32 %v1_10000518, %v4_10000510
  br i1 %v2_1000051c, label %dec_label_pc_100005b8, label %dec_label_pc_10000524

dec_label_pc_10000524:                            ; preds = %dec_label_pc_1000050c
  %v1_10000524 = add i32 %v0_10000510, 2
  store i32 %v1_10000524, i32* @r29, align 4
  %v0_10000528 = load i32, i32* %r3.global-to-local, align 4
  %v1_10000528 = add i32 %v0_10000528, 8
  store i32 %v1_10000528, i32* %r24.global-to-local, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10000578

dec_label_pc_10000538:                            ; preds = %dec_label_pc_10000578
  %v0_10000538 = load i32, i32* @r31, align 4
  %v1_10000538 = load i32, i32* @r28, align 4
  %v2_10000538 = sub i32 %v1_10000538, %v0_10000538
  store i32 %v2_10000538, i32* %r9.global-to-local, align 4
  %v5_10000538 = icmp eq i32 %v2_10000538, 0
  br i1 %v5_10000538, label %dec_label_pc_100005b8, label %dec_label_pc_10000540

dec_label_pc_10000540:                            ; preds = %dec_label_pc_10000538
  %v1_10000540 = load i32, i32* @r29, align 4
  %v2_10000540 = add i32 %v1_10000540, %v0_10000538
  %v3_10000540 = inttoptr i32 %v2_10000540 to i8*
  %v4_10000540 = load i8, i8* %v3_10000540, align 1
  %v0_10000544 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v2_10000540, i32* %r4.global-to-local, align 4
  %v3_1000054c = add i32 %v0_10000544, 4
  %v4_1000054c = inttoptr i32 %v3_1000054c to i8*
  store i8 %v4_10000540, i8* %v4_1000054c, align 1
  %v0_10000550 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000550 = add i32 %v0_10000550, -1
  %v4_10000550 = icmp eq i32 %v1_10000550, 0
  br i1 %v4_10000550, label %dec_label_pc_100005b8, label %dec_label_pc_10000558

dec_label_pc_10000558:                            ; preds = %dec_label_pc_10000540
  %v0_10000558 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000558 = add i32 %v0_10000558, 1
  %v2_10000558 = inttoptr i32 %v1_10000558 to i8*
  %v3_10000558 = load i8, i8* %v2_10000558, align 1
  %v4_10000558 = zext i8 %v3_10000558 to i32
  store i32 %v1_10000550, i32* %r9.global-to-local, align 4
  %v1_10000560 = add i32 %v0_10000550, -2
  store i32 %v1_10000560, i32* @r28, align 4
  store i32 %v1_10000558, i32* %r4.global-to-local, align 4
  %v2_10000568 = icmp slt i32 %v1_10000560, %v4_10000558
  %v0_1000056c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000056c = add i32 %v0_1000056c, 8
  store i32 %v1_1000056c, i32* %r24.global-to-local, align 4
  br i1 %v2_10000568, label %dec_label_pc_100005b8, label %dec_label_pc_10000574

dec_label_pc_10000574:                            ; preds = %dec_label_pc_10000558
  %v1_10000574 = add i32 %v0_10000558, 2
  store i32 %v1_10000574, i32* @r29, align 4
  br label %dec_label_pc_10000578

dec_label_pc_10000578:                            ; preds = %dec_label_pc_10000524, %dec_label_pc_10000574
  %v0_1000057c = phi i32 [ %v4_10000510, %dec_label_pc_10000524 ], [ %v4_10000558, %dec_label_pc_10000574 ]
  store i32 1, i32* %r4.global-to-local, align 4
  %v1_1000057c = add nuw nsw i32 %v0_1000057c, 1
  store i32 %v1_1000057c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000584.7 to i32), i32* @lr, align 4
  %v2_10000580 = call i32 @function_10009410(i32 %v1_1000057c, i32 1)
  store i32 %v2_10000580, i32* %r3.global-to-local, align 4
  %v0_10000584 = load i32, i32* %r27.global-to-local, align 4
  %v1_10000584 = add i32 %v0_10000584, 1
  store i32 %v1_10000584, i32* %r27.global-to-local, align 4
  %v1_10000588 = load i32, i32* @r30, align 4
  %v2_10000588 = inttoptr i32 %v1_10000588 to i32*
  store i32 %v2_10000580, i32* %v2_10000588, align 4
  %v0_1000058c = load i32, i32* @r29, align 4
  store i32 %v0_1000058c, i32* %r4.global-to-local, align 4
  %v0_10000590 = load i32, i32* @r31, align 4
  store i32 268436888, i32* @lr, align 4
  %v3_10000594 = call i32 @function_10007d10(i32 %v2_10000580, i32 %v0_1000058c, i32 %v0_10000590)
  store i32 %v3_10000594, i32* %r3.global-to-local, align 4
  %v0_10000598 = load i32, i32* %r27.global-to-local, align 4
  %v1_10000598 = load i32, i32* @r23, align 4
  %v4_10000598 = icmp eq i32 %v0_10000598, %v1_10000598
  br i1 %v4_10000598, label %dec_label_pc_100005a0, label %dec_label_pc_10000538

dec_label_pc_100005a0:                            ; preds = %dec_label_pc_10000578, %dec_label_pc_100004dc, %dec_label_pc_100004d0
  %v0_100005a0 = call i32 @function_10008aa0()
  store i32 %v0_100005a0, i32* %r3.global-to-local, align 4
  %v2_100005a8 = inttoptr i32 %v0_100005a0 to i32*
  store i32 0, i32* %v2_100005a8, align 4
  store i32 268436912, i32* @lr, align 4
  %v0_100005ac = call i32 @function_10008414()
  store i32 %v0_100005ac, i32* %r3.global-to-local, align 4
  %tmp32 = icmp slt i32 %v0_100005ac, 1
  br i1 %tmp32, label %dec_label_pc_10000608, label %dec_label_pc_100005b8

dec_label_pc_100005b8:                            ; preds = %dec_label_pc_10000558, %dec_label_pc_10000540, %dec_label_pc_10000538, %dec_label_pc_10000608, %dec_label_pc_100005a0, %dec_label_pc_1000050c, %dec_label_pc_100004fc, %dec_label_pc_100004f0, %dec_label_pc_100004c4
  %v0_100005b8 = load i32, i32* %r20.global-to-local, align 4
  %v3_100005b8 = icmp eq i32 %v0_100005b8, 0
  br i1 %v3_100005b8, label %dec_label_pc_100005c8, label %dec_label_pc_100005c0

dec_label_pc_100005c0:                            ; preds = %dec_label_pc_100005b8
  store i32 %v0_100005b8, i32* @r3, align 4
  store i32 268436936, i32* @lr, align 4
  %v0_100005c4 = call i32 @function_10009480()
  store i32 %v0_100005c4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100005c8

dec_label_pc_100005c8:                            ; preds = %dec_label_pc_100005b8, %dec_label_pc_100005c0
  %v0_100005c8 = load i32, i32* %r21.global-to-local, align 4
  %v3_100005c8 = icmp eq i32 %v0_100005c8, 0
  br i1 %v3_100005c8, label %dec_label_pc_100003e4, label %dec_label_pc_100005d0

dec_label_pc_100005d0:                            ; preds = %dec_label_pc_100005c8
  %v0_100005d0 = load i32, i32* @r23, align 4
  %tmp33 = icmp slt i32 %v0_100005d0, 1
  br i1 %tmp33, label %dec_label_pc_100005fc, label %dec_label_pc_100005d8

dec_label_pc_100005d8:                            ; preds = %dec_label_pc_100005d0
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_100005dc

dec_label_pc_100005dc:                            ; preds = %dec_label_pc_100005f0, %dec_label_pc_100005d8
  %v0_100005f412 = phi i32 [ %v0_100005d0, %dec_label_pc_100005d8 ], [ %v0_100005f4, %dec_label_pc_100005f0 ]
  %v0_100005e0 = phi i32 [ %v0_100005c8, %dec_label_pc_100005d8 ], [ %v0_100005fc.pre, %dec_label_pc_100005f0 ]
  %v0_100005dc = phi i32 [ 0, %dec_label_pc_100005d8 ], [ %v1_100005f0, %dec_label_pc_100005f0 ]
  %v1_100005dc = mul i32 %v0_100005dc, 8
  %v2_100005e0 = add i32 %v1_100005dc, %v0_100005e0
  %v3_100005e0 = inttoptr i32 %v2_100005e0 to i32*
  %v4_100005e0 = load i32, i32* %v3_100005e0, align 4
  store i32 %v4_100005e0, i32* @r3, align 4
  %v3_100005e4 = icmp eq i32 %v4_100005e0, 0
  br i1 %v3_100005e4, label %dec_label_pc_100005f0, label %dec_label_pc_100005ec

dec_label_pc_100005ec:                            ; preds = %dec_label_pc_100005dc
  store i32 268436976, i32* @lr, align 4
  %v0_100005ec = call i32 @function_10009480()
  store i32 %v0_100005ec, i32* %r3.global-to-local, align 4
  %v0_100005f0.pre = load i32, i32* @r31, align 4
  %v0_100005f4.pre = load i32, i32* @r23, align 4
  %v0_100005fc.pre.pre = load i32, i32* %r21.global-to-local, align 4
  br label %dec_label_pc_100005f0

dec_label_pc_100005f0:                            ; preds = %dec_label_pc_100005dc, %dec_label_pc_100005ec
  %v0_100005fc.pre = phi i32 [ %v0_100005e0, %dec_label_pc_100005dc ], [ %v0_100005fc.pre.pre, %dec_label_pc_100005ec ]
  %v0_100005f4 = phi i32 [ %v0_100005f412, %dec_label_pc_100005dc ], [ %v0_100005f4.pre, %dec_label_pc_100005ec ]
  %v0_100005f0 = phi i32 [ %v0_100005dc, %dec_label_pc_100005dc ], [ %v0_100005f0.pre, %dec_label_pc_100005ec ]
  %v1_100005f0 = add i32 %v0_100005f0, 1
  store i32 %v1_100005f0, i32* @r31, align 4
  %v4_100005f4 = icmp eq i32 %v0_100005f4, %v1_100005f0
  br i1 %v4_100005f4, label %dec_label_pc_100005fc, label %dec_label_pc_100005dc

dec_label_pc_100005fc:                            ; preds = %dec_label_pc_100005f0, %dec_label_pc_100005d0
  %v0_100005fc = phi i32 [ %v0_100005c8, %dec_label_pc_100005d0 ], [ %v0_100005fc.pre, %dec_label_pc_100005f0 ]
  store i32 %v0_100005fc, i32* @r3, align 4
  store i32 268436996, i32* @lr, align 4
  %v0_10000600 = call i32 @function_10009480()
  store i32 %v0_10000600, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100003e4

dec_label_pc_10000608:                            ; preds = %dec_label_pc_100005a0
  %v3_10000608 = icmp eq i32 %v0_100005ac, -1
  br i1 %v3_10000608, label %dec_label_pc_100005b8, label %dec_label_pc_10000610

dec_label_pc_10000610:                            ; preds = %dec_label_pc_10000608
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10000614 = load i8, i8* @global_var_1001b440.9, align 1
  %v4_10000614 = zext i8 %v3_10000614 to i32
  %v3_10000618 = icmp eq i8 %v3_10000614, 0
  br i1 %v3_10000618, label %dec_label_pc_10000660, label %dec_label_pc_10000620

dec_label_pc_10000620:                            ; preds = %dec_label_pc_10000610
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v4_10000614, i32* %ctr.global-to-local, align 4
  %v3_10000628 = load i32, i32* @global_var_1001b444.10, align 4
  store i32 %v3_10000628, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_10000630 = inttoptr i32 %v3_10000628 to i32*
  %v2_10000630 = load i32, i32* %v1_10000630, align 4
  store i32 %v2_10000630, i32* %r9.global-to-local, align 4
  %v1_10000634 = add i32 %v2_10000630, 4
  %v2_10000634 = inttoptr i32 %v1_10000634 to i8*
  %v3_10000634 = load i8, i8* %v2_10000634, align 1
  %v4_10000634 = zext i8 %v3_10000634 to i32
  %v1_10000638 = load i32, i32* %r22.global-to-local, align 4
  %v4_10000638 = icmp eq i32 %v4_10000634, %v1_10000638
  br i1 %v4_10000638, label %dec_label_pc_10000668, label %dec_label_pc_10000658

dec_label_pc_10000644:                            ; preds = %dec_label_pc_10000658
  %v1_10000644 = mul i32 %v1_10000658, 4
  store i32 %v1_10000644, i32* %r9.global-to-local, align 4
  %v2_10000648 = add i32 %v1_10000644, %v3_10000628
  %v3_10000648 = inttoptr i32 %v2_10000648 to i32*
  %v4_10000648 = load i32, i32* %v3_10000648, align 4
  store i32 %v4_10000648, i32* %r9.global-to-local, align 4
  %v1_1000064c = add i32 %v4_10000648, 4
  %v2_1000064c = inttoptr i32 %v1_1000064c to i8*
  %v3_1000064c = load i8, i8* %v2_1000064c, align 1
  %v4_1000064c = zext i8 %v3_1000064c to i32
  %v4_10000650 = icmp eq i32 %v4_1000064c, %v1_10000638
  br i1 %v4_10000650, label %dec_label_pc_10000668, label %dec_label_pc_10000658

dec_label_pc_10000658:                            ; preds = %dec_label_pc_10000620, %dec_label_pc_10000644
  %v0_1000065c = phi i32 [ %v1_1000065c, %dec_label_pc_10000644 ], [ %v4_10000614, %dec_label_pc_10000620 ]
  %v0_10000658 = phi i32 [ %v1_10000658, %dec_label_pc_10000644 ], [ 0, %dec_label_pc_10000620 ]
  %v1_10000658 = add i32 %v0_10000658, 1
  store i32 %v1_10000658, i32* %r11.global-to-local, align 4
  %v1_1000065c = add i32 %v0_1000065c, -1
  store i32 %v1_1000065c, i32* %ctr.global-to-local, align 4
  %v2_1000065c = icmp eq i32 %v1_1000065c, 0
  br i1 %v2_1000065c, label %dec_label_pc_10000660, label %dec_label_pc_10000644

dec_label_pc_10000660:                            ; preds = %dec_label_pc_10000658, %dec_label_pc_10000610, %dec_label_pc_10000668
  %v0_10000664 = call i32 @function_10009960()
  store i32 %v0_10000664, i32* %r3.global-to-local, align 4
  %v0_10000668.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10000668

dec_label_pc_10000668:                            ; preds = %dec_label_pc_10000644, %dec_label_pc_10000620, %dec_label_pc_10000660
  %v0_10000668 = phi i32 [ %v2_10000630, %dec_label_pc_10000620 ], [ %v0_10000668.pre, %dec_label_pc_10000660 ], [ %v4_10000648, %dec_label_pc_10000644 ]
  %v1_10000668 = inttoptr i32 %v0_10000668 to i32*
  %v2_10000668 = load i32, i32* %v1_10000668, align 4
  store i32 %v2_10000668, i32* %r9.global-to-local, align 4
  %v0_1000066c = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_1000066c, i32* %r3.global-to-local, align 4
  %v0_10000670 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10000670, i32* %r4.global-to-local, align 4
  store i32 %v2_10000668, i32* %ctr.global-to-local, align 4
  call void @__pseudo_call(i32 %v2_10000668)
  br label %dec_label_pc_10000660

; uselistorder directives
  uselistorder i32 %v2_10000668, { 1, 0, 2 }
  uselistorder i32 %v1_1000065c, { 2, 1, 0 }
  uselistorder i32 %v1_10000658, { 2, 0, 1 }
  uselistorder i32 %v1_10000644, { 1, 0 }
  uselistorder i32 %v1_100005f0, { 1, 2, 0 }
  uselistorder i32 %v0_100005f4, { 1, 0 }
  uselistorder i32 %v0_100005dc, { 1, 0 }
  uselistorder i32 %v4_10000558, { 1, 0 }
  uselistorder i32 %v1_10000508, { 0, 2, 1 }
  uselistorder i32 %v3_100004d0, { 1, 0, 2 }
  uselistorder i32 %v1_100004b4, { 1, 0 }
  uselistorder i32 %v1_100004b0, { 1, 0 }
  uselistorder i32 %v0_1000049c, { 0, 2, 1 }
  uselistorder i32 %tmp35, { 1, 0 }
  uselistorder i32 %v4_10000438, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10000384, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r9.global-to-local, { 0, 5, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32* %r4.global-to-local, { 1, 5, 6, 2, 3, 4, 7, 8, 9, 0 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 2, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 15, 1, 0 }
  uselistorder i32* %r21.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32 %arg2, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_10000668, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10000660, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10000658, { 1, 0 }
  uselistorder label %dec_label_pc_100005f0, { 1, 0 }
  uselistorder label %dec_label_pc_100005c8, { 1, 0 }
  uselistorder label %dec_label_pc_100005b8, { 3, 4, 0, 1, 2, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_10000578, { 1, 0 }
  uselistorder label %dec_label_pc_100003e4, { 6, 1, 2, 3, 4, 0, 5 }
}

define i32 @function_1000068c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000068c:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v0_10000690 = load i32, i32* @lr, align 4
  store i32 %v0_10000690, i32* %r0.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  %v0_100006ac = load i32, i32* @r28, align 4
  store i32 268437176, i32* @lr, align 4
  %v2_100006b4 = call i32 @function_10009410(i32 1, i32 8)
  %v3_100006b8 = load i8, i8* @global_var_1001b440.9, align 1
  %v4_100006b8 = zext i8 %v3_100006b8 to i32
  store i32 %v4_100006b8, i32* %r4.global-to-local, align 4
  store i32 %v2_100006b4, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_100006cc = load i32, i32* @global_var_1001b444.10, align 4
  %v2_100006d0 = inttoptr i32 %v2_100006b4 to i32*
  store i32 268446700, i32* %v2_100006d0, align 4
  %v0_100006d4 = load i32, i32* %r4.global-to-local, align 4
  %v1_100006d4 = mul i32 %v0_100006d4, 4
  store i32 %v1_100006d4, i32* %r4.global-to-local, align 4
  %v0_100006d8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100006d8 = trunc i32 %v0_100006d8 to i8
  %v2_100006d8 = load i32, i32* %r28.global-to-local, align 4
  %v3_100006d8 = add i32 %v2_100006d8, 4
  %v4_100006d8 = inttoptr i32 %v3_100006d8 to i8*
  store i8 %v1_100006d8, i8* %v4_100006d8, align 1
  %v0_100006dc = load i32, i32* %r4.global-to-local, align 4
  %v1_100006dc = add i32 %v0_100006dc, 4
  store i32 %v1_100006dc, i32* %r4.global-to-local, align 4
  store i32 268437220, i32* @lr, align 4
  %v3_100006e0 = call i32 @function_10009580(i32 %v3_100006cc, i32 %v1_100006dc, i32 268446700)
  %v3_100006e4 = load i8, i8* @global_var_1001b440.9, align 1
  %v4_100006e4 = zext i8 %v3_100006e4 to i32
  store i32 %v3_100006e0, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b441.11 to i32), i32* %r0.global-to-local, align 4
  %v1_100006f4 = mul nuw nsw i32 %v4_100006e4, 4
  %v0_100006f8 = load i32, i32* @r28, align 4
  %v3_100006f8 = add i32 %v1_100006f4, %v3_100006e0
  %v4_100006f8 = inttoptr i32 %v3_100006f8 to i32*
  store i32 %v0_100006f8, i32* %v4_100006f8, align 4
  %v0_10000700 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000700, i32* @global_var_1001b444.10, align 4
  %v0_10000704 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000704 = trunc i32 %v0_10000704 to i8
  store i8 %v1_10000704, i8* @global_var_1001b440.9, align 1
  store i32 268437260, i32* @lr, align 4
  %v2_10000708 = call i32 @function_10009410(i32 1, i32 8)
  %v3_1000070c = load i8, i8* @global_var_1001b440.9, align 1
  %v4_1000070c = zext i8 %v3_1000070c to i32
  store i32 %v4_1000070c, i32* %r4.global-to-local, align 4
  store i32 %v2_10000708, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_10000720 = load i32, i32* @global_var_1001b444.10, align 4
  %v2_10000724 = inttoptr i32 %v2_10000708 to i32*
  store i32 268448004, i32* %v2_10000724, align 4
  %v0_10000728 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000728 = mul i32 %v0_10000728, 4
  store i32 %v1_10000728, i32* %r4.global-to-local, align 4
  %v0_1000072c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000072c = trunc i32 %v0_1000072c to i8
  %v2_1000072c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000072c = add i32 %v2_1000072c, 4
  %v4_1000072c = inttoptr i32 %v3_1000072c to i8*
  store i8 %v1_1000072c, i8* %v4_1000072c, align 1
  %v0_10000730 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000730 = add i32 %v0_10000730, 4
  store i32 %v1_10000730, i32* %r4.global-to-local, align 4
  store i32 268437304, i32* @lr, align 4
  %v3_10000734 = call i32 @function_10009580(i32 %v3_10000720, i32 %v1_10000730, i32 268448004)
  %v3_10000738 = load i8, i8* @global_var_1001b440.9, align 1
  %v4_10000738 = zext i8 %v3_10000738 to i32
  store i32 %v3_10000734, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b441.11 to i32), i32* %r0.global-to-local, align 4
  %v1_10000748 = mul nuw nsw i32 %v4_10000738, 4
  %v0_1000074c = load i32, i32* @r28, align 4
  %v3_1000074c = add i32 %v1_10000748, %v3_10000734
  %v4_1000074c = inttoptr i32 %v3_1000074c to i32*
  store i32 %v0_1000074c, i32* %v4_1000074c, align 4
  %v0_10000754 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000754, i32* @global_var_1001b444.10, align 4
  %v0_10000758 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000758 = trunc i32 %v0_10000758 to i8
  store i8 %v1_10000758, i8* @global_var_1001b440.9, align 1
  store i32 268437344, i32* @lr, align 4
  %v2_1000075c = call i32 @function_10009410(i32 1, i32 8)
  %v3_10000760 = load i8, i8* @global_var_1001b440.9, align 1
  %v4_10000760 = zext i8 %v3_10000760 to i32
  store i32 %v4_10000760, i32* %r4.global-to-local, align 4
  store i32 %v2_1000075c, i32* %r28.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_10000774 = load i32, i32* @global_var_1001b444.10, align 4
  %v2_10000778 = inttoptr i32 %v2_1000075c to i32*
  store i32 268449220, i32* %v2_10000778, align 4
  %v0_1000077c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000077c = mul i32 %v0_1000077c, 4
  store i32 %v1_1000077c, i32* %r4.global-to-local, align 4
  %v0_10000780 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000780 = trunc i32 %v0_10000780 to i8
  %v2_10000780 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000780 = add i32 %v2_10000780, 4
  %v4_10000780 = inttoptr i32 %v3_10000780 to i8*
  store i8 %v1_10000780, i8* %v4_10000780, align 1
  %v0_10000784 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000784 = add i32 %v0_10000784, 4
  store i32 %v1_10000784, i32* %r4.global-to-local, align 4
  store i32 268437388, i32* @lr, align 4
  %v3_10000788 = call i32 @function_10009580(i32 %v3_10000774, i32 %v1_10000784, i32 268449220)
  %v3_1000078c = load i8, i8* @global_var_1001b440.9, align 1
  %v4_1000078c = zext i8 %v3_1000078c to i32
  store i32 %v3_10000788, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b441.11 to i32), i32* %r0.global-to-local, align 4
  %v1_1000079c = mul nuw nsw i32 %v4_1000078c, 4
  %v0_100007a0 = load i32, i32* @r28, align 4
  %v3_100007a0 = add i32 %v1_1000079c, %v3_10000788
  %v4_100007a0 = inttoptr i32 %v3_100007a0 to i32*
  store i32 %v0_100007a0, i32* %v4_100007a0, align 4
  %v0_100007a8 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100007a8, i32* @global_var_1001b444.10, align 4
  %v0_100007ac = load i32, i32* %r0.global-to-local, align 4
  %v1_100007ac = trunc i32 %v0_100007ac to i8
  store i8 %v1_100007ac, i8* @global_var_1001b440.9, align 1
  store i32 268437428, i32* @lr, align 4
  %v2_100007b0 = call i32 @function_10009410(i32 1, i32 8)
  %v3_100007b4 = load i8, i8* @global_var_1001b440.9, align 1
  %v4_100007b4 = zext i8 %v3_100007b4 to i32
  store i32 %v4_100007b4, i32* %r4.global-to-local, align 4
  store i32 %v2_100007b0, i32* %r28.global-to-local, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v3_100007c8 = load i32, i32* @global_var_1001b444.10, align 4
  %v2_100007cc = inttoptr i32 %v2_100007b0 to i32*
  store i32 268445800, i32* %v2_100007cc, align 4
  %v0_100007d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100007d0 = mul i32 %v0_100007d0, 4
  store i32 %v1_100007d0, i32* %r4.global-to-local, align 4
  %v0_100007d4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100007d4 = trunc i32 %v0_100007d4 to i8
  %v2_100007d4 = load i32, i32* %r28.global-to-local, align 4
  %v3_100007d4 = add i32 %v2_100007d4, 4
  %v4_100007d4 = inttoptr i32 %v3_100007d4 to i8*
  store i8 %v1_100007d4, i8* %v4_100007d4, align 1
  %v0_100007d8 = load i32, i32* %r4.global-to-local, align 4
  %v1_100007d8 = add i32 %v0_100007d8, 4
  store i32 %v1_100007d8, i32* %r4.global-to-local, align 4
  store i32 268437472, i32* @lr, align 4
  %v3_100007dc = call i32 @function_10009580(i32 %v3_100007c8, i32 %v1_100007d8, i32 268445800)
  %v3_100007e0 = load i8, i8* @global_var_1001b440.9, align 1
  %v4_100007e0 = zext i8 %v3_100007e0 to i32
  store i32 %v3_100007dc, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b441.11 to i32), i32* %r0.global-to-local, align 4
  %v1_100007f0 = mul nuw nsw i32 %v4_100007e0, 4
  %v0_100007f4 = load i32, i32* @r28, align 4
  %v3_100007f4 = add i32 %v1_100007f0, %v3_100007dc
  %v4_100007f4 = inttoptr i32 %v3_100007f4 to i32*
  store i32 %v0_100007f4, i32* %v4_100007f4, align 4
  %v0_100007fc = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100007fc, i32* @global_var_1001b444.10, align 4
  %v0_10000800 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000800 = trunc i32 %v0_10000800 to i8
  store i8 %v1_10000800, i8* @global_var_1001b440.9, align 1
  store i32 268437512, i32* @lr, align 4
  %v2_10000804 = call i32 @function_10009410(i32 1, i32 8)
  %v3_10000808 = load i8, i8* @global_var_1001b440.9, align 1
  %v4_10000808 = zext i8 %v3_10000808 to i32
  store i32 %v4_10000808, i32* %r4.global-to-local, align 4
  store i32 %v2_10000804, i32* %r28.global-to-local, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  %v3_1000081c = load i32, i32* @global_var_1001b444.10, align 4
  %v2_10000820 = inttoptr i32 %v2_10000804 to i32*
  store i32 268444280, i32* %v2_10000820, align 4
  %v0_10000824 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000824 = mul i32 %v0_10000824, 4
  store i32 %v1_10000824, i32* %r4.global-to-local, align 4
  %v0_10000828 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000828 = trunc i32 %v0_10000828 to i8
  %v2_10000828 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000828 = add i32 %v2_10000828, 4
  %v4_10000828 = inttoptr i32 %v3_10000828 to i8*
  store i8 %v1_10000828, i8* %v4_10000828, align 1
  %v0_1000082c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000082c = add i32 %v0_1000082c, 4
  store i32 %v1_1000082c, i32* %r4.global-to-local, align 4
  store i32 268437556, i32* @lr, align 4
  %v3_10000830 = call i32 @function_10009580(i32 %v3_1000081c, i32 %v1_1000082c, i32 268444280)
  %v3_10000834 = load i8, i8* @global_var_1001b440.9, align 1
  %v4_10000834 = zext i8 %v3_10000834 to i32
  store i32 %v3_10000830, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b441.11 to i32), i32* %r0.global-to-local, align 4
  %v1_10000844 = mul nuw nsw i32 %v4_10000834, 4
  %v0_10000848 = load i32, i32* @r28, align 4
  %v3_10000848 = add i32 %v1_10000844, %v3_10000830
  %v4_10000848 = inttoptr i32 %v3_10000848 to i32*
  store i32 %v0_10000848, i32* %v4_10000848, align 4
  %v0_10000850 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000850, i32* @global_var_1001b444.10, align 4
  %v0_10000854 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000854 = trunc i32 %v0_10000854 to i8
  store i8 %v1_10000854, i8* @global_var_1001b440.9, align 1
  store i32 268437596, i32* @lr, align 4
  %v2_10000858 = call i32 @function_10009410(i32 1, i32 8)
  %v3_1000085c = load i8, i8* @global_var_1001b440.9, align 1
  %v4_1000085c = zext i8 %v3_1000085c to i32
  store i32 %v4_1000085c, i32* %r4.global-to-local, align 4
  store i32 %v2_10000858, i32* %r28.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v3_10000870 = load i32, i32* @global_var_1001b444.10, align 4
  %v2_10000874 = inttoptr i32 %v2_10000858 to i32*
  store i32 268442724, i32* %v2_10000874, align 4
  %v0_10000878 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000878 = mul i32 %v0_10000878, 4
  store i32 %v1_10000878, i32* %r4.global-to-local, align 4
  %v0_1000087c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000087c = trunc i32 %v0_1000087c to i8
  %v2_1000087c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000087c = add i32 %v2_1000087c, 4
  %v4_1000087c = inttoptr i32 %v3_1000087c to i8*
  store i8 %v1_1000087c, i8* %v4_1000087c, align 1
  %v0_10000880 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000880 = add i32 %v0_10000880, 4
  store i32 %v1_10000880, i32* %r4.global-to-local, align 4
  store i32 268437640, i32* @lr, align 4
  %v3_10000884 = call i32 @function_10009580(i32 %v3_10000870, i32 %v1_10000880, i32 268442724)
  %v3_10000888 = load i8, i8* @global_var_1001b440.9, align 1
  %v4_10000888 = zext i8 %v3_10000888 to i32
  store i32 %v3_10000884, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b441.11 to i32), i32* %r0.global-to-local, align 4
  %v1_10000898 = mul nuw nsw i32 %v4_10000888, 4
  %v0_1000089c = load i32, i32* @r28, align 4
  %v3_1000089c = add i32 %v1_10000898, %v3_10000884
  %v4_1000089c = inttoptr i32 %v3_1000089c to i32*
  store i32 %v0_1000089c, i32* %v4_1000089c, align 4
  %v0_100008a4 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100008a4, i32* @global_var_1001b444.10, align 4
  %v0_100008a8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100008a8 = trunc i32 %v0_100008a8 to i8
  store i8 %v1_100008a8, i8* @global_var_1001b440.9, align 1
  store i32 268437680, i32* @lr, align 4
  %v2_100008ac = call i32 @function_10009410(i32 1, i32 8)
  %v3_100008b0 = load i8, i8* @global_var_1001b440.9, align 1
  %v4_100008b0 = zext i8 %v3_100008b0 to i32
  store i32 %v4_100008b0, i32* %r4.global-to-local, align 4
  store i32 %v2_100008ac, i32* %r28.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v3_100008c4 = load i32, i32* @global_var_1001b444.10, align 4
  %v2_100008c8 = inttoptr i32 %v2_100008ac to i32*
  store i32 268440988, i32* %v2_100008c8, align 4
  %v0_100008cc = load i32, i32* %r4.global-to-local, align 4
  %v1_100008cc = mul i32 %v0_100008cc, 4
  store i32 %v1_100008cc, i32* %r4.global-to-local, align 4
  %v0_100008d0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100008d0 = trunc i32 %v0_100008d0 to i8
  %v2_100008d0 = load i32, i32* %r28.global-to-local, align 4
  %v3_100008d0 = add i32 %v2_100008d0, 4
  %v4_100008d0 = inttoptr i32 %v3_100008d0 to i8*
  store i8 %v1_100008d0, i8* %v4_100008d0, align 1
  %v0_100008d4 = load i32, i32* %r4.global-to-local, align 4
  %v1_100008d4 = add i32 %v0_100008d4, 4
  store i32 %v1_100008d4, i32* %r4.global-to-local, align 4
  store i32 268437724, i32* @lr, align 4
  %v3_100008d8 = call i32 @function_10009580(i32 %v3_100008c4, i32 %v1_100008d4, i32 268440988)
  %v3_100008dc = load i8, i8* @global_var_1001b440.9, align 1
  %v4_100008dc = zext i8 %v3_100008dc to i32
  store i32 %v3_100008d8, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b441.11 to i32), i32* %r0.global-to-local, align 4
  %v1_100008ec = mul nuw nsw i32 %v4_100008dc, 4
  %v0_100008f0 = load i32, i32* @r28, align 4
  %v3_100008f0 = add i32 %v1_100008ec, %v3_100008d8
  %v4_100008f0 = inttoptr i32 %v3_100008f0 to i32*
  store i32 %v0_100008f0, i32* %v4_100008f0, align 4
  %v0_100008f8 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100008f8, i32* @global_var_1001b444.10, align 4
  %v0_100008fc = load i32, i32* %r0.global-to-local, align 4
  %v1_100008fc = trunc i32 %v0_100008fc to i8
  store i8 %v1_100008fc, i8* @global_var_1001b440.9, align 1
  store i32 268437764, i32* @lr, align 4
  %v2_10000900 = call i32 @function_10009410(i32 1, i32 8)
  %v3_10000904 = load i8, i8* @global_var_1001b440.9, align 1
  %v4_10000904 = zext i8 %v3_10000904 to i32
  store i32 %v4_10000904, i32* %r4.global-to-local, align 4
  store i32 %v2_10000900, i32* %r28.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  %v3_10000918 = load i32, i32* @global_var_1001b444.10, align 4
  %v2_1000091c = inttoptr i32 %v2_10000900 to i32*
  store i32 268439524, i32* %v2_1000091c, align 4
  %v0_10000920 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000920 = mul i32 %v0_10000920, 4
  store i32 %v1_10000920, i32* %r4.global-to-local, align 4
  %v0_10000924 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000924 = trunc i32 %v0_10000924 to i8
  %v2_10000924 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000924 = add i32 %v2_10000924, 4
  %v4_10000924 = inttoptr i32 %v3_10000924 to i8*
  store i8 %v1_10000924, i8* %v4_10000924, align 1
  %v0_10000928 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000928 = add i32 %v0_10000928, 4
  store i32 %v1_10000928, i32* %r4.global-to-local, align 4
  store i32 268437808, i32* @lr, align 4
  %v3_1000092c = call i32 @function_10009580(i32 %v3_10000918, i32 %v1_10000928, i32 268439524)
  %v3_10000930 = load i8, i8* @global_var_1001b440.9, align 1
  %v4_10000930 = zext i8 %v3_10000930 to i32
  store i32 %v3_1000092c, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b441.11 to i32), i32* %r0.global-to-local, align 4
  %v1_10000940 = mul nuw nsw i32 %v4_10000930, 4
  %v0_10000944 = load i32, i32* @r28, align 4
  %v3_10000944 = add i32 %v1_10000940, %v3_1000092c
  %v4_10000944 = inttoptr i32 %v3_10000944 to i32*
  store i32 %v0_10000944, i32* %v4_10000944, align 4
  %v0_1000094c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000094c = trunc i32 %v0_1000094c to i8
  store i8 %v1_1000094c, i8* @global_var_1001b440.9, align 1
  %v0_10000950 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000950, i32* @global_var_1001b444.10, align 4
  store i32 268437848, i32* @lr, align 4
  %v2_10000954 = call i32 @function_10009410(i32 1, i32 8)
  %v3_10000958 = load i8, i8* @global_var_1001b440.9, align 1
  %v4_10000958 = zext i8 %v3_10000958 to i32
  store i32 %v4_10000958, i32* %r4.global-to-local, align 4
  store i32 %v2_10000954, i32* %r28.global-to-local, align 4
  store i32 7, i32* %r0.global-to-local, align 4
  %v3_1000096c = load i32, i32* @global_var_1001b444.10, align 4
  %v2_10000970 = inttoptr i32 %v2_10000954 to i32*
  store i32 268437948, i32* %v2_10000970, align 4
  %v0_10000974 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000974 = mul i32 %v0_10000974, 4
  store i32 %v1_10000974, i32* %r4.global-to-local, align 4
  %v0_10000978 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000978 = trunc i32 %v0_10000978 to i8
  %v2_10000978 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000978 = add i32 %v2_10000978, 4
  %v4_10000978 = inttoptr i32 %v3_10000978 to i8*
  store i8 %v1_10000978, i8* %v4_10000978, align 1
  %v0_1000097c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000097c = add i32 %v0_1000097c, 4
  store i32 %v1_1000097c, i32* %r4.global-to-local, align 4
  store i32 268437892, i32* @lr, align 4
  %v3_10000980 = call i32 @function_10009580(i32 %v3_1000096c, i32 %v1_1000097c, i32 268437948)
  %v3_10000984 = load i8, i8* @global_var_1001b440.9, align 1
  %v4_10000984 = zext i8 %v3_10000984 to i32
  store i32 %v3_10000980, i32* @global_var_1001b444.10, align 4
  store i32 ptrtoint (i8* @global_var_1001b441.11 to i32), i32* %r0.global-to-local, align 4
  %v1_10000990 = mul nuw nsw i32 %v4_10000984, 4
  %v0_10000994 = load i32, i32* @r28, align 4
  %v3_10000994 = add i32 %v1_10000990, %v3_10000980
  %v4_10000994 = inttoptr i32 %v3_10000994 to i32*
  store i32 %v0_10000994, i32* %v4_10000994, align 4
  %v0_1000099c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000099c = trunc i32 %v0_1000099c to i8
  store i8 %v1_1000099c, i8* @global_var_1001b440.9, align 1
  store i32 %v0_10000690, i32* %r0.global-to-local, align 4
  store i32 %v0_100006ac, i32* @r28, align 4
  ret i32 1

; uselistorder directives
  uselistorder i32 ptrtoint (i8* @global_var_1001b441.11 to i32), { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_1001b440.9, { 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_100009bc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_100009bc:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-116 = alloca i32, align 4
  %stack_var_-106 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %v0_100009c0 = load i32, i32* @lr, align 4
  store i32 %v0_100009c0, i32* %r0.global-to-local, align 4
  %v0_100009c4 = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r19.global-to-local, align 4
  store i32 0, i32* %r22.global-to-local, align 4
  %v0_100009d8 = load i32, i32* @r27, align 4
  store i32 %v0_100009c4, i32* %r27.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v0_100009e8 = load i32, i32* %r0.global-to-local, align 4
  %v0_10000a04 = load i32, i32* @r24, align 4
  store i32 %arg3, i32* @r25, align 4
  %v0_10000a10 = load i32, i32* @r26, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10000a1c = load i32, i32* @r29, align 4
  store i32 %arg5, i32* @r29, align 4
  %v0_10000a24 = load i32, i32* @r30, align 4
  %v0_10000a28 = load i32, i32* @r31, align 4
  store i32 0, i32* %stack_var_-120, align 4
  store i32 268438080, i32* @lr, align 4
  %v2_10000a3c = call i32 @function_10009410(i32 %arg2, i32 4)
  store i32 %v2_10000a3c, i32* %r20.global-to-local, align 4
  %v0_10000a44 = load i32, i32* @r29, align 4
  %v0_10000a50 = load i32, i32* @r28, align 4
  store i32 %v0_10000a50, i32* %r3.global-to-local, align 4
  store i32 268438104, i32* @lr, align 4
  %v4_10000a54 = inttoptr i32 %v0_10000a44 to i32*
  %v5_10000a54 = call i32 @function_10000300(i32 %v0_10000a50, i32* %v4_10000a54, i32 2, i32 0)
  %v5_10000a64 = trunc i32 %v5_10000a54 to i8
  %v0_10000a6c = load i32, i32* @r29, align 4
  %v0_10000a70 = load i32, i32* @r28, align 4
  store i32 %v0_10000a70, i32* %r3.global-to-local, align 4
  store i32 268438136, i32* @lr, align 4
  %v4_10000a74 = inttoptr i32 %v0_10000a6c to i32*
  %v5_10000a74 = call i32 @function_10000300(i32 %v0_10000a70, i32* %v4_10000a74, i32 3, i32 65535)
  %v0_10000a78 = load i32, i32* @r29, align 4
  store i32 %v5_10000a74, i32* %r24.global-to-local, align 4
  %v0_10000a88 = load i32, i32* @r28, align 4
  store i32 %v0_10000a88, i32* %r3.global-to-local, align 4
  store i32 268438160, i32* @lr, align 4
  %v4_10000a8c = inttoptr i32 %v0_10000a78 to i32*
  %v5_10000a8c = call i32 @function_10000300(i32 %v0_10000a88, i32* %v4_10000a8c, i32 4, i32 64)
  %v0_10000a90 = load i32, i32* @r29, align 4
  %v1_10000a9c = urem i32 %v5_10000a8c, 256
  store i32 %v1_10000a9c, i32* %r14.global-to-local, align 4
  %v0_10000aa0 = load i32, i32* @r28, align 4
  store i32 %v0_10000aa0, i32* %r3.global-to-local, align 4
  store i32 268438184, i32* @lr, align 4
  %v4_10000aa4 = inttoptr i32 %v0_10000a90 to i32*
  %v5_10000aa4 = call i32 @function_10000300(i32 %v0_10000aa0, i32* %v4_10000aa4, i32 5, i32 1)
  %v0_10000ab4 = load i32, i32* @r29, align 4
  %v1_10000ab8 = urem i32 %v5_10000aa4, 256
  store i32 %v1_10000ab8, i32* %r23.global-to-local, align 4
  %v0_10000abc = load i32, i32* @r28, align 4
  store i32 %v0_10000abc, i32* %r3.global-to-local, align 4
  store i32 268438212, i32* @lr, align 4
  %v4_10000ac0 = inttoptr i32 %v0_10000ab4 to i32*
  %v5_10000ac0 = call i32 @function_10000300(i32 %v0_10000abc, i32* %v4_10000ac0, i32 6, i32 65535)
  %v0_10000ac8 = load i32, i32* @r29, align 4
  store i32 %v5_10000ac0, i32* %r26.global-to-local, align 4
  %v0_10000ad8 = load i32, i32* @r28, align 4
  store i32 %v0_10000ad8, i32* %r3.global-to-local, align 4
  store i32 268438240, i32* @lr, align 4
  %v4_10000adc = inttoptr i32 %v0_10000ac8 to i32*
  %v5_10000adc = call i32 @function_10000300(i32 %v0_10000ad8, i32* %v4_10000adc, i32 7, i32 65535)
  %v0_10000ae0 = load i32, i32* @r29, align 4
  store i32 %v5_10000adc, i32* %r30.global-to-local, align 4
  %v0_10000af0 = load i32, i32* @r28, align 4
  store i32 %v0_10000af0, i32* %r3.global-to-local, align 4
  store i32 268438264, i32* @lr, align 4
  %v4_10000af4 = inttoptr i32 %v0_10000ae0 to i32*
  %v5_10000af4 = call i32 @function_10000300(i32 %v0_10000af0, i32* %v4_10000af4, i32 0, i32 512)
  %v0_10000af8 = load i32, i32* @r29, align 4
  store i32 %v5_10000af4, i32* %r18.global-to-local, align 4
  %v0_10000b08 = load i32, i32* @r28, align 4
  store i32 %v0_10000b08, i32* %r3.global-to-local, align 4
  store i32 268438288, i32* @lr, align 4
  %v4_10000b0c = inttoptr i32 %v0_10000af8 to i32*
  %v5_10000b0c = call i32 @function_10000300(i32 %v0_10000b08, i32* %v4_10000b0c, i32 1, i32 1)
  %v0_10000b10 = load i32, i32* @r29, align 4
  %v1_10000b14 = urem i32 %v5_10000b0c, 256
  %v0_10000b24 = load i32, i32* @r28, align 4
  store i32 %v0_10000b24, i32* %r3.global-to-local, align 4
  store i32 268438316, i32* @lr, align 4
  %v4_10000b28 = inttoptr i32 %v0_10000b10 to i32*
  %v5_10000b28 = call i32 @function_10000300(i32 %v0_10000b24, i32* %v4_10000b28, i32 18, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10000b30 = load i32, i32* @global_var_1001b448.12, align 4
  %v0_10000b34 = load i32, i32* @r29, align 4
  store i32 %v5_10000b28, i32* @r31, align 4
  %v0_10000b40 = load i32, i32* @r28, align 4
  store i32 %v0_10000b40, i32* %r3.global-to-local, align 4
  store i32 268438344, i32* @lr, align 4
  %v4_10000b44 = inttoptr i32 %v0_10000b34 to i32*
  %v5_10000b44 = call i32 @function_10000300(i32 %v0_10000b40, i32* %v4_10000b44, i32 19, i32 %v3_10000b30)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268438356, i32* @lr, align 4
  %v0_10000b50 = call i32 @function_1000879c()
  %v1_10000b58 = load i32, i32* %r27.global-to-local, align 4
  %v2_10000b58 = add i32 %v1_10000b58, %v0_10000b50
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268438380, i32* @lr, align 4
  %v3_10000b68 = call i32 @function_100090b4(i32 2, i32 3, i32 6)
  store i32 %v3_10000b68, i32* %r3.global-to-local, align 4
  %v1_10000b6c = icmp slt i32 %v3_10000b68, -1
  %v3_10000b6c = icmp eq i32 %v3_10000b68, -1
  store i1 %v1_10000b6c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000b6c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10000b68, i32* %r21.global-to-local, align 4
  br i1 %v3_10000b6c, label %dec_label_pc_10000ed4, label %dec_label_pc_10000b78

dec_label_pc_10000b78:                            ; preds = %dec_label_pc_100009bc
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10000b84 = ptrtoint i32* %stack_var_-120 to i32
  store i32 1, i32* %stack_var_-120, align 4
  store i32 268438420, i32* @lr, align 4
  %v4_10000b90 = call i32 @function_10009078(i32 0, i32 3, i32 %v2_10000b84, i32 4)
  store i32 %v4_10000b90, i32* %r3.global-to-local, align 4
  %v1_10000b94 = icmp slt i32 %v4_10000b90, -1
  %v3_10000b94 = icmp eq i32 %v4_10000b90, -1
  store i1 %v1_10000b94, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000b94, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000b94, label %dec_label_pc_10000fd8, label %dec_label_pc_10000b9c

dec_label_pc_10000b9c:                            ; preds = %dec_label_pc_10000b78
  %v0_10000b9c = load i32, i32* %r19.global-to-local, align 4
  %v1_10000b9c = icmp slt i32 %v0_10000b9c, 0
  %v3_10000b9c = icmp eq i32 %v0_10000b9c, 0
  store i1 %v1_10000b9c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000b9c, i1* %cr7_eq.global-to-local, align 1
  %v0_10000ba0 = load i32, i32* @r31, align 4
  %v1_10000ba0 = urem i32 %v0_10000ba0, 256
  store i32 %v1_10000ba0, i32* @r31, align 4
  %v0_10000ba4 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000ba4, i32* %stack_var_-120, align 4
  %v0_10000ba8 = load i32, i32* %r24.global-to-local, align 4
  %v1_10000ba8 = urem i32 %v0_10000ba8, 65536
  store i32 %v1_10000ba8, i32* @r24, align 4
  %v0_10000bac = call i32 @__asm_mfcr()
  store i32 %v0_10000bac, i32* %r3.global-to-local, align 4
  %v1_10000bb0 = mul i32 %v0_10000bac, 268435456
  store i32 %v1_10000bb0, i32* %r0.global-to-local, align 4
  %v0_10000bb4 = load i32, i32* %r26.global-to-local, align 4
  %v1_10000bb4 = urem i32 %v0_10000bb4, 65536
  store i32 %v1_10000bb4, i32* %r16.global-to-local, align 4
  %v0_10000bb8 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000bb8 = urem i32 %v0_10000bb8, 65536
  store i32 %v1_10000bb8, i32* %r17.global-to-local, align 4
  %v0_10000bbc = load i32, i32* @r31, align 4
  %v0_10000bc4 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10000bc4 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10000bc4 = or i1 %v0_10000bc4, %v1_10000bc4
  br i1 %v2_10000bc4, label %dec_label_pc_10000d30.preheader, label %dec_label_pc_10000bc8

dec_label_pc_10000bc8:                            ; preds = %dec_label_pc_10000b9c
  %v0_10000bc8 = load i32, i32* %r23.global-to-local, align 4
  %v3_10000bc8 = icmp eq i32 %v0_10000bc8, 0
  store i1 %v3_10000bc8, i1* %cr3_eq.global-to-local, align 1
  %v3_10000bcc = icmp eq i32 %v0_10000bbc, 0
  store i1 %v3_10000bcc, i1* %cr4_eq.global-to-local, align 1
  %v0_10000bd0 = load i32, i32* %r18.global-to-local, align 4
  %v1_10000bd0 = urem i32 %v0_10000bd0, 65536
  %v0_10000bd4 = load i32, i32* @r24, align 4
  %v1_10000bd4 = sub i32 -1, %v0_10000bd4
  store i32 %v1_10000bd4, i32* %r11.global-to-local, align 4
  %v1_10000bdc = add nuw nsw i32 %v1_10000bd0, 66
  store i32 %v1_10000bdc, i32* %r0.global-to-local, align 4
  %v1_10000be0 = add nuw nsw i32 %v1_10000bd0, 28
  store i32 %v1_10000be0, i32* %r9.global-to-local, align 4
  %fold = add i32 %v0_10000bd0, 66
  %v1_10000be4 = urem i32 %fold, 65536
  store i32 %v1_10000be4, i32* %r23.global-to-local, align 4
  %fold5 = add i32 %v0_10000bd0, 28
  %v1_10000be8 = urem i32 %fold5, 65536
  store i32 %v1_10000be8, i32* %r26.global-to-local, align 4
  %v1_10000bec = urem i32 %v1_10000bd4, 65536
  store i32 %v1_10000bec, i32* %r27.global-to-local, align 4
  %fold6 = add i32 %v0_10000bd0, 8
  %v1_10000bf0 = urem i32 %fold6, 65536
  store i32 %v1_10000bf0, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r22.global-to-local, align 4
  %v4_10000c78 = sext i8 %v5_10000a64 to i32
  br label %dec_label_pc_10000c2c

dec_label_pc_10000c04:                            ; preds = %dec_label_pc_10000cf0
  %v0_10000c04 = load i32, i32* %r31.global-to-local, align 4
  %v1_10000c04 = add i32 %v0_10000c04, 16
  %v2_10000c04 = inttoptr i32 %v1_10000c04 to i32*
  %v3_10000c04 = load i32, i32* %v2_10000c04, align 4
  store i32 %v3_10000c04, i32* %r0.global-to-local, align 4
  %v0_10000c08 = load i32, i32* @r28, align 4
  %v1_10000c08 = trunc i32 %v0_10000c08 to i16
  %v2_10000c08 = load i32, i32* %r29.global-to-local, align 4
  %v3_10000c08 = add i32 %v2_10000c08, 4
  %v4_10000c08 = inttoptr i32 %v3_10000c08 to i16*
  store i16 %v1_10000c08, i16* %v4_10000c08, align 2
  %v0_10000c0c = load i32, i32* %r0.global-to-local, align 4
  %v1_10000c0c = load i32, i32* %r30.global-to-local, align 4
  %v2_10000c0c = add i32 %v1_10000c0c, 16
  %v3_10000c0c = inttoptr i32 %v2_10000c0c to i32*
  store i32 %v0_10000c0c, i32* %v3_10000c0c, align 4
  %v0_10000c10 = load i32, i32* %r16.global-to-local, align 4
  %v1_10000c10 = trunc i32 %v0_10000c10 to i16
  %v2_10000c10 = load i32, i32* %r29.global-to-local, align 4
  %v3_10000c10 = inttoptr i32 %v2_10000c10 to i16*
  store i16 %v1_10000c10, i16* %v3_10000c10, align 2
  %v3_10000c14 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10000c14, i32* %r9.global-to-local, align 4
  %v0_10000c18 = load i32, i32* %r17.global-to-local, align 4
  %v1_10000c18 = trunc i32 %v0_10000c18 to i16
  %v2_10000c18 = load i32, i32* %r29.global-to-local, align 4
  %v3_10000c18 = add i32 %v2_10000c18, 2
  %v4_10000c18 = inttoptr i32 %v3_10000c18 to i16*
  store i16 %v1_10000c18, i16* %v4_10000c18, align 2
  %v0_10000c1c = load i32, i32* %r9.global-to-local, align 4
  %v1_10000c1c = add i32 %v0_10000c1c, 1
  %v1_10000c20 = load i32, i32* %r19.global-to-local, align 4
  %v2_10000c20 = icmp slt i32 %v1_10000c1c, %v1_10000c20
  %v4_10000c20 = icmp eq i32 %v1_10000c1c, %v1_10000c20
  store i1 %v2_10000c20, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10000c20, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10000c1c, i32* %stack_var_-120, align 4
  br i1 %v2_10000c20, label %dec_label_pc_10000c2c, label %dec_label_pc_10000d30.preheader

dec_label_pc_10000c2c:                            ; preds = %dec_label_pc_10000c04, %dec_label_pc_10000d0c, %dec_label_pc_10000bc8
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268438584, i32* @lr, align 4
  %v2_10000c34 = call i32 @function_10009410(i32 1510, i32 4)
  store i32 %v2_10000c34, i32* %r3.global-to-local, align 4
  %v3_10000c38 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10000c38, i32* %r9.global-to-local, align 4
  %v0_10000c3c = load i32, i32* @r31, align 4
  %v1_10000c3c = mul i32 %v0_10000c3c, 4
  store i32 %v1_10000c3c, i32* %r0.global-to-local, align 4
  %v1_10000c40 = load i32, i32* %r20.global-to-local, align 4
  %v3_10000c40 = add i32 %v1_10000c40, %v1_10000c3c
  %v4_10000c40 = inttoptr i32 %v3_10000c40 to i32*
  store i32 %v2_10000c34, i32* %v4_10000c40, align 4
  %v0_10000c44 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000c44 = mul i32 %v0_10000c44, 4
  store i32 %v1_10000c44, i32* %r9.global-to-local, align 4
  %v1_10000c48 = load i32, i32* %r20.global-to-local, align 4
  %v2_10000c48 = add i32 %v1_10000c48, %v1_10000c44
  %v3_10000c48 = inttoptr i32 %v2_10000c48 to i32*
  %v4_10000c48 = load i32, i32* %v3_10000c48, align 4
  store i32 %v4_10000c48, i32* %r31.global-to-local, align 4
  %v1_10000c4c = inttoptr i32 %v4_10000c48 to i32*
  %v2_10000c4c = load i32, i32* %v1_10000c4c, align 4
  store i32 %v2_10000c4c, i32* %r0.global-to-local, align 4
  %v1_10000c50 = add i32 %v4_10000c48, 38
  store i32 %v1_10000c50, i32* %r30.global-to-local, align 4
  %v0_10000c54 = load i32, i32* %r14.global-to-local, align 4
  %v1_10000c54 = trunc i32 %v0_10000c54 to i8
  %v3_10000c54 = add i32 %v4_10000c48, 8
  %v4_10000c54 = inttoptr i32 %v3_10000c54 to i8*
  store i8 %v1_10000c54, i8* %v4_10000c54, align 1
  %v0_10000c58 = load i32, i32* %r31.global-to-local, align 4
  %v1_10000c58 = add i32 %v0_10000c58, 58
  store i32 %v1_10000c58, i32* %r29.global-to-local, align 4
  %v1_10000c5c = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10000c5c, i32* %r0.global-to-local, align 4
  %v0_10000c60 = load i32, i32* @r24, align 4
  %v1_10000c60 = trunc i32 %v0_10000c60 to i16
  %v2_10000c60 = load i32, i32* %r31.global-to-local, align 4
  %v3_10000c60 = add i32 %v2_10000c60, 4
  %v4_10000c60 = inttoptr i32 %v3_10000c60 to i16*
  store i16 %v1_10000c60, i16* %v4_10000c60, align 2
  %v1_10000c64 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_10000c68 = load i32, i32* %r31.global-to-local, align 4
  %v1_10000c68 = add i32 %v0_10000c68, 20
  store i32 %v1_10000c68, i32* %r9.global-to-local, align 4
  %v2_10000c6c = inttoptr i32 %v0_10000c68 to i32*
  store i32 %v1_10000c64, i32* %v2_10000c6c, align 4
  %v0_10000c70 = load i32, i32* %r31.global-to-local, align 4
  %v1_10000c70 = add i32 %v0_10000c70, 24
  store i32 %v1_10000c70, i32* %r11.global-to-local, align 4
  %v0_10000c74 = load i32, i32* %r23.global-to-local, align 4
  %v1_10000c74 = trunc i32 %v0_10000c74 to i16
  %v3_10000c74 = add i32 %v0_10000c70, 2
  %v4_10000c74 = inttoptr i32 %v3_10000c74 to i16*
  store i16 %v1_10000c74, i16* %v4_10000c74, align 2
  store i32 %v4_10000c78, i32* %r0.global-to-local, align 4
  %v2_10000c7c = load i32, i32* %r31.global-to-local, align 4
  %v3_10000c7c = add i32 %v2_10000c7c, 1
  %v4_10000c7c = inttoptr i32 %v3_10000c7c to i8*
  store i8 %v5_10000a64, i8* %v4_10000c7c, align 1
  %v0_10000c80 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10000c80, label %dec_label_pc_10000c8c, label %dec_label_pc_10000c84

dec_label_pc_10000c84:                            ; preds = %dec_label_pc_10000c2c
  %v2_10000c88 = load i32, i32* %r31.global-to-local, align 4
  %v3_10000c88 = add i32 %v2_10000c88, 6
  %v4_10000c88 = inttoptr i32 %v3_10000c88 to i16*
  store i16 16384, i16* %v4_10000c88, align 2
  br label %dec_label_pc_10000c8c

dec_label_pc_10000c8c:                            ; preds = %dec_label_pc_10000c2c, %dec_label_pc_10000c84
  %v2_10000c90 = load i32, i32* %r31.global-to-local, align 4
  %v3_10000c90 = add i32 %v2_10000c90, 9
  %v4_10000c90 = inttoptr i32 %v3_10000c90 to i8*
  store i8 47, i8* %v4_10000c90, align 1
  store i32 25944, i32* %r0.global-to-local, align 4
  %v2_10000c98 = load i32, i32* %r9.global-to-local, align 4
  %v3_10000c98 = add i32 %v2_10000c98, 2
  %v4_10000c98 = inttoptr i32 %v3_10000c98 to i16*
  store i16 25944, i16* %v4_10000c98, align 2
  %v2_10000ca0 = load i32, i32* %r11.global-to-local, align 4
  %v3_10000ca0 = add i32 %v2_10000ca0, 12
  %v4_10000ca0 = inttoptr i32 %v3_10000ca0 to i16*
  store i16 2048, i16* %v4_10000ca0, align 2
  %v3_10000ca4 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10000ca4, i32* %r9.global-to-local, align 4
  %v0_10000ca8 = load i32, i32* %r31.global-to-local, align 4
  %v1_10000ca8 = add i32 %v0_10000ca8, 38
  %v2_10000ca8 = inttoptr i32 %v1_10000ca8 to i32*
  %v3_10000ca8 = load i32, i32* %v2_10000ca8, align 4
  store i32 %v3_10000ca8, i32* %r0.global-to-local, align 4
  %v1_10000cb0 = mul i32 %v3_10000ca4, 24
  store i32 %v1_10000cb0, i32* %r9.global-to-local, align 4
  %v1_10000cb4 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10000cb4, i32* %r0.global-to-local, align 4
  %v1_10000cb8 = load i32, i32* %r31.global-to-local, align 4
  %v2_10000cb8 = add i32 %v1_10000cb8, 12
  %v3_10000cb8 = inttoptr i32 %v2_10000cb8 to i32*
  store i32 %v5_10000b44, i32* %v3_10000cb8, align 4
  %v0_10000cbc = load i32, i32* %r9.global-to-local, align 4
  %v1_10000cbc = load i32, i32* @r25, align 4
  %v2_10000cbc = add i32 %v1_10000cbc, %v0_10000cbc
  store i32 %v2_10000cbc, i32* %r9.global-to-local, align 4
  %v1_10000cc0 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10000cc0, i32* %r0.global-to-local, align 4
  %v0_10000cc4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000cc4 = add i32 %v0_10000cc4, 16
  %v2_10000cc4 = inttoptr i32 %v1_10000cc4 to i32*
  %v3_10000cc4 = load i32, i32* %v2_10000cc4, align 4
  store i32 %v3_10000cc4, i32* %r11.global-to-local, align 4
  %v1_10000cc8 = load i32, i32* %r31.global-to-local, align 4
  %v2_10000cc8 = add i32 %v1_10000cc8, 38
  %v3_10000cc8 = inttoptr i32 %v2_10000cc8 to i32*
  store i32 %v1_10000cc0, i32* %v3_10000cc8, align 4
  %v0_10000ccc = load i32, i32* %r11.global-to-local, align 4
  %v1_10000ccc = load i32, i32* %r31.global-to-local, align 4
  %v2_10000ccc = add i32 %v1_10000ccc, 16
  %v3_10000ccc = inttoptr i32 %v2_10000ccc to i32*
  store i32 %v0_10000ccc, i32* %v3_10000ccc, align 4
  store i32 %v4_10000c78, i32* %r11.global-to-local, align 4
  %v0_10000cd4 = load i32, i32* %r26.global-to-local, align 4
  %v1_10000cd4 = trunc i32 %v0_10000cd4 to i16
  %v2_10000cd4 = load i32, i32* %r30.global-to-local, align 4
  %v3_10000cd4 = add i32 %v2_10000cd4, 2
  %v4_10000cd4 = inttoptr i32 %v3_10000cd4 to i16*
  store i16 %v1_10000cd4, i16* %v4_10000cd4, align 2
  %v0_10000cd8 = load i32, i32* %r11.global-to-local, align 4
  %v1_10000cd8 = trunc i32 %v0_10000cd8 to i8
  %v2_10000cd8 = load i32, i32* %r30.global-to-local, align 4
  %v3_10000cd8 = add i32 %v2_10000cd8, 1
  %v4_10000cd8 = inttoptr i32 %v3_10000cd8 to i8*
  store i8 %v1_10000cd8, i8* %v4_10000cd8, align 1
  %v0_10000cdc = load i32, i32* %r27.global-to-local, align 4
  %v1_10000cdc = trunc i32 %v0_10000cdc to i16
  %v2_10000cdc = load i32, i32* %r30.global-to-local, align 4
  %v3_10000cdc = add i32 %v2_10000cdc, 4
  %v4_10000cdc = inttoptr i32 %v3_10000cdc to i16*
  store i16 %v1_10000cdc, i16* %v4_10000cdc, align 2
  %v0_10000ce0 = load i32, i32* %r14.global-to-local, align 4
  %v1_10000ce0 = trunc i32 %v0_10000ce0 to i8
  %v2_10000ce0 = load i32, i32* %r30.global-to-local, align 4
  %v3_10000ce0 = add i32 %v2_10000ce0, 8
  %v4_10000ce0 = inttoptr i32 %v3_10000ce0 to i8*
  store i8 %v1_10000ce0, i8* %v4_10000ce0, align 1
  %v0_10000ce4 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10000ce4, label %dec_label_pc_10000cf0, label %dec_label_pc_10000ce8

dec_label_pc_10000ce8:                            ; preds = %dec_label_pc_10000c8c
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10000cec = load i32, i32* %r30.global-to-local, align 4
  %v3_10000cec = add i32 %v2_10000cec, 6
  %v4_10000cec = inttoptr i32 %v3_10000cec to i16*
  store i16 16384, i16* %v4_10000cec, align 2
  br label %dec_label_pc_10000cf0

dec_label_pc_10000cf0:                            ; preds = %dec_label_pc_10000c8c, %dec_label_pc_10000ce8
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_10000cf4 = load i32, i32* %r30.global-to-local, align 4
  %v3_10000cf4 = add i32 %v2_10000cf4, 9
  %v4_10000cf4 = inttoptr i32 %v3_10000cf4 to i8*
  store i8 17, i8* %v4_10000cf4, align 1
  %v0_10000cf8 = call i32 @function_10005258()
  store i32 %v0_10000cf8, i32* %r3.global-to-local, align 4
  %v1_10000cfc = add i32 %v0_10000cf8, -1024
  store i32 %v1_10000cfc, i32* %r0.global-to-local, align 4
  %v1_10000d00 = load i32, i32* %r30.global-to-local, align 4
  %v2_10000d00 = add i32 %v1_10000d00, 12
  %v3_10000d00 = inttoptr i32 %v2_10000d00 to i32*
  store i32 %v0_10000cf8, i32* %v3_10000d00, align 4
  %v0_10000d04 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000d04 = sub i32 -1, %v0_10000d04
  store i32 %v1_10000d04, i32* %r0.global-to-local, align 4
  %v0_10000d08 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10000d08, label %dec_label_pc_10000d0c, label %dec_label_pc_10000c04

dec_label_pc_10000d0c:                            ; preds = %dec_label_pc_10000cf0
  %v1_10000d0c = load i32, i32* %r30.global-to-local, align 4
  %v2_10000d0c = add i32 %v1_10000d0c, 16
  %v3_10000d0c = inttoptr i32 %v2_10000d0c to i32*
  store i32 %v1_10000d04, i32* %v3_10000d0c, align 4
  %v0_10000d10 = load i32, i32* @r28, align 4
  %v1_10000d10 = trunc i32 %v0_10000d10 to i16
  %v2_10000d10 = load i32, i32* %r29.global-to-local, align 4
  %v3_10000d10 = add i32 %v2_10000d10, 4
  %v4_10000d10 = inttoptr i32 %v3_10000d10 to i16*
  store i16 %v1_10000d10, i16* %v4_10000d10, align 2
  %v3_10000d14 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10000d14, i32* %r9.global-to-local, align 4
  %v0_10000d18 = load i32, i32* %r16.global-to-local, align 4
  %v1_10000d18 = trunc i32 %v0_10000d18 to i16
  %v2_10000d18 = load i32, i32* %r29.global-to-local, align 4
  %v3_10000d18 = inttoptr i32 %v2_10000d18 to i16*
  store i16 %v1_10000d18, i16* %v3_10000d18, align 2
  %v0_10000d1c = load i32, i32* %r9.global-to-local, align 4
  %v1_10000d1c = add i32 %v0_10000d1c, 1
  store i32 %v1_10000d1c, i32* @r31, align 4
  %v0_10000d20 = load i32, i32* %r17.global-to-local, align 4
  %v1_10000d20 = trunc i32 %v0_10000d20 to i16
  %v2_10000d20 = load i32, i32* %r29.global-to-local, align 4
  %v3_10000d20 = add i32 %v2_10000d20, 2
  %v4_10000d20 = inttoptr i32 %v3_10000d20 to i16*
  store i16 %v1_10000d20, i16* %v4_10000d20, align 2
  %v0_10000d24 = load i32, i32* @r31, align 4
  %v1_10000d24 = load i32, i32* %r19.global-to-local, align 4
  %v2_10000d24 = icmp slt i32 %v0_10000d24, %v1_10000d24
  %v4_10000d24 = icmp eq i32 %v0_10000d24, %v1_10000d24
  store i1 %v2_10000d24, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10000d24, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_10000d24, i32* %stack_var_-120, align 4
  br i1 %v2_10000d24, label %dec_label_pc_10000c2c, label %dec_label_pc_10000d30.preheader

dec_label_pc_10000d30.preheader:                  ; preds = %dec_label_pc_10000d0c, %dec_label_pc_10000c04, %dec_label_pc_10000b9c
  %v2_10000d3c = urem i32 %v0_10000bac, 16
  %v1_10000d44 = mul nuw i32 %v2_10000d3c, 268435456
  %v2_10000d50 = ptrtoint i32* %stack_var_-108 to i32
  %v2_10000d58 = ptrtoint i32* %stack_var_-106 to i32
  %v2_10000dec = ptrtoint i32* %stack_var_-116 to i32
  %v2_10000e00 = ptrtoint i32* %stack_var_-112 to i32
  %v3_10000d60 = icmp eq i32 %v0_10000bbc, 0
  %v3_10000d64 = icmp eq i32 %v5_10000b44, -1
  %v3_10000d6c = icmp eq i32 %v1_10000b14, 0
  br label %dec_label_pc_10000d30

dec_label_pc_10000d30:                            ; preds = %dec_label_pc_10000d30.preheader, %dec_label_pc_10000ec0
  store i32 0, i32* %stack_var_-120, align 4
  store i32 %v2_10000d3c, i32* %r0.global-to-local, align 4
  %v1_10000d40 = call %0 @__asm_mtcrf(i32 1, i32 %v2_10000d3c)
  store i32 %v1_10000d44, i32* %r0.global-to-local, align 4
  %v0_10000d48 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10000d48 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10000d48 = or i1 %v0_10000d48, %v1_10000d48
  br i1 %v2_10000d48, label %dec_label_pc_10000ec0, label %dec_label_pc_10000d4c

dec_label_pc_10000d4c:                            ; preds = %dec_label_pc_10000d30
  store i32 %v0_10000bbc, i32* %r0.global-to-local, align 4
  store i32 %v2_10000d50, i32* %r14.global-to-local, align 4
  store i32 %v1_10000b14, i32* %r11.global-to-local, align 4
  store i1 %v3_10000d60, i1* %cr4_eq.global-to-local, align 1
  store i1 %v3_10000d64, i1* %cr3_eq.global-to-local, align 1
  %v0_10000d68 = load i32, i32* %r18.global-to-local, align 4
  %v1_10000d68 = add i32 %v0_10000d68, 8
  store i32 %v1_10000d68, i32* %r22.global-to-local, align 4
  store i1 %v3_10000d6c, i1* %cr2_eq.global-to-local, align 1
  %v1_10000d70 = add i32 %v0_10000d68, 66
  store i32 %v1_10000d70, i32* %r23.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  br label %dec_label_pc_10000d7c

dec_label_pc_10000d7c:                            ; preds = %dec_label_pc_10000e30, %dec_label_pc_10000d4c
  %v0_10000d7c = phi i32 [ %v1_10000eb0, %dec_label_pc_10000e30 ], [ 0, %dec_label_pc_10000d4c ]
  %v1_10000d7c = mul i32 %v0_10000d7c, 24
  store i32 %v1_10000d7c, i32* %r0.global-to-local, align 4
  %v1_10000d80 = mul i32 %v0_10000d7c, 4
  store i32 %v1_10000d80, i32* %r11.global-to-local, align 4
  %v1_10000d84 = load i32, i32* %r20.global-to-local, align 4
  %v2_10000d84 = add i32 %v1_10000d84, %v1_10000d80
  %v3_10000d84 = inttoptr i32 %v2_10000d84 to i32*
  %v4_10000d84 = load i32, i32* %v3_10000d84, align 4
  store i32 %v4_10000d84, i32* @r28, align 4
  %v1_10000d88 = load i32, i32* @r25, align 4
  %v2_10000d88 = add i32 %v1_10000d88, %v1_10000d7c
  %v1_10000d8c = add i32 %v2_10000d88, 20
  %v2_10000d8c = inttoptr i32 %v1_10000d8c to i8*
  %v3_10000d8c = load i8, i8* %v2_10000d8c, align 1
  %v4_10000d8c = zext i8 %v3_10000d8c to i32
  store i32 %v4_10000d8c, i32* %r9.global-to-local, align 4
  %v1_10000d90 = add i32 %v4_10000d84, 24
  store i32 %v1_10000d90, i32* @r31, align 4
  %v1_10000d94 = add i32 %v4_10000d84, 38
  store i32 %v1_10000d94, i32* @r27, align 4
  %v1_10000d98 = add i32 %v4_10000d84, 58
  store i32 %v1_10000d98, i32* @r30, align 4
  %v1_10000d9c = icmp ult i8 %v3_10000d8c, 31
  %v3_10000d9c = icmp eq i8 %v3_10000d8c, 31
  store i1 %v1_10000d9c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000d9c, i1* %cr7_eq.global-to-local, align 1
  %tmp39 = icmp ult i8 %v3_10000d8c, 32
  br i1 %tmp39, label %dec_label_pc_10000f34, label %dec_label_pc_10000da4

dec_label_pc_10000da4:                            ; preds = %dec_label_pc_10000d7c
  %v0_10000da4 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10000da4, label %dec_label_pc_10000f5c, label %dec_label_pc_10000da8

dec_label_pc_10000da8:                            ; preds = %dec_label_pc_10000f34, %dec_label_pc_10000da4
  store i32 65535, i32* %r29.global-to-local, align 4
  %v0_10000db0 = load i32, i32* @r24, align 4
  %v2_10000db0 = icmp slt i32 %v0_10000db0, 65535
  %v4_10000db0 = icmp eq i32 %v0_10000db0, 65535
  store i1 %v2_10000db0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10000db0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10000db0, label %dec_label_pc_10000f74, label %dec_label_pc_10000db8

dec_label_pc_10000db8:                            ; preds = %dec_label_pc_10000f5c, %dec_label_pc_10000da8
  %v1_10000db8 = phi i32 [ %v1_10000f6c, %dec_label_pc_10000f5c ], [ 65535, %dec_label_pc_10000da8 ]
  %v0_10000db8 = load i32, i32* %r16.global-to-local, align 4
  %v2_10000db8 = icmp slt i32 %v0_10000db8, %v1_10000db8
  %v4_10000db8 = icmp eq i32 %v0_10000db8, %v1_10000db8
  store i1 %v2_10000db8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10000db8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10000db8, label %dec_label_pc_10000f94, label %dec_label_pc_10000dc0

dec_label_pc_10000dc0:                            ; preds = %dec_label_pc_10000f74.dec_label_pc_10000dc0_crit_edge, %dec_label_pc_10000db8
  %v1_10000dc0 = phi i32 [ %v1_10000dc0.pre, %dec_label_pc_10000f74.dec_label_pc_10000dc0_crit_edge ], [ %v1_10000db8, %dec_label_pc_10000db8 ]
  %v0_10000dc0 = load i32, i32* %r17.global-to-local, align 4
  %v2_10000dc0 = icmp slt i32 %v0_10000dc0, %v1_10000dc0
  %v4_10000dc0 = icmp eq i32 %v0_10000dc0, %v1_10000dc0
  store i1 %v2_10000dc0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10000dc0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10000dc0, label %dec_label_pc_10000fa4, label %dec_label_pc_10000dc8

dec_label_pc_10000dc8:                            ; preds = %dec_label_pc_10000f94, %dec_label_pc_10000dc0
  %v0_10000dc8 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10000dc8, label %dec_label_pc_10000fb0, label %dec_label_pc_10000dcc

dec_label_pc_10000dcc:                            ; preds = %dec_label_pc_10000fa4, %dec_label_pc_10000dc8
  %v0_10000dcc = load i32, i32* @r28, align 4
  %v1_10000dcc = add i32 %v0_10000dcc, 16
  %v2_10000dcc = inttoptr i32 %v1_10000dcc to i32*
  %v3_10000dcc = load i32, i32* %v2_10000dcc, align 4
  store i32 %v3_10000dcc, i32* %r0.global-to-local, align 4
  %v1_10000dd0 = load i32, i32* @r27, align 4
  %v2_10000dd0 = add i32 %v1_10000dd0, 16
  %v3_10000dd0 = inttoptr i32 %v2_10000dd0 to i32*
  store i32 %v3_10000dcc, i32* %v3_10000dd0, align 4
  br label %dec_label_pc_10000dd4

dec_label_pc_10000dd4:                            ; preds = %dec_label_pc_10000fb0, %dec_label_pc_10000dcc
  %v0_10000dd4 = call i32 @function_10005258()
  store i32 %v0_10000dd4, i32* %r3.global-to-local, align 4
  store i32 %v0_10000dd4, i32* %stack_var_-116, align 4
  %v0_10000ddc = call i32 @function_10005258()
  store i32 %v0_10000ddc, i32* %r3.global-to-local, align 4
  store i32 %v0_10000ddc, i32* %stack_var_-112, align 4
  %v0_10000de4 = call i32 @function_10005258()
  store i32 %v0_10000de4, i32* %stack_var_-108, align 4
  %v0_10000df0 = load i32, i32* @r31, align 4
  store i32 %v0_10000df0, i32* %r3.global-to-local, align 4
  store i32 268439036, i32* @lr, align 4
  %v3_10000df8 = call i32 @function_10007d10(i32 %v0_10000df0, i32 %v2_10000dec, i32 4)
  %v0_10000dfc = load i32, i32* @r31, align 4
  %v1_10000dfc = add i32 %v0_10000dfc, 6
  store i32 %v1_10000dfc, i32* %r3.global-to-local, align 4
  store i32 268439052, i32* @lr, align 4
  %v3_10000e08 = call i32 @function_10007d10(i32 %v1_10000dfc, i32 %v2_10000e00, i32 4)
  %v0_10000e0c = load i32, i32* @r31, align 4
  %v1_10000e0c = add i32 %v0_10000e0c, 4
  store i32 %v1_10000e0c, i32* %r3.global-to-local, align 4
  store i32 268439068, i32* @lr, align 4
  %v3_10000e18 = call i32 @function_10007d10(i32 %v1_10000e0c, i32 %v2_10000d50, i32 2)
  %v0_10000e1c = load i32, i32* @r31, align 4
  %v1_10000e1c = add i32 %v0_10000e1c, 10
  store i32 %v1_10000e1c, i32* %r3.global-to-local, align 4
  store i32 268439084, i32* @lr, align 4
  %v3_10000e28 = call i32 @function_10007d10(i32 %v1_10000e1c, i32 %v2_10000d58, i32 2)
  store i32 %v3_10000e28, i32* %r3.global-to-local, align 4
  %v0_10000e2c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10000e2c, label %dec_label_pc_10000e30, label %dec_label_pc_10000fbc

dec_label_pc_10000e30:                            ; preds = %dec_label_pc_10000dd4, %dec_label_pc_10000fbc
  %v0_10000e30 = load i32, i32* @r26, align 4
  %v1_10000e30 = trunc i32 %v0_10000e30 to i16
  %v2_10000e30 = load i32, i32* @r28, align 4
  %v3_10000e30 = add i32 %v2_10000e30, 10
  %v4_10000e30 = inttoptr i32 %v3_10000e30 to i16*
  store i16 %v1_10000e30, i16* %v4_10000e30, align 2
  %v0_10000e38 = load i32, i32* @r28, align 4
  store i32 %v0_10000e38, i32* @r3, align 4
  %v2_10000e3c = call i32 @function_10003ca8(i32 %v0_10000e38, i32 20)
  %v3_10000e3c = trunc i32 %v2_10000e3c to i16
  %v3_10000e44 = load i32, i32* @r28, align 4
  %v4_10000e44 = add i32 %v3_10000e44, 10
  %v5_10000e44 = inttoptr i32 %v4_10000e44 to i16*
  store i16 %v3_10000e3c, i16* %v5_10000e44, align 2
  %v0_10000e48 = load i32, i32* @r27, align 4
  store i32 %v0_10000e48, i32* @r3, align 4
  %v0_10000e4c = load i32, i32* @r26, align 4
  %v1_10000e4c = trunc i32 %v0_10000e4c to i16
  %v3_10000e4c = add i32 %v0_10000e48, 10
  %v4_10000e4c = inttoptr i32 %v3_10000e4c to i16*
  store i16 %v1_10000e4c, i16* %v4_10000e4c, align 2
  %v2_10000e50 = call i32 @function_10003ca8(i32 %v0_10000e48, i32 20)
  %v3_10000e50 = trunc i32 %v2_10000e50 to i16
  %v0_10000e54 = load i32, i32* @r30, align 4
  store i32 %v0_10000e54, i32* @r4, align 4
  %v3_10000e58 = load i32, i32* @r27, align 4
  %v4_10000e58 = add i32 %v3_10000e58, 10
  %v5_10000e58 = inttoptr i32 %v4_10000e58 to i16*
  store i16 %v3_10000e50, i16* %v5_10000e58, align 2
  %v0_10000e5c = load i32, i32* %r22.global-to-local, align 4
  %v0_10000e60 = load i32, i32* @r26, align 4
  %v1_10000e60 = trunc i32 %v0_10000e60 to i16
  %v2_10000e60 = load i32, i32* @r30, align 4
  %v3_10000e60 = add i32 %v2_10000e60, 6
  %v4_10000e60 = inttoptr i32 %v3_10000e60 to i16*
  store i16 %v1_10000e60, i16* %v4_10000e60, align 2
  %v0_10000e64 = load i32, i32* @r27, align 4
  store i32 %v0_10000e64, i32* %r3.global-to-local, align 4
  %v0_10000e68 = load i32, i32* @r30, align 4
  %v1_10000e68 = add i32 %v0_10000e68, 4
  %v2_10000e68 = inttoptr i32 %v1_10000e68 to i16*
  %v3_10000e68 = load i16, i16* %v2_10000e68, align 2
  %v4_10000e68 = zext i16 %v3_10000e68 to i32
  %v4_10000e6c = call i32 @function_10003d0c(i32 %v0_10000e64, i32 %v0_10000e54, i32 %v4_10000e68, i32 %v0_10000e5c)
  %v5_10000e6c = trunc i32 %v4_10000e6c to i16
  store i32 %v4_10000e6c, i32* %r3.global-to-local, align 4
  %v3_10000e70 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10000e70, i32* %r0.global-to-local, align 4
  %v0_10000e74 = load i32, i32* @r28, align 4
  %v1_10000e74 = add i32 %v0_10000e74, 16
  %v2_10000e74 = inttoptr i32 %v1_10000e74 to i32*
  %v3_10000e74 = load i32, i32* %v2_10000e74, align 4
  store i32 %v3_10000e74, i32* %r11.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10000e7c = mul i32 %v3_10000e70, 24
  store i32 %v1_10000e7c, i32* %r0.global-to-local, align 4
  %v3_10000e80 = load i32, i32* @r30, align 4
  %v4_10000e80 = add i32 %v3_10000e80, 6
  %v5_10000e80 = inttoptr i32 %v4_10000e80 to i16*
  store i16 %v5_10000e6c, i16* %v5_10000e80, align 2
  %v0_10000e84 = load i32, i32* @r28, align 4
  %v0_10000e88 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10000e88, i32* %r3.global-to-local, align 4
  %v0_10000e8c = load i32, i32* %r0.global-to-local, align 4
  %v1_10000e8c = load i32, i32* @r25, align 4
  %v2_10000e8c = add i32 %v1_10000e8c, %v0_10000e8c
  %v0_10000e90 = load i32, i32* %r9.global-to-local, align 4
  %v3_10000e90 = trunc i32 %v0_10000e90 to i16
  %v5_10000e90 = inttoptr i32 %v2_10000e8c to i16*
  store i16 %v3_10000e90, i16* %v5_10000e90, align 2
  %v0_10000e94 = load i32, i32* %r11.global-to-local, align 4
  %v2_10000e94 = add i32 %v2_10000e8c, 4
  %v3_10000e94 = inttoptr i32 %v2_10000e94 to i32*
  store i32 %v0_10000e94, i32* %v3_10000e94, align 4
  %v0_10000e98 = load i32, i32* %r23.global-to-local, align 4
  %v0_10000e9c = load i32, i32* @r26, align 4
  %v1_10000e9c = trunc i32 %v0_10000e9c to i16
  %v3_10000e9c = add i32 %v2_10000e8c, 2
  %v4_10000e9c = inttoptr i32 %v3_10000e9c to i16*
  store i16 %v1_10000e9c, i16* %v4_10000e9c, align 2
  store i32 268439212, i32* @lr, align 4
  %v6_10000ea8 = call i32 @function_10009038(i32 %v0_10000e88, i32 %v0_10000e84, i32 %v0_10000e98, i32 16384, i32 %v2_10000e8c, i32 16)
  store i32 %v6_10000ea8, i32* %r3.global-to-local, align 4
  %v3_10000eac = load i32, i32* %stack_var_-120, align 4
  %v1_10000eb0 = add i32 %v3_10000eac, 1
  store i32 %v1_10000eb0, i32* %r9.global-to-local, align 4
  %v1_10000eb4 = load i32, i32* %r19.global-to-local, align 4
  %v2_10000eb4 = icmp slt i32 %v1_10000eb0, %v1_10000eb4
  %v4_10000eb4 = icmp eq i32 %v1_10000eb0, %v1_10000eb4
  store i1 %v2_10000eb4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10000eb4, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10000eb0, i32* %stack_var_-120, align 4
  br i1 %v2_10000eb4, label %dec_label_pc_10000d7c, label %dec_label_pc_10000ec0

dec_label_pc_10000ec0:                            ; preds = %dec_label_pc_10000e30, %dec_label_pc_10000d30
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268439240, i32* @lr, align 4
  %v0_10000ec4 = call i32 @function_1000879c()
  store i32 %v0_10000ec4, i32* %r3.global-to-local, align 4
  store i32 %v2_10000b58, i32* %r0.global-to-local, align 4
  %v2_10000ecc = icmp slt i32 %v2_10000b58, %v0_10000ec4
  %v4_10000ecc = icmp eq i32 %v2_10000b58, %v0_10000ec4
  store i1 %v2_10000ecc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10000ecc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10000ecc, label %dec_label_pc_10000ed4, label %dec_label_pc_10000d30

dec_label_pc_10000ed4:                            ; preds = %dec_label_pc_10000ec0, %dec_label_pc_100009bc, %dec_label_pc_10000fd8
  store i32 %v0_100009e8, i32* %r0.global-to-local, align 4
  %v1_10000ee8 = call %0 @__asm_mtcrf(i32 56, i32 %v0_100009c4)
  store i32 %v0_10000a04, i32* %r24.global-to-local, align 4
  store i32 %v0_10000a10, i32* %r26.global-to-local, align 4
  store i32 %v0_100009d8, i32* %r27.global-to-local, align 4
  store i32 %v0_10000a1c, i32* %r29.global-to-local, align 4
  store i32 %v0_10000a24, i32* %r30.global-to-local, align 4
  store i32 %v0_10000a28, i32* %r31.global-to-local, align 4
  %v0_10000f30 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10000f30

dec_label_pc_10000f34:                            ; preds = %dec_label_pc_10000d7c
  %v1_10000f34 = add i32 %v2_10000d88, 16
  %v2_10000f34 = inttoptr i32 %v1_10000f34 to i32*
  %v3_10000f34 = load i32, i32* %v2_10000f34, align 4
  store i32 %v3_10000f34, i32* %r29.global-to-local, align 4
  %v0_10000f38 = call i32 @function_10005258()
  store i32 %v0_10000f38, i32* %r3.global-to-local, align 4
  %v3_10000f3c = load i32, i32* %stack_var_-120, align 4
  %v1_10000f40 = mul i32 %v3_10000f3c, 24
  %v1_10000f44 = load i32, i32* @r25, align 4
  %v2_10000f44 = add i32 %v1_10000f44, %v1_10000f40
  store i32 %v2_10000f44, i32* %r9.global-to-local, align 4
  %v1_10000f48 = add i32 %v2_10000f44, 20
  %v2_10000f48 = inttoptr i32 %v1_10000f48 to i8*
  %v3_10000f48 = load i8, i8* %v2_10000f48, align 1
  %v4_10000f48 = zext i8 %v3_10000f48 to i32
  store i32 %v4_10000f48, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10000f48, 64
  %v2_10000f4c = zext i8 %tmp to i32
  %v3_10000f4c = lshr i32 %v0_10000f38, %v2_10000f4c
  store i32 %v3_10000f4c, i32* %r3.global-to-local, align 4
  %v0_10000f50 = load i32, i32* %r29.global-to-local, align 4
  %v2_10000f50 = add i32 %v3_10000f4c, %v0_10000f50
  store i32 %v2_10000f50, i32* %r29.global-to-local, align 4
  %v1_10000f54 = load i32, i32* @r28, align 4
  %v2_10000f54 = add i32 %v1_10000f54, 16
  %v3_10000f54 = inttoptr i32 %v2_10000f54 to i32*
  store i32 %v2_10000f50, i32* %v3_10000f54, align 4
  %v0_10000f58 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10000f58, label %dec_label_pc_10000f5c, label %dec_label_pc_10000da8

dec_label_pc_10000f5c:                            ; preds = %dec_label_pc_10000f34, %dec_label_pc_10000da4
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10000f60 = call i32 @function_10005258()
  store i32 %v0_10000f60, i32* %r3.global-to-local, align 4
  store i32 65535, i32* %r29.global-to-local, align 4
  %v1_10000f68 = load i32, i32* @r28, align 4
  %v2_10000f68 = add i32 %v1_10000f68, 12
  %v3_10000f68 = inttoptr i32 %v2_10000f68 to i32*
  store i32 %v0_10000f60, i32* %v3_10000f68, align 4
  %v0_10000f6c = load i32, i32* @r24, align 4
  %v1_10000f6c = load i32, i32* %r29.global-to-local, align 4
  %v2_10000f6c = icmp slt i32 %v0_10000f6c, %v1_10000f6c
  %v4_10000f6c = icmp eq i32 %v0_10000f6c, %v1_10000f6c
  store i1 %v2_10000f6c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10000f6c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10000f6c, label %dec_label_pc_10000f74, label %dec_label_pc_10000db8

dec_label_pc_10000f74:                            ; preds = %dec_label_pc_10000f5c, %dec_label_pc_10000da8
  %v0_10000f74 = call i32 @function_10005258()
  %v0_10000f78 = load i32, i32* %r16.global-to-local, align 4
  %v1_10000f78 = load i32, i32* %r29.global-to-local, align 4
  %v2_10000f78 = icmp slt i32 %v0_10000f78, %v1_10000f78
  %v4_10000f78 = icmp eq i32 %v0_10000f78, %v1_10000f78
  store i1 %v2_10000f78, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10000f78, i1* %cr7_eq.global-to-local, align 1
  %v1_10000f7c = urem i32 %v0_10000f74, 65536
  store i32 %v1_10000f7c, i32* %r3.global-to-local, align 4
  %v1_10000f80 = add nsw i32 %v1_10000f7c, -1000
  store i32 %v1_10000f80, i32* %r0.global-to-local, align 4
  %v1_10000f84 = trunc i32 %v0_10000f74 to i16
  %v2_10000f84 = load i32, i32* @r28, align 4
  %v3_10000f84 = add i32 %v2_10000f84, 4
  %v4_10000f84 = inttoptr i32 %v3_10000f84 to i16*
  store i16 %v1_10000f84, i16* %v4_10000f84, align 2
  %v0_10000f88 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000f88 = sub i32 -1, %v0_10000f88
  store i32 %v1_10000f88, i32* %r0.global-to-local, align 4
  %v1_10000f8c = trunc i32 %v1_10000f88 to i16
  %v2_10000f8c = load i32, i32* @r27, align 4
  %v3_10000f8c = add i32 %v2_10000f8c, 4
  %v4_10000f8c = inttoptr i32 %v3_10000f8c to i16*
  store i16 %v1_10000f8c, i16* %v4_10000f8c, align 2
  br i1 %v4_10000f78, label %dec_label_pc_10000f94, label %dec_label_pc_10000f74.dec_label_pc_10000dc0_crit_edge

dec_label_pc_10000f74.dec_label_pc_10000dc0_crit_edge: ; preds = %dec_label_pc_10000f74
  %v1_10000dc0.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10000dc0

dec_label_pc_10000f94:                            ; preds = %dec_label_pc_10000f74, %dec_label_pc_10000db8
  %v0_10000f94 = call i32 @function_10005258()
  %v1_10000f94 = trunc i32 %v0_10000f94 to i16
  store i32 %v0_10000f94, i32* %r3.global-to-local, align 4
  %v0_10000f98 = load i32, i32* %r17.global-to-local, align 4
  %v1_10000f98 = load i32, i32* %r29.global-to-local, align 4
  %v2_10000f98 = icmp slt i32 %v0_10000f98, %v1_10000f98
  %v4_10000f98 = icmp eq i32 %v0_10000f98, %v1_10000f98
  store i1 %v2_10000f98, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10000f98, i1* %cr7_eq.global-to-local, align 1
  %v3_10000f9c = load i32, i32* @r28, align 4
  %v4_10000f9c = add i32 %v3_10000f9c, 58
  %v5_10000f9c = inttoptr i32 %v4_10000f9c to i16*
  store i16 %v1_10000f94, i16* %v5_10000f9c, align 2
  br i1 %v4_10000f98, label %dec_label_pc_10000fa4, label %dec_label_pc_10000dc8

dec_label_pc_10000fa4:                            ; preds = %dec_label_pc_10000f94, %dec_label_pc_10000dc0
  %v0_10000fa4 = call i32 @function_10005258()
  %v1_10000fa4 = trunc i32 %v0_10000fa4 to i16
  store i32 %v0_10000fa4, i32* %r3.global-to-local, align 4
  %v3_10000fa8 = load i32, i32* @r30, align 4
  %v4_10000fa8 = add i32 %v3_10000fa8, 2
  %v5_10000fa8 = inttoptr i32 %v4_10000fa8 to i16*
  store i16 %v1_10000fa4, i16* %v5_10000fa8, align 2
  %v0_10000fac = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10000fac, label %dec_label_pc_10000fb0, label %dec_label_pc_10000dcc

dec_label_pc_10000fb0:                            ; preds = %dec_label_pc_10000fa4, %dec_label_pc_10000dc8
  %v0_10000fb0 = call i32 @function_10005258()
  store i32 %v0_10000fb0, i32* %r3.global-to-local, align 4
  %v1_10000fb4 = load i32, i32* @r27, align 4
  %v2_10000fb4 = add i32 %v1_10000fb4, 16
  %v3_10000fb4 = inttoptr i32 %v2_10000fb4 to i32*
  store i32 %v0_10000fb0, i32* %v3_10000fb4, align 4
  br label %dec_label_pc_10000dd4

dec_label_pc_10000fbc:                            ; preds = %dec_label_pc_10000dd4
  %v0_10000fbc = load i32, i32* @r30, align 4
  %v1_10000fbc = add i32 %v0_10000fbc, 8
  store i32 %v1_10000fbc, i32* @r29, align 4
  %v0_10000fc0 = load i32, i32* %r18.global-to-local, align 4
  store i32 %v0_10000fc0, i32* @r4, align 4
  store i32 %v1_10000fbc, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10000fcc.13 to i32), i32* @lr, align 4
  %v0_10000fc8 = call i32 @function_10005318()
  store i32 %v0_10000fc8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10000fd0 = load i32, i32* @r29, align 4
  %v2_10000fd0 = load i32, i32* %r18.global-to-local, align 4
  %v4_10000fd0 = add i32 %v2_10000fd0, %v1_10000fd0
  %v5_10000fd0 = inttoptr i32 %v4_10000fd0 to i8*
  store i8 0, i8* %v5_10000fd0, align 1
  br label %dec_label_pc_10000e30

dec_label_pc_10000fd8:                            ; preds = %dec_label_pc_10000b78
  %v0_10000fd8 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10000fd8, i32* %r3.global-to-local, align 4
  store i32 268439520, i32* @lr, align 4
  %v0_10000fdc = call i32 @function_100083cc()
  store i32 %v0_10000fdc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000ed4

; uselistorder directives
  uselistorder i32 %v0_10000fa4, { 1, 0 }
  uselistorder i32 %v0_10000f94, { 1, 0 }
  uselistorder i32 %v1_10000f88, { 1, 0 }
  uselistorder i32 %v1_10000f7c, { 1, 0 }
  uselistorder i32 %v0_10000f74, { 1, 0 }
  uselistorder i32 %v1_10000f6c, { 1, 2, 0 }
  uselistorder i32 %v0_10000ec4, { 1, 0, 2 }
  uselistorder i32 %v1_10000eb0, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_10000e8c, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10000e6c, { 1, 0 }
  uselistorder i32 %v1_10000dc0, { 1, 0 }
  uselistorder i32 %v1_10000db8, { 0, 2, 1 }
  uselistorder i32 %v4_10000d84, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10000d80, { 1, 0 }
  uselistorder i32 %v2_10000d3c, { 2, 1, 0 }
  uselistorder i32 %v1_10000d04, { 1, 0 }
  uselistorder i32 %v1_10000c44, { 1, 0 }
  uselistorder i32 %v1_10000c3c, { 1, 0 }
  uselistorder i32 %v1_10000c1c, { 0, 2, 1 }
  uselistorder i32 %v1_10000bd0, { 1, 0 }
  uselistorder i32 %v0_10000bd0, { 1, 2, 3, 0 }
  uselistorder i32 %v0_10000bbc, { 2, 1, 0 }
  uselistorder i32 %v4_10000b90, { 1, 0, 2 }
  uselistorder i32 %v3_10000b68, { 0, 2, 1, 3 }
  uselistorder i32 %v2_10000b58, { 1, 2, 0 }
  uselistorder i32 %v5_10000b44, { 1, 0 }
  uselistorder i8 %v5_10000a64, { 1, 0 }
  uselistorder i32* %stack_var_-120, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 8, 9, 20, 21 }
  uselistorder i32* %r31.global-to-local, { 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 1, 14 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 2, 11, 12 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 29, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 1 }
  uselistorder i32* %r29.global-to-local, { 8, 7, 9, 0, 1, 3, 2, 4, 5, 6, 10, 11, 12, 13, 17, 14, 15, 16 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 15, 16, 30, 31, 32, 33, 34 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10, 12, 13, 14, 15 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10, 12, 13, 14, 15 }
  uselistorder i32 66, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000ed4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10000e30, { 1, 0 }
  uselistorder label %dec_label_pc_10000d30, { 1, 0 }
  uselistorder label %dec_label_pc_10000cf0, { 1, 0 }
  uselistorder label %dec_label_pc_10000c8c, { 1, 0 }
  uselistorder label %dec_label_pc_10000c2c, { 1, 0, 2 }
}

define i32 @function_10000fe4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10000fe4:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-120 = alloca i32, align 4
  %v0_10000fe8 = load i32, i32* @lr, align 4
  store i32 %v0_10000fe8, i32* %r0.global-to-local, align 4
  %v0_10000fec = call i32 @__asm_mfcr()
  store i32 0, i32* %r18.global-to-local, align 4
  store i32 %arg2, i32* %r20.global-to-local, align 4
  %v0_10001000 = load i32, i32* @r27, align 4
  store i32 %v0_10000fec, i32* %r27.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v0_10001010 = load i32, i32* %r0.global-to-local, align 4
  %v0_1000102c = load i32, i32* @r24, align 4
  %v0_10001030 = load i32, i32* @r25, align 4
  store i32 %arg3, i32* @r26, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10001044 = load i32, i32* @r29, align 4
  store i32 %arg5, i32* @r29, align 4
  %v0_1000104c = load i32, i32* @r30, align 4
  %v0_10001050 = load i32, i32* @r31, align 4
  store i32 0, i32* %stack_var_-120, align 4
  store i32 268439656, i32* @lr, align 4
  %v2_10001064 = call i32 @function_10009410(i32 %arg2, i32 4)
  store i32 %v2_10001064, i32* %r21.global-to-local, align 4
  %v0_1000106c = load i32, i32* @r29, align 4
  %v0_10001078 = load i32, i32* @r28, align 4
  store i32 %v0_10001078, i32* %r3.global-to-local, align 4
  store i32 268439680, i32* @lr, align 4
  %v4_1000107c = inttoptr i32 %v0_1000106c to i32*
  %v5_1000107c = call i32 @function_10000300(i32 %v0_10001078, i32* %v4_1000107c, i32 2, i32 0)
  %v5_1000108c = trunc i32 %v5_1000107c to i8
  %v0_10001094 = load i32, i32* @r29, align 4
  %v0_10001098 = load i32, i32* @r28, align 4
  store i32 %v0_10001098, i32* %r3.global-to-local, align 4
  store i32 268439712, i32* @lr, align 4
  %v4_1000109c = inttoptr i32 %v0_10001094 to i32*
  %v5_1000109c = call i32 @function_10000300(i32 %v0_10001098, i32* %v4_1000109c, i32 3, i32 65535)
  %v0_100010a0 = load i32, i32* @r29, align 4
  store i32 %v5_1000109c, i32* %r25.global-to-local, align 4
  %v0_100010b0 = load i32, i32* @r28, align 4
  store i32 %v0_100010b0, i32* %r3.global-to-local, align 4
  store i32 268439736, i32* @lr, align 4
  %v4_100010b4 = inttoptr i32 %v0_100010a0 to i32*
  %v5_100010b4 = call i32 @function_10000300(i32 %v0_100010b0, i32* %v4_100010b4, i32 4, i32 64)
  %v0_100010b8 = load i32, i32* @r29, align 4
  %v1_100010c4 = urem i32 %v5_100010b4, 256
  store i32 %v1_100010c4, i32* %r14.global-to-local, align 4
  %v0_100010c8 = load i32, i32* @r28, align 4
  store i32 %v0_100010c8, i32* %r3.global-to-local, align 4
  store i32 268439760, i32* @lr, align 4
  %v4_100010cc = inttoptr i32 %v0_100010b8 to i32*
  %v5_100010cc = call i32 @function_10000300(i32 %v0_100010c8, i32* %v4_100010cc, i32 5, i32 1)
  %v0_100010dc = load i32, i32* @r29, align 4
  %v1_100010e0 = urem i32 %v5_100010cc, 256
  store i32 %v1_100010e0, i32* %r23.global-to-local, align 4
  %v0_100010e4 = load i32, i32* @r28, align 4
  store i32 %v0_100010e4, i32* %r3.global-to-local, align 4
  store i32 268439788, i32* @lr, align 4
  %v4_100010e8 = inttoptr i32 %v0_100010dc to i32*
  %v5_100010e8 = call i32 @function_10000300(i32 %v0_100010e4, i32* %v4_100010e8, i32 6, i32 65535)
  %v0_100010f0 = load i32, i32* @r29, align 4
  store i32 %v5_100010e8, i32* %r24.global-to-local, align 4
  %v0_10001100 = load i32, i32* @r28, align 4
  store i32 %v0_10001100, i32* %r3.global-to-local, align 4
  store i32 268439816, i32* @lr, align 4
  %v4_10001104 = inttoptr i32 %v0_100010f0 to i32*
  %v5_10001104 = call i32 @function_10000300(i32 %v0_10001100, i32* %v4_10001104, i32 7, i32 65535)
  %v0_10001108 = load i32, i32* @r29, align 4
  store i32 %v5_10001104, i32* %r30.global-to-local, align 4
  %v0_10001118 = load i32, i32* @r28, align 4
  store i32 %v0_10001118, i32* %r3.global-to-local, align 4
  store i32 268439840, i32* @lr, align 4
  %v4_1000111c = inttoptr i32 %v0_10001108 to i32*
  %v5_1000111c = call i32 @function_10000300(i32 %v0_10001118, i32* %v4_1000111c, i32 0, i32 512)
  %v0_10001120 = load i32, i32* @r29, align 4
  store i32 %v5_1000111c, i32* %r19.global-to-local, align 4
  %v0_10001130 = load i32, i32* @r28, align 4
  store i32 %v0_10001130, i32* %r3.global-to-local, align 4
  store i32 268439864, i32* @lr, align 4
  %v4_10001134 = inttoptr i32 %v0_10001120 to i32*
  %v5_10001134 = call i32 @function_10000300(i32 %v0_10001130, i32* %v4_10001134, i32 1, i32 1)
  %v0_10001138 = load i32, i32* @r29, align 4
  %v1_1000113c = urem i32 %v5_10001134, 256
  %v0_1000114c = load i32, i32* @r28, align 4
  store i32 %v0_1000114c, i32* %r3.global-to-local, align 4
  store i32 268439892, i32* @lr, align 4
  %v4_10001150 = inttoptr i32 %v0_10001138 to i32*
  %v5_10001150 = call i32 @function_10000300(i32 %v0_1000114c, i32* %v4_10001150, i32 18, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10001158 = load i32, i32* @global_var_1001b448.12, align 4
  %v0_1000115c = load i32, i32* @r29, align 4
  store i32 %v5_10001150, i32* @r31, align 4
  %v0_10001168 = load i32, i32* @r28, align 4
  store i32 %v0_10001168, i32* %r3.global-to-local, align 4
  store i32 268439920, i32* @lr, align 4
  %v4_1000116c = inttoptr i32 %v0_1000115c to i32*
  %v5_1000116c = call i32 @function_10000300(i32 %v0_10001168, i32* %v4_1000116c, i32 19, i32 %v3_10001158)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268439932, i32* @lr, align 4
  %v0_10001178 = call i32 @function_1000879c()
  %v1_10001180 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001180 = add i32 %v1_10001180, %v0_10001178
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268439956, i32* @lr, align 4
  %v3_10001190 = call i32 @function_100090b4(i32 2, i32 3, i32 6)
  store i32 %v3_10001190, i32* %r3.global-to-local, align 4
  %v1_10001194 = icmp slt i32 %v3_10001190, -1
  %v3_10001194 = icmp eq i32 %v3_10001190, -1
  store i1 %v1_10001194, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001194, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10001190, i32* %r22.global-to-local, align 4
  br i1 %v3_10001194, label %dec_label_pc_1000148c, label %dec_label_pc_100011a0

dec_label_pc_100011a0:                            ; preds = %dec_label_pc_10000fe4
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_100011ac = ptrtoint i32* %stack_var_-120 to i32
  store i32 1, i32* %stack_var_-120, align 4
  store i32 268439996, i32* @lr, align 4
  %v4_100011b8 = call i32 @function_10009078(i32 0, i32 3, i32 %v2_100011ac, i32 4)
  store i32 %v4_100011b8, i32* %r3.global-to-local, align 4
  %v1_100011bc = icmp slt i32 %v4_100011b8, -1
  %v3_100011bc = icmp eq i32 %v4_100011b8, -1
  store i1 %v1_100011bc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100011bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100011bc, label %dec_label_pc_10001590, label %dec_label_pc_100011c4

dec_label_pc_100011c4:                            ; preds = %dec_label_pc_100011a0
  %v0_100011c4 = load i32, i32* %r20.global-to-local, align 4
  %v1_100011c4 = icmp slt i32 %v0_100011c4, 0
  %v3_100011c4 = icmp eq i32 %v0_100011c4, 0
  store i1 %v1_100011c4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100011c4, i1* %cr7_eq.global-to-local, align 1
  %v0_100011c8 = load i32, i32* @r31, align 4
  %v1_100011c8 = urem i32 %v0_100011c8, 256
  store i32 %v1_100011c8, i32* @r31, align 4
  %v0_100011cc = load i32, i32* %r18.global-to-local, align 4
  store i32 %v0_100011cc, i32* %stack_var_-120, align 4
  %v0_100011d0 = load i32, i32* %r25.global-to-local, align 4
  %v1_100011d0 = urem i32 %v0_100011d0, 65536
  store i32 %v1_100011d0, i32* @r25, align 4
  %v0_100011d4 = call i32 @__asm_mfcr()
  store i32 %v0_100011d4, i32* %r3.global-to-local, align 4
  %v1_100011d8 = mul i32 %v0_100011d4, 268435456
  store i32 %v1_100011d8, i32* %r0.global-to-local, align 4
  %v0_100011dc = load i32, i32* %r24.global-to-local, align 4
  %v1_100011dc = urem i32 %v0_100011dc, 65536
  store i32 %v1_100011dc, i32* %r17.global-to-local, align 4
  %v0_100011e0 = load i32, i32* %r30.global-to-local, align 4
  %v1_100011e0 = urem i32 %v0_100011e0, 65536
  store i32 %v1_100011e0, i32* %r18.global-to-local, align 4
  %v0_100011e4 = load i32, i32* @r31, align 4
  %v0_100011ec = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_100011ec = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_100011ec = or i1 %v0_100011ec, %v1_100011ec
  br i1 %v2_100011ec, label %dec_label_pc_1000134c.preheader, label %dec_label_pc_100011f0

dec_label_pc_100011f0:                            ; preds = %dec_label_pc_100011c4
  %v0_100011f0 = load i32, i32* %r23.global-to-local, align 4
  %v3_100011f0 = icmp eq i32 %v0_100011f0, 0
  store i1 %v3_100011f0, i1* %cr3_eq.global-to-local, align 1
  %v3_100011f4 = icmp eq i32 %v0_100011e4, 0
  store i1 %v3_100011f4, i1* %cr4_eq.global-to-local, align 1
  %v0_100011f8 = load i32, i32* %r19.global-to-local, align 4
  %v1_100011f8 = urem i32 %v0_100011f8, 65536
  %v0_100011fc = load i32, i32* @r25, align 4
  %v1_100011fc = sub i32 -1, %v0_100011fc
  store i32 %v1_100011fc, i32* %r11.global-to-local, align 4
  %v1_10001204 = add nuw nsw i32 %v1_100011f8, 52
  store i32 %v1_10001204, i32* %r0.global-to-local, align 4
  %v1_10001208 = add nuw nsw i32 %v1_100011f8, 28
  store i32 %v1_10001208, i32* %r9.global-to-local, align 4
  %fold = add i32 %v0_100011f8, 52
  %v1_1000120c = urem i32 %fold, 65536
  store i32 %v1_1000120c, i32* %r23.global-to-local, align 4
  %fold5 = add i32 %v0_100011f8, 28
  %v1_10001210 = urem i32 %fold5, 65536
  store i32 %v1_10001210, i32* %r24.global-to-local, align 4
  %v1_10001214 = urem i32 %v1_100011fc, 65536
  store i32 %v1_10001214, i32* %r27.global-to-local, align 4
  %fold6 = add i32 %v0_100011f8, 8
  %v1_10001218 = urem i32 %fold6, 65536
  store i32 %v1_10001218, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v4_1000129c = sext i8 %v5_1000108c to i32
  br label %dec_label_pc_10001254

dec_label_pc_1000122c:                            ; preds = %dec_label_pc_1000130c
  %v0_1000122c = load i32, i32* %r29.global-to-local, align 4
  %v1_1000122c = add i32 %v0_1000122c, 16
  %v2_1000122c = inttoptr i32 %v1_1000122c to i32*
  %v3_1000122c = load i32, i32* %v2_1000122c, align 4
  store i32 %v3_1000122c, i32* %r0.global-to-local, align 4
  %v0_10001230 = load i32, i32* @r28, align 4
  %v1_10001230 = trunc i32 %v0_10001230 to i16
  %v2_10001230 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001230 = add i32 %v2_10001230, 4
  %v4_10001230 = inttoptr i32 %v3_10001230 to i16*
  store i16 %v1_10001230, i16* %v4_10001230, align 2
  %v0_10001234 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001234 = load i32, i32* %r31.global-to-local, align 4
  %v2_10001234 = add i32 %v1_10001234, 16
  %v3_10001234 = inttoptr i32 %v2_10001234 to i32*
  store i32 %v0_10001234, i32* %v3_10001234, align 4
  %v0_10001238 = load i32, i32* %r17.global-to-local, align 4
  %v1_10001238 = trunc i32 %v0_10001238 to i16
  %v2_10001238 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001238 = inttoptr i32 %v2_10001238 to i16*
  store i16 %v1_10001238, i16* %v3_10001238, align 2
  %v3_1000123c = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1000123c, i32* %r9.global-to-local, align 4
  %v0_10001240 = load i32, i32* %r18.global-to-local, align 4
  %v1_10001240 = trunc i32 %v0_10001240 to i16
  %v2_10001240 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001240 = add i32 %v2_10001240, 2
  %v4_10001240 = inttoptr i32 %v3_10001240 to i16*
  store i16 %v1_10001240, i16* %v4_10001240, align 2
  %v0_10001244 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001244 = add i32 %v0_10001244, 1
  %v1_10001248 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001248 = icmp slt i32 %v1_10001244, %v1_10001248
  %v4_10001248 = icmp eq i32 %v1_10001244, %v1_10001248
  store i1 %v2_10001248, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10001248, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10001244, i32* %stack_var_-120, align 4
  br i1 %v2_10001248, label %dec_label_pc_10001254, label %dec_label_pc_1000134c.preheader

dec_label_pc_10001254:                            ; preds = %dec_label_pc_1000122c, %dec_label_pc_10001328, %dec_label_pc_100011f0
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268440160, i32* @lr, align 4
  %v2_1000125c = call i32 @function_10009410(i32 1510, i32 4)
  store i32 %v2_1000125c, i32* %r3.global-to-local, align 4
  %v3_10001260 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10001260, i32* %r9.global-to-local, align 4
  %v0_10001264 = load i32, i32* @r31, align 4
  %v1_10001264 = mul i32 %v0_10001264, 4
  store i32 %v1_10001264, i32* %r0.global-to-local, align 4
  %v1_10001268 = load i32, i32* %r21.global-to-local, align 4
  %v3_10001268 = add i32 %v1_10001268, %v1_10001264
  %v4_10001268 = inttoptr i32 %v3_10001268 to i32*
  store i32 %v2_1000125c, i32* %v4_10001268, align 4
  %v0_1000126c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000126c = mul i32 %v0_1000126c, 4
  store i32 %v1_1000126c, i32* %r9.global-to-local, align 4
  %v1_10001270 = load i32, i32* %r21.global-to-local, align 4
  %v2_10001270 = add i32 %v1_10001270, %v1_1000126c
  %v3_10001270 = inttoptr i32 %v2_10001270 to i32*
  %v4_10001270 = load i32, i32* %v3_10001270, align 4
  store i32 %v4_10001270, i32* %r29.global-to-local, align 4
  %v1_10001274 = inttoptr i32 %v4_10001270 to i32*
  %v2_10001274 = load i32, i32* %v1_10001274, align 4
  store i32 %v2_10001274, i32* %r0.global-to-local, align 4
  %v1_10001278 = add i32 %v4_10001270, 24
  store i32 %v1_10001278, i32* %r31.global-to-local, align 4
  %v0_1000127c = load i32, i32* %r14.global-to-local, align 4
  %v1_1000127c = trunc i32 %v0_1000127c to i8
  %v3_1000127c = add i32 %v4_10001270, 8
  %v4_1000127c = inttoptr i32 %v3_1000127c to i8*
  store i8 %v1_1000127c, i8* %v4_1000127c, align 1
  %v0_10001280 = load i32, i32* %r29.global-to-local, align 4
  %v1_10001280 = add i32 %v0_10001280, 44
  store i32 %v1_10001280, i32* %r30.global-to-local, align 4
  %v1_10001284 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10001284, i32* %r0.global-to-local, align 4
  %v0_10001288 = load i32, i32* @r25, align 4
  %v1_10001288 = trunc i32 %v0_10001288 to i16
  %v2_10001288 = load i32, i32* %r29.global-to-local, align 4
  %v3_10001288 = add i32 %v2_10001288, 4
  %v4_10001288 = inttoptr i32 %v3_10001288 to i16*
  store i16 %v1_10001288, i16* %v4_10001288, align 2
  %v1_1000128c = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_10001290 = load i32, i32* %r29.global-to-local, align 4
  %v1_10001290 = add i32 %v0_10001290, 20
  store i32 %v1_10001290, i32* %r9.global-to-local, align 4
  %v2_10001294 = inttoptr i32 %v0_10001290 to i32*
  store i32 %v1_1000128c, i32* %v2_10001294, align 4
  %v0_10001298 = load i32, i32* %r23.global-to-local, align 4
  %v1_10001298 = trunc i32 %v0_10001298 to i16
  %v2_10001298 = load i32, i32* %r29.global-to-local, align 4
  %v3_10001298 = add i32 %v2_10001298, 2
  %v4_10001298 = inttoptr i32 %v3_10001298 to i16*
  store i16 %v1_10001298, i16* %v4_10001298, align 2
  store i32 %v4_1000129c, i32* %r0.global-to-local, align 4
  %v2_100012a0 = load i32, i32* %r29.global-to-local, align 4
  %v3_100012a0 = add i32 %v2_100012a0, 1
  %v4_100012a0 = inttoptr i32 %v3_100012a0 to i8*
  store i8 %v5_1000108c, i8* %v4_100012a0, align 1
  %v0_100012a4 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100012a4, label %dec_label_pc_100012b0, label %dec_label_pc_100012a8

dec_label_pc_100012a8:                            ; preds = %dec_label_pc_10001254
  %v2_100012ac = load i32, i32* %r29.global-to-local, align 4
  %v3_100012ac = add i32 %v2_100012ac, 6
  %v4_100012ac = inttoptr i32 %v3_100012ac to i16*
  store i16 16384, i16* %v4_100012ac, align 2
  br label %dec_label_pc_100012b0

dec_label_pc_100012b0:                            ; preds = %dec_label_pc_10001254, %dec_label_pc_100012a8
  store i32 47, i32* %r11.global-to-local, align 4
  store i32 2048, i32* %r0.global-to-local, align 4
  %v2_100012b8 = load i32, i32* %r29.global-to-local, align 4
  %v3_100012b8 = add i32 %v2_100012b8, 9
  %v4_100012b8 = inttoptr i32 %v3_100012b8 to i8*
  store i8 47, i8* %v4_100012b8, align 1
  %v0_100012bc = load i32, i32* %r0.global-to-local, align 4
  %v1_100012bc = trunc i32 %v0_100012bc to i16
  %v2_100012bc = load i32, i32* %r9.global-to-local, align 4
  %v3_100012bc = add i32 %v2_100012bc, 2
  %v4_100012bc = inttoptr i32 %v3_100012bc to i16*
  store i16 %v1_100012bc, i16* %v4_100012bc, align 2
  %v3_100012c0 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_100012c0, i32* %r9.global-to-local, align 4
  %v0_100012c4 = load i32, i32* %r29.global-to-local, align 4
  %v1_100012c4 = add i32 %v0_100012c4, 24
  %v2_100012c4 = inttoptr i32 %v1_100012c4 to i32*
  %v3_100012c4 = load i32, i32* %v2_100012c4, align 4
  store i32 %v3_100012c4, i32* %r0.global-to-local, align 4
  %v1_100012cc = mul i32 %v3_100012c0, 24
  store i32 %v1_100012cc, i32* %r9.global-to-local, align 4
  %v1_100012d0 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100012d0, i32* %r0.global-to-local, align 4
  %v1_100012d4 = load i32, i32* %r29.global-to-local, align 4
  %v2_100012d4 = add i32 %v1_100012d4, 12
  %v3_100012d4 = inttoptr i32 %v2_100012d4 to i32*
  store i32 %v5_1000116c, i32* %v3_100012d4, align 4
  %v0_100012d8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100012d8 = load i32, i32* @r26, align 4
  %v2_100012d8 = add i32 %v1_100012d8, %v0_100012d8
  store i32 %v2_100012d8, i32* %r9.global-to-local, align 4
  %v1_100012dc = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_100012dc, i32* %r0.global-to-local, align 4
  %v0_100012e0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100012e0 = add i32 %v0_100012e0, 16
  %v2_100012e0 = inttoptr i32 %v1_100012e0 to i32*
  %v3_100012e0 = load i32, i32* %v2_100012e0, align 4
  store i32 %v3_100012e0, i32* %r11.global-to-local, align 4
  %v1_100012e4 = load i32, i32* %r29.global-to-local, align 4
  %v2_100012e4 = add i32 %v1_100012e4, 24
  %v3_100012e4 = inttoptr i32 %v2_100012e4 to i32*
  store i32 %v1_100012dc, i32* %v3_100012e4, align 4
  %v0_100012e8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100012e8 = load i32, i32* %r29.global-to-local, align 4
  %v2_100012e8 = add i32 %v1_100012e8, 16
  %v3_100012e8 = inttoptr i32 %v2_100012e8 to i32*
  store i32 %v0_100012e8, i32* %v3_100012e8, align 4
  store i32 %v4_1000129c, i32* %r11.global-to-local, align 4
  %v0_100012f0 = load i32, i32* %r24.global-to-local, align 4
  %v1_100012f0 = trunc i32 %v0_100012f0 to i16
  %v2_100012f0 = load i32, i32* %r31.global-to-local, align 4
  %v3_100012f0 = add i32 %v2_100012f0, 2
  %v4_100012f0 = inttoptr i32 %v3_100012f0 to i16*
  store i16 %v1_100012f0, i16* %v4_100012f0, align 2
  %v0_100012f4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100012f4 = trunc i32 %v0_100012f4 to i8
  %v2_100012f4 = load i32, i32* %r31.global-to-local, align 4
  %v3_100012f4 = add i32 %v2_100012f4, 1
  %v4_100012f4 = inttoptr i32 %v3_100012f4 to i8*
  store i8 %v1_100012f4, i8* %v4_100012f4, align 1
  %v0_100012f8 = load i32, i32* %r27.global-to-local, align 4
  %v1_100012f8 = trunc i32 %v0_100012f8 to i16
  %v2_100012f8 = load i32, i32* %r31.global-to-local, align 4
  %v3_100012f8 = add i32 %v2_100012f8, 4
  %v4_100012f8 = inttoptr i32 %v3_100012f8 to i16*
  store i16 %v1_100012f8, i16* %v4_100012f8, align 2
  %v0_100012fc = load i32, i32* %r14.global-to-local, align 4
  %v1_100012fc = trunc i32 %v0_100012fc to i8
  %v2_100012fc = load i32, i32* %r31.global-to-local, align 4
  %v3_100012fc = add i32 %v2_100012fc, 8
  %v4_100012fc = inttoptr i32 %v3_100012fc to i8*
  store i8 %v1_100012fc, i8* %v4_100012fc, align 1
  %v0_10001300 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001300, label %dec_label_pc_1000130c, label %dec_label_pc_10001304

dec_label_pc_10001304:                            ; preds = %dec_label_pc_100012b0
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10001308 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001308 = add i32 %v2_10001308, 6
  %v4_10001308 = inttoptr i32 %v3_10001308 to i16*
  store i16 16384, i16* %v4_10001308, align 2
  br label %dec_label_pc_1000130c

dec_label_pc_1000130c:                            ; preds = %dec_label_pc_100012b0, %dec_label_pc_10001304
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_10001310 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001310 = add i32 %v2_10001310, 9
  %v4_10001310 = inttoptr i32 %v3_10001310 to i8*
  store i8 17, i8* %v4_10001310, align 1
  %v0_10001314 = call i32 @function_10005258()
  store i32 %v0_10001314, i32* %r3.global-to-local, align 4
  %v1_10001318 = add i32 %v0_10001314, -1024
  store i32 %v1_10001318, i32* %r0.global-to-local, align 4
  %v1_1000131c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000131c = add i32 %v1_1000131c, 12
  %v3_1000131c = inttoptr i32 %v2_1000131c to i32*
  store i32 %v0_10001314, i32* %v3_1000131c, align 4
  %v0_10001320 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001320 = sub i32 -1, %v0_10001320
  store i32 %v1_10001320, i32* %r0.global-to-local, align 4
  %v0_10001324 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10001324, label %dec_label_pc_10001328, label %dec_label_pc_1000122c

dec_label_pc_10001328:                            ; preds = %dec_label_pc_1000130c
  %v1_10001328 = load i32, i32* %r31.global-to-local, align 4
  %v2_10001328 = add i32 %v1_10001328, 16
  %v3_10001328 = inttoptr i32 %v2_10001328 to i32*
  store i32 %v1_10001320, i32* %v3_10001328, align 4
  %v0_1000132c = load i32, i32* @r28, align 4
  %v1_1000132c = trunc i32 %v0_1000132c to i16
  %v2_1000132c = load i32, i32* %r30.global-to-local, align 4
  %v3_1000132c = add i32 %v2_1000132c, 4
  %v4_1000132c = inttoptr i32 %v3_1000132c to i16*
  store i16 %v1_1000132c, i16* %v4_1000132c, align 2
  %v3_10001330 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10001330, i32* %r9.global-to-local, align 4
  %v0_10001334 = load i32, i32* %r17.global-to-local, align 4
  %v1_10001334 = trunc i32 %v0_10001334 to i16
  %v2_10001334 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001334 = inttoptr i32 %v2_10001334 to i16*
  store i16 %v1_10001334, i16* %v3_10001334, align 2
  %v0_10001338 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001338 = add i32 %v0_10001338, 1
  store i32 %v1_10001338, i32* @r31, align 4
  %v0_1000133c = load i32, i32* %r18.global-to-local, align 4
  %v1_1000133c = trunc i32 %v0_1000133c to i16
  %v2_1000133c = load i32, i32* %r30.global-to-local, align 4
  %v3_1000133c = add i32 %v2_1000133c, 2
  %v4_1000133c = inttoptr i32 %v3_1000133c to i16*
  store i16 %v1_1000133c, i16* %v4_1000133c, align 2
  %v0_10001340 = load i32, i32* @r31, align 4
  %v1_10001340 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001340 = icmp slt i32 %v0_10001340, %v1_10001340
  %v4_10001340 = icmp eq i32 %v0_10001340, %v1_10001340
  store i1 %v2_10001340, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10001340, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_10001340, i32* %stack_var_-120, align 4
  br i1 %v2_10001340, label %dec_label_pc_10001254, label %dec_label_pc_1000134c.preheader

dec_label_pc_1000134c.preheader:                  ; preds = %dec_label_pc_10001328, %dec_label_pc_1000122c, %dec_label_pc_100011c4
  %v2_10001358 = urem i32 %v0_100011d4, 16
  %v1_10001360 = mul nuw i32 %v2_10001358, 268435456
  %v3_1000137c = icmp eq i32 %v0_100011e4, 0
  %v3_10001380 = icmp eq i32 %v5_1000116c, -1
  %v3_10001388 = icmp eq i32 %v1_1000113c, 0
  br label %dec_label_pc_1000134c

dec_label_pc_1000134c:                            ; preds = %dec_label_pc_1000134c.preheader, %dec_label_pc_10001478
  store i32 0, i32* %stack_var_-120, align 4
  store i32 %v2_10001358, i32* %r0.global-to-local, align 4
  %v1_1000135c = call %0 @__asm_mtcrf(i32 1, i32 %v2_10001358)
  store i32 %v1_10001360, i32* %r0.global-to-local, align 4
  %v0_10001364 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10001364 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10001364 = or i1 %v0_10001364, %v1_10001364
  br i1 %v2_10001364, label %dec_label_pc_10001478, label %dec_label_pc_10001368

dec_label_pc_10001368:                            ; preds = %dec_label_pc_1000134c
  store i32 %v0_100011e4, i32* %r0.global-to-local, align 4
  %v0_1000136c = load i32, i32* %r19.global-to-local, align 4
  %v1_1000136c = add i32 %v0_1000136c, 8
  store i32 %v1_1000136c, i32* %r23.global-to-local, align 4
  %v1_10001374 = add i32 %v0_1000136c, 52
  store i32 %v1_10001374, i32* @r24, align 4
  store i32 %v1_1000113c, i32* %r11.global-to-local, align 4
  store i1 %v3_1000137c, i1* %cr4_eq.global-to-local, align 1
  store i1 %v3_10001380, i1* %cr2_eq.global-to-local, align 1
  store i32 0, i32* %r9.global-to-local, align 4
  store i1 %v3_10001388, i1* %cr3_eq.global-to-local, align 1
  store i32 0, i32* @r30, align 4
  br label %dec_label_pc_10001390

dec_label_pc_10001390:                            ; preds = %dec_label_pc_100013e8, %dec_label_pc_10001368
  %v0_10001390 = phi i32 [ %v1_10001468, %dec_label_pc_100013e8 ], [ 0, %dec_label_pc_10001368 ]
  %v1_10001390 = mul i32 %v0_10001390, 24
  store i32 %v1_10001390, i32* %r0.global-to-local, align 4
  %v1_10001394 = mul i32 %v0_10001390, 4
  store i32 %v1_10001394, i32* %r11.global-to-local, align 4
  %v1_10001398 = load i32, i32* %r21.global-to-local, align 4
  %v2_10001398 = add i32 %v1_10001398, %v1_10001394
  %v3_10001398 = inttoptr i32 %v2_10001398 to i32*
  %v4_10001398 = load i32, i32* %v3_10001398, align 4
  store i32 %v4_10001398, i32* @r28, align 4
  %v1_1000139c = load i32, i32* @r26, align 4
  %v2_1000139c = add i32 %v1_1000139c, %v1_10001390
  %v1_100013a0 = add i32 %v2_1000139c, 20
  %v2_100013a0 = inttoptr i32 %v1_100013a0 to i8*
  %v3_100013a0 = load i8, i8* %v2_100013a0, align 1
  %v4_100013a0 = zext i8 %v3_100013a0 to i32
  store i32 %v4_100013a0, i32* %r9.global-to-local, align 4
  %v1_100013a4 = add i32 %v4_10001398, 24
  store i32 %v1_100013a4, i32* @r27, align 4
  %v1_100013a8 = add i32 %v4_10001398, 44
  store i32 %v1_100013a8, i32* @r31, align 4
  %v1_100013ac = icmp ult i8 %v3_100013a0, 31
  %v3_100013ac = icmp eq i8 %v3_100013a0, 31
  store i1 %v1_100013ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100013ac, i1* %cr7_eq.global-to-local, align 1
  %tmp35 = icmp ult i8 %v3_100013a0, 32
  br i1 %tmp35, label %dec_label_pc_100014ec, label %dec_label_pc_100013b4

dec_label_pc_100013b4:                            ; preds = %dec_label_pc_10001390
  %v0_100013b4 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100013b4, label %dec_label_pc_10001514, label %dec_label_pc_100013b8

dec_label_pc_100013b8:                            ; preds = %dec_label_pc_100014ec, %dec_label_pc_100013b4
  store i32 65535, i32* %r29.global-to-local, align 4
  %v0_100013c0 = load i32, i32* @r25, align 4
  %v2_100013c0 = icmp slt i32 %v0_100013c0, 65535
  %v4_100013c0 = icmp eq i32 %v0_100013c0, 65535
  store i1 %v2_100013c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100013c0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100013c0, label %dec_label_pc_1000152c, label %dec_label_pc_100013c8

dec_label_pc_100013c8:                            ; preds = %dec_label_pc_10001514, %dec_label_pc_100013b8
  %v1_100013c8 = phi i32 [ %v1_10001524, %dec_label_pc_10001514 ], [ 65535, %dec_label_pc_100013b8 ]
  %v0_100013c8 = load i32, i32* %r17.global-to-local, align 4
  %v2_100013c8 = icmp slt i32 %v0_100013c8, %v1_100013c8
  %v4_100013c8 = icmp eq i32 %v0_100013c8, %v1_100013c8
  store i1 %v2_100013c8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100013c8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100013c8, label %dec_label_pc_1000154c, label %dec_label_pc_100013d0

dec_label_pc_100013d0:                            ; preds = %dec_label_pc_1000152c.dec_label_pc_100013d0_crit_edge, %dec_label_pc_100013c8
  %v1_100013d0 = phi i32 [ %v1_100013d0.pre, %dec_label_pc_1000152c.dec_label_pc_100013d0_crit_edge ], [ %v1_100013c8, %dec_label_pc_100013c8 ]
  %v0_100013d0 = load i32, i32* %r18.global-to-local, align 4
  %v2_100013d0 = icmp slt i32 %v0_100013d0, %v1_100013d0
  %v4_100013d0 = icmp eq i32 %v0_100013d0, %v1_100013d0
  store i1 %v2_100013d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100013d0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100013d0, label %dec_label_pc_1000155c, label %dec_label_pc_100013d8

dec_label_pc_100013d8:                            ; preds = %dec_label_pc_1000154c, %dec_label_pc_100013d0
  %v0_100013d8 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_100013d8, label %dec_label_pc_10001568, label %dec_label_pc_100013dc

dec_label_pc_100013dc:                            ; preds = %dec_label_pc_1000155c, %dec_label_pc_100013d8
  %v0_100013dc = load i32, i32* @r28, align 4
  %v1_100013dc = add i32 %v0_100013dc, 16
  %v2_100013dc = inttoptr i32 %v1_100013dc to i32*
  %v3_100013dc = load i32, i32* %v2_100013dc, align 4
  store i32 %v3_100013dc, i32* %r0.global-to-local, align 4
  %v1_100013e0 = load i32, i32* @r27, align 4
  %v2_100013e0 = add i32 %v1_100013e0, 16
  %v3_100013e0 = inttoptr i32 %v2_100013e0 to i32*
  store i32 %v3_100013dc, i32* %v3_100013e0, align 4
  %v0_100013e4 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100013e4, label %dec_label_pc_100013e8, label %dec_label_pc_10001574

dec_label_pc_100013e8:                            ; preds = %dec_label_pc_100013dc, %dec_label_pc_10001568, %dec_label_pc_10001574
  %v0_100013e8 = load i32, i32* @r30, align 4
  %v1_100013e8 = trunc i32 %v0_100013e8 to i16
  %v2_100013e8 = load i32, i32* @r28, align 4
  %v3_100013e8 = add i32 %v2_100013e8, 10
  %v4_100013e8 = inttoptr i32 %v3_100013e8 to i16*
  store i16 %v1_100013e8, i16* %v4_100013e8, align 2
  %v0_100013f0 = load i32, i32* @r28, align 4
  store i32 %v0_100013f0, i32* @r3, align 4
  %v2_100013f4 = call i32 @function_10003ca8(i32 %v0_100013f0, i32 20)
  %v3_100013f4 = trunc i32 %v2_100013f4 to i16
  %v3_100013fc = load i32, i32* @r28, align 4
  %v4_100013fc = add i32 %v3_100013fc, 10
  %v5_100013fc = inttoptr i32 %v4_100013fc to i16*
  store i16 %v3_100013f4, i16* %v5_100013fc, align 2
  %v0_10001400 = load i32, i32* @r27, align 4
  store i32 %v0_10001400, i32* @r3, align 4
  %v0_10001404 = load i32, i32* @r30, align 4
  %v1_10001404 = trunc i32 %v0_10001404 to i16
  %v3_10001404 = add i32 %v0_10001400, 10
  %v4_10001404 = inttoptr i32 %v3_10001404 to i16*
  store i16 %v1_10001404, i16* %v4_10001404, align 2
  %v2_10001408 = call i32 @function_10003ca8(i32 %v0_10001400, i32 20)
  %v3_10001408 = trunc i32 %v2_10001408 to i16
  %v0_1000140c = load i32, i32* @r31, align 4
  store i32 %v0_1000140c, i32* @r4, align 4
  %v3_10001410 = load i32, i32* @r27, align 4
  %v4_10001410 = add i32 %v3_10001410, 10
  %v5_10001410 = inttoptr i32 %v4_10001410 to i16*
  store i16 %v3_10001408, i16* %v5_10001410, align 2
  %v0_10001414 = load i32, i32* %r23.global-to-local, align 4
  %v0_10001418 = load i32, i32* @r30, align 4
  %v1_10001418 = trunc i32 %v0_10001418 to i16
  %v2_10001418 = load i32, i32* @r31, align 4
  %v3_10001418 = add i32 %v2_10001418, 6
  %v4_10001418 = inttoptr i32 %v3_10001418 to i16*
  store i16 %v1_10001418, i16* %v4_10001418, align 2
  %v0_1000141c = load i32, i32* @r27, align 4
  store i32 %v0_1000141c, i32* %r3.global-to-local, align 4
  %v0_10001420 = load i32, i32* @r31, align 4
  %v1_10001420 = add i32 %v0_10001420, 4
  %v2_10001420 = inttoptr i32 %v1_10001420 to i16*
  %v3_10001420 = load i16, i16* %v2_10001420, align 2
  %v4_10001420 = zext i16 %v3_10001420 to i32
  %v4_10001424 = call i32 @function_10003d0c(i32 %v0_1000141c, i32 %v0_1000140c, i32 %v4_10001420, i32 %v0_10001414)
  %v5_10001424 = trunc i32 %v4_10001424 to i16
  store i32 %v4_10001424, i32* %r3.global-to-local, align 4
  %v3_10001428 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10001428, i32* %r0.global-to-local, align 4
  %v0_1000142c = load i32, i32* @r28, align 4
  %v1_1000142c = add i32 %v0_1000142c, 16
  %v2_1000142c = inttoptr i32 %v1_1000142c to i32*
  %v3_1000142c = load i32, i32* %v2_1000142c, align 4
  store i32 %v3_1000142c, i32* %r11.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10001434 = mul i32 %v3_10001428, 24
  store i32 %v1_10001434, i32* %r0.global-to-local, align 4
  %v3_10001438 = load i32, i32* @r31, align 4
  %v4_10001438 = add i32 %v3_10001438, 6
  %v5_10001438 = inttoptr i32 %v4_10001438 to i16*
  store i16 %v5_10001424, i16* %v5_10001438, align 2
  %v0_1000143c = load i32, i32* @r28, align 4
  %v0_10001440 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10001440, i32* %r3.global-to-local, align 4
  %v0_10001444 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001444 = load i32, i32* @r26, align 4
  %v2_10001444 = add i32 %v1_10001444, %v0_10001444
  %v0_10001448 = load i32, i32* %r9.global-to-local, align 4
  %v3_10001448 = trunc i32 %v0_10001448 to i16
  %v5_10001448 = inttoptr i32 %v2_10001444 to i16*
  store i16 %v3_10001448, i16* %v5_10001448, align 2
  %v0_1000144c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000144c = add i32 %v2_10001444, 4
  %v3_1000144c = inttoptr i32 %v2_1000144c to i32*
  store i32 %v0_1000144c, i32* %v3_1000144c, align 4
  %v0_10001450 = load i32, i32* @r24, align 4
  %v0_10001454 = load i32, i32* @r30, align 4
  %v1_10001454 = trunc i32 %v0_10001454 to i16
  %v3_10001454 = add i32 %v2_10001444, 2
  %v4_10001454 = inttoptr i32 %v3_10001454 to i16*
  store i16 %v1_10001454, i16* %v4_10001454, align 2
  store i32 268440676, i32* @lr, align 4
  %v6_10001460 = call i32 @function_10009038(i32 %v0_10001440, i32 %v0_1000143c, i32 %v0_10001450, i32 16384, i32 %v2_10001444, i32 16)
  store i32 %v6_10001460, i32* %r3.global-to-local, align 4
  %v3_10001464 = load i32, i32* %stack_var_-120, align 4
  %v1_10001468 = add i32 %v3_10001464, 1
  store i32 %v1_10001468, i32* %r9.global-to-local, align 4
  %v1_1000146c = load i32, i32* %r20.global-to-local, align 4
  %v2_1000146c = icmp slt i32 %v1_10001468, %v1_1000146c
  %v4_1000146c = icmp eq i32 %v1_10001468, %v1_1000146c
  store i1 %v2_1000146c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000146c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10001468, i32* %stack_var_-120, align 4
  br i1 %v2_1000146c, label %dec_label_pc_10001390, label %dec_label_pc_10001478

dec_label_pc_10001478:                            ; preds = %dec_label_pc_100013e8, %dec_label_pc_1000134c
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268440704, i32* @lr, align 4
  %v0_1000147c = call i32 @function_1000879c()
  store i32 %v0_1000147c, i32* %r3.global-to-local, align 4
  store i32 %v2_10001180, i32* %r0.global-to-local, align 4
  %v2_10001484 = icmp slt i32 %v2_10001180, %v0_1000147c
  %v4_10001484 = icmp eq i32 %v2_10001180, %v0_1000147c
  store i1 %v2_10001484, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10001484, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001484, label %dec_label_pc_1000148c, label %dec_label_pc_1000134c

dec_label_pc_1000148c:                            ; preds = %dec_label_pc_10001478, %dec_label_pc_10000fe4, %dec_label_pc_10001590
  store i32 %v0_10001010, i32* %r0.global-to-local, align 4
  %v1_100014a0 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10000fec)
  store i32 %v0_1000102c, i32* %r24.global-to-local, align 4
  store i32 %v0_10001030, i32* %r25.global-to-local, align 4
  store i32 %v0_10001000, i32* %r27.global-to-local, align 4
  store i32 %v0_10001044, i32* %r29.global-to-local, align 4
  store i32 %v0_1000104c, i32* %r30.global-to-local, align 4
  store i32 %v0_10001050, i32* %r31.global-to-local, align 4
  %v0_100014e8 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100014e8

dec_label_pc_100014ec:                            ; preds = %dec_label_pc_10001390
  %v1_100014ec = add i32 %v2_1000139c, 16
  %v2_100014ec = inttoptr i32 %v1_100014ec to i32*
  %v3_100014ec = load i32, i32* %v2_100014ec, align 4
  store i32 %v3_100014ec, i32* %r29.global-to-local, align 4
  %v0_100014f0 = call i32 @function_10005258()
  store i32 %v0_100014f0, i32* %r3.global-to-local, align 4
  %v3_100014f4 = load i32, i32* %stack_var_-120, align 4
  %v1_100014f8 = mul i32 %v3_100014f4, 24
  %v1_100014fc = load i32, i32* @r26, align 4
  %v2_100014fc = add i32 %v1_100014fc, %v1_100014f8
  store i32 %v2_100014fc, i32* %r9.global-to-local, align 4
  %v1_10001500 = add i32 %v2_100014fc, 20
  %v2_10001500 = inttoptr i32 %v1_10001500 to i8*
  %v3_10001500 = load i8, i8* %v2_10001500, align 1
  %v4_10001500 = zext i8 %v3_10001500 to i32
  store i32 %v4_10001500, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10001500, 64
  %v2_10001504 = zext i8 %tmp to i32
  %v3_10001504 = lshr i32 %v0_100014f0, %v2_10001504
  store i32 %v3_10001504, i32* %r3.global-to-local, align 4
  %v0_10001508 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001508 = add i32 %v3_10001504, %v0_10001508
  store i32 %v2_10001508, i32* %r29.global-to-local, align 4
  %v1_1000150c = load i32, i32* @r28, align 4
  %v2_1000150c = add i32 %v1_1000150c, 16
  %v3_1000150c = inttoptr i32 %v2_1000150c to i32*
  store i32 %v2_10001508, i32* %v3_1000150c, align 4
  %v0_10001510 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10001510, label %dec_label_pc_10001514, label %dec_label_pc_100013b8

dec_label_pc_10001514:                            ; preds = %dec_label_pc_100014ec, %dec_label_pc_100013b4
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10001518 = call i32 @function_10005258()
  store i32 %v0_10001518, i32* %r3.global-to-local, align 4
  %v0_1000151c = load i32, i32* %r29.global-to-local, align 4
  %v1_1000151c = or i32 %v0_1000151c, 65535
  store i32 %v1_1000151c, i32* %r29.global-to-local, align 4
  %v1_10001520 = load i32, i32* @r28, align 4
  %v2_10001520 = add i32 %v1_10001520, 12
  %v3_10001520 = inttoptr i32 %v2_10001520 to i32*
  store i32 %v0_10001518, i32* %v3_10001520, align 4
  %v0_10001524 = load i32, i32* @r25, align 4
  %v1_10001524 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001524 = icmp slt i32 %v0_10001524, %v1_10001524
  %v4_10001524 = icmp eq i32 %v0_10001524, %v1_10001524
  store i1 %v2_10001524, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10001524, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001524, label %dec_label_pc_1000152c, label %dec_label_pc_100013c8

dec_label_pc_1000152c:                            ; preds = %dec_label_pc_10001514, %dec_label_pc_100013b8
  %v0_1000152c = call i32 @function_10005258()
  %v0_10001530 = load i32, i32* %r17.global-to-local, align 4
  %v1_10001530 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001530 = icmp slt i32 %v0_10001530, %v1_10001530
  %v4_10001530 = icmp eq i32 %v0_10001530, %v1_10001530
  store i1 %v2_10001530, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10001530, i1* %cr7_eq.global-to-local, align 1
  %v1_10001534 = urem i32 %v0_1000152c, 65536
  store i32 %v1_10001534, i32* %r3.global-to-local, align 4
  %v1_10001538 = add nsw i32 %v1_10001534, -1000
  store i32 %v1_10001538, i32* %r0.global-to-local, align 4
  %v1_1000153c = trunc i32 %v0_1000152c to i16
  %v2_1000153c = load i32, i32* @r28, align 4
  %v3_1000153c = add i32 %v2_1000153c, 4
  %v4_1000153c = inttoptr i32 %v3_1000153c to i16*
  store i16 %v1_1000153c, i16* %v4_1000153c, align 2
  %v0_10001540 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001540 = sub i32 -1, %v0_10001540
  store i32 %v1_10001540, i32* %r0.global-to-local, align 4
  %v1_10001544 = trunc i32 %v1_10001540 to i16
  %v2_10001544 = load i32, i32* @r27, align 4
  %v3_10001544 = add i32 %v2_10001544, 4
  %v4_10001544 = inttoptr i32 %v3_10001544 to i16*
  store i16 %v1_10001544, i16* %v4_10001544, align 2
  br i1 %v4_10001530, label %dec_label_pc_1000154c, label %dec_label_pc_1000152c.dec_label_pc_100013d0_crit_edge

dec_label_pc_1000152c.dec_label_pc_100013d0_crit_edge: ; preds = %dec_label_pc_1000152c
  %v1_100013d0.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100013d0

dec_label_pc_1000154c:                            ; preds = %dec_label_pc_1000152c, %dec_label_pc_100013c8
  %v0_1000154c = call i32 @function_10005258()
  %v1_1000154c = trunc i32 %v0_1000154c to i16
  store i32 %v0_1000154c, i32* %r3.global-to-local, align 4
  %v0_10001550 = load i32, i32* %r18.global-to-local, align 4
  %v1_10001550 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001550 = icmp slt i32 %v0_10001550, %v1_10001550
  %v4_10001550 = icmp eq i32 %v0_10001550, %v1_10001550
  store i1 %v2_10001550, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10001550, i1* %cr7_eq.global-to-local, align 1
  %v3_10001554 = load i32, i32* @r28, align 4
  %v4_10001554 = add i32 %v3_10001554, 44
  %v5_10001554 = inttoptr i32 %v4_10001554 to i16*
  store i16 %v1_1000154c, i16* %v5_10001554, align 2
  br i1 %v4_10001550, label %dec_label_pc_1000155c, label %dec_label_pc_100013d8

dec_label_pc_1000155c:                            ; preds = %dec_label_pc_1000154c, %dec_label_pc_100013d0
  %v0_1000155c = call i32 @function_10005258()
  %v1_1000155c = trunc i32 %v0_1000155c to i16
  store i32 %v0_1000155c, i32* %r3.global-to-local, align 4
  %v3_10001560 = load i32, i32* @r31, align 4
  %v4_10001560 = add i32 %v3_10001560, 2
  %v5_10001560 = inttoptr i32 %v4_10001560 to i16*
  store i16 %v1_1000155c, i16* %v5_10001560, align 2
  %v0_10001564 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10001564, label %dec_label_pc_10001568, label %dec_label_pc_100013dc

dec_label_pc_10001568:                            ; preds = %dec_label_pc_1000155c, %dec_label_pc_100013d8
  %v0_10001568 = call i32 @function_10005258()
  store i32 %v0_10001568, i32* %r3.global-to-local, align 4
  %v1_1000156c = load i32, i32* @r27, align 4
  %v2_1000156c = add i32 %v1_1000156c, 16
  %v3_1000156c = inttoptr i32 %v2_1000156c to i32*
  store i32 %v0_10001568, i32* %v3_1000156c, align 4
  %v0_10001570 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001570, label %dec_label_pc_100013e8, label %dec_label_pc_10001574

dec_label_pc_10001574:                            ; preds = %dec_label_pc_100013dc, %dec_label_pc_10001568
  %v0_10001574 = load i32, i32* @r31, align 4
  %v1_10001574 = add i32 %v0_10001574, 8
  store i32 %v1_10001574, i32* @r29, align 4
  %v0_10001578 = load i32, i32* %r19.global-to-local, align 4
  store i32 %v0_10001578, i32* @r4, align 4
  store i32 %v1_10001574, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10001584.14 to i32), i32* @lr, align 4
  %v0_10001580 = call i32 @function_10005318()
  store i32 %v0_10001580, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10001588 = load i32, i32* @r29, align 4
  %v2_10001588 = load i32, i32* %r19.global-to-local, align 4
  %v4_10001588 = add i32 %v2_10001588, %v1_10001588
  %v5_10001588 = inttoptr i32 %v4_10001588 to i8*
  store i8 0, i8* %v5_10001588, align 1
  br label %dec_label_pc_100013e8

dec_label_pc_10001590:                            ; preds = %dec_label_pc_100011a0
  %v0_10001590 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10001590, i32* %r3.global-to-local, align 4
  store i32 268440984, i32* @lr, align 4
  %v0_10001594 = call i32 @function_100083cc()
  store i32 %v0_10001594, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000148c

; uselistorder directives
  uselistorder i32 %v0_1000155c, { 1, 0 }
  uselistorder i32 %v0_1000154c, { 1, 0 }
  uselistorder i32 %v1_10001540, { 1, 0 }
  uselistorder i32 %v1_10001534, { 1, 0 }
  uselistorder i32 %v0_1000152c, { 1, 0 }
  uselistorder i32 %v1_10001524, { 1, 2, 0 }
  uselistorder i32 %v0_1000147c, { 1, 0, 2 }
  uselistorder i32 %v1_10001468, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_10001444, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10001424, { 1, 0 }
  uselistorder i32 %v1_100013d0, { 1, 0 }
  uselistorder i32 %v1_100013c8, { 0, 2, 1 }
  uselistorder i32 %v4_10001398, { 1, 0, 2 }
  uselistorder i32 %v1_10001394, { 1, 0 }
  uselistorder i32 %v2_10001358, { 2, 1, 0 }
  uselistorder i32 %v1_10001320, { 1, 0 }
  uselistorder i32 %v1_1000126c, { 1, 0 }
  uselistorder i32 %v1_10001264, { 1, 0 }
  uselistorder i32 %v1_10001244, { 0, 2, 1 }
  uselistorder i32 %v1_100011f8, { 1, 0 }
  uselistorder i32 %v0_100011f8, { 1, 2, 3, 0 }
  uselistorder i32 %v0_100011e4, { 2, 0, 1 }
  uselistorder i32 %v4_100011b8, { 1, 0, 2 }
  uselistorder i32 %v3_10001190, { 0, 2, 1, 3 }
  uselistorder i32 %v2_10001180, { 1, 2, 0 }
  uselistorder i32 %v5_1000116c, { 1, 0 }
  uselistorder i8 %v5_1000108c, { 1, 0 }
  uselistorder i32* %stack_var_-120, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 8, 9, 20, 21 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 3, 4, 5, 6, 9, 7, 8, 10, 2, 11 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 2, 3, 7, 4, 5, 6, 8, 9 }
  uselistorder i32* %r3.global-to-local, { 29, 30, 31, 32, 33, 34, 35, 36, 2, 3, 28, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r29.global-to-local, { 21, 20, 22, 23, 24, 1, 2, 0, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 7 }
  uselistorder i32* %r22.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r19.global-to-local, { 2, 3, 0, 1, 4 }
  uselistorder i32* %r0.global-to-local, { 32, 33, 34, 35, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 11, 12, 27, 28, 29, 30, 31 }
  uselistorder i1* %cr7_lt.global-to-local, { 13, 14, 15, 0, 1, 2, 3, 4, 5, 8, 6, 7, 9, 10, 11, 12 }
  uselistorder i1* %cr7_eq.global-to-local, { 13, 14, 15, 0, 1, 2, 3, 4, 5, 8, 6, 7, 9, 10, 11, 12 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10001574, { 1, 0 }
  uselistorder label %dec_label_pc_1000148c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100013e8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000134c, { 1, 0 }
  uselistorder label %dec_label_pc_1000130c, { 1, 0 }
  uselistorder label %dec_label_pc_100012b0, { 1, 0 }
  uselistorder label %dec_label_pc_10001254, { 1, 0, 2 }
}

define i32 @function_1000159c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1000159c:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr2_lt.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r7.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i16 @__decompiler_undefined_function_2()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-420 = alloca i32, align 4
  %stack_var_-384 = alloca i32, align 4
  %stack_var_-400 = alloca i32, align 4
  %stack_var_-424 = alloca i32, align 4
  %v0_100015a0 = load i32, i32* @lr, align 4
  store i32 %v0_100015a0, i32* %r0.global-to-local, align 4
  %v0_100015a4 = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r21.global-to-local, align 4
  %v0_100015b0 = load i32, i32* @r25, align 4
  %v0_100015b8 = load i32, i32* @r27, align 4
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 %v0_100015a4, i32* %r27.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v0_100015c8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* %r22.global-to-local, align 4
  %v0_100015fc = load i32, i32* @r26, align 4
  store i32 %arg5, i32* @r28, align 4
  %v0_10001608 = load i32, i32* @r29, align 4
  store i32 %arg4, i32* @r29, align 4
  store i32 0, i32* %stack_var_-424, align 4
  store i32 268441120, i32* @lr, align 4
  %v2_1000161c = call i32 @function_10009410(i32 %arg2, i32 16)
  store i32 %v2_1000161c, i32* %r19.global-to-local, align 4
  %v0_10001628 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10001628, i32* %r3.global-to-local, align 4
  store i32 268441136, i32* @lr, align 4
  %v2_1000162c = call i32 @function_10009410(i32 %v0_10001628, i32 4)
  %v0_10001630 = load i32, i32* @r28, align 4
  store i32 %v2_1000162c, i32* %r20.global-to-local, align 4
  %v0_10001640 = load i32, i32* @r29, align 4
  store i32 %v0_10001640, i32* %r3.global-to-local, align 4
  store i32 268441160, i32* @lr, align 4
  %v4_10001644 = inttoptr i32 %v0_10001630 to i32*
  %v5_10001644 = call i32 @function_10000300(i32 %v0_10001640, i32* %v4_10001644, i32 2, i32 0)
  %v5_10001654 = trunc i32 %v5_10001644 to i8
  %v0_1000165c = load i32, i32* @r28, align 4
  %v0_10001660 = load i32, i32* @r29, align 4
  store i32 %v0_10001660, i32* %r3.global-to-local, align 4
  store i32 268441192, i32* @lr, align 4
  %v4_10001664 = inttoptr i32 %v0_1000165c to i32*
  %v5_10001664 = call i32 @function_10000300(i32 %v0_10001660, i32* %v4_10001664, i32 3, i32 65535)
  %v0_10001668 = load i32, i32* @r28, align 4
  store i32 %v5_10001664, i32* %r26.global-to-local, align 4
  %v0_10001678 = load i32, i32* @r29, align 4
  store i32 %v0_10001678, i32* %r3.global-to-local, align 4
  store i32 268441216, i32* @lr, align 4
  %v4_1000167c = inttoptr i32 %v0_10001668 to i32*
  %v5_1000167c = call i32 @function_10000300(i32 %v0_10001678, i32* %v4_1000167c, i32 4, i32 64)
  %v0_10001680 = load i32, i32* @r28, align 4
  %v0_10001694 = load i32, i32* @r29, align 4
  store i32 %v0_10001694, i32* %r3.global-to-local, align 4
  store i32 268441244, i32* @lr, align 4
  %v4_10001698 = inttoptr i32 %v0_10001680 to i32*
  %v5_10001698 = call i32 @function_10000300(i32 %v0_10001694, i32* %v4_10001698, i32 5, i32 1)
  %v1_100016a0 = urem i32 %v5_10001698, 256
  %v0_100016ac = load i32, i32* @r28, align 4
  %v0_100016b4 = load i32, i32* @r29, align 4
  store i32 %v0_100016b4, i32* %r3.global-to-local, align 4
  store i32 268441276, i32* @lr, align 4
  %v4_100016b8 = inttoptr i32 %v0_100016ac to i32*
  %v5_100016b8 = call i32 @function_10000300(i32 %v0_100016b4, i32* %v4_100016b8, i32 7, i32 65535)
  %v0_100016bc = load i32, i32* @r28, align 4
  %v1_100016c8 = urem i32 %v5_100016b8, 65536
  store i32 %v1_100016c8, i32* @r24, align 4
  %v0_100016cc = load i32, i32* @r29, align 4
  store i32 %v0_100016cc, i32* %r3.global-to-local, align 4
  store i32 268441300, i32* @lr, align 4
  %v4_100016d0 = inttoptr i32 %v0_100016bc to i32*
  %v5_100016d0 = call i32 @function_10000300(i32 %v0_100016cc, i32* %v4_100016d0, i32 10, i32 0)
  %v0_100016d4 = load i32, i32* @r28, align 4
  %v1_100016d8 = urem i32 %v5_100016d0, 256
  %v0_100016e8 = load i32, i32* @r29, align 4
  store i32 %v0_100016e8, i32* %r3.global-to-local, align 4
  store i32 268441328, i32* @lr, align 4
  %v4_100016ec = inttoptr i32 %v0_100016d4 to i32*
  %v5_100016ec = call i32 @function_10000300(i32 %v0_100016e8, i32* %v4_100016ec, i32 11, i32 1)
  %v0_100016f0 = load i32, i32* @r28, align 4
  %v1_100016f4 = urem i32 %v5_100016ec, 256
  %v0_10001704 = load i32, i32* @r29, align 4
  store i32 %v0_10001704, i32* %r3.global-to-local, align 4
  store i32 268441356, i32* @lr, align 4
  %v4_10001708 = inttoptr i32 %v0_100016f0 to i32*
  %v5_10001708 = call i32 @function_10000300(i32 %v0_10001704, i32* %v4_10001708, i32 12, i32 1)
  %v0_1000170c = load i32, i32* @r28, align 4
  %v1_10001718 = urem i32 %v5_10001708, 256
  %v0_1000171c = load i32, i32* @r29, align 4
  store i32 %v0_1000171c, i32* %r3.global-to-local, align 4
  store i32 268441380, i32* @lr, align 4
  %v4_10001720 = inttoptr i32 %v0_1000170c to i32*
  %v5_10001720 = call i32 @function_10000300(i32 %v0_1000171c, i32* %v4_10001720, i32 13, i32 0)
  %v0_10001724 = load i32, i32* @r28, align 4
  %v1_10001730 = urem i32 %v5_10001720, 256
  %v0_10001734 = load i32, i32* @r29, align 4
  store i32 %v0_10001734, i32* %r3.global-to-local, align 4
  store i32 268441404, i32* @lr, align 4
  %v4_10001738 = inttoptr i32 %v0_10001724 to i32*
  %v5_10001738 = call i32 @function_10000300(i32 %v0_10001734, i32* %v4_10001738, i32 14, i32 0)
  %v0_1000173c = load i32, i32* @r28, align 4
  %v1_10001748 = urem i32 %v5_10001738, 256
  store i32 %v1_10001748, i32* %r18.global-to-local, align 4
  %v0_1000174c = load i32, i32* @r29, align 4
  store i32 %v0_1000174c, i32* %r3.global-to-local, align 4
  store i32 268441428, i32* @lr, align 4
  %v4_10001750 = inttoptr i32 %v0_1000173c to i32*
  %v5_10001750 = call i32 @function_10000300(i32 %v0_1000174c, i32* %v4_10001750, i32 15, i32 0)
  %v0_1000175c = load i32, i32* @r28, align 4
  %v1_10001760 = urem i32 %v5_10001750, 256
  store i32 %v1_10001760, i32* %r23.global-to-local, align 4
  %v0_10001764 = load i32, i32* @r29, align 4
  store i32 %v0_10001764, i32* %r3.global-to-local, align 4
  store i32 268441452, i32* @lr, align 4
  %v4_10001768 = inttoptr i32 %v0_1000175c to i32*
  %v5_10001768 = call i32 @function_10000300(i32 %v0_10001764, i32* %v4_10001768, i32 0, i32 768)
  %v0_1000176c = load i32, i32* @r28, align 4
  store i32 %v5_10001768, i32* @r30, align 4
  %v0_1000177c = load i32, i32* @r29, align 4
  store i32 %v0_1000177c, i32* %r3.global-to-local, align 4
  store i32 268441476, i32* @lr, align 4
  %v4_10001780 = inttoptr i32 %v0_1000176c to i32*
  %v5_10001780 = call i32 @function_10000300(i32 %v0_1000177c, i32* %v4_10001780, i32 1, i32 1)
  %v1_10001784 = urem i32 %v5_10001780, 256
  store i32 %v1_10001784, i32* %r16.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268441488, i32* @lr, align 4
  %v0_1000178c = call i32 @function_1000879c()
  %v1_10001794 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001794 = add i32 %v1_10001794, %v0_1000178c
  store i32 %v2_10001794, i32* %r17.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268441508, i32* @lr, align 4
  %v3_100017a0 = call i32 @function_100090b4(i32 2, i32 3, i32 6)
  store i32 %v3_100017a0, i32* %r3.global-to-local, align 4
  %v3_100017a4 = icmp eq i32 %v3_100017a0, -1
  store i1 %v3_100017a4, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_100017a0, i32* @r31, align 4
  br i1 %v3_100017a4, label %dec_label_pc_10001a58, label %dec_label_pc_100017b0

dec_label_pc_100017b0:                            ; preds = %dec_label_pc_1000159c
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_100017bc = ptrtoint i32* %stack_var_-424 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-424, align 4
  store i32 268441548, i32* @lr, align 4
  %v4_100017c8 = call i32 @function_10009078(i32 0, i32 3, i32 %v2_100017bc, i32 4)
  store i32 %v4_100017c8, i32* %r3.global-to-local, align 4
  %v3_100017cc = icmp eq i32 %v4_100017c8, -1
  store i1 %v3_100017cc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100017cc, label %dec_label_pc_10001a50, label %dec_label_pc_100017d4

dec_label_pc_100017d4:                            ; preds = %dec_label_pc_100017b0
  %v0_100017d4 = load i32, i32* %r21.global-to-local, align 4
  %v1_100017d4 = icmp slt i32 %v0_100017d4, 0
  %v3_100017d4 = icmp eq i32 %v0_100017d4, 0
  store i1 %v1_100017d4, i1* %cr2_lt.global-to-local, align 1
  store i1 %v3_100017d4, i1* %cr2_eq.global-to-local, align 1
  %v0_100017d8 = load i32, i32* %r26.global-to-local, align 4
  %v1_100017d8 = urem i32 %v0_100017d8, 65536
  store i32 %v1_100017d8, i32* %r26.global-to-local, align 4
  %v0_100017dc = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100017dc, i32* %stack_var_-424, align 4
  %v5_100017e0 = trunc i32 %v0_100017d8 to i16
  %tmp48 = icmp slt i32 %v0_100017d4, 1
  br i1 %tmp48, label %dec_label_pc_100017d4.dec_label_pc_10001938.preheader_crit_edge, label %dec_label_pc_100017e8

dec_label_pc_100017d4.dec_label_pc_10001938.preheader_crit_edge: ; preds = %dec_label_pc_100017d4
  %.pre = sext i16 %v5_100017e0 to i32
  br label %dec_label_pc_10001938.preheader

dec_label_pc_100017e8:                            ; preds = %dec_label_pc_100017d4
  %v2_100017ec = ptrtoint i32* %stack_var_-400 to i32
  %v2_100017f4 = ptrtoint i32* %stack_var_-384 to i32
  %v0_100017f8 = load i32, i32* @r24, align 4
  %v4_100017f8 = icmp eq i32 %v0_100017f8, 65535
  store i1 %v4_100017f8, i1* %cr4_eq.global-to-local, align 1
  %v0_100017fc = load i32, i32* @r30, align 4
  %v1_100017fc = add i32 %v0_100017fc, 40
  store i32 %v1_100017fc, i32* %r0.global-to-local, align 4
  %v5_10001800 = trunc i32 %v1_100017fc to i16
  %v2_10001804 = ptrtoint i32* %stack_var_-420 to i32
  %v4_100018e0 = zext i16 %tmp10 to i32
  %v1_10001a34 = and i32 %tmp9, 1179648
  %v1_10001a38 = and i32 %tmp9, 327680
  %v3_10001a38 = icmp eq i32 %v1_10001a38, 0
  %v3_10001b68 = icmp eq i32 %v1_100016a0, 0
  %v4_10001b84 = sext i16 %v5_100017e0 to i32
  %sext = mul i32 %v5_1000167c, 16777216
  %v4_10001b98 = sdiv i32 %sext, 16777216
  %v4_10001a40 = icmp eq i32 %v1_10001a34, 1179648
  br label %dec_label_pc_10001808

dec_label_pc_10001808:                            ; preds = %dec_label_pc_10001924, %dec_label_pc_100017e8
  %stack_var_-120.0 = phi i32 [ %tmp, %dec_label_pc_100017e8 ], [ %stack_var_-120.1, %dec_label_pc_10001924 ]
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268441624, i32* @lr, align 4
  %v3_10001814 = call i32 @function_100090b4(i32 2, i32 1, i32 0)
  store i32 %v3_10001814, i32* %r3.global-to-local, align 4
  %v3_10001818 = icmp eq i32 %v3_10001814, -1
  store i1 %v3_10001818, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10001814, i32* @r28, align 4
  br i1 %v3_10001818, label %dec_label_pc_10001924, label %dec_label_pc_10001824

dec_label_pc_10001824:                            ; preds = %dec_label_pc_10001808, %dec_label_pc_10001900
  store i32 3, i32* @r4, align 4
  store i32 268441652, i32* @lr, align 4
  %v1_10001830 = call i32 @function_100082e4(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_1000183c = load i32, i32* @r28, align 4
  store i32 %v0_1000183c, i32* %r3.global-to-local, align 4
  store i32 268441672, i32* @lr, align 4
  %v2_10001844 = call i32 @function_100082e4(i32 %v0_1000183c)
  store i32 %v2_10001844, i32* %r3.global-to-local, align 4
  %v3_10001848 = load i32, i32* %stack_var_-424, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10001850 = mul i32 %v3_10001848, 24
  store i32 %v1_10001850, i32* %r0.global-to-local, align 4
  %v0_10001858 = load i32, i32* %r22.global-to-local, align 4
  %v2_10001858 = add i32 %v0_10001858, %v1_10001850
  store i32 %v2_10001858, i32* %r11.global-to-local, align 4
  %v1_1000185c = add i32 %v2_10001858, 20
  %v2_1000185c = inttoptr i32 %v1_1000185c to i8*
  %v3_1000185c = load i8, i8* %v2_1000185c, align 1
  %v4_1000185c = zext i8 %v3_1000185c to i32
  store i32 %v4_1000185c, i32* %r9.global-to-local, align 4
  %v3_10001860 = icmp eq i8 %v3_1000185c, 31
  store i1 %v3_10001860, i1* %cr7_eq.global-to-local, align 1
  %tmp49 = icmp ult i8 %v3_1000185c, 32
  %v1_10001ab8 = add i32 %v2_10001858, 16
  %v2_10001ab8 = inttoptr i32 %v1_10001ab8 to i32*
  %v3_10001ab8 = load i32, i32* %v2_10001ab8, align 4
  br i1 %tmp49, label %dec_label_pc_10001ab8, label %dec_label_pc_10001868

dec_label_pc_10001868:                            ; preds = %dec_label_pc_10001824
  store i32 %v3_10001ab8, i32* %r0.global-to-local, align 4
  %v0_10001870 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10001870, label %dec_label_pc_10001ae0, label %dec_label_pc_10001874

dec_label_pc_10001874:                            ; preds = %dec_label_pc_10001ab8, %dec_label_pc_10001868
  %stack_var_-412.0 = phi i32 [ %v2_10001ad4, %dec_label_pc_10001ab8 ], [ %v3_10001ab8, %dec_label_pc_10001868 ]
  %v0_10001874 = load i32, i32* @r24, align 4
  %v1_10001874 = trunc i32 %v0_10001874 to i16
  br label %dec_label_pc_10001878

dec_label_pc_10001878:                            ; preds = %dec_label_pc_10001ae0, %dec_label_pc_10001874
  %stack_var_-412.1 = phi i32 [ %stack_var_-412.2, %dec_label_pc_10001ae0 ], [ %stack_var_-412.0, %dec_label_pc_10001874 ]
  %storemerge = phi i16 [ %v1_10001ae0, %dec_label_pc_10001ae0 ], [ %v1_10001874, %dec_label_pc_10001874 ]
  %v0_10001880 = load i32, i32* @r28, align 4
  store i32 %v0_10001880, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10001888.15 to i32), i32* @lr, align 4
  %v0_10001884 = call i32 @function_10008eb4()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268441744, i32* @lr, align 4
  %v0_1000188c = call i32 @function_1000879c()
  store i32 %v0_1000188c, i32* %r3.global-to-local, align 4
  store i32 %v0_1000188c, i32* %r29.global-to-local, align 4
  %v4_100018d4 = icmp eq i32 %tmp11, %stack_var_-412.1
  %v4_100018e4 = zext i16 %storemerge to i32
  %v4_100018e8 = icmp eq i16 %storemerge, %tmp10
  %v4_100018d4.not = xor i1 %v4_100018d4, true
  br label %dec_label_pc_10001894

dec_label_pc_10001894:                            ; preds = %dec_label_pc_100018f0, %dec_label_pc_10001878
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 %v2_100017ec, i32* %r7.global-to-local, align 4
  store i32 %v2_10001804, i32* %r8.global-to-local, align 4
  %v0_100018ac = load i32, i32* @r31, align 4
  store i32 %v0_100018ac, i32* %r3.global-to-local, align 4
  store i32 16, i32* %stack_var_-420, align 4
  store i32 268441784, i32* @lr, align 4
  %v6_100018b4 = call i32 @function_10008fc0(i32 %v0_100018ac, i32 %v2_100017f4, i32 256, i32 16384, i32 %v2_100017ec, i32 %v2_10001804)
  store i32 %v6_100018b4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_100018c0 = icmp eq i32 %v6_100018b4, -1
  store i1 %v3_100018c0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100018c0, label %dec_label_pc_10001a58, label %dec_label_pc_100018cc

dec_label_pc_100018cc:                            ; preds = %dec_label_pc_10001894
  store i32 %tmp11, i32* %r10.global-to-local, align 4
  store i32 %stack_var_-412.1, i32* %r0.global-to-local, align 4
  store i1 %v4_100018d4, i1* %cr7_eq.global-to-local, align 1
  %tmp50 = icmp ult i32 %v6_100018b4, 41
  %or.cond = or i1 %tmp50, %v4_100018d4.not
  br i1 %or.cond, label %dec_label_pc_100018f0, label %dec_label_pc_100018e0

dec_label_pc_100018e0:                            ; preds = %dec_label_pc_100018cc
  store i32 %v4_100018e0, i32* %r0.global-to-local, align 4
  store i32 %v4_100018e4, i32* %r8.global-to-local, align 4
  store i1 %v4_100018e8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100018e8, label %dec_label_pc_10001a30, label %dec_label_pc_100018f0

dec_label_pc_100018f0:                            ; preds = %dec_label_pc_100018cc, %dec_label_pc_10001a48, %dec_label_pc_100018e0
  store i32 268441844, i32* @lr, align 4
  %v0_100018f0 = call i32 @function_1000879c()
  %v0_100018f4 = load i32, i32* %r29.global-to-local, align 4
  %v2_100018f4 = sub i32 %v0_100018f0, %v0_100018f4
  store i32 %v2_100018f4, i32* %r3.global-to-local, align 4
  %v3_100018f8 = icmp eq i32 %v2_100018f4, 10
  store i1 %v3_100018f8, i1* %cr7_eq.global-to-local, align 1
  %tmp51 = icmp slt i32 %v2_100018f4, 11
  br i1 %tmp51, label %dec_label_pc_10001894, label %dec_label_pc_10001900

dec_label_pc_10001900:                            ; preds = %dec_label_pc_10001a48, %dec_label_pc_100018f0
  %v0_10001900 = load i32, i32* @r28, align 4
  store i32 %v0_10001900, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10001908.16 to i32), i32* @lr, align 4
  %v0_10001904 = call i32 @function_100083cc()
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268441880, i32* @lr, align 4
  %v3_10001914 = call i32 @function_100090b4(i32 2, i32 1, i32 0)
  store i32 %v3_10001914, i32* %r3.global-to-local, align 4
  %v3_10001918 = icmp eq i32 %v3_10001914, -1
  store i1 %v3_10001918, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10001914, i32* @r28, align 4
  br i1 %v3_10001918, label %dec_label_pc_10001924, label %dec_label_pc_10001824

dec_label_pc_10001924:                            ; preds = %dec_label_pc_10001900, %dec_label_pc_10001808, %dec_label_pc_10001bb4
  %stack_var_-120.1 = phi i32 [ %stack_var_-120.0, %dec_label_pc_10001808 ], [ %v0_10001ba4, %dec_label_pc_10001bb4 ], [ %stack_var_-120.0, %dec_label_pc_10001900 ]
  %v3_10001924 = load i32, i32* %stack_var_-424, align 4
  %v1_10001928 = add i32 %v3_10001924, 1
  store i32 %v1_10001928, i32* %r9.global-to-local, align 4
  %v1_1000192c = load i32, i32* %r21.global-to-local, align 4
  %v2_1000192c = icmp slt i32 %v1_10001928, %v1_1000192c
  %v4_1000192c = icmp eq i32 %v1_10001928, %v1_1000192c
  store i1 %v4_1000192c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10001928, i32* %stack_var_-424, align 4
  br i1 %v2_1000192c, label %dec_label_pc_10001808, label %dec_label_pc_10001938.preheader

dec_label_pc_10001938.preheader:                  ; preds = %dec_label_pc_10001924, %dec_label_pc_100017d4.dec_label_pc_10001938.preheader_crit_edge
  %v4_10001944.pre-phi = phi i32 [ %.pre, %dec_label_pc_100017d4.dec_label_pc_10001938.preheader_crit_edge ], [ %v4_10001b84, %dec_label_pc_10001924 ]
  br label %dec_label_pc_10001938

dec_label_pc_10001938:                            ; preds = %dec_label_pc_10001938.preheader, %dec_label_pc_10001af8
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-424, align 4
  %v0_10001940 = load i1, i1* %cr2_eq.global-to-local, align 1
  %v1_10001940 = load i1, i1* %cr2_lt.global-to-local, align 1
  %v2_10001940 = or i1 %v0_10001940, %v1_10001940
  br i1 %v2_10001940, label %dec_label_pc_10001af8, label %dec_label_pc_10001944

dec_label_pc_10001944:                            ; preds = %dec_label_pc_10001938
  store i32 %v4_10001944.pre-phi, i32* %r9.global-to-local, align 4
  %v0_1000194c = load i32, i32* %r16.global-to-local, align 4
  %v3_1000194c = icmp eq i32 %v0_1000194c, 0
  store i1 %v3_1000194c, i1* %cr4_eq.global-to-local, align 1
  %v0_10001950 = load i32, i32* @r30, align 4
  %v1_10001950 = add i32 %v0_10001950, 20
  store i32 %v1_10001950, i32* @r26, align 4
  store i1 false, i1* %cr3_eq.global-to-local, align 1
  %v1_10001958 = urem i32 %v1_10001950, 65536
  store i32 %v1_10001958, i32* %r23.global-to-local, align 4
  %v1_1000195c = add i32 %v0_10001950, 40
  store i32 %v1_1000195c, i32* @r25, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r18.global-to-local, align 4
  store i32 0, i32* @r24, align 4
  br label %dec_label_pc_10001a04

dec_label_pc_10001970:                            ; preds = %dec_label_pc_10001a18, %dec_label_pc_10001a24
  %v0_10001970 = load i32, i32* @r24, align 4
  %v1_10001970 = trunc i32 %v0_10001970 to i16
  %v2_10001970 = load i32, i32* @r29, align 4
  %v3_10001970 = add i32 %v2_10001970, 10
  %v4_10001970 = inttoptr i32 %v3_10001970 to i16*
  store i16 %v1_10001970, i16* %v4_10001970, align 2
  %v0_10001978 = load i32, i32* @r29, align 4
  store i32 %v0_10001978, i32* @r3, align 4
  %v2_1000197c = call i32 @function_10003ca8(i32 %v0_10001978, i32 20)
  %v3_1000197c = trunc i32 %v2_1000197c to i16
  store i32 %v2_1000197c, i32* %r3.global-to-local, align 4
  %v3_10001980 = load i32, i32* %stack_var_-424, align 4
  store i32 %v3_10001980, i32* %r9.global-to-local, align 4
  %v3_10001984 = load i32, i32* @r29, align 4
  %v4_10001984 = add i32 %v3_10001984, 10
  %v5_10001984 = inttoptr i32 %v4_10001984 to i16*
  store i16 %v3_1000197c, i16* %v5_10001984, align 2
  %v0_10001988 = load i32, i32* @r28, align 4
  store i32 %v0_10001988, i32* @r4, align 4
  %v0_1000198c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000198c = mul i32 %v0_1000198c, 16
  store i32 %v1_1000198c, i32* %r9.global-to-local, align 4
  %v0_10001990 = load i32, i32* @r24, align 4
  %v1_10001990 = trunc i32 %v0_10001990 to i16
  %v3_10001990 = add i32 %v0_10001988, 16
  %v4_10001990 = inttoptr i32 %v3_10001990 to i16*
  store i16 %v1_10001990, i16* %v4_10001990, align 2
  %v0_10001994 = load i32, i32* %r19.global-to-local, align 4
  %v1_10001994 = load i32, i32* %r9.global-to-local, align 4
  %v2_10001994 = add i32 %v1_10001994, %v0_10001994
  store i32 %v2_10001994, i32* %r9.global-to-local, align 4
  %v0_10001998 = load i32, i32* %r23.global-to-local, align 4
  %v1_1000199c = add i32 %v2_10001994, 4
  %v2_1000199c = inttoptr i32 %v1_1000199c to i32*
  %v3_1000199c = load i32, i32* %v2_1000199c, align 4
  store i32 %v3_1000199c, i32* %r11.global-to-local, align 4
  %v0_100019a0 = load i32, i32* @r26, align 4
  %v0_100019a4 = load i32, i32* @r29, align 4
  store i32 %v0_100019a4, i32* %r3.global-to-local, align 4
  %v1_100019a8 = load i32, i32* @r28, align 4
  %v2_100019a8 = add i32 %v1_100019a8, 4
  %v3_100019a8 = inttoptr i32 %v2_100019a8 to i32*
  store i32 %v3_1000199c, i32* %v3_100019a8, align 4
  %v0_100019ac = load i32, i32* %r11.global-to-local, align 4
  %v1_100019ac = add i32 %v0_100019ac, 1
  store i32 %v1_100019ac, i32* %r11.global-to-local, align 4
  %v1_100019b0 = load i32, i32* %r9.global-to-local, align 4
  %v2_100019b0 = add i32 %v1_100019b0, 4
  %v3_100019b0 = inttoptr i32 %v2_100019b0 to i32*
  store i32 %v1_100019ac, i32* %v3_100019b0, align 4
  %v0_100019b4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100019b4 = add i32 %v0_100019b4, 8
  %v2_100019b4 = inttoptr i32 %v1_100019b4 to i32*
  %v3_100019b4 = load i32, i32* %v2_100019b4, align 4
  store i32 %v3_100019b4, i32* %r0.global-to-local, align 4
  %v1_100019b8 = load i32, i32* @r28, align 4
  %v2_100019b8 = add i32 %v1_100019b8, 8
  %v3_100019b8 = inttoptr i32 %v2_100019b8 to i32*
  store i32 %v3_100019b4, i32* %v3_100019b8, align 4
  %v4_100019bc = call i32 @function_10003d0c(i32 %v0_100019a4, i32 %v0_10001988, i32 %v0_10001998, i32 %v0_100019a0)
  %v5_100019bc = trunc i32 %v4_100019bc to i16
  store i32 %v4_100019bc, i32* %r3.global-to-local, align 4
  %v3_100019c0 = load i32, i32* %stack_var_-424, align 4
  store i32 %v3_100019c0, i32* %r7.global-to-local, align 4
  %v0_100019c4 = load i32, i32* @r28, align 4
  %v1_100019c4 = add i32 %v0_100019c4, 2
  %v2_100019c4 = inttoptr i32 %v1_100019c4 to i16*
  %v3_100019c4 = load i16, i16* %v2_100019c4, align 2
  %v4_100019c4 = zext i16 %v3_100019c4 to i32
  store i32 %v4_100019c4, i32* %r0.global-to-local, align 4
  %v0_100019c8 = load i32, i32* @r29, align 4
  %v1_100019cc = mul i32 %v3_100019c0, 24
  store i32 %v1_100019cc, i32* %r7.global-to-local, align 4
  %v4_100019d0 = add i32 %v0_100019c4, 16
  %v5_100019d0 = inttoptr i32 %v4_100019d0 to i16*
  store i16 %v5_100019bc, i16* %v5_100019d0, align 2
  %v0_100019d4 = load i32, i32* @r25, align 4
  %v0_100019d8 = load i32, i32* @r31, align 4
  store i32 %v0_100019d8, i32* %r3.global-to-local, align 4
  %v0_100019dc = load i32, i32* %r7.global-to-local, align 4
  %v1_100019dc = load i32, i32* %r22.global-to-local, align 4
  %v2_100019dc = add i32 %v1_100019dc, %v0_100019dc
  store i32 %v2_100019dc, i32* %r7.global-to-local, align 4
  %v0_100019e4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100019e4 = trunc i32 %v0_100019e4 to i16
  %v3_100019e4 = add i32 %v2_100019dc, 2
  %v4_100019e4 = inttoptr i32 %v3_100019e4 to i16*
  store i16 %v1_100019e4, i16* %v4_100019e4, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268442096, i32* @lr, align 4
  %v6_100019ec = call i32 @function_10009038(i32 %v0_100019d8, i32 %v0_100019c8, i32 %v0_100019d4, i32 16384, i32 %v2_100019dc, i32 16)
  store i32 %v6_100019ec, i32* %r3.global-to-local, align 4
  %v3_100019f0 = load i32, i32* %stack_var_-424, align 4
  store i32 %v3_100019f0, i32* %r9.global-to-local, align 4
  %v1_100019f4 = add i32 %v3_100019f0, 1
  store i32 %v1_100019f4, i32* %r0.global-to-local, align 4
  %v1_100019f8 = load i32, i32* %r21.global-to-local, align 4
  %v2_100019f8 = icmp slt i32 %v1_100019f4, %v1_100019f8
  %v4_100019f8 = icmp eq i32 %v1_100019f4, %v1_100019f8
  store i1 %v4_100019f8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100019f4, i32* %stack_var_-424, align 4
  br i1 %v2_100019f8, label %dec_label_pc_10001970.dec_label_pc_10001a04_crit_edge, label %dec_label_pc_10001af8

dec_label_pc_10001970.dec_label_pc_10001a04_crit_edge: ; preds = %dec_label_pc_10001970
  %v0_10001a14.pre = load i1, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_10001a04

dec_label_pc_10001a04:                            ; preds = %dec_label_pc_10001970.dec_label_pc_10001a04_crit_edge, %dec_label_pc_10001944
  %v0_10001a14 = phi i1 [ %v0_10001a14.pre, %dec_label_pc_10001970.dec_label_pc_10001a04_crit_edge ], [ false, %dec_label_pc_10001944 ]
  %v0_10001a04 = phi i32 [ %v1_100019f4, %dec_label_pc_10001970.dec_label_pc_10001a04_crit_edge ], [ 0, %dec_label_pc_10001944 ]
  %v1_10001a04 = mul i32 %v0_10001a04, 4
  store i32 %v1_10001a04, i32* %r0.global-to-local, align 4
  %v0_10001a08 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001a08 = add i32 %v0_10001a08, %v1_10001a04
  %v3_10001a08 = inttoptr i32 %v2_10001a08 to i32*
  %v4_10001a08 = load i32, i32* %v3_10001a08, align 4
  store i32 %v4_10001a08, i32* @r29, align 4
  %v1_10001a0c = add i32 %v4_10001a08, 40
  store i32 %v1_10001a0c, i32* @r27, align 4
  %v1_10001a10 = add i32 %v4_10001a08, 20
  store i32 %v1_10001a10, i32* @r28, align 4
  br i1 %v0_10001a14, label %dec_label_pc_10001aec, label %dec_label_pc_10001a18

dec_label_pc_10001a18:                            ; preds = %dec_label_pc_10001a04, %dec_label_pc_10001aec
  %v0_10001a18 = phi i32 [ %v1_10001a0c, %dec_label_pc_10001a04 ], [ %v0_10001a18.pre, %dec_label_pc_10001aec ]
  store i32 %v0_10001a18, i32* @r3, align 4
  %v0_10001a1c = load i32, i32* @r30, align 4
  store i32 %v0_10001a1c, i32* @r4, align 4
  %v0_10001a20 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10001a20, label %dec_label_pc_10001970, label %dec_label_pc_10001a24

dec_label_pc_10001a24:                            ; preds = %dec_label_pc_10001a18
  store i32 268442152, i32* @lr, align 4
  %v0_10001a24 = call i32 @function_10005318()
  store i32 %v0_10001a24, i32* %r3.global-to-local, align 4
  %v0_10001a28 = load i32, i32* %r18.global-to-local, align 4
  %v1_10001a28 = load i32, i32* @r27, align 4
  %v2_10001a28 = load i32, i32* @r30, align 4
  %v3_10001a28 = trunc i32 %v0_10001a28 to i8
  %v4_10001a28 = add i32 %v2_10001a28, %v1_10001a28
  %v5_10001a28 = inttoptr i32 %v4_10001a28 to i8*
  store i8 %v3_10001a28, i8* %v5_10001a28, align 1
  br label %dec_label_pc_10001970

dec_label_pc_10001a30:                            ; preds = %dec_label_pc_100018e0
  store i32 %tmp9, i32* %r9.global-to-local, align 4
  store i32 %v1_10001a34, i32* %r11.global-to-local, align 4
  store i32 1179648, i32* %r0.global-to-local, align 4
  store i1 %v4_10001a40, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001a40, label %dec_label_pc_10001b0c, label %dec_label_pc_10001a48

dec_label_pc_10001a48:                            ; preds = %dec_label_pc_10001a30
  br i1 %v3_10001a38, label %dec_label_pc_100018f0, label %dec_label_pc_10001900

dec_label_pc_10001a50:                            ; preds = %dec_label_pc_100017b0
  %v0_10001a50 = load i32, i32* @r31, align 4
  store i32 %v0_10001a50, i32* %r3.global-to-local, align 4
  store i32 268442200, i32* @lr, align 4
  %v0_10001a54 = call i32 @function_100083cc()
  store i32 %v0_10001a54, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001a58

dec_label_pc_10001a58:                            ; preds = %dec_label_pc_10001894, %dec_label_pc_10001af8, %dec_label_pc_1000159c, %dec_label_pc_10001a50
  store i32 %v0_100015c8, i32* %r0.global-to-local, align 4
  %v1_10001a6c = call %0 @__asm_mtcrf(i32 56, i32 %v0_100015a4)
  store i32 %v0_100015b0, i32* %r25.global-to-local, align 4
  store i32 %v0_100015fc, i32* %r26.global-to-local, align 4
  store i32 %v0_100015b8, i32* %r27.global-to-local, align 4
  store i32 %v0_10001608, i32* %r29.global-to-local, align 4
  %v0_10001ab4 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10001ab4

dec_label_pc_10001ab8:                            ; preds = %dec_label_pc_10001824
  store i32 %v3_10001ab8, i32* %r29.global-to-local, align 4
  %v0_10001abc = call i32 @function_10005258()
  store i32 %v0_10001abc, i32* %r3.global-to-local, align 4
  %v3_10001ac0 = load i32, i32* %stack_var_-424, align 4
  %v1_10001ac4 = mul i32 %v3_10001ac0, 24
  %v1_10001ac8 = load i32, i32* %r22.global-to-local, align 4
  %v2_10001ac8 = add i32 %v1_10001ac8, %v1_10001ac4
  store i32 %v2_10001ac8, i32* %r9.global-to-local, align 4
  %v1_10001acc = add i32 %v2_10001ac8, 20
  %v2_10001acc = inttoptr i32 %v1_10001acc to i8*
  %v3_10001acc = load i8, i8* %v2_10001acc, align 1
  %v4_10001acc = zext i8 %v3_10001acc to i32
  store i32 %v4_10001acc, i32* %r0.global-to-local, align 4
  %tmp53 = urem i8 %v3_10001acc, 64
  %v2_10001ad0 = zext i8 %tmp53 to i32
  %v3_10001ad0 = lshr i32 %v0_10001abc, %v2_10001ad0
  store i32 %v3_10001ad0, i32* %r3.global-to-local, align 4
  %v0_10001ad4 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001ad4 = add i32 %v3_10001ad0, %v0_10001ad4
  store i32 %v2_10001ad4, i32* %r29.global-to-local, align 4
  %v0_10001adc = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10001adc, label %dec_label_pc_10001ae0, label %dec_label_pc_10001874

dec_label_pc_10001ae0:                            ; preds = %dec_label_pc_10001ab8, %dec_label_pc_10001868
  %stack_var_-412.2 = phi i32 [ %v2_10001ad4, %dec_label_pc_10001ab8 ], [ %v3_10001ab8, %dec_label_pc_10001868 ]
  %v0_10001ae0 = call i32 @function_10005258()
  %v1_10001ae0 = trunc i32 %v0_10001ae0 to i16
  store i32 %v0_10001ae0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001878

dec_label_pc_10001aec:                            ; preds = %dec_label_pc_10001a04
  %v0_10001aec = call i32 @function_10005258()
  %v1_10001aec = trunc i32 %v0_10001aec to i16
  store i32 %v0_10001aec, i32* %r3.global-to-local, align 4
  %v3_10001af0 = load i32, i32* @r29, align 4
  %v4_10001af0 = add i32 %v3_10001af0, 4
  %v5_10001af0 = inttoptr i32 %v4_10001af0 to i16*
  store i16 %v1_10001aec, i16* %v5_10001af0, align 2
  %v0_10001a18.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_10001a18

dec_label_pc_10001af8:                            ; preds = %dec_label_pc_10001970, %dec_label_pc_10001938
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268442368, i32* @lr, align 4
  %v0_10001afc = call i32 @function_1000879c()
  store i32 %v0_10001afc, i32* %r3.global-to-local, align 4
  %v0_10001b00 = load i32, i32* %r17.global-to-local, align 4
  %v2_10001b00 = icmp slt i32 %v0_10001b00, %v0_10001afc
  %v4_10001b00 = icmp eq i32 %v0_10001b00, %v0_10001afc
  store i1 %v4_10001b00, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001b00, label %dec_label_pc_10001a58, label %dec_label_pc_10001938

dec_label_pc_10001b0c:                            ; preds = %dec_label_pc_10001a30
  %v3_10001b0c = load i32, i32* %stack_var_-424, align 4
  store i32 %v3_10001b0c, i32* %r29.global-to-local, align 4
  store i32 %stack_var_-120.0, i32* %r9.global-to-local, align 4
  store i32 %v1_100017fc, i32* @r3, align 4
  %v1_10001b18 = add i32 %stack_var_-120.0, 2
  %v2_10001b18 = inttoptr i32 %v1_10001b18 to i16*
  %v3_10001b18 = load i16, i16* %v2_10001b18, align 2
  %v4_10001b18 = zext i16 %v3_10001b18 to i32
  store i32 %v4_10001b18, i32* %r11.global-to-local, align 4
  %v1_10001b1c = mul i32 %v3_10001b0c, 16
  store i32 %v1_10001b1c, i32* %r9.global-to-local, align 4
  %v1_10001b20 = load i32, i32* %r19.global-to-local, align 4
  %v3_10001b20 = add i32 %v1_10001b20, %v1_10001b1c
  %v4_10001b20 = inttoptr i32 %v3_10001b20 to i32*
  store i32 %tmp11, i32* %v4_10001b20, align 4
  %v0_10001b24 = load i32, i32* %r19.global-to-local, align 4
  %v1_10001b24 = load i32, i32* %r9.global-to-local, align 4
  %v2_10001b24 = add i32 %v1_10001b24, %v0_10001b24
  store i32 %v2_10001b24, i32* %r9.global-to-local, align 4
  store i32 %stack_var_-120.0, i32* %r10.global-to-local, align 4
  %v0_10001b2c = load i32, i32* %r29.global-to-local, align 4
  %v1_10001b2c = mul i32 %v0_10001b2c, 4
  store i32 %v1_10001b2c, i32* @r29, align 4
  %v0_10001b30 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001b30 = trunc i32 %v0_10001b30 to i16
  %v3_10001b30 = add i32 %v2_10001b24, 12
  %v4_10001b30 = inttoptr i32 %v3_10001b30 to i16*
  store i16 %v1_10001b30, i16* %v4_10001b30, align 2
  %v0_10001b34 = load i32, i32* %r10.global-to-local, align 4
  %v1_10001b34 = add i32 %v0_10001b34, 4
  %v2_10001b34 = inttoptr i32 %v1_10001b34 to i32*
  %v3_10001b34 = load i32, i32* %v2_10001b34, align 4
  store i32 %v3_10001b34, i32* %r0.global-to-local, align 4
  %v0_10001b38 = load i32, i32* %r8.global-to-local, align 4
  %v1_10001b38 = trunc i32 %v0_10001b38 to i16
  %v2_10001b38 = load i32, i32* %r9.global-to-local, align 4
  %v3_10001b38 = add i32 %v2_10001b38, 14
  %v4_10001b38 = inttoptr i32 %v3_10001b38 to i16*
  store i16 %v1_10001b38, i16* %v4_10001b38, align 2
  %v0_10001b3c = load i32, i32* %r0.global-to-local, align 4
  %v1_10001b3c = load i32, i32* %r9.global-to-local, align 4
  %v2_10001b3c = add i32 %v1_10001b3c, 4
  %v3_10001b3c = inttoptr i32 %v2_10001b3c to i32*
  store i32 %v0_10001b3c, i32* %v3_10001b3c, align 4
  %v0_10001b40 = load i32, i32* %r10.global-to-local, align 4
  %v1_10001b40 = add i32 %v0_10001b40, 8
  %v2_10001b40 = inttoptr i32 %v1_10001b40 to i32*
  %v3_10001b40 = load i32, i32* %v2_10001b40, align 4
  store i32 %v3_10001b40, i32* %r0.global-to-local, align 4
  %v1_10001b44 = load i32, i32* %r9.global-to-local, align 4
  %v2_10001b44 = add i32 %v1_10001b44, 8
  %v3_10001b44 = inttoptr i32 %v2_10001b44 to i32*
  store i32 %v3_10001b40, i32* %v3_10001b44, align 4
  store i32 268442444, i32* @lr, align 4
  %v0_10001b48 = call i32 @function_100092b8()
  store i32 %v0_10001b48, i32* %r3.global-to-local, align 4
  %v3_10001b4c = load i32, i32* %stack_var_-424, align 4
  store i32 %v3_10001b4c, i32* %r0.global-to-local, align 4
  %v1_10001b50 = load i32, i32* @r29, align 4
  %v2_10001b50 = load i32, i32* %r20.global-to-local, align 4
  %v3_10001b50 = add i32 %v2_10001b50, %v1_10001b50
  %v4_10001b50 = inttoptr i32 %v3_10001b50 to i32*
  store i32 %v0_10001b48, i32* %v4_10001b50, align 4
  %v0_10001b54 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001b54 = mul i32 %v0_10001b54, 4
  store i32 %v1_10001b54, i32* %r0.global-to-local, align 4
  %v0_10001b58 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001b58 = add i32 %v0_10001b58, %v1_10001b54
  %v3_10001b58 = inttoptr i32 %v2_10001b58 to i32*
  %v4_10001b58 = load i32, i32* %v3_10001b58, align 4
  store i32 %v4_10001b58, i32* %r10.global-to-local, align 4
  store i32 %v1_100016a0, i32* %r0.global-to-local, align 4
  %v1_10001b60 = inttoptr i32 %v4_10001b58 to i32*
  %v2_10001b60 = load i32, i32* %v1_10001b60, align 4
  store i32 %v2_10001b60, i32* %r9.global-to-local, align 4
  %v1_10001b64 = add i32 %v4_10001b58, 40
  store i32 %v1_10001b64, i32* @r29, align 4
  store i1 %v3_10001b68, i1* %cr7_eq.global-to-local, align 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_10001b70 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10001b70, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_10001b78 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v1_10001b7c = load i32, i32* %r10.global-to-local, align 4
  %v2_10001b7c = inttoptr i32 %v1_10001b7c to i32*
  store i32 %v1_10001b78, i32* %v2_10001b7c, align 4
  store i32 %v4_10001b84, i32* %r9.global-to-local, align 4
  %v2_10001b88 = load i32, i32* %r10.global-to-local, align 4
  %v3_10001b88 = add i32 %v2_10001b88, 1
  %v4_10001b88 = inttoptr i32 %v3_10001b88 to i8*
  store i8 %v5_10001654, i8* %v4_10001b88, align 1
  %v0_10001b8c = load i32, i32* %r10.global-to-local, align 4
  %v1_10001b8c = add i32 %v0_10001b8c, 20
  store i32 %v1_10001b8c, i32* %r11.global-to-local, align 4
  %v0_10001b90 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001b90 = trunc i32 %v0_10001b90 to i16
  %v3_10001b90 = add i32 %v0_10001b8c, 4
  %v4_10001b90 = inttoptr i32 %v3_10001b90 to i16*
  store i16 %v1_10001b90, i16* %v4_10001b90, align 2
  store i32 %v1_100017fc, i32* %r0.global-to-local, align 4
  store i32 %v4_10001b98, i32* %r9.global-to-local, align 4
  %v2_10001b9c = load i32, i32* %r10.global-to-local, align 4
  %v3_10001b9c = add i32 %v2_10001b9c, 2
  %v4_10001b9c = inttoptr i32 %v3_10001b9c to i16*
  store i16 %v5_10001800, i16* %v4_10001b9c, align 2
  %v0_10001ba0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001ba0 = trunc i32 %v0_10001ba0 to i8
  %v2_10001ba0 = load i32, i32* %r10.global-to-local, align 4
  %v3_10001ba0 = add i32 %v2_10001ba0, 8
  %v4_10001ba0 = inttoptr i32 %v3_10001ba0 to i8*
  store i8 %v1_10001ba0, i8* %v4_10001ba0, align 1
  %v0_10001ba4 = load i32, i32* %r11.global-to-local, align 4
  %v0_10001ba8 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10001ba8, label %dec_label_pc_10001bb4, label %dec_label_pc_10001bac

dec_label_pc_10001bac:                            ; preds = %dec_label_pc_10001b0c
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10001bb0 = load i32, i32* %r10.global-to-local, align 4
  %v3_10001bb0 = add i32 %v2_10001bb0, 6
  %v4_10001bb0 = inttoptr i32 %v3_10001bb0 to i16*
  store i16 16384, i16* %v4_10001bb0, align 2
  br label %dec_label_pc_10001bb4

dec_label_pc_10001bb4:                            ; preds = %dec_label_pc_10001b0c, %dec_label_pc_10001bac
  %v2_10001bbc = load i32, i32* %r10.global-to-local, align 4
  %v3_10001bbc = add i32 %v2_10001bbc, 9
  %v4_10001bbc = inttoptr i32 %v3_10001bbc to i8*
  store i8 6, i8* %v4_10001bbc, align 1
  %v3_10001bc0 = load i32, i32* @global_var_1001b448.12, align 4
  store i32 %v3_10001bc0, i32* %r0.global-to-local, align 4
  %v1_10001bc4 = load i32, i32* %r10.global-to-local, align 4
  %v2_10001bc4 = add i32 %v1_10001bc4, 12
  %v3_10001bc4 = inttoptr i32 %v2_10001bc4 to i32*
  store i32 %v3_10001bc0, i32* %v3_10001bc4, align 4
  %v3_10001bc8 = load i32, i32* %stack_var_-424, align 4
  %v1_10001bcc = mul i32 %v3_10001bc8, 16
  store i32 %v1_10001bcc, i32* %r9.global-to-local, align 4
  %v1_10001bd0 = load i32, i32* %r19.global-to-local, align 4
  %v2_10001bd0 = add i32 %v1_10001bd0, %v1_10001bcc
  %v3_10001bd0 = inttoptr i32 %v2_10001bd0 to i32*
  %v4_10001bd0 = load i32, i32* %v3_10001bd0, align 4
  store i32 %v4_10001bd0, i32* %r0.global-to-local, align 4
  store i32 %v2_10001bd0, i32* %r9.global-to-local, align 4
  %v1_10001bd8 = add i32 %v2_10001bd0, 12
  %v2_10001bd8 = inttoptr i32 %v1_10001bd8 to i16*
  %v3_10001bd8 = load i16, i16* %v2_10001bd8, align 2
  %v4_10001bd8 = zext i16 %v3_10001bd8 to i32
  store i32 %v4_10001bd8, i32* %r11.global-to-local, align 4
  %v1_10001bdc = load i32, i32* %r10.global-to-local, align 4
  %v2_10001bdc = add i32 %v1_10001bdc, 16
  %v3_10001bdc = inttoptr i32 %v2_10001bdc to i32*
  store i32 %v4_10001bd0, i32* %v3_10001bdc, align 4
  %v0_10001be0 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001be0 = trunc i32 %v0_10001be0 to i16
  %v2_10001be0 = load i32, i32* %r10.global-to-local, align 4
  %v3_10001be0 = add i32 %v2_10001be0, 20
  %v4_10001be0 = inttoptr i32 %v3_10001be0 to i16*
  store i16 %v1_10001be0, i16* %v4_10001be0, align 2
  %v0_10001be4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001be4 = add i32 %v0_10001be4, 8
  %v2_10001be4 = inttoptr i32 %v1_10001be4 to i32*
  %v3_10001be4 = load i32, i32* %v2_10001be4, align 4
  store i32 %v3_10001be4, i32* %r0.global-to-local, align 4
  store i32 %v0_10001ba4, i32* %r10.global-to-local, align 4
  %v1_10001bec = add i32 %v0_10001ba4, 12
  %v2_10001bec = inttoptr i32 %v1_10001bec to i32*
  %v3_10001bec = load i32, i32* %v2_10001bec, align 4
  store i32 %v3_10001bec, i32* %r11.global-to-local, align 4
  %v2_10001bf0 = add i32 %v0_10001ba4, 4
  %v3_10001bf0 = inttoptr i32 %v2_10001bf0 to i32*
  store i32 %v3_10001be4, i32* %v3_10001bf0, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_10001bf8 = call i32 @__asm_rlwimi(i32 8, i32 28, i32 0, i32 3)
  store i32 %v1_10001bf8, i32* %r11.global-to-local, align 4
  %v0_10001bfc = load i32, i32* %r9.global-to-local, align 4
  %v1_10001bfc = add i32 %v0_10001bfc, 14
  %v2_10001bfc = inttoptr i32 %v1_10001bfc to i16*
  %v3_10001bfc = load i16, i16* %v2_10001bfc, align 2
  %v4_10001bfc = zext i16 %v3_10001bfc to i32
  store i32 %v4_10001bfc, i32* %r0.global-to-local, align 4
  %v1_10001c00 = add i32 %v0_10001bfc, 4
  %v2_10001c00 = inttoptr i32 %v1_10001c00 to i32*
  %v3_10001c00 = load i32, i32* %v2_10001c00, align 4
  store i32 %v3_10001c00, i32* %r10.global-to-local, align 4
  %v1_10001c04 = or i32 %v1_10001bf8, 1114112
  store i32 %v1_10001c04, i32* %r11.global-to-local, align 4
  store i32 %v0_10001ba4, i32* %r9.global-to-local, align 4
  %v3_10001c0c = add i32 %v0_10001ba4, 2
  %v4_10001c0c = inttoptr i32 %v3_10001c0c to i16*
  store i16 %v3_10001bfc, i16* %v4_10001c0c, align 2
  %v0_10001c10 = load i32, i32* %r10.global-to-local, align 4
  %v1_10001c10 = load i32, i32* %r9.global-to-local, align 4
  %v2_10001c10 = add i32 %v1_10001c10, 8
  %v3_10001c10 = inttoptr i32 %v2_10001c10 to i32*
  store i32 %v0_10001c10, i32* %v3_10001c10, align 4
  %v0_10001c14 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001c14 = load i32, i32* %r9.global-to-local, align 4
  %v2_10001c14 = add i32 %v1_10001c14, 12
  %v3_10001c14 = inttoptr i32 %v2_10001c14 to i32*
  store i32 %v0_10001c14, i32* %v3_10001c14, align 4
  %v0_10001c18 = call i32 @function_10005258()
  %v1_10001c18 = trunc i32 %v0_10001c18 to i16
  store i32 %v0_10001ba4, i32* %r9.global-to-local, align 4
  store i32 %v1_100016d8, i32* %r10.global-to-local, align 4
  %v0_10001c24 = load i32, i32* @r30, align 4
  store i32 %v0_10001c24, i32* @r4, align 4
  %v4_10001c28 = add i32 %v0_10001ba4, 14
  %v5_10001c28 = inttoptr i32 %v4_10001c28 to i16*
  store i16 %v1_10001c18, i16* %v5_10001c28, align 2
  %v0_10001c2c = load i32, i32* @r29, align 4
  store i32 %v0_10001c2c, i32* @r3, align 4
  store i32 %v1_100016f4, i32* %r11.global-to-local, align 4
  %v0_10001c34 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001c34 = add i32 %v0_10001c34, 12
  %v2_10001c34 = inttoptr i32 %v1_10001c34 to i32*
  %v3_10001c34 = load i32, i32* %v2_10001c34, align 4
  store i32 %v3_10001c34, i32* %r0.global-to-local, align 4
  %v1_10001c38 = call i32 @__asm_rlwimi(i32 %v1_100016d8, i32 21, i32 10, i32 10)
  store i32 %v1_10001c38, i32* %r0.global-to-local, align 4
  %v1_10001c3c = call i32 @__asm_rlwimi(i32 %v1_100016f4, i32 20, i32 11, i32 11)
  store i32 %v1_10001c3c, i32* %r0.global-to-local, align 4
  %v1_10001c40 = call i32 @__asm_rlwimi(i32 %v1_10001718, i32 19, i32 12, i32 12)
  store i32 %v1_10001c40, i32* %r0.global-to-local, align 4
  %v1_10001c44 = call i32 @__asm_rlwimi(i32 %v1_10001730, i32 18, i32 13, i32 13)
  store i32 %v1_10001c44, i32* %r0.global-to-local, align 4
  %v1_10001c48 = call i32 @__asm_rlwimi(i32 %v1_10001748, i32 17, i32 14, i32 14)
  store i32 %v1_10001c48, i32* %r0.global-to-local, align 4
  %v1_10001c4c = call i32 @__asm_rlwimi(i32 %v1_10001760, i32 16, i32 15, i32 15)
  store i32 %v1_10001c4c, i32* %r0.global-to-local, align 4
  %v1_10001c50 = load i32, i32* %r9.global-to-local, align 4
  %v2_10001c50 = add i32 %v1_10001c50, 12
  %v3_10001c50 = inttoptr i32 %v2_10001c50 to i32*
  store i32 %v1_10001c4c, i32* %v3_10001c50, align 4
  store i32 ptrtoint (i32* @global_var_10001c58.17 to i32), i32* @lr, align 4
  %v0_10001c54 = call i32 @function_10005318()
  store i32 %v0_10001c54, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10001c5c = load i32, i32* @r29, align 4
  %v2_10001c5c = load i32, i32* @r30, align 4
  %v4_10001c5c = add i32 %v2_10001c5c, %v1_10001c5c
  %v5_10001c5c = inttoptr i32 %v4_10001c5c to i8*
  store i8 0, i8* %v5_10001c5c, align 1
  br label %dec_label_pc_10001924

; uselistorder directives
  uselistorder i32 %v2_10001bd0, { 1, 0, 2 }
  uselistorder i32 %v1_10001bcc, { 1, 0 }
  uselistorder i32 %v0_10001ba4, { 1, 2, 4, 3, 7, 6, 5, 0 }
  uselistorder i32 %v1_10001b54, { 1, 0 }
  uselistorder i32 %v1_10001b1c, { 1, 0 }
  uselistorder i32 %v0_10001afc, { 1, 0, 2 }
  uselistorder i32 %v0_10001aec, { 1, 0 }
  uselistorder i32 %v0_10001ae0, { 1, 0 }
  uselistorder i32 %v2_10001ad4, { 1, 2, 0 }
  uselistorder i32 %v1_10001a04, { 1, 0 }
  uselistorder i32 %v1_100019f4, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v4_100019bc, { 1, 0 }
  uselistorder i32 %v0_10001988, { 1, 0, 2 }
  uselistorder i32 %v2_1000197c, { 1, 0 }
  uselistorder i32 %v1_10001928, { 0, 2, 1, 3 }
  uselistorder i1 %v4_100018d4, { 1, 0 }
  uselistorder i16 %storemerge, { 1, 0 }
  uselistorder i32 %v3_10001ab8, { 1, 3, 0, 2 }
  uselistorder i32 %stack_var_-120.0, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v4_10001b84, { 1, 0 }
  uselistorder i32 %v1_10001a34, { 1, 0 }
  uselistorder i32 %v1_100017fc, { 1, 0, 2, 3 }
  uselistorder i16 %v5_100017e0, { 1, 0 }
  uselistorder i32 %v0_100017d8, { 1, 0 }
  uselistorder i32 %v1_10001760, { 1, 0 }
  uselistorder i32 %v1_10001748, { 1, 0 }
  uselistorder i32 %v1_100016a0, { 1, 0 }
  uselistorder i32* %stack_var_-424, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14 }
  uselistorder i16 %tmp10, { 1, 0 }
  uselistorder i32 %tmp9, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 40, 9, 10, 11, 12, 13, 14, 15, 16, 27, 28, 30, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 0 }
  uselistorder i32* %r26.global-to-local, { 0, 3, 1, 2 }
  uselistorder i32* %r21.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r0.global-to-local, { 7, 0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 32, 27, 28, 29, 30, 31, 33, 36, 37, 39, 38, 40, 41, 42, 43, 34, 35 }
  uselistorder i1* %cr4_eq.global-to-local, { 2, 0, 1, 3, 4 }
  uselistorder i32 1179648, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001bb4, { 1, 0 }
  uselistorder label %dec_label_pc_10001a58, { 1, 3, 0, 2 }
  uselistorder label %dec_label_pc_10001a18, { 1, 0 }
  uselistorder label %dec_label_pc_10001970, { 1, 0 }
  uselistorder label %dec_label_pc_10001938, { 1, 0 }
  uselistorder label %dec_label_pc_10001924, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100018f0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10001824, { 1, 0 }
}

define i32 @function_10001c64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10001c64:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr2_lt.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r7.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_10001c64 = load i32, i32* @lr, align 4
  store i32 %v0_10001c64, i32* %r0.global-to-local, align 4
  %v0_10001c6c = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r20.global-to-local, align 4
  %v0_10001c78 = load i32, i32* @r27, align 4
  store i32 %v0_10001c6c, i32* %r27.global-to-local, align 4
  %v0_10001c80 = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  %v0_10001cbc = load i32, i32* @r24, align 4
  %v0_10001cc0 = load i32, i32* @r25, align 4
  %v0_10001cc4 = load i32, i32* @r26, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10001cd0 = load i32, i32* @r29, align 4
  store i32 %arg5, i32* @r29, align 4
  store i32 268442856, i32* @lr, align 4
  %v2_10001ce4 = call i32 @function_10009410(i32 %arg2, i32 4)
  %v0_10001ce8 = load i32, i32* @r29, align 4
  store i32 %v2_10001ce4, i32* %r21.global-to-local, align 4
  %v0_10001cf8 = load i32, i32* @r28, align 4
  store i32 %v0_10001cf8, i32* %r3.global-to-local, align 4
  store i32 268442880, i32* @lr, align 4
  %v4_10001cfc = inttoptr i32 %v0_10001ce8 to i32*
  %v5_10001cfc = call i32 @function_10000300(i32 %v0_10001cf8, i32* %v4_10001cfc, i32 2, i32 0)
  %v5_10001d0c = trunc i32 %v5_10001cfc to i8
  %v0_10001d14 = load i32, i32* @r29, align 4
  %v0_10001d18 = load i32, i32* @r28, align 4
  store i32 %v0_10001d18, i32* %r3.global-to-local, align 4
  store i32 268442912, i32* @lr, align 4
  %v4_10001d1c = inttoptr i32 %v0_10001d14 to i32*
  %v5_10001d1c = call i32 @function_10000300(i32 %v0_10001d18, i32* %v4_10001d1c, i32 3, i32 65535)
  %v0_10001d20 = load i32, i32* @r29, align 4
  store i32 %v5_10001d1c, i32* %r17.global-to-local, align 4
  %v0_10001d30 = load i32, i32* @r28, align 4
  store i32 %v0_10001d30, i32* %r3.global-to-local, align 4
  store i32 268442936, i32* @lr, align 4
  %v4_10001d34 = inttoptr i32 %v0_10001d20 to i32*
  %v5_10001d34 = call i32 @function_10000300(i32 %v0_10001d30, i32* %v4_10001d34, i32 4, i32 64)
  %v0_10001d38 = load i32, i32* @r29, align 4
  %v5_10001d44 = trunc i32 %v5_10001d34 to i8
  %v0_10001d4c = load i32, i32* @r28, align 4
  store i32 %v0_10001d4c, i32* %r3.global-to-local, align 4
  store i32 268442964, i32* @lr, align 4
  %v4_10001d50 = inttoptr i32 %v0_10001d38 to i32*
  %v5_10001d50 = call i32 @function_10000300(i32 %v0_10001d4c, i32* %v4_10001d50, i32 5, i32 0)
  %v1_10001d58 = urem i32 %v5_10001d50, 256
  %v0_10001d68 = load i32, i32* @r29, align 4
  %v0_10001d6c = load i32, i32* @r28, align 4
  store i32 %v0_10001d6c, i32* %r3.global-to-local, align 4
  store i32 268442996, i32* @lr, align 4
  %v4_10001d70 = inttoptr i32 %v0_10001d68 to i32*
  %v5_10001d70 = call i32 @function_10000300(i32 %v0_10001d6c, i32* %v4_10001d70, i32 6, i32 65535)
  %v0_10001d78 = load i32, i32* @r29, align 4
  store i32 %v5_10001d70, i32* %r18.global-to-local, align 4
  %v0_10001d88 = load i32, i32* @r28, align 4
  store i32 %v0_10001d88, i32* %r3.global-to-local, align 4
  store i32 268443024, i32* @lr, align 4
  %v4_10001d8c = inttoptr i32 %v0_10001d78 to i32*
  %v5_10001d8c = call i32 @function_10000300(i32 %v0_10001d88, i32* %v4_10001d8c, i32 7, i32 65535)
  %v0_10001d94 = load i32, i32* @r29, align 4
  store i32 %v5_10001d8c, i32* %r19.global-to-local, align 4
  %v0_10001da4 = load i32, i32* @r28, align 4
  store i32 %v0_10001da4, i32* %r3.global-to-local, align 4
  store i32 268443052, i32* @lr, align 4
  %v4_10001da8 = inttoptr i32 %v0_10001d94 to i32*
  %v5_10001da8 = call i32 @function_10000300(i32 %v0_10001da4, i32* %v4_10001da8, i32 16, i32 65535)
  %v0_10001db0 = load i32, i32* @r29, align 4
  store i32 %v5_10001da8, i32* %r16.global-to-local, align 4
  %v0_10001dc0 = load i32, i32* @r28, align 4
  store i32 %v0_10001dc0, i32* %r3.global-to-local, align 4
  store i32 268443080, i32* @lr, align 4
  %v4_10001dc4 = inttoptr i32 %v0_10001db0 to i32*
  %v5_10001dc4 = call i32 @function_10000300(i32 %v0_10001dc0, i32* %v4_10001dc4, i32 17, i32 65535)
  %v0_10001dc8 = load i32, i32* @r29, align 4
  store i32 %v5_10001dc4, i32* %r15.global-to-local, align 4
  %v0_10001dd8 = load i32, i32* @r28, align 4
  store i32 %v0_10001dd8, i32* %r3.global-to-local, align 4
  store i32 268443104, i32* @lr, align 4
  %v4_10001ddc = inttoptr i32 %v0_10001dc8 to i32*
  %v5_10001ddc = call i32 @function_10000300(i32 %v0_10001dd8, i32* %v4_10001ddc, i32 10, i32 0)
  %v0_10001de0 = load i32, i32* @r29, align 4
  %v0_10001df0 = load i32, i32* @r28, align 4
  store i32 %v0_10001df0, i32* %r3.global-to-local, align 4
  store i32 268443128, i32* @lr, align 4
  %v4_10001df4 = inttoptr i32 %v0_10001de0 to i32*
  %v5_10001df4 = call i32 @function_10000300(i32 %v0_10001df0, i32* %v4_10001df4, i32 11, i32 1)
  %v0_10001df8 = load i32, i32* @r29, align 4
  store i32 %v5_10001df4, i32* %r14.global-to-local, align 4
  %v0_10001e08 = load i32, i32* @r28, align 4
  store i32 %v0_10001e08, i32* %r3.global-to-local, align 4
  store i32 268443152, i32* @lr, align 4
  %v4_10001e0c = inttoptr i32 %v0_10001df8 to i32*
  %v5_10001e0c = call i32 @function_10000300(i32 %v0_10001e08, i32* %v4_10001e0c, i32 12, i32 0)
  %v0_10001e10 = load i32, i32* @r29, align 4
  store i32 %v5_10001e0c, i32* %r23.global-to-local, align 4
  %v0_10001e20 = load i32, i32* @r28, align 4
  store i32 %v0_10001e20, i32* %r3.global-to-local, align 4
  store i32 268443176, i32* @lr, align 4
  %v4_10001e24 = inttoptr i32 %v0_10001e10 to i32*
  %v5_10001e24 = call i32 @function_10000300(i32 %v0_10001e20, i32* %v4_10001e24, i32 13, i32 0)
  %v0_10001e28 = load i32, i32* @r29, align 4
  store i32 %v5_10001e24, i32* %r24.global-to-local, align 4
  %v0_10001e38 = load i32, i32* @r28, align 4
  store i32 %v0_10001e38, i32* %r3.global-to-local, align 4
  store i32 268443200, i32* @lr, align 4
  %v4_10001e3c = inttoptr i32 %v0_10001e28 to i32*
  %v5_10001e3c = call i32 @function_10000300(i32 %v0_10001e38, i32* %v4_10001e3c, i32 14, i32 0)
  %v0_10001e40 = load i32, i32* @r29, align 4
  store i32 %v5_10001e3c, i32* %r26.global-to-local, align 4
  %v0_10001e50 = load i32, i32* @r28, align 4
  store i32 %v0_10001e50, i32* %r3.global-to-local, align 4
  store i32 268443224, i32* @lr, align 4
  %v4_10001e54 = inttoptr i32 %v0_10001e40 to i32*
  %v5_10001e54 = call i32 @function_10000300(i32 %v0_10001e50, i32* %v4_10001e54, i32 15, i32 0)
  %v0_10001e58 = load i32, i32* @r29, align 4
  store i32 %v5_10001e54, i32* %r25.global-to-local, align 4
  %v0_10001e68 = load i32, i32* @r28, align 4
  store i32 %v0_10001e68, i32* %r3.global-to-local, align 4
  store i32 268443248, i32* @lr, align 4
  %v4_10001e6c = inttoptr i32 %v0_10001e58 to i32*
  %v5_10001e6c = call i32 @function_10000300(i32 %v0_10001e68, i32* %v4_10001e6c, i32 0, i32 512)
  %v0_10001e70 = load i32, i32* @r29, align 4
  store i32 %v5_10001e6c, i32* @r30, align 4
  %v0_10001e80 = load i32, i32* @r28, align 4
  store i32 %v0_10001e80, i32* %r3.global-to-local, align 4
  store i32 268443272, i32* @lr, align 4
  %v4_10001e84 = inttoptr i32 %v0_10001e70 to i32*
  %v5_10001e84 = call i32 @function_10000300(i32 %v0_10001e80, i32* %v4_10001e84, i32 1, i32 1)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10001e8c = load i32, i32* @global_var_1001b448.12, align 4
  %v1_10001e90 = urem i32 %v5_10001e84, 256
  %v0_10001e94 = load i32, i32* @r29, align 4
  %v0_10001ea0 = load i32, i32* @r28, align 4
  store i32 %v0_10001ea0, i32* %r3.global-to-local, align 4
  store i32 268443304, i32* @lr, align 4
  %v5_10001ea4 = inttoptr i32 %v0_10001e94 to i32*
  %v6_10001ea4 = call i32 @function_10000280(i32 %v0_10001ea0, i32* %v5_10001ea4, i32 19, i32 %v3_10001e8c, i32 268566528)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268443316, i32* @lr, align 4
  %v0_10001eb0 = call i32 @function_1000879c()
  %v1_10001eb8 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001eb8 = add i32 %v1_10001eb8, %v0_10001eb0
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268443340, i32* @lr, align 4
  %v3_10001ec8 = call i32 @function_100090b4(i32 2, i32 3, i32 6)
  store i32 %v3_10001ec8, i32* %r3.global-to-local, align 4
  %v3_10001ecc = icmp eq i32 %v3_10001ec8, -1
  store i32 %v3_10001ec8, i32* %r22.global-to-local, align 4
  br i1 %v3_10001ecc, label %dec_label_pc_10002164, label %dec_label_pc_10001ed8

dec_label_pc_10001ed8:                            ; preds = %dec_label_pc_10001c64
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10001ee4 = ptrtoint i32* %stack_var_-136 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-136, align 4
  store i32 268443380, i32* @lr, align 4
  %v4_10001ef0 = call i32 @function_10009078(i32 0, i32 3, i32 %v2_10001ee4, i32 4)
  store i32 %v4_10001ef0, i32* %r3.global-to-local, align 4
  %v3_10001ef4 = icmp eq i32 %v4_10001ef0, -1
  br i1 %v3_10001ef4, label %dec_label_pc_1000226c, label %dec_label_pc_10001efc

dec_label_pc_10001efc:                            ; preds = %dec_label_pc_10001ed8
  %v0_10001efc = load i32, i32* %r20.global-to-local, align 4
  %v1_10001efc = icmp slt i32 %v0_10001efc, 0
  %v3_10001efc = icmp eq i32 %v0_10001efc, 0
  store i1 %v1_10001efc, i1* %cr2_lt.global-to-local, align 1
  store i1 %v3_10001efc, i1* %cr2_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  %v0_10001f08 = load i32, i32* %r17.global-to-local, align 4
  %v1_10001f08 = urem i32 %v0_10001f08, 65536
  store i32 %v1_10001f08, i32* %r17.global-to-local, align 4
  %v0_10001f0c = load i32, i32* %r18.global-to-local, align 4
  %v1_10001f0c = urem i32 %v0_10001f0c, 65536
  store i32 %v1_10001f0c, i32* %r18.global-to-local, align 4
  %v0_10001f10 = load i32, i32* %r19.global-to-local, align 4
  %v1_10001f10 = urem i32 %v0_10001f10, 65536
  store i32 %v1_10001f10, i32* %r19.global-to-local, align 4
  %tmp39 = icmp slt i32 %v0_10001efc, 1
  br i1 %tmp39, label %dec_label_pc_10002058.preheader, label %dec_label_pc_10001f18

dec_label_pc_10001f18:                            ; preds = %dec_label_pc_10001efc
  %v0_10001f1c = load i32, i32* %r23.global-to-local, align 4
  %v1_10001f1c = urem i32 %v0_10001f1c, 256
  store i32 %v1_10001f1c, i32* %r0.global-to-local, align 4
  %v3_10001f24 = icmp eq i32 %v1_10001f1c, 0
  store i1 %v3_10001f24, i1* %cr4_eq.global-to-local, align 1
  %v1_10001f28 = urem i32 %v5_10001ddc, 2
  %v0_10001f2c = load i32, i32* %r25.global-to-local, align 4
  %v1_10001f2c = urem i32 %v0_10001f2c, 2
  %v0_10001f34 = load i32, i32* %r14.global-to-local, align 4
  %v1_10001f34 = urem i32 %v0_10001f34, 2
  store i32 %v1_10001f34, i32* %r11.global-to-local, align 4
  %v3_10001f38 = icmp eq i32 %v1_10001d58, 0
  store i1 %v3_10001f38, i1* %cr3_eq.global-to-local, align 1
  %v0_10001f40 = load i32, i32* @r30, align 4
  %v1_10001f40 = add i32 %v0_10001f40, 40
  store i32 %v1_10001f40, i32* %r9.global-to-local, align 4
  %v0_10001f44 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001f44 = urem i32 %v0_10001f44, 2
  store i32 %v1_10001f44, i32* %r14.global-to-local, align 4
  %v0_10001f48 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001f48 = urem i32 %v0_10001f48, 2
  %v1_10001f4c = urem i32 %v0_10001f1c, 2
  %v1_10001f50 = urem i32 %v1_10001f40, 65536
  store i32 %v1_10001f50, i32* @r24, align 4
  store i32 0, i32* @r29, align 4
  store i32 5, i32* %r23.global-to-local, align 4
  %v4_10001fa0 = sext i8 %v5_10001d44 to i32
  %v4_10001fa8 = sext i8 %v5_10001d0c to i32
  br label %dec_label_pc_10001f5c

dec_label_pc_10001f5c:                            ; preds = %dec_label_pc_10002038, %dec_label_pc_10001f18
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268443496, i32* @lr, align 4
  %v2_10001f64 = call i32 @function_10009410(i32 1510, i32 1)
  store i32 %v2_10001f64, i32* %r3.global-to-local, align 4
  %v3_10001f68 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10001f68, i32* %r9.global-to-local, align 4
  %v0_10001f6c = load i32, i32* @r29, align 4
  %v1_10001f6c = mul i32 %v0_10001f6c, 4
  store i32 %v1_10001f6c, i32* %r0.global-to-local, align 4
  %v1_10001f70 = load i32, i32* %r21.global-to-local, align 4
  %v3_10001f70 = add i32 %v1_10001f70, %v1_10001f6c
  %v4_10001f70 = inttoptr i32 %v3_10001f70 to i32*
  store i32 %v2_10001f64, i32* %v4_10001f70, align 4
  %v0_10001f74 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001f74 = mul i32 %v0_10001f74, 4
  store i32 %v1_10001f74, i32* %r9.global-to-local, align 4
  %v1_10001f78 = load i32, i32* %r21.global-to-local, align 4
  %v2_10001f78 = add i32 %v1_10001f78, %v1_10001f74
  %v3_10001f78 = inttoptr i32 %v2_10001f78 to i32*
  %v4_10001f78 = load i32, i32* %v3_10001f78, align 4
  store i32 %v4_10001f78, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10001f80 = inttoptr i32 %v4_10001f78 to i32*
  %v2_10001f80 = load i32, i32* %v1_10001f80, align 4
  store i32 %v2_10001f80, i32* %r0.global-to-local, align 4
  %v1_10001f84 = add i32 %v4_10001f78, 20
  store i32 %v1_10001f84, i32* @r29, align 4
  %v0_10001f88 = load i32, i32* %r17.global-to-local, align 4
  %v1_10001f88 = trunc i32 %v0_10001f88 to i16
  %v3_10001f88 = add i32 %v4_10001f78, 4
  %v4_10001f88 = inttoptr i32 %v3_10001f88 to i16*
  store i16 %v1_10001f88, i16* %v4_10001f88, align 2
  %v0_10001f8c = load i32, i32* %r11.global-to-local, align 4
  %v1_10001f8c = add i32 %v0_10001f8c, 40
  store i32 %v1_10001f8c, i32* @r28, align 4
  %v1_10001f90 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10001f90, i32* %r0.global-to-local, align 4
  %v1_10001f94 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v2_10001f98 = inttoptr i32 %v0_10001f8c to i32*
  store i32 %v1_10001f94, i32* %v2_10001f98, align 4
  %v0_10001f9c = load i32, i32* @r24, align 4
  %v1_10001f9c = trunc i32 %v0_10001f9c to i16
  %v2_10001f9c = load i32, i32* %r11.global-to-local, align 4
  %v3_10001f9c = add i32 %v2_10001f9c, 2
  %v4_10001f9c = inttoptr i32 %v3_10001f9c to i16*
  store i16 %v1_10001f9c, i16* %v4_10001f9c, align 2
  store i32 %v4_10001fa0, i32* %r0.global-to-local, align 4
  %v2_10001fa4 = load i32, i32* %r11.global-to-local, align 4
  %v3_10001fa4 = add i32 %v2_10001fa4, 8
  %v4_10001fa4 = inttoptr i32 %v3_10001fa4 to i8*
  store i8 %v5_10001d44, i8* %v4_10001fa4, align 1
  store i32 %v4_10001fa8, i32* %r9.global-to-local, align 4
  %v2_10001fac = load i32, i32* %r11.global-to-local, align 4
  %v3_10001fac = add i32 %v2_10001fac, 1
  %v4_10001fac = inttoptr i32 %v3_10001fac to i8*
  store i8 %v5_10001d0c, i8* %v4_10001fac, align 1
  %v0_10001fb0 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001fb0, label %dec_label_pc_10001fbc, label %dec_label_pc_10001fb4

dec_label_pc_10001fb4:                            ; preds = %dec_label_pc_10001f5c
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10001fb8 = load i32, i32* %r11.global-to-local, align 4
  %v3_10001fb8 = add i32 %v2_10001fb8, 6
  %v4_10001fb8 = inttoptr i32 %v3_10001fb8 to i16*
  store i16 16384, i16* %v4_10001fb8, align 2
  br label %dec_label_pc_10001fbc

dec_label_pc_10001fbc:                            ; preds = %dec_label_pc_10001f5c, %dec_label_pc_10001fb4
  store i32 6, i32* %r0.global-to-local, align 4
  %v0_10001fc0 = load i32, i32* %r18.global-to-local, align 4
  %v1_10001fc0 = trunc i32 %v0_10001fc0 to i16
  %v2_10001fc0 = load i32, i32* %r11.global-to-local, align 4
  %v3_10001fc0 = add i32 %v2_10001fc0, 20
  %v4_10001fc0 = inttoptr i32 %v3_10001fc0 to i16*
  store i16 %v1_10001fc0, i16* %v4_10001fc0, align 2
  %v0_10001fc4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001fc4 = trunc i32 %v0_10001fc4 to i8
  %v2_10001fc4 = load i32, i32* %r11.global-to-local, align 4
  %v3_10001fc4 = add i32 %v2_10001fc4, 9
  %v4_10001fc4 = inttoptr i32 %v3_10001fc4 to i8*
  store i8 %v1_10001fc4, i8* %v4_10001fc4, align 1
  %v0_10001fc8 = load i32, i32* %r19.global-to-local, align 4
  %v1_10001fc8 = trunc i32 %v0_10001fc8 to i16
  %v2_10001fc8 = load i32, i32* @r29, align 4
  %v3_10001fc8 = add i32 %v2_10001fc8, 2
  %v4_10001fc8 = inttoptr i32 %v3_10001fc8 to i16*
  store i16 %v1_10001fc8, i16* %v4_10001fc8, align 2
  store i32 %v6_10001ea4, i32* %r0.global-to-local, align 4
  %v1_10001fd0 = load i32, i32* %r11.global-to-local, align 4
  %v2_10001fd0 = add i32 %v1_10001fd0, 12
  %v3_10001fd0 = inttoptr i32 %v2_10001fd0 to i32*
  store i32 %v6_10001ea4, i32* %v3_10001fd0, align 4
  %v3_10001fd4 = load i32, i32* %stack_var_-136, align 4
  %v1_10001fd8 = mul i32 %v3_10001fd4, 24
  %v1_10001fdc = load i32, i32* @r31, align 4
  %v2_10001fdc = add i32 %v1_10001fdc, %v1_10001fd8
  store i32 %v2_10001fdc, i32* %r9.global-to-local, align 4
  %v1_10001fe0 = add i32 %v2_10001fdc, 16
  %v2_10001fe0 = inttoptr i32 %v1_10001fe0 to i32*
  %v3_10001fe0 = load i32, i32* %v2_10001fe0, align 4
  store i32 %v3_10001fe0, i32* %r0.global-to-local, align 4
  store i32 %v1_10001f28, i32* %r9.global-to-local, align 4
  %v1_10001fe8 = load i32, i32* %r11.global-to-local, align 4
  %v2_10001fe8 = add i32 %v1_10001fe8, 16
  %v3_10001fe8 = inttoptr i32 %v2_10001fe8 to i32*
  store i32 %v3_10001fe0, i32* %v3_10001fe8, align 4
  store i32 %v1_10001f34, i32* %r11.global-to-local, align 4
  %v0_10001ff0 = load i32, i32* @r29, align 4
  %v1_10001ff0 = add i32 %v0_10001ff0, 12
  %v2_10001ff0 = inttoptr i32 %v1_10001ff0 to i32*
  %v3_10001ff0 = load i32, i32* %v2_10001ff0, align 4
  store i32 %v3_10001ff0, i32* %r0.global-to-local, align 4
  %v0_10001ff4 = load i32, i32* %r16.global-to-local, align 4
  %v2_10001ff4 = add i32 %v0_10001ff0, 4
  %v3_10001ff4 = inttoptr i32 %v2_10001ff4 to i32*
  store i32 %v0_10001ff4, i32* %v3_10001ff4, align 4
  %v1_10001ff8 = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_10001ff8, i32* %r0.global-to-local, align 4
  %v1_10001ffc = call i32 @__asm_rlwimi(i32 %v1_10001f28, i32 21, i32 10, i32 10)
  store i32 %v1_10001ffc, i32* %r0.global-to-local, align 4
  %v1_10002000 = call i32 @__asm_rlwimi(i32 %v1_10001f34, i32 20, i32 11, i32 11)
  store i32 %v1_10002000, i32* %r0.global-to-local, align 4
  %v1_10002004 = call i32 @__asm_rlwimi(i32 %v1_10001f4c, i32 19, i32 12, i32 12)
  store i32 %v1_10002004, i32* %r0.global-to-local, align 4
  %v1_10002008 = call i32 @__asm_rlwimi(i32 %v1_10001f44, i32 18, i32 13, i32 13)
  store i32 %v1_10002008, i32* %r0.global-to-local, align 4
  %v1_1000200c = call i32 @__asm_rlwimi(i32 %v1_10001f48, i32 17, i32 14, i32 14)
  store i32 %v1_1000200c, i32* %r0.global-to-local, align 4
  %v1_10002010 = call i32 @__asm_rlwimi(i32 %v1_10001f2c, i32 16, i32 15, i32 15)
  store i32 %v1_10002010, i32* %r0.global-to-local, align 4
  %v1_10002014 = load i32, i32* @r29, align 4
  %v2_10002014 = add i32 %v1_10002014, 12
  %v3_10002014 = inttoptr i32 %v2_10002014 to i32*
  store i32 %v1_10002010, i32* %v3_10002014, align 4
  %v0_10002018 = call i32 @function_10005258()
  %v1_10002018 = trunc i32 %v0_10002018 to i16
  %v0_1000201c = load i32, i32* @r30, align 4
  store i32 %v0_1000201c, i32* @r4, align 4
  %v3_10002020 = load i32, i32* @r29, align 4
  %v4_10002020 = add i32 %v3_10002020, 14
  %v5_10002020 = inttoptr i32 %v4_10002020 to i16*
  store i16 %v1_10002018, i16* %v5_10002020, align 2
  %v0_10002024 = load i32, i32* @r28, align 4
  store i32 %v0_10002024, i32* @r3, align 4
  %v0_10002028 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10002028, label %dec_label_pc_10002038, label %dec_label_pc_1000202c

dec_label_pc_1000202c:                            ; preds = %dec_label_pc_10001fbc
  %v0_1000202c = load i32, i32* @r29, align 4
  %v1_1000202c = add i32 %v0_1000202c, 12
  %v2_1000202c = inttoptr i32 %v1_1000202c to i32*
  %v3_1000202c = load i32, i32* %v2_1000202c, align 4
  %v1_10002030 = or i32 %v3_1000202c, 524288
  store i32 %v1_10002030, i32* %r0.global-to-local, align 4
  store i32 %v1_10002030, i32* %v2_1000202c, align 4
  br label %dec_label_pc_10002038

dec_label_pc_10002038:                            ; preds = %dec_label_pc_10001fbc, %dec_label_pc_1000202c
  store i32 ptrtoint (i32* @global_var_1000203c.18 to i32), i32* @lr, align 4
  %v0_10002038 = call i32 @function_10005318()
  store i32 %v0_10002038, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10002040 = load i32, i32* @r28, align 4
  %v2_10002040 = load i32, i32* @r30, align 4
  %v4_10002040 = add i32 %v2_10002040, %v1_10002040
  %v5_10002040 = inttoptr i32 %v4_10002040 to i8*
  store i8 0, i8* %v5_10002040, align 1
  %v3_10002044 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10002044, i32* %r9.global-to-local, align 4
  %v1_10002048 = add i32 %v3_10002044, 1
  store i32 %v1_10002048, i32* @r29, align 4
  %v1_1000204c = load i32, i32* %r20.global-to-local, align 4
  %v2_1000204c = icmp slt i32 %v1_10002048, %v1_1000204c
  store i32 %v1_10002048, i32* %stack_var_-136, align 4
  br i1 %v2_1000204c, label %dec_label_pc_10001f5c, label %dec_label_pc_10002058.preheader

dec_label_pc_10002058.preheader:                  ; preds = %dec_label_pc_10002038, %dec_label_pc_10001efc
  %v3_10002074 = icmp eq i32 %v6_10001ea4, -1
  %v3_1000207c = icmp eq i32 %v1_10001e90, 0
  br label %dec_label_pc_10002058

dec_label_pc_10002058:                            ; preds = %dec_label_pc_10002058.preheader, %dec_label_pc_10002150
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  %v0_10002060 = load i1, i1* %cr2_eq.global-to-local, align 1
  %v1_10002060 = load i1, i1* %cr2_lt.global-to-local, align 1
  %v2_10002060 = or i1 %v0_10002060, %v1_10002060
  br i1 %v2_10002060, label %dec_label_pc_10002150, label %dec_label_pc_10002064

dec_label_pc_10002064:                            ; preds = %dec_label_pc_10002058
  store i32 %v6_10001ea4, i32* %r0.global-to-local, align 4
  %v0_10002068 = load i32, i32* @r30, align 4
  %v1_10002068 = add i32 %v0_10002068, 20
  store i32 %v1_10002068, i32* @r26, align 4
  %v1_10002070 = urem i32 %v1_10002068, 65536
  store i32 %v1_10002070, i32* @r24, align 4
  store i1 %v3_10002074, i1* %cr3_eq.global-to-local, align 1
  %v1_10002078 = add i32 %v0_10002068, 40
  store i32 %v1_10002078, i32* @r25, align 4
  store i1 %v3_1000207c, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r23.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10002088

dec_label_pc_10002088:                            ; preds = %dec_label_pc_100020e0, %dec_label_pc_10002064
  %v0_10002088 = phi i32 [ %v1_10002140, %dec_label_pc_100020e0 ], [ 0, %dec_label_pc_10002064 ]
  %v1_10002088 = mul i32 %v0_10002088, 24
  store i32 %v1_10002088, i32* %r0.global-to-local, align 4
  %v1_1000208c = mul i32 %v0_10002088, 4
  store i32 %v1_1000208c, i32* %r11.global-to-local, align 4
  %v1_10002090 = load i32, i32* %r21.global-to-local, align 4
  %v2_10002090 = add i32 %v1_10002090, %v1_1000208c
  %v3_10002090 = inttoptr i32 %v2_10002090 to i32*
  %v4_10002090 = load i32, i32* %v3_10002090, align 4
  store i32 %v4_10002090, i32* @r28, align 4
  %v1_10002094 = load i32, i32* @r31, align 4
  %v2_10002094 = add i32 %v1_10002094, %v1_10002088
  %v1_10002098 = add i32 %v2_10002094, 20
  %v2_10002098 = inttoptr i32 %v1_10002098 to i8*
  %v3_10002098 = load i8, i8* %v2_10002098, align 1
  %v4_10002098 = zext i8 %v3_10002098 to i32
  store i32 %v4_10002098, i32* %r9.global-to-local, align 4
  %v1_1000209c = add i32 %v4_10002090, 20
  store i32 %v1_1000209c, i32* @r27, align 4
  %tmp40 = icmp ult i8 %v3_10002098, 32
  br i1 %tmp40, label %dec_label_pc_100021c4, label %dec_label_pc_100020a8

dec_label_pc_100020a8:                            ; preds = %dec_label_pc_10002088
  %v0_100020a8 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100020a8, label %dec_label_pc_100021ec, label %dec_label_pc_100020ac

dec_label_pc_100020ac:                            ; preds = %dec_label_pc_100021c4, %dec_label_pc_100020a8
  store i32 65535, i32* %r29.global-to-local, align 4
  %v0_100020b4 = load i32, i32* %r17.global-to-local, align 4
  %v4_100020b4 = icmp eq i32 %v0_100020b4, 65535
  br i1 %v4_100020b4, label %dec_label_pc_10002204, label %dec_label_pc_100020bc

dec_label_pc_100020bc:                            ; preds = %dec_label_pc_100021ec, %dec_label_pc_100020ac
  %v1_100020bc = phi i32 [ %v1_100021fc, %dec_label_pc_100021ec ], [ 65535, %dec_label_pc_100020ac ]
  %v0_100020bc = load i32, i32* %r18.global-to-local, align 4
  %v4_100020bc = icmp eq i32 %v0_100020bc, %v1_100020bc
  br i1 %v4_100020bc, label %dec_label_pc_10002214, label %dec_label_pc_100020c4

dec_label_pc_100020c4:                            ; preds = %dec_label_pc_10002204.dec_label_pc_100020c4_crit_edge, %dec_label_pc_100020bc
  %v1_100020c4 = phi i32 [ %v1_100020c4.pre, %dec_label_pc_10002204.dec_label_pc_100020c4_crit_edge ], [ %v1_100020bc, %dec_label_pc_100020bc ]
  %v0_100020c4 = load i32, i32* %r19.global-to-local, align 4
  %v4_100020c4 = icmp eq i32 %v0_100020c4, %v1_100020c4
  br i1 %v4_100020c4, label %dec_label_pc_10002224, label %dec_label_pc_100020cc

dec_label_pc_100020cc:                            ; preds = %dec_label_pc_10002214.dec_label_pc_100020cc_crit_edge, %dec_label_pc_100020c4
  %v1_100020cc = phi i32 [ %v1_100020cc.pre, %dec_label_pc_10002214.dec_label_pc_100020cc_crit_edge ], [ %v1_100020c4, %dec_label_pc_100020c4 ]
  %v0_100020cc = load i32, i32* %r16.global-to-local, align 4
  %v4_100020cc = icmp eq i32 %v0_100020cc, %v1_100020cc
  br i1 %v4_100020cc, label %dec_label_pc_10002234, label %dec_label_pc_100020d4

dec_label_pc_100020d4:                            ; preds = %dec_label_pc_10002224.dec_label_pc_100020d4_crit_edge, %dec_label_pc_100020cc
  %v1_100020d4 = phi i32 [ %v1_100020d4.pre, %dec_label_pc_10002224.dec_label_pc_100020d4_crit_edge ], [ %v1_100020cc, %dec_label_pc_100020cc ]
  %v0_100020d4 = load i32, i32* %r15.global-to-local, align 4
  %v4_100020d4 = icmp eq i32 %v0_100020d4, %v1_100020d4
  br i1 %v4_100020d4, label %dec_label_pc_10002244, label %dec_label_pc_100020dc

dec_label_pc_100020dc:                            ; preds = %dec_label_pc_10002234, %dec_label_pc_100020d4
  %v0_100020dc = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_100020dc, label %dec_label_pc_100020e0, label %dec_label_pc_10002250

dec_label_pc_100020e0:                            ; preds = %dec_label_pc_100020dc, %dec_label_pc_10002244, %dec_label_pc_10002250
  %v0_100020e0 = load i32, i32* %r23.global-to-local, align 4
  %v1_100020e0 = trunc i32 %v0_100020e0 to i16
  %v2_100020e0 = load i32, i32* @r28, align 4
  %v3_100020e0 = add i32 %v2_100020e0, 10
  %v4_100020e0 = inttoptr i32 %v3_100020e0 to i16*
  store i16 %v1_100020e0, i16* %v4_100020e0, align 2
  %v0_100020e8 = load i32, i32* @r28, align 4
  store i32 %v0_100020e8, i32* @r3, align 4
  %v2_100020ec = call i32 @function_10003ca8(i32 %v0_100020e8, i32 20)
  %v3_100020ec = trunc i32 %v2_100020ec to i16
  %v0_100020f0 = load i32, i32* @r27, align 4
  store i32 %v0_100020f0, i32* @r4, align 4
  %v3_100020f4 = load i32, i32* @r28, align 4
  %v4_100020f4 = add i32 %v3_100020f4, 10
  %v5_100020f4 = inttoptr i32 %v4_100020f4 to i16*
  store i16 %v3_100020ec, i16* %v5_100020f4, align 2
  %v0_100020f8 = load i32, i32* @r24, align 4
  %v0_100020fc = load i32, i32* %r23.global-to-local, align 4
  %v1_100020fc = trunc i32 %v0_100020fc to i16
  %v2_100020fc = load i32, i32* @r27, align 4
  %v3_100020fc = add i32 %v2_100020fc, 16
  %v4_100020fc = inttoptr i32 %v3_100020fc to i16*
  store i16 %v1_100020fc, i16* %v4_100020fc, align 2
  %v0_10002100 = load i32, i32* @r26, align 4
  %v0_10002104 = load i32, i32* @r28, align 4
  store i32 %v0_10002104, i32* %r3.global-to-local, align 4
  %v4_10002108 = call i32 @function_10003d0c(i32 %v0_10002104, i32 %v0_100020f0, i32 %v0_100020f8, i32 %v0_10002100)
  %v5_10002108 = trunc i32 %v4_10002108 to i16
  store i32 %v4_10002108, i32* %r3.global-to-local, align 4
  %v3_1000210c = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_1000210c, i32* %r7.global-to-local, align 4
  %v0_10002110 = load i32, i32* @r27, align 4
  %v1_10002110 = add i32 %v0_10002110, 2
  %v2_10002110 = inttoptr i32 %v1_10002110 to i16*
  %v3_10002110 = load i16, i16* %v2_10002110, align 2
  %v4_10002110 = zext i16 %v3_10002110 to i32
  store i32 %v4_10002110, i32* %r0.global-to-local, align 4
  %v0_10002114 = load i32, i32* @r28, align 4
  %v1_10002118 = mul i32 %v3_1000210c, 24
  store i32 %v1_10002118, i32* %r7.global-to-local, align 4
  %v4_1000211c = add i32 %v0_10002110, 16
  %v5_1000211c = inttoptr i32 %v4_1000211c to i16*
  store i16 %v5_10002108, i16* %v5_1000211c, align 2
  %v0_10002120 = load i32, i32* @r25, align 4
  %v0_10002124 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10002124, i32* %r3.global-to-local, align 4
  %v0_10002128 = load i32, i32* %r7.global-to-local, align 4
  %v1_10002128 = load i32, i32* @r31, align 4
  %v2_10002128 = add i32 %v1_10002128, %v0_10002128
  store i32 %v2_10002128, i32* %r7.global-to-local, align 4
  %v0_10002130 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002130 = trunc i32 %v0_10002130 to i16
  %v3_10002130 = add i32 %v2_10002128, 2
  %v4_10002130 = inttoptr i32 %v3_10002130 to i16*
  store i16 %v1_10002130, i16* %v4_10002130, align 2
  store i32 268443964, i32* @lr, align 4
  %v6_10002138 = call i32 @function_10009038(i32 %v0_10002124, i32 %v0_10002114, i32 %v0_10002120, i32 16384, i32 %v2_10002128, i32 16)
  store i32 %v6_10002138, i32* %r3.global-to-local, align 4
  %v3_1000213c = load i32, i32* %stack_var_-136, align 4
  %v1_10002140 = add i32 %v3_1000213c, 1
  store i32 %v1_10002140, i32* %r9.global-to-local, align 4
  %v1_10002144 = load i32, i32* %r20.global-to-local, align 4
  %v2_10002144 = icmp slt i32 %v1_10002140, %v1_10002144
  store i32 %v1_10002140, i32* %stack_var_-136, align 4
  br i1 %v2_10002144, label %dec_label_pc_10002088, label %dec_label_pc_10002150

dec_label_pc_10002150:                            ; preds = %dec_label_pc_100020e0, %dec_label_pc_10002058
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268443992, i32* @lr, align 4
  %v0_10002154 = call i32 @function_1000879c()
  store i32 %v0_10002154, i32* %r3.global-to-local, align 4
  store i32 %v2_10001eb8, i32* %r0.global-to-local, align 4
  %v2_1000215c = icmp slt i32 %v2_10001eb8, %v0_10002154
  br i1 %v2_1000215c, label %dec_label_pc_10002164, label %dec_label_pc_10002058

dec_label_pc_10002164:                            ; preds = %dec_label_pc_10002150, %dec_label_pc_10001c64, %dec_label_pc_1000226c
  store i32 %v0_10001c80, i32* %r0.global-to-local, align 4
  %v1_10002178 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10001c6c)
  store i32 %v0_10001cbc, i32* %r24.global-to-local, align 4
  store i32 %v0_10001cc0, i32* %r25.global-to-local, align 4
  store i32 %v0_10001cc4, i32* %r26.global-to-local, align 4
  store i32 %v0_10001c78, i32* %r27.global-to-local, align 4
  store i32 %v0_10001cd0, i32* %r29.global-to-local, align 4
  %v0_100021c0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100021c0

dec_label_pc_100021c4:                            ; preds = %dec_label_pc_10002088
  %v1_100021c4 = add i32 %v2_10002094, 16
  %v2_100021c4 = inttoptr i32 %v1_100021c4 to i32*
  %v3_100021c4 = load i32, i32* %v2_100021c4, align 4
  store i32 %v3_100021c4, i32* %r29.global-to-local, align 4
  %v0_100021c8 = call i32 @function_10005258()
  store i32 %v0_100021c8, i32* %r3.global-to-local, align 4
  %v3_100021cc = load i32, i32* %stack_var_-136, align 4
  %v1_100021d0 = mul i32 %v3_100021cc, 24
  %v1_100021d4 = load i32, i32* @r31, align 4
  %v2_100021d4 = add i32 %v1_100021d4, %v1_100021d0
  store i32 %v2_100021d4, i32* %r9.global-to-local, align 4
  %v1_100021d8 = add i32 %v2_100021d4, 20
  %v2_100021d8 = inttoptr i32 %v1_100021d8 to i8*
  %v3_100021d8 = load i8, i8* %v2_100021d8, align 1
  %v4_100021d8 = zext i8 %v3_100021d8 to i32
  store i32 %v4_100021d8, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_100021d8, 64
  %v2_100021dc = zext i8 %tmp to i32
  %v3_100021dc = lshr i32 %v0_100021c8, %v2_100021dc
  store i32 %v3_100021dc, i32* %r3.global-to-local, align 4
  %v0_100021e0 = load i32, i32* %r29.global-to-local, align 4
  %v2_100021e0 = add i32 %v3_100021dc, %v0_100021e0
  store i32 %v2_100021e0, i32* %r29.global-to-local, align 4
  %v1_100021e4 = load i32, i32* @r28, align 4
  %v2_100021e4 = add i32 %v1_100021e4, 16
  %v3_100021e4 = inttoptr i32 %v2_100021e4 to i32*
  store i32 %v2_100021e0, i32* %v3_100021e4, align 4
  %v0_100021e8 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100021e8, label %dec_label_pc_100021ec, label %dec_label_pc_100020ac

dec_label_pc_100021ec:                            ; preds = %dec_label_pc_100021c4, %dec_label_pc_100020a8
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_100021f0 = call i32 @function_10005258()
  store i32 %v0_100021f0, i32* %r3.global-to-local, align 4
  store i32 65535, i32* %r29.global-to-local, align 4
  %v1_100021f8 = load i32, i32* @r28, align 4
  %v2_100021f8 = add i32 %v1_100021f8, 12
  %v3_100021f8 = inttoptr i32 %v2_100021f8 to i32*
  store i32 %v0_100021f0, i32* %v3_100021f8, align 4
  %v0_100021fc = load i32, i32* %r17.global-to-local, align 4
  %v1_100021fc = load i32, i32* %r29.global-to-local, align 4
  %v4_100021fc = icmp eq i32 %v0_100021fc, %v1_100021fc
  br i1 %v4_100021fc, label %dec_label_pc_10002204, label %dec_label_pc_100020bc

dec_label_pc_10002204:                            ; preds = %dec_label_pc_100021ec, %dec_label_pc_100020ac
  %v0_10002204 = call i32 @function_10005258()
  %v1_10002204 = trunc i32 %v0_10002204 to i16
  store i32 %v0_10002204, i32* %r3.global-to-local, align 4
  %v0_10002208 = load i32, i32* %r18.global-to-local, align 4
  %v1_10002208 = load i32, i32* %r29.global-to-local, align 4
  %v4_10002208 = icmp eq i32 %v0_10002208, %v1_10002208
  %v3_1000220c = load i32, i32* @r28, align 4
  %v4_1000220c = add i32 %v3_1000220c, 4
  %v5_1000220c = inttoptr i32 %v4_1000220c to i16*
  store i16 %v1_10002204, i16* %v5_1000220c, align 2
  br i1 %v4_10002208, label %dec_label_pc_10002214, label %dec_label_pc_10002204.dec_label_pc_100020c4_crit_edge

dec_label_pc_10002204.dec_label_pc_100020c4_crit_edge: ; preds = %dec_label_pc_10002204
  %v1_100020c4.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100020c4

dec_label_pc_10002214:                            ; preds = %dec_label_pc_10002204, %dec_label_pc_100020bc
  %v0_10002214 = call i32 @function_10005258()
  %v1_10002214 = trunc i32 %v0_10002214 to i16
  store i32 %v0_10002214, i32* %r3.global-to-local, align 4
  %v0_10002218 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002218 = load i32, i32* %r29.global-to-local, align 4
  %v4_10002218 = icmp eq i32 %v0_10002218, %v1_10002218
  %v3_1000221c = load i32, i32* @r28, align 4
  %v4_1000221c = add i32 %v3_1000221c, 20
  %v5_1000221c = inttoptr i32 %v4_1000221c to i16*
  store i16 %v1_10002214, i16* %v5_1000221c, align 2
  br i1 %v4_10002218, label %dec_label_pc_10002224, label %dec_label_pc_10002214.dec_label_pc_100020cc_crit_edge

dec_label_pc_10002214.dec_label_pc_100020cc_crit_edge: ; preds = %dec_label_pc_10002214
  %v1_100020cc.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100020cc

dec_label_pc_10002224:                            ; preds = %dec_label_pc_10002214, %dec_label_pc_100020c4
  %v0_10002224 = call i32 @function_10005258()
  %v1_10002224 = trunc i32 %v0_10002224 to i16
  store i32 %v0_10002224, i32* %r3.global-to-local, align 4
  %v0_10002228 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002228 = load i32, i32* %r29.global-to-local, align 4
  %v4_10002228 = icmp eq i32 %v0_10002228, %v1_10002228
  %v3_1000222c = load i32, i32* @r27, align 4
  %v4_1000222c = add i32 %v3_1000222c, 2
  %v5_1000222c = inttoptr i32 %v4_1000222c to i16*
  store i16 %v1_10002224, i16* %v5_1000222c, align 2
  br i1 %v4_10002228, label %dec_label_pc_10002234, label %dec_label_pc_10002224.dec_label_pc_100020d4_crit_edge

dec_label_pc_10002224.dec_label_pc_100020d4_crit_edge: ; preds = %dec_label_pc_10002224
  %v1_100020d4.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100020d4

dec_label_pc_10002234:                            ; preds = %dec_label_pc_10002224, %dec_label_pc_100020cc
  %v0_10002234 = call i32 @function_10005258()
  store i32 %v0_10002234, i32* %r3.global-to-local, align 4
  %v0_10002238 = load i32, i32* %r15.global-to-local, align 4
  %v1_10002238 = load i32, i32* %r29.global-to-local, align 4
  %v4_10002238 = icmp eq i32 %v0_10002238, %v1_10002238
  %v1_1000223c = load i32, i32* @r27, align 4
  %v2_1000223c = add i32 %v1_1000223c, 4
  %v3_1000223c = inttoptr i32 %v2_1000223c to i32*
  store i32 %v0_10002234, i32* %v3_1000223c, align 4
  br i1 %v4_10002238, label %dec_label_pc_10002244, label %dec_label_pc_100020dc

dec_label_pc_10002244:                            ; preds = %dec_label_pc_10002234, %dec_label_pc_100020d4
  %v0_10002244 = call i32 @function_10005258()
  store i32 %v0_10002244, i32* %r3.global-to-local, align 4
  %v1_10002248 = load i32, i32* @r27, align 4
  %v2_10002248 = add i32 %v1_10002248, 8
  %v3_10002248 = inttoptr i32 %v2_10002248 to i32*
  store i32 %v0_10002244, i32* %v3_10002248, align 4
  %v0_1000224c = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_1000224c, label %dec_label_pc_100020e0, label %dec_label_pc_10002250

dec_label_pc_10002250:                            ; preds = %dec_label_pc_100020dc, %dec_label_pc_10002244
  %v0_10002250 = load i32, i32* @r28, align 4
  %v1_10002250 = add i32 %v0_10002250, 40
  store i32 %v1_10002250, i32* @r29, align 4
  %v0_10002254 = load i32, i32* @r30, align 4
  store i32 %v0_10002254, i32* @r4, align 4
  store i32 %v1_10002250, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10002260.19 to i32), i32* @lr, align 4
  %v0_1000225c = call i32 @function_10005318()
  store i32 %v0_1000225c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10002264 = load i32, i32* @r29, align 4
  %v2_10002264 = load i32, i32* @r30, align 4
  %v4_10002264 = add i32 %v2_10002264, %v1_10002264
  %v5_10002264 = inttoptr i32 %v4_10002264 to i8*
  store i8 0, i8* %v5_10002264, align 1
  br label %dec_label_pc_100020e0

dec_label_pc_1000226c:                            ; preds = %dec_label_pc_10001ed8
  %v0_1000226c = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_1000226c, i32* %r3.global-to-local, align 4
  store i32 268444276, i32* @lr, align 4
  %v0_10002270 = call i32 @function_100083cc()
  store i32 %v0_10002270, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002164

; uselistorder directives
  uselistorder i32 %v0_10002224, { 1, 0 }
  uselistorder i32 %v0_10002214, { 1, 0 }
  uselistorder i32 %v0_10002204, { 1, 0 }
  uselistorder i32 %v1_100021fc, { 1, 0 }
  uselistorder i32 %v1_10002140, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10002108, { 1, 0 }
  uselistorder i32 %v1_1000208c, { 1, 0 }
  uselistorder i32 %v1_10001f74, { 1, 0 }
  uselistorder i32 %v1_10001f6c, { 1, 0 }
  uselistorder i32 %v1_10001f44, { 1, 0 }
  uselistorder i32 %v1_10001f34, { 2, 1, 0 }
  uselistorder i32 %v1_10001f1c, { 1, 0 }
  uselistorder i32 %v2_10001eb8, { 1, 0 }
  uselistorder i32 %v6_10001ea4, { 3, 0, 2, 1 }
  uselistorder i8 %v5_10001d44, { 1, 0 }
  uselistorder i8 %v5_10001d0c, { 1, 0 }
  uselistorder i32* %stack_var_-136, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 22, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 0 }
  uselistorder i32* %r29.global-to-local, { 7, 13, 8, 12, 9, 11, 10, 0, 1, 3, 2, 4, 5, 6, 14 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33 }
  uselistorder label %dec_label_pc_10002250, { 1, 0 }
  uselistorder label %dec_label_pc_10002164, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100020e0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002058, { 1, 0 }
  uselistorder label %dec_label_pc_10002038, { 1, 0 }
  uselistorder label %dec_label_pc_10001fbc, { 1, 0 }
}

define i32 @function_10002278(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10002278:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr2_lt.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r7.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_10002278 = load i32, i32* @lr, align 4
  store i32 %v0_10002278, i32* %r0.global-to-local, align 4
  %v0_10002280 = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r24.global-to-local, align 4
  store i32 %v0_10002280, i32* %r27.global-to-local, align 4
  %v0_10002294 = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  %v0_100022dc = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100022e4 = load i32, i32* @r29, align 4
  store i32 %arg5, i32* @r29, align 4
  store i32 268444412, i32* @lr, align 4
  %v2_100022f8 = call i32 @function_10009410(i32 %arg2, i32 4)
  %v0_100022fc = load i32, i32* @r29, align 4
  store i32 %v2_100022f8, i32* %r25.global-to-local, align 4
  %v0_1000230c = load i32, i32* @r28, align 4
  store i32 %v0_1000230c, i32* %r3.global-to-local, align 4
  store i32 268444436, i32* @lr, align 4
  %v4_10002310 = inttoptr i32 %v0_100022fc to i32*
  %v5_10002310 = call i32 @function_10000300(i32 %v0_1000230c, i32* %v4_10002310, i32 2, i32 0)
  %v5_10002320 = trunc i32 %v5_10002310 to i8
  %v0_10002328 = load i32, i32* @r29, align 4
  %v0_1000232c = load i32, i32* @r28, align 4
  store i32 %v0_1000232c, i32* %r3.global-to-local, align 4
  store i32 268444468, i32* @lr, align 4
  %v4_10002330 = inttoptr i32 %v0_10002328 to i32*
  %v5_10002330 = call i32 @function_10000300(i32 %v0_1000232c, i32* %v4_10002330, i32 3, i32 65535)
  %v0_10002334 = load i32, i32* @r29, align 4
  store i32 %v5_10002330, i32* %r21.global-to-local, align 4
  %v0_10002344 = load i32, i32* @r28, align 4
  store i32 %v0_10002344, i32* %r3.global-to-local, align 4
  store i32 268444492, i32* @lr, align 4
  %v4_10002348 = inttoptr i32 %v0_10002334 to i32*
  %v5_10002348 = call i32 @function_10000300(i32 %v0_10002344, i32* %v4_10002348, i32 4, i32 64)
  %v0_1000234c = load i32, i32* @r29, align 4
  %v5_10002358 = trunc i32 %v5_10002348 to i8
  %v0_10002360 = load i32, i32* @r28, align 4
  store i32 %v0_10002360, i32* %r3.global-to-local, align 4
  store i32 268444520, i32* @lr, align 4
  %v4_10002364 = inttoptr i32 %v0_1000234c to i32*
  %v5_10002364 = call i32 @function_10000300(i32 %v0_10002360, i32* %v4_10002364, i32 5, i32 1)
  %v1_1000236c = urem i32 %v5_10002364, 256
  %v0_1000237c = load i32, i32* @r29, align 4
  %v0_10002380 = load i32, i32* @r28, align 4
  store i32 %v0_10002380, i32* %r3.global-to-local, align 4
  store i32 268444552, i32* @lr, align 4
  %v4_10002384 = inttoptr i32 %v0_1000237c to i32*
  %v5_10002384 = call i32 @function_10000300(i32 %v0_10002380, i32* %v4_10002384, i32 6, i32 65535)
  %v0_1000238c = load i32, i32* @r29, align 4
  store i32 %v5_10002384, i32* %r22.global-to-local, align 4
  %v0_1000239c = load i32, i32* @r28, align 4
  store i32 %v0_1000239c, i32* %r3.global-to-local, align 4
  store i32 268444580, i32* @lr, align 4
  %v4_100023a0 = inttoptr i32 %v0_1000238c to i32*
  %v5_100023a0 = call i32 @function_10000300(i32 %v0_1000239c, i32* %v4_100023a0, i32 7, i32 65535)
  %v0_100023a8 = load i32, i32* @r29, align 4
  store i32 %v5_100023a0, i32* %r23.global-to-local, align 4
  %v0_100023b8 = load i32, i32* @r28, align 4
  store i32 %v0_100023b8, i32* %r3.global-to-local, align 4
  store i32 268444608, i32* @lr, align 4
  %v4_100023bc = inttoptr i32 %v0_100023a8 to i32*
  %v5_100023bc = call i32 @function_10000300(i32 %v0_100023b8, i32* %v4_100023bc, i32 16, i32 65535)
  %v0_100023c0 = load i32, i32* @r29, align 4
  store i32 %v5_100023bc, i32* %r20.global-to-local, align 4
  %v0_100023d0 = load i32, i32* @r28, align 4
  store i32 %v0_100023d0, i32* %r3.global-to-local, align 4
  store i32 268444632, i32* @lr, align 4
  %v4_100023d4 = inttoptr i32 %v0_100023c0 to i32*
  %v5_100023d4 = call i32 @function_10000300(i32 %v0_100023d0, i32* %v4_100023d4, i32 17, i32 0)
  %v0_100023d8 = load i32, i32* @r29, align 4
  store i32 %v5_100023d4, i32* %r19.global-to-local, align 4
  %v0_100023e8 = load i32, i32* @r28, align 4
  store i32 %v0_100023e8, i32* %r3.global-to-local, align 4
  store i32 268444656, i32* @lr, align 4
  %v4_100023ec = inttoptr i32 %v0_100023d8 to i32*
  %v5_100023ec = call i32 @function_10000300(i32 %v0_100023e8, i32* %v4_100023ec, i32 10, i32 0)
  %v0_100023f0 = load i32, i32* @r29, align 4
  store i32 %v5_100023ec, i32* %r14.global-to-local, align 4
  %v0_10002400 = load i32, i32* @r28, align 4
  store i32 %v0_10002400, i32* %r3.global-to-local, align 4
  store i32 268444680, i32* @lr, align 4
  %v4_10002404 = inttoptr i32 %v0_100023f0 to i32*
  %v5_10002404 = call i32 @function_10000300(i32 %v0_10002400, i32* %v4_10002404, i32 11, i32 0)
  %v0_10002408 = load i32, i32* @r29, align 4
  store i32 %v5_10002404, i32* %r15.global-to-local, align 4
  %v0_10002418 = load i32, i32* @r28, align 4
  store i32 %v0_10002418, i32* %r3.global-to-local, align 4
  store i32 268444704, i32* @lr, align 4
  %v4_1000241c = inttoptr i32 %v0_10002408 to i32*
  %v5_1000241c = call i32 @function_10000300(i32 %v0_10002418, i32* %v4_1000241c, i32 12, i32 0)
  %v0_10002420 = load i32, i32* @r29, align 4
  store i32 %v5_1000241c, i32* %r16.global-to-local, align 4
  %v0_10002430 = load i32, i32* @r28, align 4
  store i32 %v0_10002430, i32* %r3.global-to-local, align 4
  store i32 268444728, i32* @lr, align 4
  %v4_10002434 = inttoptr i32 %v0_10002420 to i32*
  %v5_10002434 = call i32 @function_10000300(i32 %v0_10002430, i32* %v4_10002434, i32 13, i32 0)
  %v0_10002438 = load i32, i32* @r29, align 4
  store i32 %v5_10002434, i32* %r17.global-to-local, align 4
  %v0_10002448 = load i32, i32* @r28, align 4
  store i32 %v0_10002448, i32* %r3.global-to-local, align 4
  store i32 268444752, i32* @lr, align 4
  %v4_1000244c = inttoptr i32 %v0_10002438 to i32*
  %v5_1000244c = call i32 @function_10000300(i32 %v0_10002448, i32* %v4_1000244c, i32 14, i32 1)
  %v0_10002450 = load i32, i32* @r29, align 4
  store i32 %v5_1000244c, i32* %r18.global-to-local, align 4
  %v0_10002460 = load i32, i32* @r28, align 4
  store i32 %v0_10002460, i32* %r3.global-to-local, align 4
  store i32 268444776, i32* @lr, align 4
  %v4_10002464 = inttoptr i32 %v0_10002450 to i32*
  %v5_10002464 = call i32 @function_10000300(i32 %v0_10002460, i32* %v4_10002464, i32 15, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000246c = load i32, i32* @global_var_1001b448.12, align 4
  %v0_10002470 = load i32, i32* @r29, align 4
  store i32 %v5_10002464, i32* %r30.global-to-local, align 4
  %v0_1000247c = load i32, i32* @r28, align 4
  store i32 %v0_1000247c, i32* %r3.global-to-local, align 4
  store i32 268444804, i32* @lr, align 4
  %v5_10002480 = inttoptr i32 %v0_10002470 to i32*
  %v6_10002480 = call i32 @function_10000280(i32 %v0_1000247c, i32* %v5_10002480, i32 19, i32 %v3_1000246c, i32 268566528)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268444816, i32* @lr, align 4
  %v0_1000248c = call i32 @function_1000879c()
  %v1_10002494 = load i32, i32* %r27.global-to-local, align 4
  %v2_10002494 = add i32 %v1_10002494, %v0_1000248c
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268444840, i32* @lr, align 4
  %v3_100024a4 = call i32 @function_100090b4(i32 2, i32 3, i32 6)
  store i32 %v3_100024a4, i32* %r3.global-to-local, align 4
  %v3_100024a8 = icmp eq i32 %v3_100024a4, -1
  store i32 %v3_100024a4, i32* %r26.global-to-local, align 4
  br i1 %v3_100024a8, label %dec_label_pc_10002764, label %dec_label_pc_100024b4

dec_label_pc_100024b4:                            ; preds = %dec_label_pc_10002278
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_100024c0 = ptrtoint i32* %stack_var_-136 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-136, align 4
  store i32 268444880, i32* @lr, align 4
  %v4_100024cc = call i32 @function_10009078(i32 0, i32 3, i32 %v2_100024c0, i32 4)
  store i32 %v4_100024cc, i32* %r3.global-to-local, align 4
  %v3_100024d0 = icmp eq i32 %v4_100024cc, -1
  br i1 %v3_100024d0, label %dec_label_pc_1000285c, label %dec_label_pc_100024d8

dec_label_pc_100024d8:                            ; preds = %dec_label_pc_100024b4
  %v0_100024d8 = load i32, i32* %r24.global-to-local, align 4
  %v1_100024d8 = icmp slt i32 %v0_100024d8, 0
  %v3_100024d8 = icmp eq i32 %v0_100024d8, 0
  store i1 %v1_100024d8, i1* %cr2_lt.global-to-local, align 1
  store i1 %v3_100024d8, i1* %cr2_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_100024e0 = load i32, i32* %r14.global-to-local, align 4
  %v1_100024e0 = urem i32 %v0_100024e0, 256
  store i32 %v1_100024e0, i32* %r14.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  %v0_100024e8 = load i32, i32* %r21.global-to-local, align 4
  %v1_100024e8 = urem i32 %v0_100024e8, 65536
  store i32 %v1_100024e8, i32* %r21.global-to-local, align 4
  %v0_100024ec = load i32, i32* %r22.global-to-local, align 4
  %v1_100024ec = urem i32 %v0_100024ec, 65536
  store i32 %v1_100024ec, i32* %r22.global-to-local, align 4
  %v0_100024f0 = load i32, i32* %r23.global-to-local, align 4
  %v1_100024f0 = urem i32 %v0_100024f0, 65536
  store i32 %v1_100024f0, i32* %r23.global-to-local, align 4
  %tmp39 = icmp slt i32 %v0_100024d8, 1
  br i1 %tmp39, label %dec_label_pc_10002664.preheader, label %dec_label_pc_100024fc

dec_label_pc_100024fc:                            ; preds = %dec_label_pc_100024d8
  %v0_10002500 = load i32, i32* %r15.global-to-local, align 4
  %v1_10002500 = urem i32 %v0_10002500, 2
  %v0_10002508 = load i32, i32* %r17.global-to-local, align 4
  %v1_10002508 = urem i32 %v0_10002508, 2
  store i32 %v1_10002508, i32* %r0.global-to-local, align 4
  %v3_1000250c = icmp eq i32 %v1_1000236c, 0
  store i1 %v3_1000250c, i1* %cr4_eq.global-to-local, align 1
  %v0_10002510 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002510 = urem i32 %v0_10002510, 2
  %v0_10002518 = load i32, i32* %r18.global-to-local, align 4
  %v1_10002518 = urem i32 %v0_10002518, 2
  store i32 %v1_10002518, i32* %r14.global-to-local, align 4
  store i32 %v1_100024e0, i32* %r9.global-to-local, align 4
  %v0_10002520 = load i32, i32* %r30.global-to-local, align 4
  %v1_10002520 = urem i32 %v0_10002520, 2
  store i32 %v1_10002520, i32* %r15.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  %v1_1000252c = urem i32 %v0_100024e0, 2
  store i32 %v1_1000252c, i32* %r28.global-to-local, align 4
  store i32 4, i32* %r30.global-to-local, align 4
  store i32 6, i32* %r27.global-to-local, align 4
  store i32 10, i32* %r18.global-to-local, align 4
  store i32 2, i32* %r17.global-to-local, align 4
  store i32 3, i32* %r16.global-to-local, align 4
  %v4_10002588 = sext i8 %v5_10002320 to i32
  %v4_10002590 = sext i8 %v5_10002358 to i32
  br label %dec_label_pc_10002544

dec_label_pc_10002544:                            ; preds = %dec_label_pc_100025a4, %dec_label_pc_100024fc
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 268445008, i32* @lr, align 4
  %v2_1000254c = call i32 @function_10009410(i32 128, i32 1)
  store i32 %v2_1000254c, i32* %r3.global-to-local, align 4
  %v3_10002550 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10002550, i32* %r9.global-to-local, align 4
  %v0_10002554 = load i32, i32* @r29, align 4
  %v1_10002554 = mul i32 %v0_10002554, 4
  store i32 %v1_10002554, i32* %r0.global-to-local, align 4
  %v1_10002558 = load i32, i32* %r25.global-to-local, align 4
  %v3_10002558 = add i32 %v1_10002558, %v1_10002554
  %v4_10002558 = inttoptr i32 %v3_10002558 to i32*
  store i32 %v2_1000254c, i32* %v4_10002558, align 4
  %v0_1000255c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000255c = mul i32 %v0_1000255c, 4
  store i32 %v1_1000255c, i32* %r9.global-to-local, align 4
  %v1_10002560 = load i32, i32* %r25.global-to-local, align 4
  %v2_10002560 = add i32 %v1_10002560, %v1_1000255c
  %v3_10002560 = inttoptr i32 %v2_10002560 to i32*
  %v4_10002560 = load i32, i32* %v3_10002560, align 4
  store i32 %v4_10002560, i32* %r29.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10002568 = inttoptr i32 %v4_10002560 to i32*
  %v2_10002568 = load i32, i32* %v1_10002568, align 4
  store i32 %v2_10002568, i32* %r0.global-to-local, align 4
  %v1_1000256c = add i32 %v4_10002560, 20
  store i32 %v1_1000256c, i32* %r11.global-to-local, align 4
  %v0_10002570 = load i32, i32* %r21.global-to-local, align 4
  %v1_10002570 = trunc i32 %v0_10002570 to i16
  %v3_10002570 = add i32 %v4_10002560, 4
  %v4_10002570 = inttoptr i32 %v3_10002570 to i16*
  store i16 %v1_10002570, i16* %v4_10002570, align 2
  %v2_10002574 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v2_10002574, i32* %r0.global-to-local, align 4
  %v1_10002578 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 60, i32* %r9.global-to-local, align 4
  %v1_10002580 = load i32, i32* %r29.global-to-local, align 4
  %v2_10002580 = inttoptr i32 %v1_10002580 to i32*
  store i32 %v1_10002578, i32* %v2_10002580, align 4
  %v0_10002584 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002584 = trunc i32 %v0_10002584 to i16
  %v2_10002584 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002584 = add i32 %v2_10002584, 2
  %v4_10002584 = inttoptr i32 %v3_10002584 to i16*
  store i16 %v1_10002584, i16* %v4_10002584, align 2
  store i32 %v4_10002588, i32* %r0.global-to-local, align 4
  %v2_1000258c = load i32, i32* %r29.global-to-local, align 4
  %v3_1000258c = add i32 %v2_1000258c, 1
  %v4_1000258c = inttoptr i32 %v3_1000258c to i8*
  store i8 %v5_10002320, i8* %v4_1000258c, align 1
  store i32 %v4_10002590, i32* %r9.global-to-local, align 4
  %v2_10002594 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002594 = add i32 %v2_10002594, 8
  %v4_10002594 = inttoptr i32 %v3_10002594 to i8*
  store i8 %v5_10002358, i8* %v4_10002594, align 1
  %v0_10002598 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10002598, label %dec_label_pc_100025a4, label %dec_label_pc_1000259c

dec_label_pc_1000259c:                            ; preds = %dec_label_pc_10002544
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_100025a0 = load i32, i32* %r29.global-to-local, align 4
  %v3_100025a0 = add i32 %v2_100025a0, 6
  %v4_100025a0 = inttoptr i32 %v3_100025a0 to i16*
  store i16 16384, i16* %v4_100025a0, align 2
  br label %dec_label_pc_100025a4

dec_label_pc_100025a4:                            ; preds = %dec_label_pc_10002544, %dec_label_pc_1000259c
  %v0_100025a4 = load i32, i32* %r27.global-to-local, align 4
  %v1_100025a4 = trunc i32 %v0_100025a4 to i8
  %v2_100025a4 = load i32, i32* %r29.global-to-local, align 4
  %v3_100025a4 = add i32 %v2_100025a4, 9
  %v4_100025a4 = inttoptr i32 %v3_100025a4 to i8*
  store i8 %v1_100025a4, i8* %v4_100025a4, align 1
  %v0_100025a8 = load i32, i32* %r22.global-to-local, align 4
  %v1_100025a8 = trunc i32 %v0_100025a8 to i16
  %v2_100025a8 = load i32, i32* %r29.global-to-local, align 4
  %v3_100025a8 = add i32 %v2_100025a8, 20
  %v4_100025a8 = inttoptr i32 %v3_100025a8 to i16*
  store i16 %v1_100025a8, i16* %v4_100025a8, align 2
  store i32 %v6_10002480, i32* %r0.global-to-local, align 4
  %v0_100025b0 = load i32, i32* %r23.global-to-local, align 4
  %v1_100025b0 = trunc i32 %v0_100025b0 to i16
  %v2_100025b0 = load i32, i32* %r11.global-to-local, align 4
  %v3_100025b0 = add i32 %v2_100025b0, 2
  %v4_100025b0 = inttoptr i32 %v3_100025b0 to i16*
  store i16 %v1_100025b0, i16* %v4_100025b0, align 2
  %v0_100025b4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100025b4 = load i32, i32* %r29.global-to-local, align 4
  %v2_100025b4 = add i32 %v1_100025b4, 12
  %v3_100025b4 = inttoptr i32 %v2_100025b4 to i32*
  store i32 %v0_100025b4, i32* %v3_100025b4, align 4
  %v3_100025b8 = load i32, i32* %stack_var_-136, align 4
  %v1_100025bc = mul i32 %v3_100025b8, 24
  %v1_100025c0 = load i32, i32* @r31, align 4
  %v2_100025c0 = add i32 %v1_100025c0, %v1_100025bc
  store i32 %v2_100025c0, i32* %r9.global-to-local, align 4
  %v1_100025c4 = add i32 %v2_100025c0, 16
  %v2_100025c4 = inttoptr i32 %v1_100025c4 to i32*
  %v3_100025c4 = load i32, i32* %v2_100025c4, align 4
  store i32 %v3_100025c4, i32* %r0.global-to-local, align 4
  store i32 %v1_10002500, i32* %r9.global-to-local, align 4
  %v1_100025cc = load i32, i32* %r29.global-to-local, align 4
  %v2_100025cc = add i32 %v1_100025cc, 16
  %v3_100025cc = inttoptr i32 %v2_100025cc to i32*
  store i32 %v3_100025c4, i32* %v3_100025cc, align 4
  %v0_100025d0 = load i32, i32* %r20.global-to-local, align 4
  %v1_100025d0 = load i32, i32* %r11.global-to-local, align 4
  %v2_100025d0 = add i32 %v1_100025d0, 4
  %v3_100025d0 = inttoptr i32 %v2_100025d0 to i32*
  store i32 %v0_100025d0, i32* %v3_100025d0, align 4
  %v0_100025d4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100025d4 = add i32 %v0_100025d4, 12
  %v2_100025d4 = inttoptr i32 %v1_100025d4 to i32*
  %v3_100025d4 = load i32, i32* %v2_100025d4, align 4
  store i32 %v3_100025d4, i32* %r0.global-to-local, align 4
  %v2_100025d8 = call i32 @__asm_rlwimi(i32 10, i32 28, i32 0, i32 3)
  store i32 %v2_100025d8, i32* %r0.global-to-local, align 4
  %v1_100025dc = call i32 @__asm_rlwimi(i32 %v1_1000252c, i32 21, i32 10, i32 10)
  store i32 %v1_100025dc, i32* %r0.global-to-local, align 4
  %v1_100025e0 = call i32 @__asm_rlwimi(i32 %v1_10002500, i32 20, i32 11, i32 11)
  store i32 %v1_100025e0, i32* %r0.global-to-local, align 4
  store i32 %v1_10002510, i32* %r9.global-to-local, align 4
  %v1_100025e8 = call i32 @__asm_rlwimi(i32 %v1_10002510, i32 19, i32 12, i32 12)
  store i32 %v1_100025e8, i32* %r0.global-to-local, align 4
  store i32 %v1_10002508, i32* %r9.global-to-local, align 4
  %v1_100025f0 = call i32 @__asm_rlwimi(i32 %v1_10002508, i32 18, i32 13, i32 13)
  store i32 %v1_100025f0, i32* %r0.global-to-local, align 4
  %v1_100025f4 = call i32 @__asm_rlwimi(i32 %v1_10002518, i32 17, i32 14, i32 14)
  store i32 %v1_100025f4, i32* %r0.global-to-local, align 4
  %v1_100025f8 = call i32 @__asm_rlwimi(i32 %v1_10002520, i32 16, i32 15, i32 15)
  store i32 %v1_100025f8, i32* %r0.global-to-local, align 4
  %v1_100025fc = load i32, i32* %r11.global-to-local, align 4
  %v2_100025fc = add i32 %v1_100025fc, 12
  %v3_100025fc = inttoptr i32 %v2_100025fc to i32*
  store i32 %v1_100025f8, i32* %v3_100025fc, align 4
  %v0_10002600 = load i32, i32* %r17.global-to-local, align 4
  %v1_10002600 = trunc i32 %v0_10002600 to i8
  %v2_10002600 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002600 = add i32 %v2_10002600, 40
  %v4_10002600 = inttoptr i32 %v3_10002600 to i8*
  store i8 %v1_10002600, i8* %v4_10002600, align 1
  %v3_10002604 = load i32, i32* %r29.global-to-local, align 4
  %v4_10002604 = add i32 %v3_10002604, 41
  %v5_10002604 = inttoptr i32 %v4_10002604 to i8*
  store i8 4, i8* %v5_10002604, align 1
  %v0_10002608 = call i32 @function_10005258()
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_10002610 = urem i32 %v0_10002608, 16
  store i32 %v1_10002610, i32* %r3.global-to-local, align 4
  %v2_10002614 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002614 = add i32 %v2_10002614, 46
  %v4_10002614 = inttoptr i32 %v3_10002614 to i8*
  store i8 8, i8* %v4_10002614, align 1
  %v0_10002618 = load i32, i32* %r3.global-to-local, align 4
  %v1_10002618 = add i32 %v0_10002618, 1400
  store i32 %v1_10002618, i32* %r3.global-to-local, align 4
  %v3_1000261c = load i32, i32* %r29.global-to-local, align 4
  %v4_1000261c = add i32 %v3_1000261c, 44
  %v5_1000261c = inttoptr i32 %v4_1000261c to i8*
  store i8 4, i8* %v5_1000261c, align 1
  %v0_10002620 = load i32, i32* %r3.global-to-local, align 4
  %v1_10002620 = trunc i32 %v0_10002620 to i16
  %v2_10002620 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002620 = add i32 %v2_10002620, 42
  %v4_10002620 = inttoptr i32 %v3_10002620 to i16*
  store i16 %v1_10002620, i16* %v4_10002620, align 2
  %v0_10002624 = load i32, i32* %r17.global-to-local, align 4
  %v1_10002624 = trunc i32 %v0_10002624 to i8
  %v2_10002624 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002624 = add i32 %v2_10002624, 45
  %v4_10002624 = inttoptr i32 %v3_10002624 to i8*
  store i8 %v1_10002624, i8* %v4_10002624, align 1
  %v3_10002628 = load i32, i32* %r29.global-to-local, align 4
  %v4_10002628 = add i32 %v3_10002628, 47
  %v5_10002628 = inttoptr i32 %v4_10002628 to i8*
  store i8 10, i8* %v5_10002628, align 1
  %v0_1000262c = call i32 @function_10005258()
  store i32 %v0_1000262c, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10002638 = load i32, i32* %r29.global-to-local, align 4
  %v2_10002638 = add i32 %v1_10002638, 48
  %v3_10002638 = inttoptr i32 %v2_10002638 to i32*
  store i32 %v0_1000262c, i32* %v3_10002638, align 4
  %v0_1000263c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000263c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000263c = add i32 %v1_1000263c, 52
  %v3_1000263c = inttoptr i32 %v2_1000263c to i32*
  store i32 %v0_1000263c, i32* %v3_1000263c, align 4
  %v0_10002640 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002640 = trunc i32 %v0_10002640 to i8
  %v2_10002640 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002640 = add i32 %v2_10002640, 56
  %v4_10002640 = inttoptr i32 %v3_10002640 to i8*
  store i8 %v1_10002640, i8* %v4_10002640, align 1
  %v0_10002644 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002644 = trunc i32 %v0_10002644 to i8
  %v2_10002644 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002644 = add i32 %v2_10002644, 59
  %v4_10002644 = inttoptr i32 %v3_10002644 to i8*
  store i8 %v1_10002644, i8* %v4_10002644, align 1
  %v0_10002648 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002648 = trunc i32 %v0_10002648 to i8
  %v2_10002648 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002648 = add i32 %v2_10002648, 57
  %v4_10002648 = inttoptr i32 %v3_10002648 to i8*
  store i8 %v1_10002648, i8* %v4_10002648, align 1
  %v0_1000264c = load i32, i32* %r16.global-to-local, align 4
  %v1_1000264c = trunc i32 %v0_1000264c to i8
  %v2_1000264c = load i32, i32* %r29.global-to-local, align 4
  %v3_1000264c = add i32 %v2_1000264c, 58
  %v4_1000264c = inttoptr i32 %v3_1000264c to i8*
  store i8 %v1_1000264c, i8* %v4_1000264c, align 1
  %v3_10002650 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10002650, i32* %r9.global-to-local, align 4
  %v1_10002654 = add i32 %v3_10002650, 1
  store i32 %v1_10002654, i32* @r29, align 4
  %v1_10002658 = load i32, i32* %r24.global-to-local, align 4
  %v2_10002658 = icmp slt i32 %v1_10002654, %v1_10002658
  store i32 %v1_10002654, i32* %stack_var_-136, align 4
  br i1 %v2_10002658, label %dec_label_pc_10002544, label %dec_label_pc_10002664.preheader

dec_label_pc_10002664.preheader:                  ; preds = %dec_label_pc_100025a4, %dec_label_pc_100024d8
  %v3_1000267c = icmp eq i32 %v6_10002480, -1
  %v3_10002680 = icmp eq i32 %v1_100024e0, 0
  br label %dec_label_pc_10002664

dec_label_pc_10002664:                            ; preds = %dec_label_pc_10002664.preheader, %dec_label_pc_10002750
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  %v0_1000266c = load i1, i1* %cr2_eq.global-to-local, align 1
  %v1_1000266c = load i1, i1* %cr2_lt.global-to-local, align 1
  %v2_1000266c = or i1 %v0_1000266c, %v1_1000266c
  br i1 %v2_1000266c, label %dec_label_pc_10002750, label %dec_label_pc_10002670

dec_label_pc_10002670:                            ; preds = %dec_label_pc_10002664
  store i32 %v6_10002480, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  store i1 %v3_1000267c, i1* %cr3_eq.global-to-local, align 1
  store i1 %v3_10002680, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10002688

dec_label_pc_10002688:                            ; preds = %dec_label_pc_100026e0, %dec_label_pc_10002670
  %v0_10002688 = phi i32 [ %v1_10002740, %dec_label_pc_100026e0 ], [ 0, %dec_label_pc_10002670 ]
  %v1_10002688 = mul i32 %v0_10002688, 24
  store i32 %v1_10002688, i32* %r0.global-to-local, align 4
  %v1_1000268c = mul i32 %v0_10002688, 4
  store i32 %v1_1000268c, i32* %r11.global-to-local, align 4
  %v1_10002690 = load i32, i32* %r25.global-to-local, align 4
  %v2_10002690 = add i32 %v1_10002690, %v1_1000268c
  %v3_10002690 = inttoptr i32 %v2_10002690 to i32*
  %v4_10002690 = load i32, i32* %v3_10002690, align 4
  store i32 %v4_10002690, i32* %r28.global-to-local, align 4
  %v1_10002694 = load i32, i32* @r31, align 4
  %v2_10002694 = add i32 %v1_10002694, %v1_10002688
  %v1_10002698 = add i32 %v2_10002694, 20
  %v2_10002698 = inttoptr i32 %v1_10002698 to i8*
  %v3_10002698 = load i8, i8* %v2_10002698, align 1
  %v4_10002698 = zext i8 %v3_10002698 to i32
  store i32 %v4_10002698, i32* %r9.global-to-local, align 4
  %v1_1000269c = add i32 %v4_10002690, 20
  store i32 %v1_1000269c, i32* %r27.global-to-local, align 4
  %tmp40 = icmp ult i8 %v3_10002698, 32
  br i1 %tmp40, label %dec_label_pc_100027c4, label %dec_label_pc_100026a8

dec_label_pc_100026a8:                            ; preds = %dec_label_pc_10002688
  %v0_100026a8 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100026a8, label %dec_label_pc_100027ec, label %dec_label_pc_100026ac

dec_label_pc_100026ac:                            ; preds = %dec_label_pc_100027c4, %dec_label_pc_100026a8
  store i32 65535, i32* %r29.global-to-local, align 4
  %v0_100026b4 = load i32, i32* %r21.global-to-local, align 4
  %v4_100026b4 = icmp eq i32 %v0_100026b4, 65535
  br i1 %v4_100026b4, label %dec_label_pc_10002804, label %dec_label_pc_100026bc

dec_label_pc_100026bc:                            ; preds = %dec_label_pc_100027ec, %dec_label_pc_100026ac
  %v1_100026bc = phi i32 [ %v1_100027fc, %dec_label_pc_100027ec ], [ 65535, %dec_label_pc_100026ac ]
  %v0_100026bc = load i32, i32* %r22.global-to-local, align 4
  %v4_100026bc = icmp eq i32 %v0_100026bc, %v1_100026bc
  br i1 %v4_100026bc, label %dec_label_pc_10002814, label %dec_label_pc_100026c4

dec_label_pc_100026c4:                            ; preds = %dec_label_pc_10002804.dec_label_pc_100026c4_crit_edge, %dec_label_pc_100026bc
  %v1_100026c4 = phi i32 [ %v1_100026c4.pre, %dec_label_pc_10002804.dec_label_pc_100026c4_crit_edge ], [ %v1_100026bc, %dec_label_pc_100026bc ]
  %v0_100026c4 = load i32, i32* %r23.global-to-local, align 4
  %v4_100026c4 = icmp eq i32 %v0_100026c4, %v1_100026c4
  br i1 %v4_100026c4, label %dec_label_pc_10002824, label %dec_label_pc_100026cc

dec_label_pc_100026cc:                            ; preds = %dec_label_pc_10002814.dec_label_pc_100026cc_crit_edge, %dec_label_pc_100026c4
  %v1_100026cc = phi i32 [ %v1_100026cc.pre, %dec_label_pc_10002814.dec_label_pc_100026cc_crit_edge ], [ %v1_100026c4, %dec_label_pc_100026c4 ]
  %v0_100026cc = load i32, i32* %r20.global-to-local, align 4
  %v4_100026cc = icmp eq i32 %v0_100026cc, %v1_100026cc
  br i1 %v4_100026cc, label %dec_label_pc_10002834, label %dec_label_pc_100026d4

dec_label_pc_100026d4:                            ; preds = %dec_label_pc_10002824.dec_label_pc_100026d4_crit_edge, %dec_label_pc_100026cc
  %v1_100026d4 = phi i32 [ %v1_100026d4.pre, %dec_label_pc_10002824.dec_label_pc_100026d4_crit_edge ], [ %v1_100026cc, %dec_label_pc_100026cc ]
  %v0_100026d4 = load i32, i32* %r19.global-to-local, align 4
  %v4_100026d4 = icmp eq i32 %v0_100026d4, %v1_100026d4
  br i1 %v4_100026d4, label %dec_label_pc_10002844, label %dec_label_pc_100026dc

dec_label_pc_100026dc:                            ; preds = %dec_label_pc_10002834, %dec_label_pc_100026d4
  %v0_100026dc = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_100026dc, label %dec_label_pc_100026e0, label %dec_label_pc_10002850

dec_label_pc_100026e0:                            ; preds = %dec_label_pc_100026dc, %dec_label_pc_10002844, %dec_label_pc_10002850
  %v0_100026e0 = load i32, i32* %r30.global-to-local, align 4
  %v1_100026e0 = trunc i32 %v0_100026e0 to i16
  %v2_100026e0 = load i32, i32* %r28.global-to-local, align 4
  %v3_100026e0 = add i32 %v2_100026e0, 10
  %v4_100026e0 = inttoptr i32 %v3_100026e0 to i16*
  store i16 %v1_100026e0, i16* %v4_100026e0, align 2
  %v0_100026e8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100026e8, i32* @r3, align 4
  %v2_100026ec = call i32 @function_10003ca8(i32 %v0_100026e8, i32 20)
  %v3_100026ec = trunc i32 %v2_100026ec to i16
  %v0_100026f0 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_100026f0, i32* @r4, align 4
  %v4_100026f4 = add i32 %v0_100026e8, 10
  %v5_100026f4 = inttoptr i32 %v4_100026f4 to i16*
  store i16 %v3_100026ec, i16* %v5_100026f4, align 2
  %v0_100026fc = load i32, i32* %r30.global-to-local, align 4
  %v1_100026fc = trunc i32 %v0_100026fc to i16
  %v2_100026fc = load i32, i32* %r27.global-to-local, align 4
  %v3_100026fc = add i32 %v2_100026fc, 16
  %v4_100026fc = inttoptr i32 %v3_100026fc to i16*
  store i16 %v1_100026fc, i16* %v4_100026fc, align 2
  %v0_10002704 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002704, i32* %r3.global-to-local, align 4
  %v4_10002708 = call i32 @function_10003d0c(i32 %v0_10002704, i32 %v0_100026f0, i32 40, i32 40)
  %v5_10002708 = trunc i32 %v4_10002708 to i16
  store i32 %v4_10002708, i32* %r3.global-to-local, align 4
  %v3_1000270c = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_1000270c, i32* %r7.global-to-local, align 4
  %v0_10002710 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002710 = add i32 %v0_10002710, 2
  %v2_10002710 = inttoptr i32 %v1_10002710 to i16*
  %v3_10002710 = load i16, i16* %v2_10002710, align 2
  %v4_10002710 = zext i16 %v3_10002710 to i32
  store i32 %v4_10002710, i32* %r0.global-to-local, align 4
  %v0_10002714 = load i32, i32* %r28.global-to-local, align 4
  %v1_10002718 = mul i32 %v3_1000270c, 24
  store i32 %v1_10002718, i32* %r7.global-to-local, align 4
  %v4_1000271c = add i32 %v0_10002710, 16
  %v5_1000271c = inttoptr i32 %v4_1000271c to i16*
  store i16 %v5_10002708, i16* %v5_1000271c, align 2
  %v0_10002724 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10002724, i32* %r3.global-to-local, align 4
  %v0_10002728 = load i32, i32* %r7.global-to-local, align 4
  %v1_10002728 = load i32, i32* @r31, align 4
  %v2_10002728 = add i32 %v1_10002728, %v0_10002728
  store i32 %v2_10002728, i32* %r7.global-to-local, align 4
  %v0_10002730 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002730 = trunc i32 %v0_10002730 to i16
  %v3_10002730 = add i32 %v2_10002728, 2
  %v4_10002730 = inttoptr i32 %v3_10002730 to i16*
  store i16 %v1_10002730, i16* %v4_10002730, align 2
  store i32 268445500, i32* @lr, align 4
  %v6_10002738 = call i32 @function_10009038(i32 %v0_10002724, i32 %v0_10002714, i32 60, i32 16384, i32 %v2_10002728, i32 16)
  store i32 %v6_10002738, i32* %r3.global-to-local, align 4
  %v3_1000273c = load i32, i32* %stack_var_-136, align 4
  %v1_10002740 = add i32 %v3_1000273c, 1
  store i32 %v1_10002740, i32* %r9.global-to-local, align 4
  %v1_10002744 = load i32, i32* %r24.global-to-local, align 4
  %v2_10002744 = icmp slt i32 %v1_10002740, %v1_10002744
  store i32 %v1_10002740, i32* %stack_var_-136, align 4
  br i1 %v2_10002744, label %dec_label_pc_10002688, label %dec_label_pc_10002750

dec_label_pc_10002750:                            ; preds = %dec_label_pc_100026e0, %dec_label_pc_10002664
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268445528, i32* @lr, align 4
  %v0_10002754 = call i32 @function_1000879c()
  store i32 %v0_10002754, i32* %r3.global-to-local, align 4
  store i32 %v2_10002494, i32* %r0.global-to-local, align 4
  %v2_1000275c = icmp slt i32 %v2_10002494, %v0_10002754
  br i1 %v2_1000275c, label %dec_label_pc_10002764, label %dec_label_pc_10002664

dec_label_pc_10002764:                            ; preds = %dec_label_pc_10002750, %dec_label_pc_10002278, %dec_label_pc_1000285c
  store i32 %v0_10002294, i32* %r0.global-to-local, align 4
  %v1_10002778 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10002280)
  store i32 %v0_100022dc, i32* %r28.global-to-local, align 4
  store i32 %v0_100022e4, i32* %r29.global-to-local, align 4
  %v0_100027c0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100027c0

dec_label_pc_100027c4:                            ; preds = %dec_label_pc_10002688
  %v1_100027c4 = add i32 %v2_10002694, 16
  %v2_100027c4 = inttoptr i32 %v1_100027c4 to i32*
  %v3_100027c4 = load i32, i32* %v2_100027c4, align 4
  store i32 %v3_100027c4, i32* %r29.global-to-local, align 4
  %v0_100027c8 = call i32 @function_10005258()
  store i32 %v0_100027c8, i32* %r3.global-to-local, align 4
  %v3_100027cc = load i32, i32* %stack_var_-136, align 4
  %v1_100027d0 = mul i32 %v3_100027cc, 24
  %v1_100027d4 = load i32, i32* @r31, align 4
  %v2_100027d4 = add i32 %v1_100027d4, %v1_100027d0
  store i32 %v2_100027d4, i32* %r9.global-to-local, align 4
  %v1_100027d8 = add i32 %v2_100027d4, 20
  %v2_100027d8 = inttoptr i32 %v1_100027d8 to i8*
  %v3_100027d8 = load i8, i8* %v2_100027d8, align 1
  %v4_100027d8 = zext i8 %v3_100027d8 to i32
  store i32 %v4_100027d8, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_100027d8, 64
  %v2_100027dc = zext i8 %tmp to i32
  %v3_100027dc = lshr i32 %v0_100027c8, %v2_100027dc
  store i32 %v3_100027dc, i32* %r3.global-to-local, align 4
  %v0_100027e0 = load i32, i32* %r29.global-to-local, align 4
  %v2_100027e0 = add i32 %v3_100027dc, %v0_100027e0
  store i32 %v2_100027e0, i32* %r29.global-to-local, align 4
  %v1_100027e4 = load i32, i32* %r28.global-to-local, align 4
  %v2_100027e4 = add i32 %v1_100027e4, 16
  %v3_100027e4 = inttoptr i32 %v2_100027e4 to i32*
  store i32 %v2_100027e0, i32* %v3_100027e4, align 4
  %v0_100027e8 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100027e8, label %dec_label_pc_100027ec, label %dec_label_pc_100026ac

dec_label_pc_100027ec:                            ; preds = %dec_label_pc_100027c4, %dec_label_pc_100026a8
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_100027f0 = call i32 @function_10005258()
  store i32 %v0_100027f0, i32* %r3.global-to-local, align 4
  %v0_100027f4 = load i32, i32* %r29.global-to-local, align 4
  %v1_100027f4 = or i32 %v0_100027f4, 65535
  store i32 %v1_100027f4, i32* %r29.global-to-local, align 4
  %v1_100027f8 = load i32, i32* %r28.global-to-local, align 4
  %v2_100027f8 = add i32 %v1_100027f8, 12
  %v3_100027f8 = inttoptr i32 %v2_100027f8 to i32*
  store i32 %v0_100027f0, i32* %v3_100027f8, align 4
  %v0_100027fc = load i32, i32* %r21.global-to-local, align 4
  %v1_100027fc = load i32, i32* %r29.global-to-local, align 4
  %v4_100027fc = icmp eq i32 %v0_100027fc, %v1_100027fc
  br i1 %v4_100027fc, label %dec_label_pc_10002804, label %dec_label_pc_100026bc

dec_label_pc_10002804:                            ; preds = %dec_label_pc_100027ec, %dec_label_pc_100026ac
  %v0_10002804 = call i32 @function_10005258()
  %v1_10002804 = trunc i32 %v0_10002804 to i16
  store i32 %v0_10002804, i32* %r3.global-to-local, align 4
  %v0_10002808 = load i32, i32* %r22.global-to-local, align 4
  %v1_10002808 = load i32, i32* %r29.global-to-local, align 4
  %v4_10002808 = icmp eq i32 %v0_10002808, %v1_10002808
  %v3_1000280c = load i32, i32* %r28.global-to-local, align 4
  %v4_1000280c = add i32 %v3_1000280c, 4
  %v5_1000280c = inttoptr i32 %v4_1000280c to i16*
  store i16 %v1_10002804, i16* %v5_1000280c, align 2
  br i1 %v4_10002808, label %dec_label_pc_10002814, label %dec_label_pc_10002804.dec_label_pc_100026c4_crit_edge

dec_label_pc_10002804.dec_label_pc_100026c4_crit_edge: ; preds = %dec_label_pc_10002804
  %v1_100026c4.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100026c4

dec_label_pc_10002814:                            ; preds = %dec_label_pc_10002804, %dec_label_pc_100026bc
  %v0_10002814 = call i32 @function_10005258()
  %v1_10002814 = trunc i32 %v0_10002814 to i16
  store i32 %v0_10002814, i32* %r3.global-to-local, align 4
  %v0_10002818 = load i32, i32* %r23.global-to-local, align 4
  %v1_10002818 = load i32, i32* %r29.global-to-local, align 4
  %v4_10002818 = icmp eq i32 %v0_10002818, %v1_10002818
  %v3_1000281c = load i32, i32* %r28.global-to-local, align 4
  %v4_1000281c = add i32 %v3_1000281c, 20
  %v5_1000281c = inttoptr i32 %v4_1000281c to i16*
  store i16 %v1_10002814, i16* %v5_1000281c, align 2
  br i1 %v4_10002818, label %dec_label_pc_10002824, label %dec_label_pc_10002814.dec_label_pc_100026cc_crit_edge

dec_label_pc_10002814.dec_label_pc_100026cc_crit_edge: ; preds = %dec_label_pc_10002814
  %v1_100026cc.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100026cc

dec_label_pc_10002824:                            ; preds = %dec_label_pc_10002814, %dec_label_pc_100026c4
  %v0_10002824 = call i32 @function_10005258()
  %v1_10002824 = trunc i32 %v0_10002824 to i16
  store i32 %v0_10002824, i32* %r3.global-to-local, align 4
  %v0_10002828 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002828 = load i32, i32* %r29.global-to-local, align 4
  %v4_10002828 = icmp eq i32 %v0_10002828, %v1_10002828
  %v3_1000282c = load i32, i32* %r27.global-to-local, align 4
  %v4_1000282c = add i32 %v3_1000282c, 2
  %v5_1000282c = inttoptr i32 %v4_1000282c to i16*
  store i16 %v1_10002824, i16* %v5_1000282c, align 2
  br i1 %v4_10002828, label %dec_label_pc_10002834, label %dec_label_pc_10002824.dec_label_pc_100026d4_crit_edge

dec_label_pc_10002824.dec_label_pc_100026d4_crit_edge: ; preds = %dec_label_pc_10002824
  %v1_100026d4.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100026d4

dec_label_pc_10002834:                            ; preds = %dec_label_pc_10002824, %dec_label_pc_100026cc
  %v0_10002834 = call i32 @function_10005258()
  store i32 %v0_10002834, i32* %r3.global-to-local, align 4
  %v0_10002838 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002838 = load i32, i32* %r29.global-to-local, align 4
  %v4_10002838 = icmp eq i32 %v0_10002838, %v1_10002838
  %v1_1000283c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000283c = add i32 %v1_1000283c, 4
  %v3_1000283c = inttoptr i32 %v2_1000283c to i32*
  store i32 %v0_10002834, i32* %v3_1000283c, align 4
  br i1 %v4_10002838, label %dec_label_pc_10002844, label %dec_label_pc_100026dc

dec_label_pc_10002844:                            ; preds = %dec_label_pc_10002834, %dec_label_pc_100026d4
  %v0_10002844 = call i32 @function_10005258()
  store i32 %v0_10002844, i32* %r3.global-to-local, align 4
  %v1_10002848 = load i32, i32* %r27.global-to-local, align 4
  %v2_10002848 = add i32 %v1_10002848, 8
  %v3_10002848 = inttoptr i32 %v2_10002848 to i32*
  store i32 %v0_10002844, i32* %v3_10002848, align 4
  %v0_1000284c = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_1000284c, label %dec_label_pc_100026e0, label %dec_label_pc_10002850

dec_label_pc_10002850:                            ; preds = %dec_label_pc_100026dc, %dec_label_pc_10002844
  %v0_10002850 = call i32 @function_10005258()
  %v1_10002850 = trunc i32 %v0_10002850 to i16
  store i32 %v0_10002850, i32* %r3.global-to-local, align 4
  %v3_10002854 = load i32, i32* %r27.global-to-local, align 4
  %v4_10002854 = add i32 %v3_10002854, 18
  %v5_10002854 = inttoptr i32 %v4_10002854 to i16*
  store i16 %v1_10002850, i16* %v5_10002854, align 2
  br label %dec_label_pc_100026e0

dec_label_pc_1000285c:                            ; preds = %dec_label_pc_100024b4
  %v0_1000285c = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_1000285c, i32* %r3.global-to-local, align 4
  store i32 268445796, i32* @lr, align 4
  %v0_10002860 = call i32 @function_100083cc()
  store i32 %v0_10002860, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002764

; uselistorder directives
  uselistorder i32 %v0_10002850, { 1, 0 }
  uselistorder i32 %v0_10002824, { 1, 0 }
  uselistorder i32 %v0_10002814, { 1, 0 }
  uselistorder i32 %v0_10002804, { 1, 0 }
  uselistorder i32 %v1_100027fc, { 1, 0 }
  uselistorder i32 %v1_10002740, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10002708, { 1, 0 }
  uselistorder i32 %v1_1000268c, { 1, 0 }
  uselistorder i32 %v1_1000255c, { 1, 0 }
  uselistorder i32 %v1_10002554, { 1, 0 }
  uselistorder i32 %v1_1000252c, { 1, 0 }
  uselistorder i32 %v1_10002520, { 1, 0 }
  uselistorder i32 %v1_10002518, { 1, 0 }
  uselistorder i32 %v1_10002508, { 2, 1, 0 }
  uselistorder i32 %v1_100024e0, { 1, 2, 0 }
  uselistorder i32 %v2_10002494, { 1, 0 }
  uselistorder i32 %v6_10002480, { 1, 2, 0 }
  uselistorder i8 %v5_10002358, { 1, 0 }
  uselistorder i8 %v5_10002320, { 1, 0 }
  uselistorder i32* %stack_var_-136, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 26, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 0 }
  uselistorder i32* %r29.global-to-local, { 9, 14, 10, 8, 11, 13, 12, 0, 1, 3, 4, 2, 5, 6, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38 }
  uselistorder i32* %r28.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 9, 7, 8, 13, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 26, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32 }
  uselistorder label %dec_label_pc_10002850, { 1, 0 }
  uselistorder label %dec_label_pc_10002764, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100026e0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002664, { 1, 0 }
  uselistorder label %dec_label_pc_100025a4, { 1, 0 }
}

define i32 @function_10002868(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10002868:
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-88 = alloca i32, align 4
  %v0_10002870 = call i32 @__asm_mfcr()
  %v0_1000287c = load i32, i32* @r27, align 4
  store i32 %v0_10002870, i32* %r27.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v0_100028b0 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100028b8 = load i32, i32* @r29, align 4
  store i32 %arg5, i32* @r29, align 4
  store i32 268445908, i32* @lr, align 4
  %v2_100028d0 = call i32 @function_10009410(i32 %arg2, i32 4)
  store i32 %v2_100028d0, i32* @r24, align 4
  %v0_100028dc = load i32, i32* @r30, align 4
  store i32 %v0_100028dc, i32* %r3.global-to-local, align 4
  store i32 268445924, i32* @lr, align 4
  %v2_100028e0 = call i32 @function_10009410(i32 %v0_100028dc, i32 4)
  %v0_100028e8 = load i32, i32* @r29, align 4
  store i32 %v2_100028e0, i32* @r26, align 4
  %v0_100028f8 = load i32, i32* @r28, align 4
  store i32 %v0_100028f8, i32* %r3.global-to-local, align 4
  store i32 268445952, i32* @lr, align 4
  %v4_100028fc = inttoptr i32 %v0_100028e8 to i32*
  %v5_100028fc = call i32 @function_10000300(i32 %v0_100028f8, i32* %v4_100028fc, i32 7, i32 65535)
  %v0_10002908 = load i32, i32* @r29, align 4
  %v1_10002910 = urem i32 %v5_100028fc, 65536
  store i32 %v1_10002910, i32* %r20.global-to-local, align 4
  %v0_10002914 = load i32, i32* @r28, align 4
  store i32 %v0_10002914, i32* %r3.global-to-local, align 4
  store i32 268445980, i32* @lr, align 4
  %v4_10002918 = inttoptr i32 %v0_10002908 to i32*
  %v5_10002918 = call i32 @function_10000300(i32 %v0_10002914, i32* %v4_10002918, i32 6, i32 65535)
  %v0_1000291c = load i32, i32* @r29, align 4
  %v1_10002920 = urem i32 %v5_10002918, 65536
  store i32 %v1_10002920, i32* @r25, align 4
  %v0_1000292c = load i32, i32* @r28, align 4
  store i32 %v0_1000292c, i32* %r3.global-to-local, align 4
  store i32 268446004, i32* @lr, align 4
  %v4_10002930 = inttoptr i32 %v0_1000291c to i32*
  %v5_10002930 = call i32 @function_10000300(i32 %v0_1000292c, i32* %v4_10002930, i32 0, i32 512)
  %v0_10002934 = load i32, i32* @r29, align 4
  %v1_10002940 = urem i32 %v5_10002930, 65536
  store i32 %v1_10002940, i32* %r23.global-to-local, align 4
  %v0_10002944 = load i32, i32* @r28, align 4
  store i32 %v0_10002944, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000294c.22 to i32), i32* @lr, align 4
  %v4_10002948 = inttoptr i32 %v0_10002934 to i32*
  %v5_10002948 = call i32 @function_10000300(i32 %v0_10002944, i32* %v4_10002948, i32 1, i32 1)
  %v1_10002950 = urem i32 %v5_10002948, 256
  store i32 %v1_10002950, i32* %r19.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-88, align 4
  store i32 ptrtoint (i32* @global_var_1000296c.23 to i32), i32* @lr, align 4
  %v0_10002968 = call i32 @function_1000879c()
  store i32 %v0_10002968, i32* %r3.global-to-local, align 4
  %v1_10002970 = load i32, i32* %r27.global-to-local, align 4
  %v2_10002970 = add i32 %v1_10002970, %v0_10002968
  store i32 %v2_10002970, i32* %r18.global-to-local, align 4
  %v0_10002978 = load i32, i32* @r25, align 4
  %v4_10002978 = icmp eq i32 %v0_10002978, 65535
  br i1 %v4_10002978, label %dec_label_pc_10002b98, label %dec_label_pc_10002980

dec_label_pc_10002980:                            ; preds = %dec_label_pc_10002868, %dec_label_pc_10002b98
  %v0_10002980 = load i32, i32* @r30, align 4
  %v1_10002980 = icmp slt i32 %v0_10002980, 0
  %v3_10002980 = icmp eq i32 %v0_10002980, 0
  store i1 %v1_10002980, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10002980, i1* %cr4_eq.global-to-local, align 1
  %tmp34 = icmp slt i32 %v0_10002980, 1
  br i1 %tmp34, label %dec_label_pc_10002b38, label %dec_label_pc_10002988

dec_label_pc_10002988:                            ; preds = %dec_label_pc_10002980
  %v0_1000298c = load i32, i32* @r31, align 4
  store i32 %v0_1000298c, i32* @r29, align 4
  %v0_10002998 = load i32, i32* %r20.global-to-local, align 4
  %v4_10002998 = icmp eq i32 %v0_10002998, 65535
  store i32 0, i32* @r28, align 4
  store i32 2, i32* %r21.global-to-local, align 4
  %v2_10002ab0 = ptrtoint i32* %stack_var_-88 to i32
  br i1 %v4_10002998, label %dec_label_pc_10002a80, label %dec_label_pc_100029d0

dec_label_pc_100029b0:                            ; preds = %dec_label_pc_10002a10, %dec_label_pc_10002a2c
  %v0_100029b0 = load i32, i32* @r28, align 4
  %v1_100029b0 = load i32, i32* @r26, align 4
  %v2_100029b0 = add i32 %v1_100029b0, %v0_100029b0
  %v3_100029b0 = inttoptr i32 %v2_100029b0 to i32*
  %v4_100029b0 = load i32, i32* %v3_100029b0, align 4
  store i32 %v4_100029b0, i32* @r3, align 4
  %v1_100029bc = add i32 %v0_100029b0, 4
  store i32 %v1_100029bc, i32* @r28, align 4
  store i32 268446148, i32* @lr, align 4
  %v0_100029c0 = call i32 @function_10008eb4()
  store i32 %v0_100029c0, i32* %r3.global-to-local, align 4
  %v0_100029c4 = load i32, i32* @r31, align 4
  %v1_100029c4 = load i32, i32* @r30, align 4
  %v4_100029c4 = icmp eq i32 %v0_100029c4, %v1_100029c4
  %v0_100029c8 = load i32, i32* @r29, align 4
  %v1_100029c8 = add i32 %v0_100029c8, 24
  store i32 %v1_100029c8, i32* @r29, align 4
  br i1 %v4_100029c4, label %dec_label_pc_10002b00, label %dec_label_pc_100029d0

dec_label_pc_100029d0:                            ; preds = %dec_label_pc_10002988, %dec_label_pc_100029b0
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 268446180, i32* @lr, align 4
  %v2_100029e0 = call i32 @function_10009410(i32 65535, i32 1)
  %v0_100029e4 = load i32, i32* %r20.global-to-local, align 4
  %v1_100029e4 = trunc i32 %v0_100029e4 to i16
  %v2_100029e4 = load i32, i32* @r29, align 4
  %v3_100029e4 = add i32 %v2_100029e4, 2
  %v4_100029e4 = inttoptr i32 %v3_100029e4 to i16*
  store i16 %v1_100029e4, i16* %v4_100029e4, align 2
  %v1_100029e8 = load i32, i32* @r28, align 4
  %v2_100029e8 = load i32, i32* @r24, align 4
  %v3_100029e8 = add i32 %v2_100029e8, %v1_100029e8
  %v4_100029e8 = inttoptr i32 %v3_100029e8 to i32*
  store i32 %v2_100029e0, i32* %v4_100029e8, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268446204, i32* @lr, align 4
  %v3_100029f8 = call i32 @function_100090b4(i32 2, i32 2, i32 17)
  store i32 %v3_100029f8, i32* %r3.global-to-local, align 4
  %v3_10002a00 = icmp eq i32 %v3_100029f8, -1
  %v1_10002a08 = load i32, i32* @r28, align 4
  %v2_10002a08 = load i32, i32* @r26, align 4
  %v3_10002a08 = add i32 %v2_10002a08, %v1_10002a08
  %v4_10002a08 = inttoptr i32 %v3_10002a08 to i32*
  store i32 %v3_100029f8, i32* %v4_10002a08, align 4
  br i1 %v3_10002a00, label %dec_label_pc_10002b48, label %dec_label_pc_10002a10

dec_label_pc_10002a10:                            ; preds = %dec_label_pc_100029d0
  %v0_10002a10 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10002a10, i32* %stack_var_-88, align 4
  store i32 268446240, i32* @lr, align 4
  %v0_10002a1c = load i32, i32* %r3.global-to-local, align 4
  %v3_10002a1c = call i32 @function_10008e80(i32 %v0_10002a1c, i32 %v2_10002ab0, i32 16)
  store i32 %v3_10002a1c, i32* %r3.global-to-local, align 4
  %v0_10002a20 = load i32, i32* @r29, align 4
  %v1_10002a20 = add i32 %v0_10002a20, 20
  %v2_10002a20 = inttoptr i32 %v1_10002a20 to i8*
  %v3_10002a20 = load i8, i8* %v2_10002a20, align 1
  %v2_10002a24 = icmp ugt i8 %v3_10002a20, 31
  br i1 %v2_10002a24, label %dec_label_pc_100029b0, label %dec_label_pc_10002a2c

dec_label_pc_10002a2c:                            ; preds = %dec_label_pc_10002a10
  %v1_10002a2c = add i32 %v0_10002a20, 16
  %v2_10002a2c = inttoptr i32 %v1_10002a2c to i32*
  %v3_10002a2c = load i32, i32* %v2_10002a2c, align 4
  store i32 %v3_10002a2c, i32* %r27.global-to-local, align 4
  %v0_10002a30 = call i32 @function_10005258()
  store i32 %v0_10002a30, i32* %r3.global-to-local, align 4
  %v0_10002a34 = load i32, i32* @r29, align 4
  %v1_10002a34 = add i32 %v0_10002a34, 20
  %v2_10002a34 = inttoptr i32 %v1_10002a34 to i8*
  %v3_10002a34 = load i8, i8* %v2_10002a34, align 1
  %tmp = urem i8 %v3_10002a34, 64
  %v2_10002a38 = zext i8 %tmp to i32
  %v3_10002a38 = lshr i32 %v0_10002a30, %v2_10002a38
  %v0_10002a3c = load i32, i32* %r27.global-to-local, align 4
  %v2_10002a3c = add i32 %v3_10002a38, %v0_10002a3c
  store i32 %v2_10002a3c, i32* %r3.global-to-local, align 4
  %v2_10002a40 = add i32 %v0_10002a34, 4
  %v3_10002a40 = inttoptr i32 %v2_10002a40 to i32*
  store i32 %v2_10002a3c, i32* %v3_10002a40, align 4
  br label %dec_label_pc_100029b0

dec_label_pc_10002a48:                            ; preds = %dec_label_pc_10002ac4
  %v1_10002a48 = add i32 %v0_10002ad4, 16
  %v2_10002a48 = inttoptr i32 %v1_10002a48 to i32*
  %v3_10002a48 = load i32, i32* %v2_10002a48, align 4
  store i32 %v3_10002a48, i32* %r27.global-to-local, align 4
  %v0_10002a4c = call i32 @function_10005258()
  store i32 %v0_10002a4c, i32* %r3.global-to-local, align 4
  %v0_10002a50 = load i32, i32* @r29, align 4
  %v1_10002a50 = add i32 %v0_10002a50, 20
  %v2_10002a50 = inttoptr i32 %v1_10002a50 to i8*
  %v3_10002a50 = load i8, i8* %v2_10002a50, align 1
  %tmp39 = urem i8 %v3_10002a50, 64
  %v2_10002a5c = zext i8 %tmp39 to i32
  %v3_10002a5c = lshr i32 %v0_10002a4c, %v2_10002a5c
  %v0_10002a60 = load i32, i32* %r27.global-to-local, align 4
  %v2_10002a60 = add i32 %v0_10002a60, %v3_10002a5c
  store i32 %v2_10002a60, i32* %r3.global-to-local, align 4
  %v2_10002a64 = add i32 %v0_10002a50, 4
  %v3_10002a64 = inttoptr i32 %v2_10002a64 to i32*
  store i32 %v2_10002a60, i32* %v3_10002a64, align 4
  %v0_10002a68 = load i32, i32* @r29, align 4
  %v1_10002a68 = add i32 %v0_10002a68, 24
  store i32 %v1_10002a68, i32* @r29, align 4
  %v0_10002a6c = load i32, i32* @r28, align 4
  %v1_10002a6c = load i32, i32* @r26, align 4
  %v2_10002a6c = add i32 %v1_10002a6c, %v0_10002a6c
  %v3_10002a6c = inttoptr i32 %v2_10002a6c to i32*
  %v4_10002a6c = load i32, i32* %v3_10002a6c, align 4
  store i32 %v4_10002a6c, i32* @r3, align 4
  %v1_10002a70 = add i32 %v0_10002a6c, 4
  store i32 %v1_10002a70, i32* @r28, align 4
  store i32 268446328, i32* @lr, align 4
  %v0_10002a74 = call i32 @function_10008eb4()
  store i32 %v0_10002a74, i32* %r3.global-to-local, align 4
  %v0_10002a78 = load i32, i32* @r31, align 4
  %v1_10002a78 = load i32, i32* @r30, align 4
  %v4_10002a78 = icmp eq i32 %v0_10002a78, %v1_10002a78
  br i1 %v4_10002a78, label %dec_label_pc_10002b00, label %dec_label_pc_10002a80

dec_label_pc_10002a80:                            ; preds = %dec_label_pc_10002ae0, %dec_label_pc_10002a48, %dec_label_pc_10002988
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 268446356, i32* @lr, align 4
  %v2_10002a90 = call i32 @function_10009410(i32 65535, i32 1)
  store i32 %v2_10002a90, i32* %r3.global-to-local, align 4
  %v1_10002a94 = load i32, i32* @r28, align 4
  %v2_10002a94 = load i32, i32* @r24, align 4
  %v3_10002a94 = add i32 %v2_10002a94, %v1_10002a94
  %v4_10002a94 = inttoptr i32 %v3_10002a94 to i32*
  store i32 %v2_10002a90, i32* %v4_10002a94, align 4
  %v0_10002a98 = call i32 @function_10005258()
  %v1_10002a98 = trunc i32 %v0_10002a98 to i16
  %v3_10002a9c = load i32, i32* @r29, align 4
  %v4_10002a9c = add i32 %v3_10002a9c, 2
  %v5_10002a9c = inttoptr i32 %v4_10002a9c to i16*
  store i16 %v1_10002a98, i16* %v5_10002a9c, align 2
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268446384, i32* @lr, align 4
  %v3_10002aac = call i32 @function_100090b4(i32 2, i32 2, i32 17)
  store i32 %v3_10002aac, i32* %r3.global-to-local, align 4
  %v3_10002ab4 = icmp eq i32 %v3_10002aac, -1
  %v1_10002abc = load i32, i32* @r28, align 4
  %v2_10002abc = load i32, i32* @r26, align 4
  %v3_10002abc = add i32 %v2_10002abc, %v1_10002abc
  %v4_10002abc = inttoptr i32 %v3_10002abc to i32*
  store i32 %v3_10002aac, i32* %v4_10002abc, align 4
  br i1 %v3_10002ab4, label %dec_label_pc_10002b48, label %dec_label_pc_10002ac4

dec_label_pc_10002ac4:                            ; preds = %dec_label_pc_10002a80
  %v0_10002ac4 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10002ac4, i32* %stack_var_-88, align 4
  store i32 268446420, i32* @lr, align 4
  %v0_10002ad0 = load i32, i32* %r3.global-to-local, align 4
  %v3_10002ad0 = call i32 @function_10008e80(i32 %v0_10002ad0, i32 %v2_10002ab0, i32 16)
  store i32 %v3_10002ad0, i32* %r3.global-to-local, align 4
  %v0_10002ad4 = load i32, i32* @r29, align 4
  %v1_10002ad4 = add i32 %v0_10002ad4, 20
  %v2_10002ad4 = inttoptr i32 %v1_10002ad4 to i8*
  %v3_10002ad4 = load i8, i8* %v2_10002ad4, align 1
  %tmp35 = icmp ult i8 %v3_10002ad4, 32
  br i1 %tmp35, label %dec_label_pc_10002a48, label %dec_label_pc_10002ae0

dec_label_pc_10002ae0:                            ; preds = %dec_label_pc_10002ac4
  %v0_10002ae0 = load i32, i32* @r28, align 4
  %v1_10002ae0 = load i32, i32* @r26, align 4
  %v2_10002ae0 = add i32 %v1_10002ae0, %v0_10002ae0
  %v3_10002ae0 = inttoptr i32 %v2_10002ae0 to i32*
  %v4_10002ae0 = load i32, i32* %v3_10002ae0, align 4
  store i32 %v4_10002ae0, i32* @r3, align 4
  %v1_10002aec = add i32 %v0_10002ae0, 4
  store i32 %v1_10002aec, i32* @r28, align 4
  store i32 268446452, i32* @lr, align 4
  %v0_10002af0 = call i32 @function_10008eb4()
  store i32 %v0_10002af0, i32* %r3.global-to-local, align 4
  %v0_10002af4 = load i32, i32* @r31, align 4
  %v1_10002af4 = load i32, i32* @r30, align 4
  %v4_10002af4 = icmp eq i32 %v0_10002af4, %v1_10002af4
  %v0_10002af8 = load i32, i32* @r29, align 4
  %v1_10002af8 = add i32 %v0_10002af8, 24
  store i32 %v1_10002af8, i32* @r29, align 4
  br i1 %v4_10002af4, label %dec_label_pc_10002b00, label %dec_label_pc_10002a80

dec_label_pc_10002b00:                            ; preds = %dec_label_pc_100029b0, %dec_label_pc_10002ae0, %dec_label_pc_10002a48, %dec_label_pc_10002b38
  %v0_10002b00 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10002b00 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10002b00 = or i1 %v0_10002b00, %v1_10002b00
  br i1 %v2_10002b00, label %dec_label_pc_10002b38, label %dec_label_pc_10002b04

dec_label_pc_10002b04:                            ; preds = %dec_label_pc_10002b00
  %v0_10002b04 = load i32, i32* %r19.global-to-local, align 4
  %v3_10002b04 = icmp eq i32 %v0_10002b04, 0
  br i1 %v3_10002b04, label %dec_label_pc_10002b0c, label %dec_label_pc_10002ba4

dec_label_pc_10002b0c:                            ; preds = %dec_label_pc_10002b04
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10002b14

dec_label_pc_10002b14:                            ; preds = %dec_label_pc_10002b14.dec_label_pc_10002b14_crit_edge, %dec_label_pc_10002b0c
  %v0_10002b18 = phi i32 [ %v0_10002b30, %dec_label_pc_10002b14.dec_label_pc_10002b14_crit_edge ], [ 0, %dec_label_pc_10002b0c ]
  %v0_10002b28 = phi i32 [ %v0_10002b14.pre, %dec_label_pc_10002b14.dec_label_pc_10002b14_crit_edge ], [ 0, %dec_label_pc_10002b0c ]
  %v1_10002b14 = load i32, i32* @r26, align 4
  %v2_10002b14 = add i32 %v1_10002b14, %v0_10002b28
  %v3_10002b14 = inttoptr i32 %v2_10002b14 to i32*
  %v4_10002b14 = load i32, i32* %v3_10002b14, align 4
  store i32 %v4_10002b14, i32* %r3.global-to-local, align 4
  %v1_10002b18 = add i32 %v0_10002b18, 1
  store i32 %v1_10002b18, i32* %r28.global-to-local, align 4
  %v1_10002b1c = load i32, i32* @r24, align 4
  %v2_10002b1c = add i32 %v1_10002b1c, %v0_10002b28
  %v3_10002b1c = inttoptr i32 %v2_10002b1c to i32*
  %v4_10002b1c = load i32, i32* %v3_10002b1c, align 4
  %v0_10002b20 = load i32, i32* %r23.global-to-local, align 4
  %v1_10002b28 = add i32 %v0_10002b28, 4
  store i32 %v1_10002b28, i32* %r29.global-to-local, align 4
  store i32 268446512, i32* @lr, align 4
  %v4_10002b2c = call i32 @function_10009000(i32 %v4_10002b14, i32 %v4_10002b1c, i32 %v0_10002b20, i32 16384)
  store i32 %v4_10002b2c, i32* %r3.global-to-local, align 4
  %v0_10002b30 = load i32, i32* %r28.global-to-local, align 4
  %v1_10002b30 = load i32, i32* @r30, align 4
  %v4_10002b30 = icmp eq i32 %v0_10002b30, %v1_10002b30
  br i1 %v4_10002b30, label %dec_label_pc_10002b38, label %dec_label_pc_10002b14.dec_label_pc_10002b14_crit_edge

dec_label_pc_10002b14.dec_label_pc_10002b14_crit_edge: ; preds = %dec_label_pc_10002b14
  %v0_10002b14.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10002b14

dec_label_pc_10002b38:                            ; preds = %dec_label_pc_10002bb0, %dec_label_pc_10002b14, %dec_label_pc_10002b00, %dec_label_pc_10002980
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268446528, i32* @lr, align 4
  %v0_10002b3c = call i32 @function_1000879c()
  store i32 %v0_10002b3c, i32* %r3.global-to-local, align 4
  %v0_10002b40 = load i32, i32* %r18.global-to-local, align 4
  %v2_10002b40 = icmp slt i32 %v0_10002b40, %v0_10002b3c
  br i1 %v2_10002b40, label %dec_label_pc_10002b48, label %dec_label_pc_10002b00

dec_label_pc_10002b48:                            ; preds = %dec_label_pc_100029d0, %dec_label_pc_10002a80, %dec_label_pc_10002b38
  %v1_10002b5c = call %0 @__asm_mtcrf(i32 8, i32 %v0_10002870)
  store i32 %v0_1000287c, i32* %r27.global-to-local, align 4
  store i32 %v0_100028b0, i32* %r28.global-to-local, align 4
  store i32 %v0_100028b8, i32* %r29.global-to-local, align 4
  %v0_10002b94 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10002b94

dec_label_pc_10002b98:                            ; preds = %dec_label_pc_10002868
  %v0_10002b98 = call i32 @function_10005258()
  store i32 %v0_10002b98, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002980

dec_label_pc_10002ba4:                            ; preds = %dec_label_pc_10002b04
  store i32 0, i32* @r28, align 4
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_10002bb0

dec_label_pc_10002bb0:                            ; preds = %dec_label_pc_10002bb0.dec_label_pc_10002bb0_crit_edge, %dec_label_pc_10002ba4
  %v0_10002bb8 = phi i32 [ %v0_10002be0, %dec_label_pc_10002bb0.dec_label_pc_10002bb0_crit_edge ], [ 0, %dec_label_pc_10002ba4 ]
  %v0_10002bb0 = phi i32 [ %v0_10002bb0.pre, %dec_label_pc_10002bb0.dec_label_pc_10002bb0_crit_edge ], [ 0, %dec_label_pc_10002ba4 ]
  %v1_10002bb0 = load i32, i32* @r24, align 4
  %v2_10002bb0 = add i32 %v1_10002bb0, %v0_10002bb0
  %v3_10002bb0 = inttoptr i32 %v2_10002bb0 to i32*
  %v4_10002bb0 = load i32, i32* %v3_10002bb0, align 4
  store i32 %v4_10002bb0, i32* @r29, align 4
  %v0_10002bb4 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10002bb4, i32* @r4, align 4
  %v1_10002bb8 = add i32 %v0_10002bb8, 1
  store i32 %v1_10002bb8, i32* @r31, align 4
  store i32 %v4_10002bb0, i32* @r3, align 4
  store i32 268446660, i32* @lr, align 4
  %v0_10002bc0 = call i32 @function_10005318()
  store i32 %v0_10002bc0, i32* %r3.global-to-local, align 4
  %v0_10002bc4 = load i32, i32* @r27, align 4
  %v1_10002bc4 = load i32, i32* @r29, align 4
  %v2_10002bc4 = load i32, i32* %r23.global-to-local, align 4
  %v3_10002bc4 = trunc i32 %v0_10002bc4 to i8
  %v4_10002bc4 = add i32 %v2_10002bc4, %v1_10002bc4
  %v5_10002bc4 = inttoptr i32 %v4_10002bc4 to i8*
  store i8 %v3_10002bc4, i8* %v5_10002bc4, align 1
  %v0_10002bc8 = load i32, i32* @r29, align 4
  %v0_10002bcc = load i32, i32* %r23.global-to-local, align 4
  %v0_10002bd0 = load i32, i32* @r28, align 4
  %v1_10002bd0 = load i32, i32* @r26, align 4
  %v2_10002bd0 = add i32 %v1_10002bd0, %v0_10002bd0
  %v3_10002bd0 = inttoptr i32 %v2_10002bd0 to i32*
  %v4_10002bd0 = load i32, i32* %v3_10002bd0, align 4
  store i32 %v4_10002bd0, i32* %r3.global-to-local, align 4
  %v1_10002bd8 = add i32 %v0_10002bd0, 4
  store i32 %v1_10002bd8, i32* @r28, align 4
  store i32 268446688, i32* @lr, align 4
  %v4_10002bdc = call i32 @function_10009000(i32 %v4_10002bd0, i32 %v0_10002bc8, i32 %v0_10002bcc, i32 16384)
  store i32 %v4_10002bdc, i32* %r3.global-to-local, align 4
  %v0_10002be0 = load i32, i32* @r31, align 4
  %v1_10002be0 = load i32, i32* @r30, align 4
  %v4_10002be0 = icmp eq i32 %v0_10002be0, %v1_10002be0
  br i1 %v4_10002be0, label %dec_label_pc_10002b38, label %dec_label_pc_10002bb0.dec_label_pc_10002bb0_crit_edge

dec_label_pc_10002bb0.dec_label_pc_10002bb0_crit_edge: ; preds = %dec_label_pc_10002bb0
  %v0_10002bb0.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10002bb0

; uselistorder directives
  uselistorder i32 %v0_10002be0, { 1, 0 }
  uselistorder i32 %v0_10002bd0, { 1, 0 }
  uselistorder i32 %v0_10002b30, { 1, 0 }
  uselistorder i32 %v0_10002b28, { 2, 0, 1 }
  uselistorder i32 %v0_10002ae0, { 1, 0 }
  uselistorder i32 %v0_10002ad4, { 1, 0 }
  uselistorder i32 %v0_10002a6c, { 1, 0 }
  uselistorder i32 %v0_100029b0, { 1, 0 }
  uselistorder i32 %v2_10002ab0, { 1, 0 }
  uselistorder i32* %stack_var_-88, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 24, 7, 8, 1, 9, 10, 14, 15, 16, 17, 18, 19, 11, 12, 13, 20, 21, 2, 23, 25, 26, 27, 22, 28, 29, 30, 31, 32, 33, 34, 35, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_10002b48, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002b00, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_100029d0, { 1, 0 }
  uselistorder label %dec_label_pc_100029b0, { 1, 0 }
  uselistorder label %dec_label_pc_10002980, { 1, 0 }
}

define i32 @function_10002bec(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10002bec:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr2_lt.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r7.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_10002bec = load i32, i32* @lr, align 4
  store i32 %v0_10002bec, i32* %r0.global-to-local, align 4
  %v0_10002bf4 = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r18.global-to-local, align 4
  %v0_10002c00 = load i32, i32* @r27, align 4
  store i32 %v0_10002bf4, i32* %r27.global-to-local, align 4
  %v0_10002c08 = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %v0_10002c3c = load i32, i32* @r25, align 4
  %v0_10002c40 = load i32, i32* @r26, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10002c4c = load i32, i32* @r29, align 4
  store i32 %arg5, i32* @r29, align 4
  %v0_10002c54 = load i32, i32* @r30, align 4
  store i32 268446832, i32* @lr, align 4
  %v2_10002c6c = call i32 @function_10009410(i32 %arg2, i32 4)
  store i32 %v2_10002c6c, i32* %r19.global-to-local, align 4
  %v0_10002c74 = load i32, i32* @r29, align 4
  %v0_10002c80 = load i32, i32* @r28, align 4
  store i32 %v0_10002c80, i32* %r3.global-to-local, align 4
  store i32 268446856, i32* @lr, align 4
  %v4_10002c84 = inttoptr i32 %v0_10002c74 to i32*
  %v5_10002c84 = call i32 @function_10000300(i32 %v0_10002c80, i32* %v4_10002c84, i32 2, i32 0)
  %v0_10002c94 = load i32, i32* @r29, align 4
  %v1_10002c98 = urem i32 %v5_10002c84, 256
  store i32 %v1_10002c98, i32* %r15.global-to-local, align 4
  %v0_10002c9c = load i32, i32* @r28, align 4
  store i32 %v0_10002c9c, i32* %r3.global-to-local, align 4
  store i32 268446884, i32* @lr, align 4
  %v4_10002ca0 = inttoptr i32 %v0_10002c94 to i32*
  %v5_10002ca0 = call i32 @function_10000300(i32 %v0_10002c9c, i32* %v4_10002ca0, i32 3, i32 65535)
  %v0_10002ca4 = load i32, i32* @r29, align 4
  store i32 %v5_10002ca0, i32* %r23.global-to-local, align 4
  %v0_10002cb4 = load i32, i32* @r28, align 4
  store i32 %v0_10002cb4, i32* %r3.global-to-local, align 4
  store i32 268446908, i32* @lr, align 4
  %v4_10002cb8 = inttoptr i32 %v0_10002ca4 to i32*
  %v5_10002cb8 = call i32 @function_10000300(i32 %v0_10002cb4, i32* %v4_10002cb8, i32 4, i32 64)
  %v0_10002cbc = load i32, i32* @r29, align 4
  %v1_10002cc8 = urem i32 %v5_10002cb8, 256
  store i32 %v1_10002cc8, i32* %r16.global-to-local, align 4
  %v0_10002ccc = load i32, i32* @r28, align 4
  store i32 %v0_10002ccc, i32* %r3.global-to-local, align 4
  store i32 268446932, i32* @lr, align 4
  %v4_10002cd0 = inttoptr i32 %v0_10002cbc to i32*
  %v5_10002cd0 = call i32 @function_10000300(i32 %v0_10002ccc, i32* %v4_10002cd0, i32 5, i32 0)
  %v1_10002cd8 = urem i32 %v5_10002cd0, 256
  %v0_10002ce8 = load i32, i32* @r29, align 4
  %v0_10002cec = load i32, i32* @r28, align 4
  store i32 %v0_10002cec, i32* %r3.global-to-local, align 4
  store i32 268446964, i32* @lr, align 4
  %v4_10002cf0 = inttoptr i32 %v0_10002ce8 to i32*
  %v5_10002cf0 = call i32 @function_10000300(i32 %v0_10002cec, i32* %v4_10002cf0, i32 6, i32 65535)
  %v0_10002cf8 = load i32, i32* @r29, align 4
  store i32 %v5_10002cf0, i32* %r25.global-to-local, align 4
  %v0_10002d08 = load i32, i32* @r28, align 4
  store i32 %v0_10002d08, i32* %r3.global-to-local, align 4
  store i32 268446992, i32* @lr, align 4
  %v4_10002d0c = inttoptr i32 %v0_10002cf8 to i32*
  %v5_10002d0c = call i32 @function_10000300(i32 %v0_10002d08, i32* %v4_10002d0c, i32 7, i32 65535)
  %v0_10002d10 = load i32, i32* @r29, align 4
  store i32 %v5_10002d0c, i32* %r26.global-to-local, align 4
  %v0_10002d20 = load i32, i32* @r28, align 4
  store i32 %v0_10002d20, i32* %r3.global-to-local, align 4
  store i32 268447016, i32* @lr, align 4
  %v4_10002d24 = inttoptr i32 %v0_10002d10 to i32*
  %v5_10002d24 = call i32 @function_10000300(i32 %v0_10002d20, i32* %v4_10002d24, i32 0, i32 512)
  %v0_10002d28 = load i32, i32* @r29, align 4
  store i32 %v5_10002d24, i32* %r30.global-to-local, align 4
  %v0_10002d38 = load i32, i32* @r28, align 4
  store i32 %v0_10002d38, i32* %r3.global-to-local, align 4
  store i32 268447040, i32* @lr, align 4
  %v4_10002d3c = inttoptr i32 %v0_10002d28 to i32*
  %v5_10002d3c = call i32 @function_10000300(i32 %v0_10002d38, i32* %v4_10002d3c, i32 1, i32 1)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10002d44 = load i32, i32* @global_var_1001b448.12, align 4
  %v1_10002d48 = urem i32 %v5_10002d3c, 256
  %v0_10002d4c = load i32, i32* @r29, align 4
  %v0_10002d58 = load i32, i32* @r28, align 4
  store i32 %v0_10002d58, i32* %r3.global-to-local, align 4
  store i32 268447072, i32* @lr, align 4
  %v4_10002d5c = inttoptr i32 %v0_10002d4c to i32*
  %v5_10002d5c = call i32 @function_10000300(i32 %v0_10002d58, i32* %v4_10002d5c, i32 19, i32 %v3_10002d44)
  store i32 %v5_10002d5c, i32* %r17.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268447084, i32* @lr, align 4
  %v0_10002d68 = call i32 @function_1000879c()
  %v1_10002d70 = load i32, i32* %r27.global-to-local, align 4
  %v2_10002d70 = add i32 %v1_10002d70, %v0_10002d68
  store i32 %v2_10002d70, i32* %r14.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268447104, i32* @lr, align 4
  %v3_10002d7c = call i32 @function_100090b4(i32 2, i32 3, i32 17)
  store i32 %v3_10002d7c, i32* %r3.global-to-local, align 4
  %v3_10002d80 = icmp eq i32 %v3_10002d7c, -1
  store i32 %v3_10002d7c, i32* %r20.global-to-local, align 4
  br i1 %v3_10002d80, label %dec_label_pc_10002f70, label %dec_label_pc_10002d8c

dec_label_pc_10002d8c:                            ; preds = %dec_label_pc_10002bec
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10002d98 = ptrtoint i32* %stack_var_-104 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268447144, i32* @lr, align 4
  %v4_10002da4 = call i32 @function_10009078(i32 0, i32 3, i32 %v2_10002d98, i32 4)
  store i32 %v4_10002da4, i32* %r3.global-to-local, align 4
  %v3_10002da8 = icmp eq i32 %v4_10002da4, -1
  br i1 %v3_10002da8, label %dec_label_pc_10003060, label %dec_label_pc_10002db0

dec_label_pc_10002db0:                            ; preds = %dec_label_pc_10002d8c
  %v0_10002db0 = load i32, i32* %r30.global-to-local, align 4
  %v1_10002db0 = urem i32 %v0_10002db0, 65536
  store i32 %v1_10002db0, i32* @r24, align 4
  %v0_10002db4 = load i32, i32* %r23.global-to-local, align 4
  %v1_10002db4 = urem i32 %v0_10002db4, 65536
  store i32 %v1_10002db4, i32* %r21.global-to-local, align 4
  %v2_10002db8 = icmp ugt i32 %v1_10002db0, 1460
  %v0_10002dbc = load i32, i32* %r25.global-to-local, align 4
  %v1_10002dbc = urem i32 %v0_10002dbc, 65536
  store i32 %v1_10002dbc, i32* %r22.global-to-local, align 4
  %v0_10002dc0 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002dc0 = urem i32 %v0_10002dc0, 65536
  store i32 %v1_10002dc0, i32* %r23.global-to-local, align 4
  br i1 %v2_10002db8, label %dec_label_pc_10003058, label %dec_label_pc_10002dc8

dec_label_pc_10002dc8:                            ; preds = %dec_label_pc_10002db0, %dec_label_pc_10003058
  %v0_10002de8 = phi i32 [ %v1_10002db0, %dec_label_pc_10002db0 ], [ 1460, %dec_label_pc_10003058 ]
  %v0_10002dc8 = load i32, i32* %r18.global-to-local, align 4
  %v1_10002dc8 = icmp slt i32 %v0_10002dc8, 0
  %v3_10002dc8 = icmp eq i32 %v0_10002dc8, 0
  store i1 %v1_10002dc8, i1* %cr2_lt.global-to-local, align 1
  store i1 %v3_10002dc8, i1* %cr2_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %tmp30 = icmp slt i32 %v0_10002dc8, 1
  br i1 %tmp30, label %dec_label_pc_10002e80.preheader, label %dec_label_pc_10002dd8

dec_label_pc_10002dd8:                            ; preds = %dec_label_pc_10002dc8
  %v1_10002ddc = add nuw nsw i32 %v0_10002de8, 8
  store i32 %v1_10002ddc, i32* %r9.global-to-local, align 4
  %v1_10002de0 = urem i32 %v1_10002ddc, 65536
  store i32 %v1_10002de0, i32* %r26.global-to-local, align 4
  %v3_10002de4 = icmp eq i32 %v1_10002cd8, 0
  %v1_10002de8 = add nuw nsw i32 %v0_10002de8, 28
  store i32 %v1_10002de8, i32* %r0.global-to-local, align 4
  %v1_10002dec = urem i32 %v1_10002de8, 65536
  store i32 %v1_10002dec, i32* %r25.global-to-local, align 4
  br i1 %v3_10002de4, label %dec_label_pc_10002df4, label %dec_label_pc_1000306c

dec_label_pc_10002df4:                            ; preds = %dec_label_pc_10002dd8
  store i32 0, i32* @r29, align 4
  store i32 4, i32* %r27.global-to-local, align 4
  store i32 5, i32* %r30.global-to-local, align 4
  store i32 17, i32* @r28, align 4
  br label %dec_label_pc_10002e04

dec_label_pc_10002e04:                            ; preds = %dec_label_pc_10002e04, %dec_label_pc_10002df4
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268447248, i32* @lr, align 4
  %v2_10002e0c = call i32 @function_10009410(i32 1510, i32 1)
  store i32 %v2_10002e0c, i32* %r3.global-to-local, align 4
  %v3_10002e10 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10002e10, i32* %r9.global-to-local, align 4
  %v0_10002e14 = load i32, i32* @r29, align 4
  %v1_10002e14 = mul i32 %v0_10002e14, 4
  store i32 %v1_10002e14, i32* %r0.global-to-local, align 4
  %v1_10002e18 = load i32, i32* %r19.global-to-local, align 4
  %v3_10002e18 = add i32 %v1_10002e18, %v1_10002e14
  %v4_10002e18 = inttoptr i32 %v3_10002e18 to i32*
  store i32 %v2_10002e0c, i32* %v4_10002e18, align 4
  %v0_10002e1c = load i32, i32* %r9.global-to-local, align 4
  %v1_10002e1c = mul i32 %v0_10002e1c, 4
  store i32 %v1_10002e1c, i32* %r9.global-to-local, align 4
  %v1_10002e20 = load i32, i32* %r19.global-to-local, align 4
  %v2_10002e20 = add i32 %v1_10002e20, %v1_10002e1c
  %v3_10002e20 = inttoptr i32 %v2_10002e20 to i32*
  %v4_10002e20 = load i32, i32* %v3_10002e20, align 4
  store i32 %v4_10002e20, i32* %r11.global-to-local, align 4
  %v1_10002e24 = inttoptr i32 %v4_10002e20 to i32*
  %v2_10002e24 = load i32, i32* %v1_10002e24, align 4
  store i32 %v2_10002e24, i32* %r0.global-to-local, align 4
  %v1_10002e28 = add i32 %v4_10002e20, 20
  store i32 %v1_10002e28, i32* %r10.global-to-local, align 4
  %v0_10002e2c = load i32, i32* %r16.global-to-local, align 4
  %v1_10002e2c = trunc i32 %v0_10002e2c to i8
  %v3_10002e2c = add i32 %v4_10002e20, 8
  %v4_10002e2c = inttoptr i32 %v3_10002e2c to i8*
  store i8 %v1_10002e2c, i8* %v4_10002e2c, align 1
  %v1_10002e30 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10002e30, i32* %r0.global-to-local, align 4
  %v0_10002e34 = load i32, i32* @r28, align 4
  %v1_10002e34 = trunc i32 %v0_10002e34 to i8
  %v2_10002e34 = load i32, i32* %r11.global-to-local, align 4
  %v3_10002e34 = add i32 %v2_10002e34, 9
  %v4_10002e34 = inttoptr i32 %v3_10002e34 to i8*
  store i8 %v1_10002e34, i8* %v4_10002e34, align 1
  %v1_10002e38 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10002e38, i32* %r0.global-to-local, align 4
  %v0_10002e3c = load i32, i32* %r17.global-to-local, align 4
  %v1_10002e3c = load i32, i32* %r11.global-to-local, align 4
  %v2_10002e3c = add i32 %v1_10002e3c, 12
  %v3_10002e3c = inttoptr i32 %v2_10002e3c to i32*
  store i32 %v0_10002e3c, i32* %v3_10002e3c, align 4
  %v1_10002e40 = load i32, i32* %r11.global-to-local, align 4
  %v2_10002e40 = inttoptr i32 %v1_10002e40 to i32*
  store i32 %v1_10002e38, i32* %v2_10002e40, align 4
  %v0_10002e44 = load i32, i32* %r15.global-to-local, align 4
  %v1_10002e44 = trunc i32 %v0_10002e44 to i8
  %v2_10002e44 = load i32, i32* %r11.global-to-local, align 4
  %v3_10002e44 = add i32 %v2_10002e44, 1
  %v4_10002e44 = inttoptr i32 %v3_10002e44 to i8*
  store i8 %v1_10002e44, i8* %v4_10002e44, align 1
  %v0_10002e48 = load i32, i32* %r25.global-to-local, align 4
  %v1_10002e48 = trunc i32 %v0_10002e48 to i16
  %v2_10002e48 = load i32, i32* %r11.global-to-local, align 4
  %v3_10002e48 = add i32 %v2_10002e48, 2
  %v4_10002e48 = inttoptr i32 %v3_10002e48 to i16*
  store i16 %v1_10002e48, i16* %v4_10002e48, align 2
  %v3_10002e4c = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10002e4c, i32* %r9.global-to-local, align 4
  %v0_10002e50 = load i32, i32* %r21.global-to-local, align 4
  %v1_10002e50 = trunc i32 %v0_10002e50 to i16
  %v2_10002e50 = load i32, i32* %r11.global-to-local, align 4
  %v3_10002e50 = add i32 %v2_10002e50, 4
  %v4_10002e50 = inttoptr i32 %v3_10002e50 to i16*
  store i16 %v1_10002e50, i16* %v4_10002e50, align 2
  %v0_10002e54 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002e54 = add i32 %v0_10002e54, 1
  store i32 %v1_10002e54, i32* @r29, align 4
  %v1_10002e58 = mul i32 %v0_10002e54, 24
  store i32 %v1_10002e58, i32* %r9.global-to-local, align 4
  %v1_10002e5c = load i32, i32* %r18.global-to-local, align 4
  %v2_10002e5c = icmp slt i32 %v1_10002e54, %v1_10002e5c
  %v0_10002e60 = load i32, i32* %r22.global-to-local, align 4
  %v1_10002e60 = trunc i32 %v0_10002e60 to i16
  %v2_10002e60 = load i32, i32* %r11.global-to-local, align 4
  %v3_10002e60 = add i32 %v2_10002e60, 20
  %v4_10002e60 = inttoptr i32 %v3_10002e60 to i16*
  store i16 %v1_10002e60, i16* %v4_10002e60, align 2
  %v0_10002e64 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002e64 = load i32, i32* @r31, align 4
  %v2_10002e64 = add i32 %v1_10002e64, %v0_10002e64
  store i32 %v2_10002e64, i32* %r9.global-to-local, align 4
  %v0_10002e68 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002e68 = trunc i32 %v0_10002e68 to i16
  %v2_10002e68 = load i32, i32* %r10.global-to-local, align 4
  %v3_10002e68 = add i32 %v2_10002e68, 4
  %v4_10002e68 = inttoptr i32 %v3_10002e68 to i16*
  store i16 %v1_10002e68, i16* %v4_10002e68, align 2
  %v0_10002e6c = load i32, i32* %r9.global-to-local, align 4
  %v1_10002e6c = add i32 %v0_10002e6c, 16
  %v2_10002e6c = inttoptr i32 %v1_10002e6c to i32*
  %v3_10002e6c = load i32, i32* %v2_10002e6c, align 4
  store i32 %v3_10002e6c, i32* %r0.global-to-local, align 4
  %v0_10002e70 = load i32, i32* %r23.global-to-local, align 4
  %v1_10002e70 = trunc i32 %v0_10002e70 to i16
  %v2_10002e70 = load i32, i32* %r10.global-to-local, align 4
  %v3_10002e70 = add i32 %v2_10002e70, 2
  %v4_10002e70 = inttoptr i32 %v3_10002e70 to i16*
  store i16 %v1_10002e70, i16* %v4_10002e70, align 2
  %v0_10002e74 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002e74 = load i32, i32* %r11.global-to-local, align 4
  %v2_10002e74 = add i32 %v1_10002e74, 16
  %v3_10002e74 = inttoptr i32 %v2_10002e74 to i32*
  store i32 %v0_10002e74, i32* %v3_10002e74, align 4
  %v0_10002e78 = load i32, i32* @r29, align 4
  store i32 %v0_10002e78, i32* %stack_var_-104, align 4
  br i1 %v2_10002e5c, label %dec_label_pc_10002e04, label %dec_label_pc_10002e80.preheader

dec_label_pc_10002e80.preheader:                  ; preds = %dec_label_pc_1000307c, %dec_label_pc_10002e04, %dec_label_pc_10002dc8
  %v3_10002e9c = icmp eq i32 %v1_10002d48, 0
  br label %dec_label_pc_10002e80

dec_label_pc_10002e80:                            ; preds = %dec_label_pc_10002e80.preheader, %dec_label_pc_10002f60
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %v0_10002e88 = load i1, i1* %cr2_eq.global-to-local, align 1
  %v1_10002e88 = load i1, i1* %cr2_lt.global-to-local, align 1
  %v2_10002e88 = or i1 %v0_10002e88, %v1_10002e88
  br i1 %v2_10002e88, label %dec_label_pc_10002f60, label %dec_label_pc_10002e8c

dec_label_pc_10002e8c:                            ; preds = %dec_label_pc_10002e80
  store i32 %v1_10002d48, i32* %r0.global-to-local, align 4
  %v0_10002e90 = load i32, i32* %r17.global-to-local, align 4
  %v3_10002e90 = icmp eq i32 %v0_10002e90, -1
  store i1 %v3_10002e90, i1* %cr3_eq.global-to-local, align 1
  %v0_10002e94 = load i32, i32* @r24, align 4
  %v1_10002e94 = add i32 %v0_10002e94, 8
  store i32 %v1_10002e94, i32* @r26, align 4
  %v1_10002e98 = add i32 %v0_10002e94, 28
  store i32 %v1_10002e98, i32* @r30, align 4
  store i1 %v3_10002e9c, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r25, align 4
  br label %dec_label_pc_10002ea8

dec_label_pc_10002ea8:                            ; preds = %dec_label_pc_10002ef0, %dec_label_pc_10002e8c
  %v0_10002ea8 = phi i32 [ %v1_10002f50, %dec_label_pc_10002ef0 ], [ 0, %dec_label_pc_10002e8c ]
  %v1_10002ea8 = mul i32 %v0_10002ea8, 24
  store i32 %v1_10002ea8, i32* %r0.global-to-local, align 4
  %v1_10002eac = mul i32 %v0_10002ea8, 4
  store i32 %v1_10002eac, i32* %r11.global-to-local, align 4
  %v1_10002eb0 = load i32, i32* %r19.global-to-local, align 4
  %v2_10002eb0 = add i32 %v1_10002eb0, %v1_10002eac
  %v3_10002eb0 = inttoptr i32 %v2_10002eb0 to i32*
  %v4_10002eb0 = load i32, i32* %v3_10002eb0, align 4
  store i32 %v4_10002eb0, i32* @r28, align 4
  %v1_10002eb4 = load i32, i32* @r31, align 4
  %v2_10002eb4 = add i32 %v1_10002eb4, %v1_10002ea8
  store i32 %v2_10002eb4, i32* %r10.global-to-local, align 4
  %v1_10002eb8 = add i32 %v2_10002eb4, 20
  %v2_10002eb8 = inttoptr i32 %v1_10002eb8 to i8*
  %v3_10002eb8 = load i8, i8* %v2_10002eb8, align 1
  %v4_10002eb8 = zext i8 %v3_10002eb8 to i32
  store i32 %v4_10002eb8, i32* %r9.global-to-local, align 4
  %v1_10002ebc = add i32 %v4_10002eb0, 20
  store i32 %v1_10002ebc, i32* @r27, align 4
  %tmp31 = icmp ult i8 %v3_10002eb8, 32
  br i1 %tmp31, label %dec_label_pc_10002fd0, label %dec_label_pc_10002ec8

dec_label_pc_10002ec8:                            ; preds = %dec_label_pc_10002ea8
  %v0_10002ec8 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002ec8, label %dec_label_pc_10002ff8, label %dec_label_pc_10002ecc

dec_label_pc_10002ecc:                            ; preds = %dec_label_pc_10002fd0, %dec_label_pc_10002ec8
  store i32 65535, i32* %r29.global-to-local, align 4
  %v0_10002ed4 = load i32, i32* %r21.global-to-local, align 4
  %v4_10002ed4 = icmp eq i32 %v0_10002ed4, 65535
  br i1 %v4_10002ed4, label %dec_label_pc_10003010, label %dec_label_pc_10002edc

dec_label_pc_10002edc:                            ; preds = %dec_label_pc_10002ff8, %dec_label_pc_10002ecc
  %v1_10002edc = phi i32 [ %v1_10003008, %dec_label_pc_10002ff8 ], [ 65535, %dec_label_pc_10002ecc ]
  %v0_10002edc = load i32, i32* %r22.global-to-local, align 4
  %v4_10002edc = icmp eq i32 %v0_10002edc, %v1_10002edc
  br i1 %v4_10002edc, label %dec_label_pc_10003020, label %dec_label_pc_10002ee4

dec_label_pc_10002ee4:                            ; preds = %dec_label_pc_10003010.dec_label_pc_10002ee4_crit_edge, %dec_label_pc_10002edc
  %v1_10002ee4 = phi i32 [ %v1_10002ee4.pre, %dec_label_pc_10003010.dec_label_pc_10002ee4_crit_edge ], [ %v1_10002edc, %dec_label_pc_10002edc ]
  %v0_10002ee4 = load i32, i32* %r23.global-to-local, align 4
  %v4_10002ee4 = icmp eq i32 %v0_10002ee4, %v1_10002ee4
  br i1 %v4_10002ee4, label %dec_label_pc_10003030, label %dec_label_pc_10002eec

dec_label_pc_10002eec:                            ; preds = %dec_label_pc_10003020, %dec_label_pc_10002ee4
  %v0_10002eec = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10002eec, label %dec_label_pc_10002ef0, label %dec_label_pc_1000303c

dec_label_pc_10002ef0:                            ; preds = %dec_label_pc_10002eec, %dec_label_pc_10003030, %dec_label_pc_1000303c
  %v0_10002ef0 = load i32, i32* @r25, align 4
  %v1_10002ef0 = trunc i32 %v0_10002ef0 to i16
  %v2_10002ef0 = load i32, i32* @r28, align 4
  %v3_10002ef0 = add i32 %v2_10002ef0, 10
  %v4_10002ef0 = inttoptr i32 %v3_10002ef0 to i16*
  store i16 %v1_10002ef0, i16* %v4_10002ef0, align 2
  %v0_10002ef8 = load i32, i32* @r28, align 4
  store i32 %v0_10002ef8, i32* @r3, align 4
  %v2_10002efc = call i32 @function_10003ca8(i32 %v0_10002ef8, i32 20)
  %v3_10002efc = trunc i32 %v2_10002efc to i16
  %v0_10002f00 = load i32, i32* @r27, align 4
  store i32 %v0_10002f00, i32* @r4, align 4
  %v3_10002f04 = load i32, i32* @r28, align 4
  %v4_10002f04 = add i32 %v3_10002f04, 10
  %v5_10002f04 = inttoptr i32 %v4_10002f04 to i16*
  store i16 %v3_10002efc, i16* %v5_10002f04, align 2
  %v0_10002f08 = load i32, i32* @r26, align 4
  %v0_10002f0c = load i32, i32* @r25, align 4
  %v1_10002f0c = trunc i32 %v0_10002f0c to i16
  %v2_10002f0c = load i32, i32* @r27, align 4
  %v3_10002f0c = add i32 %v2_10002f0c, 6
  %v4_10002f0c = inttoptr i32 %v3_10002f0c to i16*
  store i16 %v1_10002f0c, i16* %v4_10002f0c, align 2
  %v0_10002f10 = load i32, i32* @r28, align 4
  store i32 %v0_10002f10, i32* %r3.global-to-local, align 4
  %v0_10002f14 = load i32, i32* @r27, align 4
  %v1_10002f14 = add i32 %v0_10002f14, 4
  %v2_10002f14 = inttoptr i32 %v1_10002f14 to i16*
  %v3_10002f14 = load i16, i16* %v2_10002f14, align 2
  %v4_10002f14 = zext i16 %v3_10002f14 to i32
  %v4_10002f18 = call i32 @function_10003d0c(i32 %v0_10002f10, i32 %v0_10002f00, i32 %v4_10002f14, i32 %v0_10002f08)
  %v5_10002f18 = trunc i32 %v4_10002f18 to i16
  store i32 %v4_10002f18, i32* %r3.global-to-local, align 4
  %v3_10002f1c = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10002f1c, i32* %r7.global-to-local, align 4
  %v0_10002f20 = load i32, i32* @r27, align 4
  %v1_10002f20 = add i32 %v0_10002f20, 2
  %v2_10002f20 = inttoptr i32 %v1_10002f20 to i16*
  %v3_10002f20 = load i16, i16* %v2_10002f20, align 2
  %v4_10002f20 = zext i16 %v3_10002f20 to i32
  store i32 %v4_10002f20, i32* %r0.global-to-local, align 4
  %v0_10002f24 = load i32, i32* @r28, align 4
  %v1_10002f28 = mul i32 %v3_10002f1c, 24
  store i32 %v1_10002f28, i32* %r7.global-to-local, align 4
  %v4_10002f2c = add i32 %v0_10002f20, 6
  %v5_10002f2c = inttoptr i32 %v4_10002f2c to i16*
  store i16 %v5_10002f18, i16* %v5_10002f2c, align 2
  %v0_10002f30 = load i32, i32* @r30, align 4
  %v0_10002f34 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10002f34, i32* %r3.global-to-local, align 4
  %v0_10002f38 = load i32, i32* %r7.global-to-local, align 4
  %v1_10002f38 = load i32, i32* @r31, align 4
  %v2_10002f38 = add i32 %v1_10002f38, %v0_10002f38
  store i32 %v2_10002f38, i32* %r7.global-to-local, align 4
  %v0_10002f40 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002f40 = trunc i32 %v0_10002f40 to i16
  %v3_10002f40 = add i32 %v2_10002f38, 2
  %v4_10002f40 = inttoptr i32 %v3_10002f40 to i16*
  store i16 %v1_10002f40, i16* %v4_10002f40, align 2
  store i32 268447564, i32* @lr, align 4
  %v6_10002f48 = call i32 @function_10009038(i32 %v0_10002f34, i32 %v0_10002f24, i32 %v0_10002f30, i32 16384, i32 %v2_10002f38, i32 16)
  store i32 %v6_10002f48, i32* %r3.global-to-local, align 4
  %v3_10002f4c = load i32, i32* %stack_var_-104, align 4
  %v1_10002f50 = add i32 %v3_10002f4c, 1
  store i32 %v1_10002f50, i32* %r9.global-to-local, align 4
  %v1_10002f54 = load i32, i32* %r18.global-to-local, align 4
  %v2_10002f54 = icmp slt i32 %v1_10002f50, %v1_10002f54
  store i32 %v1_10002f50, i32* %stack_var_-104, align 4
  br i1 %v2_10002f54, label %dec_label_pc_10002ea8, label %dec_label_pc_10002f60

dec_label_pc_10002f60:                            ; preds = %dec_label_pc_10002ef0, %dec_label_pc_10002e80
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268447592, i32* @lr, align 4
  %v0_10002f64 = call i32 @function_1000879c()
  store i32 %v0_10002f64, i32* %r3.global-to-local, align 4
  %v0_10002f68 = load i32, i32* %r14.global-to-local, align 4
  %v2_10002f68 = icmp slt i32 %v0_10002f68, %v0_10002f64
  br i1 %v2_10002f68, label %dec_label_pc_10002f70, label %dec_label_pc_10002e80

dec_label_pc_10002f70:                            ; preds = %dec_label_pc_10002f60, %dec_label_pc_10002bec, %dec_label_pc_10003060
  store i32 %v0_10002c08, i32* %r0.global-to-local, align 4
  %v1_10002f84 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10002bf4)
  store i32 %v0_10002c3c, i32* %r25.global-to-local, align 4
  store i32 %v0_10002c40, i32* %r26.global-to-local, align 4
  store i32 %v0_10002c00, i32* %r27.global-to-local, align 4
  store i32 %v0_10002c4c, i32* %r29.global-to-local, align 4
  store i32 %v0_10002c54, i32* %r30.global-to-local, align 4
  %v0_10002fcc = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10002fcc

dec_label_pc_10002fd0:                            ; preds = %dec_label_pc_10002ea8
  %v1_10002fd0 = add i32 %v2_10002eb4, 16
  %v2_10002fd0 = inttoptr i32 %v1_10002fd0 to i32*
  %v3_10002fd0 = load i32, i32* %v2_10002fd0, align 4
  store i32 %v3_10002fd0, i32* %r29.global-to-local, align 4
  %v0_10002fd4 = call i32 @function_10005258()
  store i32 %v0_10002fd4, i32* %r3.global-to-local, align 4
  %v3_10002fd8 = load i32, i32* %stack_var_-104, align 4
  %v1_10002fdc = mul i32 %v3_10002fd8, 24
  %v1_10002fe0 = load i32, i32* @r31, align 4
  %v2_10002fe0 = add i32 %v1_10002fe0, %v1_10002fdc
  store i32 %v2_10002fe0, i32* %r9.global-to-local, align 4
  %v1_10002fe4 = add i32 %v2_10002fe0, 20
  %v2_10002fe4 = inttoptr i32 %v1_10002fe4 to i8*
  %v3_10002fe4 = load i8, i8* %v2_10002fe4, align 1
  %v4_10002fe4 = zext i8 %v3_10002fe4 to i32
  store i32 %v4_10002fe4, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10002fe4, 64
  %v2_10002fe8 = zext i8 %tmp to i32
  %v3_10002fe8 = lshr i32 %v0_10002fd4, %v2_10002fe8
  store i32 %v3_10002fe8, i32* %r3.global-to-local, align 4
  %v0_10002fec = load i32, i32* %r29.global-to-local, align 4
  %v2_10002fec = add i32 %v3_10002fe8, %v0_10002fec
  store i32 %v2_10002fec, i32* %r29.global-to-local, align 4
  %v1_10002ff0 = load i32, i32* @r28, align 4
  %v2_10002ff0 = add i32 %v1_10002ff0, 16
  %v3_10002ff0 = inttoptr i32 %v2_10002ff0 to i32*
  store i32 %v2_10002fec, i32* %v3_10002ff0, align 4
  %v0_10002ff4 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002ff4, label %dec_label_pc_10002ff8, label %dec_label_pc_10002ecc

dec_label_pc_10002ff8:                            ; preds = %dec_label_pc_10002fd0, %dec_label_pc_10002ec8
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10002ffc = call i32 @function_10005258()
  store i32 %v0_10002ffc, i32* %r3.global-to-local, align 4
  store i32 65535, i32* %r29.global-to-local, align 4
  %v1_10003004 = load i32, i32* @r28, align 4
  %v2_10003004 = add i32 %v1_10003004, 12
  %v3_10003004 = inttoptr i32 %v2_10003004 to i32*
  store i32 %v0_10002ffc, i32* %v3_10003004, align 4
  %v0_10003008 = load i32, i32* %r21.global-to-local, align 4
  %v1_10003008 = load i32, i32* %r29.global-to-local, align 4
  %v4_10003008 = icmp eq i32 %v0_10003008, %v1_10003008
  br i1 %v4_10003008, label %dec_label_pc_10003010, label %dec_label_pc_10002edc

dec_label_pc_10003010:                            ; preds = %dec_label_pc_10002ff8, %dec_label_pc_10002ecc
  %v0_10003010 = call i32 @function_10005258()
  %v1_10003010 = trunc i32 %v0_10003010 to i16
  store i32 %v0_10003010, i32* %r3.global-to-local, align 4
  %v0_10003014 = load i32, i32* %r22.global-to-local, align 4
  %v1_10003014 = load i32, i32* %r29.global-to-local, align 4
  %v4_10003014 = icmp eq i32 %v0_10003014, %v1_10003014
  %v3_10003018 = load i32, i32* @r28, align 4
  %v4_10003018 = add i32 %v3_10003018, 4
  %v5_10003018 = inttoptr i32 %v4_10003018 to i16*
  store i16 %v1_10003010, i16* %v5_10003018, align 2
  br i1 %v4_10003014, label %dec_label_pc_10003020, label %dec_label_pc_10003010.dec_label_pc_10002ee4_crit_edge

dec_label_pc_10003010.dec_label_pc_10002ee4_crit_edge: ; preds = %dec_label_pc_10003010
  %v1_10002ee4.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10002ee4

dec_label_pc_10003020:                            ; preds = %dec_label_pc_10003010, %dec_label_pc_10002edc
  %v0_10003020 = call i32 @function_10005258()
  %v1_10003020 = trunc i32 %v0_10003020 to i16
  store i32 %v0_10003020, i32* %r3.global-to-local, align 4
  %v0_10003024 = load i32, i32* %r23.global-to-local, align 4
  %v1_10003024 = load i32, i32* %r29.global-to-local, align 4
  %v4_10003024 = icmp eq i32 %v0_10003024, %v1_10003024
  %v3_10003028 = load i32, i32* @r28, align 4
  %v4_10003028 = add i32 %v3_10003028, 20
  %v5_10003028 = inttoptr i32 %v4_10003028 to i16*
  store i16 %v1_10003020, i16* %v5_10003028, align 2
  br i1 %v4_10003024, label %dec_label_pc_10003030, label %dec_label_pc_10002eec

dec_label_pc_10003030:                            ; preds = %dec_label_pc_10003020, %dec_label_pc_10002ee4
  %v0_10003030 = call i32 @function_10005258()
  %v1_10003030 = trunc i32 %v0_10003030 to i16
  store i32 %v0_10003030, i32* %r3.global-to-local, align 4
  %v3_10003034 = load i32, i32* @r27, align 4
  %v4_10003034 = add i32 %v3_10003034, 2
  %v5_10003034 = inttoptr i32 %v4_10003034 to i16*
  store i16 %v1_10003030, i16* %v5_10003034, align 2
  %v0_10003038 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10003038, label %dec_label_pc_10002ef0, label %dec_label_pc_1000303c

dec_label_pc_1000303c:                            ; preds = %dec_label_pc_10002eec, %dec_label_pc_10003030
  %v0_1000303c = load i32, i32* @r28, align 4
  %v1_1000303c = add i32 %v0_1000303c, 28
  store i32 %v1_1000303c, i32* @r29, align 4
  %v0_10003040 = load i32, i32* @r24, align 4
  store i32 %v0_10003040, i32* @r4, align 4
  store i32 %v1_1000303c, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000304c.24 to i32), i32* @lr, align 4
  %v0_10003048 = call i32 @function_10005318()
  store i32 %v0_10003048, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10003050 = load i32, i32* @r29, align 4
  %v2_10003050 = load i32, i32* @r24, align 4
  %v4_10003050 = add i32 %v2_10003050, %v1_10003050
  %v5_10003050 = inttoptr i32 %v4_10003050 to i8*
  store i8 0, i8* %v5_10003050, align 1
  br label %dec_label_pc_10002ef0

dec_label_pc_10003058:                            ; preds = %dec_label_pc_10002db0
  store i32 1460, i32* @r24, align 4
  br label %dec_label_pc_10002dc8

dec_label_pc_10003060:                            ; preds = %dec_label_pc_10002d8c
  %v0_10003060 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10003060, i32* %r3.global-to-local, align 4
  store i32 268447848, i32* @lr, align 4
  %v0_10003064 = call i32 @function_100083cc()
  store i32 %v0_10003064, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002f70

dec_label_pc_1000306c:                            ; preds = %dec_label_pc_10002dd8
  store i32 0, i32* %r30.global-to-local, align 4
  store i32 4, i32* %r29.global-to-local, align 4
  store i32 16384, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1000307c

dec_label_pc_1000307c:                            ; preds = %dec_label_pc_1000307c, %dec_label_pc_1000306c
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268447880, i32* @lr, align 4
  %v2_10003084 = call i32 @function_10009410(i32 1510, i32 1)
  store i32 %v2_10003084, i32* %r3.global-to-local, align 4
  %v3_10003088 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10003088, i32* %r9.global-to-local, align 4
  %v0_1000308c = load i32, i32* @r30, align 4
  %v1_1000308c = mul i32 %v0_1000308c, 4
  store i32 %v1_1000308c, i32* %r0.global-to-local, align 4
  %v1_10003090 = load i32, i32* %r19.global-to-local, align 4
  %v3_10003090 = add i32 %v1_10003090, %v1_1000308c
  %v4_10003090 = inttoptr i32 %v3_10003090 to i32*
  store i32 %v2_10003084, i32* %v4_10003090, align 4
  %v0_10003094 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003094 = mul i32 %v0_10003094, 4
  store i32 %v1_10003094, i32* %r9.global-to-local, align 4
  %v1_10003098 = load i32, i32* %r19.global-to-local, align 4
  %v2_10003098 = add i32 %v1_10003098, %v1_10003094
  %v3_10003098 = inttoptr i32 %v2_10003098 to i32*
  %v4_10003098 = load i32, i32* %v3_10003098, align 4
  store i32 %v4_10003098, i32* %r11.global-to-local, align 4
  %v1_1000309c = inttoptr i32 %v4_10003098 to i32*
  %v2_1000309c = load i32, i32* %v1_1000309c, align 4
  store i32 %v2_1000309c, i32* %r0.global-to-local, align 4
  %v1_100030a0 = add i32 %v4_10003098, 20
  store i32 %v1_100030a0, i32* %r10.global-to-local, align 4
  %v0_100030a4 = load i32, i32* %r16.global-to-local, align 4
  %v1_100030a4 = trunc i32 %v0_100030a4 to i8
  %v3_100030a4 = add i32 %v4_10003098, 8
  %v4_100030a4 = inttoptr i32 %v3_100030a4 to i8*
  store i8 %v1_100030a4, i8* %v4_100030a4, align 1
  %v1_100030a8 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100030a8, i32* %r0.global-to-local, align 4
  %v0_100030ac = load i32, i32* %r17.global-to-local, align 4
  %v1_100030ac = load i32, i32* %r11.global-to-local, align 4
  %v2_100030ac = add i32 %v1_100030ac, 12
  %v3_100030ac = inttoptr i32 %v2_100030ac to i32*
  store i32 %v0_100030ac, i32* %v3_100030ac, align 4
  %v1_100030b0 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_100030b4 = load i32, i32* %r21.global-to-local, align 4
  %v1_100030b4 = trunc i32 %v0_100030b4 to i16
  %v2_100030b4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100030b4 = add i32 %v2_100030b4, 4
  %v4_100030b4 = inttoptr i32 %v3_100030b4 to i16*
  store i16 %v1_100030b4, i16* %v4_100030b4, align 2
  %v1_100030b8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100030b8 = inttoptr i32 %v1_100030b8 to i32*
  store i32 %v1_100030b0, i32* %v2_100030b8, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_100030c0 = load i32, i32* %r11.global-to-local, align 4
  %v3_100030c0 = add i32 %v2_100030c0, 9
  %v4_100030c0 = inttoptr i32 %v3_100030c0 to i8*
  store i8 17, i8* %v4_100030c0, align 1
  %v0_100030c4 = load i32, i32* %r15.global-to-local, align 4
  %v1_100030c4 = trunc i32 %v0_100030c4 to i8
  %v2_100030c4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100030c4 = add i32 %v2_100030c4, 1
  %v4_100030c4 = inttoptr i32 %v3_100030c4 to i8*
  store i8 %v1_100030c4, i8* %v4_100030c4, align 1
  %v0_100030c8 = load i32, i32* %r25.global-to-local, align 4
  %v1_100030c8 = trunc i32 %v0_100030c8 to i16
  %v2_100030c8 = load i32, i32* %r11.global-to-local, align 4
  %v3_100030c8 = add i32 %v2_100030c8, 2
  %v4_100030c8 = inttoptr i32 %v3_100030c8 to i16*
  store i16 %v1_100030c8, i16* %v4_100030c8, align 2
  %v3_100030cc = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100030cc, i32* %r9.global-to-local, align 4
  %v0_100030d0 = load i32, i32* %r27.global-to-local, align 4
  %v1_100030d0 = trunc i32 %v0_100030d0 to i16
  %v2_100030d0 = load i32, i32* %r11.global-to-local, align 4
  %v3_100030d0 = add i32 %v2_100030d0, 6
  %v4_100030d0 = inttoptr i32 %v3_100030d0 to i16*
  store i16 %v1_100030d0, i16* %v4_100030d0, align 2
  %v0_100030d4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100030d4 = add i32 %v0_100030d4, 1
  store i32 %v1_100030d4, i32* %r30.global-to-local, align 4
  %v1_100030d8 = mul i32 %v0_100030d4, 24
  store i32 %v1_100030d8, i32* %r9.global-to-local, align 4
  %v1_100030dc = load i32, i32* %r18.global-to-local, align 4
  %v2_100030dc = icmp slt i32 %v1_100030d4, %v1_100030dc
  %v0_100030e0 = load i32, i32* %r22.global-to-local, align 4
  %v1_100030e0 = trunc i32 %v0_100030e0 to i16
  %v2_100030e0 = load i32, i32* %r11.global-to-local, align 4
  %v3_100030e0 = add i32 %v2_100030e0, 20
  %v4_100030e0 = inttoptr i32 %v3_100030e0 to i16*
  store i16 %v1_100030e0, i16* %v4_100030e0, align 2
  %v0_100030e4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100030e4 = load i32, i32* @r31, align 4
  %v2_100030e4 = add i32 %v1_100030e4, %v0_100030e4
  store i32 %v2_100030e4, i32* %r9.global-to-local, align 4
  %v0_100030e8 = load i32, i32* %r26.global-to-local, align 4
  %v1_100030e8 = trunc i32 %v0_100030e8 to i16
  %v2_100030e8 = load i32, i32* %r10.global-to-local, align 4
  %v3_100030e8 = add i32 %v2_100030e8, 4
  %v4_100030e8 = inttoptr i32 %v3_100030e8 to i16*
  store i16 %v1_100030e8, i16* %v4_100030e8, align 2
  %v0_100030ec = load i32, i32* %r9.global-to-local, align 4
  %v1_100030ec = add i32 %v0_100030ec, 16
  %v2_100030ec = inttoptr i32 %v1_100030ec to i32*
  %v3_100030ec = load i32, i32* %v2_100030ec, align 4
  store i32 %v3_100030ec, i32* %r0.global-to-local, align 4
  %v0_100030f0 = load i32, i32* %r23.global-to-local, align 4
  %v1_100030f0 = trunc i32 %v0_100030f0 to i16
  %v2_100030f0 = load i32, i32* %r10.global-to-local, align 4
  %v3_100030f0 = add i32 %v2_100030f0, 2
  %v4_100030f0 = inttoptr i32 %v3_100030f0 to i16*
  store i16 %v1_100030f0, i16* %v4_100030f0, align 2
  %v0_100030f4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100030f4 = load i32, i32* %r11.global-to-local, align 4
  %v2_100030f4 = add i32 %v1_100030f4, 16
  %v3_100030f4 = inttoptr i32 %v2_100030f4 to i32*
  store i32 %v0_100030f4, i32* %v3_100030f4, align 4
  %v0_100030f8 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_100030f8, i32* %stack_var_-104, align 4
  br i1 %v2_100030dc, label %dec_label_pc_1000307c, label %dec_label_pc_10002e80.preheader

; uselistorder directives
  uselistorder i32 %v1_10003094, { 1, 0 }
  uselistorder i32 %v1_1000308c, { 1, 0 }
  uselistorder i32 %v0_10003030, { 1, 0 }
  uselistorder i32 %v0_10003020, { 1, 0 }
  uselistorder i32 %v0_10003010, { 1, 0 }
  uselistorder i32 %v1_10003008, { 1, 0 }
  uselistorder i32 %v1_10002f50, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10002f18, { 1, 0 }
  uselistorder i32 %v1_10002eac, { 1, 0 }
  uselistorder i32 %v1_10002e1c, { 1, 0 }
  uselistorder i32 %v1_10002e14, { 1, 0 }
  uselistorder i32 %v1_10002db0, { 2, 1, 0 }
  uselistorder i32* %stack_var_-104, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 21, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0 }
  uselistorder i32* %r29.global-to-local, { 0, 8, 10, 9, 1, 2, 4, 3, 5, 6, 7, 11 }
  uselistorder i32* %r26.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r25.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 1510, { 0, 5, 1, 6, 2, 7, 3, 8, 4, 9 }
  uselistorder i32 1460, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000303c, { 1, 0 }
  uselistorder label %dec_label_pc_10002f70, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10002ef0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002e80, { 1, 0 }
  uselistorder label %dec_label_pc_10002dc8, { 1, 0 }
}

define i32 @function_10003104(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10003104:
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r7.global-to-local, align 4
  store i32 %arg4, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-100 = alloca i32, align 4
  %v0_10003108 = load i32, i32* @lr, align 4
  store i32 %v0_10003108, i32* %r0.global-to-local, align 4
  %v0_1000310c = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r20.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  store i32 %v0_1000310c, i32* %r27.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v0_10003130 = load i32, i32* %r0.global-to-local, align 4
  %v0_10003158 = load i32, i32* @r28, align 4
  store i32 %arg5, i32* @r28, align 4
  %v0_10003160 = load i32, i32* @r29, align 4
  store i32 %arg4, i32* @r29, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 268448136, i32* @lr, align 4
  %v2_10003184 = call i32 @function_10009410(i32 %arg2, i32 4)
  store i32 %v2_10003184, i32* %r21.global-to-local, align 4
  %v0_1000318c = load i32, i32* @r28, align 4
  %v0_10003190 = load i32, i32* @r29, align 4
  store i32 %v0_10003190, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 268448160, i32* @lr, align 4
  %v4_1000319c = inttoptr i32 %v0_1000318c to i32*
  %v5_1000319c = call i32 @function_10000300(i32 %v0_10003190, i32* %v4_1000319c, i32 2, i32 0)
  store i32 65535, i32* %r6.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v0_100031ac = load i32, i32* @r28, align 4
  %v1_100031b0 = urem i32 %v5_1000319c, 256
  store i32 %v1_100031b0, i32* %r18.global-to-local, align 4
  %v0_100031b4 = load i32, i32* @r29, align 4
  store i32 %v0_100031b4, i32* %r3.global-to-local, align 4
  store i32 268448188, i32* @lr, align 4
  %v4_100031b8 = inttoptr i32 %v0_100031ac to i32*
  %v5_100031b8 = call i32 @function_10000300(i32 %v0_100031b4, i32* %v4_100031b8, i32 3, i32 65535)
  %v0_100031bc = load i32, i32* @r28, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 64, i32* %r6.global-to-local, align 4
  store i32 %v5_100031b8, i32* %r24.global-to-local, align 4
  %v0_100031cc = load i32, i32* @r29, align 4
  store i32 %v0_100031cc, i32* %r3.global-to-local, align 4
  store i32 268448212, i32* @lr, align 4
  %v4_100031d0 = inttoptr i32 %v0_100031bc to i32*
  %v5_100031d0 = call i32 @function_10000300(i32 %v0_100031cc, i32* %v4_100031d0, i32 4, i32 64)
  %v0_100031d4 = load i32, i32* @r28, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v1_100031e0 = urem i32 %v5_100031d0, 256
  store i32 %v1_100031e0, i32* %r19.global-to-local, align 4
  %v0_100031e4 = load i32, i32* @r29, align 4
  store i32 %v0_100031e4, i32* %r3.global-to-local, align 4
  store i32 268448236, i32* @lr, align 4
  %v4_100031e8 = inttoptr i32 %v0_100031d4 to i32*
  %v5_100031e8 = call i32 @function_10000300(i32 %v0_100031e4, i32* %v4_100031e8, i32 5, i32 0)
  store i32 65535, i32* %r6.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  %v0_100031f8 = load i32, i32* @r28, align 4
  %v1_100031fc = urem i32 %v5_100031e8, 256
  store i32 %v1_100031fc, i32* %r16.global-to-local, align 4
  %v0_10003200 = load i32, i32* @r29, align 4
  store i32 %v0_10003200, i32* %r3.global-to-local, align 4
  store i32 268448264, i32* @lr, align 4
  %v4_10003204 = inttoptr i32 %v0_100031f8 to i32*
  %v5_10003204 = call i32 @function_10000300(i32 %v0_10003200, i32* %v4_10003204, i32 6, i32 65535)
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 27015, i32* %r6.global-to-local, align 4
  %v0_10003210 = load i32, i32* @r28, align 4
  store i32 %v5_10003204, i32* %r25.global-to-local, align 4
  %v0_10003218 = load i32, i32* @r29, align 4
  store i32 %v0_10003218, i32* %r3.global-to-local, align 4
  store i32 268448288, i32* @lr, align 4
  %v4_1000321c = inttoptr i32 %v0_10003210 to i32*
  %v5_1000321c = call i32 @function_10000300(i32 %v0_10003218, i32* %v4_1000321c, i32 7, i32 27015)
  %v0_10003220 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10003220, i32* %stack_var_-100, align 4
  store i32 %v5_1000321c, i32* @r31, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268448304, i32* @lr, align 4
  %v0_1000322c = call i32 @function_1000879c()
  %v1_10003230 = load i32, i32* %r27.global-to-local, align 4
  %v2_10003230 = add i32 %v1_10003230, %v0_1000322c
  store i32 %v2_10003230, i32* %r17.global-to-local, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  store i32 268448316, i32* @lr, align 4
  %v1_10003238 = call i32 @function_1000780c(i32 10)
  store i32 10, i32* %r3.global-to-local, align 4
  %v3_10003244 = call i32 @function_10007758(i32 10, i32* nonnull %stack_var_-100)
  store i32 %v3_10003244, i32* @r29, align 4
  store i32 17, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268448348, i32* @lr, align 4
  %v3_10003258 = call i32 @function_100090b4(i32 2, i32 3, i32 17)
  store i32 %v3_10003258, i32* %r3.global-to-local, align 4
  %v3_1000325c = icmp eq i32 %v3_10003258, -1
  store i32 %v3_10003258, i32* %r22.global-to-local, align 4
  br i1 %v3_1000325c, label %dec_label_pc_10003558, label %dec_label_pc_10003268

dec_label_pc_10003268:                            ; preds = %dec_label_pc_10003104
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v2_10003274 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_10003274, i32* %r6.global-to-local, align 4
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268448388, i32* @lr, align 4
  %v4_10003280 = call i32 @function_10009078(i32 0, i32 3, i32 %v2_10003274, i32 4)
  store i32 %v4_10003280, i32* %r3.global-to-local, align 4
  %v3_10003284 = icmp eq i32 %v4_10003280, -1
  br i1 %v3_10003284, label %dec_label_pc_100035b8, label %dec_label_pc_1000328c

dec_label_pc_1000328c:                            ; preds = %dec_label_pc_10003268
  %v0_1000328c = load i32, i32* %r20.global-to-local, align 4
  %v1_1000328c = icmp slt i32 %v0_1000328c, 0
  %v3_1000328c = icmp eq i32 %v0_1000328c, 0
  store i1 %v1_1000328c, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_1000328c, i1* %cr4_eq.global-to-local, align 1
  %v0_10003290 = load i32, i32* %r24.global-to-local, align 4
  %v1_10003290 = urem i32 %v0_10003290, 65536
  store i32 %v1_10003290, i32* %r23.global-to-local, align 4
  %v0_10003294 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10003294, i32* %stack_var_-104, align 4
  %v0_10003298 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003298 = urem i32 %v0_10003298, 65536
  store i32 %v1_10003298, i32* %r24.global-to-local, align 4
  %v0_1000329c = load i32, i32* @r31, align 4
  %v1_1000329c = urem i32 %v0_1000329c, 65536
  store i32 %v1_1000329c, i32* %r25.global-to-local, align 4
  %tmp28 = icmp slt i32 %v0_1000328c, 1
  br i1 %tmp28, label %dec_label_pc_10003370, label %dec_label_pc_100032a4

dec_label_pc_100032a4:                            ; preds = %dec_label_pc_1000328c
  %v0_100032a4 = load i32, i32* %r16.global-to-local, align 4
  %v3_100032a4 = icmp eq i32 %v0_100032a4, 0
  store i32 4, i32* %r28.global-to-local, align 4
  store i32 5, i32* %r27.global-to-local, align 4
  store i32 16384, i32* %r26.global-to-local, align 4
  store i32 17, i32* %r16.global-to-local, align 4
  store i32 -1, i32* %r15.global-to-local, align 4
  br i1 %v3_100032a4, label %dec_label_pc_100032c8, label %dec_label_pc_10003498

dec_label_pc_100032c8:                            ; preds = %dec_label_pc_100032a4, %dec_label_pc_100032c8
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 268448468, i32* @lr, align 4
  %v2_100032d0 = call i32 @function_10009410(i32 128, i32 1)
  %v3_100032d4 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100032d4, i32* %r9.global-to-local, align 4
  %v0_100032d8 = load i32, i32* @r31, align 4
  %v1_100032d8 = mul i32 %v0_100032d8, 4
  store i32 %v1_100032d8, i32* %r0.global-to-local, align 4
  %v1_100032e0 = load i32, i32* %r21.global-to-local, align 4
  %v3_100032e0 = add i32 %v1_100032e0, %v1_100032d8
  %v4_100032e0 = inttoptr i32 %v3_100032e0 to i32*
  store i32 %v2_100032d0, i32* %v4_100032e0, align 4
  %v0_100032e4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100032e4 = mul i32 %v0_100032e4, 4
  store i32 %v1_100032e4, i32* %r3.global-to-local, align 4
  %v1_100032e8 = load i32, i32* %r21.global-to-local, align 4
  %v2_100032e8 = add i32 %v1_100032e8, %v1_100032e4
  %v3_100032e8 = inttoptr i32 %v2_100032e8 to i32*
  %v4_100032e8 = load i32, i32* %v3_100032e8, align 4
  store i32 %v4_100032e8, i32* %r3.global-to-local, align 4
  %v1_100032ec = inttoptr i32 %v4_100032e8 to i32*
  %v2_100032ec = load i32, i32* %v1_100032ec, align 4
  store i32 %v2_100032ec, i32* %r0.global-to-local, align 4
  %v1_100032f0 = add i32 %v4_100032e8, 20
  store i32 %v1_100032f0, i32* %r8.global-to-local, align 4
  %v0_100032f4 = load i32, i32* %r23.global-to-local, align 4
  %v1_100032f4 = trunc i32 %v0_100032f4 to i16
  %v3_100032f4 = add i32 %v4_100032e8, 4
  %v4_100032f4 = inttoptr i32 %v3_100032f4 to i16*
  store i16 %v1_100032f4, i16* %v4_100032f4, align 2
  %v1_100032f8 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100032f8, i32* %r0.global-to-local, align 4
  %v0_100032fc = load i32, i32* %r24.global-to-local, align 4
  %v1_100032fc = trunc i32 %v0_100032fc to i16
  %v2_100032fc = load i32, i32* %r3.global-to-local, align 4
  %v3_100032fc = add i32 %v2_100032fc, 20
  %v4_100032fc = inttoptr i32 %v3_100032fc to i16*
  store i16 %v1_100032fc, i16* %v4_100032fc, align 2
  %v1_10003300 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v1_10003304 = load i32, i32* %r3.global-to-local, align 4
  %v2_10003304 = inttoptr i32 %v1_10003304 to i32*
  store i32 %v1_10003300, i32* %v2_10003304, align 4
  %v0_10003308 = load i32, i32* %r18.global-to-local, align 4
  %v1_10003308 = trunc i32 %v0_10003308 to i8
  %v2_10003308 = load i32, i32* %r3.global-to-local, align 4
  %v3_10003308 = add i32 %v2_10003308, 1
  %v4_10003308 = inttoptr i32 %v3_10003308 to i8*
  store i8 %v1_10003308, i8* %v4_10003308, align 1
  %v3_1000330c = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1000330c, i32* %r9.global-to-local, align 4
  %v0_10003310 = load i32, i32* %r19.global-to-local, align 4
  %v1_10003310 = trunc i32 %v0_10003310 to i8
  %v2_10003310 = load i32, i32* %r3.global-to-local, align 4
  %v3_10003310 = add i32 %v2_10003310, 8
  %v4_10003310 = inttoptr i32 %v3_10003310 to i8*
  store i8 %v1_10003310, i8* %v4_10003310, align 1
  %v0_10003314 = load i32, i32* %r16.global-to-local, align 4
  %v1_10003314 = trunc i32 %v0_10003314 to i8
  %v2_10003314 = load i32, i32* %r3.global-to-local, align 4
  %v3_10003314 = add i32 %v2_10003314, 9
  %v4_10003314 = inttoptr i32 %v3_10003314 to i8*
  store i8 %v1_10003314, i8* %v4_10003314, align 1
  %v0_10003318 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003318 = add i32 %v0_10003318, 32
  %v1_1000331c = trunc i32 %v1_10003318 to i16
  %v2_1000331c = load i32, i32* %r3.global-to-local, align 4
  %v3_1000331c = add i32 %v2_1000331c, 2
  %v4_1000331c = inttoptr i32 %v3_1000331c to i16*
  store i16 %v1_1000331c, i16* %v4_1000331c, align 2
  %v3_10003320 = load i32, i32* %stack_var_-104, align 4
  %v3_10003324 = load i32, i32* @global_var_1001b448.12, align 4
  store i32 %v3_10003324, i32* %r0.global-to-local, align 4
  %v1_10003328 = mul i32 %v3_10003320, 24
  store i32 %v1_10003328, i32* %r9.global-to-local, align 4
  %v0_1000332c = load i32, i32* %r25.global-to-local, align 4
  %v1_1000332c = trunc i32 %v0_1000332c to i16
  %v2_1000332c = load i32, i32* %r8.global-to-local, align 4
  %v3_1000332c = add i32 %v2_1000332c, 2
  %v4_1000332c = inttoptr i32 %v3_1000332c to i16*
  store i16 %v1_1000332c, i16* %v4_1000332c, align 2
  %v0_10003330 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003330 = load i32, i32* %r3.global-to-local, align 4
  %v2_10003330 = add i32 %v1_10003330, 12
  %v3_10003330 = inttoptr i32 %v2_10003330 to i32*
  store i32 %v0_10003330, i32* %v3_10003330, align 4
  %v0_10003334 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003334 = load i32, i32* @r30, align 4
  %v2_10003334 = add i32 %v1_10003334, %v0_10003334
  store i32 %v2_10003334, i32* %r9.global-to-local, align 4
  %v1_10003338 = add i32 %v2_10003334, 16
  %v2_10003338 = inttoptr i32 %v1_10003338 to i32*
  %v3_10003338 = load i32, i32* %v2_10003338, align 4
  store i32 %v3_10003338, i32* %r9.global-to-local, align 4
  %v3_1000333c = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1000333c, i32* %r11.global-to-local, align 4
  %v1_10003340 = load i32, i32* %r3.global-to-local, align 4
  %v2_10003340 = add i32 %v1_10003340, 16
  %v3_10003340 = inttoptr i32 %v2_10003340 to i32*
  store i32 %v3_10003338, i32* %v3_10003340, align 4
  %v0_10003344 = load i32, i32* %r15.global-to-local, align 4
  %v1_10003344 = load i32, i32* %r3.global-to-local, align 4
  %v2_10003344 = add i32 %v1_10003344, 28
  %v3_10003344 = inttoptr i32 %v2_10003344 to i32*
  store i32 %v0_10003344, i32* %v3_10003344, align 4
  %v0_10003348 = load i32, i32* %r11.global-to-local, align 4
  %v1_10003348 = add i32 %v0_10003348, 12
  store i32 %v1_10003348, i32* %r0.global-to-local, align 4
  %v1_1000334c = trunc i32 %v1_10003348 to i16
  %v2_1000334c = load i32, i32* %r8.global-to-local, align 4
  %v3_1000334c = add i32 %v2_1000334c, 4
  %v4_1000334c = inttoptr i32 %v3_1000334c to i16*
  store i16 %v1_1000334c, i16* %v4_1000334c, align 2
  %v0_10003350 = load i32, i32* %r3.global-to-local, align 4
  %v1_10003350 = add i32 %v0_10003350, 32
  store i32 %v1_10003350, i32* %r3.global-to-local, align 4
  %v3_10003354 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_10003354, i32* %r5.global-to-local, align 4
  store i32 268448604, i32* @lr, align 4
  %v3_10003358 = call i32 @function_10007d10(i32 %v1_10003350, i32 %v3_10003354, i32 %v3_10003354)
  store i32 %v3_10003358, i32* %r3.global-to-local, align 4
  %v3_1000335c = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_1000335c, i32* %r9.global-to-local, align 4
  %v1_10003360 = add i32 %v3_1000335c, 1
  %v1_10003364 = load i32, i32* %r20.global-to-local, align 4
  %v2_10003364 = icmp slt i32 %v1_10003360, %v1_10003364
  store i32 %v1_10003360, i32* %stack_var_-104, align 4
  br i1 %v2_10003364, label %dec_label_pc_100032c8, label %dec_label_pc_10003370

dec_label_pc_10003370:                            ; preds = %dec_label_pc_1000328c, %dec_label_pc_100032c8, %dec_label_pc_10003498, %dec_label_pc_10003548
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %v0_10003378 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003378 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10003378 = or i1 %v0_10003378, %v1_10003378
  br i1 %v2_10003378, label %dec_label_pc_10003548, label %dec_label_pc_1000337c

dec_label_pc_1000337c:                            ; preds = %dec_label_pc_10003370
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10003418

dec_label_pc_10003388:                            ; preds = %dec_label_pc_10003418
  %v0_10003388 = load i32, i32* %r23.global-to-local, align 4
  %v4_10003388 = icmp eq i32 %v0_10003388, 65535
  br i1 %v4_10003388, label %dec_label_pc_1000346c, label %dec_label_pc_10003390

dec_label_pc_10003390:                            ; preds = %dec_label_pc_10003440.dec_label_pc_10003390_crit_edge, %dec_label_pc_10003388
  %v1_10003390 = phi i32 [ %v1_10003390.pre, %dec_label_pc_10003440.dec_label_pc_10003390_crit_edge ], [ 65535, %dec_label_pc_10003388 ]
  %v0_10003390 = load i32, i32* %r24.global-to-local, align 4
  %v4_10003390 = icmp eq i32 %v0_10003390, %v1_10003390
  br i1 %v4_10003390, label %dec_label_pc_1000347c, label %dec_label_pc_10003398

dec_label_pc_10003398:                            ; preds = %dec_label_pc_1000346c.dec_label_pc_10003398_crit_edge, %dec_label_pc_10003390
  %v1_10003398 = phi i32 [ %v1_10003398.pre, %dec_label_pc_1000346c.dec_label_pc_10003398_crit_edge ], [ %v1_10003390, %dec_label_pc_10003390 ]
  %v0_10003398 = load i32, i32* %r25.global-to-local, align 4
  %v4_10003398 = icmp eq i32 %v0_10003398, %v1_10003398
  br i1 %v4_10003398, label %dec_label_pc_1000348c, label %dec_label_pc_100033a0

dec_label_pc_100033a0:                            ; preds = %dec_label_pc_1000347c, %dec_label_pc_10003398, %dec_label_pc_1000348c
  %v0_100033a0 = load i32, i32* %r26.global-to-local, align 4
  %v1_100033a0 = trunc i32 %v0_100033a0 to i16
  %v2_100033a0 = load i32, i32* %r28.global-to-local, align 4
  %v3_100033a0 = add i32 %v2_100033a0, 10
  %v4_100033a0 = inttoptr i32 %v3_100033a0 to i16*
  store i16 %v1_100033a0, i16* %v4_100033a0, align 2
  %v0_100033a8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100033a8, i32* @r3, align 4
  %v2_100033ac = call i32 @function_10003ca8(i32 %v0_100033a8, i32 20)
  %v3_100033ac = trunc i32 %v2_100033ac to i16
  store i32 %v2_100033ac, i32* %r3.global-to-local, align 4
  %v3_100033b0 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_100033b0, i32* %r6.global-to-local, align 4
  %v3_100033b4 = load i32, i32* %r28.global-to-local, align 4
  %v4_100033b4 = add i32 %v3_100033b4, 10
  %v5_100033b4 = inttoptr i32 %v4_100033b4 to i16*
  store i16 %v3_100033ac, i16* %v5_100033b4, align 2
  %v0_100033b8 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_100033b8, i32* @r4, align 4
  %v0_100033bc = load i32, i32* %r26.global-to-local, align 4
  %v1_100033bc = trunc i32 %v0_100033bc to i16
  %v3_100033bc = add i32 %v0_100033b8, 6
  %v4_100033bc = inttoptr i32 %v3_100033bc to i16*
  store i16 %v1_100033bc, i16* %v4_100033bc, align 2
  %v0_100033c0 = load i32, i32* %r6.global-to-local, align 4
  %v1_100033c0 = add i32 %v0_100033c0, 12
  store i32 %v1_100033c0, i32* %r6.global-to-local, align 4
  %v0_100033c4 = load i32, i32* %r27.global-to-local, align 4
  %v1_100033c4 = add i32 %v0_100033c4, 4
  %v2_100033c4 = inttoptr i32 %v1_100033c4 to i16*
  %v3_100033c4 = load i16, i16* %v2_100033c4, align 2
  %v4_100033c4 = zext i16 %v3_100033c4 to i32
  store i32 %v4_100033c4, i32* %r5.global-to-local, align 4
  %v0_100033c8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100033c8, i32* %r3.global-to-local, align 4
  %v4_100033cc = call i32 @function_10003d0c(i32 %v0_100033c8, i32 %v0_100033b8, i32 %v4_100033c4, i32 %v1_100033c0)
  %v5_100033cc = trunc i32 %v4_100033cc to i16
  store i32 %v4_100033cc, i32* %r3.global-to-local, align 4
  %v3_100033d0 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100033d0, i32* %r7.global-to-local, align 4
  %v0_100033d4 = load i32, i32* %r27.global-to-local, align 4
  %v1_100033d4 = add i32 %v0_100033d4, 2
  %v2_100033d4 = inttoptr i32 %v1_100033d4 to i16*
  %v3_100033d4 = load i16, i16* %v2_100033d4, align 2
  %v4_100033d4 = zext i16 %v3_100033d4 to i32
  store i32 %v4_100033d4, i32* %r0.global-to-local, align 4
  %v0_100033d8 = load i32, i32* %r28.global-to-local, align 4
  %v1_100033dc = mul i32 %v3_100033d0, 24
  store i32 %v1_100033dc, i32* %r7.global-to-local, align 4
  %v3_100033e0 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_100033e0, i32* %r5.global-to-local, align 4
  %v4_100033e4 = add i32 %v0_100033d4, 6
  %v5_100033e4 = inttoptr i32 %v4_100033e4 to i16*
  store i16 %v5_100033cc, i16* %v5_100033e4, align 2
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_100033ec = load i32, i32* %r7.global-to-local, align 4
  %v1_100033ec = load i32, i32* @r30, align 4
  %v2_100033ec = add i32 %v1_100033ec, %v0_100033ec
  store i32 %v2_100033ec, i32* %r7.global-to-local, align 4
  %v0_100033f0 = load i32, i32* %r5.global-to-local, align 4
  %v1_100033f0 = add i32 %v0_100033f0, 32
  store i32 %v1_100033f0, i32* %r5.global-to-local, align 4
  %v0_100033f4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100033f4 = trunc i32 %v0_100033f4 to i16
  %v3_100033f4 = add i32 %v2_100033ec, 2
  %v4_100033f4 = inttoptr i32 %v3_100033f4 to i16*
  store i16 %v1_100033f4, i16* %v4_100033f4, align 2
  %v0_100033f8 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100033f8, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268448772, i32* @lr, align 4
  %v6_10003400 = call i32 @function_10009038(i32 %v0_100033f8, i32 %v0_100033d8, i32 %v1_100033f0, i32 16384, i32 %v2_100033ec, i32 16)
  store i32 %v6_10003400, i32* %r3.global-to-local, align 4
  %v3_10003404 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10003404, i32* %r9.global-to-local, align 4
  %v1_10003408 = add i32 %v3_10003404, 1
  store i32 %v1_10003408, i32* %r11.global-to-local, align 4
  %v1_1000340c = load i32, i32* %r20.global-to-local, align 4
  %v2_1000340c = icmp slt i32 %v1_10003408, %v1_1000340c
  store i32 %v1_10003408, i32* %stack_var_-104, align 4
  br i1 %v2_1000340c, label %dec_label_pc_10003418, label %dec_label_pc_10003548

dec_label_pc_10003418:                            ; preds = %dec_label_pc_100033a0, %dec_label_pc_1000337c
  %v0_10003428 = phi i32 [ %v1_10003408, %dec_label_pc_100033a0 ], [ 0, %dec_label_pc_1000337c ]
  %v1_10003418 = mul i32 %v0_10003428, 24
  store i32 65535, i32* @r31, align 4
  %v1_10003424 = load i32, i32* @r30, align 4
  %v2_10003424 = add i32 %v1_10003424, %v1_10003418
  %v1_10003428 = mul i32 %v0_10003428, 4
  store i32 %v1_10003428, i32* %r0.global-to-local, align 4
  %v1_1000342c = add i32 %v2_10003424, 20
  %v2_1000342c = inttoptr i32 %v1_1000342c to i8*
  %v3_1000342c = load i8, i8* %v2_1000342c, align 1
  %v4_1000342c = zext i8 %v3_1000342c to i32
  store i32 %v4_1000342c, i32* %r9.global-to-local, align 4
  %v0_10003430 = load i32, i32* %r21.global-to-local, align 4
  %v2_10003430 = add i32 %v0_10003430, %v1_10003428
  %v3_10003430 = inttoptr i32 %v2_10003430 to i32*
  %v4_10003430 = load i32, i32* %v3_10003430, align 4
  store i32 %v4_10003430, i32* %r28.global-to-local, align 4
  %v2_10003434 = icmp ugt i8 %v3_1000342c, 31
  %v1_10003438 = add i32 %v4_10003430, 20
  store i32 %v1_10003438, i32* %r27.global-to-local, align 4
  br i1 %v2_10003434, label %dec_label_pc_10003388, label %dec_label_pc_10003440

dec_label_pc_10003440:                            ; preds = %dec_label_pc_10003418
  %v1_10003440 = add i32 %v2_10003424, 16
  %v2_10003440 = inttoptr i32 %v1_10003440 to i32*
  %v3_10003440 = load i32, i32* %v2_10003440, align 4
  store i32 %v3_10003440, i32* %r29.global-to-local, align 4
  %v0_10003444 = call i32 @function_10005258()
  store i32 %v0_10003444, i32* %r3.global-to-local, align 4
  %v3_10003448 = load i32, i32* %stack_var_-104, align 4
  %v0_1000344c = load i32, i32* %r23.global-to-local, align 4
  %v1_1000344c = load i32, i32* @r31, align 4
  %v4_1000344c = icmp eq i32 %v0_1000344c, %v1_1000344c
  %v1_10003450 = mul i32 %v3_10003448, 24
  %v1_10003454 = load i32, i32* @r30, align 4
  %v2_10003454 = add i32 %v1_10003454, %v1_10003450
  store i32 %v2_10003454, i32* %r9.global-to-local, align 4
  %v1_10003458 = add i32 %v2_10003454, 20
  %v2_10003458 = inttoptr i32 %v1_10003458 to i8*
  %v3_10003458 = load i8, i8* %v2_10003458, align 1
  %v4_10003458 = zext i8 %v3_10003458 to i32
  store i32 %v4_10003458, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10003458, 64
  %v2_1000345c = zext i8 %tmp to i32
  %v3_1000345c = lshr i32 %v0_10003444, %v2_1000345c
  store i32 %v3_1000345c, i32* %r3.global-to-local, align 4
  %v0_10003460 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003460 = add i32 %v3_1000345c, %v0_10003460
  store i32 %v2_10003460, i32* %r29.global-to-local, align 4
  %v1_10003464 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003464 = add i32 %v1_10003464, 16
  %v3_10003464 = inttoptr i32 %v2_10003464 to i32*
  store i32 %v2_10003460, i32* %v3_10003464, align 4
  br i1 %v4_1000344c, label %dec_label_pc_1000346c, label %dec_label_pc_10003440.dec_label_pc_10003390_crit_edge

dec_label_pc_10003440.dec_label_pc_10003390_crit_edge: ; preds = %dec_label_pc_10003440
  %v1_10003390.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10003390

dec_label_pc_1000346c:                            ; preds = %dec_label_pc_10003440, %dec_label_pc_10003388
  %v0_1000346c = call i32 @function_10005258()
  %v1_1000346c = trunc i32 %v0_1000346c to i16
  store i32 %v0_1000346c, i32* %r3.global-to-local, align 4
  %v0_10003470 = load i32, i32* %r24.global-to-local, align 4
  %v1_10003470 = load i32, i32* @r31, align 4
  %v4_10003470 = icmp eq i32 %v0_10003470, %v1_10003470
  %v3_10003474 = load i32, i32* %r28.global-to-local, align 4
  %v4_10003474 = add i32 %v3_10003474, 4
  %v5_10003474 = inttoptr i32 %v4_10003474 to i16*
  store i16 %v1_1000346c, i16* %v5_10003474, align 2
  br i1 %v4_10003470, label %dec_label_pc_1000347c, label %dec_label_pc_1000346c.dec_label_pc_10003398_crit_edge

dec_label_pc_1000346c.dec_label_pc_10003398_crit_edge: ; preds = %dec_label_pc_1000346c
  %v1_10003398.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10003398

dec_label_pc_1000347c:                            ; preds = %dec_label_pc_1000346c, %dec_label_pc_10003390
  %v0_1000347c = call i32 @function_10005258()
  %v1_1000347c = trunc i32 %v0_1000347c to i16
  store i32 %v0_1000347c, i32* %r3.global-to-local, align 4
  %v0_10003480 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003480 = load i32, i32* @r31, align 4
  %v4_10003480 = icmp eq i32 %v0_10003480, %v1_10003480
  %v3_10003484 = load i32, i32* %r28.global-to-local, align 4
  %v4_10003484 = add i32 %v3_10003484, 20
  %v5_10003484 = inttoptr i32 %v4_10003484 to i16*
  store i16 %v1_1000347c, i16* %v5_10003484, align 2
  br i1 %v4_10003480, label %dec_label_pc_1000348c, label %dec_label_pc_100033a0

dec_label_pc_1000348c:                            ; preds = %dec_label_pc_1000347c, %dec_label_pc_10003398
  %v0_1000348c = call i32 @function_10005258()
  %v1_1000348c = trunc i32 %v0_1000348c to i16
  store i32 %v0_1000348c, i32* %r3.global-to-local, align 4
  %v3_10003490 = load i32, i32* %r27.global-to-local, align 4
  %v4_10003490 = add i32 %v3_10003490, 2
  %v5_10003490 = inttoptr i32 %v4_10003490 to i16*
  store i16 %v1_1000348c, i16* %v5_10003490, align 2
  br label %dec_label_pc_100033a0

dec_label_pc_10003498:                            ; preds = %dec_label_pc_100032a4, %dec_label_pc_10003498
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 268448932, i32* @lr, align 4
  %v2_100034a0 = call i32 @function_10009410(i32 128, i32 1)
  %v3_100034a4 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100034a4, i32* %r9.global-to-local, align 4
  %v0_100034a8 = load i32, i32* @r31, align 4
  %v1_100034a8 = mul i32 %v0_100034a8, 4
  store i32 %v1_100034a8, i32* %r0.global-to-local, align 4
  %v1_100034b0 = load i32, i32* %r21.global-to-local, align 4
  %v3_100034b0 = add i32 %v1_100034b0, %v1_100034a8
  %v4_100034b0 = inttoptr i32 %v3_100034b0 to i32*
  store i32 %v2_100034a0, i32* %v4_100034b0, align 4
  %v0_100034b4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100034b4 = mul i32 %v0_100034b4, 4
  store i32 %v1_100034b4, i32* %r3.global-to-local, align 4
  %v1_100034b8 = load i32, i32* %r21.global-to-local, align 4
  %v2_100034b8 = add i32 %v1_100034b8, %v1_100034b4
  %v3_100034b8 = inttoptr i32 %v2_100034b8 to i32*
  %v4_100034b8 = load i32, i32* %v3_100034b8, align 4
  store i32 %v4_100034b8, i32* %r3.global-to-local, align 4
  %v1_100034bc = inttoptr i32 %v4_100034b8 to i32*
  %v2_100034bc = load i32, i32* %v1_100034bc, align 4
  store i32 %v2_100034bc, i32* %r0.global-to-local, align 4
  %v1_100034c0 = add i32 %v4_100034b8, 20
  store i32 %v1_100034c0, i32* %r8.global-to-local, align 4
  %v0_100034c4 = load i32, i32* %r23.global-to-local, align 4
  %v1_100034c4 = trunc i32 %v0_100034c4 to i16
  %v3_100034c4 = add i32 %v4_100034b8, 4
  %v4_100034c4 = inttoptr i32 %v3_100034c4 to i16*
  store i16 %v1_100034c4, i16* %v4_100034c4, align 2
  %v1_100034c8 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100034c8, i32* %r0.global-to-local, align 4
  %v0_100034cc = load i32, i32* %r26.global-to-local, align 4
  %v1_100034cc = trunc i32 %v0_100034cc to i16
  %v2_100034cc = load i32, i32* %r3.global-to-local, align 4
  %v3_100034cc = add i32 %v2_100034cc, 6
  %v4_100034cc = inttoptr i32 %v3_100034cc to i16*
  store i16 %v1_100034cc, i16* %v4_100034cc, align 2
  %v1_100034d0 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_100034d4 = load i32, i32* %r24.global-to-local, align 4
  %v1_100034d4 = trunc i32 %v0_100034d4 to i16
  %v2_100034d4 = load i32, i32* %r3.global-to-local, align 4
  %v3_100034d4 = add i32 %v2_100034d4, 20
  %v4_100034d4 = inttoptr i32 %v3_100034d4 to i16*
  store i16 %v1_100034d4, i16* %v4_100034d4, align 2
  %v1_100034d8 = load i32, i32* %r3.global-to-local, align 4
  %v2_100034d8 = inttoptr i32 %v1_100034d8 to i32*
  store i32 %v1_100034d0, i32* %v2_100034d8, align 4
  %v0_100034dc = load i32, i32* %r18.global-to-local, align 4
  %v1_100034dc = trunc i32 %v0_100034dc to i8
  %v2_100034dc = load i32, i32* %r3.global-to-local, align 4
  %v3_100034dc = add i32 %v2_100034dc, 1
  %v4_100034dc = inttoptr i32 %v3_100034dc to i8*
  store i8 %v1_100034dc, i8* %v4_100034dc, align 1
  %v3_100034e0 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_100034e0, i32* %r9.global-to-local, align 4
  %v0_100034e4 = load i32, i32* %r19.global-to-local, align 4
  %v1_100034e4 = trunc i32 %v0_100034e4 to i8
  %v2_100034e4 = load i32, i32* %r3.global-to-local, align 4
  %v3_100034e4 = add i32 %v2_100034e4, 8
  %v4_100034e4 = inttoptr i32 %v3_100034e4 to i8*
  store i8 %v1_100034e4, i8* %v4_100034e4, align 1
  %v0_100034e8 = load i32, i32* %r16.global-to-local, align 4
  %v1_100034e8 = trunc i32 %v0_100034e8 to i8
  %v2_100034e8 = load i32, i32* %r3.global-to-local, align 4
  %v3_100034e8 = add i32 %v2_100034e8, 9
  %v4_100034e8 = inttoptr i32 %v3_100034e8 to i8*
  store i8 %v1_100034e8, i8* %v4_100034e8, align 1
  %v0_100034ec = load i32, i32* %r9.global-to-local, align 4
  %v1_100034ec = add i32 %v0_100034ec, 32
  %v1_100034f0 = trunc i32 %v1_100034ec to i16
  %v2_100034f0 = load i32, i32* %r3.global-to-local, align 4
  %v3_100034f0 = add i32 %v2_100034f0, 2
  %v4_100034f0 = inttoptr i32 %v3_100034f0 to i16*
  store i16 %v1_100034f0, i16* %v4_100034f0, align 2
  %v3_100034f4 = load i32, i32* %stack_var_-104, align 4
  %v3_100034f8 = load i32, i32* @global_var_1001b448.12, align 4
  store i32 %v3_100034f8, i32* %r0.global-to-local, align 4
  %v1_100034fc = mul i32 %v3_100034f4, 24
  store i32 %v1_100034fc, i32* %r9.global-to-local, align 4
  %v0_10003500 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003500 = trunc i32 %v0_10003500 to i16
  %v2_10003500 = load i32, i32* %r8.global-to-local, align 4
  %v3_10003500 = add i32 %v2_10003500, 2
  %v4_10003500 = inttoptr i32 %v3_10003500 to i16*
  store i16 %v1_10003500, i16* %v4_10003500, align 2
  %v0_10003504 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003504 = load i32, i32* %r3.global-to-local, align 4
  %v2_10003504 = add i32 %v1_10003504, 12
  %v3_10003504 = inttoptr i32 %v2_10003504 to i32*
  store i32 %v0_10003504, i32* %v3_10003504, align 4
  %v0_10003508 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003508 = load i32, i32* @r30, align 4
  %v2_10003508 = add i32 %v1_10003508, %v0_10003508
  store i32 %v2_10003508, i32* %r9.global-to-local, align 4
  %v1_1000350c = add i32 %v2_10003508, 16
  %v2_1000350c = inttoptr i32 %v1_1000350c to i32*
  %v3_1000350c = load i32, i32* %v2_1000350c, align 4
  store i32 %v3_1000350c, i32* %r9.global-to-local, align 4
  %v3_10003510 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_10003510, i32* %r11.global-to-local, align 4
  %v1_10003514 = load i32, i32* %r3.global-to-local, align 4
  %v2_10003514 = add i32 %v1_10003514, 16
  %v3_10003514 = inttoptr i32 %v2_10003514 to i32*
  store i32 %v3_1000350c, i32* %v3_10003514, align 4
  %v0_10003518 = load i32, i32* %r15.global-to-local, align 4
  %v1_10003518 = load i32, i32* %r3.global-to-local, align 4
  %v2_10003518 = add i32 %v1_10003518, 28
  %v3_10003518 = inttoptr i32 %v2_10003518 to i32*
  store i32 %v0_10003518, i32* %v3_10003518, align 4
  %v0_1000351c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000351c = add i32 %v0_1000351c, 12
  store i32 %v1_1000351c, i32* %r0.global-to-local, align 4
  %v1_10003520 = trunc i32 %v1_1000351c to i16
  %v2_10003520 = load i32, i32* %r8.global-to-local, align 4
  %v3_10003520 = add i32 %v2_10003520, 4
  %v4_10003520 = inttoptr i32 %v3_10003520 to i16*
  store i16 %v1_10003520, i16* %v4_10003520, align 2
  %v0_10003524 = load i32, i32* %r3.global-to-local, align 4
  %v1_10003524 = add i32 %v0_10003524, 32
  store i32 %v1_10003524, i32* %r3.global-to-local, align 4
  %v3_10003528 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_10003528, i32* %r5.global-to-local, align 4
  store i32 268449072, i32* @lr, align 4
  %v3_1000352c = call i32 @function_10007d10(i32 %v1_10003524, i32 %v3_10003528, i32 %v3_10003528)
  store i32 %v3_1000352c, i32* %r3.global-to-local, align 4
  %v3_10003530 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10003530, i32* %r9.global-to-local, align 4
  %v1_10003534 = add i32 %v3_10003530, 1
  %v1_10003538 = load i32, i32* %r20.global-to-local, align 4
  %v2_10003538 = icmp slt i32 %v1_10003534, %v1_10003538
  store i32 %v1_10003534, i32* %stack_var_-104, align 4
  br i1 %v2_10003538, label %dec_label_pc_10003498, label %dec_label_pc_10003370

dec_label_pc_10003548:                            ; preds = %dec_label_pc_100033a0, %dec_label_pc_10003370
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268449104, i32* @lr, align 4
  %v0_1000354c = call i32 @function_1000879c()
  store i32 %v0_1000354c, i32* %r3.global-to-local, align 4
  %v0_10003550 = load i32, i32* %r17.global-to-local, align 4
  %v2_10003550 = icmp slt i32 %v0_10003550, %v0_1000354c
  br i1 %v2_10003550, label %dec_label_pc_10003558, label %dec_label_pc_10003370

dec_label_pc_10003558:                            ; preds = %dec_label_pc_10003548, %dec_label_pc_10003104, %dec_label_pc_100035b8
  store i32 %v0_10003130, i32* %r0.global-to-local, align 4
  %v1_1000356c = call %0 @__asm_mtcrf(i32 8, i32 %v0_1000310c)
  store i32 %v0_10003158, i32* %r28.global-to-local, align 4
  store i32 %v0_10003160, i32* %r29.global-to-local, align 4
  %v0_100035b4 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100035b4

dec_label_pc_100035b8:                            ; preds = %dec_label_pc_10003268
  %v0_100035b8 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100035b8, i32* %r3.global-to-local, align 4
  store i32 268449216, i32* @lr, align 4
  %v0_100035bc = call i32 @function_100083cc()
  store i32 %v0_100035bc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003558

; uselistorder directives
  uselistorder i32 %v1_100034b4, { 1, 0 }
  uselistorder i32 %v1_100034a8, { 1, 0 }
  uselistorder i32 %v0_1000348c, { 1, 0 }
  uselistorder i32 %v0_1000347c, { 1, 0 }
  uselistorder i32 %v0_1000346c, { 1, 0 }
  uselistorder i32 %v1_10003428, { 1, 0 }
  uselistorder i32 %v1_10003408, { 1, 0, 2, 3 }
  uselistorder i32 %v4_100033cc, { 1, 0 }
  uselistorder i32 %v2_100033ac, { 1, 0 }
  uselistorder i32 %v1_100032e4, { 1, 0 }
  uselistorder i32 %v1_100032d8, { 1, 0 }
  uselistorder i32* %stack_var_-100, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9 }
  uselistorder i32* %stack_var_-104, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 15 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 47, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 0 }
  uselistorder i32* %r28.global-to-local, { 0, 1, 2, 3, 9, 4, 5, 6, 7, 8, 10 }
  uselistorder i32* %r27.global-to-local, { 0, 4, 1, 2, 3, 5, 6, 7 }
  uselistorder i32* %r26.global-to-local, { 3, 0, 1, 2, 4, 5, 6, 7 }
  uselistorder i32* %r22.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i8 31, { 0, 3, 4, 5, 6, 1, 2 }
  uselistorder label %dec_label_pc_10003558, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10003498, { 1, 0 }
  uselistorder label %dec_label_pc_100033a0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10003370, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_100032c8, { 1, 0 }
}

define i32 @function_100035c4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_100035c4:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r7.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-2200 = alloca i32, align 4
  %stack_var_-2196 = alloca i32, align 4
  %stack_var_-2164 = alloca i32, align 4
  %v0_100035c4 = load i32, i32* @lr, align 4
  store i32 %v0_100035c4, i32* %r0.global-to-local, align 4
  %v0_100035cc = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r19.global-to-local, align 4
  %v0_100035d8 = load i32, i32* @r26, align 4
  store i32 %v0_100035cc, i32* %r26.global-to-local, align 4
  %v0_100035e0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-2200, align 4
  store i32 %arg3, i32* %r17.global-to-local, align 4
  %v0_10003614 = load i32, i32* @r24, align 4
  %v0_10003618 = load i32, i32* @r25, align 4
  store i32 %arg5, i32* @r28, align 4
  %v0_10003624 = load i32, i32* @r29, align 4
  store i32 %arg4, i32* @r29, align 4
  %v0_1000362c = load i32, i32* @r31, align 4
  %v0_1000363c = load i32, i32* @r27, align 4
  %v0_10003640 = load i32, i32* @r30, align 4
  store i32 268449352, i32* @lr, align 4
  %v2_10003644 = call i32 @function_10009410(i32 %arg2, i32 4)
  store i32 %v2_10003644, i32* %r20.global-to-local, align 4
  %v0_1000364c = load i32, i32* @r28, align 4
  %v0_10003658 = load i32, i32* @r29, align 4
  store i32 %v0_10003658, i32* %r3.global-to-local, align 4
  store i32 268449376, i32* @lr, align 4
  %v4_1000365c = inttoptr i32 %v0_1000364c to i32*
  %v5_1000365c = call i32 @function_10000300(i32 %v0_10003658, i32* %v4_1000365c, i32 2, i32 0)
  %v0_10003668 = load i32, i32* @r28, align 4
  %v5_10003670 = trunc i32 %v5_1000365c to i8
  %v0_10003678 = load i32, i32* @r29, align 4
  store i32 %v0_10003678, i32* %r3.global-to-local, align 4
  store i32 268449408, i32* @lr, align 4
  %v4_1000367c = inttoptr i32 %v0_10003668 to i32*
  %v5_1000367c = call i32 @function_10000300(i32 %v0_10003678, i32* %v4_1000367c, i32 3, i32 65535)
  %v0_10003680 = load i32, i32* @r28, align 4
  store i32 %v5_1000367c, i32* %r14.global-to-local, align 4
  %v0_10003690 = load i32, i32* @r29, align 4
  store i32 %v0_10003690, i32* %r3.global-to-local, align 4
  store i32 268449432, i32* @lr, align 4
  %v4_10003694 = inttoptr i32 %v0_10003680 to i32*
  %v5_10003694 = call i32 @function_10000300(i32 %v0_10003690, i32* %v4_10003694, i32 4, i32 64)
  %v0_10003698 = load i32, i32* @r28, align 4
  %v5_100036a4 = trunc i32 %v5_10003694 to i8
  %v0_100036ac = load i32, i32* @r29, align 4
  store i32 %v0_100036ac, i32* %r3.global-to-local, align 4
  store i32 268449460, i32* @lr, align 4
  %v4_100036b0 = inttoptr i32 %v0_10003698 to i32*
  %v5_100036b0 = call i32 @function_10000300(i32 %v0_100036ac, i32* %v4_100036b0, i32 5, i32 0)
  %v0_100036b8 = load i32, i32* @r28, align 4
  %v1_100036c4 = urem i32 %v5_100036b0, 256
  store i32 %v1_100036c4, i32* %r25.global-to-local, align 4
  %v0_100036c8 = load i32, i32* @r29, align 4
  store i32 %v0_100036c8, i32* %r3.global-to-local, align 4
  store i32 268449488, i32* @lr, align 4
  %v4_100036cc = inttoptr i32 %v0_100036b8 to i32*
  %v5_100036cc = call i32 @function_10000300(i32 %v0_100036c8, i32* %v4_100036cc, i32 6, i32 65535)
  %v0_100036d0 = load i32, i32* @r28, align 4
  store i32 %v5_100036cc, i32* %r15.global-to-local, align 4
  %v0_100036e0 = load i32, i32* @r29, align 4
  store i32 %v0_100036e0, i32* %r3.global-to-local, align 4
  store i32 268449512, i32* @lr, align 4
  %v4_100036e4 = inttoptr i32 %v0_100036d0 to i32*
  %v5_100036e4 = call i32 @function_10000300(i32 %v0_100036e0, i32* %v4_100036e4, i32 7, i32 53)
  %v0_100036ec = load i32, i32* @r28, align 4
  store i32 %v5_100036e4, i32* %r16.global-to-local, align 4
  %v0_100036fc = load i32, i32* @r29, align 4
  store i32 %v0_100036fc, i32* %r3.global-to-local, align 4
  store i32 268449540, i32* @lr, align 4
  %v4_10003700 = inttoptr i32 %v0_100036ec to i32*
  %v5_10003700 = call i32 @function_10000300(i32 %v0_100036fc, i32* %v4_10003700, i32 9, i32 65535)
  %v0_10003704 = load i32, i32* @r28, align 4
  store i32 %v5_10003700, i32* %r22.global-to-local, align 4
  %v0_10003714 = load i32, i32* @r29, align 4
  store i32 %v0_10003714, i32* %r3.global-to-local, align 4
  store i32 268449564, i32* @lr, align 4
  %v4_10003718 = inttoptr i32 %v0_10003704 to i32*
  %v5_10003718 = call i32 @function_10000300(i32 %v0_10003714, i32* %v4_10003718, i32 0, i32 12)
  %v0_10003724 = load i32, i32* @r28, align 4
  store i32 %v5_10003718, i32* %r24.global-to-local, align 4
  %v0_1000372c = load i32, i32* @r29, align 4
  store i32 %v0_1000372c, i32* %r3.global-to-local, align 4
  store i32 268449588, i32* @lr, align 4
  %v4_10003730 = inttoptr i32 %v0_10003724 to i32*
  %v5_10003730 = call i32 @function_10000238(i32 %v0_1000372c, i32* %v4_10003730, i32 8, i32 0)
  store i32 %v5_10003730, i32* @r28, align 4
  store i32 11, i32* %r3.global-to-local, align 4
  store i32 268449600, i32* @lr, align 4
  %v1_1000373c = call i32 @function_1000780c(i32 11)
  store i32 11, i32* %r3.global-to-local, align 4
  %v3_10003748 = call i32 @function_10007758(i32 11, i32* null)
  store i32 %v3_10003748, i32* %r3.global-to-local, align 4
  store i32 268449624, i32* @lr, align 4
  %v2_10003754 = call i32 @function_10008534(i32 %v3_10003748, i32 0)
  store i32 %v2_10003754, i32* @r31, align 4
  store i32 11, i32* %r3.global-to-local, align 4
  store i32 268449636, i32* @lr, align 4
  %v1_10003760 = call i32 @function_10007780(i32 11)
  store i32 %v1_10003760, i32* %r3.global-to-local, align 4
  %v0_10003764 = load i32, i32* @r31, align 4
  %v1_10003764 = icmp slt i32 %v0_10003764, 0
  %v3_10003764 = icmp eq i32 %v0_10003764, 0
  store i1 %v1_10003764, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10003764, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_10003764, label %dec_label_pc_10003834, label %dec_label_pc_1000376c

dec_label_pc_1000376c:                            ; preds = %dec_label_pc_100035c4
  %v2_1000376c = ptrtoint i32* %stack_var_-2164 to i32
  store i32 %v2_1000376c, i32* %r27.global-to-local, align 4
  store i32 %v0_10003764, i32* %r3.global-to-local, align 4
  store i32 268449664, i32* @lr, align 4
  %v3_1000377c = call i32 @function_10008604(i32 %v0_10003764, i32 %v2_1000376c, i32 2048)
  store i32 %v3_1000377c, i32* %r30.global-to-local, align 4
  %v0_10003784 = load i32, i32* @r31, align 4
  store i32 %v0_10003784, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000378c.25 to i32), i32* @lr, align 4
  %v0_10003788 = call i32 @function_100083cc()
  store i32 12, i32* %r3.global-to-local, align 4
  store i32 268449684, i32* @lr, align 4
  %v1_10003790 = call i32 @function_1000780c(i32 12)
  store i32 12, i32* %r3.global-to-local, align 4
  %v3_1000379c = call i32 @function_10007758(i32 12, i32* null)
  %v0_100037a0 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v2_1000376c, i32* %r3.global-to-local, align 4
  %v3_100037ac = bitcast i32* %stack_var_-2164 to i8*
  %v4_100037ac = call i32 @function_1000803c(i8* %v3_100037ac, i32 %v0_100037a0, i32 %v3_1000379c)
  store i32 %v4_100037ac, i32* @r31, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  store i32 268449724, i32* @lr, align 4
  %v1_100037b8 = call i32 @function_10007780(i32 12)
  store i32 %v1_100037b8, i32* %r3.global-to-local, align 4
  %v0_100037bc = load i32, i32* @r31, align 4
  %v1_100037bc = icmp slt i32 %v0_100037bc, -1
  %v3_100037bc = icmp eq i32 %v0_100037bc, -1
  store i1 %v1_100037bc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100037bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100037bc, label %dec_label_pc_10003834, label %dec_label_pc_100037c4

dec_label_pc_100037c4:                            ; preds = %dec_label_pc_1000376c
  %v0_100037c4 = load i32, i32* %r30.global-to-local, align 4
  %v2_100037c4 = icmp slt i32 %v0_100037c4, %v0_100037bc
  %v3_100037c4 = icmp sgt i32 %v0_100037c4, %v0_100037bc
  %v4_100037c4 = icmp eq i32 %v0_100037c4, %v0_100037bc
  store i1 %v2_100037c4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100037c4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100037c4, label %dec_label_pc_100037cc, label %dec_label_pc_10003834

dec_label_pc_100037cc:                            ; preds = %dec_label_pc_100037c4
  %v2_100037cc = sub i32 %v0_100037c4, %v0_100037bc
  store i32 %v2_100037cc, i32* %r0.global-to-local, align 4
  %v1_100037d0 = add i32 %v0_100037c4, -1
  store i32 %v1_100037d0, i32* %r3.global-to-local, align 4
  store i32 %v2_100037cc, i32* %ctr.global-to-local, align 4
  store i32 %v0_100037bc, i32* %r29.global-to-local, align 4
  %v0_100037dc = load i32, i32* %r27.global-to-local, align 4
  %v2_100037dc = add i32 %v0_100037dc, %v0_100037bc
  store i32 %v2_100037dc, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_100037e4 = ptrtoint i32* %stack_var_-2196 to i32
  store i32 %v2_100037e4, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100037e8

dec_label_pc_100037e8:                            ; preds = %dec_label_pc_1000382c, %dec_label_pc_100037cc
  %v0_10003830 = phi i32 [ %v1_10003830, %dec_label_pc_1000382c ], [ %v2_100037cc, %dec_label_pc_100037cc ]
  %v0_1000382c = phi i32 [ %v1_1000382c, %dec_label_pc_1000382c ], [ %v0_100037bc, %dec_label_pc_100037cc ]
  %v0_100037f4 = phi i32 [ %v1_100037f4, %dec_label_pc_1000382c ], [ %v2_100037dc, %dec_label_pc_100037cc ]
  %v0_100037e8 = phi i32 [ %v0_100037e85, %dec_label_pc_1000382c ], [ 0, %dec_label_pc_100037cc ]
  %v1_100037e8 = icmp slt i32 %v0_100037e8, 0
  %v3_100037e8 = icmp eq i32 %v0_100037e8, 0
  store i1 %v1_100037e8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100037e8, i1* %cr7_eq.global-to-local, align 1
  %v1_100037ec = inttoptr i32 %v0_100037f4 to i8*
  %v2_100037ec = load i8, i8* %v1_100037ec, align 1
  %v3_100037ec = zext i8 %v2_100037ec to i32
  store i32 %v3_100037ec, i32* %r9.global-to-local, align 4
  %v4_100037f0 = icmp eq i32 %v1_100037d0, %v0_1000382c
  %v1_100037f4 = add i32 %v0_100037f4, 1
  store i32 %v1_100037f4, i32* %r11.global-to-local, align 4
  br i1 %v3_100037e8, label %dec_label_pc_10003804, label %dec_label_pc_10003814

dec_label_pc_10003804:                            ; preds = %dec_label_pc_100037e8
  %v1_10003804 = icmp ult i8 %v2_100037ec, 9
  %v3_10003804 = icmp eq i8 %v2_100037ec, 9
  store i1 %v1_10003804, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10003804, i1* %cr7_eq.global-to-local, align 1
  switch i8 %v2_100037ec, label %dec_label_pc_10003810 [
    i8 32, label %dec_label_pc_1000382c
    i8 9, label %dec_label_pc_1000382c
  ]

dec_label_pc_10003810:                            ; preds = %dec_label_pc_10003804
  store i32 1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10003814

dec_label_pc_10003814:                            ; preds = %dec_label_pc_100037e8, %dec_label_pc_10003810
  %v0_100037e86 = phi i32 [ %v0_100037e8, %dec_label_pc_100037e8 ], [ 1, %dec_label_pc_10003810 ]
  %v1_10003814 = add nuw nsw i32 %v3_100037ec, 208
  %v1_10003818 = urem i32 %v1_10003814, 256
  store i32 %v1_10003818, i32* %r0.global-to-local, align 4
  %v1_1000381c = icmp ult i32 %v1_10003818, 9
  %v2_1000381c = icmp ugt i32 %v1_10003818, 9
  %v3_1000381c = icmp eq i32 %v1_10003818, 9
  store i1 %v1_1000381c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000381c, i1* %cr7_eq.global-to-local, align 1
  %v3_100037f8.not = icmp ne i8 %v2_100037ec, 46
  %brmerge.not = and i1 %v3_100037f8.not, %v2_1000381c
  %brmerge25 = or i1 %v4_100037f0, %brmerge.not
  br i1 %brmerge25, label %dec_label_pc_10003c20, label %dec_label_pc_1000382c

dec_label_pc_1000382c:                            ; preds = %dec_label_pc_10003814, %dec_label_pc_10003804, %dec_label_pc_10003804
  %v0_100037e85 = phi i32 [ 0, %dec_label_pc_10003804 ], [ 0, %dec_label_pc_10003804 ], [ %v0_100037e86, %dec_label_pc_10003814 ]
  %v1_1000382c = add i32 %v0_1000382c, 1
  store i32 %v1_1000382c, i32* %r29.global-to-local, align 4
  %v1_10003830 = add i32 %v0_10003830, -1
  store i32 %v1_10003830, i32* %ctr.global-to-local, align 4
  %v2_10003830 = icmp eq i32 %v1_10003830, 0
  br i1 %v2_10003830, label %dec_label_pc_10003834, label %dec_label_pc_100037e8

dec_label_pc_10003834:                            ; preds = %dec_label_pc_1000382c, %dec_label_pc_100037c4, %dec_label_pc_1000376c, %dec_label_pc_100035c4
  %v0_10003834 = call i32 @function_10005258()
  %v1_10003838 = urem i32 %v0_10003834, 4
  store i32 %v1_10003838, i32* %r3.global-to-local, align 4
  %v1_1000383c = icmp eq i32 %v1_10003838, 0
  %v3_1000383c = icmp eq i32 %v1_10003838, 1
  store i1 %v1_1000383c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000383c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000383c, label %dec_label_pc_10003868, label %dec_label_pc_10003844

dec_label_pc_10003844:                            ; preds = %dec_label_pc_10003834
  store i1 %v1_1000383c, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_1000383c, label %dec_label_pc_10003c84, label %dec_label_pc_1000384c

dec_label_pc_1000384c:                            ; preds = %dec_label_pc_10003844
  %v2_1000384c = icmp eq i32 %v1_10003838, 3
  %v3_1000384c = icmp eq i32 %v1_10003838, 2
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000384c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000384c, label %dec_label_pc_10003c90, label %dec_label_pc_10003854

dec_label_pc_10003854:                            ; preds = %dec_label_pc_1000384c
  %v1_10003854 = icmp ne i32 %v1_10003838, 3
  store i1 %v1_10003854, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000384c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000384c, label %dec_label_pc_1000385c, label %dec_label_pc_10003870

dec_label_pc_1000385c:                            ; preds = %dec_label_pc_10003854
  store i32 67240450, i32* @r21, align 4
  br label %dec_label_pc_10003870

dec_label_pc_10003868:                            ; preds = %dec_label_pc_10003834
  store i32 1246898730, i32* @r21, align 4
  br label %dec_label_pc_10003870

dec_label_pc_10003870:                            ; preds = %dec_label_pc_10003854, %dec_label_pc_10003c90, %dec_label_pc_10003c84, %dec_label_pc_10003c20, %dec_label_pc_1000385c, %dec_label_pc_10003868
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268449912, i32* @lr, align 4
  %v0_10003874 = call i32 @function_1000879c()
  %v0_10003878 = load i32, i32* @r28, align 4
  %v1_10003878 = icmp slt i32 %v0_10003878, 0
  %v3_10003878 = icmp eq i32 %v0_10003878, 0
  store i1 %v1_10003878, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10003878, i1* %cr7_eq.global-to-local, align 1
  %v1_1000387c = load i32, i32* %r26.global-to-local, align 4
  %v2_1000387c = add i32 %v1_1000387c, %v0_10003874
  store i32 %v2_1000387c, i32* %r3.global-to-local, align 4
  br i1 %v3_10003878, label %dec_label_pc_10003b84, label %dec_label_pc_10003888

dec_label_pc_10003888:                            ; preds = %dec_label_pc_10003870
  store i32 %v0_10003878, i32* %r3.global-to-local, align 4
  store i32 268449936, i32* @lr, align 4
  %v1_1000388c = inttoptr i32 %v0_10003878 to i8*
  %v2_1000388c = call i32 @function_10007c8c(i8* %v1_1000388c)
  store i32 %v2_1000388c, i32* %r18.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268449956, i32* @lr, align 4
  %v3_100038a0 = call i32 @function_100090b4(i32 2, i32 3, i32 17)
  store i32 %v3_100038a0, i32* %r3.global-to-local, align 4
  %v1_100038a4 = icmp slt i32 %v3_100038a0, -1
  %v3_100038a4 = icmp eq i32 %v3_100038a0, -1
  store i1 %v1_100038a4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100038a4, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_100038a0, i32* %r23.global-to-local, align 4
  br i1 %v3_100038a4, label %dec_label_pc_10003b84, label %dec_label_pc_100038b0

dec_label_pc_100038b0:                            ; preds = %dec_label_pc_10003888
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_100038bc = ptrtoint i32* %stack_var_-2200 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-2200, align 4
  store i32 268449996, i32* @lr, align 4
  %v4_100038c8 = call i32 @function_10009078(i32 0, i32 3, i32 %v2_100038bc, i32 4)
  store i32 %v4_100038c8, i32* %r3.global-to-local, align 4
  %v1_100038cc = icmp slt i32 %v4_100038c8, -1
  %v3_100038cc = icmp eq i32 %v4_100038c8, -1
  store i1 %v1_100038cc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100038cc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100038cc, label %dec_label_pc_10003c9c, label %dec_label_pc_100038d4

dec_label_pc_100038d4:                            ; preds = %dec_label_pc_100038b0
  %v0_100038d4 = load i32, i32* %r19.global-to-local, align 4
  %v1_100038d4 = icmp slt i32 %v0_100038d4, 0
  %v3_100038d4 = icmp eq i32 %v0_100038d4, 0
  store i1 %v1_100038d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100038d4, i1* %cr7_eq.global-to-local, align 1
  %v0_100038d8 = load i32, i32* %r14.global-to-local, align 4
  %v1_100038d8 = urem i32 %v0_100038d8, 65536
  store i32 %v1_100038d8, i32* %r14.global-to-local, align 4
  %v5_100038dc = trunc i32 %v0_100038d8 to i16
  %v0_100038e0 = load i32, i32* %r24.global-to-local, align 4
  %v1_100038e0 = urem i32 %v0_100038e0, 256
  store i32 %v1_100038e0, i32* @r30, align 4
  %v0_100038e4 = call i32 @__asm_mfcr()
  store i32 %v0_100038e4, i32* %r3.global-to-local, align 4
  %v0_100038ec = load i32, i32* %r15.global-to-local, align 4
  %v1_100038ec = urem i32 %v0_100038ec, 65536
  store i32 %v1_100038ec, i32* %r14.global-to-local, align 4
  %v0_100038f0 = load i32, i32* %r16.global-to-local, align 4
  %v1_100038f0 = urem i32 %v0_100038f0, 65536
  store i32 %v1_100038f0, i32* %r15.global-to-local, align 4
  %v0_100038f4 = load i32, i32* %r22.global-to-local, align 4
  %v1_100038f4 = urem i32 %v0_100038f4, 65536
  store i32 %v1_100038f4, i32* %r16.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-2200, align 4
  %v0_10003904 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10003904 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10003904 = or i1 %v0_10003904, %v1_10003904
  br i1 %v2_10003904, label %dec_label_pc_10003a68.preheader, label %dec_label_pc_10003908

dec_label_pc_10003908:                            ; preds = %dec_label_pc_100038d4
  %v0_10003908 = load i32, i32* @r30, align 4
  %v1_10003908 = load i32, i32* %r18.global-to-local, align 4
  %v2_10003908 = add i32 %v1_10003908, %v0_10003908
  %v1_1000390c = icmp slt i32 %v1_10003908, 0
  %v3_1000390c = icmp eq i32 %v1_10003908, 0
  store i1 %v1_1000390c, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_1000390c, i1* %cr4_eq.global-to-local, align 1
  %v1_10003910 = urem i32 %v2_10003908, 65536
  %v0_10003914 = load i32, i32* %r25.global-to-local, align 4
  %v3_10003914 = icmp eq i32 %v0_10003914, 0
  store i1 %v3_10003914, i1* %cr3_eq.global-to-local, align 1
  %v1_10003918 = add nuw nsw i32 %v1_10003910, 27
  store i32 %v1_10003918, i32* %r0.global-to-local, align 4
  %v1_1000391c = add nuw nsw i32 %v1_10003910, 47
  store i32 %v1_1000391c, i32* %r9.global-to-local, align 4
  %fold = add i32 %v2_10003908, 47
  %v1_10003920 = urem i32 %fold, 65536
  store i32 %v1_10003920, i32* %r24.global-to-local, align 4
  %fold4 = add i32 %v2_10003908, 27
  %v1_10003924 = urem i32 %fold4, 65536
  store i32 %v1_10003924, i32* %r25.global-to-local, align 4
  %v1_10003928 = add i32 %v1_10003908, 1
  store i32 %v1_10003928, i32* %r26.global-to-local, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 268566528, i32* %r22.global-to-local, align 4
  store i32 1, i32* %r27.global-to-local, align 4
  %v4_1000398c = sext i8 %v5_100036a4 to i32
  br label %dec_label_pc_10003938

dec_label_pc_10003938:                            ; preds = %dec_label_pc_10003c54, %dec_label_pc_10003a44, %dec_label_pc_10003908
  store i32 600, i32* %r3.global-to-local, align 4
  store i32 268450116, i32* @lr, align 4
  %v2_10003940 = call i32 @function_10009410(i32 600, i32 1)
  store i32 %v2_10003940, i32* %r3.global-to-local, align 4
  %v3_10003944 = load i32, i32* %stack_var_-2200, align 4
  store i32 %v3_10003944, i32* %r0.global-to-local, align 4
  %v0_10003948 = load i32, i32* @r31, align 4
  %v1_10003948 = mul i32 %v0_10003948, 4
  store i32 %v1_10003948, i32* %r9.global-to-local, align 4
  %v2_1000394c = load i32, i32* %r20.global-to-local, align 4
  %v3_1000394c = add i32 %v2_1000394c, %v1_10003948
  %v4_1000394c = inttoptr i32 %v3_1000394c to i32*
  store i32 %v2_10003940, i32* %v4_1000394c, align 4
  %v0_10003950 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003950 = mul i32 %v0_10003950, 4
  store i32 %v1_10003950, i32* %r0.global-to-local, align 4
  %v0_10003954 = load i32, i32* %r20.global-to-local, align 4
  %v2_10003954 = add i32 %v0_10003954, %v1_10003950
  %v3_10003954 = inttoptr i32 %v2_10003954 to i32*
  %v4_10003954 = load i32, i32* %v3_10003954, align 4
  store i32 %v4_10003954, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_1000395c = inttoptr i32 %v4_10003954 to i32*
  %v2_1000395c = load i32, i32* %v1_1000395c, align 4
  store i32 %v2_1000395c, i32* %r9.global-to-local, align 4
  %v1_10003960 = add i32 %v4_10003954, 20
  store i32 %v1_10003960, i32* %r10.global-to-local, align 4
  %v1_10003964 = add i32 %v4_10003954, 28
  store i32 %v1_10003964, i32* %r8.global-to-local, align 4
  %v1_10003968 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10003968, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_10003970 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10003970, i32* %r9.global-to-local, align 4
  %v1_10003974 = load i32, i32* %r11.global-to-local, align 4
  %v2_10003974 = inttoptr i32 %v1_10003974 to i32*
  store i32 %v1_10003970, i32* %v2_10003974, align 4
  %v0_10003978 = load i32, i32* %r24.global-to-local, align 4
  %v1_10003978 = trunc i32 %v0_10003978 to i16
  %v2_10003978 = load i32, i32* %r11.global-to-local, align 4
  %v3_10003978 = add i32 %v2_10003978, 2
  %v4_10003978 = inttoptr i32 %v3_10003978 to i16*
  store i16 %v1_10003978, i16* %v4_10003978, align 2
  %v2_10003980 = load i32, i32* %r11.global-to-local, align 4
  %v3_10003980 = add i32 %v2_10003980, 4
  %v4_10003980 = inttoptr i32 %v3_10003980 to i16*
  store i16 %v5_100038dc, i16* %v4_10003980, align 2
  %v2_10003988 = load i32, i32* %r11.global-to-local, align 4
  %v3_10003988 = add i32 %v2_10003988, 1
  %v4_10003988 = inttoptr i32 %v3_10003988 to i8*
  store i8 %v5_10003670, i8* %v4_10003988, align 1
  store i32 %v4_1000398c, i32* %r0.global-to-local, align 4
  %v2_10003990 = load i32, i32* %r11.global-to-local, align 4
  %v3_10003990 = add i32 %v2_10003990, 8
  %v4_10003990 = inttoptr i32 %v3_10003990 to i8*
  store i8 %v5_100036a4, i8* %v4_10003990, align 1
  %v0_10003994 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003994, label %dec_label_pc_100039a0, label %dec_label_pc_10003998

dec_label_pc_10003998:                            ; preds = %dec_label_pc_10003938
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_1000399c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000399c = add i32 %v2_1000399c, 6
  %v4_1000399c = inttoptr i32 %v3_1000399c to i16*
  store i16 16384, i16* %v4_1000399c, align 2
  br label %dec_label_pc_100039a0

dec_label_pc_100039a0:                            ; preds = %dec_label_pc_10003938, %dec_label_pc_10003998
  %v0_100039a4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100039a4 = add i32 %v0_100039a4, 41
  store i32 %v1_100039a4, i32* %r9.global-to-local, align 4
  %v3_100039a8 = add i32 %v0_100039a4, 9
  %v4_100039a8 = inttoptr i32 %v3_100039a8 to i8*
  store i8 17, i8* %v4_100039a8, align 1
  %v0_100039ac = load i32, i32* %r9.global-to-local, align 4
  %v1_100039ac = load i32, i32* @r30, align 4
  %v2_100039ac = add i32 %v1_100039ac, %v0_100039ac
  store i32 %v2_100039ac, i32* %r29.global-to-local, align 4
  %v0_100039b0 = load i32, i32* %r25.global-to-local, align 4
  %v1_100039b0 = trunc i32 %v0_100039b0 to i16
  %v2_100039b0 = load i32, i32* %r10.global-to-local, align 4
  %v3_100039b0 = add i32 %v2_100039b0, 4
  %v4_100039b0 = inttoptr i32 %v3_100039b0 to i16*
  store i16 %v1_100039b0, i16* %v4_100039b0, align 2
  %v0_100039b4 = load i32, i32* %r29.global-to-local, align 4
  %v1_100039b4 = add i32 %v0_100039b4, 1
  store i32 %v1_100039b4, i32* %r31.global-to-local, align 4
  %v3_100039b8 = load i32, i32* @global_var_1001b448.12, align 4
  store i32 %v3_100039b8, i32* %r0.global-to-local, align 4
  store i32 %v1_100039b4, i32* %r3.global-to-local, align 4
  %v0_100039c0 = load i32, i32* %r15.global-to-local, align 4
  %v1_100039c0 = trunc i32 %v0_100039c0 to i16
  %v2_100039c0 = load i32, i32* %r10.global-to-local, align 4
  %v3_100039c0 = add i32 %v2_100039c0, 2
  %v4_100039c0 = inttoptr i32 %v3_100039c0 to i16*
  store i16 %v1_100039c0, i16* %v4_100039c0, align 2
  %v0_100039c4 = load i32, i32* @r28, align 4
  %v0_100039c8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100039c8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100039c8 = add i32 %v1_100039c8, 12
  %v3_100039c8 = inttoptr i32 %v2_100039c8 to i32*
  store i32 %v0_100039c8, i32* %v3_100039c8, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v0_100039d0 = load i32, i32* %r14.global-to-local, align 4
  %v1_100039d0 = trunc i32 %v0_100039d0 to i16
  %v2_100039d0 = load i32, i32* %r11.global-to-local, align 4
  %v3_100039d0 = add i32 %v2_100039d0, 20
  %v4_100039d0 = inttoptr i32 %v3_100039d0 to i16*
  store i16 %v1_100039d0, i16* %v4_100039d0, align 2
  %v0_100039d4 = load i32, i32* %r26.global-to-local, align 4
  %v0_100039d8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100039d8 = trunc i32 %v0_100039d8 to i16
  %v2_100039d8 = load i32, i32* %r8.global-to-local, align 4
  %v3_100039d8 = add i32 %v2_100039d8, 2
  %v4_100039d8 = inttoptr i32 %v3_100039d8 to i16*
  store i16 %v1_100039d8, i16* %v4_100039d8, align 2
  %v0_100039dc = load i32, i32* %r27.global-to-local, align 4
  %v1_100039dc = trunc i32 %v0_100039dc to i16
  %v2_100039dc = load i32, i32* %r8.global-to-local, align 4
  %v3_100039dc = add i32 %v2_100039dc, 4
  %v4_100039dc = inttoptr i32 %v3_100039dc to i16*
  store i16 %v1_100039dc, i16* %v4_100039dc, align 2
  %v0_100039e0 = load i32, i32* @r21, align 4
  %v1_100039e0 = load i32, i32* %r11.global-to-local, align 4
  %v2_100039e0 = add i32 %v1_100039e0, 16
  %v3_100039e0 = inttoptr i32 %v2_100039e0 to i32*
  store i32 %v0_100039e0, i32* %v3_100039e0, align 4
  %v0_100039e4 = load i32, i32* %r16.global-to-local, align 4
  %v1_100039e4 = trunc i32 %v0_100039e4 to i16
  %v2_100039e4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100039e4 = add i32 %v2_100039e4, 28
  %v4_100039e4 = inttoptr i32 %v3_100039e4 to i16*
  store i16 %v1_100039e4, i16* %v4_100039e4, align 2
  %v0_100039e8 = load i32, i32* @r30, align 4
  %v1_100039e8 = trunc i32 %v0_100039e8 to i8
  %v2_100039e8 = load i32, i32* %r11.global-to-local, align 4
  %v3_100039e8 = add i32 %v2_100039e8, 40
  %v4_100039e8 = inttoptr i32 %v3_100039e8 to i8*
  store i8 %v1_100039e8, i8* %v4_100039e8, align 1
  store i32 268450288, i32* @lr, align 4
  %v3_100039ec = call i32 @function_10007d10(i32 %v1_100039b4, i32 %v0_100039c4, i32 %v0_100039d4)
  store i32 %v3_100039ec, i32* %r3.global-to-local, align 4
  %v0_100039f0 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100039f0 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100039f0 = or i1 %v0_100039f0, %v1_100039f0
  br i1 %v2_100039f0, label %dec_label_pc_10003c54, label %dec_label_pc_100039f4

dec_label_pc_100039f4:                            ; preds = %dec_label_pc_100039a0
  %v0_100039f4 = load i32, i32* %r18.global-to-local, align 4
  store i32 %v0_100039f4, i32* %ctr.global-to-local, align 4
  %v0_100039f8 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_100039f8, i32* %r3.global-to-local, align 4
  %v0_100039fc = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_100039fc, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10003a1c.outer

dec_label_pc_10003a1c.outer:                      ; preds = %dec_label_pc_10003a2c, %dec_label_pc_100039f4
  %v2_10003a2c.ph = phi i32 [ %v0_10003a34, %dec_label_pc_10003a2c ], [ %v0_100039fc, %dec_label_pc_100039f4 ]
  %v0_10003a18.ph = phi i32 [ %v1_10003a40, %dec_label_pc_10003a2c ], [ %v0_100039f4, %dec_label_pc_100039f4 ]
  %v0_10003a14.ph = phi i32 [ %v1_10003a3c, %dec_label_pc_10003a2c ], [ %v0_100039f8, %dec_label_pc_100039f4 ]
  %v0_10003a10.ph = phi i32 [ %v1_10003a30, %dec_label_pc_10003a2c ], [ 0, %dec_label_pc_100039f4 ]
  %v1_10003a1c.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10003a1c

dec_label_pc_10003a0c:                            ; preds = %dec_label_pc_10003a1c
  %v1_10003a0c = urem i32 %v1_10003a20, 256
  store i32 %v1_10003a0c, i32* %r8.global-to-local, align 4
  %v1_10003a10 = add i32 %v0_10003a10, 1
  store i32 %v1_10003a10, i32* %r11.global-to-local, align 4
  %v1_10003a14 = add i32 %v0_10003a14, 1
  store i32 %v1_10003a14, i32* %r3.global-to-local, align 4
  %v1_10003a18 = add i32 %v0_10003a18, -1
  store i32 %v1_10003a18, i32* %ctr.global-to-local, align 4
  %v2_10003a18 = icmp eq i32 %v1_10003a18, 0
  br i1 %v2_10003a18, label %dec_label_pc_10003a44.loopexit, label %dec_label_pc_10003a1c

dec_label_pc_10003a1c:                            ; preds = %dec_label_pc_10003a1c.outer, %dec_label_pc_10003a0c
  %v0_10003a18 = phi i32 [ %v1_10003a18, %dec_label_pc_10003a0c ], [ %v0_10003a18.ph, %dec_label_pc_10003a1c.outer ]
  %v0_10003a14 = phi i32 [ %v1_10003a14, %dec_label_pc_10003a0c ], [ %v0_10003a14.ph, %dec_label_pc_10003a1c.outer ]
  %v0_10003a2c = phi i32 [ %v1_10003a0c, %dec_label_pc_10003a0c ], [ 0, %dec_label_pc_10003a1c.outer ]
  %v0_10003a10 = phi i32 [ %v1_10003a10, %dec_label_pc_10003a0c ], [ %v0_10003a10.ph, %dec_label_pc_10003a1c.outer ]
  %v2_10003a1c = add i32 %v1_10003a1c.pre, %v0_10003a10
  %v3_10003a1c = inttoptr i32 %v2_10003a1c to i8*
  %v4_10003a1c = load i8, i8* %v3_10003a1c, align 1
  %v5_10003a1c = zext i8 %v4_10003a1c to i32
  store i32 %v5_10003a1c, i32* %r0.global-to-local, align 4
  %v1_10003a20 = add nuw nsw i32 %v0_10003a2c, 1
  store i32 %v1_10003a20, i32* %r9.global-to-local, align 4
  %v1_10003a24 = icmp ult i8 %v4_10003a1c, 46
  %v3_10003a24 = icmp eq i8 %v4_10003a1c, 46
  store i1 %v1_10003a24, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10003a24, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10003a24, label %dec_label_pc_10003a2c, label %dec_label_pc_10003a0c

dec_label_pc_10003a2c:                            ; preds = %dec_label_pc_10003a1c
  %v1_10003a2c = trunc i32 %v0_10003a2c to i8
  %v3_10003a2c = inttoptr i32 %v2_10003a2c.ph to i8*
  store i8 %v1_10003a2c, i8* %v3_10003a2c, align 1
  %v0_10003a30 = load i32, i32* %r11.global-to-local, align 4
  %v1_10003a30 = add i32 %v0_10003a30, 1
  store i32 %v1_10003a30, i32* %r11.global-to-local, align 4
  %v0_10003a34 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_10003a34, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  %v1_10003a3c = add i32 %v0_10003a34, 1
  store i32 %v1_10003a3c, i32* %r3.global-to-local, align 4
  %v0_10003a40 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10003a40 = add i32 %v0_10003a40, -1
  store i32 %v1_10003a40, i32* %ctr.global-to-local, align 4
  %v2_10003a40 = icmp eq i32 %v1_10003a40, 0
  br i1 %v2_10003a40, label %dec_label_pc_10003a44, label %dec_label_pc_10003a1c.outer

dec_label_pc_10003a44.loopexit:                   ; preds = %dec_label_pc_10003a0c
  %extract.t.le = trunc i32 %v1_10003a20 to i8
  br label %dec_label_pc_10003a44

dec_label_pc_10003a44:                            ; preds = %dec_label_pc_10003a2c, %dec_label_pc_10003a44.loopexit
  %v2_10003a44 = phi i32 [ %v2_10003a2c.ph, %dec_label_pc_10003a44.loopexit ], [ %v0_10003a34, %dec_label_pc_10003a2c ]
  %v0_10003a44.off0 = phi i8 [ %extract.t.le, %dec_label_pc_10003a44.loopexit ], [ 0, %dec_label_pc_10003a2c ]
  %v3_10003a44 = inttoptr i32 %v2_10003a44 to i8*
  store i8 %v0_10003a44.off0, i8* %v3_10003a44, align 1
  %v0_10003a48 = load i32, i32* %r29.global-to-local, align 4
  %v1_10003a48 = load i32, i32* %r18.global-to-local, align 4
  %v2_10003a48 = add i32 %v1_10003a48, %v0_10003a48
  store i32 %v2_10003a48, i32* %r9.global-to-local, align 4
  %v0_10003a4c = load i32, i32* %r27.global-to-local, align 4
  %v1_10003a4c = trunc i32 %v0_10003a4c to i16
  %v3_10003a4c = add i32 %v2_10003a48, 4
  %v4_10003a4c = inttoptr i32 %v3_10003a4c to i16*
  store i16 %v1_10003a4c, i16* %v4_10003a4c, align 2
  %v3_10003a50 = load i32, i32* %stack_var_-2200, align 4
  store i32 %v3_10003a50, i32* %r11.global-to-local, align 4
  %v0_10003a54 = load i32, i32* %r27.global-to-local, align 4
  %v1_10003a54 = trunc i32 %v0_10003a54 to i16
  %v2_10003a54 = load i32, i32* %r9.global-to-local, align 4
  %v3_10003a54 = add i32 %v2_10003a54, 2
  %v4_10003a54 = inttoptr i32 %v3_10003a54 to i16*
  store i16 %v1_10003a54, i16* %v4_10003a54, align 2
  %v0_10003a58 = load i32, i32* %r11.global-to-local, align 4
  %v1_10003a58 = add i32 %v0_10003a58, 1
  %v1_10003a5c = load i32, i32* %r19.global-to-local, align 4
  %v2_10003a5c = icmp slt i32 %v1_10003a58, %v1_10003a5c
  %v4_10003a5c = icmp eq i32 %v1_10003a58, %v1_10003a5c
  store i1 %v2_10003a5c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10003a5c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10003a58, i32* %stack_var_-2200, align 4
  br i1 %v2_10003a5c, label %dec_label_pc_10003938, label %dec_label_pc_10003a68.preheader

dec_label_pc_10003a68.preheader:                  ; preds = %dec_label_pc_10003a44, %dec_label_pc_10003c54, %dec_label_pc_100038d4
  %v4_10003a88.pre-phi = sext i16 %v5_100038dc to i32
  %v2_10003a74 = urem i32 %v0_100038e4, 16
  %v1_10003a7c = mul nuw i32 %v2_10003a74, 268435456
  br label %dec_label_pc_10003a68

dec_label_pc_10003a68:                            ; preds = %dec_label_pc_10003a68.preheader, %dec_label_pc_10003b70
  store i32 0, i32* %stack_var_-2200, align 4
  store i32 %v2_10003a74, i32* %r0.global-to-local, align 4
  %v1_10003a78 = call %0 @__asm_mtcrf(i32 1, i32 %v2_10003a74)
  store i32 %v1_10003a7c, i32* %r0.global-to-local, align 4
  %v0_10003a80 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10003a80 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10003a80 = or i1 %v0_10003a80, %v1_10003a80
  br i1 %v2_10003a80, label %dec_label_pc_10003b70, label %dec_label_pc_10003a84

dec_label_pc_10003a84:                            ; preds = %dec_label_pc_10003a68
  store i32 %v4_10003a88.pre-phi, i32* %r11.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  %v0_10003a90 = load i32, i32* @r30, align 4
  %v1_10003a90 = load i32, i32* %r18.global-to-local, align 4
  %v2_10003a90 = add i32 %v1_10003a90, %v0_10003a90
  store i32 %v2_10003a90, i32* %r9.global-to-local, align 4
  %v0_10003a94 = load i32, i32* %r15.global-to-local, align 4
  %v2_10003a94 = icmp slt i32 %v0_10003a94, 65535
  %v4_10003a94 = icmp eq i32 %v0_10003a94, 65535
  store i1 %v2_10003a94, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10003a94, i1* %cr7_eq.global-to-local, align 1
  store i1 false, i1* %cr2_eq.global-to-local, align 1
  %v0_10003a9c = load i32, i32* %r14.global-to-local, align 4
  %v4_10003a9c = icmp eq i32 %v0_10003a9c, 65535
  store i1 %v4_10003a9c, i1* %cr3_eq.global-to-local, align 1
  %v0_10003aa0 = load i32, i32* %r16.global-to-local, align 4
  %v2_10003aa0 = icmp slt i32 %v0_10003aa0, 65535
  %v4_10003aa0 = icmp eq i32 %v0_10003aa0, 65535
  store i1 %v2_10003aa0, i1* %cr4_lt.global-to-local, align 1
  store i1 %v4_10003aa0, i1* %cr4_eq.global-to-local, align 1
  %v0_10003aa4 = call i32 @__asm_mfcr()
  store i32 %v0_10003aa4, i32* %r3.global-to-local, align 4
  %v1_10003aa8 = mul i32 %v0_10003aa4, 268435456
  store i32 %v1_10003aa8, i32* @r24, align 4
  %v0_10003aac = load i32, i32* %r9.global-to-local, align 4
  %v1_10003aac = add i32 %v0_10003aac, 47
  store i32 %v1_10003aac, i32* @r25, align 4
  %v1_10003ab0 = add i32 %v0_10003aac, 27
  store i32 %v1_10003ab0, i32* @r27, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  store i32 0, i32* %r22.global-to-local, align 4
  br label %dec_label_pc_10003ac0

dec_label_pc_10003ac0:                            ; preds = %dec_label_pc_10003aec, %dec_label_pc_10003a84
  %v0_10003ac0 = phi i32 [ %v1_10003b60, %dec_label_pc_10003aec ], [ 0, %dec_label_pc_10003a84 ]
  %v1_10003ac0 = mul i32 %v0_10003ac0, 4
  store i32 %v1_10003ac0, i32* %r0.global-to-local, align 4
  %v0_10003ac4 = load i32, i32* %r20.global-to-local, align 4
  %v2_10003ac4 = add i32 %v0_10003ac4, %v1_10003ac0
  %v3_10003ac4 = inttoptr i32 %v2_10003ac4 to i32*
  %v4_10003ac4 = load i32, i32* %v3_10003ac4, align 4
  store i32 %v4_10003ac4, i32* @r29, align 4
  %v1_10003ac8 = add i32 %v4_10003ac4, 20
  store i32 %v1_10003ac8, i32* @r28, align 4
  %v1_10003acc = add i32 %v4_10003ac4, 41
  store i32 %v1_10003acc, i32* @r31, align 4
  %v0_10003ad0 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003ad0, label %dec_label_pc_10003be4, label %dec_label_pc_10003ad4

dec_label_pc_10003ad4:                            ; preds = %dec_label_pc_10003ac0
  %v0_10003ad4 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003ad4, label %dec_label_pc_10003bf0, label %dec_label_pc_10003ad8

dec_label_pc_10003ad8:                            ; preds = %dec_label_pc_10003be4, %dec_label_pc_10003ad4
  %v0_10003ad8 = load i32, i32* @r24, align 4
  %v1_10003ad8 = mul i32 %v0_10003ad8, 16
  %v2_10003ad8 = udiv i32 %v0_10003ad8, 268435456
  %v3_10003ad8 = or i32 %v2_10003ad8, %v1_10003ad8
  store i32 %v3_10003ad8, i32* %r24.global-to-local, align 4
  %v1_10003adc = call %0 @__asm_mtcrf(i32 1, i32 %v3_10003ad8)
  %v1_10003ae0 = mul nuw i32 %v2_10003ad8, 268435456
  %v2_10003ae0 = urem i32 %v0_10003ad8, 268435456
  %v3_10003ae0 = or i32 %v1_10003ae0, %v2_10003ae0
  store i32 %v3_10003ae0, i32* @r24, align 4
  %v0_10003ae4 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10003ae4, label %dec_label_pc_10003c08, label %dec_label_pc_10003ae8

dec_label_pc_10003ae8:                            ; preds = %dec_label_pc_10003bf0, %dec_label_pc_10003ad8
  %v0_10003ae8 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10003ae8, label %dec_label_pc_10003c14, label %dec_label_pc_10003aec

dec_label_pc_10003aec:                            ; preds = %dec_label_pc_10003c08, %dec_label_pc_10003ae8, %dec_label_pc_10003c14
  %v0_10003aec = load i32, i32* @r31, align 4
  store i32 %v0_10003aec, i32* @r3, align 4
  %v0_10003af0 = load i32, i32* @r30, align 4
  store i32 %v0_10003af0, i32* @r4, align 4
  store i32 268450552, i32* @lr, align 4
  %v0_10003af4 = call i32 @function_10005318()
  %v0_10003af8 = load i32, i32* %r22.global-to-local, align 4
  %v1_10003af8 = load i32, i32* @r31, align 4
  %v2_10003af8 = load i32, i32* @r30, align 4
  %v3_10003af8 = trunc i32 %v0_10003af8 to i8
  %v4_10003af8 = add i32 %v2_10003af8, %v1_10003af8
  %v5_10003af8 = inttoptr i32 %v4_10003af8 to i8*
  store i8 %v3_10003af8, i8* %v5_10003af8, align 1
  %v0_10003afc = load i32, i32* @r26, align 4
  %v1_10003afc = trunc i32 %v0_10003afc to i16
  %v2_10003afc = load i32, i32* @r29, align 4
  %v3_10003afc = add i32 %v2_10003afc, 10
  %v4_10003afc = inttoptr i32 %v3_10003afc to i16*
  store i16 %v1_10003afc, i16* %v4_10003afc, align 2
  %v0_10003b04 = load i32, i32* @r29, align 4
  store i32 %v0_10003b04, i32* @r3, align 4
  %v2_10003b08 = call i32 @function_10003ca8(i32 %v0_10003b04, i32 20)
  %v3_10003b08 = trunc i32 %v2_10003b08 to i16
  %v0_10003b0c = load i32, i32* @r28, align 4
  store i32 %v0_10003b0c, i32* @r4, align 4
  %v3_10003b10 = load i32, i32* @r29, align 4
  %v4_10003b10 = add i32 %v3_10003b10, 10
  %v5_10003b10 = inttoptr i32 %v4_10003b10 to i16*
  store i16 %v3_10003b08, i16* %v5_10003b10, align 2
  %v0_10003b14 = load i32, i32* @r27, align 4
  %v0_10003b18 = load i32, i32* @r26, align 4
  %v1_10003b18 = trunc i32 %v0_10003b18 to i16
  %v2_10003b18 = load i32, i32* @r28, align 4
  %v3_10003b18 = add i32 %v2_10003b18, 6
  %v4_10003b18 = inttoptr i32 %v3_10003b18 to i16*
  store i16 %v1_10003b18, i16* %v4_10003b18, align 2
  %v0_10003b1c = load i32, i32* @r29, align 4
  store i32 %v0_10003b1c, i32* %r3.global-to-local, align 4
  %v0_10003b20 = load i32, i32* @r28, align 4
  %v1_10003b20 = add i32 %v0_10003b20, 4
  %v2_10003b20 = inttoptr i32 %v1_10003b20 to i16*
  %v3_10003b20 = load i16, i16* %v2_10003b20, align 2
  %v4_10003b20 = zext i16 %v3_10003b20 to i32
  %v4_10003b24 = call i32 @function_10003d0c(i32 %v0_10003b1c, i32 %v0_10003b0c, i32 %v4_10003b20, i32 %v0_10003b14)
  %v5_10003b24 = trunc i32 %v4_10003b24 to i16
  store i32 %v4_10003b24, i32* %r3.global-to-local, align 4
  %v3_10003b28 = load i32, i32* %stack_var_-2200, align 4
  store i32 %v3_10003b28, i32* %r7.global-to-local, align 4
  %v0_10003b2c = load i32, i32* @r28, align 4
  %v1_10003b2c = add i32 %v0_10003b2c, 2
  %v2_10003b2c = inttoptr i32 %v1_10003b2c to i16*
  %v3_10003b2c = load i16, i16* %v2_10003b2c, align 2
  %v4_10003b2c = zext i16 %v3_10003b2c to i32
  store i32 %v4_10003b2c, i32* %r0.global-to-local, align 4
  %v0_10003b30 = load i32, i32* @r29, align 4
  %v1_10003b34 = mul i32 %v3_10003b28, 24
  store i32 %v1_10003b34, i32* %r7.global-to-local, align 4
  %v4_10003b38 = add i32 %v0_10003b2c, 6
  %v5_10003b38 = inttoptr i32 %v4_10003b38 to i16*
  store i16 %v5_10003b24, i16* %v5_10003b38, align 2
  %v0_10003b3c = load i32, i32* @r25, align 4
  %v0_10003b40 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10003b40, i32* %r3.global-to-local, align 4
  %v0_10003b44 = load i32, i32* %r7.global-to-local, align 4
  %v1_10003b44 = load i32, i32* %r17.global-to-local, align 4
  %v2_10003b44 = add i32 %v1_10003b44, %v0_10003b44
  store i32 %v2_10003b44, i32* %r7.global-to-local, align 4
  %v0_10003b4c = load i32, i32* %r0.global-to-local, align 4
  %v1_10003b4c = trunc i32 %v0_10003b4c to i16
  %v3_10003b4c = add i32 %v2_10003b44, 2
  %v4_10003b4c = inttoptr i32 %v3_10003b4c to i16*
  store i16 %v1_10003b4c, i16* %v4_10003b4c, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  %v0_10003b54 = load i32, i32* @r21, align 4
  %v2_10003b54 = add i32 %v2_10003b44, 4
  %v3_10003b54 = inttoptr i32 %v2_10003b54 to i32*
  store i32 %v0_10003b54, i32* %v3_10003b54, align 4
  store i32 268450652, i32* @lr, align 4
  %v6_10003b58 = call i32 @function_10009038(i32 %v0_10003b40, i32 %v0_10003b30, i32 %v0_10003b3c, i32 16384, i32 %v2_10003b44, i32 16)
  store i32 %v6_10003b58, i32* %r3.global-to-local, align 4
  %v3_10003b5c = load i32, i32* %stack_var_-2200, align 4
  store i32 %v3_10003b5c, i32* %r9.global-to-local, align 4
  %v1_10003b60 = add i32 %v3_10003b5c, 1
  store i32 %v1_10003b60, i32* %r0.global-to-local, align 4
  %v1_10003b64 = load i32, i32* %r19.global-to-local, align 4
  %v2_10003b64 = icmp slt i32 %v1_10003b60, %v1_10003b64
  %v4_10003b64 = icmp eq i32 %v1_10003b60, %v1_10003b64
  store i1 %v2_10003b64, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10003b64, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10003b60, i32* %stack_var_-2200, align 4
  br i1 %v2_10003b64, label %dec_label_pc_10003ac0, label %dec_label_pc_10003b70

dec_label_pc_10003b70:                            ; preds = %dec_label_pc_10003aec, %dec_label_pc_10003a68
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268450680, i32* @lr, align 4
  %v0_10003b74 = call i32 @function_1000879c()
  store i32 %v0_10003b74, i32* %r3.global-to-local, align 4
  store i32 %v2_1000387c, i32* %r0.global-to-local, align 4
  %v2_10003b7c = icmp slt i32 %v2_1000387c, %v0_10003b74
  %v4_10003b7c = icmp eq i32 %v2_1000387c, %v0_10003b74
  store i1 %v2_10003b7c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10003b7c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10003b7c, label %dec_label_pc_10003b84, label %dec_label_pc_10003a68

dec_label_pc_10003b84:                            ; preds = %dec_label_pc_10003b70, %dec_label_pc_10003888, %dec_label_pc_10003870, %dec_label_pc_10003c9c
  store i32 %v0_100035e0, i32* %r0.global-to-local, align 4
  %v1_10003b98 = call %0 @__asm_mtcrf(i32 56, i32 %v0_100035cc)
  store i32 %v0_10003614, i32* %r24.global-to-local, align 4
  store i32 %v0_10003618, i32* %r25.global-to-local, align 4
  store i32 %v0_100035d8, i32* %r26.global-to-local, align 4
  store i32 %v0_1000363c, i32* %r27.global-to-local, align 4
  store i32 %v0_10003624, i32* %r29.global-to-local, align 4
  store i32 %v0_10003640, i32* %r30.global-to-local, align 4
  store i32 %v0_1000362c, i32* %r31.global-to-local, align 4
  %v0_10003be0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10003be0

dec_label_pc_10003be4:                            ; preds = %dec_label_pc_10003ac0
  %v0_10003be4 = call i32 @function_10005258()
  %v1_10003be4 = trunc i32 %v0_10003be4 to i16
  store i32 %v0_10003be4, i32* %r3.global-to-local, align 4
  %v3_10003be8 = load i32, i32* @r29, align 4
  %v4_10003be8 = add i32 %v3_10003be8, 4
  %v5_10003be8 = inttoptr i32 %v4_10003be8 to i16*
  store i16 %v1_10003be4, i16* %v5_10003be8, align 2
  %v0_10003bec = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003bec, label %dec_label_pc_10003bf0, label %dec_label_pc_10003ad8

dec_label_pc_10003bf0:                            ; preds = %dec_label_pc_10003be4, %dec_label_pc_10003ad4
  %v0_10003bf0 = call i32 @function_10005258()
  %v1_10003bf0 = trunc i32 %v0_10003bf0 to i16
  store i32 %v0_10003bf0, i32* %r3.global-to-local, align 4
  %v0_10003bf4 = load i32, i32* @r24, align 4
  %v1_10003bf4 = mul i32 %v0_10003bf4, 16
  %v2_10003bf4 = udiv i32 %v0_10003bf4, 268435456
  %v3_10003bf4 = or i32 %v2_10003bf4, %v1_10003bf4
  store i32 %v3_10003bf4, i32* %r24.global-to-local, align 4
  %v1_10003bf8 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10003bf4)
  %v1_10003bfc = mul nuw i32 %v2_10003bf4, 268435456
  %v2_10003bfc = urem i32 %v0_10003bf4, 268435456
  %v3_10003bfc = or i32 %v1_10003bfc, %v2_10003bfc
  store i32 %v3_10003bfc, i32* @r24, align 4
  %v3_10003c00 = load i32, i32* @r29, align 4
  %v4_10003c00 = add i32 %v3_10003c00, 20
  %v5_10003c00 = inttoptr i32 %v4_10003c00 to i16*
  store i16 %v1_10003bf0, i16* %v5_10003c00, align 2
  %v0_10003c04 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10003c04, label %dec_label_pc_10003c08, label %dec_label_pc_10003ae8

dec_label_pc_10003c08:                            ; preds = %dec_label_pc_10003bf0, %dec_label_pc_10003ad8
  %v0_10003c08 = call i32 @function_10005258()
  %v1_10003c08 = trunc i32 %v0_10003c08 to i16
  store i32 %v0_10003c08, i32* %r3.global-to-local, align 4
  %v3_10003c0c = load i32, i32* @r28, align 4
  %v4_10003c0c = add i32 %v3_10003c0c, 2
  %v5_10003c0c = inttoptr i32 %v4_10003c0c to i16*
  store i16 %v1_10003c08, i16* %v5_10003c0c, align 2
  %v0_10003c10 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10003c10, label %dec_label_pc_10003c14, label %dec_label_pc_10003aec

dec_label_pc_10003c14:                            ; preds = %dec_label_pc_10003c08, %dec_label_pc_10003ae8
  %v0_10003c14 = call i32 @function_10005258()
  %v1_10003c14 = trunc i32 %v0_10003c14 to i16
  store i32 %v0_10003c14, i32* %r3.global-to-local, align 4
  %v3_10003c18 = load i32, i32* @r29, align 4
  %v4_10003c18 = add i32 %v3_10003c18, 28
  %v5_10003c18 = inttoptr i32 %v4_10003c18 to i16*
  store i16 %v1_10003c14, i16* %v5_10003c18, align 2
  br label %dec_label_pc_10003aec

dec_label_pc_10003c20:                            ; preds = %dec_label_pc_10003814
  %v2_10003c20 = sub i32 %v0_1000382c, %v0_100037bc
  store i32 %v2_10003c20, i32* %r29.global-to-local, align 4
  store i32 %v2_100037e4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10003c34.26 to i32), i32* @lr, align 4
  %v3_10003c30 = call i32 @function_10007d10(i32 %v2_100037e4, i32 %v2_100037dc, i32 %v2_10003c20)
  %v2_10003c34 = ptrtoint i32* %stack_var_-2200 to i32
  %v2_10003c38 = add i32 %v2_10003c20, %v2_10003c34
  store i32 %v2_10003c38, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10003c40 = add i32 %v2_10003c38, 4
  %v4_10003c40 = inttoptr i32 %v3_10003c40 to i8*
  store i8 0, i8* %v4_10003c40, align 1
  store i32 %v2_100037e4, i32* %r3.global-to-local, align 4
  store i32 268450892, i32* @lr, align 4
  %v1_10003c48 = call i32 @function_10008e18(i32 %v2_100037e4)
  store i32 %v1_10003c48, i32* %r3.global-to-local, align 4
  store i32 %v1_10003c48, i32* @r21, align 4
  br label %dec_label_pc_10003870

dec_label_pc_10003c54:                            ; preds = %dec_label_pc_100039a0
  %v0_10003c54 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10003c54, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  %v3_10003c5c = inttoptr i32 %v0_10003c54 to i8*
  store i8 0, i8* %v3_10003c5c, align 1
  %v0_10003c60 = load i32, i32* %r29.global-to-local, align 4
  %v1_10003c60 = load i32, i32* %r18.global-to-local, align 4
  %v2_10003c60 = add i32 %v1_10003c60, %v0_10003c60
  store i32 %v2_10003c60, i32* %r9.global-to-local, align 4
  %v0_10003c64 = load i32, i32* %r27.global-to-local, align 4
  %v1_10003c64 = trunc i32 %v0_10003c64 to i16
  %v3_10003c64 = add i32 %v2_10003c60, 4
  %v4_10003c64 = inttoptr i32 %v3_10003c64 to i16*
  store i16 %v1_10003c64, i16* %v4_10003c64, align 2
  %v3_10003c68 = load i32, i32* %stack_var_-2200, align 4
  store i32 %v3_10003c68, i32* %r11.global-to-local, align 4
  %v0_10003c6c = load i32, i32* %r27.global-to-local, align 4
  %v1_10003c6c = trunc i32 %v0_10003c6c to i16
  %v2_10003c6c = load i32, i32* %r9.global-to-local, align 4
  %v3_10003c6c = add i32 %v2_10003c6c, 2
  %v4_10003c6c = inttoptr i32 %v3_10003c6c to i16*
  store i16 %v1_10003c6c, i16* %v4_10003c6c, align 2
  %v0_10003c70 = load i32, i32* %r11.global-to-local, align 4
  %v1_10003c70 = add i32 %v0_10003c70, 1
  %v1_10003c74 = load i32, i32* %r19.global-to-local, align 4
  %v2_10003c74 = icmp slt i32 %v1_10003c70, %v1_10003c74
  %v4_10003c74 = icmp eq i32 %v1_10003c70, %v1_10003c74
  store i1 %v2_10003c74, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10003c74, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10003c70, i32* %stack_var_-2200, align 4
  br i1 %v2_10003c74, label %dec_label_pc_10003938, label %dec_label_pc_10003a68.preheader

dec_label_pc_10003c84:                            ; preds = %dec_label_pc_10003844
  store i32 134744072, i32* @r21, align 4
  br label %dec_label_pc_10003870

dec_label_pc_10003c90:                            ; preds = %dec_label_pc_1000384c
  store i32 1074151430, i32* @r21, align 4
  br label %dec_label_pc_10003870

dec_label_pc_10003c9c:                            ; preds = %dec_label_pc_100038b0
  %v0_10003c9c = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10003c9c, i32* %r3.global-to-local, align 4
  store i32 268450980, i32* @lr, align 4
  %v0_10003ca0 = call i32 @function_100083cc()
  store i32 %v0_10003ca0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003b84

; uselistorder directives
  uselistorder i32 %v1_10003c70, { 0, 2, 1 }
  uselistorder i32 %v0_10003c14, { 1, 0 }
  uselistorder i32 %v0_10003c08, { 1, 0 }
  uselistorder i32 %v0_10003bf4, { 2, 1, 0 }
  uselistorder i32 %v0_10003bf0, { 1, 0 }
  uselistorder i32 %v0_10003be4, { 1, 0 }
  uselistorder i32 %v0_10003b74, { 1, 0, 2 }
  uselistorder i32 %v1_10003b60, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_10003b24, { 1, 0 }
  uselistorder i32 %v0_10003ad8, { 2, 1, 0 }
  uselistorder i32 %v1_10003ac0, { 1, 0 }
  uselistorder i32 %v2_10003a74, { 2, 1, 0 }
  uselistorder i32 %v1_10003a58, { 0, 2, 1 }
  uselistorder i32 %v1_10003a40, { 2, 1, 0 }
  uselistorder i32 %v1_10003a3c, { 1, 0 }
  uselistorder i32 %v0_10003a34, { 0, 2, 3, 1 }
  uselistorder i32 %v1_10003a30, { 1, 0 }
  uselistorder i32 %v1_10003a20, { 1, 2, 0 }
  uselistorder i32 %v1_10003a18, { 0, 2, 1 }
  uselistorder i32 %v1_10003a0c, { 1, 0 }
  uselistorder i32 %v1_10003950, { 1, 0 }
  uselistorder i32 %v1_10003948, { 1, 0 }
  uselistorder i32 %v2_10003908, { 1, 2, 0 }
  uselistorder i32 %v1_10003908, { 1, 3, 2, 0 }
  uselistorder i32 %v0_100038d8, { 1, 0 }
  uselistorder i32 %v4_100038c8, { 1, 0, 2 }
  uselistorder i32 %v3_100038a0, { 0, 2, 1, 3 }
  uselistorder i32 %v2_1000387c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_10003878, { 1, 0, 2, 3 }
  uselistorder i1 %v2_1000384c, { 1, 0 }
  uselistorder i1 %v1_1000383c, { 1, 0, 2 }
  uselistorder i32 %v1_10003838, { 5, 3, 4, 1, 2, 0 }
  uselistorder i32 %v1_10003830, { 2, 1, 0 }
  uselistorder i32 %v1_1000382c, { 1, 0 }
  uselistorder i32 %v1_10003818, { 1, 2, 3, 0 }
  uselistorder i32 %v1_100037f4, { 1, 0 }
  uselistorder i32 %v0_100037e8, { 2, 1, 0 }
  uselistorder i32 %v2_100037e4, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_100037c4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_100037bc, { 1, 2, 0, 3, 4, 7, 6, 5, 8, 9 }
  uselistorder i32 %v0_10003764, { 1, 0, 2, 3 }
  uselistorder i8 %v5_100036a4, { 1, 0 }
  uselistorder i32* %stack_var_-2200, { 0, 1, 12, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 11 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 29, 12, 13, 14, 15, 16, 17, 2, 18, 20, 19, 21, 22, 23, 24, 25, 1, 26, 27, 28, 31, 30, 32, 33, 34, 35, 36, 37, 38, 40, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 0 }
  uselistorder i32* %r29.global-to-local, { 2, 3, 0, 1, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r27.global-to-local, { 1, 2, 0, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 15, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32* %ctr.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 1, 2, 3, 6, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 3, 1, 2, 4, 5, 8, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32 (i32)* @function_10008e18, { 1, 0 }
  uselistorder i32 41, { 1, 2, 3, 0 }
  uselistorder i32 47, { 1, 0, 2, 3, 4 }
  uselistorder i32 (i32, i32*, i32, i32)* @function_10000300, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 85, 86, 87, 88, 89, 77, 78, 79, 80, 81, 82, 83, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76 }
  uselistorder label %dec_label_pc_10003b84, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10003aec, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10003a68, { 1, 0 }
  uselistorder label %dec_label_pc_10003a68.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003a44, { 1, 0 }
  uselistorder label %dec_label_pc_10003a1c, { 1, 0 }
  uselistorder label %dec_label_pc_100039a0, { 1, 0 }
  uselistorder label %dec_label_pc_10003870, { 1, 2, 3, 5, 4, 0 }
  uselistorder label %dec_label_pc_10003814, { 1, 0 }
}

define i32 @function_10003ca8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10003ca8:
  %tmp = or i32 %arg1, 1
  %tmp8 = icmp eq i32 %tmp, 1
  br i1 %tmp8, label %dec_label_pc_10003cdc, label %dec_label_pc_10003cb4

dec_label_pc_10003cb4:                            ; preds = %dec_label_pc_10003ca8
  %v1_10003cb4 = add i32 %arg1, -2
  %v1_10003cb8 = udiv i32 %v1_10003cb4, 2
  %v1_10003cbc = add nuw i32 %v1_10003cb8, 1
  %v0_10003cc8.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10003cc8

dec_label_pc_10003cc8:                            ; preds = %dec_label_pc_10003cc8, %dec_label_pc_10003cb4
  %v0_10003cd8 = phi i32 [ %v1_10003cd8, %dec_label_pc_10003cc8 ], [ %v1_10003cbc, %dec_label_pc_10003cb4 ]
  %v0_10003cd4 = phi i32 [ %v2_10003cd4, %dec_label_pc_10003cc8 ], [ 0, %dec_label_pc_10003cb4 ]
  %v0_10003cd0 = phi i32 [ %v1_10003cd0, %dec_label_pc_10003cc8 ], [ %v0_10003cc8.pre, %dec_label_pc_10003cb4 ]
  %v1_10003cc8 = inttoptr i32 %v0_10003cd0 to i16*
  %v2_10003cc8 = load i16, i16* %v1_10003cc8, align 2
  %v3_10003cc8 = zext i16 %v2_10003cc8 to i32
  %v1_10003cd0 = add i32 %v0_10003cd0, 2
  store i32 %v1_10003cd0, i32* @r3, align 4
  %v2_10003cd4 = add i32 %v3_10003cc8, %v0_10003cd4
  %v1_10003cd8 = add i32 %v0_10003cd8, -1
  %v2_10003cd8 = icmp eq i32 %v1_10003cd8, 0
  br i1 %v2_10003cd8, label %dec_label_pc_10003cdc.loopexit, label %dec_label_pc_10003cc8

dec_label_pc_10003cdc.loopexit:                   ; preds = %dec_label_pc_10003cc8
  %tmp11 = mul i32 %v1_10003cb8, -2
  %tmp10 = add i32 %v1_10003cb4, %tmp11
  br label %dec_label_pc_10003cdc

dec_label_pc_10003cdc:                            ; preds = %dec_label_pc_10003cdc.loopexit, %dec_label_pc_10003ca8
  %v0_10003ce8 = phi i32 [ 0, %dec_label_pc_10003ca8 ], [ %v2_10003cd4, %dec_label_pc_10003cdc.loopexit ]
  %v0_10003cdc = phi i32 [ %arg1, %dec_label_pc_10003ca8 ], [ %tmp10, %dec_label_pc_10003cdc.loopexit ]
  %v3_10003cdc = icmp eq i32 %v0_10003cdc, 1
  br i1 %v3_10003cdc, label %dec_label_pc_10003ce4, label %dec_label_pc_10003cec

dec_label_pc_10003ce4:                            ; preds = %dec_label_pc_10003cdc
  %v0_10003ce4 = load i32, i32* @r3, align 4
  %v1_10003ce4 = add i32 %v0_10003ce4, 1
  %v2_10003ce4 = inttoptr i32 %v1_10003ce4 to i8*
  %v3_10003ce4 = load i8, i8* %v2_10003ce4, align 1
  %v4_10003ce4 = zext i8 %v3_10003ce4 to i32
  %v2_10003ce8 = add i32 %v4_10003ce4, %v0_10003ce8
  br label %dec_label_pc_10003cec

dec_label_pc_10003cec:                            ; preds = %dec_label_pc_10003cdc, %dec_label_pc_10003ce4
  %v0_10003cec = phi i32 [ %v0_10003ce8, %dec_label_pc_10003cdc ], [ %v2_10003ce8, %dec_label_pc_10003ce4 ]
  %v1_10003cec = urem i32 %v0_10003cec, 65536
  %v1_10003cf0 = udiv i32 %v0_10003cec, 65536
  %v2_10003cf4 = add nuw nsw i32 %v1_10003cec, %v1_10003cf0
  %v1_10003cf8 = udiv i32 %v2_10003cf4, 65536
  %v2_10003cfc = add nuw nsw i32 %v1_10003cf8, %v2_10003cf4
  %v1_10003d00 = urem i32 %v2_10003cfc, 65536
  %v1_10003d04 = xor i32 %v1_10003d00, 65535
  ret i32 %v1_10003d04

; uselistorder directives
  uselistorder i32 %v2_10003cf4, { 1, 0 }
  uselistorder i32 %v0_10003ce8, { 1, 0 }
  uselistorder i32 %v1_10003cd8, { 1, 0 }
  uselistorder i32 %v1_10003cd0, { 1, 0 }
  uselistorder label %dec_label_pc_10003cec, { 1, 0 }
}

define i32 @function_10003d0c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10003d0c:
  %r0.global-to-local = alloca i32, align 4
  %v1_10003d10 = add i32 %arg1, 12
  %v2_10003d10 = inttoptr i32 %v1_10003d10 to i32*
  %v3_10003d10 = load i32, i32* %v2_10003d10, align 4
  %v1_10003d14 = add i32 %arg1, 16
  %v2_10003d14 = inttoptr i32 %v1_10003d14 to i32*
  %v3_10003d14 = load i32, i32* %v2_10003d14, align 4
  %tmp = icmp slt i32 %arg3, 2
  br i1 %tmp, label %dec_label_pc_10003d50, label %dec_label_pc_10003d1c

dec_label_pc_10003d1c:                            ; preds = %dec_label_pc_10003d0c
  %v1_10003d1c = add i32 %arg3, -2
  %v1_10003d24 = icmp slt i32 %v1_10003d1c, 0
  %v1_10003d28 = udiv i32 %v1_10003d1c, 2
  %v1_10003d2c = add nuw i32 %v1_10003d28, 1
  br i1 %v1_10003d24, label %dec_label_pc_10003db8, label %dec_label_pc_10003d38.preheader

dec_label_pc_10003d38.preheader:                  ; preds = %dec_label_pc_10003db8, %dec_label_pc_10003d1c
  %v0_10003d4c4 = phi i32 [ 1, %dec_label_pc_10003db8 ], [ %v1_10003d2c, %dec_label_pc_10003d1c ]
  %v0_10003d38.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10003d38

dec_label_pc_10003d38:                            ; preds = %dec_label_pc_10003d38.preheader, %dec_label_pc_10003d38
  %v0_10003d4c = phi i32 [ %v0_10003d4c4, %dec_label_pc_10003d38.preheader ], [ %v1_10003d4c, %dec_label_pc_10003d38 ]
  %v0_10003d48 = phi i32 [ 0, %dec_label_pc_10003d38.preheader ], [ %v2_10003d48, %dec_label_pc_10003d38 ]
  %v0_10003d40 = phi i32 [ %v0_10003d38.pre, %dec_label_pc_10003d38.preheader ], [ %v1_10003d40, %dec_label_pc_10003d38 ]
  %v1_10003d38 = inttoptr i32 %v0_10003d40 to i16*
  %v2_10003d38 = load i16, i16* %v1_10003d38, align 2
  %v3_10003d38 = zext i16 %v2_10003d38 to i32
  store i32 %v3_10003d38, i32* %r0.global-to-local, align 4
  %v1_10003d40 = add i32 %v0_10003d40, 2
  %v2_10003d48 = add i32 %v3_10003d38, %v0_10003d48
  %v1_10003d4c = add i32 %v0_10003d4c, -1
  %v2_10003d4c = icmp eq i32 %v1_10003d4c, 0
  br i1 %v2_10003d4c, label %dec_label_pc_10003d50.loopexit, label %dec_label_pc_10003d38

dec_label_pc_10003d50.loopexit:                   ; preds = %dec_label_pc_10003d38
  %tmp14 = mul i32 %v0_10003d4c4, -2
  %tmp13 = add i32 %tmp14, %arg3
  %v3_10003d44 = icmp eq i32 %tmp13, 1
  br i1 %v3_10003d44, label %dec_label_pc_10003da4, label %dec_label_pc_10003d54

dec_label_pc_10003d50:                            ; preds = %dec_label_pc_10003d0c
  %v3_10003d0c = icmp eq i32 %arg3, 1
  br i1 %v3_10003d0c, label %dec_label_pc_10003d50.dec_label_pc_10003da4_crit_edge, label %dec_label_pc_10003d54

dec_label_pc_10003d50.dec_label_pc_10003da4_crit_edge: ; preds = %dec_label_pc_10003d50
  %v0_10003da4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10003da4

dec_label_pc_10003d54:                            ; preds = %dec_label_pc_10003d50.loopexit, %dec_label_pc_10003d50, %dec_label_pc_10003da4
  %v0_10003d6c = phi i32 [ 0, %dec_label_pc_10003d50 ], [ %v2_10003da8, %dec_label_pc_10003da4 ], [ %v2_10003d48, %dec_label_pc_10003d50.loopexit ]
  %v1_10003d54 = urem i32 %v3_10003d10, 65536
  %v1_10003d58 = udiv i32 %v3_10003d10, 65536
  %v2_10003d5c = add nuw nsw i32 %v1_10003d54, %v1_10003d58
  store i32 %v2_10003d5c, i32* %r0.global-to-local, align 4
  %v1_10003d60 = urem i32 %v3_10003d14, 65536
  %v1_10003d64 = add i32 %arg1, 9
  %v2_10003d64 = inttoptr i32 %v1_10003d64 to i8*
  %v3_10003d64 = load i8, i8* %v2_10003d64, align 1
  %v4_10003d64 = zext i8 %v3_10003d64 to i32
  %v1_10003d68 = udiv i32 %v3_10003d14, 65536
  %v2_10003d6c = add i32 %v0_10003d6c, %v1_10003d68
  %v2_10003d74 = add i32 %v2_10003d6c, %v4_10003d64
  %v2_10003d70 = add i32 %v2_10003d5c, %arg2
  %v2_10003d78 = add i32 %v2_10003d70, %v1_10003d60
  %v2_10003d7c = add i32 %v2_10003d78, %v2_10003d74
  store i32 %v2_10003d7c, i32* %r0.global-to-local, align 4
  %v1_10003d80 = call i32 @__asm_rlwinm.(i32 %v2_10003d7c, i32 16, i32 16, i32 31)
  %v4_10003d80 = icmp eq i32 %v1_10003d80, 0
  br i1 %v4_10003d80, label %dec_label_pc_10003d98, label %dec_label_pc_10003d88

dec_label_pc_10003d88:                            ; preds = %dec_label_pc_10003d54, %dec_label_pc_10003d88
  %v1_10003d8c = phi i32 [ %v1_10003d90, %dec_label_pc_10003d88 ], [ %v1_10003d80, %dec_label_pc_10003d54 ]
  %v0_10003d88 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003d88 = urem i32 %v0_10003d88, 65536
  %v2_10003d8c = add i32 %v1_10003d88, %v1_10003d8c
  store i32 %v2_10003d8c, i32* %r0.global-to-local, align 4
  %v1_10003d90 = call i32 @__asm_rlwinm.(i32 %v2_10003d8c, i32 16, i32 16, i32 31)
  %v4_10003d90 = icmp eq i32 %v1_10003d90, 0
  br i1 %v4_10003d90, label %dec_label_pc_10003d98, label %dec_label_pc_10003d88

dec_label_pc_10003d98:                            ; preds = %dec_label_pc_10003d88, %dec_label_pc_10003d54
  %v0_10003d98 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003d98 = urem i32 %v0_10003d98, 65536
  %v1_10003d9c = xor i32 %v1_10003d98, 65535
  ret i32 %v1_10003d9c

dec_label_pc_10003da4:                            ; preds = %dec_label_pc_10003d50.dec_label_pc_10003da4_crit_edge, %dec_label_pc_10003d50.loopexit
  %v0_10003da4 = phi i32 [ %v1_10003d40, %dec_label_pc_10003d50.loopexit ], [ %v0_10003da4.pre, %dec_label_pc_10003d50.dec_label_pc_10003da4_crit_edge ]
  %v0_10003da810 = phi i32 [ %v2_10003d48, %dec_label_pc_10003d50.loopexit ], [ 0, %dec_label_pc_10003d50.dec_label_pc_10003da4_crit_edge ]
  %v1_10003da4 = inttoptr i32 %v0_10003da4 to i8*
  %v2_10003da4 = load i8, i8* %v1_10003da4, align 1
  %v3_10003da4 = zext i8 %v2_10003da4 to i32
  store i32 %v3_10003da4, i32* %r0.global-to-local, align 4
  %v2_10003da8 = add i32 %v3_10003da4, %v0_10003da810
  br label %dec_label_pc_10003d54

dec_label_pc_10003db8:                            ; preds = %dec_label_pc_10003d1c
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10003d38.preheader

; uselistorder directives
  uselistorder i32 %v1_10003d90, { 1, 0 }
  uselistorder i32 %v1_10003d4c, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7 }
  uselistorder i32 %arg3, { 3, 0, 2, 1 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10003d88, { 1, 0 }
  uselistorder label %dec_label_pc_10003d54, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003d38, { 1, 0 }
}

define i32 @function_10003dc4(i32 %arg1) local_unnamed_addr {
dec_label_pc_10003dc4:
  %v3_10003dd8 = load i32, i32* @global_var_1001b44c.27, align 4
  store i32 268451296, i32* @lr, align 4
  %v2_10003ddc = call i32 @function_100084ec(i32 %v3_10003dd8, i32 9)
  ret i32 %v2_10003ddc
}

define i32 @function_10003df0(i32 %arg1) local_unnamed_addr {
dec_label_pc_10003df0:
  %r26.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-8792 = alloca i32, align 4
  %stack_var_-8760 = alloca i8, align 1
  %stack_var_-8776 = alloca i8, align 1
  %stack_var_-4151 = alloca i32, align 4
  %stack_var_-8247 = alloca i32, align 4
  %v0_10003e00 = load i32, i32* @r27, align 4
  %v2_10003e04 = ptrtoint i32* %stack_var_-8247 to i32
  store i32 %v2_10003e04, i32* @r27, align 4
  %v2_10003e0c = ptrtoint i32* %stack_var_-4151 to i32
  %v0_10003e10 = load i32, i32* @r29, align 4
  store i32 %arg1, i32* @r29, align 4
  %v0_10003e20 = load i32, i32* @r25, align 4
  %v2_10003e24 = ptrtoint i8* %stack_var_-8776 to i32
  %v0_10003e28 = load i32, i32* @r30, align 4
  %v2_10003e2c = ptrtoint i8* %stack_var_-8760 to i32
  store i32 %v2_10003e2c, i32* @r30, align 4
  %v0_10003e30 = load i32, i32* @r31, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v0_10003e38 = load i32, i32* @r23, align 4
  %v0_10003e40 = load i32, i32* @r28, align 4
  store i32 268451400, i32* @lr, align 4
  %v3_10003e44 = call i32 @function_10008b88(i32 %v2_10003e04, i32 0, i32 4096)
  store i32 268451416, i32* @lr, align 4
  %v3_10003e54 = call i32 @function_10008b88(i32 %v2_10003e0c, i32 0, i32 4096)
  store i32 268451432, i32* @lr, align 4
  %v3_10003e64 = call i32 @function_10008b88(i32 %v2_10003e2c, i32 0, i32 513)
  %v0_10003e70 = load i32, i32* @r29, align 4
  %v0_10003e74 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10003e74, i32* %stack_var_-8792, align 4
  %v3_10003e84 = trunc i32 %v0_10003e70 to i8
  %v4_10003e84 = call i32 @function_100080e8(i8 %v3_10003e84, i32 16, i32 %v2_10003e24)
  store i32 268451472, i32* @lr, align 4
  %v2_10003e8c = call i32 @function_10007c8c(i8* nonnull %stack_var_-8776)
  %v3_10003e90 = icmp eq i32 %v2_10003e8c, 2
  br i1 %v3_10003e90, label %dec_label_pc_100043dc, label %dec_label_pc_10003e98

dec_label_pc_10003e98:                            ; preds = %dec_label_pc_10003df0, %dec_label_pc_100043dc
  store i32 0, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10003ea4.28 to i32), i32* @lr, align 4
  %v1_10003ea0 = call i32 @function_1000780c(i32 3)
  store i32 ptrtoint ([3 x i8]* @global_var_10003eac.29 to i32), i32* @lr, align 4
  %v1_10003ea8 = call i32 @function_1000780c(i32 4)
  store i32 ptrtoint ([3 x i8]* @global_var_10003eb4.30 to i32), i32* @lr, align 4
  %v1_10003eb0 = call i32 @function_1000780c(i32 6)
  store i32 268451516, i32* @lr, align 4
  %v1_10003eb8 = call i32 @function_1000780c(i32 8)
  %v3_10003ec4 = call i32 @function_10007758(i32 8, i32* null)
  store i32 268451540, i32* @lr, align 4
  %v2_10003ed0 = call i32 @function_10008534(i32 %v3_10003ec4, i32 0)
  %v3_10003ed4 = icmp eq i32 %v2_10003ed0, -1
  store i32 %v2_10003ed0, i32* @r28, align 4
  br i1 %v3_10003ed4, label %dec_label_pc_10004328, label %dec_label_pc_10003ee0

dec_label_pc_10003ee0:                            ; preds = %dec_label_pc_10003e98
  %v2_10003ee0 = ptrtoint i32* %stack_var_-8792 to i32
  store i32 %v2_10003ee0, i32* %r26.global-to-local, align 4
  store i32 268451572, i32* @lr, align 4
  %v4_10003ef098 = call i32 @function_10007eec(i8* nonnull %stack_var_-8760, i32 512, i32 %v2_10003ed0)
  %v3_10003ef4100 = icmp eq i32 %v4_10003ef098, 0
  br i1 %v3_10003ef4100, label %dec_label_pc_100040a0.loopexit, label %dec_label_pc_10003efc

dec_label_pc_10003efc:                            ; preds = %dec_label_pc_10003ee0, %dec_label_pc_10003ee4.backedge
  %v3_10003efc = load i8, i8* %stack_var_-8760, align 1
  %v3_10003f00 = icmp eq i8 %v3_10003efc, 0
  br i1 %v3_10003f00, label %dec_label_pc_10003ee4.backedge, label %dec_label_pc_10003f08

dec_label_pc_10003ee4.backedge:                   ; preds = %dec_label_pc_10003f1c, %dec_label_pc_10003efc, %dec_label_pc_10003f8c, %dec_label_pc_10004024, %dec_label_pc_10004074
  %v0_10003eec.pre = load i32, i32* @r28, align 4
  store i32 268451572, i32* @lr, align 4
  %v4_10003ef0 = call i32 @function_10007eec(i8* nonnull %stack_var_-8760, i32 512, i32 %v0_10003eec.pre)
  %v3_10003ef4 = icmp eq i32 %v4_10003ef0, 0
  br i1 %v3_10003ef4, label %dec_label_pc_100040a0.loopexit, label %dec_label_pc_10003efc

dec_label_pc_10003f08:                            ; preds = %dec_label_pc_10003efc
  %v3_10003f08 = icmp eq i8 %v3_10003efc, 58
  store i32 3, i32* @r31, align 4
  br i1 %v3_10003f08, label %dec_label_pc_10003f3c, label %dec_label_pc_10003f18

dec_label_pc_10003f18:                            ; preds = %dec_label_pc_10003f08
  %v1_10003f20.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10003f1c

dec_label_pc_10003f1c:                            ; preds = %dec_label_pc_10003f30, %dec_label_pc_10003f18
  %v0_10003f1c = phi i32 [ %v1_10003f1c, %dec_label_pc_10003f30 ], [ 0, %dec_label_pc_10003f18 ]
  %v1_10003f1c = add i32 %v0_10003f1c, 1
  %v2_10003f20 = add i32 %v1_10003f1c, %v1_10003f20.pre
  %v3_10003f20 = inttoptr i32 %v2_10003f20 to i8*
  %v4_10003f20 = load i8, i8* %v3_10003f20, align 1
  %v3_10003f24 = icmp eq i8 %v4_10003f20, 0
  br i1 %v3_10003f24, label %dec_label_pc_10003ee4.backedge, label %dec_label_pc_10003f30

dec_label_pc_10003f30:                            ; preds = %dec_label_pc_10003f1c
  %v3_10003f28 = icmp eq i8 %v4_10003f20, 58
  br i1 %v3_10003f28, label %dec_label_pc_10003f34, label %dec_label_pc_10003f1c

dec_label_pc_10003f34:                            ; preds = %dec_label_pc_10003f30
  %v1_10003f34 = add i32 %v0_10003f1c, 4
  store i32 %v1_10003f34, i32* @r31, align 4
  %v1_10003f38 = add i32 %v0_10003f1c, 3
  br label %dec_label_pc_10003f3c

dec_label_pc_10003f3c:                            ; preds = %dec_label_pc_10003f08, %dec_label_pc_10003f34
  %v1_10003f94 = phi i32 [ 2, %dec_label_pc_10003f08 ], [ %v1_10003f38, %dec_label_pc_10003f34 ]
  %v0_10003f3c = load i32, i32* %r26.global-to-local, align 4
  %v2_10003f3c = add i32 %v0_10003f3c, %v1_10003f94
  %v1_10003f44 = add i32 %v2_10003f3c, 32
  %v2_10003f44 = inttoptr i32 %v1_10003f44 to i8*
  %v3_10003f44 = load i8, i8* %v2_10003f44, align 1
  %v3_10003f48 = icmp eq i8 %v3_10003f44, 0
  br i1 %v3_10003f48, label %dec_label_pc_10003f8c, label %dec_label_pc_10003f50

dec_label_pc_10003f50:                            ; preds = %dec_label_pc_10003f3c
  %v3_10003f50 = icmp eq i8 %v3_10003f44, 32
  %v1_10003f54 = add i32 %v1_10003f94, 1
  store i32 %v1_10003f54, i32* @r31, align 4
  br i1 %v3_10003f50, label %dec_label_pc_10003f8c, label %dec_label_pc_10003f5c

dec_label_pc_10003f5c:                            ; preds = %dec_label_pc_10003f50
  %v0_10003f64 = load i32, i32* @r30, align 4
  %v2_10003f64 = add i32 %v0_10003f64, %v1_10003f54
  br label %dec_label_pc_10003f70

dec_label_pc_10003f70:                            ; preds = %dec_label_pc_10003f70, %dec_label_pc_10003f5c
  %v0_10003f74 = phi i32 [ %v1_10003f74, %dec_label_pc_10003f70 ], [ %v1_10003f94, %dec_label_pc_10003f5c ]
  %v0_10003f78 = phi i32 [ %v1_10003f78, %dec_label_pc_10003f70 ], [ %v2_10003f64, %dec_label_pc_10003f5c ]
  %v1_10003f70 = inttoptr i32 %v0_10003f78 to i8*
  %v2_10003f70 = load i8, i8* %v1_10003f70, align 1
  %v1_10003f74 = add i32 %v0_10003f74, 1
  %v1_10003f78 = add i32 %v0_10003f78, 1
  %tmp59 = or i8 %v2_10003f70, 32
  %tmp60 = icmp eq i8 %tmp59, 32
  br i1 %tmp60, label %dec_label_pc_10003f88, label %dec_label_pc_10003f70

dec_label_pc_10003f88:                            ; preds = %dec_label_pc_10003f70
  %v1_10003f88 = add i32 %v0_10003f74, 2
  store i32 %v1_10003f88, i32* @r31, align 4
  br label %dec_label_pc_10003f8c

dec_label_pc_10003f8c:                            ; preds = %dec_label_pc_10003f50, %dec_label_pc_10003f3c, %dec_label_pc_10003f88
  %v1_10003f8c = phi i32 [ %v1_10003f94, %dec_label_pc_10003f50 ], [ %v1_10003f94, %dec_label_pc_10003f3c ], [ %v1_10003f74, %dec_label_pc_10003f88 ]
  %v2_10003f8c = add i32 %v1_10003f8c, %v0_10003f3c
  %v0_10003f94 = load i32, i32* @r30, align 4
  %v2_10003f94 = add i32 %v0_10003f94, %v1_10003f94
  store i32 %v2_10003f94, i32* @r29, align 4
  %v3_10003f98 = add i32 %v2_10003f8c, 32
  %v4_10003f98 = inttoptr i32 %v3_10003f98 to i8*
  store i8 0, i8* %v4_10003f98, align 1
  %v0_10003f9c = load i32, i32* @r29, align 4
  store i32 268451748, i32* @lr, align 4
  %v1_10003fa0 = inttoptr i32 %v0_10003f9c to i8*
  %v2_10003fa0 = call i32 @function_10007c8c(i8* %v1_10003fa0)
  %v0_10003fac = load i32, i32* @r29, align 4
  %v3_10003fb0 = inttoptr i32 %v0_10003fac to i8*
  %v4_10003fb0 = call i32 @function_1000803c(i8* %v3_10003fb0, i32 %v2_10003fa0, i32 %v2_10003e24)
  %v3_10003fb8 = icmp eq i32 %v4_10003fb0, -1
  br i1 %v3_10003fb8, label %dec_label_pc_10003ee4.backedge, label %dec_label_pc_10003fc4.preheader

dec_label_pc_10003fc4.preheader:                  ; preds = %dec_label_pc_10003f8c
  %v0_10003fc4.pre = load i32, i32* @r31, align 4
  %v0_10003fcc.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10003fc4.outer

dec_label_pc_10003fc4.outer:                      ; preds = %dec_label_pc_10004378, %dec_label_pc_10003fc4.preheader
  %v0_10003fe027.ph = phi i32 [ %v1_10004360, %dec_label_pc_10004378 ], [ 0, %dec_label_pc_10003fc4.preheader ]
  %v0_10003fc4.ph = phi i32 [ %v1_1000407c75, %dec_label_pc_10004378 ], [ %v0_10003fc4.pre, %dec_label_pc_10003fc4.preheader ]
  %v0_10004024.ph = phi i32 [ 1, %dec_label_pc_10004378 ], [ 0, %dec_label_pc_10003fc4.preheader ]
  br label %dec_label_pc_10003fc4

dec_label_pc_10003fc4:                            ; preds = %dec_label_pc_10003fc4.outer, %dec_label_pc_10004368
  %v0_10003fe027 = phi i32 [ %v1_10004360, %dec_label_pc_10004368 ], [ %v0_10003fe027.ph, %dec_label_pc_10003fc4.outer ]
  %v0_10003fc4 = phi i32 [ %v1_1000407c75, %dec_label_pc_10004368 ], [ %v0_10003fc4.ph, %dec_label_pc_10003fc4.outer ]
  %v1_10003fc4 = add i32 %v0_10003fc4, 1
  %v2_10003fcc = add i32 %v1_10003fc4, %v0_10003fcc.pre
  %v1_10003ff867 = inttoptr i32 %v2_10003fcc to i8*
  %v2_10003ff868 = load i8, i8* %v1_10003ff867, align 1
  store i32 %v1_10003fc4, i32* @r31, align 4
  %v3_1000400070 = icmp eq i8 %v2_10003ff868, 0
  br i1 %v3_1000400070, label %dec_label_pc_10004024, label %dec_label_pc_10004010

dec_label_pc_10003fd4:                            ; preds = %dec_label_pc_10004010
  %v3_1000400478 = icmp eq i8 %v3_1000400478.in, 9
  br i1 %v3_1000400478, label %dec_label_pc_10004014, label %dec_label_pc_10003fe0

dec_label_pc_10003fe0:                            ; preds = %dec_label_pc_10003fd4
  %v3_10003fd4 = icmp eq i32 %v0_10003fd474, 1
  br i1 %v3_10003fd4, label %dec_label_pc_10004360, label %dec_label_pc_10003fe8

dec_label_pc_10003fe8:                            ; preds = %dec_label_pc_10003fe0, %dec_label_pc_10004360
  %v0_10003fe8 = phi i32 [ %v1_10004360, %dec_label_pc_10004360 ], [ %v0_1000401473, %dec_label_pc_10003fe0 ]
  %v2_10003fe8 = icmp sgt i32 %v0_10003fe8, 6
  br i1 %v2_10003fe8, label %dec_label_pc_10004024, label %dec_label_pc_10003ff4

dec_label_pc_10003ff4:                            ; preds = %dec_label_pc_10004014, %dec_label_pc_10003fe8
  %v0_10003fe026 = phi i32 [ %v0_1000401473, %dec_label_pc_10004014 ], [ %v0_10003fe8, %dec_label_pc_10003fe8 ]
  %v0_10003fd424 = phi i32 [ 1, %dec_label_pc_10004014 ], [ 0, %dec_label_pc_10003fe8 ]
  %v0_10003ff821 = add i32 %v0_1000401c77, 1
  %v1_10003ff4 = add i32 %v1_1000407c75, 1
  %v1_10003ff8 = inttoptr i32 %v0_10003ff821 to i8*
  %v2_10003ff8 = load i8, i8* %v1_10003ff8, align 1
  store i32 %v1_10003ff4, i32* @r31, align 4
  %v3_10004000 = icmp eq i8 %v2_10003ff8, 0
  br i1 %v3_10004000, label %dec_label_pc_10004024, label %dec_label_pc_10004010

dec_label_pc_10004010:                            ; preds = %dec_label_pc_10003fc4, %dec_label_pc_10003ff4
  %v3_1000400478.in = phi i8 [ %v2_10003ff8, %dec_label_pc_10003ff4 ], [ %v2_10003ff868, %dec_label_pc_10003fc4 ]
  %v3_1000400879.in = phi i8 [ %v2_10003ff8, %dec_label_pc_10003ff4 ], [ %v2_10003ff868, %dec_label_pc_10003fc4 ]
  %v0_1000401c77 = phi i32 [ %v0_10003ff821, %dec_label_pc_10003ff4 ], [ %v2_10003fcc, %dec_label_pc_10003fc4 ]
  %v1_1000407c75 = phi i32 [ %v1_10003ff4, %dec_label_pc_10003ff4 ], [ %v1_10003fc4, %dec_label_pc_10003fc4 ]
  %v0_10003fd474 = phi i32 [ %v0_10003fd424, %dec_label_pc_10003ff4 ], [ 0, %dec_label_pc_10003fc4 ]
  %v0_1000401473 = phi i32 [ %v0_10003fe026, %dec_label_pc_10003ff4 ], [ %v0_10003fe027, %dec_label_pc_10003fc4 ]
  %v3_1000400879 = icmp eq i8 %v3_1000400879.in, 32
  br i1 %v3_1000400879, label %dec_label_pc_10004014, label %dec_label_pc_10003fd4

dec_label_pc_10004014:                            ; preds = %dec_label_pc_10004010, %dec_label_pc_10003fd4
  %tmp61 = icmp slt i32 %v0_1000401473, 7
  br i1 %tmp61, label %dec_label_pc_10003ff4, label %dec_label_pc_10004024

dec_label_pc_10004024:                            ; preds = %dec_label_pc_10003ff4, %dec_label_pc_10003fe8, %dec_label_pc_10004014, %dec_label_pc_10003fc4
  %v1_1000407c.lcssa = phi i32 [ %v1_10003fc4, %dec_label_pc_10003fc4 ], [ %v1_1000407c75, %dec_label_pc_10004014 ], [ %v1_1000407c75, %dec_label_pc_10003fe8 ], [ %v1_10003ff4, %dec_label_pc_10003ff4 ]
  %v3_10004024 = icmp eq i32 %v0_10004024.ph, 0
  br i1 %v3_10004024, label %dec_label_pc_10003ee4.backedge, label %dec_label_pc_10004030

dec_label_pc_10004030:                            ; preds = %dec_label_pc_10004024
  %v0_10004030 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004030 = add i32 %v0_10004030, %v1_1000407c.lcssa
  %v1_10004034 = add i32 %v2_10004030, 32
  %v2_10004034 = inttoptr i32 %v1_10004034 to i8*
  %v3_10004034 = load i8, i8* %v2_10004034, align 1
  %v3_10004038 = icmp eq i8 %v3_10004034, 0
  br i1 %v3_10004038, label %dec_label_pc_10004074, label %dec_label_pc_10004040

dec_label_pc_10004040:                            ; preds = %dec_label_pc_10004030
  %v3_10004040 = icmp eq i8 %v3_10004034, 32
  br i1 %v3_10004040, label %dec_label_pc_10004074, label %dec_label_pc_10004048

dec_label_pc_10004048:                            ; preds = %dec_label_pc_10004040
  %v1_10004048 = add i32 %v1_1000407c.lcssa, 1
  %v2_1000404c = add i32 %v1_10004048, %v0_10003fcc.pre
  %v1_1000405c87 = inttoptr i32 %v2_1000404c to i8*
  %v2_1000405c88 = load i8, i8* %v1_1000405c87, align 1
  store i32 %v1_10004048, i32* %r31.global-to-local, align 4
  %tmp6293 = or i8 %v2_1000405c88, 32
  %tmp6394 = icmp eq i8 %tmp6293, 32
  br i1 %tmp6394, label %dec_label_pc_10004074, label %dec_label_pc_10004058

dec_label_pc_10004058:                            ; preds = %dec_label_pc_10004048, %dec_label_pc_10004058
  %v1_1000406496.in = phi i32 [ %v1_1000406496, %dec_label_pc_10004058 ], [ %v2_1000404c, %dec_label_pc_10004048 ]
  %v0_1000405895 = phi i32 [ %v1_10004058, %dec_label_pc_10004058 ], [ %v1_10004048, %dec_label_pc_10004048 ]
  %v1_1000406496 = add i32 %v1_1000406496.in, 1
  %v1_10004058 = add i32 %v0_1000405895, 1
  %v1_1000405c = inttoptr i32 %v1_1000406496 to i8*
  %v2_1000405c = load i8, i8* %v1_1000405c, align 1
  store i32 %v1_10004058, i32* %r31.global-to-local, align 4
  %tmp62 = or i8 %v2_1000405c, 32
  %tmp63 = icmp eq i8 %tmp62, 32
  br i1 %tmp63, label %dec_label_pc_10004074, label %dec_label_pc_10004058

dec_label_pc_10004074:                            ; preds = %dec_label_pc_10004048, %dec_label_pc_10004058, %dec_label_pc_10004040, %dec_label_pc_10004030
  %v1_10004074 = phi i32 [ %v1_1000407c.lcssa, %dec_label_pc_10004040 ], [ %v1_1000407c.lcssa, %dec_label_pc_10004030 ], [ %v1_10004048, %dec_label_pc_10004048 ], [ %v1_10004058, %dec_label_pc_10004058 ]
  %v2_10004074 = add i32 %v1_10004074, %v0_10004030
  %v2_1000407c = add i32 %v1_1000407c.lcssa, %v0_10003fcc.pre
  store i32 %v2_1000407c, i32* @r31, align 4
  %v3_10004080 = add i32 %v2_10004074, 32
  %v4_10004080 = inttoptr i32 %v3_10004080 to i8*
  store i8 0, i8* %v4_10004080, align 1
  %v0_10004084 = load i32, i32* @r31, align 4
  store i32 268451980, i32* @lr, align 4
  %v1_10004088 = inttoptr i32 %v0_10004084 to i8*
  %v2_10004088 = call i32 @function_10007c8c(i8* %v1_10004088)
  %v2_1000408c = icmp sgt i32 %v2_10004088, 15
  br i1 %v2_1000408c, label %dec_label_pc_10003ee4.backedge, label %dec_label_pc_10004094

dec_label_pc_10004094:                            ; preds = %dec_label_pc_10004074
  %v0_10004094 = load i32, i32* @r31, align 4
  store i32 %v2_10003ee0, i32* @r3, align 4
  %v2_1000409c = bitcast i32* %stack_var_-8792 to i8*
  %v3_1000409c = call i32 @function_10007cb4(i8* %v2_1000409c, i32 %v0_10004094)
  br label %dec_label_pc_100040a0

dec_label_pc_100040a0.loopexit:                   ; preds = %dec_label_pc_10003ee4.backedge, %dec_label_pc_10003ee0
  %.pre = bitcast i32* %stack_var_-8792 to i8*
  br label %dec_label_pc_100040a0

dec_label_pc_100040a0:                            ; preds = %dec_label_pc_100040a0.loopexit, %dec_label_pc_10004094
  %v1_100040ac.pre-phi = phi i8* [ %.pre, %dec_label_pc_100040a0.loopexit ], [ %v2_1000409c, %dec_label_pc_10004094 ]
  store i32 268452008, i32* @lr, align 4
  %v0_100040a4 = call i32 @function_100083cc()
  store i32 268452016, i32* @lr, align 4
  %v2_100040ac = call i32 @function_10007c8c(i8* %v1_100040ac.pre-phi)
  %v3_100040b0 = icmp eq i32 %v2_100040ac, 0
  br i1 %v3_100040b0, label %dec_label_pc_10004380, label %dec_label_pc_100040b8

dec_label_pc_100040b8:                            ; preds = %dec_label_pc_100040a0
  %v3_100040c0 = call i32 @function_10007758(i32 3, i32* null)
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 268452044, i32* @lr, align 4
  %v1_100040c8 = call i32 @function_100088d0(i32 %v3_100040c0)
  store i32 %v1_100040c8, i32* @r23, align 4
  %v3_100040cc = icmp eq i32 %v1_100040c8, 0
  br i1 %v3_100040cc, label %dec_label_pc_10004300, label %dec_label_pc_100040d4

dec_label_pc_100040d4:                            ; preds = %dec_label_pc_100040b8
  store i32 0, i32* @r28, align 4
  store i32 268452064, i32* @lr, align 4
  %v1_100040dc7 = inttoptr i32 %v1_100040c8 to i32*
  %v2_100040dc8 = call i32 @function_100089e0(i32* %v1_100040dc7)
  %v3_100040e010 = icmp eq i32 %v2_100040dc8, 0
  br i1 %v3_100040e010, label %dec_label_pc_100042f4, label %dec_label_pc_100040e8.preheader.lr.ph

dec_label_pc_100040e8.preheader.lr.ph:            ; preds = %dec_label_pc_100040d4
  %v2_1000411c = bitcast i32* %stack_var_-8247 to i8*
  %v1_1000428c = bitcast i32* %stack_var_-4151 to i8*
  br label %dec_label_pc_100040e8.preheader

dec_label_pc_100040d8.loopexit:                   ; preds = %dec_label_pc_100040f0, %dec_label_pc_10004108, %dec_label_pc_10004170
  %v0_100040d8 = load i32, i32* @r23, align 4
  store i32 268452064, i32* @lr, align 4
  %v1_100040dc = inttoptr i32 %v0_100040d8 to i32*
  %v2_100040dc = call i32 @function_100089e0(i32* %v1_100040dc)
  %v3_100040e0 = icmp eq i32 %v2_100040dc, 0
  br i1 %v3_100040e0, label %dec_label_pc_100042f4, label %dec_label_pc_100040e8.preheader

dec_label_pc_100040e8.preheader:                  ; preds = %dec_label_pc_100040e8.preheader.lr.ph, %dec_label_pc_100040d8.loopexit
  %v0_100040f034 = phi i32 [ %v2_100040dc8, %dec_label_pc_100040e8.preheader.lr.ph ], [ %v2_100040dc, %dec_label_pc_100040d8.loopexit ]
  br label %dec_label_pc_100040e8

dec_label_pc_100040e8:                            ; preds = %dec_label_pc_100040e8.preheader, %dec_label_pc_100042dc
  %v0_100040f0 = phi i32 [ %v0_100040f034, %dec_label_pc_100040e8.preheader ], [ %v2_100042e8, %dec_label_pc_100042dc ]
  %v0_100040e8 = load i32, i32* @r28, align 4
  %v3_100040e8 = icmp eq i32 %v0_100040e8, 0
  br i1 %v3_100040e8, label %dec_label_pc_100040f0, label %dec_label_pc_100042f4

dec_label_pc_100040f0:                            ; preds = %dec_label_pc_100040e8
  %v1_100040f0 = add i32 %v0_100040f0, 11
  %v2_100040f0 = inttoptr i32 %v1_100040f0 to i8*
  %v3_100040f0 = load i8, i8* %v2_100040f0, align 1
  %v4_100040f0 = zext i8 %v3_100040f0 to i32
  store i32 %v1_100040f0, i32* @r30, align 4
  %v1_100040f8 = add nuw nsw i32 %v4_100040f0, 208
  %v1_100040fc = urem i32 %v1_100040f8, 256
  %v2_10004100 = icmp ugt i32 %v1_100040fc, 9
  br i1 %v2_10004100, label %dec_label_pc_100040d8.loopexit, label %dec_label_pc_10004108

dec_label_pc_10004108:                            ; preds = %dec_label_pc_100040f0
  %v3_10004110 = call i32 @function_10007758(i32 3, i32* null)
  store i32 %v2_10003e04, i32* @r3, align 4
  %v3_1000411c = call i32 @function_10007cb4(i8* %v2_1000411c, i32 %v3_10004110)
  store i32 268452136, i32* @lr, align 4
  %v2_10004124 = call i32 @function_10007c8c(i8* %v2_1000411c)
  %v0_10004128 = load i32, i32* @r30, align 4
  %v0_1000412c = load i32, i32* @r27, align 4
  %v2_1000412c = add i32 %v0_1000412c, %v2_10004124
  store i32 %v2_1000412c, i32* @r3, align 4
  %v2_10004130 = inttoptr i32 %v2_1000412c to i8*
  %v3_10004130 = call i32 @function_10007cb4(i8* %v2_10004130, i32 %v0_10004128)
  store i32 268452156, i32* @lr, align 4
  %v2_10004138 = call i32 @function_10007c8c(i8* %v2_1000411c)
  %v3_10004148 = call i32 @function_10007758(i32 4, i32* null)
  %v0_10004150 = load i32, i32* @r27, align 4
  %v2_10004150 = add i32 %v2_10004138, %v0_10004150
  store i32 %v2_10004150, i32* @r3, align 4
  %v2_10004154 = inttoptr i32 %v2_10004150 to i8*
  %v3_10004154 = call i32 @function_10007cb4(i8* %v2_10004154, i32 %v3_10004148)
  store i32 4096, i32* @r5, align 4
  store i32 268452200, i32* @lr, align 4
  %v3_10004164 = call i32 @function_1000864c(i32 %v2_10003e04, i32 %v2_10003e0c, i32 4096)
  %v3_10004168 = icmp eq i32 %v3_10004164, -1
  br i1 %v3_10004168, label %dec_label_pc_100040d8.loopexit, label %dec_label_pc_10004170

dec_label_pc_10004170:                            ; preds = %dec_label_pc_10004108
  %v3_10004178 = call i32 @function_10007758(i32 3, i32* null)
  store i32 %v2_10003e04, i32* @r3, align 4
  %v3_10004184 = call i32 @function_10007cb4(i8* %v2_1000411c, i32 %v3_10004178)
  store i32 268452240, i32* @lr, align 4
  %v2_1000418c = call i32 @function_10007c8c(i8* %v2_1000411c)
  %v0_10004190 = load i32, i32* @r30, align 4
  %v0_10004194 = load i32, i32* @r27, align 4
  %v2_10004194 = add i32 %v0_10004194, %v2_1000418c
  store i32 %v2_10004194, i32* @r3, align 4
  %v2_10004198 = inttoptr i32 %v2_10004194 to i8*
  %v3_10004198 = call i32 @function_10007cb4(i8* %v2_10004198, i32 %v0_10004190)
  store i32 268452260, i32* @lr, align 4
  %v2_100041a0 = call i32 @function_10007c8c(i8* %v2_1000411c)
  %v3_100041b0 = call i32 @function_10007758(i32 6, i32* null)
  %v0_100041b8 = load i32, i32* @r27, align 4
  %v2_100041b8 = add i32 %v2_100041a0, %v0_100041b8
  store i32 %v2_100041b8, i32* @r3, align 4
  %v2_100041bc = inttoptr i32 %v2_100041b8 to i8*
  %v3_100041bc = call i32 @function_10007cb4(i8* %v2_100041bc, i32 %v3_100041b0)
  store i32 268452296, i32* @lr, align 4
  %v1_100041c4 = call i32 @function_100088d0(i32 %v2_10003e04)
  store i32 %v1_100041c4, i32* @r25, align 4
  %v3_100041c8 = icmp eq i32 %v1_100041c4, 0
  br i1 %v3_100041c8, label %dec_label_pc_100040d8.loopexit, label %dec_label_pc_100041d0

dec_label_pc_100041d0.loopexit:                   ; preds = %dec_label_pc_100041f0, %dec_label_pc_1000428c
  %v0_100041d0.pre = load i32, i32* @r25, align 4
  br label %dec_label_pc_100041d0

dec_label_pc_100041d0:                            ; preds = %dec_label_pc_10004170, %dec_label_pc_100041d0.loopexit
  %v0_100041d0 = phi i32 [ %v0_100041d0.pre, %dec_label_pc_100041d0.loopexit ], [ %v1_100041c4, %dec_label_pc_10004170 ]
  store i32 268452312, i32* @lr, align 4
  %v1_100041d4 = inttoptr i32 %v0_100041d0 to i32*
  %v2_100041d4 = call i32 @function_100089e0(i32* %v1_100041d4)
  store i32 4096, i32* @r4, align 4
  store i32 %v2_100041d4, i32* @r31, align 4
  %v3_100041dc = icmp eq i32 %v2_100041d4, 0
  %v0_100041e0 = load i32, i32* @r28, align 4
  store i32 %v2_10003e0c, i32* @r3, align 4
  %v3_100041e0.not = icmp ne i32 %v0_100041e0, 0
  %brmerge = or i1 %v3_100041dc, %v3_100041e0.not
  br i1 %brmerge, label %dec_label_pc_100042dc, label %dec_label_pc_100041f0

dec_label_pc_100041f0:                            ; preds = %dec_label_pc_100041d0
  store i32 268452340, i32* @lr, align 4
  %v0_100041f0 = call i32 @function_10007d34()
  %v3_100041fc = call i32 @function_10007758(i32 3, i32* null)
  store i32 %v2_10003e04, i32* @r3, align 4
  %v3_10004208 = call i32 @function_10007cb4(i8* %v2_1000411c, i32 %v3_100041fc)
  store i32 268452372, i32* @lr, align 4
  %v2_10004210 = call i32 @function_10007c8c(i8* %v2_1000411c)
  %v0_10004214 = load i32, i32* @r30, align 4
  %v0_10004218 = load i32, i32* @r27, align 4
  %v2_10004218 = add i32 %v0_10004218, %v2_10004210
  store i32 %v2_10004218, i32* @r3, align 4
  %v2_1000421c = inttoptr i32 %v2_10004218 to i8*
  %v3_1000421c = call i32 @function_10007cb4(i8* %v2_1000421c, i32 %v0_10004214)
  store i32 268452392, i32* @lr, align 4
  %v2_10004224 = call i32 @function_10007c8c(i8* %v2_1000411c)
  %v3_10004234 = call i32 @function_10007758(i32 6, i32* null)
  %v0_1000423c = load i32, i32* @r27, align 4
  %v2_1000423c = add i32 %v2_10004224, %v0_1000423c
  store i32 %v2_1000423c, i32* @r3, align 4
  %v2_10004240 = inttoptr i32 %v2_1000423c to i8*
  %v3_10004240 = call i32 @function_10007cb4(i8* %v2_10004240, i32 %v3_10004234)
  store i32 268452428, i32* @lr, align 4
  %v2_10004248 = call i32 @function_10007c8c(i8* %v2_1000411c)
  %v0_10004254 = load i32, i32* @r27, align 4
  %v2_10004254 = add i32 %v0_10004254, %v2_10004248
  store i32 %v2_10004254, i32* @r3, align 4
  %v2_10004258 = inttoptr i32 %v2_10004254 to i8*
  %v3_10004258 = call i32 @function_10007cb4(i8* %v2_10004258, i32 ptrtoint (i32* @global_var_1000abcc.32 to i32))
  store i32 268452452, i32* @lr, align 4
  %v2_10004260 = call i32 @function_10007c8c(i8* %v2_1000411c)
  %v0_10004264 = load i32, i32* @r31, align 4
  %v1_10004264 = add i32 %v0_10004264, 11
  %v0_10004268 = load i32, i32* @r27, align 4
  %v2_10004268 = add i32 %v0_10004268, %v2_10004260
  store i32 %v2_10004268, i32* @r3, align 4
  %v2_1000426c = inttoptr i32 %v2_10004268 to i8*
  %v3_1000426c = call i32 @function_10007cb4(i8* %v2_1000426c, i32 %v1_10004264)
  store i32 268452480, i32* @lr, align 4
  %v3_1000427c = call i32 @function_1000864c(i32 %v2_10003e04, i32 %v2_10003e0c, i32 4096)
  %v3_10004280 = icmp eq i32 %v3_1000427c, -1
  br i1 %v3_10004280, label %dec_label_pc_100041d0.loopexit, label %dec_label_pc_1000428c

dec_label_pc_1000428c:                            ; preds = %dec_label_pc_100041f0
  store i32 268452496, i32* @lr, align 4
  %v2_1000428c = call i32 @function_10007c8c(i8* %v1_1000428c)
  %v4_1000429c = call i32 @function_1000803c(i8* %v1_1000428c, i32 %v2_1000428c, i32 %v2_10003ee0)
  %v3_100042a4 = icmp eq i32 %v4_1000429c, -1
  %v0_100042a8 = load i32, i32* @r30, align 4
  store i32 %v0_100042a8, i32* @r3, align 4
  br i1 %v3_100042a4, label %dec_label_pc_100041d0.loopexit, label %dec_label_pc_100042b0

dec_label_pc_100042b0:                            ; preds = %dec_label_pc_1000428c
  store i32 268452532, i32* @lr, align 4
  %v2_100042b0 = call i32 @function_10007db4(i32 %v0_100042a8, i32 10)
  store i32 268452540, i32* @lr, align 4
  %v2_100042b8 = call i32 @function_100084ec(i32 %v2_100042b0, i32 9)
  %v0_100042bc = load i32, i32* @r25, align 4
  store i32 268452548, i32* @lr, align 4
  %v1_100042c0 = inttoptr i32 %v0_100042bc to i32*
  %v2_100042c0 = call i32 @function_100089e0(i32* %v1_100042c0)
  store i32 1, i32* @r28, align 4
  store i32 %v2_100042c0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100042dc

dec_label_pc_100042dc:                            ; preds = %dec_label_pc_100041d0, %dec_label_pc_100042b0
  %v0_100042dc = load i32, i32* @r25, align 4
  store i32 268452580, i32* @lr, align 4
  %v1_100042e0 = inttoptr i32 %v0_100042dc to i32*
  %v2_100042e0 = call i32 @function_1000882c(i32* %v1_100042e0)
  %v0_100042e4 = load i32, i32* @r23, align 4
  store i32 268452588, i32* @lr, align 4
  %v1_100042e8 = inttoptr i32 %v0_100042e4 to i32*
  %v2_100042e8 = call i32 @function_100089e0(i32* %v1_100042e8)
  %v3_100042ec = icmp eq i32 %v2_100042e8, 0
  br i1 %v3_100042ec, label %dec_label_pc_100042f4, label %dec_label_pc_100040e8

dec_label_pc_100042f4:                            ; preds = %dec_label_pc_100040d8.loopexit, %dec_label_pc_100042dc, %dec_label_pc_100040e8, %dec_label_pc_100040d4
  %v0_100042f4 = load i32, i32* @r23, align 4
  %v0_100042f8 = load i32, i32* @r28, align 4
  %v1_100042f8 = urem i32 %v0_100042f8, 256
  store i32 %v1_100042f8, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004300.33 to i32), i32* @lr, align 4
  %v1_100042fc = inttoptr i32 %v0_100042f4 to i32*
  %v2_100042fc = call i32 @function_1000882c(i32* %v1_100042fc)
  br label %dec_label_pc_10004300

dec_label_pc_10004300:                            ; preds = %dec_label_pc_100040b8, %dec_label_pc_100042f4
  store i32 ptrtoint ([3 x i8]* @global_var_10004308.34 to i32), i32* @lr, align 4
  %v1_10004304 = call i32 @function_100099e4(i32 1)
  store i32 ptrtoint ([3 x i8]* @global_var_10004310.35 to i32), i32* @lr, align 4
  %v1_1000430c = call i32 @function_10007780(i32 3)
  store i32 ptrtoint ([3 x i8]* @global_var_10004318.36 to i32), i32* @lr, align 4
  %v1_10004314 = call i32 @function_10007780(i32 4)
  store i32 ptrtoint ([3 x i8]* @global_var_10004320.37 to i32), i32* @lr, align 4
  %v1_1000431c = call i32 @function_10007780(i32 6)
  store i32 268452648, i32* @lr, align 4
  %v1_10004324 = call i32 @function_10007780(i32 8)
  br label %dec_label_pc_10004328

dec_label_pc_10004328:                            ; preds = %dec_label_pc_10003e98, %dec_label_pc_10004300
  %v0_1000432c = load i32, i32* @r31, align 4
  store i32 %v0_10003e38, i32* @r23, align 4
  store i32 %v0_10003e20, i32* @r25, align 4
  store i32 %v0_10003e00, i32* @r27, align 4
  store i32 %v0_10003e40, i32* @r28, align 4
  store i32 %v0_10003e10, i32* @r29, align 4
  store i32 %v0_10003e28, i32* @r30, align 4
  store i32 %v0_10003e30, i32* @r31, align 4
  ret i32 %v0_1000432c

dec_label_pc_10004360:                            ; preds = %dec_label_pc_10003fe0
  %v3_10003fe0 = icmp eq i32 %v0_1000401473, 0
  %v1_10004360 = add i32 %v0_1000401473, 1
  br i1 %v3_10003fe0, label %dec_label_pc_10004368, label %dec_label_pc_10003fe8

dec_label_pc_10004368:                            ; preds = %dec_label_pc_10004360
  %v0_10004368 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004368 = add i32 %v0_10004368, %v1_1000407c75
  %v1_1000436c = add i32 %v2_10004368, 33
  %v2_1000436c = inttoptr i32 %v1_1000436c to i8*
  %v3_1000436c = load i8, i8* %v2_1000436c, align 1
  %v3_10004370 = icmp eq i8 %v3_1000436c, 65
  br i1 %v3_10004370, label %dec_label_pc_10004378, label %dec_label_pc_10003fc4

dec_label_pc_10004378:                            ; preds = %dec_label_pc_10004368
  br label %dec_label_pc_10003fc4.outer

dec_label_pc_10004380:                            ; preds = %dec_label_pc_100040a0
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000438c.38 to i32), i32* @lr, align 4
  %v1_10004388 = call i32 @function_10007780(i32 3)
  store i32 ptrtoint ([3 x i8]* @global_var_10004394.39 to i32), i32* @lr, align 4
  %v1_10004390 = call i32 @function_10007780(i32 4)
  store i32 ptrtoint ([3 x i8]* @global_var_1000439c.40 to i32), i32* @lr, align 4
  %v1_10004398 = call i32 @function_10007780(i32 6)
  store i32 268452772, i32* @lr, align 4
  %v1_100043a0 = call i32 @function_10007780(i32 8)
  %v0_100043a8 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10003e38, i32* @r23, align 4
  store i32 %v0_10003e20, i32* @r25, align 4
  store i32 %v0_10003e00, i32* @r27, align 4
  store i32 %v0_10003e40, i32* @r28, align 4
  store i32 %v0_10003e10, i32* @r29, align 4
  store i32 %v0_10003e28, i32* @r30, align 4
  store i32 %v0_10003e30, i32* @r31, align 4
  ret i32 %v0_100043a8

dec_label_pc_100043dc:                            ; preds = %dec_label_pc_10003df0
  store i8 48, i8* %stack_var_-8776, align 1
  br label %dec_label_pc_10003e98

; uselistorder directives
  uselistorder i32 %v2_100042e8, { 1, 0 }
  uselistorder i32 %v1_10004058, { 0, 2, 1 }
  uselistorder i32 %v1_1000407c.lcssa, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v0_1000401473, { 2, 0, 4, 1, 3 }
  uselistorder i32 %v1_1000407c75, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_10003ff821, { 1, 0 }
  uselistorder i32 %v1_10003f94, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v2_10003ee0, { 1, 0, 2 }
  uselistorder i32 %v2_10003e24, { 1, 0 }
  uselistorder i32 %v2_10003e04, { 1, 2, 3, 4, 5, 6, 0, 7 }
  uselistorder i8* %stack_var_-8776, { 2, 0, 1 }
  uselistorder i8* %stack_var_-8760, { 1, 3, 0, 2 }
  uselistorder i32* %stack_var_-8792, { 0, 1, 3, 2 }
  uselistorder i32* %r31.global-to-local, { 7, 8, 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32* %r26.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @function_1000864c, { 1, 0 }
  uselistorder i32 268452064, { 1, 0 }
  uselistorder i8 58, { 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @function_10007eec, { 1, 0 }
  uselistorder i32 268451572, { 1, 0 }
  uselistorder label %dec_label_pc_10004328, { 1, 0 }
  uselistorder label %dec_label_pc_10004300, { 1, 0 }
  uselistorder label %dec_label_pc_100042f4, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_100042dc, { 1, 0 }
  uselistorder label %dec_label_pc_100041d0, { 1, 0 }
  uselistorder label %dec_label_pc_100041d0.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_100040e8, { 1, 0 }
  uselistorder label %dec_label_pc_100040e8.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100040d8.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10004074, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10004058, { 1, 0 }
  uselistorder label %dec_label_pc_10004024, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10004010, { 1, 0 }
  uselistorder label %dec_label_pc_10003fe8, { 1, 0 }
  uselistorder label %dec_label_pc_10003fc4, { 1, 0 }
  uselistorder label %dec_label_pc_10003f8c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10003f3c, { 1, 0 }
  uselistorder label %dec_label_pc_10003ee4.backedge, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10003efc, { 1, 0 }
  uselistorder label %dec_label_pc_10003e98, { 1, 0 }
}

define i32 @function_10004400(i32 %arg1) local_unnamed_addr {
dec_label_pc_10004400:
  %r10.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-632 = alloca i32, align 4
  %stack_var_-552 = alloca i32, align 4
  %stack_var_-616 = alloca i32, align 4
  %v0_1000440c = load i32, i32* @r30, align 4
  %v0_1000441c = load i32, i32* @r25, align 4
  %v0_10004420 = load i32, i32* @r26, align 4
  %v0_10004424 = load i32, i32* @r27, align 4
  %v0_10004428 = load i32, i32* @r28, align 4
  %v0_1000442c = load i32, i32* @r29, align 4
  %v0_10004430 = load i32, i32* @r31, align 4
  store i32 268452920, i32* @lr, align 4
  %v0_10004434 = call i32 @function_1000879c()
  store i32 %v0_10004434, i32* @r30, align 4
  store i32 268452928, i32* @lr, align 4
  %v0_1000443c = call i32 @function_10008414()
  store i32 %v0_1000443c, i32* @global_var_1001b44c.27, align 4
  %tmp36 = icmp slt i32 %v0_1000443c, 1
  br i1 %tmp36, label %dec_label_pc_10004484, label %dec_label_pc_10004450

dec_label_pc_10004450:                            ; preds = %dec_label_pc_100044ec, %dec_label_pc_10004484, %dec_label_pc_10004400
  %v0_10004480 = phi i32 [ -1, %dec_label_pc_10004484 ], [ %v0_1000443c, %dec_label_pc_10004400 ], [ 0, %dec_label_pc_100044ec ]
  store i32 %v0_1000441c, i32* @r25, align 4
  store i32 %v0_10004420, i32* @r26, align 4
  store i32 %v0_10004424, i32* @r27, align 4
  store i32 %v0_10004428, i32* @r28, align 4
  store i32 %v0_1000442c, i32* @r29, align 4
  store i32 %v0_1000440c, i32* @r30, align 4
  store i32 %v0_10004430, i32* @r31, align 4
  ret i32 %v0_10004480

dec_label_pc_10004484:                            ; preds = %dec_label_pc_10004400
  %v3_10004484 = icmp eq i32 %v0_1000443c, -1
  br i1 %v3_10004484, label %dec_label_pc_10004450, label %dec_label_pc_1000448c

dec_label_pc_1000448c:                            ; preds = %dec_label_pc_10004484
  store i32 2, i32* %stack_var_-632, align 4
  store i32 268453028, i32* @lr, align 4
  %v1_100044a0 = call i32 @function_10003df0(i32 81)
  %v3_100044a4 = icmp eq i32 %v1_100044a0, 0
  br i1 %v3_100044a4, label %dec_label_pc_100044ac, label %dec_label_pc_1000471c

dec_label_pc_100044ac:                            ; preds = %dec_label_pc_1000448c, %dec_label_pc_1000471c, %dec_label_pc_10004740
  %v0_100044b0 = load i32, i32* @r30, align 4
  store i32 %v0_100044b0, i32* %r29.global-to-local, align 4
  store i32 268453048, i32* @lr, align 4
  %v1_100044b4 = call i32 @function_100099e4(i32 5)
  store i32 4096, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_100044c0.41 to i32), i32* @lr, align 4
  %v0_100044bc = call i32 @function_100092b8()
  %v1_100044bc = inttoptr i32 %v0_100044bc to i8*
  store i32 0, i32* %r10.global-to-local, align 4
  store i8 0, i8* %v1_100044bc, align 1
  %v0_100044d4 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_100044d4, i32* @global_var_1001b450.42, align 4
  store i32 400, i32* @r28, align 4
  store i32 %v0_100044bc, i32* @global_var_1001b454.43, align 4
  store i32 0, i32* @r26, align 4
  %v2_100044e4 = ptrtoint i32* %stack_var_-616 to i32
  store i32 %v2_100044e4, i32* @r25, align 4
  %v2_100044e8 = ptrtoint i32* %stack_var_-552 to i32
  %v2_100045bc = bitcast i32* %stack_var_-616 to i8*
  br label %dec_label_pc_100044ec

dec_label_pc_100044ec:                            ; preds = %dec_label_pc_10004580, %dec_label_pc_100044ac
  store i32 268453108, i32* @lr, align 4
  %v1_100044f0 = call i32 @function_1000780c(i32 3)
  %v3_100044fc = call i32 @function_10007758(i32 3, i32* null)
  store i32 268453124, i32* @lr, align 4
  %v1_10004500 = call i32 @function_100088d0(i32 %v3_100044fc)
  store i32 %v1_10004500, i32* @r27, align 4
  %v3_10004504 = icmp eq i32 %v1_10004500, 0
  br i1 %v3_10004504, label %dec_label_pc_10004450, label %dec_label_pc_1000450c

dec_label_pc_1000450c:                            ; preds = %dec_label_pc_100044ec
  store i32 268453140, i32* @lr, align 4
  %v1_10004510 = call i32 @function_10007780(i32 3)
  %v0_100045147 = load i32, i32* @r27, align 4
  store i32 268453148, i32* @lr, align 4
  %v1_100045188 = inttoptr i32 %v0_100045147 to i32*
  %v2_100045189 = call i32 @function_100089e0(i32* %v1_100045188)
  %v3_1000451c11 = icmp eq i32 %v2_100045189, 0
  br i1 %v3_1000451c11, label %dec_label_pc_10004580, label %dec_label_pc_10004524.preheader

dec_label_pc_10004524.preheader:                  ; preds = %dec_label_pc_1000450c, %dec_label_pc_10004514.backedge
  %v0_1000452413 = phi i32 [ %v2_10004518, %dec_label_pc_10004514.backedge ], [ %v2_100045189, %dec_label_pc_1000450c ]
  br label %dec_label_pc_10004524

dec_label_pc_10004524:                            ; preds = %dec_label_pc_10004524.preheader, %dec_label_pc_1000456c
  %v0_10004538 = phi i32 [ %v0_1000452413, %dec_label_pc_10004524.preheader ], [ %v2_10004574, %dec_label_pc_1000456c ]
  %v1_10004524 = add i32 %v0_10004538, 11
  %v2_10004524 = inttoptr i32 %v1_10004524 to i8*
  %v3_10004524 = load i8, i8* %v2_10004524, align 1
  %v4_10004524 = zext i8 %v3_10004524 to i32
  %v1_10004528 = add nuw nsw i32 %v4_10004524, 208
  %v1_1000452c = urem i32 %v1_10004528, 256
  %v2_10004530 = icmp ugt i32 %v1_1000452c, 9
  br i1 %v2_10004530, label %dec_label_pc_10004514.backedge, label %dec_label_pc_10004538

dec_label_pc_10004538:                            ; preds = %dec_label_pc_10004524
  store i32 %v1_10004524, i32* @r31, align 4
  store i32 %v1_10004524, i32* @r3, align 4
  %v0_10004544 = load i32, i32* @r26, align 4
  %v1_10004544 = add i32 %v0_10004544, 1
  store i32 %v1_10004544, i32* @r26, align 4
  store i32 268453196, i32* @lr, align 4
  %v2_10004548 = call i32 @function_10007db4(i32 %v1_10004524, i32 10)
  %v0_1000454c = load i32, i32* @r28, align 4
  %v2_1000454c = icmp slt i32 %v0_1000454c, %v2_10004548
  store i32 %v2_10004548, i32* @r30, align 4
  br i1 %v2_1000454c, label %dec_label_pc_1000458c, label %dec_label_pc_10004558

dec_label_pc_10004558:                            ; preds = %dec_label_pc_10004538
  store i32 268453216, i32* @lr, align 4
  %v0_1000455c = call i32 @function_1000879c()
  %v0_10004560 = load i32, i32* @r29, align 4
  %v2_10004560 = sub i32 %v0_1000455c, %v0_10004560
  %tmp37 = icmp slt i32 %v2_10004560, 601
  br i1 %tmp37, label %dec_label_pc_100046d8, label %dec_label_pc_1000456c

dec_label_pc_1000456c:                            ; preds = %dec_label_pc_10004558
  %v0_1000456c = load i32, i32* @r27, align 4
  store i32 400, i32* @r28, align 4
  store i32 268453240, i32* @lr, align 4
  %v1_10004574 = inttoptr i32 %v0_1000456c to i32*
  %v2_10004574 = call i32 @function_100089e0(i32* %v1_10004574)
  %v3_10004578 = icmp eq i32 %v2_10004574, 0
  br i1 %v3_10004578, label %dec_label_pc_10004580, label %dec_label_pc_10004524

dec_label_pc_10004580:                            ; preds = %dec_label_pc_10004514.backedge, %dec_label_pc_1000456c, %dec_label_pc_1000450c
  %v0_10004580 = load i32, i32* @r27, align 4
  store i32 268453256, i32* @lr, align 4
  %v1_10004584 = inttoptr i32 %v0_10004580 to i32*
  %v2_10004584 = call i32 @function_1000882c(i32* %v1_10004584)
  br label %dec_label_pc_100044ec

dec_label_pc_1000458c:                            ; preds = %dec_label_pc_10004538
  store i32 268453268, i32* @lr, align 4
  %v0_10004590 = call i32 @function_1000879c()
  store i32 %v0_10004590, i32* %r24.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100045a0.45 to i32), i32* @lr, align 4
  %v1_1000459c = call i32 @function_1000780c(i32 3)
  store i32 268453288, i32* @lr, align 4
  %v1_100045a4 = call i32 @function_1000780c(i32 7)
  %v3_100045b0 = call i32 @function_10007758(i32 3, i32* null)
  store i32 %v2_100044e4, i32* @r3, align 4
  %v3_100045bc = call i32 @function_10007cb4(i8* %v2_100045bc, i32 %v3_100045b0)
  %v0_100045c0 = load i32, i32* @r31, align 4
  %v0_100045c4 = load i32, i32* @r25, align 4
  %v2_100045c4 = add i32 %v0_100045c4, %v3_100045bc
  store i32 %v2_100045c4, i32* %r28.global-to-local, align 4
  store i32 %v2_100045c4, i32* @r3, align 4
  %v2_100045cc = inttoptr i32 %v2_100045c4 to i8*
  %v3_100045cc = call i32 @function_10007cb4(i8* %v2_100045cc, i32 %v0_100045c0)
  store i32 %v3_100045cc, i32* %r29.global-to-local, align 4
  %v3_100045dc = call i32 @function_10007758(i32 7, i32* null)
  %v2_100045e4 = add i32 %v3_100045cc, %v2_100045c4
  store i32 %v2_100045e4, i32* @r3, align 4
  %v2_100045e8 = inttoptr i32 %v2_100045e4 to i8*
  %v3_100045e8 = call i32 @function_10007cb4(i8* %v2_100045e8, i32 %v3_100045dc)
  store i32 ptrtoint ([3 x i8]* @global_var_100045f4.47 to i32), i32* @lr, align 4
  %v1_100045f0 = call i32 @function_10007780(i32 3)
  store i32 268453372, i32* @lr, align 4
  %v1_100045f8 = call i32 @function_10007780(i32 7)
  store i32 268453388, i32* @lr, align 4
  %v2_10004608 = call i32 @function_10008534(i32 %v2_100044e4, i32 0)
  %v3_1000460c = icmp eq i32 %v2_10004608, -1
  store i32 %v2_10004608, i32* @r31, align 4
  br i1 %v3_1000460c, label %dec_label_pc_100046b8, label %dec_label_pc_10004618

dec_label_pc_10004618:                            ; preds = %dec_label_pc_1000458c
  store i32 268453408, i32* @lr, align 4
  %v1_1000461c = call i32 @function_1000780c(i32 9)
  %v0_1000462041 = load i32, i32* @r31, align 4
  store i32 268453424, i32* @lr, align 4
  %v3_1000462c42 = call i32 @function_10008604(i32 %v0_1000462041, i32 %v2_100044e8, i32 512)
  store i32 %v3_1000462c42, i32* %r28.global-to-local, align 4
  %tmp3844 = icmp slt i32 %v3_1000462c42, 1
  br i1 %tmp3844, label %dec_label_pc_10004708, label %dec_label_pc_10004638

dec_label_pc_10004638:                            ; preds = %dec_label_pc_10004618, %dec_label_pc_10004620.backedge
  %v3_10004640 = call i32 @function_10007758(i32 9, i32* null)
  store i32 %v3_10004640, i32* %r29.global-to-local, align 4
  %v3_10004650 = call i32 @function_10007758(i32 9, i32* null)
  store i32 268453464, i32* @lr, align 4
  %v1_10004654 = inttoptr i32 %v3_10004650 to i8*
  %v2_10004654 = call i32 @function_10007c8c(i8* %v1_10004654)
  %v0_10004658 = load i32, i32* %r28.global-to-local, align 4
  %v2_10004658 = icmp slt i32 %v0_10004658, %v2_10004654
  br i1 %v2_10004658, label %dec_label_pc_10004620.backedge, label %dec_label_pc_10004660

dec_label_pc_10004660:                            ; preds = %dec_label_pc_10004638
  %v1_10004660 = add i32 %v0_10004658, 1
  store i32 %v1_10004660, i32* %r28.global-to-local, align 4
  store i32 %v2_100044e8, i32* %r10.global-to-local, align 4
  %v2_100046706 = icmp eq i32 %v0_10004658, 0
  br i1 %v2_100046706, label %dec_label_pc_10004620.backedge, label %dec_label_pc_10004674.lr.ph

dec_label_pc_10004620.backedge:                   ; preds = %dec_label_pc_10004690, %dec_label_pc_10004660, %dec_label_pc_10004638
  %v0_10004620 = load i32, i32* @r31, align 4
  store i32 268453424, i32* @lr, align 4
  %v3_1000462c = call i32 @function_10008604(i32 %v0_10004620, i32 %v2_100044e8, i32 512)
  store i32 %v3_1000462c, i32* %r28.global-to-local, align 4
  %tmp38 = icmp slt i32 %v3_1000462c, 1
  br i1 %tmp38, label %dec_label_pc_10004708, label %dec_label_pc_10004638

dec_label_pc_10004674.lr.ph:                      ; preds = %dec_label_pc_10004660
  %v0_10004674.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004674

dec_label_pc_10004674:                            ; preds = %dec_label_pc_10004674.lr.ph, %dec_label_pc_10004690
  %v0_10004670 = phi i32 [ %v0_10004658, %dec_label_pc_10004674.lr.ph ], [ %v1_10004670, %dec_label_pc_10004690 ]
  %v0_10004690 = phi i32 [ %v2_100044e8, %dec_label_pc_10004674.lr.ph ], [ %v1_10004690, %dec_label_pc_10004690 ]
  %v1_10004674 = phi i32 [ 0, %dec_label_pc_10004674.lr.ph ], [ %v1_1000467415, %dec_label_pc_10004690 ]
  %v2_10004674 = add i32 %v1_10004674, %v0_10004674.pre
  %v3_10004674 = inttoptr i32 %v2_10004674 to i8*
  %v4_10004674 = load i8, i8* %v3_10004674, align 1
  %v1_10004678 = add i32 %v1_10004674, 1
  %v1_1000467c = inttoptr i32 %v0_10004690 to i8*
  %v2_1000467c = load i8, i8* %v1_1000467c, align 1
  %v4_10004684 = icmp eq i8 %v2_1000467c, %v4_10004674
  br i1 %v4_10004684, label %dec_label_pc_10004698, label %dec_label_pc_1000468c

dec_label_pc_1000468c:                            ; preds = %dec_label_pc_10004674
  br label %dec_label_pc_10004690

dec_label_pc_10004690:                            ; preds = %dec_label_pc_10004698, %dec_label_pc_1000468c
  %v1_1000467415 = phi i32 [ %v1_10004678, %dec_label_pc_10004698 ], [ 0, %dec_label_pc_1000468c ]
  %v1_10004690 = add i32 %v0_10004690, 1
  store i32 %v1_10004690, i32* %r10.global-to-local, align 4
  %v1_10004670 = add i32 %v0_10004670, -1
  %v2_10004670 = icmp eq i32 %v1_10004670, 0
  br i1 %v2_10004670, label %dec_label_pc_10004620.backedge, label %dec_label_pc_10004674

dec_label_pc_10004698:                            ; preds = %dec_label_pc_10004674
  %v4_10004680 = icmp eq i32 %v2_10004654, %v1_10004678
  br i1 %v4_10004680, label %dec_label_pc_1000469c, label %dec_label_pc_10004690

dec_label_pc_1000469c:                            ; preds = %dec_label_pc_10004698
  store i32 268453540, i32* @lr, align 4
  %v1_100046a0 = call i32 @function_10007780(i32 9)
  store i32 268453548, i32* @lr, align 4
  %v0_100046a8 = call i32 @function_100083cc()
  %v0_100046ac = load i32, i32* @r30, align 4
  store i32 268453560, i32* @lr, align 4
  %v2_100046b4 = call i32 @function_100084ec(i32 %v0_100046ac, i32 9)
  br label %dec_label_pc_100046b8

dec_label_pc_100046b8:                            ; preds = %dec_label_pc_1000458c, %dec_label_pc_10004708, %dec_label_pc_1000469c
  store i32 %v2_100044e4, i32* @r3, align 4
  store i32 64, i32* @r4, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100046c4.49 to i32), i32* @lr, align 4
  %v0_100046c0 = call i32 @function_10007d34()
  store i32 268453580, i32* @lr, align 4
  %v1_100046c8 = call i32 @function_100099e4(i32 1)
  %v0_100046cc = load i32, i32* @r30, align 4
  store i32 %v0_100046cc, i32* @r28, align 4
  %v0_100046d0 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_100046d0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004514.backedge

dec_label_pc_10004514.backedge:                   ; preds = %dec_label_pc_10004524, %dec_label_pc_100046b8, %dec_label_pc_100046fc, %dec_label_pc_100046d8, %dec_label_pc_100046e0
  %v0_10004514 = load i32, i32* @r27, align 4
  store i32 268453148, i32* @lr, align 4
  %v1_10004518 = inttoptr i32 %v0_10004514 to i32*
  %v2_10004518 = call i32 @function_100089e0(i32* %v1_10004518)
  %v3_1000451c = icmp eq i32 %v2_10004518, 0
  br i1 %v3_1000451c, label %dec_label_pc_10004580, label %dec_label_pc_10004524.preheader

dec_label_pc_100046d8:                            ; preds = %dec_label_pc_10004558
  %v0_100046d8 = load i32, i32* @r30, align 4
  %tmp39 = icmp slt i32 %v0_100046d8, 401
  br i1 %tmp39, label %dec_label_pc_10004514.backedge, label %dec_label_pc_100046e0

dec_label_pc_100046e0:                            ; preds = %dec_label_pc_100046d8
  %v0_100046e8 = load i32, i32* @r26, align 4
  %v1_100046ec = urem i32 %v0_100046e8, 10
  %v4_100046f4 = icmp eq i32 %v1_100046ec, 0
  br i1 %v4_100046f4, label %dec_label_pc_100046fc, label %dec_label_pc_10004514.backedge

dec_label_pc_100046fc:                            ; preds = %dec_label_pc_100046e0
  store i32 268453636, i32* @lr, align 4
  %v1_10004700 = call i32 @function_100099e4(i32 1)
  br label %dec_label_pc_10004514.backedge

dec_label_pc_10004708:                            ; preds = %dec_label_pc_10004620.backedge, %dec_label_pc_10004618
  store i32 268453648, i32* @lr, align 4
  %v1_1000470c = call i32 @function_10007780(i32 9)
  store i32 268453656, i32* @lr, align 4
  %v0_10004714 = call i32 @function_100083cc()
  br label %dec_label_pc_100046b8

dec_label_pc_1000471c:                            ; preds = %dec_label_pc_1000448c
  store i32 268453684, i32* @lr, align 4
  %v3_10004730 = call i32 @function_100090b4(i32 2, i32 1, i32 0)
  %v3_10004734 = icmp eq i32 %v3_10004730, -1
  store i32 %v3_10004730, i32* @r31, align 4
  br i1 %v3_10004734, label %dec_label_pc_100044ac, label %dec_label_pc_10004740

dec_label_pc_10004740:                            ; preds = %dec_label_pc_1000471c
  %v2_10004740 = ptrtoint i32* %stack_var_-632 to i32
  store i32 268453708, i32* @lr, align 4
  %v3_10004748 = call i32 @function_10008e80(i32 %v2_10004740, i32 16, i32 16)
  %v0_1000474c = load i32, i32* @r31, align 4
  store i32 268453720, i32* @lr, align 4
  %v2_10004754 = call i32 @function_10008f58(i32 %v0_1000474c, i32 1)
  br label %dec_label_pc_100044ac

; uselistorder directives
  uselistorder i32 %v2_10004518, { 1, 0 }
  uselistorder i32 %v1_10004670, { 1, 0 }
  uselistorder i32 %v1_10004690, { 1, 0 }
  uselistorder i32 %v1_10004678, { 1, 0 }
  uselistorder i32 %v1_10004674, { 1, 0 }
  uselistorder i32 %v0_10004658, { 0, 2, 1, 3 }
  uselistorder i32 %v2_10004574, { 1, 0 }
  uselistorder i32 %v1_10004524, { 2, 1, 0, 3 }
  uselistorder i32 %v2_100044e8, { 1, 3, 2, 0 }
  uselistorder i32 %v0_1000443c, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-632, { 1, 0 }
  uselistorder i32* %r28.global-to-local, { 3, 1, 2, 0, 4 }
  uselistorder i32 268453424, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_10007db4, { 2, 1, 0 }
  uselistorder i32 (i32*)* @function_100089e0, { 3, 2, 0, 4, 5, 6, 7, 1 }
  uselistorder i32 268453148, { 1, 0 }
  uselistorder i32 (i32)* @function_100088d0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10004514.backedge, { 2, 4, 3, 1, 0 }
  uselistorder label %dec_label_pc_100046b8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10004674, { 1, 0 }
  uselistorder label %dec_label_pc_10004638, { 1, 0 }
  uselistorder label %dec_label_pc_10004524, { 1, 0 }
  uselistorder label %dec_label_pc_10004524.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100044ac, { 2, 1, 0 }
}

define i32 @function_1000475c() local_unnamed_addr {
dec_label_pc_1000475c:
  store i32 268453744, i32* @global_var_1001b428.50, align 4
  %v0_1000476c = load i32, i32* @r3, align 4
  ret i32 %v0_1000476c
}

define i32 @function_10004770() local_unnamed_addr {
dec_label_pc_10004770:
  store i32 ptrtoint (i32* @global_var_1000478c.51 to i32), i32* @lr, align 4
  %v1_10004788 = call i32 @function_1000780c(i32 2)
  store i32 -1180361296, i32* @global_var_1001b524.53, align 4
  %v3_100047a4 = call i32 @function_10007758(i32 2, i32* null)
  %v4_100047a4 = inttoptr i32 %v3_100047a4 to i16*
  %v3_100047a8 = load i16, i16* %v4_100047a4, align 2
  store i16 %v3_100047a8, i16* bitcast (i32* @global_var_1001b522.54 to i16*), align 4
  store i32 268453816, i32* @lr, align 4
  %v1_100047b4 = call i32 @function_10007780(i32 2)
  ret i32 %v1_100047b4
}

define i32 @function_100047cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_100047cc:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v0_100047ec = load i32, i32* @r28, align 4
  store i32 0, i32* @r27, align 4
  store i32 268566528, i32* @r28, align 4
  %v0_100047fc = load i32, i32* @r31, align 4
  store i32 268566528, i32* @r31, align 4
  %v2_10004808 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_10004808, i32* @r30, align 4
  store i32 1, i32* %stack_var_-56, align 4
  store i32 268453908, i32* @lr, align 4
  %v3_10004810 = call i32 @function_100090b4(i32 2, i32 1, i32 0)
  %v3_10004814 = icmp eq i32 %v3_10004810, -1
  store i32 %v3_10004810, i32* @global_var_1001b420.55, align 4
  br i1 %v3_10004814, label %dec_label_pc_100048c4, label %dec_label_pc_10004830

dec_label_pc_10004830:                            ; preds = %dec_label_pc_100047cc
  %v2_10004818 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268453940, i32* @lr, align 4
  %v5_10004830 = call i32 @function_10009078(i32 %v3_10004810, i32 1, i32 2, i32 %v2_10004818)
  %v3_10004834 = load i32, i32* @global_var_1001b420.55, align 4
  store i32 3, i32* @r4, align 4
  store i32 268453964, i32* @lr, align 4
  %v2_10004848 = call i32 @function_100082e4(i32 %v3_10004834)
  store i32 4, i32* @r4, align 4
  store i32 268453984, i32* @lr, align 4
  %v2_1000485c = call i32 @function_100082e4(i32 %v3_10004834)
  %v3_10004860 = load i8, i8* @global_var_1001b2e0.56, align 1
  %v3_10004868 = icmp eq i8 %v3_10004860, 0
  br i1 %v3_10004868, label %dec_label_pc_100048e8, label %dec_label_pc_10004874

dec_label_pc_10004874:                            ; preds = %dec_label_pc_10004830
  store i32 2, i32* %stack_var_-52, align 4
  %v0_10004888 = call i32 @function_10008aa0()
  %v0_1000488c = load i32, i32* @r27, align 4
  %v2_1000488c = inttoptr i32 %v0_10004888 to i32*
  store i32 %v0_1000488c, i32* %v2_1000488c, align 4
  store i32 %v0_10004888, i32* @r29, align 4
  %v3_1000489c = load i32, i32* @global_var_1001b420.55, align 4
  store i32 268454052, i32* @lr, align 4
  %v3_100048a0 = call i32 @function_10008e80(i32 %v3_1000489c, i32 %v2_10004808, i32 16)
  %v3_100048a8 = icmp eq i32 %v3_100048a0, -1
  br i1 %v3_100048a8, label %dec_label_pc_10004930, label %dec_label_pc_100048b4

dec_label_pc_100048b4:                            ; preds = %dec_label_pc_100048e8, %dec_label_pc_10004874
  %v3_100048bc = load i32, i32* @global_var_1001b420.55, align 4
  store i32 268454084, i32* @lr, align 4
  %v2_100048c0 = call i32 @function_10008f58(i32 %v3_100048bc, i32 1)
  br label %dec_label_pc_100048c4

dec_label_pc_100048c4:                            ; preds = %dec_label_pc_100047cc, %dec_label_pc_100048b4
  %v0_100048e4 = phi i32 [ -1, %dec_label_pc_100047cc ], [ %v2_100048c0, %dec_label_pc_100048b4 ]
  store i32 %v0_100047ec, i32* @r28, align 4
  store i32 %v0_100047fc, i32* @r31, align 4
  ret i32 %v0_100048e4

dec_label_pc_100048e8:                            ; preds = %dec_label_pc_10004830
  store i32 2, i32* %stack_var_-52, align 4
  %v0_10004904 = call i32 @function_10008aa0()
  %v0_10004908 = load i32, i32* @r27, align 4
  %v2_10004908 = inttoptr i32 %v0_10004904 to i32*
  store i32 %v0_10004908, i32* %v2_10004908, align 4
  store i32 %v0_10004904, i32* @r29, align 4
  %v3_10004918 = load i32, i32* @global_var_1001b420.55, align 4
  store i32 268454176, i32* @lr, align 4
  %v3_1000491c = call i32 @function_10008e80(i32 %v3_10004918, i32 %v2_10004808, i32 16)
  %v3_10004924 = icmp eq i32 %v3_1000491c, -1
  br i1 %v3_10004924, label %dec_label_pc_10004930, label %dec_label_pc_100048b4

dec_label_pc_10004930:                            ; preds = %dec_label_pc_100048e8, %dec_label_pc_10004874
  %v0_10004930 = load i32, i32* @r29, align 4
  %v1_10004930 = inttoptr i32 %v0_10004930 to i32*
  %v2_10004930 = load i32, i32* %v1_10004930, align 4
  %v3_10004934 = load i32, i32* @global_var_1001b420.55, align 4
  store i32 %v3_10004934, i32* @r3, align 4
  %v3_10004938 = icmp eq i32 %v2_10004930, 99
  br i1 %v3_10004938, label %dec_label_pc_100049a0, label %dec_label_pc_10004940

dec_label_pc_10004940:                            ; preds = %dec_label_pc_100049a0, %dec_label_pc_10004930, %dec_label_pc_100049ac
  store i32 2, i32* %stack_var_-52, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000495c.57 to i32), i32* @lr, align 4
  %v0_10004958 = call i32 @function_10008eb4()
  store i32 268454244, i32* @lr, align 4
  %v1_10004960 = call i32 @function_100099e4(i32 5)
  store i32 ptrtoint ([3 x i8]* @global_var_1000496c.58 to i32), i32* @lr, align 4
  %v0_10004968 = call i32 @function_100083cc()
  store i32 268454264, i32* @lr, align 4
  %v1_10004974 = call i32 @function_10003df0(i32 48101)
  store i32 268454268, i32* @lr, align 4
  %v1_10004978 = call i32 @function_100047cc(i32 %v1_10004974)
  store i32 %v0_100047ec, i32* @r28, align 4
  store i32 %v0_100047fc, i32* @r31, align 4
  ret i32 %v1_10004978

dec_label_pc_100049a0:                            ; preds = %dec_label_pc_10004930
  %v3_100049a0 = load i8, i8* @global_var_1001b2e0.56, align 1
  %v3_100049a4 = icmp eq i8 %v3_100049a0, 0
  br i1 %v3_100049a4, label %dec_label_pc_10004940, label %dec_label_pc_100049ac

dec_label_pc_100049ac:                            ; preds = %dec_label_pc_100049a0
  %v0_100049b0 = load i32, i32* @r27, align 4
  %v1_100049b0 = trunc i32 %v0_100049b0 to i8
  store i8 %v1_100049b0, i8* @global_var_1001b2e0.56, align 1
  br label %dec_label_pc_10004940

; uselistorder directives
  uselistorder i32 %v2_10004808, { 1, 0, 2 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32 (i32)* @function_10003df0, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_10008f58, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10008e80, { 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_1001b2e0.56, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10004940, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100048c4, { 1, 0 }
}

define i32 @function_100049b8(i32 %arg1) local_unnamed_addr {
dec_label_pc_100049b8:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 0, i32* %r20.global-to-local, align 4
  store i32 0, i32* %r19.global-to-local, align 4
  store i32 0, i32* %r18.global-to-local, align 4
  store i32 0, i32* %r16.global-to-local, align 4
  store i32 0, i32* %r15.global-to-local, align 4
  %stack_var_-1136 = alloca i32, align 4
  %stack_var_-1600 = alloca i32, align 4
  %stack_var_-1612 = alloca i32, align 4
  %stack_var_-1616 = alloca i32, align 4
  %stack_var_-1608 = alloca i32, align 4
  %stack_var_-1264 = alloca i32, align 4
  %stack_var_-1392 = alloca i32, align 4
  %stack_var_-1620 = alloca i32, align 4
  %stack_var_-1624 = alloca i16, align 2
  %stack_var_-1584 = alloca i32, align 4
  %stack_var_-1552 = alloca i32, align 4
  %stack_var_-1520 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_100049b8 = load i32, i32* @lr, align 4
  store i32 %v0_100049b8, i32* %r0.global-to-local, align 4
  %v0_100049c0 = load i32, i32* @r31, align 4
  store i32 268454348, i32* @lr, align 4
  %v0_100049c8 = call i32 @function_10008414()
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v0_100049c8, i32* @global_var_1001b458.59, align 4
  %tmp47 = icmp slt i32 %v0_100049c8, 1
  br i1 %tmp47, label %dec_label_pc_100049f0, label %dec_label_pc_100049dc

dec_label_pc_100049dc:                            ; preds = %dec_label_pc_100049f0, %dec_label_pc_100049b8
  store i32 %v0_100049b8, i32* %r0.global-to-local, align 4
  store i32 %v0_100049c0, i32* @r31, align 4
  ret i32 %v0_100049c8

dec_label_pc_100049f0:                            ; preds = %dec_label_pc_100049b8
  %v3_100049f0 = icmp eq i32 %v0_100049c8, -1
  br i1 %v3_100049f0, label %dec_label_pc_100049dc, label %dec_label_pc_100049f8

dec_label_pc_100049f8:                            ; preds = %dec_label_pc_100049f0
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* %stack_var_-24, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004a08.60 to i32), i32* @lr, align 4
  %v1_10004a04 = call i32 @function_1000780c(i32 13)
  store i32 268454416, i32* @lr, align 4
  %v1_10004a0c = call i32 @function_1000780c(i32 14)
  %v3_10004a18 = call i32 @function_10007758(i32 13, i32* null)
  store i32 268454440, i32* @lr, align 4
  %v2_10004a24 = call i32 @function_10008534(i32 %v3_10004a18, i32 2)
  %v3_10004a28 = icmp eq i32 %v2_10004a24, -1
  store i32 %v2_10004a24, i32* @r31, align 4
  br i1 %v3_10004a28, label %dec_label_pc_10004a70, label %dec_label_pc_10004a34

dec_label_pc_10004a34:                            ; preds = %dec_label_pc_10004a70, %dec_label_pc_100049f8
  %v0_10004a38 = phi i32 [ %v2_10004a84, %dec_label_pc_10004a70 ], [ %v2_10004a24, %dec_label_pc_100049f8 ]
  %v2_10004a40 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268454476, i32* @lr, align 4
  %v3_10004a48 = call i32 @function_100081fc(i32 %v0_10004a38, i32 -2147199228, i32 %v2_10004a40)
  br label %dec_label_pc_10004a4c

dec_label_pc_10004a4c:                            ; preds = %dec_label_pc_10004a4c, %dec_label_pc_10004a34
  %v0_10004a50 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004a64.61 to i32), i32* @lr, align 4
  %v3_10004a60 = call i32 @function_100081fc(i32 %v0_10004a50, i32 -2147199227, i32 0)
  store i32 268454508, i32* @lr, align 4
  %v1_10004a68 = call i32 @function_100099e4(i32 10)
  br label %dec_label_pc_10004a4c

dec_label_pc_10004a70:                            ; preds = %dec_label_pc_100049f8
  %v3_10004a78 = call i32 @function_10007758(i32 14, i32* null)
  store i32 268454536, i32* @lr, align 4
  %v2_10004a84 = call i32 @function_10008534(i32 %v3_10004a78, i32 2)
  %v3_10004a88 = icmp eq i32 %v2_10004a84, -1
  store i32 %v2_10004a84, i32* @r31, align 4
  br i1 %v3_10004a88, label %dec_label_pc_10004a94, label %dec_label_pc_10004a34

dec_label_pc_10004a94:                            ; preds = %dec_label_pc_10004a70
  store i32 ptrtoint ([3 x i8]* @global_var_10004a9c.62 to i32), i32* @lr, align 4
  %v1_10004a98 = call i32 @function_10007780(i32 13)
  store i32 ptrtoint ([3 x i8]* @global_var_10004aa4.63 to i32), i32* @lr, align 4
  %v1_10004aa0 = call i32 @function_10007780(i32 14)
  %v0_10004aa8 = call i32 @function_10009960()
  %v0_10004ab0 = load i32, i32* @lr, align 4
  %v0_10004ab4 = load i32, i32* @r29, align 4
  %v2_10004ab8 = ptrtoint i32* %stack_var_-1520 to i32
  store i32 %v2_10004ab8, i32* @r29, align 4
  %v0_10004abc = load i32, i32* @r28, align 4
  store i32 %v0_10004aa8, i32* @r28, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-1620, align 4
  %v0_10004adc = load i32, i32* @r22, align 4
  store i32 268566528, i32* @r22, align 4
  %v0_10004ae4 = load i32, i32* @r24, align 4
  %v2_10004ae8 = ptrtoint i32* %stack_var_-1552 to i32
  store i32 %v2_10004ae8, i32* @r24, align 4
  %v0_10004aec = load i32, i32* @r25, align 4
  store i32 268566528, i32* @r25, align 4
  %v0_10004af4 = load i32, i32* @r31, align 4
  store i32 2, i32* @r31, align 4
  %v0_10004afc = load i32, i32* %r15.global-to-local, align 4
  %v0_10004b00 = load i32, i32* %r16.global-to-local, align 4
  %v0_10004b04 = load i32, i32* @r17, align 4
  %v0_10004b08 = load i32, i32* %r18.global-to-local, align 4
  %v0_10004b0c = load i32, i32* %r19.global-to-local, align 4
  %v0_10004b10 = load i32, i32* %r20.global-to-local, align 4
  %v0_10004b14 = load i32, i32* @r23, align 4
  %v0_10004b18 = load i32, i32* @r26, align 4
  %v0_10004b1c = load i32, i32* @r27, align 4
  %v0_10004b20 = load i32, i32* @r30, align 4
  store i32 268454696, i32* @lr, align 4
  %v1_10004b24 = call i32 @function_10009134(i32 %v2_10004ab8)
  store i32 %v2_10004ab8, i32* @r3, align 4
  store i32 268454708, i32* @lr, align 4
  %v2_10004b30 = call i32 @function_100090e8(i32 %v2_10004ab8, i32 2)
  store i32 268454724, i32* @lr, align 4
  %v3_10004b40 = call i32 @function_10008724(i32 0, i32 %v2_10004ab8, i32 0)
  store i32 268454736, i32* @lr, align 4
  %v2_10004b4c = call i32 @function_10009160(i32 17, i32 1)
  store i32 ptrtoint (i32* @global_var_10004b60.64 to i32), i32* @lr, align 4
  %v2_10004b5c = call i32 @function_10009160(i32 5, i32 268453724)
  store i32 268454756, i32* @lr, align 4
  %v1_10004b60 = call i32 @function_10007f90(i32 %v2_10004b5c)
  store i32 -1334109607, i32* %r9.global-to-local, align 4
  store i32 -1334109607, i32* @global_var_1001b524.53, align 4
  store i16 23, i16* bitcast (i32* @global_var_1001b522.54 to i16*), align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 %v1_10004b60, i32* @global_var_1001b448.12, align 4
  store i16 2, i16* bitcast (i32* @global_var_1001b520.52 to i16*), align 4
  store i32 268454796, i32* @lr, align 4
  %v2_10004b88 = call i32 @function_10007898(i32 %v1_10004b60, i32 -1334109607)
  store i32 268453744, i32* %r9.global-to-local, align 4
  store i32 268453744, i32* @global_var_1001b428.50, align 4
  store i32 ptrtoint (i32* @global_var_10004b9c.65 to i32), i32* @lr, align 4
  %v1_10004b98 = call i32 @function_100047cc(i32 %v2_10004b88)
  store i32 268454816, i32* @lr, align 4
  %v1_10004b9c = call i32 @function_100052a8(i32 %v1_10004b98)
  store i32 %v2_10004ae8, i32* @r3, align 4
  store i32 32, i32* @r4, align 4
  store i32 268454828, i32* @lr, align 4
  %v0_10004ba8 = call i32 @function_10007d34()
  %v0_10004bac = load i32, i32* @r28, align 4
  %v3_10004bac = icmp eq i32 %v0_10004bac, 2
  br i1 %v3_10004bac, label %dec_label_pc_10004d20, label %dec_label_pc_10004bb4

dec_label_pc_10004bb4:                            ; preds = %dec_label_pc_10004d20, %dec_label_pc_10004a94, %dec_label_pc_10004d30
  %v0_10004bb4 = call i32 @function_10005258()
  %v2_10004bb8 = ptrtoint i32* %stack_var_-1584 to i32
  store i32 %v2_10004bb8, i32* @r27, align 4
  store i32 %v0_10004bb4, i32* %r29.global-to-local, align 4
  %v0_10004bc0 = load i32, i32* @r31, align 4
  %v1_10004bc0 = inttoptr i32 %v0_10004bc0 to i32*
  %v2_10004bc0 = load i32, i32* %v1_10004bc0, align 4
  %v2_10004bc4 = ptrtoint i16* %stack_var_-1624 to i32
  store i32 %v2_10004bc4, i32* @r30, align 4
  store i32 0, i32* @r26, align 4
  store i32 268454864, i32* @lr, align 4
  %v1_10004bcc = inttoptr i32 %v2_10004bc0 to i8*
  %v2_10004bcc = call i32 @function_10007c8c(i8* %v1_10004bcc)
  store i32 %v2_10004bcc, i32* %r28.global-to-local, align 4
  %v0_10004bd4 = load i32, i32* @r31, align 4
  %v1_10004bd4 = inttoptr i32 %v0_10004bd4 to i32*
  %v2_10004bd4 = load i32, i32* %v1_10004bd4, align 4
  %v1_10004bd8 = sub i32 20, %v2_10004bcc
  store i32 %v1_10004bd8, i32* @r28, align 4
  store i32 268454880, i32* @lr, align 4
  %v1_10004bdc = inttoptr i32 %v2_10004bd4 to i8*
  %v2_10004bdc = call i32 @function_10007c8c(i8* %v1_10004bdc)
  %v0_10004be0 = load i32, i32* %r29.global-to-local, align 4
  %v1_10004be0 = load i32, i32* @r28, align 4
  %v2_10004be0 = urem i32 %v0_10004be0, %v1_10004be0
  %v2_10004be4 = sub i32 %v0_10004be0, %v2_10004be0
  store i32 %v2_10004be4, i32* %r0.global-to-local, align 4
  %v2_10004bec = add i32 %v2_10004be0, %v2_10004bdc
  store i32 %v2_10004bb8, i32* @r3, align 4
  store i32 %v2_10004bec, i32* @r4, align 4
  %v0_10004bf8 = load i32, i32* @r30, align 4
  %v2_10004bf8 = add i32 %v0_10004bf8, %v2_10004bec
  store i32 %v2_10004bf8, i32* @r29, align 4
  store i32 268454912, i32* @lr, align 4
  %v0_10004bfc = call i32 @function_10005318()
  %v0_10004c00 = load i32, i32* @r31, align 4
  %v1_10004c00 = inttoptr i32 %v0_10004c00 to i32*
  %v2_10004c00 = load i32, i32* %v1_10004c00, align 4
  store i32 %v2_10004c00, i32* @r3, align 4
  %v0_10004c04 = load i32, i32* @r26, align 4
  %v1_10004c04 = trunc i32 %v0_10004c04 to i8
  %v2_10004c04 = load i32, i32* @r29, align 4
  %v3_10004c04 = add i32 %v2_10004c04, 40
  %v4_10004c04 = inttoptr i32 %v3_10004c04 to i8*
  store i8 %v1_10004c04, i8* %v4_10004c04, align 1
  %v2_10004c0c = inttoptr i32 %v2_10004c00 to i8*
  %v3_10004c0c = call i32 @function_10007cb4(i8* %v2_10004c0c, i32 %v2_10004bb8)
  store i32 32, i32* @r4, align 4
  store i32 %v2_10004bb8, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10004c1c.67 to i32), i32* @lr, align 4
  %v0_10004c18 = call i32 @function_10007d34()
  %v0_10004c1c = call i32 @function_10005258()
  store i32 %v0_10004c1c, i32* %r28.global-to-local, align 4
  %v0_10004c24 = load i32, i32* @r31, align 4
  %v1_10004c24 = inttoptr i32 %v0_10004c24 to i32*
  %v2_10004c24 = load i32, i32* %v1_10004c24, align 4
  store i32 268454956, i32* @lr, align 4
  %v1_10004c28 = inttoptr i32 %v2_10004c24 to i8*
  %v2_10004c28 = call i32 @function_10007c8c(i8* %v1_10004c28)
  store i32 %v2_10004c28, i32* %r29.global-to-local, align 4
  %v0_10004c30 = load i32, i32* @r31, align 4
  %v1_10004c30 = inttoptr i32 %v0_10004c30 to i32*
  %v2_10004c30 = load i32, i32* %v1_10004c30, align 4
  %v1_10004c34 = sub i32 20, %v2_10004c28
  store i32 %v1_10004c34, i32* @r29, align 4
  store i32 268454972, i32* @lr, align 4
  %v1_10004c38 = inttoptr i32 %v2_10004c30 to i8*
  %v2_10004c38 = call i32 @function_10007c8c(i8* %v1_10004c38)
  %v0_10004c3c = load i32, i32* %r28.global-to-local, align 4
  %v1_10004c3c = load i32, i32* @r29, align 4
  %v2_10004c3c = urem i32 %v0_10004c3c, %v1_10004c3c
  %v2_10004c40 = sub i32 %v0_10004c3c, %v2_10004c3c
  store i32 %v2_10004c40, i32* %r0.global-to-local, align 4
  %v2_10004c48 = add i32 %v2_10004c3c, %v2_10004c38
  store i32 %v2_10004bb8, i32* @r3, align 4
  store i32 %v2_10004c48, i32* @r4, align 4
  %v0_10004c54 = load i32, i32* @r30, align 4
  %v2_10004c54 = add i32 %v0_10004c54, %v2_10004c48
  store i32 %v2_10004c54, i32* @r28, align 4
  store i32 268455004, i32* @lr, align 4
  %v0_10004c58 = call i32 @function_10005318()
  %v0_10004c5c = load i32, i32* @r26, align 4
  %v1_10004c5c = trunc i32 %v0_10004c5c to i8
  %v2_10004c5c = load i32, i32* @r28, align 4
  %v3_10004c5c = add i32 %v2_10004c5c, 40
  %v4_10004c5c = inttoptr i32 %v3_10004c5c to i8*
  store i8 %v1_10004c5c, i8* %v4_10004c5c, align 1
  store i32 ptrtoint ([3 x i8]* @global_var_10004c70.68 to i32), i32* @lr, align 4
  %v2_10004c6c = call i32 @function_100085bc(i32 15, i32 %v2_10004bb8)
  store i32 268455032, i32* @lr, align 4
  %v1_10004c74 = call i32 @function_1000780c(i32 1)
  %v3_10004c80 = call i32 @function_10007758(i32 1, i32* nonnull %stack_var_-1620)
  %v3_10004c84 = load i32, i32* %stack_var_-1620, align 4
  store i32 268455060, i32* @lr, align 4
  %v3_10004c90 = call i32 @function_100087e4(i32 1, i32 %v3_10004c80, i32 %v3_10004c84)
  store i32 ptrtoint ([3 x i8]* @global_var_10004ca8.70 to i32), i32* @lr, align 4
  %v3_10004ca4 = call i32 @function_100087e4(i32 1, i32 ptrtoint (i32* @global_var_1000abd0.69 to i32), i32 1)
  store i32 268455088, i32* @lr, align 4
  %v1_10004cac = call i32 @function_10007780(i32 1)
  store i32 268455092, i32* @lr, align 4
  %v1_10004cb0 = call i32 @function_1000068c(i32 %v1_10004cac)
  store i32 268455096, i32* @lr, align 4
  %v1_10004cb4 = call i32 @function_10004400(i32 %v1_10004cb0)
  store i32 ptrtoint (i32* @global_var_10004cbc.71 to i32), i32* @lr, align 4
  %v1_10004cb8 = call i32 @function_100049b8(i32 %v1_10004cb4)
  store i32 268455104, i32* @lr, align 4
  %v0_10004cbc = call i32 @function_10008414()
  %tmp48 = icmp slt i32 %v0_10004cbc, 1
  br i1 %tmp48, label %dec_label_pc_10004d58, label %dec_label_pc_10004cc8

dec_label_pc_10004cc8:                            ; preds = %dec_label_pc_10004bb4
  store i32 %v0_10004ab0, i32* %r0.global-to-local, align 4
  store i32 %v0_10004afc, i32* %r15.global-to-local, align 4
  store i32 %v0_10004b00, i32* %r16.global-to-local, align 4
  store i32 %v0_10004b04, i32* @r17, align 4
  store i32 %v0_10004b08, i32* %r18.global-to-local, align 4
  store i32 %v0_10004b0c, i32* %r19.global-to-local, align 4
  store i32 %v0_10004b10, i32* %r20.global-to-local, align 4
  store i32 %v0_10004adc, i32* @r22, align 4
  store i32 %v0_10004b14, i32* @r23, align 4
  store i32 %v0_10004ae4, i32* @r24, align 4
  store i32 %v0_10004aec, i32* @r25, align 4
  store i32 %v0_10004b18, i32* @r26, align 4
  store i32 %v0_10004b1c, i32* @r27, align 4
  store i32 %v0_10004abc, i32* @r28, align 4
  store i32 %v0_10004ab4, i32* @r29, align 4
  store i32 %v0_10004b20, i32* @r30, align 4
  store i32 %v0_10004af4, i32* @r31, align 4
  ret i32 0

dec_label_pc_10004d20:                            ; preds = %dec_label_pc_10004a94
  %v0_10004d20 = load i32, i32* @r31, align 4
  %v1_10004d20 = add i32 %v0_10004d20, 4
  %v2_10004d20 = inttoptr i32 %v1_10004d20 to i32*
  %v3_10004d20 = load i32, i32* %v2_10004d20, align 4
  store i32 268455208, i32* @lr, align 4
  %v1_10004d24 = inttoptr i32 %v3_10004d20 to i8*
  %v2_10004d24 = call i32 @function_10007c8c(i8* %v1_10004d24)
  %v2_10004d28 = icmp sgt i32 %v2_10004d24, 31
  br i1 %v2_10004d28, label %dec_label_pc_10004bb4, label %dec_label_pc_10004d30

dec_label_pc_10004d30:                            ; preds = %dec_label_pc_10004d20
  %v0_10004d30 = load i32, i32* @r31, align 4
  %v1_10004d30 = add i32 %v0_10004d30, 4
  %v2_10004d30 = inttoptr i32 %v1_10004d30 to i32*
  %v3_10004d30 = load i32, i32* %v2_10004d30, align 4
  store i32 %v2_10004ae8, i32* @r3, align 4
  %v2_10004d38 = bitcast i32* %stack_var_-1552 to i8*
  %v3_10004d38 = call i32 @function_10007cb4(i8* %v2_10004d38, i32 %v3_10004d30)
  %v0_10004d3c = load i32, i32* @r31, align 4
  %v1_10004d3c = add i32 %v0_10004d3c, 4
  %v2_10004d3c = inttoptr i32 %v1_10004d3c to i32*
  %v3_10004d3c = load i32, i32* %v2_10004d3c, align 4
  store i32 %v3_10004d3c, i32* %r29.global-to-local, align 4
  store i32 268455240, i32* @lr, align 4
  %v1_10004d44 = inttoptr i32 %v3_10004d3c to i8*
  %v2_10004d44 = call i32 @function_10007c8c(i8* %v1_10004d44)
  store i32 %v2_10004d44, i32* @r4, align 4
  store i32 %v3_10004d3c, i32* @r3, align 4
  store i32 268455252, i32* @lr, align 4
  %v0_10004d50 = call i32 @function_10007d34()
  br label %dec_label_pc_10004bb4

dec_label_pc_10004d58:                            ; preds = %dec_label_pc_10004bb4
  store i32 ptrtoint ([3 x i8]* @global_var_10004d5c.72 to i32), i32* @lr, align 4
  %v1_10004d58 = call i32 @function_100086dc(i32 %v0_10004cbc)
  store i32 0, i32* %r19.global-to-local, align 4
  store i32 %v1_10004d58, i32* @r17, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004d6c.73 to i32), i32* @lr, align 4
  %v0_10004d68 = call i32 @function_100083cc()
  store i32 ptrtoint ([3 x i8]* @global_var_10004d74.74 to i32), i32* @lr, align 4
  %v0_10004d70 = call i32 @function_100083cc()
  store i32 268455292, i32* @lr, align 4
  %v0_10004d78 = call i32 @function_100083cc()
  %v2_10004d7c = ptrtoint i32* %stack_var_-1392 to i32
  store i32 %v2_10004d7c, i32* @r28, align 4
  store i32 268455300, i32* @lr, align 4
  %v1_10004d80 = call i32 @function_1000068c(i32 %v0_10004d78)
  %v2_10004d84 = ptrtoint i32* %stack_var_-1264 to i32
  store i32 %v2_10004d84, i32* @r29, align 4
  store i32 268455308, i32* @lr, align 4
  %v1_10004d88 = call i32 @function_10004400(i32 %v1_10004d80)
  store i32 268566528, i32* %r20.global-to-local, align 4
  store i32 268455316, i32* @lr, align 4
  %v1_10004d90 = call i32 @function_100049b8(i32 %v1_10004d88)
  store i32 268566528, i32* @r26, align 4
  store i32 268455324, i32* @lr, align 4
  %v1_10004d98 = call i32 @function_10005c74(i32 %v1_10004d90)
  store i32 268566528, i32* %r18.global-to-local, align 4
  %v2_10004da0 = ptrtoint i32* %stack_var_-1608 to i32
  store i32 %v2_10004da0, i32* %r15.global-to-local, align 4
  %v2_10004da4 = ptrtoint i32* %stack_var_-1616 to i32
  store i32 %v2_10004da4, i32* %r16.global-to-local, align 4
  %v2_100051dc = ptrtoint i32* %stack_var_-1136 to i32
  %v2_1000509c = ptrtoint i32* %stack_var_-1612 to i32
  %v1_10005134 = bitcast i32* %stack_var_-1552 to i8*
  %v2_100050f8 = ptrtoint i32* %stack_var_-1600 to i32
  br label %dec_label_pc_10004da8

dec_label_pc_10004da8:                            ; preds = %dec_label_pc_10005200, %dec_label_pc_1000519c, %dec_label_pc_10005190, %dec_label_pc_10005130, %dec_label_pc_10004f80, %dec_label_pc_10004f70, %dec_label_pc_10004e60, %dec_label_pc_10005240, %dec_label_pc_10005234, %dec_label_pc_100051b4, %dec_label_pc_1000517c, %dec_label_pc_100050b8, %dec_label_pc_10004fe4, %dec_label_pc_10004f34, %dec_label_pc_10004d58
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10004db850 = load i32, i32* @r28, align 4
  %v4_10004db852 = inttoptr i32 %v2_10004db850 to i32*
  store i32 0, i32* %v4_10004db852, align 4
  %v0_10004dbc53 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004dbc54 = add i32 %v0_10004dbc53, 4
  store i32 %v1_10004dbc54, i32* %r9.global-to-local, align 4
  %v0_10004dc055 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10004dc056 = add i32 %v0_10004dc055, -1
  store i32 %v1_10004dc056, i32* %ctr.global-to-local, align 4
  %v2_10004dc057 = icmp eq i32 %v1_10004dc056, 0
  br i1 %v2_10004dc057, label %dec_label_pc_10004dc4, label %dec_label_pc_10004db8.dec_label_pc_10004db8_crit_edge

dec_label_pc_10004db8.dec_label_pc_10004db8_crit_edge: ; preds = %dec_label_pc_10004da8, %dec_label_pc_10004db8.dec_label_pc_10004db8_crit_edge
  %v1_10004dbc58 = phi i32 [ %v1_10004dbc, %dec_label_pc_10004db8.dec_label_pc_10004db8_crit_edge ], [ %v1_10004dbc54, %dec_label_pc_10004da8 ]
  %v0_10004db8.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_10004db8 = load i32, i32* @r28, align 4
  %v3_10004db8 = add i32 %v2_10004db8, %v1_10004dbc58
  %v4_10004db8 = inttoptr i32 %v3_10004db8 to i32*
  store i32 %v0_10004db8.pre, i32* %v4_10004db8, align 4
  %v0_10004dbc = load i32, i32* %r9.global-to-local, align 4
  %v1_10004dbc = add i32 %v0_10004dbc, 4
  store i32 %v1_10004dbc, i32* %r9.global-to-local, align 4
  %v0_10004dc0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10004dc0 = add i32 %v0_10004dc0, -1
  store i32 %v1_10004dc0, i32* %ctr.global-to-local, align 4
  %v2_10004dc0 = icmp eq i32 %v1_10004dc0, 0
  br i1 %v2_10004dc0, label %dec_label_pc_10004dc4, label %dec_label_pc_10004db8.dec_label_pc_10004db8_crit_edge

dec_label_pc_10004dc4:                            ; preds = %dec_label_pc_10004db8.dec_label_pc_10004db8_crit_edge, %dec_label_pc_10004da8
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10004dd459 = load i32, i32* @r29, align 4
  %v4_10004dd461 = inttoptr i32 %v2_10004dd459 to i32*
  store i32 0, i32* %v4_10004dd461, align 4
  %v0_10004dd862 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004dd863 = add i32 %v0_10004dd862, 4
  store i32 %v1_10004dd863, i32* %r9.global-to-local, align 4
  %v0_10004ddc64 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10004ddc65 = add i32 %v0_10004ddc64, -1
  store i32 %v1_10004ddc65, i32* %ctr.global-to-local, align 4
  %v2_10004ddc66 = icmp eq i32 %v1_10004ddc65, 0
  br i1 %v2_10004ddc66, label %dec_label_pc_10004de0, label %dec_label_pc_10004dd4.dec_label_pc_10004dd4_crit_edge

dec_label_pc_10004dd4.dec_label_pc_10004dd4_crit_edge: ; preds = %dec_label_pc_10004dc4, %dec_label_pc_10004dd4.dec_label_pc_10004dd4_crit_edge
  %v1_10004dd867 = phi i32 [ %v1_10004dd8, %dec_label_pc_10004dd4.dec_label_pc_10004dd4_crit_edge ], [ %v1_10004dd863, %dec_label_pc_10004dc4 ]
  %v0_10004dd4.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_10004dd4 = load i32, i32* @r29, align 4
  %v3_10004dd4 = add i32 %v2_10004dd4, %v1_10004dd867
  %v4_10004dd4 = inttoptr i32 %v3_10004dd4 to i32*
  store i32 %v0_10004dd4.pre, i32* %v4_10004dd4, align 4
  %v0_10004dd8 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004dd8 = add i32 %v0_10004dd8, 4
  store i32 %v1_10004dd8, i32* %r9.global-to-local, align 4
  %v0_10004ddc = load i32, i32* %ctr.global-to-local, align 4
  %v1_10004ddc = add i32 %v0_10004ddc, -1
  store i32 %v1_10004ddc, i32* %ctr.global-to-local, align 4
  %v2_10004ddc = icmp eq i32 %v1_10004ddc, 0
  br i1 %v2_10004ddc, label %dec_label_pc_10004de0, label %dec_label_pc_10004dd4.dec_label_pc_10004dd4_crit_edge

dec_label_pc_10004de0:                            ; preds = %dec_label_pc_10004dd4.dec_label_pc_10004dd4_crit_edge, %dec_label_pc_10004dc4
  %v3_10004de0 = load i32, i32* @global_var_1001b420.55, align 4
  %v3_10004de4 = icmp eq i32 %v3_10004de0, -1
  br i1 %v3_10004de4, label %dec_label_pc_10004e0c, label %dec_label_pc_10004dec

dec_label_pc_10004dec:                            ; preds = %dec_label_pc_10004de0
  %v1_10004dec = call i32 @__asm_rlwinm(i32 %v3_10004de0, i32 29, i32 3, i32 29)
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10004df4 = load i32, i32* @r30, align 4
  %v2_10004df4 = add i32 %v1_10004df4, %v1_10004dec
  %v1_10004df8 = urem i32 %v3_10004de0, 32
  %v1_10004dfc = add i32 %v2_10004df4, 232
  %v2_10004dfc = inttoptr i32 %v1_10004dfc to i32*
  %v3_10004dfc = load i32, i32* %v2_10004dfc, align 4
  %v3_10004e00 = shl i32 1, %v1_10004df8
  store i32 %v3_10004e00, i32* %r0.global-to-local, align 4
  %v2_10004e04 = or i32 %v3_10004dfc, %v3_10004e00
  store i32 %v2_10004e04, i32* %r9.global-to-local, align 4
  store i32 %v2_10004e04, i32* %v2_10004dfc, align 4
  br label %dec_label_pc_10004e0c

dec_label_pc_10004e0c:                            ; preds = %dec_label_pc_10004de0, %dec_label_pc_10004dec
  %v3_10004e0c = load i32, i32* @global_var_1001b424.75, align 4
  store i32 %v3_10004e0c, i32* %r0.global-to-local, align 4
  %v3_10004e14 = icmp eq i32 %v3_10004e0c, -1
  br i1 %v3_10004e14, label %dec_label_pc_10004ff8, label %dec_label_pc_10004e1c

dec_label_pc_10004e1c:                            ; preds = %dec_label_pc_10004ff8, %dec_label_pc_10004e0c, %dec_label_pc_10005050
  %v3_10004f48 = phi i32 [ -1, %dec_label_pc_10004ff8 ], [ %v3_10004e0c, %dec_label_pc_10004e0c ], [ %v3_10004f48.pre, %dec_label_pc_10005050 ]
  %v3_10004e1c = load i8, i8* bitcast (i16* @global_var_1001b45c.76 to i8*), align 2
  %v3_10004e20 = icmp eq i8 %v3_10004e1c, 0
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10004f50 = call i32 @__asm_rlwinm(i32 %v3_10004f48, i32 29, i32 3, i32 29)
  %v1_10004f54 = urem i32 %v3_10004f48, 32
  %v1_10004f58 = load i32, i32* @r30, align 4
  %v2_10004f58 = add i32 %v1_10004f58, %v1_10004f50
  %v0_10004f5c = load i32, i32* %r0.global-to-local, align 4
  %v3_10004f5c = shl i32 %v0_10004f5c, %v1_10004f54
  store i32 %v3_10004f5c, i32* %r0.global-to-local, align 4
  br i1 %v3_10004e20, label %dec_label_pc_10004f48, label %dec_label_pc_10004e28

dec_label_pc_10004e28:                            ; preds = %dec_label_pc_10004e1c
  %v1_10004e40 = add i32 %v2_10004f58, 360
  %v2_10004e40 = inttoptr i32 %v1_10004e40 to i32*
  %v3_10004e40 = load i32, i32* %v2_10004e40, align 4
  %v2_10004e44 = or i32 %v3_10004e40, %v3_10004f5c
  store i32 %v2_10004e44, i32* %r9.global-to-local, align 4
  store i32 %v2_10004e44, i32* %v2_10004e40, align 4
  br label %dec_label_pc_10004e4c

dec_label_pc_10004e4c:                            ; preds = %dec_label_pc_10004f48, %dec_label_pc_10004e28
  %v3_10004e4c = load i32, i32* @global_var_1001b424.75, align 4
  store i32 %v3_10004e4c, i32* %r0.global-to-local, align 4
  %v3_10004e50 = load i32, i32* @global_var_1001b420.55, align 4
  %v2_10004e54 = icmp slt i32 %v3_10004e50, %v3_10004e4c
  br i1 %v2_10004e54, label %dec_label_pc_10004e5c, label %dec_label_pc_10004e60

dec_label_pc_10004e5c:                            ; preds = %dec_label_pc_10004e4c
  br label %dec_label_pc_10004e60

dec_label_pc_10004e60:                            ; preds = %dec_label_pc_10004e4c, %dec_label_pc_10004e5c
  %v0_10004e68 = phi i32 [ %v3_10004e50, %dec_label_pc_10004e4c ], [ %v3_10004e4c, %dec_label_pc_10004e5c ]
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r9.global-to-local, align 4
  %v1_10004e68 = add i32 %v0_10004e68, 1
  store i32 10, i32* %stack_var_-1608, align 4
  store i32 268455560, i32* @lr, align 4
  %v5_10004e84 = call i32 @function_10008694(i32 %v1_10004e68, i32 %v2_10004d7c, i32 %v2_10004d84, i32 0, i32 %v2_10004da0)
  %v6_10004e84 = trunc i32 %v5_10004e84 to i16
  %v4_10004e88 = icmp eq i16 %v6_10004e84, -1
  br i1 %v4_10004e88, label %dec_label_pc_10004da8, label %dec_label_pc_10004e90

dec_label_pc_10004e90:                            ; preds = %dec_label_pc_10004e60
  %v4_10004e90 = icmp eq i16 %v6_10004e84, 0
  br i1 %v4_10004e90, label %dec_label_pc_10004e98, label %dec_label_pc_10004ec4

dec_label_pc_10004e98:                            ; preds = %dec_label_pc_10004e90
  %v0_10004e9c = load i32, i32* %r19.global-to-local, align 4
  store i16 0, i16* %stack_var_-1624, align 2
  %v2_10004eac = srem i32 %v0_10004e9c, 6
  %v1_10004eb0 = sub i32 %v0_10004e9c, %v2_10004eac
  store i32 %v1_10004eb0, i32* %r9.global-to-local, align 4
  store i32 %v2_10004eac, i32* %r0.global-to-local, align 4
  %v1_10004eb8 = add i32 %v0_10004e9c, 1
  store i32 %v1_10004eb8, i32* %r19.global-to-local, align 4
  %v3_10004ebc = icmp eq i32 %v2_10004eac, 0
  br i1 %v3_10004ebc, label %dec_label_pc_1000506c, label %dec_label_pc_10004ec4

dec_label_pc_10004ec4:                            ; preds = %dec_label_pc_10004e90, %dec_label_pc_10004e98, %dec_label_pc_1000506c
  %v3_10004ec4 = load i32, i32* @global_var_1001b420.55, align 4
  %v3_10004ec8 = icmp eq i32 %v3_10004ec4, -1
  br i1 %v3_10004ec8, label %dec_label_pc_10004eec, label %dec_label_pc_10004ed0

dec_label_pc_10004ed0:                            ; preds = %dec_label_pc_10004ec4
  %v1_10004ed0 = call i32 @__asm_rlwinm(i32 %v3_10004ec4, i32 29, i32 3, i32 29)
  %v1_10004ed4 = urem i32 %v3_10004ec4, 32
  %v1_10004ed8 = load i32, i32* @r30, align 4
  %v2_10004ed8 = add i32 %v1_10004ed8, %v1_10004ed0
  store i32 %v2_10004ed8, i32* %r9.global-to-local, align 4
  %v1_10004edc = add i32 %v2_10004ed8, 232
  %v2_10004edc = inttoptr i32 %v1_10004edc to i32*
  %v3_10004edc = load i32, i32* %v2_10004edc, align 4
  %v3_10004ee0 = lshr i32 %v3_10004edc, %v1_10004ed4
  store i32 %v3_10004ee0, i32* %r0.global-to-local, align 4
  %v1_10004ee4 = urem i32 %v3_10004ee0, 2
  store i32 %v1_10004ee4, i32* %r9.global-to-local, align 4
  %v3_10004ee4 = icmp eq i32 %v1_10004ee4, 0
  br i1 %v3_10004ee4, label %dec_label_pc_10004eec, label %dec_label_pc_100050f0

dec_label_pc_10004eec:                            ; preds = %dec_label_pc_10004ed0, %dec_label_pc_10004ec4
  %v3_10004eec = load i8, i8* bitcast (i16* @global_var_1001b45c.76 to i8*), align 2
  %v4_10004eec = zext i8 %v3_10004eec to i32
  store i32 %v4_10004eec, i32* @r31, align 4
  %v3_10004ef0 = icmp eq i8 %v3_10004eec, 0
  %v3_10004f70 = load i32, i32* @global_var_1001b424.75, align 4
  br i1 %v3_10004ef0, label %dec_label_pc_10004f70, label %dec_label_pc_10004ef8

dec_label_pc_10004ef8:                            ; preds = %dec_label_pc_10004eec
  store i32 268566528, i32* @r31, align 4
  %v1_10004f00 = call i32 @__asm_rlwinm(i32 %v3_10004f70, i32 29, i32 3, i32 29)
  %v1_10004f04 = urem i32 %v3_10004f70, 32
  %v1_10004f08 = load i32, i32* @r30, align 4
  %v2_10004f08 = add i32 %v1_10004f08, %v1_10004f00
  store i32 %v2_10004f08, i32* %r9.global-to-local, align 4
  %v1_10004f0c = add i32 %v2_10004f08, 360
  %v2_10004f0c = inttoptr i32 %v1_10004f0c to i32*
  %v3_10004f0c = load i32, i32* %v2_10004f0c, align 4
  %v3_10004f10 = lshr i32 %v3_10004f0c, %v1_10004f04
  store i32 %v3_10004f10, i32* %r0.global-to-local, align 4
  %v1_10004f18 = urem i32 %v3_10004f10, 2
  %v3_10004f18 = icmp eq i32 %v1_10004f18, 0
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i8 0, i8* bitcast (i16* @global_var_1001b45c.76 to i8*), align 2
  br i1 %v3_10004f18, label %dec_label_pc_10004f28, label %dec_label_pc_10005088

dec_label_pc_10004f28:                            ; preds = %dec_label_pc_10004ef8
  %v3_10004f28 = icmp eq i32 %v3_10004f70, -1
  br i1 %v3_10004f28, label %dec_label_pc_10004f34, label %dec_label_pc_10004f30

dec_label_pc_10004f30:                            ; preds = %dec_label_pc_10004f28
  store i32 ptrtoint (i32* @global_var_10004f34.77 to i32), i32* @lr, align 4
  %v0_10004f30 = call i32 @function_100083cc()
  br label %dec_label_pc_10004f34

dec_label_pc_10004f34:                            ; preds = %dec_label_pc_10004f28, %dec_label_pc_10004f30
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001b424.75, align 4
  store i32 268455748, i32* @lr, align 4
  %v1_10004f40 = call i32 @function_100099e4(i32 1)
  br label %dec_label_pc_10004da8

dec_label_pc_10004f48:                            ; preds = %dec_label_pc_10004e1c
  %v1_10004f60 = add i32 %v2_10004f58, 232
  %v2_10004f60 = inttoptr i32 %v1_10004f60 to i32*
  %v3_10004f60 = load i32, i32* %v2_10004f60, align 4
  %v2_10004f64 = or i32 %v3_10004f60, %v3_10004f5c
  store i32 %v2_10004f64, i32* %r9.global-to-local, align 4
  store i32 %v2_10004f64, i32* %v2_10004f60, align 4
  br label %dec_label_pc_10004e4c

dec_label_pc_10004f70:                            ; preds = %dec_label_pc_10004eec
  %v3_10004f78 = icmp eq i32 %v3_10004f70, -1
  br i1 %v3_10004f78, label %dec_label_pc_10004da8, label %dec_label_pc_10004f80

dec_label_pc_10004f80:                            ; preds = %dec_label_pc_10004f70
  %v1_10004f80 = call i32 @__asm_rlwinm(i32 %v3_10004f70, i32 29, i32 3, i32 29)
  %v1_10004f84 = urem i32 %v3_10004f70, 32
  %v1_10004f88 = load i32, i32* @r30, align 4
  %v2_10004f88 = add i32 %v1_10004f88, %v1_10004f80
  store i32 %v2_10004f88, i32* %r9.global-to-local, align 4
  %v1_10004f8c = add i32 %v2_10004f88, 232
  %v2_10004f8c = inttoptr i32 %v1_10004f8c to i32*
  %v3_10004f8c = load i32, i32* %v2_10004f8c, align 4
  %v3_10004f90 = lshr i32 %v3_10004f8c, %v1_10004f84
  store i32 %v3_10004f90, i32* %r0.global-to-local, align 4
  %v1_10004f94 = urem i32 %v3_10004f90, 2
  store i32 %v1_10004f94, i32* %r9.global-to-local, align 4
  %v3_10004f94 = icmp eq i32 %v1_10004f94, 0
  br i1 %v3_10004f94, label %dec_label_pc_10004da8, label %dec_label_pc_10004f9c

dec_label_pc_10004f9c:                            ; preds = %dec_label_pc_10004f80
  %v0_10004f9c = load i32, i32* @r31, align 4
  %v6_10004f9c = trunc i32 %v0_10004f9c to i16
  store i16 %v6_10004f9c, i16* %stack_var_-1624, align 2
  %v0_10004fa0 = call i32 @function_10008aa0()
  %v0_10004fa4 = load i32, i32* @r31, align 4
  %v2_10004fa4 = inttoptr i32 %v0_10004fa0 to i32*
  store i32 %v0_10004fa4, i32* %v2_10004fa4, align 4
  store i32 %v0_10004fa0, i32* @r23, align 4
  %v3_10004fb4 = load i32, i32* @global_var_1001b424.75, align 4
  store i32 268455872, i32* @lr, align 4
  %v4_10004fbc = call i32 @function_10008f88(i32 %v3_10004fb4, i32 %v2_10004bc4, i32 2, i32 16386)
  %v3_10004fc0 = icmp eq i32 %v4_10004fbc, -1
  br i1 %v3_10004fc0, label %dec_label_pc_10005190, label %dec_label_pc_10004fc8

dec_label_pc_10004fc8:                            ; preds = %dec_label_pc_10004f9c
  %v3_10004fc8 = icmp eq i32 %v4_10004fbc, 0
  br i1 %v3_10004fc8, label %dec_label_pc_100051a4, label %dec_label_pc_10004fd0

dec_label_pc_10004fd0:                            ; preds = %dec_label_pc_10004fc8
  %v3_10004fd0 = load i16, i16* %stack_var_-1624, align 2
  %v4_10004fd0 = sext i16 %v3_10004fd0 to i32
  %v4_10004fd4 = icmp eq i16 %v3_10004fd0, 0
  br i1 %v4_10004fd4, label %dec_label_pc_10005240, label %dec_label_pc_10004fdc

dec_label_pc_10004fdc:                            ; preds = %dec_label_pc_10004fd0
  %tmp49 = icmp ult i16 %v3_10004fd0, 1025
  br i1 %tmp49, label %dec_label_pc_100051d8, label %dec_label_pc_10004fe4

dec_label_pc_10004fe4:                            ; preds = %dec_label_pc_10004fdc
  store i32 ptrtoint (i32* @global_var_10004fec.78 to i32), i32* @lr, align 4
  %v0_10004fe8 = call i32 @function_100083cc()
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001b424.75, align 4
  br label %dec_label_pc_10004da8

dec_label_pc_10004ff8:                            ; preds = %dec_label_pc_10004e0c
  store i32 268455944, i32* @lr, align 4
  %v3_10005004 = call i32 @function_100090b4(i32 2, i32 1, i32 0)
  %v3_10005008 = icmp eq i32 %v3_10005004, -1
  store i32 %v3_10005004, i32* @r31, align 4
  store i32 %v3_10005004, i32* @global_var_1001b424.75, align 4
  br i1 %v3_10005008, label %dec_label_pc_10004e1c, label %dec_label_pc_10005018

dec_label_pc_10005018:                            ; preds = %dec_label_pc_10004ff8
  store i32 3, i32* @r4, align 4
  store i32 268455976, i32* @lr, align 4
  %v1_10005024 = call i32 @function_100082e4(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_10005030 = load i32, i32* @r31, align 4
  store i32 268455996, i32* @lr, align 4
  %v2_10005038 = call i32 @function_100082e4(i32 %v0_10005030)
  %v3_1000503c = load i32, i32* @global_var_1001b428.50, align 4
  store i32 %v3_1000503c, i32* %r0.global-to-local, align 4
  %v3_10005040 = icmp eq i32 %v3_1000503c, 0
  br i1 %v3_10005040, label %dec_label_pc_10005050, label %dec_label_pc_10005048

dec_label_pc_10005048:                            ; preds = %dec_label_pc_10005018
  store i32 %v3_1000503c, i32* %ctr.global-to-local, align 4
  store i32 268456016, i32* @lr, align 4
  %v2_1000504c = call i32 @function_10007f90(i32 %v2_10005038)
  br label %dec_label_pc_10005050

dec_label_pc_10005050:                            ; preds = %dec_label_pc_10005018, %dec_label_pc_10005048
  %v3_10005050 = load i32, i32* @global_var_1001b424.75, align 4
  store i32 %v3_10005050, i32* @r3, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i8 1, i8* bitcast (i16* @global_var_1001b45c.76 to i8*), align 2
  store i32 268456040, i32* @lr, align 4
  %v0_10005064 = call i32 @function_10008eb4()
  %v3_10004f48.pre = load i32, i32* @global_var_1001b424.75, align 4
  br label %dec_label_pc_10004e1c

dec_label_pc_1000506c:                            ; preds = %dec_label_pc_10004e98
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10005074 = load i32, i32* @global_var_1001b424.75, align 4
  store i32 268456068, i32* @lr, align 4
  %v4_10005080 = call i32 @function_10009000(i32 %v3_10005074, i32 %v2_10004bc4, i32 2, i32 16384)
  br label %dec_label_pc_10004ec4

dec_label_pc_10005088:                            ; preds = %dec_label_pc_10004ef8
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-1616, align 4
  store i32 4, i32* %stack_var_-1612, align 4
  store i32 268456108, i32* @lr, align 4
  %v5_100050a8 = call i32 @function_10008f1c(i32 1, i32 4, i32 %v2_10004da4, i32 %v2_1000509c, i32 4)
  %v3_100050ac = load i32, i32* %stack_var_-1616, align 4
  store i32 %v3_100050ac, i32* %r0.global-to-local, align 4
  %v3_100050b0 = icmp eq i32 %v3_100050ac, 0
  br i1 %v3_100050b0, label %dec_label_pc_10005130, label %dec_label_pc_100050b8

dec_label_pc_100050b8:                            ; preds = %dec_label_pc_10005088
  store i32 ptrtoint (i32* @global_var_100050c0.79 to i32), i32* @lr, align 4
  %v0_100050bc = call i32 @function_100083cc()
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001b424.75, align 4
  %v0_100050c8 = call i32 @function_10005258()
  %v1_100050c8 = sext i32 %v0_100050c8 to i64
  %v5_100050d4 = mul nuw nsw i64 %v1_100050c8, 3435973837
  %v1_100050d82 = udiv i64 %v5_100050d4, 34359738368
  %v1_100050d8 = trunc i64 %v1_100050d82 to i32
  %v1_100050dc = mul i32 %v1_100050d8, 10
  store i32 %v1_100050dc, i32* %r0.global-to-local, align 4
  %v3_100050e0 = sub i32 %v0_100050c8, %v1_100050dc
  %v1_100050e4 = add i32 %v3_100050e0, 1
  store i32 268456172, i32* @lr, align 4
  %v1_100050e8 = call i32 @function_100099e4(i32 %v1_100050e4)
  br label %dec_label_pc_10004da8

dec_label_pc_100050f0:                            ; preds = %dec_label_pc_10004ed0
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 16, i32* %stack_var_-1616, align 4
  store i32 ptrtoint (i32* @global_var_10005104.81 to i32), i32* @lr, align 4
  %v3_10005100 = call i32 @function_10008e4c(i32 %v2_100050f8, i32 %v2_10004da4, i32 %v1_10004ee4)
  store i32 268456200, i32* @lr, align 4
  %v1_10005104 = call i32 @function_100059a0(i32 %v3_10005100)
  store i32 ptrtoint ([3 x i8]* @global_var_1000510c.82 to i32), i32* @lr, align 4
  %v1_10005108 = call i32 @function_10003dc4(i32 %v1_10005104)
  %v0_1000510c = load i32, i32* @r17, align 4
  %v1_1000510c = sub i32 0, %v0_1000510c
  store i32 268456216, i32* @lr, align 4
  %v2_10005114 = call i32 @function_100084ec(i32 %v1_1000510c, i32 9)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000511c = load i32, i32* @global_var_1001b458.59, align 4
  %v3_10005120 = icmp eq i32 %v3_1000511c, 0
  br i1 %v3_10005120, label %dec_label_pc_10005128, label %dec_label_pc_100051cc

dec_label_pc_10005128:                            ; preds = %dec_label_pc_100050f0, %dec_label_pc_100051cc
  %v0_1000512c = call i32 @function_10009960()
  br label %dec_label_pc_10005130

dec_label_pc_10005130:                            ; preds = %dec_label_pc_10005088, %dec_label_pc_10005128
  store i32 268456248, i32* @lr, align 4
  %v2_10005134 = call i32 @function_10007c8c(i8* %v1_10005134)
  %v3_10005134 = trunc i32 %v2_10005134 to i8
  %v7_10005138 = sext i8 %v3_10005134 to i16
  store i16 %v7_10005138, i16* %stack_var_-1624, align 2
  store i32 268456256, i32* @lr, align 4
  %v2_1000513c = call i32 @function_10007f90(i32 %v2_10005134)
  store i32 %v2_1000513c, i32* @global_var_1001b448.12, align 4
  %v0_10005148 = load i32, i32* @r31, align 4
  %v1_10005148 = add i32 %v0_10005148, -19420
  %v2_10005148 = inttoptr i32 %v1_10005148 to i32*
  %v3_10005148 = load i32, i32* %v2_10005148, align 4
  store i32 268456284, i32* @lr, align 4
  %v4_10005158 = call i32 @function_10009000(i32 %v3_10005148, i32 ptrtoint (i32* @global_var_1000abd4.83 to i32), i32 4, i32 16384)
  %v0_1000515c = load i32, i32* @r31, align 4
  %v1_1000515c = add i32 %v0_1000515c, -19420
  %v2_1000515c = inttoptr i32 %v1_1000515c to i32*
  %v3_1000515c = load i32, i32* %v2_1000515c, align 4
  store i32 268456304, i32* @lr, align 4
  %v4_1000516c = call i32 @function_10009000(i32 %v3_1000515c, i32 %v2_10004bc4, i32 1, i32 16384)
  %v3_10005170 = load i16, i16* %stack_var_-1624, align 2
  %v4_10005174 = icmp eq i16 %v3_10005170, 0
  br i1 %v4_10005174, label %dec_label_pc_10004da8, label %dec_label_pc_1000517c

dec_label_pc_1000517c:                            ; preds = %dec_label_pc_10005130
  %v4_10005170 = sext i16 %v3_10005170 to i32
  %v0_1000517c = load i32, i32* @r31, align 4
  %v1_1000517c = add i32 %v0_1000517c, -19420
  %v2_1000517c = inttoptr i32 %v1_1000517c to i32*
  %v3_1000517c = load i32, i32* %v2_1000517c, align 4
  store i32 268456332, i32* @lr, align 4
  %v5_10005188 = call i32 @function_10009000(i32 %v3_1000517c, i32 %v2_10004ae8, i32 %v4_10005170, i32 16384)
  br label %dec_label_pc_10004da8

dec_label_pc_10005190:                            ; preds = %dec_label_pc_100051d8, %dec_label_pc_10004f9c
  %v0_10005190 = load i32, i32* @r23, align 4
  %v1_10005190 = inttoptr i32 %v0_10005190 to i32*
  %v2_10005190 = load i32, i32* %v1_10005190, align 4
  %v3_10005194 = icmp eq i32 %v2_10005190, 11
  br i1 %v3_10005194, label %dec_label_pc_10004da8, label %dec_label_pc_1000519c

dec_label_pc_1000519c:                            ; preds = %dec_label_pc_10005190
  %v3_1000519c = icmp eq i32 %v2_10005190, 4
  br i1 %v3_1000519c, label %dec_label_pc_10004da8, label %dec_label_pc_100051a4

dec_label_pc_100051a4:                            ; preds = %dec_label_pc_100051f8, %dec_label_pc_1000519c, %dec_label_pc_10004fc8
  %v3_100051a4 = load i32, i32* @global_var_1001b424.75, align 4
  %v3_100051a8 = icmp eq i32 %v3_100051a4, -1
  br i1 %v3_100051a8, label %dec_label_pc_100051b4, label %dec_label_pc_100051b0

dec_label_pc_100051b0:                            ; preds = %dec_label_pc_100051a4
  store i32 ptrtoint (i32* @global_var_100051b4.84 to i32), i32* @lr, align 4
  %v0_100051b0 = call i32 @function_100083cc()
  br label %dec_label_pc_100051b4

dec_label_pc_100051b4:                            ; preds = %dec_label_pc_100051a4, %dec_label_pc_100051b0
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 -1, i32* @global_var_1001b424.75, align 4
  store i32 268456392, i32* @lr, align 4
  %v1_100051c4 = call i32 @function_100099e4(i32 1)
  br label %dec_label_pc_10004da8

dec_label_pc_100051cc:                            ; preds = %dec_label_pc_100050f0
  store i32 268456404, i32* @lr, align 4
  %v2_100051d0 = call i32 @function_100084ec(i32 %v3_1000511c, i32 9)
  br label %dec_label_pc_10005128

dec_label_pc_100051d8:                            ; preds = %dec_label_pc_10004fdc
  %v0_100051d8 = load i32, i32* @r31, align 4
  %v1_100051d8 = load i32, i32* @r23, align 4
  %v2_100051d8 = inttoptr i32 %v1_100051d8 to i32*
  store i32 %v0_100051d8, i32* %v2_100051d8, align 4
  store i32 %v2_100051dc, i32* @r31, align 4
  %v3_100051e8 = load i32, i32* @global_var_1001b424.75, align 4
  store i32 268456432, i32* @lr, align 4
  %v5_100051ec = call i32 @function_10008f88(i32 %v3_100051e8, i32 %v2_100051dc, i32 %v4_10004fd0, i32 16386)
  %v3_100051f0 = icmp eq i32 %v5_100051ec, -1
  br i1 %v3_100051f0, label %dec_label_pc_10005190, label %dec_label_pc_100051f8

dec_label_pc_100051f8:                            ; preds = %dec_label_pc_100051d8
  %v3_100051f8 = icmp eq i32 %v5_100051ec, 0
  br i1 %v3_100051f8, label %dec_label_pc_100051a4, label %dec_label_pc_10005200

dec_label_pc_10005200:                            ; preds = %dec_label_pc_100051f8
  %v3_10005200 = load i32, i32* @global_var_1001b424.75, align 4
  store i32 268456468, i32* @lr, align 4
  %v4_10005210 = call i32 @function_10008f88(i32 %v3_10005200, i32 %v2_10004bc4, i32 2, i32 16384)
  %v3_10005214 = load i32, i32* @global_var_1001b424.75, align 4
  %v3_10005218 = load i16, i16* %stack_var_-1624, align 2
  %v4_10005218 = sext i16 %v3_10005218 to i32
  store i32 268456488, i32* @lr, align 4
  %v5_10005224 = call i32 @function_10008f88(i32 %v3_10005214, i32 %v2_100051dc, i32 %v4_10005218, i32 16384)
  %v3_10005228 = load i16, i16* %stack_var_-1624, align 2
  %v4_1000522c = icmp eq i16 %v3_10005228, 0
  br i1 %v4_1000522c, label %dec_label_pc_10004da8, label %dec_label_pc_10005234

dec_label_pc_10005234:                            ; preds = %dec_label_pc_10005200
  %v4_10005228 = sext i16 %v3_10005228 to i32
  store i32 268456508, i32* @lr, align 4
  %v3_10005238 = call i32 @function_10000384(i32 %v2_100051dc, i32 %v4_10005228)
  br label %dec_label_pc_10004da8

dec_label_pc_10005240:                            ; preds = %dec_label_pc_10004fd0
  %v3_10005240 = load i32, i32* @global_var_1001b424.75, align 4
  store i32 268456532, i32* @lr, align 4
  %v4_10005250 = call i32 @function_10008f88(i32 %v3_10005240, i32 %v2_10004bc4, i32 2, i32 16384)
  br label %dec_label_pc_10004da8

; uselistorder directives
  uselistorder i16 %v3_10005228, { 1, 0 }
  uselistorder i16 %v3_10005170, { 1, 0 }
  uselistorder i32 %v3_10005004, { 1, 0, 2 }
  uselistorder i32 %v1_10004f94, { 1, 0 }
  uselistorder i32 %v3_10004f70, { 0, 2, 5, 3, 1, 4 }
  uselistorder i32 %v1_10004ee4, { 2, 1, 0 }
  uselistorder i32 %v2_10004eac, { 1, 0, 2 }
  uselistorder i32 %v0_10004e9c, { 2, 0, 1 }
  uselistorder i32 %v2_10004f58, { 1, 0 }
  uselistorder i32 %v1_10004ddc, { 1, 0 }
  uselistorder i32 %v1_10004dd8, { 1, 0 }
  uselistorder i32 %v1_10004dc0, { 1, 0 }
  uselistorder i32 %v1_10004dbc, { 1, 0 }
  uselistorder i32 %v2_100051dc, { 1, 2, 0, 3 }
  uselistorder i32 %v2_10004da4, { 1, 0, 2 }
  uselistorder i32 %v2_10004bc4, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v1_10004b60, { 1, 0 }
  uselistorder i32 %v2_10004ab8, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v2_10004a84, { 1, 2, 0 }
  uselistorder i32 %v0_100049c8, { 2, 3, 0, 1 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-1552, { 1, 0, 2 }
  uselistorder i16* %stack_var_-1624, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-1620, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 25, 26, 16, 17, 18, 23, 24, 19, 20, 21, 22, 27 }
  uselistorder i32* %r18.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r16.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r15.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 10, 11, 12, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder i32* %ctr.global-to-local, { 0, 1, 9, 10, 2, 3, 4, 7, 8, 5, 6 }
  uselistorder i8* bitcast (i16* @global_var_1001b45c.76 to i8*), { 3, 2, 1, 0 }
  uselistorder i32* @global_var_1001b424.75, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11, 12, 14, 13, 15, 16 }
  uselistorder i32 (i32)* @function_100049b8, { 1, 0 }
  uselistorder i32 (i32)* @function_10004400, { 1, 0 }
  uselistorder i32 (i32)* @function_1000068c, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_100087e4, { 1, 0 }
  uselistorder i32 ()* @function_10005318, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 (i32)* @function_100047cc, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_10009160, { 1, 0 }
  uselistorder i32 (i32)* @function_10007780, { 18, 17, 16, 15, 14, 13, 12, 11, 10, 4, 3, 2, 1, 0, 9, 8, 7, 6, 5 }
  uselistorder i32 (i32)* @function_1000780c, { 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_100051b4, { 1, 0 }
  uselistorder label %dec_label_pc_10005130, { 1, 0 }
  uselistorder label %dec_label_pc_10005128, { 1, 0 }
  uselistorder label %dec_label_pc_10005050, { 1, 0 }
  uselistorder label %dec_label_pc_10004f34, { 1, 0 }
  uselistorder label %dec_label_pc_10004ec4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10004e60, { 1, 0 }
  uselistorder label %dec_label_pc_10004e1c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004e0c, { 1, 0 }
  uselistorder label %dec_label_pc_10004dd4.dec_label_pc_10004dd4_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10004db8.dec_label_pc_10004db8_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10004da8, { 7, 8, 0, 9, 1, 2, 10, 3, 11, 12, 4, 5, 13, 6, 14 }
  uselistorder label %dec_label_pc_10004bb4, { 2, 0, 1 }
}

define i32 @function_10005258() local_unnamed_addr {
dec_label_pc_10005258:
  %v3_10005260 = load i32, i32* @global_var_1001b4dc.85, align 4
  %v3_10005268 = load i32, i32* @global_var_1001b4d0.86, align 4
  %v1_10005270 = udiv i32 %v3_10005260, 524288
  %v3_10005274 = load i32, i32* @global_var_1001b4d8.87, align 4
  %v1_10005278 = mul i32 %v3_10005268, 2048
  %v2_1000527c = xor i32 %v1_10005270, %v3_10005260
  %v2_10005280 = xor i32 %v1_10005278, %v3_10005268
  %v3_10005284 = load i32, i32* @global_var_1001b4d4.88, align 4
  %v2_10005288 = xor i32 %v2_1000527c, %v2_10005280
  %v1_1000528c = udiv i32 %v2_10005280, 256
  %v2_10005290 = xor i32 %v2_10005288, %v1_1000528c
  store i32 %v3_10005284, i32* @global_var_1001b4d0.86, align 4
  store i32 %v3_10005274, i32* @global_var_1001b4d4.88, align 4
  store i32 %v3_10005260, i32* @global_var_1001b4d8.87, align 4
  store i32 %v2_10005290, i32* @global_var_1001b4dc.85, align 4
  ret i32 %v2_10005290

; uselistorder directives
  uselistorder i32 %v2_10005290, { 1, 0 }
  uselistorder i32 %v3_10005268, { 1, 0 }
  uselistorder i32 %v3_10005260, { 2, 1, 0 }
}

define i32 @function_100052a8(i32 %arg1) local_unnamed_addr {
dec_label_pc_100052a8:
  store i32 268456648, i32* @lr, align 4
  %v0_100052c4 = call i32 @function_1000879c()
  store i32 %v0_100052c4, i32* @global_var_1001b4d0.86, align 4
  store i32 268456660, i32* @lr, align 4
  %v0_100052d0 = call i32 @function_1000845c()
  store i32 268456668, i32* @lr, align 4
  %v0_100052d8 = call i32 @function_100084a4()
  %v2_100052dc = xor i32 %v0_100052d0, %v0_100052d8
  store i32 %v2_100052dc, i32* @global_var_1001b4d4.88, align 4
  store i32 268456680, i32* @lr, align 4
  %v1_100052e4 = call i32 @function_10008aac(i32 %v0_100052d8)
  %v3_100052e8 = load i32, i32* @global_var_1001b4d4.88, align 4
  %v2_100052f8 = xor i32 %v3_100052e8, %v1_100052e4
  store i32 %v2_100052f8, i32* @global_var_1001b4dc.85, align 4
  store i32 %v1_100052e4, i32* @global_var_1001b4d8.87, align 4
  ret i32 %v1_100052e4

; uselistorder directives
  uselistorder i32 %v1_100052e4, { 2, 1, 0 }
  uselistorder i32 %v0_100052d8, { 1, 0 }
}

define i32 @function_10005318() local_unnamed_addr {
dec_label_pc_10005318:
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i8*, align 4
  %v0_10005318 = load i32, i32* @r4, align 4
  %v3_10005318 = icmp eq i32 %v0_10005318, 0
  br i1 %v3_10005318, label %dec_label_pc_10005410, label %dec_label_pc_1000534c

dec_label_pc_1000534c:                            ; preds = %dec_label_pc_10005318
  %v0_10005350 = load i32, i32* @r3, align 4
  store i32 %v0_10005350, i32* %r31.global-to-local, align 4
  %v2_10005360 = add i32 %v0_10005350, %v0_10005318
  store i32 %v2_10005360, i32* %r26.global-to-local, align 4
  store i8* inttoptr (i32 1731289442 to i8*), i8** %stack_var_-72, align 4
  %v1_100053e8 = bitcast i8** %stack_var_-72 to i8*
  br label %dec_label_pc_100053a8

dec_label_pc_100053a8:                            ; preds = %dec_label_pc_100053a8, %dec_label_pc_1000534c
  %v3_100053a8 = load i32, i32* @global_var_1001b4dc.85, align 4
  %v3_100053b0 = load i32, i32* @global_var_1001b4d0.86, align 4
  %v1_100053b4 = udiv i32 %v3_100053a8, 524288
  %v3_100053b8 = load i32, i32* @global_var_1001b4d8.87, align 4
  %v1_100053bc = mul i32 %v3_100053b0, 2048
  %v2_100053c0 = xor i32 %v1_100053b4, %v3_100053a8
  %v2_100053c4 = xor i32 %v1_100053bc, %v3_100053b0
  %v3_100053c8 = load i32, i32* @global_var_1001b4d4.88, align 4
  %v2_100053cc = xor i32 %v2_100053c0, %v2_100053c4
  %v1_100053d0 = udiv i32 %v2_100053c4, 256
  %v2_100053d4 = xor i32 %v2_100053cc, %v1_100053d0
  store i32 %v2_100053d4, i32* %r29.global-to-local, align 4
  store i32 %v3_100053c8, i32* @global_var_1001b4d0.86, align 4
  store i32 %v2_100053d4, i32* @global_var_1001b4dc.85, align 4
  store i32 %v3_100053b8, i32* @global_var_1001b4d4.88, align 4
  store i32 %v3_100053a8, i32* @global_var_1001b4d8.87, align 4
  store i32 268456940, i32* @lr, align 4
  %v2_100053e8 = call i32 @function_10007c8c(i8* %v1_100053e8)
  %v0_100053ec = load i32, i32* %r29.global-to-local, align 4
  %v2_100053ec = urem i32 %v0_100053ec, %v2_100053e8
  store i32 %v2_100053ec, i32* %r29.global-to-local, align 4
  %v0_100053f8 = load i32, i32* @r1, align 4
  %v2_100053f8 = add i32 %v0_100053f8, %v2_100053ec
  %v1_100053fc = add i32 %v2_100053f8, 8
  %v2_100053fc = inttoptr i32 %v1_100053fc to i8*
  %v3_100053fc = load i8, i8* %v2_100053fc, align 1
  %v2_10005400 = load i32, i32* %r31.global-to-local, align 4
  %v3_10005400 = inttoptr i32 %v2_10005400 to i8*
  store i8 %v3_100053fc, i8* %v3_10005400, align 1
  %v0_10005404 = load i32, i32* %r31.global-to-local, align 4
  %v1_10005404 = add i32 %v0_10005404, 1
  store i32 %v1_10005404, i32* %r31.global-to-local, align 4
  %v0_10005408 = load i32, i32* %r26.global-to-local, align 4
  %v4_10005408 = icmp eq i32 %v0_10005408, %v1_10005404
  br i1 %v4_10005408, label %dec_label_pc_10005410, label %dec_label_pc_100053a8

dec_label_pc_10005410:                            ; preds = %dec_label_pc_100053a8, %dec_label_pc_10005318
  %.0 = phi i32 [ undef, %dec_label_pc_10005318 ], [ %v2_100053e8, %dec_label_pc_100053a8 ]
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v3_100053b0, { 1, 0 }
  uselistorder i32 %v3_100053a8, { 2, 1, 0 }
}

define i32 @function_10005440(i32 %arg1) local_unnamed_addr {
dec_label_pc_10005440:
  store i32 %arg1, i32* @r31, align 4
  %v3_1000544c = icmp eq i32 %arg1, 0
  br i1 %v3_1000544c, label %dec_label_pc_10005470, label %dec_label_pc_10005458

dec_label_pc_10005458:                            ; preds = %dec_label_pc_10005440
  %v1_10005458 = add i32 %arg1, 4
  %v2_10005458 = inttoptr i32 %v1_10005458 to i32*
  %v3_10005458 = load i32, i32* %v2_10005458, align 4
  store i32 %v3_10005458, i32* @r3, align 4
  %v3_1000545c = icmp eq i32 %v3_10005458, 0
  br i1 %v3_1000545c, label %dec_label_pc_10005468, label %dec_label_pc_10005464

dec_label_pc_10005464:                            ; preds = %dec_label_pc_10005458
  store i32 268457064, i32* @lr, align 4
  %v0_10005464 = call i32 @function_10009480()
  %v0_10005468.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10005468

dec_label_pc_10005468:                            ; preds = %dec_label_pc_10005458, %dec_label_pc_10005464
  %v0_10005468 = phi i32 [ %arg1, %dec_label_pc_10005458 ], [ %v0_10005468.pre, %dec_label_pc_10005464 ]
  store i32 %v0_10005468, i32* @r3, align 4
  store i32 268457072, i32* @lr, align 4
  %v0_1000546c = call i32 @function_10009480()
  br label %dec_label_pc_10005470

dec_label_pc_10005470:                            ; preds = %dec_label_pc_10005440, %dec_label_pc_10005468
  %v0_10005480 = phi i32 [ 0, %dec_label_pc_10005440 ], [ %v0_1000546c, %dec_label_pc_10005468 ]
  ret i32 %v0_10005480

; uselistorder directives
  uselistorder i32 %arg1, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10005470, { 1, 0 }
  uselistorder label %dec_label_pc_10005468, { 1, 0 }
}

define i32 @function_10005484(i32 %arg1) local_unnamed_addr {
dec_label_pc_10005484:
  %cr4_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp60 = call i16 @__decompiler_undefined_function_2()
  %stack_var_-4308 = alloca i32, align 4
  %stack_var_-4312 = alloca i32, align 4
  %stack_var_-2096 = alloca i32, align 4
  %stack_var_-2108 = alloca i16, align 2
  %stack_var_-4284 = alloca i32, align 4
  %stack_var_-4300 = alloca i32, align 4
  %stack_var_-4143 = alloca i32, align 4
  %stack_var_-4144 = alloca i32, align 4
  %stack_var_-4156 = alloca i32, align 4
  %v0_10005488 = load i32, i32* @lr, align 4
  store i32 %v0_10005488, i32* %r0.global-to-local, align 4
  %v0_1000548c = call i32 @__asm_mfcr()
  %v0_10005494 = load i32, i32* @r29, align 4
  store i32 %v0_1000548c, i32* @r29, align 4
  %v2_100054a8 = ptrtoint i32* %stack_var_-4156 to i32
  %v2_100054b0 = ptrtoint i32* %stack_var_-4144 to i32
  store i32 %v2_100054b0, i32* %r26.global-to-local, align 4
  %v0_100054b4 = load i32, i32* %r0.global-to-local, align 4
  %v0_100054d4 = load i32, i32* @r28, align 4
  store i32 268457188, i32* @lr, align 4
  %v2_100054e0 = call i32 @function_10009410(i32 1, i32 8)
  store i32 %v2_100054e0, i32* %r25.global-to-local, align 4
  %v0_100054e8 = load i32, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100054f0.96 to i32), i32* @lr, align 4
  %v1_100054ec = inttoptr i32 %v0_100054e8 to i8*
  %v2_100054ec = call i32 @function_10007c8c(i8* %v1_100054ec)
  %v2_100054f0 = ptrtoint i32* %stack_var_-4143 to i32
  store i32 %v2_100054f0, i32* %r10.global-to-local, align 4
  %v1_100054f4 = add i32 %v2_100054ec, 1
  store i32 %v2_100054b0, i32* %r7.global-to-local, align 4
  %v1_10005500 = add i32 %v2_100054ec, 2
  store i32 %v1_10005500, i32* %ctr.global-to-local, align 4
  %tmp94 = icmp sgt i32 %v1_100054f4, -1
  br i1 %tmp94, label %dec_label_pc_10005528.preheader, label %dec_label_pc_10005528.preheader.thread

dec_label_pc_10005528.preheader:                  ; preds = %dec_label_pc_10005484
  %v3_100054fc = icmp eq i32 %v1_100054f4, 0
  %v1_1000552813 = or i32 %v2_100054f0, 1
  store i32 %v1_1000552813, i32* %r11.global-to-local, align 4
  store i32 %v1_100054f4, i32* %ctr.global-to-local, align 4
  br i1 %v3_100054fc, label %dec_label_pc_10005558, label %dec_label_pc_10005530.lr.ph

dec_label_pc_10005530.lr.ph:                      ; preds = %dec_label_pc_10005528.preheader
  %v0_10005530.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10005530

dec_label_pc_10005514:                            ; preds = %dec_label_pc_10005540
  %v3_10005514 = inttoptr i32 %v2_10005514 to i8*
  store i8 %v2_10005530, i8* %v3_10005514, align 1
  %v0_10005518 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005518 = urem i32 %v0_10005518, 256
  %v0_1000551c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000551c = add i32 %v0_1000551c, 1
  store i32 %v1_1000551c, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10005520

dec_label_pc_10005520:                            ; preds = %dec_label_pc_10005548, %dec_label_pc_10005514
  %v0_10005524 = phi i32 [ %v0_10005524.pre, %dec_label_pc_10005548 ], [ %v1_1000551c, %dec_label_pc_10005514 ]
  %v0_1000554020 = phi i32 [ 0, %dec_label_pc_10005548 ], [ %v1_10005518, %dec_label_pc_10005514 ]
  %v0_10005520 = load i32, i32* @r29, align 4
  %v1_10005520 = add i32 %v0_10005520, 1
  store i32 %v1_10005520, i32* @r29, align 4
  store i32 %v0_10005524, i32* %r10.global-to-local, align 4
  %v1_10005528 = add i32 %v0_10005524, 1
  store i32 %v1_10005528, i32* %r11.global-to-local, align 4
  %v0_1000552c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000552c = add i32 %v0_1000552c, -1
  store i32 %v1_1000552c, i32* %ctr.global-to-local, align 4
  %v2_1000552c = icmp eq i32 %v1_1000552c, 0
  br i1 %v2_1000552c, label %dec_label_pc_10005558, label %dec_label_pc_10005530

dec_label_pc_10005530:                            ; preds = %dec_label_pc_10005530.lr.ph, %dec_label_pc_10005520
  %v2_10005514 = phi i32 [ %v2_100054f0, %dec_label_pc_10005530.lr.ph ], [ %v0_10005524, %dec_label_pc_10005520 ]
  %v0_10005548 = phi i32 [ 0, %dec_label_pc_10005530.lr.ph ], [ %v0_1000554020, %dec_label_pc_10005520 ]
  %v0_10005530 = phi i32 [ %v0_10005530.pre, %dec_label_pc_10005530.lr.ph ], [ %v1_10005520, %dec_label_pc_10005520 ]
  %v1_10005530 = inttoptr i32 %v0_10005530 to i8*
  %v2_10005530 = load i8, i8* %v1_10005530, align 1
  %v3_10005530 = zext i8 %v2_10005530 to i32
  store i32 %v3_10005530, i32* %r0.global-to-local, align 4
  %v3_10005534 = icmp eq i8 %v2_10005530, 46
  br i1 %v3_10005534, label %dec_label_pc_10005548, label %dec_label_pc_10005540

dec_label_pc_10005540:                            ; preds = %dec_label_pc_10005530
  %v3_10005538 = icmp eq i8 %v2_10005530, 0
  %v1_10005540 = add nsw i32 %v0_10005548, 1
  store i32 %v1_10005540, i32* %r9.global-to-local, align 4
  br i1 %v3_10005538, label %dec_label_pc_10005548, label %dec_label_pc_10005514

dec_label_pc_10005548:                            ; preds = %dec_label_pc_10005540, %dec_label_pc_10005530
  %v1_10005548 = trunc i32 %v0_10005548 to i8
  %v2_10005548 = load i32, i32* %r7.global-to-local, align 4
  %v3_10005548 = inttoptr i32 %v2_10005548 to i8*
  store i8 %v1_10005548, i8* %v3_10005548, align 1
  %v0_1000554c = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_1000554c, i32* %r7.global-to-local, align 4
  %v0_10005524.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10005520

dec_label_pc_10005558:                            ; preds = %dec_label_pc_10005520, %dec_label_pc_10005528.preheader.thread, %dec_label_pc_10005528.preheader
  %v2_10005560 = phi i32 [ %v2_100054f0, %dec_label_pc_10005528.preheader ], [ %v2_100054f0, %dec_label_pc_10005528.preheader.thread ], [ %v0_10005524, %dec_label_pc_10005520 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10005560 = inttoptr i32 %v2_10005560 to i8*
  store i8 0, i8* %v3_10005560, align 1
  %v2_10005564 = ptrtoint i32* %stack_var_-4300 to i32
  store i32 -1, i32* @r30, align 4
  store i32 1, i32* %r27.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10005574.97 to i32), i32* @lr, align 4
  %v1_10005570 = bitcast i32* %stack_var_-4144 to i8*
  %v2_10005570 = call i32 @function_10007c8c(i8* %v1_10005570)
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10005578 = load i32, i32* %r26.global-to-local, align 4
  %v2_10005578 = add i32 %v0_10005578, %v2_10005570
  store i32 %v2_10005578, i32* %r29.global-to-local, align 4
  %v0_10005584 = load i32, i32* @r30, align 4
  %v3_10005584 = icmp eq i32 %v0_10005584, -1
  store i1 %v3_10005584, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %stack_var_-4300, align 4
  %v2_1000558c = ptrtoint i32* %stack_var_-4284 to i32
  store i32 %v2_1000558c, i32* @r31, align 4
  %v2_10005594 = ptrtoint i16* %stack_var_-2108 to i32
  store i32 %v2_10005594, i32* %r19.global-to-local, align 4
  store i32 268457376, i32* @lr, align 4
  %v2_1000559c = call i32 @function_10007c8c(i8* %v1_10005570)
  %v1_100055a0 = add i32 %v2_1000559c, 17
  store i32 %v1_100055a0, i32* %r23.global-to-local, align 4
  %v0_100055a4 = call i32 @function_10005258()
  %v1_100055a4 = sext i32 %v0_100055a4 to i64
  store i32 16, i32* @r4, align 4
  %v5_100055b8 = mul nuw nsw i64 %v1_100055a4, 2147516417
  store i32 %v2_10005564, i32* @r3, align 4
  %v2_100055c0 = ptrtoint i32* %stack_var_-2096 to i32
  store i32 %v2_100055c0, i32* %r20.global-to-local, align 4
  %v1_100055c42 = udiv i64 %v5_100055b8, 140737488355328
  %v1_100055c4 = trunc i64 %v1_100055c42 to i32
  store i32 %v1_100055c4, i32* %r0.global-to-local, align 4
  %v2_100055c8 = add i32 %v1_100055c4, %v0_100055a4
  store i32 %v2_100055c8, i32* %r9.global-to-local, align 4
  %v1_100055cc = urem i32 %v2_100055c8, 65536
  store i32 %v1_100055cc, i32* %r22.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100055d4.99 to i32), i32* @lr, align 4
  %v0_100055d0 = call i32 @function_10007d34()
  store i32 2, i32* %stack_var_-4300, align 4
  store i32 1, i32* %r10.global-to-local, align 4
  store i32 134744072, i32* %r11.global-to-local, align 4
  %v0_100055e8 = load i32, i32* %r29.global-to-local, align 4
  store i32 53, i32* %r9.global-to-local, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v0_10005600 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10005600, i32* %stack_var_-4156, align 4
  %v3_10005608 = add i32 %v0_100055e8, 3
  %v4_10005608 = inttoptr i32 %v3_10005608 to i16*
  store i16 1, i16* %v4_10005608, align 2
  %v0_1000560c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000560c = trunc i32 %v0_1000560c to i16
  %v2_1000560c = load i32, i32* %r29.global-to-local, align 4
  %v3_1000560c = add i32 %v2_1000560c, 1
  %v4_1000560c = inttoptr i32 %v3_1000560c to i16*
  store i16 %v1_1000560c, i16* %v4_1000560c, align 2
  %v2_100056b0 = ptrtoint i32* %stack_var_-4312 to i32
  %v2_100056e4 = ptrtoint i32* %stack_var_-4308 to i32
  %v1_100057d4 = bitcast i32* %stack_var_-2096 to i8*
  %v4_100057ec = zext i16 %tmp60 to i32
  %v3_100057f0 = icmp eq i16 %tmp60, 0
  br label %dec_label_pc_10005610

dec_label_pc_10005610:                            ; preds = %dec_label_pc_10005750, %dec_label_pc_10005558
  %v0_10005610 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10005610, label %dec_label_pc_1000561c, label %dec_label_pc_10005614

dec_label_pc_10005614:                            ; preds = %dec_label_pc_10005610
  store i32 ptrtoint ([3 x i8]* @global_var_1000561c.100 to i32), i32* @lr, align 4
  %v0_10005618 = call i32 @function_100083cc()
  br label %dec_label_pc_1000561c

dec_label_pc_1000561c:                            ; preds = %dec_label_pc_10005610, %dec_label_pc_10005614
  store i32 268457516, i32* @lr, align 4
  %v3_10005628 = call i32 @function_100090b4(i32 2, i32 2, i32 0)
  store i32 %v3_10005628, i32* @r3, align 4
  %v3_1000562c = icmp eq i32 %v3_10005628, -1
  store i1 %v3_1000562c, i1* %cr4_eq.global-to-local, align 1
  store i32 %v3_10005628, i32* @r30, align 4
  br i1 %v3_1000562c, label %dec_label_pc_10005758, label %dec_label_pc_10005638

dec_label_pc_10005638:                            ; preds = %dec_label_pc_1000561c
  store i32 268457540, i32* @lr, align 4
  %v0_10005640 = call i32 @function_10008eb4()
  %v3_10005644 = icmp eq i32 %v0_10005640, -1
  br i1 %v3_10005644, label %dec_label_pc_10005758, label %dec_label_pc_1000564c

dec_label_pc_1000564c:                            ; preds = %dec_label_pc_10005638
  %v0_1000564c = load i32, i32* @r30, align 4
  %v0_10005654 = load i32, i32* %r23.global-to-local, align 4
  store i32 268457568, i32* @lr, align 4
  %v4_1000565c = call i32 @function_10009000(i32 %v0_1000564c, i32 %v2_100054a8, i32 %v0_10005654, i32 16384)
  %v3_10005660 = icmp eq i32 %v4_1000565c, -1
  br i1 %v3_10005660, label %dec_label_pc_10005758, label %dec_label_pc_10005668

dec_label_pc_10005668:                            ; preds = %dec_label_pc_1000564c
  %v0_10005668 = load i32, i32* @r30, align 4
  store i32 %v0_10005668, i32* @r4, align 4
  store i32 268457596, i32* @lr, align 4
  %v2_10005678 = call i32 @function_100082e4(i32 3)
  %v0_1000567c = load i32, i32* @r30, align 4
  store i32 %v0_1000567c, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_10005690.101 to i32), i32* @lr, align 4
  %v2_1000568c = call i32 @function_100082e4(i32 4)
  store i32 32, i32* %r0.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_100056a0139 = load i32, i32* @r31, align 4
  %v4_100056a0141 = inttoptr i32 %v2_100056a0139 to i32*
  store i32 0, i32* %v4_100056a0141, align 4
  %v0_100056a4142 = load i32, i32* %r9.global-to-local, align 4
  %v1_100056a4143 = add i32 %v0_100056a4142, 4
  store i32 %v1_100056a4143, i32* %r9.global-to-local, align 4
  %v0_100056a8144 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100056a8145 = add i32 %v0_100056a8144, -1
  store i32 %v1_100056a8145, i32* %ctr.global-to-local, align 4
  %v2_100056a8146 = icmp eq i32 %v1_100056a8145, 0
  br i1 %v2_100056a8146, label %dec_label_pc_100056ac, label %dec_label_pc_100056a0.dec_label_pc_100056a0_crit_edge

dec_label_pc_100056a0.dec_label_pc_100056a0_crit_edge: ; preds = %dec_label_pc_10005668, %dec_label_pc_100056a0.dec_label_pc_100056a0_crit_edge
  %v1_100056a4147 = phi i32 [ %v1_100056a4, %dec_label_pc_100056a0.dec_label_pc_100056a0_crit_edge ], [ %v1_100056a4143, %dec_label_pc_10005668 ]
  %v0_100056a0.pre = load i32, i32* %r11.global-to-local, align 4
  %v2_100056a0 = load i32, i32* @r31, align 4
  %v3_100056a0 = add i32 %v2_100056a0, %v1_100056a4147
  %v4_100056a0 = inttoptr i32 %v3_100056a0 to i32*
  store i32 %v0_100056a0.pre, i32* %v4_100056a0, align 4
  %v0_100056a4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100056a4 = add i32 %v0_100056a4, 4
  store i32 %v1_100056a4, i32* %r9.global-to-local, align 4
  %v0_100056a8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100056a8 = add i32 %v0_100056a8, -1
  store i32 %v1_100056a8, i32* %ctr.global-to-local, align 4
  %v2_100056a8 = icmp eq i32 %v1_100056a8, 0
  br i1 %v2_100056a8, label %dec_label_pc_100056ac, label %dec_label_pc_100056a0.dec_label_pc_100056a0_crit_edge

dec_label_pc_100056ac:                            ; preds = %dec_label_pc_100056a0.dec_label_pc_100056a0_crit_edge, %dec_label_pc_10005668
  %v0_100056ac = load i32, i32* @r30, align 4
  %v1_100056ac = call i32 @__asm_rlwinm(i32 %v0_100056ac, i32 29, i32 3, i32 29)
  store i32 %v1_100056ac, i32* %r9.global-to-local, align 4
  store i32 %v2_100056b0, i32* %r0.global-to-local, align 4
  %v2_100056b4 = add i32 %v1_100056ac, %v2_100056b0
  store i32 %v2_100056b4, i32* %r29.global-to-local, align 4
  %v0_100056b8 = load i32, i32* @r30, align 4
  %v1_100056b8 = urem i32 %v0_100056b8, 32
  store i32 %v1_100056b8, i32* %r28.global-to-local, align 4
  %v1_100056bc = add i32 %v2_100056b4, 28
  %v2_100056bc = inttoptr i32 %v1_100056bc to i32*
  %v3_100056bc = load i32, i32* %v2_100056bc, align 4
  %v3_100056c4 = shl i32 1, %v1_100056b8
  %v1_100056c8 = add i32 %v0_100056b8, 1
  %v2_100056cc = or i32 %v3_100056c4, %v3_100056bc
  store i32 %v2_100056cc, i32* %r9.global-to-local, align 4
  store i32 %v2_100056cc, i32* %v2_100056bc, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  store i32 %v2_100056e4, i32* %r7.global-to-local, align 4
  store i32 5, i32* %stack_var_-4308, align 4
  store i32 268457716, i32* @lr, align 4
  %v5_100056f0 = call i32 @function_10008694(i32 %v1_100056c8, i32 %v2_1000558c, i32 0, i32 0, i32 %v2_100056e4)
  %v3_100056f4 = icmp eq i32 %v5_100056f0, -1
  br i1 %v3_100056f4, label %dec_label_pc_10005768, label %dec_label_pc_100056fc

dec_label_pc_100056fc:                            ; preds = %dec_label_pc_100056ac
  %v3_100056fc = icmp eq i32 %v5_100056f0, 0
  br i1 %v3_100056fc, label %dec_label_pc_10005748, label %dec_label_pc_10005704

dec_label_pc_10005704:                            ; preds = %dec_label_pc_100056fc
  %v0_10005704 = load i32, i32* %r29.global-to-local, align 4
  %v1_10005704 = add i32 %v0_10005704, 28
  %v2_10005704 = inttoptr i32 %v1_10005704 to i32*
  %v3_10005704 = load i32, i32* %v2_10005704, align 4
  %v1_10005708 = load i32, i32* %r28.global-to-local, align 4
  %v2_10005708 = urem i32 %v1_10005708, 32
  %v3_10005708 = sub i32 0, %v1_10005708
  %v4_10005708 = urem i32 %v3_10005708, 32
  %v5_10005708 = shl i32 %v3_10005704, %v4_10005708
  %v6_10005708 = xor i32 %v4_10005708, 31
  %v7_10005708 = lshr i32 %v3_10005704, %v6_10005708
  %v8_10005708 = udiv i32 %v7_10005708, 2
  %v9_10005708 = or i32 %v8_10005708, %v5_10005708
  %v10_10005708 = and i32 %v1_10005708, 32
  %v11_10005708 = icmp ne i32 %v10_10005708, 0
  %v12_10005708 = lshr i32 -1, %v2_10005708
  %v13_10005708 = select i1 %v11_10005708, i32 0, i32 %v12_10005708
  %v14_10005708 = and i32 %v9_10005708, %v13_10005708
  %v15_10005708 = ashr i32 %v3_10005704, 31
  %v16_10005708 = sub i32 -1, %v13_10005708
  %v17_10005708 = and i32 %v15_10005708, %v16_10005708
  %v18_10005708 = or i32 %v14_10005708, %v17_10005708
  store i32 %v18_10005708, i32* %r0.global-to-local, align 4
  %v1_1000570c = urem i32 %v18_10005708, 2
  store i32 %v1_1000570c, i32* %r9.global-to-local, align 4
  %v3_1000570c = icmp eq i32 %v1_1000570c, 0
  br i1 %v3_1000570c, label %dec_label_pc_10005768, label %dec_label_pc_10005714

dec_label_pc_10005714:                            ; preds = %dec_label_pc_10005704
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_10005728 = load i32, i32* @r30, align 4
  store i32 268457776, i32* @lr, align 4
  %v6_1000572c = call i32 @function_10008fc0(i32 %v0_10005728, i32 %v2_10005594, i32 2048, i32 16384, i32 0, i32 0)
  store i32 %v6_1000572c, i32* %r29.global-to-local, align 4
  %v0_10005734 = load i32, i32* %r26.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000573c.102 to i32), i32* @lr, align 4
  %v1_10005738 = inttoptr i32 %v0_10005734 to i8*
  %v2_10005738 = call i32 @function_10007c8c(i8* %v1_10005738)
  %v1_1000573c = add i32 %v2_10005738, 17
  %v2_10005740 = icmp ult i32 %v6_1000572c, %v1_1000573c
  br i1 %v2_10005740, label %dec_label_pc_10005748, label %dec_label_pc_100057cc

dec_label_pc_10005748:                            ; preds = %dec_label_pc_100057cc, %dec_label_pc_10005714, %dec_label_pc_100057ec, %dec_label_pc_100056fc
  %v0_10005748 = load i32, i32* %r27.global-to-local, align 4
  %v3_10005748 = icmp eq i32 %v0_10005748, 5
  br i1 %v3_10005748, label %dec_label_pc_10005768, label %dec_label_pc_10005750

dec_label_pc_10005750:                            ; preds = %dec_label_pc_10005758, %dec_label_pc_10005748
  %v0_10005750 = phi i32 [ %v0_10005760, %dec_label_pc_10005758 ], [ %v0_10005748, %dec_label_pc_10005748 ]
  %v1_10005750 = add i32 %v0_10005750, 1
  store i32 %v1_10005750, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10005610

dec_label_pc_10005758:                            ; preds = %dec_label_pc_1000564c, %dec_label_pc_10005638, %dec_label_pc_1000561c
  store i32 268457824, i32* @lr, align 4
  %v1_1000575c = call i32 @function_100099e4(i32 1)
  %v0_10005760 = load i32, i32* %r27.global-to-local, align 4
  %v3_10005760 = icmp eq i32 %v0_10005760, 5
  br i1 %v3_10005760, label %dec_label_pc_10005768, label %dec_label_pc_10005750

dec_label_pc_10005768:                            ; preds = %dec_label_pc_10005758, %dec_label_pc_10005748, %dec_label_pc_10005704, %dec_label_pc_100056ac, %dec_label_pc_100057f8.backedge, %dec_label_pc_100057f8.preheader
  store i32 268457840, i32* @lr, align 4
  %v0_1000576c = call i32 @function_100083cc()
  %v0_10005770 = load i32, i32* %r25.global-to-local, align 4
  %v1_10005770 = inttoptr i32 %v0_10005770 to i8*
  %v2_10005770 = load i8, i8* %v1_10005770, align 1
  %v3_10005770 = zext i8 %v2_10005770 to i32
  store i32 %v3_10005770, i32* %r0.global-to-local, align 4
  %v3_10005774 = icmp eq i8 %v2_10005770, 0
  br i1 %v3_10005774, label %dec_label_pc_100058e4, label %dec_label_pc_1000577c

dec_label_pc_1000577c:                            ; preds = %dec_label_pc_10005768, %dec_label_pc_100058f4
  %v0_10005780 = phi i32 [ %v0_10005770, %dec_label_pc_10005768 ], [ 0, %dec_label_pc_100058f4 ]
  store i32 %v0_100054b4, i32* %r0.global-to-local, align 4
  %v1_10005794 = call %0 @__asm_mtcrf(i32 8, i32 %v0_1000548c)
  store i32 %v0_100054d4, i32* %r28.global-to-local, align 4
  store i32 %v0_10005494, i32* %r29.global-to-local, align 4
  ret i32 %v0_10005780

dec_label_pc_100057cc:                            ; preds = %dec_label_pc_10005714
  store i32 %v2_100055c0, i32* %r26.global-to-local, align 4
  store i32 268457944, i32* @lr, align 4
  %v2_100057d4 = call i32 @function_10007c8c(i8* %v1_100057d4)
  %v3_100057d8 = load i16, i16* %stack_var_-2108, align 2
  %v4_100057d8 = sext i16 %v3_100057d8 to i32
  store i32 %v4_100057d8, i32* %r0.global-to-local, align 4
  %v0_100057dc = load i32, i32* %r20.global-to-local, align 4
  %v1_100057e0 = load i32, i32* %r22.global-to-local, align 4
  %v4_100057e0 = icmp eq i32 %v4_100057d8, %v1_100057e0
  %v2_100057dc = add i32 %v2_100057d4, 5
  %v1_100057e4 = add i32 %v2_100057dc, %v0_100057dc
  br i1 %v4_100057e0, label %dec_label_pc_100057ec, label %dec_label_pc_10005748

dec_label_pc_100057ec:                            ; preds = %dec_label_pc_100057cc
  store i32 %v4_100057ec, i32* %r28.global-to-local, align 4
  br i1 %v3_100057f0, label %dec_label_pc_10005748, label %dec_label_pc_100057f8.preheader

dec_label_pc_100057f8.preheader:                  ; preds = %dec_label_pc_100057ec
  %v1_100057f88 = add nsw i32 %v4_100057ec, -1
  store i32 %v1_100057f88, i32* %r0.global-to-local, align 4
  %v1_100058009 = urem i32 %v1_100057f88, 65536
  store i32 %v1_100058009, i32* %r28.global-to-local, align 4
  store i32 65535, i32* %r9.global-to-local, align 4
  %v4_1000580811 = icmp eq i32 %v1_100058009, 65535
  br i1 %v4_1000580811, label %dec_label_pc_10005768, label %dec_label_pc_10005810

dec_label_pc_10005810:                            ; preds = %dec_label_pc_100057f8.preheader, %dec_label_pc_100057f8.backedge
  %v0_100057f849 = phi i32 [ %v1_10005800, %dec_label_pc_100057f8.backedge ], [ %v1_100058009, %dec_label_pc_100057f8.preheader ]
  %v0_1000586c = phi i32 [ %storemerge, %dec_label_pc_100057f8.backedge ], [ %v1_100057e4, %dec_label_pc_100057f8.preheader ]
  store i32 %v0_1000586c, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 1, i32* %r10.global-to-local, align 4
  %v1_1000581c110 = inttoptr i32 %v0_1000586c to i8*
  %v2_1000581c111 = load i8, i8* %v1_1000581c110, align 1
  %v3_1000581c112 = zext i8 %v2_1000581c111 to i32
  store i32 %v3_1000581c112, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  %v3_10005824113 = icmp eq i8 %v2_1000581c111, 0
  br i1 %v3_10005824113, label %dec_label_pc_10005868, label %dec_label_pc_10005834.preheader

dec_label_pc_10005834.preheader:                  ; preds = %dec_label_pc_10005810, %dec_label_pc_10005904
  %v2_1000581c119 = phi i8 [ %v2_1000581c, %dec_label_pc_10005904 ], [ %v2_1000581c111, %dec_label_pc_10005810 ]
  %v3_1000582c122.in = phi i8 [ %v2_1000581c, %dec_label_pc_10005904 ], [ %v2_1000581c111, %dec_label_pc_10005810 ]
  %v1_10005828121.in = phi i32 [ %v3_1000581c, %dec_label_pc_10005904 ], [ %v3_1000581c112, %dec_label_pc_10005810 ]
  %v1_10005820120 = phi i32 [ %v1_10005820, %dec_label_pc_10005904 ], [ 1, %dec_label_pc_10005810 ]
  %v0_1000581c118 = phi i32 [ %v1_10005908, %dec_label_pc_10005904 ], [ %v0_1000586c, %dec_label_pc_10005810 ]
  %v0_10005820117 = phi i32 [ %v0_1000582028, %dec_label_pc_10005904 ], [ 0, %dec_label_pc_10005810 ]
  %v0_10005868116 = phi i32 [ %v2_10005904, %dec_label_pc_10005904 ], [ 1, %dec_label_pc_10005810 ]
  br label %dec_label_pc_10005834

dec_label_pc_10005834:                            ; preds = %dec_label_pc_10005834.preheader, %dec_label_pc_10005838
  %v1_10005904 = phi i32 [ 0, %dec_label_pc_10005838 ], [ %v1_10005820120, %dec_label_pc_10005834.preheader ]
  %v0_10005844.in = phi i32 [ %v3_10005854, %dec_label_pc_10005838 ], [ %v1_10005828121.in, %dec_label_pc_10005834.preheader ]
  %v0_10005908 = phi i32 [ %v2_10005850, %dec_label_pc_10005838 ], [ %v0_1000581c118, %dec_label_pc_10005834.preheader ]
  %v0_10005834.in = phi i8 [ %v2_10005854, %dec_label_pc_10005838 ], [ %v3_1000582c122.in, %dec_label_pc_10005834.preheader ]
  %v1_10005834.in = phi i8 [ %v2_10005854, %dec_label_pc_10005838 ], [ %v2_1000581c119, %dec_label_pc_10005834.preheader ]
  %v0_1000582028 = phi i32 [ 1, %dec_label_pc_10005838 ], [ %v0_10005820117, %dec_label_pc_10005834.preheader ]
  %v0_10005834 = icmp eq i8 %v0_10005834.in, -65
  %v1_10005834 = icmp ult i8 %v1_10005834.in, -65
  %v2_10005834 = or i1 %v0_10005834, %v1_10005834
  br i1 %v2_10005834, label %dec_label_pc_10005904, label %dec_label_pc_10005838

dec_label_pc_10005838:                            ; preds = %dec_label_pc_10005834
  %v0_10005844 = mul nuw nsw i32 %v0_10005844.in, 256
  %v1_10005838 = add i32 %v0_10005908, 1
  %v2_10005838 = inttoptr i32 %v1_10005838 to i8*
  %v3_10005838 = load i8, i8* %v2_10005838, align 1
  %v4_10005838 = zext i8 %v3_10005838 to i32
  store i32 1, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_10005844 = or i32 %v4_10005838, -49152
  %v1_1000584c = add nsw i32 %v2_10005844, %v0_10005844
  %v0_10005850 = load i32, i32* %r19.global-to-local, align 4
  %v2_10005850 = add i32 %v1_1000584c, %v0_10005850
  store i32 %v2_10005850, i32* %r9.global-to-local, align 4
  %v1_10005854 = inttoptr i32 %v2_10005850 to i8*
  %v2_10005854 = load i8, i8* %v1_10005854, align 1
  %v3_10005854 = zext i8 %v2_10005854 to i32
  store i32 %v3_10005854, i32* %r0.global-to-local, align 4
  %v3_10005858 = icmp eq i8 %v2_10005854, 0
  br i1 %v3_10005858, label %dec_label_pc_10005868, label %dec_label_pc_10005834

dec_label_pc_10005868:                            ; preds = %dec_label_pc_10005810, %dec_label_pc_10005904, %dec_label_pc_10005838
  %v0_10005868103 = phi i32 [ %v0_10005868116, %dec_label_pc_10005838 ], [ 1, %dec_label_pc_10005810 ], [ %v2_10005904, %dec_label_pc_10005904 ]
  %v1_10005868 = phi i32 [ 1, %dec_label_pc_10005838 ], [ 0, %dec_label_pc_10005810 ], [ %v0_1000582028, %dec_label_pc_10005904 ]
  %v2_10005868 = add i32 %v1_10005868, %v0_10005868103
  store i32 %v2_10005868, i32* %r10.global-to-local, align 4
  %v2_1000586c = add i32 %v2_10005868, %v0_1000586c
  %v3_1000586c = inttoptr i32 %v2_1000586c to i16*
  %v4_1000586c = load i16, i16* %v3_1000586c, align 2
  %v5_1000586c = zext i16 %v4_1000586c to i32
  store i32 %v5_1000586c, i32* %r0.global-to-local, align 4
  %v1_10005874 = add i32 %v2_1000586c, 10
  store i32 %v1_10005874, i32* @r29, align 4
  %v3_10005878 = icmp eq i16 %v4_1000586c, 1
  br i1 %v3_10005878, label %dec_label_pc_1000591c, label %dec_label_pc_10005880

dec_label_pc_10005880:                            ; preds = %dec_label_pc_1000591c, %dec_label_pc_10005868
  store i32 %v1_10005874, i32* %r9.global-to-local, align 4
  %v1_1000588c124 = inttoptr i32 %v1_10005874 to i8*
  %v2_1000588c125 = load i8, i8* %v1_1000588c124, align 1
  %v3_1000588c126 = zext i8 %v2_1000588c125 to i32
  store i32 %v3_1000588c126, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  %v3_10005894127 = icmp eq i8 %v2_1000588c125, 0
  %v1_10005898128 = mul nuw nsw i32 %v3_1000588c126, 256
  store i32 %v1_10005898128, i32* %r10.global-to-local, align 4
  br i1 %v3_10005894127, label %dec_label_pc_100058d8, label %dec_label_pc_100058a4.preheader

dec_label_pc_100058a4.preheader:                  ; preds = %dec_label_pc_10005880, %dec_label_pc_10005910
  %v2_1000588c133 = phi i8 [ %v2_1000588c, %dec_label_pc_10005910 ], [ %v2_1000588c125, %dec_label_pc_10005880 ]
  %v3_1000589c136.in = phi i8 [ %v2_1000588c, %dec_label_pc_10005910 ], [ %v2_1000588c125, %dec_label_pc_10005880 ]
  %v1_10005898135 = phi i32 [ %v1_10005898, %dec_label_pc_10005910 ], [ %v1_10005898128, %dec_label_pc_10005880 ]
  %v1_10005890134 = phi i32 [ %v1_10005890, %dec_label_pc_10005910 ], [ 1, %dec_label_pc_10005880 ]
  %v0_1000588c132 = phi i32 [ %v1_10005914, %dec_label_pc_10005910 ], [ %v1_10005874, %dec_label_pc_10005880 ]
  %v0_10005890131 = phi i32 [ %v0_1000589038, %dec_label_pc_10005910 ], [ 0, %dec_label_pc_10005880 ]
  %v0_100058d8130 = phi i32 [ %v2_10005910, %dec_label_pc_10005910 ], [ 1, %dec_label_pc_10005880 ]
  br label %dec_label_pc_100058a4

dec_label_pc_100058a4:                            ; preds = %dec_label_pc_100058a4.preheader, %dec_label_pc_100058a8
  %v1_10005910 = phi i32 [ 0, %dec_label_pc_100058a8 ], [ %v1_10005890134, %dec_label_pc_100058a4.preheader ]
  %v0_100058b4 = phi i32 [ %v1_100058cc, %dec_label_pc_100058a8 ], [ %v1_10005898135, %dec_label_pc_100058a4.preheader ]
  %v0_10005914 = phi i32 [ %v2_100058c0, %dec_label_pc_100058a8 ], [ %v0_1000588c132, %dec_label_pc_100058a4.preheader ]
  %v0_100058a4.in = phi i8 [ %v2_100058c4, %dec_label_pc_100058a8 ], [ %v3_1000589c136.in, %dec_label_pc_100058a4.preheader ]
  %v1_100058a4.in = phi i8 [ %v2_100058c4, %dec_label_pc_100058a8 ], [ %v2_1000588c133, %dec_label_pc_100058a4.preheader ]
  %v0_1000589038 = phi i32 [ 1, %dec_label_pc_100058a8 ], [ %v0_10005890131, %dec_label_pc_100058a4.preheader ]
  %v0_100058a4 = icmp eq i8 %v0_100058a4.in, -65
  %v1_100058a4 = icmp ult i8 %v1_100058a4.in, -65
  %v2_100058a4 = or i1 %v0_100058a4, %v1_100058a4
  br i1 %v2_100058a4, label %dec_label_pc_10005910, label %dec_label_pc_100058a8

dec_label_pc_100058a8:                            ; preds = %dec_label_pc_100058a4
  %v1_100058a8 = add i32 %v0_10005914, 1
  %v2_100058a8 = inttoptr i32 %v1_100058a8 to i8*
  %v3_100058a8 = load i8, i8* %v2_100058a8, align 1
  %v4_100058a8 = zext i8 %v3_100058a8 to i32
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_100058b4 = or i32 %v4_100058a8, -49152
  %v1_100058bc = add nsw i32 %v2_100058b4, %v0_100058b4
  %v0_100058c0 = load i32, i32* %r19.global-to-local, align 4
  %v2_100058c0 = add i32 %v1_100058bc, %v0_100058c0
  store i32 %v2_100058c0, i32* %r9.global-to-local, align 4
  %v1_100058c4 = inttoptr i32 %v2_100058c0 to i8*
  %v2_100058c4 = load i8, i8* %v1_100058c4, align 1
  %v3_100058c4 = zext i8 %v2_100058c4 to i32
  store i32 %v3_100058c4, i32* %r0.global-to-local, align 4
  %v3_100058c8 = icmp eq i8 %v2_100058c4, 0
  %v1_100058cc = mul nuw nsw i32 %v3_100058c4, 256
  store i32 %v1_100058cc, i32* %r10.global-to-local, align 4
  br i1 %v3_100058c8, label %dec_label_pc_100058d8, label %dec_label_pc_100058a4

dec_label_pc_100058d8:                            ; preds = %dec_label_pc_10005880, %dec_label_pc_10005910, %dec_label_pc_100058a8
  %v0_100058d8109 = phi i32 [ %v0_100058d8130, %dec_label_pc_100058a8 ], [ 1, %dec_label_pc_10005880 ], [ %v2_10005910, %dec_label_pc_10005910 ]
  %v1_100058d8 = phi i32 [ 1, %dec_label_pc_100058a8 ], [ 0, %dec_label_pc_10005880 ], [ %v0_1000589038, %dec_label_pc_10005910 ]
  %v2_100058d8 = add i32 %v1_100058d8, %v0_100058d8109
  %v2_100058dc = add i32 %v2_100058d8, %v1_10005874
  br label %dec_label_pc_100057f8.backedge

dec_label_pc_100057f8.backedge:                   ; preds = %dec_label_pc_100058d8, %dec_label_pc_10005988
  %v0_100057f8 = phi i32 [ %v0_100057f849, %dec_label_pc_100058d8 ], [ %v0_100057f8.pre, %dec_label_pc_10005988 ]
  %storemerge = phi i32 [ %v2_100058dc, %dec_label_pc_100058d8 ], [ %v2_1000598c, %dec_label_pc_10005988 ]
  %v1_100057f8 = add i32 %v0_100057f8, -1
  store i32 %v1_100057f8, i32* %r0.global-to-local, align 4
  %v1_10005800 = urem i32 %v1_100057f8, 65536
  store i32 %v1_10005800, i32* %r28.global-to-local, align 4
  store i32 65535, i32* %r9.global-to-local, align 4
  %v4_10005808 = icmp eq i32 %v1_10005800, 65535
  br i1 %v4_10005808, label %dec_label_pc_10005768, label %dec_label_pc_10005810

dec_label_pc_100058e4:                            ; preds = %dec_label_pc_10005768
  %v1_100058e4 = add i32 %v0_10005770, 4
  %v2_100058e4 = inttoptr i32 %v1_100058e4 to i32*
  %v3_100058e4 = load i32, i32* %v2_100058e4, align 4
  store i32 %v3_100058e4, i32* @r3, align 4
  %v3_100058e8 = icmp eq i32 %v3_100058e4, 0
  br i1 %v3_100058e8, label %dec_label_pc_100058f4, label %dec_label_pc_100058f0

dec_label_pc_100058f0:                            ; preds = %dec_label_pc_100058e4
  store i32 268458228, i32* @lr, align 4
  %v0_100058f0 = call i32 @function_10009480()
  %v0_100058f4.pre = load i32, i32* %r25.global-to-local, align 4
  br label %dec_label_pc_100058f4

dec_label_pc_100058f4:                            ; preds = %dec_label_pc_100058e4, %dec_label_pc_100058f0
  %v0_100058f4 = phi i32 [ %v0_10005770, %dec_label_pc_100058e4 ], [ %v0_100058f4.pre, %dec_label_pc_100058f0 ]
  store i32 %v0_100058f4, i32* @r3, align 4
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 268458240, i32* @lr, align 4
  %v0_100058fc = call i32 @function_10009480()
  br label %dec_label_pc_1000577c

dec_label_pc_10005904:                            ; preds = %dec_label_pc_10005834
  %v2_10005904 = add i32 %v1_10005904, %v0_10005868116
  store i32 %v2_10005904, i32* %r10.global-to-local, align 4
  %v1_10005908 = add i32 %v0_10005908, 1
  store i32 %v1_10005908, i32* %r9.global-to-local, align 4
  %v1_1000581c = inttoptr i32 %v1_10005908 to i8*
  %v2_1000581c = load i8, i8* %v1_1000581c, align 1
  %v3_1000581c = zext i8 %v2_1000581c to i32
  store i32 %v3_1000581c, i32* %r0.global-to-local, align 4
  %v1_10005820 = xor i32 %v0_1000582028, 1
  store i32 %v1_10005820, i32* %r11.global-to-local, align 4
  %v3_10005824 = icmp eq i8 %v2_1000581c, 0
  br i1 %v3_10005824, label %dec_label_pc_10005868, label %dec_label_pc_10005834.preheader

dec_label_pc_10005910:                            ; preds = %dec_label_pc_100058a4
  %v2_10005910 = add i32 %v1_10005910, %v0_100058d8130
  %v1_10005914 = add i32 %v0_10005914, 1
  store i32 %v1_10005914, i32* %r9.global-to-local, align 4
  %v1_1000588c = inttoptr i32 %v1_10005914 to i8*
  %v2_1000588c = load i8, i8* %v1_1000588c, align 1
  %v3_1000588c = zext i8 %v2_1000588c to i32
  store i32 %v3_1000588c, i32* %r0.global-to-local, align 4
  %v1_10005890 = xor i32 %v0_1000589038, 1
  store i32 %v1_10005890, i32* %r11.global-to-local, align 4
  %v3_10005894 = icmp eq i8 %v2_1000588c, 0
  %v1_10005898 = mul nuw nsw i32 %v3_1000588c, 256
  store i32 %v1_10005898, i32* %r10.global-to-local, align 4
  br i1 %v3_10005894, label %dec_label_pc_100058d8, label %dec_label_pc_100058a4.preheader

dec_label_pc_1000591c:                            ; preds = %dec_label_pc_10005868
  %v1_1000591c = add i32 %v2_1000586c, 2
  %v2_1000591c = inttoptr i32 %v1_1000591c to i16*
  %v3_1000591c = load i16, i16* %v2_1000591c, align 2
  %v4_1000591c = zext i16 %v3_1000591c to i32
  store i32 %v4_1000591c, i32* %r0.global-to-local, align 4
  %v3_10005920 = icmp eq i16 %v3_1000591c, 1
  br i1 %v3_10005920, label %dec_label_pc_10005928, label %dec_label_pc_10005880

dec_label_pc_10005928:                            ; preds = %dec_label_pc_1000591c
  %v1_10005928 = add i32 %v2_1000586c, 8
  %v2_10005928 = inttoptr i32 %v1_10005928 to i16*
  %v3_10005928 = load i16, i16* %v2_10005928, align 2
  %v4_10005928 = zext i16 %v3_10005928 to i32
  store i32 %v4_10005928, i32* %r0.global-to-local, align 4
  %v3_1000592c = icmp eq i16 %v3_10005928, 4
  br i1 %v3_1000592c, label %dec_label_pc_10005934, label %dec_label_pc_10005988

dec_label_pc_10005934:                            ; preds = %dec_label_pc_10005928
  %v2_10005934 = inttoptr i32 %v1_10005874 to i8*
  %v3_10005934 = load i8, i8* %v2_10005934, align 1
  %v4_10005934 = zext i8 %v3_10005934 to i32
  store i32 %v4_10005934, i32* %r0.global-to-local, align 4
  store i32 %v4_10005934, i32* %stack_var_-4312, align 4
  %v1_1000593c = add i32 %v2_1000586c, 11
  %v2_1000593c = inttoptr i32 %v1_1000593c to i8*
  %v3_1000593c = load i8, i8* %v2_1000593c, align 1
  %v4_1000593c = zext i8 %v3_1000593c to i32
  store i32 %v4_1000593c, i32* %r9.global-to-local, align 4
  %v1_10005944 = add i32 %v2_1000586c, 12
  %v2_10005944 = inttoptr i32 %v1_10005944 to i8*
  %v3_10005944 = load i8, i8* %v2_10005944, align 1
  %v4_10005944 = zext i8 %v3_10005944 to i32
  store i32 %v4_10005944, i32* %r0.global-to-local, align 4
  %v1_1000594c = add i32 %v2_1000586c, 13
  %v2_1000594c = inttoptr i32 %v1_1000594c to i8*
  %v3_1000594c = load i8, i8* %v2_1000594c, align 1
  %v4_1000594c = zext i8 %v3_1000594c to i32
  store i32 %v4_1000594c, i32* %r9.global-to-local, align 4
  %v0_10005954 = load i32, i32* %r25.global-to-local, align 4
  %v1_10005954 = inttoptr i32 %v0_10005954 to i8*
  %v2_10005954 = load i8, i8* %v1_10005954, align 1
  %v3_10005954 = zext i8 %v2_10005954 to i32
  %v1_10005958 = add i32 %v0_10005954, 4
  %v2_10005958 = inttoptr i32 %v1_10005958 to i32*
  %v3_10005958 = load i32, i32* %v2_10005958, align 4
  %v1_1000595c = mul nuw nsw i32 %v3_10005954, 4
  %v1_10005960 = add nuw nsw i32 %v1_1000595c, 4
  store i32 268458344, i32* @lr, align 4
  %v3_10005964 = sext i8 %v3_1000594c to i32
  %v4_10005964 = call i32 @function_10009580(i32 %v3_10005958, i32 %v1_10005960, i32 %v3_10005964)
  %v0_10005968 = load i32, i32* %r25.global-to-local, align 4
  %v1_10005968 = inttoptr i32 %v0_10005968 to i8*
  %v2_10005968 = load i8, i8* %v1_10005968, align 1
  %v3_10005968 = zext i8 %v2_10005968 to i32
  %v3_1000596c = load i32, i32* %stack_var_-4312, align 4
  store i32 %v3_1000596c, i32* %r0.global-to-local, align 4
  %v1_10005970 = add nuw nsw i32 %v3_10005968, 1
  store i32 %v1_10005970, i32* %r11.global-to-local, align 4
  %v1_10005974 = mul nuw nsw i32 %v3_10005968, 4
  store i32 %v1_10005974, i32* %r9.global-to-local, align 4
  %v3_10005978 = add i32 %v1_10005974, %v4_10005964
  %v4_10005978 = inttoptr i32 %v3_10005978 to i32*
  store i32 %v3_1000596c, i32* %v4_10005978, align 4
  %v0_1000597c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000597c = trunc i32 %v0_1000597c to i8
  %v2_1000597c = load i32, i32* %r25.global-to-local, align 4
  %v3_1000597c = inttoptr i32 %v2_1000597c to i8*
  store i8 %v1_1000597c, i8* %v3_1000597c, align 1
  %v1_10005980 = load i32, i32* %r25.global-to-local, align 4
  %v2_10005980 = add i32 %v1_10005980, 4
  %v3_10005980 = inttoptr i32 %v2_10005980 to i32*
  store i32 %v4_10005964, i32* %v3_10005980, align 4
  %v0_10005984 = load i32, i32* @r31, align 4
  %v1_10005984 = add i32 %v0_10005984, 8
  %v2_10005984 = inttoptr i32 %v1_10005984 to i16*
  %v3_10005984 = load i16, i16* %v2_10005984, align 2
  %v4_10005984 = zext i16 %v3_10005984 to i32
  store i32 %v4_10005984, i32* %r0.global-to-local, align 4
  %v0_1000598c.pre = load i32, i32* @r29, align 4
  %v0_100057f8.pre.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10005988

dec_label_pc_10005988:                            ; preds = %dec_label_pc_10005928, %dec_label_pc_10005934
  %v0_100057f8.pre = phi i32 [ %v0_100057f849, %dec_label_pc_10005928 ], [ %v0_100057f8.pre.pre, %dec_label_pc_10005934 ]
  %v0_1000598c = phi i32 [ %v1_10005874, %dec_label_pc_10005928 ], [ %v0_1000598c.pre, %dec_label_pc_10005934 ]
  %v0_10005988 = phi i32 [ %v4_10005928, %dec_label_pc_10005928 ], [ %v4_10005984, %dec_label_pc_10005934 ]
  store i32 %v0_10005988, i32* %r0.global-to-local, align 4
  %v2_1000598c = add i32 %v0_10005988, %v0_1000598c
  br label %dec_label_pc_100057f8.backedge

dec_label_pc_10005528.preheader.thread:           ; preds = %dec_label_pc_10005484
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_100055281355 = or i32 %v2_100054f0, 1
  store i32 %v1_100055281355, i32* %r11.global-to-local, align 4
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10005558

; uselistorder directives
  uselistorder i32 %v1_10005974, { 1, 0 }
  uselistorder i32 %v4_10005964, { 1, 0 }
  uselistorder i32 %v1_10005890, { 1, 0 }
  uselistorder i8 %v2_1000588c, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10005914, { 1, 2, 0 }
  uselistorder i32 %v2_10005910, { 1, 0 }
  uselistorder i32 %v1_10005820, { 1, 0 }
  uselistorder i32 %v3_1000581c, { 1, 0 }
  uselistorder i8 %v2_1000581c, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10005908, { 1, 2, 0 }
  uselistorder i32 %v2_10005904, { 2, 1, 0 }
  uselistorder i32 %v1_10005800, { 1, 0, 2 }
  uselistorder i8 %v2_100058c4, { 2, 3, 0, 1 }
  uselistorder i32 %v2_100058c0, { 1, 2, 0 }
  uselistorder i32 %v0_1000589038, { 2, 0, 1 }
  uselistorder i32 %v0_100058d8130, { 1, 0 }
  uselistorder i32 %v1_10005898128, { 1, 0 }
  uselistorder i32 %v1_10005874, { 3, 4, 2, 0, 1, 5, 6 }
  uselistorder i32 %v3_10005854, { 1, 0 }
  uselistorder i8 %v2_10005854, { 2, 3, 0, 1 }
  uselistorder i32 %v2_10005850, { 1, 2, 0 }
  uselistorder i32 %v0_1000582028, { 2, 0, 1 }
  uselistorder i32 %v0_10005868116, { 1, 0 }
  uselistorder i32 %v0_1000586c, { 2, 0, 1, 3 }
  uselistorder i32 %v1_100058009, { 2, 1, 0 }
  uselistorder i32 %v0_10005770, { 1, 2, 0, 3 }
  uselistorder i32 %v0_10005760, { 1, 0 }
  uselistorder i32 %v1_1000570c, { 1, 0 }
  uselistorder i32 %v4_10005708, { 1, 0 }
  uselistorder i32 %v1_10005708, { 1, 2, 0 }
  uselistorder i32 %v3_10005704, { 2, 1, 0 }
  uselistorder i32 %v1_100056b8, { 1, 0 }
  uselistorder i32 %v0_100056b8, { 1, 0 }
  uselistorder i32 %v1_100056a8, { 1, 0 }
  uselistorder i32 %v1_100056a4, { 1, 0 }
  uselistorder i8 %v2_10005530, { 1, 2, 3, 0 }
  uselistorder i32 %v1_1000552c, { 1, 0 }
  uselistorder i32 %v0_10005524, { 0, 3, 2, 1 }
  uselistorder i32 %v1_100054f4, { 0, 2, 1 }
  uselistorder i32 %v2_100054f0, { 2, 0, 1, 4, 3, 5 }
  uselistorder i32 %v0_1000548c, { 1, 0 }
  uselistorder i16* %stack_var_-2108, { 1, 0 }
  uselistorder i16 %tmp60, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 8, 5, 6, 7, 9, 20, 10, 11, 15, 12, 21, 22, 13, 14, 16, 17, 19, 18 }
  uselistorder i32* %r28.global-to-local, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r25.global-to-local, { 1, 2, 3, 4, 0, 6, 5, 7 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 4, 6, 3, 15, 5, 14, 7, 8, 9, 12, 11, 10, 13 }
  uselistorder i32* %r10.global-to-local, { 2, 0, 1, 11, 3, 4, 5, 6, 8, 7, 9, 10 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 12, 13, 8, 30, 10, 11, 29, 28, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i32* %ctr.global-to-local, { 0, 1, 8, 9, 2, 3, 4, 6, 7, 5 }
  uselistorder i8 -65, { 2, 0, 3, 1 }
  uselistorder i32 65535, { 42, 43, 13, 14, 44, 45, 4, 3, 5, 47, 46, 48, 15, 16, 17, 49, 6, 7, 18, 50, 19, 51, 0, 8, 52, 53, 20, 21, 22, 56, 57, 54, 55, 58, 59, 23, 24, 71, 9, 60, 61, 25, 26, 27, 28, 1, 10, 62, 63, 29, 30, 31, 32, 33, 64, 34, 35, 72, 11, 66, 65, 67, 36, 37, 38, 2, 12, 69, 68, 70, 39, 40, 41 }
  uselistorder i32 (i32)* @function_100099e4, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 2048, { 2, 0, 1, 3, 4 }
  uselistorder i16 1, { 1, 2, 0 }
  uselistorder i32 53, { 1, 0 }
  uselistorder label %dec_label_pc_10005988, { 1, 0 }
  uselistorder label %dec_label_pc_100058f4, { 1, 0 }
  uselistorder label %dec_label_pc_100057f8.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_100058d8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100058a4, { 1, 0 }
  uselistorder label %dec_label_pc_100058a4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10005868, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10005834, { 1, 0 }
  uselistorder label %dec_label_pc_10005834.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10005810, { 1, 0 }
  uselistorder label %dec_label_pc_1000577c, { 1, 0 }
  uselistorder label %dec_label_pc_10005768, { 4, 5, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10005748, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_100056a0.dec_label_pc_100056a0_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000561c, { 1, 0 }
  uselistorder label %dec_label_pc_10005558, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10005530, { 1, 0 }
}

define i32 @function_100059a0(i32 %arg1) local_unnamed_addr {
dec_label_pc_100059a0:
  %v3_100059b4 = load i32, i32* @global_var_1001b478.103, align 4
  store i32 268458428, i32* @lr, align 4
  %v2_100059b8 = call i32 @function_100084ec(i32 %v3_100059b4, i32 9)
  ret i32 %v2_100059b8
}

define i32 @function_100059cc() local_unnamed_addr {
dec_label_pc_100059cc:
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_100059d4 = load i32, i32* @r31, align 4
  %v0_100059d8 = load i32, i32* @r3, align 4
  store i32 %v0_100059d8, i32* @r31, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  %v1_100059e8 = add i32 %v0_100059d8, 4
  %v2_100059e8 = inttoptr i32 %v1_100059e8 to i32*
  %v3_100059e8 = load i32, i32* %v2_100059e8, align 4
  %v3_100059f0 = icmp eq i32 %v3_100059e8, -1
  br i1 %v3_100059f0, label %dec_label_pc_10005a08, label %dec_label_pc_10005a04

dec_label_pc_10005a04:                            ; preds = %dec_label_pc_100059cc
  store i32 268458504, i32* @lr, align 4
  %v0_10005a04 = call i32 @function_100083cc()
  br label %dec_label_pc_10005a08

dec_label_pc_10005a08:                            ; preds = %dec_label_pc_100059cc, %dec_label_pc_10005a04
  store i32 268458520, i32* @lr, align 4
  %v3_10005a14 = call i32 @function_100090b4(i32 2, i32 1, i32 0)
  store i32 256, i32* @r4, align 4
  %v0_10005a20 = load i32, i32* @r31, align 4
  %v1_10005a20 = add i32 %v0_10005a20, 28
  store i32 %v1_10005a20, i32* @r3, align 4
  %v3_10005a24 = icmp eq i32 %v3_10005a14, -1
  %v2_10005a28 = add i32 %v0_10005a20, 4
  %v3_10005a28 = inttoptr i32 %v2_10005a28 to i32*
  store i32 %v3_10005a14, i32* %v3_10005a28, align 4
  br i1 %v3_10005a24, label %dec_label_pc_10005a08.dec_label_pc_10005aa0_crit_edge, label %dec_label_pc_10005a30

dec_label_pc_10005a08.dec_label_pc_10005aa0_crit_edge: ; preds = %dec_label_pc_10005a08
  %v0_10005ab4.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10005aa0

dec_label_pc_10005a30:                            ; preds = %dec_label_pc_10005a08
  %v0_10005a30 = load i32, i32* %r29.global-to-local, align 4
  %v1_10005a30 = load i32, i32* @r31, align 4
  %v2_10005a30 = add i32 %v1_10005a30, 24
  %v3_10005a30 = inttoptr i32 %v2_10005a30 to i32*
  store i32 %v0_10005a30, i32* %v3_10005a30, align 4
  store i32 268458552, i32* @lr, align 4
  %v0_10005a34 = call i32 @function_10007d34()
  %v0_10005a38 = load i32, i32* @r31, align 4
  %v1_10005a38 = add i32 %v0_10005a38, 4
  %v2_10005a38 = inttoptr i32 %v1_10005a38 to i32*
  %v3_10005a38 = load i32, i32* %v2_10005a38, align 4
  store i32 %v3_10005a38, i32* %r29.global-to-local, align 4
  store i32 3, i32* @r4, align 4
  store i32 268458576, i32* @lr, align 4
  %v2_10005a4c = call i32 @function_100082e4(i32 %v3_10005a38)
  store i32 4, i32* @r4, align 4
  store i32 268458596, i32* @lr, align 4
  %v2_10005a60 = call i32 @function_100082e4(i32 %v3_10005a38)
  %v3_10005a68 = load i32, i32* @global_var_1001b46c.104, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  %v0_10005a70 = load i32, i32* @r31, align 4
  %v2_10005a78 = add i32 %v0_10005a70, 8
  %v3_10005a78 = inttoptr i32 %v2_10005a78 to i32*
  store i32 %v3_10005a68, i32* %v3_10005a78, align 4
  %v0_10005a80 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005a80 = load i32, i32* @r31, align 4
  %v2_10005a80 = add i32 %v1_10005a80, 12
  %v3_10005a80 = inttoptr i32 %v2_10005a80 to i32*
  store i32 %v0_10005a80, i32* %v3_10005a80, align 4
  %v0_10005a88 = load i32, i32* @r31, align 4
  %v1_10005a88 = add i32 %v0_10005a88, 4
  %v2_10005a88 = inttoptr i32 %v1_10005a88 to i32*
  %v3_10005a88 = load i32, i32* %v2_10005a88, align 4
  store i32 %v3_10005a88, i32* @r3, align 4
  %v1_10005a8c = add i32 %v0_10005a88, 16
  %v2_10005a8c = inttoptr i32 %v1_10005a8c to i32*
  %v3_10005a8c = load i32, i32* %v2_10005a8c, align 4
  store i32 %v3_10005a8c, i32* %r9.global-to-local, align 4
  store i32 268458656, i32* @lr, align 4
  %v0_10005a9c = call i32 @function_10008eb4()
  br label %dec_label_pc_10005aa0

dec_label_pc_10005aa0:                            ; preds = %dec_label_pc_10005a08.dec_label_pc_10005aa0_crit_edge, %dec_label_pc_10005a30
  %v0_10005ab4 = phi i32 [ %v0_10005ab4.pre, %dec_label_pc_10005a08.dec_label_pc_10005aa0_crit_edge ], [ %v0_10005a9c, %dec_label_pc_10005a30 ]
  store i32 %v0_100059d4, i32* @r31, align 4
  ret i32 %v0_10005ab4

; uselistorder directives
  uselistorder i32 ()* @function_10007d34, { 5, 6, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10005aa0, { 1, 0 }
  uselistorder label %dec_label_pc_10005a08, { 1, 0 }
}

define i32 @function_10005ab8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10005ab8:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10005abc = load i32, i32* @lr, align 4
  store i32 %v0_10005abc, i32* %r0.global-to-local, align 4
  %v3_10005ac8 = load i32, i32* @global_var_1001b460.105, align 4
  %v1_10005ad4 = mul i32 %v3_10005ac8, 16
  store i32 %v1_10005ad4, i32* %r9.global-to-local, align 4
  %v0_10005ad8 = load i32, i32* @r28, align 4
  %v3_10005ae0 = load i32, i32* @global_var_1001b464.106, align 4
  store i32 %arg2, i32* %r23.global-to-local, align 4
  %v1_10005aec = add i32 %v1_10005ad4, 16
  %v0_10005b04 = load i32, i32* @r29, align 4
  %v0_10005b08 = load i32, i32* @r30, align 4
  store i32 268458772, i32* @lr, align 4
  %v3_10005b10 = call i32 @function_10009580(i32 %v3_10005ae0, i32 %v1_10005aec, i32 %v1_10005ad4)
  store i32 %v3_10005b10, i32* %r25.global-to-local, align 4
  %v0_10005b18 = load i32, i32* @r28, align 4
  store i32 %v3_10005b10, i32* @global_var_1001b464.106, align 4
  %v3_10005b20 = load i32, i32* @global_var_1001b460.105, align 4
  store i32 %v3_10005b20, i32* %r24.global-to-local, align 4
  store i32 268458792, i32* @lr, align 4
  %v1_10005b24 = inttoptr i32 %v0_10005b18 to i8*
  %v2_10005b24 = call i32 @function_10007c8c(i8* %v1_10005b24)
  %sext = mul i32 %v2_10005b24, 16777216
  %v1_10005b28 = sdiv i32 %sext, 16777216
  %v2_10005b28 = add nsw i32 %v1_10005b28, 1
  store i32 %v2_10005b28, i32* @r29, align 4
  store i32 %v1_10005b28, i32* @r30, align 4
  store i32 %v2_10005b28, i32* @r3, align 4
  store i32 268458808, i32* @lr, align 4
  %v0_10005b34 = call i32 @function_100092b8()
  %v0_10005b38 = load i32, i32* @r28, align 4
  %v0_10005b3c = load i32, i32* @r29, align 4
  store i32 %v0_10005b34, i32* %r31.global-to-local, align 4
  store i32 268458824, i32* @lr, align 4
  %v3_10005b44 = call i32 @function_10007d10(i32 %v0_10005b38, i32 %v0_10005b3c, i32 %v0_10005b3c)
  %v0_10005b48 = load i32, i32* @r30, align 4
  %tmp23 = icmp slt i32 %v0_10005b48, 1
  %extract.t8 = trunc i32 %v0_10005b48 to i8
  br i1 %tmp23, label %dec_label_pc_10005b74, label %dec_label_pc_10005b50

dec_label_pc_10005b50:                            ; preds = %dec_label_pc_10005ab8
  store i32 %v0_10005b48, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 -70, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10005b5c

dec_label_pc_10005b5c:                            ; preds = %dec_label_pc_10005b5c.dec_label_pc_10005b5c_crit_edge, %dec_label_pc_10005b50
  %v1_10005b64 = phi i32 [ %v1_10005b64.pre, %dec_label_pc_10005b5c.dec_label_pc_10005b5c_crit_edge ], [ -70, %dec_label_pc_10005b50 ]
  %v1_10005b68 = phi i32 [ %v1_10005b6c, %dec_label_pc_10005b5c.dec_label_pc_10005b5c_crit_edge ], [ 0, %dec_label_pc_10005b50 ]
  %v1_10005b5c = load i32, i32* %r31.global-to-local, align 4
  %v2_10005b5c = add i32 %v1_10005b5c, %v1_10005b68
  %v3_10005b5c = inttoptr i32 %v2_10005b5c to i8*
  %v4_10005b5c = load i8, i8* %v3_10005b5c, align 1
  %v5_10005b5c = zext i8 %v4_10005b5c to i32
  %v1_10005b60 = sub i32 -1, %v1_10005b64
  %v2_10005b64 = xor i32 %v5_10005b5c, %v1_10005b60
  store i32 %v2_10005b64, i32* %r0.global-to-local, align 4
  %v3_10005b68 = trunc i32 %v2_10005b64 to i8
  store i8 %v3_10005b68, i8* %v3_10005b5c, align 1
  %v0_10005b6c = load i32, i32* %r9.global-to-local, align 4
  %v1_10005b6c = add i32 %v0_10005b6c, 1
  store i32 %v1_10005b6c, i32* %r9.global-to-local, align 4
  %v0_10005b70 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005b70 = add i32 %v0_10005b70, -1
  store i32 %v1_10005b70, i32* %ctr.global-to-local, align 4
  %v2_10005b70 = icmp eq i32 %v1_10005b70, 0
  br i1 %v2_10005b70, label %dec_label_pc_10005b74.loopexit, label %dec_label_pc_10005b5c.dec_label_pc_10005b5c_crit_edge

dec_label_pc_10005b5c.dec_label_pc_10005b5c_crit_edge: ; preds = %dec_label_pc_10005b5c
  %v1_10005b64.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10005b5c

dec_label_pc_10005b74.loopexit:                   ; preds = %dec_label_pc_10005b5c
  %v0_10005b8c.pre = load i32, i32* @r30, align 4
  %extract.t = trunc i32 %v0_10005b8c.pre to i8
  br label %dec_label_pc_10005b74

dec_label_pc_10005b74:                            ; preds = %dec_label_pc_10005b74.loopexit, %dec_label_pc_10005ab8
  %v0_10005b8c.off0 = phi i8 [ %extract.t, %dec_label_pc_10005b74.loopexit ], [ %extract.t8, %dec_label_pc_10005ab8 ]
  %v3_10005b74 = load i32, i32* @global_var_1001b460.105, align 4
  %v0_10005b78 = load i32, i32* %r23.global-to-local, align 4
  %v3_10005b7c = load i32, i32* @global_var_1001b464.106, align 4
  %v1_10005b80 = mul i32 %v3_10005b74, 16
  %v2_10005b84 = add i32 %v3_10005b7c, %v1_10005b80
  store i32 %v2_10005b84, i32* %r9.global-to-local, align 4
  %v0_10005b88 = load i32, i32* %r24.global-to-local, align 4
  %v1_10005b88 = mul i32 %v0_10005b88, 16
  store i32 %v1_10005b88, i32* %r0.global-to-local, align 4
  %v3_10005b8c = add i32 %v2_10005b84, 12
  %v4_10005b8c = inttoptr i32 %v3_10005b8c to i8*
  store i8 %v0_10005b8c.off0, i8* %v4_10005b8c, align 1
  %v0_10005b90 = load i32, i32* %r31.global-to-local, align 4
  %v1_10005b90 = load i32, i32* %r25.global-to-local, align 4
  %v2_10005b90 = load i32, i32* %r0.global-to-local, align 4
  %v3_10005b90 = add i32 %v2_10005b90, %v1_10005b90
  %v4_10005b90 = inttoptr i32 %v3_10005b90 to i32*
  store i32 %v0_10005b90, i32* %v4_10005b90, align 4
  %v3_10005b94 = load i32, i32* @global_var_1001b460.105, align 4
  store i32 %v3_10005b94, i32* @r30, align 4
  %v3_10005b98 = load i32, i32* @global_var_1001b464.106, align 4
  store i32 %v3_10005b98, i32* %r25.global-to-local, align 4
  store i32 268458912, i32* @lr, align 4
  %v1_10005b9c = inttoptr i32 %v0_10005b78 to i8*
  %v2_10005b9c = call i32 @function_10007c8c(i8* %v1_10005b9c)
  %sext1 = mul i32 %v2_10005b9c, 16777216
  %v1_10005ba0 = sdiv i32 %sext1, 16777216
  %v2_10005ba0 = add nsw i32 %v1_10005ba0, 1
  store i32 %v2_10005ba0, i32* @r29, align 4
  store i32 %v1_10005ba0, i32* @r28, align 4
  store i32 %v2_10005ba0, i32* @r3, align 4
  store i32 268458928, i32* @lr, align 4
  %v0_10005bac = call i32 @function_100092b8()
  %v0_10005bb0 = load i32, i32* %r23.global-to-local, align 4
  %v0_10005bb4 = load i32, i32* @r29, align 4
  store i32 %v0_10005bac, i32* %r31.global-to-local, align 4
  store i32 268458944, i32* @lr, align 4
  %v3_10005bbc = call i32 @function_10007d10(i32 %v0_10005bb0, i32 %v0_10005bb4, i32 %v0_10005bb4)
  %v0_10005bc0 = load i32, i32* @r28, align 4
  %tmp24 = icmp slt i32 %v0_10005bc0, 1
  %extract.t10 = trunc i32 %v0_10005bc0 to i8
  br i1 %tmp24, label %dec_label_pc_10005bec, label %dec_label_pc_10005bc8

dec_label_pc_10005bc8:                            ; preds = %dec_label_pc_10005b74
  store i32 %v0_10005bc0, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 -70, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10005bd4

dec_label_pc_10005bd4:                            ; preds = %dec_label_pc_10005bd4.dec_label_pc_10005bd4_crit_edge, %dec_label_pc_10005bc8
  %v1_10005bdc = phi i32 [ %v1_10005bdc.pre, %dec_label_pc_10005bd4.dec_label_pc_10005bd4_crit_edge ], [ -70, %dec_label_pc_10005bc8 ]
  %v1_10005be0 = phi i32 [ %v1_10005be4, %dec_label_pc_10005bd4.dec_label_pc_10005bd4_crit_edge ], [ 0, %dec_label_pc_10005bc8 ]
  %v1_10005bd4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10005bd4 = add i32 %v1_10005bd4, %v1_10005be0
  %v3_10005bd4 = inttoptr i32 %v2_10005bd4 to i8*
  %v4_10005bd4 = load i8, i8* %v3_10005bd4, align 1
  %v5_10005bd4 = zext i8 %v4_10005bd4 to i32
  %v1_10005bd8 = sub i32 -1, %v1_10005bdc
  %v2_10005bdc = xor i32 %v5_10005bd4, %v1_10005bd8
  store i32 %v2_10005bdc, i32* %r0.global-to-local, align 4
  %v3_10005be0 = trunc i32 %v2_10005bdc to i8
  store i8 %v3_10005be0, i8* %v3_10005bd4, align 1
  %v0_10005be4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005be4 = add i32 %v0_10005be4, 1
  store i32 %v1_10005be4, i32* %r9.global-to-local, align 4
  %v0_10005be8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005be8 = add i32 %v0_10005be8, -1
  store i32 %v1_10005be8, i32* %ctr.global-to-local, align 4
  %v2_10005be8 = icmp eq i32 %v1_10005be8, 0
  br i1 %v2_10005be8, label %dec_label_pc_10005bec.loopexit, label %dec_label_pc_10005bd4.dec_label_pc_10005bd4_crit_edge

dec_label_pc_10005bd4.dec_label_pc_10005bd4_crit_edge: ; preds = %dec_label_pc_10005bd4
  %v1_10005bdc.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10005bd4

dec_label_pc_10005bec.loopexit:                   ; preds = %dec_label_pc_10005bd4
  %v0_10005c00.pre = load i32, i32* @r28, align 4
  %extract.t9 = trunc i32 %v0_10005c00.pre to i8
  br label %dec_label_pc_10005bec

dec_label_pc_10005bec:                            ; preds = %dec_label_pc_10005bec.loopexit, %dec_label_pc_10005b74
  %v0_10005c00.off0 = phi i8 [ %extract.t9, %dec_label_pc_10005bec.loopexit ], [ %extract.t10, %dec_label_pc_10005b74 ]
  %v3_10005bec = load i32, i32* @global_var_1001b460.105, align 4
  %v3_10005bf4 = load i32, i32* @global_var_1001b464.106, align 4
  %v1_10005bf8 = mul i32 %v3_10005bec, 16
  %v2_10005bfc = or i32 %v1_10005bf8, 13
  %v3_10005c00 = add i32 %v2_10005bfc, %v3_10005bf4
  %v4_10005c00 = inttoptr i32 %v3_10005c00 to i8*
  store i8 %v0_10005c00.off0, i8* %v4_10005c00, align 1
  %v0_10005c04 = load i32, i32* @r30, align 4
  %v1_10005c04 = mul i32 %v0_10005c04, 16
  %v1_10005c08 = load i32, i32* %r25.global-to-local, align 4
  %v2_10005c08 = add i32 %v1_10005c08, %v1_10005c04
  store i32 %v2_10005c08, i32* %r9.global-to-local, align 4
  %v3_10005c0c = load i32, i32* @global_var_1001b460.105, align 4
  %v3_10005c10 = load i32, i32* @global_var_1001b464.106, align 4
  %v1_10005c14 = mul i32 %v3_10005c0c, 16
  %v3_10005c18 = load i16, i16* @global_var_1001b468.107, align 2
  %v4_10005c18 = zext i16 %v3_10005c18 to i32
  store i32 %v4_10005c18, i32* %r7.global-to-local, align 4
  %v2_10005c1c = add i32 %v3_10005c10, %v1_10005c14
  store i32 %v2_10005c1c, i32* %r11.global-to-local, align 4
  store i32 %v0_10005abc, i32* %r0.global-to-local, align 4
  %v1_10005c24 = add i32 %v3_10005c0c, 1
  store i32 %v1_10005c24, i32* %r10.global-to-local, align 4
  store i32 ptrtoint (i16* @global_var_1001b468.107 to i32), i32* %r8.global-to-local, align 4
  %v0_10005c2c = load i32, i32* %r31.global-to-local, align 4
  %v2_10005c2c = add i32 %v2_10005c08, 4
  %v3_10005c2c = inttoptr i32 %v2_10005c2c to i32*
  store i32 %v0_10005c2c, i32* %v3_10005c2c, align 4
  %v0_10005c34 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10005c34, i32* @global_var_1001b460.105, align 4
  store i32 %v0_10005ad8, i32* @r28, align 4
  store i32 %v0_10005b04, i32* @r29, align 4
  store i32 %v0_10005b08, i32* @r30, align 4
  %v0_10005c64 = load i32, i32* %r8.global-to-local, align 4
  %v1_10005c64 = trunc i32 %v0_10005c64 to i16
  %v2_10005c64 = load i32, i32* %r11.global-to-local, align 4
  %v3_10005c64 = add i32 %v2_10005c64, 10
  %v4_10005c64 = inttoptr i32 %v3_10005c64 to i16*
  store i16 %v1_10005c64, i16* %v4_10005c64, align 2
  %v0_10005c68 = load i32, i32* %r7.global-to-local, align 4
  %v1_10005c68 = trunc i32 %v0_10005c68 to i16
  %v2_10005c68 = load i32, i32* %r11.global-to-local, align 4
  %v3_10005c68 = add i32 %v2_10005c68, 8
  %v4_10005c68 = inttoptr i32 %v3_10005c68 to i16*
  store i16 %v1_10005c68, i16* %v4_10005c68, align 2
  %v0_10005c6c = load i32, i32* %r8.global-to-local, align 4
  %v1_10005c6c = trunc i32 %v0_10005c6c to i16
  store i16 %v1_10005c6c, i16* @global_var_1001b468.107, align 2
  ret i32 %v3_10005bbc

; uselistorder directives
  uselistorder i32 %v3_10005c0c, { 1, 0 }
  uselistorder i32 %v1_10005be8, { 1, 0 }
  uselistorder i32 %v1_10005be4, { 1, 0 }
  uselistorder i32 %v0_10005bc0, { 1, 0, 2 }
  uselistorder i32 %v1_10005b70, { 1, 0 }
  uselistorder i32 %v1_10005b6c, { 1, 0 }
  uselistorder i32 %v0_10005b48, { 1, 0, 2 }
  uselistorder i32 %v1_10005ad4, { 2, 1, 0 }
  uselistorder i32* %r23.global-to-local, { 1, 0, 2 }
  uselistorder i32 -70, { 0, 2, 1, 3 }
  uselistorder i32 (i8*)* @function_10007c8c, { 5, 6, 0, 1, 2, 3, 4, 29, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i32 (i32, i32, i32)* @function_10009580, { 9, 10, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_10005c74(i32 %arg1) local_unnamed_addr {
dec_label_pc_10005c74:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 0, i32* %r14.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp54 = call i32 @__decompiler_undefined_function_0()
  %tmp55 = call i32 @__decompiler_undefined_function_0()
  %tmp56 = call i32 @__decompiler_undefined_function_0()
  %tmp57 = call i16 @__decompiler_undefined_function_2()
  %tmp58 = call i16 @__decompiler_undefined_function_2()
  %tmp59 = call i8 @__decompiler_undefined_function_1()
  %tmp60 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1904 = alloca i32, align 4
  %stack_var_-1896 = alloca i32, align 4
  %stack_var_-1892 = alloca i32, align 4
  %stack_var_-1856 = alloca i32, align 4
  %stack_var_-1912 = alloca i32, align 4
  %stack_var_-1600 = alloca i32, align 4
  %stack_var_-1872 = alloca i32, align 4
  %stack_var_-1728 = alloca i32, align 4
  %stack_var_-1900 = alloca i64, align 8
  %v0_10005c74 = load i32, i32* @lr, align 4
  store i32 %v0_10005c74, i32* %r0.global-to-local, align 4
  %v0_10005c7c = load i32, i32* %r14.global-to-local, align 4
  %v0_10005c88 = load i32, i32* @r17, align 4
  %v0_10005cb4 = load i32, i32* @r28, align 4
  %v0_10005cb8 = load i32, i32* @r29, align 4
  %v0_10005cbc = load i32, i32* @r30, align 4
  store i32 268459212, i32* @lr, align 4
  %v0_10005cc8 = call i32 @function_10008414()
  store i32 %v0_10005cc8, i32* %r3.global-to-local, align 4
  %v1_10005ccc = icmp slt i32 %v0_10005cc8, 0
  %v3_10005ccc = icmp eq i32 %v0_10005cc8, 0
  store i1 %v1_10005ccc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10005ccc, i1* %cr7_eq.global-to-local, align 1
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v0_10005cc8, i32* @global_var_1001b478.103, align 4
  %tmp100 = icmp slt i32 %v0_10005cc8, 1
  br i1 %tmp100, label %dec_label_pc_10005d34, label %dec_label_pc_10005cdc

dec_label_pc_10005cdc:                            ; preds = %dec_label_pc_10005d34, %dec_label_pc_10005c74
  store i32 %v0_10005c74, i32* %r0.global-to-local, align 4
  store i32 %v0_10005c7c, i32* %r14.global-to-local, align 4
  store i32 %v0_10005c88, i32* @r17, align 4
  store i32 %v0_10005cb4, i32* @r28, align 4
  store i32 %v0_10005cb8, i32* @r29, align 4
  store i32 %v0_10005cbc, i32* @r30, align 4
  ret i32 %v0_10005cc8

dec_label_pc_10005d34:                            ; preds = %dec_label_pc_10005c74
  %v1_10005d34 = icmp slt i32 %v0_10005cc8, -1
  %v3_10005d34 = icmp eq i32 %v0_10005cc8, -1
  store i1 %v1_10005d34, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10005d34, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10005d34, label %dec_label_pc_10005cdc, label %dec_label_pc_10005d3c

dec_label_pc_10005d3c:                            ; preds = %dec_label_pc_10005d34
  store i32 268459328, i32* @lr, align 4
  %v1_10005d3c = call i32 @function_10007f90(i32 %v0_10005cc8)
  store i32 %v1_10005d3c, i32* %r3.global-to-local, align 4
  store i32 %v1_10005d3c, i32* @global_var_1001b448.12, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005d4c.108 to i32), i32* @lr, align 4
  %v1_10005d48 = call i32 @function_100052a8(i32 %v1_10005d3c)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268459348, i32* @lr, align 4
  %v0_10005d50 = call i32 @function_1000879c()
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v0_10005d50, i32* @global_var_1001b46c.104, align 4
  store i32 288, i32* %r4.global-to-local, align 4
  store i32 256, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10005d68.109 to i32), i32* @lr, align 4
  %v2_10005d64 = call i32 @function_10009410(i32 256, i32 288)
  store i32 %v2_10005d64, i32* %r3.global-to-local, align 4
  store i64 0, i64* %stack_var_-1900, align 8
  store i32 256, i32* %r0.global-to-local, align 4
  store i32 256, i32* %ctr.global-to-local, align 4
  store i32 %v2_10005d64, i32* @global_var_1001b470.110, align 4
  store i32 %v2_10005d64, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 -1, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10005d94 = add i32 %v2_10005d64, 4
  store i32 %v1_10005d94, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10005d98

dec_label_pc_10005d98:                            ; preds = %dec_label_pc_10005d98.dec_label_pc_10005d98_crit_edge, %dec_label_pc_10005d3c
  %v1_10005dac = phi i32 [ %v1_10005db4, %dec_label_pc_10005d98.dec_label_pc_10005d98_crit_edge ], [ %v1_10005d94, %dec_label_pc_10005d3c ]
  %v0_10005dac = phi i32 [ %v0_10005dac.pre, %dec_label_pc_10005d98.dec_label_pc_10005d98_crit_edge ], [ -1, %dec_label_pc_10005d3c ]
  %v1_10005da8 = phi i32 [ %v1_10005da8.pre, %dec_label_pc_10005d98.dec_label_pc_10005d98_crit_edge ], [ %v2_10005d64, %dec_label_pc_10005d3c ]
  %v0_10005da4 = phi i32 [ %v0_10005db8, %dec_label_pc_10005d98.dec_label_pc_10005d98_crit_edge ], [ 0, %dec_label_pc_10005d3c ]
  %v1_10005d98 = mul i32 %v0_10005da4, 256
  store i32 %v1_10005d98, i32* %r0.global-to-local, align 4
  %v2_10005da0 = mul i32 %v0_10005da4, 288
  %v1_10005da4 = add i32 %v0_10005da4, 1
  store i32 %v1_10005da4, i32* %r10.global-to-local, align 4
  %v2_10005da8 = add i32 %v2_10005da0, %v1_10005da8
  store i32 %v2_10005da8, i32* %r9.global-to-local, align 4
  %v2_10005dac = inttoptr i32 %v1_10005dac to i32*
  store i32 %v0_10005dac, i32* %v2_10005dac, align 4
  %v0_10005db0 = load i32, i32* %r7.global-to-local, align 4
  %v1_10005db0 = load i32, i32* %r9.global-to-local, align 4
  %v2_10005db0 = add i32 %v1_10005db0, 12
  %v3_10005db0 = inttoptr i32 %v2_10005db0 to i32*
  store i32 %v0_10005db0, i32* %v3_10005db0, align 4
  %v0_10005db4 = load i32, i32* %r11.global-to-local, align 4
  %v1_10005db4 = add i32 %v0_10005db4, 288
  store i32 %v1_10005db4, i32* %r11.global-to-local, align 4
  %v0_10005db8 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10005db8, i32* %r9.global-to-local, align 4
  %v0_10005dbc = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005dbc = add i32 %v0_10005dbc, -1
  store i32 %v1_10005dbc, i32* %ctr.global-to-local, align 4
  %v2_10005dbc = icmp eq i32 %v1_10005dbc, 0
  br i1 %v2_10005dbc, label %dec_label_pc_10005dc0, label %dec_label_pc_10005d98.dec_label_pc_10005d98_crit_edge

dec_label_pc_10005d98.dec_label_pc_10005d98_crit_edge: ; preds = %dec_label_pc_10005d98
  %v1_10005da8.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_10005dac.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10005d98

dec_label_pc_10005dc0:                            ; preds = %dec_label_pc_10005d98
  store i32 256, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r4.global-to-local, align 4
  store i64 256, i64* %stack_var_-1900, align 8
  store i32 268459480, i32* @lr, align 4
  %v3_10005dd4 = call i32 @function_100090b4(i32 2, i32 3, i32 6)
  store i32 %v3_10005dd4, i32* %r3.global-to-local, align 4
  %v1_10005dd8 = icmp slt i32 %v3_10005dd4, -1
  %v3_10005dd8 = icmp eq i32 %v3_10005dd4, -1
  store i1 %v1_10005dd8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10005dd8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10005dd4, i32* @r29, align 4
  store i32 %v3_10005dd4, i32* @global_var_1001b474.111, align 4
  br i1 %v3_10005dd8, label %dec_label_pc_10006aec, label %dec_label_pc_10005dec

dec_label_pc_10005dec:                            ; preds = %dec_label_pc_10005dc0
  store i32 3, i32* @r4, align 4
  store i32 268459516, i32* @lr, align 4
  %v1_10005df8 = call i32 @function_100082e4(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_10005e04 = load i32, i32* @r29, align 4
  store i32 %v0_10005e04, i32* %r3.global-to-local, align 4
  store i32 268459536, i32* @lr, align 4
  %v2_10005e0c = call i32 @function_100082e4(i32 %v0_10005e04)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10005e14 = load i32, i32* @global_var_1001b474.111, align 4
  store i32 %v3_10005e14, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_10005e24 = ptrtoint i64* %stack_var_-1900 to i32
  store i32 %v2_10005e24, i32* %r6.global-to-local, align 4
  store i32 4, i32* %r7.global-to-local, align 4
  store i64 1, i64* %stack_var_-1900, align 8
  store i32 268459572, i32* @lr, align 4
  %v5_10005e30 = call i32 @function_10009078(i32 %v3_10005e14, i32 0, i32 3, i32 %v2_10005e24)
  store i32 %v5_10005e30, i32* %r3.global-to-local, align 4
  %v1_10005e34 = icmp slt i32 %v5_10005e30, 0
  %v3_10005e34 = icmp eq i32 %v5_10005e30, 0
  store i1 %v1_10005e34, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10005e34, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10005e34, label %dec_label_pc_10005e3c, label %dec_label_pc_1000772c

dec_label_pc_10005e3c:                            ; preds = %dec_label_pc_10005dec, %dec_label_pc_10005e3c
  %v0_10005e3c = call i32 @function_10005258()
  store i32 %v0_10005e3c, i32* %r3.global-to-local, align 4
  %v1_10005e40 = urem i32 %v0_10005e3c, 65536
  store i32 %v1_10005e40, i32* @r17, align 4
  %v1_10005e44 = icmp ult i32 %v1_10005e40, 1023
  %v3_10005e44 = icmp eq i32 %v1_10005e40, 1023
  store i1 %v1_10005e44, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10005e44, i1* %cr7_eq.global-to-local, align 1
  %tmp101 = icmp ult i32 %v1_10005e40, 1024
  br i1 %tmp101, label %dec_label_pc_10005e3c, label %dec_label_pc_10005e4c

dec_label_pc_10005e4c:                            ; preds = %dec_label_pc_10005e3c
  store i32 268566528, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r29.global-to-local, align 4
  %v3_10005e54 = load i32, i32* @global_var_1001b4e0.112, align 4
  store i32 %v3_10005e54, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001b4e0.112 to i32), i32* @r30, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10005e64 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10005e64, i32* %r0.global-to-local, align 4
  %v1_10005e6c = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10005e6c, i32* %r0.global-to-local, align 4
  store i32 40, i32* %r9.global-to-local, align 4
  store i32 %v1_10005e6c, i32* @global_var_1001b4e0.112, align 4
  store i32 ptrtoint (i32* @global_var_1000ad74.114 to i32), i32* @r26, align 4
  store i16 40, i16* bitcast (i32* @global_var_1001b4e2.115 to i16*), align 4
  %v0_10005e80 = call i32 @function_10005258()
  %v1_10005e80 = trunc i32 %v0_10005e80 to i16
  store i32 %v0_10005e80, i32* %r3.global-to-local, align 4
  %v3_10005e84 = load i32, i32* @global_var_1001b500.116, align 4
  store i32 %v3_10005e84, i32* %r11.global-to-local, align 4
  store i32 64, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r9.global-to-local, align 4
  store i8 64, i8* bitcast (i32* @global_var_1001b4e8.117 to i8*), align 4
  %v1_10005e94 = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_10005e94, i32* %r11.global-to-local, align 4
  store i32 23, i32* %r0.global-to-local, align 4
  %v0_10005e9c = load i32, i32* %r9.global-to-local, align 4
  %v1_10005e9c = trunc i32 %v0_10005e9c to i8
  store i8 %v1_10005e9c, i8* bitcast (i32* @global_var_1001b4e9.118 to i8*), align 4
  store i16 %v1_10005e80, i16* bitcast (i32* @global_var_1001b4e4.119 to i16*), align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000adf0.120 to i32), i32* @r29, align 4
  store i32 %v1_10005e94, i32* @global_var_1001b500.116, align 4
  store i16 23, i16* @global_var_1001b4f6.121, align 2
  store i32 ptrtoint (i32* @global_var_1000abf4.122 to i32), i32* @r28, align 4
  %v0_10005ebc = load i32, i32* @r17, align 4
  %v1_10005ebc = trunc i32 %v0_10005ebc to i16
  store i16 %v1_10005ebc, i16* bitcast (i32* @global_var_1001b4f4.113 to i16*), align 4
  store i32 268500992, i32* %r25.global-to-local, align 4
  %v0_10005ec4 = call i32 @function_10005258()
  %v1_10005ec4 = trunc i32 %v0_10005ec4 to i16
  %v0_10005ec8 = load i32, i32* @r26, align 4
  store i32 %v0_10005ec8, i32* %r4.global-to-local, align 4
  store i16 %v1_10005ec4, i16* bitcast (i32* @global_var_1001b502.123 to i16*), align 4
  %v0_10005ed4 = load i32, i32* @r29, align 4
  store i32 %v0_10005ed4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000ac00.124 to i32), i32* @r25, align 4
  %v3_10005edc = load i32, i32* @global_var_1001b500.116, align 4
  store i32 ptrtoint (i32* @global_var_1000ac0c.125 to i32), i32* @r24, align 4
  %v1_10005eec = or i32 %v3_10005edc, 131072
  store i32 %v1_10005eec, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000ac14.126 to i32), i32* @r23, align 4
  store i32 %v1_10005eec, i32* @global_var_1001b500.116, align 4
  store i32 ptrtoint (i32* @global_var_1000ac1c.127 to i32), i32* @r22, align 4
  store i32 268500992, i32* %r21.global-to-local, align 4
  store i32 268459784, i32* @lr, align 4
  %v4_10005f04 = call i32 @function_10005ab8(i32 %v0_10005ed4, i32 %v0_10005ec8, i32 1)
  %v0_10005f08 = load i32, i32* @r29, align 4
  store i32 %v0_10005f08, i32* %r3.global-to-local, align 4
  %v0_10005f0c = load i32, i32* @r28, align 4
  store i32 %v0_10005f0c, i32* %r4.global-to-local, align 4
  store i32 268459800, i32* @lr, align 4
  %v4_10005f14 = call i32 @function_10005ab8(i32 %v0_10005f08, i32 %v0_10005f0c, i32 2)
  %v0_10005f18 = load i32, i32* @r29, align 4
  store i32 %v0_10005f18, i32* %r3.global-to-local, align 4
  store i32 %v0_10005f18, i32* %r4.global-to-local, align 4
  store i32 268459816, i32* @lr, align 4
  %v5_10005f24 = call i32 @function_10005ab8(i32 %v0_10005f18, i32 %v0_10005f18, i32 10)
  %v0_10005f2c = load i32, i32* @r29, align 4
  store i32 %v0_10005f2c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000abf8.128 to i32), i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000ac38.129 to i32), i32* %r21.global-to-local, align 4
  store i32 268459840, i32* @lr, align 4
  %v4_10005f3c = call i32 @function_10005ab8(i32 %v0_10005f2c, i32 ptrtoint (i32* @global_var_1000abf8.128 to i32), i32 5)
  %v0_10005f44 = load i32, i32* @r29, align 4
  store i32 %v0_10005f44, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000ac70.130 to i32), i32* %r4.global-to-local, align 4
  store i32 268500992, i32* %r20.global-to-local, align 4
  store i32 268459864, i32* @lr, align 4
  %v4_10005f54 = call i32 @function_10005ab8(i32 %v0_10005f44, i32 ptrtoint (i32* @global_var_1000ac70.130 to i32), i32 8)
  %v0_10005f58 = load i32, i32* @r29, align 4
  store i32 %v0_10005f58, i32* %r3.global-to-local, align 4
  %v0_10005f5c = load i32, i32* @r25, align 4
  store i32 %v0_10005f5c, i32* %r4.global-to-local, align 4
  store i32 268459880, i32* @lr, align 4
  %v4_10005f64 = call i32 @function_10005ab8(i32 %v0_10005f58, i32 %v0_10005f5c, i32 1)
  %v0_10005f6c = load i32, i32* @r29, align 4
  store i32 %v0_10005f6c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000ac08.131 to i32), i32* %r4.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1000ac64.132 to i32), i32* %r20.global-to-local, align 4
  store i32 268459904, i32* @lr, align 4
  %v4_10005f7c = call i32 @function_10005ab8(i32 %v0_10005f6c, i32 ptrtoint (i32* @global_var_1000ac08.131 to i32), i32 3)
  %v0_10005f80 = load i32, i32* @r29, align 4
  store i32 %v0_10005f80, i32* %r3.global-to-local, align 4
  %v0_10005f84 = load i32, i32* @r28, align 4
  store i32 %v0_10005f84, i32* %r4.global-to-local, align 4
  store i32 268459920, i32* @lr, align 4
  %v4_10005f8c = call i32 @function_10005ab8(i32 %v0_10005f80, i32 %v0_10005f84, i32 7)
  %v0_10005f90 = load i32, i32* @r29, align 4
  store i32 %v0_10005f90, i32* %r3.global-to-local, align 4
  %v0_10005f94 = load i32, i32* @r24, align 4
  store i32 %v0_10005f94, i32* %r4.global-to-local, align 4
  store i32 268459936, i32* @lr, align 4
  %v4_10005f9c = call i32 @function_10005ab8(i32 %v0_10005f90, i32 %v0_10005f94, i32 5)
  %v0_10005fa0 = load i32, i32* @r29, align 4
  store i32 %v0_10005fa0, i32* %r3.global-to-local, align 4
  %v0_10005fa4 = load i32, i32* @r23, align 4
  store i32 %v0_10005fa4, i32* %r4.global-to-local, align 4
  store i32 268459952, i32* @lr, align 4
  %v4_10005fac = call i32 @function_10005ab8(i32 %v0_10005fa0, i32 %v0_10005fa4, i32 15)
  %v0_10005fb0 = load i32, i32* @r29, align 4
  store i32 %v0_10005fb0, i32* %r3.global-to-local, align 4
  %v0_10005fb4 = load i32, i32* @r22, align 4
  store i32 %v0_10005fb4, i32* %r4.global-to-local, align 4
  store i32 268459968, i32* @lr, align 4
  %v4_10005fbc = call i32 @function_10005ab8(i32 %v0_10005fb0, i32 %v0_10005fb4, i32 12)
  %v0_10005fc4 = load i32, i32* @r29, align 4
  store i32 %v0_10005fc4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000ac24.133 to i32), i32* %r4.global-to-local, align 4
  store i32 268500992, i32* @r28, align 4
  store i32 268459992, i32* @lr, align 4
  %v5_10005fd4 = call i32 @function_10005ab8(i32 %v0_10005fc4, i32 ptrtoint ([7 x i8]* @global_var_1000ac24.133 to i32), i32 5)
  %v0_10005fdc = load i32, i32* @r29, align 4
  store i32 %v0_10005fdc, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000ac2c.134 to i32), i32* %r4.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000aca4.135 to i32), i32* @r28, align 4
  store i32 268460016, i32* @lr, align 4
  %v4_10005fec = call i32 @function_10005ab8(i32 %v0_10005fdc, i32 ptrtoint (i32* @global_var_1000ac2c.134 to i32), i32 5)
  %v0_10005ff0 = load i32, i32* @r29, align 4
  store i32 %v0_10005ff0, i32* %r3.global-to-local, align 4
  %v0_10005ff4 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10005ff4, i32* %r4.global-to-local, align 4
  store i32 268460032, i32* @lr, align 4
  %v4_10005ffc = call i32 @function_10005ab8(i32 %v0_10005ff0, i32 %v0_10005ff4, i32 7)
  %v0_10006004 = load i32, i32* @r29, align 4
  store i32 %v0_10006004, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000ac44.136 to i32), i32* %r4.global-to-local, align 4
  store i32 268460056, i32* @lr, align 4
  %v4_10006014 = call i32 @function_10005ab8(i32 %v0_10006004, i32 ptrtoint (i32* @global_var_1000ac44.136 to i32), i32 1)
  %v0_1000601c = load i32, i32* @r29, align 4
  store i32 %v0_1000601c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000ac4c.137 to i32), i32* %r4.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000acac.138 to i32), i32* @r27, align 4
  store i32 268460080, i32* @lr, align 4
  %v4_1000602c = call i32 @function_10005ab8(i32 %v0_1000601c, i32 ptrtoint (i32* @global_var_1000ac4c.137 to i32), i32 1)
  %v0_10006034 = load i32, i32* @r29, align 4
  store i32 %v0_10006034, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000ac58.139 to i32), i32* %r4.global-to-local, align 4
  store i32 268500992, i32* %r19.global-to-local, align 4
  store i32 268460104, i32* @lr, align 4
  %v4_10006044 = call i32 @function_10005ab8(i32 %v0_10006034, i32 ptrtoint (i32* @global_var_1000ac58.139 to i32), i32 7)
  %v0_10006048 = load i32, i32* @r29, align 4
  store i32 %v0_10006048, i32* %r3.global-to-local, align 4
  %v0_1000604c = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_1000604c, i32* %r4.global-to-local, align 4
  store i32 268460120, i32* @lr, align 4
  %v5_10006054 = call i32 @function_10005ab8(i32 %v0_10006048, i32 %v0_1000604c, i32 1)
  %v0_1000605c = load i32, i32* @r29, align 4
  store i32 %v0_1000605c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000ac6c.140 to i32), i32* %r4.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1000accc.141 to i32), i32* %r19.global-to-local, align 4
  store i32 268460144, i32* @lr, align 4
  %v4_1000606c = call i32 @function_10005ab8(i32 %v0_1000605c, i32 ptrtoint (i32* @global_var_1000ac6c.140 to i32), i32 4)
  %v0_10006074 = load i32, i32* @r29, align 4
  store i32 %v0_10006074, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000ac74.142 to i32), i32* %r4.global-to-local, align 4
  store i32 268500992, i32* %r18.global-to-local, align 4
  store i32 268460168, i32* @lr, align 4
  %v5_10006084 = call i32 @function_10005ab8(i32 %v0_10006074, i32 ptrtoint ([7 x i8]* @global_var_1000ac74.142 to i32), i32 5)
  %v0_1000608c = load i32, i32* @r29, align 4
  store i32 %v0_1000608c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000ac7c.143 to i32), i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000acf0.144 to i32), i32* %r18.global-to-local, align 4
  store i32 268460192, i32* @lr, align 4
  %v5_1000609c = call i32 @function_10005ab8(i32 %v0_1000608c, i32 ptrtoint ([6 x i8]* @global_var_1000ac7c.143 to i32), i32 2)
  %v0_100060a4 = load i32, i32* @r29, align 4
  store i32 %v0_100060a4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000ac84.145 to i32), i32* %r4.global-to-local, align 4
  %v2_100060b0 = ptrtoint i32* %stack_var_-1728 to i32
  store i32 %v2_100060b0, i32* %r14.global-to-local, align 4
  store i32 268460216, i32* @lr, align 4
  %v5_100060b4 = call i32 @function_10005ab8(i32 %v0_100060a4, i32 ptrtoint ([5 x i8]* @global_var_1000ac84.145 to i32), i32 7)
  %v0_100060bc = load i32, i32* @r29, align 4
  store i32 %v0_100060bc, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1000ac8c.146 to i32), i32* %r4.global-to-local, align 4
  store i32 268460236, i32* @lr, align 4
  %v5_100060c8 = call i32 @function_10005ab8(i32 %v0_100060bc, i32 ptrtoint ([8 x i8]* @global_var_1000ac8c.146 to i32), i32 5)
  %v0_100060d0 = load i32, i32* @r29, align 4
  store i32 %v0_100060d0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000ac94.147 to i32), i32* %r4.global-to-local, align 4
  store i32 268460256, i32* @lr, align 4
  %v4_100060dc = call i32 @function_10005ab8(i32 %v0_100060d0, i32 ptrtoint (i32* @global_var_1000ac94.147 to i32), i32 15)
  %v0_100060e4 = load i32, i32* @r29, align 4
  store i32 %v0_100060e4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000ac9c.148 to i32), i32* %r4.global-to-local, align 4
  store i32 268460276, i32* @lr, align 4
  %v5_100060f0 = call i32 @function_10005ab8(i32 %v0_100060e4, i32 ptrtoint ([6 x i8]* @global_var_1000ac9c.148 to i32), i32 6)
  %v0_100060f4 = load i32, i32* @r29, align 4
  store i32 %v0_100060f4, i32* %r3.global-to-local, align 4
  %v0_100060f8 = load i32, i32* @r28, align 4
  store i32 %v0_100060f8, i32* %r4.global-to-local, align 4
  store i32 268460292, i32* @lr, align 4
  %v5_10006100 = call i32 @function_10005ab8(i32 %v0_100060f4, i32 %v0_100060f8, i32 5)
  %v0_10006104 = load i32, i32* @r29, align 4
  store i32 %v0_10006104, i32* %r3.global-to-local, align 4
  %v0_10006108 = load i32, i32* @r27, align 4
  store i32 %v0_10006108, i32* %r4.global-to-local, align 4
  store i32 268460308, i32* @lr, align 4
  %v5_10006110 = call i32 @function_10005ab8(i32 %v0_10006104, i32 %v0_10006108, i32 3)
  %v0_10006118 = load i32, i32* @r29, align 4
  store i32 %v0_10006118, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1000acb4.149 to i32), i32* %r4.global-to-local, align 4
  store i32 268460328, i32* @lr, align 4
  %v5_10006124 = call i32 @function_10005ab8(i32 %v0_10006118, i32 ptrtoint ([8 x i8]* @global_var_1000acb4.149 to i32), i32 4)
  %v0_1000612c = load i32, i32* @r29, align 4
  store i32 %v0_1000612c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000acbc.150 to i32), i32* %r4.global-to-local, align 4
  store i32 268460348, i32* @lr, align 4
  %v4_10006138 = call i32 @function_10005ab8(i32 %v0_1000612c, i32 ptrtoint (i32* @global_var_1000acbc.150 to i32), i32 3)
  %v0_10006140 = load i32, i32* @r29, align 4
  store i32 %v0_10006140, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000acc4.151 to i32), i32* %r4.global-to-local, align 4
  store i32 268460368, i32* @lr, align 4
  %v4_1000614c = call i32 @function_10005ab8(i32 %v0_10006140, i32 ptrtoint (i32* @global_var_1000acc4.151 to i32), i32 2)
  %v0_10006150 = load i32, i32* @r29, align 4
  store i32 %v0_10006150, i32* %r3.global-to-local, align 4
  %v0_10006154 = load i32, i32* %r19.global-to-local, align 4
  store i32 %v0_10006154, i32* %r4.global-to-local, align 4
  store i32 268460384, i32* @lr, align 4
  %v5_1000615c = call i32 @function_10005ab8(i32 %v0_10006150, i32 %v0_10006154, i32 1)
  %v0_10006164 = load i32, i32* @r29, align 4
  store i32 %v0_10006164, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000acd8.152 to i32), i32* %r4.global-to-local, align 4
  store i32 268460404, i32* @lr, align 4
  %v4_10006170 = call i32 @function_10005ab8(i32 %v0_10006164, i32 ptrtoint (i32* @global_var_1000acd8.152 to i32), i32 2)
  %v0_10006178 = load i32, i32* @r29, align 4
  store i32 %v0_10006178, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000ace4.153 to i32), i32* %r4.global-to-local, align 4
  store i32 268460424, i32* @lr, align 4
  %v4_10006184 = call i32 @function_10005ab8(i32 %v0_10006178, i32 ptrtoint (i32* @global_var_1000ace4.153 to i32), i32 2)
  %v0_10006188 = load i32, i32* @r29, align 4
  store i32 %v0_10006188, i32* %r3.global-to-local, align 4
  %v0_1000618c = load i32, i32* %r18.global-to-local, align 4
  store i32 %v0_1000618c, i32* %r4.global-to-local, align 4
  store i32 268460440, i32* @lr, align 4
  %v4_10006194 = call i32 @function_10005ab8(i32 %v0_10006188, i32 %v0_1000618c, i32 7)
  store i32 ptrtoint ([11 x i8]* @global_var_1000ad00.154 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000ad0c.155 to i32), i32* %r4.global-to-local, align 4
  store i32 268460464, i32* @lr, align 4
  %v4_100061ac = call i32 @function_10005ab8(i32 ptrtoint ([11 x i8]* @global_var_1000ad00.154 to i32), i32 ptrtoint (i32* @global_var_1000ad0c.155 to i32), i32 2)
  %v0_100061b0 = load i32, i32* @r28, align 4
  store i32 %v0_100061b0, i32* %r3.global-to-local, align 4
  %v0_100061b4 = load i32, i32* @r27, align 4
  store i32 %v0_100061b4, i32* %r4.global-to-local, align 4
  store i32 268460480, i32* @lr, align 4
  %v5_100061bc = call i32 @function_10005ab8(i32 %v0_100061b0, i32 %v0_100061b4, i32 5)
  %v0_100061c0 = load i32, i32* @r28, align 4
  store i32 %v0_100061c0, i32* %r3.global-to-local, align 4
  %v0_100061c4 = load i32, i32* @r25, align 4
  store i32 %v0_100061c4, i32* %r4.global-to-local, align 4
  store i32 268460496, i32* @lr, align 4
  %v4_100061cc = call i32 @function_10005ab8(i32 %v0_100061c0, i32 %v0_100061c4, i32 3)
  %v0_100061d0 = load i32, i32* @r28, align 4
  store i32 %v0_100061d0, i32* %r3.global-to-local, align 4
  %v0_100061d4 = load i32, i32* @r24, align 4
  store i32 %v0_100061d4, i32* %r4.global-to-local, align 4
  store i32 268460512, i32* @lr, align 4
  %v4_100061dc = call i32 @function_10005ab8(i32 %v0_100061d0, i32 %v0_100061d4, i32 3)
  %v0_100061e0 = load i32, i32* @r28, align 4
  store i32 %v0_100061e0, i32* %r3.global-to-local, align 4
  %v0_100061e4 = load i32, i32* @r23, align 4
  store i32 %v0_100061e4, i32* %r4.global-to-local, align 4
  store i32 268460528, i32* @lr, align 4
  %v4_100061ec = call i32 @function_10005ab8(i32 %v0_100061e0, i32 %v0_100061e4, i32 3)
  %v0_100061f0 = load i32, i32* @r28, align 4
  store i32 %v0_100061f0, i32* %r3.global-to-local, align 4
  %v0_100061f4 = load i32, i32* @r22, align 4
  store i32 %v0_100061f4, i32* %r4.global-to-local, align 4
  store i32 268460544, i32* @lr, align 4
  %v4_100061fc = call i32 @function_10005ab8(i32 %v0_100061f0, i32 %v0_100061f4, i32 3)
  %v0_10006200 = load i32, i32* @r28, align 4
  store i32 %v0_10006200, i32* %r3.global-to-local, align 4
  %v0_10006204 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10006204, i32* %r4.global-to-local, align 4
  store i32 268460560, i32* @lr, align 4
  %v4_1000620c = call i32 @function_10005ab8(i32 %v0_10006200, i32 %v0_10006204, i32 4)
  store i32 ptrtoint (i32* @global_var_1000ad18.156 to i32), i32* %r4.global-to-local, align 4
  %v0_1000621c = load i32, i32* @r28, align 4
  store i32 %v0_1000621c, i32* %r3.global-to-local, align 4
  store i32 268500992, i32* @r29, align 4
  store i32 268460584, i32* @lr, align 4
  %v4_10006224 = call i32 @function_10005ab8(i32 %v0_1000621c, i32 ptrtoint (i32* @global_var_1000ad18.156 to i32), i32 7)
  %v0_10006228 = load i32, i32* @r28, align 4
  store i32 %v0_10006228, i32* %r3.global-to-local, align 4
  %v0_1000622c = load i32, i32* %r19.global-to-local, align 4
  store i32 %v0_1000622c, i32* %r4.global-to-local, align 4
  store i32 268460600, i32* @lr, align 4
  %v5_10006234 = call i32 @function_10005ab8(i32 %v0_10006228, i32 %v0_1000622c, i32 1)
  store i32 ptrtoint (i32* @global_var_1000ad20.157 to i32), i32* %r4.global-to-local, align 4
  %v0_10006240 = load i32, i32* @r28, align 4
  store i32 %v0_10006240, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1000ad9c.158 to i32), i32* @r29, align 4
  store i32 268460624, i32* @lr, align 4
  %v4_1000624c = call i32 @function_10005ab8(i32 %v0_10006240, i32 ptrtoint (i32* @global_var_1000ad20.157 to i32), i32 5)
  store i32 ptrtoint ([14 x i8]* @global_var_1000ad28.159 to i32), i32* %r3.global-to-local, align 4
  %v0_10006258 = load i32, i32* @r26, align 4
  store i32 %v0_10006258, i32* %r4.global-to-local, align 4
  store i32 268460644, i32* @lr, align 4
  %v4_10006260 = call i32 @function_10005ab8(i32 ptrtoint ([14 x i8]* @global_var_1000ad28.159 to i32), i32 %v0_10006258, i32 5)
  store i32 ptrtoint ([14 x i8]* @global_var_1000ad38.160 to i32), i32* %r3.global-to-local, align 4
  %v0_1000626c = load i32, i32* @r24, align 4
  store i32 %v0_1000626c, i32* %r4.global-to-local, align 4
  store i32 268460664, i32* @lr, align 4
  %v4_10006274 = call i32 @function_10005ab8(i32 ptrtoint ([14 x i8]* @global_var_1000ad38.160 to i32), i32 %v0_1000626c, i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1000ad48.161 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000ad48.161 to i32), i32* %r4.global-to-local, align 4
  store i32 268460684, i32* @lr, align 4
  %v4_10006288 = call i32 @function_10005ab8(i32 ptrtoint ([6 x i8]* @global_var_1000ad48.161 to i32), i32 3, i32 3)
  store i32 ptrtoint ([4 x i8]* @global_var_1000ad50.162 to i32), i32* %r3.global-to-local, align 4
  %v0_10006298 = load i32, i32* @r26, align 4
  store i32 %v0_10006298, i32* %r4.global-to-local, align 4
  store i32 268460704, i32* @lr, align 4
  %v4_1000629c = call i32 @function_10005ab8(i32 ptrtoint ([4 x i8]* @global_var_1000ad50.162 to i32), i32 %v0_10006298, i32 5)
  %v0_100062a0 = load i32, i32* @r28, align 4
  store i32 %v0_100062a0, i32* %r3.global-to-local, align 4
  store i32 %v0_100062a0, i32* %r4.global-to-local, align 4
  store i32 268460720, i32* @lr, align 4
  %v5_100062ac = call i32 @function_10005ab8(i32 %v0_100062a0, i32 %v0_100062a0, i32 15)
  %v0_100062b0 = load i32, i32* @r28, align 4
  store i32 %v0_100062b0, i32* %r3.global-to-local, align 4
  %v0_100062b4 = load i32, i32* %r18.global-to-local, align 4
  store i32 %v0_100062b4, i32* %r4.global-to-local, align 4
  store i32 268460736, i32* @lr, align 4
  %v4_100062bc = call i32 @function_10005ab8(i32 %v0_100062b0, i32 %v0_100062b4, i32 7)
  store i32 ptrtoint ([9 x i8]* @global_var_1000ad54.163 to i32), i32* %r4.global-to-local, align 4
  %v0_100062c8 = load i32, i32* @r28, align 4
  store i32 %v0_100062c8, i32* %r3.global-to-local, align 4
  store i32 268460756, i32* @lr, align 4
  %v5_100062d0 = call i32 @function_10005ab8(i32 %v0_100062c8, i32 ptrtoint ([9 x i8]* @global_var_1000ad54.163 to i32), i32 4)
  store i32 ptrtoint (i32* @global_var_1000ad60.164 to i32), i32* %r4.global-to-local, align 4
  %v0_100062dc = load i32, i32* @r28, align 4
  store i32 %v0_100062dc, i32* %r3.global-to-local, align 4
  store i32 268460776, i32* @lr, align 4
  %v4_100062e4 = call i32 @function_10005ab8(i32 %v0_100062dc, i32 ptrtoint (i32* @global_var_1000ad60.164 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_1000ad6c.165 to i32), i32* %r4.global-to-local, align 4
  %v0_100062f0 = load i32, i32* @r28, align 4
  store i32 %v0_100062f0, i32* %r3.global-to-local, align 4
  store i32 268460796, i32* @lr, align 4
  %v4_100062f8 = call i32 @function_10005ab8(i32 %v0_100062f0, i32 ptrtoint (i32* @global_var_1000ad6c.165 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_1000ad78.166 to i32), i32* %r4.global-to-local, align 4
  %v0_10006304 = load i32, i32* @r28, align 4
  store i32 %v0_10006304, i32* %r3.global-to-local, align 4
  store i32 268460816, i32* @lr, align 4
  %v4_1000630c = call i32 @function_10005ab8(i32 %v0_10006304, i32 ptrtoint (i32* @global_var_1000ad78.166 to i32), i32 7)
  %v0_10006314 = load i32, i32* @r28, align 4
  store i32 %v0_10006314, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000ad80.167 to i32), i32* %r4.global-to-local, align 4
  store i32 268460836, i32* @lr, align 4
  %v4_10006320 = call i32 @function_10005ab8(i32 %v0_10006314, i32 ptrtoint (i32* @global_var_1000ad80.167 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_1000ad8c.168 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000ad94.169 to i32), i32* %r4.global-to-local, align 4
  store i32 268460860, i32* @lr, align 4
  %v4_10006338 = call i32 @function_10005ab8(i32 ptrtoint (i32* @global_var_1000ad8c.168 to i32), i32 ptrtoint ([7 x i8]* @global_var_1000ad94.169 to i32), i32 15)
  %v0_1000633c = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_1000633c, i32* %r3.global-to-local, align 4
  %v0_10006340 = load i32, i32* @r26, align 4
  store i32 %v0_10006340, i32* %r4.global-to-local, align 4
  store i32 268460876, i32* @lr, align 4
  %v4_10006348 = call i32 @function_10005ab8(i32 %v0_1000633c, i32 %v0_10006340, i32 5)
  %v0_1000634c = load i32, i32* @r29, align 4
  store i32 %v0_1000634c, i32* %r3.global-to-local, align 4
  store i32 %v0_1000634c, i32* %r4.global-to-local, align 4
  store i32 268460892, i32* @lr, align 4
  %v5_10006358 = call i32 @function_10005ab8(i32 %v0_1000634c, i32 %v0_1000634c, i32 10)
  %v0_1000635c = load i32, i32* @r29, align 4
  store i32 %v0_1000635c, i32* %r3.global-to-local, align 4
  %v0_10006360 = load i32, i32* @r24, align 4
  store i32 %v0_10006360, i32* %r4.global-to-local, align 4
  store i32 268460908, i32* @lr, align 4
  %v4_10006368 = call i32 @function_10005ab8(i32 %v0_1000635c, i32 %v0_10006360, i32 7)
  %v0_1000636c = load i32, i32* @r29, align 4
  store i32 %v0_1000636c, i32* %r3.global-to-local, align 4
  %v0_10006374 = load i32, i32* @r22, align 4
  store i32 %v0_10006374, i32* %r4.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000ada4.170 to i32), i32* @r29, align 4
  store i32 268460932, i32* @lr, align 4
  %v4_10006380 = call i32 @function_10005ab8(i32 %v0_1000636c, i32 %v0_10006374, i32 7)
  %v0_10006384 = load i32, i32* @r29, align 4
  store i32 %v0_10006384, i32* %r3.global-to-local, align 4
  store i32 %v0_10006384, i32* %r4.global-to-local, align 4
  store i32 268460948, i32* @lr, align 4
  %v5_10006390 = call i32 @function_10005ab8(i32 %v0_10006384, i32 %v0_10006384, i32 15)
  %v0_10006394 = load i32, i32* @r29, align 4
  store i32 %v0_10006394, i32* %r3.global-to-local, align 4
  %v0_1000639c = load i32, i32* @r22, align 4
  store i32 %v0_1000639c, i32* %r4.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000adac.171 to i32), i32* @r29, align 4
  store i32 268460972, i32* @lr, align 4
  %v4_100063a8 = call i32 @function_10005ab8(i32 %v0_10006394, i32 %v0_1000639c, i32 3)
  %v0_100063ac = load i32, i32* @r25, align 4
  store i32 %v0_100063ac, i32* %r4.global-to-local, align 4
  %v0_100063b4 = load i32, i32* @r29, align 4
  store i32 %v0_100063b4, i32* %r3.global-to-local, align 4
  store i32 268460988, i32* @lr, align 4
  %v4_100063b8 = call i32 @function_10005ab8(i32 %v0_100063b4, i32 %v0_100063ac, i32 10)
  %v0_100063bc = load i32, i32* @r29, align 4
  store i32 %v0_100063bc, i32* %r3.global-to-local, align 4
  store i32 %v0_100063bc, i32* %r4.global-to-local, align 4
  store i32 268461004, i32* @lr, align 4
  %v5_100063c8 = call i32 @function_10005ab8(i32 %v0_100063bc, i32 %v0_100063bc, i32 3)
  %v0_100063cc = load i32, i32* @r29, align 4
  store i32 %v0_100063cc, i32* %r3.global-to-local, align 4
  %v0_100063d0 = load i32, i32* @r23, align 4
  store i32 %v0_100063d0, i32* %r4.global-to-local, align 4
  store i32 268461020, i32* @lr, align 4
  %v4_100063d8 = call i32 @function_10005ab8(i32 %v0_100063cc, i32 %v0_100063d0, i32 10)
  %v0_100063dc = load i32, i32* @r29, align 4
  store i32 %v0_100063dc, i32* %r3.global-to-local, align 4
  %v0_100063e0 = load i32, i32* @r22, align 4
  store i32 %v0_100063e0, i32* %r4.global-to-local, align 4
  store i32 268461036, i32* @lr, align 4
  %v4_100063e8 = call i32 @function_10005ab8(i32 %v0_100063dc, i32 %v0_100063e0, i32 1)
  store i32 ptrtoint ([7 x i8]* @global_var_1000adb4.172 to i32), i32* %r3.global-to-local, align 4
  %v0_100063f8 = load i32, i32* @r26, align 4
  store i32 %v0_100063f8, i32* %r4.global-to-local, align 4
  store i32 268461056, i32* @lr, align 4
  %v4_100063fc = call i32 @function_10005ab8(i32 ptrtoint ([7 x i8]* @global_var_1000adb4.172 to i32), i32 %v0_100063f8, i32 7)
  %v0_10006400 = load i32, i32* @r24, align 4
  store i32 %v0_10006400, i32* %r3.global-to-local, align 4
  store i32 %v0_10006400, i32* %r4.global-to-local, align 4
  store i32 268461072, i32* @lr, align 4
  %v3_1000640c = call i32 @function_10005ab8(i32 %v0_10006400, i32 %v0_10006400, i32 2)
  store i32 ptrtoint ([4 x i8]* @global_var_1000adbc.173 to i32), i32* %r3.global-to-local, align 4
  %v0_10006418 = load i32, i32* @r26, align 4
  store i32 %v0_10006418, i32* %r4.global-to-local, align 4
  store i32 268461092, i32* @lr, align 4
  %v4_10006420 = call i32 @function_10005ab8(i32 ptrtoint ([4 x i8]* @global_var_1000adbc.173 to i32), i32 %v0_10006418, i32 10)
  store i32 ptrtoint ([7 x i8]* @global_var_1000adc0.174 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000adc0.174 to i32), i32* %r4.global-to-local, align 4
  store i32 268461112, i32* @lr, align 4
  %v4_10006434 = call i32 @function_10005ab8(i32 ptrtoint ([7 x i8]* @global_var_1000adc0.174 to i32), i32 5, i32 5)
  store i32 ptrtoint ([9 x i8]* @global_var_1000adc8.175 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1000adc8.175 to i32), i32* %r4.global-to-local, align 4
  store i32 268461132, i32* @lr, align 4
  %v4_10006448 = call i32 @function_10005ab8(i32 ptrtoint ([9 x i8]* @global_var_1000adc8.175 to i32), i32 1, i32 1)
  store i32 %v4_10006448, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000644c

dec_label_pc_1000644c:                            ; preds = %dec_label_pc_1000692c, %dec_label_pc_10005e4c
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10006450 = load i32, i32* @global_var_1001b46c.104, align 4
  store i32 %v3_10006450, i32* @r29, align 4
  %v0_10006454 = load i32, i32* %r21.global-to-local, align 4
  %v2_10006454 = icmp slt i32 %v0_10006454, %v3_10006450
  %v4_10006454 = icmp eq i32 %v0_10006454, %v3_10006450
  store i1 %v2_10006454, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006454, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10006454, label %dec_label_pc_10006648, label %dec_label_pc_1000645c

dec_label_pc_1000645c:                            ; preds = %dec_label_pc_1000644c
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10006460 = ptrtoint i32* %stack_var_-1872 to i32
  store i32 %v2_10006460, i32* @r26, align 4
  store i64 0, i64* %stack_var_-1900, align 8
  store i32 0, i32* @r28, align 4
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_10006470

dec_label_pc_10006470:                            ; preds = %dec_label_pc_10006574.dec_label_pc_10006470_crit_edge, %dec_label_pc_1000645c
  %v0_10006470 = phi i32 [ %v0_10006470.pre, %dec_label_pc_10006574.dec_label_pc_10006470_crit_edge ], [ 0, %dec_label_pc_1000645c ]
  store i32 %v0_10006470, i32* %stack_var_-1872, align 4
  %v0_10006480 = call i32 @function_10005258()
  %v1_10006480 = trunc i32 %v0_10006480 to i16
  store i32 %v0_10006480, i32* %r3.global-to-local, align 4
  %v3_10006484 = load i32, i32* @global_var_1001b448.12, align 4
  store i32 %v3_10006484, i32* %r0.global-to-local, align 4
  store i16 %v1_10006480, i16* bitcast (i32* @global_var_1001b4e4.119 to i16*), align 4
  store i32 %v3_10006484, i32* @global_var_1001b4ec.176, align 4
  br label %dec_label_pc_10006490.preheader

dec_label_pc_10006490.preheader:                  ; preds = %dec_label_pc_10006470, %dec_label_pc_10006af4
  br label %dec_label_pc_10006490

dec_label_pc_10006490:                            ; preds = %dec_label_pc_1000656c, %dec_label_pc_10006564, %dec_label_pc_1000655c, %dec_label_pc_10006554, %dec_label_pc_1000654c, %dec_label_pc_10006544, %dec_label_pc_1000653c, %dec_label_pc_10006534, %dec_label_pc_1000652c, %dec_label_pc_10006524, %dec_label_pc_1000651c, %dec_label_pc_1000650c, %dec_label_pc_10006504, %dec_label_pc_100064d4, %dec_label_pc_100064cc, %dec_label_pc_100064bc, %dec_label_pc_100064b4, %dec_label_pc_100064ac, %dec_label_pc_10006490, %dec_label_pc_10006b3c, %dec_label_pc_10006b28, %dec_label_pc_10006b1c, %dec_label_pc_10006b08, %dec_label_pc_10006490.preheader
  %v0_10006490 = call i32 @function_10005258()
  store i32 %v0_10006490, i32* %r3.global-to-local, align 4
  %v1_10006494 = urem i32 %v0_10006490, 256
  store i32 %v1_10006494, i32* %r11.global-to-local, align 4
  %v1_10006498 = udiv i32 %v0_10006490, 16777216
  store i32 %v1_10006498, i32* %r10.global-to-local, align 4
  %v1_1000649c = icmp ult i32 %v1_10006494, 127
  %v3_1000649c = icmp eq i32 %v1_10006494, 127
  store i1 %v1_1000649c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000649c, i1* %cr7_eq.global-to-local, align 1
  %v1_100064a0 = call i32 @__asm_rlwinm(i32 %v0_10006490, i32 24, i32 24, i32 31)
  store i32 %v1_100064a0, i32* @r9, align 4
  %v1_100064a4 = call i32 @__asm_rlwinm(i32 %v0_10006490, i32 16, i32 24, i32 31)
  store i32 %v1_100064a4, i32* %r3.global-to-local, align 4
  %v0_100064a8 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100064a8, label %dec_label_pc_10006490, label %dec_label_pc_100064ac

dec_label_pc_100064ac:                            ; preds = %dec_label_pc_10006490
  %v0_100064ac = load i32, i32* %r11.global-to-local, align 4
  %v1_100064ac = icmp slt i32 %v0_100064ac, 0
  %v3_100064ac = icmp eq i32 %v0_100064ac, 0
  store i1 %v1_100064ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100064ac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100064ac, label %dec_label_pc_10006490, label %dec_label_pc_100064b4

dec_label_pc_100064b4:                            ; preds = %dec_label_pc_100064ac
  %v1_100064b4 = icmp slt i32 %v0_100064ac, 3
  %v3_100064b4 = icmp eq i32 %v0_100064ac, 3
  store i1 %v1_100064b4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100064b4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100064b4, label %dec_label_pc_10006490, label %dec_label_pc_100064bc

dec_label_pc_100064bc:                            ; preds = %dec_label_pc_100064b4
  %v1_100064bc = add i32 %v0_100064ac, 241
  %v1_100064c0 = urem i32 %v1_100064bc, 256
  store i32 %v1_100064c0, i32* %r0.global-to-local, align 4
  %v1_100064c4 = icmp eq i32 %v1_100064c0, 0
  %v3_100064c4 = icmp eq i32 %v1_100064c0, 1
  store i1 %v1_100064c4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100064c4, i1* %cr7_eq.global-to-local, align 1
  %tmp102 = or i32 %v1_100064c0, 1
  %tmp103 = icmp eq i32 %tmp102, 1
  br i1 %tmp103, label %dec_label_pc_10006490, label %dec_label_pc_100064cc

dec_label_pc_100064cc:                            ; preds = %dec_label_pc_100064bc
  %v1_100064cc = icmp slt i32 %v0_100064ac, 56
  %v3_100064cc = icmp eq i32 %v0_100064ac, 56
  store i1 %v1_100064cc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100064cc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100064cc, label %dec_label_pc_10006490, label %dec_label_pc_100064d4

dec_label_pc_100064d4:                            ; preds = %dec_label_pc_100064cc
  %v1_100064d4 = icmp slt i32 %v0_100064ac, 10
  %v3_100064d4 = icmp eq i32 %v0_100064ac, 10
  store i1 %v1_100064d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100064d4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100064d4, label %dec_label_pc_10006490, label %dec_label_pc_100064dc

dec_label_pc_100064dc:                            ; preds = %dec_label_pc_100064d4
  %v1_100064dc = icmp slt i32 %v0_100064ac, 192
  %v3_100064dc = icmp eq i32 %v0_100064ac, 192
  store i1 %v1_100064dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100064dc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100064dc, label %dec_label_pc_10006af4, label %dec_label_pc_100064e4

dec_label_pc_100064e4:                            ; preds = %dec_label_pc_100064dc
  %v1_100064e4 = icmp slt i32 %v0_100064ac, 172
  %v3_100064e4 = icmp eq i32 %v0_100064ac, 172
  store i1 %v1_100064e4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100064e4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100064e4, label %dec_label_pc_10006b00, label %dec_label_pc_100064ec

dec_label_pc_100064ec:                            ; preds = %dec_label_pc_100064e4
  %v1_100064ec = icmp slt i32 %v0_100064ac, 100
  %v3_100064ec = icmp eq i32 %v0_100064ac, 100
  store i1 %v1_100064ec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100064ec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100064ec, label %dec_label_pc_10006b14, label %dec_label_pc_100064f4

dec_label_pc_100064f4:                            ; preds = %dec_label_pc_100064ec
  %v1_100064f4 = icmp slt i32 %v0_100064ac, 169
  %v3_100064f4 = icmp eq i32 %v0_100064ac, 169
  store i1 %v1_100064f4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100064f4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100064f4, label %dec_label_pc_10006b28, label %dec_label_pc_100064fc

dec_label_pc_100064fc:                            ; preds = %dec_label_pc_100064f4
  %v1_100064fc = icmp slt i32 %v0_100064ac, 198
  %v3_100064fc = icmp eq i32 %v0_100064ac, 198
  store i1 %v1_100064fc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100064fc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100064fc, label %dec_label_pc_10006b34, label %dec_label_pc_10006504

dec_label_pc_10006504:                            ; preds = %dec_label_pc_100064fc
  %v1_10006504 = icmp ult i32 %v0_100064ac, 223
  %v2_10006504 = icmp ugt i32 %v0_100064ac, 223
  %v3_10006504 = icmp eq i32 %v0_100064ac, 223
  store i1 %v1_10006504, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006504, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10006504, label %dec_label_pc_10006490, label %dec_label_pc_1000650c

dec_label_pc_1000650c:                            ; preds = %dec_label_pc_10006504
  %v1_1000650c = add i32 %v0_100064ac, 250
  %v1_10006510 = urem i32 %v1_1000650c, 256
  store i32 %v1_10006510, i32* %r0.global-to-local, align 4
  %v1_10006514 = icmp eq i32 %v1_10006510, 0
  %v3_10006514 = icmp eq i32 %v1_10006510, 1
  store i1 %v1_10006514, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006514, i1* %cr7_eq.global-to-local, align 1
  %tmp104 = or i32 %v1_10006510, 1
  %tmp105 = icmp eq i32 %tmp104, 1
  br i1 %tmp105, label %dec_label_pc_10006490, label %dec_label_pc_1000651c

dec_label_pc_1000651c:                            ; preds = %dec_label_pc_1000650c
  %v1_1000651c = icmp slt i32 %v0_100064ac, 11
  %v3_1000651c = icmp eq i32 %v0_100064ac, 11
  store i1 %v1_1000651c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000651c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000651c, label %dec_label_pc_10006490, label %dec_label_pc_10006524

dec_label_pc_10006524:                            ; preds = %dec_label_pc_1000651c
  %v1_10006524 = icmp slt i32 %v0_100064ac, 21
  %v3_10006524 = icmp eq i32 %v0_100064ac, 21
  store i1 %v1_10006524, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006524, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006524, label %dec_label_pc_10006490, label %dec_label_pc_1000652c

dec_label_pc_1000652c:                            ; preds = %dec_label_pc_10006524
  %v1_1000652c = icmp slt i32 %v0_100064ac, 22
  %v3_1000652c = icmp eq i32 %v0_100064ac, 22
  store i1 %v1_1000652c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000652c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000652c, label %dec_label_pc_10006490, label %dec_label_pc_10006534

dec_label_pc_10006534:                            ; preds = %dec_label_pc_1000652c
  %v1_10006534 = icmp slt i32 %v0_100064ac, 26
  %v3_10006534 = icmp eq i32 %v0_100064ac, 26
  store i1 %v1_10006534, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006534, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006534, label %dec_label_pc_10006490, label %dec_label_pc_1000653c

dec_label_pc_1000653c:                            ; preds = %dec_label_pc_10006534
  %v1_1000653c = icmp slt i32 %v0_100064ac, 28
  %v3_1000653c = icmp eq i32 %v0_100064ac, 28
  store i1 %v1_1000653c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000653c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000653c, label %dec_label_pc_10006490, label %dec_label_pc_10006544

dec_label_pc_10006544:                            ; preds = %dec_label_pc_1000653c
  %v1_10006544 = icmp slt i32 %v0_100064ac, 29
  %v3_10006544 = icmp eq i32 %v0_100064ac, 29
  store i1 %v1_10006544, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006544, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006544, label %dec_label_pc_10006490, label %dec_label_pc_1000654c

dec_label_pc_1000654c:                            ; preds = %dec_label_pc_10006544
  %v1_1000654c = icmp slt i32 %v0_100064ac, 30
  %v3_1000654c = icmp eq i32 %v0_100064ac, 30
  store i1 %v1_1000654c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000654c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000654c, label %dec_label_pc_10006490, label %dec_label_pc_10006554

dec_label_pc_10006554:                            ; preds = %dec_label_pc_1000654c
  %v1_10006554 = icmp slt i32 %v0_100064ac, 33
  %v3_10006554 = icmp eq i32 %v0_100064ac, 33
  store i1 %v1_10006554, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006554, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006554, label %dec_label_pc_10006490, label %dec_label_pc_1000655c

dec_label_pc_1000655c:                            ; preds = %dec_label_pc_10006554
  %v1_1000655c = icmp slt i32 %v0_100064ac, 55
  %v3_1000655c = icmp eq i32 %v0_100064ac, 55
  store i1 %v1_1000655c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000655c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000655c, label %dec_label_pc_10006490, label %dec_label_pc_10006564

dec_label_pc_10006564:                            ; preds = %dec_label_pc_1000655c
  %v1_10006564 = icmp slt i32 %v0_100064ac, 214
  %v3_10006564 = icmp eq i32 %v0_100064ac, 214
  store i1 %v1_10006564, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006564, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006564, label %dec_label_pc_10006490, label %dec_label_pc_1000656c

dec_label_pc_1000656c:                            ; preds = %dec_label_pc_10006564
  %v1_1000656c = icmp slt i32 %v0_100064ac, 215
  %v3_1000656c = icmp eq i32 %v0_100064ac, 215
  store i1 %v1_1000656c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000656c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000656c, label %dec_label_pc_10006490, label %dec_label_pc_1000656c.dec_label_pc_10006574.loopexit_crit_edge

dec_label_pc_1000656c.dec_label_pc_10006574.loopexit_crit_edge: ; preds = %dec_label_pc_1000656c
  %v0_10006578.pre.pre = load i32, i32* @r9, align 4
  br label %dec_label_pc_10006574

dec_label_pc_10006574:                            ; preds = %dec_label_pc_10006b3c, %dec_label_pc_10006b28, %dec_label_pc_10006b1c, %dec_label_pc_10006b08, %dec_label_pc_10006b34, %dec_label_pc_10006b14, %dec_label_pc_10006b00, %dec_label_pc_1000656c.dec_label_pc_10006574.loopexit_crit_edge, %dec_label_pc_10006af4.dec_label_pc_10006574_crit_edge
  %v0_10006580 = phi i32 [ %v0_1000658017, %dec_label_pc_10006af4.dec_label_pc_10006574_crit_edge ], [ %v1_100064a4, %dec_label_pc_1000656c.dec_label_pc_10006574.loopexit_crit_edge ], [ %v1_100064a4, %dec_label_pc_10006b00 ], [ %v1_100064a4, %dec_label_pc_10006b14 ], [ %v1_100064a4, %dec_label_pc_10006b34 ], [ %v1_100064a4, %dec_label_pc_10006b08 ], [ %v1_100064a4, %dec_label_pc_10006b1c ], [ %v1_100064a4, %dec_label_pc_10006b28 ], [ %v1_100064a4, %dec_label_pc_10006b3c ]
  %v0_10006578 = phi i32 [ %v0_10006af4, %dec_label_pc_10006af4.dec_label_pc_10006574_crit_edge ], [ %v0_10006578.pre.pre, %dec_label_pc_1000656c.dec_label_pc_10006574.loopexit_crit_edge ], [ %v0_10006b00, %dec_label_pc_10006b00 ], [ %v0_10006b14, %dec_label_pc_10006b14 ], [ %v0_10006b34, %dec_label_pc_10006b34 ], [ %v0_10006b00, %dec_label_pc_10006b08 ], [ %v0_10006b14, %dec_label_pc_10006b1c ], [ %v0_10006b28, %dec_label_pc_10006b28 ], [ %v0_10006b34, %dec_label_pc_10006b3c ]
  %v0_10006574 = phi i32 [ %v0_10006574.pre, %dec_label_pc_10006af4.dec_label_pc_10006574_crit_edge ], [ %v0_100064ac, %dec_label_pc_1000656c.dec_label_pc_10006574.loopexit_crit_edge ], [ 172, %dec_label_pc_10006b00 ], [ 100, %dec_label_pc_10006b14 ], [ 198, %dec_label_pc_10006b34 ], [ 172, %dec_label_pc_10006b08 ], [ 100, %dec_label_pc_10006b1c ], [ 169, %dec_label_pc_10006b28 ], [ 198, %dec_label_pc_10006b3c ]
  %v1_10006574 = mul i32 %v0_10006574, 16777216
  %v1_10006578 = mul i32 %v0_10006578, 65536
  %v2_1000657c = or i32 %v1_10006574, %v1_10006578
  %v1_10006580 = mul i32 %v0_10006580, 256
  %v1_10006584 = load i32, i32* %r10.global-to-local, align 4
  %v2_10006584 = or i32 %v2_1000657c, %v1_10006584
  store i32 %v2_10006584, i32* %r0.global-to-local, align 4
  %v0_10006588 = load i32, i32* @r30, align 4
  store i32 %v0_10006588, i32* @r3, align 4
  %v2_1000658c = or i32 %v2_10006584, %v1_10006580
  store i32 %v2_1000658c, i32* %r9.global-to-local, align 4
  store i32 20, i32* %r4.global-to-local, align 4
  store i32 %v2_1000658c, i32* @global_var_1001b4f0.178, align 4
  %v0_10006598 = load i32, i32* @r27, align 4
  %v1_10006598 = trunc i32 %v0_10006598 to i16
  store i16 %v1_10006598, i16* bitcast (i32* @global_var_1001b4ea.179 to i16*), align 4
  %v2_1000659c = call i32 @function_10003ca8(i32 %v0_10006588, i32 20)
  %v3_1000659c = trunc i32 %v2_1000659c to i16
  %v3_100065a0 = load i64, i64* %stack_var_-1900, align 8
  %v4_100065a0 = trunc i64 %v3_100065a0 to i32
  store i32 %v4_100065a0, i32* %r9.global-to-local, align 4
  store i16 %v3_1000659c, i16* bitcast (i32* @global_var_1001b4ea.179 to i16*), align 4
  %v4_100065b0 = mul nsw i64 %v3_100065a0, 1717986919
  %v5_100065b0 = udiv i64 %v4_100065b0, 4294967296
  %v6_100065b0 = trunc i64 %v5_100065b0 to i32
  %tmp = icmp slt i32 %v4_100065a0, 0
  %v1_100065b4 = zext i1 %tmp to i32
  %v2_100065b4 = ashr i32 %v4_100065a0, 31
  %v3_100065b4 = and i32 %v2_100065b4, -2
  %v4_100065b4 = or i32 %v3_100065b4, %v1_100065b4
  store i32 %v4_100065b4, i32* %r11.global-to-local, align 4
  %v1_100065b846 = udiv i64 %v4_100065b0, 17179869184
  %v1_100065b8 = trunc i64 %v1_100065b846 to i32
  %v2_100065b8 = ashr i32 %v6_100065b0, 31
  %v3_100065b8 = and i32 %v2_100065b8, -1073741824
  %v4_100065b8 = or i32 %v3_100065b8, %v1_100065b8
  %v2_100065bc = sub nsw i32 %v4_100065b8, %v4_100065b4
  %v1_100065c0 = mul i32 %v2_100065bc, 10
  %v2_100065c4 = icmp slt i32 %v4_100065a0, %v1_100065c0
  %v4_100065c4 = icmp eq i32 %v4_100065a0, %v1_100065c0
  store i1 %v2_100065c4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100065c4, i1* %cr7_eq.global-to-local, align 1
  %.4 = select i1 %v4_100065c4, i16 2323, i16 23
  store i16 %.4, i16* @global_var_1001b4f6.121, align 2
  %v3_100065d4 = load i32, i32* @global_var_1001b4f0.178, align 4
  store i32 %v3_100065d4, i32* %r0.global-to-local, align 4
  %v0_100065d8 = load i32, i32* @r31, align 4
  store i32 %v0_100065d8, i32* @r4, align 4
  %v0_100065dc = load i32, i32* @r27, align 4
  %v1_100065dc = trunc i32 %v0_100065dc to i16
  store i16 %v1_100065dc, i16* bitcast (i32* @global_var_1001b504.180 to i16*), align 4
  store i32 %v3_100065d4, i32* @global_var_1001b4f8.181, align 4
  store i32 20, i32* %r6.global-to-local, align 4
  %v0_100065ec = load i32, i32* @r30, align 4
  store i32 %v0_100065ec, i32* %r3.global-to-local, align 4
  %v4_100065f0 = call i32 @function_10003d0c(i32 %v0_100065ec, i32 %v0_100065d8, i32 20, i32 20)
  %v5_100065f0 = trunc i32 %v4_100065f0 to i16
  store i32 268566528, i32* %r10.global-to-local, align 4
  store i16 %v5_100065f0, i16* bitcast (i32* @global_var_1001b504.180 to i16*), align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_10006600 = load i32, i32* @global_var_1001b4f0.178, align 4
  store i32 %v3_10006600, i32* %r9.global-to-local, align 4
  %v0_10006604 = load i32, i32* @r30, align 4
  store i32 %v0_10006604, i32* %r4.global-to-local, align 4
  %v3_10006608 = load i16, i16* @global_var_1001b4f6.121, align 2
  %v4_10006608 = zext i16 %v3_10006608 to i32
  store i32 %v4_10006608, i32* %r11.global-to-local, align 4
  %v3_10006610 = load i32, i32* @global_var_1001b474.111, align 4
  store i32 %v3_10006610, i32* %r3.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10006618 = load i32, i32* @r26, align 4
  store i32 %v0_10006618, i32* %r7.global-to-local, align 4
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 2, i32* %stack_var_-1872, align 4
  store i32 268461616, i32* @lr, align 4
  %v6_1000662c = call i32 @function_10009038(i32 %v3_10006610, i32 %v0_10006604, i32 40, i32 16384, i32 %v0_10006618, i32 16)
  store i32 %v6_1000662c, i32* %r3.global-to-local, align 4
  %v3_10006630 = load i64, i64* %stack_var_-1900, align 8
  %v4_10006630 = trunc i64 %v3_10006630 to i32
  %v1_10006634 = add i32 %v4_10006630, 1
  store i32 %v1_10006634, i32* %r9.global-to-local, align 4
  %v1_10006638 = icmp slt i32 %v1_10006634, 383
  %v3_10006638 = icmp eq i32 %v1_10006634, 383
  store i1 %v1_10006638, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006638, i1* %cr7_eq.global-to-local, align 1
  %v5_1000663c = sext i32 %v1_10006634 to i64
  store i64 %v5_1000663c, i64* %stack_var_-1900, align 8
  %tmp106 = icmp slt i32 %v1_10006634, 384
  br i1 %tmp106, label %dec_label_pc_10006574.dec_label_pc_10006470_crit_edge, label %dec_label_pc_10006644

dec_label_pc_10006574.dec_label_pc_10006470_crit_edge: ; preds = %dec_label_pc_10006574
  %v0_10006470.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10006470

dec_label_pc_10006644:                            ; preds = %dec_label_pc_10006574
  %v0_10006644 = load i32, i32* @r29, align 4
  store i32 %v0_10006644, i32* %r21.global-to-local, align 4
  br label %dec_label_pc_10006648

dec_label_pc_10006648:                            ; preds = %dec_label_pc_1000644c, %dec_label_pc_10006644
  %v0_10006648 = call i32 @function_10008aa0()
  store i32 %v0_10006648, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  store i32 %v0_10006648, i32* %r22.global-to-local, align 4
  %v2_10006660 = ptrtoint i32* %stack_var_-1600 to i32
  %v4_100066a8 = zext i8 %tmp59 to i32
  %v1_100066ac = icmp ult i8 %tmp59, 6
  %v3_100066ac = icmp eq i8 %tmp59, 6
  %v4_100066b4 = zext i16 %tmp58 to i32
  %v1_100066bc = icmp ult i16 %tmp58, 23
  %v3_100066bc = icmp eq i16 %tmp58, 23
  %v4_100066cc = zext i16 %tmp57 to i32
  %v1_100066dc = and i32 %tmp56, 131072
  %v3_100066dc = icmp eq i32 %v1_100066dc, 0
  %v1_10006704 = add i32 %tmp55, -1
  %v2_10006708 = icmp slt i32 %v1_10006704, %tmp54
  %v4_10006708 = icmp eq i32 %v1_10006704, %tmp54
  %v1_100066e4 = and i32 %tmp56, 1048576
  %v3_100066e4 = icmp eq i32 %v1_100066e4, 0
  %v1_100066ec = and i32 %tmp56, 262144
  %v3_100066ec = icmp eq i32 %v1_100066ec, 0
  %v1_100066f4 = and i32 %tmp56, 65536
  %v3_100066f4 = icmp eq i32 %v1_100066f4, 0
  %v1_100066c4 = icmp ult i16 %tmp58, 2323
  %v3_100066c4 = icmp eq i16 %tmp58, 2323
  br label %dec_label_pc_10006654

dec_label_pc_10006654:                            ; preds = %dec_label_pc_100066fc, %dec_label_pc_100066f4, %dec_label_pc_100066ec, %dec_label_pc_100066cc, %dec_label_pc_100066c4, %dec_label_pc_100066a8, %dec_label_pc_10006698, %dec_label_pc_100066e4, %dec_label_pc_100066d8, %dec_label_pc_10006690, %dec_label_pc_10006648
  %v1_1000665c = phi i32 [ %v0_10006648, %dec_label_pc_10006648 ], [ %v0_10006684, %dec_label_pc_10006690 ], [ %v0_10006684, %dec_label_pc_100066d8 ], [ %v0_10006684, %dec_label_pc_100066e4 ], [ %v0_10006684, %dec_label_pc_10006698 ], [ %v0_10006684, %dec_label_pc_100066a8 ], [ %v0_10006684, %dec_label_pc_100066c4 ], [ %v0_10006684, %dec_label_pc_100066cc ], [ %v0_10006684, %dec_label_pc_100066ec ], [ %v0_10006684, %dec_label_pc_100066f4 ], [ %v0_10006684, %dec_label_pc_100066fc ]
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v2_1000665c = inttoptr i32 %v1_1000665c to i32*
  store i32 0, i32* %v2_1000665c, align 4
  store i32 %v2_10006660, i32* %r4.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v3_1000666c = load i32, i32* @global_var_1001b474.111, align 4
  store i32 %v3_1000666c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 268461692, i32* @lr, align 4
  %v6_10006678 = call i32 @function_10008fc0(i32 %v3_1000666c, i32 %v2_10006660, i32 1514, i32 16384, i32 0, i32 0)
  store i32 %v6_10006678, i32* %r3.global-to-local, align 4
  %tmp107 = icmp slt i32 %v6_10006678, 1
  br i1 %tmp107, label %dec_label_pc_100067a0, label %dec_label_pc_10006684

dec_label_pc_10006684:                            ; preds = %dec_label_pc_10006654, %dec_label_pc_10006764
  %v0_10006690 = phi i32 [ %v6_10006794, %dec_label_pc_10006764 ], [ %v6_10006678, %dec_label_pc_10006654 ]
  %v0_10006684 = load i32, i32* %r22.global-to-local, align 4
  %v1_10006684 = inttoptr i32 %v0_10006684 to i32*
  %v2_10006684 = load i32, i32* %v1_10006684, align 4
  store i32 %v2_10006684, i32* %r0.global-to-local, align 4
  %v1_10006688 = icmp slt i32 %v2_10006684, 11
  %v3_10006688 = icmp eq i32 %v2_10006684, 11
  store i1 %v1_10006688, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006688, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006688, label %dec_label_pc_100067a0, label %dec_label_pc_10006690

dec_label_pc_10006690:                            ; preds = %dec_label_pc_10006684
  %v1_10006690 = icmp ult i32 %v0_10006690, 39
  %v3_10006690 = icmp eq i32 %v0_10006690, 39
  store i1 %v1_10006690, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006690, i1* %cr7_eq.global-to-local, align 1
  %tmp108 = icmp ult i32 %v0_10006690, 40
  br i1 %tmp108, label %dec_label_pc_10006654, label %dec_label_pc_10006698

dec_label_pc_10006698:                            ; preds = %dec_label_pc_10006690
  %v3_10006698 = load i32, i32* @global_var_1001b448.12, align 4
  store i32 %v3_10006698, i32* %r0.global-to-local, align 4
  store i32 %tmp60, i32* %r9.global-to-local, align 4
  %v2_100066a0 = icmp slt i32 %tmp60, %v3_10006698
  %v4_100066a0 = icmp eq i32 %tmp60, %v3_10006698
  store i1 %v2_100066a0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100066a0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100066a0, label %dec_label_pc_100066a8, label %dec_label_pc_10006654

dec_label_pc_100066a8:                            ; preds = %dec_label_pc_10006698
  store i32 %v4_100066a8, i32* %r0.global-to-local, align 4
  store i1 %v1_100066ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066ac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066ac, label %dec_label_pc_100066b4, label %dec_label_pc_10006654

dec_label_pc_100066b4:                            ; preds = %dec_label_pc_100066a8
  store i32 %v4_100066b4, i32* %r8.global-to-local, align 4
  store i32 %v4_100066b4, i32* %r0.global-to-local, align 4
  store i1 %v1_100066bc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066bc, label %dec_label_pc_100066cc, label %dec_label_pc_100066c4

dec_label_pc_100066c4:                            ; preds = %dec_label_pc_100066b4
  store i1 %v1_100066c4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066c4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066c4, label %dec_label_pc_100066cc, label %dec_label_pc_10006654

dec_label_pc_100066cc:                            ; preds = %dec_label_pc_100066c4, %dec_label_pc_100066b4
  store i32 %v4_100066cc, i32* %r0.global-to-local, align 4
  %v1_100066d0 = load i32, i32* @r17, align 4
  %v2_100066d0 = icmp slt i32 %v4_100066cc, %v1_100066d0
  %v4_100066d0 = icmp eq i32 %v4_100066cc, %v1_100066d0
  store i1 %v2_100066d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100066d0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100066d0, label %dec_label_pc_100066d8, label %dec_label_pc_10006654

dec_label_pc_100066d8:                            ; preds = %dec_label_pc_100066cc
  store i32 %tmp56, i32* %r0.global-to-local, align 4
  store i32 %v1_100066dc, i32* %r9.global-to-local, align 4
  br i1 %v3_100066dc, label %dec_label_pc_10006654, label %dec_label_pc_100066e4

dec_label_pc_100066e4:                            ; preds = %dec_label_pc_100066d8
  store i32 %v1_100066e4, i32* %r10.global-to-local, align 4
  br i1 %v3_100066e4, label %dec_label_pc_10006654, label %dec_label_pc_100066ec

dec_label_pc_100066ec:                            ; preds = %dec_label_pc_100066e4
  store i32 %v1_100066ec, i32* %r11.global-to-local, align 4
  br i1 %v3_100066ec, label %dec_label_pc_100066f4, label %dec_label_pc_10006654

dec_label_pc_100066f4:                            ; preds = %dec_label_pc_100066ec
  store i32 %v1_100066f4, i32* %r9.global-to-local, align 4
  br i1 %v3_100066f4, label %dec_label_pc_100066fc, label %dec_label_pc_10006654

dec_label_pc_100066fc:                            ; preds = %dec_label_pc_100066f4
  store i32 %tmp55, i32* %r9.global-to-local, align 4
  store i32 %tmp54, i32* %r0.global-to-local, align 4
  store i32 %v1_10006704, i32* %r10.global-to-local, align 4
  store i1 %v2_10006708, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006708, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10006708, label %dec_label_pc_10006710, label %dec_label_pc_10006654

dec_label_pc_10006710:                            ; preds = %dec_label_pc_100066fc
  %v0_10006710 = load i32, i32* @r29, align 4
  %v1_10006710 = icmp slt i32 %v0_10006710, 255
  %v2_10006710 = icmp sgt i32 %v0_10006710, 255
  %v3_10006710 = icmp eq i32 %v0_10006710, 255
  store i1 %v1_10006710, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006710, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10006710, label %dec_label_pc_100067a0, label %dec_label_pc_10006718

dec_label_pc_10006718:                            ; preds = %dec_label_pc_10006710
  %v3_10006720 = load i32, i32* @global_var_1001b470.110, align 4
  store i32 %v3_10006720, i32* %r11.global-to-local, align 4
  %v1_10006724 = mul i32 %v0_10006710, 256
  store i32 %v1_10006724, i32* %r9.global-to-local, align 4
  %v2_10006728 = mul i32 %v0_10006710, 288
  store i32 %v2_10006728, i32* %r0.global-to-local, align 4
  %v2_1000672c = add i32 %v3_10006720, %v2_10006728
  store i32 %v2_1000672c, i32* @r3, align 4
  %v1_10006730 = add i32 %v2_1000672c, 12
  %v2_10006730 = inttoptr i32 %v1_10006730 to i32*
  %v3_10006730 = load i32, i32* %v2_10006730, align 4
  store i32 %v3_10006730, i32* %r9.global-to-local, align 4
  %v1_10006734 = icmp slt i32 %v3_10006730, 0
  %v3_10006734 = icmp eq i32 %v3_10006730, 0
  store i1 %v1_10006734, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006734, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006734, label %dec_label_pc_10006764, label %dec_label_pc_1000673c

dec_label_pc_1000673c:                            ; preds = %dec_label_pc_10006718
  %v1_1000673c = sub i32 256, %v0_10006710
  store i32 %v1_1000673c, i32* %r11.global-to-local, align 4
  %v1_10006740 = add i32 %v2_1000672c, 288
  store i32 %v1_10006740, i32* %r9.global-to-local, align 4
  store i32 %v1_1000673c, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10006748

dec_label_pc_10006748:                            ; preds = %dec_label_pc_10006750, %dec_label_pc_1000673c
  %v0_10006750 = phi i32 [ %v1_10006758, %dec_label_pc_10006750 ], [ %v1_10006740, %dec_label_pc_1000673c ]
  %v0_1000674c = phi i32 [ %v1_1000674c, %dec_label_pc_10006750 ], [ %v1_1000673c, %dec_label_pc_1000673c ]
  %v0_10006748 = phi i32 [ %v1_10006748, %dec_label_pc_10006750 ], [ %v0_10006710, %dec_label_pc_1000673c ]
  %v1_10006748 = add i32 %v0_10006748, 1
  store i32 %v1_10006748, i32* @r29, align 4
  %v1_1000674c = add i32 %v0_1000674c, -1
  store i32 %v1_1000674c, i32* %ctr.global-to-local, align 4
  %v2_1000674c = icmp eq i32 %v1_1000674c, 0
  br i1 %v2_1000674c, label %dec_label_pc_100067a0, label %dec_label_pc_10006750

dec_label_pc_10006750:                            ; preds = %dec_label_pc_10006748
  %v1_10006750 = add i32 %v0_10006750, 12
  %v2_10006750 = inttoptr i32 %v1_10006750 to i32*
  %v3_10006750 = load i32, i32* %v2_10006750, align 4
  store i32 %v3_10006750, i32* %r0.global-to-local, align 4
  store i32 %v0_10006750, i32* @r3, align 4
  %v1_10006758 = add i32 %v0_10006750, 288
  store i32 %v1_10006758, i32* %r9.global-to-local, align 4
  %v1_1000675c = icmp slt i32 %v3_10006750, 0
  %v3_1000675c = icmp eq i32 %v3_10006750, 0
  store i1 %v1_1000675c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000675c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000675c, label %dec_label_pc_10006764, label %dec_label_pc_10006748

dec_label_pc_10006764:                            ; preds = %dec_label_pc_10006750, %dec_label_pc_10006718
  %v1_10006764 = phi i32 [ %v2_1000672c, %dec_label_pc_10006718 ], [ %v0_10006750, %dec_label_pc_10006750 ]
  %v2_10006764 = add i32 %v1_10006764, 16
  %v3_10006764 = inttoptr i32 %v2_10006764 to i32*
  store i32 %tmp54, i32* %v3_10006764, align 4
  %v0_10006768 = load i32, i32* %r8.global-to-local, align 4
  %v1_10006768 = trunc i32 %v0_10006768 to i16
  %v2_10006768 = load i32, i32* @r3, align 4
  %v3_10006768 = add i32 %v2_10006768, 20
  %v4_10006768 = inttoptr i32 %v3_10006768 to i16*
  store i16 %v1_10006768, i16* %v4_10006768, align 2
  store i32 ptrtoint (i32* @global_var_10006770.182 to i32), i32* @lr, align 4
  %v0_1000676c = call i32 @function_100059cc()
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10006774 = load i32, i32* %r22.global-to-local, align 4
  %v2_10006774 = inttoptr i32 %v1_10006774 to i32*
  store i32 0, i32* %v2_10006774, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v2_10006660, i32* %r4.global-to-local, align 4
  %v3_10006784 = load i32, i32* @global_var_1001b474.111, align 4
  store i32 %v3_10006784, i32* %r3.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 268461976, i32* @lr, align 4
  %v6_10006794 = call i32 @function_10008fc0(i32 %v3_10006784, i32 %v2_10006660, i32 1514, i32 16384, i32 0, i32 0)
  store i32 %v6_10006794, i32* %r3.global-to-local, align 4
  %v2_10006798 = icmp sgt i32 %v6_10006794, 0
  br i1 %v2_10006798, label %dec_label_pc_10006684, label %dec_label_pc_100067a0

dec_label_pc_100067a0:                            ; preds = %dec_label_pc_10006654, %dec_label_pc_10006764, %dec_label_pc_10006710, %dec_label_pc_10006684, %dec_label_pc_10006748
  store i32 32, i32* %r10.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 64, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v2_100067b8134 = load i32, i32* @r1, align 4
  %v3_100067b8135 = add i32 %v2_100067b8134, 64
  %v4_100067b8136 = inttoptr i32 %v3_100067b8135 to i32*
  store i32 0, i32* %v4_100067b8136, align 4
  %v0_100067bc137 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100067bc138 = add i32 %v0_100067bc137, -1
  store i32 %v1_100067bc138, i32* %ctr.global-to-local, align 4
  %v2_100067bc139 = icmp eq i32 %v1_100067bc138, 0
  br i1 %v2_100067bc139, label %dec_label_pc_100067c0, label %dec_label_pc_100067b0.dec_label_pc_100067b0_crit_edge

dec_label_pc_100067b0.dec_label_pc_100067b0_crit_edge: ; preds = %dec_label_pc_100067a0, %dec_label_pc_100067b0.dec_label_pc_100067b0_crit_edge
  %v0_100067b0.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_100067b8.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_100067b0 = add i32 %v0_100067b0.pre, 64
  store i32 %v1_100067b0, i32* %r11.global-to-local, align 4
  %v1_100067b4 = add i32 %v0_100067b0.pre, 4
  store i32 %v1_100067b4, i32* %r9.global-to-local, align 4
  %v2_100067b8 = load i32, i32* @r1, align 4
  %v3_100067b8 = add i32 %v2_100067b8, %v1_100067b0
  %v4_100067b8 = inttoptr i32 %v3_100067b8 to i32*
  store i32 %v0_100067b8.pre, i32* %v4_100067b8, align 4
  %v0_100067bc = load i32, i32* %ctr.global-to-local, align 4
  %v1_100067bc = add i32 %v0_100067bc, -1
  store i32 %v1_100067bc, i32* %ctr.global-to-local, align 4
  %v2_100067bc = icmp eq i32 %v1_100067bc, 0
  br i1 %v2_100067bc, label %dec_label_pc_100067c0, label %dec_label_pc_100067b0.dec_label_pc_100067b0_crit_edge

dec_label_pc_100067c0:                            ; preds = %dec_label_pc_100067b0.dec_label_pc_100067b0_crit_edge, %dec_label_pc_100067a0
  store i32 32, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100067d0

dec_label_pc_100067d0:                            ; preds = %dec_label_pc_100067d0, %dec_label_pc_100067c0
  %v1_100067d0 = phi i32 [ 0, %dec_label_pc_100067c0 ], [ %v1_100067d4, %dec_label_pc_100067d0 ]
  %v0_100067d0 = phi i32 [ 0, %dec_label_pc_100067c0 ], [ %v0_100067dc, %dec_label_pc_100067d0 ]
  %v2_100067d0 = load i32, i32* %r14.global-to-local, align 4
  %v3_100067d0 = add i32 %v2_100067d0, %v1_100067d0
  %v4_100067d0 = inttoptr i32 %v3_100067d0 to i32*
  store i32 %v0_100067d0, i32* %v4_100067d0, align 4
  %v0_100067d4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100067d4 = add i32 %v0_100067d4, 4
  store i32 %v1_100067d4, i32* %r9.global-to-local, align 4
  %v0_100067d8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100067d8 = add i32 %v0_100067d8, -1
  store i32 %v1_100067d8, i32* %ctr.global-to-local, align 4
  %v2_100067d8 = icmp eq i32 %v1_100067d8, 0
  %v0_100067dc = load i32, i32* %r0.global-to-local, align 4
  br i1 %v2_100067d8, label %dec_label_pc_100067dc, label %dec_label_pc_100067d0

dec_label_pc_100067dc:                            ; preds = %dec_label_pc_100067d0
  %v5_100067dc = sext i32 %v0_100067dc to i64
  store i64 %v5_100067dc, i64* %stack_var_-1900, align 8
  store i32 0, i32* @r27, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  store i32 0, i32* %r25.global-to-local, align 4
  %v2_10006b68 = ptrtoint i32* %stack_var_-1912 to i32
  br label %dec_label_pc_10006848

dec_label_pc_100067f8:                            ; preds = %dec_label_pc_10006870
  %v1_100067f8 = icmp slt i32 %v3_10006864, 1
  store i1 %v1_100067f8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006868, i1* %cr7_eq.global-to-local, align 1
  %v1_10006b64 = add i32 %v2_10006860, 4
  %v2_10006b64 = inttoptr i32 %v1_10006b64 to i32*
  %v3_10006b64 = load i32, i32* %v2_10006b64, align 4
  store i32 %v3_10006b64, i32* %r3.global-to-local, align 4
  br i1 %v3_10006868, label %dec_label_pc_10006b64, label %dec_label_pc_10006800

dec_label_pc_10006800:                            ; preds = %dec_label_pc_100067f8
  store i32 %v2_10006b68, i32* %r9.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v3_10006b64, 65536
  %v1_1000680c = sdiv i32 %sext, 65536
  %v2_1000680c = call i32 @__asm_rlwinm(i32 %v1_1000680c, i32 29, i32 3, i32 29)
  %v0_10006810 = load i32, i32* @r27, align 4
  %v3_10006810 = icmp slt i32 %v0_10006810, %v1_1000680c
  %v5_10006810 = icmp eq i32 %v0_10006810, %v1_1000680c
  store i1 %v3_10006810, i1* %cr7_lt.global-to-local, align 1
  store i1 %v5_10006810, i1* %cr7_eq.global-to-local, align 1
  %v1_10006814 = load i32, i32* %r9.global-to-local, align 4
  %v2_10006814 = add i32 %v1_10006814, %v2_1000680c
  store i32 %v2_10006814, i32* %r11.global-to-local, align 4
  %v2_10006818 = urem i32 %v3_10006b64, 32
  store i32 %v2_10006818, i32* %r10.global-to-local, align 4
  %v1_1000681c = add i32 %v2_10006814, 56
  %v2_1000681c = inttoptr i32 %v1_1000681c to i32*
  %v3_1000681c = load i32, i32* %v2_1000681c, align 4
  %v0_10006820 = load i32, i32* %r0.global-to-local, align 4
  %v3_10006820 = shl i32 %v0_10006820, %v2_10006818
  store i32 %v3_10006820, i32* %r0.global-to-local, align 4
  %v2_10006824 = or i32 %v3_10006820, %v3_1000681c
  store i32 %v2_10006824, i32* %r9.global-to-local, align 4
  store i32 %v2_10006824, i32* %v2_1000681c, align 4
  br i1 %v3_10006810, label %dec_label_pc_10006830, label %dec_label_pc_10006834

dec_label_pc_10006830:                            ; preds = %dec_label_pc_10006800
  store i32 %v1_1000680c, i32* @r27, align 4
  br label %dec_label_pc_10006834

dec_label_pc_10006834:                            ; preds = %dec_label_pc_10006b64, %dec_label_pc_10006800, %dec_label_pc_10006b54, %dec_label_pc_10006b98, %dec_label_pc_10006b90, %dec_label_pc_10006830
  %v3_10006834 = load i64, i64* %stack_var_-1900, align 8
  %v4_10006834 = trunc i64 %v3_10006834 to i32
  store i32 %v4_10006834, i32* %r9.global-to-local, align 4
  %v1_10006838 = add i32 %v4_10006834, 1
  store i32 %v1_10006838, i32* %r0.global-to-local, align 4
  %v1_1000683c = icmp slt i32 %v1_10006838, 255
  %v2_1000683c = icmp sgt i32 %v1_10006838, 255
  %v3_1000683c = icmp eq i32 %v1_10006838, 255
  store i1 %v1_1000683c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000683c, i1* %cr7_eq.global-to-local, align 1
  %v5_10006840 = sext i32 %v1_10006838 to i64
  store i64 %v5_10006840, i64* %stack_var_-1900, align 8
  br i1 %v2_1000683c, label %dec_label_pc_100068d8, label %dec_label_pc_10006848

dec_label_pc_10006848:                            ; preds = %dec_label_pc_100068bc, %dec_label_pc_10006834, %dec_label_pc_100067dc
  %v0_1000684c = phi i32 [ 0, %dec_label_pc_100067dc ], [ %v1_10006838, %dec_label_pc_10006834 ], [ %v1_100068c8, %dec_label_pc_100068bc ]
  store i32 268566528, i32* %r10.global-to-local, align 4
  %v3_10006850 = load i32, i32* @global_var_1001b470.110, align 4
  store i32 %v3_10006850, i32* %r9.global-to-local, align 4
  %v2_10006858 = mul i32 %v0_1000684c, 288
  store i32 %v2_10006858, i32* %r0.global-to-local, align 4
  store i32 30, i32* %r11.global-to-local, align 4
  %v2_10006860 = add i32 %v3_10006850, %v2_10006858
  store i32 %v2_10006860, i32* @r29, align 4
  %v1_10006864 = add i32 %v2_10006860, 12
  %v2_10006864 = inttoptr i32 %v1_10006864 to i32*
  %v3_10006864 = load i32, i32* %v2_10006864, align 4
  store i32 %v3_10006864, i32* %r10.global-to-local, align 4
  %v1_10006868 = icmp eq i32 %v3_10006864, 0
  %v3_10006868 = icmp eq i32 %v3_10006864, 1
  store i1 %v1_10006868, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006868, i1* %cr7_eq.global-to-local, align 1
  %tmp110 = or i32 %v3_10006864, 1
  %tmp111 = icmp eq i32 %tmp110, 1
  br i1 %tmp111, label %dec_label_pc_10006b54, label %dec_label_pc_10006870

dec_label_pc_10006870:                            ; preds = %dec_label_pc_10006848, %dec_label_pc_10006b5c
  %v1_10006880 = phi i32 [ 30, %dec_label_pc_10006848 ], [ 5, %dec_label_pc_10006b5c ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10006874 = load i32, i32* @global_var_1001b46c.104, align 4
  store i32 %v3_10006874, i32* %r0.global-to-local, align 4
  %v1_10006878 = add i32 %v2_10006860, 8
  %v2_10006878 = inttoptr i32 %v1_10006878 to i32*
  %v3_10006878 = load i32, i32* %v2_10006878, align 4
  store i32 %v3_10006878, i32* %r9.global-to-local, align 4
  %v2_1000687c = sub i32 %v3_10006874, %v3_10006878
  store i32 %v2_1000687c, i32* %r0.global-to-local, align 4
  %v2_10006880 = icmp ult i32 %v2_1000687c, %v1_10006880
  %v3_10006880 = icmp ugt i32 %v2_1000687c, %v1_10006880
  %v4_10006880 = icmp eq i32 %v2_1000687c, %v1_10006880
  store i1 %v2_10006880, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006880, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006880, label %dec_label_pc_10006888, label %dec_label_pc_100067f8

dec_label_pc_10006888:                            ; preds = %dec_label_pc_10006870
  %v1_10006888 = add i32 %v2_10006860, 4
  %v2_10006888 = inttoptr i32 %v1_10006888 to i32*
  %v3_10006888 = load i32, i32* %v2_10006888, align 4
  store i32 %v3_10006888, i32* %r3.global-to-local, align 4
  store i32 268462224, i32* @lr, align 4
  %v0_1000688c = call i32 @function_100083cc()
  store i32 %v0_1000688c, i32* %r3.global-to-local, align 4
  %v0_10006890 = load i32, i32* @r29, align 4
  %v1_10006890 = add i32 %v0_10006890, 12
  %v2_10006890 = inttoptr i32 %v1_10006890 to i32*
  %v3_10006890 = load i32, i32* %v2_10006890, align 4
  store i32 %v3_10006890, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  %v1_10006898 = icmp ult i32 %v3_10006890, 2
  %v3_10006898 = icmp eq i32 %v3_10006890, 2
  store i1 %v1_10006898, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006898, i1* %cr7_eq.global-to-local, align 1
  %v2_1000689c = add i32 %v0_10006890, 4
  %v3_1000689c = inttoptr i32 %v2_1000689c to i32*
  store i32 -1, i32* %v3_1000689c, align 4
  %tmp112 = icmp ult i32 %v3_10006890, 3
  br i1 %tmp112, label %dec_label_pc_10006b98, label %dec_label_pc_100068a4

dec_label_pc_100068a4:                            ; preds = %dec_label_pc_10006888
  %v0_100068a4 = load i32, i32* @r29, align 4
  %v1_100068a4 = add i32 %v0_100068a4, 284
  %v2_100068a4 = inttoptr i32 %v1_100068a4 to i8*
  %v3_100068a4 = load i8, i8* %v2_100068a4, align 1
  %v4_100068a4 = zext i8 %v3_100068a4 to i32
  %v1_100068a8 = add nuw nsw i32 %v4_100068a4, 1
  %v1_100068ac = urem i32 %v1_100068a8, 256
  store i32 %v1_100068ac, i32* %r9.global-to-local, align 4
  %v1_100068b0 = icmp ult i32 %v1_100068ac, 10
  %v3_100068b0 = icmp eq i32 %v1_100068ac, 10
  store i1 %v1_100068b0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100068b0, i1* %cr7_eq.global-to-local, align 1
  %v1_100068b4 = trunc i32 %v1_100068a8 to i8
  store i8 %v1_100068b4, i8* %v2_100068a4, align 1
  %v0_100068b8 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100068b8, label %dec_label_pc_10006b98, label %dec_label_pc_100068bc

dec_label_pc_100068bc:                            ; preds = %dec_label_pc_100068a4
  %v0_100068bc = load i32, i32* @r29, align 4
  store i32 %v0_100068bc, i32* @r3, align 4
  store i32 268462276, i32* @lr, align 4
  %v0_100068c0 = call i32 @function_100059cc()
  store i32 %v0_100068c0, i32* %r3.global-to-local, align 4
  %v3_100068c4 = load i64, i64* %stack_var_-1900, align 8
  %v4_100068c4 = trunc i64 %v3_100068c4 to i32
  store i32 %v4_100068c4, i32* %r9.global-to-local, align 4
  %v1_100068c8 = add i32 %v4_100068c4, 1
  store i32 %v1_100068c8, i32* %r0.global-to-local, align 4
  %v1_100068cc = icmp slt i32 %v1_100068c8, 255
  %v3_100068cc = icmp eq i32 %v1_100068c8, 255
  store i1 %v1_100068cc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100068cc, i1* %cr7_eq.global-to-local, align 1
  %v5_100068d0 = sext i32 %v1_100068c8 to i64
  store i64 %v5_100068d0, i64* %stack_var_-1900, align 8
  %tmp113 = icmp slt i32 %v1_100068c8, 256
  br i1 %tmp113, label %dec_label_pc_10006848, label %dec_label_pc_100068d8

dec_label_pc_100068d8:                            ; preds = %dec_label_pc_100068bc, %dec_label_pc_10006834
  %v0_100068d8 = load i32, i32* @r27, align 4
  %v1_100068d8 = load i32, i32* %r28.global-to-local, align 4
  %v2_100068d8 = icmp slt i32 %v0_100068d8, %v1_100068d8
  %v4_100068d8 = icmp eq i32 %v0_100068d8, %v1_100068d8
  store i1 %v2_100068d8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100068d8, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v0_100068d8, i32* %r3.global-to-local, align 4
  store i32 1, i32* %stack_var_-1892, align 4
  br i1 %v2_100068d8, label %dec_label_pc_100068f4, label %dec_label_pc_100068f8

dec_label_pc_100068f4:                            ; preds = %dec_label_pc_100068d8
  store i32 %v1_100068d8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100068f8

dec_label_pc_100068f8:                            ; preds = %dec_label_pc_100068d8, %dec_label_pc_100068f4
  %v0_10006908 = phi i32 [ %v0_100068d8, %dec_label_pc_100068d8 ], [ %v1_100068d8, %dec_label_pc_100068f4 ]
  %v2_100068f8 = ptrtoint i32* %stack_var_-1856 to i32
  store i32 %v2_100068f8, i32* %r4.global-to-local, align 4
  %v1_100068fc = ptrtoint i32* %stack_var_-1728 to i32
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_10006904 = ptrtoint i32* %stack_var_-1892 to i32
  store i32 %v2_10006904, i32* %r7.global-to-local, align 4
  %v1_10006908 = add i32 %v0_10006908, 1
  store i32 %v1_10006908, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006910.183 to i32), i32* @lr, align 4
  %v5_1000690c = call i32 @function_10008694(i32 %v1_10006908, i32 %v2_100068f8, i32 %v1_100068fc, i32 0, i32 %v2_10006904)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268462360, i32* @lr, align 4
  %v0_10006914 = call i32 @function_1000879c()
  store i32 %v0_10006914, i32* %r3.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_10006914, i32* @global_var_1001b46c.104, align 4
  %v0_10006924 = load i32, i32* %r29.global-to-local, align 4
  %v5_10006924 = sext i32 %v0_10006924 to i64
  store i64 %v5_10006924, i64* %stack_var_-1900, align 8
  %v2_10007550 = ptrtoint i32* %stack_var_-1904 to i32
  %v2_10007554 = ptrtoint i32* %stack_var_-1896 to i32
  br label %dec_label_pc_10006940

dec_label_pc_1000692c:                            ; preds = %dec_label_pc_100069a4, %dec_label_pc_10007438, %dec_label_pc_10006984, %dec_label_pc_10006940, %dec_label_pc_1000773c, %dec_label_pc_10007600, %dec_label_pc_1000746c
  %v3_1000692c = load i64, i64* %stack_var_-1900, align 8
  %v4_1000692c = trunc i64 %v3_1000692c to i32
  store i32 %v4_1000692c, i32* %r9.global-to-local, align 4
  %v1_10006930 = add i32 %v4_1000692c, 1
  store i32 %v1_10006930, i32* %r0.global-to-local, align 4
  %v1_10006934 = icmp slt i32 %v1_10006930, 255
  %v2_10006934 = icmp sgt i32 %v1_10006930, 255
  %v3_10006934 = icmp eq i32 %v1_10006930, 255
  store i1 %v1_10006934, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006934, i1* %cr7_eq.global-to-local, align 1
  %v5_10006938 = sext i32 %v1_10006930 to i64
  store i64 %v5_10006938, i64* %stack_var_-1900, align 8
  br i1 %v2_10006934, label %dec_label_pc_1000644c, label %dec_label_pc_10006940

dec_label_pc_10006940:                            ; preds = %dec_label_pc_1000692c, %dec_label_pc_100068f8
  %v0_10006944 = phi i32 [ %v1_10006930, %dec_label_pc_1000692c ], [ 0, %dec_label_pc_100068f8 ]
  store i32 268566528, i32* %r10.global-to-local, align 4
  %v1_10006944 = mul i32 %v0_10006944, 256
  store i32 %v1_10006944, i32* %r11.global-to-local, align 4
  %v3_10006948 = load i32, i32* @global_var_1001b470.110, align 4
  store i32 %v3_10006948, i32* %r9.global-to-local, align 4
  %v2_10006950 = mul i32 %v0_10006944, 288
  store i32 %v2_10006950, i32* %r0.global-to-local, align 4
  %v2_10006954 = add i32 %v3_10006948, %v2_10006950
  store i32 %v2_10006954, i32* @r28, align 4
  %v1_10006958 = add i32 %v2_10006954, 4
  %v2_10006958 = inttoptr i32 %v1_10006958 to i32*
  %v3_10006958 = load i32, i32* %v2_10006958, align 4
  store i32 %v3_10006958, i32* %r3.global-to-local, align 4
  %v1_1000695c = icmp slt i32 %v3_10006958, -1
  %v3_1000695c = icmp eq i32 %v3_10006958, -1
  store i1 %v1_1000695c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000695c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000695c, label %dec_label_pc_1000692c, label %dec_label_pc_10006964

dec_label_pc_10006964:                            ; preds = %dec_label_pc_10006940
  store i32 %v2_10006b68, i32* %r11.global-to-local, align 4
  %v1_10006968 = call i32 @__asm_rlwinm(i32 %v3_10006958, i32 29, i32 3, i32 29)
  %v1_1000696c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000696c = add i32 %v1_1000696c, %v1_10006968
  store i32 %v2_1000696c, i32* %r9.global-to-local, align 4
  %v0_10006970 = load i32, i32* %r3.global-to-local, align 4
  %v1_10006970 = urem i32 %v0_10006970, 32
  store i32 %v1_10006970, i32* %r11.global-to-local, align 4
  %v1_10006974 = add i32 %v2_1000696c, 184
  %v2_10006974 = inttoptr i32 %v1_10006974 to i32*
  %v3_10006974 = load i32, i32* %v2_10006974, align 4
  %v3_10006978 = lshr i32 %v3_10006974, %v1_10006970
  store i32 %v3_10006978, i32* %r0.global-to-local, align 4
  %v1_1000697c = urem i32 %v3_10006978, 2
  store i32 %v1_1000697c, i32* %r9.global-to-local, align 4
  %v3_1000697c = icmp eq i32 %v1_1000697c, 0
  br i1 %v3_1000697c, label %dec_label_pc_10006984, label %dec_label_pc_10007540

dec_label_pc_10006984:                            ; preds = %dec_label_pc_10006964, %dec_label_pc_100075d8
  %v0_10006988 = phi i32 [ %v0_10006970, %dec_label_pc_10006964 ], [ %v0_10006988.pre, %dec_label_pc_100075d8 ]
  store i32 %v2_10006b68, i32* %r0.global-to-local, align 4
  %v1_10006988 = call i32 @__asm_rlwinm(i32 %v0_10006988, i32 29, i32 3, i32 29)
  %v1_1000698c = load i32, i32* %r0.global-to-local, align 4
  %v2_1000698c = add i32 %v1_1000698c, %v1_10006988
  store i32 %v2_1000698c, i32* %r9.global-to-local, align 4
  %v0_10006990 = load i32, i32* %r3.global-to-local, align 4
  %v1_10006990 = urem i32 %v0_10006990, 32
  store i32 %v1_10006990, i32* %r11.global-to-local, align 4
  %v1_10006994 = add i32 %v2_1000698c, 56
  %v2_10006994 = inttoptr i32 %v1_10006994 to i32*
  %v3_10006994 = load i32, i32* %v2_10006994, align 4
  %v3_10006998 = lshr i32 %v3_10006994, %v1_10006990
  store i32 %v3_10006998, i32* %r0.global-to-local, align 4
  %v1_1000699c = urem i32 %v3_10006998, 2
  store i32 %v1_1000699c, i32* %r9.global-to-local, align 4
  %v3_1000699c = icmp eq i32 %v1_1000699c, 0
  br i1 %v3_1000699c, label %dec_label_pc_1000692c, label %dec_label_pc_100069a4.preheader

dec_label_pc_100069a4.preheader:                  ; preds = %dec_label_pc_10006984
  %v0_100069a4.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_100069a4

dec_label_pc_100069a4:                            ; preds = %dec_label_pc_100069a4.preheader, %dec_label_pc_10006a10
  %v0_10007490 = phi i32 [ %v0_100069a4.pre, %dec_label_pc_100069a4.preheader ], [ %v0_10006a28, %dec_label_pc_10006a10 ]
  %v1_100069a4 = add i32 %v0_10007490, 12
  %v2_100069a4 = inttoptr i32 %v1_100069a4 to i32*
  %v3_100069a4 = load i32, i32* %v2_100069a4, align 4
  store i32 %v3_100069a4, i32* %r10.global-to-local, align 4
  %v1_100069a8 = icmp slt i32 %v3_100069a4, 0
  %v3_100069a8 = icmp eq i32 %v3_100069a4, 0
  store i1 %v1_100069a8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100069a8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100069a8, label %dec_label_pc_1000692c, label %dec_label_pc_100069b0

dec_label_pc_100069b0:                            ; preds = %dec_label_pc_100069a4
  %v1_100069b0 = add i32 %v0_10007490, 24
  %v2_100069b0 = inttoptr i32 %v1_100069b0 to i32*
  %v3_100069b0 = load i32, i32* %v2_100069b0, align 4
  store i32 %v3_100069b0, i32* %r0.global-to-local, align 4
  %v1_100069b4 = add i32 %v0_10007490, 28
  store i32 %v1_100069b4, i32* %r24.global-to-local, align 4
  %v1_100069b8 = icmp slt i32 %v3_100069b0, 256
  %v3_100069b8 = icmp eq i32 %v3_100069b0, 256
  store i1 %v1_100069b8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100069b8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100069b8, label %dec_label_pc_10007490, label %dec_label_pc_100069c0

dec_label_pc_100069c0:                            ; preds = %dec_label_pc_100069b0, %dec_label_pc_10007490
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v1_100069c8 = load i32, i32* %r22.global-to-local, align 4
  %v2_100069c8 = inttoptr i32 %v1_100069c8 to i32*
  store i32 0, i32* %v2_100069c8, align 4
  %v0_100069cc = load i32, i32* @r28, align 4
  %v1_100069cc = add i32 %v0_100069cc, 24
  %v2_100069cc = inttoptr i32 %v1_100069cc to i32*
  %v3_100069cc = load i32, i32* %v2_100069cc, align 4
  %v1_100069d0 = add i32 %v0_100069cc, 4
  %v2_100069d0 = inttoptr i32 %v1_100069d0 to i32*
  %v3_100069d0 = load i32, i32* %v2_100069d0, align 4
  store i32 %v3_100069d0, i32* %r3.global-to-local, align 4
  %v0_100069d4 = load i32, i32* %r24.global-to-local, align 4
  %v2_100069d4 = add i32 %v0_100069d4, %v3_100069cc
  store i32 %v2_100069d4, i32* @r29, align 4
  %v1_100069d8 = sub i32 256, %v3_100069cc
  store i32 %v2_100069d4, i32* %r4.global-to-local, align 4
  store i32 268462564, i32* @lr, align 4
  %v4_100069e0 = call i32 @function_10008f88(i32 %v3_100069d0, i32 %v2_100069d4, i32 %v1_100069d8, i32 16384)
  store i32 %v4_100069e0, i32* %r3.global-to-local, align 4
  %tmp115 = icmp slt i32 %v4_100069e0, 1
  br i1 %tmp115, label %dec_label_pc_1000742c, label %dec_label_pc_100069ec

dec_label_pc_100069ec:                            ; preds = %dec_label_pc_100069c0
  store i32 %v4_100069e0, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 65, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100069f8

dec_label_pc_100069f8:                            ; preds = %dec_label_pc_10006a08, %dec_label_pc_100069ec
  %v0_10006a0c42 = phi i32 [ %v1_10006a0c, %dec_label_pc_10006a08 ], [ %v4_100069e0, %dec_label_pc_100069ec ]
  %v1_10006a04 = phi i32 [ %v1_10006a08, %dec_label_pc_10006a08 ], [ 0, %dec_label_pc_100069ec ]
  %v1_100069f8 = load i32, i32* @r29, align 4
  %v2_100069f8 = add i32 %v1_100069f8, %v1_10006a04
  %v3_100069f8 = inttoptr i32 %v2_100069f8 to i8*
  %v4_100069f8 = load i8, i8* %v3_100069f8, align 1
  %v5_100069f8 = zext i8 %v4_100069f8 to i32
  store i32 %v5_100069f8, i32* %r0.global-to-local, align 4
  %v3_100069fc = icmp eq i8 %v4_100069f8, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100069fc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100069fc, label %dec_label_pc_10006a04, label %dec_label_pc_10006a08

dec_label_pc_10006a04:                            ; preds = %dec_label_pc_100069f8
  %v0_10006a04 = load i32, i32* %r11.global-to-local, align 4
  %v3_10006a04 = trunc i32 %v0_10006a04 to i8
  store i8 %v3_10006a04, i8* %v3_100069f8, align 1
  %v0_10006a08.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10006a0c.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10006a08

dec_label_pc_10006a08:                            ; preds = %dec_label_pc_100069f8, %dec_label_pc_10006a04
  %v0_10006a0c = phi i32 [ %v0_10006a0c42, %dec_label_pc_100069f8 ], [ %v0_10006a0c.pre, %dec_label_pc_10006a04 ]
  %v0_10006a08 = phi i32 [ %v1_10006a04, %dec_label_pc_100069f8 ], [ %v0_10006a08.pre, %dec_label_pc_10006a04 ]
  %v1_10006a08 = add i32 %v0_10006a08, 1
  store i32 %v1_10006a08, i32* %r9.global-to-local, align 4
  %v1_10006a0c = add i32 %v0_10006a0c, -1
  store i32 %v1_10006a0c, i32* %ctr.global-to-local, align 4
  %v2_10006a0c = icmp eq i32 %v1_10006a0c, 0
  br i1 %v2_10006a0c, label %dec_label_pc_10006a10, label %dec_label_pc_100069f8

dec_label_pc_10006a10:                            ; preds = %dec_label_pc_10006a08, %dec_label_pc_10007430
  %v0_10006a10 = load i32, i32* @r28, align 4
  %v1_10006a10 = add i32 %v0_10006a10, 24
  %v2_10006a10 = inttoptr i32 %v1_10006a10 to i32*
  %v3_10006a10 = load i32, i32* %v2_10006a10, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10006a18 = load i32, i32* @global_var_1001b46c.104, align 4
  store i32 %v3_10006a18, i32* %r0.global-to-local, align 4
  %v2_10006a1c = add i32 %v3_10006a10, %v4_100069e0
  store i32 %v2_10006a1c, i32* %r4.global-to-local, align 4
  store i32 %v2_10006a1c, i32* %v2_10006a10, align 4
  %v0_10006a24 = load i32, i32* %r0.global-to-local, align 4
  %v1_10006a24 = load i32, i32* @r28, align 4
  %v2_10006a24 = add i32 %v1_10006a24, 8
  %v3_10006a24 = inttoptr i32 %v2_10006a24 to i32*
  store i32 %v0_10006a24, i32* %v3_10006a24, align 4
  %v0_10006a28 = load i32, i32* @r28, align 4
  %v1_10006a28 = add i32 %v0_10006a28, 12
  %v2_10006a28 = inttoptr i32 %v1_10006a28 to i32*
  %v3_10006a28 = load i32, i32* %v2_10006a28, align 4
  store i32 %v3_10006a28, i32* %r10.global-to-local, align 4
  %v1_10006a2c = icmp ult i32 %v3_10006a28, 10
  %v2_10006a2c = icmp ugt i32 %v3_10006a28, 10
  %v3_10006a2c = icmp eq i32 %v3_10006a28, 10
  store i1 %v1_10006a2c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006a2c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10006a2c, label %dec_label_pc_100069a4, label %dec_label_pc_10006a34

dec_label_pc_10006a34:                            ; preds = %dec_label_pc_10006a10
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_10006a38 = mul i32 %v3_10006a28, 4
  store i32 %v1_10006a38, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000adf8.177 to i32), i32* %r11.global-to-local, align 4
  %v2_10006a40 = add i32 %v1_10006a38, ptrtoint (i32* @global_var_1000adf8.177 to i32)
  %v3_10006a40 = inttoptr i32 %v2_10006a40 to i32*
  %v4_10006a40 = load i32, i32* %v3_10006a40, align 4
  %v2_10006a44 = add i32 %v4_10006a40, ptrtoint (i32* @global_var_1000adf8.177 to i32)
  store i32 %v2_10006a44, i32* %r9.global-to-local, align 4
  store i32 %v2_10006a44, i32* %ctr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v2_10006a44)
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v2_10007554, i32* %r4.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10006a60 = load i32, i32* @r26, align 4
  store i32 %v0_10006a60, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-1896, align 4
  store i32 268462700, i32* @lr, align 4
  %v4_10006a68 = call i32 @function_10009000(i32 %v0_10006a60, i32 %v2_10007554, i32 1, i32 16384)
  store i32 16384, i32* %r6.global-to-local, align 4
  store i32 %v2_10007550, i32* %r4.global-to-local, align 4
  %v0_10006a78 = load i32, i32* @r26, align 4
  store i32 %v0_10006a78, i32* %r3.global-to-local, align 4
  store i32 268462720, i32* @lr, align 4
  %v4_10006a7c = call i32 @function_10009000(i32 %v0_10006a78, i32 %v2_10007550, i32 4, i32 16384)
  store i32 %v2_10006b68, i32* %r4.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10006a8c = load i32, i32* @r26, align 4
  store i32 %v0_10006a8c, i32* %r3.global-to-local, align 4
  store i32 268462740, i32* @lr, align 4
  %v4_10006a90 = call i32 @function_10009000(i32 %v0_10006a8c, i32 %v2_10006b68, i32 2, i32 16384)
  store i32 ptrtoint (i8* @global_var_1000ac20.184 to i32), i32* %r4.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10006aa0 = load i32, i32* @r26, align 4
  store i32 %v0_10006aa0, i32* %r3.global-to-local, align 4
  store i32 268462760, i32* @lr, align 4
  %v5_10006aa4 = call i32 @function_10009000(i32 %v0_10006aa0, i32 sext (i8 ptrtoint (i8* @global_var_1000ac20.184 to i8) to i32), i32 1, i32 16384)
  store i32 319820054, i32* %r4.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10006ab4 = load i32, i32* @r26, align 4
  store i32 %v0_10006ab4, i32* %r3.global-to-local, align 4
  store i32 268462780, i32* @lr, align 4
  %v5_10006ab8 = call i32 @function_10009000(i32 %v0_10006ab4, i32 319820054, i32 23, i32 16384)
  store i32 ptrtoint (i8* @global_var_1000ac21.185 to i32), i32* %r4.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10006ac8 = load i32, i32* @r26, align 4
  store i32 %v0_10006ac8, i32* %r3.global-to-local, align 4
  store i32 268462800, i32* @lr, align 4
  %v5_10006acc = call i32 @function_10009000(i32 %v0_10006ac8, i32 sext (i8 ptrtoint (i8* @global_var_1000ac21.185 to i8) to i32), i32 1, i32 16384)
  store i32 385875968, i32* %r4.global-to-local, align 4
  %v0_10006ad8 = load i32, i32* @r26, align 4
  store i32 %v0_10006ad8, i32* %r3.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  store i32 268462820, i32* @lr, align 4
  %v5_10006ae0 = call i32 @function_10009000(i32 %v0_10006ad8, i32 385875968, i32 20, i32 16384)
  %v0_10006ae4 = load i32, i32* @r26, align 4
  store i32 %v0_10006ae4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006aec.187 to i32), i32* @lr, align 4
  %v0_10006ae8 = call i32 @function_100083cc()
  store i32 %v0_10006ae8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006aec

dec_label_pc_10006aec:                            ; preds = %dec_label_pc_10005dc0, %dec_label_pc_1000772c, %dec_label_pc_10006a34
  %v0_10006af0 = call i32 @function_10009960()
  store i32 %v0_10006af0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006af4

dec_label_pc_10006af4:                            ; preds = %dec_label_pc_100064dc, %dec_label_pc_10006aec
  %v0_1000658017 = phi i32 [ %v0_10006af0, %dec_label_pc_10006aec ], [ %v1_100064a4, %dec_label_pc_100064dc ]
  %v0_10006af4 = load i32, i32* @r9, align 4
  %v1_10006af4 = icmp slt i32 %v0_10006af4, 168
  %v3_10006af4 = icmp eq i32 %v0_10006af4, 168
  store i1 %v1_10006af4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006af4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006af4, label %dec_label_pc_10006490.preheader, label %dec_label_pc_10006af4.dec_label_pc_10006574_crit_edge

dec_label_pc_10006af4.dec_label_pc_10006574_crit_edge: ; preds = %dec_label_pc_10006af4
  %v0_10006574.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006574

dec_label_pc_10006b00:                            ; preds = %dec_label_pc_100064e4
  %v0_10006b00 = load i32, i32* @r9, align 4
  %v1_10006b00 = icmp ult i32 %v0_10006b00, 15
  %v3_10006b00 = icmp eq i32 %v0_10006b00, 15
  store i1 %v1_10006b00, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006b00, i1* %cr7_eq.global-to-local, align 1
  %tmp116 = icmp ult i32 %v0_10006b00, 16
  br i1 %tmp116, label %dec_label_pc_10006574, label %dec_label_pc_10006b08

dec_label_pc_10006b08:                            ; preds = %dec_label_pc_10006b00
  %v1_10006b08 = icmp ult i32 %v0_10006b00, 31
  %v3_10006b08 = icmp eq i32 %v0_10006b00, 31
  store i1 %v1_10006b08, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006b08, i1* %cr7_eq.global-to-local, align 1
  %tmp117 = icmp ult i32 %v0_10006b00, 32
  br i1 %tmp117, label %dec_label_pc_10006490, label %dec_label_pc_10006574

dec_label_pc_10006b14:                            ; preds = %dec_label_pc_100064ec
  %v0_10006b14 = load i32, i32* @r9, align 4
  %v1_10006b14 = icmp ult i32 %v0_10006b14, 63
  %v3_10006b14 = icmp eq i32 %v0_10006b14, 63
  store i1 %v1_10006b14, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006b14, i1* %cr7_eq.global-to-local, align 1
  %tmp118 = icmp ult i32 %v0_10006b14, 64
  br i1 %tmp118, label %dec_label_pc_10006574, label %dec_label_pc_10006b1c

dec_label_pc_10006b1c:                            ; preds = %dec_label_pc_10006b14
  %v1_10006b1c = icmp ult i32 %v0_10006b14, 126
  %v3_10006b1c = icmp eq i32 %v0_10006b14, 126
  store i1 %v1_10006b1c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006b1c, i1* %cr7_eq.global-to-local, align 1
  %tmp119 = icmp ult i32 %v0_10006b14, 127
  br i1 %tmp119, label %dec_label_pc_10006490, label %dec_label_pc_10006574

dec_label_pc_10006b28:                            ; preds = %dec_label_pc_100064f4
  %v0_10006b28 = load i32, i32* @r9, align 4
  %v1_10006b28 = icmp slt i32 %v0_10006b28, 255
  %v3_10006b28 = icmp eq i32 %v0_10006b28, 255
  store i1 %v1_10006b28, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006b28, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006b28, label %dec_label_pc_10006490, label %dec_label_pc_10006574

dec_label_pc_10006b34:                            ; preds = %dec_label_pc_100064fc
  %v0_10006b34 = load i32, i32* @r9, align 4
  %v1_10006b34 = icmp ult i32 %v0_10006b34, 17
  %v3_10006b34 = icmp eq i32 %v0_10006b34, 17
  store i1 %v1_10006b34, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006b34, i1* %cr7_eq.global-to-local, align 1
  %tmp120 = icmp ult i32 %v0_10006b34, 18
  br i1 %tmp120, label %dec_label_pc_10006574, label %dec_label_pc_10006b3c

dec_label_pc_10006b3c:                            ; preds = %dec_label_pc_10006b34
  %v1_10006b3c = icmp eq i32 %v0_10006b34, 18
  %v3_10006b3c = icmp eq i32 %v0_10006b34, 19
  store i1 %v1_10006b3c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006b3c, i1* %cr7_eq.global-to-local, align 1
  %tmp121 = icmp ult i32 %v0_10006b34, 20
  br i1 %tmp121, label %dec_label_pc_10006490, label %dec_label_pc_10006574

dec_label_pc_10006b54:                            ; preds = %dec_label_pc_10006848
  %v1_10006b54 = icmp slt i32 %v3_10006864, 0
  store i1 %v1_10006b54, i1* %cr7_lt.global-to-local, align 1
  store i1 %v1_10006868, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_10006868, label %dec_label_pc_10006834, label %dec_label_pc_10006b5c

dec_label_pc_10006b5c:                            ; preds = %dec_label_pc_10006b54
  store i32 5, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006870

dec_label_pc_10006b64:                            ; preds = %dec_label_pc_100067f8
  store i32 %v2_10006b68, i32* %r0.global-to-local, align 4
  %v1_10006b6c = call i32 @__asm_rlwinm(i32 %v3_10006b64, i32 29, i32 3, i32 29)
  %v0_10006b70 = load i32, i32* %r28.global-to-local, align 4
  %v2_10006b70 = icmp slt i32 %v0_10006b70, %v3_10006b64
  %v4_10006b70 = icmp eq i32 %v0_10006b70, %v3_10006b64
  store i1 %v2_10006b70, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006b70, i1* %cr7_eq.global-to-local, align 1
  %v1_10006b74 = load i32, i32* %r0.global-to-local, align 4
  %v2_10006b74 = add i32 %v1_10006b74, %v1_10006b6c
  store i32 %v2_10006b74, i32* %r11.global-to-local, align 4
  %v1_10006b78 = urem i32 %v3_10006b64, 32
  store i32 %v1_10006b78, i32* %r0.global-to-local, align 4
  %v1_10006b7c = add i32 %v2_10006b74, 184
  %v2_10006b7c = inttoptr i32 %v1_10006b7c to i32*
  %v3_10006b7c = load i32, i32* %v2_10006b7c, align 4
  %v0_10006b80 = load i32, i32* %r10.global-to-local, align 4
  %v3_10006b80 = shl i32 %v0_10006b80, %v1_10006b78
  store i32 %v3_10006b80, i32* %r0.global-to-local, align 4
  %v2_10006b84 = or i32 %v3_10006b80, %v3_10006b7c
  store i32 %v2_10006b84, i32* %r9.global-to-local, align 4
  store i32 %v2_10006b84, i32* %v2_10006b7c, align 4
  br i1 %v2_10006b70, label %dec_label_pc_10006b90, label %dec_label_pc_10006834

dec_label_pc_10006b90:                            ; preds = %dec_label_pc_10006b64
  store i32 %v3_10006b64, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10006834

dec_label_pc_10006b98:                            ; preds = %dec_label_pc_100068a4, %dec_label_pc_10006888
  %v0_10006b98 = load i32, i32* %r25.global-to-local, align 4
  %v1_10006b98 = load i32, i32* @r29, align 4
  %v2_10006b98 = add i32 %v1_10006b98, 12
  %v3_10006b98 = inttoptr i32 %v2_10006b98 to i32*
  store i32 %v0_10006b98, i32* %v3_10006b98, align 4
  %v0_10006b9c = load i32, i32* @r26, align 4
  %v1_10006b9c = trunc i32 %v0_10006b9c to i8
  %v2_10006b9c = load i32, i32* @r29, align 4
  %v3_10006b9c = add i32 %v2_10006b9c, 284
  %v4_10006b9c = inttoptr i32 %v3_10006b9c to i8*
  store i8 %v1_10006b9c, i8* %v4_10006b9c, align 1
  br label %dec_label_pc_10006834

dec_label_pc_1000742c:                            ; preds = %dec_label_pc_100069c0
  %v3_100069e4 = icmp eq i32 %v4_100069e0, 0
  br i1 %v3_100069e4, label %dec_label_pc_10007720, label %dec_label_pc_10007430

dec_label_pc_10007430:                            ; preds = %dec_label_pc_1000742c
  %v1_10007430 = icmp slt i32 %v4_100069e0, -1
  %v3_10007430 = icmp eq i32 %v4_100069e0, -1
  store i1 %v1_10007430, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007430, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007430, label %dec_label_pc_10007438, label %dec_label_pc_10006a10

dec_label_pc_10007438:                            ; preds = %dec_label_pc_10007430
  %v0_10007438 = load i32, i32* %r22.global-to-local, align 4
  %v1_10007438 = inttoptr i32 %v0_10007438 to i32*
  %v2_10007438 = load i32, i32* %v1_10007438, align 4
  store i32 %v2_10007438, i32* %r0.global-to-local, align 4
  %v1_1000743c = icmp slt i32 %v2_10007438, 11
  %v3_1000743c = icmp eq i32 %v2_10007438, 11
  store i1 %v1_1000743c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000743c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000743c, label %dec_label_pc_1000692c, label %dec_label_pc_10007444

dec_label_pc_10007444:                            ; preds = %dec_label_pc_10007438, %dec_label_pc_10007720
  %v0_10007444 = load i32, i32* @r28, align 4
  %v1_10007444 = add i32 %v0_10007444, 4
  %v2_10007444 = inttoptr i32 %v1_10007444 to i32*
  %v3_10007444 = load i32, i32* %v2_10007444, align 4
  store i32 %v3_10007444, i32* %r3.global-to-local, align 4
  store i32 268465228, i32* @lr, align 4
  %v0_10007448 = call i32 @function_100083cc()
  store i32 %v0_10007448, i32* %r3.global-to-local, align 4
  %v0_1000744c = load i32, i32* @r28, align 4
  %v1_1000744c = add i32 %v0_1000744c, 284
  %v2_1000744c = inttoptr i32 %v1_1000744c to i8*
  %v3_1000744c = load i8, i8* %v2_1000744c, align 1
  %v4_1000744c = zext i8 %v3_1000744c to i32
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10007454 = add nuw nsw i32 %v4_1000744c, 1
  store i32 %v1_10007454, i32* %r9.global-to-local, align 4
  %v2_10007458 = add i32 %v0_1000744c, 4
  %v3_10007458 = inttoptr i32 %v2_10007458 to i32*
  store i32 -1, i32* %v3_10007458, align 4
  %v0_1000745c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000745c = urem i32 %v0_1000745c, 256
  store i32 %v1_1000745c, i32* %r9.global-to-local, align 4
  %v1_10007460 = icmp ult i32 %v1_1000745c, 9
  %v3_10007460 = icmp eq i32 %v1_1000745c, 9
  store i1 %v1_10007460, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007460, i1* %cr7_eq.global-to-local, align 1
  %v1_10007464 = trunc i32 %v0_1000745c to i8
  %v2_10007464 = load i32, i32* @r28, align 4
  %v3_10007464 = add i32 %v2_10007464, 284
  %v4_10007464 = inttoptr i32 %v3_10007464 to i8*
  store i8 %v1_10007464, i8* %v4_10007464, align 1
  %v0_10007468 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10007468 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10007468 = or i1 %v0_10007468, %v1_10007468
  br i1 %v2_10007468, label %dec_label_pc_1000773c, label %dec_label_pc_1000746c

dec_label_pc_1000746c:                            ; preds = %dec_label_pc_10007444
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10007474 = load i32, i32* @r28, align 4
  %v2_10007474 = add i32 %v1_10007474, 12
  %v3_10007474 = inttoptr i32 %v2_10007474 to i32*
  store i32 0, i32* %v3_10007474, align 4
  %v0_10007478 = load i32, i32* %r0.global-to-local, align 4
  %v1_10007478 = trunc i32 %v0_10007478 to i8
  %v2_10007478 = load i32, i32* @r28, align 4
  %v3_10007478 = add i32 %v2_10007478, 284
  %v4_10007478 = inttoptr i32 %v3_10007478 to i8*
  store i8 %v1_10007478, i8* %v4_10007478, align 1
  br label %dec_label_pc_1000692c

dec_label_pc_10007490:                            ; preds = %dec_label_pc_100069b0
  %v1_10007490 = add i32 %v0_10007490, 92
  store i32 %v1_10007490, i32* %r4.global-to-local, align 4
  store i32 %v1_100069b4, i32* %r3.global-to-local, align 4
  store i32 268465312, i32* @lr, align 4
  %v3_1000749c = call i32 @function_10008ae4(i32 %v1_100069b4, i32 %v1_10007490, i32 192)
  store i32 %v3_1000749c, i32* %r3.global-to-local, align 4
  %v0_100074a0 = load i32, i32* @r28, align 4
  %v1_100074a0 = add i32 %v0_100074a0, 24
  %v2_100074a0 = inttoptr i32 %v1_100074a0 to i32*
  %v3_100074a0 = load i32, i32* %v2_100074a0, align 4
  store i32 %v3_100074a0, i32* %r9.global-to-local, align 4
  %v1_100074a4 = add i32 %v3_100074a0, -64
  store i32 %v1_100074a4, i32* %r4.global-to-local, align 4
  store i32 %v1_100074a4, i32* %v2_100074a0, align 4
  br label %dec_label_pc_100069c0

dec_label_pc_10007540:                            ; preds = %dec_label_pc_10006964
  store i32 4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 1, i32* %r4.global-to-local, align 4
  store i32 %v2_10007550, i32* %r6.global-to-local, align 4
  store i32 %v2_10007554, i32* %r7.global-to-local, align 4
  store i32 4, i32* %stack_var_-1896, align 4
  store i32 0, i32* %stack_var_-1904, align 4
  store i32 268465508, i32* @lr, align 4
  %v5_10007560 = call i32 @function_10008f1c(i32 1, i32 4, i32 %v2_10007550, i32 %v2_10007554, i32 %v1_1000697c)
  store i32 %v5_10007560, i32* %r3.global-to-local, align 4
  %v3_10007564 = load i32, i32* %stack_var_-1904, align 4
  store i32 %v3_10007564, i32* %r0.global-to-local, align 4
  %v2_10007568 = or i32 %v3_10007564, %v5_10007560
  store i32 %v2_10007568, i32* %r9.global-to-local, align 4
  %v5_10007568 = icmp eq i32 %v2_10007568, 0
  br i1 %v5_10007568, label %dec_label_pc_10007570, label %dec_label_pc_10007600

dec_label_pc_10007570:                            ; preds = %dec_label_pc_10007540
  store i32 2, i32* %r10.global-to-local, align 4
  %v1_10007574 = load i32, i32* @r28, align 4
  %v2_10007574 = add i32 %v1_10007574, 12
  %v3_10007574 = inttoptr i32 %v2_10007574 to i32*
  store i32 2, i32* %v3_10007574, align 4
  %v0_10007578 = call i32 @function_10005258()
  %v3_10007580 = load i16, i16* @global_var_1001b468.107, align 2
  %v4_10007580 = zext i16 %v3_10007580 to i32
  store i32 %v4_10007580, i32* %r11.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10007588 = load i32, i32* @global_var_1001b460.105, align 4
  store i32 %v3_10007588, i32* %r10.global-to-local, align 4
  %v1_10007590 = icmp slt i32 %v3_10007588, 0
  %v3_10007590 = icmp eq i32 %v3_10007588, 0
  store i1 %v1_10007590, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007590, i1* %cr7_eq.global-to-local, align 1
  %v2_1000758c = urem i32 %v0_10007578, %v4_10007580
  %v2_10007594 = sub i32 %v0_10007578, %v2_1000758c
  store i32 %v2_10007594, i32* %r0.global-to-local, align 4
  store i32 %v2_1000758c, i32* %r3.global-to-local, align 4
  %tmp123 = icmp slt i32 %v3_10007588, 1
  br i1 %tmp123, label %dec_label_pc_100076f0, label %dec_label_pc_100075a4

dec_label_pc_100075a4:                            ; preds = %dec_label_pc_10007570
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v3_10007588, i32* %ctr.global-to-local, align 4
  %v3_100075ac = load i32, i32* @global_var_1001b464.106, align 4
  store i32 %v3_100075ac, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100075bc

dec_label_pc_100075b4:                            ; preds = %dec_label_pc_100075cc, %dec_label_pc_100075bc
  %v4_100075d09 = phi i1 [ %v4_100075d0, %dec_label_pc_100075cc ], [ %v4_100075c4, %dec_label_pc_100075bc ]
  %v2_100075d07 = phi i1 [ %v2_100075d0, %dec_label_pc_100075cc ], [ %v2_100075c4, %dec_label_pc_100075bc ]
  %v1_100075b4 = add i32 %v0_100075b4, 16
  store i32 %v1_100075b4, i32* %r0.global-to-local, align 4
  %v1_100075b8 = add i32 %v0_100075b8, -1
  store i32 %v1_100075b8, i32* %ctr.global-to-local, align 4
  %v2_100075b8 = icmp eq i32 %v1_100075b8, 0
  br i1 %v2_100075b8, label %dec_label_pc_100076f0.loopexit, label %dec_label_pc_100075bc

dec_label_pc_100075bc:                            ; preds = %dec_label_pc_100075b4, %dec_label_pc_100075a4
  %v0_100075b8 = phi i32 [ %v1_100075b8, %dec_label_pc_100075b4 ], [ %v3_10007588, %dec_label_pc_100075a4 ]
  %v0_100075b4 = phi i32 [ %v1_100075b4, %dec_label_pc_100075b4 ], [ %v3_100075ac, %dec_label_pc_100075a4 ]
  store i32 %v0_100075b4, i32* %r9.global-to-local, align 4
  %v1_100075c0 = add i32 %v0_100075b4, 8
  %v2_100075c0 = inttoptr i32 %v1_100075c0 to i16*
  %v3_100075c0 = load i16, i16* %v2_100075c0, align 2
  %v4_100075c0 = zext i16 %v3_100075c0 to i32
  store i32 %v4_100075c0, i32* %r0.global-to-local, align 4
  %v2_100075c4 = icmp ult i32 %v4_100075c0, %v2_1000758c
  %v3_100075c4 = icmp ugt i32 %v4_100075c0, %v2_1000758c
  %v4_100075c4 = icmp eq i32 %v4_100075c0, %v2_1000758c
  br i1 %v3_100075c4, label %dec_label_pc_100075b4, label %dec_label_pc_100075cc

dec_label_pc_100075cc:                            ; preds = %dec_label_pc_100075bc
  %v1_100075cc = add i32 %v0_100075b4, 10
  %v2_100075cc = inttoptr i32 %v1_100075cc to i16*
  %v3_100075cc = load i16, i16* %v2_100075cc, align 2
  %v4_100075cc = zext i16 %v3_100075cc to i32
  store i32 %v4_100075cc, i32* %r0.global-to-local, align 4
  %v2_100075d0 = icmp ult i32 %v4_100075cc, %v2_1000758c
  %v3_100075d0 = icmp ugt i32 %v4_100075cc, %v2_1000758c
  %v4_100075d0 = icmp eq i32 %v4_100075cc, %v2_1000758c
  br i1 %v3_100075d0, label %dec_label_pc_100075d8.loopexit, label %dec_label_pc_100075b4

dec_label_pc_100075d8.loopexit:                   ; preds = %dec_label_pc_100075cc
  store i1 %v2_100075d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100075d0, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_100075d8

dec_label_pc_100075d8:                            ; preds = %dec_label_pc_100075d8.loopexit, %dec_label_pc_100076f0
  %v0_100075e0 = phi i32 [ %v0_100075b4, %dec_label_pc_100075d8.loopexit ], [ 0, %dec_label_pc_100076f0 ]
  %v0_100075d8 = load i32, i32* @r28, align 4
  %v1_100075d8 = add i32 %v0_100075d8, 4
  %v2_100075d8 = inttoptr i32 %v1_100075d8 to i32*
  %v3_100075d8 = load i32, i32* %v2_100075d8, align 4
  store i32 %v3_100075d8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_100075e0 = inttoptr i32 %v0_100075d8 to i32*
  store i32 %v0_100075e0, i32* %v2_100075e0, align 4
  %v0_100075e4 = load i32, i32* %r4.global-to-local, align 4
  %v1_100075e4 = load i32, i32* @r28, align 4
  %v2_100075e4 = add i32 %v1_100075e4, 24
  %v3_100075e4 = inttoptr i32 %v2_100075e4 to i32*
  store i32 %v0_100075e4, i32* %v3_100075e4, align 4
  %v0_10006988.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006984

dec_label_pc_10007600:                            ; preds = %dec_label_pc_10007540
  %v0_10007600 = load i32, i32* @r28, align 4
  %v1_10007600 = add i32 %v0_10007600, 4
  %v2_10007600 = inttoptr i32 %v1_10007600 to i32*
  %v3_10007600 = load i32, i32* %v2_10007600, align 4
  store i32 %v3_10007600, i32* %r3.global-to-local, align 4
  store i32 268465672, i32* @lr, align 4
  %v0_10007604 = call i32 @function_100083cc()
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10007610 = load i32, i32* @r28, align 4
  %v2_10007610 = add i32 %v1_10007610, 4
  %v3_10007610 = inttoptr i32 %v2_10007610 to i32*
  store i32 -1, i32* %v3_10007610, align 4
  %v0_10007614 = load i32, i32* %r10.global-to-local, align 4
  %v1_10007614 = load i32, i32* @r28, align 4
  %v2_10007614 = add i32 %v1_10007614, 12
  %v3_10007614 = inttoptr i32 %v2_10007614 to i32*
  store i32 %v0_10007614, i32* %v3_10007614, align 4
  %v0_10007618 = load i32, i32* %r29.global-to-local, align 4
  %v1_10007618 = trunc i32 %v0_10007618 to i8
  %v2_10007618 = load i32, i32* @r28, align 4
  %v3_10007618 = add i32 %v2_10007618, 284
  %v4_10007618 = inttoptr i32 %v3_10007618 to i8*
  store i8 %v1_10007618, i8* %v4_10007618, align 1
  br label %dec_label_pc_1000692c

dec_label_pc_100076f0.loopexit:                   ; preds = %dec_label_pc_100075b4
  store i1 %v2_100075d07, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100075d09, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_100076f0

dec_label_pc_100076f0:                            ; preds = %dec_label_pc_100076f0.loopexit, %dec_label_pc_10007570
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100075d8

dec_label_pc_10007720:                            ; preds = %dec_label_pc_1000742c
  store i32 104, i32* %r0.global-to-local, align 4
  %v1_10007724 = load i32, i32* %r22.global-to-local, align 4
  %v2_10007724 = inttoptr i32 %v1_10007724 to i32*
  store i32 104, i32* %v2_10007724, align 4
  br label %dec_label_pc_10007444

dec_label_pc_1000772c:                            ; preds = %dec_label_pc_10005dec
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10007730 = load i32, i32* @global_var_1001b474.111, align 4
  store i32 %v3_10007730, i32* %r3.global-to-local, align 4
  store i32 268465976, i32* @lr, align 4
  %v0_10007734 = call i32 @function_100083cc()
  store i32 %v0_10007734, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006aec

dec_label_pc_1000773c:                            ; preds = %dec_label_pc_10007444
  %v0_1000773c = load i32, i32* @r28, align 4
  store i32 %v0_1000773c, i32* @r3, align 4
  store i32 268465988, i32* @lr, align 4
  %v0_10007740 = call i32 @function_100059cc()
  store i32 %v0_10007740, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000692c

; uselistorder directives
  uselistorder i32 %v4_100075cc, { 2, 1, 0, 3 }
  uselistorder i32 %v4_100075c0, { 2, 1, 0, 3 }
  uselistorder i32 %v0_100075b4, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v1_100075b8, { 0, 2, 1 }
  uselistorder i32 %v2_1000758c, { 3, 2, 1, 6, 5, 4, 0, 7 }
  uselistorder i32 %v3_10007588, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v1_1000745c, { 1, 2, 0 }
  uselistorder i32 %v0_1000745c, { 1, 0 }
  uselistorder i32 %v2_10007438, { 1, 0, 2 }
  uselistorder i32 %v1_10006b78, { 1, 0 }
  uselistorder i32 %v0_10006b34, { 4, 3, 2, 5, 6, 7, 0, 1 }
  uselistorder i32 %v0_10006b28, { 1, 2, 0 }
  uselistorder i32 %v0_10006b14, { 4, 3, 2, 5, 6, 7, 1, 0 }
  uselistorder i32 %v0_10006b00, { 4, 3, 2, 5, 6, 7, 0, 1 }
  uselistorder i32 %v0_10006af4, { 1, 2, 0 }
  uselistorder i32 %v1_10006a38, { 1, 0 }
  uselistorder i32 %v3_10006a28, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v0_10006a28, { 1, 0 }
  uselistorder i32 %v1_10006a0c, { 2, 1, 0 }
  uselistorder i32 %v1_10006a08, { 1, 0 }
  uselistorder i32 %v1_10006a04, { 1, 0 }
  uselistorder i32 %v4_100069e0, { 3, 2, 6, 0, 1, 4, 5, 7 }
  uselistorder i32 %v2_100069d4, { 1, 0, 2 }
  uselistorder i32 %v3_100069cc, { 1, 0 }
  uselistorder i32 %v1_100069b4, { 1, 0, 2 }
  uselistorder i32 %v3_100069b0, { 1, 0, 2 }
  uselistorder i32 %v3_100069a4, { 1, 0, 2 }
  uselistorder i32 %v0_10007490, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1000699c, { 1, 0 }
  uselistorder i32 %v1_10006990, { 1, 0 }
  uselistorder i32 %v1_1000697c, { 2, 1, 0 }
  uselistorder i32 %v1_10006970, { 1, 0 }
  uselistorder i32 %v0_10006970, { 1, 0 }
  uselistorder i32 %v3_10006958, { 0, 2, 1, 3 }
  uselistorder i32 %v0_10006944, { 1, 0 }
  uselistorder i32 %v1_10006930, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v2_10007554, { 2, 3, 1, 0 }
  uselistorder i32 %v2_10007550, { 2, 3, 1, 0 }
  uselistorder i32 %v1_100068c8, { 2, 1, 4, 3, 5, 0 }
  uselistorder i32 %v1_100068ac, { 1, 2, 0 }
  uselistorder i32 %v1_100068a8, { 1, 0 }
  uselistorder i32 %v3_10006890, { 0, 2, 1, 3 }
  uselistorder i32 %v2_1000687c, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10006880, { 2, 1, 0 }
  uselistorder i1 %v3_10006868, { 2, 0, 1 }
  uselistorder i1 %v1_10006868, { 1, 0, 2 }
  uselistorder i32 %v3_10006864, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v2_10006860, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v1_10006838, { 0, 1, 4, 3, 2, 5 }
  uselistorder i32 %v2_10006818, { 1, 0 }
  uselistorder i32 %v3_10006b64, { 5, 0, 4, 3, 6, 2, 1, 7 }
  uselistorder i32 %v2_10006b68, { 5, 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_100067d8, { 1, 0 }
  uselistorder i32 %v1_100067d4, { 1, 0 }
  uselistorder i32 %v1_100067bc, { 1, 0 }
  uselistorder i32 %v6_10006794, { 1, 2, 0 }
  uselistorder i32 %v1_10006758, { 1, 0 }
  uselistorder i32 %v3_10006750, { 1, 0, 2 }
  uselistorder i32 %v1_1000674c, { 2, 1, 0 }
  uselistorder i32 %v1_10006748, { 1, 0 }
  uselistorder i32 %v0_10006750, { 0, 3, 2, 1 }
  uselistorder i32 %v3_10006730, { 1, 0, 2 }
  uselistorder i32 %v0_10006710, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v3_10006698, { 1, 0, 2 }
  uselistorder i32 %v2_10006684, { 1, 0, 2 }
  uselistorder i32 %v0_10006684, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_10006690, { 2, 1, 0 }
  uselistorder i1 %v3_100066c4, { 1, 0 }
  uselistorder i32 %v1_100066f4, { 1, 0 }
  uselistorder i32 %v1_100066ec, { 1, 0 }
  uselistorder i32 %v1_100066e4, { 1, 0 }
  uselistorder i32 %v1_10006704, { 2, 1, 0 }
  uselistorder i32 %v1_100066dc, { 1, 0 }
  uselistorder i32 %v4_100066cc, { 1, 0, 2 }
  uselistorder i32 %v2_10006660, { 0, 2, 1, 3 }
  uselistorder i32 %v1_10006634, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_100065c0, { 1, 0 }
  uselistorder i32 %v4_100065a0, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v1_10006510, { 3, 1, 2, 0 }
  uselistorder i32 %v1_100064c0, { 3, 1, 2, 0 }
  uselistorder i32 %v0_100064ac, { 0, 2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 18, 17, 20, 19, 22, 21, 23, 26, 25, 24, 28, 27, 30, 29, 32, 31, 34, 33, 36, 35, 38, 37, 40, 39, 41, 43, 42, 44, 45 }
  uselistorder i32 %v1_10006494, { 1, 2, 0 }
  uselistorder i32 %v0_10006490, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_10006480, { 1, 0 }
  uselistorder i32 %v3_10006450, { 1, 0, 2 }
  uselistorder i32 %v0_10006400, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10005e80, { 1, 0 }
  uselistorder i32 %v1_10005e40, { 3, 1, 2, 0 }
  uselistorder i32 %v5_10005e30, { 1, 0, 2 }
  uselistorder i32 %v3_10005dd4, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_10005dbc, { 1, 0 }
  uselistorder i32 %v0_10005db8, { 1, 0 }
  uselistorder i32 %v1_10005db4, { 1, 0 }
  uselistorder i32 %v0_10005da4, { 1, 2, 0 }
  uselistorder i32 %v2_10005d64, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_10005cc8, { 5, 3, 2, 4, 0, 1, 7, 6, 8 }
  uselistorder i64* %stack_var_-1900, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 0, 2, 1 }
  uselistorder i32* %stack_var_-1892, { 1, 0 }
  uselistorder i32 %tmp60, { 1, 2, 0 }
  uselistorder i8 %tmp59, { 2, 1, 0 }
  uselistorder i16 %tmp58, { 0, 1, 4, 3, 2 }
  uselistorder i32 %tmp56, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r9.global-to-local, { 0, 38, 39, 41, 40, 42, 43, 44, 45, 46, 47, 48, 51, 49, 50, 52, 53, 54, 55, 56, 57, 59, 58, 60, 61, 62, 63, 3, 5, 4, 64, 65, 1, 2, 6, 7, 8, 9, 36, 37, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 30, 31, 32, 34, 35 }
  uselistorder i32* %r7.global-to-local, { 6, 7, 0, 1, 2, 3, 4, 5 }
  uselistorder i32* %r6.global-to-local, { 14, 0, 1, 2, 3, 4, 5, 6, 15, 16, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r4.global-to-local, { 85, 86, 87, 88, 89, 0, 1, 2, 3, 4, 5, 6, 90, 91, 92, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84 }
  uselistorder i32* %r3.global-to-local, { 11, 12, 13, 110, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 122, 123, 124, 125, 126, 128, 127, 130, 129, 131, 132, 133, 120, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 29, 31, 32, 34, 33, 35, 36, 37, 38, 39, 41, 40, 42, 43, 44, 45, 46, 47, 49, 48, 50, 51, 52, 53, 55, 54, 56, 57, 58, 59, 60, 62, 61, 64, 63, 65, 67, 66, 68, 69, 70, 72, 71, 73, 74, 75, 76, 77, 78, 80, 79, 81, 82, 84, 83, 85, 86, 87, 88, 90, 89, 92, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 0 }
  uselistorder i32* %r29.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r28.global-to-local, { 3, 1, 2, 0 }
  uselistorder i32* %r22.global-to-local, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32* %r14.global-to-local, { 0, 1, 4, 2, 3 }
  uselistorder i32* %r11.global-to-local, { 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0, 28, 1, 15, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r10.global-to-local, { 12, 13, 14, 15, 16, 0, 18, 19, 20, 1, 2, 21, 3, 4, 5, 6, 7, 17, 8, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 5, 56, 57, 58, 59, 61, 60, 62, 63, 64, 65, 67, 66, 68, 69, 70, 71, 2, 3, 4, 72, 73, 0, 1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40 }
  uselistorder i32* %ctr.global-to-local, { 13, 14, 15, 16, 17, 18, 0, 1, 2, 3, 11, 12, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i1* %cr7_lt.global-to-local, { 1, 0, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 68, 70, 71, 72, 73, 4, 5, 74, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 69, 71, 72, 73, 74, 75, 4, 5, 76, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }
  uselistorder i16* @global_var_1001b468.107, { 2, 1, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10009000, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10008f88, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_10008694, { 0, 2, 1 }
  uselistorder i32 ()* @function_100059cc, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_10008fc0, { 2, 1, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_10009038, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 16384, { 22, 31, 9, 32, 8, 33, 7, 34, 6, 35, 0, 36, 1, 37, 2, 38, 3, 39, 4, 40, 5, 41, 10, 23, 25, 26, 27, 28, 29, 30, 24, 11, 42, 12, 43, 44, 45, 13, 15, 14, 16, 46, 17, 47, 48, 19, 18, 20, 49, 21, 50 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10003d0c, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_10003ca8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 198, { 1, 0, 2, 3 }
  uselistorder i32 172, { 1, 0, 2, 3 }
  uselistorder i32 (i32, i32, i32)* @function_10005ab8, { 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i16* @global_var_1001b4f6.121, { 2, 0, 1 }
  uselistorder i16 23, { 2, 3, 1, 0, 4 }
  uselistorder i8 64, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 65536, { 1, 0, 65, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 15, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64 }
  uselistorder i32 ()* @function_10005258, { 17, 65, 64, 63, 62, 61, 66, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 41, 42, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 4, 3, 2, 1, 0, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10009078, { 9, 8, 7, 6, 5, 4, 3, 0, 2, 1 }
  uselistorder i32 288, { 0, 1, 5, 6, 2, 7, 3, 4, 8 }
  uselistorder i32 ()* @function_1000879c, { 7, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 2, 1, 0, 6, 5, 4, 3 }
  uselistorder i32 (i32)* @function_100052a8, { 1, 0 }
  uselistorder i32 (i32)* @function_10007f90, { 2, 1, 3, 0 }
  uselistorder i32 ()* @function_10008414, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_100075d8, { 1, 0 }
  uselistorder label %dec_label_pc_10007444, { 1, 0 }
  uselistorder label %dec_label_pc_10006af4, { 1, 0 }
  uselistorder label %dec_label_pc_10006aec, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10006a10, { 1, 0 }
  uselistorder label %dec_label_pc_10006a08, { 1, 0 }
  uselistorder label %dec_label_pc_100069c0, { 1, 0 }
  uselistorder label %dec_label_pc_100069a4, { 1, 0 }
  uselistorder label %dec_label_pc_10006984, { 1, 0 }
  uselistorder label %dec_label_pc_1000692c, { 4, 5, 6, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_100068f8, { 1, 0 }
  uselistorder label %dec_label_pc_10006870, { 1, 0 }
  uselistorder label %dec_label_pc_10006834, { 3, 4, 0, 2, 5, 1 }
  uselistorder label %dec_label_pc_100067b0.dec_label_pc_100067b0_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_100067a0, { 1, 4, 2, 3, 0 }
  uselistorder label %dec_label_pc_10006684, { 1, 0 }
  uselistorder label %dec_label_pc_10006654, { 0, 1, 2, 7, 8, 3, 4, 5, 6, 9, 10 }
  uselistorder label %dec_label_pc_10006648, { 1, 0 }
  uselistorder label %dec_label_pc_10006574, { 0, 4, 1, 2, 5, 3, 6, 8, 7 }
  uselistorder label %dec_label_pc_10006490, { 19, 20, 21, 22, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23 }
  uselistorder label %dec_label_pc_10006490.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10005e3c, { 1, 0 }
}

define i32 @function_10007758(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_10007758:
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_10007758 = icmp eq i32* %arg2, null
  %v1_10007760 = mul i32 %arg1, 8
  store i32 %v1_10007760, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001b530.209 to i32), i32* %r9.global-to-local, align 4
  br i1 %v3_10007758, label %dec_label_pc_10007778, label %dec_label_pc_10007770

dec_label_pc_10007770:                            ; preds = %dec_label_pc_10007758
  %v1_10007770 = add i32 %v1_10007760, add (i32 ptrtoint (i32* @global_var_1001b530.209 to i32), i32 4)
  %v2_10007770 = inttoptr i32 %v1_10007770 to i16*
  %v3_10007770 = load i16, i16* %v2_10007770, align 4
  %v4_10007770 = zext i16 %v3_10007770 to i32
  store i32 %v4_10007770, i32* %arg2, align 4
  %v0_10007778.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_10007778.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10007778

dec_label_pc_10007778:                            ; preds = %dec_label_pc_10007758, %dec_label_pc_10007770
  %v1_10007778 = phi i32 [ ptrtoint (i32* @global_var_1001b530.209 to i32), %dec_label_pc_10007758 ], [ %v1_10007778.pre, %dec_label_pc_10007770 ]
  %v0_10007778 = phi i32 [ %v1_10007760, %dec_label_pc_10007758 ], [ %v0_10007778.pre, %dec_label_pc_10007770 ]
  %v2_10007778 = add i32 %v0_10007778, %v1_10007778
  %v3_10007778 = inttoptr i32 %v2_10007778 to i32*
  %v4_10007778 = load i32, i32* %v3_10007778, align 4
  store i32 %v4_10007778, i32* %r3.global-to-local, align 4
  ret i32 %v4_10007778

; uselistorder directives
  uselistorder i32 %v1_10007760, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10007778, { 1, 0 }
}

define i32 @function_10007780(i32 %arg1) local_unnamed_addr {
dec_label_pc_10007780:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %v1_10007784 = mul i32 %arg1, 8
  %v2_1000778c = add i32 %v1_10007784, ptrtoint (i32* @global_var_1001b530.209 to i32)
  %v1_10007794 = add i32 %v1_10007784, add (i32 ptrtoint (i32* @global_var_1001b530.209 to i32), i32 4)
  %v2_10007794 = inttoptr i32 %v1_10007794 to i16*
  %v3_10007794 = load i16, i16* %v2_10007794, align 4
  %v3_10007798 = icmp eq i16 %v3_10007794, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007798, i1* %cr7_eq.global-to-local, align 1
  %v3_1000779c = load i32, i32* @global_var_1001b42c.210, align 4
  %v1_100077a0 = udiv i32 %v3_1000779c, 16777216
  store i32 %v1_100077a0, i32* @r5, align 4
  %v1_100077a4 = urem i32 %v3_1000779c, 256
  store i32 %v1_100077a4, i32* %r6.global-to-local, align 4
  %v1_100077a8 = call i32 @__asm_rlwinm(i32 %v3_1000779c, i32 24, i32 24, i32 31)
  %v1_100077ac = call i32 @__asm_rlwinm(i32 %v3_1000779c, i32 16, i32 24, i32 31)
  %v0_100077b0 = load i32, i32* @lr, align 4
  %v1_100077b0 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v2_100077b0 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v3_100077b0 = or i1 %v1_100077b0, %v2_100077b0
  call void @__pseudo_cond_branch(i1 %v3_100077b0, i32 %v0_100077b0)
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_100077b8 = inttoptr i32 %v2_1000778c to i32*
  br label %dec_label_pc_100077b8

dec_label_pc_100077b8:                            ; preds = %dec_label_pc_100077b8, %dec_label_pc_10007780
  %v1_100077c4 = phi i32 [ %v1_100077f8, %dec_label_pc_100077b8 ], [ 0, %dec_label_pc_10007780 ]
  %v2_100077b8 = load i32, i32* %v1_100077b8, align 4
  %v2_100077bc = add i32 %v2_100077b8, %v1_100077c4
  %v3_100077bc = inttoptr i32 %v2_100077bc to i8*
  %v4_100077bc = load i8, i8* %v3_100077bc, align 1
  %v5_100077bc = zext i8 %v4_100077bc to i32
  %v0_100077c0 = load i32, i32* %r6.global-to-local, align 4
  %v2_100077c0 = xor i32 %v0_100077c0, %v5_100077bc
  %v3_100077c4 = trunc i32 %v2_100077c0 to i8
  store i8 %v3_100077c4, i8* %v3_100077bc, align 1
  %v2_100077c8 = load i32, i32* %v1_100077b8, align 4
  %v0_100077cc = load i32, i32* %r10.global-to-local, align 4
  %v2_100077cc = add i32 %v0_100077cc, %v2_100077c8
  %v3_100077cc = inttoptr i32 %v2_100077cc to i8*
  %v4_100077cc = load i8, i8* %v3_100077cc, align 1
  %v5_100077cc = zext i8 %v4_100077cc to i32
  %v2_100077d0 = xor i32 %v5_100077cc, %v1_100077a8
  %v3_100077d4 = trunc i32 %v2_100077d0 to i8
  store i8 %v3_100077d4, i8* %v3_100077cc, align 1
  %v2_100077d8 = load i32, i32* %v1_100077b8, align 4
  %v0_100077dc = load i32, i32* %r10.global-to-local, align 4
  %v2_100077dc = add i32 %v0_100077dc, %v2_100077d8
  %v3_100077dc = inttoptr i32 %v2_100077dc to i8*
  %v4_100077dc = load i8, i8* %v3_100077dc, align 1
  %v5_100077dc = zext i8 %v4_100077dc to i32
  %v2_100077e0 = xor i32 %v5_100077dc, %v1_100077ac
  %v3_100077e4 = trunc i32 %v2_100077e0 to i8
  store i8 %v3_100077e4, i8* %v3_100077dc, align 1
  %v2_100077e8 = load i32, i32* %v1_100077b8, align 4
  %v0_100077ec = load i32, i32* %r10.global-to-local, align 4
  %v2_100077ec = add i32 %v0_100077ec, %v2_100077e8
  %v3_100077ec = inttoptr i32 %v2_100077ec to i8*
  %v4_100077ec = load i8, i8* %v3_100077ec, align 1
  %v5_100077ec = zext i8 %v4_100077ec to i32
  %v0_100077f0 = load i32, i32* @r5, align 4
  %v2_100077f0 = xor i32 %v0_100077f0, %v5_100077ec
  %v3_100077f4 = trunc i32 %v2_100077f0 to i8
  store i8 %v3_100077f4, i8* %v3_100077ec, align 1
  %v0_100077f8 = load i32, i32* %r10.global-to-local, align 4
  %v1_100077f8 = add i32 %v0_100077f8, 1
  store i32 %v1_100077f8, i32* %r10.global-to-local, align 4
  %v3_100077fc = load i16, i16* %v2_10007794, align 4
  %v4_100077fc = zext i16 %v3_100077fc to i32
  %v2_10007800 = icmp slt i32 %v4_100077fc, %v1_100077f8
  %v3_10007800 = icmp sgt i32 %v4_100077fc, %v1_100077f8
  %v4_10007800 = icmp eq i32 %v4_100077fc, %v1_100077f8
  store i1 %v2_10007800, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007800, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007800, label %dec_label_pc_100077b8, label %dec_label_pc_10007808

dec_label_pc_10007808:                            ; preds = %dec_label_pc_100077b8
  ret i32 %v2_1000778c

; uselistorder directives
  uselistorder i32 %v4_100077fc, { 2, 1, 0 }
  uselistorder i32 %v1_100077f8, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v3_1000779c, { 2, 3, 1, 0 }
  uselistorder i32 %v2_1000778c, { 1, 0 }
  uselistorder i32 %v1_10007784, { 1, 0 }
}

define i32 @function_1000780c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000780c:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %v1_10007810 = mul i32 %arg1, 8
  %v2_10007818 = add i32 %v1_10007810, ptrtoint (i32* @global_var_1001b530.209 to i32)
  %v1_10007820 = add i32 %v1_10007810, add (i32 ptrtoint (i32* @global_var_1001b530.209 to i32), i32 4)
  %v2_10007820 = inttoptr i32 %v1_10007820 to i16*
  %v3_10007820 = load i16, i16* %v2_10007820, align 4
  %v3_10007824 = icmp eq i16 %v3_10007820, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007824, i1* %cr7_eq.global-to-local, align 1
  %v3_10007828 = load i32, i32* @global_var_1001b42c.210, align 4
  %v1_1000782c = udiv i32 %v3_10007828, 16777216
  store i32 %v1_1000782c, i32* @r5, align 4
  %v1_10007830 = urem i32 %v3_10007828, 256
  store i32 %v1_10007830, i32* %r6.global-to-local, align 4
  %v1_10007834 = call i32 @__asm_rlwinm(i32 %v3_10007828, i32 24, i32 24, i32 31)
  %v1_10007838 = call i32 @__asm_rlwinm(i32 %v3_10007828, i32 16, i32 24, i32 31)
  %v0_1000783c = load i32, i32* @lr, align 4
  %v1_1000783c = load i1, i1* %cr7_eq.global-to-local, align 1
  %v2_1000783c = load i1, i1* %cr7_lt.global-to-local, align 1
  %v3_1000783c = or i1 %v1_1000783c, %v2_1000783c
  call void @__pseudo_cond_branch(i1 %v3_1000783c, i32 %v0_1000783c)
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10007844 = inttoptr i32 %v2_10007818 to i32*
  br label %dec_label_pc_10007844

dec_label_pc_10007844:                            ; preds = %dec_label_pc_10007844, %dec_label_pc_1000780c
  %v1_10007850 = phi i32 [ %v1_10007884, %dec_label_pc_10007844 ], [ 0, %dec_label_pc_1000780c ]
  %v2_10007844 = load i32, i32* %v1_10007844, align 4
  %v2_10007848 = add i32 %v2_10007844, %v1_10007850
  %v3_10007848 = inttoptr i32 %v2_10007848 to i8*
  %v4_10007848 = load i8, i8* %v3_10007848, align 1
  %v5_10007848 = zext i8 %v4_10007848 to i32
  %v0_1000784c = load i32, i32* %r6.global-to-local, align 4
  %v2_1000784c = xor i32 %v0_1000784c, %v5_10007848
  %v3_10007850 = trunc i32 %v2_1000784c to i8
  store i8 %v3_10007850, i8* %v3_10007848, align 1
  %v2_10007854 = load i32, i32* %v1_10007844, align 4
  %v0_10007858 = load i32, i32* %r10.global-to-local, align 4
  %v2_10007858 = add i32 %v0_10007858, %v2_10007854
  %v3_10007858 = inttoptr i32 %v2_10007858 to i8*
  %v4_10007858 = load i8, i8* %v3_10007858, align 1
  %v5_10007858 = zext i8 %v4_10007858 to i32
  %v2_1000785c = xor i32 %v5_10007858, %v1_10007834
  %v3_10007860 = trunc i32 %v2_1000785c to i8
  store i8 %v3_10007860, i8* %v3_10007858, align 1
  %v2_10007864 = load i32, i32* %v1_10007844, align 4
  %v0_10007868 = load i32, i32* %r10.global-to-local, align 4
  %v2_10007868 = add i32 %v0_10007868, %v2_10007864
  %v3_10007868 = inttoptr i32 %v2_10007868 to i8*
  %v4_10007868 = load i8, i8* %v3_10007868, align 1
  %v5_10007868 = zext i8 %v4_10007868 to i32
  %v2_1000786c = xor i32 %v5_10007868, %v1_10007838
  %v3_10007870 = trunc i32 %v2_1000786c to i8
  store i8 %v3_10007870, i8* %v3_10007868, align 1
  %v2_10007874 = load i32, i32* %v1_10007844, align 4
  %v0_10007878 = load i32, i32* %r10.global-to-local, align 4
  %v2_10007878 = add i32 %v0_10007878, %v2_10007874
  %v3_10007878 = inttoptr i32 %v2_10007878 to i8*
  %v4_10007878 = load i8, i8* %v3_10007878, align 1
  %v5_10007878 = zext i8 %v4_10007878 to i32
  %v0_1000787c = load i32, i32* @r5, align 4
  %v2_1000787c = xor i32 %v0_1000787c, %v5_10007878
  %v3_10007880 = trunc i32 %v2_1000787c to i8
  store i8 %v3_10007880, i8* %v3_10007878, align 1
  %v0_10007884 = load i32, i32* %r10.global-to-local, align 4
  %v1_10007884 = add i32 %v0_10007884, 1
  store i32 %v1_10007884, i32* %r10.global-to-local, align 4
  %v3_10007888 = load i16, i16* %v2_10007820, align 4
  %v4_10007888 = zext i16 %v3_10007888 to i32
  %v2_1000788c = icmp slt i32 %v4_10007888, %v1_10007884
  %v3_1000788c = icmp sgt i32 %v4_10007888, %v1_10007884
  %v4_1000788c = icmp eq i32 %v4_10007888, %v1_10007884
  store i1 %v2_1000788c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000788c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000788c, label %dec_label_pc_10007844, label %dec_label_pc_10007894

dec_label_pc_10007894:                            ; preds = %dec_label_pc_10007844
  ret i32 %v2_10007818

; uselistorder directives
  uselistorder i32 %v4_10007888, { 2, 1, 0 }
  uselistorder i32 %v1_10007884, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v3_10007828, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10007810, { 1, 0 }
  uselistorder i32 16777216, { 0, 1, 2, 3, 5, 4, 7, 6, 9, 8 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_1001b530.209 to i32), i32 4), { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1001b530.209 to i32), { 1, 3, 0, 2, 4 }
}

define i32 @function_10007898(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10007898:
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  store i32 2, i32* @r3, align 4
  store i32 17, i32* %r25.global-to-local, align 4
  store i32 6, i32* %r26.global-to-local, align 4
  store i32 2, i32* %r27.global-to-local, align 4
  store i32 268466380, i32* @lr, align 4
  %v0_100078c8 = call i32 @function_100092b8()
  store i32 %v0_100078c8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100078e8.212 to i32), i32* @lr, align 4
  %v4_100078e4 = call i32 @function_10007d10(i32 ptrtoint ([3 x i8]* @global_var_1000ae34.211 to i32), i32 2, i32 2)
  store i32 17, i32* @r3, align 4
  %v0_100078ec = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100078ec, i32* @global_var_1001b540.213, align 4
  %v0_100078f0 = load i32, i32* %r27.global-to-local, align 4
  %v1_100078f0 = trunc i32 %v0_100078f0 to i16
  store i16 %v1_100078f0, i16* bitcast (i32* @global_var_1001b544.214 to i16*), align 4
  store i32 268466424, i32* @lr, align 4
  %v0_100078f4 = call i32 @function_100092b8()
  store i32 %v0_100078f4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000790c.216 to i32), i32* @lr, align 4
  %v4_10007908 = call i32 @function_10007d10(i32 ptrtoint ([18 x i8]* @global_var_1000ae38.215 to i32), i32 17, i32 17)
  store i32 2, i32* @r3, align 4
  %v0_10007910 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007910, i32* @global_var_1001b5e8.217, align 4
  %v0_10007914 = load i32, i32* %r25.global-to-local, align 4
  %v1_10007914 = trunc i32 %v0_10007914 to i16
  store i16 %v1_10007914, i16* bitcast (i32* @global_var_1001b5ec.218 to i16*), align 4
  store i32 268466460, i32* @lr, align 4
  %v0_10007918 = call i32 @function_100092b8()
  store i32 %v0_10007918, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007930.220 to i32), i32* @lr, align 4
  %v3_1000792c = call i32 @function_10007d10(i32 ptrtoint (i32* @global_var_1000ae4c.219 to i32), i32 2, i32 2)
  store i32 58, i32* @r3, align 4
  %v0_10007934 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007934, i32* @global_var_1001b5f0.221, align 4
  %v0_10007938 = load i32, i32* %r27.global-to-local, align 4
  %v1_10007938 = trunc i32 %v0_10007938 to i16
  store i16 %v1_10007938, i16* bitcast (i32* @global_var_1001b5f4.222 to i16*), align 4
  store i32 268466496, i32* @lr, align 4
  %v0_1000793c = call i32 @function_100092b8()
  store i32 %v0_1000793c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007954.224 to i32), i32* @lr, align 4
  %v4_10007950 = call i32 @function_10007d10(i32 ptrtoint ([59 x i8]* @global_var_1000ae50.223 to i32), i32 58, i32 58)
  store i32 6, i32* @r3, align 4
  store i16 58, i16* bitcast (i32* @global_var_1001b53c.225 to i16*), align 4
  %v0_10007960 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007960, i32* @global_var_1001b538.226, align 4
  store i32 268466536, i32* @lr, align 4
  %v0_10007964 = call i32 @function_100092b8()
  store i32 %v0_10007964, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000797c.228 to i32), i32* @lr, align 4
  %v4_10007978 = call i32 @function_10007d10(i32 ptrtoint ([7 x i8]* @global_var_1000ae8c.227 to i32), i32 6, i32 6)
  store i32 7, i32* @r3, align 4
  %v0_10007980 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007980, i32* @global_var_1001b5b0.229, align 4
  store i32 7, i32* %r27.global-to-local, align 4
  %v0_10007988 = load i32, i32* %r26.global-to-local, align 4
  %v1_10007988 = trunc i32 %v0_10007988 to i16
  store i16 %v1_10007988, i16* bitcast (i32* @global_var_1001b5b4.230 to i16*), align 4
  store i32 268466576, i32* @lr, align 4
  %v0_1000798c = call i32 @function_100092b8()
  store i32 %v0_1000798c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100079a4.232 to i32), i32* @lr, align 4
  %v4_100079a0 = call i32 @function_10007d10(i32 ptrtoint ([8 x i8]* @global_var_1000ae94.231 to i32), i32 7, i32 7)
  store i32 7, i32* @r3, align 4
  %v0_100079a8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100079a8, i32* @global_var_1001b5b8.233, align 4
  %v0_100079ac = load i32, i32* %r27.global-to-local, align 4
  %v1_100079ac = trunc i32 %v0_100079ac to i16
  store i16 %v1_100079ac, i16* bitcast (i32* @global_var_1001b5bc.234 to i16*), align 4
  store i32 268466612, i32* @lr, align 4
  %v0_100079b0 = call i32 @function_100092b8()
  store i32 %v0_100079b0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100079c8.236 to i32), i32* @lr, align 4
  %v4_100079c4 = call i32 @function_10007d10(i32 ptrtoint ([8 x i8]* @global_var_1000ae9c.235 to i32), i32 7, i32 7)
  store i32 3, i32* @r3, align 4
  %v0_100079cc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100079cc, i32* @global_var_1001b5c0.237, align 4
  %v0_100079d0 = load i32, i32* %r27.global-to-local, align 4
  %v1_100079d0 = trunc i32 %v0_100079d0 to i16
  store i16 %v1_100079d0, i16* bitcast (i32* @global_var_1001b5c4.238 to i16*), align 4
  store i32 268466648, i32* @lr, align 4
  %v0_100079d4 = call i32 @function_100092b8()
  store i32 %v0_100079d4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100079ec.240 to i32), i32* @lr, align 4
  %v4_100079e8 = call i32 @function_10007d10(i32 ptrtoint ([4 x i8]* @global_var_1000aea4.239 to i32), i32 3, i32 3)
  store i32 20, i32* @r3, align 4
  store i16 3, i16* bitcast (i32* @global_var_1001b5d4.241 to i16*), align 4
  %v0_100079f8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100079f8, i32* @global_var_1001b5d0.242, align 4
  store i32 268466688, i32* @lr, align 4
  %v0_100079fc = call i32 @function_100092b8()
  store i32 %v0_100079fc, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007a14.244 to i32), i32* @lr, align 4
  %v3_10007a10 = call i32 @function_10007d10(i32 ptrtoint (i32* @global_var_1000aea8.243 to i32), i32 20, i32 20)
  store i32 25, i32* @r3, align 4
  store i16 20, i16* bitcast (i32* @global_var_1001b5cc.245 to i16*), align 4
  %v0_10007a20 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007a20, i32* @global_var_1001b5c8.246, align 4
  store i32 268466728, i32* @lr, align 4
  %v0_10007a24 = call i32 @function_100092b8()
  store i32 %v0_10007a24, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007a3c.248 to i32), i32* @lr, align 4
  %v3_10007a38 = call i32 @function_10007d10(i32 ptrtoint (i32* @global_var_1000aec0.247 to i32), i32 25, i32 25)
  store i32 9, i32* @r3, align 4
  store i16 25, i16* bitcast (i32* @global_var_1001b5dc.249 to i16*), align 4
  %v0_10007a48 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007a48, i32* @global_var_1001b5d8.250, align 4
  store i32 268466768, i32* @lr, align 4
  %v0_10007a4c = call i32 @function_100092b8()
  store i32 %v0_10007a4c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007a64.252 to i32), i32* @lr, align 4
  %v4_10007a60 = call i32 @function_10007d10(i32 ptrtoint ([10 x i8]* @global_var_1000aedc.251 to i32), i32 9, i32 9)
  store i32 16, i32* @r3, align 4
  store i16 9, i16* bitcast (i32* @global_var_1001b5e4.253 to i16*), align 4
  %v0_10007a70 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007a70, i32* @global_var_1001b5e0.254, align 4
  store i32 268466808, i32* @lr, align 4
  %v0_10007a74 = call i32 @function_100092b8()
  store i32 %v0_10007a74, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007a8c.256 to i32), i32* @lr, align 4
  %v4_10007a88 = call i32 @function_10007d10(i32 ptrtoint ([17 x i8]* @global_var_1000aee8.255 to i32), i32 16, i32 16)
  store i32 22, i32* @r3, align 4
  store i16 16, i16* bitcast (i32* @global_var_1001b5fc.257 to i16*), align 4
  %v0_10007a98 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007a98, i32* @global_var_1001b5f8.258, align 4
  store i32 268466848, i32* @lr, align 4
  %v0_10007a9c = call i32 @function_100092b8()
  store i32 %v0_10007a9c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007ab4.260 to i32), i32* @lr, align 4
  %v4_10007ab0 = call i32 @function_10007d10(i32 ptrtoint ([23 x i8]* @global_var_1000aefc.259 to i32), i32 22, i32 22)
  store i32 7, i32* @r3, align 4
  store i16 22, i16* bitcast (i32* @global_var_1001b604.261 to i16*), align 4
  %v0_10007ac0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007ac0, i32* @global_var_1001b600.262, align 4
  store i32 268466888, i32* @lr, align 4
  %v0_10007ac4 = call i32 @function_100092b8()
  store i32 %v0_10007ac4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007adc.264 to i32), i32* @lr, align 4
  %v4_10007ad8 = call i32 @function_10007d10(i32 ptrtoint ([8 x i8]* @global_var_1000af14.263 to i32), i32 7, i32 7)
  store i32 5, i32* @r3, align 4
  %v0_10007ae0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007ae0, i32* @global_var_1001b548.265, align 4
  %v0_10007ae4 = load i32, i32* %r27.global-to-local, align 4
  %v1_10007ae4 = trunc i32 %v0_10007ae4 to i16
  store i16 %v1_10007ae4, i16* bitcast (i32* @global_var_1001b54c.266 to i16*), align 4
  store i32 268466924, i32* @lr, align 4
  %v0_10007ae8 = call i32 @function_100092b8()
  store i32 %v0_10007ae8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007b00.268 to i32), i32* @lr, align 4
  %v4_10007afc = call i32 @function_10007d10(i32 ptrtoint ([6 x i8]* @global_var_1000af1c.267 to i32), i32 5, i32 5)
  store i32 4, i32* @r3, align 4
  store i16 5, i16* bitcast (i32* @global_var_1001b554.269 to i16*), align 4
  %v0_10007b0c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007b0c, i32* @global_var_1001b550.270, align 4
  store i32 268466964, i32* @lr, align 4
  %v0_10007b10 = call i32 @function_100092b8()
  store i32 %v0_10007b10, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007b28.272 to i32), i32* @lr, align 4
  %v4_10007b24 = call i32 @function_10007d10(i32 ptrtoint ([5 x i8]* @global_var_1000af24.271 to i32), i32 4, i32 4)
  store i32 6, i32* @r3, align 4
  store i16 4, i16* bitcast (i32* @global_var_1001b564.273 to i16*), align 4
  %v0_10007b34 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007b34, i32* @global_var_1001b560.274, align 4
  store i32 268467004, i32* @lr, align 4
  %v0_10007b38 = call i32 @function_100092b8()
  store i32 %v0_10007b38, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007b50.276 to i32), i32* @lr, align 4
  %v4_10007b4c = call i32 @function_10007d10(i32 ptrtoint ([7 x i8]* @global_var_1000af2c.275 to i32), i32 6, i32 6)
  store i32 14, i32* @r3, align 4
  %v0_10007b54 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007b54, i32* @global_var_1001b568.277, align 4
  store i32 14, i32* %r27.global-to-local, align 4
  %v0_10007b5c = load i32, i32* %r26.global-to-local, align 4
  %v1_10007b5c = trunc i32 %v0_10007b5c to i16
  store i16 %v1_10007b5c, i16* bitcast (i32* @global_var_1001b56c.278 to i16*), align 4
  store i32 268467044, i32* @lr, align 4
  %v0_10007b60 = call i32 @function_100092b8()
  store i32 %v0_10007b60, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007b78.280 to i32), i32* @lr, align 4
  %v4_10007b74 = call i32 @function_10007d10(i32 ptrtoint ([15 x i8]* @global_var_1000af34.279 to i32), i32 14, i32 14)
  store i32 10, i32* @r3, align 4
  %v0_10007b7c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007b7c, i32* @global_var_1001b570.281, align 4
  %v0_10007b80 = load i32, i32* %r27.global-to-local, align 4
  %v1_10007b80 = trunc i32 %v0_10007b80 to i16
  store i16 %v1_10007b80, i16* bitcast (i32* @global_var_1001b574.282 to i16*), align 4
  store i32 268467080, i32* @lr, align 4
  %v0_10007b84 = call i32 @function_100092b8()
  store i32 %v0_10007b84, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007b9c.284 to i32), i32* @lr, align 4
  %v4_10007b98 = call i32 @function_10007d10(i32 ptrtoint ([11 x i8]* @global_var_1000af44.283 to i32), i32 10, i32 10)
  store i32 21, i32* @r3, align 4
  store i16 10, i16* bitcast (i32* @global_var_1001b57c.285 to i16*), align 4
  %v0_10007ba8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007ba8, i32* @global_var_1001b578.286, align 4
  store i32 268467120, i32* @lr, align 4
  %v0_10007bac = call i32 @function_100092b8()
  store i32 %v0_10007bac, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007bc4.288 to i32), i32* @lr, align 4
  %v3_10007bc0 = call i32 @function_10007d10(i32 ptrtoint (i32* @global_var_1000af98.287 to i32), i32 21, i32 21)
  store i32 17, i32* @r3, align 4
  store i16 21, i16* bitcast (i32* @global_var_1001b584.289 to i16*), align 4
  %v0_10007bd0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007bd0, i32* @global_var_1001b580.290, align 4
  store i32 268467160, i32* @lr, align 4
  %v0_10007bd4 = call i32 @function_100092b8()
  store i32 %v0_10007bd4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007bec.292 to i32), i32* @lr, align 4
  %v4_10007be8 = call i32 @function_10007d10(i32 ptrtoint ([18 x i8]* @global_var_1000af50.291 to i32), i32 17, i32 17)
  store i32 12, i32* @r3, align 4
  %v0_10007bf0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007bf0, i32* @global_var_1001b588.293, align 4
  %v0_10007bf4 = load i32, i32* %r25.global-to-local, align 4
  %v1_10007bf4 = trunc i32 %v0_10007bf4 to i16
  store i16 %v1_10007bf4, i16* bitcast (i32* @global_var_1001b58c.294 to i16*), align 4
  store i32 268467196, i32* @lr, align 4
  %v0_10007bf8 = call i32 @function_100092b8()
  store i32 %v0_10007bf8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007c10.296 to i32), i32* @lr, align 4
  %v4_10007c0c = call i32 @function_10007d10(i32 ptrtoint ([13 x i8]* @global_var_1000af64.295 to i32), i32 12, i32 12)
  store i32 14, i32* @r3, align 4
  store i16 12, i16* bitcast (i32* @global_var_1001b594.297 to i16*), align 4
  %v0_10007c1c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007c1c, i32* @global_var_1001b590.298, align 4
  store i32 268467236, i32* @lr, align 4
  %v0_10007c20 = call i32 @function_100092b8()
  store i32 %v0_10007c20, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007c38.300 to i32), i32* @lr, align 4
  %v4_10007c34 = call i32 @function_10007d10(i32 ptrtoint ([15 x i8]* @global_var_1000af74.299 to i32), i32 14, i32 14)
  store i32 19, i32* @r3, align 4
  %v0_10007c3c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007c3c, i32* @global_var_1001b598.301, align 4
  %v0_10007c40 = load i32, i32* %r27.global-to-local, align 4
  %v1_10007c40 = trunc i32 %v0_10007c40 to i16
  store i16 %v1_10007c40, i16* bitcast (i32* @global_var_1001b59c.302 to i16*), align 4
  store i32 268467272, i32* @lr, align 4
  %v0_10007c44 = call i32 @function_100092b8()
  store i32 %v0_10007c44, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007c5c.304 to i32), i32* @lr, align 4
  %v4_10007c58 = call i32 @function_10007d10(i32 ptrtoint ([20 x i8]* @global_var_1000af84.303 to i32), i32 19, i32 19)
  store i16 19, i16* bitcast (i32* @global_var_1001b5a4.305 to i16*), align 4
  %v0_10007c68 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007c68, i32* @global_var_1001b5a0.306, align 4
  ret i32 %v4_10007c58

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @function_10007d10, { 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_10007c8c(i8* %arg1) local_unnamed_addr {
dec_label_pc_10007c8c:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_10007c8c = load i8, i8* %arg1, align 1
  %v3_10007c98 = icmp eq i8 %v3_10007c8c, 0
  %v0_10007c9c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10007c98, i32 %v0_10007c9c)
  br label %dec_label_pc_10007ca0

dec_label_pc_10007ca0:                            ; preds = %dec_label_pc_10007ca0, %dec_label_pc_10007c8c
  %v0_10007ca0 = phi i32 [ %v1_10007ca0, %dec_label_pc_10007ca0 ], [ 0, %dec_label_pc_10007c8c ]
  %v1_10007ca0 = add i32 %v0_10007ca0, 1
  %v2_10007ca4 = add i32 %v1_10007ca0, %tmp
  %v3_10007ca4 = inttoptr i32 %v2_10007ca4 to i8*
  %v4_10007ca4 = load i8, i8* %v3_10007ca4, align 1
  %v3_10007ca8 = icmp eq i8 %v4_10007ca4, 0
  br i1 %v3_10007ca8, label %dec_label_pc_10007cb0, label %dec_label_pc_10007ca0

dec_label_pc_10007cb0:                            ; preds = %dec_label_pc_10007ca0
  ret i32 %v1_10007ca0
}

define i32 @function_10007cb4(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10007cb4:
  %ctr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_10007cb4 = load i8, i8* %arg1, align 1
  %v3_10007cb8 = icmp eq i8 %v2_10007cb4, 0
  br i1 %v3_10007cb8, label %dec_label_pc_10007d04, label %dec_label_pc_10007cc0

dec_label_pc_10007cc0:                            ; preds = %dec_label_pc_10007cb4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10007cc4

dec_label_pc_10007cc4:                            ; preds = %dec_label_pc_10007cc4, %dec_label_pc_10007cc0
  %v0_10007cc4 = phi i32 [ %v1_10007cc4, %dec_label_pc_10007cc4 ], [ 0, %dec_label_pc_10007cc0 ]
  %v1_10007cc4 = add i32 %v0_10007cc4, 1
  store i32 %v1_10007cc4, i32* %r9.global-to-local, align 4
  %v2_10007cc8 = add i32 %v1_10007cc4, %tmp
  %v3_10007cc8 = inttoptr i32 %v2_10007cc8 to i8*
  %v4_10007cc8 = load i8, i8* %v3_10007cc8, align 1
  %v3_10007ccc = icmp eq i8 %v4_10007cc8, 0
  br i1 %v3_10007ccc, label %dec_label_pc_10007cd4, label %dec_label_pc_10007cc4

dec_label_pc_10007cd4:                            ; preds = %dec_label_pc_10007cc4
  %v3_10007cd4 = icmp eq i32 %v1_10007cc4, -1
  br i1 %v3_10007cd4, label %dec_label_pc_10007cfc, label %dec_label_pc_10007cdc

dec_label_pc_10007cdc:                            ; preds = %dec_label_pc_10007cd4
  %phitmp = add i32 %v0_10007cc4, 2
  br label %dec_label_pc_10007ce0

dec_label_pc_10007ce0:                            ; preds = %dec_label_pc_10007d04, %dec_label_pc_10007cdc
  %v0_10007ce0 = phi i32 [ 1, %dec_label_pc_10007d04 ], [ %phitmp, %dec_label_pc_10007cdc ]
  store i32 %v0_10007ce0, i32* %ctr.global-to-local, align 4
  %v2_10007cf0.pre = load i32, i32* @r3, align 4
  %v2_10007ce88 = load i8, i8* %arg1, align 1
  %v1_10007cec10 = add i32 %tmp, 1
  store i32 %v1_10007cec10, i32* %r4.global-to-local, align 4
  %v3_10007cf011 = inttoptr i32 %v2_10007cf0.pre to i8*
  store i8 %v2_10007ce88, i8* %v3_10007cf011, align 1
  %v0_10007cf412 = load i32, i32* @r3, align 4
  %v1_10007cf413 = add i32 %v0_10007cf412, 1
  store i32 %v1_10007cf413, i32* %r3.global-to-local, align 4
  %v0_10007cf814 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007cf815 = add i32 %v0_10007cf814, -1
  store i32 %v1_10007cf815, i32* %ctr.global-to-local, align 4
  %v2_10007cf816 = icmp eq i32 %v1_10007cf815, 0
  br i1 %v2_10007cf816, label %dec_label_pc_10007cfc.loopexit, label %dec_label_pc_10007ce8.dec_label_pc_10007ce8_crit_edge

dec_label_pc_10007ce8.dec_label_pc_10007ce8_crit_edge: ; preds = %dec_label_pc_10007ce0, %dec_label_pc_10007ce8.dec_label_pc_10007ce8_crit_edge
  %v1_10007cf417 = phi i32 [ %v1_10007cf4, %dec_label_pc_10007ce8.dec_label_pc_10007ce8_crit_edge ], [ %v1_10007cf413, %dec_label_pc_10007ce0 ]
  %v0_10007ce8.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10007ce8 = inttoptr i32 %v0_10007ce8.pre to i8*
  %v2_10007ce8 = load i8, i8* %v1_10007ce8, align 1
  %v1_10007cec = add i32 %v0_10007ce8.pre, 1
  store i32 %v1_10007cec, i32* %r4.global-to-local, align 4
  %v3_10007cf0 = inttoptr i32 %v1_10007cf417 to i8*
  store i8 %v2_10007ce8, i8* %v3_10007cf0, align 1
  %v0_10007cf4 = load i32, i32* %r3.global-to-local, align 4
  %v1_10007cf4 = add i32 %v0_10007cf4, 1
  store i32 %v1_10007cf4, i32* %r3.global-to-local, align 4
  %v0_10007cf8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007cf8 = add i32 %v0_10007cf8, -1
  store i32 %v1_10007cf8, i32* %ctr.global-to-local, align 4
  %v2_10007cf8 = icmp eq i32 %v1_10007cf8, 0
  br i1 %v2_10007cf8, label %dec_label_pc_10007cfc.loopexit, label %dec_label_pc_10007ce8.dec_label_pc_10007ce8_crit_edge

dec_label_pc_10007cfc.loopexit:                   ; preds = %dec_label_pc_10007ce8.dec_label_pc_10007ce8_crit_edge, %dec_label_pc_10007ce0
  %v0_10007cfc.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10007cfc

dec_label_pc_10007cfc:                            ; preds = %dec_label_pc_10007cfc.loopexit, %dec_label_pc_10007cd4
  %v0_10007cfc = phi i32 [ %v0_10007cfc.pre, %dec_label_pc_10007cfc.loopexit ], [ -1, %dec_label_pc_10007cd4 ]
  store i32 %v0_10007cfc, i32* %r3.global-to-local, align 4
  ret i32 %v0_10007cfc

dec_label_pc_10007d04:                            ; preds = %dec_label_pc_10007cb4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10007ce0

; uselistorder directives
  uselistorder i32 %v0_10007cfc, { 1, 0 }
  uselistorder i32 %v1_10007cf8, { 1, 0 }
  uselistorder i32 %v1_10007cf4, { 1, 0 }
  uselistorder i32 %v1_10007cc4, { 0, 1, 3, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_10007ce8.dec_label_pc_10007ce8_crit_edge, { 1, 0 }
}

define i32 @function_10007d10(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10007d10:
  %ctr.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_10007d10 = icmp eq i32 %arg3, 0
  store i32 %arg3, i32* %ctr.global-to-local, align 4
  %v0_10007d18 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10007d10, i32 %v0_10007d18)
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10007d20

dec_label_pc_10007d20:                            ; preds = %dec_label_pc_10007d20, %dec_label_pc_10007d10
  %v0_10007d20 = phi i32 [ %v1_10007d28, %dec_label_pc_10007d20 ], [ 0, %dec_label_pc_10007d10 ]
  %v2_10007d20 = add i32 %v0_10007d20, %arg2
  %v3_10007d20 = inttoptr i32 %v2_10007d20 to i8*
  %v4_10007d20 = load i8, i8* %v3_10007d20, align 1
  %v4_10007d24 = add i32 %v0_10007d20, %arg1
  %v5_10007d24 = inttoptr i32 %v4_10007d24 to i8*
  store i8 %v4_10007d20, i8* %v5_10007d24, align 1
  %v0_10007d28 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007d28 = add i32 %v0_10007d28, 1
  store i32 %v1_10007d28, i32* %r9.global-to-local, align 4
  %v0_10007d2c = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007d2c = add i32 %v0_10007d2c, -1
  store i32 %v1_10007d2c, i32* %ctr.global-to-local, align 4
  %v2_10007d2c = icmp eq i32 %v1_10007d2c, 0
  br i1 %v2_10007d2c, label %dec_label_pc_10007d30, label %dec_label_pc_10007d20

dec_label_pc_10007d30:                            ; preds = %dec_label_pc_10007d20
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_10007d2c, { 1, 0 }
  uselistorder i32 %v1_10007d28, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_10007d34() local_unnamed_addr {
dec_label_pc_10007d34:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10007d34 = load i32, i32* @r4, align 4
  store i32 %v0_10007d34, i32* %r0.global-to-local, align 4
  %v3_10007d34 = icmp eq i32 %v0_10007d34, 0
  store i32 %v0_10007d34, i32* %ctr.global-to-local, align 4
  %v0_10007d3c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10007d34, i32 %v0_10007d3c)
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10007d483 = load i32, i32* @r3, align 4
  %v5_10007d484 = inttoptr i32 %v2_10007d483 to i8*
  store i8 0, i8* %v5_10007d484, align 1
  %v0_10007d4c5 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007d4c6 = add i32 %v0_10007d4c5, 1
  store i32 %v1_10007d4c6, i32* %r9.global-to-local, align 4
  %v0_10007d507 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007d508 = add i32 %v0_10007d507, -1
  store i32 %v1_10007d508, i32* %ctr.global-to-local, align 4
  %v2_10007d509 = icmp eq i32 %v1_10007d508, 0
  br i1 %v2_10007d509, label %dec_label_pc_10007d54, label %dec_label_pc_10007d48.dec_label_pc_10007d48_crit_edge

dec_label_pc_10007d48.dec_label_pc_10007d48_crit_edge: ; preds = %dec_label_pc_10007d34, %dec_label_pc_10007d48.dec_label_pc_10007d48_crit_edge
  %v1_10007d4c10 = phi i32 [ %v1_10007d4c, %dec_label_pc_10007d48.dec_label_pc_10007d48_crit_edge ], [ %v1_10007d4c6, %dec_label_pc_10007d34 ]
  %v0_10007d48.pre = load i32, i32* %r0.global-to-local, align 4
  %extract.t = trunc i32 %v0_10007d48.pre to i8
  %v2_10007d48 = load i32, i32* @r3, align 4
  %v4_10007d48 = add i32 %v2_10007d48, %v1_10007d4c10
  %v5_10007d48 = inttoptr i32 %v4_10007d48 to i8*
  store i8 %extract.t, i8* %v5_10007d48, align 1
  %v0_10007d4c = load i32, i32* %r9.global-to-local, align 4
  %v1_10007d4c = add i32 %v0_10007d4c, 1
  store i32 %v1_10007d4c, i32* %r9.global-to-local, align 4
  %v0_10007d50 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007d50 = add i32 %v0_10007d50, -1
  store i32 %v1_10007d50, i32* %ctr.global-to-local, align 4
  %v2_10007d50 = icmp eq i32 %v1_10007d50, 0
  br i1 %v2_10007d50, label %dec_label_pc_10007d54, label %dec_label_pc_10007d48.dec_label_pc_10007d48_crit_edge

dec_label_pc_10007d54:                            ; preds = %dec_label_pc_10007d48.dec_label_pc_10007d48_crit_edge, %dec_label_pc_10007d34
  %v0_10007d54 = load i32, i32* @r3, align 4
  ret i32 %v0_10007d54

; uselistorder directives
  uselistorder i32 %v1_10007d50, { 1, 0 }
  uselistorder i32 %v1_10007d4c, { 1, 0 }
  uselistorder i32 %v0_10007d34, { 0, 2, 1 }
  uselistorder i32* %r9.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_10007d48.dec_label_pc_10007d48_crit_edge, { 1, 0 }
}

define i32 @function_10007d58(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10007d58:
  %v3_10007d58 = icmp slt i32 %arg2, 0
  br i1 %v3_10007d58, label %dec_label_pc_10007d64, label %dec_label_pc_10007d6c

dec_label_pc_10007d64:                            ; preds = %dec_label_pc_10007d88, %dec_label_pc_10007d58, %dec_label_pc_10007d6c
  ret i32 -1

dec_label_pc_10007d6c:                            ; preds = %dec_label_pc_10007d58
  %tmp = icmp eq i32 %arg2, 0
  br i1 %tmp, label %dec_label_pc_10007d64, label %dec_label_pc_10007d74

dec_label_pc_10007d74:                            ; preds = %dec_label_pc_10007d6c
  br label %dec_label_pc_10007d90

dec_label_pc_10007d84:                            ; preds = %dec_label_pc_10007d90
  br label %dec_label_pc_10007d88

dec_label_pc_10007d88:                            ; preds = %dec_label_pc_10007da8, %dec_label_pc_10007d84
  %v0_10007d901 = phi i32 [ %v1_10007d94, %dec_label_pc_10007da8 ], [ 0, %dec_label_pc_10007d84 ]
  %v1_10007d88 = add i32 %v0_10007dac, 1
  %v1_10007d8c = add i32 %v0_10007d8c, -1
  %v2_10007d8c = icmp eq i32 %v1_10007d8c, 0
  br i1 %v2_10007d8c, label %dec_label_pc_10007d64, label %dec_label_pc_10007d90

dec_label_pc_10007d90:                            ; preds = %dec_label_pc_10007d88, %dec_label_pc_10007d74
  %v0_10007d8c = phi i32 [ %v1_10007d8c, %dec_label_pc_10007d88 ], [ %arg2, %dec_label_pc_10007d74 ]
  %v0_10007dac = phi i32 [ %v1_10007d88, %dec_label_pc_10007d88 ], [ 0, %dec_label_pc_10007d74 ]
  %v0_10007d90 = phi i32 [ %v0_10007d901, %dec_label_pc_10007d88 ], [ 0, %dec_label_pc_10007d74 ]
  %v2_10007d90 = add i32 %v0_10007d90, %arg3
  %v3_10007d90 = inttoptr i32 %v2_10007d90 to i8*
  %v4_10007d90 = load i8, i8* %v3_10007d90, align 1
  %v1_10007d94 = add i32 %v0_10007d90, 1
  %v2_10007d98 = add i32 %v0_10007dac, %arg1
  %v3_10007d98 = inttoptr i32 %v2_10007d98 to i8*
  %v4_10007d98 = load i8, i8* %v3_10007d98, align 1
  %v4_10007da0 = icmp eq i8 %v4_10007d98, %v4_10007d90
  br i1 %v4_10007da0, label %dec_label_pc_10007da8, label %dec_label_pc_10007d84

dec_label_pc_10007da8:                            ; preds = %dec_label_pc_10007d90
  %v4_10007d9c = icmp eq i32 %v1_10007d94, 0
  br i1 %v4_10007d9c, label %dec_label_pc_10007dac, label %dec_label_pc_10007d88

dec_label_pc_10007dac:                            ; preds = %dec_label_pc_10007da8
  %v1_10007dac = add i32 %v0_10007dac, 1
  ret i32 %v1_10007dac

; uselistorder directives
  uselistorder i32 %v0_10007d90, { 1, 0 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10007d64, { 0, 2, 1 }
}

define i32 @function_10007db4(i32 %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %r5.global-to-local = alloca i32, align 4
  %v0_10007db4.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10007db4

dec_label_pc_10007db4:                            ; preds = %dec_label_pc_10007dd0, %dec_label_pc_10007db4, %bb
  %v0_10007db4 = phi i32 [ %v0_10007db4.pre, %bb ], [ %v1_10007db8, %dec_label_pc_10007db4 ], [ %v1_10007db8, %dec_label_pc_10007dd0 ]
  %v1_10007db4 = inttoptr i32 %v0_10007db4 to i8*
  %v2_10007db4 = load i8, i8* %v1_10007db4, align 1
  %v1_10007db8 = add i32 %v0_10007db4, 1
  %v3_10007dc4 = icmp eq i8 %v2_10007db4, 32
  br i1 %v3_10007dc4, label %dec_label_pc_10007db4, label %dec_label_pc_10007dd0

dec_label_pc_10007dd0:                            ; preds = %dec_label_pc_10007db4
  %v2_10007db4.off = add i8 %v2_10007db4, -9
  %tmp = icmp ult i8 %v2_10007db4.off, 2
  br i1 %tmp, label %dec_label_pc_10007db4, label %dec_label_pc_10007ddc

dec_label_pc_10007ddc:                            ; preds = %dec_label_pc_10007dd0
  %v3_10007ddc = icmp eq i8 %v2_10007db4, 45
  br i1 %v3_10007ddc, label %dec_label_pc_10007e88, label %dec_label_pc_10007de4

dec_label_pc_10007de4:                            ; preds = %dec_label_pc_10007ddc
  %v3_10007de4 = icmp eq i8 %v2_10007db4, 43
  br i1 %v3_10007de4, label %dec_label_pc_10007ee0, label %dec_label_pc_10007dec

dec_label_pc_10007dec:                            ; preds = %dec_label_pc_10007de4, %dec_label_pc_10007ee0
  %v0_10007e7c26 = phi i32 [ %v1_10007db8, %dec_label_pc_10007de4 ], [ %v1_10007ee4, %dec_label_pc_10007ee0 ]
  %v0_10007e0c5.in = phi i8 [ %v2_10007db4, %dec_label_pc_10007de4 ], [ %v2_10007ee0, %dec_label_pc_10007ee0 ]
  br label %dec_label_pc_10007df8

dec_label_pc_10007df8:                            ; preds = %dec_label_pc_10007e88, %dec_label_pc_10007dec
  %v0_10007e7c25 = phi i32 [ %v1_10007e90, %dec_label_pc_10007e88 ], [ %v0_10007e7c26, %dec_label_pc_10007dec ]
  %v0_10007e0c4.in = phi i8 [ %v2_10007e88, %dec_label_pc_10007e88 ], [ %v0_10007e0c5.in, %dec_label_pc_10007dec ]
  %v0_10007ed0 = phi i32 [ 1, %dec_label_pc_10007e88 ], [ 0, %dec_label_pc_10007dec ]
  %v1_10007e08 = phi i32 [ -2147483648, %dec_label_pc_10007e88 ], [ 2147483647, %dec_label_pc_10007dec ]
  %v2_10007df8 = udiv i32 %v1_10007e08, %arg1
  store i32 0, i32* %r5.global-to-local, align 4
  %v2_10007e04 = mul i32 %v2_10007df8, %arg1
  %v2_10007e08 = sub i32 %v1_10007e08, %v2_10007e04
  br label %dec_label_pc_10007e0c

dec_label_pc_10007e0c:                            ; preds = %dec_label_pc_10007e7c, %dec_label_pc_10007df8
  %v0_10007e7c = phi i32 [ %v1_10007e80, %dec_label_pc_10007e7c ], [ %v0_10007e7c25, %dec_label_pc_10007df8 ]
  %v0_10007e70 = phi i32 [ %v0_10007e6817, %dec_label_pc_10007e7c ], [ 0, %dec_label_pc_10007df8 ]
  %v0_10007e60 = phi i32 [ %v0_10007ec011, %dec_label_pc_10007e7c ], [ 0, %dec_label_pc_10007df8 ]
  %v0_10007e58 = phi i32 [ %v0_10007eb49, %dec_label_pc_10007e7c ], [ 0, %dec_label_pc_10007df8 ]
  %v1_10007e4c.in = phi i8 [ %v2_10007e7c, %dec_label_pc_10007e7c ], [ %v0_10007e0c4.in, %dec_label_pc_10007df8 ]
  %v1_10007e4c = zext i8 %v1_10007e4c.in to i32
  %v1_10007e10 = add nsw i32 %v1_10007e4c, -48
  %fold = add nuw nsw i32 %v1_10007e4c, 208
  %v1_10007e18 = urem i32 %fold, 256
  %tmp27 = icmp ult i32 %v1_10007e18, 10
  br i1 %tmp27, label %dec_label_pc_10007e50, label %dec_label_pc_10007e24

dec_label_pc_10007e24:                            ; preds = %dec_label_pc_10007e0c
  %v1_10007e24 = add nuw nsw i32 %v1_10007e4c, 191
  %v1_10007e28 = urem i32 %v1_10007e24, 256
  %tmp28 = icmp ult i32 %v1_10007e28, 26
  br i1 %tmp28, label %dec_label_pc_10007e4c, label %dec_label_pc_10007e38

dec_label_pc_10007e38:                            ; preds = %dec_label_pc_10007e24
  %v1_10007e38 = add nuw nsw i32 %v1_10007e4c, 159
  %v1_10007e3c = urem i32 %v1_10007e38, 256
  %v2_10007e40 = icmp ugt i32 %v1_10007e3c, 25
  br i1 %v2_10007e40, label %dec_label_pc_10007eb4, label %dec_label_pc_10007e48

dec_label_pc_10007e48:                            ; preds = %dec_label_pc_10007e38
  br label %dec_label_pc_10007e4c

dec_label_pc_10007e4c:                            ; preds = %dec_label_pc_10007e24, %dec_label_pc_10007e48
  %v0_10007e4c = phi i32 [ 55, %dec_label_pc_10007e24 ], [ 87, %dec_label_pc_10007e48 ]
  %v2_10007e4c = sub nsw i32 %v1_10007e4c, %v0_10007e4c
  br label %dec_label_pc_10007e50

dec_label_pc_10007e50:                            ; preds = %dec_label_pc_10007e0c, %dec_label_pc_10007e4c
  %v1_10007e78 = phi i32 [ %v1_10007e10, %dec_label_pc_10007e0c ], [ %v2_10007e4c, %dec_label_pc_10007e4c ]
  %v2_10007e50 = icmp slt i32 %v1_10007e78, %arg1
  br i1 %v2_10007e50, label %dec_label_pc_10007e58, label %dec_label_pc_10007eb4

dec_label_pc_10007e58:                            ; preds = %dec_label_pc_10007e50
  %v1_10007e58 = icmp slt i32 %v0_10007e58, 0
  br i1 %v1_10007e58, label %dec_label_pc_10007e9c, label %dec_label_pc_10007e60

dec_label_pc_10007e60:                            ; preds = %dec_label_pc_10007e58
  %v3_10007e60 = icmp ugt i32 %v0_10007e60, %v2_10007df8
  br i1 %v3_10007e60, label %dec_label_pc_10007e9c, label %dec_label_pc_10007e68

dec_label_pc_10007e68:                            ; preds = %dec_label_pc_10007e60
  %v4_10007e68 = icmp eq i32 %v0_10007e70, %v2_10007df8
  br i1 %v4_10007e68, label %dec_label_pc_10007ea4, label %dec_label_pc_10007e70

dec_label_pc_10007e70:                            ; preds = %dec_label_pc_10007ea4, %dec_label_pc_10007e68
  %v2_10007e70 = mul i32 %v0_10007e70, %arg1
  %v2_10007e78 = add i32 %v1_10007e78, %v2_10007e70
  store i32 %v2_10007e78, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10007e7c

dec_label_pc_10007e7c:                            ; preds = %dec_label_pc_10007ea4, %dec_label_pc_10007e9c, %dec_label_pc_10007e70
  %v0_10007e6817 = phi i32 [ %v2_10007df8, %dec_label_pc_10007ea4 ], [ %v0_10007e70, %dec_label_pc_10007e9c ], [ %v2_10007e78, %dec_label_pc_10007e70 ]
  %v0_10007ec011 = phi i32 [ %v2_10007df8, %dec_label_pc_10007ea4 ], [ %v0_10007e60, %dec_label_pc_10007e9c ], [ %v2_10007e78, %dec_label_pc_10007e70 ]
  %v0_10007eb49 = phi i32 [ -1, %dec_label_pc_10007ea4 ], [ -1, %dec_label_pc_10007e9c ], [ 1, %dec_label_pc_10007e70 ]
  %v1_10007e7c = inttoptr i32 %v0_10007e7c to i8*
  %v2_10007e7c = load i8, i8* %v1_10007e7c, align 1
  %v1_10007e80 = add i32 %v0_10007e7c, 1
  br label %dec_label_pc_10007e0c

dec_label_pc_10007e88:                            ; preds = %dec_label_pc_10007ddc
  %v1_10007e88 = inttoptr i32 %v1_10007db8 to i8*
  %v2_10007e88 = load i8, i8* %v1_10007e88, align 1
  %v1_10007e90 = add i32 %v0_10007db4, 2
  br label %dec_label_pc_10007df8

dec_label_pc_10007e9c:                            ; preds = %dec_label_pc_10007e60, %dec_label_pc_10007e58
  br label %dec_label_pc_10007e7c

dec_label_pc_10007ea4:                            ; preds = %dec_label_pc_10007e68
  %v3_10007ea4 = icmp sgt i32 %v1_10007e78, %v2_10007e08
  br i1 %v3_10007ea4, label %dec_label_pc_10007e7c, label %dec_label_pc_10007e70

dec_label_pc_10007eb4:                            ; preds = %dec_label_pc_10007e50, %dec_label_pc_10007e38
  %v1_10007eb4 = icmp slt i32 %v0_10007e58, 0
  br i1 %v1_10007eb4, label %dec_label_pc_10007ed0, label %dec_label_pc_10007ebc

dec_label_pc_10007ebc:                            ; preds = %dec_label_pc_10007eb4
  %v3_10007ebc = icmp eq i32 %v0_10007ed0, 0
  %v0_10007ec4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10007ebc, i32 %v0_10007ec4)
  %v0_10007ec8 = load i32, i32* %r5.global-to-local, align 4
  %v1_10007ec8 = sub i32 0, %v0_10007ec8
  ret i32 %v1_10007ec8

dec_label_pc_10007ed0:                            ; preds = %dec_label_pc_10007eb4
  %v1_10007ed0 = xor i32 %v0_10007ed0, 1
  %v2_10007ed8 = sub nuw i32 -2147483648, %v1_10007ed0
  ret i32 %v2_10007ed8

dec_label_pc_10007ee0:                            ; preds = %dec_label_pc_10007de4
  %v1_10007ee0 = inttoptr i32 %v1_10007db8 to i8*
  %v2_10007ee0 = load i8, i8* %v1_10007ee0, align 1
  %v1_10007ee4 = add i32 %v0_10007db4, 2
  br label %dec_label_pc_10007dec

; uselistorder directives
  uselistorder i32 %v2_10007e78, { 1, 0, 2 }
  uselistorder i32 %v1_10007e78, { 1, 0, 2 }
  uselistorder i32 %v1_10007e4c, { 2, 4, 3, 0, 1 }
  uselistorder i32 %v0_10007e70, { 2, 0, 1 }
  uselistorder i32 %v0_10007e7c, { 1, 0 }
  uselistorder i32 %v2_10007df8, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_10007db8, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_10007db4, { 1, 0, 3, 2 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32 -2147483648, { 1, 0 }
  uselistorder i8 32, { 11, 4, 5, 1, 2, 6, 0, 7, 8, 9, 3, 12, 13, 14, 15, 16, 17, 10 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10007e50, { 1, 0 }
  uselistorder label %dec_label_pc_10007e4c, { 1, 0 }
  uselistorder label %dec_label_pc_10007dec, { 1, 0 }
}

define i32 @function_10007eec(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10007eec:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r27.global-to-local, align 4
  store i32 %arg2, i32* %r28.global-to-local, align 4
  store i32 %arg3, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  %v0_10007f18 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  br label %dec_label_pc_10007f20

dec_label_pc_10007f20:                            ; preds = %dec_label_pc_10007f4c.dec_label_pc_10007f20_crit_edge, %dec_label_pc_10007eec
  %v0_10007f24 = phi i32 [ %v0_10007f24.pre, %dec_label_pc_10007f4c.dec_label_pc_10007f20_crit_edge ], [ %arg3, %dec_label_pc_10007eec ]
  %v0_10007f20 = phi i32 [ %v1_10007f38, %dec_label_pc_10007f4c.dec_label_pc_10007f20_crit_edge ], [ %tmp, %dec_label_pc_10007eec ]
  store i32 1, i32* @r5, align 4
  store i32 268468016, i32* @lr, align 4
  %v4_10007f2c = call i32 @function_10008604(i32 %v0_10007f24, i32 %v0_10007f20, i32 1)
  %v0_10007f30 = load i32, i32* @r31, align 4
  %v3_10007f34 = icmp eq i32 %v4_10007f2c, 1
  %v1_10007f38 = add i32 %v0_10007f30, 1
  store i32 %v1_10007f38, i32* @r31, align 4
  %v0_10007f40 = load i32, i32* %r30.global-to-local, align 4
  br i1 %v3_10007f34, label %dec_label_pc_10007f40, label %dec_label_pc_10007f58

dec_label_pc_10007f40:                            ; preds = %dec_label_pc_10007f20
  %v1_10007f40 = add i32 %v0_10007f40, 1
  store i32 %v1_10007f40, i32* %r30.global-to-local, align 4
  %v0_10007f44 = load i32, i32* %r28.global-to-local, align 4
  %v3_10007f44 = icmp sgt i32 %v0_10007f44, %v1_10007f40
  br i1 %v3_10007f44, label %dec_label_pc_10007f4c, label %dec_label_pc_10007f58

dec_label_pc_10007f4c:                            ; preds = %dec_label_pc_10007f40
  %v1_10007f4c = inttoptr i32 %v0_10007f30 to i8*
  %v2_10007f4c = load i8, i8* %v1_10007f4c, align 1
  %v3_10007f50 = icmp eq i8 %v2_10007f4c, 10
  br i1 %v3_10007f50, label %dec_label_pc_10007f58, label %dec_label_pc_10007f4c.dec_label_pc_10007f20_crit_edge

dec_label_pc_10007f4c.dec_label_pc_10007f20_crit_edge: ; preds = %dec_label_pc_10007f4c
  %v0_10007f24.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10007f20

dec_label_pc_10007f58:                            ; preds = %dec_label_pc_10007f20, %dec_label_pc_10007f4c, %dec_label_pc_10007f40
  %v1_10007f60 = phi i32 [ %v1_10007f40, %dec_label_pc_10007f4c ], [ %v1_10007f40, %dec_label_pc_10007f40 ], [ %v0_10007f40, %dec_label_pc_10007f20 ]
  %tmp12 = icmp slt i32 %v1_10007f60, 0
  %v1_10007f58 = zext i1 %tmp12 to i32
  %v2_10007f58 = ashr i32 %v1_10007f60, 31
  %v3_10007f58 = and i32 %v2_10007f58, -2
  %v4_10007f58 = or i32 %v3_10007f58, %v1_10007f58
  %v2_10007f60 = xor i32 %v4_10007f58, %v1_10007f60
  %v2_10007f68 = sub i32 %v4_10007f58, %v2_10007f60
  %tmp13 = icmp slt i32 %v2_10007f68, 0
  %v1_10007f70 = zext i1 %tmp13 to i32
  %v2_10007f70 = ashr i32 %v2_10007f68, 31
  %v3_10007f70 = and i32 %v2_10007f70, -2
  %v4_10007f70 = or i32 %v3_10007f70, %v1_10007f70
  %v0_10007f78 = load i32, i32* %r27.global-to-local, align 4
  %v2_10007f78 = and i32 %v4_10007f70, %v0_10007f78
  store i32 %v0_10007f18, i32* @r31, align 4
  ret i32 %v2_10007f78

; uselistorder directives
  uselistorder i32 %v2_10007f68, { 1, 0 }
  uselistorder i32 %v4_10007f58, { 1, 0 }
  uselistorder i32 %v1_10007f60, { 1, 2, 0 }
  uselistorder i32 %v1_10007f38, { 1, 0 }
  uselistorder i8 10, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10008604, { 1, 3, 0, 2 }
  uselistorder label %dec_label_pc_10007f58, { 1, 2, 0 }
}

define i32 @function_10007f90(i32 %arg1) local_unnamed_addr {
dec_label_pc_10007f90:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v0_10007fa8 = load i32, i32* @r31, align 4
  store i32 16, i32* %stack_var_-40, align 4
  %v0_10007fb0 = call i32 @function_10008aa0()
  %v2_10007fbc = inttoptr i32 %v0_10007fb0 to i32*
  store i32 0, i32* %v2_10007fbc, align 4
  store i32 268468172, i32* @lr, align 4
  %v3_10007fc8 = call i32 @function_100090b4(i32 2, i32 2, i32 0)
  store i32 %v3_10007fc8, i32* @r3, align 4
  %v3_10007fd0 = icmp eq i32 %v3_10007fc8, -1
  store i32 %v3_10007fc8, i32* @r31, align 4
  br i1 %v3_10007fd0, label %dec_label_pc_10008020, label %dec_label_pc_10007fec

dec_label_pc_10007fec:                            ; preds = %dec_label_pc_10007f90
  %v2_10007f9c = ptrtoint i32* %stack_var_-36 to i32
  store i32 2, i32* %stack_var_-36, align 4
  store i32 268468228, i32* @lr, align 4
  %v0_10008000 = call i32 @function_10008eb4()
  %v2_10008008 = ptrtoint i32* %stack_var_-40 to i32
  %v0_1000800c = load i32, i32* @r31, align 4
  store i32 268468244, i32* @lr, align 4
  %v3_10008010 = call i32 @function_10008ee8(i32 %v0_1000800c, i32 %v2_10007f9c, i32 %v2_10008008)
  store i32 268468252, i32* @lr, align 4
  %v0_10008018 = call i32 @function_100083cc()
  br label %dec_label_pc_10008020

dec_label_pc_10008020:                            ; preds = %dec_label_pc_10007f90, %dec_label_pc_10007fec
  %v0_10008020 = phi i32 [ 0, %dec_label_pc_10007f90 ], [ 134744072, %dec_label_pc_10007fec ]
  store i32 %v0_10007fa8, i32* @r31, align 4
  ret i32 %v0_10008020

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 ()* @function_10008eb4, { 7, 6, 8, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_100090b4, { 17, 15, 16, 18, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 2, 1, 0, 4, 3 }
  uselistorder label %dec_label_pc_10008020, { 1, 0 }
}

define i32 @function_1000803c(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000803c:
  %tmp = inttoptr i32 %arg3 to i8*
  store i32 %arg3, i32* @r5, align 4
  %tmp16 = ptrtoint i8* %arg1 to i32
  %v3_1000803c = load i8, i8* %tmp, align 1
  %v3_10008048 = icmp eq i8 %v3_1000803c, 0
  br i1 %v3_10008048, label %dec_label_pc_10008060, label %dec_label_pc_10008050

dec_label_pc_10008050:                            ; preds = %dec_label_pc_1000803c, %dec_label_pc_10008050
  %v0_10008050 = phi i32 [ %v1_10008050, %dec_label_pc_10008050 ], [ 0, %dec_label_pc_1000803c ]
  %v1_10008050 = add i32 %v0_10008050, 1
  %v3_10008054 = add i32 %v1_10008050, %arg3
  %v4_10008054 = inttoptr i32 %v3_10008054 to i8*
  %v5_10008054 = load i8, i8* %v4_10008054, align 1
  %v3_10008058 = icmp eq i8 %v5_10008054, 0
  br i1 %v3_10008058, label %dec_label_pc_10008060, label %dec_label_pc_10008050

dec_label_pc_10008060:                            ; preds = %dec_label_pc_10008050, %dec_label_pc_1000803c
  %v0_1000809011 = phi i32 [ 0, %dec_label_pc_1000803c ], [ %v1_10008050, %dec_label_pc_10008050 ]
  %v1_10008060 = icmp slt i32 %arg2, 0
  %v1_10008064 = add i32 %arg2, 1
  br i1 %v1_10008060, label %dec_label_pc_100080dc, label %dec_label_pc_10008078

dec_label_pc_10008078:                            ; preds = %dec_label_pc_10008060, %dec_label_pc_100080dc, %dec_label_pc_100080d0
  %v2_100080848 = phi i32 [ %v1_10008088, %dec_label_pc_100080d0 ], [ 0, %dec_label_pc_100080dc ], [ 0, %dec_label_pc_10008060 ]
  %v0_1000807c6 = phi i32 [ %v1_10008080, %dec_label_pc_100080d0 ], [ %tmp16, %dec_label_pc_100080dc ], [ %tmp16, %dec_label_pc_10008060 ]
  %v0_10008078 = phi i32 [ %v0_100080c4, %dec_label_pc_100080d0 ], [ 1, %dec_label_pc_100080dc ], [ %v1_10008064, %dec_label_pc_10008060 ]
  %v1_10008078 = add i32 %v0_10008078, -1
  %v2_10008078 = icmp eq i32 %v1_10008078, 0
  br i1 %v2_10008078, label %dec_label_pc_100080c8, label %dec_label_pc_1000807c

dec_label_pc_1000807c:                            ; preds = %dec_label_pc_10008078, %dec_label_pc_100080c0
  %v2_10008084 = phi i32 [ 0, %dec_label_pc_100080c0 ], [ %v2_100080848, %dec_label_pc_10008078 ]
  %v0_1000807c = phi i32 [ %v1_10008080, %dec_label_pc_100080c0 ], [ %v0_1000807c6, %dec_label_pc_10008078 ]
  %v0_100080c4 = phi i32 [ %v1_100080c4, %dec_label_pc_100080c0 ], [ %v1_10008078, %dec_label_pc_10008078 ]
  %v1_1000807c = inttoptr i32 %v0_1000807c to i8*
  %v2_1000807c = load i8, i8* %v1_1000807c, align 1
  %v3_1000807c = zext i8 %v2_1000807c to i32
  %v1_10008080 = add i32 %v0_1000807c, 1
  %v3_10008084 = add i32 %v2_10008084, %arg3
  %v4_10008084 = inttoptr i32 %v3_10008084 to i8*
  %v5_10008084 = load i8, i8* %v4_10008084, align 1
  %v6_10008084 = zext i8 %v5_10008084 to i32
  %v1_10008088 = add i32 %v2_10008084, 1
  %v1_1000808c = add nuw nsw i32 %v3_1000807c, 191
  %v1_10008094 = urem i32 %v1_1000808c, 256
  %v2_10008098 = icmp ugt i32 %v1_10008094, 25
  %v1_1000809c = add nuw nsw i32 %v6_10008084, 191
  %v1_100080a0 = urem i32 %v1_1000809c, 256
  %v2_100080a4 = icmp ugt i32 %v1_100080a0, 25
  br i1 %v2_10008098, label %dec_label_pc_100080b0, label %dec_label_pc_100080ac

dec_label_pc_100080ac:                            ; preds = %dec_label_pc_1000807c
  %v1_100080ac = or i32 %v3_1000807c, 96
  br i1 %v2_100080a4, label %dec_label_pc_100080b8, label %dec_label_pc_100080b4

dec_label_pc_100080b0:                            ; preds = %dec_label_pc_1000807c
  br i1 %v2_100080a4, label %dec_label_pc_100080b8, label %dec_label_pc_100080b4

dec_label_pc_100080b4:                            ; preds = %dec_label_pc_100080ac, %dec_label_pc_100080b0
  %v1_100080b814 = phi i32 [ %v1_100080ac, %dec_label_pc_100080ac ], [ %v3_1000807c, %dec_label_pc_100080b0 ]
  %v1_100080b4 = or i32 %v6_10008084, 96
  br label %dec_label_pc_100080b8

dec_label_pc_100080b8:                            ; preds = %dec_label_pc_100080ac, %dec_label_pc_100080b0, %dec_label_pc_100080b4
  %v1_100080b8 = phi i32 [ %v1_100080ac, %dec_label_pc_100080ac ], [ %v3_1000807c, %dec_label_pc_100080b0 ], [ %v1_100080b814, %dec_label_pc_100080b4 ]
  %v0_100080b8 = phi i32 [ %v6_10008084, %dec_label_pc_100080ac ], [ %v6_10008084, %dec_label_pc_100080b0 ], [ %v1_100080b4, %dec_label_pc_100080b4 ]
  %v4_100080b8 = icmp eq i32 %v0_100080b8, %v1_100080b8
  br i1 %v4_100080b8, label %dec_label_pc_100080d0, label %dec_label_pc_100080c0

dec_label_pc_100080c0:                            ; preds = %dec_label_pc_100080b8
  %v1_100080c4 = add i32 %v0_100080c4, -1
  %v2_100080c4 = icmp eq i32 %v1_100080c4, 0
  br i1 %v2_100080c4, label %dec_label_pc_100080c8, label %dec_label_pc_1000807c

dec_label_pc_100080c8:                            ; preds = %dec_label_pc_10008078, %dec_label_pc_100080c0
  ret i32 -1

dec_label_pc_100080d0:                            ; preds = %dec_label_pc_100080b8
  %v4_10008090.le = icmp eq i32 %v0_1000809011, %v1_10008088
  br i1 %v4_10008090.le, label %dec_label_pc_100080d4, label %dec_label_pc_10008078

dec_label_pc_100080d4:                            ; preds = %dec_label_pc_100080d0
  %v2_100080d4 = sub i32 %v1_10008080, %tmp16
  ret i32 %v2_100080d4

dec_label_pc_100080dc:                            ; preds = %dec_label_pc_10008060
  br label %dec_label_pc_10008078

; uselistorder directives
  uselistorder i32 %v1_100080c4, { 1, 0 }
  uselistorder i32 %v1_100080ac, { 1, 0 }
  uselistorder i1 %v2_100080a4, { 1, 0 }
  uselistorder i32 %v1_10008088, { 1, 0 }
  uselistorder i32 %v3_1000807c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_100080c4, { 1, 0 }
  uselistorder i32 %v0_1000807c, { 1, 0 }
  uselistorder i32 %v2_10008084, { 1, 0 }
  uselistorder i32 %tmp16, { 2, 0, 1 }
  uselistorder i32 25, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 191, { 1, 0, 2 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_100080c8, { 1, 0 }
  uselistorder label %dec_label_pc_100080b8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100080b4, { 1, 0 }
  uselistorder label %dec_label_pc_1000807c, { 1, 0 }
  uselistorder label %dec_label_pc_10008078, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10008050, { 1, 0 }
}

define i32 @function_100080e8(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100080e8:
  %cr6_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg3 to i8*
  %tmp17 = sext i8 %arg1 to i32
  store i32 %tmp17, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_100080e8 = icmp eq i32 %arg3, 0
  %v4_100080ec = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_100080ec, i32* %stack_var_-64, align 4
  %v5_100080ec = ptrtoint i32* %stack_var_-64 to i32
  br i1 %v4_100080e8, label %dec_label_pc_10008108, label %dec_label_pc_100080f4

dec_label_pc_100080f4:                            ; preds = %dec_label_pc_100080e8
  %v0_100080f4 = load i32, i32* %r3.global-to-local, align 4
  %v3_100080f4 = icmp eq i32 %v0_100080f4, 0
  store i1 %v3_100080f4, i1* %cr6_eq.global-to-local, align 1
  br i1 %v3_100080f4, label %dec_label_pc_100080fc, label %dec_label_pc_10008114

dec_label_pc_100080fc:                            ; preds = %dec_label_pc_100080f4
  store i32 48, i32* %r0.global-to-local, align 4
  %v4_10008100 = add i32 %arg3, 1
  %v5_10008100 = inttoptr i32 %v4_10008100 to i8*
  store i8 0, i8* %v5_10008100, align 1
  %v0_10008104 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008104 = trunc i32 %v0_10008104 to i8
  store i8 %v1_10008104, i8* %tmp, align 1
  br label %dec_label_pc_10008108

dec_label_pc_10008108:                            ; preds = %dec_label_pc_10008194, %dec_label_pc_100080e8, %dec_label_pc_100080fc
  store i32 %arg3, i32* %r3.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_10008114:                            ; preds = %dec_label_pc_100080f4
  %v2_100080f4 = icmp sgt i32 %v0_100080f4, 0
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10008114.not = icmp ne i32 %arg2, 10
  %brmerge = or i1 %v2_100080f4, %v3_10008114.not
  br i1 %brmerge, label %dec_label_pc_10008128, label %dec_label_pc_100081dc

dec_label_pc_10008128:                            ; preds = %dec_label_pc_10008114, %dec_label_pc_100081dc
  %v0_1000812c2 = phi i32 [ %v0_100080f4, %dec_label_pc_10008114 ], [ %v1_100081dc, %dec_label_pc_100081dc ]
  %storemerge = phi i32 [ 0, %dec_label_pc_10008114 ], [ 1, %dec_label_pc_100081dc ]
  store i32 %storemerge, i32* %r8.global-to-local, align 4
  store i32 32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000812c

dec_label_pc_1000812c:                            ; preds = %dec_label_pc_10008158.dec_label_pc_1000812c_crit_edge, %dec_label_pc_10008128
  %v1_10008130 = phi i32 [ %v1_10008130.pre, %dec_label_pc_10008158.dec_label_pc_1000812c_crit_edge ], [ 32, %dec_label_pc_10008128 ]
  %v0_10008130 = phi i32 [ %v0_10008130.pre, %dec_label_pc_10008158.dec_label_pc_1000812c_crit_edge ], [ %v5_100080ec, %dec_label_pc_10008128 ]
  %v1_10008140 = phi i32 [ %v0_1000812c.pre, %dec_label_pc_10008158.dec_label_pc_1000812c_crit_edge ], [ %v0_1000812c2, %dec_label_pc_10008128 ]
  %v2_1000812c = udiv i32 %v1_10008140, %arg2
  %v2_10008130 = add i32 %v0_10008130, %v1_10008130
  store i32 %v2_10008130, i32* %r11.global-to-local, align 4
  %v1_10008134 = add i32 %v1_10008130, -1
  store i32 %v1_10008134, i32* %r10.global-to-local, align 4
  %v2_10008138 = mul i32 %v2_1000812c, %arg2
  %v3_1000813c = icmp ult i32 %v1_10008140, %arg2
  store i1 %v3_1000813c, i1* %cr6_eq.global-to-local, align 1
  %v2_10008140 = sub i32 %v1_10008140, %v2_10008138
  store i32 %v2_10008140, i32* %r9.global-to-local, align 4
  store i32 %v2_1000812c, i32* %r3.global-to-local, align 4
  %tmp22 = icmp slt i32 %v2_10008140, 10
  %storemerge15.v = select i1 %tmp22, i32 48, i32 55
  %storemerge15 = add i32 %storemerge15.v, %v2_10008140
  %v0_10008158.off0 = trunc i32 %storemerge15 to i8
  store i32 %storemerge15, i32* %r0.global-to-local, align 4
  %v3_10008158 = add i32 %v2_10008130, 8
  %v4_10008158 = inttoptr i32 %v3_10008158 to i8*
  store i8 %v0_10008158.off0, i8* %v4_10008158, align 1
  %v0_1000815c = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_1000815c, label %dec_label_pc_10008160, label %dec_label_pc_10008158.dec_label_pc_1000812c_crit_edge

dec_label_pc_10008158.dec_label_pc_1000812c_crit_edge: ; preds = %dec_label_pc_1000812c
  %v0_1000812c.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_10008130.pre = load i32, i32* @r1, align 4
  %v1_10008130.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000812c

dec_label_pc_10008160:                            ; preds = %dec_label_pc_1000812c
  %v0_10008160 = load i32, i32* %r8.global-to-local, align 4
  %v3_10008160 = icmp eq i32 %v0_10008160, 0
  br i1 %v3_10008160, label %dec_label_pc_10008168, label %dec_label_pc_100081c8

dec_label_pc_10008168:                            ; preds = %dec_label_pc_10008160
  %v0_10008168 = load i32, i32* %r10.global-to-local, align 4
  %v1_10008168 = add i32 %v0_10008168, 1
  store i32 %v1_10008168, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000816c

dec_label_pc_1000816c:                            ; preds = %dec_label_pc_100081c8, %dec_label_pc_10008168
  %v1_10008174 = phi i32 [ %v1_10008170.pre, %dec_label_pc_100081c8 ], [ %v1_10008168, %dec_label_pc_10008168 ]
  %v2_1000816c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000816c, i32* %r9.global-to-local, align 4
  %v2_10008170 = add i32 %v1_10008174, %v2_1000816c
  %v3_10008170 = inttoptr i32 %v2_10008170 to i8*
  %v4_10008170 = load i8, i8* %v3_10008170, align 1
  %v5_10008170 = zext i8 %v4_10008170 to i32
  store i32 %v5_10008170, i32* %r0.global-to-local, align 4
  store i32 %v2_10008170, i32* %r9.global-to-local, align 4
  %v3_10008178 = icmp eq i8 %v4_10008170, 0
  br i1 %v3_10008178, label %dec_label_pc_100081f0, label %dec_label_pc_10008180

dec_label_pc_10008180:                            ; preds = %dec_label_pc_1000816c
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008184

dec_label_pc_10008184:                            ; preds = %dec_label_pc_10008184, %dec_label_pc_10008180
  %v0_10008184 = phi i32 [ %v1_10008184, %dec_label_pc_10008184 ], [ 0, %dec_label_pc_10008180 ]
  %v1_10008184 = add i32 %v0_10008184, 1
  store i32 %v1_10008184, i32* %r10.global-to-local, align 4
  %v2_10008188 = add i32 %v1_10008184, %v2_10008170
  %v3_10008188 = inttoptr i32 %v2_10008188 to i8*
  %v4_10008188 = load i8, i8* %v3_10008188, align 1
  %v5_10008188 = zext i8 %v4_10008188 to i32
  store i32 %v5_10008188, i32* %r0.global-to-local, align 4
  %v3_1000818c = icmp eq i8 %v4_10008188, 0
  br i1 %v3_1000818c, label %dec_label_pc_10008194, label %dec_label_pc_10008184

dec_label_pc_10008194:                            ; preds = %dec_label_pc_10008184
  %v3_10008194 = icmp eq i32 %v1_10008184, -1
  br i1 %v3_10008194, label %dec_label_pc_10008108, label %dec_label_pc_1000819c

dec_label_pc_1000819c:                            ; preds = %dec_label_pc_10008194
  store i32 %arg3, i32* %r11.global-to-local, align 4
  %phitmp = add i32 %v0_10008184, 2
  br label %dec_label_pc_100081a0

dec_label_pc_100081a0:                            ; preds = %dec_label_pc_100081f0, %dec_label_pc_1000819c
  %v0_100081a0 = phi i32 [ 1, %dec_label_pc_100081f0 ], [ %phitmp, %dec_label_pc_1000819c ]
  store i32 %v0_100081a0, i32* %r10.global-to-local, align 4
  store i32 %v0_100081a0, i32* %ctr.global-to-local, align 4
  %v2_100081a824 = load i8, i8* %v3_10008170, align 1
  %v3_100081a825 = zext i8 %v2_100081a824 to i32
  store i32 %v3_100081a825, i32* %r0.global-to-local, align 4
  %v1_100081ac26 = add i32 %v2_10008170, 1
  store i32 %v1_100081ac26, i32* %r9.global-to-local, align 4
  store i8 %v2_100081a824, i8* %tmp, align 1
  %v0_100081b428 = load i32, i32* %r11.global-to-local, align 4
  %v1_100081b429 = add i32 %v0_100081b428, 1
  store i32 %v1_100081b429, i32* %r11.global-to-local, align 4
  %v0_100081b830 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100081b831 = add i32 %v0_100081b830, -1
  store i32 %v1_100081b831, i32* %ctr.global-to-local, align 4
  %v2_100081b832 = icmp eq i32 %v1_100081b831, 0
  br i1 %v2_100081b832, label %dec_label_pc_100081bc, label %dec_label_pc_100081a8.dec_label_pc_100081a8_crit_edge

dec_label_pc_100081a8.dec_label_pc_100081a8_crit_edge: ; preds = %dec_label_pc_100081a0, %dec_label_pc_100081a8.dec_label_pc_100081a8_crit_edge
  %v1_100081b433 = phi i32 [ %v1_100081b4, %dec_label_pc_100081a8.dec_label_pc_100081a8_crit_edge ], [ %v1_100081b429, %dec_label_pc_100081a0 ]
  %v0_100081a8.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_100081a8 = inttoptr i32 %v0_100081a8.pre to i8*
  %v2_100081a8 = load i8, i8* %v1_100081a8, align 1
  %v3_100081a8 = zext i8 %v2_100081a8 to i32
  store i32 %v3_100081a8, i32* %r0.global-to-local, align 4
  %v1_100081ac = add i32 %v0_100081a8.pre, 1
  store i32 %v1_100081ac, i32* %r9.global-to-local, align 4
  %v3_100081b0 = inttoptr i32 %v1_100081b433 to i8*
  store i8 %v2_100081a8, i8* %v3_100081b0, align 1
  %v0_100081b4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100081b4 = add i32 %v0_100081b4, 1
  store i32 %v1_100081b4, i32* %r11.global-to-local, align 4
  %v0_100081b8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100081b8 = add i32 %v0_100081b8, -1
  store i32 %v1_100081b8, i32* %ctr.global-to-local, align 4
  %v2_100081b8 = icmp eq i32 %v1_100081b8, 0
  br i1 %v2_100081b8, label %dec_label_pc_100081bc, label %dec_label_pc_100081a8.dec_label_pc_100081a8_crit_edge

dec_label_pc_100081bc:                            ; preds = %dec_label_pc_100081a8.dec_label_pc_100081a8_crit_edge, %dec_label_pc_100081a0
  store i32 %arg3, i32* %r3.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_100081c8:                            ; preds = %dec_label_pc_10008160
  %v0_100081c8.pre = load i32, i32* @r1, align 4
  %v1_100081c8.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_100081c8 = add i32 %v1_100081c8.pre, %v0_100081c8.pre
  store i32 %v2_100081c8, i32* %r9.global-to-local, align 4
  store i32 45, i32* %r0.global-to-local, align 4
  %v3_100081d0 = add i32 %v2_100081c8, 8
  %v4_100081d0 = inttoptr i32 %v3_100081d0 to i8*
  store i8 45, i8* %v4_100081d0, align 1
  %v1_10008170.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000816c

dec_label_pc_100081dc:                            ; preds = %dec_label_pc_10008114
  %v1_100081dc = sub i32 0, %v0_100080f4
  store i32 %v1_100081dc, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008128

dec_label_pc_100081f0:                            ; preds = %dec_label_pc_1000816c
  store i32 %arg3, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100081a0

; uselistorder directives
  uselistorder i32 %v1_100081dc, { 1, 0 }
  uselistorder i32 %v1_100081b8, { 1, 0 }
  uselistorder i32 %v1_100081b4, { 1, 0 }
  uselistorder i32 %v0_100081a0, { 1, 0 }
  uselistorder i32 %v1_10008184, { 0, 1, 3, 2 }
  uselistorder i32 %v2_1000812c, { 1, 0 }
  uselistorder i32 %v1_10008140, { 1, 0, 2 }
  uselistorder i32 %v1_10008130, { 1, 0 }
  uselistorder i32 %v0_100080f4, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 3, 2, 0, 4, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 1, 3, 2, 0, 4, 5, 6 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 8, 7, 2, 3, 5, 4, 9, 6, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 0, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder i8 45, { 1, 0 }
  uselistorder i32 %arg3, { 1, 4, 5, 6, 2, 3, 0, 7, 8 }
  uselistorder i32 %arg2, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_100081a8.dec_label_pc_100081a8_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10008128, { 1, 0 }
  uselistorder label %dec_label_pc_10008108, { 0, 2, 1 }
}

define i32 @function_100081fc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100081fc:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-32 = alloca i32, align 4
  %v4_1000820c = icmp eq i32 %arg2, -2143521772
  %v2_10008220 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10008220, i32* %stack_var_-32, align 4
  br i1 %v4_1000820c, label %dec_label_pc_10008280, label %dec_label_pc_10008240

dec_label_pc_10008240:                            ; preds = %dec_label_pc_100081fc
  %v3_10008240 = icmp ugt i32 %arg2, -2143521772
  br i1 %v3_10008240, label %dec_label_pc_10008258, label %dec_label_pc_10008248

dec_label_pc_10008248:                            ; preds = %dec_label_pc_10008240
  %v3_1000824c = icmp eq i32 %arg2, 1077703699
  br i1 %v3_1000824c, label %dec_label_pc_10008274, label %dec_label_pc_100082a0

dec_label_pc_10008258:                            ; preds = %dec_label_pc_10008240
  %v1_10008258 = xor i32 %arg2, -2143551488
  %v3_1000825c = icmp eq i32 %v1_10008258, 29717
  br i1 %v3_1000825c, label %dec_label_pc_10008290, label %dec_label_pc_10008264

dec_label_pc_10008264:                            ; preds = %dec_label_pc_10008258
  %v3_10008268 = icmp eq i32 %v1_10008258, 29718
  br i1 %v3_10008268, label %dec_label_pc_10008298, label %dec_label_pc_100082a0

dec_label_pc_10008274:                            ; preds = %dec_label_pc_10008248
  store i32 ptrtoint (i32* @global_var_1000827c.308 to i32), i32* @lr, align 4
  %v2_10008278 = inttoptr i32 %arg3 to i32*
  %v3_10008278 = call i32 @function_10008c18(i32* %v2_10008278, i32 %arg1)
  br label %dec_label_pc_10008288

dec_label_pc_10008280:                            ; preds = %dec_label_pc_100081fc
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_10008284

dec_label_pc_10008284:                            ; preds = %dec_label_pc_10008298, %dec_label_pc_10008290, %dec_label_pc_10008280
  store i32 268468872, i32* @lr, align 4
  %v0_10008284 = call i32 @function_10008cb4()
  br label %dec_label_pc_10008288

dec_label_pc_10008288:                            ; preds = %dec_label_pc_10008274, %dec_label_pc_10008284
  %storemerge = phi i32 [ %v0_10008284, %dec_label_pc_10008284 ], [ %v3_10008278, %dec_label_pc_10008274 ]
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100082cc

dec_label_pc_10008290:                            ; preds = %dec_label_pc_10008258
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_10008284

dec_label_pc_10008298:                            ; preds = %dec_label_pc_10008264
  store i32 2, i32* @r4, align 4
  br label %dec_label_pc_10008284

dec_label_pc_100082a0:                            ; preds = %dec_label_pc_10008264, %dec_label_pc_10008248
  %v0_100082b0 = call i32 @__asm_mfcr()
  %v1_100082b4 = and i32 %v0_100082b0, 268435456
  %v3_100082b4 = icmp eq i32 %v1_100082b4, 0
  store i32 %v0_100082b0, i32* %r31.global-to-local, align 4
  br i1 %v3_100082b4, label %dec_label_pc_100082cc, label %dec_label_pc_100082c0

dec_label_pc_100082c0:                            ; preds = %dec_label_pc_100082a0
  %v0_100082c0 = call i32 @function_10008aa0()
  %v0_100082c4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100082c4 = inttoptr i32 %v0_100082c0 to i32*
  store i32 %v0_100082c4, i32* %v2_100082c4, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100082cc

dec_label_pc_100082cc:                            ; preds = %dec_label_pc_100082a0, %dec_label_pc_10008288, %dec_label_pc_100082c0
  %v0_100082d0 = phi i32 [ %v0_100082b0, %dec_label_pc_100082a0 ], [ %storemerge, %dec_label_pc_10008288 ], [ -1, %dec_label_pc_100082c0 ]
  ret i32 %v0_100082d0

; uselistorder directives
  uselistorder i32 %arg2, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_100082cc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008288, { 1, 0 }
}

define i32 @function_100082e4(i32 %arg1) local_unnamed_addr {
dec_label_pc_100082e4:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_100082f8 = load i32, i32* @r4, align 4
  %v1_100082f8 = add i32 %v0_100082f8, -12
  %v2_100082fc = icmp ugt i32 %v1_100082f8, 2
  %v2_10008304 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10008304, i32* %stack_var_-32, align 4
  br i1 %v2_100082fc, label %dec_label_pc_10008330, label %dec_label_pc_10008320

dec_label_pc_10008320:                            ; preds = %dec_label_pc_100082e4
  store i32 268469032, i32* @lr, align 4
  %v2_10008324 = call i32 @function_10008368(i32 3)
  store i32 %v2_10008324, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008350

dec_label_pc_10008330:                            ; preds = %dec_label_pc_100082e4
  %v0_10008334 = call i32 @__asm_mfcr()
  %v1_10008338 = and i32 %v0_10008334, 268435456
  %v3_10008338 = icmp eq i32 %v1_10008338, 0
  store i32 %v0_10008334, i32* %r31.global-to-local, align 4
  br i1 %v3_10008338, label %dec_label_pc_10008350, label %dec_label_pc_10008344

dec_label_pc_10008344:                            ; preds = %dec_label_pc_10008330
  %v0_10008344 = call i32 @function_10008aa0()
  %v0_10008348 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008348 = inttoptr i32 %v0_10008344 to i32*
  store i32 %v0_10008348, i32* %v2_10008348, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008350

dec_label_pc_10008350:                            ; preds = %dec_label_pc_10008330, %dec_label_pc_10008320, %dec_label_pc_10008344
  %v0_10008354 = phi i32 [ %v0_10008334, %dec_label_pc_10008330 ], [ %v2_10008324, %dec_label_pc_10008320 ], [ -1, %dec_label_pc_10008344 ]
  ret i32 %v0_10008354

; uselistorder directives
  uselistorder label %dec_label_pc_10008350, { 2, 0, 1 }
}

define i32 @function_10008368(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008368:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_10008380 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10008380, i32* %stack_var_-32, align 4
  %v0_1000839c = call i32 @__asm_mfcr()
  %v1_100083a0 = and i32 %v0_1000839c, 268435456
  %v3_100083a0 = icmp eq i32 %v1_100083a0, 0
  store i32 %v0_1000839c, i32* %r31.global-to-local, align 4
  br i1 %v3_100083a0, label %dec_label_pc_100083b8, label %dec_label_pc_100083ac

dec_label_pc_100083ac:                            ; preds = %dec_label_pc_10008368
  %v0_100083ac = call i32 @function_10008aa0()
  %v0_100083b0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100083b0 = inttoptr i32 %v0_100083ac to i32*
  store i32 %v0_100083b0, i32* %v2_100083b0, align 4
  br label %dec_label_pc_100083b8

dec_label_pc_100083b8:                            ; preds = %dec_label_pc_10008368, %dec_label_pc_100083ac
  %v0_100083c8 = phi i32 [ %v0_1000839c, %dec_label_pc_10008368 ], [ -1, %dec_label_pc_100083ac ]
  ret i32 %v0_100083c8

; uselistorder directives
  uselistorder label %dec_label_pc_100083b8, { 1, 0 }
}

define i32 @function_100083cc() local_unnamed_addr {
dec_label_pc_100083cc:
  %r31.global-to-local = alloca i32, align 4
  %v0_100083e4 = call i32 @__asm_mfcr()
  %v1_100083e8 = and i32 %v0_100083e4, 268435456
  %v3_100083e8 = icmp eq i32 %v1_100083e8, 0
  store i32 %v0_100083e4, i32* %r31.global-to-local, align 4
  br i1 %v3_100083e8, label %dec_label_pc_10008400, label %dec_label_pc_100083f4

dec_label_pc_100083f4:                            ; preds = %dec_label_pc_100083cc
  %v0_100083f4 = call i32 @function_10008aa0()
  %v0_100083f8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100083f8 = inttoptr i32 %v0_100083f4 to i32*
  store i32 %v0_100083f8, i32* %v2_100083f8, align 4
  br label %dec_label_pc_10008400

dec_label_pc_10008400:                            ; preds = %dec_label_pc_100083cc, %dec_label_pc_100083f4
  %v0_10008410 = phi i32 [ %v0_100083e4, %dec_label_pc_100083cc ], [ -1, %dec_label_pc_100083f4 ]
  ret i32 %v0_10008410

; uselistorder directives
  uselistorder label %dec_label_pc_10008400, { 1, 0 }
}

define i32 @function_10008414() local_unnamed_addr {
dec_label_pc_10008414:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000842c = call i32 @__asm_mfcr()
  %v1_10008430 = and i32 %v0_1000842c, 268435456
  %v3_10008430 = icmp eq i32 %v1_10008430, 0
  store i32 %v0_1000842c, i32* %r31.global-to-local, align 4
  br i1 %v3_10008430, label %dec_label_pc_10008448, label %dec_label_pc_1000843c

dec_label_pc_1000843c:                            ; preds = %dec_label_pc_10008414
  %v0_1000843c = call i32 @function_10008aa0()
  %v0_10008440 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008440 = inttoptr i32 %v0_1000843c to i32*
  store i32 %v0_10008440, i32* %v2_10008440, align 4
  br label %dec_label_pc_10008448

dec_label_pc_10008448:                            ; preds = %dec_label_pc_10008414, %dec_label_pc_1000843c
  %v0_10008458 = phi i32 [ %v0_1000842c, %dec_label_pc_10008414 ], [ -1, %dec_label_pc_1000843c ]
  ret i32 %v0_10008458

; uselistorder directives
  uselistorder label %dec_label_pc_10008448, { 1, 0 }
}

define i32 @function_1000845c() local_unnamed_addr {
dec_label_pc_1000845c:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008474 = call i32 @__asm_mfcr()
  %v1_10008478 = and i32 %v0_10008474, 268435456
  %v3_10008478 = icmp eq i32 %v1_10008478, 0
  store i32 %v0_10008474, i32* %r31.global-to-local, align 4
  br i1 %v3_10008478, label %dec_label_pc_10008490, label %dec_label_pc_10008484

dec_label_pc_10008484:                            ; preds = %dec_label_pc_1000845c
  %v0_10008484 = call i32 @function_10008aa0()
  %v0_10008488 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008488 = inttoptr i32 %v0_10008484 to i32*
  store i32 %v0_10008488, i32* %v2_10008488, align 4
  br label %dec_label_pc_10008490

dec_label_pc_10008490:                            ; preds = %dec_label_pc_1000845c, %dec_label_pc_10008484
  %v0_100084a0 = phi i32 [ %v0_10008474, %dec_label_pc_1000845c ], [ -1, %dec_label_pc_10008484 ]
  ret i32 %v0_100084a0

; uselistorder directives
  uselistorder label %dec_label_pc_10008490, { 1, 0 }
}

define i32 @function_100084a4() local_unnamed_addr {
dec_label_pc_100084a4:
  %r31.global-to-local = alloca i32, align 4
  %v0_100084bc = call i32 @__asm_mfcr()
  %v1_100084c0 = and i32 %v0_100084bc, 268435456
  %v3_100084c0 = icmp eq i32 %v1_100084c0, 0
  store i32 %v0_100084bc, i32* %r31.global-to-local, align 4
  br i1 %v3_100084c0, label %dec_label_pc_100084d8, label %dec_label_pc_100084cc

dec_label_pc_100084cc:                            ; preds = %dec_label_pc_100084a4
  %v0_100084cc = call i32 @function_10008aa0()
  %v0_100084d0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100084d0 = inttoptr i32 %v0_100084cc to i32*
  store i32 %v0_100084d0, i32* %v2_100084d0, align 4
  br label %dec_label_pc_100084d8

dec_label_pc_100084d8:                            ; preds = %dec_label_pc_100084a4, %dec_label_pc_100084cc
  %v0_100084e8 = phi i32 [ %v0_100084bc, %dec_label_pc_100084a4 ], [ -1, %dec_label_pc_100084cc ]
  ret i32 %v0_100084e8

; uselistorder directives
  uselistorder label %dec_label_pc_100084d8, { 1, 0 }
}

define i32 @function_100084ec(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100084ec:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008504 = call i32 @__asm_mfcr()
  %v1_10008508 = and i32 %v0_10008504, 268435456
  %v3_10008508 = icmp eq i32 %v1_10008508, 0
  store i32 %v0_10008504, i32* %r31.global-to-local, align 4
  br i1 %v3_10008508, label %dec_label_pc_10008520, label %dec_label_pc_10008514

dec_label_pc_10008514:                            ; preds = %dec_label_pc_100084ec
  %v0_10008514 = call i32 @function_10008aa0()
  %v0_10008518 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008518 = inttoptr i32 %v0_10008514 to i32*
  store i32 %v0_10008518, i32* %v2_10008518, align 4
  br label %dec_label_pc_10008520

dec_label_pc_10008520:                            ; preds = %dec_label_pc_100084ec, %dec_label_pc_10008514
  %v0_10008530 = phi i32 [ %v0_10008504, %dec_label_pc_100084ec ], [ -1, %dec_label_pc_10008514 ]
  ret i32 %v0_10008530

; uselistorder directives
  uselistorder label %dec_label_pc_10008520, { 1, 0 }
}

define i32 @function_10008534(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008534:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_10008548 = and i32 %arg2, 64
  %v3_10008548 = icmp eq i32 %v1_10008548, 0
  br i1 %v3_10008548, label %dec_label_pc_10008574, label %dec_label_pc_10008558

dec_label_pc_10008558:                            ; preds = %dec_label_pc_10008534
  %v2_10008560 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10008560, i32* %stack_var_-32, align 4
  %v0_10008570 = load i32, i32* @r5, align 4
  br label %dec_label_pc_10008574

dec_label_pc_10008574:                            ; preds = %dec_label_pc_10008534, %dec_label_pc_10008558
  %v0_10008574 = phi i32 [ 0, %dec_label_pc_10008534 ], [ %v0_10008570, %dec_label_pc_10008558 ]
  store i32 %v0_10008574, i32* @r5, align 4
  %v0_1000857c = call i32 @__asm_mfcr()
  %v1_10008580 = and i32 %v0_1000857c, 268435456
  %v3_10008580 = icmp eq i32 %v1_10008580, 0
  store i32 %v0_1000857c, i32* %r31.global-to-local, align 4
  br i1 %v3_10008580, label %dec_label_pc_10008598, label %dec_label_pc_1000858c

dec_label_pc_1000858c:                            ; preds = %dec_label_pc_10008574
  %v0_1000858c = call i32 @function_10008aa0()
  %v0_10008590 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008590 = inttoptr i32 %v0_1000858c to i32*
  store i32 %v0_10008590, i32* %v2_10008590, align 4
  br label %dec_label_pc_10008598

dec_label_pc_10008598:                            ; preds = %dec_label_pc_10008574, %dec_label_pc_1000858c
  %v0_100085a8 = phi i32 [ %v0_1000857c, %dec_label_pc_10008574 ], [ -1, %dec_label_pc_1000858c ]
  ret i32 %v0_100085a8

; uselistorder directives
  uselistorder label %dec_label_pc_10008598, { 1, 0 }
  uselistorder label %dec_label_pc_10008574, { 1, 0 }
}

define i32 @function_100085ac(i32 %arg1) local_unnamed_addr {
dec_label_pc_100085ac:
  store i32 %arg1, i32* @r5, align 4
  %v2_100085b8 = call i32 @function_10008534(i32 577, i32 577)
  ret i32 %v2_100085b8
}

define i32 @function_100085bc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100085bc:
  %r31.global-to-local = alloca i32, align 4
  %v0_100085d4 = call i32 @__asm_mfcr()
  %v1_100085d8 = and i32 %v0_100085d4, 268435456
  %v3_100085d8 = icmp eq i32 %v1_100085d8, 0
  store i32 %v0_100085d4, i32* %r31.global-to-local, align 4
  br i1 %v3_100085d8, label %dec_label_pc_100085f0, label %dec_label_pc_100085e4

dec_label_pc_100085e4:                            ; preds = %dec_label_pc_100085bc
  %v0_100085e4 = call i32 @function_10008aa0()
  %v0_100085e8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100085e8 = inttoptr i32 %v0_100085e4 to i32*
  store i32 %v0_100085e8, i32* %v2_100085e8, align 4
  br label %dec_label_pc_100085f0

dec_label_pc_100085f0:                            ; preds = %dec_label_pc_100085bc, %dec_label_pc_100085e4
  %v0_10008600 = phi i32 [ %v0_100085d4, %dec_label_pc_100085bc ], [ -1, %dec_label_pc_100085e4 ]
  ret i32 %v0_10008600

; uselistorder directives
  uselistorder label %dec_label_pc_100085f0, { 1, 0 }
}

define i32 @function_10008604(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008604:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000861c = call i32 @__asm_mfcr()
  %v1_10008620 = and i32 %v0_1000861c, 268435456
  %v3_10008620 = icmp eq i32 %v1_10008620, 0
  store i32 %v0_1000861c, i32* %r31.global-to-local, align 4
  br i1 %v3_10008620, label %dec_label_pc_10008638, label %dec_label_pc_1000862c

dec_label_pc_1000862c:                            ; preds = %dec_label_pc_10008604
  %v0_1000862c = call i32 @function_10008aa0()
  %v0_10008630 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008630 = inttoptr i32 %v0_1000862c to i32*
  store i32 %v0_10008630, i32* %v2_10008630, align 4
  br label %dec_label_pc_10008638

dec_label_pc_10008638:                            ; preds = %dec_label_pc_10008604, %dec_label_pc_1000862c
  %v0_10008648 = phi i32 [ %v0_1000861c, %dec_label_pc_10008604 ], [ -1, %dec_label_pc_1000862c ]
  ret i32 %v0_10008648

; uselistorder directives
  uselistorder label %dec_label_pc_10008638, { 1, 0 }
}

define i32 @function_1000864c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000864c:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008664 = call i32 @__asm_mfcr()
  %v1_10008668 = and i32 %v0_10008664, 268435456
  %v3_10008668 = icmp eq i32 %v1_10008668, 0
  store i32 %v0_10008664, i32* %r31.global-to-local, align 4
  br i1 %v3_10008668, label %dec_label_pc_10008680, label %dec_label_pc_10008674

dec_label_pc_10008674:                            ; preds = %dec_label_pc_1000864c
  %v0_10008674 = call i32 @function_10008aa0()
  %v0_10008678 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008678 = inttoptr i32 %v0_10008674 to i32*
  store i32 %v0_10008678, i32* %v2_10008678, align 4
  br label %dec_label_pc_10008680

dec_label_pc_10008680:                            ; preds = %dec_label_pc_1000864c, %dec_label_pc_10008674
  %v0_10008690 = phi i32 [ %v0_10008664, %dec_label_pc_1000864c ], [ -1, %dec_label_pc_10008674 ]
  ret i32 %v0_10008690

; uselistorder directives
  uselistorder label %dec_label_pc_10008680, { 1, 0 }
}

define i32 @function_10008694(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10008694:
  %r31.global-to-local = alloca i32, align 4
  %v0_100086ac = call i32 @__asm_mfcr()
  %v1_100086b0 = and i32 %v0_100086ac, 268435456
  %v3_100086b0 = icmp eq i32 %v1_100086b0, 0
  store i32 %v0_100086ac, i32* %r31.global-to-local, align 4
  br i1 %v3_100086b0, label %dec_label_pc_100086c8, label %dec_label_pc_100086bc

dec_label_pc_100086bc:                            ; preds = %dec_label_pc_10008694
  %v0_100086bc = call i32 @function_10008aa0()
  %v0_100086c0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100086c0 = inttoptr i32 %v0_100086bc to i32*
  store i32 %v0_100086c0, i32* %v2_100086c0, align 4
  br label %dec_label_pc_100086c8

dec_label_pc_100086c8:                            ; preds = %dec_label_pc_10008694, %dec_label_pc_100086bc
  %v0_100086d8 = phi i32 [ %v0_100086ac, %dec_label_pc_10008694 ], [ -1, %dec_label_pc_100086bc ]
  ret i32 %v0_100086d8

; uselistorder directives
  uselistorder label %dec_label_pc_100086c8, { 1, 0 }
}

define i32 @function_100086dc(i32 %arg1) local_unnamed_addr {
dec_label_pc_100086dc:
  %r31.global-to-local = alloca i32, align 4
  %v0_100086f4 = call i32 @__asm_mfcr()
  %v1_100086f8 = and i32 %v0_100086f4, 268435456
  %v3_100086f8 = icmp eq i32 %v1_100086f8, 0
  store i32 %v0_100086f4, i32* %r31.global-to-local, align 4
  br i1 %v3_100086f8, label %dec_label_pc_10008710, label %dec_label_pc_10008704

dec_label_pc_10008704:                            ; preds = %dec_label_pc_100086dc
  %v0_10008704 = call i32 @function_10008aa0()
  %v0_10008708 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008708 = inttoptr i32 %v0_10008704 to i32*
  store i32 %v0_10008708, i32* %v2_10008708, align 4
  br label %dec_label_pc_10008710

dec_label_pc_10008710:                            ; preds = %dec_label_pc_100086dc, %dec_label_pc_10008704
  %v0_10008720 = phi i32 [ %v0_100086f4, %dec_label_pc_100086dc ], [ -1, %dec_label_pc_10008704 ]
  ret i32 %v0_10008720

; uselistorder directives
  uselistorder label %dec_label_pc_10008710, { 1, 0 }
}

define i32 @function_10008724(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008724:
  %r31.global-to-local = alloca i32, align 4
  %v3_10008724 = icmp eq i32 %arg2, 0
  br i1 %v3_10008724, label %dec_label_pc_10008764, label %dec_label_pc_1000874c

dec_label_pc_1000874c:                            ; preds = %dec_label_pc_10008724
  store i32 -1, i32* %r31.global-to-local, align 4
  %tmp5 = icmp ult i32 %arg1, 3
  br i1 %tmp5, label %dec_label_pc_10008764, label %dec_label_pc_10008754

dec_label_pc_10008754:                            ; preds = %dec_label_pc_1000874c
  %v0_10008754 = call i32 @function_10008aa0()
  %v2_1000875c = inttoptr i32 %v0_10008754 to i32*
  store i32 22, i32* %v2_1000875c, align 4
  %v0_10008788.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008784

dec_label_pc_10008764:                            ; preds = %dec_label_pc_1000874c, %dec_label_pc_10008724
  %v0_10008768 = call i32 @__asm_mfcr()
  %v1_1000876c = and i32 %v0_10008768, 268435456
  %v3_1000876c = icmp eq i32 %v1_1000876c, 0
  store i32 %v0_10008768, i32* %r31.global-to-local, align 4
  br i1 %v3_1000876c, label %dec_label_pc_10008784, label %dec_label_pc_10008778

dec_label_pc_10008778:                            ; preds = %dec_label_pc_10008764
  %v0_10008778 = call i32 @function_10008aa0()
  %v0_1000877c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000877c = inttoptr i32 %v0_10008778 to i32*
  store i32 %v0_1000877c, i32* %v2_1000877c, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008784

dec_label_pc_10008784:                            ; preds = %dec_label_pc_10008764, %dec_label_pc_10008754, %dec_label_pc_10008778
  %v0_10008788 = phi i32 [ %v0_10008768, %dec_label_pc_10008764 ], [ %v0_10008788.pre, %dec_label_pc_10008754 ], [ -1, %dec_label_pc_10008778 ]
  ret i32 %v0_10008788

; uselistorder directives
  uselistorder label %dec_label_pc_10008784, { 2, 0, 1 }
}

define i32 @function_1000879c() local_unnamed_addr {
dec_label_pc_1000879c:
  %r31.global-to-local = alloca i32, align 4
  %v0_100087b4 = call i32 @__asm_mfcr()
  %v1_100087b8 = and i32 %v0_100087b4, 268435456
  %v3_100087b8 = icmp eq i32 %v1_100087b8, 0
  store i32 %v0_100087b4, i32* %r31.global-to-local, align 4
  br i1 %v3_100087b8, label %dec_label_pc_100087d0, label %dec_label_pc_100087c4

dec_label_pc_100087c4:                            ; preds = %dec_label_pc_1000879c
  %v0_100087c4 = call i32 @function_10008aa0()
  %v0_100087c8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100087c8 = inttoptr i32 %v0_100087c4 to i32*
  store i32 %v0_100087c8, i32* %v2_100087c8, align 4
  br label %dec_label_pc_100087d0

dec_label_pc_100087d0:                            ; preds = %dec_label_pc_1000879c, %dec_label_pc_100087c4
  %v0_100087e0 = phi i32 [ %v0_100087b4, %dec_label_pc_1000879c ], [ -1, %dec_label_pc_100087c4 ]
  ret i32 %v0_100087e0

; uselistorder directives
  uselistorder label %dec_label_pc_100087d0, { 1, 0 }
}

define i32 @function_100087e4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100087e4:
  %r31.global-to-local = alloca i32, align 4
  %v0_100087fc = call i32 @__asm_mfcr()
  %v1_10008800 = and i32 %v0_100087fc, 268435456
  %v3_10008800 = icmp eq i32 %v1_10008800, 0
  store i32 %v0_100087fc, i32* %r31.global-to-local, align 4
  br i1 %v3_10008800, label %dec_label_pc_10008818, label %dec_label_pc_1000880c

dec_label_pc_1000880c:                            ; preds = %dec_label_pc_100087e4
  %v0_1000880c = call i32 @function_10008aa0()
  %v0_10008810 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008810 = inttoptr i32 %v0_1000880c to i32*
  store i32 %v0_10008810, i32* %v2_10008810, align 4
  br label %dec_label_pc_10008818

dec_label_pc_10008818:                            ; preds = %dec_label_pc_100087e4, %dec_label_pc_1000880c
  %v0_10008828 = phi i32 [ %v0_100087fc, %dec_label_pc_100087e4 ], [ -1, %dec_label_pc_1000880c ]
  ret i32 %v0_10008828

; uselistorder directives
  uselistorder label %dec_label_pc_10008818, { 1, 0 }
}

define i32 @function_1000882c(i32* %arg1) local_unnamed_addr {
dec_label_pc_1000882c:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10008848 = ptrtoint i32* %stack_var_-40 to i32
  %v2_10008850 = load i32, i32* %arg1, align 4
  store i32 %v2_10008848, i32* @r3, align 4
  %v3_1000885c = icmp eq i32 %v2_10008850, -1
  br i1 %v3_1000885c, label %dec_label_pc_10008864, label %dec_label_pc_10008878

dec_label_pc_10008864:                            ; preds = %dec_label_pc_1000882c
  %v0_10008864 = call i32 @function_10008aa0()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10008870 = inttoptr i32 %v0_10008864 to i32*
  store i32 9, i32* %v2_10008870, align 4
  %v0_100088bc.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100088b8

dec_label_pc_10008878:                            ; preds = %dec_label_pc_1000882c
  %v3_10008878 = call i32 @function_10009c54(i32 %v2_10008848, i32 ptrtoint ([3 x i8]* @global_var_10009c4c.310 to i32))
  %v0_10008880 = call i32 @function_10009c4c()
  %v0_10008888 = load i32, i32* @r31, align 4
  %v1_10008888 = inttoptr i32 %v0_10008888 to i32*
  %v2_10008888 = load i32, i32* %v1_10008888, align 4
  store i32 %v2_10008888, i32* @r29, align 4
  store i32 -1, i32* %v1_10008888, align 4
  store i32 %v2_10008848, i32* @r3, align 4
  %v2_10008898 = call i32 @function_10009c54(i32 %v2_10008848, i32 1)
  %v0_1000889c = load i32, i32* @r31, align 4
  %v1_1000889c = add i32 %v0_1000889c, 12
  %v2_1000889c = inttoptr i32 %v1_1000889c to i32*
  %v3_1000889c = load i32, i32* %v2_1000889c, align 4
  store i32 %v3_1000889c, i32* @r3, align 4
  store i32 268470436, i32* @lr, align 4
  %v0_100088a0 = call i32 @function_10009480()
  %v0_100088a4 = load i32, i32* @r31, align 4
  store i32 %v0_100088a4, i32* @r3, align 4
  store i32 268470444, i32* @lr, align 4
  %v0_100088a8 = call i32 @function_10009480()
  store i32 268470452, i32* @lr, align 4
  %v0_100088b0 = call i32 @function_100083cc()
  store i32 %v0_100088b0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100088b8

dec_label_pc_100088b8:                            ; preds = %dec_label_pc_10008864, %dec_label_pc_10008878
  %v0_100088bc = phi i32 [ %v0_100088bc.pre, %dec_label_pc_10008864 ], [ %v0_100088b0, %dec_label_pc_10008878 ]
  ret i32 %v0_100088bc

; uselistorder directives
  uselistorder i32 %v2_10008848, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_100088b8, { 1, 0 }
}

define i32 @function_100088d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_100088d0:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  %v0_100088d0 = load i32, i32* @lr, align 4
  store i32 %v0_100088d0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 268470512, i32* @lr, align 4
  %v2_100088ec = call i32 @function_10008534(i32 18432, i32 18432)
  %v1_100088f0 = icmp slt i32 %v2_100088ec, 0
  br i1 %v1_100088f0, label %dec_label_pc_100089c8, label %dec_label_pc_100088f8

dec_label_pc_100088f8:                            ; preds = %dec_label_pc_100088d0
  %v2_100088f8 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_100088f8, i32* @r4, align 4
  store i32 268470528, i32* @lr, align 4
  %v1_100088fc = call i32 @function_1000a028(i32 %v2_100088f8)
  %v1_10008900 = icmp slt i32 %v1_100088fc, 0
  br i1 %v1_10008900, label %dec_label_pc_10008924, label %dec_label_pc_10008908

dec_label_pc_10008908:                            ; preds = %dec_label_pc_100088f8
  %v0_10008908 = load i32, i32* @r29, align 4
  store i32 2, i32* @r4, align 4
  store i32 268470556, i32* @lr, align 4
  %v2_10008918 = call i32 @function_100082e4(i32 %v0_10008908)
  %tmp5 = icmp sgt i32 %v2_10008918, -1
  br i1 %tmp5, label %dec_label_pc_10008944, label %dec_label_pc_10008924

dec_label_pc_10008924:                            ; preds = %dec_label_pc_10008908, %dec_label_pc_100088f8
  %v0_10008924 = call i32 @function_10008aa0()
  store i32 0, i32* @r31, align 4
  store i32 %v0_10008924, i32* @r28, align 4
  %v1_10008934 = inttoptr i32 %v0_10008924 to i32*
  %v2_10008934 = load i32, i32* %v1_10008934, align 4
  store i32 268470588, i32* @lr, align 4
  %v0_10008938 = call i32 @function_100083cc()
  %v1_1000893c = load i32, i32* @r28, align 4
  %v2_1000893c = inttoptr i32 %v1_1000893c to i32*
  store i32 %v2_10008934, i32* %v2_1000893c, align 4
  br label %dec_label_pc_100089c8

dec_label_pc_10008944:                            ; preds = %dec_label_pc_10008908
  store i32 48, i32* @r3, align 4
  store i32 268470604, i32* @lr, align 4
  %v0_10008948 = call i32 @function_100092b8()
  store i32 %v0_10008948, i32* %r31.global-to-local, align 4
  %v3_1000894c = icmp eq i32 %v0_10008948, 0
  br i1 %v3_1000894c, label %dec_label_pc_100089a0, label %dec_label_pc_10008954

dec_label_pc_10008954:                            ; preds = %dec_label_pc_10008944
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10008958 = load i32, i32* @r29, align 4
  %v2_10008958 = inttoptr i32 %v0_10008948 to i32*
  store i32 %v0_10008958, i32* %v2_10008958, align 4
  %v0_1000895c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000895c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000895c = add i32 %v1_1000895c, 4
  %v3_1000895c = inttoptr i32 %v2_1000895c to i32*
  store i32 %v0_1000895c, i32* %v3_1000895c, align 4
  %v0_10008960 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008960 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008960 = add i32 %v1_10008960, 16
  %v3_10008960 = inttoptr i32 %v2_10008960 to i32*
  store i32 %v0_10008960, i32* %v3_10008960, align 4
  %v0_10008964 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008964 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008964 = add i32 %v1_10008964, 8
  %v3_10008964 = inttoptr i32 %v2_10008964 to i32*
  store i32 %v0_10008964, i32* %v3_10008964, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_1000896c = icmp ugt i32 %tmp, 511
  %v1_10008970 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008970 = add i32 %v1_10008970, 20
  %v3_10008970 = inttoptr i32 %v2_10008970 to i32*
  store i32 %tmp, i32* %v3_10008970, align 4
  br i1 %v2_1000896c, label %dec_label_pc_10008980, label %dec_label_pc_10008978

dec_label_pc_10008978:                            ; preds = %dec_label_pc_10008954
  store i32 512, i32* %r0.global-to-local, align 4
  %v1_1000897c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000897c = add i32 %v1_1000897c, 20
  %v3_1000897c = inttoptr i32 %v2_1000897c to i32*
  store i32 512, i32* %v3_1000897c, align 4
  br label %dec_label_pc_10008980

dec_label_pc_10008980:                            ; preds = %dec_label_pc_10008954, %dec_label_pc_10008978
  %v0_10008980 = load i32, i32* %r31.global-to-local, align 4
  %v1_10008980 = add i32 %v0_10008980, 20
  %v2_10008980 = inttoptr i32 %v1_10008980 to i32*
  %v3_10008980 = load i32, i32* %v2_10008980, align 4
  store i32 268470668, i32* @lr, align 4
  %v2_10008988 = call i32 @function_10009410(i32 1, i32 %v3_10008980)
  %v3_1000898c = icmp eq i32 %v2_10008988, 0
  %v1_10008990 = load i32, i32* @r31, align 4
  %v2_10008990 = add i32 %v1_10008990, 12
  %v3_10008990 = inttoptr i32 %v2_10008990 to i32*
  store i32 %v2_10008988, i32* %v3_10008990, align 4
  br i1 %v3_1000898c, label %dec_label_pc_10008998, label %dec_label_pc_100089bc

dec_label_pc_10008998:                            ; preds = %dec_label_pc_10008980
  %v0_10008998 = load i32, i32* @r31, align 4
  store i32 %v0_10008998, i32* @r3, align 4
  store i32 268470688, i32* @lr, align 4
  %v0_1000899c = call i32 @function_10009480()
  br label %dec_label_pc_100089a0

dec_label_pc_100089a0:                            ; preds = %dec_label_pc_10008944, %dec_label_pc_10008998
  store i32 0, i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_100089ac.313 to i32), i32* @lr, align 4
  %v0_100089a8 = call i32 @function_100083cc()
  %v0_100089ac = call i32 @function_10008aa0()
  store i32 12, i32* %r0.global-to-local, align 4
  %v2_100089b4 = inttoptr i32 %v0_100089ac to i32*
  store i32 12, i32* %v2_100089b4, align 4
  br label %dec_label_pc_100089c8

dec_label_pc_100089bc:                            ; preds = %dec_label_pc_10008980
  %v0_100089c4 = call i32 @function_10009c4c()
  br label %dec_label_pc_100089c8

dec_label_pc_100089c8:                            ; preds = %dec_label_pc_100088d0, %dec_label_pc_100089a0, %dec_label_pc_10008924, %dec_label_pc_100089bc
  store i32 %v0_100088d0, i32* %r0.global-to-local, align 4
  %v0_100089cc = load i32, i32* @r31, align 4
  ret i32 %v0_100089cc

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32 (i32, i32)* @function_10009410, { 34, 35, 36, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 4, 3, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 2, 1, 0 }
  uselistorder i32 512, { 7, 10, 8, 0, 9, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 ()* @function_100083cc, { 16, 15, 14, 29, 28, 5, 4, 32, 3, 27, 31, 30, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 13, 12, 11, 10, 9, 8, 7, 6, 0, 1, 2 }
  uselistorder i32 18432, { 1, 0 }
  uselistorder label %dec_label_pc_100089c8, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_100089a0, { 1, 0 }
  uselistorder label %dec_label_pc_10008980, { 1, 0 }
}

define i32 @function_100089e0(i32* %arg1) local_unnamed_addr {
dec_label_pc_100089e0:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %v0_100089e4 = load i32, i32* @lr, align 4
  store i32 %v0_100089e4, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_100089fc = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_100089fc, i32* @r3, align 4
  %v3_10008a08 = call i32 @function_10009c54(i32 %v2_100089fc, i32 ptrtoint ([3 x i8]* @global_var_10009c4c.310 to i32))
  %v0_10008a10 = call i32 @function_10009c4c()
  br label %dec_label_pc_10008a14

dec_label_pc_10008a14:                            ; preds = %dec_label_pc_10008a50, %dec_label_pc_100089e0
  %v0_10008a14 = load i32, i32* @r31, align 4
  %v1_10008a14 = add i32 %v0_10008a14, 4
  %v2_10008a14 = inttoptr i32 %v1_10008a14 to i32*
  %v3_10008a14 = load i32, i32* %v2_10008a14, align 4
  store i32 %v3_10008a14, i32* %r0.global-to-local, align 4
  %v1_10008a18 = add i32 %v0_10008a14, 8
  %v2_10008a18 = inttoptr i32 %v1_10008a18 to i32*
  %v3_10008a18 = load i32, i32* %v2_10008a18, align 4
  store i32 %v3_10008a18, i32* %r9.global-to-local, align 4
  %v3_10008a1c = icmp ugt i32 %v3_10008a18, %v3_10008a14
  br i1 %v3_10008a1c, label %dec_label_pc_10008a50, label %dec_label_pc_10008a24

dec_label_pc_10008a24:                            ; preds = %dec_label_pc_10008a14
  %v1_10008a24 = inttoptr i32 %v0_10008a14 to i32*
  %v2_10008a24 = load i32, i32* %v1_10008a24, align 4
  store i32 %v2_10008a24, i32* @r3, align 4
  %v1_10008a28 = add i32 %v0_10008a14, 12
  %v2_10008a28 = inttoptr i32 %v1_10008a28 to i32*
  %v3_10008a28 = load i32, i32* %v2_10008a28, align 4
  %v1_10008a2c = add i32 %v0_10008a14, 20
  %v2_10008a2c = inttoptr i32 %v1_10008a2c to i32*
  %v3_10008a2c = load i32, i32* %v2_10008a2c, align 4
  store i32 %v3_10008a2c, i32* @r5, align 4
  store i32 268470836, i32* @lr, align 4
  %v4_10008a30 = inttoptr i32 %v2_10008a24 to i32*
  %v5_10008a30 = call i32 @function_1000a09c(i32* %v4_10008a30, i32 %v3_10008a28, i32 %v3_10008a2c, i32 %v3_10008a18)
  %v2_10008a34 = icmp sgt i32 %v5_10008a30, 0
  br i1 %v2_10008a34, label %dec_label_pc_10008a44, label %dec_label_pc_10008a3c

dec_label_pc_10008a3c:                            ; preds = %dec_label_pc_10008a24
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_10008a7c

dec_label_pc_10008a44:                            ; preds = %dec_label_pc_10008a24
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10008a48 = load i32, i32* @r31, align 4
  %v2_10008a48 = add i32 %v1_10008a48, 8
  %v3_10008a48 = inttoptr i32 %v2_10008a48 to i32*
  store i32 %v5_10008a30, i32* %v3_10008a48, align 4
  %v0_10008a4c = load i32, i32* %r0.global-to-local, align 4
  %v1_10008a4c = load i32, i32* @r31, align 4
  %v2_10008a4c = add i32 %v1_10008a4c, 4
  %v3_10008a4c = inttoptr i32 %v2_10008a4c to i32*
  store i32 %v0_10008a4c, i32* %v3_10008a4c, align 4
  %v0_10008a50.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10008a50

dec_label_pc_10008a50:                            ; preds = %dec_label_pc_10008a14, %dec_label_pc_10008a44
  %v1_10008a64 = phi i32 [ %v0_10008a14, %dec_label_pc_10008a14 ], [ %v0_10008a50.pre, %dec_label_pc_10008a44 ]
  %v1_10008a50 = add i32 %v1_10008a64, 4
  %v2_10008a50 = inttoptr i32 %v1_10008a50 to i32*
  %v3_10008a50 = load i32, i32* %v2_10008a50, align 4
  store i32 %v3_10008a50, i32* %r9.global-to-local, align 4
  %v1_10008a54 = add i32 %v1_10008a64, 12
  %v2_10008a54 = inttoptr i32 %v1_10008a54 to i32*
  %v3_10008a54 = load i32, i32* %v2_10008a54, align 4
  store i32 %v3_10008a54, i32* %r11.global-to-local, align 4
  %v2_10008a58 = add i32 %v3_10008a54, %v3_10008a50
  store i32 %v2_10008a58, i32* @r29, align 4
  %v1_10008a5c = add i32 %v2_10008a58, 8
  %v2_10008a5c = inttoptr i32 %v1_10008a5c to i16*
  %v3_10008a5c = load i16, i16* %v2_10008a5c, align 2
  %v4_10008a5c = zext i16 %v3_10008a5c to i32
  %v2_10008a60 = add i32 %v4_10008a5c, %v3_10008a50
  store i32 %v2_10008a60, i32* %r0.global-to-local, align 4
  store i32 %v2_10008a60, i32* %v2_10008a50, align 4
  %v0_10008a68 = load i32, i32* @r29, align 4
  %v1_10008a68 = add i32 %v0_10008a68, 4
  %v2_10008a68 = inttoptr i32 %v1_10008a68 to i32*
  %v3_10008a68 = load i32, i32* %v2_10008a68, align 4
  store i32 %v3_10008a68, i32* %r0.global-to-local, align 4
  %v1_10008a6c = load i32, i32* @r31, align 4
  %v2_10008a6c = add i32 %v1_10008a6c, 16
  %v3_10008a6c = inttoptr i32 %v2_10008a6c to i32*
  store i32 %v3_10008a68, i32* %v3_10008a6c, align 4
  %v0_10008a70 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008a70 = load i32, i32* %r11.global-to-local, align 4
  %v2_10008a70 = add i32 %v1_10008a70, %v0_10008a70
  %v3_10008a70 = inttoptr i32 %v2_10008a70 to i32*
  %v4_10008a70 = load i32, i32* %v3_10008a70, align 4
  store i32 %v4_10008a70, i32* %r0.global-to-local, align 4
  %v3_10008a74 = icmp eq i32 %v4_10008a70, 0
  br i1 %v3_10008a74, label %dec_label_pc_10008a14, label %dec_label_pc_10008a7c

dec_label_pc_10008a7c:                            ; preds = %dec_label_pc_10008a50, %dec_label_pc_10008a3c
  store i32 %v2_100089fc, i32* @r3, align 4
  %v2_10008a84 = call i32 @function_10009c54(i32 %v2_100089fc, i32 1)
  store i32 %v0_100089e4, i32* %r0.global-to-local, align 4
  %v0_10008a8c = load i32, i32* @r29, align 4
  ret i32 %v0_10008a8c

; uselistorder directives
  uselistorder i32 %v1_10008a64, { 1, 0 }
  uselistorder i32 %v0_10008a14, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v2_100089fc, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10008a50, { 1, 0 }
}

define i32 @function_10008aa0() local_unnamed_addr {
dec_label_pc_10008aa0:
  ret i32 ptrtoint (i32* @global_var_1001b49c.315 to i32)
}

define i32 @function_10008aac(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008aac:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %v2_10008ab4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268470976, i32* @lr, align 4
  %v1_10008abc = call i32 @function_1000a4dc(i32 %v2_10008ab4)
  %v3_10008ac4 = load i32, i32* %stack_var_-24, align 4
  %v2_10008ac8 = add i32 %v3_10008ac4, %tmp
  %v1_10008ad0 = mul i32 %v2_10008ac8, 10000
  %v1_10008adc = and i32 %v1_10008ad0, 2147483632
  ret i32 %v1_10008adc
}

define i32 @function_10008ae4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008ae4:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v2_10008ae4 = icmp ult i32 %arg2, %arg1
  store i32 %arg1, i32* %r8.global-to-local, align 4
  store i32 %arg3, i32* @r11, align 4
  br i1 %v2_10008ae4, label %dec_label_pc_10008af8, label %dec_label_pc_10008af4

dec_label_pc_10008af4:                            ; preds = %dec_label_pc_10008ae4
  %v0_10008af4 = call i32 @function_1000a6a0()
  store i32 %v0_10008af4, i32* @r3, align 4
  br label %dec_label_pc_10008af8

dec_label_pc_10008af8:                            ; preds = %dec_label_pc_10008ae4, %dec_label_pc_10008af4
  %v1_10008af8 = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_10008af8, i32* %r9.global-to-local, align 4
  %v4_10008af8 = icmp eq i32 %v1_10008af8, 0
  %v2_10008afc = add i32 %arg3, %arg2
  store i32 %v2_10008afc, i32* %r4.global-to-local, align 4
  %v0_10008b00 = load i32, i32* @r3, align 4
  %v2_10008b00 = add i32 %v0_10008b00, %arg3
  store i32 %v2_10008b00, i32* %r10.global-to-local, align 4
  br i1 %v4_10008af8, label %dec_label_pc_10008b28, label %dec_label_pc_10008b08

dec_label_pc_10008b08:                            ; preds = %dec_label_pc_10008af8
  %v1_10008b08 = urem i32 %v2_10008b00, 4
  %v3_10008b08 = icmp eq i32 %v1_10008b08, 0
  br i1 %v3_10008b08, label %dec_label_pc_10008b10, label %dec_label_pc_10008b5c

dec_label_pc_10008b10:                            ; preds = %dec_label_pc_10008b74.dec_label_pc_10008b10_crit_edge, %dec_label_pc_10008b08
  %v1_10008b1c.pre = phi i32 [ %v1_10008b1c.pre.pre, %dec_label_pc_10008b74.dec_label_pc_10008b10_crit_edge ], [ %v2_10008b00, %dec_label_pc_10008b08 ]
  %v0_10008b10 = phi i32 [ %v1_10008b74, %dec_label_pc_10008b74.dec_label_pc_10008b10_crit_edge ], [ %v1_10008af8, %dec_label_pc_10008b08 ]
  store i32 %v0_10008b10, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10008b14

dec_label_pc_10008b14:                            ; preds = %dec_label_pc_10008b14, %dec_label_pc_10008b10
  %v1_10008b1c = phi i32 [ %v2_10008b20, %dec_label_pc_10008b14 ], [ %v1_10008b1c.pre, %dec_label_pc_10008b10 ]
  %v0_10008b14 = load i32, i32* %r4.global-to-local, align 4
  %v1_10008b14 = add i32 %v0_10008b14, -4
  %v2_10008b14 = inttoptr i32 %v1_10008b14 to i32*
  %v3_10008b14 = load i32, i32* %v2_10008b14, align 4
  %v1_10008b18 = add i32 %v0_10008b14, -8
  %v2_10008b18 = inttoptr i32 %v1_10008b18 to i32*
  %v3_10008b18 = load i32, i32* %v2_10008b18, align 4
  store i32 %v3_10008b18, i32* %r9.global-to-local, align 4
  store i32 %v1_10008b18, i32* %r4.global-to-local, align 4
  %v2_10008b1c = add i32 %v1_10008b1c, -4
  %v3_10008b1c = inttoptr i32 %v2_10008b1c to i32*
  store i32 %v3_10008b14, i32* %v3_10008b1c, align 4
  %v0_10008b20 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008b20 = load i32, i32* %r10.global-to-local, align 4
  %v2_10008b20 = add i32 %v1_10008b20, -8
  %v3_10008b20 = inttoptr i32 %v2_10008b20 to i32*
  store i32 %v0_10008b20, i32* %v3_10008b20, align 4
  store i32 %v2_10008b20, i32* %r10.global-to-local, align 4
  %v0_10008b24 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008b24 = add i32 %v0_10008b24, -1
  store i32 %v1_10008b24, i32* %ctr.global-to-local, align 4
  %v2_10008b24 = icmp eq i32 %v1_10008b24, 0
  br i1 %v2_10008b24, label %dec_label_pc_10008b28, label %dec_label_pc_10008b14

dec_label_pc_10008b28:                            ; preds = %dec_label_pc_10008b14, %dec_label_pc_10008b74, %dec_label_pc_10008af8
  %v0_10008b28 = load i32, i32* @r11, align 4
  %v1_10008b28 = urem i32 %v0_10008b28, 8
  store i32 %v1_10008b28, i32* %r5.global-to-local, align 4
  %tmp = icmp ult i32 %v1_10008b28, 4
  br i1 %tmp, label %dec_label_pc_10008b40, label %dec_label_pc_10008b34

dec_label_pc_10008b34:                            ; preds = %dec_label_pc_10008b28
  %v0_10008b34 = load i32, i32* %r4.global-to-local, align 4
  %v1_10008b34 = add i32 %v0_10008b34, -4
  %v2_10008b34 = inttoptr i32 %v1_10008b34 to i32*
  %v3_10008b34 = load i32, i32* %v2_10008b34, align 4
  store i32 %v1_10008b34, i32* %r4.global-to-local, align 4
  %v1_10008b38 = add nsw i32 %v1_10008b28, -4
  store i32 %v1_10008b38, i32* %r5.global-to-local, align 4
  %v1_10008b3c = load i32, i32* %r10.global-to-local, align 4
  %v2_10008b3c = add i32 %v1_10008b3c, -4
  %v3_10008b3c = inttoptr i32 %v2_10008b3c to i32*
  store i32 %v3_10008b34, i32* %v3_10008b3c, align 4
  store i32 %v2_10008b3c, i32* %r10.global-to-local, align 4
  %v0_10008b40.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10008b40

dec_label_pc_10008b40:                            ; preds = %dec_label_pc_10008b28, %dec_label_pc_10008b34
  %v0_10008b48 = phi i32 [ %v1_10008b28, %dec_label_pc_10008b28 ], [ %v0_10008b40.pre, %dec_label_pc_10008b34 ]
  %v3_10008b40 = icmp eq i32 %v0_10008b48, 0
  br i1 %v3_10008b40, label %dec_label_pc_10008b80, label %dec_label_pc_10008b48

dec_label_pc_10008b48:                            ; preds = %dec_label_pc_10008b40
  store i32 %v0_10008b48, i32* %ctr.global-to-local, align 4
  %v2_10008b50.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008b4c

dec_label_pc_10008b4c:                            ; preds = %dec_label_pc_10008b4c, %dec_label_pc_10008b48
  %v2_10008b50 = phi i32 [ %v3_10008b50, %dec_label_pc_10008b4c ], [ %v2_10008b50.pre, %dec_label_pc_10008b48 ]
  %v0_10008b4c = load i32, i32* %r4.global-to-local, align 4
  %v1_10008b4c = add i32 %v0_10008b4c, -1
  %v2_10008b4c = inttoptr i32 %v1_10008b4c to i8*
  %v3_10008b4c = load i8, i8* %v2_10008b4c, align 1
  store i32 %v1_10008b4c, i32* %r4.global-to-local, align 4
  %v3_10008b50 = add i32 %v2_10008b50, -1
  %v4_10008b50 = inttoptr i32 %v3_10008b50 to i8*
  store i8 %v3_10008b4c, i8* %v4_10008b50, align 1
  store i32 %v3_10008b50, i32* %r10.global-to-local, align 4
  %v0_10008b54 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008b54 = add i32 %v0_10008b54, -1
  store i32 %v1_10008b54, i32* %ctr.global-to-local, align 4
  %v2_10008b54 = icmp eq i32 %v1_10008b54, 0
  br i1 %v2_10008b54, label %dec_label_pc_10008b80, label %dec_label_pc_10008b4c

dec_label_pc_10008b5c:                            ; preds = %dec_label_pc_10008b08
  %v1_10008b5c = sub nsw i32 4, %v1_10008b08
  store i32 %v1_10008b5c, i32* %ctr.global-to-local, align 4
  %v2_10008b64 = sub i32 %arg3, %v1_10008b5c
  store i32 %v2_10008b64, i32* @r11, align 4
  %v1_10008b688 = add i32 %v2_10008afc, -1
  %v2_10008b689 = inttoptr i32 %v1_10008b688 to i8*
  %v3_10008b6810 = load i8, i8* %v2_10008b689, align 1
  store i32 %v1_10008b688, i32* %r4.global-to-local, align 4
  %v3_10008b6c12 = add i32 %v2_10008b00, -1
  %v4_10008b6c13 = inttoptr i32 %v3_10008b6c12 to i8*
  store i8 %v3_10008b6810, i8* %v4_10008b6c13, align 1
  store i32 %v3_10008b6c12, i32* %r10.global-to-local, align 4
  %v0_10008b7014 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008b7015 = add i32 %v0_10008b7014, -1
  store i32 %v1_10008b7015, i32* %ctr.global-to-local, align 4
  %v2_10008b7016 = icmp eq i32 %v1_10008b7015, 0
  br i1 %v2_10008b7016, label %dec_label_pc_10008b74, label %dec_label_pc_10008b68.dec_label_pc_10008b68_crit_edge

dec_label_pc_10008b68.dec_label_pc_10008b68_crit_edge: ; preds = %dec_label_pc_10008b5c, %dec_label_pc_10008b68.dec_label_pc_10008b68_crit_edge
  %v3_10008b6c17 = phi i32 [ %v3_10008b6c, %dec_label_pc_10008b68.dec_label_pc_10008b68_crit_edge ], [ %v3_10008b6c12, %dec_label_pc_10008b5c ]
  %v0_10008b68.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10008b68 = add i32 %v0_10008b68.pre, -1
  %v2_10008b68 = inttoptr i32 %v1_10008b68 to i8*
  %v3_10008b68 = load i8, i8* %v2_10008b68, align 1
  store i32 %v1_10008b68, i32* %r4.global-to-local, align 4
  %v3_10008b6c = add i32 %v3_10008b6c17, -1
  %v4_10008b6c = inttoptr i32 %v3_10008b6c to i8*
  store i8 %v3_10008b68, i8* %v4_10008b6c, align 1
  store i32 %v3_10008b6c, i32* %r10.global-to-local, align 4
  %v0_10008b70 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008b70 = add i32 %v0_10008b70, -1
  store i32 %v1_10008b70, i32* %ctr.global-to-local, align 4
  %v2_10008b70 = icmp eq i32 %v1_10008b70, 0
  br i1 %v2_10008b70, label %dec_label_pc_10008b74, label %dec_label_pc_10008b68.dec_label_pc_10008b68_crit_edge

dec_label_pc_10008b74:                            ; preds = %dec_label_pc_10008b68.dec_label_pc_10008b68_crit_edge, %dec_label_pc_10008b5c
  %v0_10008b74 = load i32, i32* @r11, align 4
  %v1_10008b74 = call i32 @__asm_rlwinm.(i32 %v0_10008b74, i32 29, i32 3, i32 31)
  store i32 %v1_10008b74, i32* %r9.global-to-local, align 4
  %v4_10008b74 = icmp eq i32 %v1_10008b74, 0
  br i1 %v4_10008b74, label %dec_label_pc_10008b28, label %dec_label_pc_10008b74.dec_label_pc_10008b10_crit_edge

dec_label_pc_10008b74.dec_label_pc_10008b10_crit_edge: ; preds = %dec_label_pc_10008b74
  %v1_10008b1c.pre.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008b10

dec_label_pc_10008b80:                            ; preds = %dec_label_pc_10008b4c, %dec_label_pc_10008b40
  %v0_10008b80 = load i32, i32* %r8.global-to-local, align 4
  ret i32 %v0_10008b80

; uselistorder directives
  uselistorder i32 %v1_10008b74, { 1, 2, 0 }
  uselistorder i32 %v1_10008b70, { 1, 0 }
  uselistorder i32 %v3_10008b6c, { 1, 2, 0 }
  uselistorder i32 %v1_10008b54, { 1, 0 }
  uselistorder i32 %v3_10008b50, { 1, 2, 0 }
  uselistorder i32 %v1_10008b28, { 3, 2, 1, 0 }
  uselistorder i32 %v1_10008b24, { 1, 0 }
  uselistorder i32 %v2_10008b20, { 1, 2, 0 }
  uselistorder i32 %v1_10008b08, { 1, 0 }
  uselistorder i32 %v2_10008b00, { 1, 2, 0, 3 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 0, 3, 6, 4, 8, 5, 7, 9 }
  uselistorder i32* %r10.global-to-local, { 1, 2, 0, 3, 6, 4, 7, 5, 8, 9 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 %arg3, { 2, 0, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_10008b68.dec_label_pc_10008b68_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10008b40, { 1, 0 }
  uselistorder label %dec_label_pc_10008b28, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10008af8, { 1, 0 }
}

define i32 @function_10008b88(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008b88:
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_10008b88 = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_10008b88, i32* %r9.global-to-local, align 4
  %v4_10008b88 = icmp eq i32 %v1_10008b88, 0
  %v1_10008b90 = add i32 %arg1, -4
  store i32 %v1_10008b90, i32* %r11.global-to-local, align 4
  %v1_10008b94 = call i32 @__asm_rlwimi(i32 %arg2, i32 8, i32 16, i32 23)
  %v1_10008b98 = call i32 @__asm_rlwimi(i32 %v1_10008b94, i32 16, i32 0, i32 15)
  %v2_10008b98 = trunc i32 %v1_10008b98 to i8
  br i1 %v4_10008b88, label %dec_label_pc_10008bc0, label %dec_label_pc_10008ba0

dec_label_pc_10008ba0:                            ; preds = %dec_label_pc_10008b88
  %v0_10008ba0 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008ba0 = urem i32 %v0_10008ba0, 4
  %v3_10008ba0 = icmp eq i32 %v1_10008ba0, 0
  br i1 %v3_10008ba0, label %dec_label_pc_10008ba0.dec_label_pc_10008ba8_crit_edge, label %dec_label_pc_10008bf0

dec_label_pc_10008ba0.dec_label_pc_10008ba8_crit_edge: ; preds = %dec_label_pc_10008ba0
  %v0_10008ba8.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008ba8

dec_label_pc_10008ba8:                            ; preds = %dec_label_pc_10008c08.dec_label_pc_10008ba8_crit_edge, %dec_label_pc_10008ba0.dec_label_pc_10008ba8_crit_edge
  %v0_10008bac.pre = phi i32 [ %v0_10008ba0, %dec_label_pc_10008ba0.dec_label_pc_10008ba8_crit_edge ], [ %v0_10008bac.pre.pre, %dec_label_pc_10008c08.dec_label_pc_10008ba8_crit_edge ]
  %v0_10008ba8 = phi i32 [ %v0_10008ba8.pre, %dec_label_pc_10008ba0.dec_label_pc_10008ba8_crit_edge ], [ %v1_10008c08, %dec_label_pc_10008c08.dec_label_pc_10008ba8_crit_edge ]
  store i32 %v0_10008ba8, i32* %ctr.global-to-local, align 4
  %v1_10008bb0 = sext i8 %v2_10008b98 to i32
  br label %dec_label_pc_10008bac

dec_label_pc_10008bac:                            ; preds = %dec_label_pc_10008bac, %dec_label_pc_10008ba8
  %v0_10008bac = phi i32 [ %v1_10008bb8, %dec_label_pc_10008bac ], [ %v0_10008bac.pre, %dec_label_pc_10008ba8 ]
  %v1_10008bac = add i32 %v0_10008bac, 4
  store i32 %v1_10008bac, i32* %r9.global-to-local, align 4
  %v4_10008bb0 = inttoptr i32 %v1_10008bac to i32*
  store i32 %v1_10008bb0, i32* %v4_10008bb0, align 4
  %v2_10008bb4 = load i32, i32* %r9.global-to-local, align 4
  %v3_10008bb4 = add i32 %v2_10008bb4, 4
  %v4_10008bb4 = inttoptr i32 %v3_10008bb4 to i32*
  store i32 %v1_10008bb0, i32* %v4_10008bb4, align 4
  %v0_10008bb8 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008bb8 = add i32 %v0_10008bb8, 4
  store i32 %v1_10008bb8, i32* %r11.global-to-local, align 4
  %v0_10008bbc = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008bbc = add i32 %v0_10008bbc, -1
  store i32 %v1_10008bbc, i32* %ctr.global-to-local, align 4
  %v2_10008bbc = icmp eq i32 %v1_10008bbc, 0
  br i1 %v2_10008bbc, label %dec_label_pc_10008bc0, label %dec_label_pc_10008bac

dec_label_pc_10008bc0:                            ; preds = %dec_label_pc_10008bac, %dec_label_pc_10008c08, %dec_label_pc_10008b88
  %v0_10008bc0 = load i32, i32* %r5.global-to-local, align 4
  %v1_10008bc0 = urem i32 %v0_10008bc0, 8
  store i32 %v1_10008bc0, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_10008bc0, 4
  br i1 %tmp, label %dec_label_pc_10008bd4, label %dec_label_pc_10008bcc

dec_label_pc_10008bcc:                            ; preds = %dec_label_pc_10008bc0
  %v1_10008bcc = sext i8 %v2_10008b98 to i32
  %v2_10008bcc = load i32, i32* %r11.global-to-local, align 4
  %v3_10008bcc = add i32 %v2_10008bcc, 4
  %v4_10008bcc = inttoptr i32 %v3_10008bcc to i32*
  store i32 %v1_10008bcc, i32* %v4_10008bcc, align 4
  store i32 %v3_10008bcc, i32* %r11.global-to-local, align 4
  %v0_10008bd0 = load i32, i32* @r5, align 4
  %v1_10008bd0 = add i32 %v0_10008bd0, -4
  store i32 %v1_10008bd0, i32* @r5, align 4
  br label %dec_label_pc_10008bd4

dec_label_pc_10008bd4:                            ; preds = %dec_label_pc_10008bc0, %dec_label_pc_10008bcc
  %v0_10008bd4 = phi i32 [ %v1_10008bc0, %dec_label_pc_10008bc0 ], [ %v1_10008bd0, %dec_label_pc_10008bcc ]
  %v3_10008bd4 = icmp eq i32 %v0_10008bd4, 0
  %v0_10008bd8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10008bd4, i32 %v0_10008bd8)
  %v0_10008bdc = load i32, i32* @r5, align 4
  store i32 %v0_10008bdc, i32* %ctr.global-to-local, align 4
  %v0_10008be0 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008be0 = add i32 %v0_10008be0, 3
  store i32 %v1_10008be0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008be4

dec_label_pc_10008be4:                            ; preds = %dec_label_pc_10008be4, %dec_label_pc_10008bd4
  %v3_10008be4 = phi i32 [ %v4_10008be4, %dec_label_pc_10008be4 ], [ %v1_10008be0, %dec_label_pc_10008bd4 ]
  %v4_10008be4 = add i32 %v3_10008be4, 1
  %v5_10008be4 = inttoptr i32 %v4_10008be4 to i8*
  store i8 %v2_10008b98, i8* %v5_10008be4, align 1
  store i32 %v4_10008be4, i32* %r9.global-to-local, align 4
  %v0_10008be8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008be8 = add i32 %v0_10008be8, -1
  store i32 %v1_10008be8, i32* %ctr.global-to-local, align 4
  %v2_10008be8 = icmp eq i32 %v1_10008be8, 0
  br i1 %v2_10008be8, label %dec_label_pc_10008c14, label %dec_label_pc_10008be4

dec_label_pc_10008bf0:                            ; preds = %dec_label_pc_10008ba0
  %v1_10008bf0 = sub nsw i32 4, %v1_10008ba0
  store i32 %v1_10008bf0, i32* %ctr.global-to-local, align 4
  %v1_10008bf8 = load i32, i32* %r5.global-to-local, align 4
  %v2_10008bf8 = sub i32 %v1_10008bf8, %v1_10008bf0
  store i32 %v2_10008bf8, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10008bfc

dec_label_pc_10008bfc:                            ; preds = %dec_label_pc_10008bfc, %dec_label_pc_10008bf0
  %v3_10008bfc = phi i32 [ %v1_10008c00, %dec_label_pc_10008bfc ], [ %v0_10008ba0, %dec_label_pc_10008bf0 ]
  %v4_10008bfc = add i32 %v3_10008bfc, 4
  %v5_10008bfc = inttoptr i32 %v4_10008bfc to i8*
  store i8 %v2_10008b98, i8* %v5_10008bfc, align 1
  %v0_10008c00 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008c00 = add i32 %v0_10008c00, 1
  store i32 %v1_10008c00, i32* %r11.global-to-local, align 4
  %v0_10008c04 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008c04 = add i32 %v0_10008c04, -1
  store i32 %v1_10008c04, i32* %ctr.global-to-local, align 4
  %v2_10008c04 = icmp eq i32 %v1_10008c04, 0
  br i1 %v2_10008c04, label %dec_label_pc_10008c08, label %dec_label_pc_10008bfc

dec_label_pc_10008c08:                            ; preds = %dec_label_pc_10008bfc
  %v0_10008c08 = load i32, i32* %r5.global-to-local, align 4
  %v1_10008c08 = call i32 @__asm_rlwinm.(i32 %v0_10008c08, i32 29, i32 3, i32 31)
  store i32 %v1_10008c08, i32* %r9.global-to-local, align 4
  %v4_10008c08 = icmp eq i32 %v1_10008c08, 0
  br i1 %v4_10008c08, label %dec_label_pc_10008bc0, label %dec_label_pc_10008c08.dec_label_pc_10008ba8_crit_edge

dec_label_pc_10008c08.dec_label_pc_10008ba8_crit_edge: ; preds = %dec_label_pc_10008c08
  %v0_10008bac.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10008ba8

dec_label_pc_10008c14:                            ; preds = %dec_label_pc_10008be4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_10008c08, { 1, 2, 0 }
  uselistorder i32 %v1_10008c04, { 1, 0 }
  uselistorder i32 %v1_10008c00, { 1, 0 }
  uselistorder i32 %v1_10008be8, { 1, 0 }
  uselistorder i32 %v4_10008be4, { 1, 2, 0 }
  uselistorder i32 %v1_10008bc0, { 2, 1, 0 }
  uselistorder i32 %v1_10008bbc, { 1, 0 }
  uselistorder i32 %v1_10008bb8, { 1, 0 }
  uselistorder i32 %v1_10008ba0, { 1, 0 }
  uselistorder i32 %v0_10008ba0, { 2, 1, 0 }
  uselistorder i8 %v2_10008b98, { 3, 0, 1, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 4, 0, 3, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 4, 5, 2, 6, 3, 7, 8 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwimi, { 48, 49, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10008bd4, { 1, 0 }
  uselistorder label %dec_label_pc_10008bc0, { 1, 0, 2 }
}

define i32 @function_10008c18(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008c18:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8 @__decompiler_undefined_function_1()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10008c1c = load i32, i32* @lr, align 4
  store i32 %v0_10008c1c, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10008c2c = ptrtoint i32* %stack_var_-56 to i32
  store i32 268471360, i32* @lr, align 4
  %v3_10008c3c = call i32 @function_100081fc(i32 1076655123, i32 %v2_10008c2c, i32 %v2_10008c2c)
  %v2_10008c40 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10008c40, i32* @r4, align 4
  store i32 %v3_10008c3c, i32* @r30, align 4
  %v3_10008c44 = icmp eq i32 %v3_10008c3c, 0
  %v0_10008c4c = load i32, i32* @r31, align 4
  br i1 %v3_10008c44, label %dec_label_pc_10008c54, label %dec_label_pc_10008c9c

dec_label_pc_10008c54:                            ; preds = %dec_label_pc_10008c18
  %v1_10008c4c = add i32 %v0_10008c4c, 17
  %v3_10008c6c = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_10008c6c, i32* %r0.global-to-local, align 4
  %v2_10008c70 = add i32 %v0_10008c4c, 4
  %v3_10008c70 = inttoptr i32 %v2_10008c70 to i32*
  store i32 %tmp7, i32* %v3_10008c70, align 4
  %v0_10008c74 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008c74 = load i32, i32* @r31, align 4
  %v2_10008c74 = inttoptr i32 %v1_10008c74 to i32*
  store i32 %v0_10008c74, i32* %v2_10008c74, align 4
  %v0_10008c78 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008c78 = load i32, i32* @r31, align 4
  %v2_10008c78 = add i32 %v1_10008c78, 8
  %v3_10008c78 = inttoptr i32 %v2_10008c78 to i32*
  store i32 %v0_10008c78, i32* %v3_10008c78, align 4
  %v0_10008c7c = load i32, i32* %r10.global-to-local, align 4
  %v1_10008c7c = load i32, i32* @r31, align 4
  %v2_10008c7c = add i32 %v1_10008c7c, 12
  %v3_10008c7c = inttoptr i32 %v2_10008c7c to i32*
  store i32 %v0_10008c7c, i32* %v3_10008c7c, align 4
  %v3_10008c80 = load i32, i32* @r31, align 4
  %v4_10008c80 = add i32 %v3_10008c80, 16
  %v5_10008c80 = inttoptr i32 %v4_10008c80 to i8*
  store i8 %tmp4, i8* %v5_10008c80, align 1
  %v1_10008c84 = load i32, i32* @r31, align 4
  %v2_10008c84 = add i32 %v1_10008c84, 52
  %v3_10008c84 = inttoptr i32 %v2_10008c84 to i32*
  store i32 %tmp3, i32* %v3_10008c84, align 4
  %v1_10008c88 = load i32, i32* @r31, align 4
  %v2_10008c88 = add i32 %v1_10008c88, 56
  %v3_10008c88 = inttoptr i32 %v2_10008c88 to i32*
  store i32 %tmp2, i32* %v3_10008c88, align 4
  store i32 268471440, i32* @lr, align 4
  %v6_10008c8c = sext i8 %tmp4 to i32
  %v8_10008c8c = call i32 @function_1000a73c(i32 %v1_10008c4c, i32 %v2_10008c40, i32 19, i32 %tmp2, i32 %tmp3, i32 %v6_10008c8c, i32 %tmp7)
  store i32 268471452, i32* @lr, align 4
  %v3_10008c98 = call i32 @function_10008b88(i32 %v8_10008c8c, i32 0, i32 13)
  %v0_10008ca0.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10008c9c

dec_label_pc_10008c9c:                            ; preds = %dec_label_pc_10008c18, %dec_label_pc_10008c54
  %v0_10008ca0 = phi i32 [ %v3_10008c3c, %dec_label_pc_10008c18 ], [ %v0_10008ca0.pre, %dec_label_pc_10008c54 ]
  store i32 %v0_10008c1c, i32* %r0.global-to-local, align 4
  ret i32 %v0_10008ca0

; uselistorder directives
  uselistorder i32 %v2_10008c2c, { 1, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i32 13, { 5, 0, 1, 6, 7, 8, 9, 10, 2, 11, 12, 3, 13, 14, 4 }
  uselistorder label %dec_label_pc_10008c9c, { 1, 0 }
}

define i32 @function_10008cb4() local_unnamed_addr {
dec_label_pc_10008cb4:
  %r27.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10008cb4 = load i32, i32* @r4, align 4
  %v3_10008cb4 = icmp eq i32 %v0_10008cb4, 1
  %v0_10008cc4 = load i32, i32* @r3, align 4
  store i32 %v0_10008cc4, i32* %r27.global-to-local, align 4
  %v0_10008ccc = load i32, i32* @r5, align 4
  store i32 %v0_10008ccc, i32* @r31, align 4
  br i1 %v3_10008cb4, label %dec_label_pc_10008cf0, label %dec_label_pc_10008cd4

dec_label_pc_10008cd4:                            ; preds = %dec_label_pc_10008cb4
  %v3_10008cd4 = icmp eq i32 %v0_10008cb4, 2
  br i1 %v3_10008cd4, label %dec_label_pc_10008d10, label %dec_label_pc_10008cdc

dec_label_pc_10008cdc:                            ; preds = %dec_label_pc_10008cd4
  %v3_10008cdc = icmp eq i32 %v0_10008cb4, 0
  store i32 -2144570348, i32* @r30, align 4
  br i1 %v3_10008cdc, label %dec_label_pc_10008d18, label %dec_label_pc_10008cfc

dec_label_pc_10008cf0:                            ; preds = %dec_label_pc_10008cb4
  store i32 -2144570347, i32* @r30, align 4
  br label %dec_label_pc_10008d18

dec_label_pc_10008cfc:                            ; preds = %dec_label_pc_10008cdc
  %v0_10008cfc = call i32 @function_10008aa0()
  store i32 -1, i32* @r28, align 4
  %v2_10008d08 = inttoptr i32 %v0_10008cfc to i32*
  store i32 22, i32* %v2_10008d08, align 4
  br label %dec_label_pc_10008e00

dec_label_pc_10008d10:                            ; preds = %dec_label_pc_10008cd4
  store i32 -2144570346, i32* @r30, align 4
  br label %dec_label_pc_10008d18

dec_label_pc_10008d18:                            ; preds = %dec_label_pc_10008cdc, %dec_label_pc_10008cf0, %dec_label_pc_10008d10
  %v1_10008d18 = inttoptr i32 %v0_10008ccc to i32*
  %v2_10008d18 = load i32, i32* %v1_10008d18, align 4
  store i32 19, i32* @r5, align 4
  %v1_10008d20 = add i32 %v0_10008ccc, 4
  %v2_10008d20 = inttoptr i32 %v1_10008d20 to i32*
  %v3_10008d20 = load i32, i32* %v2_10008d20, align 4
  store i32 %v3_10008d20, i32* %r9.global-to-local, align 4
  %v1_10008d24 = add i32 %v0_10008ccc, 17
  store i32 %v1_10008d24, i32* @r4, align 4
  %v1_10008d28 = add i32 %v0_10008ccc, 8
  %v2_10008d28 = inttoptr i32 %v1_10008d28 to i32*
  %v3_10008d28 = load i32, i32* %v2_10008d28, align 4
  %v2_10008d2c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10008d2c, i32* @r3, align 4
  %v2_10008d34 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_10008d18, i32* %stack_var_-72, align 4
  store i32 268471652, i32* @lr, align 4
  %v0_10008d60 = call i32 @function_1000a6a0()
  %v0_10008d64 = load i32, i32* %r27.global-to-local, align 4
  %v0_10008d68 = load i32, i32* @r30, align 4
  store i32 268471672, i32* @lr, align 4
  %v3_10008d74 = call i32 @function_100081fc(i32 %v0_10008d64, i32 %v0_10008d68, i32 %v2_10008d34)
  store i32 %v3_10008d74, i32* @r28, align 4
  %v3_10008d78 = icmp eq i32 %v3_10008d74, 0
  br i1 %v3_10008d78, label %dec_label_pc_10008d80, label %dec_label_pc_10008e00

dec_label_pc_10008d80:                            ; preds = %dec_label_pc_10008d18
  %v0_10008d80 = load i32, i32* @r30, align 4
  %v3_10008d84 = icmp eq i32 %v0_10008d80, -2144570348
  br i1 %v3_10008d84, label %dec_label_pc_10008d8c, label %dec_label_pc_10008dfc

dec_label_pc_10008d8c:                            ; preds = %dec_label_pc_10008d80
  %v0_10008d8c = call i32 @function_10008aa0()
  store i32 %v0_10008d8c, i32* @r29, align 4
  %v0_10008d9c = load i32, i32* %r27.global-to-local, align 4
  %v1_10008da4 = inttoptr i32 %v0_10008d8c to i32*
  %v2_10008da4 = load i32, i32* %v1_10008da4, align 4
  store i32 %v2_10008da4, i32* @r30, align 4
  store i32 268471728, i32* @lr, align 4
  %v3_10008dac = call i32 @function_100081fc(i32 %v0_10008d9c, i32 1076655123, i32 %v2_10008d34)
  %v3_10008db0 = icmp eq i32 %v3_10008dac, 0
  br i1 %v3_10008db0, label %dec_label_pc_10008dc0, label %dec_label_pc_10008db8

dec_label_pc_10008db8:                            ; preds = %dec_label_pc_10008d8c
  %v0_10008db8 = load i32, i32* @r30, align 4
  %v1_10008db8 = load i32, i32* @r29, align 4
  %v2_10008db8 = inttoptr i32 %v1_10008db8 to i32*
  store i32 %v0_10008db8, i32* %v2_10008db8, align 4
  br label %dec_label_pc_10008e00

dec_label_pc_10008dc0:                            ; preds = %dec_label_pc_10008d8c
  %v0_10008dc0 = load i32, i32* @r31, align 4
  %v1_10008dc0 = add i32 %v0_10008dc0, 8
  %v2_10008dc0 = inttoptr i32 %v1_10008dc0 to i32*
  %v3_10008dc0 = load i32, i32* %v2_10008dc0, align 4
  %v1_10008dc8 = call i32 @__asm_rlwinm(i32 %v3_10008dc0, i32 0, i32 19, i32 20)
  %v1_10008dcc = call i32 @__asm_rlwinm(i32 %v3_10008d28, i32 0, i32 19, i32 20)
  store i32 %v1_10008dcc, i32* %r9.global-to-local, align 4
  %v4_10008dd0 = icmp eq i32 %v1_10008dc8, %v1_10008dcc
  br i1 %v4_10008dd0, label %dec_label_pc_10008dd8, label %dec_label_pc_10008dec

dec_label_pc_10008dd8:                            ; preds = %dec_label_pc_10008dc0
  %v1_10008dd8 = and i32 %v3_10008dc0, 768
  store i32 %v1_10008dd8, i32* %r9.global-to-local, align 4
  %v3_10008dd8 = icmp eq i32 %v1_10008dd8, 0
  br i1 %v3_10008dd8, label %dec_label_pc_10008dfc, label %dec_label_pc_10008de0

dec_label_pc_10008de0:                            ; preds = %dec_label_pc_10008dd8
  %v1_10008de0 = call i32 @__asm_rlwinm(i32 %v3_10008d28, i32 0, i32 22, i32 23)
  %v0_10008de4 = load i32, i32* %r9.global-to-local, align 4
  %v4_10008de4 = icmp eq i32 %v0_10008de4, %v1_10008de0
  br i1 %v4_10008de4, label %dec_label_pc_10008dfc, label %dec_label_pc_10008dec

dec_label_pc_10008dec:                            ; preds = %dec_label_pc_10008dc0, %dec_label_pc_10008de0
  store i32 -1, i32* @r28, align 4
  %v1_10008df4 = load i32, i32* @r29, align 4
  %v2_10008df4 = inttoptr i32 %v1_10008df4 to i32*
  store i32 22, i32* %v2_10008df4, align 4
  br label %dec_label_pc_10008e00

dec_label_pc_10008dfc:                            ; preds = %dec_label_pc_10008d80, %dec_label_pc_10008de0, %dec_label_pc_10008dd8
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10008e00

dec_label_pc_10008e00:                            ; preds = %dec_label_pc_10008d18, %dec_label_pc_10008dec, %dec_label_pc_10008db8, %dec_label_pc_10008cfc, %dec_label_pc_10008dfc
  %v0_10008e04 = load i32, i32* @r28, align 4
  ret i32 %v0_10008e04

; uselistorder directives
  uselistorder i32 %v0_10008ccc, { 1, 0, 3, 2, 4 }
  uselistorder i32 768, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_100081fc, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10008e00, { 4, 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10008dfc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10008dec, { 1, 0 }
  uselistorder label %dec_label_pc_10008d18, { 2, 1, 0 }
}

define i32 @function_10008e18(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008e18:
  %stack_var_-24 = alloca i32, align 4
  %v2_10008e20 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10008e20, i32* @r4, align 4
  store i32 268471852, i32* @lr, align 4
  %v1_10008e28 = bitcast i32* %stack_var_-24 to i8*
  %v2_10008e28 = call i32 @function_1000a770(i8* %v1_10008e28)
  %v3_10008e2c = icmp eq i32 %v2_10008e28, 0
  br i1 %v3_10008e2c, label %dec_label_pc_10008e3c, label %dec_label_pc_10008e38

dec_label_pc_10008e38:                            ; preds = %dec_label_pc_10008e18
  %v3_10008e38 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_10008e3c

dec_label_pc_10008e3c:                            ; preds = %dec_label_pc_10008e18, %dec_label_pc_10008e38
  %v0_10008e48 = phi i32 [ -1, %dec_label_pc_10008e18 ], [ %v3_10008e38, %dec_label_pc_10008e38 ]
  ret i32 %v0_10008e48

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10008e3c, { 1, 0 }
}

define i32 @function_10008e4c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008e4c:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10008e60 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268471920, i32* @lr, align 4
  %v2_10008e6c = call i32 @function_10009fa4(i32 5, i32 %v2_10008e60)
  ret i32 %v2_10008e6c

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10008e80(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008e80:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10008e94 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268471972, i32* @lr, align 4
  %v2_10008ea0 = call i32 @function_10009fa4(i32 2, i32 %v2_10008e94)
  ret i32 %v2_10008ea0

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10008eb4() local_unnamed_addr {
dec_label_pc_10008eb4:
  %stack_var_-24 = alloca i32, align 4
  %v0_10008ebc = load i32, i32* @r3, align 4
  store i32 %v0_10008ebc, i32* %stack_var_-24, align 4
  %v2_10008ec8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268472024, i32* @lr, align 4
  %v2_10008ed4 = call i32 @function_10009fa4(i32 3, i32 %v2_10008ec8)
  ret i32 %v2_10008ed4

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10008ee8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008ee8:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10008efc = ptrtoint i32* %stack_var_-24 to i32
  store i32 268472076, i32* @lr, align 4
  %v2_10008f08 = call i32 @function_10009fa4(i32 6, i32 %v2_10008efc)
  ret i32 %v2_10008f08

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10008f1c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10008f1c:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_10008f30 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268472136, i32* @lr, align 4
  %v2_10008f44 = call i32 @function_10009fa4(i32 15, i32 %v2_10008f30)
  ret i32 %v2_10008f44

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 15, { 0, 19, 10, 11, 1, 6, 2, 7, 8, 9, 12, 13, 14, 3, 15, 16, 4, 17, 18, 5 }
}

define i32 @function_10008f58(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008f58:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10008f6c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268472184, i32* @lr, align 4
  %v2_10008f74 = call i32 @function_10009fa4(i32 4, i32 %v2_10008f6c)
  ret i32 %v2_10008f74

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10008f88(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10008f88:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10008f9c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268472240, i32* @lr, align 4
  %v2_10008fac = call i32 @function_10009fa4(i32 10, i32 %v2_10008f9c)
  ret i32 %v2_10008fac

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10008fc0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10008fc0:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_10008fd4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268472304, i32* @lr, align 4
  %v2_10008fec = call i32 @function_10009fa4(i32 12, i32 %v2_10008fd4)
  ret i32 %v2_10008fec

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_10009000(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10009000:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10009014 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268472360, i32* @lr, align 4
  %v2_10009024 = call i32 @function_10009fa4(i32 9, i32 %v2_10009014)
  ret i32 %v2_10009024

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 9, { 0, 4, 5, 6, 16, 17, 18, 1, 7, 8, 9, 10, 11, 12, 13, 14, 19, 15, 20, 2, 34, 21, 22, 23, 24, 3, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36 }
}

define i32 @function_10009038(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10009038:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000904c = ptrtoint i32* %stack_var_-40 to i32
  store i32 268472424, i32* @lr, align 4
  %v2_10009064 = call i32 @function_10009fa4(i32 11, i32 %v2_1000904c)
  ret i32 %v2_10009064

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_10009078(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10009078:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000908c = ptrtoint i32* %stack_var_-40 to i32
  store i32 268472484, i32* @lr, align 4
  %v2_100090a0 = call i32 @function_10009fa4(i32 14, i32 %v2_1000908c)
  ret i32 %v2_100090a0

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_100090b4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100090b4:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_100090c8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268472536, i32* @lr, align 4
  %v2_100090d4 = call i32 @function_10009fa4(i32 1, i32 %v2_100090c8)
  ret i32 %v2_100090d4

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_10009fa4, { 2, 1, 0, 6, 4, 11, 7, 10, 9, 3, 5, 8 }
}

define i32 @function_100090e8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100090e8:
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %arg1.off = add i32 %arg1, -1
  %tmp4 = icmp ult i32 %arg1.off, 64
  br i1 %tmp4, label %dec_label_pc_10009118, label %dec_label_pc_10009104

dec_label_pc_10009104:                            ; preds = %dec_label_pc_100090e8
  %v0_10009104 = call i32 @function_10008aa0()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10009110 = inttoptr i32 %v0_10009104 to i32*
  store i32 22, i32* %v2_10009110, align 4
  %v0_10009124.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009120

dec_label_pc_10009118:                            ; preds = %dec_label_pc_100090e8
  %v0_10009118 = call i32 @function_10009268()
  store i32 %v0_10009118, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009120

dec_label_pc_10009120:                            ; preds = %dec_label_pc_10009104, %dec_label_pc_10009118
  %v0_10009124 = phi i32 [ %v0_10009124.pre, %dec_label_pc_10009104 ], [ %v0_10009118, %dec_label_pc_10009118 ]
  ret i32 %v0_10009124

; uselistorder directives
  uselistorder label %dec_label_pc_10009120, { 1, 0 }
}

define i32 @function_10009134(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009134:
  store i32 268472652, i32* @lr, align 4
  %v3_10009148 = call i32 @function_10008b88(i32 0, i32 128, i32 128)
  ret i32 0
}

define i32 @function_10009160(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009160:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_10009160 = icmp eq i32 %arg2, -1
  store i32 %arg1, i32* %r31.global-to-local, align 4
  br i1 %v3_10009160, label %dec_label_pc_1000918c, label %dec_label_pc_1000917c

dec_label_pc_1000917c:                            ; preds = %dec_label_pc_10009160
  %tmp20 = icmp slt i32 %arg1, 1
  br i1 %tmp20, label %dec_label_pc_1000918c, label %dec_label_pc_10009184

dec_label_pc_10009184:                            ; preds = %dec_label_pc_1000917c
  %tmp21 = icmp slt i32 %arg1, 65
  br i1 %tmp21, label %dec_label_pc_100091bc.lr.ph, label %dec_label_pc_1000918c

dec_label_pc_1000918c:                            ; preds = %dec_label_pc_10009184, %dec_label_pc_1000917c, %dec_label_pc_10009160
  %v0_1000918c = call i32 @function_10008aa0()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10009198 = inttoptr i32 %v0_1000918c to i32*
  store i32 22, i32* %v2_10009198, align 4
  %v0_1000922c.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009228

dec_label_pc_100091bc.lr.ph:                      ; preds = %dec_label_pc_10009184
  %v2_100091ac = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_100091ac, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-296, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_100091bc22 = add i32 %v2_100091ac, 128
  %v3_100091bc23 = inttoptr i32 %v2_100091bc22 to i32*
  store i32 0, i32* %v3_100091bc23, align 4
  %v0_100091c024 = load i32, i32* %r11.global-to-local, align 4
  %v1_100091c025 = add i32 %v0_100091c024, -1
  store i32 %v1_100091c025, i32* %r11.global-to-local, align 4
  %v1_100091c426 = mul i32 %v1_100091c025, 4
  %v1_100091c827 = load i32, i32* %r8.global-to-local, align 4
  %v2_100091c828 = add i32 %v1_100091c827, %v1_100091c426
  store i32 %v2_100091c828, i32* %r9.global-to-local, align 4
  %v0_100091cc29 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100091cc30 = add i32 %v0_100091cc29, -1
  store i32 %v1_100091cc30, i32* %ctr.global-to-local, align 4
  %v2_100091cc31 = icmp eq i32 %v1_100091cc30, 0
  br i1 %v2_100091cc31, label %dec_label_pc_100091d0, label %dec_label_pc_100091bc.dec_label_pc_100091bc_crit_edge

dec_label_pc_100091bc.dec_label_pc_100091bc_crit_edge: ; preds = %dec_label_pc_100091bc.lr.ph, %dec_label_pc_100091bc.dec_label_pc_100091bc_crit_edge
  %v2_100091c832 = phi i32 [ %v2_100091c8, %dec_label_pc_100091bc.dec_label_pc_100091bc_crit_edge ], [ %v2_100091c828, %dec_label_pc_100091bc.lr.ph ]
  %v0_100091bc.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_100091bc = add i32 %v2_100091c832, 4
  %v3_100091bc = inttoptr i32 %v2_100091bc to i32*
  store i32 %v0_100091bc.pre, i32* %v3_100091bc, align 4
  %v0_100091c0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100091c0 = add i32 %v0_100091c0, -1
  store i32 %v1_100091c0, i32* %r11.global-to-local, align 4
  %v1_100091c4 = mul i32 %v1_100091c0, 4
  %v1_100091c8 = load i32, i32* %r8.global-to-local, align 4
  %v2_100091c8 = add i32 %v1_100091c8, %v1_100091c4
  store i32 %v2_100091c8, i32* %r9.global-to-local, align 4
  %v0_100091cc = load i32, i32* %ctr.global-to-local, align 4
  %v1_100091cc = add i32 %v0_100091cc, -1
  store i32 %v1_100091cc, i32* %ctr.global-to-local, align 4
  %v2_100091cc = icmp eq i32 %v1_100091cc, 0
  br i1 %v2_100091cc, label %dec_label_pc_100091d0, label %dec_label_pc_100091bc.dec_label_pc_100091bc_crit_edge

dec_label_pc_100091d0:                            ; preds = %dec_label_pc_100091bc.dec_label_pc_100091bc_crit_edge, %dec_label_pc_100091bc.lr.ph
  %v0_100091d4.pre = load i32, i32* %r31.global-to-local, align 4
  %v2_100091d0 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v2_100091d0, i32* @r3, align 4
  store i32 %v0_100091d4.pre, i32* @r4, align 4
  %v0_100091d8 = call i32 @function_10009268()
  %v1_100091dc = icmp slt i32 %v0_100091d8, 0
  br i1 %v1_100091dc, label %dec_label_pc_10009224, label %dec_label_pc_100091e4

dec_label_pc_100091e4:                            ; preds = %dec_label_pc_100091d0
  %v0_100091e8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100091f0 = call i32 @function_10009240(i32 ptrtoint (i32* @global_var_1001b5a8.318 to i32), i32 %v0_100091e8)
  %v2_100091fc = ptrtoint i32* %stack_var_-156 to i32
  store i32 268472852, i32* @lr, align 4
  %v4_10009210 = call i32 @function_1000a830(i32 %v0_100091e8, i32* nonnull %stack_var_-296, i32 %v2_100091fc)
  %v1_10009214 = icmp slt i32 %v4_10009210, 0
  br i1 %v1_10009214, label %dec_label_pc_10009224, label %dec_label_pc_1000921c

dec_label_pc_1000921c:                            ; preds = %dec_label_pc_100091e4
  %v3_1000921c = load i32, i32* %stack_var_-156, align 4
  store i32 %v3_1000921c, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009228

dec_label_pc_10009224:                            ; preds = %dec_label_pc_100091e4, %dec_label_pc_100091d0
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009228

dec_label_pc_10009228:                            ; preds = %dec_label_pc_1000921c, %dec_label_pc_1000918c, %dec_label_pc_10009224
  %v0_1000922c = phi i32 [ %v3_1000921c, %dec_label_pc_1000921c ], [ %v0_1000922c.pre, %dec_label_pc_1000918c ], [ -1, %dec_label_pc_10009224 ]
  ret i32 %v0_1000922c

; uselistorder directives
  uselistorder i32 %v1_100091cc, { 1, 0 }
  uselistorder i32 %v2_100091c8, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009228, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100091bc.dec_label_pc_100091bc_crit_edge, { 1, 0 }
}

define i32 @function_10009240(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009240:
  %v1_10009240 = add i32 %arg2, -1
  %v1_10009244 = call i32 @__asm_rlwinm(i32 %v1_10009240, i32 29, i32 3, i32 29)
  %v1_10009248 = urem i32 %v1_10009240, 32
  %v2_1000924c = add i32 %v1_10009244, %arg1
  %v3_1000924c = inttoptr i32 %v2_1000924c to i32*
  %v4_1000924c = load i32, i32* %v3_1000924c, align 4
  %v3_10009254 = shl i32 1, %v1_10009248
  %v2_10009258 = and i32 %v4_1000924c, %v3_10009254
  %v2_1000925c = icmp ne i32 %v2_10009258, 0
  %v5_10009260 = zext i1 %v2_1000925c to i32
  ret i32 %v5_10009260
}

define i32 @function_10009268() local_unnamed_addr {
dec_label_pc_10009268:
  %r0.global-to-local = alloca i32, align 4
  %v0_10009268 = load i32, i32* @r4, align 4
  %v1_10009268 = add i32 %v0_10009268, -1
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10009270 = call i32 @__asm_rlwinm(i32 %v1_10009268, i32 29, i32 3, i32 29)
  %v1_10009274 = urem i32 %v1_10009268, 32
  %v1_10009278 = load i32, i32* @r3, align 4
  %v2_10009278 = add i32 %v1_10009278, %v1_10009270
  %v3_10009278 = inttoptr i32 %v2_10009278 to i32*
  %v4_10009278 = load i32, i32* %v3_10009278, align 4
  %v0_1000927c = load i32, i32* %r0.global-to-local, align 4
  %v3_1000927c = shl i32 %v0_1000927c, %v1_10009274
  store i32 %v3_1000927c, i32* %r0.global-to-local, align 4
  %v2_10009280 = or i32 %v3_1000927c, %v4_10009278
  store i32 %v2_10009280, i32* %v3_10009278, align 4
  ret i32 0
}

define i32 @function_10009290(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009290:
  %v1_10009290 = add i32 %arg2, -1
  %v1_10009298 = call i32 @__asm_rlwinm(i32 %v1_10009290, i32 29, i32 3, i32 29)
  %v1_1000929c = urem i32 %v1_10009290, 32
  %v2_100092a0 = add i32 %v1_10009298, %arg1
  %v3_100092a0 = inttoptr i32 %v2_100092a0 to i32*
  %v4_100092a0 = load i32, i32* %v3_100092a0, align 4
  %v3_100092a4 = shl i32 -2, %v1_1000929c
  %v4_100092a4 = sub nsw i32 32, %v1_1000929c
  %v5_100092a4 = lshr i32 -2, %v4_100092a4
  %v6_100092a4 = or i32 %v5_100092a4, %v3_100092a4
  %v2_100092a8 = and i32 %v6_100092a4, %v4_100092a0
  store i32 %v2_100092a8, i32* %v3_100092a0, align 4
  ret i32 0
}

define i32 @function_100092b8() local_unnamed_addr {
dec_label_pc_100092b8:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_100092b8 = load i32, i32* @r3, align 4
  %v3_100092b8 = icmp eq i32 %v0_100092b8, 0
  br i1 %v3_100092b8, label %dec_label_pc_100092d4.thread, label %dec_label_pc_100092d4

dec_label_pc_100092d4.thread:                     ; preds = %dec_label_pc_100092b8
  br label %dec_label_pc_100092e0

dec_label_pc_100092d4:                            ; preds = %dec_label_pc_100092b8
  %v3_100092d8 = icmp ugt i32 %v0_100092b8, -8
  br i1 %v3_100092d8, label %dec_label_pc_100093e8, label %dec_label_pc_100092e0

dec_label_pc_100092e0:                            ; preds = %dec_label_pc_100092d4.thread, %dec_label_pc_100092d4
  %v0_100092e416 = phi i32 [ 1, %dec_label_pc_100092d4.thread ], [ %v0_100092b8, %dec_label_pc_100092d4 ]
  %v1_100092e4 = add i32 %v0_100092e416, 4
  store i32 ptrtoint (i32* @global_var_1001b508.319 to i32), i32* @r29, align 4
  store i32 %v1_100092e4, i32* %stack_var_-40, align 4
  %v0_100092f4 = call i32 @function_10009c4c()
  %v2_100092fc = ptrtoint i32* %stack_var_-40 to i32
  %v3_10009304 = call i32 @function_100096b0(i32* inttoptr (i32 268547120 to i32*), i32 %v2_100092fc)
  store i32 %v3_10009304, i32* %r31.global-to-local, align 4
  %v0_10009310 = call i32 @function_10009c4c()
  %v3_10009314 = icmp eq i32 %v3_10009304, 0
  br i1 %v3_10009314, label %dec_label_pc_1000931c, label %dec_label_pc_100093cc.thread

dec_label_pc_100093cc.thread:                     ; preds = %dec_label_pc_100092e0
  br label %dec_label_pc_100093e0

dec_label_pc_1000931c:                            ; preds = %dec_label_pc_100092e0
  %v3_10009320 = load i32, i32* @global_var_1001b48c.322, align 4
  store i32 %v3_10009320, i32* %r31.global-to-local, align 4
  %v3_10009324 = load i32, i32* %stack_var_-40, align 4
  %v2_10009328 = icmp ult i32 %v3_10009324, %v3_10009320
  br i1 %v2_10009328, label %dec_label_pc_10009340, label %dec_label_pc_10009330

dec_label_pc_10009330:                            ; preds = %dec_label_pc_1000931c
  %v1_10009334 = sub i32 0, %v3_10009320
  %v2_10009330 = add i32 %v3_10009320, -1
  %v1_10009338 = add i32 %v2_10009330, %v3_10009324
  %v2_1000933c = and i32 %v1_10009338, %v1_10009334
  store i32 %v2_1000933c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009340

dec_label_pc_10009340:                            ; preds = %dec_label_pc_1000931c, %dec_label_pc_10009330
  %v0_1000934c = call i32 @function_10009c4c()
  %v0_10009350 = load i32, i32* %r31.global-to-local, align 4
  store i32 268473176, i32* @lr, align 4
  %v1_10009354 = call i32 @function_1000a46c(i32 %v0_10009350)
  %v3_10009358 = icmp eq i32 %v1_10009354, -1
  br i1 %v3_10009358, label %dec_label_pc_10009378, label %dec_label_pc_10009360

dec_label_pc_10009360:                            ; preds = %dec_label_pc_10009340
  %v1_10009360 = add i32 %v1_10009354, 3
  %v1_10009364 = call i32 @__asm_rlwinm(i32 %v1_10009360, i32 0, i32 0, i32 29)
  store i32 %v1_10009364, i32* @r30, align 4
  %v4_10009368 = icmp eq i32 %v1_10009364, %v1_10009354
  br i1 %v4_10009368, label %dec_label_pc_10009378, label %dec_label_pc_10009370

dec_label_pc_10009370:                            ; preds = %dec_label_pc_10009360
  %v2_10009370 = sub i32 %v1_10009364, %v1_10009354
  store i32 268473208, i32* @lr, align 4
  %v1_10009374 = call i32 @function_1000a46c(i32 %v2_10009370)
  br label %dec_label_pc_10009378

dec_label_pc_10009378:                            ; preds = %dec_label_pc_10009360, %dec_label_pc_10009340, %dec_label_pc_10009370
  %v0_10009380 = call i32 @function_10009c4c()
  %v0_10009384 = load i32, i32* @r30, align 4
  %v3_10009384 = icmp eq i32 %v0_10009384, -1
  br i1 %v3_10009384, label %dec_label_pc_100093e8, label %dec_label_pc_100093cc

dec_label_pc_100093cc:                            ; preds = %dec_label_pc_10009378
  store i32 ptrtoint (i32* @global_var_1001b508.319 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_1001b430 to i32), i32* @r29, align 4
  %v0_100093a0 = call i32 @function_10009c4c()
  %v0_100093a4 = load i32, i32* @r31, align 4
  %v0_100093a8 = load i32, i32* @r30, align 4
  %v0_100093ac = load i32, i32* @r29, align 4
  store i32 268473268, i32* @lr, align 4
  %v3_100093b0 = inttoptr i32 %v0_100093ac to i32*
  %v4_100093b0 = call i32 @function_10009834(i32* %v3_100093b0, i32 %v0_100093a8, i32 %v0_100093a4)
  %v0_100093b4 = load i32, i32* @r29, align 4
  %v2_100093bc = inttoptr i32 %v0_100093b4 to i32*
  %v3_100093bc = call i32 @function_100096b0(i32* %v2_100093bc, i32 %v2_100092fc)
  store i32 %v3_100093bc, i32* %r31.global-to-local, align 4
  %v0_100093c8 = call i32 @function_10009c4c()
  %v3_100093cc = icmp eq i32 %v3_100093bc, 0
  br i1 %v3_100093cc, label %dec_label_pc_100093e0.thread, label %dec_label_pc_100093e0

dec_label_pc_100093e0.thread:                     ; preds = %dec_label_pc_100093cc
  br label %dec_label_pc_100093e8

dec_label_pc_100093e0:                            ; preds = %dec_label_pc_100093cc, %dec_label_pc_100093cc.thread
  %v0_100093e0.pr6 = phi i32 [ %v3_10009304, %dec_label_pc_100093cc.thread ], [ %v3_100093bc, %dec_label_pc_100093cc ]
  %v3_100093d4 = load i32, i32* %stack_var_-40, align 4
  %v2_100093d8 = inttoptr i32 %v0_100093e0.pr6 to i32*
  store i32 %v3_100093d4, i32* %v2_100093d8, align 4
  %v0_100093dc = load i32, i32* %r31.global-to-local, align 4
  %v1_100093dc = add i32 %v0_100093dc, 4
  store i32 %v1_100093dc, i32* @r31, align 4
  %v3_100093e0 = icmp eq i32 %v1_100093dc, 0
  br i1 %v3_100093e0, label %dec_label_pc_100093e8, label %dec_label_pc_100093f8

dec_label_pc_100093e8:                            ; preds = %dec_label_pc_100093e0.thread, %dec_label_pc_100093e0, %dec_label_pc_10009378, %dec_label_pc_100092d4
  %v0_100093e8 = call i32 @function_10008aa0()
  %v2_100093f0 = inttoptr i32 %v0_100093e8 to i32*
  store i32 12, i32* %v2_100093f0, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_100093f8

dec_label_pc_100093f8:                            ; preds = %dec_label_pc_100093e0, %dec_label_pc_100093e8
  %v0_100093fc = phi i32 [ %v1_100093dc, %dec_label_pc_100093e0 ], [ 0, %dec_label_pc_100093e8 ]
  ret i32 %v0_100093fc

; uselistorder directives
  uselistorder i32 %v1_100093dc, { 1, 0, 2 }
  uselistorder i32 %v1_10009364, { 1, 0, 2 }
  uselistorder i32 %v1_10009354, { 1, 0, 2, 3 }
  uselistorder i32 %v3_10009320, { 1, 0, 2, 3 }
  uselistorder i32 %v3_10009304, { 1, 0, 2 }
  uselistorder i32 %v0_100092b8, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 0, 1, 3, 2 }
  uselistorder i32* %r31.global-to-local, { 4, 0, 2, 1, 3, 5 }
  uselistorder label %dec_label_pc_100093f8, { 1, 0 }
  uselistorder label %dec_label_pc_100093e8, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10009378, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009340, { 1, 0 }
  uselistorder label %dec_label_pc_100092e0, { 1, 0 }
}

define i32 @function_10009410(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009410:
  %v3_10009410 = icmp eq i32 %arg1, 0
  %v2_10009420 = mul i32 %arg2, %arg1
  store i32 %v2_10009420, i32* @r31, align 4
  br i1 %v3_10009410, label %dec_label_pc_1000944c, label %dec_label_pc_1000942c

dec_label_pc_1000942c:                            ; preds = %dec_label_pc_10009410
  %v2_1000942c = udiv i32 %v2_10009420, %arg1
  store i32 0, i32* @r30, align 4
  %v4_10009434 = icmp eq i32 %v2_1000942c, %arg2
  br i1 %v4_10009434, label %dec_label_pc_1000944c, label %dec_label_pc_1000943c

dec_label_pc_1000943c:                            ; preds = %dec_label_pc_1000942c
  %v0_1000943c = call i32 @function_10008aa0()
  %v2_10009444 = inttoptr i32 %v0_1000943c to i32*
  store i32 12, i32* %v2_10009444, align 4
  br label %dec_label_pc_10009468

dec_label_pc_1000944c:                            ; preds = %dec_label_pc_1000942c, %dec_label_pc_10009410
  store i32 %v2_10009420, i32* @r3, align 4
  store i32 268473428, i32* @lr, align 4
  %v0_10009450 = call i32 @function_100092b8()
  %v0_10009454 = load i32, i32* @r31, align 4
  store i32 %v0_10009450, i32* @r30, align 4
  %v3_10009458 = icmp eq i32 %v0_10009450, 0
  br i1 %v3_10009458, label %dec_label_pc_10009468, label %dec_label_pc_10009464

dec_label_pc_10009464:                            ; preds = %dec_label_pc_1000944c
  store i32 268473448, i32* @lr, align 4
  %v3_10009464 = call i32 @function_10008b88(i32 0, i32 %v0_10009454, i32 %v0_10009454)
  br label %dec_label_pc_10009468

dec_label_pc_10009468:                            ; preds = %dec_label_pc_1000944c, %dec_label_pc_1000943c, %dec_label_pc_10009464
  %v0_1000946c = load i32, i32* @r30, align 4
  ret i32 %v0_1000946c

; uselistorder directives
  uselistorder i32 %v0_10009454, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009468, { 2, 0, 1 }
}

define i32 @function_10009480() local_unnamed_addr {
dec_label_pc_10009480:
  %v0_10009480 = load i32, i32* @r3, align 4
  %v3_10009480 = icmp eq i32 %v0_10009480, 0
  br i1 %v3_10009480, label %dec_label_pc_1000956c, label %dec_label_pc_10009498

dec_label_pc_10009498:                            ; preds = %dec_label_pc_10009480
  %v1_1000949c = add i32 %v0_10009480, -4
  %v2_1000949c = inttoptr i32 %v1_1000949c to i32*
  %v3_1000949c = load i32, i32* %v2_1000949c, align 4
  store i32 %v3_1000949c, i32* @r28, align 4
  store i32 268566528, i32* @r26, align 4
  %v0_100094b0 = call i32 @function_10009c4c()
  %v0_100094b8 = load i32, i32* @r28, align 4
  store i32 268473540, i32* @lr, align 4
  %v4_100094c0 = call i32 @function_10009834(i32* nonnull @global_var_1001b430, i32 %v1_1000949c, i32 %v0_100094b8)
  %v3_100094c8 = load i32, i32* @global_var_1001b48c.322, align 4
  store i32 %v4_100094c0, i32* @r29, align 4
  %v1_100094d0 = inttoptr i32 %v4_100094c0 to i32*
  %v2_100094d0 = load i32, i32* %v1_100094d0, align 4
  store i32 %v2_100094d0, i32* @r27, align 4
  %v1_100094d4 = mul i32 %v3_100094c8, 8
  %v2_100094d8 = icmp ult i32 %v2_100094d0, %v1_100094d4
  br i1 %v2_100094d8, label %dec_label_pc_1000950c, label %dec_label_pc_100094e0

dec_label_pc_100094e0:                            ; preds = %dec_label_pc_10009498
  store i32 ptrtoint (i32* @global_var_1001b628.323 to i32), i32* @r28, align 4
  %v0_100094f0 = call i32 @function_10009c4c()
  store i32 268473596, i32* @lr, align 4
  %v1_100094f8 = call i32 @function_1000a46c(i32 0)
  %v0_100094fc = load i32, i32* @r31, align 4
  %v4_100094fc = icmp eq i32 %v0_100094fc, %v1_100094f8
  br i1 %v4_100094fc, label %dec_label_pc_10009514, label %dec_label_pc_10009504

dec_label_pc_10009504:                            ; preds = %dec_label_pc_100094e0
  %v0_10009508 = call i32 @function_10009c4c()
  br label %dec_label_pc_1000950c

dec_label_pc_1000950c:                            ; preds = %dec_label_pc_10009498, %dec_label_pc_10009504
  br label %dec_label_pc_10009568

dec_label_pc_10009514:                            ; preds = %dec_label_pc_100094e0
  %v0_10009514 = load i32, i32* @r29, align 4
  %v1_10009514 = add i32 %v0_10009514, 4
  %v2_10009514 = inttoptr i32 %v1_10009514 to i32*
  %v3_10009514 = load i32, i32* %v2_10009514, align 4
  %v3_10009518 = icmp eq i32 %v3_10009514, 0
  br i1 %v3_10009518, label %dec_label_pc_10009528, label %dec_label_pc_10009520

dec_label_pc_10009520:                            ; preds = %dec_label_pc_10009514
  %v1_10009520 = add i32 %v0_10009514, 8
  %v2_10009520 = inttoptr i32 %v1_10009520 to i32*
  %v3_10009520 = load i32, i32* %v2_10009520, align 4
  %v2_10009524 = add i32 %v3_10009514, 8
  %v3_10009524 = inttoptr i32 %v2_10009524 to i32*
  store i32 %v3_10009520, i32* %v3_10009524, align 4
  %v0_10009528.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10009528

dec_label_pc_10009528:                            ; preds = %dec_label_pc_10009514, %dec_label_pc_10009520
  %v0_10009528 = phi i32 [ %v0_10009514, %dec_label_pc_10009514 ], [ %v0_10009528.pre, %dec_label_pc_10009520 ]
  %v1_10009528 = add i32 %v0_10009528, 8
  %v2_10009528 = inttoptr i32 %v1_10009528 to i32*
  %v3_10009528 = load i32, i32* %v2_10009528, align 4
  %v1_1000952c = add i32 %v0_10009528, 4
  %v2_1000952c = inttoptr i32 %v1_1000952c to i32*
  %v3_1000952c = load i32, i32* %v2_1000952c, align 4
  %v3_10009530 = icmp eq i32 %v3_10009528, 0
  br i1 %v3_10009530, label %dec_label_pc_10009540, label %dec_label_pc_10009538

dec_label_pc_10009538:                            ; preds = %dec_label_pc_10009528
  %v2_10009538 = add i32 %v3_10009528, 4
  %v3_10009538 = inttoptr i32 %v2_10009538 to i32*
  store i32 %v3_1000952c, i32* %v3_10009538, align 4
  br label %dec_label_pc_10009544

dec_label_pc_10009540:                            ; preds = %dec_label_pc_10009528
  store i32 %v3_1000952c, i32* @global_var_1001b430, align 4
  br label %dec_label_pc_10009544

dec_label_pc_10009544:                            ; preds = %dec_label_pc_10009538, %dec_label_pc_10009540
  %v0_1000954c = call i32 @function_10009c4c()
  %v0_10009550 = load i32, i32* @r27, align 4
  %v1_10009550 = load i32, i32* @r29, align 4
  %v0_10009558 = load i32, i32* @r31, align 4
  %v2_10009550 = sub i32 12, %v0_10009550
  %v1_10009554 = add i32 %v2_10009550, %v1_10009550
  %v2_10009558 = sub i32 %v1_10009554, %v0_10009558
  store i32 268473696, i32* @lr, align 4
  %v1_1000955c = call i32 @function_1000a46c(i32 %v2_10009558)
  br label %dec_label_pc_10009568

dec_label_pc_10009568:                            ; preds = %dec_label_pc_1000950c, %dec_label_pc_10009544
  %v0_10009568 = call i32 @function_10009c4c()
  br label %dec_label_pc_1000956c

dec_label_pc_1000956c:                            ; preds = %dec_label_pc_10009480, %dec_label_pc_10009568
  %.0 = phi i32 [ undef, %dec_label_pc_10009480 ], [ %v0_10009568, %dec_label_pc_10009568 ]
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v0_10009528, { 1, 0 }
  uselistorder i32 (i32)* @function_1000a46c, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_1000956c, { 1, 0 }
  uselistorder label %dec_label_pc_10009568, { 1, 0 }
  uselistorder label %dec_label_pc_10009544, { 1, 0 }
  uselistorder label %dec_label_pc_10009528, { 1, 0 }
  uselistorder label %dec_label_pc_1000950c, { 1, 0 }
}

define i32 @function_10009580(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009580:
  %r27.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v3_10009580 = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r28, align 4
  br i1 %v3_10009580, label %dec_label_pc_1000959c, label %dec_label_pc_100095a8

dec_label_pc_1000959c:                            ; preds = %dec_label_pc_10009580
  store i32 ptrtoint ([3 x i8]* @global_var_100095a0.327 to i32), i32* @lr, align 4
  %v0_1000959c = call i32 @function_10009480()
  br label %dec_label_pc_100095b4

dec_label_pc_100095a8:                            ; preds = %dec_label_pc_10009580
  %v3_100095a8 = icmp eq i32 %arg1, 0
  br i1 %v3_100095a8, label %dec_label_pc_100095b4, label %dec_label_pc_100095c0

dec_label_pc_100095b4:                            ; preds = %dec_label_pc_100095a8, %dec_label_pc_1000959c
  %storemerge = phi i32 [ 0, %dec_label_pc_1000959c ], [ %arg2, %dec_label_pc_100095a8 ]
  store i32 %storemerge, i32* @r3, align 4
  store i32 268473784, i32* @lr, align 4
  %v0_100095b4 = call i32 @function_100092b8()
  store i32 %v0_100095b4, i32* @r28, align 4
  br label %dec_label_pc_10009698

dec_label_pc_100095c0:                            ; preds = %dec_label_pc_100095a8
  %v1_100095c0 = add i32 %arg2, 7
  %v1_100095c4 = add i32 %arg1, -4
  store i32 %v1_100095c4, i32* %r27.global-to-local, align 4
  %v1_100095c8 = call i32 @__asm_rlwinm(i32 %v1_100095c0, i32 0, i32 0, i32 29)
  store i32 %v1_100095c8, i32* @r31, align 4
  %v2_100095cc = inttoptr i32 %v1_100095c4 to i32*
  %v3_100095cc = load i32, i32* %v2_100095cc, align 4
  store i32 %v3_100095cc, i32* @r30, align 4
  %v2_100095d0 = icmp ugt i32 %v1_100095c8, 11
  br i1 %v2_100095d0, label %dec_label_pc_100095dc, label %dec_label_pc_100095d8

dec_label_pc_100095d8:                            ; preds = %dec_label_pc_100095c0
  store i32 12, i32* @r31, align 4
  br label %dec_label_pc_100095dc

dec_label_pc_100095dc:                            ; preds = %dec_label_pc_100095c0, %dec_label_pc_100095d8
  %v0_1000965c = phi i32 [ %v1_100095c8, %dec_label_pc_100095c0 ], [ 12, %dec_label_pc_100095d8 ]
  %v3_100095dc = icmp ugt i32 %v0_1000965c, %v3_100095cc
  br i1 %v3_100095dc, label %dec_label_pc_100095e4, label %dec_label_pc_1000965c

dec_label_pc_100095e4:                            ; preds = %dec_label_pc_100095dc
  store i32 ptrtoint (i32* @global_var_1001b508.319 to i32), i32* @r29, align 4
  %v0_100095f0 = call i32 @function_10009c4c()
  %v0_100095f8 = load i32, i32* %r27.global-to-local, align 4
  %v1_100095f8 = load i32, i32* @r30, align 4
  %v2_100095f8 = add i32 %v1_100095f8, %v0_100095f8
  %v1_100095fc = load i32, i32* @r31, align 4
  %v2_100095fc = sub i32 %v1_100095fc, %v1_100095f8
  %v4_10009604 = call i32 @function_10009750(i32* nonnull @global_var_1001b430, i32 %v2_100095f8, i32 %v2_100095fc)
  store i32 %v4_10009604, i32* %r27.global-to-local, align 4
  %v0_10009610 = call i32 @function_10009c4c()
  %v3_10009614 = icmp eq i32 %v4_10009604, 0
  br i1 %v3_10009614, label %dec_label_pc_10009628, label %dec_label_pc_1000961c

dec_label_pc_1000961c:                            ; preds = %dec_label_pc_100095e4
  %v0_1000961c = load i32, i32* @r30, align 4
  %v2_1000961c = add i32 %v0_1000961c, %v4_10009604
  %v1_10009620 = load i32, i32* @r28, align 4
  %v2_10009620 = add i32 %v1_10009620, -4
  %v3_10009620 = inttoptr i32 %v2_10009620 to i32*
  store i32 %v2_1000961c, i32* %v3_10009620, align 4
  br label %dec_label_pc_10009698

dec_label_pc_10009628:                            ; preds = %dec_label_pc_100095e4
  %v0_10009628 = load i32, i32* @r31, align 4
  %v1_10009628 = add i32 %v0_10009628, -4
  store i32 %v1_10009628, i32* @r3, align 4
  store i32 268473904, i32* @lr, align 4
  %v0_1000962c = call i32 @function_100092b8()
  store i32 %v0_1000962c, i32* @r3, align 4
  store i32 %v0_1000962c, i32* @r31, align 4
  %v3_10009630 = icmp eq i32 %v0_1000962c, 0
  br i1 %v3_10009630, label %dec_label_pc_10009638, label %dec_label_pc_10009640

dec_label_pc_10009638:                            ; preds = %dec_label_pc_10009628
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10009698

dec_label_pc_10009640:                            ; preds = %dec_label_pc_10009628
  %v0_10009640 = load i32, i32* @r28, align 4
  store i32 %v0_10009640, i32* @r4, align 4
  %v0_10009644 = load i32, i32* @r30, align 4
  %v1_10009644 = add i32 %v0_10009644, -4
  store i32 %v1_10009644, i32* @r5, align 4
  store i32 268473932, i32* @lr, align 4
  %v0_10009648 = call i32 @function_1000a6a0()
  %v0_1000964c = load i32, i32* @r28, align 4
  store i32 %v0_1000964c, i32* @r3, align 4
  store i32 268473940, i32* @lr, align 4
  %v0_10009650 = call i32 @function_10009480()
  %v0_10009654 = load i32, i32* @r31, align 4
  store i32 %v0_10009654, i32* @r28, align 4
  br label %dec_label_pc_10009698

dec_label_pc_1000965c:                            ; preds = %dec_label_pc_100095dc
  %v1_1000965c = add i32 %v0_1000965c, 28
  %v3_10009660 = icmp ugt i32 %v1_1000965c, %v3_100095cc
  br i1 %v3_10009660, label %dec_label_pc_10009698, label %dec_label_pc_10009668

dec_label_pc_10009668:                            ; preds = %dec_label_pc_1000965c
  store i32 ptrtoint (i32* @global_var_1001b508.319 to i32), i32* @r29, align 4
  %v0_10009674 = call i32 @function_10009c4c()
  %v0_1000967c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000967c = load i32, i32* @r31, align 4
  %v2_1000967c = add i32 %v1_1000967c, %v0_1000967c
  %v1_10009680 = load i32, i32* @r30, align 4
  %v2_10009680 = sub i32 %v1_10009680, %v1_1000967c
  store i32 268473996, i32* @lr, align 4
  %v4_10009688 = call i32 @function_10009834(i32* nonnull @global_var_1001b430, i32 %v2_1000967c, i32 %v2_10009680)
  %v0_10009690 = call i32 @function_10009c4c()
  %v0_10009694 = load i32, i32* @r31, align 4
  %v1_10009694 = load i32, i32* @r28, align 4
  %v2_10009694 = add i32 %v1_10009694, -4
  %v3_10009694 = inttoptr i32 %v2_10009694 to i32*
  store i32 %v0_10009694, i32* %v3_10009694, align 4
  br label %dec_label_pc_10009698

dec_label_pc_10009698:                            ; preds = %dec_label_pc_1000965c, %dec_label_pc_10009640, %dec_label_pc_10009638, %dec_label_pc_1000961c, %dec_label_pc_100095b4, %dec_label_pc_10009668
  %v0_1000969c = load i32, i32* @r28, align 4
  ret i32 %v0_1000969c

; uselistorder directives
  uselistorder i32 %v1_1000967c, { 1, 0 }
  uselistorder i32 %v4_10009604, { 1, 0, 2 }
  uselistorder i32 %v1_100095f8, { 1, 0 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 (i32*, i32, i32)* @function_10009834, { 0, 2, 1 }
  uselistorder i32* @global_var_1001b430, { 0, 1, 3, 2, 4 }
  uselistorder i32 ()* @function_100092b8, { 2, 1, 0, 4, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 3 }
  uselistorder i32 ()* @function_10009480, { 4, 3, 7, 6, 5, 11, 10, 9, 8, 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10009698, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_100095dc, { 1, 0 }
}

define i32 @function_100096b0(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100096b0:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v1_100096b0 = inttoptr i32 %arg2 to i32*
  %v2_100096b0 = load i32, i32* %v1_100096b0, align 4
  %v1_100096b4 = add i32 %v2_100096b0, 3
  store i32 %v1_100096b4, i32* %r9.global-to-local, align 4
  %v1_100096b8 = call i32 @__asm_rlwinm(i32 %v1_100096b4, i32 0, i32 0, i32 29)
  %v2_100096bc = icmp ugt i32 %v1_100096b8, 11
  br i1 %v2_100096bc, label %dec_label_pc_10009740.preheader, label %dec_label_pc_100096c4

dec_label_pc_100096c4:                            ; preds = %dec_label_pc_100096b0
  br label %dec_label_pc_10009740.preheader

dec_label_pc_10009740.preheader:                  ; preds = %dec_label_pc_100096b0, %dec_label_pc_100096c4
  %storemerge20 = phi i32 [ 12, %dec_label_pc_100096c4 ], [ %v1_100096b8, %dec_label_pc_100096b0 ]
  %v0_10009724 = phi i32 [ 12, %dec_label_pc_100096c4 ], [ %v1_100096b8, %dec_label_pc_100096b0 ]
  store i32 %storemerge20, i32* %r11.global-to-local, align 4
  %storemerge2 = load i32, i32* %arg1, align 4
  store i32 %storemerge2, i32* %r9.global-to-local, align 4
  %v3_100097405 = icmp eq i32 %storemerge2, 0
  br i1 %v3_100097405, label %dec_label_pc_10009748, label %dec_label_pc_100096d0

dec_label_pc_100096d0:                            ; preds = %dec_label_pc_10009740.preheader, %dec_label_pc_1000973c
  %v0_1000973c = phi i32 [ %storemerge, %dec_label_pc_1000973c ], [ %storemerge2, %dec_label_pc_10009740.preheader ]
  %v1_100096d0 = inttoptr i32 %v0_1000973c to i32*
  %v2_100096d0 = load i32, i32* %v1_100096d0, align 4
  store i32 %v2_100096d0, i32* %r10.global-to-local, align 4
  %v2_100096d4 = icmp ult i32 %v2_100096d0, %v0_10009724
  br i1 %v2_100096d4, label %dec_label_pc_1000973c, label %dec_label_pc_100096dc

dec_label_pc_100096dc:                            ; preds = %dec_label_pc_100096d0
  %v1_100096dc = add i32 %v0_10009724, 44
  %v2_100096e0 = icmp ult i32 %v2_100096d0, %v1_100096dc
  br i1 %v2_100096e0, label %dec_label_pc_100096e8, label %dec_label_pc_10009724

dec_label_pc_100096e8:                            ; preds = %dec_label_pc_100096dc
  %v1_100096e8 = add i32 %v0_1000973c, 4
  %v2_100096e8 = inttoptr i32 %v1_100096e8 to i32*
  %v3_100096e8 = load i32, i32* %v2_100096e8, align 4
  store i32 %v3_100096e8, i32* %r11.global-to-local, align 4
  %v3_100096ec = icmp eq i32 %v3_100096e8, 0
  br i1 %v3_100096ec, label %dec_label_pc_100096fc, label %dec_label_pc_100096f4

dec_label_pc_100096f4:                            ; preds = %dec_label_pc_100096e8
  %v1_100096f4 = add i32 %v0_1000973c, 8
  %v2_100096f4 = inttoptr i32 %v1_100096f4 to i32*
  %v3_100096f4 = load i32, i32* %v2_100096f4, align 4
  %v2_100096f8 = add i32 %v3_100096e8, 8
  %v3_100096f8 = inttoptr i32 %v2_100096f8 to i32*
  store i32 %v3_100096f4, i32* %v3_100096f8, align 4
  %v0_100096fc.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10009718.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100096fc

dec_label_pc_100096fc:                            ; preds = %dec_label_pc_100096e8, %dec_label_pc_100096f4
  %v0_10009718 = phi i32 [ %v2_100096d0, %dec_label_pc_100096e8 ], [ %v0_10009718.pre, %dec_label_pc_100096f4 ]
  %v0_100096fc = phi i32 [ %v0_1000973c, %dec_label_pc_100096e8 ], [ %v0_100096fc.pre, %dec_label_pc_100096f4 ]
  %v1_100096fc = add i32 %v0_100096fc, 8
  %v2_100096fc = inttoptr i32 %v1_100096fc to i32*
  %v3_100096fc = load i32, i32* %v2_100096fc, align 4
  %v1_10009700 = add i32 %v0_100096fc, 4
  %v2_10009700 = inttoptr i32 %v1_10009700 to i32*
  %v3_10009700 = load i32, i32* %v2_10009700, align 4
  %v3_10009704 = icmp eq i32 %v3_100096fc, 0
  store i32 %v0_10009718, i32* %r11.global-to-local, align 4
  br i1 %v3_10009704, label %dec_label_pc_10009718, label %dec_label_pc_1000970c

dec_label_pc_1000970c:                            ; preds = %dec_label_pc_100096fc
  %v2_10009710 = add i32 %v3_100096fc, 4
  %v3_10009710 = inttoptr i32 %v2_10009710 to i32*
  store i32 %v3_10009700, i32* %v3_10009710, align 4
  br label %dec_label_pc_1000972c

dec_label_pc_10009718:                            ; preds = %dec_label_pc_100096fc
  store i32 %v3_10009700, i32* %arg1, align 4
  br label %dec_label_pc_1000972c

dec_label_pc_10009724:                            ; preds = %dec_label_pc_100096dc
  %v2_10009724 = sub i32 %v2_100096d0, %v0_10009724
  store i32 %v2_10009724, i32* %v1_100096d0, align 4
  br label %dec_label_pc_1000972c

dec_label_pc_1000972c:                            ; preds = %dec_label_pc_10009718, %dec_label_pc_1000970c, %dec_label_pc_10009724
  %v0_1000972c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000972c = load i32, i32* %r9.global-to-local, align 4
  %v2_1000972c = sub i32 %v1_1000972c, %v0_1000972c
  store i32 %v2_1000972c, i32* %r9.global-to-local, align 4
  %v0_10009730 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10009730, i32* %v1_100096b0, align 4
  %v0_10009734 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009734 = add i32 %v0_10009734, 12
  ret i32 %v1_10009734

dec_label_pc_1000973c:                            ; preds = %dec_label_pc_100096d0
  %v1_1000973c = add i32 %v0_1000973c, 4
  %storemerge.in = inttoptr i32 %v1_1000973c to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v3_10009740 = icmp eq i32 %storemerge, 0
  br i1 %v3_10009740, label %dec_label_pc_10009740.dec_label_pc_10009748_crit_edge, label %dec_label_pc_100096d0

dec_label_pc_10009740.dec_label_pc_10009748_crit_edge: ; preds = %dec_label_pc_1000973c
  br label %dec_label_pc_10009748

dec_label_pc_10009748:                            ; preds = %dec_label_pc_10009740.dec_label_pc_10009748_crit_edge, %dec_label_pc_10009740.preheader
  ret i32 0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_100096fc, { 1, 0 }
  uselistorder i32 %v2_100096d0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_1000973c, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_10009724, { 1, 2, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 4, 5, 2, 1, 3, 6 }
  uselistorder i32* %r11.global-to-local, { 3, 1, 2, 0 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2 }
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000972c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100096fc, { 1, 0 }
  uselistorder label %dec_label_pc_100096d0, { 1, 0 }
  uselistorder label %dec_label_pc_10009740.preheader, { 1, 0 }
}

define i32 @function_10009750(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009750:
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_10009750 = load i32, i32* %arg1, align 4
  store i32 %v2_10009750, i32* %r11.global-to-local, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v1_10009758 = add i32 %arg3, 3
  %v3_100097dc3 = icmp eq i32 %v2_10009750, 0
  br i1 %v3_100097dc3, label %dec_label_pc_100097e4, label %dec_label_pc_10009760

dec_label_pc_10009760:                            ; preds = %dec_label_pc_10009750, %dec_label_pc_100097d8
  %v0_100097d8 = phi i32 [ %v3_100097d8, %dec_label_pc_100097d8 ], [ %v2_10009750, %dec_label_pc_10009750 ]
  %v1_10009760 = inttoptr i32 %v0_100097d8 to i32*
  %v2_10009760 = load i32, i32* %v1_10009760, align 4
  %v2_10009764 = sub i32 %v0_100097d8, %v2_10009760
  %v1_10009768 = add i32 %v2_10009764, 12
  %v3_1000976c = icmp ugt i32 %v1_10009768, %arg2
  br i1 %v3_1000976c, label %dec_label_pc_100097d8, label %dec_label_pc_10009774

dec_label_pc_10009774:                            ; preds = %dec_label_pc_10009760
  %v4_1000976c = icmp eq i32 %v1_10009768, %arg2
  br i1 %v4_1000976c, label %dec_label_pc_1000977c, label %dec_label_pc_100097e4

dec_label_pc_1000977c:                            ; preds = %dec_label_pc_10009774
  %v1_1000977c = call i32 @__asm_rlwinm(i32 %v1_10009758, i32 0, i32 0, i32 29)
  %v2_10009780 = icmp ult i32 %v2_10009760, %v1_1000977c
  br i1 %v2_10009780, label %dec_label_pc_100097e4, label %dec_label_pc_10009788

dec_label_pc_10009788:                            ; preds = %dec_label_pc_1000977c
  %v1_10009788 = add i32 %v1_1000977c, 44
  %v2_1000978c = icmp ult i32 %v2_10009760, %v1_10009788
  br i1 %v2_1000978c, label %dec_label_pc_10009794, label %dec_label_pc_100097c8

dec_label_pc_10009794:                            ; preds = %dec_label_pc_10009788
  %v0_10009794 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009794 = add i32 %v0_10009794, 4
  %v2_10009794 = inttoptr i32 %v1_10009794 to i32*
  %v3_10009794 = load i32, i32* %v2_10009794, align 4
  %v3_10009798 = icmp eq i32 %v3_10009794, 0
  br i1 %v3_10009798, label %dec_label_pc_100097a8, label %dec_label_pc_100097a0

dec_label_pc_100097a0:                            ; preds = %dec_label_pc_10009794
  %v1_100097a0 = add i32 %v0_10009794, 8
  %v2_100097a0 = inttoptr i32 %v1_100097a0 to i32*
  %v3_100097a0 = load i32, i32* %v2_100097a0, align 4
  %v2_100097a4 = add i32 %v3_10009794, 8
  %v3_100097a4 = inttoptr i32 %v2_100097a4 to i32*
  store i32 %v3_100097a0, i32* %v3_100097a4, align 4
  %v0_100097a8.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100097a8

dec_label_pc_100097a8:                            ; preds = %dec_label_pc_10009794, %dec_label_pc_100097a0
  %v0_100097a8 = phi i32 [ %v0_10009794, %dec_label_pc_10009794 ], [ %v0_100097a8.pre, %dec_label_pc_100097a0 ]
  %v1_100097a8 = add i32 %v0_100097a8, 8
  %v2_100097a8 = inttoptr i32 %v1_100097a8 to i32*
  %v3_100097a8 = load i32, i32* %v2_100097a8, align 4
  %v1_100097ac = add i32 %v0_100097a8, 4
  %v2_100097ac = inttoptr i32 %v1_100097ac to i32*
  %v3_100097ac = load i32, i32* %v2_100097ac, align 4
  %v3_100097b0 = icmp eq i32 %v3_100097a8, 0
  br i1 %v3_100097b0, label %dec_label_pc_100097c0, label %dec_label_pc_100097b8

dec_label_pc_100097b8:                            ; preds = %dec_label_pc_100097a8
  %v2_100097b8 = add i32 %v3_100097a8, 4
  %v3_100097b8 = inttoptr i32 %v2_100097b8 to i32*
  store i32 %v3_100097ac, i32* %v3_100097b8, align 4
  ret i32 %v2_10009760

dec_label_pc_100097c0:                            ; preds = %dec_label_pc_100097a8
  %v1_100097c0 = load i32, i32* %r8.global-to-local, align 4
  %v2_100097c0 = inttoptr i32 %v1_100097c0 to i32*
  store i32 %v3_100097ac, i32* %v2_100097c0, align 4
  ret i32 %v2_10009760

dec_label_pc_100097c8:                            ; preds = %dec_label_pc_10009788
  %v2_100097c8 = sub i32 %v2_10009760, %v1_1000977c
  %v1_100097d0 = load i32, i32* %r11.global-to-local, align 4
  %v2_100097d0 = inttoptr i32 %v1_100097d0 to i32*
  store i32 %v2_100097c8, i32* %v2_100097d0, align 4
  ret i32 %v1_1000977c

dec_label_pc_100097d8:                            ; preds = %dec_label_pc_10009760
  %v1_100097d8 = add i32 %v0_100097d8, 4
  %v2_100097d8 = inttoptr i32 %v1_100097d8 to i32*
  %v3_100097d8 = load i32, i32* %v2_100097d8, align 4
  store i32 %v3_100097d8, i32* %r11.global-to-local, align 4
  %v3_100097dc = icmp eq i32 %v3_100097d8, 0
  br i1 %v3_100097dc, label %dec_label_pc_100097dc.dec_label_pc_100097e4.loopexit_crit_edge, label %dec_label_pc_10009760

dec_label_pc_100097dc.dec_label_pc_100097e4.loopexit_crit_edge: ; preds = %dec_label_pc_100097d8
  br label %dec_label_pc_100097e4

dec_label_pc_100097e4:                            ; preds = %dec_label_pc_10009750, %dec_label_pc_100097dc.dec_label_pc_100097e4.loopexit_crit_edge, %dec_label_pc_10009774, %dec_label_pc_1000977c
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_100097d8, { 1, 2, 0 }
  uselistorder i32 %v0_100097a8, { 1, 0 }
  uselistorder i32 %v1_1000977c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10009760, { 2, 1, 0, 4, 3, 5 }
  uselistorder i32 %v0_100097d8, { 0, 2, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_100097e4, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_100097a8, { 1, 0 }
  uselistorder label %dec_label_pc_10009760, { 1, 0 }
}

define i32 @function_100097ec(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100097ec:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_100097ec = icmp eq i32 %arg3, 0
  %v2_100097f0 = add i32 %arg2, 4
  %v3_100097f0 = inttoptr i32 %v2_100097f0 to i32*
  store i32 %arg4, i32* %v3_100097f0, align 4
  %v2_100097f4 = add i32 %arg2, 8
  %v3_100097f4 = inttoptr i32 %v2_100097f4 to i32*
  store i32 %arg3, i32* %v3_100097f4, align 4
  br i1 %v3_100097ec, label %dec_label_pc_10009804, label %dec_label_pc_100097fc

dec_label_pc_100097fc:                            ; preds = %dec_label_pc_100097ec
  %v2_100097fc = add i32 %arg3, 4
  %v3_100097fc = inttoptr i32 %v2_100097fc to i32*
  store i32 %arg2, i32* %v3_100097fc, align 4
  br label %dec_label_pc_10009808

dec_label_pc_10009804:                            ; preds = %dec_label_pc_100097ec
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_10009808

dec_label_pc_10009808:                            ; preds = %dec_label_pc_100097fc, %dec_label_pc_10009804
  %v3_10009808 = icmp eq i32 %arg4, 0
  %v0_1000980c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10009808, i32 %v0_1000980c)
  %v2_10009810 = add i32 %arg4, 8
  %v3_10009810 = inttoptr i32 %v2_10009810 to i32*
  store i32 %arg2, i32* %v3_10009810, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder i32 %arg2, { 4, 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10009808, { 1, 0 }
}

define i32 @function_10009818(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10009818:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_10009818 = icmp eq i32 %arg3, 0
  br i1 %v3_10009818, label %dec_label_pc_10009828, label %dec_label_pc_10009820

dec_label_pc_10009820:                            ; preds = %dec_label_pc_10009818
  %v2_10009820 = add i32 %arg3, 4
  %v3_10009820 = inttoptr i32 %v2_10009820 to i32*
  store i32 %arg2, i32* %v3_10009820, align 4
  br label %dec_label_pc_1000982c

dec_label_pc_10009828:                            ; preds = %dec_label_pc_10009818
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1000982c

dec_label_pc_1000982c:                            ; preds = %dec_label_pc_10009820, %dec_label_pc_10009828
  %v2_1000982c = add i32 %arg2, 8
  %v3_1000982c = inttoptr i32 %v2_1000982c to i32*
  store i32 %arg3, i32* %v3_1000982c, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000982c, { 1, 0 }
}

define i32 @function_10009834(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009834:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_1000984c = load i32, i32* %arg1, align 4
  store i32 %v2_1000984c, i32* @r31, align 4
  %v2_10009850 = add i32 %arg3, %arg2
  store i32 %v2_10009850, i32* %r3.global-to-local, align 4
  %v3_100098647 = icmp eq i32 %v2_1000984c, 0
  %v1_100098688 = add i32 %v2_1000984c, 12
  %tmp69 = icmp uge i32 %v1_100098688, %arg2
  %or.cond10 = or i1 %v3_100098647, %tmp69
  br i1 %or.cond10, label %dec_label_pc_10009874, label %dec_label_pc_1000985c

dec_label_pc_1000985c:                            ; preds = %dec_label_pc_10009834, %dec_label_pc_1000985c
  %v0_100098bc11 = phi i32 [ %v3_10009860, %dec_label_pc_1000985c ], [ %v2_1000984c, %dec_label_pc_10009834 ]
  store i32 %v0_100098bc11, i32* %r11.global-to-local, align 4
  %v1_10009860 = add i32 %v0_100098bc11, 4
  %v2_10009860 = inttoptr i32 %v1_10009860 to i32*
  %v3_10009860 = load i32, i32* %v2_10009860, align 4
  store i32 %v3_10009860, i32* @r31, align 4
  %v3_10009864 = icmp eq i32 %v3_10009860, 0
  %v1_10009868 = add i32 %v3_10009860, 12
  %tmp6 = icmp uge i32 %v1_10009868, %arg2
  %or.cond = or i1 %v3_10009864, %tmp6
  br i1 %or.cond, label %dec_label_pc_10009874, label %dec_label_pc_1000985c

dec_label_pc_10009874:                            ; preds = %dec_label_pc_1000985c, %dec_label_pc_10009834
  %v0_100098b0.lcssa = phi i32 [ 0, %dec_label_pc_10009834 ], [ %v0_100098bc11, %dec_label_pc_1000985c ]
  %v0_100098bc.lcssa = phi i32 [ %v2_1000984c, %dec_label_pc_10009834 ], [ %v3_10009860, %dec_label_pc_1000985c ]
  %v3_10009864.lcssa = phi i1 [ %v3_100098647, %dec_label_pc_10009834 ], [ %v3_10009864, %dec_label_pc_1000985c ]
  br i1 %v3_10009864.lcssa, label %dec_label_pc_1000992c, label %dec_label_pc_1000987c

dec_label_pc_1000987c:                            ; preds = %dec_label_pc_10009874
  %v1_1000987c = inttoptr i32 %v0_100098bc.lcssa to i32*
  %v2_1000987c = load i32, i32* %v1_1000987c, align 4
  %v2_10009880 = sub i32 %v0_100098bc.lcssa, %v2_1000987c
  %v1_10009884 = add i32 %v2_10009880, 12
  %v3_10009888 = icmp ugt i32 %v1_10009884, %v2_10009850
  br i1 %v3_10009888, label %dec_label_pc_1000992c, label %dec_label_pc_10009890

dec_label_pc_10009890:                            ; preds = %dec_label_pc_1000987c
  %v4_10009888 = icmp eq i32 %v1_10009884, %v2_10009850
  %v2_10009894 = add i32 %v2_1000987c, %arg3
  store i32 %v2_10009894, i32* @r29, align 4
  br i1 %v4_10009888, label %dec_label_pc_1000989c, label %dec_label_pc_100098cc

dec_label_pc_1000989c:                            ; preds = %dec_label_pc_10009890
  %v3_1000989c = icmp eq i32 %v0_100098b0.lcssa, 0
  br i1 %v3_1000989c, label %dec_label_pc_10009920, label %dec_label_pc_100098a4

dec_label_pc_100098a4:                            ; preds = %dec_label_pc_1000989c
  %v1_100098a4 = add i32 %v0_100098b0.lcssa, 12
  %v4_100098a8 = icmp eq i32 %v1_100098a4, %arg2
  br i1 %v4_100098a8, label %dec_label_pc_100098b0, label %dec_label_pc_10009920

dec_label_pc_100098b0:                            ; preds = %dec_label_pc_100098a4
  %v1_100098b0 = inttoptr i32 %v0_100098b0.lcssa to i32*
  %v2_100098b0 = load i32, i32* %v1_100098b0, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_100098b8 = add i32 %v0_100098b0.lcssa, 8
  %v2_100098b8 = inttoptr i32 %v1_100098b8 to i32*
  %v3_100098b8 = load i32, i32* %v2_100098b8, align 4
  %v2_100098c0 = add i32 %v2_100098b0, %v2_10009894
  store i32 %v2_100098c0, i32* @r29, align 4
  %v5_100098c4 = call i32 @function_10009818(i32* %arg1, i32 %v0_100098bc.lcssa, i32 %v3_100098b8, i32 %v2_10009850)
  store i32 %v5_100098c4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009920

dec_label_pc_100098cc:                            ; preds = %dec_label_pc_10009890
  %v1_100098cc = add i32 %v0_100098bc.lcssa, 4
  %v2_100098cc = inttoptr i32 %v1_100098cc to i32*
  %v3_100098cc = load i32, i32* %v2_100098cc, align 4
  %v3_100098d0 = icmp eq i32 %v3_100098cc, 0
  br i1 %v3_100098d0, label %dec_label_pc_10009908, label %dec_label_pc_100098d8

dec_label_pc_100098d8:                            ; preds = %dec_label_pc_100098cc
  %v1_100098d8 = inttoptr i32 %v3_100098cc to i32*
  %v2_100098d8 = load i32, i32* %v1_100098d8, align 4
  %v2_100098dc = sub i32 %v3_100098cc, %v2_100098d8
  %v1_100098e0 = add i32 %v2_100098dc, 12
  %v4_100098e4 = icmp eq i32 %v2_10009850, %v1_100098e0
  br i1 %v4_100098e4, label %dec_label_pc_100098ec, label %dec_label_pc_10009908

dec_label_pc_100098ec:                            ; preds = %dec_label_pc_100098d8
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_100098f8 = add i32 %v2_100098d8, %v2_10009894
  store i32 %v2_100098f8, i32* @r29, align 4
  store i32 %v3_100098cc, i32* @r31, align 4
  %v5_10009900 = call i32 @function_10009818(i32* %arg1, i32 %v3_100098cc, i32 %v0_100098b0.lcssa, i32 %v2_10009850)
  store i32 %v5_10009900, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009920

dec_label_pc_10009908:                            ; preds = %dec_label_pc_100098d8, %dec_label_pc_100098cc
  %v2_10009908 = add i32 %v0_100098bc.lcssa, %arg3
  store i32 %v2_10009908, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268474656, i32* @lr, align 4
  %v5_1000991c = call i32 @function_100097ec(i32* %arg1, i32 %v2_10009908, i32 %v0_100098b0.lcssa, i32 %v3_100098cc)
  store i32 %v5_1000991c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009920

dec_label_pc_10009920:                            ; preds = %dec_label_pc_100098a4, %dec_label_pc_1000989c, %dec_label_pc_100098ec, %dec_label_pc_100098b0, %dec_label_pc_10009908
  %v0_10009920 = load i32, i32* @r31, align 4
  store i32 %v0_10009920, i32* @r30, align 4
  %v0_10009924 = load i32, i32* @r29, align 4
  %v2_10009924 = inttoptr i32 %v0_10009920 to i32*
  store i32 %v0_10009924, i32* %v2_10009924, align 4
  br label %dec_label_pc_10009948

dec_label_pc_1000992c:                            ; preds = %dec_label_pc_1000987c, %dec_label_pc_10009874
  %v2_1000992c = add i32 %v2_10009850, -12
  %v3_1000992c = inttoptr i32 %v2_1000992c to i32*
  store i32 %arg3, i32* %v3_1000992c, align 4
  %v0_10009930 = load i32, i32* %r3.global-to-local, align 4
  %v1_10009930 = add i32 %v0_10009930, -12
  store i32 %v1_10009930, i32* @r30, align 4
  %v0_10009934 = load i32, i32* %r11.global-to-local, align 4
  %v0_10009938 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10009938, i32* %r3.global-to-local, align 4
  %v0_1000993c = load i32, i32* @r31, align 4
  store i32 268474696, i32* @lr, align 4
  %v4_10009944 = inttoptr i32 %v0_10009938 to i32*
  %v5_10009944 = call i32 @function_100097ec(i32* %v4_10009944, i32 %v1_10009930, i32 %v0_10009934, i32 %v0_1000993c)
  store i32 %v5_10009944, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009948

dec_label_pc_10009948:                            ; preds = %dec_label_pc_10009920, %dec_label_pc_1000992c
  %v0_1000994c = load i32, i32* @r30, align 4
  store i32 %v0_1000994c, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000994c

; uselistorder directives
  uselistorder i32 %v3_100098cc, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_10009884, { 1, 0 }
  uselistorder i32 %v0_100098bc.lcssa, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_100098b0.lcssa, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %v3_10009860, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v2_10009850, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 10, 4, 5, 6, 7, 8, 9, 11, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32* %arg1, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_10009948, { 1, 0 }
  uselistorder label %dec_label_pc_10009920, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1000985c, { 1, 0 }
}

define i32 @function_10009960() local_unnamed_addr {
dec_label_pc_10009960:
  %stack_var_-40 = alloca i32, align 4
  %v2_10009978 = ptrtoint i32* %stack_var_-40 to i32
  %v0_10009984 = load i32, i32* @r3, align 4
  store i32 %v0_10009984, i32* @r31, align 4
  store i32 %v2_10009978, i32* @r3, align 4
  %v3_10009990 = call i32 @function_10009c54(i32 %v2_10009978, i32 ptrtoint ([3 x i8]* @global_var_10009c4c.310 to i32))
  %v0_10009998 = call i32 @function_10009c4c()
  %v3_100099a0 = load i32, i32* @global_var_1001b480.331, align 4
  %v3_100099a4 = icmp eq i32 %v3_100099a0, 0
  br i1 %v3_100099a4, label %dec_label_pc_100099b8, label %dec_label_pc_100099ac

dec_label_pc_100099ac:                            ; preds = %dec_label_pc_10009960
  %v0_100099ac = load i32, i32* @r31, align 4
  %v3_100099b4 = call i32 @unknown_0(i32 %v0_100099ac, i32 268566528)
  br label %dec_label_pc_100099b8

dec_label_pc_100099b8:                            ; preds = %dec_label_pc_10009960, %dec_label_pc_100099ac
  store i32 %v2_10009978, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v2_100099c0 = call i32 @function_10009c54(i32 %v2_10009978, i32 1)
  store i32 %v2_100099c0, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100099c8.333 to i32), i32* @lr, align 4
  %v1_100099c4 = call i32 @function_10009bb8(i32 %v2_100099c0)
  %v0_100099dc = load i32, i32* @r31, align 4
  %v1_100099e0 = call i32 @function_10009fec(i32 %v0_100099dc)
  ret i32 %v1_100099e0

; uselistorder directives
  uselistorder i32 %v2_10009978, { 1, 0, 3, 2 }
  uselistorder i32 (i32, i32)* @function_10009c54, { 1, 0, 5, 4, 3, 2 }
  uselistorder label %dec_label_pc_100099b8, { 1, 0 }
}

define i32 @function_100099e4(i32 %arg1) local_unnamed_addr {
dec_label_pc_100099e4:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-432 = alloca i32, align 4
  %stack_var_-440 = alloca i32, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v3_100099e4 = icmp eq i32 %arg1, 0
  br i1 %v3_100099e4, label %dec_label_pc_10009b98, label %dec_label_pc_10009a14.lr.ph

dec_label_pc_10009a14.lr.ph:                      ; preds = %dec_label_pc_100099e4
  %v2_10009a08 = ptrtoint i32* %stack_var_-440 to i32
  store i32 %v2_10009a08, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_10009a1442 = add i32 %v2_10009a08, 132
  %v3_10009a1443 = inttoptr i32 %v2_10009a1442 to i32*
  store i32 0, i32* %v3_10009a1443, align 4
  %v0_10009a1844 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009a1845 = add i32 %v0_10009a1844, -1
  store i32 %v1_10009a1845, i32* %r11.global-to-local, align 4
  %v1_10009a1c46 = mul i32 %v1_10009a1845, 4
  %v1_10009a2047 = load i32, i32* %r7.global-to-local, align 4
  %v2_10009a2048 = add i32 %v1_10009a2047, %v1_10009a1c46
  %v0_10009a2449 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009a2450 = add i32 %v0_10009a2449, -1
  store i32 %v1_10009a2450, i32* %ctr.global-to-local, align 4
  %v2_10009a2451 = icmp eq i32 %v1_10009a2450, 0
  br i1 %v2_10009a2451, label %dec_label_pc_10009a28, label %dec_label_pc_10009a14.dec_label_pc_10009a14_crit_edge

dec_label_pc_10009a14.dec_label_pc_10009a14_crit_edge: ; preds = %dec_label_pc_10009a14.lr.ph, %dec_label_pc_10009a14.dec_label_pc_10009a14_crit_edge
  %v2_10009a2052 = phi i32 [ %v2_10009a20, %dec_label_pc_10009a14.dec_label_pc_10009a14_crit_edge ], [ %v2_10009a2048, %dec_label_pc_10009a14.lr.ph ]
  %v0_10009a14.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_10009a14 = add i32 %v2_10009a2052, 8
  %v3_10009a14 = inttoptr i32 %v2_10009a14 to i32*
  store i32 %v0_10009a14.pre, i32* %v3_10009a14, align 4
  %v0_10009a18 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009a18 = add i32 %v0_10009a18, -1
  store i32 %v1_10009a18, i32* %r11.global-to-local, align 4
  %v1_10009a1c = mul i32 %v1_10009a18, 4
  %v1_10009a20 = load i32, i32* %r7.global-to-local, align 4
  %v2_10009a20 = add i32 %v1_10009a20, %v1_10009a1c
  %v0_10009a24 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009a24 = add i32 %v0_10009a24, -1
  store i32 %v1_10009a24, i32* %ctr.global-to-local, align 4
  %v2_10009a24 = icmp eq i32 %v1_10009a24, 0
  br i1 %v2_10009a24, label %dec_label_pc_10009a28, label %dec_label_pc_10009a14.dec_label_pc_10009a14_crit_edge

dec_label_pc_10009a28:                            ; preds = %dec_label_pc_10009a14.dec_label_pc_10009a14_crit_edge, %dec_label_pc_10009a14.lr.ph
  %v0_10009a3c.pre = load i32, i32* %r8.global-to-local, align 4
  %v2_10009a28 = ptrtoint i32* %stack_var_-432 to i32
  store i32 %v2_10009a28, i32* @r29, align 4
  store i32 %v2_10009a28, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  store i32 %v0_10009a3c.pre, i32* %stack_var_-440, align 4
  %v0_10009a40 = call i32 @function_10009268()
  store i32 %v0_10009a40, i32* %r3.global-to-local, align 4
  %v1_10009a44 = icmp slt i32 %v0_10009a40, 0
  br i1 %v1_10009a44, label %dec_label_pc_10009ba0, label %dec_label_pc_10009a4c

dec_label_pc_10009a4c:                            ; preds = %dec_label_pc_10009a28
  %v2_10009a4c = ptrtoint i32* %stack_var_-304 to i32
  store i32 %v2_10009a4c, i32* @r31, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268474976, i32* @lr, align 4
  %v3_10009a5c = call i32 @function_10008724(i32 0, i32 %v2_10009a28, i32 %v2_10009a4c)
  store i32 %v3_10009a5c, i32* %r3.global-to-local, align 4
  %v3_10009a60 = icmp eq i32 %v3_10009a5c, 0
  br i1 %v3_10009a60, label %dec_label_pc_10009a68, label %dec_label_pc_10009ba0

dec_label_pc_10009a68:                            ; preds = %dec_label_pc_10009a4c
  store i32 %v2_10009a4c, i32* %r3.global-to-local, align 4
  %v2_10009a70 = call i32 @function_10009240(i32 %v2_10009a4c, i32 17)
  store i32 %v2_10009a70, i32* %r3.global-to-local, align 4
  %v3_10009a74 = icmp eq i32 %v2_10009a70, 0
  br i1 %v3_10009a74, label %dec_label_pc_10009a94.lr.ph, label %dec_label_pc_10009b60

dec_label_pc_10009a94.lr.ph:                      ; preds = %dec_label_pc_10009a68
  store i32 %v2_10009a08, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %v3_10009a1443, align 4
  %v0_10009a9833 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009a9834 = add i32 %v0_10009a9833, -1
  store i32 %v1_10009a9834, i32* %r11.global-to-local, align 4
  %v1_10009a9c35 = mul i32 %v1_10009a9834, 4
  %v1_10009aa036 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009aa037 = add i32 %v1_10009aa036, %v1_10009a9c35
  %v0_10009aa438 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009aa439 = add i32 %v0_10009aa438, -1
  store i32 %v1_10009aa439, i32* %ctr.global-to-local, align 4
  %v2_10009aa440 = icmp eq i32 %v1_10009aa439, 0
  br i1 %v2_10009aa440, label %dec_label_pc_10009aa8, label %dec_label_pc_10009a94.dec_label_pc_10009a94_crit_edge

dec_label_pc_10009a94.dec_label_pc_10009a94_crit_edge: ; preds = %dec_label_pc_10009a94.lr.ph, %dec_label_pc_10009a94.dec_label_pc_10009a94_crit_edge
  %v2_10009aa041 = phi i32 [ %v2_10009aa0, %dec_label_pc_10009a94.dec_label_pc_10009a94_crit_edge ], [ %v2_10009aa037, %dec_label_pc_10009a94.lr.ph ]
  %v0_10009a94.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_10009a94 = add i32 %v2_10009aa041, 8
  %v3_10009a94 = inttoptr i32 %v2_10009a94 to i32*
  store i32 %v0_10009a94.pre, i32* %v3_10009a94, align 4
  %v0_10009a98 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009a98 = add i32 %v0_10009a98, -1
  store i32 %v1_10009a98, i32* %r11.global-to-local, align 4
  %v1_10009a9c = mul i32 %v1_10009a98, 4
  %v1_10009aa0 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009aa0 = add i32 %v1_10009aa0, %v1_10009a9c
  %v0_10009aa4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009aa4 = add i32 %v0_10009aa4, -1
  store i32 %v1_10009aa4, i32* %ctr.global-to-local, align 4
  %v2_10009aa4 = icmp eq i32 %v1_10009aa4, 0
  br i1 %v2_10009aa4, label %dec_label_pc_10009aa8, label %dec_label_pc_10009a94.dec_label_pc_10009a94_crit_edge

dec_label_pc_10009aa8:                            ; preds = %dec_label_pc_10009a94.dec_label_pc_10009a94_crit_edge, %dec_label_pc_10009a94.lr.ph
  store i32 %v2_10009a28, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  %v0_10009ab0 = call i32 @function_10009268()
  store i32 %v0_10009ab0, i32* %r3.global-to-local, align 4
  %v1_10009ab4 = icmp slt i32 %v0_10009ab0, 0
  br i1 %v1_10009ab4, label %dec_label_pc_10009ba0, label %dec_label_pc_10009abc

dec_label_pc_10009abc:                            ; preds = %dec_label_pc_10009aa8
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_10009ac4 = ptrtoint i32* %stack_var_-176 to i32
  store i32 268475084, i32* @lr, align 4
  %v4_10009ac8 = call i32 @function_1000a830(i32 17, i32* null, i32 %v2_10009ac4)
  store i32 %v4_10009ac8, i32* %r3.global-to-local, align 4
  %tmp30 = icmp sgt i32 %v4_10009ac8, -1
  br i1 %tmp30, label %dec_label_pc_10009afc, label %dec_label_pc_10009ad4

dec_label_pc_10009ad4:                            ; preds = %dec_label_pc_10009abc
  %v0_10009ad4 = call i32 @function_10008aa0()
  store i32 %v0_10009ad4, i32* %r3.global-to-local, align 4
  %v1_10009adc = inttoptr i32 %v0_10009ad4 to i32*
  %v2_10009adc = load i32, i32* %v1_10009adc, align 4
  store i32 %v2_10009adc, i32* @r28, align 4
  store i32 %v0_10009ad4, i32* @r29, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268475120, i32* @lr, align 4
  %v3_10009aec = call i32 @function_10008724(i32 2, i32 %v2_10009a4c, i32 0)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_10009af4 = load i32, i32* @r28, align 4
  %v1_10009af4 = load i32, i32* @r29, align 4
  %v2_10009af4 = inttoptr i32 %v1_10009af4 to i32*
  store i32 %v0_10009af4, i32* %v2_10009af4, align 4
  %v0_10009bb4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009ba4

dec_label_pc_10009afc:                            ; preds = %dec_label_pc_10009abc
  %v3_10009afc = load i32, i32* %stack_var_-176, align 4
  store i32 %v2_10009a4c, i32* @r28, align 4
  %v3_10009b08 = icmp eq i32 %v3_10009afc, 1
  br i1 %v3_10009b08, label %dec_label_pc_10009b10, label %dec_label_pc_10009b44

dec_label_pc_10009b10:                            ; preds = %dec_label_pc_10009afc
  store i32 %v2_10009a08, i32* %r3.global-to-local, align 4
  store i32 268475164, i32* @lr, align 4
  %v2_10009b18 = call i32 @function_1000a424(i32 %v2_10009a08, i32 %v2_10009a08)
  store i32 %v2_10009b18, i32* %r3.global-to-local, align 4
  store i32 %v2_10009b18, i32* @r31, align 4
  %v0_10009b20 = call i32 @function_10008aa0()
  store i32 %v0_10009b20, i32* %r3.global-to-local, align 4
  store i32 %v0_10009b20, i32* @r29, align 4
  %v1_10009b30 = inttoptr i32 %v0_10009b20 to i32*
  %v2_10009b30 = load i32, i32* %v1_10009b30, align 4
  store i32 %v2_10009b30, i32* @r28, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268475196, i32* @lr, align 4
  %v3_10009b38 = call i32 @function_10008724(i32 2, i32 %v2_10009a4c, i32 0)
  store i32 %v3_10009b38, i32* %r3.global-to-local, align 4
  %v0_10009b3c = load i32, i32* @r28, align 4
  %v1_10009b3c = load i32, i32* @r29, align 4
  %v2_10009b3c = inttoptr i32 %v1_10009b3c to i32*
  store i32 %v0_10009b3c, i32* %v2_10009b3c, align 4
  %v0_10009b6c.pr = load i32, i32* @r31, align 4
  br label %dec_label_pc_10009b6c

dec_label_pc_10009b44:                            ; preds = %dec_label_pc_10009afc
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268475220, i32* @lr, align 4
  %v3_10009b50 = call i32 @function_10008724(i32 2, i32 %v2_10009a4c, i32 0)
  br label %dec_label_pc_10009b60

dec_label_pc_10009b60:                            ; preds = %dec_label_pc_10009a68, %dec_label_pc_10009b44
  store i32 %v2_10009a08, i32* %r3.global-to-local, align 4
  store i32 268475240, i32* @lr, align 4
  %v2_10009b64 = call i32 @function_1000a424(i32 %v2_10009a08, i32 %v2_10009a08)
  store i32 %v2_10009b64, i32* %r3.global-to-local, align 4
  store i32 %v2_10009b64, i32* @r31, align 4
  br label %dec_label_pc_10009b6c

dec_label_pc_10009b6c:                            ; preds = %dec_label_pc_10009b10, %dec_label_pc_10009b60
  %v0_10009b6c = phi i32 [ %v0_10009b6c.pr, %dec_label_pc_10009b10 ], [ %v2_10009b64, %dec_label_pc_10009b60 ]
  %v3_10009b6c = icmp eq i32 %v0_10009b6c, 0
  br i1 %v3_10009b6c, label %dec_label_pc_10009b98, label %dec_label_pc_10009b74

dec_label_pc_10009b74:                            ; preds = %dec_label_pc_10009b6c
  %v3_10009b84 = load i32, i32* %stack_var_-440, align 4
  %v0_10009b88 = call i32 @__asm_mfcr()
  store i32 %v0_10009b88, i32* %r3.global-to-local, align 4
  %v1_10009b8c = call i32 @__asm_rlwinm(i32 %v0_10009b88, i32 30, i32 31, i32 31)
  %v2_10009b90 = add i32 %v3_10009b84, %v1_10009b8c
  store i32 %v2_10009b90, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009ba4

dec_label_pc_10009b98:                            ; preds = %dec_label_pc_10009b6c, %dec_label_pc_100099e4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009ba4

dec_label_pc_10009ba0:                            ; preds = %dec_label_pc_10009a4c, %dec_label_pc_10009aa8, %dec_label_pc_10009a28
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009ba4

dec_label_pc_10009ba4:                            ; preds = %dec_label_pc_10009b98, %dec_label_pc_10009b74, %dec_label_pc_10009ad4, %dec_label_pc_10009ba0
  %v0_10009bb4 = phi i32 [ 0, %dec_label_pc_10009b98 ], [ %v2_10009b90, %dec_label_pc_10009b74 ], [ %v0_10009bb4.pre, %dec_label_pc_10009ad4 ], [ -1, %dec_label_pc_10009ba0 ]
  ret i32 %v0_10009bb4

; uselistorder directives
  uselistorder i32 %v1_10009aa4, { 1, 0 }
  uselistorder i32 %v2_10009a4c, { 2, 1, 3, 0, 5, 4, 6, 7 }
  uselistorder i32 %v1_10009a24, { 1, 0 }
  uselistorder i32 %v2_10009a08, { 2, 1, 3, 6, 5, 4, 7, 0, 8 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 4, 6, 5, 1, 7, 2, 8, 9, 10, 11, 12, 13, 15, 16, 14, 17, 18, 19, 20, 3, 21, 22, 23, 24, 0 }
  uselistorder i32* %r11.global-to-local, { 7, 6, 4, 0, 1, 9, 8, 5, 2, 3 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 2, 0, 1, 9, 8, 3, 4, 5 }
  uselistorder i32 (i32, i32)* @function_1000a424, { 1, 0 }
  uselistorder i32 17, { 2, 32, 33, 3, 34, 16, 17, 4, 5, 18, 6, 7, 19, 20, 21, 22, 14, 15, 8, 9, 23, 10, 24, 25, 26, 11, 13, 12, 27, 0, 28, 1, 29, 30, 31 }
  uselistorder label %dec_label_pc_10009ba4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10009ba0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009b6c, { 1, 0 }
  uselistorder label %dec_label_pc_10009b60, { 1, 0 }
  uselistorder label %dec_label_pc_10009a94.dec_label_pc_10009a94_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10009a14.dec_label_pc_10009a14_crit_edge, { 1, 0 }
}

define i32 @function_10009bb8(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009c08:
  %v3_10009c0c = load i32, i32* @global_var_1001b490.335, align 4
  %v3_10009c10 = icmp eq i32 %v3_10009c0c, 0
  br i1 %v3_10009c10, label %dec_label_pc_10009c20, label %dec_label_pc_10009c18

dec_label_pc_10009c18:                            ; preds = %dec_label_pc_10009c08
  %v2_10009c1c = load i32, i32* @r4, align 4
  %v3_10009c1c = call i32 @unknown_0(i32 268566528, i32 %v2_10009c1c)
  store i32 %v3_10009c1c, i32* @r3, align 4
  br label %dec_label_pc_10009c20

dec_label_pc_10009c20:                            ; preds = %dec_label_pc_10009c08, %dec_label_pc_10009c18
  %v3_10009c24 = load i32, i32* @global_var_1001b494.336, align 4
  %v3_10009c28 = icmp eq i32 %v3_10009c24, 0
  br i1 %v3_10009c28, label %dec_label_pc_10009c20.dec_label_pc_10009c38_crit_edge, label %dec_label_pc_10009c30

dec_label_pc_10009c20.dec_label_pc_10009c38_crit_edge: ; preds = %dec_label_pc_10009c20
  %v0_10009c48.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10009c38

dec_label_pc_10009c30:                            ; preds = %dec_label_pc_10009c20
  %v2_10009c34 = load i32, i32* @r4, align 4
  %v3_10009c34 = call i32 @unknown_0(i32 268566528, i32 %v2_10009c34)
  br label %dec_label_pc_10009c38

dec_label_pc_10009c38:                            ; preds = %dec_label_pc_10009c20.dec_label_pc_10009c38_crit_edge, %dec_label_pc_10009c30
  %v0_10009c48 = phi i32 [ %v0_10009c48.pre, %dec_label_pc_10009c20.dec_label_pc_10009c38_crit_edge ], [ %v3_10009c34, %dec_label_pc_10009c30 ]
  ret i32 %v0_10009c48

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10009c38, { 1, 0 }
  uselistorder label %dec_label_pc_10009c20, { 1, 0 }
}

define i32 @function_10009c4c() local_unnamed_addr {
dec_label_pc_10009c4c:
  ret i32 0
}

define i32 @function_10009c54(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009c54:
  %v0_10009c54 = load i32, i32* @r3, align 4
  ret i32 %v0_10009c54
}

define i32 @function_10009c58(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009c58:
  store i32 %arg2, i32* @r30, align 4
  store i32 1, i32* @r4, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268475516, i32* @lr, align 4
  %v1_10009c78 = call i32 @function_100082e4(i32 1)
  %v3_10009c7c = icmp eq i32 %v1_10009c78, -1
  br i1 %v3_10009c7c, label %dec_label_pc_10009c84, label %dec_label_pc_10009ca4

dec_label_pc_10009c84:                            ; preds = %dec_label_pc_10009c58
  %v0_10009c88 = load i32, i32* @r30, align 4
  store i32 268475544, i32* @lr, align 4
  %v3_10009c94 = call i32 @function_10008534(i32 ptrtoint ([10 x i8]* @global_var_1000afb0.337 to i32), i32 %v0_10009c88)
  %v1_10009c98 = load i32, i32* @r31, align 4
  %v4_10009c98 = icmp eq i32 %v3_10009c94, %v1_10009c98
  br i1 %v4_10009c98, label %dec_label_pc_10009ca4, label %dec_label_pc_10009ca0

dec_label_pc_10009ca0:                            ; preds = %dec_label_pc_10009c84
  %v1_10009ca0 = call i32 @function_1000a8f4(i32 %v3_10009c94)
  br label %dec_label_pc_10009ca4

dec_label_pc_10009ca4:                            ; preds = %dec_label_pc_10009c58, %dec_label_pc_10009c84, %dec_label_pc_10009ca0
  %v0_10009cb4 = phi i32 [ %v1_10009c78, %dec_label_pc_10009c58 ], [ %v3_10009c94, %dec_label_pc_10009c84 ], [ %v1_10009ca0, %dec_label_pc_10009ca0 ]
  ret i32 %v0_10009cb4

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_10008534, { 0, 3, 7, 6, 5, 4, 2, 1 }
  uselistorder i32 (i32)* @function_100082e4, { 0, 3, 9, 8, 11, 10, 13, 12, 7, 6, 5, 4, 2, 1 }
  uselistorder label %dec_label_pc_10009ca4, { 2, 1, 0 }
}

define i32 @function_10009cb8(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009cb8:
  %v3_10009cd8 = load i32, i32* @global_var_1001b498.338, align 4
  %v3_10009cdc = icmp eq i32 %v3_10009cd8, 0
  br i1 %v3_10009cdc, label %dec_label_pc_10009d00, label %dec_label_pc_10009d24

dec_label_pc_10009d00:                            ; preds = %dec_label_pc_10009cb8
  store i32 1, i32* @global_var_1001b498.338, align 4
  store i32 4096, i32* @global_var_1001b48c.322, align 4
  br label %dec_label_pc_10009d24

dec_label_pc_10009d24:                            ; preds = %dec_label_pc_10009d00, %dec_label_pc_10009cb8
  %v0_10009d34 = load i32, i32* @r3, align 4
  ret i32 %v0_10009d34
}

define i32 @function_10009d38(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10009d38:
  %r25.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  store i32 %tmp, i32* @r30, align 4
  %v1_10009d50 = mul i32 %arg2, 4
  %v2_10009d54 = add i32 %tmp, %v1_10009d50
  %v0_10009d58 = load i32, i32* @r9, align 4
  store i32 %v0_10009d58, i32* @global_var_1001b484.340, align 4
  %v1_10009d5c = add i32 %v2_10009d54, 4
  store i32 268566528, i32* %r29.global-to-local, align 4
  store i32 %v1_10009d5c, i32* @global_var_1001b488.341, align 4
  store i32 %arg6, i32* @global_var_1001b494.336, align 4
  store i32 %arg1, i32* %r25.global-to-local, align 4
  store i32 %arg4, i32* %r28.global-to-local, align 4
  %v2_10009d7c = load i32, i32* %arg3, align 4
  store i32 %arg5, i32* %r27.global-to-local, align 4
  %v4_10009d84 = icmp eq i32 %v1_10009d5c, %v2_10009d7c
  br i1 %v4_10009d84, label %dec_label_pc_10009d8c, label %dec_label_pc_10009d90

dec_label_pc_10009d8c:                            ; preds = %dec_label_pc_10009d38
  store i32 %v2_10009d54, i32* @global_var_1001b488.341, align 4
  br label %dec_label_pc_10009d90

dec_label_pc_10009d90:                            ; preds = %dec_label_pc_10009d38, %dec_label_pc_10009d8c
  %v2_10009d90 = ptrtoint i32* %stack_var_-168 to i32
  store i32 268475808, i32* @lr, align 4
  %v3_10009d9c = call i32 @function_10008b88(i32 %v2_10009d90, i32 0, i32 120)
  %storemerge.pre = load i32, i32* @global_var_1001b488.341, align 4
  br label %dec_label_pc_10009dac

dec_label_pc_10009dac:                            ; preds = %dec_label_pc_10009dac, %dec_label_pc_10009d90
  %storemerge = phi i32 [ %storemerge.pre, %dec_label_pc_10009d90 ], [ %v1_10009db0, %dec_label_pc_10009dac ]
  %v1_10009dac = inttoptr i32 %storemerge to i32*
  %v2_10009dac = load i32, i32* %v1_10009dac, align 4
  %v1_10009db0 = add i32 %storemerge, 4
  %v3_10009db4 = icmp eq i32 %v2_10009dac, 0
  br i1 %v3_10009db4, label %dec_label_pc_10009dbc, label %dec_label_pc_10009dac

dec_label_pc_10009dbc:                            ; preds = %dec_label_pc_10009dac
  store i32 %v1_10009db0, i32* %r29.global-to-local, align 4
  %v1_10009de812 = inttoptr i32 %v1_10009db0 to i32*
  %v2_10009de813 = load i32, i32* %v1_10009de812, align 4
  %v3_10009dec16 = icmp eq i32 %v2_10009de813, 0
  br i1 %v3_10009dec16, label %dec_label_pc_10009df4, label %dec_label_pc_10009dc4

dec_label_pc_10009dc4:                            ; preds = %dec_label_pc_10009dbc, %dec_label_pc_10009de4
  %v0_10009dd8 = phi i32 [ %v1_10009de4, %dec_label_pc_10009de4 ], [ %v1_10009db0, %dec_label_pc_10009dbc ]
  %v0_10009dcc = phi i32 [ %v2_10009de8, %dec_label_pc_10009de4 ], [ %v2_10009de813, %dec_label_pc_10009dbc ]
  %v2_10009dc4 = icmp ugt i32 %v0_10009dcc, 14
  br i1 %v2_10009dc4, label %dec_label_pc_10009de4, label %dec_label_pc_10009dcc

dec_label_pc_10009dcc:                            ; preds = %dec_label_pc_10009dc4
  %v1_10009dcc = mul i32 %v0_10009dcc, 8
  %v2_10009dd4 = add i32 %v1_10009dcc, %v2_10009d90
  store i32 %v2_10009dd4, i32* @r3, align 4
  store i32 %v0_10009dd8, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268475876, i32* @lr, align 4
  %v0_10009de0 = call i32 @function_1000a6a0()
  %v0_10009de4.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10009de4

dec_label_pc_10009de4:                            ; preds = %dec_label_pc_10009dc4, %dec_label_pc_10009dcc
  %v0_10009de4 = phi i32 [ %v0_10009dd8, %dec_label_pc_10009dc4 ], [ %v0_10009de4.pre, %dec_label_pc_10009dcc ]
  %v1_10009de4 = add i32 %v0_10009de4, 8
  store i32 %v1_10009de4, i32* %r29.global-to-local, align 4
  %v1_10009de8 = inttoptr i32 %v1_10009de4 to i32*
  %v2_10009de8 = load i32, i32* %v1_10009de8, align 4
  %v3_10009dec = icmp eq i32 %v2_10009de8, 0
  br i1 %v3_10009dec, label %dec_label_pc_10009df4, label %dec_label_pc_10009dc4

dec_label_pc_10009df4:                            ; preds = %dec_label_pc_10009de4, %dec_label_pc_10009dbc
  %v1_10009df8 = call i32 @function_1000aa44(i32 %v2_10009d90)
  store i32 %v1_10009df8, i32* @r3, align 4
  store i32 268475904, i32* @lr, align 4
  %v1_10009dfc = call i32 @function_10009cb8(i32 %v1_10009df8)
  %v3_10009e04 = icmp eq i32 %tmp27, 0
  br i1 %v3_10009e04, label %dec_label_pc_10009e0c, label %dec_label_pc_10009e10

dec_label_pc_10009e0c:                            ; preds = %dec_label_pc_10009df4
  br label %dec_label_pc_10009e10

dec_label_pc_10009e10:                            ; preds = %dec_label_pc_10009df4, %dec_label_pc_10009e0c
  %v0_10009e18 = phi i32 [ %tmp27, %dec_label_pc_10009df4 ], [ 4096, %dec_label_pc_10009e0c ]
  store i32 %v0_10009e18, i32* @global_var_1001b48c.322, align 4
  %v3_10009e1c = icmp eq i32 %tmp26, -1
  br i1 %v3_10009e1c, label %dec_label_pc_10009e24, label %dec_label_pc_10009e58

dec_label_pc_10009e24:                            ; preds = %dec_label_pc_10009e10
  store i32 268475944, i32* @lr, align 4
  %v1_10009e24 = call i32 @function_1000a35c(i32 268566528)
  store i32 %v1_10009e24, i32* %r29.global-to-local, align 4
  store i32 268475952, i32* @lr, align 4
  %v0_10009e2c = call i32 @function_1000a2cc()
  %v4_10009e30 = icmp eq i32 %v1_10009e24, %v0_10009e2c
  br i1 %v4_10009e30, label %dec_label_pc_10009e38, label %dec_label_pc_10009e74

dec_label_pc_10009e38:                            ; preds = %dec_label_pc_10009e24
  store i32 268475964, i32* @lr, align 4
  %v1_10009e38 = call i32 @function_1000a314(i32 %v0_10009e2c)
  store i32 %v1_10009e38, i32* %r29.global-to-local, align 4
  store i32 268475972, i32* @lr, align 4
  %v0_10009e40 = call i32 @function_1000a284()
  %v4_10009e44 = icmp eq i32 %v1_10009e38, %v0_10009e40
  br i1 %v4_10009e44, label %dec_label_pc_10009e4c.thread, label %dec_label_pc_10009e74

dec_label_pc_10009e4c.thread:                     ; preds = %dec_label_pc_10009e38
  br label %dec_label_pc_10009ea4

dec_label_pc_10009e58:                            ; preds = %dec_label_pc_10009e10
  %v4_10009e5c = icmp eq i32 %tmp26, %tmp25
  br i1 %v4_10009e5c, label %dec_label_pc_10009e64, label %dec_label_pc_10009e74

dec_label_pc_10009e64:                            ; preds = %dec_label_pc_10009e58
  br label %dec_label_pc_10009e74

dec_label_pc_10009e74:                            ; preds = %dec_label_pc_10009e64, %dec_label_pc_10009e58, %dec_label_pc_10009e38, %dec_label_pc_10009e24
  store i32 268476036, i32* @lr, align 4
  %v2_10009e80 = call i32 @function_10009c58(i32 0, i32 32768)
  store i32 268476052, i32* @lr, align 4
  %v2_10009e90 = call i32 @function_10009c58(i32 1, i32 32770)
  store i32 268476068, i32* @lr, align 4
  %v2_10009ea0 = call i32 @function_10009c58(i32 2, i32 32770)
  br label %dec_label_pc_10009ea4

dec_label_pc_10009ea4:                            ; preds = %dec_label_pc_10009e4c.thread, %dec_label_pc_10009e74
  %v0_10009eb0 = load i32, i32* @r30, align 4
  %v1_10009eb0 = inttoptr i32 %v0_10009eb0 to i32*
  %v2_10009eb0 = load i32, i32* %v1_10009eb0, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v2_10009eb0, i32* inttoptr (i32 268547124 to i32*), align 4
  %v0_10009ed0 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10009ed0, i32* @global_var_1001b490.335, align 4
  br i1 false, label %dec_label_pc_10009ed8, label %dec_label_pc_10009f50

dec_label_pc_10009ed8:                            ; preds = %dec_label_pc_10009ea4, %dec_label_pc_10009ed8
  br i1 undef, label %dec_label_pc_10009ed8, label %dec_label_pc_10009f50

dec_label_pc_10009f50:                            ; preds = %dec_label_pc_10009ed8, %dec_label_pc_10009ea4
  %v0_10009efc = load i32, i32* %r28.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_10009efc)
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10009f60 = call i32 @function_10008aa0()
  %v2_10009f68 = inttoptr i32 %v0_10009f60 to i32*
  store i32 0, i32* %v2_10009f68, align 4
  %v0_10009f94 = load i32, i32* %r25.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_10009f94)
  %v0_10009fa0 = call i32 @function_10009960()
  ret i32 %v0_10009fa0

; uselistorder directives
  uselistorder i32 %v2_10009de8, { 1, 0 }
  uselistorder i32 %v1_10009de4, { 2, 1, 0 }
  uselistorder i32 %v1_10009db0, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v2_10009d90, { 1, 0, 2 }
  uselistorder i32* %r29.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7 }
  uselistorder i32 ()* @function_10009960, { 0, 2, 4, 3, 1 }
  uselistorder i1 false, { 0, 6, 7, 8, 2, 1, 3, 4, 5, 9, 10 }
  uselistorder i32 (i32, i32)* @function_10009c58, { 2, 1, 0 }
  uselistorder i32 4096, { 0, 2, 6, 3, 7, 4, 8, 5, 1 }
  uselistorder i32 14, { 24, 0, 4, 5, 11, 6, 7, 12, 13, 8, 9, 10, 14, 15, 1, 16, 17, 18, 2, 19, 20, 21, 22, 23, 3 }
  uselistorder i32* @r9, { 7, 1, 2, 3, 4, 5, 0, 6 }
  uselistorder label %dec_label_pc_10009ed8, { 1, 0 }
  uselistorder label %dec_label_pc_10009ea4, { 1, 0 }
  uselistorder label %dec_label_pc_10009e10, { 1, 0 }
  uselistorder label %dec_label_pc_10009de4, { 1, 0 }
  uselistorder label %dec_label_pc_10009dc4, { 1, 0 }
  uselistorder label %dec_label_pc_10009d90, { 1, 0 }
}

define i32 @function_10009fa4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009fa4:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009fbc = call i32 @__asm_mfcr()
  %v1_10009fc0 = and i32 %v0_10009fbc, 268435456
  %v3_10009fc0 = icmp eq i32 %v1_10009fc0, 0
  store i32 %v0_10009fbc, i32* %r31.global-to-local, align 4
  br i1 %v3_10009fc0, label %dec_label_pc_10009fd8, label %dec_label_pc_10009fcc

dec_label_pc_10009fcc:                            ; preds = %dec_label_pc_10009fa4
  %v0_10009fcc = call i32 @function_10008aa0()
  %v0_10009fd0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009fd0 = inttoptr i32 %v0_10009fcc to i32*
  store i32 %v0_10009fd0, i32* %v2_10009fd0, align 4
  br label %dec_label_pc_10009fd8

dec_label_pc_10009fd8:                            ; preds = %dec_label_pc_10009fa4, %dec_label_pc_10009fcc
  %v0_10009fe8 = phi i32 [ %v0_10009fbc, %dec_label_pc_10009fa4 ], [ -1, %dec_label_pc_10009fcc ]
  ret i32 %v0_10009fe8

; uselistorder directives
  uselistorder label %dec_label_pc_10009fd8, { 1, 0 }
}

define i32 @function_10009fec(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009fec:
  %r31.global-to-local = alloca i32, align 4
  br label %dec_label_pc_1000a000

dec_label_pc_1000a000:                            ; preds = %dec_label_pc_1000a000.backedge, %dec_label_pc_10009fec
  %v0_1000a00c = call i32 @__asm_mfcr()
  %v1_1000a010 = and i32 %v0_1000a00c, 268435456
  %v3_1000a010 = icmp eq i32 %v1_1000a010, 0
  store i32 %v0_1000a00c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a010, label %dec_label_pc_1000a000.backedge, label %dec_label_pc_1000a01c

dec_label_pc_1000a01c:                            ; preds = %dec_label_pc_1000a000
  %v0_1000a01c = call i32 @function_10008aa0()
  %v0_1000a020 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a020 = inttoptr i32 %v0_1000a01c to i32*
  store i32 %v0_1000a020, i32* %v2_1000a020, align 4
  br label %dec_label_pc_1000a000.backedge

dec_label_pc_1000a000.backedge:                   ; preds = %dec_label_pc_1000a01c, %dec_label_pc_1000a000
  br label %dec_label_pc_1000a000
}

define i32 @function_1000a028(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a028:
  %stack_var_-104 = alloca i32, align 4
  %v2_1000a034 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000a034, i32* @r29, align 4
  %v0_1000a03c = load i32, i32* @r4, align 4
  store i32 %v0_1000a03c, i32* @r30, align 4
  %v0_1000a04c = call i32 @__asm_mfcr()
  %v1_1000a050 = and i32 %v0_1000a04c, 268435456
  %v3_1000a050 = icmp eq i32 %v1_1000a050, 0
  store i32 -1, i32* @r28, align 4
  store i32 %v0_1000a04c, i32* @r31, align 4
  br i1 %v3_1000a050, label %dec_label_pc_1000a06c, label %dec_label_pc_1000a060

dec_label_pc_1000a060:                            ; preds = %dec_label_pc_1000a028
  %v0_1000a060 = call i32 @function_10008aa0()
  %v0_1000a064 = load i32, i32* @r31, align 4
  %v2_1000a064 = inttoptr i32 %v0_1000a060 to i32*
  store i32 %v0_1000a064, i32* %v2_1000a064, align 4
  br label %dec_label_pc_1000a084

dec_label_pc_1000a06c:                            ; preds = %dec_label_pc_1000a028
  %v3_1000a06c = icmp eq i32 %v0_1000a04c, 0
  store i32 %v0_1000a04c, i32* @r28, align 4
  br i1 %v3_1000a06c, label %dec_label_pc_1000a080, label %dec_label_pc_1000a084

dec_label_pc_1000a080:                            ; preds = %dec_label_pc_1000a06c
  %v0_1000a074 = load i32, i32* @r30, align 4
  store i32 268476548, i32* @lr, align 4
  %v4_1000a080 = call i32 @function_1000a5f0(i32* nonnull %stack_var_-104, i32 %v0_1000a074, i32 0)
  br label %dec_label_pc_1000a084

dec_label_pc_1000a084:                            ; preds = %dec_label_pc_1000a06c, %dec_label_pc_1000a060, %dec_label_pc_1000a080
  %v0_1000a088 = load i32, i32* @r28, align 4
  ret i32 %v0_1000a088

; uselistorder directives
  uselistorder i32 %v0_1000a04c, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000a084, { 2, 0, 1 }
}

define i32 @function_1000a09c(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000a09c:
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v0_1000a0b0 = call i32 @function_1000a12c()
  store i32 %v0_1000a0b0, i32* @r30, align 4
  %tmp18 = icmp slt i32 %v0_1000a0b0, 1
  br i1 %tmp18, label %dec_label_pc_1000a114, label %dec_label_pc_1000a0bc

dec_label_pc_1000a0bc:                            ; preds = %dec_label_pc_1000a09c
  %v0_1000a0bc = load i32, i32* @r31, align 4
  %v2_1000a0bc = add i32 %v0_1000a0bc, %v0_1000a0b0
  store i32 %v2_1000a0bc, i32* %r29.global-to-local, align 4
  %v2_1000a1043 = icmp ult i32 %v0_1000a0bc, %v2_1000a0bc
  br i1 %v2_1000a1043, label %dec_label_pc_1000a0c4, label %dec_label_pc_1000a114

dec_label_pc_1000a0c4:                            ; preds = %dec_label_pc_1000a0bc, %dec_label_pc_1000a0c4
  %v1_1000a0d4 = phi i32 [ %v2_1000a100, %dec_label_pc_1000a0c4 ], [ %v0_1000a0bc, %dec_label_pc_1000a0bc ]
  %v1_1000a10810.in = phi i32 [ %v2_1000a100, %dec_label_pc_1000a0c4 ], [ %v0_1000a0bc, %dec_label_pc_1000a0bc ]
  %v1_1000a10c11.in = phi i32 [ %v2_1000a100, %dec_label_pc_1000a0c4 ], [ %v0_1000a0bc, %dec_label_pc_1000a0bc ]
  %v1_1000a10810 = add i32 %v1_1000a10810.in, 11
  %v1_1000a10c11 = add i32 %v1_1000a10c11.in, 19
  %v1_1000a0c4 = add i32 %v1_1000a0d4, 4
  %v2_1000a0c4 = inttoptr i32 %v1_1000a0c4 to i32*
  %v3_1000a0c4 = load i32, i32* %v2_1000a0c4, align 4
  store i32 %v3_1000a0c4, i32* %r11.global-to-local, align 4
  %v1_1000a0c8 = add i32 %v1_1000a0d4, 12
  %v2_1000a0c8 = inttoptr i32 %v1_1000a0c8 to i32*
  %v3_1000a0c8 = load i32, i32* %v2_1000a0c8, align 4
  %v1_1000a0cc = add i32 %v1_1000a0d4, 16
  %v2_1000a0cc = inttoptr i32 %v1_1000a0cc to i16*
  %v3_1000a0cc = load i16, i16* %v2_1000a0cc, align 2
  %v4_1000a0cc = zext i16 %v3_1000a0cc to i32
  store i32 %v4_1000a0cc, i32* %r5.global-to-local, align 4
  %v1_1000a0d0 = add i32 %v1_1000a0d4, 18
  %v2_1000a0d0 = inttoptr i32 %v1_1000a0d0 to i8*
  %v3_1000a0d0 = load i8, i8* %v2_1000a0d0, align 1
  %v4_1000a0d0 = zext i8 %v3_1000a0d0 to i32
  store i32 %v4_1000a0d0, i32* %r9.global-to-local, align 4
  store i32 %v3_1000a0c8, i32* %v2_1000a0c4, align 4
  %v0_1000a0d8 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a0d8 = load i32, i32* @r31, align 4
  %v2_1000a0d8 = inttoptr i32 %v1_1000a0d8 to i32*
  store i32 %v0_1000a0d8, i32* %v2_1000a0d8, align 4
  %v0_1000a0dc = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a0dc = trunc i32 %v0_1000a0dc to i8
  %v2_1000a0dc = load i32, i32* @r31, align 4
  %v3_1000a0dc = add i32 %v2_1000a0dc, 10
  %v4_1000a0dc = inttoptr i32 %v3_1000a0dc to i8*
  store i8 %v1_1000a0dc, i8* %v4_1000a0dc, align 1
  %v0_1000a0e0 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000a0e0 = trunc i32 %v0_1000a0e0 to i16
  %v2_1000a0e0 = load i32, i32* @r31, align 4
  %v3_1000a0e0 = add i32 %v2_1000a0e0, 8
  %v4_1000a0e0 = inttoptr i32 %v3_1000a0e0 to i16*
  store i16 %v1_1000a0e0, i16* %v4_1000a0e0, align 2
  %v0_1000a0e4 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000a0e4 = add i32 %v0_1000a0e4, -19
  store i32 %v1_1000a0e4, i32* %r5.global-to-local, align 4
  store i32 268476652, i32* @lr, align 4
  %v3_1000a0e8 = call i32 @function_10008ae4(i32 %v1_1000a10810, i32 %v1_1000a10c11, i32 %v1_1000a0e4)
  %v0_1000a0ec = load i32, i32* @r31, align 4
  %v1_1000a0ec = add i32 %v0_1000a0ec, 8
  %v2_1000a0ec = inttoptr i32 %v1_1000a0ec to i16*
  %v3_1000a0ec = load i16, i16* %v2_1000a0ec, align 2
  %v4_1000a0ec = zext i16 %v3_1000a0ec to i32
  store i32 %v4_1000a0ec, i32* %r5.global-to-local, align 4
  store i32 268476668, i32* @lr, align 4
  %v3_1000a0f8 = call i32 @function_10008ae4(i32 %v0_1000a0ec, i32 %v0_1000a0ec, i32 %v4_1000a0ec)
  %v0_1000a0fc = load i32, i32* @r31, align 4
  %v1_1000a0fc = add i32 %v0_1000a0fc, 8
  %v2_1000a0fc = inttoptr i32 %v1_1000a0fc to i16*
  %v3_1000a0fc = load i16, i16* %v2_1000a0fc, align 2
  %v4_1000a0fc = zext i16 %v3_1000a0fc to i32
  %v2_1000a100 = add i32 %v4_1000a0fc, %v0_1000a0fc
  store i32 %v2_1000a100, i32* @r31, align 4
  %v1_1000a104 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a104 = icmp ult i32 %v2_1000a100, %v1_1000a104
  br i1 %v2_1000a104, label %dec_label_pc_1000a0c4, label %dec_label_pc_1000a104.dec_label_pc_1000a114.loopexit_crit_edge

dec_label_pc_1000a104.dec_label_pc_1000a114.loopexit_crit_edge: ; preds = %dec_label_pc_1000a0c4
  %v0_1000a118.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000a114

dec_label_pc_1000a114:                            ; preds = %dec_label_pc_1000a0bc, %dec_label_pc_1000a104.dec_label_pc_1000a114.loopexit_crit_edge, %dec_label_pc_1000a09c
  %v0_1000a118 = phi i32 [ %v0_1000a0b0, %dec_label_pc_1000a09c ], [ %v0_1000a118.pre.pre, %dec_label_pc_1000a104.dec_label_pc_1000a114.loopexit_crit_edge ], [ %v0_1000a0b0, %dec_label_pc_1000a0bc ]
  ret i32 %v0_1000a118

; uselistorder directives
  uselistorder i32 %v2_1000a100, { 3, 4, 2, 0, 1 }
  uselistorder i32 %v0_1000a0ec, { 1, 0, 2 }
  uselistorder i32 %v1_1000a0d4, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1000a0bc, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v0_1000a0b0, { 1, 2, 0, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @function_10008ae4, { 2, 1, 0 }
  uselistorder i32 11, { 0, 30, 29, 2, 10, 11, 12, 13, 14, 15, 1, 16, 17, 18, 19, 6, 20, 7, 21, 8, 22, 23, 24, 3, 25, 26, 4, 27, 28, 9, 5 }
  uselistorder label %dec_label_pc_1000a114, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a0c4, { 1, 0 }
}

define i32 @function_1000a12c() local_unnamed_addr {
dec_label_pc_1000a12c:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000a130 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000a130, i32* %stack_var_-48, align 4
  %v5_1000a130 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v4_1000a130, i32* %r9.global-to-local, align 4
  %v0_1000a13c = load i32, i32* @r5, align 4
  %v1_1000a13c = add i32 %v0_1000a13c, 30
  %v1_1000a140 = call i32 @__asm_rlwinm(i32 %v1_1000a13c, i32 0, i32 0, i32 27)
  store i32 %v5_1000a130, i32* @r31, align 4
  %v1_1000a150 = load i32, i32* @r1, align 4
  %v3_1000a150 = sub i32 %v1_1000a150, %v1_1000a140
  %v4_1000a150 = inttoptr i32 %v3_1000a150 to i32*
  store i32 %v4_1000a130, i32* %v4_1000a150, align 4
  %v0_1000a154 = load i32, i32* @r4, align 4
  store i32 %v0_1000a154, i32* @r28, align 4
  %v0_1000a158 = load i32, i32* @r5, align 4
  store i32 %v0_1000a158, i32* @r23, align 4
  %v0_1000a15c = load i32, i32* @r3, align 4
  store i32 %v0_1000a15c, i32* @r22, align 4
  %v1_1000a160 = add i32 %v3_1000a150, 23
  %v1_1000a164 = call i32 @__asm_rlwinm(i32 %v1_1000a160, i32 0, i32 0, i32 27)
  store i32 %v1_1000a164, i32* @r27, align 4
  store i32 %v1_1000a164, i32* %r4.global-to-local, align 4
  %v0_1000a174 = call i32 @__asm_mfcr()
  %v1_1000a178 = and i32 %v0_1000a174, 268435456
  store i32 %v1_1000a178, i32* %r9.global-to-local, align 4
  %v3_1000a178 = icmp eq i32 %v1_1000a178, 0
  store i32 %v0_1000a174, i32* %r30.global-to-local, align 4
  br i1 %v3_1000a178, label %dec_label_pc_1000a190, label %dec_label_pc_1000a184

dec_label_pc_1000a184:                            ; preds = %dec_label_pc_1000a12c
  %v0_1000a184 = call i32 @function_10008aa0()
  %v0_1000a188 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000a188 = inttoptr i32 %v0_1000a184 to i32*
  store i32 %v0_1000a188, i32* %v2_1000a188, align 4
  br label %dec_label_pc_1000a19c

dec_label_pc_1000a190:                            ; preds = %dec_label_pc_1000a12c
  %v3_1000a190 = icmp eq i32 %v0_1000a174, -1
  store i32 %v0_1000a174, i32* %r24.global-to-local, align 4
  br i1 %v3_1000a190, label %dec_label_pc_1000a19c, label %dec_label_pc_1000a1a4

dec_label_pc_1000a19c:                            ; preds = %dec_label_pc_1000a190, %dec_label_pc_1000a184
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000a268

dec_label_pc_1000a1a4:                            ; preds = %dec_label_pc_1000a190
  %v0_1000a1a4 = load i32, i32* @r28, align 4
  store i32 %v0_1000a1a4, i32* %r29.global-to-local, align 4
  store i32 %v1_1000a164, i32* %r30.global-to-local, align 4
  store i32 -1, i32* @r25, align 4
  store i32 -1, i32* @r26, align 4
  %v2_1000a24c12 = add i32 %v0_1000a174, %v1_1000a164
  %v1_1000a25013 = load i32, i32* @r23, align 4
  %v2_1000a25014 = add i32 %v1_1000a25013, %v0_1000a1a4
  store i32 %v2_1000a25014, i32* %r10.global-to-local, align 4
  %v2_1000a25415 = icmp ult i32 %v1_1000a164, %v2_1000a24c12
  %v1_1000a25817 = add i32 %v0_1000a1a4, 19
  store i32 %v1_1000a25817, i32* @r3, align 4
  %v1_1000a25c18 = add i32 %v1_1000a164, 19
  store i32 %v1_1000a25c18, i32* @r4, align 4
  br i1 %v2_1000a25415, label %dec_label_pc_1000a1b8, label %dec_label_pc_1000a264

dec_label_pc_1000a1b8:                            ; preds = %dec_label_pc_1000a1a4, %dec_label_pc_1000a200
  %v0_1000a1b819 = phi i32 [ %v2_1000a248, %dec_label_pc_1000a200 ], [ %v1_1000a164, %dec_label_pc_1000a1a4 ]
  %v1_1000a1b8 = add i32 %v0_1000a1b819, 16
  %v2_1000a1b8 = inttoptr i32 %v1_1000a1b8 to i16*
  %v3_1000a1b8 = load i16, i16* %v2_1000a1b8, align 2
  %v4_1000a1b8 = zext i16 %v3_1000a1b8 to i32
  %v1_1000a1bc = add nuw nsw i32 %v4_1000a1b8, 7
  store i32 %v1_1000a1bc, i32* %r9.global-to-local, align 4
  %v1_1000a1c0 = call i32 @__asm_rlwinm(i32 %v1_1000a1bc, i32 0, i32 0, i32 28)
  %v0_1000a1c4 = load i32, i32* %r29.global-to-local, align 4
  %v3_1000a1c4 = add i32 %v1_1000a1c0, %v0_1000a1c4
  store i32 %v3_1000a1c4, i32* %r11.global-to-local, align 4
  %v1_1000a1c8 = load i32, i32* %r10.global-to-local, align 4
  %v3_1000a1c8 = icmp ugt i32 %v3_1000a1c4, %v1_1000a1c8
  br i1 %v3_1000a1c8, label %dec_label_pc_1000a1d0, label %dec_label_pc_1000a200

dec_label_pc_1000a1d0:                            ; preds = %dec_label_pc_1000a1b8
  %v0_1000a1d0 = load i32, i32* @r22, align 4
  %v0_1000a1d4 = load i32, i32* @r25, align 4
  %v0_1000a1d8 = load i32, i32* @r26, align 4
  store i32 268476900, i32* @lr, align 4
  %v4_1000a1e0 = call i32 @function_1000a3a4(i32 %v0_1000a1d0, i32 %v0_1000a1d4, i32 %v0_1000a1d8, i32 0)
  %v0_1000a1e4 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000a1e4 = load i32, i32* @r28, align 4
  %v4_1000a1e4 = icmp eq i32 %v0_1000a1e4, %v1_1000a1e4
  br i1 %v4_1000a1e4, label %dec_label_pc_1000a1ec, label %dec_label_pc_1000a264

dec_label_pc_1000a1ec:                            ; preds = %dec_label_pc_1000a1d0
  %v0_1000a1ec = call i32 @function_10008aa0()
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1000a1f8 = inttoptr i32 %v0_1000a1ec to i32*
  store i32 22, i32* %v2_1000a1f8, align 4
  %v0_1000a26c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000a268

dec_label_pc_1000a200:                            ; preds = %dec_label_pc_1000a1b8
  %v2_1000a1c0 = trunc i32 %v1_1000a1c0 to i16
  %v0_1000a200 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000a200 = inttoptr i32 %v0_1000a200 to i32*
  %v2_1000a200 = load i32, i32* %v1_1000a200, align 4
  store i32 %v2_1000a200, i32* %r9.global-to-local, align 4
  %v1_1000a204 = add i32 %v0_1000a200, 4
  %v2_1000a204 = inttoptr i32 %v1_1000a204 to i32*
  %v3_1000a204 = load i32, i32* %v2_1000a204, align 4
  store i32 %v3_1000a204, i32* %r10.global-to-local, align 4
  %v1_1000a208 = add i32 %v0_1000a200, 8
  %v2_1000a208 = inttoptr i32 %v1_1000a208 to i32*
  %v3_1000a208 = load i32, i32* %v2_1000a208, align 4
  store i32 %v3_1000a208, i32* @r25, align 4
  %v1_1000a20c = add i32 %v0_1000a200, 12
  %v2_1000a20c = inttoptr i32 %v1_1000a20c to i32*
  %v3_1000a20c = load i32, i32* %v2_1000a20c, align 4
  store i32 %v3_1000a20c, i32* @r26, align 4
  %v2_1000a210 = inttoptr i32 %v0_1000a1c4 to i32*
  store i32 %v2_1000a200, i32* %v2_1000a210, align 4
  %v0_1000a214 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a214 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a214 = add i32 %v1_1000a214, 4
  %v3_1000a214 = inttoptr i32 %v2_1000a214 to i32*
  store i32 %v0_1000a214, i32* %v3_1000a214, align 4
  %v0_1000a218 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000a218 = add i32 %v0_1000a218, 8
  %v2_1000a218 = inttoptr i32 %v1_1000a218 to i32*
  %v3_1000a218 = load i32, i32* %v2_1000a218, align 4
  store i32 %v3_1000a218, i32* %r9.global-to-local, align 4
  %v1_1000a21c = add i32 %v0_1000a218, 12
  %v2_1000a21c = inttoptr i32 %v1_1000a21c to i32*
  %v3_1000a21c = load i32, i32* %v2_1000a21c, align 4
  store i32 %v3_1000a21c, i32* %r10.global-to-local, align 4
  %v3_1000a220 = load i32, i32* %r29.global-to-local, align 4
  %v4_1000a220 = add i32 %v3_1000a220, 16
  %v5_1000a220 = inttoptr i32 %v4_1000a220 to i16*
  store i16 %v2_1000a1c0, i16* %v5_1000a220, align 2
  %v0_1000a224 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a224 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a224 = add i32 %v1_1000a224, 8
  %v3_1000a224 = inttoptr i32 %v2_1000a224 to i32*
  store i32 %v0_1000a224, i32* %v3_1000a224, align 4
  %v0_1000a228 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a228 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a228 = add i32 %v1_1000a228, 12
  %v3_1000a228 = inttoptr i32 %v2_1000a228 to i32*
  store i32 %v0_1000a228, i32* %v3_1000a228, align 4
  %v0_1000a22c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000a22c = add i32 %v0_1000a22c, 18
  %v2_1000a22c = inttoptr i32 %v1_1000a22c to i8*
  %v3_1000a22c = load i8, i8* %v2_1000a22c, align 1
  %v2_1000a230 = load i32, i32* %r29.global-to-local, align 4
  %v3_1000a230 = add i32 %v2_1000a230, 18
  %v4_1000a230 = inttoptr i32 %v3_1000a230 to i8*
  store i8 %v3_1000a22c, i8* %v4_1000a230, align 1
  %v0_1000a234 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000a234, i32* %r29.global-to-local, align 4
  %v0_1000a238 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000a238 = add i32 %v0_1000a238, 16
  %v2_1000a238 = inttoptr i32 %v1_1000a238 to i16*
  %v3_1000a238 = load i16, i16* %v2_1000a238, align 2
  %v4_1000a238 = zext i16 %v3_1000a238 to i32
  %v1_1000a23c = add nsw i32 %v4_1000a238, -19
  store i32 %v1_1000a23c, i32* @r5, align 4
  store i32 268476996, i32* @lr, align 4
  %v0_1000a240 = call i32 @function_1000a6a0()
  %v0_1000a244 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000a244 = add i32 %v0_1000a244, 16
  %v2_1000a244 = inttoptr i32 %v1_1000a244 to i16*
  %v3_1000a244 = load i16, i16* %v2_1000a244, align 2
  %v4_1000a244 = zext i16 %v3_1000a244 to i32
  %v2_1000a248 = add i32 %v4_1000a244, %v0_1000a244
  store i32 %v2_1000a248, i32* %r30.global-to-local, align 4
  %v1_1000a24c.pre = load i32, i32* %r24.global-to-local, align 4
  %v0_1000a250.pre = load i32, i32* @r28, align 4
  %v0_1000a258.pre = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a24c = add i32 %v1_1000a24c.pre, %v1_1000a164
  %v1_1000a250 = load i32, i32* @r23, align 4
  %v2_1000a250 = add i32 %v1_1000a250, %v0_1000a250.pre
  store i32 %v2_1000a250, i32* %r10.global-to-local, align 4
  %v2_1000a254 = icmp ult i32 %v2_1000a248, %v2_1000a24c
  %v1_1000a258 = add i32 %v0_1000a258.pre, 19
  store i32 %v1_1000a258, i32* @r3, align 4
  %v1_1000a25c = add i32 %v2_1000a248, 19
  store i32 %v1_1000a25c, i32* @r4, align 4
  br i1 %v2_1000a254, label %dec_label_pc_1000a1b8, label %dec_label_pc_1000a264

dec_label_pc_1000a264:                            ; preds = %dec_label_pc_1000a1a4, %dec_label_pc_1000a200, %dec_label_pc_1000a1d0
  %v1_1000a264 = phi i32 [ %v0_1000a1e4, %dec_label_pc_1000a1d0 ], [ %v0_1000a1a4, %dec_label_pc_1000a1a4 ], [ %v0_1000a258.pre, %dec_label_pc_1000a200 ]
  %v0_1000a264 = phi i32 [ %v1_1000a1e4, %dec_label_pc_1000a1d0 ], [ %v0_1000a1a4, %dec_label_pc_1000a1a4 ], [ %v0_1000a250.pre, %dec_label_pc_1000a200 ]
  %v2_1000a264 = sub i32 %v1_1000a264, %v0_1000a264
  store i32 %v2_1000a264, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000a268

dec_label_pc_1000a268:                            ; preds = %dec_label_pc_1000a1ec, %dec_label_pc_1000a19c, %dec_label_pc_1000a264
  %v0_1000a26c = phi i32 [ %v0_1000a26c.pre, %dec_label_pc_1000a1ec ], [ -1, %dec_label_pc_1000a19c ], [ %v2_1000a264, %dec_label_pc_1000a264 ]
  %v0_1000a268 = load i32, i32* @r1, align 4
  %v1_1000a268 = inttoptr i32 %v0_1000a268 to i32*
  %v2_1000a268 = load i32, i32* %v1_1000a268, align 4
  store i32 %v2_1000a268, i32* %r11.global-to-local, align 4
  ret i32 %v0_1000a26c

; uselistorder directives
  uselistorder i32 %v2_1000a248, { 2, 1, 3, 0 }
  uselistorder i32 %v0_1000a200, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1000a1c0, { 1, 0 }
  uselistorder i32 %v0_1000a174, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v1_1000a164, { 4, 0, 1, 2, 3, 5, 6, 7 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32* %r30.global-to-local, { 0, 4, 1, 2, 3, 5, 6, 7, 8 }
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32* %r10.global-to-local, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder i32 18, { 4, 5, 6, 0, 3, 7, 8, 9, 10, 1, 2 }
  uselistorder i32 22, { 0, 1, 2, 3, 8, 4, 5, 6, 7, 9, 10, 11 }
  uselistorder i32 7, { 35, 49, 13, 14, 30, 15, 16, 31, 17, 18, 32, 33, 1, 19, 20, 21, 22, 2, 23, 3, 4, 24, 25, 34, 26, 27, 28, 0, 36, 5, 37, 38, 6, 39, 40, 41, 7, 8, 42, 9, 43, 10, 44, 29, 45, 46, 11, 47, 48, 12, 50 }
  uselistorder i32 19, { 16, 17, 1, 2, 0, 11, 12, 13, 3, 9, 10, 14, 15, 4, 18, 5, 19, 6, 20, 7, 8 }
  uselistorder i32* @r26, { 31, 32, 33, 66, 8, 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 44, 47, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65 }
  uselistorder i32* @r25, { 12, 13, 14, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 16, 17, 18, 0, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46 }
  uselistorder i32* @r27, { 25, 78, 79, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 19, 20, 1, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 0, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77 }
  uselistorder i32 23, { 3, 1, 4, 0, 2 }
  uselistorder i32* @r22, { 9, 10, 0, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* @r23, { 11, 0, 12, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 1, 20, 21, 22 }
  uselistorder i32* @r1, { 4, 5, 1, 2, 3, 0, 6, 7 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm, { 16, 17, 18, 27, 23, 25, 24, 26, 0, 29, 28, 2, 3, 4, 21, 22, 19, 20, 5, 6, 7, 8, 9, 10, 1, 11, 13, 14, 12, 15, 30 }
  uselistorder i32 27, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 30, { 4, 5, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1000a268, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a264, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000a1b8, { 1, 0 }
}

define i32 @function_1000a284() local_unnamed_addr {
dec_label_pc_1000a284:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a29c = call i32 @__asm_mfcr()
  %v1_1000a2a0 = and i32 %v0_1000a29c, 268435456
  %v3_1000a2a0 = icmp eq i32 %v1_1000a2a0, 0
  store i32 %v0_1000a29c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a2a0, label %dec_label_pc_1000a2b8, label %dec_label_pc_1000a2ac

dec_label_pc_1000a2ac:                            ; preds = %dec_label_pc_1000a284
  %v0_1000a2ac = call i32 @function_10008aa0()
  %v0_1000a2b0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a2b0 = inttoptr i32 %v0_1000a2ac to i32*
  store i32 %v0_1000a2b0, i32* %v2_1000a2b0, align 4
  br label %dec_label_pc_1000a2b8

dec_label_pc_1000a2b8:                            ; preds = %dec_label_pc_1000a284, %dec_label_pc_1000a2ac
  %v0_1000a2c8 = phi i32 [ %v0_1000a29c, %dec_label_pc_1000a284 ], [ -1, %dec_label_pc_1000a2ac ]
  ret i32 %v0_1000a2c8

; uselistorder directives
  uselistorder label %dec_label_pc_1000a2b8, { 1, 0 }
}

define i32 @function_1000a2cc() local_unnamed_addr {
dec_label_pc_1000a2cc:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a2e4 = call i32 @__asm_mfcr()
  %v1_1000a2e8 = and i32 %v0_1000a2e4, 268435456
  %v3_1000a2e8 = icmp eq i32 %v1_1000a2e8, 0
  store i32 %v0_1000a2e4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a2e8, label %dec_label_pc_1000a300, label %dec_label_pc_1000a2f4

dec_label_pc_1000a2f4:                            ; preds = %dec_label_pc_1000a2cc
  %v0_1000a2f4 = call i32 @function_10008aa0()
  %v0_1000a2f8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a2f8 = inttoptr i32 %v0_1000a2f4 to i32*
  store i32 %v0_1000a2f8, i32* %v2_1000a2f8, align 4
  br label %dec_label_pc_1000a300

dec_label_pc_1000a300:                            ; preds = %dec_label_pc_1000a2cc, %dec_label_pc_1000a2f4
  %v0_1000a310 = phi i32 [ %v0_1000a2e4, %dec_label_pc_1000a2cc ], [ -1, %dec_label_pc_1000a2f4 ]
  ret i32 %v0_1000a310

; uselistorder directives
  uselistorder label %dec_label_pc_1000a300, { 1, 0 }
}

define i32 @function_1000a314(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a314:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a32c = call i32 @__asm_mfcr()
  %v1_1000a330 = and i32 %v0_1000a32c, 268435456
  %v3_1000a330 = icmp eq i32 %v1_1000a330, 0
  store i32 %v0_1000a32c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a330, label %dec_label_pc_1000a348, label %dec_label_pc_1000a33c

dec_label_pc_1000a33c:                            ; preds = %dec_label_pc_1000a314
  %v0_1000a33c = call i32 @function_10008aa0()
  %v0_1000a340 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a340 = inttoptr i32 %v0_1000a33c to i32*
  store i32 %v0_1000a340, i32* %v2_1000a340, align 4
  br label %dec_label_pc_1000a348

dec_label_pc_1000a348:                            ; preds = %dec_label_pc_1000a314, %dec_label_pc_1000a33c
  %v0_1000a358 = phi i32 [ %v0_1000a32c, %dec_label_pc_1000a314 ], [ -1, %dec_label_pc_1000a33c ]
  ret i32 %v0_1000a358

; uselistorder directives
  uselistorder label %dec_label_pc_1000a348, { 1, 0 }
}

define i32 @function_1000a35c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a35c:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a374 = call i32 @__asm_mfcr()
  %v1_1000a378 = and i32 %v0_1000a374, 268435456
  %v3_1000a378 = icmp eq i32 %v1_1000a378, 0
  store i32 %v0_1000a374, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a378, label %dec_label_pc_1000a390, label %dec_label_pc_1000a384

dec_label_pc_1000a384:                            ; preds = %dec_label_pc_1000a35c
  %v0_1000a384 = call i32 @function_10008aa0()
  %v0_1000a388 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a388 = inttoptr i32 %v0_1000a384 to i32*
  store i32 %v0_1000a388, i32* %v2_1000a388, align 4
  br label %dec_label_pc_1000a390

dec_label_pc_1000a390:                            ; preds = %dec_label_pc_1000a35c, %dec_label_pc_1000a384
  %v0_1000a3a0 = phi i32 [ %v0_1000a374, %dec_label_pc_1000a35c ], [ -1, %dec_label_pc_1000a384 ]
  ret i32 %v0_1000a3a0

; uselistorder directives
  uselistorder label %dec_label_pc_1000a390, { 1, 0 }
}

define i32 @function_1000a3a4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000a3a4:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000a3a4 = load i32, i32* @lr, align 4
  store i32 140, i32* %r0.global-to-local, align 4
  %v0_1000a3d0 = call i32 @__asm_mfcr()
  %v1_1000a3d4 = and i32 %v0_1000a3d0, 268435456
  %v3_1000a3d4 = icmp eq i32 %v1_1000a3d4, 0
  store i32 %v0_1000a3d0, i32* %r31.global-to-local, align 4
  store i32 %v0_1000a3d0, i32* %r0.global-to-local, align 4
  br i1 %v3_1000a3d4, label %dec_label_pc_1000a3f8, label %dec_label_pc_1000a3e8

dec_label_pc_1000a3e8:                            ; preds = %dec_label_pc_1000a3a4
  %v0_1000a3e8 = call i32 @function_10008aa0()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_1000a3f0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a3f0 = inttoptr i32 %v0_1000a3e8 to i32*
  store i32 %v0_1000a3f0, i32* %v2_1000a3f0, align 4
  %v0_1000a3fc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000a3fc

dec_label_pc_1000a3f8:                            ; preds = %dec_label_pc_1000a3a4
  %v3_1000a3e0 = icmp eq i32 %v0_1000a3d0, 0
  br i1 %v3_1000a3e0, label %dec_label_pc_1000a408, label %dec_label_pc_1000a3fc

dec_label_pc_1000a3fc:                            ; preds = %dec_label_pc_1000a3f8, %dec_label_pc_1000a3e8
  %v0_1000a3fc = phi i32 [ %v0_1000a3d0, %dec_label_pc_1000a3f8 ], [ %v0_1000a3fc.pre, %dec_label_pc_1000a3e8 ]
  %tmp = icmp slt i32 %v0_1000a3fc, 0
  %v1_1000a400 = zext i1 %tmp to i32
  %v2_1000a400 = ashr i32 %v0_1000a3fc, 31
  %v3_1000a400 = and i32 %v2_1000a400, -2
  %v4_1000a400 = or i32 %v3_1000a400, %v1_1000a400
  br label %dec_label_pc_1000a410

dec_label_pc_1000a408:                            ; preds = %dec_label_pc_1000a3f8
  %v3_1000a408 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000a410

dec_label_pc_1000a410:                            ; preds = %dec_label_pc_1000a3fc, %dec_label_pc_1000a408
  %v0_1000a420 = phi i32 [ %v4_1000a400, %dec_label_pc_1000a3fc ], [ %v3_1000a408, %dec_label_pc_1000a408 ]
  store i32 %v0_1000a3a4, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000a420

; uselistorder directives
  uselistorder i32 %v0_1000a3fc, { 1, 0 }
  uselistorder i32 %v0_1000a3d0, { 0, 3, 2, 1, 4 }
  uselistorder i32 -2, { 7, 1, 0, 8, 9, 6, 2, 10, 3, 11, 4, 5 }
  uselistorder label %dec_label_pc_1000a410, { 1, 0 }
}

define i32 @function_1000a424(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a424:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a43c = call i32 @__asm_mfcr()
  %v1_1000a440 = and i32 %v0_1000a43c, 268435456
  %v3_1000a440 = icmp eq i32 %v1_1000a440, 0
  store i32 %v0_1000a43c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a440, label %dec_label_pc_1000a458, label %dec_label_pc_1000a44c

dec_label_pc_1000a44c:                            ; preds = %dec_label_pc_1000a424
  %v0_1000a44c = call i32 @function_10008aa0()
  %v0_1000a450 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a450 = inttoptr i32 %v0_1000a44c to i32*
  store i32 %v0_1000a450, i32* %v2_1000a450, align 4
  br label %dec_label_pc_1000a458

dec_label_pc_1000a458:                            ; preds = %dec_label_pc_1000a424, %dec_label_pc_1000a44c
  %v0_1000a468 = phi i32 [ %v0_1000a43c, %dec_label_pc_1000a424 ], [ -1, %dec_label_pc_1000a44c ]
  ret i32 %v0_1000a468

; uselistorder directives
  uselistorder label %dec_label_pc_1000a458, { 1, 0 }
}

define i32 @function_1000a46c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a46c:
  store i32 %arg1, i32* @r30, align 4
  %v3_1000a488 = load i32, i32* @global_var_1001b4b0.346, align 4
  %v3_1000a48c = icmp eq i32 %v3_1000a488, 0
  br i1 %v3_1000a48c, label %dec_label_pc_1000a494, label %dec_label_pc_1000a4a0

dec_label_pc_1000a494:                            ; preds = %dec_label_pc_1000a46c
  store i32 268477592, i32* @lr, align 4
  %v1_1000a494 = call i32 @function_1000aa60(i32 0)
  %v1_1000a498 = icmp slt i32 %v1_1000a494, 0
  br i1 %v1_1000a498, label %dec_label_pc_1000a4c0, label %dec_label_pc_1000a494.dec_label_pc_1000a4a0_crit_edge

dec_label_pc_1000a494.dec_label_pc_1000a4a0_crit_edge: ; preds = %dec_label_pc_1000a494
  %v0_1000a4a0.pre = load i32, i32* @r30, align 4
  %v3_1000a4a4.pre = load i32, i32* @global_var_1001b4b0.346, align 4
  br label %dec_label_pc_1000a4a0

dec_label_pc_1000a4a0:                            ; preds = %dec_label_pc_1000a494.dec_label_pc_1000a4a0_crit_edge, %dec_label_pc_1000a46c
  %v3_1000a4a4 = phi i32 [ %v3_1000a4a4.pre, %dec_label_pc_1000a494.dec_label_pc_1000a4a0_crit_edge ], [ %v3_1000a488, %dec_label_pc_1000a46c ]
  %v1_1000a4ac = phi i32 [ %v0_1000a4a0.pre, %dec_label_pc_1000a494.dec_label_pc_1000a4a0_crit_edge ], [ %arg1, %dec_label_pc_1000a46c ]
  %v3_1000a4a0 = icmp eq i32 %v1_1000a4ac, 0
  store i32 %v3_1000a4a4, i32* @r31, align 4
  br i1 %v3_1000a4a0, label %dec_label_pc_1000a4c4, label %dec_label_pc_1000a4b4

dec_label_pc_1000a4b4:                            ; preds = %dec_label_pc_1000a4a0
  %v2_1000a4ac = add i32 %v1_1000a4ac, %v3_1000a4a4
  store i32 268477624, i32* @lr, align 4
  %v1_1000a4b4 = call i32 @function_1000aa60(i32 %v2_1000a4ac)
  %tmp6 = icmp sgt i32 %v1_1000a4b4, -1
  br i1 %tmp6, label %dec_label_pc_1000a4b4.dec_label_pc_1000a4c4_crit_edge, label %dec_label_pc_1000a4c0

dec_label_pc_1000a4b4.dec_label_pc_1000a4c4_crit_edge: ; preds = %dec_label_pc_1000a4b4
  %v0_1000a4c8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000a4c4

dec_label_pc_1000a4c0:                            ; preds = %dec_label_pc_1000a4b4, %dec_label_pc_1000a494
  store i32 -1, i32* @r31, align 4
  br label %dec_label_pc_1000a4c4

dec_label_pc_1000a4c4:                            ; preds = %dec_label_pc_1000a4b4.dec_label_pc_1000a4c4_crit_edge, %dec_label_pc_1000a4a0, %dec_label_pc_1000a4c0
  %v0_1000a4c8 = phi i32 [ %v0_1000a4c8.pre, %dec_label_pc_1000a4b4.dec_label_pc_1000a4c4_crit_edge ], [ %v3_1000a4a4, %dec_label_pc_1000a4a0 ], [ -1, %dec_label_pc_1000a4c0 ]
  ret i32 %v0_1000a4c8

; uselistorder directives
  uselistorder i32 %v3_1000a4a4, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_1000aa60, { 1, 0 }
  uselistorder label %dec_label_pc_1000a4c4, { 2, 0, 1 }
}

define i32 @function_1000a4dc(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a4dc:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a4f4 = call i32 @__asm_mfcr()
  %v1_1000a4f8 = and i32 %v0_1000a4f4, 268435456
  %v3_1000a4f8 = icmp eq i32 %v1_1000a4f8, 0
  store i32 %v0_1000a4f4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a4f8, label %dec_label_pc_1000a510, label %dec_label_pc_1000a504

dec_label_pc_1000a504:                            ; preds = %dec_label_pc_1000a4dc
  %v0_1000a504 = call i32 @function_10008aa0()
  %v0_1000a508 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a508 = inttoptr i32 %v0_1000a504 to i32*
  store i32 %v0_1000a508, i32* %v2_1000a508, align 4
  br label %dec_label_pc_1000a510

dec_label_pc_1000a510:                            ; preds = %dec_label_pc_1000a4dc, %dec_label_pc_1000a504
  %v0_1000a520 = phi i32 [ %v0_1000a4f4, %dec_label_pc_1000a4dc ], [ -1, %dec_label_pc_1000a504 ]
  ret i32 %v0_1000a520

; uselistorder directives
  uselistorder label %dec_label_pc_1000a510, { 1, 0 }
}

define i32 @function_1000a524(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a524:
  %r10.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* %r28.global-to-local, align 4
  store i32 268477772, i32* @lr, align 4
  %v3_1000a548 = call i32 @function_10008b88(i32 %arg2, i32 0, i32 104)
  %v2_1000a54c = load i32, i32* %arg1, align 4
  %v1_1000a550 = add i32 %tmp, 4
  %v2_1000a550 = inttoptr i32 %v1_1000a550 to i32*
  %v3_1000a550 = load i32, i32* %v2_1000a550, align 4
  store i32 %v3_1000a550, i32* %r10.global-to-local, align 4
  %v1_1000a554 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a554 = inttoptr i32 %v1_1000a554 to i32*
  store i32 %v2_1000a54c, i32* %v2_1000a554, align 4
  %v0_1000a558 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a558 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a558 = add i32 %v1_1000a558, 4
  %v3_1000a558 = inttoptr i32 %v2_1000a558 to i32*
  store i32 %v0_1000a558, i32* %v3_1000a558, align 4
  %v0_1000a55c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a55c = add i32 %v0_1000a55c, 8
  %v2_1000a55c = inttoptr i32 %v1_1000a55c to i32*
  %v3_1000a55c = load i32, i32* %v2_1000a55c, align 4
  %v1_1000a560 = add i32 %v0_1000a55c, 12
  %v2_1000a560 = inttoptr i32 %v1_1000a560 to i32*
  %v3_1000a560 = load i32, i32* %v2_1000a560, align 4
  store i32 %v3_1000a560, i32* %r10.global-to-local, align 4
  %v1_1000a564 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a564 = add i32 %v1_1000a564, 8
  %v3_1000a564 = inttoptr i32 %v2_1000a564 to i32*
  store i32 %v3_1000a55c, i32* %v3_1000a564, align 4
  %v0_1000a568 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a568 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a568 = add i32 %v1_1000a568, 12
  %v3_1000a568 = inttoptr i32 %v2_1000a568 to i32*
  store i32 %v0_1000a568, i32* %v3_1000a568, align 4
  %v0_1000a56c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a56c = add i32 %v0_1000a56c, 16
  %v2_1000a56c = inttoptr i32 %v1_1000a56c to i32*
  %v3_1000a56c = load i32, i32* %v2_1000a56c, align 4
  %v1_1000a570 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a570 = add i32 %v1_1000a570, 16
  %v3_1000a570 = inttoptr i32 %v2_1000a570 to i32*
  store i32 %v3_1000a56c, i32* %v3_1000a570, align 4
  %v0_1000a574 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a574 = add i32 %v0_1000a574, 20
  %v2_1000a574 = inttoptr i32 %v1_1000a574 to i32*
  %v3_1000a574 = load i32, i32* %v2_1000a574, align 4
  %v1_1000a578 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a578 = add i32 %v1_1000a578, 20
  %v3_1000a578 = inttoptr i32 %v2_1000a578 to i32*
  store i32 %v3_1000a574, i32* %v3_1000a578, align 4
  %v0_1000a57c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a57c = add i32 %v0_1000a57c, 24
  %v2_1000a57c = inttoptr i32 %v1_1000a57c to i32*
  %v3_1000a57c = load i32, i32* %v2_1000a57c, align 4
  %v1_1000a580 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a580 = add i32 %v1_1000a580, 24
  %v3_1000a580 = inttoptr i32 %v2_1000a580 to i32*
  store i32 %v3_1000a57c, i32* %v3_1000a580, align 4
  %v0_1000a584 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a584 = add i32 %v0_1000a584, 28
  %v2_1000a584 = inttoptr i32 %v1_1000a584 to i32*
  %v3_1000a584 = load i32, i32* %v2_1000a584, align 4
  %v1_1000a588 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a588 = add i32 %v1_1000a588, 28
  %v3_1000a588 = inttoptr i32 %v2_1000a588 to i32*
  store i32 %v3_1000a584, i32* %v3_1000a588, align 4
  %v0_1000a58c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a58c = add i32 %v0_1000a58c, 32
  %v2_1000a58c = inttoptr i32 %v1_1000a58c to i32*
  %v3_1000a58c = load i32, i32* %v2_1000a58c, align 4
  %v1_1000a590 = add i32 %v0_1000a58c, 36
  %v2_1000a590 = inttoptr i32 %v1_1000a590 to i32*
  %v3_1000a590 = load i32, i32* %v2_1000a590, align 4
  store i32 %v3_1000a590, i32* %r10.global-to-local, align 4
  %v1_1000a594 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a594 = add i32 %v1_1000a594, 32
  %v3_1000a594 = inttoptr i32 %v2_1000a594 to i32*
  store i32 %v3_1000a58c, i32* %v3_1000a594, align 4
  %v0_1000a598 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a598 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a598 = add i32 %v1_1000a598, 36
  %v3_1000a598 = inttoptr i32 %v2_1000a598 to i32*
  store i32 %v0_1000a598, i32* %v3_1000a598, align 4
  %v0_1000a59c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a59c = add i32 %v0_1000a59c, 48
  %v2_1000a59c = inttoptr i32 %v1_1000a59c to i32*
  %v3_1000a59c = load i32, i32* %v2_1000a59c, align 4
  %v1_1000a5a0 = add i32 %v0_1000a59c, 52
  %v2_1000a5a0 = inttoptr i32 %v1_1000a5a0 to i32*
  %v3_1000a5a0 = load i32, i32* %v2_1000a5a0, align 4
  store i32 %v3_1000a5a0, i32* %r10.global-to-local, align 4
  %v1_1000a5a4 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a5a4 = add i32 %v1_1000a5a4, 48
  %v3_1000a5a4 = inttoptr i32 %v2_1000a5a4 to i32*
  store i32 %v3_1000a59c, i32* %v3_1000a5a4, align 4
  %v0_1000a5a8 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a5a8 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a5a8 = add i32 %v1_1000a5a8, 52
  %v3_1000a5a8 = inttoptr i32 %v2_1000a5a8 to i32*
  store i32 %v0_1000a5a8, i32* %v3_1000a5a8, align 4
  %v0_1000a5ac = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a5ac = add i32 %v0_1000a5ac, 56
  %v2_1000a5ac = inttoptr i32 %v1_1000a5ac to i32*
  %v3_1000a5ac = load i32, i32* %v2_1000a5ac, align 4
  %v1_1000a5b0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a5b0 = add i32 %v1_1000a5b0, 56
  %v3_1000a5b0 = inttoptr i32 %v2_1000a5b0 to i32*
  store i32 %v3_1000a5ac, i32* %v3_1000a5b0, align 4
  %v0_1000a5b4 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a5b4 = add i32 %v0_1000a5b4, 64
  %v2_1000a5b4 = inttoptr i32 %v1_1000a5b4 to i32*
  %v3_1000a5b4 = load i32, i32* %v2_1000a5b4, align 4
  %v1_1000a5b8 = add i32 %v0_1000a5b4, 68
  %v2_1000a5b8 = inttoptr i32 %v1_1000a5b8 to i32*
  %v3_1000a5b8 = load i32, i32* %v2_1000a5b8, align 4
  store i32 %v3_1000a5b8, i32* %r10.global-to-local, align 4
  %v1_1000a5bc = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a5bc = add i32 %v1_1000a5bc, 64
  %v3_1000a5bc = inttoptr i32 %v2_1000a5bc to i32*
  store i32 %v3_1000a5b4, i32* %v3_1000a5bc, align 4
  %v0_1000a5c0 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a5c0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a5c0 = add i32 %v1_1000a5c0, 68
  %v3_1000a5c0 = inttoptr i32 %v2_1000a5c0 to i32*
  store i32 %v0_1000a5c0, i32* %v3_1000a5c0, align 4
  %v0_1000a5c4 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a5c4 = add i32 %v0_1000a5c4, 72
  %v2_1000a5c4 = inttoptr i32 %v1_1000a5c4 to i32*
  %v3_1000a5c4 = load i32, i32* %v2_1000a5c4, align 4
  %v1_1000a5c8 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a5c8 = add i32 %v1_1000a5c8, 72
  %v3_1000a5c8 = inttoptr i32 %v2_1000a5c8 to i32*
  store i32 %v3_1000a5c4, i32* %v3_1000a5c8, align 4
  %v0_1000a5cc = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a5cc = add i32 %v0_1000a5cc, 80
  %v2_1000a5cc = inttoptr i32 %v1_1000a5cc to i32*
  %v3_1000a5cc = load i32, i32* %v2_1000a5cc, align 4
  %v1_1000a5d0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a5d0 = add i32 %v1_1000a5d0, 80
  %v3_1000a5d0 = inttoptr i32 %v2_1000a5d0 to i32*
  store i32 %v3_1000a5cc, i32* %v3_1000a5d0, align 4
  %v0_1000a5d4 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a5d4 = add i32 %v0_1000a5d4, 88
  %v2_1000a5d4 = inttoptr i32 %v1_1000a5d4 to i32*
  %v3_1000a5d4 = load i32, i32* %v2_1000a5d4, align 4
  %v1_1000a5d8 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a5d8 = add i32 %v1_1000a5d8, 88
  %v3_1000a5d8 = inttoptr i32 %v2_1000a5d8 to i32*
  store i32 %v3_1000a5d4, i32* %v3_1000a5d8, align 4
  ret i32 %v3_1000a548

; uselistorder directives
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 16, 18 }
  uselistorder i32* %r28.global-to-local, { 0, 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 11, 12 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1000a5f0(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a5f0:
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_1000a5f4 = load i32, i32* @lr, align 4
  store i32 %v0_1000a5f4, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %tmp, i32* @r28, align 4
  store i32 268477976, i32* @lr, align 4
  %v3_1000a614 = call i32 @function_10008b88(i32 %arg2, i32 0, i32 88)
  %v0_1000a618 = load i32, i32* @r28, align 4
  %v1_1000a618 = inttoptr i32 %v0_1000a618 to i32*
  %v2_1000a618 = load i32, i32* %v1_1000a618, align 4
  store i32 %v2_1000a618, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_1000a620 = load i32, i32* @r29, align 4
  %v2_1000a620 = add i32 %v1_1000a620, 4
  %v3_1000a620 = inttoptr i32 %v2_1000a620 to i32*
  store i32 %v2_1000a618, i32* %v3_1000a620, align 4
  %v0_1000a624 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a624 = load i32, i32* @r29, align 4
  %v2_1000a624 = inttoptr i32 %v1_1000a624 to i32*
  store i32 %v0_1000a624, i32* %v2_1000a624, align 4
  %v0_1000a628 = load i32, i32* @r28, align 4
  %v1_1000a628 = add i32 %v0_1000a628, 4
  %v2_1000a628 = inttoptr i32 %v1_1000a628 to i32*
  %v3_1000a628 = load i32, i32* %v2_1000a628, align 4
  store i32 %v3_1000a628, i32* %r0.global-to-local, align 4
  %v1_1000a62c = load i32, i32* @r29, align 4
  %v2_1000a62c = add i32 %v1_1000a62c, 12
  %v3_1000a62c = inttoptr i32 %v2_1000a62c to i32*
  store i32 %v3_1000a628, i32* %v3_1000a62c, align 4
  %v0_1000a630 = load i32, i32* @r28, align 4
  %v1_1000a630 = add i32 %v0_1000a630, 8
  %v2_1000a630 = inttoptr i32 %v1_1000a630 to i32*
  %v3_1000a630 = load i32, i32* %v2_1000a630, align 4
  store i32 %v3_1000a630, i32* %r0.global-to-local, align 4
  %v1_1000a634 = load i32, i32* @r29, align 4
  %v2_1000a634 = add i32 %v1_1000a634, 16
  %v3_1000a634 = inttoptr i32 %v2_1000a634 to i32*
  store i32 %v3_1000a630, i32* %v3_1000a634, align 4
  %v0_1000a638 = load i32, i32* @r28, align 4
  %v1_1000a638 = add i32 %v0_1000a638, 12
  %v2_1000a638 = inttoptr i32 %v1_1000a638 to i16*
  %v3_1000a638 = load i16, i16* %v2_1000a638, align 2
  %v4_1000a638 = zext i16 %v3_1000a638 to i32
  store i32 %v4_1000a638, i32* %r0.global-to-local, align 4
  %v1_1000a63c = load i32, i32* @r29, align 4
  %v2_1000a63c = add i32 %v1_1000a63c, 20
  %v3_1000a63c = inttoptr i32 %v2_1000a63c to i32*
  store i32 %v4_1000a638, i32* %v3_1000a63c, align 4
  %v0_1000a640 = load i32, i32* @r28, align 4
  %v1_1000a640 = add i32 %v0_1000a640, 16
  %v2_1000a640 = inttoptr i32 %v1_1000a640 to i32*
  %v3_1000a640 = load i32, i32* %v2_1000a640, align 4
  store i32 %v3_1000a640, i32* %r0.global-to-local, align 4
  %v1_1000a644 = load i32, i32* @r29, align 4
  %v2_1000a644 = add i32 %v1_1000a644, 24
  %v3_1000a644 = inttoptr i32 %v2_1000a644 to i32*
  store i32 %v3_1000a640, i32* %v3_1000a644, align 4
  %v0_1000a648 = load i32, i32* @r28, align 4
  %v1_1000a648 = add i32 %v0_1000a648, 20
  %v2_1000a648 = inttoptr i32 %v1_1000a648 to i32*
  %v3_1000a648 = load i32, i32* %v2_1000a648, align 4
  store i32 %v3_1000a648, i32* %r0.global-to-local, align 4
  %v1_1000a64c = load i32, i32* @r29, align 4
  %v2_1000a64c = add i32 %v1_1000a64c, 28
  %v3_1000a64c = inttoptr i32 %v2_1000a64c to i32*
  store i32 %v3_1000a648, i32* %v3_1000a64c, align 4
  %v0_1000a650 = load i32, i32* @r28, align 4
  %v1_1000a650 = add i32 %v0_1000a650, 24
  %v2_1000a650 = inttoptr i32 %v1_1000a650 to i32*
  %v3_1000a650 = load i32, i32* %v2_1000a650, align 4
  store i32 %v3_1000a650, i32* %r0.global-to-local, align 4
  %v0_1000a654 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a654 = load i32, i32* @r29, align 4
  %v2_1000a654 = add i32 %v1_1000a654, 32
  %v3_1000a654 = inttoptr i32 %v2_1000a654 to i32*
  store i32 %v0_1000a654, i32* %v3_1000a654, align 4
  %v0_1000a658 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a658 = load i32, i32* @r29, align 4
  %v2_1000a658 = add i32 %v1_1000a658, 36
  %v3_1000a658 = inttoptr i32 %v2_1000a658 to i32*
  store i32 %v0_1000a658, i32* %v3_1000a658, align 4
  %v0_1000a65c = load i32, i32* @r28, align 4
  %v1_1000a65c = add i32 %v0_1000a65c, 28
  %v2_1000a65c = inttoptr i32 %v1_1000a65c to i32*
  %v3_1000a65c = load i32, i32* %v2_1000a65c, align 4
  store i32 %v3_1000a65c, i32* %r0.global-to-local, align 4
  %v1_1000a660 = load i32, i32* @r29, align 4
  %v2_1000a660 = add i32 %v1_1000a660, 44
  %v3_1000a660 = inttoptr i32 %v2_1000a660 to i32*
  store i32 %v3_1000a65c, i32* %v3_1000a660, align 4
  %v0_1000a664 = load i32, i32* @r28, align 4
  %v1_1000a664 = add i32 %v0_1000a664, 32
  %v2_1000a664 = inttoptr i32 %v1_1000a664 to i32*
  %v3_1000a664 = load i32, i32* %v2_1000a664, align 4
  store i32 %v3_1000a664, i32* %r0.global-to-local, align 4
  %v1_1000a668 = load i32, i32* @r29, align 4
  %v2_1000a668 = add i32 %v1_1000a668, 48
  %v3_1000a668 = inttoptr i32 %v2_1000a668 to i32*
  store i32 %v3_1000a664, i32* %v3_1000a668, align 4
  %v0_1000a66c = load i32, i32* @r28, align 4
  %v1_1000a66c = add i32 %v0_1000a66c, 36
  %v2_1000a66c = inttoptr i32 %v1_1000a66c to i32*
  %v3_1000a66c = load i32, i32* %v2_1000a66c, align 4
  store i32 %v3_1000a66c, i32* %r0.global-to-local, align 4
  %v1_1000a670 = load i32, i32* @r29, align 4
  %v2_1000a670 = add i32 %v1_1000a670, 52
  %v3_1000a670 = inttoptr i32 %v2_1000a670 to i32*
  store i32 %v3_1000a66c, i32* %v3_1000a670, align 4
  %v0_1000a674 = load i32, i32* @r28, align 4
  %v1_1000a674 = add i32 %v0_1000a674, 40
  %v2_1000a674 = inttoptr i32 %v1_1000a674 to i32*
  %v3_1000a674 = load i32, i32* %v2_1000a674, align 4
  store i32 %v3_1000a674, i32* %r0.global-to-local, align 4
  %v1_1000a678 = load i32, i32* @r29, align 4
  %v2_1000a678 = add i32 %v1_1000a678, 56
  %v3_1000a678 = inttoptr i32 %v2_1000a678 to i32*
  store i32 %v3_1000a674, i32* %v3_1000a678, align 4
  %v0_1000a67c = load i32, i32* @r28, align 4
  %v1_1000a67c = add i32 %v0_1000a67c, 48
  %v2_1000a67c = inttoptr i32 %v1_1000a67c to i32*
  %v3_1000a67c = load i32, i32* %v2_1000a67c, align 4
  store i32 %v3_1000a67c, i32* %r0.global-to-local, align 4
  %v1_1000a680 = load i32, i32* @r29, align 4
  %v2_1000a680 = add i32 %v1_1000a680, 64
  %v3_1000a680 = inttoptr i32 %v2_1000a680 to i32*
  store i32 %v3_1000a67c, i32* %v3_1000a680, align 4
  %v0_1000a684 = load i32, i32* @r28, align 4
  %v1_1000a684 = add i32 %v0_1000a684, 56
  %v2_1000a684 = inttoptr i32 %v1_1000a684 to i32*
  %v3_1000a684 = load i32, i32* %v2_1000a684, align 4
  %v1_1000a688 = load i32, i32* @r29, align 4
  %v2_1000a688 = add i32 %v1_1000a688, 72
  %v3_1000a688 = inttoptr i32 %v2_1000a688 to i32*
  store i32 %v3_1000a684, i32* %v3_1000a688, align 4
  store i32 %v0_1000a5f4, i32* %r0.global-to-local, align 4
  ret i32 %v3_1000a614

; uselistorder directives
  uselistorder i32 72, { 2, 0, 1 }
  uselistorder i32 64, { 17, 12, 13, 2, 19, 11, 14, 0, 1, 15, 16, 3, 4, 18, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 56, { 7, 8, 0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32 40, { 7, 3, 0, 4, 5, 6, 8, 2, 1, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 52, { 4, 1, 2, 3, 5, 6, 0, 7 }
  uselistorder i32 48, { 3, 4, 1, 2, 5, 0, 6, 7 }
  uselistorder i32 36, { 2, 3, 0, 1 }
  uselistorder i32 24, { 13, 14, 1, 2, 20, 21, 22, 15, 16, 17, 3, 4, 5, 6, 7, 9, 10, 11, 12, 8, 18, 19, 23, 24, 25, 27, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 0, 73 }
  uselistorder i32 20, { 27, 28, 17, 18, 19, 20, 29, 30, 31, 32, 6, 7, 21, 8, 0, 22, 1, 2, 23, 3, 24, 25, 26, 33, 9, 34, 35, 36, 37, 38, 39, 40, 41, 42, 10, 43, 44, 45, 46, 47, 48, 11, 49, 50, 51, 52, 54, 53, 55, 56, 57, 58, 12, 59, 60, 61, 62, 63, 64, 65, 13, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 14, 77, 78, 79, 4, 15, 80, 81, 82, 5, 16, 83, 84, 85 }
  uselistorder i32 16, { 52, 53, 40, 41, 54, 55, 56, 57, 58, 43, 129, 130, 59, 60, 31, 32, 33, 44, 64, 61, 45, 34, 47, 16, 48, 49, 13, 0, 14, 1, 2, 50, 3, 46, 42, 35, 51, 36, 37, 38, 39, 17, 112, 113, 114, 115, 116, 4, 18, 62, 5, 6, 63, 65, 66, 67, 68, 19, 69, 70, 71, 72, 73, 74, 75, 20, 76, 77, 22, 78, 79, 21, 80, 81, 24, 82, 83, 7, 84, 85, 86, 23, 87, 88, 26, 89, 90, 91, 92, 93, 25, 94, 95, 8, 9, 28, 97, 98, 99, 10, 15, 100, 96, 27, 101, 102, 103, 29, 104, 105, 106, 11, 107, 110, 111, 108, 109, 117, 118, 119, 30, 120, 121, 122, 12, 123, 126, 127, 124, 125, 128 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1000a6a0() local_unnamed_addr {
dec_label_pc_1000a6a0:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1000a6a0 = load i32, i32* @r5, align 4
  %v1_1000a6a0 = call i32 @__asm_rlwinm.(i32 %v0_1000a6a0, i32 29, i32 3, i32 31)
  store i32 %v1_1000a6a0, i32* %r9.global-to-local, align 4
  %v4_1000a6a0 = icmp eq i32 %v1_1000a6a0, 0
  %v0_1000a6a4 = load i32, i32* @r4, align 4
  %v1_1000a6a4 = add i32 %v0_1000a6a4, -4
  store i32 %v1_1000a6a4, i32* %r4.global-to-local, align 4
  %v0_1000a6a8 = load i32, i32* @r3, align 4
  %v1_1000a6a8 = add i32 %v0_1000a6a8, -4
  store i32 %v1_1000a6a8, i32* @r11, align 4
  br i1 %v4_1000a6a0, label %dec_label_pc_1000a6d0, label %dec_label_pc_1000a6b0

dec_label_pc_1000a6b0:                            ; preds = %dec_label_pc_1000a6a0
  %v1_1000a6b0 = urem i32 %v1_1000a6a8, 4
  %v3_1000a6b0 = icmp eq i32 %v1_1000a6b0, 0
  br i1 %v3_1000a6b0, label %dec_label_pc_1000a6b8, label %dec_label_pc_1000a70c

dec_label_pc_1000a6b8:                            ; preds = %dec_label_pc_1000a72c.dec_label_pc_1000a6b8_crit_edge, %dec_label_pc_1000a6b0
  %v1_1000a6c4.pre = phi i32 [ %v1_1000a6a8, %dec_label_pc_1000a6b0 ], [ %v1_1000a6c4.pre.pre, %dec_label_pc_1000a72c.dec_label_pc_1000a6b8_crit_edge ]
  %v0_1000a6b8 = phi i32 [ %v1_1000a6a0, %dec_label_pc_1000a6b0 ], [ %v1_1000a72c, %dec_label_pc_1000a72c.dec_label_pc_1000a6b8_crit_edge ]
  %.0 = phi i32 [ undef, %dec_label_pc_1000a6b0 ], [ %v2_1000a714, %dec_label_pc_1000a72c.dec_label_pc_1000a6b8_crit_edge ]
  store i32 %v0_1000a6b8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000a6bc

dec_label_pc_1000a6bc:                            ; preds = %dec_label_pc_1000a6bc, %dec_label_pc_1000a6b8
  %v1_1000a6c4 = phi i32 [ %v2_1000a6c8, %dec_label_pc_1000a6bc ], [ %v1_1000a6c4.pre, %dec_label_pc_1000a6b8 ]
  %v0_1000a6bc = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a6bc = add i32 %v0_1000a6bc, 4
  %v2_1000a6bc = inttoptr i32 %v1_1000a6bc to i32*
  %v3_1000a6bc = load i32, i32* %v2_1000a6bc, align 4
  %v1_1000a6c0 = add i32 %v0_1000a6bc, 8
  %v2_1000a6c0 = inttoptr i32 %v1_1000a6c0 to i32*
  %v3_1000a6c0 = load i32, i32* %v2_1000a6c0, align 4
  store i32 %v3_1000a6c0, i32* %r9.global-to-local, align 4
  store i32 %v1_1000a6c0, i32* %r4.global-to-local, align 4
  %v2_1000a6c4 = add i32 %v1_1000a6c4, 4
  %v3_1000a6c4 = inttoptr i32 %v2_1000a6c4 to i32*
  store i32 %v3_1000a6bc, i32* %v3_1000a6c4, align 4
  %v0_1000a6c8 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a6c8 = load i32, i32* @r11, align 4
  %v2_1000a6c8 = add i32 %v1_1000a6c8, 8
  %v3_1000a6c8 = inttoptr i32 %v2_1000a6c8 to i32*
  store i32 %v0_1000a6c8, i32* %v3_1000a6c8, align 4
  store i32 %v2_1000a6c8, i32* @r11, align 4
  %v0_1000a6cc = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a6cc = add i32 %v0_1000a6cc, -1
  store i32 %v1_1000a6cc, i32* %ctr.global-to-local, align 4
  %v2_1000a6cc = icmp eq i32 %v1_1000a6cc, 0
  br i1 %v2_1000a6cc, label %dec_label_pc_1000a6d0, label %dec_label_pc_1000a6bc

dec_label_pc_1000a6d0:                            ; preds = %dec_label_pc_1000a6bc, %dec_label_pc_1000a72c, %dec_label_pc_1000a6a0
  %.1 = phi i32 [ undef, %dec_label_pc_1000a6a0 ], [ %v2_1000a714, %dec_label_pc_1000a72c ], [ %.0, %dec_label_pc_1000a6bc ]
  %v1_1000a6d0 = urem i32 %.1, 8
  store i32 %v1_1000a6d0, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_1000a6d0, 4
  br i1 %tmp, label %dec_label_pc_1000a6e8, label %dec_label_pc_1000a6dc

dec_label_pc_1000a6dc:                            ; preds = %dec_label_pc_1000a6d0
  %v0_1000a6dc = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a6dc = add i32 %v0_1000a6dc, 4
  %v2_1000a6dc = inttoptr i32 %v1_1000a6dc to i32*
  %v3_1000a6dc = load i32, i32* %v2_1000a6dc, align 4
  store i32 %v1_1000a6dc, i32* %r4.global-to-local, align 4
  %v1_1000a6e0 = add nsw i32 %v1_1000a6d0, -4
  store i32 %v1_1000a6e0, i32* @r5, align 4
  %v1_1000a6e4 = load i32, i32* @r11, align 4
  %v2_1000a6e4 = add i32 %v1_1000a6e4, 4
  %v3_1000a6e4 = inttoptr i32 %v2_1000a6e4 to i32*
  store i32 %v3_1000a6dc, i32* %v3_1000a6e4, align 4
  store i32 %v2_1000a6e4, i32* @r11, align 4
  %v0_1000a6e8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1000a6e8

dec_label_pc_1000a6e8:                            ; preds = %dec_label_pc_1000a6d0, %dec_label_pc_1000a6dc
  %v0_1000a6e8 = phi i32 [ %v1_1000a6d0, %dec_label_pc_1000a6d0 ], [ %v0_1000a6e8.pre, %dec_label_pc_1000a6dc ]
  %v3_1000a6e8 = icmp eq i32 %v0_1000a6e8, 0
  %v0_1000a6ec = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000a6e8, i32 %v0_1000a6ec)
  %v0_1000a6f0 = load i32, i32* @r5, align 4
  store i32 %v0_1000a6f0, i32* %ctr.global-to-local, align 4
  %v0_1000a6f4 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a6f4 = add i32 %v0_1000a6f4, 3
  store i32 %v1_1000a6f4, i32* %r4.global-to-local, align 4
  %v0_1000a6f8 = load i32, i32* @r11, align 4
  %v1_1000a6f8 = add i32 %v0_1000a6f8, 3
  store i32 %v1_1000a6f8, i32* %r9.global-to-local, align 4
  %v1_1000a6fc9 = add i32 %v0_1000a6f4, 4
  %v2_1000a6fc10 = inttoptr i32 %v1_1000a6fc9 to i8*
  %v3_1000a6fc11 = load i8, i8* %v2_1000a6fc10, align 1
  store i32 %v1_1000a6fc9, i32* %r4.global-to-local, align 4
  %v3_1000a70013 = add i32 %v0_1000a6f8, 4
  %v4_1000a70014 = inttoptr i32 %v3_1000a70013 to i8*
  store i8 %v3_1000a6fc11, i8* %v4_1000a70014, align 1
  store i32 %v3_1000a70013, i32* %r9.global-to-local, align 4
  %v0_1000a70415 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a70416 = add i32 %v0_1000a70415, -1
  store i32 %v1_1000a70416, i32* %ctr.global-to-local, align 4
  %v2_1000a70417 = icmp eq i32 %v1_1000a70416, 0
  br i1 %v2_1000a70417, label %dec_label_pc_1000a738, label %dec_label_pc_1000a6fc.dec_label_pc_1000a6fc_crit_edge

dec_label_pc_1000a6fc.dec_label_pc_1000a6fc_crit_edge: ; preds = %dec_label_pc_1000a6e8, %dec_label_pc_1000a6fc.dec_label_pc_1000a6fc_crit_edge
  %v3_1000a70018 = phi i32 [ %v3_1000a700, %dec_label_pc_1000a6fc.dec_label_pc_1000a6fc_crit_edge ], [ %v3_1000a70013, %dec_label_pc_1000a6e8 ]
  %v0_1000a6fc.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a6fc = add i32 %v0_1000a6fc.pre, 1
  %v2_1000a6fc = inttoptr i32 %v1_1000a6fc to i8*
  %v3_1000a6fc = load i8, i8* %v2_1000a6fc, align 1
  store i32 %v1_1000a6fc, i32* %r4.global-to-local, align 4
  %v3_1000a700 = add i32 %v3_1000a70018, 1
  %v4_1000a700 = inttoptr i32 %v3_1000a700 to i8*
  store i8 %v3_1000a6fc, i8* %v4_1000a700, align 1
  store i32 %v3_1000a700, i32* %r9.global-to-local, align 4
  %v0_1000a704 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a704 = add i32 %v0_1000a704, -1
  store i32 %v1_1000a704, i32* %ctr.global-to-local, align 4
  %v2_1000a704 = icmp eq i32 %v1_1000a704, 0
  br i1 %v2_1000a704, label %dec_label_pc_1000a738, label %dec_label_pc_1000a6fc.dec_label_pc_1000a6fc_crit_edge

dec_label_pc_1000a70c:                            ; preds = %dec_label_pc_1000a6b0
  %v1_1000a70c = sub nsw i32 4, %v1_1000a6b0
  store i32 %v1_1000a70c, i32* %ctr.global-to-local, align 4
  %v1_1000a714 = load i32, i32* @r5, align 4
  %v2_1000a714 = sub i32 %v1_1000a714, %v1_1000a70c
  br label %dec_label_pc_1000a718

dec_label_pc_1000a718:                            ; preds = %dec_label_pc_1000a718.dec_label_pc_1000a718_crit_edge, %dec_label_pc_1000a70c
  %v2_1000a720 = phi i32 [ %v1_1000a724, %dec_label_pc_1000a718.dec_label_pc_1000a718_crit_edge ], [ %v1_1000a6a8, %dec_label_pc_1000a70c ]
  %v0_1000a718 = phi i32 [ %v0_1000a718.pre, %dec_label_pc_1000a718.dec_label_pc_1000a718_crit_edge ], [ %v1_1000a6a4, %dec_label_pc_1000a70c ]
  %v1_1000a718 = add i32 %v0_1000a718, 4
  %v2_1000a718 = inttoptr i32 %v1_1000a718 to i8*
  %v3_1000a718 = load i8, i8* %v2_1000a718, align 1
  %v1_1000a71c = add i32 %v0_1000a718, 1
  store i32 %v1_1000a71c, i32* %r4.global-to-local, align 4
  %v3_1000a720 = add i32 %v2_1000a720, 4
  %v4_1000a720 = inttoptr i32 %v3_1000a720 to i8*
  store i8 %v3_1000a718, i8* %v4_1000a720, align 1
  %v0_1000a724 = load i32, i32* @r11, align 4
  %v1_1000a724 = add i32 %v0_1000a724, 1
  store i32 %v1_1000a724, i32* @r11, align 4
  %v0_1000a728 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a728 = add i32 %v0_1000a728, -1
  store i32 %v1_1000a728, i32* %ctr.global-to-local, align 4
  %v2_1000a728 = icmp eq i32 %v1_1000a728, 0
  br i1 %v2_1000a728, label %dec_label_pc_1000a72c, label %dec_label_pc_1000a718.dec_label_pc_1000a718_crit_edge

dec_label_pc_1000a718.dec_label_pc_1000a718_crit_edge: ; preds = %dec_label_pc_1000a718
  %v0_1000a718.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000a718

dec_label_pc_1000a72c:                            ; preds = %dec_label_pc_1000a718
  %v1_1000a72c = call i32 @__asm_rlwinm.(i32 %v2_1000a714, i32 29, i32 3, i32 31)
  store i32 %v1_1000a72c, i32* %r9.global-to-local, align 4
  %v4_1000a72c = icmp eq i32 %v1_1000a72c, 0
  br i1 %v4_1000a72c, label %dec_label_pc_1000a6d0, label %dec_label_pc_1000a72c.dec_label_pc_1000a6b8_crit_edge

dec_label_pc_1000a72c.dec_label_pc_1000a6b8_crit_edge: ; preds = %dec_label_pc_1000a72c
  %v1_1000a6c4.pre.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_1000a6b8

dec_label_pc_1000a738:                            ; preds = %dec_label_pc_1000a6fc.dec_label_pc_1000a6fc_crit_edge, %dec_label_pc_1000a6e8
  %v0_1000a738 = load i32, i32* @r3, align 4
  ret i32 %v0_1000a738

; uselistorder directives
  uselistorder i32 %v1_1000a72c, { 1, 2, 0 }
  uselistorder i32 %v1_1000a728, { 1, 0 }
  uselistorder i32 %v1_1000a724, { 1, 0 }
  uselistorder i32 %v0_1000a718, { 1, 0 }
  uselistorder i32 %v2_1000a714, { 2, 1, 0 }
  uselistorder i32 %v1_1000a704, { 1, 0 }
  uselistorder i32 %v3_1000a700, { 1, 2, 0 }
  uselistorder i32 %v1_1000a6d0, { 3, 2, 1, 0 }
  uselistorder i32 %v1_1000a6cc, { 1, 0 }
  uselistorder i32 %v2_1000a6c8, { 1, 2, 0 }
  uselistorder i32 %v1_1000a6b0, { 1, 0 }
  uselistorder i32 %v1_1000a6a8, { 2, 1, 0, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 4, 3, 0, 5, 8, 6, 10, 7, 9, 11 }
  uselistorder i32* %ctr.global-to-local, { 1, 2, 3, 5, 4, 0, 6, 7, 8, 9, 10 }
  uselistorder i32 undef, { 1, 0, 2, 3, 4 }
  uselistorder i32* @r11, { 0, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm., { 4, 5, 6, 7, 0, 1, 2, 3 }
  uselistorder i32 29, { 30, 31, 26, 28, 27, 29, 0, 1, 34, 35, 32, 33, 36, 37, 24, 25, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 2, 3, 14, 15, 18, 19, 20, 21, 16, 17, 22, 23 }
  uselistorder label %dec_label_pc_1000a6fc.dec_label_pc_1000a6fc_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000a6e8, { 1, 0 }
  uselistorder label %dec_label_pc_1000a6d0, { 1, 0, 2 }
}

define i32 @function_1000a73c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_1000a73c:
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 268478296, i32* @lr, align 4
  %v0_1000a754 = call i32 @function_1000a6a0()
  %v0_1000a75c = load i32, i32* @r28, align 4
  %v1_1000a75c = load i32, i32* @r29, align 4
  %v2_1000a75c = add i32 %v1_1000a75c, %v0_1000a75c
  ret i32 %v2_1000a75c

; uselistorder directives
  uselistorder i32* @r28, { 11, 12, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 2, 102, 103, 104, 105, 106, 107, 344, 345, 346, 347, 348, 312, 313, 314, 315, 316, 317, 318, 319, 320, 332, 333, 334, 335, 13, 14, 15, 16, 17, 108, 109, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 4, 36, 3, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 65, 66, 67, 59, 5, 60, 61, 62, 63, 64, 6, 10, 68, 1, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 110, 111, 112, 113, 114, 115, 116, 7, 117, 118, 119, 120, 121, 122, 123, 124, 0, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 8, 169, 170, 171, 172, 173, 176, 177, 174, 175, 180, 181, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 242, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 336, 337, 338, 339, 9, 340, 341, 342, 343 }
}

define i32 @function_1000a770(i8* %arg1) local_unnamed_addr {
dec_label_pc_1000a770:
  %r5.global-to-local = alloca i32, align 4
  %v3_1000a770 = icmp eq i8* %arg1, null
  br i1 %v3_1000a770, label %dec_label_pc_1000a828, label %dec_label_pc_1000a778

dec_label_pc_1000a778:                            ; preds = %dec_label_pc_1000a770
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_1000a78c.pre = load i32, i32* bitcast (i32** @global_var_1001b43c.347 to i32*), align 4
  br label %dec_label_pc_1000a788

dec_label_pc_1000a788:                            ; preds = %dec_label_pc_1000a778, %dec_label_pc_1000a800
  %v0_1000a800 = phi i32 [ 0, %dec_label_pc_1000a778 ], [ %v2_1000a808, %dec_label_pc_1000a800 ]
  %v0_1000a804 = phi i32 [ 1, %dec_label_pc_1000a778 ], [ %v1_1000a804, %dec_label_pc_1000a800 ]
  %v0_1000a788 = phi i32 [ %tmp, %dec_label_pc_1000a778 ], [ %v0_1000a7883, %dec_label_pc_1000a800 ]
  %v1_1000a788 = inttoptr i32 %v0_1000a788 to i8*
  %v2_1000a788 = load i8, i8* %v1_1000a788, align 1
  %v3_1000a788 = zext i8 %v2_1000a788 to i32
  %v1_1000a790 = mul nuw nsw i32 %v3_1000a788, 2
  %v2_1000a794 = add i32 %v1_1000a790, %v3_1000a78c.pre
  %v3_1000a794 = inttoptr i32 %v2_1000a794 to i16*
  %v4_1000a794 = load i16, i16* %v3_1000a794, align 2
  %v1_1000a798 = and i16 %v4_1000a794, 8
  %v3_1000a798 = icmp eq i16 %v1_1000a798, 0
  br i1 %v3_1000a798, label %dec_label_pc_1000a828, label %dec_label_pc_1000a7a0

dec_label_pc_1000a7a0:                            ; preds = %dec_label_pc_1000a788
  br label %dec_label_pc_1000a7b8

dec_label_pc_1000a7a8:                            ; preds = %dec_label_pc_1000a7b8
  %v1_1000a7bc = mul i32 %v1_1000a808, 10
  %v2_1000a7c4 = add i32 %v3_1000a7b8, %v1_1000a7bc
  %v1_1000a7a8 = add i32 %v2_1000a7c4, -48
  %v1_1000a7ac = add i32 %v0_1000a7f0, 1
  %v2_1000a7b0 = icmp sgt i32 %v1_1000a7a8, 255
  br i1 %v2_1000a7b0, label %dec_label_pc_1000a828, label %dec_label_pc_1000a7b8

dec_label_pc_1000a7b8:                            ; preds = %dec_label_pc_1000a7a8, %dec_label_pc_1000a7a0
  %v1_1000a808 = phi i32 [ %v1_1000a7a8, %dec_label_pc_1000a7a8 ], [ 0, %dec_label_pc_1000a7a0 ]
  %v0_1000a7f0 = phi i32 [ %v1_1000a7ac, %dec_label_pc_1000a7a8 ], [ %v0_1000a788, %dec_label_pc_1000a7a0 ]
  %v1_1000a7b8 = inttoptr i32 %v0_1000a7f0 to i8*
  %v2_1000a7b8 = load i8, i8* %v1_1000a7b8, align 1
  %v3_1000a7b8 = zext i8 %v2_1000a7b8 to i32
  %v1_1000a7c0 = mul nuw nsw i32 %v3_1000a7b8, 2
  %v2_1000a7c8 = add i32 %v1_1000a7c0, %v3_1000a78c.pre
  %v3_1000a7c8 = inttoptr i32 %v2_1000a7c8 to i16*
  %v4_1000a7c8 = load i16, i16* %v3_1000a7c8, align 2
  %v5_1000a7c8 = zext i16 %v4_1000a7c8 to i32
  %v1_1000a7cc = and i32 %v5_1000a7c8, 8
  %v3_1000a7cc = icmp eq i32 %v1_1000a7cc, 0
  br i1 %v3_1000a7cc, label %dec_label_pc_1000a7d4, label %dec_label_pc_1000a7a8

dec_label_pc_1000a7d4:                            ; preds = %dec_label_pc_1000a7b8
  %v2_1000a7d4 = icmp sgt i32 %v0_1000a804, 3
  br i1 %v2_1000a7d4, label %dec_label_pc_1000a7ec, label %dec_label_pc_1000a7dc

dec_label_pc_1000a7dc:                            ; preds = %dec_label_pc_1000a7d4
  %v3_1000a7dc = icmp eq i8 %v2_1000a7b8, 46
  br i1 %v3_1000a7dc, label %dec_label_pc_1000a7e4, label %dec_label_pc_1000a828

dec_label_pc_1000a7e4:                            ; preds = %dec_label_pc_1000a7dc
  %v1_1000a7e4 = add i32 %v0_1000a7f0, 1
  br label %dec_label_pc_1000a800

dec_label_pc_1000a7ec:                            ; preds = %dec_label_pc_1000a7d4
  %v3_1000a7ec = icmp eq i8 %v2_1000a7b8, 0
  %v1_1000a7f0 = add i32 %v0_1000a7f0, 1
  br i1 %v3_1000a7ec, label %dec_label_pc_1000a800, label %dec_label_pc_1000a7f8

dec_label_pc_1000a7f8:                            ; preds = %dec_label_pc_1000a7ec
  %v1_1000a7f8 = and i32 %v5_1000a7c8, 32
  %v3_1000a7f8 = icmp eq i32 %v1_1000a7f8, 0
  br i1 %v3_1000a7f8, label %dec_label_pc_1000a828, label %dec_label_pc_1000a800

dec_label_pc_1000a800:                            ; preds = %dec_label_pc_1000a7f8, %dec_label_pc_1000a7ec, %dec_label_pc_1000a7e4
  %v0_1000a7883 = phi i32 [ %v1_1000a7f0, %dec_label_pc_1000a7f8 ], [ %v1_1000a7f0, %dec_label_pc_1000a7ec ], [ %v1_1000a7e4, %dec_label_pc_1000a7e4 ]
  %v1_1000a800 = mul i32 %v0_1000a800, 256
  %v1_1000a804 = add nuw nsw i32 %v0_1000a804, 1
  %v2_1000a808 = or i32 %v1_1000a808, %v1_1000a800
  store i32 %v2_1000a808, i32* %r5.global-to-local, align 4
  %tmp10 = icmp slt i32 %v1_1000a804, 5
  br i1 %tmp10, label %dec_label_pc_1000a788, label %dec_label_pc_1000a814

dec_label_pc_1000a814:                            ; preds = %dec_label_pc_1000a800
  %v0_1000a814 = load i32, i32* @r4, align 4
  %v3_1000a814 = icmp eq i32 %v0_1000a814, 0
  %v0_1000a81c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000a814, i32 %v0_1000a81c)
  %v0_1000a820 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000a820 = load i32, i32* @r4, align 4
  %v2_1000a820 = inttoptr i32 %v1_1000a820 to i32*
  store i32 %v0_1000a820, i32* %v2_1000a820, align 4
  ret i32 1

dec_label_pc_1000a828:                            ; preds = %dec_label_pc_1000a7dc, %dec_label_pc_1000a7f8, %dec_label_pc_1000a788, %dec_label_pc_1000a7a8, %dec_label_pc_1000a770
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_1000a808, { 1, 0 }
  uselistorder i32 %v1_1000a804, { 1, 0 }
  uselistorder i32 %v0_1000a7f0, { 0, 1, 3, 2 }
  uselistorder i32 5, { 33, 3, 34, 35, 50, 51, 1, 36, 37, 38, 4, 39, 40, 5, 6, 7, 8, 9, 10, 41, 11, 12, 13, 52, 0, 47, 48, 2, 49, 42, 43, 44, 45, 53, 14, 16, 17, 54, 15, 55, 20, 19, 56, 18, 22, 57, 21, 25, 24, 58, 23, 46, 59, 26, 28, 29, 27, 31, 32, 30, 60, 61, 62, 63, 64 }
  uselistorder i8 0, { 5, 9, 10, 7, 11, 12, 1, 13, 14, 15, 16, 17, 19, 21, 18, 2, 20, 3, 22, 23, 6, 8, 24, 25, 26, 27, 28, 29, 30, 31, 4, 32, 33, 34, 35, 37, 36, 0, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50 }
  uselistorder i8 46, { 1, 2, 3, 4, 0 }
  uselistorder i32 8, { 116, 3, 117, 118, 45, 32, 33, 46, 47, 48, 49, 50, 51, 121, 122, 11, 119, 120, 105, 104, 102, 103, 89, 90, 91, 106, 107, 108, 109, 110, 111, 4, 37, 38, 39, 5, 123, 6, 52, 53, 54, 55, 56, 57, 7, 8, 9, 40, 41, 42, 14, 44, 43, 34, 35, 36, 15, 84, 26, 27, 28, 29, 58, 16, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 30, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 12, 85, 86, 87, 88, 13, 17, 92, 18, 93, 19, 94, 20, 95, 21, 96, 97, 22, 98, 23, 99, 24, 100, 25, 101, 10, 112, 113, 31, 114, 115, 0, 1, 2 }
  uselistorder i32 255, { 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 -48, { 1, 0 }
  uselistorder i32 10, { 70, 37, 5, 3, 0, 13, 14, 15, 25, 26, 27, 28, 29, 30, 16, 31, 32, 33, 17, 18, 19, 6, 7, 34, 24, 35, 2, 36, 20, 1, 8, 9, 38, 39, 40, 41, 21, 42, 22, 43, 44, 45, 46, 47, 48, 49, 4, 50, 10, 51, 52, 53, 54, 11, 55, 56, 57, 58, 59, 12, 60, 61, 62, 63, 64, 65, 66, 67, 68, 23, 69 }
  uselistorder i16 0, { 0, 2, 3, 4, 5, 7, 6, 1, 8, 9, 10, 11 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000a828, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_1000a788, { 1, 0 }
}

define i32 @function_1000a830(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a830:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_1000a834 = load i32, i32* @lr, align 4
  store i32 %v0_1000a834, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1000a840 = icmp eq i32* %arg2, null
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg1, i32* @r29, align 4
  %v1_1000a850 = add i32 %tmp, 4
  store i32 %v1_1000a850, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  %v2_1000a858 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %v2_1000a858, i32* @r3, align 4
  br i1 %v3_1000a840, label %dec_label_pc_1000a880, label %dec_label_pc_1000a860

dec_label_pc_1000a860:                            ; preds = %dec_label_pc_1000a830
  %v2_1000a860 = load i32, i32* %arg2, align 4
  store i32 %v2_1000a860, i32* %r0.global-to-local, align 4
  store i32 268478572, i32* @lr, align 4
  %v0_1000a868 = call i32 @function_1000a6a0()
  %v0_1000a86c = load i32, i32* @r31, align 4
  %v1_1000a86c = add i32 %v0_1000a86c, 132
  %v2_1000a86c = inttoptr i32 %v1_1000a86c to i32*
  %v3_1000a86c = load i32, i32* %v2_1000a86c, align 4
  store i32 %v3_1000a86c, i32* %r0.global-to-local, align 4
  %v1_1000a878 = add i32 %v0_1000a86c, 136
  %v2_1000a878 = inttoptr i32 %v1_1000a878 to i32*
  %v3_1000a878 = load i32, i32* %v2_1000a878, align 4
  store i32 %v3_1000a878, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000a880

dec_label_pc_1000a880:                            ; preds = %dec_label_pc_1000a830, %dec_label_pc_1000a860
  store i32 268478624, i32* @lr, align 4
  %v0_1000a89c = call i32 @function_1000aa94()
  %v0_1000a8a0 = load i32, i32* @r30, align 4
  %v3_1000a8a0 = icmp eq i32 %v0_1000a8a0, 0
  store i32 %v0_1000a89c, i32* @r31, align 4
  br i1 %v3_1000a8a0, label %dec_label_pc_1000a8dc, label %dec_label_pc_1000a8b0

dec_label_pc_1000a8b0:                            ; preds = %dec_label_pc_1000a880
  %v1_1000a8a8 = icmp slt i32 %v0_1000a89c, 0
  %v1_1000a8b0 = add i32 %v0_1000a8a0, 4
  store i32 %v1_1000a8b0, i32* @r3, align 4
  %v2_1000a8b4 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_1000a8b4, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  br i1 %v1_1000a8a8, label %dec_label_pc_1000a8dc, label %dec_label_pc_1000a8c0

dec_label_pc_1000a8c0:                            ; preds = %dec_label_pc_1000a8b0
  %v3_1000a8c0 = load i32, i32* %stack_var_-172, align 4
  store i32 %v3_1000a8c0, i32* %r0.global-to-local, align 4
  %v2_1000a8c4 = inttoptr i32 %v0_1000a8a0 to i32*
  store i32 %v3_1000a8c0, i32* %v2_1000a8c4, align 4
  store i32 268478668, i32* @lr, align 4
  %v0_1000a8c8 = call i32 @function_1000a6a0()
  %v1_1000a8d4 = load i32, i32* @r30, align 4
  %v2_1000a8d4 = add i32 %v1_1000a8d4, 136
  %v3_1000a8d4 = inttoptr i32 %v2_1000a8d4 to i32*
  %v0_1000a8d8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a8d8 = load i32, i32* @r30, align 4
  %v2_1000a8d8 = add i32 %v1_1000a8d8, 132
  %v3_1000a8d8 = inttoptr i32 %v2_1000a8d8 to i32*
  store i32 %v0_1000a8d8, i32* %v3_1000a8d8, align 4
  %v0_1000a8e0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000a8dc

dec_label_pc_1000a8dc:                            ; preds = %dec_label_pc_1000a8b0, %dec_label_pc_1000a880, %dec_label_pc_1000a8c0
  %v0_1000a8e0 = phi i32 [ %v0_1000a89c, %dec_label_pc_1000a8b0 ], [ %v0_1000a89c, %dec_label_pc_1000a880 ], [ %v0_1000a8e0.pre, %dec_label_pc_1000a8c0 ]
  store i32 %v0_1000a834, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000a8e0

; uselistorder directives
  uselistorder i32 %v0_1000a89c, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 4, 5, 6, 2 }
  uselistorder i32 ()* @function_1000a6a0, { 1, 0, 6, 4, 2, 3, 5, 7 }
  uselistorder i32* @r5, { 19, 20, 1, 21, 22, 0, 23, 24, 25, 8, 9, 10, 28, 18, 6, 7, 29, 30, 31, 32, 4, 11, 5, 26, 27, 2, 3, 12, 16, 17, 14, 15, 13 }
  uselistorder i32 128, { 9, 10, 0, 1, 2, 3, 6, 4, 7, 5, 8 }
  uselistorder i32* @r30, { 139, 140, 141, 142, 0, 125, 1, 54, 55, 56, 143, 146, 144, 145, 126, 127, 128, 120, 121, 122, 123, 124, 129, 130, 134, 131, 132, 133, 15, 16, 17, 18, 19, 20, 21, 2, 22, 23, 24, 25, 32, 33, 34, 26, 27, 28, 3, 29, 30, 31, 6, 7, 8, 9, 10, 11, 12, 13, 14, 35, 37, 38, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 61, 62, 63, 4, 64, 65, 5, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 135, 136, 137, 138 }
  uselistorder i32* @r31, { 3, 221, 222, 223, 201, 4, 202, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 230, 231, 224, 11, 225, 226, 227, 228, 229, 203, 204, 205, 206, 207, 208, 193, 194, 195, 196, 197, 198, 199, 200, 209, 210, 211, 215, 212, 213, 214, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 89, 5, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 26, 27, 28, 29, 104, 105, 106, 107, 108, 39, 30, 31, 32, 33, 34, 35, 36, 37, 38, 12, 13, 0, 14, 6, 15, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 1, 74, 75, 76, 77, 78, 109, 110, 111, 112, 113, 114, 115, 116, 117, 2, 7, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 8, 136, 9, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 216, 10, 217, 219, 218, 220 }
  uselistorder label %dec_label_pc_1000a8dc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a880, { 1, 0 }
}

define i32 @function_1000a8f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a928.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v0_1000a90c = call i32 @function_10009c4c()
  %v2_1000a914 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_1000a914, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 31, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v3_1000a92c33 = add i32 %v2_1000a914, 124
  %v4_1000a92c34 = inttoptr i32 %v3_1000a92c33 to i32*
  store i32 0, i32* %v4_1000a92c34, align 4
  %v0_1000a93035 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a93036 = add i32 %v0_1000a93035, -1
  store i32 %v1_1000a93036, i32* %r9.global-to-local, align 4
  %v0_1000a93437 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a93438 = add i32 %v0_1000a93437, -1
  store i32 %v1_1000a93438, i32* %ctr.global-to-local, align 4
  %v2_1000a93439 = icmp eq i32 %v1_1000a93438, 0
  br i1 %v2_1000a93439, label %dec_label_pc_1000a938, label %dec_label_pc_1000a928.dec_label_pc_1000a928_crit_edge

dec_label_pc_1000a928.dec_label_pc_1000a928_crit_edge: ; preds = %dec_label_pc_1000a928.lr.ph, %dec_label_pc_1000a928.dec_label_pc_1000a928_crit_edge
  %v1_1000a93040 = phi i32 [ %v1_1000a930, %dec_label_pc_1000a928.dec_label_pc_1000a928_crit_edge ], [ %v1_1000a93036, %dec_label_pc_1000a928.lr.ph ]
  %v0_1000a92c.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a92c.pre = load i32, i32* %r29.global-to-local, align 4
  %v1_1000a928 = mul i32 %v1_1000a93040, 4
  %v3_1000a92c = add i32 %v1_1000a928, %v1_1000a92c.pre
  %v4_1000a92c = inttoptr i32 %v3_1000a92c to i32*
  store i32 %v0_1000a92c.pre, i32* %v4_1000a92c, align 4
  %v0_1000a930 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a930 = add i32 %v0_1000a930, -1
  store i32 %v1_1000a930, i32* %r9.global-to-local, align 4
  %v0_1000a934 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a934 = add i32 %v0_1000a934, -1
  store i32 %v1_1000a934, i32* %ctr.global-to-local, align 4
  %v2_1000a934 = icmp eq i32 %v1_1000a934, 0
  br i1 %v2_1000a934, label %dec_label_pc_1000a938, label %dec_label_pc_1000a928.dec_label_pc_1000a928_crit_edge

dec_label_pc_1000a938:                            ; preds = %dec_label_pc_1000a928.dec_label_pc_1000a928_crit_edge, %dec_label_pc_1000a928.lr.ph
  store i32 %v2_1000a914, i32* @r3, align 4
  store i32 6, i32* @r4, align 4
  %v0_1000a940 = call i32 @function_10009268()
  %v3_1000a944 = icmp eq i32 %v0_1000a940, 0
  br i1 %v3_1000a944, label %dec_label_pc_1000a94c, label %dec_label_pc_1000a95c

dec_label_pc_1000a94c:                            ; preds = %dec_label_pc_1000a938
  store i32 268478812, i32* @lr, align 4
  %v3_1000a958 = call i32 @function_10008724(i32 1, i32 %v2_1000a914, i32 0)
  br label %dec_label_pc_1000a95c

dec_label_pc_1000a95c:                            ; preds = %dec_label_pc_1000a938, %dec_label_pc_1000a94c
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000a960 = load i32, i32* @global_var_1001b4a4.350, align 4
  %v3_1000a964 = icmp eq i32 %v3_1000a960, 0
  br i1 %v3_1000a964, label %dec_label_pc_1000a96c, label %dec_label_pc_1000a994

dec_label_pc_1000a96c:                            ; preds = %dec_label_pc_1000a95c
  store i32 1, i32* @global_var_1001b4a4.350, align 4
  br label %dec_label_pc_1000a974

dec_label_pc_1000a974:                            ; preds = %dec_label_pc_1000a9f0, %dec_label_pc_1000a96c
  store i32 ptrtoint (i32* @global_var_1001b408.348 to i32), i32* %r29.global-to-local, align 4
  %v0_1000a980 = call i32 @function_10009c4c()
  store i32 268478860, i32* @lr, align 4
  %v1_1000a988 = call i32 @function_1000aadc(i32 6)
  %v0_1000a990 = call i32 @function_10009c4c()
  %v3_1000a998.pre = load i32, i32* @global_var_1001b4a4.350, align 4
  br label %dec_label_pc_1000a994

dec_label_pc_1000a994:                            ; preds = %dec_label_pc_1000a95c, %dec_label_pc_1000a974
  %v0_1000aa0c = phi i32 [ %v3_1000a960, %dec_label_pc_1000a95c ], [ %v3_1000a998.pre, %dec_label_pc_1000a974 ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000a99c = icmp eq i32 %v0_1000aa0c, 1
  br i1 %v3_1000a99c, label %dec_label_pc_1000a9dc.lr.ph, label %dec_label_pc_1000aa0c

dec_label_pc_1000a9dc.lr.ph:                      ; preds = %dec_label_pc_1000a994
  %v2_1000a9a8 = ptrtoint i32* %stack_var_-168 to i32
  store i32 2, i32* @global_var_1001b4a4.350, align 4
  store i32 ptrtoint (i32* @global_var_1000a9bc.352 to i32), i32* @lr, align 4
  %v3_1000a9b8 = call i32 @function_10008b88(i32 %v2_1000a9a8, i32 0, i32 140)
  store i32 %v2_1000a914, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-168, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 %v3_1000a92c33, i32* %r9.global-to-local, align 4
  %v2_1000a9e425 = add i32 %v2_1000a914, 256
  %v3_1000a9e426 = inttoptr i32 %v2_1000a9e425 to i32*
  store i32 -1, i32* %v3_1000a9e426, align 4
  %v0_1000a9e827 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a9e828 = add i32 %v0_1000a9e827, -1
  store i32 %v1_1000a9e828, i32* %r11.global-to-local, align 4
  %v0_1000a9ec29 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a9ec30 = add i32 %v0_1000a9ec29, -1
  store i32 %v1_1000a9ec30, i32* %ctr.global-to-local, align 4
  %v2_1000a9ec31 = icmp eq i32 %v1_1000a9ec30, 0
  br i1 %v2_1000a9ec31, label %dec_label_pc_1000a9f0, label %dec_label_pc_1000a9dc.dec_label_pc_1000a9dc_crit_edge

dec_label_pc_1000a9dc.dec_label_pc_1000a9dc_crit_edge: ; preds = %dec_label_pc_1000a9dc.lr.ph, %dec_label_pc_1000a9dc.dec_label_pc_1000a9dc_crit_edge
  %v1_1000a9e832 = phi i32 [ %v1_1000a9e8, %dec_label_pc_1000a9dc.dec_label_pc_1000a9dc_crit_edge ], [ %v1_1000a9e828, %dec_label_pc_1000a9dc.lr.ph ]
  %v1_1000a9e0.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_1000a9e4.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a9dc = mul i32 %v1_1000a9e832, 4
  %v2_1000a9e0 = add i32 %v1_1000a9dc, %v1_1000a9e0.pre
  store i32 %v2_1000a9e0, i32* %r9.global-to-local, align 4
  %v2_1000a9e4 = add i32 %v2_1000a9e0, 132
  %v3_1000a9e4 = inttoptr i32 %v2_1000a9e4 to i32*
  store i32 %v0_1000a9e4.pre, i32* %v3_1000a9e4, align 4
  %v0_1000a9e8 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a9e8 = add i32 %v0_1000a9e8, -1
  store i32 %v1_1000a9e8, i32* %r11.global-to-local, align 4
  %v0_1000a9ec = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a9ec = add i32 %v0_1000a9ec, -1
  store i32 %v1_1000a9ec, i32* %ctr.global-to-local, align 4
  %v2_1000a9ec = icmp eq i32 %v1_1000a9ec, 0
  br i1 %v2_1000a9ec, label %dec_label_pc_1000a9f0, label %dec_label_pc_1000a9dc.dec_label_pc_1000a9dc_crit_edge

dec_label_pc_1000a9f0:                            ; preds = %dec_label_pc_1000a9dc.dec_label_pc_1000a9dc_crit_edge, %dec_label_pc_1000a9dc.lr.ph
  store i32 268478984, i32* @lr, align 4
  %v4_1000aa04 = call i32 @function_1000a830(i32 6, i32* nonnull %stack_var_-168, i32 0)
  br label %dec_label_pc_1000a974

dec_label_pc_1000aa0c:                            ; preds = %dec_label_pc_1000a994
  %v3_1000aa0c = icmp eq i32 %v0_1000aa0c, 2
  br i1 %v3_1000aa0c, label %dec_label_pc_1000aa14, label %dec_label_pc_1000aa20

dec_label_pc_1000aa14:                            ; preds = %dec_label_pc_1000aa0c
  store i32 3, i32* @global_var_1001b4a4.350, align 4
  br label %dec_label_pc_1000aa20

dec_label_pc_1000aa20:                            ; preds = %dec_label_pc_1000aa0c, %dec_label_pc_1000aa14
  %v3_1000aa20 = phi i32 [ %v0_1000aa0c, %dec_label_pc_1000aa0c ], [ 3, %dec_label_pc_1000aa14 ]
  %v1_1000aa28 = icmp ne i32 %v3_1000aa20, 3
  call void @__pseudo_cond_branch(i1 %v1_1000aa28, i32 268479036)
  store i32 4, i32* @global_var_1001b4a4.350, align 4
  %v1_1000aa38 = call i32 @function_10009fec(i32 127)
  ret i32 %v1_1000aa38

; uselistorder directives
  uselistorder i32 %v1_1000a9ec, { 1, 0 }
  uselistorder i32 %v1_1000a9e8, { 1, 0 }
  uselistorder i32 %v1_1000a934, { 1, 0 }
  uselistorder i32 %v1_1000a930, { 1, 0 }
  uselistorder i32 %v2_1000a914, { 0, 2, 3, 4, 1, 5 }
  uselistorder i32* %r9.global-to-local, { 4, 0, 5, 6, 8, 7, 1, 2, 3 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 0, 1, 2, 5, 6 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 0, 2, 3, 9, 8, 1, 4, 5 }
  uselistorder i32 (i32)* @function_10009fec, { 1, 0 }
  uselistorder i32 127, { 0, 1, 3, 2 }
  uselistorder i32 3, { 0, 7, 36, 114, 115, 116, 117, 118, 110, 112, 113, 67, 120, 119, 9, 121, 122, 123, 88, 89, 1, 8, 37, 38, 69, 70, 71, 72, 2, 73, 75, 76, 10, 39, 40, 41, 42, 43, 44, 45, 46, 11, 12, 77, 78, 13, 47, 79, 14, 80, 74, 68, 48, 3, 49, 81, 82, 84, 85, 83, 86, 87, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 4, 90, 62, 91, 15, 63, 5, 6, 64, 92, 93, 17, 94, 65, 16, 95, 96, 97, 18, 19, 20, 98, 99, 100, 23, 22, 21, 101, 102, 26, 25, 24, 103, 104, 66, 105, 29, 27, 28, 106, 107, 32, 31, 30, 108, 109, 35, 34, 33, 111 }
  uselistorder i32 (i32, i32*, i32)* @function_1000a830, { 1, 2, 0 }
  uselistorder i32 132, { 1, 2, 3, 0 }
  uselistorder i32 256, { 60, 1, 2, 3, 4, 5, 6, 7, 8, 9, 66, 67, 68, 10, 61, 11, 70, 12, 13, 14, 15, 16, 71, 17, 63, 72, 64, 73, 69, 18, 19, 20, 0, 65, 21, 22, 23, 24, 25, 26, 27, 74, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 62, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59 }
  uselistorder i32 (i32, i32, i32)* @function_10008b88, { 1, 6, 9, 0, 2, 8, 7, 5, 4, 3 }
  uselistorder i32 2, { 195, 34, 0, 1, 54, 55, 196, 56, 197, 57, 198, 35, 105, 117, 199, 106, 23, 58, 36, 59, 25, 24, 26, 60, 61, 107, 38, 37, 108, 109, 62, 110, 41, 2, 3, 111, 112, 32, 113, 63, 64, 65, 66, 67, 39, 68, 40, 114, 69, 104, 5, 4, 71, 70, 72, 27, 75, 76, 74, 73, 42, 6, 7, 8, 115, 116, 77, 43, 78, 79, 81, 80, 82, 45, 44, 83, 84, 46, 85, 86, 28, 33, 118, 182, 9, 29, 183, 10, 119, 120, 121, 122, 123, 124, 125, 126, 87, 127, 128, 47, 129, 130, 131, 132, 133, 134, 135, 89, 136, 88, 137, 138, 139, 140, 141, 142, 143, 144, 90, 145, 48, 93, 94, 146, 147, 91, 92, 148, 149, 150, 151, 152, 153, 154, 155, 156, 11, 12, 13, 14, 15, 16, 95, 157, 49, 158, 159, 160, 161, 162, 17, 18, 19, 20, 21, 22, 96, 163, 50, 164, 165, 166, 167, 168, 97, 169, 170, 98, 171, 99, 172, 51, 173, 174, 175, 176, 178, 179, 180, 177, 100, 181, 52, 184, 185, 186, 101, 102, 187, 189, 190, 191, 188, 103, 192, 53, 193, 30, 31, 194 }
  uselistorder i32* @global_var_1001b4a4.350, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 268566528, { 44, 45, 0, 46, 2, 1, 3, 41, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 4, 37, 5, 38, 39, 40, 42, 43 }
  uselistorder i32 (i32, i32, i32)* @function_10008724, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 ()* @function_10009268, { 2, 1, 0, 4, 3 }
  uselistorder i32* @r4, { 65, 66, 67, 62, 63, 68, 34, 1, 35, 6, 36, 75, 74, 4, 3, 69, 71, 72, 61, 70, 11, 5, 64, 12, 13, 14, 7, 37, 38, 73, 15, 16, 17, 39, 21, 22, 23, 18, 19, 20, 8, 9, 10, 58, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 0, 2, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 52, 54, 55, 56, 57, 59, 60 }
  uselistorder i32 6, { 12, 13, 59, 1, 14, 15, 28, 16, 17, 29, 30, 2, 31, 3, 0, 18, 19, 20, 21, 32, 22, 33, 34, 35, 4, 36, 37, 38, 5, 39, 40, 41, 42, 6, 7, 43, 44, 23, 8, 45, 46, 24, 9, 47, 25, 48, 49, 50, 51, 26, 10, 52, 53, 54, 55, 56, 27, 11, 57, 58 }
  uselistorder i32 4, { 116, 0, 1, 333, 334, 335, 336, 337, 63, 64, 338, 339, 117, 340, 341, 2, 184, 185, 139, 140, 186, 187, 189, 342, 349, 3, 4, 5, 6, 7, 310, 312, 311, 308, 309, 285, 286, 287, 288, 313, 314, 315, 316, 317, 318, 319, 320, 321, 8, 147, 9, 73, 148, 149, 343, 344, 345, 118, 346, 347, 348, 10, 188, 119, 11, 190, 191, 192, 193, 194, 120, 121, 150, 122, 151, 152, 153, 78, 71, 154, 155, 156, 74, 12, 158, 159, 160, 161, 157, 162, 163, 65, 123, 124, 75, 76, 77, 170, 171, 172, 173, 174, 169, 164, 165, 166, 167, 168, 141, 13, 142, 14, 143, 144, 145, 66, 125, 146, 175, 126, 80, 79, 81, 176, 177, 178, 67, 179, 68, 180, 181, 182, 183, 127, 128, 129, 69, 130, 195, 196, 197, 198, 199, 15, 200, 201, 202, 203, 204, 85, 205, 16, 17, 84, 206, 18, 82, 83, 207, 208, 89, 209, 19, 20, 210, 21, 211, 212, 213, 90, 214, 22, 23, 215, 88, 216, 86, 217, 87, 218, 219, 220, 95, 24, 25, 221, 222, 223, 26, 224, 225, 226, 94, 27, 28, 227, 93, 228, 91, 92, 229, 230, 231, 232, 233, 234, 235, 131, 96, 236, 237, 29, 238, 239, 72, 240, 30, 31, 241, 99, 242, 97, 98, 243, 244, 32, 245, 246, 103, 247, 248, 33, 34, 102, 249, 100, 101, 250, 251, 252, 253, 132, 254, 35, 255, 256, 36, 257, 37, 258, 259, 260, 261, 105, 262, 104, 133, 263, 264, 265, 266, 38, 267, 269, 270, 109, 271, 272, 110, 39, 40, 134, 268, 108, 106, 107, 273, 274, 275, 276, 277, 135, 136, 41, 278, 280, 281, 114, 282, 283, 115, 42, 43, 137, 279, 284, 113, 111, 112, 44, 289, 290, 45, 46, 291, 292, 47, 48, 293, 294, 49, 50, 295, 296, 51, 297, 52, 298, 299, 53, 54, 300, 301, 55, 56, 302, 303, 57, 58, 304, 305, 59, 60, 306, 307, 61, 322, 62, 323, 324, 325, 326, 327, 328, 329, 70, 330, 331, 332, 138 }
  uselistorder i32 32, { 19, 20, 49, 36, 37, 27, 28, 15, 16, 29, 0, 1, 2, 17, 38, 18, 39, 3, 21, 4, 5, 6, 22, 32, 23, 33, 30, 7, 8, 9, 24, 31, 10, 11, 12, 13, 14, 25, 26, 34, 35, 40, 41, 42, 43, 44, 45, 46, 47, 48 }
  uselistorder i32 31, { 0, 1, 25, 26, 14, 27, 28, 2, 3, 4, 29, 30, 15, 16, 17, 18, 21, 22, 19, 20, 7, 8, 9, 10, 11, 12, 5, 6, 13, 23, 24 }
  uselistorder i32 ()* @function_10009c4c, { 7, 6, 5, 0, 18, 17, 16, 15, 4, 3, 2, 1, 14, 13, 12, 11, 10, 9, 8, 21, 20, 19 }
  uselistorder label %dec_label_pc_1000aa20, { 1, 0 }
  uselistorder label %dec_label_pc_1000a9dc.dec_label_pc_1000a9dc_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000a994, { 1, 0 }
  uselistorder label %dec_label_pc_1000a95c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a928.dec_label_pc_1000a928_crit_edge, { 1, 0 }
}

define i32 @function_1000aa44(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000aa44:
  %v1_1000aa44 = add i32 %arg1, 28
  %v2_1000aa44 = inttoptr i32 %v1_1000aa44 to i32*
  %v3_1000aa44 = load i32, i32* %v2_1000aa44, align 4
  store i32 %v3_1000aa44, i32* @global_var_1001b4a8.353, align 4
  %v1_1000aa54 = add i32 %arg1, 44
  %v2_1000aa54 = inttoptr i32 %v1_1000aa54 to i32*
  %v3_1000aa54 = load i32, i32* %v2_1000aa54, align 4
  store i32 %v3_1000aa54, i32* @global_var_1001b4ac.354, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 44, { 7, 0, 5, 6, 1, 2, 3, 4 }
  uselistorder i32 28, { 41, 12, 13, 2, 3, 14, 40, 6, 8, 9, 10, 11, 7, 4, 5, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 0, 36, 37, 38, 1, 39 }
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_1000aa60(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000aa60:
  store i32 %arg1, i32* @global_var_1001b4b0.346, align 4
  %v0_1000aa88 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 true, i32 %v0_1000aa88)
  %v1_1000aa90 = call i32 @function_1000ab0c(i32 12)
  ret i32 %v1_1000aa90

; uselistorder directives
  uselistorder i32 12, { 14, 41, 42, 24, 25, 43, 44, 45, 46, 96, 97, 98, 99, 6, 94, 100, 0, 1, 8, 95, 5, 15, 16, 9, 26, 47, 48, 17, 49, 50, 51, 18, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 20, 40, 39, 36, 7, 89, 52, 21, 53, 22, 54, 23, 55, 10, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 11, 70, 71, 72, 73, 74, 75, 76, 12, 77, 78, 79, 80, 81, 82, 83, 84, 85, 13, 86, 87, 88, 90, 91, 92, 93, 2, 3, 4 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 4, 10, 8, 11, 5, 12, 7, 0, 6, 3, 2, 1, 9 }
  uselistorder i1 true, { 1, 0 }
  uselistorder i32* @global_var_1001b4b0.346, { 1, 0, 2 }
}

define i32 @function_1000aa94() local_unnamed_addr {
dec_label_pc_1000aa94:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000aaac = call i32 @__asm_mfcr()
  %v1_1000aab0 = and i32 %v0_1000aaac, 268435456
  %v3_1000aab0 = icmp eq i32 %v1_1000aab0, 0
  store i32 %v0_1000aaac, i32* %r31.global-to-local, align 4
  br i1 %v3_1000aab0, label %dec_label_pc_1000aac8, label %dec_label_pc_1000aabc

dec_label_pc_1000aabc:                            ; preds = %dec_label_pc_1000aa94
  %v0_1000aabc = call i32 @function_10008aa0()
  %v0_1000aac0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000aac0 = inttoptr i32 %v0_1000aabc to i32*
  store i32 %v0_1000aac0, i32* %v2_1000aac0, align 4
  br label %dec_label_pc_1000aac8

dec_label_pc_1000aac8:                            ; preds = %dec_label_pc_1000aa94, %dec_label_pc_1000aabc
  %v0_1000aad8 = phi i32 [ %v0_1000aaac, %dec_label_pc_1000aa94 ], [ -1, %dec_label_pc_1000aabc ]
  ret i32 %v0_1000aad8

; uselistorder directives
  uselistorder i32 268435456, { 29, 12, 30, 19, 31, 32, 33, 34, 20, 21, 35, 36, 13, 24, 37, 14, 15, 22, 23, 16, 38, 27, 17, 28, 26, 25, 39, 40, 18, 2, 0, 1, 5, 3, 4, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 ()* @__asm_mfcr, { 12, 43, 11, 36, 10, 9, 8, 7, 35, 34, 6, 5, 4, 42, 20, 3, 41, 40, 33, 32, 39, 2, 14, 38, 13, 16, 19, 1, 0, 37, 44, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 18, 17, 15 }
  uselistorder label %dec_label_pc_1000aac8, { 1, 0 }
}

define i32 @function_1000aadc(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000aadc:
  %v0_1000aadc = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 268479220, i32* @lr, align 4
  %v0_1000aaf0 = call i32 @function_1000845c()
  %v0_1000aaf8 = load i32, i32* @r29, align 4
  store i32 %v0_1000aadc, i32* @lr, align 4
  %v2_1000ab08 = call i32 @function_100084ec(i32 %v0_1000aaf0, i32 %v0_1000aaf8)
  ret i32 %v2_1000ab08

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_100084ec, { 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_1000ab0c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000ab0c:
  store i32 %arg1, i32* @r29, align 4
  %v0_1000ab20 = call i32 @function_10008aa0()
  %v0_1000ab24 = load i32, i32* @r29, align 4
  %v2_1000ab24 = inttoptr i32 %v0_1000ab20 to i32*
  store i32 %v0_1000ab24, i32* %v2_1000ab24, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 ()* @function_10008aa0, { 22, 15, 49, 14, 33, 13, 12, 11, 10, 32, 31, 30, 9, 8, 3, 7, 6, 20, 21, 48, 47, 46, 45, 29, 28, 26, 44, 24, 5, 4, 43, 42, 25, 27, 41, 2, 17, 40, 16, 19, 23, 1, 0, 39, 38, 37, 36, 35, 34, 18 }
  uselistorder i32* @r29, { 309, 310, 332, 333, 334, 11, 12, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 335, 336, 337, 338, 339, 311, 312, 313, 314, 307, 308, 315, 1, 316, 317, 318, 319, 320, 321, 13, 14, 15, 119, 120, 121, 122, 123, 124, 125, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 81, 82, 83, 84, 85, 86, 75, 76, 77, 78, 79, 80, 2, 5, 6, 7, 3, 8, 9, 10, 87, 0, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 189, 185, 186, 187, 190, 193, 194, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 263, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 324, 322, 323, 325, 326, 327, 4, 328, 329, 330, 331 }
}

define i32 @function_1000ab40(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000ab40:
  %r31.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1001b2c0.334 to i32), i32* %r31.global-to-local, align 4
  %v3_1000ab5c = load i32, i32* @global_var_1001b2c0.334, align 4
  %v3_1000ab60 = icmp eq i32 %v3_1000ab5c, -1
  br i1 %v3_1000ab60, label %dec_label_pc_1000ab7c, label %dec_label_pc_1000ab68

dec_label_pc_1000ab68:                            ; preds = %dec_label_pc_1000ab40, %dec_label_pc_1000ab68
  %v0_1000ab68 = phi i32 [ %v3_1000ab70, %dec_label_pc_1000ab68 ], [ %v3_1000ab5c, %dec_label_pc_1000ab40 ]
  call void @__pseudo_call(i32 %v0_1000ab68)
  %v0_1000ab70 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000ab70 = add i32 %v0_1000ab70, -4
  %v2_1000ab70 = inttoptr i32 %v1_1000ab70 to i32*
  %v3_1000ab70 = load i32, i32* %v2_1000ab70, align 4
  store i32 %v1_1000ab70, i32* %r31.global-to-local, align 4
  %v3_1000ab74 = icmp eq i32 %v3_1000ab70, -1
  br i1 %v3_1000ab74, label %dec_label_pc_1000ab7c, label %dec_label_pc_1000ab68

dec_label_pc_1000ab7c:                            ; preds = %dec_label_pc_1000ab68, %dec_label_pc_1000ab40
  %v0_1000ab8c = load i32, i32* @r3, align 4
  ret i32 %v0_1000ab8c

; uselistorder directives
  uselistorder i32 %v3_1000ab70, { 1, 0 }
  uselistorder i32 -4, { 0, 12, 13, 14, 6, 7, 8, 9, 10, 11, 15, 16, 1, 2, 3, 4, 5 }
  uselistorder void (i32)* @__pseudo_call, { 1, 3, 4, 2, 0 }
  uselistorder i32 -1, { 134, 135, 0, 38, 89, 254, 14, 15, 16, 255, 90, 256, 12, 13, 91, 92, 17, 93, 39, 40, 248, 77, 41, 191, 42, 43, 44, 45, 46, 192, 193, 194, 195, 196, 201, 47, 267, 265, 48, 257, 258, 78, 94, 259, 20, 21, 95, 264, 18, 19, 249, 250, 34, 136, 263, 260, 49, 145, 96, 146, 22, 23, 147, 148, 149, 36, 50, 150, 151, 97, 98, 99, 100, 197, 198, 24, 25, 26, 101, 199, 200, 102, 79, 76, 202, 203, 51, 52, 53, 261, 262, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 266, 67, 152, 103, 27, 204, 205, 1, 104, 105, 153, 68, 69, 106, 2, 107, 28, 108, 70, 109, 29, 206, 80, 154, 110, 81, 155, 156, 157, 111, 158, 159, 71, 160, 112, 113, 30, 114, 163, 164, 165, 115, 72, 166, 167, 168, 116, 3, 117, 4, 161, 162, 137, 75, 5, 138, 139, 118, 31, 140, 141, 142, 143, 144, 119, 37, 169, 82, 170, 171, 84, 172, 173, 83, 174, 175, 176, 85, 177, 178, 179, 73, 180, 181, 120, 32, 121, 33, 182, 183, 184, 185, 74, 186, 187, 188, 122, 189, 190, 35, 207, 208, 209, 210, 211, 123, 124, 125, 126, 212, 213, 214, 215, 127, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 6, 238, 7, 8, 239, 240, 241, 242, 9, 243, 10, 11, 244, 245, 246, 247, 128, 251, 252, 129, 253, 130, 131, 132, 133, 86, 87, 88 }
  uselistorder i32 1, { 94, 446, 912, 553, 554, 629, 628, 270, 266, 269, 268, 265, 267, 632, 631, 630, 16, 0, 908, 909, 910, 911, 482, 17, 913, 914, 915, 916, 450, 449, 448, 7, 8, 10, 11, 9, 50, 150, 633, 73, 74, 370, 274, 443, 447, 635, 634, 430, 429, 431, 427, 428, 425, 426, 555, 121, 122, 124, 123, 636, 239, 329, 556, 637, 167, 165, 164, 166, 557, 504, 920, 917, 641, 640, 639, 638, 43, 47, 44, 42, 46, 45, 558, 919, 642, 147, 148, 149, 36, 37, 31, 32, 30, 48, 469, 643, 440, 918, 445, 559, 560, 646, 645, 644, 58, 55, 56, 57, 54, 59, 49, 505, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 757, 661, 660, 412, 413, 663, 662, 34, 33, 35, 921, 922, 410, 408, 411, 409, 161, 162, 157, 160, 159, 158, 664, 561, 665, 39, 38, 40, 562, 666, 77, 78, 506, 667, 41, 53, 451, 341, 416, 263, 72, 151, 414, 668, 342, 271, 415, 442, 441, 444, 669, 369, 670, 343, 758, 671, 156, 794, 795, 461, 462, 474, 796, 797, 470, 798, 674, 673, 672, 19, 22, 23, 20, 21, 25, 18, 24, 818, 819, 452, 820, 821, 676, 675, 799, 800, 801, 563, 802, 26, 27, 28, 29, 905, 906, 484, 483, 907, 192, 734, 736, 735, 803, 463, 433, 434, 432, 896, 146, 145, 804, 805, 464, 465, 475, 806, 15, 13, 12, 14, 879, 417, 418, 419, 420, 843, 141, 144, 143, 142, 822, 152, 155, 154, 153, 51, 52, 476, 516, 759, 760, 515, 514, 507, 761, 564, 762, 763, 565, 764, 765, 766, 566, 567, 770, 767, 768, 769, 772, 568, 773, 569, 570, 774, 571, 572, 775, 573, 574, 575, 576, 577, 578, 579, 508, 509, 510, 511, 512, 580, 513, 781, 782, 490, 621, 684, 683, 682, 681, 680, 679, 678, 677, 211, 199, 204, 205, 206, 208, 207, 201, 198, 203, 193, 197, 196, 195, 194, 200, 214, 213, 212, 202, 210, 209, 776, 777, 581, 778, 779, 582, 780, 381, 372, 374, 377, 379, 378, 380, 375, 373, 382, 376, 771, 583, 435, 436, 473, 737, 738, 742, 739, 745, 740, 453, 454, 741, 471, 455, 456, 466, 457, 458, 743, 744, 472, 459, 460, 467, 746, 584, 747, 748, 585, 749, 750, 751, 754, 755, 752, 753, 477, 756, 517, 692, 691, 690, 689, 688, 622, 687, 686, 685, 139, 132, 130, 135, 131, 134, 133, 127, 125, 126, 128, 137, 138, 136, 140, 129, 880, 625, 439, 437, 438, 587, 519, 783, 518, 784, 586, 588, 786, 787, 785, 485, 788, 589, 590, 591, 592, 593, 594, 595, 596, 597, 789, 491, 704, 703, 702, 701, 626, 700, 699, 698, 697, 696, 695, 694, 693, 70, 67, 68, 5, 6, 66, 64, 65, 71, 69, 598, 521, 520, 486, 706, 705, 599, 600, 603, 601, 790, 791, 602, 792, 468, 793, 492, 709, 708, 707, 424, 421, 422, 423, 807, 604, 808, 809, 2, 810, 811, 3, 487, 812, 813, 1, 814, 815, 816, 817, 712, 711, 623, 624, 710, 76, 75, 881, 884, 882, 488, 883, 264, 885, 886, 887, 605, 606, 823, 824, 825, 826, 827, 828, 829, 830, 833, 831, 832, 834, 835, 607, 836, 837, 493, 838, 839, 840, 489, 841, 842, 715, 714, 713, 308, 300, 305, 301, 314, 325, 311, 313, 326, 321, 317, 306, 318, 323, 327, 307, 324, 319, 320, 322, 310, 309, 328, 312, 316, 315, 304, 303, 302, 299, 844, 845, 608, 846, 847, 848, 609, 478, 494, 849, 717, 716, 347, 346, 353, 361, 362, 364, 344, 349, 365, 366, 356, 359, 350, 354, 363, 367, 358, 360, 355, 357, 348, 345, 368, 352, 351, 850, 851, 610, 852, 853, 854, 611, 612, 495, 855, 522, 523, 718, 397, 392, 396, 404, 383, 405, 398, 399, 401, 390, 391, 393, 403, 406, 395, 400, 402, 394, 387, 386, 407, 384, 385, 389, 388, 856, 857, 527, 524, 613, 525, 526, 719, 339, 330, 331, 340, 337, 332, 338, 336, 335, 334, 333, 858, 859, 860, 861, 614, 479, 496, 862, 528, 529, 720, 106, 102, 104, 117, 97, 98, 118, 103, 116, 119, 113, 114, 115, 112, 111, 105, 107, 108, 109, 110, 96, 120, 99, 95, 101, 100, 863, 864, 865, 615, 480, 497, 866, 530, 531, 532, 721, 283, 281, 295, 275, 296, 285, 284, 286, 287, 282, 294, 297, 291, 292, 293, 290, 289, 288, 277, 298, 278, 276, 280, 279, 867, 868, 869, 870, 616, 617, 481, 498, 871, 533, 534, 535, 536, 537, 725, 724, 723, 722, 226, 223, 231, 238, 224, 219, 228, 220, 236, 217, 221, 216, 218, 237, 234, 235, 225, 222, 233, 232, 227, 215, 230, 229, 872, 873, 874, 876, 877, 875, 499, 878, 538, 539, 540, 726, 247, 241, 249, 262, 261, 255, 253, 250, 251, 246, 254, 256, 248, 257, 245, 252, 242, 258, 260, 259, 243, 244, 240, 888, 889, 890, 892, 893, 891, 500, 894, 541, 542, 543, 731, 730, 729, 728, 727, 179, 170, 181, 187, 169, 188, 182, 185, 183, 189, 176, 186, 190, 180, 174, 175, 184, 171, 191, 178, 177, 172, 173, 168, 4, 544, 545, 546, 547, 548, 549, 550, 895, 551, 552, 62, 61, 60, 63, 897, 898, 618, 619, 900, 620, 901, 902, 899, 903, 904, 82, 86, 88, 87, 91, 93, 79, 92, 80, 85, 84, 83, 81, 90, 89, 501, 371, 502, 272, 503, 273, 733, 732, 163, 627 }
  uselistorder label %dec_label_pc_1000ab68, { 1, 0 }
}

define i32 @function_1000ab90() local_unnamed_addr {
dec_label_pc_1000ab90:
  %v0_1000aba8 = load i32, i32* @r3, align 4
  ret i32 %v0_1000aba8

; uselistorder directives
  uselistorder i32* @r3, { 20, 9, 153, 154, 155, 10, 16, 156, 89, 0, 90, 28, 163, 15, 17, 3, 22, 157, 159, 29, 160, 161, 162, 144, 27, 145, 8, 14, 146, 148, 147, 158, 35, 129, 36, 37, 91, 23, 13, 92, 93, 94, 95, 96, 97, 98, 99, 100, 11, 26, 4, 12, 101, 1, 2, 5, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 67, 68, 69, 70, 71, 72, 64, 6, 65, 66, 30, 31, 25, 32, 33, 34, 138, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 21, 83, 84, 85, 86, 87, 88, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 139, 140, 7, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 133, 132, 134, 135, 136, 137, 141, 142, 143, 149, 150, 151, 152, 18, 19, 24 }
}

define i32 @function_1000abac() local_unnamed_addr {
entry:
  store i32 268479420, i32* @lr, align 4
  %v0_1000abb8 = call i32 @function_100000b8()
  ret i32 %v0_1000abb8

; uselistorder directives
  uselistorder i32 0, { 819, 203, 820, 38, 204, 142, 821, 205, 822, 823, 36, 37, 824, 825, 826, 0, 809, 810, 811, 80, 79, 812, 827, 828, 829, 39, 830, 831, 832, 833, 513, 206, 207, 391, 755, 756, 143, 757, 834, 21, 514, 515, 835, 836, 837, 838, 208, 516, 517, 518, 519, 520, 521, 522, 81, 530, 531, 839, 840, 209, 858, 859, 210, 864, 866, 135, 867, 211, 865, 1, 841, 842, 82, 843, 844, 212, 144, 213, 845, 846, 42, 43, 847, 848, 849, 214, 852, 853, 854, 40, 41, 855, 856, 857, 760, 762, 25, 763, 44, 764, 761, 758, 759, 2, 746, 742, 743, 744, 745, 136, 3, 767, 765, 766, 137, 768, 769, 747, 748, 749, 750, 751, 215, 752, 753, 770, 771, 216, 772, 145, 773, 782, 783, 83, 774, 775, 776, 777, 778, 779, 780, 781, 4, 5, 364, 392, 393, 394, 45, 46, 395, 6, 217, 813, 396, 397, 398, 399, 400, 401, 402, 403, 218, 404, 868, 869, 870, 871, 872, 873, 874, 875, 523, 524, 47, 525, 526, 527, 528, 529, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 405, 718, 850, 851, 406, 407, 544, 576, 408, 860, 84, 861, 817, 409, 818, 784, 719, 862, 863, 410, 411, 545, 546, 547, 48, 85, 548, 549, 64, 550, 552, 551, 141, 577, 70, 578, 26, 27, 579, 71, 28, 86, 219, 220, 22, 23, 553, 802, 803, 804, 805, 90, 88, 87, 806, 89, 7, 92, 91, 371, 93, 8, 9, 554, 49, 555, 556, 557, 785, 94, 786, 787, 558, 559, 50, 95, 560, 10, 96, 610, 97, 580, 412, 413, 414, 101, 415, 416, 417, 418, 133, 419, 221, 420, 421, 425, 422, 99, 372, 423, 100, 424, 222, 426, 427, 428, 429, 430, 102, 431, 432, 146, 433, 434, 365, 72, 435, 436, 437, 438, 439, 440, 65, 66, 441, 442, 443, 51, 52, 444, 445, 147, 148, 446, 447, 223, 448, 450, 451, 452, 453, 454, 149, 150, 459, 460, 224, 461, 455, 456, 457, 458, 462, 24, 366, 367, 463, 464, 98, 465, 466, 467, 472, 473, 474, 475, 151, 476, 477, 103, 478, 479, 480, 481, 482, 483, 19, 468, 104, 469, 470, 105, 471, 225, 449, 75, 373, 374, 29, 226, 73, 30, 31, 227, 74, 32, 375, 11, 155, 154, 376, 377, 378, 379, 380, 381, 153, 152, 382, 53, 54, 383, 384, 228, 106, 385, 386, 107, 387, 108, 388, 109, 389, 390, 720, 484, 485, 486, 487, 134, 488, 489, 229, 490, 491, 492, 493, 494, 156, 495, 496, 55, 56, 497, 498, 499, 57, 58, 500, 501, 502, 12, 503, 230, 231, 232, 504, 233, 18, 17, 16, 15, 14, 157, 505, 234, 20, 508, 506, 111, 110, 139, 235, 507, 138, 509, 510, 511, 512, 33, 561, 572, 562, 13, 563, 564, 565, 566, 140, 567, 568, 569, 570, 571, 34, 112, 61, 60, 113, 573, 59, 238, 574, 236, 237, 158, 575, 77, 721, 722, 76, 723, 114, 724, 78, 725, 115, 581, 582, 583, 116, 584, 585, 586, 239, 587, 588, 63, 589, 62, 590, 591, 592, 593, 594, 595, 596, 240, 597, 598, 599, 163, 600, 601, 602, 241, 603, 67, 68, 604, 605, 117, 606, 607, 608, 242, 159, 160, 161, 162, 243, 609, 611, 612, 118, 613, 614, 244, 615, 616, 617, 618, 619, 165, 620, 164, 621, 245, 622, 119, 623, 624, 625, 626, 627, 628, 120, 629, 630, 246, 632, 631, 633, 634, 635, 247, 636, 637, 638, 166, 639, 167, 168, 169, 248, 640, 124, 123, 641, 642, 643, 122, 121, 644, 645, 646, 647, 648, 649, 249, 650, 170, 651, 652, 125, 653, 655, 250, 656, 654, 657, 658, 659, 660, 661, 251, 662, 663, 664, 178, 665, 171, 172, 173, 174, 175, 176, 177, 252, 666, 667, 668, 669, 126, 670, 671, 253, 673, 672, 674, 675, 676, 677, 678, 679, 254, 680, 681, 682, 187, 683, 179, 180, 181, 182, 183, 184, 185, 186, 255, 684, 685, 686, 687, 689, 127, 691, 692, 693, 694, 256, 695, 257, 696, 697, 258, 688, 690, 698, 699, 188, 700, 189, 190, 191, 192, 193, 194, 128, 701, 702, 703, 704, 129, 705, 707, 259, 706, 708, 709, 710, 711, 712, 713, 714, 715, 198, 716, 195, 196, 197, 130, 717, 726, 727, 728, 131, 729, 730, 260, 731, 732, 733, 734, 735, 736, 737, 738, 739, 202, 740, 199, 200, 201, 132, 741, 754, 788, 35, 789, 790, 69, 791, 792, 793, 261, 794, 795, 796, 797, 798, 799, 800, 801, 807, 808, 814, 815, 816, 876, 877, 878, 368, 369, 370, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897 }
  uselistorder i32* @lr, { 6, 705, 706, 707, 676, 708, 709, 710, 711, 712, 713, 714, 715, 701, 39, 716, 351, 352, 7, 677, 678, 353, 354, 355, 356, 357, 358, 725, 726, 730, 731, 732, 733, 734, 735, 736, 738, 727, 729, 717, 718, 719, 720, 721, 722, 723, 724, 679, 681, 680, 651, 652, 653, 654, 655, 656, 682, 683, 684, 685, 689, 686, 687, 688, 40, 41, 622, 623, 624, 492, 566, 42, 317, 43, 44, 567, 493, 45, 702, 46, 47, 48, 49, 50, 51, 52, 737, 53, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 728, 54, 55, 56, 57, 58, 59, 373, 699, 374, 690, 625, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 452, 421, 108, 109, 110, 111, 112, 113, 8, 9, 10, 11, 12, 13, 14, 15, 114, 115, 116, 117, 118, 119, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 199, 200, 201, 202, 203, 204, 205, 206, 120, 121, 122, 123, 124, 125, 218, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 626, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 342, 324, 325, 326, 327, 328, 330, 329, 0, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 2, 343, 344, 345, 346, 347, 348, 349, 350, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 3, 405, 406, 407, 408, 409, 410, 1, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 494, 495, 496, 497, 498, 500, 501, 502, 499, 504, 505, 506, 503, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 691, 692, 693, 694, 695, 696, 697, 698, 700, 703, 704, 4, 5 }
}

declare i32 @__asm_rlwinm(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwinm.(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwimi(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_mfcr() local_unnamed_addr

declare %0 @__asm_mtcrf(i32, i32) local_unnamed_addr

declare i32 @unknown_0(i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8 @__decompiler_undefined_function_1() local_unnamed_addr

declare i16 @__decompiler_undefined_function_2() local_unnamed_addr

declare i8* @__decompiler_undefined_function_3() local_unnamed_addr

declare i64 @__decompiler_undefined_function_4() local_unnamed_addr
